1
00:00:37,720 --> 00:00:41,890
we're probably gonna have plenty of time

2
00:00:42,940 --> 00:00:48,709
put together a lot of slides there at

3
00:00:45,080 --> 00:00:51,920
the end so see how it goes so hey this

4
00:00:48,710 --> 00:00:53,839
is the MLS working group it's Friday

5
00:00:51,920 --> 00:00:55,820
morning so you don't have any place to

6
00:00:53,839 --> 00:01:00,229
go feel free to stay just don't be this

7
00:00:55,820 --> 00:01:02,360
just don't be disruptive yeah come by

8
00:01:00,229 --> 00:01:04,459
but the note well which brings us to the

9
00:01:02,360 --> 00:01:05,810
next thing they don't well it's Friday

10
00:01:04,459 --> 00:01:08,649
morning you should have seen this

11
00:01:05,810 --> 00:01:10,549
already a bunch of times but basically

12
00:01:08,649 --> 00:01:11,689
if you're here you and your here to

13
00:01:10,549 --> 00:01:13,789
participate you're gonna follow the

14
00:01:11,689 --> 00:01:16,089
acting process and rules there are stuff

15
00:01:13,789 --> 00:01:18,530
about IPR if you know things about

16
00:01:16,090 --> 00:01:20,600
something like and you're here you're

17
00:01:18,530 --> 00:01:22,789
supposed to disclose them you will be

18
00:01:20,600 --> 00:01:23,990
recorded please be nice and all that

19
00:01:22,789 --> 00:01:25,820
good stuff if you want some more

20
00:01:23,990 --> 00:01:27,199
information there's a bunch of BCPs up

21
00:01:25,820 --> 00:01:31,250
there and a bunch of links you can read

22
00:01:27,200 --> 00:01:34,429
them sorry I'm Sean Turner this is

23
00:01:31,250 --> 00:01:37,490
Mikkel oven where the chairs requests

24
00:01:34,429 --> 00:01:39,770
minute takers I think I know like almost

25
00:01:37,490 --> 00:01:41,499
everyone in this room so hopefully some

26
00:01:39,770 --> 00:01:47,658
of the volunteer before I pick them

27
00:01:41,499 --> 00:01:52,130
going what's going twice anybody anybody

28
00:01:47,659 --> 00:01:53,539
anybody hey I thought you were going to

29
00:01:52,130 --> 00:01:54,270
the microphones but that's gonna be

30
00:01:53,539 --> 00:01:56,350
awesome

31
00:01:54,270 --> 00:02:03,009
[Music]

32
00:01:56,350 --> 00:02:03,009
Joe Hall you gotta leave Joe solloway

33
00:02:06,759 --> 00:02:10,538
you are next Melanie

34
00:02:13,280 --> 00:02:22,080
Stephen Farrell would you do it no you

35
00:02:19,710 --> 00:02:25,500
got a little thing - I don't know come

36
00:02:22,080 --> 00:02:27,530
on Matt Matt thank you very much all

37
00:02:25,500 --> 00:02:27,530
right

38
00:02:28,430 --> 00:02:35,400
Jabra scribe is anybody in the gentleman

39
00:02:33,020 --> 00:02:36,980
alright thank you very much the blue

40
00:02:35,400 --> 00:02:39,090
seats are going around police line up

41
00:02:36,980 --> 00:02:39,869
when you're at the microphone can state

42
00:02:39,090 --> 00:02:42,050
your name

43
00:02:39,870 --> 00:02:45,480
basically that's for the minute takers

44
00:02:42,050 --> 00:02:46,650
try to speak as you know not too quick

45
00:02:45,480 --> 00:02:48,869
of a cadence I have the same problem

46
00:02:46,650 --> 00:02:50,250
some others do it well let's keep it

47
00:02:48,870 --> 00:02:51,510
professional at the mic this working

48
00:02:50,250 --> 00:02:53,870
group has not suffered that problem

49
00:02:51,510 --> 00:02:57,750
forever actually so thank you very much

50
00:02:53,870 --> 00:02:59,070
our agenda we cancelled Thursday we have

51
00:02:57,750 --> 00:03:00,750
a very intimate group here on Friday

52
00:02:59,070 --> 00:03:03,660
basically we want to talk through is

53
00:03:00,750 --> 00:03:05,760
administrivia Berta has some user

54
00:03:03,660 --> 00:03:07,740
authentication within groups that she

55
00:03:05,760 --> 00:03:09,329
wants talk about and Richard I guess

56
00:03:07,740 --> 00:03:12,810
it's just Richard and Rafael's not here

57
00:03:09,330 --> 00:03:14,490
as a bunch of oh and Benjamin are gonna

58
00:03:12,810 --> 00:03:17,160
talk about the protocol and they have a

59
00:03:14,490 --> 00:03:18,510
lot of slides so while this looks a

60
00:03:17,160 --> 00:03:19,500
little late and there's a chance that we

61
00:03:18,510 --> 00:03:21,630
might actually go the full two hours

62
00:03:19,500 --> 00:03:22,770
based on the number of slides and then

63
00:03:21,630 --> 00:03:25,140
at the end we're going to try to figure

64
00:03:22,770 --> 00:03:27,959
out what we might do at the next interim

65
00:03:25,140 --> 00:03:33,450
is there anything else that we need to

66
00:03:27,959 --> 00:03:36,930
put on the agenda just one item if you

67
00:03:33,450 --> 00:03:40,470
could speak closer to the mic it's thank

68
00:03:36,930 --> 00:03:45,230
you I can I can do that thank you

69
00:03:40,470 --> 00:03:45,230
all right without much further ado then

70
00:03:58,400 --> 00:04:05,160
okay so I'm gonna get straight to the

71
00:04:03,810 --> 00:04:07,350
point and give you the motivation for

72
00:04:05,160 --> 00:04:10,440
all of this afterwards this is about

73
00:04:07,350 --> 00:04:13,799
getting user authentication within the

74
00:04:10,440 --> 00:04:16,980
group right now as it stands in the

75
00:04:13,800 --> 00:04:19,470
current spec we have essentially that we

76
00:04:16,980 --> 00:04:20,820
can trust the signature keys if you can

77
00:04:19,470 --> 00:04:24,240
trust the signature keys you can get

78
00:04:20,820 --> 00:04:25,170
authentication and what do we do if not

79
00:04:24,240 --> 00:04:27,090
is an open

80
00:04:25,170 --> 00:04:29,910
so this is about okay we need to start

81
00:04:27,090 --> 00:04:31,830
considering that next step to get

82
00:04:29,910 --> 00:04:33,390
straight to the point in case you can

83
00:04:31,830 --> 00:04:35,849
get lost in the motivation along the way

84
00:04:33,390 --> 00:04:38,070
I'm essentially proposing that we need

85
00:04:35,850 --> 00:04:40,500
to consider adding one more extra key

86
00:04:38,070 --> 00:04:44,090
duration inside here they'll be used for

87
00:04:40,500 --> 00:04:46,560
the key authentication if we get to that

88
00:04:44,090 --> 00:04:49,020
if we actually want to allow us

89
00:04:46,560 --> 00:04:51,210
indication okay so let's get the

90
00:04:49,020 --> 00:04:57,630
motivation behind all this so this work

91
00:04:51,210 --> 00:04:59,460
or this question comes out of a project

92
00:04:57,630 --> 00:05:01,800
that I've been working on with Benjamin

93
00:04:59,460 --> 00:05:05,190
Dowling on the authentication of the

94
00:05:01,800 --> 00:05:08,550
signal protocol and I don't want into

95
00:05:05,190 --> 00:05:12,060
the issues that we've done there number

96
00:05:08,550 --> 00:05:14,280
of them but more of how they do it and

97
00:05:12,060 --> 00:05:17,400
the fixes we found because if we're

98
00:05:14,280 --> 00:05:19,799
going to be proactive in MLS to not have

99
00:05:17,400 --> 00:05:24,840
issues then maybe we should consider

100
00:05:19,800 --> 00:05:26,940
those so in signal we use a QR code or

101
00:05:24,840 --> 00:05:29,580
numeric comparison and these are

102
00:05:26,940 --> 00:05:32,640
essentially computed over the long term

103
00:05:29,580 --> 00:05:35,460
keys as a short version so computer over

104
00:05:32,640 --> 00:05:38,159
the long term Keith they're static the

105
00:05:35,460 --> 00:05:41,549
user can cross compare them or do your

106
00:05:38,160 --> 00:05:45,750
code verification what this doesn't

107
00:05:41,550 --> 00:05:49,740
allow is epoch level authentication so

108
00:05:45,750 --> 00:05:51,480
in terms of MLS or in other protocols

109
00:05:49,740 --> 00:05:54,450
that are dealing with or hoping you deal

110
00:05:51,480 --> 00:05:57,420
with proposed compromise security this

111
00:05:54,450 --> 00:05:58,830
doesn't meet the requirement essentially

112
00:05:57,420 --> 00:06:01,830
if you compromise a user you've lost

113
00:05:58,830 --> 00:06:04,140
everything and this is even more

114
00:06:01,830 --> 00:06:06,570
particular when you allow things like

115
00:06:04,140 --> 00:06:08,099
this user to user authentication now

116
00:06:06,570 --> 00:06:10,530
this seems like it's on the API level

117
00:06:08,100 --> 00:06:13,080
but the fix that we found is that if you

118
00:06:10,530 --> 00:06:15,479
had derived a key actually in the key

119
00:06:13,080 --> 00:06:17,669
exchange that can be exported that's

120
00:06:15,480 --> 00:06:22,290
separate from all other keys you can get

121
00:06:17,670 --> 00:06:23,310
this better that you that you can

122
00:06:22,290 --> 00:06:24,720
actually get an epoch level

123
00:06:23,310 --> 00:06:30,350
authentication so the users cross

124
00:06:24,720 --> 00:06:33,210
compare say QR codes at some point then

125
00:06:30,350 --> 00:06:35,400
we actually have not only authentication

126
00:06:33,210 --> 00:06:38,219
for who are talking into the beginning

127
00:06:35,400 --> 00:06:41,400
that all the epochs previously

128
00:06:38,220 --> 00:06:42,860
now yes I see you accurate right hold on

129
00:06:41,400 --> 00:06:48,299
one sec sir please

130
00:06:42,860 --> 00:06:51,060
now if we don't have this and only have

131
00:06:48,300 --> 00:06:52,290
the user level like I the beginning to

132
00:06:51,060 --> 00:06:55,800
say all right we're only talking about

133
00:06:52,290 --> 00:06:58,440
identity keys we have a serve

134
00:06:55,800 --> 00:07:00,930
deniability but in reality that doesn't

135
00:06:58,440 --> 00:07:02,880
give us anything like if we're only

136
00:07:00,930 --> 00:07:05,340
relying on those for any sort of

137
00:07:02,880 --> 00:07:07,550
authentication then we're not even

138
00:07:05,340 --> 00:07:10,770
getting the basic level authentication

139
00:07:07,550 --> 00:07:12,180
like if we do user cost impaired go for

140
00:07:10,770 --> 00:07:14,159
it yeah I'm just trying to make sure I

141
00:07:12,180 --> 00:07:17,010
understand the security property were

142
00:07:14,160 --> 00:07:18,120
trying to achieve here and they you're

143
00:07:17,010 --> 00:07:21,840
gonna get to this in which case tell me

144
00:07:18,120 --> 00:07:22,890
to sit down but um so in in signal

145
00:07:21,840 --> 00:07:26,520
straight forward because only two

146
00:07:22,890 --> 00:07:28,590
participants right but in a MOS when

147
00:07:26,520 --> 00:07:31,320
they're in participants are we trying to

148
00:07:28,590 --> 00:07:33,630
ensure that a cannot pretend to be B to

149
00:07:31,320 --> 00:07:35,880
C or merely try to prevent it sure that

150
00:07:33,630 --> 00:07:38,490
someone noted some that attacker cannot

151
00:07:35,880 --> 00:07:42,030
pretend even when I'm a group member an

152
00:07:38,490 --> 00:07:43,080
attacker like yeah so which actually

153
00:07:42,030 --> 00:07:44,909
will get to right at the end because

154
00:07:43,080 --> 00:07:46,770
there could be both cases if we consider

155
00:07:44,910 --> 00:07:48,560
it but really I'm talking about if the

156
00:07:46,770 --> 00:07:52,200
attacker comes in from outside the group

157
00:07:48,560 --> 00:07:57,870
so if we can say here was in a group

158
00:07:52,200 --> 00:08:00,240
will do cross comparison so how this

159
00:07:57,870 --> 00:08:02,070
serve works just a quick fix if we were

160
00:08:00,240 --> 00:08:04,470
looking at signal of course this depends

161
00:08:02,070 --> 00:08:07,169
on how you implement unless but if we're

162
00:08:04,470 --> 00:08:09,240
looking at signal this is saying well we

163
00:08:07,169 --> 00:08:11,520
could just compute these like QR codes

164
00:08:09,240 --> 00:08:15,530
or the numeric comparison and way that's

165
00:08:11,520 --> 00:08:19,229
EPOC specific I'll take the question

166
00:08:15,530 --> 00:08:20,909
what do you mean by an epoch so like if

167
00:08:19,230 --> 00:08:22,140
the MLS would be like whatever the

168
00:08:20,910 --> 00:08:23,370
current group is and then when we send

169
00:08:22,140 --> 00:08:26,120
an update they'll be a new group and

170
00:08:23,370 --> 00:08:26,120
I'll be new epoch

171
00:08:28,400 --> 00:08:35,340
so a big picture well we're coming out

172
00:08:33,870 --> 00:08:37,799
with with it within the terms of

173
00:08:35,340 --> 00:08:41,490
security modeling this is first signal

174
00:08:37,799 --> 00:08:43,319
if you do not do this then essentially

175
00:08:41,490 --> 00:08:46,560
you get red checkmarks right across the

176
00:08:43,320 --> 00:08:48,030
front of this cross comparison with

177
00:08:46,560 --> 00:08:50,010
depending on what you compromise you

178
00:08:48,030 --> 00:08:52,589
compromise the device or user or if you

179
00:08:50,010 --> 00:08:53,370
have an e star on this channel what can

180
00:08:52,590 --> 00:08:56,070
be achieved

181
00:08:53,370 --> 00:08:58,230
hence the achievable guarantees depends

182
00:08:56,070 --> 00:08:59,940
on what Keys you're pulling and when and

183
00:08:58,230 --> 00:09:02,790
how you cross them here now these are

184
00:08:59,940 --> 00:09:04,770
not achievable as I said if we don't

185
00:09:02,790 --> 00:09:07,890
have something dried from the current

186
00:09:04,770 --> 00:09:12,569
epoch if it's only a general ecstatic

187
00:09:07,890 --> 00:09:16,260
state so in terms of MLS that brings us

188
00:09:12,570 --> 00:09:18,360
back to this picture now this again is

189
00:09:16,260 --> 00:09:20,310
group level so you'd be pulling a key s

190
00:09:18,360 --> 00:09:21,930
within a group and you would only cross

191
00:09:20,310 --> 00:09:23,550
compared with in the group if you think

192
00:09:21,930 --> 00:09:25,439
of a bunch of users that might not be

193
00:09:23,550 --> 00:09:27,120
realistic over all that you always want

194
00:09:25,440 --> 00:09:30,420
to cross compare only one group at a

195
00:09:27,120 --> 00:09:34,910
time so we can't begin to go into those

196
00:09:30,420 --> 00:09:39,839
should we be pop only or group only

197
00:09:34,910 --> 00:09:43,079
motivation if we do group this kind

198
00:09:39,840 --> 00:09:45,810
again goes for its API and thus of our

199
00:09:43,080 --> 00:09:48,180
scope but if we're going to allow that

200
00:09:45,810 --> 00:09:49,920
eventually for some applications we need

201
00:09:48,180 --> 00:09:52,339
to be allowing them to derive the keys

202
00:09:49,920 --> 00:09:57,000
now at this level within the protocol

203
00:09:52,340 --> 00:09:59,010
that's the motivation so if we have for

204
00:09:57,000 --> 00:10:00,870
a group that means of driving for them

205
00:09:59,010 --> 00:10:04,230
relate to the group context as I pointed

206
00:10:00,870 --> 00:10:06,480
out here's a question from the ekor was

207
00:10:04,230 --> 00:10:08,100
saying what about if it's a entity

208
00:10:06,480 --> 00:10:09,660
within the group well yeah we could

209
00:10:08,100 --> 00:10:11,220
drive from the signature key but as I

210
00:10:09,660 --> 00:10:13,560
mentioned at the beginning if we're

211
00:10:11,220 --> 00:10:14,940
talking about driving some sort of

212
00:10:13,560 --> 00:10:16,500
authentication key from the signature

213
00:10:14,940 --> 00:10:17,850
key we're running into the issue so much

214
00:10:16,500 --> 00:10:19,950
a signal in which case you're not

215
00:10:17,850 --> 00:10:22,290
actually getting any authentication in

216
00:10:19,950 --> 00:10:25,140
terms of MLS girls of post compromised

217
00:10:22,290 --> 00:10:28,199
security or it's a busy time within user

218
00:10:25,140 --> 00:10:30,390
authentication however there is a fix

219
00:10:28,200 --> 00:10:32,730
for this as well which actually came up

220
00:10:30,390 --> 00:10:34,860
at the last interim if we allow

221
00:10:32,730 --> 00:10:37,020
rationing for signature keys and there

222
00:10:34,860 --> 00:10:39,390
were some motivation for that that it's

223
00:10:37,020 --> 00:10:41,069
outside of this context but if we are

224
00:10:39,390 --> 00:10:41,970
going to allow ratcheting for signature

225
00:10:41,070 --> 00:10:45,389
keys

226
00:10:41,970 --> 00:10:49,560
we can get around this issue so

227
00:10:45,389 --> 00:10:52,139
basically our situation comes down to a

228
00:10:49,560 --> 00:10:55,170
few variants of what we can choose we

229
00:10:52,139 --> 00:10:57,149
can say outside the scope of unless at

230
00:10:55,170 --> 00:10:59,149
all in which case we basically say you

231
00:10:57,149 --> 00:11:02,959
have to trust the signature key

232
00:10:59,149 --> 00:11:05,579
permanently as a static signature key

233
00:11:02,959 --> 00:11:09,839
which we're not even doing for regular

234
00:11:05,579 --> 00:11:11,670
keys or we can say yes we're going to

235
00:11:09,839 --> 00:11:13,949
ratchet the signature kinky allow use

236
00:11:11,670 --> 00:11:15,209
authentication within that and we don't

237
00:11:13,949 --> 00:11:18,689
even have to derive an authentication

238
00:11:15,209 --> 00:11:19,888
key separately or we can say maybe

239
00:11:18,689 --> 00:11:20,910
within the groups that we're going to

240
00:11:19,889 --> 00:11:23,939
allow the derivation of an

241
00:11:20,910 --> 00:11:27,029
authentication key so there's a few

242
00:11:23,939 --> 00:11:29,459
options here and it's a bit of choosing

243
00:11:27,029 --> 00:11:31,259
what direction to go I would definitely

244
00:11:29,459 --> 00:11:33,180
want to say that if we're going to be

245
00:11:31,259 --> 00:11:34,889
laughs with maximum flexibility we

246
00:11:33,180 --> 00:11:37,410
should probably be allowing for duration

247
00:11:34,889 --> 00:11:42,899
of these group level keys as an option

248
00:11:37,410 --> 00:11:48,180
at the very least any questions or

249
00:11:42,899 --> 00:11:49,860
comments hi daniel ganc domore aclu so I

250
00:11:48,180 --> 00:11:53,699
appreciate that all the thought that's

251
00:11:49,860 --> 00:11:54,750
gone into this and I'm having a little

252
00:11:53,699 --> 00:11:57,839
bit of trouble getting my head around

253
00:11:54,750 --> 00:12:00,509
what the expected user experiences of

254
00:11:57,839 --> 00:12:03,029
doing this kind of verification so here

255
00:12:00,509 --> 00:12:05,699
you can we zoom out from the protocol

256
00:12:03,029 --> 00:12:07,680
details for a second and talk about what

257
00:12:05,699 --> 00:12:11,040
sort of cadence we expect users to play

258
00:12:07,680 --> 00:12:14,279
the QR code scanning game at and and

259
00:12:11,040 --> 00:12:15,509
like dude do we have any any evidence

260
00:12:14,279 --> 00:12:18,449
that users are interested in doing

261
00:12:15,509 --> 00:12:20,040
anything like that well I mean you've

262
00:12:18,449 --> 00:12:22,740
got some users are interested at least

263
00:12:20,040 --> 00:12:24,540
and we've seen that already with a very

264
00:12:22,740 --> 00:12:26,339
signal and the other applications of it

265
00:12:24,540 --> 00:12:29,009
that some of us actually do like to

266
00:12:26,339 --> 00:12:30,240
compute impaired QR codes or numeric

267
00:12:29,009 --> 00:12:33,569
impaired so I'm trying to know who we're

268
00:12:30,240 --> 00:12:36,029
talking to you right so we have some

269
00:12:33,569 --> 00:12:37,860
motivation at some level now we could

270
00:12:36,029 --> 00:12:40,759
say no we're going to trust only the

271
00:12:37,860 --> 00:12:43,079
server to verify these signature keys

272
00:12:40,759 --> 00:12:45,660
okay then we don't need to involve the

273
00:12:43,079 --> 00:12:47,099
user to this experience if we're going

274
00:12:45,660 --> 00:12:48,750
to say no we want to allow deniability

275
00:12:47,100 --> 00:12:50,160
and get around this in some other way

276
00:12:48,750 --> 00:12:52,740
where this users can cross compare

277
00:12:50,160 --> 00:12:55,740
afterward sure not everyone's going to

278
00:12:52,740 --> 00:12:57,570
care about that but someone is and

279
00:12:55,740 --> 00:13:00,830
if we do that can we allow it so that

280
00:12:57,570 --> 00:13:02,700
you maybe only have to do it once or

281
00:13:00,830 --> 00:13:04,250
when you do do it you get your

282
00:13:02,700 --> 00:13:07,170
verification for all previous

283
00:13:04,250 --> 00:13:08,130
communication that you know that you've

284
00:13:07,170 --> 00:13:08,899
been talking to the same person the

285
00:13:08,130 --> 00:13:12,029
whole time

286
00:13:08,899 --> 00:13:13,170
yes various ways yeah in discussing my

287
00:13:12,029 --> 00:13:14,910
question as well which I'm trying to

288
00:13:13,170 --> 00:13:17,010
figure out what guidance we give the

289
00:13:14,910 --> 00:13:20,250
user so you say like great using unless

290
00:13:17,010 --> 00:13:22,170
outstanding um you know what do we tell

291
00:13:20,250 --> 00:13:23,640
them about what you want to do to be

292
00:13:22,170 --> 00:13:25,829
safe using it or less if you're

293
00:13:23,640 --> 00:13:30,209
concerned about compromise I think they

294
00:13:25,830 --> 00:13:31,440
think like maybe this is a separate

295
00:13:30,209 --> 00:13:32,550
question and me and me sounds like men

296
00:13:31,440 --> 00:13:34,529
posing is actually very straightforward

297
00:13:32,550 --> 00:13:35,189
for the protocol so we can like give a

298
00:13:34,529 --> 00:13:38,130
lot problems later

299
00:13:35,190 --> 00:13:39,420
um but yeah but he could be will be

300
00:13:38,130 --> 00:13:41,850
important if we add just the protocol

301
00:13:39,420 --> 00:13:43,349
and if we say I mean if all we do is

302
00:13:41,850 --> 00:13:44,700
like that and do like limitations like a

303
00:13:43,350 --> 00:13:46,589
new generations age fine but if we

304
00:13:44,700 --> 00:13:48,750
actually have to turn on the protocol

305
00:13:46,589 --> 00:13:50,160
about ten occasion codes or whatever you

306
00:13:48,750 --> 00:13:51,240
wanna call them then that has to come I

307
00:13:50,160 --> 00:13:52,980
think with some guidance about how you

308
00:13:51,240 --> 00:13:55,020
would use that mechanism it's I guess if

309
00:13:52,980 --> 00:13:56,550
you thought like what you would say like

310
00:13:55,020 --> 00:13:58,020
if you know a user of this vertical how

311
00:13:56,550 --> 00:14:01,620
how how it can behave

312
00:13:58,020 --> 00:14:03,449
oh sure yeah definitely give way of

313
00:14:01,620 --> 00:14:04,709
saying here's to verify users if you

314
00:14:03,450 --> 00:14:05,670
want to do across comparison with QR

315
00:14:04,709 --> 00:14:07,650
codes and how to do that correctly

316
00:14:05,670 --> 00:14:09,599
that's what we come been seeing out a

317
00:14:07,650 --> 00:14:10,740
signal analysis is that there's actually

318
00:14:09,600 --> 00:14:14,640
correct way to do that in a way that

319
00:14:10,740 --> 00:14:16,440
breaks basically everything so yeah we

320
00:14:14,640 --> 00:14:17,670
can give that we can give that if we

321
00:14:16,440 --> 00:14:19,380
want to give that recommendation it

322
00:14:17,670 --> 00:14:22,650
seemed a little bit outside the unless

323
00:14:19,380 --> 00:14:26,070
protocol scope but actually I have to do

324
00:14:22,650 --> 00:14:29,130
it currently if we do a user to user

325
00:14:26,070 --> 00:14:32,760
compare we can say that if you do it

326
00:14:29,130 --> 00:14:35,910
once you can verify for every all

327
00:14:32,760 --> 00:14:37,560
previous epochs there is some work being

328
00:14:35,910 --> 00:14:40,500
discussed at the moment of how you can

329
00:14:37,560 --> 00:14:43,170
do it once and then you rely on an

330
00:14:40,500 --> 00:14:44,760
untrusted server to actually keep being

331
00:14:43,170 --> 00:14:47,069
able to compare it after you've done the

332
00:14:44,760 --> 00:14:48,990
one user to user comparison so there may

333
00:14:47,070 --> 00:14:50,870
be some possibilities coming forward

334
00:14:48,990 --> 00:14:56,579
thank you

335
00:14:50,870 --> 00:14:58,110
Joe Hall CDT I'm gonna descent from the

336
00:14:56,579 --> 00:15:00,899
past two comments and say I'm not as

337
00:14:58,110 --> 00:15:02,640
concerned about user level issues here

338
00:15:00,899 --> 00:15:04,650
like with group conversations and signal

339
00:15:02,640 --> 00:15:07,290
right now it was static

340
00:15:04,650 --> 00:15:11,310
you know identity it's very very high

341
00:15:07,290 --> 00:15:13,680
- you know cabin the group membership in

342
00:15:11,310 --> 00:15:15,359
a way that using like the equivalent of

343
00:15:13,680 --> 00:15:16,410
safety numbers you can kind of bootstrap

344
00:15:15,360 --> 00:15:17,910
that kind of thing and you probably know

345
00:15:16,410 --> 00:15:18,270
way more about this in practice than I

346
00:15:17,910 --> 00:15:20,490
do

347
00:15:18,270 --> 00:15:26,220
I think quite here the last two

348
00:15:20,490 --> 00:15:28,410
sentences very bulky locals even though

349
00:15:26,220 --> 00:15:32,400
the signal app for example does not

350
00:15:28,410 --> 00:15:34,620
support any kind of mutual verification

351
00:15:32,400 --> 00:15:36,510
in the user interface for groups right

352
00:15:34,620 --> 00:15:41,130
we've been looking at ways to sort of

353
00:15:36,510 --> 00:15:45,330
like like ad hoc that right and using

354
00:15:41,130 --> 00:15:47,640
the safety numbers essentially create

355
00:15:45,330 --> 00:15:50,850
things that look like safety number with

356
00:15:47,640 --> 00:15:54,360
n sub keys in it right knocks up keys

357
00:15:50,850 --> 00:15:57,150
but the chunk of the the numerical thing

358
00:15:54,360 --> 00:15:59,730
in it so it gets a as big as many group

359
00:15:57,150 --> 00:16:01,709
members as you have right alright now

360
00:15:59,730 --> 00:16:02,940
that's not really supported at all for

361
00:16:01,710 --> 00:16:05,130
good reason because it's really messy

362
00:16:02,940 --> 00:16:06,990
you know well I understand we want to

363
00:16:05,130 --> 00:16:10,110
think about what we might say about

364
00:16:06,990 --> 00:16:12,060
users Oakland I'm more persuaded by what

365
00:16:10,110 --> 00:16:13,710
you're talking about in terms of making

366
00:16:12,060 --> 00:16:15,869
sure that we meet the security

367
00:16:13,710 --> 00:16:17,790
properties and then this could take a

368
00:16:15,870 --> 00:16:20,040
lot of work to talk to users and so I

369
00:16:17,790 --> 00:16:23,209
just want to say that I mean we should

370
00:16:20,040 --> 00:16:27,959
think about it but not sort of design

371
00:16:23,210 --> 00:16:29,700
specifically towards it it's serve about

372
00:16:27,960 --> 00:16:32,310
allowing the option because if we don't

373
00:16:29,700 --> 00:16:33,630
allow it now then we're going to run

374
00:16:32,310 --> 00:16:36,209
into it you're absolutely right about

375
00:16:33,630 --> 00:16:38,730
that if I want to say if I'm going to do

376
00:16:36,210 --> 00:16:40,110
group level key authentication key

377
00:16:38,730 --> 00:16:42,630
generation and then cross compare that

378
00:16:40,110 --> 00:16:44,100
with some user and there we have in

379
00:16:42,630 --> 00:16:45,540
shared groups and that's might be a lot

380
00:16:44,100 --> 00:16:47,570
comparison now I couldn't get around

381
00:16:45,540 --> 00:16:50,339
that with ratcheting the signature key

382
00:16:47,570 --> 00:16:52,560
so that's going to be a lot easier in

383
00:16:50,340 --> 00:16:57,420
many ways but there's challenges there

384
00:16:52,560 --> 00:16:58,469
too so yeah I know that one of the

385
00:16:57,420 --> 00:17:00,930
things you said in that last comment

386
00:16:58,470 --> 00:17:02,550
sounds interesting like taking the

387
00:17:00,930 --> 00:17:05,520
locals it's Mike Lee yes sure Oh

388
00:17:02,550 --> 00:17:08,849
circuitry burns yeah this is this idea

389
00:17:05,520 --> 00:17:12,089
of taking the set of groups in which two

390
00:17:08,849 --> 00:17:14,448
devices or users overlap and committing

391
00:17:12,089 --> 00:17:16,770
that one comparison sounds appealing

392
00:17:14,449 --> 00:17:17,970
that's probably a little bit beyond the

393
00:17:16,770 --> 00:17:20,740
scope of what we're talking about here

394
00:17:17,970 --> 00:17:22,839
because an operation level

395
00:17:20,740 --> 00:17:25,450
trying to understand that protocol

396
00:17:22,839 --> 00:17:27,730
impact here is the proposal here

397
00:17:25,450 --> 00:17:29,560
basically to generate some new stuff off

398
00:17:27,730 --> 00:17:31,150
of the key schedule that would go into

399
00:17:29,560 --> 00:17:33,460
this comparison and maybe you could

400
00:17:31,150 --> 00:17:35,170
could I may have misunderstood some time

401
00:17:33,460 --> 00:17:38,410
previously you can kind of elaborate

402
00:17:35,170 --> 00:17:40,990
like what what the the thing is that we

403
00:17:38,410 --> 00:17:48,460
would generate and how that would be

404
00:17:40,990 --> 00:17:51,070
validated in the comparison so that's

405
00:17:48,460 --> 00:17:52,990
basically what I'm saying is if we want

406
00:17:51,070 --> 00:17:54,399
to have a group level authentication so

407
00:17:52,990 --> 00:17:55,870
there's different like a preparing allow

408
00:17:54,400 --> 00:17:58,840
authentication for all the groups you're

409
00:17:55,870 --> 00:18:00,790
in or it's just I know that who the user

410
00:17:58,840 --> 00:18:01,929
is those are those are different

411
00:18:00,790 --> 00:18:03,399
questions and tamenund all that you

412
00:18:01,930 --> 00:18:06,900
wanna say the group level key or under

413
00:18:03,400 --> 00:18:10,000
signature key so this is a choice issue

414
00:18:06,900 --> 00:18:12,610
if we want to allow the group level then

415
00:18:10,000 --> 00:18:15,040
all I'm suggesting is yeah drive one

416
00:18:12,610 --> 00:18:17,169
more key here so we have we have a drive

417
00:18:15,040 --> 00:18:18,490
secret for the handshake etc we'll have

418
00:18:17,170 --> 00:18:20,140
one front we could call it

419
00:18:18,490 --> 00:18:22,000
authentication key so for the actual

420
00:18:20,140 --> 00:18:27,460
protocol impact of that it's one more

421
00:18:22,000 --> 00:18:28,960
generation and that would the thing we'd

422
00:18:27,460 --> 00:18:30,610
get out of that way say you and I

423
00:18:28,960 --> 00:18:34,360
compare these codes we would compare

424
00:18:30,610 --> 00:18:36,699
them just for equality it's essentially

425
00:18:34,360 --> 00:18:38,439
that so here's the options that we were

426
00:18:36,700 --> 00:18:41,020
finding my signal now if you don't do

427
00:18:38,440 --> 00:18:44,080
this then the only way to talk about

428
00:18:41,020 --> 00:18:46,210
current epoch that we're in is by using

429
00:18:44,080 --> 00:18:48,040
keys such as the group key which means

430
00:18:46,210 --> 00:18:50,110
that you will necessarily have to keep

431
00:18:48,040 --> 00:18:52,570
at least two keys in memory from

432
00:18:50,110 --> 00:18:55,300
previous epochs okay so now we're come

433
00:18:52,570 --> 00:18:58,360
fire lighting for secrecy so if we're

434
00:18:55,300 --> 00:18:59,830
wanting to get around that then yeah we

435
00:18:58,360 --> 00:19:02,649
have to we wanted to rev it off in case

436
00:18:59,830 --> 00:19:05,139
you keep it separate sure yeah no I'm

437
00:19:02,650 --> 00:19:07,300
just understand understand the ceremony

438
00:19:05,140 --> 00:19:09,370
here like so that we show you show you

439
00:19:07,300 --> 00:19:11,320
your devices QR code that QR code

440
00:19:09,370 --> 00:19:12,729
encodes the thing we have derived off

441
00:19:11,320 --> 00:19:14,889
the key schedule here is your device

442
00:19:12,730 --> 00:19:16,390
when it receives that just checking that

443
00:19:14,890 --> 00:19:18,930
it is the same as the thing it derives

444
00:19:16,390 --> 00:19:23,050
off the key schedule for this epoch so

445
00:19:18,930 --> 00:19:24,730
if we're comparing devices we both have

446
00:19:23,050 --> 00:19:26,889
to be able to drive the same

447
00:19:24,730 --> 00:19:28,360
authentication key unless you're dealing

448
00:19:26,890 --> 00:19:31,930
with signatures which is good since the

449
00:19:28,360 --> 00:19:34,050
ratcheting signatures to cross compare

450
00:19:31,930 --> 00:19:36,240
what we found is that you need to

451
00:19:34,050 --> 00:19:39,240
have a essentially mismatch between the

452
00:19:36,240 --> 00:19:41,460
devices so you the two QR codes cannot

453
00:19:39,240 --> 00:19:45,150
be the same that's a very important

454
00:19:41,460 --> 00:19:46,980
actually and so the background within

455
00:19:45,150 --> 00:19:48,630
the protocol that's okay it's okay if I

456
00:19:46,980 --> 00:19:49,560
have scan your QR code and it's simply

457
00:19:48,630 --> 00:19:54,750
computed that we had the same

458
00:19:49,560 --> 00:19:56,820
authentication key to the slides oh yeah

459
00:19:54,750 --> 00:19:58,080
here so for example if we have the same

460
00:19:56,820 --> 00:19:59,909
authentication key that's coming for the

461
00:19:58,080 --> 00:20:01,470
group so we both know it and we just

462
00:19:59,910 --> 00:20:04,830
have different roles this could be

463
00:20:01,470 --> 00:20:07,020
identities as well so long as that's

464
00:20:04,830 --> 00:20:09,449
going into the computation and there's a

465
00:20:07,020 --> 00:20:11,760
disconnect there now we can both compute

466
00:20:09,450 --> 00:20:14,070
it but what's coming out invisible to

467
00:20:11,760 --> 00:20:17,100
the user it's important that there is a

468
00:20:14,070 --> 00:20:20,340
mismatch so for us to be cross comparing

469
00:20:17,100 --> 00:20:25,590
the QR codes okay and then the thing

470
00:20:20,340 --> 00:20:27,800
that we you and I get out of this if we

471
00:20:25,590 --> 00:20:30,510
do it then we get authentication that of

472
00:20:27,800 --> 00:20:32,430
I have been talking to you for the

473
00:20:30,510 --> 00:20:34,470
current epoch and all the past epochs

474
00:20:32,430 --> 00:20:38,010
the beginning of time including the

475
00:20:34,470 --> 00:20:40,050
initial set up so that so in signal

476
00:20:38,010 --> 00:20:42,690
one-to-one case I think that's that I I

477
00:20:40,050 --> 00:20:45,780
agree I'm curious what propagates you

478
00:20:42,690 --> 00:20:47,580
get in a multi-party case where I think

479
00:20:45,780 --> 00:20:49,470
if I understand correctly what you're

480
00:20:47,580 --> 00:20:51,240
proposing the property you get is that

481
00:20:49,470 --> 00:20:54,330
you and I have the same view of the

482
00:20:51,240 --> 00:20:55,560
group and it's the same yeah it's the

483
00:20:54,330 --> 00:20:57,990
same view of how that works

484
00:20:55,560 --> 00:21:00,090
uh-huh yeah I mean this seems useful I

485
00:20:57,990 --> 00:21:03,150
mean I'd be glad to to take a look at a

486
00:21:00,090 --> 00:21:06,780
PR for this actually one more question

487
00:21:03,150 --> 00:21:09,120
um one thing some of these authors have

488
00:21:06,780 --> 00:21:11,610
been discussing is doing kind of an

489
00:21:09,120 --> 00:21:14,909
exporter roll off the keychain so like

490
00:21:11,610 --> 00:21:16,590
in TLS we have there's an exporter

491
00:21:14,910 --> 00:21:19,280
secret that's that's generated which is

492
00:21:16,590 --> 00:21:21,449
used to develop other things yeah

493
00:21:19,280 --> 00:21:23,010
something like that could work here out

494
00:21:21,450 --> 00:21:25,800
something good because something like

495
00:21:23,010 --> 00:21:27,480
this on top of if we made kind of an

496
00:21:25,800 --> 00:21:28,950
escape and off-ramp from the key

497
00:21:27,480 --> 00:21:30,180
schedule from which you could derive

498
00:21:28,950 --> 00:21:32,070
other stuff could something like this

499
00:21:30,180 --> 00:21:34,380
sit on the other side of that offering

500
00:21:32,070 --> 00:21:35,820
yes absolutely I think if you're going

501
00:21:34,380 --> 00:21:39,210
pretty Bach that you've got your off

502
00:21:35,820 --> 00:21:40,439
ramp then yeah absolutely that's exactly

503
00:21:39,210 --> 00:21:41,550
the sort of motivation here is that

504
00:21:40,440 --> 00:21:43,320
you're pulling off something that's not

505
00:21:41,550 --> 00:21:46,950
going to be related to the group context

506
00:21:43,320 --> 00:21:47,580
at all aside from duration that's random

507
00:21:46,950 --> 00:21:49,170
relation

508
00:21:47,580 --> 00:21:51,060
yeah in that case it might be useful to

509
00:21:49,170 --> 00:21:53,760
write this up as its own internet draft

510
00:21:51,060 --> 00:21:56,550
is kind of how you do kind of external

511
00:21:53,760 --> 00:21:58,020
authentication of of an MLS session

512
00:21:56,550 --> 00:22:00,600
because you know once you've got that

513
00:21:58,020 --> 00:22:02,220
that cut point you can say you know grab

514
00:22:00,600 --> 00:22:03,990
grab the exporter derive the

515
00:22:02,220 --> 00:22:06,840
authentication key and know yeah

516
00:22:03,990 --> 00:22:08,340
something like that would work we could

517
00:22:06,840 --> 00:22:09,570
look at this as a PR but it might be a

518
00:22:08,340 --> 00:22:12,000
little bit cleaner to do as a separate

519
00:22:09,570 --> 00:22:14,300
separate idea either way it seems like

520
00:22:12,000 --> 00:22:19,940
provide some value

521
00:22:14,300 --> 00:22:19,940
thank you very much better all righty

522
00:22:29,870 --> 00:22:34,280
all right which one of you wants to go

523
00:22:32,010 --> 00:22:34,280
first

524
00:22:36,590 --> 00:22:47,939
you're supposed to go first or you step

525
00:22:39,390 --> 00:22:50,010
out yes so they get the King Benjamin

526
00:22:47,940 --> 00:22:51,540
can take over so this is about the

527
00:22:50,010 --> 00:22:53,310
protocol draft which is probably why

528
00:22:51,540 --> 00:22:56,550
most of you are here this is all the

529
00:22:53,310 --> 00:22:59,010
interesting stuff so basically the

530
00:22:56,550 --> 00:23:00,570
overall structure here we've got like 45

531
00:22:59,010 --> 00:23:02,850
slides or something it's gonna be split

532
00:23:00,570 --> 00:23:04,530
between the invention we've got a review

533
00:23:02,850 --> 00:23:06,179
of what's been happening lately since

534
00:23:04,530 --> 00:23:09,660
the last interim meeting and then we've

535
00:23:06,180 --> 00:23:11,610
got a bunch of ideas which didn't you

536
00:23:09,660 --> 00:23:14,040
know you know not getting things done in

537
00:23:11,610 --> 00:23:15,810
advance are don't have PRS to go with

538
00:23:14,040 --> 00:23:17,159
them but we've tried to explain them

539
00:23:15,810 --> 00:23:18,870
clearly in the slides hearing to get

540
00:23:17,160 --> 00:23:20,970
feedback so that we can then have some

541
00:23:18,870 --> 00:23:23,070
PRS in the next few weeks and have some

542
00:23:20,970 --> 00:23:24,450
discussion on the list about in what

543
00:23:23,070 --> 00:23:25,590
form we should lay in these so right now

544
00:23:24,450 --> 00:23:27,810
we're just me talking about kind of

545
00:23:25,590 --> 00:23:29,310
directions um does that we've tried to

546
00:23:27,810 --> 00:23:31,050
characterize the trade-offs and protocol

547
00:23:29,310 --> 00:23:32,280
impacts of these various proposals to

548
00:23:31,050 --> 00:23:34,080
try and get a sense of the group of

549
00:23:32,280 --> 00:23:36,870
whether the trade-offs seem worthwhile

550
00:23:34,080 --> 00:23:38,520
in these in these various cases so going

551
00:23:36,870 --> 00:23:40,500
back through the history of the last

552
00:23:38,520 --> 00:23:45,030
couple versions I think our objective

553
00:23:40,500 --> 00:23:49,020
was to have draft oh six as a plausible

554
00:23:45,030 --> 00:23:51,330
version for analysis to actually knows

555
00:23:49,020 --> 00:23:53,210
our objectives have a five I think as an

556
00:23:51,330 --> 00:23:55,379
analysis target we discovered that we

557
00:23:53,210 --> 00:23:57,390
had some bugs in it that made it

558
00:23:55,380 --> 00:24:00,880
unimplemented and thus you know

559
00:23:57,390 --> 00:24:02,529
difficult to analyze so we branded we

560
00:24:00,880 --> 00:24:04,509
sponge draft oh six after the interim

561
00:24:02,529 --> 00:24:06,909
that incorporated the the bug fixes and

562
00:24:04,509 --> 00:24:09,130
a couple of ideas from that came up at

563
00:24:06,909 --> 00:24:11,950
the interim so there's some terminology

564
00:24:09,130 --> 00:24:13,600
changes there's some bugs bug fixes to

565
00:24:11,950 --> 00:24:15,639
the key schedule I think the big thing

566
00:24:13,600 --> 00:24:17,980
we made a big change in draft oh five to

567
00:24:15,639 --> 00:24:20,469
introduce this this common framing layer

568
00:24:17,980 --> 00:24:21,700
where we have a common encryption and

569
00:24:20,470 --> 00:24:23,710
signing there that's used for both

570
00:24:21,700 --> 00:24:25,389
handshake messages and application

571
00:24:23,710 --> 00:24:26,830
content and in the process of

572
00:24:25,389 --> 00:24:28,600
introducing that it affected the

573
00:24:26,830 --> 00:24:30,879
transcript computations and we just

574
00:24:28,600 --> 00:24:32,769
screwed up that translation and so I

575
00:24:30,880 --> 00:24:34,600
think it's implementable now I think we

576
00:24:32,769 --> 00:24:35,799
may have more than one implementation at

577
00:24:34,600 --> 00:24:38,649
this point

578
00:24:35,799 --> 00:24:41,168
so we've we fixed that in O six and then

579
00:24:38,649 --> 00:24:43,629
did this this reordering of blanking an

580
00:24:41,169 --> 00:24:47,049
update in remove that Karthik noticed

581
00:24:43,629 --> 00:24:48,668
was causing unnecessary breakage under

582
00:24:47,049 --> 00:24:53,080
Sri fragmentation in the tree so that

583
00:24:48,669 --> 00:24:55,090
gets us a little bit more yeah we the

584
00:24:53,080 --> 00:24:56,918
general rule in MLS is that the more

585
00:24:55,090 --> 00:24:58,330
blanks blank nodes you have in the tree

586
00:24:56,919 --> 00:25:00,490
the less efficient your operations are

587
00:24:58,330 --> 00:25:02,889
so we generally try and keep the tree

588
00:25:00,490 --> 00:25:04,659
more completely populated and a few less

589
00:25:02,889 --> 00:25:09,668
blank so that things stay more efficient

590
00:25:04,659 --> 00:25:11,590
this change maintains that efficiency so

591
00:25:09,669 --> 00:25:14,080
draft oh six I think is the major

592
00:25:11,590 --> 00:25:16,720
analysis target now focus you know seven

593
00:25:14,080 --> 00:25:18,039
was doing optimizations that make the

594
00:25:16,720 --> 00:25:21,490
protocol work better but don't really

595
00:25:18,039 --> 00:25:23,950
affect the security analysis so I think

596
00:25:21,490 --> 00:25:27,490
we I think that first bullet may

597
00:25:23,950 --> 00:25:31,960
actually be wrong I need to check the

598
00:25:27,490 --> 00:25:35,080
PRS but we have a few more bug fixes

599
00:25:31,960 --> 00:25:37,419
here well an implementer noticed that

600
00:25:35,080 --> 00:25:40,330
we're hitting if you encrypt the ad

601
00:25:37,419 --> 00:25:42,070
message then the welcome message that's

602
00:25:40,330 --> 00:25:44,110
provided to the new joiner doesn't

603
00:25:42,070 --> 00:25:45,820
actually wouldn't enable them to decrypt

604
00:25:44,110 --> 00:25:47,439
the ad which they also need to join the

605
00:25:45,820 --> 00:25:49,000
group so you couldn't actually add

606
00:25:47,440 --> 00:25:51,370
someone to the group with while

607
00:25:49,000 --> 00:25:53,440
encrypting handshake messages so again

608
00:25:51,370 --> 00:25:55,779
yet another bug fix I could define those

609
00:25:53,440 --> 00:25:56,950
I was one we've found in several cases

610
00:25:55,779 --> 00:26:00,070
here that having implementers have

611
00:25:56,950 --> 00:26:02,470
helped us find these sorts of things the

612
00:26:00,070 --> 00:26:04,389
the biggest thing we landed was this

613
00:26:02,470 --> 00:26:07,659
tree based application key derivation

614
00:26:04,389 --> 00:26:09,610
which Joelle Alwyn did a lot of work on

615
00:26:07,659 --> 00:26:10,990
and presented at the interim I'll talk

616
00:26:09,610 --> 00:26:13,889
about that a little bit more in the slot

617
00:26:10,990 --> 00:26:13,889
in the next couple slides

618
00:26:14,030 --> 00:26:17,720
that it's same in that same PR we

619
00:26:16,550 --> 00:26:20,360
introduce some some rules about

620
00:26:17,720 --> 00:26:21,980
consuming secrets where one of the

621
00:26:20,360 --> 00:26:24,169
things if you've got a a hash-based

622
00:26:21,980 --> 00:26:25,910
ratchet say where you're moving things

623
00:26:24,170 --> 00:26:27,500
forward in time as you receive messages

624
00:26:25,910 --> 00:26:29,900
you want to delete make sure you delete

625
00:26:27,500 --> 00:26:31,700
things so that you get forward secrecy

626
00:26:29,900 --> 00:26:34,370
as you move that ratchet for and so

627
00:26:31,700 --> 00:26:36,350
joelle came up with a very nice phrasing

628
00:26:34,370 --> 00:26:39,469
for how you have the rules you should

629
00:26:36,350 --> 00:26:41,270
apply to to make it the maximum forward

630
00:26:39,470 --> 00:26:43,400
secrecy you can in that in that

631
00:26:41,270 --> 00:26:45,350
framework we also had a message which is

632
00:26:43,400 --> 00:26:46,700
kind of a summary yeah before you go on

633
00:26:45,350 --> 00:26:48,080
to the top all that if you haven't done

634
00:26:46,700 --> 00:26:49,400
it you're thinking about doing it

635
00:26:48,080 --> 00:26:51,050
because of the interim that's where

636
00:26:49,400 --> 00:26:52,670
Karthik our cast eye camera which said

637
00:26:51,050 --> 00:26:53,899
if we don't do this then we don't get

638
00:26:52,670 --> 00:26:56,450
some other properties that we think

639
00:26:53,900 --> 00:27:01,250
we're getting yeah I think I think I

640
00:26:56,450 --> 00:27:07,430
think it has been done okay good yeah I

641
00:27:01,250 --> 00:27:10,450
think it was yeah so just to overview

642
00:27:07,430 --> 00:27:13,670
this this application secret tree stuff

643
00:27:10,450 --> 00:27:15,320
right when you update into a new epoch

644
00:27:13,670 --> 00:27:16,760
you generate a new application secret

645
00:27:15,320 --> 00:27:18,260
which is the thing you're going to use

646
00:27:16,760 --> 00:27:19,879
for generating encryption keys for the

647
00:27:18,260 --> 00:27:22,550
whole group and you're gonna KDF off of

648
00:27:19,880 --> 00:27:23,870
that individual secrets for the members

649
00:27:22,550 --> 00:27:25,639
of the group which said it the leaves of

650
00:27:23,870 --> 00:27:28,370
this tree you might notice this is the

651
00:27:25,640 --> 00:27:30,950
same tree structure we're using for the

652
00:27:28,370 --> 00:27:34,100
the ratchet tree right for encrypting

653
00:27:30,950 --> 00:27:35,360
stuff to the group but we're I kind of

654
00:27:34,100 --> 00:27:37,939
feel like that that tree tends to move

655
00:27:35,360 --> 00:27:40,100
bottom-up in terms of generating secrets

656
00:27:37,940 --> 00:27:42,320
up the tree this one moves to top down

657
00:27:40,100 --> 00:27:45,050
and we seed it with an application

658
00:27:42,320 --> 00:27:48,290
secret and then we ktf down the tree so

659
00:27:45,050 --> 00:27:50,030
when we start a new epoch we populate

660
00:27:48,290 --> 00:27:52,940
the root node of this tree and that's

661
00:27:50,030 --> 00:27:56,149
all we need to do there's in earlier

662
00:27:52,940 --> 00:27:58,700
versions you had to do a linear size

663
00:27:56,150 --> 00:27:59,870
number of kts as soon as you updated the

664
00:27:58,700 --> 00:28:03,080
epoch so you could receive from

665
00:27:59,870 --> 00:28:05,179
somewhere you as soon as you received in

666
00:28:03,080 --> 00:28:06,949
order to get forward secrecy but right

667
00:28:05,180 --> 00:28:08,300
now all you need to do is generate that

668
00:28:06,950 --> 00:28:12,230
application secret and then when you

669
00:28:08,300 --> 00:28:15,919
receive from someone you generate KDF

670
00:28:12,230 --> 00:28:17,980
down the tree to get that person's leaf

671
00:28:15,920 --> 00:28:21,380
key which is going to end up producing

672
00:28:17,980 --> 00:28:22,670
their there it'll be the starting point

673
00:28:21,380 --> 00:28:24,890
of their house retro from which you'll

674
00:28:22,670 --> 00:28:27,350
get encryption keys and the point here

675
00:28:24,890 --> 00:28:27,830
is that instead of doing a linear size

676
00:28:27,350 --> 00:28:30,918
opera

677
00:28:27,830 --> 00:28:33,889
number of KDF to get forward secrecy

678
00:28:30,919 --> 00:28:35,690
when you start receiving you've had to

679
00:28:33,890 --> 00:28:37,340
do only a log number here and you've

680
00:28:35,690 --> 00:28:40,880
only had to keep around a log size

681
00:28:37,340 --> 00:28:43,820
number of other keys that you need to

682
00:28:40,880 --> 00:28:45,769
you generate the other secrets so I

683
00:28:43,820 --> 00:28:48,529
guess I should have highlighted the the

684
00:28:45,769 --> 00:28:50,000
status quo ante but before you would

685
00:28:48,529 --> 00:28:53,090
have had to generate all of these lief

686
00:28:50,000 --> 00:28:54,799
secrets to get forward secrecy in this

687
00:28:53,090 --> 00:28:57,949
context whereas here you just have to

688
00:28:54,799 --> 00:29:01,519
keep around these dark outlined secrets

689
00:28:57,950 --> 00:29:04,130
so that's kind of they and the ideas

690
00:29:01,519 --> 00:29:07,309
then you know as you know if say L were

691
00:29:04,130 --> 00:29:09,019
to send something no next you would you

692
00:29:07,309 --> 00:29:10,639
know KDF down from this point and keep

693
00:29:09,019 --> 00:29:13,010
around some these other notes so you

694
00:29:10,639 --> 00:29:14,928
gradually build up to where you have all

695
00:29:13,010 --> 00:29:17,330
the leads populated if everyone sends

696
00:29:14,929 --> 00:29:19,549
but you only generate when someone sends

697
00:29:17,330 --> 00:29:21,678
a message into the group and so you have

698
00:29:19,549 --> 00:29:23,059
a you know you react a little better a

699
00:29:21,679 --> 00:29:26,480
little more conservatively you don't do

700
00:29:23,059 --> 00:29:28,700
as much work upfront one or not also

701
00:29:26,480 --> 00:29:35,570
highlight this this consumption of yeah

702
00:29:28,700 --> 00:29:44,360
Benjamin F yes you're right I should be

703
00:29:35,570 --> 00:29:45,889
yeah I think I think the draft is

704
00:29:44,360 --> 00:29:48,049
correct I think this is just my hand

705
00:29:45,889 --> 00:29:50,860
generation of the slide that's screwed

706
00:29:48,049 --> 00:29:56,809
up this working group requires a lot of

707
00:29:50,860 --> 00:29:59,178
artistic skills sometimes yeah things

708
00:29:56,809 --> 00:30:00,408
fall through the cracks the other thing

709
00:29:59,179 --> 00:30:02,889
I wanted to highlight here from from

710
00:30:00,409 --> 00:30:06,380
Chapter seven was this consumption rule

711
00:30:02,889 --> 00:30:09,529
the rule here is that a secret is

712
00:30:06,380 --> 00:30:13,149
consumed if it is used to decrypt a

713
00:30:09,529 --> 00:30:16,820
message so in this example we've

714
00:30:13,149 --> 00:30:18,260
received a sec the second message

715
00:30:16,820 --> 00:30:21,470
encrypted with the second generation of

716
00:30:18,260 --> 00:30:23,090
keys from E and to tolerate reordering

717
00:30:21,470 --> 00:30:24,860
we want to keep around than the keys

718
00:30:23,090 --> 00:30:26,600
from the first generation so that if

719
00:30:24,860 --> 00:30:29,449
that first generation message shows up

720
00:30:26,600 --> 00:30:31,629
we can decrypt it but by these

721
00:30:29,450 --> 00:30:34,159
consumption rules we've had to delete

722
00:30:31,630 --> 00:30:35,750
these this key and nonce will delete

723
00:30:34,159 --> 00:30:37,820
these as soon as we have decrypted the

724
00:30:35,750 --> 00:30:39,559
message because now they're no longer

725
00:30:37,820 --> 00:30:41,240
needed because we should never get a

726
00:30:39,559 --> 00:30:43,879
second generation message

727
00:30:41,240 --> 00:30:46,400
and the second rule here is that if we

728
00:30:43,880 --> 00:30:48,350
you if I consume the secret derived from

729
00:30:46,400 --> 00:30:50,000
a secret then we have to consume that

730
00:30:48,350 --> 00:30:52,490
secret as well so basically these this

731
00:30:50,000 --> 00:30:56,150
consumption rollback propagates so when

732
00:30:52,490 --> 00:30:58,490
we decrypted this second this generation

733
00:30:56,150 --> 00:31:01,160
2 message here we now have to consume

734
00:30:58,490 --> 00:31:03,590
this secret this secret this secret and

735
00:31:01,160 --> 00:31:04,940
so on up the chain and so you can kind

736
00:31:03,590 --> 00:31:07,280
of see how this leads to forward secrecy

737
00:31:04,940 --> 00:31:09,440
because now you've deleted anything that

738
00:31:07,280 --> 00:31:12,050
could possibly be used to regenerate the

739
00:31:09,440 --> 00:31:13,220
secret you just used so if there's if

740
00:31:12,050 --> 00:31:17,450
there's compromise from this point

741
00:31:13,220 --> 00:31:19,810
forward then you can't go back you can't

742
00:31:17,450 --> 00:31:22,400
reconstruct the stuff you just use yeah

743
00:31:19,810 --> 00:31:25,190
you have a question about that my

744
00:31:22,400 --> 00:31:28,040
expectation is that when you derive key

745
00:31:25,190 --> 00:31:30,140
and then not when you consume them you

746
00:31:28,040 --> 00:31:35,149
you will keep the secret that generated

747
00:31:30,140 --> 00:31:38,690
them so to me it's like the last the

748
00:31:35,150 --> 00:31:42,320
last cross yeah you you you raise that

749
00:31:38,690 --> 00:31:45,350
secret as soon as you derive KN and the

750
00:31:42,320 --> 00:31:48,649
next secret so that you never have any

751
00:31:45,350 --> 00:31:51,139
problem in case it's equal so you're

752
00:31:48,650 --> 00:31:53,780
saying like if we got a generation 3

753
00:31:51,140 --> 00:31:56,150
message here we would immediately derive

754
00:31:53,780 --> 00:32:00,410
K and from this secret and then ratchet

755
00:31:56,150 --> 00:32:03,050
down one more stuff and yeah like that

756
00:32:00,410 --> 00:32:04,730
basically I see it as one step back to

757
00:32:03,050 --> 00:32:06,620
the relations the next application

758
00:32:04,730 --> 00:32:10,010
secret the key the nonce and you feel

759
00:32:06,620 --> 00:32:12,800
immediately the generated them because

760
00:32:10,010 --> 00:32:14,960
otherwise you use that that nice

761
00:32:12,800 --> 00:32:18,379
property that you taught you you never

762
00:32:14,960 --> 00:32:20,360
can recompute that key I know I think it

763
00:32:18,380 --> 00:32:21,770
is because this yeah we've been you and

764
00:32:20,360 --> 00:32:23,300
I discussed this often I don't think

765
00:32:21,770 --> 00:32:25,040
it's super clear in the document right

766
00:32:23,300 --> 00:32:26,419
now it doesn't follow from from these

767
00:32:25,040 --> 00:32:31,700
two rules we have so it might be useful

768
00:32:26,420 --> 00:32:34,720
to clarify derive the keys we should

769
00:32:31,700 --> 00:32:37,720
delete the secret we never use it anyway

770
00:32:34,720 --> 00:32:37,720
anymore

771
00:32:43,280 --> 00:32:48,389
that's coming from acre so yeah and one

772
00:32:47,070 --> 00:32:51,659
thing I guess I should have clarified on

773
00:32:48,390 --> 00:32:54,480
this slide that the once the secret is

774
00:32:51,660 --> 00:32:56,160
consumed you have to delete it a Riyadh

775
00:32:54,480 --> 00:32:58,260
Wahby yeah what question would it make

776
00:32:56,160 --> 00:33:01,170
sense to just define an API that for

777
00:32:58,260 --> 00:33:03,690
example takes the leaf node there and

778
00:33:01,170 --> 00:33:06,510
returns km and a new leaf node and

779
00:33:03,690 --> 00:33:08,250
deletes the input and then that's the

780
00:33:06,510 --> 00:33:10,320
only API that is used to operate on

781
00:33:08,250 --> 00:33:11,580
those sort of obviously that only works

782
00:33:10,320 --> 00:33:13,620
for the leaf nodes it doesn't work

783
00:33:11,580 --> 00:33:15,330
inside of the tree but it may be that

784
00:33:13,620 --> 00:33:17,850
defining it in terms of an API and makes

785
00:33:15,330 --> 00:33:20,760
extremely clear it could be yeah I mean

786
00:33:17,850 --> 00:33:22,469
just yeah that might be in like if you'd

787
00:33:20,760 --> 00:33:24,870
like to take a look at how to write that

788
00:33:22,470 --> 00:33:28,230
down that I'd be interested to kind of

789
00:33:24,870 --> 00:33:29,129
see that written as I think yeah I've

790
00:33:28,230 --> 00:33:32,720
certainly thought into implementation

791
00:33:29,130 --> 00:33:35,430
terms of like creating a secret you know

792
00:33:32,720 --> 00:33:36,930
C++ class that tracks its dependencies

793
00:33:35,430 --> 00:33:39,120
and automatically back propagates that

794
00:33:36,930 --> 00:33:41,910
deletion you can do some clever things

795
00:33:39,120 --> 00:33:43,679
in implementation like that I I'm not

796
00:33:41,910 --> 00:33:45,780
totally sure that there's specification

797
00:33:43,680 --> 00:33:47,760
I ways to do that but it might if you

798
00:33:45,780 --> 00:33:50,280
have a clever way to write down it could

799
00:33:47,760 --> 00:33:53,270
be actually what we're doing the

800
00:33:50,280 --> 00:33:55,590
security proof we do this once that

801
00:33:53,270 --> 00:33:58,170
expansion of the three scenes together

802
00:33:55,590 --> 00:34:01,649
great so Riyadh and Benjamin you should

803
00:33:58,170 --> 00:34:04,410
talk and I get this gonna PR ok I think

804
00:34:01,650 --> 00:34:06,450
think that's the main backward looking

805
00:34:04,410 --> 00:34:08,610
stuff in terms of where we're going with

806
00:34:06,450 --> 00:34:12,980
the spec I think we've been trying to

807
00:34:08,610 --> 00:34:16,050
kind of match spec versions to meet ups

808
00:34:12,980 --> 00:34:18,120
you know interims or IETF and we've been

809
00:34:16,050 --> 00:34:20,550
doing interims roughly every you know

810
00:34:18,120 --> 00:34:22,830
once in between every pair of i'ts yes

811
00:34:20,550 --> 00:34:23,909
so I think we'll discuss this later in

812
00:34:22,830 --> 00:34:25,949
the meeting but I think roughly

813
00:34:23,909 --> 00:34:28,139
late-september as the target for the

814
00:34:25,949 --> 00:34:31,649
next interim we'll probably try to have

815
00:34:28,139 --> 00:34:32,700
draft Oh 8 ready for that based on the

816
00:34:31,649 --> 00:34:34,649
proposal we're talking about in this

817
00:34:32,699 --> 00:34:35,520
meeting and you know anything else that

818
00:34:34,649 --> 00:34:38,370
comes up as we try and your

819
00:34:35,520 --> 00:34:39,960
implementation my hope we've had a

820
00:34:38,370 --> 00:34:41,399
little bit of this I think of divergence

821
00:34:39,960 --> 00:34:43,199
and the implementations we still have

822
00:34:41,399 --> 00:34:45,989
you know four or five implementations

823
00:34:43,199 --> 00:34:47,219
going it's seven most most of which I

824
00:34:45,989 --> 00:34:50,908
think are open source maybe a couple of

825
00:34:47,219 --> 00:34:52,859
closed source ones as well but I'm

826
00:34:50,909 --> 00:34:55,710
hoping that as we get a little more

827
00:34:52,860 --> 00:34:57,300
stability in the API are in the in the

828
00:34:55,710 --> 00:34:58,410
spec over the second half of this year

829
00:34:57,300 --> 00:35:02,940
we can start to get a little bit more

830
00:34:58,410 --> 00:35:04,350
aligned than plantations drafts are nine

831
00:35:02,940 --> 00:35:05,480
it was obviously farther out in the

832
00:35:04,350 --> 00:35:09,509
future a little more uncertainty

833
00:35:05,480 --> 00:35:11,940
hopefully would you know get feedback on

834
00:35:09,510 --> 00:35:16,710
o8 at the interim and and do doooo a

835
00:35:11,940 --> 00:35:19,080
nine for the IETF um I'm hoping that bio

836
00:35:16,710 --> 00:35:20,880
nine will start soon be making smaller

837
00:35:19,080 --> 00:35:23,069
and smaller changes and start to

838
00:35:20,880 --> 00:35:25,620
stabilize as we get to the IETF and to

839
00:35:23,070 --> 00:35:28,410
the end of the year so this is kind of

840
00:35:25,620 --> 00:35:29,970
my my view of the glide path I feel like

841
00:35:28,410 --> 00:35:32,190
we're we have a good conceptual

842
00:35:29,970 --> 00:35:33,660
framework we're doing some optimization

843
00:35:32,190 --> 00:35:36,210
work now to make the performance a

844
00:35:33,660 --> 00:35:37,950
little better but I think as as we get

845
00:35:36,210 --> 00:35:40,680
some security analysis results coming in

846
00:35:37,950 --> 00:35:43,049
and as we get some confidence in the the

847
00:35:40,680 --> 00:35:44,609
usable performance of this we should be

848
00:35:43,050 --> 00:35:46,620
able to start stabilizing about the end

849
00:35:44,610 --> 00:35:49,680
of the years that's kind of my you know

850
00:35:46,620 --> 00:35:51,839
rough prediction of the future so some

851
00:35:49,680 --> 00:35:53,879
of this so some of the reason why we set

852
00:35:51,840 --> 00:35:55,620
up in Las Vegas to kind of mirror what

853
00:35:53,880 --> 00:35:57,510
TLS did and have in terms of

854
00:35:55,620 --> 00:35:59,640
implementations and the like are you

855
00:35:57,510 --> 00:36:01,200
seeing that I know the answer I'm giving

856
00:35:59,640 --> 00:36:02,580
you a softball question so everyone else

857
00:36:01,200 --> 00:36:04,200
will know the answer how the

858
00:36:02,580 --> 00:36:06,299
implementations are coming along and

859
00:36:04,200 --> 00:36:08,100
whether they'll be somewhat aligned with

860
00:36:06,300 --> 00:36:09,510
draft oh nine coming towards the end of

861
00:36:08,100 --> 00:36:11,880
the year so we'll be able to prove out

862
00:36:09,510 --> 00:36:13,260
that it works because I've some people

863
00:36:11,880 --> 00:36:15,360
have told me it's a couple hundred lines

864
00:36:13,260 --> 00:36:17,010
of code and it's not that bad so I'm

865
00:36:15,360 --> 00:36:18,180
hoping that it's not all that bad for

866
00:36:17,010 --> 00:36:20,160
other people and get multiple

867
00:36:18,180 --> 00:36:25,080
implementations to show that we've

868
00:36:20,160 --> 00:36:26,879
proved it out so obviously these specs

869
00:36:25,080 --> 00:36:28,980
that the implementations tend to lag the

870
00:36:26,880 --> 00:36:32,100
specs by a little while right so so oh

871
00:36:28,980 --> 00:36:33,690
nine drops and say early November it'll

872
00:36:32,100 --> 00:36:35,580
take a little while for the

873
00:36:33,690 --> 00:36:40,500
implementations to catch up maybe we can

874
00:36:35,580 --> 00:36:42,210
use the hackathon IETF whatever 106 to

875
00:36:40,500 --> 00:36:43,530
catch people up I don't know if there

876
00:36:42,210 --> 00:36:47,340
are implementers in the room who want to

877
00:36:43,530 --> 00:36:48,600
comment on this Benjamin I think you've

878
00:36:47,340 --> 00:36:52,440
got a stack going how close are you to

879
00:36:48,600 --> 00:36:54,779
the spec right now but personally my

880
00:36:52,440 --> 00:37:00,720
implementation has is not up to the

881
00:36:54,780 --> 00:37:02,610
current spec and so efficient

882
00:37:00,720 --> 00:37:06,509
implementation typically the formal spec

883
00:37:02,610 --> 00:37:06,840
the cons I'm basically as a to date as I

884
00:37:06,510 --> 00:37:09,300
can

885
00:37:06,840 --> 00:37:12,690
I think the only thing that's slightly

886
00:37:09,300 --> 00:37:14,190
different is the I don't have exactly

887
00:37:12,690 --> 00:37:16,290
the same application key schedule

888
00:37:14,190 --> 00:37:19,740
because we learn delete so just like a

889
00:37:16,290 --> 00:37:21,420
few enemy need to do the proof that it

890
00:37:19,740 --> 00:37:23,310
that it meant send the secret in

891
00:37:21,420 --> 00:37:25,410
violence know that stuff before I can

892
00:37:23,310 --> 00:37:27,810
claim that I'm up to date with the draft

893
00:37:25,410 --> 00:37:29,160
so there is like you we have like

894
00:37:27,810 --> 00:37:30,450
multiple implementations right we have

895
00:37:29,160 --> 00:37:32,279
the formal spec that completely

896
00:37:30,450 --> 00:37:35,279
inefficient idea recursive mathematical

897
00:37:32,280 --> 00:37:37,710
specification that once you but it's not

898
00:37:35,280 --> 00:37:40,080
a performance thing it's just an on top

899
00:37:37,710 --> 00:37:41,730
team and we have one that is efficient

900
00:37:40,080 --> 00:37:44,220
but this one is further away I think

901
00:37:41,730 --> 00:37:47,070
it's like two or three blocks away okay

902
00:37:44,220 --> 00:37:49,169
and so the the implementations you're

903
00:37:47,070 --> 00:37:50,850
working on our or somehow verified can

904
00:37:49,170 --> 00:37:52,260
you come and just briefly on what sort

905
00:37:50,850 --> 00:37:53,580
of verification we'll get once we have

906
00:37:52,260 --> 00:37:56,460
that this is a match between that

907
00:37:53,580 --> 00:38:00,120
inspect okay so the idea is that we have

908
00:37:56,460 --> 00:38:02,280
two implementations one which is I love

909
00:38:00,120 --> 00:38:04,350
all using recursive data types for three

910
00:38:02,280 --> 00:38:06,900
six it's very compact that's the few

911
00:38:04,350 --> 00:38:10,080
hundred lines of code that shine

912
00:38:06,900 --> 00:38:13,320
referred to and we have multiple

913
00:38:10,080 --> 00:38:16,500
thousand lines of code that is efficient

914
00:38:13,320 --> 00:38:19,470
and reasons like is an inci and this one

915
00:38:16,500 --> 00:38:21,960
is stalled away I think but for Interop

916
00:38:19,470 --> 00:38:24,060
I think this the formal spec which

917
00:38:21,960 --> 00:38:26,670
enforce the security hoof which means

918
00:38:24,060 --> 00:38:29,880
secrecy environments all these things is

919
00:38:26,670 --> 00:38:30,900
quite close I think that's a fool in

920
00:38:29,880 --> 00:38:32,310
some I think that's the one that's

921
00:38:30,900 --> 00:38:34,140
sufficient the one that you want to make

922
00:38:32,310 --> 00:38:35,730
those things that's a free what you want

923
00:38:34,140 --> 00:38:37,560
to do with that but just in terms of

924
00:38:35,730 --> 00:38:39,090
trying to prove out this back is really

925
00:38:37,560 --> 00:38:42,480
kind of what we need and having multiple

926
00:38:39,090 --> 00:38:44,010
helps and this one you can do most of

927
00:38:42,480 --> 00:38:46,530
the algorithms actually you can do

928
00:38:44,010 --> 00:38:48,540
everything I think so we can enter up on

929
00:38:46,530 --> 00:38:50,340
teach you five six on curve on such a

930
00:38:48,540 --> 00:38:53,370
poly ASTM whatever we have old

931
00:38:50,340 --> 00:38:56,490
originally yeah so that may be something

932
00:38:53,370 --> 00:38:59,460
to discuss as a target for the interim

933
00:38:56,490 --> 00:39:01,229
maybe we can get a draft of eight out

934
00:38:59,460 --> 00:39:02,250
and have been in bands of the interim so

935
00:39:01,230 --> 00:39:03,540
that people can have some time to

936
00:39:02,250 --> 00:39:06,150
implement maybe do some Interop testing

937
00:39:03,540 --> 00:39:08,190
alongside that that's a good idea so

938
00:39:06,150 --> 00:39:14,420
it's a try and keep up a little bit

939
00:39:08,190 --> 00:39:17,490
better yeah all right now that's that's

940
00:39:14,420 --> 00:39:20,369
current current spec status any any

941
00:39:17,490 --> 00:39:22,979
further comments on that questions about

942
00:39:20,369 --> 00:39:25,410
we are right now okay so next couple of

943
00:39:22,980 --> 00:39:29,009
topics are about things that we'd might

944
00:39:25,410 --> 00:39:30,839
like to do to make the spec better first

945
00:39:29,009 --> 00:39:33,059
of all I'd like to talk about is this

946
00:39:30,839 --> 00:39:35,730
idea of laziness and the lazy phrasing

947
00:39:33,059 --> 00:39:38,039
comes from from Rafael but most of this

948
00:39:35,730 --> 00:39:42,089
idea is due to Rafael's put the two-wire

949
00:39:38,039 --> 00:39:43,920
lookup very kind of share some credit so

950
00:39:42,089 --> 00:39:46,220
the idea here is I think a lot of the

951
00:39:43,920 --> 00:39:48,690
motivation here

952
00:39:46,220 --> 00:39:50,848
Rafael described this a lot in in terms

953
00:39:48,690 --> 00:39:53,279
of bringing a new device online so when

954
00:39:50,849 --> 00:39:55,170
I bring a new device and log into a new

955
00:39:53,279 --> 00:39:58,049
device it has to join all of the groups

956
00:39:55,170 --> 00:39:59,759
I'm in and if it's got to do a whole

957
00:39:58,049 --> 00:40:00,779
bunch of d-h operations for each of

958
00:39:59,759 --> 00:40:02,759
those groups like this to be very

959
00:40:00,779 --> 00:40:04,529
heavyweight especially if I've got a lot

960
00:40:02,759 --> 00:40:06,990
of groups going on so he came out this

961
00:40:04,529 --> 00:40:09,869
looking at what can I do to make that

962
00:40:06,990 --> 00:40:12,269
new device onboarding process easier and

963
00:40:09,869 --> 00:40:14,490
make it and say constant time operations

964
00:40:12,269 --> 00:40:19,078
to join a group or to update into a

965
00:40:14,490 --> 00:40:22,470
group the observation I'll start from

966
00:40:19,079 --> 00:40:24,869
here is that the secrets shared by the

967
00:40:22,470 --> 00:40:27,328
group only need to be updated if there's

968
00:40:24,869 --> 00:40:29,460
messaging so if I've got a group and

969
00:40:27,329 --> 00:40:30,720
I've added 15 people have removed

970
00:40:29,460 --> 00:40:33,170
another five people on the other side

971
00:40:30,720 --> 00:40:35,700
and 30 people have updated their keys

972
00:40:33,170 --> 00:40:38,569
all of those changes have no

973
00:40:35,700 --> 00:40:42,210
significance if there's no messaging so

974
00:40:38,569 --> 00:40:45,269
the the underlying approach here is to

975
00:40:42,210 --> 00:40:47,910
take all of the crypto math you would

976
00:40:45,269 --> 00:40:49,919
need to do to update the key and defer

977
00:40:47,910 --> 00:40:51,029
that until a message needs to be

978
00:40:49,920 --> 00:40:53,039
sentenced to the group

979
00:40:51,029 --> 00:40:55,319
we're not doing that right now every

980
00:40:53,039 --> 00:40:57,210
time you do an operation

981
00:40:55,319 --> 00:40:59,160
every time you add someone or remove

982
00:40:57,210 --> 00:41:01,499
someone or update a key you have to do

983
00:40:59,160 --> 00:41:03,839
all the d-h operations to update the

984
00:41:01,499 --> 00:41:08,640
group secret even if there's there's no

985
00:41:03,839 --> 00:41:09,690
messaging going on yeah ekor how does

986
00:41:08,640 --> 00:41:17,400
that work of your company handshake

987
00:41:09,690 --> 00:41:19,529
messages a good question I admit I have

988
00:41:17,400 --> 00:41:20,849
not thought about that he seems like

989
00:41:19,529 --> 00:41:22,319
putting a part of the operation here

990
00:41:20,849 --> 00:41:24,059
when I joined the group is to get to a

991
00:41:22,319 --> 00:41:25,230
new key that I understand that's when

992
00:41:24,059 --> 00:41:26,910
the next person wants in a message

993
00:41:25,230 --> 00:41:31,049
presumably they need inside of that key

994
00:41:26,910 --> 00:41:33,480
not the old key yeah I think maybe part

995
00:41:31,049 --> 00:41:35,490
of this concept would be kind of an

996
00:41:33,480 --> 00:41:37,350
initiative sub a pox right so if these

997
00:41:35,490 --> 00:41:40,379
things don't only change the tree and

998
00:41:37,350 --> 00:41:43,850
don't change the group's secrets it's

999
00:41:40,380 --> 00:41:48,170
possible you could keep encrypting the

1000
00:41:43,850 --> 00:41:50,580
group messages under the same epic keys

1001
00:41:48,170 --> 00:41:52,230
that gets big that's part of your stance

1002
00:41:50,580 --> 00:41:54,750
it seems to me like we have a group of

1003
00:41:52,230 --> 00:41:59,280
three people the fourth person joins and

1004
00:41:54,750 --> 00:42:00,750
the fifth person is networks right yeah

1005
00:41:59,280 --> 00:42:02,400
yeah I just thought sorry thinking of

1006
00:42:00,750 --> 00:42:04,290
this like I could be totally wrong by

1007
00:42:02,400 --> 00:42:05,790
that no no that's an excellent excellent

1008
00:42:04,290 --> 00:42:10,350
comment I don't know the answer to that

1009
00:42:05,790 --> 00:42:11,850
okay yeah researchers if he helmets

1010
00:42:10,350 --> 00:42:15,180
right it's not the hashes yeah

1011
00:42:11,850 --> 00:42:17,130
absolutely yeah and so in the ad case

1012
00:42:15,180 --> 00:42:20,009
yeah you may be able to just hash things

1013
00:42:17,130 --> 00:42:20,850
forward as long as you can get the right

1014
00:42:20,010 --> 00:42:26,100
stuff to the new joiner

1015
00:42:20,850 --> 00:42:29,190
yeah yeah so write the proposal here is

1016
00:42:26,100 --> 00:42:30,690
to do cheap stuff upfront and modify the

1017
00:42:29,190 --> 00:42:32,970
tree right modifying the trees chief

1018
00:42:30,690 --> 00:42:36,480
you're just emplacing you're storing

1019
00:42:32,970 --> 00:42:38,939
public keys and then when you before you

1020
00:42:36,480 --> 00:42:40,830
send a message to the group you encrypt

1021
00:42:38,940 --> 00:42:43,080
to the tree you quips a new entropy to

1022
00:42:40,830 --> 00:42:44,700
update the the group secrets and that's

1023
00:42:43,080 --> 00:42:47,400
what then you incur the cost of all the

1024
00:42:44,700 --> 00:42:49,799
D H operations so I think of this kind

1025
00:42:47,400 --> 00:42:51,450
of as a rearrangement of the operations

1026
00:42:49,800 --> 00:42:53,369
we're doing thanks it's nice that we

1027
00:42:51,450 --> 00:42:54,569
kind of got things we understand that

1028
00:42:53,369 --> 00:42:56,160
have a taxonomy here we can just

1029
00:42:54,570 --> 00:42:58,380
rearrange things so if you look at the

1030
00:42:56,160 --> 00:43:00,240
way you know the current operations are

1031
00:42:58,380 --> 00:43:03,480
structured when you add someone to the

1032
00:43:00,240 --> 00:43:05,700
group you in place they're public key at

1033
00:43:03,480 --> 00:43:07,800
the leaf they're being added to you

1034
00:43:05,700 --> 00:43:09,629
blank out the path from that leaf to the

1035
00:43:07,800 --> 00:43:14,160
root and then the group hashes forward

1036
00:43:09,630 --> 00:43:16,710
into a new into a new group secret when

1037
00:43:14,160 --> 00:43:18,600
you update likewise we reset the leaf

1038
00:43:16,710 --> 00:43:20,310
and you encrypt some fresh entropy to

1039
00:43:18,600 --> 00:43:23,310
the group that refreshes the group

1040
00:43:20,310 --> 00:43:25,740
secret when you remove it's kind of like

1041
00:43:23,310 --> 00:43:28,950
a mash up of about an update you you

1042
00:43:25,740 --> 00:43:31,020
reset the the removed members leave to

1043
00:43:28,950 --> 00:43:32,640
blank you kick them out of the group and

1044
00:43:31,020 --> 00:43:34,800
you reset their their direct path to

1045
00:43:32,640 --> 00:43:36,540
blank you don't clip some fresh entropy

1046
00:43:34,800 --> 00:43:39,320
to the group that so that they no longer

1047
00:43:36,540 --> 00:43:41,570
know the group secret so

1048
00:43:39,320 --> 00:43:44,240
really the idea here is to take the

1049
00:43:41,570 --> 00:43:48,320
expensive stuff so like hashing is that

1050
00:43:44,240 --> 00:43:49,669
isn't that expensive but maybe but you

1051
00:43:48,320 --> 00:43:52,160
have these these encrypting fresh

1052
00:43:49,670 --> 00:43:55,070
entropy to the group involved you know

1053
00:43:52,160 --> 00:43:56,330
logs log size th operations those those

1054
00:43:55,070 --> 00:43:58,190
the expensive things

1055
00:43:56,330 --> 00:44:00,950
if you especially if you have to do them

1056
00:43:58,190 --> 00:44:03,560
across a whole bunch of groups so the

1057
00:44:00,950 --> 00:44:06,680
the proposal here in kind of protocol

1058
00:44:03,560 --> 00:44:08,540
syntax terms is to take the add update

1059
00:44:06,680 --> 00:44:10,940
and remove operations and chop off the

1060
00:44:08,540 --> 00:44:12,680
expensive parts right resetting leaves

1061
00:44:10,940 --> 00:44:14,780
and blanking paths those are just

1062
00:44:12,680 --> 00:44:17,240
changing bits in a data structure it's

1063
00:44:14,780 --> 00:44:20,000
it's right they're very cheap to do and

1064
00:44:17,240 --> 00:44:21,140
then take this the expensive stuff on

1065
00:44:20,000 --> 00:44:23,630
the right hand side here and make a

1066
00:44:21,140 --> 00:44:25,310
ratchet operation that encrypts some

1067
00:44:23,630 --> 00:44:27,890
fresh fresh entropy to the group and

1068
00:44:25,310 --> 00:44:42,259
advances the group State Joe did you

1069
00:44:27,890 --> 00:44:44,180
have a sense if you get a new ad before

1070
00:44:42,260 --> 00:44:47,510
you've done the expensive stuff you need

1071
00:44:44,180 --> 00:44:52,220
to do the expensive stuff before you get

1072
00:44:47,510 --> 00:44:53,600
the next tree changer oh I forgot to

1073
00:44:52,220 --> 00:44:56,540
make the illustration here that I made a

1074
00:44:53,600 --> 00:44:59,750
note for yeah there's a corollary to

1075
00:44:56,540 --> 00:45:03,380
this that you need to have a rule and

1076
00:44:59,750 --> 00:45:04,820
Rafael gets units and one sec if you're

1077
00:45:03,380 --> 00:45:06,560
gonna split things out this way

1078
00:45:04,820 --> 00:45:08,690
you need to make sure that this ratchet

1079
00:45:06,560 --> 00:45:11,509
operation happens before you send a

1080
00:45:08,690 --> 00:45:13,400
message right so the ads and and updates

1081
00:45:11,510 --> 00:45:15,680
and removes have been reflected in the

1082
00:45:13,400 --> 00:45:17,750
tree but they're not reflected in the

1083
00:45:15,680 --> 00:45:20,569
group state yet until you do a ratchet

1084
00:45:17,750 --> 00:45:21,680
so if if you you if you're going to send

1085
00:45:20,570 --> 00:45:24,140
the message you need to send a ratchet

1086
00:45:21,680 --> 00:45:25,850
first to update the group state so it

1087
00:45:24,140 --> 00:45:27,589
matches the tree now I think that's

1088
00:45:25,850 --> 00:45:29,270
that's the major risk here is that you

1089
00:45:27,590 --> 00:45:31,730
need to get that timing right and have

1090
00:45:29,270 --> 00:46:09,500
clear rules that people abide by yeah

1091
00:45:31,730 --> 00:46:24,710
Rafael close to the mic could you pause

1092
00:46:09,500 --> 00:46:32,210
for a second the audio mixer we have the

1093
00:46:24,710 --> 00:46:38,060
these calling u-turn Rafael could you

1094
00:46:32,210 --> 00:46:51,320
try again best nope Colin you turn off

1095
00:46:38,060 --> 00:46:52,759
the front Raphael can you generate some

1096
00:46:51,320 --> 00:46:58,730
signal here so that we can figure out

1097
00:46:52,760 --> 00:46:59,120
which knob is the right one that's great

1098
00:46:58,730 --> 00:47:10,520
go ahead

1099
00:46:59,120 --> 00:47:14,810
Colin can you turn the alright so on the

1100
00:47:10,520 --> 00:47:16,310
update line I think what you we never

1101
00:47:14,810 --> 00:47:19,220
said that so explicitly but we also

1102
00:47:16,310 --> 00:47:22,430
plant the direct path when you send a

1103
00:47:19,220 --> 00:47:25,790
normal update and then you override it

1104
00:47:22,430 --> 00:47:28,210
with new values so in that sense the

1105
00:47:25,790 --> 00:47:31,400
update is equivalent to the and remove

1106
00:47:28,210 --> 00:47:39,420
right now it looks visually looks as if

1107
00:47:31,400 --> 00:47:43,890
it was different your audio games

1108
00:47:39,420 --> 00:47:46,880
he maybe restate that so in the second

1109
00:47:43,890 --> 00:47:46,879
line with the update

1110
00:47:47,540 --> 00:47:54,000
there is one box missing that it's blank

1111
00:47:50,760 --> 00:47:56,160
direct path and and I think that's what

1112
00:47:54,000 --> 00:47:59,579
you also do in basically when you do an

1113
00:47:56,160 --> 00:48:02,940
update because I never liked that path

1114
00:47:59,579 --> 00:48:04,740
yeah I think that's right and I probably

1115
00:48:02,940 --> 00:48:06,690
should have included that here I was

1116
00:48:04,740 --> 00:48:10,709
thinking that the the encrypt fresh

1117
00:48:06,690 --> 00:48:13,710
entropy box also carried fresh public

1118
00:48:10,710 --> 00:48:15,480
keys but you're right that if we're

1119
00:48:13,710 --> 00:48:16,950
doing this in the Lazy style who needs

1120
00:48:15,480 --> 00:48:17,460
to do the blank at the update time

1121
00:48:16,950 --> 00:48:26,730
that's correct

1122
00:48:17,460 --> 00:48:29,790
yeah thanks okay are we back back to

1123
00:48:26,730 --> 00:48:31,470
volume here okay great yeah sorry I

1124
00:48:29,790 --> 00:48:37,049
forgot to draw a picture of this we've

1125
00:48:31,470 --> 00:48:40,828
got better pictures later let's see yeah

1126
00:48:37,049 --> 00:48:42,660
so this would be a fairly major refactor

1127
00:48:40,829 --> 00:48:44,940
to the the protocol messages we'd have

1128
00:48:42,660 --> 00:48:46,379
to create this new rachet operation that

1129
00:48:44,940 --> 00:48:48,839
describes how you encrypt stuff to the

1130
00:48:46,380 --> 00:48:50,730
group but and you know obviously strip

1131
00:48:48,839 --> 00:48:53,009
out the updating bits of the current

1132
00:48:50,730 --> 00:48:55,410
operations but it like I said earlier

1133
00:48:53,010 --> 00:48:56,460
it's largely just rearranging things and

1134
00:48:55,410 --> 00:48:59,308
moving things from one place to another

1135
00:48:56,460 --> 00:49:01,079
it may actually end up a bit simpler

1136
00:48:59,309 --> 00:49:03,420
because we'll only have the the tree

1137
00:49:01,079 --> 00:49:05,280
updating logic in one place instead of

1138
00:49:03,420 --> 00:49:08,670
spread across three different operations

1139
00:49:05,280 --> 00:49:13,140
so could be useful just to highlight the

1140
00:49:08,670 --> 00:49:14,930
trade-offs here add this I mean as we

1141
00:49:13,140 --> 00:49:16,799
set out to do we've made the

1142
00:49:14,930 --> 00:49:19,618
modifications to the group happened in

1143
00:49:16,799 --> 00:49:20,759
constant time before you send a message

1144
00:49:19,619 --> 00:49:22,619
so if you've got a group is not doing

1145
00:49:20,760 --> 00:49:25,530
any messaging they're just sitting there

1146
00:49:22,619 --> 00:49:27,569
maintaining the group you incur very

1147
00:49:25,530 --> 00:49:29,670
little costs to keep the tree up-to-date

1148
00:49:27,569 --> 00:49:32,549
the trade-off is that when you finally

1149
00:49:29,670 --> 00:49:36,299
do do a ratchet it's more expensive so

1150
00:49:32,549 --> 00:49:38,160
imagine you have a tree where it starts

1151
00:49:36,299 --> 00:49:40,859
off as full all the nodes are populated

1152
00:49:38,160 --> 00:49:44,490
with public keys but everyone in the

1153
00:49:40,859 --> 00:49:46,619
group sends an update before before the

1154
00:49:44,490 --> 00:49:48,779
next message is sent at that point

1155
00:49:46,619 --> 00:49:51,180
because you as Raphael pointed out you

1156
00:49:48,780 --> 00:49:53,040
have to blank when you update you now

1157
00:49:51,180 --> 00:49:53,500
have a tree that is only populated at

1158
00:49:53,040 --> 00:49:55,880
the

1159
00:49:53,500 --> 00:49:58,370
so when you send finally send that

1160
00:49:55,880 --> 00:50:00,800
ratchet operation it has a linear number

1161
00:49:58,370 --> 00:50:03,950
of D H operations to encrypts to each of

1162
00:50:00,800 --> 00:50:07,250
those leaves and individually so there's

1163
00:50:03,950 --> 00:50:10,640
there's kind of a lifecycle to the group

1164
00:50:07,250 --> 00:50:13,430
now that you know when you the as it

1165
00:50:10,640 --> 00:50:16,009
sits there and is inactive the tree kind

1166
00:50:13,430 --> 00:50:18,440
of degrades and it becomes less

1167
00:50:16,010 --> 00:50:19,760
populated as updates happen that blank

1168
00:50:18,440 --> 00:50:22,490
out parts the tree and then it gets

1169
00:50:19,760 --> 00:50:24,440
reconstituted as people do you messaging

1170
00:50:22,490 --> 00:50:29,600
and send rachet messages in the that

1171
00:50:24,440 --> 00:50:31,970
repopulate sit so i mean this right so

1172
00:50:29,600 --> 00:50:33,740
if people don't do these ratchet

1173
00:50:31,970 --> 00:50:35,480
operations very very often they could be

1174
00:50:33,740 --> 00:50:36,859
quite expensive because the longer you

1175
00:50:35,480 --> 00:50:42,050
go between them the more expensive they

1176
00:50:36,860 --> 00:50:45,080
are to do that's that's kind of the

1177
00:50:42,050 --> 00:50:46,400
trade-off the one thing I think is it's

1178
00:50:45,080 --> 00:50:49,730
promising they'll talk about it a little

1179
00:50:46,400 --> 00:50:52,520
bit more in the next topic here is that

1180
00:50:49,730 --> 00:50:54,350
because the add and remove update and

1181
00:50:52,520 --> 00:50:55,550
remove aren't don't have any secret

1182
00:50:54,350 --> 00:50:57,980
information they're just talking about

1183
00:50:55,550 --> 00:51:00,320
public keys to put in the tree you know

1184
00:50:57,980 --> 00:51:03,200
an ADD message just says put this public

1185
00:51:00,320 --> 00:51:06,560
key in a leaf node a remove says blank

1186
00:51:03,200 --> 00:51:08,419
out this this path anyone can generate

1187
00:51:06,560 --> 00:51:10,400
them and so we've talked off and on for

1188
00:51:08,420 --> 00:51:13,670
a long time about enabling servers to do

1189
00:51:10,400 --> 00:51:15,080
ads and removes and so reframing add and

1190
00:51:13,670 --> 00:51:17,060
remove in this way could make it easier

1191
00:51:15,080 --> 00:51:20,620
to think about those server initiated

1192
00:51:17,060 --> 00:51:20,620
operations the server initiated remove

1193
00:51:20,830 --> 00:51:25,250
some noise server initiated remove is

1194
00:51:23,930 --> 00:51:27,470
very straightforward in this you you

1195
00:51:25,250 --> 00:51:30,320
mark a server as the server's public

1196
00:51:27,470 --> 00:51:32,540
he's authorized to sign and that that

1197
00:51:30,320 --> 00:51:34,220
server can then send you a remove

1198
00:51:32,540 --> 00:51:35,840
message that says blank out this path

1199
00:51:34,220 --> 00:51:37,819
and it's blanked and it's realized when

1200
00:51:35,840 --> 00:51:40,010
the next member of the group ratchets

1201
00:51:37,820 --> 00:51:41,540
the group forward so it's a much cleaner

1202
00:51:40,010 --> 00:51:43,700
way of thinking about these server

1203
00:51:41,540 --> 00:51:48,800
initiated operations I think the major

1204
00:51:43,700 --> 00:51:51,200
risk here besides that the cost of doing

1205
00:51:48,800 --> 00:51:53,720
the ratchets in if we if we adopt this

1206
00:51:51,200 --> 00:51:56,029
the major risk I think is there is the

1207
00:51:53,720 --> 00:51:59,000
risk of this this timing of the ratchet

1208
00:51:56,030 --> 00:52:01,640
operations that you really need to have

1209
00:51:59,000 --> 00:52:02,990
a ratchet happen ratchet operations sent

1210
00:52:01,640 --> 00:52:04,940
before any messaging is done before

1211
00:52:02,990 --> 00:52:07,060
anyone uses the group secrets to take

1212
00:52:04,940 --> 00:52:11,770
all the changes that have been bunched

1213
00:52:07,060 --> 00:52:13,330
and apply those and and RIA an update

1214
00:52:11,770 --> 00:52:16,120
that the group secrets that they reflect

1215
00:52:13,330 --> 00:52:17,529
the current state of the group so and

1216
00:52:16,120 --> 00:52:18,880
this is kind of the trade off space I

1217
00:52:17,530 --> 00:52:21,010
mean what do people think does it seem

1218
00:52:18,880 --> 00:52:22,840
like useful these seem like worthwhile

1219
00:52:21,010 --> 00:52:24,760
trade-offs seem like we could stay away

1220
00:52:22,840 --> 00:52:26,320
from this I guess I should add to this

1221
00:52:24,760 --> 00:52:27,970
the point echo made about we need to

1222
00:52:26,320 --> 00:52:31,960
figure out how this interacts with

1223
00:52:27,970 --> 00:52:33,779
encrypted handshake messages but my

1224
00:52:31,960 --> 00:52:36,790
general impression this seems worthwhile

1225
00:52:33,780 --> 00:52:42,100
but if people are concerned about some

1226
00:52:36,790 --> 00:52:44,920
of the costs here let me discuss so if

1227
00:52:42,100 --> 00:52:48,549
you have a group that doesn't talk a lot

1228
00:52:44,920 --> 00:52:49,810
say an emergency response team or a dfi

1229
00:52:48,550 --> 00:52:52,510
or you speak a little closer to the mic

1230
00:52:49,810 --> 00:52:56,350
jumps oh hello so if you have a team

1231
00:52:52,510 --> 00:52:58,060
that does not message a lot but needs to

1232
00:52:56,350 --> 00:53:00,100
get up to speak really quick you're

1233
00:52:58,060 --> 00:53:02,020
gonna it's a big team your that first

1234
00:53:00,100 --> 00:53:04,690
message is gonna be sit there staring at

1235
00:53:02,020 --> 00:53:06,460
something for a little bit and so it

1236
00:53:04,690 --> 00:53:08,020
might be either this isn't going to be

1237
00:53:06,460 --> 00:53:11,260
appropriate for those uses or we might

1238
00:53:08,020 --> 00:53:12,520
want those folks to be able to I don't

1239
00:53:11,260 --> 00:53:14,230
to use the word heartbeat but whatever I

1240
00:53:12,520 --> 00:53:16,870
just did you know have something that

1241
00:53:14,230 --> 00:53:18,750
passes a message through this sort of

1242
00:53:16,870 --> 00:53:21,910
pushes that stuff through in a more

1243
00:53:18,750 --> 00:53:23,980
periodic basis or something right yeah

1244
00:53:21,910 --> 00:53:26,589
that's a good point like you I will

1245
00:53:23,980 --> 00:53:29,500
point out that what the the balance here

1246
00:53:26,590 --> 00:53:31,600
is between how often you ratchet and how

1247
00:53:29,500 --> 00:53:35,410
often you update so if you ratchet

1248
00:53:31,600 --> 00:53:37,060
seldom but update a lot then the updates

1249
00:53:35,410 --> 00:53:39,279
will blank out the tree and your

1250
00:53:37,060 --> 00:53:41,860
ratchets will become expensive if you

1251
00:53:39,280 --> 00:53:44,680
ratchet every time you update then you

1252
00:53:41,860 --> 00:53:46,480
don't your tree is not degrading so to

1253
00:53:44,680 --> 00:53:47,919
some degree we're like punting a choice

1254
00:53:46,480 --> 00:53:49,960
to the application there we're offering

1255
00:53:47,920 --> 00:53:51,550
an additional complexity not an

1256
00:53:49,960 --> 00:53:54,010
additional knob to the application there

1257
00:53:51,550 --> 00:53:55,570
to control the state of the tree in your

1258
00:53:54,010 --> 00:53:57,100
kind of first responder case it's an

1259
00:53:55,570 --> 00:53:59,020
interesting one so like if you imagine

1260
00:53:57,100 --> 00:54:00,069
that you know everyone's been quiescent

1261
00:53:59,020 --> 00:54:03,940
for a while but they've been sending

1262
00:54:00,070 --> 00:54:05,560
updates because of for PCs there there

1263
00:54:03,940 --> 00:54:07,300
is kind of a warm-up phase as we have

1264
00:54:05,560 --> 00:54:09,100
with with a new group so you basically

1265
00:54:07,300 --> 00:54:10,990
end up with only leaves populated and

1266
00:54:09,100 --> 00:54:12,490
then when you start talking some will

1267
00:54:10,990 --> 00:54:15,970
send an update that will populate a path

1268
00:54:12,490 --> 00:54:18,729
so that certain things will be log more

1269
00:54:15,970 --> 00:54:20,529
log like and gradually the tree will

1270
00:54:18,730 --> 00:54:22,720
kind of warm up as it gets more pop

1271
00:54:20,530 --> 00:54:25,150
and things will converge from linear to

1272
00:54:22,720 --> 00:54:26,620
log I think a couple of meetings ago

1273
00:54:25,150 --> 00:54:29,830
Rafael and I both did some simulations

1274
00:54:26,620 --> 00:54:31,359
of this under you know certain

1275
00:54:29,830 --> 00:54:33,009
assumptions about how often things

1276
00:54:31,360 --> 00:54:35,260
happen in the group and you can kind of

1277
00:54:33,010 --> 00:54:37,060
see a convergence pattern and it goes up

1278
00:54:35,260 --> 00:54:43,030
and down as things happen in life of it

1279
00:54:37,060 --> 00:54:44,740
of the group I feel yeah I just actually

1280
00:54:43,030 --> 00:54:47,650
wanted to comment on exactly the same

1281
00:54:44,740 --> 00:54:51,520
thing so I think you already said said

1282
00:54:47,650 --> 00:54:54,520
it was important just one more thing for

1283
00:54:51,520 --> 00:54:59,440
context when I first thought about it

1284
00:54:54,520 --> 00:55:03,130
I wanted to defer the hard computational

1285
00:54:59,440 --> 00:55:05,440
work and payload costs from the device

1286
00:55:03,130 --> 00:55:10,180
that is being added to an account or

1287
00:55:05,440 --> 00:55:13,480
group but I mean nothing precludes this

1288
00:55:10,180 --> 00:55:16,540
device from paying the cost later at

1289
00:55:13,480 --> 00:55:20,200
this point or another device from the

1290
00:55:16,540 --> 00:55:23,800
same account for example that would do

1291
00:55:20,200 --> 00:55:26,740
that if there was enough time and if

1292
00:55:23,800 --> 00:55:29,890
it's just in terms of strategy if it's a

1293
00:55:26,740 --> 00:55:31,890
good time to take the decision so this

1294
00:55:29,890 --> 00:55:35,710
concept would essentially bring more

1295
00:55:31,890 --> 00:55:37,720
flexibility but with the right choices

1296
00:55:35,710 --> 00:55:41,160
you could probably avoid the situation

1297
00:55:37,720 --> 00:55:41,160
while you continue to graduate in error

1298
00:55:43,020 --> 00:55:54,880
go ahead you this is Daniel cart Gilmore

1299
00:55:49,510 --> 00:55:57,280
I guess I have two one one concern and

1300
00:55:54,880 --> 00:55:59,670
one question the question is just if you

1301
00:55:57,280 --> 00:56:02,470
could elaborate on the asterisk there

1302
00:55:59,670 --> 00:56:05,590
because I don't if you mentioned that I

1303
00:56:02,470 --> 00:56:07,390
didn't catch it and my concern is that

1304
00:56:05,590 --> 00:56:10,090
it seems like you're saying taking this

1305
00:56:07,390 --> 00:56:12,160
approach or requiring this approach is

1306
00:56:10,090 --> 00:56:14,380
what permits this can be sent by any

1307
00:56:12,160 --> 00:56:17,920
authorized party thing but it permits

1308
00:56:14,380 --> 00:56:19,900
server ad I mean if we don't do this

1309
00:56:17,920 --> 00:56:22,680
there's no way for servers to do dynamic

1310
00:56:19,900 --> 00:56:25,270
like to do server initiated ads or nodes

1311
00:56:22,680 --> 00:56:26,980
so is that what you're saying because

1312
00:56:25,270 --> 00:56:29,310
I'm sorry I'm struggling to follow the

1313
00:56:26,980 --> 00:56:32,690
changes yeah so so did these are

1314
00:56:29,310 --> 00:56:36,160
constrained so the asterisk on the ad

1315
00:56:32,690 --> 00:56:39,740
that's the as a server you know a

1316
00:56:36,160 --> 00:56:41,598
non-member of the group can create an ad

1317
00:56:39,740 --> 00:56:45,500
message and to tell the group to add

1318
00:56:41,599 --> 00:56:47,390
someone to the tree but even with this

1319
00:56:45,500 --> 00:56:49,789
change the server can generate this is

1320
00:56:47,390 --> 00:56:51,618
actually the next topic the server can't

1321
00:56:49,789 --> 00:56:54,020
generate the welcome message that

1322
00:56:51,619 --> 00:56:56,990
provisions the new joiner with the

1323
00:56:54,020 --> 00:56:58,730
secrets for the group because the server

1324
00:56:56,990 --> 00:57:01,009
doesn't have access to the secrets of

1325
00:56:58,730 --> 00:57:03,289
the group so this doesn't solve the the

1326
00:57:01,010 --> 00:57:04,940
server initiated ad case I've got a

1327
00:57:03,289 --> 00:57:07,700
different proposal for how to address

1328
00:57:04,940 --> 00:57:14,319
that which has some different trade-offs

1329
00:57:07,700 --> 00:57:18,828
and may or may not be worth it but the

1330
00:57:14,319 --> 00:57:21,890
right now this needs to be in the group

1331
00:57:18,829 --> 00:57:23,480
I think prevent the need to encrypt

1332
00:57:21,890 --> 00:57:26,569
fresh entropy to the group prevents

1333
00:57:23,480 --> 00:57:30,440
server initiated stuff at the moments so

1334
00:57:26,569 --> 00:57:32,808
you couldn't say have a server have a

1335
00:57:30,440 --> 00:57:35,450
server generate a ratchet message in

1336
00:57:32,809 --> 00:57:37,819
this new framework okay so I should I

1337
00:57:35,450 --> 00:57:40,308
should be clear I'm not convinced that

1338
00:57:37,819 --> 00:57:42,200
the server initiated stuff is a boon to

1339
00:57:40,309 --> 00:57:44,869
the protocol because it smells like

1340
00:57:42,200 --> 00:57:46,939
wiretap capability so if not doing this

1341
00:57:44,869 --> 00:57:48,920
means that we can prevent those server

1342
00:57:46,940 --> 00:58:00,260
initiated stuff I think that might be

1343
00:57:48,920 --> 00:58:02,089
advantageous okay well actually Tiger

1344
00:58:00,260 --> 00:58:06,099
won't one quick response to dkg I think

1345
00:58:02,089 --> 00:58:08,450
just to put some bounds on this I think

1346
00:58:06,099 --> 00:58:10,039
to the degree that server initiated

1347
00:58:08,450 --> 00:58:12,230
stuff is possible here

1348
00:58:10,039 --> 00:58:14,720
I think the there's pretty good

1349
00:58:12,230 --> 00:58:16,789
agreement across the group that it will

1350
00:58:14,720 --> 00:58:19,328
be explicitly authorized you'll have

1351
00:58:16,789 --> 00:58:21,710
clear authorization for whose

1352
00:58:19,329 --> 00:58:24,470
authentication of the sender of these

1353
00:58:21,710 --> 00:58:26,029
the originator of these things and they

1354
00:58:24,470 --> 00:58:29,569
will not they will have the same

1355
00:58:26,029 --> 00:58:32,869
authentication properties as a fork for

1356
00:58:29,569 --> 00:58:35,509
the joint the added user as as if they

1357
00:58:32,869 --> 00:58:37,720
had been added by you know some who's

1358
00:58:35,510 --> 00:58:39,319
already in the group so I agree that

1359
00:58:37,720 --> 00:58:41,480
depending on all sorts of UI

1360
00:58:39,319 --> 00:58:42,710
considerations won't have you like there

1361
00:58:41,480 --> 00:58:44,720
is there's risks of things going

1362
00:58:42,710 --> 00:58:46,450
unnoticed but at least at the

1363
00:58:44,720 --> 00:58:49,509
cryptographic layer there's not a

1364
00:58:46,450 --> 00:58:52,240
between the you the device of the member

1365
00:58:49,510 --> 00:58:54,359
authentication in the server initiated

1366
00:58:52,240 --> 00:58:57,339
case and the the member initiated case

1367
00:58:54,359 --> 00:59:00,130
but happy to discuss this more yaker

1368
00:58:57,339 --> 00:59:02,980
my understanding was that the rationale

1369
00:59:00,130 --> 00:59:05,349
for the server initiated stuff was to

1370
00:59:02,980 --> 00:59:06,970
grace that to allow new devices to be

1371
00:59:05,349 --> 00:59:10,270
added about cooperation all devices

1372
00:59:06,970 --> 00:59:13,060
owned by the same user right can you

1373
00:59:10,270 --> 00:59:15,820
civilians yes - a little closer in line

1374
00:59:13,060 --> 00:59:18,880
with the rationale for having server

1375
00:59:15,820 --> 00:59:21,010
server initiative to add this allow me

1376
00:59:18,880 --> 00:59:23,290
to add a new device to the system

1377
00:59:21,010 --> 00:59:25,560
without having access to an old device

1378
00:59:23,290 --> 00:59:28,630
or some other personal uh begin right

1379
00:59:25,560 --> 00:59:29,920
the yeah that is one of the cases I mean

1380
00:59:28,630 --> 00:59:32,470
let's say there are other cases but my

1381
00:59:29,920 --> 00:59:33,970
understanding was like going back to

1382
00:59:32,470 --> 00:59:38,020
them like there is no requirements here

1383
00:59:33,970 --> 00:59:40,180
were about like as I recall had the

1384
00:59:38,020 --> 00:59:41,920
property that like say my device khalida

1385
00:59:40,180 --> 00:59:45,220
story not want to rejoin what do I do

1386
00:59:41,920 --> 00:59:46,300
right and my understanding was a server

1387
00:59:45,220 --> 00:59:50,770
initiated was the answer to that

1388
00:59:46,300 --> 00:59:52,210
question now Eike absolute arose deg

1389
00:59:50,770 --> 00:59:55,089
points out that like that's like a huge

1390
00:59:52,210 --> 00:59:56,710
technology but like it's important

1391
00:59:55,089 --> 00:59:58,119
understand what right and meet something

1392
00:59:56,710 --> 01:00:02,890
we like said when we say like I don't

1393
00:59:58,119 --> 01:00:04,569
want that functionality right um but I

1394
01:00:02,890 --> 01:00:05,680
think as far as understand that's if you

1395
01:00:04,569 --> 01:00:06,819
don't have to initiate that's we would

1396
01:00:05,680 --> 01:00:08,290
not this basically there's an when I

1397
01:00:06,819 --> 01:00:11,319
want to want when I want to buy lose my

1398
01:00:08,290 --> 01:00:13,390
device which screwed yeah well you're

1399
01:00:11,319 --> 01:00:17,550
you're screwed and someone else in the

1400
01:00:13,390 --> 01:00:20,020
group to add you yeah yeah yeah and then

1401
01:00:17,550 --> 01:00:23,369
persuade them the whole Aikido and

1402
01:00:20,020 --> 01:00:23,369
that's about persuading them that uh

1403
01:00:25,589 --> 01:00:30,549
somehow persuade them that on the same

1404
01:00:27,640 --> 01:00:31,810
person right yeah yeah the other

1405
01:00:30,550 --> 01:00:33,069
implementation paths that have been

1406
01:00:31,810 --> 01:00:35,020
discussed for server initiated

1407
01:00:33,069 --> 01:00:37,300
operations would be to allow the server

1408
01:00:35,020 --> 01:00:39,250
to send a request so the group that a

1409
01:00:37,300 --> 01:00:40,599
certain operation be done I mean so that

1410
01:00:39,250 --> 01:00:42,940
someone in the group could then perform

1411
01:00:40,599 --> 01:00:44,619
the action I think just trying to think

1412
01:00:42,940 --> 01:00:45,910
about there like there's a general

1413
01:00:44,619 --> 01:00:47,800
equilibrium the facts of this my

1414
01:00:45,910 --> 01:00:49,720
suspicion is you know environment that

1415
01:00:47,800 --> 01:00:52,000
does not have sort of initiated add what

1416
01:00:49,720 --> 01:00:53,740
will happen is anybody anybody who

1417
01:00:52,000 --> 01:00:55,930
operates a big service or base that we

1418
01:00:53,740 --> 01:00:58,348
implement server-side key escrow for the

1419
01:00:55,930 --> 01:00:58,348
signing keys

1420
01:00:59,320 --> 01:01:03,340
or will initiate what will basically

1421
01:01:01,180 --> 01:01:06,609
have an API by which the server can

1422
01:01:03,340 --> 01:01:08,230
request that any device that's online do

1423
01:01:06,610 --> 01:01:09,160
the add of donuts behind I don't see how

1424
01:01:08,230 --> 01:01:10,930
that's actually materially different

1425
01:01:09,160 --> 01:01:12,370
from server and show you that don't do

1426
01:01:10,930 --> 01:01:14,669
you know okay

1427
01:01:12,370 --> 01:01:16,540
no it's different in protocol terms yeah

1428
01:01:14,670 --> 01:01:18,040
it's not different in functional terms

1429
01:01:16,540 --> 01:01:19,930
but your point is like you can you can

1430
01:01:18,040 --> 01:01:21,400
do this around the side even if the

1431
01:01:19,930 --> 01:01:22,899
protocol doesn't support it sure I guess

1432
01:01:21,400 --> 01:01:24,880
um

1433
01:01:22,900 --> 01:01:28,720
right I mean that's it that seems like I

1434
01:01:24,880 --> 01:01:31,090
did I mean that's it that design seems

1435
01:01:28,720 --> 01:01:32,709
like the same I guess

1436
01:01:31,090 --> 01:01:34,540
all the designs is very clumsy I think

1437
01:01:32,710 --> 01:01:36,010
of things as an application builder like

1438
01:01:34,540 --> 01:01:43,930
how it says avoiding bullets would be

1439
01:01:36,010 --> 01:01:46,570
and it seems like yeah it seems like

1440
01:01:43,930 --> 01:01:49,029
there's a bunch of like capacity okay I

1441
01:01:46,570 --> 01:01:51,460
guess money in the search I'm making is

1442
01:01:49,030 --> 01:01:53,050
like based on having talked to the

1443
01:01:51,460 --> 01:01:54,790
people who build big scale systems like

1444
01:01:53,050 --> 01:01:56,110
this they all seem to implement some

1445
01:01:54,790 --> 01:01:58,240
kind of recovery mechanism when you like

1446
01:01:56,110 --> 01:02:00,760
your voice blows up so they're gonna do

1447
01:01:58,240 --> 01:02:02,259
it and so the question has to question

1448
01:02:00,760 --> 01:02:05,290
the right question asked is how would we

1449
01:02:02,260 --> 01:02:06,460
perform they do it yeah so you said you

1450
01:02:05,290 --> 01:02:09,160
said something about complexity which

1451
01:02:06,460 --> 01:02:11,470
between the up the like incorporated and

1452
01:02:09,160 --> 01:02:13,870
the protocol option and the build an API

1453
01:02:11,470 --> 01:02:15,549
that orchestrates the protocol option

1454
01:02:13,870 --> 01:02:19,150
which of those is that seems worse to

1455
01:02:15,550 --> 01:02:21,070
you from a complexity point of view I

1456
01:02:19,150 --> 01:02:27,700
mean I think or is it the protocol I

1457
01:02:21,070 --> 01:02:31,180
mean like for if we put aside if we put

1458
01:02:27,700 --> 01:02:32,529
aside the concern about unauthorized or

1459
01:02:31,180 --> 01:02:34,000
initiated add which I get you can't put

1460
01:02:32,530 --> 01:02:37,210
aside but my watch was high for the

1461
01:02:34,000 --> 01:02:39,700
flight for like 10 seconds then and then

1462
01:02:37,210 --> 01:02:41,320
that ask somebody to do do it seems like

1463
01:02:39,700 --> 01:02:43,960
obviously materially worse I think the

1464
01:02:41,320 --> 01:02:45,730
question I'm interested in is is there

1465
01:02:43,960 --> 01:02:48,520
any material security difference between

1466
01:02:45,730 --> 01:02:49,720
soar initiative add and server like

1467
01:02:48,520 --> 01:02:52,240
solicited add or whatever you want to

1468
01:02:49,720 --> 01:02:53,410
call it right and I don't know I haven't

1469
01:02:52,240 --> 01:02:56,649
had time to reason about it so I can't

1470
01:02:53,410 --> 01:02:58,480
answer that question I think I think

1471
01:02:56,650 --> 01:02:59,980
there are noticeable difference I don't

1472
01:02:58,480 --> 01:03:02,080
know if their material material

1473
01:02:59,980 --> 01:03:03,550
differences but for instance in the in

1474
01:03:02,080 --> 01:03:06,549
the case where it's in the protocol it

1475
01:03:03,550 --> 01:03:08,740
you have the the signatures by the third

1476
01:03:06,550 --> 01:03:10,840
by that the server in the transcripts

1477
01:03:08,740 --> 01:03:12,520
and and you know clearly and agreed on

1478
01:03:10,840 --> 01:03:13,300
by the group and so there's seems like

1479
01:03:12,520 --> 01:03:15,880
there's there is

1480
01:03:13,300 --> 01:03:17,620
extra accountability in that approach

1481
01:03:15,880 --> 01:03:22,870
that you don't get in the orchestration

1482
01:03:17,620 --> 01:03:27,430
approach so it says just just keeping

1483
01:03:22,870 --> 01:03:30,220
track of yeah the agenda here I this is

1484
01:03:27,430 --> 01:03:31,720
a bit far afield of this topic but the

1485
01:03:30,220 --> 01:03:33,790
next topic is how you do server

1486
01:03:31,720 --> 01:03:34,870
initiated ads so this is great to have

1487
01:03:33,790 --> 01:03:40,960
this it's fine to have this conversation

1488
01:03:34,870 --> 01:03:42,640
out so well I well actually yeah well

1489
01:03:40,960 --> 01:03:44,560
let's do that let me make the proposal

1490
01:03:42,640 --> 01:03:46,690
like make the proposal FRA how I think

1491
01:03:44,560 --> 01:03:50,950
we can do it and then we can discuss

1492
01:03:46,690 --> 01:03:53,260
whether we want to alright so not

1493
01:03:50,950 --> 01:03:55,930
hearing huge concerns about that about

1494
01:03:53,260 --> 01:03:59,580
this except for the server initiated

1495
01:03:55,930 --> 01:04:01,720
part it sounds like you know we are

1496
01:03:59,580 --> 01:04:03,880
Mille Joe your observation that we are

1497
01:04:01,720 --> 01:04:05,290
kind of opening up more a little bit

1498
01:04:03,880 --> 01:04:09,280
more complexity for apps to have to

1499
01:04:05,290 --> 01:04:10,779
manage as we write PRS here we'll have

1500
01:04:09,280 --> 01:04:13,960
to think about how to talk about that

1501
01:04:10,780 --> 01:04:15,820
yeah yeah Rhian Wahby quick question do

1502
01:04:13,960 --> 01:04:18,190
you have a sense for what the range so

1503
01:04:15,820 --> 01:04:19,660
it seems like the point here is

1504
01:04:18,190 --> 01:04:21,310
different groups with different use

1505
01:04:19,660 --> 01:04:23,620
cases will have sort of a different

1506
01:04:21,310 --> 01:04:25,299
optimality point you give a sense for

1507
01:04:23,620 --> 01:04:27,670
what the range of those optimality

1508
01:04:25,300 --> 01:04:32,290
points is is it sort of gigantic or is

1509
01:04:27,670 --> 01:04:34,630
it rather narrow I don't know that's a

1510
01:04:32,290 --> 01:04:38,350
very that's a very open-ended question

1511
01:04:34,630 --> 01:04:39,310
but the point is like if you could

1512
01:04:38,350 --> 01:04:41,440
imagine that like if two different

1513
01:04:39,310 --> 01:04:44,350
groups have some setting that's off by

1514
01:04:41,440 --> 01:04:46,870
orders of magnitude then intuitively it

1515
01:04:44,350 --> 01:04:48,160
feels like having this this tweak must

1516
01:04:46,870 --> 01:04:51,009
have been important why else would be

1517
01:04:48,160 --> 01:04:53,440
this setting be off by orders of

1518
01:04:51,010 --> 01:04:55,450
magnitude but if the optimality point is

1519
01:04:53,440 --> 01:04:56,980
relatively flat then maybe it's okay to

1520
01:04:55,450 --> 01:04:58,899
pick one number and say yeah it's not

1521
01:04:56,980 --> 01:05:00,850
perfect for everyone but good enough and

1522
01:04:58,900 --> 01:05:03,040
then at least you get rid of the

1523
01:05:00,850 --> 01:05:04,450
possibility of miss configuring it so it

1524
01:05:03,040 --> 01:05:06,850
might be useful in terms of making a

1525
01:05:04,450 --> 01:05:09,580
decision just to understand how big that

1526
01:05:06,850 --> 01:05:13,540
ranges and how steep the trade-off

1527
01:05:09,580 --> 01:05:14,950
Curtis yeah yeah I think there's enough

1528
01:05:13,540 --> 01:05:16,150
variability in the considerations here

1529
01:05:14,950 --> 01:05:17,859
as you heard there's a couple of

1530
01:05:16,150 --> 01:05:20,050
different motivations for for how you

1531
01:05:17,860 --> 01:05:22,810
arrange this it might not be quite a

1532
01:05:20,050 --> 01:05:25,720
linear scale but yeah they're happy to

1533
01:05:22,810 --> 01:05:27,099
have some considerations around I think

1534
01:05:25,720 --> 01:05:29,200
yeah inevitably will have

1535
01:05:27,099 --> 01:05:30,940
some guidance text around yeah well

1536
01:05:29,200 --> 01:05:32,799
we'll have a hard boundary and say you

1537
01:05:30,940 --> 01:05:34,450
you must send this ratchet message

1538
01:05:32,799 --> 01:05:37,839
before you before you message there's

1539
01:05:34,450 --> 01:05:39,819
any changes but you you can send it at

1540
01:05:37,839 --> 01:05:42,369
other times as well and we can phrase

1541
01:05:39,819 --> 01:05:45,160
some some explanatory text or guidance

1542
01:05:42,369 --> 01:05:46,660
texture on that sure okay so I think I'm

1543
01:05:45,160 --> 01:05:48,489
getting the feeling here that this is

1544
01:05:46,660 --> 01:05:50,170
this is okay with folks I think I'm

1545
01:05:48,489 --> 01:05:51,339
interested in this Raphael is as well so

1546
01:05:50,170 --> 01:05:54,190
I think well we'll go ahead and start

1547
01:05:51,339 --> 01:05:56,828
working up some some PRS now server

1548
01:05:54,190 --> 01:05:58,150
initiated ad since this is you know

1549
01:05:56,829 --> 01:06:02,680
clearly an important thing that people

1550
01:05:58,150 --> 01:06:04,569
everybody wants so if we were going to

1551
01:06:02,680 --> 01:06:07,989
go toward this lazy framing where we

1552
01:06:04,569 --> 01:06:09,579
have the ad just in placing a key and in

1553
01:06:07,989 --> 01:06:12,299
blanking its path and someone else's

1554
01:06:09,579 --> 01:06:14,680
ratchet will merge it into the group

1555
01:06:12,299 --> 01:06:16,599
server can synthesize an ad like I said

1556
01:06:14,680 --> 01:06:17,950
but not the welcome welcome contains the

1557
01:06:16,599 --> 01:06:19,930
in its secret for the group that

1558
01:06:17,950 --> 01:06:21,970
initiates the the new user into the

1559
01:06:19,930 --> 01:06:25,210
group's secrets and server doesn't have

1560
01:06:21,970 --> 01:06:27,069
that secret so earlier in the very very

1561
01:06:25,210 --> 01:06:28,329
early dress I think maybe not even

1562
01:06:27,069 --> 01:06:30,369
working group dress there's the

1563
01:06:28,329 --> 01:06:34,180
individual dress we had this idea of a

1564
01:06:30,369 --> 01:06:36,190
group ad where actually its user ad I've

1565
01:06:34,180 --> 01:06:37,808
gotten has gotten this backward so in

1566
01:06:36,190 --> 01:06:40,150
the initial version we had user

1567
01:06:37,809 --> 01:06:42,069
initiated ad and group initiated ads

1568
01:06:40,150 --> 01:06:44,200
they you do a group initiated ad when

1569
01:06:42,069 --> 01:06:46,029
someone added you to the group user

1570
01:06:44,200 --> 01:06:49,538
initiated ad when you wanted to join the

1571
01:06:46,029 --> 01:06:51,749
group proactively and that basic

1572
01:06:49,539 --> 01:06:54,880
difference between these is that in the

1573
01:06:51,749 --> 01:06:58,029
group initiated case you would use a KDF

1574
01:06:54,880 --> 01:07:00,940
as we do in the current document to go

1575
01:06:58,029 --> 01:07:03,609
from the init secret to the next epic

1576
01:07:00,940 --> 01:07:05,229
secret and in the user initiated ad case

1577
01:07:03,609 --> 01:07:07,630
you do asymmetric cryptography so you

1578
01:07:05,229 --> 01:07:10,058
publish a public key whose private key

1579
01:07:07,630 --> 01:07:11,969
is known to the group and you take that

1580
01:07:10,059 --> 01:07:15,729
and you combine it with the new joiners

1581
01:07:11,969 --> 01:07:19,390
in an init key and the output of that

1582
01:07:15,729 --> 01:07:23,649
d-h operation is the new epic secret in

1583
01:07:19,390 --> 01:07:25,089
pictorial form right the right now we

1584
01:07:23,650 --> 01:07:26,979
hit we're doing the left-hand side of

1585
01:07:25,089 --> 01:07:28,960
this so you take the in it secret

1586
01:07:26,979 --> 01:07:32,169
possibly with some update secret and you

1587
01:07:28,960 --> 01:07:34,900
h KDF to get the new epic secret which

1588
01:07:32,170 --> 01:07:37,420
is the the starting point for the for

1589
01:07:34,900 --> 01:07:40,360
the key schedule for that epoch as

1590
01:07:37,420 --> 01:07:43,540
british slide showed

1591
01:07:40,360 --> 01:07:46,030
the change here would be to do this this

1592
01:07:43,540 --> 01:07:48,220
right hand side so in addition to

1593
01:07:46,030 --> 01:07:49,960
maintaining this in its secret which is

1594
01:07:48,220 --> 01:07:52,720
a symmetric secret you could generate

1595
01:07:49,960 --> 01:07:57,220
off of that a key pair and publish this

1596
01:07:52,720 --> 01:07:59,020
group in it key which would be a public

1597
01:07:57,220 --> 01:08:01,359
key again whose private key is known to

1598
01:07:59,020 --> 01:08:03,820
the members of the group so that if you

1599
01:08:01,360 --> 01:08:07,000
wanted to have a user add you could take

1600
01:08:03,820 --> 01:08:08,500
an init key again an asymmetric key pair

1601
01:08:07,000 --> 01:08:10,390
and doing D H operation between those

1602
01:08:08,500 --> 01:08:12,160
two key pairs and use the output of that

1603
01:08:10,390 --> 01:08:13,930
as the new epic secret so now you would

1604
01:08:12,160 --> 01:08:17,979
have a user initiated into the group

1605
01:08:13,930 --> 01:08:19,839
secrets without having to explicitly you

1606
01:08:17,979 --> 01:08:22,269
know hand the secret to them in a

1607
01:08:19,839 --> 01:08:23,710
welcome message and so that you open up

1608
01:08:22,270 --> 01:08:25,770
the set of people who can generate that

1609
01:08:23,710 --> 01:08:28,689
welcome message because you're only

1610
01:08:25,770 --> 01:08:30,609
distributing public information or non

1611
01:08:28,689 --> 01:08:34,120
secret information at least in that

1612
01:08:30,609 --> 01:08:37,780
welcome message syntactically you that

1613
01:08:34,120 --> 01:08:39,608
this slot used to be the init secret you

1614
01:08:37,779 --> 01:08:41,910
just replace it with the public key that

1615
01:08:39,609 --> 01:08:46,600
was mentioned in the previous slide

1616
01:08:41,910 --> 01:08:48,460
other than that the this this would

1617
01:08:46,600 --> 01:08:50,109
merit some thought again attackers

1618
01:08:48,460 --> 01:08:51,790
earlier point when you're doing this all

1619
01:08:50,109 --> 01:08:53,440
of this in the in the case where you're

1620
01:08:51,790 --> 01:08:55,359
encrypting handshake messages is a

1621
01:08:53,439 --> 01:08:58,540
little squirrely this this would

1622
01:08:55,359 --> 01:08:59,410
probably have to be yeah but we have to

1623
01:08:58,540 --> 01:09:00,580
we'd have to figure out how this

1624
01:08:59,410 --> 01:09:03,099
interacts with handshake message

1625
01:09:00,580 --> 01:09:04,568
encryption but at least in terms of

1626
01:09:03,100 --> 01:09:07,330
managing the key scheduler managing the

1627
01:09:04,569 --> 01:09:09,940
group secrets you no longer have the

1628
01:09:07,330 --> 01:09:11,529
init secret here um we could probably

1629
01:09:09,939 --> 01:09:13,599
also have some discussion about whether

1630
01:09:11,529 --> 01:09:16,500
we regard this the constants of the tree

1631
01:09:13,600 --> 01:09:18,630
and the transcript hash as a sensitive

1632
01:09:16,500 --> 01:09:23,850
[Music]

1633
01:09:18,630 --> 01:09:25,720
open debate on that so on the one hand

1634
01:09:23,850 --> 01:09:27,640
one of the things that was unpleasant

1635
01:09:25,720 --> 01:09:31,120
about the the earlier versions of this

1636
01:09:27,640 --> 01:09:32,890
is that we had two flavors of add we had

1637
01:09:31,120 --> 01:09:34,630
a user initiated and a group initiated

1638
01:09:32,890 --> 01:09:36,670
and I think if we were gonna do this we

1639
01:09:34,630 --> 01:09:38,620
would just move all add operations over

1640
01:09:36,670 --> 01:09:41,080
this asymmetric framing so we'd have one

1641
01:09:38,620 --> 01:09:45,130
add path that was accessed that was used

1642
01:09:41,080 --> 01:09:47,410
for both both of those cases you know it

1643
01:09:45,130 --> 01:09:49,120
it is useful in that it realizes the

1644
01:09:47,410 --> 01:09:50,830
server initiated add feature if we want

1645
01:09:49,120 --> 01:09:52,390
to have that feature I mean I think it's

1646
01:09:50,830 --> 01:09:53,680
it's there there's kind of some

1647
01:09:52,390 --> 01:09:54,029
intuitive appeal and that you're know

1648
01:09:53,680 --> 01:09:56,760
long

1649
01:09:54,029 --> 01:09:59,400
directly handing out secrets you're

1650
01:09:56,760 --> 01:10:01,500
doing it feels uncomfortable to kind of

1651
01:09:59,400 --> 01:10:02,940
extract that in its secret from where

1652
01:10:01,500 --> 01:10:04,800
whatever container you had it in and

1653
01:10:02,940 --> 01:10:06,750
send it out over the wire and so here

1654
01:10:04,800 --> 01:10:08,700
you avoid doing that and you still end

1655
01:10:06,750 --> 01:10:09,120
up unable to initiate someone into the

1656
01:10:08,700 --> 01:10:12,150
group

1657
01:10:09,120 --> 01:10:14,250
I seem to that makes me feel better

1658
01:10:12,150 --> 01:10:15,960
about you know the ability to say do

1659
01:10:14,250 --> 01:10:17,220
this in a fifth validated context where

1660
01:10:15,960 --> 01:10:19,770
you might have requirements around the

1661
01:10:17,220 --> 01:10:21,030
storage of the secrets required the

1662
01:10:19,770 --> 01:10:22,980
store they've been non recoverable

1663
01:10:21,030 --> 01:10:25,099
storage all right so you say you could

1664
01:10:22,980 --> 01:10:27,450
this might open up some additional

1665
01:10:25,100 --> 01:10:30,870
deployability of this protocol by not

1666
01:10:27,450 --> 01:10:33,840
having a passed around secrets on the

1667
01:10:30,870 --> 01:10:35,580
other hand there's there's more

1668
01:10:33,840 --> 01:10:37,320
complication to the authorization story

1669
01:10:35,580 --> 01:10:40,170
if you're going to allow the server to

1670
01:10:37,320 --> 01:10:42,389
initiate things so right now the signing

1671
01:10:40,170 --> 01:10:44,070
the signing structure we have is it just

1672
01:10:42,390 --> 01:10:45,300
as a pointer to a leaf in the group and

1673
01:10:44,070 --> 01:10:48,750
you just have to look up the leaf there

1674
01:10:45,300 --> 01:10:52,200
this would presume some additional you

1675
01:10:48,750 --> 01:10:54,300
know externally imposed externally

1676
01:10:52,200 --> 01:10:56,190
authorized keys that could generate

1677
01:10:54,300 --> 01:10:57,840
these messages into the group and you

1678
01:10:56,190 --> 01:10:59,160
have to posit something about how do you

1679
01:10:57,840 --> 01:11:00,750
how you manage those how you refer to

1680
01:10:59,160 --> 01:11:02,790
them when you're generating messages I

1681
01:11:00,750 --> 01:11:05,490
think it's a solvable problem but it is

1682
01:11:02,790 --> 01:11:06,960
more complexity that possibly

1683
01:11:05,490 --> 01:11:10,139
cryptographically interesting bit of

1684
01:11:06,960 --> 01:11:13,500
this is right now are all of our

1685
01:11:10,140 --> 01:11:16,950
asymmetric cryptography is hpk it's it's

1686
01:11:13,500 --> 01:11:20,520
encrypting to a public key and that

1687
01:11:16,950 --> 01:11:23,340
allows us to use chem constructions at

1688
01:11:20,520 --> 01:11:25,920
that level of generalities so that's

1689
01:11:23,340 --> 01:11:28,350
nice because you can realize a CEM with

1690
01:11:25,920 --> 01:11:30,390
D H but you can also realize it with

1691
01:11:28,350 --> 01:11:32,940
with pure Kem's that and there's a lot

1692
01:11:30,390 --> 01:11:35,010
of post quantum one more post quantum

1693
01:11:32,940 --> 01:11:38,129
work on chem like things than on D H

1694
01:11:35,010 --> 01:11:39,900
like things so there's some kind of post

1695
01:11:38,130 --> 01:11:42,210
quantum niceness to operating this kin

1696
01:11:39,900 --> 01:11:43,620
framework and not depending on D H if we

1697
01:11:42,210 --> 01:11:45,720
were going to go down this path it would

1698
01:11:43,620 --> 01:11:48,150
lock us into having a D H like primitive

1699
01:11:45,720 --> 01:11:50,280
now there are post quantum options there

1700
01:11:48,150 --> 01:11:51,480
but my impression is that you know the

1701
01:11:50,280 --> 01:11:52,679
other key folks are more familiar with

1702
01:11:51,480 --> 01:11:55,200
literature as my impression is that

1703
01:11:52,680 --> 01:11:57,240
there are fewer choices there and at

1704
01:11:55,200 --> 01:11:59,940
this stage at least less validated than

1705
01:11:57,240 --> 01:12:01,920
the chem options so if we were going to

1706
01:11:59,940 --> 01:12:05,910
go this path we would be kind of locking

1707
01:12:01,920 --> 01:12:07,230
into a D H dependency which you know

1708
01:12:05,910 --> 01:12:07,960
might limit our post quantum options

1709
01:12:07,230 --> 01:12:10,299
down the road

1710
01:12:07,960 --> 01:12:11,790
so that's I think the last slide on this

1711
01:12:10,300 --> 01:12:17,380
topic

1712
01:12:11,790 --> 01:12:19,570
discussion ecker left I don't know D ktg

1713
01:12:17,380 --> 01:12:28,750
do you have more thoughts on server

1714
01:12:19,570 --> 01:12:34,179
initiated stuff this is Daniel con

1715
01:12:28,750 --> 01:12:38,440
Gilmore so this hasn't this discussion

1716
01:12:34,180 --> 01:12:43,690
here hasn't changed my perspective on

1717
01:12:38,440 --> 01:12:45,040
the server initiated concerns and just

1718
01:12:43,690 --> 01:12:53,290
to rewind to what you're saying about

1719
01:12:45,040 --> 01:12:54,580
the different constructions you would

1720
01:12:53,290 --> 01:13:00,040
recommend you had said that you thought

1721
01:12:54,580 --> 01:13:01,750
that the server ad which was part of the

1722
01:13:00,040 --> 01:13:04,269
official transcript provides more

1723
01:13:01,750 --> 01:13:05,940
accountability I don't think it provides

1724
01:13:04,270 --> 01:13:08,410
more accountability than a server invite

1725
01:13:05,940 --> 01:13:10,509
if we formalize a way for a server to do

1726
01:13:08,410 --> 01:13:13,210
an invite and then expect someone from

1727
01:13:10,510 --> 01:13:14,410
the group to do an authorization or

1728
01:13:13,210 --> 01:13:16,150
something I think the same level of

1729
01:13:14,410 --> 01:13:19,750
accountability is present in that case

1730
01:13:16,150 --> 01:13:22,360
too of course if there's an out-of-band

1731
01:13:19,750 --> 01:13:24,280
server invite there's nothing we can do

1732
01:13:22,360 --> 01:13:30,730
in this protocol to prevent such a thing

1733
01:13:24,280 --> 01:13:32,559
from happening anyway so yeah I'm still

1734
01:13:30,730 --> 01:13:33,549
uncomfortable about the whole the whole

1735
01:13:32,560 --> 01:13:34,960
arrangement because that I mean

1736
01:13:33,550 --> 01:13:36,730
particularly if we're talking about the

1737
01:13:34,960 --> 01:13:39,210
use case that Eric was describing which

1738
01:13:36,730 --> 01:13:44,379
is I lost my device had like a new one

1739
01:13:39,210 --> 01:13:47,530
it's very hard to see what recourse

1740
01:13:44,380 --> 01:13:49,510
other users have other than a regular

1741
01:13:47,530 --> 01:13:52,809
message that says hey Richard Barnes got

1742
01:13:49,510 --> 01:13:55,870
a nuke got a new device which doesn't

1743
01:13:52,810 --> 01:13:58,510
mean there's a new listener involved on

1744
01:13:55,870 --> 01:13:59,980
this channel yeah and it's very

1745
01:13:58,510 --> 01:14:02,710
difficult to sell how you would explain

1746
01:13:59,980 --> 01:14:05,200
that to the user that that an otherwise

1747
01:14:02,710 --> 01:14:07,330
unauthorized listener has been added so

1748
01:14:05,200 --> 01:14:11,160
I'm very wary of us building mechanism

1749
01:14:07,330 --> 01:14:11,160
that supports that kind of wiretap yeah

1750
01:14:14,340 --> 01:14:18,050
yeah Matt's could be a sigh I'm not

1751
01:14:17,500 --> 01:14:20,510
saying that

1752
01:14:18,050 --> 01:14:22,250
this is the one only true divinely

1753
01:14:20,510 --> 01:14:24,800
inspired way of doing and server

1754
01:14:22,250 --> 01:14:27,500
initiated that but I see a real use case

1755
01:14:24,800 --> 01:14:29,900
for having some initiative

1756
01:14:27,500 --> 01:14:33,350
initiated at capability inside the

1757
01:14:29,900 --> 01:14:37,299
protocol because we have many use cases

1758
01:14:33,350 --> 01:14:40,670
where a crib wouldn't probably be

1759
01:14:37,300 --> 01:14:44,870
entirely regularly used and self

1760
01:14:40,670 --> 01:14:48,710
governed and so on and so if I can use

1761
01:14:44,870 --> 01:14:51,490
the server to Gavin basically use inside

1762
01:14:48,710 --> 01:14:54,380
the creepers outside group and so on

1763
01:14:51,490 --> 01:14:57,469
then people will use it and because

1764
01:14:54,380 --> 01:15:00,830
there is a use case I believe when dos

1765
01:14:57,470 --> 01:15:03,560
will find a way to misuse the protocol

1766
01:15:00,830 --> 01:15:05,390
or to sacramental protocol in order to

1767
01:15:03,560 --> 01:15:09,260
give me this capability I mean I can

1768
01:15:05,390 --> 01:15:15,260
always add the server as a member of the

1769
01:15:09,260 --> 01:15:19,520
group and basically just use my amount

1770
01:15:15,260 --> 01:15:21,860
as clients I construct my MLS clients as

1771
01:15:19,520 --> 01:15:24,200
when I'm a when they're in a way not

1772
01:15:21,860 --> 01:15:27,259
simply not to display the server and

1773
01:15:24,200 --> 01:15:29,780
then I'm in the use case that's pretty

1774
01:15:27,260 --> 01:15:33,370
terrible because now I'm misusing the

1775
01:15:29,780 --> 01:15:37,370
protocol in order to get this use case I

1776
01:15:33,370 --> 01:15:41,360
really want so I'd much rather have a

1777
01:15:37,370 --> 01:15:45,820
nice protocol integrated accepted by all

1778
01:15:41,360 --> 01:15:51,019
kind of fashion to DVDs pretty basic

1779
01:15:45,820 --> 01:15:54,500
creep interactions then basically have a

1780
01:15:51,020 --> 01:15:56,780
use case open and are inviting vendors

1781
01:15:54,500 --> 01:16:01,580
to do whatever they want instead of a

1782
01:15:56,780 --> 01:16:03,889
nice protocol way so yeah let me just

1783
01:16:01,580 --> 01:16:08,000
note a kind of tedious point earlier

1784
01:16:03,890 --> 01:16:11,270
about the the invite the server what was

1785
01:16:08,000 --> 01:16:14,300
a phrase you used server sir solicited

1786
01:16:11,270 --> 01:16:16,310
this I think there the server

1787
01:16:14,300 --> 01:16:18,320
solicitation if you include the

1788
01:16:16,310 --> 01:16:20,630
solicitation in the transcript and it's

1789
01:16:18,320 --> 01:16:22,280
clear it's bound into the session I

1790
01:16:20,630 --> 01:16:23,480
think there's similar properties in

1791
01:16:22,280 --> 01:16:24,889
terms of I agree there's similar

1792
01:16:23,480 --> 01:16:26,599
properties in terms of accountability to

1793
01:16:24,890 --> 01:16:30,290
having it having server actually

1794
01:16:26,600 --> 01:16:32,620
generate the add it seemed like the main

1795
01:16:30,290 --> 01:16:34,519
difference between those two approach

1796
01:16:32,620 --> 01:16:35,750
totally open having discussion about

1797
01:16:34,520 --> 01:16:36,920
whether which of those two approaches

1798
01:16:35,750 --> 01:16:38,180
makes sense here I think we probably

1799
01:16:36,920 --> 01:16:40,580
want to do one of them for the reasons

1800
01:16:38,180 --> 01:16:44,030
John mentioned it seems like one thing

1801
01:16:40,580 --> 01:16:46,610
that the server solicited ad doesn't it

1802
01:16:44,030 --> 01:16:47,990
has doesn't address is a case where you

1803
01:16:46,610 --> 01:16:50,059
have a group where the existing members

1804
01:16:47,990 --> 01:16:52,700
are all offline and you want to enable

1805
01:16:50,060 --> 01:16:55,070
someone to join and immediately

1806
01:16:52,700 --> 01:16:56,720
transmitted into the group right so if

1807
01:16:55,070 --> 01:16:58,070
you're reliant on someone else

1808
01:16:56,720 --> 01:17:00,770
you know an existing member of the group

1809
01:16:58,070 --> 01:17:02,480
doing the ad then one of them has to be

1810
01:17:00,770 --> 01:17:05,900
online before the new member can

1811
01:17:02,480 --> 01:17:09,830
participate in the group okay so that's

1812
01:17:05,900 --> 01:17:12,080
just observation okay just for the

1813
01:17:09,830 --> 01:17:17,450
record that was dkg saying that that

1814
01:17:12,080 --> 01:17:20,030
property is a feature I really see the

1815
01:17:17,450 --> 01:17:23,660
use case here of having server initiated

1816
01:17:20,030 --> 01:17:25,790
but I will say that the omitting post

1817
01:17:23,660 --> 01:17:28,280
quantum or limiting it down to a few

1818
01:17:25,790 --> 01:17:30,519
selections just a few or even a subset

1819
01:17:28,280 --> 01:17:33,769
of so available

1820
01:17:30,520 --> 01:17:36,500
protocols out there is this rather

1821
01:17:33,770 --> 01:17:39,560
serious and I would very much like that

1822
01:17:36,500 --> 01:17:43,580
didn't happen I think if we want to have

1823
01:17:39,560 --> 01:17:45,020
a server initiated then there could

1824
01:17:43,580 --> 01:17:46,880
actually be a middle ground here that

1825
01:17:45,020 --> 01:17:48,530
isn't being considered or it doesn't

1826
01:17:46,880 --> 01:17:50,870
lock us into th where you actually might

1827
01:17:48,530 --> 01:17:53,000
say okay we'll have a server initiate

1828
01:17:50,870 --> 01:17:54,710
under-served eh and look at it we'll

1829
01:17:53,000 --> 01:17:56,780
probably add some sort of complication

1830
01:17:54,710 --> 01:18:00,290
to the construction and more overhead

1831
01:17:56,780 --> 01:18:03,410
but to find a way where the main group

1832
01:18:00,290 --> 01:18:06,860
is still working with Kem's and the

1833
01:18:03,410 --> 01:18:08,420
initiation isn't there could be

1834
01:18:06,860 --> 01:18:14,990
something there but it will mean a lot

1835
01:18:08,420 --> 01:18:17,240
more overhead okay yeah I mean sue

1836
01:18:14,990 --> 01:18:19,670
there's some variant to this where the

1837
01:18:17,240 --> 01:18:22,450
as each epoch produces effectively a

1838
01:18:19,670 --> 01:18:26,600
public key that you can say for - and

1839
01:18:22,450 --> 01:18:27,920
then you can as then yeah you split the

1840
01:18:26,600 --> 01:18:30,050
difference in send and receive where you

1841
01:18:27,920 --> 01:18:32,000
can send but without anybody being

1842
01:18:30,050 --> 01:18:33,680
aligned but you can only receive when

1843
01:18:32,000 --> 01:18:36,380
somebody is online right that's possible

1844
01:18:33,680 --> 01:18:38,210
oh that's a possible way to the back get

1845
01:18:36,380 --> 01:18:40,880
you out of this th it's this this DHT

1846
01:18:38,210 --> 01:18:42,820
kind of structure um but I think I went

1847
01:18:40,880 --> 01:18:44,219
back to first principles which is like

1848
01:18:42,820 --> 01:18:45,780
when we've

1849
01:18:44,219 --> 01:18:47,249
to the people who've built numbery

1850
01:18:45,780 --> 01:18:49,259
systems it's clear they're gonna build

1851
01:18:47,249 --> 01:18:50,460
some kind of something that looks like

1852
01:18:49,260 --> 01:18:52,979
super initiative added at the

1853
01:18:50,460 --> 01:18:54,570
application level and the question and

1854
01:18:52,979 --> 01:18:59,760
so I think we have you know we have a

1855
01:18:54,570 --> 01:19:03,329
hint of Li three options one is build no

1856
01:18:59,760 --> 01:19:08,030
constructs whatsoever that per minute

1857
01:19:03,329 --> 01:19:13,049
the second is build constructs which um

1858
01:19:08,030 --> 01:19:14,249
you know from which sir tacitly permit

1859
01:19:13,050 --> 01:19:15,539
it but don't like really support it

1860
01:19:14,249 --> 01:19:17,429
which i think is what you probably call

1861
01:19:15,539 --> 01:19:18,478
service listen to dad um you know I mean

1862
01:19:17,429 --> 01:19:20,280
they're like basically what's the

1863
01:19:18,479 --> 01:19:21,690
supporting material I think you know

1864
01:19:20,280 --> 01:19:23,639
there are two versions there's one of

1865
01:19:21,690 --> 01:19:24,539
this one of which is like the ad we just

1866
01:19:23,639 --> 01:19:26,190
like add like an additional

1867
01:19:24,539 --> 01:19:27,719
authenticated need a block to like every

1868
01:19:26,190 --> 01:19:28,919
every ad invite and then they could just

1869
01:19:27,719 --> 01:19:30,780
like shove it in there if you wanted to

1870
01:19:28,920 --> 01:19:32,159
for logging purposes and there's some

1871
01:19:30,780 --> 01:19:35,009
other version where you're actually

1872
01:19:32,159 --> 01:19:37,978
expecting the we're actually expecting

1873
01:19:35,010 --> 01:19:40,380
the consumer of the ad to go and verify

1874
01:19:37,979 --> 01:19:41,519
that the solicitation is valid right so

1875
01:19:40,380 --> 01:19:43,079
I mean like there's one version works

1876
01:19:41,519 --> 01:19:45,030
archival another version where actually

1877
01:19:43,079 --> 01:19:48,780
we supposed to do is a receiver receiver

1878
01:19:45,030 --> 01:19:51,030
of the ad is say okay dkg add an echo

1879
01:19:48,780 --> 01:19:52,949
new device on the basis and server asked

1880
01:19:51,030 --> 01:19:55,710
him to and now I go and I verify both

1881
01:19:52,949 --> 01:19:56,999
that dkg to the addition and that the

1882
01:19:55,710 --> 01:19:59,070
server actually asked him to as opposed

1883
01:19:56,999 --> 01:20:01,769
to it just being as opposed just being

1884
01:19:59,070 --> 01:20:03,030
sitting there for posterity right for

1885
01:20:01,769 --> 01:20:06,059
example it's the solicitation were

1886
01:20:03,030 --> 01:20:07,590
signed similar thing right but I mean

1887
01:20:06,059 --> 01:20:09,179
you can imagine not felt not verifying

1888
01:20:07,590 --> 01:20:10,769
that imagine of saying like well he just

1889
01:20:09,179 --> 01:20:12,119
says this true and then you know later

1890
01:20:10,769 --> 01:20:13,320
it turns out like two or two years later

1891
01:20:12,119 --> 01:20:14,670
who knows you're just lying but like

1892
01:20:13,320 --> 01:20:16,829
nobody checks at the time right and be

1893
01:20:14,670 --> 01:20:19,710
unfortunate um and then the third option

1894
01:20:16,829 --> 01:20:20,909
is to actually build a capability and I

1895
01:20:19,710 --> 01:20:21,869
don't like it's hard from you know where

1896
01:20:20,909 --> 01:20:23,098
the best one of these things is is

1897
01:20:21,869 --> 01:20:24,389
obsolete but that is the idea that light

1898
01:20:23,099 --> 01:20:27,690
feels bad to like be designing a system

1899
01:20:24,389 --> 01:20:32,400
you know like we're we it's like it has

1900
01:20:27,690 --> 01:20:33,570
like a misuse vector um but I think you

1901
01:20:32,400 --> 01:20:36,199
know it's not for ourselves that the

1902
01:20:33,570 --> 01:20:41,249
let's not fool ourselves that in um

1903
01:20:36,199 --> 01:20:45,749
let's not fool ourselves that in the the

1904
01:20:41,249 --> 01:20:47,309
vast majority of systems the the the

1905
01:20:45,749 --> 01:20:49,409
other usual to anything other than the

1906
01:20:47,309 --> 01:20:51,179
other user of clients would any of the

1907
01:20:49,409 --> 01:20:53,670
robotically like do whatever the server

1908
01:20:51,179 --> 01:20:57,700
asks them to do right um and similarly

1909
01:20:53,670 --> 01:21:00,880
it's possible and similarly

1910
01:20:57,700 --> 01:21:01,960
you know it's possible in a system which

1911
01:21:00,880 --> 01:21:04,060
didn't want so initially added simply

1912
01:21:01,960 --> 01:21:05,920
ignore listen simply ignore the server's

1913
01:21:04,060 --> 01:21:07,750
message that effect right and I think

1914
01:21:05,920 --> 01:21:09,850
that's it's like let me offer sort of a

1915
01:21:07,750 --> 01:21:10,690
counter-argument to the implicit thing

1916
01:21:09,850 --> 01:21:14,430
that we're building something which we

1917
01:21:10,690 --> 01:21:19,059
expect to be misused which is that um

1918
01:21:14,430 --> 01:21:23,070
that if you want a little system where

1919
01:21:19,060 --> 01:21:26,290
you don't want some initiate ad right um

1920
01:21:23,070 --> 01:21:27,880
like are you better off are you are you

1921
01:21:26,290 --> 01:21:30,070
are you better you better off in a world

1922
01:21:27,880 --> 01:21:33,370
where like you want the other clients to

1923
01:21:30,070 --> 01:21:35,290
omit the OD respondents location or you

1924
01:21:33,370 --> 01:21:38,500
better from the world were you yourself

1925
01:21:35,290 --> 01:21:39,970
ignore all the you know yourself ignore

1926
01:21:38,500 --> 01:21:42,220
that ignore the ads and I don't know I

1927
01:21:39,970 --> 01:21:44,080
think I imagine the argument goes both

1928
01:21:42,220 --> 01:21:45,790
ways and I think like like so here's

1929
01:21:44,080 --> 01:21:47,950
like here's like my my hypothetical bad

1930
01:21:45,790 --> 01:21:49,630
argument right so you say you have like

1931
01:21:47,950 --> 01:21:51,220
you know all the best rating system we

1932
01:21:49,630 --> 01:21:54,460
have now basically how high captive

1933
01:21:51,220 --> 01:21:55,540
client-server systems right um where I

1934
01:21:54,460 --> 01:21:57,340
think where the client and the server

1935
01:21:55,540 --> 01:21:59,710
and let same people right but imagine a

1936
01:21:57,340 --> 01:22:04,480
world we had an open system right and um

1937
01:21:59,710 --> 01:22:07,330
and so now you have a system in people

1938
01:22:04,480 --> 01:22:08,469
and um and everybody brings their own

1939
01:22:07,330 --> 01:22:13,120
client in the clients are varying

1940
01:22:08,470 --> 01:22:15,370
qualities right and so now when I join I

1941
01:22:13,120 --> 01:22:17,470
accidentally misconfigure my client so

1942
01:22:15,370 --> 01:22:18,940
it's not designed to not or doesn't

1943
01:22:17,470 --> 01:22:21,160
refuse to respond to server server

1944
01:22:18,940 --> 01:22:22,450
solicitations right so now there's not

1945
01:22:21,160 --> 01:22:23,889
well in the protocol those little

1946
01:22:22,450 --> 01:22:25,599
stations are manifest then like you

1947
01:22:23,890 --> 01:22:30,010
didn't whole system screw right whereas

1948
01:22:25,600 --> 01:22:32,170
by contrast the the system where where I

1949
01:22:30,010 --> 01:22:33,790
could fit where I could where people can

1950
01:22:32,170 --> 01:22:35,410
individually configured our clients to

1951
01:22:33,790 --> 01:22:37,900
ignore the server solicitation then you

1952
01:22:35,410 --> 01:22:39,160
get a break instead of getting a instead

1953
01:22:37,900 --> 01:22:40,690
if you get a precision instead of

1954
01:22:39,160 --> 01:22:42,790
getting instead of getting this is being

1955
01:22:40,690 --> 01:22:44,379
screwed so um I think that's really a

1956
01:22:42,790 --> 01:22:45,880
very strong argument against not having

1957
01:22:44,380 --> 01:22:48,370
any feature and here for this because

1958
01:22:45,880 --> 01:22:50,530
because because it because then like if

1959
01:22:48,370 --> 01:22:52,510
the if this if the response this

1960
01:22:50,530 --> 01:22:54,250
notation is just to blindly find the

1961
01:22:52,510 --> 01:22:55,600
echo it and not to have any enforcement

1962
01:22:54,250 --> 01:22:56,920
that the server actually initiated it

1963
01:22:55,600 --> 01:22:58,870
then if there's very high probability

1964
01:22:56,920 --> 01:23:01,030
that any that if you have a client which

1965
01:22:58,870 --> 01:23:02,290
is perky participating either non server

1966
01:23:01,030 --> 01:23:03,960
initiated or sovereign nation and

1967
01:23:02,290 --> 01:23:07,330
networks that you'll get cross-wired

1968
01:23:03,960 --> 01:23:08,950
whereas um if you if you force the

1969
01:23:07,330 --> 01:23:11,080
manifest then that can't happen because

1970
01:23:08,950 --> 01:23:13,599
then at least then then this it then

1971
01:23:11,080 --> 01:23:15,490
what happened will be that the that when

1972
01:23:13,600 --> 01:23:17,020
I programmed my system not to accept our

1973
01:23:15,490 --> 01:23:18,610
worship service service low set of ads

1974
01:23:17,020 --> 01:23:20,440
and we're gonna purchase it again so I

1975
01:23:18,610 --> 01:23:21,820
think like you really wanna the property

1976
01:23:20,440 --> 01:23:25,150
that like one this configure planks

1977
01:23:21,820 --> 01:23:26,440
can't screw everybody over so I don't

1978
01:23:25,150 --> 01:23:27,610
know if that helps us distinguish is

1979
01:23:26,440 --> 01:23:28,719
that that all persuasion if you like

1980
01:23:27,610 --> 01:23:29,349
making a face and so maybe I'm like

1981
01:23:28,720 --> 01:23:40,840
really confused

1982
01:23:29,350 --> 01:23:42,340
I can't imagine a system like this which

1983
01:23:40,840 --> 01:23:43,900
actually is an open world system where

1984
01:23:42,340 --> 01:23:45,820
one misconfigured client can't cause a

1985
01:23:43,900 --> 01:23:48,639
partition regardless of whether we do

1986
01:23:45,820 --> 01:23:49,780
server initiated ads sorry my concern is

1987
01:23:48,640 --> 01:23:52,000
I will this isn't one to cross a

1988
01:23:49,780 --> 01:23:53,110
partition so I guess you think the story

1989
01:23:52,000 --> 01:23:54,910
that I'm trying to tell again which is

1990
01:23:53,110 --> 01:23:57,670
we have we have we have clients which

1991
01:23:54,910 --> 01:24:00,970
are configurable which are configurable

1992
01:23:57,670 --> 01:24:04,450
to like um operating either a server an

1993
01:24:00,970 --> 01:24:05,740
issue ad server like operate either in

1994
01:24:04,450 --> 01:24:10,769
environments where servers are supposed

1995
01:24:05,740 --> 01:24:13,450
to be adding or not right and um and so

1996
01:24:10,770 --> 01:24:14,680
if and because there are it's like you

1997
01:24:13,450 --> 01:24:16,360
know we have network a which has server

1998
01:24:14,680 --> 01:24:18,640
initiated and their servers listed add

1999
01:24:16,360 --> 01:24:22,389
never compete which is not right and so

2000
01:24:18,640 --> 01:24:24,910
if I have a fight if I take my client so

2001
01:24:22,390 --> 01:24:26,320
if I have a client which will forward

2002
01:24:24,910 --> 01:24:29,440
which will actually respond to server

2003
01:24:26,320 --> 01:24:30,639
solicitations right and I joined be

2004
01:24:29,440 --> 01:24:32,589
where I'm not supposed to happen if that

2005
01:24:30,640 --> 01:24:35,470
client for some reason doesn't does is

2006
01:24:32,590 --> 01:24:38,020
incorrect and will respond to server

2007
01:24:35,470 --> 01:24:39,460
solicitations um that client basically

2008
01:24:38,020 --> 01:24:41,890
represents a threat to everybody else on

2009
01:24:39,460 --> 01:24:44,620
so on no B even though it's a perfectly

2010
01:24:41,890 --> 01:24:47,710
valid on network right and so if we

2011
01:24:44,620 --> 01:24:49,960
force the responsible cetaceans to come

2012
01:24:47,710 --> 01:24:52,570
with a whole lotta station chain then

2013
01:24:49,960 --> 01:24:54,400
the runs are cut by the way um then then

2014
01:24:52,570 --> 01:24:57,420
everyone that if anyone else on node be

2015
01:24:54,400 --> 01:24:59,830
properly checks the chain then that

2016
01:24:57,420 --> 01:25:04,090
misbehavin client is detected as opposed

2017
01:24:59,830 --> 01:25:04,980
to just like blindly adding you yeah all

2018
01:25:04,090 --> 01:25:07,210
right

2019
01:25:04,980 --> 01:25:12,280
I'm not loving any of this at all that's

2020
01:25:07,210 --> 01:25:15,070
pretty bad right yeah I just want to

2021
01:25:12,280 --> 01:25:18,670
make sure we support the use case where

2022
01:25:15,070 --> 01:25:21,460
a group really wants to have humans in

2023
01:25:18,670 --> 01:25:23,740
the loop for adding and so I hope it's

2024
01:25:21,460 --> 01:25:24,300
not all silent server initiated stuff

2025
01:25:23,740 --> 01:25:27,179
and that

2026
01:25:24,300 --> 01:25:29,489
can also have groups that that that is a

2027
01:25:27,179 --> 01:25:31,139
policy sort of require a human to hit a

2028
01:25:29,489 --> 01:25:33,000
button or something yeah yeah I don't

2029
01:25:31,139 --> 01:25:34,409
think any of this was to say that you

2030
01:25:33,000 --> 01:25:36,329
know we wouldn't have self managing

2031
01:25:34,409 --> 01:25:38,909
groups but it's also a lot external

2032
01:25:36,329 --> 01:25:40,799
right well okay thanks for the feedback

2033
01:25:38,909 --> 01:25:42,960
I will continue to think if we can

2034
01:25:40,800 --> 01:25:45,090
address some of these but it's useful

2035
01:25:42,960 --> 01:25:48,030
having this this framing of how do we

2036
01:25:45,090 --> 01:25:52,650
guide things properly um so I'll take

2037
01:25:48,030 --> 01:25:56,869
another shot at this Thanks three decks

2038
01:25:52,650 --> 01:26:01,579
in 35 minutes man terrible okay

2039
01:25:56,869 --> 01:26:03,420
so we have less things to discuss now

2040
01:26:01,579 --> 01:26:07,019
typically there is one thing that has

2041
01:26:03,420 --> 01:26:11,790
been occurring of other SG meetings is

2042
01:26:07,020 --> 01:26:14,579
hpk so right now when we do public key

2043
01:26:11,790 --> 01:26:18,239
encryption to in within a tree or

2044
01:26:14,579 --> 01:26:19,619
actually to a specific new member that's

2045
01:26:18,239 --> 01:26:21,239
gonna be added to hope when you want to

2046
01:26:19,619 --> 01:26:23,848
send him some pubic information

2047
01:26:21,239 --> 01:26:26,119
encrypted and OSP bleakie yeah you are

2048
01:26:23,849 --> 01:26:28,849
using it HBK

2049
01:26:26,119 --> 01:26:33,598
so there is a draft from Richard that is

2050
01:26:28,849 --> 01:26:35,610
known ITF out walking up laughs and

2051
01:26:33,599 --> 01:26:37,619
progress and the current state of the

2052
01:26:35,610 --> 01:26:42,540
things is that basically when we encrypt

2053
01:26:37,619 --> 01:26:45,780
to a subgroup ultralift directly we use

2054
01:26:42,540 --> 01:26:48,599
HP k io is basically HP kayo is

2055
01:26:45,780 --> 01:26:52,590
basically no PS k so in HP k no we have

2056
01:26:48,599 --> 01:26:56,280
a mode that supports PS k we don't mix

2057
01:26:52,590 --> 01:26:58,770
in the identity of the sander and we

2058
01:26:56,280 --> 01:27:02,250
basically provide no information and at

2059
01:26:58,770 --> 01:27:04,920
the interim photos that when we

2060
01:27:02,250 --> 01:27:08,610
discussed a lot with kasich and many

2061
01:27:04,920 --> 01:27:11,750
others the fact that in many of the

2062
01:27:08,610 --> 01:27:15,389
encryptions in the a ad in the HP ke

2063
01:27:11,750 --> 01:27:18,929
encryptions we don't have any contacts

2064
01:27:15,389 --> 01:27:22,770
right now and that's basically something

2065
01:27:18,929 --> 01:27:25,139
that's problematic regarding Costco

2066
01:27:22,770 --> 01:27:27,210
scope attacks etc so the idea that we

2067
01:27:25,139 --> 01:27:28,889
want to add more context more binding to

2068
01:27:27,210 --> 01:27:32,520
the concept trees on the left and the

2069
01:27:28,889 --> 01:27:34,320
right to sue the HP k encryption and

2070
01:27:32,520 --> 01:27:36,900
basically we want to do the same for AG

2071
01:27:34,320 --> 01:27:38,460
as well because there is there is a spot

2072
01:27:36,900 --> 01:27:41,339
to put more

2073
01:27:38,460 --> 01:27:45,720
so one question is whether we should

2074
01:27:41,340 --> 01:27:49,770
better PSK there we definitely want to

2075
01:27:45,720 --> 01:27:53,250
at least mix in the identity of the of

2076
01:27:49,770 --> 01:27:55,320
the sander and we have the spot for the

2077
01:27:53,250 --> 01:27:57,720
information in the security proof we

2078
01:27:55,320 --> 01:28:00,870
have basically in the symbolic model at

2079
01:27:57,720 --> 01:28:03,240
least we don't do any additional detail

2080
01:28:00,870 --> 01:28:05,750
man with the identity of the with the

2081
01:28:03,240 --> 01:28:09,360
long-term staticky of the of the Left

2082
01:28:05,750 --> 01:28:11,970
Party of the left subtree but what we do

2083
01:28:09,360 --> 01:28:15,330
is that we mix the anti of pubic tree

2084
01:28:11,970 --> 01:28:18,330
actually of the of the person that

2085
01:28:15,330 --> 01:28:21,059
actually sends so that there is

2086
01:28:18,330 --> 01:28:22,950
agreement at all times between the the

2087
01:28:21,060 --> 01:28:23,850
the person that's encrypts and the

2088
01:28:22,950 --> 01:28:26,250
person that receives the encryption

2089
01:28:23,850 --> 01:28:29,100
about the public tree it's only due to

2090
01:28:26,250 --> 01:28:31,710
those two right it's not the entire the

2091
01:28:29,100 --> 01:28:34,080
members of the tree that angry but at

2092
01:28:31,710 --> 01:28:37,500
least for the person that receives you

2093
01:28:34,080 --> 01:28:43,920
in nosy as yes the same view as the as

2094
01:28:37,500 --> 01:28:47,120
the as the participant that encrypted so

2095
01:28:43,920 --> 01:28:51,270
basically the global ID is like quite

2096
01:28:47,120 --> 01:28:54,150
variant the IDS but more in there

2097
01:28:51,270 --> 01:28:56,340
the the current state is that we bound

2098
01:28:54,150 --> 01:28:59,160
anyway the ciphertext are bounded to the

2099
01:28:56,340 --> 01:29:03,420
sub trees and because you use the public

2100
01:28:59,160 --> 01:29:09,780
keys if I'm on a static key of the of

2101
01:29:03,420 --> 01:29:12,390
the work group and for the hpk now is

2102
01:29:09,780 --> 01:29:14,550
there any specific reason to add a PS

2103
01:29:12,390 --> 01:29:17,870
gain they're not sure it's actually

2104
01:29:14,550 --> 01:29:20,850
that's not something that we are doing

2105
01:29:17,870 --> 01:29:24,090
it seems that mixing information the

2106
01:29:20,850 --> 01:29:27,240
context is enough to ensure that there

2107
01:29:24,090 --> 01:29:29,070
is agreement maybe there are some other

2108
01:29:27,240 --> 01:29:32,400
reasons to do that let's see

2109
01:29:29,070 --> 01:29:34,019
and we definitely apparently we don't

2110
01:29:32,400 --> 01:29:37,769
need to do an extra edge operation

2111
01:29:34,020 --> 01:29:39,570
either so it would be good to have more

2112
01:29:37,770 --> 01:29:43,680
analysis on this the preliminary is that

2113
01:29:39,570 --> 01:29:46,370
we don't need it but some analysis might

2114
01:29:43,680 --> 01:29:49,710
say that we actually need to do it

2115
01:29:46,370 --> 01:29:51,040
Richard Brown just be brief because we

2116
01:29:49,710 --> 01:29:53,110
need to move on here but

2117
01:29:51,040 --> 01:29:55,650
I think the short answer here is I will

2118
01:29:53,110 --> 01:29:57,940
I think we should put in to the

2119
01:29:55,650 --> 01:30:00,339
symmetric inputs these are the PSK or

2120
01:29:57,940 --> 01:30:02,500
the info whatever you like I would very

2121
01:30:00,340 --> 01:30:05,470
strongly prefer we do not do the

2122
01:30:02,500 --> 01:30:07,060
additional PKI the initiator yeah we

2123
01:30:05,470 --> 01:30:10,270
need it because that's its crypto

2124
01:30:07,060 --> 01:30:13,200
expensive ends as these rigidity we lock

2125
01:30:10,270 --> 01:30:15,550
into the the DHS off cam stuff so yeah

2126
01:30:13,200 --> 01:30:18,580
strongly prefer to avoid doing the the

2127
01:30:15,550 --> 01:30:20,830
public key stuff but please academics

2128
01:30:18,580 --> 01:30:24,390
Britta Benjamin tell us what we put

2129
01:30:20,830 --> 01:30:29,110
there so that's it so that's an intense

2130
01:30:24,390 --> 01:30:32,020
we'll try to add more more context

2131
01:30:29,110 --> 01:30:34,389
inside the key derivation exit if you

2132
01:30:32,020 --> 01:30:36,490
have any concerns I think it's an

2133
01:30:34,390 --> 01:30:38,860
interesting point especially on the PSK

2134
01:30:36,490 --> 01:30:42,849
point if you see if you have like use

2135
01:30:38,860 --> 01:30:46,809
cases that might need to place casing to

2136
01:30:42,850 --> 01:30:51,010
be interesting to know another topic

2137
01:30:46,810 --> 01:30:52,480
that we discussed and key we talked

2138
01:30:51,010 --> 01:30:54,610
about non this what we call

2139
01:30:52,480 --> 01:30:56,410
non-destructive are ad which is

2140
01:30:54,610 --> 01:30:59,500
basically the fact that when we we're

2141
01:30:56,410 --> 01:31:03,300
doing has currently we were blanking so

2142
01:30:59,500 --> 01:31:06,910
to echo what we do is that we inserts

2143
01:31:03,300 --> 01:31:11,710
when we add F to a tree we insert F in

2144
01:31:06,910 --> 01:31:12,610
the tree and then we block so the other

2145
01:31:11,710 --> 01:31:14,530
solution to that

2146
01:31:12,610 --> 01:31:16,690
so because we've long we lose efficiency

2147
01:31:14,530 --> 01:31:19,719
right because now we need to encrypt to

2148
01:31:16,690 --> 01:31:23,160
this guy this guy and this guy instead

2149
01:31:19,720 --> 01:31:25,720
of only the word secret that would know

2150
01:31:23,160 --> 01:31:30,550
so a different thing would be to

2151
01:31:25,720 --> 01:31:34,450
basically don't blank at all and encrypt

2152
01:31:30,550 --> 01:31:36,550
two to two subtrees because you actually

2153
01:31:34,450 --> 01:31:38,559
maintain the secrecy invariant in the

2154
01:31:36,550 --> 01:31:40,810
sense that you already have nodes that

2155
01:31:38,560 --> 01:31:43,960
are filled with keys for the subtree

2156
01:31:40,810 --> 01:31:46,930
only F doesn't know those those keys

2157
01:31:43,960 --> 01:31:49,360
because they haven't been sent to him so

2158
01:31:46,930 --> 01:31:51,160
it is that we instead of doing only one

2159
01:31:49,360 --> 01:31:54,309
encryption to the hood

2160
01:31:51,160 --> 01:31:56,320
instead of so doing the district chief

2161
01:31:54,310 --> 01:31:59,530
case where you encrypt to those three

2162
01:31:56,320 --> 01:32:00,759
nodes in the in this case what you do is

2163
01:31:59,530 --> 01:32:03,460
just

2164
01:32:00,760 --> 01:32:07,330
I have a full sub-tree and instead of

2165
01:32:03,460 --> 01:32:09,700
like okay and instead of sending through

2166
01:32:07,330 --> 01:32:12,250
those three nodes you encrypt twice one

2167
01:32:09,700 --> 01:32:16,900
for the routes the existing routes and

2168
01:32:12,250 --> 01:32:19,690
one for F so you came two times so if

2169
01:32:16,900 --> 01:32:22,570
you take more subtly more complex

2170
01:32:19,690 --> 01:32:24,370
example it reflects a bit more why it's

2171
01:32:22,570 --> 01:32:27,099
efficient it's more efficient so imagine

2172
01:32:24,370 --> 01:32:30,670
you have a full tree you'll remove see

2173
01:32:27,100 --> 01:32:33,550
EF and L so know you're in the states

2174
01:32:30,670 --> 01:32:35,170
where you have six heads those those

2175
01:32:33,550 --> 01:32:39,100
blackheads and you need to encrypt to

2176
01:32:35,170 --> 01:32:41,890
all of them right in imagine someone

2177
01:32:39,100 --> 01:32:44,080
like a adds and recovers basically is

2178
01:32:41,890 --> 01:32:45,520
full pass up to the woods so in that

2179
01:32:44,080 --> 01:32:49,720
case you just have to encrypt to that

2180
01:32:45,520 --> 01:32:53,710
guy right if now you'd escape the

2181
01:32:49,720 --> 01:32:56,830
destructive add and add C you would kill

2182
01:32:53,710 --> 01:32:59,500
all those previous knows that you feel

2183
01:32:56,830 --> 01:33:01,630
so basically you kill the efficiency

2184
01:32:59,500 --> 01:33:03,940
that you just restored by having an

2185
01:33:01,630 --> 01:33:06,160
update so it's quite bad in some sense

2186
01:33:03,940 --> 01:33:08,589
because you you completely destroy the

2187
01:33:06,160 --> 01:33:11,290
efficiency of the of the group well if

2188
01:33:08,590 --> 01:33:13,480
you do the non-destructive ad basically

2189
01:33:11,290 --> 01:33:15,700
you are just adding you're keeping the

2190
01:33:13,480 --> 01:33:17,200
previous nodes and you're adding one so

2191
01:33:15,700 --> 01:33:18,700
basically you have two heads the

2192
01:33:17,200 --> 01:33:21,670
existing one which is on the left

2193
01:33:18,700 --> 01:33:23,910
basically and the new one which is C so

2194
01:33:21,670 --> 01:33:28,690
you do two cans instead of doing six

2195
01:33:23,910 --> 01:33:32,860
seven sorry and it maintains the secrecy

2196
01:33:28,690 --> 01:33:37,000
invariant the costs is simply that no

2197
01:33:32,860 --> 01:33:39,910
you had a bit more complexity I'll get

2198
01:33:37,000 --> 01:33:40,990
back to that in the end but it doesn't

2199
01:33:39,910 --> 01:33:42,910
seem too bad

2200
01:33:40,990 --> 01:33:46,120
the protocol impact is just that you you

2201
01:33:42,910 --> 01:33:49,710
keep basically a list of for each

2202
01:33:46,120 --> 01:33:53,230
intermediate node you key and you keep

2203
01:33:49,710 --> 01:33:58,150
the index of the of the node that hasn't

2204
01:33:53,230 --> 01:33:59,500
been made yet in so you have to do a bit

2205
01:33:58,150 --> 01:34:00,610
more record-keeping in some sense

2206
01:33:59,500 --> 01:34:01,870
because you have to keep track that

2207
01:34:00,610 --> 01:34:04,940
there are two keys for watching

2208
01:34:01,870 --> 01:34:08,480
terminate nodes and that

2209
01:34:04,940 --> 01:34:11,269
new you must on hip to those too but you

2210
01:34:08,480 --> 01:34:16,910
you have the benefit of having a way

2211
01:34:11,270 --> 01:34:18,830
more efficient at least and one more

2212
01:34:16,910 --> 01:34:23,150
efficient group operation that follows

2213
01:34:18,830 --> 01:34:25,760
the ad so it's it's it's actually quite

2214
01:34:23,150 --> 01:34:28,129
good there is something that we've been

2215
01:34:25,760 --> 01:34:29,870
discussing a while back is that

2216
01:34:28,130 --> 01:34:32,840
hopefully the stats that we are maybe

2217
01:34:29,870 --> 01:34:36,019
you can confirm this Richard is that the

2218
01:34:32,840 --> 01:34:39,620
numbers of adds and removes in groups

2219
01:34:36,020 --> 01:34:41,210
actually very similar in terms of the

2220
01:34:39,620 --> 01:34:42,500
frequency of add and removes are

2221
01:34:41,210 --> 01:34:44,420
actually very similar it's not like

2222
01:34:42,500 --> 01:34:46,850
there is a large difference between

2223
01:34:44,420 --> 01:34:49,370
updates and at remove but the number of

2224
01:34:46,850 --> 01:34:51,740
add and removes in a group is roughly

2225
01:34:49,370 --> 01:34:53,180
the same along your life of the group it

2226
01:34:51,740 --> 01:34:56,510
depends because at the very meaning of

2227
01:34:53,180 --> 01:35:01,130
obviously you have like more ads but as

2228
01:34:56,510 --> 01:35:04,460
group keeps going it stabilizes and you

2229
01:35:01,130 --> 01:35:07,520
have lots of I don't know moves but in a

2230
01:35:04,460 --> 01:35:08,960
similar height let's say so that's

2231
01:35:07,520 --> 01:35:11,690
something we have to consider it gives a

2232
01:35:08,960 --> 01:35:13,400
bit more complexity in the algorithm for

2233
01:35:11,690 --> 01:35:15,650
intermediate nodes but it's recall those

2234
01:35:13,400 --> 01:35:18,650
a lot of agency and I think more data

2235
01:35:15,650 --> 01:35:19,879
would be welcome as so Richard burns

2236
01:35:18,650 --> 01:35:22,070
that yeah I think we should just do this

2237
01:35:19,880 --> 01:35:23,750
I think the complexity is manageable

2238
01:35:22,070 --> 01:35:25,700
there's a little bit of weirdness and

2239
01:35:23,750 --> 01:35:28,460
remove but I think it's it's not a whole

2240
01:35:25,700 --> 01:35:30,050
lot of code you say to keep all this

2241
01:35:28,460 --> 01:35:33,020
information around and keep it live so

2242
01:35:30,050 --> 01:35:37,490
and I think the the performance benefits

2243
01:35:33,020 --> 01:35:42,320
merit they the extra record-keeping this

2244
01:35:37,490 --> 01:35:44,480
is Daniel con Gilmore sorry I didn't

2245
01:35:42,320 --> 01:35:47,509
fully understand the way the proposals

2246
01:35:44,480 --> 01:35:49,580
working and I I like that you've given

2247
01:35:47,510 --> 01:35:52,610
us an example of what happens when you

2248
01:35:49,580 --> 01:35:55,370
do one AD or what I didn't see is what

2249
01:35:52,610 --> 01:35:57,469
happens when you do two ads do we now

2250
01:35:55,370 --> 01:35:58,640
have three do we have a try part yes

2251
01:35:57,470 --> 01:36:00,560
root node yes

2252
01:35:58,640 --> 01:36:02,030
hey somebody have a four part root node

2253
01:36:00,560 --> 01:36:06,440
and a five part root node you have at

2254
01:36:02,030 --> 01:36:08,840
least so you have a so you have a key in

2255
01:36:06,440 --> 01:36:13,639
that root node whose private key is

2256
01:36:08,840 --> 01:36:16,190
known to the pre add population under

2257
01:36:13,640 --> 01:36:18,269
there and then you have a list of leaf

2258
01:36:16,190 --> 01:36:21,268
keys that have been popular

2259
01:36:18,269 --> 01:36:24,840
since the last update to that root node

2260
01:36:21,269 --> 01:36:27,329
and so when you encrypt to that subgroup

2261
01:36:24,840 --> 01:36:30,030
you encrypt to the thing that was known

2262
01:36:27,329 --> 01:36:33,570
as the pre ad members and the leaf keys

2263
01:36:30,030 --> 01:36:36,360
that were added since so now what we're

2264
01:36:33,570 --> 01:36:39,018
saying is that each message needs to be

2265
01:36:36,360 --> 01:36:41,789
encrypted to multiple different targets

2266
01:36:39,019 --> 01:36:46,349
right so we're making add more efficient

2267
01:36:41,789 --> 01:36:48,389
while making send less efficient it was

2268
01:36:46,349 --> 01:36:51,030
already the case yeah that was a lot you

2269
01:36:48,389 --> 01:36:54,329
already had two on creat like for if you

2270
01:36:51,030 --> 01:36:56,249
do I don't know if you want to send a

2271
01:36:54,329 --> 01:36:58,679
message to the to D to the entire group

2272
01:36:56,249 --> 01:37:01,800
here you already have to unclick to

2273
01:36:58,679 --> 01:37:04,769
those guys and this guy and all the rest

2274
01:37:01,800 --> 01:37:06,090
so in some sense you tied you already

2275
01:37:04,769 --> 01:37:10,530
have a list of keys you have to encrypt

2276
01:37:06,090 --> 01:37:13,349
to it's just that you try to maintain a

2277
01:37:10,530 --> 01:37:17,009
list of people of people that have not

2278
01:37:13,349 --> 01:37:19,999
been yet merged in the sub tree so that

2279
01:37:17,010 --> 01:37:22,650
you only have to send to them instead of

2280
01:37:19,999 --> 01:37:25,050
instead of you can use the previous

2281
01:37:22,650 --> 01:37:26,879
route of the sub tree that's one

2282
01:37:25,050 --> 01:37:29,730
encryption and then the list of people

2283
01:37:26,880 --> 01:37:33,409
that haven't been merged yet but that's

2284
01:37:29,730 --> 01:37:33,409
no worse than the producers right now I

2285
01:37:33,860 --> 01:37:37,679
don't know I haven't looked at what the

2286
01:37:35,940 --> 01:37:39,299
overall numbers are and what the what

2287
01:37:37,679 --> 01:37:41,880
the balance is for in terms of how many

2288
01:37:39,300 --> 01:37:44,909
keys you're managing over time and how

2289
01:37:41,880 --> 01:37:46,230
expensive the adds sorry I don't I'm

2290
01:37:44,909 --> 01:37:48,539
sorry I didn't understand just films

2291
01:37:46,230 --> 01:37:49,949
presentation but I don't understand how

2292
01:37:48,539 --> 01:37:52,230
we judge that without seeing some

2293
01:37:49,949 --> 01:37:53,789
numbers about what the actual amount of

2294
01:37:52,230 --> 01:37:57,619
trade-off is in terms of storage and in

2295
01:37:53,789 --> 01:37:57,619
terms of how complicated ooh yeah

2296
01:38:02,329 --> 01:38:08,400
matthew Miller so I mean for me I'm

2297
01:38:05,369 --> 01:38:09,900
looking at this this actually looks

2298
01:38:08,400 --> 01:38:12,690
great not so much from the frequency

2299
01:38:09,900 --> 01:38:14,940
side but from the size of the tree like

2300
01:38:12,690 --> 01:38:16,650
if you've got a very very large tree

2301
01:38:14,940 --> 01:38:18,989
this could actually be quite efficient

2302
01:38:16,650 --> 01:38:22,499
for ads I mean when you've got a really

2303
01:38:18,989 --> 01:38:24,030
really large tree you're usually only

2304
01:38:22,499 --> 01:38:26,728
getting a few ads at least that's what

2305
01:38:24,030 --> 01:38:29,460
I've seen from my experiences so this

2306
01:38:26,729 --> 01:38:31,780
would greatly simplify things I think

2307
01:38:29,460 --> 01:38:34,030
can you comment on how can you come

2308
01:38:31,780 --> 01:38:35,469
how large those groups are tens of

2309
01:38:34,030 --> 01:38:37,780
thousands from what I've seen in the

2310
01:38:35,469 --> 01:38:39,539
past with my experiences it's it's been

2311
01:38:37,780 --> 01:38:43,389
in the thousands but on a system that

2312
01:38:39,539 --> 01:38:44,860
ads are expensive so one thing to

2313
01:38:43,389 --> 01:38:47,079
remember though is that we are

2314
01:38:44,860 --> 01:38:49,058
constantly updating right so do you

2315
01:38:47,079 --> 01:38:51,869
think this example is nice because it

2316
01:38:49,059 --> 01:38:55,719
reflects adding someone when the tree is

2317
01:38:51,869 --> 01:38:57,820
partially filled but if you have a

2318
01:38:55,719 --> 01:39:00,730
uniform distribution of people in the

2319
01:38:57,820 --> 01:39:03,039
tree that basically updates all the time

2320
01:39:00,730 --> 01:39:05,619
the tree will mostly be food anyway and

2321
01:39:03,039 --> 01:39:08,710
in that case that scenario is not super

2322
01:39:05,619 --> 01:39:11,199
interesting so general I think it's way

2323
01:39:08,710 --> 01:39:13,030
more efficient to do this and the

2324
01:39:11,199 --> 01:39:14,678
alternative to recover efficiency for us

2325
01:39:13,030 --> 01:39:17,050
would be to distribute to relocate

2326
01:39:14,679 --> 01:39:21,880
people in the tree so that basically

2327
01:39:17,050 --> 01:39:23,710
have a uniform distribution of people

2328
01:39:21,880 --> 01:39:28,559
that actually updates and when their

2329
01:39:23,710 --> 01:39:43,599
debts of course they filled the entire

2330
01:39:28,559 --> 01:39:44,500
hunt out the entire pass so I don't yeah

2331
01:39:43,599 --> 01:39:50,860
okay

2332
01:39:44,500 --> 01:39:52,780
a updates in feeds the path so yeah so I

2333
01:39:50,860 --> 01:39:54,400
propose we go ahead and just ER on this

2334
01:39:52,780 --> 01:39:56,769
and then we can do some simulation you

2335
01:39:54,400 --> 01:40:07,089
validated it yeah simulation and data

2336
01:39:56,770 --> 01:40:10,960
wouldn't just infomercial the complexity

2337
01:40:07,090 --> 01:40:13,900
it introduces and just to be clear it's

2338
01:40:10,960 --> 01:40:15,520
orthogonal of course to having lazy and

2339
01:40:13,900 --> 01:40:18,159
check messages and I think you lazy ad

2340
01:40:15,520 --> 01:40:20,699
while you destroy everything and you

2341
01:40:18,159 --> 01:40:31,869
heal on me through updating yeah

2342
01:40:20,699 --> 01:40:32,949
ratcheting so it's thinking about it I

2343
01:40:31,869 --> 01:40:34,719
think it doesn't

2344
01:40:32,949 --> 01:40:36,308
I'm not afraid about the complexity

2345
01:40:34,719 --> 01:40:38,440
because I do informal letters and I

2346
01:40:36,309 --> 01:40:40,960
could and I can prove that I do what the

2347
01:40:38,440 --> 01:40:43,040
thing is supposed to do but I can

2348
01:40:40,960 --> 01:40:45,230
understand why people would

2349
01:40:43,040 --> 01:40:48,080
would be scared about having this

2350
01:40:45,230 --> 01:40:52,099
additional complexity there so that

2351
01:40:48,080 --> 01:40:53,480
something to is to discuss I guess one

2352
01:40:52,100 --> 01:40:56,960
more thing that we discussed that

2353
01:40:53,480 --> 01:40:58,400
interim twist signing so do it is that

2354
01:40:56,960 --> 01:41:01,190
when you add someone to the group you're

2355
01:40:58,400 --> 01:41:03,710
going to send him the pubic state of the

2356
01:41:01,190 --> 01:41:05,929
tree and the sander could actually lie

2357
01:41:03,710 --> 01:41:07,730
right because you don't have the entire

2358
01:41:05,930 --> 01:41:09,610
story of the group and you should not

2359
01:41:07,730 --> 01:41:12,230
have the entire story of the group

2360
01:41:09,610 --> 01:41:14,540
because it would leak privacy of people

2361
01:41:12,230 --> 01:41:15,980
that that would have publishing issues

2362
01:41:14,540 --> 01:41:17,360
in the sense that people that were in

2363
01:41:15,980 --> 01:41:18,739
the group before you don't necessarily

2364
01:41:17,360 --> 01:41:20,690
want to know that they were under God

2365
01:41:18,739 --> 01:41:23,259
before what you want is the current

2366
01:41:20,690 --> 01:41:26,269
state of the group when you added and

2367
01:41:23,260 --> 01:41:28,880
because that's all that you you should

2368
01:41:26,270 --> 01:41:30,560
have maybe you want some additional

2369
01:41:28,880 --> 01:41:31,820
bindings with the people that are

2370
01:41:30,560 --> 01:41:33,950
actually in the group and actually you

2371
01:41:31,820 --> 01:41:36,739
know because you receive a full tree

2372
01:41:33,950 --> 01:41:38,300
that there are those exact pubic keys in

2373
01:41:36,739 --> 01:41:41,059
the group's you know the entire state of

2374
01:41:38,300 --> 01:41:46,070
the victory as is received by the sander

2375
01:41:41,060 --> 01:41:51,860
but the sander casaya so currently what

2376
01:41:46,070 --> 01:41:53,960
we are is that we have in a subtree like

2377
01:41:51,860 --> 01:41:56,330
this in triplets you have like left

2378
01:41:53,960 --> 01:41:59,150
subtree right subtree the current the

2379
01:41:56,330 --> 01:42:05,030
country in which you have a value which

2380
01:41:59,150 --> 01:42:07,009
is the secret sorry and hash which is

2381
01:42:05,030 --> 01:42:08,750
basically combining the ash of the

2382
01:42:07,010 --> 01:42:13,760
subtree so that you have agreements in

2383
01:42:08,750 --> 01:42:16,820
the entire tree I mean you know what's

2384
01:42:13,760 --> 01:42:19,160
under the what's under the the left

2385
01:42:16,820 --> 01:42:20,840
subtree in the right subtree and if you

2386
01:42:19,160 --> 01:42:24,320
if you have the entire pubic stage you

2387
01:42:20,840 --> 01:42:26,570
can recompute the hashes and be sure

2388
01:42:24,320 --> 01:42:30,469
that the view is consistent with the ash

2389
01:42:26,570 --> 01:42:35,830
that's in actually in the old node but

2390
01:42:30,470 --> 01:42:40,040
of course if someone lies they can

2391
01:42:35,830 --> 01:42:41,600
tamper with the intermediate nodes and

2392
01:42:40,040 --> 01:42:43,940
send you a tree that's actually

2393
01:42:41,600 --> 01:42:46,370
consistent right you you you have a

2394
01:42:43,940 --> 01:42:50,059
public tree that's consistent because

2395
01:42:46,370 --> 01:42:51,710
should take the the ashes of the sub

2396
01:42:50,060 --> 01:42:54,080
trees you mix them in you have a wood

2397
01:42:51,710 --> 01:42:56,000
ash that's correct but actually all

2398
01:42:54,080 --> 01:42:58,430
those intermediate ashes could have

2399
01:42:56,000 --> 01:43:01,220
enforceable

2400
01:42:58,430 --> 01:43:03,960
so what you want is a way to actually

2401
01:43:01,220 --> 01:43:08,700
characterize who did what in the tree

2402
01:43:03,960 --> 01:43:11,880
along the history of the of the tree and

2403
01:43:08,700 --> 01:43:13,639
especially if you have someone that

2404
01:43:11,880 --> 01:43:17,210
sends you a public tree

2405
01:43:13,640 --> 01:43:20,400
you can sign all the intermediate nodes

2406
01:43:17,210 --> 01:43:21,660
when you when you do an operation so

2407
01:43:20,400 --> 01:43:23,820
typically if you do an update if you

2408
01:43:21,660 --> 01:43:29,370
change something if F doesn't update

2409
01:43:23,820 --> 01:43:30,780
assigns the the new sub tree here and

2410
01:43:29,370 --> 01:43:36,050
the new sub tree

2411
01:43:30,780 --> 01:43:41,700
the benefit of having that if that is B

2412
01:43:36,050 --> 01:43:45,150
is necessary in the tree and wants to

2413
01:43:41,700 --> 01:43:50,639
add someone wants to add you when you

2414
01:43:45,150 --> 01:43:52,769
receive the the the public tree be is

2415
01:43:50,640 --> 01:43:55,050
able to forge on in space because he

2416
01:43:52,770 --> 01:43:57,990
knows the secrets but he can't Forge the

2417
01:43:55,050 --> 01:44:00,600
signatures on other sub trees so if you

2418
01:43:57,990 --> 01:44:02,820
are able to verify that the signatures

2419
01:44:00,600 --> 01:44:06,750
on the other sub trees are valid

2420
01:44:02,820 --> 01:44:08,160
signatures except if the one exactly the

2421
01:44:06,750 --> 01:44:10,650
people that emitted the signatures of

2422
01:44:08,160 --> 01:44:13,950
you sees is a Josiah as well you know

2423
01:44:10,650 --> 01:44:16,500
that at least with this person you have

2424
01:44:13,950 --> 01:44:17,940
the same view of the tree so it's

2425
01:44:16,500 --> 01:44:21,000
certain some sense it's just like giving

2426
01:44:17,940 --> 01:44:24,059
you some more guarantees and like basic

2427
01:44:21,000 --> 01:44:29,970
we can incremental e build the fact that

2428
01:44:24,060 --> 01:44:33,060
oh yeah by the way he knows that this so

2429
01:44:29,970 --> 01:44:36,060
F doesn't update he signs this updated

2430
01:44:33,060 --> 01:44:38,400
node and sex out he comes after if we

2431
01:44:36,060 --> 01:44:40,620
take the same thing with the signature

2432
01:44:38,400 --> 01:44:48,000
signs that and go over so meaning that

2433
01:44:40,620 --> 01:44:51,900
if b if b if b actually sounds you

2434
01:44:48,000 --> 01:44:57,420
garbage you can check that the signature

2435
01:44:51,900 --> 01:45:00,710
that has been emitted by e is the node

2436
01:44:57,420 --> 01:45:03,300
is actually the correct one for e

2437
01:45:00,710 --> 01:45:05,400
increment re you can build that meaning

2438
01:45:03,300 --> 01:45:07,320
that if F successfully sent you an

2439
01:45:05,400 --> 01:45:09,239
update after you you inherit the fact

2440
01:45:07,320 --> 01:45:11,460
that oh both E and F

2441
01:45:09,239 --> 01:45:13,830
actually agree with the sander of the

2442
01:45:11,460 --> 01:45:16,889
initial ad that this was the cognate

2443
01:45:13,830 --> 01:45:19,500
entry so there is no perfect view of the

2444
01:45:16,889 --> 01:45:22,230
entire consistency the tree but you can

2445
01:45:19,500 --> 01:45:24,980
still get more and more information on

2446
01:45:22,230 --> 01:45:28,369
the fact that the sender of the original

2447
01:45:24,980 --> 01:45:30,269
tree that where you were added is

2448
01:45:28,369 --> 01:45:32,400
conformed to the vision of the other

2449
01:45:30,270 --> 01:45:34,980
people in the tree it's not like a union

2450
01:45:32,400 --> 01:45:37,589
union that they are a blessing that it's

2451
01:45:34,980 --> 01:45:39,809
a unilateral blessing that the current

2452
01:45:37,590 --> 01:45:43,500
state that you have is this one but

2453
01:45:39,810 --> 01:45:45,840
until people updates you don't get any

2454
01:45:43,500 --> 01:45:47,670
guarantee like only the only guarantee

2455
01:45:45,840 --> 01:45:49,889
you get is when someone actually

2456
01:45:47,670 --> 01:45:51,420
successfully updated the tree because

2457
01:45:49,889 --> 01:45:54,690
you know that in that case they have the

2458
01:45:51,420 --> 01:45:56,250
same view as you as well so if I'm

2459
01:45:54,690 --> 01:45:57,509
reading this correctly the nose with

2460
01:45:56,250 --> 01:45:59,099
question marks on them or the ones that

2461
01:45:57,510 --> 01:46:00,480
are actually untrustworthy so ideal

2462
01:45:59,099 --> 01:46:02,460
Antigua and I'm reading this correctly

2463
01:46:00,480 --> 01:46:03,989
the nodes of question marks on them are

2464
01:46:02,460 --> 01:46:07,170
the ones that are wrong

2465
01:46:03,989 --> 01:46:09,209
she didn't tell you if I'm reading this

2466
01:46:07,170 --> 01:46:11,210
correctly the nose with question marks

2467
01:46:09,210 --> 01:46:14,369
on them are the ones that are wrong

2468
01:46:11,210 --> 01:46:17,699
they're lies yes it can't be those can

2469
01:46:14,369 --> 01:46:19,440
be a I'm assuming the B's right so I

2470
01:46:17,699 --> 01:46:21,809
don't feel like super what a lot warmer

2471
01:46:19,440 --> 01:46:25,219
about any situation where like the route

2472
01:46:21,810 --> 01:46:27,420
is wrong but their leaves are right um

2473
01:46:25,219 --> 01:46:28,530
in terms of security objectives I'd

2474
01:46:27,420 --> 01:46:30,469
really be much more interested in

2475
01:46:28,530 --> 01:46:33,809
detecting lying but I am about

2476
01:46:30,469 --> 01:46:35,360
containing it namely I'd be much more

2477
01:46:33,810 --> 01:46:37,830
interested thing I'm interested in is

2478
01:46:35,360 --> 01:46:39,509
when is once we discover there's a

2479
01:46:37,830 --> 01:46:42,179
partition being able to prove who made

2480
01:46:39,510 --> 01:46:44,969
the partition that's the thing I care

2481
01:46:42,179 --> 01:46:46,380
about and I prefer to make finishing

2482
01:46:44,969 --> 01:46:48,030
impossible but since this doesn't make

2483
01:46:46,380 --> 01:46:48,770
purchasing impossible I'm not sure how

2484
01:46:48,030 --> 01:46:52,739
good it is

2485
01:46:48,770 --> 01:46:54,300
yeah fair enough I think one thing you

2486
01:46:52,739 --> 01:46:57,178
could get out of this sort of structure

2487
01:46:54,300 --> 01:47:00,330
is you could force a partition if

2488
01:46:57,179 --> 01:47:02,880
there's inconsistency by encrypting some

2489
01:47:00,330 --> 01:47:05,340
new entropy to the non question mark

2490
01:47:02,880 --> 01:47:07,380
nodes right right I guess I guess what

2491
01:47:05,340 --> 01:47:10,050
I'd like to be able to do I mean like

2492
01:47:07,380 --> 01:47:11,489
let's just talk about like like the

2493
01:47:10,050 --> 01:47:13,800
outcome we will hunt forget ingrained

2494
01:47:11,489 --> 01:47:15,239
technology for a second right um

2495
01:47:13,800 --> 01:47:17,070
the best case scenario it would not be

2496
01:47:15,239 --> 01:47:19,650
possible to end as a partition maybe we

2497
01:47:17,070 --> 01:47:22,530
don't have a second base case scenario

2498
01:47:19,650 --> 01:47:25,589
it would pass it the situation I want is

2499
01:47:22,530 --> 01:47:26,849
is that when I detect there's a

2500
01:47:25,590 --> 01:47:28,409
partition I'm able to determine who

2501
01:47:26,849 --> 01:47:31,679
created the partition report them that

2502
01:47:28,409 --> 01:47:32,699
haven't thrown about a grip on so that's

2503
01:47:31,679 --> 01:47:35,670
what I think what I'm actually looking

2504
01:47:32,699 --> 01:47:37,888
for and I need it so in that case I need

2505
01:47:35,670 --> 01:47:40,770
to be able to like what do I need I need

2506
01:47:37,889 --> 01:47:43,440
how can be a proof that is at least

2507
01:47:40,770 --> 01:47:45,329
visible to at least visible other group

2508
01:47:43,440 --> 01:47:48,659
members properly visible to the group

2509
01:47:45,329 --> 01:47:49,949
maintainer that they're treating visible

2510
01:47:48,659 --> 01:47:51,030
to which group members the group members

2511
01:47:49,949 --> 01:47:52,409
that you don't know who they are because

2512
01:47:51,030 --> 01:47:57,599
you've been lied to about their

2513
01:47:52,409 --> 01:48:01,110
identities in some sense you can never

2514
01:47:57,599 --> 01:48:02,969
the the new added participant who could

2515
01:48:01,110 --> 01:48:05,070
never receive any messages from anywhere

2516
01:48:02,969 --> 01:48:06,210
and you anybody else writes and in that

2517
01:48:05,070 --> 01:48:09,869
case your screen right because this is

2518
01:48:06,210 --> 01:48:11,849
the ad case right um so yeah but then

2519
01:48:09,869 --> 01:48:18,389
well then I need to prove to the groom

2520
01:48:11,849 --> 01:48:20,520
in here the server so like I think

2521
01:48:18,389 --> 01:48:23,880
that's I mean I just understand like a

2522
01:48:20,520 --> 01:48:24,809
situation where I have like like this

2523
01:48:23,880 --> 01:48:26,280
just seems like a situation where it's

2524
01:48:24,809 --> 01:48:29,400
going to be a sort of like really hard

2525
01:48:26,280 --> 01:48:30,960
as a as a as a system operator like

2526
01:48:29,400 --> 01:48:31,888
dealing with a problem like half the

2527
01:48:30,960 --> 01:48:33,270
people gonna be the message in half

2528
01:48:31,889 --> 01:48:35,760
can't it's gonna be like incredibly hard

2529
01:48:33,270 --> 01:48:37,860
to manage yeah and so I what I want to

2530
01:48:35,760 --> 01:48:39,900
do is close that rule iteration as fast

2531
01:48:37,860 --> 01:48:42,480
as I can so you're saying like what

2532
01:48:39,900 --> 01:48:44,610
might be more effective for example is a

2533
01:48:42,480 --> 01:48:46,289
mechanism where you could take some

2534
01:48:44,610 --> 01:48:48,030
description of the state of the group

2535
01:48:46,289 --> 01:48:50,000
that I got as a new joiner yes and

2536
01:48:48,030 --> 01:48:52,259
bounce that against some other

2537
01:48:50,000 --> 01:48:54,869
independent source of truth to say does

2538
01:48:52,260 --> 01:48:58,079
this mean I understand the way the way

2539
01:48:54,869 --> 01:49:00,480
the system behaves I mean it's like says

2540
01:48:58,079 --> 01:49:01,860
I mean no like the way the system

2541
01:49:00,480 --> 01:49:03,329
behaves it's like I'm sending messages

2542
01:49:01,860 --> 01:49:06,808
out I'm like no one came to Crystal

2543
01:49:03,329 --> 01:49:09,389
right right well yeah except for the

2544
01:49:06,809 --> 01:49:11,340
other day I don't care about him right

2545
01:49:09,389 --> 01:49:12,599
you think you're sending people on

2546
01:49:11,340 --> 01:49:14,699
you're only sending to that right where

2547
01:49:12,599 --> 01:49:17,400
you're sending to and so well it was

2548
01:49:14,699 --> 01:49:20,070
tight that state and detect that state

2549
01:49:17,400 --> 01:49:25,679
and then correct it by basically getting

2550
01:49:20,070 --> 01:49:28,889
a new new ad right so so what I can

2551
01:49:25,679 --> 01:49:33,809
foresee is that when you had added to a

2552
01:49:28,889 --> 01:49:36,180
group we could know that that's I don't

2553
01:49:33,809 --> 01:49:39,810
know people uniform ethos

2554
01:49:36,180 --> 01:49:40,980
an update to to to you because in some

2555
01:49:39,810 --> 01:49:42,390
sense when you receive an update it

2556
01:49:40,980 --> 01:49:45,120
means that you are the same pubic tree

2557
01:49:42,390 --> 01:49:47,550
as the as the person that sends you so

2558
01:49:45,120 --> 01:49:50,099
as soon as you are like a certain amount

2559
01:49:47,550 --> 01:49:54,780
of confirmation especially if if you if

2560
01:49:50,100 --> 01:49:56,130
you if be added C and D updates it knows

2561
01:49:54,780 --> 01:50:00,269
that D has the same view as it does

2562
01:49:56,130 --> 01:50:01,620
right of the entire tree I'm not asking

2563
01:50:00,270 --> 01:50:04,170
this office problem now I'm just saying

2564
01:50:01,620 --> 01:50:07,070
like I think that's what I want yeah I

2565
01:50:04,170 --> 01:50:07,070
think that that uh

2566
01:50:08,660 --> 01:50:16,710
dkg so I'm not exactly sure what these

2567
01:50:13,620 --> 01:50:19,530
dotted line signatures concretely

2568
01:50:16,710 --> 01:50:21,270
describe what is signed for example but

2569
01:50:19,530 --> 01:50:25,080
whenever I see signatures thrown in as a

2570
01:50:21,270 --> 01:50:28,230
answer to solve this problem I worry

2571
01:50:25,080 --> 01:50:31,680
that I worry about transplanted

2572
01:50:28,230 --> 01:50:33,299
signatures yeah that is like imagine

2573
01:50:31,680 --> 01:50:35,010
that you've got two group conversations

2574
01:50:33,300 --> 01:50:37,500
going on and I didn't want to graph this

2575
01:50:35,010 --> 01:50:39,390
one sub tree and over here so like the

2576
01:50:37,500 --> 01:50:43,980
proposal from Catholic so this is

2577
01:50:39,390 --> 01:50:47,010
Catholics proposal is that in the formal

2578
01:50:43,980 --> 01:50:49,500
model we have we keep track of the actor

2579
01:50:47,010 --> 01:50:53,250
of each action in within the tree so

2580
01:50:49,500 --> 01:50:58,320
when a o dates for each node we mark

2581
01:50:53,250 --> 01:51:01,710
that a updated the tree and the we have

2582
01:50:58,320 --> 01:51:03,480
a pubic ash which is we have the pubic

2583
01:51:01,710 --> 01:51:04,890
ash of the subtree that gives you that

2584
01:51:03,480 --> 01:51:06,959
here is the new state of the sub tree

2585
01:51:04,890 --> 01:51:10,410
here is the actor that actually made the

2586
01:51:06,960 --> 01:51:14,850
change and you can sign the entire thing

2587
01:51:10,410 --> 01:51:17,730
which gives you that I did a

2588
01:51:14,850 --> 01:51:20,370
modification here is the state of the

2589
01:51:17,730 --> 01:51:23,250
sub tree that I modified and know you

2590
01:51:20,370 --> 01:51:25,590
know that it is this tree and in some

2591
01:51:23,250 --> 01:51:27,420
sense if that's only what it gives you

2592
01:51:25,590 --> 01:51:29,640
right because there is no consistency or

2593
01:51:27,420 --> 01:51:34,980
secrets at all in that story because you

2594
01:51:29,640 --> 01:51:38,070
cannot you cannot enforce the fact that

2595
01:51:34,980 --> 01:51:39,629
you have the same secrets you don't have

2596
01:51:38,070 --> 01:51:42,269
knowledge of the other secret so you can

2597
01:51:39,630 --> 01:51:44,730
never say anything about the private

2598
01:51:42,270 --> 01:51:46,230
part of the tree but the pubic one you

2599
01:51:44,730 --> 01:51:48,059
can always say oh yeah here is the

2600
01:51:46,230 --> 01:51:50,070
current state that's oh I left it and

2601
01:51:48,060 --> 01:51:52,139
now if an attackers gives you

2602
01:51:50,070 --> 01:51:53,250
the current state which is not the same

2603
01:51:52,139 --> 01:51:57,290
as mine

2604
01:51:53,250 --> 01:52:02,429
as soon as I updates you will know that

2605
01:51:57,290 --> 01:52:05,040
that this is different and they are not

2606
01:52:02,429 --> 01:52:07,920
having the ability of forging my

2607
01:52:05,040 --> 01:52:10,440
signature can actually you cannot do

2608
01:52:07,920 --> 01:52:11,820
anything right so my concern is not

2609
01:52:10,440 --> 01:52:14,759
about forging yeah

2610
01:52:11,820 --> 01:52:16,799
my concern is about replay I'm involved

2611
01:52:14,760 --> 01:52:20,130
in I'm involved three conversations with

2612
01:52:16,800 --> 01:52:23,070
reviews and Nick and Shawn so the DEA

2613
01:52:20,130 --> 01:52:25,800
and then and I take a subtree from Nick

2614
01:52:23,070 --> 01:52:27,119
and Shawn and I just invite you to a new

2615
01:52:25,800 --> 01:52:28,679
conversation I say hey this is with Nick

2616
01:52:27,119 --> 01:52:30,750
and Shawn and I tell you look here's a

2617
01:52:28,679 --> 01:52:33,780
sign thing and it was signed by Nick I

2618
01:52:30,750 --> 01:52:37,110
mean so we have an ID for each group

2619
01:52:33,780 --> 01:52:38,460
let's assume for the moment like

2620
01:52:37,110 --> 01:52:40,409
including that oh yeah it seems like

2621
01:52:38,460 --> 01:52:45,659
this would fix this right so basically

2622
01:52:40,409 --> 01:52:47,129
all that stuff gets mixed actually the

2623
01:52:45,659 --> 01:52:49,500
entire subtree of the people you talk to

2624
01:52:47,130 --> 01:52:51,000
are is is mixed in the kiddie relation

2625
01:52:49,500 --> 01:52:52,679
so you would not be able to generate a

2626
01:52:51,000 --> 01:52:56,699
new a fudge cope with different people

2627
01:52:52,679 --> 01:52:58,409
and get the same copy notifier on some

2628
01:52:56,699 --> 01:53:00,719
keys so they would immediately know that

2629
01:52:58,409 --> 01:53:03,179
section in the same group and they would

2630
01:53:00,719 --> 01:53:05,159
immediately immediately know because you

2631
01:53:03,179 --> 01:53:07,770
have to give the public keys of the

2632
01:53:05,159 --> 01:53:09,629
people that are in the new group to get

2633
01:53:07,770 --> 01:53:11,489
that secret you immediately know that

2634
01:53:09,630 --> 01:53:14,820
here is the list at all times you

2635
01:53:11,489 --> 01:53:18,059
basically know the list of people that

2636
01:53:14,820 --> 01:53:19,590
are in the tree as a as a reminder of

2637
01:53:18,060 --> 01:53:21,030
their 7 minutes left in the session yeah

2638
01:53:19,590 --> 01:53:24,179
so that's why I'm going so fast sorry

2639
01:53:21,030 --> 01:53:25,619
yeah I was gonna try and I think ecers

2640
01:53:24,179 --> 01:53:27,150
argument I think is pretty convincing to

2641
01:53:25,619 --> 01:53:29,159
me that this is not really a useful

2642
01:53:27,150 --> 01:53:31,559
approach here that we would do better by

2643
01:53:29,159 --> 01:53:33,929
doing a kind of state confirmation

2644
01:53:31,560 --> 01:53:37,020
approach this this thing presumes that

2645
01:53:33,929 --> 01:53:39,060
you are accepting the adder as your sole

2646
01:53:37,020 --> 01:53:42,030
source of juice I think ecers approach

2647
01:53:39,060 --> 01:53:44,310
is probably a little bit more practical

2648
01:53:42,030 --> 01:53:45,480
in the sense of taking some statement of

2649
01:53:44,310 --> 01:53:48,060
the state of the group which we already

2650
01:53:45,480 --> 01:53:50,369
have several you know taking or you know

2651
01:53:48,060 --> 01:53:51,780
I think Brenna suggested a few more like

2652
01:53:50,369 --> 01:53:53,098
taking that neither confirming it with

2653
01:53:51,780 --> 01:53:54,869
another member of the group or with some

2654
01:53:53,099 --> 01:53:56,369
third party source I think that that is

2655
01:53:54,869 --> 01:53:58,440
maybe a bit better approach than the

2656
01:53:56,369 --> 01:54:00,929
signature based absolutely find it

2657
01:53:58,440 --> 01:54:03,989
completely fine within something else I

2658
01:54:00,929 --> 01:54:06,180
think this is like 80 ways in some sense

2659
01:54:03,989 --> 01:54:09,660
yeah and if we if we can have like a few

2660
01:54:06,180 --> 01:54:10,920
few non adversarial members of the tree

2661
01:54:09,660 --> 01:54:13,050
to confirm the current state it's fine

2662
01:54:10,920 --> 01:54:14,640
it's enough actually the the question is

2663
01:54:13,050 --> 01:54:16,680
how many members do you need to be able

2664
01:54:14,640 --> 01:54:19,770
to get this pubic tree to agree on this

2665
01:54:16,680 --> 01:54:21,090
baby tree because I mean in the setting

2666
01:54:19,770 --> 01:54:23,130
where you don't care about address are

2667
01:54:21,090 --> 01:54:28,410
your numbers at all you don't care but

2668
01:54:23,130 --> 01:54:30,090
in that scenario you the group might be

2669
01:54:28,410 --> 01:54:33,300
small and the attacker might collude

2670
01:54:30,090 --> 01:54:34,950
with other keys and other party within

2671
01:54:33,300 --> 01:54:36,540
the group and as soon as you have

2672
01:54:34,950 --> 01:54:40,679
adversarial partisan group anyway it

2673
01:54:36,540 --> 01:54:42,900
gets messy so those alternative would be

2674
01:54:40,680 --> 01:54:45,090
fine I think to just as explicitly the

2675
01:54:42,900 --> 01:54:46,799
other people in the tree to acknowledge

2676
01:54:45,090 --> 01:54:49,170
the fact that the pre victory that you

2677
01:54:46,800 --> 01:55:10,950
received as a new member is the the one

2678
01:54:49,170 --> 01:55:14,550
that they have as well okay so the last

2679
01:55:10,950 --> 01:55:17,610
the next piece on the agenda is interim

2680
01:55:14,550 --> 01:55:19,950
planning and so we are going to be

2681
01:55:17,610 --> 01:55:22,400
putting together a doodle poll and

2682
01:55:19,950 --> 01:55:26,519
sharing it on the list

2683
01:55:22,400 --> 01:55:29,580
our current current idea is sometime in

2684
01:55:26,520 --> 01:55:33,900
September in London which is a nexus of

2685
01:55:29,580 --> 01:55:38,519
several of the developers this would be

2686
01:55:33,900 --> 01:55:40,559
a one day interim the last interim we

2687
01:55:38,520 --> 01:55:42,980
had was was very productive and having a

2688
01:55:40,560 --> 01:55:45,480
small group in a room really iterate on

2689
01:55:42,980 --> 01:55:50,519
some of these problems with what was

2690
01:55:45,480 --> 01:55:53,968
helpful and so keep your eyes open on

2691
01:55:50,520 --> 01:55:56,400
the list and we will try to facilitate a

2692
01:55:53,969 --> 01:55:59,550
time that as many people as possible can

2693
01:55:56,400 --> 01:56:04,769
read can can come together do we sing

2694
01:55:59,550 --> 01:56:06,300
that one days is enough or and it gets

2695
01:56:04,770 --> 01:56:08,219
so productive in that you know in those

2696
01:56:06,300 --> 01:56:15,150
days that actually one day and a half or

2697
01:56:08,219 --> 01:56:16,850
two days might actually be I mean I

2698
01:56:15,150 --> 01:56:19,730
don't

2699
01:56:16,850 --> 01:56:21,500
samo me that so we will talk to the

2700
01:56:19,730 --> 01:56:25,099
working group in and whatever consensus

2701
01:56:21,500 --> 01:56:27,170
is around how much time we need I think

2702
01:56:25,100 --> 01:56:31,760
two days or one and a half is a

2703
01:56:27,170 --> 01:56:33,380
possibility but it really depends on how

2704
01:56:31,760 --> 01:56:36,080
many topics we have and whether or not

2705
01:56:33,380 --> 01:56:38,510
the the presenters share them with the

2706
01:56:36,080 --> 01:56:50,180
chairs as early as possible so that we

2707
01:56:38,510 --> 01:56:52,670
can help yeah we need a sense of what's

2708
01:56:50,180 --> 01:56:54,170
gonna what actually needs to to be

2709
01:56:52,670 --> 01:56:57,710
talked about and we do have quite a few

2710
01:56:54,170 --> 01:56:59,630
issues as well as the authors have been

2711
01:56:57,710 --> 01:57:02,600
doing a good job tracking milestones on

2712
01:56:59,630 --> 01:57:06,500
github so take a look at the open issues

2713
01:57:02,600 --> 01:57:09,440
and and we'll discuss whether or not one

2714
01:57:06,500 --> 01:57:10,910
or two days is that it's necessary can

2715
01:57:09,440 --> 01:57:12,559
we get that whole set out as soon as

2716
01:57:10,910 --> 01:57:14,269
possible just for those of us who have

2717
01:57:12,560 --> 01:57:16,760
to plan in advance and don't have a

2718
01:57:14,270 --> 01:57:18,740
two-week notification the thing yep we

2719
01:57:16,760 --> 01:57:22,700
will send out the poll either today or

2720
01:57:18,740 --> 01:57:24,440
early next week so to be right official

2721
01:57:22,700 --> 01:57:25,700
I have an official meeting where we're

2722
01:57:24,440 --> 01:57:27,980
gonna meet in person we have to give

2723
01:57:25,700 --> 01:57:29,179
four weeks notice so what I'm doing

2724
01:57:27,980 --> 01:57:30,320
right now is trying to see if the

2725
01:57:29,180 --> 01:57:31,640
authors can tell me when they're

2726
01:57:30,320 --> 01:57:32,990
available and we'll work from there

2727
01:57:31,640 --> 01:57:34,280
because it would be weird to have a

2728
01:57:32,990 --> 01:57:35,660
meeting where none of them could show up

2729
01:57:34,280 --> 01:57:36,860
so that's that's the triage on how we're

2730
01:57:35,660 --> 01:57:39,230
doing but we're definitely gonna get you

2731
01:57:36,860 --> 01:57:42,349
guys the info as soon as possible

2732
01:57:39,230 --> 01:57:45,490
Thanks and I believe that concludes the

2733
01:57:42,350 --> 01:57:45,490
meeting thank you very much

2734
01:57:57,120 --> 01:58:02,280
[Music]

2735
01:58:00,220 --> 01:58:02,280
you

