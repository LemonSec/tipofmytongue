1
00:00:23,330 --> 00:00:29,038
all right hello everyone welcome to the

2
00:00:26,279 --> 00:00:31,948
PRG privacy has been suspense research

3
00:00:29,039 --> 00:00:35,760
group my name is Chris Wood here with

4
00:00:31,949 --> 00:00:39,750
chiffon sahih Sarah is with us remotely

5
00:00:35,760 --> 00:00:42,780
and meet echo just quickly moving

6
00:00:39,750 --> 00:00:44,250
forward this is the note well you've

7
00:00:42,780 --> 00:00:46,650
probably seen this lots of times so far

8
00:00:44,250 --> 00:00:50,490
but if you haven't please take a moment

9
00:00:46,650 --> 00:00:53,550
to familiarize yourself with it or you

10
00:00:50,490 --> 00:00:54,540
can read it online Siobhan is passing

11
00:00:53,550 --> 00:00:57,989
around the blue sheets please make sure

12
00:00:54,540 --> 00:01:07,740
you sign them we have a jabber scribe

13
00:00:57,990 --> 00:01:12,499
correct yes so we have a JavaScript is

14
00:01:07,740 --> 00:01:12,499
someone willing to be a JavaScript

15
00:01:17,929 --> 00:01:25,520
do you want to do just jabber which one

16
00:01:23,700 --> 00:01:27,439
would you prefer

17
00:01:25,520 --> 00:01:31,289
okay let's do jabber

18
00:01:27,439 --> 00:01:37,139
and we also need a minute taker then any

19
00:01:31,289 --> 00:01:43,109
volunteers make eye contact with people

20
00:01:37,139 --> 00:01:47,699
I know until someone does their head Ben

21
00:01:43,109 --> 00:01:50,639
thank you so this is the agenda we have

22
00:01:47,700 --> 00:01:53,459
today we have eight minutes of sort of

23
00:01:50,639 --> 00:01:55,139
research he presentations to start and

24
00:01:53,459 --> 00:01:57,509
then followed up by some proposed

25
00:01:55,139 --> 00:02:01,139
individual drafts for the research group

26
00:01:57,509 --> 00:02:03,450
to close things out does anyone have any

27
00:02:01,139 --> 00:02:07,039
last minute comments revisions they

28
00:02:03,450 --> 00:02:07,039
would like to make before we get started

29
00:02:08,240 --> 00:02:16,390
doesn't look like it okay so on that

30
00:02:11,760 --> 00:02:18,730
note we will kick things off with Pete

31
00:02:16,390 --> 00:02:42,219
who will tell us about privacy standards

32
00:02:18,730 --> 00:02:58,380
and anti standards you might need to

33
00:02:42,220 --> 00:03:00,550
talk cause you didn't like okay take two

34
00:02:58,380 --> 00:03:01,989
so my name is Pete Snyder I come from

35
00:03:00,550 --> 00:03:04,330
brave software where I do privacy

36
00:03:01,989 --> 00:03:07,060
research I mussel co-chair of ping which

37
00:03:04,330 --> 00:03:08,950
is privacy group and w3c and so this is

38
00:03:07,060 --> 00:03:12,370
some lessons taken away from the

39
00:03:08,950 --> 00:03:13,450
intersection of those activities so just

40
00:03:12,370 --> 00:03:15,790
as a brief overview of what I'll be

41
00:03:13,450 --> 00:03:17,410
talking about first we'll talk about how

42
00:03:15,790 --> 00:03:18,820
standards impact the the privacy work

43
00:03:17,410 --> 00:03:22,600
that brave does is a privacy or anything

44
00:03:18,820 --> 00:03:24,100
vendor very briefly then I'll talk give

45
00:03:22,600 --> 00:03:26,200
a couple examples of anti Stan error

46
00:03:24,100 --> 00:03:27,430
anti patterns that we see reoccurring in

47
00:03:26,200 --> 00:03:29,619
standards and how that makes life

48
00:03:27,430 --> 00:03:31,660
difficult for people who want to do

49
00:03:29,620 --> 00:03:33,040
privacy protections on the web and then

50
00:03:31,660 --> 00:03:35,920
finally I'll give just some kind of

51
00:03:33,040 --> 00:03:38,320
listen of additional topics that are

52
00:03:35,920 --> 00:03:40,149
related that I would I think warrant

53
00:03:38,320 --> 00:03:44,350
further discussion but I there's not

54
00:03:40,150 --> 00:03:47,170
time for this talk so first how do

55
00:03:44,350 --> 00:03:50,440
standards employees or impact our work

56
00:03:47,170 --> 00:03:51,970
as a privacy oriented implementer so in

57
00:03:50,440 --> 00:03:53,410
order to protect privacy on the web for

58
00:03:51,970 --> 00:03:54,609
our users great makes a bunch of

59
00:03:53,410 --> 00:03:57,430
modifications to the browsing

60
00:03:54,610 --> 00:03:59,170
environment we block state storage in

61
00:03:57,430 --> 00:04:01,000
different places we integrate tor and a

62
00:03:59,170 --> 00:04:02,768
lot of people users use tor in the box

63
00:04:01,000 --> 00:04:04,120
we block a whole bunch of resources from

64
00:04:02,769 --> 00:04:05,680
being loaded the first place from a

65
00:04:04,120 --> 00:04:08,590
variety different places like easy list

66
00:04:05,680 --> 00:04:09,040
and in-house generated lists and things

67
00:04:08,590 --> 00:04:10,180
like that

68
00:04:09,040 --> 00:04:12,670
the most relevant to this conversation

69
00:04:10,180 --> 00:04:14,560
is we modified the browser environment

70
00:04:12,670 --> 00:04:16,450
and so we end up violating standards in

71
00:04:14,560 --> 00:04:18,070
a large number of places because

72
00:04:16,450 --> 00:04:21,820
implementing those standards correctly

73
00:04:18,070 --> 00:04:25,030
would harm our users privacy just to

74
00:04:21,820 --> 00:04:27,340
give kind of a very specific example

75
00:04:25,030 --> 00:04:28,599
here's a recent paper that came out that

76
00:04:27,340 --> 00:04:29,679
gives a an overview of a bunch of

77
00:04:28,599 --> 00:04:33,759
fingerprinting methods that are

78
00:04:29,680 --> 00:04:36,130
on the web the relevant irrelevant to

79
00:04:33,759 --> 00:04:37,660
this conversation is not only do they do

80
00:04:36,130 --> 00:04:39,340
a nice work nice job of surveying

81
00:04:37,660 --> 00:04:41,410
existing work on how people are actually

82
00:04:39,340 --> 00:04:43,419
doing think of fingerprinted online but

83
00:04:41,410 --> 00:04:46,240
they also give the impact of each of

84
00:04:43,419 --> 00:04:49,150
those fingerprinting methods and and

85
00:04:46,240 --> 00:04:51,880
kind of a benefit how much identifying

86
00:04:49,150 --> 00:04:53,679
power they give in so the one I want to

87
00:04:51,880 --> 00:04:55,539
talk about here is on the right arm

88
00:04:53,680 --> 00:04:57,100
on the right hand side audio context

89
00:04:55,539 --> 00:04:59,830
which is a way of identifying the user

90
00:04:57,100 --> 00:05:03,460
based on particular it's about how the

91
00:04:59,830 --> 00:05:04,810
browser will do audio synthesis it turns

92
00:05:03,460 --> 00:05:06,909
out if I won't go to the details but it

93
00:05:04,810 --> 00:05:08,470
turns out that different vendors and

94
00:05:06,910 --> 00:05:09,880
different pieces of hardware and things

95
00:05:08,470 --> 00:05:11,830
like this will do this very subtly

96
00:05:09,880 --> 00:05:13,750
differently or sometimes not so subtly

97
00:05:11,830 --> 00:05:16,060
and you can use this to build up a semi

98
00:05:13,750 --> 00:05:17,259
identifying piece of information about

99
00:05:16,060 --> 00:05:19,960
the user which can be combined with

100
00:05:17,259 --> 00:05:24,240
others to uniquely identify them and so

101
00:05:19,960 --> 00:05:26,979
brave modifies this and what we do is we

102
00:05:24,240 --> 00:05:28,630
we know a lotta bunch of things that the

103
00:05:26,979 --> 00:05:30,430
browser allows you to do by default

104
00:05:28,630 --> 00:05:31,840
these are things like asking querying

105
00:05:30,430 --> 00:05:34,900
the hardware for its capabilities or

106
00:05:31,840 --> 00:05:37,359
different low-level things and so what

107
00:05:34,900 --> 00:05:39,070
brave does is we just say no when it's a

108
00:05:37,360 --> 00:05:40,780
third party context we just say you

109
00:05:39,070 --> 00:05:43,659
can't do that unless you user Ops and

110
00:05:40,780 --> 00:05:45,489
explicitly says violates a standard but

111
00:05:43,659 --> 00:05:47,229
to do so otherwise with the harm art

112
00:05:45,490 --> 00:05:49,150
would allow our users privacy to be hard

113
00:05:47,229 --> 00:05:49,960
we do this in a whole bunch of other

114
00:05:49,150 --> 00:05:52,090
places as well

115
00:05:49,960 --> 00:05:54,510
this is it not even nearly a complete

116
00:05:52,090 --> 00:05:57,549
list but I mention these just as a

117
00:05:54,510 --> 00:06:00,820
partial enumeration of how extensive the

118
00:05:57,550 --> 00:06:02,380
problem is so how did we wind up in this

119
00:06:00,820 --> 00:06:05,370
situation or why is this problem so

120
00:06:02,380 --> 00:06:07,630
endemic across the browser platform I

121
00:06:05,370 --> 00:06:09,220
only have three different examples of

122
00:06:07,630 --> 00:06:10,900
these kind of anti patterns we see in

123
00:06:09,220 --> 00:06:13,060
standards that lead to this outcome this

124
00:06:10,900 --> 00:06:14,919
is not anywhere near an extensive list

125
00:06:13,060 --> 00:06:19,750
or a comprehensive list but I need it as

126
00:06:14,919 --> 00:06:21,159
motivation then demonstration so also I

127
00:06:19,750 --> 00:06:22,990
don't mean this to be simple this is not

128
00:06:21,159 --> 00:06:24,639
like a just do these three things and

129
00:06:22,990 --> 00:06:26,830
all of a sudden privacy comes easy but I

130
00:06:24,639 --> 00:06:30,250
mean them as a necessary but not

131
00:06:26,830 --> 00:06:31,930
sufficient list of problems so first is

132
00:06:30,250 --> 00:06:34,150
we see reoccurring over and over again

133
00:06:31,930 --> 00:06:35,889
that standards are extremely specific

134
00:06:34,150 --> 00:06:38,560
about the functionality that needs to be

135
00:06:35,889 --> 00:06:41,469
implemented but are extremely unspecific

136
00:06:38,560 --> 00:06:43,160
about how to how to mitigate the privacy

137
00:06:41,469 --> 00:06:48,620
harm that that's that functional

138
00:06:43,160 --> 00:06:51,020
the ads so for example many w3c

139
00:06:48,620 --> 00:06:52,700
documents have a privacy consideration

140
00:06:51,020 --> 00:06:54,109
section this these are things saying

141
00:06:52,700 --> 00:06:56,090
like implementers should be concerned

142
00:06:54,110 --> 00:06:59,960
about these privacy concerns that when

143
00:06:56,090 --> 00:07:01,669
they implement this but they are not

144
00:06:59,960 --> 00:07:05,419
normative they are not mandatory they

145
00:07:01,670 --> 00:07:06,830
are just a list of concerns but the rest

146
00:07:05,420 --> 00:07:08,780
of the document which is almost without

147
00:07:06,830 --> 00:07:10,130
fail much more much longer and much more

148
00:07:08,780 --> 00:07:11,510
specific so specifically the

149
00:07:10,130 --> 00:07:13,460
functionally that must be implemented

150
00:07:11,510 --> 00:07:15,230
and the result is that everybody agrees

151
00:07:13,460 --> 00:07:17,450
on everybody implements the harmful part

152
00:07:15,230 --> 00:07:18,950
and people are extremely unsure what to

153
00:07:17,450 --> 00:07:21,680
do about the non harm or about the

154
00:07:18,950 --> 00:07:24,950
mitigating part and as a result nobody

155
00:07:21,680 --> 00:07:26,480
can people vendors hands are tied when

156
00:07:24,950 --> 00:07:29,570
they want to try to do the mitigations

157
00:07:26,480 --> 00:07:33,320
because websites assume the standard the

158
00:07:29,570 --> 00:07:34,760
well-defined behavior so just as a

159
00:07:33,320 --> 00:07:37,070
motivating example this one you may be

160
00:07:34,760 --> 00:07:39,200
familiar with referred policies a is a

161
00:07:37,070 --> 00:07:40,700
standard that says under certain

162
00:07:39,200 --> 00:07:41,930
conditions notify the website that

163
00:07:40,700 --> 00:07:44,420
you're visiting now of where you just

164
00:07:41,930 --> 00:07:47,360
came from this has extremely specific

165
00:07:44,420 --> 00:07:49,790
very obvious privacy harm our privacy

166
00:07:47,360 --> 00:07:52,400
implications there's a very short piece

167
00:07:49,790 --> 00:07:55,970
of text saying we know that there's

168
00:07:52,400 --> 00:07:57,679
privacy problems here but in the

169
00:07:55,970 --> 00:08:00,260
mitigation section it just says vendors

170
00:07:57,680 --> 00:08:01,850
can do whatever they want there's no

171
00:08:00,260 --> 00:08:03,770
specific specificity it just says

172
00:08:01,850 --> 00:08:06,800
vendors may violate this at any time as

173
00:08:03,770 --> 00:08:09,440
a result many websites rely on this is

174
00:08:06,800 --> 00:08:10,790
very unusual to website operators and

175
00:08:09,440 --> 00:08:12,080
that's result many many websites just

176
00:08:10,790 --> 00:08:14,120
assume the refer policy will be

177
00:08:12,080 --> 00:08:16,280
standardized as it's described in the

178
00:08:14,120 --> 00:08:17,990
rest of the document and it now if you

179
00:08:16,280 --> 00:08:19,099
in if you're in brace position or

180
00:08:17,990 --> 00:08:20,720
somebody like Gray's position where you

181
00:08:19,100 --> 00:08:22,040
want to protect the users privacy and

182
00:08:20,720 --> 00:08:23,120
you remove the refer header or you do

183
00:08:22,040 --> 00:08:24,980
different things to try to make the

184
00:08:23,120 --> 00:08:30,980
referer header less privacy harming you

185
00:08:24,980 --> 00:08:32,780
break a whole bunch of websites this

186
00:08:30,980 --> 00:08:34,219
text seems explicitly permit user aliens

187
00:08:32,780 --> 00:08:36,289
to suppress the refer adder entirely

188
00:08:34,219 --> 00:08:39,260
what would you want it to say I would

189
00:08:36,289 --> 00:08:39,979
like it to smoke I have a long list of

190
00:08:39,260 --> 00:08:42,349
things we could probably talk about

191
00:08:39,979 --> 00:08:44,510
offline but to the first high order bit

192
00:08:42,349 --> 00:08:47,630
would be don't do this but if you had to

193
00:08:44,510 --> 00:08:49,819
do it I would say don't expect in third

194
00:08:47,630 --> 00:08:51,890
party context prefer a policy should up

195
00:08:49,820 --> 00:08:53,720
should only be sent on a referral to be

196
00:08:51,890 --> 00:08:54,230
sent on the user gesture things along

197
00:08:53,720 --> 00:08:55,800
these lines

198
00:08:54,230 --> 00:08:58,920
I think you

199
00:08:55,800 --> 00:09:00,269
okay well the last point is different

200
00:08:58,920 --> 00:09:02,069
but I think even if from the optimistic

201
00:09:00,269 --> 00:09:05,790
view of the true creator which are web

202
00:09:02,070 --> 00:09:09,029
authors we eat specifications um you

203
00:09:05,790 --> 00:09:11,160
just know what chrome does I think those

204
00:09:09,029 --> 00:09:12,810
are probably I'm sure you're right that

205
00:09:11,160 --> 00:09:15,120
web bodies do not read specifications

206
00:09:12,810 --> 00:09:16,969
I'm sure that web authors do read things

207
00:09:15,120 --> 00:09:20,130
that are distilled from specifications

208
00:09:16,970 --> 00:09:22,740
frequently perhaps my experience is they

209
00:09:20,130 --> 00:09:24,930
do what chrome does so so I think I

210
00:09:22,740 --> 00:09:28,019
guess my point is that your thesis seems

211
00:09:24,930 --> 00:09:30,239
to be that on it's flexible in the

212
00:09:28,019 --> 00:09:31,350
specification that creates the problem

213
00:09:30,240 --> 00:09:32,399
I'm not sure that's I'm not sure making

214
00:09:31,350 --> 00:09:34,709
very participation of that in the

215
00:09:32,399 --> 00:09:36,390
particular example I think that may

216
00:09:34,709 --> 00:09:38,939
distill down to a distinction without a

217
00:09:36,390 --> 00:09:40,170
difference in that by saying vendors can

218
00:09:38,940 --> 00:09:42,720
do anything everybody is following the

219
00:09:40,170 --> 00:09:45,540
specification and so chrome is following

220
00:09:42,720 --> 00:09:46,890
the specification and also doing what

221
00:09:45,540 --> 00:09:49,620
follows its lead the standard is no

222
00:09:46,890 --> 00:09:54,829
longer the guiding principle I mean we

223
00:09:49,620 --> 00:09:56,700
can take sounds good okay example two

224
00:09:54,829 --> 00:09:58,680
functionality that's useful only in a

225
00:09:56,700 --> 00:10:00,540
very very very small set of situations

226
00:09:58,680 --> 00:10:04,079
but is made universally available to all

227
00:10:00,540 --> 00:10:06,060
websites so problem here is you have

228
00:10:04,079 --> 00:10:06,989
something that's very useful to a very

229
00:10:06,060 --> 00:10:08,339
small number of people

230
00:10:06,990 --> 00:10:11,760
maybe that's doing things like audio

231
00:10:08,339 --> 00:10:12,930
synthesis but it's made without there's

232
00:10:11,760 --> 00:10:14,850
no there's no permission in place

233
00:10:12,930 --> 00:10:16,410
there's no gating the functionality you

234
00:10:14,850 --> 00:10:18,480
know anything like this it's all of a

235
00:10:16,410 --> 00:10:22,319
sudden it's not being used just for this

236
00:10:18,480 --> 00:10:23,160
very narrow use case it's being used for

237
00:10:22,320 --> 00:10:24,390
finger printing or it's at least

238
00:10:23,160 --> 00:10:26,339
available for fingerprinting it's

239
00:10:24,390 --> 00:10:28,140
available for these kind of privacy harm

240
00:10:26,339 --> 00:10:29,670
uses and so as a result becomes

241
00:10:28,140 --> 00:10:30,839
extremely difficult to pull this off the

242
00:10:29,670 --> 00:10:33,020
web without breaking all bunch of

243
00:10:30,839 --> 00:10:36,870
websites that expect it to be in place

244
00:10:33,020 --> 00:10:38,189
an example here canvas element allows

245
00:10:36,870 --> 00:10:41,010
you to not just write things to the

246
00:10:38,190 --> 00:10:42,720
campus but also pull things out the use

247
00:10:41,010 --> 00:10:44,040
case for this is not zero but it's

248
00:10:42,720 --> 00:10:46,620
obviously not the common case of when

249
00:10:44,040 --> 00:10:48,719
you're writing things to do a canvas and

250
00:10:46,620 --> 00:10:50,250
so what do we see we see not we see the

251
00:10:48,720 --> 00:10:52,410
common use case of this is on libraries

252
00:10:50,250 --> 00:10:53,459
like fingerprint js2 where if you dig

253
00:10:52,410 --> 00:10:55,260
into the code in the lower right hand

254
00:10:53,459 --> 00:10:57,410
corner you can see this being used to

255
00:10:55,260 --> 00:11:00,240
generate unique identifiers for users

256
00:10:57,410 --> 00:11:01,350
now if you pull out if you think you're

257
00:11:00,240 --> 00:11:02,699
somebody like brave or you're somebody

258
00:11:01,350 --> 00:11:04,140
who's doing privacy protections you

259
00:11:02,699 --> 00:11:05,550
think great we'll just pull out this

260
00:11:04,140 --> 00:11:07,470
functionality on all of us and you

261
00:11:05,550 --> 00:11:08,540
broken whole bunch of useful use cases

262
00:11:07,470 --> 00:11:10,160
as well where the

263
00:11:08,540 --> 00:11:13,250
the goal in the first place should be

264
00:11:10,160 --> 00:11:15,800
just to say figure out a way of getting

265
00:11:13,250 --> 00:11:18,410
permission to the sorry gaining access

266
00:11:15,800 --> 00:11:21,699
or restricting access to these kinds of

267
00:11:18,410 --> 00:11:24,560
positive use cases in the first place

268
00:11:21,700 --> 00:11:26,390
again how would you do that

269
00:11:24,560 --> 00:11:27,619
so again I have a long range of

270
00:11:26,390 --> 00:11:29,750
suggestions but the the first

271
00:11:27,620 --> 00:11:33,320
approximation is to say user gesture say

272
00:11:29,750 --> 00:11:35,050
permission to say some other way of the

273
00:11:33,320 --> 00:11:40,880
user signaling I'd like to do a thing

274
00:11:35,050 --> 00:11:42,800
I'd like to have you back canvas likely

275
00:11:40,880 --> 00:11:44,480
if so reading back cameras in and of

276
00:11:42,800 --> 00:11:45,709
itself is often not useful you need to

277
00:11:44,480 --> 00:11:47,390
do something with that value for it to

278
00:11:45,710 --> 00:11:50,240
be useful save it to disk stay with the

279
00:11:47,390 --> 00:11:51,890
storage that and so those are things

280
00:11:50,240 --> 00:11:53,420
that other browsers already gate behind

281
00:11:51,890 --> 00:11:56,300
these sorts of things storage access API

282
00:11:53,420 --> 00:11:58,010
brave does etc and so these things get

283
00:11:56,300 --> 00:12:01,270
paired together I'll it may be natural

284
00:11:58,010 --> 00:12:05,150
to pair them in that way explicitly yeah

285
00:12:01,270 --> 00:12:06,620
i'm i think probably seen you in a place

286
00:12:05,150 --> 00:12:08,630
where we're gonna put costly popular

287
00:12:06,620 --> 00:12:13,640
user for like all sorts of things they

288
00:12:08,630 --> 00:12:15,170
can't possibly give permission promises

289
00:12:13,640 --> 00:12:16,280
is one of these things user gesture is

290
00:12:15,170 --> 00:12:17,630
not a permission prompt to third-party

291
00:12:16,280 --> 00:12:22,160
frame it's not the permission prompt

292
00:12:17,630 --> 00:12:24,200
thinks about sure but not everything

293
00:12:22,160 --> 00:12:25,819
since we got you just lots of things

294
00:12:24,200 --> 00:12:26,870
like pretty good for him his

295
00:12:25,820 --> 00:12:29,600
fingerprinting there plenty of ways to

296
00:12:26,870 --> 00:12:31,130
forced user pre huge gesture right that

297
00:12:29,600 --> 00:12:33,230
is it is not possible to trick the easy

298
00:12:31,130 --> 00:12:34,250
to do many things but but require me to

299
00:12:33,230 --> 00:12:42,050
do something would take it out of the

300
00:12:34,250 --> 00:12:43,520
common path for sure so these are these

301
00:12:42,050 --> 00:12:45,620
are additional lists of things that it's

302
00:12:43,520 --> 00:12:47,270
extremely hard to think of why that

303
00:12:45,620 --> 00:12:49,070
every single website needs son gated

304
00:12:47,270 --> 00:12:50,810
access to them these are all things that

305
00:12:49,070 --> 00:12:52,430
are used in fingerprinting techniques

306
00:12:50,810 --> 00:12:55,760
and i would suggest we should do

307
00:12:52,430 --> 00:12:56,839
something somewhere here so what's the

308
00:12:55,760 --> 00:12:58,250
what's the lesson to take away from the

309
00:12:56,840 --> 00:13:00,530
second pattern

310
00:12:58,250 --> 00:13:01,970
assume they people will use your

311
00:13:00,530 --> 00:13:04,400
functionality if you allow them to use

312
00:13:01,970 --> 00:13:06,170
it across the board if you think there's

313
00:13:04,400 --> 00:13:07,579
a the only a small subset of use cases

314
00:13:06,170 --> 00:13:09,110
or places where your functional is

315
00:13:07,580 --> 00:13:12,440
actually you needed figure out ways of

316
00:13:09,110 --> 00:13:15,320
getting or restricting accordingly third

317
00:13:12,440 --> 00:13:16,430
and final is what we see over and over

318
00:13:15,320 --> 00:13:18,170
and over again in standards

319
00:13:16,430 --> 00:13:19,370
conversations which is websites can

320
00:13:18,170 --> 00:13:20,930
already do bad things what is the

321
00:13:19,370 --> 00:13:22,250
marginal harm of allowing them to do an

322
00:13:20,930 --> 00:13:27,649
additional bad thing

323
00:13:22,250 --> 00:13:29,209
I think this is unhelpful so for example

324
00:13:27,649 --> 00:13:30,379
if something that the standard is

325
00:13:29,209 --> 00:13:32,329
proposing a new way of allowing web

326
00:13:30,379 --> 00:13:33,740
service to do community or applications

327
00:13:32,329 --> 00:13:35,779
to be communications to remote servers

328
00:13:33,740 --> 00:13:36,889
the common refrain is you can already go

329
00:13:35,779 --> 00:13:37,819
with an image tag what's the harm of

330
00:13:36,889 --> 00:13:42,050
allowing them to do it in a different

331
00:13:37,819 --> 00:13:44,719
way this is a way of expanding your

332
00:13:42,050 --> 00:13:46,490
horizontal privacy that indefinitely and

333
00:13:44,720 --> 00:13:49,310
making it impossible to stop to fix the

334
00:13:46,490 --> 00:13:51,829
problem after the fact an example here

335
00:13:49,310 --> 00:13:55,579
is client hints which is both both has

336
00:13:51,829 --> 00:13:56,779
aspects in the w3c and IETF the relevant

337
00:13:55,579 --> 00:13:57,888
part here is I won't walk through this

338
00:13:56,779 --> 00:14:01,100
because I assume people are familiar

339
00:13:57,889 --> 00:14:03,350
with since it lives here but there's a

340
00:14:01,100 --> 00:14:05,750
large number of there's a large amount

341
00:14:03,350 --> 00:14:07,490
of papers being written and research

342
00:14:05,750 --> 00:14:08,870
that exists showing that the exact kinds

343
00:14:07,490 --> 00:14:11,060
of values that can be requested through

344
00:14:08,870 --> 00:14:15,519
client hints can nearly identify a

345
00:14:11,060 --> 00:14:18,979
non-trivial number of users as a result

346
00:14:15,519 --> 00:14:20,689
the response is often well you can

347
00:14:18,980 --> 00:14:21,589
already identify users anyway what's the

348
00:14:20,689 --> 00:14:24,529
harm of already doing this

349
00:14:21,589 --> 00:14:26,660
cookies exist don't they etc etc I think

350
00:14:24,529 --> 00:14:28,490
this is the way of just doubling down on

351
00:14:26,660 --> 00:14:30,889
the problem to put put it differently

352
00:14:28,490 --> 00:14:31,790
when you're digging and stop digging or

353
00:14:30,889 --> 00:14:34,610
when you're in a hole stop digging

354
00:14:31,790 --> 00:14:35,509
figure out freeze the problem start

355
00:14:34,610 --> 00:14:38,060
thinking our ways to mitigate the

356
00:14:35,509 --> 00:14:40,670
problem as is and don't and don't

357
00:14:38,060 --> 00:14:43,459
entrench the problem indefinitely again

358
00:14:40,670 --> 00:14:47,380
I can I'm happy to say more specifics if

359
00:14:43,459 --> 00:14:47,380
this is a topic of Congress of interest

360
00:14:48,430 --> 00:14:52,699
ok one last thing I wanted is just to

361
00:14:51,019 --> 00:14:54,050
say it's just kind of bullet point of a

362
00:14:52,699 --> 00:14:55,609
number of different things that I think

363
00:14:54,050 --> 00:14:57,469
would weren't for the conversation but

364
00:14:55,610 --> 00:15:00,410
are too much to go through in detail

365
00:14:57,470 --> 00:15:02,060
here one thing that we see over and over

366
00:15:00,410 --> 00:15:03,920
again is is a way of kind of pitching

367
00:15:02,060 --> 00:15:05,119
the problem forward to say we know this

368
00:15:03,920 --> 00:15:06,860
part of this this new standard

369
00:15:05,120 --> 00:15:08,089
introduces a privacy harm but we're

370
00:15:06,860 --> 00:15:09,439
working on the standard that's coming

371
00:15:08,089 --> 00:15:11,360
down at the pipeline in the future that

372
00:15:09,439 --> 00:15:14,029
will fix that problem I think this is

373
00:15:11,360 --> 00:15:16,040
extremely harmful not only does it type

374
00:15:14,029 --> 00:15:17,569
the future authors hands and what now

375
00:15:16,040 --> 00:15:19,550
they have to do to address the current

376
00:15:17,569 --> 00:15:21,349
problem being introduced but it gives

377
00:15:19,550 --> 00:15:23,180
you know it makes it extremely difficult

378
00:15:21,350 --> 00:15:24,379
to evaluate the privacy harm by the

379
00:15:23,180 --> 00:15:26,899
standard you're considering right now

380
00:15:24,379 --> 00:15:28,730
which is to say something may change in

381
00:15:26,899 --> 00:15:29,959
the future that is not a basis to judge

382
00:15:28,730 --> 00:15:34,250
something that's gonna be introduced

383
00:15:29,959 --> 00:15:35,268
today second point I think is worth

384
00:15:34,250 --> 00:15:36,020
keeping in mind when evaluating

385
00:15:35,269 --> 00:15:39,050
standards is that

386
00:15:36,020 --> 00:15:40,670
the idea of formalizing bad practice has

387
00:15:39,050 --> 00:15:42,500
at least some some appeal in that you

388
00:15:40,670 --> 00:15:44,089
can say well if we can get all the bad

389
00:15:42,500 --> 00:15:46,580
uses to use this new API instead of the

390
00:15:44,089 --> 00:15:48,050
old API then we can reason about that

391
00:15:46,580 --> 00:15:49,610
new API use in some semantically

392
00:15:48,050 --> 00:15:51,109
valuable way I think this is not useful

393
00:15:49,610 --> 00:15:53,089
because what ends up happening is that

394
00:15:51,110 --> 00:15:55,370
actors use both api's instead of just a

395
00:15:53,089 --> 00:15:57,470
new one and the last is this kind of

396
00:15:55,370 --> 00:15:59,360
what I think is this kind of like judo

397
00:15:57,470 --> 00:16:02,390
move where people say well site authors

398
00:15:59,360 --> 00:16:03,950
use this people like sites and so users

399
00:16:02,390 --> 00:16:08,600
indirectly wanna you want this to exist

400
00:16:03,950 --> 00:16:10,430
I think this is totally not helpful it

401
00:16:08,600 --> 00:16:12,110
is important to consider the site site

402
00:16:10,430 --> 00:16:13,670
authors needs the first and foremost is

403
00:16:12,110 --> 00:16:15,740
the person using operating the software

404
00:16:13,670 --> 00:16:17,719
and to recognize those interest at verge

405
00:16:15,740 --> 00:16:21,350
frequently and to consider the harm to

406
00:16:17,720 --> 00:16:25,339
the user not to nebulously users in

407
00:16:21,350 --> 00:16:26,870
general so some last takeaway some last

408
00:16:25,339 --> 00:16:28,339
things I hope to keep in your mind is

409
00:16:26,870 --> 00:16:29,230
that the amount of standards getting

410
00:16:28,339 --> 00:16:32,149
pushed through is

411
00:16:29,230 --> 00:16:34,700
just extremely difficult to be able to

412
00:16:32,149 --> 00:16:36,200
reason about privacy wise and so to a

413
00:16:34,700 --> 00:16:38,120
first approximation the best thing we

414
00:16:36,200 --> 00:16:41,240
can do for privacy is just just slow the

415
00:16:38,120 --> 00:16:43,250
roll a little bit and to give things a

416
00:16:41,240 --> 00:16:45,820
little bit time to percolate into to

417
00:16:43,250 --> 00:16:47,930
percolate through the review processes

418
00:16:45,820 --> 00:16:51,020
second think about complexity in term of

419
00:16:47,930 --> 00:16:52,760
itself as a privacy harm it's not adding

420
00:16:51,020 --> 00:16:55,220
anything new to the platform brings some

421
00:16:52,760 --> 00:16:56,839
risk and also brings some reward but to

422
00:16:55,220 --> 00:16:58,310
not think of it as there's no privacy

423
00:16:56,839 --> 00:17:01,040
harm that I've identified it so it's

424
00:16:58,310 --> 00:17:02,420
fine to add it is not the right criteria

425
00:17:01,040 --> 00:17:05,089
to consider when you're thinking about

426
00:17:02,420 --> 00:17:08,178
improving privacy on the platform and

427
00:17:05,089 --> 00:17:09,589
then third is I think a totally under

428
00:17:08,179 --> 00:17:11,630
considered risk is that standards work

429
00:17:09,589 --> 00:17:13,250
largely now or a non-trivial amount of

430
00:17:11,630 --> 00:17:14,990
standards work is standardizing things

431
00:17:13,250 --> 00:17:16,520
that are already shipped and at that

432
00:17:14,990 --> 00:17:17,780
point it's nearly impossible to pull

433
00:17:16,520 --> 00:17:19,429
them back in and so figuring out some

434
00:17:17,780 --> 00:17:20,720
way to reason about things before they

435
00:17:19,429 --> 00:17:23,780
get off the door or at least earlier in

436
00:17:20,720 --> 00:17:28,189
that process it's probably a place worth

437
00:17:23,780 --> 00:17:29,540
digging into okay so I'm happy to

438
00:17:28,189 --> 00:17:31,340
discuss some things more about it but I

439
00:17:29,540 --> 00:17:32,480
just want to say thank you very much for

440
00:17:31,340 --> 00:17:35,178
your time I'm Pete Snyder I'm the

441
00:17:32,480 --> 00:17:36,530
privacy researcher at brave I'm here to

442
00:17:35,179 --> 00:17:42,520
try to help do better and privacy has

443
00:17:36,530 --> 00:17:42,520
standards Thanks are there any questions

444
00:17:49,160 --> 00:17:54,330
so I have one you mentioned many

445
00:17:52,380 --> 00:17:55,980
examples in which standards could

446
00:17:54,330 --> 00:17:57,629
potentially be improved or specification

447
00:17:55,980 --> 00:18:00,510
secured least be potentially improved to

448
00:17:57,630 --> 00:18:02,100
help you know perhaps benefit the

449
00:18:00,510 --> 00:18:03,720
privacy of those implementing them or

450
00:18:02,100 --> 00:18:06,689
those users that are using the things

451
00:18:03,720 --> 00:18:09,810
that are implemented is there any like

452
00:18:06,690 --> 00:18:13,340
what sort of concrete or tangible steps

453
00:18:09,810 --> 00:18:18,330
can either the IRT app or the IETF take

454
00:18:13,340 --> 00:18:21,659
to move in that direction if you can

455
00:18:18,330 --> 00:18:25,919
offer some advice or I guess sure next

456
00:18:21,660 --> 00:18:27,210
steps so I think there's a in w3c we

457
00:18:25,920 --> 00:18:28,920
have the idea of hearth horizontal

458
00:18:27,210 --> 00:18:30,780
review boards or horizontal review

459
00:18:28,920 --> 00:18:32,760
groups that at different iterations in

460
00:18:30,780 --> 00:18:36,420
the standards lifetime from conception

461
00:18:32,760 --> 00:18:37,680
to recommendation groups like paying the

462
00:18:36,420 --> 00:18:40,380
privacy group at other groups like

463
00:18:37,680 --> 00:18:42,900
accessibility are expected or at least

464
00:18:40,380 --> 00:18:44,640
have the option of giving input at that

465
00:18:42,900 --> 00:18:46,590
point I think for maizing that process

466
00:18:44,640 --> 00:18:49,380
stronger would be an extremely useful

467
00:18:46,590 --> 00:18:51,060
way of allowing interested in concerned

468
00:18:49,380 --> 00:18:53,390
actors to get involved earlier in the

469
00:18:51,060 --> 00:18:53,389
process

470
00:18:53,840 --> 00:19:00,959
Stephen most of the examples that you

471
00:18:59,370 --> 00:19:03,830
mentioned we have taken from the world

472
00:19:00,960 --> 00:19:07,200
of w3c which I'm not familiar with

473
00:19:03,830 --> 00:19:11,159
beside the client ins do you have ideas

474
00:19:07,200 --> 00:19:13,950
of photo codes IETF protocols with the

475
00:19:11,160 --> 00:19:16,010
same sort of problem because in theory

476
00:19:13,950 --> 00:19:18,900
in the IETF people should avoid security

477
00:19:16,010 --> 00:19:24,270
considerations including privacy we have

478
00:19:18,900 --> 00:19:26,190
FCC 9:23 so in theory problem should not

479
00:19:24,270 --> 00:19:30,330
happen in the IETF but of course they do

480
00:19:26,190 --> 00:19:34,830
so do you have specific examples in mind

481
00:19:30,330 --> 00:19:36,629
from your experience with so I don't

482
00:19:34,830 --> 00:19:38,040
have any examples from the ITF world

483
00:19:36,630 --> 00:19:40,470
specifically that I would feel very

484
00:19:38,040 --> 00:19:43,379
confident talking about beyond just kind

485
00:19:40,470 --> 00:19:46,020
of yeah from the outside but I would say

486
00:19:43,380 --> 00:19:47,520
we also WEC standards also have these

487
00:19:46,020 --> 00:19:50,220
privacy and security considerations

488
00:19:47,520 --> 00:19:53,370
sections and there's a concerned vendor

489
00:19:50,220 --> 00:19:56,960
I think that is a step one of what needs

490
00:19:53,370 --> 00:19:56,959
to be a 10 step Road

491
00:19:58,220 --> 00:20:04,580
to have lemon so thanks for presenting

492
00:20:01,759 --> 00:20:09,320
this is really helpful one of the things

493
00:20:04,580 --> 00:20:11,590
that I've noticed people do to try to

494
00:20:09,320 --> 00:20:15,019
mitigate risks of this sort is to have

495
00:20:11,590 --> 00:20:18,549
essentially a list of things that a

496
00:20:15,019 --> 00:20:21,379
particular site is allowed to do and

497
00:20:18,549 --> 00:20:23,360
that seems like I mean this is that this

498
00:20:21,379 --> 00:20:24,500
really wouldn't apply to IETF standards

499
00:20:23,360 --> 00:20:25,699
but it sort of seems like it applies to

500
00:20:24,500 --> 00:20:29,240
the stuff that you're actually talking

501
00:20:25,700 --> 00:20:30,529
about here so basically a set of

502
00:20:29,240 --> 00:20:32,240
entitlements I mean does that make sense

503
00:20:30,529 --> 00:20:34,460
to you as a way because the problem with

504
00:20:32,240 --> 00:20:36,440
what you're with with slowing down the

505
00:20:34,460 --> 00:20:38,389
the advancement of progress so to speak

506
00:20:36,440 --> 00:20:39,529
is it's very difficult to do because

507
00:20:38,389 --> 00:20:42,229
there's always somebody who wants this

508
00:20:39,529 --> 00:20:43,639
new feature and what do you say to them

509
00:20:42,230 --> 00:20:45,169
I mean the new feature is probably

510
00:20:43,639 --> 00:20:46,639
totally privacy violating and there

511
00:20:45,169 --> 00:20:48,529
really isn't a mechanism for actually

512
00:20:46,639 --> 00:20:50,269
preventing it from being exposed to the

513
00:20:48,529 --> 00:20:51,769
user when the user doesn't want it to be

514
00:20:50,269 --> 00:20:55,730
exposed to them there's no way to

515
00:20:51,769 --> 00:20:57,529
actually enforce that restriction so so

516
00:20:55,730 --> 00:20:59,629
it seems to me that the actual research

517
00:20:57,529 --> 00:21:01,399
problem here is how do we create a

518
00:20:59,629 --> 00:21:05,719
framework for enforcing restrictions of

519
00:21:01,399 --> 00:21:07,129
that type so I completely agree with you

520
00:21:05,720 --> 00:21:08,419
that that figuring out what sites should

521
00:21:07,129 --> 00:21:10,639
be allowed to do what it what any given

522
00:21:08,419 --> 00:21:12,139
point is extremely difficult i I

523
00:21:10,639 --> 00:21:13,250
slightly disagree with you and that

524
00:21:12,139 --> 00:21:16,850
there's not ways that vendors can

525
00:21:13,250 --> 00:21:18,860
enforce those choices those vendors a

526
00:21:16,850 --> 00:21:20,449
couple of examples came up before other

527
00:21:18,860 --> 00:21:21,979
things maybe policies determined by the

528
00:21:20,450 --> 00:21:24,440
browser offline or shipped with the

529
00:21:21,980 --> 00:21:28,820
browser given some knowns that of safe

530
00:21:24,440 --> 00:21:31,100
sites permissions are knocked around but

531
00:21:28,820 --> 00:21:33,168
but not useless way of going about this

532
00:21:31,100 --> 00:21:34,389
user gestures where the frame is where

533
00:21:33,169 --> 00:21:37,309
the code came from which is not a

534
00:21:34,389 --> 00:21:39,019
variable in any standard currently but

535
00:21:37,309 --> 00:21:42,289
not what frame is it executing in but

536
00:21:39,019 --> 00:21:44,840
what who delivered it etc etc etc so I

537
00:21:42,289 --> 00:21:47,929
think I think I think is more ivan

538
00:21:44,840 --> 00:21:49,100
either for hope than well it sounds like

539
00:21:47,929 --> 00:21:50,480
you actually agreed with me there

540
00:21:49,100 --> 00:21:52,459
because what you're really saying is

541
00:21:50,480 --> 00:22:00,159
that we need a way to make that happen

542
00:21:52,460 --> 00:22:00,159
oh yes thanks

543
00:22:04,899 --> 00:22:10,059
garrymon diem qualcomm we call back to

544
00:22:08,440 --> 00:22:12,039
six years ago when I was chairing the

545
00:22:10,059 --> 00:22:15,279
geolocation working group from the w3c

546
00:22:12,039 --> 00:22:18,549
we had a discussion is he you know

547
00:22:15,279 --> 00:22:21,100
related to ping advice on the topic and

548
00:22:18,549 --> 00:22:25,168
we just then we discussed the concept of

549
00:22:21,100 --> 00:22:28,238
whether a webpage could or what a web

550
00:22:25,169 --> 00:22:30,129
web service provider couldn't declare to

551
00:22:28,239 --> 00:22:31,479
the user what their intentions were as

552
00:22:30,129 --> 00:22:33,428
far as any information they would

553
00:22:31,479 --> 00:22:35,169
provide and we couldn't figure out a way

554
00:22:33,429 --> 00:22:38,369
to actually do that without getting it

555
00:22:35,169 --> 00:22:41,320
without it being abused by rogue parties

556
00:22:38,369 --> 00:22:43,840
I'm wondering now though you know when

557
00:22:41,320 --> 00:22:45,489
you look at the only innovations such as

558
00:22:43,840 --> 00:22:47,259
certificate transparency and we're

559
00:22:45,489 --> 00:22:49,570
getting better and better authentication

560
00:22:47,259 --> 00:22:52,389
into the browser all the time respective

561
00:22:49,570 --> 00:22:54,759
websites whether whether browser based

562
00:22:52,389 --> 00:22:57,189
policies with respect to individual

563
00:22:54,759 --> 00:22:59,169
websites could actually take the place

564
00:22:57,190 --> 00:23:02,080
of having to specifically advise the

565
00:22:59,169 --> 00:23:03,249
user from the service service itself so

566
00:23:02,080 --> 00:23:05,109
I was wondering what your thoughts are

567
00:23:03,249 --> 00:23:07,720
on this well I mean I think geolocation

568
00:23:05,109 --> 00:23:10,899
in the browser is actually a positive

569
00:23:07,720 --> 00:23:12,909
example I mean that is a of the many

570
00:23:10,899 --> 00:23:14,379
ways that user privacy is harmed that is

571
00:23:12,909 --> 00:23:16,330
not often one of them because it very

572
00:23:14,379 --> 00:23:18,549
explicitly says the users understand

573
00:23:16,330 --> 00:23:21,220
what that means and they have they opt

574
00:23:18,549 --> 00:23:22,899
in and I think of the hundred things

575
00:23:21,220 --> 00:23:24,729
that makes me concerned that that's not

576
00:23:22,899 --> 00:23:26,830
one of them I think for that reason I

577
00:23:24,729 --> 00:23:29,259
think the idea I'm not sure there's any

578
00:23:26,830 --> 00:23:30,549
solution to the concern of the website

579
00:23:29,259 --> 00:23:34,080
saying I'm only gonna do this with that

580
00:23:30,549 --> 00:23:36,519
information I think that's probably even

581
00:23:34,080 --> 00:23:38,109
even given another advancements I think

582
00:23:36,519 --> 00:23:45,669
that's helping out a way that it's going

583
00:23:38,109 --> 00:23:48,210
to be useful going forward we're on to

584
00:23:45,669 --> 00:23:48,210
the next presentation

585
00:24:03,070 --> 00:24:06,490
is this cute

586
00:24:07,900 --> 00:24:14,690
okay hi everyone I'm Sandra a PhD

587
00:24:11,990 --> 00:24:17,210
student at EPFL and today I'm going to

588
00:24:14,690 --> 00:24:20,630
present some work done by myself and my

589
00:24:17,210 --> 00:24:24,350
co-authors on traffic analysis of

590
00:24:20,630 --> 00:24:26,540
encrypted DNS so I'm going to start by

591
00:24:24,350 --> 00:24:29,260
jumping straight to a conclusion which

592
00:24:26,540 --> 00:24:32,720
is that we did a number of experiments

593
00:24:29,260 --> 00:24:35,600
where we did a traffic analysis of DNS

594
00:24:32,720 --> 00:24:38,180
over HTTP traffic and we found that

595
00:24:35,600 --> 00:24:40,129
monitoring and censorship it's still

596
00:24:38,180 --> 00:24:44,090
feasible even in the presence of

597
00:24:40,130 --> 00:24:46,070
encryption and that currently proposed a

598
00:24:44,090 --> 00:24:48,350
DNS based countermeasures against

599
00:24:46,070 --> 00:24:52,070
traffic analysis are not sufficient to

600
00:24:48,350 --> 00:24:53,149
prevent such attacks so in this talk I'm

601
00:24:52,070 --> 00:24:57,200
going to describe some of these

602
00:24:53,150 --> 00:24:59,480
experiments in detail so when a client

603
00:24:57,200 --> 00:25:02,810
connects to a destination host generally

604
00:24:59,480 --> 00:25:04,730
this is preceded by a DNS lookup as we

605
00:25:02,810 --> 00:25:06,350
all know there are measures in place to

606
00:25:04,730 --> 00:25:09,590
encrypt the connections between the

607
00:25:06,350 --> 00:25:11,659
client and the destination hosts but DNS

608
00:25:09,590 --> 00:25:13,639
lookups have so far been sent in but

609
00:25:11,660 --> 00:25:16,370
here which makes them susceptible to

610
00:25:13,640 --> 00:25:18,350
eavesdropping and tampering for example

611
00:25:16,370 --> 00:25:19,969
if you have an adversary on the path

612
00:25:18,350 --> 00:25:20,889
between the client and the recursive

613
00:25:19,970 --> 00:25:24,350
dissolvent

614
00:25:20,890 --> 00:25:26,110
the adversity get get some idea of the

615
00:25:24,350 --> 00:25:29,510
browsing history of the user for example

616
00:25:26,110 --> 00:25:34,159
which is a privacy concern there is also

617
00:25:29,510 --> 00:25:36,800
a censorship that's based on DNS so

618
00:25:34,160 --> 00:25:40,460
there have been measures in place before

619
00:25:36,800 --> 00:25:43,430
that have been proposed to improve DNS

620
00:25:40,460 --> 00:25:46,070
security you have measures such as DNS

621
00:25:43,430 --> 00:25:48,470
SEC which look at authentication but do

622
00:25:46,070 --> 00:25:50,870
not provide confidentiality and you have

623
00:25:48,470 --> 00:25:52,970
measures such as DNS Script which allow

624
00:25:50,870 --> 00:25:56,030
for encryption but did not see much

625
00:25:52,970 --> 00:25:58,250
widespread adoption over the last couple

626
00:25:56,030 --> 00:26:02,450
of years you have these protocols DNS

627
00:25:58,250 --> 00:26:05,240
over TLS and DNS over HTTPS which have

628
00:26:02,450 --> 00:26:07,280
been gaining some traction the idea

629
00:26:05,240 --> 00:26:10,100
behind them is to set up a TLS session

630
00:26:07,280 --> 00:26:11,450
already or an HTTPS connection

631
00:26:10,100 --> 00:26:14,510
between the client and the recursive

632
00:26:11,450 --> 00:26:17,360
resolver and exchange DNS queries and

633
00:26:14,510 --> 00:26:19,789
responses over this connection and since

634
00:26:17,360 --> 00:26:24,620
this is encrypted ideally this should

635
00:26:19,789 --> 00:26:26,629
provide some privacy for the user so the

636
00:26:24,620 --> 00:26:29,059
scenario that we are looking at is an

637
00:26:26,630 --> 00:26:30,860
observer who is monitoring the

638
00:26:29,059 --> 00:26:33,590
connection between a client and a

639
00:26:30,860 --> 00:26:36,049
recursive resolver so the user visits

640
00:26:33,590 --> 00:26:39,889
the page and the observer tries to get

641
00:26:36,049 --> 00:26:42,470
some features from this DNS over HTTP or

642
00:26:39,890 --> 00:26:44,919
door traffic and tries to guess which

643
00:26:42,470 --> 00:26:47,150
web page is being visited by the user

644
00:26:44,919 --> 00:26:49,460
note that since the connection is

645
00:26:47,150 --> 00:26:52,970
encrypted the observer no longer has

646
00:26:49,460 --> 00:26:56,090
access to the content of the DNS queries

647
00:26:52,970 --> 00:26:58,700
and responses but looks at information

648
00:26:56,090 --> 00:27:01,158
such as sizes of packets the timings

649
00:26:58,700 --> 00:27:04,039
between the packets the directionality

650
00:27:01,159 --> 00:27:07,700
of the traffic or headers such as TLS

651
00:27:04,039 --> 00:27:11,179
headers and the idea that we're basing

652
00:27:07,700 --> 00:27:13,220
our analysis on is the fact that when a

653
00:27:11,179 --> 00:27:15,590
user visits a web page there are a lot

654
00:27:13,220 --> 00:27:18,470
of additional resources such as ads

655
00:27:15,590 --> 00:27:20,600
static files or images that have to be

656
00:27:18,470 --> 00:27:23,480
loaded as well which could be hosted on

657
00:27:20,600 --> 00:27:26,330
different domains so a visit to a web

658
00:27:23,480 --> 00:27:29,110
page actually consists of multiple DNS

659
00:27:26,330 --> 00:27:32,059
queries and responses and the set of

660
00:27:29,110 --> 00:27:34,490
query seven responses could act as a

661
00:27:32,059 --> 00:27:38,120
fingerprint for identification of that

662
00:27:34,490 --> 00:27:40,250
web page we are considering two

663
00:27:38,120 --> 00:27:41,809
adversary goals here monitoring and

664
00:27:40,250 --> 00:27:46,190
censorship and I'm going to speak about

665
00:27:41,809 --> 00:27:49,450
each of them so as I mentioned before

666
00:27:46,190 --> 00:27:53,510
the goal of a monitoring adversary is to

667
00:27:49,450 --> 00:27:56,480
look at the do edge traffic and get some

668
00:27:53,510 --> 00:27:59,510
features so we and I try to identify the

669
00:27:56,480 --> 00:28:01,789
webpage visited by the user so for this

670
00:27:59,510 --> 00:28:03,950
we build a classifier based on size and

671
00:28:01,789 --> 00:28:06,289
directionality features of the door

672
00:28:03,950 --> 00:28:08,299
traffic I don't go into the details

673
00:28:06,289 --> 00:28:12,350
there of the classifier they're

674
00:28:08,299 --> 00:28:15,590
available in our papers but we basically

675
00:28:12,350 --> 00:28:17,959
can conducted two experiments here in

676
00:28:15,590 --> 00:28:20,720
the first experiment we considered a

677
00:28:17,960 --> 00:28:21,710
case where an adversary knows the entire

678
00:28:20,720 --> 00:28:24,470
set of

679
00:28:21,710 --> 00:28:26,659
is that a user has visited and the goal

680
00:28:24,470 --> 00:28:28,789
of the adversary is to identify which

681
00:28:26,659 --> 00:28:31,460
particular webpage was visited by the

682
00:28:28,789 --> 00:28:35,179
user so in this experiment we considered

683
00:28:31,460 --> 00:28:37,640
a set of 1,500 web pages so if you

684
00:28:35,179 --> 00:28:40,820
consider a random classifier that tries

685
00:28:37,640 --> 00:28:43,640
to guess which web pages it is the

686
00:28:40,820 --> 00:28:47,720
classifier would try to guess this with

687
00:28:43,640 --> 00:28:50,830
one on 1,500 basically but what we see

688
00:28:47,720 --> 00:28:53,990
is that our classifier gets a 90%

689
00:28:50,830 --> 00:28:56,539
precision and recall where precision is

690
00:28:53,990 --> 00:28:58,159
a measure of correctness of all the

691
00:28:56,539 --> 00:29:00,440
results that word is turned by the

692
00:28:58,159 --> 00:29:03,020
classifier and recall says how many

693
00:29:00,440 --> 00:29:05,000
relevant results were returned so when

694
00:29:03,020 --> 00:29:07,250
the classifier has a high precision and

695
00:29:05,000 --> 00:29:09,830
recall score this means that not only

696
00:29:07,250 --> 00:29:12,760
did the classifier identify a large

697
00:29:09,830 --> 00:29:15,889
number of web pages it did so correctly

698
00:29:12,760 --> 00:29:18,260
in the second experiment we consider a

699
00:29:15,890 --> 00:29:20,750
bit more realistic scenario where an

700
00:29:18,260 --> 00:29:22,730
adversary does not know all the set of

701
00:29:20,750 --> 00:29:26,600
web pages that are visited by the user

702
00:29:22,730 --> 00:29:29,210
rather the adversary has has is

703
00:29:26,600 --> 00:29:31,969
interested in a subset of the webpages

704
00:29:29,210 --> 00:29:33,980
called the monitored set and the goal of

705
00:29:31,970 --> 00:29:36,770
the adversity is to determine whether

706
00:29:33,980 --> 00:29:39,649
the user visited a page in this

707
00:29:36,770 --> 00:29:41,539
monitored setting so for this experiment

708
00:29:39,649 --> 00:29:44,239
we looked at a set of 5,000 web pages

709
00:29:41,539 --> 00:29:47,390
where 1% of the web pages were in the

710
00:29:44,240 --> 00:29:49,520
monitored set this is generally a harder

711
00:29:47,390 --> 00:29:51,799
classification problem in the area of

712
00:29:49,520 --> 00:29:54,710
website fingerprinting and we see that

713
00:29:51,799 --> 00:29:57,440
we get a lower precision recall score of

714
00:29:54,710 --> 00:30:01,820
about 70% but this is still much higher

715
00:29:57,440 --> 00:30:04,490
than a random case the second goal that

716
00:30:01,820 --> 00:30:07,460
we considered was censorship we did a

717
00:30:04,490 --> 00:30:09,799
preliminary analysis of a censoring

718
00:30:07,460 --> 00:30:12,289
adversity the goal of the censoring

719
00:30:09,799 --> 00:30:14,779
adversary is slightly different the idea

720
00:30:12,289 --> 00:30:17,299
is to identify a web page as fast as

721
00:30:14,779 --> 00:30:20,029
possible and I really try to block the

722
00:30:17,299 --> 00:30:22,340
connection so this means that an entire

723
00:30:20,029 --> 00:30:24,649
door trace will not be available to the

724
00:30:22,340 --> 00:30:27,649
adversity and the adversity has to look

725
00:30:24,649 --> 00:30:30,918
at partial door traces so what we did

726
00:30:27,649 --> 00:30:33,510
here was we took a set of 1,500 web

727
00:30:30,919 --> 00:30:35,760
pages and we

728
00:30:33,510 --> 00:30:38,760
the uniqueness of the door traffic when

729
00:30:35,760 --> 00:30:41,910
only the first LTL s records have been

730
00:30:38,760 --> 00:30:44,669
observed and the idea behind this is

731
00:30:41,910 --> 00:30:49,530
that when two traces are unique then we

732
00:30:44,669 --> 00:30:51,780
can find out which trace to block so

733
00:30:49,530 --> 00:30:55,080
what we found out in our analysis is

734
00:30:51,780 --> 00:30:57,990
that generally the fourth TLS record

735
00:30:55,080 --> 00:31:00,780
usually curls ons to the first doe query

736
00:30:57,990 --> 00:31:02,850
in our traces and the size of the TLS

737
00:31:00,780 --> 00:31:05,879
records also has connection to the

738
00:31:02,850 --> 00:31:07,709
length of the domain name so this means

739
00:31:05,880 --> 00:31:09,929
that one strategy that an adversary

740
00:31:07,710 --> 00:31:12,299
could follow would be to block on the

741
00:31:09,929 --> 00:31:15,360
first query this means that the user

742
00:31:12,299 --> 00:31:17,280
will not be able to load the page the

743
00:31:15,360 --> 00:31:19,320
disadvantage of this method is that it

744
00:31:17,280 --> 00:31:21,840
could result in high collateral damage

745
00:31:19,320 --> 00:31:24,960
because other pages with the same domain

746
00:31:21,840 --> 00:31:27,360
length could also be blocked as a result

747
00:31:24,960 --> 00:31:29,730
of the strategy another thing that we

748
00:31:27,360 --> 00:31:31,918
found out was that by the fifteenth

749
00:31:29,730 --> 00:31:36,090
record or so which corresponds to

750
00:31:31,919 --> 00:31:37,860
approximately 15% of a trace length most

751
00:31:36,090 --> 00:31:41,699
of the traces in our set were

752
00:31:37,860 --> 00:31:43,678
distinguishable so the adversary could

753
00:31:41,700 --> 00:31:45,660
follow a strategy where they try to

754
00:31:43,679 --> 00:31:47,970
block after having a high confidence

755
00:31:45,660 --> 00:31:50,280
that this is the trace that they want to

756
00:31:47,970 --> 00:31:53,820
block so this reduces the collateral

757
00:31:50,280 --> 00:31:55,740
damage but the disadvantage is that this

758
00:31:53,820 --> 00:31:58,080
would result in the user being able to

759
00:31:55,740 --> 00:32:02,940
load most of the page they might miss

760
00:31:58,080 --> 00:32:05,040
out on some of the resources the page we

761
00:32:02,940 --> 00:32:06,630
also did a number of experiments where

762
00:32:05,040 --> 00:32:09,210
we looked at the robustness of the

763
00:32:06,630 --> 00:32:11,460
attack and by this what I mean is when

764
00:32:09,210 --> 00:32:15,480
different aspects of the experimental

765
00:32:11,460 --> 00:32:18,150
scenario change how does be an adversary

766
00:32:15,480 --> 00:32:21,059
try to keep good classifier performance

767
00:32:18,150 --> 00:32:24,600
for example DNS traces can vary over

768
00:32:21,059 --> 00:32:27,418
time so how often does the adversary

769
00:32:24,600 --> 00:32:29,490
have to retrain their classifier then we

770
00:32:27,419 --> 00:32:32,730
wanted to see the effect of client

771
00:32:29,490 --> 00:32:34,950
location on our classifier as well as

772
00:32:32,730 --> 00:32:37,770
changes in the infrastructure so by

773
00:32:34,950 --> 00:32:40,169
infrastructure I mean we change the the

774
00:32:37,770 --> 00:32:42,960
resolver we experimented with CloudFlare

775
00:32:40,169 --> 00:32:45,860
and Google's resolver we looked at cloud

776
00:32:42,960 --> 00:32:47,420
flat standalone doe client as well as

777
00:32:45,860 --> 00:32:50,120
Firefox's in Bill

778
00:32:47,420 --> 00:32:51,920
client and finally we did some analysis

779
00:32:50,120 --> 00:32:54,679
of desktop versus Raspberry Pi

780
00:32:51,920 --> 00:32:58,040
environments and the main takeaway is

781
00:32:54,680 --> 00:33:00,260
that for best performance ideally you

782
00:32:58,040 --> 00:33:02,840
would train a classifier that is tailor

783
00:33:00,260 --> 00:33:05,980
to that particular scenario if you use a

784
00:33:02,840 --> 00:33:07,610
classifier trained on one set of

785
00:33:05,980 --> 00:33:09,920
parameters

786
00:33:07,610 --> 00:33:12,439
the classification performance does drop

787
00:33:09,920 --> 00:33:18,110
when you test on another set but it does

788
00:33:12,440 --> 00:33:19,910
not stop the attack so what we saw from

789
00:33:18,110 --> 00:33:22,040
my initial set of experiments are that

790
00:33:19,910 --> 00:33:25,580
monitoring and censorship are feasible

791
00:33:22,040 --> 00:33:27,649
even when DNS traffic is encrypted so we

792
00:33:25,580 --> 00:33:30,350
looked at countermeasures to prevent

793
00:33:27,650 --> 00:33:32,240
traffic analysis attacks so the first

794
00:33:30,350 --> 00:33:35,209
thing we looked at was edn airspace

795
00:33:32,240 --> 00:33:39,200
countermeasures where a DNS is extension

796
00:33:35,210 --> 00:33:41,210
mechanisms for DNS so one of the options

797
00:33:39,200 --> 00:33:43,790
in a DNS is a padding option which

798
00:33:41,210 --> 00:33:46,880
allows you to add some padding to DNS

799
00:33:43,790 --> 00:33:49,220
queries and responses and the idea

800
00:33:46,880 --> 00:33:51,200
behind this is that you remove the size

801
00:33:49,220 --> 00:33:54,380
information that is available for the

802
00:33:51,200 --> 00:33:56,420
classifier to distinguish web pages so

803
00:33:54,380 --> 00:33:59,930
the first thing that we did was we

804
00:33:56,420 --> 00:34:02,390
implemented padding of DNS queries so we

805
00:33:59,930 --> 00:34:04,130
used cloud flash stand-alone doe client

806
00:34:02,390 --> 00:34:06,920
for this and we implemented a

807
00:34:04,130 --> 00:34:10,070
recommended padding strategy so the RFC

808
00:34:06,920 --> 00:34:13,010
there has padding strategies and the

809
00:34:10,070 --> 00:34:15,740
recommended one is to pad queries to

810
00:34:13,010 --> 00:34:20,090
multiples of 128 bytes which is what we

811
00:34:15,739 --> 00:34:21,770
implemented on cloud flask line we had

812
00:34:20,090 --> 00:34:23,840
also contacted CloudFlare with the

813
00:34:21,770 --> 00:34:26,690
initial set of results and they

814
00:34:23,840 --> 00:34:30,050
implemented padding of responses on

815
00:34:26,690 --> 00:34:32,600
their resolver how were they they padded

816
00:34:30,050 --> 00:34:35,060
their responses to multiples of 128

817
00:34:32,600 --> 00:34:38,150
bytes whereas the recommended strategy

818
00:34:35,060 --> 00:34:40,820
is to add them to multiples of 4 68

819
00:34:38,150 --> 00:34:44,270
bytes so we decided to compare both the

820
00:34:40,820 --> 00:34:46,900
strategies as well so the experiments

821
00:34:44,270 --> 00:34:50,300
that we did were the two e dns-based

822
00:34:46,900 --> 00:34:52,370
meshes which I just described we also

823
00:34:50,300 --> 00:34:55,220
looked at a case that we called constant

824
00:34:52,370 --> 00:34:57,500
padding so this is a simulated scenario

825
00:34:55,219 --> 00:35:00,410
we wanted to see if we had perfect

826
00:34:57,500 --> 00:35:01,130
padding that is if all the TLS records

827
00:35:00,410 --> 00:35:04,040
work

828
00:35:01,130 --> 00:35:07,430
to the same size how the classifier

829
00:35:04,040 --> 00:35:09,380
would perform so we basically set all

830
00:35:07,430 --> 00:35:12,140
the sizes to the maximum possible value

831
00:35:09,380 --> 00:35:13,910
that we saw in our trace and apply the

832
00:35:12,140 --> 00:35:17,120
classifier to this case

833
00:35:13,910 --> 00:35:20,000
and finally CloudFlare has a dns over

834
00:35:17,120 --> 00:35:21,859
tall service where DNS queries and

835
00:35:20,000 --> 00:35:24,860
responses are sent over the Tor network

836
00:35:21,860 --> 00:35:27,020
so we decided to experiment with this

837
00:35:24,860 --> 00:35:31,220
service as well to see how anonymous

838
00:35:27,020 --> 00:35:33,230
communication acts as a defense so this

839
00:35:31,220 --> 00:35:36,350
table outlines the performance of the

840
00:35:33,230 --> 00:35:40,010
classifier just note that the values are

841
00:35:36,350 --> 00:35:43,250
as decimals not as percentages here for

842
00:35:40,010 --> 00:35:45,980
for comparison without any counter

843
00:35:43,250 --> 00:35:48,890
measure the classify attains about 90%

844
00:35:45,980 --> 00:35:51,220
precision and recall we see that with a

845
00:35:48,890 --> 00:35:54,080
DNS with the current CloudFlare strategy

846
00:35:51,220 --> 00:35:57,109
precision and recall drops to only about

847
00:35:54,080 --> 00:36:00,230
70% with the recommended padding

848
00:35:57,110 --> 00:36:01,670
strategy it drops to about 45% both

849
00:36:00,230 --> 00:36:04,490
these values are much higher than a

850
00:36:01,670 --> 00:36:07,070
random case which shows that a DNS based

851
00:36:04,490 --> 00:36:09,830
measures and do not eliminate traffic

852
00:36:07,070 --> 00:36:12,350
analysis if you look at constant padding

853
00:36:09,830 --> 00:36:15,170
it's about 7% so there is a major drop

854
00:36:12,350 --> 00:36:17,120
in the performance and DNS over tor

855
00:36:15,170 --> 00:36:22,760
achieves the best results with about

856
00:36:17,120 --> 00:36:24,799
3.5% precision recall we also looked at

857
00:36:22,760 --> 00:36:27,830
the overhead in terms of amount of

858
00:36:24,800 --> 00:36:30,020
additional traffic that is added by

859
00:36:27,830 --> 00:36:32,270
these counter measures so we did a very

860
00:36:30,020 --> 00:36:34,640
short experiment where we took 50 web

861
00:36:32,270 --> 00:36:37,340
pages and about 6 samples per web page

862
00:36:34,640 --> 00:36:39,230
and applied each of the counter measures

863
00:36:37,340 --> 00:36:42,500
and looked at the total volume that is

864
00:36:39,230 --> 00:36:46,160
sent and received bytes of the TLS

865
00:36:42,500 --> 00:36:50,510
records just note that the y-axis is in

866
00:36:46,160 --> 00:36:52,640
log scale here we see that the e DNS

867
00:36:50,510 --> 00:36:55,790
face measures as expected do not add

868
00:36:52,640 --> 00:36:57,770
much overhead our constant padding adds

869
00:36:55,790 --> 00:37:00,560
a lot of overhead because we are padding

870
00:36:57,770 --> 00:37:04,090
everything to the maximum size and DNS

871
00:37:00,560 --> 00:37:04,090
over tor is somewhere in between

872
00:37:04,540 --> 00:37:12,650
so we see that tor is a effective

873
00:37:08,720 --> 00:37:15,140
defense for the traffic analysis attacks

874
00:37:12,650 --> 00:37:17,569
and the reason so that interview

875
00:37:15,140 --> 00:37:21,170
the data sent in fixed cell sizes which

876
00:37:17,569 --> 00:37:23,119
reduces the variability of sizes and of

877
00:37:21,170 --> 00:37:25,430
exercise related features of the

878
00:37:23,119 --> 00:37:27,579
classifier another thing is that there's

879
00:37:25,430 --> 00:37:30,348
repackage ization and by that we mean

880
00:37:27,579 --> 00:37:33,559
the data can be merged or bundled

881
00:37:30,349 --> 00:37:36,549
together in tall and this affects the

882
00:37:33,559 --> 00:37:39,730
directionality features we look at which

883
00:37:36,549 --> 00:37:42,619
records have been sent and received and

884
00:37:39,730 --> 00:37:44,900
you when thought does this this affects

885
00:37:42,619 --> 00:37:48,559
the directionality features used by the

886
00:37:44,900 --> 00:37:52,519
classifier one thing that we are not

887
00:37:48,559 --> 00:37:55,069
been able to explain the clusters that

888
00:37:52,519 --> 00:37:58,488
we saw in the confusion graph so this

889
00:37:55,069 --> 00:38:00,859
graph shows web pages that have been

890
00:37:58,489 --> 00:38:03,799
mislabeled as one another and what we

891
00:38:00,859 --> 00:38:06,348
saw is that web pages generally tend to

892
00:38:03,799 --> 00:38:08,630
be clustered where web pages within the

893
00:38:06,349 --> 00:38:10,880
same cluster and to be misclassified as

894
00:38:08,630 --> 00:38:13,069
one another this means that the

895
00:38:10,880 --> 00:38:16,460
anonymity set for a particular web page

896
00:38:13,069 --> 00:38:18,859
is not the entire set of web pages in

897
00:38:16,460 --> 00:38:22,190
the test but rather only the web pages

898
00:38:18,859 --> 00:38:23,989
within a particular cluster so we did

899
00:38:22,190 --> 00:38:25,999
some initial traffic analysis but we

900
00:38:23,989 --> 00:38:28,609
have not being sorry feature analysis

901
00:38:25,999 --> 00:38:31,868
but we have not been able to determine

902
00:38:28,609 --> 00:38:31,869
why this is the case

903
00:38:53,479 --> 00:38:56,968
so I can take this opportunity to ask a

904
00:38:55,680 --> 00:38:58,229
clarifying question as long as you're

905
00:38:56,969 --> 00:39:00,449
waiting yeah sure

906
00:38:58,229 --> 00:39:04,649
is your tour protection is that DNS of

907
00:39:00,449 --> 00:39:07,979
Earth over doe over tor is DNS over Tosh

908
00:39:04,650 --> 00:39:21,089
so so regular to us yes okay thank you

909
00:39:07,979 --> 00:39:35,848
oh wait oh yeah inside to one of the

910
00:39:21,089 --> 00:39:39,328
ways getting help is okay sure yeah I'm

911
00:39:35,849 --> 00:39:42,109
on my last legs anyway so currently we

912
00:39:39,329 --> 00:39:45,029
are working on a few different things

913
00:39:42,109 --> 00:39:46,979
the first thing is that our experiments

914
00:39:45,029 --> 00:39:49,049
looked at the case where a user's

915
00:39:46,979 --> 00:39:51,689
visiting one page after the other and

916
00:39:49,049 --> 00:39:53,910
this is not exactly a real realistic

917
00:39:51,690 --> 00:39:56,699
user scenario so we are considering the

918
00:39:53,910 --> 00:39:59,160
case where you can have multiple tabs

919
00:39:56,699 --> 00:40:01,890
open by a user which results in some

920
00:39:59,160 --> 00:40:04,078
interleaving of the door traffic our

921
00:40:01,890 --> 00:40:07,140
initial results show that a classifier

922
00:40:04,079 --> 00:40:10,259
gets about 40% precision recall with

923
00:40:07,140 --> 00:40:12,449
about two tabs another thing is that we

924
00:40:10,259 --> 00:40:15,359
consider the case right now where there

925
00:40:12,449 --> 00:40:17,579
is no caching of the DNS records so we

926
00:40:15,359 --> 00:40:20,640
want to study the impact of caching as

927
00:40:17,579 --> 00:40:23,160
well on the classifier we also started

928
00:40:20,640 --> 00:40:26,699
doing a comparison with DNS so a TLS

929
00:40:23,160 --> 00:40:30,089
traffic and we looked at the padded DNS

930
00:40:26,699 --> 00:40:32,279
so a TLS traffic and we see that it is

931
00:40:30,089 --> 00:40:35,788
much more resistant to the classify it's

932
00:40:32,279 --> 00:40:37,949
about 28% as compared to dough so we

933
00:40:35,789 --> 00:40:41,549
have started doing or feature analysis

934
00:40:37,949 --> 00:40:44,819
to see why this is the case and finally

935
00:40:41,549 --> 00:40:46,890
we want to see if we can have counter

936
00:40:44,819 --> 00:40:49,979
measures which include both padding and

937
00:40:46,890 --> 00:40:53,969
rhe packetization but without tors

938
00:40:49,979 --> 00:40:58,109
overheads and latency and volume caused

939
00:40:53,969 --> 00:41:00,270
by headers so this is basically the

940
00:40:58,109 --> 00:41:02,910
summary that

941
00:41:00,270 --> 00:41:05,490
currently proposed ddns measures might

942
00:41:02,910 --> 00:41:08,940
not be enough to prevent the traffic

943
00:41:05,490 --> 00:41:16,379
analysis and these are some links to our

944
00:41:08,940 --> 00:41:17,570
paper Thanks I think really good work

945
00:41:16,380 --> 00:41:22,820
Thanks

946
00:41:17,570 --> 00:41:22,820
if you go back to the tape the table yes

947
00:41:23,300 --> 00:41:28,620
so so I saw when you say constant Pony I

948
00:41:27,660 --> 00:41:30,720
had a quick look at the paper in that I

949
00:41:28,620 --> 00:41:34,680
mean you've had it to the biggest size

950
00:41:30,720 --> 00:41:37,319
pocket of all yes so this is so we don't

951
00:41:34,680 --> 00:41:39,839
actually apply the padding here but what

952
00:41:37,320 --> 00:41:42,000
we do is we take all the traces and we

953
00:41:39,840 --> 00:41:44,070
change the sizes to the same value which

954
00:41:42,000 --> 00:41:46,350
is the largest value that we saw on this

955
00:41:44,070 --> 00:41:49,110
set because the idea is that you want to

956
00:41:46,350 --> 00:41:51,810
see a perfect scenario where all the

957
00:41:49,110 --> 00:41:53,490
sizes are the same so when you said

958
00:41:51,810 --> 00:42:01,640
constantly there it doesn't mean just

959
00:41:53,490 --> 00:42:06,000
having every tear less I know no I know

960
00:42:01,640 --> 00:42:10,920
nonetheless why is that so different

961
00:42:06,000 --> 00:42:12,930
from a DNS for 6/8 diffic I don't

962
00:42:10,920 --> 00:42:17,220
understand why doing that makes such a

963
00:42:12,930 --> 00:42:19,020
difference for Indiana's for six it

964
00:42:17,220 --> 00:42:21,209
what we saw is that there is still a

965
00:42:19,020 --> 00:42:23,700
variability in the sizes that are there

966
00:42:21,210 --> 00:42:26,970
in the classic and the variability in

967
00:42:23,700 --> 00:42:28,770
the sizes is a big feature for the

968
00:42:26,970 --> 00:42:30,600
classifier whereas with constant padding

969
00:42:28,770 --> 00:42:37,500
because all the sizes are the same the

970
00:42:30,600 --> 00:42:40,049
size is no longer a feature this is both

971
00:42:37,500 --> 00:42:42,330
query and response sizes so you had a

972
00:42:40,050 --> 00:42:45,090
lot of queries that were 128 is not

973
00:42:42,330 --> 00:42:47,370
enough padding yeah but I just want to

974
00:42:45,090 --> 00:42:49,590
clarify that the response sizes have a

975
00:42:47,370 --> 00:42:53,630
greater variability than the query sizes

976
00:42:49,590 --> 00:42:56,280
so the responses do have a higher impact

977
00:42:53,630 --> 00:42:57,990
were you able to determine what is it in

978
00:42:56,280 --> 00:43:00,480
the responses that's causing them to go

979
00:42:57,990 --> 00:43:03,899
more than four six eight is DNS acre I

980
00:43:00,480 --> 00:43:08,480
know we haven't yet done that analysis

981
00:43:03,900 --> 00:43:11,160
of the content of the responses

982
00:43:08,480 --> 00:43:12,870
interesting difference and finding out

983
00:43:11,160 --> 00:43:13,589
more about that and turning that into

984
00:43:12,870 --> 00:43:16,529
some guidance

985
00:43:13,590 --> 00:43:18,810
for people like you know presumably

986
00:43:16,530 --> 00:43:21,150
somebody's using a really dumb query

987
00:43:18,810 --> 00:43:23,700
name so don't do that if you don't want

988
00:43:21,150 --> 00:43:29,040
to be and somebody else is giving like

989
00:43:23,700 --> 00:43:30,930
lots of answers hi Daniel con Gilmore

990
00:43:29,040 --> 00:43:33,210
thank you very much for doing this work

991
00:43:30,930 --> 00:43:34,830
I am the guilty party for proposing Edie

992
00:43:33,210 --> 00:43:36,150
Anna Sarah 468 and I proposed

993
00:43:34,830 --> 00:43:38,100
specifically because I wanted to

994
00:43:36,150 --> 00:43:39,840
encourage this kind of work so I'm

995
00:43:38,100 --> 00:43:43,950
really happy that you've done that and

996
00:43:39,840 --> 00:43:45,330
great to see the results the way we

997
00:43:43,950 --> 00:43:46,680
arrived at the recommended padding

998
00:43:45,330 --> 00:43:49,770
policy was basically to look at

999
00:43:46,680 --> 00:43:51,720
individual DNS queries and responses and

1000
00:43:49,770 --> 00:43:54,030
I like what you've done here which is to

1001
00:43:51,720 --> 00:43:56,279
look at them in combination so I have a

1002
00:43:54,030 --> 00:43:58,560
couple of questions that maybe you can

1003
00:43:56,280 --> 00:43:59,790
give me what your intuition is I think

1004
00:43:58,560 --> 00:44:01,710
what you're saying with the constant

1005
00:43:59,790 --> 00:44:03,630
padding arrangement is that the reason

1006
00:44:01,710 --> 00:44:05,370
that it's not zero there is that

1007
00:44:03,630 --> 00:44:08,730
different websites do different numbers

1008
00:44:05,370 --> 00:44:10,710
of DNS lookups yes so there are a couple

1009
00:44:08,730 --> 00:44:12,690
of things it also depends on the kind of

1010
00:44:10,710 --> 00:44:15,870
features that we used so one of the

1011
00:44:12,690 --> 00:44:17,730
things that we looked at was we looked

1012
00:44:15,870 --> 00:44:19,980
so if you have a trace we looked at

1013
00:44:17,730 --> 00:44:23,220
whether each TLS record was going from

1014
00:44:19,980 --> 00:44:25,560
client to resolve over from resolver to

1015
00:44:23,220 --> 00:44:28,259
client so then you have basically a

1016
00:44:25,560 --> 00:44:30,990
sequence of you know which direction it

1017
00:44:28,260 --> 00:44:33,300
is going in so even if you removed the

1018
00:44:30,990 --> 00:44:35,700
sizes you still have this directionality

1019
00:44:33,300 --> 00:44:37,470
as a feature directionality and also

1020
00:44:35,700 --> 00:44:39,870
parallelism right if I issue three

1021
00:44:37,470 --> 00:44:41,520
requests and responses back yes that's

1022
00:44:39,870 --> 00:44:45,600
different from saying request response

1023
00:44:41,520 --> 00:44:51,810
exactly yes sir so number of queries and

1024
00:44:45,600 --> 00:44:53,460
and cadence yes yes and then I wanted to

1025
00:44:51,810 --> 00:44:55,440
ask you to hypothesize I know you

1026
00:44:53,460 --> 00:44:57,600
haven't done the research to dig into it

1027
00:44:55,440 --> 00:45:01,950
and produce a printable result but why

1028
00:44:57,600 --> 00:45:06,000
you think the DNS over TLS was markedly

1029
00:45:01,950 --> 00:45:08,009
better than the DNS over HTTP um so I

1030
00:45:06,000 --> 00:45:09,810
mean if you looked if we look to just of

1031
00:45:08,010 --> 00:45:13,230
the sizes we saw that there was much

1032
00:45:09,810 --> 00:45:14,880
less variability in sizes I'm wondering

1033
00:45:13,230 --> 00:45:17,360
whether it is due to some of the

1034
00:45:14,880 --> 00:45:20,220
configuration messages that are being

1035
00:45:17,360 --> 00:45:22,640
exchanged in do an additional addition

1036
00:45:20,220 --> 00:45:25,200
to the queries like we don't distinguish

1037
00:45:22,640 --> 00:45:26,569
those messages since we are looking at

1038
00:45:25,200 --> 00:45:30,230
just the

1039
00:45:26,570 --> 00:45:33,700
the TLS record size options frame yeah

1040
00:45:30,230 --> 00:45:44,300
maybe something like that which could be

1041
00:45:33,700 --> 00:45:46,819
different for dough and TLS hi Fross a

1042
00:45:44,300 --> 00:45:50,030
canal blabs very cool work I really

1043
00:45:46,820 --> 00:45:52,640
appreciate that I had so one question is

1044
00:45:50,030 --> 00:45:55,910
already mystique eg acid but the other

1045
00:45:52,640 --> 00:46:00,799
one I had was so nurses hypotheses that

1046
00:45:55,910 --> 00:46:03,140
the DOE Safari said that if you mix do H

1047
00:46:00,800 --> 00:46:04,910
traffic with normal web traffic that

1048
00:46:03,140 --> 00:46:08,270
that would obviate the signature of the

1049
00:46:04,910 --> 00:46:12,109
DNS traffic a lot more is that something

1050
00:46:08,270 --> 00:46:14,000
that you consider studying as well yes

1051
00:46:12,110 --> 00:46:17,090
this is something that we thought about

1052
00:46:14,000 --> 00:46:20,390
right now we do consider toe traffic as

1053
00:46:17,090 --> 00:46:22,910
separate from website traffic and we

1054
00:46:20,390 --> 00:46:27,410
feel that when you mix them this might

1055
00:46:22,910 --> 00:46:30,680
affect the results we we haven't done

1056
00:46:27,410 --> 00:46:33,470
some work on that yet but this is

1057
00:46:30,680 --> 00:46:38,450
something we are considering okay thank

1058
00:46:33,470 --> 00:46:40,759
ya Westford karai and he took my

1059
00:46:38,450 --> 00:46:42,230
question so I'm gonna ask the little

1060
00:46:40,760 --> 00:46:42,790
tiny one at this point is your data set

1061
00:46:42,230 --> 00:46:45,950
available

1062
00:46:42,790 --> 00:46:47,900
yes we're planning to make a it's not

1063
00:46:45,950 --> 00:46:50,299
available at the moment we are just sort

1064
00:46:47,900 --> 00:46:54,860
of cleaning things up and we're planning

1065
00:46:50,300 --> 00:46:58,010
to make it available Christian we

1066
00:46:54,860 --> 00:46:59,630
tomorrow I am curious at how exactly you

1067
00:46:58,010 --> 00:47:06,770
measure the lengths of the queries and

1068
00:46:59,630 --> 00:47:09,740
responses responses so we can pick up

1069
00:47:06,770 --> 00:47:13,070
files and we look at TLS records which

1070
00:47:09,740 --> 00:47:15,319
are of type application data if I

1071
00:47:13,070 --> 00:47:18,860
remember and then we take the sizes of

1072
00:47:15,320 --> 00:47:22,160
those TLS records so us humor that there

1073
00:47:18,860 --> 00:47:25,190
is a direct mapping between the size of

1074
00:47:22,160 --> 00:47:29,089
the DNS messages and the size of the TRS

1075
00:47:25,190 --> 00:47:32,810
because we also did verify this by

1076
00:47:29,090 --> 00:47:35,840
decrypting the records and in our paper

1077
00:47:32,810 --> 00:47:38,370
you can see we have a plot where we show

1078
00:47:35,840 --> 00:47:40,890
the sizes of the queries as well

1079
00:47:38,370 --> 00:47:43,890
the sizes of the records and there is a

1080
00:47:40,890 --> 00:47:49,500
they follow the same shape essentially

1081
00:47:43,890 --> 00:47:53,940
so what if what if an implementation was

1082
00:47:49,500 --> 00:47:56,250
not was deliberately either groupings

1083
00:47:53,940 --> 00:47:58,140
have worker is in the same record or

1084
00:47:56,250 --> 00:48:03,540
splitting queries and multiple records

1085
00:47:58,140 --> 00:48:12,180
what would I to queries in the same

1086
00:48:03,540 --> 00:48:15,870
record all I think that um you mean

1087
00:48:12,180 --> 00:48:18,240
changes the size of the five queries for

1088
00:48:15,870 --> 00:48:19,859
example yes there is nothing in the

1089
00:48:18,240 --> 00:48:22,189
protocol that says that those five

1090
00:48:19,860 --> 00:48:24,750
carries up to go in five years because

1091
00:48:22,190 --> 00:48:28,020
they could be packed in one big message

1092
00:48:24,750 --> 00:48:29,220
yes but is sent as a single theorist

1093
00:48:28,020 --> 00:48:33,360
recorder yes

1094
00:48:29,220 --> 00:48:37,020
so if site did that with a change your

1095
00:48:33,360 --> 00:48:39,030
results um I think it might change

1096
00:48:37,020 --> 00:48:42,360
especially if the classifier has been

1097
00:48:39,030 --> 00:48:45,290
trained in in a particular way as and if

1098
00:48:42,360 --> 00:48:47,760
it's trained based on traces where

1099
00:48:45,290 --> 00:48:49,800
individual queries are in individual

1100
00:48:47,760 --> 00:48:52,320
records this of course changes the

1101
00:48:49,800 --> 00:48:55,350
pattern of the traffic so how if you

1102
00:48:52,320 --> 00:48:57,210
train it in that particular case if you

1103
00:48:55,350 --> 00:48:59,279
have a mix of traffic I think it would

1104
00:48:57,210 --> 00:49:04,440
affect the performance of the classifier

1105
00:48:59,280 --> 00:49:06,510
yes thank you Jeffrey askin do you have

1106
00:49:04,440 --> 00:49:08,790
any feeling for how the position in

1107
00:49:06,510 --> 00:49:10,260
recall will scale as you increase the

1108
00:49:08,790 --> 00:49:11,779
universe of websites from a couple

1109
00:49:10,260 --> 00:49:15,120
thousand to the size of the Internet

1110
00:49:11,780 --> 00:49:19,140
yeah so this is one of the major things

1111
00:49:15,120 --> 00:49:21,390
because our dataset is not very huge we

1112
00:49:19,140 --> 00:49:24,060
rather have multiple experiments with

1113
00:49:21,390 --> 00:49:27,600
smaller datasets I would assume that the

1114
00:49:24,060 --> 00:49:36,060
precision and recall would go down but I

1115
00:49:27,600 --> 00:49:39,049
don't know by how much yeah so this is

1116
00:49:36,060 --> 00:49:43,259
Sarah Dickinson on Java

1117
00:49:39,050 --> 00:49:47,480
she asks have you considered including

1118
00:49:43,260 --> 00:49:50,970
oblivious DNS in a future analysis and

1119
00:49:47,480 --> 00:49:52,110
yes actually Carmela

1120
00:49:50,970 --> 00:49:54,509
I think your colleague

1121
00:49:52,110 --> 00:49:58,020
ready to play okay you watch something

1122
00:49:54,510 --> 00:50:00,060
she said that was not on the plan but it

1123
00:49:58,020 --> 00:50:02,250
could be can you give us she asked for

1124
00:50:00,060 --> 00:50:03,060
an implementation but yeah if you have

1125
00:50:02,250 --> 00:50:08,190
anything to add

1126
00:50:03,060 --> 00:50:11,520
for oblivious tienes maybe correct me if

1127
00:50:08,190 --> 00:50:14,970
I'm wrong but oblivious DNS has a

1128
00:50:11,520 --> 00:50:17,520
slightly different adversary model right

1129
00:50:14,970 --> 00:50:20,310
where the idea is that the recursive

1130
00:50:17,520 --> 00:50:24,420
resolver does not there is no mapping

1131
00:50:20,310 --> 00:50:34,370
between the client and the query and we

1132
00:50:24,420 --> 00:50:34,370
are not looking at on path traffic okay

1133
00:50:36,980 --> 00:50:43,580
but yeah we don't we haven't considered

1134
00:50:39,570 --> 00:50:46,200
it yet so far very nice working again

1135
00:50:43,580 --> 00:50:49,080
did you consider like to emulate the

1136
00:50:46,200 --> 00:50:50,220
behavior of a National Security Agency

1137
00:50:49,080 --> 00:50:52,230
or something like that the intelligent

1138
00:50:50,220 --> 00:50:54,180
agency that you have a set of websites

1139
00:50:52,230 --> 00:50:57,720
that you know they don't want you to go

1140
00:50:54,180 --> 00:50:59,910
to and then so we try to fingerprint

1141
00:50:57,720 --> 00:51:01,919
them will do whatever your method is and

1142
00:50:59,910 --> 00:51:04,350
then you get a like domain names on

1143
00:51:01,920 --> 00:51:06,270
various lists or entire DNS zones and

1144
00:51:04,350 --> 00:51:08,580
try to see if an extreme like that you

1145
00:51:06,270 --> 00:51:10,200
would be able to detect them like the

1146
00:51:08,580 --> 00:51:12,360
techie users going to those allegedly

1147
00:51:10,200 --> 00:51:14,850
forbidden web sites

1148
00:51:12,360 --> 00:51:17,520
sorry just to clarify your question is

1149
00:51:14,850 --> 00:51:20,130
whether we are going to analyze such a

1150
00:51:17,520 --> 00:51:22,350
scenario or if your planner would be an

1151
00:51:20,130 --> 00:51:25,160
interesting idea or have any thoughts if

1152
00:51:22,350 --> 00:51:28,200
you would be able to detect that yes so

1153
00:51:25,160 --> 00:51:30,270
as I mentioned in like our censorship

1154
00:51:28,200 --> 00:51:32,970
related work like we have done a

1155
00:51:30,270 --> 00:51:34,950
preliminary analysis at the moment but

1156
00:51:32,970 --> 00:51:38,160
we are thinking of continuing in this

1157
00:51:34,950 --> 00:51:40,500
direction and seeing how whether we can

1158
00:51:38,160 --> 00:51:45,060
have a set of websites and if the user

1159
00:51:40,500 --> 00:51:45,690
can visit those or not yeah thanks hi

1160
00:51:45,060 --> 00:51:49,680
riad Wahby

1161
00:51:45,690 --> 00:51:51,540
nice nice work have you considered are

1162
00:51:49,680 --> 00:51:52,710
there extra features that maybe like

1163
00:51:51,540 --> 00:51:55,110
maybe you're leaving precision and

1164
00:51:52,710 --> 00:51:58,500
recall on the table so for example what

1165
00:51:55,110 --> 00:52:01,510
about inter packet arrival times yes so

1166
00:51:58,500 --> 00:52:03,460
we did an initial feature analysis

1167
00:52:01,510 --> 00:52:06,730
and we did consider into a packet

1168
00:52:03,460 --> 00:52:10,060
arrival times at the moment at that time

1169
00:52:06,730 --> 00:52:11,410
we didn't see that it it increased I

1170
00:52:10,060 --> 00:52:13,240
mean it did increase the precision

1171
00:52:11,410 --> 00:52:16,750
recall but not by much

1172
00:52:13,240 --> 00:52:18,669
and usually we found that using timing

1173
00:52:16,750 --> 00:52:20,850
as a feature can also be complicated

1174
00:52:18,670 --> 00:52:23,470
because it also depends on which

1175
00:52:20,850 --> 00:52:25,930
position the adversary is whether you

1176
00:52:23,470 --> 00:52:28,450
know you're locating the adversary on

1177
00:52:25,930 --> 00:52:30,250
router or know if you we're doing

1178
00:52:28,450 --> 00:52:33,549
measurements right on the client or not

1179
00:52:30,250 --> 00:52:36,810
so that's why we decided not to do the

1180
00:52:33,550 --> 00:52:41,109
timing based features but our initial

1181
00:52:36,810 --> 00:52:43,270
sort of analysis did show that including

1182
00:52:41,109 --> 00:52:56,950
the timing can raise the precision and

1183
00:52:43,270 --> 00:52:59,200
recall by a little bit all right so this

1184
00:52:56,950 --> 00:53:00,368
is going to be I'm gonna truncate this

1185
00:52:59,200 --> 00:53:01,810
presentation because a lot of it

1186
00:53:00,369 --> 00:53:03,190
overlaps with what was just presented

1187
00:53:01,810 --> 00:53:05,320
thank you very much for giving everyone

1188
00:53:03,190 --> 00:53:06,640
in the background necessary this is

1189
00:53:05,320 --> 00:53:08,650
joint work we did with Nikita Boris

1190
00:53:06,640 --> 00:53:10,618
offensive empathy Allah it was presented

1191
00:53:08,650 --> 00:53:16,090
that a nrw workshop earlier this week

1192
00:53:10,619 --> 00:53:17,950
and so just to get right into it as you

1193
00:53:16,090 --> 00:53:20,590
may know and as was just described there

1194
00:53:17,950 --> 00:53:23,470
so the recent shift there's a recent

1195
00:53:20,590 --> 00:53:25,660
shift in focus on privacy in the IETF

1196
00:53:23,470 --> 00:53:28,839
and ITF in general and particularly

1197
00:53:25,660 --> 00:53:31,930
we're trying to protect what resources

1198
00:53:28,840 --> 00:53:34,050
or what applications or what services

1199
00:53:31,930 --> 00:53:36,220
you know particular clients are using

1200
00:53:34,050 --> 00:53:38,470
and there's also that gets the commerce

1201
00:53:36,220 --> 00:53:41,230
or the opposite side of that is what

1202
00:53:38,470 --> 00:53:42,850
we're trying to protect who is accessing

1203
00:53:41,230 --> 00:53:44,609
these particular resources and using

1204
00:53:42,850 --> 00:53:47,500
these services and connections what not

1205
00:53:44,609 --> 00:53:51,520
clearly the former is easier than the

1206
00:53:47,500 --> 00:53:53,590
latter or rather the the former is

1207
00:53:51,520 --> 00:53:54,880
harder than the latter because we have

1208
00:53:53,590 --> 00:53:56,290
very distinguishing identifiers

1209
00:53:54,880 --> 00:53:57,609
currently like IP addresses and other

1210
00:53:56,290 --> 00:53:59,859
things that are in client software so

1211
00:53:57,609 --> 00:54:01,330
that's what I'm gonna focus on and the

1212
00:53:59,859 --> 00:54:02,950
idea has been trying to do a lot of work

1213
00:54:01,330 --> 00:54:05,560
to push in that direction in particular

1214
00:54:02,950 --> 00:54:08,618
rolling out dough and dot and gos

1215
00:54:05,560 --> 00:54:10,150
encrypted S&I all these things are you

1216
00:54:08,619 --> 00:54:12,280
know plugging the various holes that

1217
00:54:10,150 --> 00:54:14,710
have come up over time or that have

1218
00:54:12,280 --> 00:54:15,230
existed for a very long time and hope so

1219
00:54:14,710 --> 00:54:18,410
you know

1220
00:54:15,230 --> 00:54:22,460
eventually masking what is the client

1221
00:54:18,410 --> 00:54:24,799
actually up to on the internet so in

1222
00:54:22,460 --> 00:54:26,359
this particular model more concerned

1223
00:54:24,800 --> 00:54:29,540
about the privacy of a particular

1224
00:54:26,359 --> 00:54:30,920
connection that is used to request a

1225
00:54:29,540 --> 00:54:32,750
particular resource

1226
00:54:30,920 --> 00:54:34,580
we're generally assuming an adversary

1227
00:54:32,750 --> 00:54:36,800
that's local and passive it can observe

1228
00:54:34,580 --> 00:54:39,170
all packets between the client and the

1229
00:54:36,800 --> 00:54:40,480
server and the goal is pretty simple it

1230
00:54:39,170 --> 00:54:42,950
just wants to learn some information

1231
00:54:40,480 --> 00:54:44,600
about that particular connection be it

1232
00:54:42,950 --> 00:54:47,000
you know what resource was actually

1233
00:54:44,600 --> 00:54:49,069
requested perhaps some metadata about

1234
00:54:47,000 --> 00:54:51,260
that resource referring back to in our

1235
00:54:49,070 --> 00:54:54,140
duty paper just describing you know what

1236
00:54:51,260 --> 00:54:56,720
HTTP method was used or sent over this

1237
00:54:54,140 --> 00:54:58,490
particular connection and optionally

1238
00:54:56,720 --> 00:55:02,209
they may also want to link this back to

1239
00:54:58,490 --> 00:55:04,910
a particular client should also know

1240
00:55:02,210 --> 00:55:06,230
that in the real world this is generally

1241
00:55:04,910 --> 00:55:08,299
assumed to be studied in what we call

1242
00:55:06,230 --> 00:55:11,150
the open world model which is where you

1243
00:55:08,300 --> 00:55:12,470
know you you train potentially your

1244
00:55:11,150 --> 00:55:13,820
classifier or whatever it is you're

1245
00:55:12,470 --> 00:55:16,060
doing your initial preliminary

1246
00:55:13,820 --> 00:55:18,770
assessment on on a fixed set of

1247
00:55:16,060 --> 00:55:20,690
connections but what the actual clients

1248
00:55:18,770 --> 00:55:22,550
do in the wild is sort of unpredictable

1249
00:55:20,690 --> 00:55:24,859
and so you're not constrained to that

1250
00:55:22,550 --> 00:55:27,260
what you train your you know initial

1251
00:55:24,859 --> 00:55:29,330
experiments on so the closed world model

1252
00:55:27,260 --> 00:55:31,369
which is generally considered to be much

1253
00:55:29,330 --> 00:55:34,340
easier in this particular problem space

1254
00:55:31,369 --> 00:55:37,760
and what we actually you know for this

1255
00:55:34,340 --> 00:55:39,170
particular work studied of course gives

1256
00:55:37,760 --> 00:55:41,450
better results for classification and

1257
00:55:39,170 --> 00:55:43,670
identification but ultimately goal was

1258
00:55:41,450 --> 00:55:44,810
to focus on the open world and as was

1259
00:55:43,670 --> 00:55:45,950
presented earlier there are lots of

1260
00:55:44,810 --> 00:55:48,369
different features available when you

1261
00:55:45,950 --> 00:55:50,450
want to do this sort of you know

1262
00:55:48,369 --> 00:55:51,590
identification particularly you can look

1263
00:55:50,450 --> 00:55:52,879
at Network addresses you can look at

1264
00:55:51,590 --> 00:55:55,280
packet timing in sizes and all these

1265
00:55:52,880 --> 00:55:58,580
things or even the clear tax information

1266
00:55:55,280 --> 00:56:00,320
that was previously available or is

1267
00:55:58,580 --> 00:56:02,509
currently available depending on what

1268
00:56:00,320 --> 00:56:05,510
client your software you're running in

1269
00:56:02,510 --> 00:56:07,100
this work though the you know we're

1270
00:56:05,510 --> 00:56:11,300
assuming that the things that should

1271
00:56:07,100 --> 00:56:13,100
obviously be encrypted like DNS and sni

1272
00:56:11,300 --> 00:56:14,780
are encrypted we're assuming that we're

1273
00:56:13,100 --> 00:56:16,130
not you know the adversary is not

1274
00:56:14,780 --> 00:56:18,290
looking at packet timing in sizes

1275
00:56:16,130 --> 00:56:19,430
strictly looking at network addresses to

1276
00:56:18,290 --> 00:56:22,460
try and figure out you know what

1277
00:56:19,430 --> 00:56:23,690
particular website or what service a

1278
00:56:22,460 --> 00:56:27,310
particular connection is trying to

1279
00:56:23,690 --> 00:56:27,310
access and

1280
00:56:29,549 --> 00:56:35,250
yeah so if you look at the sort of the

1281
00:56:33,030 --> 00:56:36,450
spectrum of information available to you

1282
00:56:35,250 --> 00:56:38,400
know an adversary wants to do this sort

1283
00:56:36,450 --> 00:56:41,339
of fingerprinting back in the day before

1284
00:56:38,400 --> 00:56:44,460
we had anything from before we had HTS

1285
00:56:41,339 --> 00:56:45,720
and encrypted dns everything was kind of

1286
00:56:44,460 --> 00:56:47,730
sent around in clear text it was very

1287
00:56:45,720 --> 00:56:49,379
easy in her Kaduri for the adversary to

1288
00:56:47,730 --> 00:56:51,690
just simply you know look at what the

1289
00:56:49,380 --> 00:56:53,130
clients were doing and as things have

1290
00:56:51,690 --> 00:56:55,200
sort of become more and more encrypted

1291
00:56:53,130 --> 00:56:58,619
the features that are available sort of

1292
00:56:55,200 --> 00:57:00,899
become a bit more difficult to act on so

1293
00:56:58,619 --> 00:57:03,420
right now if you assume a world where we

1294
00:57:00,900 --> 00:57:05,220
have encrypted s and I encrypted DNS you

1295
00:57:03,420 --> 00:57:07,140
look at information available at the

1296
00:57:05,220 --> 00:57:09,930
network layer so IP addresses you look

1297
00:57:07,140 --> 00:57:11,700
at patterns in the traffic and the goal

1298
00:57:09,930 --> 00:57:13,410
is to strictly identify our fingerprints

1299
00:57:11,700 --> 00:57:16,680
a connection based just on that

1300
00:57:13,410 --> 00:57:18,660
information and the idea this is to kind

1301
00:57:16,680 --> 00:57:21,029
of show claim that it becomes

1302
00:57:18,660 --> 00:57:23,009
increasingly difficult as you obviously

1303
00:57:21,030 --> 00:57:26,010
take away the clear text information on

1304
00:57:23,010 --> 00:57:28,559
the wire so the current state

1305
00:57:26,010 --> 00:57:32,069
assuming you're running perhaps some

1306
00:57:28,559 --> 00:57:33,690
older software and resolving or opening

1307
00:57:32,069 --> 00:57:35,339
up a particular connection in HTS

1308
00:57:33,690 --> 00:57:37,440
connection I have a client the middle

1309
00:57:35,339 --> 00:57:38,819
who sends a clear text query to a DNS

1310
00:57:37,440 --> 00:57:39,869
resolver gets back an answer in clear

1311
00:57:38,819 --> 00:57:41,670
text obviously knows where they're going

1312
00:57:39,869 --> 00:57:44,130
because they see both the query and the

1313
00:57:41,670 --> 00:57:45,750
address everything's fine at least from

1314
00:57:44,130 --> 00:57:47,700
the adversaries perspective and then he

1315
00:57:45,750 --> 00:57:49,559
opens up TCP connection TOS connection

1316
00:57:47,700 --> 00:57:51,270
everything again is exchanged to clear

1317
00:57:49,559 --> 00:57:54,540
and ultimately the resource that they're

1318
00:57:51,270 --> 00:57:55,680
after is encrypted but depending on the

1319
00:57:54,540 --> 00:57:56,819
adversary model again they've already

1320
00:57:55,680 --> 00:57:59,190
learned exactly what you know

1321
00:57:56,819 --> 00:58:00,630
application the client is after so it

1322
00:57:59,190 --> 00:58:03,390
could potentially be game over that

1323
00:58:00,630 --> 00:58:05,460
particular point especially if the goal

1324
00:58:03,390 --> 00:58:10,200
is to censor based on that you know that

1325
00:58:05,460 --> 00:58:13,680
signal but if you add Dolph Dolph dot

1326
00:58:10,200 --> 00:58:16,919
and dough into the mix and yes and I

1327
00:58:13,680 --> 00:58:20,460
lots more things are encrypted but what

1328
00:58:16,920 --> 00:58:22,109
remains currently or you know as

1329
00:58:20,460 --> 00:58:24,510
postulate based on the current designs

1330
00:58:22,109 --> 00:58:28,290
for these things are the ALP values that

1331
00:58:24,510 --> 00:58:29,609
are still setting the clear in a TLS the

1332
00:58:28,290 --> 00:58:31,558
IP address of the server to which you're

1333
00:58:29,609 --> 00:58:33,598
connecting as well as all the other

1334
00:58:31,559 --> 00:58:34,970
network features that were mentioned

1335
00:58:33,599 --> 00:58:38,640
earlier that I'm omitting

1336
00:58:34,970 --> 00:58:41,879
so we're focused rickly on the network

1337
00:58:38,640 --> 00:58:42,299
address again because that is the thesis

1338
00:58:41,880 --> 00:58:44,729
is that

1339
00:58:42,299 --> 00:58:47,969
the sufficiently unique identifying

1340
00:58:44,729 --> 00:58:49,499
information for the connection so the

1341
00:58:47,969 --> 00:58:54,809
experiments that were discussed in the

1342
00:58:49,499 --> 00:58:57,538
paper basically worked as follows go

1343
00:58:54,809 --> 00:58:59,039
grab a massive set of domains and write

1344
00:58:57,539 --> 00:59:02,039
a crawler that goes and connects them

1345
00:58:59,039 --> 00:59:04,349
identifies all the you know the top

1346
00:59:02,039 --> 00:59:06,539
level the IP addresses that are resolved

1347
00:59:04,349 --> 00:59:07,799
from trying or that are returned from

1348
00:59:06,539 --> 00:59:09,449
trying to resolve the top level domains

1349
00:59:07,799 --> 00:59:12,449
as well as the IP addresses from each

1350
00:59:09,449 --> 00:59:14,969
live resource on a particular page do

1351
00:59:12,449 --> 00:59:16,529
the resolution for all of those names to

1352
00:59:14,969 --> 00:59:19,619
be at the top-level domain and all the

1353
00:59:16,529 --> 00:59:22,229
subtrees URLs using CDNs collect all

1354
00:59:19,619 --> 00:59:24,410
this data and then try to see you know

1355
00:59:22,229 --> 00:59:26,218
how we unique these IP addresses are

1356
00:59:24,410 --> 00:59:28,799
fairly straightforward for this

1357
00:59:26,219 --> 00:59:32,069
particular experiment and if you look at

1358
00:59:28,799 --> 00:59:35,160
the anonymity set that results from that

1359
00:59:32,069 --> 00:59:37,229
particular experiment that the data kind

1360
00:59:35,160 --> 00:59:39,239
of suggests that basically there's many

1361
00:59:37,229 --> 00:59:41,009
what we call a unique IP addresses that

1362
00:59:39,239 --> 00:59:44,609
those that fall into you know and not on

1363
00:59:41,009 --> 00:59:47,479
a set of size like one or two and this

1364
00:59:44,609 --> 00:59:50,459
is not you may think it's perhaps

1365
00:59:47,479 --> 00:59:53,910
uncommon as the you know we move towards

1366
00:59:50,459 --> 00:59:55,618
a a you know a world in which a of es

1367
00:59:53,910 --> 00:59:58,049
since you see and everything hosts a lot

1368
00:59:55,619 --> 01:00:00,029
of applications but still there are a

1369
00:59:58,049 --> 01:00:02,369
lot of legacy or legacy there are older

1370
01:00:00,029 --> 01:00:06,319
servers that you know run from behind a

1371
01:00:02,369 --> 01:00:09,869
couch or have a unique IP address that

1372
01:00:06,319 --> 01:00:13,049
simply looking at it can reveal exactly

1373
01:00:09,869 --> 01:00:14,999
where you're going so that's not great

1374
01:00:13,049 --> 01:00:17,069
but again I take this we're going to

1375
01:00:14,999 --> 01:00:19,169
solve in this particular data is

1376
01:00:17,069 --> 01:00:22,410
collected from closed world environments

1377
01:00:19,170 --> 01:00:26,339
so it would become harder to identify

1378
01:00:22,410 --> 01:00:28,439
this or do this set in the open world

1379
01:00:26,339 --> 01:00:31,109
as we're saying earlier if you look at

1380
01:00:28,439 --> 01:00:33,868
if you want to identify for example what

1381
01:00:31,109 --> 01:00:36,808
is the actual page you know a client is

1382
01:00:33,869 --> 01:00:38,849
attempting to access perhaps the logical

1383
01:00:36,809 --> 01:00:40,289
thing would be to look at not just you

1384
01:00:38,849 --> 01:00:42,539
know a single connection that's an

1385
01:00:40,289 --> 01:00:44,609
initiated when loading that page but

1386
01:00:42,539 --> 01:00:46,559
rather the set of connections that are

1387
01:00:44,609 --> 01:00:50,339
initiated when voting that page and all

1388
01:00:46,559 --> 01:00:52,469
of its sub resources so as the on path

1389
01:00:50,339 --> 01:00:54,929
adversary you see things like the DNS

1390
01:00:52,469 --> 01:00:56,560
query patterns you see to us in TCP

1391
01:00:54,929 --> 01:00:58,530
connection pattern

1392
01:00:56,560 --> 01:01:01,270
and the set of these things are often

1393
01:00:58,530 --> 01:01:05,710
should in theory be sufficient or more

1394
01:01:01,270 --> 01:01:07,450
unique than each one on its own so if

1395
01:01:05,710 --> 01:01:08,590
you were to you know as an example if

1396
01:01:07,450 --> 01:01:11,259
you loaded New York Times comm and

1397
01:01:08,590 --> 01:01:13,420
Safari you would see many many TLS

1398
01:01:11,260 --> 01:01:17,590
connections kicked off many many DNS

1399
01:01:13,420 --> 01:01:19,150
requests sent over dough or dot and that

1400
01:01:17,590 --> 01:01:20,800
the union of that set is what we're

1401
01:01:19,150 --> 01:01:24,790
using as the fingerprint for a

1402
01:01:20,800 --> 01:01:26,470
particular page load so the privacy of a

1403
01:01:24,790 --> 01:01:28,000
page load then considers the same exact

1404
01:01:26,470 --> 01:01:30,160
adversary just assumes that the

1405
01:01:28,000 --> 01:01:32,440
adversary has is able to bucket eyes or

1406
01:01:30,160 --> 01:01:36,759
group you know these connections from a

1407
01:01:32,440 --> 01:01:38,380
client into a single event and then use

1408
01:01:36,760 --> 01:01:41,980
that to make a determination as to how

1409
01:01:38,380 --> 01:01:43,750
unique a particular connection is and

1410
01:01:41,980 --> 01:01:46,930
perhaps use that uniqueness to associate

1411
01:01:43,750 --> 01:01:48,910
it with known top-level domains so the

1412
01:01:46,930 --> 01:01:50,859
same features are available or just you

1413
01:01:48,910 --> 01:01:56,020
know expanding the scope a little bit

1414
01:01:50,860 --> 01:01:57,430
here and that pretty much describes or

1415
01:01:56,020 --> 01:01:58,570
shows what I was describing so you go

1416
01:01:57,430 --> 01:02:00,790
from a single connection to multiple

1417
01:01:58,570 --> 01:02:03,870
connections and you look at sums instead

1418
01:02:00,790 --> 01:02:08,380
of individuals very straightforward and

1419
01:02:03,870 --> 01:02:10,299
same thing same thing so the simply

1420
01:02:08,380 --> 01:02:14,860
experiments that were discussed in the

1421
01:02:10,300 --> 01:02:17,590
paper they didn't focus on the very

1422
01:02:14,860 --> 01:02:19,330
large IP address set or domain set that

1423
01:02:17,590 --> 01:02:21,340
was used for the single connection IP

1424
01:02:19,330 --> 01:02:25,779
address uh nominee experiment but rather

1425
01:02:21,340 --> 01:02:27,070
just the top 1 million loaded them using

1426
01:02:25,780 --> 01:02:29,020
their crawler and then compute some

1427
01:02:27,070 --> 01:02:34,030
basic statistics for example how many

1428
01:02:29,020 --> 01:02:36,100
unique URLs are you know reference upon

1429
01:02:34,030 --> 01:02:37,360
loading each individual page you know

1430
01:02:36,100 --> 01:02:39,279
how many different domains is that

1431
01:02:37,360 --> 01:02:43,420
kick-off underneath the hood to see how

1432
01:02:39,280 --> 01:02:46,060
many connections you're making and the

1433
01:02:43,420 --> 01:02:49,000
results of you know doing that looking

1434
01:02:46,060 --> 01:02:51,310
at the number of unique IP addresses or

1435
01:02:49,000 --> 01:02:53,770
the number of unique page little

1436
01:02:51,310 --> 01:02:56,200
fingerprints that came out of it it's

1437
01:02:53,770 --> 01:02:58,120
basically here so you can see if you

1438
01:02:56,200 --> 01:03:00,310
look at the x axis the anonymous head

1439
01:02:58,120 --> 01:03:03,670
size significant significantly shifts to

1440
01:03:00,310 --> 01:03:06,549
the left basically suggesting that by

1441
01:03:03,670 --> 01:03:08,150
looking at the some of these connections

1442
01:03:06,550 --> 01:03:10,760
and grouping them

1443
01:03:08,150 --> 01:03:13,940
two individual payloads the anomaly set

1444
01:03:10,760 --> 01:03:18,410
or the uniqueness goes up which matches

1445
01:03:13,940 --> 01:03:23,720
our intuition again closed world open

1446
01:03:18,410 --> 01:03:26,299
world so still could be improved so the

1447
01:03:23,720 --> 01:03:28,040
the conclusions we kind of draw from

1448
01:03:26,300 --> 01:03:30,140
this very very you know preliminary

1449
01:03:28,040 --> 01:03:32,330
research is still ongoing as that

1450
01:03:30,140 --> 01:03:35,089
clearly we need some sort of encryption

1451
01:03:32,330 --> 01:03:36,319
of obviously clear text holes to get

1452
01:03:35,090 --> 01:03:38,960
some sort of notion of connection

1453
01:03:36,320 --> 01:03:40,820
privacy and we need some sort of notion

1454
01:03:38,960 --> 01:03:45,770
of connection privacy to get some notion

1455
01:03:40,820 --> 01:03:47,360
of page book privacy and I think perhaps

1456
01:03:45,770 --> 01:03:48,950
that's like the ultimate goal of a lot

1457
01:03:47,360 --> 01:03:50,780
of these things I mean encrypted sni and

1458
01:03:48,950 --> 01:03:52,640
doand dot are great in that they're

1459
01:03:50,780 --> 01:03:55,460
focusing specifically on the connection

1460
01:03:52,640 --> 01:03:57,020
privacy but you know perhaps there's

1461
01:03:55,460 --> 01:04:00,320
more that could be done to get towards

1462
01:03:57,020 --> 01:04:02,810
the the larger bigger picture that we're

1463
01:04:00,320 --> 01:04:04,190
trying to protect there are a lot of

1464
01:04:02,810 --> 01:04:05,270
related issues here and things that

1465
01:04:04,190 --> 01:04:07,760
potentially not considered in this

1466
01:04:05,270 --> 01:04:08,810
experiment and particularly equity of

1467
01:04:07,760 --> 01:04:10,520
have a client that's doing happy

1468
01:04:08,810 --> 01:04:11,990
eyeballs to race connections across

1469
01:04:10,520 --> 01:04:15,140
address families or even across

1470
01:04:11,990 --> 01:04:16,580
interfaces that might be worse in some

1471
01:04:15,140 --> 01:04:18,379
ways because you're simply giving the

1472
01:04:16,580 --> 01:04:21,770
network more information about where

1473
01:04:18,380 --> 01:04:23,690
you're trying to go so it is great for

1474
01:04:21,770 --> 01:04:24,830
performance as clearly demonstrated by

1475
01:04:23,690 --> 01:04:27,380
all the clients that are implementing it

1476
01:04:24,830 --> 01:04:29,000
and the benefits that it brings however

1477
01:04:27,380 --> 01:04:32,210
from this particular spective it might

1478
01:04:29,000 --> 01:04:34,580
make things a little bit easier for the

1479
01:04:32,210 --> 01:04:36,230
adversary which is not necessarily great

1480
01:04:34,580 --> 01:04:38,779
over on the plus side the things that

1481
01:04:36,230 --> 01:04:41,330
we're doing in the HP biz to coalesce

1482
01:04:38,780 --> 01:04:43,190
connections with secondary certs it's

1483
01:04:41,330 --> 01:04:45,590
great because that potentially shoves

1484
01:04:43,190 --> 01:04:49,730
more requests along a single connection

1485
01:04:45,590 --> 01:04:51,830
and makes it's effectively removing

1486
01:04:49,730 --> 01:04:53,510
information from pages of fingerprints

1487
01:04:51,830 --> 01:04:56,360
that would have otherwise you know spun

1488
01:04:53,510 --> 01:04:58,310
up new connections and perhaps add to

1489
01:04:56,360 --> 01:05:00,790
the amount of uniqueness that exists for

1490
01:04:58,310 --> 01:05:02,840
a particular patient fingerprint

1491
01:05:00,790 --> 01:05:05,330
consolidation within a single CDN as

1492
01:05:02,840 --> 01:05:06,800
well also helps because you have single

1493
01:05:05,330 --> 01:05:08,750
connections that you know basically

1494
01:05:06,800 --> 01:05:10,730
clients are tethering to the CDN and

1495
01:05:08,750 --> 01:05:13,250
then sending all their connections and

1496
01:05:10,730 --> 01:05:14,780
all their requests over it you can also

1497
01:05:13,250 --> 01:05:17,510
do things like deploy proxies that hide

1498
01:05:14,780 --> 01:05:19,280
the IP address and you know that that

1499
01:05:17,510 --> 01:05:22,400
solves a lot of issues in perhaps let's

1500
01:05:19,280 --> 01:05:24,799
see even the most obvious way forward

1501
01:05:22,400 --> 01:05:27,650
and then there's also things that have

1502
01:05:24,799 --> 01:05:30,950
sort of heard us especially with respect

1503
01:05:27,650 --> 01:05:33,049
to yes and I but in this case may help

1504
01:05:30,950 --> 01:05:35,118
and then it's deenis load balancers that

1505
01:05:33,049 --> 01:05:37,520
are you know constantly changing the IP

1506
01:05:35,119 --> 01:05:40,670
address that you land on so making it

1507
01:05:37,520 --> 01:05:42,500
not easy to you know just identify a

1508
01:05:40,670 --> 01:05:44,329
particular service by a specific IP

1509
01:05:42,500 --> 01:05:45,770
address I mean you could do fancy things

1510
01:05:44,329 --> 01:05:47,599
by potentially trying to identify the

1511
01:05:45,770 --> 01:05:49,849
ASN that to which that IP address

1512
01:05:47,599 --> 01:05:52,010
belongs and then associating you know

1513
01:05:49,849 --> 01:05:53,540
you know the IP addresses of particular

1514
01:05:52,010 --> 01:05:55,730
connections with asons and then looking

1515
01:05:53,540 --> 01:05:58,308
at the Union or the set of asons that

1516
01:05:55,730 --> 01:06:02,089
result from a particular connection and

1517
01:05:58,309 --> 01:06:03,349
using that to identify a PLF but that

1518
01:06:02,089 --> 01:06:06,109
has not been done yet

1519
01:06:03,349 --> 01:06:10,430
so perhaps that's an interesting or you

1520
01:06:06,109 --> 01:06:13,670
know useful way forward so I guess in

1521
01:06:10,430 --> 01:06:15,049
general the the the purpose of this work

1522
01:06:13,670 --> 01:06:20,960
was the shorter show that the the

1523
01:06:15,049 --> 01:06:24,020
intuitive I guess it's a rather

1524
01:06:20,960 --> 01:06:26,299
intuitive observation that yes

1525
01:06:24,020 --> 01:06:28,549
taking away clear text information from

1526
01:06:26,299 --> 01:06:32,089
the network is a good thing because it

1527
01:06:28,549 --> 01:06:35,089
removes obviously the very clear privacy

1528
01:06:32,089 --> 01:06:38,540
holes on the network but there are still

1529
01:06:35,089 --> 01:06:40,279
things that need to be fixed but this

1530
01:06:38,540 --> 01:06:41,630
particular problem website

1531
01:06:40,280 --> 01:06:45,500
fingerprinting based solely on address

1532
01:06:41,630 --> 01:06:47,540
information seems to be coming harder

1533
01:06:45,500 --> 01:06:49,099
based on the work that the ITF is

1534
01:06:47,540 --> 01:06:50,349
actively doing which is a good sign I

1535
01:06:49,099 --> 01:06:53,000
think

1536
01:06:50,349 --> 01:06:55,010
but then writing back to the previous

1537
01:06:53,000 --> 01:06:57,619
presentation it's unclear what that

1538
01:06:55,010 --> 01:06:58,970
means for the the other side or the

1539
01:06:57,619 --> 01:07:00,740
other information that the adversary has

1540
01:06:58,970 --> 01:07:03,348
available to them for example so they

1541
01:07:00,740 --> 01:07:04,520
shift their focus towards traffic

1542
01:07:03,349 --> 01:07:06,980
analysis in which they are using

1543
01:07:04,520 --> 01:07:09,799
information such as timing inter inter

1544
01:07:06,980 --> 01:07:12,530
arrival time the sizes of packets that

1545
01:07:09,799 --> 01:07:14,660
are sent to sort of infer what that what

1546
01:07:12,530 --> 01:07:16,760
the client is doing on the network and

1547
01:07:14,660 --> 01:07:18,259
this is something that tor and the

1548
01:07:16,760 --> 01:07:19,970
academic research communities have been

1549
01:07:18,260 --> 01:07:22,339
struggling with for a very long time and

1550
01:07:19,970 --> 01:07:23,720
continue struggling with website

1551
01:07:22,339 --> 01:07:26,960
fingerprinting just has a number of

1552
01:07:23,720 --> 01:07:29,540
different papers some of which we've

1553
01:07:26,960 --> 01:07:31,490
tried to collate along with our in

1554
01:07:29,540 --> 01:07:33,529
collaboration with Ian Goldberg sort of

1555
01:07:31,490 --> 01:07:35,569
a repository of you know all the known

1556
01:07:33,530 --> 01:07:39,160
attacks in this particular area

1557
01:07:35,570 --> 01:07:42,740
looking at how bad traffic analysis is

1558
01:07:39,160 --> 01:07:43,819
for you known on Thor connections of

1559
01:07:42,740 --> 01:07:46,879
course much of the research is done in

1560
01:07:43,820 --> 01:07:48,500
tour but it applies equally as well if

1561
01:07:46,880 --> 01:07:50,030
not more to you know non Thor

1562
01:07:48,500 --> 01:07:53,960
connections which don't do things like

1563
01:07:50,030 --> 01:07:56,120
fix cell padding to mitigate obvious or

1564
01:07:53,960 --> 01:07:58,280
obvious or to make traffic analysis just

1565
01:07:56,120 --> 01:08:00,950
a little bit harder so I think next

1566
01:07:58,280 --> 01:08:02,750
steps for this are to really kind of

1567
01:08:00,950 --> 01:08:03,799
encourage people to take this problem a

1568
01:08:02,750 --> 01:08:07,370
bit more seriously if they're not

1569
01:08:03,800 --> 01:08:08,840
already and that means like asking

1570
01:08:07,370 --> 01:08:10,730
people to do more research in this area

1571
01:08:08,840 --> 01:08:12,770
such I mean Nikita and others are

1572
01:08:10,730 --> 01:08:14,060
obviously doing it we should for them to

1573
01:08:12,770 --> 01:08:16,010
keep going

1574
01:08:14,060 --> 01:08:17,779
I think documenting to the gnome

1575
01:08:16,010 --> 01:08:19,549
research that's been done in the area is

1576
01:08:17,779 --> 01:08:21,469
also quite useful if you know the reason

1577
01:08:19,549 --> 01:08:24,560
to having for having it you know a

1578
01:08:21,470 --> 01:08:26,930
single reference that we can use to you

1579
01:08:24,560 --> 01:08:29,000
know either assess or assess

1580
01:08:26,930 --> 01:08:31,280
countermeasures or you know sanity check

1581
01:08:29,000 --> 01:08:32,660
to make sure you know I just don't learn

1582
01:08:31,279 --> 01:08:34,729
whether or not you know something that

1583
01:08:32,660 --> 01:08:39,080
hasn't been done actually indeed has

1584
01:08:34,729 --> 01:08:41,149
been done and then you know perhaps IV

1585
01:08:39,080 --> 01:08:42,649
III RTF or the ITF can like work with

1586
01:08:41,149 --> 01:08:46,099
these people who are actively working on

1587
01:08:42,649 --> 01:08:49,910
these problems to develop mitigations to

1588
01:08:46,100 --> 01:08:52,640
see you know what's effective and from a

1589
01:08:49,910 --> 01:08:54,049
you know cost performance perspective so

1590
01:08:52,640 --> 01:08:56,060
for example the previous presentation

1591
01:08:54,049 --> 01:08:58,279
like here we got good results from

1592
01:08:56,060 --> 01:08:59,930
sending dns over tor but it's you know

1593
01:08:58,279 --> 01:09:02,080
there's a performance hit there so what

1594
01:08:59,930 --> 01:09:04,580
is finding that right trade-off is

1595
01:09:02,080 --> 01:09:06,500
difficult and so perhaps something we

1596
01:09:04,580 --> 01:09:10,460
should implore IETF and I urge you have

1597
01:09:06,500 --> 01:09:11,319
to be working on so that's pretty much

1598
01:09:10,460 --> 01:09:16,899
it

1599
01:09:11,319 --> 01:09:16,900
happy to take any questions questions

1600
01:09:21,380 --> 01:09:26,480
hi Chris Dave Wonka Akamai thanks for

1601
01:09:24,979 --> 01:09:28,009
presenting this and presenting something

1602
01:09:26,479 --> 01:09:29,479
different about it then what was adding

1603
01:09:28,010 --> 01:09:32,720
in our W I was afraid this game using

1604
01:09:29,479 --> 01:09:34,639
things I'm talking the couple of things

1605
01:09:32,720 --> 01:09:35,480
I wanted to mention and you can figure

1606
01:09:34,640 --> 01:09:37,850
out if they're questions or just

1607
01:09:35,479 --> 01:09:39,589
comments I've been working on anonymity

1608
01:09:37,850 --> 01:09:42,130
sets on the client side instead of the

1609
01:09:39,589 --> 01:09:44,990
server side so that we can report on

1610
01:09:42,130 --> 01:09:47,029
activity in the web based on clients and

1611
01:09:44,990 --> 01:09:48,238
what it struck me from what you've shown

1612
01:09:47,029 --> 01:09:50,788
here and

1613
01:09:48,238 --> 01:09:52,828
what the page load combinations show is

1614
01:09:50,788 --> 01:09:54,809
clearly the solution for creating

1615
01:09:52,828 --> 01:09:56,130
anonymity sets based on aggregation on

1616
01:09:54,809 --> 01:09:57,869
clients that are very different than the

1617
01:09:56,130 --> 01:09:59,519
server-side so it's completely

1618
01:09:57,869 --> 01:10:01,650
complimentary to what we're doing in map

1619
01:09:59,519 --> 01:10:03,210
Archy and then this last hackathon i was

1620
01:10:01,650 --> 01:10:04,589
writing code to see and i notice oh

1621
01:10:03,210 --> 01:10:07,019
they're so and we're going to talk about

1622
01:10:04,590 --> 01:10:08,730
that on friday mornings so you know

1623
01:10:07,019 --> 01:10:12,690
whoever wants to work on this let's get

1624
01:10:08,730 --> 01:10:15,388
to talking about that and then well I'll

1625
01:10:12,690 --> 01:10:16,440
stop because I will be there from frg

1626
01:10:15,389 --> 01:10:19,110
but I'll sync up with you and we can

1627
01:10:16,440 --> 01:10:21,509
talk about it perhaps afterwards yeah

1628
01:10:19,110 --> 01:10:24,630
hey Chris we had um just a quick thing

1629
01:10:21,510 --> 01:10:27,239
can you go back to the second graph that

1630
01:10:24,630 --> 01:10:29,219
you showed us with the buckets so from

1631
01:10:27,239 --> 01:10:31,110
this it looks like anonymity set of two

1632
01:10:29,219 --> 01:10:33,510
is two orders of magnitude smaller than

1633
01:10:31,110 --> 01:10:36,960
an amenity set of one so if we sum up

1634
01:10:33,510 --> 01:10:39,840
everything that means that like 95% of

1635
01:10:36,960 --> 01:10:47,809
web sites can be identified yes it was a

1636
01:10:39,840 --> 01:10:50,400
very high number two quick questions

1637
01:10:47,809 --> 01:10:52,769
you mentioned load balancing in Aires

1638
01:10:50,400 --> 01:10:55,440
were you saying that load balancers our

1639
01:10:52,769 --> 01:10:57,329
anniversary just no no just that

1640
01:10:55,440 --> 01:10:58,558
dns-based boat balancers might give you

1641
01:10:57,329 --> 01:10:59,909
different IP addresses if you try to

1642
01:10:58,559 --> 01:11:02,369
resolve the same name over and over

1643
01:10:59,909 --> 01:11:05,159
again so a simple you know and naive

1644
01:11:02,369 --> 01:11:06,839
approach to trying to map name to IP

1645
01:11:05,159 --> 01:11:08,820
address and looking at the first result

1646
01:11:06,840 --> 01:11:11,760
that comes back might not always work

1647
01:11:08,820 --> 01:11:13,499
because the answer will change on Nick

1648
01:11:11,760 --> 01:11:17,610
Sullivan so Chris what about the

1649
01:11:13,499 --> 01:11:20,489
children no no no but seriously this is

1650
01:11:17,610 --> 01:11:23,820
dealing with passive adversary's have

1651
01:11:20,489 --> 01:11:28,018
you thought of adversaries that are more

1652
01:11:23,820 --> 01:11:30,869
actively trying to subvert such types of

1653
01:11:28,019 --> 01:11:34,199
anonymity protections no not yet

1654
01:11:30,869 --> 01:11:35,579
I'm hopeful that Nikita and the group

1655
01:11:34,199 --> 01:11:36,749
that's working on it can you know start

1656
01:11:35,579 --> 01:11:42,179
taking that a little bit more seriously

1657
01:11:36,749 --> 01:11:44,239
yeah sorry sorry we can talk offline if

1658
01:11:42,179 --> 01:11:47,780
you wish and and the meaningless also

1659
01:11:44,239 --> 01:11:47,780
thank you thanks

1660
01:11:57,230 --> 01:12:01,650
all right my name is Rowan fresh-picked

1661
01:11:59,400 --> 01:12:03,450
I work for an omlette labs this is joint

1662
01:12:01,650 --> 01:12:06,120
work with high scanners who was my

1663
01:12:03,450 --> 01:12:09,120
master student mad-eye's one loaf and

1664
01:12:06,120 --> 01:12:11,840
Luca Elodie from historian and Technical

1665
01:12:09,120 --> 01:12:14,970
University of Eindhoven respectively

1666
01:12:11,840 --> 01:12:16,230
right so it feels like we're repeating

1667
01:12:14,970 --> 01:12:18,540
ourselves here because I think somebody

1668
01:12:16,230 --> 01:12:19,830
had a similar slide and the person

1669
01:12:18,540 --> 01:12:21,840
before me had a similar slide and the

1670
01:12:19,830 --> 01:12:24,180
IETF is focusing on protecting people's

1671
01:12:21,840 --> 01:12:26,280
privacy which is great we have things

1672
01:12:24,180 --> 01:12:29,430
like deprive we have DNS over TLS we

1673
01:12:26,280 --> 01:12:31,410
have a lot of buzz around toh but the

1674
01:12:29,430 --> 01:12:33,720
focus of all of this is mostly on

1675
01:12:31,410 --> 01:12:35,250
privacy of traffic in flight right so

1676
01:12:33,720 --> 01:12:38,820
we're trying to protect traffic from

1677
01:12:35,250 --> 01:12:40,560
adversaries that are on the network but

1678
01:12:38,820 --> 01:12:43,080
if you look at the domain name system

1679
01:12:40,560 --> 01:12:44,610
there is a sort of an obvious elephant

1680
01:12:43,080 --> 01:12:47,430
in the room which is the operator of the

1681
01:12:44,610 --> 01:12:49,650
resolver that even if you protect all

1682
01:12:47,430 --> 01:12:51,510
the traffic in flight still has access

1683
01:12:49,650 --> 01:12:54,540
to your traffic and then they might

1684
01:12:51,510 --> 01:12:59,250
actually have legitimate reasons for

1685
01:12:54,540 --> 01:13:02,070
doing so right if you are in enterprise

1686
01:12:59,250 --> 01:13:03,990
network you may want to use DNS to

1687
01:13:02,070 --> 01:13:05,639
detect indicators of compromised people

1688
01:13:03,990 --> 01:13:08,490
that are infected with malware on your

1689
01:13:05,640 --> 01:13:10,470
network or you want to be able to

1690
01:13:08,490 --> 01:13:13,920
monitor our threats in large user bases

1691
01:13:10,470 --> 01:13:15,540
for example court 9 does that they have

1692
01:13:13,920 --> 01:13:17,580
a very strict privacy policy but they

1693
01:13:15,540 --> 01:13:19,830
still inspect traffic in order to detect

1694
01:13:17,580 --> 01:13:23,100
malicious behavior in in larger

1695
01:13:19,830 --> 01:13:25,500
populations that user resolver so it is

1696
01:13:23,100 --> 01:13:29,130
probably too easy to say they shouldn't

1697
01:13:25,500 --> 01:13:30,960
do this but what we wondered is can we

1698
01:13:29,130 --> 01:13:33,210
find a better way of doing that that

1699
01:13:30,960 --> 01:13:36,840
sort of provides some privacy guarantees

1700
01:13:33,210 --> 01:13:39,750
for users when we're inspecting traffic

1701
01:13:36,840 --> 01:13:41,610
on the result for itself so what we did

1702
01:13:39,750 --> 01:13:44,430
is my master student developed a

1703
01:13:41,610 --> 01:13:46,230
potential solution for this which uses

1704
01:13:44,430 --> 01:13:47,580
something called that is called bloom

1705
01:13:46,230 --> 01:13:49,530
filters which some of you may be

1706
01:13:47,580 --> 01:13:52,230
familiar with but I'll explain it in the

1707
01:13:49,530 --> 01:13:54,090
next couple of slides more importantly

1708
01:13:52,230 --> 01:13:56,490
we have a working prototype which is

1709
01:13:54,090 --> 01:13:58,170
open source Oh URL is on one of the last

1710
01:13:56,490 --> 01:14:00,780
slides if you want to have a play with

1711
01:13:58,170 --> 01:14:02,640
it it's very much a prototype but it

1712
01:14:00,780 --> 01:14:04,409
gives you some idea what it does and we

1713
01:14:02,640 --> 01:14:05,789
tested this in production at surf

1714
01:14:04,409 --> 01:14:07,978
that's the national research and

1715
01:14:05,789 --> 01:14:10,169
education network in the Netherlands on

1716
01:14:07,979 --> 01:14:15,289
resolvers that have a client base of

1717
01:14:10,169 --> 01:14:18,689
roughly 200 to 250 thousand users right

1718
01:14:15,289 --> 01:14:20,489
so first up bloom filters so bloom

1719
01:14:18,689 --> 01:14:22,800
portals really were developed in the

1720
01:14:20,489 --> 01:14:26,039
1970s just basically there are a method

1721
01:14:22,800 --> 01:14:28,800
to speed up database lookups and they

1722
01:14:26,039 --> 01:14:30,840
are a highly efficient mechanism so

1723
01:14:28,800 --> 01:14:34,199
insertion and look up is is roughly

1724
01:14:30,840 --> 01:14:38,820
order one and basically you can think of

1725
01:14:34,199 --> 01:14:43,320
a bloom filter as a probabilistic set so

1726
01:14:38,820 --> 01:14:44,579
if you have an element in that has a may

1727
01:14:43,320 --> 01:14:46,739
or may not have been inserted into the

1728
01:14:44,579 --> 01:14:50,280
filter then you and and if you query a

1729
01:14:46,739 --> 01:14:52,768
filter then if the the filter says it's

1730
01:14:50,280 --> 01:14:55,679
not in there and it's guaranteed not to

1731
01:14:52,769 --> 01:14:57,389
be a member of the of the set if it says

1732
01:14:55,679 --> 01:14:59,729
yes this is a member of the of the

1733
01:14:57,389 --> 01:15:01,439
filter then there is a small probability

1734
01:14:59,729 --> 01:15:02,699
that this is a false positive but it's

1735
01:15:01,439 --> 01:15:05,999
highly likely that that particular

1736
01:15:02,699 --> 01:15:08,610
element is in the set so how does this

1737
01:15:05,999 --> 01:15:10,199
work you take for example a domain name

1738
01:15:08,610 --> 01:15:11,699
you run that through a set of hash

1739
01:15:10,199 --> 01:15:13,888
functions then you get some output this

1740
01:15:11,699 --> 01:15:16,739
is actually the sha-256 hash of that

1741
01:15:13,889 --> 01:15:19,590
particular domain name you use each of

1742
01:15:16,739 --> 01:15:22,339
the you use parts of the hash or the

1743
01:15:19,590 --> 01:15:25,979
different hash functions from multiple

1744
01:15:22,340 --> 01:15:30,570
hash functions as indices in a bit array

1745
01:15:25,979 --> 01:15:33,630
and then you flip the bits to one if at

1746
01:15:30,570 --> 01:15:35,728
a particular index so on the left hand

1747
01:15:33,630 --> 01:15:38,429
side you see insertions so we insert

1748
01:15:35,729 --> 01:15:40,050
example a common example or here as an

1749
01:15:38,429 --> 01:15:42,989
example this is a toy example Donnie

1750
01:15:40,050 --> 01:15:44,999
eight bits in the weight set and then if

1751
01:15:42,989 --> 01:15:49,799
you do a lookup you go through the same

1752
01:15:44,999 --> 01:15:51,749
process and if there is at least one bit

1753
01:15:49,800 --> 01:15:53,189
set to zero then the element that you're

1754
01:15:51,749 --> 01:15:54,780
looking for is guaranteed not to be in

1755
01:15:53,189 --> 01:15:57,119
the filter and if they of all of them

1756
01:15:54,780 --> 01:16:00,050
are set to one then it is either in the

1757
01:15:57,119 --> 01:16:04,978
filter or it was a false positive right

1758
01:16:00,050 --> 01:16:07,559
so with a bloom filter you have

1759
01:16:04,979 --> 01:16:09,300
basically have a trade-off between the

1760
01:16:07,559 --> 01:16:10,650
false positive rate and a reasonable

1761
01:16:09,300 --> 01:16:12,959
filter size so you don't want to have

1762
01:16:10,650 --> 01:16:15,659
huge filters huge bits as you need to

1763
01:16:12,959 --> 01:16:18,210
keep in memory but you also want to keep

1764
01:16:15,659 --> 01:16:20,099
your false positive rate relatively low

1765
01:16:18,210 --> 01:16:21,570
and the parameters that you use for that

1766
01:16:20,100 --> 01:16:23,760
is the number of hash functions that you

1767
01:16:21,570 --> 01:16:27,179
use or rather the number of indices that

1768
01:16:23,760 --> 01:16:30,360
you extract from the hash to sort of set

1769
01:16:27,180 --> 01:16:33,360
flip bits in the filter the size of the

1770
01:16:30,360 --> 01:16:34,950
bit array and the expected number of

1771
01:16:33,360 --> 01:16:36,660
elements that you expect to insert into

1772
01:16:34,950 --> 01:16:39,120
the set and then the formula on the

1773
01:16:36,660 --> 01:16:43,080
slide gives you a rough estimation of

1774
01:16:39,120 --> 01:16:46,559
the false positive probability now the

1775
01:16:43,080 --> 01:16:49,140
idea that we had was that you what you

1776
01:16:46,560 --> 01:16:51,000
could do is to take all of the queries

1777
01:16:49,140 --> 01:16:52,320
from your clients and insert T's into a

1778
01:16:51,000 --> 01:16:53,700
bloom filter and this is actually

1779
01:16:52,320 --> 01:16:55,950
interesting this is a methodology that's

1780
01:16:53,700 --> 01:16:58,320
already used to find things like new you

1781
01:16:55,950 --> 01:17:00,720
observe domains for example I think

1782
01:16:58,320 --> 01:17:04,110
power DNS has an implementation that

1783
01:17:00,720 --> 01:17:06,930
does that but what we wanted to do was

1784
01:17:04,110 --> 01:17:08,910
use this information to check if a name

1785
01:17:06,930 --> 01:17:10,680
was queried for but we don't were not

1786
01:17:08,910 --> 01:17:13,470
interested in by whom that name was

1787
01:17:10,680 --> 01:17:15,240
queried for and exactly when so what we

1788
01:17:13,470 --> 01:17:17,130
want to do with this is to perform

1789
01:17:15,240 --> 01:17:18,690
network level threat monitoring so we

1790
01:17:17,130 --> 01:17:20,490
won't say that we have a domain name

1791
01:17:18,690 --> 01:17:22,679
that we know is malicious we want to be

1792
01:17:20,490 --> 01:17:25,530
able to say within a certain frame time

1793
01:17:22,680 --> 01:17:29,400
frame did anybody ever query that name

1794
01:17:25,530 --> 01:17:30,840
in our network and the bloom filters

1795
01:17:29,400 --> 01:17:32,580
give you some nice properties with that

1796
01:17:30,840 --> 01:17:34,140
because there are non enumerable as soon

1797
01:17:32,580 --> 01:17:35,580
as I've inserted something I have no

1798
01:17:34,140 --> 01:17:37,950
clue what I insert anymore because it's

1799
01:17:35,580 --> 01:17:41,010
turned into some a few random bits that

1800
01:17:37,950 --> 01:17:42,870
I flip in a filter if I makes queries

1801
01:17:41,010 --> 01:17:44,220
for lots of users into a single filter

1802
01:17:42,870 --> 01:17:47,210
it becomes really hard to sort of

1803
01:17:44,220 --> 01:17:49,530
distinguish queries from individuals and

1804
01:17:47,210 --> 01:17:50,880
what is also interesting is that due to

1805
01:17:49,530 --> 01:17:52,710
the mathematical properties of bloom

1806
01:17:50,880 --> 01:17:54,060
filters we can actually take multiple

1807
01:17:52,710 --> 01:17:57,150
filters and combine them into a single

1808
01:17:54,060 --> 01:17:59,520
filter which has a higher false positive

1809
01:17:57,150 --> 01:18:05,190
probability but contains more data and

1810
01:17:59,520 --> 01:18:06,750
thus anonymizes even more so what are

1811
01:18:05,190 --> 01:18:09,360
the prototype that my student develop

1812
01:18:06,750 --> 01:18:11,280
does is that it has sort of an auto

1813
01:18:09,360 --> 01:18:13,740
tuning mode that you can run it in

1814
01:18:11,280 --> 01:18:15,690
against your resolver for say a few days

1815
01:18:13,740 --> 01:18:18,809
to see where your curry pattern looks

1816
01:18:15,690 --> 01:18:20,370
like and then it will suggest bloom

1817
01:18:18,810 --> 01:18:22,080
filter parameters that you can set in

1818
01:18:20,370 --> 01:18:26,630
order to have a certain false positive

1819
01:18:22,080 --> 01:18:29,710
probability so we for example want to do

1820
01:18:26,630 --> 01:18:31,630
hourly filters in our experiment

1821
01:18:29,710 --> 01:18:33,550
and we want to be able to aggregate

1822
01:18:31,630 --> 01:18:35,440
these two single day so we want to

1823
01:18:33,550 --> 01:18:36,970
combine 24-hour lis filters into a

1824
01:18:35,440 --> 01:18:38,950
single filter for a day when we do

1825
01:18:36,970 --> 01:18:40,510
aggregation and we would like to have a

1826
01:18:38,950 --> 01:18:46,420
false positive probability probability

1827
01:18:40,510 --> 01:18:48,730
of 100,000 for the daily filters and

1828
01:18:46,420 --> 01:18:51,280
what the graph shows you is that it's

1829
01:18:48,730 --> 01:18:52,870
important to do the tuning because if

1830
01:18:51,280 --> 01:18:54,190
you look at the number of distinct query

1831
01:18:52,870 --> 01:18:56,800
names that you see in a day on a

1832
01:18:54,190 --> 01:18:59,320
resolver then on an hourly basis is that

1833
01:18:56,800 --> 01:19:03,300
it's the red line so that's anywhere

1834
01:18:59,320 --> 01:19:05,799
between so it's roughly 4 million query

1835
01:19:03,300 --> 01:19:08,200
distinct names within an hour that we

1836
01:19:05,800 --> 01:19:09,850
see but if you look at this on a daily

1837
01:19:08,200 --> 01:19:11,650
scale the number becomes much higher and

1838
01:19:09,850 --> 01:19:19,150
you see roughly 30 million distinct

1839
01:19:11,650 --> 01:19:20,500
names in a single day now the future

1840
01:19:19,150 --> 01:19:22,240
extension that we want to do is that it

1841
01:19:20,500 --> 01:19:24,040
keeps automatically tuning so what it

1842
01:19:22,240 --> 01:19:25,510
will do is it will ensure that all of

1843
01:19:24,040 --> 01:19:27,400
the filters for a single Bay in Bay can

1844
01:19:25,510 --> 01:19:29,620
be aggregated but it will use the

1845
01:19:27,400 --> 01:19:31,269
predictions from the previous day to set

1846
01:19:29,620 --> 01:19:32,290
up the filters for the next day so that

1847
01:19:31,270 --> 01:19:37,210
you can you don't have to come to

1848
01:19:32,290 --> 01:19:39,100
constantly manage the system so what do

1849
01:19:37,210 --> 01:19:41,170
we put in there what we wanted to be

1850
01:19:39,100 --> 01:19:42,550
able to do so surfing it is a large

1851
01:19:41,170 --> 01:19:44,470
research network it has many

1852
01:19:42,550 --> 01:19:46,600
universities connected and has schools

1853
01:19:44,470 --> 01:19:47,830
connected to it to this and what we

1854
01:19:46,600 --> 01:19:49,510
wanted to do was to be able to

1855
01:19:47,830 --> 01:19:50,980
distinguish queries from different

1856
01:19:49,510 --> 01:19:53,980
institutions but not from different

1857
01:19:50,980 --> 01:19:55,719
users so basically the the things that

1858
01:19:53,980 --> 01:19:58,059
we insert in the in the filter on this

1859
01:19:55,720 --> 01:20:00,640
slide so if we have say evil domain

1860
01:19:58,060 --> 01:20:03,090
Lacombe then we will insert both the

1861
01:20:00,640 --> 01:20:05,740
second-level all of the labels but also

1862
01:20:03,090 --> 01:20:07,420
organization a at evil domain a comb for

1863
01:20:05,740 --> 01:20:10,540
the specific network that that query

1864
01:20:07,420 --> 01:20:13,390
came from such that and this means that

1865
01:20:10,540 --> 01:20:15,100
if we want to say we we get an indicator

1866
01:20:13,390 --> 01:20:16,810
of compromise we want to work out if

1867
01:20:15,100 --> 01:20:18,820
that indicator of compromise was ever

1868
01:20:16,810 --> 01:20:20,560
seen on the network we can put it in a

1869
01:20:18,820 --> 01:20:22,900
bloom filter in hotels if it was seen

1870
01:20:20,560 --> 01:20:24,280
and then we can sort of enumerate over

1871
01:20:22,900 --> 01:20:25,960
all of the institutions that are in

1872
01:20:24,280 --> 01:20:31,210
there and figure out which institutions

1873
01:20:25,960 --> 01:20:32,770
sends us that query now we test this

1874
01:20:31,210 --> 01:20:34,600
prototype for about three weeks on a

1875
01:20:32,770 --> 01:20:37,030
busy DNS resolver this shows that the

1876
01:20:34,600 --> 01:20:39,160
query pattern in queries per second for

1877
01:20:37,030 --> 01:20:41,650
that particular resolver and we studied

1878
01:20:39,160 --> 01:20:42,639
three use cases I'm not going to go over

1879
01:20:41,650 --> 01:20:43,239
all of them because that would take too

1880
01:20:42,640 --> 01:20:44,949
much

1881
01:20:43,239 --> 01:20:47,049
time I will refer you to the paper

1882
01:20:44,949 --> 01:20:51,039
there's a link on the on the last slide

1883
01:20:47,050 --> 01:20:52,659
to the paper but what we looked at was

1884
01:20:51,039 --> 01:20:55,239
detection of so-called booters earlier

1885
01:20:52,659 --> 01:20:58,030
ddos as a service website we looked at

1886
01:20:55,239 --> 01:20:59,440
hits on email blacklist and the one that

1887
01:20:58,030 --> 01:21:04,210
i'm going to talk about is the the

1888
01:20:59,440 --> 01:21:05,678
national detection network first a

1889
01:21:04,210 --> 01:21:08,199
little bit about the predicted versus

1890
01:21:05,679 --> 01:21:10,210
the actual false positive rate for the

1891
01:21:08,199 --> 01:21:12,219
filters so we ran Auto tuning for a week

1892
01:21:10,210 --> 01:21:14,920
before we did our experiment and we

1893
01:21:12,219 --> 01:21:17,260
chose as filter parameters that we would

1894
01:21:14,920 --> 01:21:22,960
set 10 indices for every query that we

1895
01:21:17,260 --> 01:21:24,880
get and the bid filter size was for in a

1896
01:21:22,960 --> 01:21:26,710
91 megabytes as it's roughly fifty nine

1897
01:21:24,880 --> 01:21:29,469
megabytes in memory so it's actually

1898
01:21:26,710 --> 01:21:30,909
quite reasonable if you compare the

1899
01:21:29,469 --> 01:21:34,929
resolver cache on that machine which was

1900
01:21:30,909 --> 01:21:38,138
about two gigs so our goal was to keep

1901
01:21:34,929 --> 01:21:39,940
the daily false positive rate below one

1902
01:21:38,139 --> 01:21:41,499
in a thousand and of course we had to

1903
01:21:39,940 --> 01:21:44,348
estimate the number of elements that we

1904
01:21:41,499 --> 01:21:45,940
inserted a little bit of hand-waving but

1905
01:21:44,349 --> 01:21:47,949
after you've used a filter you can

1906
01:21:45,940 --> 01:21:50,860
calculate the actual false positive

1907
01:21:47,949 --> 01:21:52,480
probability which is that the formula is

1908
01:21:50,860 --> 01:21:54,249
given there it's explained in in the

1909
01:21:52,480 --> 01:21:56,159
paper and fertilize me I can't remember

1910
01:21:54,249 --> 01:21:58,929
what s is

1911
01:21:56,159 --> 01:22:01,629
but the graphs are show you the result

1912
01:21:58,929 --> 01:22:03,579
the black line is ten ten to the minus

1913
01:22:01,630 --> 01:22:05,650
three so that's one in a thousand so

1914
01:22:03,579 --> 01:22:07,480
anything above so that the graphs are a

1915
01:22:05,650 --> 01:22:10,239
bit confusing anything above the red

1916
01:22:07,480 --> 01:22:13,388
line means we had a lower false positive

1917
01:22:10,239 --> 01:22:14,888
probability than we actually said so the

1918
01:22:13,389 --> 01:22:17,110
takeaway from this is that we actually

1919
01:22:14,889 --> 01:22:19,900
had a very good false positive rate on

1920
01:22:17,110 --> 01:22:20,980
the bloom filters and if you look at the

1921
01:22:19,900 --> 01:22:22,598
hourly because we use the same

1922
01:22:20,980 --> 01:22:23,799
parameters for the hourly and the daily

1923
01:22:22,599 --> 01:22:25,869
filters otherwise we can't aggregate

1924
01:22:23,800 --> 01:22:28,329
them then of course at an early level

1925
01:22:25,869 --> 01:22:33,400
the probability for false positive is

1926
01:22:28,329 --> 01:22:36,340
very very low now one of the things that

1927
01:22:33,400 --> 01:22:37,749
we tested this with is the National

1928
01:22:36,340 --> 01:22:39,969
detection Network and this is something

1929
01:22:37,749 --> 01:22:42,760
that is managed by our government a

1930
01:22:39,969 --> 01:22:44,530
Dutch national cybersecurity Center and

1931
01:22:42,760 --> 01:22:47,530
what they have is they have a system

1932
01:22:44,530 --> 01:22:49,809
that runs a Miss so it's a malware

1933
01:22:47,530 --> 01:22:52,900
information service platform I think is

1934
01:22:49,809 --> 01:22:55,179
the acronym and what they put in there

1935
01:22:52,900 --> 01:22:57,190
are high value indicators of compromise

1936
01:22:55,179 --> 01:22:59,830
for example indicators of compromised

1937
01:22:57,190 --> 01:23:01,809
from the intelligence services now in

1938
01:22:59,830 --> 01:23:03,460
the condition for participating in this

1939
01:23:01,810 --> 01:23:05,469
national detection network is that you

1940
01:23:03,460 --> 01:23:08,680
don't just take data from it but you

1941
01:23:05,469 --> 01:23:11,350
also put data back into it so say you

1942
01:23:08,680 --> 01:23:12,940
get an indicator that there is some some

1943
01:23:11,350 --> 01:23:14,560
malware active then what they want to

1944
01:23:12,940 --> 01:23:16,059
know is how does this affect your

1945
01:23:14,560 --> 01:23:18,640
community because their goal is to

1946
01:23:16,060 --> 01:23:21,400
figure out how that society is impacted

1947
01:23:18,640 --> 01:23:23,560
by by these threats right and of course

1948
01:23:21,400 --> 01:23:24,879
surf net wanted to participate in that

1949
01:23:23,560 --> 01:23:27,040
but they didn't want to monitor all of

1950
01:23:24,880 --> 01:23:28,390
their individual users they want to

1951
01:23:27,040 --> 01:23:30,670
didn't want to throw away the privacy of

1952
01:23:28,390 --> 01:23:33,820
all users in order to participate in

1953
01:23:30,670 --> 01:23:35,980
something like this so this particular

1954
01:23:33,820 --> 01:23:37,480
solution that we implemented was very

1955
01:23:35,980 --> 01:23:39,820
interesting for them because it allowed

1956
01:23:37,480 --> 01:23:41,949
them to take the indicators of

1957
01:23:39,820 --> 01:23:43,599
compromised hold them against the bloom

1958
01:23:41,949 --> 01:23:45,160
filters and figure out if there are hits

1959
01:23:43,600 --> 01:23:47,560
on that and they could report it back to

1960
01:23:45,160 --> 01:23:50,260
the national detection Network but they

1961
01:23:47,560 --> 01:23:52,989
also got some indicators of sort of what

1962
01:23:50,260 --> 01:23:54,940
threats there were in the network the

1963
01:23:52,989 --> 01:23:57,160
graph shows you the number of threats

1964
01:23:54,940 --> 01:23:58,690
that occurred on a daily basis so it's

1965
01:23:57,160 --> 01:24:02,080
not a huge number of threats in the

1966
01:23:58,690 --> 01:24:04,809
order 40 to 50 in a unique threats per

1967
01:24:02,080 --> 01:24:07,150
day but the interesting thing about this

1968
01:24:04,810 --> 01:24:09,280
is that surf nets privacy policy

1969
01:24:07,150 --> 01:24:11,170
prevented them from monitoring

1970
01:24:09,280 --> 01:24:12,519
individual curries so they couldn't do

1971
01:24:11,170 --> 01:24:14,380
this before and now that they had the

1972
01:24:12,520 --> 01:24:15,880
bloom filter solution they could do

1973
01:24:14,380 --> 01:24:17,230
these lookups and actually work out

1974
01:24:15,880 --> 01:24:20,290
whether these threats were occurring in

1975
01:24:17,230 --> 01:24:23,620
the network and we found an actual

1976
01:24:20,290 --> 01:24:25,719
compromise which was a one of wanna cry

1977
01:24:23,620 --> 01:24:27,190
infected machine so what we did is as

1978
01:24:25,719 --> 01:24:29,520
soon as we found out that one of the

1979
01:24:27,190 --> 01:24:33,699
threads that was detected was one a cry

1980
01:24:29,520 --> 01:24:35,380
what we did was go to surface privacy

1981
01:24:33,699 --> 01:24:37,599
offer and say hey we found his thread

1982
01:24:35,380 --> 01:24:40,420
that maybe needs mitigation can we now

1983
01:24:37,600 --> 01:24:41,830
specifically monitor for this threat so

1984
01:24:40,420 --> 01:24:43,930
rather than doing blanket surveillance

1985
01:24:41,830 --> 01:24:46,540
we can look for a specific threat and

1986
01:24:43,930 --> 01:24:47,050
then see who is infected and chase up

1987
01:24:46,540 --> 01:24:50,110
that machine

1988
01:24:47,050 --> 01:24:52,810
so this is much less invasive for users

1989
01:24:50,110 --> 01:24:55,420
than just sort of monitoring all of

1990
01:24:52,810 --> 01:24:56,980
their traffic and just telling them no

1991
01:24:55,420 --> 01:24:58,449
we're doing this for your good now in

1992
01:24:56,980 --> 01:25:00,040
this case we can make a balanced

1993
01:24:58,449 --> 01:25:04,440
decision whether or not to monitor for

1994
01:25:00,040 --> 01:25:07,120
something or not so some other benefits

1995
01:25:04,440 --> 01:25:08,799
no personal data is stored of course

1996
01:25:07,120 --> 01:25:11,150
because we don't retain any IP addresses

1997
01:25:08,800 --> 01:25:14,449
this is aggregated at the individual now

1998
01:25:11,150 --> 01:25:17,000
level but this means that you can retain

1999
01:25:14,449 --> 01:25:20,389
this data much longer which allows you

2000
01:25:17,000 --> 01:25:22,850
to do historical lookups which is very

2001
01:25:20,390 --> 01:25:25,280
interesting we think think back to for

2002
01:25:22,850 --> 01:25:26,690
example the one a cry case where you

2003
01:25:25,280 --> 01:25:28,070
could recognize that this strength was

2004
01:25:26,690 --> 01:25:31,190
present or your network because he would

2005
01:25:28,070 --> 01:25:33,980
do certain DNS queries if we had had

2006
01:25:31,190 --> 01:25:35,299
this running at the time sort of before

2007
01:25:33,980 --> 01:25:36,739
that threat existed as soon as the

2008
01:25:35,300 --> 01:25:38,780
malware researchers discovered that

2009
01:25:36,739 --> 01:25:40,879
particular query we could have gone back

2010
01:25:38,780 --> 01:25:42,469
in time and worked out when is the first

2011
01:25:40,880 --> 01:25:44,570
time that we actually saw infections

2012
01:25:42,469 --> 01:25:46,040
which is something we can't do right now

2013
01:25:44,570 --> 01:25:49,730
and that would be very valuable for

2014
01:25:46,040 --> 01:25:51,679
threat intelligence another thing is

2015
01:25:49,730 --> 01:25:53,389
that and this is something I as a

2016
01:25:51,679 --> 01:25:55,010
researcher find very interesting is that

2017
01:25:53,390 --> 01:25:59,150
you could share this data with third

2018
01:25:55,010 --> 01:26:02,030
parties without disclosing PII too to

2019
01:25:59,150 --> 01:26:03,889
them and then they could for example say

2020
01:26:02,030 --> 01:26:06,170
you take filters that are collected in

2021
01:26:03,890 --> 01:26:09,110
in different networks then you can do

2022
01:26:06,170 --> 01:26:10,280
co-occurrence of queries if say I found

2023
01:26:09,110 --> 01:26:12,679
this query that that I think is

2024
01:26:10,280 --> 01:26:14,809
malicious which other networks did I see

2025
01:26:12,679 --> 01:26:18,530
that in and was that roughly at the same

2026
01:26:14,810 --> 01:26:20,090
time and the final thing is that as a

2027
01:26:18,530 --> 01:26:22,699
nice side effect of how bloom filters

2028
01:26:20,090 --> 01:26:24,020
work they you can do cardinality

2029
01:26:22,699 --> 01:26:24,889
estimates or the number of distinct

2030
01:26:24,020 --> 01:26:26,210
queries that are in there you can

2031
01:26:24,890 --> 01:26:28,730
estimate that because it's sort of

2032
01:26:26,210 --> 01:26:33,110
related to how hyper log lock works if

2033
01:26:28,730 --> 01:26:34,699
you're familiar with that right so the

2034
01:26:33,110 --> 01:26:37,790
prototype code has been released as open

2035
01:26:34,699 --> 01:26:39,949
source the URLs on the slide so surf net

2036
01:26:37,790 --> 01:26:41,840
where we trial this is planning to take

2037
01:26:39,949 --> 01:26:45,549
this into production because they want

2038
01:26:41,840 --> 01:26:48,949
to use this for their C cert team and

2039
01:26:45,550 --> 01:26:50,510
adenylate labs we're creating the tools

2040
01:26:48,949 --> 01:26:52,339
to integrate this into our open source

2041
01:26:50,510 --> 01:26:56,030
products in particular our resolver

2042
01:26:52,340 --> 01:26:58,070
product unbound and the goal of that is

2043
01:26:56,030 --> 01:26:59,509
to again release this is open source

2044
01:26:58,070 --> 01:27:01,699
software and make this really easy to

2045
01:26:59,510 --> 01:27:04,520
deploy so that if you want to do this

2046
01:27:01,699 --> 01:27:07,370
kind of network monitoring then at least

2047
01:27:04,520 --> 01:27:09,320
you now have a more privacy friendly

2048
01:27:07,370 --> 01:27:10,940
solution available than just blanket

2049
01:27:09,320 --> 01:27:13,370
recording every query that all of your

2050
01:27:10,940 --> 01:27:14,540
users make and I hope that it's a little

2051
01:27:13,370 --> 01:27:18,349
bit of proof that security and privacy

2052
01:27:14,540 --> 01:27:20,360
can go hand-in-hand and with that this

2053
01:27:18,350 --> 01:27:21,889
is the paper the link is on the slide

2054
01:27:20,360 --> 01:27:24,110
and the slides are up in the data

2055
01:27:21,889 --> 01:27:33,739
tracker if you want to read the paper

2056
01:27:24,110 --> 01:27:34,489
are there any questions hi Roland Dave

2057
01:27:33,739 --> 01:27:36,830
Wonka

2058
01:27:34,489 --> 01:27:37,849
super cool work I can't wait to read the

2059
01:27:36,830 --> 01:27:40,730
paper

2060
01:27:37,850 --> 01:27:42,080
I'm the question I have is about the

2061
01:27:40,730 --> 01:27:44,690
sharing

2062
01:27:42,080 --> 01:27:47,059
are you comfortable giving out your full

2063
01:27:44,690 --> 01:27:48,259
bloom filter to the NCSC or I can't

2064
01:27:47,060 --> 01:27:50,449
believe they would give you their bloom

2065
01:27:48,260 --> 01:27:52,880
filter back how does this sharing really

2066
01:27:50,449 --> 01:27:55,790
okay so for the for an initial detection

2067
01:27:52,880 --> 01:27:57,920
network we're certain that they were

2068
01:27:55,790 --> 01:28:00,500
serpent is certainly not sharing the

2069
01:27:57,920 --> 01:28:04,070
whole bloom filter with NCC what they

2070
01:28:00,500 --> 01:28:06,380
are sharing with ncsc is if there are

2071
01:28:04,070 --> 01:28:08,330
the detections that they do themselves

2072
01:28:06,380 --> 01:28:12,010
so say I have a threat I detect that and

2073
01:28:08,330 --> 01:28:15,290
we report back we saw this threat in

2074
01:28:12,010 --> 01:28:17,179
universities or in I don't know schools

2075
01:28:15,290 --> 01:28:18,230
for vocational education but of course

2076
01:28:17,179 --> 01:28:19,550
it's not the bloom filter they're

2077
01:28:18,230 --> 01:28:22,820
sharing that what they're sharing is

2078
01:28:19,550 --> 01:28:24,770
whether or not a threat was detected but

2079
01:28:22,820 --> 01:28:26,780
don't you have to take the consonance

2080
01:28:24,770 --> 01:28:29,840
the bloom filters to find out if the 1:1

2081
01:28:26,780 --> 01:28:31,369
burglar had the the vulnerabilities are

2082
01:28:29,840 --> 01:28:33,409
the the text that were representing the

2083
01:28:31,369 --> 01:28:35,059
other I'm not understanding sorry okay I

2084
01:28:33,409 --> 01:28:36,650
can't hear you can you step closer to

2085
01:28:35,060 --> 01:28:38,150
mine oh I was just saying don't you it's

2086
01:28:36,650 --> 01:28:40,099
the coincidence the bloom filters that

2087
01:28:38,150 --> 01:28:42,679
shows that you that there's evidence of

2088
01:28:40,100 --> 01:28:45,800
those attacks or vulnerabilities in the

2089
01:28:42,679 --> 01:28:47,179
in one set yeah but so who's the one

2090
01:28:45,800 --> 01:28:48,260
that's finding the intersections of

2091
01:28:47,179 --> 01:28:53,480
bloom filters because that's on your

2092
01:28:48,260 --> 01:28:54,949
trusting the so I think they're so you

2093
01:28:53,480 --> 01:28:59,480
think you're you're sort of conflating

2094
01:28:54,949 --> 01:29:00,830
two things the idea is that the network

2095
01:28:59,480 --> 01:29:02,690
operator in this case surf net who

2096
01:29:00,830 --> 01:29:05,300
participates in the national detection

2097
01:29:02,690 --> 01:29:06,799
network thus detections on their own on

2098
01:29:05,300 --> 01:29:08,570
their own bloom filters that they record

2099
01:29:06,800 --> 01:29:10,730
on their resolvers and they just report

2100
01:29:08,570 --> 01:29:13,309
infections back to the cybersecurity

2101
01:29:10,730 --> 01:29:16,549
ncsc they don't sort of send the bloom

2102
01:29:13,310 --> 01:29:18,560
filters they're what you could do a

2103
01:29:16,550 --> 01:29:20,480
distributed model is that you could have

2104
01:29:18,560 --> 01:29:23,030
a query API where somebody could send in

2105
01:29:20,480 --> 01:29:24,530
say I has this name being queried is

2106
01:29:23,030 --> 01:29:25,670
this name presence in your bloom filter

2107
01:29:24,530 --> 01:29:27,650
something you do to look up and you

2108
01:29:25,670 --> 01:29:29,480
report yes or no I agree with you that

2109
01:29:27,650 --> 01:29:31,219
if you have the remote query that's a

2110
01:29:29,480 --> 01:29:32,659
way that you could possibly hear but if

2111
01:29:31,219 --> 01:29:35,000
you give the bloom filter then they can

2112
01:29:32,659 --> 01:29:37,070
query yeah they can query I thought yeah

2113
01:29:35,000 --> 01:29:37,670
Crick but so I wouldn't advocate giving

2114
01:29:37,070 --> 01:29:41,480
it to some

2115
01:29:37,670 --> 01:29:43,460
something like NCSE but for example say

2116
01:29:41,480 --> 01:29:45,230
you have a University researcher or is

2117
01:29:43,460 --> 01:29:47,239
interested in this and I can I can

2118
01:29:45,230 --> 01:29:51,290
definitely see conditions under which

2119
01:29:47,239 --> 01:29:55,428
you could share that data with them hi

2120
01:29:51,290 --> 01:29:56,810
STP from the NCSC in the UK and thank

2121
01:29:55,429 --> 01:29:58,370
you for your presentation I found it

2122
01:29:56,810 --> 01:30:00,199
really interesting and I think it's a

2123
01:29:58,370 --> 01:30:02,420
good piece of research that needs to

2124
01:30:00,199 --> 01:30:04,549
happen in this space and and like you

2125
01:30:02,420 --> 01:30:07,070
said it's nice to see that security and

2126
01:30:04,550 --> 01:30:08,750
privacy can't go together and I just had

2127
01:30:07,070 --> 01:30:11,179
a question on your previous slide I

2128
01:30:08,750 --> 01:30:12,560
think maybe the wonderful about oh maybe

2129
01:30:11,179 --> 01:30:14,120
it was a couple of very sorry yeah about

2130
01:30:12,560 --> 01:30:16,400
sharing the bloom filter with third

2131
01:30:14,120 --> 01:30:18,050
parties so in this case and I would just

2132
01:30:16,400 --> 01:30:19,969
be concerned about the potential leg-up

2133
01:30:18,050 --> 01:30:22,670
that you would give a threat actor in

2134
01:30:19,969 --> 01:30:24,620
knowing that their demeanor whatever was

2135
01:30:22,670 --> 01:30:26,780
noted you could just change their

2136
01:30:24,620 --> 01:30:29,510
techniques so and threat intelligences

2137
01:30:26,780 --> 01:30:31,429
shared under the TLP protocol at moon um

2138
01:30:29,510 --> 01:30:33,410
and yeah just to say when you share it

2139
01:30:31,429 --> 01:30:36,080
with researchers I worry about giving it

2140
01:30:33,410 --> 01:30:39,980
to any academic that you know fancy

2141
01:30:36,080 --> 01:30:42,980
don't I so okay so - so of course when I

2142
01:30:39,980 --> 01:30:44,750
say sharing a third parties what I would

2143
01:30:42,980 --> 01:30:46,809
say it should have a little asterisk

2144
01:30:44,750 --> 01:30:50,660
that says under certain conditions right

2145
01:30:46,810 --> 01:30:51,949
I am an academic researcher so I don't

2146
01:30:50,660 --> 01:30:55,599
worry so much about sharing this with

2147
01:30:51,949 --> 01:30:59,030
academic researchers I mean trust me but

2148
01:30:55,600 --> 01:31:01,429
you do have a you do have a point right

2149
01:30:59,030 --> 01:31:02,719
you want to have certain safeguards in

2150
01:31:01,429 --> 01:31:04,340
place before you share this kind of

2151
01:31:02,719 --> 01:31:05,570
information I guess it also depends on

2152
01:31:04,340 --> 01:31:07,790
the network that you collect this

2153
01:31:05,570 --> 01:31:11,000
information in surfing is a research

2154
01:31:07,790 --> 01:31:13,550
network so there there is a one of the

2155
01:31:11,000 --> 01:31:16,040
goals is also to do research on the

2156
01:31:13,550 --> 01:31:18,800
network itself so if you share that with

2157
01:31:16,040 --> 01:31:21,050
researchers that are within say their

2158
01:31:18,800 --> 01:31:22,340
constituency then that could be there

2159
01:31:21,050 --> 01:31:23,570
could be good conditions for doing that

2160
01:31:22,340 --> 01:31:27,590
actually surf and has a data sharing

2161
01:31:23,570 --> 01:31:29,120
policy that sort of lists conditions

2162
01:31:27,590 --> 01:31:31,610
under which this kind of data can be

2163
01:31:29,120 --> 01:31:33,559
shared with researchers and then there

2164
01:31:31,610 --> 01:31:36,429
are data sets that can be shared with

2165
01:31:33,560 --> 01:31:38,660
researchers within their constituency or

2166
01:31:36,429 --> 01:31:42,260
random academic researchers around the

2167
01:31:38,660 --> 01:31:45,679
world and I can't speak for them

2168
01:31:42,260 --> 01:31:47,480
but I would say that this is data that

2169
01:31:45,679 --> 01:31:49,370
they would definitely feel comfortable

2170
01:31:47,480 --> 01:31:51,690
sharing if the conditions are right

2171
01:31:49,370 --> 01:31:54,540
because I talk to their privacy officer

2172
01:31:51,690 --> 01:31:56,969
and she actually she understood this

2173
01:31:54,540 --> 01:31:58,170
really well quite well even though she

2174
01:31:56,970 --> 01:32:01,830
didn't have a technical background this

2175
01:31:58,170 --> 01:32:03,750
was sort of easy to understand and her

2176
01:32:01,830 --> 01:32:05,280
intuition was that for example this

2177
01:32:03,750 --> 01:32:08,460
would not be subject to the GDP art

2178
01:32:05,280 --> 01:32:10,679
because of the data that gets put in and

2179
01:32:08,460 --> 01:32:11,880
that meant that under certain conditions

2180
01:32:10,680 --> 01:32:13,560
we could share the information even

2181
01:32:11,880 --> 01:32:16,140
though there are some privacy risk if

2182
01:32:13,560 --> 01:32:17,910
you can just try and send whatever

2183
01:32:16,140 --> 01:32:19,710
question you have to the filter and

2184
01:32:17,910 --> 01:32:23,010
figure out if something's in there does

2185
01:32:19,710 --> 01:32:28,170
that sort of answer your question sort

2186
01:32:23,010 --> 01:32:33,030
of okay any other questions okay thank

2187
01:32:28,170 --> 01:32:41,100
you return oh thanks to all our

2188
01:32:33,030 --> 01:32:42,660
presenters can be a round of applause do

2189
01:32:41,100 --> 01:32:53,040
we have the blue sheets has anyone not

2190
01:32:42,660 --> 01:32:56,820
sign the blue sheets should be moving on

2191
01:32:53,040 --> 01:33:01,040
to the internet drafts it is Roland

2192
01:32:56,820 --> 01:33:01,040
sorry it's Fernando Marlene

2193
01:33:15,070 --> 01:33:28,719
idea it's really low is that better now

2194
01:33:28,989 --> 01:33:35,739
yes okay

2195
01:33:32,389 --> 01:33:39,949
so I'm for another one and I will be

2196
01:33:35,739 --> 01:33:43,280
presenting a set of three documents to

2197
01:33:39,949 --> 01:33:44,598
our target at beard these documents are

2198
01:33:43,280 --> 01:33:47,090
about the security and privacy

2199
01:33:44,599 --> 01:33:50,389
implications of numeric identifiers

2200
01:33:47,090 --> 01:33:52,460
employed in network particles these are

2201
01:33:50,389 --> 01:33:54,440
a set of documents that we have been

2202
01:33:52,460 --> 01:33:55,389
working on for a few years now with the

2203
01:33:54,440 --> 01:34:02,169
ban are safe

2204
01:33:55,389 --> 01:34:06,579
next slide please so as an introduction

2205
01:34:02,170 --> 01:34:10,280
essentially for the last 30 years or so

2206
01:34:06,579 --> 01:34:13,039
we have got the topic of numeric

2207
01:34:10,280 --> 01:34:16,159
identifiers wrong in in many protocol

2208
01:34:13,039 --> 01:34:25,489
specifications and implementations after

2209
01:34:16,159 --> 01:34:28,610
memory break now you may recall for

2210
01:34:25,489 --> 01:34:32,030
example you may remember issues that we

2211
01:34:28,610 --> 01:34:36,320
have faced with PCP initial seconds

2212
01:34:32,030 --> 01:34:39,530
numbers predictable transport protocol

2213
01:34:36,320 --> 01:34:43,570
numbers predictable ipv4 and ipv6

2214
01:34:39,530 --> 01:34:46,219
fragment identifiers predictable ipv6

2215
01:34:43,570 --> 01:34:48,558
interface identifiers remember your

2216
01:34:46,219 --> 01:34:54,170
audience really scrambled you can't make

2217
01:34:48,559 --> 01:34:57,260
how anything ok yeah I think he does a

2218
01:34:54,170 --> 01:35:11,949
little video I did yeah I don't know if

2219
01:34:57,260 --> 01:35:11,949
I can disable good try again socially

2220
01:35:12,250 --> 01:35:17,110
lessons that we learned we've you know

2221
01:35:14,510 --> 01:35:19,280
we get into fires of some protocols

2222
01:35:17,110 --> 01:35:20,690
essentially we're not applied to all the

2223
01:35:19,280 --> 01:35:22,449
particles so it's essentially the same

2224
01:35:20,690 --> 01:35:24,940
problem that repeated

2225
01:35:22,449 --> 01:35:29,400
and over again in different lamentations

2226
01:35:24,940 --> 01:35:37,209
and in different protocol specifications

2227
01:35:29,400 --> 01:35:39,009
next slide so essentially we work on a

2228
01:35:37,209 --> 01:35:41,079
set of three documents these three

2229
01:35:39,010 --> 01:35:44,079
documents used to be a single large

2230
01:35:41,079 --> 01:35:46,329
document and based on on the advice on a

2231
01:35:44,079 --> 01:35:52,209
number of groups we split this document

2232
01:35:46,329 --> 01:35:54,909
into three the first document is well

2233
01:35:52,209 --> 01:35:57,190
numeric IDs a history in which what we

2234
01:35:54,909 --> 01:35:59,679
try to do is cover the timeline of some

2235
01:35:57,190 --> 01:36:02,469
some old numeric identifiers this is

2236
01:35:59,679 --> 01:36:06,099
this document targets peer second is

2237
01:36:02,469 --> 01:36:08,559
about proposing algorithms to you know

2238
01:36:06,099 --> 01:36:11,019
to generate these numeric identifiers

2239
01:36:08,559 --> 01:36:12,699
you know without or avoiding the

2240
01:36:11,019 --> 01:36:16,300
security and privacy implications and

2241
01:36:12,699 --> 01:36:19,119
the third document is a document that we

2242
01:36:16,300 --> 01:36:23,979
hope can be published as an ad sponsored

2243
01:36:19,119 --> 01:36:27,518
RFC which essentially tries to force

2244
01:36:23,979 --> 01:36:29,739
protocol specification writers to have

2245
01:36:27,519 --> 01:36:33,900
to do a proper analysis about numeric

2246
01:36:29,739 --> 01:36:33,900
identifiers next slide

2247
01:36:38,280 --> 01:36:44,679
so the first document numeric ID is

2248
01:36:42,010 --> 01:36:48,479
history essentially what we do we cover

2249
01:36:44,679 --> 01:36:51,579
some sample numeric identifiers ipv6

2250
01:36:48,479 --> 01:36:54,610
interface identifiers ipv4 and ipv6

2251
01:36:51,579 --> 01:36:56,259
fragment identifiers and so on and what

2252
01:36:54,610 --> 01:36:58,650
we tried to do with this work is

2253
01:36:56,260 --> 01:37:01,360
essentially to illustrate you know how

2254
01:36:58,650 --> 01:37:03,638
essentially we faced the same problem

2255
01:37:01,360 --> 01:37:05,440
over and over again sometimes called the

2256
01:37:03,639 --> 01:37:08,349
same identifiers in different protocols

2257
01:37:05,440 --> 01:37:11,558
like prime identifiers in ipv4 and ipv6

2258
01:37:08,349 --> 01:37:12,789
or sometimes it's the same problem at

2259
01:37:11,559 --> 01:37:17,260
the end of the day but for different

2260
01:37:12,789 --> 01:37:21,509
protocols this document again is targets

2261
01:37:17,260 --> 01:37:24,639
fear next slide please

2262
01:37:21,510 --> 01:37:27,309
the second document it's a little bit

2263
01:37:24,639 --> 01:37:30,039
more complex essentially what we try to

2264
01:37:27,309 --> 01:37:32,909
do is to categorize numeric identifiers

2265
01:37:30,039 --> 01:37:35,950
based on their interoperability

2266
01:37:32,909 --> 01:37:37,839
requirements and the failure mode

2267
01:37:35,950 --> 01:37:40,059
interpretability requirements ell

2268
01:37:37,840 --> 01:37:42,790
requirements that you know must become

2269
01:37:40,060 --> 01:37:44,260
quite - based on the protocol there are

2270
01:37:42,790 --> 01:37:47,560
different sort of requirements like

2271
01:37:44,260 --> 01:37:49,720
uniqueness an identifier that must be

2272
01:37:47,560 --> 01:37:52,000
monotonically increasing and so on and

2273
01:37:49,720 --> 01:37:54,070
the failure mode is essentially well

2274
01:37:52,000 --> 01:37:57,010
what happens if you don't comply with

2275
01:37:54,070 --> 01:37:59,590
those requirements so based on those

2276
01:37:57,010 --> 01:38:02,440
categories what we did is you know try

2277
01:37:59,590 --> 01:38:04,660
to go through most of the numeric

2278
01:38:02,440 --> 01:38:07,210
identifiers that we are aware about and

2279
01:38:04,660 --> 01:38:09,010
try to see if we can make each of them

2280
01:38:07,210 --> 01:38:11,530
follow into one of the categories that

2281
01:38:09,010 --> 01:38:14,440
we define and for each of those

2282
01:38:11,530 --> 01:38:17,469
categories what we do is prove proposed

2283
01:38:14,440 --> 01:38:19,210
some sample algorithms that can comply

2284
01:38:17,470 --> 01:38:22,000
with them to repairability requirements

2285
01:38:19,210 --> 01:38:29,200
while avoiding the negative security and

2286
01:38:22,000 --> 01:38:30,970
privacy implications or some at the

2287
01:38:29,200 --> 01:38:43,269
previous document please document target

2288
01:38:30,970 --> 01:38:46,260
fear peace group next mani your audio is

2289
01:38:43,270 --> 01:38:46,260
giving way again

2290
01:38:47,190 --> 01:38:50,370
next slide

2291
01:38:57,270 --> 01:39:08,610
I think given the lack of time we're

2292
01:39:03,930 --> 01:39:12,180
just going to move on to the next school

2293
01:39:08,610 --> 01:39:14,460
with the slight No and I think this

2294
01:39:12,180 --> 01:39:16,260
draft the third draft which is I think

2295
01:39:14,460 --> 01:39:19,920
it's under consideration for ad

2296
01:39:16,260 --> 01:39:22,760
sponsorship by Ben kaduk and yeah and we

2297
01:39:19,920 --> 01:39:25,620
spoke to the we spoke to the security ad

2298
01:39:22,760 --> 01:39:27,990
Benedict and also the author of the

2299
01:39:25,620 --> 01:39:30,480
draft the to draft and seem like the

2300
01:39:27,990 --> 01:39:32,490
first to draft history and generation

2301
01:39:30,480 --> 01:39:35,219
who were under scope for and good

2302
01:39:32,490 --> 01:39:37,559
benefit from coming to perigee and we

2303
01:39:35,220 --> 01:39:40,470
were thinking of adopting them so do

2304
01:39:37,560 --> 01:39:43,380
people have opinions on this and we're

2305
01:39:40,470 --> 01:39:44,700
looking to alum at the end to to get a

2306
01:39:43,380 --> 01:39:47,310
sense of whether the room is okay with

2307
01:39:44,700 --> 01:39:53,940
us is there there's consensus to adopt

2308
01:39:47,310 --> 01:39:57,540
these two these two documents so if you

2309
01:39:53,940 --> 01:39:59,429
have comments please come and speak my

2310
01:39:57,540 --> 01:40:04,790
people read these documents show of

2311
01:39:59,430 --> 01:40:04,790
hands if you okay

2312
01:40:12,239 --> 01:40:18,690
does anyone have opposition to the

2313
01:40:14,860 --> 01:40:18,690
research group adopting these documents

2314
01:40:20,130 --> 01:40:26,050
what's the research content again what's

2315
01:40:23,800 --> 01:40:28,060
the research content

2316
01:40:26,050 --> 01:40:36,250
I believe you three integration of the

2317
01:40:28,060 --> 01:40:38,650
two drafts sorry so one of them is just

2318
01:40:36,250 --> 01:40:41,290
the survey basically evolved the the

2319
01:40:38,650 --> 01:40:42,339
past sure problems I've read the same I

2320
01:40:41,290 --> 01:40:44,590
don't know what the research yeah

2321
01:40:42,340 --> 01:40:46,030
actually yeah of the generation

2322
01:40:44,590 --> 01:40:57,699
hopefully or another clean answer so I

2323
01:40:46,030 --> 01:41:00,519
let him into the queue Fernando yeah

2324
01:40:57,699 --> 01:41:09,699
sorry the connection was lost was the

2325
01:41:00,520 --> 01:41:12,510
question that was answered neither can

2326
01:41:09,699 --> 01:41:12,509
you answer in chapter

2327
01:41:26,630 --> 01:41:31,590
yeah I guess in the interest of time and

2328
01:41:29,489 --> 01:41:32,730
do the federal abilities we'll just move

2329
01:41:31,590 --> 01:41:34,290
on to the next presentation and come

2330
01:41:32,730 --> 01:41:36,449
back to this quality and time permitting

2331
01:41:34,290 --> 01:41:41,449
of course we can always take is the list

2332
01:41:36,449 --> 01:41:56,699
afterwards so on that note

2333
01:41:41,449 --> 01:41:58,530
David other I am David offer with the

2334
01:41:56,699 --> 01:42:00,210
Guardian project and talk about an

2335
01:41:58,530 --> 01:42:03,619
internet draft we've submitted recently

2336
01:42:00,210 --> 01:42:06,980
on enabling network traffic obfuscation

2337
01:42:03,619 --> 01:42:09,949
via pluggable transports so first of all

2338
01:42:06,980 --> 01:42:12,989
what is what are pluggable transports

2339
01:42:09,949 --> 01:42:14,579
mechanism for enabling the rapid

2340
01:42:12,989 --> 01:42:16,409
development and deployment of network

2341
01:42:14,579 --> 01:42:18,199
obfuscation techniques used to

2342
01:42:16,409 --> 01:42:21,659
circumvent surveillance and censorship

2343
01:42:18,199 --> 01:42:23,250
the deep tape details about this work

2344
01:42:21,659 --> 01:42:25,909
which has been going on for some now are

2345
01:42:23,250 --> 01:42:25,909
available at this URL

2346
01:42:26,210 --> 01:42:31,500
the generalized architecture here is

2347
01:42:29,190 --> 01:42:34,019
that there is a server that's exposing a

2348
01:42:31,500 --> 01:42:37,800
public proxy that accepts connections

2349
01:42:34,020 --> 01:42:39,869
from pluggable transport clients the

2350
01:42:37,800 --> 01:42:41,489
client transforms traffic before it hits

2351
01:42:39,869 --> 01:42:43,199
the public Internet the PT server

2352
01:42:41,489 --> 01:42:46,129
reverses the transformation and then

2353
01:42:43,199 --> 01:42:48,449
passes the traffic onto the server app

2354
01:42:46,130 --> 01:42:50,400
there's also an optional lightweight

2355
01:42:48,449 --> 01:42:52,199
protocol to facilitate communicating

2356
01:42:50,400 --> 01:42:54,420
connection metadata so when you're

2357
01:42:52,199 --> 01:42:56,820
migrating between one connection type

2358
01:42:54,420 --> 01:42:59,099
and another for example so since we

2359
01:42:56,820 --> 01:43:01,849
don't want to limit the behaviors of

2360
01:42:59,099 --> 01:43:04,530
what pluggable transports can do this

2361
01:43:01,849 --> 01:43:05,760
this idea focuses on the interface

2362
01:43:04,530 --> 01:43:08,369
between the technologies and the

2363
01:43:05,760 --> 01:43:13,130
applications themselves not on what goes

2364
01:43:08,369 --> 01:43:15,570
on inside of of an obfuscation technique

2365
01:43:13,130 --> 01:43:18,540
the draft that we've put together is

2366
01:43:15,570 --> 01:43:20,599
based on the pluggable transports 2.1

2367
01:43:18,540 --> 01:43:23,010
specification which is a work of a

2368
01:43:20,599 --> 01:43:25,829
fairly large and diverse community of

2369
01:43:23,010 --> 01:43:27,809
people and it has two subsets one is

2370
01:43:25,829 --> 01:43:30,360
what we call the transport api interface

2371
01:43:27,809 --> 01:43:31,850
and the other the dispatcher interface

2372
01:43:30,360 --> 01:43:34,240
so one that is

2373
01:43:31,850 --> 01:43:35,900
focused around in-progress

2374
01:43:34,240 --> 01:43:39,410
language-specific

2375
01:43:35,900 --> 01:43:41,299
api that's integrated directly into the

2376
01:43:39,410 --> 01:43:43,480
client app on the client side and into

2377
01:43:41,300 --> 01:43:46,010
the server app on the other side and

2378
01:43:43,480 --> 01:43:49,040
communication within the app or the way

2379
01:43:46,010 --> 01:43:52,040
the app on both sides sees the pluggable

2380
01:43:49,040 --> 01:43:54,800
transport is like a socket with the

2381
01:43:52,040 --> 01:43:56,810
dispatcher API this is to be used

2382
01:43:54,800 --> 01:44:00,440
between processes so there's another

2383
01:43:56,810 --> 01:44:05,350
process on each side that handles the

2384
01:44:00,440 --> 01:44:07,460
process of obscuring and unobscured and

2385
01:44:05,350 --> 01:44:09,020
passes that so that the actual

2386
01:44:07,460 --> 01:44:12,170
application doesn't have to deal with

2387
01:44:09,020 --> 01:44:14,870
that aspect of the problem

2388
01:44:12,170 --> 01:44:16,490
the dispatcher here can be configured

2389
01:44:14,870 --> 01:44:19,370
with different types of proxies so you

2390
01:44:16,490 --> 01:44:22,700
can have live at any moment different

2391
01:44:19,370 --> 01:44:24,349
kinds of of transports available that

2392
01:44:22,700 --> 01:44:26,179
can that are connected in different

2393
01:44:24,350 --> 01:44:28,520
kinds of proxies and can respond to

2394
01:44:26,180 --> 01:44:30,680
different kinds of traffic so this is

2395
01:44:28,520 --> 01:44:34,130
sort of that architecture described in

2396
01:44:30,680 --> 01:44:36,980
graphic form here's the Transport API

2397
01:44:34,130 --> 01:44:39,350
where what's going on in the track in

2398
01:44:36,980 --> 01:44:43,429
the transports actually bundled into the

2399
01:44:39,350 --> 01:44:45,080
application the itself and here's the

2400
01:44:43,430 --> 01:44:48,290
case with the dispatcher where the

2401
01:44:45,080 --> 01:44:52,720
actual applications don't take part in

2402
01:44:48,290 --> 01:44:55,480
or don't got compiled in the kind of

2403
01:44:52,720 --> 01:44:58,310
application technique being used and

2404
01:44:55,480 --> 01:45:00,589
here's a case where there's a mixed

2405
01:44:58,310 --> 01:45:03,500
architecture where maybe the client uses

2406
01:45:00,590 --> 01:45:08,590
a dispatcher type environment where the

2407
01:45:03,500 --> 01:45:11,660
server has a transport style environment

2408
01:45:08,590 --> 01:45:16,820
the spec also talks or the internet

2409
01:45:11,660 --> 01:45:19,070
draft also talks about where we can by

2410
01:45:16,820 --> 01:45:23,030
looking at the older specification which

2411
01:45:19,070 --> 01:45:25,130
was just the dispatcher API and the

2412
01:45:23,030 --> 01:45:27,380
issues related to linking across

2413
01:45:25,130 --> 01:45:29,390
language and then also this idea of

2414
01:45:27,380 --> 01:45:33,140
adapting back and forth between types of

2415
01:45:29,390 --> 01:45:37,480
adapt types of technique and I think

2416
01:45:33,140 --> 01:45:37,480
that's it questions

2417
01:45:47,590 --> 01:45:55,699
Ben Schwartz what would you like to see

2418
01:45:51,320 --> 01:45:57,860
happen with this document well yeah I

2419
01:45:55,699 --> 01:45:59,360
guess I can give maybe my own personal

2420
01:45:57,860 --> 01:46:02,000
response to this because I'm not sure

2421
01:45:59,360 --> 01:46:04,960
overall myself but there's a been a lot

2422
01:46:02,000 --> 01:46:08,290
of work going on in this area and it is

2423
01:46:04,960 --> 01:46:13,460
in my mind

2424
01:46:08,290 --> 01:46:15,019
sort of in occurs in user space of a

2425
01:46:13,460 --> 01:46:17,540
necessity because we want these

2426
01:46:15,020 --> 01:46:22,610
techniques to be adapted in a very rapid

2427
01:46:17,540 --> 01:46:25,790
way so it's unclear to me what or it

2428
01:46:22,610 --> 01:46:27,139
needs to be debated what sort of final

2429
01:46:25,790 --> 01:46:30,050
position this has in some

2430
01:46:27,140 --> 01:46:31,699
standardization work should some of this

2431
01:46:30,050 --> 01:46:35,570
stuff take place a lower in the network

2432
01:46:31,699 --> 01:46:39,159
stack or not and and if so why and if

2433
01:46:35,570 --> 01:46:41,960
not why etcetera but we are we do hope

2434
01:46:39,159 --> 01:46:44,000
this work took place for a limited

2435
01:46:41,960 --> 01:46:47,120
period of time only within sort of one

2436
01:46:44,000 --> 01:46:50,390
small set of the community and now we

2437
01:46:47,120 --> 01:46:52,760
have a larger community that finds this

2438
01:46:50,390 --> 01:46:54,650
interesting so there seems to be need to

2439
01:46:52,760 --> 01:46:58,820
be some bridge between some long term

2440
01:46:54,650 --> 01:47:03,170
standard and some just lack of unity on

2441
01:46:58,820 --> 01:47:09,860
the topic Thanks how many people have

2442
01:47:03,170 --> 01:47:14,810
read this decade only two thanks for

2443
01:47:09,860 --> 01:47:21,530
your question then Ben I'm one of the

2444
01:47:14,810 --> 01:47:23,989
authors of course so yeah I think this

2445
01:47:21,530 --> 01:47:26,030
certainly need I guess more reviewing

2446
01:47:23,989 --> 01:47:27,500
reading from people here if you find it

2447
01:47:26,030 --> 01:47:30,019
interesting you know please same comment

2448
01:47:27,500 --> 01:47:31,790
so a list we can kind of decide what to

2449
01:47:30,020 --> 01:47:33,860
do at that point it's certainly a very

2450
01:47:31,790 --> 01:47:36,980
interesting work but it might be a bit

2451
01:47:33,860 --> 01:47:38,239
too really at this time so let's let's

2452
01:47:36,980 --> 01:47:44,860
get more feedback not at first

2453
01:47:38,239 --> 01:47:44,860
thank you Joe

2454
01:47:48,070 --> 01:47:55,130
staying here hey so I think I have three

2455
01:47:51,350 --> 01:47:57,650
slides but the first time I represent of

2456
01:47:55,130 --> 01:48:00,020
this was in November of 2014 in Hawaii

2457
01:47:57,650 --> 01:48:01,580
you may or may not remember it it's been

2458
01:48:00,020 --> 01:48:04,010
edited a lot it's been refractor

2459
01:48:01,580 --> 01:48:05,930
refactored reflected network structure

2460
01:48:04,010 --> 01:48:07,550
it's a created author as we had Nick

2461
01:48:05,930 --> 01:48:10,760
Fenster and some students at Princeton

2462
01:48:07,550 --> 01:48:12,530
and helped with it adds more modern

2463
01:48:10,760 --> 01:48:14,450
things like blocking of ES and I in

2464
01:48:12,530 --> 01:48:16,370
South Korea and stuff like that

2465
01:48:14,450 --> 01:48:18,110
the reason it hasn't gone very far is

2466
01:48:16,370 --> 01:48:20,480
because I'm the one working on it and I

2467
01:48:18,110 --> 01:48:22,280
diverted my efforts which is I don't

2468
01:48:20,480 --> 01:48:24,320
have a lot of time for nhf work to the

2469
01:48:22,280 --> 01:48:25,400
is 2.0 restructuring work which is

2470
01:48:24,320 --> 01:48:26,660
recently done yay

2471
01:48:25,400 --> 01:48:30,759
so I'm doing a lot more stuff that

2472
01:48:26,660 --> 01:48:34,460
doesn't involve administrative stuff

2473
01:48:30,760 --> 01:48:37,100
just a real quick overview ten seconds

2474
01:48:34,460 --> 01:48:38,270
it orders the discussion about

2475
01:48:37,100 --> 01:48:39,830
censorship around three things

2476
01:48:38,270 --> 01:48:42,080
prescription that is what do you want to

2477
01:48:39,830 --> 01:48:43,790
block identification how do you

2478
01:48:42,080 --> 01:48:45,230
technically identify those things that

2479
01:48:43,790 --> 01:48:47,360
you'd like to block and then

2480
01:48:45,230 --> 01:48:51,980
interference the actual performance of

2481
01:48:47,360 --> 01:48:53,299
the blocking there's a ton of small and

2482
01:48:51,980 --> 01:48:55,129
medium issues that a bunch of people

2483
01:48:53,300 --> 01:48:56,450
have identified in the reviews that are

2484
01:48:55,130 --> 01:48:58,190
in our issue tracker and we're gonna be

2485
01:48:56,450 --> 01:49:00,080
going over those in the next couple of

2486
01:48:58,190 --> 01:49:02,809
months and incorporating all that good

2487
01:49:00,080 --> 01:49:04,400
feedback and since this is a possibly a

2488
01:49:02,810 --> 01:49:06,290
research group draft we're gonna

2489
01:49:04,400 --> 01:49:08,660
actually try and do some outreach to

2490
01:49:06,290 --> 01:49:12,170
areas that haven't gotten much review of

2491
01:49:08,660 --> 01:49:14,420
this so routing and DNS in IETF just to

2492
01:49:12,170 --> 01:49:16,220
excerpt the chunk of it that's there and

2493
01:49:14,420 --> 01:49:17,930
see if we get additional feedback there

2494
01:49:16,220 --> 01:49:19,940
although some people like Stefan a long

2495
01:49:17,930 --> 01:49:22,190
time ago reviewed an earlier draft of

2496
01:49:19,940 --> 01:49:23,750
this the bigger issues that have been

2497
01:49:22,190 --> 01:49:25,849
talked about on the list there's this

2498
01:49:23,750 --> 01:49:28,250
thing about mitigations I was initially

2499
01:49:25,850 --> 01:49:29,570
pretty just to state the problem some

2500
01:49:28,250 --> 01:49:31,880
people feel that it would be a better

2501
01:49:29,570 --> 01:49:34,280
draft of it actually in in addition to

2502
01:49:31,880 --> 01:49:36,770
describing censorship techniques and

2503
01:49:34,280 --> 01:49:38,269
included discussions of mitigations that

2504
01:49:36,770 --> 01:49:41,980
may or may not be relevant for each

2505
01:49:38,270 --> 01:49:43,760
technique I was initial initially pretty

2506
01:49:41,980 --> 01:49:45,290
reluctant to do that just because it

2507
01:49:43,760 --> 01:49:48,710
felt like it would blow up the draft but

2508
01:49:45,290 --> 01:49:50,690
I I'm I should say I can go either way

2509
01:49:48,710 --> 01:49:52,160
on this in the sense that I think pithy

2510
01:49:50,690 --> 01:49:54,740
statements under each technique that

2511
01:49:52,160 --> 01:49:56,360
describe some types of mitigations may

2512
01:49:54,740 --> 01:49:58,568
work that I think the trick is is that

2513
01:49:56,360 --> 01:50:02,978
censorship techniques change quite a bit

2514
01:49:58,569 --> 01:50:06,609
mitigations changed in my totally just

2515
01:50:02,979 --> 01:50:08,229
ad-hoc or an intuitive nature they

2516
01:50:06,609 --> 01:50:10,809
change it even more quickly some things

2517
01:50:08,229 --> 01:50:15,849
like domain fronting you know come and

2518
01:50:10,809 --> 01:50:19,799
go right I forgotten his first name I

2519
01:50:15,849 --> 01:50:22,059
should know in Vitoria Victorio Burt Ola

2520
01:50:19,799 --> 01:50:24,879
said specifically that censorship may be

2521
01:50:22,059 --> 01:50:26,379
too negative of a framing I come from a

2522
01:50:24,879 --> 01:50:27,699
digital rights background where we talk

2523
01:50:26,379 --> 01:50:29,229
about when someone's blocking something

2524
01:50:27,699 --> 01:50:30,969
you want to get access to that censored

2525
01:50:29,229 --> 01:50:32,889
no matter what it is happy to say

2526
01:50:30,969 --> 01:50:36,339
blocking techniques do you want to talk

2527
01:50:32,889 --> 01:50:37,629
now I'm almost done there's a chunk

2528
01:50:36,339 --> 01:50:39,399
about non-technical forms of

2529
01:50:37,629 --> 01:50:42,010
prescription and interference so ways of

2530
01:50:39,399 --> 01:50:44,260
finding stuff and blocking them like

2531
01:50:42,010 --> 01:50:46,059
self-censorship or legal mechanisms and

2532
01:50:44,260 --> 01:50:47,109
stuff like that I'm not wedded to that

2533
01:50:46,059 --> 01:50:49,269
stuff it just felt like it would make

2534
01:50:47,109 --> 01:50:52,389
the document sort of complete and it's

2535
01:50:49,269 --> 01:50:53,949
sort of the rubber hose thing that might

2536
01:50:52,389 --> 01:50:56,079
come into play in certain kinds of

2537
01:50:53,949 --> 01:50:57,369
things and it's not like some rough

2538
01:50:56,079 --> 01:51:00,068
description of what that rubber hose

2539
01:50:57,369 --> 01:51:02,799
might look like there's the bigger issue

2540
01:51:00,069 --> 01:51:06,189
of the stuff moves really quick it may

2541
01:51:02,799 --> 01:51:07,839
need to be a regularly updated draft I'm

2542
01:51:06,189 --> 01:51:09,189
not I know that that's a different

2543
01:51:07,839 --> 01:51:10,719
discussion in other places some people

2544
01:51:09,189 --> 01:51:12,579
don't care about that some people feel

2545
01:51:10,719 --> 01:51:14,530
very strongly about that

2546
01:51:12,579 --> 01:51:17,289
it may be something we want to wait for

2547
01:51:14,530 --> 01:51:19,299
the living standard discussion what's

2548
01:51:17,289 --> 01:51:21,489
the research content it's a sort of you

2549
01:51:19,299 --> 01:51:23,589
can think of it as a review article a

2550
01:51:21,489 --> 01:51:25,509
systemization of knowledge there are

2551
01:51:23,589 --> 01:51:29,318
some gaps in certain areas that we're

2552
01:51:25,510 --> 01:51:31,030
working to fix and then one other thing

2553
01:51:29,319 --> 01:51:36,489
I wanted to say that's escaping my mind

2554
01:51:31,030 --> 01:51:37,809
oh no I'll stop her for scrolling so

2555
01:51:36,489 --> 01:51:40,259
first of all okay you should call it s

2556
01:51:37,809 --> 01:51:45,639
okay one rather than art see something

2557
01:51:40,260 --> 01:51:47,260
cool more seriously and the question we

2558
01:51:45,639 --> 01:51:49,299
should be able to being you know updated

2559
01:51:47,260 --> 01:51:50,889
draft I guess that's a question for you

2560
01:51:49,299 --> 01:51:52,479
is how often do things change if things

2561
01:51:50,889 --> 01:51:54,429
change you know on the scale every two

2562
01:51:52,479 --> 01:51:56,139
years then like just you know publish

2563
01:51:54,429 --> 01:51:57,639
this one another one a couple years they

2564
01:51:56,139 --> 01:51:59,199
change every two months then probably

2565
01:51:57,639 --> 01:52:00,639
that's awesome so I think it's all a

2566
01:51:59,199 --> 01:52:02,888
question for you better rather than me

2567
01:52:00,639 --> 01:52:04,439
it's not a constant rate of change yeah

2568
01:52:02,889 --> 01:52:07,209
yeah sure

2569
01:52:04,439 --> 01:52:10,029
on the Implanon this non-technical thing

2570
01:52:07,209 --> 01:52:11,760
the sensors like the framing thing you

2571
01:52:10,029 --> 01:52:13,410
know like the reasons

2572
01:52:11,760 --> 01:52:15,270
like a bad name is because like people

2573
01:52:13,410 --> 01:52:18,360
don't like censorship and if you call it

2574
01:52:15,270 --> 01:52:20,790
there BBT people will soon grow like WPT

2575
01:52:18,360 --> 01:52:22,290
Muslim give advert only new deputies so

2576
01:52:20,790 --> 01:52:23,820
like no I think you should citizenship

2577
01:52:22,290 --> 01:52:24,750
yeah and what I thought was if you

2578
01:52:23,820 --> 01:52:26,759
change the title and everything

2579
01:52:24,750 --> 01:52:28,650
throughout to a worldwide survey

2580
01:52:26,760 --> 01:52:30,840
worldwide blocking techniques how does

2581
01:52:28,650 --> 01:52:32,339
it make me feel too bad I can live with

2582
01:52:30,840 --> 01:52:38,520
that but I mean it just seems like these

2583
01:52:32,340 --> 01:52:40,290
be great Malory noodle article 18 since

2584
01:52:38,520 --> 01:52:41,640
we're solving all the bigger issues on

2585
01:52:40,290 --> 01:52:43,410
the slide right now I think for the

2586
01:52:41,640 --> 01:52:45,270
first one maybe this is a question for

2587
01:52:43,410 --> 01:52:46,680
you Siobhan is I mean it seems like in

2588
01:52:45,270 --> 01:52:50,790
the Charter you are open to talking

2589
01:52:46,680 --> 01:52:53,970
about threats not just mitigations and I

2590
01:52:50,790 --> 01:52:57,570
do think that censorship and privacy are

2591
01:52:53,970 --> 01:52:59,070
two sides of the same coin like so I

2592
01:52:57,570 --> 01:53:00,030
don't know maybe we can talk about that

2593
01:52:59,070 --> 01:53:01,440
more because I feel like it would fit

2594
01:53:00,030 --> 01:53:03,750
within the Charter I was just rereading

2595
01:53:01,440 --> 01:53:05,480
it before I came up to the bank agree

2596
01:53:03,750 --> 01:53:07,620
that was more for sedition Minister

2597
01:53:05,480 --> 01:53:13,620
sorry that's right

2598
01:53:07,620 --> 01:53:15,420
email sucks right when you Seltzer thing

2599
01:53:13,620 --> 01:53:17,790
thanks for this work I think the

2600
01:53:15,420 --> 01:53:20,250
non-technical forms is a valuable

2601
01:53:17,790 --> 01:53:21,930
addition because we're always thinking

2602
01:53:20,250 --> 01:53:24,900
about where is something going to get

2603
01:53:21,930 --> 01:53:28,860
routed if it the technical means aren't

2604
01:53:24,900 --> 01:53:32,099
available and thinking about that sort

2605
01:53:28,860 --> 01:53:34,589
of broad piece of the threat model is

2606
01:53:32,100 --> 01:53:37,820
helpful to thinking how effective are

2607
01:53:34,590 --> 01:53:43,920
anti censorship mechanisms thank you

2608
01:53:37,820 --> 01:53:47,759
Stefan Stefan BOTS Maya regarding the

2609
01:53:43,920 --> 01:53:50,250
first point yeah the fact that the draft

2610
01:53:47,760 --> 01:53:52,350
is still not published as a rare sea so

2611
01:53:50,250 --> 01:53:57,620
that it's complicated to keep this sort

2612
01:53:52,350 --> 01:54:00,390
of thing up-to-date and I vote aye

2613
01:53:57,620 --> 01:54:02,880
against including mitigations because a

2614
01:54:00,390 --> 01:54:05,450
big problem is not only that they evolve

2615
01:54:02,880 --> 01:54:09,060
very fast but also that can have

2616
01:54:05,450 --> 01:54:12,809
consequences a bad advice can be really

2617
01:54:09,060 --> 01:54:14,460
harmful for people that can for instance

2618
01:54:12,810 --> 01:54:17,790
to show that we try to walk around

2619
01:54:14,460 --> 01:54:21,720
censorship thing like that so it's much

2620
01:54:17,790 --> 01:54:24,360
more touchy so I suggest to stay with

2621
01:54:21,720 --> 01:54:25,469
rights only on of course to call

2622
01:54:24,360 --> 01:54:29,130
censorship sense or

2623
01:54:25,469 --> 01:54:31,440
because otherwise what people who censor

2624
01:54:29,130 --> 01:54:34,320
don't want to be consensus but that's

2625
01:54:31,440 --> 01:54:36,419
what they also just use Ted in waltz I

2626
01:54:34,320 --> 01:54:37,829
hadn't thought about that if I if we put

2627
01:54:36,420 --> 01:54:39,329
a mitigation here that someone uses then

2628
01:54:37,829 --> 01:54:44,549
they end up in jail man I'm gonna feel

2629
01:54:39,329 --> 01:54:50,659
like is that a question

2630
01:54:44,550 --> 01:54:55,619
oh if you're still looking for inputs on

2631
01:54:50,659 --> 01:54:58,259
absolutely for the first one I I'm not

2632
01:54:55,619 --> 01:55:01,289
sure how much beyond RFC six nine seven

2633
01:54:58,260 --> 01:55:02,989
three will be able to contribute even if

2634
01:55:01,289 --> 01:55:06,420
we go down the path of including

2635
01:55:02,989 --> 01:55:08,909
mitigation so that's I mean personally

2636
01:55:06,420 --> 01:55:12,150
I'm fine with the content says they are

2637
01:55:08,909 --> 01:55:14,489
on the second one I I don't think

2638
01:55:12,150 --> 01:55:17,489
there's a need to change it okay yeah

2639
01:55:14,489 --> 01:55:19,829
but maybe the title should reflect the

2640
01:55:17,489 --> 01:55:21,030
scope which is that not this is not on

2641
01:55:19,829 --> 01:55:23,699
online sensation

2642
01:55:21,030 --> 01:55:27,228
it's just Internet traffic and website

2643
01:55:23,699 --> 01:55:30,900
sensation so maybe that just fix it

2644
01:55:27,229 --> 01:55:32,400
that's a good point our people I am the

2645
01:55:30,900 --> 01:55:35,280
JavaScript so and I read producer

2646
01:55:32,400 --> 01:55:40,018
whatever I forgot thanks are people

2647
01:55:35,280 --> 01:55:41,869
opposed to adopting the draft as is does

2648
01:55:40,019 --> 01:55:45,719
even have any comments on that

2649
01:55:41,869 --> 01:55:54,960
okay should shoot yeah and have people

2650
01:55:45,719 --> 01:55:58,110
read it see if your hands we're going to

2651
01:55:54,960 --> 01:55:59,460
do a hum on adoption of the draft as is

2652
01:55:58,110 --> 01:56:08,728
so if you're in favor of adopting the

2653
01:55:59,460 --> 01:56:16,739
draft please hum now if you're opposed

2654
01:56:08,729 --> 01:56:19,710
to drop in the draft please um down yeah

2655
01:56:16,739 --> 01:56:21,030
so it sounds like you're positive

2656
01:56:19,710 --> 01:56:25,199
support for so will confirm on the list

2657
01:56:21,030 --> 01:56:27,059
and go from there thank you Joe just to

2658
01:56:25,199 --> 01:56:28,440
be good the question of like how

2659
01:56:27,059 --> 01:56:31,050
frequently the document will be updated

2660
01:56:28,440 --> 01:56:33,419
as you said does you know kind of bleed

2661
01:56:31,050 --> 01:56:34,889
into the living document issue so we'll

2662
01:56:33,420 --> 01:56:36,239
discuss with column what is you know a

2663
01:56:34,889 --> 01:56:38,370
good strategy for dealing with that

2664
01:56:36,239 --> 01:56:41,580
should that option happen

2665
01:56:38,370 --> 01:56:46,620
but for now the normal thing will happen

2666
01:56:41,580 --> 01:56:49,620
I guess right

2667
01:56:46,620 --> 01:56:52,950
so the this brings us I guess basically

2668
01:56:49,620 --> 01:56:55,680
to the end we had to cut Fernando off

2669
01:56:52,950 --> 01:56:58,309
earlier because of technical issues were

2670
01:56:55,680 --> 01:57:03,630
you gonna say something from him

2671
01:56:58,310 --> 01:57:05,960
okay yeah please this was a response to

2672
01:57:03,630 --> 01:57:08,370
echo this question of you which is on

2673
01:57:05,960 --> 01:57:11,220
what were the research questions ended

2674
01:57:08,370 --> 01:57:13,410
up and Fernando said identifying the

2675
01:57:11,220 --> 01:57:15,530
reasons for Florida IDs categorizing

2676
01:57:13,410 --> 01:57:17,340
them based on interoperability

2677
01:57:15,530 --> 01:57:19,500
requirements and failure modes and

2678
01:57:17,340 --> 01:57:34,230
producing algorithms to address such

2679
01:57:19,500 --> 01:57:36,180
requirements yes we can take that

2680
01:57:34,230 --> 01:57:39,599
question also that question would option

2681
01:57:36,180 --> 01:57:41,340
for that also to the list then yes

2682
01:57:39,600 --> 01:57:44,340
that's good people would please read the

2683
01:57:41,340 --> 01:57:46,170
drafts if you're interested and and yeah

2684
01:57:44,340 --> 01:57:47,520
well ask whether or not people

2685
01:57:46,170 --> 01:57:49,560
interested in adopting on the list and

2686
01:57:47,520 --> 01:57:51,390
go from there make at this point perhaps

2687
01:57:49,560 --> 01:57:53,400
given the few number of people that I've

2688
01:57:51,390 --> 01:57:55,470
actually read at doing a hum here is not

2689
01:57:53,400 --> 01:57:59,670
the best thing so we'll just take that

2690
01:57:55,470 --> 01:58:01,650
one to the list and with that message

2691
01:57:59,670 --> 01:58:06,690
anything else we can end a few minutes

2692
01:58:01,650 --> 01:58:09,259
early thanks everyone Thanks we're at

2693
01:58:06,690 --> 01:58:09,259
the blue sheet

2694
01:59:17,590 --> 01:59:20,669
[Music]

