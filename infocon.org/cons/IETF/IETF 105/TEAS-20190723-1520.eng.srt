1
00:00:06,979 --> 00:00:11,549
welcome back I think people are still

2
00:00:09,719 --> 00:00:14,579
gonna filter are still filtering in from

3
00:00:11,549 --> 00:00:16,980
the break they're enjoying their special

4
00:00:14,580 --> 00:00:21,599
brownies and cookies whatever is out

5
00:00:16,980 --> 00:00:24,570
there welcome to the second session of

6
00:00:21,599 --> 00:00:28,198
teas I am still Lou burgers you still

7
00:00:24,570 --> 00:00:31,409
LaVon era and we still have that helping

8
00:00:28,199 --> 00:00:33,480
us out secretary the only thing I'm

9
00:00:31,409 --> 00:00:36,180
going to cover here is our North note

10
00:00:33,480 --> 00:00:39,089
well every session of the IETF we're

11
00:00:36,180 --> 00:00:41,580
asked to remind everyone of our rules

12
00:00:39,090 --> 00:00:44,070
governing contributions they haven't

13
00:00:41,580 --> 00:00:46,890
changed since the last meeting the last

14
00:00:44,070 --> 00:00:52,020
session but if you're unfamiliar with

15
00:00:46,890 --> 00:00:54,780
them please look at the note well a URL

16
00:00:52,020 --> 00:00:57,570
at the bottom we are continuing to do

17
00:00:54,780 --> 00:01:00,270
etherpad the interesting thing is is

18
00:00:57,570 --> 00:01:02,910
that there was a transition from a one

19
00:01:00,270 --> 00:01:04,350
server to another server and some of our

20
00:01:02,910 --> 00:01:06,539
links got updated and some of them

21
00:01:04,349 --> 00:01:10,649
didn't if you happen to jump on the

22
00:01:06,540 --> 00:01:11,880
either pad that is not one where

23
00:01:10,649 --> 00:01:14,999
everyone's taking notes it will say

24
00:01:11,880 --> 00:01:16,920
please go to this other page and this is

25
00:01:14,999 --> 00:01:43,288
actually the one we're using and with

26
00:01:16,920 --> 00:01:45,990
that welcome back from the cookies this

27
00:01:43,289 --> 00:01:53,130
is Daniela I'm going to give a very

28
00:01:45,990 --> 00:01:55,530
short recap of the packet optical

29
00:01:53,130 --> 00:01:57,479
integration work that we are doing or

30
00:01:55,530 --> 00:01:59,929
better that we revived that this is

31
00:01:57,479 --> 00:02:04,590
something that we started a while back

32
00:01:59,929 --> 00:02:08,369
it was not good timing a to address the

33
00:02:04,590 --> 00:02:11,430
problem so we we are repurposing this

34
00:02:08,369 --> 00:02:16,019
work this work now so what's the scope

35
00:02:11,430 --> 00:02:18,239
of the draft the title is not was not a

36
00:02:16,019 --> 00:02:18,420
very good choice in the sense that we

37
00:02:18,239 --> 00:02:20,310
are

38
00:02:18,420 --> 00:02:23,069
talking about pocket optical integration

39
00:02:20,310 --> 00:02:25,980
but we the scope of the draft at least

40
00:02:23,069 --> 00:02:29,849
at the moment goes a little bit beyond

41
00:02:25,980 --> 00:02:31,799
the pocket optical integration so this

42
00:02:29,849 --> 00:02:34,140
is for sure something that needs to be

43
00:02:31,800 --> 00:02:37,110
fixed and you'll see at the end that

44
00:02:34,140 --> 00:02:39,750
there is a number of of open issues that

45
00:02:37,110 --> 00:02:42,780
we need we need to address in this

46
00:02:39,750 --> 00:02:47,610
document basically what is covering now

47
00:02:42,780 --> 00:02:51,540
is applicability of a CDN to packet

48
00:02:47,610 --> 00:02:57,330
optical integration so basically having

49
00:02:51,540 --> 00:02:59,910
a an MD SC talking to multiple PNC is at

50
00:02:57,330 --> 00:03:06,390
different layers in the network packet

51
00:02:59,910 --> 00:03:09,799
optical OTN whatever type of layers and

52
00:03:06,390 --> 00:03:16,380
then also how these our city and

53
00:03:09,799 --> 00:03:19,920
interworld deals with things beyond its

54
00:03:16,380 --> 00:03:23,299
scope but that will always coexist in

55
00:03:19,920 --> 00:03:26,100
the network we are talking about VPNs

56
00:03:23,299 --> 00:03:29,609
basically a city on a just deals with

57
00:03:26,100 --> 00:03:32,010
what we refer to as the underlay traffic

58
00:03:29,609 --> 00:03:35,250
engineer the infrastructure which is

59
00:03:32,010 --> 00:03:37,709
something that a you provision in most

60
00:03:35,250 --> 00:03:41,489
of the cases because you want to create

61
00:03:37,709 --> 00:03:43,890
a VPN layer 2 VPN layer 3 VPN and so

62
00:03:41,489 --> 00:03:47,519
this is the document of where we tried

63
00:03:43,890 --> 00:03:51,290
to identify all the things live live

64
00:03:47,519 --> 00:03:56,310
together and then a little bit of

65
00:03:51,290 --> 00:03:59,160
terminology so how service orchestration

66
00:03:56,310 --> 00:04:05,880
and the network orchestration work

67
00:03:59,160 --> 00:04:07,609
together in this context contents I've

68
00:04:05,880 --> 00:04:11,519
already covered that annex ballot

69
00:04:07,609 --> 00:04:14,910
basically the scope of the draft is to

70
00:04:11,519 --> 00:04:17,668
define in our reference architecture for

71
00:04:14,910 --> 00:04:18,238
packet optical integration which

72
00:04:17,668 --> 00:04:20,909
includes

73
00:04:18,238 --> 00:04:23,940
a city and components so what we said

74
00:04:20,910 --> 00:04:26,100
before the underlay traffic engineered

75
00:04:23,940 --> 00:04:30,820
infrastructure and the no necessity and

76
00:04:26,100 --> 00:04:36,700
components so like the creation on VPNs

77
00:04:30,820 --> 00:04:39,130
on on top of that Rick this is the

78
00:04:36,700 --> 00:04:43,719
reference architecture we were talking

79
00:04:39,130 --> 00:04:46,840
about so basically we have we have we

80
00:04:43,720 --> 00:04:50,110
have defined this domain controller and

81
00:04:46,840 --> 00:04:53,020
hierarchical controller and we said in

82
00:04:50,110 --> 00:04:55,120
the framework that the PNC is one of the

83
00:04:53,020 --> 00:04:58,060
functionalities of the domain controller

84
00:04:55,120 --> 00:04:59,830
the MDC is one of the of the

85
00:04:58,060 --> 00:05:03,550
functionalities of the article

86
00:04:59,830 --> 00:05:06,969
controller namely the functionalities in

87
00:05:03,550 --> 00:05:09,730
charge of traffic engineering so doing

88
00:05:06,970 --> 00:05:13,090
path computation provisioning at the

89
00:05:09,730 --> 00:05:16,270
tunnels provision in built on networks

90
00:05:13,090 --> 00:05:18,369
etc etc and you see how these things

91
00:05:16,270 --> 00:05:21,039
interact with what is known as it yen

92
00:05:18,370 --> 00:05:26,230
which is what is blue in in this picture

93
00:05:21,040 --> 00:05:28,980
actually we tried to put the things

94
00:05:26,230 --> 00:05:32,650
together in the in this sense you see

95
00:05:28,980 --> 00:05:36,580
the red part so the mdac under the PNC

96
00:05:32,650 --> 00:05:38,739
it is these maps one to one with the our

97
00:05:36,580 --> 00:05:42,010
capacity and architecture that we have

98
00:05:38,740 --> 00:05:44,220
in the framework well the blue part is

99
00:05:42,010 --> 00:05:48,990
the provisioning of services actually

100
00:05:44,220 --> 00:05:48,990
two different methods can be used

101
00:05:49,320 --> 00:05:59,640
identified with a number one and two in

102
00:05:53,830 --> 00:06:05,740
in this picture basically number one is

103
00:05:59,640 --> 00:06:07,870
what what uses a network model so in

104
00:06:05,740 --> 00:06:09,970
hierarchical controller asking a domain

105
00:06:07,870 --> 00:06:13,030
controller please create a VPN

106
00:06:09,970 --> 00:06:15,070
number two is that the controller going

107
00:06:13,030 --> 00:06:18,549
directly to the nodes using devices

108
00:06:15,070 --> 00:06:21,719
device models to configure the services

109
00:06:18,550 --> 00:06:21,720
in the network

110
00:06:23,560 --> 00:06:31,450
this is another thing that we wanted a

111
00:06:28,060 --> 00:06:32,830
to point out which is the fact that we

112
00:06:31,450 --> 00:06:35,260
are not talking about different

113
00:06:32,830 --> 00:06:37,780
interfaces the interface is one there

114
00:06:35,260 --> 00:06:44,630
are just simply different young models

115
00:06:37,780 --> 00:06:48,559
used actn models are models a B and C

116
00:06:44,630 --> 00:06:51,860
we about other models EF and G to do

117
00:06:48,560 --> 00:06:54,980
something else for example del to SM and

118
00:06:51,860 --> 00:07:00,670
ll3 a semaphore the creation of layer 2

119
00:06:54,980 --> 00:07:04,300
and layer 3 VPN in the drafter we try to

120
00:07:00,670 --> 00:07:10,040
so once we define a quite generic

121
00:07:04,300 --> 00:07:13,670
scenario multiple packet domain

122
00:07:10,040 --> 00:07:17,090
controllers multiple optical domain

123
00:07:13,670 --> 00:07:21,560
controllers in hierarchical one we try

124
00:07:17,090 --> 00:07:26,330
to identify a workflow basically what is

125
00:07:21,560 --> 00:07:28,520
the process what are the interfaces what

126
00:07:26,330 --> 00:07:33,159
are the different steps in the

127
00:07:28,520 --> 00:07:35,810
provisioning of such a multi-layer

128
00:07:33,160 --> 00:07:42,040
multi-layer environment multi-layer

129
00:07:35,810 --> 00:07:45,710
structure this is something that you can

130
00:07:42,040 --> 00:07:48,320
see in in the draft I would like to save

131
00:07:45,710 --> 00:07:52,630
some time and go directly to the

132
00:07:48,320 --> 00:07:55,849
conclusion and next steps so issues

133
00:07:52,630 --> 00:07:59,390
addressed by the draft applicability of

134
00:07:55,850 --> 00:08:03,520
a city and to packet optical integration

135
00:07:59,390 --> 00:08:06,950
and services VPNs

136
00:08:03,520 --> 00:08:09,530
role of a packet optical integration in

137
00:08:06,950 --> 00:08:12,469
art and soft isolation scenarios this is

138
00:08:09,530 --> 00:08:14,359
something that I didn't cover in during

139
00:08:12,470 --> 00:08:18,850
the slides but is one of the issues that

140
00:08:14,360 --> 00:08:22,610
is addressed open points open issues so

141
00:08:18,850 --> 00:08:25,580
these two items VPNs and packet optical

142
00:08:22,610 --> 00:08:30,260
integration do they needed to be

143
00:08:25,580 --> 00:08:33,260
addressed in the same draft or there is

144
00:08:30,260 --> 00:08:36,669
enough meet to split the work into two

145
00:08:33,260 --> 00:08:39,200
portions considering also the fact that

146
00:08:36,669 --> 00:08:40,968
another draft on packet optical

147
00:08:39,200 --> 00:08:47,540
integration was recently recently

148
00:08:40,969 --> 00:08:51,230
published I I read it the this morning

149
00:08:47,540 --> 00:08:55,819
it's it's it's a very good document so I

150
00:08:51,230 --> 00:08:58,029
think that is there is room for let me

151
00:08:55,820 --> 00:09:00,639
say integration between

152
00:08:58,029 --> 00:09:05,050
between the two documents so what what

153
00:09:00,639 --> 00:09:07,120
do you think should we address VPNs in a

154
00:09:05,050 --> 00:09:09,609
document pocket optical integration in

155
00:09:07,120 --> 00:09:12,610
another address just one of them because

156
00:09:09,610 --> 00:09:18,100
it's more important than the other

157
00:09:12,610 --> 00:09:21,750
we are totally open enough to get

158
00:09:18,100 --> 00:09:25,509
feedbacks and start and steer the work

159
00:09:21,750 --> 00:09:27,579
towards the right to the right this is

160
00:09:25,509 --> 00:09:31,660
at zero zero draft so there is a still

161
00:09:27,579 --> 00:09:36,128
room for improvement for changing

162
00:09:31,660 --> 00:09:38,319
everything dropping everything hi

163
00:09:36,129 --> 00:09:40,180
Michael welcome back my name is Michael

164
00:09:38,319 --> 00:09:42,310
Shaw I'm not sure if you care about the

165
00:09:40,180 --> 00:09:44,229
opinion of an academic but if you want

166
00:09:42,310 --> 00:09:47,050
an answer from an academic on these two

167
00:09:44,230 --> 00:09:49,569
questions I would say yes first there is

168
00:09:47,050 --> 00:09:51,339
value in splitting this because these

169
00:09:49,569 --> 00:09:52,959
are clearly Otto Kahn of all of things

170
00:09:51,339 --> 00:09:55,149
of course at the end of the day you can

171
00:09:52,959 --> 00:09:57,069
come up with an workflow that does all

172
00:09:55,149 --> 00:09:59,470
this but if you look at it in detail you

173
00:09:57,069 --> 00:10:00,819
see that these are subproblems that can

174
00:09:59,470 --> 00:10:03,309
actually be solved pretty well

175
00:10:00,819 --> 00:10:05,378
independently and in relatively as a

176
00:10:03,309 --> 00:10:07,449
high likelihood that those problems are

177
00:10:05,379 --> 00:10:09,519
solved independently as the EPN

178
00:10:07,449 --> 00:10:11,229
provisioning on the one hand side and

179
00:10:09,519 --> 00:10:13,120
everything that uses packet optical on

180
00:10:11,230 --> 00:10:17,050
the other side so I would strongly argue

181
00:10:13,120 --> 00:10:20,250
to split this and regarding the second

182
00:10:17,050 --> 00:10:23,349
question admob take an optical use cases

183
00:10:20,250 --> 00:10:26,620
there are quite a number of relevant or

184
00:10:23,350 --> 00:10:28,600
IP optical use cases and what you have

185
00:10:26,620 --> 00:10:30,490
in this document here is probably not

186
00:10:28,600 --> 00:10:31,930
the top relevant list if you look in the

187
00:10:30,490 --> 00:10:34,689
market if you look at commercial

188
00:10:31,930 --> 00:10:38,170
solutions that exist if you look at what

189
00:10:34,689 --> 00:10:40,269
operators typically deal with then what

190
00:10:38,170 --> 00:10:42,639
this industry meant is not the top

191
00:10:40,269 --> 00:10:46,930
priority it is probably the use case ten

192
00:10:42,639 --> 00:10:49,300
or twenty and there are nine or 19 cases

193
00:10:46,930 --> 00:10:51,370
that there are low-hanging fruits and

194
00:10:49,300 --> 00:10:53,949
higher priority so I would strongly

195
00:10:51,370 --> 00:10:57,339
argue yes look at other use cases and

196
00:10:53,949 --> 00:11:01,349
maybe in another document yeah so yeah I

197
00:10:57,339 --> 00:11:07,569
revert to the question in the sense that

198
00:11:01,350 --> 00:11:10,819
the goal here was to create a generic

199
00:11:07,569 --> 00:11:15,649
use case a generic environment a generic

200
00:11:10,819 --> 00:11:18,439
action REO and try to address it so are

201
00:11:15,649 --> 00:11:21,529
you saying that it would be better to

202
00:11:18,439 --> 00:11:26,719
define a set of use cases and then for

203
00:11:21,529 --> 00:11:28,539
each of them go into the details so do

204
00:11:26,720 --> 00:11:31,129
something specific rather than generic

205
00:11:28,539 --> 00:11:34,009
yeah I would I think there's strong

206
00:11:31,129 --> 00:11:36,350
value in coming up with realistic lists

207
00:11:34,009 --> 00:11:38,239
of ticket optical use cases and as I

208
00:11:36,350 --> 00:11:40,129
said they are in the market there are of

209
00:11:38,239 --> 00:11:42,709
the order of ten use cases that are very

210
00:11:40,129 --> 00:11:44,389
well known and it definitely makes sense

211
00:11:42,709 --> 00:11:46,069
for me as in this working group or

212
00:11:44,389 --> 00:11:49,429
another working group to document that

213
00:11:46,069 --> 00:11:51,319
but my key point is the starting point

214
00:11:49,429 --> 00:11:52,669
is probably not the use case that is in

215
00:11:51,319 --> 00:11:54,799
this document so there are other use

216
00:11:52,669 --> 00:11:56,478
cases out there and I would suggest to

217
00:11:54,799 --> 00:11:57,619
start this the other ones because they

218
00:11:56,479 --> 00:11:59,629
are more realistic they are low-hanging

219
00:11:57,619 --> 00:12:02,239
fruits and they are closer to the market

220
00:11:59,629 --> 00:12:06,459
needs at least as far as I know okay

221
00:12:02,239 --> 00:12:10,100
okay thank you it'll boost from away I

222
00:12:06,459 --> 00:12:12,498
agree on your proposal to split into two

223
00:12:10,100 --> 00:12:14,929
documents so because VPN over a city

224
00:12:12,499 --> 00:12:17,929
area is not only pocket optical cannot

225
00:12:14,929 --> 00:12:20,238
me over just a layer 2 network and a

226
00:12:17,929 --> 00:12:22,429
packet optical is not only DP and can be

227
00:12:20,239 --> 00:12:24,589
also infrastructure so the two problems

228
00:12:22,429 --> 00:12:26,600
are quite different and it's better to

229
00:12:24,589 --> 00:12:28,759
have two documents a document both

230
00:12:26,600 --> 00:12:37,759
because both are really valid problem

231
00:12:28,759 --> 00:12:40,159
thank you personally I'm a little bit

232
00:12:37,759 --> 00:12:45,470
worrying about whether we can do really

233
00:12:40,159 --> 00:12:47,720
good splitting clear whether we can do

234
00:12:45,470 --> 00:12:51,049
really good sleep Buddha splitting

235
00:12:47,720 --> 00:12:54,319
because the VPN is very specific and we

236
00:12:51,049 --> 00:12:56,539
know what it is but Pio I packet optical

237
00:12:54,319 --> 00:12:59,139
integration there are depended a lot of

238
00:12:56,539 --> 00:13:02,629
possibilities that we can consider

239
00:12:59,139 --> 00:13:04,489
different scenarios as the PIO I so we

240
00:13:02,629 --> 00:13:06,799
need to have a clear boundary if we

241
00:13:04,489 --> 00:13:09,529
really make the decision to do the

242
00:13:06,799 --> 00:13:15,709
splitting and make sure that we don't

243
00:13:09,529 --> 00:13:18,589
conflict with each other okay who are we

244
00:13:15,709 --> 00:13:21,409
my comment is regarding your slide 3

245
00:13:18,589 --> 00:13:23,130
where you were showing the MDS C

246
00:13:21,409 --> 00:13:27,600
directly talking to the

247
00:13:23,130 --> 00:13:31,710
and there was a I think a slight before

248
00:13:27,600 --> 00:13:34,410
that yes this one so wait the difference

249
00:13:31,710 --> 00:13:37,170
between one and two so based on your

250
00:13:34,410 --> 00:13:40,410
feedback because L 3 and M was something

251
00:13:37,170 --> 00:13:42,780
which was discussed in RT gwg and might

252
00:13:40,410 --> 00:13:45,870
be an ops area working group where the

253
00:13:42,780 --> 00:13:48,780
idea of the VPN network model came up so

254
00:13:45,870 --> 00:13:51,240
right now were we doing - because we did

255
00:13:48,780 --> 00:13:53,760
not have an L 3 nm or is this something

256
00:13:51,240 --> 00:13:55,620
that you believe is the right way that

257
00:13:53,760 --> 00:14:00,290
maybe the top controller can directly

258
00:13:55,620 --> 00:14:04,830
talk to the device so I would say that

259
00:14:00,290 --> 00:14:08,040
in an ideal future probably five years

260
00:14:04,830 --> 00:14:13,460
from now all the domain controllers will

261
00:14:08,040 --> 00:14:16,439
have the capability to create VPNs so

262
00:14:13,460 --> 00:14:19,710
most of the interfaces will be number

263
00:14:16,440 --> 00:14:22,650
one five year maybe is not enough maybe

264
00:14:19,710 --> 00:14:29,550
also ten in the meanwhile number two is

265
00:14:22,650 --> 00:14:33,060
he's definitely aged I also was on this

266
00:14:29,550 --> 00:14:36,390
routing group session and I heard Oscars

267
00:14:33,060 --> 00:14:38,520
presentation what I didn't understand

268
00:14:36,390 --> 00:14:43,890
and still don't understand this idea of

269
00:14:38,520 --> 00:14:46,579
layer 3 network model because Moodle is

270
00:14:43,890 --> 00:14:51,960
basically an API between two controllers

271
00:14:46,580 --> 00:14:55,440
right so so basically if you control all

272
00:14:51,960 --> 00:14:56,580
that have to talk to many different

273
00:14:55,440 --> 00:15:00,830
people so then you have to have

274
00:14:56,580 --> 00:15:04,130
different models right it's it's I

275
00:15:00,830 --> 00:15:06,780
cannot see which side probably

276
00:15:04,130 --> 00:15:08,550
orchestrate is on one side but what

277
00:15:06,780 --> 00:15:11,040
would be on the other side of the layer

278
00:15:08,550 --> 00:15:14,459
3 VPN network Moodle I don't understand

279
00:15:11,040 --> 00:15:16,430
so that's why my question was why do we

280
00:15:14,460 --> 00:15:19,170
knew this more at all so I think

281
00:15:16,430 --> 00:15:23,430
basically what you have from the picture

282
00:15:19,170 --> 00:15:26,000
is correct one what is in the picture is

283
00:15:23,430 --> 00:15:26,000
the right time

284
00:15:26,610 --> 00:15:32,790
what are you afraid - sorry sorry good

285
00:15:28,700 --> 00:15:36,790
what I hear what I mean is that MVC can

286
00:15:32,790 --> 00:15:40,120
definitely talk to devices whenever

287
00:15:36,790 --> 00:15:43,060
they need to or for example attach

288
00:15:40,120 --> 00:15:54,430
service to tunnels produced by other

289
00:15:43,060 --> 00:15:56,319
models okay based on even during the

290
00:15:54,430 --> 00:15:58,750
implementation side we faced quite a bit

291
00:15:56,320 --> 00:16:01,300
of issues when we were trying to do that

292
00:15:58,750 --> 00:16:03,790
and not having an L 3 and M model just

293
00:16:01,300 --> 00:16:06,370
created too much of confusion from the

294
00:16:03,790 --> 00:16:08,410
implementation side as well because you

295
00:16:06,370 --> 00:16:10,750
have a domain controller that its job is

296
00:16:08,410 --> 00:16:13,089
to talk to the device for T model for

297
00:16:10,750 --> 00:16:14,830
everything else you are relying on the

298
00:16:13,090 --> 00:16:17,560
domain controller but with respect to

299
00:16:14,830 --> 00:16:19,570
VPN configuration you directly hijack

300
00:16:17,560 --> 00:16:21,969
them and directly send to the device so

301
00:16:19,570 --> 00:16:24,040
it was becoming didn't feel like the

302
00:16:21,970 --> 00:16:25,270
right approach and anyway L 3 and M

303
00:16:24,040 --> 00:16:27,069
discussion doesn't belong in this

304
00:16:25,270 --> 00:16:28,960
working group so we should not take too

305
00:16:27,070 --> 00:16:33,670
much time about the applicability of

306
00:16:28,960 --> 00:16:35,440
that Thank You Daniel King so just wants

307
00:16:33,670 --> 00:16:37,390
to echo a theme that seems to be

308
00:16:35,440 --> 00:16:40,180
occurring this week is that near the ITF

309
00:16:37,390 --> 00:16:42,069
in regards to sort of modeling services

310
00:16:40,180 --> 00:16:45,609
and then sort of developing type the

311
00:16:42,070 --> 00:16:49,060
device models themselves kind of loose

312
00:16:45,610 --> 00:16:52,000
loses some of the integration and and

313
00:16:49,060 --> 00:16:54,069
some of the operational issues you know

314
00:16:52,000 --> 00:16:56,320
we're very good at sort of fragmentation

315
00:16:54,070 --> 00:16:58,150
or fragmenting the problem space and

316
00:16:56,320 --> 00:16:59,500
developing a device model and it's very

317
00:16:58,150 --> 00:17:01,390
good device model for a very specific

318
00:16:59,500 --> 00:17:03,520
piece of equipment but we often lose

319
00:17:01,390 --> 00:17:05,220
sight of the of the end to end service

320
00:17:03,520 --> 00:17:07,480
and sometimes it's quite difficult to

321
00:17:05,220 --> 00:17:09,790
actually map the models together in

322
00:17:07,480 --> 00:17:11,410
order to develop the service so you know

323
00:17:09,790 --> 00:17:14,170
we hear this from industry that actually

324
00:17:11,410 --> 00:17:15,790
Yang's not being used for the young ITF

325
00:17:14,170 --> 00:17:17,680
models are not being used because the

326
00:17:15,790 --> 00:17:19,000
ITF doesn't understand the system it

327
00:17:17,680 --> 00:17:20,440
doesn't understand the end-to-end

328
00:17:19,000 --> 00:17:24,910
service so I think we do need these

329
00:17:20,440 --> 00:17:28,150
documents the second comment is as a

330
00:17:24,910 --> 00:17:30,190
co-author of the other and Packard

331
00:17:28,150 --> 00:17:31,630
optical integration document I do think

332
00:17:30,190 --> 00:17:33,610
there's some synergy between you know

333
00:17:31,630 --> 00:17:34,990
both of our documents here one may be to

334
00:17:33,610 --> 00:17:36,850
look at the end-to-end service and the

335
00:17:34,990 --> 00:17:39,790
other to do sort of some of the detail

336
00:17:36,850 --> 00:17:42,159
gap analysis of which models do you need

337
00:17:39,790 --> 00:17:44,080
to combine in order to provide a

338
00:17:42,160 --> 00:17:46,380
particular use case or solve a

339
00:17:44,080 --> 00:17:48,049
particularly use case in fact optical

340
00:17:46,380 --> 00:17:50,820
thanks

341
00:17:48,049 --> 00:17:53,790
eatle woozi I tend to agree with drew on

342
00:17:50,820 --> 00:17:56,700
the interface number two the risk I see

343
00:17:53,790 --> 00:17:59,850
here is consistency in terms of naming

344
00:17:56,700 --> 00:18:03,120
because the PSC domain number two is

345
00:17:59,850 --> 00:18:05,750
doing some obstruction so in the MDS he

346
00:18:03,120 --> 00:18:08,549
may not even be aware about the box

347
00:18:05,750 --> 00:18:11,580
which is terminating the tunnel and

348
00:18:08,549 --> 00:18:13,950
therefore we need to have maybe just for

349
00:18:11,580 --> 00:18:16,559
naming translation may be very simple

350
00:18:13,950 --> 00:18:18,870
but something in domain controller

351
00:18:16,559 --> 00:18:20,850
number two that takes the configuration

352
00:18:18,870 --> 00:18:24,689
of the VPN service I translate that into

353
00:18:20,850 --> 00:18:28,020
a vise configuration that is why we

354
00:18:24,690 --> 00:18:31,020
remove the complexity of naming

355
00:18:28,020 --> 00:18:33,510
consistency and that's maybe it is

356
00:18:31,020 --> 00:18:36,418
better to go with number one and a low

357
00:18:33,510 --> 00:18:38,309
and a slight weight solution if in case

358
00:18:36,419 --> 00:18:43,020
you think to compress for the domain

359
00:18:38,309 --> 00:18:46,770
controller yeah but as as I said as I

360
00:18:43,020 --> 00:18:50,760
said to Dhruv ideally I agree with you

361
00:18:46,770 --> 00:18:53,840
ideally having just interface number one

362
00:18:50,760 --> 00:18:56,179
would be would be great would would work

363
00:18:53,840 --> 00:18:58,409
the thing is that there is plenty of

364
00:18:56,179 --> 00:19:05,700
commercial implementation today with

365
00:18:58,410 --> 00:19:12,030
interface type two so they work less

366
00:19:05,700 --> 00:19:14,840
than one minute what happens with some

367
00:19:12,030 --> 00:19:17,340
restructuring may be so binding may be

368
00:19:14,840 --> 00:19:22,159
horse craters that we look forward to

369
00:19:17,340 --> 00:19:22,159
seeing the next time they come

370
00:19:51,429 --> 00:19:58,789
okay so this is the applicability of a

371
00:19:55,489 --> 00:20:03,649
CTN to support 5g transport it's a 0-0

372
00:19:58,789 --> 00:20:05,599
draft that young and I wrote so let's

373
00:20:03,649 --> 00:20:08,330
get to the problem that needs to be

374
00:20:05,599 --> 00:20:12,830
solved the question is basically how we

375
00:20:08,330 --> 00:20:16,309
map the 5g slice instance to a transport

376
00:20:12,830 --> 00:20:19,668
slice instance and if you look at the

377
00:20:16,309 --> 00:20:22,119
from the 3gpp or the 5g side a slice is

378
00:20:19,669 --> 00:20:24,169
defined as an end-to-end logical network

379
00:20:22,119 --> 00:20:26,839
comprising a certain set of resources

380
00:20:24,169 --> 00:20:30,830
and so on you know it's defined in 3gpp

381
00:20:26,839 --> 00:20:33,830
documents 28 5 31 and so on so that

382
00:20:30,830 --> 00:20:37,879
would mean that it's across from the

383
00:20:33,830 --> 00:20:41,418
handset to the base station to use a

384
00:20:37,879 --> 00:20:44,599
plane device like a router and all the

385
00:20:41,419 --> 00:20:45,830
way where the PDU session exists and on

386
00:20:44,599 --> 00:20:49,789
the other hand the transport network

387
00:20:45,830 --> 00:20:51,859
slice instance is as I guess you know

388
00:20:49,789 --> 00:20:54,589
you probably have looked at in more

389
00:20:51,859 --> 00:20:58,218
detail across a transport network itself

390
00:20:54,589 --> 00:21:02,690
across two points or resources across

391
00:20:58,219 --> 00:21:06,109
multiple points in there if I had to

392
00:21:02,690 --> 00:21:09,200
look at it this way you could think that

393
00:21:06,109 --> 00:21:11,989
between the base station and a user

394
00:21:09,200 --> 00:21:13,759
plane device in the 3gpp network we

395
00:21:11,989 --> 00:21:16,009
could think that there's a transport

396
00:21:13,759 --> 00:21:18,649
network and another transport network

397
00:21:16,009 --> 00:21:21,619
from that user plane device to the

398
00:21:18,649 --> 00:21:21,978
application so but that would still be

399
00:21:21,619 --> 00:21:25,369
the same

400
00:21:21,979 --> 00:21:27,289
5g slice and on the flip side you could

401
00:21:25,369 --> 00:21:30,529
say that the transport network is not

402
00:21:27,289 --> 00:21:32,629
only serving a 3gpp or a mobile operator

403
00:21:30,529 --> 00:21:34,960
it's it's several other clients as well

404
00:21:32,629 --> 00:21:39,139
so there needs to be a mapping between

405
00:21:34,960 --> 00:21:42,280
what a slice means in the 5g domain

406
00:21:39,140 --> 00:21:45,920
and what resources are reserved or

407
00:21:42,280 --> 00:21:47,149
provided in the transport domain and I

408
00:21:45,920 --> 00:21:50,000
think that's what we're trying to do

409
00:21:47,150 --> 00:21:53,600
here so if you look at the details are

410
00:21:50,000 --> 00:21:57,740
really in the in the 3gpp documents

411
00:21:53,600 --> 00:22:00,949
there's the network slice identifies

412
00:21:57,740 --> 00:22:04,220
like the NSS AI The Cure's identifier is

413
00:22:00,950 --> 00:22:08,120
like 5qi and all of that put together

414
00:22:04,220 --> 00:22:13,910
defines what should be provided in a PD

415
00:22:08,120 --> 00:22:16,969
u session and the the transport between

416
00:22:13,910 --> 00:22:21,500
two of these nodes may cross more than

417
00:22:16,970 --> 00:22:22,970
one network layer to network so for

418
00:22:21,500 --> 00:22:24,950
example it could be a data center

419
00:22:22,970 --> 00:22:26,330
network followed by a backhaul network

420
00:22:24,950 --> 00:22:29,740
and and another data center network

421
00:22:26,330 --> 00:22:32,899
between those two functions so in

422
00:22:29,740 --> 00:22:34,760
considering this I think we think that

423
00:22:32,900 --> 00:22:37,730
it's better that we carry this mapping

424
00:22:34,760 --> 00:22:40,220
info in some kind of an IP layer header

425
00:22:37,730 --> 00:22:42,890
extension or some other way so that you

426
00:22:40,220 --> 00:22:46,910
don't have to map between the different

427
00:22:42,890 --> 00:22:49,700
layers of networks so what we're

428
00:22:46,910 --> 00:22:51,650
defining here is a context identifier

429
00:22:49,700 --> 00:22:56,030
called the mobile transport network

430
00:22:51,650 --> 00:22:59,720
context and this identifier Maps a class

431
00:22:56,030 --> 00:23:02,470
a service the if it's a cue CI or a 5qi

432
00:22:59,720 --> 00:23:07,010
I meant to write 5qi actually there and

433
00:23:02,470 --> 00:23:10,130
slice aspects of a 5g slice and other

434
00:23:07,010 --> 00:23:13,340
QoS requirements including reliability

435
00:23:10,130 --> 00:23:16,300
isolation and security and so on to a V

436
00:23:13,340 --> 00:23:20,959
and slice in the transport domain and

437
00:23:16,300 --> 00:23:25,190
it's up to the 3gpp or the 5g domain to

438
00:23:20,960 --> 00:23:26,750
generate this identifier based on and

439
00:23:25,190 --> 00:23:29,990
you know all of that would be in the

440
00:23:26,750 --> 00:23:32,110
3gpp network because they know the users

441
00:23:29,990 --> 00:23:35,060
and the subscribers and how much

442
00:23:32,110 --> 00:23:36,949
differentiation is needed and so based

443
00:23:35,060 --> 00:23:40,550
on that it can generate these

444
00:23:36,950 --> 00:23:42,560
identifiers and request for service to

445
00:23:40,550 --> 00:23:45,710
be offered in a transport network so

446
00:23:42,560 --> 00:23:48,139
that would be a contract between the the

447
00:23:45,710 --> 00:23:51,650
5g domain and the underlying transport

448
00:23:48,140 --> 00:23:52,970
of me note that this is not a one-to-one

449
00:23:51,650 --> 00:23:55,669
association between

450
00:23:52,970 --> 00:24:02,450
the PDU session the PDA session is in

451
00:23:55,669 --> 00:24:05,539
the the 5g domain and the the identifier

452
00:24:02,450 --> 00:24:08,870
that maps to the transporter me so then

453
00:24:05,539 --> 00:24:11,419
there will be multiple to one so many

454
00:24:08,870 --> 00:24:13,668
flows to one and I think that's the

455
00:24:11,419 --> 00:24:15,740
basis for saying that the identifier

456
00:24:13,669 --> 00:24:18,669
would scale well because it's scaling by

457
00:24:15,740 --> 00:24:21,200
the square of only the number of

458
00:24:18,669 --> 00:24:23,950
associations in the transporter the

459
00:24:21,200 --> 00:24:27,740
flows would be much higher than that

460
00:24:23,950 --> 00:24:30,860
also the identifier is generated before

461
00:24:27,740 --> 00:24:34,669
the session is established and so there

462
00:24:30,860 --> 00:24:36,289
is no need to figure out where that path

463
00:24:34,669 --> 00:24:38,390
is when the session needs to be

464
00:24:36,289 --> 00:24:40,908
established so those are the I'll get

465
00:24:38,390 --> 00:24:42,730
into the little more detail in the next

466
00:24:40,909 --> 00:24:46,659
couple of slides this one in the next

467
00:24:42,730 --> 00:24:49,100
and to show how this can work so I think

468
00:24:46,659 --> 00:24:51,919
on this slide I will not go into too

469
00:24:49,100 --> 00:24:54,559
much detail because it was presented in

470
00:24:51,919 --> 00:24:57,559
much more detail I think in the last

471
00:24:54,559 --> 00:24:59,360
presentation at least from the point of

472
00:24:57,559 --> 00:25:04,480
view that I want to focus on which is

473
00:24:59,360 --> 00:25:07,459
the CNC the CNC is the point at which

474
00:25:04,480 --> 00:25:09,710
the 5g network interface or that's

475
00:25:07,460 --> 00:25:12,919
there's an there's another entity in the

476
00:25:09,710 --> 00:25:18,409
5g domain with which this will have a

477
00:25:12,919 --> 00:25:22,159
contract for a slice or set of transport

478
00:25:18,409 --> 00:25:24,049
paths so that's that's the focus I mean

479
00:25:22,159 --> 00:25:27,409
I think this figure is pretty familiar

480
00:25:24,049 --> 00:25:32,500
to people here so I won't get into much

481
00:25:27,409 --> 00:25:38,090
detail here but just note that the CNC

482
00:25:32,500 --> 00:25:40,059
oops is the session controller in this I

483
00:25:38,090 --> 00:25:43,939
mean the Sdn controller in this document

484
00:25:40,059 --> 00:25:48,500
so I'll just briefly go over the figure

485
00:25:43,940 --> 00:25:52,700
so that it's easy enough to follow so

486
00:25:48,500 --> 00:25:54,919
all thats in that blue box is 3gpp

487
00:25:52,700 --> 00:25:56,990
specifications and that's why I'm trying

488
00:25:54,919 --> 00:25:58,309
to avoid getting into the details over

489
00:25:56,990 --> 00:26:03,250
there because that would have to be

490
00:25:58,309 --> 00:26:07,820
specified by 3gpp but

491
00:26:03,250 --> 00:26:10,070
let me start with the TPM and the action

492
00:26:07,820 --> 00:26:12,740
one where the it's a the TPM as a

493
00:26:10,070 --> 00:26:16,370
transport path manager which estimates

494
00:26:12,740 --> 00:26:18,260
how much how many slices and how much

495
00:26:16,370 --> 00:26:21,530
bandwidth and other resources are needed

496
00:26:18,260 --> 00:26:24,560
between two points based on that

497
00:26:21,530 --> 00:26:27,710
estimation it generates the MT and C and

498
00:26:24,560 --> 00:26:32,060
programs or gets a contract with the SD

499
00:26:27,710 --> 00:26:36,170
NC to deliver the services across a

500
00:26:32,060 --> 00:26:39,440
transport path so that's what the TPM

501
00:26:36,170 --> 00:26:41,810
holds and the SDN C I guess intern

502
00:26:39,440 --> 00:26:46,190
programs the underlying transport

503
00:26:41,810 --> 00:26:48,679
backhaul and between the PE routers on

504
00:26:46,190 --> 00:26:51,530
the other hand there's a 3gpp nodes that

505
00:26:48,680 --> 00:26:54,110
manage the session which is the SMF and

506
00:26:51,530 --> 00:26:57,550
then the user plane devices so when a

507
00:26:54,110 --> 00:27:00,350
handset or a Yui sets up a session

508
00:26:57,550 --> 00:27:02,870
it's a session management function that

509
00:27:00,350 --> 00:27:06,919
manages that function so the session

510
00:27:02,870 --> 00:27:10,629
manager programs the underlying

511
00:27:06,920 --> 00:27:15,730
transport path MTN CI or the ID and

512
00:27:10,630 --> 00:27:19,070
that's what is delivered when a session

513
00:27:15,730 --> 00:27:21,860
transmit transfers from the use of you

514
00:27:19,070 --> 00:27:24,020
PMF on one side to the other

515
00:27:21,860 --> 00:27:25,550
I don't know if there's a simpler way to

516
00:27:24,020 --> 00:27:28,370
explain it I mean there's three sets of

517
00:27:25,550 --> 00:27:31,550
action so one is to program the MT MZ

518
00:27:28,370 --> 00:27:34,399
identifier the TPM to the Sdn C to the

519
00:27:31,550 --> 00:27:39,050
PE router so that's the provisioning

520
00:27:34,400 --> 00:27:43,040
part the the other details are in 3gpp

521
00:27:39,050 --> 00:27:47,480
so I'll skip that and when a packet

522
00:27:43,040 --> 00:27:52,370
arrives at the UPN F it could be base

523
00:27:47,480 --> 00:27:56,210
station or a router let's say so that

524
00:27:52,370 --> 00:27:57,979
classifies that session packet and based

525
00:27:56,210 --> 00:28:02,420
on that classification the empty NC

526
00:27:57,980 --> 00:28:04,730
identifier is inserted and when the MTN

527
00:28:02,420 --> 00:28:05,660
cid is presented to the PE router in

528
00:28:04,730 --> 00:28:08,720
step 3

529
00:28:05,660 --> 00:28:11,690
it grants the resources that was

530
00:28:08,720 --> 00:28:16,030
reserved in the transport network

531
00:28:11,690 --> 00:28:19,160
so that's the sequence of operation so

532
00:28:16,030 --> 00:28:22,460
to do this we also need to be able to

533
00:28:19,160 --> 00:28:25,610
carry this identifier in the IP packet

534
00:28:22,460 --> 00:28:28,370
in a suitable place where it can be read

535
00:28:25,610 --> 00:28:31,040
pretty easily and the transport network

536
00:28:28,370 --> 00:28:34,340
and program so for example in this case

537
00:28:31,040 --> 00:28:37,810
the the 2u PMF functions are the G note

538
00:28:34,340 --> 00:28:41,330
B and the UPF on on the figure up there

539
00:28:37,810 --> 00:28:43,760
and that's an n3 interface between so

540
00:28:41,330 --> 00:28:45,800
when a packet arrives at the G note B it

541
00:28:43,760 --> 00:28:51,740
gets classified and an empty and C

542
00:28:45,800 --> 00:28:55,120
identifier is inserted based on what the

543
00:28:51,740 --> 00:28:58,700
3gpp Network has programmed it was then

544
00:28:55,120 --> 00:29:02,360
when it when the packet goes to the PE

545
00:28:58,700 --> 00:29:04,990
router the MTN C identifier is inspected

546
00:29:02,360 --> 00:29:09,949
and the appropriate forwarding label is

547
00:29:04,990 --> 00:29:13,490
put in the appropriate forwarding label

548
00:29:09,950 --> 00:29:15,560
is inserted so we chose this method

549
00:29:13,490 --> 00:29:19,400
because many of the other ones are not

550
00:29:15,560 --> 00:29:21,830
suitable gtp U is not a good one DHCP

551
00:29:19,400 --> 00:29:25,520
does not or the flow labels are not a

552
00:29:21,830 --> 00:29:29,419
beautiful and we think that either a gue

553
00:29:25,520 --> 00:29:33,889
SR v6 or maybe other such extensions are

554
00:29:29,420 --> 00:29:36,530
the right ones so I think there are this

555
00:29:33,890 --> 00:29:39,020
is the first draft right I mean we think

556
00:29:36,530 --> 00:29:42,950
that there's many holes to be plugged in

557
00:29:39,020 --> 00:29:44,900
here and the use of gue and other things

558
00:29:42,950 --> 00:29:46,400
and we're looking for feedback on all of

559
00:29:44,900 --> 00:29:49,370
this

560
00:29:46,400 --> 00:29:51,440
this was more from a transport side and

561
00:29:49,370 --> 00:29:56,659
I'll be presenting a similar case from

562
00:29:51,440 --> 00:29:58,850
the mobile transport in the DMM session

563
00:29:56,660 --> 00:30:01,690
the counter of this with more details on

564
00:29:58,850 --> 00:30:01,689
the 3gpp side

565
00:30:06,990 --> 00:30:16,090
hi Tom Herbert so in terms of the

566
00:30:10,330 --> 00:30:18,100
mechanism ipv6 extension headers could

567
00:30:16,090 --> 00:30:20,770
be a possibility in fact I wrote a draft

568
00:30:18,100 --> 00:30:21,939
con firewall in service tickets not sure

569
00:30:20,770 --> 00:30:24,850
you've seen it but it's almost identical

570
00:30:21,940 --> 00:30:28,540
to this the idea is we carry some sort

571
00:30:24,850 --> 00:30:30,730
of identifier that provides QoS and even

572
00:30:28,540 --> 00:30:32,409
routing information inside an app a

573
00:30:30,730 --> 00:30:35,500
value and that's carried an ipv6

574
00:30:32,410 --> 00:30:38,440
extension header it might be worth

575
00:30:35,500 --> 00:30:41,050
looking at so to an offline if you want

576
00:30:38,440 --> 00:30:43,600
I I agree I mean this I'd like to talk

577
00:30:41,050 --> 00:30:45,879
to you about is this a fast as firewall

578
00:30:43,600 --> 00:30:47,919
and service tickets so I presented in

579
00:30:45,880 --> 00:30:50,410
int area I really didn't know what the

580
00:30:47,920 --> 00:30:51,790
correct home is seeing this working

581
00:30:50,410 --> 00:30:54,730
group for the first time this might be

582
00:30:51,790 --> 00:30:57,070
an interesting location for it it would

583
00:30:54,730 --> 00:30:59,170
serve a lot of the same aspects it also

584
00:30:57,070 --> 00:31:00,520
has some other features I would intend

585
00:30:59,170 --> 00:31:03,160
this to actually be going to the

586
00:31:00,520 --> 00:31:04,510
application the application send in this

587
00:31:03,160 --> 00:31:06,340
and then we have some mechanisms to

588
00:31:04,510 --> 00:31:08,680
reflect it so the return path is always

589
00:31:06,340 --> 00:31:11,199
another another problem with stuff like

590
00:31:08,680 --> 00:31:13,240
this I look for you I mean those are

591
00:31:11,200 --> 00:31:15,160
areas which we need more feedback I mean

592
00:31:13,240 --> 00:31:17,680
this mechanism is basically about how to

593
00:31:15,160 --> 00:31:20,260
send the MTN C itself and we're looking

594
00:31:17,680 --> 00:31:23,470
at the right way to do that in an IP

595
00:31:20,260 --> 00:31:25,600
packet so after each other so it's nice

596
00:31:23,470 --> 00:31:29,200
that there's options but that's also a

597
00:31:25,600 --> 00:31:30,280
problem right so we have go and SR v6

598
00:31:29,200 --> 00:31:34,270
and then somebody you want to do this

599
00:31:30,280 --> 00:31:36,760
MPLS and many many options the value or

600
00:31:34,270 --> 00:31:39,040
proposition of IP these extension

601
00:31:36,760 --> 00:31:41,379
headers like hop-by-hop options are do

602
00:31:39,040 --> 00:31:43,960
it once and it should work and you know

603
00:31:41,380 --> 00:31:45,640
you can use cases for ipv6 ipv4 it's

604
00:31:43,960 --> 00:31:47,590
another issue that we have to solve

605
00:31:45,640 --> 00:31:51,070
I'd like to only one other things we

606
00:31:47,590 --> 00:31:52,810
want to do this for ipv6 and so like I

607
00:31:51,070 --> 00:31:56,080
said I'd be before is a separate

608
00:31:52,810 --> 00:31:57,879
question I do have some ideas on that we

609
00:31:56,080 --> 00:32:00,460
could talk offline also but would be

610
00:31:57,880 --> 00:32:02,620
nice in the end have one common solution

611
00:32:00,460 --> 00:32:05,520
instead of fragmented solutions I've

612
00:32:02,620 --> 00:32:05,520
talked to you thanks

613
00:32:16,480 --> 00:32:22,370
good afternoon everyone my name is

614
00:32:18,950 --> 00:32:23,960
Rosario quia nokia and on behalf of five

615
00:32:22,370 --> 00:32:28,969
co-authors I'm going to present

616
00:32:23,960 --> 00:32:38,990
transverse lies activity okay it's my

617
00:32:28,970 --> 00:32:41,900
turn now okay okay so here it says

618
00:32:38,990 --> 00:32:45,890
interface by Israeli interfaces before

619
00:32:41,900 --> 00:32:49,730
going through the detail of the draft

620
00:32:45,890 --> 00:32:52,900
the door a few comments one is there

621
00:32:49,730 --> 00:32:56,120
recently there was a there is a project

622
00:32:52,900 --> 00:32:59,179
accepted by BBF which is in the same

623
00:32:56,120 --> 00:33:01,428
area and we feel that whatever we do

624
00:32:59,179 --> 00:33:04,160
here should complement that so this is

625
00:33:01,429 --> 00:33:07,340
the one of the specific topics that is

626
00:33:04,160 --> 00:33:10,790
very important to be considered and then

627
00:33:07,340 --> 00:33:12,889
as I go through the presentation I will

628
00:33:10,790 --> 00:33:15,980
show you how this one relates of

629
00:33:12,890 --> 00:33:19,040
whatever we do as ITF and the work at

630
00:33:15,980 --> 00:33:20,990
BBF and ITF should be coordinated as

631
00:33:19,040 --> 00:33:24,620
well so this is basically their starting

632
00:33:20,990 --> 00:33:26,660
point the it's somehow related to the

633
00:33:24,620 --> 00:33:28,909
previous presentation let's talk about

634
00:33:26,660 --> 00:33:30,500
networking slicing and transport and I'm

635
00:33:28,910 --> 00:33:33,530
trying to just give you another

636
00:33:30,500 --> 00:33:35,510
perspective of how everything relates to

637
00:33:33,530 --> 00:33:38,000
each other so you've seen this picture

638
00:33:35,510 --> 00:33:41,900
or a version of this picture most likely

639
00:33:38,000 --> 00:33:45,410
in the different contexts but I'm trying

640
00:33:41,900 --> 00:33:47,270
to mention here that what is into a

641
00:33:45,410 --> 00:33:50,470
network a slice basically the

642
00:33:47,270 --> 00:33:56,600
representation of illogical interfaces

643
00:33:50,470 --> 00:33:58,760
from left to right left is uue let's say

644
00:33:56,600 --> 00:34:03,199
there is a mobile network operator has

645
00:33:58,760 --> 00:34:04,370
trick make customer or tenants BMW Fiat

646
00:34:03,200 --> 00:34:07,340
and public safety

647
00:34:04,370 --> 00:34:10,668
each of these tenants are asking about

648
00:34:07,340 --> 00:34:13,310
various independent logical network from

649
00:34:10,668 --> 00:34:15,770
UE all the way to application we call

650
00:34:13,310 --> 00:34:17,509
each of this independent Network

651
00:34:15,770 --> 00:34:20,000
end-to-end network so it's very

652
00:34:17,510 --> 00:34:21,570
important end-to-end means network slice

653
00:34:20,000 --> 00:34:23,909
from left to right

654
00:34:21,570 --> 00:34:25,860
each of these networks lies I have

655
00:34:23,909 --> 00:34:29,159
various colors here you can think of

656
00:34:25,860 --> 00:34:32,790
color as SLA each one has a specific SLA

657
00:34:29,159 --> 00:34:35,819
and each of them has various sub

658
00:34:32,790 --> 00:34:39,418
components Ranas lies sometimes they

659
00:34:35,820 --> 00:34:43,560
call it ran sub slice or rat subnet is

660
00:34:39,418 --> 00:34:46,500
the same thing chorus lies and transfer

661
00:34:43,560 --> 00:34:48,120
as lorena slice means in duran depends

662
00:34:46,500 --> 00:34:51,179
on a deployment i'm creating at

663
00:34:48,120 --> 00:34:53,630
personality in ran to understand each of

664
00:34:51,179 --> 00:34:56,130
these networks lies by the same token

665
00:34:53,630 --> 00:34:57,930
chorus lies means i'm creating the

666
00:34:56,130 --> 00:35:00,180
personality on my core equipment

667
00:34:57,930 --> 00:35:02,370
equipment is different configuration is

668
00:35:00,180 --> 00:35:05,190
different but the logic is the same and

669
00:35:02,370 --> 00:35:08,640
last but not least there is a transfer

670
00:35:05,190 --> 00:35:10,590
the slice we talked about when at ITA we

671
00:35:08,640 --> 00:35:12,330
talked about networking sliced basically

672
00:35:10,590 --> 00:35:15,450
we are talking about the transfer a

673
00:35:12,330 --> 00:35:17,759
large portion of that that one is a set

674
00:35:15,450 --> 00:35:19,919
of connections as you will see here

675
00:35:17,760 --> 00:35:22,470
there are various connection that should

676
00:35:19,920 --> 00:35:24,690
be happen between ran and chord or

677
00:35:22,470 --> 00:35:27,240
sometimes inside the ran depends on the

678
00:35:24,690 --> 00:35:28,920
deployment of ran I have to create so

679
00:35:27,240 --> 00:35:31,859
called meet hall or front hall

680
00:35:28,920 --> 00:35:33,990
connectivity so long is very short you

681
00:35:31,860 --> 00:35:36,780
will see an end to a network of ice

682
00:35:33,990 --> 00:35:39,240
contains rena slice chorus lies and

683
00:35:36,780 --> 00:35:42,120
transport each of them has its own

684
00:35:39,240 --> 00:35:45,209
controller the focus of this

685
00:35:42,120 --> 00:35:48,210
presentation is a transfer a slice which

686
00:35:45,210 --> 00:35:50,100
basically gives the connectivity and we

687
00:35:48,210 --> 00:35:53,070
want to address us yes please

688
00:35:50,100 --> 00:35:56,220
sorry you're Riskin clarification

689
00:35:53,070 --> 00:35:58,820
question so i hear this for the second

690
00:35:56,220 --> 00:36:01,980
time what I don't understand is when you

691
00:35:58,820 --> 00:36:04,770
write this line right like this segments

692
00:36:01,980 --> 00:36:08,370
is it actually point-to-point connection

693
00:36:04,770 --> 00:36:10,020
or each of these segments are represents

694
00:36:08,370 --> 00:36:13,020
a topology so basically you may have

695
00:36:10,020 --> 00:36:15,890
multiple multiple connectivity the

696
00:36:13,020 --> 00:36:19,770
latter one okay so so it would be better

697
00:36:15,890 --> 00:36:22,080
if you would draw it like this is a you

698
00:36:19,770 --> 00:36:25,860
know very high level to at least you're

699
00:36:22,080 --> 00:36:27,750
pretty but it's a point is taken so this

700
00:36:25,860 --> 00:36:30,300
is a better picture for one of those

701
00:36:27,750 --> 00:36:33,030
transferred into a network a slice let's

702
00:36:30,300 --> 00:36:35,850
say I have a mobile network operator X

703
00:36:33,030 --> 00:36:39,030
there is a company-wide

704
00:36:35,850 --> 00:36:42,690
once a type of service URL see you know

705
00:36:39,030 --> 00:36:45,000
low-latency and mice SLA is latency less

706
00:36:42,690 --> 00:36:46,770
than five milliseconds how to create

707
00:36:45,000 --> 00:36:49,050
that the network a slice and the

708
00:36:46,770 --> 00:36:51,840
component artifact is not created in the

709
00:36:49,050 --> 00:36:53,820
network yet so from the top to bottom if

710
00:36:51,840 --> 00:36:55,490
it's a PowerPoint as an animation but

711
00:36:53,820 --> 00:36:57,990
I'm trying to go through the animation

712
00:36:55,490 --> 00:37:00,810
basically the logic here is starting

713
00:36:57,990 --> 00:37:03,660
from one and the note yellow is

714
00:37:00,810 --> 00:37:05,190
important these are logical as if

715
00:37:03,660 --> 00:37:07,740
doesn't mean necessarily happen in the

716
00:37:05,190 --> 00:37:09,960
sequence from the top to bottom customer

717
00:37:07,740 --> 00:37:12,660
asked about the service Orchestrator

718
00:37:09,960 --> 00:37:15,390
which is the end-to-end context goes

719
00:37:12,660 --> 00:37:18,330
through some action using the network

720
00:37:15,390 --> 00:37:21,060
slice blueprint aka Network a slice

721
00:37:18,330 --> 00:37:23,250
template is creating a profile profile

722
00:37:21,060 --> 00:37:25,380
says what are the components should be

723
00:37:23,250 --> 00:37:28,110
inside the end to a network as life and

724
00:37:25,380 --> 00:37:30,780
after that it goes through a step three

725
00:37:28,110 --> 00:37:33,180
four five six to basically create them

726
00:37:30,780 --> 00:37:36,360
or configure them the important aspect

727
00:37:33,180 --> 00:37:39,660
of our discussion here is comparison

728
00:37:36,360 --> 00:37:42,090
between interface four five and six

729
00:37:39,660 --> 00:37:45,330
interface four and five is basically

730
00:37:42,090 --> 00:37:48,030
creating the ran and kora slices the

731
00:37:45,330 --> 00:37:51,029
context that we creating on the run and

732
00:37:48,030 --> 00:37:53,040
core they are well defined in 3gpp and

733
00:37:51,030 --> 00:37:55,680
the context of this discussion is

734
00:37:53,040 --> 00:37:57,750
interface six that we are sending that

735
00:37:55,680 --> 00:38:00,270
one to a transfer a slice controller and

736
00:37:57,750 --> 00:38:04,500
we want to create the connectivity inter

737
00:38:00,270 --> 00:38:07,259
forced interfaces six is not defined in

738
00:38:04,500 --> 00:38:11,070
3gpp and basically the work that we want

739
00:38:07,260 --> 00:38:13,380
to do is defining interfaces which is

740
00:38:11,070 --> 00:38:16,740
basically the aligned with interface for

741
00:38:13,380 --> 00:38:20,340
and file for the grant and call

742
00:38:16,740 --> 00:38:22,049
respectively so whatever we want to do

743
00:38:20,340 --> 00:38:24,540
is basically that this is another

744
00:38:22,050 --> 00:38:28,380
representation of same logic these are

745
00:38:24,540 --> 00:38:31,950
taken from 3gpp on the left left the

746
00:38:28,380 --> 00:38:34,230
picture you will see that whatever 3gpp

747
00:38:31,950 --> 00:38:36,660
talks about transfer is a death - line

748
00:38:34,230 --> 00:38:39,090
basically this is a definition of the

749
00:38:36,660 --> 00:38:41,310
transport connectivity that we want to

750
00:38:39,090 --> 00:38:44,220
explore on the right hand side bottom

751
00:38:41,310 --> 00:38:46,020
right is basically the same picture that

752
00:38:44,220 --> 00:38:47,450
I showed you before this is taken from

753
00:38:46,020 --> 00:38:51,330
the

754
00:38:47,450 --> 00:38:53,339
five-thirty it's basically demonstrate

755
00:38:51,330 --> 00:38:57,120
that whatever we want to do for transfer

756
00:38:53,340 --> 00:39:00,090
slices along with 3gpp same picture at

757
00:38:57,120 --> 00:39:02,940
the very top we have Orchestrator and we

758
00:39:00,090 --> 00:39:05,930
have three domain controller if the in

759
00:39:02,940 --> 00:39:09,030
3gpp lingo sometimes they call their

760
00:39:05,930 --> 00:39:12,180
into a network astroids Orchestrator and

761
00:39:09,030 --> 00:39:15,840
SMF network a slice management function

762
00:39:12,180 --> 00:39:19,350
and they call their in a tree component

763
00:39:15,840 --> 00:39:22,020
for ran transfer encore and ssmf net

764
00:39:19,350 --> 00:39:24,020
forks up a slice management function so

765
00:39:22,020 --> 00:39:26,400
go ahead please run after us finish this

766
00:39:24,020 --> 00:39:28,500
just a couple of questions for

767
00:39:26,400 --> 00:39:32,100
clarification do you view this as one

768
00:39:28,500 --> 00:39:34,230
domain between you know the transport

769
00:39:32,100 --> 00:39:38,250
and 3gpp that's one question

770
00:39:34,230 --> 00:39:42,750
the other one is whether these slices

771
00:39:38,250 --> 00:39:44,760
are more dynamic or programmed last one

772
00:39:42,750 --> 00:39:46,200
definitely is dynamic their whole

773
00:39:44,760 --> 00:39:49,700
dynamic cities yeah

774
00:39:46,200 --> 00:39:51,930
nobody goes and creates the CLI or

775
00:39:49,700 --> 00:39:55,169
configuration of transfer a slice run

776
00:39:51,930 --> 00:39:58,140
everything starts from the dynami city

777
00:39:55,170 --> 00:40:00,240
of the whole logic and their answer to

778
00:39:58,140 --> 00:40:01,620
your first question is multiple domain

779
00:40:00,240 --> 00:40:04,259
could be possible as well it's pretty

780
00:40:01,620 --> 00:40:06,359
complementary to you yes yeah maybe we

781
00:40:04,260 --> 00:40:08,700
can talk offline as well I want to ask

782
00:40:06,360 --> 00:40:11,010
you a few questions but we can talk

783
00:40:08,700 --> 00:40:12,930
about them so the idea here is the

784
00:40:11,010 --> 00:40:16,500
important aspect this picture is trying

785
00:40:12,930 --> 00:40:19,319
to say that each of these orchestrate or

786
00:40:16,500 --> 00:40:24,180
controllers has three functions or three

787
00:40:19,320 --> 00:40:26,520
major capability automation monitoring

788
00:40:24,180 --> 00:40:27,899
and analytics and optimization in other

789
00:40:26,520 --> 00:40:30,480
words when we are talking about for

790
00:40:27,900 --> 00:40:32,940
example the read we want to talk about

791
00:40:30,480 --> 00:40:34,770
transport as slices that we should talk

792
00:40:32,940 --> 00:40:37,140
about not only the automation or

793
00:40:34,770 --> 00:40:39,270
creation of that but we have to talk

794
00:40:37,140 --> 00:40:42,629
about how we can monitor and do the

795
00:40:39,270 --> 00:40:45,060
analytics okay open low or how we can do

796
00:40:42,630 --> 00:40:46,980
the optimization akkada closed-loop so

797
00:40:45,060 --> 00:40:49,350
these are three major function that

798
00:40:46,980 --> 00:40:51,810
should be addressed and in most cases we

799
00:40:49,350 --> 00:40:53,759
are addressing only the first one but we

800
00:40:51,810 --> 00:40:55,410
are somehow ignoring the second and

801
00:40:53,760 --> 00:40:57,240
third one that we have to address at the

802
00:40:55,410 --> 00:41:00,240
same time okay

803
00:40:57,240 --> 00:41:03,368
I need only few minutes so basically

804
00:41:00,240 --> 00:41:05,259
interfaces that we I put it here in red

805
00:41:03,369 --> 00:41:07,900
it's the question that we have to

806
00:41:05,260 --> 00:41:10,569
address it's missing from industry is

807
00:41:07,900 --> 00:41:13,480
needed for an industry and how this

808
00:41:10,569 --> 00:41:15,640
relates to IETF and the work that we've

809
00:41:13,480 --> 00:41:17,980
done in the layer two layer three layer

810
00:41:15,640 --> 00:41:21,040
zero layer one services this is a kind

811
00:41:17,980 --> 00:41:23,020
of complementary to that why here it

812
00:41:21,040 --> 00:41:27,040
again if it is powerful there is

813
00:41:23,020 --> 00:41:28,930
animation but consider the yellow end to

814
00:41:27,040 --> 00:41:32,470
a net focus why's that we want to create

815
00:41:28,930 --> 00:41:34,299
to do that we have ran cold transport

816
00:41:32,470 --> 00:41:36,790
controller we have to create these three

817
00:41:34,300 --> 00:41:39,280
components and connect them together

818
00:41:36,790 --> 00:41:40,630
basically go through the transport

819
00:41:39,280 --> 00:41:43,420
controller because this is the

820
00:41:40,630 --> 00:41:46,560
discussion of this we send a request to

821
00:41:43,420 --> 00:41:49,720
transport controller to create

822
00:41:46,560 --> 00:41:52,029
connectivity between ran and core we

823
00:41:49,720 --> 00:41:55,930
don't in that interest we don't specify

824
00:41:52,030 --> 00:41:57,640
create and layer three service or layer

825
00:41:55,930 --> 00:42:00,250
two service we just said create

826
00:41:57,640 --> 00:42:04,569
connectivity between ran and core and

827
00:42:00,250 --> 00:42:07,630
the SLA is five millisecond latency for

828
00:42:04,569 --> 00:42:10,029
example transfer a slice receive that

829
00:42:07,630 --> 00:42:12,040
request translate that one to some

830
00:42:10,030 --> 00:42:14,020
artifact that can be deployed to the

831
00:42:12,040 --> 00:42:17,319
network is the requirement that we have

832
00:42:14,020 --> 00:42:20,230
to work here and step three is basically

833
00:42:17,319 --> 00:42:22,690
whatever idea files ITF has various

834
00:42:20,230 --> 00:42:25,210
models and way to deploy this

835
00:42:22,690 --> 00:42:28,000
connectivity to the network and this is

836
00:42:25,210 --> 00:42:31,930
there basically the idea that whatever

837
00:42:28,000 --> 00:42:34,690
is proposed here is complementing ITF

838
00:42:31,930 --> 00:42:38,379
IETF is defining the whole service

839
00:42:34,690 --> 00:42:39,849
tunnel path how to do it the various way

840
00:42:38,380 --> 00:42:42,880
to do it from layer zero all the

841
00:42:39,849 --> 00:42:45,010
regulatory but basically we are trying

842
00:42:42,880 --> 00:42:51,960
to say that this one is a complementary

843
00:42:45,010 --> 00:42:55,170
to idea so in summary we have to address

844
00:42:51,960 --> 00:42:58,230
automation monitoring optimization and

845
00:42:55,170 --> 00:43:01,270
whatever we do is basically

846
00:42:58,230 --> 00:43:03,069
complementing the idea is these

847
00:43:01,270 --> 00:43:05,500
interfaces are needed for an industry

848
00:43:03,069 --> 00:43:07,900
and I didn't put it here because I

849
00:43:05,500 --> 00:43:10,329
create this a slide yesterday but we

850
00:43:07,900 --> 00:43:12,990
have to work I kind of layers on between

851
00:43:10,329 --> 00:43:12,990
us and

852
00:43:13,760 --> 00:43:21,960
BBF to address the synergy that is Dell

853
00:43:17,520 --> 00:43:24,240
and why this the the giraffe is in this

854
00:43:21,960 --> 00:43:27,270
working group because with the knowledge

855
00:43:24,240 --> 00:43:31,229
and expertise that is existent here for

856
00:43:27,270 --> 00:43:33,120
various young model various model that

857
00:43:31,230 --> 00:43:35,550
can be done basically we can take the

858
00:43:33,120 --> 00:43:37,830
requirement and somehow use this

859
00:43:35,550 --> 00:43:39,660
knowledge and augment the server the

860
00:43:37,830 --> 00:43:41,400
model that we have here so basically

861
00:43:39,660 --> 00:43:44,609
this is the reason that I'm presenting

862
00:43:41,400 --> 00:43:48,050
it here this is end of the presentation

863
00:43:44,610 --> 00:43:48,050
I am more than happy to take questions

864
00:43:55,640 --> 00:44:01,100
I'm checking with others whether you

865
00:43:58,530 --> 00:44:03,600
have detected the any gaps so far with

866
00:44:01,100 --> 00:44:07,920
modal's has been specified in this

867
00:44:03,600 --> 00:44:11,900
working group yeah there are the none of

868
00:44:07,920 --> 00:44:14,190
the model today addresses the

869
00:44:11,900 --> 00:44:16,500
requirements that we need all of them

870
00:44:14,190 --> 00:44:21,300
should be augmented in other words the

871
00:44:16,500 --> 00:44:23,880
information that is needed for the mmm

872
00:44:21,300 --> 00:44:27,770
related to a specific Antoinette for a

873
00:44:23,880 --> 00:44:30,510
slice that the fu attribute is the

874
00:44:27,770 --> 00:44:34,140
multiplicity of the services that we

875
00:44:30,510 --> 00:44:36,180
have to create any model that we are can

876
00:44:34,140 --> 00:44:38,220
be extended augmented that which one is

877
00:44:36,180 --> 00:44:40,710
better you know I have some opinion on

878
00:44:38,220 --> 00:44:42,180
that one but basically today's model is

879
00:44:40,710 --> 00:44:42,750
not addressing that it should be

880
00:44:42,180 --> 00:44:48,270
augmented

881
00:44:42,750 --> 00:44:50,070
so this is two pages into the some kind

882
00:44:48,270 --> 00:44:54,120
of architecture yeah maybe this one it's

883
00:44:50,070 --> 00:44:58,380
good yeah yeah this I think this one is

884
00:44:54,120 --> 00:45:02,190
something about the controller

885
00:44:58,380 --> 00:45:06,860
hierarchies which is if we generalize

886
00:45:02,190 --> 00:45:06,860
this it can be something similar

887
00:45:10,550 --> 00:45:17,190
currently we we have the T models we

888
00:45:14,340 --> 00:45:20,550
have the Wien model so we also have the

889
00:45:17,190 --> 00:45:23,460
layer specific service models to specify

890
00:45:20,550 --> 00:45:25,860
your other working groups and my

891
00:45:23,460 --> 00:45:26,540
understanding so far is the combination

892
00:45:25,860 --> 00:45:29,090
of so we

893
00:45:26,540 --> 00:45:30,950
and the service models can satisfy this

894
00:45:29,090 --> 00:45:34,400
kind of requirement but the only

895
00:45:30,950 --> 00:45:37,549
difference is we are using this kind of

896
00:45:34,400 --> 00:45:40,670
models to support different stories with

897
00:45:37,550 --> 00:45:43,250
different technologies I can save you're

898
00:45:40,670 --> 00:45:44,540
supporting different connections which

899
00:45:43,250 --> 00:45:47,630
are implemented

900
00:45:44,540 --> 00:45:49,670
aka realized by a service tunnel the

901
00:45:47,630 --> 00:45:51,860
vampire so if we have to make a

902
00:45:49,670 --> 00:45:53,780
distinction between connection there is

903
00:45:51,860 --> 00:45:56,960
a subtle difference here at least in the

904
00:45:53,780 --> 00:46:01,160
context that we have here but basically

905
00:45:56,960 --> 00:46:03,140
the whatever you mentioned it's correct

906
00:46:01,160 --> 00:46:03,410
but this is a kind of complementary to

907
00:46:03,140 --> 00:46:05,569
that

908
00:46:03,410 --> 00:46:07,970
hierarchic that we have today and

909
00:46:05,570 --> 00:46:09,680
basically the different use case to

910
00:46:07,970 --> 00:46:15,680
address the you know different use case

911
00:46:09,680 --> 00:46:17,810
in the console 5g I whole answer a

912
00:46:15,680 --> 00:46:23,080
question but if not we can have offline

913
00:46:17,810 --> 00:46:25,549
Eric place hi Eric Erickson so

914
00:46:23,080 --> 00:46:28,130
attendance presentation a couple times

915
00:46:25,550 --> 00:46:30,080
and I've also been attending the

916
00:46:28,130 --> 00:46:33,980
presentations in the broadband forum as

917
00:46:30,080 --> 00:46:36,799
well one issue that I I see here is

918
00:46:33,980 --> 00:46:39,080
we're talking you have been talking in

919
00:46:36,800 --> 00:46:42,620
in the past and about an abstract

920
00:46:39,080 --> 00:46:44,750
interface which is in everything I've

921
00:46:42,620 --> 00:46:47,060
seen about it really describing a

922
00:46:44,750 --> 00:46:50,120
service interface you're talking about

923
00:46:47,060 --> 00:46:51,770
an interface that says I need this

924
00:46:50,120 --> 00:46:55,759
capacity I need these tool any

925
00:46:51,770 --> 00:46:58,670
parameters etc etc and this is done in a

926
00:46:55,760 --> 00:47:01,220
way that's orthogonal to the actual

927
00:46:58,670 --> 00:47:02,930
devices being used in the network that

928
00:47:01,220 --> 00:47:05,270
they're so annoying to the broadband

929
00:47:02,930 --> 00:47:08,210
forum what the broadband forum seems to

930
00:47:05,270 --> 00:47:10,100
be looking for is so what we can provide

931
00:47:08,210 --> 00:47:12,830
is a mapping from that abstract

932
00:47:10,100 --> 00:47:15,110
interface to actual devices in service

933
00:47:12,830 --> 00:47:17,600
butter networks now we come to the IETF

934
00:47:15,110 --> 00:47:20,000
they're saying they're saying well we

935
00:47:17,600 --> 00:47:21,529
already have as far as I understand it

936
00:47:20,000 --> 00:47:24,590
we already have a number of models that

937
00:47:21,530 --> 00:47:28,040
sort of support this what exactly is it

938
00:47:24,590 --> 00:47:29,780
that we don't have and so what I see

939
00:47:28,040 --> 00:47:32,570
going on is we're trying to do all of

940
00:47:29,780 --> 00:47:34,730
these things at the same time and in

941
00:47:32,570 --> 00:47:36,620
fact it seems to me to what you're

942
00:47:34,730 --> 00:47:38,990
wanting to do is sort of have a top-down

943
00:47:36,620 --> 00:47:40,430
development and if you're having them

944
00:47:38,990 --> 00:47:42,080
all done at the same time

945
00:47:40,430 --> 00:47:43,520
see how you can effectively do that

946
00:47:42,080 --> 00:47:45,740
without spinning wheels for quite a

947
00:47:43,520 --> 00:47:48,230
while unless you know exactly where it

948
00:47:45,740 --> 00:47:50,959
is you think you're gonna end up and I

949
00:47:48,230 --> 00:47:53,000
don't think that there's a lot of belief

950
00:47:50,960 --> 00:47:54,710
in this room that we know exactly where

951
00:47:53,000 --> 00:47:58,250
it is we're going to end up and this is

952
00:47:54,710 --> 00:48:01,100
basically the whole idea of that we have

953
00:47:58,250 --> 00:48:06,110
to study all those think the fact that

954
00:48:01,100 --> 00:48:09,100
we need a single set of interfaces after

955
00:48:06,110 --> 00:48:12,410
abstract interface which is aligned with

956
00:48:09,100 --> 00:48:15,140
3gpp ran and core is basically the idea

957
00:48:12,410 --> 00:48:18,920
here that the interface in should be

958
00:48:15,140 --> 00:48:21,500
most cases abstract vendor agnostic or

959
00:48:18,920 --> 00:48:23,930
technology agnostic and basically we

960
00:48:21,500 --> 00:48:26,090
take that as you say the mapping and

961
00:48:23,930 --> 00:48:28,160
this is step two here is exactly what we

962
00:48:26,090 --> 00:48:31,670
should be done at the transfer control

963
00:48:28,160 --> 00:48:34,279
to do whatever invention to the map that

964
00:48:31,670 --> 00:48:36,830
interface to a specific implementation

965
00:48:34,280 --> 00:48:38,780
that we wanted you and this is

966
00:48:36,830 --> 00:48:40,370
absolutely correct we have to say that

967
00:48:38,780 --> 00:48:42,320
to see how that mapping should happen

968
00:48:40,370 --> 00:48:46,100
but the fact that there is a model

969
00:48:42,320 --> 00:48:48,470
abstract which should be mapped to a

970
00:48:46,100 --> 00:48:50,930
more specific on how to do it

971
00:48:48,470 --> 00:48:52,939
efficiently and how you know BBF can

972
00:48:50,930 --> 00:48:56,180
work with idea for how we can do that

973
00:48:52,940 --> 00:48:58,370
from the mapping is under discussion and

974
00:48:56,180 --> 00:49:00,560
we have to study that for that I cannot

975
00:48:58,370 --> 00:49:02,990
say you know where there is nothing what

976
00:49:00,560 --> 00:49:04,790
you're saying that the issue is that

977
00:49:02,990 --> 00:49:06,109
when you gave this presentation earlier

978
00:49:04,790 --> 00:49:07,490
you were actually talking in times

979
00:49:06,110 --> 00:49:10,490
timeline where you were actually

980
00:49:07,490 --> 00:49:12,080
expecting to begin protocol work or gang

981
00:49:10,490 --> 00:49:14,569
work or something like that at the next

982
00:49:12,080 --> 00:49:17,299
IETF and I don't see how that's

983
00:49:14,570 --> 00:49:20,320
realistic and given that the need to

984
00:49:17,300 --> 00:49:23,470
sort of figure out what's there and

985
00:49:20,320 --> 00:49:26,450
figure out what is missing

986
00:49:23,470 --> 00:49:28,700
coming from a top-down approach where

987
00:49:26,450 --> 00:49:29,779
you have 3gpp defining exactly what it

988
00:49:28,700 --> 00:49:31,750
is that they're looking for from a

989
00:49:29,780 --> 00:49:35,150
transport in terms of service parameters

990
00:49:31,750 --> 00:49:38,420
and then you have potentially other

991
00:49:35,150 --> 00:49:41,300
organisations MEF TMF or whatever that

992
00:49:38,420 --> 00:49:42,860
are going to want to have a say in that

993
00:49:41,300 --> 00:49:45,290
and then you have the broadband forum

994
00:49:42,860 --> 00:49:46,910
doing its piece and then you get down to

995
00:49:45,290 --> 00:49:49,100
the IETF if you try to do all of those

996
00:49:46,910 --> 00:49:50,600
at the same time which it almost have to

997
00:49:49,100 --> 00:49:53,380
be doing if you really expect to do any

998
00:49:50,600 --> 00:49:55,509
work next time at the IETF being

999
00:49:53,380 --> 00:49:56,549
you might be just a little too

1000
00:49:55,510 --> 00:50:04,809
optimistic

1001
00:49:56,549 --> 00:50:06,809
yep some but I have a clarification

1002
00:50:04,809 --> 00:50:30,099
question but you removed the spare tire

1003
00:50:06,809 --> 00:50:33,460
which okay thank you thank you laughter

1004
00:50:30,099 --> 00:50:35,890
everyone Amazon fur comes from that he I

1005
00:50:33,460 --> 00:50:40,599
will talk about the packet networks

1006
00:50:35,890 --> 00:50:44,200
lesson using segment voting next the

1007
00:50:40,599 --> 00:50:48,190
paper below is the layered architecture

1008
00:50:44,200 --> 00:50:51,520
of a hosta pian which is defined in

1009
00:50:48,190 --> 00:50:53,980
draft TC has the whip Ian Paice the

1010
00:50:51,520 --> 00:50:57,099
layered activity of enhanced with Ian

1011
00:50:53,980 --> 00:51:00,130
this tech document specifies the

1012
00:50:57,099 --> 00:51:04,770
solution to create which were network in

1013
00:51:00,130 --> 00:51:07,140
your packet Network introduction

1014
00:51:04,770 --> 00:51:11,038
explicit which were network

1015
00:51:07,140 --> 00:51:14,770
identification administrative instance

1016
00:51:11,039 --> 00:51:18,940
identify a I to meet the different Zoe's

1017
00:51:14,770 --> 00:51:22,380
entire network which is not only ITV

1018
00:51:18,940 --> 00:51:27,099
atonement but also in cross domain case

1019
00:51:22,380 --> 00:51:31,029
is one of concentrate criteria of the

1020
00:51:27,099 --> 00:51:34,559
color template and the caller can play

1021
00:51:31,029 --> 00:51:39,010
with I provides a more flexible control

1022
00:51:34,559 --> 00:51:43,180
which one network based on p2p as a PE

1023
00:51:39,010 --> 00:51:46,980
for pest I for Zoe's and p2p as a TE for

1024
00:51:43,180 --> 00:51:50,109
traffic engineered so is respectable

1025
00:51:46,980 --> 00:51:53,349
unit from color translate centralized

1026
00:51:50,109 --> 00:51:56,348
and distributed ensure and the

1027
00:51:53,349 --> 00:52:00,099
entitlement for all a so is my team to

1028
00:51:56,349 --> 00:52:03,250
analyze results there is no modification

1029
00:52:00,099 --> 00:52:06,800
to the forwarding table in order to

1030
00:52:03,250 --> 00:52:09,800
testing rests of ordering behavior

1031
00:52:06,800 --> 00:52:15,470
the perfect society you will be

1032
00:52:09,800 --> 00:52:19,430
allocated for AI next this is an example

1033
00:52:15,470 --> 00:52:23,810
of our solution in figures there are two

1034
00:52:19,430 --> 00:52:29,480
topology red and blue relative policy

1035
00:52:23,810 --> 00:52:37,640
includes ABCDEF notes and the link a PPC

1036
00:52:29,480 --> 00:52:44,330
PF p IV c and et the polluter policy

1037
00:52:37,640 --> 00:52:51,190
includes a pc tem notes and link AF f PF

1038
00:52:44,330 --> 00:52:55,460
c fe e ez pc and the city the controller

1039
00:52:51,190 --> 00:53:01,180
connect the resource information with us

1040
00:52:55,460 --> 00:53:05,020
repeatedly arise and it can build

1041
00:53:01,180 --> 00:53:10,899
corresponding SI with short apology and

1042
00:53:05,020 --> 00:53:14,600
can calculated as a te pass based on the

1043
00:53:10,900 --> 00:53:20,810
color with AI another con street

1044
00:53:14,600 --> 00:53:24,319
criteria in each which whole network the

1045
00:53:20,810 --> 00:53:29,950
next is multi Multi multi determine

1046
00:53:24,320 --> 00:53:33,370
deployment it is easier it is easy to

1047
00:53:29,950 --> 00:53:39,770
provide end-to-end which one network

1048
00:53:33,370 --> 00:53:43,520
including entitlement in some deployment

1049
00:53:39,770 --> 00:53:48,650
the operator adopt the BGP are you to

1050
00:53:43,520 --> 00:53:52,759
set up the PPR see if the the only

1051
00:53:48,650 --> 00:53:53,570
stories can't directly over the PDP our

1052
00:53:52,760 --> 00:53:56,630
USP

1053
00:53:53,570 --> 00:54:00,050
if it always service how does

1054
00:53:56,630 --> 00:54:03,710
requirement of the TE which defined by

1055
00:54:00,050 --> 00:54:06,670
our color to be CRO we also support the

1056
00:54:03,710 --> 00:54:11,840
color and the BPO

1057
00:54:06,670 --> 00:54:17,120
label will allocate for color the below

1058
00:54:11,840 --> 00:54:19,569
is the option be inter area it can also

1059
00:54:17,120 --> 00:54:22,660
provide entry into which which one

1060
00:54:19,569 --> 00:54:25,630
to work including the in determining the

1061
00:54:22,660 --> 00:54:30,940
inter temp Dominic can choose the link

1062
00:54:25,630 --> 00:54:35,170
based on the color with a next is

1063
00:54:30,940 --> 00:54:37,269
end-to-end situ is as the end the

1064
00:54:35,170 --> 00:54:40,420
controller the controller can connect

1065
00:54:37,269 --> 00:54:44,729
the topology information with the eye

1066
00:54:40,420 --> 00:54:50,440
through the busy eyes and then calculate

1067
00:54:44,729 --> 00:54:54,939
SR paths based on the information next

1068
00:54:50,440 --> 00:54:58,269
is combined with SF flex algorithm -

1069
00:54:54,940 --> 00:55:01,959
hello template with a I kept to the FAI

1070
00:54:58,269 --> 00:55:04,749
t4 label stack optimization with

1071
00:55:01,959 --> 00:55:09,669
algorithm while you other what rest is a

1072
00:55:04,749 --> 00:55:12,968
flex algorithm value the prefix si T is

1073
00:55:09,670 --> 00:55:17,289
associated with passes calculated using

1074
00:55:12,969 --> 00:55:21,729
to flex algorithm in the Associated

1075
00:55:17,289 --> 00:55:24,910
topology I specific next step

1076
00:55:21,729 --> 00:55:35,468
comments welcome thank you this is this

1077
00:55:24,910 --> 00:55:38,859
is the end of all our priorities in dark

1078
00:55:35,469 --> 00:55:44,049
from juniper how do you assign certain

1079
00:55:38,859 --> 00:55:48,190
bandwidth three SR flex said for the

1080
00:55:44,049 --> 00:55:51,729
slice slice is requesting certain

1081
00:55:48,190 --> 00:55:57,910
bandwidth how do you do accounting on

1082
00:55:51,729 --> 00:56:03,549
proceed so you can take it offline if if

1083
00:55:57,910 --> 00:56:07,479
you don't have the handset now so I can

1084
00:56:03,549 --> 00:56:11,519
you unique sorry

1085
00:56:07,479 --> 00:56:16,209
coyotes caso is the in my own days yes

1086
00:56:11,519 --> 00:56:18,189
thank you okay so we've been grappling a

1087
00:56:16,209 --> 00:56:20,469
little bit on what to do with the straps

1088
00:56:18,190 --> 00:56:24,009
because as you see this a fair bit of

1089
00:56:20,469 --> 00:56:26,949
discussion a bit of difference of

1090
00:56:24,009 --> 00:56:28,599
opinions on which direction and but we

1091
00:56:26,949 --> 00:56:32,490
also think that there's clear interest

1092
00:56:28,599 --> 00:56:34,890
in work in this area

1093
00:56:32,490 --> 00:56:38,729
and in fact I guess I shouldn't confirm

1094
00:56:34,890 --> 00:56:41,640
that how many people think that we

1095
00:56:38,730 --> 00:56:50,670
should be working on sport of 5g or

1096
00:56:41,640 --> 00:56:57,390
slicing quite a few so venture the

1097
00:56:50,670 --> 00:56:59,640
chairs read the room it's better to have

1098
00:56:57,390 --> 00:57:01,410
that confirmed so we've been grappling

1099
00:56:59,640 --> 00:57:02,460
with how to proceed with what we thought

1100
00:57:01,410 --> 00:57:04,069
was the intent of the group and now he

1101
00:57:02,460 --> 00:57:07,349
knows the intent of at least the room

1102
00:57:04,070 --> 00:57:10,830
and we were thinking that perhaps the

1103
00:57:07,349 --> 00:57:13,200
the right way to proceed is to come

1104
00:57:10,830 --> 00:57:15,480
together to collect those people who are

1105
00:57:13,200 --> 00:57:19,649
interested in working this into some

1106
00:57:15,480 --> 00:57:23,070
sort of design team and to come up with

1107
00:57:19,650 --> 00:57:24,420
a stated direction so the objective the

1108
00:57:23,070 --> 00:57:28,170
design people do come up with a

1109
00:57:24,420 --> 00:57:30,330
direction for the work in this working

1110
00:57:28,170 --> 00:57:33,530
group so it's going to be a fairly open

1111
00:57:30,330 --> 00:57:35,400
and we would expect a little contentious

1112
00:57:33,530 --> 00:57:37,980
because there's a bunch of different

1113
00:57:35,400 --> 00:57:41,280
views here to come up with a proposal

1114
00:57:37,980 --> 00:57:43,109
that is consolidated among those people

1115
00:57:41,280 --> 00:57:46,050
who are very interested in working on

1116
00:57:43,109 --> 00:57:48,660
this problem but the proposal of what we

1117
00:57:46,050 --> 00:57:51,510
this working group should be doing now

1118
00:57:48,660 --> 00:57:53,549
of course generally design teams from

1119
00:57:51,510 --> 00:57:56,280
while they can be just put together by

1120
00:57:53,550 --> 00:58:01,320
chairs we typically get input from our

1121
00:57:56,280 --> 00:58:04,160
ad hopefully Debra is there and you know

1122
00:58:01,320 --> 00:58:06,750
this is something we'll have to work

1123
00:58:04,160 --> 00:58:08,339
between now and the next IETF to put

1124
00:58:06,750 --> 00:58:09,990
together so we're not at the point of

1125
00:58:08,339 --> 00:58:12,420
announcing a design team we're

1126
00:58:09,990 --> 00:58:14,790
suggesting that the design team may be

1127
00:58:12,420 --> 00:58:17,670
the the right way to go part of that

1128
00:58:14,790 --> 00:58:19,859
will be finding out folks who are

1129
00:58:17,670 --> 00:58:22,109
interested in participating and we're

1130
00:58:19,859 --> 00:58:24,960
going to need a sort of a balance of

1131
00:58:22,109 --> 00:58:27,990
people those people who have a good

1132
00:58:24,960 --> 00:58:30,390
understanding of what's happening

1133
00:58:27,990 --> 00:58:31,709
outside the IETF and of course those who

1134
00:58:30,390 --> 00:58:32,940
are have a good understanding of what

1135
00:58:31,710 --> 00:58:35,160
we've done previously

1136
00:58:32,940 --> 00:58:38,609
inside the IDF and even beyond this

1137
00:58:35,160 --> 00:58:41,220
route so at this point we would like

1138
00:58:38,609 --> 00:58:43,470
some feedback from the working group if

1139
00:58:41,220 --> 00:58:45,600
they think that's a good idea a bad idea

1140
00:58:43,470 --> 00:58:54,029
any comments they may have

1141
00:58:45,600 --> 00:58:57,240
or you may have comments all right how

1142
00:58:54,030 --> 00:59:00,510
many people think that a who thinks that

1143
00:58:57,240 --> 00:59:03,299
a this type of approach that outlined I

1144
00:59:00,510 --> 00:59:08,520
agree that it's very high-level but that

1145
00:59:03,300 --> 00:59:10,500
approach makes sense so that looks like

1146
00:59:08,520 --> 00:59:16,170
a pretty good number how many think it

1147
00:59:10,500 --> 00:59:17,450
thinks it does not make sense all right

1148
00:59:16,170 --> 00:59:21,630
Eric's hand went up and then went down

1149
00:59:17,450 --> 00:59:24,779
so no so I think that's a pretty good

1150
00:59:21,630 --> 00:59:30,810
endorsement of that direction we would

1151
00:59:24,780 --> 00:59:32,640
ask that you send a message to us at the

1152
00:59:30,810 --> 00:59:35,790
chairs list so that's teas chairs if

1153
00:59:32,640 --> 00:59:37,529
you're interested once we come up with

1154
00:59:35,790 --> 00:59:40,020
the formal Charter and a little more

1155
00:59:37,530 --> 00:59:41,970
structure we will send out a formal call

1156
00:59:40,020 --> 00:59:44,100
but we are explicitly saying don't wait

1157
00:59:41,970 --> 00:59:45,990
for the formal call if you're in the

1158
00:59:44,100 --> 00:59:49,290
room if you're listening to this

1159
00:59:45,990 --> 00:59:51,240
feel free to it to drop us a line we

1160
00:59:49,290 --> 00:59:53,070
will be sending out something to list to

1161
00:59:51,240 --> 00:59:54,359
make sure that even those who are not in

1162
00:59:53,070 --> 00:59:59,310
the room have an opportunity to

1163
00:59:54,360 --> 01:00:04,110
participate have a question to move so

1164
00:59:59,310 --> 01:00:07,009
what would be downside for example not

1165
01:00:04,110 --> 01:00:11,010
having design team for the topic like

1166
01:00:07,010 --> 01:00:14,730
slicin where so much interests okay so

1167
01:00:11,010 --> 01:00:22,440
why would work what would be anyone say

1168
01:00:14,730 --> 01:00:25,290
that no don't do that when we have

1169
01:00:22,440 --> 01:00:27,690
sufficient mass of authors who put four

1170
01:00:25,290 --> 01:00:30,029
documents we say authors go in the room

1171
01:00:27,690 --> 01:00:33,390
and figure it out so we've taken that

1172
01:00:30,030 --> 01:00:36,150
approach in the past we are not

1173
01:00:33,390 --> 01:00:37,799
suggesting that this time we're

1174
01:00:36,150 --> 01:00:39,630
suggesting that we be a little more

1175
01:00:37,800 --> 01:00:40,980
structured on that make sure we have the

1176
01:00:39,630 --> 01:00:43,980
right people in the room that's really

1177
01:00:40,980 --> 01:00:46,290
the difference between a design team and

1178
01:00:43,980 --> 01:00:48,960
I agree because in the past basically

1179
01:00:46,290 --> 01:00:52,230
what would happen in the formal approach

1180
01:00:48,960 --> 01:00:55,050
right that several several solutions

1181
01:00:52,230 --> 01:00:58,530
will come up and then the the next

1182
01:00:55,050 --> 01:01:01,320
question would be to Mary somehow them

1183
01:00:58,530 --> 01:01:03,870
okay to make a single solution which is

1184
01:01:01,320 --> 01:01:07,470
far more difficult than to do it like

1185
01:01:03,870 --> 01:01:09,720
from day one right and we think that

1186
01:01:07,470 --> 01:01:12,240
there isn't necessarily agreement on

1187
01:01:09,720 --> 01:01:14,339
what we should be doing here that's part

1188
01:01:12,240 --> 01:01:23,069
of the reason why we can't say go merge

1189
01:01:14,340 --> 01:01:26,460
documents or merge solutions no yeah

1190
01:01:23,070 --> 01:01:32,520
Debra either I think I'm hopefully this

1191
01:01:26,460 --> 01:01:35,550
design team will be more active than but

1192
01:01:32,520 --> 01:01:37,710
it is the kind of people kind of

1193
01:01:35,550 --> 01:01:39,690
hopefully get encouraged to actually do

1194
01:01:37,710 --> 01:01:42,180
something in and there is and I think

1195
01:01:39,690 --> 01:01:44,010
for as far as timing goes like Erica is

1196
01:01:42,180 --> 01:01:47,399
concerned on what would it's a big

1197
01:01:44,010 --> 01:01:51,150
problem but already we know BBF is doing

1198
01:01:47,400 --> 01:01:53,460
it actually ITU is doing it and it would

1199
01:01:51,150 --> 01:01:56,700
be good delays on and get information

1200
01:01:53,460 --> 01:01:58,740
from them to help support it and even

1201
01:01:56,700 --> 01:02:01,500
things like actually ITU had a lot of

1202
01:01:58,740 --> 01:02:05,609
difficulty with the terms because just

1203
01:02:01,500 --> 01:02:09,210
to map from terminology of 3gpp to to um

1204
01:02:05,610 --> 01:02:11,010
to transport type of terms so I think a

1205
01:02:09,210 --> 01:02:13,950
design team if they could hopefully

1206
01:02:11,010 --> 01:02:15,930
scope it and get us kicked off in the

1207
01:02:13,950 --> 01:02:17,520
right directions right and then we can

1208
01:02:15,930 --> 01:02:21,450
communicate with the other groups that

1209
01:02:17,520 --> 01:02:23,970
we're doing this so hopefully it makes

1210
01:02:21,450 --> 01:02:31,020
it go faster that we get something by

1211
01:02:23,970 --> 01:02:33,720
the next meeting channel from Maui I'm

1212
01:02:31,020 --> 01:02:37,110
supporting to have this kind of design

1213
01:02:33,720 --> 01:02:40,080
team on that or slicing and one question

1214
01:02:37,110 --> 01:02:43,950
is what will be the expected deliverable

1215
01:02:40,080 --> 01:02:48,029
of this design team it's a framework

1216
01:02:43,950 --> 01:02:51,210
document out on specific technologies

1217
01:02:48,030 --> 01:02:57,840
like the management interface all and

1218
01:02:51,210 --> 01:02:58,980
during that work you said just ask the

1219
01:02:57,840 --> 01:03:09,720
question part you'll have to say the

1220
01:02:58,980 --> 01:03:12,150
whole thing so I don't want to commit to

1221
01:03:09,720 --> 01:03:15,629
it I said something pretty high-level at

1222
01:03:12,150 --> 01:03:18,750
the start about but we wanted some time

1223
01:03:15,630 --> 01:03:20,670
to make sure that we have a good solid

1224
01:03:18,750 --> 01:03:22,710
proposal that we bring for the working

1225
01:03:20,670 --> 01:03:27,390
group and make sure that it makes sense

1226
01:03:22,710 --> 01:03:29,370
so I don't expect a protocol solution we

1227
01:03:27,390 --> 01:03:31,379
don't expect a protocol solution it

1228
01:03:29,370 --> 01:03:35,400
would be at most a framework for the

1229
01:03:31,380 --> 01:03:38,430
work that we're gonna do here okay we

1230
01:03:35,400 --> 01:03:40,200
have the enhanced APM framework draft in

1231
01:03:38,430 --> 01:03:47,430
this wing group and we hope that kind of

1232
01:03:40,200 --> 01:03:52,129
possibly can see there what the design

1233
01:03:47,430 --> 01:03:52,129
team yeah oh we can base on that one too

1234
01:03:54,650 --> 01:04:00,240
every RFC that's been published as well

1235
01:03:57,720 --> 01:04:01,560
as every working group document or non

1236
01:04:00,240 --> 01:04:04,049
working group document that's been

1237
01:04:01,560 --> 01:04:06,090
that's out there we so you know we're

1238
01:04:04,050 --> 01:04:07,860
not asking them to throw things away

1239
01:04:06,090 --> 01:04:18,360
we're asking to leverage is not just

1240
01:04:07,860 --> 01:04:22,800
possible okay thank you realize that no

1241
01:04:18,360 --> 01:04:26,160
more slicing any gates hi my name is

1242
01:04:22,800 --> 01:04:29,060
Tariq and I'm going to introduce you now

1243
01:04:26,160 --> 01:04:31,560
to IP rsvp-te

1244
01:04:29,060 --> 01:04:34,830
hopefully we know something about MPLS

1245
01:04:31,560 --> 01:04:37,580
rsvp-te so these are extensions to RSVP

1246
01:04:34,830 --> 01:04:42,509
to set up point-to-point

1247
01:04:37,580 --> 01:04:45,509
IP paths we still call them label switch

1248
01:04:42,510 --> 01:04:48,150
spots but it's open for discussion so

1249
01:04:45,510 --> 01:04:52,290
myself and my colleague Pavan we've

1250
01:04:48,150 --> 01:04:54,180
worked on that the outline of my talk is

1251
01:04:52,290 --> 01:04:56,730
I'll mention a little bit of motivation

1252
01:04:54,180 --> 01:04:58,980
why are we doing and what are we trying

1253
01:04:56,730 --> 01:05:02,370
to solve and then we will introduce you

1254
01:04:58,980 --> 01:05:04,350
to these IP RSVP tunnels they're

1255
01:05:02,370 --> 01:05:06,930
creation management how we can achieve

1256
01:05:04,350 --> 01:05:09,600
protection fast reroute with with this

1257
01:05:06,930 --> 01:05:16,290
approach and we will talk about shared

1258
01:05:09,600 --> 01:05:17,790
forwarding state I will mention the

1259
01:05:16,290 --> 01:05:19,830
signaling extensions that we're

1260
01:05:17,790 --> 01:05:24,750
proposing to achieve this

1261
01:05:19,830 --> 01:05:26,340
close with next steps so what problem

1262
01:05:24,750 --> 01:05:29,640
are we trying to solve

1263
01:05:26,340 --> 01:05:33,540
we know IP networks or networks that use

1264
01:05:29,640 --> 01:05:36,299
IP in they're forwarding they exist they

1265
01:05:33,540 --> 01:05:40,380
exist in data centers they exist in data

1266
01:05:36,300 --> 01:05:44,120
center interconnect and new networks are

1267
01:05:40,380 --> 01:05:48,500
deploying ipv6 for various reasons IOT

1268
01:05:44,120 --> 01:05:51,240
the address space limitation and so on

1269
01:05:48,500 --> 01:05:54,390
and there are motivations even to

1270
01:05:51,240 --> 01:05:57,270
migrate towards ip-based networks or IP

1271
01:05:54,390 --> 01:05:57,839
based forwarding networks for capex or

1272
01:05:57,270 --> 01:06:03,090
OPEX

1273
01:05:57,840 --> 01:06:06,020
reasons reduction and to reduce the

1274
01:06:03,090 --> 01:06:09,060
complexity of learning many protocols

1275
01:06:06,020 --> 01:06:10,440
with that we still need traffic

1276
01:06:09,060 --> 01:06:12,600
engineering and this is why we're here

1277
01:06:10,440 --> 01:06:16,020
we need traffic engineering because

1278
01:06:12,600 --> 01:06:19,740
there are stringent service requirements

1279
01:06:16,020 --> 01:06:22,470
coming forward 5g we've been talking

1280
01:06:19,740 --> 01:06:24,810
about that so we want to be able to

1281
01:06:22,470 --> 01:06:28,169
steer over the non shortest paths with

1282
01:06:24,810 --> 01:06:30,270
certain guarantees we want to be able to

1283
01:06:28,170 --> 01:06:37,020
use the resources in the network in an

1284
01:06:30,270 --> 01:06:39,960
optimal way so IP rsvp-te what does it

1285
01:06:37,020 --> 01:06:44,580
offer we promise you that it works with

1286
01:06:39,960 --> 01:06:48,360
ipv4 forwarding and ipv6 v6 as well it

1287
01:06:44,580 --> 01:06:51,090
can support forward state sharing and we

1288
01:06:48,360 --> 01:06:55,380
are borrowing a whole bunch of features

1289
01:06:51,090 --> 01:06:58,200
from MPLS rsvp-te Auto bandwidth all

1290
01:06:55,380 --> 01:07:01,220
these features that I'm listing we can

1291
01:06:58,200 --> 01:07:03,810
leverage with this solution

1292
01:07:01,220 --> 01:07:11,520
mainly we also can do bandwidth traffic

1293
01:07:03,810 --> 01:07:14,130
engineering so how does it work so on an

1294
01:07:11,520 --> 01:07:16,560
egress router we are introducing this

1295
01:07:14,130 --> 01:07:19,160
egress address block it's a set of

1296
01:07:16,560 --> 01:07:22,710
addresses that reside on the egress and

1297
01:07:19,160 --> 01:07:25,230
RSVP is the only protocol managing these

1298
01:07:22,710 --> 01:07:28,940
addresses it can be one block or

1299
01:07:25,230 --> 01:07:32,200
multiple blocks concatenated together

1300
01:07:28,940 --> 01:07:35,020
these addresses are not

1301
01:07:32,200 --> 01:07:38,439
advertising igb necessarily and they're

1302
01:07:35,020 --> 01:07:40,240
not even globally routable so they're

1303
01:07:38,440 --> 01:07:46,630
between point on point point-to-point

1304
01:07:40,240 --> 01:07:48,339
ingress to egress scoped in terms of

1305
01:07:46,630 --> 01:07:50,520
setting up the IP path

1306
01:07:48,339 --> 01:07:54,250
there's signaling that kick-starts

1307
01:07:50,520 --> 01:07:57,369
kick-started by the ingress typically by

1308
01:07:54,250 --> 01:07:59,710
computing an explicit route satisfying

1309
01:07:57,369 --> 01:08:03,569
certain constraints it can be computed

1310
01:07:59,710 --> 01:08:08,650
on the ingress or by a central server

1311
01:08:03,569 --> 01:08:11,829
signaling is used to do the reservation

1312
01:08:08,650 --> 01:08:14,559
if needed but once the signaling reaches

1313
01:08:11,829 --> 01:08:17,380
the egress an egress address is

1314
01:08:14,559 --> 01:08:21,370
allocated to the IP path from the block

1315
01:08:17,380 --> 01:08:23,319
and a note here that the same egress

1316
01:08:21,370 --> 01:08:25,929
address can be shared between multiple

1317
01:08:23,319 --> 01:08:29,140
IP paths and we're going to demonstrate

1318
01:08:25,929 --> 01:08:31,750
how that can be done so any ingress

1319
01:08:29,140 --> 01:08:34,089
transit or even on the egress will

1320
01:08:31,750 --> 01:08:36,279
program their rip with that egress

1321
01:08:34,089 --> 01:08:39,960
address and you know have a binding with

1322
01:08:36,279 --> 01:08:43,540
that IP path its path specific IP path

1323
01:08:39,960 --> 01:08:46,089
so once the setup of the IP path is

1324
01:08:43,540 --> 01:08:49,479
complete now we can start tunneling

1325
01:08:46,089 --> 01:08:55,269
packets from the ingress over the set up

1326
01:08:49,479 --> 01:08:58,149
IP path we can optionally insert a flow

1327
01:08:55,270 --> 01:09:03,880
label in ipv6 per flow so that it can do

1328
01:08:58,149 --> 01:09:06,969
proper ecmp hashing this is an example

1329
01:09:03,880 --> 01:09:10,060
network where we have an ingress r1 and

1330
01:09:06,969 --> 01:09:13,210
an egress r4 we have an EAB block

1331
01:09:10,060 --> 01:09:16,060
sitting on our for it's at prefix it's a

1332
01:09:13,210 --> 01:09:18,969
v4 prefix in this example and and we

1333
01:09:16,060 --> 01:09:23,319
have a service network behind our 420 /

1334
01:09:18,969 --> 01:09:24,600
8 so signaling will will use the ero

1335
01:09:23,319 --> 01:09:28,239
hop-by-hop

1336
01:09:24,600 --> 01:09:30,730
with the path message and we will use

1337
01:09:28,238 --> 01:09:33,818
this generic label request to request an

1338
01:09:30,729 --> 01:09:36,549
egress address to be allocated from the

1339
01:09:33,819 --> 01:09:39,609
egress so once the path message reaches

1340
01:09:36,549 --> 01:09:42,219
the egress the egress responds with the

1341
01:09:39,609 --> 01:09:46,030
reservation message with the allocated

1342
01:09:42,219 --> 01:09:50,130
egress address in this example it's 1

1343
01:09:46,029 --> 01:09:52,870
to 168 4.1 and as the resveratrol

1344
01:09:50,130 --> 01:09:57,100
upstream we are programming the rib on

1345
01:09:52,870 --> 01:09:59,920
every hop up to the head end once we

1346
01:09:57,100 --> 01:10:03,400
have the IP path set up complete the

1347
01:09:59,920 --> 01:10:07,540
data flow a packet trying to reach 20 /

1348
01:10:03,400 --> 01:10:09,700
8 subnet will be tunneled encapsulated

1349
01:10:07,540 --> 01:10:12,280
and another IP header and you will

1350
01:10:09,700 --> 01:10:17,380
notice that the green part has a

1351
01:10:12,280 --> 01:10:19,120
destination address 192 168 4.1 which is

1352
01:10:17,380 --> 01:10:22,800
nothing but the egress address that we

1353
01:10:19,120 --> 01:10:26,140
allocated on the Egret from the egress

1354
01:10:22,800 --> 01:10:28,240
so the packet travels along the IP path

1355
01:10:26,140 --> 01:10:31,180
that we signaled and once it reaches the

1356
01:10:28,240 --> 01:10:33,940
egress we D capsulate the outer IP

1357
01:10:31,180 --> 01:10:40,530
header and then forward the packet to

1358
01:10:33,940 --> 01:10:43,719
the the networks - slash it in terms of

1359
01:10:40,530 --> 01:10:45,639
extensions we so far we're thinking we

1360
01:10:43,720 --> 01:10:49,710
don't need much the generalized label

1361
01:10:45,640 --> 01:10:52,870
request was already defined in RFC 3471

1362
01:10:49,710 --> 01:10:56,110
there's an LSB encoding type and

1363
01:10:52,870 --> 01:10:59,740
switching type we are requesting at

1364
01:10:56,110 --> 01:11:03,820
special switching types be defined for

1365
01:10:59,740 --> 01:11:09,610
ipv4 te and ipv6 T so that we can signal

1366
01:11:03,820 --> 01:11:12,099
those IP kind of labels the generalized

1367
01:11:09,610 --> 01:11:16,000
label object itself will carry the

1368
01:11:12,100 --> 01:11:23,500
egress address so it's already suitable

1369
01:11:16,000 --> 01:11:26,220
to carry that we are showing here how we

1370
01:11:23,500 --> 01:11:29,880
can achieve fast reroute with such an

1371
01:11:26,220 --> 01:11:33,130
deployment we have a protected IP path

1372
01:11:29,880 --> 01:11:36,160
an example of a link protection here

1373
01:11:33,130 --> 01:11:39,610
with a bypass very much similar to RFC

1374
01:11:36,160 --> 01:11:43,780
4090 we set up the bypass and we protect

1375
01:11:39,610 --> 01:11:46,480
the primary path the link a protected

1376
01:11:43,780 --> 01:11:49,780
link upon failure you will notice in the

1377
01:11:46,480 --> 01:11:52,480
data packet we are pushing an extra

1378
01:11:49,780 --> 01:11:56,500
header the orange header here which will

1379
01:11:52,480 --> 01:11:59,119
take us on the bypass IP path the orange

1380
01:11:56,500 --> 01:12:01,219
header will be ad capsulated

1381
01:11:59,119 --> 01:12:05,449
once it reaches the merge point our 3

1382
01:12:01,219 --> 01:12:08,269
and then the packet continues its way

1383
01:12:05,449 --> 01:12:11,539
along the primary path towards the

1384
01:12:08,269 --> 01:12:13,369
egress so with this approach we can

1385
01:12:11,539 --> 01:12:15,978
achieve next ha protection link

1386
01:12:13,369 --> 01:12:21,829
protection and next next hub protection

1387
01:12:15,979 --> 01:12:23,780
which is note protection so on this

1388
01:12:21,829 --> 01:12:26,179
slide I'm showing how we can actually

1389
01:12:23,780 --> 01:12:28,389
share the forwarding state in the data

1390
01:12:26,179 --> 01:12:31,610
plane between different IP paths

1391
01:12:28,389 --> 01:12:35,719
originating from different ingresses we

1392
01:12:31,610 --> 01:12:37,639
have the green blue and red paths you

1393
01:12:35,719 --> 01:12:41,239
can call them and they're all

1394
01:12:37,639 --> 01:12:44,719
terminating on our five our five has an

1395
01:12:41,239 --> 01:12:47,478
egress address block so once we set up

1396
01:12:44,719 --> 01:12:50,749
the green whatever path comes first we

1397
01:12:47,479 --> 01:12:56,059
assign the the address egress address

1398
01:12:50,749 --> 01:12:59,478
192 168 5.1 the next IP path that comes

1399
01:12:56,059 --> 01:13:02,689
in our five can do a a validation check

1400
01:12:59,479 --> 01:13:05,629
to see if sharing can be possible the

1401
01:13:02,689 --> 01:13:08,360
validation check can rely on the record

1402
01:13:05,629 --> 01:13:12,169
route object to see if the two paths are

1403
01:13:08,360 --> 01:13:15,530
merging towards the the egress basically

1404
01:13:12,169 --> 01:13:18,260
the intersect and merge towards the the

1405
01:13:15,530 --> 01:13:21,800
egress so there is a condition that our

1406
01:13:18,260 --> 01:13:24,909
five needs to validate we put it down

1407
01:13:21,800 --> 01:13:28,189
there and in a statement

1408
01:13:24,909 --> 01:13:30,409
once our r5 determines that sharing is

1409
01:13:28,189 --> 01:13:33,349
possible it can assign the same egress

1410
01:13:30,409 --> 01:13:35,509
address in this case for the three of

1411
01:13:33,349 --> 01:13:38,149
them so in the data plane they will all

1412
01:13:35,510 --> 01:13:41,409
have the same entry but the control

1413
01:13:38,149 --> 01:13:41,409
plane they have different reservations

1414
01:13:43,659 --> 01:13:52,339
so with this we solicit more input from

1415
01:13:48,169 --> 01:13:54,800
the working group feedback is welcome we

1416
01:13:52,340 --> 01:13:57,439
will be introducing additional features

1417
01:13:54,800 --> 01:14:00,320
the signal attributes on this LSP path

1418
01:13:57,439 --> 01:14:02,829
or IP path and they are under

1419
01:14:00,320 --> 01:14:07,999
consideration

1420
01:14:02,829 --> 01:14:09,259
go ahead feature a can you go to the

1421
01:14:07,999 --> 01:14:10,260
slide

1422
01:14:09,260 --> 01:14:13,410
go back

1423
01:14:10,260 --> 01:14:14,880
you know further further where you first

1424
01:14:13,410 --> 01:14:19,230
showed the next top setup

1425
01:14:14,880 --> 01:14:21,660
yeah yeah Thanks so you are showing here

1426
01:14:19,230 --> 01:14:28,980
a strict path I guess is it true it's an

1427
01:14:21,660 --> 01:14:32,190
explicitly routed so we are considering

1428
01:14:28,980 --> 01:14:33,769
loose paths as well there are certain

1429
01:14:32,190 --> 01:14:37,580
conditions that we have to be aware of

1430
01:14:33,770 --> 01:14:41,220
that can create certain unexpectable

1431
01:14:37,580 --> 01:14:44,190
loops so with loose paths so they are

1432
01:14:41,220 --> 01:14:46,740
possible you could do the loose path but

1433
01:14:44,190 --> 01:14:50,790
as RSVP is strictly routed we are

1434
01:14:46,740 --> 01:14:57,929
sticking to our SVP kind of so we set up

1435
01:14:50,790 --> 01:15:00,420
the path we are pinning the path that's

1436
01:14:57,930 --> 01:15:02,970
what I mean yes so you can have a loose

1437
01:15:00,420 --> 01:15:04,620
hop in the ER oh that's expanded on the

1438
01:15:02,970 --> 01:15:07,560
transit node that's possible

1439
01:15:04,620 --> 01:15:10,559
but you don't want to rely on IGP

1440
01:15:07,560 --> 01:15:17,670
routing that's what I mean we don't as

1441
01:15:10,560 --> 01:15:20,520
so far we don't want to rely on okay so

1442
01:15:17,670 --> 01:15:26,300
we can we can pin the path along the IGP

1443
01:15:20,520 --> 01:15:29,160
path that's possible so I that clarifies

1444
01:15:26,300 --> 01:15:31,620
okay maybe one one idea I can give you

1445
01:15:29,160 --> 01:15:34,380
if it is a lute segment between the two

1446
01:15:31,620 --> 01:15:36,090
nodes you can encapsulate further but if

1447
01:15:34,380 --> 01:15:38,400
you don't want IGP then you can't

1448
01:15:36,090 --> 01:15:41,550
additionally you could fill this run see

1449
01:15:38,400 --> 01:15:43,349
SPF on that destination because you know

1450
01:15:41,550 --> 01:15:46,170
you're gonna have it's it's it's RSVP

1451
01:15:43,350 --> 01:15:48,750
you'll have constraints and you can just

1452
01:15:46,170 --> 01:15:51,270
run see SPF on that on that destination

1453
01:15:48,750 --> 01:15:53,340
and expand if they know it has the

1454
01:15:51,270 --> 01:16:06,240
topology information in the resource

1455
01:15:53,340 --> 01:16:10,530
information from like the question is if

1456
01:16:06,240 --> 01:16:13,469
what happens is the 192 168 4.1 the EAB

1457
01:16:10,530 --> 01:16:17,099
block IP address the loose path should

1458
01:16:13,470 --> 01:16:22,230
have a next hop entry keep in mind and

1459
01:16:17,100 --> 01:16:22,680
rsvp-te your computation is based on the

1460
01:16:22,230 --> 01:16:25,259
end

1461
01:16:22,680 --> 01:16:27,300
it's not the data plane identifier he's

1462
01:16:25,260 --> 01:16:28,920
carrying what happens to be an IP

1463
01:16:27,300 --> 01:16:30,630
address in the data play an identifier

1464
01:16:28,920 --> 01:16:32,130
but that's not used at all in the

1465
01:16:30,630 --> 01:16:33,300
control plane state because it's just

1466
01:16:32,130 --> 01:16:40,410
the data plane identifier

1467
01:16:33,300 --> 01:16:43,260
yes we've had where we use the label is

1468
01:16:40,410 --> 01:16:45,900
like optical I got that but my question

1469
01:16:43,260 --> 01:16:48,990
was what happens if this data plane

1470
01:16:45,900 --> 01:16:50,429
identify the a B IP address gets to a

1471
01:16:48,990 --> 01:16:52,110
node where that next stop is not

1472
01:16:50,430 --> 01:16:54,300
installed that's the question

1473
01:16:52,110 --> 01:16:57,059
exactly so we are a part of the

1474
01:16:54,300 --> 01:17:00,060
signaling as I mentioned is to install

1475
01:16:57,060 --> 01:17:02,490
an entry in rib for that egress address

1476
01:17:00,060 --> 01:17:04,650
so if you look at the example here we

1477
01:17:02,490 --> 01:17:14,820
have every hop installing its last 32

1478
01:17:04,650 --> 01:17:17,660
host address on every home we can have

1479
01:17:14,820 --> 01:17:21,660
these IP packets that sort of escape

1480
01:17:17,660 --> 01:17:23,700
provision one way to do this is you can

1481
01:17:21,660 --> 01:17:26,280
encapsulate actually you can encapsulate

1482
01:17:23,700 --> 01:17:29,040
to the Lu segment which will not ends

1483
01:17:26,280 --> 01:17:31,530
and then you don't have to have this 192

1484
01:17:29,040 --> 01:17:33,450
168 photon next hop entry between this

1485
01:17:31,530 --> 01:17:42,179
low signals it will take shortest path

1486
01:17:33,450 --> 01:17:44,160
one way if you're doing IP I actually

1487
01:17:42,180 --> 01:17:46,740
understand more your question now I have

1488
01:17:44,160 --> 01:17:49,590
a context so yes if the packet you know

1489
01:17:46,740 --> 01:17:51,780
goes outside the path somehow we need

1490
01:17:49,590 --> 01:17:55,110
you know we can choose a way to bring it

1491
01:17:51,780 --> 01:17:59,880
back okay that's the document good idea

1492
01:17:55,110 --> 01:18:04,139
thank you thank you for the feedback one

1493
01:17:59,880 --> 01:18:06,900
question is how one uses such tunnels so

1494
01:18:04,140 --> 01:18:10,170
like for example if you have like an IP

1495
01:18:06,900 --> 01:18:15,660
MPLS teton alright you can use label

1496
01:18:10,170 --> 01:18:18,720
stick and you put Messiah so responsible

1497
01:18:15,660 --> 01:18:21,330
and on top you have yes so realizing

1498
01:18:18,720 --> 01:18:25,470
services on top of the tunnel is IP

1499
01:18:21,330 --> 01:18:27,540
tunnels as possible today you carry in

1500
01:18:25,470 --> 01:18:29,610
the destination options you know

1501
01:18:27,540 --> 01:18:33,210
whatever sorry whatever context you need

1502
01:18:29,610 --> 01:18:35,530
for VPN services and so on so normally

1503
01:18:33,210 --> 01:18:38,080
you would carry like a label right

1504
01:18:35,530 --> 01:18:41,490
like whatever context information you

1505
01:18:38,080 --> 01:18:46,600
need can be carried in the IP options

1506
01:18:41,490 --> 01:18:50,380
extensions of ipv6 or we are you talking

1507
01:18:46,600 --> 01:18:53,410
about a PVC so happy before or both it's

1508
01:18:50,380 --> 01:18:57,910
possible with both so I'm going to use

1509
01:18:53,410 --> 01:19:01,840
for example header of ipv4 to put this

1510
01:18:57,910 --> 01:19:03,550
service information I'm sorry I didn't

1511
01:19:01,840 --> 01:19:06,100
understand the question so basically

1512
01:19:03,550 --> 01:19:08,140
where exactly would put the label of

1513
01:19:06,100 --> 01:19:09,580
them what we're saying is we're

1514
01:19:08,140 --> 01:19:11,410
establishing the tunnel and the

1515
01:19:09,580 --> 01:19:14,620
transport layer and there will be

1516
01:19:11,410 --> 01:19:16,960
services service traffic carried by the

1517
01:19:14,620 --> 01:19:19,750
tunnel and it could be multiplexed on

1518
01:19:16,960 --> 01:19:22,090
the same tunnel right so how do the

1519
01:19:19,750 --> 01:19:26,470
multiplex multiple services yeah it's

1520
01:19:22,090 --> 01:19:28,350
possible I can show you how the other

1521
01:19:26,470 --> 01:19:31,510
thing is that there is obvious

1522
01:19:28,350 --> 01:19:35,230
similarity with pbbt there are reason

1523
01:19:31,510 --> 01:19:39,160
why it didn't succeed okay so one thing

1524
01:19:35,230 --> 01:19:41,349
was is that basically this OB cover yet

1525
01:19:39,160 --> 01:19:46,720
especially if you want to miss tunnels

1526
01:19:41,350 --> 01:19:49,810
within tunnels all right let's tunnel

1527
01:19:46,720 --> 01:19:54,220
sorry it just nested tunnels you mean

1528
01:19:49,810 --> 01:19:56,290
yeah okay um IP and IP in capsule is

1529
01:19:54,220 --> 01:19:58,210
that what you're saying yeah but if you

1530
01:19:56,290 --> 01:20:06,370
look at this our v6 they are doing a lot

1531
01:19:58,210 --> 01:20:09,280
of encapsulations as well IP it's every

1532
01:20:06,370 --> 01:20:13,330
ever encapsulation it will take the

1533
01:20:09,280 --> 01:20:15,960
entire header right even in SR v6 and as

1534
01:20:13,330 --> 01:20:27,700
our three six plus they are doing IP IP

1535
01:20:15,960 --> 01:20:29,500
encapsulations you could do this even

1536
01:20:27,700 --> 01:20:30,820
without the encapsulation and there

1537
01:20:29,500 --> 01:20:33,040
could be value there

1538
01:20:30,820 --> 01:20:36,519
particularly if you are looking at and

1539
01:20:33,040 --> 01:20:39,040
in the context of network which uses

1540
01:20:36,520 --> 01:20:41,590
more headers than just the destination

1541
01:20:39,040 --> 01:20:44,170
and I could see this being very useful

1542
01:20:41,590 --> 01:20:45,520
there and right and the expectation is

1543
01:20:44,170 --> 01:20:48,130
that that isn't going to do control

1544
01:20:45,520 --> 01:20:48,650
playing extensions sort of come up with

1545
01:20:48,130 --> 01:20:50,960
framework

1546
01:20:48,650 --> 01:20:53,210
send requirements in brigham here so if

1547
01:20:50,960 --> 01:20:57,830
you added the support for the debt net

1548
01:20:53,210 --> 01:21:00,140
an IP layer and the type of filtering

1549
01:20:57,830 --> 01:21:02,600
sorry traffic classification that it can

1550
01:21:00,140 --> 01:21:05,380
do will be ahead of that that'll be very

1551
01:21:02,600 --> 01:21:08,360
good and that's with either chair hat on

1552
01:21:05,380 --> 01:21:10,970
so that's definitely good you know

1553
01:21:08,360 --> 01:21:13,040
feedback and we're willing to look into

1554
01:21:10,970 --> 01:21:16,370
that and encompass the requirements from

1555
01:21:13,040 --> 01:21:19,580
that matter if we can and not being able

1556
01:21:16,370 --> 01:21:21,349
not needing doing absolutions is a good

1557
01:21:19,580 --> 01:21:26,440
thing so we were willing to look into

1558
01:21:21,350 --> 01:21:28,850
that definitely first question would be

1559
01:21:26,440 --> 01:21:31,669
can you speak a little bit more about

1560
01:21:28,850 --> 01:21:33,260
how the EAB block you will be

1561
01:21:31,670 --> 01:21:35,510
maintaining on every crystal your

1562
01:21:33,260 --> 01:21:37,670
thought is that all over your edges of

1563
01:21:35,510 --> 01:21:41,090
the network you will assign separate

1564
01:21:37,670 --> 01:21:42,890
separate blocks and/or address block and

1565
01:21:41,090 --> 01:21:45,890
wave with that space be coming from

1566
01:21:42,890 --> 01:21:47,680
specially from the ipv4 thanks for your

1567
01:21:45,890 --> 01:21:50,210
thoughts on that like some special

1568
01:21:47,680 --> 01:21:52,670
addresses as you're further dividing

1569
01:21:50,210 --> 01:21:55,040
them right so when the people let me see

1570
01:21:52,670 --> 01:21:57,560
you in the previous so yeah we we are

1571
01:21:55,040 --> 01:21:59,540
saying that these address blocks they

1572
01:21:57,560 --> 01:22:03,230
don't need to be routable they're not

1573
01:21:59,540 --> 01:22:04,940
advertising in igb they can be from the

1574
01:22:03,230 --> 01:22:07,370
private address space like the

1575
01:22:04,940 --> 01:22:11,629
well-known private address space in ipv6

1576
01:22:07,370 --> 01:22:13,099
or ipv4 and they can grow dynamically

1577
01:22:11,630 --> 01:22:16,400
they don't have to be statically

1578
01:22:13,100 --> 01:22:20,450
provisioned so on-demand resizing is

1579
01:22:16,400 --> 01:22:21,910
possible let's discuss that one small

1580
01:22:20,450 --> 01:22:25,610
thing

1581
01:22:21,910 --> 01:22:27,710
compare this to pure open flow and I'm

1582
01:22:25,610 --> 01:22:30,380
just doing IP forwarding in open flow

1583
01:22:27,710 --> 01:22:33,290
using a controller and doing bandwidth

1584
01:22:30,380 --> 01:22:36,830
management there compare this why I show

1585
01:22:33,290 --> 01:22:38,720
use this oh definitely I mean the idea

1586
01:22:36,830 --> 01:22:41,120
of doing distributed been with traffic

1587
01:22:38,720 --> 01:22:43,160
engineering so now you can do bandwidth

1588
01:22:41,120 --> 01:22:47,540
engineering distributive lis preemption

1589
01:22:43,160 --> 01:22:50,960
for are all the rich features of its

1590
01:22:47,540 --> 01:22:54,070
marketing now hat but you'll be able to

1591
01:22:50,960 --> 01:22:54,070
did I

1592
01:22:54,110 --> 01:23:01,610
last two questions were three questions

1593
01:22:56,630 --> 01:23:04,880
eating okay we never like so to get the

1594
01:23:01,610 --> 01:23:11,330
quick one I see that for first we wrote

1595
01:23:04,880 --> 01:23:15,350
rely only on 40rc 40 9000 nine

1596
01:23:11,330 --> 01:23:18,920
I have no consider looking at forty

1597
01:23:15,350 --> 01:23:20,180
eight seventy three segments recovery

1598
01:23:18,920 --> 01:23:22,850
within gmpls

1599
01:23:20,180 --> 01:23:25,220
because it's just under switching

1600
01:23:22,850 --> 01:23:28,610
capital yeah be honest so why this

1601
01:23:25,220 --> 01:23:31,340
exception with respect to no no specific

1602
01:23:28,610 --> 01:23:33,769
bias no no specific bias it's just

1603
01:23:31,340 --> 01:23:36,110
because in the packet world fourteen

1604
01:23:33,770 --> 01:23:37,580
ninety was more implemented I think

1605
01:23:36,110 --> 01:23:43,179
where it's coming from so have you

1606
01:23:37,580 --> 01:23:46,820
considered other legacy to just

1607
01:23:43,180 --> 01:23:49,250
convenient to rely on it is very fast

1608
01:23:46,820 --> 01:23:53,630
reroute maybe it's convenient but we're

1609
01:23:49,250 --> 01:23:57,620
open to look into 48 73 and 72 yeah okay

1610
01:23:53,630 --> 01:24:00,260
thank you Adrian Farrell apologies for

1611
01:23:57,620 --> 01:24:01,700
trying to consume all this from your

1612
01:24:00,260 --> 01:24:05,510
presentation instead of reading the

1613
01:24:01,700 --> 01:24:10,849
draft what I think I understand is that

1614
01:24:05,510 --> 01:24:15,460
you are doing a global global context

1615
01:24:10,850 --> 01:24:18,710
destination assigned non swappable label

1616
01:24:15,460 --> 01:24:21,110
not global though it's what we said is I

1617
01:24:18,710 --> 01:24:23,510
mean there was a it's between the

1618
01:24:21,110 --> 01:24:28,700
ingress and egress along the path these

1619
01:24:23,510 --> 01:24:33,530
are the only nodes that these two paths

1620
01:24:28,700 --> 01:24:36,349
might cross so that the EI had better be

1621
01:24:33,530 --> 01:24:40,599
globally unique otherwise when the paths

1622
01:24:36,350 --> 01:24:46,610
cross the packet will get cross routed

1623
01:24:40,600 --> 01:24:49,160
okay yeah so so the only difference only

1624
01:24:46,610 --> 01:24:55,190
difference I see between MPLS and this

1625
01:24:49,160 --> 01:24:59,540
is the size of your label it's and if

1626
01:24:55,190 --> 01:25:01,969
you if you believe that 20 bits is not

1627
01:24:59,540 --> 01:25:05,930
enough then I would suggest you must

1628
01:25:01,970 --> 01:25:09,270
limit this only to ipv6

1629
01:25:05,930 --> 01:25:11,340
DSE issue an ipv4 well apart from the

1630
01:25:09,270 --> 01:25:16,200
political we shall not work on ipv4

1631
01:25:11,340 --> 01:25:18,840
extensions if you believe that 20 bits

1632
01:25:16,200 --> 01:25:24,960
is not enough you should limit this to

1633
01:25:18,840 --> 01:25:26,460
ipv6 okay there is of course the out for

1634
01:25:24,960 --> 01:25:27,960
them to say that they're supporting the

1635
01:25:26,460 --> 01:25:31,920
get that data plane which includes

1636
01:25:27,960 --> 01:25:36,780
before an v6 by the way is a lot more

1637
01:25:31,920 --> 01:25:42,300
bits thanks I know this is an early

1638
01:25:36,780 --> 01:25:44,460
draft yes there's if you don't mind take

1639
01:25:42,300 --> 01:25:47,390
it to the list I just want to make a

1640
01:25:44,460 --> 01:25:52,860
comment on mr. Karpov you don't mind

1641
01:25:47,390 --> 01:25:54,750
thanks it would be worthwhile to see

1642
01:25:52,860 --> 01:25:56,580
even though we had a good discussion be

1643
01:25:54,750 --> 01:25:58,080
worthwhile to see how many people think

1644
01:25:56,580 --> 01:25:59,550
that this is a topic we should be

1645
01:25:58,080 --> 01:26:01,620
working on I'm not saying except the

1646
01:25:59,550 --> 01:26:04,530
working this is a work good job just is

1647
01:26:01,620 --> 01:26:08,130
this a topic we want to be working on IP

1648
01:26:04,530 --> 01:26:11,160
traffic engineering there's a few hands

1649
01:26:08,130 --> 01:26:16,200
not a huge amount how many think we

1650
01:26:11,160 --> 01:26:18,780
should not be working on it 0 that's

1651
01:26:16,200 --> 01:26:20,550
that's useful information thank you

1652
01:26:18,780 --> 01:26:22,559
we're a little bit where we have like

1653
01:26:20,550 --> 01:26:24,170
five minutes for the last person so

1654
01:26:22,560 --> 01:26:32,820
please come up

1655
01:26:24,170 --> 01:26:37,050
thank you thanks for giving me the

1656
01:26:32,820 --> 01:26:40,769
chance I'll try to be quick okay my name

1657
01:26:37,050 --> 01:26:43,800
is Billy oh this is a new work we call

1658
01:26:40,770 --> 01:26:47,880
it I can instinct congestion assessment

1659
01:26:43,800 --> 01:26:49,950
network and we considered it as kind of

1660
01:26:47,880 --> 01:26:53,450
data playing traffic engineering

1661
01:26:49,950 --> 01:26:56,880
technology in terms of Tears context and

1662
01:26:53,450 --> 01:27:00,000
please note that although the the other

1663
01:26:56,880 --> 01:27:02,930
draft only has one other which is me but

1664
01:27:00,000 --> 01:27:06,510
it is actually a very solid team work

1665
01:27:02,930 --> 01:27:09,450
including pollution design and product

1666
01:27:06,510 --> 01:27:12,830
development we've been working on this

1667
01:27:09,450 --> 01:27:12,830
for more than one year

1668
01:27:15,840 --> 01:27:26,470
sorry okay what's a problem a problem

1669
01:27:22,030 --> 01:27:30,280
one the network is always unbalanced in

1670
01:27:26,470 --> 01:27:33,280
in real situation a current technology

1671
01:27:30,280 --> 01:27:35,280
such as SNP you SMP cannot handle it

1672
01:27:33,280 --> 01:27:38,800
very well

1673
01:27:35,280 --> 01:27:41,920
challenge to the traffic is so dynamic

1674
01:27:38,800 --> 01:27:44,760
that traditional traffic engineering

1675
01:27:41,920 --> 01:27:50,860
cannot adapt it to the traffic in a

1676
01:27:44,760 --> 01:27:55,330
microscope so we propose the icon

1677
01:27:50,860 --> 01:27:58,200
solution first we still rely on the

1678
01:27:55,330 --> 01:28:01,989
centralized controller to calculate

1679
01:27:58,200 --> 01:28:04,570
multiple paths for each pair of ingress

1680
01:28:01,989 --> 01:28:11,160
router and egress router this could be

1681
01:28:04,570 --> 01:28:14,590
done in fairly slow control loop say at

1682
01:28:11,160 --> 01:28:20,500
Ephesus may be his meanness level or

1683
01:28:14,590 --> 01:28:24,850
even longer and after that the job will

1684
01:28:20,500 --> 01:28:31,780
handle to the rotors and the rotors will

1685
01:28:24,850 --> 01:28:35,980
to the pass congestion assessment and

1686
01:28:31,780 --> 01:28:39,190
then it will decide which flow need to

1687
01:28:35,980 --> 01:28:42,549
be switched from one pass to another and

1688
01:28:39,190 --> 01:28:44,589
this process is totally done by the

1689
01:28:42,550 --> 01:28:48,850
rotors by themselves without any

1690
01:28:44,590 --> 01:28:51,750
interference of the controller so this

1691
01:28:48,850 --> 01:28:57,180
could be done in a very fast manner

1692
01:28:51,750 --> 01:29:00,880
which is tens of milliseconds level and

1693
01:28:57,180 --> 01:29:02,830
the intermediate rotors don't need to

1694
01:29:00,880 --> 01:29:06,670
participate in the process is totally

1695
01:29:02,830 --> 01:29:09,489
done by the end to end only the egress

1696
01:29:06,670 --> 01:29:14,070
router and the ingress water and the

1697
01:29:09,489 --> 01:29:17,320
egress router so we use this technology

1698
01:29:14,070 --> 01:29:20,410
for different purposes there could be

1699
01:29:17,320 --> 01:29:22,929
three use cases the first one is of

1700
01:29:20,410 --> 01:29:28,150
course the guaranteed net world balance

1701
01:29:22,930 --> 01:29:28,690
and we have developed a hardware rotor

1702
01:29:28,150 --> 01:29:32,469
pay

1703
01:29:28,690 --> 01:29:37,089
prototype for this use case and we can

1704
01:29:32,470 --> 01:29:43,510
also do SLA assurance as well and high

1705
01:29:37,090 --> 01:29:49,360
availability and for de prony scenario

1706
01:29:43,510 --> 01:29:52,320
that I can is basically agnostic to the

1707
01:29:49,360 --> 01:29:55,750
underlay technologies whether it's

1708
01:29:52,320 --> 01:29:58,599
Stegman Rodian or is is tunneling

1709
01:29:55,750 --> 01:30:05,590
technologies can all benefit from this

1710
01:29:58,600 --> 01:30:08,740
mechanism ok this is the laboratory test

1711
01:30:05,590 --> 01:30:14,820
result in short and according to our

1712
01:30:08,740 --> 01:30:19,750
test 30% through network throughput

1713
01:30:14,820 --> 01:30:22,960
increments is done so which is quite a

1714
01:30:19,750 --> 01:30:25,870
good result and this is done without any

1715
01:30:22,960 --> 01:30:34,930
hardware expansion is totally done by

1716
01:30:25,870 --> 01:30:37,140
the software upgrade yeah and I also

1717
01:30:34,930 --> 01:30:39,400
have some backup slides for the

1718
01:30:37,140 --> 01:30:40,720
technical details yeah yeah yeah yeah

1719
01:30:39,400 --> 01:30:43,389
only a hint

1720
01:30:40,720 --> 01:30:46,270
so you carried by ourselves so we want

1721
01:30:43,390 --> 01:30:48,760
to know whether you think the so the

1722
01:30:46,270 --> 01:31:04,900
problem is available or the solution is

1723
01:30:48,760 --> 01:31:21,040
in the right way in my mind tears the

1724
01:31:04,900 --> 01:31:22,929
first my name is Micah coffin the

1725
01:31:21,040 --> 01:31:25,360
specific case is big as a member of the

1726
01:31:22,930 --> 01:31:27,040
TV area Directorate so please be aware

1727
01:31:25,360 --> 01:31:29,469
if you do something like that on

1728
01:31:27,040 --> 01:31:31,360
millisecond times you can interact with

1729
01:31:29,470 --> 01:31:32,920
the congestion control loop on the end

1730
01:31:31,360 --> 01:31:36,339
systems and you have to look at that

1731
01:31:32,920 --> 01:31:38,440
very early in the design because this

1732
01:31:36,340 --> 01:31:40,150
time scale you have another control

1733
01:31:38,440 --> 01:31:42,700
several other control loops in the

1734
01:31:40,150 --> 01:31:44,589
overall system and you have to avoid

1735
01:31:42,700 --> 01:31:46,120
that the control hopes interact so you

1736
01:31:44,590 --> 01:31:50,850
have to look at the congestion control

1737
01:31:46,120 --> 01:31:50,849
loops Thank You K thanks

1738
01:32:08,210 --> 01:32:15,960
[Music]

