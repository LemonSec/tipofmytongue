1
00:00:04,640 --> 00:00:07,818
we don't

2
00:00:09,000 --> 00:00:12,140
[Music]

3
00:01:41,430 --> 00:01:44,569
[Music]

4
00:03:23,820 --> 00:03:26,900
[Music]

5
00:03:32,250 --> 00:03:38,000
please take your seats

6
00:03:34,640 --> 00:03:38,000
[Music]

7
00:03:43,569 --> 00:03:48,630
Lorenzo Canasta close the door please

8
00:03:45,819 --> 00:03:48,630
Thanks

9
00:04:22,650 --> 00:04:27,030
all right good afternoon everyone

10
00:04:27,210 --> 00:04:39,549
hello and welcome to DNS service

11
00:04:35,500 --> 00:04:42,010
discovery this is Barbara stark and I'm

12
00:04:39,550 --> 00:04:47,020
David's Knaus II and we are about to

13
00:04:42,010 --> 00:04:49,770
start talking about TN SSD before we

14
00:04:47,020 --> 00:04:56,349
begin we do not have a minute taker yet

15
00:04:49,770 --> 00:04:58,359
could someone volunteer thank you

16
00:04:56,350 --> 00:05:02,080
we set up the meet echo of the SIV

17
00:04:58,360 --> 00:05:04,090
etherpad with the agenda and if anyone

18
00:05:02,080 --> 00:05:08,800
else wants to jump in and help in on

19
00:05:04,090 --> 00:05:10,960
that please please feel free I'll be

20
00:05:08,800 --> 00:05:14,680
supporting there on etherpad so you're

21
00:05:10,960 --> 00:05:18,159
not alone and the blue sheets are going

22
00:05:14,680 --> 00:05:20,860
around please make sure you sign them so

23
00:05:18,160 --> 00:05:22,780
it is Thursday afternoon hopefully

24
00:05:20,860 --> 00:05:25,390
you've seen the note well bye now

25
00:05:22,780 --> 00:05:27,789
this meeting is covered by the IETF note

26
00:05:25,390 --> 00:05:31,479
well if you have not read it yet please

27
00:05:27,789 --> 00:05:33,190
do so it covers things such as patents

28
00:05:31,479 --> 00:05:35,979
and what your responsibilities are in

29
00:05:33,190 --> 00:05:38,140
the ITF and also very importantly the

30
00:05:35,979 --> 00:05:44,469
code of conduct with which this meeting

31
00:05:38,140 --> 00:05:46,630
is going to run so usual reminders

32
00:05:44,470 --> 00:05:48,539
anytime you talk at the mic please state

33
00:05:46,630 --> 00:05:50,950
your name clearly for the minute taker

34
00:05:48,539 --> 00:05:52,840
and please review the documents that

35
00:05:50,950 --> 00:05:54,870
happen this working group that way your

36
00:05:52,840 --> 00:05:59,229
documents will also get reviewed and

37
00:05:54,870 --> 00:06:05,229
signed boo cheats so here are some links

38
00:05:59,229 --> 00:06:12,669
for people following online did I get it

39
00:06:05,229 --> 00:06:16,300
wrong every time I saw your email this

40
00:06:12,669 --> 00:06:20,530
is so more useful links for people still

41
00:06:16,300 --> 00:06:23,200
following online yeah quick usual shout

42
00:06:20,530 --> 00:06:25,510
out we have a github organization for

43
00:06:23,200 --> 00:06:26,469
the working group and anyone working on

44
00:06:25,510 --> 00:06:28,120
a draft

45
00:06:26,470 --> 00:06:29,890
in the working group or that wants to be

46
00:06:28,120 --> 00:06:31,570
in the working group is welcome to set

47
00:06:29,890 --> 00:06:36,760
it up there just talk to us and we can

48
00:06:31,570 --> 00:06:39,070
make it happen our goals for today we're

49
00:06:36,760 --> 00:06:41,560
gonna have an update on our currently

50
00:06:39,070 --> 00:06:44,260
active documents both in terms of

51
00:06:41,560 --> 00:06:47,230
standardization and actual running code

52
00:06:44,260 --> 00:06:49,480
and then we're going to talk about discs

53
00:06:47,230 --> 00:06:53,650
about service registration and discovery

54
00:06:49,480 --> 00:06:56,500
relay and we're gonna have fill up the

55
00:06:53,650 --> 00:06:57,760
rest of the lot of time with the future

56
00:06:56,500 --> 00:07:00,910
of this working group and the privacy

57
00:06:57,760 --> 00:07:03,190
efforts and what we want to go so that's

58
00:07:00,910 --> 00:07:14,200
the agenda is currently stated would

59
00:07:03,190 --> 00:07:33,430
anyone like to bash the agenda all right

60
00:07:14,200 --> 00:07:37,950
Stuart please stand on the pink X

61
00:07:33,430 --> 00:07:37,950
otherwise the Acme anvil will miss you

62
00:07:39,960 --> 00:07:46,000
this is an update on our push

63
00:07:42,370 --> 00:07:48,040
notifications document we discussed this

64
00:07:46,000 --> 00:07:51,610
at the last IETF meeting we're on

65
00:07:48,040 --> 00:07:55,210
version 19 we had working group last

66
00:07:51,610 --> 00:07:57,430
call to review that that went smoothly

67
00:07:55,210 --> 00:08:01,180
David requested publication when I

68
00:07:57,430 --> 00:08:04,120
actually review last call we got some

69
00:08:01,180 --> 00:08:06,190
feedback we made some updates and that's

70
00:08:04,120 --> 00:08:35,460
what I'm gonna give a quick overview of

71
00:08:06,190 --> 00:08:35,460
right there push escape

72
00:08:37,260 --> 00:08:48,870
yeah there's not a media program is

73
00:08:41,669 --> 00:08:51,449
cheap okay so this is the timeline I

74
00:08:48,870 --> 00:08:57,780
don't need to read it out you can all

75
00:08:51,450 --> 00:08:59,940
read here's the summary of what's new we

76
00:08:57,780 --> 00:09:02,250
realized that the whole document focuses

77
00:08:59,940 --> 00:09:05,400
on the mechanisms of push notification

78
00:09:02,250 --> 00:09:09,060
which is fine what it neglected to

79
00:09:05,400 --> 00:09:11,370
mention is the reality that any client

80
00:09:09,060 --> 00:09:13,979
using this if push notification is not

81
00:09:11,370 --> 00:09:16,440
supported is going to fall back to using

82
00:09:13,980 --> 00:09:19,530
the regular DNS query to get the same

83
00:09:16,440 --> 00:09:21,750
answer that's kind of obvious but it

84
00:09:19,530 --> 00:09:24,390
didn't say that so we added some text

85
00:09:21,750 --> 00:09:26,880
that says when you do that you shouldn't

86
00:09:24,390 --> 00:09:28,260
pull more frequently than once every 15

87
00:09:26,880 --> 00:09:30,480
minutes and that's just to give some

88
00:09:28,260 --> 00:09:36,660
guidance so that we don't end up with

89
00:09:30,480 --> 00:09:40,710
ridiculous burden on servers there was

90
00:09:36,660 --> 00:09:43,880
also a mismatch in the documents late in

91
00:09:40,710 --> 00:09:48,180
the process the DNS stateful operation

92
00:09:43,880 --> 00:09:50,880
RFC added some explicit text about when

93
00:09:48,180 --> 00:09:52,859
TLS early data is permitted and when

94
00:09:50,880 --> 00:09:55,110
it's not because there can be risks with

95
00:09:52,860 --> 00:09:57,630
replay so you only want to use it for

96
00:09:55,110 --> 00:10:01,620
idempotent operations and there is a

97
00:09:57,630 --> 00:10:03,660
requirement in DSO that you state which

98
00:10:01,620 --> 00:10:06,600
DSA operations were allowed in the early

99
00:10:03,660 --> 00:10:08,819
data and we had not updated the push

100
00:10:06,600 --> 00:10:12,270
Draft to include that required language

101
00:10:08,820 --> 00:10:16,080
so we did a bit of thinking and we

102
00:10:12,270 --> 00:10:18,060
figured doing the SUBSCRIBE is not

103
00:10:16,080 --> 00:10:20,550
something that will cause harm if it's

104
00:10:18,060 --> 00:10:22,739
duplicated and the performance benefits

105
00:10:20,550 --> 00:10:25,859
of saving the roundtrip may well be

106
00:10:22,740 --> 00:10:28,020
worthwhile so we put in the required

107
00:10:25,860 --> 00:10:30,600
text saying we've considered the

108
00:10:28,020 --> 00:10:34,530
security implications and this is fine

109
00:10:30,600 --> 00:10:40,740
with TLS early data so those two are

110
00:10:34,530 --> 00:10:42,839
easy the big topic was I think I hope a

111
00:10:40,740 --> 00:10:45,840
storm in a teacup but it turned into a

112
00:10:42,840 --> 00:10:49,880
long email thread and what happened here

113
00:10:45,840 --> 00:10:52,970
was we heard

114
00:10:49,880 --> 00:10:56,240
copied text from the DSO document this

115
00:10:52,970 --> 00:10:58,220
is based on where in many places it says

116
00:10:56,240 --> 00:11:01,430
if there's a fatal error you should

117
00:10:58,220 --> 00:11:03,500
immediately abort the connection with a

118
00:11:01,430 --> 00:11:08,209
TCP reset or equivalent for other

119
00:11:03,500 --> 00:11:12,259
protocols and in DSO as in this document

120
00:11:08,209 --> 00:11:15,469
we are we may be a victim of trying to

121
00:11:12,259 --> 00:11:17,000
be too thorough in stating all of the

122
00:11:15,470 --> 00:11:18,740
rare corner cases that should never

123
00:11:17,000 --> 00:11:23,509
happen but if they do happen what you

124
00:11:18,740 --> 00:11:27,019
should do about them Martin Thompson has

125
00:11:23,509 --> 00:11:29,660
written a draft recently that Title II

126
00:11:27,019 --> 00:11:31,459
something Postell was wrong or something

127
00:11:29,660 --> 00:11:36,920
to that effect it's been renamed to

128
00:11:31,459 --> 00:11:38,540
something less controversial he was most

129
00:11:36,920 --> 00:11:40,069
he was mostly write about many things

130
00:11:38,540 --> 00:11:43,069
but I happen to agree with martin

131
00:11:40,069 --> 00:11:45,589
thompson on this one that being liberal

132
00:11:43,069 --> 00:11:48,130
with what you accept particularly for

133
00:11:45,589 --> 00:11:50,389
the first implementation of a thing

134
00:11:48,130 --> 00:11:52,519
anything you're liberal about other

135
00:11:50,389 --> 00:11:54,620
buggy implementations will probably

136
00:11:52,519 --> 00:11:56,959
accidentally do and if you accept it

137
00:11:54,620 --> 00:11:59,810
then all those bugs become entrenched

138
00:11:56,959 --> 00:12:02,349
and then you have an ecosystem of lots

139
00:11:59,810 --> 00:12:05,089
of buggy code I think for the first

140
00:12:02,350 --> 00:12:07,310
implementation of anything you actually

141
00:12:05,089 --> 00:12:09,620
have a responsibility to be strict and

142
00:12:07,310 --> 00:12:12,018
reject invalid input because in effect

143
00:12:09,620 --> 00:12:14,750
your implementation is the conformance

144
00:12:12,019 --> 00:12:17,540
test the ITF doesn't have conformance

145
00:12:14,750 --> 00:12:19,819
tests and certifications that have to be

146
00:12:17,540 --> 00:12:21,949
passed to get to use the ITF logo and

147
00:12:19,819 --> 00:12:24,290
your product so we have very little

148
00:12:21,949 --> 00:12:26,209
enforcement's of our protocol in effect

149
00:12:24,290 --> 00:12:28,910
the deployed implementations are the

150
00:12:26,209 --> 00:12:30,739
conformance test because somebody coming

151
00:12:28,910 --> 00:12:33,110
along to make an implementation is going

152
00:12:30,740 --> 00:12:35,060
to test it with yours and if it works

153
00:12:33,110 --> 00:12:38,600
they'll ship it and if it fails they'll

154
00:12:35,060 --> 00:12:40,219
debug it so early in the game I think

155
00:12:38,600 --> 00:12:41,839
it's really important to enforce all the

156
00:12:40,220 --> 00:12:43,610
things you want to because anything you

157
00:12:41,839 --> 00:12:44,000
don't enforce you don't get to enforce

158
00:12:43,610 --> 00:12:47,329
later

159
00:12:44,000 --> 00:12:50,509
so with that spirit in mind

160
00:12:47,329 --> 00:12:52,758
in many cases the document says if you

161
00:12:50,509 --> 00:12:53,750
do something completely bogus then the

162
00:12:52,759 --> 00:12:56,720
other end is going to reset the

163
00:12:53,750 --> 00:12:59,480
connection so if a client connects to a

164
00:12:56,720 --> 00:13:01,360
server and then sends it a response that

165
00:12:59,480 --> 00:13:03,470
makes no sense

166
00:13:01,360 --> 00:13:04,850
tear down the connection

167
00:13:03,470 --> 00:13:07,700
don't even bother with an error code

168
00:13:04,850 --> 00:13:10,130
because that is something that the

169
00:13:07,700 --> 00:13:12,350
programmer is going to debug by looking

170
00:13:10,130 --> 00:13:14,180
at a packet trace this is not a runtime

171
00:13:12,350 --> 00:13:15,860
error that occurs in the field it's just

172
00:13:14,180 --> 00:13:18,560
a gross programming error and you fix

173
00:13:15,860 --> 00:13:20,420
the bug so there are many cases like

174
00:13:18,560 --> 00:13:22,430
that that I think a lot of specs

175
00:13:20,420 --> 00:13:25,430
wouldn't even mention we were trying to

176
00:13:22,430 --> 00:13:28,790
be really thorough and we put this text

177
00:13:25,430 --> 00:13:34,160
in Robert sparks pointed out entirely

178
00:13:28,790 --> 00:13:36,589
correctly that DSO is general and could

179
00:13:34,160 --> 00:13:39,260
in principle run over any transports for

180
00:13:36,590 --> 00:13:43,910
push notifications we have specified for

181
00:13:39,260 --> 00:13:45,290
now only TLS over TCP running it over

182
00:13:43,910 --> 00:13:47,719
something else would be a future

183
00:13:45,290 --> 00:13:50,120
document to update this so Robert said

184
00:13:47,720 --> 00:13:51,620
since it's only for TLS over TCP you can

185
00:13:50,120 --> 00:13:53,090
remove the equivalent for other

186
00:13:51,620 --> 00:13:54,020
protocols because there aren't any oh

187
00:13:53,090 --> 00:13:56,950
good point

188
00:13:54,020 --> 00:13:59,770
okay we'll delete that text that's easy

189
00:13:56,950 --> 00:14:02,060
in the ensuing discussion

190
00:13:59,770 --> 00:14:03,740
David helpfully said well if you're

191
00:14:02,060 --> 00:14:06,739
using TLS you should send us close

192
00:14:03,740 --> 00:14:09,650
notified instead of reset which for a

193
00:14:06,740 --> 00:14:11,450
graceful close is true but here we're

194
00:14:09,650 --> 00:14:13,069
talking about really fatal error

195
00:14:11,450 --> 00:14:15,550
conditions that should never appear

196
00:14:13,070 --> 00:14:21,140
except in the development process and

197
00:14:15,550 --> 00:14:22,880
hence a long discussion went on the

198
00:14:21,140 --> 00:14:25,100
mailing list and a lot of off mailing

199
00:14:22,880 --> 00:14:27,170
list discussion too I just want to

200
00:14:25,100 --> 00:14:34,850
confirm there yes I didn't have the full

201
00:14:27,170 --> 00:14:37,699
context in that comment so as a result

202
00:14:34,850 --> 00:14:40,160
of this which was quite valuable I went

203
00:14:37,700 --> 00:14:41,810
back and did a pretty thorough review of

204
00:14:40,160 --> 00:14:45,380
all the places in the document where it

205
00:14:41,810 --> 00:14:49,010
talks about a reset and worked out what

206
00:14:45,380 --> 00:14:51,650
what the context is there was some

207
00:14:49,010 --> 00:14:55,130
discussion that instead of tearing down

208
00:14:51,650 --> 00:14:59,270
the connection the server could use the

209
00:14:55,130 --> 00:15:03,890
DSO retry delay operation to tell the

210
00:14:59,270 --> 00:15:07,490
client you are grossly buggy go and

211
00:15:03,890 --> 00:15:09,710
don't talk to me for half an hour there

212
00:15:07,490 --> 00:15:12,380
was some debate about whether we can

213
00:15:09,710 --> 00:15:13,400
expect a grossly buggy client the kind

214
00:15:12,380 --> 00:15:16,580
of client that connects you and

215
00:15:13,400 --> 00:15:17,270
immediately sends you a response may not

216
00:15:16,580 --> 00:15:21,110
pro

217
00:15:17,270 --> 00:15:23,449
the rest of the protocol as well so that

218
00:15:21,110 --> 00:15:26,510
is a question that we can't answer it's

219
00:15:23,450 --> 00:15:28,780
speculation about implementations that

220
00:15:26,510 --> 00:15:30,920
don't exist yet that are very buggy

221
00:15:28,780 --> 00:15:32,900
there was also lots of discussion about

222
00:15:30,920 --> 00:15:35,479
while the client can enforce the delay

223
00:15:32,900 --> 00:15:39,140
and that turns out not to be as easy as

224
00:15:35,480 --> 00:15:41,990
it sounds because you can't tell to

225
00:15:39,140 --> 00:15:44,330
subsists two successive connections

226
00:15:41,990 --> 00:15:45,800
could be from the same clients or they

227
00:15:44,330 --> 00:15:48,710
could be from different clients behind

228
00:15:45,800 --> 00:15:50,420
the same NAT gateway so all with ipv6

229
00:15:48,710 --> 00:15:53,030
they could be different privacy

230
00:15:50,420 --> 00:15:54,530
addresses on the same device or

231
00:15:53,030 --> 00:15:57,589
different devices the whole point of

232
00:15:54,530 --> 00:15:59,630
privacy addresses is to obscure the

233
00:15:57,590 --> 00:16:02,660
identity of the client so if the server

234
00:15:59,630 --> 00:16:06,610
can tell it's the same client twice in a

235
00:16:02,660 --> 00:16:06,610
sense privacy dresses aren't working so

236
00:16:07,480 --> 00:16:12,950
it's hard for the server to enforce that

237
00:16:09,710 --> 00:16:15,920
I also when I looked through I found

238
00:16:12,950 --> 00:16:18,410
that out of the 12 cases seven of them

239
00:16:15,920 --> 00:16:20,120
are the client tearing down the

240
00:16:18,410 --> 00:16:23,000
connection because the server did

241
00:16:20,120 --> 00:16:24,290
something bogus so clearly in the case

242
00:16:23,000 --> 00:16:26,750
of the client tearing down the

243
00:16:24,290 --> 00:16:28,599
connection it doesn't need to tell the

244
00:16:26,750 --> 00:16:30,620
server don't call me back because

245
00:16:28,600 --> 00:16:35,630
servers are not going to connect the

246
00:16:30,620 --> 00:16:40,970
clients so so the end result of this is

247
00:16:35,630 --> 00:16:42,620
for the seven bogus server messages

248
00:16:40,970 --> 00:16:44,960
where the client just gives up on the

249
00:16:42,620 --> 00:16:49,010
connection and either tries a different

250
00:16:44,960 --> 00:16:53,450
server or Waits those are now back to

251
00:16:49,010 --> 00:16:57,439
saying send a reset five of them are

252
00:16:53,450 --> 00:17:00,890
bogus things the client does three of

253
00:16:57,440 --> 00:17:04,490
those are the client sending responses

254
00:17:00,890 --> 00:17:06,379
to the server which is so bizarre that

255
00:17:04,490 --> 00:17:09,050
if you look in most specs if you look in

256
00:17:06,380 --> 00:17:10,940
RFC 1035 there is no language about what

257
00:17:09,050 --> 00:17:12,770
to do if a client connects you and then

258
00:17:10,940 --> 00:17:16,010
sends your response it's just so silly

259
00:17:12,770 --> 00:17:18,379
they don't mention it we do mention it

260
00:17:16,010 --> 00:17:20,359
and we say if a client does that you

261
00:17:18,380 --> 00:17:25,250
just give up on the client all right

262
00:17:20,359 --> 00:17:27,290
sending a fin then puts the server in

263
00:17:25,250 --> 00:17:30,580
close wait state while it's waiting for

264
00:17:27,290 --> 00:17:32,678
the fin to be acknowledged and if

265
00:17:30,580 --> 00:17:34,449
a client looping doing bad things that

266
00:17:32,679 --> 00:17:36,940
can end up to being quite a resource

267
00:17:34,450 --> 00:17:38,679
burden on the server which is exactly

268
00:17:36,940 --> 00:17:40,600
why web servers do not send a fin

269
00:17:38,679 --> 00:17:47,500
because they don't want to have their

270
00:17:40,600 --> 00:17:49,269
burden of maintaining that state so so

271
00:17:47,500 --> 00:17:51,250
the client sending a response is bogus

272
00:17:49,269 --> 00:17:53,140
the client sending a push message is

273
00:17:51,250 --> 00:17:54,669
equally bogus because that's a

274
00:17:53,140 --> 00:17:58,360
notification which should go the other

275
00:17:54,669 --> 00:18:02,470
way and the last one here is the only

276
00:17:58,360 --> 00:18:06,399
one that I think is somewhat debatable

277
00:18:02,470 --> 00:18:10,750
and that is if the client sends two

278
00:18:06,399 --> 00:18:13,120
identical subscribed requests and I want

279
00:18:10,750 --> 00:18:16,809
to explain the reasoning why we had the

280
00:18:13,120 --> 00:18:18,428
wording like that because as I said we

281
00:18:16,809 --> 00:18:23,080
don't have conformance testing in the

282
00:18:18,429 --> 00:18:25,539
IETF my fear is that some developer

283
00:18:23,080 --> 00:18:27,100
might get lazy they're busy they've got

284
00:18:25,539 --> 00:18:29,230
a deadline and they make an

285
00:18:27,100 --> 00:18:31,269
implementation that does not sit check

286
00:18:29,230 --> 00:18:33,669
for duplicates and you could easily

287
00:18:31,269 --> 00:18:35,769
imagine oh we'll fix that later that's

288
00:18:33,669 --> 00:18:39,490
not important right that'll be a version

289
00:18:35,769 --> 00:18:42,340
2 feature if we don't want that to

290
00:18:39,490 --> 00:18:44,740
happen we have to have some safeguard in

291
00:18:42,340 --> 00:18:46,389
place that will cause that developer to

292
00:18:44,740 --> 00:18:47,799
say hang on now I can't leave this for

293
00:18:46,389 --> 00:18:50,830
version 2 because my clients going to

294
00:18:47,799 --> 00:18:53,379
break so that is the reason for this is

295
00:18:50,830 --> 00:18:56,590
to be unforgiving about our requirements

296
00:18:53,380 --> 00:18:58,720
that clients should suppress duplicates

297
00:18:56,590 --> 00:19:00,668
we do not want to climb that ends up

298
00:18:58,720 --> 00:19:02,200
sending a hundred identical requests to

299
00:19:00,669 --> 00:19:04,149
a server because of a bug and if that

300
00:19:02,200 --> 00:19:08,320
happens the server should protect itself

301
00:19:04,149 --> 00:19:11,168
so that is the summary of the changes I

302
00:19:08,320 --> 00:19:13,149
would welcome any feedback I would also

303
00:19:11,169 --> 00:19:15,190
welcome complete silence because that

304
00:19:13,149 --> 00:19:18,760
would indicate there's no disagreement

305
00:19:15,190 --> 00:19:21,070
and of course we won't make any final

306
00:19:18,760 --> 00:19:27,580
decisions here in the room you can also

307
00:19:21,070 --> 00:19:29,320
comment on the mailing list ok

308
00:19:27,580 --> 00:19:31,300
well I'm really happy that that's

309
00:19:29,320 --> 00:19:33,790
uncontroversial which it should be at

310
00:19:31,300 --> 00:19:37,360
this stage in the process we will go

311
00:19:33,790 --> 00:19:40,510
ahead with publication of that I also

312
00:19:37,360 --> 00:19:43,300
saw on David's agenda it said hackathon

313
00:19:40,510 --> 00:19:45,040
implementation report I don't have a

314
00:19:43,300 --> 00:19:47,649
slide for that but I can verbally tell

315
00:19:45,040 --> 00:19:49,540
you Ted and Barbara and I had a

316
00:19:47,650 --> 00:19:51,850
productive couple of days sitting

317
00:19:49,540 --> 00:19:54,670
together working at the hackathon the

318
00:19:51,850 --> 00:19:57,459
code we're working on is on the

319
00:19:54,670 --> 00:19:58,750
hackathon github repository if you go to

320
00:19:57,460 --> 00:20:01,600
github org slash

321
00:19:58,750 --> 00:20:04,930
IETF - hackathon you'll find the MDS

322
00:20:01,600 --> 00:20:06,189
responder repository there Ted and I

323
00:20:04,930 --> 00:20:07,990
have been working on code we have

324
00:20:06,190 --> 00:20:10,180
running code that you can run on Mac or

325
00:20:07,990 --> 00:20:13,720
Linux we've also been building it for

326
00:20:10,180 --> 00:20:16,180
open wrt we have these neat little GL

327
00:20:13,720 --> 00:20:18,700
eye nets home gateways buy at the size

328
00:20:16,180 --> 00:20:20,830
of a pack of playing cards that run open

329
00:20:18,700 --> 00:20:25,930
wrt we have pre-built packages for that

330
00:20:20,830 --> 00:20:27,760
so you can try it out we did demos at

331
00:20:25,930 --> 00:20:30,700
the hackathon and we also went to the

332
00:20:27,760 --> 00:20:32,680
hack demo happy hour on Monday and had a

333
00:20:30,700 --> 00:20:36,700
table set up there showing it to people

334
00:20:32,680 --> 00:20:38,140
you can try this yourself at home I'm a

335
00:20:36,700 --> 00:20:39,610
firm believer in living on software

336
00:20:38,140 --> 00:20:42,130
that's how you find when it doesn't work

337
00:20:39,610 --> 00:20:45,790
I have now switched it using one of

338
00:20:42,130 --> 00:20:48,610
these GLI net routers as my default home

339
00:20:45,790 --> 00:20:50,260
gateway my Mac and my iPhone are set to

340
00:20:48,610 --> 00:20:51,879
connect to that by default whenever I

341
00:20:50,260 --> 00:20:54,390
come home so I'm normally on that

342
00:20:51,880 --> 00:20:58,720
network without thinking about it and

343
00:20:54,390 --> 00:21:00,820
that GLI net home gateway is running the

344
00:20:58,720 --> 00:21:02,440
discovery proxy it is not forwarding

345
00:21:00,820 --> 00:21:04,270
multicast it is in a normal

346
00:21:02,440 --> 00:21:05,950
configuration it's running DHCP it's

347
00:21:04,270 --> 00:21:08,410
running Knapp there's isolation between

348
00:21:05,950 --> 00:21:10,900
the land port and the wine port but with

349
00:21:08,410 --> 00:21:14,190
the discovery proxy all the stuff I do

350
00:21:10,900 --> 00:21:16,300
on my Mac and my phone printing scanning

351
00:21:14,190 --> 00:21:18,250
anything else that's using bonjour

352
00:21:16,300 --> 00:21:20,770
discovery it just works

353
00:21:18,250 --> 00:21:24,000
and anything that doesn't work I find it

354
00:21:20,770 --> 00:21:26,830
and then we work on fixing the bugs so

355
00:21:24,000 --> 00:21:29,350
in Ted I think we said that Friday

356
00:21:26,830 --> 00:21:32,639
morning we're going to start plugging

357
00:21:29,350 --> 00:21:35,860
things together and if anybody wants to

358
00:21:32,640 --> 00:21:37,570
build a load and bring a router and plug

359
00:21:35,860 --> 00:21:40,959
it together we're going to be meeting in

360
00:21:37,570 --> 00:21:41,470
the code lounge at 10:00 is that what we

361
00:21:40,960 --> 00:21:44,620
said

362
00:21:41,470 --> 00:21:46,720
thereabouts ish and try and plug things

363
00:21:44,620 --> 00:21:51,279
together so you're all welcome to help

364
00:21:46,720 --> 00:21:54,340
plug my question Stuart so if I

365
00:21:51,279 --> 00:21:57,820
understood what you just described that

366
00:21:54,340 --> 00:22:00,639
you have plugged this device wired LAN

367
00:21:57,820 --> 00:22:03,668
part into your existing home network

368
00:22:00,639 --> 00:22:08,408
creating two layers of router yes okay

369
00:22:03,669 --> 00:22:11,200
and on the wireless or maybe the wired

370
00:22:08,409 --> 00:22:14,110
port you now can see the devices which

371
00:22:11,200 --> 00:22:16,330
are on your on your original network

372
00:22:14,110 --> 00:22:19,090
what is nominally labeled the WAN port

373
00:22:16,330 --> 00:22:21,549
yes on the gel I net is plugged into my

374
00:22:19,090 --> 00:22:23,110
existing home network great just just

375
00:22:21,549 --> 00:22:24,730
wanted to clarify that you didn't I

376
00:22:23,110 --> 00:22:26,049
would say well what's the utility if

377
00:22:24,730 --> 00:22:28,600
you've just replaced your home router

378
00:22:26,049 --> 00:22:31,090
with one of these they're it's all on

379
00:22:28,600 --> 00:22:32,080
the land side so what does it mean I got

380
00:22:31,090 --> 00:22:34,269
you now

381
00:22:32,080 --> 00:22:36,039
thanks for the clarifying question yes

382
00:22:34,269 --> 00:22:40,299
that the utility is twofold

383
00:22:36,039 --> 00:22:42,158
worn for me and Ted working on this code

384
00:22:40,299 --> 00:22:45,850
the utility is testing it on a daily

385
00:22:42,159 --> 00:22:48,070
basis in terms of why anybody else would

386
00:22:45,850 --> 00:22:49,570
do this looking forward to the broader

387
00:22:48,070 --> 00:22:53,289
picture of why we're doing this work at

388
00:22:49,570 --> 00:22:57,279
all one benefit I get of that compared

389
00:22:53,289 --> 00:23:00,730
to how my network was is my client

390
00:22:57,279 --> 00:23:02,460
devices might my laptop and my phone are

391
00:23:00,730 --> 00:23:06,309
doing all their discovery with unicast

392
00:23:02,460 --> 00:23:09,519
so on the Wi-Fi link where multicast is

393
00:23:06,309 --> 00:23:10,960
slow and inefficient and unreliable

394
00:23:09,519 --> 00:23:12,759
because it's not acknowledged and very

395
00:23:10,960 --> 00:23:16,659
wasteful of shared spectrum because it

396
00:23:12,759 --> 00:23:18,610
sent so slowly I'm now not flooding lots

397
00:23:16,659 --> 00:23:21,549
of multicast traffic onto that Wi-Fi I'm

398
00:23:18,610 --> 00:23:23,709
keeping the Wi-Fi clean doing unicast to

399
00:23:21,549 --> 00:23:25,690
the Gateway and then on the Gigabit

400
00:23:23,710 --> 00:23:28,059
Ethernet that can handle tons of

401
00:23:25,690 --> 00:23:29,950
multicast no trouble I'm still using

402
00:23:28,059 --> 00:23:32,320
legacy multicast discovery for the

403
00:23:29,950 --> 00:23:34,299
devices on that Ethernet but the client

404
00:23:32,320 --> 00:23:36,070
devices on Wi-Fi are not being bombarded

405
00:23:34,299 --> 00:23:45,179
with lots of multicast traffic they

406
00:23:36,070 --> 00:23:45,178
don't care about all right thank

407
00:23:57,160 --> 00:24:03,110
hi I'm Ted lemon I've been working with

408
00:24:00,800 --> 00:24:08,030
Stewart on all this fun stuff so one

409
00:24:03,110 --> 00:24:11,389
thing about the plugfest on Friday is

410
00:24:08,030 --> 00:24:14,270
that if you want to come with your open

411
00:24:11,390 --> 00:24:16,250
wrt device you probably want to do a

412
00:24:14,270 --> 00:24:17,720
build before before then because it

413
00:24:16,250 --> 00:24:19,040
takes longer than two hours to do a

414
00:24:17,720 --> 00:24:22,100
build

415
00:24:19,040 --> 00:24:24,560
so there's code you'll there's a URL at

416
00:24:22,100 --> 00:24:27,250
the end of this slide slide deck that

417
00:24:24,560 --> 00:24:31,399
that points you to the repository and

418
00:24:27,250 --> 00:24:34,250
you would want to download our Fork of

419
00:24:31,400 --> 00:24:38,900
open wrt and build that rather than

420
00:24:34,250 --> 00:24:42,500
attempting to do something more

421
00:24:38,900 --> 00:24:44,210
adventurous at the plugfest and if you

422
00:24:42,500 --> 00:24:45,710
have any issues with that that's my

423
00:24:44,210 --> 00:24:51,170
email address and I'm happy to answer

424
00:24:45,710 --> 00:24:53,660
questions so I actually have well just

425
00:24:51,170 --> 00:24:56,480
on the introductory slide here briefly I

426
00:24:53,660 --> 00:24:57,650
have three things to talk about various

427
00:24:56,480 --> 00:24:59,660
different bits of work that we've been

428
00:24:57,650 --> 00:25:02,560
working on over the course of the last

429
00:24:59,660 --> 00:25:06,410
couple of years

430
00:25:02,560 --> 00:25:09,139
discovery proxy discovery relay and

431
00:25:06,410 --> 00:25:17,630
Service registration protocol so I'll

432
00:25:09,140 --> 00:25:20,720
talk about discovery proxy first so so

433
00:25:17,630 --> 00:25:22,640
the discovery proxy I assume most folks

434
00:25:20,720 --> 00:25:24,770
here know what a discovery proxy is but

435
00:25:22,640 --> 00:25:28,160
just to recap my discovery proxy is a

436
00:25:24,770 --> 00:25:31,160
device that receives queries using DNS

437
00:25:28,160 --> 00:25:35,380
on port 53 and asks questions to answer

438
00:25:31,160 --> 00:25:39,770
those queries by using multicast DNS and

439
00:25:35,380 --> 00:25:41,360
so this is an important goal for a

440
00:25:39,770 --> 00:25:44,780
variety of use cases the case that

441
00:25:41,360 --> 00:25:47,060
dragged me into it was home net and so

442
00:25:44,780 --> 00:25:50,170
we've implemented a nice fully featured

443
00:25:47,060 --> 00:25:54,200
en SSD discovery proxy it actually uses

444
00:25:50,170 --> 00:25:56,340
mdns responder to do both dns lookups

445
00:25:54,200 --> 00:25:59,789
and M DNS lookups

446
00:25:56,340 --> 00:26:01,830
and then so when you send it a question

447
00:25:59,789 --> 00:26:03,090
on port 53 it goes out and does whatever

448
00:26:01,830 --> 00:26:05,070
it needs to do to come up with the

449
00:26:03,090 --> 00:26:10,230
answer using mdns responder which is

450
00:26:05,070 --> 00:26:17,610
Apple's open source DNS all-singing

451
00:26:10,230 --> 00:26:20,340
all-dancing stub resolver and so we've

452
00:26:17,610 --> 00:26:22,620
implemented listening on port 53 for DNS

453
00:26:20,340 --> 00:26:25,709
queries listening on port 853 for DNS

454
00:26:22,620 --> 00:26:27,959
push connections so it's a it's a full

455
00:26:25,710 --> 00:26:31,679
working implementation of DNS push over

456
00:26:27,960 --> 00:26:36,270
TLS and it also does something that I

457
00:26:31,679 --> 00:26:37,950
wanted for for home net and it doesn't

458
00:26:36,270 --> 00:26:39,539
accidentally like I didn't actually plan

459
00:26:37,950 --> 00:26:40,950
it out this way I just plan on writing a

460
00:26:39,539 --> 00:26:43,320
discovery proxy and then figuring out a

461
00:26:40,950 --> 00:26:45,149
way to wedge a DNS server in alongside

462
00:26:43,320 --> 00:26:47,428
it but it turns out that since F DNS

463
00:26:45,149 --> 00:26:51,120
responder acts as a stub resolver for

464
00:26:47,429 --> 00:26:52,980
DNS and mdns that I could just use that

465
00:26:51,120 --> 00:26:56,250
for both authoritative service and

466
00:26:52,980 --> 00:27:01,080
recursive service and so this basically

467
00:26:56,250 --> 00:27:04,260
is a swap and replacement for for DNS

468
00:27:01,080 --> 00:27:08,460
mask except that it now does proxy as

469
00:27:04,260 --> 00:27:11,250
well so it's pretty sweet and you can

470
00:27:08,460 --> 00:27:14,610
try it out anytime you want runs on Mac

471
00:27:11,250 --> 00:27:18,649
OS it probably run on BSD but I haven't

472
00:27:14,610 --> 00:27:21,629
tried it it definitely runs on Linux and

473
00:27:18,649 --> 00:27:22,408
as far as things that can do queries

474
00:27:21,630 --> 00:27:25,940
against it

475
00:27:22,409 --> 00:27:31,200
pretty much anything out there that does

476
00:27:25,940 --> 00:27:36,659
DNS service discovery can use it however

477
00:27:31,200 --> 00:27:40,260
we also have implementation on various

478
00:27:36,659 --> 00:27:42,929
Apple new Apple devices that will do DNS

479
00:27:40,260 --> 00:27:44,340
push so you get not only do you get just

480
00:27:42,929 --> 00:27:45,840
regular old service discovery but you

481
00:27:44,340 --> 00:27:47,189
also notice when new things show up

482
00:27:45,840 --> 00:27:52,678
immediately rather than having to wait

483
00:27:47,190 --> 00:27:54,960
15 minutes for for a retry and so and

484
00:27:52,679 --> 00:27:57,690
the code for that is in the open source

485
00:27:54,960 --> 00:28:02,190
mdns responder distribution that's on

486
00:27:57,690 --> 00:28:05,820
the the github however the support for

487
00:28:02,190 --> 00:28:08,730
dns push needs a little bit more TLS

488
00:28:05,820 --> 00:28:12,820
glue to work on

489
00:28:08,730 --> 00:28:14,950
sort of the posix side of things that

490
00:28:12,820 --> 00:28:18,220
stuff's all working on Mac OS X but it

491
00:28:14,950 --> 00:28:21,550
uses the network framework on Mac OS

492
00:28:18,220 --> 00:28:23,350
rather than using sockets and so that

493
00:28:21,550 --> 00:28:27,250
there's a little bit of additional work

494
00:28:23,350 --> 00:28:28,510
left to do there so before I go on to

495
00:28:27,250 --> 00:28:34,570
the next thing does anybody have any

496
00:28:28,510 --> 00:28:37,750
comments or questions about this sounds

497
00:28:34,570 --> 00:28:39,159
like No okay so the next thing is

498
00:28:37,750 --> 00:28:40,660
discovery really this is actually kind

499
00:28:39,160 --> 00:28:43,180
of old news but I just wanted to mention

500
00:28:40,660 --> 00:28:47,130
it for completeness we did a discovery

501
00:28:43,180 --> 00:28:52,060
relay implementation kind of last year

502
00:28:47,130 --> 00:28:53,950
and the purpose of the discovery relay

503
00:28:52,060 --> 00:28:57,010
is basically to do something very much

504
00:28:53,950 --> 00:28:58,720
like what DHCP relay does to provide a

505
00:28:57,010 --> 00:29:00,430
really stupid thing that you don't have

506
00:28:58,720 --> 00:29:02,830
to update all the time when you add

507
00:29:00,430 --> 00:29:08,040
features that consider in your router or

508
00:29:02,830 --> 00:29:11,470
whatever and a full service M DNS

509
00:29:08,040 --> 00:29:13,420
resolver can contact it and do em DNS

510
00:29:11,470 --> 00:29:17,590
through it too a link that it's not

511
00:29:13,420 --> 00:29:19,120
connected to so some folks have

512
00:29:17,590 --> 00:29:20,919
suggested that you could do this with a

513
00:29:19,120 --> 00:29:22,540
with a layer 2 tunneling program or

514
00:29:20,920 --> 00:29:24,220
protocol or something like that and

515
00:29:22,540 --> 00:29:25,480
that's very true and if you have that

516
00:29:24,220 --> 00:29:27,700
available to you you really don't need

517
00:29:25,480 --> 00:29:29,110
this but it does seem like a useful

518
00:29:27,700 --> 00:29:31,660
feature for a fair number of use cases

519
00:29:29,110 --> 00:29:33,850
it'll it takes advantage of IP routing

520
00:29:31,660 --> 00:29:39,700
and to end and it doesn't require any

521
00:29:33,850 --> 00:29:42,639
special filtering to avoid having it

522
00:29:39,700 --> 00:29:46,120
open up a bridge to services that you

523
00:29:42,640 --> 00:29:48,700
don't want to bridge so so it seems like

524
00:29:46,120 --> 00:29:49,929
a valuable thing it's we haven't really

525
00:29:48,700 --> 00:29:54,760
talked about in the working group for a

526
00:29:49,930 --> 00:29:57,340
while in any detail there does seem to

527
00:29:54,760 --> 00:29:59,580
be some interest from some router

528
00:29:57,340 --> 00:30:01,570
vendors I don't know how serious it is

529
00:29:59,580 --> 00:30:05,439
it would be nice if we get to

530
00:30:01,570 --> 00:30:06,610
publication but it really depends on

531
00:30:05,440 --> 00:30:08,290
whether the working group is actually

532
00:30:06,610 --> 00:30:11,979
interested in reviewing the document if

533
00:30:08,290 --> 00:30:17,050
not probably try sending it through the

534
00:30:11,980 --> 00:30:19,330
ISE so I'm not really inclined to ask

535
00:30:17,050 --> 00:30:21,310
the group here to tell me whether they

536
00:30:19,330 --> 00:30:22,810
love this thing or not because

537
00:30:21,310 --> 00:30:24,159
you know you may or may not have read

538
00:30:22,810 --> 00:30:25,389
it's probably makes the most sense to

539
00:30:24,160 --> 00:30:27,610
just talk about this on the mailing list

540
00:30:25,390 --> 00:30:28,870
but I'm bringing it up here so that so

541
00:30:27,610 --> 00:30:29,709
that when you see the message on the

542
00:30:28,870 --> 00:30:34,570
mailing list you'll know what the

543
00:30:29,710 --> 00:30:36,640
context is so the implementation as I

544
00:30:34,570 --> 00:30:40,570
said it's we did it about a year ago

545
00:30:36,640 --> 00:30:43,570
it's on the hackathon github repo but

546
00:30:40,570 --> 00:30:45,520
it's on an outdated branch I'm in the

547
00:30:43,570 --> 00:30:50,610
process of making of modernizing it to

548
00:30:45,520 --> 00:30:50,610
use the new code that I've written and

549
00:30:50,730 --> 00:30:55,180
my hope is that that code will be

550
00:30:53,320 --> 00:30:58,720
available for you to try out if you want

551
00:30:55,180 --> 00:31:10,990
to before Singapore comments or

552
00:30:58,720 --> 00:31:13,330
questions my name is Joe Cheshire I know

553
00:31:10,990 --> 00:31:17,020
you said you're not asking for comments

554
00:31:13,330 --> 00:31:19,720
on this but I feel I want to share my

555
00:31:17,020 --> 00:31:21,580
opinion with everybody and as co-author

556
00:31:19,720 --> 00:31:24,190
on this clearly I'm biased but I think

557
00:31:21,580 --> 00:31:27,490
the work we've done with discovery proxy

558
00:31:24,190 --> 00:31:30,330
is very viable to put in open wrt for

559
00:31:27,490 --> 00:31:34,000
home gateways for the enterprise market

560
00:31:30,330 --> 00:31:36,520
convincing enterprise router makers to

561
00:31:34,000 --> 00:31:38,530
put this in is a much harder sell and

562
00:31:36,520 --> 00:31:40,389
also probably not a good idea

563
00:31:38,530 --> 00:31:43,120
because once it's in it won't be updated

564
00:31:40,390 --> 00:31:47,110
until that router goes in the dumpster

565
00:31:43,120 --> 00:31:48,580
ten years in the future so and for those

566
00:31:47,110 --> 00:31:51,520
who don't know this was this was Ted's

567
00:31:48,580 --> 00:31:52,960
idea and I co-authored document with him

568
00:31:51,520 --> 00:31:55,210
but it was Ted's idea and it's kind of

569
00:31:52,960 --> 00:31:56,560
inspired by the bootp relay which has

570
00:31:55,210 --> 00:31:59,530
been enormously successful for

571
00:31:56,560 --> 00:32:03,450
enterprise deployments of DHCP I think

572
00:31:59,530 --> 00:32:05,740
this small simple focused piece of code

573
00:32:03,450 --> 00:32:07,450
we have a much better chance of

574
00:32:05,740 --> 00:32:11,050
evangelizing this to the enterprise

575
00:32:07,450 --> 00:32:12,790
makers who who we want to reach way back

576
00:32:11,050 --> 00:32:14,260
when this group was chartered that was

577
00:32:12,790 --> 00:32:19,440
one of the goals was to improve

578
00:32:14,260 --> 00:32:21,220
discovery and enterprise networks so I

579
00:32:19,440 --> 00:32:23,950
definitely think we should push ahead

580
00:32:21,220 --> 00:32:27,250
this work is basically done we just need

581
00:32:23,950 --> 00:32:30,520
to adopt the draft have some people

582
00:32:27,250 --> 00:32:32,950
review it last fall or as you say go the

583
00:32:30,520 --> 00:32:34,899
independent route I would prefer to do

584
00:32:32,950 --> 00:32:38,289
it in the working group

585
00:32:34,899 --> 00:32:40,029
Tom made the comments can't you do this

586
00:32:38,289 --> 00:32:42,820
with VLANs and I think we should add

587
00:32:40,029 --> 00:32:44,710
some text about that in the documents if

588
00:32:42,820 --> 00:32:46,769
you already have a setup where you have

589
00:32:44,710 --> 00:32:49,179
VLANs configured and trunk ports and

590
00:32:46,769 --> 00:32:52,330
maybe some enterprises and if you run

591
00:32:49,179 --> 00:32:54,789
their DHCP by having VLAN trunk ports

592
00:32:52,330 --> 00:32:56,889
instead of poopy trail agents I think a

593
00:32:54,789 --> 00:32:58,990
paragraph or two discussing the pros and

594
00:32:56,889 --> 00:33:02,350
cons of when you might choose one versus

595
00:32:58,990 --> 00:33:03,610
the other that's a useful addition and

596
00:33:02,350 --> 00:33:05,408
then I think we're ready to publish

597
00:33:03,610 --> 00:33:07,269
because we have fairly good shared

598
00:33:05,409 --> 00:33:08,440
documents and we have fairly well tested

599
00:33:07,269 --> 00:33:11,440
code yep

600
00:33:08,440 --> 00:33:13,629
so to comment on process here

601
00:33:11,440 --> 00:33:16,389
this is adopted as a working group

602
00:33:13,629 --> 00:33:18,580
document we had a working group last

603
00:33:16,389 --> 00:33:22,740
call ready and it failed due to lack of

604
00:33:18,580 --> 00:33:25,840
interest so the issue here is that

605
00:33:22,740 --> 00:33:27,669
pretty much no one apart from the

606
00:33:25,840 --> 00:33:30,580
authors expressed interest in this work

607
00:33:27,669 --> 00:33:32,919
with I think Tom had some comments but

608
00:33:30,580 --> 00:33:36,279
it was very sparse and what we're asking

609
00:33:32,919 --> 00:33:38,200
us at chairs is for people to comment

610
00:33:36,279 --> 00:33:39,909
like oh especially like this is aimed at

611
00:33:38,200 --> 00:33:42,009
the enterprise market is there anyone

612
00:33:39,909 --> 00:33:44,169
making these devices that thinks this is

613
00:33:42,009 --> 00:33:46,360
useful but you don't have to commit to I

614
00:33:44,169 --> 00:33:47,529
know I want to deploy this but just

615
00:33:46,360 --> 00:33:49,899
saying that this is useful would go a

616
00:33:47,529 --> 00:33:51,879
long way yeah that that's where we are I

617
00:33:49,899 --> 00:33:53,949
personally and not as chair believe that

618
00:33:51,879 --> 00:33:56,498
this is a good document but if we want

619
00:33:53,950 --> 00:33:58,389
to forward it as a working group item

620
00:33:56,499 --> 00:34:00,730
we'll need more people to speak in favor

621
00:33:58,389 --> 00:34:03,129
of this so you can either do this now at

622
00:34:00,730 --> 00:34:04,990
the microphone or on the list whichever

623
00:34:03,129 --> 00:34:07,959
you prefer

624
00:34:04,990 --> 00:34:09,668
Tim Rotenberg just a quick comment which

625
00:34:07,960 --> 00:34:14,319
came to my mind when Stewart

626
00:34:09,668 --> 00:34:18,308
taught at the mic so if this document is

627
00:34:14,319 --> 00:34:21,639
intended for enterprise vendors then

628
00:34:18,309 --> 00:34:24,129
those routers or whatever it's supposed

629
00:34:21,639 --> 00:34:26,819
to run probably have the ability to do

630
00:34:24,129 --> 00:34:30,069
violence or something like this so

631
00:34:26,819 --> 00:34:31,960
actually I think we should yeah it would

632
00:34:30,069 --> 00:34:34,989
be interesting to hear if there are good

633
00:34:31,960 --> 00:34:37,359
use cases which are not covered by this

634
00:34:34,989 --> 00:34:39,848
because so I don't have a particular

635
00:34:37,359 --> 00:34:42,699
opinion about if that's a good or a bad

636
00:34:39,849 --> 00:34:45,220
idea because I don't know this problem

637
00:34:42,699 --> 00:34:46,808
space well enough but I think it's

638
00:34:45,219 --> 00:34:47,859
something to consider if we are not

639
00:34:46,809 --> 00:34:50,859
aiming for

640
00:34:47,859 --> 00:34:52,989
like customer premise equipment but for

641
00:34:50,859 --> 00:34:54,909
enterprise grade hardware

642
00:34:52,989 --> 00:34:57,609
something like this that the question is

643
00:34:54,909 --> 00:35:04,150
can it be solved there in other ways

644
00:34:57,609 --> 00:35:05,739
already Michael Richardson um I'm sorry

645
00:35:04,150 --> 00:35:10,509
that the working of last call was so

646
00:35:05,739 --> 00:35:12,249
silent and there's issues probably the

647
00:35:10,509 --> 00:35:14,140
the people that we need the enterprise

648
00:35:12,249 --> 00:35:16,839
reviewers that we need are just not in

649
00:35:14,140 --> 00:35:19,509
this working group but writing email to

650
00:35:16,839 --> 00:35:22,089
some people that I think may care um

651
00:35:19,509 --> 00:35:24,999
I don't actually think the VLAN thing is

652
00:35:22,089 --> 00:35:29,249
terribly useful for organizations that

653
00:35:24,999 --> 00:35:32,379
are running many campuses in many places

654
00:35:29,249 --> 00:35:34,209
there in Canada today you may know that

655
00:35:32,380 --> 00:35:37,900
there are significant issues getting

656
00:35:34,210 --> 00:35:42,039
VLANs out to places and multicast

657
00:35:37,900 --> 00:35:44,319
traffic is significantly unwanted it's

658
00:35:42,039 --> 00:35:46,599
probably yes they probably have VLANs

659
00:35:44,319 --> 00:35:48,670
yes they've probably filtered multicast

660
00:35:46,599 --> 00:35:50,739
out that's exactly what they don't want

661
00:35:48,670 --> 00:35:53,739
on their satellite links to Northwest

662
00:35:50,739 --> 00:35:56,799
Territories right okay so this would be

663
00:35:53,739 --> 00:36:01,180
quite attractive for a number of things

664
00:35:56,799 --> 00:36:05,079
where I think service discovery is

665
00:36:01,180 --> 00:36:07,049
simply not happening period and so it

666
00:36:05,079 --> 00:36:10,119
may be a decade another decade before

667
00:36:07,049 --> 00:36:11,410
you know enterprises that adopted enough

668
00:36:10,119 --> 00:36:13,359
such that everyone says oh we actually

669
00:36:11,410 --> 00:36:16,118
can do service discovery in these

670
00:36:13,359 --> 00:36:22,390
distributed enterprises well that's what

671
00:36:16,119 --> 00:36:25,450
we were charter to facilitate so yeah so

672
00:36:22,390 --> 00:36:27,578
let let let's try to to socialize the

673
00:36:25,450 --> 00:36:30,669
document a little bit more you know

674
00:36:27,579 --> 00:36:34,779
outside of the I'm gonna say the home

675
00:36:30,670 --> 00:36:36,609
net is she you know provenance of some

676
00:36:34,779 --> 00:36:40,150
of this working group and back to that

677
00:36:36,609 --> 00:36:42,609
space and perhaps we can get some more

678
00:36:40,150 --> 00:36:45,789
some which working groups would you

679
00:36:42,609 --> 00:36:46,509
suggest well that's an interesting

680
00:36:45,789 --> 00:36:51,579
question

681
00:36:46,509 --> 00:36:53,799
right so EMU might be very a good place

682
00:36:51,579 --> 00:36:56,799
to reach some people because it's the

683
00:36:53,799 --> 00:36:59,349
same problem of you know with 1x going

684
00:36:56,799 --> 00:37:00,690
over EAP to do authentic authenticated

685
00:36:59,349 --> 00:37:04,130
join of the network

686
00:37:00,690 --> 00:37:07,920
okay now that you've joined you know

687
00:37:04,130 --> 00:37:10,319
what would you like and that that whole

688
00:37:07,920 --> 00:37:12,960
model is the same model right that you

689
00:37:10,319 --> 00:37:16,859
you you you kick back we don't we don't

690
00:37:12,960 --> 00:37:20,089
punt EAP messages back to the controller

691
00:37:16,859 --> 00:37:24,000
with a VLAN right we do it over radius

692
00:37:20,089 --> 00:37:26,369
same same same architectural things so

693
00:37:24,000 --> 00:37:28,020
that that may space and maybe just we

694
00:37:26,369 --> 00:37:29,700
don't as a group have those right and

695
00:37:28,020 --> 00:37:30,780
enterprise people but we do have some

696
00:37:29,700 --> 00:37:32,069
people that just you know we always know

697
00:37:30,780 --> 00:37:33,690
this problem the ITF we don't really

698
00:37:32,069 --> 00:37:36,960
have enough enterprise representation

699
00:37:33,690 --> 00:37:41,010
and enterprise operators or Christina

700
00:37:36,960 --> 00:37:43,109
unicorns right so so Ted are you willing

701
00:37:41,010 --> 00:37:46,020
to send some additional emails out to

702
00:37:43,109 --> 00:37:49,770
additional working groups to tell them

703
00:37:46,020 --> 00:37:52,680
about this work or well I think so what

704
00:37:49,770 --> 00:37:54,059
I would suggest is a way forward is get

705
00:37:52,680 --> 00:37:55,288
to the point where I think that

706
00:37:54,059 --> 00:37:58,170
everything that I need to do the

707
00:37:55,289 --> 00:38:01,140
document is done which may be a very

708
00:37:58,170 --> 00:38:03,569
short step I haven't actually reviewed

709
00:38:01,140 --> 00:38:06,299
it in a while just you know due

710
00:38:03,569 --> 00:38:08,520
diligence and then once that's done then

711
00:38:06,299 --> 00:38:10,170
yeah try to get I know that there are

712
00:38:08,520 --> 00:38:12,420
some folks from various places that

713
00:38:10,170 --> 00:38:16,289
would probably say yes to this but we

714
00:38:12,420 --> 00:38:18,630
need to actually get them get them roped

715
00:38:16,289 --> 00:38:20,279
in and so yeah oh but we should we

716
00:38:18,630 --> 00:38:21,809
should probably start a last call and

717
00:38:20,279 --> 00:38:23,099
and then I should do the roping and

718
00:38:21,809 --> 00:38:24,599
because otherwise they're gonna come and

719
00:38:23,099 --> 00:38:26,130
comment and they won't be commenting on

720
00:38:24,599 --> 00:38:27,960
the last call and then later on when we

721
00:38:26,130 --> 00:38:29,490
do the last call because this did get

722
00:38:27,960 --> 00:38:34,349
actually quite a bit of comment at one

723
00:38:29,490 --> 00:38:39,149
time but so this I mean and speaking

724
00:38:34,349 --> 00:38:40,500
press chair and procedurally it didn't

725
00:38:39,150 --> 00:38:42,480
feel like there was a whole lot of

726
00:38:40,500 --> 00:38:44,910
comments I'll go back and look at the

727
00:38:42,480 --> 00:38:46,200
list but if you get people to comment

728
00:38:44,910 --> 00:38:47,759
and say that they're interested in this

729
00:38:46,200 --> 00:38:49,710
work it doesn't have to be in last call

730
00:38:47,760 --> 00:38:52,260
we can consider those as last call or as

731
00:38:49,710 --> 00:38:54,779
statements of interest interest doesn't

732
00:38:52,260 --> 00:38:57,720
need to happen during last call okay

733
00:38:54,779 --> 00:39:00,260
yeah young Commissar did did send us a

734
00:38:57,720 --> 00:39:02,910
review about six or eight months ago I

735
00:39:00,260 --> 00:39:04,890
will take another look so maybe once you

736
00:39:02,910 --> 00:39:07,230
have done your next round of changes

737
00:39:04,890 --> 00:39:09,328
reach out to all those folks and reach

738
00:39:07,230 --> 00:39:10,950
out to us and yet we can start another

739
00:39:09,329 --> 00:39:13,260
last call that's fine but if you get

740
00:39:10,950 --> 00:39:13,830
people even outside of last call to send

741
00:39:13,260 --> 00:39:15,510
those state

742
00:39:13,830 --> 00:39:20,069
like i've interest to the list those

743
00:39:15,510 --> 00:39:22,890
will be very valuable okay I think it'll

744
00:39:20,070 --> 00:39:25,050
be fine to start another wgl see all

745
00:39:22,890 --> 00:39:27,420
right so will will will update the

746
00:39:25,050 --> 00:39:29,640
document and then send a request sounds

747
00:39:27,420 --> 00:39:33,060
good thank you Thanks

748
00:39:29,640 --> 00:39:35,430
yeah and I'm just gonna echo the

749
00:39:33,060 --> 00:39:37,110
requests for the people here it would be

750
00:39:35,430 --> 00:39:40,950
helpful to review it I just had to look

751
00:39:37,110 --> 00:39:43,440
it's only 29 pages so probably no more

752
00:39:40,950 --> 00:39:46,980
than an hour of reading and if people

753
00:39:43,440 --> 00:39:49,470
have contacts at enterprise equipment

754
00:39:46,980 --> 00:39:51,090
vendors who are not involved with this

755
00:39:49,470 --> 00:39:54,299
working group which is understandable

756
00:39:51,090 --> 00:39:56,130
that a lot of them they wouldn't think

757
00:39:54,300 --> 00:39:57,990
they have an interest here if you can

758
00:39:56,130 --> 00:40:01,400
send us those contacts we can reach out

759
00:39:57,990 --> 00:40:01,399
to them individually thank you

760
00:40:01,850 --> 00:40:08,069
composer Terry the reason I brought up

761
00:40:04,320 --> 00:40:10,170
VLANs was because I know from experience

762
00:40:08,070 --> 00:40:12,630
that people our operators have taken a

763
00:40:10,170 --> 00:40:16,470
long time to troubleshoot to learn how

764
00:40:12,630 --> 00:40:17,700
to troubleshoot bootp relays and this is

765
00:40:16,470 --> 00:40:20,520
another thing they have to learn how to

766
00:40:17,700 --> 00:40:22,200
troubleshoot and so it's not the same as

767
00:40:20,520 --> 00:40:23,990
troubleshooting the gup-e relay it's a

768
00:40:22,200 --> 00:40:26,490
different thing it's a different problem

769
00:40:23,990 --> 00:40:30,299
but VLANs is something they do already

770
00:40:26,490 --> 00:40:32,459
know how to troubleshoot and there's two

771
00:40:30,300 --> 00:40:36,600
other ways I can also think of solving

772
00:40:32,460 --> 00:40:40,740
this and that's by GMP proxies I'm sorry

773
00:40:36,600 --> 00:40:43,890
like I do a proxy over a tunnel of a

774
00:40:40,740 --> 00:40:46,859
regular tunnel and AMT automatic

775
00:40:43,890 --> 00:40:50,100
multicast tunneling and but these are a

776
00:40:46,860 --> 00:40:55,830
link-local multicast AMT if there's a

777
00:40:50,100 --> 00:40:59,790
there's RFC on it which is a way to join

778
00:40:55,830 --> 00:41:04,140
a multicast group over a unicast link to

779
00:40:59,790 --> 00:41:06,690
and then when multicast islands together

780
00:41:04,140 --> 00:41:08,339
and and that will work for for

781
00:41:06,690 --> 00:41:13,410
link-local multicast

782
00:41:08,340 --> 00:41:17,900
yes so but anyway that doesn't solve the

783
00:41:13,410 --> 00:41:21,210
problem that Michael brought up about

784
00:41:17,900 --> 00:41:22,530
sending multicast more it'd be more

785
00:41:21,210 --> 00:41:24,870
multi guess than you want you would have

786
00:41:22,530 --> 00:41:26,100
to filter if there is multicast you one

787
00:41:24,870 --> 00:41:27,600
didn't want

788
00:41:26,100 --> 00:41:29,279
yeah I mean it's all just packets when

789
00:41:27,600 --> 00:41:33,089
it's going over the transit link anyway

790
00:41:29,280 --> 00:41:34,140
but but the problem is you know you you

791
00:41:33,090 --> 00:41:35,550
want to make sure that you're not

792
00:41:34,140 --> 00:41:38,190
sending anything more than you need to

793
00:41:35,550 --> 00:41:40,350
and also I mean honestly setting up a

794
00:41:38,190 --> 00:41:42,960
TCP connection to some device over there

795
00:41:40,350 --> 00:41:45,540
seems like it's a lighter weight problem

796
00:41:42,960 --> 00:41:47,190
than configuring a special tunnel and

797
00:41:45,540 --> 00:41:50,100
setting all of the filtering correctly

798
00:41:47,190 --> 00:41:51,630
and getting you know so so you know it

799
00:41:50,100 --> 00:41:52,950
may be that the right answer to this is

800
00:41:51,630 --> 00:41:54,240
that we just have a document that says

801
00:41:52,950 --> 00:41:56,040
how you set up the tunnel and get

802
00:41:54,240 --> 00:41:57,390
filtering right but then you have a

803
00:41:56,040 --> 00:42:00,150
point solution that only works on

804
00:41:57,390 --> 00:42:03,379
certain kinds of devices so like the

805
00:42:00,150 --> 00:42:05,490
device has to support IGMP tunneling so

806
00:42:03,380 --> 00:42:07,260
there's multiple ways to solve this

807
00:42:05,490 --> 00:42:09,959
problem and you pop your document should

808
00:42:07,260 --> 00:42:13,770
probably compare them sure I think

809
00:42:09,960 --> 00:42:14,820
that's good okay so by the way I just

810
00:42:13,770 --> 00:42:16,650
wanted to point out in case there's

811
00:42:14,820 --> 00:42:18,210
confusion remember that discovery relay

812
00:42:16,650 --> 00:42:20,070
and discovery proxy are two different

813
00:42:18,210 --> 00:42:24,450
things discovery proxy is the smart

814
00:42:20,070 --> 00:42:26,010
thing that actually like does multicast

815
00:42:24,450 --> 00:42:27,569
resolution on the local wire and

816
00:42:26,010 --> 00:42:29,850
discovery really is the dumb thing that

817
00:42:27,570 --> 00:42:31,920
just relays the packets and let's there

818
00:42:29,850 --> 00:42:33,900
lets the aggregation and resolution

819
00:42:31,920 --> 00:42:35,220
stuff happen on a smart server and

820
00:42:33,900 --> 00:42:40,920
you're in your machine room or wherever

821
00:42:35,220 --> 00:42:42,330
so all right so moving right along so

822
00:42:40,920 --> 00:42:44,400
the other document that I've been

823
00:42:42,330 --> 00:42:49,080
working on is the Service registration

824
00:42:44,400 --> 00:42:51,540
protocol document and Tom very kindly

825
00:42:49,080 --> 00:42:55,500
did a review of the SRP document a

826
00:42:51,540 --> 00:42:57,060
couple months ago at this point and I

827
00:42:55,500 --> 00:42:58,890
was right in the middle of hacking on

828
00:42:57,060 --> 00:43:01,230
something and there were deadlines and

829
00:42:58,890 --> 00:43:02,490
life got away from me and so I didn't

830
00:43:01,230 --> 00:43:06,810
actually look at it for a while after

831
00:43:02,490 --> 00:43:08,279
that but I've done some updates and

832
00:43:06,810 --> 00:43:10,470
there are some questions that I think it

833
00:43:08,280 --> 00:43:11,820
would be worth discussing so some of the

834
00:43:10,470 --> 00:43:13,529
updates are really stupid things like

835
00:43:11,820 --> 00:43:16,920
the document was referring to services

836
00:43:13,530 --> 00:43:18,600
DARPA and it seemed like the when we

837
00:43:16,920 --> 00:43:20,580
were doing the implementation I actually

838
00:43:18,600 --> 00:43:22,770
I had forgotten that it was services

839
00:43:20,580 --> 00:43:25,020
DARPA and so I typed service tower and

840
00:43:22,770 --> 00:43:26,910
it just seemed to make more sense and so

841
00:43:25,020 --> 00:43:28,590
the document actually now says service

842
00:43:26,910 --> 00:43:31,830
DARPA instead of services not art but

843
00:43:28,590 --> 00:43:33,330
because it's one less letter and I don't

844
00:43:31,830 --> 00:43:35,190
see any real reason why it needs to be

845
00:43:33,330 --> 00:43:38,440
service as DARPA but you know if anybody

846
00:43:35,190 --> 00:43:41,109
objects to that please let me know

847
00:43:38,440 --> 00:43:45,250
and then the document now adds support

848
00:43:41,109 --> 00:43:49,440
for TLS so if you want to do SRP updates

849
00:43:45,250 --> 00:43:59,200
over TLS you can and there's a

850
00:43:49,440 --> 00:44:00,640
registration for DNS SRP TLS TCP dot you

851
00:43:59,200 --> 00:44:04,359
know DNS name

852
00:44:00,640 --> 00:44:05,740
so for SRV records so so that's already

853
00:44:04,359 --> 00:44:07,980
been added to the document there are

854
00:44:05,740 --> 00:44:10,868
further updates needed to the document

855
00:44:07,980 --> 00:44:13,990
so I'm gonna just go over tongs comments

856
00:44:10,869 --> 00:44:15,789
a bit Tom so the document was written by

857
00:44:13,990 --> 00:44:17,049
me as I was doing the implementation so

858
00:44:15,789 --> 00:44:18,880
of course I had a lot of state in my

859
00:44:17,049 --> 00:44:20,230
head and it all made sense to me

860
00:44:18,880 --> 00:44:22,089
Tom read the document he's like well

861
00:44:20,230 --> 00:44:24,160
this doesn't make any sense at all and

862
00:44:22,089 --> 00:44:27,460
he had a really good point which is that

863
00:44:24,160 --> 00:44:30,299
I use the term update well Stuart and I

864
00:44:27,460 --> 00:44:32,260
I think Stuart and I both both worked on

865
00:44:30,299 --> 00:44:33,160
choosing the terminology for this

866
00:44:32,260 --> 00:44:35,500
section and neither one of us really

867
00:44:33,160 --> 00:44:40,930
noticed that the update language was a

868
00:44:35,500 --> 00:44:43,630
little bit confusing so so I'm thinking

869
00:44:40,930 --> 00:44:45,879
that we need to change the name of the

870
00:44:43,630 --> 00:44:47,289
things that we're calling updates right

871
00:44:45,880 --> 00:44:49,900
now we have two things that are called

872
00:44:47,289 --> 00:44:51,369
updates the actual SRP update message

873
00:44:49,900 --> 00:44:53,950
which is the collection of all the

874
00:44:51,369 --> 00:45:02,369
things that are to be updated and also

875
00:44:53,950 --> 00:45:08,038
the individual DNS update are ours and

876
00:45:02,369 --> 00:45:10,720
so what I'm proposing is that we either

877
00:45:08,039 --> 00:45:12,670
make sure that we always say SRP update

878
00:45:10,720 --> 00:45:14,950
when we mean the whole message and we

879
00:45:12,670 --> 00:45:18,609
always say our update what we mean the

880
00:45:14,950 --> 00:45:21,160
RR update or we just call it an our ad

881
00:45:18,609 --> 00:45:24,598
instead of an RR update I don't really

882
00:45:21,160 --> 00:45:24,598
have a strong feeling about that

883
00:45:24,839 --> 00:45:28,869
sometimes the problem with calling it an

884
00:45:27,460 --> 00:45:30,880
ad is that it's not always an ad

885
00:45:28,869 --> 00:45:34,599
sometimes there's already an RR there

886
00:45:30,880 --> 00:45:37,240
and so it's really an update but I think

887
00:45:34,599 --> 00:45:39,700
that's relatively harmless so it's a

888
00:45:37,240 --> 00:45:41,979
word that comes to mind is register

889
00:45:39,700 --> 00:45:44,379
because this is a registration protocol

890
00:45:41,980 --> 00:45:48,039
yet there's nothing in there that is a

891
00:45:44,380 --> 00:45:50,349
register so we could call the the whole

892
00:45:48,039 --> 00:45:51,410
message an SRP registration instead of

893
00:45:50,349 --> 00:45:55,759
an SRP update

894
00:45:51,410 --> 00:45:57,348
I like that all right

895
00:45:55,759 --> 00:45:59,000
hopefully that will show up in the

896
00:45:57,349 --> 00:46:07,250
minutes otherwise I'll probably forget

897
00:45:59,000 --> 00:46:09,920
but thank you that was a hint okay Tom

898
00:46:07,250 --> 00:46:12,700
also found the discussion of the whole

899
00:46:09,920 --> 00:46:14,720
validation section a bit confusing I

900
00:46:12,700 --> 00:46:15,980
don't really have any questions about

901
00:46:14,720 --> 00:46:17,750
what to do there I just didn't have time

902
00:46:15,980 --> 00:46:21,200
to do it before them before the cutoff

903
00:46:17,750 --> 00:46:24,680
so I will do that when I next wrap the

904
00:46:21,200 --> 00:46:26,629
draft which will be soon Tom asks some

905
00:46:24,680 --> 00:46:29,720
some really good security questions this

906
00:46:26,630 --> 00:46:31,400
is the first one the question was you

907
00:46:29,720 --> 00:46:33,140
know why are we not sending this why are

908
00:46:31,400 --> 00:46:34,640
we sending this in the clear why are we

909
00:46:33,140 --> 00:46:37,578
just making a TCP connection and I

910
00:46:34,640 --> 00:46:40,250
hadn't even thought about it so thank

911
00:46:37,579 --> 00:46:42,799
you for pointing that out and as I said

912
00:46:40,250 --> 00:46:44,509
I add a TLS support to the document my

913
00:46:42,799 --> 00:46:45,980
next question is should we require TLS

914
00:46:44,509 --> 00:46:49,630
support should we not even offer the

915
00:46:45,980 --> 00:46:53,950
option of doing it over plain TCP

916
00:46:49,630 --> 00:47:00,490
anybody have an opinion about that yes

917
00:46:53,950 --> 00:47:02,839
you have an opinion about it okay I

918
00:47:00,490 --> 00:47:04,339
think if it goes off the land it should

919
00:47:02,839 --> 00:47:06,890
be required all right but if you're

920
00:47:04,339 --> 00:47:10,130
gonna do you know something on the land

921
00:47:06,890 --> 00:47:13,368
like with EDP I don't think we have a

922
00:47:10,130 --> 00:47:15,200
way to do that test and and you know if

923
00:47:13,369 --> 00:47:17,150
we care about keeping the information I

924
00:47:15,200 --> 00:47:18,618
mean the thing is this is a this is a

925
00:47:17,150 --> 00:47:21,109
record that we're publishing which will

926
00:47:18,619 --> 00:47:24,680
then be able to be looked up so it's not

927
00:47:21,109 --> 00:47:26,450
like it's really a big huge secret so

928
00:47:24,680 --> 00:47:30,919
there is an argument to be made for it's

929
00:47:26,450 --> 00:47:33,980
really not that important but timber

930
00:47:30,920 --> 00:47:37,130
laying for Keith Moore yes required TCP

931
00:47:33,980 --> 00:47:42,259
always even on land no no think TCP or

932
00:47:37,130 --> 00:47:43,819
TLS okay yeah okay all right all right

933
00:47:42,259 --> 00:47:46,849
well I'd say you know from the

934
00:47:43,819 --> 00:47:51,500
perspective of voting we've got a clear

935
00:47:46,849 --> 00:47:53,269
vote with this would be opportunistic

936
00:47:51,500 --> 00:47:55,099
security so so it doesn't need to be

937
00:47:53,269 --> 00:47:56,750
signed certificate we're already

938
00:47:55,099 --> 00:47:58,069
requiring it for DNS push and the

939
00:47:56,750 --> 00:47:59,750
current implementation that I have for

940
00:47:58,069 --> 00:48:01,680
DNS push

941
00:47:59,750 --> 00:48:03,390
the current implementation that I have

942
00:48:01,680 --> 00:48:06,180
or DNS push does not check the sort it

943
00:48:03,390 --> 00:48:07,710
just takes advantage of the of the you

944
00:48:06,180 --> 00:48:09,060
know if you have an on path attack or

945
00:48:07,710 --> 00:48:10,950
the on path attacker will be able to

946
00:48:09,060 --> 00:48:12,840
intercept your connection and violate

947
00:48:10,950 --> 00:48:19,620
your privacy but but at least it makes

948
00:48:12,840 --> 00:48:21,660
it more expensive to do that yeah we'd

949
00:48:19,620 --> 00:48:23,250
have to describe how to do that I think

950
00:48:21,660 --> 00:48:24,960
that that it might make sense to

951
00:48:23,250 --> 00:48:29,310
describe how to do it with certificates

952
00:48:24,960 --> 00:48:32,670
but if we did that I kind of like to do

953
00:48:29,310 --> 00:48:35,090
it using Dane and and I'm not really

954
00:48:32,670 --> 00:48:38,010
ready to write that text so that's why

955
00:48:35,090 --> 00:48:42,230
that's why I'm punting but if somebody

956
00:48:38,010 --> 00:48:42,230
wants to offer text you know we can talk

957
00:48:42,810 --> 00:48:46,680
so Tom brought up another security issue

958
00:48:44,790 --> 00:48:48,300
which I think was a really good one that

959
00:48:46,680 --> 00:48:50,250
I hadn't thought about which is that we

960
00:48:48,300 --> 00:48:53,250
currently are just asking for a global

961
00:48:50,250 --> 00:48:55,530
anycast address so if you send a message

962
00:48:53,250 --> 00:48:57,390
so oh sorry a little backstory there's

963
00:48:55,530 --> 00:49:03,060
two different ways that SRP works one of

964
00:48:57,390 --> 00:49:06,420
them is that we require TCP for for

965
00:49:03,060 --> 00:49:07,980
fully featured SRP clients so the client

966
00:49:06,420 --> 00:49:09,330
is required to connect with TCP and then

967
00:49:07,980 --> 00:49:10,140
we get a three-way handshake and that

968
00:49:09,330 --> 00:49:11,580
means we know that we're actually

969
00:49:10,140 --> 00:49:12,660
talking to who we think we're talking to

970
00:49:11,580 --> 00:49:15,200
and they're roughly where they where

971
00:49:12,660 --> 00:49:20,759
they claim to be

972
00:49:15,200 --> 00:49:22,830
however for IOT devices requiring the

973
00:49:20,760 --> 00:49:25,320
full discovery process is kind of

974
00:49:22,830 --> 00:49:28,980
painful and so I came up with a way to

975
00:49:25,320 --> 00:49:32,940
on IOT networks only support this global

976
00:49:28,980 --> 00:49:34,560
anycast address update and the idea

977
00:49:32,940 --> 00:49:36,180
there is basically the client just

978
00:49:34,560 --> 00:49:38,250
doesn't the client doesn't do any

979
00:49:36,180 --> 00:49:40,080
service discovery at all it just sends

980
00:49:38,250 --> 00:49:42,240
out an update and it says hi I'm

981
00:49:40,080 --> 00:49:46,680
offering this service here's the

982
00:49:42,240 --> 00:49:49,500
information good luck and by the way it

983
00:49:46,680 --> 00:49:52,049
uses a domain of service it sent its DNS

984
00:49:49,500 --> 00:49:54,140
update server to the service DARPA

985
00:49:52,050 --> 00:49:57,780
domain that's that's where that comes in

986
00:49:54,140 --> 00:49:58,890
so and that's like really lightweight

987
00:49:57,780 --> 00:50:00,180
and I'll tell you a little bit more

988
00:49:58,890 --> 00:50:05,190
about just how lightweight it is because

989
00:50:00,180 --> 00:50:06,960
it's kind of awesome but the point of

990
00:50:05,190 --> 00:50:08,910
that is that is that I just allocated a

991
00:50:06,960 --> 00:50:10,860
global address and so now this this IOT

992
00:50:08,910 --> 00:50:12,899
device is sending this update message

993
00:50:10,860 --> 00:50:15,210
and if there isn't some

994
00:50:12,900 --> 00:50:17,820
things sitting on path intercepting the

995
00:50:15,210 --> 00:50:19,800
message to the anycast address it's

996
00:50:17,820 --> 00:50:20,910
gonna go out to the internet right this

997
00:50:19,800 --> 00:50:22,350
is okay it's just gonna get routed

998
00:50:20,910 --> 00:50:25,770
somewhere onto the backbone and then

999
00:50:22,350 --> 00:50:28,290
eventually get dropped but possibly not

1000
00:50:25,770 --> 00:50:30,060
before some malefactor sniffs it and

1001
00:50:28,290 --> 00:50:32,820
figures out that you have light switches

1002
00:50:30,060 --> 00:50:34,080
in your house or something and you know

1003
00:50:32,820 --> 00:50:36,120
we'd like to avoid that we don't want

1004
00:50:34,080 --> 00:50:37,799
some malefactor to be able to sniff your

1005
00:50:36,120 --> 00:50:41,549
your traffic and know that there are

1006
00:50:37,800 --> 00:50:43,530
light switches in your house and you

1007
00:50:41,550 --> 00:50:47,130
just told us it's gonna be TLS over a

1008
00:50:43,530 --> 00:50:49,280
TCP in the previous slide okay so so -

1009
00:50:47,130 --> 00:50:51,720
two different scenarios here one is the

1010
00:50:49,280 --> 00:50:55,500
all-singing all-dancing SRP update

1011
00:50:51,720 --> 00:50:58,049
scenario the other is the the constrain

1012
00:50:55,500 --> 00:50:59,520
device update scenario so I'm talking

1013
00:50:58,050 --> 00:51:01,650
now about the second the constrained

1014
00:50:59,520 --> 00:51:03,570
device update scenario and the

1015
00:51:01,650 --> 00:51:06,060
constrained device update scenario we're

1016
00:51:03,570 --> 00:51:08,490
not doing TCP or we're not doing TLS at

1017
00:51:06,060 --> 00:51:10,890
least in principle maybe that's the

1018
00:51:08,490 --> 00:51:14,669
wrong thing to do I think that you

1019
00:51:10,890 --> 00:51:17,490
should we you know we you and I had some

1020
00:51:14,670 --> 00:51:23,180
AIIMS yesterday or something about this

1021
00:51:17,490 --> 00:51:29,009
document and the core resource discovery

1022
00:51:23,180 --> 00:51:31,109
process yeah and I don't think this is a

1023
00:51:29,010 --> 00:51:36,660
useful feature based on what I now know

1024
00:51:31,110 --> 00:51:38,910
our discussion back and forth I think

1025
00:51:36,660 --> 00:51:40,529
that when you're saying you don't think

1026
00:51:38,910 --> 00:51:41,879
this is a useful feature you mean I

1027
00:51:40,530 --> 00:51:45,540
don't think that this is something that

1028
00:51:41,880 --> 00:51:47,310
it couldn't be a device a IOT device

1029
00:51:45,540 --> 00:51:51,630
which is sufficiently constrained that

1030
00:51:47,310 --> 00:51:56,880
it can't do TCP and TLS should be doing

1031
00:51:51,630 --> 00:52:01,380
on its own so so we have categories

1032
00:51:56,880 --> 00:52:03,450
weenus 72 28 you know aside because it

1033
00:52:01,380 --> 00:52:05,490
doesn't actually give us you know

1034
00:52:03,450 --> 00:52:07,680
classes to describe the devices that are

1035
00:52:05,490 --> 00:52:10,049
above it but essentially if you can if

1036
00:52:07,680 --> 00:52:11,129
you have enough energy to run Wi-Fi then

1037
00:52:10,050 --> 00:52:15,120
you have enough right need you to run

1038
00:52:11,130 --> 00:52:16,680
TCP less the use case for this is not

1039
00:52:15,120 --> 00:52:19,440
that you have enough energy to run Wi-Fi

1040
00:52:16,680 --> 00:52:21,839
right so what I'm trying to say is if

1041
00:52:19,440 --> 00:52:24,030
you are that class of device then I

1042
00:52:21,840 --> 00:52:27,000
think you can just fall into category

1043
00:52:24,030 --> 00:52:29,640
eight which was which is used

1044
00:52:27,000 --> 00:52:32,580
TCP and TLS and the normal discovery

1045
00:52:29,640 --> 00:52:33,299
that we do sure okay if you are not at

1046
00:52:32,580 --> 00:52:37,500
that level

1047
00:52:33,300 --> 00:52:40,350
uh-huh then there is probably there has

1048
00:52:37,500 --> 00:52:42,480
to be some kind of a gateway just to get

1049
00:52:40,350 --> 00:52:45,390
your data from right you know the

1050
00:52:42,480 --> 00:52:47,790
internet that we all love to the network

1051
00:52:45,390 --> 00:52:51,660
that you're doing yes so that device can

1052
00:52:47,790 --> 00:52:54,690
do resource discovery from you in a

1053
00:52:51,660 --> 00:52:57,629
energy efficient way and can do service

1054
00:52:54,690 --> 00:53:00,600
discovery proxy to the rebels so so

1055
00:52:57,630 --> 00:53:03,390
there isn't a way to do that okay so I'm

1056
00:53:00,600 --> 00:53:06,569
saying is that Gateway can be the thing

1057
00:53:03,390 --> 00:53:09,240
that is translating between what what I

1058
00:53:06,570 --> 00:53:11,580
would what this the the purpose of this

1059
00:53:09,240 --> 00:53:13,919
is to do Service registration protocol

1060
00:53:11,580 --> 00:53:17,040
from the edge device understand that it

1061
00:53:13,920 --> 00:53:19,220
is not to do service is not to do some

1062
00:53:17,040 --> 00:53:22,950
kind of mapping between core Rd and

1063
00:53:19,220 --> 00:53:24,419
Service registration protocol maybe I

1064
00:53:22,950 --> 00:53:27,750
don't understand the space of things

1065
00:53:24,420 --> 00:53:30,180
because I that well enough and I but but

1066
00:53:27,750 --> 00:53:31,650
my feeling is that that I think that the

1067
00:53:30,180 --> 00:53:33,870
problem that you've created with the

1068
00:53:31,650 --> 00:53:35,490
anycast and I we had the whole anycast

1069
00:53:33,870 --> 00:53:37,319
discussion I think it wandered into

1070
00:53:35,490 --> 00:53:39,240
six-man and all this kind of stuff yeah

1071
00:53:37,320 --> 00:53:40,740
and I'm and I'm actually quite upset

1072
00:53:39,240 --> 00:53:43,649
that we don't have a good to answer to

1073
00:53:40,740 --> 00:53:46,350
the problem that you just have said mmm

1074
00:53:43,650 --> 00:53:49,620
I think the answer is we need a ula

1075
00:53:46,350 --> 00:53:51,540
central address right look server that

1076
00:53:49,620 --> 00:53:55,020
it gets dropped correctly okay see

1077
00:53:51,540 --> 00:53:57,390
that's why that's right I understand

1078
00:53:55,020 --> 00:54:00,540
that so I think that's the right answer

1079
00:53:57,390 --> 00:54:02,430
you know to the problem but before we do

1080
00:54:00,540 --> 00:54:04,020
that I'm not actually sure this is a

1081
00:54:02,430 --> 00:54:05,790
problem we should solve is what I'm

1082
00:54:04,020 --> 00:54:08,370
trying to say or that so working group

1083
00:54:05,790 --> 00:54:11,040
should solve without more thinking and

1084
00:54:08,370 --> 00:54:15,029
and back and forth Stuart do you want to

1085
00:54:11,040 --> 00:54:16,740
step up to the mic yeah this is

1086
00:54:15,030 --> 00:54:23,280
something where I can give some more

1087
00:54:16,740 --> 00:54:26,370
backgrounds as many of you know Apple

1088
00:54:23,280 --> 00:54:30,330
has some home automation work or with

1089
00:54:26,370 --> 00:54:33,089
the home kit products and right now they

1090
00:54:30,330 --> 00:54:35,009
use Wi-Fi which is good for AC connected

1091
00:54:33,090 --> 00:54:38,640
products and not so good for battery

1092
00:54:35,010 --> 00:54:40,960
powered products I and that this right

1093
00:54:38,640 --> 00:54:43,480
now is a pet project of mine

1094
00:54:40,960 --> 00:54:46,329
I have been interested in looking at

1095
00:54:43,480 --> 00:54:51,099
ways that we could make home care more

1096
00:54:46,329 --> 00:54:53,829
battery friendly and that's why I've

1097
00:54:51,099 --> 00:54:55,510
been attending the thread group meetings

1098
00:54:53,829 --> 00:54:57,160
for those who don't know thread is

1099
00:54:55,510 --> 00:55:00,730
something that came out of Google Nest

1100
00:54:57,160 --> 00:55:03,848
it's a mesh network layered on top of

1101
00:55:00,730 --> 00:55:07,319
6lowpan which runs over I Triple E 880

1102
00:55:03,849 --> 00:55:10,839
or 15.4 which are core to make a bit

1103
00:55:07,319 --> 00:55:12,520
wireless technology similar speed and

1104
00:55:10,839 --> 00:55:14,380
range and battery consumptions of

1105
00:55:12,520 --> 00:55:16,569
Bluetooth but has a benefit of being

1106
00:55:14,380 --> 00:55:19,690
more IP friendly which is why I'm

1107
00:55:16,569 --> 00:55:20,890
predisposed to like that and then I've

1108
00:55:19,690 --> 00:55:23,290
been going through this little thought

1109
00:55:20,890 --> 00:55:27,009
process of if we wanted to run home care

1110
00:55:23,290 --> 00:55:29,619
on thread what would we need we don't

1111
00:55:27,010 --> 00:55:32,230
necessarily need a gateway to the

1112
00:55:29,619 --> 00:55:33,760
Greater Internet I could imagine a just

1113
00:55:32,230 --> 00:55:35,349
a self-contained thread mesh that

1114
00:55:33,760 --> 00:55:37,510
doesn't even connect to my home Wi-Fi

1115
00:55:35,349 --> 00:55:41,470
but it allows like switches to control

1116
00:55:37,510 --> 00:55:42,849
life via IP packets on that mesh in

1117
00:55:41,470 --> 00:55:45,040
order for that to be done with the

1118
00:55:42,849 --> 00:55:46,510
homecare protocols the light switches

1119
00:55:45,040 --> 00:55:49,660
have to discover the lights that they're

1120
00:55:46,510 --> 00:55:52,450
turning on and off and homekit doesn't

1121
00:55:49,660 --> 00:55:54,819
use core Rd homekit uses DNS service

1122
00:55:52,450 --> 00:55:58,270
discovery so this leads us to the

1123
00:55:54,819 --> 00:56:00,339
question if we were to build homekit

1124
00:55:58,270 --> 00:56:03,880
devices that are battery-powered of

1125
00:56:00,339 --> 00:56:06,940
running on 8215 for how would we provide

1126
00:56:03,880 --> 00:56:08,410
the facilities that they need and that

1127
00:56:06,940 --> 00:56:10,690
leads us to this work which is how would

1128
00:56:08,410 --> 00:56:12,399
you do dns service discovery without

1129
00:56:10,690 --> 00:56:13,660
resorting to just flooding multicast

1130
00:56:12,400 --> 00:56:19,049
everywhere and running the batteries

1131
00:56:13,660 --> 00:56:24,460
down right so that's a motivation for

1132
00:56:19,049 --> 00:56:27,099
for doing this work and essentially what

1133
00:56:24,460 --> 00:56:32,170
we're offering here is just here's a

1134
00:56:27,099 --> 00:56:34,000
lightweight way to do this thing on on a

1135
00:56:32,170 --> 00:56:38,710
NATO 2.15 dot for network or something

1136
00:56:34,000 --> 00:56:40,420
like that and you know it's it's not a

1137
00:56:38,710 --> 00:56:42,010
huge change to the whole protocol in

1138
00:56:40,420 --> 00:56:43,630
fact it's it's essentially the exact

1139
00:56:42,010 --> 00:56:45,250
same thing except that you're not going

1140
00:56:43,630 --> 00:56:46,510
out and looking up the SRV record you're

1141
00:56:45,250 --> 00:56:50,859
just sending it to some well-known

1142
00:56:46,510 --> 00:56:53,140
address so you know one option is

1143
00:56:50,859 --> 00:56:54,580
certainly to say no you can't do that

1144
00:56:53,140 --> 00:56:57,670
that would be kind of a weird thing to

1145
00:56:54,580 --> 00:57:02,200
say but certainly the working group

1146
00:56:57,670 --> 00:57:04,270
could say that another thing to say is

1147
00:57:02,200 --> 00:57:06,040
sure go ahead and do that but you need

1148
00:57:04,270 --> 00:57:07,509
to use a site scope to any anycast

1149
00:57:06,040 --> 00:57:08,950
address in which case we have to go out

1150
00:57:07,510 --> 00:57:11,200
and solve that problem which is kind of

1151
00:57:08,950 --> 00:57:16,779
heavy weight or we can just make it

1152
00:57:11,200 --> 00:57:19,720
something where it's not specified how

1153
00:57:16,780 --> 00:57:21,160
the what what address is used but just

1154
00:57:19,720 --> 00:57:25,000
generally speaking if you want to use

1155
00:57:21,160 --> 00:57:29,140
this this light weight mode then

1156
00:57:25,000 --> 00:57:30,370
whatever IOT or constraint network

1157
00:57:29,140 --> 00:57:32,680
you're using it on is going to need to

1158
00:57:30,370 --> 00:57:37,390
have a well-defined address to which

1159
00:57:32,680 --> 00:57:38,379
these packets are sent so you know I

1160
00:57:37,390 --> 00:57:41,230
don't know what to say about the whole

1161
00:57:38,380 --> 00:57:44,470
core ID versus DNS is do you think

1162
00:57:41,230 --> 00:57:47,830
that's really not it's I'm just not even

1163
00:57:44,470 --> 00:57:49,149
interested in core Rd so maybe I would

1164
00:57:47,830 --> 00:57:51,069
be at some point in the future but I'm

1165
00:57:49,150 --> 00:57:52,750
not right now so so I'm just interested

1166
00:57:51,070 --> 00:57:55,080
in solving this particular problem and

1167
00:57:52,750 --> 00:57:57,190
the question is whether there's you know

1168
00:57:55,080 --> 00:58:00,160
whether it's something we should in fact

1169
00:57:57,190 --> 00:58:03,580
solve personally I think it is I think

1170
00:58:00,160 --> 00:58:05,109
it's useful I mean whether you think

1171
00:58:03,580 --> 00:58:06,640
core idea is a good idea or not I think

1172
00:58:05,110 --> 00:58:08,920
it is useful to be able to announce the

1173
00:58:06,640 --> 00:58:12,640
presence of a device and register it as

1174
00:58:08,920 --> 00:58:16,450
a service in DNS st michael richards

1175
00:58:12,640 --> 00:58:18,069
again I'm not as terribly clued in to do

1176
00:58:16,450 --> 00:58:20,319
what thread is doing and they're very

1177
00:58:18,070 --> 00:58:22,270
it's very hard to know if out going to

1178
00:58:20,320 --> 00:58:23,710
the meetings and paying the large

1179
00:58:22,270 --> 00:58:28,900
amounts money if you like to bring me

1180
00:58:23,710 --> 00:58:31,480
I'm very happy to go to no no but I am

1181
00:58:28,900 --> 00:58:35,590
working with thread on enrollment things

1182
00:58:31,480 --> 00:58:37,030
and they do a lot of things differently

1183
00:58:35,590 --> 00:58:39,520
just for the hell of doing it

1184
00:58:37,030 --> 00:58:40,960
differently so if if I were to learn

1185
00:58:39,520 --> 00:58:43,450
that they actually have a service

1186
00:58:40,960 --> 00:58:45,850
discovery protocol you know already I

1187
00:58:43,450 --> 00:58:48,700
would I'm almost certain of that as the

1188
00:58:45,850 --> 00:58:50,589
fact so if you were to make homekit work

1189
00:58:48,700 --> 00:58:53,290
under threat you would either have to

1190
00:58:50,590 --> 00:58:56,230
convince them to run this or do

1191
00:58:53,290 --> 00:58:59,490
something else okay so I think it's not

1192
00:58:56,230 --> 00:59:01,930
entirely a particularly important

1193
00:58:59,490 --> 00:59:04,089
consideration the point is that whatever

1194
00:59:01,930 --> 00:59:06,250
I don't think it matters whether they're

1195
00:59:04,090 --> 00:59:06,990
running SRP or they're running something

1196
00:59:06,250 --> 00:59:08,790
else or core

1197
00:59:06,990 --> 00:59:11,279
Ardi the point I'm trying to say is that

1198
00:59:08,790 --> 00:59:14,400
if there's going to be if it's going to

1199
00:59:11,280 --> 00:59:18,330
matter to devices outside of that

1200
00:59:14,400 --> 00:59:21,510
network then there's a gateway that is

1201
00:59:18,330 --> 00:59:23,490
leading that process okay so I think

1202
00:59:21,510 --> 00:59:25,350
that we could have that that that

1203
00:59:23,490 --> 00:59:27,029
happened I think that's a I think that

1204
00:59:25,350 --> 00:59:27,980
would be a better I think that would be

1205
00:59:27,030 --> 00:59:31,260
better

1206
00:59:27,980 --> 00:59:34,470
having said that I'm not opposed to you

1207
00:59:31,260 --> 00:59:36,090
going forward okay okay I think that if

1208
00:59:34,470 --> 00:59:38,879
you don't want to go through the

1209
00:59:36,090 --> 00:59:41,610
rigmarole of trying to find as I sight

1210
00:59:38,880 --> 00:59:43,290
scope address mode and anycast that's

1211
00:59:41,610 --> 00:59:45,930
going to leak

1212
00:59:43,290 --> 00:59:49,650
sorry that's going to secure be secure

1213
00:59:45,930 --> 00:59:51,710
when it leaks right then I think you

1214
00:59:49,650 --> 00:59:55,020
should defer the work until we do that

1215
00:59:51,710 --> 00:59:57,570
okay yeah this part of it yeah having

1216
00:59:55,020 --> 00:59:59,759
said that I think we should do get the

1217
00:59:57,570 --> 01:00:05,220
site netskope any past thing worked out

1218
00:59:59,760 --> 01:00:07,170
but it's as you say it's going to be at

1219
01:00:05,220 --> 01:00:08,970
least an hour and a half conversation in

1220
01:00:07,170 --> 01:00:10,530
three different six-man meetings before

1221
01:00:08,970 --> 01:00:14,970
we can have this happen all right

1222
01:00:10,530 --> 01:00:18,330
yeah so so but maybe that's worthwhile

1223
01:00:14,970 --> 01:00:19,890
yeah so basically the the status quo now

1224
01:00:18,330 --> 01:00:22,890
is that we're currently using a global

1225
01:00:19,890 --> 01:00:24,390
address and to Tom pointed out that

1226
01:00:22,890 --> 01:00:27,390
that's a bad idea and I agree with him

1227
01:00:24,390 --> 01:00:28,830
and so I think that the the expedient

1228
01:00:27,390 --> 01:00:31,080
fallback and the one that probably makes

1229
01:00:28,830 --> 01:00:32,549
the most sense is to just consider the

1230
01:00:31,080 --> 01:00:34,770
use case that we actually have in mind

1231
01:00:32,550 --> 01:00:37,680
and think about what would work there

1232
01:00:34,770 --> 01:00:40,170
and the answer is a mesh local ula a

1233
01:00:37,680 --> 01:00:44,160
well known address within the mesh local

1234
01:00:40,170 --> 01:00:47,190
ula Stewart yeah Michael you have some

1235
01:00:44,160 --> 01:00:49,830
interesting questions so I'll briefly

1236
01:00:47,190 --> 01:00:52,170
answer them because we had similar

1237
01:00:49,830 --> 01:00:54,420
questions when I started getting

1238
01:00:52,170 --> 01:00:56,160
involved with this you might assume that

1239
01:00:54,420 --> 01:00:59,369
the threat group has a discovery

1240
01:00:56,160 --> 01:01:04,830
protocol defined they actually don't at

1241
01:00:59,369 --> 01:01:06,930
all the way thread discovery in quotes

1242
01:01:04,830 --> 01:01:08,790
works today with the nest thermostats

1243
01:01:06,930 --> 01:01:11,040
and smoke detectors is that everything

1244
01:01:08,790 --> 01:01:14,730
phones home to the cloud and the quote

1245
01:01:11,040 --> 01:01:16,320
discovery is that which devices are

1246
01:01:14,730 --> 01:01:18,359
owned by the same nest account in the

1247
01:01:16,320 --> 01:01:20,130
cloud there is no local peer to peer

1248
01:01:18,359 --> 01:01:20,490
discovery it's all mediated through the

1249
01:01:20,130 --> 01:01:23,280
Clair

1250
01:01:20,490 --> 01:01:24,660
so that was a disappointment because we

1251
01:01:23,280 --> 01:01:29,420
were hoping to find something a little

1252
01:01:24,660 --> 01:01:33,420
bit more fully baked with apples

1253
01:01:29,420 --> 01:01:36,570
different priorities the home kit is

1254
01:01:33,420 --> 01:01:38,250
built without a cloud service it assumes

1255
01:01:36,570 --> 01:01:41,430
you've got some brains in the house and

1256
01:01:38,250 --> 01:01:44,190
nothing has to leave the house so so

1257
01:01:41,430 --> 01:01:47,819
things need to discover them other peers

1258
01:01:44,190 --> 01:01:50,760
on the network so that is how we went

1259
01:01:47,820 --> 01:01:52,320
down this path which is thread has no

1260
01:01:50,760 --> 01:01:55,200
discovery mechanism currently defined

1261
01:01:52,320 --> 01:01:58,400
they need to define one to grow beyond

1262
01:01:55,200 --> 01:02:01,609
their current limited use cases and

1263
01:01:58,400 --> 01:02:05,700
naturally this is what we are advocating

1264
01:02:01,609 --> 01:02:07,680
so that's how work now the feedback

1265
01:02:05,700 --> 01:02:10,439
about the details here is incredibly

1266
01:02:07,680 --> 01:02:14,118
valuable I agree that any address that

1267
01:02:10,440 --> 01:02:16,320
might escape the house by accident

1268
01:02:14,119 --> 01:02:18,420
definitely is not what we want a risk

1269
01:02:16,320 --> 01:02:20,160
for privacy reasons so maybe for the

1270
01:02:18,420 --> 01:02:22,970
thread case the answer is that the

1271
01:02:20,160 --> 01:02:25,109
thread local network data conveys a

1272
01:02:22,970 --> 01:02:27,089
configured address to the clients and

1273
01:02:25,109 --> 01:02:29,520
they use that so for the thread case I

1274
01:02:27,089 --> 01:02:31,410
think we can solve this for broader use

1275
01:02:29,520 --> 01:02:33,240
cases this might still be an interesting

1276
01:02:31,410 --> 01:02:38,549
discussion to figure out how to automate

1277
01:02:33,240 --> 01:02:41,669
it for all link types just analysis I

1278
01:02:38,550 --> 01:02:45,150
think that we have the the Rd and the

1279
01:02:41,670 --> 01:02:47,250
the DNS st discoveries um have there's

1280
01:02:45,150 --> 01:02:49,440
there dissimilarities but when it comes

1281
01:02:47,250 --> 01:02:51,420
to the anycast address and having an R

1282
01:02:49,440 --> 01:02:53,490
per domain for all those site local

1283
01:02:51,420 --> 01:02:55,760
things I think we should sit down

1284
01:02:53,490 --> 01:02:59,069
together and kind of compare notes on

1285
01:02:55,760 --> 01:03:01,680
what we can unify and where we where we

1286
01:02:59,070 --> 01:03:04,320
have separate ecosystems yeah definitely

1287
01:03:01,680 --> 01:03:05,720
yeah so it's a separate conversation but

1288
01:03:04,320 --> 01:03:08,880
yeah that's definitely worth doing

1289
01:03:05,720 --> 01:03:10,230
alright so moving right along I think

1290
01:03:08,880 --> 01:03:11,580
that the conclusion that I'm drawing

1291
01:03:10,230 --> 01:03:13,290
from this is that I should just say that

1292
01:03:11,580 --> 01:03:14,759
we should use a mesh local address and

1293
01:03:13,290 --> 01:03:16,650
that this document that's out of scope

1294
01:03:14,760 --> 01:03:20,490
for this document but but generally

1295
01:03:16,650 --> 01:03:22,020
speaking this is what we suggest so tom

1296
01:03:20,490 --> 01:03:23,310
also pointed out something in Stuart I

1297
01:03:22,020 --> 01:03:24,630
haven't actually had a chance to talk to

1298
01:03:23,310 --> 01:03:27,089
you about this so I apologize for

1299
01:03:24,630 --> 01:03:30,089
springing it on you on a slide but here

1300
01:03:27,089 --> 01:03:32,190
it is anyway Tom pointed out that sleep

1301
01:03:30,089 --> 01:03:34,680
proxy is not entirely compatible with

1302
01:03:32,190 --> 01:03:36,300
what we're doing for SRP because as our

1303
01:03:34,680 --> 01:03:37,470
doesn't necessarily assume that the

1304
01:03:36,300 --> 01:03:41,070
thing we're updating is on the local

1305
01:03:37,470 --> 01:03:44,609
wire and he was confused by that and I

1306
01:03:41,070 --> 01:03:47,040
think it may mean the basically so so

1307
01:03:44,610 --> 01:03:48,240
SRP is a router unicast protocol the DNS

1308
01:03:47,040 --> 01:03:50,370
server does not have to be on the local

1309
01:03:48,240 --> 01:03:54,720
wire sleep proxy requires a presence on

1310
01:03:50,370 --> 01:03:57,750
link asleep proxy is essentially doing

1311
01:03:54,720 --> 01:03:58,919
the same thing as SRP and that's why SRP

1312
01:03:57,750 --> 01:04:00,450
and sleep proxy are in the same document

1313
01:03:58,920 --> 01:04:02,730
but it's not doing entirely the same

1314
01:04:00,450 --> 01:04:06,120
thing because we have to support the

1315
01:04:02,730 --> 01:04:07,650
wake-on-lan feature so we need to figure

1316
01:04:06,120 --> 01:04:11,970
out whether the right thing to do is

1317
01:04:07,650 --> 01:04:13,290
have a sleep proxy document or to make

1318
01:04:11,970 --> 01:04:19,350
things sufficiently clear that it

1319
01:04:13,290 --> 01:04:20,850
doesn't trigger Tom and which by I mean

1320
01:04:19,350 --> 01:04:21,930
with all due respect I'm not saying that

1321
01:04:20,850 --> 01:04:23,370
you shouldn't have been triggered you

1322
01:04:21,930 --> 01:04:24,480
should have but but we need to make sure

1323
01:04:23,370 --> 01:04:25,650
that it's clear enough that when you

1324
01:04:24,480 --> 01:04:31,710
read you're like oh okay

1325
01:04:25,650 --> 01:04:33,510
not what so does anybody have opinions

1326
01:04:31,710 --> 01:04:47,340
on which write which path we should take

1327
01:04:33,510 --> 01:04:55,230
on this Michael Richardson again I would

1328
01:04:47,340 --> 01:04:57,300
say if if if it enhances this document

1329
01:04:55,230 --> 01:04:59,040
it makes it more applicable it makes it

1330
01:04:57,300 --> 01:05:01,350
easier for developers then you should

1331
01:04:59,040 --> 01:05:03,240
probably keep it in the document the

1332
01:05:01,350 --> 01:05:08,100
iesg seems to want us to have fewer

1333
01:05:03,240 --> 01:05:09,839
documents so if the motivation for sleep

1334
01:05:08,100 --> 01:05:11,940
proxy if the sleep proxy has an

1335
01:05:09,840 --> 01:05:15,510
existence or motivation which could be

1336
01:05:11,940 --> 01:05:17,310
deployed without this document I don't

1337
01:05:15,510 --> 01:05:18,960
think that's true but if that was the

1338
01:05:17,310 --> 01:05:22,230
case then I would say okay maybe it

1339
01:05:18,960 --> 01:05:23,790
makes sense a separate document there if

1340
01:05:22,230 --> 01:05:26,220
for some reason the document was

1341
01:05:23,790 --> 01:05:28,380
monstrously too big and you have had the

1342
01:05:26,220 --> 01:05:30,569
comment about two big documents aren't

1343
01:05:28,380 --> 01:05:32,010
possible to review in advance then I

1344
01:05:30,570 --> 01:05:33,450
would say it's something to remove but I

1345
01:05:32,010 --> 01:05:35,700
don't think that's the case yeah I don't

1346
01:05:33,450 --> 01:05:37,560
think so I think it's it's maybe it

1347
01:05:35,700 --> 01:05:41,819
doesn't really gel with the rest of the

1348
01:05:37,560 --> 01:05:45,009
concept but you know it it's a-you know

1349
01:05:41,820 --> 01:05:48,040
I think it fits into the yeah

1350
01:05:45,010 --> 01:05:49,780
the thing that we really want to add so

1351
01:05:48,040 --> 01:05:51,190
sleep proxy already exists like if you

1352
01:05:49,780 --> 01:05:53,740
have any Apple products they already

1353
01:05:51,190 --> 01:05:54,940
have sleep proxy built into them but

1354
01:05:53,740 --> 01:05:56,830
what we wanted to add to that was

1355
01:05:54,940 --> 01:05:58,359
first-come first-serve naming and so

1356
01:05:56,830 --> 01:06:00,430
really if you could think of this as

1357
01:05:58,359 --> 01:06:03,880
just three separate use cases for the

1358
01:06:00,430 --> 01:06:06,520
general SRP registration update one of

1359
01:06:03,880 --> 01:06:10,420
them is registering to an SRP server

1360
01:06:06,520 --> 01:06:12,670
that's that's serving possibly a multi

1361
01:06:10,420 --> 01:06:15,030
subnet land one of them is register

1362
01:06:12,670 --> 01:06:17,640
registering your IOT device that's on a

1363
01:06:15,030 --> 01:06:20,590
constrained network and the third is

1364
01:06:17,640 --> 01:06:22,720
registering with a sleep proxy and a

1365
01:06:20,590 --> 01:06:25,420
sleep proxy is not an SRP server in the

1366
01:06:22,720 --> 01:06:27,160
same sense so so essentially I think

1367
01:06:25,420 --> 01:06:29,080
maybe that's a way to explain this that

1368
01:06:27,160 --> 01:06:33,490
is less confusing does that make sense

1369
01:06:29,080 --> 01:06:36,100
to you Tom okay so so in other words SRP

1370
01:06:33,490 --> 01:06:40,600
updates are the same for all use cases

1371
01:06:36,100 --> 01:06:42,009
however SRP updates to their there are

1372
01:06:40,600 --> 01:06:44,560
three different things you might send an

1373
01:06:42,010 --> 01:06:46,840
SRE an SRP registration to changing the

1374
01:06:44,560 --> 01:06:50,320
terminology you might send an SOP

1375
01:06:46,840 --> 01:06:52,690
registration to a DNS server an

1376
01:06:50,320 --> 01:06:55,210
authoritative DNS server to have it add

1377
01:06:52,690 --> 01:07:00,490
that to its database you might send it

1378
01:06:55,210 --> 01:07:02,080
to your your what are we calling these

1379
01:07:00,490 --> 01:07:04,868
things your board or router your

1380
01:07:02,080 --> 01:07:07,840
constraint network border router or you

1381
01:07:04,869 --> 01:07:10,300
might send it to your sleep proxy three

1382
01:07:07,840 --> 01:07:12,460
different recipients of the same type of

1383
01:07:10,300 --> 01:07:15,550
message that has the same essential

1384
01:07:12,460 --> 01:07:17,080
features and the way that they're

1385
01:07:15,550 --> 01:07:19,990
handled are slightly different but they

1386
01:07:17,080 --> 01:07:23,380
basically all have more in common than

1387
01:07:19,990 --> 01:07:28,540
than there that is different about Tim

1388
01:07:23,380 --> 01:07:30,640
did you wanna I I agree with what has

1389
01:07:28,540 --> 01:07:32,470
been said before so I think it would be

1390
01:07:30,640 --> 01:07:35,080
better to have this stuff in one

1391
01:07:32,470 --> 01:07:39,609
document but like clearly separated in

1392
01:07:35,080 --> 01:07:42,220
in their differences because yeah too

1393
01:07:39,609 --> 01:07:42,640
many documents don't make make make it

1394
01:07:42,220 --> 01:07:45,970
better

1395
01:07:42,640 --> 01:07:47,799
after all right yeah we did go down that

1396
01:07:45,970 --> 01:07:52,569
path for a while on the ITF and it was

1397
01:07:47,800 --> 01:07:55,000
exciting so if if the note-taker could

1398
01:07:52,570 --> 01:07:57,030
could explicitly note that we're gonna

1399
01:07:55,000 --> 01:08:02,190
have these three different

1400
01:07:57,030 --> 01:08:02,960
use cases for the for the awesome oh

1401
01:08:02,190 --> 01:08:07,200
thank you

1402
01:08:02,960 --> 01:08:11,880
much appreciated alright so now now that

1403
01:08:07,200 --> 01:08:14,250
we're done with the boring stuff so I've

1404
01:08:11,880 --> 01:08:16,859
done an implementation of the SRP client

1405
01:08:14,250 --> 01:08:20,609
that actually I have running on a thread

1406
01:08:16,859 --> 01:08:23,549
board as it happens and it's pretty

1407
01:08:20,609 --> 01:08:25,410
sweet it's the hole the hole all the

1408
01:08:23,549 --> 01:08:29,310
code is less than 10k including key

1409
01:08:25,410 --> 01:08:30,870
generation and sig zero signing it's

1410
01:08:29,310 --> 01:08:33,540
really simple it just adds one service

1411
01:08:30,870 --> 01:08:36,059
and the message that it sends to the

1412
01:08:33,540 --> 01:08:39,299
server is about 320 bytes so it's it's

1413
01:08:36,060 --> 01:08:43,319
it's it's very compact and efficient for

1414
01:08:39,299 --> 01:08:50,430
what it does I think and does seem to

1415
01:08:43,319 --> 01:08:53,130
work I think I wrote something like this

1416
01:08:50,430 --> 01:08:55,710
last year second year in Montreal as

1417
01:08:53,130 --> 01:08:59,819
well yeah you didn't I might dig it out

1418
01:08:55,710 --> 01:09:02,520
and people can see it but it was also

1419
01:08:59,819 --> 01:09:05,670
pretty pretty simple one service and

1420
01:09:02,520 --> 01:09:10,230
then but it used the protocol now did

1421
01:09:05,670 --> 01:09:12,569
yours do the 6/0 part I'm not sure I

1422
01:09:10,229 --> 01:09:14,939
have to look back into it and maybe that

1423
01:09:12,569 --> 01:09:16,950
it didn't yeah when I looked at the code

1424
01:09:14,939 --> 01:09:18,599
that you had it didn't have six zero but

1425
01:09:16,950 --> 01:09:23,939
I don't know if I was looking at the at

1426
01:09:18,600 --> 01:09:26,220
the final version all right yeah if you

1427
01:09:23,939 --> 01:09:32,160
need any help with sig zero stuff let me

1428
01:09:26,220 --> 01:09:35,640
know ok so so that's the client side

1429
01:09:32,160 --> 01:09:38,430
I've also implemented an SRP proxy yet

1430
01:09:35,640 --> 01:09:41,640
another proxy right so I wanted to be

1431
01:09:38,430 --> 01:09:45,420
able to have to receive actual SRP

1432
01:09:41,640 --> 01:09:47,670
registrations on port 53 and have them

1433
01:09:45,420 --> 01:09:49,890
update an authoritative DNS server but I

1434
01:09:47,670 --> 01:09:51,450
looked at doing that two by nine and it

1435
01:09:49,890 --> 01:09:53,700
was actually a fairly big job I think

1436
01:09:51,450 --> 01:09:55,830
it's doable and and I'm talking to Mark

1437
01:09:53,700 --> 01:09:57,530
Andrews about that but I wanted

1438
01:09:55,830 --> 01:09:59,519
something that was that was not

1439
01:09:57,530 --> 01:10:00,570
basically I wanted something generic

1440
01:09:59,520 --> 01:10:02,730
that could be put in front of any

1441
01:10:00,570 --> 01:10:06,599
authoritative server that xx accepts dns

1442
01:10:02,730 --> 01:10:10,160
updates and so I wrote some code that

1443
01:10:06,600 --> 01:10:12,700
does that and so what the code does

1444
01:10:10,160 --> 01:10:16,910
is it receives the the SRP registration

1445
01:10:12,700 --> 01:10:18,860
and then it figures out what dns updates

1446
01:10:16,910 --> 01:10:20,210
it has to do now the idea with an SRP

1447
01:10:18,860 --> 01:10:22,670
registration is that the whole thing

1448
01:10:20,210 --> 01:10:25,040
fits into one message because it's all

1449
01:10:22,670 --> 01:10:26,900
of the all of the records are pointing

1450
01:10:25,040 --> 01:10:29,240
at each other and there are no

1451
01:10:26,900 --> 01:10:31,730
prerequisites DNS update allows you to

1452
01:10:29,240 --> 01:10:32,990
use prerequisites to prevent data from

1453
01:10:31,730 --> 01:10:34,940
being added to the zone that you don't

1454
01:10:32,990 --> 01:10:40,519
want to add to the zone and you know and

1455
01:10:34,940 --> 01:10:42,290
it allows you to do a sort of it allows

1456
01:10:40,520 --> 01:10:44,240
you to do an atomic update of the

1457
01:10:42,290 --> 01:10:46,400
database where you know if these pre

1458
01:10:44,240 --> 01:10:49,969
records pre Rexes are true then do the

1459
01:10:46,400 --> 01:10:51,320
update and don't change the database in

1460
01:10:49,970 --> 01:10:52,700
between checking the prerequisites and

1461
01:10:51,320 --> 01:10:54,769
doing the update

1462
01:10:52,700 --> 01:10:55,760
SRP doesn't there's no way to do a

1463
01:10:54,770 --> 01:10:57,590
single message

1464
01:10:55,760 --> 01:10:58,940
SRP update with prerequisites because

1465
01:10:57,590 --> 01:11:02,330
there are too many different things and

1466
01:10:58,940 --> 01:11:03,769
and DNS update prerequisites don't allow

1467
01:11:02,330 --> 01:11:08,360
you to do things like if-then-else

1468
01:11:03,770 --> 01:11:10,190
so so what I've done instead for the so

1469
01:11:08,360 --> 01:11:13,190
the proxy is receiving a single message

1470
01:11:10,190 --> 01:11:15,139
and then first it just tries to do the

1471
01:11:13,190 --> 01:11:17,330
update straight and sets the

1472
01:11:15,140 --> 01:11:20,630
prerequisites if nothing's there do the

1473
01:11:17,330 --> 01:11:24,080
update and if that succeeds great we

1474
01:11:20,630 --> 01:11:26,060
just did it if that fails or actually

1475
01:11:24,080 --> 01:11:27,740
the first it does no change so it did

1476
01:11:26,060 --> 01:11:29,600
the the the assumption is that the

1477
01:11:27,740 --> 01:11:32,269
record is already there we're gonna send

1478
01:11:29,600 --> 01:11:33,350
an update and the prerequisites are that

1479
01:11:32,270 --> 01:11:36,920
the record is there and contains the

1480
01:11:33,350 --> 01:11:40,130
same information as before and that can

1481
01:11:36,920 --> 01:11:41,810
that can happen in one message if

1482
01:11:40,130 --> 01:11:43,100
there's nothing there then that can

1483
01:11:41,810 --> 01:11:44,750
happen in one message but that would be

1484
01:11:43,100 --> 01:11:47,690
a second message and then the third

1485
01:11:44,750 --> 01:11:49,370
thing that happens is neither one of

1486
01:11:47,690 --> 01:11:50,809
those attempts worked and that means

1487
01:11:49,370 --> 01:11:52,580
there's something there but it's not the

1488
01:11:50,810 --> 01:11:53,990
same as what's in the SRP registration

1489
01:11:52,580 --> 01:11:56,780
so now we have to actually go through

1490
01:11:53,990 --> 01:11:58,670
and iterate and so it's it's this

1491
01:11:56,780 --> 01:12:00,200
complicated state machine that just goes

1492
01:11:58,670 --> 01:12:04,040
through and does all the iterations adds

1493
01:12:00,200 --> 01:12:05,870
or or updates various records and if it

1494
01:12:04,040 --> 01:12:08,330
comes to a kata to a situation where it

1495
01:12:05,870 --> 01:12:10,970
realizes that there's something in the

1496
01:12:08,330 --> 01:12:13,160
zone that conflicts with the SRP

1497
01:12:10,970 --> 01:12:15,530
registration then it has to back

1498
01:12:13,160 --> 01:12:17,540
everything out and send a failure

1499
01:12:15,530 --> 01:12:19,009
response and on the other hand if it

1500
01:12:17,540 --> 01:12:22,250
gets all the way to the end and doesn't

1501
01:12:19,010 --> 01:12:24,710
have any problem then that was success

1502
01:12:22,250 --> 01:12:26,930
and it sends a success result

1503
01:12:24,710 --> 01:12:28,340
I've tested I think I've exhausted li

1504
01:12:26,930 --> 01:12:30,350
tested all the various different ways

1505
01:12:28,340 --> 01:12:31,730
that it can succeed or fail and they all

1506
01:12:30,350 --> 01:12:32,810
seem to work so it's pretty sweet it's

1507
01:12:31,730 --> 01:12:35,120
actually kind of fun to watch because

1508
01:12:32,810 --> 01:12:37,250
you see like one SRP update come in and

1509
01:12:35,120 --> 01:12:39,670
then like a bunch of events occur in the

1510
01:12:37,250 --> 01:12:44,630
log that was fun

1511
01:12:39,670 --> 01:12:45,980
future work home net integration we need

1512
01:12:44,630 --> 01:12:49,160
to we were talking about this on the

1513
01:12:45,980 --> 01:12:54,969
helmet mailing list actually h NCP

1514
01:12:49,160 --> 01:12:59,590
identifies links it would be nice if the

1515
01:12:54,970 --> 01:13:01,610
dns SD discovery proxy that was three

1516
01:12:59,590 --> 01:13:04,250
implementations ago if the discovery

1517
01:13:01,610 --> 01:13:06,309
proxy could take advantage of the

1518
01:13:04,250 --> 01:13:08,690
information that h NCP is sharing

1519
01:13:06,310 --> 01:13:11,450
packages for open wrt we already have

1520
01:13:08,690 --> 01:13:13,519
them but there's still some some work to

1521
01:13:11,450 --> 01:13:14,900
be done so that you can just install

1522
01:13:13,520 --> 01:13:16,220
them and it just works without you

1523
01:13:14,900 --> 01:13:17,929
having to fiddle around with it which

1524
01:13:16,220 --> 01:13:23,050
currently there's a readme file that has

1525
01:13:17,930 --> 01:13:25,700
a fair number of instructions in it so

1526
01:13:23,050 --> 01:13:27,350
that's one bit of future work that we

1527
01:13:25,700 --> 01:13:29,660
want to do another bit of future work is

1528
01:13:27,350 --> 01:13:32,180
a fully featured SRP client similar to

1529
01:13:29,660 --> 01:13:36,050
what Tim did except possibly we don't

1530
01:13:32,180 --> 01:13:40,160
know whether he did sig zero or not so

1531
01:13:36,050 --> 01:13:43,180
that would be really cool and it sounds

1532
01:13:40,160 --> 01:13:45,380
like it's gonna have to support TLS also

1533
01:13:43,180 --> 01:13:48,530
and I don't think that's a big come out

1534
01:13:45,380 --> 01:13:50,750
of work but needs to happen it would be

1535
01:13:48,530 --> 01:13:52,969
nice to have SRP support in some DNS

1536
01:13:50,750 --> 01:13:55,370
auth server and I'm thinking by nine

1537
01:13:52,970 --> 01:13:56,930
mark Andrews as I said has has talked to

1538
01:13:55,370 --> 01:13:59,360
me about some work that he's been doing

1539
01:13:56,930 --> 01:14:01,250
to make by nine support a wider variety

1540
01:13:59,360 --> 01:14:03,469
of different kinds of update strategies

1541
01:14:01,250 --> 01:14:06,830
and it would be kind of cool to add this

1542
01:14:03,470 --> 01:14:08,330
in as another update strategy mark has

1543
01:14:06,830 --> 01:14:10,070
indicated a willingness to to

1544
01:14:08,330 --> 01:14:11,900
collaborate with me to some extent on

1545
01:14:10,070 --> 01:14:14,000
SLO presumably I have to do most of the

1546
01:14:11,900 --> 01:14:17,440
work so I'm hoping that this will happen

1547
01:14:14,000 --> 01:14:17,440
before Singapore but I make no promises

1548
01:14:17,590 --> 01:14:22,580
SRP relay if we wind up having a

1549
01:14:20,810 --> 01:14:26,150
link-local anycast address for the

1550
01:14:22,580 --> 01:14:27,530
simple the IOT style SRP update you'll

1551
01:14:26,150 --> 01:14:29,450
be awfully nice to have a relay that

1552
01:14:27,530 --> 01:14:31,219
sits on the border router that's pretty

1553
01:14:29,450 --> 01:14:34,099
stupid and just relays it to the actual

1554
01:14:31,220 --> 01:14:36,329
SRP server rather than having to have an

1555
01:14:34,100 --> 01:14:40,460
SRP server on the border router

1556
01:14:36,329 --> 01:14:43,049
so that's that's my list of future work

1557
01:14:40,460 --> 01:14:44,250
I'm not promising that any of these

1558
01:14:43,050 --> 01:14:46,469
things will be done at any particular

1559
01:14:44,250 --> 01:14:48,300
time but they are definitely on the

1560
01:14:46,469 --> 01:14:49,739
agenda and if anybody's interested in

1561
01:14:48,300 --> 01:14:52,650
hacking on any of this stuff please let

1562
01:14:49,739 --> 01:14:53,968
me know and also if you're interested in

1563
01:14:52,650 --> 01:14:55,769
just like playing around with the stuff

1564
01:14:53,969 --> 01:14:59,070
that I've already got please let me know

1565
01:14:55,770 --> 01:15:01,889
there will be some information on the

1566
01:14:59,070 --> 01:15:04,889
next slide about that SRP the future of

1567
01:15:01,889 --> 01:15:06,420
SRP so s RP got one review during last

1568
01:15:04,889 --> 01:15:09,659
call thank you Tom

1569
01:15:06,420 --> 01:15:12,199
and the chairs were really mean and

1570
01:15:09,659 --> 01:15:14,339
decided that wasn't enough and so

1571
01:15:12,199 --> 01:15:15,960
complaint complaint so it turned out

1572
01:15:14,340 --> 01:15:18,389
that we talked about this in the home

1573
01:15:15,960 --> 01:15:19,949
net meeting on Tuesday and everybody

1574
01:15:18,389 --> 01:15:21,929
there seem to think this was useful and

1575
01:15:19,949 --> 01:15:25,019
so it seems like we really could have

1576
01:15:21,929 --> 01:15:27,059
gotten enough comments to make this work

1577
01:15:25,020 --> 01:15:28,679
look like it was like it had support but

1578
01:15:27,059 --> 01:15:31,079
we didn't because we didn't actually ask

1579
01:15:28,679 --> 01:15:34,159
HomeNet to comment on it so we're gonna

1580
01:15:31,079 --> 01:15:37,500
do that hopefully in another last call

1581
01:15:34,159 --> 01:15:39,388
so and so hopefully that'll mean that we

1582
01:15:37,500 --> 01:15:42,599
don't drop this and it gets published as

1583
01:15:39,389 --> 01:15:44,610
an RFC so my proposal is I'm gonna

1584
01:15:42,599 --> 01:15:45,929
update the document add in the stuff

1585
01:15:44,610 --> 01:15:51,540
that we've talked about we'll do another

1586
01:15:45,929 --> 01:15:54,750
review and try to include home that and

1587
01:15:51,540 --> 01:15:57,900
maybe DNS op although that could be

1588
01:15:54,750 --> 01:16:01,349
dangerous and hopefully that will result

1589
01:15:57,900 --> 01:16:06,710
in us being able to publish this so

1590
01:16:01,349 --> 01:16:09,360
that's all I got some good compost Terry

1591
01:16:06,710 --> 01:16:11,520
so there's one comment I made that you

1592
01:16:09,360 --> 01:16:13,170
didn't address that I think it should be

1593
01:16:11,520 --> 01:16:15,480
addressed in the document and check

1594
01:16:13,170 --> 01:16:18,059
that's it how do you delete a

1595
01:16:15,480 --> 01:16:21,409
registration before the least lifetime

1596
01:16:18,059 --> 01:16:25,710
expires and you may not want to do that

1597
01:16:21,409 --> 01:16:27,058
yes yeah sorry thank you I spaced out on

1598
01:16:25,710 --> 01:16:28,889
that and that's a really good point so

1599
01:16:27,059 --> 01:16:30,929
in other words we want in addition to an

1600
01:16:28,889 --> 01:16:38,489
SRP registration we want an SRP

1601
01:16:30,929 --> 01:16:41,849
registration yeah maybe I well so so DNS

1602
01:16:38,489 --> 01:16:44,040
SD / m DNS currently does do that right

1603
01:16:41,849 --> 01:16:46,920
if you have a device that that is

1604
01:16:44,040 --> 01:16:48,989
sending out an advertiser or has sent

1605
01:16:46,920 --> 01:16:50,040
out an advertisement to somebody that

1606
01:16:48,989 --> 01:16:51,509
it's on the network

1607
01:16:50,040 --> 01:16:53,820
when it when you shut it down if it's

1608
01:16:51,510 --> 01:16:56,100
able to send out a goodbye packet it

1609
01:16:53,820 --> 01:16:57,870
does and I think this is the equivalent

1610
01:16:56,100 --> 01:16:59,730
of that goodbye packet and I agree that

1611
01:16:57,870 --> 01:17:01,050
that's worth doing you know it's just an

1612
01:16:59,730 --> 01:17:03,299
omission so thank you for pointing that

1613
01:17:01,050 --> 01:17:06,110
out and then the other thing is if

1614
01:17:03,300 --> 01:17:09,300
there's anything that you learned

1615
01:17:06,110 --> 01:17:12,660
extending update I would be interesting

1616
01:17:09,300 --> 01:17:15,470
I think to incorporate these into a new

1617
01:17:12,660 --> 01:17:18,750
version of update that other

1618
01:17:15,470 --> 01:17:21,150
applications can benefit from and then

1619
01:17:18,750 --> 01:17:23,940
maybe one day this can migrate to update

1620
01:17:21,150 --> 01:17:26,040
through the new version of yeah I mean

1621
01:17:23,940 --> 01:17:28,559
if we were if we had it all to do over

1622
01:17:26,040 --> 01:17:29,730
again I mean I actually when I first

1623
01:17:28,560 --> 01:17:31,560
started working on this I was thinking

1624
01:17:29,730 --> 01:17:33,809
do we really want to do this in a DNS

1625
01:17:31,560 --> 01:17:35,460
packet I wound up doing it at a DNS

1626
01:17:33,810 --> 01:17:37,410
packet because it's just expedient it's

1627
01:17:35,460 --> 01:17:39,570
less work there's already stuff out

1628
01:17:37,410 --> 01:17:41,580
there that accepts dns updates and so I

1629
01:17:39,570 --> 01:17:43,590
was able to test it very easily and it's

1630
01:17:41,580 --> 01:17:45,600
all very straightforward if we really

1631
01:17:43,590 --> 01:17:48,750
wanted to do dns updates right we would

1632
01:17:45,600 --> 01:17:51,270
probably just have you know a doe thing

1633
01:17:48,750 --> 01:17:54,110
that does dns updates and has like a

1634
01:17:51,270 --> 01:17:57,360
more post

1635
01:17:54,110 --> 01:17:59,969
mhmmm like a post yeah well yeah I mean

1636
01:17:57,360 --> 01:18:03,480
sure but but but mainly that has like a

1637
01:17:59,970 --> 01:18:06,900
more rich prerequisites language so that

1638
01:18:03,480 --> 01:18:08,519
we can do a single update you know an

1639
01:18:06,900 --> 01:18:10,049
atomic update to the database that adds

1640
01:18:08,520 --> 01:18:11,400
everything at once and checks all the

1641
01:18:10,050 --> 01:18:13,110
prerequisites at once and so we don't

1642
01:18:11,400 --> 01:18:15,960
have the situation where I have to go in

1643
01:18:13,110 --> 01:18:17,549
add things back out you know the worst

1644
01:18:15,960 --> 01:18:19,110
case scenario is I add things that I

1645
01:18:17,550 --> 01:18:20,340
back out but something else stumbled

1646
01:18:19,110 --> 01:18:22,139
over something that I added in the

1647
01:18:20,340 --> 01:18:25,410
process and it backed out and now

1648
01:18:22,140 --> 01:18:26,880
everybody's unhappy we really want it to

1649
01:18:25,410 --> 01:18:28,500
be atomic but there isn't a way to do

1650
01:18:26,880 --> 01:18:30,540
that unless it's what's happening on the

1651
01:18:28,500 --> 01:18:33,120
server the first-come first-serve stuff

1652
01:18:30,540 --> 01:18:35,400
comes to mind is something that regular

1653
01:18:33,120 --> 01:18:37,849
update could benefit from as well yeah

1654
01:18:35,400 --> 01:18:40,440
yeah for sure

1655
01:18:37,850 --> 01:18:44,250
yeah and actually I think Marc would be

1656
01:18:40,440 --> 01:18:49,139
down with with adding that to by 9:00 so

1657
01:18:44,250 --> 01:18:54,770
anyway any other questions should we

1658
01:18:49,140 --> 01:18:54,770
move on to fate of the working group

1659
01:18:56,270 --> 01:18:59,480
thanks Ted

1660
01:19:05,050 --> 01:19:11,480
all right so our last agenda item which

1661
01:19:09,590 --> 01:19:15,260
can cover all the time we have left

1662
01:19:11,480 --> 01:19:17,690
which is until 3:30 so 40 minutes is

1663
01:19:15,260 --> 01:19:31,070
about the future of the working group so

1664
01:19:17,690 --> 01:19:33,980
the Tom okay so Tom brought this up on

1665
01:19:31,070 --> 01:19:38,480
the list so though thanks Tom that we

1666
01:19:33,980 --> 01:19:42,500
don't have that much feedback on some of

1667
01:19:38,480 --> 01:19:45,290
our latest documents and we were

1668
01:19:42,500 --> 01:19:47,630
wondering so kind of where do we go from

1669
01:19:45,290 --> 01:19:49,880
here we were considering for a while

1670
01:19:47,630 --> 01:19:52,280
reach our during this working group and

1671
01:19:49,880 --> 01:19:54,470
one of the main topics that we were

1672
01:19:52,280 --> 01:19:58,670
considering for the new charter was the

1673
01:19:54,470 --> 01:20:01,420
privacy work that said so that that is

1674
01:19:58,670 --> 01:20:04,250
still a possible viable path forward but

1675
01:20:01,420 --> 01:20:05,960
similarly there's not a it doesn't feel

1676
01:20:04,250 --> 01:20:10,730
like there's a huge amount of energy

1677
01:20:05,960 --> 01:20:12,380
going into the privacy work and so one

1678
01:20:10,730 --> 01:20:14,120
option which I'm not saying over and

1679
01:20:12,380 --> 01:20:16,760
recommending any of these but one that

1680
01:20:14,120 --> 01:20:18,920
has been suggested is to move that work

1681
01:20:16,760 --> 01:20:20,960
somewhere else and close this working

1682
01:20:18,920 --> 01:20:23,960
group so I wanted to hear feedback from

1683
01:20:20,960 --> 01:20:25,280
anyone in the working group of what are

1684
01:20:23,960 --> 01:20:28,880
your thoughts on this question what

1685
01:20:25,280 --> 01:20:30,530
should we be doing I'm looking for

1686
01:20:28,880 --> 01:20:31,700
feedback from all of our authors but

1687
01:20:30,530 --> 01:20:34,179
also from everyone else and then

1688
01:20:31,700 --> 01:20:34,179
community

1689
01:20:40,359 --> 01:20:45,289
Stuart Church again I want to echo what

1690
01:20:43,010 --> 01:20:48,619
David is saying from a personal

1691
01:20:45,289 --> 01:20:51,079
standpoint I think privacy is really

1692
01:20:48,619 --> 01:20:53,209
important and I think in the last year

1693
01:20:51,079 --> 01:20:55,308
there's been a lot more awareness of how

1694
01:20:53,209 --> 01:21:00,489
important privacy is and I think that's

1695
01:20:55,309 --> 01:21:03,769
only going to continue I thought about

1696
01:21:00,489 --> 01:21:05,829
these questions of how to do discovery

1697
01:21:03,769 --> 01:21:10,729
in a privacy preserving way a lot and I

1698
01:21:05,829 --> 01:21:12,289
don't know the answers so I think it's

1699
01:21:10,729 --> 01:21:15,559
important but I don't know how to do it

1700
01:21:12,289 --> 01:21:17,059
if there are other people in the working

1701
01:21:15,559 --> 01:21:18,649
group with good ideas and there's energy

1702
01:21:17,059 --> 01:21:24,109
for doing this I would love to support

1703
01:21:18,649 --> 01:21:26,359
that I I think it would be sad if we

1704
01:21:24,109 --> 01:21:28,070
wrap up the working group or just as the

1705
01:21:26,359 --> 01:21:29,479
whole world suddenly wakes up to the

1706
01:21:28,070 --> 01:21:33,499
importance of privacy that would be

1707
01:21:29,479 --> 01:21:34,849
unfortunate timing so I hope we can find

1708
01:21:33,499 --> 01:21:37,070
a way to move forward

1709
01:21:34,849 --> 01:21:38,570
unfortunately I've spent a lot of time

1710
01:21:37,070 --> 01:21:40,999
thinking about this and I have not

1711
01:21:38,570 --> 01:21:42,949
worked out any wonderful answer that

1712
01:21:40,999 --> 01:21:45,398
just solves all the problems and is also

1713
01:21:42,949 --> 01:21:51,888
efficient and reliable at the same time

1714
01:21:45,399 --> 01:21:57,079
Thank You Stuart Ted lemon so I actually

1715
01:21:51,889 --> 01:22:00,439
I attended a side meeting yesterday the

1716
01:21:57,079 --> 01:22:02,959
met up side meeting this is a group

1717
01:22:00,439 --> 01:22:04,519
that's been meeting sort of associated

1718
01:22:02,959 --> 01:22:06,858
with the IETF but hasn't really pushed

1719
01:22:04,519 --> 01:22:11,780
to actually form a working group here

1720
01:22:06,859 --> 01:22:14,179
and they are interested in this topic it

1721
01:22:11,780 --> 01:22:15,768
might be good to try to get some of the

1722
01:22:14,179 --> 01:22:18,919
people that are that are that show up

1723
01:22:15,769 --> 01:22:21,439
for those meetings circled in on this

1724
01:22:18,919 --> 01:22:23,358
whole DNS discovery privacy thing can I

1725
01:22:21,439 --> 01:22:30,139
ask you to elaborate on what that group

1726
01:22:23,359 --> 01:22:36,919
is about so they're met up what do they

1727
01:22:30,139 --> 01:22:43,820
call it distributed something privacy

1728
01:22:36,919 --> 01:22:45,499
it's very no yeah no distributor so

1729
01:22:43,820 --> 01:22:47,030
basically it's ad hoc privacy so

1730
01:22:45,499 --> 01:22:48,438
basically the same problem that we're

1731
01:22:47,030 --> 01:22:51,669
talking about there are other smells

1732
01:22:48,439 --> 01:22:52,810
related yeah really does sound related

1733
01:22:51,669 --> 01:22:54,700
they

1734
01:22:52,810 --> 01:22:58,600
working the the work that was presented

1735
01:22:54,700 --> 01:23:04,389
there this time was all about coming up

1736
01:22:58,600 --> 01:23:08,260
with and basically doing doing ad hoc

1737
01:23:04,390 --> 01:23:10,240
keying so so some work that that Daniel

1738
01:23:08,260 --> 01:23:13,270
con Gilmore has been has been doing with

1739
01:23:10,240 --> 01:23:14,490
a bunch of other people on coming up

1740
01:23:13,270 --> 01:23:17,950
with ways to do

1741
01:23:14,490 --> 01:23:20,469
encrypted email that doesn't suck that

1742
01:23:17,950 --> 01:23:23,320
has a good user experience which means

1743
01:23:20,470 --> 01:23:25,720
it's less secure but but it's still it's

1744
01:23:23,320 --> 01:23:27,280
better than nothing right so so that's

1745
01:23:25,720 --> 01:23:29,470
interesting and kind of not what we're

1746
01:23:27,280 --> 01:23:31,059
talking about there was another group

1747
01:23:29,470 --> 01:23:34,480
that was doing something similar with

1748
01:23:31,060 --> 01:23:36,010
instant messaging I think that the work

1749
01:23:34,480 --> 01:23:37,480
that we're doing isn't exactly the same

1750
01:23:36,010 --> 01:23:39,160
as the work that they're doing but it's

1751
01:23:37,480 --> 01:23:40,660
synergetic with it like they could take

1752
01:23:39,160 --> 01:23:41,950
advantage of what we're trying to do and

1753
01:23:40,660 --> 01:23:44,110
they would probably be interested in

1754
01:23:41,950 --> 01:23:45,490
what we're trying to do and they

1755
01:23:44,110 --> 01:23:47,200
probably know something about the

1756
01:23:45,490 --> 01:23:49,150
problem space and might be interested in

1757
01:23:47,200 --> 01:23:51,340
working on the problems that we're

1758
01:23:49,150 --> 01:23:52,750
working on too so that's why I say that

1759
01:23:51,340 --> 01:23:54,130
they would be good people to talk to I

1760
01:23:52,750 --> 01:23:55,780
think that even though they haven't

1761
01:23:54,130 --> 01:23:57,790
actually gone down the path that we've

1762
01:23:55,780 --> 01:23:59,080
gone down I think if we said hey what do

1763
01:23:57,790 --> 01:24:06,340
you think about this they'd all be like

1764
01:23:59,080 --> 01:24:09,670
whoo that sounds good thanks Christian

1765
01:24:06,340 --> 01:24:13,510
Arita mom well I've been the one trying

1766
01:24:09,670 --> 01:24:16,600
for some years to get privacy walk to

1767
01:24:13,510 --> 01:24:19,450
actually start into this walking group

1768
01:24:16,600 --> 01:24:22,840
and I've come to the conclusion that is

1769
01:24:19,450 --> 01:24:27,190
not gonna happen because I mean we have

1770
01:24:22,840 --> 01:24:29,800
been going for oil things now I think

1771
01:24:27,190 --> 01:24:34,780
that we did some a number of things that

1772
01:24:29,800 --> 01:24:35,980
should be somehow published and I think

1773
01:24:34,780 --> 01:24:38,860
I will need to find a way in particular

1774
01:24:35,980 --> 01:24:43,240
to publish the policy requirement

1775
01:24:38,860 --> 01:24:46,240
documents that we had because they is

1776
01:24:43,240 --> 01:24:50,530
the nicest air that could inspire other

1777
01:24:46,240 --> 01:24:52,780
solutions but as far as the studying of

1778
01:24:50,530 --> 01:24:55,660
solution I think that they would have to

1779
01:24:52,780 --> 01:25:00,219
come organically from the puzzle group

1780
01:24:55,660 --> 01:25:00,680
start doing any kind of discovery thanks

1781
01:25:00,220 --> 01:25:01,940
Christian

1782
01:25:00,680 --> 01:25:04,730
[Music]

1783
01:25:01,940 --> 01:25:06,740
and that makes sense to me if we were to

1784
01:25:04,730 --> 01:25:09,589
try to move the privacy requirements

1785
01:25:06,740 --> 01:25:11,120
document publication could we could I

1786
01:25:09,590 --> 01:25:12,740
have a show of hands on who would be

1787
01:25:11,120 --> 01:25:15,400
willing to read that document and

1788
01:25:12,740 --> 01:25:15,400
comment on it

1789
01:25:15,430 --> 01:25:21,950
thanks okay so I think we can try that

1790
01:25:20,230 --> 01:25:26,209
you're one of the authors right

1791
01:25:21,950 --> 01:25:27,860
Christian on that one yeah yeah given

1792
01:25:26,210 --> 01:25:30,410
the general level of energy on the

1793
01:25:27,860 --> 01:25:34,099
project I mean that's expired but

1794
01:25:30,410 --> 01:25:39,440
America could easily learn a new notion

1795
01:25:34,100 --> 01:25:42,350
to say rehydrate the draft ya know like

1796
01:25:39,440 --> 01:25:43,879
if you want to revive it and then email

1797
01:25:42,350 --> 01:25:45,470
the list for comments I think moving it

1798
01:25:43,880 --> 01:25:47,450
forward and publishing all of the

1799
01:25:45,470 --> 01:25:49,040
because that's true a lot of thought and

1800
01:25:47,450 --> 01:25:50,780
work has gone in this working group on

1801
01:25:49,040 --> 01:25:52,910
developing these requirements I think

1802
01:25:50,780 --> 01:25:53,929
public regardless of whether we come up

1803
01:25:52,910 --> 01:25:55,250
with a solution or not I think

1804
01:25:53,930 --> 01:25:58,840
publishing the requirements is a

1805
01:25:55,250 --> 01:26:02,600
reasonable thing so Thanks

1806
01:25:58,840 --> 01:26:04,640
so I'm Michael McCool or Intel and also

1807
01:26:02,600 --> 01:26:08,570
co-chair whether things working group in

1808
01:26:04,640 --> 01:26:10,430
33c and my interest in this is we are

1809
01:26:08,570 --> 01:26:12,170
trying to distribute information about

1810
01:26:10,430 --> 01:26:14,570
devices but want to do it in a

1811
01:26:12,170 --> 01:26:15,650
privacy-preserving way in fact it's one

1812
01:26:14,570 --> 01:26:17,120
of our requirements to get

1813
01:26:15,650 --> 01:26:20,299
recommendations together some that we

1814
01:26:17,120 --> 01:26:21,950
see but we fundamentally need a

1815
01:26:20,300 --> 01:26:25,310
discovery service to control

1816
01:26:21,950 --> 01:26:27,260
distribution of metadata and especially

1817
01:26:25,310 --> 01:26:29,600
in the home context most smart city

1818
01:26:27,260 --> 01:26:31,160
context and so this is kind of a funny

1819
01:26:29,600 --> 01:26:33,200
no requirement for what we want to

1820
01:26:31,160 --> 01:26:35,960
accomplish and we feel free consists of

1821
01:26:33,200 --> 01:26:39,139
adoption so the real question is where

1822
01:26:35,960 --> 01:26:41,960
does it work belong right so is it is it

1823
01:26:39,140 --> 01:26:44,000
should it be an extension of DNS there's

1824
01:26:41,960 --> 01:26:47,030
also work over in core on the core

1825
01:26:44,000 --> 01:26:48,980
resource directory right and so in my

1826
01:26:47,030 --> 01:26:51,259
opinion there's make two problems one is

1827
01:26:48,980 --> 01:26:52,429
the service by some metadata and there's

1828
01:26:51,260 --> 01:26:56,210
the question of how you find that

1829
01:26:52,430 --> 01:26:57,350
service right and in some cases I see

1830
01:26:56,210 --> 01:26:59,810
these things these functionalities

1831
01:26:57,350 --> 01:27:01,970
merged together and I really think there

1832
01:26:59,810 --> 01:27:03,860
should be a two separate phase with

1833
01:27:01,970 --> 01:27:05,210
authentication in between because really

1834
01:27:03,860 --> 01:27:07,700
what you do is get authenticated

1835
01:27:05,210 --> 01:27:08,870
information to data and so I noticed

1836
01:27:07,700 --> 01:27:10,099
earlier someone is saying if it's

1837
01:27:08,870 --> 01:27:12,530
published that everyone knows about it's

1838
01:27:10,100 --> 01:27:15,019
not secret anymore but actually even

1839
01:27:12,530 --> 01:27:18,108
like a address as a name

1840
01:27:15,019 --> 01:27:19,789
temperature sensor got got that local is

1841
01:27:18,109 --> 01:27:21,679
a leak of information about you know

1842
01:27:19,789 --> 01:27:23,869
what's available so I think it's

1843
01:27:21,679 --> 01:27:25,069
extremely important but I think you know

1844
01:27:23,869 --> 01:27:25,699
we need to think very hard about where

1845
01:27:25,069 --> 01:27:27,260
it belongs

1846
01:27:25,699 --> 01:27:29,598
maybe it shouldn't be in this group

1847
01:27:27,260 --> 01:27:31,579
because maybe it shouldn't be dns-based

1848
01:27:29,599 --> 01:27:33,499
we should be a new thing maybe you know

1849
01:27:31,579 --> 01:27:36,108
should only be the springboard for the

1850
01:27:33,499 --> 01:27:39,228
initial introduction to to a controlled

1851
01:27:36,109 --> 01:27:40,729
surface so I think I think maybe we need

1852
01:27:39,229 --> 01:27:42,469
to think of this as a higher level and

1853
01:27:40,729 --> 01:27:45,469
think really hard about where did belong

1854
01:27:42,469 --> 01:27:48,010
a group should be chartered to do a

1855
01:27:45,469 --> 01:27:49,969
privacy-preserving discovery service

1856
01:27:48,010 --> 01:27:56,389
that's definitely a possibility

1857
01:27:49,969 --> 01:27:59,299
thank you come on back so I think this

1858
01:27:56,389 --> 01:28:01,789
working group does valuable work and

1859
01:27:59,299 --> 01:28:05,719
we're not finished with this so closing

1860
01:28:01,789 --> 01:28:10,879
it down right now would just doesn't

1861
01:28:05,719 --> 01:28:13,969
make sense and my my view I think

1862
01:28:10,879 --> 01:28:16,818
there's we have a problem with the lack

1863
01:28:13,969 --> 01:28:18,319
of participation at least on the

1864
01:28:16,819 --> 01:28:20,149
discussion of the mailing list I mean

1865
01:28:18,319 --> 01:28:23,599
today I think we got got a good

1866
01:28:20,149 --> 01:28:27,469
discussion here on the things we bought

1867
01:28:23,599 --> 01:28:29,510
brought up on the agenda but that's yeah

1868
01:28:27,469 --> 01:28:32,359
that's I guess the problem and the

1869
01:28:29,510 --> 01:28:35,689
question is how can we get more people

1870
01:28:32,359 --> 01:28:38,989
maybe also from different angles and

1871
01:28:35,689 --> 01:28:40,579
doing different stuff to to notice and

1872
01:28:38,989 --> 01:28:45,468
also comment on the work which is done

1873
01:28:40,579 --> 01:28:47,898
here yeah and I guess after all so of

1874
01:28:45,469 --> 01:28:50,569
course not speaking for for him but I

1875
01:28:47,899 --> 01:28:52,399
think Tom didn't actually want it the

1876
01:28:50,569 --> 01:28:55,279
working group to shut down but just to

1877
01:28:52,399 --> 01:28:57,379
give wake-up call on that that's that

1878
01:28:55,279 --> 01:28:59,829
would be my guess because otherwise I

1879
01:28:57,379 --> 01:29:03,049
don't know if he would be sitting here

1880
01:28:59,829 --> 01:29:05,779
so I think yeah it's it's once again a

1881
01:29:03,049 --> 01:29:07,369
good call to just see if we can get

1882
01:29:05,779 --> 01:29:08,119
people interested in what we're doing

1883
01:29:07,369 --> 01:29:11,688
here

1884
01:29:08,119 --> 01:29:13,969
maybe they don't even know that there

1885
01:29:11,689 --> 01:29:15,349
would be something which would be

1886
01:29:13,969 --> 01:29:18,589
interesting for them which they could

1887
01:29:15,349 --> 01:29:20,569
give use the question I cannot answer is

1888
01:29:18,589 --> 01:29:24,139
how to get these people here and maybe

1889
01:29:20,569 --> 01:29:27,949
some more experience the ITF community

1890
01:29:24,139 --> 01:29:30,010
people have a better idea but I don't

1891
01:29:27,949 --> 01:29:30,009
know

1892
01:29:32,079 --> 01:29:39,170
you're agreeing here with my idiot on so

1893
01:29:36,980 --> 01:29:42,440
in the lack of interaction about the

1894
01:29:39,170 --> 01:29:45,110
privacy is kind of concerning ap to see

1895
01:29:42,440 --> 01:29:46,250
that five people IP to to review it so

1896
01:29:45,110 --> 01:29:48,768
there will be a good sign

1897
01:29:46,250 --> 01:29:51,079
now typically in this kind of document

1898
01:29:48,769 --> 01:29:54,050
you will not find the privacy people in

1899
01:29:51,079 --> 01:29:57,530
this room but in other rooms the

1900
01:29:54,050 --> 01:29:59,480
document can stay here but making some

1901
01:29:57,530 --> 01:30:01,969
publicity on this document in other

1902
01:29:59,480 --> 01:30:04,909
working group like Brian will do on

1903
01:30:01,969 --> 01:30:07,280
deprive in a couple of minutes is good

1904
01:30:04,909 --> 01:30:10,280
so it's up to you J as well to make some

1905
01:30:07,280 --> 01:30:13,280
publicity outside so the we we have

1906
01:30:10,280 --> 01:30:15,880
tried that in the past IITs starting I

1907
01:30:13,280 --> 01:30:20,179
think actually Montreal a year ago and

1908
01:30:15,880 --> 01:30:22,820
didn't get that much support from like

1909
01:30:20,179 --> 01:30:25,730
other people in this community or so in

1910
01:30:22,820 --> 01:30:27,650
the ITF community at large to come to

1911
01:30:25,730 --> 01:30:29,178
this working group perhaps one of the

1912
01:30:27,650 --> 01:30:31,969
reasons is that they care about privacy

1913
01:30:29,179 --> 01:30:34,820
but maybe not in this specific context

1914
01:30:31,969 --> 01:30:38,179
that then I'm speculating at that point

1915
01:30:34,820 --> 01:30:43,308
this was a minute Roy Fraser

1916
01:30:38,179 --> 01:30:45,829
agreed we ran Singh Michael Richardson

1917
01:30:43,309 --> 01:30:49,429
so I'll point out that sag is happening

1918
01:30:45,829 --> 01:30:50,509
right now sorry on a psychic working

1919
01:30:49,429 --> 01:30:52,519
group the security area where you can

1920
01:30:50,510 --> 01:30:52,820
group is right now where conflict with

1921
01:30:52,519 --> 01:30:56,389
it

1922
01:30:52,820 --> 01:30:59,420
okay so you know more empty chairs than

1923
01:30:56,389 --> 01:31:01,489
full all the people you wanted most of

1924
01:30:59,420 --> 01:31:04,070
them are unless they came here because

1925
01:31:01,489 --> 01:31:05,808
they you know I probably would have gone

1926
01:31:04,070 --> 01:31:08,869
there but I thought this was interesting

1927
01:31:05,809 --> 01:31:12,230
I was unaware I did read Christians

1928
01:31:08,869 --> 01:31:14,598
documents I have a vision of actually

1929
01:31:12,230 --> 01:31:16,940
thinking about it in my old office which

1930
01:31:14,599 --> 01:31:18,619
I haven't been to in two years so I mean

1931
01:31:16,940 --> 01:31:20,539
it was at least that long ago I was

1932
01:31:18,619 --> 01:31:24,558
unaware I just assumed they'd gone to

1933
01:31:20,539 --> 01:31:28,509
last call and gone it I was unaware that

1934
01:31:24,559 --> 01:31:33,469
they were stalled okay

1935
01:31:28,510 --> 01:31:36,010
so I would support the comment that yeah

1936
01:31:33,469 --> 01:31:39,889
the working group is having difficulties

1937
01:31:36,010 --> 01:31:42,619
and but I don't think it's time to give

1938
01:31:39,889 --> 01:31:47,420
up at this point

1939
01:31:42,619 --> 01:31:49,040
and let's get SRP published there's only

1940
01:31:47,420 --> 01:31:52,909
so many cycles for everybody in the

1941
01:31:49,040 --> 01:31:54,800
whole and the whole thing and I don't

1942
01:31:52,909 --> 01:31:57,230
think so we're certainly not done and I

1943
01:31:54,800 --> 01:32:03,980
would encourage Christian too to take up

1944
01:31:57,230 --> 01:32:07,790
the pen again as well and so um I think

1945
01:32:03,980 --> 01:32:10,699
one thing that we were probably supposed

1946
01:32:07,790 --> 01:32:13,460
to do probably me was to take Tom's

1947
01:32:10,699 --> 01:32:15,799
Charter discussions that are in the

1948
01:32:13,460 --> 01:32:18,380
github and start forwarding them around

1949
01:32:15,800 --> 01:32:21,020
to the group to look into potential

1950
01:32:18,380 --> 01:32:23,420
reach our during language to explicitly

1951
01:32:21,020 --> 01:32:30,500
support the secure the privacy efforts

1952
01:32:23,420 --> 01:32:33,920
here so I need to do that so tell them

1953
01:32:30,500 --> 01:32:36,679
an a couple things one just to reflect

1954
01:32:33,920 --> 01:32:47,270
back again what Pete no sorry what Mike

1955
01:32:36,679 --> 01:32:48,679
said Michael anyway sorry I have several

1956
01:32:47,270 --> 01:32:51,469
times missed the TLS working group

1957
01:32:48,679 --> 01:32:53,719
because it was off to the DNS SD so

1958
01:32:51,469 --> 01:32:56,179
again the likelihood of us actually

1959
01:32:53,719 --> 01:32:59,239
getting the the really deeply committed

1960
01:32:56,179 --> 01:33:02,770
privacy people in this room if we're

1961
01:32:59,239 --> 01:33:06,589
opposite any sec area meeting is zero

1962
01:33:02,770 --> 01:33:08,449
and so we have to have a heart if if

1963
01:33:06,590 --> 01:33:09,889
we're serious about doing this work and

1964
01:33:08,449 --> 01:33:11,210
if this is the working group to be doing

1965
01:33:09,889 --> 01:33:13,880
it and we have to have a hard

1966
01:33:11,210 --> 01:33:18,650
requirement that we have conflicts with

1967
01:33:13,880 --> 01:33:20,420
TLS sag deprive you know pretty much any

1968
01:33:18,650 --> 01:33:23,388
any working group that's doing anything

1969
01:33:20,420 --> 01:33:25,280
with what's related to privacy and I

1970
01:33:23,389 --> 01:33:27,110
absolutely agree and that's what we put

1971
01:33:25,280 --> 01:33:29,090
into the data tracker but at the end of

1972
01:33:27,110 --> 01:33:31,098
the way of the day I don't think there's

1973
01:33:29,090 --> 01:33:32,780
any single slot at ITF that doesn't

1974
01:33:31,099 --> 01:33:36,080
conflict with some security media yeah

1975
01:33:32,780 --> 01:33:39,019
yeah so maybe that's a good thing in a

1976
01:33:36,080 --> 01:33:41,090
sense so yeah so anyway the other thing

1977
01:33:39,020 --> 01:33:44,599
to point out is that this doesn't have

1978
01:33:41,090 --> 01:33:46,699
to happen at IETF meetings so one of the

1979
01:33:44,599 --> 01:33:48,170
things we can do and I think I might

1980
01:33:46,699 --> 01:33:49,699
take this as an action item is to

1981
01:33:48,170 --> 01:33:51,710
actually present something about this

1982
01:33:49,699 --> 01:33:54,429
unless one of the authors wants to at

1983
01:33:51,710 --> 01:33:56,110
the next how to RS c so the

1984
01:33:54,430 --> 01:33:57,910
like there's just a little more

1985
01:33:56,110 --> 01:33:59,230
visibility and people actually join the

1986
01:33:57,910 --> 01:34:01,870
mailing list and start discussing this

1987
01:33:59,230 --> 01:34:04,419
with us as far as the energy to work on

1988
01:34:01,870 --> 01:34:06,730
the document again what Michael was

1989
01:34:04,420 --> 01:34:10,300
saying is totally applicable to my

1990
01:34:06,730 --> 01:34:12,610
experience as well I reviewed all the

1991
01:34:10,300 --> 01:34:18,040
documents I sent substantial comments on

1992
01:34:12,610 --> 01:34:20,559
them and and then the work just just way

1993
01:34:18,040 --> 01:34:22,120
I stopped seeing new versions of the

1994
01:34:20,560 --> 01:34:24,220
document so it's not because I'm not

1995
01:34:22,120 --> 01:34:25,870
interested in the document and you know

1996
01:34:24,220 --> 01:34:27,340
I'm not saying this to blame anybody

1997
01:34:25,870 --> 01:34:29,380
because I've done the exact same thing

1998
01:34:27,340 --> 01:34:31,240
right like I've been busy working on

1999
01:34:29,380 --> 01:34:33,010
implementations of all of this stuff and

2000
01:34:31,240 --> 01:34:34,660
I haven't actually updated my documents

2001
01:34:33,010 --> 01:34:43,630
as frequently as might have been desired

2002
01:34:34,660 --> 01:34:46,180
so we I think that we have a lot of I

2003
01:34:43,630 --> 01:34:48,820
think we have a lot of expertise in this

2004
01:34:46,180 --> 01:34:50,080
room that's related to the problem space

2005
01:34:48,820 --> 01:34:51,820
that we're talking about it would be

2006
01:34:50,080 --> 01:34:54,880
ashamed to disband that expertise

2007
01:34:51,820 --> 01:34:56,530
expertise however I think that the clock

2008
01:34:54,880 --> 01:34:58,600
rate of this working group is not three

2009
01:34:56,530 --> 01:35:01,179
times a year and part of the reason why

2010
01:34:58,600 --> 01:35:02,770
it appears that there isn't energy to

2011
01:35:01,180 --> 01:35:04,270
work is that we're just not working that

2012
01:35:02,770 --> 01:35:05,410
fast it's not that we're not working

2013
01:35:04,270 --> 01:35:06,970
it's not that we're not making progress

2014
01:35:05,410 --> 01:35:11,290
it's just that we're not making progress

2015
01:35:06,970 --> 01:35:15,460
on a pulse rate of every four months so

2016
01:35:11,290 --> 01:35:17,100
I think that that that mere fact is not

2017
01:35:15,460 --> 01:35:19,690
a reason to disband the working group

2018
01:35:17,100 --> 01:35:23,140
thanks that makes sense and one of the

2019
01:35:19,690 --> 01:35:24,580
things we discussed actually is that we

2020
01:35:23,140 --> 01:35:26,380
don't necessarily have that much to talk

2021
01:35:24,580 --> 01:35:28,890
about every four months

2022
01:35:26,380 --> 01:35:31,810
so one potential option would be that

2023
01:35:28,890 --> 01:35:35,590
for neck one of the next ATF's either we

2024
01:35:31,810 --> 01:35:39,160
don't meet in person or we meet jointly

2025
01:35:35,590 --> 01:35:41,680
with another working group which on

2026
01:35:39,160 --> 01:35:43,690
Tuesday morning the HomeNet people who

2027
01:35:41,680 --> 01:35:45,190
did meet actually suggested that it

2028
01:35:43,690 --> 01:35:48,070
would be really useful if we could maybe

2029
01:35:45,190 --> 01:35:50,889
just do a joint session with the NSS D

2030
01:35:48,070 --> 01:35:52,690
and maybe have you know have a two-hour

2031
01:35:50,890 --> 01:35:56,650
session like we have here and have 30

2032
01:35:52,690 --> 01:35:57,370
minutes for HomeNet or so yeah that

2033
01:35:56,650 --> 01:36:00,849
sounds reasonable

2034
01:35:57,370 --> 01:36:01,930
stur yeah I like those suggestions I

2035
01:36:00,850 --> 01:36:06,310
like what I've been hearing

2036
01:36:01,930 --> 01:36:08,260
I think Eric right we all of us not just

2037
01:36:06,310 --> 01:36:11,800
the chairs need to

2038
01:36:08,260 --> 01:36:14,170
figure out how to publicize this I agree

2039
01:36:11,800 --> 01:36:16,180
with what Ted said that giving a hot RFC

2040
01:36:14,170 --> 01:36:20,260
torque is a great opportunity on Sunday

2041
01:36:16,180 --> 01:36:22,360
night to introduce people and you said

2042
01:36:20,260 --> 01:36:24,040
you already listed two security areas as

2043
01:36:22,360 --> 01:36:27,250
a conflict which is good

2044
01:36:24,040 --> 01:36:29,769
let's if we decide to continue for next

2045
01:36:27,250 --> 01:36:31,660
time let's try to stress that more with

2046
01:36:29,770 --> 01:36:34,870
the IHG because what I say about the

2047
01:36:31,660 --> 01:36:37,240
work of this working group evolving is

2048
01:36:34,870 --> 01:36:40,390
we have solved some of the initial

2049
01:36:37,240 --> 01:36:44,200
challenges of less reliance on multicast

2050
01:36:40,390 --> 01:36:46,120
and more reliable discovery and now

2051
01:36:44,200 --> 01:36:48,130
really the remaining goal we have is

2052
01:36:46,120 --> 01:36:51,610
this privacy work so we've almost

2053
01:36:48,130 --> 01:36:54,610
shifted from being a DNS working group

2054
01:36:51,610 --> 01:36:57,009
into a security area working group and

2055
01:36:54,610 --> 01:36:59,349
people outside this group have no way of

2056
01:36:57,010 --> 01:37:01,840
knowing that if we don't tell them sure

2057
01:36:59,350 --> 01:37:03,250
thanks Tom could I ask you to share your

2058
01:37:01,840 --> 01:37:09,400
thoughts since you sparked this

2059
01:37:03,250 --> 01:37:13,120
discussion on the mailing list yeah so I

2060
01:37:09,400 --> 01:37:15,160
think my email was in response to the

2061
01:37:13,120 --> 01:37:18,400
last caught working group last call of

2062
01:37:15,160 --> 01:37:20,740
those two documents which were you know

2063
01:37:18,400 --> 01:37:23,080
the main focus of the work of this

2064
01:37:20,740 --> 01:37:24,790
working group and having been the only

2065
01:37:23,080 --> 01:37:26,620
one who reviewed one of them and no one

2066
01:37:24,790 --> 01:37:31,090
reviewed the other I was pretty

2067
01:37:26,620 --> 01:37:32,410
discouraged so and it doesn't if you

2068
01:37:31,090 --> 01:37:34,290
think they're good then it doesn't take

2069
01:37:32,410 --> 01:37:37,120
a lot of work to say I think it's good

2070
01:37:34,290 --> 01:37:40,630
right that's all we needed but we got

2071
01:37:37,120 --> 01:37:43,030
nothing and so that made me think well

2072
01:37:40,630 --> 01:37:45,490
you know who are we doing this for and

2073
01:37:43,030 --> 01:37:49,809
then made me think about well initially

2074
01:37:45,490 --> 01:37:51,550
we had a group of people who came to us

2075
01:37:49,810 --> 01:37:55,270
and said they had a problem to be solved

2076
01:37:51,550 --> 01:37:59,110
and we solved it and we those people are

2077
01:37:55,270 --> 01:38:01,000
gone are they deploying this do they

2078
01:37:59,110 --> 01:38:03,460
have any attention to play it are they

2079
01:38:01,000 --> 01:38:06,370
asking their vendors to implement it so

2080
01:38:03,460 --> 01:38:09,330
they can deploy it and those are the

2081
01:38:06,370 --> 01:38:13,470
questions that I think we need to answer

2082
01:38:09,330 --> 01:38:13,470
and I think they're still unanswered

2083
01:38:13,950 --> 01:38:19,630
thank

2084
01:38:15,159 --> 01:38:21,429
and I guess so this from limited

2085
01:38:19,630 --> 01:38:23,679
experience I suspect that those are

2086
01:38:21,429 --> 01:38:26,139
markets that don't maybe evolve as crazy

2087
01:38:23,679 --> 01:38:29,199
quickly as other working groups so to

2088
01:38:26,139 --> 01:38:34,510
Ted's really a comment maybe giving them

2089
01:38:29,199 --> 01:38:36,428
time is what's needed here yeah just one

2090
01:38:34,510 --> 01:38:38,889
thing to say about the the adoption rate

2091
01:38:36,429 --> 01:38:44,019
is that if nobody is using if if there

2092
01:38:38,889 --> 01:38:47,979
isn't a device that can consume some of

2093
01:38:44,019 --> 01:38:49,360
the stuff that we've designed here then

2094
01:38:47,979 --> 01:38:51,969
there's no point in deploying that

2095
01:38:49,360 --> 01:38:53,860
functionality on your network once there

2096
01:38:51,969 --> 01:38:55,389
is a device that can consume that then

2097
01:38:53,860 --> 01:38:58,058
then suddenly it becomes more worthwhile

2098
01:38:55,389 --> 01:38:59,769
so the interest let's see if there's

2099
01:38:58,059 --> 01:39:05,800
additional uptake now that we actually

2100
01:38:59,769 --> 01:39:09,039
have DNS Bush in iOS and Mac OS next

2101
01:39:05,800 --> 01:39:11,679
generation and actually because that's a

2102
01:39:09,039 --> 01:39:14,169
very good point that's maybe not obvious

2103
01:39:11,679 --> 01:39:16,840
to everyone could someone from that

2104
01:39:14,169 --> 01:39:18,519
makes handheld devices comment on what's

2105
01:39:16,840 --> 01:39:27,340
currently supported and what's been

2106
01:39:18,519 --> 01:39:29,349
added recently yeah Ted actually

2107
01:39:27,340 --> 01:39:34,389
mentioned this on this slide but I agree

2108
01:39:29,349 --> 01:39:36,969
it's worth highlighting it Ted has been

2109
01:39:34,389 --> 01:39:38,289
working initially as a contractor and

2110
01:39:36,969 --> 01:39:40,380
now we've moved in hiring him full time

2111
01:39:38,289 --> 01:39:42,820
ted has been working at Apple

2112
01:39:40,380 --> 01:39:45,999
implementing this work in Mac OS and iOS

2113
01:39:42,820 --> 01:39:48,669
and I'm not leaking any secrets there

2114
01:39:45,999 --> 01:39:52,239
because this is in the public betas so

2115
01:39:48,669 --> 01:39:55,630
if you install iOS 13 or Mac OS

2116
01:39:52,239 --> 01:39:58,388
catallena then you have a fully

2117
01:39:55,630 --> 01:40:03,459
functioning push notification client and

2118
01:39:58,389 --> 01:40:06,599
it will connect to the discovery proxy

2119
01:40:03,459 --> 01:40:11,260
that we have running on open wrt and

2120
01:40:06,599 --> 01:40:13,659
it's very pleasing for me to be able to

2121
01:40:11,260 --> 01:40:15,459
turn services on and off and and see

2122
01:40:13,659 --> 01:40:21,789
them update life on my iPhone and see

2123
01:40:15,459 --> 01:40:23,829
that it's all working as it should one

2124
01:40:21,789 --> 01:40:27,730
thing I forgot to mention is when we

2125
01:40:23,829 --> 01:40:30,670
were off designing this protocol

2126
01:40:27,730 --> 01:40:34,059
like the discovery proxy that Stuart

2127
01:40:30,670 --> 01:40:36,670
Mosley designed the router and switch

2128
01:40:34,060 --> 01:40:40,000
vendors were coming up with alternate

2129
01:40:36,670 --> 01:40:42,880
solutions by taking listening for

2130
01:40:40,000 --> 01:40:45,300
broadcast arming multicast on one

2131
01:40:42,880 --> 01:40:48,040
network and sending them to another and

2132
01:40:45,300 --> 01:40:51,219
they've kind of went ahead and solved

2133
01:40:48,040 --> 01:40:54,489
the problem many switches and in the in

2134
01:40:51,219 --> 01:40:58,179
the routers and stuff in a non optimal

2135
01:40:54,489 --> 01:41:01,809
way but you know that those solutions

2136
01:40:58,179 --> 01:41:03,820
are deployed today in on campuses and so

2137
01:41:01,810 --> 01:41:06,670
we have to have some sort of compelling

2138
01:41:03,820 --> 01:41:12,489
reason for them to stop doing that and

2139
01:41:06,670 --> 01:41:13,330
start doing this Michael Richardson a

2140
01:41:12,489 --> 01:41:16,660
question

2141
01:41:13,330 --> 01:41:20,050
will and I think this is an

2142
01:41:16,660 --> 01:41:22,929
implementation issue question will I

2143
01:41:20,050 --> 01:41:26,800
discover devices at my home when it

2144
01:41:22,929 --> 01:41:31,420
connected to it over VPN okay wonderful

2145
01:41:26,800 --> 01:41:35,530
that is actually a really you know kind

2146
01:41:31,420 --> 01:41:38,520
of killer app yeah actually when I was

2147
01:41:35,530 --> 01:41:40,059
demoing this an apple before are all the

2148
01:41:38,520 --> 01:41:42,610
releasing occurred

2149
01:41:40,060 --> 01:41:45,370
I used that feature and it was really

2150
01:41:42,610 --> 01:41:49,540
awesome I did it I did a print print out

2151
01:41:45,370 --> 01:41:51,130
over the internet from California my

2152
01:41:49,540 --> 01:41:54,219
printer was at home and I had an IOT

2153
01:41:51,130 --> 01:41:55,449
camera pointing at it I printed to it

2154
01:41:54,219 --> 01:41:56,940
and the little page came out and

2155
01:41:55,449 --> 01:41:59,620
everybody was all excited

2156
01:41:56,940 --> 01:42:02,530
that's very cool I just wanted to

2157
01:41:59,620 --> 01:42:05,710
mention to Tom's point that yes there

2158
01:42:02,530 --> 01:42:10,120
are a lot of implementations of various

2159
01:42:05,710 --> 01:42:11,739
hacks that purport to make multicast dns

2160
01:42:10,120 --> 01:42:14,710
work on multiple links and our

2161
01:42:11,739 --> 01:42:16,629
experience with them is that frequently

2162
01:42:14,710 --> 01:42:19,810
they don't work at all

2163
01:42:16,630 --> 01:42:21,880
sometimes they tease you by working a

2164
01:42:19,810 --> 01:42:29,020
little bit and then failing I have never

2165
01:42:21,880 --> 01:42:31,540
seen one that actually works so yeah I

2166
01:42:29,020 --> 01:42:33,969
just want to expand a little bit on the

2167
01:42:31,540 --> 01:42:35,980
funny story that Ted told he did this a

2168
01:42:33,969 --> 01:42:37,900
demo for the guy in charge of our

2169
01:42:35,980 --> 01:42:39,218
department and he wouldn't think it

2170
01:42:37,900 --> 01:42:41,410
would make any difference because you

2171
01:42:39,219 --> 01:42:43,300
could have a diagram on a slide with

2172
01:42:41,410 --> 01:42:44,590
with boxes and arrows and things and

2173
01:42:43,300 --> 01:42:47,140
saying the packets go here and this

2174
01:42:44,590 --> 01:42:50,860
happens but there's something about the

2175
01:42:47,140 --> 01:42:52,540
showmanship so Ted Ted had the live

2176
01:42:50,860 --> 01:42:54,040
video on the screen of the key little

2177
01:42:52,540 --> 01:42:55,510
camera pointed at his printer at home

2178
01:42:54,040 --> 01:42:57,100
when he tapped their print on his phone

2179
01:42:55,510 --> 01:42:58,600
and we could see the piece of paper come

2180
01:42:57,100 --> 01:43:01,270
out and the whole room erupted in

2181
01:42:58,600 --> 01:43:07,600
applause it was amazing so maybe what we

2182
01:43:01,270 --> 01:43:11,980
need more here is Apple marketing okay

2183
01:43:07,600 --> 01:43:14,230
so it feels to me like there is some

2184
01:43:11,980 --> 01:43:17,230
pretty good consensus in the room that

2185
01:43:14,230 --> 01:43:20,889
there is still energy to do work and get

2186
01:43:17,230 --> 01:43:24,370
documents published maybe not as a crazy

2187
01:43:20,890 --> 01:43:28,330
fast rate but that's okay

2188
01:43:24,370 --> 01:43:31,000
so my sense is to keep this working

2189
01:43:28,330 --> 01:43:33,040
group open keep the mailing list open

2190
01:43:31,000 --> 01:43:37,150
and then maybe we'll have a shorter

2191
01:43:33,040 --> 01:43:40,060
meeting in Singapore will seem by the

2192
01:43:37,150 --> 01:43:42,700
time we get there how many or yeah joint

2193
01:43:40,060 --> 01:43:46,420
with home net that's it'll depend on

2194
01:43:42,700 --> 01:43:48,429
what we get on the agenda so to our

2195
01:43:46,420 --> 01:43:50,050
authors please don't wait to the day

2196
01:43:48,430 --> 01:43:51,640
before the meeting to send us your

2197
01:43:50,050 --> 01:43:54,010
agenda items that would be particularly

2198
01:43:51,640 --> 01:44:01,750
helpful in scheduling us this time for

2199
01:43:54,010 --> 01:44:06,190
how much time I want to have all right

2200
01:44:01,750 --> 01:44:10,540
then we'll wrap up anyone else have

2201
01:44:06,190 --> 01:44:12,040
anything they want to mention I really

2202
01:44:10,540 --> 01:44:15,100
don't want to prolong this is Ted again

2203
01:44:12,040 --> 01:44:16,720
but what I actually think is gonna wind

2204
01:44:15,100 --> 01:44:19,360
up on the agenda for Singapore is a

2205
01:44:16,720 --> 01:44:21,340
product as a presentation about how

2206
01:44:19,360 --> 01:44:23,349
we're using the stuff in home net so it

2207
01:44:21,340 --> 01:44:24,880
will actually not really be a home that

2208
01:44:23,350 --> 01:44:28,930
thing or a DNS is do you think that a

2209
01:44:24,880 --> 01:44:37,600
both think how fitting has anyone not

2210
01:44:28,930 --> 01:44:40,600
signed the blue sheets and so to wrap up

2211
01:44:37,600 --> 01:44:43,690
I think we got a sub in for we got a

2212
01:44:40,600 --> 01:44:44,710
good information about the two upcoming

2213
01:44:43,690 --> 01:44:47,919
documents the ones that are almost

2214
01:44:44,710 --> 01:44:49,630
published so we're gonna discuss those

2215
01:44:47,920 --> 01:44:50,920
more on the list and hopefully with that

2216
01:44:49,630 --> 01:44:52,990
renewed energy we're going to get them

2217
01:44:50,920 --> 01:44:54,850
published which is great and then

2218
01:44:52,990 --> 01:44:55,150
Christians going to revive the privacy

2219
01:44:54,850 --> 01:44:58,690
of

2220
01:44:55,150 --> 01:45:01,120
Arvin's document so hopefully we'll

2221
01:44:58,690 --> 01:45:04,269
actually see you on the list and not

2222
01:45:01,120 --> 01:45:04,929
just in Singapore and hope to see you

2223
01:45:04,270 --> 01:45:09,010
soon there

2224
01:45:04,929 --> 01:45:12,880
thanks for coming and thank you to our

2225
01:45:09,010 --> 01:45:18,659
note takers Michael and Christian number

2226
01:45:12,880 --> 01:45:18,659
two or one to put you in

