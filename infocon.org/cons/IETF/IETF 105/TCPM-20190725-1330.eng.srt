1
00:02:15,870 --> 00:02:18,969
[Music]

2
00:02:26,280 --> 00:02:31,590
it's TCPS Roman into some recipient

3
00:02:30,879 --> 00:02:38,988
place

4
00:02:31,590 --> 00:02:38,989
town or leave X or

5
00:03:01,230 --> 00:03:05,810
other presenters name my first there

6
00:03:13,879 --> 00:03:21,929
okay this is TCP I'm welcome my name is

7
00:03:17,280 --> 00:03:25,620
Marco Dixon my name is Lucy my name is

8
00:03:21,930 --> 00:03:26,550
Michael chauffeur so can you do the next

9
00:03:25,620 --> 00:03:31,680
slide

10
00:03:26,550 --> 00:03:33,450
ah maybe I can this is the node well it

11
00:03:31,680 --> 00:03:38,160
applies not only to this session but to

12
00:03:33,450 --> 00:03:39,209
every session so you have seen it we

13
00:03:38,160 --> 00:03:42,060
don't need a note-taker

14
00:03:39,209 --> 00:03:43,500
thank you for Richard and Gauri for be

15
00:03:42,060 --> 00:03:47,459
willing to do that

16
00:03:43,500 --> 00:03:49,019
Micra is doing the JavaScript and if you

17
00:03:47,459 --> 00:03:53,190
are going to the Mike state your name

18
00:03:49,019 --> 00:03:55,680
and make sure that the note takers can

19
00:03:53,190 --> 00:04:01,079
see your batch if they don't know your

20
00:03:55,680 --> 00:04:02,849
name so that's the agenda we give

21
00:04:01,079 --> 00:04:05,250
awaking working group of status update

22
00:04:02,849 --> 00:04:08,238
we have the talks or presentations

23
00:04:05,250 --> 00:04:15,889
regarding three working group documents

24
00:04:08,239 --> 00:04:19,260
RFC 21 40 bits the RFC 793 bits and a

25
00:04:15,889 --> 00:04:22,880
document which is at the end of the last

26
00:04:19,260 --> 00:04:26,789
call period the converter draft and

27
00:04:22,880 --> 00:04:30,150
after that we have several presentations

28
00:04:26,789 --> 00:04:33,300
regarding non working group documents

29
00:04:30,150 --> 00:04:36,599
one is about hi start plus plus then two

30
00:04:33,300 --> 00:04:39,150
presentations regarding yang on gory

31
00:04:36,600 --> 00:04:41,160
walls says something generic regarding

32
00:04:39,150 --> 00:04:43,770
conditional control and at the end we

33
00:04:41,160 --> 00:04:48,240
have a presentation regarding the new

34
00:04:43,770 --> 00:04:53,010
TCP proposed TCP a feature called TCP

35
00:04:48,240 --> 00:04:57,750
export is there any requests for

36
00:04:53,010 --> 00:05:00,780
changing anything that's not the case

37
00:04:57,750 --> 00:05:04,180
then we will follow that a Jemma

38
00:05:00,780 --> 00:05:07,989
we have a couple of documents the first

39
00:05:04,180 --> 00:05:10,439
one is the shepherdess Michaels past the

40
00:05:07,990 --> 00:05:10,439
Micah Micah

41
00:05:11,039 --> 00:05:15,490
yes so the first document that you're

42
00:05:13,840 --> 00:05:17,830
about to finish is deity chicken

43
00:05:15,490 --> 00:05:19,599
converter one so for that I have started

44
00:05:17,830 --> 00:05:21,370
a working class code you see here on the

45
00:05:19,599 --> 00:05:23,949
slide that I've put in there but almost

46
00:05:21,370 --> 00:05:26,169
finished almost means that I'm basically

47
00:05:23,949 --> 00:05:28,840
waiting for confirmation from felt that

48
00:05:26,169 --> 00:05:31,359
he's or a pretty comprehensive review

49
00:05:28,840 --> 00:05:34,029
and has been addressed other than that I

50
00:05:31,360 --> 00:05:36,400
think we are find that this my blend is

51
00:05:34,029 --> 00:05:38,740
too close to work in coop last call once

52
00:05:36,400 --> 00:05:41,310
I have this confirmation from foe and

53
00:05:38,740 --> 00:05:44,469
then we will move on you don't have a

54
00:05:41,310 --> 00:05:48,430
presentation on this draft later in this

55
00:05:44,469 --> 00:05:50,189
session but as I said I'm going to close

56
00:05:48,430 --> 00:05:52,900
to work in coop last call

57
00:05:50,189 --> 00:05:56,189
once I have to conversate confirmation

58
00:05:52,900 --> 00:05:58,388
from fault that all comes addressed and

59
00:05:56,189 --> 00:05:59,860
finally I've done this on the list

60
00:05:58,389 --> 00:06:02,379
already I would just want to give the

61
00:05:59,860 --> 00:06:06,219
heads up we have seen as part of the

62
00:06:02,379 --> 00:06:07,839
last call an IPO declaration I assume

63
00:06:06,219 --> 00:06:10,750
that you're all familiar with that and

64
00:06:07,839 --> 00:06:18,759
so if there's no comment on that we

65
00:06:10,750 --> 00:06:23,430
assume that that's not an issue okay so

66
00:06:18,759 --> 00:06:26,409
then we have a document accurate easy in

67
00:06:23,430 --> 00:06:31,180
the working group last call for that is

68
00:06:26,409 --> 00:06:33,430
planned soon soon means we hope to get

69
00:06:31,180 --> 00:06:37,479
it done such that the working group last

70
00:06:33,430 --> 00:06:40,389
call ends before the next ITF we have

71
00:06:37,479 --> 00:06:43,870
generalized ezn the document has been

72
00:06:40,389 --> 00:06:46,449
updated we have the RTO consider

73
00:06:43,870 --> 00:06:50,110
document that hasn't been updated but

74
00:06:46,449 --> 00:06:54,939
since the last IETF but we found two

75
00:06:50,110 --> 00:06:58,029
reviewers Gauri and Jenna have said that

76
00:06:54,939 --> 00:07:01,180
they will review this we have a document

77
00:06:58,029 --> 00:07:05,259
checkered Shepherd for it is Yoshi fumu

78
00:07:01,180 --> 00:07:08,830
for me and so we hope that we get

79
00:07:05,259 --> 00:07:12,569
something done by the next IAT Evan

80
00:07:08,830 --> 00:07:12,568
opposite the mic I

81
00:07:12,849 --> 00:07:18,369
gone generalized ACN it's being ready

82
00:07:16,689 --> 00:07:21,849
for working great law school for about

83
00:07:18,369 --> 00:07:24,789
six months three IDs now what's

84
00:07:21,849 --> 00:07:28,688
happening you've got a list comment on

85
00:07:24,789 --> 00:07:35,830
that one you've received a list comment

86
00:07:28,689 --> 00:07:37,449
on that one from you okay check the

87
00:07:35,830 --> 00:07:44,378
listing there's a comment on that one

88
00:07:37,449 --> 00:07:49,869
and so please work on it then we have to

89
00:07:44,379 --> 00:07:52,689
base document 793 and 21:40 we have

90
00:07:49,869 --> 00:07:55,869
presentations regarding them and the

91
00:07:52,689 --> 00:07:58,539
last document eCPM rack has been updated

92
00:07:55,869 --> 00:08:11,860
it seems to be stable and we will figure

93
00:07:58,539 --> 00:08:14,229
out how to progress that document hi

94
00:08:11,860 --> 00:08:17,709
this is Praveen I had a comment on the

95
00:08:14,229 --> 00:08:19,329
rack document so it seems to be stable I

96
00:08:17,709 --> 00:08:21,879
think we gave some feedback and that's

97
00:08:19,329 --> 00:08:24,069
been updated so I think it would be very

98
00:08:21,879 --> 00:08:27,579
it's very close to last call in my

99
00:08:24,069 --> 00:08:29,889
opinion other than minor editorial fixes

100
00:08:27,579 --> 00:08:33,399
it seems ready to me so what do the

101
00:08:29,889 --> 00:08:37,959
chairs think about that basically that

102
00:08:33,399 --> 00:08:41,159
says share that you so we will contact

103
00:08:37,958 --> 00:08:43,838
the authors and see how to progress that

104
00:08:41,159 --> 00:08:46,959
um it would be good if you can provide

105
00:08:43,839 --> 00:08:49,709
the feedback to the wrist or to the

106
00:08:46,959 --> 00:08:53,250
authors probably better to the list I

107
00:08:49,709 --> 00:08:53,250
will do that thank you

108
00:09:01,329 --> 00:09:08,229
that's the last slide so this means we

109
00:09:05,230 --> 00:09:10,989
go to the presentations one note we have

110
00:09:08,230 --> 00:09:13,170
a packed agenda so please try to stay on

111
00:09:10,989 --> 00:09:18,189
your time limits

112
00:09:13,170 --> 00:09:45,040
the first one is Michael on our C 21 40

113
00:09:18,189 --> 00:09:45,939
bit okay yeah 21:40 piece update - 2140

114
00:09:45,040 --> 00:09:50,079
next slide please

115
00:09:45,939 --> 00:09:55,469
oh yes I can do it now I do it but that

116
00:09:50,079 --> 00:10:00,729
doesn't really work I just try to focus

117
00:09:55,470 --> 00:10:08,669
no I mean it works but in this aligned

118
00:10:00,730 --> 00:10:13,179
way that's good got it

119
00:10:08,669 --> 00:10:15,459
okay I guess one important thing to

120
00:10:13,179 --> 00:10:18,429
point out about that slide is the number

121
00:10:15,459 --> 00:10:21,189
o six which means that this thing has

122
00:10:18,429 --> 00:10:22,779
gone through several updates and reviews

123
00:10:21,189 --> 00:10:26,618
and comments in this group already

124
00:10:22,779 --> 00:10:28,360
before adoption that was because at that

125
00:10:26,619 --> 00:10:29,470
time we were asking for PCP and that's

126
00:10:28,360 --> 00:10:32,499
no longer the case now it's

127
00:10:29,470 --> 00:10:34,689
informational and adopted as such quick

128
00:10:32,499 --> 00:10:36,429
list of some updates that we made we

129
00:10:34,689 --> 00:10:38,559
reissued it with the correct name we

130
00:10:36,429 --> 00:10:41,529
cleaned some often references to T TCP

131
00:10:38,559 --> 00:10:45,249
there was a lot of some some well

132
00:10:41,529 --> 00:10:48,239
ancient texts in in this draft that

133
00:10:45,249 --> 00:10:50,559
really had to be removed from from 21:40

134
00:10:48,239 --> 00:10:53,049
moved references to the informative

135
00:10:50,559 --> 00:10:54,939
section and updated section to updated

136
00:10:53,049 --> 00:11:00,239
to clarify that there is no impact on

137
00:10:54,939 --> 00:11:07,139
interoperability and updated appendix B

138
00:11:00,239 --> 00:11:09,999
as per request so regarding next steps

139
00:11:07,139 --> 00:11:12,730
we as two others thought it through we

140
00:11:09,999 --> 00:11:14,600
don't find very much we believe this is

141
00:11:12,730 --> 00:11:15,889
pretty much ready

142
00:11:14,600 --> 00:11:18,949
except there's one thing that we would

143
00:11:15,889 --> 00:11:20,930
like to include the document discusses

144
00:11:18,949 --> 00:11:22,849
in Samba sharing and temporal sharing

145
00:11:20,930 --> 00:11:25,430
right sharing assemblage when you have

146
00:11:22,850 --> 00:11:27,079
parallel ongoing TCP connections they

147
00:11:25,430 --> 00:11:29,839
would share information between them and

148
00:11:27,079 --> 00:11:31,040
temporal is connection is over new

149
00:11:29,839 --> 00:11:33,800
connection comes and you should learn

150
00:11:31,040 --> 00:11:36,800
something from the previous now it just

151
00:11:33,800 --> 00:11:40,008
talks about these things and it doesn't

152
00:11:36,800 --> 00:11:42,258
really say anything about time

153
00:11:40,009 --> 00:11:44,600
what does later connections mean right

154
00:11:42,259 --> 00:11:47,149
it doesn't discuss timescales it doesn't

155
00:11:44,600 --> 00:11:51,290
discuss what is successful sharing its

156
00:11:47,149 --> 00:11:53,060
resolve party CP convergence so the we

157
00:11:51,290 --> 00:11:53,509
plan to add a short section on these

158
00:11:53,060 --> 00:11:58,008
things

159
00:11:53,509 --> 00:12:00,980
the next version that will talk a little

160
00:11:58,009 --> 00:12:03,560
bit about how long TCP information is

161
00:12:00,980 --> 00:12:05,930
valid which is very much dependent on

162
00:12:03,560 --> 00:12:06,619
what information it is to give you an

163
00:12:05,930 --> 00:12:09,079
example

164
00:12:06,620 --> 00:12:10,490
RT t bar for example that reflects the

165
00:12:09,079 --> 00:12:12,050
current traffic behavior and it's

166
00:12:10,490 --> 00:12:15,740
probably something that a week later

167
00:12:12,050 --> 00:12:17,959
makes no sense at all tier 4 states okay

168
00:12:15,740 --> 00:12:19,310
week probably is too much too much for

169
00:12:17,959 --> 00:12:20,959
that as well but it does reflect the

170
00:12:19,310 --> 00:12:23,060
state from the pier and the past state

171
00:12:20,959 --> 00:12:25,609
so unless the path changes and unless

172
00:12:23,060 --> 00:12:27,439
the pier is upgraded or changed that may

173
00:12:25,610 --> 00:12:28,939
be well it for a long time you know it

174
00:12:27,439 --> 00:12:34,459
may actually even make sense to keep it

175
00:12:28,939 --> 00:12:38,120
for a week to just try it so these are

176
00:12:34,459 --> 00:12:39,920
two very different cases and if you have

177
00:12:38,120 --> 00:12:42,259
some very long lasting state this may

178
00:12:39,920 --> 00:12:44,779
also benefit from special consideration

179
00:12:42,259 --> 00:12:46,759
there are some constants that you may

180
00:12:44,779 --> 00:12:48,230
find all the time I've never worked you

181
00:12:46,759 --> 00:12:50,180
know if something never worked in a week

182
00:12:48,230 --> 00:12:52,310
on the same path with the same host with

183
00:12:50,180 --> 00:12:53,899
the same destination and the host is

184
00:12:52,310 --> 00:12:56,750
maybe not the mobile one staying in the

185
00:12:53,899 --> 00:12:59,600
same place at some point it may make

186
00:12:56,750 --> 00:13:01,430
sense to Jo and start adjusting them so

187
00:12:59,600 --> 00:13:05,620
there are some ideas that come from a

188
00:13:01,430 --> 00:13:07,939
previous draft from Jo touch this

189
00:13:05,620 --> 00:13:10,250
automatic adjustment of the initial

190
00:13:07,939 --> 00:13:12,889
window this is just an example

191
00:13:10,250 --> 00:13:14,990
considering the initial window right now

192
00:13:12,889 --> 00:13:17,389
we have this experimental initial window

193
00:13:14,990 --> 00:13:19,670
10 we have some most using larger values

194
00:13:17,389 --> 00:13:22,250
we have some hosts using smaller values

195
00:13:19,670 --> 00:13:24,410
a question is simply if you could be a

196
00:13:22,250 --> 00:13:25,970
little bit more dynamic I think this is

197
00:13:24,410 --> 00:13:27,469
a good slide to remind readers that this

198
00:13:25,970 --> 00:13:28,070
is an informational document so we're

199
00:13:27,470 --> 00:13:30,230
not proposing

200
00:13:28,070 --> 00:13:32,030
an algorithm that would be you know

201
00:13:30,230 --> 00:13:35,710
recommended for anybody to implement

202
00:13:32,030 --> 00:13:38,720
it's just a description of possibilities

203
00:13:35,710 --> 00:13:41,000
well so if you know for instance a very

204
00:13:38,720 --> 00:13:43,190
large initial window never work to one

205
00:13:41,000 --> 00:13:45,940
destination for a long long time it

206
00:13:43,190 --> 00:13:48,320
probably isn't really useful to keep if

207
00:13:45,940 --> 00:13:50,150
the sender's congestion window always

208
00:13:48,320 --> 00:13:53,600
gets much larger than the initial window

209
00:13:50,150 --> 00:13:57,199
is and why limit it to ten maybe if you

210
00:13:53,600 --> 00:13:59,630
do pay spacing as well the interesting

211
00:13:57,200 --> 00:14:01,340
thing here is that adding send some

212
00:13:59,630 --> 00:14:04,700
dynami city to this would automatically

213
00:14:01,340 --> 00:14:06,950
do an experiment and auto adjust to the

214
00:14:04,700 --> 00:14:10,520
environment so you that is in line with

215
00:14:06,950 --> 00:14:11,960
this other draft from Joe if you would

216
00:14:10,520 --> 00:14:15,560
have an old and a slow network

217
00:14:11,960 --> 00:14:17,630
connection that has a small a small note

218
00:14:15,560 --> 00:14:19,400
that might just never increase its

219
00:14:17,630 --> 00:14:21,200
initial window even over weeks a month

220
00:14:19,400 --> 00:14:24,500
so that this draft talks about you know

221
00:14:21,200 --> 00:14:26,450
long timescales my own office machine

222
00:14:24,500 --> 00:14:28,070
where the network is prepared your own

223
00:14:26,450 --> 00:14:30,410
permanently upgraded together with a

224
00:14:28,070 --> 00:14:33,470
backbone that might dynamically change

225
00:14:30,410 --> 00:14:40,939
the windows so these considerations may

226
00:14:33,470 --> 00:14:42,800
make sense regarding these things there

227
00:14:40,940 --> 00:14:44,960
are different types of feedback that can

228
00:14:42,800 --> 00:14:47,319
influence these distant Emma City

229
00:14:44,960 --> 00:14:49,910
currently this is all convergence based

230
00:14:47,320 --> 00:14:51,230
the end values affect the future

231
00:14:49,910 --> 00:14:53,510
predictions simply by how the statistics

232
00:14:51,230 --> 00:14:56,870
aggregate but there are other ways that

233
00:14:53,510 --> 00:14:59,480
that could be done we would call them

234
00:14:56,870 --> 00:15:01,370
implicit and explicit implicit will be a

235
00:14:59,480 --> 00:15:03,440
matter of tracking well initial

236
00:15:01,370 --> 00:15:04,970
conditions persist over a connection I

237
00:15:03,440 --> 00:15:06,740
suppose it could be a very specific

238
00:15:04,970 --> 00:15:09,680
thing like looking at a particular

239
00:15:06,740 --> 00:15:14,690
packet exchange again this will be just

240
00:15:09,680 --> 00:15:16,959
a discussion of these possibilities and

241
00:15:14,690 --> 00:15:20,320
that's it I think it's last slide

242
00:15:16,960 --> 00:15:20,320
questions comments

243
00:15:25,680 --> 00:15:32,829
so very fast em ya hunger talk I'm going

244
00:15:30,310 --> 00:15:34,989
to talk later but and I'm curious to

245
00:15:32,829 --> 00:15:37,390
know what sort of numbers you have from

246
00:15:34,990 --> 00:15:39,250
other RFC's just these time periods or

247
00:15:37,390 --> 00:15:41,140
whether you're gonna say oh we can do it

248
00:15:39,250 --> 00:15:43,329
in future so did you come across any

249
00:15:41,140 --> 00:15:48,180
numbers to say how long you think a past

250
00:15:43,329 --> 00:15:48,180
valid I did not okay

251
00:15:59,010 --> 00:16:03,240
how many people have read that document

252
00:16:05,670 --> 00:16:13,060
okay so give it a read um I guess you

253
00:16:09,820 --> 00:16:15,970
want to change you said you want to

254
00:16:13,060 --> 00:16:19,300
update the document yeah I think so this

255
00:16:15,970 --> 00:16:22,529
yeah okay so then we are looking forward

256
00:16:19,300 --> 00:16:32,170
to in your region thank you

257
00:16:22,529 --> 00:16:51,640
alright so that - where's can you hear

258
00:16:32,170 --> 00:16:59,829
me yes they're trying to get the slides

259
00:16:51,640 --> 00:17:02,230
up I can see them so yeah I'm Wes and

260
00:16:59,829 --> 00:17:04,149
it's nice to be virtually meeting today

261
00:17:02,230 --> 00:17:08,169
I haven't been able to make it in person

262
00:17:04,150 --> 00:17:13,689
for a while but have been working on RFC

263
00:17:08,169 --> 00:17:16,480
793 biz for quite a while and thought it

264
00:17:13,689 --> 00:17:19,959
was really important to try to talk

265
00:17:16,480 --> 00:17:22,540
virtually about it today because well I

266
00:17:19,959 --> 00:17:25,030
think it's needing to get ready for a

267
00:17:22,540 --> 00:17:27,760
working group last call soon because

268
00:17:25,030 --> 00:17:30,370
it's getting at a point where the things

269
00:17:27,760 --> 00:17:34,360
we've identified to do are pretty much

270
00:17:30,370 --> 00:17:36,909
done and there's not a lot of churn

271
00:17:34,360 --> 00:17:48,370
happening so but that's

272
00:17:36,910 --> 00:17:51,880
I'll go to the next chart and I wanted

273
00:17:48,370 --> 00:17:54,219
to take a minute just to because we

274
00:17:51,880 --> 00:17:56,140
haven't been talking about this at the

275
00:17:54,220 --> 00:17:57,850
past few meetings much just give the

276
00:17:56,140 --> 00:17:59,650
background so people remember what we're

277
00:17:57,850 --> 00:18:04,090
trying to do so

278
00:17:59,650 --> 00:18:08,110
RFC 793 everyone hopefully knows is the

279
00:18:04,090 --> 00:18:11,620
TCP specification it's been around for a

280
00:18:08,110 --> 00:18:14,830
very long time and was never actually

281
00:18:11,620 --> 00:18:19,689
updated fully although a lot of things

282
00:18:14,830 --> 00:18:25,600
updated partially and so several years

283
00:18:19,690 --> 00:18:30,490
ago working group decided to adopt an

284
00:18:25,600 --> 00:18:34,830
attempt to update it and to make that

285
00:18:30,490 --> 00:18:39,970
tractable we said going in sort of the

286
00:18:34,830 --> 00:18:44,139
approaches to not open up any new topics

287
00:18:39,970 --> 00:18:47,530
really but just to focus on dealing with

288
00:18:44,140 --> 00:18:49,360
accepted errata so things that have been

289
00:18:47,530 --> 00:18:51,430
submitted over the years and collected

290
00:18:49,360 --> 00:18:54,699
through the arts the editors I ran a

291
00:18:51,430 --> 00:18:56,340
process and then the area directors have

292
00:18:54,700 --> 00:18:58,720
talked to the work groups usually and

293
00:18:56,340 --> 00:19:01,240
market them either verified or held for

294
00:18:58,720 --> 00:19:03,100
document update or rejected we're not

295
00:19:01,240 --> 00:19:08,200
going to put the rejected ones into the

296
00:19:03,100 --> 00:19:12,310
document then we collected all the other

297
00:19:08,200 --> 00:19:14,970
rfcs that update parts of 793 and tried

298
00:19:12,310 --> 00:19:19,450
to make sure that those updated parts

299
00:19:14,970 --> 00:19:24,340
got reflected and you know most

300
00:19:19,450 --> 00:19:25,990
importantly were we're not opening us

301
00:19:24,340 --> 00:19:30,990
this up like there was some discussion

302
00:19:25,990 --> 00:19:33,910
early on about changing the semantics of

303
00:19:30,990 --> 00:19:35,740
something like the options link to do

304
00:19:33,910 --> 00:19:38,380
long options and stuff like that oh

305
00:19:35,740 --> 00:19:42,760
we're not not chartered to do that in

306
00:19:38,380 --> 00:19:46,720
this document so let's not talk about

307
00:19:42,760 --> 00:19:48,879
that today the goal though that I've

308
00:19:46,720 --> 00:19:50,590
been using as editor of the document is

309
00:19:48,880 --> 00:19:53,740
to

310
00:19:50,590 --> 00:19:56,260
trying to patch in the exact text from

311
00:19:53,740 --> 00:19:59,260
all of the relevant documents wherever

312
00:19:56,260 --> 00:20:01,210
possible as you'll probably notice in

313
00:19:59,260 --> 00:20:04,360
reading it that doesn't always lead to

314
00:20:01,210 --> 00:20:08,700
the the most smooth a flowing document

315
00:20:04,360 --> 00:20:17,020
but the hope is that it prevents us from

316
00:20:08,700 --> 00:20:20,200
adding any mistakes so next chart so I

317
00:20:17,020 --> 00:20:23,889
posted a revision 13 that you can find

318
00:20:20,200 --> 00:20:25,630
on the ITF site now and if you check the

319
00:20:23,890 --> 00:20:30,190
diffs you'll notice there are only very

320
00:20:25,630 --> 00:20:33,809
small updates and those are pretty

321
00:20:30,190 --> 00:20:38,159
boring so adding a section reference

322
00:20:33,809 --> 00:20:41,399
about triggering this error report

323
00:20:38,159 --> 00:20:45,270
functionality for different ICMP types

324
00:20:41,399 --> 00:20:49,299
there's one open issue that I have some

325
00:20:45,270 --> 00:20:52,990
notes around and we'll talk about in a

326
00:20:49,299 --> 00:20:56,200
little bit and then I had been marking

327
00:20:52,990 --> 00:20:59,409
the IANA considerations as like a to-do

328
00:20:56,200 --> 00:21:01,059
thing to to analyze whether there were

329
00:20:59,409 --> 00:21:04,630
any registries that needed to be updated

330
00:21:01,059 --> 00:21:06,490
or something like that but I did sort of

331
00:21:04,630 --> 00:21:08,440
a check on that and didn't think that

332
00:21:06,490 --> 00:21:10,840
there was anything further than needed

333
00:21:08,440 --> 00:21:16,179
to be done there so I just sort of took

334
00:21:10,840 --> 00:21:18,340
away that to-do item so with that update

335
00:21:16,179 --> 00:21:22,510
the only thing I think that's left to

336
00:21:18,340 --> 00:21:26,860
fix is this issue that we'll talk about

337
00:21:22,510 --> 00:21:31,870
next I have a revision of 14 it's in

338
00:21:26,860 --> 00:21:35,520
work you can find it on the in the git

339
00:21:31,870 --> 00:21:42,090
repository that this look at URL there

340
00:21:35,520 --> 00:21:46,720
points to and have already made fixes

341
00:21:42,090 --> 00:21:48,010
there to version 13 based on Gregg

342
00:21:46,720 --> 00:21:51,070
Skinner's review that went to the

343
00:21:48,010 --> 00:21:53,080
mailing list also Michel scharff's

344
00:21:51,070 --> 00:21:57,220
reviewed the mailing list a few days ago

345
00:21:53,080 --> 00:22:00,039
and a couple of other small things that

346
00:21:57,220 --> 00:22:01,330
I noticed so the the bullet at the

347
00:22:00,039 --> 00:22:03,850
bottom is actually already outdated

348
00:22:01,330 --> 00:22:08,649
because yesterday I

349
00:22:03,850 --> 00:22:13,209
I added a commit that addresses Michael

350
00:22:08,650 --> 00:22:18,850
sharps review so if you go to the next

351
00:22:13,210 --> 00:22:23,920
chart one of the things that I did

352
00:22:18,850 --> 00:22:27,340
recently a couple of versions ago or

353
00:22:23,920 --> 00:22:29,110
revisions of the draft ago that I wanted

354
00:22:27,340 --> 00:22:32,800
to make sure people were aware of what

355
00:22:29,110 --> 00:22:35,110
we're talking is all of the requirements

356
00:22:32,800 --> 00:22:37,330
language in the spec wherever it says it

357
00:22:35,110 --> 00:22:43,719
should a must should not must not things

358
00:22:37,330 --> 00:22:46,570
like that I labeled and then with like

359
00:22:43,720 --> 00:22:51,070
unique IDs so we have like must one must

360
00:22:46,570 --> 00:22:56,020
two must three and then you can find

361
00:22:51,070 --> 00:22:59,740
those labels in an appendix that lists

362
00:22:56,020 --> 00:23:06,550
all the conformance requirements and

363
00:22:59,740 --> 00:23:10,560
that was borrowed from RFC 1122 that had

364
00:23:06,550 --> 00:23:13,300
a similar table of requirements and then

365
00:23:10,560 --> 00:23:17,700
links to the section numbers where those

366
00:23:13,300 --> 00:23:21,220
were discussed labeling the specific

367
00:23:17,700 --> 00:23:25,690
requirement sentences rather than the

368
00:23:21,220 --> 00:23:28,060
sections is the main change here so a

369
00:23:25,690 --> 00:23:30,910
couple people said that that seemed

370
00:23:28,060 --> 00:23:32,260
useful so I did it and I didn't think it

371
00:23:30,910 --> 00:23:33,460
was going to be very much work and it

372
00:23:32,260 --> 00:23:38,500
turned out to be more work than I

373
00:23:33,460 --> 00:23:42,700
thought but it is done now so the next

374
00:23:38,500 --> 00:23:44,560
chart this is an issue and I'm hoping to

375
00:23:42,700 --> 00:23:48,430
get maybe a little feedback from the

376
00:23:44,560 --> 00:23:51,820
room on this talking about it with the

377
00:23:48,430 --> 00:23:57,760
chairs we had three different readings

378
00:23:51,820 --> 00:24:00,210
of what RFC 1122 says so maybe one of

379
00:23:57,760 --> 00:24:00,210
them is correct

380
00:24:01,230 --> 00:24:08,340
thing I'm going to propose though after

381
00:24:04,630 --> 00:24:11,170
looking at a bit more detail myself is

382
00:24:08,340 --> 00:24:14,709
my proposal is that we actually don't do

383
00:24:11,170 --> 00:24:16,600
anything what I'm going to talk just

384
00:24:14,710 --> 00:24:17,470
briefly to convince you that maybe

385
00:24:16,600 --> 00:24:20,320
that's the right

386
00:24:17,470 --> 00:24:23,140
insert so I had something I'm worked to

387
00:24:20,320 --> 00:24:28,860
do in the document because I thought

388
00:24:23,140 --> 00:24:34,570
there was an issue around what's called

389
00:24:28,860 --> 00:24:39,639
error report functionality in RFC 1122

390
00:24:34,570 --> 00:24:40,470
describes it now that's kind of a funny

391
00:24:39,640 --> 00:24:45,250
thing already

392
00:24:40,470 --> 00:24:48,930
because in TCP stacks with the socket

393
00:24:45,250 --> 00:24:51,130
interface we don't exactly have

394
00:24:48,930 --> 00:24:53,730
something that matches the error report

395
00:24:51,130 --> 00:24:57,570
functionality though they're sort of

396
00:24:53,730 --> 00:25:00,600
ways that that what's described happens

397
00:24:57,570 --> 00:25:07,810
so it's it's sort of a generic

398
00:25:00,600 --> 00:25:12,100
functionality anyways now RFC 1122 to me

399
00:25:07,810 --> 00:25:14,169
looked inconsistent in one of the

400
00:25:12,100 --> 00:25:17,199
aspects of describing this error report

401
00:25:14,170 --> 00:25:21,130
functionality because there is one

402
00:25:17,200 --> 00:25:27,510
section that says these reports must be

403
00:25:21,130 --> 00:25:28,740
triggered in the case of excessive

404
00:25:27,510 --> 00:25:32,760
retransmissions

405
00:25:28,740 --> 00:25:38,350
so when the there's there's you know

406
00:25:32,760 --> 00:25:41,350
threshold for giving up and there's

407
00:25:38,350 --> 00:25:44,020
another threshold for notifying

408
00:25:41,350 --> 00:25:45,389
application and also notifying IP that

409
00:25:44,020 --> 00:25:51,370
there seems to be a connectivity issue

410
00:25:45,390 --> 00:25:53,920
so it appeared for me that the text said

411
00:25:51,370 --> 00:25:56,350
you must trigger reports when you hit

412
00:25:53,920 --> 00:25:58,260
that first threshold where there it

413
00:25:56,350 --> 00:26:00,969
looks like there's a connectivity issue

414
00:25:58,260 --> 00:26:04,030
and then I found another place in the

415
00:26:00,970 --> 00:26:06,010
document so the section numbers are here

416
00:26:04,030 --> 00:26:10,660
in case you want to look them up in RFC

417
00:26:06,010 --> 00:26:12,820
1122 there's another section bullet D

418
00:26:10,660 --> 00:26:15,550
and I say the second one because they're

419
00:26:12,820 --> 00:26:22,120
actually two bullet d's in that list

420
00:26:15,550 --> 00:26:23,770
there's a editorial bug in 1122 so

421
00:26:22,120 --> 00:26:26,709
that's that's even more confusing than

422
00:26:23,770 --> 00:26:28,900
it needs to be but that second bullet

423
00:26:26,710 --> 00:26:31,440
seems to say you should trigger the

424
00:26:28,900 --> 00:26:33,870
error report and

425
00:26:31,440 --> 00:26:37,320
of course i was confused by this and

426
00:26:33,870 --> 00:26:41,820
discussing it with the chairs a little

427
00:26:37,320 --> 00:26:44,879
bit one of the things that came out is i

428
00:26:41,820 --> 00:26:46,860
think there's a possibility that we

429
00:26:44,880 --> 00:26:49,380
could interpret this as you must

430
00:26:46,860 --> 00:26:53,879
implement the functionality and you

431
00:26:49,380 --> 00:26:59,010
really should generate the the error

432
00:26:53,880 --> 00:27:04,020
report and for reference I wanted to

433
00:26:59,010 --> 00:27:07,980
look at Linux and Windows error codes

434
00:27:04,020 --> 00:27:11,850
and see what's done here and actually

435
00:27:07,980 --> 00:27:15,179
couldn't find anything corresponding to

436
00:27:11,850 --> 00:27:18,449
this terms of an error that's generated

437
00:27:15,179 --> 00:27:24,360
for the application to receive in either

438
00:27:18,450 --> 00:27:26,190
case so I think that it may not be the

439
00:27:24,360 --> 00:27:29,729
most relevant thing to spend a ton of

440
00:27:26,190 --> 00:27:32,190
time on but my proposal is basically to

441
00:27:29,730 --> 00:27:34,679
do nothing if people have written stacks

442
00:27:32,190 --> 00:27:37,409
all these years based on the 1122 text

443
00:27:34,679 --> 00:27:42,299
and not been confused then maybe my

444
00:27:37,409 --> 00:27:45,210
initial confusion was just almost this

445
00:27:42,299 --> 00:27:46,980
area so I'd like to ask for feedback on

446
00:27:45,210 --> 00:27:48,360
this do we do you think there's

447
00:27:46,980 --> 00:27:50,510
something to be done here can we leave

448
00:27:48,360 --> 00:27:50,510
it alone

449
00:27:56,320 --> 00:28:01,149
so this is mrs. Michael speaking from

450
00:27:59,419 --> 00:28:03,950
the floor I would agree

451
00:28:01,150 --> 00:28:15,110
effect all sections and I personally

452
00:28:03,950 --> 00:28:19,429
agree do nothing good so if there's

453
00:28:15,110 --> 00:28:22,908
anyone else but of course we'll relay

454
00:28:19,429 --> 00:28:26,020
this the mailing list and check out that

455
00:28:22,909 --> 00:28:28,460
Oh Gauri

456
00:28:26,020 --> 00:28:30,408
Gauri fast even less helpful

457
00:28:28,460 --> 00:28:34,760
I haven't read but I probably agree from

458
00:28:30,409 --> 00:28:36,559
reading 1122 previously it's got these

459
00:28:34,760 --> 00:28:38,450
problems and I think you're doing the

460
00:28:36,559 --> 00:28:42,320
right thing I will happily read again no

461
00:28:38,450 --> 00:28:43,640
you pointed me to it thank you I could

462
00:28:42,320 --> 00:28:46,370
talk some from the floor just reading

463
00:28:43,640 --> 00:28:48,320
the text could it be that they should

464
00:28:46,370 --> 00:28:51,590
you were referring to which you think is

465
00:28:48,320 --> 00:28:54,470
inconsistent that should is so the

466
00:28:51,590 --> 00:28:57,320
sentence is tcp should and then at the

467
00:28:54,470 --> 00:29:00,770
end when our one is reached and before

468
00:28:57,320 --> 00:29:03,939
our two so in this condition is assured

469
00:29:00,770 --> 00:29:06,110
in the other one it's a must

470
00:29:03,940 --> 00:29:08,470
that's possibility too

471
00:29:06,110 --> 00:29:08,469
yeah

472
00:29:09,890 --> 00:29:16,669
my guess is though if we don't know for

473
00:29:13,399 --> 00:29:18,559
sure that that's what is meant and if

474
00:29:16,669 --> 00:29:24,250
stacks aren't doing this we probably

475
00:29:18,559 --> 00:29:24,250
don't want to change what the spec says

476
00:29:29,529 --> 00:29:39,159
okay so if you buy that I'll move on to

477
00:29:35,450 --> 00:29:39,159
the next chart

478
00:29:39,860 --> 00:29:45,439
Michael sharp watch some great comments

479
00:29:41,990 --> 00:29:48,320
and we don't need to go through them in

480
00:29:45,440 --> 00:29:49,549
in much detail but I sort of summarized

481
00:29:48,320 --> 00:29:52,580
them here so you can see that they're

482
00:29:49,549 --> 00:29:55,309
fairly minor so adding cross-reference

483
00:29:52,580 --> 00:30:00,289
deduplicating some text there was some

484
00:29:55,309 --> 00:30:04,250
really historic language in there left

485
00:30:00,289 --> 00:30:07,360
over from like the pdp-11 days and stuff

486
00:30:04,250 --> 00:30:12,019
so at that I have removed in the

487
00:30:07,360 --> 00:30:13,899
repository copy and I also removed all

488
00:30:12,019 --> 00:30:17,840
the stale glossary terms about the

489
00:30:13,899 --> 00:30:19,729
ARPANET and things like that which

490
00:30:17,840 --> 00:30:24,019
weren't actually referenced in the rest

491
00:30:19,730 --> 00:30:27,379
the document anyways so I think Michael

492
00:30:24,019 --> 00:30:30,470
and his review agreed these are quite

493
00:30:27,379 --> 00:30:34,759
small things and in general it's fairly

494
00:30:30,470 --> 00:30:40,389
stable and in in good overall shape

495
00:30:34,759 --> 00:30:44,389
which brings me to I think my last chart

496
00:30:40,389 --> 00:30:49,149
the next one we're thinking the next

497
00:30:44,389 --> 00:30:52,549
steps I'm pretty sure we're converging

498
00:30:49,149 --> 00:30:56,049
so I'd like to propose that we're doing

499
00:30:52,549 --> 00:30:58,639
it working group last call soon so that

500
00:30:56,049 --> 00:31:03,679
people can check if we really are

501
00:30:58,639 --> 00:31:05,090
converged to a good place and I was

502
00:31:03,679 --> 00:31:10,279
hoping that we could identify some

503
00:31:05,090 --> 00:31:12,590
specific reviewers who will you know be

504
00:31:10,279 --> 00:31:17,659
on the spot to take a close look at the

505
00:31:12,590 --> 00:31:19,850
document and I was also wondering if we

506
00:31:17,659 --> 00:31:24,289
should request any early cross area

507
00:31:19,850 --> 00:31:27,590
director reviews specifically so that we

508
00:31:24,289 --> 00:31:31,490
don't have anyone surprised that we're

509
00:31:27,590 --> 00:31:36,110
revising the core TCP spec somewhere

510
00:31:31,490 --> 00:31:38,860
else and wind up with difficult IETF

511
00:31:36,110 --> 00:31:41,929
last call comments or something so I

512
00:31:38,860 --> 00:31:47,990
think this is the opportunity to

513
00:31:41,930 --> 00:31:51,050
a stirring for reviewers yeah thanks

514
00:31:47,990 --> 00:31:53,060
essential address and I agree so I'd

515
00:31:51,050 --> 00:31:56,810
like to open the floor here first of all

516
00:31:53,060 --> 00:31:59,480
are there any comments on what Wes has

517
00:31:56,810 --> 00:32:05,240
just said on the stability of the

518
00:31:59,480 --> 00:32:11,300
document and may I ask who has read a

519
00:32:05,240 --> 00:32:17,410
recent version of the document so for

520
00:32:11,300 --> 00:32:17,409
the record that is two three three

521
00:32:18,040 --> 00:32:25,310
okay that is probably not good enough

522
00:32:22,790 --> 00:32:29,090
for going to work in coop last call but

523
00:32:25,310 --> 00:32:32,419
we do need reviewers for this document

524
00:32:29,090 --> 00:32:35,209
so and I'm now asking the room all their

525
00:32:32,420 --> 00:32:36,770
volunteers who would want here to read

526
00:32:35,210 --> 00:32:41,060
this document and I can personally say

527
00:32:36,770 --> 00:32:43,580
it's it's easy to read so it's it's it's

528
00:32:41,060 --> 00:32:51,980
pretty okay so don't be worried it's

529
00:32:43,580 --> 00:33:00,470
it's a good document okay so I see

530
00:32:51,980 --> 00:33:02,930
channa thanks a lot I see Gauri anybody

531
00:33:00,470 --> 00:33:08,870
you've shown in the past has been a good

532
00:33:02,930 --> 00:33:10,640
reviewer luteum yes I we had a private

533
00:33:08,870 --> 00:33:21,129
conversation I hope that we convince him

534
00:33:10,640 --> 00:33:21,130
as well anybody else okay

535
00:33:26,440 --> 00:33:30,890
okay

536
00:33:27,860 --> 00:33:33,229
pravin on shebar also agreed so that's

537
00:33:30,890 --> 00:33:37,820
excellent so then I think we have a

538
00:33:33,230 --> 00:33:42,610
decent list to stop this and are to be

539
00:33:37,820 --> 00:33:42,610
hope that we get reviews relatively soon

540
00:33:43,510 --> 00:33:48,590
the final question that Wes has raised

541
00:33:46,730 --> 00:33:52,490
is there something actually a little bit

542
00:33:48,590 --> 00:33:54,830
for our ad on the question whether we

543
00:33:52,490 --> 00:33:57,260
should really ask for crotch area

544
00:33:54,830 --> 00:34:02,059
revenue I personally actually agree with

545
00:33:57,260 --> 00:34:04,610
less that is something we my - in order

546
00:34:02,059 --> 00:34:06,649
to get really feedback from some of the

547
00:34:04,610 --> 00:34:11,270
other areas that obviously heavily use

548
00:34:06,650 --> 00:34:15,139
TCP so what I'm asking maybe's in the

549
00:34:11,270 --> 00:34:17,418
room so are there any any thoughts on

550
00:34:15,139 --> 00:34:28,369
whether we should do that or if that's a

551
00:34:17,418 --> 00:34:31,009
bad idea or when we should with it I'm

552
00:34:28,369 --> 00:34:33,770
not sure it's necessary because they

553
00:34:31,010 --> 00:34:38,450
mainly use TCP and you don't change the

554
00:34:33,770 --> 00:34:41,359
interface say and there will be at least

555
00:34:38,449 --> 00:34:43,520
and I believe in ops review at the very

556
00:34:41,359 --> 00:34:45,469
end which is probably the most helpful

557
00:34:43,520 --> 00:34:47,929
one so that will help me anyway so I'm

558
00:34:45,469 --> 00:34:50,480
not sure if it's necessary yeah I mean

559
00:34:47,929 --> 00:34:53,600
the discussion that we had with versus

560
00:34:50,480 --> 00:34:57,680
whether ops and also security area which

561
00:34:53,600 --> 00:34:59,118
we should ask earlier because we don't

562
00:34:57,680 --> 00:35:08,299
know what will happen there and just to

563
00:34:59,119 --> 00:35:09,800
speed up maybe the process yes I find

564
00:35:08,300 --> 00:35:13,130
your comment about people who might be

565
00:35:09,800 --> 00:35:14,840
using TCP a little bit ironic I don't

566
00:35:13,130 --> 00:35:18,290
think there's anybody IETF who doesn't

567
00:35:14,840 --> 00:35:20,930
use TCP but it behooves us to get it

568
00:35:18,290 --> 00:35:22,970
right and if the application developers

569
00:35:20,930 --> 00:35:25,629
find something that we didn't find we're

570
00:35:22,970 --> 00:35:25,629
really screwed up

571
00:35:32,930 --> 00:35:43,049
okay as I see that in netf last call

572
00:35:39,660 --> 00:35:44,730
covers at all yeah sure I mean we for

573
00:35:43,050 --> 00:35:47,940
sure we all understand that this

574
00:35:44,730 --> 00:35:50,700
document is essential for the IHF as a

575
00:35:47,940 --> 00:35:52,560
whole and the ITF last call will be

576
00:35:50,700 --> 00:35:54,899
essential for this document so that's

577
00:35:52,560 --> 00:35:56,670
the Landis would be yeah we've just have

578
00:35:54,900 --> 00:35:59,040
to discuss the the best way to approach

579
00:35:56,670 --> 00:36:00,150
that and to to make the process as

580
00:35:59,040 --> 00:36:01,830
smooth as possible

581
00:36:00,150 --> 00:36:04,770
and to ensure that at the end of the day

582
00:36:01,830 --> 00:36:07,980
we have an excellent document so are

583
00:36:04,770 --> 00:36:12,660
there any other comments on on the

584
00:36:07,980 --> 00:36:15,600
process here seem to be the case so if

585
00:36:12,660 --> 00:36:18,839
my conclusion is that we have certain

586
00:36:15,600 --> 00:36:20,480
agreement here in the room on proceeding

587
00:36:18,840 --> 00:36:32,190
that's to display that this we will

588
00:36:20,480 --> 00:36:35,430
reach out to the reviewers and then once

589
00:36:32,190 --> 00:36:37,230
we have to read feedback we will think

590
00:36:35,430 --> 00:36:40,919
about starting a working group last call

591
00:36:37,230 --> 00:36:42,810
of course it depends a little bit on on

592
00:36:40,920 --> 00:36:45,480
the timing of the reviews and the amount

593
00:36:42,810 --> 00:36:47,279
of comments that we get but in general

594
00:36:45,480 --> 00:36:49,680
at least my intention would be that we

595
00:36:47,280 --> 00:36:52,290
get this off the table as soon as

596
00:36:49,680 --> 00:36:54,779
possible maybe already around the next

597
00:36:52,290 --> 00:36:59,550
meeting or early next year so that would

598
00:36:54,780 --> 00:37:01,260
be my plan okay then there are no

599
00:36:59,550 --> 00:37:09,570
further comments or and thanks a lot

600
00:37:01,260 --> 00:37:13,020
less and let's move on so the next

601
00:37:09,570 --> 00:37:19,220
presentation is about the converter also

602
00:37:13,020 --> 00:37:19,220
remote sorry look

603
00:37:24,620 --> 00:37:57,770
I know and then maybe the more doesn't

604
00:37:52,790 --> 00:38:02,720
work yeah you have to tell how can you

605
00:37:57,770 --> 00:38:05,570
change this right right well point it to

606
00:38:02,720 --> 00:38:08,120
in that direction not work

607
00:38:05,570 --> 00:38:11,930
yeah okay then you have to say I'll

608
00:38:08,120 --> 00:38:15,830
change the slides hello good afternoon I

609
00:38:11,930 --> 00:38:19,220
am someone from Korea Telecom and in the

610
00:38:15,830 --> 00:38:21,560
meanwhile generosity combo dropped is in

611
00:38:19,220 --> 00:38:26,390
the in the Working Girl rustic or so I

612
00:38:21,560 --> 00:38:29,930
asked my sis kaikora telecom and data

613
00:38:26,390 --> 00:38:32,029
has prepared some proof of concept of

614
00:38:29,930 --> 00:38:35,029
the generosity compare implementation of

615
00:38:32,030 --> 00:38:37,940
the rear 5g so I will talk about about I

616
00:38:35,030 --> 00:38:52,540
will talk about today about some

617
00:38:37,940 --> 00:38:55,220
deserted theory POC please no previous

618
00:38:52,540 --> 00:38:57,400
it's number three and go to the number

619
00:38:55,220 --> 00:38:57,399
one

620
00:39:17,550 --> 00:39:24,900
the usual motivation of the general TTT

621
00:39:21,510 --> 00:39:29,250
speak um but protocol is to provide the

622
00:39:24,900 --> 00:39:33,030
rod the number of current TCP enable -

623
00:39:29,250 --> 00:39:35,490
crying - uses multiple TCP because the

624
00:39:33,030 --> 00:39:38,250
number of client had multiple much

625
00:39:35,490 --> 00:39:41,819
participe is much more large number of

626
00:39:38,250 --> 00:39:44,369
than the number of servers so actually

627
00:39:41,820 --> 00:39:46,980
the crime I just wanted to benefit from

628
00:39:44,369 --> 00:39:49,980
the amputee CP at least on the fraction

629
00:39:46,980 --> 00:39:52,170
of the end-to-end past even in the in

630
00:39:49,980 --> 00:39:54,360
the wireless or wired or something

631
00:39:52,170 --> 00:39:56,460
something like that but there's a figure

632
00:39:54,360 --> 00:39:59,190
yeah it looks like a somewhat yeah Roku

633
00:39:56,460 --> 00:40:02,100
not there but anyway so actually the

634
00:39:59,190 --> 00:40:05,430
company protocol profile the generic one

635
00:40:02,100 --> 00:40:09,990
because we can convert any kind of TCP

636
00:40:05,430 --> 00:40:12,529
options and for example TFO sack or

637
00:40:09,990 --> 00:40:15,839
something timestamp or even even

638
00:40:12,530 --> 00:40:18,600
including the MP TCP so we are now in

639
00:40:15,840 --> 00:40:20,400
the TCP I'm working group so it is can

640
00:40:18,600 --> 00:40:24,509
be it could be offset to window

641
00:40:20,400 --> 00:40:26,550
generally so next slide please so a

642
00:40:24,510 --> 00:40:28,410
basic enjoying of the Girardi combo

643
00:40:26,550 --> 00:40:30,900
protocol is an application level

644
00:40:28,410 --> 00:40:32,720
protocol and it is reasoning on the

645
00:40:30,900 --> 00:40:38,369
specific TCP port

646
00:40:32,720 --> 00:40:40,680
similarly web service is pure subtract

647
00:40:38,369 --> 00:40:43,320
test and all of the commands and the

648
00:40:40,680 --> 00:40:45,899
reefs responses are encoded in the TR v

649
00:40:43,320 --> 00:40:48,420
format and though it provides the more

650
00:40:45,900 --> 00:40:50,940
extensibility the other than the other

651
00:40:48,420 --> 00:40:54,570
kind of approach the protocol like a sax

652
00:40:50,940 --> 00:40:57,480
or open IP encapsulation or something

653
00:40:54,570 --> 00:41:01,580
like that so actually the first comment

654
00:40:57,480 --> 00:41:05,460
are sent through the scene hey wrote and

655
00:41:01,580 --> 00:41:07,290
this information contains the actual

656
00:41:05,460 --> 00:41:11,820
destination IP address and port

657
00:41:07,290 --> 00:41:13,560
information and because it uses on the

658
00:41:11,820 --> 00:41:17,760
middle of the three-way handshake of

659
00:41:13,560 --> 00:41:21,060
regular TCP it provides the diversity to

660
00:41:17,760 --> 00:41:25,470
me but minimize the delay to establish

661
00:41:21,060 --> 00:41:29,340
new connections and also the same act

662
00:41:25,470 --> 00:41:31,439
message provides the responses when the

663
00:41:29,340 --> 00:41:34,020
one up to three handshake

664
00:41:31,440 --> 00:41:36,590
and because we don't use the any kind of

665
00:41:34,020 --> 00:41:39,660
encrypt encapsulation or proxy like

666
00:41:36,590 --> 00:41:42,450
protocol on top of the application so if

667
00:41:39,660 --> 00:41:46,339
we call it our praying transport mode

668
00:41:42,450 --> 00:41:49,680
between the Christ and the converters so

669
00:41:46,340 --> 00:41:53,160
what am i our clients can run what TCP

670
00:41:49,680 --> 00:41:56,310
options supported by the server and from

671
00:41:53,160 --> 00:41:59,370
the clients vice versa so it allows the

672
00:41:56,310 --> 00:42:01,320
tried to bypass all the TCP options to

673
00:41:59,370 --> 00:42:05,029
the server side in the middle of the

674
00:42:01,320 --> 00:42:05,030
converter next slide please

675
00:42:05,060 --> 00:42:12,330
so I simply example here so there's a

676
00:42:10,020 --> 00:42:14,220
client on the left side and the server

677
00:42:12,330 --> 00:42:17,250
on the right side and the converter

678
00:42:14,220 --> 00:42:19,770
proxying the meter side so whenever were

679
00:42:17,250 --> 00:42:22,650
crying over to make a real connection at

680
00:42:19,770 --> 00:42:24,180
the TCP they they shouldn't have to

681
00:42:22,650 --> 00:42:26,940
three-way handshake

682
00:42:24,180 --> 00:42:29,040
starting with the same message so sin

683
00:42:26,940 --> 00:42:31,800
contains the server IP and the port

684
00:42:29,040 --> 00:42:36,690
number and the command is to connect is

685
00:42:31,800 --> 00:42:38,340
sent to the camera and convert and send

686
00:42:36,690 --> 00:42:40,230
the same message to the actual server

687
00:42:38,340 --> 00:42:42,930
based on the information of the current

688
00:42:40,230 --> 00:42:45,300
TLP current connect information and

689
00:42:42,930 --> 00:42:47,220
rating for the select from the server

690
00:42:45,300 --> 00:42:49,890
and the combo is turned back to the

691
00:42:47,220 --> 00:42:52,350
client about the scenic MSS are using

692
00:42:49,890 --> 00:42:55,529
the okay div and actually this Oh

693
00:42:52,350 --> 00:42:58,200
extensible extending 50p option so

694
00:42:55,530 --> 00:43:00,060
actually after that actual data goes

695
00:42:58,200 --> 00:43:05,339
through the data go through the

696
00:43:00,060 --> 00:43:07,740
comparator to the server where another

697
00:43:05,340 --> 00:43:10,380
direction so actually on the data

698
00:43:07,740 --> 00:43:14,299
there's no need to include any kind of

699
00:43:10,380 --> 00:43:14,300
PRP x-ray please

700
00:43:38,009 --> 00:43:43,989
so put a proven concept that is MKT

701
00:43:42,759 --> 00:43:46,059
prepared later

702
00:43:43,989 --> 00:43:48,700
so it's collaboration to increment that

703
00:43:46,059 --> 00:43:51,249
engineering about the based on the

704
00:43:48,700 --> 00:43:54,788
trapped but on all six but now out

705
00:43:51,249 --> 00:43:57,700
button on I by the way huh but in the

706
00:43:54,789 --> 00:44:00,400
cry side we uses open source Krantz

707
00:43:57,700 --> 00:44:03,578
rivalry and the y Shakti sector to see

708
00:44:00,400 --> 00:44:06,660
the compare rocks on our Wireshark were

709
00:44:03,579 --> 00:44:10,059
some engineering analysis which is

710
00:44:06,660 --> 00:44:12,279
casting that you are a up there and we

711
00:44:10,059 --> 00:44:14,709
compared our art if you combat a

712
00:44:12,279 --> 00:44:17,979
protocol with the sax wasn't five

713
00:44:14,709 --> 00:44:20,410
protocol and the I it works on the we

714
00:44:17,979 --> 00:44:23,558
are incrementing on the Android new

715
00:44:20,410 --> 00:44:26,200
smartphone Samsung Galaxy S 10 with a 5c

716
00:44:23,559 --> 00:44:28,630
model and the we uses engineering

717
00:44:26,200 --> 00:44:30,968
version of the firmware to modify some

718
00:44:28,630 --> 00:44:35,319
of the system command over routing

719
00:44:30,969 --> 00:44:37,779
routing primary so for the generality we

720
00:44:35,319 --> 00:44:40,749
used open source acts integration for

721
00:44:37,779 --> 00:44:44,170
the SAS version 5 we uses the Red Sox

722
00:44:40,749 --> 00:44:47,348
which is commercially users in the KT

723
00:44:44,170 --> 00:44:50,380
telecom to our subscribers and as you

724
00:44:47,349 --> 00:44:52,749
can see in the in the bottom the left

725
00:44:50,380 --> 00:44:55,209
hand side is shows the effect indicator

726
00:44:52,749 --> 00:44:59,979
5 the only mode and the right hand

727
00:44:55,209 --> 00:45:02,979
bottom side is shows the Wi-Fi + 5 g

728
00:44:59,979 --> 00:45:06,249
first Wi-Fi the same time and we can use

729
00:45:02,979 --> 00:45:13,029
the multiple TCP together that's right

730
00:45:06,249 --> 00:45:15,399
Chris so the majority actually we tested

731
00:45:13,029 --> 00:45:18,089
in the in the actual real commercial

732
00:45:15,400 --> 00:45:23,709
fighting at 12 on once 10 dollar amount

733
00:45:18,089 --> 00:45:26,589
3.5 gigahertz new radio control and user

734
00:45:23,709 --> 00:45:30,788
playing separation motor to 5c core and

735
00:45:26,589 --> 00:45:34,630
all the transport IP protocol is ipv6

736
00:45:30,789 --> 00:45:38,920
and and for the Wi-Fi we used to edit

737
00:45:34,630 --> 00:45:41,619
that 11 ax for the Wi-Fi 6 and we reuse

738
00:45:38,920 --> 00:45:43,069
those together for 5 10 to Wi-Fi and

739
00:45:41,619 --> 00:45:46,640
though we compare

740
00:45:43,069 --> 00:45:49,699
the latency for the rtcp set up time for

741
00:45:46,640 --> 00:45:52,940
posterity and the socks and the actually

742
00:45:49,699 --> 00:45:56,829
the matching is 40 TFP time to first by

743
00:45:52,940 --> 00:45:59,630
the time from the promoters in send and

744
00:45:56,829 --> 00:46:02,569
receive the connection of sessom effect

745
00:45:59,630 --> 00:46:06,440
acceptance from the one of the our

746
00:46:02,569 --> 00:46:09,589
gateway proxy servers so monitor come to

747
00:46:06,440 --> 00:46:11,719
the center we in the in Decorah telecom

748
00:46:09,589 --> 00:46:15,529
datacenter we used toast the generosity

749
00:46:11,719 --> 00:46:18,410
combo a protocol supported hack hybrid

750
00:46:15,529 --> 00:46:21,619
access gateway which is modified by that

751
00:46:18,410 --> 00:46:23,930
there's a restaurant for the Cossacks

752
00:46:21,619 --> 00:46:26,959
who uses some commercial version of the

753
00:46:23,930 --> 00:46:30,879
mobile entity proxy and we compare it

754
00:46:26,959 --> 00:46:34,190
that so as you can see in the graph the

755
00:46:30,880 --> 00:46:36,769
most is the generosity compared

756
00:46:34,190 --> 00:46:40,819
multipass mode actually at this time we

757
00:46:36,769 --> 00:46:44,598
uses the Wi-Fi as a primary route route

758
00:46:40,819 --> 00:46:47,779
so we can get a twenty seven millisecond

759
00:46:44,599 --> 00:46:52,219
in average shorter agency and photo

760
00:46:47,779 --> 00:46:54,940
privacy 64 millisecond for the director

761
00:46:52,219 --> 00:46:58,849
RTT converter agency and the photoshops

762
00:46:54,940 --> 00:47:01,729
compared to the generosity you can see

763
00:46:58,849 --> 00:47:05,809
the for the purgatory case more than the

764
00:47:01,729 --> 00:47:08,808
three times more than the latency is a

765
00:47:05,809 --> 00:47:13,369
more higher in the football multiple TCP

766
00:47:08,809 --> 00:47:16,999
mode of the Assads short shorter than

767
00:47:13,369 --> 00:47:20,089
the HOV mode it's because the in the mid

768
00:47:16,999 --> 00:47:24,140
multiple TCP after thusly we handshake

769
00:47:20,089 --> 00:47:27,380
out the artistic collection the sax

770
00:47:24,140 --> 00:47:29,509
protocol procedure is called pseudo some

771
00:47:27,380 --> 00:47:32,449
portions of us asked for two purposes of

772
00:47:29,509 --> 00:47:35,539
fancy and some portion of from another

773
00:47:32,449 --> 00:47:37,969
portion of the procedure call suta Wi-Fi

774
00:47:35,539 --> 00:47:39,549
is why the the references is a much

775
00:47:37,969 --> 00:47:45,109
smaller tend to fight you anymore okay

776
00:47:39,549 --> 00:47:47,989
next right is so other instances and us

777
00:47:45,109 --> 00:47:50,779
right and we compare the signaling of

778
00:47:47,989 --> 00:47:53,809
the diversity convert and the SAS refi

779
00:47:50,779 --> 00:47:55,859
and the inter web site from the commode

780
00:47:53,809 --> 00:47:59,759
toast crime site to the proxy

781
00:47:55,859 --> 00:48:02,910
we requires around LTTE just the TCP syn

782
00:47:59,759 --> 00:48:05,670
synack and the egg and the pod from the

783
00:48:02,910 --> 00:48:06,899
combatants proxy site to the server we

784
00:48:05,670 --> 00:48:11,309
neither one RTT

785
00:48:06,900 --> 00:48:13,710
and by the way sucks out of 5 because we

786
00:48:11,309 --> 00:48:16,710
are using the other education mod we

787
00:48:13,710 --> 00:48:20,430
need the flow ITT's when the client to

788
00:48:16,710 --> 00:48:23,880
the proxy side each because enrich the

789
00:48:20,430 --> 00:48:26,399
ferocity because some of the sucks first

790
00:48:23,880 --> 00:48:29,759
seizure functions requires some

791
00:48:26,400 --> 00:48:32,849
processing time it can be not piggy

792
00:48:29,759 --> 00:48:35,160
backed by idea push message each at

793
00:48:32,849 --> 00:48:38,039
least the PO RT t it can be a motor

794
00:48:35,160 --> 00:48:40,710
diversity and the press random and make

795
00:48:38,039 --> 00:48:43,140
it precise to the server because the

796
00:48:40,710 --> 00:48:46,619
velocity so but just well compared to

797
00:48:43,140 --> 00:48:49,920
your activity in the in the figure the

798
00:48:46,619 --> 00:48:54,839
genetic can be are much less shorter

799
00:48:49,920 --> 00:48:56,999
shoot later speed and thus at Spotify so

800
00:48:54,839 --> 00:49:02,130
uh this is a difficulty and that's right

801
00:48:56,999 --> 00:49:07,799
and custom thanks a lot or are there any

802
00:49:02,130 --> 00:49:10,950
questions on that presentation I would

803
00:49:07,799 --> 00:49:14,160
have one mostest document Shepherd

804
00:49:10,950 --> 00:49:16,470
so are these prototypes or is this

805
00:49:14,160 --> 00:49:19,680
production deployment or do you plan for

806
00:49:16,470 --> 00:49:22,169
doing a production deployment of that so

807
00:49:19,680 --> 00:49:26,430
actually we have a commercial service

808
00:49:22,170 --> 00:49:29,339
based on the identity and if it is

809
00:49:26,430 --> 00:49:33,779
possible actually I'm from the KT rare

810
00:49:29,339 --> 00:49:36,660
so I need to talk about that the

811
00:49:33,779 --> 00:49:40,109
advantage of the generosity and I would

812
00:49:36,660 --> 00:49:42,930
like to ask my marketing did not enter

813
00:49:40,109 --> 00:49:53,130
yeah in the Samsung or so also the best

814
00:49:42,930 --> 00:49:56,640
vendor so so so so are there any

815
00:49:53,130 --> 00:50:01,769
questions you see just out of curiosity

816
00:49:56,640 --> 00:50:05,430
so you're using open-source socks on the

817
00:50:01,769 --> 00:50:09,250
converter so you can what you don't have

818
00:50:05,430 --> 00:50:13,390
a so called syndication in just in this

819
00:50:09,250 --> 00:50:16,450
signaling graph yes actually

820
00:50:13,390 --> 00:50:19,618
because I because we need some time to

821
00:50:16,450 --> 00:50:23,740
implement this one so actually we can

822
00:50:19,619 --> 00:50:26,920
insert some identification message in

823
00:50:23,740 --> 00:50:29,290
the TRP together whiskey a scene or

824
00:50:26,920 --> 00:50:31,329
scenic or something like that so we are

825
00:50:29,290 --> 00:50:34,450
preparing of the that is that another

826
00:50:31,329 --> 00:50:36,670
draught and actually we need a time so I

827
00:50:34,450 --> 00:50:40,509
didn't fermented at that kind of an

828
00:50:36,670 --> 00:50:42,940
authentication for this one yes and the

829
00:50:40,510 --> 00:50:45,670
one more thing is no socks button six

830
00:50:42,940 --> 00:50:47,349
try to support zero ITT kind of sir you

831
00:50:45,670 --> 00:50:49,329
might already know it so you might be

832
00:50:47,349 --> 00:50:52,150
interesting if you compare thought six

833
00:50:49,329 --> 00:50:56,079
and then combining actually in the soft

834
00:50:52,150 --> 00:50:58,240
spot of six into in the routing area

835
00:50:56,079 --> 00:51:01,829
were inferior right yeah yeah yeah

836
00:50:58,240 --> 00:51:05,950
actually it requires an additional extra

837
00:51:01,829 --> 00:51:08,680
handshaking after the PCP and shaking so

838
00:51:05,950 --> 00:51:11,618
it is totally art it is much more better

839
00:51:08,680 --> 00:51:13,810
than Thea yeah that's about six I think

840
00:51:11,619 --> 00:51:17,770
so yeah I wish you to compare up that

841
00:51:13,810 --> 00:51:24,490
yeah together yeah greater might be

842
00:51:17,770 --> 00:51:26,859
interesting yeah okay thank you thank

843
00:51:24,490 --> 00:51:28,868
you thank you for the talk and the point

844
00:51:26,859 --> 00:51:32,049
of information Sox six is being

845
00:51:28,869 --> 00:51:37,180
considered as a possible work item in TS

846
00:51:32,050 --> 00:51:38,770
v WG so comments on Sox six and its

847
00:51:37,180 --> 00:51:42,310
usefulness would be really appreciated

848
00:51:38,770 --> 00:51:51,220
over there that's not so sorry i

849
00:51:42,310 --> 00:51:55,750
presentable to the presenter as well six

850
00:51:51,220 --> 00:51:58,750
fully but the last time I indicate Katie

851
00:51:55,750 --> 00:51:59,560
try to make a somewhat similar to the

852
00:51:58,750 --> 00:52:01,900
subspecies

853
00:51:59,560 --> 00:52:05,170
yeah alter connect and the

854
00:52:01,900 --> 00:52:06,910
identification and the mess mess so the

855
00:52:05,170 --> 00:52:09,430
trustees are at the same time just one

856
00:52:06,910 --> 00:52:12,368
procedure so we can see we can so that

857
00:52:09,430 --> 00:52:15,250
the returns these are shorter than the

858
00:52:12,369 --> 00:52:18,940
actual sass was a five so yeah actually

859
00:52:15,250 --> 00:52:21,010
yeah that make well yeah yeah but yeah

860
00:52:18,940 --> 00:52:22,960
yeah okay thanks to my comment about

861
00:52:21,010 --> 00:52:29,650
that yeah the experience on six

862
00:52:22,960 --> 00:52:31,480
is is well appreciated here yeah thanks

863
00:52:29,650 --> 00:52:34,300
a lot is really very useful information

864
00:52:31,480 --> 00:52:35,590
we often do this in TCP M if we finalize

865
00:52:34,300 --> 00:52:38,140
the document it's always good to have

866
00:52:35,590 --> 00:52:42,130
feedback from potential users so thanks

867
00:52:38,140 --> 00:52:46,150
a lot for this very useful data and as I

868
00:52:42,130 --> 00:52:50,680
said before for this document is about

869
00:52:46,150 --> 00:52:53,110
to finish the only pending thing is is I

870
00:52:50,680 --> 00:52:54,940
have to find flow basically and then we

871
00:52:53,110 --> 00:52:57,730
are done with the document and we will

872
00:52:54,940 --> 00:53:02,800
ship it to di is Qi then so thanks a lot

873
00:52:57,730 --> 00:53:05,650
thank you so if it's terminates the

874
00:53:02,800 --> 00:53:08,350
section of presentations regarding

875
00:53:05,650 --> 00:53:11,260
working of documents so the next one is

876
00:53:08,350 --> 00:53:27,880
praveen miss I start plus plus and his

877
00:53:11,260 --> 00:53:30,640
remote hi can you hear me yes hi

878
00:53:27,880 --> 00:53:32,710
everyone today I'm going to present hi

879
00:53:30,640 --> 00:53:35,890
start plus plus it's a modified version

880
00:53:32,710 --> 00:53:39,310
of slow start for TCP work done with

881
00:53:35,890 --> 00:53:41,069
others but present in today next slide

882
00:53:39,310 --> 00:53:45,400
please

883
00:53:41,070 --> 00:53:47,830
so first let's quickly recap hi start so

884
00:53:45,400 --> 00:53:52,110
traditional slow start for TCP has a

885
00:53:47,830 --> 00:53:55,150
flaw so it does exponential increase but

886
00:53:52,110 --> 00:53:57,910
it can potentially overshoot the ideal

887
00:53:55,150 --> 00:54:00,820
sending rate by a lot and this causes

888
00:53:57,910 --> 00:54:02,410
massive packet drops and then TCP spends

889
00:54:00,820 --> 00:54:03,970
multiple round-trip times recovering

890
00:54:02,410 --> 00:54:07,120
from those losses even if you have

891
00:54:03,970 --> 00:54:08,890
logically algorithms like rack sometimes

892
00:54:07,120 --> 00:54:14,350
this hands up causing retransmission

893
00:54:08,890 --> 00:54:17,049
timeout so high start is a paper that

894
00:54:14,350 --> 00:54:19,000
was published which had two schemes to

895
00:54:17,050 --> 00:54:21,220
solve this problem

896
00:54:19,000 --> 00:54:23,470
so the Cole here is to exit slow start

897
00:54:21,220 --> 00:54:25,089
early before the Mass Effect packet loss

898
00:54:23,470 --> 00:54:27,339
happens so the paper had two algorithms

899
00:54:25,090 --> 00:54:29,170
one was based on deal increase and the

900
00:54:27,340 --> 00:54:31,120
other was based on entropic at arrival

901
00:54:29,170 --> 00:54:32,950
the original paper suggested that the

902
00:54:31,120 --> 00:54:34,120
sender run both of these algorithms in

903
00:54:32,950 --> 00:54:37,450
parallel

904
00:54:34,120 --> 00:54:39,130
and then exit slow start early the

905
00:54:37,450 --> 00:54:40,689
problem is that the inter packet arrival

906
00:54:39,130 --> 00:54:41,830
algorithm does not really work well

907
00:54:40,690 --> 00:54:43,450
because there is a lot of act

908
00:54:41,830 --> 00:54:46,569
compression happening

909
00:54:43,450 --> 00:54:51,310
both on the receiver because of things

910
00:54:46,570 --> 00:54:53,410
like RC as well as I meant LRO and as

911
00:54:51,310 --> 00:54:56,529
well as the network doing ACK

912
00:54:53,410 --> 00:54:59,770
compression the dealer increase

913
00:54:56,530 --> 00:55:01,030
algorithm works but we find that it has

914
00:54:59,770 --> 00:55:04,600
a lot of false positives

915
00:55:01,030 --> 00:55:07,180
this happens because of latency

916
00:55:04,600 --> 00:55:09,850
fluctuations on wireless links it also

917
00:55:07,180 --> 00:55:11,560
happens because there could be a large

918
00:55:09,850 --> 00:55:13,810
burst from another flow that could cause

919
00:55:11,560 --> 00:55:15,610
transient queue build-up which could

920
00:55:13,810 --> 00:55:17,470
last multiple round-trip times and then

921
00:55:15,610 --> 00:55:19,900
you and then the fluid ends up exiting

922
00:55:17,470 --> 00:55:21,370
slow start very early and then

923
00:55:19,900 --> 00:55:25,920
congestion avoidance will take a long

924
00:55:21,370 --> 00:55:28,569
time to ramp up next slide please so

925
00:55:25,920 --> 00:55:30,460
what is the deal increase algorithm the

926
00:55:28,570 --> 00:55:34,870
goal is to keep track of the minimum of

927
00:55:30,460 --> 00:55:37,750
0 delta T in each round so four rounds

928
00:55:34,870 --> 00:55:43,299
where so we keep track of this minimum

929
00:55:37,750 --> 00:55:45,670
oddity until the condition window is

930
00:55:43,300 --> 00:55:47,350
higher than the minimum ssthresh value

931
00:55:45,670 --> 00:55:49,570
this is to ensure that slow start does

932
00:55:47,350 --> 00:55:50,920
not exit too early there's some

933
00:55:49,570 --> 00:55:52,600
protection and high start for not

934
00:55:50,920 --> 00:55:54,520
exiting slow start early so the first

935
00:55:52,600 --> 00:55:56,980
few rounds we know not eyes it's lost

936
00:55:54,520 --> 00:56:00,310
out even if delay is increasing once

937
00:55:56,980 --> 00:56:03,730
that condition is met then we calculate

938
00:56:00,310 --> 00:56:06,070
bt a based on the last rounds observed

939
00:56:03,730 --> 00:56:08,020
minimal T and if the current round our

940
00:56:06,070 --> 00:56:10,750
GT is greater than a certain threshold

941
00:56:08,020 --> 00:56:12,550
from the last minimum observed our

942
00:56:10,750 --> 00:56:15,370
treaty then we exit slow start and we

943
00:56:12,550 --> 00:56:17,170
capture the value of insets Thresh I'm

944
00:56:15,370 --> 00:56:18,460
loading down the constants that is used

945
00:56:17,170 --> 00:56:22,390
in the current implementation and

946
00:56:18,460 --> 00:56:24,100
windows I I believe that the constants

947
00:56:22,390 --> 00:56:26,859
are very similar in Linux based on

948
00:56:24,100 --> 00:56:31,810
mailing list discussions next slide

949
00:56:26,860 --> 00:56:35,290
please so why is this not sufficient the

950
00:56:31,810 --> 00:56:38,230
problem here is that even if you do this

951
00:56:35,290 --> 00:56:40,630
only for the initial slow start the slow

952
00:56:38,230 --> 00:56:43,150
start could exit prematurely because of

953
00:56:40,630 --> 00:56:45,040
the two problems I mentioned so what

954
00:56:43,150 --> 00:56:47,100
high star plus plus does is introduces

955
00:56:45,040 --> 00:56:50,070
Limited slow start right after

956
00:56:47,100 --> 00:56:52,710
the TCP flow leaves slow-start

957
00:56:50,070 --> 00:56:55,230
so basically what we want to do here is

958
00:56:52,710 --> 00:56:56,370
for each arriving AK we want to still

959
00:56:55,230 --> 00:56:57,930
grow the congestion window but not

960
00:56:56,370 --> 00:57:00,589
exponentially so this is an additive

961
00:56:57,930 --> 00:57:03,240
increase its large additive increase and

962
00:57:00,590 --> 00:57:04,920
this will continue until the congestion

963
00:57:03,240 --> 00:57:06,810
signal happens the next congestion

964
00:57:04,920 --> 00:57:08,280
signal happens and then we enter

965
00:57:06,810 --> 00:57:10,560
condition avoidance so this is a phase

966
00:57:08,280 --> 00:57:13,370
between slow start and congestion

967
00:57:10,560 --> 00:57:16,380
avoidance we do limit reach slow start

968
00:57:13,370 --> 00:57:19,609
the Ellis's divisor we picked was based

969
00:57:16,380 --> 00:57:22,620
on experimental results in the lab

970
00:57:19,610 --> 00:57:25,650
simulating various possible bottleneck

971
00:57:22,620 --> 00:57:32,700
buffer links buffer sizes as well as RTT

972
00:57:25,650 --> 00:57:34,140
and bandwidth next slide please so when

973
00:57:32,700 --> 00:57:35,759
we posted this draft to the mailing list

974
00:57:34,140 --> 00:57:38,580
there was a very interesting suggestion

975
00:57:35,760 --> 00:57:40,740
by Anil Cardwell so thanks to him so on

976
00:57:38,580 --> 00:57:42,950
high bdp links this can still cause the

977
00:57:40,740 --> 00:57:46,109
congestion window to gross too slowly if

978
00:57:42,950 --> 00:57:49,290
even if we do limited slow start so the

979
00:57:46,110 --> 00:57:51,300
idea is to basically also start

980
00:57:49,290 --> 00:57:53,400
computing the congestion avoidance based

981
00:57:51,300 --> 00:57:55,830
congestion window and take the max of

982
00:57:53,400 --> 00:57:58,740
the value computed by limiter slow start

983
00:57:55,830 --> 00:58:01,920
as well as condition avoidance this

984
00:57:58,740 --> 00:58:04,919
basically we were able to force this

985
00:58:01,920 --> 00:58:06,840
condition explicitly and we observed

986
00:58:04,920 --> 00:58:09,990
that for hi V DP links this does end up

987
00:58:06,840 --> 00:58:13,110
helping so the ramp up is much faster in

988
00:58:09,990 --> 00:58:19,350
cases where we exit too early due to

989
00:58:13,110 --> 00:58:21,270
high start next slide please so the

990
00:58:19,350 --> 00:58:22,589
current status is that this is deployed

991
00:58:21,270 --> 00:58:24,780
this is on by default for all

992
00:58:22,590 --> 00:58:28,350
connections I am talking to you from a

993
00:58:24,780 --> 00:58:30,870
system that has this on by default the

994
00:58:28,350 --> 00:58:33,660
fix for the high BP links is also now in

995
00:58:30,870 --> 00:58:37,770
preview so we expect to be also turned

996
00:58:33,660 --> 00:58:39,839
that on for the next release the draft

997
00:58:37,770 --> 00:58:42,870
was actually posted to the mailing list

998
00:58:39,840 --> 00:58:44,670
so please review and provide us feedback

999
00:58:42,870 --> 00:58:47,220
they already had one review but I would

1000
00:58:44,670 --> 00:58:48,780
be I'd appreciate it if more people

1001
00:58:47,220 --> 00:58:52,020
could review this and provide us

1002
00:58:48,780 --> 00:58:54,690
feedback in future we would like to

1003
00:58:52,020 --> 00:58:57,450
compare the other proposals for

1004
00:58:54,690 --> 00:59:00,310
improving slow start which is VBR

1005
00:58:57,450 --> 00:59:02,529
startup phase as well as

1006
00:59:00,310 --> 00:59:05,799
bass chirping which used to be a very

1007
00:59:02,530 --> 00:59:11,770
recent research on doing slow start by

1008
00:59:05,800 --> 00:59:13,300
using pacing and then any questions and

1009
00:59:11,770 --> 00:59:18,150
I will also like to ask the chairs

1010
00:59:13,300 --> 00:59:18,150
whether we can wrap this document in TCP

1011
00:59:20,760 --> 00:59:37,390
m9 questions Jen I endure kind of doing

1012
00:59:34,060 --> 00:59:39,370
this presentation Praveen it's useful I

1013
00:59:37,390 --> 00:59:41,020
was going to say that you said you're

1014
00:59:39,370 --> 00:59:43,150
using a system that uses this right now

1015
00:59:41,020 --> 00:59:46,330
but you must have startup phase so we

1016
00:59:43,150 --> 00:59:50,110
don't quite know how it went but I

1017
00:59:46,330 --> 00:59:54,790
limited that I was going to ask you if

1018
00:59:50,110 --> 00:59:57,850
you had any any any traces that you

1019
00:59:54,790 --> 01:00:00,340
could show where you could could show hi

1020
00:59:57,850 --> 01:00:02,440
surplus plus behavior it seems quite

1021
01:00:00,340 --> 01:00:04,420
promising and obviously you've done

1022
01:00:02,440 --> 01:00:06,280
measurements and we've seen this you've

1023
01:00:04,420 --> 01:00:08,080
probably seen a million traces when we

1024
01:00:06,280 --> 01:00:10,320
super useful to see a few places to

1025
01:00:08,080 --> 01:00:13,060
understand exactly what the dynamics are

1026
01:00:10,320 --> 01:00:14,560
I'm also quite interested in

1027
01:00:13,060 --> 01:00:19,960
understanding the convergence dynamics

1028
01:00:14,560 --> 01:00:24,340
of icer plus plus with other flows work

1029
01:00:19,960 --> 01:00:27,220
as well thanks John oh that's great

1030
01:00:24,340 --> 01:00:30,220
feedback so yes we would like to present

1031
01:00:27,220 --> 01:00:32,080
more results on this we do have lab

1032
01:00:30,220 --> 01:00:34,569
measurement data we are also currently

1033
01:00:32,080 --> 01:00:36,340
working on metrics that we could collect

1034
01:00:34,570 --> 01:00:39,310
more data from the wild to be able to

1035
01:00:36,340 --> 01:00:41,050
compare actually in in production

1036
01:00:39,310 --> 01:00:43,450
systems data from in production system

1037
01:00:41,050 --> 01:00:45,220
to see how effective this is so we are

1038
01:00:43,450 --> 01:00:47,319
currently working on techniques to do a

1039
01:00:45,220 --> 01:00:49,500
very effective comparison from both lab

1040
01:00:47,320 --> 01:00:53,170
measurements as well as in wild

1041
01:00:49,500 --> 01:00:55,830
measurements so yes I will try to get

1042
01:00:53,170 --> 01:00:58,720
you that data by the next ideas I

1043
01:00:55,830 --> 01:01:00,250
appreciate her thank you much I was also

1044
01:00:58,720 --> 01:01:03,100
going to ask you a separate question

1045
01:01:00,250 --> 01:01:05,770
this is so high sod basically tries to

1046
01:01:03,100 --> 01:01:08,710
figure out how to leave early and that's

1047
01:01:05,770 --> 01:01:10,750
useful but also work that can be done at

1048
01:01:08,710 --> 01:01:12,160
the beginning of I start this is still

1049
01:01:10,750 --> 01:01:13,630
continuously all of these except for

1050
01:01:12,160 --> 01:01:15,129
page chirping we

1051
01:01:13,630 --> 01:01:16,119
this exponential increase that happens

1052
01:01:15,130 --> 01:01:22,569
at the beginning have you thought about

1053
01:01:16,119 --> 01:01:24,220
changing that aspect of it so

1054
01:01:22,569 --> 01:01:25,720
exponentially increase actually is very

1055
01:01:24,220 --> 01:01:28,000
very helpful so yes because you're

1056
01:01:25,720 --> 01:01:29,379
starting out fresh yeah you can use a

1057
01:01:28,000 --> 01:01:33,009
higher initial congestion window and

1058
01:01:29,380 --> 01:01:34,569
pace but even then for high bdp links if

1059
01:01:33,009 --> 01:01:36,609
you don't do exponential increase then

1060
01:01:34,569 --> 01:01:39,660
it's very difficult to figure out what

1061
01:01:36,609 --> 01:01:39,660
the ideal sending rate should be

1062
01:01:41,819 --> 01:01:47,799
experiencing making it more aggressive

1063
01:01:45,029 --> 01:01:49,329
no we have actually we find that it's

1064
01:01:47,799 --> 01:01:52,569
already too aggressive that's the reason

1065
01:01:49,329 --> 01:01:54,720
like high start helps a lot and that's

1066
01:01:52,569 --> 01:01:57,069
why Isis is also so effective because

1067
01:01:54,720 --> 01:01:58,899
under the righty of network conditions

1068
01:01:57,069 --> 01:02:02,680
we find that this overshoots the idols

1069
01:01:58,900 --> 01:02:05,349
and rate almost all the time so so it's

1070
01:02:02,680 --> 01:02:07,269
actually too aggressive already so

1071
01:02:05,349 --> 01:02:10,089
that's the reason we are doing high

1072
01:02:07,269 --> 01:02:11,470
stats just a last comment I'm basically

1073
01:02:10,089 --> 01:02:14,349
I'm trying to clarify my point which is

1074
01:02:11,470 --> 01:02:16,930
high sod is a way to leave exponential

1075
01:02:14,349 --> 01:02:18,339
increase what I'm talking about is paste

1076
01:02:16,930 --> 01:02:20,049
shopping for example doesn't do that

1077
01:02:18,339 --> 01:02:21,670
exponential increase up front it does it

1078
01:02:20,049 --> 01:02:22,779
but in a very different sort of way I'm

1079
01:02:21,670 --> 01:02:25,480
trying to figure out if there are ways

1080
01:02:22,779 --> 01:02:27,099
to combine those things where high

1081
01:02:25,480 --> 01:02:30,039
surplus plus helps you leave

1082
01:02:27,099 --> 01:02:32,019
remove when you when you then believe

1083
01:02:30,039 --> 01:02:33,849
that you've you've sat you to the

1084
01:02:32,019 --> 01:02:39,669
network but you start off in a different

1085
01:02:33,849 --> 01:02:41,849
way but yes certainly possible at least

1086
01:02:39,670 --> 01:02:43,960
for this draft the goal was to actually

1087
01:02:41,849 --> 01:02:45,549
document the implementation as this so

1088
01:02:43,960 --> 01:02:47,710
currently is intended for informational

1089
01:02:45,549 --> 01:02:49,420
status but I do agree that there's a lot

1090
01:02:47,710 --> 01:02:56,079
of like possible more possible research

1091
01:02:49,420 --> 01:02:59,349
here to make slow start better is an

1092
01:02:56,079 --> 01:03:02,920
individual asking if you run this on any

1093
01:02:59,349 --> 01:03:05,529
network source ee marking to see if that

1094
01:03:02,920 --> 01:03:09,490
avoids the bursty behavior it's

1095
01:03:05,529 --> 01:03:11,470
beginning your chain so unfortunately

1096
01:03:09,490 --> 01:03:13,149
easy and is not widely deployed and we

1097
01:03:11,470 --> 01:03:15,250
don't turn it on by default so we don't

1098
01:03:13,150 --> 01:03:16,839
have data to suggest if it's it will

1099
01:03:15,250 --> 01:03:18,910
help but certainly none of this changes

1100
01:03:16,839 --> 01:03:20,529
response to congestion signals right so

1101
01:03:18,910 --> 01:03:23,920
if you get do get explicit congestion

1102
01:03:20,529 --> 01:03:25,779
signal we will exit slow start so and

1103
01:03:23,920 --> 01:03:26,799
again we will exit low limit or slow

1104
01:03:25,779 --> 01:03:28,630
start as well whenever

1105
01:03:26,799 --> 01:03:30,309
there's a condition signal so none of

1106
01:03:28,630 --> 01:03:33,069
that changes but no we have not

1107
01:03:30,309 --> 01:03:36,900
experimented with ECM okay I would like

1108
01:03:33,069 --> 01:03:36,900
to see some experiments was easy and on

1109
01:03:39,359 --> 01:03:44,949
evening I would comment that is what

1110
01:03:41,709 --> 01:03:47,499
China China said about this using pacing

1111
01:03:44,949 --> 01:03:49,539
and combining it with high stealth and I

1112
01:03:47,499 --> 01:03:53,078
see they are totally incompatible

1113
01:03:49,539 --> 01:03:57,789
because I start realizing building clear

1114
01:03:53,079 --> 01:03:58,929
team and pacing on the other hand tries

1115
01:03:57,789 --> 01:04:01,539
to avoid building

1116
01:03:58,929 --> 01:04:14,549
q so it's hard to measure something you

1117
01:04:01,539 --> 01:04:14,549
don't build so any other questions

1118
01:04:15,089 --> 01:04:20,949
that's not the case thank you for that

1119
01:04:17,999 --> 01:04:22,959
Praveen you're asking for working group

1120
01:04:20,949 --> 01:04:26,439
adoption so the document is clearly

1121
01:04:22,959 --> 01:04:28,719
within the scope and can be taken at

1122
01:04:26,439 --> 01:04:34,689
some point of time we would like to see

1123
01:04:28,719 --> 01:04:36,459
measurement data before we do this yeah

1124
01:04:34,689 --> 01:04:41,379
thanks I will work on that thank you

1125
01:04:36,459 --> 01:04:44,229
okay thank you so the next one is also

1126
01:04:41,380 --> 01:04:48,789
remote presentation about jingle pings

1127
01:04:44,229 --> 01:04:54,069
for TCP clients and servers yes I can

1128
01:04:48,789 --> 01:04:57,719
hear me yes we do okay great remote

1129
01:04:54,069 --> 01:04:57,719
stuff is working pretty well today

1130
01:05:02,840 --> 01:05:06,460
we are trying to bring up the slides

1131
01:05:27,710 --> 01:05:32,960
okay great I can see them and I'll just

1132
01:05:30,320 --> 01:05:35,390
say next is we need to move along so hi

1133
01:05:32,960 --> 01:05:37,460
my name is Kent Watson and I'm typically

1134
01:05:35,390 --> 01:05:41,029
in the net continent mod working groups

1135
01:05:37,460 --> 01:05:43,070
but today I'm presenting to TC p.m. a

1136
01:05:41,030 --> 01:05:45,680
draft that's been adopted by the neck

1137
01:05:43,070 --> 01:05:49,130
off working group for defining gang

1138
01:05:45,680 --> 01:05:52,970
groupings for TCP clients and servers my

1139
01:05:49,130 --> 01:05:54,859
co-author Michael Scharf is has helped

1140
01:05:52,970 --> 01:05:57,529
me with this and I think it was adopted

1141
01:05:54,859 --> 01:06:00,109
we see see the TCP mailing lists during

1142
01:05:57,530 --> 01:06:01,420
the adoption poll after 104 next slide

1143
01:06:00,109 --> 01:06:04,400
please

1144
01:06:01,420 --> 01:06:07,220
so firstly it's understood that within

1145
01:06:04,400 --> 01:06:09,050
TCP you know their simultaneous opens

1146
01:06:07,220 --> 01:06:10,549
and you know peer-to-peer protocol

1147
01:06:09,050 --> 01:06:13,280
there's not really a client or server

1148
01:06:10,550 --> 01:06:15,800
but nonetheless here and we refer to

1149
01:06:13,280 --> 01:06:18,170
terms client and server the client is

1150
01:06:15,800 --> 01:06:20,210
the peer that's initiating the

1151
01:06:18,170 --> 01:06:22,220
connection and the server's the peer

1152
01:06:20,210 --> 01:06:25,640
that's receiving or accepting the

1153
01:06:22,220 --> 01:06:27,618
connection having the open port it's

1154
01:06:25,640 --> 01:06:30,790
also noteworthy that within the net

1155
01:06:27,619 --> 01:06:33,830
cough and were Tresckow protocols

1156
01:06:30,790 --> 01:06:35,779
sometimes the client is the controller

1157
01:06:33,830 --> 01:06:38,480
or network management application

1158
01:06:35,780 --> 01:06:41,150
whereas the server's the device which

1159
01:06:38,480 --> 01:06:44,859
would be a router or switch or firewall

1160
01:06:41,150 --> 01:06:44,859
for instance next slide please

1161
01:06:45,700 --> 01:06:49,310
this is actually a problem that the

1162
01:06:47,900 --> 01:06:51,770
Netcom porting group has been trying to

1163
01:06:49,310 --> 01:06:54,380
solve for roughly five years the problem

1164
01:06:51,770 --> 01:06:57,950
being how to configure Netcom from

1165
01:06:54,380 --> 01:07:00,290
rushkoff clients and servers using gang

1166
01:06:57,950 --> 01:07:02,180
data bottles so you know designing the

1167
01:07:00,290 --> 01:07:04,310
gang data models that would produce the

1168
01:07:02,180 --> 01:07:07,549
configuration hierarchy and in many

1169
01:07:04,310 --> 01:07:10,339
cases translates out to CLI that could

1170
01:07:07,550 --> 01:07:13,369
be executed on routers and switches or

1171
01:07:10,339 --> 01:07:14,690
firewalls or or even now the protocols

1172
01:07:13,369 --> 01:07:17,990
are being used by higher-level

1173
01:07:14,690 --> 01:07:20,390
applications and so it actually

1174
01:07:17,990 --> 01:07:22,729
initiated off with one draft being the

1175
01:07:20,390 --> 01:07:25,609
Netcom server draft and then quickly

1176
01:07:22,730 --> 01:07:27,770
folks said oh we let's also have not

1177
01:07:25,609 --> 01:07:30,109
just neck off but we need to do rest

1178
01:07:27,770 --> 01:07:32,960
comp as well and then we can't just do

1179
01:07:30,109 --> 01:07:37,029
servers we have to do clients and it

1180
01:07:32,960 --> 01:07:37,030
became larger and larger my slide please

1181
01:07:37,270 --> 01:07:41,540
just a little bit about yang beta models

1182
01:07:39,859 --> 01:07:42,980
I I think some of you may

1183
01:07:41,540 --> 01:07:44,720
have a passing understanding of gang a

1184
01:07:42,980 --> 01:07:48,260
note certainly popular within the ietf

1185
01:07:44,720 --> 01:07:51,319
of late but not everyone is up to speeds

1186
01:07:48,260 --> 01:07:54,950
so just quickly yang is an ITF

1187
01:07:51,320 --> 01:07:57,350
replacement for SNMP MIPS it is a way to

1188
01:07:54,950 --> 01:08:01,089
describe data it's a data modeling

1189
01:07:57,350 --> 01:08:04,790
language yang is Tanaka Andres Kampf or

1190
01:08:01,090 --> 01:08:08,900
likewise XML JSON as for instance and

1191
01:08:04,790 --> 01:08:13,340
mythos - SNMP XS D is to XML ASTM dot 1

1192
01:08:08,900 --> 01:08:14,440
is to Pender ber encoding and avian F is

1193
01:08:13,340 --> 01:08:17,210
to binary

1194
01:08:14,440 --> 01:08:19,180
hopefully that makes sense next slide

1195
01:08:17,210 --> 01:08:22,130
please

1196
01:08:19,180 --> 01:08:24,500
ok so just going back to the history and

1197
01:08:22,130 --> 01:08:25,819
interestingly this slides not formatted

1198
01:08:24,500 --> 01:08:29,569
it supposed to be pretty ASCII our

1199
01:08:25,819 --> 01:08:34,450
symmetric tree there but nonetheless in

1200
01:08:29,569 --> 01:08:37,400
the 2000 sorry in the ITF 102 time frame

1201
01:08:34,450 --> 01:08:39,439
the net off work group had the following

1202
01:08:37,399 --> 01:08:42,349
hierarchy of adopted working group

1203
01:08:39,439 --> 01:08:45,049
drafts so the the the names that you see

1204
01:08:42,350 --> 01:08:48,109
there are actually draft names you would

1205
01:08:45,049 --> 01:08:52,010
prefix each of them with draft - IETF -

1206
01:08:48,109 --> 01:08:54,380
neck off - and then the the name to get

1207
01:08:52,010 --> 01:08:57,589
the full draft name so it's actually a

1208
01:08:54,380 --> 01:09:00,700
hierarchy of drafts the the top 3 each

1209
01:08:57,589 --> 01:09:04,359
are just defining a single grouping and

1210
01:09:00,700 --> 01:09:07,370
then the bottom four are each defining

1211
01:09:04,359 --> 01:09:08,750
to definitely two groupings for the one

1212
01:09:07,370 --> 01:09:10,430
for the client and one another for the

1213
01:09:08,750 --> 01:09:13,279
server and in some cases a third

1214
01:09:10,430 --> 01:09:15,020
grouping representing a common a common

1215
01:09:13,279 --> 01:09:16,130
grouping or certain amount of

1216
01:09:15,020 --> 01:09:17,870
configuration parameters are being

1217
01:09:16,130 --> 01:09:20,690
shared by both the clients and the

1218
01:09:17,870 --> 01:09:23,568
server's again this is what we had in

1219
01:09:20,689 --> 01:09:24,889
the one or two time frame the note on

1220
01:09:23,569 --> 01:09:27,109
the right hand side is just mentioning

1221
01:09:24,890 --> 01:09:30,109
that in case you're not aware the Netcom

1222
01:09:27,109 --> 01:09:32,299
protocol is has a mandatory binding to

1223
01:09:30,109 --> 01:09:35,330
ssh and then then there's optional

1224
01:09:32,299 --> 01:09:37,250
protocol binding to TLS and the rest

1225
01:09:35,330 --> 01:09:40,880
cough protocol has a mandatory binding

1226
01:09:37,250 --> 01:09:44,120
to http which of course is HTTP on top a

1227
01:09:40,880 --> 01:09:47,569
TLS so well you don't see the dependency

1228
01:09:44,120 --> 01:09:48,799
arrows quite well quite right that's

1229
01:09:47,569 --> 01:09:51,640
what they're trying to illustrate there

1230
01:09:48,799 --> 01:09:51,640
next slide please

1231
01:09:52,779 --> 01:09:59,650
the yang models at that time defined

1232
01:09:55,720 --> 01:10:03,610
knobs within the SSH in TLS groupings

1233
01:09:59,650 --> 01:10:06,730
for keeping lives of course if you're

1234
01:10:03,610 --> 01:10:09,339
having I mean we within those protocols

1235
01:10:06,730 --> 01:10:11,860
there's actually there were the standard

1236
01:10:09,340 --> 01:10:13,450
protocols is the client initiate that

1237
01:10:11,860 --> 01:10:15,820
there's would be that the controller

1238
01:10:13,450 --> 01:10:19,389
application initiate the connection to

1239
01:10:15,820 --> 01:10:21,840
the device but with RFC 80-71

1240
01:10:19,390 --> 01:10:25,480
we introduced this notion of a call home

1241
01:10:21,840 --> 01:10:27,970
which what really happens is the devices

1242
01:10:25,480 --> 01:10:31,030
initiating the underlying TCP connection

1243
01:10:27,970 --> 01:10:33,970
to the controller application and then

1244
01:10:31,030 --> 01:10:36,219
immediately the protocols flip and so

1245
01:10:33,970 --> 01:10:39,130
while the controller application begins

1246
01:10:36,220 --> 01:10:42,820
as the TCP server for instance it then

1247
01:10:39,130 --> 01:10:45,220
presumed or resumes acting like the SSH

1248
01:10:42,820 --> 01:10:49,630
clients or the TLS client on top of that

1249
01:10:45,220 --> 01:10:51,220
accepted file descriptor socket this is

1250
01:10:49,630 --> 01:10:54,160
critically important because sometimes

1251
01:10:51,220 --> 01:10:56,980
the devices are being deployed behind

1252
01:10:54,160 --> 01:11:00,460
maps and network address translation

1253
01:10:56,980 --> 01:11:02,799
type firewalls that it makes it

1254
01:11:00,460 --> 01:11:04,210
impossible for an external system to

1255
01:11:02,800 --> 01:11:06,250
initiate a management connection to the

1256
01:11:04,210 --> 01:11:09,640
device so for the device to initiate the

1257
01:11:06,250 --> 01:11:13,000
connection becomes critical and but

1258
01:11:09,640 --> 01:11:15,970
similarly it's necessary in some cases

1259
01:11:13,000 --> 01:11:18,390
for the device to be able to ensure that

1260
01:11:15,970 --> 01:11:21,970
the connection remains up that is

1261
01:11:18,390 --> 01:11:24,550
persistent connection and hence actively

1262
01:11:21,970 --> 01:11:28,750
testing the aliveness of its protocol

1263
01:11:24,550 --> 01:11:30,760
appear becomes important and we felt

1264
01:11:28,750 --> 01:11:33,400
that we could use the keepalive

1265
01:11:30,760 --> 01:11:37,390
mechanisms as they're defined already in

1266
01:11:33,400 --> 01:11:40,960
SSH and TLS to do that for us

1267
01:11:37,390 --> 01:11:43,390
however broadband and broadband forum

1268
01:11:40,960 --> 01:11:46,960
and Nokia were implementing this and

1269
01:11:43,390 --> 01:11:49,120
they discovered that TLS keepalive are

1270
01:11:46,960 --> 01:11:52,540
not very well supported in the open SSL

1271
01:11:49,120 --> 01:11:54,760
library that they were using even though

1272
01:11:52,540 --> 01:11:58,180
there's an RFC for defining TLS keep

1273
01:11:54,760 --> 01:12:00,820
alive open SSL has not implemented it in

1274
01:11:58,180 --> 01:12:02,470
fact they they partially implemented it

1275
01:12:00,820 --> 01:12:05,110
and then decided to remove that partial

1276
01:12:02,470 --> 01:12:06,880
implementation so it may not get back

1277
01:12:05,110 --> 01:12:10,450
into open SSL anytime

1278
01:12:06,880 --> 01:12:12,940
and nonetheless Nokia and broadband

1279
01:12:10,450 --> 01:12:15,690
forum were you know asking if we could

1280
01:12:12,940 --> 01:12:17,980
then enable keepalive set the TCP layer

1281
01:12:15,690 --> 01:12:22,030
which seemed reasonable there is

1282
01:12:17,980 --> 01:12:26,429
actually a discussion with a TSV area

1283
01:12:22,030 --> 01:12:29,349
and you know Spencer Dawkins and others

1284
01:12:26,430 --> 01:12:31,360
participate in that conversation we we

1285
01:12:29,350 --> 01:12:33,220
came to the conclusion that supporting

1286
01:12:31,360 --> 01:12:35,290
keepa lives on every layer of a protocol

1287
01:12:33,220 --> 01:12:38,830
stack is critically important and and

1288
01:12:35,290 --> 01:12:40,900
hence there's no reason to not enable

1289
01:12:38,830 --> 01:12:44,350
the ability to configure keep a lives

1290
01:12:40,900 --> 01:12:46,360
also at the TCP layer but then the

1291
01:12:44,350 --> 01:12:52,840
question was how to do it and next slide

1292
01:12:46,360 --> 01:12:56,230
please so in the 103 time frame we

1293
01:12:52,840 --> 01:12:59,730
started to discuss how we might be able

1294
01:12:56,230 --> 01:13:02,440
to create additional protocol you know

1295
01:12:59,730 --> 01:13:06,040
groupings yang groupings for these other

1296
01:13:02,440 --> 01:13:08,259
layers again this graph is not the

1297
01:13:06,040 --> 01:13:11,440
pictures not lending up nicely but

1298
01:13:08,260 --> 01:13:14,560
essentially a TCP client-server draft

1299
01:13:11,440 --> 01:13:18,969
that would define groupings for TCP and

1300
01:13:14,560 --> 01:13:21,520
likewise HTTP and HTTPS the idea here

1301
01:13:18,970 --> 01:13:23,320
being is that then each layer having its

1302
01:13:21,520 --> 01:13:26,020
own grouping can define the

1303
01:13:23,320 --> 01:13:29,349
configuration for the keeper lives at

1304
01:13:26,020 --> 01:13:31,750
its a layer and this actually is quite

1305
01:13:29,350 --> 01:13:33,610
good because every protocol has slightly

1306
01:13:31,750 --> 01:13:37,510
different ways of configuring against

1307
01:13:33,610 --> 01:13:40,059
keep lives and so enabling the

1308
01:13:37,510 --> 01:13:43,150
configuration Beco or the definition of

1309
01:13:40,060 --> 01:13:45,160
the configuration to be co-located with

1310
01:13:43,150 --> 01:13:47,940
each protocol layer was right way to go

1311
01:13:45,160 --> 01:13:51,370
next slide please

1312
01:13:47,940 --> 01:13:53,469
that particular slide the previous one

1313
01:13:51,370 --> 01:13:55,510
you don't don't go to it but it while I

1314
01:13:53,470 --> 01:13:57,790
didn't say it at the time it was kind of

1315
01:13:55,510 --> 01:14:00,070
representing and is a relationship so

1316
01:13:57,790 --> 01:14:03,250
for instance if you instantiated in the

1317
01:14:00,070 --> 01:14:05,769
instance or the HTTP grouping it would

1318
01:14:03,250 --> 01:14:08,470
in turn instantiate an instance of both

1319
01:14:05,770 --> 01:14:09,970
of TLS and HTTP groupings and then in

1320
01:14:08,470 --> 01:14:12,280
turn they would instantiate an instance

1321
01:14:09,970 --> 01:14:15,340
so that TCP so Kevin is our relationship

1322
01:14:12,280 --> 01:14:16,360
to use an object-oriented comparison but

1323
01:14:15,340 --> 01:14:20,320
we found that actually there has a

1324
01:14:16,360 --> 01:14:20,799
relationship was better so in again that

1325
01:14:20,320 --> 01:14:22,420
slides not

1326
01:14:20,800 --> 01:14:23,890
quite right but you're on the bottom

1327
01:14:22,420 --> 01:14:25,960
there are sort of flat lists of the

1328
01:14:23,890 --> 01:14:28,270
various protocols that can be then be

1329
01:14:25,960 --> 01:14:31,300
composed to represent the various

1330
01:14:28,270 --> 01:14:33,970
protocol stacks so for instance you

1331
01:14:31,300 --> 01:14:37,200
could have TCP over HTTP by just

1332
01:14:33,970 --> 01:14:40,780
grabbing the groupings from those two

1333
01:14:37,200 --> 01:14:43,780
drafts or alternatively you can have TCP

1334
01:14:40,780 --> 01:14:46,690
over TLS over HTTP just by inserting

1335
01:14:43,780 --> 01:14:49,150
also the grouping from the TLS draft in

1336
01:14:46,690 --> 01:14:51,400
between the other two so the composition

1337
01:14:49,150 --> 01:14:53,320
becomes quite nice so that's the current

1338
01:14:51,400 --> 01:14:58,980
that's currently what's been published

1339
01:14:53,320 --> 01:14:58,980
in the 104 time frame next slide please

1340
01:14:59,970 --> 01:15:06,100
and just took a little bit in detail of

1341
01:15:02,320 --> 01:15:08,559
what what the current draft defines it

1342
01:15:06,100 --> 01:15:11,410
is defining three gang modules there's a

1343
01:15:08,560 --> 01:15:13,420
common yang module and in that yang

1344
01:15:11,410 --> 01:15:16,090
module is defining two groupings there's

1345
01:15:13,420 --> 01:15:17,560
a common grouping and then there's the

1346
01:15:16,090 --> 01:15:18,640
what's called connection grouping so

1347
01:15:17,560 --> 01:15:21,430
it's the connection grouping that's

1348
01:15:18,640 --> 01:15:23,740
being used by the other groupings the

1349
01:15:21,430 --> 01:15:26,080
purpose of this factoring out of the

1350
01:15:23,740 --> 01:15:27,460
common grouping is so that in case maybe

1351
01:15:26,080 --> 01:15:29,650
someday in the future

1352
01:15:27,460 --> 01:15:31,870
TCP M would like to define a system

1353
01:15:29,650 --> 01:15:34,540
grouping that would represent for

1354
01:15:31,870 --> 01:15:38,019
instance the TCP configuration of the

1355
01:15:34,540 --> 01:15:39,670
operating system itself and so we have

1356
01:15:38,020 --> 01:15:41,490
this common grouping that right now the

1357
01:15:39,670 --> 01:15:43,960
only thing is defining or keeper lives

1358
01:15:41,490 --> 01:15:45,730
there's the connection grouping and it's

1359
01:15:43,960 --> 01:15:47,200
only thing it's doing is using that

1360
01:15:45,730 --> 01:15:49,629
common grouping if there's no additional

1361
01:15:47,200 --> 01:15:52,900
configuration beyond that then there's a

1362
01:15:49,630 --> 01:15:55,720
second module for TCP client and you can

1363
01:15:52,900 --> 01:15:57,940
see that it's it's well actually it's

1364
01:15:55,720 --> 01:16:00,550
not easy to see on the slide I'm sorry

1365
01:15:57,940 --> 01:16:02,500
about that but it's a it's defining

1366
01:16:00,550 --> 01:16:05,590
essentially what is the remote port

1367
01:16:02,500 --> 01:16:08,830
address and sorry a remote address and a

1368
01:16:05,590 --> 01:16:11,860
remote port as well as optionally a

1369
01:16:08,830 --> 01:16:14,740
local address and a local port and then

1370
01:16:11,860 --> 01:16:16,870
it's using the TCP connection grouping

1371
01:16:14,740 --> 01:16:19,809
so that's where it inherits keep your

1372
01:16:16,870 --> 01:16:21,700
lives and then there's a server but the

1373
01:16:19,810 --> 01:16:23,380
slide is messed it up pretty badly so I

1374
01:16:21,700 --> 01:16:25,690
won't try to speak through it but a very

1375
01:16:23,380 --> 01:16:28,150
similar idea worse where it's inheriting

1376
01:16:25,690 --> 01:16:29,919
some of the configuration from the

1377
01:16:28,150 --> 01:16:33,559
common grouping hopefully the next slide

1378
01:16:29,920 --> 01:16:38,150
works please next slide

1379
01:16:33,560 --> 01:16:39,470
ah it's not that much better so it's

1380
01:16:38,150 --> 01:16:40,730
supposed to be shown here is the

1381
01:16:39,470 --> 01:16:43,040
flattening of all those useless

1382
01:16:40,730 --> 01:16:48,169
statements from the previous slide into

1383
01:16:43,040 --> 01:16:50,180
the tree diagrams and I think we might

1384
01:16:48,170 --> 01:16:51,800
be able to see the top one there's the

1385
01:16:50,180 --> 01:16:53,750
the client grouping and you see the

1386
01:16:51,800 --> 01:16:56,810
remote address the remote port local

1387
01:16:53,750 --> 01:16:58,640
address the local port and then you can

1388
01:16:56,810 --> 01:17:00,110
kind of see the keeper lives but it gets

1389
01:16:58,640 --> 01:17:02,420
pretty terrible

1390
01:17:00,110 --> 01:17:05,440
unfortunately I that's very difficult to

1391
01:17:02,420 --> 01:17:08,360
see I really apologize for that the

1392
01:17:05,440 --> 01:17:10,730
what's important here those in its

1393
01:17:08,360 --> 01:17:13,280
difficulties is to see in blue

1394
01:17:10,730 --> 01:17:16,219
hopefully it's showing blue for you the

1395
01:17:13,280 --> 01:17:18,500
local bindings supported that's question

1396
01:17:16,220 --> 01:17:21,530
mark so that's a feature it's basically

1397
01:17:18,500 --> 01:17:23,960
saying you know does this device support

1398
01:17:21,530 --> 01:17:26,210
the notion of allowing the local address

1399
01:17:23,960 --> 01:17:29,000
the local port to be configured at all

1400
01:17:26,210 --> 01:17:31,130
or is it you know for the client for

1401
01:17:29,000 --> 01:17:35,600
instance or is it always a hopper system

1402
01:17:31,130 --> 01:17:38,270
that can wild card you know randomly

1403
01:17:35,600 --> 01:17:40,940
select what the local address and local

1404
01:17:38,270 --> 01:17:45,620
port should be based on routing

1405
01:17:40,940 --> 01:17:47,330
parameters or wildcards also and I know

1406
01:17:45,620 --> 01:17:50,269
you can't see it but in the keeper lives

1407
01:17:47,330 --> 01:17:53,240
there's the idle time and probe interval

1408
01:17:50,270 --> 01:17:56,440
both of these are currently you at 16s

1409
01:17:53,240 --> 01:17:58,880
and the resolution of those are seconds

1410
01:17:56,440 --> 01:18:00,200
so I thought actually Michael thought

1411
01:17:58,880 --> 01:18:02,060
that this would be interesting for the

1412
01:18:00,200 --> 01:18:05,059
working group to discuss if that

1413
01:18:02,060 --> 01:18:06,800
resolution was correct and accurate as

1414
01:18:05,060 --> 01:18:10,910
opposed to say 70 seconds or

1415
01:18:06,800 --> 01:18:12,980
milliseconds currently we're thinking

1416
01:18:10,910 --> 01:18:17,630
seconds is reasonable for the purpose of

1417
01:18:12,980 --> 01:18:21,700
keeping lives for TCP clients and server

1418
01:18:17,630 --> 01:18:21,700
connections next slide please

1419
01:18:22,600 --> 01:18:27,340
also not showing very well in the screen

1420
01:18:27,400 --> 01:18:34,370
okay so this here's an example and XML

1421
01:18:32,390 --> 01:18:36,020
is being shown but with anything that

1422
01:18:34,370 --> 01:18:38,300
you do with Yang you can also

1423
01:18:36,020 --> 01:18:40,160
simultaneously support JSON and in fact

1424
01:18:38,300 --> 01:18:42,470
there's another working group Cosi that

1425
01:18:40,160 --> 01:18:45,410
implements Seaborg which is a binary

1426
01:18:42,470 --> 01:18:47,960
representation of instance data that

1427
01:18:45,410 --> 01:18:50,989
conforms to the gang data bottles

1428
01:18:47,960 --> 01:18:52,130
but in this example at the very top at

1429
01:18:50,989 --> 01:18:54,349
least we can get through some of it

1430
01:18:52,130 --> 01:18:57,020
there's a remote address and notice here

1431
01:18:54,350 --> 01:19:03,380
it's actually using a host name so on

1432
01:18:57,020 --> 01:19:07,280
the previous slide was every question I

1433
01:19:03,380 --> 01:19:09,469
thought I heard some feedback on the

1434
01:19:07,280 --> 01:19:11,420
earlier slide it defined this remote

1435
01:19:09,469 --> 01:19:14,600
address type as what's known as an eye

1436
01:19:11,420 --> 01:19:17,570
net host which then allows for values as

1437
01:19:14,600 --> 01:19:20,469
either either being domain names or IP

1438
01:19:17,570 --> 01:19:23,179
addresses whether or their ipv4 or ipv6

1439
01:19:20,469 --> 01:19:25,969
so in this example of showing that it's

1440
01:19:23,179 --> 01:19:28,010
actually a hostname whereas and you

1441
01:19:25,969 --> 01:19:30,170
can't see it very well but down below in

1442
01:19:28,010 --> 01:19:34,850
the server it the local dress is the IP

1443
01:19:30,170 --> 01:19:37,030
address 10.20 30 to 40 and that

1444
01:19:34,850 --> 01:19:39,590
particular type is actually a specific

1445
01:19:37,030 --> 01:19:41,630
IP address is defined as an IP address

1446
01:19:39,590 --> 01:19:44,540
so there's no availability for it to be

1447
01:19:41,630 --> 01:19:48,380
configured as a as a domain host name

1448
01:19:44,540 --> 01:19:49,880
there also in this particular example

1449
01:19:48,380 --> 01:19:53,510
you can see at least the top the local

1450
01:19:49,880 --> 01:19:55,429
address 0 0 0 0 that's how it couldn't

1451
01:19:53,510 --> 01:19:57,500
defined in a specification for

1452
01:19:55,429 --> 01:19:59,780
designating wild card address and

1453
01:19:57,500 --> 01:20:03,620
likewise the port is just 0 for

1454
01:19:59,780 --> 01:20:05,710
designating wild card address next slide

1455
01:20:03,620 --> 01:20:05,710
please

1456
01:20:05,980 --> 01:20:10,610
so this is an eye chart we won't try to

1457
01:20:08,239 --> 01:20:13,099
go into but the wasn't trying to be

1458
01:20:10,610 --> 01:20:15,440
impressed upon you is that at the very

1459
01:20:13,100 --> 01:20:17,630
top in the middle is the TCP common

1460
01:20:15,440 --> 01:20:19,370
grouping and then off to the left is the

1461
01:20:17,630 --> 01:20:20,960
tcp client and off to the right is tcp

1462
01:20:19,370 --> 01:20:25,420
server and then there's sort of a

1463
01:20:20,960 --> 01:20:29,449
hierarchy of SSH and TLS and HTTP

1464
01:20:25,420 --> 01:20:33,980
modules sorry groupings that are that

1465
01:20:29,449 --> 01:20:36,320
are dependent on them also and then you

1466
01:20:33,980 --> 01:20:38,629
know mostly this is feeding into the SSH

1467
01:20:36,320 --> 01:20:40,190
sorry the net confer rest off drafts I

1468
01:20:38,630 --> 01:20:43,580
mentioned earlier but there's also a

1469
01:20:40,190 --> 01:20:46,580
syslog draft there's a pset draft

1470
01:20:43,580 --> 01:20:49,070
there's a management connectivity draft

1471
01:20:46,580 --> 01:20:50,809
and now I understand in the Seaboard

1472
01:20:49,070 --> 01:20:53,570
group they're working on they want to

1473
01:20:50,810 --> 01:20:55,880
add a UDP client server as well as a

1474
01:20:53,570 --> 01:20:57,259
DTLS client server so there's sort of

1475
01:20:55,880 --> 01:21:00,579
what I guess I'm trying to impress upon

1476
01:20:57,260 --> 01:21:02,469
you is that a strategy

1477
01:21:00,579 --> 01:21:04,808
that's been put forth in this particular

1478
01:21:02,469 --> 01:21:07,059
draft of having these three modules

1479
01:21:04,809 --> 01:21:10,839
representing a common a client and a

1480
01:21:07,059 --> 01:21:13,179
server that that strategy is it's part

1481
01:21:10,839 --> 01:21:16,599
of a framework and the framework is

1482
01:21:13,179 --> 01:21:18,519
rather robust and it's been shown to you

1483
01:21:16,599 --> 01:21:21,729
know be able to support the composition

1484
01:21:18,519 --> 01:21:24,939
of some fairly complex configuration

1485
01:21:21,729 --> 01:21:28,019
hierarchies that's the main point of

1486
01:21:24,939 --> 01:21:31,269
this slide next slide please

1487
01:21:28,019 --> 01:21:34,269
okay and this is also the last slide so

1488
01:21:31,269 --> 01:21:36,369
the next steps before the authors at

1489
01:21:34,269 --> 01:21:38,199
least and also from the net coughs

1490
01:21:36,369 --> 01:21:41,219
working groups perspective at least what

1491
01:21:38,199 --> 01:21:43,358
our primary intentions are for

1492
01:21:41,219 --> 01:21:45,519
supporting the configuration of net

1493
01:21:43,359 --> 01:21:48,729
cough clients and servers we think we're

1494
01:21:45,519 --> 01:21:50,679
done of course you know we'd be willing

1495
01:21:48,729 --> 01:21:52,959
to sort of allow the certain

1496
01:21:50,679 --> 01:21:56,800
functionality or the feature set to be

1497
01:21:52,959 --> 01:21:59,889
published as an initial RFC and would

1498
01:21:56,800 --> 01:22:03,099
hope that T CPM actually would take over

1499
01:21:59,889 --> 01:22:06,189
the you know any future updates to that

1500
01:22:03,099 --> 01:22:12,010
RFC using business you know business

1501
01:22:06,189 --> 01:22:14,619
updates as they would see fit but but

1502
01:22:12,010 --> 01:22:16,300
before we can you know think to do a

1503
01:22:14,619 --> 01:22:19,808
last call or anything like this we want

1504
01:22:16,300 --> 01:22:22,929
to first verify with T CPM whether or

1505
01:22:19,809 --> 01:22:25,329
not the model even as simple as it is if

1506
01:22:22,929 --> 01:22:28,869
it's general and good enough for all the

1507
01:22:25,329 --> 01:22:31,478
situations and which TCP yang models

1508
01:22:28,869 --> 01:22:33,579
could be used and I guess that I'll

1509
01:22:31,479 --> 01:22:34,719
leave that question to the room or if

1510
01:22:33,579 --> 01:22:37,898
there's any other comments or concerns

1511
01:22:34,719 --> 01:22:41,969
that it'd be happy to hear them thank

1512
01:22:37,899 --> 01:22:41,969
you for the presentation about questions

1513
01:22:47,519 --> 01:22:55,839
Mathis the thing that the only thing

1514
01:22:52,539 --> 01:22:58,320
that bothers me about this I mean the

1515
01:22:55,839 --> 01:23:00,579
yang stuff is such seems to be fine but

1516
01:22:58,320 --> 01:23:05,259
this group spends a great deal of effort

1517
01:23:00,579 --> 01:23:07,749
making TCP idiot-proof in the sense that

1518
01:23:05,260 --> 01:23:10,329
the API doesn't expose things that

1519
01:23:07,749 --> 01:23:12,949
people might think they could improve

1520
01:23:10,329 --> 01:23:16,400
and therefore break things

1521
01:23:12,949 --> 01:23:18,860
and and keep allies fell into that

1522
01:23:16,400 --> 01:23:20,690
category you generally generally people

1523
01:23:18,860 --> 01:23:22,098
who want to muck with it don't

1524
01:23:20,690 --> 01:23:25,638
understand what they're doing and they

1525
01:23:22,099 --> 01:23:29,719
actually don't want to muck with it now

1526
01:23:25,639 --> 01:23:31,280
there are some exceptions but in places

1527
01:23:29,719 --> 01:23:32,630
most places many of the places where

1528
01:23:31,280 --> 01:23:36,679
people come up with exceptions that be

1529
01:23:32,630 --> 01:23:40,550
careful because the ietf is huge for

1530
01:23:36,679 --> 01:23:42,650
example in BGP at one point TCP live

1531
01:23:40,550 --> 01:23:44,989
this was used to indicate BGP liveness

1532
01:23:42,650 --> 01:23:46,879
and it was realized that they needed to

1533
01:23:44,989 --> 01:23:48,919
have a separate connectivity

1534
01:23:46,880 --> 01:23:52,340
instrumentation protocol and not rely on

1535
01:23:48,920 --> 01:23:55,340
TCP notion of liveness for B gp's

1536
01:23:52,340 --> 01:23:57,289
liveness and and I suspect this we've

1537
01:23:55,340 --> 01:24:01,940
been very careful here about that kind

1538
01:23:57,289 --> 01:24:03,170
of thing the knobs are you put it in the

1539
01:24:01,940 --> 01:24:05,989
right gear and then you remove the

1540
01:24:03,170 --> 01:24:07,849
handle that's very much the mentality

1541
01:24:05,989 --> 01:24:10,070
here and and so I have a little bit of

1542
01:24:07,849 --> 01:24:12,940
concern about whether or not this is

1543
01:24:10,070 --> 01:24:14,959
going to invite people to cause

1544
01:24:12,940 --> 01:24:20,150
breakages because they try to adjust

1545
01:24:14,959 --> 01:24:23,320
things that they shouldn't adjust can

1546
01:24:20,150 --> 01:24:25,909
you stay here mycotoxin from the floor

1547
01:24:23,320 --> 01:24:29,690
reading the description of keeper life

1548
01:24:25,909 --> 01:24:31,940
so you're specifying a time and after

1549
01:24:29,690 --> 01:24:34,159
which the TCP connection gets dropped if

1550
01:24:31,940 --> 01:24:36,289
there is no response from the pier its

1551
01:24:34,159 --> 01:24:40,159
idle time time 60 I don't know whether

1552
01:24:36,289 --> 01:24:42,380
60 comes from the very put in is in

1553
01:24:40,159 --> 01:24:44,869
seconds the outcome is in seconds though

1554
01:24:42,380 --> 01:24:46,909
I don't know and the other one is isn't

1555
01:24:44,869 --> 01:24:48,799
the it does they keep a lifetime or if

1556
01:24:46,909 --> 01:24:52,219
you have no response it's their

1557
01:24:48,800 --> 01:24:54,199
exponential back-off and if it there is

1558
01:24:52,219 --> 01:24:56,449
then this formula is wrong because it

1559
01:24:54,199 --> 01:25:01,440
does assume that you don't explain

1560
01:24:56,449 --> 01:25:03,330
back of the timer another bad

1561
01:25:01,440 --> 01:25:06,449
the keeper life is back often in other

1562
01:25:03,330 --> 01:25:13,530
timers but not keep alive but my

1563
01:25:06,449 --> 01:25:17,460
impression is that it was designed not

1564
01:25:13,530 --> 01:25:20,519
to along I'm getting ours boys this is a

1565
01:25:17,460 --> 01:25:26,250
long time ago this 20 years ago that

1566
01:25:20,520 --> 01:25:28,290
this was worked on very hard the the

1567
01:25:26,250 --> 01:25:30,420
design of the keep alive is not to

1568
01:25:28,290 --> 01:25:34,170
determine if the network is is healthy

1569
01:25:30,420 --> 01:25:35,969
it's to make sure that connections which

1570
01:25:34,170 --> 01:25:38,760
are completely passive where the other

1571
01:25:35,969 --> 01:25:41,610
end goes away eventually get reaped it

1572
01:25:38,760 --> 01:25:43,080
was solving that problem not determining

1573
01:25:41,610 --> 01:25:45,630
whether or not the network is healthy

1574
01:25:43,080 --> 01:25:46,890
and so sailors turn on keep alive to

1575
01:25:45,630 --> 01:25:49,050
make sure that if the client just

1576
01:25:46,890 --> 01:25:51,570
evaporates and the server has no pending

1577
01:25:49,050 --> 01:25:53,550
data the server eventually dies it's

1578
01:25:51,570 --> 01:25:56,940
it's not the usual liveness question

1579
01:25:53,550 --> 01:25:58,440
that people think about okay so just to

1580
01:25:56,940 --> 01:25:59,370
respond to a couple of comments I've

1581
01:25:58,440 --> 01:26:02,250
just made

1582
01:25:59,370 --> 01:26:04,410
I didn't go over cuz the picture was

1583
01:26:02,250 --> 01:26:06,330
rather garbled on the screen but there's

1584
01:26:04,410 --> 01:26:08,309
also a feature statement for whether or

1585
01:26:06,330 --> 01:26:10,739
not the server supports keeping lives at

1586
01:26:08,310 --> 01:26:13,440
all which on a client or server basis

1587
01:26:10,739 --> 01:26:15,030
key enable are disabled so on a per

1588
01:26:13,440 --> 01:26:16,530
implementation basis if they don't want

1589
01:26:15,030 --> 01:26:18,389
to support those configuration knobs

1590
01:26:16,530 --> 01:26:19,949
they can completely disable them and

1591
01:26:18,390 --> 01:26:23,310
they won't be available for users to

1592
01:26:19,949 --> 01:26:26,940
configure secondly there's the ability

1593
01:26:23,310 --> 01:26:28,680
you can keep alive as doesn't defined as

1594
01:26:26,940 --> 01:26:30,269
what's called a presence container which

1595
01:26:28,680 --> 01:26:32,489
means if you just put keep you eyes but

1596
01:26:30,270 --> 01:26:34,739
don't configure any of those three knobs

1597
01:26:32,489 --> 01:26:35,070
underneath then the default values kick

1598
01:26:34,739 --> 01:26:37,679
in

1599
01:26:35,070 --> 01:26:40,110
so there's hopefully same default values

1600
01:26:37,680 --> 01:26:42,630
and again people wouldn't muck with them

1601
01:26:40,110 --> 01:26:45,660
and get themselves in trouble lastly

1602
01:26:42,630 --> 01:26:48,000
that description statement times 60 it

1603
01:26:45,660 --> 01:26:49,469
maybe I need to revisit that and it

1604
01:26:48,000 --> 01:26:55,140
could be wrong especially in the light

1605
01:26:49,469 --> 01:26:57,420
of exponential back-off finest statement

1606
01:26:55,140 --> 01:26:59,219
yeah miracle even just to answer a

1607
01:26:57,420 --> 01:27:00,870
couple of things so people life is

1608
01:26:59,219 --> 01:27:03,330
actually something that comes up very

1609
01:27:00,870 --> 01:27:05,010
often in people can do wrong because you

1610
01:27:03,330 --> 01:27:06,449
can configure instead of the 60 second

1611
01:27:05,010 --> 01:27:08,250
you can configure I want to keep a life

1612
01:27:06,449 --> 01:27:09,900
one minute once per millisecond right

1613
01:27:08,250 --> 01:27:12,210
and that breaks your network so it's

1614
01:27:09,900 --> 01:27:13,860
really something that you should be

1615
01:27:12,210 --> 01:27:15,180
careful about there is an exponential

1616
01:27:13,860 --> 01:27:16,769
back-off that's when like you

1617
01:27:15,180 --> 01:27:18,660
or keepalive fails you don't get a reply

1618
01:27:16,770 --> 01:27:20,520
then you exponential back-off but if

1619
01:27:18,660 --> 01:27:24,930
it's running everything is fine you just

1620
01:27:20,520 --> 01:27:26,250
can overload the network easily so but

1621
01:27:24,930 --> 01:27:28,350
I'm glad that you said that there are

1622
01:27:26,250 --> 01:27:30,540
defaults and that you can take idea and

1623
01:27:28,350 --> 01:27:32,010
disable it and probably also put a big

1624
01:27:30,540 --> 01:27:35,760
warning in it don't do anything stupid

1625
01:27:32,010 --> 01:27:40,830
here right so just be careful okay thank

1626
01:27:35,760 --> 01:27:58,950
you thank you next presentation is

1627
01:27:40,830 --> 01:28:00,630
Michael you get ten minutes hi my name

1628
01:27:58,950 --> 01:28:03,960
is Michael speaking here is individual

1629
01:28:00,630 --> 01:28:10,580
and that is a follow-up presentation

1630
01:28:03,960 --> 01:28:13,050
also talking about yang so next slide so

1631
01:28:10,580 --> 01:28:14,700
actually it would have been good to have

1632
01:28:13,050 --> 01:28:16,740
the presentation that you have just seen

1633
01:28:14,700 --> 01:28:18,030
in the last IDF meeting because this

1634
01:28:16,740 --> 01:28:19,469
would have simplified a lot and there

1635
01:28:18,030 --> 01:28:21,599
was a little bit my mistake that this

1636
01:28:19,470 --> 01:28:23,430
happened didn't happen so but in general

1637
01:28:21,600 --> 01:28:25,530
we see that there is this trend in

1638
01:28:23,430 --> 01:28:27,660
certain other working groups that people

1639
01:28:25,530 --> 01:28:29,309
feel a need to configure certain

1640
01:28:27,660 --> 01:28:30,900
parameters in yang most notably the

1641
01:28:29,310 --> 01:28:31,380
things that you can configure by a

1642
01:28:30,900 --> 01:28:33,120
socket

1643
01:28:31,380 --> 01:28:35,340
options and the keeper lives are

1644
01:28:33,120 --> 01:28:37,769
actually one such example there are

1645
01:28:35,340 --> 01:28:39,360
other ones as a example there is at

1646
01:28:37,770 --> 01:28:41,160
least one yang modular out there that

1647
01:28:39,360 --> 01:28:43,500
configures the MSS which is also

1648
01:28:41,160 --> 01:28:46,070
something that some snakes exposed for

1649
01:28:43,500 --> 01:28:49,620
example by a socket option so you see

1650
01:28:46,070 --> 01:28:52,410
TCP parameters in in yang modules

1651
01:28:49,620 --> 01:28:54,809
increasingly and that somehow raises the

1652
01:28:52,410 --> 01:28:56,790
question to us as TCP and working groups

1653
01:28:54,810 --> 01:28:59,670
or what do we do with that and is there

1654
01:28:56,790 --> 01:29:02,100
a bigger problem to work resolved and I

1655
01:28:59,670 --> 01:29:04,530
explicitly raised this as an open

1656
01:29:02,100 --> 01:29:06,270
question because I believe that we

1657
01:29:04,530 --> 01:29:08,429
should discuss this I have not fully

1658
01:29:06,270 --> 01:29:10,470
came to an conclusion but in general if

1659
01:29:08,430 --> 01:29:12,660
we look at the TCP stack we do not only

1660
01:29:10,470 --> 01:29:14,880
have the parameters that are exposed by

1661
01:29:12,660 --> 01:29:16,860
a socket option but obviously we also

1662
01:29:14,880 --> 01:29:18,570
have configuration parameters and

1663
01:29:16,860 --> 01:29:21,719
typically that this is it is subdivided

1664
01:29:18,570 --> 01:29:23,549
into a global configuration of the

1665
01:29:21,720 --> 01:29:26,640
stacks such as whether you enable for

1666
01:29:23,550 --> 01:29:28,560
example is yen or SEC and in many states

1667
01:29:26,640 --> 01:29:31,320
you also have interface specific commit

1668
01:29:28,560 --> 01:29:33,450
for example something about the MSS or

1669
01:29:31,320 --> 01:29:35,580
maybe relate to the MTU or other of

1670
01:29:33,450 --> 01:29:39,240
loading related parameters so there's a

1671
01:29:35,580 --> 01:29:40,740
bunch of parameters out there and this

1672
01:29:39,240 --> 01:29:43,200
raises the question so is there

1673
01:29:40,740 --> 01:29:49,099
something to be done in this working

1674
01:29:43,200 --> 01:29:52,679
group so next in the last meeting I

1675
01:29:49,100 --> 01:29:54,450
promised to come up with a survey if

1676
01:29:52,680 --> 01:29:56,490
something is doable because there was

1677
01:29:54,450 --> 01:29:59,309
clearly a question in the last meeting

1678
01:29:56,490 --> 01:30:01,559
whether there this is something that is

1679
01:29:59,310 --> 01:30:04,200
actually doable and what I've done in

1680
01:30:01,560 --> 01:30:06,960
the most recent version of the draft I

1681
01:30:04,200 --> 01:30:10,260
have looked at a couple of stacks of the

1682
01:30:06,960 --> 01:30:13,110
four different ones in order to identify

1683
01:30:10,260 --> 01:30:15,630
if there's any commonality in in the

1684
01:30:13,110 --> 01:30:17,969
configuration between particular beyond

1685
01:30:15,630 --> 01:30:20,640
things that can be configured by a

1686
01:30:17,970 --> 01:30:23,880
socket API and produced CEO on the slide

1687
01:30:20,640 --> 01:30:26,520
is a summary of what I came up this so

1688
01:30:23,880 --> 01:30:28,470
I've looked at four different stacks and

1689
01:30:26,520 --> 01:30:29,910
not all of them are configured by yang

1690
01:30:28,470 --> 01:30:32,430
so I've also looked at some host

1691
01:30:29,910 --> 01:30:34,230
operating systems and I've tried to

1692
01:30:32,430 --> 01:30:37,080
identify a couple of configuration

1693
01:30:34,230 --> 01:30:39,269
parameters that are common and you can

1694
01:30:37,080 --> 01:30:41,630
see there are a couple of them as a for

1695
01:30:39,270 --> 01:30:44,220
example that's not a big surprise

1696
01:30:41,630 --> 01:30:47,100
stacks that support for example the

1697
01:30:44,220 --> 01:30:48,720
section typically have boolean or

1698
01:30:47,100 --> 01:30:51,300
similar to a boolean parameter to turn

1699
01:30:48,720 --> 01:30:53,730
that on and off and the same applies to

1700
01:30:51,300 --> 01:30:55,620
other standard optional TSP

1701
01:30:53,730 --> 01:30:59,490
functionalities such as timestamps for

1702
01:30:55,620 --> 01:31:01,680
example path MTU discovery Zn and there

1703
01:30:59,490 --> 01:31:03,420
couple of other other parameters so you

1704
01:31:01,680 --> 01:31:06,300
see that there is some comment and the

1705
01:31:03,420 --> 01:31:09,450
commonality in what you can turn on and

1706
01:31:06,300 --> 01:31:11,250
off for example of course the exact way

1707
01:31:09,450 --> 01:31:13,349
how you do that so for example that it's

1708
01:31:11,250 --> 01:31:15,150
a boolean parameter or whether it's an

1709
01:31:13,350 --> 01:31:17,190
enumeration so that depends a little bit

1710
01:31:15,150 --> 01:31:20,089
on the system but there is at least four

1711
01:31:17,190 --> 01:31:23,580
very basic functionality there is a

1712
01:31:20,090 --> 01:31:26,310
similarity between stacks at least for

1713
01:31:23,580 --> 01:31:30,390
these very basic things and that

1714
01:31:26,310 --> 01:31:32,610
obviously could bring us to a young

1715
01:31:30,390 --> 01:31:34,350
modeling folder for that so we could at

1716
01:31:32,610 --> 01:31:39,299
least for such simple things we could

1717
01:31:34,350 --> 01:31:41,700
decide to propose a young model that

1718
01:31:39,300 --> 01:31:43,740
includes those

1719
01:31:41,700 --> 01:31:46,740
parameters such as sex so I've shown

1720
01:31:43,740 --> 01:31:49,110
here one such example so we could be

1721
01:31:46,740 --> 01:31:51,900
fine for example a boolean parameter in

1722
01:31:49,110 --> 01:31:54,360
yang for enabling or disabling and SEC

1723
01:31:51,900 --> 01:31:57,299
and then there would be an standard way

1724
01:31:54,360 --> 01:32:00,150
in Yang and for having that

1725
01:31:57,300 --> 01:32:02,460
configuration the benefit of doing this

1726
01:32:00,150 --> 01:32:06,570
would be that this could be used in

1727
01:32:02,460 --> 01:32:09,420
various other yang modules as opposed

1728
01:32:06,570 --> 01:32:11,849
for devices or for example also and

1729
01:32:09,420 --> 01:32:14,220
other protocol environments as a test

1730
01:32:11,850 --> 01:32:15,990
would be for example one such profile

1731
01:32:14,220 --> 01:32:17,880
but this could be useful

1732
01:32:15,990 --> 01:32:20,010
it could reference those standard

1733
01:32:17,880 --> 01:32:23,130
definitions if they feel that there is a

1734
01:32:20,010 --> 01:32:26,370
need to to deal with such TCP

1735
01:32:23,130 --> 01:32:28,230
configuration and parameters and the

1736
01:32:26,370 --> 01:32:29,790
proposal here would be just to define

1737
01:32:28,230 --> 01:32:32,129
the grouping similar to what you have

1738
01:32:29,790 --> 01:32:34,050
seen just in the previous talk so we

1739
01:32:32,130 --> 01:32:36,210
would not define a full data model here

1740
01:32:34,050 --> 01:32:39,570
we would only define groupings for

1741
01:32:36,210 --> 01:32:42,120
certain parameters and because this

1742
01:32:39,570 --> 01:32:50,250
allows to reuse defensing in a lot of

1743
01:32:42,120 --> 01:32:53,490
different use cases I've looked at other

1744
01:32:50,250 --> 01:32:54,810
parameters there beyond what I've shown

1745
01:32:53,490 --> 01:32:56,880
in the previous table the other ones

1746
01:32:54,810 --> 01:32:59,790
that are often available in sticks but

1747
01:32:56,880 --> 01:33:01,890
the exact way how its configured starts

1748
01:32:59,790 --> 01:33:04,350
to them depend on the different sticks

1749
01:33:01,890 --> 01:33:07,320
so you can see examples like the delay

1750
01:33:04,350 --> 01:33:09,630
back time or the initial Archie own or

1751
01:33:07,320 --> 01:33:11,190
some very basic parameters of the

1752
01:33:09,630 --> 01:33:13,590
retransmission engine are often

1753
01:33:11,190 --> 01:33:16,799
configurable in in many stacks but the

1754
01:33:13,590 --> 01:33:18,570
details start to be different so and if

1755
01:33:16,800 --> 01:33:20,430
you look at the ended in individual a

1756
01:33:18,570 --> 01:33:22,380
how to configure that each stack has

1757
01:33:20,430 --> 01:33:24,770
found a different way to configure that

1758
01:33:22,380 --> 01:33:28,020
of course as in those cases we could

1759
01:33:24,770 --> 01:33:30,600
come up this one reasonable way to model

1760
01:33:28,020 --> 01:33:33,270
it but the risk that this does not have

1761
01:33:30,600 --> 01:33:35,100
a one-to-one mapping to the specific

1762
01:33:33,270 --> 01:33:38,610
configuration of a stack gets higher and

1763
01:33:35,100 --> 01:33:41,430
then of course there are huge areas of a

1764
01:33:38,610 --> 01:33:44,040
TCP stack that are very specific to the

1765
01:33:41,430 --> 01:33:45,780
implementation examples of wakes and

1766
01:33:44,040 --> 01:33:47,340
everything that deals this puffers

1767
01:33:45,780 --> 01:33:49,980
always flow controls that a lot of

1768
01:33:47,340 --> 01:33:53,130
heuristics out there and that are

1769
01:33:49,980 --> 01:33:54,809
typically very specific to the stake

1770
01:33:53,130 --> 01:33:56,400
also for example debate how congestion

1771
01:33:54,810 --> 01:33:58,949
control algorithms are implemented

1772
01:33:56,400 --> 01:34:00,509
obviously very specific to this text and

1773
01:33:58,949 --> 01:34:02,759
it's very hard to come up as a common

1774
01:34:00,510 --> 01:34:05,159
set of parameters so at the moment I

1775
01:34:02,760 --> 01:34:08,040
don't try to enter that space because

1776
01:34:05,159 --> 01:34:13,138
yes you huge risk to boil the ocean and

1777
01:34:08,040 --> 01:34:15,600
going there and as I said this what I've

1778
01:34:13,139 --> 01:34:21,989
shown on the slide is what I promised to

1779
01:34:15,600 --> 01:34:23,719
do in the last meeting here I was gonna

1780
01:34:21,989 --> 01:34:28,040
make a comment on your last slide about

1781
01:34:23,719 --> 01:34:33,510
the fact that horse takes over all right

1782
01:34:28,040 --> 01:34:37,590
what we did in I'll see gosh I forgot

1783
01:34:33,510 --> 01:34:41,880
the number the the tcp extended

1784
01:34:37,590 --> 01:34:45,360
information mid is the introduction

1785
01:34:41,880 --> 01:34:46,770
specifically says that if you have

1786
01:34:45,360 --> 01:34:49,199
precise knowledge about how the

1787
01:34:46,770 --> 01:34:51,920
implementation works you can understand

1788
01:34:49,199 --> 01:34:54,960
precisely how the variables are defined

1789
01:34:51,920 --> 01:34:57,000
but the variables are defined in ways

1790
01:34:54,960 --> 01:34:58,230
they're sort of generic if you don't

1791
01:34:57,000 --> 01:34:59,699
understand the details of how the stack

1792
01:34:58,230 --> 01:35:01,530
works you can only just make sort of

1793
01:34:59,699 --> 01:35:05,009
generic assumptions about them and that

1794
01:35:01,530 --> 01:35:07,830
the standard for the instrumentation was

1795
01:35:05,010 --> 01:35:11,340
not to preclude specifically not to

1796
01:35:07,830 --> 01:35:12,870
preclude evolving heuristics and so

1797
01:35:11,340 --> 01:35:15,210
there's always example language of that

1798
01:35:12,870 --> 01:35:18,330
which you're welcome to steal yeah yeah

1799
01:35:15,210 --> 01:35:20,850
sure of course I mean that is quite

1800
01:35:18,330 --> 01:35:21,900
related work I've looked at the document

1801
01:35:20,850 --> 01:35:24,060
I've not really I'm not

1802
01:35:21,900 --> 01:35:25,530
reusing the heuristics because this

1803
01:35:24,060 --> 01:35:33,560
would be operational nature and I'm not

1804
01:35:25,530 --> 01:35:36,090
fully irradiated okay anyway as I said

1805
01:35:33,560 --> 01:35:38,219
what I've done here is what I promised

1806
01:35:36,090 --> 01:35:41,100
last meeting so as I've basically

1807
01:35:38,219 --> 01:35:44,010
completely rewritten the document I've

1808
01:35:41,100 --> 01:35:46,560
also added a new cause so I'm looking

1809
01:35:44,010 --> 01:35:48,630
for co-authors who have a background in

1810
01:35:46,560 --> 01:35:52,320
that space and we shall belong here to

1811
01:35:48,630 --> 01:35:54,719
help me this that if you look at the

1812
01:35:52,320 --> 01:35:56,009
model right now you will see it's not an

1813
01:35:54,719 --> 01:35:58,770
actual yang module

1814
01:35:56,010 --> 01:36:00,989
it only has text right now but one of

1815
01:35:58,770 --> 01:36:03,239
the potential next steps would be to

1816
01:36:00,989 --> 01:36:05,699
formalize what I just said to come up

1817
01:36:03,239 --> 01:36:06,750
with actual yang cooping definitions

1818
01:36:05,699 --> 01:36:09,570
along the lines

1819
01:36:06,750 --> 01:36:12,630
just presented so that would be the

1820
01:36:09,570 --> 01:36:13,950
naturalistic next step if people here in

1821
01:36:12,630 --> 01:36:19,020
this room believe that this is something

1822
01:36:13,950 --> 01:36:22,349
that's valuable and as I said I mean the

1823
01:36:19,020 --> 01:36:23,850
key question that I have is specifically

1824
01:36:22,350 --> 01:36:26,610
also to implement us in the room if they

1825
01:36:23,850 --> 01:36:30,000
feel value in further working in that

1826
01:36:26,610 --> 01:36:32,460
space along the lines of that what I've

1827
01:36:30,000 --> 01:36:34,380
said or if the general feeling in the

1828
01:36:32,460 --> 01:36:37,320
room is that this is probably something

1829
01:36:34,380 --> 01:36:39,330
that gets too complicated as in the last

1830
01:36:37,320 --> 01:36:41,429
meeting there was a very mixed feedback

1831
01:36:39,330 --> 01:36:43,170
on that and that's why I'd like to open

1832
01:36:41,430 --> 01:36:45,210
the floor to this question again so

1833
01:36:43,170 --> 01:36:47,280
pleased if we could comment if you find

1834
01:36:45,210 --> 01:36:49,860
this useful or please also feel free to

1835
01:36:47,280 --> 01:36:50,639
comment if you think that this will not

1836
01:36:49,860 --> 01:36:53,009
go anywhere

1837
01:36:50,640 --> 01:36:55,350
so that would be excellent to see it not

1838
01:36:53,010 --> 01:37:02,850
and that's the last statement that I

1839
01:36:55,350 --> 01:37:06,120
want to say feel free to comment so

1840
01:37:02,850 --> 01:37:09,710
intended status is informational well at

1841
01:37:06,120 --> 01:37:11,940
the moment they're not struck because

1842
01:37:09,710 --> 01:37:16,380
young models typically our standards

1843
01:37:11,940 --> 01:37:18,389
track I've said last meeting of course T

1844
01:37:16,380 --> 01:37:20,460
CPM has pretty high bars for standard

1845
01:37:18,390 --> 01:37:23,400
strike that is definitely a fun thing to

1846
01:37:20,460 --> 01:37:24,900
think about a few standard strike

1847
01:37:23,400 --> 01:37:26,820
because that would be the default in the

1848
01:37:24,900 --> 01:37:28,710
rest of the idea for your modules but

1849
01:37:26,820 --> 01:37:31,259
yes of course I mean standard striking

1850
01:37:28,710 --> 01:37:32,850
TCB and has a certain implication and

1851
01:37:31,260 --> 01:37:35,820
that is definitely something we would

1852
01:37:32,850 --> 01:37:36,960
have to think about Michael Jackson my

1853
01:37:35,820 --> 01:37:39,570
critics and I can't comment on the

1854
01:37:36,960 --> 01:37:43,200
usefulness of it but yeah I think what

1855
01:37:39,570 --> 01:37:44,790
would be useful is to include the to

1856
01:37:43,200 --> 01:37:48,950
make the congestion control module

1857
01:37:44,790 --> 01:37:48,950
selectable anything on loss recovery

1858
01:37:50,210 --> 01:37:56,670
Lots recovery wreck the issue with that

1859
01:37:54,120 --> 01:37:58,620
is then we would probably have to have

1860
01:37:56,670 --> 01:38:02,090
for something like a list of congestion

1861
01:37:58,620 --> 01:38:03,960
control algorithms or like that and

1862
01:38:02,090 --> 01:38:05,850
other coming up with a standard

1863
01:38:03,960 --> 01:38:07,770
specification for that is something that

1864
01:38:05,850 --> 01:38:10,590
would definitely require some thinking

1865
01:38:07,770 --> 01:38:11,850
but I mean I can give it a try at least

1866
01:38:10,590 --> 01:38:15,240
make it selectable

1867
01:38:11,850 --> 01:38:16,840
even if people can use platform-specific

1868
01:38:15,240 --> 01:38:20,719
various

1869
01:38:16,840 --> 01:38:23,630
Mahesh eternal Donny two comments one to

1870
01:38:20,719 --> 01:38:25,790
the point of usefulness absolutely if

1871
01:38:23,630 --> 01:38:28,010
you don't do it as you've seen other

1872
01:38:25,790 --> 01:38:31,159
models I want to define the parameters

1873
01:38:28,010 --> 01:38:34,670
they need and then you'll be left with a

1874
01:38:31,159 --> 01:38:37,670
scattered list of parameters that other

1875
01:38:34,670 --> 01:38:41,150
models are other authors are going to

1876
01:38:37,670 --> 01:38:44,150
find difficult to locate to the other

1877
01:38:41,150 --> 01:38:46,879
question of standards track absolutely

1878
01:38:44,150 --> 01:38:48,920
if you're going to include yang module

1879
01:38:46,880 --> 01:38:52,159
even if it's just groupings and no

1880
01:38:48,920 --> 01:38:56,840
containers you absolutely it has to be a

1881
01:38:52,159 --> 01:39:03,098
standards document thanks okay thank you

1882
01:38:56,840 --> 01:39:03,099
okay thanks for presentation chorus next

1883
01:39:15,000 --> 01:39:21,579
and I'm going first I'm going to be

1884
01:39:18,699 --> 01:39:27,909
talking about a draft what jeers draft

1885
01:39:21,579 --> 01:39:29,559
fare has t sv w g CC and y TS v WG

1886
01:39:27,909 --> 01:39:33,219
because it's supposed to refer to all

1887
01:39:29,560 --> 01:39:35,230
transport protocols why here because T

1888
01:39:33,219 --> 01:39:37,599
CPM has clue about how to design

1889
01:39:35,230 --> 01:39:40,718
congestion control which is what CC

1890
01:39:37,599 --> 01:39:49,389
means so um let me tell you a little bit

1891
01:39:40,719 --> 01:39:52,060
next slide so this is not of you and you

1892
01:39:49,389 --> 01:39:53,829
probably noticed the IETF has said quite

1893
01:39:52,060 --> 01:39:56,079
a bit about can just control over the

1894
01:39:53,829 --> 01:39:58,449
years so it's clear if you want to

1895
01:39:56,079 --> 01:40:00,849
design something that just congestion

1896
01:39:58,449 --> 01:40:07,169
control or maybe doesn't which document

1897
01:40:00,849 --> 01:40:10,900
to look up isn't it no well I spoke to

1898
01:40:07,170 --> 01:40:12,550
John at the quick interim and we thought

1899
01:40:10,900 --> 01:40:14,170
yes the answer to this must be true

1900
01:40:12,550 --> 01:40:15,969
there must be a couple of documents we

1901
01:40:14,170 --> 01:40:17,800
could just point to and we can just

1902
01:40:15,969 --> 01:40:19,690
write quickly a four-page summary of

1903
01:40:17,800 --> 01:40:21,550
these are the key principles not the

1904
01:40:19,690 --> 01:40:24,419
details but the key things you must do

1905
01:40:21,550 --> 01:40:27,250
if you design a congestion control and

1906
01:40:24,420 --> 01:40:28,780
then we could write this document it was

1907
01:40:27,250 --> 01:40:30,969
so short that maybe mean we don't have

1908
01:40:28,780 --> 01:40:33,130
to publish it we can just include it

1909
01:40:30,969 --> 01:40:37,389
various places and say play well and do

1910
01:40:33,130 --> 01:40:40,630
this um they took more than four pages

1911
01:40:37,389 --> 01:40:42,579
when I tried one more time so I've done

1912
01:40:40,630 --> 01:40:45,369
some work and that's what's in this

1913
01:40:42,579 --> 01:40:47,349
particular internet draft and the draft

1914
01:40:45,369 --> 01:40:51,040
revision started with zero zero I just

1915
01:40:47,349 --> 01:40:52,960
kind of consumed RFC's I I thought that

1916
01:40:51,040 --> 01:40:54,909
each RFC would be about one thing and

1917
01:40:52,960 --> 01:40:56,679
then I discovered that many RFC's talked

1918
01:40:54,909 --> 01:40:58,179
about something for a few paragraphs and

1919
01:40:56,679 --> 01:40:59,409
then another RFC talked at the same

1920
01:40:58,179 --> 01:41:01,719
thing for a few paragraphs using

1921
01:40:59,409 --> 01:41:05,280
different language but I looked at 26

1922
01:41:01,719 --> 01:41:05,280
and there's probably a few more and then

1923
01:41:05,310 --> 01:41:09,280
I got fed up because it's a lot of time

1924
01:41:07,659 --> 01:41:10,750
and then I went back to it I thought

1925
01:41:09,280 --> 01:41:12,969
maybe there's something useful here so I

1926
01:41:10,750 --> 01:41:14,860
wrote 0 1 which was the same text made

1927
01:41:12,969 --> 01:41:16,900
more coherent by getting other people to

1928
01:41:14,860 --> 01:41:17,380
read it and also find me leaving it for

1929
01:41:16,900 --> 01:41:19,239
a while

1930
01:41:17,380 --> 01:41:22,119
I think way shorter so I thought oh yeah

1931
01:41:19,239 --> 01:41:23,829
we're onto something good here and then

1932
01:41:22,119 --> 01:41:25,980
I thought actually I resent this at the

1933
01:41:23,829 --> 01:41:28,210
ITF which is where we are now and

1934
01:41:25,980 --> 01:41:31,690
there's still a few annoying typos

1935
01:41:28,210 --> 01:41:34,719
I have roles in my xml version I'd be

1936
01:41:31,690 --> 01:41:37,660
happy to fix those if people think this

1937
01:41:34,719 --> 01:41:39,580
is useful so what is it so um

1938
01:41:37,660 --> 01:41:41,170
section three of the document is the

1939
01:41:39,580 --> 01:41:43,210
first bit where there's important stuff

1940
01:41:41,170 --> 01:41:46,450
it talks about the principles of

1941
01:41:43,210 --> 01:41:47,980
congestion control if you're being in

1942
01:41:46,450 --> 01:41:50,820
the ITF for a while you remember there's

1943
01:41:47,980 --> 01:41:55,299
a BCP written by this on this by Sally

1944
01:41:50,820 --> 01:41:56,889
about 20 years ago and that probably

1945
01:41:55,300 --> 01:41:59,350
isn't the best document to tell somebody

1946
01:41:56,890 --> 01:42:00,850
how to run the internet but it might be

1947
01:41:59,350 --> 01:42:03,219
so let's try and write down some

1948
01:42:00,850 --> 01:42:05,800
principles I picked three major

1949
01:42:03,219 --> 01:42:08,590
principles there's a diversity of path

1950
01:42:05,800 --> 01:42:10,780
characteristics out there so be aware of

1951
01:42:08,590 --> 01:42:12,520
that when you design something there's

1952
01:42:10,780 --> 01:42:15,489
something where flaws are multiplexed

1953
01:42:12,520 --> 01:42:18,430
and congestion happens and that's

1954
01:42:15,489 --> 01:42:19,929
important to know about and it's

1955
01:42:18,430 --> 01:42:22,480
important to avoid congestion collapse

1956
01:42:19,930 --> 01:42:24,880
which is where Sally's main point this

1957
01:42:22,480 --> 01:42:28,150
is the real thing that uh Turley has to

1958
01:42:24,880 --> 01:42:30,100
be avoided and the second one is a

1959
01:42:28,150 --> 01:42:32,559
little bit about understanding but

1960
01:42:30,100 --> 01:42:34,120
starving or the floors out about how

1961
01:42:32,560 --> 01:42:37,210
your portion the bandwidth between them

1962
01:42:34,120 --> 01:42:39,300
but there are things in there we have to

1963
01:42:37,210 --> 01:42:41,920
read this of course if you're interested

1964
01:42:39,300 --> 01:42:44,080
section 4 then provides some guidelines

1965
01:42:41,920 --> 01:42:46,540
on performing congestion control so this

1966
01:42:44,080 --> 01:42:48,700
is extracts from the musts and shuts of

1967
01:42:46,540 --> 01:42:51,430
various RFC's and it talks about

1968
01:42:48,700 --> 01:42:53,769
connectionless initialization what means

1969
01:42:51,430 --> 01:42:56,290
to have a retransmit timer what an

1970
01:42:53,770 --> 01:42:58,480
initial window might mean which is a bit

1971
01:42:56,290 --> 01:43:01,330
difficult to define actually so maybe is

1972
01:42:58,480 --> 01:43:04,780
worth trying about using path capacity

1973
01:43:01,330 --> 01:43:06,460
but bursts which we tried to ignore for

1974
01:43:04,780 --> 01:43:08,679
a while but we probably shouldn't be

1975
01:43:06,460 --> 01:43:10,060
ignoring in the internet but we don't

1976
01:43:08,680 --> 01:43:12,160
want to be too prescriptive but we do

1977
01:43:10,060 --> 01:43:14,590
need to say a little bit but timers and

1978
01:43:12,160 --> 01:43:17,219
retransmission responding to potential

1979
01:43:14,590 --> 01:43:19,480
congestion which we could call an

1980
01:43:17,219 --> 01:43:22,210
incipient congestion which might

1981
01:43:19,480 --> 01:43:24,759
indicate it's not the same as persistent

1982
01:43:22,210 --> 01:43:26,680
congestion why we need to use saw start

1983
01:43:24,760 --> 01:43:29,020
to get more capacity or what that might

1984
01:43:26,680 --> 01:43:31,270
mean about network signals entrusting

1985
01:43:29,020 --> 01:43:33,150
them and about protecting mechanisms

1986
01:43:31,270 --> 01:43:36,010
what it needs to be on path and off path

1987
01:43:33,150 --> 01:43:38,019
which I noticed this ITF people started

1988
01:43:36,010 --> 01:43:39,250
using different words for so and might

1989
01:43:38,020 --> 01:43:41,909
be nice to have some definitions for

1990
01:43:39,250 --> 01:43:45,270
these well ok

1991
01:43:41,909 --> 01:43:48,638
my basic thing when I'm standing here is

1992
01:43:45,270 --> 01:43:50,949
how I done it and should I just and file

1993
01:43:48,639 --> 01:43:53,080
that and walk away from it or does

1994
01:43:50,949 --> 01:43:56,619
anybody else read this would they like

1995
01:43:53,080 --> 01:43:58,510
to read it do people care enough that we

1996
01:43:56,619 --> 01:44:00,400
should actually update this and write

1997
01:43:58,510 --> 01:44:01,690
this as a proper document I'm happy to

1998
01:44:00,400 --> 01:44:03,699
go through everything we have at the

1999
01:44:01,690 --> 01:44:05,949
moment as input and work with other

2000
01:44:03,699 --> 01:44:09,940
people to make this into a real guidance

2001
01:44:05,949 --> 01:44:13,150
document do people care who would help

2002
01:44:09,940 --> 01:44:16,030
me or I can happily write other things

2003
01:44:13,150 --> 01:44:18,820
so this is Richard so I think it's not a

2004
01:44:16,030 --> 01:44:20,769
very quick presentation and I think it's

2005
01:44:18,820 --> 01:44:23,080
great it would be great to have a

2006
01:44:20,770 --> 01:44:26,469
document that is written in modern style

2007
01:44:23,080 --> 01:44:29,469
to point people to who have not been

2008
01:44:26,469 --> 01:44:32,350
exposed to all the things and that is

2009
01:44:29,469 --> 01:44:35,110
going on in real well that works I guess

2010
01:44:32,350 --> 01:44:37,139
thank you so this is Michael from the

2011
01:44:35,110 --> 01:44:40,480
floor a threat to document on I do care

2012
01:44:37,139 --> 01:44:43,540
okay thank you we are drones is an

2013
01:44:40,480 --> 01:44:45,250
individual I wish I would have read this

2014
01:44:43,540 --> 01:44:46,920
document before I got here because I'm

2015
01:44:45,250 --> 01:44:49,420
gonna have to read it tonight

2016
01:44:46,920 --> 01:44:51,010
so thank you for making this document

2017
01:44:49,420 --> 01:44:54,040
and I would like to see it carried

2018
01:44:51,010 --> 01:44:56,050
forward if you're looking for the wisdom

2019
01:44:54,040 --> 01:44:58,150
in it and it may be in another version

2020
01:44:56,050 --> 01:45:06,310
there's still quite a few loops and

2021
01:44:58,150 --> 01:45:09,449
things in this one but thank you thanks

2022
01:45:06,310 --> 01:45:13,300
for writing and then one question is you

2023
01:45:09,449 --> 01:45:17,230
didn't mention fairness in this draft

2024
01:45:13,300 --> 01:45:19,449
and then you might be tricky things but

2025
01:45:17,230 --> 01:45:21,159
I'd like to understand who this is

2026
01:45:19,449 --> 01:45:25,599
intentional or not intentional

2027
01:45:21,159 --> 01:45:27,940
I mentioned multiplexing and the idea

2028
01:45:25,600 --> 01:45:31,630
that you have to multiplex and the idea

2029
01:45:27,940 --> 01:45:33,879
you had not to starve I'd mentioned that

2030
01:45:31,630 --> 01:45:37,389
roaches can do things to help you

2031
01:45:33,880 --> 01:45:39,580
achieve these goals i if i didn't

2032
01:45:37,389 --> 01:45:42,969
mention furnace it was because I didn't

2033
01:45:39,580 --> 01:45:45,159
find RFC keywords mixed in with the

2034
01:45:42,969 --> 01:45:47,139
furnace that I thought had to be in here

2035
01:45:45,159 --> 01:45:48,638
but that is the sort of thing which we

2036
01:45:47,139 --> 01:45:50,469
should talk about because I'm it's

2037
01:45:48,639 --> 01:45:52,510
important to say something probably we

2038
01:45:50,469 --> 01:45:54,730
should say something about fairness even

2039
01:45:52,510 --> 01:45:57,449
if it says something that isn't a must

2040
01:45:54,730 --> 01:45:57,449
or should do it

2041
01:45:58,380 --> 01:46:06,580
but Briscoe I'd support this as a

2042
01:46:02,920 --> 01:46:10,150
checklist no I probably wouldn't support

2043
01:46:06,580 --> 01:46:13,239
it as trying to tell people the wisdom

2044
01:46:10,150 --> 01:46:14,769
that you just mentioned the congestion

2045
01:46:13,239 --> 01:46:16,989
control designers have got because

2046
01:46:14,770 --> 01:46:21,100
that's just going to be going on forever

2047
01:46:16,989 --> 01:46:22,388
you know it isn't and also different

2048
01:46:21,100 --> 01:46:25,300
people have different opinions on that

2049
01:46:22,389 --> 01:46:29,560
and you know it will just become a churn

2050
01:46:25,300 --> 01:46:30,969
of nothingness yeah okay so now we're

2051
01:46:29,560 --> 01:46:32,199
getting there especially no the

2052
01:46:30,969 --> 01:46:37,030
gentleman's joined at the back of the

2053
01:46:32,199 --> 01:46:40,360
queue and this all started in London

2054
01:46:37,030 --> 01:46:42,309
with a with the quick intern and I'm

2055
01:46:40,360 --> 01:46:44,860
trying to think about how strong can

2056
01:46:42,310 --> 01:46:46,389
quick actually say you do any congestion

2057
01:46:44,860 --> 01:46:48,420
control that you like providing it's

2058
01:46:46,389 --> 01:46:51,010
reasonable and then what the heck is

2059
01:46:48,420 --> 01:46:52,690
reasonable so I don't want to Bible

2060
01:46:51,010 --> 01:46:54,179
about how to design congestion controls

2061
01:46:52,690 --> 01:47:03,699
but I would like to have some kind of

2062
01:46:54,179 --> 01:47:05,380
reasonableness certainly useful I think

2063
01:47:03,699 --> 01:47:07,000
it's very valuable to have like one

2064
01:47:05,380 --> 01:47:10,030
document that has links to all the

2065
01:47:07,000 --> 01:47:12,429
necessary principles as well as links to

2066
01:47:10,030 --> 01:47:14,530
other documents that describe control so

2067
01:47:12,429 --> 01:47:18,730
I am very supportive of this happy to

2068
01:47:14,530 --> 01:47:23,790
review it and help make progress you're

2069
01:47:18,730 --> 01:47:26,409
hoping to make progress thank you yes I

2070
01:47:23,790 --> 01:47:31,540
also second the idea it's a very good

2071
01:47:26,409 --> 01:47:33,849
idea it's not exhaustive yes and I would

2072
01:47:31,540 --> 01:47:37,690
suggest using the words capacity our

2073
01:47:33,850 --> 01:47:49,270
location and not wood furnace has got

2074
01:47:37,690 --> 01:47:51,400
too much I just maybe if fenneis didn't

2075
01:47:49,270 --> 01:47:57,159
actually appears a word anywhere maybe

2076
01:47:51,400 --> 01:47:58,780
that was not unintentional I have a one

2077
01:47:57,159 --> 01:48:00,759
of my favorite papers I accidentally

2078
01:47:58,780 --> 01:48:03,540
used the word fairness you know King

2079
01:48:00,760 --> 01:48:05,860
will read it later so it's just so wet

2080
01:48:03,540 --> 01:48:08,380
okay I believe in fairness I don't

2081
01:48:05,860 --> 01:48:12,120
believe in equality oh yeah

2082
01:48:08,380 --> 01:48:19,270
like let's not go that rather go cheats

2083
01:48:12,120 --> 01:48:22,090
reminder it's all Matt's fault so I I I

2084
01:48:19,270 --> 01:48:24,780
feel partly responsible for this but

2085
01:48:22,090 --> 01:48:26,980
only partly gory you did the work but

2086
01:48:24,780 --> 01:48:29,199
thank you so much for doing the work and

2087
01:48:26,980 --> 01:48:31,509
I am very high I am happy to see this

2088
01:48:29,199 --> 01:48:33,909
work happened I'm happy to review and

2089
01:48:31,510 --> 01:48:35,650
more than to be I'm happy to help by

2090
01:48:33,909 --> 01:48:41,860
contributing text and by helping shape

2091
01:48:35,650 --> 01:48:44,138
the I I agree that I maybe I didn't

2092
01:48:41,860 --> 01:48:47,500
understand Bob correctly but I actually

2093
01:48:44,139 --> 01:48:49,690
don't want a checklist in the sense that

2094
01:48:47,500 --> 01:48:51,040
checklists are going to be in exhaustive

2095
01:48:49,690 --> 01:48:53,320
they're not gonna be exhaustive and

2096
01:48:51,040 --> 01:48:55,030
that's they're failing in some ways it's

2097
01:48:53,320 --> 01:48:56,080
like it's never going to be exhaustive

2098
01:48:55,030 --> 01:48:58,599
so what's the point of having a

2099
01:48:56,080 --> 01:49:01,449
checklist if I wanna have considerations

2100
01:48:58,600 --> 01:49:04,060
that's useful to me in this sort of a

2101
01:49:01,449 --> 01:49:05,860
document maybe this could lead to test

2102
01:49:04,060 --> 01:49:08,380
Suites and other things that actually

2103
01:49:05,860 --> 01:49:10,360
implement checklists no not that I

2104
01:49:08,380 --> 01:49:12,100
we've done this before I definitely

2105
01:49:10,360 --> 01:49:16,239
don't want to instigate that work here

2106
01:49:12,100 --> 01:49:17,949
again but but beyond that I think it's

2107
01:49:16,239 --> 01:49:19,959
it's super useful as a way to think

2108
01:49:17,949 --> 01:49:21,159
about what is reasonable I think that's

2109
01:49:19,960 --> 01:49:23,920
a conversation we've not really had

2110
01:49:21,159 --> 01:49:26,110
we've had conversations about perfectly

2111
01:49:23,920 --> 01:49:28,600
fair but not what's reasonable so I

2112
01:49:26,110 --> 01:49:30,280
think I wanted to try and translate his

2113
01:49:28,600 --> 01:49:31,960
comments because because I think I agree

2114
01:49:30,280 --> 01:49:34,030
with it the problem with the word

2115
01:49:31,960 --> 01:49:37,060
checklist is it implies that there's an

2116
01:49:34,030 --> 01:49:39,400
algorithmic binary decision and that's

2117
01:49:37,060 --> 01:49:42,159
the that's not correct and in a better

2118
01:49:39,400 --> 01:49:45,280
world as considerations yes thank you so

2119
01:49:42,159 --> 01:49:47,610
I think you got your feedback that this

2120
01:49:45,280 --> 01:49:50,349
is a useful document and I would suggest

2121
01:49:47,610 --> 01:49:53,320
get the dog to get the discussion to the

2122
01:49:50,350 --> 01:49:56,260
meeting this because we are limited time

2123
01:49:53,320 --> 01:50:00,730
so anyone you need something can I ask

2124
01:49:56,260 --> 01:50:04,840
which mailing list because I joined that

2125
01:50:00,730 --> 01:50:07,089
group you'd shared this group I got I

2126
01:50:04,840 --> 01:50:08,830
can we please not do this on to mailing

2127
01:50:07,090 --> 01:50:11,100
list this is this is killing my brain

2128
01:50:08,830 --> 01:50:14,850
having multiple mailing list and a chair

2129
01:50:11,100 --> 01:50:14,850
yeah I don't do it

2130
01:50:16,239 --> 01:50:21,530
you want to do an ICC RG discuss the

2131
01:50:19,429 --> 01:50:23,839
standards implications of datum so I

2132
01:50:21,530 --> 01:50:25,969
mean I again honestly it is there

2133
01:50:23,839 --> 01:50:27,559
anything standard sweaty here yeah it's

2134
01:50:25,969 --> 01:50:28,849
all the shoulds and musts at tri-c from

2135
01:50:27,559 --> 01:50:32,359
all the standards in which standards

2136
01:50:28,849 --> 01:50:35,719
wage let me ask a different question

2137
01:50:32,359 --> 01:50:39,229
what can we sort this out nodes we swap

2138
01:50:35,719 --> 01:50:42,100
us out after we meet with us and I'll

2139
01:50:39,229 --> 01:50:45,199
get you so we have a last presentation

2140
01:50:42,100 --> 01:50:45,199
[Music]

2141
01:50:47,859 --> 01:51:04,639
anyone who has not signed the blue

2142
01:50:50,300 --> 01:51:07,729
sheets now is the opportunity my name is

2143
01:51:04,639 --> 01:51:09,829
Carlos Gomez I'm from UPC and I'm going

2144
01:51:07,729 --> 01:51:12,260
to present this new draft entitled TCP

2145
01:51:09,829 --> 01:51:15,409
at poor micro farad is Jonker craft from

2146
01:51:12,260 --> 01:51:16,939
the University of Cambridge so first of

2147
01:51:15,409 --> 01:51:19,369
all let's go through the motivation for

2148
01:51:16,939 --> 01:51:21,949
this new document it is well known that

2149
01:51:19,369 --> 01:51:24,499
the latex allow reducing packet overhead

2150
01:51:21,949 --> 01:51:26,989
and some conditions however it's also

2151
01:51:24,499 --> 01:51:30,169
true that the latex may be detrimental

2152
01:51:26,989 --> 01:51:32,808
to performance in some scenarios so

2153
01:51:30,169 --> 01:51:35,389
let's assume segment that carries a

2154
01:51:32,809 --> 01:51:37,010
message of up to one image as if the

2155
01:51:35,389 --> 01:51:38,929
message does not elicit an application

2156
01:51:37,010 --> 01:51:41,719
layer response and the second data

2157
01:51:38,929 --> 01:51:44,749
segment is is not transferred earlier

2158
01:51:41,719 --> 01:51:46,879
than the delay ACK timeout then the ACK

2159
01:51:44,749 --> 01:51:49,369
for the segment will be unnecessarily

2160
01:51:46,879 --> 01:51:53,329
delayed and gives me until a number of

2161
01:51:49,369 --> 01:51:55,999
negative consequences so for example if

2162
01:51:53,329 --> 01:51:58,459
the sender uses the Nagle algorithm the

2163
01:51:55,999 --> 01:52:00,728
sender may be prevented from sending

2164
01:51:58,459 --> 01:52:03,949
more data while awaiting the ACK and

2165
01:52:00,729 --> 01:52:06,139
this may lead to high in the performance

2166
01:52:03,949 --> 01:52:08,539
in in high bitrate environments as

2167
01:52:06,139 --> 01:52:11,329
reported for example in the DNS stateful

2168
01:52:08,539 --> 01:52:13,398
operations RFC and the reason here is

2169
01:52:11,329 --> 01:52:15,709
that in high bit rate environments the

2170
01:52:13,399 --> 01:52:18,169
RTT might be below one millisecond

2171
01:52:15,709 --> 01:52:21,260
whereas the delay that timeout is

2172
01:52:18,169 --> 01:52:22,849
typically 200 milliseconds then in

2173
01:52:21,260 --> 01:52:26,010
another domain which is the Internet of

2174
01:52:22,849 --> 01:52:28,620
Things or IOT devices or many

2175
01:52:26,010 --> 01:52:31,080
typically exhibit significant resource

2176
01:52:28,620 --> 01:52:33,930
constraints in terms of energy memory

2177
01:52:31,080 --> 01:52:36,630
and other resources and a device and IOT

2178
01:52:33,930 --> 01:52:39,960
device that sends a segment needs to

2179
01:52:36,630 --> 01:52:40,760
keep the segment in a buffer until via

2180
01:52:39,960 --> 01:52:43,950
Karev's

2181
01:52:40,760 --> 01:52:46,830
however the memory resources cannot be

2182
01:52:43,950 --> 01:52:49,590
released until the react which is

2183
01:52:46,830 --> 01:52:52,500
delayed arrives and due to this delay

2184
01:52:49,590 --> 01:52:54,690
there might be problems if there's not

2185
01:52:52,500 --> 01:52:56,820
much memory available which might even

2186
01:52:54,690 --> 01:53:00,980
lead to packet drops if subsequent

2187
01:52:56,820 --> 01:53:04,920
packets need to be sent meanwhile also

2188
01:53:00,980 --> 01:53:08,070
IOT devices run typically on simple

2189
01:53:04,920 --> 01:53:10,860
energy limited sources such as simple

2190
01:53:08,070 --> 01:53:12,450
batteries and depending on the technique

2191
01:53:10,860 --> 01:53:14,969
used by the device for energy

2192
01:53:12,450 --> 01:53:18,840
conservation for example if the device

2193
01:53:14,970 --> 01:53:21,630
uses a radio interface the device might

2194
01:53:18,840 --> 01:53:24,090
stay with the read interface on awaken

2195
01:53:21,630 --> 01:53:25,860
consuming energy while awaiting the arc

2196
01:53:24,090 --> 01:53:27,840
which is delayed so the delay

2197
01:53:25,860 --> 01:53:29,519
contributes to increasing the energy

2198
01:53:27,840 --> 01:53:33,270
consumption and decreasing the lifetime

2199
01:53:29,520 --> 01:53:35,370
of the device in addition the delay

2200
01:53:33,270 --> 01:53:37,860
might interact negatively with layer 2

2201
01:53:35,370 --> 01:53:40,860
mechanisms in some IOT technologies

2202
01:53:37,860 --> 01:53:42,929
whether some specific opportunities for

2203
01:53:40,860 --> 01:53:46,380
transmission and reception of packets

2204
01:53:42,930 --> 01:53:47,790
and if due to the delay some opportunity

2205
01:53:46,380 --> 01:53:50,610
is lost it means that the next

2206
01:53:47,790 --> 01:53:52,500
opportunity will only arrive after some

2207
01:53:50,610 --> 01:53:56,700
longer delay which then in turn

2208
01:53:52,500 --> 01:53:59,610
exacerbates the previous two issues so

2209
01:53:56,700 --> 01:54:02,460
we might want to consider solutions and

2210
01:53:59,610 --> 01:54:04,650
we might think ok can we for example try

2211
01:54:02,460 --> 01:54:07,850
to disable delay tags at the receiver if

2212
01:54:04,650 --> 01:54:11,070
at all possible and the answer is that

2213
01:54:07,850 --> 01:54:12,270
perhaps no that's probably not a good

2214
01:54:11,070 --> 01:54:14,309
solution because the receiver may

2215
01:54:12,270 --> 01:54:16,590
interact with a variety of devices and

2216
01:54:14,310 --> 01:54:19,980
the attacks may still work as intended

2217
01:54:16,590 --> 01:54:22,530
in many connections and even considering

2218
01:54:19,980 --> 01:54:25,110
a specific sender perhaps the sender may

2219
01:54:22,530 --> 01:54:27,360
offer a mixed traffic pattern where the

2220
01:54:25,110 --> 01:54:30,630
attacks may work as intended for some

2221
01:54:27,360 --> 01:54:33,269
part of that traffic so a conclusion is

2222
01:54:30,630 --> 01:54:38,250
that a solution to this problem should

2223
01:54:33,270 --> 01:54:40,250
be at the segment granularity so what we

2224
01:54:38,250 --> 01:54:43,180
are proposing in this document is

2225
01:54:40,250 --> 01:54:46,670
what we call the AK pull mechanism and

2226
01:54:43,180 --> 01:54:48,950
it would make use of one of the TCP

2227
01:54:46,670 --> 01:54:51,380
heavy Reserve beads which is defining

2228
01:54:48,950 --> 01:54:52,880
the document as the active flag this

2229
01:54:51,380 --> 01:54:55,910
would be more specifically the sixth

2230
01:54:52,880 --> 01:54:59,540
date of the 13th bite of the TCP header

2231
01:54:55,910 --> 01:55:01,760
and the mechanism would be as follows

2232
01:54:59,540 --> 01:55:04,010
the sender if the sender wants to

2233
01:55:01,760 --> 01:55:07,760
request an immediate AK for DT segment

2234
01:55:04,010 --> 01:55:09,260
then it sets the at poles like and on

2235
01:55:07,760 --> 01:55:11,360
the receiver side upon reception of a

2236
01:55:09,260 --> 01:55:13,880
data segment with the approach lock set

2237
01:55:11,360 --> 01:55:16,339
and the receiver if it conforms to this

2238
01:55:13,880 --> 01:55:21,380
specification it must send the ACK

2239
01:55:16,340 --> 01:55:24,500
immediately there's a question okay then

2240
01:55:21,380 --> 01:55:27,260
after the internet graph submission

2241
01:55:24,500 --> 01:55:28,100
deadline there was some nice discussion

2242
01:55:27,260 --> 01:55:31,100
on the mailing list

2243
01:55:28,100 --> 01:55:33,860
there was good feedback many good

2244
01:55:31,100 --> 01:55:35,150
comments that were sent on the list I

2245
01:55:33,860 --> 01:55:37,639
would like to thank everyone for that

2246
01:55:35,150 --> 01:55:40,639
and I've tried to summarize the feedback

2247
01:55:37,640 --> 01:55:44,690
on this slide so one point is that of

2248
01:55:40,640 --> 01:55:49,400
course one of the TCP header reserve

2249
01:55:44,690 --> 01:55:51,530
bids is an expensive resource and we are

2250
01:55:49,400 --> 01:55:53,089
well aware of it so that means that we

2251
01:55:51,530 --> 01:55:55,969
need to carefully assess the pros and

2252
01:55:53,090 --> 01:55:58,430
cons of this proposal or some perhaps

2253
01:55:55,970 --> 01:55:59,980
some alternatives then also the use of

2254
01:55:58,430 --> 01:56:03,770
the maximum AG delay option was

2255
01:55:59,980 --> 01:56:06,889
suggested however with that option we

2256
01:56:03,770 --> 01:56:09,830
understand there might be two issues one

2257
01:56:06,890 --> 01:56:13,700
is that it's a an option that would not

2258
01:56:09,830 --> 01:56:17,240
be a solution offering sorry a solution

2259
01:56:13,700 --> 01:56:19,760
at the second granularity and on the

2260
01:56:17,240 --> 01:56:23,540
other hand this option entails another

2261
01:56:19,760 --> 01:56:26,480
head of 28 bits which might be not so

2262
01:56:23,540 --> 01:56:29,420
good in some scenarios such as IOT then

2263
01:56:26,480 --> 01:56:31,280
there was another comment or suggestion

2264
01:56:29,420 --> 01:56:34,100
like perhaps we might redefine the push

2265
01:56:31,280 --> 01:56:36,320
flag as having the octal semantics this

2266
01:56:34,100 --> 01:56:38,150
could be phrased as a tcp me not delay

2267
01:56:36,320 --> 01:56:40,820
acts for data segments with the push

2268
01:56:38,150 --> 01:56:43,879
flag which in principle would be allowed

2269
01:56:40,820 --> 01:56:45,830
by RFC 1122 then there were some reports

2270
01:56:43,880 --> 01:56:48,280
about how is actually the bush flag

2271
01:56:45,830 --> 01:56:49,850
being used in the Windows and Linux

2272
01:56:48,280 --> 01:56:51,500
implementations

2273
01:56:49,850 --> 01:56:53,099
they said the push record the message

2274
01:56:51,500 --> 01:56:55,679
boundary and

2275
01:56:53,099 --> 01:56:58,440
at the receiver side neither windows nor

2276
01:56:55,679 --> 01:57:00,420
nor Linux sandy acts immediately upon

2277
01:56:58,440 --> 01:57:01,799
receiving semijns with the bushwhack set

2278
01:57:00,420 --> 01:57:03,599
so it means that in these

2279
01:57:01,800 --> 01:57:05,670
implementations that push flag is not

2280
01:57:03,599 --> 01:57:08,909
being used as having the opossum antics

2281
01:57:05,670 --> 01:57:11,130
then there was some concern raised that

2282
01:57:08,909 --> 01:57:13,949
there are application such as RPC or web

2283
01:57:11,130 --> 01:57:16,409
that use many small packets with the

2284
01:57:13,949 --> 01:57:18,419
push flag set that do benefit from delay

2285
01:57:16,409 --> 01:57:21,269
tags because then it's possible to

2286
01:57:18,420 --> 01:57:24,570
piggyback action replies and in those

2287
01:57:21,270 --> 01:57:26,760
cases if we really find the push like us

2288
01:57:24,570 --> 01:57:28,530
having the ad pull semantics then this

2289
01:57:26,760 --> 01:57:30,630
benefit would be lost

2290
01:57:28,530 --> 01:57:34,050
therefore perhaps having a separate

2291
01:57:30,630 --> 01:57:36,750
attack pool flag would allow having both

2292
01:57:34,050 --> 01:57:39,210
things with the law using the latex in

2293
01:57:36,750 --> 01:57:41,460
those cases where it's useful and also

2294
01:57:39,210 --> 01:57:44,610
separately supporting the ability of

2295
01:57:41,460 --> 01:57:46,139
requesting immediate act when needed and

2296
01:57:44,610 --> 01:57:48,389
finally there was another point made

2297
01:57:46,139 --> 01:57:52,139
that selfish devices might want to

2298
01:57:48,389 --> 01:57:53,820
always use this mechanism therefore we

2299
01:57:52,139 --> 01:57:56,969
might need some clear rules or

2300
01:57:53,820 --> 01:58:00,090
recommendations on when this should be

2301
01:57:56,969 --> 01:58:02,969
used or would be allowed finally there's

2302
01:58:00,090 --> 01:58:06,389
a security consideration at least one to

2303
01:58:02,969 --> 01:58:10,230
be done here which is that there's a

2304
01:58:06,389 --> 01:58:13,530
possible do s attack as a result of this

2305
01:58:10,230 --> 01:58:16,259
at pull mechanism especially on resource

2306
01:58:13,530 --> 01:58:18,360
constrained receiver goodbye an attacker

2307
01:58:16,260 --> 01:58:20,880
may send a large number of messages to

2308
01:58:18,360 --> 01:58:23,309
the victim note requesting an immediate

2309
01:58:20,880 --> 01:58:25,500
attack for each in order to contribute

2310
01:58:23,310 --> 01:58:28,380
to depleting resources from the device

2311
01:58:25,500 --> 01:58:30,900
for example energy resources one

2312
01:58:28,380 --> 01:58:34,980
approach to avoid this attack would be

2313
01:58:30,900 --> 01:58:39,299
just ignoring the April flag so other

2314
01:58:34,980 --> 01:58:42,030
well comments questions yes so when I

2315
01:58:39,300 --> 01:58:44,900
read this draft it was not quite clear

2316
01:58:42,030 --> 01:58:47,580
to me what the exact about the exact

2317
01:58:44,900 --> 01:58:48,059
exact problem space was that you want to

2318
01:58:47,580 --> 01:58:51,840
address

2319
01:58:48,060 --> 01:58:54,570
so you mentioned IOT and the other the

2320
01:58:51,840 --> 01:58:57,179
other aspect that I was missing was next

2321
01:58:54,570 --> 01:59:00,090
we do have a couple of mechanisms like

2322
01:58:57,179 --> 01:59:05,090
for example tea sack and TLP which could

2323
01:59:00,090 --> 01:59:06,239
be exploited to exactly this this point

2324
01:59:05,090 --> 01:59:06,489
unilaterally

2325
01:59:06,239 --> 01:59:08,980
you

2326
01:59:06,489 --> 01:59:11,549
don't need any change on the on the

2327
01:59:08,980 --> 01:59:14,768
server side to extract this information

2328
01:59:11,550 --> 01:59:17,429
more quickly if you actually need the

2329
01:59:14,769 --> 01:59:20,409
low latency so I'm wondering why those

2330
01:59:17,429 --> 01:59:22,150
aspects have not been in in in this

2331
01:59:20,409 --> 01:59:25,598
draft and why they were deemed

2332
01:59:22,150 --> 01:59:27,999
unsuitable okay thank you I will

2333
01:59:25,599 --> 01:59:29,980
definitely look at the mechanism

2334
01:59:27,999 --> 01:59:33,309
suggested and regarding the problem

2335
01:59:29,980 --> 01:59:36,848
space actually there's there seems to be

2336
01:59:33,309 --> 01:59:39,309
a problem in different domains and there

2337
01:59:36,849 --> 01:59:42,400
are two examples I mentioned one is the

2338
01:59:39,309 --> 01:59:43,269
IOT another one is height high bitrate

2339
01:59:42,400 --> 01:59:46,420
environments

2340
01:59:43,269 --> 01:59:49,749
perhaps there are some other scenarios

2341
01:59:46,420 --> 01:59:53,409
so this is perhaps some general problem

2342
01:59:49,749 --> 01:59:54,760
I was exactly gonna say that I think

2343
01:59:53,409 --> 01:59:56,049
this is more general problem as we

2344
01:59:54,760 --> 01:59:59,230
haven't got much time I'll leave it

2345
01:59:56,050 --> 02:00:03,730
there but support worker in this face

2346
01:59:59,230 --> 02:00:05,379
but things like act right control from

2347
02:00:03,730 --> 02:00:07,030
the sender as well is it could could be

2348
02:00:05,380 --> 02:00:08,949
folded into some noise so maybe we need

2349
02:00:07,030 --> 02:00:14,349
to start working on requirements for

2350
02:00:08,949 --> 02:00:19,089
this before we really close to cool and

2351
02:00:14,349 --> 02:00:20,769
be the cue after last but very brief

2352
02:00:19,090 --> 02:00:21,130
statements only we are running out of

2353
02:00:20,769 --> 02:00:25,300
time

2354
02:00:21,130 --> 02:00:27,610
yes in a second this the really tough

2355
02:00:25,300 --> 02:00:30,309
part of it is in addition to sort of

2356
02:00:27,610 --> 02:00:32,018
having a better requirements statement

2357
02:00:30,309 --> 02:00:35,139
is actually getting data there's a

2358
02:00:32,019 --> 02:00:37,929
parallel problems in both SCTP and quick

2359
02:00:35,139 --> 02:00:39,789
and partials partial solutions it turns

2360
02:00:37,929 --> 02:00:42,309
out one of the things that one of the

2361
02:00:39,789 --> 02:00:44,050
lessons from quick is that this actually

2362
02:00:42,309 --> 02:00:46,170
matters a lot in certain parts of the

2363
02:00:44,050 --> 02:00:48,820
internet and for certain applications

2364
02:00:46,170 --> 02:00:51,519
having that data rather than speculating

2365
02:00:48,820 --> 02:00:54,730
about why why it's important will change

2366
02:00:51,519 --> 02:00:58,719
this conversation I have this it bugged

2367
02:00:54,730 --> 02:00:59,860
me for 20 years and finally doing

2368
02:00:58,719 --> 02:01:02,760
something about it would be great I

2369
02:00:59,860 --> 02:01:04,860
think we won't know how much it hurts us

2370
02:01:02,760 --> 02:01:06,760
thank you

2371
02:01:04,860 --> 02:01:08,710
Michael took some from the floor I'm not

2372
02:01:06,760 --> 02:01:10,780
that much concerned about the security

2373
02:01:08,710 --> 02:01:12,789
issue you raised because as an attacker

2374
02:01:10,780 --> 02:01:15,728
I can also always send you to placate

2375
02:01:12,789 --> 02:01:16,320
data and I get sex for each one giving

2376
02:01:15,729 --> 02:01:20,480
you a

2377
02:01:16,320 --> 02:01:24,210
how you can elicit an a community just

2378
02:01:20,480 --> 02:01:26,459
read well duplicate Li transmitted and

2379
02:01:24,210 --> 02:01:34,619
out by it again it costs you one bite

2380
02:01:26,460 --> 02:01:36,630
more and you get an AK okay going fast I

2381
02:01:34,619 --> 02:01:39,598
think we did something similar with SCTP

2382
02:01:36,630 --> 02:01:41,880
in the I bet and before we charted that

2383
02:01:39,599 --> 02:01:43,920
we did lots of analysis and why might be

2384
02:01:41,880 --> 02:01:45,030
useful because we put back pressure so

2385
02:01:43,920 --> 02:01:49,590
some of that analysis has already been

2386
02:01:45,030 --> 02:01:51,540
done for SAT P thank you just really

2387
02:01:49,590 --> 02:01:53,750
quickly I support agree with what Bob

2388
02:01:51,540 --> 02:01:56,130
said I don't think the mechanism here is

2389
02:01:53,750 --> 02:01:58,199
necessarily the one that we want to use

2390
02:01:56,130 --> 02:02:04,469
but I think it's worthwhile doing the

2391
02:01:58,199 --> 02:02:07,019
requirements discussion thank you just

2392
02:02:04,469 --> 02:02:09,840
point that the attack time odds are

2393
02:02:07,020 --> 02:02:11,849
reduced now in existence it's no longer

2394
02:02:09,840 --> 02:02:14,369
200 milliseconds it's down to like 40 or

2395
02:02:11,849 --> 02:02:16,070
50 so the impact of a delay direct

2396
02:02:14,369 --> 02:02:20,809
remote is less now compared to before

2397
02:02:16,070 --> 02:02:23,250
the second was yeah so if if the receipt

2398
02:02:20,810 --> 02:02:24,719
wants to indicate the hinge to the

2399
02:02:23,250 --> 02:02:28,349
sender that there is no subsequent

2400
02:02:24,719 --> 02:02:31,349
package sent right so in that case could

2401
02:02:28,349 --> 02:02:35,460
make you as a hint rather than a forcing

2402
02:02:31,349 --> 02:02:37,650
mechanism we thank you thank you for the

2403
02:02:35,460 --> 02:02:41,699
feedback thank you

2404
02:02:37,650 --> 02:02:45,049
this is then F questions no okay

2405
02:02:41,699 --> 02:02:48,049
that thank you all this closes TCP M in

2406
02:02:45,050 --> 02:02:48,050
montréal

2407
02:02:54,590 --> 02:02:57,649
[Music]

