1
00:00:10,680 --> 00:00:13,800
[Music]

2
00:00:17,230 --> 00:00:20,329
[Music]

3
00:00:31,970 --> 00:00:54,269
thank you oh no sorry

4
00:00:35,720 --> 00:00:55,019
hey guys what's the kitchen type each

5
00:00:54,269 --> 00:00:58,159
dude

6
00:00:55,019 --> 00:00:58,159
okay we're finally in the future

7
00:01:03,490 --> 00:01:06,599
[Music]

8
00:01:18,470 --> 00:01:21,620
[Music]

9
00:02:56,980 --> 00:03:00,260
[Music]

10
00:03:06,700 --> 00:03:09,799
[Music]

11
00:03:20,560 --> 00:03:23,689
[Music]

12
00:04:12,760 --> 00:04:17,120
[Music]

13
00:04:20,690 --> 00:04:31,259
you have top joy with these slides it

14
00:04:25,620 --> 00:04:34,590
has also some of your colors ready my

15
00:04:31,259 --> 00:05:04,199
laptop that I can get it straight why

16
00:04:34,590 --> 00:05:06,059
don't you have somebody facing so hello

17
00:05:04,199 --> 00:05:10,169
everybody welcome to the least working

18
00:05:06,060 --> 00:05:12,419
group you you had a few minutes to read

19
00:05:10,169 --> 00:05:15,419
again that not well and just as a

20
00:05:12,419 --> 00:05:18,060
reminder of them it says whatever you

21
00:05:15,419 --> 00:05:22,639
say today is a contribution to the ietf

22
00:05:18,060 --> 00:05:27,960
de su okay so choose the words carefully

23
00:05:22,639 --> 00:05:31,560
so the usual point else I'm Luigi here

24
00:05:27,960 --> 00:05:33,989
beside me Joel we are the cultures but

25
00:05:31,560 --> 00:05:37,590
man didn't make it this time she would

26
00:05:33,990 --> 00:05:40,169
join in remote she will anyway guarantee

27
00:05:37,590 --> 00:05:43,349
minutes as usual thank you very much to

28
00:05:40,169 --> 00:05:48,570
Patmos and all the material is online

29
00:05:43,349 --> 00:05:51,840
and available okay so this light showed

30
00:05:48,570 --> 00:05:55,409
the situation of the documents three

31
00:05:51,840 --> 00:06:01,969
months back in pack and the progress is

32
00:05:55,409 --> 00:06:05,909
this one you catch the differences so

33
00:06:01,969 --> 00:06:10,500
the the list

34
00:06:05,909 --> 00:06:15,810
RFC 8113 this is now in the RFC queue

35
00:06:10,500 --> 00:06:19,490
just waiting for a missing reference the

36
00:06:15,810 --> 00:06:22,340
young model is under review

37
00:06:19,490 --> 00:06:28,220
a young doctor so this is Chris Hobbs

38
00:06:22,340 --> 00:06:30,770
and I met him this morning and there is

39
00:06:28,220 --> 00:06:35,060
a mismatch in the document between the

40
00:06:30,770 --> 00:06:35,990
model and the tree I bet you are at one

41
00:06:35,060 --> 00:06:38,720
of the colliders

42
00:06:35,990 --> 00:06:42,949
Fabio oh you're right I go higher in the

43
00:06:38,720 --> 00:06:46,580
air at key Fabio no no no the point

44
00:06:42,949 --> 00:06:48,979
being is that today or tomorrow Chris

45
00:06:46,580 --> 00:06:56,500
will contact you and show you the issue

46
00:06:48,979 --> 00:07:00,770
so that this can be solved I mean yeah

47
00:06:56,500 --> 00:07:05,090
so other than that doesn't mean we did

48
00:07:00,770 --> 00:07:07,190
nothing but actually Albert will present

49
00:07:05,090 --> 00:07:10,039
what we did in on the main documents

50
00:07:07,190 --> 00:07:12,469
this will be the first presentation that

51
00:07:10,039 --> 00:07:15,500
we have today then on our update on the

52
00:07:12,470 --> 00:07:17,509
Lisp security document and then we have

53
00:07:15,500 --> 00:07:21,110
a few presentation that are not working

54
00:07:17,509 --> 00:07:26,900
group items so actually Prakash didn't

55
00:07:21,110 --> 00:07:29,449
make it so we will not present lisp site

56
00:07:26,900 --> 00:07:31,729
external connectivity so we have more

57
00:07:29,449 --> 00:07:37,219
time for this discussion at the end of

58
00:07:31,729 --> 00:07:45,979
all I'm sorry so it didn't work

59
00:07:37,219 --> 00:07:50,810
basically he make it but so we will have

60
00:07:45,979 --> 00:07:53,000
these overlays Dino will discuss about

61
00:07:50,810 --> 00:07:56,469
I'll show us the list tracer route tool

62
00:07:53,000 --> 00:08:00,169
and make a demo on the mobile node and

63
00:07:56,469 --> 00:08:04,099
finally we will have a share on that

64
00:08:00,169 --> 00:08:06,320
will a present again with more time for

65
00:08:04,099 --> 00:08:09,349
question especially the distributed chef

66
00:08:06,320 --> 00:08:13,729
special Lisp blackboard for automotive

67
00:08:09,349 --> 00:08:18,770
okay there is any comment on the agenda

68
00:08:13,729 --> 00:08:19,758
or anything you want to change nope

69
00:08:18,770 --> 00:08:22,719
thank you

70
00:08:19,759 --> 00:08:22,719
so Albert please

71
00:08:30,420 --> 00:08:39,870
yeah should treat work way today my keys

72
00:08:42,240 --> 00:08:49,840
hello now it works so I think that we

73
00:08:45,910 --> 00:08:52,140
works in the last IDF so I'm going to

74
00:08:49,840 --> 00:08:55,900
summarize either with the changes on the

75
00:08:52,140 --> 00:08:58,930
6830 bees and 6:33 bees since the last

76
00:08:55,900 --> 00:09:02,170
IDF so basically we posted a new version

77
00:08:58,930 --> 00:09:06,130
of each of those documents both in June

78
00:09:02,170 --> 00:09:08,800
2019 so 1 months ago and then hopefully

79
00:09:06,130 --> 00:09:11,710
we have addressed all the comments made

80
00:09:08,800 --> 00:09:13,839
by the reviewers it is up to them to the

81
00:09:11,710 --> 00:09:15,220
site of course so we posted the version

82
00:09:13,840 --> 00:09:17,650
and then we send an email to the

83
00:09:15,220 --> 00:09:20,140
reviewers telling them ok here you have

84
00:09:17,650 --> 00:09:21,579
the new documents and now I'm going to

85
00:09:20,140 --> 00:09:23,170
outline a little bit the changes there

86
00:09:21,580 --> 00:09:25,480
are many many changes you can check the

87
00:09:23,170 --> 00:09:28,540
diffs and i'm summarizing them into

88
00:09:25,480 --> 00:09:32,740
these four items which is security rate

89
00:09:28,540 --> 00:09:35,589
limiting MTU and other and I'm not going

90
00:09:32,740 --> 00:09:37,120
to divide the the changes into that open

91
00:09:35,590 --> 00:09:38,470
or control plane but I'm going just to

92
00:09:37,120 --> 00:09:41,410
mix them because I think it's a little

93
00:09:38,470 --> 00:09:44,710
bit easier to follow so the first change

94
00:09:41,410 --> 00:09:48,130
is that now gleaning map versioning and

95
00:09:44,710 --> 00:09:50,290
locator status bits and acronyms should

96
00:09:48,130 --> 00:09:54,430
not be used over the public internet at

97
00:09:50,290 --> 00:09:56,680
the recommendation on the that we have

98
00:09:54,430 --> 00:09:58,229
written on the spec this is because on

99
00:09:56,680 --> 00:10:00,760
the public internet there are some

100
00:09:58,230 --> 00:10:03,130
issues regarding those mechanism and

101
00:10:00,760 --> 00:10:06,850
then also locator status bit should be

102
00:10:03,130 --> 00:10:09,820
used with my burning when my burgeoning

103
00:10:06,850 --> 00:10:12,130
is injures so that's the first one the

104
00:10:09,820 --> 00:10:17,040
second one is regarding how we compute

105
00:10:12,130 --> 00:10:19,570
the keys on my projector how we

106
00:10:17,040 --> 00:10:24,069
authenticate my precious term messages

107
00:10:19,570 --> 00:10:27,550
ok now what we do is we use the pressure

108
00:10:24,070 --> 00:10:29,110
key not to compute the H Mac that

109
00:10:27,550 --> 00:10:31,120
authenticates the map register but

110
00:10:29,110 --> 00:10:35,770
rather to the I've another key which is

111
00:10:31,120 --> 00:10:38,710
the one that you use to tote integrity

112
00:10:35,770 --> 00:10:40,810
map register so in the in the map

113
00:10:38,710 --> 00:10:43,990
register you have this algorithm ID

114
00:10:40,810 --> 00:10:46,989
and this agree maybe typically was

115
00:10:43,990 --> 00:10:49,150
pointing to the right algorithm I did 2h

116
00:10:46,990 --> 00:10:51,279
Mack the map resistor but now it's

117
00:10:49,150 --> 00:10:54,220
pointing to a new table which is telling

118
00:10:51,279 --> 00:10:55,960
you which Mack algorithm you have to use

119
00:10:54,220 --> 00:10:58,150
and which key derivation function you

120
00:10:55,960 --> 00:11:00,730
have to use so this way we don't change

121
00:10:58,150 --> 00:11:02,860
the map register the way it is and the

122
00:11:00,730 --> 00:11:07,180
way you compute the way you authenticate

123
00:11:02,860 --> 00:11:10,510
map registers is first you pick York you

124
00:11:07,180 --> 00:11:12,520
do you pick your KDF utility version

125
00:11:10,510 --> 00:11:14,800
algorithm based on they are very maybe

126
00:11:12,520 --> 00:11:16,600
and then you also pick the Mac algorithm

127
00:11:14,800 --> 00:11:19,569
based on they are amazing so you have to

128
00:11:16,600 --> 00:11:22,839
pick this field will tell you which

129
00:11:19,570 --> 00:11:24,670
items to use and then you have to to

130
00:11:22,839 --> 00:11:27,310
first of all take your pressure key

131
00:11:24,670 --> 00:11:28,569
which is step number 3 and then once you

132
00:11:27,310 --> 00:11:30,130
have all these three things what you

133
00:11:28,570 --> 00:11:32,050
need to do is you need to compute you

134
00:11:30,130 --> 00:11:33,930
need to the develop a new key and the

135
00:11:32,050 --> 00:11:36,520
way to derive the new key is you apply

136
00:11:33,930 --> 00:11:40,180
the key derivation function algorithm

137
00:11:36,520 --> 00:11:43,689
that you have choose with the nonce s

138
00:11:40,180 --> 00:11:45,280
which is simple it's a constant it's a

139
00:11:43,690 --> 00:11:46,900
string which is a constant which is

140
00:11:45,280 --> 00:11:49,930
equal to MapReduce authentication and

141
00:11:46,900 --> 00:11:51,610
then the pressure key and then the key

142
00:11:49,930 --> 00:11:53,439
that you obtain with this is the one

143
00:11:51,610 --> 00:11:58,060
that you will use with the Mac algorithm

144
00:11:53,440 --> 00:12:01,530
to compute the to hush the the whole map

145
00:11:58,060 --> 00:12:05,979
register message and to authenticate it

146
00:12:01,530 --> 00:12:08,860
then some other comments or a small

147
00:12:05,980 --> 00:12:11,320
changes is that the nonce is incremented

148
00:12:08,860 --> 00:12:14,530
each map register to prevent an teleplay

149
00:12:11,320 --> 00:12:17,710
attacks we discuss these three IDs

150
00:12:14,530 --> 00:12:20,410
before but we need to clarify that this

151
00:12:17,710 --> 00:12:23,140
isn't accessed by the nonce is index set

152
00:12:20,410 --> 00:12:29,439
at the map server by the x-ray ID and

153
00:12:23,140 --> 00:12:31,180
the key then also the key the pressure

154
00:12:29,440 --> 00:12:33,640
key which we use we also specify that

155
00:12:31,180 --> 00:12:35,290
the pressure key that we use totin

156
00:12:33,640 --> 00:12:37,900
degrade map register message is unique

157
00:12:35,290 --> 00:12:40,089
PTR which was not clear on the previous

158
00:12:37,900 --> 00:12:45,370
version and then we also rewrite the

159
00:12:40,089 --> 00:12:48,060
security sections too well discussing

160
00:12:45,370 --> 00:12:48,060
all these changes

161
00:12:49,119 --> 00:12:54,740
sorry this title is wrong it should be

162
00:12:51,559 --> 00:12:57,949
read limiter so in terms of rate

163
00:12:54,740 --> 00:13:00,829
limiters there is an RFC which is 80 85

164
00:12:57,949 --> 00:13:02,990
which defines some guidelines on rate

165
00:13:00,829 --> 00:13:05,599
limiting musical applications over the

166
00:13:02,990 --> 00:13:08,420
internet so we are following those

167
00:13:05,600 --> 00:13:10,550
guidelines and map request must be read

168
00:13:08,420 --> 00:13:13,639
limited to one per second per ad prefix

169
00:13:10,550 --> 00:13:15,800
and then in order to be in line with the

170
00:13:13,639 --> 00:13:18,559
spec what we do is that after ten

171
00:13:15,800 --> 00:13:21,050
retransmits you have to wait for 30

172
00:13:18,559 --> 00:13:23,749
seconds so overall you are sending one

173
00:13:21,050 --> 00:13:27,019
packet on average each three seconds the

174
00:13:23,749 --> 00:13:29,059
map reply mass will read limited one

175
00:13:27,019 --> 00:13:30,889
packet per three per few seconds this is

176
00:13:29,059 --> 00:13:35,629
per destination or lock this also

177
00:13:30,889 --> 00:13:39,889
applies to SMR to the message that SMR

178
00:13:35,629 --> 00:13:41,779
centers and SMS responders sent and then

179
00:13:39,889 --> 00:13:43,240
regarding the map register you have an

180
00:13:41,779 --> 00:13:46,339
exponential back-off of one minute

181
00:13:43,240 --> 00:13:51,410
depending on the if you need to

182
00:13:46,339 --> 00:13:53,889
retransmit it then on regarding MTU

183
00:13:51,410 --> 00:13:59,300
and following the guidelines of the same

184
00:13:53,889 --> 00:14:01,129
RFC so if you Lisp is expected to be

185
00:13:59,300 --> 00:14:02,990
deployed over cooperating entities and

186
00:14:01,129 --> 00:14:05,600
if the deployers are aware of them to

187
00:14:02,990 --> 00:14:08,420
you then they can set them to you but if

188
00:14:05,600 --> 00:14:10,550
they are not aware of the MTU these are

189
00:14:08,420 --> 00:14:13,160
a few states that the packet size must

190
00:14:10,550 --> 00:14:16,399
be limited to those two sizes for ipv4

191
00:14:13,160 --> 00:14:19,879
and ipv6 so we have specified this on

192
00:14:16,399 --> 00:14:22,249
the documents and then other small

193
00:14:19,879 --> 00:14:25,639
changes are that this is rather a

194
00:14:22,249 --> 00:14:29,389
clarification instance IV is a 24 bit

195
00:14:25,639 --> 00:14:31,209
field on the data plane and that's it

196
00:14:29,389 --> 00:14:36,110
this is what it is

197
00:14:31,209 --> 00:14:37,670
then the nones is using to identify the

198
00:14:36,110 --> 00:14:40,399
corresponding map reply when you send a

199
00:14:37,670 --> 00:14:42,378
map request because before some text was

200
00:14:40,399 --> 00:14:45,740
claiming that it was it was providing

201
00:14:42,379 --> 00:14:47,540
some anti replay attacks that the

202
00:14:45,740 --> 00:14:51,110
explicit congestion notification filters

203
00:14:47,540 --> 00:14:53,959
process according to RFC 6040

204
00:14:51,110 --> 00:14:55,369
and then also we clarified that whenever

205
00:14:53,959 --> 00:14:57,529
you receive a packet and you have to

206
00:14:55,369 --> 00:14:58,069
wait to am up for a map request

207
00:14:57,529 --> 00:15:00,529
map-reply

208
00:14:58,069 --> 00:15:02,420
exchange you can either drop or buffer

209
00:15:00,529 --> 00:15:05,120
the packet and this is up to the

210
00:15:02,420 --> 00:15:08,990
to choose which one is better for his

211
00:15:05,120 --> 00:15:12,350
days or her deployment and we don't

212
00:15:08,990 --> 00:15:15,440
provide any kind of recommendation so

213
00:15:12,350 --> 00:15:20,860
this is the current status of the of the

214
00:15:15,440 --> 00:15:24,920
of both documents so as I understand

215
00:15:20,860 --> 00:15:26,390
only we have only to discuss and my

216
00:15:24,920 --> 00:15:28,430
understanding is that the next step is

217
00:15:26,390 --> 00:15:32,270
to wait for those discussed to respond

218
00:15:28,430 --> 00:15:41,479
right okay so is there any comment

219
00:15:32,270 --> 00:15:43,340
question just trying to understand what

220
00:15:41,480 --> 00:15:44,870
are the next steps because my

221
00:15:43,340 --> 00:15:49,670
understanding is that we are waiting for

222
00:15:44,870 --> 00:15:53,090
the this task comment to be no for the

223
00:15:49,670 --> 00:15:58,490
latest version to be reviewed and I

224
00:15:53,090 --> 00:16:07,610
think at this point is only been in

225
00:15:58,490 --> 00:16:11,120
media right hi Debra I forget myself did

226
00:16:07,610 --> 00:16:14,990
you actually send them mails - yes I did

227
00:16:11,120 --> 00:16:21,050
in June in journalist I can check it now

228
00:16:14,990 --> 00:16:24,110
again yeah right okay yeah if you can

229
00:16:21,050 --> 00:16:27,079
this week tried to grab them and asked

230
00:16:24,110 --> 00:16:30,350
if they had a chance to look at it okay

231
00:16:27,080 --> 00:16:32,180
and you know and I'll try to remind them

232
00:16:30,350 --> 00:16:34,160
- and definitely next week we'll get on

233
00:16:32,180 --> 00:16:36,949
or more because everybody's very busy

234
00:16:34,160 --> 00:16:38,390
right before the meetings but we try to

235
00:16:36,950 --> 00:16:40,490
get them to clear them now but if you

236
00:16:38,390 --> 00:16:41,689
can get them this week you know that

237
00:16:40,490 --> 00:16:45,350
would be good in case they don't have a

238
00:16:41,690 --> 00:16:46,700
follow-up right to talk about it just

239
00:16:45,350 --> 00:16:47,990
because I didn't see it very well you

240
00:16:46,700 --> 00:16:51,800
are suggesting me to send them a

241
00:16:47,990 --> 00:16:56,740
friendly reminder right just say you

242
00:16:51,800 --> 00:16:59,089
have time to me and this week thank you

243
00:16:56,740 --> 00:17:01,400
maybe just one additional comment is

244
00:16:59,090 --> 00:17:04,550
this Fabio game on this GPE

245
00:17:01,400 --> 00:17:05,720
I have a set of comment form from me

246
00:17:04,550 --> 00:17:07,698
area that needs to be applied at

247
00:17:05,720 --> 00:17:10,640
document and you know I just didn't take

248
00:17:07,699 --> 00:17:12,230
a chance to do those but I mean they're

249
00:17:10,640 --> 00:17:15,170
in the queue so I hope I can do it

250
00:17:12,230 --> 00:17:16,349
shortly after yeah yeah because I would

251
00:17:15,170 --> 00:17:19,380
like to keep these in

252
00:17:16,349 --> 00:17:30,418
with the review and aligned with the 68

253
00:17:19,380 --> 00:17:32,000
23 vs at 68 68 turkeys no further

254
00:17:30,419 --> 00:17:36,090
questions

255
00:17:32,000 --> 00:17:38,270
thanks out that Adi don't see it come

256
00:17:36,090 --> 00:17:38,270
here

257
00:17:51,610 --> 00:17:54,729
[Music]

258
00:17:58,320 --> 00:18:06,689
okay this is the update on leaf sack I'm

259
00:18:03,750 --> 00:18:11,670
Fabio and these are the other quarters

260
00:18:06,690 --> 00:18:18,810
of the document so these are the updates

261
00:18:11,670 --> 00:18:20,880
that were posted on June the 2nd so the

262
00:18:18,810 --> 00:18:22,679
changes the main changes were to align

263
00:18:20,880 --> 00:18:25,410
list sack with the changes that were

264
00:18:22,680 --> 00:18:27,300
introduced it in 68 2 to 3 bees and to

265
00:18:25,410 --> 00:18:32,130
reflect the same mechanism that we are

266
00:18:27,300 --> 00:18:35,490
now used plus the first one here that is

267
00:18:32,130 --> 00:18:38,580
basically allowing an ITR to securely

268
00:18:35,490 --> 00:18:41,340
downgrade to non this sack this was a

269
00:18:38,580 --> 00:18:43,439
request that came from ban we discussed

270
00:18:41,340 --> 00:18:46,949
with him in Prague and now the document

271
00:18:43,440 --> 00:18:48,600
reflects that update the second is you

272
00:18:46,950 --> 00:18:54,110
will see very similar to what has been

273
00:18:48,600 --> 00:18:57,419
done in 68 33 to secure the map register

274
00:18:54,110 --> 00:19:00,110
and in the third one there were a bunch

275
00:18:57,420 --> 00:19:02,970
of comments that were posted by made

276
00:19:00,110 --> 00:19:06,179
earlier this year very detailed and

277
00:19:02,970 --> 00:19:08,550
meant bukata he does always a great job

278
00:19:06,180 --> 00:19:09,660
of sending comments so I want to thank

279
00:19:08,550 --> 00:19:11,730
him for that and those are being

280
00:19:09,660 --> 00:19:16,680
addressed and I think he has a knowledge

281
00:19:11,730 --> 00:19:18,420
that they've been covered so just to go

282
00:19:16,680 --> 00:19:21,750
a little bit into the details of the

283
00:19:18,420 --> 00:19:25,050
changes that were done the main changes

284
00:19:21,750 --> 00:19:28,260
are in the authentication ECM

285
00:19:25,050 --> 00:19:34,080
authentication data and we will see that

286
00:19:28,260 --> 00:19:36,180
the first change we listed you know

287
00:19:34,080 --> 00:19:39,629
regard the introduction of these EBIT

288
00:19:36,180 --> 00:19:44,040
and then the other changes required we

289
00:19:39,630 --> 00:19:46,260
regard the change of the key ID and yo

290
00:19:44,040 --> 00:19:48,270
TK up ID as you see this is very similar

291
00:19:46,260 --> 00:19:50,970
to what Albert just described and we

292
00:19:48,270 --> 00:19:53,129
will look into it so for the secure

293
00:19:50,970 --> 00:19:56,670
downgrade what we did was basically

294
00:19:53,130 --> 00:20:00,360
specify how an ITR by using these et al

295
00:19:56,670 --> 00:20:04,280
can sign bit can specify that is willing

296
00:20:00,360 --> 00:20:09,899
to accept known sign map-reply

297
00:20:04,280 --> 00:20:12,330
from from the map server it has to be

298
00:20:09,900 --> 00:20:15,840
done carefully because you know

299
00:20:12,330 --> 00:20:17,340
attacker may take advantage if it's not

300
00:20:15,840 --> 00:20:18,449
done properly and I think we go to the

301
00:20:17,340 --> 00:20:23,090
point where you know this is well

302
00:20:18,450 --> 00:20:26,190
specified now and clear and it is secure

303
00:20:23,090 --> 00:20:29,159
and then the other change is equivalent

304
00:20:26,190 --> 00:20:32,280
to what Alberto just described rather

305
00:20:29,160 --> 00:20:35,010
than using the pre-shaped key to protect

306
00:20:32,280 --> 00:20:38,340
the transport of the one-time key we are

307
00:20:35,010 --> 00:20:41,460
doing the same key derivation operation

308
00:20:38,340 --> 00:20:45,330
to derive a per message key and we used

309
00:20:41,460 --> 00:20:47,100
that key this time to wrap the one-time

310
00:20:45,330 --> 00:20:48,750
key so we can securely transport the

311
00:20:47,100 --> 00:20:51,030
one-time key from the ITR to the

312
00:20:48,750 --> 00:20:57,060
map-resolver and from the map server to

313
00:20:51,030 --> 00:21:02,340
the 2-day idea yeah here are some

314
00:20:57,060 --> 00:21:06,330
details you will see that basically when

315
00:21:02,340 --> 00:21:09,030
we identify the creep sivapal going we

316
00:21:06,330 --> 00:21:10,740
don't identify only the wrapping

317
00:21:09,030 --> 00:21:12,510
algorithm that we used to wrap the

318
00:21:10,740 --> 00:21:14,610
actual key but also the key derivation

319
00:21:12,510 --> 00:21:17,040
function and this is very similar to

320
00:21:14,610 --> 00:21:18,780
what Albert just described for my

321
00:21:17,040 --> 00:21:21,899
producer even if the security function

322
00:21:18,780 --> 00:21:24,210
platform is different in that case it

323
00:21:21,900 --> 00:21:27,030
was generating a key to authenticate the

324
00:21:24,210 --> 00:21:30,270
map register and this key is used to

325
00:21:27,030 --> 00:21:33,830
transport the one-time key again this

326
00:21:30,270 --> 00:21:37,500
was discussed with Ben back in Prague

327
00:21:33,830 --> 00:21:40,679
there were also a comments from mad

328
00:21:37,500 --> 00:21:43,140
right after I posted the new version

329
00:21:40,680 --> 00:21:45,360
version 19 and I have incorporated those

330
00:21:43,140 --> 00:21:47,280
already I even published version 19

331
00:21:45,360 --> 00:21:49,530
because I was waiting for more comments

332
00:21:47,280 --> 00:21:51,320
to come maybe it makes sense to publish

333
00:21:49,530 --> 00:21:54,690
it at this point since they haven't

334
00:21:51,320 --> 00:21:57,389
arrived but thanks again to make book a

335
00:21:54,690 --> 00:22:01,320
therefore always the detail review that

336
00:21:57,390 --> 00:22:03,450
he posts and yeah and basically next

337
00:22:01,320 --> 00:22:07,649
step same consideration of what we did

338
00:22:03,450 --> 00:22:09,870
before to be honest I am not completely

339
00:22:07,650 --> 00:22:13,470
sure on the status of the leasetech

340
00:22:09,870 --> 00:22:15,929
Draft at this point because we basically

341
00:22:13,470 --> 00:22:20,340
were told by the reviewer that these the

342
00:22:15,930 --> 00:22:22,380
review of the B's RFC's should should go

343
00:22:20,340 --> 00:22:24,629
you know together with a review Allah

344
00:22:22,380 --> 00:22:25,650
SEC and we have got a bunch of comment

345
00:22:24,630 --> 00:22:28,440
we have incorporated

346
00:22:25,650 --> 00:22:30,660
that we received in Prague and we I

347
00:22:28,440 --> 00:22:33,780
think that the next step is getting a

348
00:22:30,660 --> 00:22:38,280
feedback back from from men and from the

349
00:22:33,780 --> 00:22:40,680
security Directorate and that's my

350
00:22:38,280 --> 00:22:44,899
understanding but yeah we need to figure

351
00:22:40,680 --> 00:22:47,460
out how what is actually the next step

352
00:22:44,900 --> 00:22:50,310
so if you check the data tracker he's

353
00:22:47,460 --> 00:22:52,740
the document engine is in the last call

354
00:22:50,310 --> 00:22:55,889
for two months because we are just

355
00:22:52,740 --> 00:23:02,130
normal but it's just because I as you

356
00:22:55,890 --> 00:23:05,940
said yeah review so yeah we should

357
00:23:02,130 --> 00:23:09,750
clarify you whether or not taking

358
00:23:05,940 --> 00:23:14,130
Mountain moving it forward if the the

359
00:23:09,750 --> 00:23:14,400
new person replies to man you know step

360
00:23:14,130 --> 00:23:16,260
it up

361
00:23:14,400 --> 00:23:19,620
yeah it's ever I think it's really good

362
00:23:16,260 --> 00:23:22,350
that this is looking stable and I would

363
00:23:19,620 --> 00:23:25,860
give it a heads up then when you say to

364
00:23:22,350 --> 00:23:27,570
Ben that you know reminding him because

365
00:23:25,860 --> 00:23:31,110
I found in the mail I think all of us

366
00:23:27,570 --> 00:23:32,669
want occasionally around that time just

367
00:23:31,110 --> 00:23:34,649
say that this one's stable now too

368
00:23:32,670 --> 00:23:37,500
because that's what he really wanted he

369
00:23:34,650 --> 00:23:39,240
wanted to he he was not sure the

370
00:23:37,500 --> 00:23:41,100
allocation of the different information

371
00:23:39,240 --> 00:23:43,110
right it should be in this document or

372
00:23:41,100 --> 00:23:46,409
the others so now you can have this

373
00:23:43,110 --> 00:23:48,719
document also to look to say that

374
00:23:46,410 --> 00:23:50,790
everything's good yeah in it as far as I

375
00:23:48,720 --> 00:23:52,620
remember he was looking for our complete

376
00:23:50,790 --> 00:23:56,879
security solution for the lisp and this

377
00:23:52,620 --> 00:24:01,229
was kinda missing piece yeah I will send

378
00:23:56,880 --> 00:24:02,730
him the heads-up early exactly that was

379
00:24:01,230 --> 00:24:04,160
my understanding again right that what

380
00:24:02,730 --> 00:24:06,840
they were really asking was to basically

381
00:24:04,160 --> 00:24:08,790
move forward this document together so

382
00:24:06,840 --> 00:24:11,179
that we have a overall view of lease

383
00:24:08,790 --> 00:24:14,060
that applying control plane and security

384
00:24:11,180 --> 00:24:21,290
okay cool

385
00:24:14,060 --> 00:24:21,290
any other questions okay thanks

386
00:24:36,789 --> 00:24:43,789
okay so now let's talk a bit about

387
00:24:40,419 --> 00:24:46,700
overlay so so these are love that the

388
00:24:43,789 --> 00:24:48,830
bitter submitted couple five years back

389
00:24:46,700 --> 00:24:50,299
I'm gonna give an update we haven't

390
00:24:48,830 --> 00:24:54,529
given the date since the last night

391
00:24:50,299 --> 00:24:57,019
Victor presented so I think this was in

392
00:24:54,529 --> 00:25:00,649
Bangkok like quite years ago that he but

393
00:24:57,019 --> 00:25:02,840
the draft here we got some comments from

394
00:25:00,649 --> 00:25:05,779
both it says and and a working group in

395
00:25:02,840 --> 00:25:08,720
general about what they were sent to to

396
00:25:05,779 --> 00:25:12,289
solve so we have revisited RAF we have

397
00:25:08,720 --> 00:25:13,700
added sometimes that clarify what's the

398
00:25:12,289 --> 00:25:16,429
focus on the under thousand in

399
00:25:13,700 --> 00:25:19,009
particular we we describe how this helps

400
00:25:16,429 --> 00:25:22,009
interoperability between different list

401
00:25:19,009 --> 00:25:24,830
overlays we will have done minor fixes

402
00:25:22,009 --> 00:25:26,419
through the text as well and the version

403
00:25:24,830 --> 00:25:29,809
zero one is first that it was actually

404
00:25:26,419 --> 00:25:31,629
posted last IDF but we would enter sent

405
00:25:29,809 --> 00:25:36,499
it back then so we are presenting it now

406
00:25:31,629 --> 00:25:38,899
so what is this overlay seen so the

407
00:25:36,499 --> 00:25:42,200
basic idea here is that and this is

408
00:25:38,899 --> 00:25:43,489
coming past different from operational

409
00:25:42,200 --> 00:25:47,299
and deployment experience that that we

410
00:25:43,490 --> 00:25:48,320
are gaining on only is right that in

411
00:25:47,299 --> 00:25:52,309
some cases you may want to have

412
00:25:48,320 --> 00:25:54,110
different Lisp overlays that use either

413
00:25:52,309 --> 00:25:56,899
different control planes or different

414
00:25:54,110 --> 00:26:00,258
encapsulations for a variety of reasons

415
00:25:56,899 --> 00:26:02,330
and you want to make them interoperate

416
00:26:00,259 --> 00:26:05,600
so the way to do that is but via what we

417
00:26:02,330 --> 00:26:08,210
call an overlay the desired name Delphi

418
00:26:05,600 --> 00:26:12,649
came up with and we find it really funny

419
00:26:08,210 --> 00:26:15,940
so we connect the different sides over

420
00:26:12,649 --> 00:26:19,248
lesbian on overlay and and then you have

421
00:26:15,940 --> 00:26:22,639
border XTS that connect the decide

422
00:26:19,249 --> 00:26:24,159
overlays with the good the early why is

423
00:26:22,639 --> 00:26:27,258
that as I was saying

424
00:26:24,159 --> 00:26:29,090
interoperability is one of the biggest

425
00:26:27,259 --> 00:26:31,610
reason for this control plane so you can

426
00:26:29,090 --> 00:26:35,270
have different mapping systems running

427
00:26:31,610 --> 00:26:36,770
in each of the overlays and then

428
00:26:35,270 --> 00:26:39,440
they can exchange my pins through there

429
00:26:36,770 --> 00:26:41,420
through the overlay nor so data plane

430
00:26:39,440 --> 00:26:42,740
that I think we didn't we were not clear

431
00:26:41,420 --> 00:26:45,680
the first thing we represented this on

432
00:26:42,740 --> 00:26:48,050
how important it is from the probability

433
00:26:45,680 --> 00:26:51,310
to have the flexibility to have differ

434
00:26:48,050 --> 00:26:54,379
and the doubling of relations different

435
00:26:51,310 --> 00:26:57,080
addresses from the underlay in order to

436
00:26:54,380 --> 00:27:01,610
to to to the pre-release in a physical

437
00:26:57,080 --> 00:27:03,710
manner so the destructor of this is that

438
00:27:01,610 --> 00:27:06,379
as our same multiple said overlay is

439
00:27:03,710 --> 00:27:09,680
connected through a common transitive

440
00:27:06,380 --> 00:27:11,540
early this allows different local spaces

441
00:27:09,680 --> 00:27:13,520
so think of for instance the the site

442
00:27:11,540 --> 00:27:16,220
overlay on on the Left may have private

443
00:27:13,520 --> 00:27:17,720
address in on the underlay and the scope

444
00:27:16,220 --> 00:27:21,800
of that popularising can be constrained

445
00:27:17,720 --> 00:27:24,020
within that site overlay also when when

446
00:27:21,800 --> 00:27:26,120
you have an overlay in the middle you

447
00:27:24,020 --> 00:27:31,310
will need to to be aware of their routes

448
00:27:26,120 --> 00:27:33,050
to to to reach the remote overlay so so

449
00:27:31,310 --> 00:27:35,600
the the amount of entries on the

450
00:27:33,050 --> 00:27:37,460
underlay is greatly reduced which is a

451
00:27:35,600 --> 00:27:40,490
good thing so you have electrodes on the

452
00:27:37,460 --> 00:27:41,870
underlay tool to deal with and you can

453
00:27:40,490 --> 00:27:45,920
have different others families of course

454
00:27:41,870 --> 00:27:48,949
and then fate is relation answerability

455
00:27:45,920 --> 00:27:50,630
so parts of the network may may die and

456
00:27:48,950 --> 00:27:55,700
the rest of race as if nothing happens

457
00:27:50,630 --> 00:27:59,420
so let me go so basically the overlay is

458
00:27:55,700 --> 00:28:01,400
an overlay it's specific purpose to

459
00:27:59,420 --> 00:28:05,290
connect glass correct

460
00:28:01,400 --> 00:28:08,390
so that is correct okay next question is

461
00:28:05,290 --> 00:28:10,879
can I have several overlays connecting

462
00:28:08,390 --> 00:28:15,080
different side overlays and these

463
00:28:10,880 --> 00:28:17,240
overlays can interconnect between them

464
00:28:15,080 --> 00:28:19,460
that is a that is an excellent question

465
00:28:17,240 --> 00:28:22,370
actually in the in the list of next

466
00:28:19,460 --> 00:28:26,300
steps so in the drive right now we

467
00:28:22,370 --> 00:28:29,239
consider a single overlay yeah we have

468
00:28:26,300 --> 00:28:32,870
we have discuss on what to do with

469
00:28:29,240 --> 00:28:36,890
multiple overlays that comes with a

470
00:28:32,870 --> 00:28:39,800
different set of requirements and

471
00:28:36,890 --> 00:28:41,210
assumptions that we need to to evaluate

472
00:28:39,800 --> 00:28:43,430
I mean theoretically yes

473
00:28:41,210 --> 00:28:46,690
we have not addressed yet that yet on

474
00:28:43,430 --> 00:28:48,789
the on the graph so that's one day on

475
00:28:46,690 --> 00:28:54,489
next step for us but that's a good

476
00:28:48,789 --> 00:28:56,710
question you know it turns out to have

477
00:28:54,489 --> 00:28:58,899
multiple Lube relays is less desirable

478
00:28:56,710 --> 00:29:01,059
than they have good multi-home

479
00:28:58,899 --> 00:29:04,869
connectivity on the underlay that the

480
00:29:01,059 --> 00:29:08,739
you girl a realizes because the you

481
00:29:04,869 --> 00:29:11,408
relay is just there to connect the edge

482
00:29:08,739 --> 00:29:13,629
points of the other overlays and nothing

483
00:29:11,409 --> 00:29:15,460
else and it's not clear that you need

484
00:29:13,629 --> 00:29:18,639
separate policy where you need a

485
00:29:15,460 --> 00:29:22,720
separate overlay overlay structure to

486
00:29:18,639 --> 00:29:26,039
interconnect so so that's why we first

487
00:29:22,720 --> 00:29:29,080
started off mazing we only needed one

488
00:29:26,039 --> 00:29:31,690
yeah I understand the data with the

489
00:29:29,080 --> 00:29:34,599
simple solution but my point is not that

490
00:29:31,690 --> 00:29:36,820
you need several overlays what can

491
00:29:34,599 --> 00:29:39,129
happen is it for whatever reason you

492
00:29:36,820 --> 00:29:41,109
have different overlay sites and they

493
00:29:39,129 --> 00:29:45,728
decide to interconnect and deployed at

494
00:29:41,109 --> 00:29:49,418
uber laser so me and you and Alberto and

495
00:29:45,729 --> 00:29:52,570
Fabio take we interconnect pairwise and

496
00:29:49,419 --> 00:29:56,080
we use different to balance now in the

497
00:29:52,570 --> 00:29:58,539
future we want all to interconnect we

498
00:29:56,080 --> 00:30:02,918
become big family okay now what you do

499
00:29:58,539 --> 00:30:05,979
you deploy a new unique overlay or you

500
00:30:02,919 --> 00:30:08,409
interconnect the race that's what you do

501
00:30:05,979 --> 00:30:13,119
is you interconnect the site overlays in

502
00:30:08,409 --> 00:30:15,549
another mapping system and oddly no I

503
00:30:13,119 --> 00:30:18,639
didn't say that I said you connect all

504
00:30:15,549 --> 00:30:20,739
the site overlays you take all their any

505
00:30:18,639 --> 00:30:22,539
IDs and you sent them to a new mapping

506
00:30:20,739 --> 00:30:25,599
system and it looks like a regular

507
00:30:22,539 --> 00:30:27,759
overlay rather than to iterate this

508
00:30:25,599 --> 00:30:29,229
pattern again so I think I think that

509
00:30:27,759 --> 00:30:31,330
really is question isn't correct me

510
00:30:29,229 --> 00:30:32,769
wrong right so you have two completely

511
00:30:31,330 --> 00:30:35,259
separate like the picture you have here

512
00:30:32,769 --> 00:30:37,840
but two different ones so you have two

513
00:30:35,259 --> 00:30:39,399
overlays connected here to here right

514
00:30:37,840 --> 00:30:40,809
and then at some point you want to bring

515
00:30:39,399 --> 00:30:42,998
the four different site over list

516
00:30:40,809 --> 00:30:44,979
together and I think that the answer is

517
00:30:42,999 --> 00:30:47,169
with the deficit is now what you will

518
00:30:44,979 --> 00:30:48,970
have is the two overlays that used to be

519
00:30:47,169 --> 00:30:50,499
completely independent each other you

520
00:30:48,970 --> 00:30:52,720
will aggregate so you will end up with a

521
00:30:50,499 --> 00:30:58,479
single overlay that connects the four

522
00:30:52,720 --> 00:30:59,530
site overlays right correct in other

523
00:30:58,479 --> 00:31:01,060
words you merge the two

524
00:30:59,530 --> 00:31:04,120
Lay's but that's what I wasn't

525
00:31:01,060 --> 00:31:06,639
suggesting I was suggesting it's just

526
00:31:04,120 --> 00:31:09,459
one overlay yeah

527
00:31:06,640 --> 00:31:11,110
because because the e IDs that are

528
00:31:09,460 --> 00:31:13,150
connecting this relate to their own

529
00:31:11,110 --> 00:31:15,370
local mapping system could register to a

530
00:31:13,150 --> 00:31:17,860
mapping system that's global and it just

531
00:31:15,370 --> 00:31:19,260
looks like a regular list overlay as we

532
00:31:17,860 --> 00:31:21,969
know it today

533
00:31:19,260 --> 00:31:24,840
you kill at least one of the ruble ace

534
00:31:21,970 --> 00:31:27,550
and you keep the other one a little bit

535
00:31:24,840 --> 00:31:30,280
because you still need anyway for the

536
00:31:27,550 --> 00:31:33,399
original everything I mean is something

537
00:31:30,280 --> 00:31:35,950
that must be discussed in I think that

538
00:31:33,400 --> 00:31:38,020
whatever solution on the NDA yeah no no

539
00:31:35,950 --> 00:31:39,850
I agree that we are not addressing yet

540
00:31:38,020 --> 00:31:41,500
the decimator what you have multiple

541
00:31:39,850 --> 00:31:42,939
overlays I think that we're kind of

542
00:31:41,500 --> 00:31:52,060
saying the same thing here but if not

543
00:31:42,940 --> 00:31:54,580
clear so yeah if we need to from a

544
00:31:52,060 --> 00:31:57,010
practical standpoint this is coming out

545
00:31:54,580 --> 00:32:01,439
of the International Civil Aviation

546
00:31:57,010 --> 00:32:04,990
Organization did by the way as the site

547
00:32:01,440 --> 00:32:08,440
and in that case you know what I think

548
00:32:04,990 --> 00:32:10,330
will determine what you do is how mystic

549
00:32:08,440 --> 00:32:13,090
domains are related right

550
00:32:10,330 --> 00:32:14,740
in that particular case for example the

551
00:32:13,090 --> 00:32:16,449
requirement is that there are some

552
00:32:14,740 --> 00:32:17,890
enlisted domain that they will not

553
00:32:16,450 --> 00:32:20,620
become the same because maybe there

554
00:32:17,890 --> 00:32:21,970
before provider so we distract the first

555
00:32:20,620 --> 00:32:24,040
level of trying to put them together

556
00:32:21,970 --> 00:32:26,830
with a new ballet is exactly trying to

557
00:32:24,040 --> 00:32:29,139
get everybody talked to and depending on

558
00:32:26,830 --> 00:32:31,120
how your mr. domains have you can go to

559
00:32:29,140 --> 00:32:33,460
a single overlay you can go to you know

560
00:32:31,120 --> 00:32:35,320
a single who ballet or maybe to the

561
00:32:33,460 --> 00:32:38,560
multiple pizza I think the draft we left

562
00:32:35,320 --> 00:32:41,290
with us at the very end I don't know

563
00:32:38,560 --> 00:32:45,220
issue don't want touch these specific

564
00:32:41,290 --> 00:32:48,970
points just stated the shadows over each

565
00:32:45,220 --> 00:32:54,160
case where blah blah blah blah we do not

566
00:32:48,970 --> 00:32:56,280
consider in this document something we

567
00:32:54,160 --> 00:32:59,430
need to say something one way or another

568
00:32:56,280 --> 00:33:02,800
agree it does good feedback thank you

569
00:32:59,430 --> 00:33:04,600
okay so since it has been a long time

570
00:33:02,800 --> 00:33:09,210
since this I'm gonna will go quickly

571
00:33:04,600 --> 00:33:11,500
over how the overlays work right so

572
00:33:09,210 --> 00:33:12,820
control plane I mean this is kind of a

573
00:33:11,500 --> 00:33:14,050
step forward for you

574
00:33:12,820 --> 00:33:16,360
I've been looking at before well you

575
00:33:14,050 --> 00:33:19,149
will see this yeah so the idea is that

576
00:33:16,360 --> 00:33:21,610
each site overlay has its own mapping

577
00:33:19,150 --> 00:33:24,160
system and then you have the borders

578
00:33:21,610 --> 00:33:26,020
that subscribe to everything into that

579
00:33:24,160 --> 00:33:27,940
mapping in the mapping system in the

580
00:33:26,020 --> 00:33:29,740
local mapping system so take for example

581
00:33:27,940 --> 00:33:31,780
the borders from day on the top of the

582
00:33:29,740 --> 00:33:34,960
picture those guys are gonna subscribe

583
00:33:31,780 --> 00:33:37,660
to 0/0 on the on the mapping system on

584
00:33:34,960 --> 00:33:39,520
the on the top so they're gonna get all

585
00:33:37,660 --> 00:33:41,950
the mappings but they are gonna do then

586
00:33:39,520 --> 00:33:43,960
is they are gonna potentially aggregate

587
00:33:41,950 --> 00:33:47,490
those mappings and register the map ends

588
00:33:43,960 --> 00:33:51,280
into the into the and the overlay so

589
00:33:47,490 --> 00:33:54,490
then with that what happens is that

590
00:33:51,280 --> 00:33:57,399
within the same site overlay the mapping

591
00:33:54,490 --> 00:33:59,920
resolution happens a syllable in in any

592
00:33:57,400 --> 00:34:01,690
list pay overlay for communication

593
00:33:59,920 --> 00:34:03,850
across different site overlaid what

594
00:34:01,690 --> 00:34:07,720
happens is that the the the exertion

595
00:34:03,850 --> 00:34:09,750
aside try to resolve the the mapping is

596
00:34:07,720 --> 00:34:13,090
not local is not registered into the

597
00:34:09,750 --> 00:34:15,159
into the local site so they go to the

598
00:34:13,090 --> 00:34:17,020
border and the border he's able to query

599
00:34:15,159 --> 00:34:19,690
the new map insist on the overlay and

600
00:34:17,020 --> 00:34:23,949
find which site overlay has that map in

601
00:34:19,690 --> 00:34:27,040
and and send the traffic there yeah this

602
00:34:23,949 --> 00:34:32,560
is the flow with the deplane as I was

603
00:34:27,040 --> 00:34:34,870
saying right so so any any hidden day on

604
00:34:32,560 --> 00:34:36,759
the Cedars last year so if there is if

605
00:34:34,870 --> 00:34:38,319
there is a a mapping mission in the site

606
00:34:36,760 --> 00:34:40,540
overlay you're gonna send the traffic to

607
00:34:38,320 --> 00:34:44,140
to the border from the front awarded

608
00:34:40,540 --> 00:34:48,000
through the over overlay to remote

609
00:34:44,139 --> 00:34:51,370
border and then to the destination xtr

610
00:34:48,000 --> 00:34:55,300
so next steps and and I think we already

611
00:34:51,370 --> 00:34:56,560
have this discussion right now first we

612
00:34:55,300 --> 00:34:57,940
want to have some discussion this Monday

613
00:34:56,560 --> 00:35:00,340
on the mailing me so after the meeting

614
00:34:57,940 --> 00:35:04,420
Wilson I made the middle is asking for

615
00:35:00,340 --> 00:35:05,830
discussion then we would like to check

616
00:35:04,420 --> 00:35:08,260
with with you guys and with the chess

617
00:35:05,830 --> 00:35:11,080
team do you think that this is a topic

618
00:35:08,260 --> 00:35:13,240
that the working groups will take so we

619
00:35:11,080 --> 00:35:15,430
are not saying that the the draft is

620
00:35:13,240 --> 00:35:17,759
final on his car and foreigners as we

621
00:35:15,430 --> 00:35:19,950
point out we we need maybe to others day

622
00:35:17,760 --> 00:35:22,930
the challenges have multiple overlays

623
00:35:19,950 --> 00:35:24,669
will we would like to know if the

624
00:35:22,930 --> 00:35:25,868
working groups will take upon this draft

625
00:35:24,670 --> 00:35:30,069
and make it a work

626
00:35:25,869 --> 00:35:31,930
group item um and yeah with the the

627
00:35:30,069 --> 00:35:33,730
questions that you have get in there at

628
00:35:31,930 --> 00:35:37,359
the bottom is precisely especially we

629
00:35:33,730 --> 00:35:39,249
were discussing so how do you play with

630
00:35:37,359 --> 00:35:40,930
the with the overlays in terms of which

631
00:35:39,249 --> 00:35:43,058
mapping system you want to use that and

632
00:35:40,930 --> 00:35:44,589
you want to have multiple overlays which

633
00:35:43,059 --> 00:35:47,859
are different ways you can use to reduce

634
00:35:44,589 --> 00:35:49,509
the state on the overlay so these are

635
00:35:47,859 --> 00:35:51,670
the questions that we have from the

636
00:35:49,509 --> 00:35:55,390
table or another we will like to discuss

637
00:35:51,670 --> 00:35:59,230
and address in in further edition of the

638
00:35:55,390 --> 00:36:00,368
draft so that's that's why we we want to

639
00:35:59,230 --> 00:36:06,190
to get some feedback from the working

640
00:36:00,369 --> 00:36:09,519
group on this so that's what I have to

641
00:36:06,190 --> 00:36:12,999
clarify and what do you mean by improve

642
00:36:09,519 --> 00:36:15,249
state the reduction so for instance

643
00:36:12,999 --> 00:36:17,879
think that you have multiple ways to

644
00:36:15,249 --> 00:36:20,980
register the let me go one step back

645
00:36:17,880 --> 00:36:23,529
these guys kept the borders they need to

646
00:36:20,980 --> 00:36:26,859
register the mappings from the local

647
00:36:23,529 --> 00:36:28,329
site overlays into the overlay and you

648
00:36:26,859 --> 00:36:30,308
can take different approaches for that

649
00:36:28,329 --> 00:36:34,119
so you can register the mappings as you

650
00:36:30,309 --> 00:36:36,910
get them from the local site or you can

651
00:36:34,119 --> 00:36:38,759
try to aggregate as much as possible but

652
00:36:36,910 --> 00:36:41,348
then the the bottom is they said how to

653
00:36:38,759 --> 00:36:43,059
aggregate doors and then if there are if

654
00:36:41,349 --> 00:36:46,150
there are gaps you need to register the

655
00:36:43,059 --> 00:36:48,970
gaps and so on so we need to discuss how

656
00:36:46,150 --> 00:36:50,319
which is the best way to to reduce the

657
00:36:48,970 --> 00:37:00,459
statement you need to release it into

658
00:36:50,319 --> 00:37:02,499
the into the overlay okay so I'm

659
00:37:00,460 --> 00:37:05,529
thinking me because if we did a very

660
00:37:02,499 --> 00:37:08,098
good job when we have a massive scalable

661
00:37:05,529 --> 00:37:13,359
mapping system you don't need this oh

662
00:37:08,099 --> 00:37:14,380
you're talking about the overlay so so

663
00:37:13,359 --> 00:37:17,200
that's that's fine

664
00:37:14,380 --> 00:37:27,039
I mean if we say for in okay the the

665
00:37:17,200 --> 00:37:29,109
overlay is gonna run at the planetary

666
00:37:27,039 --> 00:37:31,749
scale but there may be two organizations

667
00:37:29,109 --> 00:37:33,430
don't want to use the same or yeah or

668
00:37:31,749 --> 00:37:36,629
let me put it this way right so we can

669
00:37:33,430 --> 00:37:37,830
say or can say

670
00:37:36,630 --> 00:37:38,940
if you don't want to aggregate anything

671
00:37:37,830 --> 00:37:40,290
that you're gonna really stir them up in

672
00:37:38,940 --> 00:37:41,700
sauce you get them then you need them up

673
00:37:40,290 --> 00:37:43,410
in system that is able to scale to a

674
00:37:41,700 --> 00:37:45,540
global scale so that's the kind of

675
00:37:43,410 --> 00:37:48,060
considerations that we need to think of

676
00:37:45,540 --> 00:37:51,930
you know can you clarify to me know what

677
00:37:48,060 --> 00:37:57,779
what is the difference between federated

678
00:37:51,930 --> 00:38:03,930
and decentralized what you want to come

679
00:37:57,780 --> 00:38:06,210
in before that dinner sorry okay I was

680
00:38:03,930 --> 00:38:09,299
gonna give you an example and oh it's

681
00:38:06,210 --> 00:38:11,700
better than a deduction uh yeah okay

682
00:38:09,300 --> 00:38:13,590
let's finish the deduction in this case

683
00:38:11,700 --> 00:38:15,390
well the analogy I was going to get us

684
00:38:13,590 --> 00:38:18,240
look if you have a single bgp process

685
00:38:15,390 --> 00:38:20,879
that's running with multiple VPNs you

686
00:38:18,240 --> 00:38:22,620
can keep the VPNs separate but they're

687
00:38:20,880 --> 00:38:25,290
shared by one process and one routing

688
00:38:22,620 --> 00:38:27,120
protocol but if you ran two bgp routing

689
00:38:25,290 --> 00:38:28,650
process that are completely separate it

690
00:38:27,120 --> 00:38:30,540
may have a different period topology

691
00:38:28,650 --> 00:38:36,510
altogether that would be the same as

692
00:38:30,540 --> 00:38:38,759
using you realize okay so yeah the

693
00:38:36,510 --> 00:38:42,030
centralized so this is partially coming

694
00:38:38,760 --> 00:38:43,260
from from the discussion the the victor

695
00:38:42,030 --> 00:38:47,580
of how we are having with the iCloud

696
00:38:43,260 --> 00:38:50,310
guys right so in the India case and this

697
00:38:47,580 --> 00:38:53,720
is that is not final yet but the latest

698
00:38:50,310 --> 00:38:56,430
discussion is about how they can deploy

699
00:38:53,720 --> 00:38:59,730
it's it's organization deploying its own

700
00:38:56,430 --> 00:39:02,430
site Overland and then the overlay is

701
00:38:59,730 --> 00:39:05,010
federated so an organization has control

702
00:39:02,430 --> 00:39:08,069
over the over the overlay right so they

703
00:39:05,010 --> 00:39:10,140
were it's not clear yet how that's gonna

704
00:39:08,070 --> 00:39:12,450
end up looking like but they were

705
00:39:10,140 --> 00:39:15,120
discussing for instance okay each of us

706
00:39:12,450 --> 00:39:17,609
it takes I'm up server in the in the

707
00:39:15,120 --> 00:39:20,520
overlay and then we we fed the rate so

708
00:39:17,610 --> 00:39:22,050
there is no single initiative domain for

709
00:39:20,520 --> 00:39:24,750
the overlay so those are the kind of

710
00:39:22,050 --> 00:39:29,550
discussions the that we would like to do

711
00:39:24,750 --> 00:39:32,370
have infidelity seems okay so all these

712
00:39:29,550 --> 00:39:37,890
open questions that's why we we put them

713
00:39:32,370 --> 00:39:41,670
in existence so my personal feeling is

714
00:39:37,890 --> 00:39:44,549
that there is some work to do on this

715
00:39:41,670 --> 00:39:46,380
document still what to do on surfacing

716
00:39:44,550 --> 00:39:47,730
this an early document and what we need

717
00:39:46,380 --> 00:39:50,250
this much discussion on the mailing list

718
00:39:47,730 --> 00:39:53,070
if we want to go for the

719
00:39:50,250 --> 00:39:56,580
Plus that's fine that's fine I mean if

720
00:39:53,070 --> 00:39:58,890
we discuss to solve all this what not

721
00:39:56,580 --> 00:40:01,259
issues you define what is let's say

722
00:39:58,890 --> 00:40:03,810
missing then I think we discuss this on

723
00:40:01,260 --> 00:40:13,050
the menu list maybe let me put it this

724
00:40:03,810 --> 00:40:14,279
way okay yeah that's fine yeah yeah so

725
00:40:13,050 --> 00:40:16,290
that's why the first thing here is

726
00:40:14,280 --> 00:40:17,990
discussing on the mailing list and I

727
00:40:16,290 --> 00:40:20,880
think that you're saying that the Ennis

728
00:40:17,990 --> 00:40:22,140
we need to agree though on the scope of

729
00:40:20,880 --> 00:40:24,000
this drive like what the graph is gonna

730
00:40:22,140 --> 00:40:25,589
address but I was gonna cover and then

731
00:40:24,000 --> 00:40:28,290
state clearly what the RUF is not

732
00:40:25,590 --> 00:40:31,200
address in your quadrant right yeah so

733
00:40:28,290 --> 00:40:34,590
that's that's roughly fine yeah yeah

734
00:40:31,200 --> 00:40:37,009
that's all good feedback otherwise I

735
00:40:34,590 --> 00:40:41,130
don't think there is any specific issue

736
00:40:37,010 --> 00:40:48,260
in should be covered under the method

737
00:40:41,130 --> 00:40:48,260
that we have okay any any other question

738
00:40:49,100 --> 00:40:52,910
okay thank you

739
00:40:53,300 --> 00:41:32,820
Dino you're gonna use your own okay hi

740
00:41:31,470 --> 00:41:35,069
my name is Dino and I'm gonna talk about

741
00:41:32,820 --> 00:41:36,990
this traceroute tool this is just

742
00:41:35,070 --> 00:41:38,480
something I was working on to debug

743
00:41:36,990 --> 00:41:40,709
lists and that works a little bit better

744
00:41:38,480 --> 00:41:42,420
it's real it's pretty short

745
00:41:40,710 --> 00:41:44,730
I'm just gonna explain what we're trying

746
00:41:42,420 --> 00:41:48,360
to solve here what's secret which we

747
00:41:44,730 --> 00:41:49,980
should I look so basically what I wanted

748
00:41:48,360 --> 00:41:52,590
to try to accomplish his trace the

749
00:41:49,980 --> 00:41:56,280
encapsulation path the round-trip path

750
00:41:52,590 --> 00:42:00,450
from an ITR to an e TR or from an r TR

751
00:41:56,280 --> 00:42:02,880
to an e TR or RT r to r TR or depending

752
00:42:00,450 --> 00:42:03,960
on the number of things so basically at

753
00:42:02,880 --> 00:42:05,970
a client

754
00:42:03,960 --> 00:42:08,100
that's running that's running as an

755
00:42:05,970 --> 00:42:10,680
encapsulator you would launch this list

756
00:42:08,100 --> 00:42:12,509
traceroute tool and what I would show

757
00:42:10,680 --> 00:42:18,930
you is the underlying hops between the

758
00:42:12,510 --> 00:42:21,780
XPC NER so it show you the the underlay

759
00:42:18,930 --> 00:42:24,540
hops and as well as the RT T's between

760
00:42:21,780 --> 00:42:27,990
the two list points and it would work

761
00:42:24,540 --> 00:42:30,690
through Nats with our TRS in the path as

762
00:42:27,990 --> 00:42:33,930
well and so we would work in this

763
00:42:30,690 --> 00:42:36,600
scenario here where that if the IT

764
00:42:33,930 --> 00:42:38,490
arnicare were other sides of the mat it

765
00:42:36,600 --> 00:42:41,310
would have to go through an RTR so it

766
00:42:38,490 --> 00:42:45,149
would show the path from ITR to RTR DTR

767
00:42:41,310 --> 00:42:47,790
or through multiple our TRS and of

768
00:42:45,150 --> 00:42:52,140
course it works for an ipv4 ipv6 overlay

769
00:42:47,790 --> 00:42:54,840
when an ipv6 and ipv4 underlays is there

770
00:42:52,140 --> 00:42:56,520
as well so the command line it's a

771
00:42:54,840 --> 00:43:00,000
Python program it's pretty simple you

772
00:42:56,520 --> 00:43:02,130
can specify the LTR command with an

773
00:43:00,000 --> 00:43:03,540
optional source address if you don't

774
00:43:02,130 --> 00:43:06,900
supply a source address it picks a

775
00:43:03,540 --> 00:43:08,430
source C I D from a configuration file

776
00:43:06,900 --> 00:43:10,890
that in the lispers done that

777
00:43:08,430 --> 00:43:15,180
implementation the destination could be

778
00:43:10,890 --> 00:43:17,520
an e ID or a dns name the destination

779
00:43:15,180 --> 00:43:19,890
address can be an address or a dns name

780
00:43:17,520 --> 00:43:23,340
of an e ID or a non e ID

781
00:43:19,890 --> 00:43:25,920
so from an ITR if you wanted to list

782
00:43:23,340 --> 00:43:30,450
trace route 2ww cnn.com

783
00:43:25,920 --> 00:43:33,180
you should be able to do that this is

784
00:43:30,450 --> 00:43:35,399
what the output would look like this is

785
00:43:33,180 --> 00:43:37,580
basically showing a path where the map

786
00:43:35,400 --> 00:43:42,180
caches are populated in all the Lisp

787
00:43:37,580 --> 00:43:43,529
routers so it would show you example and

788
00:43:42,180 --> 00:43:45,450
then I put the names out here so it's

789
00:43:43,530 --> 00:43:47,850
basically caps later

790
00:43:45,450 --> 00:43:50,879
the capsule later the time it happened

791
00:43:47,850 --> 00:43:52,410
in the name of the encapsulator so the

792
00:43:50,880 --> 00:43:55,650
rest of the presentation just describes

793
00:43:52,410 --> 00:43:58,140
the fields this is an example where

794
00:43:55,650 --> 00:44:02,400
there's a map cache miss so let's say

795
00:43:58,140 --> 00:44:10,080
the the ITR is wants to where basically

796
00:44:02,400 --> 00:44:13,230
Lisp trace 1.1.1

797
00:44:10,080 --> 00:44:17,100
so his source our load with port number

798
00:44:13,230 --> 00:44:17,580
is there and it goes to the RTR in the

799
00:44:17,100 --> 00:44:19,560
RTR

800
00:44:17,580 --> 00:44:21,779
capsulate sit and then once the ria

801
00:44:19,560 --> 00:44:24,090
capsulated but it turns out it doesn't

802
00:44:21,780 --> 00:44:26,970
have to dot 2.2 minutes map-cache so it

803
00:44:24,090 --> 00:44:32,970
reports back to the source that there's

804
00:44:26,970 --> 00:44:36,270
a map cache miss go ahead Albert I guess

805
00:44:32,970 --> 00:44:39,149
that you infer that there is a map catch

806
00:44:36,270 --> 00:44:41,460
nice because you send a packet with a

807
00:44:39,150 --> 00:44:44,520
larger TTL and you don't see any next

808
00:44:41,460 --> 00:44:46,320
hope or know that this has nothing to do

809
00:44:44,520 --> 00:44:48,680
with the original trace rod so doesn't

810
00:44:46,320 --> 00:44:51,420
use TTL mechanisms at all

811
00:44:48,680 --> 00:44:53,819
yeah I'll explain that was like that was

812
00:44:51,420 --> 00:44:57,000
Luigi's question he wanted to know how

813
00:44:53,820 --> 00:44:58,710
not what but and since I since it's not

814
00:44:57,000 --> 00:45:00,930
written up in a draft there's their

815
00:44:58,710 --> 00:45:03,300
source that you can look at so anyways

816
00:45:00,930 --> 00:45:04,500
let me describe so I guess I should have

817
00:45:03,300 --> 00:45:06,450
said the beginning of presentation this

818
00:45:04,500 --> 00:45:08,850
is a presentation of the functionality

819
00:45:06,450 --> 00:45:10,200
of LTR not how it does it but I'd be

820
00:45:08,850 --> 00:45:13,680
willing to answer her questions of

821
00:45:10,200 --> 00:45:17,100
course okay this is an example where

822
00:45:13,680 --> 00:45:19,470
you're tracing a Nani ID and so what

823
00:45:17,100 --> 00:45:21,990
happens is is that the trace has to stop

824
00:45:19,470 --> 00:45:24,390
because there's no ETR this is the last

825
00:45:21,990 --> 00:45:26,790
point along the way so you're able to

826
00:45:24,390 --> 00:45:29,279
get to one point in the RTR said this is

827
00:45:26,790 --> 00:45:32,790
an ani ID so it's trace routing the

828
00:45:29,280 --> 00:45:37,020
Google DNS server so just to show you

829
00:45:32,790 --> 00:45:39,570
some details is that the program is able

830
00:45:37,020 --> 00:45:42,300
to detect that it's behind a NAT so what

831
00:45:39,570 --> 00:45:43,740
it does is it finds that since it's

832
00:45:42,300 --> 00:45:48,120
behind the net it knows it has to

833
00:45:43,740 --> 00:45:50,040
encapsulate to an RTR and so that's what

834
00:45:48,120 --> 00:45:52,290
it's it's doing at this at this point

835
00:45:50,040 --> 00:45:56,190
the next line of output just says

836
00:45:52,290 --> 00:46:01,320
ascending a roundtrip trace message from

837
00:45:56,190 --> 00:46:04,920
itself to an eID

838
00:46:01,320 --> 00:46:10,710
that is registered in a an iid instance

839
00:46:04,920 --> 00:46:12,840
ID 1539 okay and then a reply came back

840
00:46:10,710 --> 00:46:15,510
which means the packet went to all these

841
00:46:12,840 --> 00:46:17,160
hops went to the et are in the et are

842
00:46:15,510 --> 00:46:21,570
turned the packet around and that was

843
00:46:17,160 --> 00:46:25,649
done in 154 milliseconds this was the

844
00:46:21,570 --> 00:46:27,240
path from the IPRC ID to the destination

845
00:46:25,650 --> 00:46:29,670
and this is where it was turned around

846
00:46:27,240 --> 00:46:30,930
so you see the both the asymmetric paths

847
00:46:29,670 --> 00:46:32,819
now this is pretty in

848
00:46:30,930 --> 00:46:35,220
sting because you can see if the

849
00:46:32,819 --> 00:46:37,410
encapsulation path takes the same or an

850
00:46:35,220 --> 00:46:39,209
asymmetric path remember if you're going

851
00:46:37,410 --> 00:46:41,940
if you're returning the packet back to

852
00:46:39,210 --> 00:46:44,190
1.1.1 it may not go through the same RTR

853
00:46:41,940 --> 00:46:47,130
because the pads are unidirectional in

854
00:46:44,190 --> 00:46:50,790
this case the encapsulation paths are

855
00:46:47,130 --> 00:46:59,069
symmetric the underlying pass you never

856
00:46:50,790 --> 00:47:00,960
know but you can find ok this now what's

857
00:46:59,069 --> 00:47:03,740
interesting about the ITR doing the

858
00:47:00,960 --> 00:47:06,930
encapsulation it's saying that the

859
00:47:03,740 --> 00:47:08,959
source address of 10.24 T from this

860
00:47:06,930 --> 00:47:11,549
that's really interesting information

861
00:47:08,960 --> 00:47:13,650
because that's his local private address

862
00:47:11,550 --> 00:47:21,990
because the ITR sitting behind in that

863
00:47:13,650 --> 00:47:24,359
and what he's doing now in the notice

864
00:47:21,990 --> 00:47:26,609
that the source address is not the tenth

865
00:47:24,359 --> 00:47:29,098
address it's the 104 address because the

866
00:47:26,609 --> 00:47:32,460
NAT translated it and notice that the

867
00:47:29,099 --> 00:47:34,680
packet was addressed to 10.24 T because

868
00:47:32,460 --> 00:47:37,530
the RTR was it which was in Google Cloud

869
00:47:34,680 --> 00:47:38,669
was also behind a NAT this is really

870
00:47:37,530 --> 00:47:41,160
important information when you're

871
00:47:38,670 --> 00:47:43,260
debugging so now when the RTI wants to

872
00:47:41,160 --> 00:47:45,720
encapsulate going to the ETI of course

873
00:47:43,260 --> 00:47:49,619
you see his global address and now he's

874
00:47:45,720 --> 00:47:53,339
using 35 to to 144 92 which is the

875
00:47:49,619 --> 00:47:56,880
translated address of the ETR the port

876
00:47:53,339 --> 00:47:59,369
and when the ETR gets in he gets on the

877
00:47:56,880 --> 00:48:01,619
address or that's the address of the RTO

878
00:47:59,369 --> 00:48:03,569
source and that's his own address which

879
00:48:01,619 --> 00:48:06,150
is also translated so we're doubling

880
00:48:03,569 --> 00:48:09,770
adding like crazy through this path but

881
00:48:06,150 --> 00:48:09,770
we need to find out what these paths are

882
00:48:10,069 --> 00:48:16,290
what's also reported from the ITRs point

883
00:48:13,619 --> 00:48:18,900
of view is what his recent arty teaser

884
00:48:16,290 --> 00:48:21,329
so the RTR is sending our local probes

885
00:48:18,900 --> 00:48:23,579
to all as our looks and this here is

886
00:48:21,329 --> 00:48:25,170
keeping the last three round-trip times

887
00:48:23,579 --> 00:48:28,319
so you can see that there was some

888
00:48:25,170 --> 00:48:30,480
variability here 141 milliseconds in 55

889
00:48:28,319 --> 00:48:33,119
milliseconds since 75 milliseconds and

890
00:48:30,480 --> 00:48:35,880
in my implementation I know the number

891
00:48:33,119 --> 00:48:38,760
of hops so the number of forward hops

892
00:48:35,880 --> 00:48:40,920
from the ITR to the RTR is 5 and the

893
00:48:38,760 --> 00:48:43,140
number of reverse hops coming back would

894
00:48:40,920 --> 00:48:44,369
be 6 so that's useful to know what the

895
00:48:43,140 --> 00:48:49,799
diameter of your tunnel

896
00:48:44,369 --> 00:48:52,739
is okay and then these these are just

897
00:48:49,799 --> 00:48:54,450
Linux timestamps that are using UTC time

898
00:48:52,739 --> 00:48:56,130
so either they're synchronized because

899
00:48:54,450 --> 00:48:59,098
they're as long as they're configured

900
00:48:56,130 --> 00:49:00,960
correctly and there's some oxygenation

901
00:48:59,099 --> 00:49:03,239
protocol running you can actually look

902
00:49:00,960 --> 00:49:06,900
at one wavelength so you can see that

903
00:49:03,239 --> 00:49:10,410
this packet went from 170 369 that 85 to

904
00:49:06,900 --> 00:49:12,539
170 3.87 so you saw that took 20

905
00:49:10,410 --> 00:49:14,460
milliseconds for the packet to go in one

906
00:49:12,539 --> 00:49:14,910
direction so you get one-way delaying as

907
00:49:14,460 --> 00:49:19,829
well

908
00:49:14,910 --> 00:49:23,249
pretty useful this is saying we turn

909
00:49:19,829 --> 00:49:26,390
around the packets and then that was the

910
00:49:23,249 --> 00:49:28,709
reverse path that's pretty much it so

911
00:49:26,390 --> 00:49:31,200
this is where the code is so you can go

912
00:49:28,710 --> 00:49:34,829
look and see how it works the way it

913
00:49:31,200 --> 00:49:37,950
works in a high level is it's part of

914
00:49:34,829 --> 00:49:40,529
the encapsulation path and I implemented

915
00:49:37,950 --> 00:49:42,930
it I added a new message called a trace

916
00:49:40,529 --> 00:49:46,559
message and what it does is that when

917
00:49:42,930 --> 00:49:49,169
they when a trace message comes it's

918
00:49:46,559 --> 00:49:51,539
actually processed and you put JSON of

919
00:49:49,170 --> 00:49:53,910
information in here and in this case

920
00:49:51,539 --> 00:49:55,499
right here the JSON that's being put in

921
00:49:53,910 --> 00:49:58,140
this trace packet these aren't data

922
00:49:55,499 --> 00:50:00,209
packets these are control packets the

923
00:49:58,140 --> 00:50:02,368
JSON for this entire round trip was

924
00:50:00,210 --> 00:50:04,650
about 800 bytes which is kind of large

925
00:50:02,369 --> 00:50:07,259
but death that could be optimized as

926
00:50:04,650 --> 00:50:10,499
well I did JSON because it was easier to

927
00:50:07,259 --> 00:50:12,299
debug reading it on a sniffer trace so

928
00:50:10,499 --> 00:50:16,319
the idea is there's a trace that starts

929
00:50:12,299 --> 00:50:17,700
off and the ITR that basically the

930
00:50:16,319 --> 00:50:19,950
information that gets out of its map

931
00:50:17,700 --> 00:50:21,930
cache it puts it in JSON and puts it in

932
00:50:19,950 --> 00:50:25,288
that packet and that encapsulates that

933
00:50:21,930 --> 00:50:26,848
to the RTR the RTR gets this packet D

934
00:50:25,289 --> 00:50:28,890
capsulate s-- it sees it's a trace

935
00:50:26,849 --> 00:50:31,109
message and takes the D capsulation

936
00:50:28,890 --> 00:50:33,328
information puts it in the trace message

937
00:50:31,109 --> 00:50:35,219
it appends it and then now it's ready to

938
00:50:33,329 --> 00:50:38,009
encapsulate it it puts the encapsulation

939
00:50:35,219 --> 00:50:40,650
information in that trace message and

940
00:50:38,009 --> 00:50:43,229
then encapsulate that and sends it on so

941
00:50:40,650 --> 00:50:46,619
that's basically how it works it's not

942
00:50:43,229 --> 00:50:49,109
it's so it's exactly one message that's

943
00:50:46,619 --> 00:50:51,719
going out that's one message that's

944
00:50:49,109 --> 00:50:53,369
being sent from here that goes to each

945
00:50:51,719 --> 00:50:55,499
of these hops and being returned so it's

946
00:50:53,369 --> 00:50:57,539
really not a lot of overhead on the

947
00:50:55,499 --> 00:50:58,580
network so I wanted to trade off the

948
00:50:57,539 --> 00:51:00,890
size of the

949
00:50:58,580 --> 00:51:03,140
with the number of packets being sent so

950
00:51:00,890 --> 00:51:06,109
yes if the one packet gets lost

951
00:51:03,140 --> 00:51:08,000
you'd have to or we could put command

952
00:51:06,110 --> 00:51:18,080
line parameters to put multiple probes

953
00:51:08,000 --> 00:51:19,670
if you wanted to questions yeah this is

954
00:51:18,080 --> 00:51:23,690
not very do you have any plans to

955
00:51:19,670 --> 00:51:25,370
specify protocol deliver that you need

956
00:51:23,690 --> 00:51:26,900
in order to implement that because I

957
00:51:25,370 --> 00:51:30,259
understand that this doesn't work with a

958
00:51:26,900 --> 00:51:32,960
standard least idea yeah right it would

959
00:51:30,260 --> 00:51:35,090
not it's absolutely true that the the

960
00:51:32,960 --> 00:51:37,880
forwarding implementation has to change

961
00:51:35,090 --> 00:51:40,460
to understand the trace and then when I

962
00:51:37,880 --> 00:51:42,920
sent the slides of Luigi I said you know

963
00:51:40,460 --> 00:51:44,780
I obviously haven't written this down I

964
00:51:42,920 --> 00:51:47,960
did the code first but we can certainly

965
00:51:44,780 --> 00:51:50,510
write a draft if the working groups

966
00:51:47,960 --> 00:51:54,140
interested in it so yes I don't know do

967
00:51:50,510 --> 00:51:57,310
you think it's useful should we write a

968
00:51:54,140 --> 00:52:12,049
draft anybody want to help write a draft

969
00:51:57,310 --> 00:52:14,240
that opens hi Prakash it it knows the

970
00:52:12,050 --> 00:52:18,470
number of hops and the RPGs I have

971
00:52:14,240 --> 00:52:21,799
another tool called locator LOC 8tr that

972
00:52:18,470 --> 00:52:24,140
actually will go go to an ITR map cache

973
00:52:21,800 --> 00:52:26,810
and actually go through the map cache

974
00:52:24,140 --> 00:52:30,350
trace route to each of the arlok's and

975
00:52:26,810 --> 00:52:32,360
give you the actual physical hops so

976
00:52:30,350 --> 00:52:33,920
that can be used in conjunction with

977
00:52:32,360 --> 00:52:37,690
this the big question is it should I use

978
00:52:33,920 --> 00:52:40,520
a detailed version and launch that tool

979
00:52:37,690 --> 00:52:42,860
so you know this arrow here has a lot

980
00:52:40,520 --> 00:52:44,630
has five hops do you want to show that

981
00:52:42,860 --> 00:52:53,090
information that's something we could

982
00:52:44,630 --> 00:52:55,670
add no it's a different program I'll

983
00:52:53,090 --> 00:52:58,100
it's it's a different tool all together

984
00:52:55,670 --> 00:53:01,130
that just queries the map cache in the

985
00:52:58,100 --> 00:53:02,750
ITR and for all the arlok's that are in

986
00:53:01,130 --> 00:53:05,090
the map cache that a trace routes each

987
00:53:02,750 --> 00:53:06,710
one and at all and it also pulls out

988
00:53:05,090 --> 00:53:08,690
this information from the map cache so

989
00:53:06,710 --> 00:53:10,640
it's trying to marry the information

990
00:53:08,690 --> 00:53:12,140
that's in the map cache that our log

991
00:53:10,640 --> 00:53:15,160
probing is doing with

992
00:53:12,140 --> 00:53:16,790
the actual physical path using tracer ah

993
00:53:15,160 --> 00:53:19,670
yeah yeah yeah

994
00:53:16,790 --> 00:53:22,279
so merging it is you know interesting

995
00:53:19,670 --> 00:53:24,590
but this kind of gives you a rough idea

996
00:53:22,280 --> 00:53:26,540
what the underlays doing but really

997
00:53:24,590 --> 00:53:28,550
showing you the encapsulation paths I

998
00:53:26,540 --> 00:53:30,140
think as we go into the future no one's

999
00:53:28,550 --> 00:53:31,970
gonna care about the underlay because

1000
00:53:30,140 --> 00:53:38,240
the overlay is where all the value is

1001
00:53:31,970 --> 00:53:41,000
going to be so long as these over time

1002
00:53:38,240 --> 00:53:42,560
then you and you have to find out did I

1003
00:53:41,000 --> 00:53:44,510
switch service provider in this another

1004
00:53:42,560 --> 00:53:47,360
because of the paths which the service

1005
00:53:44,510 --> 00:53:49,520
provider is really slow you know maybe

1006
00:53:47,360 --> 00:53:51,620
you you maybe you tweak I mean there's

1007
00:53:49,520 --> 00:53:58,910
things in list proper we should do this

1008
00:53:51,620 --> 00:54:01,100
thing using the same outlook should we

1009
00:53:58,910 --> 00:54:03,500
switch over dynamically it'd be nice if

1010
00:54:01,100 --> 00:54:06,110
we could put work into that as well to

1011
00:54:03,500 --> 00:54:07,940
show that you know these these paths

1012
00:54:06,110 --> 00:54:09,680
because now that you can do the

1013
00:54:07,940 --> 00:54:11,990
switching and get better network

1014
00:54:09,680 --> 00:54:12,830
performance on the overlay because you

1015
00:54:11,990 --> 00:54:15,140
have the arlok's

1016
00:54:12,830 --> 00:54:16,520
you can switch back and forth and you

1017
00:54:15,140 --> 00:54:18,859
could do it as often as you want you

1018
00:54:16,520 --> 00:54:20,750
don't affect the underlay at all so that

1019
00:54:18,860 --> 00:54:42,770
would be interesting for somebody to

1020
00:54:20,750 --> 00:54:46,370
look at possibly as an integral an

1021
00:54:42,770 --> 00:54:48,350
integrated mechanism okay yeah that's a

1022
00:54:46,370 --> 00:54:50,960
good suggestion yeah yeah I haven't

1023
00:54:48,350 --> 00:54:53,230
looked at it but it's a good idea thanks

1024
00:54:50,960 --> 00:54:53,230
thank you

1025
00:54:54,640 --> 00:55:01,400
there is a missing part right because in

1026
00:54:59,360 --> 00:55:04,730
order for this to work you need support

1027
00:55:01,400 --> 00:55:10,220
on all the RTR sides with your specific

1028
00:55:04,730 --> 00:55:13,760
message yeah so I need some some code

1029
00:55:10,220 --> 00:55:16,069
that is running on the RTR for example

1030
00:55:13,760 --> 00:55:19,340
during the server part listening to your

1031
00:55:16,070 --> 00:55:21,230
specific man's messaging cursing the

1032
00:55:19,340 --> 00:55:22,940
information this is also on the Nita

1033
00:55:21,230 --> 00:55:25,609
repository

1034
00:55:22,940 --> 00:55:27,829
it was a question on the EZ donde github

1035
00:55:25,609 --> 00:55:32,869
repository yes mm-hmm

1036
00:55:27,829 --> 00:55:36,650
the other thing is yep and yeah every

1037
00:55:32,869 --> 00:55:39,380
forwarding component every ITR if the

1038
00:55:36,650 --> 00:55:41,720
systems running as an ITR only or an ET

1039
00:55:39,380 --> 00:55:43,549
are only and an RT on it's doing d cap

1040
00:55:41,720 --> 00:55:47,930
and cap all those entities have to

1041
00:55:43,549 --> 00:55:50,780
change and if they don't I didn't try it

1042
00:55:47,930 --> 00:55:53,180
but if say this RTR didn't it didn't

1043
00:55:50,780 --> 00:55:55,010
work it turns out that this information

1044
00:55:53,180 --> 00:55:56,839
would just not be part of the output so

1045
00:55:55,010 --> 00:55:59,210
you could skip over our TRS that didn't

1046
00:55:56,839 --> 00:56:00,828
support it but if the art if the RTR

1047
00:55:59,210 --> 00:56:02,690
doesn't support it's never going to turn

1048
00:56:00,829 --> 00:56:05,569
the packet around so though it would

1049
00:56:02,690 --> 00:56:07,789
just be a lost trace so the if the if

1050
00:56:05,569 --> 00:56:10,400
the question is can there be incremental

1051
00:56:07,789 --> 00:56:26,020
deployability of this yes but not useful

1052
00:56:10,400 --> 00:56:36,559
you really you know ok no questions no

1053
00:56:26,020 --> 00:56:38,960
switch to the next ok ok so this is this

1054
00:56:36,559 --> 00:56:42,079
was really fun we did a list mobile node

1055
00:56:38,960 --> 00:56:46,309
demo the guys at UBC did a wonderful job

1056
00:56:42,079 --> 00:56:48,740
of taking the arc code and actually make

1057
00:56:46,309 --> 00:56:51,920
a run on iOS and since I have an iPhone

1058
00:56:48,740 --> 00:56:53,598
and I'm kind of on it 24/7 I was able to

1059
00:56:51,920 --> 00:56:55,970
play a lot of lists of stuff with it so

1060
00:56:53,599 --> 00:56:58,549
you know a lot of credit goes to Albert

1061
00:56:55,970 --> 00:57:00,529
Lopez who is was very fixed fast in

1062
00:56:58,549 --> 00:57:02,119
fixing bugs and of course Albert

1063
00:57:00,529 --> 00:57:05,440
Cabela's who was our Oversight Committee

1064
00:57:02,119 --> 00:57:07,400
he made sure we stayed in line and he

1065
00:57:05,440 --> 00:57:09,710
pulled all that he did all the stuff

1066
00:57:07,400 --> 00:57:12,980
behind the scenes I think he did because

1067
00:57:09,710 --> 00:57:16,819
everything ran so smoothly so this is a

1068
00:57:12,980 --> 00:57:18,920
demo of lists mobile node and the draft

1069
00:57:16,819 --> 00:57:24,619
has been around for quite a long time I

1070
00:57:18,920 --> 00:57:27,710
think 2009 timeframe or or right after

1071
00:57:24,619 --> 00:57:29,150
the working group a long time and so it

1072
00:57:27,710 --> 00:57:30,319
was an individual submission for a long

1073
00:57:29,150 --> 00:57:32,359
time but we made it a working group

1074
00:57:30,319 --> 00:57:34,788
document and I thought it was time to

1075
00:57:32,359 --> 00:57:36,410
actually do some implementation so we

1076
00:57:34,789 --> 00:57:36,680
could maybe move this strap along and

1077
00:57:36,410 --> 00:57:39,319
see

1078
00:57:36,680 --> 00:57:41,598
good this ideas what's really nice about

1079
00:57:39,319 --> 00:57:45,109
lists mobile node is that a phone can be

1080
00:57:41,599 --> 00:57:48,890
multihomed and used any service provider

1081
00:57:45,109 --> 00:57:51,020
anywhere it does all the FMC equivalent

1082
00:57:48,890 --> 00:57:52,700
stuff that 5g wants to do and you don't

1083
00:57:51,020 --> 00:57:54,619
have to talk about talk to anybody in

1084
00:57:52,700 --> 00:57:57,200
the middle of the network because all

1085
00:57:54,619 --> 00:57:59,240
the encapsulation and using the underlay

1086
00:57:57,200 --> 00:58:01,460
can switch back and forth solely on the

1087
00:57:59,240 --> 00:58:05,479
phone so it's quite a powerful

1088
00:58:01,460 --> 00:58:07,550
technology so this is what we're gonna

1089
00:58:05,480 --> 00:58:10,760
what we're demoing we're gonna show list

1090
00:58:07,550 --> 00:58:12,849
mobile node on an iPhone and I have some

1091
00:58:10,760 --> 00:58:16,369
our TRS deployed in Google compute

1092
00:58:12,849 --> 00:58:19,520
platform or Google cloud and in AWS and

1093
00:58:16,369 --> 00:58:22,400
the list mobile node is going to talk to

1094
00:58:19,520 --> 00:58:24,230
so CN in in the mobility world see n

1095
00:58:22,400 --> 00:58:26,180
stands for correspondent node which

1096
00:58:24,230 --> 00:58:29,000
means it's a node on the internet that's

1097
00:58:26,180 --> 00:58:30,348
not moving so we're gonna show that the

1098
00:58:29,000 --> 00:58:32,420
list mobile node is going to talk to

1099
00:58:30,349 --> 00:58:34,099
another list node that's on the internet

1100
00:58:32,420 --> 00:58:36,079
and we're going to show that a list

1101
00:58:34,099 --> 00:58:38,510
mobile nodes gonna talk to a non-lisp

1102
00:58:36,079 --> 00:58:40,550
mobile node so that we're doing

1103
00:58:38,510 --> 00:58:43,040
interworking as well to show that list

1104
00:58:40,550 --> 00:58:45,260
can talk to anybody to make my iphone

1105
00:58:43,040 --> 00:58:46,940
useful and to keep list running all day

1106
00:58:45,260 --> 00:58:49,010
long I want to do I'll use all my

1107
00:58:46,940 --> 00:58:51,380
applications on it so I want to be able

1108
00:58:49,010 --> 00:58:53,869
to talk to non-lisp sites and we're

1109
00:58:51,380 --> 00:58:56,480
using so the interworking draft allows

1110
00:58:53,869 --> 00:58:59,329
you to do route injection with a p ITR

1111
00:58:56,480 --> 00:59:03,190
or do something called list nat my

1112
00:58:59,329 --> 00:59:03,190
implementation does listen at Grinnell

1113
00:59:03,730 --> 00:59:08,359
so you're underneath in the demo path

1114
00:59:06,020 --> 00:59:11,540
yes because like yeah I mean potentially

1115
00:59:08,359 --> 00:59:14,960
we don't have momentum as well yeah

1116
00:59:11,540 --> 00:59:16,279
absolutely yeah a great question and

1117
00:59:14,960 --> 00:59:18,470
there's one caveat that I'll talk about

1118
00:59:16,280 --> 00:59:22,880
later why about that but yeah I think

1119
00:59:18,470 --> 00:59:25,669
you already know the answer to that so

1120
00:59:22,880 --> 00:59:27,349
some magic sauce

1121
00:59:25,670 --> 00:59:29,930
there's we're trying to do multiple

1122
00:59:27,349 --> 00:59:33,170
efforts at one time so the list mobile

1123
00:59:29,930 --> 00:59:35,779
node is not running a control plane this

1124
00:59:33,170 --> 00:59:38,210
is really important it's not sending one

1125
00:59:35,780 --> 00:59:40,250
Lisp control message all it's doing is

1126
00:59:38,210 --> 00:59:42,859
the data plane and I'll explain what the

1127
00:59:40,250 --> 00:59:45,920
motivation was there lists mobile node

1128
00:59:42,859 --> 00:59:48,650
basically is just configured 0 which

1129
00:59:45,920 --> 00:59:49,940
means any IP packet that's sent it's

1130
00:59:48,650 --> 00:59:54,089
going to be sent

1131
00:59:49,940 --> 00:59:56,249
Peter's proxy ETRS or our TRS because in

1132
00:59:54,089 --> 00:59:59,670
some cases they're read encapsulating if

1133
00:59:56,249 --> 01:00:02,249
it's going lista less the RT R's are

1134
00:59:59,670 --> 01:00:04,920
configured to glean the XT our mappings

1135
01:00:02,249 --> 01:00:07,288
so as packets are coming in that are

1136
01:00:04,920 --> 01:00:10,769
encapsulated by the phone we look at the

1137
01:00:07,289 --> 01:00:12,719
source port and source IP address and we

1138
01:00:10,769 --> 01:00:15,058
put that in the map cache so return

1139
01:00:12,719 --> 01:00:17,729
packets can go there so that means an

1140
01:00:15,059 --> 01:00:18,150
iPhone could be behind a NAT and it just

1141
01:00:17,729 --> 01:00:20,910
works

1142
01:00:18,150 --> 01:00:23,219
there's no NAT traversal logic that

1143
01:00:20,910 --> 01:00:24,779
occurs we have a net traversal spec that

1144
01:00:23,219 --> 01:00:25,589
has a lot of control plane machinery but

1145
01:00:24,779 --> 01:00:28,349
we're not using that

1146
01:00:25,589 --> 01:00:30,450
for this demo now this isn't an effort

1147
01:00:28,349 --> 01:00:32,670
to implement a lighter-weight xtr make

1148
01:00:30,450 --> 01:00:35,819
lisp even simpler less resource

1149
01:00:32,670 --> 01:00:37,829
constraining and one that possibly can

1150
01:00:35,819 --> 01:00:40,140
run on dash cams perhaps and you're

1151
01:00:37,829 --> 01:00:42,180
gonna hear sharona's presentations so

1152
01:00:40,140 --> 01:00:44,368
this was an effort to try to understand

1153
01:00:42,180 --> 01:00:47,940
how lightweight we could put lisp

1154
01:00:44,369 --> 01:00:52,369
on small memory challenged or wanna

1155
01:00:47,940 --> 01:00:55,650
reduce the cost of of it may a

1156
01:00:52,369 --> 01:00:58,619
clarification so it's been a long time

1157
01:00:55,650 --> 01:01:02,279
so I I forgot the content of the

1158
01:00:58,619 --> 01:01:04,559
document so you you have least mobile

1159
01:01:02,279 --> 01:01:06,779
node on your iPhone you know so you

1160
01:01:04,559 --> 01:01:07,999
don't live in Morial I don't live in

1161
01:01:06,779 --> 01:01:11,549
Moria

1162
01:01:07,999 --> 01:01:14,640
yeah mantra so now your iPhone is

1163
01:01:11,549 --> 01:01:16,709
pointing to which Peter I'll show I'll

1164
01:01:14,640 --> 01:01:18,690
show you all the demo ok yeah

1165
01:01:16,709 --> 01:01:21,029
it's by the way it did work when I was

1166
01:01:18,690 --> 01:01:24,539
in when I was sitting in Montreal it

1167
01:01:21,029 --> 01:01:25,949
worked on the cellular network - how do

1168
01:01:24,539 --> 01:01:28,259
you change it because basically I

1169
01:01:25,949 --> 01:01:30,779
otherwise you have you may have a long

1170
01:01:28,259 --> 01:01:33,059
stretch in the in the passage it's

1171
01:01:30,779 --> 01:01:36,989
always the same Peter I mean if it's

1172
01:01:33,059 --> 01:01:39,119
your own then your traffic is going back

1173
01:01:36,989 --> 01:01:42,479
to California you know even if you are

1174
01:01:39,119 --> 01:01:45,029
connecting to something that is here yes

1175
01:01:42,479 --> 01:01:47,868
oh I already experimented where that was

1176
01:01:45,029 --> 01:01:53,999
very interesting the RTT is doubled yes

1177
01:01:47,869 --> 01:01:55,979
but it's either like pointees you mean

1178
01:01:53,999 --> 01:01:59,759
should the Peters be dynamically learned

1179
01:01:55,979 --> 01:02:03,120
based on your physical location fixed

1180
01:01:59,759 --> 01:02:05,760
yes these

1181
01:02:03,120 --> 01:02:10,140
could be an issue in a certain way so we

1182
01:02:05,760 --> 01:02:12,540
have we have to think about this I'm not

1183
01:02:10,140 --> 01:02:15,629
asking for our solution that I know okay

1184
01:02:12,540 --> 01:02:18,200
so there yeah the other thing is there

1185
01:02:15,630 --> 01:02:21,660
are key odds are configured by gleaning

1186
01:02:18,200 --> 01:02:23,430
with which they are tears are not

1187
01:02:21,660 --> 01:02:26,940
configured by gleaning the are tears are

1188
01:02:23,430 --> 01:02:33,600
configuring madniks the admin dxtrs are

1189
01:02:26,940 --> 01:02:35,640
gleaned and we are on the are tears you

1190
01:02:33,600 --> 01:02:38,009
turn on a command saying glean the

1191
01:02:35,640 --> 01:02:42,120
information from us we have the document

1192
01:02:38,010 --> 01:02:47,250
says not to do that in the document says

1193
01:02:42,120 --> 01:02:53,339
not to do that in public domains yes yes

1194
01:02:47,250 --> 01:02:55,650
this is a demo this is not an RFC my

1195
01:02:53,340 --> 01:02:57,360
point is that we have to keep this in

1196
01:02:55,650 --> 01:03:01,340
mind because if you want to move to the

1197
01:02:57,360 --> 01:03:04,680
document forward I mean the we cannot

1198
01:03:01,340 --> 01:03:07,710
have the basic specs that say you should

1199
01:03:04,680 --> 01:03:11,160
not use this and another another

1200
01:03:07,710 --> 01:03:17,580
document is technology is based on

1201
01:03:11,160 --> 01:03:28,080
something you should not use planning a

1202
01:03:17,580 --> 01:03:30,660
new document I mean I understand your

1203
01:03:28,080 --> 01:04:06,509
point but we're not violating anything

1204
01:03:30,660 --> 01:04:09,029
so far there's no way to dynamically

1205
01:04:06,510 --> 01:04:10,350
discover or change your proxy and that's

1206
01:04:09,030 --> 01:04:13,110
something I do realize when you start

1207
01:04:10,350 --> 01:04:15,150
typing echo that's true it's something

1208
01:04:13,110 --> 01:04:16,350
that you can consider yeah actually it's

1209
01:04:15,150 --> 01:04:19,740
not true the

1210
01:04:16,350 --> 01:04:21,420
the list of Peters can be e IDs that are

1211
01:04:19,740 --> 01:04:23,609
periodically looked up to find new

1212
01:04:21,420 --> 01:04:26,400
locators so we could put another level

1213
01:04:23,610 --> 01:04:33,300
of indirection in the implementation to

1214
01:04:26,400 --> 01:04:36,120
do that it could work but yeah maybe it

1215
01:04:33,300 --> 01:04:37,980
was it's a more general comment but we

1216
01:04:36,120 --> 01:04:40,560
have been working with mobile

1217
01:04:37,980 --> 01:04:43,800
implementation for a long time and we

1218
01:04:40,560 --> 01:04:45,540
had some deployments I'm speaking from a

1219
01:04:43,800 --> 01:04:47,580
university so the Bremen for me is

1220
01:04:45,540 --> 01:04:49,590
different than for other people okay so

1221
01:04:47,580 --> 01:04:52,140
it's much smaller but still we've had

1222
01:04:49,590 --> 01:04:54,900
some experience and 90% of the code of

1223
01:04:52,140 --> 01:04:57,600
mobility is um not reverse what I'm

1224
01:04:54,900 --> 01:05:01,470
trying to say is that 90 or 95% of the

1225
01:04:57,600 --> 01:05:04,170
complexity which the document is on the

1226
01:05:01,470 --> 01:05:06,029
chapter as I remember and I thought we

1227
01:05:04,170 --> 01:05:08,940
should push it but we should also

1228
01:05:06,030 --> 01:05:10,920
consider that writing the code of a

1229
01:05:08,940 --> 01:05:13,980
mobile node is writing the code so far

1230
01:05:10,920 --> 01:05:15,570
note that this moving across that's yeah

1231
01:05:13,980 --> 01:05:17,130
that's a really good point because the

1232
01:05:15,570 --> 01:05:19,200
list mobile node document doesn't say

1233
01:05:17,130 --> 01:05:20,820
anything about Nats it just assumes

1234
01:05:19,200 --> 01:05:22,620
they're in this pristine environment

1235
01:05:20,820 --> 01:05:24,960
which is not the capital I internet

1236
01:05:22,620 --> 01:05:28,350
where the arlok's that the mobile nodes

1237
01:05:24,960 --> 01:05:30,270
registering are all in global space so I

1238
01:05:28,350 --> 01:05:36,690
mean a lot of these documents don't

1239
01:05:30,270 --> 01:05:37,230
reflect reality you know any other

1240
01:05:36,690 --> 01:05:44,040
questions

1241
01:05:37,230 --> 01:05:46,860
keep going so here's the topology we

1242
01:05:44,040 --> 01:05:48,810
have a phone an iPhone that's connected

1243
01:05:46,860 --> 01:05:52,260
to a cellular connection as well as

1244
01:05:48,810 --> 01:05:54,360
Wi-Fi or multiple wi-fi's and I have a

1245
01:05:52,260 --> 01:05:56,790
also part of the demos I have a docker

1246
01:05:54,360 --> 01:06:00,240
container that runs on my laptop the

1247
01:05:56,790 --> 01:06:03,090
mobile phones I D is 13 and the

1248
01:06:00,240 --> 01:06:06,359
container is 14 and what the plan is is

1249
01:06:03,090 --> 01:06:08,070
for 13 and 14 to talk to each other and

1250
01:06:06,360 --> 01:06:12,750
that should be able to work as the

1251
01:06:08,070 --> 01:06:14,340
mobile phone switches but both of them

1252
01:06:12,750 --> 01:06:18,150
should also be able to talk to these non

1253
01:06:14,340 --> 01:06:22,440
Lisp destinations which is the DNS

1254
01:06:18,150 --> 01:06:25,440
server at Google and my web site WWE at

1255
01:06:22,440 --> 01:06:28,500
which is in Wix comm so it's just a you

1256
01:06:25,440 --> 01:06:29,460
know it's just a regular server host out

1257
01:06:28,500 --> 01:06:30,900
there

1258
01:06:29,460 --> 01:06:33,359
these are the RTR that are deploying

1259
01:06:30,900 --> 01:06:37,260
once deployed in Google cloud and

1260
01:06:33,359 --> 01:06:39,930
through your deployed in AWS okay so the

1261
01:06:37,260 --> 01:06:41,820
mobile node is running in the container

1262
01:06:39,930 --> 01:06:45,390
in the RT hours of running my lispers

1263
01:06:41,820 --> 01:06:47,520
done that implementation okay so this

1264
01:06:45,390 --> 01:06:49,049
this is the live demo I decided to

1265
01:06:47,520 --> 01:06:50,670
record it just because I didn't know

1266
01:06:49,050 --> 01:06:53,430
what Canada was going to give me in

1267
01:06:50,670 --> 01:06:55,349
terms of connectivity so what I'm going

1268
01:06:53,430 --> 01:06:57,029
to do is there's some audio I think I

1269
01:06:55,349 --> 01:07:52,410
can make it work by holding this here

1270
01:06:57,030 --> 01:07:54,030
but we'll see okay sounds good okay so

1271
01:07:52,410 --> 01:07:58,379
there's the topologies the same as the

1272
01:07:54,030 --> 01:08:06,750
last slide oh so I can stop when I need

1273
01:07:58,380 --> 01:08:12,000
to okay okay so so what we're going to

1274
01:08:06,750 --> 01:08:14,310
show first is 14 pinging at the way so

1275
01:08:12,000 --> 01:08:18,000
up there in that window right there 14

1276
01:08:14,310 --> 01:08:21,738
is pinging 13 okay so that means the

1277
01:08:18,000 --> 01:08:24,630
client ping on 14 is is pinging the

1278
01:08:21,738 --> 01:08:28,080
phone the phone is configured with O R

1279
01:08:24,630 --> 01:08:30,719
there's the Eid that's configured and I

1280
01:08:28,080 --> 01:08:32,100
bring up a ping program here and what

1281
01:08:30,719 --> 01:08:34,109
it's going to do is showing you that

1282
01:08:32,100 --> 01:08:36,150
it's connected to Wi-Fi see up there

1283
01:08:34,109 --> 01:08:39,330
where my finger was like yet I actually

1284
01:08:36,149 --> 01:08:41,469
could stop if I need to let's go back a

1285
01:08:39,330 --> 01:08:44,210
little bit yeah I can stop

1286
01:08:41,470 --> 01:08:46,850
okay so you see up there it shows that

1287
01:08:44,210 --> 01:08:50,060
it's connected on Wi-Fi at my house and

1288
01:08:46,850 --> 01:08:53,900
now I'm about to hit that ping right

1289
01:08:50,060 --> 01:08:56,089
there that's pinging WW lispers net okay

1290
01:08:53,899 --> 01:08:58,608
and we're gonna see the pings flowing

1291
01:08:56,089 --> 01:09:02,899
from the phone to listeners dotnet which

1292
01:08:58,609 --> 01:09:06,530
is a non-lisp site from 13 2ww lispers

1293
01:09:02,899 --> 01:09:10,120
net okay now I'm gonna about to go back

1294
01:09:06,529 --> 01:09:12,830
to the phone and switch it to LTE and

1295
01:09:10,120 --> 01:09:16,729
that's what I'm about to do now I bring

1296
01:09:12,830 --> 01:09:18,439
it down I turn off Wi-Fi and then if you

1297
01:09:16,729 --> 01:09:19,669
look at the very top let's see if we can

1298
01:09:18,439 --> 01:09:22,279
catch the top the pings are still

1299
01:09:19,670 --> 01:09:24,410
running we lost exactly one packet let

1300
01:09:22,279 --> 01:09:24,858
me go up a little bit there stop can you

1301
01:09:24,410 --> 01:09:27,800
see it

1302
01:09:24,859 --> 01:09:29,990
stop see up here it says LTE so it's

1303
01:09:27,800 --> 01:09:32,060
connected on LTE the idea here is we're

1304
01:09:29,990 --> 01:09:34,580
doing sustenance survivability you

1305
01:09:32,060 --> 01:09:36,050
connect the pings or a TCP connection

1306
01:09:34,580 --> 01:09:39,319
would stay up as we're switching back

1307
01:09:36,050 --> 01:09:42,170
and forth from Wi-Fi to LTE this here is

1308
01:09:39,319 --> 01:09:43,160
showing that packets are going from 13

1309
01:09:42,170 --> 01:09:46,670
to 14

1310
01:09:43,160 --> 01:09:48,050
here's a ID 13 here's Eid 14 so the ping

1311
01:09:46,670 --> 01:09:50,569
that the container was doing to the

1312
01:09:48,050 --> 01:09:52,250
phone was happening at the same time the

1313
01:09:50,569 --> 01:09:54,889
dark green counters mean that the

1314
01:09:52,250 --> 01:09:56,900
packets were were encapsulated or

1315
01:09:54,890 --> 01:09:58,520
forwarded within the last second and the

1316
01:09:56,900 --> 01:10:02,059
light green means they were encapsulated

1317
01:09:58,520 --> 01:10:05,090
in the last minute and the 185 is WW

1318
01:10:02,060 --> 01:10:07,100
lispers net so you see 13 packets are

1319
01:10:05,090 --> 01:10:09,320
going to 13 from two different places

1320
01:10:07,100 --> 01:10:11,720
and it's sending packets to do different

1321
01:10:09,320 --> 01:10:18,290
places as well so that's what that's

1322
01:10:11,720 --> 01:10:21,050
showing there and I don't know what I'm

1323
01:10:18,290 --> 01:10:23,269
saying on the audio oh I'm refreshing

1324
01:10:21,050 --> 01:10:24,680
the screen now so you should have seen

1325
01:10:23,270 --> 01:10:26,980
the counters changed there because I was

1326
01:10:24,680 --> 01:10:30,770
refreshing now what I'm showing is that

1327
01:10:26,980 --> 01:10:32,059
166 is the outlook that AT&T on my cell

1328
01:10:30,770 --> 01:10:34,520
phone is giving me and now I'm switching

1329
01:10:32,060 --> 01:10:36,560
back to Wi-Fi and then I'm going to

1330
01:10:34,520 --> 01:10:39,140
refresh the screen on the RT R to show

1331
01:10:36,560 --> 01:10:41,510
that that address is changing and you

1332
01:10:39,140 --> 01:10:44,360
see a change to 98 not only did it

1333
01:10:41,510 --> 01:10:45,830
change the are low but it also changed

1334
01:10:44,360 --> 01:10:48,230
the encapsulation port because it's

1335
01:10:45,830 --> 01:10:50,540
going through two different Nats if we

1336
01:10:48,230 --> 01:10:52,309
go back and see the pings are still

1337
01:10:50,540 --> 01:10:53,930
running there and I think it's just

1338
01:10:52,310 --> 01:10:56,120
stopping

1339
01:10:53,930 --> 01:10:57,590
this is the end of the demo showing that

1340
01:10:56,120 --> 01:11:00,710
the pings are running on the top window

1341
01:10:57,590 --> 01:11:07,940
in the container as well as the non list

1342
01:11:00,710 --> 01:11:09,920
stuff going from the iPhone so there is

1343
01:11:07,940 --> 01:11:13,400
basically when this switch was happening

1344
01:11:09,920 --> 01:11:15,020
on the local iPhone iOS has gotten

1345
01:11:13,400 --> 01:11:17,179
really good where it can still keep the

1346
01:11:15,020 --> 01:11:19,160
old connection up well it's associating

1347
01:11:17,180 --> 01:11:21,020
with the other connection so really in

1348
01:11:19,160 --> 01:11:23,240
most cases when I do one-second pings

1349
01:11:21,020 --> 01:11:25,550
I lose zero packets when I do about a

1350
01:11:23,240 --> 01:11:27,830
hundred hundred millisecond pings I'm

1351
01:11:25,550 --> 01:11:28,400
getting two or three packets that are

1352
01:11:27,830 --> 01:11:30,230
being lost

1353
01:11:28,400 --> 01:11:32,540
just for some switching that's going on

1354
01:11:30,230 --> 01:11:34,309
but basically what's happening is as

1355
01:11:32,540 --> 01:11:36,340
long as packets are coming from this guy

1356
01:11:34,310 --> 01:11:39,350
who's switching the RT R will then

1357
01:11:36,340 --> 01:11:40,910
automatically latch to a new set of our

1358
01:11:39,350 --> 01:11:43,610
looks this was this was kind of the

1359
01:11:40,910 --> 01:11:46,580
point that Albert was making on how this

1360
01:11:43,610 --> 01:11:49,400
is super simple to not only implement

1361
01:11:46,580 --> 01:11:55,160
but easy to deploy if we go back and we

1362
01:11:49,400 --> 01:11:57,969
show what has to be done on the let's

1363
01:11:55,160 --> 01:12:01,340
see if you just see what has to be I

1364
01:11:57,970 --> 01:12:02,450
wanted to show you the settings let's

1365
01:12:01,340 --> 01:12:10,070
see if I can find that there's a

1366
01:12:02,450 --> 01:12:12,740
settings stop but basically all that it

1367
01:12:10,070 --> 01:12:15,170
has to be configured is the e ID and the

1368
01:12:12,740 --> 01:12:18,440
instance ID is that it's in and then

1369
01:12:15,170 --> 01:12:22,730
there's a proxy ETR lists that where you

1370
01:12:18,440 --> 01:12:24,830
configure the proxy ETRS and then a DNS

1371
01:12:22,730 --> 01:12:26,929
server notice that the map server and

1372
01:12:24,830 --> 01:12:28,580
the map-resolver aren't configured

1373
01:12:26,930 --> 01:12:30,740
because it's this guy doesn't need to

1374
01:12:28,580 --> 01:12:32,540
use the mapping system the guys he named

1375
01:12:30,740 --> 01:12:34,219
honor each used the mapping system but

1376
01:12:32,540 --> 01:12:39,260
he doesn't because everything's learned

1377
01:12:34,220 --> 01:12:41,150
through those are TRS okay so what we

1378
01:12:39,260 --> 01:12:43,370
try to do is let's see if we could make

1379
01:12:41,150 --> 01:12:45,620
to scale this out a little bit and let's

1380
01:12:43,370 --> 01:12:47,990
have the container sent to wer balusters

1381
01:12:45,620 --> 01:12:51,200
net and let's have it be configured with

1382
01:12:47,990 --> 01:12:53,840
for Peters or for our TRS and let's load

1383
01:12:51,200 --> 01:12:55,940
split the traffic there and that's what

1384
01:12:53,840 --> 01:12:57,560
we did the traffic was loads but I'm

1385
01:12:55,940 --> 01:13:00,519
just going to show you this output that

1386
01:12:57,560 --> 01:13:00,520
it actually works

1387
01:13:03,280 --> 01:13:07,990
wonderful

1388
01:13:04,640 --> 01:13:13,730
it's a little blurry but amazing okay so

1389
01:13:07,990 --> 01:13:16,250
what yeah thank you Joe

1390
01:13:13,730 --> 01:13:18,040
so what's going on here is the packets

1391
01:13:16,250 --> 01:13:20,480
that are being sent to w SS personnel

1392
01:13:18,040 --> 01:13:23,150
this is the iPhone this is the

1393
01:13:20,480 --> 01:13:26,780
containers map cache and of course he

1394
01:13:23,150 --> 01:13:29,450
has a 0 / 0 through 4 locators one in

1395
01:13:26,780 --> 01:13:31,160
GCP and 3 and AWS and you can see that

1396
01:13:29,450 --> 01:13:34,360
it's load splitting packets across all

1397
01:13:31,160 --> 01:13:36,559
of them now what's interesting is this

1398
01:13:34,360 --> 01:13:38,780
implementation is sending our load

1399
01:13:36,560 --> 01:13:41,480
probes to the RTR so we actually know

1400
01:13:38,780 --> 01:13:44,000
the performance of the our TRS we can

1401
01:13:41,480 --> 01:13:46,580
see that the RTR it's 700 milliseconds

1402
01:13:44,000 --> 01:13:48,440
to that one I think that one was Jesus

1403
01:13:46,580 --> 01:13:52,430
yeah that's the Google one and here are

1404
01:13:48,440 --> 01:13:55,129
the ones in AWS 227 335 218 so these are

1405
01:13:52,430 --> 01:13:56,900
TT delays or these delays or these hair

1406
01:13:55,130 --> 01:13:58,640
painting of packets like Luigi's Point

1407
01:13:56,900 --> 01:14:01,639
brought up is something that's really

1408
01:13:58,640 --> 01:14:04,280
important because obviously the path if

1409
01:14:01,640 --> 01:14:05,690
you turn oor off the path directly W of

1410
01:14:04,280 --> 01:14:07,940
lists Rashaad net is on the shortest

1411
01:14:05,690 --> 01:14:11,389
path on the internet where now it has to

1412
01:14:07,940 --> 01:14:13,429
go like this right so our TR deployment

1413
01:14:11,390 --> 01:14:22,190
is is something for further study as

1414
01:14:13,430 --> 01:14:24,530
well okay so we kept playing unless said

1415
01:14:22,190 --> 01:14:26,480
now it's time to do large packets and so

1416
01:14:24,530 --> 01:14:29,450
what I did for my iPhone was I decided

1417
01:14:26,480 --> 01:14:32,530
to drive from my coffee shop to my house

1418
01:14:29,450 --> 01:14:35,360
and what I did was I wanted to test

1419
01:14:32,530 --> 01:14:36,860
listen to this new video so I was

1420
01:14:35,360 --> 01:14:38,780
streaming the audio there you can see

1421
01:14:36,860 --> 01:14:40,580
it's going on and then I liked it so

1422
01:14:38,780 --> 01:14:42,259
much I decided to start downloading some

1423
01:14:40,580 --> 01:14:44,480
of the music well I did that all over

1424
01:14:42,260 --> 01:14:46,190
Lisp as well so streaming audio and

1425
01:14:44,480 --> 01:14:48,349
downloaded music while driving and

1426
01:14:46,190 --> 01:14:49,549
during that time when I was doing that I

1427
01:14:48,350 --> 01:14:52,460
switched between all these different

1428
01:14:49,550 --> 01:14:54,590
connections I was you know Xfinity just

1429
01:14:52,460 --> 01:14:56,330
has open Wi-Fi connections so I was

1430
01:14:54,590 --> 01:14:57,560
connected to that and then I was

1431
01:14:56,330 --> 01:14:59,269
switching back and forth while I was

1432
01:14:57,560 --> 01:15:01,250
sitting at Pete's coffee shop right and

1433
01:14:59,270 --> 01:15:05,270
everything was fine and course I was

1434
01:15:01,250 --> 01:15:06,410
switching from AT&T LTE I say 5g laugh

1435
01:15:05,270 --> 01:15:09,200
out loud because the upper right hand

1436
01:15:06,410 --> 01:15:11,000
corner says 5ge so it must be 5g I

1437
01:15:09,200 --> 01:15:14,480
didn't know I can get 5g without paying

1438
01:15:11,000 --> 01:15:15,830
any more money not so that didn't that

1439
01:15:14,480 --> 01:15:18,199
wasn't the case but I was able to be

1440
01:15:15,830 --> 01:15:19,550
able to go to all three of these as I

1441
01:15:18,199 --> 01:15:22,999
was driving to my house they have some

1442
01:15:19,550 --> 01:15:25,760
weak loss or some dead ranges where my

1443
01:15:22,999 --> 01:15:28,070
connection downgrades to 4g so I saw it

1444
01:15:25,760 --> 01:15:30,019
actually downgrade to 4G as well I

1445
01:15:28,070 --> 01:15:31,308
didn't check to see if the outlook

1446
01:15:30,019 --> 01:15:32,300
changed because I was driving and I

1447
01:15:31,309 --> 01:15:34,280
couldn't look at the RTR

1448
01:15:32,300 --> 01:15:35,959
but I basically went back and forth all

1449
01:15:34,280 --> 01:15:38,900
these four things while this download

1450
01:15:35,959 --> 01:15:40,880
was happening and there was no audible

1451
01:15:38,900 --> 01:15:42,709
packet loss that I was listening to this

1452
01:15:40,880 --> 01:15:44,479
thing ran for about two minutes one

1453
01:15:42,709 --> 01:15:48,159
minute or something like that and so I

1454
01:15:44,479 --> 01:15:48,159
was listening it so that that was audio

1455
01:15:48,219 --> 01:15:56,030
caveat this mobile node must send before

1456
01:15:52,039 --> 01:15:57,530
it can receive because the it's our

1457
01:15:56,030 --> 01:15:59,360
looks are being discovered from data

1458
01:15:57,530 --> 01:16:02,059
packets if it never sends data packets

1459
01:15:59,360 --> 01:16:03,889
then there's no way the RTR can

1460
01:16:02,059 --> 01:16:05,570
encapsulate packets back so if you

1461
01:16:03,889 --> 01:16:07,519
wanted to deploy deploy a server

1462
01:16:05,570 --> 01:16:09,558
application that was doing a socket

1463
01:16:07,519 --> 01:16:11,900
listen and expect people to connect to

1464
01:16:09,559 --> 01:16:13,639
it first it wouldn't work there's lots

1465
01:16:11,900 --> 01:16:15,679
of ways around this by putting extra

1466
01:16:13,639 --> 01:16:17,989
tools on the implementation to send

1467
01:16:15,679 --> 01:16:20,659
packets or a background ping but that's

1468
01:16:17,989 --> 01:16:22,218
just a caveat so two mobile nodes can

1469
01:16:20,659 --> 01:16:24,170
talk to each other as long as they talk

1470
01:16:22,219 --> 01:16:26,929
to another list mode or not in list mode

1471
01:16:24,170 --> 01:16:29,420
first and then they get up that was your

1472
01:16:26,929 --> 01:16:31,369
point yeah and of course this was the

1473
01:16:29,420 --> 01:16:33,679
Luigi point you know Luigi's always one

1474
01:16:31,369 --> 01:16:35,749
step ahead of me right latency exists to

1475
01:16:33,679 --> 01:16:38,929
learn this mobile node when it is

1476
01:16:35,749 --> 01:16:40,699
discovered but less than doing a mapping

1477
01:16:38,929 --> 01:16:42,889
system lookup if we would've did a

1478
01:16:40,699 --> 01:16:45,739
mapping system lookup or registered it

1479
01:16:42,889 --> 01:16:47,690
would have taken even longer so you know

1480
01:16:45,739 --> 01:16:50,089
it's still not is it good enough is the

1481
01:16:47,690 --> 01:16:52,610
question that's subjective I don't know

1482
01:16:50,090 --> 01:16:56,090
and then we have this asymmetry problem

1483
01:16:52,610 --> 01:16:58,940
where if this mobile no one uses one RTR

1484
01:16:56,090 --> 01:17:01,579
and this mobile two uses a different RTR

1485
01:16:58,940 --> 01:17:03,558
and they haven't thought they can't talk

1486
01:17:01,579 --> 01:17:06,349
to each other right because they don't

1487
01:17:03,559 --> 01:17:08,300
have each other's our look so so this

1488
01:17:06,349 --> 01:17:10,010
mobile node would have to talk to the

1489
01:17:08,300 --> 01:17:13,130
RTR that somebody else is using

1490
01:17:10,010 --> 01:17:16,429
so basically building a symmetric

1491
01:17:13,130 --> 01:17:17,719
cluster of our TRS that you talk to all

1492
01:17:16,429 --> 01:17:19,909
of them all the time makes you

1493
01:17:17,719 --> 01:17:25,969
discoverable for other things that want

1494
01:17:19,909 --> 01:17:29,388
to talk to you what was nice is Albert

1495
01:17:25,969 --> 01:17:31,070
Lopez just implemented priorities and he

1496
01:17:29,389 --> 01:17:31,580
does load splitting so I was able to put

1497
01:17:31,070 --> 01:17:33,530
all four

1498
01:17:31,580 --> 01:17:35,150
these just this morning the code just

1499
01:17:33,530 --> 01:17:36,800
came in this morning so I was able to

1500
01:17:35,150 --> 01:17:38,870
put all four of those RT ours in the O

1501
01:17:36,800 --> 01:17:40,940
our implementation all would Priority

1502
01:17:38,870 --> 01:17:43,190
One and since the iPhone was doing all

1503
01:17:40,940 --> 01:17:44,599
kinds of stuff just not my pings I saw

1504
01:17:43,190 --> 01:17:46,460
packets for being a load split across

1505
01:17:44,600 --> 01:17:48,830
all four our looks so that was really

1506
01:17:46,460 --> 01:17:50,000
nice and you know you as a user don't

1507
01:17:48,830 --> 01:17:51,950
have to care about this but you as a

1508
01:17:50,000 --> 01:17:54,290
technical user may want to set the

1509
01:17:51,950 --> 01:17:56,269
priorities different if you had one and

1510
01:17:54,290 --> 01:17:58,670
one and two and two we just load split

1511
01:17:56,270 --> 01:18:00,560
across the two and eventually when we

1512
01:17:58,670 --> 01:18:02,810
get our look Pro being working and you

1513
01:18:00,560 --> 01:18:04,310
find out that the ones the priority ones

1514
01:18:02,810 --> 01:18:06,380
have gone down it just automatically

1515
01:18:04,310 --> 01:18:08,540
switches to priority two so there's a

1516
01:18:06,380 --> 01:18:10,640
lots of robust is that you can that the

1517
01:18:08,540 --> 01:18:14,570
phone can do by itself to find better

1518
01:18:10,640 --> 01:18:18,320
paths it's really kind of nice to do

1519
01:18:14,570 --> 01:18:20,000
lists we we have our log probing works

1520
01:18:18,320 --> 01:18:21,349
on all our but it's not interoperating

1521
01:18:20,000 --> 01:18:23,360
with list first on net so we have to

1522
01:18:21,350 --> 01:18:24,890
figure out how to get that to work but

1523
01:18:23,360 --> 01:18:27,950
if we do our look probe you could do the

1524
01:18:24,890 --> 01:18:29,960
sort of things I just mentioned and then

1525
01:18:27,950 --> 01:18:32,030
the question is is do we need crypto if

1526
01:18:29,960 --> 01:18:33,740
we can do list crypto on the phone

1527
01:18:32,030 --> 01:18:35,570
everything that leaves the phone

1528
01:18:33,740 --> 01:18:38,330
regardless of what service provided you

1529
01:18:35,570 --> 01:18:39,889
run over will be encrypted and it will

1530
01:18:38,330 --> 01:18:41,990
be encrypted all the way to the RTR and

1531
01:18:39,890 --> 01:18:44,570
can be encrypted from RTR to another

1532
01:18:41,990 --> 01:18:46,490
list mode if it goes to anomalous note

1533
01:18:44,570 --> 01:18:49,849
it obviously has to be unencrypted and

1534
01:18:46,490 --> 01:18:51,830
then sent as it is in the thing so there

1535
01:18:49,850 --> 01:18:53,510
could be some security that's added so

1536
01:18:51,830 --> 01:18:55,850
we can maybe do some experiments with

1537
01:18:53,510 --> 01:18:58,340
that in the future and do we need

1538
01:18:55,850 --> 01:19:01,160
multiple ee ID support and instanceid

1539
01:18:58,340 --> 01:19:03,830
support should the phone be part of two

1540
01:19:01,160 --> 01:19:06,950
different instance IDs one may be a work

1541
01:19:03,830 --> 01:19:09,410
instance a work VPN or a private VPN

1542
01:19:06,950 --> 01:19:11,389
that might be interesting to use and do

1543
01:19:09,410 --> 01:19:13,370
they use different addresses are the EEI

1544
01:19:11,390 --> 01:19:16,010
cds addressed it from a global registry

1545
01:19:13,370 --> 01:19:17,870
versus an enterprise IT department or

1546
01:19:16,010 --> 01:19:19,760
something like that and of course you

1547
01:19:17,870 --> 01:19:22,280
can no job is finished until you do

1548
01:19:19,760 --> 01:19:24,650
multicast and i have been able to do

1549
01:19:22,280 --> 01:19:26,090
multicast from the phone so if i ping to

1550
01:19:24,650 --> 01:19:28,429
twenty four one one one from the phone

1551
01:19:26,090 --> 01:19:31,880
the packets go to the Artie ours that's

1552
01:19:28,430 --> 01:19:34,910
wonderful so the single 0/0 map cache

1553
01:19:31,880 --> 01:19:37,310
entry even handles multicast so I think

1554
01:19:34,910 --> 01:19:39,740
it's going to be easier to do a phone oh

1555
01:19:37,310 --> 01:19:42,320
are being a multicast source versus a

1556
01:19:39,740 --> 01:19:44,330
receiver a receiver we would have to

1557
01:19:42,320 --> 01:19:45,200
make sure that the app supported IGMP

1558
01:19:44,330 --> 01:19:48,260
and that

1559
01:19:45,200 --> 01:19:50,179
IGMP stuff uses the signal free stuff so

1560
01:19:48,260 --> 01:19:51,950
we have to figure out if there's a

1561
01:19:50,180 --> 01:19:53,570
simpler way or we use the existing

1562
01:19:51,950 --> 01:19:55,610
mechanisms what's the cost of the

1563
01:19:53,570 --> 01:19:57,590
implementation do we have to get Apple

1564
01:19:55,610 --> 01:20:02,799
or the OS vendors involved all that kind

1565
01:19:57,590 --> 01:20:02,800
of stuff but anyways that's it questions

1566
01:20:07,270 --> 01:20:23,150
like could you go to the mic please well

1567
01:20:17,680 --> 01:20:27,110
certainly I less is better so not doing

1568
01:20:23,150 --> 01:20:30,500
it is better than doing it right the

1569
01:20:27,110 --> 01:20:33,860
question is is so Apple does a good job

1570
01:20:30,500 --> 01:20:36,170
of testing the Wi-Fi signal and if it's

1571
01:20:33,860 --> 01:20:38,920
not good it automatically switches to

1572
01:20:36,170 --> 01:20:41,480
LTE to give you some better performance

1573
01:20:38,920 --> 01:20:44,660
should we be smart enough to know that

1574
01:20:41,480 --> 01:20:46,490
the Peters aren't doing well without our

1575
01:20:44,660 --> 01:20:50,090
look probing which may be your point and

1576
01:20:46,490 --> 01:20:52,130
maybe turn it off and then try to go

1577
01:20:50,090 --> 01:20:53,780
native and then you lose a session

1578
01:20:52,130 --> 01:20:55,730
survivability multihoming because the

1579
01:20:53,780 --> 01:20:57,889
network connectivity isn't good I found

1580
01:20:55,730 --> 01:21:00,559
that here a little bit too by roaming

1581
01:20:57,890 --> 01:21:03,320
around was stuff wasn't working I'm

1582
01:21:00,560 --> 01:21:05,780
going what's going on and it's the ietf

1583
01:21:03,320 --> 01:21:07,880
hotel Wi-Fi network that's kind of bad

1584
01:21:05,780 --> 01:21:09,889
so this is a great environment I'm gonna

1585
01:21:07,880 --> 01:21:11,720
be doing testing in fact I'm going to be

1586
01:21:09,890 --> 01:21:12,740
testing all this week if anybody sees me

1587
01:21:11,720 --> 01:21:15,200
walking around and they want a quick

1588
01:21:12,740 --> 01:21:17,599
demo right there I just have to pull out

1589
01:21:15,200 --> 01:21:19,790
my wallet and boom or pull out my phone

1590
01:21:17,600 --> 01:21:21,650
I could show you so there's a lot of

1591
01:21:19,790 --> 01:21:23,780
different access points that have these

1592
01:21:21,650 --> 01:21:26,599
bad characteristics but your point is

1593
01:21:23,780 --> 01:21:29,330
taken should you just our look probe a

1594
01:21:26,600 --> 01:21:30,920
few of them versus all of them because

1595
01:21:29,330 --> 01:21:33,170
there's all those phones are going to be

1596
01:21:30,920 --> 01:21:35,080
our look probing the same ones but I

1597
01:21:33,170 --> 01:21:36,290
have a feeling we're going to have

1598
01:21:35,080 --> 01:21:38,720
location-aware

1599
01:21:36,290 --> 01:21:41,269
our TR deployment to solve the Luigi

1600
01:21:38,720 --> 01:21:42,620
problem so maybe not all the phones in

1601
01:21:41,270 --> 01:21:44,960
the world are gonna probe the same for

1602
01:21:42,620 --> 01:21:47,570
our TRS or the same hundred our TRS

1603
01:21:44,960 --> 01:21:48,860
they're going to be locale based but it

1604
01:21:47,570 --> 01:21:50,420
would be nice to it would be nice to

1605
01:21:48,860 --> 01:21:54,740
look at how to deploy something like

1606
01:21:50,420 --> 01:21:56,429
this a large scale yeah yeah yeah

1607
01:21:54,740 --> 01:22:01,050
absolutely

1608
01:21:56,429 --> 01:22:02,489
oh try to yeah I don't know how we're

1609
01:22:01,050 --> 01:22:06,050
gonna exchange lists cryptokeys

1610
01:22:02,489 --> 01:22:08,820
dynamically without our Lord probing but

1611
01:22:06,050 --> 01:22:14,210
unless they're stat PSK static or

1612
01:22:08,820 --> 01:22:14,210
something like that how do you exchange

1613
01:22:15,409 --> 01:22:21,480
exchanging their public keys

1614
01:22:18,810 --> 01:22:23,719
it's diffie-hellman exchange it's like

1615
01:22:21,480 --> 01:22:27,030
TLS does so it's no different than that

1616
01:22:23,719 --> 01:22:32,630
the private secret keys are are built

1617
01:22:27,030 --> 01:22:32,630
independently yeah okay sounds good

1618
01:22:33,260 --> 01:22:42,929
something nice to see if you think there

1619
01:22:37,650 --> 01:22:44,820
would be a compelling thing I had a

1620
01:22:42,929 --> 01:22:51,270
second question he she said multiple

1621
01:22:44,820 --> 01:22:53,040
multiple IEDs and multi IID so when I

1622
01:22:51,270 --> 01:22:55,469
install a new application I have to

1623
01:22:53,040 --> 01:23:02,630
figure out which key ID to use which III

1624
01:22:55,469 --> 01:23:06,270
D kakuzu yeah yeah oh oh are would have

1625
01:23:02,630 --> 01:23:09,840
everything goes now if you had multiple

1626
01:23:06,270 --> 01:23:10,920
then you you need to choose which one is

1627
01:23:09,840 --> 01:23:14,370
your source ID

1628
01:23:10,920 --> 01:23:16,050
oh right now defaults to adding that but

1629
01:23:14,370 --> 01:23:18,510
it could add any type of routes it have

1630
01:23:16,050 --> 01:23:21,449
to be destination based you would have

1631
01:23:18,510 --> 01:23:22,860
to say anything that goes to I'm if I'm

1632
01:23:21,449 --> 01:23:31,080
a cisco employee anything that goes a

1633
01:23:22,860 --> 01:23:57,630
Cisco use my VPN now how is that done

1634
01:23:31,080 --> 01:24:05,250
seamlessly for the user it has to solve

1635
01:23:57,630 --> 01:24:08,310
it that way you're saying I mean and

1636
01:24:05,250 --> 01:24:09,500
then your state application you were

1637
01:24:08,310 --> 01:24:12,230
saying that

1638
01:24:09,500 --> 01:24:15,490
their face but that's a single UAV but

1639
01:24:12,230 --> 01:24:18,259
you can create multiple VPNs

1640
01:24:15,490 --> 01:24:20,420
well there's multiple view there's

1641
01:24:18,260 --> 01:24:22,160
multiple VPNs on my phone right now from

1642
01:24:20,420 --> 01:24:23,930
different versions running but they're

1643
01:24:22,160 --> 01:24:25,400
not all used at the same time

1644
01:24:23,930 --> 01:24:34,430
can they be used at the same time is

1645
01:24:25,400 --> 01:24:36,980
another question yeah but that would be

1646
01:24:34,430 --> 01:24:43,280
a no our implementation choice if it

1647
01:24:36,980 --> 01:24:45,019
wanted to solve it that way but well it

1648
01:24:43,280 --> 01:24:47,360
may only allow you to have one socket

1649
01:24:45,020 --> 01:24:52,970
down because the permissions stuff so

1650
01:24:47,360 --> 01:24:54,320
yes you're right they agree yeah I have

1651
01:24:52,970 --> 01:24:56,300
a small question do you need to

1652
01:24:54,320 --> 01:24:59,090
jailbreak your iPhone to install this

1653
01:24:56,300 --> 01:25:02,030
stuff and you can download the latest

1654
01:24:59,090 --> 01:25:04,340
version at the app store so if anybody

1655
01:25:02,030 --> 01:25:06,050
wants to try it go ahead and I'll give

1656
01:25:04,340 --> 01:25:08,570
you the addresses of the RTR

1657
01:25:06,050 --> 01:25:10,340
actually you already know them so I'm

1658
01:25:08,570 --> 01:25:14,059
expecting a DOS attack after this

1659
01:25:10,340 --> 01:25:14,060
[Laughter]

1660
01:25:50,650 --> 01:25:58,490
present mobility network based on Lisp

1661
01:25:54,530 --> 01:26:00,139
it's a specialized network but actually

1662
01:25:58,490 --> 01:26:02,780
for me the last more than 10 years

1663
01:26:00,140 --> 01:26:05,150
specialized network is where a list

1664
01:26:02,780 --> 01:26:07,820
really shines really nicely

1665
01:26:05,150 --> 01:26:12,469
more than just generic networks this is

1666
01:26:07,820 --> 01:26:15,380
one of them it combines Lisp with a grid

1667
01:26:12,470 --> 01:26:19,430
of the earth called h3 which divides the

1668
01:26:15,380 --> 01:26:20,260
earth into hexagons and we are using

1669
01:26:19,430 --> 01:26:23,970
lists

1670
01:26:20,260 --> 01:26:26,260
for mobile nodes and for addressable

1671
01:26:23,970 --> 01:26:29,020
geographical locations so I can talk to

1672
01:26:26,260 --> 01:26:30,820
Gio States there is actually an

1673
01:26:29,020 --> 01:26:34,000
additional standard which is combined in

1674
01:26:30,820 --> 01:26:35,980
here it's called BDD it's consortium the

1675
01:26:34,000 --> 01:26:38,890
Berkeley Deep Drive which is studying

1676
01:26:35,980 --> 01:26:41,860
what is worth noting about the road

1677
01:26:38,890 --> 01:26:44,050
about the Geo States which is worth

1678
01:26:41,860 --> 01:26:46,349
communicating so mobility networks

1679
01:26:44,050 --> 01:26:50,680
communicate information about the road

1680
01:26:46,350 --> 01:26:53,440
so I'll repeat some of the motivation

1681
01:26:50,680 --> 01:26:56,860
quickly I did it yesterday in the author

1682
01:26:53,440 --> 01:26:59,230
of C if somebody heard and then we

1683
01:26:56,860 --> 01:27:01,299
quickly gonna dive into the to the draft

1684
01:26:59,230 --> 01:27:06,250
itself there's been a lot of work done

1685
01:27:01,300 --> 01:27:08,140
in the last three months so as you are

1686
01:27:06,250 --> 01:27:11,850
all aware there's a lot of cameras in

1687
01:27:08,140 --> 01:27:14,500
the streets in the in the roads

1688
01:27:11,850 --> 01:27:17,350
specifically my commodities with dash

1689
01:27:14,500 --> 01:27:20,680
cams we distribute a lot of them there's

1690
01:27:17,350 --> 01:27:23,470
hundreds of thousands tens of thousand

1691
01:27:20,680 --> 01:27:25,150
active in each city but there's others

1692
01:27:23,470 --> 01:27:28,270
that we've been working with there's

1693
01:27:25,150 --> 01:27:30,250
cameras on junctions part of the

1694
01:27:28,270 --> 01:27:34,690
infrastructure Road side there's other

1695
01:27:30,250 --> 01:27:38,080
sensors and they're seeing the world so

1696
01:27:34,690 --> 01:27:42,070
the drop of prices of cameras is not

1697
01:27:38,080 --> 01:27:45,730
only is not only price reduction but

1698
01:27:42,070 --> 01:27:50,650
also being able to understand what the

1699
01:27:45,730 --> 01:27:53,259
camera sees it's now very feasible to

1700
01:27:50,650 --> 01:27:56,019
have AI that understands already at the

1701
01:27:53,260 --> 01:27:59,230
customer edge what is being seen at the

1702
01:27:56,020 --> 01:28:02,560
junction or at the car repair dash cams

1703
01:27:59,230 --> 01:28:05,650
with iPhones and that means I have smart

1704
01:28:02,560 --> 01:28:08,500
eyes crawling the streets just like

1705
01:28:05,650 --> 01:28:13,480
Google crawls the web but for the

1706
01:28:08,500 --> 01:28:15,190
physical world artifacts okay so we

1707
01:28:13,480 --> 01:28:17,650
understand what we see the question is

1708
01:28:15,190 --> 01:28:20,049
how do we communicate and this is the

1709
01:28:17,650 --> 01:28:22,540
extent that there are two networks that

1710
01:28:20,050 --> 01:28:24,130
were available to do that one is an

1711
01:28:22,540 --> 01:28:27,310
offline network which is kind of like

1712
01:28:24,130 --> 01:28:30,820
builds a map which can tell you the

1713
01:28:27,310 --> 01:28:33,460
state of a traffic sign but not the

1714
01:28:30,820 --> 01:28:34,179
traffic light timing or if the traffic

1715
01:28:33,460 --> 01:28:36,640
light is out

1716
01:28:34,179 --> 01:28:40,300
it is always a delay a gap of at least

1717
01:28:36,640 --> 01:28:43,090
15 minutes if not more there is also a

1718
01:28:40,300 --> 01:28:45,250
real-time Network which day is by a

1719
01:28:43,090 --> 01:28:48,850
standard called DSRC it's a layer 1

1720
01:28:45,250 --> 01:28:52,330
through 7 peer-to-peer network for cars

1721
01:28:48,850 --> 01:28:54,429
to tell each other what if the

1722
01:28:52,330 --> 01:28:57,309
conditions share information about the

1723
01:28:54,429 --> 01:28:58,659
road so when I mean share is I'm not

1724
01:28:57,310 --> 01:29:00,969
sharing with you that you're gonna hit

1725
01:28:58,659 --> 01:29:04,449
me in half a second that's something for

1726
01:29:00,969 --> 01:29:06,550
the sensor to pick up but for example if

1727
01:29:04,449 --> 01:29:08,949
I'm going to turn a Junction into a

1728
01:29:06,550 --> 01:29:10,989
problem and be stressed out in

1729
01:29:08,949 --> 01:29:14,080
negotiating my way out let's say a

1730
01:29:10,989 --> 01:29:16,530
double parking and many cars see the

1731
01:29:14,080 --> 01:29:19,900
problem they can communicate it to me

1732
01:29:16,530 --> 01:29:22,989
beforehand in real-time and that's where

1733
01:29:19,900 --> 01:29:28,000
peer-to-peer falls short and lease

1734
01:29:22,989 --> 01:29:30,428
player 3 can really help us why because

1735
01:29:28,000 --> 01:29:32,679
I may have timing issues when who saw

1736
01:29:30,429 --> 01:29:34,650
the problem maybe somebody saw the

1737
01:29:32,679 --> 01:29:37,300
problem I'm turning into bi drove away

1738
01:29:34,650 --> 01:29:39,730
maybe I'm rushing into a highway

1739
01:29:37,300 --> 01:29:41,830
slowdown but there's nobody to tell me

1740
01:29:39,730 --> 01:29:44,650
that I'm rushing to a highway slow down

1741
01:29:41,830 --> 01:29:47,170
so now information is up in the air and

1742
01:29:44,650 --> 01:29:49,000
we've seen a lot of pile ups and I have

1743
01:29:47,170 --> 01:29:52,840
a lot of footage of pile ups from next

1744
01:29:49,000 --> 01:29:59,290
our cameras from the last winter and so

1745
01:29:52,840 --> 01:30:04,390
the idea instead is to wrap up all these

1746
01:29:59,290 --> 01:30:06,969
annotations and put them in tires which

1747
01:30:04,390 --> 01:30:10,630
represents the physical world we tiled

1748
01:30:06,969 --> 01:30:13,800
all the roads based on hundreds of

1749
01:30:10,630 --> 01:30:17,440
millions of miles and based on a maps

1750
01:30:13,800 --> 01:30:19,810
and now when I see something I'm going

1751
01:30:17,440 --> 01:30:22,120
to report to the tile I'm going to talk

1752
01:30:19,810 --> 01:30:24,670
to the tile no car will talk to any

1753
01:30:22,120 --> 01:30:26,320
other car there's no privacy problem

1754
01:30:24,670 --> 01:30:28,420
there's no timing problem because the

1755
01:30:26,320 --> 01:30:33,190
tile is always there and I'm going to

1756
01:30:28,420 --> 01:30:36,340
use lispy IDs both for the publisher and

1757
01:30:33,190 --> 01:30:38,169
the tiles and to subscribe to the

1758
01:30:36,340 --> 01:30:40,179
information about the roads so all this

1759
01:30:38,170 --> 01:30:44,650
is going to be combined use of lists and

1760
01:30:40,179 --> 01:30:47,520
based on h3 IDs so we did a lot of work

1761
01:30:44,650 --> 01:30:51,519
I mean this group here

1762
01:30:47,520 --> 01:30:55,360
especially Deena was the whip to get

1763
01:30:51,520 --> 01:30:57,160
some detail into into the draft and I

1764
01:30:55,360 --> 01:31:02,650
want to go over some of the progress

1765
01:30:57,160 --> 01:31:09,490
made with your permission okay all right

1766
01:31:02,650 --> 01:31:12,940
so what we have is a partition of the

1767
01:31:09,490 --> 01:31:16,300
timing of the roads using a ch3 r15

1768
01:31:12,940 --> 01:31:18,580
these are one square metal meter hexagon

1769
01:31:16,300 --> 01:31:20,410
tiles I think we talked about before why

1770
01:31:18,580 --> 01:31:23,650
hexagons it's almost a circle but it

1771
01:31:20,410 --> 01:31:26,410
tiles videos and elegantly you can

1772
01:31:23,650 --> 01:31:29,559
propagate neighbors if there is a

1773
01:31:26,410 --> 01:31:32,170
stopped vehicle and who is impacted and

1774
01:31:29,560 --> 01:31:33,970
it is very elegantly hierarchical there

1775
01:31:32,170 --> 01:31:36,670
is a very nice structure every seven

1776
01:31:33,970 --> 01:31:40,930
hexagons soro make up a bigger hexagon

1777
01:31:36,670 --> 01:31:43,320
make up a bigger hexagon so these cars

1778
01:31:40,930 --> 01:31:46,510
as you can see not only they see stuff

1779
01:31:43,320 --> 01:31:48,940
but they can there is a technology to

1780
01:31:46,510 --> 01:31:51,040
localize it which is where is it how far

1781
01:31:48,940 --> 01:31:52,230
is it from me from the camera and what

1782
01:31:51,040 --> 01:31:57,730
is it exactly

1783
01:31:52,230 --> 01:32:01,330
so all that translates into ID which

1784
01:31:57,730 --> 01:32:04,030
tile and an enum which is what do I see

1785
01:32:01,330 --> 01:32:05,410
okay I see something in this style but I

1786
01:32:04,030 --> 01:32:07,330
also some to see something in this style

1787
01:32:05,410 --> 01:32:10,630
I have the technology to do that so

1788
01:32:07,330 --> 01:32:13,630
there is a 64 bit to tell me what is it

1789
01:32:10,630 --> 01:32:17,130
that I see and 64 bit to tell me which

1790
01:32:13,630 --> 01:32:20,080
style of the earth specifically

1791
01:32:17,130 --> 01:32:23,470
accurately describing where exactly on

1792
01:32:20,080 --> 01:32:26,800
the earth is that annotation so that is

1793
01:32:23,470 --> 01:32:28,770
communicated through the Lisp routing

1794
01:32:26,800 --> 01:32:32,850
mechanism and routing here is critical

1795
01:32:28,770 --> 01:32:39,220
because if we are going to simplify

1796
01:32:32,850 --> 01:32:42,040
safety in a networking from the SRC

1797
01:32:39,220 --> 01:32:44,200
layer 1 through 7 2 layer 3 we

1798
01:32:42,040 --> 01:32:46,750
absolutely have to control the latency

1799
01:32:44,200 --> 01:32:49,450
because no matter how many advantages

1800
01:32:46,750 --> 01:32:52,270
we're going to have using a pure layer 3

1801
01:32:49,450 --> 01:32:56,230
IDF standard if we're going to misuse

1802
01:32:52,270 --> 01:32:58,720
cases because of latency then we will

1803
01:32:56,230 --> 01:33:00,610
not be able to put to push that

1804
01:32:58,720 --> 01:33:03,820
use through it's always gonna be

1805
01:33:00,610 --> 01:33:05,710
impaired by this bar and I'm gonna do

1806
01:33:03,820 --> 01:33:08,500
describe what we did using controlling

1807
01:33:05,710 --> 01:33:12,520
latency what kind of timing we were able

1808
01:33:08,500 --> 01:33:12,940
to get to with some AT&T test bit all

1809
01:33:12,520 --> 01:33:16,960
right

1810
01:33:12,940 --> 01:33:20,650
so how does it work just like in a list

1811
01:33:16,960 --> 01:33:24,610
mobile node the mobility clients okay

1812
01:33:20,650 --> 01:33:29,019
they have a lisp endpoint which is non

1813
01:33:24,610 --> 01:33:31,509
control plane when you start a ride you

1814
01:33:29,020 --> 01:33:34,360
get an eID this through the generic

1815
01:33:31,510 --> 01:33:36,250
network you triple a authenticate blah

1816
01:33:34,360 --> 01:33:39,910
blah blah you start alright you get an e

1817
01:33:36,250 --> 01:33:43,630
ID for yourself and an R rock for your

1818
01:33:39,910 --> 01:33:45,849
edge RTR okay and then you begin to

1819
01:33:43,630 --> 01:33:49,360
write we load balance the RT RS in the

1820
01:33:45,850 --> 01:33:52,810
city so that um all the cars will be

1821
01:33:49,360 --> 01:33:55,389
able to engage the RTR is in a given

1822
01:33:52,810 --> 01:34:00,220
metro area the latency here is fixed

1823
01:33:55,390 --> 01:34:04,030
it's the RF plus the mobile Metro area

1824
01:34:00,220 --> 01:34:07,150
network okay so now we want to exchange

1825
01:34:04,030 --> 01:34:10,120
information why because this car sees

1826
01:34:07,150 --> 01:34:12,940
this cars future and vice versa so we

1827
01:34:10,120 --> 01:34:14,950
want to share the information about the

1828
01:34:12,940 --> 01:34:20,049
road the state of the road using the

1829
01:34:14,950 --> 01:34:21,790
list network the client once he identify

1830
01:34:20,050 --> 01:34:24,400
something exactly where it is and what

1831
01:34:21,790 --> 01:34:27,250
it is what is the ena he sends that

1832
01:34:24,400 --> 01:34:27,849
information to the tile what does that

1833
01:34:27,250 --> 01:34:32,010
mean

1834
01:34:27,850 --> 01:34:34,540
they are 15 1 square meter is

1835
01:34:32,010 --> 01:34:37,320
algorithmically translated to the r9

1836
01:34:34,540 --> 01:34:41,550
which is a hundred thousands of those

1837
01:34:37,320 --> 01:34:44,889
okay and that's another hid

1838
01:34:41,550 --> 01:34:48,700
algorithmically by bit operation and the

1839
01:34:44,890 --> 01:34:49,210
r9 okay is translate algorithmically to

1840
01:34:48,700 --> 01:34:53,080
a list

1841
01:34:49,210 --> 01:34:59,220
PID okay so now I'm selling I'm sending

1842
01:34:53,080 --> 01:35:03,550
a packet from an ephemeral car Eid to a

1843
01:34:59,220 --> 01:35:07,120
state CID the r9 I'm telling you here is

1844
01:35:03,550 --> 01:35:09,160
something I saw here okay you may not

1845
01:35:07,120 --> 01:35:11,860
believe me you may require a few of

1846
01:35:09,160 --> 01:35:12,220
these but I can talk to the tile instead

1847
01:35:11,860 --> 01:35:16,540
of talking

1848
01:35:12,220 --> 01:35:21,250
to other cars that packet reaches the

1849
01:35:16,540 --> 01:35:25,000
edge RTR which then looks up where is

1850
01:35:21,250 --> 01:35:28,020
that r9 so we're going to deploy in

1851
01:35:25,000 --> 01:35:31,930
carrier conditions and by placing the r9

1852
01:35:28,020 --> 01:35:34,420
in in locations are locks which

1853
01:35:31,930 --> 01:35:37,480
guarantee latency as an example we were

1854
01:35:34,420 --> 01:35:40,090
able to do the following a car was

1855
01:35:37,480 --> 01:35:43,389
rushing through a junction about to

1856
01:35:40,090 --> 01:35:47,500
breach a red light 100 kilometers an

1857
01:35:43,390 --> 01:35:49,810
hour before it bridges the red light the

1858
01:35:47,500 --> 01:35:52,000
camera understood is going to breach a

1859
01:35:49,810 --> 01:35:55,450
red light the junction camera is

1860
01:35:52,000 --> 01:35:59,080
propagated information to the tile from

1861
01:35:55,450 --> 01:36:02,170
there to the cars which are involved in

1862
01:35:59,080 --> 01:36:05,410
that junction all of that in the time it

1863
01:36:02,170 --> 01:36:09,490
took that car to drive another 20

1864
01:36:05,410 --> 01:36:11,559
centimeters so everybody knew about a

1865
01:36:09,490 --> 01:36:14,410
red light bridge before the red light

1866
01:36:11,560 --> 01:36:18,640
bridge and this is only possible if you

1867
01:36:14,410 --> 01:36:20,370
control the route so the edge our key R

1868
01:36:18,640 --> 01:36:24,790
is going to look up where did I put that

1869
01:36:20,370 --> 01:36:28,150
state where is the Eric of that state or

1870
01:36:24,790 --> 01:36:30,640
which other HRT are it's connected to

1871
01:36:28,150 --> 01:36:34,089
and then it's going to route the traffic

1872
01:36:30,640 --> 01:36:38,520
just like normal is to the edge RT R and

1873
01:36:34,090 --> 01:36:39,670
from there to the control plane less

1874
01:36:38,520 --> 01:36:46,900
encapsulator

1875
01:36:39,670 --> 01:36:49,960
in the a ar9 state container okay is

1876
01:36:46,900 --> 01:36:53,589
that clear okay I'm seeing something

1877
01:36:49,960 --> 01:36:55,720
it's in this bigger area okay and I'm

1878
01:36:53,590 --> 01:36:59,230
telling that area that's what I saw okay

1879
01:36:55,720 --> 01:37:01,630
so the goal here is to have efficiency

1880
01:36:59,230 --> 01:37:03,519
meaning is bigger are as bigger

1881
01:37:01,630 --> 01:37:05,440
aggregation as possible for efficiency

1882
01:37:03,520 --> 01:37:07,390
so I don't have too many addresses so

1883
01:37:05,440 --> 01:37:12,280
our nines in a metro area there's about

1884
01:37:07,390 --> 01:37:14,020
20,000 okay a but not too big such that

1885
01:37:12,280 --> 01:37:16,269
when I'm now I'm going to update other

1886
01:37:14,020 --> 01:37:18,460
cars about what's going on I won't have

1887
01:37:16,270 --> 01:37:21,880
too much information to tell them which

1888
01:37:18,460 --> 01:37:24,370
is not relevant to them okay so in our

1889
01:37:21,880 --> 01:37:26,050
nine is big 100,000 r15

1890
01:37:24,370 --> 01:37:30,099
but only a thousand of those

1891
01:37:26,050 --> 01:37:33,309
our road so a thousand fields of that is

1892
01:37:30,099 --> 01:37:37,809
going to be updating the interested cars

1893
01:37:33,309 --> 01:37:39,809
okay how does that work okay if

1894
01:37:37,809 --> 01:37:43,360
publishes unicast is clear

1895
01:37:39,809 --> 01:37:50,050
updates are less multicast what

1896
01:37:43,360 --> 01:37:52,598
multicast if you're familiar with 83-78

1897
01:37:50,050 --> 01:37:56,159
a signal free okay

1898
01:37:52,599 --> 01:38:01,329
it's a multicast which does not

1899
01:37:56,159 --> 01:38:04,388
propagate it in a unknown way across the

1900
01:38:01,329 --> 01:38:06,659
network just like in traditional IGP but

1901
01:38:04,389 --> 01:38:12,040
it's based also on the mapping system

1902
01:38:06,659 --> 01:38:16,239
meaning that our nine address is now a

1903
01:38:12,040 --> 01:38:20,290
public safety Channel okay so I know it

1904
01:38:16,239 --> 01:38:23,138
is a is registered here as the public

1905
01:38:20,290 --> 01:38:27,670
safety channel but also whoever drives

1906
01:38:23,139 --> 01:38:29,980
into that online knows from his GPS that

1907
01:38:27,670 --> 01:38:30,849
he needs to tune in to this public

1908
01:38:29,980 --> 01:38:36,629
safety Channel

1909
01:38:30,849 --> 01:38:41,139
okay so he sends an MSD to his HRT are

1910
01:38:36,630 --> 01:38:43,480
from is data playing XD are to the HRT

1911
01:38:41,139 --> 01:38:44,889
are that I am tuning into this Public

1912
01:38:43,480 --> 01:38:49,178
Safety Channel mean somebody is

1913
01:38:44,889 --> 01:38:51,520
breaching a red light I want to know so

1914
01:38:49,179 --> 01:38:53,079
that HRT are then registers in the

1915
01:38:51,520 --> 01:38:55,989
mapping system registers in the mapping

1916
01:38:53,079 --> 01:38:57,849
system too that he has he has a customer

1917
01:38:55,989 --> 01:39:02,440
for that Public Safety channel which is

1918
01:38:57,849 --> 01:39:04,929
this block or the other block okay and I

1919
01:39:02,440 --> 01:39:07,449
mean from now on I will know there's a

1920
01:39:04,929 --> 01:39:09,400
emergency vehicle if it was an accident

1921
01:39:07,449 --> 01:39:12,638
if they stole vehicle it's a tree branch

1922
01:39:09,400 --> 01:39:15,429
of this deer if there is flooding I will

1923
01:39:12,639 --> 01:39:19,389
know because somebody will see will

1924
01:39:15,429 --> 01:39:22,449
update the r9 and the r9 will propagate

1925
01:39:19,389 --> 01:39:24,489
using signal free multicast so signal

1926
01:39:22,449 --> 01:39:26,589
free multicast I'm not sure is good for

1927
01:39:24,489 --> 01:39:29,019
everything but for this special Network

1928
01:39:26,590 --> 01:39:32,530
it's very very good because there's many

1929
01:39:29,020 --> 01:39:36,730
channels with not so many subscribers to

1930
01:39:32,530 --> 01:39:38,940
them okay so basically this is how it

1931
01:39:36,730 --> 01:39:40,120
works

1932
01:39:38,940 --> 01:39:42,429
the

1933
01:39:40,120 --> 01:39:45,640
aggression is going on with multiple

1934
01:39:42,430 --> 01:39:50,550
companies we think this stack for

1935
01:39:45,640 --> 01:39:55,390
mobility which adds to the generic stack

1936
01:39:50,550 --> 01:39:57,630
can help multiple companies engage in

1937
01:39:55,390 --> 01:40:03,580
using lists as a mobility network

1938
01:39:57,630 --> 01:40:07,230
specifically Intel Toyota and specific

1939
01:40:03,580 --> 01:40:11,890
carriers like Verizon AT&T and LG you

1940
01:40:07,230 --> 01:40:14,910
and we are also integrating tuning into

1941
01:40:11,890 --> 01:40:18,010
the public safety channels with

1942
01:40:14,910 --> 01:40:20,519
navigation apps that are now going to

1943
01:40:18,010 --> 01:40:23,560
see as an overlay as a graphical overlay

1944
01:40:20,520 --> 01:40:27,280
the condition ahead heads up for this

1945
01:40:23,560 --> 01:40:29,920
stress driving and not to get into how

1946
01:40:27,280 --> 01:40:33,540
to negotiate road situations always

1947
01:40:29,920 --> 01:40:38,260
right there on your navigation app is

1948
01:40:33,540 --> 01:40:41,980
kind of a strip so by by factoring out

1949
01:40:38,260 --> 01:40:44,170
state and making it addressable we

1950
01:40:41,980 --> 01:40:46,179
opened up the system we are making

1951
01:40:44,170 --> 01:40:49,240
interoperability easier there is

1952
01:40:46,180 --> 01:40:52,540
interest to host these states to

1953
01:40:49,240 --> 01:40:54,820
interact with these states and I think

1954
01:40:52,540 --> 01:40:57,610
we brought it to a maturity level which

1955
01:40:54,820 --> 01:41:02,080
is pretty reasonable and hopefully

1956
01:40:57,610 --> 01:41:05,099
become part of the workgroup items going

1957
01:41:02,080 --> 01:41:08,890
forward because mobility is quite

1958
01:41:05,100 --> 01:41:13,270
important these days but we kept the

1959
01:41:08,890 --> 01:41:17,410
draft such that it does not change the

1960
01:41:13,270 --> 01:41:19,720
list protocol so changing from HIDs to e

1961
01:41:17,410 --> 01:41:24,490
ids is algorithmic there's no need for

1962
01:41:19,720 --> 01:41:29,710
special consideration we use RFC's six

1963
01:41:24,490 --> 01:41:31,570
eight three zero and a signal free in a

1964
01:41:29,710 --> 01:41:34,240
very specific way which we have

1965
01:41:31,570 --> 01:41:37,480
documented we are that in terms of the

1966
01:41:34,240 --> 01:41:40,780
BDD in order to do that and we are able

1967
01:41:37,480 --> 01:41:44,349
to sort of give development kit or just

1968
01:41:40,780 --> 01:41:48,309
make people use list map stacks so they

1969
01:41:44,350 --> 01:41:50,620
can integrate mobility clients first

1970
01:41:48,310 --> 01:41:53,650
responder applications command and

1971
01:41:50,620 --> 01:41:55,809
control by Highway Patrol's and

1972
01:41:53,650 --> 01:41:57,910
other such applications in entertainment

1973
01:41:55,810 --> 01:42:02,610
center in cars so the potential for

1974
01:41:57,910 --> 01:42:06,180
interoperability here is really cool

1975
01:42:02,610 --> 01:42:06,179
that's about it

1976
01:42:10,470 --> 01:42:17,110
if there's any questions a consideration

1977
01:42:15,280 --> 01:42:19,660
I know it looks like a kind of specific

1978
01:42:17,110 --> 01:42:22,420
application but it's really about open

1979
01:42:19,660 --> 01:42:25,930
interoperable absolutely controlled

1980
01:42:22,420 --> 01:42:28,210
routing where is the state and how it's

1981
01:42:25,930 --> 01:42:30,280
being talked to yeah I want to make it

1982
01:42:28,210 --> 01:42:32,590
this fabric I want to make a comment on

1983
01:42:30,280 --> 01:42:33,940
why I think this use case is very

1984
01:42:32,590 --> 01:42:36,360
interesting for this but if you can

1985
01:42:33,940 --> 01:42:39,429
leave this slide I think he talks a lot

1986
01:42:36,360 --> 01:42:43,389
so we are seeing a use case where the

1987
01:42:39,430 --> 01:42:47,560
brings together the use of mobility with

1988
01:42:43,390 --> 01:42:51,600
an overlay the use of the mapping system

1989
01:42:47,560 --> 01:42:54,760
to map something not as traditional as

1990
01:42:51,600 --> 01:43:02,020
PID twirl of mapping as we have done so

1991
01:42:54,760 --> 01:43:06,640
far and also that try to take advantage

1992
01:43:02,020 --> 01:43:11,020
of the locality of the service offer by

1993
01:43:06,640 --> 01:43:14,950
the by the market servers that are that

1994
01:43:11,020 --> 01:43:19,870
are storing the demand pin itself and

1995
01:43:14,950 --> 01:43:22,090
then on top of that using single free

1996
01:43:19,870 --> 01:43:25,480
multicast to basically reach a featured

1997
01:43:22,090 --> 01:43:28,510
efficiently all the devices that are

1998
01:43:25,480 --> 01:43:31,509
subscribed to a certain information so

1999
01:43:28,510 --> 01:43:33,790
it's a combination of use cases that are

2000
01:43:31,510 --> 01:43:37,570
basically bringing together things that

2001
01:43:33,790 --> 01:43:42,100
in the last few years we thought were

2002
01:43:37,570 --> 01:43:43,990
possible with the least but what I think

2003
01:43:42,100 --> 01:43:45,730
is very helpful this use case here is

2004
01:43:43,990 --> 01:43:48,370
bringing all together in one you still

2005
01:43:45,730 --> 01:43:51,040
with a very clean practical application

2006
01:43:48,370 --> 01:43:53,170
also I agree which around that this is

2007
01:43:51,040 --> 01:43:55,510
specific to this particular abuse case

2008
01:43:53,170 --> 01:43:57,990
but I think is not very hard to think of

2009
01:43:55,510 --> 01:44:01,540
other use cases that are not related to

2010
01:43:57,990 --> 01:44:04,450
vehicle mobility and traffic road

2011
01:44:01,540 --> 01:44:06,710
conditions that may have similar

2012
01:44:04,450 --> 01:44:08,389
attributes right you want to have basic

2013
01:44:06,710 --> 01:44:11,630
the mapping service that is highly

2014
01:44:08,390 --> 01:44:15,860
distributed available at the edge of the

2015
01:44:11,630 --> 01:44:18,920
network that offers you quasi real-time

2016
01:44:15,860 --> 01:44:22,190
information so I think this is very

2017
01:44:18,920 --> 01:44:24,050
general in many application that we see

2018
01:44:22,190 --> 01:44:28,599
coming so that's why I think there is a

2019
01:44:24,050 --> 01:44:32,900
lot of value in you know working on this

2020
01:44:28,600 --> 01:44:35,420
use case and basically trying to see how

2021
01:44:32,900 --> 01:44:37,670
all the things that we have done in the

2022
01:44:35,420 --> 01:44:40,180
least working group fit together

2023
01:44:37,670 --> 01:44:43,400
and it would be interesting to see if

2024
01:44:40,180 --> 01:44:48,170
you know there are new things that are

2025
01:44:43,400 --> 01:44:49,610
needed it's very nice that so far most

2026
01:44:48,170 --> 01:44:51,620
of the requirements that Sharon

2027
01:44:49,610 --> 01:44:54,830
articulated seems to be addressed by

2028
01:44:51,620 --> 01:45:00,019
what we have in the overall this party

2029
01:44:54,830 --> 01:45:02,269
tech chure so this is very useful I

2030
01:45:00,020 --> 01:45:07,850
think activity for for this working

2031
01:45:02,270 --> 01:45:10,219
group yeah thank you for that Fabio like

2032
01:45:07,850 --> 01:45:14,390
that there's English those many things

2033
01:45:10,219 --> 01:45:17,300
we selected what is very attuned to this

2034
01:45:14,390 --> 01:45:19,580
use case and we use it in a very

2035
01:45:17,300 --> 01:45:21,469
specific way but it's also important for

2036
01:45:19,580 --> 01:45:23,030
us to stay in contact with this

2037
01:45:21,469 --> 01:45:25,280
revolution for example if I have a

2038
01:45:23,030 --> 01:45:27,710
deployment of Verizon and AT&T I would

2039
01:45:25,280 --> 01:45:32,900
need an overlay so it's important to

2040
01:45:27,710 --> 01:45:36,050
stay with with the evolution of list

2041
01:45:32,900 --> 01:45:39,739
even though there is a twist here which

2042
01:45:36,050 --> 01:45:47,050
is we're talking to tiles and that's the

2043
01:45:39,739 --> 01:45:47,049
twist here the indirect the broker okay

2044
01:45:47,410 --> 01:45:57,620
any more comments or questions I just

2045
01:45:51,440 --> 01:45:59,509
have a question you know can if we just

2046
01:45:57,620 --> 01:46:02,360
wanted to publish this as a use case and

2047
01:45:59,510 --> 01:46:04,430
made it informational RFC what where are

2048
01:46:02,360 --> 01:46:06,889
the steps we have to go through does it

2049
01:46:04,430 --> 01:46:09,440
require the working group does it not do

2050
01:46:06,890 --> 01:46:12,160
you have any preferences okay that the

2051
01:46:09,440 --> 01:46:16,309
question of how to advance the document

2052
01:46:12,160 --> 01:46:19,910
turns on a different point than the IETF

2053
01:46:16,310 --> 01:46:20,780
procedures in terms of our Charter it's

2054
01:46:19,910 --> 01:46:22,420
okay we could

2055
01:46:20,780 --> 01:46:25,059
Publishing the informational document

2056
01:46:22,420 --> 01:46:27,860
because this deals with geolocation

2057
01:46:25,059 --> 01:46:30,949
topics I'm trying to find out from the

2058
01:46:27,860 --> 01:46:33,530
geolocation experts here at the IETF how

2059
01:46:30,949 --> 01:46:35,750
they want to make sure that appropriate

2060
01:46:33,530 --> 01:46:37,309
review from the teams who have dealt

2061
01:46:35,750 --> 01:46:40,070
with these problems before because this

2062
01:46:37,309 --> 01:46:42,619
is not a new topic to the IETF then the

2063
01:46:40,070 --> 01:46:44,329
usage is new but the general topic of

2064
01:46:42,619 --> 01:46:47,269
communicating information about geo

2065
01:46:44,329 --> 01:46:49,070
locations and such like his one that

2066
01:46:47,270 --> 01:46:50,960
they've worked on a lot so I want I'm

2067
01:46:49,070 --> 01:46:52,519
going this week to talk to some of the

2068
01:46:50,960 --> 01:46:55,880
people who've been involved with that

2069
01:46:52,520 --> 01:46:58,250
historically and figure out a good path

2070
01:46:55,880 --> 01:47:00,889
because when speaking personally not as

2071
01:46:58,250 --> 01:47:03,050
chair I like the work as chair I need to

2072
01:47:00,889 --> 01:47:04,579
figure out what the best way is to get

2073
01:47:03,050 --> 01:47:07,099
the appropriate review and appropriate

2074
01:47:04,579 --> 01:47:10,400
progression so Joe just one comment on

2075
01:47:07,099 --> 01:47:12,559
this it's true it's geo state but the

2076
01:47:10,400 --> 01:47:15,110
thing here is that it's a brokered

2077
01:47:12,559 --> 01:47:18,349
Network meeting shared state there's not

2078
01:47:15,110 --> 01:47:21,320
very geo state but the shared state is

2079
01:47:18,349 --> 01:47:23,000
the the principal but historically

2080
01:47:21,320 --> 01:47:24,860
there's been sensitivity when we deal

2081
01:47:23,000 --> 01:47:27,230
with geographic information so I want to

2082
01:47:24,860 --> 01:47:28,940
make sure not that I want to make sure

2083
01:47:27,230 --> 01:47:31,848
we get the review and involvement for

2084
01:47:28,940 --> 01:47:33,919
people have been in that space and I

2085
01:47:31,849 --> 01:47:36,469
don't care which working group ends up

2086
01:47:33,920 --> 01:47:37,909
owning the problem it may be that what

2087
01:47:36,469 --> 01:47:40,309
we'll do is ask you to present this

2088
01:47:37,909 --> 01:47:42,949
material at the ops area group next time

2089
01:47:40,309 --> 01:47:44,750
or something I've got to talk to folks

2090
01:47:42,949 --> 01:47:46,669
I've talked to one of the ops ADEs I've

2091
01:47:44,750 --> 01:47:48,530
talked to some of the others I've talked

2092
01:47:46,670 --> 01:47:50,360
to some of the geolocation people who've

2093
01:47:48,530 --> 01:47:52,610
been involved turns out Richard Barnes

2094
01:47:50,360 --> 01:47:55,070
whom I'm on another committee with is

2095
01:47:52,610 --> 01:47:57,860
very it was very active in that we'll

2096
01:47:55,070 --> 01:48:00,920
just will close the loop and find out

2097
01:47:57,860 --> 01:48:03,558
the best way to move it forward so on a

2098
01:48:00,920 --> 01:48:05,869
personal note they appreciate this peer

2099
01:48:03,559 --> 01:48:07,309
review to keep grilling this thing we're

2100
01:48:05,869 --> 01:48:07,839
not gonna throw you out a list don't

2101
01:48:07,309 --> 01:48:10,070
worry

2102
01:48:07,840 --> 01:48:11,659
was that a response to making it

2103
01:48:10,070 --> 01:48:14,329
informational or just any type of work

2104
01:48:11,659 --> 01:48:16,699
just whatever type I mean it looks to me

2105
01:48:14,329 --> 01:48:18,949
like it it's mostly informational it

2106
01:48:16,699 --> 01:48:20,629
needs just to find a new al-kahf but

2107
01:48:18,949 --> 01:48:22,098
that's all and the al khair for

2108
01:48:20,630 --> 01:48:24,949
registration procedures would allow that

2109
01:48:22,099 --> 01:48:27,940
but that's a that's an it in the picture

2110
01:48:24,949 --> 01:48:27,940
as far as I'm concerned

2111
01:48:33,560 --> 01:48:55,460
okay we are done with the presentations

2112
01:48:36,360 --> 01:48:55,460
we have to discuss again

2113
01:49:07,640 --> 01:49:10,819
[Music]

2114
01:49:53,270 --> 01:49:56,349
[Music]

2115
01:50:19,430 --> 01:50:22,529
[Music]

