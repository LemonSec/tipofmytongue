1
00:00:04,700 --> 00:00:12,879
we starting there but now are we okay

2
00:00:10,610 --> 00:00:12,879
and

3
00:00:12,910 --> 00:00:19,759
this is going to be the TSB WG working

4
00:00:17,900 --> 00:00:21,020
group please don't leave if you think

5
00:00:19,760 --> 00:00:25,700
you want to know the group because this

6
00:00:21,020 --> 00:00:53,510
group will be good and fun can you hear

7
00:00:25,700 --> 00:00:59,120
me I found an on button yeah okay I can

8
00:00:53,510 --> 00:01:03,079
walk around with this we are organizing

9
00:00:59,120 --> 00:01:06,200
the second of the TSV WG meeting

10
00:01:03,079 --> 00:01:11,750
thoughts is the transport area working

11
00:01:06,200 --> 00:01:16,039
group we have an agenda uploaded we have

12
00:01:11,750 --> 00:01:21,320
a note-taker over here and a backup

13
00:01:16,039 --> 00:01:23,780
note-taker is perhaps okay we have a

14
00:01:21,320 --> 00:01:27,679
primary note-taker that's okay we will

15
00:01:23,780 --> 00:01:30,110
need a jap ascribe partly because one of

16
00:01:27,680 --> 00:01:32,930
our working group chairs your notice is

17
00:01:30,110 --> 00:01:36,550
not here so could somebody volunteers a

18
00:01:32,930 --> 00:01:39,460
jabber scribe place over there Chris

19
00:01:36,550 --> 00:01:43,369
[Music]

20
00:01:39,460 --> 00:01:44,079
okay um David do you want to see if your

21
00:01:43,369 --> 00:01:47,810
mic works

22
00:01:44,079 --> 00:01:53,689
okay so we'll talk about the agenda here

23
00:01:47,810 --> 00:01:57,649
briefly here's the note well reminder we

24
00:01:53,689 --> 00:02:00,460
have three three major items for the

25
00:01:57,649 --> 00:02:06,259
agenda today we're going to start with

26
00:02:00,460 --> 00:02:08,119
the elf 4's drafts of looking at Gogol

27
00:02:06,259 --> 00:02:10,610
this meeting is to figure out where we

28
00:02:08,119 --> 00:02:13,190
are in terms of readiness of those

29
00:02:10,610 --> 00:02:14,930
drafts working group last call there'll

30
00:02:13,190 --> 00:02:17,000
be a number of presentations here the

31
00:02:14,930 --> 00:02:19,160
what's what's on the slide may not be

32
00:02:17,000 --> 00:02:22,430
exactly what we do in terms of slide

33
00:02:19,160 --> 00:02:25,100
decks although Bob wins a prize because

34
00:02:22,430 --> 00:02:27,700
he's he's almost first up

35
00:02:25,100 --> 00:02:29,720
and let's see the just-in-time

36
00:02:27,700 --> 00:02:36,589
psychometric I think was under ten

37
00:02:29,720 --> 00:02:40,070
minutes this time the some congestion

38
00:02:36,590 --> 00:02:42,140
experienced is second major item we do

39
00:02:40,070 --> 00:02:44,260
today and then we are going to try to

40
00:02:42,140 --> 00:02:47,329
leave some time down at the end for

41
00:02:44,260 --> 00:02:53,239
discussion of some proposed new work on

42
00:02:47,330 --> 00:02:55,610
DC CP multipath as we get started here

43
00:02:53,240 --> 00:02:58,160
we're going to explain exactly what

44
00:02:55,610 --> 00:03:02,720
we're going to do on how we're going to

45
00:02:58,160 --> 00:03:07,100
conduct the l4s discussion anybody want

46
00:03:02,720 --> 00:03:10,220
to bash the agenda we will be enforcing

47
00:03:07,100 --> 00:03:11,900
some cut-offs in particular I'm quite

48
00:03:10,220 --> 00:03:13,880
certain we could spend this entire

49
00:03:11,900 --> 00:03:16,070
session and probably until four o'clock

50
00:03:13,880 --> 00:03:18,530
today discussing everything there is

51
00:03:16,070 --> 00:03:21,140
about l4s that's not going to happen

52
00:03:18,530 --> 00:03:23,300
there will be there will be a time cut

53
00:03:21,140 --> 00:03:24,950
off and apologize in advance to people

54
00:03:23,300 --> 00:03:27,320
who are going to get cut off at the mic

55
00:03:24,950 --> 00:03:29,709
lines based on what I think is about

56
00:03:27,320 --> 00:03:32,600
what what we think is about to happen

57
00:03:29,710 --> 00:03:35,870
but we are going to make sure that there

58
00:03:32,600 --> 00:03:40,700
is time for for the SCE presentation

59
00:03:35,870 --> 00:03:50,140
today and we are hoping to get to DC CDC

60
00:03:40,700 --> 00:03:52,609
CP multipath you'll see this man is

61
00:03:50,140 --> 00:03:55,459
david black in case you don't know him

62
00:03:52,610 --> 00:03:58,240
and I'm Gauri Fairhurst where's Eddy as

63
00:03:55,460 --> 00:03:58,240
we said his remote

64
00:04:17,820 --> 00:04:38,620
mmm-hmm just when I need them it's not

65
00:04:20,829 --> 00:04:45,659
going 40 yeah that's okay ma'am

66
00:04:38,620 --> 00:04:48,660
fortunately we got to the prom Pierre is

67
00:04:45,660 --> 00:04:48,660
serious

68
00:04:54,969 --> 00:04:59,199
you're the manager good does anybody

69
00:04:57,159 --> 00:05:00,938
know them thought that the magic opening

70
00:04:59,199 --> 00:05:07,289
me open a new tab sequence on a

71
00:05:00,939 --> 00:05:11,349
Chromebook all right control what

72
00:05:07,289 --> 00:05:23,610
control T control tenant guard let's try

73
00:05:11,349 --> 00:05:25,569
that I can start anyway counter okay I

74
00:05:23,610 --> 00:05:27,340
shall tell you a little bit how we're

75
00:05:25,569 --> 00:05:30,759
going to run the l4s part of the

76
00:05:27,340 --> 00:05:35,198
discussion today the this part we'll

77
00:05:30,759 --> 00:05:36,699
start with a quick review of the an IP

78
00:05:35,199 --> 00:05:40,060
our discussion that we've seen on the

79
00:05:36,699 --> 00:05:42,340
list I shall say before I said before

80
00:05:40,060 --> 00:05:44,919
anything else is said this is what the

81
00:05:42,340 --> 00:05:48,159
chassis of the IP are staring down at

82
00:05:44,919 --> 00:05:51,789
the mailing list if you have IPR

83
00:05:48,159 --> 00:05:53,770
concerns please read the IP are

84
00:05:51,789 --> 00:05:56,680
associated with the documents in the

85
00:05:53,770 --> 00:05:58,810
tracker and please consult people who

86
00:05:56,680 --> 00:06:01,810
understand IPR concerning the way in

87
00:05:58,810 --> 00:06:03,189
which you view IPR we will not make a

88
00:06:01,810 --> 00:06:05,759
determination but we would like to

89
00:06:03,189 --> 00:06:09,339
summarize I'm just summarizing which me

90
00:06:05,759 --> 00:06:11,649
after summarizing Bob will present the

91
00:06:09,339 --> 00:06:13,360
current status of the drafts which have

92
00:06:11,649 --> 00:06:16,750
been asked to go to Wickham group last

93
00:06:13,360 --> 00:06:19,629
call these drafts were brought to the

94
00:06:16,750 --> 00:06:23,610
working group I think in 2016 in Buenos

95
00:06:19,629 --> 00:06:23,610
Aires if you remember rhinoceros and

96
00:06:24,120 --> 00:06:31,870
they were adopted in Prague

97
00:06:26,229 --> 00:06:34,779
so what No thank you for the detail

98
00:06:31,870 --> 00:06:37,360
adopts in Prague and now we consider

99
00:06:34,779 --> 00:06:39,430
that it might be an appropriate time for

100
00:06:37,360 --> 00:06:41,199
this working group to ask are these

101
00:06:39,430 --> 00:06:45,099
documents ready for a working group last

102
00:06:41,199 --> 00:06:47,469
call we need to have a working written

103
00:06:45,099 --> 00:06:48,849
last call to judge consensus we do have

104
00:06:47,469 --> 00:06:52,569
a working group last call to judge

105
00:06:48,849 --> 00:06:54,399
technical issues only when the documents

106
00:06:52,569 --> 00:06:56,020
were complete a working group last call

107
00:06:54,399 --> 00:06:57,520
when we consider progressing them and

108
00:06:56,020 --> 00:06:59,469
documents can go through multiple

109
00:06:57,520 --> 00:07:01,000
working group last calls or simply

110
00:06:59,469 --> 00:07:03,699
returned to the working group after that

111
00:07:01,000 --> 00:07:05,769
process so in no way just this terminate

112
00:07:03,699 --> 00:07:08,879
the process but it's the beginning of

113
00:07:05,769 --> 00:07:08,879
the end of a

114
00:07:09,900 --> 00:07:14,969
or perhaps at least the end of the

115
00:07:12,790 --> 00:07:14,970
beginning

116
00:07:18,360 --> 00:07:24,490
absolutely okay so there's been some

117
00:07:21,760 --> 00:07:27,520
recent discussion on the list and

118
00:07:24,490 --> 00:07:28,780
offline about IP our discussion I'm

119
00:07:27,520 --> 00:07:30,280
going to quick summarize that but I

120
00:07:28,780 --> 00:07:32,320
first need to put in disclaimer

121
00:07:30,280 --> 00:07:35,020
you're looking up chairs are not lawyers

122
00:07:32,320 --> 00:07:37,780
this slide deck does not contain legal

123
00:07:35,020 --> 00:07:39,940
advice if you want legal advice you need

124
00:07:37,780 --> 00:07:45,250
to talk to a lawyer your chair is the

125
00:07:39,940 --> 00:07:47,080
ietf disclaim all responsibility for any

126
00:07:45,250 --> 00:07:49,510
legal consequences of using the

127
00:07:47,080 --> 00:07:51,550
information this slot in in in these

128
00:07:49,510 --> 00:08:00,130
slides to make decisions that involve

129
00:07:51,550 --> 00:08:03,280
legal matters okay hang on it should be

130
00:08:00,130 --> 00:08:05,320
okay no idea but I hit the right button

131
00:08:03,280 --> 00:08:07,840
here also works okay so the history our

132
00:08:05,320 --> 00:08:12,070
discussion is a toka raised concerns

133
00:08:07,840 --> 00:08:19,510
over some defensive suspension clauses

134
00:08:12,070 --> 00:08:24,159
in the Alcatel Lucent IP IP IPR

135
00:08:19,510 --> 00:08:27,240
declarations broad conditions was

136
00:08:24,160 --> 00:08:34,030
unclear whether the declarations

137
00:08:27,240 --> 00:08:39,580
superseded the previous IPA and terms in

138
00:08:34,030 --> 00:08:42,220
a previous IPR note this isn't resolved

139
00:08:39,580 --> 00:08:44,980
both when the apparently still apply we

140
00:08:42,220 --> 00:08:47,710
summarized discussion that was on the

141
00:08:44,980 --> 00:08:49,750
list you'll need to go for the details

142
00:08:47,710 --> 00:08:53,800
there's a link in the slide deck we can

143
00:08:49,750 --> 00:08:56,410
go find that the terms that we saw in

144
00:08:53,800 --> 00:08:58,930
those IPR declarations we're similar to

145
00:08:56,410 --> 00:09:00,610
terms that we've seen in other IETF IPR

146
00:08:58,930 --> 00:09:02,800
declarations that's not a statement

147
00:09:00,610 --> 00:09:04,780
about good bad right or wrong it's

148
00:09:02,800 --> 00:09:08,040
simply a factual statement that there is

149
00:09:04,780 --> 00:09:10,870
similarity okay

150
00:09:08,040 --> 00:09:15,250
relationship of IPR

151
00:09:10,870 --> 00:09:19,120
to the draft the 8 qm couple dual q--

152
00:09:15,250 --> 00:09:20,529
draft is a framework for coupling a QMS

153
00:09:19,120 --> 00:09:23,889
with nan-oh

154
00:09:20,529 --> 00:09:25,120
imitation appendixes Bob Brisco who's

155
00:09:23,889 --> 00:09:28,899
been have an involvement posted his

156
00:09:25,120 --> 00:09:31,449
analysis the list quote he quoted extra

157
00:09:28,899 --> 00:09:33,430
exhibitor from that is the claims cut

158
00:09:31,449 --> 00:09:36,008
all cover non-essential and

159
00:09:33,430 --> 00:09:38,290
non-preferred aspects of a QM dual Q

160
00:09:36,009 --> 00:09:41,259
coupled we've got a list here I'll turn

161
00:09:38,290 --> 00:09:46,059
it up a cake of a tournament ations of

162
00:09:41,259 --> 00:09:48,639
Aiken dual Q coupled you can find a pie

163
00:09:46,059 --> 00:09:51,990
- and a pen describing pendeks a of the

164
00:09:48,639 --> 00:09:54,279
draft curvy red described in Appendix B

165
00:09:51,990 --> 00:09:55,920
with there's been discussion the working

166
00:09:54,279 --> 00:09:59,680
group that's made it pretty clear that

167
00:09:55,920 --> 00:10:02,319
FQ could be used to do this and there

168
00:09:59,680 --> 00:10:06,099
may be others all this is just me

169
00:10:02,319 --> 00:10:07,449
provided as as information every

170
00:10:06,100 --> 00:10:11,800
participant needs to make up their own

171
00:10:07,449 --> 00:10:15,189
mind about applicability or lack thereof

172
00:10:11,800 --> 00:10:17,199
of the patents to the drafts we're

173
00:10:15,189 --> 00:10:22,269
talking about and level of concern to be

174
00:10:17,199 --> 00:10:26,529
placed on the IPR the contents of the

175
00:10:22,269 --> 00:10:31,300
IPR notices in alcatel-lucent any

176
00:10:26,529 --> 00:10:48,939
questions oh I love seeing empty Micra

177
00:10:31,300 --> 00:10:55,149
lines after legal nonsense okay with

178
00:10:48,939 --> 00:10:59,469
that I think Bob is up Bob okay you need

179
00:10:55,149 --> 00:11:03,819
to think about how let's see how many

180
00:10:59,470 --> 00:11:07,720
slides do you have here 21 okay yeah

181
00:11:03,819 --> 00:11:09,819
please please please be please make good

182
00:11:07,720 --> 00:11:13,870
use of time because yes we need all the

183
00:11:09,819 --> 00:11:18,149
background but we really we need to

184
00:11:13,870 --> 00:11:22,899
spend the time on discussion yep okay

185
00:11:18,149 --> 00:11:29,139
yeah it's about this redraw should work

186
00:11:22,899 --> 00:11:30,160
we think try that never worked bingo

187
00:11:29,139 --> 00:11:33,329
right

188
00:11:30,160 --> 00:11:34,860
so I'm gonna take a bit longer to

189
00:11:33,329 --> 00:11:39,729
explain

190
00:11:34,860 --> 00:11:41,500
l4s background because the sort of heat

191
00:11:39,730 --> 00:11:42,910
around this debate may have encouraged

192
00:11:41,500 --> 00:11:46,060
some other people to get interested so

193
00:11:42,910 --> 00:11:47,500
the motivation for l4s is ultra low

194
00:11:46,060 --> 00:11:49,888
queuing delay for all internet

195
00:11:47,500 --> 00:11:53,880
applications with the emphasis on all

196
00:11:49,889 --> 00:11:57,880
the idea being that by changing TCP

197
00:11:53,880 --> 00:12:01,660
that's the problem so it includes

198
00:11:57,880 --> 00:12:06,490
capacity seeking and the sort of

199
00:12:01,660 --> 00:12:09,790
performance we can get is something like

200
00:12:06,490 --> 00:12:13,269
100 200 microseconds over the Internet

201
00:12:09,790 --> 00:12:19,480
at the median COO delay as you see there

202
00:12:13,269 --> 00:12:21,550
a 50 this plot is a plot of Q delay on

203
00:12:19,480 --> 00:12:24,430
the horizontal axis in milliseconds if

204
00:12:21,550 --> 00:12:27,099
you can't see that and log of the

205
00:12:24,430 --> 00:12:30,550
percentile on the vertical scale it's

206
00:12:27,100 --> 00:12:36,160
called a cumulative log cumulative

207
00:12:30,550 --> 00:12:38,019
distribution function and the tail is

208
00:12:36,160 --> 00:12:41,889
important this is the real message for

209
00:12:38,019 --> 00:12:44,350
this slide that for particularly

210
00:12:41,889 --> 00:12:47,199
real-time delivery you need the higher

211
00:12:44,350 --> 00:12:49,720
percentiles to not have high delay

212
00:12:47,199 --> 00:12:52,510
otherwise most real-time software will

213
00:12:49,720 --> 00:12:57,610
buffer enough to be able to pick up that

214
00:12:52,510 --> 00:13:00,399
tail and so getting the tail down to in

215
00:12:57,610 --> 00:13:03,430
this case 8 milliseconds at the five

216
00:13:00,399 --> 00:13:05,079
nines percentile is important probably

217
00:13:03,430 --> 00:13:06,880
wouldn't buffer to five nines you'd

218
00:13:05,079 --> 00:13:10,709
probably buffer to three nines or to

219
00:13:06,880 --> 00:13:12,750
nine something like that and and just

220
00:13:10,709 --> 00:13:14,800
lose the rest

221
00:13:12,750 --> 00:13:17,860
the other interesting thing that's

222
00:13:14,800 --> 00:13:20,019
important at this slide is well there

223
00:13:17,860 --> 00:13:24,449
two more interesting things firstly this

224
00:13:20,019 --> 00:13:27,100
is with really hammering the link it's

225
00:13:24,449 --> 00:13:30,329
in there's two queues here and it's

226
00:13:27,100 --> 00:13:34,990
there's 300 web sessions per second

227
00:13:30,329 --> 00:13:37,508
hitting this link on in each queue so

228
00:13:34,990 --> 00:13:39,430
600 web sessions for a second with a

229
00:13:37,509 --> 00:13:42,100
range of flow file sizes and all the

230
00:13:39,430 --> 00:13:43,620
rest of it details are all where I'm

231
00:13:42,100 --> 00:13:46,170
looking to read them out

232
00:13:43,620 --> 00:13:49,019
and the other main point is that it is

233
00:13:46,170 --> 00:13:51,930
data center TTP or what's now called TCP

234
00:13:49,019 --> 00:13:55,860
Prague but this was done with the data

235
00:13:51,930 --> 00:13:58,290
since TCP that gives you the benefit

236
00:13:55,860 --> 00:14:00,600
it's really the end system that gives

237
00:13:58,290 --> 00:14:03,029
you the benefit not the queue all the

238
00:14:00,600 --> 00:14:05,579
queue has to do is have a ACN marking

239
00:14:03,029 --> 00:14:11,550
threshold for the N system to bounce off

240
00:14:05,579 --> 00:14:13,620
if you like and as you can see that it's

241
00:14:11,550 --> 00:14:16,290
the blue one is there is the one from

242
00:14:13,620 --> 00:14:19,529
David sense DCP so it's about an order

243
00:14:16,290 --> 00:14:22,050
of magnitude at every percentile and

244
00:14:19,529 --> 00:14:24,300
that's the trick it's because it's got

245
00:14:22,050 --> 00:14:26,339
smaller sorties so you can have both

246
00:14:24,300 --> 00:14:29,420
lower delay in the queue let's parents

247
00:14:26,339 --> 00:14:32,459
in the queue and still full utilization

248
00:14:29,420 --> 00:14:37,319
right moving on to coexistence which is

249
00:14:32,459 --> 00:14:39,029
going to be a theme throughout the the

250
00:14:37,319 --> 00:14:41,279
problem is that because of those smaller

251
00:14:39,029 --> 00:14:45,059
sore teeth it's more aggressive and so

252
00:14:41,279 --> 00:14:47,639
one solution is to use the dual queued

253
00:14:45,059 --> 00:14:52,019
couple they um and that allows you to do

254
00:14:47,639 --> 00:14:53,850
this without flow inspection if it has

255
00:14:52,019 --> 00:14:57,540
two queues and they're coupled together

256
00:14:53,850 --> 00:15:00,809
in such a way that there's a squaring in

257
00:14:57,540 --> 00:15:05,250
the congestion coupling that means that

258
00:15:00,809 --> 00:15:06,300
the l4s marking is more aggressive to

259
00:15:05,250 --> 00:15:09,059
counterbalance the more aggressive

260
00:15:06,300 --> 00:15:14,008
congestion control you can see the P

261
00:15:09,059 --> 00:15:16,829
versus one of the P sort of get the

262
00:15:14,009 --> 00:15:18,540
laser pointer which I guess also I don't

263
00:15:16,829 --> 00:15:22,138
know which one to point that I'll point

264
00:15:18,540 --> 00:15:24,529
of this one the P versus P squared there

265
00:15:22,139 --> 00:15:31,589
and then one over P versus root P right

266
00:15:24,529 --> 00:15:33,389
next the where buried this in to the

267
00:15:31,589 --> 00:15:36,750
slide deck it's always been possible and

268
00:15:33,389 --> 00:15:38,550
that is to use an FQ system for

269
00:15:36,750 --> 00:15:42,059
coexistence to solve the coexistence

270
00:15:38,550 --> 00:15:45,479
problem so if Q X X X where X X X might

271
00:15:42,059 --> 00:15:48,689
be coddled pi whatever so if you want to

272
00:15:45,480 --> 00:15:54,990
do l4 s at an F Q X X X system it's a

273
00:15:48,689 --> 00:15:55,930
simple patch put FEC t1 mark with a

274
00:15:54,990 --> 00:15:59,670
shallow threshold

275
00:15:55,930 --> 00:16:05,229
Aram Eric the demos a put this code into

276
00:15:59,670 --> 00:16:07,870
Mecca Caudill quite early on and then

277
00:16:05,230 --> 00:16:11,050
you you base your marking on the

278
00:16:07,870 --> 00:16:12,550
immediate cue not on the stateful thing

279
00:16:11,050 --> 00:16:17,339
that's going on in Caudill or pie or

280
00:16:12,550 --> 00:16:17,339
whatever that's for the classic traffic

281
00:16:18,430 --> 00:16:25,000
Eric Eric by the way didn't didn't do it

282
00:16:20,740 --> 00:16:29,140
on FEC t1 he did it just on a PCT but

283
00:16:25,000 --> 00:16:31,570
it's a simple thing to do it just based

284
00:16:29,140 --> 00:16:33,750
on east t1 i'm web added a description

285
00:16:31,570 --> 00:16:38,230
of that into the offerors architecture

286
00:16:33,750 --> 00:16:42,010
document right so that's the end of the

287
00:16:38,230 --> 00:16:44,399
recap implementation status gradually

288
00:16:42,010 --> 00:16:47,380
getting more and more implementations

289
00:16:44,399 --> 00:16:48,670
the transport protocols I'm not going to

290
00:16:47,380 --> 00:16:51,490
read this all out you can read it in

291
00:16:48,670 --> 00:16:55,420
your own time just highlight that VBR b2

292
00:16:51,490 --> 00:16:57,850
has been added to that as well as and

293
00:16:55,420 --> 00:16:59,729
TCP progress being updated I'm gonna

294
00:16:57,850 --> 00:17:02,589
give more detail on that by the way you

295
00:16:59,730 --> 00:17:04,030
gave me 15 minutes and five minutes and

296
00:17:02,589 --> 00:17:06,059
the five minutes is sort of been

297
00:17:04,030 --> 00:17:09,189
subsumed in these slides if you like

298
00:17:06,059 --> 00:17:15,309
yeah in addition we we we got through

299
00:17:09,189 --> 00:17:16,990
our piece faster so I'm going there's

300
00:17:15,309 --> 00:17:19,780
some components of the transports that

301
00:17:16,990 --> 00:17:23,410
are generic across them all and can be

302
00:17:19,780 --> 00:17:25,209
used our things particularly all note

303
00:17:23,410 --> 00:17:29,640
there we've now got a freebsd version of

304
00:17:25,209 --> 00:17:32,710
echo ECM from Richard J Omega an ongoing

305
00:17:29,640 --> 00:17:35,410
work on the start up with paste chirping

306
00:17:32,710 --> 00:17:40,240
and also a lot of progress on stuff like

307
00:17:35,410 --> 00:17:42,070
a window or come up to that progress in

308
00:17:40,240 --> 00:17:44,080
the cable industry on chipset

309
00:17:42,070 --> 00:17:49,300
implementations for cable modems and see

310
00:17:44,080 --> 00:17:55,500
MTS's with talk of products later this

311
00:17:49,300 --> 00:17:55,500
year in this will often time frame

312
00:17:56,669 --> 00:18:00,730
the Chilkoot couple back here and we're

313
00:17:59,320 --> 00:18:04,029
trying to get that into the mainline of

314
00:18:00,730 --> 00:18:07,899
Linux it's been submitted once and going

315
00:18:04,029 --> 00:18:10,869
for again very shortly hopefully and the

316
00:18:07,899 --> 00:18:14,168
Linux patch for fq l 4 SF q code like

317
00:18:10,869 --> 00:18:15,610
that not going to go through this this

318
00:18:14,169 --> 00:18:18,249
is just a list of links so you can find

319
00:18:15,610 --> 00:18:19,479
the code for those things from the

320
00:18:18,249 --> 00:18:20,980
previous slide that are open-source

321
00:18:19,480 --> 00:18:27,989
they're not all open source on the

322
00:18:20,980 --> 00:18:29,559
previous slide and that there's a link

323
00:18:27,989 --> 00:18:32,139
no there isn't

324
00:18:29,559 --> 00:18:34,178
I'll come to that there's a home page

325
00:18:32,139 --> 00:18:35,769
Angra right

326
00:18:34,179 --> 00:18:38,859
just a brief report back on the

327
00:18:35,769 --> 00:18:40,480
hackathon L sorry Andrew I just wanted

328
00:18:38,859 --> 00:18:43,139
to ask are you aware of anybody working

329
00:18:40,480 --> 00:18:46,149
on putting off for air support in to be

330
00:18:43,139 --> 00:18:49,359
special Q disk that is used bottom level

331
00:18:46,149 --> 00:18:51,789
of the lummix Wi-Fi stack you'll need to

332
00:18:49,359 --> 00:18:53,949
get close for the mic sorry Andrew but

333
00:18:51,789 --> 00:18:57,879
Gregor are you aware of anyone working

334
00:18:53,950 --> 00:19:00,009
on putting l4s support into the special

335
00:18:57,879 --> 00:19:03,309
cutest that lives at the bottom of the

336
00:19:00,009 --> 00:19:05,109
Linux Wi-Fi stack because you can't put

337
00:19:03,309 --> 00:19:10,389
a normal Q disk on a Wi-Fi interface and

338
00:19:05,109 --> 00:19:25,570
Linux anymore I'm not aware of anyone

339
00:19:10,389 --> 00:19:27,488
doing that yet I'm not sure ahead time

340
00:19:25,570 --> 00:19:30,700
and I'm and I'm pretty sure that the

341
00:19:27,489 --> 00:19:32,289
other person what the other of the four

342
00:19:30,700 --> 00:19:36,720
or five people who could do it who's

343
00:19:32,289 --> 00:19:36,720
sitting in the room doesn't hit Tiny Tim

344
00:19:37,590 --> 00:19:46,029
okay you're not coming for Mike okay so

345
00:19:43,029 --> 00:19:50,649
report from the hackathon Koon brought a

346
00:19:46,029 --> 00:19:53,999
test bed over from on the fly and also

347
00:19:50,649 --> 00:19:57,518
the SCE team brought their test bed over

348
00:19:53,999 --> 00:20:00,009
we put the two together so the big

349
00:19:57,519 --> 00:20:04,450
highlight of this hackathon was two

350
00:20:00,009 --> 00:20:07,830
teams working together on this in in a

351
00:20:04,450 --> 00:20:07,830
professional way I should add

352
00:20:08,340 --> 00:20:15,709
thank you very much right and managed to

353
00:20:14,009 --> 00:20:19,620
get some Flint regression tests done

354
00:20:15,710 --> 00:20:22,710
that is running regression tests on

355
00:20:19,620 --> 00:20:24,239
tests that Jonathan specified to see

356
00:20:22,710 --> 00:20:24,840
whether putting our press in there made

357
00:20:24,240 --> 00:20:29,399
any difference

358
00:20:24,840 --> 00:20:31,110
and as far as we got it didn't make any

359
00:20:29,399 --> 00:20:32,939
difference that is our first didn't make

360
00:20:31,110 --> 00:20:35,689
any difference

361
00:20:32,940 --> 00:20:38,879
so that's having up an elf Ross node

362
00:20:35,690 --> 00:20:42,779
before and after you coddle no than the

363
00:20:38,879 --> 00:20:45,059
embarrass orders but a lot of problems

364
00:20:42,779 --> 00:20:46,830
with the limits colonel during that

365
00:20:45,059 --> 00:20:48,799
hackathon I won't go into any more

366
00:20:46,830 --> 00:20:51,689
details due to lack of time as I said

367
00:20:48,799 --> 00:20:54,658
Richard chef Feniger did a freebsd a

368
00:20:51,690 --> 00:20:56,759
korean ecn implementation michael I

369
00:20:54,659 --> 00:20:58,230
should add was not involved in the

370
00:20:56,759 --> 00:21:00,059
implementation he was there as the sort

371
00:20:58,230 --> 00:21:06,809
of gatekeeper of FreeBSD to make sure

372
00:21:00,059 --> 00:21:10,440
all Richardson do anything silly and we

373
00:21:06,809 --> 00:21:11,908
had our first accuracy and interrupt

374
00:21:10,440 --> 00:21:14,549
over the internet between Linux and

375
00:21:11,909 --> 00:21:20,429
FreeBSD so two working together they

376
00:21:14,549 --> 00:21:25,168
both had the same bugs that personally

377
00:21:20,429 --> 00:21:27,149
makes them easier to fix precisely they

378
00:21:25,169 --> 00:21:34,110
both got bored reading this back at the

379
00:21:27,149 --> 00:21:35,668
same point still work talk about the

380
00:21:34,110 --> 00:21:39,059
supply cat window and also paste

381
00:21:35,669 --> 00:21:42,019
chirping was integrated into the ns3

382
00:21:39,059 --> 00:21:44,190
implementation that's still not open but

383
00:21:42,019 --> 00:21:46,950
hopefully very shortly but I have said

384
00:21:44,190 --> 00:21:49,649
that before right you wanted a bit more

385
00:21:46,950 --> 00:21:52,259
detail on TCP probe pieces this is an

386
00:21:49,649 --> 00:21:57,479
update of a slide I presented at ICC RG

387
00:21:52,259 --> 00:21:59,279
in March there's a few differences on it

388
00:21:57,480 --> 00:22:03,509
but the main thing I want to highlight

389
00:21:59,279 --> 00:22:05,549
is obviously that TCP Prague column but

390
00:22:03,509 --> 00:22:07,440
this also shows that some parts of it or

391
00:22:05,549 --> 00:22:09,990
quite a few parts of it the majority of

392
00:22:07,440 --> 00:22:12,049
parts of it are actually in base TCP not

393
00:22:09,990 --> 00:22:14,730
in the congestion control module and

394
00:22:12,049 --> 00:22:16,679
it's sort of reusing parts that people

395
00:22:14,730 --> 00:22:20,000
are doing for other things

396
00:22:16,679 --> 00:22:21,860
I guess the the obvious thing to

397
00:22:20,000 --> 00:22:26,930
that people focus on is the stuff that

398
00:22:21,860 --> 00:22:28,699
isn't green and we have now got a

399
00:22:26,930 --> 00:22:31,370
working implementation of scaling down

400
00:22:28,700 --> 00:22:36,100
to a window below 2 and below 1 and if

401
00:22:31,370 --> 00:22:38,600
that got 2.2 of a packet so facing down

402
00:22:36,100 --> 00:22:41,060
over five round-trip times and this is

403
00:22:38,600 --> 00:22:46,760
going at 300 micro second round trip

404
00:22:41,060 --> 00:22:49,700
time so that you can actually not just

405
00:22:46,760 --> 00:22:56,480
build up a queue in order to do that

406
00:22:49,700 --> 00:22:59,330
that's more per datacenter work and been

407
00:22:56,480 --> 00:23:00,920
talking more about our ttv independence

408
00:22:59,330 --> 00:23:02,720
but haven't done any more on it and in

409
00:23:00,920 --> 00:23:04,010
terms of implementation then the big

410
00:23:02,720 --> 00:23:07,550
open issue which i'm going to talk about

411
00:23:04,010 --> 00:23:10,150
is reno friendly if there's a classic

412
00:23:07,550 --> 00:23:13,190
ATM bottleneck I've got a slide on that

413
00:23:10,150 --> 00:23:17,630
right couple of slides on recent

414
00:23:13,190 --> 00:23:20,360
developments the dual PI squared

415
00:23:17,630 --> 00:23:22,760
implementation has largely been

416
00:23:20,360 --> 00:23:28,939
unchanged for quite a quite years now

417
00:23:22,760 --> 00:23:31,940
but we've been changing the scheduler

418
00:23:28,940 --> 00:23:36,290
over to weighted round robin and also

419
00:23:31,940 --> 00:23:39,080
we've put a management shim if you like

420
00:23:36,290 --> 00:23:41,300
on top of the parameters so that you can

421
00:23:39,080 --> 00:23:43,669
put in to human Rieman understandable

422
00:23:41,300 --> 00:23:44,750
parameters the typical round-trip time

423
00:23:43,670 --> 00:23:47,990
the max round-trip time and it will

424
00:23:44,750 --> 00:23:52,060
calculate all the sort of proportional

425
00:23:47,990 --> 00:23:54,710
integral controller parameters for you

426
00:23:52,060 --> 00:23:59,300
and the maths is in the internet draft

427
00:23:54,710 --> 00:24:01,310
on how it does that in pseudocode but i

428
00:23:59,300 --> 00:24:03,560
should emphasize that for the internet

429
00:24:01,310 --> 00:24:05,240
it's zero config you know this is for if

430
00:24:03,560 --> 00:24:07,760
you you were having to reconfigure it

431
00:24:05,240 --> 00:24:11,500
for some different scenario but the

432
00:24:07,760 --> 00:24:11,500
defaults work just fine for the internet

433
00:24:14,770 --> 00:24:25,570
ii recent development all the other

434
00:24:21,230 --> 00:24:27,830
stuff going on is posted a new draft

435
00:24:25,570 --> 00:24:31,389
documenting the docs askew protection

436
00:24:27,830 --> 00:24:33,779
function that's not intended for

437
00:24:31,390 --> 00:24:37,109
consensus at the ITF it's just

438
00:24:33,779 --> 00:24:39,419
saying what DOCSIS did so that it's

439
00:24:37,109 --> 00:24:41,699
openly available in the ITF and the

440
00:24:39,419 --> 00:24:42,989
emboldened phrase there is the most

441
00:24:41,700 --> 00:24:45,029
important bit there's an objective

442
00:24:42,989 --> 00:24:47,369
definition of what your flow behavior

443
00:24:45,029 --> 00:24:50,039
has to be in order to avoid being

444
00:24:47,369 --> 00:24:52,678
rejected as you go into a doctor's link

445
00:24:50,039 --> 00:24:55,820
so how what's the sort of maximum

446
00:24:52,679 --> 00:24:58,919
aggression that you can still get into

447
00:24:55,820 --> 00:25:02,189
the low latency queue so just to

448
00:24:58,919 --> 00:25:04,710
emphasize it's not one of the core of

449
00:25:02,190 --> 00:25:07,379
elf race drafts it's not even on a tspwd

450
00:25:04,710 --> 00:25:10,219
jar draft you'll probably go into the

451
00:25:07,379 --> 00:25:19,049
independent stream mullet it's it's been

452
00:25:10,219 --> 00:25:20,820
accepted but it's in the cube and the

453
00:25:19,049 --> 00:25:24,149
the overload protection that's in the

454
00:25:20,820 --> 00:25:27,359
dual queue draft would be a sufficient

455
00:25:24,149 --> 00:25:30,119
alternative but it's this is this is

456
00:25:27,359 --> 00:25:32,129
perf la vie queue protection function so

457
00:25:30,119 --> 00:25:33,988
it kicks out particularly it will be how

458
00:25:32,129 --> 00:25:40,488
you flows but you have got a sort of

459
00:25:33,989 --> 00:25:40,489
bulk overload protection as a basis and

460
00:25:40,700 --> 00:25:45,389
it's really I guess part of the l4s

461
00:25:43,019 --> 00:25:50,399
experiment to see whether it's necessary

462
00:25:45,389 --> 00:25:52,439
to have per flow protection much as I

463
00:25:50,399 --> 00:25:54,570
suppose you could say the internet

464
00:25:52,440 --> 00:25:58,619
experiment has determined whether we

465
00:25:54,570 --> 00:26:00,359
need per flow rate control for the

466
00:25:58,619 --> 00:26:02,699
voluntary compliance with TCP

467
00:26:00,359 --> 00:26:04,349
friendliness you know it sort of that

468
00:26:02,700 --> 00:26:07,619
has determined that we don't really need

469
00:26:04,349 --> 00:26:08,908
per flow rate control the el Faro's

470
00:26:07,619 --> 00:26:13,349
experiment will determine whether we

471
00:26:08,909 --> 00:26:17,580
need purp low latency protection or not

472
00:26:13,349 --> 00:26:21,330
or whether the inherent incentives for

473
00:26:17,580 --> 00:26:23,759
yourself are sufficient - you don't want

474
00:26:21,330 --> 00:26:26,928
to run your own latency but this is

475
00:26:23,759 --> 00:26:31,080
obviously more for accidents and malice

476
00:26:26,929 --> 00:26:33,139
right I won't go into how the algorithm

477
00:26:31,080 --> 00:26:35,009
works because we're short of time

478
00:26:33,139 --> 00:26:39,149
because I want to get on to these issues

479
00:26:35,009 --> 00:26:43,099
a little bit of history about the number

480
00:26:39,149 --> 00:26:45,899
one open issue I believe actually 3168

481
00:26:43,099 --> 00:26:47,460
ecn in a FIFO so if you have an a QM

482
00:26:45,899 --> 00:26:52,350
that behave

483
00:26:47,460 --> 00:26:57,450
like I've said that obviously 3168 says

484
00:26:52,350 --> 00:27:01,908
and you're in a share Q and D see TCP or

485
00:26:57,450 --> 00:27:05,100
TCP Prague or quick Prague or whatever

486
00:27:01,909 --> 00:27:08,779
competes with existing TCP friendly

487
00:27:05,100 --> 00:27:13,439
traffic is the world going to collapse

488
00:27:08,779 --> 00:27:17,159
and history of this we we chose the UC

489
00:27:13,440 --> 00:27:20,250
t1 code point back in 2016 knowing full

490
00:27:17,159 --> 00:27:25,740
well this could be a problem thinking

491
00:27:20,250 --> 00:27:27,390
that it may not be a problem because all

492
00:27:25,740 --> 00:27:29,840
the academic studies that showed that

493
00:27:27,390 --> 00:27:34,020
there was no deployment of such readers

494
00:27:29,840 --> 00:27:36,020
or we thought they showed that then in

495
00:27:34,020 --> 00:27:38,789
fact only a few months later

496
00:27:36,020 --> 00:27:42,210
Padma boomer Apple did a study published

497
00:27:38,789 --> 00:27:44,390
a study in mapache which the slide the

498
00:27:42,210 --> 00:27:49,770
black part of the slide there shows

499
00:27:44,390 --> 00:27:53,909
where there was C on the Internet at the

500
00:27:49,770 --> 00:28:01,649
time sort of dismissed it is probably fq

501
00:27:53,909 --> 00:28:04,020
coddle but the the controversy around

502
00:28:01,649 --> 00:28:07,879
this as made us think well yeah actually

503
00:28:04,020 --> 00:28:07,879
that is not a very scientific assumption

504
00:28:08,000 --> 00:28:18,299
we ought to check that so sort of the

505
00:28:15,590 --> 00:28:19,980
greys have not come out on this there's

506
00:28:18,299 --> 00:28:25,580
dark gray and light gray on this but

507
00:28:19,980 --> 00:28:32,130
there might only come out on though yep

508
00:28:25,580 --> 00:28:37,110
so as I said what if that assumption is

509
00:28:32,130 --> 00:28:41,760
unsound and really we're currently at an

510
00:28:37,110 --> 00:28:44,010
uncertain state in the in the left hand

511
00:28:41,760 --> 00:28:47,039
bubble where there are a couple of CD

512
00:28:44,010 --> 00:28:50,820
ends who are doing testing looking for

513
00:28:47,039 --> 00:28:52,110
these these CES they have been found I'm

514
00:28:50,820 --> 00:28:53,789
not gonna identify here they are I

515
00:28:52,110 --> 00:28:57,330
didn't actually ask whether it was okay

516
00:28:53,789 --> 00:28:59,730
to identify who they are but I'm not

517
00:28:57,330 --> 00:29:02,699
going to say

518
00:28:59,730 --> 00:29:04,110
I'm also not sure whether even when they

519
00:29:02,700 --> 00:29:10,440
get results they'll be able to tell us

520
00:29:04,110 --> 00:29:12,209
or even you know tell anyone but but but

521
00:29:10,440 --> 00:29:16,950
unfortunately layer thirteen comes after

522
00:29:12,210 --> 00:29:19,409
layer or you know you have to get

523
00:29:16,950 --> 00:29:20,760
results before the lawyers alas accept

524
00:29:19,409 --> 00:29:26,070
questions on whether you're allowed to

525
00:29:20,760 --> 00:29:30,389
release them and so we have devised and

526
00:29:26,070 --> 00:29:32,279
test on how to look for these these

527
00:29:30,389 --> 00:29:34,799
raters once we get the results of the

528
00:29:32,279 --> 00:29:36,480
tests if we get the results so that's

529
00:29:34,799 --> 00:29:37,980
that's the sort of ground truth side of

530
00:29:36,480 --> 00:29:40,049
it what is on the internet at the moment

531
00:29:37,980 --> 00:29:42,389
then there's so that's more like

532
00:29:40,049 --> 00:29:44,549
prevalence and then the quantify flowing

533
00:29:42,389 --> 00:29:48,209
balance is more like their harm in other

534
00:29:44,549 --> 00:29:50,580
words the risk is a combination of how

535
00:29:48,210 --> 00:29:54,299
much of it is there and how harmful is

536
00:29:50,580 --> 00:29:55,500
it when it is there and so the next side

537
00:29:54,299 --> 00:29:58,230
we've got some measurements on how

538
00:29:55,500 --> 00:30:03,360
harmful it would be when these flows

539
00:29:58,230 --> 00:30:04,019
join each other in a single cue Jake I J

540
00:30:03,360 --> 00:30:06,120
:

541
00:30:04,019 --> 00:30:07,830
I just wanted to self-identify Akamai

542
00:30:06,120 --> 00:30:10,110
has been running a few tests with me

543
00:30:07,830 --> 00:30:13,439
seein on the internet and we have

544
00:30:10,110 --> 00:30:14,820
observed EC ease in the while we are not

545
00:30:13,440 --> 00:30:17,389
sure where they're coming from

546
00:30:14,820 --> 00:30:20,700
it's we're still looking at it I hope

547
00:30:17,389 --> 00:30:22,350
maybe one day if I have to have to to

548
00:30:20,700 --> 00:30:24,659
present something in my party about it

549
00:30:22,350 --> 00:30:30,689
but we have not proceeded to that point

550
00:30:24,659 --> 00:30:33,360
yet thank you yep so Jake it's bit hard

551
00:30:30,690 --> 00:30:36,299
to hear up here but you're saying that

552
00:30:33,360 --> 00:30:40,320
you see some easy unmarked traffic yes

553
00:30:36,299 --> 00:30:42,090
obviously we so we've seen specifically

554
00:30:40,320 --> 00:30:45,960
what I was looking for on the download

555
00:30:42,090 --> 00:30:49,230
was echo the echo response right so we

556
00:30:45,960 --> 00:30:52,919
are we have some production traffic

557
00:30:49,230 --> 00:30:55,409
being served with ecn enabled and on

558
00:30:52,919 --> 00:30:57,149
those devices that we put up I was

559
00:30:55,409 --> 00:30:59,730
looking to replicate the the Apple

560
00:30:57,149 --> 00:31:03,178
results with Argentina and France it's

561
00:30:59,730 --> 00:31:05,940
hard to tell whether flows that do not

562
00:31:03,179 --> 00:31:10,799
see an ECE are uncongested or don't have

563
00:31:05,940 --> 00:31:12,250
an AQ m and path but we do see all of

564
00:31:10,799 --> 00:31:18,820
the servers that we put up

565
00:31:12,250 --> 00:31:22,090
some wild eazy-e mercs Thank You rod

566
00:31:18,820 --> 00:31:23,590
crimes if there are any operators or

567
00:31:22,090 --> 00:31:25,929
other people in the floor that could

568
00:31:23,590 --> 00:31:28,300
help Bob or myself get some of this data

569
00:31:25,930 --> 00:31:30,160
we are both very interested in that and

570
00:31:28,300 --> 00:31:32,200
I'm just reaching out to if anybody

571
00:31:30,160 --> 00:31:34,210
knows any place that would be willing to

572
00:31:32,200 --> 00:31:35,080
help collect some of this it's very

573
00:31:34,210 --> 00:31:39,670
valuable

574
00:31:35,080 --> 00:31:44,860
yeah and actually the other CDN did do

575
00:31:39,670 --> 00:31:50,320
some thinking well actually I think I

576
00:31:44,860 --> 00:31:52,540
can say this because the yeah there is

577
00:31:50,320 --> 00:31:54,490
some other day to hear from apples

578
00:31:52,540 --> 00:31:57,820
original study and that Argentine

579
00:31:54,490 --> 00:32:02,290
Republic 30% CE Marking by the way

580
00:31:57,820 --> 00:32:05,350
that's 30% of devices so at least once

581
00:32:02,290 --> 00:32:10,659
the e mark in 12 hours that's not 30%

582
00:32:05,350 --> 00:32:13,389
marking right but they did do some

583
00:32:10,660 --> 00:32:15,430
digging into that and identified the ice

584
00:32:13,390 --> 00:32:19,240
be involved and we are trying to get

585
00:32:15,430 --> 00:32:21,310
hold of the people to to see where

586
00:32:19,240 --> 00:32:24,570
whether that is like a fq caudal

587
00:32:21,310 --> 00:32:28,210
deployment or you know or whatever it is

588
00:32:24,570 --> 00:32:30,820
and similarly the reason we're going for

589
00:32:28,210 --> 00:32:33,520
CD ends is we're looking for what it's

590
00:32:30,820 --> 00:32:35,620
more likely that single q ATMs are in

591
00:32:33,520 --> 00:32:37,600
the downstream whereas fq coal more like

592
00:32:35,620 --> 00:32:39,250
to be in the upstream however cake is

593
00:32:37,600 --> 00:32:42,340
also in the downstream at the other end

594
00:32:39,250 --> 00:32:44,230
of the access link pinching off the

595
00:32:42,340 --> 00:32:47,220
access and that would be caught

596
00:32:44,230 --> 00:32:51,070
potentially causing c e and echoes back

597
00:32:47,220 --> 00:32:53,050
that jake may be seeing that you know we

598
00:32:51,070 --> 00:32:56,939
don't know where these seas are coming

599
00:32:53,050 --> 00:33:00,930
from so there's all the way to be done

600
00:32:56,940 --> 00:33:04,510
and just before I go for the next slide

601
00:33:00,930 --> 00:33:06,880
about the level of harmless would cause

602
00:33:04,510 --> 00:33:10,150
the idea of this is that once you've got

603
00:33:06,880 --> 00:33:12,660
the prevalence and let the level of harm

604
00:33:10,150 --> 00:33:16,000
you've got an assessment of the risk and

605
00:33:12,660 --> 00:33:18,190
so I'm sort of laying out a process that

606
00:33:16,000 --> 00:33:20,980
we're then got a spread of possible

607
00:33:18,190 --> 00:33:24,250
scenarios if there's a high risk then

608
00:33:20,980 --> 00:33:25,900
definitely well put some code into you

609
00:33:24,250 --> 00:33:31,990
know the

610
00:33:25,900 --> 00:33:33,130
all the star Prague l4s code to try and

611
00:33:31,990 --> 00:33:34,480
measure this and it's going to be

612
00:33:33,130 --> 00:33:35,890
difficult we'll get false negatives and

613
00:33:34,480 --> 00:33:39,940
positives in the worst way you know it's

614
00:33:35,890 --> 00:33:42,580
just transfer what when you say there's

615
00:33:39,940 --> 00:33:45,550
a risk and you need new code is that a

616
00:33:42,580 --> 00:33:48,550
change to the three specs which are on

617
00:33:45,550 --> 00:33:51,220
the table or is that a future spec for

618
00:33:48,550 --> 00:33:53,230
the transport the specs currently assume

619
00:33:51,220 --> 00:33:55,630
the high-risk case yes but we haven't

620
00:33:53,230 --> 00:33:56,980
thrown it in the code okay that seems a

621
00:33:55,630 --> 00:34:04,300
reasonable experiment to go forward

622
00:33:56,980 --> 00:34:06,640
Korea if we don't find much and the harm

623
00:34:04,300 --> 00:34:08,949
if it were found or if it were added in

624
00:34:06,640 --> 00:34:12,909
the future to the Internet is relatively

625
00:34:08,949 --> 00:34:17,739
low then possibly sufficient would be to

626
00:34:12,909 --> 00:34:20,169
put advice in the l4s drafts to say do

627
00:34:17,739 --> 00:34:23,319
not or limit this experiment over your

628
00:34:20,168 --> 00:34:24,790
network eg bigot by disabling on CDN

629
00:34:23,320 --> 00:34:28,600
ports that are going into your network

630
00:34:24,790 --> 00:34:31,379
do not put our l4s traffic from a CDN

631
00:34:28,600 --> 00:34:34,540
into your network particularly if you're

632
00:34:31,379 --> 00:34:38,020
sorry I'm the end of that sentence is if

633
00:34:34,540 --> 00:34:42,370
you know you've got you've deployed also

634
00:34:38,020 --> 00:34:44,340
see 3168 ATMs in your network obviously

635
00:34:42,370 --> 00:34:46,449
if they're it's cake and fq coddled

636
00:34:44,340 --> 00:34:48,730
that's going to be safe because they're

637
00:34:46,449 --> 00:34:51,908
in per flow queues so they're not gonna

638
00:34:48,730 --> 00:34:55,570
I've run them right so these are the

639
00:34:51,909 --> 00:34:58,650
results we've got for a range of link

640
00:34:55,570 --> 00:35:01,870
rates along the bottom for 200 Meg and

641
00:34:58,650 --> 00:35:06,640
within each link rate a range of

642
00:35:01,870 --> 00:35:12,100
round-trip times for the unfairness

643
00:35:06,640 --> 00:35:12,850
between DC TCP an ETA and cubic in the

644
00:35:12,100 --> 00:35:14,980
dual pie

645
00:35:12,850 --> 00:35:16,779
it says the dual pie squared l fresh but

646
00:35:14,980 --> 00:35:18,610
they're both in the PI squared IQ and

647
00:35:16,780 --> 00:35:23,080
they're poked in as if it's a classic a

648
00:35:18,610 --> 00:35:25,690
queuing they're not using the L key we

649
00:35:23,080 --> 00:35:30,490
mark the VC TCP traffic with these two

650
00:35:25,690 --> 00:35:35,609
zeros put it in the other kit so the

651
00:35:30,490 --> 00:35:37,180
worst case there is about something like

652
00:35:35,609 --> 00:35:44,490
that

653
00:35:37,180 --> 00:35:49,210
one that was not very useful yeah I

654
00:35:44,490 --> 00:35:50,558
pressed the wrong button the worst goes

655
00:35:49,210 --> 00:35:52,569
there between that one and that one I

656
00:35:50,559 --> 00:35:56,050
think is about 20 but in most cases it's

657
00:35:52,569 --> 00:35:57,490
about 10 along here and it gets the the

658
00:35:56,050 --> 00:36:00,520
sort of good news if there is any good

659
00:35:57,490 --> 00:36:02,169
news in this slide is that in a severely

660
00:36:00,520 --> 00:36:07,990
congested environment I get closer to

661
00:36:02,170 --> 00:36:11,800
5050 at lolling rates and low entry at

662
00:36:07,990 --> 00:36:12,250
times so let you digest that in your own

663
00:36:11,800 --> 00:36:16,450
time

664
00:36:12,250 --> 00:36:19,770
I should add I put on the list this

665
00:36:16,450 --> 00:36:22,509
morning a copy of a paper we're

666
00:36:19,770 --> 00:36:27,569
preparing for a journal with a whole

667
00:36:22,510 --> 00:36:29,980
load of performance measurements for l4s

668
00:36:27,569 --> 00:36:31,720
across all these linked rates and

669
00:36:29,980 --> 00:36:33,849
round-trip times and with different

670
00:36:31,720 --> 00:36:36,279
traffic models with different congestion

671
00:36:33,849 --> 00:36:38,290
controls and all the rest of it and I

672
00:36:36,280 --> 00:36:41,260
sort of attached it to the end of a

673
00:36:38,290 --> 00:36:43,029
paper so that the because the paper

674
00:36:41,260 --> 00:36:45,369
describes all the experimental scenarios

675
00:36:43,030 --> 00:36:46,869
and the original paper just had a

676
00:36:45,369 --> 00:36:48,910
selection of the plots but what we've

677
00:36:46,869 --> 00:36:51,880
done we've put all the plots just stuff

678
00:36:48,910 --> 00:36:53,710
them on the end of the paper so you you

679
00:36:51,880 --> 00:36:57,849
know we can't be accused of selecting

680
00:36:53,710 --> 00:36:59,589
results if you like me whereas when you

681
00:36:57,849 --> 00:37:06,900
put in a journal paper of course you can

682
00:36:59,589 --> 00:37:10,299
select results and I'd like to see

683
00:37:06,900 --> 00:37:13,780
results like that so we always show not

684
00:37:10,299 --> 00:37:18,390
just queue delay we show utilization

685
00:37:13,780 --> 00:37:20,799
queue delay drop rate fairness etc etc

686
00:37:18,390 --> 00:37:28,150
because you can always focus on the good

687
00:37:20,799 --> 00:37:30,040
part of any one experiment okay so

688
00:37:28,150 --> 00:37:35,920
there's the less loss detection issue

689
00:37:30,040 --> 00:37:38,020
which is a particularly if you do finish

690
00:37:35,920 --> 00:37:42,160
up in the next five minutes that we

691
00:37:38,020 --> 00:37:43,720
couldn't pick there I think at least

692
00:37:42,160 --> 00:37:45,578
discussion submission which you probably

693
00:37:43,720 --> 00:37:48,129
ought to go to the main discussion as

694
00:37:45,579 --> 00:37:49,809
opposed to be done done while you're up

695
00:37:48,130 --> 00:37:50,860
here with slides I would I represent

696
00:37:49,809 --> 00:37:52,810
what what your view is

697
00:37:50,860 --> 00:37:55,810
we'll pick up again I'll just search

698
00:37:52,810 --> 00:38:00,100
clean yeah

699
00:37:55,810 --> 00:38:03,670
so there are objections to this

700
00:38:00,100 --> 00:38:07,690
requirement that an L press source also

701
00:38:03,670 --> 00:38:11,830
has to measure or detect loss in units

702
00:38:07,690 --> 00:38:17,170
of time and at the moment it's a must we

703
00:38:11,830 --> 00:38:21,330
have discussed a way to change the

704
00:38:17,170 --> 00:38:26,740
ordering switch to change the wording

705
00:38:21,330 --> 00:38:30,420
there there are three real objections to

706
00:38:26,740 --> 00:38:32,799
this same requirement one is

707
00:38:30,420 --> 00:38:34,660
particularly David's objection that it

708
00:38:32,800 --> 00:38:36,220
could be interpreted as a prohibition of

709
00:38:34,660 --> 00:38:38,310
using three view back in an environment

710
00:38:36,220 --> 00:38:42,850
where you don't need to do this anyway

711
00:38:38,310 --> 00:38:45,070
because you've got a a link technology

712
00:38:42,850 --> 00:38:47,580
that doesn't reorder stuff and so I'm

713
00:38:45,070 --> 00:38:50,470
sure we can deal with that with wording

714
00:38:47,580 --> 00:38:52,630
the other is a architectural concern

715
00:38:50,470 --> 00:38:55,990
that it overloads one code point with

716
00:38:52,630 --> 00:38:57,220
two meanings and those two meanings

717
00:38:55,990 --> 00:39:00,399
being low queuing that I am loath

718
00:38:57,220 --> 00:39:03,129
resequencing delay and then really the

719
00:39:00,400 --> 00:39:06,310
the augment against that I would make is

720
00:39:03,130 --> 00:39:08,230
that yes that is strictly two different

721
00:39:06,310 --> 00:39:10,360
meanings but they're both low delay and

722
00:39:08,230 --> 00:39:12,730
what would be the value of finding two

723
00:39:10,360 --> 00:39:19,540
identifiers for those things you know

724
00:39:12,730 --> 00:39:21,370
it's sort of worth conflating them and I

725
00:39:19,540 --> 00:39:26,020
put a bit of discussion on the list

726
00:39:21,370 --> 00:39:27,520
about the the possibility you might ever

727
00:39:26,020 --> 00:39:28,570
have a case where you wanted one and not

728
00:39:27,520 --> 00:39:30,190
the other that you know if you were

729
00:39:28,570 --> 00:39:33,420
short of memory for the resequencing or

730
00:39:30,190 --> 00:39:39,250
something like that and and that

731
00:39:33,420 --> 00:39:42,490
discussion I'm sure might continue and

732
00:39:39,250 --> 00:39:46,240
then there's an objection primarily from

733
00:39:42,490 --> 00:39:48,549
Michael Schaff that one experiment

734
00:39:46,240 --> 00:39:51,990
shouldn't depend on another and the

735
00:39:48,550 --> 00:39:55,450
underlying concern here is to avoid

736
00:39:51,990 --> 00:39:57,640
having a potentially successful

737
00:39:55,450 --> 00:40:01,319
experiment depending on a potentially

738
00:39:57,640 --> 00:40:05,040
failed experiment and bringing down me

739
00:40:01,320 --> 00:40:07,630
the dependent one

740
00:40:05,040 --> 00:40:10,810
that's not such a concern here because

741
00:40:07,630 --> 00:40:14,680
if RAC files and that's unlikely given

742
00:40:10,810 --> 00:40:16,480
it's widely deployed already this aspect

743
00:40:14,680 --> 00:40:19,720
of l4s can be relaxed Alvarez doesn't

744
00:40:16,480 --> 00:40:24,010
like we depend on this requirement no

745
00:40:19,720 --> 00:40:27,250
it's just we can we can relax that and

746
00:40:24,010 --> 00:40:29,650
we can talk about that and also it's not

747
00:40:27,250 --> 00:40:31,600
a dependency in a formal normative sense

748
00:40:29,650 --> 00:40:33,610
is not a normative reference to the

749
00:40:31,600 --> 00:40:40,900
right draft its dependency on the idea

750
00:40:33,610 --> 00:40:43,060
behind rack so we are willing to

751
00:40:40,900 --> 00:40:47,020
consider a shirred instead of a must of

752
00:40:43,060 --> 00:40:49,990
this requirement and maybe warm what

753
00:40:47,020 --> 00:40:51,550
would happen if you didn't do it and so

754
00:40:49,990 --> 00:40:56,080
we can have that discussion Thanks

755
00:40:51,550 --> 00:40:58,330
that's what is cooking it aside and then

756
00:40:56,080 --> 00:40:59,590
just of not going to read all this this

757
00:40:58,330 --> 00:41:02,980
is all the drafts that have been updated

758
00:40:59,590 --> 00:41:04,930
in the last cycle and the new one the

759
00:41:02,980 --> 00:41:10,080
queue protection 1 and then adopted one

760
00:41:04,930 --> 00:41:14,109
in nsh so as you can see quite a lot of

761
00:41:10,080 --> 00:41:18,370
ASCII writing going on as well as code

762
00:41:14,110 --> 00:41:31,210
writing you might write your code in SQL

763
00:41:18,370 --> 00:41:39,009
suppose just common we're short of time

764
00:41:31,210 --> 00:41:42,250
but we're OK for time so ok so what I

765
00:41:39,010 --> 00:41:48,150
think no I'd like to do is offer a bit

766
00:41:42,250 --> 00:41:48,150
of time to talk about these drafts and

767
00:41:48,330 --> 00:41:54,700
it's sometimes the case in the ITF that

768
00:41:52,000 --> 00:41:56,290
the mailing list explodes with ideas and

769
00:41:54,700 --> 00:41:58,899
thoughts about what we've been doing

770
00:41:56,290 --> 00:42:00,670
just before working group last call and

771
00:41:58,900 --> 00:42:03,850
it's sometimes that the mailing list

772
00:42:00,670 --> 00:42:05,230
dies out and you can hardly trace what's

773
00:42:03,850 --> 00:42:08,140
going on when we get to a working group

774
00:42:05,230 --> 00:42:08,740
last call this case and quite a bit been

775
00:42:08,140 --> 00:42:11,109
going on

776
00:42:08,740 --> 00:42:13,299
so what let's use a little bit of time

777
00:42:11,110 --> 00:42:16,150
to try and talk through the different

778
00:42:13,300 --> 00:42:17,859
things and we made a list as chairs of

779
00:42:16,150 --> 00:42:20,229
things that we thought we saw

780
00:42:17,859 --> 00:42:21,190
and this may be a totally useless list

781
00:42:20,229 --> 00:42:22,989
but we're going to show it anyway

782
00:42:21,190 --> 00:42:27,849
because it may help some of the people

783
00:42:22,989 --> 00:42:29,709
and if your comment directly matches one

784
00:42:27,849 --> 00:42:35,410
of these or we want to come back to it

785
00:42:29,709 --> 00:42:38,259
then please say so but generally let's

786
00:42:35,410 --> 00:42:40,959
have a discussion about these drafts

787
00:42:38,259 --> 00:42:44,469
particularly relating to whether there

788
00:42:40,959 --> 00:42:46,269
are significant issues remaining or what

789
00:42:44,469 --> 00:42:48,339
the things that should be clarified at

790
00:42:46,269 --> 00:42:50,200
this stage before we hung on whether to

791
00:42:48,339 --> 00:42:54,599
pass them to the working group last call

792
00:42:50,200 --> 00:42:58,598
status so one who was going to be first

793
00:42:54,599 --> 00:43:02,769
Jake your queue shorter going

794
00:42:58,599 --> 00:43:07,209
Jake Holland I would add one item to

795
00:43:02,769 --> 00:43:08,799
this list which I was thinking yeah yeah

796
00:43:07,209 --> 00:43:11,919
I would add one item to this list which

797
00:43:08,799 --> 00:43:17,109
is admission control for untrusted

798
00:43:11,920 --> 00:43:21,999
marking on the admission control on the

799
00:43:17,109 --> 00:43:24,788
classifier yep okay um the IQR

800
00:43:21,999 --> 00:43:27,368
recommendations state this is research

801
00:43:24,789 --> 00:43:30,729
currently a something that we should be

802
00:43:27,369 --> 00:43:32,769
thinking about how to control floors not

803
00:43:30,729 --> 00:43:36,249
obeying with the traffic contract there

804
00:43:32,769 --> 00:43:39,399
the scheduler is expecting and what

805
00:43:36,249 --> 00:43:41,288
would you suggest we do in this space we

806
00:43:39,400 --> 00:43:45,369
have a a document that was put forward

807
00:43:41,289 --> 00:43:47,499
by Bob which in its like that which I

808
00:43:45,369 --> 00:43:49,239
very much appreciate which is revealing

809
00:43:47,499 --> 00:43:51,459
what one of the operators is trying to

810
00:43:49,239 --> 00:43:53,319
do right now but that's an information

811
00:43:51,459 --> 00:43:55,029
on what they're doing do you think we

812
00:43:53,319 --> 00:43:59,920
should be doing some working group work

813
00:43:55,029 --> 00:44:07,359
on this there is an interesting question

814
00:43:59,920 --> 00:44:09,160
i I I just would like to see it I don't

815
00:44:07,359 --> 00:44:12,279
have an opinion on that at the at the

816
00:44:09,160 --> 00:44:14,709
moment I just would like to see it added

817
00:44:12,279 --> 00:44:17,019
to the list as a concern that has an

818
00:44:14,709 --> 00:44:21,089
impact on the congestion control aspects

819
00:44:17,019 --> 00:44:21,089
of this thank you noted thank you

820
00:44:21,209 --> 00:44:28,660
Christian yeah it's something about the

821
00:44:24,479 --> 00:44:31,419
evaluation of the l4s experiments okay I

822
00:44:28,660 --> 00:44:35,259
have noticed that Bob slides

823
00:44:31,420 --> 00:44:39,640
always present comparison of l4s against

824
00:44:35,260 --> 00:44:44,589
cubic which is not designed to minimize

825
00:44:39,640 --> 00:44:47,680
and 2 ND days I would very much like to

826
00:44:44,589 --> 00:44:50,200
see comparison of l4s against delay

827
00:44:47,680 --> 00:44:54,669
based congestion control algorithm such

828
00:44:50,200 --> 00:44:58,200
as PBR presumably baby are the two of

829
00:44:54,670 --> 00:45:00,490
them via the general idea is compared to

830
00:44:58,200 --> 00:45:02,470
congestion control algorithms are

831
00:45:00,490 --> 00:45:06,629
specifically designed to minimize delay

832
00:45:02,470 --> 00:45:06,629
by opposition to those that are not and

833
00:45:10,440 --> 00:45:16,180
this is Bob Brisco that is the question

834
00:45:13,990 --> 00:45:19,720
if you try and compare with baby RV one

835
00:45:16,180 --> 00:45:26,500
things like your rape fairness it's not

836
00:45:19,720 --> 00:45:28,180
you that's problems its wake you for be

837
00:45:26,500 --> 00:45:29,619
BRB to now to come out we can start to

838
00:45:28,180 --> 00:45:32,040
be able to do that but that's why it's

839
00:45:29,619 --> 00:45:32,040
not appear

840
00:45:39,240 --> 00:45:46,868
Johnson Moulton I have to get very close

841
00:45:43,840 --> 00:45:55,480
tonight because the chairs cut here okay

842
00:45:46,869 --> 00:45:58,930
better okay

843
00:45:55,480 --> 00:46:03,850
so I have four different topics to bring

844
00:45:58,930 --> 00:46:17,618
up that closely related points a B F and

845
00:46:03,850 --> 00:46:21,609
G yeah so um Jonathan Wharton okay so on

846
00:46:17,619 --> 00:46:24,220
point F honestly eighty-one one states

847
00:46:21,609 --> 00:46:26,650
that IETF approval is required for

848
00:46:24,220 --> 00:46:28,600
experiments involving congestion

849
00:46:26,650 --> 00:46:31,510
response differences and congestion

850
00:46:28,600 --> 00:46:34,868
marking differences as these could

851
00:46:31,510 --> 00:46:39,160
involve effective redefinitions of the C

852
00:46:34,869 --> 00:46:42,130
II and ECT one code points in other

853
00:46:39,160 --> 00:46:45,009
words I see 18 1 1 does not itself

854
00:46:42,130 --> 00:46:47,740
modify our SVC what the six eight to

855
00:46:45,010 --> 00:46:53,530
permit these behaviors itself for best

856
00:46:47,740 --> 00:46:56,399
desires and point G on incremental

857
00:46:53,530 --> 00:46:59,890
deployment this obviously requires

858
00:46:56,400 --> 00:47:05,490
compatibility with our cc-16 8 compliant

859
00:46:59,890 --> 00:47:08,350
a QMS this has not been demonstrated and

860
00:47:05,490 --> 00:47:11,200
there are serious theoretical concerns

861
00:47:08,350 --> 00:47:16,480
which we have validated by experiments

862
00:47:11,200 --> 00:47:20,680
as of last night which of course speaks

863
00:47:16,480 --> 00:47:23,619
to point a I was too gay to you on one

864
00:47:20,680 --> 00:47:28,540
states very clearly that effective

865
00:47:23,619 --> 00:47:34,170
congestion control is required with

866
00:47:28,540 --> 00:47:38,369
coddle now being the most deployed aqm

867
00:47:34,170 --> 00:47:43,270
the default parameters of code l and the

868
00:47:38,369 --> 00:47:46,750
vertically low latencies that l4s

869
00:47:43,270 --> 00:47:52,270
targets we found that within 10

870
00:47:46,750 --> 00:47:57,990
millisecond RT t path a senior

871
00:47:52,270 --> 00:48:02,140
related DCP Park flow would require four

872
00:47:57,990 --> 00:48:05,979
seconds for cuddled on its default

873
00:48:02,140 --> 00:48:09,879
parameters to reach a controlling

874
00:48:05,980 --> 00:48:12,340
marking rate okay less is not active

875
00:48:09,880 --> 00:48:15,100
cuddle appear cuddle yes this is the

876
00:48:12,340 --> 00:48:19,360
caudal algorithm itself acting on a

877
00:48:15,100 --> 00:48:21,339
single flow and if multiple l4s flows

878
00:48:19,360 --> 00:48:25,240
were going through a single queue

879
00:48:21,340 --> 00:48:27,250
controlled by cuddle then the time

880
00:48:25,240 --> 00:48:32,109
required to reach the correct marking

881
00:48:27,250 --> 00:48:35,980
rate would be similarly multiplied so

882
00:48:32,110 --> 00:48:38,170
this is I just need to clarify are we

883
00:48:35,980 --> 00:48:41,980
talking about widespread deployment of

884
00:48:38,170 --> 00:48:45,040
cuddle without fur queue I'm talking

885
00:48:41,980 --> 00:48:54,610
about widespread deployment of cuddle in

886
00:48:45,040 --> 00:48:58,090
total I'm if we include fq canal then it

887
00:48:54,610 --> 00:49:02,440
is extremely widely deployed now because

888
00:48:58,090 --> 00:49:11,440
it's yes default in most Linux and Mac

889
00:49:02,440 --> 00:49:15,970
OS 10 devices okay I think we can agree

890
00:49:11,440 --> 00:49:19,480
that taking four seconds to control the

891
00:49:15,970 --> 00:49:22,480
congestion induced by a 10 millisecond

892
00:49:19,480 --> 00:49:28,690
RTT flow is not effective congestion

893
00:49:22,480 --> 00:49:36,840
control now moving on to point B fair

894
00:49:28,690 --> 00:49:39,840
queuing a QM is pretty robust by itself

895
00:49:36,840 --> 00:49:43,150
introducing fair queuing would be

896
00:49:39,840 --> 00:49:46,960
reasonably effective I think but there

897
00:49:43,150 --> 00:49:49,300
is still a concern where you have two

898
00:49:46,960 --> 00:49:53,040
consecutive bottlenecks as presently

899
00:49:49,300 --> 00:49:55,630
occurs quite frequently when you have a

900
00:49:53,040 --> 00:49:59,320
last mile link that's controlled by a

901
00:49:55,630 --> 00:50:03,310
dump iPhone followed by a consumer

902
00:49:59,320 --> 00:50:05,380
equipment box which is implementing fq

903
00:50:03,310 --> 00:50:10,019
code L or something similar

904
00:50:05,380 --> 00:50:12,849
and for my experiments we have found

905
00:50:10,019 --> 00:50:19,258
that you can have quite a large delays

906
00:50:12,849 --> 00:50:24,220
bike induced in the DOMA FIFO until the

907
00:50:19,259 --> 00:50:26,920
the aqm downstream is able to control it

908
00:50:24,220 --> 00:50:28,538
so again this comes back to our four

909
00:50:26,920 --> 00:50:32,859
seconds to control it that's four

910
00:50:28,539 --> 00:50:37,180
seconds of assistant queuing in the last

911
00:50:32,859 --> 00:50:38,769
mile link it does sound like an FQ

912
00:50:37,180 --> 00:50:43,450
Cottle may have issues that need to be

913
00:50:38,769 --> 00:50:48,129
looked up hmm I think that's all I have

914
00:50:43,450 --> 00:50:50,348
to talk about at the moment okay does

915
00:50:48,130 --> 00:50:52,799
anybody have this can be a discussion

916
00:50:50,349 --> 00:50:56,710
people can follow up if they wish but

917
00:50:52,799 --> 00:50:59,769
yes next in line yes my name is Peter I

918
00:50:56,710 --> 00:51:03,220
stood with the SD team also I'd like to

919
00:50:59,769 --> 00:51:07,479
raise two concerns we have one is to

920
00:51:03,220 --> 00:51:10,479
highlight topic II we have a strong

921
00:51:07,479 --> 00:51:16,718
concern about using ECT one as a global

922
00:51:10,479 --> 00:51:18,519
classifier RFC 2474 which is the DSC PRC

923
00:51:16,719 --> 00:51:22,469
to section seven the Security section

924
00:51:18,519 --> 00:51:26,488
talks about how dscp relies on its D s

925
00:51:22,469 --> 00:51:29,049
domains for its security relies on

926
00:51:26,489 --> 00:51:32,410
protection at the borders as well as the

927
00:51:29,049 --> 00:51:34,210
integrity of the domain itself so with

928
00:51:32,410 --> 00:51:37,058
with using ECT one as a global

929
00:51:34,210 --> 00:51:38,380
classifier there are no domains so

930
00:51:37,059 --> 00:51:41,559
that's we'd like to highlight that

931
00:51:38,380 --> 00:51:43,960
concern okay and this consensus to use

932
00:51:41,559 --> 00:51:49,660
this was agreed in Berlin in this group

933
00:51:43,960 --> 00:51:53,049
we can look at it again okay and second

934
00:51:49,660 --> 00:51:54,848
and finally is topic H regarding the

935
00:51:53,049 --> 00:51:56,680
implementation status what we what we

936
00:51:54,849 --> 00:51:58,119
didn't want to do is come in broadside

937
00:51:56,680 --> 00:52:02,529
the team with results that they haven't

938
00:51:58,119 --> 00:52:04,329
seen yet so we we won't do that but what

939
00:52:02,529 --> 00:52:07,900
we will do is confirm that there are

940
00:52:04,329 --> 00:52:10,979
issues on the five dead x-series kernels

941
00:52:07,900 --> 00:52:15,609
of the current repo where TCP Prague is

942
00:52:10,979 --> 00:52:18,040
overreacting to to seee marks and we saw

943
00:52:15,609 --> 00:52:21,340
that in our in our test results

944
00:52:18,040 --> 00:52:23,650
and we would also say that we want to

945
00:52:21,340 --> 00:52:26,140
make sure that the current code base is

946
00:52:23,650 --> 00:52:28,240
running on a five deck series of Colonel

947
00:52:26,140 --> 00:52:32,529
and not 3.19 so that we can be testing

948
00:52:28,240 --> 00:52:34,000
on a colonel that isn't isn't AOL so

949
00:52:32,530 --> 00:52:37,450
that we feel that that's very important

950
00:52:34,000 --> 00:52:39,880
for our testing and lastly we didn't get

951
00:52:37,450 --> 00:52:43,029
too much to our interrupt testing but in

952
00:52:39,880 --> 00:52:47,100
the next few weeks as l4s is reviewed we

953
00:52:43,030 --> 00:52:52,780
hope to do that that's it that's all

954
00:52:47,100 --> 00:52:56,290
okay David black speaking from the floor

955
00:52:52,780 --> 00:52:58,270
as an individual as Bob sort of hinted

956
00:52:56,290 --> 00:53:02,020
this concerns open issue number two

957
00:52:58,270 --> 00:53:05,980
which on the slides is C and D and I'm

958
00:53:02,020 --> 00:53:09,430
going to take a reverse board the whole

959
00:53:05,980 --> 00:53:10,840
point of the single ends that I'm

960
00:53:09,430 --> 00:53:16,299
definitely speaking as an individual on

961
00:53:10,840 --> 00:53:19,150
this the whole point of the l4s

962
00:53:16,300 --> 00:53:21,700
experiment is to go look at something

963
00:53:19,150 --> 00:53:24,310
that is an experiment that you're met as

964
00:53:21,700 --> 00:53:28,990
a whole and from what you've heard from

965
00:53:24,310 --> 00:53:31,240
previous speakers the the the Q the

966
00:53:28,990 --> 00:53:34,479
interaction between floats that all

967
00:53:31,240 --> 00:53:37,149
forces is is trying to address can occur

968
00:53:34,480 --> 00:53:39,010
in any Q anywhere in the Internet sir

969
00:53:37,150 --> 00:53:41,680
netskope that experiment makes an

970
00:53:39,010 --> 00:53:43,690
enormous amount of sense the

971
00:53:41,680 --> 00:53:45,100
resequencing tolerance I have been

972
00:53:43,690 --> 00:53:47,140
complaining about in this remark the

973
00:53:45,100 --> 00:53:49,810
third IETF in a row where I continue to

974
00:53:47,140 --> 00:53:52,450
complain about lumping that in it's been

975
00:53:49,810 --> 00:53:55,230
hard to understand what's going on I

976
00:53:52,450 --> 00:53:58,210
want to thank some of the folks on your

977
00:53:55,230 --> 00:54:00,880
team for a little for helping enlighten

978
00:53:58,210 --> 00:54:03,550
me a little more here what I believe is

979
00:54:00,880 --> 00:54:06,210
going on there is that there are certain

980
00:54:03,550 --> 00:54:09,190
linked technologies we are using RF

981
00:54:06,210 --> 00:54:12,970
signaling particularly over wireless

982
00:54:09,190 --> 00:54:16,330
where on a multi channel or multi bearer

983
00:54:12,970 --> 00:54:18,160
link you get different loss rates

984
00:54:16,330 --> 00:54:21,640
different bit error rates things like

985
00:54:18,160 --> 00:54:25,450
FEC and retransmission come in and if

986
00:54:21,640 --> 00:54:26,859
that hits the lanes asymmetrically well

987
00:54:25,450 --> 00:54:28,720
then all of a sudden you've got a week

988
00:54:26,859 --> 00:54:30,220
for this you've got a week for the slope

989
00:54:28,720 --> 00:54:31,660
for the slowest Lane and there's a

990
00:54:30,220 --> 00:54:36,970
resequencing buffer and

991
00:54:31,660 --> 00:54:39,190
delays now if that understanding is

992
00:54:36,970 --> 00:54:41,770
correct what's going on here this is not

993
00:54:39,190 --> 00:54:43,960
an intranet wide problem it does not

994
00:54:41,770 --> 00:54:47,470
happen in data centers we have

995
00:54:43,960 --> 00:54:50,410
experience in my company in looking at a

996
00:54:47,470 --> 00:54:52,538
center optical plant where we gave up

997
00:54:50,410 --> 00:54:54,730
testing for bit error rates at 10 to the

998
00:54:52,539 --> 00:54:56,410
minus 18 because the errors just weren't

999
00:54:54,730 --> 00:55:00,039
happening there better things better

1000
00:54:56,410 --> 00:55:02,859
things to do with the equipment needless

1001
00:55:00,039 --> 00:55:07,869
to say the underlying cause of the

1002
00:55:02,859 --> 00:55:09,640
resequencing effect is not there in that

1003
00:55:07,869 --> 00:55:11,230
class of networks I believe what's going

1004
00:55:09,640 --> 00:55:12,910
on with the resequencing is it's not

1005
00:55:11,230 --> 00:55:16,299
internet right it's specific link

1006
00:55:12,910 --> 00:55:19,420
technologies in specific networks mostly

1007
00:55:16,299 --> 00:55:21,460
access networks and ought to be solved

1008
00:55:19,420 --> 00:55:25,900
with some kind of network specific

1009
00:55:21,460 --> 00:55:29,890
approach as opposed to lumping this into

1010
00:55:25,900 --> 00:55:31,030
one experiment at where where the goal

1011
00:55:29,890 --> 00:55:33,490
is going to be we're going to get

1012
00:55:31,030 --> 00:55:36,309
everybody than the Internet to adapt all

1013
00:55:33,490 --> 00:55:38,049
their endpoints to deal with these link

1014
00:55:36,309 --> 00:55:39,309
technology specific and network

1015
00:55:38,049 --> 00:55:41,529
technologies that are problems

1016
00:55:39,309 --> 00:55:48,309
I believe that latter approach is a

1017
00:55:41,529 --> 00:55:50,890
major mistake david topic was raised by

1018
00:55:48,309 --> 00:55:54,670
the chairs a number of previous things

1019
00:55:50,890 --> 00:55:56,828
saying if this is the intention then we

1020
00:55:54,670 --> 00:56:00,369
need cross error review before we can

1021
00:55:56,829 --> 00:56:02,079
proceed is just bob want to speak about

1022
00:56:00,369 --> 00:56:04,510
the text the text we talked about is in

1023
00:56:02,079 --> 00:56:07,089
appendix Bob do you want to clarify

1024
00:56:04,510 --> 00:56:10,119
whether the intention is to deal with

1025
00:56:07,089 --> 00:56:12,009
reordering or the reordering is a future

1026
00:56:10,119 --> 00:56:15,609
vision that can happen because you do

1027
00:56:12,010 --> 00:56:17,890
this the latter definitely and I also

1028
00:56:15,609 --> 00:56:19,480
want to make it clear that may from I've

1029
00:56:17,890 --> 00:56:20,859
heard David say this in number times and

1030
00:56:19,480 --> 00:56:25,660
maybe something just clicked in my head

1031
00:56:20,859 --> 00:56:29,078
as to something that David hasn't picked

1032
00:56:25,660 --> 00:56:33,460
up on that we're not we're what we're

1033
00:56:29,079 --> 00:56:39,150
saying is that when a link I think has

1034
00:56:33,460 --> 00:56:42,970
the capability and the possibility of

1035
00:56:39,150 --> 00:56:44,950
not doing resequencing on packet with

1036
00:56:42,970 --> 00:56:48,399
the identifier that

1037
00:56:44,950 --> 00:56:51,220
there4s not with packets from all n

1038
00:56:48,400 --> 00:56:57,700
systems is that understood

1039
00:56:51,220 --> 00:57:00,069
I understand that this is proposed as an

1040
00:56:57,700 --> 00:57:02,379
internet wide service that would

1041
00:57:00,070 --> 00:57:07,960
presumably be rolled out to and be of

1042
00:57:02,380 --> 00:57:10,030
interest to a large population of of n

1043
00:57:07,960 --> 00:57:12,520
systems yes I understand that Yuki you

1044
00:57:10,030 --> 00:57:16,329
can't get in trouble if you didn't set

1045
00:57:12,520 --> 00:57:19,030
the the code point that said that that

1046
00:57:16,329 --> 00:57:21,010
says says go ahead and resi go ahead go

1047
00:57:19,030 --> 00:57:25,300
ahead and omit resequencing but i still

1048
00:57:21,010 --> 00:57:27,880
believe that that this is that this

1049
00:57:25,300 --> 00:57:31,859
still has a major scope problem and it's

1050
00:57:27,880 --> 00:57:35,470
not same experiment ok because then

1051
00:57:31,859 --> 00:57:37,990
given given that relaxation is only four

1052
00:57:35,470 --> 00:57:41,680
packets with the ACP one code point the

1053
00:57:37,990 --> 00:57:45,189
relaxation for the links the resources

1054
00:57:41,680 --> 00:57:48,520
that this requirement is requiring to do

1055
00:57:45,190 --> 00:57:50,770
this loss detection in time have to be

1056
00:57:48,520 --> 00:57:52,960
modified in order to change their

1057
00:57:50,770 --> 00:57:53,619
congestion control to set the ECT one

1058
00:57:52,960 --> 00:57:57,250
anyway

1059
00:57:53,619 --> 00:58:01,180
so you know that's why we're said

1060
00:57:57,250 --> 00:58:02,319
there's an opportunity here to use a

1061
00:58:01,180 --> 00:58:05,279
time-based

1062
00:58:02,319 --> 00:58:09,849
lost detection which happens to be

1063
00:58:05,280 --> 00:58:11,980
deployed in across TCP versions now in

1064
00:58:09,849 --> 00:58:17,859
Windows vs the limits and all the rest

1065
00:58:11,980 --> 00:58:20,050
of it in rack so they're in it seems

1066
00:58:17,859 --> 00:58:22,089
like a good opportunity that that's the

1067
00:58:20,050 --> 00:58:25,329
rationale anyway and we can have the

1068
00:58:22,089 --> 00:58:27,040
discussion on the list maybe I think

1069
00:58:25,329 --> 00:58:29,470
you're I had to have a glass half empty

1070
00:58:27,040 --> 00:58:31,509
versus glass half full discussion I see

1071
00:58:29,470 --> 00:58:33,368
the opportunity I view it as an

1072
00:58:31,510 --> 00:58:34,990
opportunity for a separate experiment

1073
00:58:33,369 --> 00:58:39,150
not one that ought to be lumped into the

1074
00:58:34,990 --> 00:58:43,299
offerors experiment I concur with

1075
00:58:39,150 --> 00:58:45,550
David's view as chair that this is a

1076
00:58:43,300 --> 00:58:49,540
different experiment to the one we

1077
00:58:45,550 --> 00:58:52,750
originally charted and I'm not sure that

1078
00:58:49,540 --> 00:58:56,259
is required experiment that has to go

1079
00:58:52,750 --> 00:58:58,510
with this and if we do it then we must

1080
00:58:56,260 --> 00:59:00,990
go to interior and we must

1081
00:58:58,510 --> 00:59:05,860
then apparent the implications on

1082
00:59:00,990 --> 00:59:07,720
interior and dry so so we if do we need

1083
00:59:05,860 --> 00:59:09,670
to unpack this here as part of the

1084
00:59:07,720 --> 00:59:14,709
alchemist bundle and this is a thing we

1085
00:59:09,670 --> 00:59:16,600
should talk about today the the el

1086
00:59:14,710 --> 00:59:19,990
Faro's drafts just say the the source

1087
00:59:16,600 --> 00:59:21,910
should measure loss detection and detect

1088
00:59:19,990 --> 00:59:26,229
loss in time units doesn't say anything

1089
00:59:21,910 --> 00:59:28,990
about what links must do so that in that

1090
00:59:26,230 --> 00:59:31,450
sense it's not saying this is a link

1091
00:59:28,990 --> 00:59:34,479
experiment but it's saying that someone

1092
00:59:31,450 --> 00:59:40,080
else could do that experiment with l4s

1093
00:59:34,480 --> 00:59:43,480
traffic it's in our next to the speculum

1094
00:59:40,080 --> 00:59:45,880
does it need to be that it doesn't need

1095
00:59:43,480 --> 00:59:48,640
to be there no all it says at the moment

1096
00:59:45,880 --> 00:59:51,870
in the annex is that links could do this

1097
00:59:48,640 --> 00:59:55,150
it doesn't in any normative sense or

1098
00:59:51,870 --> 00:59:57,609
shirred or anything like they just as

1099
00:59:55,150 --> 00:59:59,800
they could all right I suspect part of

1100
00:59:57,610 --> 01:00:02,410
this is also will come up with time if

1101
00:59:59,800 --> 01:00:04,540
we see quick widely deployed with PT or

1102
01:00:02,410 --> 01:00:07,299
best detection and Reich widely deployed

1103
01:00:04,540 --> 01:00:10,120
that does time a base think we will

1104
01:00:07,300 --> 01:00:11,950
maybe see a general reduction of the

1105
01:00:10,120 --> 01:00:16,029
reordering requirement in the internet

1106
01:00:11,950 --> 01:00:17,680
but that is a philosophical debate about

1107
01:00:16,030 --> 01:00:19,960
what might happen in the future rather

1108
01:00:17,680 --> 01:00:22,960
than what has to be in the spec and and

1109
01:00:19,960 --> 01:00:25,360
the point here was to say if a link sees

1110
01:00:22,960 --> 01:00:28,690
a packet with the l4s identifier it

1111
01:00:25,360 --> 01:00:31,630
knows that it's got that behavior rather

1112
01:00:28,690 --> 01:00:34,120
than there's some fuzzier possibility

1113
01:00:31,630 --> 01:00:36,280
that it might have it unfortunately the

1114
01:00:34,120 --> 01:00:40,089
moment you seen knows you've wanted to

1115
01:00:36,280 --> 01:00:44,110
experiments together no no you haven't

1116
01:00:40,090 --> 01:00:46,090
you've just a we're not saying do that

1117
01:00:44,110 --> 01:00:47,800
experiment at all we're just saying

1118
01:00:46,090 --> 01:00:53,550
we're opening up the possibility for

1119
01:00:47,800 --> 01:00:53,550
someone else to do it later it's not

1120
01:00:55,410 --> 01:01:04,450
Jenks in line area are you on this topic

1121
01:00:58,210 --> 01:01:07,150
Jake okay okay I I'm not I'm not sure

1122
01:01:04,450 --> 01:01:09,279
there's much much much else much else to

1123
01:01:07,150 --> 01:01:12,490
add there I guess I think it as one

1124
01:01:09,280 --> 01:01:16,000
questions might give us part of that

1125
01:01:12,490 --> 01:01:17,649
Bob is that an X part and parcel of the

1126
01:01:16,000 --> 01:01:19,030
draft and hence the annex is

1127
01:01:17,650 --> 01:01:20,950
experimental because the drafts

1128
01:01:19,030 --> 01:01:22,810
experimental dirt or quasi annex

1129
01:01:20,950 --> 01:01:24,609
intended to have a different status with

1130
01:01:22,810 --> 01:01:28,390
respect to the rest of the graph well

1131
01:01:24,610 --> 01:01:30,250
the Alex is informative okay this is

1132
01:01:28,390 --> 01:01:34,750
just one possibility would make me

1133
01:01:30,250 --> 01:01:37,390
happier I'm still not satisfied what if

1134
01:01:34,750 --> 01:01:39,220
we pulled that annex and I think this

1135
01:01:37,390 --> 01:01:43,839
another couple of informative annexes

1136
01:01:39,220 --> 01:01:46,000
out of the that L fresh draft put them

1137
01:01:43,840 --> 01:01:48,730
in a second draft that is very clearly

1138
01:01:46,000 --> 01:01:51,030
marked as informative and that there

1139
01:01:48,730 --> 01:01:53,950
will be no normative reference from the

1140
01:01:51,030 --> 01:01:56,530
LS trap with out annexes to this new

1141
01:01:53,950 --> 01:01:58,240
informative draft I can I can take it

1142
01:01:56,530 --> 01:02:03,850
out completely yeah we don't have to say

1143
01:01:58,240 --> 01:02:05,200
that links could do this the issue is if

1144
01:02:03,850 --> 01:02:07,930
the issue is the issue is not so much

1145
01:02:05,200 --> 01:02:10,390
the links could do this it's the it's

1146
01:02:07,930 --> 01:02:12,580
the you have the transit the transport

1147
01:02:10,390 --> 01:02:15,400
protocol must have this behavior

1148
01:02:12,580 --> 01:02:17,529
participate in our government that that

1149
01:02:15,400 --> 01:02:20,800
that part is in the normative parts of

1150
01:02:17,530 --> 01:02:24,490
it and then in the annex it says what

1151
01:02:20,800 --> 01:02:25,990
limits could do if but but what I

1152
01:02:24,490 --> 01:02:29,919
suggested in the talk is we could make

1153
01:02:25,990 --> 01:02:34,020
that must into a sure I would suggest

1154
01:02:29,920 --> 01:02:36,370
you consider removing the paragraphs

1155
01:02:34,020 --> 01:02:42,400
resubmitting them if you want to later

1156
01:02:36,370 --> 01:02:44,859
but avoiding making any statement about

1157
01:02:42,400 --> 01:02:47,740
the reordering apart from what's

1158
01:02:44,860 --> 01:02:49,780
actually happens when you use l4s maybe

1159
01:02:47,740 --> 01:02:52,149
concerning the CEO whatever I don't that

1160
01:02:49,780 --> 01:02:54,730
bit is fine speculating the future in

1161
01:02:52,150 --> 01:02:58,650
that affects another area is a much

1162
01:02:54,730 --> 01:03:02,170
trickier thing to put in an exp draft

1163
01:02:58,650 --> 01:03:04,390
okay like to rethink this then because

1164
01:03:02,170 --> 01:03:08,110
there's a lot of people that really like

1165
01:03:04,390 --> 01:03:09,819
that aspect under a lot of people across

1166
01:03:08,110 --> 01:03:11,470
the idea who like that

1167
01:03:09,820 --> 01:03:13,960
and there a lot of people who also pray

1168
01:03:11,470 --> 01:03:16,169
maybe don't like it but this could be

1169
01:03:13,960 --> 01:03:20,440
the document that tests that if you wish

1170
01:03:16,170 --> 01:03:22,360
our advice is let's think carefully I

1171
01:03:20,440 --> 01:03:23,680
guess I guess I would characterize it as

1172
01:03:22,360 --> 01:03:25,359
there's a lot of people who like it

1173
01:03:23,680 --> 01:03:31,808
technically and there's a lot of

1174
01:03:25,359 --> 01:03:33,700
people who dislike it procedurally if

1175
01:03:31,809 --> 01:03:36,249
you think people like it write it in a

1176
01:03:33,700 --> 01:03:38,739
separate draft I think okay and back to

1177
01:03:36,249 --> 01:03:44,558
Jack oh yeah

1178
01:03:38,739 --> 01:03:46,719
so J holin this list is as I see it a

1179
01:03:44,559 --> 01:03:49,390
list of the technical considerations

1180
01:03:46,719 --> 01:03:52,690
I think there's and I I agree these are

1181
01:03:49,390 --> 01:03:56,379
you know the the more important aspect

1182
01:03:52,690 --> 01:03:57,940
of this there's one other sort of set of

1183
01:03:56,380 --> 01:04:01,239
issues that I would characterize as

1184
01:03:57,940 --> 01:04:04,930
editorial considerations I raised I

1185
01:04:01,239 --> 01:04:06,849
raised a point on the list recently so I

1186
01:04:04,930 --> 01:04:09,910
don't know if you want that in this list

1187
01:04:06,849 --> 01:04:15,400
also the list of potential issues with

1188
01:04:09,910 --> 01:04:21,569
regard to advancing the draft I you know

1189
01:04:15,400 --> 01:04:24,279
I I only have an individual hat and it's

1190
01:04:21,569 --> 01:04:29,229
I don't know whether I'm being too picky

1191
01:04:24,279 --> 01:04:31,839
but in terms of the sort of goals as

1192
01:04:29,229 --> 01:04:34,448
stated by the RFC editor in my opinion

1193
01:04:31,839 --> 01:04:38,229
there were some significant editorial

1194
01:04:34,449 --> 01:04:40,509
issues worth addressing before removing

1195
01:04:38,229 --> 01:04:45,069
the draft forward so I would also

1196
01:04:40,509 --> 01:04:49,529
request adding that to to the list

1197
01:04:45,069 --> 01:04:51,969
although I wouldn't it if you want that

1198
01:04:49,529 --> 01:04:54,339
Jerez separately as a non technical

1199
01:04:51,969 --> 01:04:56,140
issue that's fine okay Jake and let me

1200
01:04:54,339 --> 01:04:59,319
just be sure what you mean by editorial

1201
01:04:56,140 --> 01:05:02,650
do you mean that sections shouldn't be

1202
01:04:59,319 --> 01:05:04,390
in a particular order or text needs to

1203
01:05:02,650 --> 01:05:07,809
be corrected or do you mean that

1204
01:05:04,390 --> 01:05:13,348
sections should not be in a document

1205
01:05:07,809 --> 01:05:18,309
no I this refers more to word choice

1206
01:05:13,349 --> 01:05:21,339
characterization I can respond to that

1207
01:05:18,309 --> 01:05:24,249
and this is excellent feedback there's a

1208
01:05:21,339 --> 01:05:26,109
sad to think about ITF process that we

1209
01:05:24,249 --> 01:05:28,118
don't get people often sending those

1210
01:05:26,109 --> 01:05:29,558
comments in as the group of documents

1211
01:05:28,119 --> 01:05:31,809
progressed through the working group and

1212
01:05:29,559 --> 01:05:32,979
they're very much appreciated by the

1213
01:05:31,809 --> 01:05:36,459
authors on the chairs

1214
01:05:32,979 --> 01:05:38,710
what group must call it is exceedingly

1215
01:05:36,459 --> 01:05:40,480
good time to make sure that all

1216
01:05:38,710 --> 01:05:42,430
words that as good as we can make them

1217
01:05:40,480 --> 01:05:44,740
Irish see a litter will tidy up and

1218
01:05:42,430 --> 01:05:47,379
we'll fix but it's our job to get the

1219
01:05:44,740 --> 01:05:52,990
drafts as best prepared as possible so

1220
01:05:47,380 --> 01:05:56,349
yes please send those to the list well I

1221
01:05:52,990 --> 01:05:59,799
sent one section review to the list I

1222
01:05:56,349 --> 01:06:02,440
was waiting for some feedback it there's

1223
01:05:59,800 --> 01:06:04,359
been a lot of traffic on the list so I

1224
01:06:02,440 --> 01:06:06,160
understand there may be some delay I was

1225
01:06:04,359 --> 01:06:09,660
waiting for some feedback in and sort of

1226
01:06:06,160 --> 01:06:12,399
other opinions on whether this is a

1227
01:06:09,660 --> 01:06:15,279
useful contribution or whether there's

1228
01:06:12,400 --> 01:06:17,020
some sort of because I believe if I

1229
01:06:15,280 --> 01:06:22,660
continue on the path I have started it

1230
01:06:17,020 --> 01:06:25,990
will be quite a lot of feedback Pope's

1231
01:06:22,660 --> 01:06:27,879
getting to the mic hi Jay I suspect this

1232
01:06:25,990 --> 01:06:29,618
is one of the emails I've started and

1233
01:06:27,880 --> 01:06:32,560
not finished and I think I've sent to

1234
01:06:29,619 --> 01:06:35,170
you but I haven't but yeah I've accepted

1235
01:06:32,560 --> 01:06:36,580
and enough also said you don't need to

1236
01:06:35,170 --> 01:06:38,349
go through the rest of the draft

1237
01:06:36,580 --> 01:06:40,660
pointing out stuff I can do that that's

1238
01:06:38,349 --> 01:06:44,410
my job you know I've got the idea of

1239
01:06:40,660 --> 01:06:46,629
what you don't like yeah okay likewise

1240
01:06:44,410 --> 01:06:50,109
just because I don't like it doesn't

1241
01:06:46,630 --> 01:06:51,880
necessarily mean it you know it's a it's

1242
01:06:50,109 --> 01:06:53,200
a questionnaire consensus but I wanted

1243
01:06:51,880 --> 01:06:54,849
to raise the issues and I hope it's been

1244
01:06:53,200 --> 01:06:56,470
helpful would you would you rather I

1245
01:06:54,849 --> 01:06:59,890
said what you obviously don't want to

1246
01:06:56,470 --> 01:07:02,770
say that it's basically too high P so oh

1247
01:06:59,890 --> 01:07:07,540
yeah much hype in it you know yeah yeah

1248
01:07:02,770 --> 01:07:10,599
that's the general nature of the please

1249
01:07:07,540 --> 01:07:12,790
reduce the height or else either your

1250
01:07:10,599 --> 01:07:16,330
working group chairs will tell you to do

1251
01:07:12,790 --> 01:07:17,800
so or your ad will tell you to do so but

1252
01:07:16,330 --> 01:07:20,710
for sure it won't make its way through

1253
01:07:17,800 --> 01:07:22,390
the full process but but but this is

1254
01:07:20,710 --> 01:07:27,839
normal this is this is part of preparing

1255
01:07:22,390 --> 01:07:34,950
a document for actual standards okay

1256
01:07:27,839 --> 01:07:34,950
so any more questions

1257
01:07:40,330 --> 01:07:44,240
in that case I think it's time for a

1258
01:07:42,560 --> 01:07:46,730
helmet I get thrown put my working group

1259
01:07:44,240 --> 01:07:49,609
chair back a hat back on so got two more

1260
01:07:46,730 --> 01:07:51,950
ears to listen and judge please come and

1261
01:07:49,610 --> 01:07:53,600
join me because if we start asking

1262
01:07:51,950 --> 01:07:55,850
questions I want to know the answers

1263
01:07:53,600 --> 01:07:59,180
given first of all could you indicate to

1264
01:07:55,850 --> 01:08:03,009
me all right we have three drafts do we

1265
01:07:59,180 --> 01:08:03,009
have list of the three drafts somewhere

1266
01:08:06,790 --> 01:08:14,960
yeah we will we will be doing hums and

1267
01:08:12,950 --> 01:08:19,790
at least I'm gonna be down walking

1268
01:08:14,960 --> 01:08:25,490
around the floor to find listen so first

1269
01:08:19,790 --> 01:08:29,390
thing is I'd like lists of drafts up and

1270
01:08:25,490 --> 01:08:31,460
I'm going to ask who's read a the

1271
01:08:29,390 --> 01:08:33,320
current version or a recent version of

1272
01:08:31,460 --> 01:08:36,470
these three drafts that the three trusts

1273
01:08:33,319 --> 01:08:38,450
are listed here so let's go for l4s

1274
01:08:36,470 --> 01:08:40,190
architecture could you please raise your

1275
01:08:38,450 --> 01:08:42,559
hand if you had read this version or a

1276
01:08:40,189 --> 01:08:43,910
recent version of this document could

1277
01:08:42,560 --> 01:08:47,810
somebody tell me how many people got

1278
01:08:43,910 --> 01:08:55,189
Hansa it looks like a quite a large

1279
01:08:47,810 --> 01:08:57,680
number okay in more than twenty fifteen

1280
01:08:55,189 --> 01:08:59,779
to twenty okay right and guess what the

1281
01:08:57,680 --> 01:09:02,540
next month question is have you read the

1282
01:08:59,779 --> 01:09:07,069
l4s ID please raise your hand if you've

1283
01:09:02,540 --> 01:09:13,250
read the l4s ID slightly fewer than the

1284
01:09:07,069 --> 01:09:17,779
architecture maybe about fifteen okay

1285
01:09:13,250 --> 01:09:24,859
and the dual cue the Jill couple deck um

1286
01:09:17,779 --> 01:09:28,040
oh yeah okay so we have a maybe fifteen

1287
01:09:24,859 --> 01:09:29,750
to twenty there as well so the first

1288
01:09:28,040 --> 01:09:31,279
pronouncement from the chairs is that I

1289
01:09:29,750 --> 01:09:33,109
believe we have sufficient number of

1290
01:09:31,279 --> 01:09:35,779
people reading these documents that the

1291
01:09:33,109 --> 01:09:38,259
working group can know consider what

1292
01:09:35,779 --> 01:09:38,259
happens

1293
01:09:39,399 --> 01:09:45,870
oh just me and where's

1294
01:09:43,830 --> 01:09:48,200
could comment if he needs to just remind

1295
01:09:45,870 --> 01:09:50,790
it to wises the document Shepard

1296
01:09:48,200 --> 01:09:58,050
where's does want to comment that's good

1297
01:09:50,790 --> 01:10:03,840
I yeah one of the things I noticed is

1298
01:09:58,050 --> 01:10:07,140
that we had ten cottages and we way were

1299
01:10:03,840 --> 01:10:09,810
maybe one more very clear extra one and

1300
01:10:07,140 --> 01:10:13,800
a couple of ones that I think are

1301
01:10:09,810 --> 01:10:17,010
probably sub-bullets under the testing

1302
01:10:13,800 --> 01:10:19,680
issues but the one thing I actually

1303
01:10:17,010 --> 01:10:26,450
noticed I was keeping a score and no one

1304
01:10:19,680 --> 01:10:26,450
brought up a topic J which was the IPR

1305
01:10:27,800 --> 01:10:38,990
we want to do we want to assume that

1306
01:10:33,480 --> 01:10:41,969
things are better with that now or not

1307
01:10:38,990 --> 01:10:43,860
whereas this is David I think some of

1308
01:10:41,970 --> 01:10:45,990
the IPR cephalo needs me so may need

1309
01:10:43,860 --> 01:10:48,599
some soak time so let's let's hope that

1310
01:10:45,990 --> 01:10:49,860
this is a sign that it will that it will

1311
01:10:48,600 --> 01:10:54,510
not be playing a leading role in the

1312
01:10:49,860 --> 01:10:56,790
future there's people at the might you

1313
01:10:54,510 --> 01:10:58,440
know broad crimes I believe the people

1314
01:10:56,790 --> 01:11:01,800
that would like to speak to that issue

1315
01:10:58,440 --> 01:11:03,299
on the IPR are not present and will

1316
01:11:01,800 --> 01:11:08,880
probably speak on the list is that

1317
01:11:03,300 --> 01:11:12,690
subject comes up I know that took a

1318
01:11:08,880 --> 01:11:17,330
whole and Jorgensen was planning to do

1319
01:11:12,690 --> 01:11:17,330
so but the timing is bad for him today

1320
01:11:19,550 --> 01:11:27,180
so I believe Toki hurlan gurgenson was

1321
01:11:24,990 --> 01:11:29,099
planning to talk about this today but

1322
01:11:27,180 --> 01:11:31,500
the timing was bad for him was this

1323
01:11:29,100 --> 01:11:33,990
session so he will probably comment

1324
01:11:31,500 --> 01:11:35,910
later yeah and we already have some

1325
01:11:33,990 --> 01:11:41,490
input from him some more and more input

1326
01:11:35,910 --> 01:11:44,910
will be welcome okay and Wes yeah that

1327
01:11:41,490 --> 01:11:52,019
was really all from my summary I thought

1328
01:11:44,910 --> 01:11:55,320
it was good discussion so then in this

1329
01:11:52,020 --> 01:11:57,619
case I propose that we take the sense of

1330
01:11:55,320 --> 01:11:59,809
the room using a hum to do

1331
01:11:57,619 --> 01:12:02,119
if we should put these documents into

1332
01:11:59,810 --> 01:12:05,300
the working group must call for comments

1333
01:12:02,119 --> 01:12:07,070
stage the stage will open a formal

1334
01:12:05,300 --> 01:12:10,880
process for people to comment on the

1335
01:12:07,070 --> 01:12:12,500
documents please relate such currents as

1336
01:12:10,880 --> 01:12:14,179
you think about whether your you think

1337
01:12:12,500 --> 01:12:15,500
they're ready because if the comments

1338
01:12:14,179 --> 01:12:17,780
you provide should be related to

1339
01:12:15,500 --> 01:12:19,940
sections of these documents to see if

1340
01:12:17,780 --> 01:12:23,119
they are ready and fit for progression

1341
01:12:19,940 --> 01:12:25,580
by the working group um we would like to

1342
01:12:23,119 --> 01:12:28,369
know if you think those documents are

1343
01:12:25,580 --> 01:12:29,330
ready for evaluation in a working group

1344
01:12:28,369 --> 01:12:31,489
last call

1345
01:12:29,330 --> 01:12:33,320
please hum if you think these documents

1346
01:12:31,489 --> 01:12:42,348
should go to a working group last call

1347
01:12:33,320 --> 01:12:45,019
now please hum now if you think these

1348
01:12:42,349 --> 01:12:56,300
documents should not go to working group

1349
01:12:45,020 --> 01:12:58,280
was coal no okay so if you didn't huh my

1350
01:12:56,300 --> 01:13:00,170
the way and you wish to come and speak

1351
01:12:58,280 --> 01:13:02,090
at the mic please do but first of all

1352
01:13:00,170 --> 01:13:06,440
ask David what he feels the sense of the

1353
01:13:02,090 --> 01:13:17,540
room was I heard weak hums for both

1354
01:13:06,440 --> 01:13:21,409
alternatives there was also hums against

1355
01:13:17,540 --> 01:13:23,780
in Java but just from Dave said there

1356
01:13:21,409 --> 01:13:29,290
was also a hum in Java for against but

1357
01:13:23,780 --> 01:13:29,290
just from Dave okay

1358
01:13:37,460 --> 01:13:49,770
I still I still across the floor to see

1359
01:13:42,420 --> 01:13:53,220
if our ad wishes to say anything okay

1360
01:13:49,770 --> 01:13:55,470
so based on this that it's this seems to

1361
01:13:53,220 --> 01:13:59,580
be some people's list to see it is not

1362
01:13:55,470 --> 01:14:02,130
ready so I think the reasonable thing

1363
01:13:59,580 --> 01:14:06,000
here is to give those people a short

1364
01:14:02,130 --> 01:14:07,950
time a few weeks to send those points

1365
01:14:06,000 --> 01:14:09,810
what's this cause it is not read it

1366
01:14:07,950 --> 01:14:14,370
cetera and have a discussion on the main

1367
01:14:09,810 --> 01:14:17,640
list to resolve that this sounds like a

1368
01:14:14,370 --> 01:14:18,390
very good approach we will not start a

1369
01:14:17,640 --> 01:14:21,300
working group

1370
01:14:18,390 --> 01:14:24,630
last call for this document this idea we

1371
01:14:21,300 --> 01:14:26,850
plan to do so but we will shall give a

1372
01:14:24,630 --> 01:14:28,980
few weeks for people to respond to that

1373
01:14:26,850 --> 01:14:30,900
plan and explain whether this is a good

1374
01:14:28,980 --> 01:14:32,160
idea or not so if you think that that

1375
01:14:30,900 --> 01:14:36,240
plan is not a good idea

1376
01:14:32,160 --> 01:14:39,630
please explicitly comment on the mailing

1377
01:14:36,240 --> 01:14:46,530
list to the chairs to help us decide

1378
01:14:39,630 --> 01:14:49,920
what to do and Magnus yes and I mean if

1379
01:14:46,530 --> 01:14:52,469
you have things that are technical

1380
01:14:49,920 --> 01:14:59,010
reasons why it's not ready ensure that

1381
01:14:52,470 --> 01:15:02,130
that also gets raised thank you I see

1382
01:14:59,010 --> 01:15:04,710
shall be next it's a no working group

1383
01:15:02,130 --> 01:15:08,760
draft and coming around presentation by

1384
01:15:04,710 --> 01:15:27,420
on on list Draft Morton T s BW g SCE

1385
01:15:08,760 --> 01:15:37,160
please come and tell us about it working

1386
01:15:27,420 --> 01:15:37,160
well enough okay

1387
01:15:37,980 --> 01:15:45,490
my name is Jonathan Martin I already

1388
01:15:41,350 --> 01:15:47,520
heard me at the microphone and I'd like

1389
01:15:45,490 --> 01:15:50,679
to talk about some congestion

1390
01:15:47,520 --> 01:16:02,740
experienced and alternative proposal for

1391
01:15:50,680 --> 01:16:05,650
the use of the ECT one code point so we

1392
01:16:02,740 --> 01:16:07,929
would be defined ECT one as some

1393
01:16:05,650 --> 01:16:12,129
congestion experienced as a

1394
01:16:07,930 --> 01:16:14,170
high-fidelity congestion signal and you

1395
01:16:12,130 --> 01:16:18,460
can see the table at the top of the

1396
01:16:14,170 --> 01:16:20,770
slide lists the three existing code

1397
01:16:18,460 --> 01:16:26,040
points in use buying IRS three three one

1398
01:16:20,770 --> 01:16:31,780
six eight and the extra one and we also

1399
01:16:26,040 --> 01:16:38,320
use a spare bit formally known as NS in

1400
01:16:31,780 --> 01:16:42,670
the TCP header for feedback in that's

1401
01:16:38,320 --> 01:16:45,759
what third draft is about we retain all

1402
01:16:42,670 --> 01:16:48,340
other our SVC one six eight details for

1403
01:16:45,760 --> 01:16:52,540
full backwards compatibility and that

1404
01:16:48,340 --> 01:16:54,910
means that if an SCE endpoint

1405
01:16:52,540 --> 01:16:58,110
communicates with a nut with a non SCE

1406
01:16:54,910 --> 01:17:02,349
endpoint it automatically falls back to

1407
01:16:58,110 --> 01:17:07,330
standard behavior if there's a non SCE

1408
01:17:02,350 --> 01:17:10,900
middle box if then we also have standard

1409
01:17:07,330 --> 01:17:30,040
behavior we have multiple instances of

1410
01:17:10,900 --> 01:17:32,170
running code available okay so now

1411
01:17:30,040 --> 01:17:36,910
design philosophy is based on the three

1412
01:17:32,170 --> 01:17:39,970
following quotes principles which are

1413
01:17:36,910 --> 01:17:41,280
illustrated by these quotes first do no

1414
01:17:39,970 --> 01:17:44,260
harm

1415
01:17:41,280 --> 01:17:47,830
heterogeneity is inevitable and must be

1416
01:17:44,260 --> 01:17:51,330
supported by design effective congestion

1417
01:17:47,830 --> 01:17:51,330
control is required

1418
01:17:52,440 --> 01:17:59,549
so first for backwards compatibility

1419
01:17:54,429 --> 01:18:05,380
which is part of our do no harm and

1420
01:17:59,550 --> 01:18:09,250
heterogeneity acceptance normal additive

1421
01:18:05,380 --> 01:18:11,710
increment and multiplicative increase

1422
01:18:09,250 --> 01:18:14,679
and multiplicative decrease principles

1423
01:18:11,710 --> 01:18:18,820
apply so we have a normal congestion

1424
01:18:14,679 --> 01:18:22,110
window surveyed a TCP friendly response

1425
01:18:18,820 --> 01:18:28,210
to loss and the TCP map and to

1426
01:18:22,110 --> 01:18:32,049
congestion experience marks and existing

1427
01:18:28,210 --> 01:18:32,710
middleboxes treat packets that a matress

1428
01:18:32,050 --> 01:18:36,790
SCE

1429
01:18:32,710 --> 01:18:38,310
as ECT and are still able to mark c e on

1430
01:18:36,790 --> 01:18:41,409
them

1431
01:18:38,310 --> 01:18:44,560
existing endpoints ignore our signals

1432
01:18:41,409 --> 01:18:45,940
this is completely harmless it's a

1433
01:18:44,560 --> 01:18:49,420
transparent fall back to standard

1434
01:18:45,940 --> 01:18:53,500
behavior the meaning of congestion

1435
01:18:49,420 --> 01:18:56,469
experience is thus preserved and that

1436
01:18:53,500 --> 01:19:00,370
means that SCE becomes a soft cruise

1437
01:18:56,469 --> 01:19:02,739
control signal because we still have the

1438
01:19:00,370 --> 01:19:07,230
ability to a multiplicative decrease on

1439
01:19:02,739 --> 01:19:10,629
a standard C II signal or a loss if

1440
01:19:07,230 --> 01:19:14,650
there's a big change a big reduction in

1441
01:19:10,630 --> 01:19:20,170
the path capacity this is a big

1442
01:19:14,650 --> 01:19:22,480
advantage of a DC tcp which only has the

1443
01:19:20,170 --> 01:19:27,400
one code point to do it signaling on and

1444
01:19:22,480 --> 01:19:30,549
therefore has to use it still has to

1445
01:19:27,400 --> 01:19:33,489
emulate the multiplicative decrease for

1446
01:19:30,550 --> 01:19:35,469
that scenario this gives us more

1447
01:19:33,489 --> 01:19:39,940
flexibility in what we do as our

1448
01:19:35,469 --> 01:19:44,739
response and here we have a

1449
01:19:39,940 --> 01:19:49,678
demonstration of what happens when we go

1450
01:19:44,739 --> 01:19:53,290
through a standard metal box these are

1451
01:19:49,679 --> 01:19:58,150
two flows both endpoints happen to

1452
01:19:53,290 --> 01:20:01,840
support SCE but the cubic flow is not

1453
01:19:58,150 --> 01:20:03,549
using the SCE signals only the Vino SCE

1454
01:20:01,840 --> 01:20:07,500
flow is

1455
01:20:03,550 --> 01:20:10,480
and you can see that the two flows are

1456
01:20:07,500 --> 01:20:14,080
proceeding approximately equal in

1457
01:20:10,480 --> 01:20:16,299
throughput and this is what you would

1458
01:20:14,080 --> 01:20:20,200
expect from a Reno versus cubic

1459
01:20:16,300 --> 01:20:22,990
comparison anyway and the latency is

1460
01:20:20,200 --> 01:20:26,830
also reasonable there are spikes of up

1461
01:20:22,990 --> 01:20:28,900
to 5 milliseconds at 8 switches and I

1462
01:20:26,830 --> 01:20:35,769
think you made a second path that's very

1463
01:20:28,900 --> 01:20:38,080
little the way we apply se signals in se

1464
01:20:35,770 --> 01:20:41,800
is a signal from the network to the

1465
01:20:38,080 --> 01:20:44,230
endpoints the network boxes don't need

1466
01:20:41,800 --> 01:20:48,100
to know anything other than it is an

1467
01:20:44,230 --> 01:20:50,139
ECCN capable transport so se is a high

1468
01:20:48,100 --> 01:20:55,270
fidelity congestion control signal which

1469
01:20:50,140 --> 01:20:58,450
we apply as a marking ramp the

1470
01:20:55,270 --> 01:21:02,380
probability of amp based on Q surgeon

1471
01:20:58,450 --> 01:21:04,330
time or Q occupancy if you prefer high

1472
01:21:02,380 --> 01:21:07,480
fidelity means that we have many marks

1473
01:21:04,330 --> 01:21:12,990
per RT team as opposed to standard

1474
01:21:07,480 --> 01:21:12,990
marking which is many RT T's per mark

1475
01:21:13,170 --> 01:21:20,440
applying of course a steady-state

1476
01:21:15,070 --> 01:21:23,139
situation we can easily add SCE marking

1477
01:21:20,440 --> 01:21:25,629
to an existing ATM algorithm and that is

1478
01:21:23,140 --> 01:21:29,530
what we have done for reference

1479
01:21:25,630 --> 01:21:32,140
implementation and this is easiest to do

1480
01:21:29,530 --> 01:21:33,910
if fair queuing is also implemented we

1481
01:21:32,140 --> 01:21:37,180
will talk more about this later

1482
01:21:33,910 --> 01:21:40,599
a simple threshold function is a valid

1483
01:21:37,180 --> 01:21:43,870
implementation grant functions probably

1484
01:21:40,600 --> 01:21:45,820
perform better and seeing marks are

1485
01:21:43,870 --> 01:21:49,240
still relevant you can see to the right

1486
01:21:45,820 --> 01:21:51,820
of the diagram is the region above 5

1487
01:21:49,240 --> 01:21:56,260
milliseconds surgeon time in which code

1488
01:21:51,820 --> 01:21:59,320
L does it marking so we have full

1489
01:21:56,260 --> 01:22:06,210
Becker's compatibility of an SCE middle

1490
01:21:59,320 --> 01:22:06,210
box with existing RFC compliant flows

1491
01:22:06,570 --> 01:22:13,360
the response to SCE

1492
01:22:09,520 --> 01:22:17,000
is signaled to e SC e which is the

1493
01:22:13,360 --> 01:22:21,040
former NS bit which is released by the

1494
01:22:17,000 --> 01:22:24,230
the historical status nonce some

1495
01:22:21,040 --> 01:22:27,830
specification this is completely

1496
01:22:24,230 --> 01:22:30,230
orthogonal to the ECE NCR cwl bits which

1497
01:22:27,830 --> 01:22:34,610
are still treated as with our three

1498
01:22:30,230 --> 01:22:37,280
three one six eight and when this bit is

1499
01:22:34,610 --> 01:22:41,299
set it indicates that the currently act

1500
01:22:37,280 --> 01:22:43,820
seconds carried an SCE mark the receiver

1501
01:22:41,300 --> 01:22:47,930
logic is very simple immediate and

1502
01:22:43,820 --> 01:22:52,280
almost stateless so it's easy to

1503
01:22:47,930 --> 01:22:56,830
implement the patching of implementation

1504
01:22:52,280 --> 01:23:03,139
to do so is a few hundred lines

1505
01:22:56,830 --> 01:23:10,250
including including some with auxiliary

1506
01:23:03,140 --> 01:23:12,770
things it's simple the center response

1507
01:23:10,250 --> 01:23:16,040
it may ignore it as existing

1508
01:23:12,770 --> 01:23:17,200
implementations do this is backwards

1509
01:23:16,040 --> 01:23:20,450
compatibility

1510
01:23:17,200 --> 01:23:24,230
we have DCTC theme which influenced the

1511
01:23:20,450 --> 01:23:29,710
DC TCP response but to an SCE signal

1512
01:23:24,230 --> 01:23:33,860
instead of a seee signal and as the it

1513
01:23:29,710 --> 01:23:36,200
reacts the ability to do a straight

1514
01:23:33,860 --> 01:23:41,540
multiplicative decrease to a standard

1515
01:23:36,200 --> 01:23:45,490
RFC they one six eight signal main OSCE

1516
01:23:41,540 --> 01:23:52,370
modifies this response to be less severe

1517
01:23:45,490 --> 01:23:56,500
the we scaled by the square root of the

1518
01:23:52,370 --> 01:24:01,070
congestion window instead of by student

1519
01:23:56,500 --> 01:24:03,680
we also have in progress a cubic SCE

1520
01:24:01,070 --> 01:24:06,110
response which also deals was the fact

1521
01:24:03,680 --> 01:24:11,120
that cubic can grow at greater than

1522
01:24:06,110 --> 01:24:14,179
linear rate we exit so start on a single

1523
01:24:11,120 --> 01:24:19,300
SCE mark because we need to do that as

1524
01:24:14,180 --> 01:24:19,300
soon as a congestion signal is received

1525
01:24:21,150 --> 01:24:26,219
and here we have a demonstration of an

1526
01:24:23,400 --> 01:24:30,480
ideal scenario where Kubek is competing

1527
01:24:26,220 --> 01:24:35,700
with you know us SCE as before but this

1528
01:24:30,480 --> 01:24:38,040
time in with the middle box that

1529
01:24:35,700 --> 01:24:42,809
supports both fair queuing and SCE

1530
01:24:38,040 --> 01:24:49,190
marking and here we can see that the SE

1531
01:24:42,810 --> 01:24:52,070
flow in orange is neatly using the space

1532
01:24:49,190 --> 01:24:57,269
the capacity left over and by the

1533
01:24:52,070 --> 01:24:58,950
sawtooth in the cubic flow mia cowan

1534
01:24:57,270 --> 01:25:01,650
just a quick question on the graph and

1535
01:24:58,950 --> 01:25:04,019
also the Ella bar and for the redirects

1536
01:25:01,650 --> 01:25:10,049
or a cubic only flow do you also have

1537
01:25:04,020 --> 01:25:13,680
any AQ m in a bottleneck yes the cubic

1538
01:25:10,050 --> 01:25:16,920
flow is receiving Cee marks in which a

1539
01:25:13,680 --> 01:25:19,260
key mi using anabolic this is effective

1540
01:25:16,920 --> 01:25:26,270
we're using cake so it's effectively

1541
01:25:19,260 --> 01:25:26,270
kado and the threshold marking special

1542
01:25:27,200 --> 01:25:32,070
thresholds basically the standard

1543
01:25:29,670 --> 01:25:43,140
parameters 100 millisecond interval 5

1544
01:25:32,070 --> 01:25:44,610
millisecond target thank you so you can

1545
01:25:43,140 --> 01:25:48,710
see that there are no multiplicative

1546
01:25:44,610 --> 01:25:53,370
decreases in the green OSCE throughput

1547
01:25:48,710 --> 01:25:55,980
chart and this is because it is reacting

1548
01:25:53,370 --> 01:26:01,230
sufficiently well to SCE marking to

1549
01:25:55,980 --> 01:26:05,280
avoid the need for ze marks the green

1550
01:26:01,230 --> 01:26:09,179
trace of the bottom shows the the

1551
01:26:05,280 --> 01:26:11,610
latency of the SCE flow itself and you

1552
01:26:09,180 --> 01:26:14,690
can see that the peaks of it are lower

1553
01:26:11,610 --> 01:26:20,400
than the purple trace which is the cubic

1554
01:26:14,690 --> 01:26:22,950
internal RTG that last with

1555
01:26:20,400 --> 01:26:28,040
queueing but pinging the sink you as the

1556
01:26:22,950 --> 01:26:33,360
data is that right or what was the pink

1557
01:26:28,040 --> 01:26:36,030
the pink is the cubic internal agency

1558
01:26:33,360 --> 01:26:38,940
that the flow latency yeah and you're

1559
01:26:36,030 --> 01:26:41,160
using F chip we're using fair queuing

1560
01:26:38,940 --> 01:26:43,169
and you've got a ping is the ping in a

1561
01:26:41,160 --> 01:26:44,210
separate queue or in the same queue

1562
01:26:43,170 --> 01:26:46,740
something else

1563
01:26:44,210 --> 01:26:50,400
the two flows gets there / queues in

1564
01:26:46,740 --> 01:26:54,929
this case the two because it's fair

1565
01:26:50,400 --> 01:27:01,440
queuing so the bottom flow right at the

1566
01:26:54,930 --> 01:27:03,150
bottom yes in dark purple is a separate

1567
01:27:01,440 --> 01:27:05,549
measurement flow which is using yet

1568
01:27:03,150 --> 01:27:07,530
another for queue using a separate queue

1569
01:27:05,550 --> 01:27:09,720
yeah so this is measuring how fast the

1570
01:27:07,530 --> 01:27:12,870
queues rotating rather than the time

1571
01:27:09,720 --> 01:27:15,020
through the of the traffic yes yes right

1572
01:27:12,870 --> 01:27:22,230
okay so it's not the scheduler tix yeah

1573
01:27:15,020 --> 01:27:25,320
okay all right so here we also have se

1574
01:27:22,230 --> 01:27:30,990
use performance in a single queue with

1575
01:27:25,320 --> 01:27:35,880
SCE support and as before we have a

1576
01:27:30,990 --> 01:27:38,130
delayed start of the second flow so one

1577
01:27:35,880 --> 01:27:40,530
has almost reached the link capacity and

1578
01:27:38,130 --> 01:27:43,650
the second must then compete and we can

1579
01:27:40,530 --> 01:27:46,080
see that it converges this is just like

1580
01:27:43,650 --> 01:27:47,580
FK I'm sorry not speaking as char here

1581
01:27:46,080 --> 01:27:50,160
maybe I should go down there but this

1582
01:27:47,580 --> 01:27:52,110
was just like FQ I mean this is just two

1583
01:27:50,160 --> 01:27:55,620
Q's is it not or is this something I'm

1584
01:27:52,110 --> 01:27:58,410
missing etc this one is single without

1585
01:27:55,620 --> 01:28:01,190
fitting right okay and you can see it

1586
01:27:58,410 --> 01:28:03,809
from the caption on the right yeah yeah

1587
01:28:01,190 --> 01:28:06,419
but this is where SCE and you can see

1588
01:28:03,810 --> 01:28:14,010
that was just the SCE response we do

1589
01:28:06,420 --> 01:28:17,070
have convergence so we don't only

1590
01:28:14,010 --> 01:28:17,420
support fair queuing we prefer it of

1591
01:28:17,070 --> 01:28:20,549
course

1592
01:28:17,420 --> 01:28:22,950
however with questions were based on the

1593
01:28:20,550 --> 01:28:28,020
list about how we could do this with

1594
01:28:22,950 --> 01:28:31,380
dual queues and we observed that any

1595
01:28:28,020 --> 01:28:33,750
traffic data fire such as a dscp you may

1596
01:28:31,380 --> 01:28:34,170
be used to direct seu traffic into a

1597
01:28:33,750 --> 01:28:38,730
special

1598
01:28:34,170 --> 01:28:41,690
Lyons cute and so such that conventional

1599
01:28:38,730 --> 01:28:43,769
traffic would default to the first queue

1600
01:28:41,690 --> 01:28:46,469
for robustness against mr.

1601
01:28:43,770 --> 01:28:47,460
classification it is straightforward to

1602
01:28:46,469 --> 01:28:50,250
arrange things

1603
01:28:47,460 --> 01:28:54,030
the conventional queue does not mark

1604
01:28:50,250 --> 01:28:56,520
with SCM and therefore if SCE traffic is

1605
01:28:54,030 --> 01:29:00,750
misclassified into the conventional

1606
01:28:56,520 --> 01:29:05,280
queue then it just receives standard RSC

1607
01:29:00,750 --> 01:29:07,140
3 1 6 8 behavior and this we think is a

1608
01:29:05,280 --> 01:29:10,710
major benefit of using of the

1609
01:29:07,140 --> 01:29:13,110
unambiguous signalling provided by

1610
01:29:10,710 --> 01:29:22,170
putting SCE on a different code point

1611
01:29:13,110 --> 01:29:24,509
than CD now if we put SCE and

1612
01:29:22,170 --> 01:29:29,070
conventional traffic into a single queue

1613
01:29:24,510 --> 01:29:31,320
then as standard SCE

1614
01:29:29,070 --> 01:29:33,840
yields very politely to the conventional

1615
01:29:31,320 --> 01:29:37,679
traffic you can see the Amish trace at

1616
01:29:33,840 --> 01:29:41,940
the bottom shows much lower than the in

1617
01:29:37,679 --> 01:29:45,120
the cubic flow computing with it at the

1618
01:29:41,940 --> 01:29:46,919
top now this may actually be useful to

1619
01:29:45,120 --> 01:29:52,370
some people if they want a scavenging

1620
01:29:46,920 --> 01:29:52,370
transport we leave that up to you

1621
01:29:53,000 --> 01:29:59,550
however we have an alternative approach

1622
01:29:56,520 --> 01:30:02,489
as well by modifying the SE marking

1623
01:29:59,550 --> 01:30:05,580
probability ramp into this two-stage

1624
01:30:02,489 --> 01:30:08,070
format some of our seniors benefits can

1625
01:30:05,580 --> 01:30:10,920
be realized without realizing multiple

1626
01:30:08,070 --> 01:30:12,509
queues there are some compromises in the

1627
01:30:10,920 --> 01:30:15,330
performance the current implementation

1628
01:30:12,510 --> 01:30:18,120
is not an odd three you have to

1629
01:30:15,330 --> 01:30:24,780
configure the level at which that kink

1630
01:30:18,120 --> 01:30:27,019
in the graph appears but SCE can coexist

1631
01:30:24,780 --> 01:30:30,330
fairly with conventional traffic and

1632
01:30:27,020 --> 01:30:34,860
with the same queueing parameters run

1633
01:30:30,330 --> 01:30:36,780
smoothly in competition was itself the

1634
01:30:34,860 --> 01:30:38,519
vamp parameters are chosen at the single

1635
01:30:36,780 --> 01:30:40,679
queue bottleneck node in question which

1636
01:30:38,520 --> 01:30:45,060
means that this is a network

1637
01:30:40,679 --> 01:30:47,500
administration decision and doesn't need

1638
01:30:45,060 --> 01:30:52,420
to be specially set up after the

1639
01:30:47,500 --> 01:30:54,660
ends nerves and here is what happens

1640
01:30:52,420 --> 01:30:58,920
when you have conventional and SCE

1641
01:30:54,660 --> 01:31:02,680
traffic computing with this setup it's

1642
01:30:58,920 --> 01:31:07,720
not ideal but you can see that SCE is

1643
01:31:02,680 --> 01:31:10,180
getting more throughput than it did in

1644
01:31:07,720 --> 01:31:12,730
the previous example and then when we

1645
01:31:10,180 --> 01:31:17,770
put two SCE flows together you can see

1646
01:31:12,730 --> 01:31:19,929
that they run smoothly for the most part

1647
01:31:17,770 --> 01:31:21,850
there's a little bit of a glitch at the

1648
01:31:19,930 --> 01:31:28,050
end where probably a stray see

1649
01:31:21,850 --> 01:31:30,550
e-marketing but you know that these are

1650
01:31:28,050 --> 01:31:35,580
tweak these sorts of things can be

1651
01:31:30,550 --> 01:31:38,560
tweaked later with more experience now a

1652
01:31:35,580 --> 01:31:41,500
really important matter is that we have

1653
01:31:38,560 --> 01:31:45,190
a running code in fact we have multiple

1654
01:31:41,500 --> 01:31:50,020
instances of running code four months

1655
01:31:45,190 --> 01:31:54,009
ago at the end of I 80 f-104 we already

1656
01:31:50,020 --> 01:32:00,490
had a Phoebe SD sender a Phoebe SD

1657
01:31:54,010 --> 01:32:04,380
receiver and a Linux based middle box in

1658
01:32:00,490 --> 01:32:08,950
fact - even two implementations there

1659
01:32:04,380 --> 01:32:13,570
today we have Linux senders as well a

1660
01:32:08,950 --> 01:32:18,280
Linux receiver with a better feedback

1661
01:32:13,570 --> 01:32:19,330
algorithm and we have even have a Phoebe

1662
01:32:18,280 --> 01:32:22,809
SD middle box

1663
01:32:19,330 --> 01:32:27,000
thanks to this report that we got from

1664
01:32:22,810 --> 01:32:31,660
Logan from Africa

1665
01:32:27,000 --> 01:32:33,490
so Albert continues to mature desert

1666
01:32:31,660 --> 01:32:39,970
diversify and character they

1667
01:32:33,490 --> 01:32:42,130
characterize ever all of our work and as

1668
01:32:39,970 --> 01:32:46,840
part of that we found some interesting

1669
01:32:42,130 --> 01:32:49,210
things about TCP pacing first something

1670
01:32:46,840 --> 01:32:51,490
fundamental which also I think applies

1671
01:32:49,210 --> 01:32:55,240
to other high fidelity congestion

1672
01:32:51,490 --> 01:32:57,639
controls the tie fidelity congestion

1673
01:32:55,240 --> 01:33:00,519
signaling is very sensitive to

1674
01:32:57,640 --> 01:33:01,150
burstiness of the traffic because these

1675
01:33:00,520 --> 01:33:03,840
bursts

1676
01:33:01,150 --> 01:33:08,670
collect transiently in the queue and

1677
01:33:03,840 --> 01:33:11,110
cause this congestion signaling a

1678
01:33:08,670 --> 01:33:12,210
clocking is not sufficient to avoid

1679
01:33:11,110 --> 01:33:14,259
these bursts

1680
01:33:12,210 --> 01:33:16,810
especially when you have delayed acts

1681
01:33:14,260 --> 01:33:21,489
because delayed acts naturally leads to

1682
01:33:16,810 --> 01:33:24,280
packet pairs so pacing is effectively

1683
01:33:21,489 --> 01:33:29,739
mandatory when used with high fidelity

1684
01:33:24,280 --> 01:33:33,130
congestion signaling in connection with

1685
01:33:29,739 --> 01:33:37,440
this Linux actually exempts the first

1686
01:33:33,130 --> 01:33:42,310
ten packets in each flow from pacing

1687
01:33:37,440 --> 01:33:45,280
this is quite a nice feature it prevents

1688
01:33:42,310 --> 01:33:50,170
slow start from working with SCE so we

1689
01:33:45,280 --> 01:33:53,949
patched it out this one line fixed we

1690
01:33:50,170 --> 01:33:56,800
also found that the transition from so

1691
01:33:53,949 --> 01:33:59,169
start to congestion avoidance requires a

1692
01:33:56,800 --> 01:34:01,420
halving of the send weight normally this

1693
01:33:59,170 --> 01:34:04,510
is provided by the first congestion

1694
01:34:01,420 --> 01:34:11,260
signal experienced by the flow whether

1695
01:34:04,510 --> 01:34:13,330
that's a loss or a c-- e-- mark so what

1696
01:34:11,260 --> 01:34:16,480
we have to do instead because we don't

1697
01:34:13,330 --> 01:34:20,679
have a multiplicative decrease all the

1698
01:34:16,480 --> 01:34:23,400
time we use modified spacing scale

1699
01:34:20,679 --> 01:34:29,860
factors which enforce a throughput

1700
01:34:23,400 --> 01:34:37,750
change at that boundary and we expect to

1701
01:34:29,860 --> 01:34:45,190
continue experimenting with that so if

1702
01:34:37,750 --> 01:34:49,210
we we have also a yeah we have a public

1703
01:34:45,190 --> 01:34:53,980
repository containing SCA code it's

1704
01:34:49,210 --> 01:34:58,389
based on the Linux 5.1 next net next

1705
01:34:53,980 --> 01:35:01,780
series kernel and I forgot to put the

1706
01:34:58,389 --> 01:35:04,619
URL on the slide but you can send us

1707
01:35:01,780 --> 01:35:10,360
revised slides and will happily posted

1708
01:35:04,619 --> 01:35:13,049
I'm sure we can we'll post a link on the

1709
01:35:10,360 --> 01:35:16,339
mailing list as well

1710
01:35:13,050 --> 01:35:19,650
please do post is very nice to Cory and

1711
01:35:16,340 --> 01:35:22,320
please do post and where we can get the

1712
01:35:19,650 --> 01:35:24,660
patches or whatever you're working on I

1713
01:35:22,320 --> 01:35:26,219
guess they weren't up streamed the

1714
01:35:24,660 --> 01:35:30,410
change you're talking weren't up

1715
01:35:26,220 --> 01:35:30,410
streamed they were your own versions yes

1716
01:35:32,420 --> 01:35:39,390
we have a complete git repository okay

1717
01:35:36,090 --> 01:35:42,960
excellent post-up please know my

1718
01:35:39,390 --> 01:35:44,310
question is accurate ecn is some of you

1719
01:35:42,960 --> 01:35:46,830
been working on here as well

1720
01:35:44,310 --> 01:35:48,960
how does actually see and figure with

1721
01:35:46,830 --> 01:35:52,190
what you're doing because you seem to be

1722
01:35:48,960 --> 01:35:57,390
reusing other bits

1723
01:35:52,190 --> 01:36:01,110
well accuracy in takes over the NS bit

1724
01:35:57,390 --> 01:36:06,060
for the three-way handshake and if it's

1725
01:36:01,110 --> 01:36:08,759
negotiation is successful we found that

1726
01:36:06,060 --> 01:36:09,500
a QC n was not actually useful for our

1727
01:36:08,760 --> 01:36:12,840
purpose

1728
01:36:09,500 --> 01:36:17,550
so we declined the a QC n negotiation

1729
01:36:12,840 --> 01:36:24,120
and use the NS bit thereafter as if it

1730
01:36:17,550 --> 01:36:27,480
were not some essentially hmm the reason

1731
01:36:24,120 --> 01:36:30,210
why occasion was not useful to us it's

1732
01:36:27,480 --> 01:36:33,629
because the the three bit field it

1733
01:36:30,210 --> 01:36:36,350
produces counts EE marks which we

1734
01:36:33,630 --> 01:36:39,420
already have perfectly adequate feedback

1735
01:36:36,350 --> 01:36:42,000
with the RSC three one six eight but

1736
01:36:39,420 --> 01:36:44,520
what we need is feedback of the ECT one

1737
01:36:42,000 --> 01:36:47,580
code point yeah which is provided only

1738
01:36:44,520 --> 01:36:50,220
by the TCP option in that case en DRA

1739
01:36:47,580 --> 01:36:54,420
and TCP options have their own problems

1740
01:36:50,220 --> 01:36:57,330
yeah I'm previously easy t02 ECT one was

1741
01:36:54,420 --> 01:36:59,190
a non-normal transition which we didn't

1742
01:36:57,330 --> 01:37:01,110
engineer to MU Daiko easy and I guess

1743
01:36:59,190 --> 01:37:05,820
because that's not expected in the

1744
01:37:01,110 --> 01:37:09,089
internet this is true and so of course

1745
01:37:05,820 --> 01:37:11,870
we will need some experimental status in

1746
01:37:09,090 --> 01:37:16,760
order to formalize this as an experiment

1747
01:37:11,870 --> 01:37:16,760
however we believe it's mostly harmless

1748
01:37:17,810 --> 01:37:25,280
Andrew McGregor I'm quite concerned

1749
01:37:21,450 --> 01:37:26,700
about your notes about pacing and the

1750
01:37:25,280 --> 01:37:28,590
requirement to space

1751
01:37:26,700 --> 01:37:30,570
it's out in that manner because that

1752
01:37:28,590 --> 01:37:33,120
says to me that this is going to

1753
01:37:30,570 --> 01:37:36,120
interact extremely poorly with a with an

1754
01:37:33,120 --> 01:37:38,849
aggregating Mac if you end up dropping a

1755
01:37:36,120 --> 01:37:42,930
few packets into the same Mac into the

1756
01:37:38,850 --> 01:37:44,430
same Mac aggregate then and the for

1757
01:37:42,930 --> 01:37:45,960
example is Wi-Fi the access point is

1758
01:37:44,430 --> 01:37:48,480
congested so there's gaps between

1759
01:37:45,960 --> 01:37:52,620
aggregates effectively the network

1760
01:37:48,480 --> 01:37:56,099
reboosts the traffic for you and that's

1761
01:37:52,620 --> 01:37:57,599
going to end up behaving poorly because

1762
01:37:56,100 --> 01:37:59,550
if you don't land in the sand at the

1763
01:37:57,600 --> 01:38:03,510
same aggregate you minimize the

1764
01:37:59,550 --> 01:38:07,380
performance of the Wi-Fi this is

1765
01:38:03,510 --> 01:38:09,830
something we have recognized and

1766
01:38:07,380 --> 01:38:14,010
something we will need to explore

1767
01:38:09,830 --> 01:38:16,620
reasonably soon probably and the other

1768
01:38:14,010 --> 01:38:18,900
thing is I observe we have two proposals

1769
01:38:16,620 --> 01:38:21,750
for how to do something quite similar

1770
01:38:18,900 --> 01:38:23,190
who are using radically different

1771
01:38:21,750 --> 01:38:24,600
evaluation methods and different

1772
01:38:23,190 --> 01:38:28,919
congestion controls and all the

1773
01:38:24,600 --> 01:38:30,630
experiments please you know use the full

1774
01:38:28,920 --> 01:38:37,740
matrix in both cases because otherwise

1775
01:38:30,630 --> 01:38:39,750
we can't evaluate me a cool event and so

1776
01:38:37,740 --> 01:38:41,519
first two quick comments and equities

1777
01:38:39,750 --> 01:38:43,140
and while I know that the discussion

1778
01:38:41,520 --> 01:38:46,530
about this should actually go to the TCP

1779
01:38:43,140 --> 01:38:49,620
I'm working on but like one big part

1780
01:38:46,530 --> 01:38:51,450
about equity CN was compared to what

1781
01:38:49,620 --> 01:38:53,099
like data in a TCP for example is using

1782
01:38:51,450 --> 01:38:54,660
that occurred easy and actually has a

1783
01:38:53,100 --> 01:38:57,540
negotiation face so you know for sure

1784
01:38:54,660 --> 01:39:00,300
that the other end is supporting it that

1785
01:38:57,540 --> 01:39:03,060
was a very important point and the other

1786
01:39:00,300 --> 01:39:05,760
point was also that the assumption is if

1787
01:39:03,060 --> 01:39:07,260
you use the etc1 code point and the

1788
01:39:05,760 --> 01:39:09,270
option is not available which you can

1789
01:39:07,260 --> 01:39:12,570
test for then you need to opt out of

1790
01:39:09,270 --> 01:39:13,980
that experiment eventually while that

1791
01:39:12,570 --> 01:39:15,750
mechanism still ensures that the

1792
01:39:13,980 --> 01:39:18,839
traditional way the solution thing is

1793
01:39:15,750 --> 01:39:20,490
feedback accordingly so that's kind of

1794
01:39:18,840 --> 01:39:22,740
the assumption for all experiments we do

1795
01:39:20,490 --> 01:39:25,110
and with the assumption also that like

1796
01:39:22,740 --> 01:39:27,120
maybe this whole option problem becomes

1797
01:39:25,110 --> 01:39:29,269
better in future and then you can use it

1798
01:39:27,120 --> 01:39:32,610
everywhere so it's a deployment thing

1799
01:39:29,270 --> 01:39:37,200
yeah I'm sure that's something we can

1800
01:39:32,610 --> 01:39:40,940
have a discussion about in TCP yes

1801
01:39:37,200 --> 01:39:43,800
I have rather a couple of questions

1802
01:39:40,940 --> 01:39:45,179
because like looking at listening to

1803
01:39:43,800 --> 01:39:47,090
your presentation looking at the

1804
01:39:45,180 --> 01:39:50,670
diagrams a little bit the message I got

1805
01:39:47,090 --> 01:39:54,090
was that what you propose works very

1806
01:39:50,670 --> 01:39:55,590
well with fair queuing while you don't

1807
01:39:54,090 --> 01:39:57,990
have any guarantees that they will be

1808
01:39:55,590 --> 01:40:00,990
effective in applaud or whatever however

1809
01:39:57,990 --> 01:40:03,750
if you use it without fair queuing it's

1810
01:40:00,990 --> 01:40:04,920
more as giving a approach and then you

1811
01:40:03,750 --> 01:40:06,420
presented that you can be more

1812
01:40:04,920 --> 01:40:09,540
aggressive but then it look to me that

1813
01:40:06,420 --> 01:40:11,340
the more aggressive part also means that

1814
01:40:09,540 --> 01:40:12,900
you get like more queuing delay which is

1815
01:40:11,340 --> 01:40:15,330
not the perfect that you're looking for

1816
01:40:12,900 --> 01:40:17,639
so for Mila but the confusion was if you

1817
01:40:15,330 --> 01:40:20,910
this only works well with fair queuing

1818
01:40:17,640 --> 01:40:23,910
is that the message you can agree to is

1819
01:40:20,910 --> 01:40:26,519
that not what you wanted to say you may

1820
01:40:23,910 --> 01:40:28,740
notice that off the diagrams in this

1821
01:40:26,520 --> 01:40:32,610
slide deck only one of the most

1822
01:40:28,740 --> 01:40:34,590
forgiving yeah but like the other graphs

1823
01:40:32,610 --> 01:40:36,599
didn't show to me the benefits you

1824
01:40:34,590 --> 01:40:38,790
wanted to achieve so I understand that

1825
01:40:36,600 --> 01:40:43,190
it doesn't pressor system but it doesn't

1826
01:40:38,790 --> 01:40:48,240
really show us any benefit to me

1827
01:40:43,190 --> 01:40:52,769
well you might look at the the total

1828
01:40:48,240 --> 01:41:01,380
throughput of this synovium until it

1829
01:40:52,770 --> 01:41:03,420
glitches of course basically we

1830
01:41:01,380 --> 01:41:08,280
eliminate the sources and we get better

1831
01:41:03,420 --> 01:41:11,700
food yeah so but that's only if

1832
01:41:08,280 --> 01:41:15,900
everything would be using SCE right the

1833
01:41:11,700 --> 01:41:17,760
previous graph you showed again this is

1834
01:41:15,900 --> 01:41:19,469
something either you use fair queuing or

1835
01:41:17,760 --> 01:41:21,930
everything in the whole world has to use

1836
01:41:19,470 --> 01:41:27,020
SCE only one that's like the two cases

1837
01:41:21,930 --> 01:41:27,020
where it's really beneficial well

1838
01:41:30,309 --> 01:41:36,170
it still works even if there's boxes in

1839
01:41:34,250 --> 01:41:39,559
the network that don't understand SEO at

1840
01:41:36,170 --> 01:41:40,610
all it's still safe to use yeah yeah I

1841
01:41:39,559 --> 01:41:45,849
understood that part

1842
01:41:40,610 --> 01:41:49,308
I mean if you have a network that

1843
01:41:45,849 --> 01:41:55,030
internally wishes to use se form of an

1844
01:41:49,309 --> 01:41:55,030
optimization then it can deploy a seee

1845
01:41:55,119 --> 01:42:01,070
without requiring the rest of the

1846
01:41:57,349 --> 01:42:03,469
internet to also deploy a C or FQ or

1847
01:42:01,070 --> 01:42:07,460
anything like that I think that's

1848
01:42:03,469 --> 01:42:10,309
important can I make John can I make one

1849
01:42:07,460 --> 01:42:14,059
point if you could go to the graph with

1850
01:42:10,309 --> 01:42:16,519
the Reno SC verse cubic single q with

1851
01:42:14,059 --> 01:42:21,829
SCE marking where we have the threshold

1852
01:42:16,519 --> 01:42:23,570
set just to make the point that this is

1853
01:42:21,829 --> 01:42:25,518
80 milliseconds so that throughputs

1854
01:42:23,570 --> 01:42:28,190
you're seeing there are what you might

1855
01:42:25,519 --> 01:42:30,050
expect anyway between cubic and Reno

1856
01:42:28,190 --> 01:42:31,190
just to make that point if you look at

1857
01:42:30,050 --> 01:42:33,409
it and say oh it doesn't look fair

1858
01:42:31,190 --> 01:42:35,449
that's part of what's going on here as

1859
01:42:33,409 --> 01:42:41,150
you're talking about cubic versus Reno

1860
01:42:35,449 --> 01:42:43,400
at 80 milliseconds anyway quick

1861
01:42:41,150 --> 01:42:46,400
administrative announcement Mike lines

1862
01:42:43,400 --> 01:42:48,679
are closed and people will stick around

1863
01:42:46,400 --> 01:42:51,320
I think we'll try to fit in the

1864
01:42:48,679 --> 01:42:53,210
multipath DCC P presentation the end so

1865
01:42:51,320 --> 01:43:01,670
if we could keep queuing ain't quick

1866
01:42:53,210 --> 01:43:04,159
here that would help all concerned I've

1867
01:43:01,670 --> 01:43:07,039
read the drafts and I'm still missing

1868
01:43:04,159 --> 01:43:09,348
the kind of problem statement and the

1869
01:43:07,039 --> 01:43:10,820
space that you were exploring in

1870
01:43:09,349 --> 01:43:15,679
addressing the problems that you want to

1871
01:43:10,820 --> 01:43:17,210
solve so I'm not quite clear if the

1872
01:43:15,679 --> 01:43:21,110
problems that you're trying to tackle

1873
01:43:17,210 --> 01:43:23,239
here are universally applicable to the

1874
01:43:21,110 --> 01:43:27,500
Internet at large including low latency

1875
01:43:23,239 --> 01:43:29,150
environments and that's one part the

1876
01:43:27,500 --> 01:43:33,530
other part the other comment I want to

1877
01:43:29,150 --> 01:43:39,259
make is it has a feel that the use of

1878
01:43:33,530 --> 01:43:42,050
the of the NS bit for - bit has feels to

1879
01:43:39,260 --> 01:43:44,570
me like you're jumping at a solution or

1880
01:43:42,050 --> 01:43:46,670
a signaling mechanism

1881
01:43:44,570 --> 01:43:48,769
is readily available without first

1882
01:43:46,670 --> 01:43:51,350
everything if that would be the best

1883
01:43:48,770 --> 01:43:56,410
option available because one observation

1884
01:43:51,350 --> 01:44:00,350
that I've think I've made is s EE and

1885
01:43:56,410 --> 01:44:03,190
also in the accuracy n slash data center

1886
01:44:00,350 --> 01:44:06,280
TCP environment the normalcy mark both

1887
01:44:03,190 --> 01:44:09,889
have a much less severe marking

1888
01:44:06,280 --> 01:44:12,620
semantics than regular C II so I was

1889
01:44:09,890 --> 01:44:16,310
wondering what are really the

1890
01:44:12,620 --> 01:44:19,880
differences between SCE versus at the

1891
01:44:16,310 --> 01:44:22,760
l4s architecture with with equities yen

1892
01:44:19,880 --> 01:44:25,340
marking because from my point of view it

1893
01:44:22,760 --> 01:44:28,580
seems that the signalling aspects are

1894
01:44:25,340 --> 01:44:30,680
really a secondary problem and shouldn't

1895
01:44:28,580 --> 01:44:32,900
be on the forefront we should discuss

1896
01:44:30,680 --> 01:44:34,540
first what type of problem you should we

1897
01:44:32,900 --> 01:44:38,120
want to address

1898
01:44:34,540 --> 01:44:42,590
mmm I'm sure we can address those in a

1899
01:44:38,120 --> 01:44:45,080
future version of of the documents but

1900
01:44:42,590 --> 01:44:49,340
the I'd like to draw your attention to

1901
01:44:45,080 --> 01:44:52,460
the last line on this slide where we

1902
01:44:49,340 --> 01:44:57,190
have the unambiguous signaling semantics

1903
01:44:52,460 --> 01:45:00,320
on the different curve points so we can

1904
01:44:57,190 --> 01:45:06,620
make and implement DC TCP without

1905
01:45:00,320 --> 01:45:11,030
leaving it unsafe for general use to be

1906
01:45:06,620 --> 01:45:13,700
a to be a little more or pointed there

1907
01:45:11,030 --> 01:45:16,670
was a chart that went up during Bob's

1908
01:45:13,700 --> 01:45:22,309
presentation about what happens when you

1909
01:45:16,670 --> 01:45:24,860
run a RFC 368 a QM on a set of traffic

1910
01:45:22,310 --> 01:45:28,310
some of which is using TCP C II mark

1911
01:45:24,860 --> 01:45:29,780
someone's using DCTC PCE marks and their

1912
01:45:28,310 --> 01:45:33,140
problems there and what those are

1913
01:45:29,780 --> 01:45:37,460
basically saying is that for SCE seeing

1914
01:45:33,140 --> 01:45:39,980
means C e means CEC RSC 3168 and

1915
01:45:37,460 --> 01:45:47,239
therefore you can't get into that

1916
01:45:39,980 --> 01:45:53,239
particular problem scenario right I just

1917
01:45:47,239 --> 01:45:55,669
to agree with Miriah this is this is

1918
01:45:53,239 --> 01:45:58,030
trading off some of the this proposal

1919
01:45:55,670 --> 01:46:01,369
appears to trade awesome with the

1920
01:45:58,030 --> 01:46:05,630
performance at particularly the latency

1921
01:46:01,369 --> 01:46:07,820
performance proposed for l4s in order to

1922
01:46:05,630 --> 01:46:11,510
gain some safety and so that's really

1923
01:46:07,820 --> 01:46:13,699
the to me that's that's an interesting

1924
01:46:11,510 --> 01:46:15,579
question of consensus to consider like

1925
01:46:13,699 --> 01:46:18,730
how bad is the safety effect

1926
01:46:15,579 --> 01:46:22,400
particularly with regard to the 3168

1927
01:46:18,730 --> 01:46:24,199
interactions and and that's that's what

1928
01:46:22,400 --> 01:46:27,518
I would like to see most discussed on

1929
01:46:24,199 --> 01:46:31,489
the list as well as as conditions of

1930
01:46:27,519 --> 01:46:32,960
sort of malicious use in Europe in its

1931
01:46:31,489 --> 01:46:35,239
various scenarios in the admission

1932
01:46:32,960 --> 01:46:37,010
control okay Jake I take the comment and

1933
01:46:35,239 --> 01:46:41,230
then there's a different trade off here

1934
01:46:37,010 --> 01:46:44,179
and we need to talk about that on list

1935
01:46:41,230 --> 01:46:47,268
and also we should not that the raziel

1936
01:46:44,179 --> 01:46:50,059
so the a b ii proposal to use the same

1937
01:46:47,269 --> 01:46:52,730
code point which is no RFC status which

1938
01:46:50,059 --> 01:46:55,369
we need to coexist with so this doesn't

1939
01:46:52,730 --> 01:46:57,110
take a free call point it reuses a core

1940
01:46:55,369 --> 01:46:59,598
point which we recently standardized but

1941
01:46:57,110 --> 01:47:01,820
and we can do lots of things here and

1942
01:46:59,599 --> 01:47:05,179
please use the list to discuss this

1943
01:47:01,820 --> 01:47:10,549
we'll take one last comment and then we

1944
01:47:05,179 --> 01:47:12,920
will decide on what to do the draft or

1945
01:47:10,550 --> 01:47:14,749
not the draft the code repository is

1946
01:47:12,920 --> 01:47:16,489
cited in the test draft for anybody

1947
01:47:14,749 --> 01:47:18,920
looking for it's actually in the drafts

1948
01:47:16,489 --> 01:47:20,780
it's in the tester app and the other one

1949
01:47:18,920 --> 01:47:22,940
there is a missing implementation that

1950
01:47:20,780 --> 01:47:24,889
was not in the slides that there's

1951
01:47:22,940 --> 01:47:28,669
actually a hardware implementation of

1952
01:47:24,889 --> 01:47:35,050
SCE running today in 25 gigabit switch a

1953
01:47:28,670 --> 01:47:39,429
year thank you and this achieved this in

1954
01:47:35,050 --> 01:47:44,239
we learned about that actually today and

1955
01:47:39,429 --> 01:47:49,099
the ports that are that it achieves far

1956
01:47:44,239 --> 01:47:52,848
below a millisecond of RTT with big

1957
01:47:49,099 --> 01:47:55,969
improvements in the link level beat rise

1958
01:47:52,849 --> 01:47:58,880
needed to support one thing whatever

1959
01:47:55,969 --> 01:48:01,150
that application is so that's a big

1960
01:47:58,880 --> 01:48:04,130
things for us

1961
01:48:01,150 --> 01:48:06,440
okay thank you very much and I would

1962
01:48:04,130 --> 01:48:09,680
like to thank everybody's worked on

1963
01:48:06,440 --> 01:48:13,759
worked on agree to both the Alvarez and

1964
01:48:09,680 --> 01:48:15,280
and SCE work and all the hackathon work

1965
01:48:13,760 --> 01:48:18,370
I think I think a very interesting

1966
01:48:15,280 --> 01:48:22,969
productive weakest has been transpired

1967
01:48:18,370 --> 01:48:26,330
okay we we are over time so I think we

1968
01:48:22,970 --> 01:48:29,090
we probably get to formally close the

1969
01:48:26,330 --> 01:48:31,280
meeting here however if you're

1970
01:48:29,090 --> 01:48:33,490
interesting leap at DC CP we're going to

1971
01:48:31,280 --> 01:48:38,269
go ahead and have that presentation

1972
01:48:33,490 --> 01:48:40,460
Marcus you here okay cool

1973
01:48:38,270 --> 01:48:42,050
oh here's to presented so let's let's

1974
01:48:40,460 --> 01:48:44,510
give people about 30 seconds of those

1975
01:48:42,050 --> 01:48:46,070
who wish to exit for whatever reason can

1976
01:48:44,510 --> 01:48:47,570
and then we'll go ahead and for those

1977
01:48:46,070 --> 01:48:48,830
who are interested let's talk a little

1978
01:48:47,570 --> 01:49:12,380
let's talk about some completely

1979
01:48:48,830 --> 01:49:15,590
different multipath DC CP hang on one

1980
01:49:12,380 --> 01:49:18,950
more thing where is it there it is click

1981
01:49:15,590 --> 01:49:22,400
on that okay cool so just to clarify and

1982
01:49:18,950 --> 01:49:24,860
the TS vwg meeting has has formally

1983
01:49:22,400 --> 01:49:26,450
finished and this presentation we would

1984
01:49:24,860 --> 01:49:29,809
have included they will get a gender

1985
01:49:26,450 --> 01:49:32,599
time next IETF and since the room is not

1986
01:49:29,810 --> 01:49:35,030
currently needing to be vacated we will

1987
01:49:32,600 --> 01:49:36,500
let them proceed to tell people what's

1988
01:49:35,030 --> 01:49:39,889
going on and maybe you get an insight

1989
01:49:36,500 --> 01:49:41,210
into and this new topic and if the

1990
01:49:39,890 --> 01:49:43,900
Secretariat come in and tell us we have

1991
01:49:41,210 --> 01:49:45,290
to leave then you'll be cut immediately

1992
01:49:43,900 --> 01:49:48,259
fair enough

1993
01:49:45,290 --> 01:49:49,610
so thanks for those staying around my

1994
01:49:48,260 --> 01:49:51,260
co-authors are not here anymore

1995
01:49:49,610 --> 01:49:54,790
so I'm on a bernstrom and I will be

1996
01:49:51,260 --> 01:49:58,970
presenting our work on multipath DC CP

1997
01:49:54,790 --> 01:50:03,500
as a way of carrying UDP IP traffic over

1998
01:49:58,970 --> 01:50:07,120
a multi connectivity networks so a quick

1999
01:50:03,500 --> 01:50:09,380
summary of the motivation so we had the

2000
01:50:07,120 --> 01:50:11,180
markers from Deutsche Telekom had the

2001
01:50:09,380 --> 01:50:13,490
first presentation of this as the

2002
01:50:11,180 --> 01:50:14,870
previous IDF with a bit more details on

2003
01:50:13,490 --> 01:50:17,469
the motorway

2004
01:50:14,870 --> 01:50:19,160
but we have multiple ongoing

2005
01:50:17,470 --> 01:50:24,040
standardization efforts and other

2006
01:50:19,160 --> 01:50:28,820
organizations so in 5g for 5g 3gpp is

2007
01:50:24,040 --> 01:50:31,580
standardizing the 80s SS steering

2008
01:50:28,820 --> 01:50:33,679
switching and splitting and you have in

2009
01:50:31,580 --> 01:50:37,160
the broadband forum the hybrid access

2010
01:50:33,680 --> 01:50:42,440
which is for multi connectivity networks

2011
01:50:37,160 --> 01:50:45,139
and they are using MP TCP to carry the

2012
01:50:42,440 --> 01:50:47,570
TCP traffic but there's really no

2013
01:50:45,140 --> 01:50:51,380
solution for how to carry the UDP

2014
01:50:47,570 --> 01:50:53,450
traffic and for operators like Deutsche

2015
01:50:51,380 --> 01:50:56,840
Telekom they really see you know the

2016
01:50:53,450 --> 01:50:58,820
need to cater for both TCP and UDP if

2017
01:50:56,840 --> 01:51:01,030
they're going to deploy any type of

2018
01:50:58,820 --> 01:51:03,469
solutions for these multi connectivity

2019
01:51:01,030 --> 01:51:06,019
situations and of course with the

2020
01:51:03,470 --> 01:51:07,070
increase of quick traffic that we may

2021
01:51:06,020 --> 01:51:08,960
expect in the future

2022
01:51:07,070 --> 01:51:13,070
carrying UDP traffic could also get

2023
01:51:08,960 --> 01:51:15,710
increasingly important so the goal with

2024
01:51:13,070 --> 01:51:18,019
this work is to look at the multi part

2025
01:51:15,710 --> 01:51:22,360
solutions for caring thing UDP traffic

2026
01:51:18,020 --> 01:51:24,830
in this context complementing MP TCP and

2027
01:51:22,360 --> 01:51:27,950
you can check out the last presentation

2028
01:51:24,830 --> 01:51:33,070
as I said for some more details so this

2029
01:51:27,950 --> 01:51:37,880
is an overview of the MP DCC framework

2030
01:51:33,070 --> 01:51:39,679
so you have a sender and the receiver

2031
01:51:37,880 --> 01:51:42,530
you have a virtual network interface

2032
01:51:39,680 --> 01:51:45,320
that takes you connects you to the IP on

2033
01:51:42,530 --> 01:51:48,019
the other side and then you have DCP

2034
01:51:45,320 --> 01:51:51,110
tunnels you add sequencing information

2035
01:51:48,020 --> 01:51:55,550
on top similarly to MP TCP and then you

2036
01:51:51,110 --> 01:51:57,460
tunnel over the DCP flows so this is the

2037
01:51:55,550 --> 01:52:00,340
basic architecture and this was also

2038
01:51:57,460 --> 01:52:03,650
discussed in the previous presentation

2039
01:52:00,340 --> 01:52:06,950
there are three drafts related to this a

2040
01:52:03,650 --> 01:52:10,160
draft on the multi path DCP protocol a

2041
01:52:06,950 --> 01:52:13,460
draft on the framework the role

2042
01:52:10,160 --> 01:52:16,880
framework and the draft that Maps the

2043
01:52:13,460 --> 01:52:20,450
DCP header into the UDP header so that

2044
01:52:16,880 --> 01:52:22,670
you can get through networks because DCP

2045
01:52:20,450 --> 01:52:25,010
is not not generally passing through

2046
01:52:22,670 --> 01:52:29,440
middle boxes so these are the three

2047
01:52:25,010 --> 01:52:29,440
drafts related to this ongoing work

2048
01:52:29,530 --> 01:52:35,250
we have worked since the last time quite

2049
01:52:32,110 --> 01:52:38,519
a bit on the the implementation and

2050
01:52:35,250 --> 01:52:41,020
experiment side so there is a prototype

2051
01:52:38,520 --> 01:52:43,870
available inside the Linux kernel

2052
01:52:41,020 --> 01:52:45,730
unfortunately not open source at the

2053
01:52:43,870 --> 01:52:48,190
moment I know the Deutsche Telekom

2054
01:52:45,730 --> 01:52:51,269
people are working on that internally

2055
01:52:48,190 --> 01:52:54,460
and then we also have a mystery set up

2056
01:52:51,270 --> 01:52:59,970
where you can evaluate the residential

2057
01:52:54,460 --> 01:53:02,890
and mobile use cases so the way this

2058
01:52:59,970 --> 01:53:05,350
architecture or the setup looks is that

2059
01:53:02,890 --> 01:53:07,450
we also have a number of scheduling

2060
01:53:05,350 --> 01:53:09,550
components because the key issue of

2061
01:53:07,450 --> 01:53:11,710
course for carrying the multipath

2062
01:53:09,550 --> 01:53:15,130
traffic here is how do you schedule over

2063
01:53:11,710 --> 01:53:18,580
the different paths and as compared to

2064
01:53:15,130 --> 01:53:20,350
multipath TCP when you carry UDP traffic

2065
01:53:18,580 --> 01:53:22,300
you also have the issue of what do you

2066
01:53:20,350 --> 01:53:24,640
do at the receiver side in terms of

2067
01:53:22,300 --> 01:53:27,430
resequencing do you let the UDP packets

2068
01:53:24,640 --> 01:53:29,560
through do you make sure that some of it

2069
01:53:27,430 --> 01:53:32,680
gets reordered because you may now have

2070
01:53:29,560 --> 01:53:35,050
different delays on the different paths

2071
01:53:32,680 --> 01:53:36,520
that your traffic is going over so we

2072
01:53:35,050 --> 01:53:39,060
also have a number of different

2073
01:53:36,520 --> 01:53:44,550
algorithms that we have looked on on the

2074
01:53:39,060 --> 01:53:47,530
reordering component of this framework

2075
01:53:44,550 --> 01:53:51,550
so what I wanted to do today is just to

2076
01:53:47,530 --> 01:53:55,000
show you some short sample of those

2077
01:53:51,550 --> 01:53:58,240
results that we have been working on and

2078
01:53:55,000 --> 01:54:00,580
in relation to the presentation last

2079
01:53:58,240 --> 01:54:05,070
time as I said we mainly been working on

2080
01:54:00,580 --> 01:54:08,380
updating the implementation and on some

2081
01:54:05,070 --> 01:54:10,540
measurements there's been some smaller

2082
01:54:08,380 --> 01:54:12,430
updates to all the drafts improving on

2083
01:54:10,540 --> 01:54:16,900
the language spelling things like that

2084
01:54:12,430 --> 01:54:21,460
for the multipath framework draft there

2085
01:54:16,900 --> 01:54:24,129
also the requirement section added but

2086
01:54:21,460 --> 01:54:26,200
in terms of the draft we of course need

2087
01:54:24,130 --> 01:54:28,750
to include some more detailed

2088
01:54:26,200 --> 01:54:31,389
specification for the multipath protocol

2089
01:54:28,750 --> 01:54:34,180
we had some feedback regarding UDP

2090
01:54:31,390 --> 01:54:36,040
options for the header conversion draft

2091
01:54:34,180 --> 01:54:38,370
that needs to be taken into account and

2092
01:54:36,040 --> 01:54:40,960
also further aligning with the

2093
01:54:38,370 --> 01:54:41,739
discussions in 3d PPE and the broadband

2094
01:54:40,960 --> 01:54:43,829
forum

2095
01:54:41,739 --> 01:54:47,768
make sure the requirements gets right

2096
01:54:43,829 --> 01:54:51,420
but let's look at a few sample results

2097
01:54:47,769 --> 01:54:56,219
so this first one is from the NS three

2098
01:54:51,420 --> 01:55:00,429
simulations with UDP traffic looking at

2099
01:54:56,219 --> 01:55:05,010
what happens both for switching and an

2100
01:55:00,429 --> 01:55:08,499
aggregation scenario and here we have a

2101
01:55:05,010 --> 01:55:11,860
scheduler that prioritize the Wi-Fi path

2102
01:55:08,499 --> 01:55:15,280
as long as this path is available and if

2103
01:55:11,860 --> 01:55:20,380
not it moves over to the the LTE power

2104
01:55:15,280 --> 01:55:23,380
port so in the top graph it's the the

2105
01:55:20,380 --> 01:55:26,889
switching scenario so then as expected

2106
01:55:23,380 --> 01:55:30,280
here the path is has enough capacity to

2107
01:55:26,889 --> 01:55:32,710
carry your your your traffic so as

2108
01:55:30,280 --> 01:55:36,489
expected initially all the traffic goes

2109
01:55:32,710 --> 01:55:39,639
over Wi-Fi when the Wi-Fi disappears it

2110
01:55:36,489 --> 01:55:41,589
takes some time to detect this because

2111
01:55:39,639 --> 01:55:44,889
we're now not using both the paths

2112
01:55:41,590 --> 01:55:47,079
inauguration mode once the loss of the

2113
01:55:44,889 --> 01:55:50,559
Wi-Fi interface is detected the traffic

2114
01:55:47,079 --> 01:55:53,499
moves over to the LT path and once Wi-Fi

2115
01:55:50,559 --> 01:55:57,760
come back it the end moves back to the

2116
01:55:53,499 --> 01:55:59,199
Wi-Fi path on the lower graph here you

2117
01:55:57,760 --> 01:56:02,139
see what happens when you are in

2118
01:55:59,199 --> 01:56:04,719
aggregation mode so this also shows you

2119
01:56:02,139 --> 01:56:07,749
one of the benefits of actually using

2120
01:56:04,719 --> 01:56:10,840
aggregation or using a splitting also

2121
01:56:07,749 --> 01:56:13,329
for a flow that does not need the

2122
01:56:10,840 --> 01:56:17,710
capacity all the time but you see that

2123
01:56:13,329 --> 01:56:19,690
when you have the Wi-Fi path quality

2124
01:56:17,710 --> 01:56:22,030
going down before you lose the

2125
01:56:19,690 --> 01:56:24,610
connectivity to Wi-Fi so the scenario

2126
01:56:22,030 --> 01:56:26,860
here is that your you're moving so

2127
01:56:24,610 --> 01:56:28,960
you're in Wi-Fi coverage initially and

2128
01:56:26,860 --> 01:56:30,549
you're moving out of Wi-Fi coverage and

2129
01:56:28,960 --> 01:56:32,739
you're moving back into Wi-Fi coverage

2130
01:56:30,550 --> 01:56:35,110
and we can see that when we have the

2131
01:56:32,739 --> 01:56:36,999
aggregation then of course things go

2132
01:56:35,110 --> 01:56:40,598
much more smoothly because when your

2133
01:56:36,999 --> 01:56:42,309
Wi-Fi path is getting worse you're

2134
01:56:40,599 --> 01:56:44,889
actually gradually shifting over the

2135
01:56:42,309 --> 01:56:47,820
traffic over to the LTE path and

2136
01:56:44,889 --> 01:56:50,829
similarly when Wi-Fi is coming back its

2137
01:56:47,820 --> 01:56:54,340
smoothly going back over there so this

2138
01:56:50,829 --> 01:56:55,570
is kind of one one of the goals with

2139
01:56:54,340 --> 01:56:57,760
some of the initial

2140
01:56:55,570 --> 01:56:59,949
has also been to look at the difference

2141
01:56:57,760 --> 01:57:01,840
between these different mechanisms

2142
01:56:59,949 --> 01:57:03,989
between just having the switching or

2143
01:57:01,840 --> 01:57:07,750
having the splitting aggregation modes

2144
01:57:03,989 --> 01:57:10,000
and how that impacts performance so this

2145
01:57:07,750 --> 01:57:14,949
is just one of the examples from the end

2146
01:57:10,000 --> 01:57:17,650
the three simulations here is a second

2147
01:57:14,949 --> 01:57:20,888
example that is from the testbed

2148
01:57:17,650 --> 01:57:24,159
measurements and this is also looking at

2149
01:57:20,889 --> 01:57:28,469
the handover scenario in aggregation

2150
01:57:24,159 --> 01:57:31,690
mode and in the first scenario we have a

2151
01:57:28,469 --> 01:57:37,780
handover that is triggered similarly by

2152
01:57:31,690 --> 01:57:41,710
this this path that has the shortest RTT

2153
01:57:37,780 --> 01:57:44,590
having the delay going up and we're

2154
01:57:41,710 --> 01:57:46,630
using a shortest RTT scheduler here so

2155
01:57:44,590 --> 01:57:50,800
what happens when the delay on the

2156
01:57:46,630 --> 01:57:54,340
faster path increases then the algorithm

2157
01:57:50,800 --> 01:57:57,449
as expected moves over to the second

2158
01:57:54,340 --> 01:58:00,880
path which has a stable latency in this

2159
01:57:57,449 --> 01:58:03,309
experiment and to the right side it's

2160
01:58:00,880 --> 01:58:07,270
another handover scenario where you

2161
01:58:03,310 --> 01:58:10,869
actually lose the connectivity on one of

2162
01:58:07,270 --> 01:58:13,800
them on the the cheapest path completely

2163
01:58:10,869 --> 01:58:16,598
and then you immediately switch over and

2164
01:58:13,800 --> 01:58:20,050
traffic goes over the second path so the

2165
01:58:16,599 --> 01:58:21,790
two two scenarios here are just two

2166
01:58:20,050 --> 01:58:23,440
examples of different scenarios one

2167
01:58:21,790 --> 01:58:24,840
where you have a latency spike on the

2168
01:58:23,440 --> 01:58:27,309
path and the second one where you

2169
01:58:24,840 --> 01:58:30,130
immediately lose the path and this is

2170
01:58:27,310 --> 01:58:37,510
also immediately visible to the protocol

2171
01:58:30,130 --> 01:58:41,530
in this case and as a third example this

2172
01:58:37,510 --> 01:58:45,040
module shows this graph shows a bit also

2173
01:58:41,530 --> 01:58:48,309
the impact of the reordering module on

2174
01:58:45,040 --> 01:58:52,630
the receiver side so what we look at

2175
01:58:48,310 --> 01:58:59,860
here is the packet delay distribution so

2176
01:58:52,630 --> 01:59:01,630
the digital in the wrong button the

2177
01:58:59,860 --> 01:59:04,389
jitter that you see at the receiver side

2178
01:59:01,630 --> 01:59:06,699
in the packets that arrive and we now

2179
01:59:04,389 --> 01:59:09,010
look at some different scheduling and

2180
01:59:06,699 --> 01:59:12,660
reordering mechanisms so

2181
01:59:09,010 --> 01:59:16,180
the blue one here is just a dumb

2182
01:59:12,660 --> 01:59:18,370
round-robin or weighted round robin 8020

2183
01:59:16,180 --> 01:59:20,440
share scheduler and of course then you

2184
01:59:18,370 --> 01:59:23,080
would get a lot of delay differences in

2185
01:59:20,440 --> 01:59:26,830
the packets that you receive if you use

2186
01:59:23,080 --> 01:59:30,040
some more better scheduler like the

2187
01:59:26,830 --> 01:59:32,290
shortest round-trip time first or even

2188
01:59:30,040 --> 01:59:34,960
better the OTAs which is a scheduler

2189
01:59:32,290 --> 01:59:37,960
that tries to also take into account how

2190
01:59:34,960 --> 01:59:40,150
long it takes to send your packets over

2191
01:59:37,960 --> 01:59:42,820
a path the queuing in the Sun buffer

2192
01:59:40,150 --> 01:59:45,489
trying to equalize the arrivals you get

2193
01:59:42,820 --> 01:59:47,230
as expected that's reordering but of

2194
01:59:45,489 --> 01:59:49,629
course the most efficient is if you also

2195
01:59:47,230 --> 01:59:52,360
have some reordering component on the

2196
01:59:49,630 --> 01:59:54,880
receiver side and in this case it's

2197
01:59:52,360 --> 01:59:56,410
using one of the adaptive reordering

2198
01:59:54,880 --> 01:59:59,770
mechanisms that we have been playing

2199
01:59:56,410 --> 02:00:01,570
with yes Jake Jake Alan I just wanted to

2200
01:59:59,770 --> 02:00:03,130
report that on jabber media Co is

2201
02:00:01,570 --> 02:00:05,230
reporting that they may not have to

2202
02:00:03,130 --> 02:00:08,440
disconnect the remote participation

2203
02:00:05,230 --> 02:00:10,629
shortly their equipment needs to come

2204
02:00:08,440 --> 02:00:13,210
down another room is still I think she

2205
02:00:10,630 --> 02:00:16,330
has one more slide and then we wind this

2206
02:00:13,210 --> 02:00:18,780
up yes so let me move on to the

2207
02:00:16,330 --> 02:00:21,070
conclusion then so this was just a quick

2208
02:00:18,780 --> 02:00:22,809
showing you some of the results that we

2209
02:00:21,070 --> 02:00:25,500
have so we now have a implement

2210
02:00:22,810 --> 02:00:28,930
prototype implementation now also some

2211
02:00:25,500 --> 02:00:32,350
industry simulations to test things out

2212
02:00:28,930 --> 02:00:35,170
and some of the first experiments look

2213
02:00:32,350 --> 02:00:36,790
quite good so we are tested both the

2214
02:00:35,170 --> 02:00:38,890
switching and aggregation scenarios

2215
02:00:36,790 --> 02:00:42,130
we've also done some measurements with

2216
02:00:38,890 --> 02:00:44,530
the congestion control UDP flows running

2217
02:00:42,130 --> 02:00:46,960
nada the congestion control for

2218
02:00:44,530 --> 02:00:49,000
real-time media that is being worked on

2219
02:00:46,960 --> 02:00:51,280
in orem capped on top and and then of

2220
02:00:49,000 --> 02:00:53,320
course things gets more complicated and

2221
02:00:51,280 --> 02:00:57,730
more interesting so that port needs a

2222
02:00:53,320 --> 02:01:00,759
bit more work and one issue here is how

2223
02:00:57,730 --> 02:01:03,489
these things will relate to 3gpp and how

2224
02:01:00,760 --> 02:01:07,270
we can get some of these solutions into

2225
02:01:03,489 --> 02:01:09,730
3d PP in time and my colleagues at

2226
02:01:07,270 --> 02:01:11,380
Deutsche Telekom is having lots of

2227
02:01:09,730 --> 02:01:13,179
discussions with other operators and

2228
02:01:11,380 --> 02:01:16,840
vendors how to approach this whole

2229
02:01:13,180 --> 02:01:18,910
problem space and we will try and

2230
02:01:16,840 --> 02:01:22,900
continue working on the drafts and happy

2231
02:01:18,910 --> 02:01:24,880
to receive any feedback we have also

2232
02:01:22,900 --> 02:01:26,589
the drafts up on github so you can make

2233
02:01:24,880 --> 02:01:29,860
pull requests you can send those mails

2234
02:01:26,590 --> 02:01:33,119
or any comments and you also have on

2235
02:01:29,860 --> 02:01:35,409
this slide link for a paper that we have

2236
02:01:33,119 --> 02:01:37,449
recently put together which has some

2237
02:01:35,409 --> 02:01:41,500
more detailed experiment results there

2238
02:01:37,449 --> 02:01:44,428
was a presentation material for I ICC RG

2239
02:01:41,500 --> 02:01:47,860
that has a bit more results available

2240
02:01:44,429 --> 02:01:50,020
and also the previous presentation at TS

2241
02:01:47,860 --> 02:01:52,019
vwg for more background information so

2242
02:01:50,020 --> 02:01:55,090
thanks to everyone for sticking around

2243
02:01:52,020 --> 02:01:58,300
okay thank you very much

2244
02:01:55,090 --> 02:02:00,639
apologies that we have we wound up doing

2245
02:01:58,300 --> 02:02:03,070
this clearly we're going to ask for more

2246
02:02:00,639 --> 02:02:06,389
time in Singapore and we'll get you

2247
02:02:03,070 --> 02:02:06,389
better gender slot in Singapore I

2248
02:02:13,409 --> 02:02:17,500
believe the Secretariat wish to

2249
02:02:15,520 --> 02:02:20,280
dismantle the room so if you could leave

2250
02:02:17,500 --> 02:02:20,280
that would help them

2251
02:02:36,960 --> 02:02:39,020
you

