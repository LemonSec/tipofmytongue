1
00:00:27,420 --> 00:00:30,880
it looks like people are slowly coming

2
00:00:29,859 --> 00:00:34,200
in from lunch

3
00:00:30,880 --> 00:00:36,460
it is now 1:30 which is time to start

4
00:00:34,200 --> 00:00:51,699
someone doesn't mind shutting the back

5
00:00:36,460 --> 00:00:54,910
doors welcome to Montreal and net Mon

6
00:00:51,699 --> 00:00:58,239
I'm Lou burger Kent Watson build ugly

7
00:00:54,910 --> 00:01:01,929
with me my co-chairs the meeting

8
00:00:58,239 --> 00:01:05,018
material is in the usual spots we are

9
00:01:01,930 --> 00:01:07,330
doing etherpad also you can see the

10
00:01:05,019 --> 00:01:08,710
etherpad link which somehow drifted to

11
00:01:07,330 --> 00:01:11,590
the bottom you can also find that off

12
00:01:08,710 --> 00:01:15,369
the tools page please join in and help

13
00:01:11,590 --> 00:01:17,470
us capture what's being said at the mic

14
00:01:15,369 --> 00:01:19,420
it comments on the mic and responses we

15
00:01:17,470 --> 00:01:24,610
don't need to capture everything that

16
00:01:19,420 --> 00:01:25,900
said in the slides that is not go to the

17
00:01:24,610 --> 00:01:30,579
next page

18
00:01:25,900 --> 00:01:33,250
aha we are at the IETF which means we

19
00:01:30,579 --> 00:01:36,309
have rules that govern our participation

20
00:01:33,250 --> 00:01:39,220
you can find that under our note well

21
00:01:36,310 --> 00:01:42,399
this is a summary of that those rules if

22
00:01:39,220 --> 00:01:47,408
you're interested in are unfamiliar with

23
00:01:42,399 --> 00:01:49,960
them please go to that URL WWI 80s org

24
00:01:47,409 --> 00:01:53,399
about note well that HTML that also give

25
00:01:49,960 --> 00:01:56,289
you a pointer to the governing documents

26
00:01:53,399 --> 00:01:57,430
since we are Monday it's worth taking a

27
00:01:56,290 --> 00:02:02,649
look at that make sure you're familiar

28
00:01:57,430 --> 00:02:04,990
with that as usual we're doing video

29
00:02:02,649 --> 00:02:09,038
streaming as well as audio streaming and

30
00:02:04,990 --> 00:02:11,740
recording please make sure you state

31
00:02:09,038 --> 00:02:13,119
your name if you come to the mic that's

32
00:02:11,740 --> 00:02:16,480
very important for those who are remote

33
00:02:13,120 --> 00:02:18,010
as well as anyone taking notes I will be

34
00:02:16,480 --> 00:02:19,750
jumping on jabber if there's a

35
00:02:18,010 --> 00:02:22,870
people who are willing to jump on jabber

36
00:02:19,750 --> 00:02:27,189
and to help channel those who may be

37
00:02:22,870 --> 00:02:29,680
remote we appreciate that I think we

38
00:02:27,189 --> 00:02:33,189
have had an agenda change I'll talk

39
00:02:29,680 --> 00:02:34,659
about that a moment we are we we wanted

40
00:02:33,189 --> 00:02:36,940
two and a half hours because we thought

41
00:02:34,659 --> 00:02:40,030
two hours was a little tight we try to

42
00:02:36,940 --> 00:02:41,890
squeeze into that because we asked for

43
00:02:40,030 --> 00:02:44,500
two hours that pump this into a second

44
00:02:41,890 --> 00:02:47,409
slot which means we have a lot more time

45
00:02:44,500 --> 00:02:49,510
than that so in theory we're here to

46
00:02:47,409 --> 00:02:51,730
almost 6 o'clock that seems like a long

47
00:02:49,510 --> 00:02:54,489
time from now I don't doubt that we'll

48
00:02:51,730 --> 00:02:56,409
use off of time that said we haven't

49
00:02:54,489 --> 00:02:58,569
added a couple of topics that we think

50
00:02:56,409 --> 00:03:01,950
are useful use of the working groups

51
00:02:58,569 --> 00:03:06,010
time and I'll show that at the moment

52
00:03:01,950 --> 00:03:08,530
one important note when we go from this

53
00:03:06,010 --> 00:03:12,310
room to the next room there's no coffee

54
00:03:08,530 --> 00:03:14,139
break actually more importantly is we

55
00:03:12,310 --> 00:03:16,780
are moving rooms but we're just moving

56
00:03:14,139 --> 00:03:20,859
one room to the right when between the

57
00:03:16,780 --> 00:03:24,250
sessions we've organized the agenda just

58
00:03:20,859 --> 00:03:27,220
by laying it out in terms of anticipated

59
00:03:24,250 --> 00:03:28,690
amount of time on each topic since we do

60
00:03:27,220 --> 00:03:30,669
have extra time we're not going to we're

61
00:03:28,690 --> 00:03:32,440
going to be a little flexible and how

62
00:03:30,669 --> 00:03:33,879
long each topic goes if we're having

63
00:03:32,440 --> 00:03:36,340
good conversation we're not going to

64
00:03:33,879 --> 00:03:39,099
break that break that which means that

65
00:03:36,340 --> 00:03:42,430
we're not exactly sure what what's going

66
00:03:39,099 --> 00:03:43,810
to line up with the session brain so

67
00:03:42,430 --> 00:03:47,129
we're just going to go in the order

68
00:03:43,810 --> 00:03:51,250
that's on in the published agenda and

69
00:03:47,129 --> 00:03:52,690
that's captured here this this slide is

70
00:03:51,250 --> 00:03:55,540
unchanged this says the agenda is

71
00:03:52,690 --> 00:03:58,299
unchanged the design team items aren't

72
00:03:55,540 --> 00:04:01,569
change the non-charter items are

73
00:03:58,299 --> 00:04:06,129
promotes previously been published but

74
00:04:01,569 --> 00:04:09,458
we've added a topic that's come up on

75
00:04:06,129 --> 00:04:11,198
some it came up on the list and there's

76
00:04:09,459 --> 00:04:12,430
been some more private discussion

77
00:04:11,199 --> 00:04:15,430
related to it but we think it's a good

78
00:04:12,430 --> 00:04:17,409
good topic for the work talked about and

79
00:04:15,430 --> 00:04:22,479
that's sort of how to deal with some of

80
00:04:17,409 --> 00:04:25,270
these MN NMDA transition issues so we'll

81
00:04:22,479 --> 00:04:30,250
be hitting that at the end of the at our

82
00:04:25,270 --> 00:04:31,380
agenda if there's other topics we can

83
00:04:30,250 --> 00:04:33,810
probably

84
00:04:31,380 --> 00:04:37,650
and discussed publicly on the list we're

85
00:04:33,810 --> 00:04:39,840
happy to take those also wash laniel

86
00:04:37,650 --> 00:04:48,000
Eric's on can you say a few words about

87
00:04:39,840 --> 00:04:50,489
what's up with yang next so there's the

88
00:04:48,000 --> 00:04:55,500
no update to yang next since the last

89
00:04:50,490 --> 00:04:59,250
ITF meeting where we have met I think

90
00:04:55,500 --> 00:05:01,620
primarily I asked I think the main issue

91
00:04:59,250 --> 00:05:05,970
is we don't have someone to drive the

92
00:05:01,620 --> 00:05:08,670
discussion in particular folks are

93
00:05:05,970 --> 00:05:09,960
probably looking at me not just because

94
00:05:08,670 --> 00:05:11,220
in the front of the room but because I

95
00:05:09,960 --> 00:05:15,330
had coordinated several of those

96
00:05:11,220 --> 00:05:17,130
meetings before to do that but at the

97
00:05:15,330 --> 00:05:20,609
moment I don't have a bandwidth to

98
00:05:17,130 --> 00:05:23,969
actually drive those discussions much

99
00:05:20,610 --> 00:05:25,080
less even coordinate the meetings to for

100
00:05:23,970 --> 00:05:30,570
the discussions to be had

101
00:05:25,080 --> 00:05:32,969
I did ask someone to do that but they

102
00:05:30,570 --> 00:05:34,860
also had not really signed up to do that

103
00:05:32,970 --> 00:05:37,370
and so that's where we're at right now

104
00:05:34,860 --> 00:05:39,540
it's just sort of a limbo waiting for

105
00:05:37,370 --> 00:05:41,690
someone to have the bandwidth to

106
00:05:39,540 --> 00:05:43,560
actually drive the discussions so the

107
00:05:41,690 --> 00:05:50,370
bottom line is that there's been no

108
00:05:43,560 --> 00:05:52,920
progress since last meeting yeah I also

109
00:05:50,370 --> 00:05:55,260
think that the design team activity that

110
00:05:52,920 --> 00:05:57,990
we're gonna hear about is probably

111
00:05:55,260 --> 00:05:59,880
taking a bunch of attention from those

112
00:05:57,990 --> 00:06:01,140
who might also participate in the egg

113
00:05:59,880 --> 00:06:04,230
next site

114
00:06:01,140 --> 00:06:06,300
my personal view not as someone who is

115
00:06:04,230 --> 00:06:08,220
contributing to that work my personal

116
00:06:06,300 --> 00:06:11,100
view is ones that the current design

117
00:06:08,220 --> 00:06:13,550
team winds down there may be some more

118
00:06:11,100 --> 00:06:13,550
energy

119
00:06:18,460 --> 00:06:23,659
so we've had some nice progress since

120
00:06:21,919 --> 00:06:26,359
the last meeting we have a couple of new

121
00:06:23,660 --> 00:06:28,580
RFC's it's always good to see those

122
00:06:26,360 --> 00:06:30,590
wherever that is why we're here it's not

123
00:06:28,580 --> 00:06:32,659
to have good discussions well that we

124
00:06:30,590 --> 00:06:36,378
appreciate that it's actually to produce

125
00:06:32,659 --> 00:06:40,159
these documents we have one document

126
00:06:36,379 --> 00:06:41,960
that is on its way to the isg and

127
00:06:40,159 --> 00:06:46,310
another one that I was hoping to push

128
00:06:41,960 --> 00:06:48,710
submit on but if we need an update

129
00:06:46,310 --> 00:06:51,800
published unless I missed it today which

130
00:06:48,710 --> 00:06:53,270
is possible although you know Kent is

131
00:06:51,800 --> 00:06:55,520
such a slacker he only had a chair

132
00:06:53,270 --> 00:06:57,500
another meeting this morning so he was

133
00:06:55,520 --> 00:07:00,469
one who needs to push okay so maybe

134
00:06:57,500 --> 00:07:02,960
we'll have it this week but as soon as

135
00:07:00,470 --> 00:07:05,810
that happens art book artwork folding

136
00:07:02,960 --> 00:07:07,250
will be submitted it was the real it's

137
00:07:05,810 --> 00:07:10,759
really some minor things related to

138
00:07:07,250 --> 00:07:14,360
copyright from what the trust requests

139
00:07:10,759 --> 00:07:16,039
on in for code segments and there's a

140
00:07:14,360 --> 00:07:18,710
code segment in this document so that

141
00:07:16,039 --> 00:07:19,490
that kind of paid it as soon as that is

142
00:07:18,710 --> 00:07:24,620
published

143
00:07:19,490 --> 00:07:29,449
we'll see each other we have a couple of

144
00:07:24,620 --> 00:07:33,590
documents that are not on the interface

145
00:07:29,449 --> 00:07:35,389
extension is on yeah so I feel like we

146
00:07:33,590 --> 00:07:42,020
had something else but geolocation is

147
00:07:35,389 --> 00:07:43,880
definitely not on the agenda I warned

148
00:07:42,020 --> 00:07:47,599
him I was gonna put him on the spot

149
00:07:43,880 --> 00:07:49,130
I guess he decided not be here there was

150
00:07:47,599 --> 00:07:52,580
a little bit of a discussion on the list

151
00:07:49,130 --> 00:07:56,449
about geolocation it looks like the bat

152
00:07:52,580 --> 00:07:59,060
is getting pretty close to being done so

153
00:07:56,449 --> 00:08:01,400
if you have opinions on it be really

154
00:07:59,060 --> 00:08:03,529
good to get that robust and I think we

155
00:08:01,400 --> 00:08:05,090
got the updated yang types is believe

156
00:08:03,529 --> 00:08:09,860
maybe double it's not on the agenda was

157
00:08:05,090 --> 00:08:13,520
on that's the one in fact it's listed

158
00:08:09,860 --> 00:08:16,789
right here to mention so thanks for that

159
00:08:13,520 --> 00:08:20,448
appreciate that so at the last meeting

160
00:08:16,789 --> 00:08:22,550
we had an update on these gang types and

161
00:08:20,449 --> 00:08:25,699
we were actually hoping to move that

162
00:08:22,550 --> 00:08:28,430
document through really quickly and we

163
00:08:25,699 --> 00:08:31,580
haven't seen an update uragan is

164
00:08:28,430 --> 00:08:36,020
online and if he feels like mentioning

165
00:08:31,580 --> 00:08:42,110
something but we're really gated by the

166
00:08:36,020 --> 00:08:46,480
author's pushing that pillar seeing that

167
00:08:42,110 --> 00:08:46,480
one in q2 that slide

168
00:08:50,060 --> 00:08:58,939
I feel like I should return the center

169
00:08:51,620 --> 00:09:03,649
control so so we don't take it all right

170
00:08:58,939 --> 00:09:05,599
thanks duplicated so there's been a

171
00:09:03,649 --> 00:09:07,550
recent discussion on the list about an

172
00:09:05,600 --> 00:09:09,439
errata and then we realized there's

173
00:09:07,550 --> 00:09:13,069
actually a whole slew of virata's that

174
00:09:09,439 --> 00:09:16,550
we really haven't verified as a working

175
00:09:13,069 --> 00:09:20,389
group now technically the aetyi is the

176
00:09:16,550 --> 00:09:22,250
one who verifies an errata but generally

177
00:09:20,389 --> 00:09:25,250
the ADEs take input from the working

178
00:09:22,250 --> 00:09:26,689
group so we think it's worthwhile to go

179
00:09:25,250 --> 00:09:28,790
through each of these we're not going to

180
00:09:26,689 --> 00:09:31,399
go through each of them now but we think

181
00:09:28,790 --> 00:09:33,439
it is worthwhile to go through each of

182
00:09:31,399 --> 00:09:35,420
these as individuals as the working

183
00:09:33,439 --> 00:09:38,029
group and agree on what we think the

184
00:09:35,420 --> 00:09:40,939
right answer is of whether or not these

185
00:09:38,029 --> 00:09:42,589
should be verified or not now I think we

186
00:09:40,939 --> 00:09:45,910
had a couple of them that we had

187
00:09:42,589 --> 00:09:48,079
identified it being to be objective

188
00:09:45,910 --> 00:09:55,160
there's only one listed here I thought

189
00:09:48,079 --> 00:09:59,239
we had listed two which you can see is

190
00:09:55,160 --> 00:10:00,949
as an errata lodged against RC 7950 that

191
00:09:59,240 --> 00:10:05,000
received significant discussion on the

192
00:10:00,949 --> 00:10:08,000
list fairly recently we think that

193
00:10:05,000 --> 00:10:10,490
should be rejected as well and the other

194
00:10:08,000 --> 00:10:12,680
one that should be rejected we took a

195
00:10:10,490 --> 00:10:15,800
look at and it's actually a technical

196
00:10:12,680 --> 00:10:19,339
change and one thing to keep in mind is

197
00:10:15,800 --> 00:10:22,819
is that if you see something in a RFC

198
00:10:19,339 --> 00:10:25,910
and would like to modify the behavior of

199
00:10:22,819 --> 00:10:28,279
that RFC such that others implement that

200
00:10:25,910 --> 00:10:34,100
change behavior the right way to do that

201
00:10:28,279 --> 00:10:37,339
is in a disc or a new RFC that updates

202
00:10:34,100 --> 00:10:40,250
the existing RFC you can't do a

203
00:10:37,339 --> 00:10:42,110
technical change through a neuron so

204
00:10:40,250 --> 00:10:44,000
this is asking for that particular one

205
00:10:42,110 --> 00:10:46,040
that's being rejected is asking for a

206
00:10:44,000 --> 00:10:48,019
substantive technical change that would

207
00:10:46,040 --> 00:10:49,849
impact all implementations of the

208
00:10:48,019 --> 00:10:51,559
document I mean it's just adding a

209
00:10:49,850 --> 00:10:53,449
default so it's not like a controversial

210
00:10:51,559 --> 00:10:55,250
thing but you just can't do that

211
00:10:53,449 --> 00:10:57,740
technical type of technical change and

212
00:10:55,250 --> 00:11:01,009
they Iran just by our process so that's

213
00:10:57,740 --> 00:11:02,779
something to keep in mind it is going to

214
00:11:01,009 --> 00:11:03,730
be important that we go through each of

215
00:11:02,779 --> 00:11:07,360
these and as a work

216
00:11:03,730 --> 00:11:10,089
group have a response will probably push

217
00:11:07,360 --> 00:11:12,519
that as chairs that if there isn't

218
00:11:10,089 --> 00:11:16,029
something that has a clear discussion on

219
00:11:12,519 --> 00:11:18,130
the other 157 84 which is the recent

220
00:11:16,029 --> 00:11:20,350
discussion clearly that's gonna we think

221
00:11:18,130 --> 00:11:21,880
that's gonna be rejected will close the

222
00:11:20,350 --> 00:11:26,110
conversation if it's not otherwise

223
00:11:21,880 --> 00:11:27,939
closed if you have opinions on these we

224
00:11:26,110 --> 00:11:30,130
would like to hear them we can hear them

225
00:11:27,940 --> 00:11:32,800
right now if you came prepared to talk

226
00:11:30,130 --> 00:11:37,180
about any amendments dro last if you

227
00:11:32,800 --> 00:11:42,719
have not we can take it to us any

228
00:11:37,180 --> 00:11:45,339
comments okay

229
00:11:42,720 --> 00:11:49,029
that appears to be the last one in this

230
00:11:45,339 --> 00:11:53,130
package so we're going to move on to Bob

231
00:11:49,029 --> 00:11:53,130
and talking about blocks all

232
00:12:54,850 --> 00:12:57,940
[Applause]

233
00:13:06,499 --> 00:13:11,660
yes sorry don't eat repeat that was okay

234
00:13:17,959 --> 00:13:22,888
okay so more reviews please then are

235
00:13:21,569 --> 00:13:24,689
saying that one of the issues has been

236
00:13:22,889 --> 00:13:27,470
raised by EC I've had verbal comment

237
00:13:24,689 --> 00:13:30,059
from him yesterday I think he's happy

238
00:13:27,470 --> 00:13:33,360
but we'll discuss that today and then a

239
00:13:30,059 --> 00:13:35,339
separate issue raised on him - not on or

240
00:13:33,360 --> 00:13:38,040
not related to this document but more

241
00:13:35,339 --> 00:13:39,600
generally but I'm proposing and we

242
00:13:38,040 --> 00:13:43,519
discuss and have a potential change to

243
00:13:39,600 --> 00:13:45,839
this draft for that so the issue that AC

244
00:13:43,519 --> 00:13:49,879
raised here I mean his actual text is

245
00:13:45,839 --> 00:13:52,439
there but basically he's saying the RFC

246
00:13:49,879 --> 00:13:55,139
36:35 defined a load of Ethernet like

247
00:13:52,439 --> 00:13:56,579
counters statistics and maybe we should

248
00:13:55,139 --> 00:13:59,339
include a subset of those into this

249
00:13:56,579 --> 00:14:02,849
draft and in particular he noted that

250
00:13:59,339 --> 00:14:05,369
this draft has one counter for or for

251
00:14:02,850 --> 00:14:07,139
reporting destination map drops but none

252
00:14:05,369 --> 00:14:08,819
of the other ones there well there's

253
00:14:07,139 --> 00:14:11,299
some sort of background history to this

254
00:14:08,819 --> 00:14:14,819
and that's really that we looked at that

255
00:14:11,299 --> 00:14:18,379
RC another one we looked at the current

256
00:14:14,819 --> 00:14:21,360
a third like mabe and I looked at the

257
00:14:18,379 --> 00:14:23,279
80223 manageability interface Clause 30

258
00:14:21,360 --> 00:14:25,619
and I had a spreadsheet that I liked

259
00:14:23,279 --> 00:14:27,449
that effectively correlated these

260
00:14:25,619 --> 00:14:30,089
different counters and things and the

261
00:14:27,449 --> 00:14:31,889
upshot of all of that is that the vast

262
00:14:30,089 --> 00:14:35,749
majority of the counters that AC was

263
00:14:31,889 --> 00:14:39,660
asking for either included in the 802

264
00:14:35,749 --> 00:14:43,290
3.2 which is the yang model a 2.3 that

265
00:14:39,660 --> 00:14:45,029
standardized by Triple E or all they

266
00:14:43,290 --> 00:14:46,259
regarded as being effectively obsolete

267
00:14:45,029 --> 00:14:50,100
counters and we don't want to carry them

268
00:14:46,259 --> 00:14:52,980
forward um but there were two exceptions

269
00:14:50,100 --> 00:14:56,429
to that the the aren't included in there

270
00:14:52,980 --> 00:14:58,889
that worth discussing the first one is

271
00:14:56,429 --> 00:15:02,660
whether we want to add a sub interface

272
00:14:58,889 --> 00:15:06,149
d-max drop counter so this would be on

273
00:15:02,660 --> 00:15:08,189
the trunk parent interface is if you've

274
00:15:06,149 --> 00:15:09,740
got many sub interfaces they're each

275
00:15:08,189 --> 00:15:12,089
classifying traffic in different ways

276
00:15:09,740 --> 00:15:13,920
and a frame comes in that can't be

277
00:15:12,089 --> 00:15:16,139
classified to any sub interface and you

278
00:15:13,920 --> 00:15:17,939
drop it we don't currently have a drop

279
00:15:16,139 --> 00:15:19,500
counter for that I think that might be

280
00:15:17,939 --> 00:15:22,439
worth adding in these

281
00:15:19,500 --> 00:15:24,540
my opinion so that's relatively easy to

282
00:15:22,440 --> 00:15:27,650
add in a think is that anyone has an

283
00:15:24,540 --> 00:15:30,380
opinion on that or is opposed to that

284
00:15:27,650 --> 00:15:33,300
okay if not I'll assume I'll add it in

285
00:15:30,380 --> 00:15:36,390
and that's fine that's fairly easy then

286
00:15:33,300 --> 00:15:37,770
the the second one is more interesting

287
00:15:36,390 --> 00:15:40,830
it's about the ethernet histogram

288
00:15:37,770 --> 00:15:44,610
statistics and that's this is what they

289
00:15:40,830 --> 00:15:47,010
look like so this is defined in one of

290
00:15:44,610 --> 00:15:49,200
the existing MIPS or RFC's I think is a

291
00:15:47,010 --> 00:15:51,180
breakdown of the number of packets

292
00:15:49,200 --> 00:15:53,880
received based on the length of that

293
00:15:51,180 --> 00:15:55,859
frame come that came in and what's sort

294
00:15:53,880 --> 00:15:59,280
of interesting here is that this has

295
00:15:55,860 --> 00:16:01,410
been set up to accommodate single tank

296
00:15:59,280 --> 00:16:04,319
frames or in fact that actually is might

297
00:16:01,410 --> 00:16:06,380
include CRC bytes so or untied frames

298
00:16:04,320 --> 00:16:08,580
and when you get to these boundaries

299
00:16:06,380 --> 00:16:10,740
then it gets a bit trickier where you

300
00:16:08,580 --> 00:16:14,030
have like queueing queue or double

301
00:16:10,740 --> 00:16:20,160
friend and double VLAN tags packets and

302
00:16:14,030 --> 00:16:22,199
also the 80223 has a interesting view of

303
00:16:20,160 --> 00:16:24,719
how you handle jumbo frames so I don't

304
00:16:22,200 --> 00:16:26,310
think they specifically disallowed but I

305
00:16:24,720 --> 00:16:28,260
don't think either the spectra T sort of

306
00:16:26,310 --> 00:16:30,540
wants to talk about them or standardize

307
00:16:28,260 --> 00:16:32,460
them where is you want to fill out this

308
00:16:30,540 --> 00:16:37,079
table properly you want to go up to

309
00:16:32,460 --> 00:16:39,330
about 9k as well here's a long and proud

310
00:16:37,080 --> 00:16:43,620
tradition of not standardizing the

311
00:16:39,330 --> 00:16:45,270
larger frame sizes okay well I did get a

312
00:16:43,620 --> 00:16:50,570
comment from them about it but anyway

313
00:16:45,270 --> 00:16:50,569
still so when in discussion with them

314
00:16:52,250 --> 00:16:57,270
they included in the standard drops so

315
00:16:55,500 --> 00:17:02,280
there there be classified as a shorts in

316
00:16:57,270 --> 00:17:03,960
two separate counts for 64 byte there's

317
00:17:02,280 --> 00:17:05,879
this did this counters for a comment

318
00:17:03,960 --> 00:17:10,890
with the name of it there's there's

319
00:17:05,880 --> 00:17:12,329
layton there is a 64 one as well but

320
00:17:10,890 --> 00:17:14,010
it's not included in this set because

321
00:17:12,329 --> 00:17:20,819
it's already specific counter for frames

322
00:17:14,010 --> 00:17:22,500
that size I think so

323
00:17:20,819 --> 00:17:24,389
when there's discussion when we do the

324
00:17:22,500 --> 00:17:25,650
work with 80 2.3 and I didn't follow

325
00:17:24,390 --> 00:17:26,970
that through all the way to the end I

326
00:17:25,650 --> 00:17:29,370
was involved with in the early parts of

327
00:17:26,970 --> 00:17:31,740
that as I say him they didn't really

328
00:17:29,370 --> 00:17:32,909
want to standardize these histogram

329
00:17:31,740 --> 00:17:35,400
counters

330
00:17:32,910 --> 00:17:36,930
and various issues and then the other

331
00:17:35,400 --> 00:17:38,460
sort of issue that comes up is that

332
00:17:36,930 --> 00:17:39,870
because there hasn't been a good

333
00:17:38,460 --> 00:17:42,470
standard here that goes to these higher

334
00:17:39,870 --> 00:17:44,340
ranges that different vendors hardware

335
00:17:42,470 --> 00:17:46,860
does different things they choose

336
00:17:44,340 --> 00:17:49,530
different bucket sizes so you can't

337
00:17:46,860 --> 00:17:52,110
really usefully define these bucket

338
00:17:49,530 --> 00:17:53,460
sizes and expect people to Rev they're

339
00:17:52,110 --> 00:17:55,709
raised external support that doesn't

340
00:17:53,460 --> 00:17:59,430
make sense so there was a proposal may

341
00:17:55,710 --> 00:18:05,310
be that we could standardize this in is

342
00:17:59,430 --> 00:18:41,750
part of ITF instead and the suggestion

343
00:18:05,310 --> 00:18:44,340
is David law so the chair of three I

344
00:18:41,750 --> 00:18:46,470
don't know how I'm not sure what they

345
00:18:44,340 --> 00:18:49,220
would hit but it might be easy for me to

346
00:18:46,470 --> 00:18:58,890
email him directly first and then see

347
00:18:49,220 --> 00:19:02,700
and I actually think yes so this came

348
00:18:58,890 --> 00:19:06,060
out of effectively the discussions when

349
00:19:02,700 --> 00:19:07,440
I City 92.3 young discussions so that's

350
00:19:06,060 --> 00:19:09,330
where this came up and that was the

351
00:19:07,440 --> 00:19:12,650
session at the time that that might be a

352
00:19:09,330 --> 00:19:18,629
way of getting around the rules

353
00:19:12,650 --> 00:19:20,940
pragmatically so so basically the

354
00:19:18,630 --> 00:19:23,190
proposal here is that you could and

355
00:19:20,940 --> 00:19:25,530
rather having strict bucket definitions

356
00:19:23,190 --> 00:19:28,440
we could return a list of bucket entries

357
00:19:25,530 --> 00:19:29,940
and where each bucket entry defines what

358
00:19:28,440 --> 00:19:32,070
the range is covering and low and high

359
00:19:29,940 --> 00:19:34,560
end inclusive and accounts the packets

360
00:19:32,070 --> 00:19:37,139
that match that bucket range so it's a

361
00:19:34,560 --> 00:19:39,480
bit more of a both in terms of the data

362
00:19:37,140 --> 00:19:41,640
model but it's more flexible at the same

363
00:19:39,480 --> 00:19:43,950
time we would give recommendations in

364
00:19:41,640 --> 00:19:45,960
the description to say we recommend you

365
00:19:43,950 --> 00:19:49,649
choose these bucket sizes so

366
00:19:45,960 --> 00:19:55,080
and trying to sort of encourage heading

367
00:19:49,649 --> 00:19:56,879
towards a consistency somewhere so I had

368
00:19:55,080 --> 00:19:58,649
the question is do I have these in now

369
00:19:56,879 --> 00:20:01,049
or can be deferred so I think the

370
00:19:58,649 --> 00:20:03,928
question is do we try and do this now in

371
00:20:01,049 --> 00:20:05,668
this working room last call at all or if

372
00:20:03,929 --> 00:20:07,799
we do want to try and do this I can

373
00:20:05,669 --> 00:20:10,200
speak to David law and find out whether

374
00:20:07,799 --> 00:20:11,519
he's happy for us to do this I'm fact if

375
00:20:10,200 --> 00:20:13,799
I can knock it up and say that this is

376
00:20:11,519 --> 00:20:15,240
what it would look like but that's my

377
00:20:13,799 --> 00:20:17,309
question is is this the right time to

378
00:20:15,240 --> 00:20:26,789
even trying to do this that's maybe a

379
00:20:17,309 --> 00:20:40,289
question to the chairs there in the

380
00:20:26,789 --> 00:20:44,970
working room care I don't know on this

381
00:20:40,289 --> 00:20:46,889
specific one yeah I don't know one that

382
00:20:44,970 --> 00:20:48,809
I think probably he would I don't know

383
00:20:46,889 --> 00:20:52,820
he had an EP know with trying to lay

384
00:20:48,809 --> 00:20:52,820
this worked to finish that's awful not

385
00:20:54,379 --> 00:21:01,168
so tim carry nokia so the question I

386
00:20:59,460 --> 00:21:03,440
would really have is that those those

387
00:21:01,169 --> 00:21:05,879
sizes that were there were therefore

388
00:21:03,440 --> 00:21:08,639
identified for various reasons right you

389
00:21:05,879 --> 00:21:13,139
know for for good reasons at the time

390
00:21:08,639 --> 00:21:16,379
right and so the the question is is and

391
00:21:13,139 --> 00:21:18,299
they have tools and tests that that go

392
00:21:16,379 --> 00:21:21,090
around that right and so what we said is

393
00:21:18,299 --> 00:21:25,259
okay we're gonna provide some you know

394
00:21:21,090 --> 00:21:28,320
abstraction if you will or ability to do

395
00:21:25,259 --> 00:21:30,419
some meta work on that such that we can

396
00:21:28,320 --> 00:21:33,570
you know define the ranges themselves

397
00:21:30,419 --> 00:21:35,279
and then provide some guidelines to two

398
00:21:33,570 --> 00:21:36,840
different pieces the problem is that

399
00:21:35,279 --> 00:21:38,179
when you say you have a guideline now

400
00:21:36,840 --> 00:21:40,559
you don't have anything that you can

401
00:21:38,179 --> 00:21:42,659
standardize that I as a client and I as

402
00:21:40,559 --> 00:21:44,490
a server can really agree upon I just

403
00:21:42,659 --> 00:21:47,759
deal with section so I can't guarantee

404
00:21:44,490 --> 00:21:49,409
that certain servers that would

405
00:21:47,759 --> 00:21:52,529
implement these things would implement

406
00:21:49,409 --> 00:21:54,269
say packet size 256 through 511 so I

407
00:21:52,529 --> 00:21:57,029
can't really rely on that right I have

408
00:21:54,269 --> 00:21:58,740
to use a a mechanism may be an operator

409
00:21:57,029 --> 00:21:59,789
has to get involved in stuff like that

410
00:21:58,740 --> 00:22:04,409
so that's the biggest

411
00:21:59,789 --> 00:22:08,519
certain that I have of using you know

412
00:22:04,409 --> 00:22:12,059
the extract portion of this is that

413
00:22:08,519 --> 00:22:14,399
you've lost now the first class Ness of

414
00:22:12,059 --> 00:22:16,918
oil that of that range that people can

415
00:22:14,399 --> 00:22:19,498
depend upon when they're a client so

416
00:22:16,919 --> 00:22:21,899
it's a good point my aim is not to

417
00:22:19,499 --> 00:22:23,220
change these bucket sizes here so that's

418
00:22:21,899 --> 00:22:24,689
not what I'm trying to change I think

419
00:22:23,220 --> 00:22:26,369
everyone who implements these will

420
00:22:24,690 --> 00:22:28,259
implement at least these bucket size yes

421
00:22:26,369 --> 00:22:30,029
people that are implementing things that

422
00:22:28,259 --> 00:22:32,909
might not know that they need implement

423
00:22:30,029 --> 00:22:34,320
those specific sizes yeah that's the

424
00:22:32,909 --> 00:22:36,029
problem that I have it's the ones that

425
00:22:34,320 --> 00:22:38,729
bigger than that these the ones that are

426
00:22:36,029 --> 00:22:42,239
go up to like 2k for kak those the ones

427
00:22:38,729 --> 00:22:46,019
where and especially around that 15 14

428
00:22:42,239 --> 00:22:48,239
15 18 by bucket size you get more in

429
00:22:46,019 --> 00:22:51,210
consistency right so my question is is

430
00:22:48,239 --> 00:22:53,820
that where where do we put a user is

431
00:22:51,210 --> 00:22:58,019
there a place is a place where we would

432
00:22:53,820 --> 00:23:01,080
put ranges that if they do implement

433
00:22:58,019 --> 00:23:04,080
those that would be able to provide a

434
00:23:01,080 --> 00:23:05,639
normative stance to it right yeah that's

435
00:23:04,080 --> 00:23:07,859
the thing that maybe it's an identity

436
00:23:05,639 --> 00:23:08,369
maybe it's something to that nature yeah

437
00:23:07,859 --> 00:23:14,369
maybe

438
00:23:08,369 --> 00:23:17,459
right yes okay yeah yeah Joel yeagley um

439
00:23:14,369 --> 00:23:21,689
I definitely see the existing values as

440
00:23:17,460 --> 00:23:24,749
being a product of historical decisions

441
00:23:21,690 --> 00:23:27,479
that were made in the I Triple E like I

442
00:23:24,749 --> 00:23:28,739
mean you know when you decide that you

443
00:23:27,479 --> 00:23:31,070
need something bigger than fifteen

444
00:23:28,739 --> 00:23:33,749
hundred because you added a VLAN tag

445
00:23:31,070 --> 00:23:36,239
right that is a specific historical

446
00:23:33,749 --> 00:23:38,009
decisions like there's a lot of

447
00:23:36,239 --> 00:23:41,340
increments that you could come up with

448
00:23:38,009 --> 00:23:43,129
above 1500 that have various kinds of

449
00:23:41,340 --> 00:23:47,939
historical meaning but are not

450
00:23:43,129 --> 00:23:49,619
specifically like anchored to I Triple E

451
00:23:47,940 --> 00:23:54,629
standards so you you're going to end up

452
00:23:49,619 --> 00:23:59,820
with like you know 15 19 to 15 for T and

453
00:23:54,629 --> 00:24:03,330
then 15:40 to say 44 70 and then you

454
00:23:59,820 --> 00:24:08,849
know uh nine thousand nine thousand

455
00:24:03,330 --> 00:24:11,309
fourteen ninety 190 120 and then every

456
00:24:08,849 --> 00:24:13,379
Ethernet vendor trolli specification up

457
00:24:11,309 --> 00:24:15,990
to there and then Intel 116 Kay

458
00:24:13,380 --> 00:24:21,000
because it's a round number right so

459
00:24:15,990 --> 00:24:23,490
like I actually see the likelihood of us

460
00:24:21,000 --> 00:24:26,310
getting a really like good list that

461
00:24:23,490 --> 00:24:28,470
goes above this as like English in a

462
00:24:26,310 --> 00:24:31,500
short period of time that the I triple

463
00:24:28,470 --> 00:24:35,700
you will go yeah that's cool as being

464
00:24:31,500 --> 00:24:37,680
pretty low so mmm maybe we shouldn't if

465
00:24:35,700 --> 00:24:39,570
from my vantage point maybe we shouldn't

466
00:24:37,680 --> 00:24:41,760
do that between the last call and

467
00:24:39,570 --> 00:24:44,600
hopefully when we take it to ITF last

468
00:24:41,760 --> 00:24:50,370
call all right that seems like a risky

469
00:24:44,600 --> 00:24:52,340
item to add to progressing this see just

470
00:24:50,370 --> 00:24:54,929
for clarity you saying it'd be best to

471
00:24:52,340 --> 00:24:57,889
shelve this affected a than that yeah I

472
00:24:54,930 --> 00:24:59,820
mean I think this is I think this is

473
00:24:57,890 --> 00:25:04,770
this is good enough

474
00:24:59,820 --> 00:25:08,879
like I mean from my vantage point is a

475
00:25:04,770 --> 00:25:12,480
jumbo frame user you know the there are

476
00:25:08,880 --> 00:25:15,000
Jumbo's or they aren't so but but that's

477
00:25:12,480 --> 00:25:16,800
that's that's my network like I don't I

478
00:25:15,000 --> 00:25:18,960
don't spend a lot of time distinguishing

479
00:25:16,800 --> 00:25:21,810
between the say that ninety one hundred

480
00:25:18,960 --> 00:25:24,540
byte packets and the nine thousand five

481
00:25:21,810 --> 00:25:28,679
packets because I know what my empty mem

482
00:25:24,540 --> 00:25:31,230
MTU is set to yeah right so for clarity

483
00:25:28,680 --> 00:25:34,980
these counters the ones you see here not

484
00:25:31,230 --> 00:25:37,230
defined in any yeah model today right so

485
00:25:34,980 --> 00:25:39,090
we don't have those at all so they so I

486
00:25:37,230 --> 00:25:41,280
trapeze shied away from putting these in

487
00:25:39,090 --> 00:25:44,159
for historical reasons because of where

488
00:25:41,280 --> 00:25:46,649
they need to get up to yes but these

489
00:25:44,160 --> 00:25:47,850
these sorts of boundaries exist these

490
00:25:46,650 --> 00:25:50,640
boundaries that we have here

491
00:25:47,850 --> 00:25:56,580
particularly the last one are very very

492
00:25:50,640 --> 00:26:00,030
specific to historical yeah precedent so

493
00:25:56,580 --> 00:26:02,760
like these seem uncontroversial like

494
00:26:00,030 --> 00:26:06,000
because they're kind of widely

495
00:26:02,760 --> 00:26:09,600
implemented and you know encounters that

496
00:26:06,000 --> 00:26:16,280
we already use right okay like so doing

497
00:26:09,600 --> 00:26:16,280
them in yang doesn't see that weird okay

498
00:26:21,020 --> 00:26:24,020
correct

499
00:26:25,500 --> 00:26:31,059
is that true I don't know I had to check

500
00:26:28,059 --> 00:26:33,399
whether I cut my movie if the I Triple E

501
00:26:31,059 --> 00:26:37,750
Ethernet management API the clause 30

502
00:26:33,400 --> 00:26:39,490
defines counters for these it I sort of

503
00:26:37,750 --> 00:27:11,770
suspect it probably doesn't but it

504
00:26:39,490 --> 00:27:14,530
should have done okay but I guess the

505
00:27:11,770 --> 00:27:16,900
point is my point is if we there's no

506
00:27:14,530 --> 00:27:20,470
reason for us to add these counters if

507
00:27:16,900 --> 00:27:23,080
we're going to stop at 15 18 or 15 19

508
00:27:20,470 --> 00:27:24,400
whatever that dad doesn't seem a good

509
00:27:23,080 --> 00:27:25,899
reason for why we would choose to do

510
00:27:24,400 --> 00:27:27,220
that because they're choosing not to

511
00:27:25,900 --> 00:27:29,169
standardize these counters they could

512
00:27:27,220 --> 00:27:31,299
have done these if they wanted to so if

513
00:27:29,169 --> 00:27:34,299
we want to do it we probably want to at

514
00:27:31,299 --> 00:27:36,730
least fix it so it works for other use

515
00:27:34,299 --> 00:27:38,320
cases higher so even if we define this

516
00:27:36,730 --> 00:27:40,090
we could have hard-coded counters for

517
00:27:38,320 --> 00:27:41,710
these ones and then the ability to

518
00:27:40,090 --> 00:27:43,570
define extra ones and people want them

519
00:27:41,710 --> 00:27:45,340
above that and give some recommendations

520
00:27:43,570 --> 00:27:50,100
of just doubling the size each time

521
00:27:45,340 --> 00:27:50,100
that's what I would do I'll do 15 20

522
00:28:12,629 --> 00:28:17,248
then moved on which one thing is on

523
00:28:14,879 --> 00:28:21,839
different that people are starting to

524
00:28:17,249 --> 00:28:23,819
count more or jumbo frames I don't see

525
00:28:21,839 --> 00:28:34,559
any jumbo frames here and this Plus this

526
00:28:23,819 --> 00:28:39,719
whole concession yeah so because between

527
00:28:34,559 --> 00:28:40,949
59 any around 1500s to with there are

528
00:28:39,719 --> 00:28:44,039
different numbers there they're

529
00:28:40,949 --> 00:28:45,959
different sizes and there are so many

530
00:28:44,039 --> 00:28:47,549
variations but then jumbo frames you

531
00:28:45,959 --> 00:28:50,119
know like the nine case one that is

532
00:28:47,549 --> 00:28:55,349
where they are really getting interested

533
00:28:50,119 --> 00:29:00,958
right that is he you know is it 9,000

534
00:28:55,349 --> 00:29:03,178
9,000 190 191 2016 kay but like I would

535
00:29:00,959 --> 00:29:06,239
say anything about 1600 put it as a

536
00:29:03,179 --> 00:29:09,779
jumbo frame and you know but 1519 what

537
00:29:06,239 --> 00:29:11,879
we do if you have like 1520 to bid so we

538
00:29:09,779 --> 00:29:14,309
like put it up teen 1600 and anything

539
00:29:11,879 --> 00:29:15,269
about 1600 count as a jumbo frame but

540
00:29:14,309 --> 00:29:17,339
then most the point having these

541
00:29:15,269 --> 00:29:18,569
counselors told that I mean what's the

542
00:29:17,339 --> 00:29:22,019
point in history I'm cancers for

543
00:29:18,569 --> 00:29:23,759
everything below 1500 say or 1519 but

544
00:29:22,019 --> 00:29:25,619
not having them above seems like it gets

545
00:29:23,759 --> 00:29:28,679
in 2/3 information are the inflation's

546
00:29:25,619 --> 00:29:31,589
useful or is not so I can tell you from

547
00:29:28,679 --> 00:29:34,919
some debugging the MTU sizes into so

548
00:29:31,589 --> 00:29:36,599
many variants of the 1500 it is just

549
00:29:34,919 --> 00:29:38,429
really annoying and then the thing does

550
00:29:36,599 --> 00:29:39,928
work because the MTU size is just like a

551
00:29:38,429 --> 00:29:42,749
different number in your likes damn it

552
00:29:39,929 --> 00:29:44,849
and the 15 numbers they're all over the

553
00:29:42,749 --> 00:29:47,099
place yeah but they are always

554
00:29:44,849 --> 00:29:51,019
definitely below 1600 and then next

555
00:29:47,099 --> 00:29:51,019
question is oh are those jumbo frames

556
00:29:54,889 --> 00:30:03,928
what image most trans pocket I would to

557
00:30:00,690 --> 00:30:06,779
add to this discussion maybe we should

558
00:30:03,929 --> 00:30:10,169
also add pockets in and pockets out

559
00:30:06,779 --> 00:30:14,389
counter because this we don't have we

560
00:30:10,169 --> 00:30:18,089
have unicast and multicast pockets and

561
00:30:14,389 --> 00:30:19,609
for various reasons about farad just

562
00:30:18,089 --> 00:30:22,079
don't implement

563
00:30:19,609 --> 00:30:25,889
differentiation between unit costs and

564
00:30:22,079 --> 00:30:28,500
multicast pockets so really the the ITF

565
00:30:25,890 --> 00:30:31,470
interfaces model is impossible to

566
00:30:28,500 --> 00:30:34,890
implement on those devices there are

567
00:30:31,470 --> 00:30:37,640
many devices like open flow for example

568
00:30:34,890 --> 00:30:41,040
devices you cannot implement interfaces

569
00:30:37,640 --> 00:30:43,170
model for open for devices you cannot

570
00:30:41,040 --> 00:30:45,750
diplomatist or on reach through traffic

571
00:30:43,170 --> 00:30:47,790
generators and these are supposed to be

572
00:30:45,750 --> 00:30:50,429
flexible devices that you actually

573
00:30:47,790 --> 00:30:54,090
should not have any problem implementing

574
00:30:50,429 --> 00:30:57,240
the idea interfaces and I think I am

575
00:30:54,090 --> 00:30:58,949
against adding eternal specific counters

576
00:30:57,240 --> 00:31:02,400
in this draft maybe there should be

577
00:30:58,950 --> 00:31:05,400
another draft that should add them but

578
00:31:02,400 --> 00:31:07,860
this one should be kept as compact as

579
00:31:05,400 --> 00:31:11,700
possible I think now it's to watch

580
00:31:07,860 --> 00:31:13,860
already okay yeah so the John's your

581
00:31:11,700 --> 00:31:16,320
question about the total packet counts

582
00:31:13,860 --> 00:31:18,780
in and out I I could be mistaken I have

583
00:31:16,320 --> 00:31:23,428
a feeling that went into the a 2 2 dot

584
00:31:18,780 --> 00:31:26,070
3.2 I think they might have a total

585
00:31:23,429 --> 00:31:27,480
package in and out so either that count

586
00:31:26,070 --> 00:31:29,189
I think should be neither at night if

587
00:31:27,480 --> 00:31:33,150
interfaces or it should be noted to do

588
00:31:29,190 --> 00:31:41,400
3.2 you give me a look that's not the

589
00:31:33,150 --> 00:31:46,010
case but I'll double check but that's no

590
00:31:41,400 --> 00:31:46,010
more questions on that or comments and

591
00:31:46,910 --> 00:32:07,460
no it's the same thing yes well I think

592
00:32:05,429 --> 00:32:09,840
that I think we are at the end of these

593
00:32:07,460 --> 00:32:11,549
time to ask the question so the

594
00:32:09,840 --> 00:32:14,010
questions you want to ask effectively is

595
00:32:11,549 --> 00:32:18,629
who do we try and do this now do we

596
00:32:14,010 --> 00:32:25,470
defer is that the fair question you no

597
00:32:18,630 --> 00:32:28,200
harm or Powhatan so who thinks we should

598
00:32:25,470 --> 00:32:29,580
delay this and add these histogram

599
00:32:28,200 --> 00:32:32,150
counters in now which could be

600
00:32:29,580 --> 00:32:32,149
contentious

601
00:32:35,690 --> 00:32:51,600
who thinks I should do this now adding

602
00:32:48,899 --> 00:32:57,570
now adding the histogram counters that

603
00:32:51,600 --> 00:33:00,000
we do that though I seen two hands go up

604
00:32:57,570 --> 00:33:05,120
and down no one is holding their hands

605
00:33:00,000 --> 00:33:11,029
up is so very very few for the minutes

606
00:33:05,120 --> 00:33:11,029
whom how many think we should not now

607
00:33:12,409 --> 00:33:17,090
it's not a big number but it's clearly

608
00:33:17,299 --> 00:33:25,110
percentage-wise it's huge but so you

609
00:33:23,549 --> 00:33:30,408
know I think the sentiment of the room

610
00:33:25,110 --> 00:33:32,729
is to delay from my standpoint as chair

611
00:33:30,409 --> 00:33:38,639
given the level of discussion we're

612
00:33:32,730 --> 00:33:41,190
having what's that yeah that's the

613
00:33:38,639 --> 00:33:44,668
suppose we you know as chair and

614
00:33:41,190 --> 00:33:47,370
actually Sheppard's my view is the seems

615
00:33:44,669 --> 00:33:49,169
like a little contentious that ad now if

616
00:33:47,370 --> 00:33:53,908
it was important to add it we certainly

617
00:33:49,169 --> 00:33:56,879
should but I don't think it's critical

618
00:33:53,909 --> 00:33:59,309
yep specifically stating the opinion now

619
00:33:56,879 --> 00:34:03,059
because I'd like the ear of anyone in

620
00:33:59,309 --> 00:34:05,190
the working group disagrees with that so

621
00:34:03,059 --> 00:34:07,889
I think we're going to leave this

622
00:34:05,190 --> 00:34:10,069
meeting where we're not going to add the

623
00:34:07,889 --> 00:34:14,639
histogram counters including any event

624
00:34:10,069 --> 00:34:17,609
the ones each other so these are not

625
00:34:14,639 --> 00:34:21,500
going to show up in the document so if

626
00:34:17,609 --> 00:34:21,500
you disagree with that now is the time

627
00:34:23,210 --> 00:34:28,790
all right um can I can I ask one more

628
00:34:25,879 --> 00:34:31,368
question which is who thinks that we

629
00:34:28,790 --> 00:34:33,290
should try and stand ice if we don't do

630
00:34:31,369 --> 00:34:36,619
now as a separate draft or separate work

631
00:34:33,290 --> 00:34:40,960
item to try and standardize this and

632
00:34:36,619 --> 00:34:40,960
these counters in what something like it

633
00:34:41,230 --> 00:34:45,679
Joe Clark Cisco clarifying question do

634
00:34:43,879 --> 00:34:47,540
you mean standardized at the upper

635
00:34:45,679 --> 00:34:50,119
levels or just standardized on these

636
00:34:47,540 --> 00:34:52,550
buckets below 1520

637
00:34:50,119 --> 00:34:54,589
I mean these on the upper levels as well

638
00:34:52,550 --> 00:35:02,359
coming whole range okay I think you

639
00:34:54,589 --> 00:35:04,430
should yeah sorry I mean sorry have

640
00:35:02,359 --> 00:35:06,470
bigger frame sizes higher numbers higher

641
00:35:04,430 --> 00:35:12,460
higher frame sizes sorry yes higher

642
00:35:06,470 --> 00:35:17,839
frame sizes I think this should be

643
00:35:12,460 --> 00:35:20,750
standardized because for the performance

644
00:35:17,839 --> 00:35:24,230
measurement and troubleshooting across a

645
00:35:20,750 --> 00:35:28,280
service topology having that information

646
00:35:24,230 --> 00:35:30,770
to be uniform and be able to calculate

647
00:35:28,280 --> 00:35:32,780
the histogram either you know at the

648
00:35:30,770 --> 00:35:34,250
service level effort you know is very

649
00:35:32,780 --> 00:35:39,770
helpful when you're trying to debug and

650
00:35:34,250 --> 00:35:42,799
troubleshoot the for automation okay so

651
00:35:39,770 --> 00:35:45,140
I propose that I try and email David law

652
00:35:42,799 --> 00:35:48,140
and say we think about doing this what

653
00:35:45,140 --> 00:35:55,069
does he think is that I mean then we'll

654
00:35:48,140 --> 00:35:57,259
go from there okay the MTU issue which I

655
00:35:55,069 --> 00:35:59,990
hope will be easier although MTU is

656
00:35:57,260 --> 00:36:02,089
always contentious contentious thing so

657
00:35:59,990 --> 00:36:04,279
there's a network thread titled question

658
00:36:02,089 --> 00:36:06,230
regarding rc8 three four four and those

659
00:36:04,280 --> 00:36:08,750
basically the premise of what came up

660
00:36:06,230 --> 00:36:11,720
there is I think that the Linux default

661
00:36:08,750 --> 00:36:16,490
loopback into you is six five five three

662
00:36:11,720 --> 00:36:20,299
six bytes long whereas the all the m2

663
00:36:16,490 --> 00:36:24,200
use in the ITF models are limited to you

664
00:36:20,299 --> 00:36:26,930
in sixteen and in 65535 somebody pointed

665
00:36:24,200 --> 00:36:31,578
out that an IP layer having them to you

666
00:36:26,930 --> 00:36:33,740
above 65535 anyway and this model does

667
00:36:31,579 --> 00:36:36,890
define an L - M to you so it defines it

668
00:36:33,740 --> 00:36:39,410
into you across those protocols

669
00:36:36,890 --> 00:36:43,160
and these currently defined as a UN 16

670
00:36:39,410 --> 00:36:48,019
the question is should we change this to

671
00:36:43,160 --> 00:36:50,589
you and 32 instead - specifically to

672
00:36:48,019 --> 00:37:01,970
cover this Linux live back into you case

673
00:36:50,589 --> 00:37:05,420
any thoughts on that opinion yeah

674
00:37:01,970 --> 00:37:08,799
definitely because different interfaces

675
00:37:05,420 --> 00:37:10,339
if you take out a do not take Jeff

676
00:37:08,799 --> 00:37:12,769
bigger number

677
00:37:10,339 --> 00:37:15,049
not only the Wako interface there are

678
00:37:12,769 --> 00:37:17,479
other interfaces well that the go above

679
00:37:15,049 --> 00:37:19,999
us I know you can also set it to

680
00:37:17,480 --> 00:37:22,609
megabyte right so like this actually

681
00:37:19,999 --> 00:37:26,808
help helps us solve that problem okay so

682
00:37:22,609 --> 00:37:28,999
that someone else does it brilliant

683
00:37:26,809 --> 00:37:30,529
okay so assuming movies against this

684
00:37:28,999 --> 00:37:37,399
then I'll just switch that to you and

685
00:37:30,529 --> 00:37:39,289
such - that's the last one so any other

686
00:37:37,400 --> 00:37:44,989
comments on the interface extension

687
00:37:39,289 --> 00:37:48,349
model in that mail that actually brought

688
00:37:44,989 --> 00:37:51,349
up that it was my mail to the group and

689
00:37:48,349 --> 00:37:54,440
that was in the end there was another

690
00:37:51,349 --> 00:37:58,700
suggestion in addition to the l2 MTU I

691
00:37:54,440 --> 00:38:01,509
think it makes sense to have MTU which

692
00:37:58,700 --> 00:38:05,558
is the MTU definition actually used by

693
00:38:01,509 --> 00:38:08,180
Linux like when you use the if'

694
00:38:05,559 --> 00:38:12,349
interfaces configuration any glimpse

695
00:38:08,180 --> 00:38:16,788
what you get is actually the NQ without

696
00:38:12,349 --> 00:38:19,640
the the header all together that's very

697
00:38:16,789 --> 00:38:22,849
important for most people who use Linux

698
00:38:19,640 --> 00:38:25,519
they are used to that value so this this

699
00:38:22,849 --> 00:38:27,730
has to be in the model I think and there

700
00:38:25,519 --> 00:38:31,729
is advantage when you when you define

701
00:38:27,730 --> 00:38:35,839
protocol configuration based on the ITA

702
00:38:31,730 --> 00:38:38,869
interfaces you want to know the the the

703
00:38:35,839 --> 00:38:44,390
pocket payload you can use so when you

704
00:38:38,869 --> 00:38:46,400
compare parameters you can when you are

705
00:38:44,390 --> 00:38:48,499
configuring other end to use if other

706
00:38:46,400 --> 00:38:50,850
protocols you can put a must statement

707
00:38:48,499 --> 00:38:54,209
there limiting the size of that end

708
00:38:50,850 --> 00:38:55,980
you to to that empty you so this makes a

709
00:38:54,210 --> 00:38:58,410
lot of sense to have it there and it's

710
00:38:55,980 --> 00:39:02,040
more elegant here just interfaces

711
00:38:58,410 --> 00:39:04,350
interface and to you kind of elegant l

712
00:39:02,040 --> 00:39:06,270
to empty you and especially the

713
00:39:04,350 --> 00:39:08,100
limitation of taking out the view on in

714
00:39:06,270 --> 00:39:10,259
the description statement creates

715
00:39:08,100 --> 00:39:13,740
complications because you have the moxx

716
00:39:10,260 --> 00:39:17,850
that actually just don't care about it

717
00:39:13,740 --> 00:39:20,129
it's a v1 edit or not the into you is

718
00:39:17,850 --> 00:39:22,350
the same register value so if you

719
00:39:20,130 --> 00:39:24,120
standardize this in the young model it

720
00:39:22,350 --> 00:39:26,700
will be difficult implemented like you

721
00:39:24,120 --> 00:39:29,400
won't have a future not sending but it's

722
00:39:26,700 --> 00:39:31,560
bigger than that sizing harder and you

723
00:39:29,400 --> 00:39:33,630
have this difference that a v1 edit

724
00:39:31,560 --> 00:39:35,460
should not be a problem it should go

725
00:39:33,630 --> 00:39:38,910
through you cannot do it with the

726
00:39:35,460 --> 00:39:41,970
existing hardware that's another point I

727
00:39:38,910 --> 00:39:43,470
I have about this so a general in empty

728
00:39:41,970 --> 00:39:47,129
you that corresponds to the Linux

729
00:39:43,470 --> 00:39:51,149
definition of MTU and is something that

730
00:39:47,130 --> 00:39:59,900
I proposed vladimir can you remind me

731
00:39:51,150 --> 00:40:03,210
your last name bacillus I see them so

732
00:39:59,900 --> 00:40:06,690
I'm nervous about that for several

733
00:40:03,210 --> 00:40:08,790
reasons one is that I think losing the

734
00:40:06,690 --> 00:40:10,440
l2m to your configuration value is

735
00:40:08,790 --> 00:40:13,320
probably a mistake I think there's lots

736
00:40:10,440 --> 00:40:15,780
of systems that use that as there is a

737
00:40:13,320 --> 00:40:18,870
configurable value on an interface so I

738
00:40:15,780 --> 00:40:21,770
think changing that to an l-3 MTU so

739
00:40:18,870 --> 00:40:25,380
payload m to you as you say would be

740
00:40:21,770 --> 00:40:26,850
probably a poor choice I think then the

741
00:40:25,380 --> 00:40:29,700
question is could you have both in

742
00:40:26,850 --> 00:40:32,670
coexisting but that would also you could

743
00:40:29,700 --> 00:40:34,439
you could probably allow either of the

744
00:40:32,670 --> 00:40:36,450
two to be configured potentially but I'm

745
00:40:34,440 --> 00:40:38,700
not sure how the constraints would work

746
00:40:36,450 --> 00:40:40,919
so if your constraint was against a

747
00:40:38,700 --> 00:40:42,750
payload based em to you but the user to

748
00:40:40,920 --> 00:40:46,140
configure than L to him to you then it

749
00:40:42,750 --> 00:40:47,790
wouldn't necessarily work I can

750
00:40:46,140 --> 00:40:49,830
certainly see how you can report both

751
00:40:47,790 --> 00:40:53,460
values in the operational state to say

752
00:40:49,830 --> 00:40:56,069
this is the the full frame MTU and this

753
00:40:53,460 --> 00:41:00,960
is what the payload LT payload em to you

754
00:40:56,070 --> 00:41:02,700
is that would be more feasible well my

755
00:41:00,960 --> 00:41:05,700
argument is that

756
00:41:02,700 --> 00:41:09,569
the paywall and view is what all the RFC

757
00:41:05,700 --> 00:41:12,598
is up to now in the eye idea for using

758
00:41:09,569 --> 00:41:15,119
yeah so it is strange that we are not

759
00:41:12,599 --> 00:41:17,759
going to have that end to you as part of

760
00:41:15,119 --> 00:41:20,940
that instead we are going to use l2 m2

761
00:41:17,759 --> 00:41:22,799
which actually you can derive from the

762
00:41:20,940 --> 00:41:25,349
type of the interface if the interface

763
00:41:22,799 --> 00:41:27,239
is Ethernet there is no doubt what is

764
00:41:25,349 --> 00:41:31,680
the difference between the MTU and the

765
00:41:27,239 --> 00:41:34,380
l2 empty so why are we going to bound

766
00:41:31,680 --> 00:41:36,089
ourselves to the interfaces and the

767
00:41:34,380 --> 00:41:37,739
interface type is not going to be used

768
00:41:36,089 --> 00:41:39,839
as information source for that

769
00:41:37,739 --> 00:41:42,599
calculation it is going to create

770
00:41:39,839 --> 00:41:45,538
confusion s on this mailing list like

771
00:41:42,599 --> 00:41:47,910
this person was trying to configure NTU

772
00:41:45,539 --> 00:41:51,660
for the paywall thank you and he was

773
00:41:47,910 --> 00:41:53,368
confused that he cannot do that did you

774
00:41:51,660 --> 00:41:54,839
add confusion you are adding another

775
00:41:53,369 --> 00:41:58,230
empty which means something different

776
00:41:54,839 --> 00:41:59,700
from everything else that's buddy but

777
00:41:58,230 --> 00:42:02,819
again it is back to what the hardware

778
00:41:59,700 --> 00:42:04,618
will place often the hardware framers

779
00:42:02,819 --> 00:42:06,690
and things might place a single value

780
00:42:04,619 --> 00:42:09,839
and the value of everything is the l2

781
00:42:06,690 --> 00:42:13,529
frame size not necessarily the IP or the

782
00:42:09,839 --> 00:42:16,200
l3 and the l2 payload so that's one

783
00:42:13,529 --> 00:42:18,420
complexity and in terms of the same

784
00:42:16,200 --> 00:42:20,519
discussions about historically might

785
00:42:18,420 --> 00:42:22,950
have standardized the l3 em to you they

786
00:42:20,519 --> 00:42:24,359
did do that they did that for LT VPN and

787
00:42:22,950 --> 00:42:27,839
they've ended up in a world of pain

788
00:42:24,359 --> 00:42:30,598
because of it so in the l2 pn specs the

789
00:42:27,839 --> 00:42:33,089
MTU negotiate across the wire is the

790
00:42:30,599 --> 00:42:34,559
payload m to you but you don't know what

791
00:42:33,089 --> 00:42:37,170
size those headers are so you can't

792
00:42:34,559 --> 00:42:39,420
easily agree that value is very hard to

793
00:42:37,170 --> 00:42:41,640
calculate when you want L to frame

794
00:42:39,420 --> 00:42:43,650
coming in to say well this amount of its

795
00:42:41,640 --> 00:42:45,299
headers without having to analyze the

796
00:42:43,650 --> 00:42:48,769
PAC you don't have tags on there so it's

797
00:42:45,299 --> 00:42:51,180
a very strange value to use so I'm still

798
00:42:48,769 --> 00:42:53,999
nervous of of moving something that's

799
00:42:51,180 --> 00:42:55,799
doing an l2 check to be using an L three

800
00:42:53,999 --> 00:42:57,930
values of configuration value I do get

801
00:42:55,799 --> 00:42:59,670
the Linux thing that's it's unusual it

802
00:42:57,930 --> 00:43:02,808
might be that that's a mistake in Linux

803
00:42:59,670 --> 00:43:02,809
for using that choice

804
00:43:06,869 --> 00:43:13,060
so I always struggle the tournelle to up

805
00:43:09,700 --> 00:43:16,810
to you okay I don't believe those are

806
00:43:13,060 --> 00:43:19,900
the revisited the term was used in the I

807
00:43:16,810 --> 00:43:23,950
Triple E and the question is better than

808
00:43:19,900 --> 00:43:26,220
you use the same term believe it says

809
00:43:23,950 --> 00:43:29,649
that its maximum frame size and

810
00:43:26,220 --> 00:43:33,669
distinguish the maximum frame size from

811
00:43:29,650 --> 00:43:35,320
the IP and typically the original

812
00:43:33,670 --> 00:43:38,440
definition of them to you I know people

813
00:43:35,320 --> 00:43:42,099
are using boost yep convinced we should

814
00:43:38,440 --> 00:43:45,190
be perpetuating that tend to you is the

815
00:43:42,099 --> 00:43:55,470
maximum size of the IP back that's the

816
00:43:45,190 --> 00:43:57,750
that's the definition of MTU that's my

817
00:43:55,470 --> 00:44:00,160
memory

818
00:43:57,750 --> 00:44:05,800
that's my memories is it's the maximum

819
00:44:00,160 --> 00:44:08,560
IP size and the the use here were in the

820
00:44:05,800 --> 00:44:11,109
document is saying L to UM to you you're

821
00:44:08,560 --> 00:44:14,440
including the L to headers and I think

822
00:44:11,109 --> 00:44:17,799
that's more back again though eager that

823
00:44:14,440 --> 00:44:19,900
terminology max rate size and it may be

824
00:44:17,800 --> 00:44:23,859
helpful I don't know well seems we may

825
00:44:19,900 --> 00:44:25,180
be helpful to use that term I can look

826
00:44:23,859 --> 00:44:27,490
at what's in a teacher of three is wrong

827
00:44:25,180 --> 00:44:29,230
but I mean in to use very standard he

828
00:44:27,490 --> 00:44:33,910
used and it doesn't mean different

829
00:44:29,230 --> 00:44:43,390
things in different places pretty

830
00:44:33,910 --> 00:44:45,098
unambiguous what that is all framing to

831
00:44:43,390 --> 00:44:47,109
you but I think you're moving away from

832
00:44:45,099 --> 00:44:53,500
tears and of course confusion to people

833
00:44:47,109 --> 00:44:59,828
because since we do it already and it

834
00:44:53,500 --> 00:45:02,050
does I think it's whatever we decide it

835
00:44:59,829 --> 00:45:08,290
should be either no worse than what we

836
00:45:02,050 --> 00:45:11,410
do now or less I'd like to see if there

837
00:45:08,290 --> 00:45:16,210
is any artsy anywhere that says L - M -

838
00:45:11,410 --> 00:45:20,830
you deal TV parents should but it

839
00:45:16,210 --> 00:45:23,770
doesn't my observe

840
00:45:20,830 --> 00:45:26,140
as an operator and maybe things have

841
00:45:23,770 --> 00:45:29,430
changed over the last couple of years

842
00:45:26,140 --> 00:45:32,890
where I haven't cared about interface

843
00:45:29,430 --> 00:45:34,089
configuration actually the MTU thing is

844
00:45:32,890 --> 00:45:37,359
very confused

845
00:45:34,090 --> 00:45:41,280
we have been well okay in the

846
00:45:37,360 --> 00:45:45,970
configuration languages it shows up as

847
00:45:41,280 --> 00:45:49,270
far as I remember and there are vendors

848
00:45:45,970 --> 00:45:51,459
that have different of interpretations

849
00:45:49,270 --> 00:45:53,950
between vendors there are vendors that

850
00:45:51,460 --> 00:45:56,830
have different interpretations

851
00:45:53,950 --> 00:46:00,000
regardless depending on the line of

852
00:45:56,830 --> 00:46:04,240
operating system running on the hardware

853
00:46:00,000 --> 00:46:07,240
and then my observation is that the

854
00:46:04,240 --> 00:46:12,520
usual the usual configuration is I

855
00:46:07,240 --> 00:46:17,290
remember it is kind of well okay a rough

856
00:46:12,520 --> 00:46:20,490
estimate anyway because I don't think I

857
00:46:17,290 --> 00:46:24,160
don't think I ever had an MTU

858
00:46:20,490 --> 00:46:27,600
configuration that was actually that was

859
00:46:24,160 --> 00:46:36,250
actually precise for limiting my MPLS

860
00:46:27,600 --> 00:46:43,650
MPLS label headers kind of so I would

861
00:46:36,250 --> 00:46:43,650
see two questions which well okay which

862
00:46:44,040 --> 00:46:52,680
concept is the model to be to address

863
00:46:49,260 --> 00:46:56,020
and yeah well okay

864
00:46:52,680 --> 00:46:59,649
certainly the previous question should

865
00:46:56,020 --> 00:47:02,910
the concept being addressed here appear

866
00:46:59,650 --> 00:47:05,920
to be at a precise one or a more on

867
00:47:02,910 --> 00:47:08,410
mirroring of the existing situation that

868
00:47:05,920 --> 00:47:12,640
well okay we only give a rough number

869
00:47:08,410 --> 00:47:16,720
and let let the ops people someday

870
00:47:12,640 --> 00:47:21,250
perhaps figure out that yes there is one

871
00:47:16,720 --> 00:47:22,839
MPLS label too much too many so there's

872
00:47:21,250 --> 00:47:24,670
there's different people different ways

873
00:47:22,840 --> 00:47:27,580
different people implement this on some

874
00:47:24,670 --> 00:47:30,640
OS is as you say you put give it an L 3

875
00:47:27,580 --> 00:47:32,590
or LT payload MTU and then they add on

876
00:47:30,640 --> 00:47:34,180
some slop and then say anything that's

877
00:47:32,590 --> 00:47:35,650
between this is fine

878
00:47:34,180 --> 00:47:37,960
there's other ones that have a values

879
00:47:35,650 --> 00:47:40,030
like this l2 calculated and they will

880
00:47:37,960 --> 00:47:41,650
check that strictly so any frames above

881
00:47:40,030 --> 00:47:44,800
that size they'll drop it as an ingress

882
00:47:41,650 --> 00:47:47,080
Rob and that there's different

883
00:47:44,800 --> 00:47:48,970
approaches and as you say different

884
00:47:47,080 --> 00:47:51,850
vendors do different ways in different

885
00:47:48,970 --> 00:48:00,819
os's between the same vendors can do it

886
00:47:51,850 --> 00:48:04,120
different ways probably a precise layer

887
00:48:00,820 --> 00:48:08,350
to is the one thing that is conceptually

888
00:48:04,120 --> 00:48:12,009
easy it's going to backfire when it's it

889
00:48:08,350 --> 00:48:14,549
when it's going to run out in the

890
00:48:12,010 --> 00:48:26,140
configuration languages and into ops

891
00:48:14,550 --> 00:48:28,720
okay and it looks like there's two RFC's

892
00:48:26,140 --> 00:48:32,410
both from the same basically set of

893
00:48:28,720 --> 00:48:33,970
authors in the last year or so in that

894
00:48:32,410 --> 00:48:37,960
space that you talked about that you use

895
00:48:33,970 --> 00:48:40,029
the layer two of tu contacts I think for

896
00:48:37,960 --> 00:48:43,020
something that's so general we should

897
00:48:40,030 --> 00:48:46,000
not introduce it here but stick with

898
00:48:43,020 --> 00:48:48,970
figure out whether the previous RFC is

899
00:48:46,000 --> 00:48:51,930
help them to use maximum frame size I

900
00:48:48,970 --> 00:48:54,609
think that's probably the safer term and

901
00:48:51,930 --> 00:48:56,710
it's I'm not gonna say that we're gonna

902
00:48:54,610 --> 00:49:01,150
clarify we're gonna clean up the

903
00:48:56,710 --> 00:49:02,920
confusion because I think there but we

904
00:49:01,150 --> 00:49:06,070
won't make the worse yes nothing else I

905
00:49:02,920 --> 00:49:08,890
think by using the term layer to um to

906
00:49:06,070 --> 00:49:23,740
you that's partly okay and I'm sorry to

907
00:49:08,890 --> 00:49:25,990
see that that one okay so that was all

908
00:49:23,740 --> 00:49:29,080
the what questions are had on that the

909
00:49:25,990 --> 00:49:31,569
southern face this is also working group

910
00:49:29,080 --> 00:49:33,910
last call this one is much shorter in

911
00:49:31,570 --> 00:49:36,190
terms of what I've said to review

912
00:49:33,910 --> 00:49:39,069
support publication and no comments

913
00:49:36,190 --> 00:49:42,250
received as I say possibly that means

914
00:49:39,070 --> 00:49:45,130
that I could flawless but otherwise if

915
00:49:42,250 --> 00:49:46,930
if you interested it'd be useful to have

916
00:49:45,130 --> 00:49:47,710
a review even you're happy with how it

917
00:49:46,930 --> 00:49:50,259
stands now

918
00:49:47,710 --> 00:49:52,180
and this Palace worker Glasgow process I

919
00:49:50,260 --> 00:49:57,700
don't know when the work loss was meant

920
00:49:52,180 --> 00:50:00,730
to finish but we need more reason that

921
00:49:57,700 --> 00:50:02,589
said as Shepherd I'm not going to be

922
00:50:00,730 --> 00:50:03,910
able to look at this until at least next

923
00:50:02,589 --> 00:50:09,400
week

924
00:50:03,910 --> 00:50:11,710
and technically all the comments are

925
00:50:09,400 --> 00:50:14,260
closed you still have some comments that

926
00:50:11,710 --> 00:50:17,650
need addressing before will be ready to

927
00:50:14,260 --> 00:50:19,690
go and there's going to be an IDF last

928
00:50:17,650 --> 00:50:22,780
call that a people can spit comments to

929
00:50:19,690 --> 00:50:26,530
so rather than to be really strict about

930
00:50:22,780 --> 00:50:30,369
it I say if you have comments it's not

931
00:50:26,530 --> 00:50:33,910
too late to send them I will send out

932
00:50:30,369 --> 00:50:35,349
the formal last call being closed when I

933
00:50:33,910 --> 00:50:38,049
started when I have time to start

934
00:50:35,349 --> 00:50:39,869
processing it after the IDF hopefully

935
00:50:38,050 --> 00:50:42,309
you won't get comments after that but

936
00:50:39,869 --> 00:50:45,579
comment whatever it shows up we should

937
00:50:42,309 --> 00:50:47,349
try to address it yep and I'll say it

938
00:50:45,579 --> 00:50:51,940
again there's an opportunity because we

939
00:50:47,349 --> 00:50:54,640
do expect at least one update yes before

940
00:50:51,940 --> 00:50:56,770
we move it forward so we encourage

941
00:50:54,640 --> 00:50:59,140
anyone in the working group who has not

942
00:50:56,770 --> 00:51:01,420
recently read these documents to do so

943
00:50:59,140 --> 00:51:03,720
and if you have comments please send

944
00:51:01,420 --> 00:51:03,720
them

945
00:51:13,370 --> 00:51:20,600
by the way I did it rep on max frame

946
00:51:16,590 --> 00:51:20,600
size it shows up in a lot of documents

947
00:51:38,970 --> 00:51:47,080
Marsten Jeff bar Sonia from Ericsson

948
00:51:42,160 --> 00:51:50,399
this has been a new edition of this

949
00:51:47,080 --> 00:51:50,400
young instance date the draft

950
00:52:01,830 --> 00:52:11,259
yes second so the concept was that we

951
00:52:09,400 --> 00:52:13,750
have many use cases where we want to

952
00:52:11,260 --> 00:52:16,450
document instance data so not the models

953
00:52:13,750 --> 00:52:21,100
themselves but the actual values that

954
00:52:16,450 --> 00:52:23,259
integer strings and we want document

955
00:52:21,100 --> 00:52:25,509
them offline and potentially hand them

956
00:52:23,260 --> 00:52:29,010
out to customers or store them somewhere

957
00:52:25,510 --> 00:52:32,590
these are just some of the use cases I

958
00:52:29,010 --> 00:52:35,110
think there are seven or eight some of

959
00:52:32,590 --> 00:52:38,980
them are detailed in the document and it

960
00:52:35,110 --> 00:52:43,900
was decided that at least will needs a

961
00:52:38,980 --> 00:52:46,380
metadata about the instance data so when

962
00:52:43,900 --> 00:52:48,940
was it produced what models are

963
00:52:46,380 --> 00:52:52,000
documenting some administrative data

964
00:52:48,940 --> 00:52:56,340
like a name a description stuff and we

965
00:52:52,000 --> 00:52:56,340
at least need two formats XML and JSON

966
00:52:58,440 --> 00:53:04,660
so the draft was updated it received

967
00:53:01,960 --> 00:53:11,500
quite a number of comments close to the

968
00:53:04,660 --> 00:53:14,109
last IETF earlier the modules that

969
00:53:11,500 --> 00:53:17,050
define the content were called to target

970
00:53:14,110 --> 00:53:19,450
modules number of people didn't like

971
00:53:17,050 --> 00:53:21,550
that so now it's called content schema

972
00:53:19,450 --> 00:53:23,980
and one or two case where I have to

973
00:53:21,550 --> 00:53:25,660
refer to the individual modules then

974
00:53:23,980 --> 00:53:29,290
it's called content defining yang

975
00:53:25,660 --> 00:53:31,210
modules chain terminology and change

976
00:53:29,290 --> 00:53:35,770
wherever that came up in the inside the

977
00:53:31,210 --> 00:53:40,480
draft some people the yang instance data

978
00:53:35,770 --> 00:53:44,050
set itself has a name which most of the

979
00:53:40,480 --> 00:53:47,440
times is I think is needed some people

980
00:53:44,050 --> 00:53:50,860
insisted that they don't oh don't always

981
00:53:47,440 --> 00:53:54,020
want to have that so it became optional

982
00:53:50,860 --> 00:53:56,870
there were some up this draft is using

983
00:53:54,020 --> 00:53:59,630
the yang data and your yang structure is

984
00:53:56,870 --> 00:54:03,980
that it's now cooled it was updated

985
00:53:59,630 --> 00:54:06,470
according to that draft including yang

986
00:54:03,980 --> 00:54:10,850
trees and all that and there was a

987
00:54:06,470 --> 00:54:13,669
comment that entity tags and last

988
00:54:10,850 --> 00:54:17,380
modified the time stamps that are very

989
00:54:13,670 --> 00:54:20,600
quite useful in in rest conf are

990
00:54:17,380 --> 00:54:22,730
actually encoded in HTTP headers and we

991
00:54:20,600 --> 00:54:25,339
can't use HTTP headers in these two

992
00:54:22,730 --> 00:54:28,490
formats so now they are defined as

993
00:54:25,340 --> 00:54:34,940
metadata and if they are used they can

994
00:54:28,490 --> 00:54:37,189
be encoded as metadata and next so this

995
00:54:34,940 --> 00:54:40,520
is an example of an update the instance

996
00:54:37,190 --> 00:54:42,830
data set a few things are missing like

997
00:54:40,520 --> 00:54:47,180
an XML header because they didn't fit on

998
00:54:42,830 --> 00:54:51,670
the slide they are included in their

999
00:54:47,180 --> 00:54:56,740
examples in the draft but not here so

1000
00:54:51,670 --> 00:54:56,740
here we have yeah

1001
00:54:57,010 --> 00:55:05,420
concerning the previous slide about this

1002
00:55:02,030 --> 00:55:07,550
entity tagging last modified does it

1003
00:55:05,420 --> 00:55:10,310
does it mean that if you have a Content

1004
00:55:07,550 --> 00:55:12,230
schema this content schema has to have

1005
00:55:10,310 --> 00:55:16,610
some modules that they find these

1006
00:55:12,230 --> 00:55:19,580
annotations or no no the the IETF

1007
00:55:16,610 --> 00:55:22,250
instance data yang module defines these

1008
00:55:19,580 --> 00:55:25,850
annotations because I can see of course

1009
00:55:22,250 --> 00:55:28,340
a good use for many other annotation

1010
00:55:25,850 --> 00:55:30,860
that can that are or they available or

1011
00:55:28,340 --> 00:55:35,570
that may be defined in the future so I

1012
00:55:30,860 --> 00:55:38,720
don't really see any need for because as

1013
00:55:35,570 --> 00:55:43,190
you said currently this entity tech and

1014
00:55:38,720 --> 00:55:47,750
last modified are used by by the Raskin

1015
00:55:43,190 --> 00:55:49,940
server as a part of HTTP headers so I

1016
00:55:47,750 --> 00:55:52,280
don't know if somebody wants to define

1017
00:55:49,940 --> 00:55:56,450
it as as an innovation that that's fine

1018
00:55:52,280 --> 00:55:59,300
but in this case this can be the same

1019
00:55:56,450 --> 00:56:02,480
for any other annotation so I would

1020
00:55:59,300 --> 00:56:03,630
suggest really to to require in this

1021
00:56:02,480 --> 00:56:06,150
case to have

1022
00:56:03,630 --> 00:56:09,510
some module defining entity tags and

1023
00:56:06,150 --> 00:56:11,910
last modified s annotations and then you

1024
00:56:09,510 --> 00:56:15,420
can use it normally in the content

1025
00:56:11,910 --> 00:56:17,009
schema and using in the data I think

1026
00:56:15,420 --> 00:56:18,720
they are quite useful bits of

1027
00:56:17,010 --> 00:56:22,850
information and they're just doing a

1028
00:56:18,720 --> 00:56:26,459
module to define these two tags when

1029
00:56:22,850 --> 00:56:29,040
clearly we use them here I don't see the

1030
00:56:26,460 --> 00:56:30,870
reason to split them out so they won't

1031
00:56:29,040 --> 00:56:34,880
harm anyone

1032
00:56:30,870 --> 00:56:38,960
they are obviously useful in my view I

1033
00:56:34,880 --> 00:56:42,570
didn't want to define them because I

1034
00:56:38,960 --> 00:56:44,910
thought the rest comfort handles that

1035
00:56:42,570 --> 00:56:50,010
but as we can't use the restaurants and

1036
00:56:44,910 --> 00:56:51,779
coding solution I like them but it seems

1037
00:56:50,010 --> 00:56:55,590
it's very easy to remove them but I like

1038
00:56:51,780 --> 00:56:59,970
them I go to again other any supporters

1039
00:56:55,590 --> 00:57:02,190
of this this formulation in the draft

1040
00:56:59,970 --> 00:57:05,160
currently so is there any reason why to

1041
00:57:02,190 --> 00:57:10,040
handle these two annotations in in a

1042
00:57:05,160 --> 00:57:14,420
specific way because these are

1043
00:57:10,040 --> 00:57:20,029
well-defined bits of data and they are

1044
00:57:14,420 --> 00:57:22,530
quite basic information for the content

1045
00:57:20,030 --> 00:57:25,830
sometimes they are sometimes they aren't

1046
00:57:22,530 --> 00:57:28,680
I can argue the same way about the

1047
00:57:25,830 --> 00:57:31,110
origin annotation for example it's

1048
00:57:28,680 --> 00:57:33,089
mentioned actually and the origin

1049
00:57:31,110 --> 00:57:38,850
annotation I think is defined somewhere

1050
00:57:33,090 --> 00:57:43,260
else so I don't need to redefine it can

1051
00:57:38,850 --> 00:57:44,910
we ask them what are you saying you

1052
00:57:43,260 --> 00:57:48,420
think that the instant file should not

1053
00:57:44,910 --> 00:57:51,450
have time stamped or into the last

1054
00:57:48,420 --> 00:57:53,880
modified no what I am saying is that we

1055
00:57:51,450 --> 00:57:57,149
should treat these two or other

1056
00:57:53,880 --> 00:58:01,530
annotations in in the same way and the

1057
00:57:57,150 --> 00:58:04,440
proper way and neutral way is to define

1058
00:58:01,530 --> 00:58:07,830
a yang module that defines these

1059
00:58:04,440 --> 00:58:11,850
annotations and include it as as part of

1060
00:58:07,830 --> 00:58:14,730
the content schema for for this instance

1061
00:58:11,850 --> 00:58:16,339
data that's that's the normally

1062
00:58:14,730 --> 00:58:19,550
published

1063
00:58:16,340 --> 00:58:22,160
either in line or in any other way but

1064
00:58:19,550 --> 00:58:25,090
it's it's done just just in a normal

1065
00:58:22,160 --> 00:58:28,940
standard way rather than mentioning it's

1066
00:58:25,090 --> 00:58:30,800
specifically in this human so if I

1067
00:58:28,940 --> 00:58:33,590
understand that it would be an

1068
00:58:30,800 --> 00:58:34,820
annotation right yes see it's a Seuss's

1069
00:58:33,590 --> 00:58:37,670
question of what I was to find in this

1070
00:58:34,820 --> 00:58:42,680
module or a separate module you're

1071
00:58:37,670 --> 00:58:45,440
saying what I'm saying is that I would

1072
00:58:42,680 --> 00:58:47,899
define a module that defines these two

1073
00:58:45,440 --> 00:58:49,910
metadata annotations and to detect and

1074
00:58:47,900 --> 00:58:51,950
last positive oregon as a separate

1075
00:58:49,910 --> 00:58:55,910
module and then i would include this

1076
00:58:51,950 --> 00:59:00,710
module in every in in every content

1077
00:58:55,910 --> 00:59:04,270
schema for the data where this two

1078
00:59:00,710 --> 00:59:07,310
annotations are of any use of course if

1079
00:59:04,270 --> 00:59:12,200
if i have instant data that have no use

1080
00:59:07,310 --> 00:59:14,509
of this last modified probably I would

1081
00:59:12,200 --> 00:59:16,819
avoid having this module him in the

1082
00:59:14,510 --> 00:59:19,550
stream do you see other uses for these

1083
00:59:16,820 --> 00:59:24,320
annotations these specifically these two

1084
00:59:19,550 --> 00:59:26,570
beside the cone ITF instance data are

1085
00:59:24,320 --> 00:59:28,940
you asking about other annotation out

1086
00:59:26,570 --> 00:59:35,390
for these two annotations are you see

1087
00:59:28,940 --> 00:59:37,790
for seeing any other use I don't know it

1088
00:59:35,390 --> 00:59:47,109
could be possibly used in net conf for

1089
00:59:37,790 --> 00:59:47,110
example for me it's easy to remove it

1090
00:59:50,050 --> 00:59:57,080
it's not critical for me as an author

1091
00:59:53,510 --> 01:00:00,380
that we have these on we have these

1092
00:59:57,080 --> 01:00:01,910
annotations in the yank file I am not

1093
01:00:00,380 --> 01:00:03,860
only think at this point to start a new

1094
01:00:01,910 --> 01:00:06,109
draft to do this of course it's not

1095
01:00:03,860 --> 01:00:13,160
critical for me either but I think it's

1096
01:00:06,110 --> 01:00:16,490
a bit I rent it as being sort of

1097
01:00:13,160 --> 01:00:19,220
tunneling the metadata you get from the

1098
01:00:16,490 --> 01:00:22,339
Netcom protocol or rest Tom protocol and

1099
01:00:19,220 --> 01:00:23,959
so you were trying to add a parallel

1100
01:00:22,340 --> 01:00:25,250
piece of information where you know we

1101
01:00:23,960 --> 01:00:27,200
don't have a perp on the wire read

1102
01:00:25,250 --> 01:00:28,970
before that night so it was it was

1103
01:00:27,200 --> 01:00:29,899
parallel to that because that's not what

1104
01:00:28,970 --> 01:00:31,759
I was thinking

1105
01:00:29,900 --> 01:00:33,980
which is quite different from where a

1106
01:00:31,760 --> 01:00:37,130
lot of sewing where it becomes part of

1107
01:00:33,980 --> 01:00:38,630
the content what was for beer intent are

1108
01:00:37,130 --> 01:00:41,030
you thinking more its content or

1109
01:00:38,630 --> 01:00:45,890
metadata is the parallel that I think

1110
01:00:41,030 --> 01:00:54,830
it's it's a Barolo what we have been the

1111
01:00:45,890 --> 01:01:01,640
rest but I also agree with both of you

1112
01:00:54,830 --> 01:01:03,470
is it's not a critical item my

1113
01:01:01,640 --> 01:01:05,839
understanding was that it these

1114
01:01:03,470 --> 01:01:10,250
annotations could be just attached to

1115
01:01:05,840 --> 01:01:13,160
any and in instance noting in the data

1116
01:01:10,250 --> 01:01:16,850
in an array right

1117
01:01:13,160 --> 01:01:18,710
we are quite I want to be liberal what

1118
01:01:16,850 --> 01:01:22,640
can be here so if you want other

1119
01:01:18,710 --> 01:01:26,000
annotations they find wherever yes

1120
01:01:22,640 --> 01:01:28,220
that's also possible of course that was

1121
01:01:26,000 --> 01:01:31,460
my understanding I can have any hang no

1122
01:01:28,220 --> 01:01:35,049
use being part of the content schema so

1123
01:01:31,460 --> 01:01:37,340
why not why not any other annotations

1124
01:01:35,050 --> 01:01:41,030
contributor I think a lot of what you're

1125
01:01:37,340 --> 01:01:45,110
saying is in restaurant on the top-level

1126
01:01:41,030 --> 01:01:49,550
node must have the e-tag and if modified

1127
01:01:45,110 --> 01:01:52,970
tags Internode's may have them and so to

1128
01:01:49,550 --> 01:01:54,470
your point any node may have them and so

1129
01:01:52,970 --> 01:01:55,939
there's that but then separately was the

1130
01:01:54,470 --> 01:01:57,529
question of why do they need to have

1131
01:01:55,940 --> 01:01:59,540
this information in the instance file

1132
01:01:57,530 --> 01:02:01,190
format like who would consume that what

1133
01:01:59,540 --> 01:02:03,200
the use case behind that they would want

1134
01:02:01,190 --> 01:02:04,700
to be with you consuming this data I

1135
01:02:03,200 --> 01:02:07,040
think we should have that discussion on

1136
01:02:04,700 --> 01:02:09,529
the list and and then we'll conclude

1137
01:02:07,040 --> 01:02:10,400
whether or not it's important to define

1138
01:02:09,530 --> 01:02:14,630
the now or later

1139
01:02:10,400 --> 01:02:18,320
I don't know actually who could use it I

1140
01:02:14,630 --> 01:02:20,540
think it's useful information yeah

1141
01:02:18,320 --> 01:02:25,100
the use cases doesn't cover these tags

1142
01:02:20,540 --> 01:02:28,250
at this point but my friend is that we

1143
01:02:25,100 --> 01:02:32,270
needn't really care about use cases for

1144
01:02:28,250 --> 01:02:36,230
these two annotations if somebody does

1145
01:02:32,270 --> 01:02:38,750
have a use for them they can define this

1146
01:02:36,230 --> 01:02:41,390
module defining the annotations and just

1147
01:02:38,750 --> 01:02:42,200
go ahead and and use them so that's fine

1148
01:02:41,390 --> 01:02:46,100
but

1149
01:02:42,200 --> 01:02:48,410
it didn't be an issue for this document

1150
01:02:46,100 --> 01:02:53,839
because it can accommodate any

1151
01:02:48,410 --> 01:02:55,670
annotations yeah it's really the

1152
01:02:53,840 --> 01:02:58,670
questions really that is it reasonable

1153
01:02:55,670 --> 01:03:02,450
to have them defined here or we'll leave

1154
01:02:58,670 --> 01:03:17,510
it to some later later point well if

1155
01:03:02,450 --> 01:03:23,390
that ever happens that's a very very

1156
01:03:17,510 --> 01:03:29,810
small so how many like the approach that

1157
01:03:23,390 --> 01:03:32,270
draft right now interesting we see a few

1158
01:03:29,810 --> 01:03:38,420
hands that were not raised before so I'm

1159
01:03:32,270 --> 01:03:41,300
really confused by Roberts ago I'm not

1160
01:03:38,420 --> 01:03:42,440
sure how important this data is so

1161
01:03:41,300 --> 01:03:44,720
that's the point of view that don't

1162
01:03:42,440 --> 01:03:46,280
really care that much either way the

1163
01:03:44,720 --> 01:03:47,689
moment it just needs to be one sentence

1164
01:03:46,280 --> 01:03:50,570
in the draft saying that these are done

1165
01:03:47,690 --> 01:03:53,090
the same way as restaurant which is

1166
01:03:50,570 --> 01:03:55,190
fairly minimal text I to getting ladders

1167
01:03:53,090 --> 01:03:56,990
point about if we go to do weather why

1168
01:03:55,190 --> 01:03:59,090
don't we do it generally but I still

1169
01:03:56,990 --> 01:04:00,259
also see you could have this line in the

1170
01:03:59,090 --> 01:04:02,300
draft saying this is how they're done

1171
01:04:00,260 --> 01:04:18,020
and it still be done generically for

1172
01:04:02,300 --> 01:04:22,550
anything else even these I'll say it's

1173
01:04:18,020 --> 01:04:26,020
less then the first one none of these

1174
01:04:22,550 --> 01:04:30,410
are statistically significant numbers

1175
01:04:26,020 --> 01:04:33,680
but still it seems like there's a very

1176
01:04:30,410 --> 01:04:38,649
very slight preference of room to stay

1177
01:04:33,680 --> 01:04:43,089
as it is I would say it let's keep it

1178
01:04:38,650 --> 01:04:48,490
but also ask the bank again on the list

1179
01:04:43,090 --> 01:04:51,260
if people have any comments okay on this

1180
01:04:48,490 --> 01:04:53,700
so

1181
01:04:51,260 --> 01:05:06,030
I'm just looking down to see if there's

1182
01:04:53,700 --> 01:05:09,029
anything from from jörgen says Iran

1183
01:05:06,030 --> 01:05:12,030
other Arab support for annotations and

1184
01:05:09,030 --> 01:05:15,450
have doubts that exposing HTTP internal

1185
01:05:12,030 --> 01:05:20,579
metadata is terribly useful I doing the

1186
01:05:15,450 --> 01:05:23,549
instant format is for all agnostic okay

1187
01:05:20,579 --> 01:05:28,020
so to me he just said two things that

1188
01:05:23,550 --> 01:05:31,260
are I don't think that let's say the

1189
01:05:28,020 --> 01:05:33,150
last modified tag is HTTP specific

1190
01:05:31,260 --> 01:05:59,220
that's datastore specific and data

1191
01:05:33,150 --> 01:06:02,280
specific please okay so here is an

1192
01:05:59,220 --> 01:06:04,618
example somewhat wrote an example of how

1193
01:06:02,280 --> 01:06:07,319
this would look like the most

1194
01:06:04,619 --> 01:06:10,500
interesting part here is that we have

1195
01:06:07,319 --> 01:06:12,299
some metadata like the name provision

1196
01:06:10,500 --> 01:06:14,309
description description in the

1197
01:06:12,299 --> 01:06:15,930
description of the instance data set and

1198
01:06:14,309 --> 01:06:19,260
then we have the specification of the

1199
01:06:15,930 --> 01:06:22,319
content schema here we have an example

1200
01:06:19,260 --> 01:06:26,160
where the content schema is specified in

1201
01:06:22,319 --> 01:06:28,410
line first the yang library is used to

1202
01:06:26,160 --> 01:06:32,089
say that the angle I bury module with

1203
01:06:28,410 --> 01:06:35,339
format will be used to specify the

1204
01:06:32,089 --> 01:06:38,790
content schema and then inline content

1205
01:06:35,339 --> 01:06:40,740
schema really specifies that it's the

1206
01:06:38,790 --> 01:06:47,279
Netcom faecium module that we are

1207
01:06:40,740 --> 01:06:50,399
handling and this some more terrible it

1208
01:06:47,280 --> 01:06:52,260
was nicer early originally so this is

1209
01:06:50,400 --> 01:06:58,290
the content data that's the really thing

1210
01:06:52,260 --> 01:06:59,640
that we wanted to communicate you can I

1211
01:06:58,290 --> 01:07:02,880
don't know what happened with the site

1212
01:06:59,640 --> 01:07:05,480
anyway can you skip back one more can

1213
01:07:02,880 --> 01:07:05,480
you skip back

1214
01:07:06,410 --> 01:07:13,350
okay so never mind

1215
01:07:10,320 --> 01:07:15,440
here we okay here we have this in line

1216
01:07:13,350 --> 01:07:19,020
from inline content schema definition

1217
01:07:15,440 --> 01:07:21,810
there is also a possibility to just put

1218
01:07:19,020 --> 01:07:23,910
a reference to the content schema if you

1219
01:07:21,810 --> 01:07:25,520
don't want to repeat it for one in the

1220
01:07:23,910 --> 01:07:29,129
case that you have I don't know

1221
01:07:25,520 --> 01:07:31,560
diagnostic state data every five seconds

1222
01:07:29,130 --> 01:07:34,590
then you don't want the converse schemer

1223
01:07:31,560 --> 01:07:37,110
repeated every time and that's it

1224
01:07:34,590 --> 01:07:42,110
and I think I would like to bring this

1225
01:07:37,110 --> 01:07:42,110
to work group last calls but I was like

1226
01:07:45,050 --> 01:07:50,790
can we have that one question one

1227
01:07:48,810 --> 01:07:52,710
non-critical question as we agreed with

1228
01:07:50,790 --> 01:08:09,390
low down on the earliest part of the

1229
01:07:52,710 --> 01:08:15,359
last goal another question regarding

1230
01:08:09,390 --> 01:08:20,370
this inline specification this seems you

1231
01:08:15,359 --> 01:08:23,309
are now using the new yang library but I

1232
01:08:20,370 --> 01:08:26,040
think that the idea is not to define

1233
01:08:23,310 --> 01:08:30,600
like data stores and things like that

1234
01:08:26,040 --> 01:08:32,310
that you only really need this module

1235
01:08:30,600 --> 01:08:36,089
set yes

1236
01:08:32,310 --> 01:08:38,850
so does it mean that you can use other

1237
01:08:36,089 --> 01:08:42,420
parts of the nyra here or is it really

1238
01:08:38,850 --> 01:08:46,350
restricted to this module surface you

1239
01:08:42,420 --> 01:08:49,830
can use the yang library in the cone in

1240
01:08:46,350 --> 01:08:56,390
the content part and here you could have

1241
01:08:49,830 --> 01:08:56,390
parts for deviations and for features

1242
01:08:56,569 --> 01:09:03,900
you I didn't actually put in text saying

1243
01:09:00,569 --> 01:09:07,140
that you should not have text about I

1244
01:09:03,899 --> 01:09:13,559
don't know datastore lists but they are

1245
01:09:07,140 --> 01:09:15,569
kind of meaningless and unless the data

1246
01:09:13,560 --> 01:09:17,339
stores can be meaningful if you specify

1247
01:09:15,569 --> 01:09:17,850
which data store you are putting it

1248
01:09:17,339 --> 01:09:21,120
which part

1249
01:09:17,850 --> 01:09:23,430
of the yang library I think one question

1250
01:09:21,120 --> 01:09:29,010
is whether we really need to have this

1251
01:09:23,430 --> 01:09:32,910
flexibility of specifying different yang

1252
01:09:29,010 --> 01:09:35,550
library revisions in Olin different ways

1253
01:09:32,910 --> 01:09:40,139
of doing that because possibly we could

1254
01:09:35,550 --> 01:09:42,540
use the old yang my brain everywhere and

1255
01:09:40,140 --> 01:09:45,359
this this would do probably for this

1256
01:09:42,540 --> 01:09:49,019
person purposefully also agree with you

1257
01:09:45,359 --> 01:09:51,450
except that in the last round I got

1258
01:09:49,020 --> 01:09:53,820
those explicit statement that you must

1259
01:09:51,450 --> 01:09:55,889
use the new young library and even there

1260
01:09:53,819 --> 01:10:00,420
that it should be possible to use

1261
01:09:55,890 --> 01:10:03,630
something else beside the angle ivory so

1262
01:10:00,420 --> 01:10:04,380
I was specifically asked for being

1263
01:10:03,630 --> 01:10:06,360
flexible

1264
01:10:04,380 --> 01:10:08,490
one more thing that's not visible in

1265
01:10:06,360 --> 01:10:10,980
this example that here in the inline

1266
01:10:08,490 --> 01:10:13,019
spec you might have other modules one

1267
01:10:10,980 --> 01:10:15,450
thing that immediately comes to mind is

1268
01:10:13,020 --> 01:10:18,260
the yank versioning where you could

1269
01:10:15,450 --> 01:10:21,349
which augments the angle I bury with

1270
01:10:18,260 --> 01:10:23,580
version label that could be useful here

1271
01:10:21,350 --> 01:10:27,150
but I was asked to put in the

1272
01:10:23,580 --> 01:10:29,790
flexibility and it doesn't disturb it

1273
01:10:27,150 --> 01:10:32,700
seems to add a lot of complexities as

1274
01:10:29,790 --> 01:10:37,860
you just said and in my opinion I am not

1275
01:10:32,700 --> 01:10:40,559
sure if it's its complexity on the

1276
01:10:37,860 --> 01:10:42,660
mailing list there was a I don't know I

1277
01:10:40,560 --> 01:10:45,000
agree that it's not the complexity is

1278
01:10:42,660 --> 01:10:47,250
bit too much but I was explicitly asked

1279
01:10:45,000 --> 01:10:49,380
when the mailing list here again and

1280
01:10:47,250 --> 01:10:54,990
maybe some others that we should have

1281
01:10:49,380 --> 01:11:01,040
this flexibility reply to it you know

1282
01:10:54,990 --> 01:11:07,940
raising the issue that a lot of that I

1283
01:11:01,040 --> 01:11:07,940
think yes I wanted yes I don't want it

1284
01:11:08,060 --> 01:11:14,730
Bob Wilson Cisco so I think almost three

1285
01:11:12,600 --> 01:11:16,650
choices is what I prefer one is a very

1286
01:11:14,730 --> 01:11:18,690
simple one which is just this is the

1287
01:11:16,650 --> 01:11:20,940
list of the modules and their revisions

1288
01:11:18,690 --> 01:11:23,400
and that defines the schema so without

1289
01:11:20,940 --> 01:11:25,500
even needing the inline content schema

1290
01:11:23,400 --> 01:11:27,330
just that list there's one choice the

1291
01:11:25,500 --> 01:11:29,970
second one is what you've done here

1292
01:11:27,330 --> 01:11:31,110
where you specify the what this schema

1293
01:11:29,970 --> 01:11:32,610
is

1294
01:11:31,110 --> 01:11:35,219
in that way and the third one is a

1295
01:11:32,610 --> 01:11:36,990
remote schema I just see that here if

1296
01:11:35,220 --> 01:11:39,300
you just want to return the data for one

1297
01:11:36,990 --> 01:11:42,929
or two young modules listing them in

1298
01:11:39,300 --> 01:11:44,820
line without with having less metadata

1299
01:11:42,930 --> 01:11:47,520
boilerplate at the top of the file is

1300
01:11:44,820 --> 01:11:50,099
probably beneficial but xx you tend to

1301
01:11:47,520 --> 01:11:53,400
read these I don't agree with your first

1302
01:11:50,100 --> 01:11:55,490
method sorry because this is a simple

1303
01:11:53,400 --> 01:11:58,349
case you need to have a place for

1304
01:11:55,490 --> 01:12:01,620
features supportive features you need to

1305
01:11:58,350 --> 01:12:04,470
have a place for deviations and you also

1306
01:12:01,620 --> 01:12:06,630
need to at least specify which version

1307
01:12:04,470 --> 01:12:10,380
of the yang library you are using or

1308
01:12:06,630 --> 01:12:14,810
which which that's a you say that you

1309
01:12:10,380 --> 01:12:20,700
just want the list yeah you want to say

1310
01:12:14,810 --> 01:12:23,190
what what who defines or what defines

1311
01:12:20,700 --> 01:12:25,349
the format of that list so theists ways

1312
01:12:23,190 --> 01:12:28,740
we already have one in yang library wide

1313
01:12:25,350 --> 01:12:30,960
define a new one but then you have might

1314
01:12:28,740 --> 01:12:33,300
have multiple versions of that you need

1315
01:12:30,960 --> 01:12:36,390
to them so I'm not saying take away what

1316
01:12:33,300 --> 01:12:38,190
you have here I'm saying add add another

1317
01:12:36,390 --> 01:12:39,720
third option that's a simpler version of

1318
01:12:38,190 --> 01:12:41,910
it that doesn't worry about deviations

1319
01:12:39,720 --> 01:12:43,800
doesn't worry about features it's just

1320
01:12:41,910 --> 01:12:45,480
the data that you're uploading you don't

1321
01:12:43,800 --> 01:12:47,070
you could potentially just have the

1322
01:12:45,480 --> 01:12:50,940
features enabled by default

1323
01:12:47,070 --> 01:12:54,240
I think deviations and features are very

1324
01:12:50,940 --> 01:12:56,309
but I I think they are needed you still

1325
01:12:54,240 --> 01:12:58,800
express them using this format it's just

1326
01:12:56,310 --> 01:13:00,600
having my questions really is on for

1327
01:12:58,800 --> 01:13:03,210
some files if you have this boilerplate

1328
01:13:00,600 --> 01:13:04,920
at the top of every file is that a good

1329
01:13:03,210 --> 01:13:07,920
thing or not is it is it that actually

1330
01:13:04,920 --> 01:13:10,050
is just noise and for the vast majority

1331
01:13:07,920 --> 01:13:11,820
of cases that if you're just returning a

1332
01:13:10,050 --> 01:13:15,660
couple of modules that you're doing it

1333
01:13:11,820 --> 01:13:19,799
quite verbose way you might gain I don't

1334
01:13:15,660 --> 01:13:21,720
know five lines but for but with the

1335
01:13:19,800 --> 01:13:24,810
complexity that you have add some more

1336
01:13:21,720 --> 01:13:27,450
modules and then if you have deviations

1337
01:13:24,810 --> 01:13:30,900
or features then you had to add come

1338
01:13:27,450 --> 01:13:36,809
back to this one so yeah you could add

1339
01:13:30,900 --> 01:13:40,710
more I don't think it's needed just for

1340
01:13:36,810 --> 01:13:41,900
a record I also think the new who are

1341
01:13:40,710 --> 01:13:45,920
the me

1342
01:13:41,900 --> 01:13:47,960
I also think the new young wire is

1343
01:13:45,920 --> 01:13:51,440
overly complex for the purpose of

1344
01:13:47,960 --> 01:13:53,660
creating an instance data file and you

1345
01:13:51,440 --> 01:13:57,759
sound like you were told on the lists I

1346
01:13:53,660 --> 01:13:59,660
think no one actually thinks that

1347
01:13:57,760 --> 01:14:01,430
instance deadfall should contain

1348
01:13:59,660 --> 01:14:03,830
multiple stores I would rather have

1349
01:14:01,430 --> 01:14:08,180
multiple files containing multiple data

1350
01:14:03,830 --> 01:14:11,470
stores so it's more like atomic and it's

1351
01:14:08,180 --> 01:14:14,390
not overly complex but this discussion

1352
01:14:11,470 --> 01:14:16,850
against having it done this way there

1353
01:14:14,390 --> 01:14:20,210
was a discussion and more people should

1354
01:14:16,850 --> 01:14:22,850
have contributed to keeping a simple

1355
01:14:20,210 --> 01:14:24,950
single data store my way now we have a

1356
01:14:22,850 --> 01:14:28,190
new young wire which is obsoleting the

1357
01:14:24,950 --> 01:14:30,170
simple you need data store one so it's

1358
01:14:28,190 --> 01:14:33,950
very difficult we are going to use the

1359
01:14:30,170 --> 01:14:35,480
old one to make new RFC's it is going to

1360
01:14:33,950 --> 01:14:39,530
create even more confusion

1361
01:14:35,480 --> 01:14:40,669
so I regret not having more support when

1362
01:14:39,530 --> 01:14:43,880
there was a discussion that we should

1363
01:14:40,670 --> 01:14:45,800
keep the same young library and use

1364
01:14:43,880 --> 01:14:49,250
different mechanisms to achieve the goal

1365
01:14:45,800 --> 01:14:51,920
it does then it was only me and maybe on

1366
01:14:49,250 --> 01:14:54,140
the Beermen who was opposing and

1367
01:14:51,920 --> 01:14:56,450
everyone was completing to that so now

1368
01:14:54,140 --> 01:15:02,930
he just had to use the new young library

1369
01:14:56,450 --> 01:15:05,330
I guess I don't think while agree I

1370
01:15:02,930 --> 01:15:07,130
would have loved to have a more simple

1371
01:15:05,330 --> 01:15:11,600
solution I don't think these five lines

1372
01:15:07,130 --> 01:15:15,380
are worth to discuss one question what

1373
01:15:11,600 --> 01:15:20,360
Rob said previously in my opinion if

1374
01:15:15,380 --> 01:15:24,560
prop writes a module with a IDF behind

1375
01:15:20,360 --> 01:15:28,339
module list and then insert this module

1376
01:15:24,560 --> 01:15:30,620
into this in line spectrum the simplest

1377
01:15:28,340 --> 01:15:33,830
of modules without deviations could be

1378
01:15:30,620 --> 01:15:40,220
possibly used given this flexibility

1379
01:15:33,830 --> 01:15:42,800
here right so you still need at least

1380
01:15:40,220 --> 01:15:47,380
the revision yeah we could add the third

1381
01:15:42,800 --> 01:15:50,240
method if that's so yes I've actually

1382
01:15:47,380 --> 01:15:55,200
written such a draft escucha ITF young

1383
01:15:50,240 --> 01:15:56,910
packages we could add the fourth method

1384
01:15:55,200 --> 01:16:02,820
because there's always the matter that

1385
01:15:56,910 --> 01:16:06,690
the receiver knows what what is the

1386
01:16:02,820 --> 01:16:09,570
content schema in you do to some offline

1387
01:16:06,690 --> 01:16:11,160
method or some tech implementation

1388
01:16:09,570 --> 01:16:14,190
specific method which I think will be

1389
01:16:11,160 --> 01:16:31,139
quite common as well but if you want we

1390
01:16:14,190 --> 01:16:33,450
can add the for chatter bit I just like

1391
01:16:31,140 --> 01:16:35,370
the chair ask the chance to get to some

1392
01:16:33,450 --> 01:16:36,990
decision on these because none of them

1393
01:16:35,370 --> 01:16:39,450
you are critical and we are going back

1394
01:16:36,990 --> 01:16:42,230
and forth and please help me with to get

1395
01:16:39,450 --> 01:16:42,230
decision

1396
01:17:08,210 --> 01:17:15,409
well welcome everyone my name is Hugh

1397
01:17:11,489 --> 01:17:18,799
I'm here to discuss February for setting

1398
01:17:15,409 --> 01:17:18,799
you next

1399
01:17:25,990 --> 01:17:31,639
so what is this job about actually a day

1400
01:17:29,090 --> 01:17:34,340
job to actually define a new IP say we

1401
01:17:31,640 --> 01:17:37,430
call the factory reset a PC and we also

1402
01:17:34,340 --> 01:17:39,950
introduced a new faculty for the data

1403
01:17:37,430 --> 01:17:43,240
store it is read-only data store and

1404
01:17:39,950 --> 01:17:46,190
obviously no data store actually we

1405
01:17:43,240 --> 01:17:48,550
typically use cases we use these faculty

1406
01:17:46,190 --> 01:17:52,129
for all settings we can use these in the

1407
01:17:48,550 --> 01:17:57,050
zero-touch conversion stage also in some

1408
01:17:52,130 --> 01:17:59,450
cases you may actually major the each

1409
01:17:57,050 --> 01:18:03,230
error on the conversion you can use

1410
01:17:59,450 --> 01:18:06,679
leverage it is reset kappa reset a piece

1411
01:18:03,230 --> 01:18:13,519
a to reset the device to the fact

1412
01:18:06,680 --> 01:18:16,910
default state so the current status

1413
01:18:13,520 --> 01:18:19,700
actually this chapter actually we have

1414
01:18:16,910 --> 01:18:25,450
two code option for this job and we

1415
01:18:19,700 --> 01:18:30,170
resolve summary issue actually I sing in

1416
01:18:25,450 --> 01:18:34,490
so the changes we made actually in this

1417
01:18:30,170 --> 01:18:36,350
draft actually in in a flourishing they

1418
01:18:34,490 --> 01:18:38,750
were when working actually my issue is

1419
01:18:36,350 --> 01:18:41,210
about terminology the young server

1420
01:18:38,750 --> 01:18:45,250
waited fun people have some concerns so

1421
01:18:41,210 --> 01:18:47,630
we actually try to reuse the existing

1422
01:18:45,250 --> 01:18:53,720
terminology like a server they found in

1423
01:18:47,630 --> 01:18:59,240
the MB architecture ii mentioned major

1424
01:18:53,720 --> 01:19:03,800
change actually is about how so how

1425
01:18:59,240 --> 01:19:06,740
these factory reset apply to the data

1426
01:19:03,800 --> 01:19:08,930
store actually we we can apply all the

1427
01:19:06,740 --> 01:19:11,330
data store but people have some consent

1428
01:19:08,930 --> 01:19:14,360
maybe we should you know take out that

1429
01:19:11,330 --> 01:19:14,720
candidate so we add some text to clarify

1430
01:19:14,360 --> 01:19:19,250
this

1431
01:19:14,720 --> 01:19:23,180
and so in second for adoption actually

1432
01:19:19,250 --> 01:19:26,500
we also raise some of issues and in

1433
01:19:23,180 --> 01:19:30,980
versions there were two actually the may

1434
01:19:26,500 --> 01:19:34,670
there's a two issue we try to resolve

1435
01:19:30,980 --> 01:19:37,099
one is the security issues and we make

1436
01:19:34,670 --> 01:19:39,860
some proposed and so we were to Scotty

1437
01:19:37,100 --> 01:19:44,060
so as the open issue and otherwise

1438
01:19:39,860 --> 01:19:46,429
the copy config actually this is we

1439
01:19:44,060 --> 01:19:49,610
actually extend is a copy config

1440
01:19:46,429 --> 01:19:53,030
operation to support security for

1441
01:19:49,610 --> 01:19:57,139
setting but is not you know a beautiful

1442
01:19:53,030 --> 01:20:01,900
set in specific so we so the result is

1443
01:19:57,139 --> 01:20:05,750
we remove these copy config actually so

1444
01:20:01,900 --> 01:20:07,369
so this just to reflect the discussion

1445
01:20:05,750 --> 01:20:10,850
on the many needs that we already know

1446
01:20:07,369 --> 01:20:13,179
remove these copy configure and as I

1447
01:20:10,850 --> 01:20:18,230
mention actually diseases and not the

1448
01:20:13,179 --> 01:20:21,280
factory before the specific is so so

1449
01:20:18,230 --> 01:20:25,218
also we actually release the sev several

1450
01:20:21,280 --> 01:20:27,320
MDA protocol like American for MT and

1451
01:20:25,219 --> 01:20:29,989
the rest come dear support actually it

1452
01:20:27,320 --> 01:20:33,619
doesn't define the kaabah config like

1453
01:20:29,989 --> 01:20:35,769
RPC actually so but it will be useful to

1454
01:20:33,619 --> 01:20:38,989
have geta configured because we have

1455
01:20:35,770 --> 01:20:42,409
faculty for data stall so it's it would

1456
01:20:38,989 --> 01:20:45,199
be useful to to have the configure to to

1457
01:20:42,409 --> 01:20:48,849
to allow get a configure to you know get

1458
01:20:45,199 --> 01:20:51,559
it access to these data store so I

1459
01:20:48,850 --> 01:20:55,070
sounded the the many nice discussing we

1460
01:20:51,560 --> 01:20:57,230
actually remove the copy configure

1461
01:20:55,070 --> 01:21:00,080
accession from the module in the job

1462
01:20:57,230 --> 01:21:02,709
actually we defer these to the context

1463
01:21:00,080 --> 01:21:02,710
that your choice

1464
01:21:03,880 --> 01:21:13,810
so the second issue is about the

1465
01:21:08,150 --> 01:21:17,210
security issue and because for the reset

1466
01:21:13,810 --> 01:21:20,030
our pcs and many focused actually to

1467
01:21:17,210 --> 01:21:24,350
reset the device to the factory default

1468
01:21:20,030 --> 01:21:27,170
state but also it will be useful you

1469
01:21:24,350 --> 01:21:29,750
know to use these up easy to clean our

1470
01:21:27,170 --> 01:21:32,960
the fire we started to notice some of

1471
01:21:29,750 --> 01:21:37,480
the software process or you also can set

1472
01:21:32,960 --> 01:21:40,219
the security password or data to the

1473
01:21:37,480 --> 01:21:42,230
default values but all of these

1474
01:21:40,219 --> 01:21:45,530
information may be sensitive so we need

1475
01:21:42,230 --> 01:21:48,949
to actually issue the SSL relevant

1476
01:21:45,530 --> 01:21:51,829
discussion Adam Kaufman in is related to

1477
01:21:48,949 --> 01:21:57,320
the Crystal draft actually

1478
01:21:51,829 --> 01:21:59,509
but we we sink yeah the cognitive or set

1479
01:21:57,320 --> 01:22:04,579
they stock could be useful for the

1480
01:21:59,510 --> 01:22:07,820
pistol draft and but we try to resolve

1481
01:22:04,579 --> 01:22:10,249
these conditions so the proposal we that

1482
01:22:07,820 --> 01:22:13,630
we propose a some text we can use some

1483
01:22:10,249 --> 01:22:16,999
encryption or a sign mechanism also

1484
01:22:13,630 --> 01:22:19,099
talked with our Khalsa we think maybe we

1485
01:22:16,999 --> 01:22:21,590
should you know around the access

1486
01:22:19,099 --> 01:22:24,469
control rules to to protect the

1487
01:22:21,590 --> 01:22:27,340
sensitive data so that's what way you

1488
01:22:24,469 --> 01:22:30,980
have but we are not a security experts

1489
01:22:27,340 --> 01:22:36,980
we want to hear if any additional import

1490
01:22:30,980 --> 01:22:39,079
for these are Joe Clark Cisco um any

1491
01:22:36,980 --> 01:22:42,079
input on any of these bullets are just

1492
01:22:39,079 --> 01:22:44,360
the last one last one

1493
01:22:42,079 --> 01:22:46,159
okay I don't have a input on the last

1494
01:22:44,360 --> 01:22:49,070
one but I really don't like bullet

1495
01:22:46,159 --> 01:22:52,549
number two the way it's defined in the

1496
01:22:49,070 --> 01:22:56,509
draft I could have my device reboot if I

1497
01:22:52,550 --> 01:23:00,050
set this RPC that as an opera

1498
01:22:56,510 --> 01:23:02,840
squishy I would rather these things be

1499
01:23:00,050 --> 01:23:04,699
more atomic like I use the RPC to reset

1500
01:23:02,840 --> 01:23:18,139
the config and then I might send another

1501
01:23:04,699 --> 01:23:20,089
RPC to reboot the device oh okay let me

1502
01:23:18,139 --> 01:23:24,199
restate I would rather there be some

1503
01:23:20,090 --> 01:23:26,809
more definition around this so that I

1504
01:23:24,199 --> 01:23:30,799
know what is is necessarily going to

1505
01:23:26,809 --> 01:23:33,530
happen and yeah it might be that I only

1506
01:23:30,800 --> 01:23:36,380
want to factory reset the startup and

1507
01:23:33,530 --> 01:23:42,650
then send an RPC to reboot the device as

1508
01:23:36,380 --> 01:23:46,960
an example but angle Ericsson has a

1509
01:23:42,650 --> 01:23:49,670
co-author about the last point that

1510
01:23:46,960 --> 01:23:51,710
factory default might contain security

1511
01:23:49,670 --> 01:23:54,170
data I think that's actually not a

1512
01:23:51,710 --> 01:23:56,269
question about the factory default data

1513
01:23:54,170 --> 01:23:59,059
store because the same data will be

1514
01:23:56,269 --> 01:24:02,360
available in running after reset so it's

1515
01:23:59,059 --> 01:24:06,329
the responsibility of the data model to

1516
01:24:02,360 --> 01:24:10,978
somehow protect this the security

1517
01:24:06,329 --> 01:24:14,179
critical items and this that man this

1518
01:24:10,979 --> 01:24:17,670
should be the same in running and and

1519
01:24:14,179 --> 01:24:21,449
fact factory default data store so I

1520
01:24:17,670 --> 01:24:26,489
don't see why this is specific problem

1521
01:24:21,449 --> 01:24:29,400
to this draft can't as a contributor and

1522
01:24:26,489 --> 01:24:33,688
also author of the keystore draft work

1523
01:24:29,400 --> 01:24:36,570
this is being discussed so the the

1524
01:24:33,689 --> 01:24:38,729
actual data lives in operational but its

1525
01:24:36,570 --> 01:24:40,409
desire it would need to be promoted to

1526
01:24:38,729 --> 01:24:43,380
configuration in order to be with

1527
01:24:40,409 --> 01:24:44,400
referenced by configuration and of

1528
01:24:43,380 --> 01:24:47,189
course it's the in shipped from

1529
01:24:44,400 --> 01:24:52,259
manufacturing it'd be ideal for to be in

1530
01:24:47,189 --> 01:24:54,179
the factory default in store or I mean

1531
01:24:52,260 --> 01:24:55,679
perhaps startup but all right the

1532
01:24:54,179 --> 01:24:57,570
problem startup is it could be deleted

1533
01:24:55,679 --> 01:24:58,860
thereafter I mean it could be a choice

1534
01:24:57,570 --> 01:25:01,530
what are the other thing it'd be a

1535
01:24:58,860 --> 01:25:04,409
convenience it's not a security issue

1536
01:25:01,530 --> 01:25:06,209
though because the data would if it's

1537
01:25:04,409 --> 01:25:06,989
hidden it's hidden so that's not a

1538
01:25:06,209 --> 01:25:08,729
pretty issue

1539
01:25:06,989 --> 01:25:10,860
and it's encrypted encrypted that's my

1540
01:25:08,729 --> 01:25:18,059
situation okay so it's not a security

1541
01:25:10,860 --> 01:25:21,598
issue per se okay Jim Carrey Nokia so

1542
01:25:18,059 --> 01:25:25,380
two points one is kind of agree with the

1543
01:25:21,599 --> 01:25:27,929
last speaker of the the fact that you

1544
01:25:25,380 --> 01:25:29,429
know the factory default I don't

1545
01:25:27,929 --> 01:25:30,900
understand security issue because I

1546
01:25:29,429 --> 01:25:32,639
would understand that when we reset

1547
01:25:30,900 --> 01:25:34,650
something the factory default the

1548
01:25:32,639 --> 01:25:37,920
factory information is going to be used

1549
01:25:34,650 --> 01:25:41,429
to populate the startup right you know

1550
01:25:37,920 --> 01:25:44,550
that's effectively what's happening to

1551
01:25:41,429 --> 01:25:46,170
the other question about the options and

1552
01:25:44,550 --> 01:25:48,229
another protocols that we've done this

1553
01:25:46,170 --> 01:25:53,099
with and we've done factory resets for

1554
01:25:48,229 --> 01:25:55,979
CPEs for going on 20 years now right and

1555
01:25:53,099 --> 01:25:58,199
in a standard way we we actually allow

1556
01:25:55,979 --> 01:26:01,050
for the other things that you're talking

1557
01:25:58,199 --> 01:26:02,400
about cleaning up files or restarting to

1558
01:26:01,050 --> 01:26:04,559
know particularly we starting to notice

1559
01:26:02,400 --> 01:26:07,228
simply being options that go into the

1560
01:26:04,559 --> 01:26:09,050
RPC so you just simply say hey look I'm

1561
01:26:07,229 --> 01:26:15,239
going to do a factory reset by the way

1562
01:26:09,050 --> 01:26:18,030
restart this thing when you're done to

1563
01:26:15,239 --> 01:26:18,869
answer the question Tim answer your

1564
01:26:18,030 --> 01:26:20,459
question of why

1565
01:26:18,869 --> 01:26:22,709
a security issue I think something

1566
01:26:20,459 --> 01:26:25,050
that's a little different here is this

1567
01:26:22,709 --> 01:26:28,559
this has to be done completely remotely

1568
01:26:25,050 --> 01:26:31,800
and in many of the factory reset options

1569
01:26:28,559 --> 01:26:34,829
that come up equipment you have to do it

1570
01:26:31,800 --> 01:26:36,899
locally you can't do it over your

1571
01:26:34,829 --> 01:26:38,099
network management wait there's

1572
01:26:36,899 --> 01:26:40,909
something dual out network management

1573
01:26:38,099 --> 01:26:43,919
but there's some systems that don't and

1574
01:26:40,909 --> 01:26:48,148
there's definitely security implications

1575
01:26:43,919 --> 01:26:51,090
if allowing you remote access to reset a

1576
01:26:48,149 --> 01:26:53,159
device a network device sure so even

1577
01:26:51,090 --> 01:26:55,050
with you reset the network device

1578
01:26:53,159 --> 01:26:58,619
factory reset again we've done this for

1579
01:26:55,050 --> 01:27:03,030
billions right so it's not like this is

1580
01:26:58,619 --> 01:27:05,280
new right so the the the information

1581
01:27:03,030 --> 01:27:15,599
that's put in the manufacturing store

1582
01:27:05,280 --> 01:27:24,449
right is is then you certainly ok I'm

1583
01:27:15,599 --> 01:27:25,829
sorry yes damn Bogdanovich TPM in the

1584
01:27:24,449 --> 01:27:28,289
trusted computing you know they're

1585
01:27:25,829 --> 01:27:30,329
they're solving those problems and I

1586
01:27:28,289 --> 01:27:33,119
know many hardware vendors are putting

1587
01:27:30,329 --> 01:27:34,648
TP and modules inside their hardware so

1588
01:27:33,119 --> 01:27:39,058
that helps you know somehow solve some

1589
01:27:34,649 --> 01:27:40,949
of those problems so kenta's contributor

1590
01:27:39,059 --> 01:27:42,749
and again i'm discuss the keystore craft

1591
01:27:40,949 --> 01:27:45,209
and then that how important group indeed

1592
01:27:42,749 --> 01:27:47,699
that isn't where or expecting the TPMS

1593
01:27:45,209 --> 01:27:50,699
will be used to protect the the keys

1594
01:27:47,699 --> 01:27:52,169
ship for manufacturing that's exactly

1595
01:27:50,699 --> 01:27:58,289
what was discussed in this morning's

1596
01:27:52,169 --> 01:28:00,329
presentation ok Rob Wilson Cisco is just

1597
01:27:58,289 --> 01:28:02,009
an ad for the our pcs if there's

1598
01:28:00,329 --> 01:28:05,340
security concerns with that surely knock

1599
01:28:02,010 --> 01:28:07,559
on wood discover programs as controls of

1600
01:28:05,340 --> 01:28:08,789
our factory reset all to see so that

1601
01:28:07,559 --> 01:28:15,869
means anything particularly differently

1602
01:28:08,789 --> 01:28:18,239
oh I don't have a response to you I just

1603
01:28:15,869 --> 01:28:24,898
have another addition that's in the Mike

1604
01:28:18,239 --> 01:28:28,079
my queue behind you so and he said I

1605
01:28:24,899 --> 01:28:28,980
agree that the system restart I our PC

1606
01:28:28,079 --> 01:28:30,540
and Mike

1607
01:28:28,980 --> 01:28:34,549
and yang should be argument if it's to

1608
01:28:30,540 --> 01:28:34,550
the new or receiving 40 steps

1609
01:28:42,660 --> 01:28:47,760
right for system restart actually this

1610
01:28:46,200 --> 01:28:54,599
is something we already discussed

1611
01:28:47,760 --> 01:28:57,230
actually we and I think the the property

1612
01:28:54,600 --> 01:29:00,270
there are different them I'm not sure

1613
01:28:57,230 --> 01:29:12,330
whether we should do the argument from

1614
01:29:00,270 --> 01:29:14,820
the system restore both Francisco

1615
01:29:12,330 --> 01:29:16,140
assigned liked what Tim said I think

1616
01:29:14,820 --> 01:29:18,630
that made a lot sense to me that you

1617
01:29:16,140 --> 01:29:20,100
just have an option to say also white

1618
01:29:18,630 --> 01:29:23,250
files and another option that says

1619
01:29:20,100 --> 01:29:25,050
restart the device if if that's that

1620
01:29:23,250 --> 01:29:26,580
seems fairly easy to define that if you

1621
01:29:25,050 --> 01:29:29,390
don't specify that the device isn't

1622
01:29:26,580 --> 01:29:29,390
restarted

1623
01:29:36,530 --> 01:29:42,550
okay I think that's the I think probably

1624
01:29:40,520 --> 01:29:45,470
we will resolve some real issue and

1625
01:29:42,550 --> 01:29:47,830
probably which you asked to move to the

1626
01:29:45,470 --> 01:29:47,830
next step

1627
01:30:22,320 --> 01:30:29,290
Alex yes hello can you give me yes you

1628
01:30:28,570 --> 01:30:32,620
sound great

1629
01:30:29,290 --> 01:30:40,260
okay Nixon okay yeah just a quick update

1630
01:30:32,620 --> 01:30:43,750
on the comparison of an MBA a co-op

1631
01:30:40,260 --> 01:30:46,090
again reminder this Beijing this the

1632
01:30:43,750 --> 01:30:48,880
center of this tariff is RPC did it well

1633
01:30:46,090 --> 01:30:51,370
prepare an MVA data form and we're

1634
01:30:48,880 --> 01:30:53,710
basing the idea is that you can this

1635
01:30:51,370 --> 01:30:56,410
provides a view tool to report all the

1636
01:30:53,710 --> 01:30:58,930
differences between data stores without

1637
01:30:56,410 --> 01:31:01,930
eating two upload the entire thing in

1638
01:30:58,930 --> 01:31:04,030
private apply application of this

1639
01:31:01,930 --> 01:31:06,630
opposes r2 for the troubleshoot

1640
01:31:04,030 --> 01:31:09,070
conditions which are due to unexpected

1641
01:31:06,630 --> 01:31:11,710
failures stink issues between data

1642
01:31:09,070 --> 01:31:16,179
stores lagging to change propagation and

1643
01:31:11,710 --> 01:31:18,580
so forth so we did post a few new

1644
01:31:16,180 --> 01:31:22,000
revisions the current revision is zero

1645
01:31:18,580 --> 01:31:25,480
tool the main changes that were applied

1646
01:31:22,000 --> 01:31:27,790
are on one hand basically the yang patch

1647
01:31:25,480 --> 01:31:31,299
format who report differences was

1648
01:31:27,790 --> 01:31:34,840
updated to add a source to everything a

1649
01:31:31,300 --> 01:31:36,520
new item source value that shows the

1650
01:31:34,840 --> 01:31:39,820
values on both sides of the comparison

1651
01:31:36,520 --> 01:31:42,310
and the comment that were made before

1652
01:31:39,820 --> 01:31:43,929
must it earlier basically we showed well

1653
01:31:42,310 --> 01:31:46,330
there's a source of there's a target and

1654
01:31:43,930 --> 01:31:48,100
the comparison is done in terms of a

1655
01:31:46,330 --> 01:31:50,440
patch it would be applied to the source

1656
01:31:48,100 --> 01:31:52,660
reach the target and then would not tell

1657
01:31:50,440 --> 01:31:55,150
the value on both and on both sides

1658
01:31:52,660 --> 01:31:57,130
influences the values replaced you would

1659
01:31:55,150 --> 01:31:58,719
then only nobody the value of one of the

1660
01:31:57,130 --> 01:32:00,160
data source you know that it would be

1661
01:31:58,720 --> 01:32:02,890
different in the other one but not which

1662
01:32:00,160 --> 01:32:06,340
one it is so busy that is the thing that

1663
01:32:02,890 --> 01:32:08,110
that has been that has been added this

1664
01:32:06,340 --> 01:32:13,320
is probably the most important change

1665
01:32:08,110 --> 01:32:16,509
and then in addition we added some more

1666
01:32:13,320 --> 01:32:20,049
extended example that shows the results

1667
01:32:16,510 --> 01:32:22,510
of a difference comparison and we also

1668
01:32:20,050 --> 01:32:24,040
updated and extended the security

1669
01:32:22,510 --> 01:32:29,750
considerations

1670
01:32:24,040 --> 01:32:32,210
next slide please so this is just

1671
01:32:29,750 --> 01:32:35,179
basically is a snippet of the main

1672
01:32:32,210 --> 01:32:39,710
difference all of the new of the new new

1673
01:32:35,179 --> 01:32:41,540
portion in the yang data model that has

1674
01:32:39,710 --> 01:32:46,780
the differences format so basically what

1675
01:32:41,540 --> 01:32:51,230
you see here is that the yang patch is

1676
01:32:46,780 --> 01:32:53,840
the young added is augmented to include

1677
01:32:51,230 --> 01:32:57,259
a new source value which is basically

1678
01:32:53,840 --> 01:32:59,750
the any data value that basically

1679
01:32:57,260 --> 01:33:02,330
indicates the value of the source data

1680
01:32:59,750 --> 01:33:04,489
item and that is it is being replaced

1681
01:33:02,330 --> 01:33:06,620
and which is been which applies

1682
01:33:04,489 --> 01:33:08,089
basically whenever you are deleting

1683
01:33:06,620 --> 01:33:10,010
something from the source off on the

1684
01:33:08,090 --> 01:33:12,590
left after comparison if you're merging

1685
01:33:10,010 --> 01:33:13,760
it moving it replacing it or or removing

1686
01:33:12,590 --> 01:33:15,889
it it is there

1687
01:33:13,760 --> 01:33:17,780
it's obviously not there if there's a

1688
01:33:15,889 --> 01:33:22,100
create because I'm busy that value did

1689
01:33:17,780 --> 01:33:24,739
not exist earlier next one next slide

1690
01:33:22,100 --> 01:33:26,870
and this already brings me to the last

1691
01:33:24,739 --> 01:33:31,879
time beta to the to the to the

1692
01:33:26,870 --> 01:33:34,849
discussion items so basically a couple

1693
01:33:31,880 --> 01:33:36,710
of items fading to confirm here we'll

1694
01:33:34,850 --> 01:33:39,050
discuss it with the group one thing

1695
01:33:36,710 --> 01:33:42,050
first thing concerns dispatch format

1696
01:33:39,050 --> 01:33:44,389
which is has been all know newly

1697
01:33:42,050 --> 01:33:46,070
proposed here so basically this

1698
01:33:44,389 --> 01:33:49,580
augmentation we do believe actually

1699
01:33:46,070 --> 01:33:51,620
addresses requirement to you have to

1700
01:33:49,580 --> 01:33:55,190
show the values of both sides of the of

1701
01:33:51,620 --> 01:33:56,570
the comparison the earlier request was

1702
01:33:55,190 --> 01:33:58,099
also believed that we should not allow

1703
01:33:56,570 --> 01:33:59,929
for different formats so we should

1704
01:33:58,100 --> 01:34:02,239
basically agree and settle on one true

1705
01:33:59,929 --> 01:34:04,070
to help interoperability so the question

1706
01:34:02,239 --> 01:34:07,459
is basically if that is the former that

1707
01:34:04,070 --> 01:34:10,969
we should go forward with and other

1708
01:34:07,460 --> 01:34:12,469
formats are possible but we just need to

1709
01:34:10,969 --> 01:34:15,199
settle on ones nobody there's the

1710
01:34:12,469 --> 01:34:17,120
question really in the room if you will

1711
01:34:15,199 --> 01:34:19,669
be see if it is for instance another

1712
01:34:17,120 --> 01:34:21,650
prayer proposal for another canonical

1713
01:34:19,670 --> 01:34:23,449
deformity so if there are other formats

1714
01:34:21,650 --> 01:34:25,549
we would like to hear about them so we

1715
01:34:23,449 --> 01:34:28,388
can make the choice otherwise the

1716
01:34:25,550 --> 01:34:31,670
proposals whether what's been presented

1717
01:34:28,389 --> 01:34:33,909
and so that's the first aspect the first

1718
01:34:31,670 --> 01:34:37,480
item

1719
01:34:33,909 --> 01:34:41,349
second discussion item

1720
01:34:37,480 --> 01:34:43,030
turned the the metadata of the original

1721
01:34:41,350 --> 01:34:46,420
of the data items so basically the idea

1722
01:34:43,030 --> 01:34:52,239
was if an operational data store is used

1723
01:34:46,420 --> 01:34:55,000
as a comparison target then the the it

1724
01:34:52,239 --> 01:34:57,610
would be useful to indicate what the

1725
01:34:55,000 --> 01:35:00,790
origin of the data is right so that you

1726
01:34:57,610 --> 01:35:04,000
for poisons if if the assumption is that

1727
01:35:00,790 --> 01:35:06,160
the we are they came from intended you

1728
01:35:04,000 --> 01:35:09,120
get it yet it comes from yet the

1729
01:35:06,160 --> 01:35:11,349
original system that person might offer

1730
01:35:09,120 --> 01:35:13,330
explanations for instance why data is

1731
01:35:11,350 --> 01:35:15,489
yeah why did a is different so this

1732
01:35:13,330 --> 01:35:16,809
might be useful in troubleshooting but

1733
01:35:15,489 --> 01:35:18,700
one question was basically whether it

1734
01:35:16,810 --> 01:35:21,250
should be always included or if we

1735
01:35:18,700 --> 01:35:23,800
should happen now whether an option

1736
01:35:21,250 --> 01:35:27,040
added whether or not to actually include

1737
01:35:23,800 --> 01:35:29,350
it or to to omit it so currently we do

1738
01:35:27,040 --> 01:35:31,210
not have such enough basically this foot

1739
01:35:29,350 --> 01:35:34,770
well the mo knobs you add the more

1740
01:35:31,210 --> 01:35:38,020
complexity you add the opinion here is

1741
01:35:34,770 --> 01:35:39,730
that is probably just to include it best

1742
01:35:38,020 --> 01:35:41,650
so just like to include it by default

1743
01:35:39,730 --> 01:35:46,389
but again that is something that we

1744
01:35:41,650 --> 01:35:48,759
should confirm here and alter well Andy

1745
01:35:46,390 --> 01:35:51,160
who I think is online actually raise

1746
01:35:48,760 --> 01:35:52,870
another issue or we had another item

1747
01:35:51,160 --> 01:35:55,300
that we wanted to discuss with regards

1748
01:35:52,870 --> 01:35:57,430
to the original meta and this concern

1749
01:35:55,300 --> 01:35:59,890
basically the action format I'll

1750
01:35:57,430 --> 01:36:02,950
probably let him speak for itself but it

1751
01:35:59,890 --> 01:36:08,140
is related to that same item and then

1752
01:36:02,950 --> 01:36:09,639
the third item is an item that well

1753
01:36:08,140 --> 01:36:12,160
there has been open for a while it is

1754
01:36:09,640 --> 01:36:14,260
also listed in the draft currently the

1755
01:36:12,160 --> 01:36:17,260
comparison filter is defined using sub

1756
01:36:14,260 --> 01:36:18,850
tree in XPath as per net conf and the

1757
01:36:17,260 --> 01:36:21,600
question is basically whether there

1758
01:36:18,850 --> 01:36:23,860
would be a requirement to also allow for

1759
01:36:21,600 --> 01:36:27,520
definition of filters relating to target

1760
01:36:23,860 --> 01:36:29,889
resources per s cons and then the final

1761
01:36:27,520 --> 01:36:32,500
item is an item that was just brought up

1762
01:36:29,890 --> 01:36:35,080
recently by Tim on the list

1763
01:36:32,500 --> 01:36:37,510
and concerning adding potentially adding

1764
01:36:35,080 --> 01:36:39,130
a performance consideration section the

1765
01:36:37,510 --> 01:36:40,540
performance reservation are way implied

1766
01:36:39,130 --> 01:36:42,160
in the security section this concerns

1767
01:36:40,540 --> 01:36:44,560
that basically somebody well they're

1768
01:36:42,160 --> 01:36:47,860
there Daisy and there is potentially a

1769
01:36:44,560 --> 01:36:50,610
hits and that is done on the system that

1770
01:36:47,860 --> 01:36:53,610
is doing the comparison

1771
01:36:50,610 --> 01:36:55,710
and the request is to add a section

1772
01:36:53,610 --> 01:36:57,809
which just makes this more explicit

1773
01:36:55,710 --> 01:37:00,390
which we can add but we which is which

1774
01:36:57,810 --> 01:37:03,810
has cutting up in not going to add it to

1775
01:37:00,390 --> 01:37:07,770
this current revision yet and that's

1776
01:37:03,810 --> 01:37:10,170
that concludes what I have so if we can

1777
01:37:07,770 --> 01:37:17,970
go through these items and get opinions

1778
01:37:10,170 --> 01:37:24,150
in the room yes very low yes I can hear

1779
01:37:17,970 --> 01:37:25,650
you properly

1780
01:37:24,150 --> 01:37:27,360
I was trying to interrupts you guys

1781
01:37:25,650 --> 01:37:30,809
you're presenting so we could ask the

1782
01:37:27,360 --> 01:37:33,540
room case-by-case but we'll have to run

1783
01:37:30,810 --> 01:37:36,480
the items as well so do them one at a

1784
01:37:33,540 --> 01:37:41,790
time but we may have to ask you to

1785
01:37:36,480 --> 01:37:43,860
repeat and go through them louder by the

1786
01:37:41,790 --> 01:37:46,460
way you were your voice was very low

1787
01:37:43,860 --> 01:37:49,410
earlier this way I could be a good sorry

1788
01:37:46,460 --> 01:37:53,070
we there may be a question of the mic is

1789
01:37:49,410 --> 01:37:55,230
this regarding the first item Rob Wilson

1790
01:37:53,070 --> 01:37:57,389
says no browsers have one other question

1791
01:37:55,230 --> 01:37:58,799
that's not related to these at all so

1792
01:37:57,390 --> 01:38:01,290
maybe I could raise that one never go

1793
01:37:58,800 --> 01:38:03,390
ahead so Alex looking the draft I'm

1794
01:38:01,290 --> 01:38:06,810
still not entirely sure the diff is

1795
01:38:03,390 --> 01:38:08,340
doing quite what I would look for so you

1796
01:38:06,810 --> 01:38:11,730
have you all option you can be turned on

1797
01:38:08,340 --> 01:38:14,310
or off and if the all option is off you

1798
01:38:11,730 --> 01:38:16,889
compare nodes that exist in both

1799
01:38:14,310 --> 01:38:19,770
datastore so intended and operational is

1800
01:38:16,890 --> 01:38:22,350
that right yes and only only exists in

1801
01:38:19,770 --> 01:38:24,810
both do you compare the value and if the

1802
01:38:22,350 --> 01:38:27,180
all options on it says among you you

1803
01:38:24,810 --> 01:38:29,490
would do a difficult for contents of

1804
01:38:27,180 --> 01:38:31,080
both datastore so I think that would

1805
01:38:29,490 --> 01:38:32,940
mean an operational you get all the data

1806
01:38:31,080 --> 01:38:36,059
backs or all the operational state back

1807
01:38:32,940 --> 01:38:38,610
or would you still apply a filter so it

1808
01:38:36,060 --> 01:38:43,020
only only conflict true items would come

1809
01:38:38,610 --> 01:38:45,719
back oh no no no the the ideas of course

1810
01:38:43,020 --> 01:38:49,130
that first of all that you would only

1811
01:38:45,720 --> 01:38:53,280
breaking report different this back

1812
01:38:49,130 --> 01:38:55,380
right so yes yes but you consider

1813
01:38:53,280 --> 01:38:58,290
compared running or intended to

1814
01:38:55,380 --> 01:38:59,940
operational all the config false data in

1815
01:38:58,290 --> 01:39:01,320
operational is guaranteed to be

1816
01:38:59,940 --> 01:39:03,460
different from running because it

1817
01:39:01,320 --> 01:39:05,440
doesn't exist in running

1818
01:39:03,460 --> 01:39:07,510
so all your statistics for example all

1819
01:39:05,440 --> 01:39:08,679
that all that beta will never ever be in

1820
01:39:07,510 --> 01:39:13,900
runnings is never going to be there

1821
01:39:08,680 --> 01:39:16,810
would you automatically exclude that we

1822
01:39:13,900 --> 01:39:18,730
would well okay no we would not

1823
01:39:16,810 --> 01:39:20,230
automatically exclude that so it is

1824
01:39:18,730 --> 01:39:22,450
basically the question especially what

1825
01:39:20,230 --> 01:39:24,669
you would request as what you would

1826
01:39:22,450 --> 01:39:29,710
request as a user and this is

1827
01:39:24,670 --> 01:39:32,380
essentially yeah that is essentially up

1828
01:39:29,710 --> 01:39:34,180
to the user up to the client to specify

1829
01:39:32,380 --> 01:39:37,330
and what what what it wants to have

1830
01:39:34,180 --> 01:39:40,120
compared so I think that all options

1831
01:39:37,330 --> 01:39:41,380
gonna if you compared any configuration

1832
01:39:40,120 --> 01:39:42,820
data source operation is going to give

1833
01:39:41,380 --> 01:39:43,960
you back a lot more data than you're

1834
01:39:42,820 --> 01:39:47,110
interested in because it will give you

1835
01:39:43,960 --> 01:39:49,060
back all operational data as well as the

1836
01:39:47,110 --> 01:39:49,570
applied configuration okay I would be

1837
01:39:49,060 --> 01:39:51,190
interested

1838
01:39:49,570 --> 01:39:53,860
I've been teresting an option that just

1839
01:39:51,190 --> 01:39:57,120
effectively compares the conflict true

1840
01:39:53,860 --> 01:40:00,519
nodes in operational get What's in

1841
01:39:57,120 --> 01:40:02,440
running or intended but has all of those

1842
01:40:00,520 --> 01:40:04,720
you know they're in exist in one or the

1843
01:40:02,440 --> 01:40:06,580
other so I want to see configuration

1844
01:40:04,720 --> 01:40:08,800
items that are in running but haven't

1845
01:40:06,580 --> 01:40:10,960
yet been applied so maybe the line cards

1846
01:40:08,800 --> 01:40:12,790
missing and conversely I'd also like to

1847
01:40:10,960 --> 01:40:14,560
see configuration that I've removed from

1848
01:40:12,790 --> 01:40:16,300
running but it still persists on the

1849
01:40:14,560 --> 01:40:19,210
system due to some issue or some error

1850
01:40:16,300 --> 01:40:20,650
that some reason my bgp peer

1851
01:40:19,210 --> 01:40:22,660
configuration hasn't been deleted I'd

1852
01:40:20,650 --> 01:40:26,230
like to see that so I like an option

1853
01:40:22,660 --> 01:40:29,800
that filters the the config true part of

1854
01:40:26,230 --> 01:40:32,379
operational against what's in intended

1855
01:40:29,800 --> 01:40:34,960
or running if possible right now

1856
01:40:32,380 --> 01:40:36,550
okay so right now baby it would be in

1857
01:40:34,960 --> 01:40:39,700
the way this is defined right now is

1858
01:40:36,550 --> 01:40:40,990
that okay so maybe it's also video

1859
01:40:39,700 --> 01:40:43,690
you're saying we need to have something

1860
01:40:40,990 --> 01:40:44,920
between between these two two option

1861
01:40:43,690 --> 01:40:48,610
right because right now we have either

1862
01:40:44,920 --> 01:40:50,110
you include everything or you include or

1863
01:40:48,610 --> 01:40:51,910
you exclude data from the comparison

1864
01:40:50,110 --> 01:40:53,320
that does not pertain to both but you're

1865
01:40:51,910 --> 01:40:55,389
saying this you would want to have it

1866
01:40:53,320 --> 01:40:57,969
restricted a little bit further so if

1867
01:40:55,390 --> 01:41:00,250
your optional yeah between the two I

1868
01:40:57,970 --> 01:41:02,650
like on a question how useful the all

1869
01:41:00,250 --> 01:41:04,390
option will be very comparing

1870
01:41:02,650 --> 01:41:06,670
operational to a configuration datastore

1871
01:41:04,390 --> 01:41:09,100
I think that because the amount of data

1872
01:41:06,670 --> 01:41:12,030
will come back by and large that's

1873
01:41:09,100 --> 01:41:14,950
probably not what's being looked for

1874
01:41:12,030 --> 01:41:17,019
yeah I mean the obvious you also have a

1875
01:41:14,950 --> 01:41:17,290
filter spec that you'll then you specify

1876
01:41:17,020 --> 01:41:21,660
as

1877
01:41:17,290 --> 01:41:23,890
well so so when you say that that all

1878
01:41:21,660 --> 01:41:25,480
differences are returned that would be

1879
01:41:23,890 --> 01:41:30,010
only busy if your filter spec is empty

1880
01:41:25,480 --> 01:41:35,139
or if your or if you're asking to to

1881
01:41:30,010 --> 01:41:37,360
compare the entire tree which in general

1882
01:41:35,140 --> 01:41:39,520
might however not be the case but I mean

1883
01:41:37,360 --> 01:41:41,440
of course if you do this but it's true

1884
01:41:39,520 --> 01:41:43,210
everything everything will come back but

1885
01:41:41,440 --> 01:41:46,030
typically you would have a filter spec

1886
01:41:43,210 --> 01:41:47,020
as well but if you if you consider for

1887
01:41:46,030 --> 01:41:49,300
example say you're checking the

1888
01:41:47,020 --> 01:41:50,620
configuration for one interface then you

1889
01:41:49,300 --> 01:41:52,660
might have three or four lines of

1890
01:41:50,620 --> 01:41:54,250
interface configuration in an

1891
01:41:52,660 --> 01:41:56,349
operational you'd have that plus

1892
01:41:54,250 --> 01:41:58,210
hundreds of counters another operational

1893
01:41:56,350 --> 01:42:00,580
data and that would automatically always

1894
01:41:58,210 --> 01:42:02,650
be returned because I'll never ever be

1895
01:42:00,580 --> 01:42:03,970
in intended or running so I'll always be

1896
01:42:02,650 --> 01:42:06,070
reported as a difference if you

1897
01:42:03,970 --> 01:42:07,360
specified your all option but make you

1898
01:42:06,070 --> 01:42:10,240
know what they're better through it's

1899
01:42:07,360 --> 01:42:12,190
better by the all option mm-hmm by our

1900
01:42:10,240 --> 01:42:14,050
question is when is that useful when

1901
01:42:12,190 --> 01:42:16,210
when does any do they don't actually

1902
01:42:14,050 --> 01:42:22,450
really need that case is a useful case

1903
01:42:16,210 --> 01:42:24,730
where that's useful dates to return okay

1904
01:42:22,450 --> 01:42:26,110
I cannot give you an answer right now I

1905
01:42:24,730 --> 01:42:27,610
mean it's clearly something that we

1906
01:42:26,110 --> 01:42:29,830
could control I mean this I guess that

1907
01:42:27,610 --> 01:42:31,839
is the so I think you're you're asking

1908
01:42:29,830 --> 01:42:35,980
should we remove this all option or

1909
01:42:31,840 --> 01:42:37,020
group and just include another option

1910
01:42:35,980 --> 01:42:40,209
fitting instead

1911
01:42:37,020 --> 01:42:42,430
yes that's my question okay so I don't

1912
01:42:40,210 --> 01:42:45,250
have a strong opinion on the on the all

1913
01:42:42,430 --> 01:42:47,500
right now I do think definitely having

1914
01:42:45,250 --> 01:42:49,030
the option to exclude it like I get this

1915
01:42:47,500 --> 01:42:51,490
here that that one certainly is

1916
01:42:49,030 --> 01:42:53,800
important if you want to have everything

1917
01:42:51,490 --> 01:42:55,420
yeah I'm okay I don't have a use case

1918
01:42:53,800 --> 01:42:57,310
actually right now at the top of my head

1919
01:42:55,420 --> 01:43:04,270
for this so this is maybe a question to

1920
01:42:57,310 --> 01:43:05,830
ask Rob chic a Google the only thing I

1921
01:43:04,270 --> 01:43:07,510
can take the point I can add is we

1922
01:43:05,830 --> 01:43:09,250
didn't implement the all option when we

1923
01:43:07,510 --> 01:43:10,360
implemented this like we didn't

1924
01:43:09,250 --> 01:43:12,790
implement this draft core we've had a

1925
01:43:10,360 --> 01:43:14,349
service doing this since 2015 I think

1926
01:43:12,790 --> 01:43:20,650
and we don't have a no option

1927
01:43:14,350 --> 01:43:23,110
okay okay so that drained the

1928
01:43:20,650 --> 01:43:24,759
my queue and we'll go back to going over

1929
01:43:23,110 --> 01:43:29,469
these points and asking the room for

1930
01:43:24,760 --> 01:43:30,849
information or oops so first was the

1931
01:43:29,470 --> 01:43:32,829
patch format or the

1932
01:43:30,849 --> 01:43:35,260
for instance and I think the question

1933
01:43:32,829 --> 01:43:36,669
was so already I think we've had an

1934
01:43:35,260 --> 01:43:39,219
agreement that there should only be one

1935
01:43:36,669 --> 01:43:41,559
format that should be returned for death

1936
01:43:39,219 --> 01:43:44,499
the question is what should that format

1937
01:43:41,559 --> 01:43:47,320
be and the current proposal is an

1938
01:43:44,499 --> 01:43:50,050
augmentation to the patch format and the

1939
01:43:47,320 --> 01:43:54,789
question is that have sufficient or if

1940
01:43:50,050 --> 01:43:57,579
there should be another format in

1941
01:43:54,789 --> 01:44:01,090
particular something that may be called

1942
01:43:57,579 --> 01:44:02,709
gained if a dip format so instead of

1943
01:44:01,090 --> 01:44:04,389
augmenting patch maybe we should

1944
01:44:02,709 --> 01:44:06,969
actually have a format that's very

1945
01:44:04,389 --> 01:44:10,780
specifically customised for returning

1946
01:44:06,969 --> 01:44:14,679
dips is that did I capture that correct

1947
01:44:10,780 --> 01:44:16,898
Alex yeah this is this is correct but

1948
01:44:14,679 --> 01:44:19,629
barring my render the Yankee there is no

1949
01:44:16,899 --> 01:44:21,280
separately and deform it that has that

1950
01:44:19,629 --> 01:44:23,260
has been proposed yet

1951
01:44:21,280 --> 01:44:24,728
we do think it can be done using the

1952
01:44:23,260 --> 01:44:27,039
augmentation of the patch format but we

1953
01:44:24,729 --> 01:44:27,760
could of course define it but yeah that

1954
01:44:27,039 --> 01:44:35,079
is correct

1955
01:44:27,760 --> 01:44:37,869
so yeah Vogel since this case I wouldn't

1956
01:44:35,079 --> 01:44:40,058
define a diff format as part of this

1957
01:44:37,869 --> 01:44:44,018
work if that's to be done I'll do it as

1958
01:44:40,059 --> 01:44:45,999
a separate RC I so I would say do patch

1959
01:44:44,019 --> 01:44:47,979
format now but hopefully designed such a

1960
01:44:45,999 --> 01:44:49,478
way that it could be extended to cover a

1961
01:44:47,979 --> 01:44:52,959
different format in future if that's

1962
01:44:49,479 --> 01:44:55,149
feasible okay so they actually I think

1963
01:44:52,959 --> 01:44:56,469
what I was saying before is at last time

1964
01:44:55,149 --> 01:44:58,090
this meeting we concluded that there

1965
01:44:56,469 --> 01:45:00,760
should only be one format that we

1966
01:44:58,090 --> 01:45:02,919
shouldn't you know says so what you're

1967
01:45:00,760 --> 01:45:06,129
saying is let's reopen and possibly

1968
01:45:02,919 --> 01:45:07,300
support multiple formats it I don't

1969
01:45:06,129 --> 01:45:09,760
think I think we're going to choose one

1970
01:45:07,300 --> 01:45:12,070
format choose the one we already have so

1971
01:45:09,760 --> 01:45:13,780
rather define a new one so if the jury

1972
01:45:12,070 --> 01:45:21,478
concluded we only won one format then

1973
01:45:13,780 --> 01:45:23,919
use yang patch that seems fine okay well

1974
01:45:21,479 --> 01:45:28,869
objections does anyone else have a

1975
01:45:23,919 --> 01:45:31,840
comment about this so as myself as a

1976
01:45:28,869 --> 01:45:35,889
contributor I do worry just a little bit

1977
01:45:31,840 --> 01:45:38,139
about if we are augmenting yang patch

1978
01:45:35,889 --> 01:45:41,559
that the patch format it just seems a

1979
01:45:38,139 --> 01:45:44,289
little bit awkward to me and I worry

1980
01:45:41,559 --> 01:45:45,819
that I do think this has been

1981
01:45:44,289 --> 01:45:49,148
the important feature and one that will

1982
01:45:45,819 --> 01:45:53,559
be will be living with for a long time

1983
01:45:49,149 --> 01:45:55,749
and I think that it would be Hoover

1984
01:45:53,559 --> 01:45:59,039
ourselves to actually ensure that we

1985
01:45:55,749 --> 01:46:02,889
pick a format that this ideal for for

1986
01:45:59,039 --> 01:46:06,369
for this purpose and in particular

1987
01:46:02,889 --> 01:46:09,189
imagine us needing to extend the format

1988
01:46:06,369 --> 01:46:12,039
in the future if it or maybe yang hatch

1989
01:46:09,189 --> 01:46:13,839
changes in the future and they're

1990
01:46:12,039 --> 01:46:15,879
coupled in such a nasty way that we

1991
01:46:13,839 --> 01:46:18,579
don't get to do what you know we don't

1992
01:46:15,879 --> 01:46:20,979
get separated the music so I also don't

1993
01:46:18,579 --> 01:46:22,839
mind Moulton I also in mind if you want

1994
01:46:20,979 --> 01:46:24,309
to define a DIF format again I still

1995
01:46:22,839 --> 01:46:25,510
wouldn't define it in this document

1996
01:46:24,309 --> 01:46:27,969
something that's better to define

1997
01:46:25,510 --> 01:46:31,359
generically and reference it from this

1998
01:46:27,969 --> 01:46:32,859
if the proposal is to use a yang

1999
01:46:31,359 --> 01:46:35,349
different set of yang patch that also is

2000
01:46:32,859 --> 01:46:37,149
fine being good but I'm it's going to

2001
01:46:35,349 --> 01:46:39,069
slow down this work though if you do

2002
01:46:37,149 --> 01:46:43,209
that I think by whatever time it takes

2003
01:46:39,069 --> 01:46:45,749
to define a yang diplomat okay so I

2004
01:46:43,209 --> 01:46:45,749
guess that's the question

2005
01:46:48,510 --> 01:46:59,530
well I guess I have three questions the

2006
01:46:57,039 --> 01:47:02,379
other question is well to also revert on

2007
01:46:59,530 --> 01:47:04,869
the earlier question and if you want to

2008
01:47:02,379 --> 01:47:06,969
allow for yang patch augment it now and

2009
01:47:04,869 --> 01:47:08,679
then maybe something different later I

2010
01:47:06,969 --> 01:47:09,969
can ask a question

2011
01:47:08,679 --> 01:47:11,949
alright say let's start with that

2012
01:47:09,969 --> 01:47:13,929
because if we are able to support

2013
01:47:11,949 --> 01:47:16,539
multiple bit formats or return different

2014
01:47:13,929 --> 01:47:18,039
two formats then we can almost let go

2015
01:47:16,539 --> 01:47:20,199
the other remaining questions first

2016
01:47:18,039 --> 01:47:21,909
that's the first question for the person

2017
01:47:20,199 --> 01:47:24,219
right so we're gonna ask two questions

2018
01:47:21,909 --> 01:47:26,199
first is to prove supports and then the

2019
01:47:24,219 --> 01:47:29,399
second would be who does not support um

2020
01:47:26,199 --> 01:47:31,719
so for those who do support the idea of

2021
01:47:29,399 --> 01:47:34,689
just returning a single format that

2022
01:47:31,719 --> 01:47:36,699
there's no option for for for the client

2023
01:47:34,689 --> 01:47:46,809
to specify the format please raise their

2024
01:47:36,699 --> 01:47:50,768
hand I think the question you are asking

2025
01:47:46,809 --> 01:47:54,399
is who supports restricting the return

2026
01:47:50,769 --> 01:47:57,010
to a single format so who would like

2027
01:47:54,399 --> 01:47:59,920
only a single format

2028
01:47:57,010 --> 01:48:01,480
question is who wants to allow right

2029
01:47:59,920 --> 01:48:04,349
right but I've just think some people

2030
01:48:01,480 --> 01:48:10,919
know okay so the format single format

2031
01:48:04,349 --> 01:48:16,619
please raise your hand there's very few

2032
01:48:10,920 --> 01:48:21,130
thank you support a multiple formats and

2033
01:48:16,619 --> 01:48:24,400
also a few but statistically more a lot

2034
01:48:21,130 --> 01:48:27,369
more so then okay so then okay the baton

2035
01:48:24,400 --> 01:48:29,259
effectively reverse the decision that we

2036
01:48:27,369 --> 01:48:31,329
had from last time and if we allow for

2037
01:48:29,260 --> 01:48:33,909
multiple formats and my objection for

2038
01:48:31,329 --> 01:48:36,130
moving forward with this format now is

2039
01:48:33,909 --> 01:48:38,219
I'll obviated I no longer worry about it

2040
01:48:36,130 --> 01:48:40,989
because I know we can fix it later so

2041
01:48:38,219 --> 01:48:42,099
then I think we don't need to ask any

2042
01:48:40,989 --> 01:48:47,230
more questions we could move forward

2043
01:48:42,099 --> 01:48:49,179
with this format so Robert insisted to

2044
01:48:47,230 --> 01:48:51,280
clarify I support multiple formats but I

2045
01:48:49,179 --> 01:48:55,599
restricted small set of them probably

2046
01:48:51,280 --> 01:48:57,340
limited to two sure okay well it would

2047
01:48:55,599 --> 01:48:59,380
be they would presumably go through the

2048
01:48:57,340 --> 01:49:02,550
working group and the work group would

2049
01:48:59,380 --> 01:49:07,800
only adopt the work if it was reasonable

2050
01:49:02,550 --> 01:49:10,000
self-limiting well one one question this

2051
01:49:07,800 --> 01:49:12,280
well one question is how we would do

2052
01:49:10,000 --> 01:49:14,260
that practically be earlier busy we had

2053
01:49:12,280 --> 01:49:16,840
a flag that was allowed to specify the

2054
01:49:14,260 --> 01:49:20,230
format and base is the preference for

2055
01:49:16,840 --> 01:49:21,639
format and if this is about the but if

2056
01:49:20,230 --> 01:49:23,259
you're saying we need to allow for

2057
01:49:21,639 --> 01:49:25,570
future formats and I'm not sure how we

2058
01:49:23,260 --> 01:49:28,210
can oh how we could one say it's only

2059
01:49:25,570 --> 01:49:30,750
this or one other formats which has not

2060
01:49:28,210 --> 01:49:30,750
been defined yet

2061
01:49:35,489 --> 01:49:39,790
okay great so I'm moving on to the

2062
01:49:37,660 --> 01:49:41,860
second bullet point then should

2063
01:49:39,790 --> 01:49:43,660
parameter be included to in control

2064
01:49:41,860 --> 01:49:45,489
whether or not to include origin

2065
01:49:43,660 --> 01:49:48,730
metadata when operational is the

2066
01:49:45,489 --> 01:49:50,169
comparison target so I know we all have

2067
01:49:48,730 --> 01:49:53,769
to remember everything that Alex said

2068
01:49:50,170 --> 01:49:55,650
before but hopefully that's clear again

2069
01:49:53,770 --> 01:49:59,590
yes No

2070
01:49:55,650 --> 01:50:00,849
so should a parameter be included if you

2071
01:49:59,590 --> 01:50:03,489
believe that a parameter should be

2072
01:50:00,850 --> 01:50:05,020
included to control whether or not the

2073
01:50:03,489 --> 01:50:09,730
origin metadata should be returned

2074
01:50:05,020 --> 01:50:13,210
please way to raise your hand there's

2075
01:50:09,730 --> 01:50:16,059
very few and then I think the option is

2076
01:50:13,210 --> 01:50:18,700
that there be no parameter specified

2077
01:50:16,060 --> 01:50:20,680
then that the Alice help me here if no

2078
01:50:18,700 --> 01:50:23,139
parameter specified is automated

2079
01:50:20,680 --> 01:50:25,630
returned or not returned yeah well then

2080
01:50:23,140 --> 01:50:28,390
we'll just be returned by default we

2081
01:50:25,630 --> 01:50:31,270
return by default okay so actually maybe

2082
01:50:28,390 --> 01:50:32,920
if in case that wasn't clear actually

2083
01:50:31,270 --> 01:50:34,270
let me restart that okay because I don't

2084
01:50:32,920 --> 01:50:37,120
I'm not sure if everyone was clear about

2085
01:50:34,270 --> 01:50:38,950
that so if you think that origin met it

2086
01:50:37,120 --> 01:50:40,980
that there's no parameter and origin but

2087
01:50:38,950 --> 01:50:45,730
it it should be returned by default

2088
01:50:40,980 --> 01:50:50,589
please raise your hand okay there's no

2089
01:50:45,730 --> 01:50:52,179
one okay sorry go ahead Mike so global -

2090
01:50:50,590 --> 01:50:54,940
Cisco sonal devices will necessarily

2091
01:50:52,180 --> 01:50:56,380
support origin metadata so the question

2092
01:50:54,940 --> 01:50:58,030
really is whether it's better to have

2093
01:50:56,380 --> 01:50:59,920
that as an input parameter such that

2094
01:50:58,030 --> 01:51:01,960
you'd fail the request you can't support

2095
01:50:59,920 --> 01:51:04,450
it or whether you just don't return it

2096
01:51:01,960 --> 01:51:06,100
if you don't have it so so that's why

2097
01:51:04,450 --> 01:51:07,210
I'm have I prefer having parameter

2098
01:51:06,100 --> 01:51:09,219
because then at least you know as a

2099
01:51:07,210 --> 01:51:14,290
client whether I'm not going to get this

2100
01:51:09,219 --> 01:51:21,160
data okay I guess there's a good reason

2101
01:51:14,290 --> 01:51:22,989
to do okay that's a good point so this

2102
01:51:21,160 --> 01:51:25,690
will be in favor of having a parameter

2103
01:51:22,989 --> 01:51:27,968
true to control it in which case one

2104
01:51:25,690 --> 01:51:30,099
would expect it and then we could have

2105
01:51:27,969 --> 01:51:31,960
an explicit but if it's not supported

2106
01:51:30,100 --> 01:51:36,610
then obviously the request will be

2107
01:51:31,960 --> 01:51:40,210
denied Alex you're agreeing with problem

2108
01:51:36,610 --> 01:51:42,759
the progress yeah I think I am agreeing

2109
01:51:40,210 --> 01:51:47,170
with Rob yes and as a contributor I

2110
01:51:42,760 --> 01:51:49,870
agree okay so third bullet point

2111
01:51:47,170 --> 01:51:51,850
sunfilter to define using sub tree as an

2112
01:51:49,870 --> 01:51:53,559
XPath as per neck knob is the

2113
01:51:51,850 --> 01:51:55,690
requirement for the definition of

2114
01:51:53,560 --> 01:52:02,679
filters related to target resources for

2115
01:51:55,690 --> 01:52:04,419
rest counts which okay Alice can do it

2116
01:52:02,679 --> 01:52:07,360
with this bullet point again well then

2117
01:52:04,420 --> 01:52:10,150
is something that we it has been trap

2118
01:52:07,360 --> 01:52:15,040
for for y so basically the comparison

2119
01:52:10,150 --> 01:52:16,989
filter that we use to baby yepp the

2120
01:52:15,040 --> 01:52:18,910
filter spec well it's it's a question

2121
01:52:16,989 --> 01:52:21,218
many but include as part of the filter

2122
01:52:18,910 --> 01:52:26,530
spec where we say baby which part of the

2123
01:52:21,219 --> 01:52:31,719
data store to include and that one yeah

2124
01:52:26,530 --> 01:52:33,969
and this one basically is defined in a s

2125
01:52:31,719 --> 01:52:38,710
pro Netcom orbiting in a dead fish

2126
01:52:33,969 --> 01:52:40,810
weight using subtree index path and and

2127
01:52:38,710 --> 01:52:43,540
the issue was brought up in the past

2128
01:52:40,810 --> 01:52:48,850
betting you whether well what about what

2129
01:52:43,540 --> 01:52:51,040
about allowing a restaurant way of of

2130
01:52:48,850 --> 01:52:52,330
defining that of putting the filters

2131
01:52:51,040 --> 01:52:58,120
where you putting a different format for

2132
01:52:52,330 --> 01:52:59,890
the filter spec if you look at it so if

2133
01:52:58,120 --> 01:53:01,989
you look at the RPC but while this

2134
01:52:59,890 --> 01:53:04,870
parameter this business pack is defined

2135
01:53:01,989 --> 01:53:06,820
as a yeah essentially is a subtree

2136
01:53:04,870 --> 01:53:11,349
filter or expert filter these are the

2137
01:53:06,820 --> 01:53:13,150
things you think that you can have okay

2138
01:53:11,350 --> 01:53:14,920
so to clear you're saying current

2139
01:53:13,150 --> 01:53:16,599
through current definitions that either

2140
01:53:14,920 --> 01:53:18,550
a sub tree or an xpath filter to be

2141
01:53:16,600 --> 01:53:20,260
passed yes and the question is whether

2142
01:53:18,550 --> 01:53:22,719
or not we should extend to support also

2143
01:53:20,260 --> 01:53:25,390
a third which would be mimicking breast

2144
01:53:22,719 --> 01:53:27,850
cough like semantics right that was the

2145
01:53:25,390 --> 01:53:32,320
that was that was the issue in there yes

2146
01:53:27,850 --> 01:53:35,230
mmm-hmm okay now when I'm thinking about

2147
01:53:32,320 --> 01:53:38,860
restaurant filters they're you know the

2148
01:53:35,230 --> 01:53:40,750
query parameters so there's fields for

2149
01:53:38,860 --> 01:53:43,989
instance would be one of them is that

2150
01:53:40,750 --> 01:53:47,620
we're thinking yeah yeah this this

2151
01:53:43,989 --> 01:53:50,879
particular item I'm not exactly sure I

2152
01:53:47,620 --> 01:53:54,429
mean this was brought up in the past

2153
01:53:50,880 --> 01:53:57,040
obviously even when we define it we did

2154
01:53:54,429 --> 01:53:58,750
not think we thought actually that what

2155
01:53:57,040 --> 01:54:01,210
we have the filter specs that that

2156
01:53:58,750 --> 01:54:03,190
happened that the survived and

2157
01:54:01,210 --> 01:54:06,730
to be sufficient for what we need to

2158
01:54:03,190 --> 01:54:09,490
accomplish so from that perspective yeah

2159
01:54:06,730 --> 01:54:11,019
this is a yeah it's a contributor if you

2160
01:54:09,490 --> 01:54:13,090
will think I I don't see the need for

2161
01:54:11,020 --> 01:54:15,820
that but it was brought up by the group

2162
01:54:13,090 --> 01:54:17,770
before and we have listed it as an item

2163
01:54:15,820 --> 01:54:22,389
in the draft so this is why we need to

2164
01:54:17,770 --> 01:54:24,640
raise a fashion so if they are if if

2165
01:54:22,390 --> 01:54:28,330
people think we need a different format

2166
01:54:24,640 --> 01:54:36,910
or in a national format yeah

2167
01:54:28,330 --> 01:54:39,730
we should discuss it so the current it's

2168
01:54:36,910 --> 01:54:44,260
an RPC not an action correct there this

2169
01:54:39,730 --> 01:54:46,450
correct of the RPC so in our way rest

2170
01:54:44,260 --> 01:54:49,390
comp works for most part is you specify

2171
01:54:46,450 --> 01:54:52,320
the URL to the node that you wish to

2172
01:54:49,390 --> 01:54:55,960
operate on the resourcing governing on

2173
01:54:52,320 --> 01:54:58,240
which would in in Netcom parlance would

2174
01:54:55,960 --> 01:55:01,750
be more like an action as opposed to a

2175
01:54:58,240 --> 01:55:05,740
RPC mm-hmm to the extent that this is an

2176
01:55:01,750 --> 01:55:09,130
RPC and then in rest comp terms that be

2177
01:55:05,740 --> 01:55:13,870
in slash operations at a global level

2178
01:55:09,130 --> 01:55:15,730
and and hence the rest comp query

2179
01:55:13,870 --> 01:55:17,410
parameters would not make sense in that

2180
01:55:15,730 --> 01:55:19,509
context you would have to have something

2181
01:55:17,410 --> 01:55:22,210
like what you're suggesting of sub tree

2182
01:55:19,510 --> 01:55:24,640
or XPath filters don't believe the

2183
01:55:22,210 --> 01:55:27,040
option exists however if we wanted to

2184
01:55:24,640 --> 01:55:29,130
support actions instead of our PC then

2185
01:55:27,040 --> 01:55:31,420
we could have that conversation mm-hmm

2186
01:55:29,130 --> 01:55:33,730
does anyone else have an opinion about

2187
01:55:31,420 --> 01:55:35,020
this this actually I don't think this is

2188
01:55:33,730 --> 01:55:36,549
something pull the room we're gonna pull

2189
01:55:35,020 --> 01:55:40,000
the rooms just discussing this a

2190
01:55:36,550 --> 01:55:43,360
discussion point anyone wants to commit

2191
01:55:40,000 --> 01:55:44,500
oh all right so Alex I think we should

2192
01:55:43,360 --> 01:55:46,360
probably take this one to the list it's

2193
01:55:44,500 --> 01:55:49,810
pretty complicated but some examples

2194
01:55:46,360 --> 01:55:52,030
would help all right yeah or maybe uh or

2195
01:55:49,810 --> 01:55:53,980
if or I guess believe if nobody's coming

2196
01:55:52,030 --> 01:55:55,809
forward with the reason why subtree next

2197
01:55:53,980 --> 01:55:59,669
time would not be sufficient then we

2198
01:55:55,810 --> 01:56:02,530
probably just can tell this issue sure

2199
01:55:59,670 --> 01:56:04,930
and actually we may actually raise wide

2200
01:56:02,530 --> 01:56:08,139
support both should we support both

2201
01:56:04,930 --> 01:56:11,680
subtree and XPath okay that's a I guess

2202
01:56:08,140 --> 01:56:13,570
that is a six second question yeah yeah

2203
01:56:11,680 --> 01:56:14,889
because in in that combat lis subtree is

2204
01:56:13,570 --> 01:56:18,549
mandatory to implement

2205
01:56:14,889 --> 01:56:19,719
we're experts not of course if you're if

2206
01:56:18,550 --> 01:56:21,400
you're a restaurant surfer and you're

2207
01:56:19,719 --> 01:56:23,590
not implementing that comp you might be

2208
01:56:21,400 --> 01:56:25,980
you know that might be unfortunate you

2209
01:56:23,590 --> 01:56:29,619
may not want it as some people dream

2210
01:56:25,980 --> 01:56:31,570
okay lastly and the question is do we

2211
01:56:29,619 --> 01:56:33,219
add performance considerations section

2212
01:56:31,570 --> 01:56:35,320
or added out of performance

2213
01:56:33,219 --> 01:56:36,699
considerations okay though this is on

2214
01:56:35,320 --> 01:56:39,509
Tim's thing

2215
01:56:36,699 --> 01:56:43,230
so Tim did you want to walk us through

2216
01:56:39,510 --> 01:56:49,510
exactly what unless you raise some lists

2217
01:56:43,230 --> 01:56:51,968
you just approaching the mic yeah Tim

2218
01:56:49,510 --> 01:56:54,369
carry nokia so when we read the draft

2219
01:56:51,969 --> 01:56:55,690
there were some concerns and in terms of

2220
01:56:54,369 --> 01:57:00,400
an implementation because we have some

2221
01:56:55,690 --> 01:57:04,059
very constrained servers right that if I

2222
01:57:00,400 --> 01:57:05,860
was given a request to do a diff on some

2223
01:57:04,060 --> 01:57:09,130
data stores where I don't have the

2224
01:57:05,860 --> 01:57:12,130
compute resources to return the the

2225
01:57:09,130 --> 01:57:13,719
information being requested how what is

2226
01:57:12,130 --> 01:57:16,659
the question came back says what do we

2227
01:57:13,719 --> 01:57:18,790
do what is the appropriate response that

2228
01:57:16,659 --> 01:57:20,769
we should give back should we curtail

2229
01:57:18,790 --> 01:57:24,090
what we have and just provide what we

2230
01:57:20,770 --> 01:57:26,560
have should we give them a you know

2231
01:57:24,090 --> 01:57:28,690
thumb our nose to them or not or

2232
01:57:26,560 --> 01:57:30,850
whatever it's supposed to be we'd like

2233
01:57:28,690 --> 01:57:33,129
to have that response certainly

2234
01:57:30,850 --> 01:57:35,949
documented of of what happens if we

2235
01:57:33,130 --> 01:57:38,679
can't fulfill the request right and if

2236
01:57:35,949 --> 01:57:41,199
so that's and and then alex suggests

2237
01:57:38,679 --> 01:57:43,840
said well we've already created some of

2238
01:57:41,199 --> 01:57:46,379
this in the security section but in

2239
01:57:43,840 --> 01:57:49,270
reality we probably do need some type of

2240
01:57:46,380 --> 01:57:50,800
you know performance piece to say hey

2241
01:57:49,270 --> 01:57:52,570
look you know if you're if you can't

2242
01:57:50,800 --> 01:57:55,090
fulfill the request you should do this

2243
01:57:52,570 --> 01:57:57,190
type of things for the for the these

2244
01:57:55,090 --> 01:58:00,790
types of behaviors that you can't

2245
01:57:57,190 --> 01:58:05,888
fulfill well yeah there was an

2246
01:58:00,790 --> 01:58:07,449
underlying question on this is as well

2247
01:58:05,889 --> 01:58:08,920
but one thing was I mean obviously if

2248
01:58:07,449 --> 01:58:12,849
you cannot fulfill the request you can

2249
01:58:08,920 --> 01:58:15,159
always just decline because you can just

2250
01:58:12,850 --> 01:58:18,010
deny it but I guess the underlying other

2251
01:58:15,159 --> 01:58:20,409
question relies to do you want to have

2252
01:58:18,010 --> 01:58:24,070
some kind of prodding operation or so

2253
01:58:20,409 --> 01:58:26,739
you can have only so many requests per

2254
01:58:24,070 --> 01:58:28,790
time unit or or what have you or is that

2255
01:58:26,739 --> 01:58:32,120
something that you would

2256
01:58:28,790 --> 01:58:35,420
we weren't worried so much about a

2257
01:58:32,120 --> 01:58:37,309
median or a throttling aspect of it if

2258
01:58:35,420 --> 01:58:39,200
someone else might be we were just

2259
01:58:37,310 --> 01:58:43,330
saying look you know we we might not

2260
01:58:39,200 --> 01:58:47,389
necessarily be able to you know meet the

2261
01:58:43,330 --> 01:58:49,340
meet meet the request coming in what we

2262
01:58:47,390 --> 01:58:52,750
wanted was was that we wanted this the

2263
01:58:49,340 --> 01:58:54,980
RFC to specify the behavior specifically

2264
01:58:52,750 --> 01:58:56,600
so that people that are implementing

2265
01:58:54,980 --> 01:58:59,900
this will know you know what to do

2266
01:58:56,600 --> 01:59:02,060
sure yeah I think and I think what

2267
01:58:59,900 --> 01:59:05,330
you're asking for is mostly tutorial

2268
01:59:02,060 --> 01:59:07,160
item as well so I think yeah I think

2269
01:59:05,330 --> 01:59:10,610
let's just add it I think if we can get

2270
01:59:07,160 --> 01:59:17,420
clearer if it terrifies the things why

2271
01:59:10,610 --> 01:59:20,650
why not do it so on and I would suggest

2272
01:59:17,420 --> 01:59:22,790
we just added for the politics probation

2273
01:59:20,650 --> 01:59:24,379
so according to my clock were out it

2274
01:59:22,790 --> 01:59:25,130
we're almost have time but lose says

2275
01:59:24,380 --> 01:59:27,260
we're out of time

2276
01:59:25,130 --> 01:59:28,550
she don't fully understand why it is

2277
01:59:27,260 --> 01:59:29,960
that you wouldn't be able to fill the

2278
01:59:28,550 --> 01:59:32,660
request so let's take a second on the

2279
01:59:29,960 --> 01:59:35,660
mailing list yeah and actually blue is

2280
01:59:32,660 --> 01:59:38,059
incorrect there is idem beverages and

2281
01:59:35,660 --> 01:59:40,490
snacks in the break time and we'll see

2282
01:59:38,060 --> 01:59:43,280
you in the room next door 20 minutes

2283
01:59:40,490 --> 01:59:47,530
okay yeah okay right all right your lips

2284
01:59:43,280 --> 01:59:49,730
but I right thanks Alex everyone

2285
01:59:47,530 --> 01:59:52,179
everyone whose remote will need to

2286
01:59:49,730 --> 01:59:52,179
rejoin

