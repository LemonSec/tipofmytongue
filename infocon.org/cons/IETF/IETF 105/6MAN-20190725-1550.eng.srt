1
00:00:07,510 --> 00:00:13,430
stirrers denote well that you have read

2
00:00:10,670 --> 00:00:17,420
and seen and know by now please close

3
00:00:13,430 --> 00:00:26,570
the doors if you don't mind and stop

4
00:00:17,420 --> 00:00:28,700
talking unless it's about an outro a

5
00:00:26,570 --> 00:00:31,369
repeat of the first session we have

6
00:00:28,700 --> 00:00:34,430
Barbara that is taking notes for us

7
00:00:31,369 --> 00:00:36,320
I believe shipping is take being the

8
00:00:34,430 --> 00:00:39,260
Jeffers Krab thank you very much

9
00:00:36,320 --> 00:00:41,629
blue sheets are going around here is the

10
00:00:39,260 --> 00:00:44,230
agenda we have two working group drafts

11
00:00:41,629 --> 00:00:46,839
it's the or so well

12
00:00:44,230 --> 00:00:49,160
items it's the fragmentation of router

13
00:00:46,840 --> 00:00:52,160
well and going through those together

14
00:00:49,160 --> 00:00:54,108
with the ad it's the press 64 work and

15
00:00:52,160 --> 00:00:56,510
we have a set of active individual

16
00:00:54,109 --> 00:00:59,629
drafts that we'll go through and then a

17
00:00:56,510 --> 00:01:02,239
set of lightning talks afterwards

18
00:00:59,629 --> 00:01:05,390
I also wanted to mention that during our

19
00:01:02,239 --> 00:01:09,350
working group chair meeting on Wednesday

20
00:01:05,390 --> 00:01:12,440
the RFC editor updated us on the RFC

21
00:01:09,350 --> 00:01:14,149
format project and this is something

22
00:01:12,440 --> 00:01:17,420
that is going to come to all authors

23
00:01:14,150 --> 00:01:19,250
that the format we're moving to be three

24
00:01:17,420 --> 00:01:22,460
of the format's so there's a new version

25
00:01:19,250 --> 00:01:24,740
of the XML to RFC tool and there's now

26
00:01:22,460 --> 00:01:27,679
some small changes including you know

27
00:01:24,740 --> 00:01:30,560
you can SVG graphics lists have changed

28
00:01:27,680 --> 00:01:35,530
a bit and you I can even put my surname

29
00:01:30,560 --> 00:01:39,050
incorrectly now with the Oh / of yours

30
00:01:35,530 --> 00:01:42,140
so I'll just make a document you know to

31
00:01:39,050 --> 00:01:47,870
prove that works okay Bob I think you

32
00:01:42,140 --> 00:01:54,350
are here's the clicker and please stand

33
00:01:47,870 --> 00:01:56,000
on the cross the target position so I'm

34
00:01:54,350 --> 00:02:00,710
going to talk about the fragmentation

35
00:01:56,000 --> 00:02:04,160
errata for RFC 8200 the ipv6 back that

36
00:02:00,710 --> 00:02:05,949
we did was it last year or in the year

37
00:02:04,160 --> 00:02:11,329
before that and the year before that

38
00:02:05,950 --> 00:02:13,220
so I RFC 8200 was published in as an

39
00:02:11,330 --> 00:02:17,740
Internet standard I guess it's just

40
00:02:13,220 --> 00:02:17,740
standard but July 2017

41
00:02:18,160 --> 00:02:25,930
and it included fragmentation updates

42
00:02:21,190 --> 00:02:28,300
from for RFC's and as the documentary

43
00:02:25,930 --> 00:02:32,970
was quite challenging to bring all that

44
00:02:28,300 --> 00:02:36,220
in and have coherent text and I think

45
00:02:32,970 --> 00:02:38,710
based on the errata I think they didn't

46
00:02:36,220 --> 00:02:41,290
we didn't quite succeed in doing that

47
00:02:38,710 --> 00:02:44,970
correctly but it required extensive

48
00:02:41,290 --> 00:02:51,220
changes to the fragmentation text and

49
00:02:44,970 --> 00:02:55,150
errata for over-many that is a bunch of

50
00:02:51,220 --> 00:02:56,370
errata were filed in you know October of

51
00:02:55,150 --> 00:02:59,050
the same year

52
00:02:56,370 --> 00:03:03,400
and it's taken a while to get around to

53
00:02:59,050 --> 00:03:07,180
look at them very closely so the the

54
00:03:03,400 --> 00:03:09,940
underlying problem is that the

55
00:03:07,180 --> 00:03:14,170
fragmentation offset defined as pointing

56
00:03:09,940 --> 00:03:16,870
to the fragmental part which was the way

57
00:03:14,170 --> 00:03:19,510
it's written in 20 in the you know the

58
00:03:16,870 --> 00:03:21,550
spec that we were updating should

59
00:03:19,510 --> 00:03:25,090
instead point to the extension and upper

60
00:03:21,550 --> 00:03:28,000
layer hair headers not not to the part

61
00:03:25,090 --> 00:03:30,910
after that and so in order to do this

62
00:03:28,000 --> 00:03:34,480
directly the text will need to change in

63
00:03:30,910 --> 00:03:36,910
four places that's actually what the

64
00:03:34,480 --> 00:03:39,040
work there was there's actually one that

65
00:03:36,910 --> 00:03:42,460
the errata missed or there should have

66
00:03:39,040 --> 00:03:46,900
been five Virata there were other

67
00:03:42,460 --> 00:03:52,330
changes proposed in the errata beyond

68
00:03:46,900 --> 00:03:54,850
fixing this problem so but let me first

69
00:03:52,330 --> 00:03:58,120
talk about the last errata that's the

70
00:03:54,850 --> 00:04:00,519
simplest one so the the auto proposed

71
00:03:58,120 --> 00:04:06,760
changing the figure of the reassemble

72
00:04:00,520 --> 00:04:09,910
packet from the the first the date the

73
00:04:06,760 --> 00:04:13,420
stuff after the extension and upper

74
00:04:09,910 --> 00:04:15,790
layer headers from first fragment data

75
00:04:13,420 --> 00:04:18,760
to first fragment I don't believe this

76
00:04:15,790 --> 00:04:22,420
is actually correct because it's not the

77
00:04:18,760 --> 00:04:24,070
whole first fragment it's the just part

78
00:04:22,420 --> 00:04:25,930
of it so I think it's actually correct

79
00:04:24,070 --> 00:04:26,290
to say data that's why it was done that

80
00:04:25,930 --> 00:04:29,410
way

81
00:04:26,290 --> 00:04:30,680
so I don't think that's a change we

82
00:04:29,410 --> 00:04:35,480
should make

83
00:04:30,680 --> 00:04:42,240
so I'm gonna go through the direct text

84
00:04:35,480 --> 00:04:44,690
changes based on Narada and and then we

85
00:04:42,240 --> 00:04:47,430
Olli and I have been looking at this and

86
00:04:44,690 --> 00:04:49,260
he meant to suggest in which I like that

87
00:04:47,430 --> 00:04:52,020
is a different way of solving this

88
00:04:49,260 --> 00:04:54,270
problem so the first one and this is the

89
00:04:52,020 --> 00:04:57,120
one that was missed it's on the it's on

90
00:04:54,270 --> 00:05:00,000
the first page of the document where it

91
00:04:57,120 --> 00:05:02,400
defines fragment offset and and that

92
00:05:00,000 --> 00:05:04,350
that also has the same problem so

93
00:05:02,400 --> 00:05:06,870
instead of relative start of the

94
00:05:04,350 --> 00:05:09,120
fragment fragmental part it should be

95
00:05:06,870 --> 00:05:11,490
relative to the start of the extension

96
00:05:09,120 --> 00:05:14,610
and upper layer headers I mean so the

97
00:05:11,490 --> 00:05:17,310
changes are mostly all like this the

98
00:05:14,610 --> 00:05:20,340
next one is on page eighteen second

99
00:05:17,310 --> 00:05:23,060
paragraph from the bottom again changing

100
00:05:20,340 --> 00:05:27,719
it to be relative to the start of the

101
00:05:23,060 --> 00:05:31,020
extension and upper layer headers and

102
00:05:27,720 --> 00:05:34,080
the third one it's also at the same same

103
00:05:31,020 --> 00:05:38,250
kind of change page 19 fourth paragraph

104
00:05:34,080 --> 00:05:44,520
from the bottom same sort of change and

105
00:05:38,250 --> 00:05:49,920
the last one is slightly different the

106
00:05:44,520 --> 00:05:52,080
first part changes in the same way so in

107
00:05:49,920 --> 00:05:53,910
this case it's adding extension an upper

108
00:05:52,080 --> 00:05:56,400
layer here instead of changing it it's

109
00:05:53,910 --> 00:05:59,790
because it it's referring to both and

110
00:05:56,400 --> 00:06:03,929
then you also thought rewriting the last

111
00:05:59,790 --> 00:06:06,030
sentence it's clearer if you say they

112
00:06:03,930 --> 00:06:13,620
reassemble the original package instead

113
00:06:06,030 --> 00:06:16,320
of fragmental part and the other related

114
00:06:13,620 --> 00:06:20,100
change that we if we're going in this

115
00:06:16,320 --> 00:06:21,900
direction to make would be on page 15

116
00:06:20,100 --> 00:06:26,160
second paragraph the next header

117
00:06:21,900 --> 00:06:28,440
definition its so instead of saying

118
00:06:26,160 --> 00:06:30,710
identify as the initial header type of

119
00:06:28,440 --> 00:06:33,510
the fragmental part it should say

120
00:06:30,710 --> 00:06:35,760
initial header type of the next header

121
00:06:33,510 --> 00:06:38,010
value that identifies the first at or

122
00:06:35,760 --> 00:06:41,750
after to the per fragment headers of the

123
00:06:38,010 --> 00:06:41,750
original packet as defined below

124
00:06:42,180 --> 00:06:51,850
so let's get the doors closed please so

125
00:06:48,270 --> 00:06:54,580
another approach I mean this text is

126
00:06:51,850 --> 00:06:59,320
very awkward

127
00:06:54,580 --> 00:07:04,109
and so this is actually all the credit

128
00:06:59,320 --> 00:07:07,300
for this and I like it a lot

129
00:07:04,110 --> 00:07:10,270
no for the a better way of writing and

130
00:07:07,300 --> 00:07:12,970
then what I I and well we all came up

131
00:07:10,270 --> 00:07:15,880
with since you all approved this and the

132
00:07:12,970 --> 00:07:18,310
ad reviewed this and the is G we've you

133
00:07:15,880 --> 00:07:24,639
know this sort of interesting that it

134
00:07:18,310 --> 00:07:27,250
got this far this way so the the problem

135
00:07:24,639 --> 00:07:29,070
was caused because we added extension

136
00:07:27,250 --> 00:07:32,800
and upper layer headers to the figures

137
00:07:29,070 --> 00:07:34,750
you know and a few places in the text so

138
00:07:32,800 --> 00:07:40,090
the the tail out of the text is talking

139
00:07:34,750 --> 00:07:48,100
about the figures and so the PID a--

140
00:07:40,090 --> 00:07:50,219
here is to fix that the the fix the

141
00:07:48,100 --> 00:07:55,300
place in the text where it actually

142
00:07:50,220 --> 00:07:57,220
tells you to put put the extension and

143
00:07:55,300 --> 00:08:00,570
upper letter hair headers is actually

144
00:07:57,220 --> 00:08:02,950
only in the circle it's like part two of

145
00:08:00,570 --> 00:08:03,729
the text where it says how to create

146
00:08:02,950 --> 00:08:05,590
fragments

147
00:08:03,729 --> 00:08:07,719
yeah or articularly how to create the

148
00:08:05,590 --> 00:08:11,530
first fragment and that's where it says

149
00:08:07,720 --> 00:08:13,930
it so all these observation was if you

150
00:08:11,530 --> 00:08:17,619
go back to the the text and the figures

151
00:08:13,930 --> 00:08:19,539
from before we did this change that it

152
00:08:17,620 --> 00:08:22,870
actually gets a lot simpler and you just

153
00:08:19,539 --> 00:08:24,460
add the words make it very clear in the

154
00:08:22,870 --> 00:08:28,720
text where you're creating the first

155
00:08:24,460 --> 00:08:30,820
fragment and so we took a cut at this so

156
00:08:28,720 --> 00:08:34,539
I have three page I don't can you read

157
00:08:30,820 --> 00:08:36,700
this okay well at least I think you can

158
00:08:34,539 --> 00:08:39,640
yes it's very clear on the screen up

159
00:08:36,700 --> 00:08:42,969
here and just do this from the agenda

160
00:08:39,640 --> 00:08:44,560
page yeah so these these slides are up

161
00:08:42,969 --> 00:08:48,010
on the agenda page if you want to look

162
00:08:44,560 --> 00:08:49,569
at them I mean where if you know we're

163
00:08:48,010 --> 00:08:52,390
obviously going to send this out to the

164
00:08:49,570 --> 00:08:54,279
list we're not just going to declare

165
00:08:52,390 --> 00:08:56,709
final approval here so

166
00:08:54,279 --> 00:09:00,999
you know but you could just use a shoe I

167
00:08:56,709 --> 00:09:03,670
think get the idea of that the you know

168
00:09:00,999 --> 00:09:10,569
the figure is now back to per fragment

169
00:09:03,670 --> 00:09:12,759
oh that's well sharper on my screen but

170
00:09:10,569 --> 00:09:14,529
yeah you can see it changes it it takes

171
00:09:12,759 --> 00:09:16,809
away the extension and upper layer

172
00:09:14,529 --> 00:09:19,389
headers and it's just talking about it

173
00:09:16,809 --> 00:09:22,769
the text and so you know and then

174
00:09:19,389 --> 00:09:26,670
there's also some changes to the text

175
00:09:22,769 --> 00:09:35,350
let me just go yeah if can you assume it

176
00:09:26,670 --> 00:09:38,229
back oh there we go that works we need

177
00:09:35,350 --> 00:09:40,389
to higher resolution displays yes so

178
00:09:38,230 --> 00:09:43,269
this is the next page and you can see

179
00:09:40,389 --> 00:09:50,769
it's these are just changing the figures

180
00:09:43,269 --> 00:09:53,980
and and then so the text in it sorry

181
00:09:50,769 --> 00:09:56,740
it's actually it's sort of the bullet

182
00:09:53,980 --> 00:09:58,480
three where it's a it starts talking

183
00:09:56,740 --> 00:10:00,790
about extension headers because that

184
00:09:58,480 --> 00:10:02,500
it's not just it's not just done in the

185
00:10:00,790 --> 00:10:06,309
I mean there is actual text that says

186
00:10:02,500 --> 00:10:10,000
what to do so move the this the

187
00:10:06,309 --> 00:10:14,290
paragraph that defines what these you

188
00:10:10,000 --> 00:10:16,930
know what of what except the extensions

189
00:10:14,290 --> 00:10:18,910
headers are and you know upper layer

190
00:10:16,930 --> 00:10:22,209
headers the definition that was a writ

191
00:10:18,910 --> 00:10:23,980
was in the current document earlier here

192
00:10:22,209 --> 00:10:25,839
but it fits here very well because you

193
00:10:23,980 --> 00:10:28,870
can see the beginning of that paragraph

194
00:10:25,839 --> 00:10:31,839
says extension headers if any and the

195
00:10:28,870 --> 00:10:33,490
upper layer headers so these you know

196
00:10:31,839 --> 00:10:35,259
and the headers must be in the first

197
00:10:33,490 --> 00:10:37,449
fragment that's that's the behavior

198
00:10:35,259 --> 00:10:41,980
we're looking for and then I think

199
00:10:37,449 --> 00:10:45,000
there's one more yeah and then this is

200
00:10:41,980 --> 00:10:47,410
also just makes the figure of what the

201
00:10:45,000 --> 00:10:51,370
reassemble packet looks like a lot

202
00:10:47,410 --> 00:10:53,709
simpler so and then yeah there's

203
00:10:51,370 --> 00:10:56,379
something at the end but that's just a

204
00:10:53,709 --> 00:10:59,349
remnant of me trying to produce a zero

205
00:10:56,379 --> 00:11:00,999
and uh no one draft to be able to see

206
00:10:59,350 --> 00:11:04,480
the changes to be able to do this diff

207
00:11:00,999 --> 00:11:06,610
so I I think this is a much better

208
00:11:04,480 --> 00:11:08,080
approach I think it actually makes the

209
00:11:06,610 --> 00:11:10,420
document simpler

210
00:11:08,080 --> 00:11:13,240
and but it's still correct and it still

211
00:11:10,420 --> 00:11:16,719
makes the check you know he continues to

212
00:11:13,240 --> 00:11:18,760
change that the the extension headers

213
00:11:16,720 --> 00:11:20,589
and the first upper layer header are in

214
00:11:18,760 --> 00:11:22,930
the first fragment just because that

215
00:11:20,589 --> 00:11:24,850
that was actually tacked it wasn't in

216
00:11:22,930 --> 00:11:26,709
the fig you know it wasn't the figures

217
00:11:24,850 --> 00:11:32,560
figures were there to illustrate it but

218
00:11:26,709 --> 00:11:36,489
it was you're actually go back I mean

219
00:11:32,560 --> 00:11:38,829
it's it's this you know item three that

220
00:11:36,490 --> 00:11:40,089
you know it's defining how to create the

221
00:11:38,829 --> 00:11:42,430
first fragment that's where the real

222
00:11:40,089 --> 00:11:44,680
protocol definition was and if you

223
00:11:42,430 --> 00:11:47,859
notice that's not there wasn't a problem

224
00:11:44,680 --> 00:11:49,599
with that text so it was the text that

225
00:11:47,860 --> 00:11:51,550
was trying to explain the figures and

226
00:11:49,600 --> 00:11:53,980
where the pieces were and that just gets

227
00:11:51,550 --> 00:11:55,990
a lot simpler if we go this way we

228
00:11:53,980 --> 00:12:00,149
unfortunately didn't figure this out the

229
00:11:55,990 --> 00:12:13,870
first time around okay so see if I can

230
00:12:00,149 --> 00:12:17,110
yeah you have to grow up that's pretty

231
00:12:13,870 --> 00:12:20,050
good so we think that the alternative

232
00:12:17,110 --> 00:12:22,750
approach is actually better than making

233
00:12:20,050 --> 00:12:24,930
the specific changes to the text which

234
00:12:22,750 --> 00:12:27,970
in some ways makes it more complicated

235
00:12:24,930 --> 00:12:31,270
we clearly think that the working group

236
00:12:27,970 --> 00:12:33,579
needs to review these carefully we don't

237
00:12:31,270 --> 00:12:35,709
want to do this again and it might

238
00:12:33,579 --> 00:12:39,010
actually be good for someone to spend

239
00:12:35,709 --> 00:12:41,680
some time and with you know the text

240
00:12:39,010 --> 00:12:44,439
that we agree to make sure actually go

241
00:12:41,680 --> 00:12:46,479
and see if improve it implement this and

242
00:12:44,440 --> 00:12:51,100
if it's if it works in the way it's

243
00:12:46,480 --> 00:12:54,880
supposed to Joe I agree with you because

244
00:12:51,100 --> 00:12:56,970
it seems like a sensible approach I'm

245
00:12:54,880 --> 00:13:00,579
just a little uncomfortable with

246
00:12:56,970 --> 00:13:08,040
publishing that thing that results as an

247
00:13:00,579 --> 00:13:11,290
errata so next slide it's a good point

248
00:13:08,040 --> 00:13:13,660
okay and so the and the other the errata

249
00:13:11,290 --> 00:13:15,310
5173 we think that should just be

250
00:13:13,660 --> 00:13:20,449
rejected and we don't think that's

251
00:13:15,310 --> 00:13:25,459
correct so yes so

252
00:13:20,450 --> 00:13:28,130
therefore I think thank you there I

253
00:13:25,459 --> 00:13:31,160
think four different ways we could go

254
00:13:28,130 --> 00:13:38,029
here how to handle this

255
00:13:31,160 --> 00:13:40,790
the first is and but so the first is to

256
00:13:38,029 --> 00:13:43,870
accept the errata with the changes here

257
00:13:40,790 --> 00:13:45,860
and and market held for document update

258
00:13:43,870 --> 00:13:48,290
we would need to figure out how to

259
00:13:45,860 --> 00:13:51,019
describe either just include a whole new

260
00:13:48,290 --> 00:13:53,660
section of text or or what the changes

261
00:13:51,019 --> 00:13:56,480
are and you know it's I mean you can

262
00:13:53,660 --> 00:14:00,310
imagine having a script that actually

263
00:13:56,480 --> 00:14:03,519
you apply to the old text but that's

264
00:14:00,310 --> 00:14:06,829
well maybe problematic

265
00:14:03,519 --> 00:14:08,510
maybe it but you know there are three

266
00:14:06,829 --> 00:14:12,229
different errata here so it's a little

267
00:14:08,510 --> 00:14:14,930
complicated the next approach is is to

268
00:14:12,230 --> 00:14:17,720
reject all of these errata create a new

269
00:14:14,930 --> 00:14:19,819
one that includes all of the text

270
00:14:17,720 --> 00:14:22,610
basically consolidated into one errata

271
00:14:19,820 --> 00:14:24,560
so someone looks at the RFC

272
00:14:22,610 --> 00:14:26,630
you know at least on the tools page or

273
00:14:24,560 --> 00:14:29,420
they look at the errata they will see

274
00:14:26,630 --> 00:14:34,250
the new text and and that i think has

275
00:14:29,420 --> 00:14:38,719
the nice part about tying the changes to

276
00:14:34,250 --> 00:14:42,279
the current spec and there is a new set

277
00:14:38,720 --> 00:14:45,019
of errata tools that are I think being

278
00:14:42,279 --> 00:14:46,490
I'm not sure the exact status but I

279
00:14:45,019 --> 00:14:50,899
think they're coming pretty soon and

280
00:14:46,490 --> 00:14:54,800
this may give us some better ability to

281
00:14:50,899 --> 00:14:58,310
do this the next approach is to publish

282
00:14:54,800 --> 00:15:02,329
a new RFC with you know basically an

283
00:14:58,310 --> 00:15:04,430
update that updates section 4.5 the part

284
00:15:02,329 --> 00:15:08,120
that defines the fragmentation header of

285
00:15:04,430 --> 00:15:11,630
8,200 you know it just says this

286
00:15:08,120 --> 00:15:14,300
replaces you know replace a section 4.5

287
00:15:11,630 --> 00:15:18,290
with this text you know so it would be a

288
00:15:14,300 --> 00:15:21,560
complete set and then the 8200 would

289
00:15:18,290 --> 00:15:24,589
point to the updating document and then

290
00:15:21,560 --> 00:15:27,670
the last change is to just do a whole

291
00:15:24,589 --> 00:15:32,100
RFC 8200 bits obviously it would be

292
00:15:27,670 --> 00:15:38,370
published with some other RFC number

293
00:15:32,100 --> 00:15:41,880
so my recommendation is to either either

294
00:15:38,370 --> 00:15:46,710
do the you know find the best way to do

295
00:15:41,880 --> 00:15:50,490
it in the errata system or publish a new

296
00:15:46,710 --> 00:15:52,350
RFC that updates 8200 of course I know

297
00:15:50,490 --> 00:15:54,510
there is of course

298
00:15:52,350 --> 00:15:56,460
do we want to deprecated fragmentation

299
00:15:54,510 --> 00:15:59,010
that would sort of solve this problem

300
00:15:56,460 --> 00:16:11,100
quite well you just say don't do this

301
00:15:59,010 --> 00:16:12,630
anymore but I really like the whole for

302
00:16:11,100 --> 00:16:14,420
document update like approve the era

303
00:16:12,630 --> 00:16:17,280
diocese like whole for document update

304
00:16:14,420 --> 00:16:18,540
and probably do the third thing after at

305
00:16:17,280 --> 00:16:20,430
some point if you want to do the update

306
00:16:18,540 --> 00:16:22,650
let's do it and one thing since you

307
00:16:20,430 --> 00:16:24,449
talked about the RFC like format changes

308
00:16:22,650 --> 00:16:26,400
to there's also like a project on going

309
00:16:24,450 --> 00:16:27,630
to do inline erotica so they are see

310
00:16:26,400 --> 00:16:30,150
yeah that's what I was talking about

311
00:16:27,630 --> 00:16:31,890
right like so I think it's if you do the

312
00:16:30,150 --> 00:16:33,449
verification first like make sure things

313
00:16:31,890 --> 00:16:35,160
stay like instead of filing anyone just

314
00:16:33,450 --> 00:16:37,200
like put it in the verifier notes maybe

315
00:16:35,160 --> 00:16:40,020
we can actually put it in and and

316
00:16:37,200 --> 00:16:41,820
approve it and then do the three if

317
00:16:40,020 --> 00:16:46,439
needed after that's that would be my

318
00:16:41,820 --> 00:16:48,780
preference okay so so Suresh since we

319
00:16:46,440 --> 00:16:50,850
have three or four router that is

320
00:16:48,780 --> 00:16:54,630
essentially for the same issue is are

321
00:16:50,850 --> 00:16:56,730
you proposing that we accept those for a

322
00:16:54,630 --> 00:16:58,380
router and putting you text in one of

323
00:16:56,730 --> 00:17:01,410
them although there were three there's

324
00:16:58,380 --> 00:17:03,060
three in the report so each of them so

325
00:17:01,410 --> 00:17:04,740
when you go and verify that already you

326
00:17:03,060 --> 00:17:06,240
can put a verifier note in there like

327
00:17:04,740 --> 00:17:08,459
which could suggest different text so I

328
00:17:06,240 --> 00:17:10,199
would put it in and say like hey this is

329
00:17:08,459 --> 00:17:10,800
the text to be used or something right

330
00:17:10,199 --> 00:17:13,320
in there

331
00:17:10,800 --> 00:17:15,149
so in three tens that I got of like what

332
00:17:13,319 --> 00:17:17,339
Fernando suggested and what we're

333
00:17:15,150 --> 00:17:19,220
putting in to solve the same thing like

334
00:17:17,339 --> 00:17:21,329
what we meant to say so

335
00:17:19,220 --> 00:17:22,709
that's what I think is the cleanest

336
00:17:21,329 --> 00:17:23,909
because like are we can close this and

337
00:17:22,709 --> 00:17:26,880
do the other one but I think it's like a

338
00:17:23,910 --> 00:17:30,270
little bit more overhead for me it was a

339
00:17:26,880 --> 00:17:32,400
one problem I think with the three is

340
00:17:30,270 --> 00:17:35,970
that there's no direct correlation

341
00:17:32,400 --> 00:17:37,860
between the three and a fix I mean

342
00:17:35,970 --> 00:17:39,720
there's there were more problems here

343
00:17:37,860 --> 00:17:42,780
you know found when when Bob and I

344
00:17:39,720 --> 00:17:44,610
reviewed this so you do you end up with

345
00:17:42,780 --> 00:17:46,170
three errata with the same revocation

346
00:17:44,610 --> 00:17:49,439
you know new text which could be a bit

347
00:17:46,170 --> 00:17:51,450
strange okay could you do one and point

348
00:17:49,440 --> 00:17:52,980
to that one to the other ones in a

349
00:17:51,450 --> 00:17:55,440
verification text or a subset but

350
00:17:52,980 --> 00:17:57,090
shouldn't be a problem we can talk about

351
00:17:55,440 --> 00:17:59,730
the logistics but the thing is like we

352
00:17:57,090 --> 00:18:01,799
say we know this is right this changes

353
00:17:59,730 --> 00:18:03,600
like you need to make a change and if

354
00:18:01,799 --> 00:18:04,920
you say verified like when the in line

355
00:18:03,600 --> 00:18:06,629
thing happens the other thing can

356
00:18:04,920 --> 00:18:08,790
proceed in paddle so like people can at

357
00:18:06,630 --> 00:18:10,710
least see this has been changed I just

358
00:18:08,790 --> 00:18:12,840
don't want to wait for three to happen

359
00:18:10,710 --> 00:18:15,540
and like you know wait for like let's

360
00:18:12,840 --> 00:18:17,309
say a year right or maybe faster right

361
00:18:15,540 --> 00:18:19,918
but I'm just expecting a year like for

362
00:18:17,309 --> 00:18:21,480
the whole thing no let's keep this very

363
00:18:19,919 --> 00:18:22,980
file and then people actually see

364
00:18:21,480 --> 00:18:24,870
there's error I exist when they go to

365
00:18:22,980 --> 00:18:26,250
the Odyssey page they're gonna see there

366
00:18:24,870 --> 00:18:29,699
are other exists and it's being verified

367
00:18:26,250 --> 00:18:31,770
right so you would suggest you take one

368
00:18:29,700 --> 00:18:33,240
hundred book Bob's suggested

369
00:18:31,770 --> 00:18:35,100
verification Tex that we run that

370
00:18:33,240 --> 00:18:36,840
through a cycle on the mailing list and

371
00:18:35,100 --> 00:18:40,590
and then we send it to you and ask for

372
00:18:36,840 --> 00:18:44,340
that to keep it in the yeah okay that's

373
00:18:40,590 --> 00:18:47,610
good and just so I can say it out loud

374
00:18:44,340 --> 00:18:50,580
and you do not recommend that we do in

375
00:18:47,610 --> 00:18:54,030
RFC 80 200 bits I think that would be

376
00:18:50,580 --> 00:18:56,370
bad and for the for Sarah for several

377
00:18:54,030 --> 00:18:59,460
reasons and it seems very excessive and

378
00:18:56,370 --> 00:19:01,559
once it's open it's gonna be we'll get

379
00:18:59,460 --> 00:19:08,580
the redo of a whole bunch of debates we

380
00:19:01,559 --> 00:19:11,120
got to do the last three years let's at

381
00:19:08,580 --> 00:19:16,740
least argue about new things

382
00:19:11,120 --> 00:19:20,309
yeah good any other questions so I think

383
00:19:16,740 --> 00:19:25,169
the the next step is to send out to the

384
00:19:20,309 --> 00:19:29,100
list you know I have now and nice I'll

385
00:19:25,169 --> 00:19:30,750
send out both up I'm not going to submit

386
00:19:29,100 --> 00:19:34,020
this as drafts but I'll send out the

387
00:19:30,750 --> 00:19:38,040
text you know the original text this new

388
00:19:34,020 --> 00:19:42,809
proposed text and a diff and we would

389
00:19:38,040 --> 00:19:45,330
like people to review it closely and see

390
00:19:42,809 --> 00:19:45,840
see if it's correct and we didn't miss

391
00:19:45,330 --> 00:19:47,520
anything

392
00:19:45,840 --> 00:19:49,559
yeah it would be great if two people

393
00:19:47,520 --> 00:19:52,340
different people could implement it as

394
00:19:49,559 --> 00:19:54,539
well yeah in the next fortnight please

395
00:19:52,340 --> 00:20:07,299
good thank you

396
00:19:54,539 --> 00:20:09,490
okay Jen you are up okay raise your hand

397
00:20:07,299 --> 00:20:11,440
if you have no idea what this draft is

398
00:20:09,490 --> 00:20:14,770
about Oh

399
00:20:11,440 --> 00:20:16,960
oh cool I need more slides it okay the

400
00:20:14,770 --> 00:20:20,309
wigs a long story short I hope you know

401
00:20:16,960 --> 00:20:22,570
what not six ways and dns64 is and

402
00:20:20,309 --> 00:20:25,660
unfortunately currently if I deploy not

403
00:20:22,570 --> 00:20:29,260
sixteen dns64 in the network some hosts

404
00:20:25,660 --> 00:20:30,700
might want to resynthesize themself for

405
00:20:29,260 --> 00:20:33,100
example if they oregano validating the

406
00:20:30,700 --> 00:20:36,250
resolvers on the host but they have no

407
00:20:33,100 --> 00:20:39,428
idea how to find out what prefix to use

408
00:20:36,250 --> 00:20:40,510
except using some tricky things like RFC

409
00:20:39,429 --> 00:20:42,820
70/50

410
00:20:40,510 --> 00:20:46,539
when you try to resolve ITV homely name

411
00:20:42,820 --> 00:20:50,168
get back what day and guess so probably

412
00:20:46,539 --> 00:20:51,940
that's what were our prefixes but in

413
00:20:50,169 --> 00:20:55,030
this case you use an assumption which

414
00:20:51,940 --> 00:20:57,669
you got from DNS to do DNS EXO it's a

415
00:20:55,030 --> 00:20:59,379
kind of I see some security here so what

416
00:20:57,669 --> 00:21:02,950
we trying to do we're trying to get an

417
00:20:59,380 --> 00:21:05,409
array option which will allow routers to

418
00:21:02,950 --> 00:21:06,789
tell hosts what not sixty-four prefix is

419
00:21:05,409 --> 00:21:08,260
used because it doesn't make sense

420
00:21:06,789 --> 00:21:11,169
because the router knows where

421
00:21:08,260 --> 00:21:14,320
throughout the prefix so it's a short

422
00:21:11,169 --> 00:21:17,230
story of the last two meetings so zero

423
00:21:14,320 --> 00:21:20,100
three which I just submitted a couple of

424
00:21:17,230 --> 00:21:24,880
hours ago actually not so many changes

425
00:21:20,100 --> 00:21:28,559
we add that support for non / 96

426
00:21:24,880 --> 00:21:31,870
prefixes in case someone I would need it

427
00:21:28,559 --> 00:21:37,149
so as discussed on the previous meeting

428
00:21:31,870 --> 00:21:40,689
we decided to have to option lengths if

429
00:21:37,150 --> 00:21:44,049
a prefixes / 96 then we have short

430
00:21:40,690 --> 00:21:47,950
option of length equal to and we only

431
00:21:44,049 --> 00:21:49,600
keep first 96 bits of the prefix but if

432
00:21:47,950 --> 00:21:52,330
we need longer prefix you just add

433
00:21:49,600 --> 00:21:54,549
prefix length at the very end and have

434
00:21:52,330 --> 00:21:56,830
some reader of bits so it would allow us

435
00:21:54,549 --> 00:22:00,610
to save some bits on the wire because

436
00:21:56,830 --> 00:22:02,530
somehow we have a feeling Z / 96 is the

437
00:22:00,610 --> 00:22:06,939
most common use case so in most cases

438
00:22:02,530 --> 00:22:09,060
you would not need the longer option it

439
00:22:06,940 --> 00:22:12,180
was a current of the mail

440
00:22:09,060 --> 00:22:14,190
about routers verifying what other

441
00:22:12,180 --> 00:22:19,620
routers are saying in Khan's assembly

442
00:22:14,190 --> 00:22:23,370
and actually it's in line with slack RFC

443
00:22:19,620 --> 00:22:26,100
48 61 which does recommend routers to

444
00:22:23,370 --> 00:22:28,800
verify option sent in array so we are

445
00:22:26,100 --> 00:22:31,770
the text which saying routers should

446
00:22:28,800 --> 00:22:34,680
look at other arrays received look if

447
00:22:31,770 --> 00:22:38,310
it's the same set of prefixes prefixes

448
00:22:34,680 --> 00:22:41,100
with nonzero lifetime prefix 0 lifetime

449
00:22:38,310 --> 00:22:43,320
don't do anything except maybe log it if

450
00:22:41,100 --> 00:22:45,240
you want because he obviously router

451
00:22:43,320 --> 00:22:47,550
should not make any conclusions but

452
00:22:45,240 --> 00:22:49,770
administrators might want to know is

453
00:22:47,550 --> 00:22:51,690
there some inconsistency texts

454
00:22:49,770 --> 00:22:53,730
explicitly says that if router knows

455
00:22:51,690 --> 00:22:55,830
about pvd's it should only compare

456
00:22:53,730 --> 00:23:01,620
information in the same implicit or

457
00:22:55,830 --> 00:23:03,540
explicit DVD so it will it was supposed

458
00:23:01,620 --> 00:23:06,389
to be unresolved issue slide but now

459
00:23:03,540 --> 00:23:09,120
it's kind of resolved if you slide mark

460
00:23:06,390 --> 00:23:13,740
Andrew suggested that we might want to

461
00:23:09,120 --> 00:23:17,699
have exclusion list which will tell host

462
00:23:13,740 --> 00:23:22,140
a set of v4 and v6 prefixes for which

463
00:23:17,700 --> 00:23:24,060
synthesis should not be done so at what

464
00:23:22,140 --> 00:23:28,710
actually it's not exactly correct slight

465
00:23:24,060 --> 00:23:30,870
admission last bits of the prefix here

466
00:23:28,710 --> 00:23:34,890
but here's a mock suggested to have to

467
00:23:30,870 --> 00:23:39,360
use this resource beats to a DNS name in

468
00:23:34,890 --> 00:23:42,510
DNS wire format so we've discussed it a

469
00:23:39,360 --> 00:23:44,129
bit so we believe that there is no real

470
00:23:42,510 --> 00:23:46,410
reason to keep those things in one

471
00:23:44,130 --> 00:23:50,160
option because it makes the option

472
00:23:46,410 --> 00:23:52,320
format a bit complicated which might

473
00:23:50,160 --> 00:23:54,780
actually slow down the implementation

474
00:23:52,320 --> 00:23:56,580
and deployment and also I personally

475
00:23:54,780 --> 00:23:59,310
have issues with a curator telling me

476
00:23:56,580 --> 00:24:02,490
that ipv6 is too complex and difficult

477
00:23:59,310 --> 00:24:08,820
to understand so I prefer to keep it

478
00:24:02,490 --> 00:24:11,700
simple and also exact semantics of what

479
00:24:08,820 --> 00:24:13,740
of this option and what host is supposed

480
00:24:11,700 --> 00:24:16,590
to do visit is not actually clear

481
00:24:13,740 --> 00:24:21,240
because there is an experimental RFC for

482
00:24:16,590 --> 00:24:21,830
APL and so via some clarification I

483
00:24:21,240 --> 00:24:24,710
would be

484
00:24:21,830 --> 00:24:28,580
required to explicitly specify the host

485
00:24:24,710 --> 00:24:30,769
behavior also actually this option it

486
00:24:28,580 --> 00:24:33,379
would be particularly useful in ipv6

487
00:24:30,769 --> 00:24:35,870
only networks in ipv6 only network if

488
00:24:33,380 --> 00:24:40,039
host decides not to do synthesis for a

489
00:24:35,870 --> 00:24:42,620
some names it's not clear what the hosts

490
00:24:40,039 --> 00:24:47,419
gonna do but there is no before

491
00:24:42,620 --> 00:24:49,309
connectivity end of story so also I did

492
00:24:47,419 --> 00:24:51,260
some math I might be wrong but it does

493
00:24:49,309 --> 00:24:52,789
not look like we actually save in bits

494
00:24:51,260 --> 00:24:57,110
on wire

495
00:24:52,789 --> 00:24:59,750
unless the DNS name is really short also

496
00:24:57,110 --> 00:25:03,019
it's a bit clearer for me if it's a good

497
00:24:59,750 --> 00:25:05,000
idea not to refer to have a down array

498
00:25:03,019 --> 00:25:07,669
of two experimental RFC in the standard

499
00:25:05,000 --> 00:25:10,039
track and also is like side-effect it's

500
00:25:07,669 --> 00:25:11,960
not really important but still if you

501
00:25:10,039 --> 00:25:14,899
have a separate option some systems

502
00:25:11,960 --> 00:25:17,450
might just prefer to still do 7050 or

503
00:25:14,899 --> 00:25:19,959
use PCP or whatever but still use this

504
00:25:17,450 --> 00:25:24,820
APL option from the network without

505
00:25:19,960 --> 00:25:30,080
actually supporting prefix one option so

506
00:25:24,820 --> 00:25:32,928
we discussed it with Mark and he just

507
00:25:30,080 --> 00:25:35,600
posted a draft I don't think it the

508
00:25:32,929 --> 00:25:40,159
draft made it to the six month mailing

509
00:25:35,600 --> 00:25:43,070
list but here is a reference so he

510
00:25:40,159 --> 00:25:46,940
proposed the separate array option for a

511
00:25:43,070 --> 00:25:48,529
pal so again as I said I don't think he

512
00:25:46,940 --> 00:25:52,159
forwarded the draft was a mailing list

513
00:25:48,529 --> 00:25:53,690
so probably just have a look and I am

514
00:25:52,159 --> 00:25:56,299
soliciting feedback on his behalf

515
00:25:53,690 --> 00:26:00,409
because he could not be in this room

516
00:25:56,299 --> 00:26:02,418
right now so the only thing in this case

517
00:26:00,409 --> 00:26:05,899
we are not kind of binding together not

518
00:26:02,419 --> 00:26:08,570
trying to get a brief brief six four and

519
00:26:05,899 --> 00:26:11,928
APL but again I really do not see the

520
00:26:08,570 --> 00:26:14,330
use case in situation when we need to

521
00:26:11,929 --> 00:26:18,440
have separate prefixes more than one

522
00:26:14,330 --> 00:26:20,418
prefix and separate APL lists honestly

523
00:26:18,440 --> 00:26:26,320
like real operational use case is

524
00:26:20,419 --> 00:26:30,020
unclear so mmm any comments questions

525
00:26:26,320 --> 00:26:33,610
otherwise maybe we think it might be

526
00:26:30,020 --> 00:26:33,610
ready for the a working group last call

527
00:26:33,850 --> 00:26:37,939
so could I get

528
00:26:35,360 --> 00:26:40,549
johannah people who would be willing to

529
00:26:37,940 --> 00:26:44,750
review and is interested in this to

530
00:26:40,549 --> 00:26:45,860
three really have liked a few more it's

531
00:26:44,750 --> 00:26:47,990
one in the back yeah

532
00:26:45,860 --> 00:26:53,299
one related draft since the last caller

533
00:26:47,990 --> 00:26:55,429
right yeah excellent okay good so we'll

534
00:26:53,299 --> 00:26:59,030
send out a working group last call for

535
00:26:55,429 --> 00:27:01,010
this draft and and ask for two old tears

536
00:26:59,030 --> 00:27:04,428
at least two to review thoroughly

537
00:27:01,010 --> 00:27:18,590
super Thank You Jen and the next one is

538
00:27:04,429 --> 00:27:20,299
gory he's here if you stay within the

539
00:27:18,590 --> 00:27:25,699
time limit so you can even get your

540
00:27:20,299 --> 00:27:29,150
adapter back thank you incentives okay

541
00:27:25,700 --> 00:27:32,929
so I'm sis fun it's three stories three

542
00:27:29,150 --> 00:27:35,179
Jumbo's and here's the great the Giant

543
00:27:32,929 --> 00:27:37,700
African elephant jumbo which is a big

544
00:27:35,179 --> 00:27:40,040
Victorian story or a big American story

545
00:27:37,700 --> 00:27:44,540
I hit with Barnum circus and we're going

546
00:27:40,040 --> 00:27:47,780
to talk about Ric to 675 I'm Corey my

547
00:27:44,540 --> 00:27:50,870
co-author is Tom and this is a story

548
00:27:47,780 --> 00:27:53,750
about the first jumbo jumbo frames jumbo

549
00:27:50,870 --> 00:27:56,299
frames are lovely they're very very

550
00:27:53,750 --> 00:28:00,500
exciting they're big Ethernet frames up

551
00:27:56,299 --> 00:28:02,809
to 9000 bytes jumbo frames exists one of

552
00:28:00,500 --> 00:28:05,510
the three Jumbo's I assist with I will

553
00:28:02,809 --> 00:28:06,970
insist does not exist but these ones do

554
00:28:05,510 --> 00:28:09,980
exist and we like them

555
00:28:06,970 --> 00:28:12,440
jumbo grams while jumbo grams are an

556
00:28:09,980 --> 00:28:15,350
ipv6 function where you can send a

557
00:28:12,440 --> 00:28:17,540
packet greater than 64 kilobytes you put

558
00:28:15,350 --> 00:28:21,559
that package into a frame are you sent

559
00:28:17,540 --> 00:28:24,770
across the network there we don't have a

560
00:28:21,559 --> 00:28:27,290
layer 2 that takes a 64 kilobyte frame

561
00:28:24,770 --> 00:28:30,049
or even a bigger one so it is a little

562
00:28:27,290 --> 00:28:34,100
bit difficult to transport and at one

563
00:28:30,049 --> 00:28:36,110
time in the world of ipv6 there was some

564
00:28:34,100 --> 00:28:38,959
link layers at least InfiniBand had a

565
00:28:36,110 --> 00:28:41,629
way of moving these packets and I don't

566
00:28:38,960 --> 00:28:45,440
believe they now do current status and

567
00:28:41,630 --> 00:28:47,720
to 675 is referenced by 17 RFC's there

568
00:28:45,440 --> 00:28:49,519
are three active internet drafts

569
00:28:47,720 --> 00:28:50,840
and in the transport area people keep

570
00:28:49,519 --> 00:28:52,340
asking us about than what they should

571
00:28:50,840 --> 00:28:56,658
say about them what they should do about

572
00:28:52,340 --> 00:28:57,350
them then our transport advices don't

573
00:28:56,659 --> 00:28:59,570
touch them

574
00:28:57,350 --> 00:29:00,709
at all because we don't have any checks

575
00:28:59,570 --> 00:29:02,178
since we don't have any protocols that

576
00:29:00,710 --> 00:29:03,529
are safe to use with them and we don't

577
00:29:02,179 --> 00:29:06,919
have any way of sending them so that

578
00:29:03,529 --> 00:29:08,990
makes them not very attractive Thomas a

579
00:29:06,919 --> 00:29:12,710
different viewpoint and Tom's at which

580
00:29:08,990 --> 00:29:14,740
with FreeBSD and he looks at the net dev

581
00:29:12,710 --> 00:29:17,000
cord and there's a whole pile of

582
00:29:14,740 --> 00:29:19,279
statements in there based on the RFC

583
00:29:17,000 --> 00:29:21,590
which are currently in your FreeBSD

584
00:29:19,279 --> 00:29:24,379
stack they don't want to maintain this

585
00:29:21,590 --> 00:29:25,699
code and they have some interesting

586
00:29:24,379 --> 00:29:27,980
comments so you can look on their list

587
00:29:25,700 --> 00:29:30,470
there they range from burning in fire or

588
00:29:27,980 --> 00:29:32,289
please remove it but we can't remove it

589
00:29:30,470 --> 00:29:36,700
because the RFC says it should be there

590
00:29:32,289 --> 00:29:40,250
but we can't send the packet so

591
00:29:36,700 --> 00:29:42,139
questions for six month the story of the

592
00:29:40,250 --> 00:29:45,440
Victorian jumbo is it got hit by a train

593
00:29:42,139 --> 00:29:49,070
and had a very sad ending should we

594
00:29:45,440 --> 00:29:52,250
continue to make RS try to make RC to

595
00:29:49,070 --> 00:29:53,840
675 historic this draft that I've talked

596
00:29:52,250 --> 00:29:55,580
about tries to make a historic by

597
00:29:53,840 --> 00:29:59,330
listing where it's used and what happens

598
00:29:55,580 --> 00:30:00,408
or should we leave ours to RC to 675

599
00:29:59,330 --> 00:30:07,039
alarm

600
00:30:00,409 --> 00:30:08,929
we have various opinions O'Brien this is

601
00:30:07,039 --> 00:30:11,750
all party my fault because at the time

602
00:30:08,929 --> 00:30:13,580
this was invented I was in charge of the

603
00:30:11,750 --> 00:30:16,009
networks at CERN where people were very

604
00:30:13,580 --> 00:30:17,840
concerned about extremely high data

605
00:30:16,009 --> 00:30:22,909
rates within the data center they still

606
00:30:17,840 --> 00:30:25,519
are by the way and this seemed like a

607
00:30:22,909 --> 00:30:29,720
wonderful idea because it matched very

608
00:30:25,519 --> 00:30:30,980
well what hippy and abandoned or one or

609
00:30:29,720 --> 00:30:34,399
two other technologies whose named

610
00:30:30,980 --> 00:30:36,860
Gordon scalable could here in him to

611
00:30:34,399 --> 00:30:41,418
connect I think I'm we're capable of

612
00:30:36,860 --> 00:30:44,508
doing the point is I don't buy the

613
00:30:41,419 --> 00:30:46,759
argument that this is damaging to BSD or

614
00:30:44,509 --> 00:30:49,159
any other stack implementation because

615
00:30:46,759 --> 00:30:51,110
this is an IDF standard which is

616
00:30:49,159 --> 00:30:53,570
entirely optional you don't have to

617
00:30:51,110 --> 00:30:56,629
support it if you do support it you have

618
00:30:53,570 --> 00:30:59,029
to do what it says in the RFC

619
00:30:56,629 --> 00:31:01,149
but if you don't support it you don't

620
00:30:59,029 --> 00:31:04,420
have to do anything

621
00:31:01,150 --> 00:31:06,340
right except you know if this particular

622
00:31:04,420 --> 00:31:09,190
format a packet arrives in your stack

623
00:31:06,340 --> 00:31:12,370
you send back an ICMP message if you can

624
00:31:09,190 --> 00:31:14,440
be bothered I suppose so I don't see why

625
00:31:12,370 --> 00:31:15,879
it's damaging to stack implementers

626
00:31:14,440 --> 00:31:19,230
unless they don't understand the

627
00:31:15,880 --> 00:31:22,240
voluntary nature of all IETF standards

628
00:31:19,230 --> 00:31:25,059
on the other hand the use case has never

629
00:31:22,240 --> 00:31:27,910
changed there are still people who want

630
00:31:25,059 --> 00:31:30,910
to do extremely high capacity transfers

631
00:31:27,910 --> 00:31:32,500
inside datacenters so this in the way I

632
00:31:30,910 --> 00:31:35,350
would just leave it exactly where it is

633
00:31:32,500 --> 00:31:37,990
and send a letter to the DSD developers

634
00:31:35,350 --> 00:31:46,149
pointing out what the laundry standard

635
00:31:37,990 --> 00:31:48,340
means hi I'm Bob so just to clarify and

636
00:31:46,150 --> 00:31:50,830
clean question based on what you said so

637
00:31:48,340 --> 00:31:54,250
regarding say the FreeBSD code is it a

638
00:31:50,830 --> 00:31:56,530
fair assumption that because there there

639
00:31:54,250 --> 00:31:59,350
are any links that you can test this

640
00:31:56,530 --> 00:32:01,629
with if the chance of this code actually

641
00:31:59,350 --> 00:32:05,230
working is sort of low because it hasn't

642
00:32:01,630 --> 00:32:07,330
been really exercised there are people

643
00:32:05,230 --> 00:32:09,010
who touch and chip on it so the code

644
00:32:07,330 --> 00:32:10,870
compiles it still goes through the

645
00:32:09,010 --> 00:32:12,910
checker but it does require you to

646
00:32:10,870 --> 00:32:15,040
allocate buffers and other things in

647
00:32:12,910 --> 00:32:16,059
ways that people don't really do because

648
00:32:15,040 --> 00:32:20,710
they don't really have any way of

649
00:32:16,059 --> 00:32:22,389
testing so when I wouldn't like to bet

650
00:32:20,710 --> 00:32:25,179
that the code works and it certainly

651
00:32:22,390 --> 00:32:29,440
hasn't been reviewed for about ten years

652
00:32:25,179 --> 00:32:32,320
or so yeah so it is very old code that

653
00:32:29,440 --> 00:32:38,610
is never exercised it's not actually

654
00:32:32,320 --> 00:32:38,610
used doesn't tend to get better so and

655
00:32:40,230 --> 00:32:46,450
networks I would vote for moving it to

656
00:32:43,960 --> 00:32:49,650
historic for a couple of reasons first

657
00:32:46,450 --> 00:32:52,330
the initial motivation for it you know

658
00:32:49,650 --> 00:32:54,700
although brian has a good point the

659
00:32:52,330 --> 00:32:56,919
initial motivation has gone away modern

660
00:32:54,700 --> 00:32:59,260
line cards can process many millions of

661
00:32:56,920 --> 00:33:01,390
packets per second there's really no

662
00:32:59,260 --> 00:33:04,420
need to send a packet that long you can

663
00:33:01,390 --> 00:33:10,090
send two packets second it's a good

664
00:33:04,420 --> 00:33:13,570
thing to reduce the real meat to fluff

665
00:33:10,090 --> 00:33:14,050
in the RFC series deprecating something

666
00:33:13,570 --> 00:33:16,210
that we don't

667
00:33:14,050 --> 00:33:17,260
actually use is a good thing and what's

668
00:33:16,210 --> 00:33:20,500
more doesn't this use a hop-by-hop

669
00:33:17,260 --> 00:33:23,470
option aren't these the options that we

670
00:33:20,500 --> 00:33:27,340
just emasculated maybe this is a good

671
00:33:23,470 --> 00:33:29,200
one to make historic well it probably

672
00:33:27,340 --> 00:33:35,649
only be used between a pair of lincoln

673
00:33:29,200 --> 00:33:41,220
points so but yeah yeah so I think I

674
00:33:35,650 --> 00:33:41,220
would more second Brian's Brian's point

675
00:33:41,820 --> 00:33:47,830
when I implemented v6 in iOS for Cisco

676
00:33:45,250 --> 00:33:49,810
it was unconceivable to implement this

677
00:33:47,830 --> 00:33:51,879
at all because we a we didn't have any

678
00:33:49,810 --> 00:33:53,889
buffers large enough nor they we sought

679
00:33:51,880 --> 00:33:58,150
any link layers they can do anything

680
00:33:53,890 --> 00:34:00,610
anywhere near this is there any way we

681
00:33:58,150 --> 00:34:03,430
could solve this you know either by

682
00:34:00,610 --> 00:34:04,959
creating an applicability RFC or you

683
00:34:03,430 --> 00:34:09,010
know make the message clear to

684
00:34:04,960 --> 00:34:12,490
implementers now that said IDF transport

685
00:34:09,010 --> 00:34:13,630
people would do this I explicitly say

686
00:34:12,489 --> 00:34:17,109
this is views in controlled environments

687
00:34:13,630 --> 00:34:18,880
and if you're doing it then be careful

688
00:34:17,110 --> 00:34:20,410
of these things like because we applied

689
00:34:18,880 --> 00:34:22,179
checksums which actually work over this

690
00:34:20,409 --> 00:34:24,009
chunk of data you're doing and beware of

691
00:34:22,179 --> 00:34:25,780
big buffers and then writing

692
00:34:24,010 --> 00:34:29,080
applicability RFC I don't know what you

693
00:34:25,780 --> 00:34:31,750
would do there are sort of funky stuff

694
00:34:29,080 --> 00:34:34,509
going on you know take container

695
00:34:31,750 --> 00:34:36,820
networking for example where you do you

696
00:34:34,510 --> 00:34:39,880
know plumb things on the same host and

697
00:34:36,820 --> 00:34:43,540
you might you know we certainly run that

698
00:34:39,880 --> 00:34:45,880
today with 64 km TAS you could certainly

699
00:34:43,540 --> 00:34:50,290
imagine someone wanting to do that with

700
00:34:45,880 --> 00:34:52,030
a you know 4 billion but kept you if

701
00:34:50,290 --> 00:34:53,800
they want to do so I mean I'm a little

702
00:34:52,030 --> 00:34:56,290
uncomfortable saying this is historic

703
00:34:53,800 --> 00:34:58,630
because you know brothers or oh can we

704
00:34:56,290 --> 00:35:01,060
make it some in some fashion that it

705
00:34:58,630 --> 00:35:02,770
doesn't you know create that harm and be

706
00:35:01,060 --> 00:35:06,720
thought that you have it in this

707
00:35:02,770 --> 00:35:09,220
particular implementation ok yeah

708
00:35:06,720 --> 00:35:16,029
Laurence Olivier I think the question is

709
00:35:09,220 --> 00:35:18,790
do we you know can we can we on historic

710
00:35:16,030 --> 00:35:20,130
eyes it if it wants its historic yeah

711
00:35:18,790 --> 00:35:22,830
just

712
00:35:20,130 --> 00:35:27,240
we would use an RFC no but to do it but

713
00:35:22,830 --> 00:35:29,430
that's not that difficult I don't think

714
00:35:27,240 --> 00:35:32,459
we can understand an RC number that

715
00:35:29,430 --> 00:35:34,379
we've made historic which is the change

716
00:35:32,460 --> 00:35:36,030
we could start exchanging okay whatever

717
00:35:34,380 --> 00:35:37,590
all right coming out there but I don't

718
00:35:36,030 --> 00:35:39,780
see this happening the next 20 years

719
00:35:37,590 --> 00:35:41,550
maybe but you know maybe after that the

720
00:35:39,780 --> 00:35:43,470
question is do we run out of v6 space

721
00:35:41,550 --> 00:35:49,530
before this becomes relevant that's what

722
00:35:43,470 --> 00:35:51,270
yeah so how much work is it to making

723
00:35:49,530 --> 00:35:53,190
historic do we need to use up a lot of

724
00:35:51,270 --> 00:35:57,870
working group time and like to ITF last

725
00:35:53,190 --> 00:36:00,030
call and that's three mice to do this is

726
00:35:57,870 --> 00:36:04,410
Mary Carpenter again I just like to read

727
00:36:00,030 --> 00:36:07,200
the relevant paragraph RFC 275 says the

728
00:36:04,410 --> 00:36:09,899
jumbo payload option is relevant only

729
00:36:07,200 --> 00:36:12,680
for ipv6 nodes that may be attached to

730
00:36:09,900 --> 00:36:20,310
links with a link into use greater than

731
00:36:12,680 --> 00:36:24,810
65,000 575 octet yes that is 65535 plus

732
00:36:20,310 --> 00:36:28,230
40 the yumbo payload option need not be

733
00:36:24,810 --> 00:36:30,299
implemented or understood by ipv6 modes

734
00:36:28,230 --> 00:36:34,020
that do not support a touching into

735
00:36:30,300 --> 00:36:37,230
links with MTU greater than 65,000 575

736
00:36:34,020 --> 00:36:39,540
so you know I don't understand why

737
00:36:37,230 --> 00:36:41,700
anybody including a BSD developer would

738
00:36:39,540 --> 00:36:44,460
bother to implement this thing unless

739
00:36:41,700 --> 00:36:49,560
they have to influence a driver for a

740
00:36:44,460 --> 00:36:51,960
link that supports 65,000 576 bytes you

741
00:36:49,560 --> 00:36:53,850
know that's why I don't understand why

742
00:36:51,960 --> 00:36:55,620
we need to do anything except point the

743
00:36:53,850 --> 00:36:57,390
BSD people to a paragraph which says

744
00:36:55,620 --> 00:37:01,109
don't bother with this it's not your

745
00:36:57,390 --> 00:37:02,609
problem this conversation will probably

746
00:37:01,110 --> 00:37:04,530
be noted and we could probably make

747
00:37:02,610 --> 00:37:06,120
results on the basis of what's being

748
00:37:04,530 --> 00:37:12,900
talked about right now when we get to

749
00:37:06,120 --> 00:37:14,220
Sirach that comment also say that even

750
00:37:12,900 --> 00:37:15,420
though there may not be links that where

751
00:37:14,220 --> 00:37:19,470
this could be transmitted there might be

752
00:37:15,420 --> 00:37:22,770
like loopback virtual kind of links

753
00:37:19,470 --> 00:37:24,899
right that is where the where we tested

754
00:37:22,770 --> 00:37:26,460
the code and found the horrible problems

755
00:37:24,900 --> 00:37:28,800
that occurred when you did try and use

756
00:37:26,460 --> 00:37:31,050
it in loopback and try and do the buffer

757
00:37:28,800 --> 00:37:33,390
management and what the heck and all the

758
00:37:31,050 --> 00:37:36,300
other gremlins that crept in which is

759
00:37:33,390 --> 00:37:39,359
where this story started it is indeed

760
00:37:36,300 --> 00:37:40,200
testable thank you right and does it

761
00:37:39,360 --> 00:37:45,060
what yeah whatever

762
00:37:40,200 --> 00:37:48,750
yep whatever you build it house when you

763
00:37:45,060 --> 00:37:55,490
doing you'd be well-advised please

764
00:37:48,750 --> 00:37:58,580
please do that yeah I'm waiting for

765
00:37:55,490 --> 00:38:03,120
anyone to step up and say I'm using this

766
00:37:58,580 --> 00:38:05,100
and I I don't expect there is anyone I'm

767
00:38:03,120 --> 00:38:07,560
not a big fan of leaving that specs

768
00:38:05,100 --> 00:38:10,080
around and those counters at that spec I

769
00:38:07,560 --> 00:38:12,180
think and even if one person uses this I

770
00:38:10,080 --> 00:38:16,080
think they're okay with implementing an

771
00:38:12,180 --> 00:38:20,990
historic RFC so I rather have it moved

772
00:38:16,080 --> 00:38:20,990
to historic just to flag that yeah

773
00:38:21,770 --> 00:38:29,759
suresh krisshnan no hat no hat no what

774
00:38:27,090 --> 00:38:31,380
so I think you should just let it be

775
00:38:29,760 --> 00:38:34,530
like don't do anything I think like I'm

776
00:38:31,380 --> 00:38:36,060
happy like it's it's clearly says if you

777
00:38:34,530 --> 00:38:37,290
if you don't have to do it or if you

778
00:38:36,060 --> 00:38:39,240
don't have the capability of doing it

779
00:38:37,290 --> 00:38:41,520
don't do it and if somebody tries says

780
00:38:39,240 --> 00:38:42,629
with like large MTU is like one thing I

781
00:38:41,520 --> 00:38:44,880
was like specifically talking about

782
00:38:42,630 --> 00:38:47,640
other stuff like I've seen stuff using

783
00:38:44,880 --> 00:38:49,170
memmio like for like doing like

784
00:38:47,640 --> 00:38:51,060
container pipelines that could

785
00:38:49,170 --> 00:38:53,520
potentially use this and if this breaks

786
00:38:51,060 --> 00:38:55,620
horribly somebody needs to fix it right

787
00:38:53,520 --> 00:38:58,620
rather than taking it away so I would

788
00:38:55,620 --> 00:39:00,600
just say let it be and then if something

789
00:38:58,620 --> 00:39:01,950
breaks we fix it like I think it's an

790
00:39:00,600 --> 00:39:05,130
implementation that needs to get fixed

791
00:39:01,950 --> 00:39:07,410
if it uses it so but I mean the ad hat

792
00:39:05,130 --> 00:39:08,700
on whatever the most loop does I would

793
00:39:07,410 --> 00:39:10,350
probably go for the status change

794
00:39:08,700 --> 00:39:13,140
documents as a way of doing it I think

795
00:39:10,350 --> 00:39:15,210
he was option number yeah yeah it's the

796
00:39:13,140 --> 00:39:17,549
easiest way it's completely out of pan

797
00:39:15,210 --> 00:39:19,980
so I don't need an ID to go through the

798
00:39:17,550 --> 00:39:23,550
process and at this point I'd debug this

799
00:39:19,980 --> 00:39:25,710
I did this for IP version 5 and 7 and 9

800
00:39:23,550 --> 00:39:27,540
and so on so I I know the process now

801
00:39:25,710 --> 00:39:29,820
and I'm around for a bit so I'll just

802
00:39:27,540 --> 00:39:31,710
make sure if this gets done and now even

803
00:39:29,820 --> 00:39:33,090
goes to Ayane to mark it as historic so

804
00:39:31,710 --> 00:39:35,220
previously the process was never tested

805
00:39:33,090 --> 00:39:36,630
Vienna never marked those things as he's

806
00:39:35,220 --> 00:39:38,879
starting because they never got a review

807
00:39:36,630 --> 00:39:42,270
me so now it's all debug and we can do

808
00:39:38,880 --> 00:39:43,950
that okay and we need to decide what to

809
00:39:42,270 --> 00:39:46,440
do with other documents as they appear

810
00:39:43,950 --> 00:39:49,319
in reference this as well because

811
00:39:46,440 --> 00:39:50,430
and people are still writing transport

812
00:39:49,319 --> 00:39:53,520
documents saying that you have to

813
00:39:50,430 --> 00:39:55,470
support this which kind of like and good

814
00:39:53,520 --> 00:39:57,300
weight which is super but they don't

815
00:39:55,470 --> 00:39:59,450
consider the checksum or any of you the

816
00:39:57,300 --> 00:40:02,940
other implications that go with it so

817
00:39:59,450 --> 00:40:07,160
yeah so think about that and I'm I'll

818
00:40:02,940 --> 00:40:09,750
take this output wake up from here of

819
00:40:07,160 --> 00:40:12,779
the achievements at least at references

820
00:40:09,750 --> 00:40:15,660
because that has to be cleared up okay

821
00:40:12,780 --> 00:40:18,210
can I just just I would support a short

822
00:40:15,660 --> 00:40:21,029
document saying that basically all right

823
00:40:18,210 --> 00:40:22,890
yeah we should update two to six seven

824
00:40:21,030 --> 00:40:25,380
five so who appear in the record and

825
00:40:22,890 --> 00:40:31,650
would say you know by the way this what

826
00:40:25,380 --> 00:40:33,180
that means is don't do this it seriously

827
00:40:31,650 --> 00:40:35,069
then it would appear as an updates you

828
00:40:33,180 --> 00:40:37,529
could point you talking pelisek as a

829
00:40:35,069 --> 00:40:42,390
parent RFC and Brian a shim you're

830
00:40:37,530 --> 00:40:44,430
willing to help co-author that if I if

831
00:40:42,390 --> 00:40:51,180
we were to write it would you help us do

832
00:40:44,430 --> 00:40:53,970
it right fine take my adapter please

833
00:40:51,180 --> 00:40:57,029
take your adapter take it thanks a lot

834
00:40:53,970 --> 00:40:59,640
for lending your night I think if I

835
00:40:57,030 --> 00:41:12,510
remember correctly it is wrong that is

836
00:40:59,640 --> 00:41:14,640
up yes okay Ron Bonica and I've got

837
00:41:12,510 --> 00:41:16,650
three drafts in this working group one

838
00:41:14,640 --> 00:41:21,960
about a compressed routing header one

839
00:41:16,650 --> 00:41:24,119
about a destination option to be

840
00:41:21,960 --> 00:41:27,510
executed at the end of a segment routing

841
00:41:24,119 --> 00:41:28,680
path one about one to be executed in the

842
00:41:27,510 --> 00:41:31,190
middle of a segment at the end of a

843
00:41:28,680 --> 00:41:33,540
segment in a segment routing path and

844
00:41:31,190 --> 00:41:35,190
this time around I wrote an overview

845
00:41:33,540 --> 00:41:36,560
document explaining what these three

846
00:41:35,190 --> 00:41:38,369
things are doing and why they exist

847
00:41:36,560 --> 00:41:43,440
we're gonna go through the overview

848
00:41:38,369 --> 00:41:44,730
document for a little bit so we have

849
00:41:43,440 --> 00:41:48,839
these things called segment routing

850
00:41:44,730 --> 00:41:50,819
paths they provide connectivity from an

851
00:41:48,839 --> 00:41:53,990
ingress to an egress and they contain

852
00:41:50,819 --> 00:41:56,600
segments there are instructions

853
00:41:53,990 --> 00:41:58,600
associated with each segment

854
00:41:56,600 --> 00:42:01,009
there are two kinds of instructions

855
00:41:58,600 --> 00:42:03,259
topological instructions and service

856
00:42:01,010 --> 00:42:06,710
instructions so let's talk about

857
00:42:03,260 --> 00:42:09,650
topological instructions every segment

858
00:42:06,710 --> 00:42:12,350
in an SR path is associated with exactly

859
00:42:09,650 --> 00:42:15,530
one topological instruction it's

860
00:42:12,350 --> 00:42:18,350
executed at the segment ingress node it

861
00:42:15,530 --> 00:42:21,260
determines what the segment egress node

862
00:42:18,350 --> 00:42:23,600
is and how the segment ingress routes

863
00:42:21,260 --> 00:42:25,820
the packet to the segment egress either

864
00:42:23,600 --> 00:42:29,299
strict or suit loose source routing and

865
00:42:25,820 --> 00:42:32,150
some details what it does is what the

866
00:42:29,300 --> 00:42:34,250
instruction does is it overwrites the

867
00:42:32,150 --> 00:42:35,690
destination address and it forwards

868
00:42:34,250 --> 00:42:38,360
either through an interface or through

869
00:42:35,690 --> 00:42:40,520
the least-cost path and we encode and

870
00:42:38,360 --> 00:42:42,620
code this in an ipv6 routing header

871
00:42:40,520 --> 00:42:46,190
you've seen that presentation before

872
00:42:42,620 --> 00:42:47,750
it's the compressed routing header then

873
00:42:46,190 --> 00:42:51,050
we have these things called service

874
00:42:47,750 --> 00:42:54,170
instructions they augment a path they

875
00:42:51,050 --> 00:42:56,420
don't define a path and we have two

876
00:42:54,170 --> 00:42:59,600
kinds of certain service instructions

877
00:42:56,420 --> 00:43:02,830
per segment service instructions that

878
00:42:59,600 --> 00:43:05,509
can be executed at any segment end point

879
00:43:02,830 --> 00:43:07,220
they typically don't influence routing

880
00:43:05,510 --> 00:43:07,610
they don't influence whether you go left

881
00:43:07,220 --> 00:43:10,520
or right

882
00:43:07,610 --> 00:43:13,370
some examples are expose a packet to a

883
00:43:10,520 --> 00:43:16,970
firewall policy or expose a packet to a

884
00:43:13,370 --> 00:43:19,730
sampling policy we encode those in a

885
00:43:16,970 --> 00:43:21,319
destination option header that precedes

886
00:43:19,730 --> 00:43:22,970
the routing header we just talked about

887
00:43:21,320 --> 00:43:25,130
why do we do that

888
00:43:22,970 --> 00:43:28,660
because the destination option header is

889
00:43:25,130 --> 00:43:30,920
processed at the egress of each segment

890
00:43:28,660 --> 00:43:33,649
then we have per path service

891
00:43:30,920 --> 00:43:35,540
instructions they're executed on the

892
00:43:33,650 --> 00:43:38,960
path egress node on the aggressive the

893
00:43:35,540 --> 00:43:41,650
final segment they typically de

894
00:43:38,960 --> 00:43:45,770
encapsulate the packet and D multiplex

895
00:43:41,650 --> 00:43:48,410
the payload an example D encapsulate a

896
00:43:45,770 --> 00:43:52,759
packet and forward the payload through

897
00:43:48,410 --> 00:43:55,190
this interface into this VPN typically

898
00:43:52,760 --> 00:43:58,100
they look an awful lot like MPLS service

899
00:43:55,190 --> 00:44:01,040
instructions and l3 VPNs or an e VPNs or

900
00:43:58,100 --> 00:44:03,500
something like that and we encode those

901
00:44:01,040 --> 00:44:06,080
in a destination option the header that

902
00:44:03,500 --> 00:44:08,240
precedes the upper layer header why did

903
00:44:06,080 --> 00:44:10,360
we choose to encode them there because

904
00:44:08,240 --> 00:44:13,149
the destination option header that

905
00:44:10,360 --> 00:44:16,330
ADEs the upper layer header is processed

906
00:44:13,150 --> 00:44:18,160
on exactly the right node on the path

907
00:44:16,330 --> 00:44:22,420
egress or on the aggressive the cut

908
00:44:18,160 --> 00:44:24,129
glass segment now why did we go through

909
00:44:22,420 --> 00:44:25,810
such pains to decouple service

910
00:44:24,130 --> 00:44:30,750
instructions from topological

911
00:44:25,810 --> 00:44:30,750
instructions okay um

912
00:44:32,970 --> 00:44:38,649
one reason is so that we could use the

913
00:44:35,650 --> 00:44:41,830
right header for the right kind of

914
00:44:38,650 --> 00:44:43,900
instruction when we compare topological

915
00:44:41,830 --> 00:44:45,580
instructions with routing headers they

916
00:44:43,900 --> 00:44:47,080
book they're both intended to affect

917
00:44:45,580 --> 00:44:49,660
routing that's why they're called

918
00:44:47,080 --> 00:44:52,210
routing headers and they're executed on

919
00:44:49,660 --> 00:44:55,660
the segment ingress node why did we use

920
00:44:52,210 --> 00:44:58,420
the do h preceding the routing header

921
00:44:55,660 --> 00:45:01,540
for person segment instructions because

922
00:44:58,420 --> 00:45:05,100
they're executed on the right node same

923
00:45:01,540 --> 00:45:07,240
same question for the destination header

924
00:45:05,100 --> 00:45:09,580
preceding the upper layer header for per

925
00:45:07,240 --> 00:45:11,680
path instructions it's because they're

926
00:45:09,580 --> 00:45:19,029
executed on the node where we want them

927
00:45:11,680 --> 00:45:22,410
to be executed in we call this SR v6 +

928
00:45:19,030 --> 00:45:26,440
but in this formulation we have

929
00:45:22,410 --> 00:45:29,859
simplified identifier semantics in SR b6

930
00:45:26,440 --> 00:45:34,300
and SRV 6 plus we have this concept of a

931
00:45:29,860 --> 00:45:36,630
CID I'm sorry we have this concept first

932
00:45:34,300 --> 00:45:38,710
of a service instruction identifier a

933
00:45:36,630 --> 00:45:41,200
service instruction identifier

934
00:45:38,710 --> 00:45:42,850
identifies a service instruction it

935
00:45:41,200 --> 00:45:46,299
appears in the destination option header

936
00:45:42,850 --> 00:45:50,319
and it's not polluted with CID or ipv6

937
00:45:46,300 --> 00:45:52,780
address semantics we have a CID that

938
00:45:50,320 --> 00:45:55,240
identifies a topological instruction it

939
00:45:52,780 --> 00:45:59,130
appears in the RH and only in the RH and

940
00:45:55,240 --> 00:46:01,899
it's not polluted with SII or ipv6

941
00:45:59,130 --> 00:46:04,230
semantics we also have an ipv6 address

942
00:46:01,900 --> 00:46:06,990
that appears only in the ipv6 header and

943
00:46:04,230 --> 00:46:09,790
it's not polluted with Sid or SII

944
00:46:06,990 --> 00:46:12,669
semantics it has exactly the semantics

945
00:46:09,790 --> 00:46:15,840
from the ipv6 addressing architecture an

946
00:46:12,670 --> 00:46:18,880
ipv6 address identifies an interface and

947
00:46:15,840 --> 00:46:21,520
we're very careful never to copy an

948
00:46:18,880 --> 00:46:23,660
identifier of one type to a field that's

949
00:46:21,520 --> 00:46:26,809
meant for an another type

950
00:46:23,660 --> 00:46:30,348
for instance we have SIDS in the routing

951
00:46:26,809 --> 00:46:32,089
header we never copy a Sid to a

952
00:46:30,349 --> 00:46:33,530
destination address in fact they're

953
00:46:32,089 --> 00:46:36,200
different lengths we couldn't do it if

954
00:46:33,530 --> 00:46:38,329
we wanted to why do we do that well it's

955
00:46:36,200 --> 00:46:41,839
the same reason you don't copy a pointer

956
00:46:38,329 --> 00:46:43,819
of one type to a field that dereferences

957
00:46:41,839 --> 00:46:47,720
through another type it's kind of asking

958
00:46:43,819 --> 00:46:54,980
for trouble so what is the cost benefit

959
00:46:47,720 --> 00:46:59,180
analysis here well the cost is because

960
00:46:54,980 --> 00:47:01,730
our SIDS are different from our from an

961
00:46:59,180 --> 00:47:04,399
ipv6 address we have a layer of another

962
00:47:01,730 --> 00:47:06,730
layer of indirection a SID is a key into

963
00:47:04,400 --> 00:47:09,920
a data structure we call it a SID fib

964
00:47:06,730 --> 00:47:12,470
the SID fib Maps acid' to an ipv6

965
00:47:09,920 --> 00:47:15,380
address and an instruction you do a

966
00:47:12,470 --> 00:47:17,419
lookup and the SID and the S fib you

967
00:47:15,380 --> 00:47:20,900
find the address and you copy the ipv6

968
00:47:17,420 --> 00:47:23,720
address field to the destination address

969
00:47:20,900 --> 00:47:29,410
of the ipv6 header we have one more

970
00:47:23,720 --> 00:47:32,270
routing header type the you know the CRH

971
00:47:29,410 --> 00:47:34,879
albeit it's it's a simpler one it has

972
00:47:32,270 --> 00:47:37,538
fewer fields than the SRH and we have

973
00:47:34,880 --> 00:47:40,579
two new destination options one to carry

974
00:47:37,539 --> 00:47:45,829
segment instructions one to carry path

975
00:47:40,579 --> 00:47:48,770
instructions benefits ping okay half my

976
00:47:45,829 --> 00:47:51,470
time is up okay we've already talked

977
00:47:48,770 --> 00:47:54,410
about the rh @ simplified no tag no tlvs

978
00:47:51,470 --> 00:47:56,450
the SID identifies an instruction it

979
00:47:54,410 --> 00:47:58,339
does not contain an instruction so it

980
00:47:56,450 --> 00:48:01,279
can be encoded in relatively few bits

981
00:47:58,339 --> 00:48:03,230
and because the SID is short the routing

982
00:48:01,279 --> 00:48:06,500
header can be short even when it

983
00:48:03,230 --> 00:48:08,839
contains very very many segments in the

984
00:48:06,500 --> 00:48:10,789
SID list and there's no need to augment

985
00:48:08,839 --> 00:48:13,520
OAM because the only thing that ever

986
00:48:10,789 --> 00:48:15,680
appears in a destination address is an

987
00:48:13,520 --> 00:48:18,470
IP address so ping and traceroute all

988
00:48:15,680 --> 00:48:20,960
that stuff works the other good thing is

989
00:48:18,470 --> 00:48:24,288
you can mix and match you can use the

990
00:48:20,960 --> 00:48:26,809
routing header Terrell but you can use a

991
00:48:24,289 --> 00:48:28,609
V n ni 2d multiplex if you don't want to

992
00:48:26,809 --> 00:48:31,250
use the destination option so if you're

993
00:48:28,609 --> 00:48:33,799
doing evpn you could have an ipv6 header

994
00:48:31,250 --> 00:48:35,930
followed by a routing header for traffic

995
00:48:33,799 --> 00:48:38,140
engineering followed by a VPN and I if

996
00:48:35,930 --> 00:48:42,529
you want to do just plain ol DV

997
00:48:38,140 --> 00:48:44,540
or let's say you don't want to use a VN

998
00:48:42,530 --> 00:48:49,310
and I but you want the path the track of

999
00:48:44,540 --> 00:48:50,660
traffic to take the least-cost path ipv6

1000
00:48:49,310 --> 00:48:52,160
header with a destination hop shut

1001
00:48:50,660 --> 00:48:53,990
option you don't need the routing header

1002
00:48:52,160 --> 00:48:57,049
decoupling you can use only what you

1003
00:48:53,990 --> 00:48:59,439
need overall simplicity the existing

1004
00:48:57,050 --> 00:49:06,200
drafts kind of cover the entire subject

1005
00:48:59,440 --> 00:49:09,770
here's a little comparison of CRH

1006
00:49:06,200 --> 00:49:14,689
lengths per said vs. SRH lengths now

1007
00:49:09,770 --> 00:49:17,570
granted in the last two weeks there have

1008
00:49:14,690 --> 00:49:21,740
been two proposals for making the SRH

1009
00:49:17,570 --> 00:49:24,680
more compact so those numbers are a

1010
00:49:21,740 --> 00:49:27,319
little bit old but they were correct the

1011
00:49:24,680 --> 00:49:35,180
day I wrote the slides about nine days

1012
00:49:27,320 --> 00:49:38,180
ago we have a couple implementations one

1013
00:49:35,180 --> 00:49:39,680
in Linux and it has the control plane

1014
00:49:38,180 --> 00:49:42,259
whether dices and all that good stuff

1015
00:49:39,680 --> 00:49:46,399
we have a Juno's proof of concept coming

1016
00:49:42,260 --> 00:49:48,620
soon and the next steps are to progress

1017
00:49:46,400 --> 00:49:50,900
the drafts I'm not even going to ask for

1018
00:49:48,620 --> 00:49:54,130
that because the first one has to go

1019
00:49:50,900 --> 00:49:58,250
first through spring anyhow questions

1020
00:49:54,130 --> 00:49:59,810
yeah so just add I mean so we went to

1021
00:49:58,250 --> 00:50:02,150
the spring working group where you

1022
00:49:59,810 --> 00:50:02,450
presented same a good time was had by

1023
00:50:02,150 --> 00:50:05,180
all

1024
00:50:02,450 --> 00:50:10,339
yes so I mean I didn't seem like there

1025
00:50:05,180 --> 00:50:12,350
was a lot of enthusiasm just to take

1026
00:50:10,340 --> 00:50:14,930
this on in spring or at least now or

1027
00:50:12,350 --> 00:50:17,839
something so there have been discussions

1028
00:50:14,930 --> 00:50:22,690
since the group ok well that's good but

1029
00:50:17,840 --> 00:50:25,460
that's not you know for us to spend a

1030
00:50:22,690 --> 00:50:26,720
significant time on this I think you

1031
00:50:25,460 --> 00:50:30,920
know we're gonna need to hear from

1032
00:50:26,720 --> 00:50:35,299
spring that it's something there they

1033
00:50:30,920 --> 00:50:37,370
want to investigate so I'm sitting less

1034
00:50:35,300 --> 00:50:39,020
responsibility here so like this is what

1035
00:50:37,370 --> 00:50:41,120
I said it's spring right so like similar

1036
00:50:39,020 --> 00:50:42,950
to like what we did with asara it's like

1037
00:50:41,120 --> 00:50:44,870
we didn't like allow any kind of

1038
00:50:42,950 --> 00:50:48,410
follow-up work for SRH until death

1039
00:50:44,870 --> 00:50:50,120
arresting was not right and so I want to

1040
00:50:48,410 --> 00:50:50,940
go pretty much the same way so like you

1041
00:50:50,120 --> 00:50:52,560
know spring tells

1042
00:50:50,940 --> 00:50:54,420
like they gonna know this thing is like

1043
00:50:52,560 --> 00:50:55,980
a kind of architecture and they sign off

1044
00:50:54,420 --> 00:50:57,180
on it and then we start doing the

1045
00:50:55,980 --> 00:50:59,160
follow-up work that's required to

1046
00:50:57,180 --> 00:51:01,290
implement it like so that's kind of like

1047
00:50:59,160 --> 00:51:03,359
what we agreed upon and that's yeah I

1048
00:51:01,290 --> 00:51:05,130
think I think that's what like Bob was

1049
00:51:03,359 --> 00:51:07,348
alluding to us all right so just just

1050
00:51:05,130 --> 00:51:09,450
like a gatekeeping function and it's not

1051
00:51:07,349 --> 00:51:13,050
here it's in spring and the gatekeeper

1052
00:51:09,450 --> 00:51:15,689
is about to step up behind you master

1053
00:51:13,050 --> 00:51:17,970
the routing ad for spring so you should

1054
00:51:15,690 --> 00:51:20,579
expect a message from the spring chairs

1055
00:51:17,970 --> 00:51:23,310
soon on the list to kick up a discussion

1056
00:51:20,579 --> 00:51:25,770
on the next steps for that and other

1057
00:51:23,310 --> 00:51:27,540
proposals that have been discussed so I

1058
00:51:25,770 --> 00:51:28,829
guess the bottom line is subscribe to

1059
00:51:27,540 --> 00:51:35,069
the spring mailing list if you don't

1060
00:51:28,829 --> 00:51:40,800
already so thank you much thank you Ron

1061
00:51:35,069 --> 00:51:48,210
our next speaker is safar you have 10

1062
00:51:40,800 --> 00:51:54,060
minutes sublet thank you so I'm going to

1063
00:51:48,210 --> 00:51:57,810
present as our v6 onn Draft on behalf of

1064
00:51:54,060 --> 00:52:03,390
the co-authors and contributors this

1065
00:51:57,810 --> 00:52:07,890
work is started about two years ago and

1066
00:52:03,390 --> 00:52:11,009
it has been presented to six men as well

1067
00:52:07,890 --> 00:52:13,140
as praying working group multiple times

1068
00:52:11,010 --> 00:52:16,800
including exactly one year ago when we

1069
00:52:13,140 --> 00:52:21,118
were here in Montreal and I had a

1070
00:52:16,800 --> 00:52:24,000
presentation on a spring yesterday and

1071
00:52:21,119 --> 00:52:29,940
the ricean was the disease and this is a

1072
00:52:24,000 --> 00:52:32,000
six man document so here we are so with

1073
00:52:29,940 --> 00:52:34,680
these things there has been a lot of

1074
00:52:32,000 --> 00:52:36,990
good comments sent on the mailing list

1075
00:52:34,680 --> 00:52:43,859
and they have been incorporated thanks

1076
00:52:36,990 --> 00:52:47,180
to all the working group this has been

1077
00:52:43,859 --> 00:52:50,779
deployed the draft based implementation

1078
00:52:47,180 --> 00:52:53,970
have been deployed in multiple

1079
00:52:50,780 --> 00:52:57,780
production networks including Softbank

1080
00:52:53,970 --> 00:53:01,609
channel telecom and elite the details

1081
00:52:57,780 --> 00:53:04,530
are available publicly in the draft that

1082
00:53:01,609 --> 00:53:09,090
is mentioned here for deployment status

1083
00:53:04,530 --> 00:53:12,120
and there are 10 platforms that support

1084
00:53:09,090 --> 00:53:14,130
this implementation of this draft this

1085
00:53:12,120 --> 00:53:19,770
is also based on the public information

1086
00:53:14,130 --> 00:53:22,740
which is listed as a source and there

1087
00:53:19,770 --> 00:53:25,950
has been interoperability done on this

1088
00:53:22,740 --> 00:53:31,620
draft and this was done publicly in

1089
00:53:25,950 --> 00:53:34,680
March 2008 by EA and TC then they were

1090
00:53:31,620 --> 00:53:38,009
showcased at in April in MPs were

1091
00:53:34,680 --> 00:53:40,819
Congress there are there were additional

1092
00:53:38,010 --> 00:53:44,250
interoperability that was done privately

1093
00:53:40,820 --> 00:53:47,310
but for the public the information is

1094
00:53:44,250 --> 00:53:51,630
available in the source draft that is

1095
00:53:47,310 --> 00:53:54,770
mentioned here now coming back to draft

1096
00:53:51,630 --> 00:53:59,070
summary is very simple it is relying on

1097
00:53:54,770 --> 00:54:03,480
existing ICMP mechanism it does not

1098
00:53:59,070 --> 00:54:05,960
define any new mechanism why CMP when we

1099
00:54:03,480 --> 00:54:08,790
have a service 6 deployed there

1100
00:54:05,960 --> 00:54:14,190
obviously or nodes on orders are visible

1101
00:54:08,790 --> 00:54:16,980
and they work seamlessly then for some

1102
00:54:14,190 --> 00:54:19,260
use cases define the use of the obut if

1103
00:54:16,980 --> 00:54:22,290
you remember the orbit used to be in a

1104
00:54:19,260 --> 00:54:24,450
suresh draft it was there for a long

1105
00:54:22,290 --> 00:54:27,090
time until the last call and the comment

1106
00:54:24,450 --> 00:54:30,750
was that it needs to be moved to onm

1107
00:54:27,090 --> 00:54:36,380
draft where is using is defined so it

1108
00:54:30,750 --> 00:54:41,360
was moved and there it also defined to

1109
00:54:36,380 --> 00:54:45,030
sits to behavior for O&M using this

1110
00:54:41,360 --> 00:54:47,070
information it illustrate it provides

1111
00:54:45,030 --> 00:54:50,700
some illustration on how we can use this

1112
00:54:47,070 --> 00:54:53,220
these tools for doing thing end to end

1113
00:54:50,700 --> 00:54:56,460
segment by segment trace route of behad

1114
00:54:53,220 --> 00:55:00,930
segment by segment and also how is our

1115
00:54:56,460 --> 00:55:05,790
SC 8400 3 which is just part monitoring

1116
00:55:00,930 --> 00:55:07,589
is applicable with that and multiple

1117
00:55:05,790 --> 00:55:09,870
production requirement is interrupt done

1118
00:55:07,590 --> 00:55:13,050
and and various implementations that are

1119
00:55:09,870 --> 00:55:14,700
available and this work has been mature

1120
00:55:13,050 --> 00:55:18,110
who like the working group threat of

1121
00:55:14,700 --> 00:55:18,109
this today

1122
00:55:20,220 --> 00:55:30,790
Gregory City I have a couple comments so

1123
00:55:25,920 --> 00:55:34,569
first I think it's a useful document and

1124
00:55:30,790 --> 00:55:40,540
it addresses tool that is probably the

1125
00:55:34,569 --> 00:55:42,430
most used poem to ever traceroute and

1126
00:55:40,540 --> 00:55:48,460
peeing so definitely operators who

1127
00:55:42,430 --> 00:55:52,410
appreciate this work though I want to

1128
00:55:48,460 --> 00:55:56,319
point that there is some inconsistency

1129
00:55:52,410 --> 00:56:01,868
how their draft is named and what it

1130
00:55:56,319 --> 00:56:04,599
addresses so it refers to SR v6 om but I

1131
00:56:01,869 --> 00:56:11,050
believe that a service six om is broader

1132
00:56:04,599 --> 00:56:14,020
and then just finding traceroute so you

1133
00:56:11,050 --> 00:56:18,119
might be somewhere along the way working

1134
00:56:14,020 --> 00:56:20,740
on this draft the name can be more

1135
00:56:18,119 --> 00:56:26,109
targeted towards their scope of the

1136
00:56:20,740 --> 00:56:29,950
document I think that looking at what

1137
00:56:26,109 --> 00:56:34,569
requirements for adoption that draft is

1138
00:56:29,950 --> 00:56:36,640
ready for adoption call and then working

1139
00:56:34,569 --> 00:56:39,520
group we can discuss whether you know

1140
00:56:36,640 --> 00:56:42,310
hold it is the right way to do it

1141
00:56:39,520 --> 00:56:44,680
because so far as I know ping and

1142
00:56:42,310 --> 00:56:48,520
traceroute in other networks work

1143
00:56:44,680 --> 00:56:50,259
without obit so why it's needed that's

1144
00:56:48,520 --> 00:56:51,009
something that we can discuss as a

1145
00:56:50,260 --> 00:56:53,859
working group

1146
00:56:51,010 --> 00:56:56,380
yeah thanks big on the name chain

1147
00:56:53,859 --> 00:56:58,720
hundred percent agree with you please

1148
00:56:56,380 --> 00:57:00,579
suggest something it could be changing

1149
00:56:58,720 --> 00:57:02,348
it becomes a particular document and

1150
00:57:00,579 --> 00:57:04,750
working group can contribute to it and

1151
00:57:02,349 --> 00:57:08,250
make the changes like you're proposing

1152
00:57:04,750 --> 00:57:08,250
so we can be a bit more next time

1153
00:57:08,730 --> 00:57:15,069
and speaking as a contributor document

1154
00:57:11,770 --> 00:57:17,440
as Greg said operators will appreciate

1155
00:57:15,069 --> 00:57:20,440
so my appreciation for this document I

1156
00:57:17,440 --> 00:57:22,240
think it's a useful work and we are have

1157
00:57:20,440 --> 00:57:24,900
plans something which we can use in our

1158
00:57:22,240 --> 00:57:24,899
production network

1159
00:57:26,590 --> 00:57:31,970
Ron Bonica no particular opinion about

1160
00:57:29,870 --> 00:57:33,440
whether it should progress or not but a

1161
00:57:31,970 --> 00:57:36,230
question about a word you use in the

1162
00:57:33,440 --> 00:57:39,350
draft and that is to punt a packet I'm

1163
00:57:36,230 --> 00:57:40,940
assuming to punt the packet I assume

1164
00:57:39,350 --> 00:57:42,259
you're talking about punting from the

1165
00:57:40,940 --> 00:57:46,490
forwarding plane to the control plane

1166
00:57:42,260 --> 00:57:47,870
and I'm assuming you your your

1167
00:57:46,490 --> 00:57:49,970
assumption is that the device that's

1168
00:57:47,870 --> 00:57:54,529
processing it has distinct forwarding

1169
00:57:49,970 --> 00:57:56,060
and control planes not all devices habit

1170
00:57:54,530 --> 00:57:59,540
of state forwarding and control planes

1171
00:57:56,060 --> 00:58:02,779
and it's kind of a discussion about an

1172
00:57:59,540 --> 00:58:05,660
internal behavior maybe the OAM should

1173
00:58:02,780 --> 00:58:08,660
only talk about externally observable

1174
00:58:05,660 --> 00:58:11,540
behaviors if Ronnie feels I just seen

1175
00:58:08,660 --> 00:58:15,490
some other world or we can were dismiss

1176
00:58:11,540 --> 00:58:18,200
it yeah yeah yeah perfect thank you

1177
00:58:15,490 --> 00:58:21,729
Molly and I support this decision

1178
00:58:18,200 --> 00:58:24,770
because I think the deployment and the

1179
00:58:21,730 --> 00:58:29,150
implementation and deployments have are

1180
00:58:24,770 --> 00:58:31,340
there so I think the context is matter

1181
00:58:29,150 --> 00:58:36,110
so it could be better to move forward

1182
00:58:31,340 --> 00:58:39,620
and though there are some needs inside

1183
00:58:36,110 --> 00:58:46,070
the jobs so welcome to contribute to the

1184
00:58:39,620 --> 00:58:48,620
jobs yeah thanks you need some

1185
00:58:46,070 --> 00:58:50,690
additional software are they operate

1186
00:58:48,620 --> 00:58:54,609
already deployed a service if I really

1187
00:58:50,690 --> 00:58:59,210
appreciate this work and I hope this

1188
00:58:54,610 --> 00:59:02,210
throughout moving forward and as these

1189
00:58:59,210 --> 00:59:04,430
drafts define the orbit at the head of

1190
00:59:02,210 --> 00:59:06,650
the escalator I think would be good to

1191
00:59:04,430 --> 00:59:14,810
keep name away and all this other

1192
00:59:06,650 --> 00:59:17,660
physics not to change others okay so so

1193
00:59:14,810 --> 00:59:19,759
Bob and I have talked with the spring

1194
00:59:17,660 --> 00:59:23,390
chairs in the past about this and it's

1195
00:59:19,760 --> 00:59:25,610
always a little hard to find where the

1196
00:59:23,390 --> 00:59:29,180
right home is for these documents where

1197
00:59:25,610 --> 00:59:31,670
we collaborate with spring we are happy

1198
00:59:29,180 --> 00:59:34,279
to take it on here but I think that you

1199
00:59:31,670 --> 00:59:36,890
know the gating factor is of course do

1200
00:59:34,280 --> 00:59:39,800
we have enough interest in the working

1201
00:59:36,890 --> 00:59:41,540
group to to work on this document here

1202
00:59:39,800 --> 00:59:44,060
or should it be done in in spring is

1203
00:59:41,540 --> 00:59:46,040
pretty much a matter of how many spring

1204
00:59:44,060 --> 00:59:49,670
people we get in combination with six

1205
00:59:46,040 --> 00:59:53,060
man people in this room so before we do

1206
00:59:49,670 --> 00:59:55,760
an adoption hum I could I just get a you

1207
00:59:53,060 --> 00:59:57,410
know set of hands that are the people

1208
00:59:55,760 --> 01:00:01,550
that are willing and interested working

1209
00:59:57,410 --> 01:00:06,910
on this Oh fantastic

1210
01:00:01,550 --> 01:00:10,070
good excellent so um

1211
01:00:06,910 --> 01:00:17,149
Jory's in unit 8 I call first or should

1212
01:00:10,070 --> 01:00:18,560
we do the hub what one other thing for

1213
01:00:17,150 --> 01:00:20,060
the record I mean I did I was

1214
01:00:18,560 --> 01:00:22,190
specifically this question to the chair

1215
01:00:20,060 --> 01:00:24,259
yesterday is on the recording they were

1216
01:00:22,190 --> 01:00:32,660
perfectly happy to six men to work on

1217
01:00:24,260 --> 01:00:35,030
this in six men I mean it's basically

1218
01:00:32,660 --> 01:00:39,020
the finding a bit in the air sorry

1219
01:00:35,030 --> 01:00:41,000
chatter I mean and then how it was fused

1220
01:00:39,020 --> 01:00:45,050
and all that but that's I think to me

1221
01:00:41,000 --> 01:00:50,110
that was the key thing so unless the 80s

1222
01:00:45,050 --> 01:00:52,610
in the room have objections we they do

1223
01:00:50,110 --> 01:00:54,080
know so description so I had no

1224
01:00:52,610 --> 01:00:56,380
objection like for you to do that I

1225
01:00:54,080 --> 01:01:00,860
think all confirm on the list and okay

1226
01:00:56,380 --> 01:01:02,360
super okay so those in favor or adopting

1227
01:01:00,860 --> 01:01:08,530
this document as a working group

1228
01:01:02,360 --> 01:01:11,960
document in six-man please hum now and

1229
01:01:08,530 --> 01:01:17,480
those who oppose adopting this document

1230
01:01:11,960 --> 01:01:19,250
in six-man please come now don't be so

1231
01:01:17,480 --> 01:01:21,190
silent people I mean there must be one

1232
01:01:19,250 --> 01:01:23,840
objector

1233
01:01:21,190 --> 01:01:26,210
excellent then we will take the confirm

1234
01:01:23,840 --> 01:01:29,270
that on the on the list fantastic

1235
01:01:26,210 --> 01:01:31,670
thanks a lot so far thank you and I

1236
01:01:29,270 --> 01:01:33,590
think that was the working group

1237
01:01:31,670 --> 01:01:36,410
documents and the active individual

1238
01:01:33,590 --> 01:01:38,650
drafts sorted out the rest of the time

1239
01:01:36,410 --> 01:01:43,879
here will be spent on lightning talks

1240
01:01:38,650 --> 01:01:47,750
five minutes each for drafts very

1241
01:01:43,880 --> 01:01:49,940
limited time for questions I think we

1242
01:01:47,750 --> 01:01:53,240
have a little bit time right or we're

1243
01:01:49,940 --> 01:01:55,220
just about right yeah so

1244
01:01:53,240 --> 01:01:59,799
yes please come up and do the

1245
01:01:55,220 --> 01:02:04,609
application where v6 networking talk

1246
01:01:59,800 --> 01:02:08,270
okay okay since they say the Jimmy from

1247
01:02:04,609 --> 01:02:11,480
Hobby Lobby so this topic is the

1248
01:02:08,270 --> 01:02:16,520
application we are ipv6 networking so we

1249
01:02:11,480 --> 01:02:18,680
I P v6 go on move forward okay so this

1250
01:02:16,520 --> 01:02:22,040
is the architecture for the application

1251
01:02:18,680 --> 01:02:24,319
we are ipv6 networking because we know

1252
01:02:22,040 --> 01:02:26,960
now that's the our the transporter no

1253
01:02:24,319 --> 01:02:31,190
network a feast of the Challenger over

1254
01:02:26,960 --> 01:02:33,079
the bottleneck because we always the ban

1255
01:02:31,190 --> 01:02:36,290
us a user increase the budget you can

1256
01:02:33,079 --> 01:02:38,530
notice at the revenue from this service

1257
01:02:36,290 --> 01:02:40,790
better so we think about this the

1258
01:02:38,530 --> 01:02:43,010
combine this is the application

1259
01:02:40,790 --> 01:02:46,849
information with the transporter network

1260
01:02:43,010 --> 01:02:49,040
to provide a better service so there's a

1261
01:02:46,849 --> 01:02:51,890
and also the finer granularity the

1262
01:02:49,040 --> 01:02:55,130
service for the better s area compliance

1263
01:02:51,890 --> 01:02:58,129
so this is the purpose so we think the

1264
01:02:55,130 --> 01:03:02,030
ipv6 is a suitable tool for the purpose

1265
01:02:58,130 --> 01:03:04,010
because of here we consider the in the

1266
01:03:02,030 --> 01:03:06,200
edge node of the network we can

1267
01:03:04,010 --> 01:03:08,809
encapsulate the application we are

1268
01:03:06,200 --> 01:03:10,939
information so this application we are

1269
01:03:08,809 --> 01:03:14,510
information include the application ID

1270
01:03:10,940 --> 01:03:16,369
ID and the service parameter so this is

1271
01:03:14,510 --> 01:03:19,730
the parameter can be carried by the

1272
01:03:16,369 --> 01:03:22,160
packet through the ipv6 if general

1273
01:03:19,730 --> 01:03:24,619
header to the transport and network edge

1274
01:03:22,160 --> 01:03:26,270
node so the transport and network are

1275
01:03:24,619 --> 01:03:29,240
added in order according to the

1276
01:03:26,270 --> 01:03:32,509
application we are information to make

1277
01:03:29,240 --> 01:03:35,990
him to a suitable the SR v6 the path to

1278
01:03:32,510 --> 01:03:38,359
satisfy the SLA requirement and also

1279
01:03:35,990 --> 01:03:42,348
this is the application information can

1280
01:03:38,359 --> 01:03:44,839
be committed to the SR v6 the SR is the

1281
01:03:42,349 --> 01:03:49,579
extension header so there's the middle

1282
01:03:44,839 --> 01:03:53,359
tones of the SR path and also to you

1283
01:03:49,579 --> 01:03:55,250
would accuse killed to satisfy the asari

1284
01:03:53,359 --> 01:03:58,339
requirement to propose device the

1285
01:03:55,250 --> 01:04:01,099
application information so as the US

1286
01:03:58,339 --> 01:04:03,200
node of the transport network so that's

1287
01:04:01,099 --> 01:04:06,150
the I sorry six the feather will be

1288
01:04:03,200 --> 01:04:08,640
stripped and we will go on to the as the

1289
01:04:06,150 --> 01:04:11,400
for whether the package and this is a

1290
01:04:08,640 --> 01:04:13,650
forward pass another reverse pass maybe

1291
01:04:11,400 --> 01:04:17,760
this is a packet usually forward from

1292
01:04:13,650 --> 01:04:20,339
the cloud and to that transfer the

1293
01:04:17,760 --> 01:04:24,990
transport network this is the similar

1294
01:04:20,339 --> 01:04:28,140
the process so this is the information

1295
01:04:24,990 --> 01:04:31,640
probe host in the draft so the first we

1296
01:04:28,140 --> 01:04:35,058
propose the application ID a we are ID

1297
01:04:31,640 --> 01:04:38,279
in the user can be carried in the

1298
01:04:35,059 --> 01:04:40,380
hubba-hubba header or carried by the is

1299
01:04:38,279 --> 01:04:42,960
ID header or maybe the destination

1300
01:04:40,380 --> 01:04:45,180
header depend on the different scenario

1301
01:04:42,960 --> 01:04:48,599
so the application header we can't

1302
01:04:45,180 --> 01:04:52,020
divide it into the sra level that means

1303
01:04:48,599 --> 01:04:54,329
that's the course granulated and also it

1304
01:04:52,020 --> 01:04:57,900
can also take some of the application ID

1305
01:04:54,329 --> 01:04:59,849
or the user ID or the flow ID so that's

1306
01:04:57,900 --> 01:05:02,339
the user depend on this the difference

1307
01:04:59,849 --> 01:05:06,150
is the ID you had the finer granularity

1308
01:05:02,339 --> 01:05:08,670
for the application identification so

1309
01:05:06,150 --> 01:05:10,740
and also that we also carry the service

1310
01:05:08,670 --> 01:05:14,250
requirement a parameter the parameter

1311
01:05:10,740 --> 01:05:16,680
can be the pan wise the delay and the

1312
01:05:14,250 --> 01:05:19,440
delay variation or the packet loss ratio

1313
01:05:16,680 --> 01:05:23,009
the dependence is a service requirement

1314
01:05:19,440 --> 01:05:27,270
a parameter it can map to the SR v6 pass

1315
01:05:23,010 --> 01:05:29,880
or for the queues process okay so this

1316
01:05:27,270 --> 01:05:32,549
morning we have this the 18 6a the

1317
01:05:29,880 --> 01:05:35,279
meeting so here there's a user thanks to

1318
01:05:32,549 --> 01:05:38,849
the attendees so that's we have this the

1319
01:05:35,279 --> 01:05:41,309
50 plus these members so here we have

1320
01:05:38,849 --> 01:05:43,589
this to the reach for the presentation

1321
01:05:41,309 --> 01:05:46,589
and that is caution so that's we

1322
01:05:43,589 --> 01:05:50,369
discussed the possible application

1323
01:05:46,589 --> 01:05:52,700
information can read through by a salute

1324
01:05:50,369 --> 01:05:55,589
to the network and also the possible

1325
01:05:52,700 --> 01:05:59,520
application we are service including the

1326
01:05:55,589 --> 01:06:01,859
detonator om or the UNCG OEM and also

1327
01:05:59,520 --> 01:06:03,960
the at last of the said meeting we do

1328
01:06:01,859 --> 01:06:05,369
the investigation and the consensus one

1329
01:06:03,960 --> 01:06:08,849
minute you don't take the questions

1330
01:06:05,369 --> 01:06:11,099
before your time reserve okay okay so

1331
01:06:08,849 --> 01:06:13,770
that's the we seen this is all valuable

1332
01:06:11,099 --> 01:06:15,420
because across the area and the multiple

1333
01:06:13,770 --> 01:06:19,530
working group so that's what we would

1334
01:06:15,420 --> 01:06:24,110
like to apply the meaning easter to

1335
01:06:19,530 --> 01:06:24,110
foster the communication okay that's all

1336
01:06:24,170 --> 01:06:28,230
Germany host developers in the room

1337
01:06:26,430 --> 01:06:30,240
because I could see how many of them

1338
01:06:28,230 --> 01:06:32,400
would be very very very concerned about

1339
01:06:30,240 --> 01:06:36,509
privacy implications of this type of

1340
01:06:32,400 --> 01:06:38,280
technology hmm okay were there any in

1341
01:06:36,510 --> 01:06:40,830
fact this morning we talked about this

1342
01:06:38,280 --> 01:06:44,100
yeah the security and the progress our

1343
01:06:40,830 --> 01:06:45,360
usual yeah we will cope with it yeah the

1344
01:06:44,100 --> 01:06:48,390
same same question I noticed the

1345
01:06:45,360 --> 01:06:50,000
security considerations at TBD and so I

1346
01:06:48,390 --> 01:06:52,740
was kind of curious if you had any

1347
01:06:50,000 --> 01:06:54,300
considerations in your online yeah as an

1348
01:06:52,740 --> 01:06:57,390
author these are good questions to bring

1349
01:06:54,300 --> 01:06:57,540
to the list thank you thank you thank

1350
01:06:57,390 --> 01:07:02,430
you

1351
01:06:57,540 --> 01:07:12,720
next ipv6 encapsulation for IO am that

1352
01:07:02,430 --> 01:07:15,060
is yes financed country starting no okay

1353
01:07:12,720 --> 01:07:18,750
so shooting from Huawei I will introduce

1354
01:07:15,060 --> 01:07:21,509
the ipv6 encapsulation for IO IO am and

1355
01:07:18,750 --> 01:07:27,810
also this also involves the enhancement

1356
01:07:21,510 --> 01:07:29,850
for the ipv6 extension headers so the

1357
01:07:27,810 --> 01:07:33,270
car in the solution for supporting the

1358
01:07:29,850 --> 01:07:36,000
IOM is to place the IOM data into the

1359
01:07:33,270 --> 01:07:39,750
hop by hop options header and the

1360
01:07:36,000 --> 01:07:43,260
destination options header but there may

1361
01:07:39,750 --> 01:07:46,230
be a risk if we do it in this way we may

1362
01:07:43,260 --> 01:07:49,500
put push the routing header out of the

1363
01:07:46,230 --> 01:07:52,740
parsing window under under chipset so

1364
01:07:49,500 --> 01:07:55,380
our proposal is to separate the

1365
01:07:52,740 --> 01:07:58,740
instruction part and the recording part

1366
01:07:55,380 --> 01:08:02,940
we define the uniform ipv6 service

1367
01:07:58,740 --> 01:08:05,399
option and as the to carry the

1368
01:08:02,940 --> 01:08:09,180
instruction part of the path services

1369
01:08:05,400 --> 01:08:12,720
and that depends on the path if all the

1370
01:08:09,180 --> 01:08:15,060
node along the path ipv6 enabled we

1371
01:08:12,720 --> 01:08:17,760
could place the instruction part of the

1372
01:08:15,060 --> 01:08:20,309
part services in the harbor hop options

1373
01:08:17,760 --> 01:08:23,730
header and if some of the nodes along

1374
01:08:20,310 --> 01:08:27,450
the path I services enabled and we like

1375
01:08:23,729 --> 01:08:30,000
to monitor the network performance of

1376
01:08:27,450 --> 01:08:32,809
the I service expose we could also place

1377
01:08:30,000 --> 01:08:36,259
them in the Isar HERV so

1378
01:08:32,809 --> 01:08:40,130
generally the instruction part of the

1379
01:08:36,259 --> 01:08:43,819
historicist are fixed so that could

1380
01:08:40,130 --> 01:08:46,400
facilitate the hardware processing we

1381
01:08:43,819 --> 01:08:49,520
also define a unifying the container to

1382
01:08:46,399 --> 01:08:52,429
carry the recording part and that is to

1383
01:08:49,520 --> 01:08:55,849
record the service metadata of the IOM

1384
01:08:52,429 --> 01:08:58,730
and also probably other path services so

1385
01:08:55,849 --> 01:09:00,589
that would enable us to stop recording

1386
01:08:58,729 --> 01:09:05,178
when we found that they are already too

1387
01:09:00,589 --> 01:09:11,719
much data so that could avoid reaching

1388
01:09:05,179 --> 01:09:13,880
the hardwire limitation and so we could

1389
01:09:11,719 --> 01:09:17,809
find that there are more and more of our

1390
01:09:13,880 --> 01:09:20,328
services that we require to process the

1391
01:09:17,809 --> 01:09:25,849
information carried in their pockets and

1392
01:09:20,328 --> 01:09:28,969
such as I am and we would like to - the

1393
01:09:25,849 --> 01:09:31,989
operation on the IOM to be performing a

1394
01:09:28,969 --> 01:09:35,299
hub a hub minor but at a wire speed and

1395
01:09:31,988 --> 01:09:38,959
how I were currently probably due to the

1396
01:09:35,299 --> 01:09:40,880
lack of service requirements as well as

1397
01:09:38,960 --> 01:09:44,059
the limited hardware processing

1398
01:09:40,880 --> 01:09:46,089
capabilities may be so the hardware that

1399
01:09:44,059 --> 01:09:49,609
the Hopis hub options are usually

1400
01:09:46,089 --> 01:09:52,038
assigned to a slow pass so that will

1401
01:09:49,609 --> 01:09:55,489
reduce the forwarding performance and

1402
01:09:52,038 --> 01:09:57,530
also along the path if the devices are

1403
01:09:55,489 --> 01:09:59,509
from different vendors and that they may

1404
01:09:57,530 --> 01:10:02,150
have different the handlings of the hop

1405
01:09:59,510 --> 01:10:05,230
by hop options header so that will cause

1406
01:10:02,150 --> 01:10:09,619
the entry and service inconsistency and

1407
01:10:05,230 --> 01:10:12,400
so the desire the precising procedure is

1408
01:10:09,619 --> 01:10:15,440
not there in the currently existing

1409
01:10:12,400 --> 01:10:15,949
specifications if you want to take some

1410
01:10:15,440 --> 01:10:18,500
questions

1411
01:10:15,949 --> 01:10:21,888
yes sure so can we do it can we solve it

1412
01:10:18,500 --> 01:10:22,429
by configuration and there may be a few

1413
01:10:21,889 --> 01:10:25,280
things

1414
01:10:22,429 --> 01:10:28,820
so if way down that in devs in this way

1415
01:10:25,280 --> 01:10:30,429
so one thing is all the options in the

1416
01:10:28,820 --> 01:10:33,530
header may be treated in the same way

1417
01:10:30,429 --> 01:10:36,500
another thing is we if we do some

1418
01:10:33,530 --> 01:10:38,809
engineering on each option tab we need

1419
01:10:36,500 --> 01:10:42,079
to check against those options one by

1420
01:10:38,809 --> 01:10:44,210
one so that is also not very friendly so

1421
01:10:42,079 --> 01:10:47,000
we propose to have a yin house the hub I

1422
01:10:44,210 --> 01:10:50,000
hop options header and we place all

1423
01:10:47,000 --> 01:10:54,530
options that are required to be treated

1424
01:10:50,000 --> 01:10:56,030
at wire speed in in this header and then

1425
01:10:54,530 --> 01:10:59,440
accordingly we will need some

1426
01:10:56,030 --> 01:11:03,230
specifications and for the ipv6 metahit

1427
01:10:59,440 --> 01:11:07,009
metadata header and that is unified

1428
01:11:03,230 --> 01:11:10,309
metadata header and that is used to

1429
01:11:07,010 --> 01:11:12,650
carry the metadata so the location we

1430
01:11:10,310 --> 01:11:14,540
recommend to place it after the routing

1431
01:11:12,650 --> 01:11:16,730
header but there are still two options

1432
01:11:14,540 --> 01:11:19,400
for this two options we need to consider

1433
01:11:16,730 --> 01:11:21,559
the interaction of this by the data and

1434
01:11:19,400 --> 01:11:24,379
the other like a of the indication had

1435
01:11:21,560 --> 01:11:25,640
are yes V and a fragment header I think

1436
01:11:24,380 --> 01:11:28,070
we have to write you know do you want to

1437
01:11:25,640 --> 01:11:29,810
run through the questions or the market

1438
01:11:28,070 --> 01:11:31,490
online so we get some feedback on this

1439
01:11:29,810 --> 01:11:33,290
I think that's valuable and we have 40

1440
01:11:31,490 --> 01:11:36,490
seconds please okay

1441
01:11:33,290 --> 01:11:40,310
Greg nurse Det I share your concerns and

1442
01:11:36,490 --> 01:11:43,070
I will suggest you rather than putting

1443
01:11:40,310 --> 01:11:45,320
data in a packet look at the proposal in

1444
01:11:43,070 --> 01:11:48,530
IPP and working group that called hybrid

1445
01:11:45,320 --> 01:11:50,389
two-step it puts in a train packet which

1446
01:11:48,530 --> 01:11:53,090
shares the same encapsulation which

1447
01:11:50,390 --> 01:11:55,310
ensures that it reverses the same path

1448
01:11:53,090 --> 01:11:56,810
as your trigger packet so we use your

1449
01:11:55,310 --> 01:11:58,760
packet to trigger your measurement and

1450
01:11:56,810 --> 01:12:02,060
you put your measurements in a follow-up

1451
01:11:58,760 --> 01:12:05,240
packet you're not concerned about size

1452
01:12:02,060 --> 01:12:08,980
and you're not concern about getting out

1453
01:12:05,240 --> 01:12:12,139
of fast memory and the procedure the

1454
01:12:08,980 --> 01:12:15,110
process described in a proposal allows

1455
01:12:12,140 --> 01:12:20,600
you to have multiple packets follow the

1456
01:12:15,110 --> 01:12:23,990
trigger packet so very quickly Frank

1457
01:12:20,600 --> 01:12:27,350
yeah Frank program so real quick we had

1458
01:12:23,990 --> 01:12:32,420
a discussion on encapsulation of IOM and

1459
01:12:27,350 --> 01:12:35,210
v6 in six-man last time and we had

1460
01:12:32,420 --> 01:12:38,720
another discussion and I in I ppm this

1461
01:12:35,210 --> 01:12:40,400
time about how to go and kind of Co word

1462
01:12:38,720 --> 01:12:41,870
between these two working groups very

1463
01:12:40,400 --> 01:12:44,809
similar to the spring six-man

1464
01:12:41,870 --> 01:12:46,550
arrangement and from my recollection of

1465
01:12:44,810 --> 01:12:48,980
things as the conclusion is to progress

1466
01:12:46,550 --> 01:12:51,860
the work in our DPM first and then

1467
01:12:48,980 --> 01:12:54,080
update six men and lay six months once

1468
01:12:51,860 --> 01:12:56,450
we progress the word there to a maturity

1469
01:12:54,080 --> 01:12:59,059
level and then ask for review here and I

1470
01:12:56,450 --> 01:13:00,040
do believe that with that in mind the

1471
01:12:59,060 --> 01:13:10,450
work should be long

1472
01:13:00,040 --> 01:13:12,130
to occupy em first okay thank you and

1473
01:13:10,450 --> 01:13:15,070
you have five minutes

1474
01:13:12,130 --> 01:13:17,620
yep lucky day Karuna ladies and

1475
01:13:15,070 --> 01:13:21,030
gentlemen and today my topic is past

1476
01:13:17,620 --> 01:13:24,430
segments encapsulation is a v6 so

1477
01:13:21,030 --> 01:13:27,580
basically we have introduced per segment

1478
01:13:24,430 --> 01:13:30,400
in as Paris because we do need a post

1479
01:13:27,580 --> 01:13:33,340
segment you identify the pause but why

1480
01:13:30,400 --> 01:13:36,580
do we need the pass segments in Si v6

1481
01:13:33,340 --> 01:13:39,430
that is a question right because the

1482
01:13:36,580 --> 01:13:41,019
seed least I know we know that I will

1483
01:13:39,430 --> 01:13:44,800
not have the series we can use that to

1484
01:13:41,020 --> 01:13:48,660
identify the past but think about it of

1485
01:13:44,800 --> 01:13:52,020
the packets a Kemp's from the past one

1486
01:13:48,660 --> 01:13:56,410
which carries the seed list contains

1487
01:13:52,020 --> 01:13:58,960
such as for seeds and you have to scan

1488
01:13:56,410 --> 01:14:01,570
the whole for seeds to ID to get the ID

1489
01:13:58,960 --> 01:14:04,300
to identify the past and regarding the

1490
01:14:01,570 --> 01:14:08,290
second package such as packet B comes

1491
01:14:04,300 --> 01:14:12,010
from a non pause which has the mauryans

1492
01:14:08,290 --> 01:14:17,070
such as six C's and then you have to use

1493
01:14:12,010 --> 01:14:23,890
the ID which is more than six plus six

1494
01:14:17,070 --> 01:14:27,670
multiplied it s se as ID tried to an

1495
01:14:23,890 --> 01:14:31,180
identify the past it's crazy right but

1496
01:14:27,670 --> 01:14:34,180
so that is the reason why we propose

1497
01:14:31,180 --> 01:14:36,070
fixed when the ID which code which is

1498
01:14:34,180 --> 01:14:40,600
called per segment right in your pass

1499
01:14:36,070 --> 01:14:42,849
and it would be insert in the specific a

1500
01:14:40,600 --> 01:14:47,230
location which is the last entry in the

1501
01:14:42,850 --> 01:14:50,350
seed list so that is the main idea let's

1502
01:14:47,230 --> 01:14:52,389
take a look up the format of document as

1503
01:14:50,350 --> 01:14:55,870
I've a six per second

1504
01:14:52,390 --> 01:14:58,300
basically we propose to format of the

1505
01:14:55,870 --> 01:15:01,780
service six per segment the first one

1506
01:14:58,300 --> 01:15:04,840
follows the format of normal as I've

1507
01:15:01,780 --> 01:15:05,410
succeed which has the which has two

1508
01:15:04,840 --> 01:15:07,630
parts

1509
01:15:05,410 --> 01:15:11,440
the first one is located and the second

1510
01:15:07,630 --> 01:15:13,590
one is function ID by the way you can

1511
01:15:11,440 --> 01:15:16,650
add some information such as our

1512
01:15:13,590 --> 01:15:20,880
and into the seat and the second one is

1513
01:15:16,650 --> 01:15:25,080
we can use a globe I teach identify D as

1514
01:15:20,880 --> 01:15:31,290
a v6 postman and the specific format of

1515
01:15:25,080 --> 01:15:35,460
it is based on the specific use cases so

1516
01:15:31,290 --> 01:15:39,030
that is the main almost the main idea of

1517
01:15:35,460 --> 01:15:41,700
a v6 power segment and we now go into

1518
01:15:39,030 --> 01:15:46,019
the details of the processing of s a v6

1519
01:15:41,700 --> 01:15:48,330
power segment and by the way we have we

1520
01:15:46,020 --> 01:15:51,270
have done some work on control blends

1521
01:15:48,330 --> 01:15:56,130
such as PCE extension and BGP extension

1522
01:15:51,270 --> 01:16:00,150
and comments are working which sorry

1523
01:15:56,130 --> 01:16:02,220
which node consumes the data the egress

1524
01:16:00,150 --> 01:16:10,320
and by the way is not a destination

1525
01:16:02,220 --> 01:16:13,400
option first of all we can get in the

1526
01:16:10,320 --> 01:16:16,860
past ID very quickly in the router

1527
01:16:13,400 --> 01:16:20,370
header instead of that state destination

1528
01:16:16,860 --> 01:16:25,250
option header and then I am pretty sure

1529
01:16:20,370 --> 01:16:29,460
that the fixed length and in fixed lens

1530
01:16:25,250 --> 01:16:32,730
information in a specific location we

1531
01:16:29,460 --> 01:16:36,800
have much better processing performance

1532
01:16:32,730 --> 01:16:36,799
than the tier V in the destination

1533
01:16:40,460 --> 01:16:48,930
option there Woodmere option that would

1534
01:16:46,530 --> 01:16:53,820
be option let's talk about this of life

1535
01:16:48,930 --> 01:16:56,280
thank you no I think that's the option

1536
01:16:53,820 --> 01:16:59,759
but we would like a keep the integrity

1537
01:16:56,280 --> 01:17:06,300
of the SRS would like to keep it as I

1538
01:16:59,760 --> 01:17:10,110
yes thank you thank you you managed in

1539
01:17:06,300 --> 01:17:15,480
four minutes okay then

1540
01:17:10,110 --> 01:17:16,740
it is Safari again on IOM and you have K

1541
01:17:15,480 --> 01:17:22,830
five minutes from now

1542
01:17:16,740 --> 01:17:24,260
thank you so I am going to go over stuff

1543
01:17:22,830 --> 01:17:26,229
it is similar to what shebang was

1544
01:17:24,260 --> 01:17:29,459
mentioning but

1545
01:17:26,229 --> 01:17:36,610
in the context of network that is our v6

1546
01:17:29,459 --> 01:17:38,679
capable the one of the and I'm

1547
01:17:36,610 --> 01:17:43,438
presenting on may I be on behalf of my

1548
01:17:38,679 --> 01:17:46,630
quarters one of the issues with IOM and

1549
01:17:43,439 --> 01:17:49,409
and we went to a lot of discussion with

1550
01:17:46,630 --> 01:17:53,010
respect to collecting data is

1551
01:17:49,409 --> 01:17:59,398
availability of data on a given node is

1552
01:17:53,010 --> 01:18:02,829
not capable of recording the data and is

1553
01:17:59,399 --> 01:18:06,579
do I need the data from all the node in

1554
01:18:02,829 --> 01:18:10,299
my network and if I start probing in

1555
01:18:06,579 --> 01:18:14,789
bang on all the node in the in the

1556
01:18:10,300 --> 01:18:19,419
network would I cause a problem for

1557
01:18:14,789 --> 01:18:23,768
deviating from the very set of data them

1558
01:18:19,419 --> 01:18:27,280
trying to collect so overhead as I go

1559
01:18:23,769 --> 01:18:30,429
and start collecting this data if I'm

1560
01:18:27,280 --> 01:18:34,898
sitting in SRV six Network segment

1561
01:18:30,429 --> 01:18:36,219
endpoint has a very reason that I'm

1562
01:18:34,899 --> 01:18:39,039
going through a segment endpoint because

1563
01:18:36,219 --> 01:18:42,119
I there is a topological reason to go

1564
01:18:39,039 --> 01:18:47,050
through it it's interesting point and

1565
01:18:42,119 --> 01:18:52,148
can I just collect data on from segment

1566
01:18:47,050 --> 01:18:54,610
endpoint only and can I only collect

1567
01:18:52,149 --> 01:18:57,519
data from segment but data capable of

1568
01:18:54,610 --> 01:19:00,429
recording the data so all of these

1569
01:18:57,519 --> 01:19:02,499
questions are answered by this draft by

1570
01:19:00,429 --> 01:19:07,019
by using the network program

1571
01:19:02,499 --> 01:19:10,300
availability notion of SRV six you can

1572
01:19:07,019 --> 01:19:12,999
only collect data that are capable a

1573
01:19:10,300 --> 01:19:15,550
node which is not capable recording the

1574
01:19:12,999 --> 01:19:19,300
data does not have to look into TLV it

1575
01:19:15,550 --> 01:19:23,860
will bypass everything it doesn't have

1576
01:19:19,300 --> 01:19:26,380
to always look into and scan so mean

1577
01:19:23,860 --> 01:19:30,188
point in as we collect I own em data we

1578
01:19:26,380 --> 01:19:33,909
should make sure that we are not

1579
01:19:30,189 --> 01:19:37,389
affecting the very stream that we are

1580
01:19:33,909 --> 01:19:39,759
collecting the data from and I believe

1581
01:19:37,389 --> 01:19:41,380
that this this graph is very useful

1582
01:19:39,760 --> 01:19:44,110
it can collect from a very strategic

1583
01:19:41,380 --> 01:19:45,969
points and it can only end the nodes

1584
01:19:44,110 --> 01:19:51,400
that are not capable of recording the

1585
01:19:45,969 --> 01:19:52,570
data can skip the TLV processing which

1586
01:19:51,400 --> 01:19:58,449
is expensive

1587
01:19:52,570 --> 01:20:02,590
and I at the moment is lightning talk so

1588
01:19:58,449 --> 01:20:07,960
we'll just like to hear feedback from

1589
01:20:02,590 --> 01:20:14,650
the working group fantastic that is

1590
01:20:07,960 --> 01:20:17,949
three minutes and 52 seconds yes thank

1591
01:20:14,650 --> 01:20:19,929
you and the last lightning talk we have

1592
01:20:17,949 --> 01:20:29,678
is on detonate the survey six data plain

1593
01:20:19,929 --> 01:20:31,690
encapsulation and this is just all from

1594
01:20:29,679 --> 01:20:34,780
javi and I will give a very brief

1595
01:20:31,690 --> 01:20:38,710
introduction about our work and that's

1596
01:20:34,780 --> 01:20:40,360
not actually the basic idea of then that

1597
01:20:38,710 --> 01:20:44,590
is quite simple

1598
01:20:40,360 --> 01:20:48,130
for some critical service or flows the

1599
01:20:44,590 --> 01:20:50,710
current network is not good enough we

1600
01:20:48,130 --> 01:20:55,150
want to we wanted to do better for

1601
01:20:50,710 --> 01:20:58,690
example bundle latency extremely low

1602
01:20:55,150 --> 01:21:02,799
data loss and the low jitter so we have

1603
01:20:58,690 --> 01:21:16,839
to make the network do better with a lot

1604
01:21:02,800 --> 01:21:19,809
a group of new technologies why the

1605
01:21:16,840 --> 01:21:22,719
network is not enough for example in the

1606
01:21:19,809 --> 01:21:25,960
network there is congestion which can

1607
01:21:22,719 --> 01:21:30,190
cause the latency and and the congestion

1608
01:21:25,960 --> 01:21:34,360
loss so we will use resource allocation

1609
01:21:30,190 --> 01:21:37,629
to the to along the paths for 10s

1610
01:21:34,360 --> 01:21:40,799
service and we also use queueing

1611
01:21:37,630 --> 01:21:45,039
management for the 10s service and also

1612
01:21:40,800 --> 01:21:48,579
if there is other loss because of meteor

1613
01:21:45,039 --> 01:21:51,219
arrows our equipment fili we will use a

1614
01:21:48,579 --> 01:21:53,449
service protection that means in some

1615
01:21:51,219 --> 01:21:56,420
particular know the we will do

1616
01:21:53,449 --> 01:21:59,299
a peculiar replication and the packet

1617
01:21:56,420 --> 01:22:02,449
after replicated will go along different

1618
01:21:59,300 --> 01:22:05,179
paths through the network and again in

1619
01:22:02,449 --> 01:22:07,849
another note the packet will the

1620
01:22:05,179 --> 01:22:11,179
redundant packet will be eliminated and

1621
01:22:07,850 --> 01:22:14,780
the the left one will go through and

1622
01:22:11,179 --> 01:22:21,880
also to make the 10s ERISA table we also

1623
01:22:14,780 --> 01:22:24,949
have to rely on the explicit pass so

1624
01:22:21,880 --> 01:22:30,650
this presentation is about how to

1625
01:22:24,949 --> 01:22:34,129
implement the net in SR e6 domain here

1626
01:22:30,650 --> 01:22:36,080
are some requirement for the SRS 6 for

1627
01:22:34,130 --> 01:22:39,230
example the first one we have to

1628
01:22:36,080 --> 01:22:43,550
identifying the SRS 6 payload type and

1629
01:22:39,230 --> 01:22:45,080
also we have to find a suitable explicit

1630
01:22:43,550 --> 01:22:48,260
pass for the Dynaflow

1631
01:22:45,080 --> 01:22:51,050
this is supported by our six naturally

1632
01:22:48,260 --> 01:22:53,540
and in order to do the service

1633
01:22:51,050 --> 01:22:58,340
protection as mentioned in the previous

1634
01:22:53,540 --> 01:23:01,400
slide we have to to indicate the packet

1635
01:22:58,340 --> 01:23:04,510
to packet replication elimination of the

1636
01:23:01,400 --> 01:23:08,330
ordering function to implement these

1637
01:23:04,510 --> 01:23:10,040
functions we require extra information

1638
01:23:08,330 --> 01:23:12,140
for example the tunnel flow

1639
01:23:10,040 --> 01:23:15,469
identification and sequence number and

1640
01:23:12,140 --> 01:23:17,480
also we have to use the as our age to

1641
01:23:15,469 --> 01:23:19,940
carry a queuing and a forwarding

1642
01:23:17,480 --> 01:23:22,519
indication to do congestion protection

1643
01:23:19,940 --> 01:23:28,400
but this part is not covered in our

1644
01:23:22,520 --> 01:23:32,110
current version of the draft so what can

1645
01:23:28,400 --> 01:23:34,969
we do we list some option to do this

1646
01:23:32,110 --> 01:23:37,580
especially for carrying flow

1647
01:23:34,969 --> 01:23:41,630
identification a sequence number we can

1648
01:23:37,580 --> 01:23:46,100
carry it in as RIT TLV we can carried it

1649
01:23:41,630 --> 01:23:49,160
in the same in the list inside a seed to

1650
01:23:46,100 --> 01:23:51,920
to define new functions and arguments

1651
01:23:49,160 --> 01:23:56,199
also we can define a dozen at C naught

1652
01:23:51,920 --> 01:24:00,770
for routing just a fort and a service

1653
01:23:56,199 --> 01:24:04,580
this is all of our of my presentation

1654
01:24:00,770 --> 01:24:06,050
and why I bring here is that I want I

1655
01:24:04,580 --> 01:24:11,210
think this is a very

1656
01:24:06,050 --> 01:24:15,710
interesting example to afford for people

1657
01:24:11,210 --> 01:24:20,480
to see that what can we do with the SRA

1658
01:24:15,710 --> 01:24:23,030
six and as our age and perhaps we can

1659
01:24:20,480 --> 01:24:27,199
have good feedback from the six men

1660
01:24:23,030 --> 01:24:30,559
working group so I got trying into being

1661
01:24:27,199 --> 01:24:32,928
the loops buff chair earlier in the week

1662
01:24:30,559 --> 01:24:35,090
and this reminds me very much of the

1663
01:24:32,929 --> 01:24:37,099
problem statement that loops had and of

1664
01:24:35,090 --> 01:24:39,500
course they're doing a that's you know

1665
01:24:37,099 --> 01:24:43,219
as a non working group forming golf I

1666
01:24:39,500 --> 01:24:44,840
mean I'm sure they would and probably

1667
01:24:43,219 --> 01:24:46,429
you would as well appreciate it if you

1668
01:24:44,840 --> 01:24:50,239
could have a look at their problem

1669
01:24:46,429 --> 01:24:51,889
statement and perhaps post your draft or

1670
01:24:50,239 --> 01:24:53,718
subscribe to that list because there

1671
01:24:51,889 --> 01:24:55,340
looks like there is a lot of overlap it

1672
01:24:53,719 --> 01:24:58,969
they in the problem they're trying to

1673
01:24:55,340 --> 01:25:00,530
solve and also meet with or at least you

1674
01:24:58,969 --> 01:25:02,540
know they're just in a problem defining

1675
01:25:00,530 --> 01:25:04,400
stage but they weren't thinking of

1676
01:25:02,540 --> 01:25:07,690
solving it there's rb6 but it certainly

1677
01:25:04,400 --> 01:25:12,829
looks very much like the same problem

1678
01:25:07,690 --> 01:25:17,239
loop local optimization right I think

1679
01:25:12,829 --> 01:25:20,449
it's not similar problem because do it I

1680
01:25:17,239 --> 01:25:23,650
think the problem for loop is that it

1681
01:25:20,449 --> 01:25:28,339
wants you bring some flow control method

1682
01:25:23,650 --> 01:25:30,920
between the edge node of a domain but

1683
01:25:28,340 --> 01:25:34,820
for doesn't ask it's I think it's not

1684
01:25:30,920 --> 01:25:38,599
the same we're done okay thank you thank

1685
01:25:34,820 --> 01:25:43,759
you very much so we have completely the

1686
01:25:38,599 --> 01:25:46,670
agenda and about one time so thank you

1687
01:25:43,760 --> 01:25:52,699
very much and we will see you all in

1688
01:25:46,670 --> 01:25:54,020
Singapore and if anyone can bring the

1689
01:25:52,699 --> 01:25:56,650
blue sheets up to us that would be

1690
01:25:54,020 --> 01:25:56,650
appreciated

1691
01:26:11,679 --> 01:26:17,500
does anyone have the blue sheets they're

1692
01:26:15,139 --> 01:26:17,500
missing

