1
00:00:04,680 --> 00:00:32,070
we asked for it what would be great do

2
00:00:12,510 --> 00:00:34,350
you actually volunteering or just take

3
00:00:32,070 --> 00:00:35,790
great notes and then he speaks for about

4
00:00:34,350 --> 00:00:37,170
20 minutes of the session and so we

5
00:00:35,790 --> 00:00:46,609
always end up with sort of a white space

6
00:00:37,170 --> 00:00:46,609
in the notes when Ed was speaking yes

7
00:00:49,550 --> 00:01:05,309
yeah can somebody pull the door shut at

8
00:00:52,920 --> 00:01:07,530
the back so this is the thank you for

9
00:01:05,309 --> 00:01:11,520
staying till Friday this is the DTM

10
00:01:07,530 --> 00:01:18,600
working group chairs myself Eric Taylor

11
00:01:11,520 --> 00:01:21,000
my por-shay this is the no well as an

12
00:01:18,600 --> 00:01:23,070
IETF session it is covered under the

13
00:01:21,000 --> 00:01:26,370
note well I hope you have all read this

14
00:01:23,070 --> 00:01:28,080
before I'll leave it for 30 seconds just

15
00:01:26,370 --> 00:01:34,470
in case you haven't it is the standard

16
00:01:28,080 --> 00:01:36,509
note well so our proposed agenda we have

17
00:01:34,470 --> 00:01:38,670
a couple of the critical drafts that

18
00:01:36,510 --> 00:01:45,120
we've been working on for the last years

19
00:01:38,670 --> 00:01:46,470
are now in ad review and I the authors

20
00:01:45,120 --> 00:01:48,410
of the the primary authors of those

21
00:01:46,470 --> 00:01:50,850
drafts have a few words to say about

22
00:01:48,410 --> 00:01:55,320
feedback and progress just to keep us

23
00:01:50,850 --> 00:01:58,100
all in the loop one of the comments that

24
00:01:55,320 --> 00:02:01,020
came out of that was there is an IPR

25
00:01:58,100 --> 00:02:04,589
flag raised over

26
00:02:01,020 --> 00:02:06,449
I think bundle protocol itself or just

27
00:02:04,590 --> 00:02:10,170
sort of DTN in general that we needed to

28
00:02:06,450 --> 00:02:12,450
make make the IST aware of and I think

29
00:02:10,169 --> 00:02:15,599
that's relevant as a discussion brief

30
00:02:12,450 --> 00:02:17,329
and I understand that I personally am

31
00:02:15,599 --> 00:02:20,060
NOT a lawyer I don't know if we have

32
00:02:17,330 --> 00:02:21,860
lawyers in the room but this is we would

33
00:02:20,060 --> 00:02:23,900
also be looking for guidance from the ad

34
00:02:21,860 --> 00:02:26,180
in terms of what we can and cannot say

35
00:02:23,900 --> 00:02:30,710
is there's a working group and how that

36
00:02:26,180 --> 00:02:33,410
moves forwards ed brain and one of his

37
00:02:30,710 --> 00:02:36,080
guys andrew Haberman will be talking

38
00:02:33,410 --> 00:02:38,359
about the work they've been doing on MP

39
00:02:36,080 --> 00:02:41,360
and where that is although that is not a

40
00:02:38,360 --> 00:02:43,100
charter item I know it's something we've

41
00:02:41,360 --> 00:02:47,230
been circling around for a while and

42
00:02:43,100 --> 00:02:52,690
feeds into the later points which is

43
00:02:47,230 --> 00:02:56,570
once BP basin BP SEC and at least one

44
00:02:52,690 --> 00:03:01,010
convergence layer is done is off into

45
00:02:56,570 --> 00:03:02,780
the is G and hopefully RF seed then we

46
00:03:01,010 --> 00:03:05,630
need to look at the next charter items

47
00:03:02,780 --> 00:03:09,170
on our current charter and if we wish to

48
00:03:05,630 --> 00:03:12,109
adjust update uplift the Charter to add

49
00:03:09,170 --> 00:03:13,880
any new work items which we've been

50
00:03:12,110 --> 00:03:19,270
itching to get on with that have been

51
00:03:13,880 --> 00:03:23,090
holding for the the primary three

52
00:03:19,270 --> 00:03:25,190
documents so and I know Scott has got a

53
00:03:23,090 --> 00:03:28,430
short presentation on things he wants to

54
00:03:25,190 --> 00:03:32,239
discuss that can turn into a into a

55
00:03:28,430 --> 00:03:33,890
wider discussion and that flows into

56
00:03:32,239 --> 00:03:35,840
that charter milestones and updates so

57
00:03:33,890 --> 00:03:38,238
we'll talk about what we've got as part

58
00:03:35,840 --> 00:03:40,130
of that discussion and see if we can get

59
00:03:38,239 --> 00:03:42,080
some rough consensus in the room and

60
00:03:40,130 --> 00:03:44,720
then we'll take the discussion on to the

61
00:03:42,080 --> 00:03:45,880
mailing list to try and work out what we

62
00:03:44,720 --> 00:03:48,470
do next

63
00:03:45,880 --> 00:03:52,359
and then of course the mandatory any

64
00:03:48,470 --> 00:03:55,730
other business and from Mike so

65
00:03:52,360 --> 00:03:57,370
administrivia ed brain is the secretary

66
00:03:55,730 --> 00:04:00,500
mark and I have introduced ourselves

67
00:03:57,370 --> 00:04:02,660
there is a jabber room there is meet

68
00:04:00,500 --> 00:04:04,280
echo as well these days and we have lots

69
00:04:02,660 --> 00:04:08,180
of people on meet echo so thank you very

70
00:04:04,280 --> 00:04:11,989
much for joining us and that's the

71
00:04:08,180 --> 00:04:13,760
Charter is on the ITF date tracker I'm

72
00:04:11,989 --> 00:04:18,890
assuming most of you know how to find it

73
00:04:13,760 --> 00:04:19,789
but there's the URL so mark I'm gonna

74
00:04:18,890 --> 00:04:29,090
hand over to you at this point

75
00:04:19,790 --> 00:04:30,010
oh yeah okay you did this is the slides

76
00:04:29,090 --> 00:04:33,010
okay I'm sorry

77
00:04:30,010 --> 00:04:34,960
so as I just said the three major

78
00:04:33,010 --> 00:04:37,090
documents we've been bashing our heads

79
00:04:34,960 --> 00:04:39,849
against but no that's unfair that we

80
00:04:37,090 --> 00:04:42,280
have been working hard to get right over

81
00:04:39,850 --> 00:04:43,540
the last number of years are and I'm

82
00:04:42,280 --> 00:04:44,770
looking around the room for anyone

83
00:04:43,540 --> 00:04:46,060
there's a couple of people who are not

84
00:04:44,770 --> 00:04:47,830
familiar with what we've been doing so

85
00:04:46,060 --> 00:04:50,710
well I'll go slowly

86
00:04:47,830 --> 00:04:53,169
the bundle protocol base document so

87
00:04:50,710 --> 00:04:55,900
that is also known as bundle protocol

88
00:04:53,170 --> 00:04:58,300
version seven so that is how do you we

89
00:04:55,900 --> 00:05:00,640
encapsulate a bundle one of the rules

90
00:04:58,300 --> 00:05:03,310
for moving it around etc etc it's a

91
00:05:00,640 --> 00:05:08,169
meaty document because it's one of the

92
00:05:03,310 --> 00:05:11,560
base underpinnings of the IETF DTN

93
00:05:08,170 --> 00:05:14,560
vision of how you do this based on work

94
00:05:11,560 --> 00:05:17,200
in other standards bodies and

95
00:05:14,560 --> 00:05:20,920
organizations to associate with that

96
00:05:17,200 --> 00:05:22,659
because we use a layered model TCP CL is

97
00:05:20,920 --> 00:05:27,210
what CL is what we call a convergence

98
00:05:22,660 --> 00:05:29,950
layer which is the analogy in an IP

99
00:05:27,210 --> 00:05:31,719
model would be your convergence there is

100
00:05:29,950 --> 00:05:35,260
your layer to where your bundle protocol

101
00:05:31,720 --> 00:05:37,570
is your layer 3 so a convergence layer

102
00:05:35,260 --> 00:05:41,740
allows you to move bundles across a

103
00:05:37,570 --> 00:05:43,659
single logical link so that's an

104
00:05:41,740 --> 00:05:46,060
important document and the third one is

105
00:05:43,660 --> 00:05:50,020
bundle protocol SEC VP SEC which is how

106
00:05:46,060 --> 00:05:52,390
do you enforce integrity and privacy and

107
00:05:50,020 --> 00:05:55,120
security around these things as they

108
00:05:52,390 --> 00:05:57,880
flow around your extended DT and network

109
00:05:55,120 --> 00:06:00,280
so the good news is all three of those

110
00:05:57,880 --> 00:06:02,440
are now in the ad evaluation queue

111
00:06:00,280 --> 00:06:05,260
they're basically in the iesg pipeline

112
00:06:02,440 --> 00:06:07,300
we've had feedback from our ad on two of

113
00:06:05,260 --> 00:06:11,500
them I think there's one more we're

114
00:06:07,300 --> 00:06:13,930
still waiting for them yes unfortunately

115
00:06:11,500 --> 00:06:17,170
I haven't managed to get to the TCP

116
00:06:13,930 --> 00:06:19,540
convergence layers I will strive to get

117
00:06:17,170 --> 00:06:22,120
that down and if we're going back Asian

118
00:06:19,540 --> 00:06:24,310
now next week so I will hopefully be

119
00:06:22,120 --> 00:06:26,650
able to read it again you next week and

120
00:06:24,310 --> 00:06:32,920
since uncommon so you can process it

121
00:06:26,650 --> 00:06:35,530
while I'm awful I said I saw this pretty

122
00:06:32,920 --> 00:06:39,570
interesting that the ad of Transport was

123
00:06:35,530 --> 00:06:42,239
not looking at the TCP document

124
00:06:39,570 --> 00:06:45,390
well that's I mean it was an obvious

125
00:06:42,240 --> 00:06:47,550
order get to read the documents oh yeah

126
00:06:45,390 --> 00:06:55,050
working through the stacking whatever it

127
00:06:47,550 --> 00:06:56,880
looks the appropriate orders oh so the

128
00:06:55,050 --> 00:06:58,680
other half of the slide is the what

129
00:06:56,880 --> 00:07:01,400
about section so we have a couple of

130
00:06:58,680 --> 00:07:03,870
other working group documents that are I

131
00:07:01,400 --> 00:07:07,409
think the authors believe they're pretty

132
00:07:03,870 --> 00:07:09,540
much done so there's a question on which

133
00:07:07,410 --> 00:07:12,030
we last call whether the working group

134
00:07:09,540 --> 00:07:15,390
is happy to ask all those and they are

135
00:07:12,030 --> 00:07:18,659
primarily the bundle protocol the BP sac

136
00:07:15,390 --> 00:07:21,960
Interop I forget what SC stands for it's

137
00:07:18,660 --> 00:07:23,880
the cipher Suites security context so

138
00:07:21,960 --> 00:07:27,150
it's it's a default set of cipher suites

139
00:07:23,880 --> 00:07:29,580
and best practices which really should

140
00:07:27,150 --> 00:07:32,700
move forwards with BP SEC and I think

141
00:07:29,580 --> 00:07:34,950
we've just let it lag and I think it's

142
00:07:32,700 --> 00:07:38,010
that it's the chairs to press press the

143
00:07:34,950 --> 00:07:41,700
Go button on I think that's right yeah

144
00:07:38,010 --> 00:07:43,680
My Dear Colleague co-chair last meeting

145
00:07:41,700 --> 00:07:47,270
we actually agreed to do working group

146
00:07:43,680 --> 00:07:52,890
last call on EP ii her up and MBT cp/m

147
00:07:47,270 --> 00:07:56,070
tcp CL but we haven't done so yeah mayor

148
00:07:52,890 --> 00:07:58,440
culpa or new culpa whatever the Latin

149
00:07:56,070 --> 00:08:03,060
for we is I'm sort of mixing my Romance

150
00:07:58,440 --> 00:08:07,770
languages there no stroke or / thank you

151
00:08:03,060 --> 00:08:11,040
Scott so we will pretty minimal TCP CL

152
00:08:07,770 --> 00:08:13,740
which is a as simple as you can make it

153
00:08:11,040 --> 00:08:17,610
great for lab environments conversion

154
00:08:13,740 --> 00:08:19,860
Slayer should be last called should get

155
00:08:17,610 --> 00:08:22,800
into the queue very promptly the BP SEC

156
00:08:19,860 --> 00:08:26,100
interrupt again is an important document

157
00:08:22,800 --> 00:08:27,720
and move back from the mic the BP SEC

158
00:08:26,100 --> 00:08:31,320
interrupt document is an important

159
00:08:27,720 --> 00:08:33,810
document because without it the BP SEC

160
00:08:31,320 --> 00:08:36,510
document describes how to secure your

161
00:08:33,809 --> 00:08:41,098
bundles but doesn't give any advice on

162
00:08:36,510 --> 00:08:42,990
how you should roll out a reasonably

163
00:08:41,099 --> 00:08:46,620
secure set of cipher suites and

164
00:08:42,990 --> 00:08:49,050
behaviors so really we have to press the

165
00:08:46,620 --> 00:08:50,700
last call button on that the other one

166
00:08:49,050 --> 00:08:52,740
is the beat the

167
00:08:50,700 --> 00:08:55,350
beeping I never closes it bundling

168
00:08:52,740 --> 00:08:59,240
bundle encapsulation so it's how do we

169
00:08:55,350 --> 00:09:01,860
tunnel it's a short sweet to the point

170
00:08:59,240 --> 00:09:04,440
document it's been a working group

171
00:09:01,860 --> 00:09:05,820
document it's had some review I haven't

172
00:09:04,440 --> 00:09:08,310
seen much in the way of comments on the

173
00:09:05,820 --> 00:09:10,050
mailing list so we'll do a last call on

174
00:09:08,310 --> 00:09:17,160
that unless anyone has any major

175
00:09:10,050 --> 00:09:19,469
objections so I will probably hold off

176
00:09:17,160 --> 00:09:20,550
and I know I'll cover this now so these

177
00:09:19,470 --> 00:09:22,260
are some of the milestones that are

178
00:09:20,550 --> 00:09:25,979
still remaining in the current Charter

179
00:09:22,260 --> 00:09:29,300
and this follows on from the same topics

180
00:09:25,980 --> 00:09:31,200
we were talking about in Prague so

181
00:09:29,300 --> 00:09:34,949
different sorts of conversions layer

182
00:09:31,200 --> 00:09:36,750
adapters addressing architecture I'm

183
00:09:34,950 --> 00:09:39,450
just reading the slide now and you can

184
00:09:36,750 --> 00:09:41,040
all read as well so these are a list of

185
00:09:39,450 --> 00:09:43,560
some items that are on the current

186
00:09:41,040 --> 00:09:45,270
Charter that need to be visited now that

187
00:09:43,560 --> 00:09:51,300
we've got the basic building blocks out

188
00:09:45,270 --> 00:09:52,980
of the way and I know the management the

189
00:09:51,300 --> 00:09:55,109
management piece has been floating

190
00:09:52,980 --> 00:09:57,090
around for a while because ed and his

191
00:09:55,110 --> 00:09:58,890
team have been doing a great deal of

192
00:09:57,090 --> 00:10:03,410
what I personally believe his good work

193
00:09:58,890 --> 00:10:06,210
on asynchronous management designed

194
00:10:03,410 --> 00:10:08,219
originally for the DTN use case but I

195
00:10:06,210 --> 00:10:11,280
think actually has applicability outside

196
00:10:08,220 --> 00:10:12,600
of it so that's again something to

197
00:10:11,280 --> 00:10:14,430
discuss I know there's been

198
00:10:12,600 --> 00:10:17,100
presentations in the past on key

199
00:10:14,430 --> 00:10:19,439
management and some people here are very

200
00:10:17,100 --> 00:10:23,520
interested in getting neighbor discovery

201
00:10:19,440 --> 00:10:26,130
formalized whether that's best practices

202
00:10:23,520 --> 00:10:29,340
or real protocols I don't know

203
00:10:26,130 --> 00:10:30,630
I had an offline discussion with the the

204
00:10:29,340 --> 00:10:32,340
gentleman offering to do that work and

205
00:10:30,630 --> 00:10:33,900
he apologized profusely for not having

206
00:10:32,340 --> 00:10:37,020
enough time but I think we can all

207
00:10:33,900 --> 00:10:38,730
understand that but we'll come back to

208
00:10:37,020 --> 00:10:49,560
many of these things at the second half

209
00:10:38,730 --> 00:10:50,590
of the meeting and that's it and the

210
00:10:49,560 --> 00:10:57,699
laptop crashes

211
00:10:50,590 --> 00:10:59,680
oh no that's it so first up I believe is

212
00:10:57,700 --> 00:11:14,980
Scott if you'd like to say a few words

213
00:10:59,680 --> 00:11:16,709
about where we'd be better I think this

214
00:11:14,980 --> 00:11:29,290
is all PDFs

215
00:11:16,710 --> 00:11:32,620
it wasn't trying to choke next okay well

216
00:11:29,290 --> 00:11:36,150
okay so I'm Scott Burley I'm one of the

217
00:11:32,620 --> 00:11:42,400
three authors of the beep abyss

218
00:11:36,150 --> 00:11:47,250
specification we've gotten Magnus's

219
00:11:42,400 --> 00:11:49,000
evaluation back and have put together

220
00:11:47,250 --> 00:11:51,820
responses to the points in the

221
00:11:49,000 --> 00:11:55,150
evaluation this is like 30 slides so I

222
00:11:51,820 --> 00:11:57,160
don't know what kind of the time

223
00:11:55,150 --> 00:11:58,360
budgeting we want to do here we can go

224
00:11:57,160 --> 00:12:04,270
through all of this or we can leave it

225
00:11:58,360 --> 00:12:08,170
to the end I see you know this is the

226
00:12:04,270 --> 00:12:10,689
first document at the top of where it

227
00:12:08,170 --> 00:12:12,160
works yeah we need to clear it out okay

228
00:12:10,690 --> 00:12:14,740
because I always think we should take

229
00:12:12,160 --> 00:12:17,079
you know the tightest especially also

230
00:12:14,740 --> 00:12:19,570
using the eye bandwidth with yeah

231
00:12:17,080 --> 00:12:22,450
madness so the only thing I could say is

232
00:12:19,570 --> 00:12:24,670
maybe you skip the you know typos or

233
00:12:22,450 --> 00:12:26,770
details and okay get it and then our

234
00:12:24,670 --> 00:12:29,530
bills on trade on the I'll try to go

235
00:12:26,770 --> 00:12:38,260
through it rapidly so what I've done

236
00:12:29,530 --> 00:12:41,319
here is I copied Magnus's evaluation in

237
00:12:38,260 --> 00:12:43,450
and if there were like 20 points and for

238
00:12:41,320 --> 00:12:44,980
each of those points there is like one

239
00:12:43,450 --> 00:12:49,540
or sometimes it spilled over onto two

240
00:12:44,980 --> 00:12:56,160
slides and I've copied in his text and

241
00:12:49,540 --> 00:12:58,900
my proposed response to that item and so

242
00:12:56,160 --> 00:13:01,930
let's see this is the status of things

243
00:12:58,900 --> 00:13:04,000
right now and and so we'll go on to try

244
00:13:01,930 --> 00:13:12,589
next then it's just say next

245
00:13:04,000 --> 00:13:16,390
okay so first comment was that the

246
00:13:12,589 --> 00:13:19,519
detain URI scheme needed to be

247
00:13:16,390 --> 00:13:22,930
registered and and and so there's a

248
00:13:19,519 --> 00:13:27,920
section in 10.3 that's been added to the

249
00:13:22,930 --> 00:13:30,739
to the newest draft which is draft 14

250
00:13:27,920 --> 00:13:33,439
I couldn't post the winner would close

251
00:13:30,740 --> 00:13:37,880
I'm on posting internet drafts so I

252
00:13:33,440 --> 00:13:39,320
emailed that draft everybody on the DTM

253
00:13:37,880 --> 00:13:41,720
working group mailing list so you should

254
00:13:39,320 --> 00:13:43,550
have a copy and I will

255
00:13:41,720 --> 00:13:45,950
I meant to post it last Sunday never got

256
00:13:43,550 --> 00:13:48,279
around to it but I will post it sometime

257
00:13:45,950 --> 00:13:55,490
in the next few days and get it onto the

258
00:13:48,279 --> 00:13:59,360
outer native data tracker and and he

259
00:13:55,490 --> 00:14:02,959
also suggests that the IP n URI scheme

260
00:13:59,360 --> 00:14:04,730
which is registered needs is registered

261
00:14:02,959 --> 00:14:06,589
as temporary I think it needs to be

262
00:14:04,730 --> 00:14:09,850
moved to permanent and I agree with that

263
00:14:06,589 --> 00:14:13,040
we certainly need to do that I wanted to

264
00:14:09,850 --> 00:14:15,140
get the DTM scheme registered first and

265
00:14:13,040 --> 00:14:17,599
then move both of them from temporary to

266
00:14:15,140 --> 00:14:19,640
permanent because that there's a review

267
00:14:17,600 --> 00:14:22,459
period that takes some time there but

268
00:14:19,640 --> 00:14:26,180
but I don't see any objection so Rick

269
00:14:22,459 --> 00:14:29,180
Taylor speaking personally I have no

270
00:14:26,180 --> 00:14:30,800
objection to a DTN URI scheme and please

271
00:14:29,180 --> 00:14:36,739
correct me if I've got the wrong end of

272
00:14:30,800 --> 00:14:38,990
the stick here but URI schemes and that

273
00:14:36,740 --> 00:14:41,750
kind of thing really as I understand it

274
00:14:38,990 --> 00:14:44,990
a way for external tooling to understand

275
00:14:41,750 --> 00:14:48,500
that the protocol they're going to be

276
00:14:44,990 --> 00:14:51,140
using to do whatever the user or the the

277
00:14:48,500 --> 00:14:55,220
other system has requested is based on

278
00:14:51,140 --> 00:14:58,579
the DTN protocol stack so if we are

279
00:14:55,220 --> 00:15:02,060
using URIs to distinguish endpoint names

280
00:14:58,579 --> 00:15:05,329
within DTN mm-hmm then we don't need to

281
00:15:02,060 --> 00:15:09,800
use a the the global public URI schema

282
00:15:05,329 --> 00:15:14,079
registry oh oh if we want to say we want

283
00:15:09,800 --> 00:15:17,240
a a global top-level URI scheme so that

284
00:15:14,079 --> 00:15:21,829
Apple can put it in Safari and ooh

285
00:15:17,240 --> 00:15:23,360
computed in Chrome then grabbing two of

286
00:15:21,829 --> 00:15:26,269
them and saying well it's just a

287
00:15:23,360 --> 00:15:28,730
different way of formatting the the the

288
00:15:26,269 --> 00:15:30,649
resource part of your URI but it's all

289
00:15:28,730 --> 00:15:34,850
just a DT any kind of thing hmm

290
00:15:30,649 --> 00:15:39,379
seems wasteful and confusing I I have no

291
00:15:34,850 --> 00:15:40,819
objection to just GTM but having IP n as

292
00:15:39,379 --> 00:15:42,889
well which kind of does the same thing

293
00:15:40,819 --> 00:15:45,229
but the substring format is different

294
00:15:42,889 --> 00:15:50,119
hmm I'm not sure we're doing the right

295
00:15:45,230 --> 00:15:53,809
thing there I this is a topic on which I

296
00:15:50,119 --> 00:15:56,839
have no informed opinion so if we if we

297
00:15:53,809 --> 00:15:58,480
need to register the URI schemes I'm

298
00:15:56,839 --> 00:16:00,679
fine with doing it if we don't need to

299
00:15:58,480 --> 00:16:04,149
find was not doing it I think it is

300
00:16:00,679 --> 00:16:08,749
important that they that the schemes be

301
00:16:04,149 --> 00:16:10,819
defined somewhere so since we are since

302
00:16:08,749 --> 00:16:13,490
we do have a definition of the ipn

303
00:16:10,819 --> 00:16:15,949
scheme in a registry now and since there

304
00:16:13,490 --> 00:16:19,699
is a definition of the DTN scheme in

305
00:16:15,949 --> 00:16:22,248
section 2 dot 10.3 of the bpdus draft

306
00:16:19,699 --> 00:16:24,109
which is certainly subject to amendment

307
00:16:22,249 --> 00:16:29,839
we haven't settled on that yet but but

308
00:16:24,110 --> 00:16:31,519
when we eventually take the that draft

309
00:16:29,839 --> 00:16:33,470
forward it'll it'll that'll be

310
00:16:31,519 --> 00:16:37,160
standardised if that's sufficient that's

311
00:16:33,470 --> 00:16:42,319
that's fine with me i i'm i've no

312
00:16:37,160 --> 00:16:44,240
feeling either way mark here yeah the

313
00:16:42,319 --> 00:16:46,849
two are already registered so I

314
00:16:44,240 --> 00:16:48,439
understand so what's the discuss right

315
00:16:46,850 --> 00:16:52,730
well they're temporary rather than

316
00:16:48,439 --> 00:16:54,529
permanent yeah so I mean I think that we

317
00:16:52,730 --> 00:17:01,160
may use it or not it's another

318
00:16:54,529 --> 00:17:02,689
discussion right so no no and I

319
00:17:01,160 --> 00:17:06,109
completely understand that but it's it

320
00:17:02,689 --> 00:17:09,339
it's it's the difference between the

321
00:17:06,109 --> 00:17:14,319
fact that we're proposing to use a URI

322
00:17:09,339 --> 00:17:18,859
formatted endpoint name within DTN is

323
00:17:14,319 --> 00:17:23,809
conceptually different from a URI scheme

324
00:17:18,859 --> 00:17:26,208
that's designed to go out beyond DTN to

325
00:17:23,809 --> 00:17:27,740
user access devices no I'm trying to

326
00:17:26,209 --> 00:17:29,299
think about that right wording for this

327
00:17:27,740 --> 00:17:31,759
and looking at someone who I know has

328
00:17:29,299 --> 00:17:36,559
experiencing desktop applications and

329
00:17:31,759 --> 00:17:39,739
and user devices so a bit like HTTP URI

330
00:17:36,559 --> 00:17:41,690
any device out there that season HTTP

331
00:17:39,739 --> 00:17:44,149
URI understands oh I got to bring up my

332
00:17:41,690 --> 00:17:44,960
HTTP protocol stack and go do this thing

333
00:17:44,149 --> 00:17:47,238
hmm

334
00:17:44,960 --> 00:17:50,299
and I'm thinking about it at that level

335
00:17:47,239 --> 00:17:53,179
so if you see if I'm sent an email by

336
00:17:50,299 --> 00:17:56,090
you with a link saying DTN : data there

337
00:17:53,179 --> 00:17:57,739
I know if I click that look so it'll do

338
00:17:56,090 --> 00:18:02,988
DTM together whatever you're sending

339
00:17:57,739 --> 00:18:04,850
right so it's like HTTP is is such an

340
00:18:02,989 --> 00:18:06,769
ecosystem of its own and we don't expect

341
00:18:04,850 --> 00:18:09,769
to do that with the detainer and IP n

342
00:18:06,769 --> 00:18:11,889
schemes okay so are we there for

343
00:18:09,769 --> 00:18:14,840
registering in the right registry

344
00:18:11,889 --> 00:18:17,418
because it looked like the DTN URI

345
00:18:14,840 --> 00:18:22,100
registry went into that Ayana registry

346
00:18:17,419 --> 00:18:25,309
for things like HTTP I I didn't know

347
00:18:22,100 --> 00:18:27,649
there were multiple scheme registries so

348
00:18:25,309 --> 00:18:29,389
I know there's all sorts of nonsense in

349
00:18:27,649 --> 00:18:34,129
that top-level registry but should we be

350
00:18:29,389 --> 00:18:36,889
contributing to the noise yeah my name

351
00:18:34,129 --> 00:18:38,359
is Justin and that's it's a good

352
00:18:36,889 --> 00:18:40,668
question to ask yourself which is right

353
00:18:38,359 --> 00:18:43,009
registry but if you're gonna use these

354
00:18:40,669 --> 00:18:45,799
society formats and you wear ayat cetera

355
00:18:43,009 --> 00:18:48,259
I think the right thing is to read keep

356
00:18:45,799 --> 00:18:50,450
the registration even if it's primarily

357
00:18:48,259 --> 00:18:55,970
now than in DT and URI understands is

358
00:18:50,450 --> 00:18:58,399
for node IDs and yeah it might not be

359
00:18:55,970 --> 00:19:00,529
that it doesn't have the same semantics

360
00:18:58,399 --> 00:19:02,570
that's again CP but if there are other

361
00:19:00,529 --> 00:19:06,879
things in this which is just identifiers

362
00:19:02,570 --> 00:19:09,678
etc in in these schema so it's it's big

363
00:19:06,879 --> 00:19:11,418
there's youth freedom here to use what

364
00:19:09,679 --> 00:19:13,309
you do under your own schema in

365
00:19:11,419 --> 00:19:15,619
something yeah absolutely so I Rick

366
00:19:13,309 --> 00:19:18,499
still and absolutely and I agree that

367
00:19:15,619 --> 00:19:21,139
DTN I'm all for registering DTM as a

368
00:19:18,499 --> 00:19:24,559
top-level URI I'm not sure registering

369
00:19:21,139 --> 00:19:26,479
IP n as well as relevant because an IP n

370
00:19:24,559 --> 00:19:28,970
naming schema could just go straight

371
00:19:26,480 --> 00:19:30,440
under the DTN co-run and then you say oh

372
00:19:28,970 --> 00:19:33,070
well actually this is an IP n rather

373
00:19:30,440 --> 00:19:35,749
than a textual but it's all just a DTN

374
00:19:33,070 --> 00:19:40,668
thing you know this URI says this

375
00:19:35,749 --> 00:19:42,120
resource is accessible via YC URL rather

376
00:19:40,669 --> 00:19:45,360
than your I but you know

377
00:19:42,120 --> 00:19:50,340
this resources is located via the DTN

378
00:19:45,360 --> 00:19:52,529
protocol yeah oh yeah well Eric line I

379
00:19:50,340 --> 00:19:55,020
was gonna say I have very limited

380
00:19:52,529 --> 00:19:56,549
experience so far with the registering

381
00:19:55,020 --> 00:19:59,658
you are ends fork at port and that kind

382
00:19:56,549 --> 00:20:02,370
of thing underneath the ITF space those

383
00:19:59,659 --> 00:20:04,169
things kind of seem like placeholders

384
00:20:02,370 --> 00:20:07,399
and descriptors and like you know you

385
00:20:04,169 --> 00:20:11,340
can use this value if you need to for

386
00:20:07,400 --> 00:20:13,020
for many context right I would if the IP

387
00:20:11,340 --> 00:20:14,399
n is also the T scenes already

388
00:20:13,020 --> 00:20:15,450
registered so certainly no harm in

389
00:20:14,399 --> 00:20:16,529
keeping it registered for making it

390
00:20:15,450 --> 00:20:18,390
permanent right it's not going to be

391
00:20:16,529 --> 00:20:19,799
used no one else is gonna recycle it use

392
00:20:18,390 --> 00:20:21,659
it for something else yeah I would

393
00:20:19,799 --> 00:20:22,980
expect I'm afraid I don't understand

394
00:20:21,659 --> 00:20:24,870
enough about IP n to know whether or not

395
00:20:22,980 --> 00:20:29,210
it could be its own thing or belongs

396
00:20:24,870 --> 00:20:37,260
underneath well uh the IP and scheme is

397
00:20:29,210 --> 00:20:39,720
is used exclusively in the current

398
00:20:37,260 --> 00:20:43,020
implementations and deployments of DTN

399
00:20:39,720 --> 00:20:45,690
so just identify n points yeah yeah I

400
00:20:43,020 --> 00:20:50,490
thought DTM I didn't find an endpoint 50

401
00:20:45,690 --> 00:20:54,440
section the IP n scheme is for we're

402
00:20:50,490 --> 00:20:57,870
boring DTN on Space Station and that

403
00:20:54,440 --> 00:21:01,890
deployment of detain uses exclusively IP

404
00:20:57,870 --> 00:21:03,779
n endpoints but they're just names yeah

405
00:21:01,890 --> 00:21:05,970
they're just names they're just names so

406
00:21:03,779 --> 00:21:08,010
I would put my counter argument would be

407
00:21:05,970 --> 00:21:15,360
do I need a mapping from one name to

408
00:21:08,010 --> 00:21:16,919
another yes and that's when we had a

409
00:21:15,360 --> 00:21:19,590
child you know proposed future charter

410
00:21:16,919 --> 00:21:22,289
item about naming and addressing that's

411
00:21:19,590 --> 00:21:25,830
to go into that how do we map between

412
00:21:22,289 --> 00:21:28,740
different named areas etc etcetera but

413
00:21:25,830 --> 00:21:32,158
my my argument stands that this is all

414
00:21:28,740 --> 00:21:34,529
DTM and if you see a DTM prefix then you

415
00:21:32,159 --> 00:21:36,750
say well what comes after DT and : oh I

416
00:21:34,529 --> 00:21:38,520
get this now we're into the DTN naming

417
00:21:36,750 --> 00:21:40,980
thing and whether the next thing is an

418
00:21:38,520 --> 00:21:43,500
IP n or the next thing is it's a textual

419
00:21:40,980 --> 00:21:45,870
string it doesn't matter because the

420
00:21:43,500 --> 00:21:48,000
protocol handler from the for the user

421
00:21:45,870 --> 00:21:50,280
application well no but it goes oh I'm

422
00:21:48,000 --> 00:21:52,169
doing DTM but without the letters IP n

423
00:21:50,280 --> 00:21:54,629
at the front they won't know how to

424
00:21:52,169 --> 00:21:55,810
parse it yeah well it would be a

425
00:21:54,630 --> 00:21:58,510
formatting for me

426
00:21:55,810 --> 00:22:00,370
changed to the to the avian f4 DTN is

427
00:21:58,510 --> 00:22:02,530
that which is easier that's what I and

428
00:22:00,370 --> 00:22:05,590
I'm drifting into the next charter item

429
00:22:02,530 --> 00:22:08,889
I'd like to see DTM : IP n :

430
00:22:05,590 --> 00:22:12,879
as compared to d TN : some other sub

431
00:22:08,890 --> 00:22:21,100
schema but we're doing of course it yeah

432
00:22:12,880 --> 00:22:23,410
I would change in display I believe this

433
00:22:21,100 --> 00:22:25,389
document says it's d TN : and then

434
00:22:23,410 --> 00:22:27,240
effectively free text is all you're

435
00:22:25,390 --> 00:22:30,700
specifying at the moment there's some

436
00:22:27,240 --> 00:22:33,850
that's just that's not what people have

437
00:22:30,700 --> 00:22:37,300
been deploying and it's not what is in

438
00:22:33,850 --> 00:22:40,060
the section 10.3 that I urge you to read

439
00:22:37,300 --> 00:22:43,470
that okay yeah because what people have

440
00:22:40,060 --> 00:22:48,100
been deploying is DTM colon slash slash

441
00:22:43,470 --> 00:22:52,450
DNS name slash D MUX and that's that's

442
00:22:48,100 --> 00:22:54,879
what I wrote in 10.3 yeah and I mean a -

443
00:22:52,450 --> 00:22:56,470
Vicki that's done here again I I mean it

444
00:22:54,880 --> 00:22:58,630
I think it's actually now you need to

445
00:22:56,470 --> 00:23:00,040
make a decision about this because you

446
00:22:58,630 --> 00:23:02,800
already have a structure for how you

447
00:23:00,040 --> 00:23:05,290
include different namespaces and map

448
00:23:02,800 --> 00:23:07,000
that you use to this numeric namespace

449
00:23:05,290 --> 00:23:09,909
and all these things in the protocol so

450
00:23:07,000 --> 00:23:12,010
yeah it's and also think about

451
00:23:09,910 --> 00:23:14,920
implications of actually putting IBM

452
00:23:12,010 --> 00:23:16,060
under detail you were eyes so I think

453
00:23:14,920 --> 00:23:19,690
you need to think this through

454
00:23:16,060 --> 00:23:21,909
um I'll retract my objection okay I

455
00:23:19,690 --> 00:23:23,800
wanted to flag it up but okay I have

456
00:23:21,910 --> 00:23:31,480
received compelling arguments not to

457
00:23:23,800 --> 00:23:33,460
change the status quo so yeah okay so do

458
00:23:31,480 --> 00:23:36,640
we have a our do we have a satisfactory

459
00:23:33,460 --> 00:23:44,440
response to your to your point number

460
00:23:36,640 --> 00:23:46,090
one Magnus yes I think you have so and

461
00:23:44,440 --> 00:23:50,560
but I definitely want people to review

462
00:23:46,090 --> 00:23:52,240
your what is it any change truly even if

463
00:23:50,560 --> 00:23:53,889
it's after 4:00 DT no didn't really have

464
00:23:52,240 --> 00:23:57,910
a structure before when you register it

465
00:23:53,890 --> 00:24:01,780
temporarily for the DTN uri i mean i is

466
00:23:57,910 --> 00:24:03,490
section ten point three it's is it it's

467
00:24:01,780 --> 00:24:04,840
just that the same information that was

468
00:24:03,490 --> 00:24:08,650
already present there has been any

469
00:24:04,840 --> 00:24:10,810
changes section 10.3 just serve

470
00:24:08,650 --> 00:24:12,670
well the current registration and says

471
00:24:10,810 --> 00:24:14,200
the reference for it is look in the

472
00:24:12,670 --> 00:24:18,100
source code for the DTN to

473
00:24:14,200 --> 00:24:20,170
implementation that's what it says right

474
00:24:18,100 --> 00:24:24,010
yeah and so what we're doing here is

475
00:24:20,170 --> 00:24:29,530
we're saying as best I understand it the

476
00:24:24,010 --> 00:24:32,650
source code for GT n2 says that that DTM

477
00:24:29,530 --> 00:24:35,290
colon slash slash DNS name slash D MOX

478
00:24:32,650 --> 00:24:37,600
is what is typically used and so they

479
00:24:35,290 --> 00:24:42,580
documents that that's that's all that is

480
00:24:37,600 --> 00:24:49,300
happening here ok yeah ok good yeah ok

481
00:24:42,580 --> 00:24:53,889
I I would propose to go slide to number

482
00:24:49,300 --> 00:24:57,970
2 this is the thing we spent quite a lot

483
00:24:53,890 --> 00:24:59,320
of time talking about time and we could

484
00:24:57,970 --> 00:25:03,220
spend probably the rest of the day

485
00:24:59,320 --> 00:25:06,689
talking about that here you've you've

486
00:25:03,220 --> 00:25:09,310
had a chance to look at the text that I

487
00:25:06,690 --> 00:25:11,650
that I inserted into the spec and in

488
00:25:09,310 --> 00:25:21,450
what do you think about the the the the

489
00:25:11,650 --> 00:25:25,330
basic issue is is expressing that the

490
00:25:21,450 --> 00:25:29,440
time representations and time fields in

491
00:25:25,330 --> 00:25:31,449
the bundle protocol as UNIX epoch time

492
00:25:29,440 --> 00:25:34,030
rather than UTC and the argument for

493
00:25:31,450 --> 00:25:36,430
that being that UNIX epoch time is is

494
00:25:34,030 --> 00:25:39,310
continuous without the the

495
00:25:36,430 --> 00:25:41,380
discontinuities introduced by leap

496
00:25:39,310 --> 00:25:45,370
seconds and so that makes it easier to

497
00:25:41,380 --> 00:25:46,810
do arithmetic on on time intervals and

498
00:25:45,370 --> 00:25:48,219
so forth because you just subtract the

499
00:25:46,810 --> 00:25:50,590
times rather have to worry about whether

500
00:25:48,220 --> 00:25:54,580
you add a leap second or not and so

501
00:25:50,590 --> 00:25:57,280
that's that is the the explanation that

502
00:25:54,580 --> 00:26:05,470
has been inserted into the specification

503
00:25:57,280 --> 00:26:08,980
now and is that ok I mean from my

504
00:26:05,470 --> 00:26:10,600
perspective it's fun I mean when I asked

505
00:26:08,980 --> 00:26:13,720
this question was like understanding it

506
00:26:10,600 --> 00:26:16,149
and I'm I think you added quite a lot of

507
00:26:13,720 --> 00:26:17,860
text explained you the motivation etc

508
00:26:16,150 --> 00:26:20,320
and I think that makes it clear for

509
00:26:17,860 --> 00:26:21,260
anyone coming off to whites is like it

510
00:26:20,320 --> 00:26:23,780
is

511
00:26:21,260 --> 00:26:27,500
and quite hopefully make sense for

512
00:26:23,780 --> 00:26:29,418
everyone so yeah I had no intention to

513
00:26:27,500 --> 00:26:31,370
variety working group consensus here it

514
00:26:29,419 --> 00:26:32,870
was really like okay have you thought

515
00:26:31,370 --> 00:26:36,439
about all this and the answer was

516
00:26:32,870 --> 00:26:39,199
obviously yes sir okay great

517
00:26:36,440 --> 00:26:41,059
and and of course if if the working

518
00:26:39,200 --> 00:26:43,130
group if anybody in the working group

519
00:26:41,059 --> 00:26:46,850
objects to this then we should discuss

520
00:26:43,130 --> 00:26:49,100
it some more but I I I feel strongly

521
00:26:46,850 --> 00:26:52,699
this is the simplest and best way for us

522
00:26:49,100 --> 00:26:55,820
to go forward and on times in time

523
00:26:52,700 --> 00:26:58,640
representation in DTM chair Hetal it's

524
00:26:55,820 --> 00:27:00,830
all yes if the working group has

525
00:26:58,640 --> 00:27:02,900
discussion about this please feel free

526
00:27:00,830 --> 00:27:04,220
to chip in but we are post working group

527
00:27:02,900 --> 00:27:05,900
last call so the working group has

528
00:27:04,220 --> 00:27:08,090
previously said they are happy with this

529
00:27:05,900 --> 00:27:10,309
so sure discuss but please keep it sweet

530
00:27:08,090 --> 00:27:11,809
or will still be here next year so a

531
00:27:10,309 --> 00:27:14,809
high-level comment here about this is

532
00:27:11,809 --> 00:27:17,240
that I do want the working group to

533
00:27:14,809 --> 00:27:19,220
review all this change because it's

534
00:27:17,240 --> 00:27:21,620
quite significant changes of course on

535
00:27:19,220 --> 00:27:25,429
an and it would be very happy to see at

536
00:27:21,620 --> 00:27:27,080
least a few people posting on the

537
00:27:25,429 --> 00:27:29,299
mailing list thing yeah I reviewed these

538
00:27:27,080 --> 00:27:31,129
changes and I'm happy with them etc

539
00:27:29,299 --> 00:27:34,750
that's so so that you actually look

540
00:27:31,130 --> 00:27:37,059
through them and so before you progress

541
00:27:34,750 --> 00:27:46,190
sure that sounds good

542
00:27:37,059 --> 00:27:51,860
slide three support sign right so in I

543
00:27:46,190 --> 00:27:55,040
added some text in 41.6 that that points

544
00:27:51,860 --> 00:28:01,780
out to the implementer that these these

545
00:27:55,040 --> 00:28:04,879
numbers may go beyond three two bits and

546
00:28:01,780 --> 00:28:07,370
and I'm happy to add some necessary

547
00:28:04,880 --> 00:28:10,790
normative references I didn't know which

548
00:28:07,370 --> 00:28:13,520
ones which normative references you

549
00:28:10,790 --> 00:28:15,860
thought were needed there so if you can

550
00:28:13,520 --> 00:28:19,940
have to do it right now if you can send

551
00:28:15,860 --> 00:28:28,549
me that offline that would be great next

552
00:28:19,940 --> 00:28:29,960
slide right so this is something going

553
00:28:28,549 --> 00:28:31,580
back we've talked about sort of quite a

554
00:28:29,960 --> 00:28:33,350
long time if you don't have synchronize

555
00:28:31,580 --> 00:28:37,189
clocks then the

556
00:28:33,350 --> 00:28:40,580
time stamp zero goes in in the creation

557
00:28:37,190 --> 00:28:47,389
time for all bundles and and the you

558
00:28:40,580 --> 00:28:49,100
need to figure out the time to live and

559
00:28:47,389 --> 00:28:52,580
an expiration time out a bundle from the

560
00:28:49,100 --> 00:28:55,580
on the basis of the bundle age block

561
00:28:52,580 --> 00:28:59,750
rather than the current time versus the

562
00:28:55,580 --> 00:29:03,139
creation time and that is discussed in

563
00:28:59,750 --> 00:29:05,389
section 4.3.2 so I added a forward

564
00:29:03,139 --> 00:29:11,258
reference to four three two in Section

565
00:29:05,389 --> 00:29:11,258
4.2.2 two to address this this comment

566
00:29:12,070 --> 00:29:22,939
the report tid I think there was no text

567
00:29:20,419 --> 00:29:24,860
explicitly saying that the primary block

568
00:29:22,940 --> 00:29:27,080
is now immutable and will never be

569
00:29:24,860 --> 00:29:31,610
changed in that includes the report to

570
00:29:27,080 --> 00:29:33,529
Eid so so I added some text in 4.2.2

571
00:29:31,610 --> 00:29:40,779
that that says the primary block is

572
00:29:33,529 --> 00:29:45,409
immutable maximum hop count upper limit

573
00:29:40,779 --> 00:29:47,450
and yeah this is a good good point it

574
00:29:45,409 --> 00:29:54,529
can can it be like like sixty five

575
00:29:47,450 --> 00:29:58,100
billion hop count upper limit and this

576
00:29:54,529 --> 00:29:59,600
is this this written into the spec as

577
00:29:58,100 --> 00:30:02,240
something that is beyond the scope

578
00:29:59,600 --> 00:30:04,100
because we have no idea how to set it we

579
00:30:02,240 --> 00:30:05,450
could put a number in there I don't know

580
00:30:04,100 --> 00:30:08,449
what number to put in there as a maximum

581
00:30:05,450 --> 00:30:15,169
hop count as a as a maximum acts as a

582
00:30:08,450 --> 00:30:20,600
maximum limit I my my personal feeling

583
00:30:15,169 --> 00:30:24,110
on this is the hop count as a as a

584
00:30:20,600 --> 00:30:26,360
device for triggering just destruction

585
00:30:24,110 --> 00:30:30,469
of a bundle is kind of a backstop that

586
00:30:26,360 --> 00:30:33,289
you really should be using time to live

587
00:30:30,470 --> 00:30:37,460
instead and and this kind of a slender

588
00:30:33,289 --> 00:30:40,309
read to lean on but but and I'm fine

589
00:30:37,460 --> 00:30:42,860
with with with adding this extension

590
00:30:40,309 --> 00:30:46,639
block I know that people feel it's going

591
00:30:42,860 --> 00:30:47,300
to be useful and in that context if we

592
00:30:46,639 --> 00:30:52,159
want to

593
00:30:47,300 --> 00:30:54,320
with a maximum value I'm fine with with

594
00:30:52,160 --> 00:30:57,800
inserting that but I didn't know what

595
00:30:54,320 --> 00:31:01,310
maximum value D is not blush it is

596
00:30:57,800 --> 00:31:05,020
individual account in the IP world is

597
00:31:01,310 --> 00:31:09,320
actually useful for detecting loops yeah

598
00:31:05,020 --> 00:31:12,920
so in some ways they've been a large

599
00:31:09,320 --> 00:31:15,230
number that would you know never be we

600
00:31:12,920 --> 00:31:18,140
were not be useful as a as a mechanism

601
00:31:15,230 --> 00:31:20,690
you're right I was going to say the

602
00:31:18,140 --> 00:31:23,240
inverse which is a maximum number which

603
00:31:20,690 --> 00:31:26,060
is so large that you know no deployment

604
00:31:23,240 --> 00:31:28,460
will ever reach that will be actually

605
00:31:26,060 --> 00:31:31,129
useful for detecting a loop okay because

606
00:31:28,460 --> 00:31:36,170
if you reach that number I mean you're

607
00:31:31,130 --> 00:31:38,510
in trouble okay so I wouldn't think

608
00:31:36,170 --> 00:31:41,720
about the right number well what I'm

609
00:31:38,510 --> 00:31:44,660
saying is like Magnus comment that we

610
00:31:41,720 --> 00:31:46,820
should probably know I'm notify a number

611
00:31:44,660 --> 00:31:48,350
I'm perfectly fine with the identifying

612
00:31:46,820 --> 00:31:50,540
number and putting it in there and I'm

613
00:31:48,350 --> 00:31:54,199
like open to suggestions as to the value

614
00:31:50,540 --> 00:31:56,300
of that number wrong in felt within a

615
00:31:54,200 --> 00:31:59,060
DTN loop with some function and all the

616
00:31:56,300 --> 00:32:01,250
bad thing yeah but going round and round

617
00:31:59,060 --> 00:32:03,490
and round that loop forever may well be

618
00:32:01,250 --> 00:32:07,580
about things I mean do we want to say

619
00:32:03,490 --> 00:32:09,920
255 do you want say a Ric to stripping

620
00:32:07,580 --> 00:32:11,780
in at this point personally my

621
00:32:09,920 --> 00:32:14,480
consideration here is that is this that

622
00:32:11,780 --> 00:32:16,190
this is an extension block but is it can

623
00:32:14,480 --> 00:32:18,380
an intermediate node replace this

624
00:32:16,190 --> 00:32:21,260
extension block to the point where it

625
00:32:18,380 --> 00:32:23,660
says okay so say we go for 255 and

626
00:32:21,260 --> 00:32:25,730
someone who from a position of authority

627
00:32:23,660 --> 00:32:27,860
says I know I've got this to a safe

628
00:32:25,730 --> 00:32:29,990
place within my network I will now start

629
00:32:27,860 --> 00:32:33,260
forwarding it on having rewritten that

630
00:32:29,990 --> 00:32:35,600
block then a low number makes sense but

631
00:32:33,260 --> 00:32:38,180
if if if it's an immutable value that is

632
00:32:35,600 --> 00:32:41,030
set by the source who cannot predict how

633
00:32:38,180 --> 00:32:43,070
long his these pathways then we have to

634
00:32:41,030 --> 00:32:44,870
have quite a big number it's it's an

635
00:32:43,070 --> 00:32:49,159
extension block and it could be added

636
00:32:44,870 --> 00:32:52,820
changed removed and anywhere along the

637
00:32:49,160 --> 00:32:55,790
path so it's a it's a I would say it's a

638
00:32:52,820 --> 00:32:57,980
management device so a smaller number it

639
00:32:55,790 --> 00:33:00,230
feels to me that a smaller number is

640
00:32:57,980 --> 00:33:01,159
more manageable you know once you start

641
00:33:00,230 --> 00:33:06,399
to go off into six

642
00:33:01,159 --> 00:33:06,399
four bits it's it's yeah yeah right so

643
00:33:07,389 --> 00:33:11,178
can we reach a consensus on mailing

644
00:33:09,710 --> 00:33:15,849
lists maybe I think that's the right

645
00:33:11,179 --> 00:33:15,849
place for it okay yeah good next slide

646
00:33:16,600 --> 00:33:19,770
[Music]

647
00:33:20,679 --> 00:33:27,019
questions male oh yeah right here this

648
00:33:22,909 --> 00:33:28,820
was a text talking about status reports

649
00:33:27,019 --> 00:33:31,340
could be a result in unacceptable

650
00:33:28,820 --> 00:33:38,019
increase in the bundle traffic on the

651
00:33:31,340 --> 00:33:48,019
network and and Magnus's comment was

652
00:33:38,019 --> 00:33:50,570
that the that some large number like on

653
00:33:48,019 --> 00:33:52,970
the function is the number of nodes in

654
00:33:50,570 --> 00:33:57,189
the path the number of status reports

655
00:33:52,970 --> 00:34:04,549
could be sent out and and so I added in

656
00:33:57,190 --> 00:34:10,549
5.1 a note that that's something like 1

657
00:34:04,549 --> 00:34:13,009
plus no 2 plus 2 to the 2 times n status

658
00:34:10,549 --> 00:34:16,940
reports 2 times n minus 1 status reports

659
00:34:13,010 --> 00:34:19,510
could go out so that that comment is

660
00:34:16,940 --> 00:34:25,460
added in in 5.1 and go to the next slide

661
00:34:19,510 --> 00:34:32,329
so there's also a clarifying phrase

662
00:34:25,460 --> 00:34:36,549
added in 5.1 saying that status reports

663
00:34:32,329 --> 00:34:40,460
are intended to be used for functions

664
00:34:36,549 --> 00:34:46,579
like trace routing and so that that

665
00:34:40,460 --> 00:34:50,589
phrase has been added in 5.1 and in the

666
00:34:46,579 --> 00:34:57,589
next slide those last one on this point

667
00:34:50,589 --> 00:35:03,529
is saying that policy mechanisms are

668
00:34:57,589 --> 00:35:07,910
supposed to limit the generation of

669
00:35:03,529 --> 00:35:10,430
status reports and and what those

670
00:35:07,910 --> 00:35:13,069
mechanisms are is beyond the scope of

671
00:35:10,430 --> 00:35:14,419
the specification that we expect that

672
00:35:13,069 --> 00:35:17,630
that will happen and

673
00:35:14,420 --> 00:35:24,170
and and we don't try to nail that down

674
00:35:17,630 --> 00:35:26,900
here and and I think that's where the

675
00:35:24,170 --> 00:35:29,900
issue is left at this point that it is

676
00:35:26,900 --> 00:35:31,280
possible for for the user to ask for

677
00:35:29,900 --> 00:35:35,030
status reports on everything that

678
00:35:31,280 --> 00:35:36,770
happens on every bundle and there needs

679
00:35:35,030 --> 00:35:40,190
to be some sort of a management

680
00:35:36,770 --> 00:35:44,259
mechanism to defend against that but I

681
00:35:40,190 --> 00:35:47,809
don't think we can legislate it in this

682
00:35:44,260 --> 00:35:53,599
specification is I don't know Magnus is

683
00:35:47,809 --> 00:35:55,750
that are we okay there oh okay okay next

684
00:35:53,599 --> 00:35:55,750
slide

685
00:35:57,339 --> 00:36:09,049
see if oh okay some clarifying text in

686
00:36:03,799 --> 00:36:11,660
5.3 that that says well what the what

687
00:36:09,049 --> 00:36:15,680
the rationale is for the the language

688
00:36:11,660 --> 00:36:17,180
about disavowing suppressing the notes

689
00:36:15,680 --> 00:36:20,029
membership in the destination endpoint

690
00:36:17,180 --> 00:36:23,828
and the the basic idea there is that at

691
00:36:20,030 --> 00:36:31,190
that point in the specification you are

692
00:36:23,829 --> 00:36:34,849
dispatching a bundle you've you've it

693
00:36:31,190 --> 00:36:37,640
happens to a bundle that is maybe it's a

694
00:36:34,849 --> 00:36:40,369
multicast bundle the bundle destination

695
00:36:37,640 --> 00:36:42,049
is an end point and an end point in

696
00:36:40,369 --> 00:36:44,180
which there are multiple members one of

697
00:36:42,049 --> 00:36:47,540
which is the bundle is the node that is

698
00:36:44,180 --> 00:36:49,700
currently forwarding the bundle and so a

699
00:36:47,540 --> 00:36:54,020
copy of the bundle may have been

700
00:36:49,700 --> 00:36:55,279
delivered and yet you that's not the end

701
00:36:54,020 --> 00:36:56,930
of the story the fact that you've

702
00:36:55,280 --> 00:36:59,150
delivered the bundle locally does not

703
00:36:56,930 --> 00:37:01,490
mean that you don't additionally go

704
00:36:59,150 --> 00:37:04,160
ahead and forward it because it's a some

705
00:37:01,490 --> 00:37:07,368
multi point delivery bundle and for that

706
00:37:04,160 --> 00:37:11,450
purpose of forwarding it the local node

707
00:37:07,369 --> 00:37:12,799
is disavowed as a member of the endpoint

708
00:37:11,450 --> 00:37:15,348
because otherwise you get into an

709
00:37:12,799 --> 00:37:17,089
infinite loop for you for the bundle the

710
00:37:15,349 --> 00:37:18,500
the Nova for the bundle to itself after

711
00:37:17,089 --> 00:37:21,460
having delivered it once

712
00:37:18,500 --> 00:37:25,180
so let's there's clarifying text added

713
00:37:21,460 --> 00:37:25,180
25.3 to explain that

714
00:37:27,140 --> 00:37:37,730
let's see oh this is a excellent catch

715
00:37:33,380 --> 00:37:39,290
that section instead of saying the

716
00:37:37,730 --> 00:37:40,790
remaining steps of section five are

717
00:37:39,290 --> 00:37:43,040
skipped it should be the remaining

718
00:37:40,790 --> 00:37:49,090
section steps of section 5.4 are skipped

719
00:37:43,040 --> 00:37:52,420
so that's changed destiny okay end point

720
00:37:49,090 --> 00:37:55,670
unintelligible and block unintelligible

721
00:37:52,420 --> 00:37:59,450
to clarify that yeah it does mean that

722
00:37:55,670 --> 00:38:01,310
the that the receiving bundle protocol

723
00:37:59,450 --> 00:38:03,529
agent can't process the block for some

724
00:38:01,310 --> 00:38:06,590
reason either that it's malformed or

725
00:38:03,530 --> 00:38:08,480
that it's corrupted or is a type of

726
00:38:06,590 --> 00:38:14,360
extension block that the implementation

727
00:38:08,480 --> 00:38:16,100
doesn't recognize so the the magaz

728
00:38:14,360 --> 00:38:17,690
question here is is is there a point in

729
00:38:16,100 --> 00:38:20,210
separating out the case where the CRC

730
00:38:17,690 --> 00:38:23,120
indicates a corruption and so there's a

731
00:38:20,210 --> 00:38:31,160
I've added a new step three in section

732
00:38:23,120 --> 00:38:34,250
5.6 to to address this okay we're almost

733
00:38:31,160 --> 00:38:36,259
halfway through service description

734
00:38:34,250 --> 00:38:43,310
appears very high level of the co-chairs

735
00:38:36,260 --> 00:38:49,760
net providing comments we're going

736
00:38:43,310 --> 00:38:54,320
faster well we let's see

737
00:38:49,760 --> 00:38:58,270
bono agent ok the service description

738
00:38:54,320 --> 00:39:02,660
and and and what is expected from the

739
00:38:58,270 --> 00:39:04,220
convergence layer adapter first of all

740
00:39:02,660 --> 00:39:06,830
the the point about the bundle agent

741
00:39:04,220 --> 00:39:09,109
needing a signal when the converts layer

742
00:39:06,830 --> 00:39:11,060
adapter has has finished forwarding the

743
00:39:09,110 --> 00:39:13,010
bundle yes that's absolutely needed and

744
00:39:11,060 --> 00:39:16,970
so there's a second bulletin that has

745
00:39:13,010 --> 00:39:18,950
been added into the list of required

746
00:39:16,970 --> 00:39:24,080
services from the convergence layer in

747
00:39:18,950 --> 00:39:27,080
7.2 beyond that we really want to not

748
00:39:24,080 --> 00:39:28,670
constrain implementations of of bundle

749
00:39:27,080 --> 00:39:31,370
protocol and convergence their adapters

750
00:39:28,670 --> 00:39:33,800
anymore than we have to in this

751
00:39:31,370 --> 00:39:35,630
particular this interface between the

752
00:39:33,800 --> 00:39:38,420
convergence their adapter and the bundle

753
00:39:35,630 --> 00:39:39,350
protocol is it doesn't really have any

754
00:39:38,420 --> 00:39:41,210
impact on

755
00:39:39,350 --> 00:39:45,080
operability it has to do with

756
00:39:41,210 --> 00:39:48,710
implementation and so I think it's best

757
00:39:45,080 --> 00:39:54,380
not to impose any further constraints on

758
00:39:48,710 --> 00:40:03,500
this interface Magnus you have a thought

759
00:39:54,380 --> 00:40:06,440
on this so um no not today actually I

760
00:40:03,500 --> 00:40:08,270
think I need to read I mean I understand

761
00:40:06,440 --> 00:40:09,580
this this is very different for

762
00:40:08,270 --> 00:40:13,730
different conversions later and how you

763
00:40:09,580 --> 00:40:15,230
that they are things like UK if you your

764
00:40:13,730 --> 00:40:17,510
radio transmitter has a certain amount

765
00:40:15,230 --> 00:40:20,230
of families that are regressing bit

766
00:40:17,510 --> 00:40:23,420
rated capable sending out the data and

767
00:40:20,230 --> 00:40:25,190
TCP is gonna have varying depending on

768
00:40:23,420 --> 00:40:29,090
this donations and right and all these

769
00:40:25,190 --> 00:40:32,330
things so yeah it's I might come back to

770
00:40:29,090 --> 00:40:37,760
this after I read the covariance layer

771
00:40:32,330 --> 00:40:40,009
and if I have any but yeah I I will

772
00:40:37,760 --> 00:40:42,200
review the text the text changes in

773
00:40:40,010 --> 00:40:45,200
detail next week also that's okay

774
00:40:42,200 --> 00:40:50,450
that makes sense yeah and then one more

775
00:40:45,200 --> 00:40:54,020
page on this there's a - of - okay and

776
00:40:50,450 --> 00:40:55,759
and again trying to avoid over over

777
00:40:54,020 --> 00:40:57,350
constraining and and we do have some

778
00:40:55,760 --> 00:41:00,710
implementation experience that that

779
00:40:57,350 --> 00:41:02,839
indicates that we seem to be a-okay here

780
00:41:00,710 --> 00:41:05,360
that that implementation seem to be able

781
00:41:02,840 --> 00:41:13,280
to function well enough without any

782
00:41:05,360 --> 00:41:14,720
additional guidance next slide oh yeah

783
00:41:13,280 --> 00:41:18,410
okay this one is the one that mark

784
00:41:14,720 --> 00:41:23,330
objects - and I I will I will point out

785
00:41:18,410 --> 00:41:25,730
here that I and neutral and agnostic on

786
00:41:23,330 --> 00:41:31,190
this whether the bundle security

787
00:41:25,730 --> 00:41:32,540
protocol implementation in in in any

788
00:41:31,190 --> 00:41:38,290
bundle protocol implementation is

789
00:41:32,540 --> 00:41:42,160
required I'm happy either way but I will

790
00:41:38,290 --> 00:41:46,520
step aside and then but mark speak

791
00:41:42,160 --> 00:41:52,670
mcvish has individual um one of the use

792
00:41:46,520 --> 00:41:54,859
cases of DTN and BP is in space where

793
00:41:52,670 --> 00:42:01,099
DTN is essentially the network protocol

794
00:41:54,859 --> 00:42:04,790
it has you know a layer down so in in

795
00:42:01,099 --> 00:42:10,990
those which is you know an important use

796
00:42:04,790 --> 00:42:16,630
case for teaching in this context then

797
00:42:10,990 --> 00:42:20,868
it is similar to IP and in IP we tried

798
00:42:16,630 --> 00:42:24,500
actually you know ipv6 for example to

799
00:42:20,869 --> 00:42:27,799
force IPSec to be part of to be

800
00:42:24,500 --> 00:42:29,990
mandatory but we fail and if you look at

801
00:42:27,799 --> 00:42:32,180
the actual deployment right now security

802
00:42:29,990 --> 00:42:36,890
services are actually up in the stack

803
00:42:32,180 --> 00:42:39,859
most yet transfer ID TLS HTTP level I

804
00:42:36,890 --> 00:42:42,200
and I completely agree with this because

805
00:42:39,859 --> 00:42:44,119
when you're more near the application

806
00:42:42,200 --> 00:42:45,890
level then the application could

807
00:42:44,119 --> 00:42:48,260
actually you know have a whole company

808
00:42:45,890 --> 00:42:51,890
what what happens in security when it's

809
00:42:48,260 --> 00:42:54,020
two down there's you know no connection

810
00:42:51,890 --> 00:42:56,359
no look in it then the application

811
00:42:54,020 --> 00:43:01,970
doesn't know what security services was

812
00:42:56,359 --> 00:43:04,308
a queer actually used so and that is an

813
00:43:01,970 --> 00:43:06,609
EP sake while you know very good

814
00:43:04,309 --> 00:43:10,569
protocol is actually pretty heavy-duty

815
00:43:06,609 --> 00:43:13,400
and you know in forcing all the

816
00:43:10,569 --> 00:43:16,609
implementations to actually have BP sake

817
00:43:13,400 --> 00:43:19,160
is way too much for me and it will in

818
00:43:16,609 --> 00:43:21,558
you know impaired you know for example

819
00:43:19,160 --> 00:43:24,440
more IOT or embedded devices that are

820
00:43:21,559 --> 00:43:26,869
most likely to be in space too so I mean

821
00:43:24,440 --> 00:43:30,020
I think we should think of security

822
00:43:26,869 --> 00:43:32,089
you know much higher in the stack or VP

823
00:43:30,020 --> 00:43:34,400
sick as a choice so maybe there's some

824
00:43:32,089 --> 00:43:36,589
wording that should say you know around

825
00:43:34,400 --> 00:43:40,670
you know please apply a security at some

826
00:43:36,589 --> 00:43:47,690
level but I'm strongly against requiring

827
00:43:40,670 --> 00:43:51,230
VP sick in all VP implementations - and

828
00:43:47,690 --> 00:43:53,869
I understand that argument I think this

829
00:43:51,230 --> 00:43:58,339
goes into you part the choices you need

830
00:43:53,869 --> 00:44:01,730
to do when you do particularly

831
00:43:58,339 --> 00:44:03,849
deployments because I mean it might be

832
00:44:01,730 --> 00:44:07,670
more reasonable for the

833
00:44:03,849 --> 00:44:10,630
reindeer net or whatever or some other

834
00:44:07,670 --> 00:44:13,730
like deployment here on earth or to

835
00:44:10,630 --> 00:44:15,950
actually use security because you have

836
00:44:13,730 --> 00:44:17,420
much easier you have easy access to in

837
00:44:15,950 --> 00:44:19,879
troubleshooting all these things which

838
00:44:17,420 --> 00:44:23,330
is probably one of the major downsides

839
00:44:19,880 --> 00:44:25,400
with actually men having the security in

840
00:44:23,330 --> 00:44:28,819
all ways and that if it fails you can't

841
00:44:25,400 --> 00:44:33,109
get back and I buy that Force Base some

842
00:44:28,820 --> 00:44:36,200
space usages so but I think we want to

843
00:44:33,109 --> 00:44:38,990
be try to recommend usage shall be basic

844
00:44:36,200 --> 00:44:42,470
and that it's and very clear that this

845
00:44:38,990 --> 00:44:44,118
is deployment consideration and that you

846
00:44:42,470 --> 00:44:46,759
really should think about how to secure

847
00:44:44,119 --> 00:44:48,830
it because at the same time in a lot of

848
00:44:46,760 --> 00:44:52,130
I mean in certain type of deployments

849
00:44:48,830 --> 00:44:55,759
this is gonna be from a bit up in the

850
00:44:52,130 --> 00:44:57,440
stack anyway and and and not wasting

851
00:44:55,760 --> 00:45:01,670
store-and-forward resources actually

852
00:44:57,440 --> 00:45:03,589
might be high relevance and be piece a

853
00:45:01,670 --> 00:45:05,420
can have help without fit sure that you

854
00:45:03,589 --> 00:45:12,910
have one on Celtic ated and known for

855
00:45:05,420 --> 00:45:19,210
the agents etc so from my own

856
00:45:12,910 --> 00:45:21,230
perspective we are I believe in

857
00:45:19,210 --> 00:45:23,540
spaceflight communication of spaceflight

858
00:45:21,230 --> 00:45:26,540
mission communications were increasingly

859
00:45:23,540 --> 00:45:30,040
going to be meeting and implementing

860
00:45:26,540 --> 00:45:34,580
security and end-to-end security

861
00:45:30,040 --> 00:45:36,290
provided by BP is I believe is going to

862
00:45:34,580 --> 00:45:42,619
be a good thing for that at the same

863
00:45:36,290 --> 00:45:45,070
time I recognize that it is there's

864
00:45:42,619 --> 00:45:48,410
there's a lot that goes into BP SEC and

865
00:45:45,070 --> 00:45:51,050
implementations are non-trivial there's

866
00:45:48,410 --> 00:45:54,500
there's a lot of work to do it and and

867
00:45:51,050 --> 00:45:57,410
the those processing overhead so my

868
00:45:54,500 --> 00:45:59,960
inclination here would be to say that BP

869
00:45:57,410 --> 00:46:02,930
SEC in in any bundle protocol

870
00:45:59,960 --> 00:46:06,470
specification is strongly recommended as

871
00:46:02,930 --> 00:46:09,290
opposed to required that would be my own

872
00:46:06,470 --> 00:46:12,109
preference so Rick Tyler speaking

873
00:46:09,290 --> 00:46:14,420
personally I'm actually happy with the

874
00:46:12,109 --> 00:46:17,040
the blue text I understand both sides of

875
00:46:14,420 --> 00:46:19,290
this argument so

876
00:46:17,040 --> 00:46:22,230
the inclusion of bundled security

877
00:46:19,290 --> 00:46:25,170
protocol implementation being a

878
00:46:22,230 --> 00:46:26,760
requirement I if you've got a BPA you

879
00:46:25,170 --> 00:46:29,130
should implement bundle security

880
00:46:26,760 --> 00:46:31,590
protocol that doesn't necessarily mean

881
00:46:29,130 --> 00:46:35,190
the operator is going to turn it on but

882
00:46:31,590 --> 00:46:38,100
it does mean it's available you you know

883
00:46:35,190 --> 00:46:41,700
the coders out there ready you do this

884
00:46:38,100 --> 00:46:43,020
this is this is important because there

885
00:46:41,700 --> 00:46:45,149
are you I see mark rushing to the mic

886
00:46:43,020 --> 00:46:48,660
and there are use cases I completely

887
00:46:45,150 --> 00:46:55,140
understand where you don't want this but

888
00:46:48,660 --> 00:46:57,870
you really should just an example I have

889
00:46:55,140 --> 00:46:58,770
a relay in space it just relays no

890
00:46:57,870 --> 00:47:02,250
there's nothing

891
00:46:58,770 --> 00:47:09,420
yeah why do I need you know be piece egg

892
00:47:02,250 --> 00:47:12,120
in it no I'm just a relay laying stuff

893
00:47:09,420 --> 00:47:14,040
right but that doesn't matter as my I'm

894
00:47:12,120 --> 00:47:16,980
looking at edge to clarify this but

895
00:47:14,040 --> 00:47:20,100
that's fine a BP SiC enabled bundle

896
00:47:16,980 --> 00:47:22,290
arrives you can check it you may decide

897
00:47:20,100 --> 00:47:24,540
not to validate it you can say yeah CLC

898
00:47:22,290 --> 00:47:26,730
looks good for it therefore not

899
00:47:24,540 --> 00:47:30,450
embracing privacy I don't need to be

900
00:47:26,730 --> 00:47:32,760
sick then okay yeah that's a point yeah

901
00:47:30,450 --> 00:47:43,350
I mean there's multiple roles in

902
00:47:32,760 --> 00:47:45,270
different places and you know so this is

903
00:47:43,350 --> 00:47:50,060
that brain I I stood up because Rick

904
00:47:45,270 --> 00:47:53,220
said ed brain so what a reflex action

905
00:47:50,060 --> 00:47:55,049
well so one of and I think we call this

906
00:47:53,220 --> 00:47:57,839
out early in the BP stack document there

907
00:47:55,050 --> 00:48:00,030
are multiple ways of getting security

908
00:47:57,840 --> 00:48:03,330
for your application data the

909
00:48:00,030 --> 00:48:05,520
application payload could be ciphertext

910
00:48:03,330 --> 00:48:07,470
or sign text as part of the user payload

911
00:48:05,520 --> 00:48:10,200
to begin with obviously there can be

912
00:48:07,470 --> 00:48:12,750
security at other layers in the stack in

913
00:48:10,200 --> 00:48:15,960
particular BP SEC is meant for the cases

914
00:48:12,750 --> 00:48:18,930
where you want to secure individual

915
00:48:15,960 --> 00:48:21,140
blocks and a bundle separately or you

916
00:48:18,930 --> 00:48:22,649
want to provide security as a service to

917
00:48:21,140 --> 00:48:26,160
application layers

918
00:48:22,650 --> 00:48:28,740
I am fine with strong recommendation as

919
00:48:26,160 --> 00:48:30,660
opposed to required I I don't know that

920
00:48:28,740 --> 00:48:32,758
the implementation of BP sack

921
00:48:30,660 --> 00:48:34,410
is onerous but but the processing of the

922
00:48:32,759 --> 00:48:37,859
cipher suites and so on maybe for

923
00:48:34,410 --> 00:48:39,808
resource-constrained nodes and I would

924
00:48:37,859 --> 00:48:42,089
say that if you were a real a spacecraft

925
00:48:39,809 --> 00:48:46,200
and you were doing bundle inspection as

926
00:48:42,089 --> 00:48:49,170
opposed to bent pipe you may want to do

927
00:48:46,200 --> 00:48:51,509
the kind of verification of big blocks

928
00:48:49,170 --> 00:48:53,460
and understand whether certain security

929
00:48:51,509 --> 00:48:55,680
items are or are not present in a bundle

930
00:48:53,460 --> 00:48:57,690
for the purpose of throwing traffic away

931
00:48:55,680 --> 00:48:59,038
before it goes into the network and one

932
00:48:57,690 --> 00:49:02,309
of the things that we do look at for

933
00:48:59,039 --> 00:49:05,400
relays as entry points into the network

934
00:49:02,309 --> 00:49:07,500
at large is what kind of filtering can

935
00:49:05,400 --> 00:49:09,420
they do to tamp down wasteful traffic

936
00:49:07,500 --> 00:49:10,440
but there are other ways of handling

937
00:49:09,420 --> 00:49:13,529
that as well

938
00:49:10,440 --> 00:49:19,289
so I recommend strongly recommend as

939
00:49:13,529 --> 00:49:20,789
opposed to require - wisdom I mean

940
00:49:19,289 --> 00:49:23,099
there's another aspect of this which is

941
00:49:20,789 --> 00:49:25,680
that BP SiC is not enough you need to

942
00:49:23,099 --> 00:49:27,769
have also in that case if you saying

943
00:49:25,680 --> 00:49:30,598
required you also need to point to one

944
00:49:27,769 --> 00:49:33,390
cipher suite don't get me right or

945
00:49:30,599 --> 00:49:36,230
security content yeah that's in the

946
00:49:33,390 --> 00:49:37,769
pipeline and it should be chasing VP set

947
00:49:36,230 --> 00:49:42,509
yeah absolutely

948
00:49:37,769 --> 00:49:44,879
but I think it's and I am willing to

949
00:49:42,509 --> 00:49:46,440
defend recommended here that's that's

950
00:49:44,880 --> 00:49:48,089
pass take this towards the security is

951
00:49:46,440 --> 00:49:54,960
because I'm gonna be on the front line -

952
00:49:48,089 --> 00:49:58,980
I have to argue jeez but yes Meghan I

953
00:49:54,960 --> 00:50:01,799
think in ITF words it should be should

954
00:49:58,980 --> 00:50:04,740
instead of must so we were what we were

955
00:50:01,799 --> 00:50:06,779
talking was must implement and then it

956
00:50:04,740 --> 00:50:11,490
should say should instead of strongly

957
00:50:06,779 --> 00:50:15,480
you know spine device that's the IDF I'm

958
00:50:11,490 --> 00:50:18,839
happy I changed language absolutely just

959
00:50:15,480 --> 00:50:21,630
with my chair hat on can I change the

960
00:50:18,839 --> 00:50:23,578
consensus of the room just on this one I

961
00:50:21,630 --> 00:50:28,220
need to do this as a hum just because

962
00:50:23,579 --> 00:50:33,710
there farmer those in favor of should I

963
00:50:28,220 --> 00:50:38,598
recommended not mandatory can you hum

964
00:50:33,710 --> 00:50:38,599
and those who think it

965
00:50:38,920 --> 00:50:51,069
oh yeah it still counts and those who

966
00:50:46,780 --> 00:50:56,319
want mandatory required must verbiage

967
00:50:51,069 --> 00:50:59,380
hum okay so that's that see me and here

968
00:50:56,319 --> 00:51:01,359
comes Ronald's - sorry question and

969
00:50:59,380 --> 00:51:04,630
there's no mandatory to implement them

970
00:51:01,359 --> 00:51:05,740
and authority to use me I think we're

971
00:51:04,630 --> 00:51:09,130
only talking about mandatory to

972
00:51:05,740 --> 00:51:11,319
implement right I think we can't force

973
00:51:09,130 --> 00:51:14,740
mandatory to use was never on the table

974
00:51:11,319 --> 00:51:17,920
yes so so your mandatory to implement I

975
00:51:14,740 --> 00:51:20,529
had silence I think we got consensus

976
00:51:17,920 --> 00:51:22,359
that so obviously we'll take to the list

977
00:51:20,530 --> 00:51:25,020
as well if anyone on the list or on Java

978
00:51:22,359 --> 00:51:31,390
has has strong opinions please chime in

979
00:51:25,020 --> 00:51:36,540
removal excellent next slide section two

980
00:51:31,390 --> 00:51:41,290
a nine converts our protocols they

981
00:51:36,540 --> 00:51:43,359
should be used oh also wouldn't be

982
00:51:41,290 --> 00:51:45,040
reasonable to recommend using an

983
00:51:43,359 --> 00:51:46,569
encryption and Dean at the converters

984
00:51:45,040 --> 00:51:48,400
there to avoid eavesdropping on the part

985
00:51:46,569 --> 00:51:50,290
that it and and prevent traffic analysis

986
00:51:48,400 --> 00:51:52,750
by third parties and that is a

987
00:51:50,290 --> 00:51:54,640
reasonable thing to recommend and that's

988
00:51:52,750 --> 00:52:02,410
added in the fourth paragraph of section

989
00:51:54,640 --> 00:52:07,598
9 okay section more on section 9 and

990
00:52:02,410 --> 00:52:11,078
this again is status reports and do we

991
00:52:07,599 --> 00:52:17,200
do we need mitigations to prevent status

992
00:52:11,079 --> 00:52:23,130
report bumble storms and next slide I

993
00:52:17,200 --> 00:52:29,308
think is the continuation of this and

994
00:52:23,130 --> 00:52:33,339
and so what I did for this is there is a

995
00:52:29,309 --> 00:52:40,119
step 2 of section 5.4 says that the

996
00:52:33,339 --> 00:52:43,270
bundle protocol can can essentially drop

997
00:52:40,119 --> 00:52:47,500
can can decline to forward a bundle for

998
00:52:43,270 --> 00:52:50,680
various reasons that are listed in the

999
00:52:47,500 --> 00:52:52,120
table that is in figure 4 none of the

1000
00:52:50,680 --> 00:52:57,390
reason codes in figure 4

1001
00:52:52,120 --> 00:52:59,740
addressed sort of arbitrarily and this

1002
00:52:57,390 --> 00:53:00,160
this bundle is too much we have to throw

1003
00:52:59,740 --> 00:53:03,100
it away

1004
00:53:00,160 --> 00:53:07,720
and so I've added one more reason code

1005
00:53:03,100 --> 00:53:11,650
for nothing since they're gonna be used

1006
00:53:07,720 --> 00:53:13,899
in in in in status reports but just so

1007
00:53:11,650 --> 00:53:18,730
that it's an additional authorizing

1008
00:53:13,900 --> 00:53:22,590
reason for declining to forward a bundle

1009
00:53:18,730 --> 00:53:28,960
so I think that's a sufficient mechanism

1010
00:53:22,590 --> 00:53:32,500
for dealing with the excess traffic that

1011
00:53:28,960 --> 00:53:36,550
is status reports for example so I I I

1012
00:53:32,500 --> 00:53:42,070
think that's a as much of a mitigation

1013
00:53:36,550 --> 00:53:47,170
as as we can reasonably impose here next

1014
00:53:42,070 --> 00:53:48,370
slide a discussion of how status senator

1015
00:53:47,170 --> 00:53:54,970
of a status report should set the

1016
00:53:48,370 --> 00:53:56,859
lifetime in max hops and here we really

1017
00:53:54,970 --> 00:53:59,680
do not I mean really lifetime and

1018
00:53:56,860 --> 00:54:01,960
maximum hops we these are still research

1019
00:53:59,680 --> 00:54:05,020
topics just exactly how you set these

1020
00:54:01,960 --> 00:54:06,820
things we we don't know and I think we

1021
00:54:05,020 --> 00:54:09,280
want not to try to constrain it in this

1022
00:54:06,820 --> 00:54:11,680
document I think it's something that

1023
00:54:09,280 --> 00:54:13,810
that ought to emerge in the course of

1024
00:54:11,680 --> 00:54:17,109
operations and deployment and and and

1025
00:54:13,810 --> 00:54:20,040
and in research so I would prefer that

1026
00:54:17,110 --> 00:54:30,220
we not say anything more about it here

1027
00:54:20,040 --> 00:54:33,779
next slide okay this is the Ayane

1028
00:54:30,220 --> 00:54:36,069
section I think and several improvements

1029
00:54:33,780 --> 00:54:37,900
individual subsections I've added

1030
00:54:36,070 --> 00:54:44,710
individual subsections for the registry

1031
00:54:37,900 --> 00:54:48,340
operations and and and the references to

1032
00:54:44,710 --> 00:54:52,120
specific sections of this document have

1033
00:54:48,340 --> 00:55:01,660
been added in those subsections next

1034
00:54:52,120 --> 00:55:04,630
slide let's see this yeah the if there

1035
00:55:01,660 --> 00:55:08,230
is if the registry says that

1036
00:55:04,630 --> 00:55:10,450
RFC's 7116 is the origin of this

1037
00:55:08,230 --> 00:55:12,420
registry than we've got we should like

1038
00:55:10,450 --> 00:55:14,618
go back and look at the registry because

1039
00:55:12,420 --> 00:55:18,220
7116 is the definition of the Licklider

1040
00:55:14,619 --> 00:55:22,680
transmission protocol I think's 6255 is

1041
00:55:18,220 --> 00:55:22,680
the right reference here next slide Oh

1042
00:55:22,890 --> 00:55:33,848
is there a comment all I did was pull up

1043
00:55:29,580 --> 00:55:36,340
7117 in it the title of it is LTP CB h

1044
00:55:33,849 --> 00:55:40,420
e-- and bundle protocol ion at

1045
00:55:36,340 --> 00:55:43,680
registries so everyone so 17 or 71 1671

1046
00:55:40,420 --> 00:55:47,320
16 sorry oh you were talking about 71 in

1047
00:55:43,680 --> 00:55:50,040
1707 116 i well it's okay it's like an

1048
00:55:47,320 --> 00:55:58,480
eye on a registry for like everything

1049
00:55:50,040 --> 00:56:01,750
okay okay okay yeah why when I looked it

1050
00:55:58,480 --> 00:56:11,230
up I maybe it took maybe aware of the

1051
00:56:01,750 --> 00:56:16,119
trip was wrong then okay so okay so here

1052
00:56:11,230 --> 00:56:17,950
the comment is that there's a confusion

1053
00:56:16,119 --> 00:56:19,570
about the what things are actually

1054
00:56:17,950 --> 00:56:22,689
called whether they're bundle block

1055
00:56:19,570 --> 00:56:26,410
types or bundle protocol block types and

1056
00:56:22,690 --> 00:56:31,839
bundle block types is the right name for

1057
00:56:26,410 --> 00:56:35,259
them and the block types defined in BP

1058
00:56:31,839 --> 00:56:39,549
v7r superset of the block types defined

1059
00:56:35,260 --> 00:56:41,609
for RFC 5050 so I I think we don't need

1060
00:56:39,550 --> 00:56:46,300
a new registry for it I think it's just

1061
00:56:41,609 --> 00:56:48,430
extending the existing registry and I'm

1062
00:56:46,300 --> 00:56:51,640
happy to be guided by somebody else on

1063
00:56:48,430 --> 00:56:55,299
this but I don't think we want to do a

1064
00:56:51,640 --> 00:56:58,990
new registry for block types Rick

1065
00:56:55,300 --> 00:57:02,109
speaking personally and my gut reaction

1066
00:56:58,990 --> 00:57:04,180
is as a developer looking at

1067
00:57:02,109 --> 00:57:06,460
implementing vp7 like oh look at the

1068
00:57:04,180 --> 00:57:08,020
registries to work out how big my

1069
00:57:06,460 --> 00:57:11,050
enumerations are and things like that

1070
00:57:08,020 --> 00:57:14,310
and if there's lots of bp6

1071
00:57:11,050 --> 00:57:16,480
these types that aren't relevant in bp7

1072
00:57:14,310 --> 00:57:19,299
mix team

1073
00:57:16,480 --> 00:57:22,630
and sure how much aging a new registry

1074
00:57:19,300 --> 00:57:24,490
costs no I certainly agree with that but

1075
00:57:22,630 --> 00:57:27,280
because it's a super set because all of

1076
00:57:24,490 --> 00:57:29,618
the Beauty v6 ones are retained in b pz7

1077
00:57:27,280 --> 00:57:31,510
in which case that's okay I think it's I

1078
00:57:29,619 --> 00:57:39,400
don't think any of them have been

1079
00:57:31,510 --> 00:57:41,380
discarded my question there then is it

1080
00:57:39,400 --> 00:57:46,599
likely that anyone would like to extend

1081
00:57:41,380 --> 00:57:48,250
version six not at the IETF because I

1082
00:57:46,599 --> 00:57:51,280
think one of the later questions is

1083
00:57:48,250 --> 00:57:53,170
whether we obsolete 50/50 and I yeah I'm

1084
00:57:51,280 --> 00:57:56,829
hearing rough consensus currently but

1085
00:57:53,170 --> 00:57:59,740
we'll check it two obsolete 5050 and and

1086
00:57:56,829 --> 00:58:02,890
go with this document if another SDO

1087
00:57:59,740 --> 00:58:05,169
wishes to continue doing its in-house

1088
00:58:02,890 --> 00:58:09,730
changes to six I think they take

1089
00:58:05,170 --> 00:58:12,400
ownership of that registry but that's

1090
00:58:09,730 --> 00:58:14,440
the problem is where are you I mean I do

1091
00:58:12,400 --> 00:58:17,109
you have a common you register you cross

1092
00:58:14,440 --> 00:58:19,210
diversions and then you maybe need to

1093
00:58:17,109 --> 00:58:22,839
indicate which versions particularly

1094
00:58:19,210 --> 00:58:25,260
station is valid for I this is this is

1095
00:58:22,839 --> 00:58:30,069
getting us into a topic that we're about

1096
00:58:25,260 --> 00:58:32,890
to reach I think and I'd like to lift

1097
00:58:30,069 --> 00:58:42,880
that until we get to that topic next

1098
00:58:32,890 --> 00:58:50,170
slide okay for the new registry any

1099
00:58:42,880 --> 00:58:53,349
requirements for registrations and is

1100
00:58:50,170 --> 00:58:55,569
this registries version seven specific

1101
00:58:53,349 --> 00:58:58,180
or not and and I believe it is not the

1102
00:58:55,569 --> 00:59:01,810
registry is because it's a superset of

1103
00:58:58,180 --> 00:59:09,069
what's in our see 50/50 again I think it

1104
00:59:01,810 --> 00:59:12,819
doesn't know this is a this is a this is

1105
00:59:09,069 --> 00:59:15,460
a the someone is a new registry which it

1106
00:59:12,819 --> 00:59:19,180
doesn't pertain to our see 5050 at all

1107
00:59:15,460 --> 00:59:21,010
so there isn't anything that is that is

1108
00:59:19,180 --> 00:59:25,259
being superseded by the addition of this

1109
00:59:21,010 --> 00:59:25,260
new registry and the new registry is

1110
00:59:25,740 --> 00:59:35,910
scheme type codes I think it is

1111
00:59:30,560 --> 00:59:38,060
your ice team scheme type codes next

1112
00:59:35,910 --> 00:59:38,060
slide

1113
00:59:40,010 --> 00:59:44,700
references for the CRC's and that's

1114
00:59:42,960 --> 00:59:47,570
right and and you know Brian also

1115
00:59:44,700 --> 00:59:51,330
commented on this so there are now two

1116
00:59:47,570 --> 00:59:54,300
CRC references in in the normative

1117
00:59:51,330 --> 01:00:01,140
references section one for crc32 is a

1118
00:59:54,300 --> 01:00:03,420
month for the CRC to 16s next slide this

1119
01:00:01,140 --> 01:00:05,400
is in again in references

1120
01:00:03,420 --> 01:00:14,670
I changed BP SEC to be a normative

1121
01:00:05,400 --> 01:00:16,200
reference RFC 6255 because it's a

1122
01:00:14,670 --> 01:00:18,960
normative reference for registration

1123
01:00:16,200 --> 01:00:20,850
procedures should that be normative so I

1124
01:00:18,960 --> 01:00:25,830
put that in the normative section but

1125
01:00:20,850 --> 01:00:27,720
it's an informative RFC so if ID NIST is

1126
01:00:25,830 --> 01:00:30,390
okay with that then I'm okay with it but

1127
01:00:27,720 --> 01:00:33,950
I'm and I've not tried yet because I

1128
01:00:30,390 --> 01:00:43,080
haven't tried I'm posting the RFC

1129
01:00:33,950 --> 01:00:48,390
posting the internet draft rather I mean

1130
01:00:43,080 --> 01:00:50,370
I mean the shake again what's good but

1131
01:00:48,390 --> 01:00:52,680
it's I mean it is possible to reference

1132
01:00:50,370 --> 01:00:56,250
informative documents but we have to do

1133
01:00:52,680 --> 01:00:57,990
a specific action when going to light

1134
01:00:56,250 --> 01:01:01,020
the floss call and calling that out that

1135
01:00:57,990 --> 01:01:03,629
we we are applying this down ref what is

1136
01:01:01,020 --> 01:01:05,550
called okay yeah so but let's check if

1137
01:01:03,630 --> 01:01:08,970
it's needed or not and come back on that

1138
01:01:05,550 --> 01:01:10,560
because I think it's I think you I don't

1139
01:01:08,970 --> 01:01:13,350
have a context for that particular dog

1140
01:01:10,560 --> 01:01:16,500
in the head no sir oh okay I can

1141
01:01:13,350 --> 01:01:21,960
hopefully guide you good yep that I'm

1142
01:01:16,500 --> 01:01:22,890
happy to be guided they're almost done

1143
01:01:21,960 --> 01:01:29,760
here

1144
01:01:22,890 --> 01:01:32,759
see primary block immutability and again

1145
01:01:29,760 --> 01:01:36,720
I added some text about primary blocking

1146
01:01:32,760 --> 01:01:42,240
mutability in 4.2.2 and no the last one

1147
01:01:36,720 --> 01:01:46,160
I think is next the optional CRC's why

1148
01:01:42,240 --> 01:01:46,160
are the CRC blocks option

1149
01:01:46,450 --> 01:01:54,399
and the the the reason there is that if

1150
01:01:51,340 --> 01:02:00,730
you have a BP SEC bib then you don't

1151
01:01:54,400 --> 01:02:04,060
need a CRC if you and and yet you you

1152
01:02:00,730 --> 01:02:06,490
may not always have BP SEC bibs because

1153
01:02:04,060 --> 01:02:09,009
you may not be using BP SEC and in that

1154
01:02:06,490 --> 01:02:10,990
case you you do need Circe's so that's

1155
01:02:09,010 --> 01:02:15,820
the the rationale for for making them

1156
01:02:10,990 --> 01:02:19,029
optional and we can change that if we

1157
01:02:15,820 --> 01:02:21,040
want to but I I think that's I think

1158
01:02:19,030 --> 01:02:27,990
it's a reasonable policy and this slide

1159
01:02:21,040 --> 01:02:27,990
is there some more on this yeah yeah

1160
01:02:37,230 --> 01:02:43,150
would it be possible to start for

1161
01:02:42,070 --> 01:02:49,090
example in the ground

1162
01:02:43,150 --> 01:02:51,130
I think multiple ups in the ground then

1163
01:02:49,090 --> 01:02:54,130
when it goes in space

1164
01:02:51,130 --> 01:02:57,790
you actually use BP sick secure that

1165
01:02:54,130 --> 01:03:00,220
part and then some other path you

1166
01:02:57,790 --> 01:03:01,630
actually you know remove BP sick and

1167
01:03:00,220 --> 01:03:05,859
then continue for example in the

1168
01:03:01,630 --> 01:03:08,440
spacecraft yeah in this context the

1169
01:03:05,859 --> 01:03:10,119
source node doesn't know that BP SEC

1170
01:03:08,440 --> 01:03:12,900
would that actually be used in some

1171
01:03:10,119 --> 01:03:16,660
right that's our segment of the path

1172
01:03:12,900 --> 01:03:21,310
there for your argument about if you

1173
01:03:16,660 --> 01:03:24,220
know BP sick is use I don't know well

1174
01:03:21,310 --> 01:03:28,240
but yes I and then the part which are

1175
01:03:24,220 --> 01:03:32,680
not DP ii able within see our seas

1176
01:03:28,240 --> 01:03:35,290
alright it looks like in some ways you

1177
01:03:32,680 --> 01:03:36,730
may always do CRC's because you don't

1178
01:03:35,290 --> 01:03:41,770
know if someone in the path will

1179
01:03:36,730 --> 01:03:45,060
actually be doing vp sick but if but if

1180
01:03:41,770 --> 01:03:49,090
you are using BP sick from the source

1181
01:03:45,060 --> 01:03:52,450
then it seems like you shouldn't there's

1182
01:03:49,090 --> 01:03:54,490
no point in adding a CRC as well and and

1183
01:03:52,450 --> 01:03:56,890
if there is a case in which COCs are not

1184
01:03:54,490 --> 01:03:59,040
mandatory then i think they have to be

1185
01:03:56,890 --> 01:03:59,040
optional

1186
01:04:02,789 --> 01:04:09,250
yeah I mean a you you're right that if

1187
01:04:05,740 --> 01:04:13,359
if you're at the source and you're not

1188
01:04:09,250 --> 01:04:17,109
using VP SEC then you absolutely ought

1189
01:04:13,359 --> 01:04:20,020
to be using a CRC but in some cases and

1190
01:04:17,109 --> 01:04:21,910
and I would argue in most cases I think

1191
01:04:20,020 --> 01:04:25,059
I think BP SEC is great stuff so I think

1192
01:04:21,910 --> 01:04:27,460
in most cases a bid on the primary block

1193
01:04:25,059 --> 01:04:30,130
at the source is the right thing to do

1194
01:04:27,460 --> 01:04:41,440
and in that case I don't see a point in

1195
01:04:30,130 --> 01:04:43,119
the CRC is it might be that's mucking

1196
01:04:41,440 --> 01:04:44,829
around with optional COCs it's actually

1197
01:04:43,119 --> 01:04:46,720
unnecessary and it's like you're not

1198
01:04:44,829 --> 01:04:49,859
removing the shackles just because you

1199
01:04:46,720 --> 01:04:52,149
have IPSec aah for example it's like

1200
01:04:49,859 --> 01:04:55,299
it's probably easy to just keep the

1201
01:04:52,150 --> 01:04:57,400
Sierra scene and and it's M for the

1202
01:04:55,299 --> 01:05:00,460
nodes that doesn't validate beeps it's

1203
01:04:57,400 --> 01:05:06,750
can validate CMS's and things like that

1204
01:05:00,460 --> 01:05:06,750
so I I it's probably unnecessarily

1205
01:05:07,079 --> 01:05:11,740
optimization so to say to try to remove

1206
01:05:09,730 --> 01:05:13,029
it for or not haven't it's easy to have

1207
01:05:11,740 --> 01:05:17,529
it obvious and always being able to

1208
01:05:13,029 --> 01:05:20,130
verify it for any retailer I think

1209
01:05:17,529 --> 01:05:22,750
personally +1 for that comment because

1210
01:05:20,130 --> 01:05:25,900
that was the discussion we had ten

1211
01:05:22,750 --> 01:05:28,809
minutes ago about having a BP second

1212
01:05:25,900 --> 01:05:31,029
fermentation that the intermediate relay

1213
01:05:28,809 --> 01:05:32,559
nodes if they don't have any BP second

1214
01:05:31,029 --> 01:05:35,440
there because they're a sort of bent

1215
01:05:32,559 --> 01:05:38,289
pipe you're having they don't then they

1216
01:05:35,440 --> 01:05:40,740
have nothing to check okay so do we have

1217
01:05:38,289 --> 01:05:44,020
the consensus in the room that the CRC

1218
01:05:40,740 --> 01:05:47,078
that CRC is on all blocks are mandatory

1219
01:05:44,020 --> 01:05:49,809
or that a CRC on the primary block is

1220
01:05:47,079 --> 01:05:52,809
mandatory I'm happy to do we want to

1221
01:05:49,809 --> 01:05:54,339
have several choices here right I mean

1222
01:05:52,809 --> 01:05:56,140
it's right it's there's there seriously

1223
01:05:54,339 --> 01:05:58,869
on the primary block the primary block

1224
01:05:56,140 --> 01:06:01,180
at CRC is on each individual extension

1225
01:05:58,869 --> 01:06:04,029
block the CRC on the on the payload

1226
01:06:01,180 --> 01:06:09,819
block right so where do we want them to

1227
01:06:04,029 --> 01:06:12,069
be mandatory so ed marine one of the

1228
01:06:09,819 --> 01:06:15,220
other discussions we had earlier when we

1229
01:06:12,069 --> 01:06:17,859
contemplated crcs was what happens if

1230
01:06:15,220 --> 01:06:19,839
the underlying convergence layer itself

1231
01:06:17,859 --> 01:06:23,200
is providing some indication of the

1232
01:06:19,839 --> 01:06:25,569
corruption and if I have you know a

1233
01:06:23,200 --> 01:06:28,089
hundred blocks in my bundle does that

1234
01:06:25,569 --> 01:06:31,869
mean I have a hundred crcs in my bundle

1235
01:06:28,089 --> 01:06:34,299
that I then need to verify at every step

1236
01:06:31,869 --> 01:06:36,880
of the way along the bundle if I am then

1237
01:06:34,299 --> 01:06:39,160
also using a convergence layer which

1238
01:06:36,880 --> 01:06:43,180
provides some integrity checking

1239
01:06:39,160 --> 01:06:45,490
mechanism already so that brick here

1240
01:06:43,180 --> 01:06:48,490
that sounds like an argument to remove

1241
01:06:45,490 --> 01:06:51,160
CRC's altogether because a convergence

1242
01:06:48,490 --> 01:06:53,500
layer might do it or we have pips well

1243
01:06:51,160 --> 01:06:55,868
and originally there in Farsi

1244
01:06:53,500 --> 01:06:59,609
fifty-fifty there is no PRC's and we've

1245
01:06:55,869 --> 01:07:03,460
taken we've taken endless criticism

1246
01:06:59,609 --> 01:07:12,038
endless criticism for not having CRC's

1247
01:07:03,460 --> 01:07:14,769
so okay I think one of the difficulties

1248
01:07:12,039 --> 01:07:17,500
about deploying VP in the way it can be

1249
01:07:14,769 --> 01:07:19,299
in an overlay setting is that it depends

1250
01:07:17,500 --> 01:07:23,140
on what you're overlaying so there are

1251
01:07:19,299 --> 01:07:26,440
cases where a CRC is quite useful for

1252
01:07:23,140 --> 01:07:29,379
some or all blocks and some cases where

1253
01:07:26,440 --> 01:07:31,269
it's really not useful and the

1254
01:07:29,380 --> 01:07:34,059
difficulty is in the cases where it is

1255
01:07:31,269 --> 01:07:36,129
not useful it can be very not useful and

1256
01:07:34,059 --> 01:07:41,200
that's would be my recommendation for

1257
01:07:36,130 --> 01:07:42,670
keeping them optional rule insult an

1258
01:07:41,200 --> 01:07:44,529
argument that has been used in the past

1259
01:07:42,670 --> 01:07:48,819
is that the bundle may be corrupt as

1260
01:07:44,529 --> 01:07:50,710
well at rest yeah good point so Rick

1261
01:07:48,819 --> 01:07:52,000
again might like from my personal

1262
01:07:50,710 --> 01:07:56,049
perspective going back to the other

1263
01:07:52,000 --> 01:07:59,069
question was I think a CRC has or some

1264
01:07:56,049 --> 01:08:02,559
integrity check on the primary bundle

1265
01:07:59,069 --> 01:08:05,470
primary primary block is important

1266
01:08:02,559 --> 01:08:07,000
because that covers a lot of the privacy

1267
01:08:05,470 --> 01:08:09,569
you know is this going the right kind of

1268
01:08:07,000 --> 01:08:14,859
direction well its integrity more than

1269
01:08:09,569 --> 01:08:18,790
integrity integrity so yes it's

1270
01:08:14,859 --> 01:08:20,439
immutable it's immutable right so a CRC

1271
01:08:18,790 --> 01:08:22,710
on that immutable block seems to make a

1272
01:08:20,439 --> 01:08:24,348
lot of sense from my perspective

1273
01:08:22,710 --> 01:08:27,239
Biba does

1274
01:08:24,349 --> 01:08:32,219
everything of CLC will do and some yes

1275
01:08:27,238 --> 01:08:35,399
and we have been available in BP SEC yes

1276
01:08:32,219 --> 01:08:38,759
so and that's that's where it's almost

1277
01:08:35,399 --> 01:08:43,429
as though the CRC is VP SEC light but

1278
01:08:38,759 --> 01:08:43,429
written in this document and mandatory

1279
01:08:44,118 --> 01:08:50,460
but okay - but I mean I would like to

1280
01:08:47,578 --> 01:08:52,469
make observations here I don't have a

1281
01:08:50,460 --> 01:08:55,109
strong opinion I think what's might be

1282
01:08:52,469 --> 01:08:57,420
required here is actually the use of

1283
01:08:55,109 --> 01:08:58,799
crcs or not and if they are mandatory to

1284
01:08:57,420 --> 01:09:01,380
use in certain blocks that should be

1285
01:08:58,799 --> 01:09:05,549
deployments something the deployment

1286
01:09:01,380 --> 01:09:09,540
case should define and but the mandate

1287
01:09:05,549 --> 01:09:12,089
I mean it's mandatory to be able to I

1288
01:09:09,540 --> 01:09:18,448
think complementation is mandatory yeah

1289
01:09:12,089 --> 01:09:21,389
yeah discussed on which type of box etc

1290
01:09:18,448 --> 01:09:22,828
they won't have CRC's because that might

1291
01:09:21,389 --> 01:09:24,989
be affecting which type of commodious

1292
01:09:22,828 --> 01:09:32,130
layers how do you use VP SEC you know

1293
01:09:24,988 --> 01:09:34,558
this things so question to Scott do you

1294
01:09:32,130 --> 01:09:35,790
feel you're getting clear direction from

1295
01:09:34,559 --> 01:09:37,469
the rule or do you want to take this to

1296
01:09:35,790 --> 01:09:38,609
the list I think it needs to go to the

1297
01:09:37,469 --> 01:09:40,889
list I don't think we have a clear

1298
01:09:38,609 --> 01:09:44,250
direction if I were a variable to say

1299
01:09:40,889 --> 01:09:46,500
something right now and say here's the

1300
01:09:44,250 --> 01:09:48,270
answer I would say CRC is mandatory in

1301
01:09:46,500 --> 01:09:49,948
the primary block and not an optional on

1302
01:09:48,270 --> 01:09:54,239
all the other blocks and I suspect

1303
01:09:49,948 --> 01:09:56,790
that's where the the where the mailing

1304
01:09:54,238 --> 01:09:58,379
list will end up but might I suggest you

1305
01:09:56,790 --> 01:10:01,949
just proposed that straight on the list

1306
01:09:58,380 --> 01:10:04,440
and hopefully you'll get a load of plus

1307
01:10:01,949 --> 01:10:22,530
ones and nobody chipping in and we can

1308
01:10:04,440 --> 01:10:24,900
make progress okay so if you think we we

1309
01:10:22,530 --> 01:10:31,050
must have a CRC on the primary block

1310
01:10:24,900 --> 01:10:35,040
please um please um if you don't agree

1311
01:10:31,050 --> 01:10:35,740
we should we must have a CRC on the

1312
01:10:35,040 --> 01:10:37,860
primary block

1313
01:10:35,740 --> 01:10:46,830
[Music]

1314
01:10:37,860 --> 01:10:49,349
nobody care coffee time or I actually

1315
01:10:46,830 --> 01:10:53,820
want to back up slightly to the IANA

1316
01:10:49,350 --> 01:10:56,490
issue yes because Bryan Haberman and me

1317
01:10:53,820 --> 01:11:01,280
a little bit of conversation yeah and

1318
01:10:56,490 --> 01:11:03,990
you have a shot room about 60 to 55 and

1319
01:11:01,280 --> 01:11:06,030
and one way of making actually this

1320
01:11:03,990 --> 01:11:08,400
document cleaners to suck in the

1321
01:11:06,030 --> 01:11:12,420
registration rules for those registries

1322
01:11:08,400 --> 01:11:14,339
into this VP document basing a copy the

1323
01:11:12,420 --> 01:11:17,730
registration rules from that into the

1324
01:11:14,340 --> 01:11:20,910
intersection of this and replace so we

1325
01:11:17,730 --> 01:11:24,259
can obsolete 6255 also at the same time

1326
01:11:20,910 --> 01:11:27,300
oh and delete the reference of 6255 yes

1327
01:11:24,260 --> 01:11:29,310
sure that because then you get all older

1328
01:11:27,300 --> 01:11:33,420
necessary parts in this document right

1329
01:11:29,310 --> 01:11:35,100
yeah okay it might be way forward is I'm

1330
01:11:33,420 --> 01:11:36,980
hoping this is being captured in the

1331
01:11:35,100 --> 01:11:42,200
notes and just so that I've okay great

1332
01:11:36,980 --> 01:11:45,240
I'm happy to do that so I think that's

1333
01:11:42,200 --> 01:11:47,760
the I use the last of the slides on this

1334
01:11:45,240 --> 01:11:52,050
yeah there there is this other topic

1335
01:11:47,760 --> 01:11:54,330
about obsoleting fifty-fifty see we want

1336
01:11:52,050 --> 01:11:55,470
to talk about that now or should we do I

1337
01:11:54,330 --> 01:11:58,530
think we should do that now because

1338
01:11:55,470 --> 01:12:00,750
we're on a VP base so for those who are

1339
01:11:58,530 --> 01:12:02,330
not aware of course this is bundled

1340
01:12:00,750 --> 01:12:06,630
protocol version 7

1341
01:12:02,330 --> 01:12:10,320
RFC 5050 is bundled protocol version 6

1342
01:12:06,630 --> 01:12:13,260
RFC 5050 is experimental I mean actually

1343
01:12:10,320 --> 01:12:16,740
was an I RTF document correct correct

1344
01:12:13,260 --> 01:12:23,250
so the question put to us by the ADEs

1345
01:12:16,740 --> 01:12:25,679
does this obsolete RFC 50/50 or is or

1346
01:12:23,250 --> 01:12:28,410
does it not you know is this just a new

1347
01:12:25,680 --> 01:12:31,110
protocol from unaffiliated but different

1348
01:12:28,410 --> 01:12:35,849
standard body and and but what what I

1349
01:12:31,110 --> 01:12:38,160
have the the reason in the I think in

1350
01:12:35,850 --> 01:12:40,500
the document Shepard right up there's a

1351
01:12:38,160 --> 01:12:43,740
section that is there anything obsoleted

1352
01:12:40,500 --> 01:12:47,790
by the this specification and my feeling

1353
01:12:43,740 --> 01:12:50,639
is that it's not because RC 50-50 is not

1354
01:12:47,790 --> 01:12:51,630
a standard it's a experimental RFC and

1355
01:12:50,640 --> 01:12:53,760
so it's not actually

1356
01:12:51,630 --> 01:12:55,469
obsoleted because it's not a an existing

1357
01:12:53,760 --> 01:12:58,920
standard but I don't know what the

1358
01:12:55,469 --> 01:13:00,719
protocol is in in IETF about that sort

1359
01:12:58,920 --> 01:13:05,520
of thing so if it's obsolete its

1360
01:13:00,719 --> 01:13:11,610
obsoleted yeah Marcius co-chair I mean

1361
01:13:05,520 --> 01:13:14,730
it's like IP right we did you know that

1362
01:13:11,610 --> 01:13:17,370
so there's multiple versions of

1363
01:13:14,730 --> 01:13:20,968
protocols that go over time and yes you

1364
01:13:17,370 --> 01:13:23,460
do is the new one actually just says you

1365
01:13:20,969 --> 01:13:26,520
know obsoletes the previous one there

1366
01:13:23,460 --> 01:13:28,800
for people you know you can still

1367
01:13:26,520 --> 01:13:31,199
implement and use that's one it's just

1368
01:13:28,800 --> 01:13:33,750
as a signal that you know this is the

1369
01:13:31,199 --> 01:13:37,549
new one yeah my thinking had just been

1370
01:13:33,750 --> 01:13:40,530
that the obsoleting had to do with other

1371
01:13:37,550 --> 01:13:42,420
RFC's that were standards track rfcs as

1372
01:13:40,530 --> 01:13:45,000
opposed to informational or experimental

1373
01:13:42,420 --> 01:13:46,230
but yeah something that actually this is

1374
01:13:45,000 --> 01:13:48,360
something I haven't done this is

1375
01:13:46,230 --> 01:13:50,669
reaching across the streams because this

1376
01:13:48,360 --> 01:13:53,489
is going from the ITF stream to die or

1377
01:13:50,670 --> 01:13:56,429
tiff stream and actually to it consult a

1378
01:13:53,489 --> 01:13:58,980
bit about about that and it's probably

1379
01:13:56,429 --> 01:14:00,989
fine but I mean I I do see a point about

1380
01:13:58,980 --> 01:14:02,879
this indicating that this is very much

1381
01:14:00,989 --> 01:14:06,599
replacement that you should use this

1382
01:14:02,880 --> 01:14:08,810
instead and for that and the iesg is

1383
01:14:06,600 --> 01:14:12,060
actually working on a new set of labels

1384
01:14:08,810 --> 01:14:14,489
which will be clearer from some

1385
01:14:12,060 --> 01:14:15,840
perspective and in this case there's one

1386
01:14:14,489 --> 01:14:17,489
of these other labels that would at

1387
01:14:15,840 --> 01:14:19,860
least make sense to add even if you

1388
01:14:17,489 --> 01:14:22,730
don't formula obsolete the hierarchy of

1389
01:14:19,860 --> 01:14:28,320
specifications but yeah it seems that

1390
01:14:22,730 --> 01:14:30,659
it's been a bit more discussion yeah

1391
01:14:28,320 --> 01:14:32,309
Eric Lane I didn't I'll just note that I

1392
01:14:30,659 --> 01:14:35,099
don't think I'm not aware of ipv6

1393
01:14:32,310 --> 01:14:37,440
formerly obsoleting ipv4 but also this

1394
01:14:35,100 --> 01:14:39,270
is not the same thing and if you didn't

1395
01:14:37,440 --> 01:14:43,019
want to obsolete it you could always

1396
01:14:39,270 --> 01:14:46,350
write a separate one page 50 50 moves to

1397
01:14:43,020 --> 01:14:50,340
historic draft document but that's

1398
01:14:46,350 --> 01:14:51,420
another thing they write that's not the

1399
01:14:50,340 --> 01:14:55,050
same but if you really wanted to

1400
01:14:51,420 --> 01:14:57,270
indicate that that 50 50 is but the

1401
01:14:55,050 --> 01:14:58,620
protocol six is not to be used anymore

1402
01:14:57,270 --> 01:15:01,320
you could just write a one-page document

1403
01:14:58,620 --> 01:15:02,389
to say that if you didn't watch it up

1404
01:15:01,320 --> 01:15:03,579
sleepness

1405
01:15:02,389 --> 01:15:08,559
so

1406
01:15:03,579 --> 01:15:10,570
dear ad what's the plan I guess no I

1407
01:15:08,559 --> 01:15:12,429
mean I didn't understand what your

1408
01:15:10,570 --> 01:15:14,920
intention if your intention is saying

1409
01:15:12,429 --> 01:15:17,170
that yes bundle going forward after this

1410
01:15:14,920 --> 01:15:18,760
being published you should use version 7

1411
01:15:17,170 --> 01:15:20,770
if that's your main intention then we

1412
01:15:18,760 --> 01:15:23,679
can I know that and I can figure out

1413
01:15:20,770 --> 01:15:25,809
what the right way or the intention is

1414
01:15:23,679 --> 01:15:32,650
is for beef you v7 to become the

1415
01:15:25,809 --> 01:15:33,820
standard I'm hearing consensus and as

1416
01:15:32,650 --> 01:15:37,089
Mark said the purpose of the working

1417
01:15:33,820 --> 01:15:39,340
group is to do bp7 based on lessons

1418
01:15:37,090 --> 01:15:42,510
learned on bp6 exactly make it standard

1419
01:15:39,340 --> 01:15:46,030
strike zone so whatever the corrects

1420
01:15:42,510 --> 01:15:50,170
ietf label to put on to this document to

1421
01:15:46,030 --> 01:15:54,519
say this is the new version don't do the

1422
01:15:50,170 --> 01:15:56,170
old version and this you have you may

1423
01:15:54,520 --> 01:16:00,210
have good reasons for it but this is the

1424
01:15:56,170 --> 01:16:07,119
IETF blessed brain reversion right yeah

1425
01:16:00,210 --> 01:16:12,429
I think okay so I I think I've got a

1426
01:16:07,119 --> 01:16:17,558
number of tweaks to make to draft 14

1427
01:16:12,429 --> 01:16:19,540
well I'll wait for the the the minutes

1428
01:16:17,559 --> 01:16:22,059
before I do that and then I'll I'll

1429
01:16:19,540 --> 01:16:26,079
modify draft 14 according to what we've

1430
01:16:22,059 --> 01:16:27,849
been saying here and maybe some comment

1431
01:16:26,079 --> 01:16:31,599
on the mailing list and then I'll post

1432
01:16:27,849 --> 01:16:36,340
draft 14 again or post draft 14 for the

1433
01:16:31,599 --> 01:16:40,630
first time and I think I'm done mark yes

1434
01:16:36,340 --> 01:16:43,449
co-chair just a few notes we apart from

1435
01:16:40,630 --> 01:16:46,510
your you know editing and verifying and

1436
01:16:43,449 --> 01:16:49,030
all that so I think we we should as the

1437
01:16:46,510 --> 01:16:52,869
working working group willingness for

1438
01:16:49,030 --> 01:16:58,150
the maximum up limit the maximum up

1439
01:16:52,869 --> 01:17:08,230
limit yeah and confirm if BP SEC is a

1440
01:16:58,150 --> 01:17:12,369
master should and the CRC does yeah okay

1441
01:17:08,230 --> 01:17:15,268
so I'm watching I'm trying to work the

1442
01:17:12,369 --> 01:17:32,829
next generation

1443
01:17:15,269 --> 01:17:38,920
so so we we have spent obviously more

1444
01:17:32,829 --> 01:17:41,380
time in dispersed but co-chair thinks

1445
01:17:38,920 --> 01:17:44,920
that you know given that they're the

1446
01:17:41,380 --> 01:17:46,570
main two primary documents that are at

1447
01:17:44,920 --> 01:17:49,090
the base of the working group we should

1448
01:17:46,570 --> 01:17:53,349
spend the I bandwidth time with the ad

1449
01:17:49,090 --> 01:17:54,849
to actually fix to move forward I'm not

1450
01:17:53,349 --> 01:17:58,449
sure we will be able to do the whole

1451
01:17:54,849 --> 01:18:01,420
agenda but if not then we'll go either

1452
01:17:58,449 --> 01:18:03,308
wait until next IDF meeting or do an

1453
01:18:01,420 --> 01:18:08,980
interim that could be the right thing to

1454
01:18:03,309 --> 01:18:11,260
do so okay so my name is Ed brain I'm

1455
01:18:08,980 --> 01:18:14,409
the primary author on the VP sach

1456
01:18:11,260 --> 01:18:17,380
security standard and we just got

1457
01:18:14,409 --> 01:18:19,629
comments back two days ago for the

1458
01:18:17,380 --> 01:18:21,280
standard and so we were able to go

1459
01:18:19,630 --> 01:18:24,070
through them and give some

1460
01:18:21,280 --> 01:18:25,929
recommendations as to whether we needed

1461
01:18:24,070 --> 01:18:27,639
to change the specification or whether

1462
01:18:25,929 --> 01:18:35,440
we just had clarifying text or

1463
01:18:27,639 --> 01:18:37,840
explanation so next slide so we had

1464
01:18:35,440 --> 01:18:40,329
eleven comments received based on those

1465
01:18:37,840 --> 01:18:42,699
11 comments we're proposing six minor

1466
01:18:40,329 --> 01:18:44,829
changes to the document nothing really

1467
01:18:42,699 --> 01:18:46,750
changes from our perspective the

1468
01:18:44,829 --> 01:18:49,210
processing associated with security or

1469
01:18:46,750 --> 01:18:51,639
the structure most of it is clarifying

1470
01:18:49,210 --> 01:18:53,530
and cleanup of the text so I have much

1471
01:18:51,639 --> 01:18:55,420
like Scott did a set of slides that go

1472
01:18:53,530 --> 01:18:58,539
through piece by piece the comments

1473
01:18:55,420 --> 01:19:00,099
received and my proposal is at the end

1474
01:18:58,539 --> 01:19:02,679
of each one I'll pause just for a moment

1475
01:19:00,099 --> 01:19:04,349
if there's no concern or significant

1476
01:19:02,679 --> 01:19:06,489
discussion we'll assume that it is

1477
01:19:04,349 --> 01:19:09,429
acceptable and then move on to the next

1478
01:19:06,489 --> 01:19:12,070
item so going forward the very first one

1479
01:19:09,429 --> 01:19:14,260
was we talked about the concept of

1480
01:19:12,070 --> 01:19:16,989
security context but we don't actually

1481
01:19:14,260 --> 01:19:18,610
describe a specific security context

1482
01:19:16,989 --> 01:19:19,989
it's not because we don't have them we

1483
01:19:18,610 --> 01:19:21,579
made a decision in the working group

1484
01:19:19,989 --> 01:19:23,619
that we wanted to publish

1485
01:19:21,579 --> 01:19:26,320
interoperability security context as a

1486
01:19:23,619 --> 01:19:28,030
separate document and that second

1487
01:19:26,320 --> 01:19:30,940
document exists it's been adopt

1488
01:19:28,030 --> 01:19:33,099
by the working group and it is to go

1489
01:19:30,940 --> 01:19:36,519
into working group last call we can

1490
01:19:33,100 --> 01:19:39,310
normatively we can cite it in in the

1491
01:19:36,520 --> 01:19:43,930
section 1.2 of BP sack and assume that

1492
01:19:39,310 --> 01:19:46,000
it will then also go through review the

1493
01:19:43,930 --> 01:19:49,000
the second is in looking through the

1494
01:19:46,000 --> 01:19:51,670
terminology associated with BP sack we

1495
01:19:49,000 --> 01:19:53,350
talked about a security source but we

1496
01:19:51,670 --> 01:19:55,330
don't and we give that a name the

1497
01:19:53,350 --> 01:19:58,720
security source which could be the node

1498
01:19:55,330 --> 01:20:00,100
that applies any security operation into

1499
01:19:58,720 --> 01:20:03,010
a bundle whether that's the bundle

1500
01:20:00,100 --> 01:20:06,010
source or Waypoint node somewhere else

1501
01:20:03,010 --> 01:20:07,750
but we don't actually define the pr2

1502
01:20:06,010 --> 01:20:08,950
that security source something that we

1503
01:20:07,750 --> 01:20:11,980
had in the working group called the

1504
01:20:08,950 --> 01:20:14,260
security destination originally in both

1505
01:20:11,980 --> 01:20:16,509
the original bundle security protocol

1506
01:20:14,260 --> 01:20:18,520
out of the IRT F and the very early

1507
01:20:16,510 --> 01:20:20,950
versions of BP SEC there was a concept

1508
01:20:18,520 --> 01:20:23,890
of a security destination the difficulty

1509
01:20:20,950 --> 01:20:26,440
that we had was that specifying a

1510
01:20:23,890 --> 01:20:29,140
security destination as an endpoint in

1511
01:20:26,440 --> 01:20:30,940
the network started to conflate the

1512
01:20:29,140 --> 01:20:32,170
routing function and the security

1513
01:20:30,940 --> 01:20:34,870
function you could certainly get into

1514
01:20:32,170 --> 01:20:37,150
strange cases where a bundle reaches the

1515
01:20:34,870 --> 01:20:38,920
bundle destination first before it

1516
01:20:37,150 --> 01:20:41,830
reached a security destination and then

1517
01:20:38,920 --> 01:20:43,480
what on earth do you do and and we can

1518
01:20:41,830 --> 01:20:45,880
tunnel to ensure that there are

1519
01:20:43,480 --> 01:20:48,459
particular hops that or waypoints that

1520
01:20:45,880 --> 01:20:51,520
are travel in one direction or in one

1521
01:20:48,460 --> 01:20:54,550
order than another but in terms of the

1522
01:20:51,520 --> 01:20:56,410
spec itself we do not mandate a security

1523
01:20:54,550 --> 01:20:58,870
destination so from a terminology

1524
01:20:56,410 --> 01:21:01,389
perspective we can certainly give it a

1525
01:20:58,870 --> 01:21:03,130
name to say the security processing node

1526
01:21:01,390 --> 01:21:05,320
or the security processing endpoint

1527
01:21:03,130 --> 01:21:08,650
associated with the security service in

1528
01:21:05,320 --> 01:21:10,059
a bundle so we are happy to add that to

1529
01:21:08,650 --> 01:21:12,040
the terminology section but we'll come

1530
01:21:10,060 --> 01:21:14,200
back and revisit the concept of

1531
01:21:12,040 --> 01:21:15,880
mandating a security destination whether

1532
01:21:14,200 --> 01:21:20,860
that's a good idea or not in some of the

1533
01:21:15,880 --> 01:21:23,620
other comments okay the the next one

1534
01:21:20,860 --> 01:21:25,030
this is a somewhat large block of text

1535
01:21:23,620 --> 01:21:27,610
and it says what is the interaction

1536
01:21:25,030 --> 01:21:29,889
between the bib which provides plaintext

1537
01:21:27,610 --> 01:21:32,500
integrity and the BCB which provides

1538
01:21:29,890 --> 01:21:35,800
encryption and I will point to this the

1539
01:21:32,500 --> 01:21:38,380
last a few sentences here which say if

1540
01:21:35,800 --> 01:21:41,140
we have blocks that are end and in

1541
01:21:38,380 --> 01:21:41,650
nature to my understanding this is not

1542
01:21:41,140 --> 01:21:44,080
possible

1543
01:21:41,650 --> 01:21:46,059
any Bibb using the second context can't

1544
01:21:44,080 --> 01:21:48,280
use encrypted payload as its input what

1545
01:21:46,060 --> 01:21:49,630
this means is if you have a bundle and

1546
01:21:48,280 --> 01:21:52,449
Magnus correct me if I'm misinterpreting

1547
01:21:49,630 --> 01:21:54,699
if you have a bundle that is using two

1548
01:21:52,449 --> 01:21:57,969
security contacts and one security

1549
01:21:54,699 --> 01:22:00,040
context is there to encrypt blocks in

1550
01:21:57,969 --> 01:22:02,380
the bundle using a certain cipher suite

1551
01:22:00,040 --> 01:22:04,719
and a certain key and then you have a

1552
01:22:02,380 --> 01:22:07,600
second context which is meant only to

1553
01:22:04,719 --> 01:22:09,820
provide an integrity signature or

1554
01:22:07,600 --> 01:22:11,199
signature on some text some of which is

1555
01:22:09,820 --> 01:22:13,269
unencrypted and some of which is

1556
01:22:11,199 --> 01:22:15,489
encrypted you've really created two

1557
01:22:13,270 --> 01:22:17,230
kinds of security users in the bundle

1558
01:22:15,489 --> 01:22:18,820
those that have the keys and the

1559
01:22:17,230 --> 01:22:20,620
understanding for decrypting the data

1560
01:22:18,820 --> 01:22:22,330
and those that have the key is an

1561
01:22:20,620 --> 01:22:24,550
understanding of how to verify that the

1562
01:22:22,330 --> 01:22:27,969
data has not been corrupted if you use

1563
01:22:24,550 --> 01:22:29,949
an a EAD cipher suite then you must be

1564
01:22:27,969 --> 01:22:32,350
able to understand the encryption key to

1565
01:22:29,949 --> 01:22:34,900
be able to verify the signature of the

1566
01:22:32,350 --> 01:22:37,870
encrypted data and and if you cannot

1567
01:22:34,900 --> 01:22:39,940
have a bi B that targets an encrypted

1568
01:22:37,870 --> 01:22:44,320
data you can add a second signature

1569
01:22:39,940 --> 01:22:47,230
using this mechanism so if we go to the

1570
01:22:44,320 --> 01:22:50,349
next slide we we had talked through that

1571
01:22:47,230 --> 01:22:52,389
and one of the things we said in

1572
01:22:50,350 --> 01:22:55,120
creating the concept of the security

1573
01:22:52,390 --> 01:22:57,940
context separate from a cipher suite ID

1574
01:22:55,120 --> 01:23:01,239
was that if you wanted to provide

1575
01:22:57,940 --> 01:23:05,199
additional services associated with

1576
01:23:01,239 --> 01:23:07,449
these blocks continuing to add be IB and

1577
01:23:05,199 --> 01:23:09,009
BC B blocks into a bundle that

1578
01:23:07,449 --> 01:23:11,349
referenced each other and perhaps

1579
01:23:09,010 --> 01:23:13,449
circular dependencies is not the

1580
01:23:11,350 --> 01:23:16,480
appropriate way to handle those kinds of

1581
01:23:13,449 --> 01:23:18,909
situations the recommendation for that

1582
01:23:16,480 --> 01:23:22,750
and we talked about this a little bit in

1583
01:23:18,909 --> 01:23:26,019
section 7 was that a security context

1584
01:23:22,750 --> 01:23:28,630
could define additional security results

1585
01:23:26,020 --> 01:23:30,880
that would be captured with a b c b so

1586
01:23:28,630 --> 01:23:33,760
for example if you had a security

1587
01:23:30,880 --> 01:23:35,770
context that provided encryption it

1588
01:23:33,760 --> 01:23:37,570
would create it would replace the

1589
01:23:35,770 --> 01:23:39,909
contents of the target block with

1590
01:23:37,570 --> 01:23:42,849
ciphertext it would take the aad

1591
01:23:39,909 --> 01:23:45,370
generated signature associated with that

1592
01:23:42,850 --> 01:23:49,330
key and keep it as a security result in

1593
01:23:45,370 --> 01:23:51,730
the bc b and there is no constraint on

1594
01:23:49,330 --> 01:23:54,250
having additional security results that

1595
01:23:51,730 --> 01:23:55,360
are signatures created with different

1596
01:23:54,250 --> 01:23:58,180
keys that could be

1597
01:23:55,360 --> 01:24:00,460
created as part of a security context so

1598
01:23:58,180 --> 01:24:03,460
that you could accomplish essentially

1599
01:24:00,460 --> 01:24:05,380
that same result so that was our

1600
01:24:03,460 --> 01:24:07,720
proposal we believe we can do exactly

1601
01:24:05,380 --> 01:24:10,180
this kind of processing with this the

1602
01:24:07,720 --> 01:24:13,570
document as it stands and we are

1603
01:24:10,180 --> 01:24:15,730
hesitant to add additional allowances of

1604
01:24:13,570 --> 01:24:18,700
what bibs and BC bees can target one

1605
01:24:15,730 --> 01:24:21,429
another because the much larger issue is

1606
01:24:18,700 --> 01:24:24,070
circular dependencies and ambiguity and

1607
01:24:21,430 --> 01:24:29,380
processing associated with those kinds

1608
01:24:24,070 --> 01:24:31,030
of blocks and if there are questions

1609
01:24:29,380 --> 01:24:33,340
about that I'm happy to work through a

1610
01:24:31,030 --> 01:24:35,349
specific example if we need additional

1611
01:24:33,340 --> 01:24:43,120
clarifying text in the document I'm

1612
01:24:35,350 --> 01:24:45,100
happy to provide that as well my name is

1613
01:24:43,120 --> 01:24:46,900
Chris I find it quite feasible to

1614
01:24:45,100 --> 01:24:49,030
maintain the rules I wasn't asked

1615
01:24:46,900 --> 01:24:51,519
wondering how this would be done and I

1616
01:24:49,030 --> 01:24:53,259
think one of the C's is probably is this

1617
01:24:51,520 --> 01:24:54,850
and if you could point to the

1618
01:24:53,260 --> 01:24:58,080
encapsulation because I guess that's

1619
01:24:54,850 --> 01:25:00,550
actually the lowest overhead of doing

1620
01:24:58,080 --> 01:25:02,350
except for defining you and you may

1621
01:25:00,550 --> 01:25:05,890
canister contains both encryption and

1622
01:25:02,350 --> 01:25:07,840
has two different sets of keys so I I

1623
01:25:05,890 --> 01:25:08,800
mean it seemed for me if I want to do

1624
01:25:07,840 --> 01:25:11,560
this today

1625
01:25:08,800 --> 01:25:15,400
probably encapsulating they can crypt

1626
01:25:11,560 --> 01:25:16,510
the blocks in a new bundle would ensure

1627
01:25:15,400 --> 01:25:18,700
that I can do this so

1628
01:25:16,510 --> 01:25:20,770
oh absolutely completely agree yeah

1629
01:25:18,700 --> 01:25:22,900
encapsulating and then putting separate

1630
01:25:20,770 --> 01:25:24,490
security context integrity over that is

1631
01:25:22,900 --> 01:25:26,349
one way to do it and an elegant way to

1632
01:25:24,490 --> 01:25:28,269
do it and when we start talking about

1633
01:25:26,350 --> 01:25:30,610
security destinations as some of the

1634
01:25:28,270 --> 01:25:32,440
other context encapsulation would be an

1635
01:25:30,610 --> 01:25:35,620
approach to getting that as well yeah so

1636
01:25:32,440 --> 01:25:37,240
maybe yeah maybe an informative forward

1637
01:25:35,620 --> 01:25:39,250
reference here should say to saying that

1638
01:25:37,240 --> 01:25:42,370
this is one way of achieving such cold

1639
01:25:39,250 --> 01:25:45,220
spots yeah okay yes to indicate that yes

1640
01:25:42,370 --> 01:25:49,480
yes it did possibility exists despite

1641
01:25:45,220 --> 01:25:51,970
these limitations Rick Taylor speaking

1642
01:25:49,480 --> 01:25:53,950
personally I found in my reading and

1643
01:25:51,970 --> 01:25:55,900
understanding in the BP site documents

1644
01:25:53,950 --> 01:25:58,599
there's there's an analogy to IPSec

1645
01:25:55,900 --> 01:26:00,400
where you can either operate in tunnel

1646
01:25:58,600 --> 01:26:03,880
mode where you're wrapping your bundle

1647
01:26:00,400 --> 01:26:06,040
and putting the putting the integrity

1648
01:26:03,880 --> 01:26:06,840
stuff on the outside or a transport mode

1649
01:26:06,040 --> 01:26:08,550
way

1650
01:26:06,840 --> 01:26:17,760
adapting the packet on the way through

1651
01:26:08,550 --> 01:26:20,430
it's a nice complex so another comment

1652
01:26:17,760 --> 01:26:22,620
that came in was we we discussed the

1653
01:26:20,430 --> 01:26:25,260
concept of uniqueness of the security

1654
01:26:22,620 --> 01:26:27,840
service in a bundle which is to say if

1655
01:26:25,260 --> 01:26:30,800
you provide confidentiality on the

1656
01:26:27,840 --> 01:26:33,390
payload we don't want to then also do

1657
01:26:30,800 --> 01:26:37,440
confidentiality on the same payload and

1658
01:26:33,390 --> 01:26:40,020
the the comment was is it only the

1659
01:26:37,440 --> 01:26:41,429
target block and the security service

1660
01:26:40,020 --> 01:26:43,920
for example confidentiality on the

1661
01:26:41,430 --> 01:26:46,770
payload or do you also add the security

1662
01:26:43,920 --> 01:26:49,200
context itself which is this particular

1663
01:26:46,770 --> 01:26:51,630
kind of confidentiality when the payload

1664
01:26:49,200 --> 01:26:53,550
is one service but a different kind of

1665
01:26:51,630 --> 01:26:55,470
confidentiality using a different cipher

1666
01:26:53,550 --> 01:26:57,420
suite or a different key or different

1667
01:26:55,470 --> 01:27:00,350
set of parameters on the same block

1668
01:26:57,420 --> 01:27:03,510
would not be considered duplicate 'iv

1669
01:27:00,350 --> 01:27:04,890
again this was this kind of thing was

1670
01:27:03,510 --> 01:27:07,200
discussed in the working group in two

1671
01:27:04,890 --> 01:27:09,780
ways one in the concept of multi

1672
01:27:07,200 --> 01:27:12,179
encryption or super encryption the other

1673
01:27:09,780 --> 01:27:15,750
in terms of multi key encryption or

1674
01:27:12,180 --> 01:27:17,190
multi algorithm encryption again the the

1675
01:27:15,750 --> 01:27:19,710
comments coming out of the working group

1676
01:27:17,190 --> 01:27:22,410
were rather than to accomplish this with

1677
01:27:19,710 --> 01:27:25,860
multiple B C B's and then have the

1678
01:27:22,410 --> 01:27:28,650
discussion of is it correct if any of

1679
01:27:25,860 --> 01:27:30,540
the BC B's decode using any set of keys

1680
01:27:28,650 --> 01:27:32,429
or particularly if you were to apply

1681
01:27:30,540 --> 01:27:34,350
this separately to BI be as if any of

1682
01:27:32,430 --> 01:27:36,900
the bibs verify as opposed to all of the

1683
01:27:34,350 --> 01:27:39,060
bibs verify again we wanted to push that

1684
01:27:36,900 --> 01:27:41,280
into a security context which would say

1685
01:27:39,060 --> 01:27:44,760
that a security context would have a

1686
01:27:41,280 --> 01:27:47,389
single bc b which could generate results

1687
01:27:44,760 --> 01:27:49,740
for multiple keys or multiple sets of

1688
01:27:47,390 --> 01:27:51,300
ciphertext and any overflow ciphertext

1689
01:27:49,740 --> 01:27:53,599
out of a block would be captured as

1690
01:27:51,300 --> 01:27:57,240
additional overflow data in the bc b

1691
01:27:53,600 --> 01:28:00,840
itself and again this this is the

1692
01:27:57,240 --> 01:28:03,300
attempt to separate the concept of a

1693
01:28:00,840 --> 01:28:05,880
one-to-one mapping of a b c b to a

1694
01:28:03,300 --> 01:28:07,740
cipher suite and instead have a

1695
01:28:05,880 --> 01:28:10,620
one-to-one mapping of a b c b to a

1696
01:28:07,740 --> 01:28:13,320
security context and a security context

1697
01:28:10,620 --> 01:28:15,540
is a superset of cipher suites and could

1698
01:28:13,320 --> 01:28:18,920
have additional types of behavior and

1699
01:28:15,540 --> 01:28:18,920
the same with bi b

1700
01:28:24,030 --> 01:28:27,719
there was a comment in terms of the use

1701
01:28:25,860 --> 01:28:30,420
of the security context flags and some

1702
01:28:27,720 --> 01:28:33,270
of the reserved bits importantly we use

1703
01:28:30,420 --> 01:28:35,310
bits one four and five and reserved bits

1704
01:28:33,270 --> 01:28:38,220
two and three and that seems strange to

1705
01:28:35,310 --> 01:28:40,890
reserved bits in the middle of a set of

1706
01:28:38,220 --> 01:28:42,060
flags this was done partially for

1707
01:28:40,890 --> 01:28:44,730
backwards compatibility with existing

1708
01:28:42,060 --> 01:28:47,340
reference implementations from earlier

1709
01:28:44,730 --> 01:28:50,639
versions of BP sac I certainly have no

1710
01:28:47,340 --> 01:28:53,130
issue with pushing bits two and three

1711
01:28:50,640 --> 01:28:54,960
but putting the flags that exist in bits

1712
01:28:53,130 --> 01:28:57,810
four and five into bits two and three so

1713
01:28:54,960 --> 01:29:00,690
simply bits 0 1 2 3 are used and the

1714
01:28:57,810 --> 01:29:02,580
rest are undefined or perhaps having it

1715
01:29:00,690 --> 01:29:06,030
be a byte field and putting reserved

1716
01:29:02,580 --> 01:29:09,930
bits associated with that I don't know

1717
01:29:06,030 --> 01:29:11,700
if there's a particular opinion as to

1718
01:29:09,930 --> 01:29:14,070
whether having reserved bits in the

1719
01:29:11,700 --> 01:29:16,290
middle of a set of otherwise utilized

1720
01:29:14,070 --> 01:29:29,070
bits in a bit field is is good form or

1721
01:29:16,290 --> 01:29:31,710
not the the another question was why do

1722
01:29:29,070 --> 01:29:33,630
we require in a EAD cipher suite again

1723
01:29:31,710 --> 01:29:36,570
these are cipher suites that generate a

1724
01:29:33,630 --> 01:29:39,150
signature on these data as well as the

1725
01:29:36,570 --> 01:29:41,790
cipher text the short answer is when we

1726
01:29:39,150 --> 01:29:44,700
took BP sack version 0 6 where it's

1727
01:29:41,790 --> 01:29:47,460
version 10 now to the security area for

1728
01:29:44,700 --> 01:29:48,840
early review one of and really the

1729
01:29:47,460 --> 01:29:52,320
strongest comment that came back from

1730
01:29:48,840 --> 01:29:54,540
the security area was that they asked

1731
01:29:52,320 --> 01:29:56,670
that the cipher suite selections be

1732
01:29:54,540 --> 01:29:58,950
mandated to be a EAD and the thought

1733
01:29:56,670 --> 01:30:01,050
behind that was it would be good to have

1734
01:29:58,950 --> 01:30:05,040
a strong separation with the idea that

1735
01:30:01,050 --> 01:30:07,470
bibs are for plaintext and BC B's are

1736
01:30:05,040 --> 01:30:10,350
for ciphertext and whether a signature

1737
01:30:07,470 --> 01:30:12,360
exists or not can can occur in each of

1738
01:30:10,350 --> 01:30:15,030
those contexts but associating bib with

1739
01:30:12,360 --> 01:30:17,639
open Tex and BC B with ciphertext would

1740
01:30:15,030 --> 01:30:19,769
be the real separation and any time you

1741
01:30:17,640 --> 01:30:23,480
generate ciphertext you should be

1742
01:30:19,770 --> 01:30:23,480
generating a signature along with it

1743
01:30:24,710 --> 01:30:29,700
then the the next question was policy

1744
01:30:27,720 --> 01:30:31,590
guideline for blocks that have been

1745
01:30:29,700 --> 01:30:32,830
removed from a bundle by way points

1746
01:30:31,590 --> 01:30:36,550
along the way

1747
01:30:32,830 --> 01:30:38,530
and this is absolutely correct it is

1748
01:30:36,550 --> 01:30:40,420
something that can happen the last

1749
01:30:38,530 --> 01:30:42,070
sentence is here I know that with the

1750
01:30:40,420 --> 01:30:43,510
current mechanism such a bib could be

1751
01:30:42,070 --> 01:30:45,340
stripped however such a block could

1752
01:30:43,510 --> 01:30:47,410
easily be required in a security policy

1753
01:30:45,340 --> 01:30:49,900
for a particular deployment and did we

1754
01:30:47,410 --> 01:30:52,180
consider it the answer is yes and this

1755
01:30:49,900 --> 01:30:53,860
was a matter of some consideration and

1756
01:30:52,180 --> 01:30:56,500
we addressed some of it in the security

1757
01:30:53,860 --> 01:30:59,370
spec itself and some of it in upcoming

1758
01:30:56,500 --> 01:31:01,540
documents so if we go to the next slide

1759
01:30:59,370 --> 01:31:03,820
one of the things that has been

1760
01:31:01,540 --> 01:31:06,190
discussed is whether a security source

1761
01:31:03,820 --> 01:31:08,710
or the bundle source or both would be

1762
01:31:06,190 --> 01:31:11,230
able to put together manifests locks or

1763
01:31:08,710 --> 01:31:13,330
table of contents blocks that say at the

1764
01:31:11,230 --> 01:31:16,000
time the bundle was created or at the

1765
01:31:13,330 --> 01:31:18,100
time a security source was created these

1766
01:31:16,000 --> 01:31:21,100
are the blocks that must exist in the

1767
01:31:18,100 --> 01:31:23,080
bundle that could be signed by the for

1768
01:31:21,100 --> 01:31:26,410
example the bundle source and as a

1769
01:31:23,080 --> 01:31:28,930
matter of policy as a destination could

1770
01:31:26,410 --> 01:31:31,000
require that such a manifest block

1771
01:31:28,930 --> 01:31:32,920
exists and if a manifest block does not

1772
01:31:31,000 --> 01:31:35,200
exist then the contents of the bundle

1773
01:31:32,920 --> 01:31:37,390
are suspect to begin with and perhaps

1774
01:31:35,200 --> 01:31:39,490
the bundle is not processed or or

1775
01:31:37,390 --> 01:31:40,960
something else the the issue with

1776
01:31:39,490 --> 01:31:43,840
requiring that is there are certainly

1777
01:31:40,960 --> 01:31:46,450
many other ways of handling that same

1778
01:31:43,840 --> 01:31:49,210
set of expectations what we do discuss

1779
01:31:46,450 --> 01:31:51,160
in section 8 2 2 which is in the

1780
01:31:49,210 --> 01:31:54,040
security considerations portion of the

1781
01:31:51,160 --> 01:31:56,110
document is that for for this reason

1782
01:31:54,040 --> 01:31:57,880
where Malory being a person in the

1783
01:31:56,110 --> 01:31:59,410
middle could remove blocks from a bundle

1784
01:31:57,880 --> 01:32:01,060
in each of these cases the

1785
01:31:59,410 --> 01:32:02,860
implementation of EP SEC must be

1786
01:32:01,060 --> 01:32:04,990
combined with policy configurations at

1787
01:32:02,860 --> 01:32:06,730
endpoints to describe expected and

1788
01:32:04,990 --> 01:32:09,040
required security operations that must

1789
01:32:06,730 --> 01:32:10,750
be applied on transmission and expected

1790
01:32:09,040 --> 01:32:12,550
to be present on receipt so we would

1791
01:32:10,750 --> 01:32:15,160
expect the deployment to say something

1792
01:32:12,550 --> 01:32:17,110
like there must be a bib that signs the

1793
01:32:15,160 --> 01:32:19,450
primary block and we would expect that

1794
01:32:17,110 --> 01:32:21,370
the payload block has a b c b associated

1795
01:32:19,450 --> 01:32:22,900
with it and if this does not exist then

1796
01:32:21,370 --> 01:32:24,700
this is outside of policy and that

1797
01:32:22,900 --> 01:32:27,250
policy could be configured out-of-band

1798
01:32:24,700 --> 01:32:29,050
or it could be in band with the required

1799
01:32:27,250 --> 01:32:30,970
manifest block in which the policy is

1800
01:32:29,050 --> 01:32:33,070
simply make sure that a manifest block

1801
01:32:30,970 --> 01:32:34,690
exists in any of those cases we don't

1802
01:32:33,070 --> 01:32:37,030
think it is appropriate to specify that

1803
01:32:34,690 --> 01:32:38,469
in the b pset document but we think that

1804
01:32:37,030 --> 01:32:43,580
it certainly has been considered in

1805
01:32:38,470 --> 01:32:46,160
their ways of discussing next

1806
01:32:43,580 --> 01:32:48,890
there is a request to clarify section 39

1807
01:32:46,160 --> 01:32:51,440
on when to consolidate bibs and we

1808
01:32:48,890 --> 01:32:52,790
completely agree so the the answer here

1809
01:32:51,440 --> 01:32:54,290
was finally I realized that you could

1810
01:32:52,790 --> 01:32:56,000
actually move a signature from one bib

1811
01:32:54,290 --> 01:32:58,100
to another this could be made clear in

1812
01:32:56,000 --> 01:32:59,780
the document we can certainly make that

1813
01:32:58,100 --> 01:33:02,270
clear in the document and that was the

1814
01:32:59,780 --> 01:33:03,559
correct read in the intent no that's

1815
01:33:02,270 --> 01:33:06,230
okay

1816
01:33:03,560 --> 01:33:08,690
speaking of unclear in section 310

1817
01:33:06,230 --> 01:33:12,559
parameters and result identifications we

1818
01:33:08,690 --> 01:33:14,839
had some text that talked about non

1819
01:33:12,560 --> 01:33:17,960
normative guidance on how to select

1820
01:33:14,840 --> 01:33:19,640
security context identifiers and and the

1821
01:33:17,960 --> 01:33:20,060
short answer was what what does this

1822
01:33:19,640 --> 01:33:22,580
mean

1823
01:33:20,060 --> 01:33:23,929
and how do we how is this rimmel is this

1824
01:33:22,580 --> 01:33:26,210
guidance for someone trying to select

1825
01:33:23,929 --> 01:33:28,940
these identifiers the history of this

1826
01:33:26,210 --> 01:33:31,010
text was that before we had security

1827
01:33:28,940 --> 01:33:32,839
context identifiers we were saying

1828
01:33:31,010 --> 01:33:35,030
cipher suite identifiers and Stephen

1829
01:33:32,840 --> 01:33:37,940
Farrow in one of the working groups had

1830
01:33:35,030 --> 01:33:40,160
noted that there were existing

1831
01:33:37,940 --> 01:33:43,629
registries of cipher suite identifiers

1832
01:33:40,160 --> 01:33:46,219
and why would we create our own

1833
01:33:43,630 --> 01:33:49,070
enumeration of common cipher suites when

1834
01:33:46,219 --> 01:33:51,920
many other folks had enumerated cipher

1835
01:33:49,070 --> 01:33:56,509
suites and would that cause confusion

1836
01:33:51,920 --> 01:33:58,730
the the since that time we came to the

1837
01:33:56,510 --> 01:34:00,350
understanding that we aren't enumerated

1838
01:33:58,730 --> 01:34:02,570
cipher suites for a new minute yeah

1839
01:34:00,350 --> 01:34:04,370
enumerate acuity contexts which are a

1840
01:34:02,570 --> 01:34:07,040
little different and a super set of and

1841
01:34:04,370 --> 01:34:09,949
we should be able to enumerate those

1842
01:34:07,040 --> 01:34:11,630
however we wish even if there are cipher

1843
01:34:09,949 --> 01:34:13,580
suite enumerations which are a different

1844
01:34:11,630 --> 01:34:15,440
thing elsewhere in the literature so

1845
01:34:13,580 --> 01:34:16,910
actually proposed striking all of this

1846
01:34:15,440 --> 01:34:19,509
text because I don't think it applies

1847
01:34:16,910 --> 01:34:19,510
anymore

1848
01:34:31,189 --> 01:34:36,559
how is a security destination determined

1849
01:34:33,559 --> 01:34:38,539
so many places in the the BP SEC

1850
01:34:36,559 --> 01:34:40,130
document we say things such as if the

1851
01:34:38,539 --> 01:34:42,438
receiving node is not the destination of

1852
01:34:40,130 --> 01:34:43,939
the bundle the node must equip the BCP

1853
01:34:42,439 --> 01:34:46,309
if directed to do so as a matter of

1854
01:34:43,939 --> 01:34:49,610
security policy the comment that comes

1855
01:34:46,309 --> 01:34:51,979
back is it is unclear who is to process

1856
01:34:49,610 --> 01:34:53,869
particular security blocks the short

1857
01:34:51,979 --> 01:34:57,079
answer is yes it is unclear who should

1858
01:34:53,869 --> 01:34:58,639
process the security blocks because of

1859
01:34:57,079 --> 01:35:00,739
the nature of the store and forward

1860
01:34:58,639 --> 01:35:03,260
network and the delay tolerance the

1861
01:35:00,739 --> 01:35:05,209
discussions from the working group or if

1862
01:35:03,260 --> 01:35:07,249
your bundle has been at rest for a very

1863
01:35:05,209 --> 01:35:09,679
long time it is possible the topology of

1864
01:35:07,249 --> 01:35:12,369
the network has changed or the sense of

1865
01:35:09,679 --> 01:35:14,959
Gateway nodes has changed or the

1866
01:35:12,369 --> 01:35:17,449
intended destination of a security

1867
01:35:14,959 --> 01:35:19,489
service may have changed certainly all

1868
01:35:17,449 --> 01:35:20,598
security services must be resolved by

1869
01:35:19,489 --> 01:35:22,489
the time you get to the bundle

1870
01:35:20,599 --> 01:35:24,800
destination or the bundle destination

1871
01:35:22,489 --> 01:35:28,249
itself must be able to resolve them but

1872
01:35:24,800 --> 01:35:29,989
if we have waypoints that are doing some

1873
01:35:28,249 --> 01:35:32,539
level of security processing in the

1874
01:35:29,989 --> 01:35:35,808
network itself those boundaries between

1875
01:35:32,539 --> 01:35:39,499
security areas versus end-to-end data

1876
01:35:35,809 --> 01:35:42,860
delivery areas may be dynamic and if we

1877
01:35:39,499 --> 01:35:44,090
say that security policy even if

1878
01:35:42,860 --> 01:35:46,670
configured out-of-band

1879
01:35:44,090 --> 01:35:49,249
is sufficient to determine when to add a

1880
01:35:46,670 --> 01:35:52,039
security service right because any

1881
01:35:49,249 --> 01:35:54,260
security service being added by a BPA is

1882
01:35:52,039 --> 01:35:57,349
done so because policy has dictated it

1883
01:35:54,260 --> 01:36:00,139
then we should also accept that policy

1884
01:35:57,349 --> 01:36:02,449
can determine whether you should be

1885
01:36:00,139 --> 01:36:05,229
evaluating a security service so by

1886
01:36:02,449 --> 01:36:07,308
policy a waypoint node may or may not

1887
01:36:05,229 --> 01:36:10,400
determine that it should verify the

1888
01:36:07,309 --> 01:36:12,110
signature within a bi v bi policy that

1889
01:36:10,400 --> 01:36:16,039
you determine whether it believes it is

1890
01:36:12,110 --> 01:36:17,478
the Decrypter of data to to move forward

1891
01:36:16,039 --> 01:36:18,709
certainly if someone makes a mistake and

1892
01:36:17,479 --> 01:36:20,659
they try and decrypt data and throw

1893
01:36:18,709 --> 01:36:22,280
blocks away by the time it gets to the

1894
01:36:20,659 --> 01:36:24,320
bundled destination the bundle would be

1895
01:36:22,280 --> 01:36:26,389
considered in error because either the

1896
01:36:24,320 --> 01:36:28,670
BCD wouldn't exist or the Manifest block

1897
01:36:26,389 --> 01:36:30,800
would be no longer valid and there are

1898
01:36:28,670 --> 01:36:33,409
ways that this can result in difficulty

1899
01:36:30,800 --> 01:36:35,559
but all of that difficulty stems from a

1900
01:36:33,409 --> 01:36:37,459
waypoint node in the network tried to

1901
01:36:35,559 --> 01:36:38,809
malign or miss you

1902
01:36:37,459 --> 01:36:40,489
the security and the network and of

1903
01:36:38,809 --> 01:36:42,079
course identifying and throwing data

1904
01:36:40,489 --> 01:36:44,949
away in that case is what security is

1905
01:36:42,079 --> 01:36:47,449
meant to do so in all of this our

1906
01:36:44,949 --> 01:36:50,419
understanding is that policy to add

1907
01:36:47,449 --> 01:36:52,400
security services and policy to process

1908
01:36:50,420 --> 01:36:56,059
security services are what we need to do

1909
01:36:52,400 --> 01:36:59,179
for a DTN as was mentioned earlier if

1910
01:36:56,059 --> 01:37:02,409
there is a specific requirement that a

1911
01:36:59,179 --> 01:37:05,209
particular node always processes a

1912
01:37:02,409 --> 01:37:08,089
security service one way to accomplish

1913
01:37:05,209 --> 01:37:10,880
that without conflating security and

1914
01:37:08,090 --> 01:37:13,309
routing is to encapsulate using a bundle

1915
01:37:10,880 --> 01:37:15,559
and bundle encapsulation and making the

1916
01:37:13,309 --> 01:37:17,630
destination of the encapsulating bundle

1917
01:37:15,559 --> 01:37:19,610
the security endpoint and then you know

1918
01:37:17,630 --> 01:37:28,969
it will get there before it goes

1919
01:37:19,610 --> 01:37:30,949
anywhere else the the final part is

1920
01:37:28,969 --> 01:37:32,809
since we do add registries for security

1921
01:37:30,949 --> 01:37:34,428
context identifiers we need to create it

1922
01:37:32,809 --> 01:37:37,010
and define the rules for it the answer

1923
01:37:34,429 --> 01:37:40,429
is absolutely and we will update the

1924
01:37:37,010 --> 01:37:46,369
ionic consideration section and that's

1925
01:37:40,429 --> 01:37:48,670
all we have all right well thank you

1926
01:37:46,369 --> 01:37:48,670
very much

1927
01:37:58,619 --> 01:38:06,809
okay so ease this next time yes so I

1928
01:38:03,360 --> 01:38:08,610
drew headman on meat echo presenting

1929
01:38:06,810 --> 01:38:15,659
some of the work he's been doing as part

1930
01:38:08,610 --> 01:38:18,239
of Ed's group on am P Andrew can you

1931
01:38:15,659 --> 01:38:20,150
attempt to approach the mic or however

1932
01:38:18,239 --> 01:38:25,949
it's done in me TECA

1933
01:38:20,150 --> 01:38:32,219
yeah can you guys hear me yep yep I

1934
01:38:25,949 --> 01:38:34,259
think that's good I I am Andrew Herman

1935
01:38:32,219 --> 01:38:37,800
I've been working on a doctrine for this

1936
01:38:34,260 --> 01:38:40,969
summer on parsing string commands and

1937
01:38:37,800 --> 01:38:43,500
being creating a program that'll

1938
01:38:40,969 --> 01:38:46,110
translate their string commands to their

1939
01:38:43,500 --> 01:38:52,639
Seabourn coding and as well as working

1940
01:38:46,110 --> 01:38:52,639
on the ANP updates next slide

1941
01:38:54,619 --> 01:39:02,429
so in ampo vi we use arrays and byte

1942
01:38:59,219 --> 01:39:06,239
strings to hold certain data items and

1943
01:39:02,429 --> 01:39:09,630
these they were preceded by length

1944
01:39:06,239 --> 01:39:12,839
identifying weights or might range but

1945
01:39:09,630 --> 01:39:14,940
this necessary data was self delineating

1946
01:39:12,840 --> 01:39:20,849
and so what was happening is the message

1947
01:39:14,940 --> 01:39:24,119
size was being increased and it being

1948
01:39:20,849 --> 01:39:27,389
it's being compounded by objects

1949
01:39:24,119 --> 01:39:30,330
encapsulating other objects and so with

1950
01:39:27,389 --> 01:39:32,250
this update we removed some of the

1951
01:39:30,330 --> 01:39:36,210
length identifiers in order to decrease

1952
01:39:32,250 --> 01:39:41,030
the message size and improve the

1953
01:39:36,210 --> 01:39:43,440
encoding something else we also did was

1954
01:39:41,030 --> 01:39:47,030
replace some of the array and break

1955
01:39:43,440 --> 01:39:50,129
string structures with just looked at

1956
01:39:47,030 --> 01:39:53,759
this is just another way of decreasing

1957
01:39:50,130 --> 01:39:55,949
the message sides message size because

1958
01:39:53,760 --> 01:39:58,619
the the headers the Seaboard headers

1959
01:39:55,949 --> 01:40:02,299
weren't needed to encapsulate the data

1960
01:39:58,619 --> 01:40:05,000
and so with these with these to read

1961
01:40:02,300 --> 01:40:10,860
updates we were able to reduce the

1962
01:40:05,000 --> 01:40:12,990
Seabourn message size by about 25% next

1963
01:40:10,860 --> 01:40:15,240
slide thank you

1964
01:40:12,990 --> 01:40:18,840
so for the string encoding this is just

1965
01:40:15,240 --> 01:40:20,870
to give us a way to go between the JSON

1966
01:40:18,840 --> 01:40:24,000
and the Seabourn codings

1967
01:40:20,870 --> 01:40:27,540
and allow us to check to make sure

1968
01:40:24,000 --> 01:40:31,730
everything is is being processed

1969
01:40:27,540 --> 01:40:37,890
estimate as expected and this also

1970
01:40:31,730 --> 01:40:40,019
allows us to send commands and as a much

1971
01:40:37,890 --> 01:40:42,270
faster pace because it's you know easier

1972
01:40:40,020 --> 01:40:44,190
to enter in and with the program that

1973
01:40:42,270 --> 01:40:46,590
I've been developing we could that'll

1974
01:40:44,190 --> 01:40:48,960
translate the string commands to see Bor

1975
01:40:46,590 --> 01:40:51,120
it can we can increase the speed at

1976
01:40:48,960 --> 01:41:00,090
which commands are created and sent

1977
01:40:51,120 --> 01:41:03,780
through the network next slide so this

1978
01:41:00,090 --> 01:41:11,580
is the formal definite definition of the

1979
01:41:03,780 --> 01:41:12,929
a RI scheme for the a a our eyes and one

1980
01:41:11,580 --> 01:41:17,100
of the one of the changes that we've

1981
01:41:12,930 --> 01:41:20,340
made is within the namespace with the

1982
01:41:17,100 --> 01:41:21,810
issuer and the tag we've changed it to

1983
01:41:20,340 --> 01:41:25,860
where we were always going to have an

1984
01:41:21,810 --> 01:41:31,320
issuer even if the element is published

1985
01:41:25,860 --> 01:41:35,280
in an ADM this way the the a RI is more

1986
01:41:31,320 --> 01:41:39,210
uniform and if the element is published

1987
01:41:35,280 --> 01:41:41,460
then we can just have the ADM as the

1988
01:41:39,210 --> 01:41:44,220
issuer and then have the tag just be the

1989
01:41:41,460 --> 01:41:48,710
ADM namespace and this makes the the

1990
01:41:44,220 --> 01:41:50,760
string command a lot easier to parse

1991
01:41:48,710 --> 01:41:59,490
when you're trying to translate to see

1992
01:41:50,760 --> 01:42:04,920
Bor all right and come to for next slide

1993
01:41:59,490 --> 01:42:08,580
please so this is just a brief example

1994
01:42:04,920 --> 01:42:13,760
of the what the updated string string

1995
01:42:08,580 --> 01:42:13,760
form looks like for a BP source report

1996
01:42:13,820 --> 01:42:19,710
with the the new the ADM issuer it does

1997
01:42:18,030 --> 01:42:22,349
increase the length of the report

1998
01:42:19,710 --> 01:42:25,750
slightly but it does separate every all

1999
01:42:22,350 --> 01:42:28,470
of the different parts of the RI

2000
01:42:25,750 --> 01:42:31,510
out much better makes it easier to parse

2001
01:42:28,470 --> 01:42:34,950
and also we've got the we have the full

2002
01:42:31,510 --> 01:42:37,390
version and the shorthand version and

2003
01:42:34,950 --> 01:42:40,059
with the shorthand version we would like

2004
01:42:37,390 --> 01:42:44,590
to be able to parse this and use this to

2005
01:42:40,060 --> 01:42:45,550
send commands but with names having

2006
01:42:44,590 --> 01:42:49,270
similar names

2007
01:42:45,550 --> 01:42:51,580
we do have an ambiguity error that's for

2008
01:42:49,270 --> 01:43:01,060
some commands we do have to use the full

2009
01:42:51,580 --> 01:43:01,930
full version of the RI namespace and the

2010
01:43:01,060 --> 01:43:08,410
the short

2011
01:43:01,930 --> 01:43:12,610
yeah that's next slide please so this is

2012
01:43:08,410 --> 01:43:16,500
just a visualization of how the the new

2013
01:43:12,610 --> 01:43:16,500
encoding compares to the old encoding

2014
01:43:17,760 --> 01:43:22,750
the the top the top bullet is the string

2015
01:43:21,280 --> 01:43:27,130
encoding and then it's followed by the

2016
01:43:22,750 --> 01:43:29,200
new and then the old encoding and so I

2017
01:43:27,130 --> 01:43:31,690
originally I had highlighted a couple of

2018
01:43:29,200 --> 01:43:36,490
spots in each command but they didn't

2019
01:43:31,690 --> 01:43:38,799
show up but you can see that if you look

2020
01:43:36,490 --> 01:43:40,630
for the namespace when the T MVC

2021
01:43:38,800 --> 01:43:45,040
information and the certain object

2022
01:43:40,630 --> 01:43:47,440
information in the old command they're

2023
01:43:45,040 --> 01:43:50,710
split up by the length identifying bytes

2024
01:43:47,440 --> 01:43:54,639
that were causing the message message

2025
01:43:50,710 --> 01:43:58,960
size to increase and so with the new new

2026
01:43:54,640 --> 01:44:01,000
encoding you can see that the each part

2027
01:43:58,960 --> 01:44:02,760
of the command is one right after the

2028
01:44:01,000 --> 01:44:05,650
other it flows right into the next part

2029
01:44:02,760 --> 01:44:08,170
without having to you don't have to sit

2030
01:44:05,650 --> 01:44:14,790
and parse the the length identifying

2031
01:44:08,170 --> 01:44:17,710
bytes and it also allows us to to

2032
01:44:14,790 --> 01:44:21,160
decrease the way decrease the number of

2033
01:44:17,710 --> 01:44:25,930
bytes by the way we represent each

2034
01:44:21,160 --> 01:44:28,570
structure so with the TNBC you can see

2035
01:44:25,930 --> 01:44:30,130
at the end of the first command so in

2036
01:44:28,570 --> 01:44:32,559
the first example we can represent an

2037
01:44:30,130 --> 01:44:35,050
empty t + VC with just the zero zero

2038
01:44:32,560 --> 01:44:38,130
byte rather than having to use two or

2039
01:44:35,050 --> 01:44:42,450
three bytes to represent it with the

2040
01:44:38,130 --> 01:44:47,310
by representing it as an empty array and

2041
01:44:42,450 --> 01:44:50,280
at the underneath each command I've I've

2042
01:44:47,310 --> 01:44:51,990
broken down the percent difference to

2043
01:44:50,280 --> 01:44:55,110
where we're averaging around a twenty

2044
01:44:51,990 --> 01:44:57,929
five percent difference in message size

2045
01:44:55,110 --> 01:45:00,089
between the new and old command and now

2046
01:44:57,930 --> 01:45:04,410
that varies a little based on the

2047
01:45:00,090 --> 01:45:06,120
command size but it it with a larger

2048
01:45:04,410 --> 01:45:13,139
command it'll obviously be a bit of a

2049
01:45:06,120 --> 01:45:15,000
bigger difference speaking personally if

2050
01:45:13,140 --> 01:45:20,040
I understand correctly what you've done

2051
01:45:15,000 --> 01:45:21,540
you've removed the implicit structure by

2052
01:45:20,040 --> 01:45:25,500
so you're not using the Seaboard

2053
01:45:21,540 --> 01:45:27,240
encoding to say I have an array an array

2054
01:45:25,500 --> 01:45:30,690
of three elements each element is a

2055
01:45:27,240 --> 01:45:34,309
string in order to remove the tlvs so

2056
01:45:30,690 --> 01:45:38,849
you are presenting the entire command as

2057
01:45:34,310 --> 01:45:42,230
an octet string or an octet array does

2058
01:45:38,850 --> 01:45:45,150
that not mean you're adding whitespace

2059
01:45:42,230 --> 01:45:47,070
sensitivity to these things I notice in

2060
01:45:45,150 --> 01:45:51,570
this slide you've got spaces between the

2061
01:45:47,070 --> 01:45:53,849
square bracket etc are you pre pausing

2062
01:45:51,570 --> 01:45:58,610
and putting into a canonical form before

2063
01:45:53,850 --> 01:46:02,330
you turn it into an octet string so

2064
01:45:58,610 --> 01:46:06,200
we've removed the array header for some

2065
01:46:02,330 --> 01:46:08,070
some of the structures not all of them

2066
01:46:06,200 --> 01:46:10,620
but yes there is

2067
01:46:08,070 --> 01:46:11,880
we do free parse it a little if I

2068
01:46:10,620 --> 01:46:15,090
understand your question correctly we do

2069
01:46:11,880 --> 01:46:18,810
pre parse it so that the parameters are

2070
01:46:15,090 --> 01:46:22,760
in the right order when we translate so

2071
01:46:18,810 --> 01:46:32,820
you unpack concatenate and then encode

2072
01:46:22,760 --> 01:46:34,020
yes okay Thank You param and

2073
01:46:32,820 --> 01:46:38,820
she does see on the sly so if you go to

2074
01:46:34,020 --> 01:46:43,890
the next one so this is this is just a

2075
01:46:38,820 --> 01:46:44,219
logical map of what what the program

2076
01:46:43,890 --> 01:46:47,280
does

2077
01:46:44,220 --> 01:46:50,730
when parsing a string command so we

2078
01:46:47,280 --> 01:46:52,860
start with just the input and what it

2079
01:46:50,730 --> 01:46:55,290
does is it generates it looks at the

2080
01:46:52,860 --> 01:46:57,839
command as a whole first and generates a

2081
01:46:55,290 --> 01:47:01,710
flag byte you know looks to see if it

2082
01:46:57,840 --> 01:47:03,270
has parameters and it checks to see what

2083
01:47:01,710 --> 01:47:05,880
the issuer is and this is where the

2084
01:47:03,270 --> 01:47:09,510
always having an issuer helps we can

2085
01:47:05,880 --> 01:47:12,120
check if if it's a ADM issued then we

2086
01:47:09,510 --> 01:47:13,230
can do a lookup in the using of the

2087
01:47:12,120 --> 01:47:15,630
dictionaries function I have in the

2088
01:47:13,230 --> 01:47:18,839
bottom right hand corner and we can get

2089
01:47:15,630 --> 01:47:20,700
any parameter information and the

2090
01:47:18,840 --> 01:47:25,260
nickname and object name information and

2091
01:47:20,700 --> 01:47:27,870
begin to to translate into C bore but

2092
01:47:25,260 --> 01:47:30,000
the what happens next is the parameter

2093
01:47:27,870 --> 01:47:31,680
information we get from dictionaries the

2094
01:47:30,000 --> 01:47:36,170
dictionary function and the parameters

2095
01:47:31,680 --> 01:47:38,490
are sent to our T MVC processor and

2096
01:47:36,170 --> 01:47:41,240
using the parameter information we can

2097
01:47:38,490 --> 01:47:43,650
unpack the parameters and send them to a

2098
01:47:41,240 --> 01:47:47,130
specific processor based on their type

2099
01:47:43,650 --> 01:47:49,980
and in when it returns we'll we'll just

2100
01:47:47,130 --> 01:47:51,990
get the C boring coded seaboard

2101
01:47:49,980 --> 01:47:55,080
translated parameter and then we can

2102
01:47:51,990 --> 01:47:58,710
concatenate them in the right order and

2103
01:47:55,080 --> 01:48:02,570
send that back to to parse the beginning

2104
01:47:58,710 --> 01:48:05,580
function to put back into the command

2105
01:48:02,570 --> 01:48:09,389
and so we have we have functions for

2106
01:48:05,580 --> 01:48:12,510
each kind of parameter so variables are

2107
01:48:09,390 --> 01:48:15,330
eyes expressions we can all process and

2108
01:48:12,510 --> 01:48:17,280
then we also have the basic data

2109
01:48:15,330 --> 01:48:21,660
structure functions those are on the

2110
01:48:17,280 --> 01:48:24,800
right those are just used for your your

2111
01:48:21,660 --> 01:48:27,450
very basic string and you and you vast

2112
01:48:24,800 --> 01:48:29,370
parameters but they work the same way

2113
01:48:27,450 --> 01:48:33,990
where you send whatever parameter you

2114
01:48:29,370 --> 01:48:37,550
want translated and you get the Seabourn

2115
01:48:33,990 --> 01:48:39,840
coded back a version of that back and

2116
01:48:37,550 --> 01:48:42,240
with dictionaries in the bottom right I

2117
01:48:39,840 --> 01:48:45,630
mentioned earlier but that just contains

2118
01:48:42,240 --> 01:48:47,150
it's a file that contains all of the the

2119
01:48:45,630 --> 01:48:50,840
ADM issued control

2120
01:48:47,150 --> 01:48:53,960
and every time you do a lookup it sends

2121
01:48:50,840 --> 01:48:55,670
back any any information we have on that

2122
01:48:53,960 --> 01:48:59,140
control including parameter information

2123
01:48:55,670 --> 01:49:02,690
parameter type nickname and object name

2124
01:48:59,140 --> 01:49:05,180
so Andrew I'm very sorry to do this but

2125
01:49:02,690 --> 01:49:07,519
we are very short of time

2126
01:49:05,180 --> 01:49:09,830
okay can you try and wrap up in about a

2127
01:49:07,520 --> 01:49:13,790
minute yeah I can do that only got one

2128
01:49:09,830 --> 01:49:18,980
slide left I'll burn it uh if if it will

2129
01:49:13,790 --> 01:49:24,110
play I don't know if it'll play no which

2130
01:49:18,980 --> 01:49:29,599
is unfortunate sorry I slide shows are

2131
01:49:24,110 --> 01:49:32,690
always a bit of a pain thank you very

2132
01:49:29,600 --> 01:49:38,930
much for this I'm gonna this actually

2133
01:49:32,690 --> 01:49:42,160
segues nicely into sorry any question on

2134
01:49:38,930 --> 01:49:45,680
this as it currently stands

2135
01:49:42,160 --> 01:49:48,080
so the question from the chairs to the

2136
01:49:45,680 --> 01:49:49,250
group based on Andrews work and what EDD

2137
01:49:48,080 --> 01:49:55,010
has been working on for a while

2138
01:49:49,250 --> 01:49:58,600
is this a ma a MP network management

2139
01:49:55,010 --> 01:50:03,230
piece and this is a question for Marcus

2140
01:49:58,600 --> 01:50:04,670
so I know Edie and I because personally

2141
01:50:03,230 --> 01:50:07,759
I have a great deal of interest in this

2142
01:50:04,670 --> 01:50:10,850
work have been going round the IETF

2143
01:50:07,760 --> 01:50:15,890
looking for a nice home in ops or net

2144
01:50:10,850 --> 01:50:18,170
board or anima for this work and frankly

2145
01:50:15,890 --> 01:50:21,470
they're not interested but we believe

2146
01:50:18,170 --> 01:50:25,910
this is relevant and I believe we're

2147
01:50:21,470 --> 01:50:27,890
further down this line then you know

2148
01:50:25,910 --> 01:50:30,650
we're going quite a long way down this

2149
01:50:27,890 --> 01:50:33,230
and I would like to see this taken on in

2150
01:50:30,650 --> 01:50:37,009
DTN because we can't find a better home

2151
01:50:33,230 --> 01:50:38,360
for it is that kind of caused the

2152
01:50:37,010 --> 01:50:42,620
problem for the ad because we're a

2153
01:50:38,360 --> 01:50:45,740
transport working group and another ad

2154
01:50:42,620 --> 01:50:54,160
could turn round to Marcus and say why

2155
01:50:45,740 --> 01:50:57,710
are you doing ops in transport - I I

2156
01:50:54,160 --> 01:50:59,990
think it's gonna I mean basically I

2157
01:50:57,710 --> 01:51:02,240
think you're stepping beyond your short

2158
01:50:59,990 --> 01:51:03,860
anyway and this is gonna require a short

2159
01:51:02,240 --> 01:51:06,650
ring if you take it on and therefore

2160
01:51:03,860 --> 01:51:11,360
this discussion is gonna happen on the

2161
01:51:06,650 --> 01:51:12,769
way to that very shortly I think so so

2162
01:51:11,360 --> 01:51:14,660
that's I think it's tougher we can sort

2163
01:51:12,770 --> 01:51:16,430
out the nets yeah let's discuss this

2164
01:51:14,660 --> 01:51:19,190
more a bit of offline also so I can

2165
01:51:16,430 --> 01:51:20,420
bring that information to you and take

2166
01:51:19,190 --> 01:51:23,629
this discussion we'd like for example

2167
01:51:20,420 --> 01:51:26,390
topside et cetera so they are wearing

2168
01:51:23,630 --> 01:51:31,070
and see what they say

2169
01:51:26,390 --> 01:51:32,660
not Masha is co-chair however I think

2170
01:51:31,070 --> 01:51:36,320
it's been the last two years that we've

2171
01:51:32,660 --> 01:51:39,019
been shopping a place yeah and I'm

2172
01:51:36,320 --> 01:51:42,830
getting concerned that you know with you

2173
01:51:39,020 --> 01:51:46,090
know new ops a days and you were

2174
01:51:42,830 --> 01:51:49,430
starting at the again this shopping so I

2175
01:51:46,090 --> 01:51:51,170
I think we have shown in the working

2176
01:51:49,430 --> 01:51:56,180
group there are people actually working

2177
01:51:51,170 --> 01:51:58,340
on it and you know yeah yes I do you

2178
01:51:56,180 --> 01:52:00,110
have a really great home and we can get

2179
01:51:58,340 --> 01:52:02,450
that into shorter and get going directly

2180
01:52:00,110 --> 01:52:05,330
in a some re other place otherwise we

2181
01:52:02,450 --> 01:52:07,309
take it on here that's and obviously you

2182
01:52:05,330 --> 01:52:08,870
know when we're we're done where we

2183
01:52:07,310 --> 01:52:12,320
could do working group last call you

2184
01:52:08,870 --> 01:52:13,849
know also or you know of the office area

2185
01:52:12,320 --> 01:52:16,519
to actually look at it yeah all that

2186
01:52:13,850 --> 01:52:18,710
stuff but yeah it's getting to a point

2187
01:52:16,520 --> 01:52:20,420
where we have no other own than here

2188
01:52:18,710 --> 01:52:27,560
even if we're not you know yeah

2189
01:52:20,420 --> 01:52:31,040
management experts so thank you very

2190
01:52:27,560 --> 01:52:32,900
much Andrew good presentation and of

2191
01:52:31,040 --> 01:52:35,240
course that that feeds into this longer

2192
01:52:32,900 --> 01:52:37,790
conversation so the last thing we've got

2193
01:52:35,240 --> 01:52:40,910
time for really is to Scott to just

2194
01:52:37,790 --> 01:52:43,640
discuss what he thinks the working group

2195
01:52:40,910 --> 01:52:45,320
should be looking at for the remaining

2196
01:52:43,640 --> 01:52:47,660
charter items we have been looking to

2197
01:52:45,320 --> 01:52:50,210
recharter or refresh our Charter in some

2198
01:52:47,660 --> 01:52:52,610
way and I think we're going to run out

2199
01:52:50,210 --> 01:52:54,740
of time but if Scott and blast through a

2200
01:52:52,610 --> 01:52:57,580
slide show quickly I and I really only

2201
01:52:54,740 --> 01:53:00,410
have three slides just before you start

2202
01:52:57,580 --> 01:53:04,010
coaches are currently thinking of having

2203
01:53:00,410 --> 01:53:06,440
an interim meeting between before the

2204
01:53:04,010 --> 01:53:10,100
next ITF to actually discuss my

2205
01:53:06,440 --> 01:53:13,379
stones.we charter you know the next you

2206
01:53:10,100 --> 01:53:16,470
know topics to be working on so we

2207
01:53:13,380 --> 01:53:18,900
we'll probably advertise this in the

2208
01:53:16,470 --> 01:53:21,960
next weeks for scheduling and interrupt

2209
01:53:18,900 --> 01:53:27,990
an interim meeting virtual meeting

2210
01:53:21,960 --> 01:53:30,840
obviously by WebEx or whatever okay and

2211
01:53:27,990 --> 01:53:33,710
and score the next slide these are three

2212
01:53:30,840 --> 01:53:38,100
items that I think I would like to

2213
01:53:33,710 --> 01:53:40,620
propose to we add to the Charter they're

2214
01:53:38,100 --> 01:53:45,420
just my own personal preferences I

2215
01:53:40,620 --> 01:53:46,769
actually think that that network

2216
01:53:45,420 --> 01:53:49,800
management is extremely important as

2217
01:53:46,770 --> 01:53:52,070
well and I don't mean this list to be

2218
01:53:49,800 --> 01:53:56,430
exclusive these are just my own personal

2219
01:53:52,070 --> 01:53:57,929
top priorities so my number one top

2220
01:53:56,430 --> 01:53:59,940
priority is I think we need to have

2221
01:53:57,930 --> 01:54:03,750
monthly bundle encapsulation I think I

2222
01:53:59,940 --> 01:54:07,040
think it's urgently needed for two to

2223
01:54:03,750 --> 01:54:10,850
structural reasons one is that that

2224
01:54:07,040 --> 01:54:14,910
we've taken custody transfer out of

2225
01:54:10,850 --> 01:54:18,150
bundle protocol we need to retain it and

2226
01:54:14,910 --> 01:54:24,090
this is the place to retain it we need

2227
01:54:18,150 --> 01:54:26,780
to reinstate it by standardizing bundle

2228
01:54:24,090 --> 01:54:30,120
bundle encapsulation that includes

2229
01:54:26,780 --> 01:54:35,550
aggregate custody signaling as as one of

2230
01:54:30,120 --> 01:54:39,900
its features the other reason is really

2231
01:54:35,550 --> 01:54:43,080
related to what ed was saying earlier in

2232
01:54:39,900 --> 01:54:46,280
moving from the original bundle security

2233
01:54:43,080 --> 01:54:48,570
of protocol specification to BB SEC we

2234
01:54:46,280 --> 01:54:51,269
removed the notion of a security

2235
01:54:48,570 --> 01:54:53,849
destination the way to reinstate that

2236
01:54:51,270 --> 01:54:58,710
capability is again using bundle bundle

2237
01:54:53,850 --> 01:55:03,120
encapsulation you you you can use VI be

2238
01:54:58,710 --> 01:55:04,980
e to direct a bundle to what is in

2239
01:55:03,120 --> 01:55:09,480
effect a security destination and attach

2240
01:55:04,980 --> 01:55:11,040
whatever security you need to it that

2241
01:55:09,480 --> 01:55:13,980
needs to be processed by that

2242
01:55:11,040 --> 01:55:15,800
destination node and then move it on

2243
01:55:13,980 --> 01:55:20,429
from from that point without having to

2244
01:55:15,800 --> 01:55:24,960
confute security and and and routing in

2245
01:55:20,430 --> 01:55:27,090
the same protocol it also has the

2246
01:55:24,960 --> 01:55:28,980
advantage of giving us a

2247
01:55:27,090 --> 01:55:32,400
straightforward way of defending against

2248
01:55:28,980 --> 01:55:34,320
traffic analysis because the the the

2249
01:55:32,400 --> 01:55:39,540
encapsulated bundle can be encrypted so

2250
01:55:34,320 --> 01:55:41,240
that its primary block is obscured it

2251
01:55:39,540 --> 01:55:44,700
gives us a way of temporarily

2252
01:55:41,240 --> 01:55:49,710
substituting some various processing

2253
01:55:44,700 --> 01:55:51,720
parameters that make it make traversal

2254
01:55:49,710 --> 01:55:54,420
of a portion of the internet more

2255
01:55:51,720 --> 01:55:58,230
palatable to the network operator things

2256
01:55:54,420 --> 01:56:00,720
like priority and time to live and if we

2257
01:55:58,230 --> 01:56:04,830
care about doing source path routing at

2258
01:56:00,720 --> 01:56:08,130
some point it's a simple way of doing

2259
01:56:04,830 --> 01:56:13,559
source path routing as well there was an

2260
01:56:08,130 --> 01:56:16,950
initial draft posted in January that as

2261
01:56:13,560 --> 01:56:18,420
far as I know doesn't need any nobody's

2262
01:56:16,950 --> 01:56:20,160
brought up anything that needs to be

2263
01:56:18,420 --> 01:56:24,090
changed in it but of course it's

2264
01:56:20,160 --> 01:56:26,040
certainly open to editing but this is my

2265
01:56:24,090 --> 01:56:28,200
top priority I think we should add this

2266
01:56:26,040 --> 01:56:31,340
like toot sweet

2267
01:56:28,200 --> 01:56:34,470
Marcius co-chair that has been already

2268
01:56:31,340 --> 01:56:39,000
agreed and in the working group and

2269
01:56:34,470 --> 01:56:41,820
previous ad so we're it's just I think

2270
01:56:39,000 --> 01:56:44,040
it's not in the Charter so I think you

2271
01:56:41,820 --> 01:56:46,530
know I didn't put in milestones or

2272
01:56:44,040 --> 01:56:50,100
something yeah because it's a it's

2273
01:56:46,530 --> 01:56:53,309
actually a piece that was in BP already

2274
01:56:50,100 --> 01:56:55,920
okay fine that was agreed before so yeah

2275
01:56:53,310 --> 01:56:57,480
I have no problems taking encapsulation

2276
01:56:55,920 --> 01:56:59,340
on because of how the shorter is

2277
01:56:57,480 --> 01:57:01,110
currently structured so that's just

2278
01:56:59,340 --> 01:57:03,600
submitting you must or there's a master

2279
01:57:01,110 --> 01:57:05,280
for custody in anything so I think it's

2280
01:57:03,600 --> 01:57:13,710
it's it's the milestones need to be

2281
01:57:05,280 --> 01:57:15,750
updated revamped and reformulate okay

2282
01:57:13,710 --> 01:57:18,240
okay great okay

2283
01:57:15,750 --> 01:57:24,240
number two quality of service we also

2284
01:57:18,240 --> 01:57:28,110
took quality service out of RSC 5050 and

2285
01:57:24,240 --> 01:57:30,059
I think speaking from my own perspective

2286
01:57:28,110 --> 01:57:31,860
I know that I've got customers for

2287
01:57:30,060 --> 01:57:35,600
quality service that want to be able to

2288
01:57:31,860 --> 01:57:38,490
specify priority on bundles I I think we

2289
01:57:35,600 --> 01:57:40,200
are agreed that this is something that

2290
01:57:38,490 --> 01:57:42,809
can easily be

2291
01:57:40,200 --> 01:57:46,500
abused so there needs to be some

2292
01:57:42,810 --> 01:57:50,640
reasonable method of of implementing

2293
01:57:46,500 --> 01:57:54,300
custody of quality service and I I'm

2294
01:57:50,640 --> 01:57:58,140
open to completely open to discussion on

2295
01:57:54,300 --> 01:58:01,280
this we have if we care about it we have

2296
01:57:58,140 --> 01:58:08,010
the extended class of service block

2297
01:58:01,280 --> 01:58:11,070
defined in in this eCos draft from from

2298
01:58:08,010 --> 01:58:13,920
a couple of years ago as a starting

2299
01:58:11,070 --> 01:58:15,509
point if we want but we need to do

2300
01:58:13,920 --> 01:58:18,420
something about it anyway so I would

2301
01:58:15,510 --> 01:58:21,420
propose that that be at the top of our

2302
01:58:18,420 --> 01:58:24,930
list for charter changes as well and

2303
01:58:21,420 --> 01:58:28,250
then the last is security distribution

2304
01:58:24,930 --> 01:58:32,670
we've talked about this a little bit

2305
01:58:28,250 --> 01:58:35,400
it's it's not a charter item yet I

2306
01:58:32,670 --> 01:58:37,920
believe it ought to be I'm not going to

2307
01:58:35,400 --> 01:58:40,259
claim that we have a final answer for it

2308
01:58:37,920 --> 01:58:42,330
we have a we have an answer that has an

2309
01:58:40,260 --> 01:58:44,610
implementation that we can talk about

2310
01:58:42,330 --> 01:58:46,290
but whether it's that answer or

2311
01:58:44,610 --> 01:58:50,400
something else I think we need to

2312
01:58:46,290 --> 01:58:54,030
discuss it in in the working group going

2313
01:58:50,400 --> 01:58:55,080
forward you know right away so that's

2314
01:58:54,030 --> 01:58:59,130
that's all I've got

2315
01:58:55,080 --> 01:59:03,570
thanks thanks go okay so we've got two

2316
01:58:59,130 --> 01:59:06,840
minutes anyone want to leap to the mic

2317
01:59:03,570 --> 01:59:10,700
and suggest any other random things they

2318
01:59:06,840 --> 01:59:13,890
want to do otherwise I'm gonna suggest

2319
01:59:10,700 --> 01:59:16,380
mailing this thread people get on the

2320
01:59:13,890 --> 01:59:18,870
list suggest things they want to do and

2321
01:59:16,380 --> 01:59:21,120
an interim meeting is not mentioned

2322
01:59:18,870 --> 01:59:24,900
probably after the summer vacation

2323
01:59:21,120 --> 01:59:27,210
period where hopefully we can sort of

2324
01:59:24,900 --> 01:59:29,549
get some rough consensus on what we want

2325
01:59:27,210 --> 01:59:33,720
to do it's in scope that's acceptable to

2326
01:59:29,550 --> 01:59:38,100
the 80 and make sense and try and get it

2327
01:59:33,720 --> 01:59:40,740
on few topics that were discussed

2328
01:59:38,100 --> 01:59:43,470
previously when we chartered the first

2329
01:59:40,740 --> 01:59:47,360
time and we're still remaining just for

2330
01:59:43,470 --> 01:59:50,250
to prepare your minds convergence layers

2331
01:59:47,360 --> 01:59:52,620
those LTP needs a new version for

2332
01:59:50,250 --> 01:59:59,410
ppb's

2333
01:59:52,620 --> 02:00:02,680
ltp for example this cop early yeah LTP

2334
01:59:59,410 --> 02:00:04,750
possibly although this case for that is

2335
02:00:02,680 --> 02:00:06,640
stronger in space I think that anywhere

2336
02:00:04,750 --> 02:00:09,990
else so whether it's the ITF or not I

2337
02:00:06,640 --> 02:00:13,420
don't know but at the same time it's an

2338
02:00:09,990 --> 02:00:15,219
smtp yeah I think that there's a very

2339
02:00:13,420 --> 02:00:21,880
strong argument for being able to run

2340
02:00:15,220 --> 02:00:28,600
bundles over email maybe about avian

2341
02:00:21,880 --> 02:00:33,190
carriers - well I mean it's like that's

2342
02:00:28,600 --> 02:00:35,920
the case for alien addressing

2343
02:00:33,190 --> 02:00:37,719
architecture naming routing just you

2344
02:00:35,920 --> 02:00:40,630
know simple you know topics right

2345
02:00:37,720 --> 02:00:42,910
neighbor discovery network management we

2346
02:00:40,630 --> 02:00:46,390
discuss key management and called the of

2347
02:00:42,910 --> 02:00:50,950
service kind of bad my list of things

2348
02:00:46,390 --> 02:00:55,330
that we kind of discussed before so food

2349
02:00:50,950 --> 02:01:01,120
of thought for your your flight back to

2350
02:00:55,330 --> 02:01:03,160
own otherwise standard administrivia as

2351
02:01:01,120 --> 02:01:06,330
everyone signed the blue sheets has

2352
02:01:03,160 --> 02:01:10,480
anyone got any final comments debate

2353
02:01:06,330 --> 02:01:11,710
anything otherwise on time I'm gonna

2354
02:01:10,480 --> 02:01:13,719
wrap it up and say thank you very much

2355
02:01:11,710 --> 02:01:15,520
guys and I'm sorry we had to cut short

2356
02:01:13,720 --> 02:01:18,040
some of the presentations but I think it

2357
02:01:15,520 --> 02:01:21,390
was valuable so thanks seaman Singapore

2358
02:01:18,040 --> 02:01:21,390
and at the interim hopefully

2359
02:01:32,980 --> 02:01:36,059
[Music]

