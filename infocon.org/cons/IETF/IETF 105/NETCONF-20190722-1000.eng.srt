1
00:00:06,550 --> 00:00:16,239
it's time all right guys it's time

2
00:00:30,500 --> 00:00:39,559
all right this is the Netcom

3
00:00:33,320 --> 00:00:44,829
group meeting if you're not already

4
00:00:39,559 --> 00:00:44,828
familiar with the no.12

5
00:00:51,370 --> 00:01:15,500
please go through it there's a link also

6
00:00:53,870 --> 00:01:18,020
at the bottom of the flight alright so

7
00:01:15,500 --> 00:01:20,630
blue sheets have been passed out make

8
00:01:18,020 --> 00:01:26,149
sure that you do put your name down on

9
00:01:20,630 --> 00:01:31,789
the blue sheets at the mic make sure you

10
00:01:26,150 --> 00:01:33,740
do pronounce your name slowly for people

11
00:01:31,790 --> 00:01:38,600
we're trying to take notes in ether pad

12
00:01:33,740 --> 00:01:40,669
which we'll come to in a minute pulls

13
00:01:38,600 --> 00:01:44,270
all your questions on at the microphone

14
00:01:40,670 --> 00:01:49,520
itself so that remote participants can

15
00:01:44,270 --> 00:01:51,740
listen to the question we the chairs at

16
00:01:49,520 --> 00:01:54,860
least have their own JavaScript's but if

17
00:01:51,740 --> 00:01:56,600
anyone else wants to take lead on it be

18
00:01:54,860 --> 00:02:03,020
happy to have someone else be the

19
00:01:56,600 --> 00:02:07,039
JavaScript okay I guess we the chairs

20
00:02:03,020 --> 00:02:11,840
who then will act as describes we do

21
00:02:07,040 --> 00:02:15,230
have etherpad so anyone sitting in that

22
00:02:11,840 --> 00:02:17,959
room can use that link at the bottom of

23
00:02:15,230 --> 00:02:21,679
the slide to contribute to the meeting

24
00:02:17,959 --> 00:02:26,739
space just to let you know that we also

25
00:02:21,680 --> 00:02:30,170
rely on the transcribing of the meeting

26
00:02:26,739 --> 00:02:32,269
both the vocal inside of the voice

27
00:02:30,170 --> 00:02:36,099
recording of the meeting to actually

28
00:02:32,269 --> 00:02:36,099
take notes and up up take a minutes

29
00:02:37,790 --> 00:02:43,670
there is there been at least one draft

30
00:02:40,790 --> 00:02:46,579
that was published since the last make

31
00:02:43,670 --> 00:02:54,829
up meeting the congratulations still the

32
00:02:46,580 --> 00:02:57,920
author author's into the workgroup so as

33
00:02:54,830 --> 00:03:01,280
far as the status of shattered items the

34
00:02:57,920 --> 00:03:06,048
yang bush suite of drugs that are at

35
00:03:01,280 --> 00:03:09,799
least four of them they have passed IESE

36
00:03:06,049 --> 00:03:12,590
and in the RFC editor key already in

37
00:03:09,799 --> 00:03:16,069
fact they the artsy editor has been

38
00:03:12,590 --> 00:03:20,030
through most of the changes we expect it

39
00:03:16,069 --> 00:03:21,768
to be an odd 48 stay pretty soon for the

40
00:03:20,030 --> 00:03:27,410
final review before they are published

41
00:03:21,769 --> 00:03:29,840
as RFC in the meeting today we expect

42
00:03:27,410 --> 00:03:33,730
the client-server suite of drugs to be

43
00:03:29,840 --> 00:03:36,739
presented so that's working progress

44
00:03:33,730 --> 00:03:41,179
yang push notification capabilities is

45
00:03:36,739 --> 00:03:44,359
also being presented today as we'll

46
00:03:41,180 --> 00:03:48,260
discuss the status of that draft we

47
00:03:44,359 --> 00:03:50,389
haven't had requests for presentation of

48
00:03:48,260 --> 00:03:55,220
their yang push notification messages

49
00:03:50,389 --> 00:04:01,250
draft but we still see that to be

50
00:03:55,220 --> 00:04:05,060
working progress as far as the agenda is

51
00:04:01,250 --> 00:04:07,419
concerned it's already published in the

52
00:04:05,060 --> 00:04:10,489
agenda on the IKEA website

53
00:04:07,419 --> 00:04:12,410
all of these are chartered items except

54
00:04:10,489 --> 00:04:15,669
for the last item which is still an

55
00:04:12,410 --> 00:04:15,668
individual draft

56
00:04:17,519 --> 00:04:22,500
the item left on the childhood item is

57
00:04:20,639 --> 00:04:24,180
of course the notification capabilities

58
00:04:22,500 --> 00:04:29,280
which will be as I said presented today

59
00:04:24,180 --> 00:04:35,880
I think maybe it's giving me zero to I

60
00:04:29,280 --> 00:04:38,190
don't know I'm the non charted items we

61
00:04:35,880 --> 00:04:41,969
still have a we have the multiple

62
00:04:38,190 --> 00:04:44,880
streams originator dot and the new draft

63
00:04:41,970 --> 00:04:49,590
which is the HTTP based transport

64
00:04:44,880 --> 00:04:52,550
authenticates of solutions so that's any

65
00:04:49,590 --> 00:04:57,169
questions related either tildes lights

66
00:04:52,550 --> 00:04:57,169
these lights out the agenda items

67
00:04:58,729 --> 00:05:03,960
bhavish Langille ericsson i would like

68
00:05:01,710 --> 00:05:06,150
to ask what's the situation with some of

69
00:05:03,960 --> 00:05:09,388
the other yank push related slides i do

70
00:05:06,150 --> 00:05:13,020
the UDP encoding there was the binary

71
00:05:09,389 --> 00:05:15,889
encoding or unity transport the binary

72
00:05:13,020 --> 00:05:18,240
encoding Cole home that was

73
00:05:15,889 --> 00:05:24,930
provisionally taken out from the yang

74
00:05:18,240 --> 00:05:27,389
push so there was a draft called UDP

75
00:05:24,930 --> 00:05:29,750
pub/sub is that the one your friendship

76
00:05:27,389 --> 00:05:33,289
that was they working group adopted

77
00:05:29,750 --> 00:05:36,180
draft but we unadopted it last time

78
00:05:33,289 --> 00:05:39,120
because the main post focus was actually

79
00:05:36,180 --> 00:05:42,750
the multi-stream originator what bad

80
00:05:39,120 --> 00:05:44,580
draft needs to do is to be we read of

81
00:05:42,750 --> 00:05:46,800
you know brought to the workgroups again

82
00:05:44,580 --> 00:05:49,469
has a notice draft so if something like

83
00:05:46,800 --> 00:05:51,330
you did he notice so someone can first

84
00:05:49,469 --> 00:05:53,550
you know really submit it in that

85
00:05:51,330 --> 00:05:58,070
fashion then it could be accepted by the

86
00:05:53,550 --> 00:05:58,070
working group good sense

87
00:06:01,940 --> 00:06:06,530
sorry could you speak that well the my

88
00:06:04,470 --> 00:06:10,680
business and the website is still up to

89
00:06:06,530 --> 00:06:16,320
some the stateís patriot EP pops top is

90
00:06:10,680 --> 00:06:22,050
still in the working truth we did ask

91
00:06:16,320 --> 00:06:24,930
for secretary to another course the

92
00:06:22,050 --> 00:06:28,950
binary encoding and called whom the

93
00:06:24,930 --> 00:06:31,920
binary encoding so it's still an

94
00:06:28,950 --> 00:06:34,050
individual ground it's not a workgroup

95
00:06:31,920 --> 00:06:36,300
item if you're referring to the table

96
00:06:34,050 --> 00:06:39,810
that I presented a couple of that comes

97
00:06:36,300 --> 00:06:43,500
yet so it's still there hey may not mean

98
00:06:39,810 --> 00:06:47,280
in the division but it's if I knew your

99
00:06:43,500 --> 00:06:49,680
draft at this point and call home parts

100
00:06:47,280 --> 00:06:53,099
that we took out from yank bush

101
00:06:49,680 --> 00:06:55,020
is there any development on that or so

102
00:06:53,100 --> 00:06:58,440
the call home parts I think if you look

103
00:06:55,020 --> 00:07:00,659
to the draft that Mahesh is presenting

104
00:06:58,440 --> 00:07:03,530
the last one on the on the list here

105
00:07:00,660 --> 00:07:07,590
it's actually presenting a a note of

106
00:07:03,530 --> 00:07:12,510
transport for configured subscriptions

107
00:07:07,590 --> 00:07:14,130
which does in fact do couple more like

108
00:07:12,510 --> 00:07:16,940
that case I wouldn't say column let's

109
00:07:14,130 --> 00:07:24,810
just say device initiated connection and

110
00:07:16,940 --> 00:07:27,690
okay tiny mrs. Hank ever joining Ken's

111
00:07:24,810 --> 00:07:28,980
presentation later and in that context I

112
00:07:27,690 --> 00:07:32,730
want to highlight that there could also

113
00:07:28,980 --> 00:07:35,400
be a co-ed call home because in the

114
00:07:32,730 --> 00:07:37,640
context we were present here that so I

115
00:07:35,400 --> 00:07:39,989
was like there could be multiple

116
00:07:37,640 --> 00:07:41,490
variants off to doing this and I'm not

117
00:07:39,990 --> 00:07:47,400
sure if there should be across documents

118
00:07:41,490 --> 00:07:48,840
or in a single document so Hank is

119
00:07:47,400 --> 00:07:50,969
saying that there's another effort for

120
00:07:48,840 --> 00:07:54,979
doing a binary transport a binary node

121
00:07:50,970 --> 00:07:54,980
of transport for notifications

122
00:08:02,330 --> 00:08:06,680
you can start with the presentations

123
00:08:31,750 --> 00:08:38,990
okay hi good morning so we're gonna be

124
00:08:37,280 --> 00:08:41,270
presenting the suite of the

125
00:08:38,990 --> 00:08:43,789
client-server graphs and of course

126
00:08:41,270 --> 00:08:45,800
asthma has just said all but one has

127
00:08:43,789 --> 00:08:48,290
been adopted working group item the last

128
00:08:45,800 --> 00:08:50,270
one HP client-server we did attempt to

129
00:08:48,290 --> 00:08:53,420
run it the adoption the same time we did

130
00:08:50,270 --> 00:08:55,880
the TCP client-server adoption there was

131
00:08:53,420 --> 00:08:58,579
some pushback from the HTTP bids chairs

132
00:08:55,880 --> 00:09:01,910
which honestly we didn't have the energy

133
00:08:58,580 --> 00:09:03,800
at that time to pursue and you know

134
00:09:01,910 --> 00:09:05,990
because the focus actually when we moved

135
00:09:03,800 --> 00:09:07,880
to the next slide the focus is on the

136
00:09:05,990 --> 00:09:10,580
first three drafts that we're trying to

137
00:09:07,880 --> 00:09:11,750
get them into working group last call as

138
00:09:10,580 --> 00:09:14,090
quickly as possible

139
00:09:11,750 --> 00:09:17,540
so you know after those have actually

140
00:09:14,090 --> 00:09:19,670
achieved last call status then the focus

141
00:09:17,540 --> 00:09:23,689
will shift again to try and get the the

142
00:09:19,670 --> 00:09:26,300
remaining hierarchy of drafts adopted

143
00:09:23,690 --> 00:09:28,280
and published so that's when you should

144
00:09:26,300 --> 00:09:32,510
look to seeing the HTT client-server

145
00:09:28,280 --> 00:09:34,939
drafted adopted and let me just quickly

146
00:09:32,510 --> 00:09:35,990
see yes okay so this presentations focus

147
00:09:34,940 --> 00:09:37,970
is threefold

148
00:09:35,990 --> 00:09:40,820
there's the crypto types draft which

149
00:09:37,970 --> 00:09:42,860
will you know spend actually most of our

150
00:09:40,820 --> 00:09:45,710
time on I think then there's the

151
00:09:42,860 --> 00:09:48,980
keystore draft and lastly restaurant

152
00:09:45,710 --> 00:09:50,660
server draft but I so this presentation

153
00:09:48,980 --> 00:09:52,070
actually just touches on you know if you

154
00:09:50,660 --> 00:09:54,350
go back to that previous list it really

155
00:09:52,070 --> 00:09:56,680
just touches on three out of you know

156
00:09:54,350 --> 00:09:59,960
how many are we looking at nine drafts

157
00:09:56,680 --> 00:10:03,739
and in particular it doesn't talk about

158
00:09:59,960 --> 00:10:05,600
Hank the trust anchors draft which I

159
00:10:03,740 --> 00:10:08,750
think you we were discussing yesterday

160
00:10:05,600 --> 00:10:10,520
you wanted to ask a question about so

161
00:10:08,750 --> 00:10:11,480
maybe now would be a good time to ask

162
00:10:10,520 --> 00:10:16,400
your question about the trust anchors

163
00:10:11,480 --> 00:10:19,790
draft and especially how relates the TLS

164
00:10:16,400 --> 00:10:23,630
draft yeah okay so this is Hank again so

165
00:10:19,790 --> 00:10:26,439
this is my officially it's a car hat

166
00:10:23,630 --> 00:10:29,270
it's probably also yang of things hat on

167
00:10:26,440 --> 00:10:33,290
all of these people who try to do binary

168
00:10:29,270 --> 00:10:38,660
yang there is core Kampf coming up

169
00:10:33,290 --> 00:10:41,660
formally known as call me and this is

170
00:10:38,660 --> 00:10:43,730
using DTLS if it's secured of course and

171
00:10:41,660 --> 00:10:48,199
it should be and that will be and

172
00:10:43,730 --> 00:10:51,620
in coop and on the DTS level a coop

173
00:10:48,200 --> 00:10:55,210
advises to use a different securing

174
00:10:51,620 --> 00:10:59,350
basis you secure co-op and that is a

175
00:10:55,210 --> 00:11:02,300
public rocky a row public key as a

176
00:10:59,350 --> 00:11:06,590
minimal CMS frame as it was standardized

177
00:11:02,300 --> 00:11:09,829
years ago and also we have this concept

178
00:11:06,590 --> 00:11:14,080
of pairwise symmetric keys that are pre

179
00:11:09,830 --> 00:11:14,080
provision and both of these are

180
00:11:16,240 --> 00:11:25,310
suggested methods to secure co-op by the

181
00:11:20,060 --> 00:11:27,500
coop RFC and they can be applied to to

182
00:11:25,310 --> 00:11:30,560
two levels they can be applied to DTLS

183
00:11:27,500 --> 00:11:33,590
and therefore what extend into TLS which

184
00:11:30,560 --> 00:11:35,569
is effectively also done today I mean a

185
00:11:33,590 --> 00:11:37,670
lot of people use PS case probably known

186
00:11:35,570 --> 00:11:41,510
as pre-shared keys we like the term pair

187
00:11:37,670 --> 00:11:42,740
where pairwise symmetric key and the rob

188
00:11:41,510 --> 00:11:46,310
public key of course is a little bit

189
00:11:42,740 --> 00:11:49,790
different than the SSH key material so

190
00:11:46,310 --> 00:11:52,670
my proposal here and this mic is true at

191
00:11:49,790 --> 00:11:54,650
these two flavors like the raw Papa key

192
00:11:52,670 --> 00:11:58,750
and the pairwise symmetric key to the

193
00:11:54,650 --> 00:12:01,579
trust or draft and canned I've already

194
00:11:58,750 --> 00:12:03,950
talking about so we are aligned but the

195
00:12:01,580 --> 00:12:06,140
room has to be fine with this because

196
00:12:03,950 --> 00:12:10,760
this extends a little bit into TLS in

197
00:12:06,140 --> 00:12:14,960
the DTLS it is mandated by a co-op end

198
00:12:10,760 --> 00:12:19,130
and karatsu on the communication layer

199
00:12:14,960 --> 00:12:20,750
but also on the on the application as on

200
00:12:19,130 --> 00:12:22,910
the object security layer so it's a

201
00:12:20,750 --> 00:12:25,520
communication security and it cannot be

202
00:12:22,910 --> 00:12:28,910
an object security so it also goes back

203
00:12:25,520 --> 00:12:32,329
into ask or the object security for

204
00:12:28,910 --> 00:12:34,670
constrained environment also so there

205
00:12:32,330 --> 00:12:36,170
are multiple consumers of this

206
00:12:34,670 --> 00:12:38,120
information and my personal point of

207
00:12:36,170 --> 00:12:40,010
view is we should add that to the graph

208
00:12:38,120 --> 00:12:42,230
itself ok great thank you

209
00:12:40,010 --> 00:12:45,200
and actually to add to that even with

210
00:12:42,230 --> 00:12:47,060
the TLS straps i'm the TLS itself we

211
00:12:45,200 --> 00:12:49,790
primarily think about certificates but

212
00:12:47,060 --> 00:12:52,729
it does support other forms like PGP and

213
00:12:49,790 --> 00:12:54,949
and pre-shared keys and currently trust

214
00:12:52,730 --> 00:12:57,530
anchor draft does not have any support

215
00:12:54,950 --> 00:12:59,300
at all for these things it's really in

216
00:12:57,530 --> 00:13:02,449
that we ourselves should have caught

217
00:12:59,300 --> 00:13:03,979
before and I would expect is she would

218
00:13:02,450 --> 00:13:04,310
have if we are taking those drafts last

219
00:13:03,980 --> 00:13:07,220
call

220
00:13:04,310 --> 00:13:09,469
so what Hank is raising right now in the

221
00:13:07,220 --> 00:13:11,570
context of DTLS actually we already had

222
00:13:09,470 --> 00:13:14,000
an issue with the TLS trapped and and so

223
00:13:11,570 --> 00:13:17,320
you know extending the trust anchors

224
00:13:14,000 --> 00:13:18,770
draft to support pre share keys and and

225
00:13:17,320 --> 00:13:22,130
was the other thing

226
00:13:18,770 --> 00:13:25,370
Iraqis is would be the proper thing to

227
00:13:22,130 --> 00:13:28,490
do and we have another comment coming to

228
00:13:25,370 --> 00:13:30,500
Mike ah Tim Kerry no key I do have a

229
00:13:28,490 --> 00:13:33,770
question on this approach though because

230
00:13:30,500 --> 00:13:37,010
you know there's gonna be many consumers

231
00:13:33,770 --> 00:13:39,800
of these particular drafts hopefully

232
00:13:37,010 --> 00:13:43,130
right outside the context of you know

233
00:13:39,800 --> 00:13:45,939
just client-server type of stuff so here

234
00:13:43,130 --> 00:13:51,140
we have an example of Comey and co-op

235
00:13:45,940 --> 00:13:53,870
wanting to augment and I use that word I

236
00:13:51,140 --> 00:13:55,400
think appropriately here some of the

237
00:13:53,870 --> 00:13:58,940
work that's happening in the keystore

238
00:13:55,400 --> 00:14:01,990
you know from a different area so is it

239
00:13:58,940 --> 00:14:05,089
is it the approach or strategy to

240
00:14:01,990 --> 00:14:09,800
continually revising these drafts that

241
00:14:05,089 --> 00:14:11,930
is the universal crypto or key store

242
00:14:09,800 --> 00:14:14,990
types that we wanted to deal with or or

243
00:14:11,930 --> 00:14:19,219
do we expect the other working groups to

244
00:14:14,990 --> 00:14:23,210
use those drafts or incorporate them

245
00:14:19,220 --> 00:14:24,740
into their into their work and so I'm

246
00:14:23,210 --> 00:14:26,120
just trying to understand you know the

247
00:14:24,740 --> 00:14:28,400
difference because otherwise we'll be

248
00:14:26,120 --> 00:14:30,350
revving this thing for you know every

249
00:14:28,400 --> 00:14:33,770
every every use possible and that's

250
00:14:30,350 --> 00:14:37,480
right quick gleams Nick so there is a

251
00:14:33,770 --> 00:14:39,589
second review of the set of drafts

252
00:14:37,480 --> 00:14:43,040
sometime later today or maybe tomorrow

253
00:14:39,589 --> 00:14:44,839
and be looking for proposals well from

254
00:14:43,040 --> 00:14:46,599
them to tell us whether the approach

255
00:14:44,839 --> 00:14:49,010
that we are taking allows for

256
00:14:46,600 --> 00:14:52,760
extensibility if need be without

257
00:14:49,010 --> 00:14:57,260
necessarily devising these set of drafts

258
00:14:52,760 --> 00:14:59,680
continuously so please if the framework

259
00:14:57,260 --> 00:15:03,470
of these drafts looks I could enough

260
00:14:59,680 --> 00:15:06,250
then other working groups can extend the

261
00:15:03,470 --> 00:15:06,250
more models

262
00:15:06,430 --> 00:15:13,089
I'm the sing it again and addressing the

263
00:15:09,340 --> 00:15:15,840
concern of Perpetual churn we don't want

264
00:15:13,090 --> 00:15:18,220
that so it's basically the same scope

265
00:15:15,840 --> 00:15:20,830
but I think it was like more like an

266
00:15:18,220 --> 00:15:23,980
oversight on the on the DTS part so we

267
00:15:20,830 --> 00:15:27,310
are not not moving outside TLS and ssh

268
00:15:23,980 --> 00:15:29,200
here so the requirements are coming from

269
00:15:27,310 --> 00:15:30,880
the same document so we actually have

270
00:15:29,200 --> 00:15:33,760
the same skull but we are not completely

271
00:15:30,880 --> 00:15:35,439
in that scope i think and and beyond

272
00:15:33,760 --> 00:15:41,620
that it should be different drafts or

273
00:15:35,440 --> 00:15:42,790
formulas of managing us okay so what i

274
00:15:41,620 --> 00:15:46,780
understand what you're saying

275
00:15:42,790 --> 00:15:49,000
Hank is is that the that the base what

276
00:15:46,780 --> 00:15:50,650
we would consider to be any base draft

277
00:15:49,000 --> 00:15:53,790
that would come out of net mod will

278
00:15:50,650 --> 00:15:56,530
incorporate both SSH TLS and D TLS

279
00:15:53,790 --> 00:15:59,469
implementations and then we kind of Miss

280
00:15:56,530 --> 00:16:03,790
the DTLS and that we are agreeing as a

281
00:15:59,470 --> 00:16:06,940
working group that DTLS is a core secure

282
00:16:03,790 --> 00:16:10,870
transport or for the IE q but for for

283
00:16:06,940 --> 00:16:12,580
for the work that we did right hmm okay

284
00:16:10,870 --> 00:16:14,320
so i don't know which hat i'm using at

285
00:16:12,580 --> 00:16:16,450
the moment but this working group is

286
00:16:14,320 --> 00:16:20,740
primarily focused on net coffin rest

287
00:16:16,450 --> 00:16:23,830
cough and they only have association TLS

288
00:16:20,740 --> 00:16:26,890
as being official transport bindings not

289
00:16:23,830 --> 00:16:29,350
co-op yet sorry Hank and that's why I

290
00:16:26,890 --> 00:16:31,000
mentioned that even though TLS itself

291
00:16:29,350 --> 00:16:33,490
actually already has the need to support

292
00:16:31,000 --> 00:16:36,100
preacher keys and wrong keys it's in the

293
00:16:33,490 --> 00:16:39,090
Tila strap so our support of TLS for our

294
00:16:36,100 --> 00:16:41,080
own purposes is already incomplete and

295
00:16:39,090 --> 00:16:44,080
so that's what I'm really you're saying

296
00:16:41,080 --> 00:16:46,870
it's not a detail a saying it's a it's a

297
00:16:44,080 --> 00:16:48,910
TLS thing we should soon complete Hank

298
00:16:46,870 --> 00:16:50,440
Reyes did he it's actually absolutely

299
00:16:48,910 --> 00:16:52,180
correct it would have been caught by is

300
00:16:50,440 --> 00:16:54,430
she had we tried to take the last call

301
00:16:52,180 --> 00:16:56,410
but you know it's better this way that

302
00:16:54,430 --> 00:16:58,449
we can while we're the focuses on trust

303
00:16:56,410 --> 00:17:01,030
anchor getting it to last color we would

304
00:16:58,450 --> 00:17:04,300
extract core to take if they want to use

305
00:17:01,030 --> 00:17:05,920
this for detail us we would do anything

306
00:17:04,300 --> 00:17:09,430
different right we would expect cord to

307
00:17:05,920 --> 00:17:11,260
take well I think after after trust

308
00:17:09,430 --> 00:17:13,420
anchors has been published if any other

309
00:17:11,260 --> 00:17:15,849
group wanted to extend it and add

310
00:17:13,420 --> 00:17:17,770
another kind of trust anchor then it

311
00:17:15,849 --> 00:17:20,168
would be a proper augmentation at Yangon

312
00:17:17,770 --> 00:17:23,019
mentation and it would proceed

313
00:17:20,169 --> 00:17:27,069
basically luckily coincidence that this

314
00:17:23,019 --> 00:17:27,999
is not exceeding your scope okay good

315
00:17:27,069 --> 00:17:30,730
okay very good

316
00:17:27,999 --> 00:17:33,009
all right so before I move to the next

317
00:17:30,730 --> 00:17:35,200
slide and kind of get into it again

318
00:17:33,009 --> 00:17:36,609
these first three drafts that we're

319
00:17:35,200 --> 00:17:38,529
focusing on trying to get the last call

320
00:17:36,609 --> 00:17:40,149
crypto types which we're gonna spend

321
00:17:38,529 --> 00:17:41,350
quite some time discussing today is so

322
00:17:40,149 --> 00:17:43,959
probably the one that's going to take

323
00:17:41,350 --> 00:17:45,850
the longest to resolve trust anchors I

324
00:17:43,960 --> 00:17:47,799
thought was resolved but per the

325
00:17:45,850 --> 00:17:50,289
discussion we just had is now meaning to

326
00:17:47,799 --> 00:17:51,999
be extended slightly I actually don't

327
00:17:50,289 --> 00:17:54,669
view this is to be terribly complicated

328
00:17:51,999 --> 00:17:56,139
and will likely conclude before the

329
00:17:54,669 --> 00:17:58,059
trust of the crypto types discussion

330
00:17:56,139 --> 00:17:59,979
concludes and then lastly there's the

331
00:17:58,059 --> 00:18:01,509
keystore which is also on today's

332
00:17:59,980 --> 00:18:03,489
discussion but thankfully I think we're

333
00:18:01,509 --> 00:18:05,980
at the end of the tunnel and it is going

334
00:18:03,489 --> 00:18:08,950
to move forward quickly okay so back to

335
00:18:05,980 --> 00:18:10,480
this slide again and I'll just move on

336
00:18:08,950 --> 00:18:12,340
that I think so let's begin the first

337
00:18:10,480 --> 00:18:14,139
discussion about crypto types and

338
00:18:12,340 --> 00:18:16,869
algorithm identities strategy I'd like

339
00:18:14,139 --> 00:18:20,049
to invite my co-authors Michael and

340
00:18:16,869 --> 00:18:23,168
Frank sorry what will hang and Frank

341
00:18:20,049 --> 00:18:26,679
know just just how long okay great all

342
00:18:23,169 --> 00:18:28,779
right so so first I mean it set up and

343
00:18:26,679 --> 00:18:30,100
then transfer okay so the high-level

344
00:18:28,779 --> 00:18:31,989
decision that we're needing to make

345
00:18:30,100 --> 00:18:35,080
right now is whether or not we stay the

346
00:18:31,989 --> 00:18:39,580
course or simplify the current approach

347
00:18:35,080 --> 00:18:42,399
with crypto types is to unify all the

348
00:18:39,580 --> 00:18:44,859
algorithms produced by disconnected

349
00:18:42,399 --> 00:18:46,418
security area efforts so there's lots of

350
00:18:44,859 --> 00:18:48,549
working groups within the security area

351
00:18:46,419 --> 00:18:50,379
and each of them are defining crypto

352
00:18:48,549 --> 00:18:52,418
algorithms that are effectively the

353
00:18:50,379 --> 00:18:53,830
identical kinds of things but they give

354
00:18:52,419 --> 00:18:55,899
them different names they create

355
00:18:53,830 --> 00:18:58,090
different IANA registries having

356
00:18:55,899 --> 00:19:01,529
different numbers Regiment assigned

357
00:18:58,090 --> 00:19:03,459
numbers to them which is you know

358
00:19:01,529 --> 00:19:06,580
convenient because you know the each is

359
00:19:03,460 --> 00:19:09,759
in their own protocol but here we're

360
00:19:06,580 --> 00:19:11,678
trying to define a unified layer this

361
00:19:09,759 --> 00:19:14,649
keystore layer it needs the store keys

362
00:19:11,679 --> 00:19:16,480
that can be used by any protocol so we

363
00:19:14,649 --> 00:19:19,149
get ourselves into this problem space

364
00:19:16,480 --> 00:19:22,389
where we're trying to unify the set of

365
00:19:19,149 --> 00:19:23,609
you know algorithms identities or

366
00:19:22,389 --> 00:19:26,229
enumerations or whatever we're using

367
00:19:23,609 --> 00:19:27,519
that can span the gamut of all these

368
00:19:26,230 --> 00:19:28,599
different protocols that's the

369
00:19:27,519 --> 00:19:30,879
fundamental problem that we're dealing

370
00:19:28,599 --> 00:19:34,580
with right now solving this problem is

371
00:19:30,879 --> 00:19:37,219
the right thing to do but it's difficult

372
00:19:34,580 --> 00:19:39,439
and as Mahesh just mentioned a moment

373
00:19:37,220 --> 00:19:43,040
ago last week the chairs did request an

374
00:19:39,440 --> 00:19:45,800
early sector review we were rough it was

375
00:19:43,040 --> 00:19:51,230
assigned and we had a call with him last

376
00:19:45,800 --> 00:19:53,649
week and then just I heard over email

377
00:19:51,230 --> 00:19:58,870
that the topic was raised in the isg

378
00:19:53,650 --> 00:20:03,110
discussion on Sunday and now someone

379
00:19:58,870 --> 00:20:05,179
Michelle from Ayane has been asked to

380
00:20:03,110 --> 00:20:07,969
have a meeting with her FET and the

381
00:20:05,180 --> 00:20:09,650
author sorry the chairs in order to try

382
00:20:07,970 --> 00:20:11,950
to discuss what the next step is to do

383
00:20:09,650 --> 00:20:14,270
so there is some progress on that front

384
00:20:11,950 --> 00:20:20,240
in terms of what is the right thing to

385
00:20:14,270 --> 00:20:21,889
do so but before sorry and I think maybe

386
00:20:20,240 --> 00:20:27,680
Ignace if you want to say something

387
00:20:21,890 --> 00:20:30,440
about that yes this was discussed

388
00:20:27,680 --> 00:20:31,850
briefly at AG sandy meeting and the

389
00:20:30,440 --> 00:20:33,890
outcome of that is that there is no

390
00:20:31,850 --> 00:20:37,790
outcome at this time right and what is

391
00:20:33,890 --> 00:20:40,970
needed is that probably this working

392
00:20:37,790 --> 00:20:42,800
group needs to think of what what of the

393
00:20:40,970 --> 00:20:45,440
possible what of the proposed options

394
00:20:42,800 --> 00:20:47,629
either we don't have a registry but put

395
00:20:45,440 --> 00:20:49,190
a half coded values into into the

396
00:20:47,630 --> 00:20:52,910
documents and we spend that every time I

397
00:20:49,190 --> 00:20:56,030
have a unified registry which is on an

398
00:20:52,910 --> 00:20:58,280
aside or have something in between this

399
00:20:56,030 --> 00:21:00,350
is something for probably not convey

400
00:20:58,280 --> 00:21:03,110
here to think about that and provide a

401
00:21:00,350 --> 00:21:04,060
recommendation what you would see what

402
00:21:03,110 --> 00:21:10,669
would be the

403
00:21:04,060 --> 00:21:13,010
say more stable in the longer term right

404
00:21:10,670 --> 00:21:15,440
okay perfect and that's the set up for

405
00:21:13,010 --> 00:21:17,629
the the last line here the arthur's wish

406
00:21:15,440 --> 00:21:19,340
to see this approach play out again it

407
00:21:17,630 --> 00:21:20,600
is the right thing to do but we're

408
00:21:19,340 --> 00:21:23,959
beginning to think about fallback

409
00:21:20,600 --> 00:21:25,909
strategies so this discussion number one

410
00:21:23,960 --> 00:21:28,100
right here is to first try to talk about

411
00:21:25,910 --> 00:21:29,420
what is the you know how we can the

412
00:21:28,100 --> 00:21:31,159
current approach the right thing to do

413
00:21:29,420 --> 00:21:32,900
and how what we can do to make it

414
00:21:31,160 --> 00:21:35,060
complete and insult

415
00:21:32,900 --> 00:21:37,040
then there's the discussion about a

416
00:21:35,060 --> 00:21:39,110
possible fallback strategy and then

417
00:21:37,040 --> 00:21:41,450
actually again in my conversation with

418
00:21:39,110 --> 00:21:43,790
Hank yesterday during a hackathon

419
00:21:41,450 --> 00:21:45,440
there's a possible third approach that

420
00:21:43,790 --> 00:21:48,000
we could consider as well which I'll

421
00:21:45,440 --> 00:21:50,670
discuss at that time

422
00:21:48,000 --> 00:21:57,060
okay so then now I think I'll pass it to

423
00:21:50,670 --> 00:21:57,960
my co-author yeah good morning everyone

424
00:21:57,060 --> 00:22:01,800
my name is aqua

425
00:21:57,960 --> 00:22:03,860
from Maui cooler of this IKEA abstract

426
00:22:01,800 --> 00:22:07,350
quick to attack Everest

427
00:22:03,860 --> 00:22:10,620
yeah I mean help in these crystals my

428
00:22:07,350 --> 00:22:14,850
identifiers so in this style I will give

429
00:22:10,620 --> 00:22:17,669
some background on the crypto type

430
00:22:14,850 --> 00:22:21,300
crypto errors my identifiers yeah

431
00:22:17,670 --> 00:22:24,590
initially we used identity too

432
00:22:21,300 --> 00:22:29,580
and by issue security everything like

433
00:22:24,590 --> 00:22:34,260
like the upper yeah in the upper figure

434
00:22:29,580 --> 00:22:37,080
yeah for each security algorithm we give

435
00:22:34,260 --> 00:22:40,920
a name and we give a description that is

436
00:22:37,080 --> 00:22:43,110
and so on we classify them into a few

437
00:22:40,920 --> 00:22:45,990
categories for example we have a hash

438
00:22:43,110 --> 00:22:48,300
algorithm and symmetric encryption

439
00:22:45,990 --> 00:22:52,650
algorithm and asymmetry swaps

440
00:22:48,300 --> 00:22:59,010
also change but later actually some

441
00:22:52,650 --> 00:23:04,260
expert from I to intercept the they have

442
00:22:59,010 --> 00:23:06,900
some suggestion that maybe enumerate

443
00:23:04,260 --> 00:23:10,260
type could be better because it is

444
00:23:06,900 --> 00:23:13,680
simple to management and also when new

445
00:23:10,260 --> 00:23:18,240
algorithms designed we can simply add a

446
00:23:13,680 --> 00:23:20,940
single value in the irony I any and yeah

447
00:23:18,240 --> 00:23:24,390
I've seen from different group can refer

448
00:23:20,940 --> 00:23:28,110
to the alien in the practical definition

449
00:23:24,390 --> 00:23:35,750
so after that in the recent draft we

450
00:23:28,110 --> 00:23:40,979
change to the new style in the enumerate

451
00:23:35,750 --> 00:23:44,310
format and future crypto I will indeed

452
00:23:40,980 --> 00:23:48,150
our value field you have to identify

453
00:23:44,310 --> 00:23:50,840
these areas yeah but details can be

454
00:23:48,150 --> 00:23:57,570
looked into that can refer to the

455
00:23:50,840 --> 00:24:00,928
destructor 10 so this on my tangible

456
00:23:57,570 --> 00:24:04,070
contribution on these crypto algorithm

457
00:24:00,929 --> 00:24:07,679
yeah actually I have some personal

458
00:24:04,070 --> 00:24:09,600
observations or the Critical recently

459
00:24:07,679 --> 00:24:13,919
used the unity of it there are many

460
00:24:09,600 --> 00:24:19,350
artists that use different security

461
00:24:13,919 --> 00:24:23,309
areas including worst puppy and cement

462
00:24:19,350 --> 00:24:28,408
chi and also the hash like in the TSI

463
00:24:23,309 --> 00:24:30,750
piece sack and I to answer so many apps

464
00:24:28,409 --> 00:24:34,649
he has been published and many crypto I

465
00:24:30,750 --> 00:24:39,539
will have been defined and related to

466
00:24:34,649 --> 00:24:41,850
the ia the figure below shows the

467
00:24:39,539 --> 00:24:46,919
algorithm from two groups vines TOS

468
00:24:41,850 --> 00:24:49,049
wines SSH so different group and the

469
00:24:46,919 --> 00:24:51,690
different apps he has your own style in

470
00:24:49,049 --> 00:24:55,740
different defining crypto algorithm for

471
00:24:51,690 --> 00:24:58,590
example human for the TOS 1.21 3 that

472
00:24:55,740 --> 00:25:02,460
the definition is different so this

473
00:24:58,590 --> 00:25:06,090
brings a lot of effort for the app see

474
00:25:02,460 --> 00:25:08,850
editor designers had to define review

475
00:25:06,090 --> 00:25:11,309
implement I manage data I wish so

476
00:25:08,850 --> 00:25:14,158
usually they are going to be using a

477
00:25:11,309 --> 00:25:17,250
real system so I think there are lots of

478
00:25:14,159 --> 00:25:20,340
additional maintenance work has to be

479
00:25:17,250 --> 00:25:22,889
done the year also so peace and ease

480
00:25:20,340 --> 00:25:26,158
operation I have some question yes we

481
00:25:22,889 --> 00:25:29,428
come up with a unified framework for

482
00:25:26,159 --> 00:25:32,490
example initially star or any piece for

483
00:25:29,429 --> 00:25:34,700
crypto algorithm identifiers so that

484
00:25:32,490 --> 00:25:39,320
they can be shared among different

485
00:25:34,700 --> 00:25:42,360
groups and abscess for example we can

486
00:25:39,320 --> 00:25:46,379
classify the crypto algorithms into a

487
00:25:42,360 --> 00:25:49,969
few categories and can assign unique

488
00:25:46,379 --> 00:25:54,740
number to each of them and so other

489
00:25:49,970 --> 00:25:54,740
artists in the future can refer to this

490
00:25:55,009 --> 00:26:01,110
this list and do not need to specify the

491
00:25:59,129 --> 00:26:03,928
house absolutely

492
00:26:01,110 --> 00:26:08,658
identified by themselves it's just a

493
00:26:03,929 --> 00:26:08,659
simple reference yeah this is what

494
00:26:08,880 --> 00:26:12,900
what I'm thinking based on my

495
00:26:10,789 --> 00:26:16,620
observation so if they are a better

496
00:26:12,900 --> 00:26:19,159
message so we can put it on Minister so

497
00:26:16,620 --> 00:26:23,129
you can even put them later put in the

498
00:26:19,159 --> 00:26:25,970
crypto type trapped yeah so that's what

499
00:26:23,130 --> 00:26:25,970
I want to share

500
00:26:29,070 --> 00:26:33,928
so the I'm speaking of better methods

501
00:26:31,890 --> 00:26:35,520
this is what I was saying or what my

502
00:26:33,929 --> 00:26:40,010
discussion with Hank you were talking

503
00:26:35,520 --> 00:26:43,950
about Cozy and how when this is the

504
00:26:40,010 --> 00:26:48,450
encryption of JSON documents right and

505
00:26:43,950 --> 00:26:50,309
and when that that draft became RFC the

506
00:26:48,450 --> 00:26:52,890
it registered a bunch of I Ana

507
00:26:50,309 --> 00:26:55,200
registries is it they actually I in a

508
00:26:52,890 --> 00:26:57,539
red shades and they they cover a large

509
00:26:55,200 --> 00:27:00,360
number of cryptographic algorithms I

510
00:26:57,539 --> 00:27:04,440
think your proposal was that we might be

511
00:27:00,360 --> 00:27:07,168
able to leverage that work yeah this is

512
00:27:04,440 --> 00:27:12,570
Hank again it's it's a it's for cozy or

513
00:27:07,169 --> 00:27:15,630
the variation but Jim shot is the expert

514
00:27:12,570 --> 00:27:17,399
on this registry and he that all the

515
00:27:15,630 --> 00:27:19,820
groups there are other participants

516
00:27:17,399 --> 00:27:23,070
there in the group did an awesome job

517
00:27:19,820 --> 00:27:26,250
it's keep my perimeter zits its curves

518
00:27:23,070 --> 00:27:28,950
is hashing its signatures its crypto and

519
00:27:26,250 --> 00:27:31,230
it's always in combination that only the

520
00:27:28,950 --> 00:27:34,409
safe only done with the basics but but

521
00:27:31,230 --> 00:27:35,880
the combination of key strengths and so

522
00:27:34,409 --> 00:27:38,640
it's very elaborate

523
00:27:35,880 --> 00:27:42,330
eye on our registry already there it's

524
00:27:38,640 --> 00:27:44,340
pretty much I don't want to like to say

525
00:27:42,330 --> 00:27:48,710
complete but it's very very detailed

526
00:27:44,340 --> 00:27:52,168
already so this could be another wave

527
00:27:48,710 --> 00:27:56,760
maintained source for everything crypto

528
00:27:52,169 --> 00:28:00,600
ago I'm not saying that is complete for

529
00:27:56,760 --> 00:28:02,340
your scope because it prunes some of the

530
00:28:00,600 --> 00:28:06,750
very old stuff and of course of the

531
00:28:02,340 --> 00:28:10,020
deprecated things but it's the best

532
00:28:06,750 --> 00:28:13,279
maintained come a Anna I know actually

533
00:28:10,020 --> 00:28:13,279
so maybe yeah

534
00:28:16,490 --> 00:28:23,660
ah Frank sorry Howard our interests and

535
00:28:21,410 --> 00:28:26,930
general question about this kind of

536
00:28:23,660 --> 00:28:31,820
thing thank you that you have mentioned

537
00:28:26,930 --> 00:28:34,280
that for the Cody for the world for this

538
00:28:31,820 --> 00:28:38,750
technology we have a very complicated

539
00:28:34,280 --> 00:28:40,879
crypto algorithm on a page right so what

540
00:28:38,750 --> 00:28:43,760
is the relation with this new and the

541
00:28:40,880 --> 00:28:47,870
pager and the with the existing and a

542
00:28:43,760 --> 00:28:51,260
pager for the TRS for IPSec and SSH and

543
00:28:47,870 --> 00:28:53,959
what is your future plan of how to align

544
00:28:51,260 --> 00:28:59,240
with and you know this is a very

545
00:28:53,960 --> 00:29:01,670
important the problem yes I think again

546
00:28:59,240 --> 00:29:05,300
this is not resolved yet so we have

547
00:29:01,670 --> 00:29:08,030
either the option to choose in the

548
00:29:05,300 --> 00:29:11,000
module where to go to but this can be

549
00:29:08,030 --> 00:29:12,950
very confusing and it would require a

550
00:29:11,000 --> 00:29:16,370
lot of implementation and complexity so

551
00:29:12,950 --> 00:29:19,610
that's usually a bad idea but but if

552
00:29:16,370 --> 00:29:21,909
they're gaps and if you see maybe an

553
00:29:19,610 --> 00:29:25,520
assessment of the tables is an order

554
00:29:21,910 --> 00:29:27,590
your your Lea TLS based so busy that's

555
00:29:25,520 --> 00:29:32,180
the way to go you cannot something wrong

556
00:29:27,590 --> 00:29:34,010
there I think from the yang of things

557
00:29:32,180 --> 00:29:37,070
point of view we could just document

558
00:29:34,010 --> 00:29:39,440
that and put a futsal so if you have an

559
00:29:37,070 --> 00:29:41,659
extension point that there is good to

560
00:29:39,440 --> 00:29:43,400
argument so so the young of things realm

561
00:29:41,660 --> 00:29:45,440
could do that just and live with that

562
00:29:43,400 --> 00:29:47,720
and that's okay

563
00:29:45,440 --> 00:29:49,640
we just wanted to highlight that this

564
00:29:47,720 --> 00:29:52,340
there's another table so it's very

565
00:29:49,640 --> 00:29:54,020
maintained and it goes beyond what us

566
00:29:52,340 --> 00:29:56,179
does but it might not be complete

567
00:29:54,020 --> 00:29:58,520
because I have not made a one-to-one

568
00:29:56,180 --> 00:30:05,270
comparison of those actually so this is

569
00:29:58,520 --> 00:30:09,290
just the first discussion about this and

570
00:30:05,270 --> 00:30:12,530
my my personal comments is that it's not

571
00:30:09,290 --> 00:30:15,680
the responsibility of the individual or

572
00:30:12,530 --> 00:30:19,850
group chapter to mention or to reflect

573
00:30:15,680 --> 00:30:24,140
the latest update of crude origin I hope

574
00:30:19,850 --> 00:30:26,909
that uh those I know pages can you know

575
00:30:24,140 --> 00:30:28,920
can be aligned with each other

576
00:30:26,910 --> 00:30:32,490
they take care of this kind of thing and

577
00:30:28,920 --> 00:30:35,910
we just reference to them I think that's

578
00:30:32,490 --> 00:30:37,680
the best way for not only for our tracks

579
00:30:35,910 --> 00:30:38,610
or maybe for future on another draft

580
00:30:37,680 --> 00:30:41,070
right

581
00:30:38,610 --> 00:30:43,110
I know you take care of that moto 2 or

582
00:30:41,070 --> 00:30:51,090
this kind of thing so maybe thank you

583
00:30:43,110 --> 00:30:52,709
and okay great

584
00:30:51,090 --> 00:30:55,020
well you're right so this is definitely

585
00:30:52,710 --> 00:30:56,850
a good resource for us to look at and in

586
00:30:55,020 --> 00:30:58,680
terms of potentially using you know

587
00:30:56,850 --> 00:31:00,300
folding some of those ideas into what

588
00:30:58,680 --> 00:31:03,420
we're trying to achieve with this

589
00:31:00,300 --> 00:31:06,659
approach and to Frank's very last

590
00:31:03,420 --> 00:31:08,760
comment exactly I think that we

591
00:31:06,660 --> 00:31:12,240
currently the crypto types draft defines

592
00:31:08,760 --> 00:31:14,190
one IETF module and really we should be

593
00:31:12,240 --> 00:31:17,940
thinking about breaking it up too many

594
00:31:14,190 --> 00:31:19,470
Anna - modules so you know this is of

595
00:31:17,940 --> 00:31:22,440
course assuming we stay the course with

596
00:31:19,470 --> 00:31:25,980
this approach but you know twofold first

597
00:31:22,440 --> 00:31:27,990
assigning to I Anna allows IANA to

598
00:31:25,980 --> 00:31:31,050
update the modules outside the standard

599
00:31:27,990 --> 00:31:32,660
RFC cycle I think this is important and

600
00:31:31,050 --> 00:31:34,980
probably what Frank was just saying

601
00:31:32,660 --> 00:31:36,810
although I there may be some

602
00:31:34,980 --> 00:31:38,580
disagreement just extent that I Anna

603
00:31:36,810 --> 00:31:40,409
will actually be updating the modules

604
00:31:38,580 --> 00:31:42,480
outside the but we need to figure that

605
00:31:40,410 --> 00:31:44,040
out but that would be the intent is to

606
00:31:42,480 --> 00:31:47,420
allow them to be able to make those

607
00:31:44,040 --> 00:31:50,220
updates so as and when any security area

608
00:31:47,420 --> 00:31:52,460
group defines an extension a new

609
00:31:50,220 --> 00:31:55,020
protocol a new addition to registry

610
00:31:52,460 --> 00:31:58,220
automatically the yang module would be

611
00:31:55,020 --> 00:32:00,840
updated and published by Anna not us

612
00:31:58,220 --> 00:32:02,820
secondly breaking it up into many

613
00:32:00,840 --> 00:32:05,760
modules enables each to have a better

614
00:32:02,820 --> 00:32:07,290
focus you know as a so it's unclear to

615
00:32:05,760 --> 00:32:09,240
me actually how important this

616
00:32:07,290 --> 00:32:10,790
particular point might be but it does

617
00:32:09,240 --> 00:32:12,810
seem like it would be favorable to

618
00:32:10,790 --> 00:32:16,260
especially Anna if they were being asked

619
00:32:12,810 --> 00:32:18,690
to maintain them yes question Wilson

620
00:32:16,260 --> 00:32:20,040
Cisco what why would you spit it in many

621
00:32:18,690 --> 00:32:21,540
I Anna module something missing that

622
00:32:20,040 --> 00:32:23,250
step as to why it goes from one to many

623
00:32:21,540 --> 00:32:25,230
ok the many though it's the second

624
00:32:23,250 --> 00:32:28,170
bullet point so again as unclear to me

625
00:32:25,230 --> 00:32:30,150
how important it may be but it to myself

626
00:32:28,170 --> 00:32:32,430
like well like programmatically it

627
00:32:30,150 --> 00:32:34,440
doesn't matter but from a maintenance

628
00:32:32,430 --> 00:32:35,970
perspective especially for asking Anna

629
00:32:34,440 --> 00:32:38,340
to do the maintenance it could be

630
00:32:35,970 --> 00:32:40,470
helpful to them that then it's been

631
00:32:38,340 --> 00:32:42,090
broken up too many modules and

632
00:32:40,470 --> 00:32:43,830
either case it'd still be one draft like

633
00:32:42,090 --> 00:32:45,480
so this draft the crypto type draft

634
00:32:43,830 --> 00:32:47,699
would continue to be the draft that

635
00:32:45,480 --> 00:32:48,900
would you know create all these month if

636
00:32:47,700 --> 00:32:50,850
there were many modules it'd still be

637
00:32:48,900 --> 00:32:53,570
one draft that designed all the modules

638
00:32:50,850 --> 00:32:56,490
and assigns though them to the IANA

639
00:32:53,570 --> 00:32:58,049
those modules are they are they

640
00:32:56,490 --> 00:33:00,450
representing what the different security

641
00:32:58,049 --> 00:33:02,549
working groups are producing what's the

642
00:33:00,450 --> 00:33:05,159
exact quantity yes it'll be for instance

643
00:33:02,549 --> 00:33:07,260
a module that be for symmetric key

644
00:33:05,159 --> 00:33:08,789
algorithms another module for asymmetric

645
00:33:07,260 --> 00:33:11,010
key algorithms another module for

646
00:33:08,789 --> 00:33:13,220
hashing algorithms if it makes sense to

647
00:33:11,010 --> 00:33:19,289
do this it you know to break up that way

648
00:33:13,220 --> 00:33:20,580
okay all right so again so we would

649
00:33:19,289 --> 00:33:22,080
continue using this trap okay so the

650
00:33:20,580 --> 00:33:23,460
fallback strategy this is you know in

651
00:33:22,080 --> 00:33:26,399
case we don't stay the course and we

652
00:33:23,460 --> 00:33:27,570
wish to simplify the and I did post this

653
00:33:26,400 --> 00:33:29,760
to the mailing list there was no

654
00:33:27,570 --> 00:33:31,918
response um but so here we are going to

655
00:33:29,760 --> 00:33:34,200
go over it the general idea is to admit

656
00:33:31,919 --> 00:33:36,840
that TLS is the transport layer for most

657
00:33:34,200 --> 00:33:40,440
protocols right I mean in reality like

658
00:33:36,840 --> 00:33:42,780
on the network and imagine us you know

659
00:33:40,440 --> 00:33:46,350
outlining ourselves to a more TLS

660
00:33:42,780 --> 00:33:48,990
oriented solution a TLS protocol is

661
00:33:46,350 --> 00:33:52,469
heavily defined using asn.1 structures

662
00:33:48,990 --> 00:33:55,110
right if you look to RFC 5280 you'll see

663
00:33:52,470 --> 00:33:57,240
nothing but a ascend one in there which

664
00:33:55,110 --> 00:34:00,000
is how you then wind up with things like

665
00:33:57,240 --> 00:34:02,039
pin which will not pin but during coding

666
00:34:00,000 --> 00:34:04,530
and burr and coding you know in

667
00:34:02,039 --> 00:34:07,530
particular or even pin

668
00:34:04,530 --> 00:34:11,790
they're all effectively encodings of

669
00:34:07,530 --> 00:34:15,029
asn.1 structures already crypto types

670
00:34:11,790 --> 00:34:17,668
draft defines many a and ASN ones types

671
00:34:15,030 --> 00:34:20,010
so there are types for in particular CMS

672
00:34:17,668 --> 00:34:23,520
structures so sign data encrypted data

673
00:34:20,010 --> 00:34:26,460
and just plain seamless there's actually

674
00:34:23,520 --> 00:34:28,440
six or seven CMS types that are defined

675
00:34:26,460 --> 00:34:31,440
there three of them I think are used

676
00:34:28,440 --> 00:34:33,030
directly by these zero-touch draft and

677
00:34:31,440 --> 00:34:34,950
of course having them you know in the

678
00:34:33,030 --> 00:34:37,200
crypto types track so actually zero I

679
00:34:34,949 --> 00:34:40,199
should say zero touch copy-pasted it's

680
00:34:37,199 --> 00:34:41,428
the same tax dues but to get the zero

681
00:34:40,199 --> 00:34:43,020
touched out the door didn't actually

682
00:34:41,429 --> 00:34:45,690
have a normative reference to crypto

683
00:34:43,020 --> 00:34:48,270
types it's just so anyway it's an same

684
00:34:45,690 --> 00:34:51,270
idea it would be valuable for the crypto

685
00:34:48,270 --> 00:34:54,310
types draft to have those asn.1 types to

686
00:34:51,270 --> 00:34:58,710
find in it so why not add one more a

687
00:34:54,310 --> 00:34:59,890
that one type to it in in particular RC

688
00:34:58,710 --> 00:35:02,740
59-58

689
00:34:59,890 --> 00:35:05,470
defines what they call one a symmetric

690
00:35:02,740 --> 00:35:08,020
key it's a strange name I know but the

691
00:35:05,470 --> 00:35:10,330
title of that draft is asymmetric key

692
00:35:08,020 --> 00:35:11,740
packages and if you look there at the

693
00:35:10,330 --> 00:35:14,350
ASN dot one at the bottom of the screen

694
00:35:11,740 --> 00:35:16,149
you'll notice that it has private key

695
00:35:14,350 --> 00:35:21,060
algorithm private key algorithm

696
00:35:16,150 --> 00:35:24,970
identifier right and so already they've

697
00:35:21,060 --> 00:35:25,900
somehow solved the problem of the

698
00:35:24,970 --> 00:35:28,209
roulette you know all the different

699
00:35:25,900 --> 00:35:31,750
identifiers z' that can be used and how

700
00:35:28,210 --> 00:35:36,100
to refer to them when encoding a s and

701
00:35:31,750 --> 00:35:38,650
that one dot structures so exactly

702
00:35:36,100 --> 00:35:40,180
notice this private key identifier if

703
00:35:38,650 --> 00:35:42,490
you dig a little bit deeper you'll see

704
00:35:40,180 --> 00:35:44,319
private key identifier is an algorithm

705
00:35:42,490 --> 00:35:46,270
identifier and if you dig into that

706
00:35:44,320 --> 00:35:48,040
you'll see that this algorithm is

707
00:35:46,270 --> 00:35:50,230
identified by an object you know an ID

708
00:35:48,040 --> 00:35:53,020
and then you try to figure out what that

709
00:35:50,230 --> 00:35:55,000
is and you don't quite I think that

710
00:35:53,020 --> 00:35:56,740
ultimately maps to an Dianna registry I

711
00:35:55,000 --> 00:35:58,840
tried to find it I couldn't find it so I

712
00:35:56,740 --> 00:36:01,089
kind of bottomed out at that point but

713
00:35:58,840 --> 00:36:03,010
you get the idea they've tried to solve

714
00:36:01,090 --> 00:36:05,110
they they have solved right because it's

715
00:36:03,010 --> 00:36:10,360
running code we just need to figure out

716
00:36:05,110 --> 00:36:12,880
how it's being done so but then what is

717
00:36:10,360 --> 00:36:14,680
an open SSL private key and and you know

718
00:36:12,880 --> 00:36:17,020
I kind of is I think some of you know

719
00:36:14,680 --> 00:36:20,080
I've written two lists I'm in the

720
00:36:17,020 --> 00:36:24,100
process of it creating a restaurant

721
00:36:20,080 --> 00:36:26,500
server and it does implement this it

722
00:36:24,100 --> 00:36:29,170
does use IETF restaurant server which

723
00:36:26,500 --> 00:36:30,600
means the entire hierarchy and down to

724
00:36:29,170 --> 00:36:33,430
key store and trust store and all this

725
00:36:30,600 --> 00:36:35,049
and I'm trying to write code and the

726
00:36:33,430 --> 00:36:37,299
simplest thing for me to do is use open

727
00:36:35,050 --> 00:36:39,730
SSL you can see the first command there

728
00:36:37,300 --> 00:36:42,490
ec pram I want to generate a private key

729
00:36:39,730 --> 00:36:44,530
and then from that I want to you know

730
00:36:42,490 --> 00:36:46,930
generate the public key I'm basically

731
00:36:44,530 --> 00:36:49,360
executing open SSL command line you know

732
00:36:46,930 --> 00:36:50,740
utility command line commands so you

733
00:36:49,360 --> 00:36:52,390
create these things for it for me and

734
00:36:50,740 --> 00:36:53,919
then of course I create this certificate

735
00:36:52,390 --> 00:36:56,049
signing request and sign a certificate

736
00:36:53,920 --> 00:36:57,250
and all that goes into trust store but

737
00:36:56,050 --> 00:36:59,290
what am i doing what am i putting the

738
00:36:57,250 --> 00:37:01,450
key store right so currently we don't

739
00:36:59,290 --> 00:37:02,800
have a well-defined solution and I'm

740
00:37:01,450 --> 00:37:05,129
kind of just getting something to work

741
00:37:02,800 --> 00:37:07,900
and so I hack it and I just basically

742
00:37:05,130 --> 00:37:09,730
put the basics before encoded whatever

743
00:37:07,900 --> 00:37:12,039
openness sellout putted and that I've

744
00:37:09,730 --> 00:37:15,039
stuck into the key sort I'm a lazy

745
00:37:12,039 --> 00:37:17,019
programmer this is easy everyone will

746
00:37:15,039 --> 00:37:19,420
probably be wanting to do this also it's

747
00:37:17,019 --> 00:37:20,799
very simple so you know that's the

748
00:37:19,420 --> 00:37:23,619
question so what is this thing that

749
00:37:20,799 --> 00:37:26,140
opener cell is outputting is it and one

750
00:37:23,619 --> 00:37:28,450
asymmetric key I you know I tried to get

751
00:37:26,140 --> 00:37:30,160
a better parsing you know that's the

752
00:37:28,450 --> 00:37:32,259
that's what open SSL gave me but I can't

753
00:37:30,160 --> 00:37:35,129
quite see if that's an a.1 asymmetric

754
00:37:32,259 --> 00:37:38,319
key it doesn't print out the oit's so

755
00:37:35,130 --> 00:37:39,819
that were regardless whatever open SSL

756
00:37:38,319 --> 00:37:42,160
is using would be convenient for us to

757
00:37:39,819 --> 00:37:43,869
adopt even if it's not the one

758
00:37:42,160 --> 00:37:45,519
asymmetric keys so here's something or

759
00:37:43,869 --> 00:37:49,930
or find a simple way to convert between

760
00:37:45,519 --> 00:37:51,249
the two it's what we need to do okay so

761
00:37:49,930 --> 00:37:53,049
that's the end of that discussion but

762
00:37:51,249 --> 00:37:54,640
somehow I feel are there any questions

763
00:37:53,049 --> 00:37:56,829
did anybody have any questions about

764
00:37:54,640 --> 00:37:58,299
this I guess maybe I've kind of skimmed

765
00:37:56,829 --> 00:38:01,809
over the fact we're no one raised her

766
00:37:58,299 --> 00:38:03,220
hand what do you mean we're only gonna

767
00:38:01,809 --> 00:38:06,039
support TLS

768
00:38:03,220 --> 00:38:08,169
what about SSH SSH is important right I

769
00:38:06,039 --> 00:38:09,519
mean neck has a mandatory transfer

770
00:38:08,170 --> 00:38:11,470
somebody was gonna ask that question

771
00:38:09,519 --> 00:38:13,930
right I can see people not in their

772
00:38:11,470 --> 00:38:15,939
heads yes SSH is important

773
00:38:13,930 --> 00:38:18,220
I don't okay so I don't know exactly

774
00:38:15,940 --> 00:38:19,769
what we would do for you know what

775
00:38:18,220 --> 00:38:26,589
course would want to support it but um

776
00:38:19,769 --> 00:38:27,819
maybe the SSH client server draft well

777
00:38:26,589 --> 00:38:30,009
we'll just have to figure it out I mean

778
00:38:27,819 --> 00:38:31,569
I'm sure there's a way of getting to it

779
00:38:30,009 --> 00:38:33,579
it may be so choice and then inside the

780
00:38:31,569 --> 00:38:36,038
choice it's it's what one asymmetric key

781
00:38:33,579 --> 00:38:37,269
is the one option with a choice and the

782
00:38:36,039 --> 00:38:39,430
other option is Joyce is something we

783
00:38:37,269 --> 00:38:40,930
make up it's very SSH oriented and

784
00:38:39,430 --> 00:38:43,180
support SSH

785
00:38:40,930 --> 00:38:46,328
so we'd find a way to to an you know

786
00:38:43,180 --> 00:38:47,558
carry forward ssh support but primarily

787
00:38:46,329 --> 00:38:51,880
the intent would be that we were

788
00:38:47,559 --> 00:38:53,559
focusing on tell us that make sense okay

789
00:38:51,880 --> 00:38:58,539
that's the end of discussion one no more

790
00:38:53,559 --> 00:39:00,579
questions thank you alright so the

791
00:38:58,539 --> 00:39:03,099
second discussion was regarded we are

792
00:39:00,579 --> 00:39:05,079
grouting the keystore draft and in

793
00:39:03,099 --> 00:39:07,269
particular it is long discussion I'm

794
00:39:05,079 --> 00:39:10,119
sure everyone was privy to between

795
00:39:07,269 --> 00:39:14,319
Martin and others on device generated

796
00:39:10,119 --> 00:39:16,599
keys and the hidden keys so to be clear

797
00:39:14,319 --> 00:39:18,940
with key store the goal is to enable

798
00:39:16,599 --> 00:39:21,370
manufacturers to ship devices with I

799
00:39:18,940 --> 00:39:25,060
divided II certificates

800
00:39:21,370 --> 00:39:27,549
or any you know cryptographically secure

801
00:39:25,060 --> 00:39:30,940
identifying certificate I divided II is

802
00:39:27,550 --> 00:39:33,850
just a particular one but any this

803
00:39:30,940 --> 00:39:36,670
implies that the associated private keys

804
00:39:33,850 --> 00:39:39,430
are hidden because if you're shipping a

805
00:39:36,670 --> 00:39:41,250
device with a forever certificate you

806
00:39:39,430 --> 00:39:43,930
need that private key to be forever and

807
00:39:41,250 --> 00:39:47,640
you know if it were ever exposed to be

808
00:39:43,930 --> 00:39:50,020
not it'd be disastrous effectively so

809
00:39:47,640 --> 00:39:51,250
store you know generating and storing

810
00:39:50,020 --> 00:39:53,500
protecting those keys inside

811
00:39:51,250 --> 00:39:55,540
cryptographic Hardware like a TPM would

812
00:39:53,500 --> 00:39:57,430
effectively become mandatory for

813
00:39:55,540 --> 00:40:01,660
companies who wanted to ship their

814
00:39:57,430 --> 00:40:03,430
devices with out of 80 certificates so

815
00:40:01,660 --> 00:40:06,879
that's one goal so having this ability

816
00:40:03,430 --> 00:40:09,339
to support devices ship for

817
00:40:06,880 --> 00:40:11,200
manufacturing with key stores that have

818
00:40:09,340 --> 00:40:15,340
values in the operational data store

819
00:40:11,200 --> 00:40:19,770
that contain private key and associated

820
00:40:15,340 --> 00:40:22,090
certificate for Ida bit easier tickets

821
00:40:19,770 --> 00:40:24,100
secondly is to enable devices to

822
00:40:22,090 --> 00:40:26,620
generate keys again this is a best

823
00:40:24,100 --> 00:40:28,750
practice generally you don't want I mean

824
00:40:26,620 --> 00:40:30,730
many people do create private keys and

825
00:40:28,750 --> 00:40:32,560
then upload them to a device but best

826
00:40:30,730 --> 00:40:35,490
practice is you ask the device create

827
00:40:32,560 --> 00:40:38,590
the private key for you and and hence

828
00:40:35,490 --> 00:40:40,810
the private key itself never left left

829
00:40:38,590 --> 00:40:43,180
the device it's not it's not on your

830
00:40:40,810 --> 00:40:45,700
file system it's not in your memory it's

831
00:40:43,180 --> 00:40:47,759
nowhere for a hacker to get to it unless

832
00:40:45,700 --> 00:40:50,319
of course they go to the device itself

833
00:40:47,760 --> 00:40:55,510
three is to enable clients to install

834
00:40:50,320 --> 00:40:56,920
subsequently hidden keys so even though

835
00:40:55,510 --> 00:40:58,870
you want the device engine right keys

836
00:40:56,920 --> 00:41:01,240
sometimes it has to be the case you

837
00:40:58,870 --> 00:41:02,740
generate keys outside but once you load

838
00:41:01,240 --> 00:41:05,049
them onto the device you want them to be

839
00:41:02,740 --> 00:41:07,419
treated as effectively hidden protected

840
00:41:05,050 --> 00:41:11,040
so that they can never be discovered or

841
00:41:07,420 --> 00:41:13,690
figured out from that point forward and

842
00:41:11,040 --> 00:41:15,850
you know some people might claim you can

843
00:41:13,690 --> 00:41:18,760
use NAC em for this you know just you

844
00:41:15,850 --> 00:41:21,790
know have a habits that only the root

845
00:41:18,760 --> 00:41:25,240
user the restore session user can can

846
00:41:21,790 --> 00:41:27,190
access that key but even then it's not

847
00:41:25,240 --> 00:41:29,319
quite what's being asked for here when

848
00:41:27,190 --> 00:41:32,980
they when people ask for these forever

849
00:41:29,320 --> 00:41:34,690
hidden keys for is to support standard

850
00:41:32,980 --> 00:41:37,030
backup and restore interactions

851
00:41:34,690 --> 00:41:39,369
so to the greatest extent possible we

852
00:41:37,030 --> 00:41:42,190
want keys that are being created or

853
00:41:39,369 --> 00:41:44,470
loaded or hidden or whatever to be part

854
00:41:42,190 --> 00:41:47,410
of config we want it to be a case that

855
00:41:44,470 --> 00:41:49,899
you can do copy config get your

856
00:41:47,410 --> 00:41:52,569
configuration and then if you need an

857
00:41:49,900 --> 00:41:54,970
RMA a device you can do a another copy

858
00:41:52,569 --> 00:41:57,730
config or edit config and put it onto

859
00:41:54,970 --> 00:42:00,129
the new device and it's there so there's

860
00:41:57,730 --> 00:42:02,109
you know so we want to support standard

861
00:42:00,130 --> 00:42:04,530
backup and restore interactions the

862
00:42:02,109 --> 00:42:08,619
implicit statement here is that these

863
00:42:04,530 --> 00:42:09,880
hidden keys can't be they need to be in

864
00:42:08,619 --> 00:42:11,920
config even though they're hidden they

865
00:42:09,880 --> 00:42:13,150
need to be in config and and the sort of

866
00:42:11,920 --> 00:42:15,010
the punchline here is that need to be

867
00:42:13,150 --> 00:42:16,480
encrypted so they're in config but

868
00:42:15,010 --> 00:42:16,839
they're encrypted so that's what we're

869
00:42:16,480 --> 00:42:20,079
getting to

870
00:42:16,839 --> 00:42:23,290
and then v don't have keys and running

871
00:42:20,079 --> 00:42:24,970
with values only and operational so this

872
00:42:23,290 --> 00:42:27,700
is say some people are talking about if

873
00:42:24,970 --> 00:42:29,078
you have a value a key that's in

874
00:42:27,700 --> 00:42:31,990
operational but you want to use it in

875
00:42:29,079 --> 00:42:34,450
configuration just create a proxy in

876
00:42:31,990 --> 00:42:36,490
configuration that has the name for

877
00:42:34,450 --> 00:42:39,040
instance I handled to it but the rest of

878
00:42:36,490 --> 00:42:42,069
it is missing this is kind of

879
00:42:39,040 --> 00:42:44,200
problematic from the gangue module

880
00:42:42,069 --> 00:42:46,810
design perspective because it you know

881
00:42:44,200 --> 00:42:48,609
whether or not that the key values are

882
00:42:46,810 --> 00:42:51,339
mandatory true versus and mandatory

883
00:42:48,609 --> 00:42:53,500
false it's there's lots of great

884
00:42:51,339 --> 00:42:56,290
properties that you get if the values

885
00:42:53,500 --> 00:42:57,430
are always mandatory true okay so

886
00:42:56,290 --> 00:43:00,339
several strategies have been tried

887
00:42:57,430 --> 00:43:03,368
you've probably noticed that you know we

888
00:43:00,339 --> 00:43:06,940
published the full suite of clients who

889
00:43:03,369 --> 00:43:10,990
are drafts three times since ITIF the

890
00:43:06,940 --> 00:43:12,430
last IDF first we tried having action

891
00:43:10,990 --> 00:43:14,979
statements that created values and

892
00:43:12,430 --> 00:43:17,348
operational which had you know benefits

893
00:43:14,980 --> 00:43:20,290
of generally following the rule about

894
00:43:17,349 --> 00:43:22,270
how actions you know create values or

895
00:43:20,290 --> 00:43:24,819
are executing the context of operational

896
00:43:22,270 --> 00:43:26,050
data store but the cons were that you

897
00:43:24,819 --> 00:43:28,569
needed to copy the values into running

898
00:43:26,050 --> 00:43:32,319
in a way that was really complicated and

899
00:43:28,569 --> 00:43:34,779
we it never was really nice user

900
00:43:32,319 --> 00:43:36,790
friendly then we switched to an approach

901
00:43:34,780 --> 00:43:39,930
where we were trying to encode trips

902
00:43:36,790 --> 00:43:42,579
hash like values into the configuration

903
00:43:39,930 --> 00:43:44,649
this had the benefit of all the values

904
00:43:42,579 --> 00:43:47,140
for in running but the downside is that

905
00:43:44,650 --> 00:43:48,490
then we were encoding verbs into the

906
00:43:47,140 --> 00:43:51,660
values so the

907
00:43:48,490 --> 00:43:53,259
values themselves encoded like a verb

908
00:43:51,660 --> 00:43:55,359
requesting the device to actually

909
00:43:53,260 --> 00:43:58,990
generate the key which was considered

910
00:43:55,360 --> 00:44:00,490
unacceptable and then lastly we went

911
00:43:58,990 --> 00:44:03,430
with this I'm calling disconnected our

912
00:44:00,490 --> 00:44:05,770
PCs but I only mean to say that they

913
00:44:03,430 --> 00:44:07,750
have no data store effect like the

914
00:44:05,770 --> 00:44:11,860
execute the RPC it returns an output

915
00:44:07,750 --> 00:44:13,330
value but it itself has no effect on any

916
00:44:11,860 --> 00:44:16,930
data stored not operational and not

917
00:44:13,330 --> 00:44:19,150
config nothing instead the client that

918
00:44:16,930 --> 00:44:21,819
receives the output needs to round-trip

919
00:44:19,150 --> 00:44:24,550
and return back to the device the

920
00:44:21,820 --> 00:44:26,800
generated key to wherever it wanted that

921
00:44:24,550 --> 00:44:29,380
key to be located so Pro is that it

922
00:44:26,800 --> 00:44:31,090
satisfies all the use cases it seems and

923
00:44:29,380 --> 00:44:33,250
especially wouldn't you include the fact

924
00:44:31,090 --> 00:44:35,260
that the output can be encrypted that's

925
00:44:33,250 --> 00:44:37,060
the main thing but the con is that

926
00:44:35,260 --> 00:44:38,800
round-trip I just mentioned nonetheless

927
00:44:37,060 --> 00:44:40,930
number three appears to have traction

928
00:44:38,800 --> 00:44:45,610
and I just want to go into that just a

929
00:44:40,930 --> 00:44:48,850
bit more just so it's clear so in crypto

930
00:44:45,610 --> 00:44:50,710
types we have grouping so again this is

931
00:44:48,850 --> 00:44:52,118
a crypto types the the previous draft we

932
00:44:50,710 --> 00:44:54,160
were talking about we have two groupings

933
00:44:52,119 --> 00:44:56,320
symmetric key and asymmetric key and

934
00:44:54,160 --> 00:44:59,770
notice that there's a choice key type

935
00:44:56,320 --> 00:45:01,660
and it has two two Leafs one is just

936
00:44:59,770 --> 00:45:03,910
simply key binary that B or your

937
00:45:01,660 --> 00:45:06,160
ciphertext I sorry your your clear text

938
00:45:03,910 --> 00:45:08,920
key so the actual key values themselves

939
00:45:06,160 --> 00:45:12,580
are at raw and visible and then there's

940
00:45:08,920 --> 00:45:17,130
another type hidden key which is of type

941
00:45:12,580 --> 00:45:21,279
empty and so it's just an empty value

942
00:45:17,130 --> 00:45:23,050
and then now in key store draft we have

943
00:45:21,280 --> 00:45:25,480
some groupings so we start with on the

944
00:45:23,050 --> 00:45:27,190
left hand side key reference type

945
00:45:25,480 --> 00:45:28,660
grouping which is you know we have this

946
00:45:27,190 --> 00:45:30,609
choice of two different kinds of T type

947
00:45:28,660 --> 00:45:31,810
key types is that are you referring are

948
00:45:30,609 --> 00:45:32,500
you referencing a symmetric key or a

949
00:45:31,810 --> 00:45:36,070
nice symmetric key

950
00:45:32,500 --> 00:45:40,150
we have encrypted value grouping so here

951
00:45:36,070 --> 00:45:42,250
we were using the previous grouping but

952
00:45:40,150 --> 00:45:46,750
now we're adding to it that there's a

953
00:45:42,250 --> 00:45:49,859
value that's a binary value and then we

954
00:45:46,750 --> 00:45:52,000
have symmetric key grouping which is

955
00:45:49,859 --> 00:45:53,590
using that grouping from crypto types

956
00:45:52,000 --> 00:45:57,220
the one that was on a previous slide and

957
00:45:53,590 --> 00:45:59,170
it's augmenting in a new kind of key key

958
00:45:57,220 --> 00:46:01,720
types of were before there's regular key

959
00:45:59,170 --> 00:46:02,020
and hidden key now there's new thing

960
00:46:01,720 --> 00:46:04,240
called

961
00:46:02,020 --> 00:46:05,800
encrypted key and encrypted key is

962
00:46:04,240 --> 00:46:08,470
something that's using that encrypted

963
00:46:05,800 --> 00:46:09,730
key value right so the key so what's

964
00:46:08,470 --> 00:46:11,910
happening is that there's there's a

965
00:46:09,730 --> 00:46:14,740
value so there's a binary string and

966
00:46:11,910 --> 00:46:18,069
there's a leaf that's referring to the

967
00:46:14,740 --> 00:46:19,569
other key that it was encrypted by and

968
00:46:18,070 --> 00:46:21,970
of course we do the same thing for a

969
00:46:19,570 --> 00:46:24,370
symmetric key store and then lastly

970
00:46:21,970 --> 00:46:25,750
there's to our pcs one for generating a

971
00:46:24,370 --> 00:46:27,670
symmetric and asymmetric key they're

972
00:46:25,750 --> 00:46:29,980
identical except for you know basic

973
00:46:27,670 --> 00:46:32,890
names in the input you can pass

974
00:46:29,980 --> 00:46:35,710
optionally in encrypted with parameter

975
00:46:32,890 --> 00:46:37,839
so you can ask the device yes generate a

976
00:46:35,710 --> 00:46:40,210
key for me with you know said algorithm

977
00:46:37,840 --> 00:46:40,480
properties and but when you return it to

978
00:46:40,210 --> 00:46:42,850
me

979
00:46:40,480 --> 00:46:44,500
encrypt the output value using this

980
00:46:42,850 --> 00:46:47,440
other key that's already in the key

981
00:46:44,500 --> 00:46:50,890
store and I'm referring to it and then

982
00:46:47,440 --> 00:46:53,650
you get back an encrypted key from the

983
00:46:50,890 --> 00:46:55,629
actual data model perspective you can

984
00:46:53,650 --> 00:46:56,770
see I'll just go through one of these

985
00:46:55,630 --> 00:46:59,410
but they're effectively the same

986
00:46:56,770 --> 00:47:01,570
asymmetric keys and now you can see

987
00:46:59,410 --> 00:47:03,339
there's the the private key and there's

988
00:47:01,570 --> 00:47:04,930
these three types the private key hidden

989
00:47:03,340 --> 00:47:07,570
private key and encrypted private key

990
00:47:04,930 --> 00:47:09,759
right and then underneath encrypted

991
00:47:07,570 --> 00:47:11,500
private key there's that leaf ref to

992
00:47:09,760 --> 00:47:14,020
another value in the key store and of

993
00:47:11,500 --> 00:47:16,690
course the the ciphertext value of the

994
00:47:14,020 --> 00:47:19,270
encrypted key so how does this work an

995
00:47:16,690 --> 00:47:21,550
example so you start you know at the top

996
00:47:19,270 --> 00:47:23,440
we have TPM protected keys so this would

997
00:47:21,550 --> 00:47:25,360
be a key if you look on the left hand

998
00:47:23,440 --> 00:47:28,440
side a special key shipped with the

999
00:47:25,360 --> 00:47:30,820
device used to encrypt the operators key

1000
00:47:28,440 --> 00:47:32,710
so let's jump to the bottom we have a

1001
00:47:30,820 --> 00:47:34,660
symmetric key which is the operators

1002
00:47:32,710 --> 00:47:36,670
encrypted key so this would be a special

1003
00:47:34,660 --> 00:47:38,589
key used to encrypt all other keys

1004
00:47:36,670 --> 00:47:41,260
installed by the operators crypto

1005
00:47:38,590 --> 00:47:43,330
officer right so every operator might

1006
00:47:41,260 --> 00:47:46,540
have a secret symmetric key that only

1007
00:47:43,330 --> 00:47:48,520
its crypto officer knows and at any time

1008
00:47:46,540 --> 00:47:51,730
they want to bring up a new device they

1009
00:47:48,520 --> 00:47:53,920
encrypt that symmetric key using the

1010
00:47:51,730 --> 00:47:56,890
device specifics a symmetric key the one

1011
00:47:53,920 --> 00:47:58,480
sword in the TPM and then lastly in the

1012
00:47:56,890 --> 00:48:00,129
middle there you have a generic key

1013
00:47:58,480 --> 00:48:02,890
which could be you know any key that

1014
00:48:00,130 --> 00:48:05,520
might be used by TLS or SSH for your you

1015
00:48:02,890 --> 00:48:05,520
know any other

1016
00:48:06,320 --> 00:48:11,330
that key has then been encrypted by the

1017
00:48:08,150 --> 00:48:14,090
operators key so this satisfies the

1018
00:48:11,330 --> 00:48:15,950
goals that we showed before enabling

1019
00:48:14,090 --> 00:48:17,420
manufacturers to ship devices with it

1020
00:48:15,950 --> 00:48:19,640
was their certificates so now we have

1021
00:48:17,420 --> 00:48:21,830
both of those they're in operational of

1022
00:48:19,640 --> 00:48:24,020
but also they could be in factory

1023
00:48:21,830 --> 00:48:25,970
default there's another draft and going

1024
00:48:24,020 --> 00:48:27,440
through net mod about a fact our new

1025
00:48:25,970 --> 00:48:28,490
factory default data stores so

1026
00:48:27,440 --> 00:48:30,260
absolutely

1027
00:48:28,490 --> 00:48:32,750
they could be in factory default as well

1028
00:48:30,260 --> 00:48:36,200
and the private key is being reported

1029
00:48:32,750 --> 00:48:38,480
with value hidden and empty type so this

1030
00:48:36,200 --> 00:48:41,000
satisfies that goal enable devices

1031
00:48:38,480 --> 00:48:42,830
generate keys so now we have this RPC to

1032
00:48:41,000 --> 00:48:44,500
generate the keys and the client can

1033
00:48:42,830 --> 00:48:47,090
decide whether not the key is encrypted

1034
00:48:44,500 --> 00:48:50,000
enabled clients to install subsequently

1035
00:48:47,090 --> 00:48:51,440
hidden keys so here the client can set

1036
00:48:50,000 --> 00:48:55,190
using for instance at a config in

1037
00:48:51,440 --> 00:48:57,860
encrypted key but so it's actually not

1038
00:48:55,190 --> 00:48:59,600
hidden I mean the use case the goal is

1039
00:48:57,860 --> 00:49:01,250
to that they're hidden it's not actually

1040
00:48:59,600 --> 00:49:04,069
hidden it's better than hidden it's

1041
00:49:01,250 --> 00:49:05,810
encrypted and it's in configuration so

1042
00:49:04,070 --> 00:49:07,460
still in configuration which means it

1043
00:49:05,810 --> 00:49:09,799
can support backup and restore

1044
00:49:07,460 --> 00:49:11,510
interactions which is number four so all

1045
00:49:09,800 --> 00:49:13,010
keys except for hidden keys the truly

1046
00:49:11,510 --> 00:49:14,750
hidden keys that want the ones that were

1047
00:49:13,010 --> 00:49:17,750
shipped for manufacturing are in fact

1048
00:49:14,750 --> 00:49:19,940
reported in configuration so you do get

1049
00:49:17,750 --> 00:49:22,280
config and you get them and of course

1050
00:49:19,940 --> 00:49:24,290
the RMA procedure can migrate the

1051
00:49:22,280 --> 00:49:27,380
operator wide key and then all the other

1052
00:49:24,290 --> 00:49:30,080
keys that were used in you know the 99

1053
00:49:27,380 --> 00:49:34,700
percent of the configuration are then

1054
00:49:30,080 --> 00:49:36,590
migrated to the new device and in five

1055
00:49:34,700 --> 00:49:38,930
we don't have keys and running with

1056
00:49:36,590 --> 00:49:41,240
values that are only an operational is

1057
00:49:38,930 --> 00:49:45,020
that awkward ATM that we have currently

1058
00:49:41,240 --> 00:49:46,640
all the keys are mandatory true and then

1059
00:49:45,020 --> 00:49:49,220
we do have an open issue related to that

1060
00:49:46,640 --> 00:49:52,460
though so we're reporting all key values

1061
00:49:49,220 --> 00:49:54,620
and factory default and running should

1062
00:49:52,460 --> 00:49:57,140
the algorithm or public he knows be

1063
00:49:54,620 --> 00:49:59,930
suppressed so this saves an open issue

1064
00:49:57,140 --> 00:50:03,650
because Martin I don't think is on the

1065
00:49:59,930 --> 00:50:05,210
on the online raised this continues to

1066
00:50:03,650 --> 00:50:07,660
raise this is a potential concern so

1067
00:50:05,210 --> 00:50:10,550
that's why I'm trying to address it I

1068
00:50:07,660 --> 00:50:12,560
personally I think that it's better for

1069
00:50:10,550 --> 00:50:14,600
those values to be there because the

1070
00:50:12,560 --> 00:50:16,490
pros are that the yang model is best

1071
00:50:14,600 --> 00:50:18,440
stating that all the fields are

1072
00:50:16,490 --> 00:50:19,609
mandatory true we tried the mandatory

1073
00:50:18,440 --> 00:50:22,249
fall approach

1074
00:50:19,609 --> 00:50:23,029
got really complicated and I didn't see

1075
00:50:22,249 --> 00:50:25,519
any value to it

1076
00:50:23,029 --> 00:50:27,829
furthermore there's no harm in reporting

1077
00:50:25,519 --> 00:50:30,499
these values the public key is public

1078
00:50:27,829 --> 00:50:34,339
it's okay if people see it you can

1079
00:50:30,499 --> 00:50:36,319
report it the cons is that the values

1080
00:50:34,339 --> 00:50:37,849
only have to be reported and operational

1081
00:50:36,319 --> 00:50:39,829
so it's unnecessary so I admit

1082
00:50:37,849 --> 00:50:42,739
technically speaking they don't have to

1083
00:50:39,829 --> 00:50:45,049
be reported so we're having something

1084
00:50:42,739 --> 00:50:47,359
more than necessary and then also con

1085
00:50:45,049 --> 00:50:50,509
Martin points out it seems like special

1086
00:50:47,359 --> 00:50:52,578
case handling that's true but I don't

1087
00:50:50,509 --> 00:50:55,190
think this is really an issue and the

1088
00:50:52,579 --> 00:50:55,969
reason why is because I actually think

1089
00:50:55,190 --> 00:50:59,119
this is something that needs to be

1090
00:50:55,969 --> 00:51:00,739
embraced so firstly number one it's

1091
00:50:59,119 --> 00:51:02,180
already the case the server has to

1092
00:51:00,739 --> 00:51:04,549
handle has to have you know quote

1093
00:51:02,180 --> 00:51:06,709
special handling for the hidden key type

1094
00:51:04,549 --> 00:51:08,359
so there really is no such thing as

1095
00:51:06,709 --> 00:51:11,390
hidden key there's actually a value a

1096
00:51:08,359 --> 00:51:13,308
real value and operational already the

1097
00:51:11,390 --> 00:51:16,690
devices have to have special handling to

1098
00:51:13,309 --> 00:51:19,309
understand this notion of a hidden key

1099
00:51:16,690 --> 00:51:21,109
so I don't actually you know in for

1100
00:51:19,309 --> 00:51:23,420
instance when you're doing an edit

1101
00:51:21,109 --> 00:51:25,489
config and there's a value of hidden key

1102
00:51:23,420 --> 00:51:27,410
the when the device is actually trying

1103
00:51:25,489 --> 00:51:29,449
to commit that config we're not actually

1104
00:51:27,410 --> 00:51:31,459
telling it to delete the algorithm in

1105
00:51:29,449 --> 00:51:33,019
public like if for if if the algorithm

1106
00:51:31,459 --> 00:51:34,129
public keys were missing and we're only

1107
00:51:33,019 --> 00:51:35,779
passing hidden key we're not actually

1108
00:51:34,130 --> 00:51:36,559
telling it delete the algorithm public

1109
00:51:35,779 --> 00:51:39,049
key can't do that

1110
00:51:36,559 --> 00:51:40,209
it'd be illegal so already there's

1111
00:51:39,049 --> 00:51:43,059
special keys handling that's going on

1112
00:51:40,209 --> 00:51:45,739
and so I think there's asking it to

1113
00:51:43,059 --> 00:51:47,269
don't actually modify so if we were to

1114
00:51:45,739 --> 00:51:49,039
pass the algorithm public key and

1115
00:51:47,269 --> 00:51:51,019
instead the special case handling is

1116
00:51:49,039 --> 00:51:53,269
don't actually modify in case the client

1117
00:51:51,019 --> 00:51:54,738
tried to change the values you know

1118
00:51:53,269 --> 00:51:56,029
don't actually try to change the values

1119
00:51:54,739 --> 00:51:57,859
that wouldn't make sense instead throw

1120
00:51:56,029 --> 00:52:00,049
an error I think it's it's just special

1121
00:51:57,859 --> 00:52:00,949
case handling of a different kind so I

1122
00:52:00,049 --> 00:52:03,769
don't see that as a bad thing

1123
00:52:00,949 --> 00:52:05,299
um and then number two I actually think

1124
00:52:03,769 --> 00:52:08,359
it'd be better to define an annotation

1125
00:52:05,299 --> 00:52:08,989
of some sort metadata that could be used

1126
00:52:08,359 --> 00:52:11,299
generically

1127
00:52:08,989 --> 00:52:14,680
to identify nodes that are effectively

1128
00:52:11,299 --> 00:52:17,660
read-only I think that you know such a

1129
00:52:14,680 --> 00:52:19,578
annotation could be used in many other

1130
00:52:17,660 --> 00:52:21,529
use cases outside of this use case and

1131
00:52:19,579 --> 00:52:24,949
in particular you think about scheme

1132
00:52:21,529 --> 00:52:26,869
amounts where you might have some data

1133
00:52:24,949 --> 00:52:29,709
that's that you know it's it's in the

1134
00:52:26,869 --> 00:52:31,970
host system but it's been shared to a

1135
00:52:29,709 --> 00:52:34,069
virtual system

1136
00:52:31,970 --> 00:52:36,020
effectively that data is read only in

1137
00:52:34,070 --> 00:52:38,240
the context of the virtual system so

1138
00:52:36,020 --> 00:52:39,380
when the the virtual system you know if

1139
00:52:38,240 --> 00:52:41,450
you do get configure in the virtual

1140
00:52:39,380 --> 00:52:42,860
system you get the value but you don't

1141
00:52:41,450 --> 00:52:44,649
there currently it's not flagged in a

1142
00:52:42,860 --> 00:52:47,180
way that indicates that that value is

1143
00:52:44,650 --> 00:52:49,280
effectively read only in the context of

1144
00:52:47,180 --> 00:52:52,640
the virtual system so you know something

1145
00:52:49,280 --> 00:52:55,760
like a an annotation that could flag

1146
00:52:52,640 --> 00:52:58,040
this algorithm and and public key and

1147
00:52:55,760 --> 00:52:59,750
you know even hidden key those three

1148
00:52:58,040 --> 00:53:01,820
values is basically being read-only

1149
00:52:59,750 --> 00:53:03,890
would be perfect for this use case

1150
00:53:01,820 --> 00:53:06,550
though we could embrace and extend this

1151
00:53:03,890 --> 00:53:10,069
idea to support that as well

1152
00:53:06,550 --> 00:53:12,890
opener she's continued RMA required a

1153
00:53:10,070 --> 00:53:15,710
special new step I spoke to this just a

1154
00:53:12,890 --> 00:53:17,690
moment ago but I go in just a level

1155
00:53:15,710 --> 00:53:18,800
deeper assuming operators follow what

1156
00:53:17,690 --> 00:53:20,660
would be effectively become best

1157
00:53:18,800 --> 00:53:22,820
practice which would be to create this

1158
00:53:20,660 --> 00:53:24,319
operator wide symmetric key that's

1159
00:53:22,820 --> 00:53:26,480
encrypted on each device using the

1160
00:53:24,320 --> 00:53:28,220
devices hidden key and subsequently used

1161
00:53:26,480 --> 00:53:30,230
to encrypt all the other keys that's the

1162
00:53:28,220 --> 00:53:32,089
best what we effectively be saying is

1163
00:53:30,230 --> 00:53:35,620
new best practice all operators should

1164
00:53:32,090 --> 00:53:38,930
try to follow that approach if possible

1165
00:53:35,620 --> 00:53:41,569
then the RMA process would change from

1166
00:53:38,930 --> 00:53:44,000
what you know currently is today load

1167
00:53:41,570 --> 00:53:45,890
the config from the old device and then

1168
00:53:44,000 --> 00:53:47,930
do whatever additional customizations

1169
00:53:45,890 --> 00:53:50,240
are necessary such as installing any

1170
00:53:47,930 --> 00:53:52,069
node lock licenses and it actually

1171
00:53:50,240 --> 00:53:53,359
probably that might be out of order you

1172
00:53:52,070 --> 00:53:54,860
might actually have to install a node

1173
00:53:53,360 --> 00:53:58,520
lock licenses before you try to load the

1174
00:53:54,860 --> 00:54:00,560
config on some devices so that will

1175
00:53:58,520 --> 00:54:04,280
change is a little bit to a new approach

1176
00:54:00,560 --> 00:54:07,759
which would be to manually install the

1177
00:54:04,280 --> 00:54:10,340
encrypted operator wide key on the new

1178
00:54:07,760 --> 00:54:11,990
device and then edit the config you know

1179
00:54:10,340 --> 00:54:13,880
from the old device so you did a get

1180
00:54:11,990 --> 00:54:15,979
config from the old device edit it just

1181
00:54:13,880 --> 00:54:18,710
a little bit to delete the upgrade or

1182
00:54:15,980 --> 00:54:21,560
wide key value that was there there in

1183
00:54:18,710 --> 00:54:23,680
the key store just delete it and then

1184
00:54:21,560 --> 00:54:26,029
save it and then let that be the

1185
00:54:23,680 --> 00:54:28,129
resulting file that you load onto the

1186
00:54:26,030 --> 00:54:30,080
new device um

1187
00:54:28,130 --> 00:54:32,090
that's number three loaded onto the new

1188
00:54:30,080 --> 00:54:33,710
device and then lastly do these

1189
00:54:32,090 --> 00:54:36,400
additional customizations such as

1190
00:54:33,710 --> 00:54:39,140
installing your node lock license keys I

1191
00:54:36,400 --> 00:54:42,470
think that's it for this discussion are

1192
00:54:39,140 --> 00:54:44,509
there any comments about this again this

1193
00:54:42,470 --> 00:54:45,680
key store draft I think we're at the end

1194
00:54:44,510 --> 00:54:50,900
of the tunnel

1195
00:54:45,680 --> 00:54:53,270
hopefully Robertson Cisco is it safe to

1196
00:54:50,900 --> 00:54:55,730
have a single operator wide

1197
00:54:53,270 --> 00:54:58,400
symmetric-key I mean is that good

1198
00:54:55,730 --> 00:55:01,369
security practice in the sense of if

1199
00:54:58,400 --> 00:55:04,490
that key gets compromised do you then

1200
00:55:01,369 --> 00:55:07,490
effectively compromise all the vices and

1201
00:55:04,490 --> 00:55:09,410
if so with these schemes to work if

1202
00:55:07,490 --> 00:55:11,450
rather having a single operator wide

1203
00:55:09,410 --> 00:55:14,210
symmetric key they were managing

1204
00:55:11,450 --> 00:55:17,210
separate keys for each device so when

1205
00:55:14,210 --> 00:55:17,930
you are a it you use what the kids

1206
00:55:17,210 --> 00:55:20,390
didn't find that

1207
00:55:17,930 --> 00:55:23,210
sure you're right it could be the case

1208
00:55:20,390 --> 00:55:25,490
that it's a per device symmetric key not

1209
00:55:23,210 --> 00:55:27,410
not operator wide you're right it could

1210
00:55:25,490 --> 00:55:28,609
be it just be more maintenance each

1211
00:55:27,410 --> 00:55:31,160
operator had to remember what was the

1212
00:55:28,609 --> 00:55:32,150
symmetric key I used before but yeah it

1213
00:55:31,160 --> 00:55:33,589
could be done so that's their choice

1214
00:55:32,150 --> 00:55:36,349
though that's that's their choice and

1215
00:55:33,589 --> 00:55:38,089
and again I mentioned crypto officer and

1216
00:55:36,349 --> 00:55:40,609
so again we kind of push it to them

1217
00:55:38,089 --> 00:55:42,950
push the problem to them one solution

1218
00:55:40,609 --> 00:55:45,859
would be a per device symmetric key

1219
00:55:42,950 --> 00:55:48,288
another solution would be to design some

1220
00:55:45,859 --> 00:55:50,869
code that the symmetric key itself has

1221
00:55:48,289 --> 00:55:54,440
being stored inside a TPM of some sort

1222
00:55:50,869 --> 00:55:56,690
and then they develop a client that

1223
00:55:54,440 --> 00:55:58,400
basically does a handshake transferring

1224
00:55:56,690 --> 00:56:00,380
this symmetric key to the new device in

1225
00:55:58,400 --> 00:56:03,079
a way that the crypto officer actually

1226
00:56:00,380 --> 00:56:05,059
never was in was never revealed to them

1227
00:56:03,079 --> 00:56:07,369
with what that symmetric key value was

1228
00:56:05,059 --> 00:56:09,230
so that's also possible okay so I think

1229
00:56:07,369 --> 00:56:10,880
I think having some security

1230
00:56:09,230 --> 00:56:12,289
considerations of this and speaking of

1231
00:56:10,880 --> 00:56:14,839
security people about whether this works

1232
00:56:12,289 --> 00:56:17,359
or not yeah one other question I have on

1233
00:56:14,839 --> 00:56:19,308
the bottom on you so you so you modify

1234
00:56:17,359 --> 00:56:27,200
the old device to remove the old

1235
00:56:19,309 --> 00:56:30,170
operator wide so okay so okay why it's

1236
00:56:27,200 --> 00:56:31,669
either okay it's either do that okay so

1237
00:56:30,170 --> 00:56:33,589
remember it's at first the first little

1238
00:56:31,670 --> 00:56:36,020
point is go to the new device and load a

1239
00:56:33,589 --> 00:56:37,578
new operator white key yeah the second

1240
00:56:36,020 --> 00:56:39,319
thing is if maybe this is out of order

1241
00:56:37,579 --> 00:56:40,940
right but the second thing I'm thinking

1242
00:56:39,319 --> 00:56:43,308
if you load that configuration from the

1243
00:56:40,940 --> 00:56:45,079
old device and it has a new definition

1244
00:56:43,309 --> 00:56:47,029
for an operator white key that would

1245
00:56:45,079 --> 00:56:49,460
overwrite the value that you just stored

1246
00:56:47,029 --> 00:56:51,230
so it you're kind of like avoiding that

1247
00:56:49,460 --> 00:56:53,150
overwrite so maybe just train to order

1248
00:56:51,230 --> 00:56:55,430
this load the old config and then

1249
00:56:53,150 --> 00:56:57,950
manually overwrite the old operator what

1250
00:56:55,430 --> 00:56:59,129
key oh yeah or another way expressing

1251
00:56:57,950 --> 00:57:01,109
this would be to say when

1252
00:56:59,130 --> 00:57:02,280
you write that hold configuration you

1253
00:57:01,110 --> 00:57:05,490
need to strip out

1254
00:57:02,280 --> 00:57:07,950
yeah the old device key or replace it

1255
00:57:05,490 --> 00:57:08,939
what even yes with a new one yeah

1256
00:57:07,950 --> 00:57:10,980
there's different ways of saying this

1257
00:57:08,940 --> 00:57:12,960
but but the the intention is actually

1258
00:57:10,980 --> 00:57:14,760
the same key it's the same symmetric key

1259
00:57:12,960 --> 00:57:16,380
is just encrypted with a different

1260
00:57:14,760 --> 00:57:17,700
public key cuz it's a different device

1261
00:57:16,380 --> 00:57:19,080
and you device a different so it's

1262
00:57:17,700 --> 00:57:20,549
actually the same symmetric key value

1263
00:57:19,080 --> 00:57:21,870
just encrypt it differently so the

1264
00:57:20,550 --> 00:57:25,800
config is slightly different different

1265
00:57:21,870 --> 00:57:27,450
for that reason excellent

1266
00:57:25,800 --> 00:57:31,230
any other questions about key store

1267
00:57:27,450 --> 00:57:35,549
draft I just want to know how these

1268
00:57:31,230 --> 00:57:39,390
symmetric keys used the symmetric key is

1269
00:57:35,550 --> 00:57:42,750
actually currently only being used for

1270
00:57:39,390 --> 00:57:48,330
this purpose of encrypting other keys in

1271
00:57:42,750 --> 00:57:50,850
fact like in this example the data model

1272
00:57:48,330 --> 00:57:52,650
up until the very last or most recent

1273
00:57:50,850 --> 00:57:54,569
version of the draft did not have this

1274
00:57:52,650 --> 00:57:57,180
symmetric key section there were no

1275
00:57:54,570 --> 00:57:59,820
symmetric keys being stored in the trust

1276
00:57:57,180 --> 00:58:02,879
or the reefs re in the key store the

1277
00:57:59,820 --> 00:58:06,000
reason being that it'd be foolish to

1278
00:58:02,880 --> 00:58:07,410
have the symmetric key value in the

1279
00:58:06,000 --> 00:58:09,150
configuration where anybody could see it

1280
00:58:07,410 --> 00:58:11,879
all all security properties would be

1281
00:58:09,150 --> 00:58:14,580
lost but now that we have the ability to

1282
00:58:11,880 --> 00:58:15,840
encrypt the symmetric key then it opens

1283
00:58:14,580 --> 00:58:18,720
up the possibility that the symmetric

1284
00:58:15,840 --> 00:58:20,850
key can be stored safely so that's one

1285
00:58:18,720 --> 00:58:23,189
and then two we can then use it to

1286
00:58:20,850 --> 00:58:24,960
encrypt all those other keys that are

1287
00:58:23,190 --> 00:58:26,790
being for instance used by Association

1288
00:58:24,960 --> 00:58:30,600
TLS etc so that's how it's really being

1289
00:58:26,790 --> 00:58:33,120
used currently but to Hanks previous

1290
00:58:30,600 --> 00:58:36,029
comment about extending the TLS support

1291
00:58:33,120 --> 00:58:39,270
and Trust door to also pre-shared keys

1292
00:58:36,030 --> 00:58:40,920
and rocky's I would like to have those

1293
00:58:39,270 --> 00:58:43,410
pre Securities and Rocky's be also

1294
00:58:40,920 --> 00:58:44,760
encrypted with the symmetric key so that

1295
00:58:43,410 --> 00:58:49,259
would be the other use that I'd be

1296
00:58:44,760 --> 00:58:53,190
thinking about question yes if you give

1297
00:58:49,260 --> 00:58:58,350
actually she's one so now for this one

1298
00:58:53,190 --> 00:58:59,370
one more and again again yeah again I'm

1299
00:58:58,350 --> 00:59:06,509
not sure which side you're looking for

1300
00:58:59,370 --> 00:59:09,960
the open issues okay open issues there

1301
00:59:06,510 --> 00:59:12,000
we go so I didn't get I think that your

1302
00:59:09,960 --> 00:59:12,440
your point took bottom the cons is it

1303
00:59:12,000 --> 00:59:15,680
might be

1304
00:59:12,440 --> 00:59:17,420
better to define annotation to mark this

1305
00:59:15,680 --> 00:59:20,240
configurations read-only the status

1306
00:59:17,420 --> 00:59:22,510
read-only so the factory default data

1307
00:59:20,240 --> 00:59:26,270
stores read-only by definition and

1308
00:59:22,510 --> 00:59:29,030
running is controlled by the client so I

1309
00:59:26,270 --> 00:59:31,810
didn't I didn't get that bit what you

1310
00:59:29,030 --> 00:59:31,810
mark is read-only

1311
00:59:31,930 --> 00:59:35,930
I'm sure words the question so the

1312
00:59:34,190 --> 00:59:37,790
annotation is you suggesting I have me

1313
00:59:35,930 --> 00:59:38,480
an annotation to mark something as

1314
00:59:37,790 --> 00:59:41,089
read-only

1315
00:59:38,480 --> 00:59:42,890
yes but factory default Plato is already

1316
00:59:41,089 --> 00:59:45,680
everything is read-only same is

1317
00:59:42,890 --> 00:59:48,230
operational right so what's your what's

1318
00:59:45,680 --> 00:59:50,598
the annotation annotating oh okay what's

1319
00:59:48,230 --> 00:59:52,520
what what's actually doing yes um okay

1320
00:59:50,599 --> 00:59:54,920
so remember factory default is kind of

1321
00:59:52,520 --> 00:59:56,869
like startup where it really is it's a

1322
00:59:54,920 --> 01:00:00,800
place where you copy and and you

1323
00:59:56,869 --> 01:00:03,440
initialize running right it's the first

1324
01:00:00,800 --> 01:00:05,510
running effectively so so it becomes

1325
01:00:03,440 --> 01:00:08,030
running and then you're doing a get

1326
01:00:05,510 --> 01:00:09,619
config on running and that's when it

1327
01:00:08,030 --> 01:00:11,270
would be helpful for there some people

1328
01:00:09,619 --> 01:00:12,680
to know that this is actually a

1329
01:00:11,270 --> 01:00:14,540
read-only value kind of like we need ooh

1330
01:00:12,680 --> 01:00:20,029
with defaults you're being told this is

1331
01:00:14,540 --> 01:00:24,440
actually a default value okay so on yeah

1332
01:00:20,030 --> 01:00:26,690
so you say effective you try it if you

1333
01:00:24,440 --> 01:00:28,970
had you try to write to one of those

1334
01:00:26,690 --> 01:00:31,369
values in running the device would

1335
01:00:28,970 --> 01:00:35,930
reject that's the intention

1336
01:00:31,369 --> 01:00:37,880
yes yeah I'm not sure I like that okay

1337
01:00:35,930 --> 01:00:40,399
yeah I mean so we can just basically

1338
01:00:37,880 --> 01:00:42,290
hard code it for this draft and not

1339
01:00:40,400 --> 01:00:43,250
create the annotation but I think

1340
01:00:42,290 --> 01:00:45,410
there's an opportunity to create an

1341
01:00:43,250 --> 01:00:47,810
annotation that could be extend be used

1342
01:00:45,410 --> 01:00:49,310
in other use cases as well so that's we

1343
01:00:47,810 --> 01:00:54,619
don't have to I'm just opening under so

1344
01:00:49,310 --> 01:00:57,078
possibility let's take an online so we

1345
01:00:54,619 --> 01:00:59,390
have a comment on jabber from hang

1346
01:00:57,079 --> 01:01:01,520
saison and yes

1347
01:00:59,390 --> 01:01:05,319
providing confidentiality to key

1348
01:01:01,520 --> 01:01:10,160
material should include all key material

1349
01:01:05,319 --> 01:01:12,200
okay well as Daniel Erickson this

1350
01:01:10,160 --> 01:01:15,348
annotation could be very useful for

1351
01:01:12,200 --> 01:01:17,598
server capabilities of times where you'd

1352
01:01:15,349 --> 01:01:19,400
need you can't change them because their

1353
01:01:17,599 --> 01:01:21,890
capability is really and what you want

1354
01:01:19,400 --> 01:01:25,360
to reference them for example in mast or

1355
01:01:21,890 --> 01:01:30,410
refresh statements

1356
01:01:25,360 --> 01:01:31,880
okay sure yeah but then I question

1357
01:01:30,410 --> 01:01:33,350
whether they're running configuration

1358
01:01:31,880 --> 01:01:35,450
I think capability so they still needs

1359
01:01:33,350 --> 01:01:37,700
to be solved but I'm not sure that's

1360
01:01:35,450 --> 01:01:39,560
configuration this is not coming from

1361
01:01:37,700 --> 01:01:41,569
the operates not all clients come from

1362
01:01:39,560 --> 01:01:44,029
the device well but I think what blush

1363
01:01:41,570 --> 01:01:46,250
the saying is like when I Torres first

1364
01:01:44,030 --> 01:01:48,290
said the topology drafts and the

1365
01:01:46,250 --> 01:01:50,240
topology was being discovered through

1366
01:01:48,290 --> 01:01:53,450
the data plane and populating

1367
01:01:50,240 --> 01:01:56,240
operational but then they wanted to have

1368
01:01:53,450 --> 01:01:58,040
configuration that would extend in parts

1369
01:01:56,240 --> 01:01:59,419
of what was just got part of the

1370
01:01:58,040 --> 01:02:00,470
topology that discovered they wanted to

1371
01:01:59,420 --> 01:02:02,090
have configuration so they wanted to

1372
01:02:00,470 --> 01:02:04,100
refer to them and the solution that

1373
01:02:02,090 --> 01:02:06,080
we've told them at the time was okay

1374
01:02:04,100 --> 01:02:08,690
we'll kind of copy those nodes from

1375
01:02:06,080 --> 01:02:11,420
operational and put them into running

1376
01:02:08,690 --> 01:02:13,670
and the intention is that when it got

1377
01:02:11,420 --> 01:02:14,720
stored that the device would know oh

1378
01:02:13,670 --> 01:02:15,740
this is something it's already and

1379
01:02:14,720 --> 01:02:18,470
running I don't need to create it again

1380
01:02:15,740 --> 01:02:20,990
but to balázs is point it be actually

1381
01:02:18,470 --> 01:02:22,459
helpful if they could be tagged as you

1382
01:02:20,990 --> 01:02:24,919
know and made it a little bit like with

1383
01:02:22,460 --> 01:02:25,880
words and I tagged as you know this is

1384
01:02:24,920 --> 01:02:27,440
actually a value that came from

1385
01:02:25,880 --> 01:02:33,560
operational or this is actually a value

1386
01:02:27,440 --> 01:02:35,270
this read-only exactly I don't care if

1387
01:02:33,560 --> 01:02:37,340
we called it running we're not running

1388
01:02:35,270 --> 01:02:39,980
it's a value that was discovered from

1389
01:02:37,340 --> 01:02:42,560
somewhere in capabilities cases probably

1390
01:02:39,980 --> 01:02:45,920
from the software itself and then I can

1391
01:02:42,560 --> 01:02:48,290
put that say must your configuration

1392
01:02:45,920 --> 01:02:50,960
must not it must use something that the

1393
01:02:48,290 --> 01:02:53,930
device is capable of currently you can't

1394
01:02:50,960 --> 01:02:55,910
put a must between operate or config

1395
01:02:53,930 --> 01:03:00,649
falls and coffee true this is the way

1396
01:02:55,910 --> 01:03:02,299
around robots and so I but I wondered in

1397
01:03:00,650 --> 01:03:04,910
that case whether you want to be getting

1398
01:03:02,300 --> 01:03:07,400
that configuration you to intended so

1399
01:03:04,910 --> 01:03:10,009
you intended you I have more freedom to

1400
01:03:07,400 --> 01:03:11,480
be allowed to inject like system

1401
01:03:10,010 --> 01:03:13,550
configuration or templates and things

1402
01:03:11,480 --> 01:03:15,800
there is more freedom there and that's

1403
01:03:13,550 --> 01:03:18,530
where you're doing the validation so I

1404
01:03:15,800 --> 01:03:20,390
still see that the ideal for running is

1405
01:03:18,530 --> 01:03:22,340
it's just what the operator provides so

1406
01:03:20,390 --> 01:03:23,690
they say this is the config file for

1407
01:03:22,340 --> 01:03:25,820
what that device should be doing and

1408
01:03:23,690 --> 01:03:27,920
they have complete control over that and

1409
01:03:25,820 --> 01:03:30,380
then you merge it with intended which is

1410
01:03:27,920 --> 01:03:32,630
where ISIL to see these sort of default

1411
01:03:30,380 --> 01:03:33,740
Keys coming in violation all works

1412
01:03:32,630 --> 01:03:36,650
because it's actually effectively

1413
01:03:33,740 --> 01:03:38,330
intended that's validated and Runnings

1414
01:03:36,650 --> 01:03:40,540
implicitly valid by the fact that

1415
01:03:38,330 --> 01:03:44,390
intended is but not operating running

1416
01:03:40,540 --> 01:03:46,730
hmm okay so let's flush they're on the

1417
01:03:44,390 --> 01:03:48,410
list again this is an open issue so it

1418
01:03:46,730 --> 01:03:50,780
needs to be discussed on the list and it

1419
01:03:48,410 --> 01:03:55,750
I hope to see you responding to those

1420
01:03:50,780 --> 01:03:59,150
yeah but that chain of threats and okay

1421
01:03:55,750 --> 01:04:01,790
my the chair is at alerting me that this

1422
01:03:59,150 --> 01:04:05,210
is running over but just again we had a

1423
01:04:01,790 --> 01:04:07,730
ample time on the schedule and the

1424
01:04:05,210 --> 01:04:09,800
discussion is important nonetheless I'll

1425
01:04:07,730 --> 01:04:12,680
try to wrap up this last part quickly

1426
01:04:09,800 --> 01:04:14,840
this is the last discussion number three

1427
01:04:12,680 --> 01:04:18,890
regarding the rest comp server structure

1428
01:04:14,840 --> 01:04:21,380
strategy so why is why are we talking

1429
01:04:18,890 --> 01:04:24,589
about this well the motivation was to

1430
01:04:21,380 --> 01:04:26,210
follow the pattern that was set by all

1431
01:04:24,590 --> 01:04:30,160
the other client-server drafts in

1432
01:04:26,210 --> 01:04:32,720
particular TCP ssh TLS and HTTP models

1433
01:04:30,160 --> 01:04:34,279
for all of them there is a grouping that

1434
01:04:32,720 --> 01:04:36,020
represents the configuration of just a

1435
01:04:34,280 --> 01:04:37,610
single connection a single TCP

1436
01:04:36,020 --> 01:04:39,680
connection a single SSH connection and

1437
01:04:37,610 --> 01:04:41,660
how you could configure that single

1438
01:04:39,680 --> 01:04:43,700
connection but this pattern wasn't

1439
01:04:41,660 --> 01:04:47,779
followed in the Netcom from rest cough

1440
01:04:43,700 --> 01:04:49,520
models instead in uber application level

1441
01:04:47,780 --> 01:04:53,180
grouping was provided you know to

1442
01:04:49,520 --> 01:04:57,170
support both standard and call home use

1443
01:04:53,180 --> 01:04:59,509
cases and for each many endpoints so you

1444
01:04:57,170 --> 01:05:01,670
know it was almost like an application

1445
01:04:59,510 --> 01:05:03,020
level model it certainly wasn't a model

1446
01:05:01,670 --> 01:05:07,280
that was representing a single

1447
01:05:03,020 --> 01:05:09,920
connection so the change was to move

1448
01:05:07,280 --> 01:05:14,600
from the left which is essentially one

1449
01:05:09,920 --> 01:05:16,730
large data model that contains listen

1450
01:05:14,600 --> 01:05:19,509
and call home and inside each all the

1451
01:05:16,730 --> 01:05:22,970
endpoints to then on the right hand side

1452
01:05:19,510 --> 01:05:25,910
have really two the second yellow or

1453
01:05:22,970 --> 01:05:27,830
orange line down have a grouping rest

1454
01:05:25,910 --> 01:05:29,750
cough server grouping that represents

1455
01:05:27,830 --> 01:05:31,790
the per connection grouping so just what

1456
01:05:29,750 --> 01:05:33,950
what is in C the only configuration here

1457
01:05:31,790 --> 01:05:36,500
is their certificate Maps right how do

1458
01:05:33,950 --> 01:05:39,710
you how and this is a server so how does

1459
01:05:36,500 --> 01:05:42,530
a server map the incoming TLS client

1460
01:05:39,710 --> 01:05:45,080
certificate to a rest cough username and

1461
01:05:42,530 --> 01:05:46,910
that that's appropriately ress cough

1462
01:05:45,080 --> 01:05:48,980
it's not a TLS thing it's a rest call

1463
01:05:46,910 --> 01:05:51,290
thing so that that would be for instance

1464
01:05:48,980 --> 01:05:53,690
what can be done but then

1465
01:05:51,290 --> 01:05:57,410
you have the restaurant server listen

1466
01:05:53,690 --> 01:06:01,000
stack so if you wanted to define the

1467
01:05:57,410 --> 01:06:05,480
configuration for listening to a a

1468
01:06:01,000 --> 01:06:07,700
single port for incoming restaurant

1469
01:06:05,480 --> 01:06:10,100
connections here is the configuration

1470
01:06:07,700 --> 01:06:12,410
for doing that and then there's an

1471
01:06:10,100 --> 01:06:14,330
another grouping for a call home stack

1472
01:06:12,410 --> 01:06:17,270
so if you wanted to define the

1473
01:06:14,330 --> 01:06:20,390
configuration for listening sorry for

1474
01:06:17,270 --> 01:06:21,620
initiating call home connections that

1475
01:06:20,390 --> 01:06:24,980
would be the configuration stack for

1476
01:06:21,620 --> 01:06:27,980
doing that and then at the bottom we now

1477
01:06:24,980 --> 01:06:30,290
have our application stack which is the

1478
01:06:27,980 --> 01:06:32,150
combination of it all it has both the

1479
01:06:30,290 --> 01:06:34,310
list and Ana call home sections and

1480
01:06:32,150 --> 01:06:36,590
inside each the multiplicities of the

1481
01:06:34,310 --> 01:06:39,049
two stacks which is spoke of and in the

1482
01:06:36,590 --> 01:06:41,120
end the before and after there is no

1483
01:06:39,050 --> 01:06:44,270
change because that the actual data

1484
01:06:41,120 --> 01:06:47,870
models are the same just restructured

1485
01:06:44,270 --> 01:06:50,780
and now we have teased out this ability

1486
01:06:47,870 --> 01:06:52,069
to have configuration models for you

1487
01:06:50,780 --> 01:06:55,660
know the call home stack the listen

1488
01:06:52,070 --> 01:06:58,190
stack and also for single connections um

1489
01:06:55,660 --> 01:07:00,830
so the question really I have I think

1490
01:06:58,190 --> 01:07:02,900
this might even be the last slide is do

1491
01:07:00,830 --> 01:07:06,049
we continue this approach currently it's

1492
01:07:02,900 --> 01:07:07,520
only applied to restaurant server I did

1493
01:07:06,050 --> 01:07:08,900
that because as I mentioned before I'm

1494
01:07:07,520 --> 01:07:11,390
implementing the restaurant server and I

1495
01:07:08,900 --> 01:07:14,930
wanted this so that's where I started

1496
01:07:11,390 --> 01:07:17,359
but it was I think it's goodness and I

1497
01:07:14,930 --> 01:07:18,740
think we should propagate it out to you

1498
01:07:17,360 --> 01:07:21,800
know not just fresco server but also

1499
01:07:18,740 --> 01:07:29,060
restaurant client and in both net client

1500
01:07:21,800 --> 01:07:30,620
and server any comments about this it's

1501
01:07:29,060 --> 01:07:35,390
the old it should be done then I would

1502
01:07:30,620 --> 01:07:42,650
do it perfect ok so that's it thank you

1503
01:07:35,390 --> 01:07:44,779
for the input no more questions so just

1504
01:07:42,650 --> 01:07:47,840
quickly summarize the next steps that

1505
01:07:44,780 --> 01:07:50,060
you have planned for the summary of

1506
01:07:47,840 --> 01:07:52,520
crops I know one of them is the

1507
01:07:50,060 --> 01:07:56,860
definition of whether we want to go to

1508
01:07:52,520 --> 01:08:01,520
the ana registry should look like

1509
01:07:56,860 --> 01:08:03,590
anything else yeah ok so I always feel

1510
01:08:01,520 --> 01:08:04,850
guilty answering this question every ITF

1511
01:08:03,590 --> 01:08:05,180
that comes up and of course the pressure

1512
01:08:04,850 --> 01:08:07,339
is

1513
01:08:05,180 --> 01:08:10,368
to say you know we'll get it into last

1514
01:08:07,339 --> 01:08:12,890
call in two weeks time and then it

1515
01:08:10,369 --> 01:08:14,750
slides the reality is as I just

1516
01:08:12,890 --> 01:08:16,729
mentioned cryptic types traps is we're

1517
01:08:14,750 --> 01:08:17,238
having sector review it needs to go to

1518
01:08:16,729 --> 01:08:18,678
Anna

1519
01:08:17,238 --> 01:08:20,629
there needs to be a discussion if we can

1520
01:08:18,679 --> 01:08:23,000
do the right thing or if we need to do a

1521
01:08:20,630 --> 01:08:24,259
fallback thing how long will that take

1522
01:08:23,000 --> 01:08:27,679
to play out I don't know

1523
01:08:24,259 --> 01:08:31,339
but it is the dependency of everything

1524
01:08:27,679 --> 01:08:33,219
is everything depends on it so and I

1525
01:08:31,339 --> 01:08:35,750
think it's the long pole in the tent

1526
01:08:33,219 --> 01:08:37,969
then there's a trust anchors draft which

1527
01:08:35,750 --> 01:08:39,859
I thought was done but Hank just

1528
01:08:37,969 --> 01:08:41,719
mentioned that there's a desire to

1529
01:08:39,859 --> 01:08:43,580
extend it to support be sure keys and

1530
01:08:41,719 --> 01:08:44,810
Rockies and we need it it was an

1531
01:08:43,580 --> 01:08:46,969
oversight we should have done it

1532
01:08:44,810 --> 01:08:48,710
we'll add it it's a little bit more work

1533
01:08:46,969 --> 01:08:51,170
but I think it'll take less time than it

1534
01:08:48,710 --> 01:08:54,140
will take to get the crypto types thing

1535
01:08:51,170 --> 01:08:56,600
resolved and then lastly keystore which

1536
01:08:54,140 --> 01:08:58,640
I just presented I think we're done

1537
01:08:56,600 --> 01:09:00,859
there's a couple points about openness

1538
01:08:58,640 --> 01:09:03,310
you wanted to which we need to resolve

1539
01:09:00,859 --> 01:09:06,020
but they look relatively minor and

1540
01:09:03,310 --> 01:09:09,170
definitely we should resolve sooner than

1541
01:09:06,020 --> 01:09:10,730
crypto types so ultimately it comes down

1542
01:09:09,170 --> 01:09:13,160
to how long will it take to get crypto

1543
01:09:10,729 --> 01:09:24,278
types on and I don't have an answer for

1544
01:09:13,160 --> 01:09:24,278
that I don't have any more questions

1545
01:09:32,350 --> 01:09:35,350
rushon

1546
01:09:57,210 --> 01:10:03,550
okay i'm balázs danielle from erickson

1547
01:10:00,940 --> 01:10:06,610
and i hope to speak about something more

1548
01:10:03,550 --> 01:10:10,900
simple now that we have the yank push

1549
01:10:06,610 --> 01:10:14,710
three anchors drafts in RFC edit or

1550
01:10:10,900 --> 01:10:18,670
phase now I'm really starting to stock

1551
01:10:14,710 --> 01:10:23,560
up with the chancre capabilities new

1552
01:10:18,670 --> 01:10:25,840
quarter benoit was added lately so the

1553
01:10:23,560 --> 01:10:29,470
problem why we started all this is still

1554
01:10:25,840 --> 01:10:32,950
that unchanged notifications about

1555
01:10:29,470 --> 01:10:35,800
datastore changes that is a feature and

1556
01:10:32,950 --> 01:10:37,570
yes if the note supports it it still

1557
01:10:35,800 --> 01:10:40,210
doesn't mean that it will be supporting

1558
01:10:37,570 --> 01:10:43,450
it for every single leaf and every

1559
01:10:40,210 --> 01:10:47,260
little bit of the datastore there might

1560
01:10:43,450 --> 01:10:49,929
be a lot of reasons why that's a no-no

1561
01:10:47,260 --> 01:10:53,440
Enoch this counter is cannot be updated

1562
01:10:49,930 --> 01:10:58,150
on every time it changes so we need a

1563
01:10:53,440 --> 01:11:00,690
way to document which parts of the data

1564
01:10:58,150 --> 01:11:03,460
store actually support this unchanged

1565
01:11:00,690 --> 01:11:09,009
capability for reporting data store

1566
01:11:03,460 --> 01:11:12,700
changes the draft has been updated since

1567
01:11:09,010 --> 01:11:16,960
the last IETF one of the comments was

1568
01:11:12,700 --> 01:11:19,870
that different data stores candidate

1569
01:11:16,960 --> 01:11:23,110
running operational might have different

1570
01:11:19,870 --> 01:11:25,510
capabilities for own change may be for

1571
01:11:23,110 --> 01:11:30,490
example unchanged notification from

1572
01:11:25,510 --> 01:11:32,560
intended is not that interesting so we

1573
01:11:30,490 --> 01:11:38,610
need differ a separate way to define for

1574
01:11:32,560 --> 01:11:41,320
data store also in the data model

1575
01:11:38,610 --> 01:11:43,740
unchanged capability unchanged related

1576
01:11:41,320 --> 01:11:45,849
capabilities are only needed if the

1577
01:11:43,740 --> 01:11:48,849
device ID or the server actually

1578
01:11:45,850 --> 01:11:51,070
supports the yank push on change feature

1579
01:11:48,850 --> 01:11:53,200
if it's not done shouldn't these should

1580
01:11:51,070 --> 01:11:55,349
not even be there so any feature was

1581
01:11:53,200 --> 01:11:55,349
added

1582
01:11:55,590 --> 01:12:01,300
time units were unified now it's always

1583
01:11:58,810 --> 01:12:04,630
70 seconds like in the Yankees drafts

1584
01:12:01,300 --> 01:12:06,520
and I added some quite big examples to

1585
01:12:04,630 --> 01:12:11,159
see what kind of instance data would be

1586
01:12:06,520 --> 01:12:14,230
a result except for one question I think

1587
01:12:11,159 --> 01:12:16,269
the authors do believe that this is

1588
01:12:14,230 --> 01:12:21,968
ready for working group transport but

1589
01:12:16,270 --> 01:12:23,500
it's stable on the left so what kind of

1590
01:12:21,969 --> 01:12:27,400
yang model do we have after these

1591
01:12:23,500 --> 01:12:33,099
changes one changes that we have a pure

1592
01:12:27,400 --> 01:12:35,710
data store list that defines which which

1593
01:12:33,099 --> 01:12:38,469
data nodes support or do not support

1594
01:12:35,710 --> 01:12:40,810
unchanged notifications this has

1595
01:12:38,469 --> 01:12:44,380
basically two default values one for

1596
01:12:40,810 --> 01:12:46,599
state and one for config and then these

1597
01:12:44,380 --> 01:12:48,550
capabilities are inherited down data and

1598
01:12:46,599 --> 01:12:50,230
a data tree and if you have a few

1599
01:12:48,550 --> 01:12:53,889
exceptions like you want to say that yes

1600
01:12:50,230 --> 01:12:59,619
I support no unchanged for all leaves

1601
01:12:53,889 --> 01:13:01,480
but accept the statistics branch then

1602
01:12:59,619 --> 01:13:05,230
you can have these few exceptions

1603
01:13:01,480 --> 01:13:07,869
documented in some lists some other

1604
01:13:05,230 --> 01:13:10,480
capability is related to updates were

1605
01:13:07,869 --> 01:13:13,239
also added update per year dampening

1606
01:13:10,480 --> 01:13:19,780
period marks down and Max objects per

1607
01:13:13,239 --> 01:13:23,678
update this is how it looks like and I

1608
01:13:19,780 --> 01:13:27,809
think it's quite stable except yesterday

1609
01:13:23,679 --> 01:13:33,250
there was one additional question raised

1610
01:13:27,810 --> 01:13:35,710
that the you see that the unchanged

1611
01:13:33,250 --> 01:13:38,139
capabilities are defined for data store

1612
01:13:35,710 --> 01:13:41,530
and even the inside they store

1613
01:13:38,139 --> 01:13:45,400
potentially per schema node or data node

1614
01:13:41,530 --> 01:13:48,400
on the other hand these times like

1615
01:13:45,400 --> 01:13:51,909
update period and dim dampening period

1616
01:13:48,400 --> 01:13:53,710
are defined on a global level and that

1617
01:13:51,909 --> 01:13:56,190
was the assumption for quite some time

1618
01:13:53,710 --> 01:13:56,190
now

1619
01:13:56,250 --> 01:14:01,090
esteemed colleague raised the question

1620
01:13:58,750 --> 01:14:04,020
that they need a more specific

1621
01:14:01,090 --> 01:14:07,540
definition for this one as well I

1622
01:14:04,020 --> 01:14:11,370
understand that sometimes I'd say

1623
01:14:07,540 --> 01:14:14,080
hardware might be able to defer to

1624
01:14:11,370 --> 01:14:16,780
report I don't know every second one

1625
01:14:14,080 --> 01:14:20,230
other non-text Hardware only every five

1626
01:14:16,780 --> 01:14:22,179
seconds questions how detailed how

1627
01:14:20,230 --> 01:14:24,339
complicated we want to make it my

1628
01:14:22,180 --> 01:14:27,250
feeling is that whether you support

1629
01:14:24,340 --> 01:14:29,440
unchanged or not yes no capability

1630
01:14:27,250 --> 01:14:33,000
that's very important and you don't get

1631
01:14:29,440 --> 01:14:37,269
any feedback if you don't if you try to

1632
01:14:33,000 --> 01:14:39,790
ask unchanged and it's not supported on

1633
01:14:37,270 --> 01:14:43,060
the other hand for these periods and

1634
01:14:39,790 --> 01:14:47,590
maximum number of items you do get the

1635
01:14:43,060 --> 01:14:51,130
kind of negotiation yank push we could

1636
01:14:47,590 --> 01:14:54,490
fake it for a data store where schema

1637
01:14:51,130 --> 01:14:56,950
node maybe the transport mechanism and

1638
01:14:54,490 --> 01:14:59,590
it might also change with software load

1639
01:14:56,950 --> 01:15:01,240
so questions how complicated do we want

1640
01:14:59,590 --> 01:15:05,890
to make it or is it to have it on a

1641
01:15:01,240 --> 01:15:08,559
global level binocular Cisco so actually

1642
01:15:05,890 --> 01:15:10,840
I like very much unchanged flexibility

1643
01:15:08,560 --> 01:15:12,250
because that's right at for example we

1644
01:15:10,840 --> 01:15:13,630
could have unchanged on the entire data

1645
01:15:12,250 --> 01:15:16,150
store we could have unchanged for a

1646
01:15:13,630 --> 01:15:17,890
specific feature we have that not the

1647
01:15:16,150 --> 01:15:20,950
minimum they did period there for

1648
01:15:17,890 --> 01:15:22,570
example the question is not how complex

1649
01:15:20,950 --> 01:15:24,639
you want to have it the question is how

1650
01:15:22,570 --> 01:15:27,549
reliable we want to get this contract

1651
01:15:24,640 --> 01:15:30,730
with the box right so if I go on a box I

1652
01:15:27,550 --> 01:15:32,680
want to be scored you could do okay they

1653
01:15:30,730 --> 01:15:34,839
are implementation where the minimum of

1654
01:15:32,680 --> 01:15:37,480
that period is for entire data store

1655
01:15:34,840 --> 01:15:41,290
great but there are some other as well

1656
01:15:37,480 --> 01:15:42,429
where actually the the cadence right

1657
01:15:41,290 --> 01:15:44,890
that you that you want to get

1658
01:15:42,430 --> 01:15:47,410
information is different on a line card

1659
01:15:44,890 --> 01:15:49,840
for example for a specific interface if

1660
01:15:47,410 --> 01:15:55,630
you're for if you get information from v

1661
01:15:49,840 --> 01:15:57,100
etc now if we take like the the the

1662
01:15:55,630 --> 01:15:59,110
guidelines that we want to get the

1663
01:15:57,100 --> 01:16:01,840
contract whenever you connect to a box

1664
01:15:59,110 --> 01:16:04,360
it's important to understand the minimum

1665
01:16:01,840 --> 01:16:06,700
of the period for each of the different

1666
01:16:04,360 --> 01:16:08,110
things you can get right because if you

1667
01:16:06,700 --> 01:16:10,210
want to assure your box

1668
01:16:08,110 --> 01:16:13,179
it's like difficult to say okay let me

1669
01:16:10,210 --> 01:16:15,190
try like 10 seconds your information

1670
01:16:13,180 --> 01:16:19,690
okay I could do more that's right like 8

1671
01:16:15,190 --> 01:16:21,219
and 5 and 3 until you get like well beep

1672
01:16:19,690 --> 01:16:23,620
you can't do it

1673
01:16:21,219 --> 01:16:25,500
it might be better to get this in the

1674
01:16:23,620 --> 01:16:29,019
contract and we connected a box telling

1675
01:16:25,500 --> 01:16:31,870
for this part of the three I could get

1676
01:16:29,020 --> 01:16:34,360
you every half a second but for the

1677
01:16:31,870 --> 01:16:37,120
other one interface counters on their

1678
01:16:34,360 --> 01:16:39,549
line card on this big box I could do 30

1679
01:16:37,120 --> 01:16:41,800
seconds so if you have to rely on this

1680
01:16:39,550 --> 01:16:44,140
to get any assurance and it closed the

1681
01:16:41,800 --> 01:16:46,480
protonation we need this flexibility and

1682
01:16:44,140 --> 01:16:48,219
I get I get it that it might be complex

1683
01:16:46,480 --> 01:16:50,259
but we might be getting the same

1684
01:16:48,219 --> 01:16:54,370
flexibility that we've got below or at

1685
01:16:50,260 --> 01:16:56,890
top as well I see it as somewhat

1686
01:16:54,370 --> 01:16:59,650
different because these global minimums

1687
01:16:56,890 --> 01:17:01,510
are saying that the best the box can do

1688
01:16:59,650 --> 01:17:05,199
in any part of the data model any

1689
01:17:01,510 --> 01:17:09,520
datastore is I don't know 170 seconds

1690
01:17:05,199 --> 01:17:11,620
and then you try that for interface oh

1691
01:17:09,520 --> 01:17:13,780
interface sends you back that it's only

1692
01:17:11,620 --> 01:17:15,910
2 seconds I can do and then you still

1693
01:17:13,780 --> 01:17:18,790
have that reliability yes it's a one

1694
01:17:15,910 --> 01:17:21,699
more round trip you can put it in the

1695
01:17:18,790 --> 01:17:24,100
date this one as well so these minimums

1696
01:17:21,699 --> 01:17:26,559
mean that that's the best the box can

1697
01:17:24,100 --> 01:17:31,230
ever tell you and give you and so maybe

1698
01:17:26,560 --> 01:17:33,280
some parts will give you a worse value

1699
01:17:31,230 --> 01:17:35,709
but maybe it's not the right question

1700
01:17:33,280 --> 01:17:37,900
right it's the best that box can do to

1701
01:17:35,710 --> 01:17:39,910
get me that information as opposed to

1702
01:17:37,900 --> 01:17:42,009
that one this is you did a question that

1703
01:17:39,910 --> 01:17:44,230
we have to answer right as opposed to

1704
01:17:42,010 --> 01:17:46,239
because you know if you implement this

1705
01:17:44,230 --> 01:17:52,660
you know update period will say well

1706
01:17:46,239 --> 01:17:56,139
okay five seconds why no you're the

1707
01:17:52,660 --> 01:17:57,820
minimum is 10 70 seconds I'll try to

1708
01:17:56,140 --> 01:17:59,620
incent the seconds and then the box will

1709
01:17:57,820 --> 01:18:03,190
tell me that okay let's do that

1710
01:17:59,620 --> 01:18:05,349
10 whatever unit then we'll go to some

1711
01:18:03,190 --> 01:18:08,199
pumps all you want to use the box and

1712
01:18:05,350 --> 01:18:12,340
say right I want to get like my fav

1713
01:18:08,199 --> 01:18:14,230
information every house whatever unit

1714
01:18:12,340 --> 01:18:16,150
and then you say oh actually no mr.

1715
01:18:14,230 --> 01:18:18,699
customer because it's like more like

1716
01:18:16,150 --> 01:18:21,309
five seconds it's common sense so you

1717
01:18:18,699 --> 01:18:23,530
know it's it's a question of consequence

1718
01:18:21,310 --> 01:18:28,449
being the right expectations or to rely

1719
01:18:23,530 --> 01:18:30,400
on the information Rashad Cisco just to

1720
01:18:28,449 --> 01:18:31,928
add to what Bruno was saying I mean in

1721
01:18:30,400 --> 01:18:33,400
terms of implementation you get

1722
01:18:31,929 --> 01:18:34,760
collectors and sensors different

1723
01:18:33,400 --> 01:18:37,099
hardware which are out

1724
01:18:34,760 --> 01:18:41,270
very different collection capabilities

1725
01:18:37,100 --> 01:18:43,190
and you already have feels per sensor

1726
01:18:41,270 --> 01:18:46,250
path it's not like you're adding an

1727
01:18:43,190 --> 01:18:48,290
extra list or whatever it's that field

1728
01:18:46,250 --> 01:18:51,050
could be if you add if you put the

1729
01:18:48,290 --> 01:18:53,120
update period per path it could be

1730
01:18:51,050 --> 01:18:55,160
optional by default he inherits what's

1731
01:18:53,120 --> 01:18:57,349
at the top it's not something you have

1732
01:18:55,160 --> 01:18:59,269
to add but for people who want to

1733
01:18:57,350 --> 01:19:02,870
support that it's there so I think

1734
01:18:59,270 --> 01:19:07,520
there's some significant benefit thank

1735
01:19:02,870 --> 01:19:11,780
you I I can live with changing the model

1736
01:19:07,520 --> 01:19:14,120
in that way yeah for me it's it's new

1737
01:19:11,780 --> 01:19:15,620
Brooke Wilson Cisco I have not read the

1738
01:19:14,120 --> 01:19:17,330
rights version the drop I have two

1739
01:19:15,620 --> 01:19:19,670
questions one is is this information

1740
01:19:17,330 --> 01:19:23,360
will be available offline is like

1741
01:19:19,670 --> 01:19:25,340
instant State this is a yang model and I

1742
01:19:23,360 --> 01:19:27,080
very much hope that instance data will

1743
01:19:25,340 --> 01:19:29,780
be provided but that's not really up to

1744
01:19:27,080 --> 01:19:31,910
the vendor to decide that yes I provide

1745
01:19:29,780 --> 01:19:34,340
you with instance data then the second

1746
01:19:31,910 --> 01:19:36,650
question is in terms of these paths if

1747
01:19:34,340 --> 01:19:38,900
you have a device that sports many

1748
01:19:36,650 --> 01:19:41,269
interfaces can you wild-card those paths

1749
01:19:38,900 --> 01:19:42,889
to say the counters under an interface

1750
01:19:41,270 --> 01:19:47,360
on any of these types of interfaces will

1751
01:19:42,890 --> 01:19:48,650
have this and performance where is

1752
01:19:47,360 --> 01:19:52,429
without having to list every single

1753
01:19:48,650 --> 01:19:56,599
interface at this point I'm using node

1754
01:19:52,430 --> 01:20:00,410
selector from an ACM which might be

1755
01:19:56,600 --> 01:20:03,650
moved to you the yank types that say

1756
01:20:00,410 --> 01:20:07,610
it's the format is the inside anti-fire

1757
01:20:03,650 --> 01:20:10,670
but you can omit the keys with meaning

1758
01:20:07,610 --> 01:20:12,980
then it that means that's every every

1759
01:20:10,670 --> 01:20:15,650
key value for that so if you want to say

1760
01:20:12,980 --> 01:20:19,519
that all the interfaces yes you can do

1761
01:20:15,650 --> 01:20:21,650
that with a single single item if you

1762
01:20:19,520 --> 01:20:24,680
want to go into more specific Ethernet

1763
01:20:21,650 --> 01:20:28,639
interfaces or fast ethernet interfaces

1764
01:20:24,680 --> 01:20:31,210
such groupings then no this is then you

1765
01:20:28,640 --> 01:20:33,530
have to have to do that one by one okay

1766
01:20:31,210 --> 01:20:35,360
but I don't think we want to get have a

1767
01:20:33,530 --> 01:20:38,570
full regular expression language

1768
01:20:35,360 --> 01:20:40,099
embedded here no and I agree and I think

1769
01:20:38,570 --> 01:20:41,330
that's probably right compromise but it

1770
01:20:40,100 --> 01:20:43,430
goes I think it's back to what Ben are

1771
01:20:41,330 --> 01:20:44,360
saying is that ultimately this is a

1772
01:20:43,430 --> 01:20:46,160
contract

1773
01:20:44,360 --> 01:20:47,570
I think contracts of what's the minimum

1774
01:20:46,160 --> 01:20:49,550
capabilities you're willing

1775
01:20:47,570 --> 01:20:52,670
support rather than necessary the

1776
01:20:49,550 --> 01:20:55,070
maximum so if you say I can support a

1777
01:20:52,670 --> 01:20:56,810
damping period of five seconds or

1778
01:20:55,070 --> 01:20:59,210
whatever happens with me then you should

1779
01:20:56,810 --> 01:21:00,770
effectively be able to honor that for

1780
01:20:59,210 --> 01:21:03,139
everything it's a slightly different

1781
01:21:00,770 --> 01:21:06,170
contract the two parts unchanged means I

1782
01:21:03,139 --> 01:21:10,280
really I promise to support it but these

1783
01:21:06,170 --> 01:21:12,860
periods either global or if we put them

1784
01:21:10,280 --> 01:21:15,800
per datastore that node or pair whatever

1785
01:21:12,860 --> 01:21:17,780
its you might still have a CPU overload

1786
01:21:15,800 --> 01:21:20,170
and then it will come back that okay I

1787
01:21:17,780 --> 01:21:23,179
already have too many subscriptions

1788
01:21:20,170 --> 01:21:25,280
going figured so your subscription will

1789
01:21:23,179 --> 01:21:27,619
get on really I don't know twice that

1790
01:21:25,280 --> 01:21:29,540
dampening periods because I have six

1791
01:21:27,619 --> 01:21:33,500
more subscriptions already in my in

1792
01:21:29,540 --> 01:21:34,909
place okay this these times I don't

1793
01:21:33,500 --> 01:21:38,260
think they can ever be taken as a

1794
01:21:34,909 --> 01:21:41,360
guaranteed time would you would you

1795
01:21:38,260 --> 01:21:43,579
reject that subscription if it came in

1796
01:21:41,360 --> 01:21:48,469
and you couldn't honor it I think though

1797
01:21:43,579 --> 01:21:50,030
what's the SUBSCRIBE notification sites

1798
01:21:48,469 --> 01:21:52,010
that you reject it and they say that

1799
01:21:50,030 --> 01:21:59,360
okay try with the double the time or

1800
01:21:52,010 --> 01:22:00,829
whatever time okay but not less so I

1801
01:21:59,360 --> 01:22:02,449
want to come back to what you said if

1802
01:22:00,829 --> 01:22:04,369
you can't guarantee the minimum of that

1803
01:22:02,449 --> 01:22:05,509
period well actually depends because

1804
01:22:04,369 --> 01:22:09,079
there are multiple ways that you could

1805
01:22:05,510 --> 01:22:11,360
do telemetry right these tricks interval

1806
01:22:09,079 --> 01:22:13,309
or if you wait until after the

1807
01:22:11,360 --> 01:22:15,559
connection the correction time but the

1808
01:22:13,310 --> 01:22:18,679
point is that we should do the best that

1809
01:22:15,560 --> 01:22:20,659
we can for a device is healthy right if

1810
01:22:18,679 --> 01:22:23,510
the device is not healthy because it's

1811
01:22:20,659 --> 01:22:25,098
CPU is overloaded etc I mean yes we

1812
01:22:23,510 --> 01:22:27,560
arrived in the situation where we should

1813
01:22:25,099 --> 01:22:29,780
give during those those dead timeout on

1814
01:22:27,560 --> 01:22:32,000
the fly it's not it's not at the point

1815
01:22:29,780 --> 01:22:34,190
the point is that I connect to a box and

1816
01:22:32,000 --> 01:22:35,329
say contract now I understand that you

1817
01:22:34,190 --> 01:22:39,199
want to do this for two different use

1818
01:22:35,329 --> 01:22:42,199
case like implementation time right and

1819
01:22:39,199 --> 01:22:47,360
the run time I care about the run time

1820
01:22:42,199 --> 01:22:49,129
at discovery right I can agree that I

1821
01:22:47,360 --> 01:22:54,369
would change the model as you like

1822
01:22:49,130 --> 01:22:54,369
putting all these values under the lists

1823
01:22:56,699 --> 01:23:03,478
probably it will need to be renamed in

1824
01:22:58,920 --> 01:23:07,170
that case still I think that it's not

1825
01:23:03,479 --> 01:23:09,599
just healthy or not healthy if you have

1826
01:23:07,170 --> 01:23:11,940
one subscription you will get the

1827
01:23:09,599 --> 01:23:14,010
promised values if you have already

1828
01:23:11,940 --> 01:23:16,469
hundred subscriptions on the device it's

1829
01:23:14,010 --> 01:23:18,059
still healthy but yes you have hundred

1830
01:23:16,469 --> 01:23:21,380
subscriptions and the device might know

1831
01:23:18,059 --> 01:23:26,699
that I can't give you the lowest value I

1832
01:23:21,380 --> 01:23:29,219
promised design time and I can't revert

1833
01:23:26,699 --> 01:23:32,219
that I just only wording I can put there

1834
01:23:29,219 --> 01:23:35,159
is that this is the promised value in an

1835
01:23:32,219 --> 01:23:37,320
ideal case but the device still has the

1836
01:23:35,159 --> 01:23:42,150
right to say that I can support on the

1837
01:23:37,320 --> 01:23:46,518
double time exchange thank you okay so

1838
01:23:42,150 --> 01:23:50,159
that means that unchanged capable notes

1839
01:23:46,519 --> 01:23:55,590
list you have to be renamed to I don't

1840
01:23:50,159 --> 01:23:58,320
know datastore subscription cap no

1841
01:23:55,590 --> 01:24:01,619
specifics or something like that and all

1842
01:23:58,320 --> 01:24:03,659
these are the update periods max objects

1843
01:24:01,619 --> 01:24:08,749
and minimum damping period will go under

1844
01:24:03,659 --> 01:24:12,089
that list yeah that was an example that

1845
01:24:08,749 --> 01:24:14,728
usually you don't need to put this or do

1846
01:24:12,090 --> 01:24:18,229
this specific stuff in the in the

1847
01:24:14,729 --> 01:24:25,920
instance data you only have a few values

1848
01:24:18,229 --> 01:24:27,479
and the other the question about last

1849
01:24:25,920 --> 01:24:30,179
call you looks like me to make some

1850
01:24:27,479 --> 01:24:32,280
changes first yes this model needs

1851
01:24:30,179 --> 01:24:35,820
update but after that I hope it can go

1852
01:24:32,280 --> 01:24:37,739
so how many people and just get a sense

1853
01:24:35,820 --> 01:24:40,880
from the room how many people have read

1854
01:24:37,739 --> 01:24:45,178
this version the back raise your hand a

1855
01:24:40,880 --> 01:24:47,630
few and there's no really follow-up

1856
01:24:45,179 --> 01:24:47,630
question one

1857
01:25:09,340 --> 01:25:12,180
Gendron

1858
01:25:22,109 --> 01:25:27,959
hello everyone no one is chained from

1859
01:25:25,139 --> 01:25:30,899
Maui and I would like to introduce the

1860
01:25:27,959 --> 01:25:45,510
update on the subscription to morrow

1861
01:25:30,899 --> 01:25:49,979
stream originators district and firstly

1862
01:25:45,510 --> 01:25:54,659
a brief introduction we know the the

1863
01:25:49,979 --> 01:25:58,129
yunkish describe the magazine about pops

1864
01:25:54,659 --> 01:26:00,449
up and this this draft is about the

1865
01:25:58,129 --> 01:26:03,149
distribution is distribu to the

1866
01:26:00,449 --> 01:26:06,978
extension to the young push walk and we

1867
01:26:03,149 --> 01:26:15,929
took it for a transporter independent

1868
01:26:06,979 --> 01:26:20,669
next we describe the two use cases in

1869
01:26:15,929 --> 01:26:23,789
our draft why is about the the router

1870
01:26:20,669 --> 01:26:25,858
with multiple line cars and one wanna to

1871
01:26:23,789 --> 01:26:28,559
actually push data from line cars to the

1872
01:26:25,859 --> 01:26:31,769
two other tractor and the other is about

1873
01:26:28,559 --> 01:26:34,260
the IOT is narrow and I would he node

1874
01:26:31,769 --> 01:26:37,260
can push data to the tractor and the

1875
01:26:34,260 --> 01:26:41,159
border outer does not assemble data as a

1876
01:26:37,260 --> 01:26:45,869
broker and there was discussion since

1877
01:26:41,159 --> 01:26:48,239
last a meeting um this about the IOT is

1878
01:26:45,869 --> 01:26:51,179
narrow since this case requires node

1879
01:26:48,239 --> 01:26:54,898
management protocols in addition to the

1880
01:26:51,179 --> 01:26:58,879
push mechanism for example the node join

1881
01:26:54,899 --> 01:27:06,089
or the leaf no discovery and so on so

1882
01:26:58,879 --> 01:27:10,229
this I'm open so it if it is a really

1883
01:27:06,089 --> 01:27:13,760
useful or helpful to include this out

1884
01:27:10,229 --> 01:27:19,349
use case in this draft I'm open to hear

1885
01:27:13,760 --> 01:27:22,219
the suggestions in the working group and

1886
01:27:19,349 --> 01:27:26,159
next

1887
01:27:22,219 --> 01:27:30,389
here is the solution over vo we do not

1888
01:27:26,159 --> 01:27:33,710
change actually and it described the

1889
01:27:30,389 --> 01:27:36,239
basic magazines including the

1890
01:27:33,710 --> 01:27:38,790
subscription decomposition the

1891
01:27:36,239 --> 01:27:42,019
publication composition and the

1892
01:27:38,790 --> 01:27:49,230
subscreen state change in notifications

1893
01:27:42,020 --> 01:27:51,020
next we propose to extend we propose the

1894
01:27:49,230 --> 01:27:54,900
extensions for the publication

1895
01:27:51,020 --> 01:27:56,850
composition because the receiver need to

1896
01:27:54,900 --> 01:27:59,969
know the number of component

1897
01:27:56,850 --> 01:28:04,110
subscriptions so we propose to add a

1898
01:27:59,969 --> 01:28:07,130
list of publisher ID for configured

1899
01:28:04,110 --> 01:28:10,519
subscription we add this to the

1900
01:28:07,130 --> 01:28:14,639
subscription started and subscription

1901
01:28:10,520 --> 01:28:18,860
modified notifications and on the

1902
01:28:14,639 --> 01:28:23,219
dynamic subscription we add this to the

1903
01:28:18,860 --> 01:28:29,099
established subscription and modify

1904
01:28:23,219 --> 01:28:33,690
subscription are our PCs and we stopped

1905
01:28:29,100 --> 01:28:37,199
here in lustre revision because we think

1906
01:28:33,690 --> 01:28:40,500
this should be this job this draft

1907
01:28:37,199 --> 01:28:43,650
should be transport independent but

1908
01:28:40,500 --> 01:28:47,389
there was suggestions in the Middle East

1909
01:28:43,650 --> 01:28:50,940
to to consider the transport

1910
01:28:47,389 --> 01:28:53,580
configurations for multiple line cars so

1911
01:28:50,940 --> 01:28:58,980
we have the following the following two

1912
01:28:53,580 --> 01:29:01,019
discussions next the one is about the

1913
01:28:58,980 --> 01:29:05,339
extension folder configure the

1914
01:29:01,020 --> 01:29:07,440
subscription we suggest to add a list of

1915
01:29:05,340 --> 01:29:12,260
channel configurations under the

1916
01:29:07,440 --> 01:29:15,049
receiver configuration and in this case

1917
01:29:12,260 --> 01:29:17,340
all the potential channels are

1918
01:29:15,050 --> 01:29:20,520
pre-configured and the actual

1919
01:29:17,340 --> 01:29:23,010
publication channel are selected based

1920
01:29:20,520 --> 01:29:27,389
on the subscription decomposition result

1921
01:29:23,010 --> 01:29:30,949
and here I also give an example we

1922
01:29:27,389 --> 01:29:34,199
borrow this from the narco HTTP

1923
01:29:30,949 --> 01:29:40,230
notification draft

1924
01:29:34,199 --> 01:29:45,320
and we put this we put all the we'll put

1925
01:29:40,230 --> 01:29:48,718
this in in you know a channel container

1926
01:29:45,320 --> 01:29:50,940
for this configuration for this

1927
01:29:48,719 --> 01:29:58,230
configuration in the channel comfy

1928
01:29:50,940 --> 01:30:00,449
container and next contributor just a

1929
01:29:58,230 --> 01:30:03,299
question so it is a list of channels and

1930
01:30:00,449 --> 01:30:11,460
by channel you mean line card presses

1931
01:30:03,300 --> 01:30:16,050
yes yeah you turn card well hydrogen and

1932
01:30:11,460 --> 01:30:19,440
the other the other one is the extension

1933
01:30:16,050 --> 01:30:24,480
for dynamic subscription this seems more

1934
01:30:19,440 --> 01:30:28,980
complicated complicated because because

1935
01:30:24,480 --> 01:30:31,410
there are several transport options for

1936
01:30:28,980 --> 01:30:34,259
the the line cars firstly the line cards

1937
01:30:31,410 --> 01:30:38,309
can run on server mode or client mode

1938
01:30:34,260 --> 01:30:41,640
and the connection could be dynamically

1939
01:30:38,310 --> 01:30:45,750
set up or pre-configured so we have two

1940
01:30:41,640 --> 01:30:48,830
option one is to generalize the rest

1941
01:30:45,750 --> 01:30:52,679
cough notif jeff'd

1942
01:30:48,830 --> 01:30:55,910
this is the mode firstly the rank has

1943
01:30:52,679 --> 01:30:59,640
rung on the server mode and the

1944
01:30:55,910 --> 01:31:02,969
connections are dynamically set up so we

1945
01:30:59,640 --> 01:31:06,719
need the RPC to return the resource

1946
01:31:02,969 --> 01:31:11,070
access information and the receiver can

1947
01:31:06,719 --> 01:31:14,850
get data from the line cards and the

1948
01:31:11,070 --> 01:31:18,929
second option is used to consistent with

1949
01:31:14,850 --> 01:31:23,690
the configure subscription just like the

1950
01:31:18,929 --> 01:31:27,199
previous example and this mode actually

1951
01:31:23,690 --> 01:31:32,099
the line cards runs on the client mode

1952
01:31:27,199 --> 01:31:35,660
and the connection is pre-configured so

1953
01:31:32,100 --> 01:31:38,610
all the channels are pre-configured just

1954
01:31:35,660 --> 01:31:42,139
just a push data when the subscription

1955
01:31:38,610 --> 01:31:42,139
requests accepted

1956
01:31:44,939 --> 01:31:55,979
yeah so next we consider to improve the

1957
01:31:51,419 --> 01:31:58,999
examples but we also have question what

1958
01:31:55,979 --> 01:32:03,389
kind of reuse employees expect it

1959
01:31:58,999 --> 01:32:09,419
because of we see we do not see a

1960
01:32:03,389 --> 01:32:11,729
similar example in the the subscriber

1961
01:32:09,419 --> 01:32:13,919
the notification draft I think you this

1962
01:32:11,729 --> 01:32:17,610
draft is can be compared to a standard

1963
01:32:13,919 --> 01:32:21,689
one but we did not find a similar

1964
01:32:17,610 --> 01:32:24,989
examples and we also accept other

1965
01:32:21,689 --> 01:32:31,280
suggestions on issues we need to

1966
01:32:24,989 --> 01:32:41,239
consider in in the following work and

1967
01:32:31,280 --> 01:32:41,239
questions questions

1968
01:32:45,260 --> 01:32:50,900
so Tim carried no kids we did have a

1969
01:32:49,190 --> 01:32:53,690
question and I think I brought it up on

1970
01:32:50,900 --> 01:32:57,070
the last time and I in the yes question

1971
01:32:53,690 --> 01:33:00,049
again about the IOT use case right and

1972
01:32:57,070 --> 01:33:04,340
my concern was that outside of a closed

1973
01:33:00,050 --> 01:33:05,780
ecosystem a network element itself you

1974
01:33:04,340 --> 01:33:08,780
would have to have some additional

1975
01:33:05,780 --> 01:33:11,719
capabilities in place to to be able to

1976
01:33:08,780 --> 01:33:13,969
discover if it's in the network element

1977
01:33:11,720 --> 01:33:16,520
the line card from the from the from the

1978
01:33:13,970 --> 01:33:19,130
gonna say proxy for a pet I forget what

1979
01:33:16,520 --> 01:33:21,320
to call it the master guy and so there's

1980
01:33:19,130 --> 01:33:23,090
got to be ways to be able to do all the

1981
01:33:21,320 --> 01:33:25,340
discovery elements in there so if you

1982
01:33:23,090 --> 01:33:27,739
tried to extend this to anything outside

1983
01:33:25,340 --> 01:33:31,190
of closed ecosystem I think there's some

1984
01:33:27,739 --> 01:33:33,320
considerations that that that need to

1985
01:33:31,190 --> 01:33:35,179
happen or for the solution to work

1986
01:33:33,320 --> 01:33:36,860
correctly and all the security that goes

1987
01:33:35,180 --> 01:33:40,220
around it right right now you're just

1988
01:33:36,860 --> 01:33:42,950
constrained to a to a locked box if you

1989
01:33:40,220 --> 01:33:45,650
look the extended past that then you got

1990
01:33:42,950 --> 01:33:48,230
to worry about discovery and other

1991
01:33:45,650 --> 01:33:54,469
elements so that would be my concern

1992
01:33:48,230 --> 01:33:57,320
with the IOT use case yeah so what's

1993
01:33:54,470 --> 01:34:00,530
your suggestion so you think we should

1994
01:33:57,320 --> 01:34:03,320
not include that's in the chapter or

1995
01:34:00,530 --> 01:34:08,330
unless you're gonna want to go into the

1996
01:34:03,320 --> 01:34:09,950
I think so I think so want to go into

1997
01:34:08,330 --> 01:34:11,960
those other use cases you're going to

1998
01:34:09,950 --> 01:34:13,550
have to address these different issues

1999
01:34:11,960 --> 01:34:15,350
and so I don't think that that was your

2000
01:34:13,550 --> 01:34:17,570
original intent with this draft right

2001
01:34:15,350 --> 01:34:19,670
you're just trying to say look I've got

2002
01:34:17,570 --> 01:34:23,030
a I've got a closed ecosystem that I'm

2003
01:34:19,670 --> 01:34:24,980
gonna put together a master publisher

2004
01:34:23,030 --> 01:34:26,360
that's gonna kind of coordinate that

2005
01:34:24,980 --> 01:34:28,910
stuff instead of having different

2006
01:34:26,360 --> 01:34:31,099
streams right that's effectively what

2007
01:34:28,910 --> 01:34:33,739
this was doing right and so I would keep

2008
01:34:31,100 --> 01:34:36,440
it into the context that was in if you

2009
01:34:33,739 --> 01:34:38,739
do choose to make it broader then you're

2010
01:34:36,440 --> 01:34:44,450
gonna have to address these other issues

2011
01:34:38,739 --> 01:34:46,219
okay sinks as a contributor my takeaway

2012
01:34:44,450 --> 01:34:47,780
from that would be at a minimum the

2013
01:34:46,220 --> 01:34:50,000
track needs to have a section that

2014
01:34:47,780 --> 01:34:53,900
speaks to this and at least no

2015
01:34:50,000 --> 01:34:55,700
identifies that that intention and and

2016
01:34:53,900 --> 01:34:57,650
then and then there's question of

2017
01:34:55,700 --> 01:34:59,000
whether or not the draft actually solves

2018
01:34:57,650 --> 01:35:01,280
it so

2019
01:34:59,000 --> 01:35:04,340
one potential solution might be for it

2020
01:35:01,280 --> 01:35:06,980
to define in config policy operational

2021
01:35:04,340 --> 01:35:09,530
state that lists out the channels that

2022
01:35:06,980 --> 01:35:11,480
the device is having available that

2023
01:35:09,530 --> 01:35:12,650
descriptions can be made on and that

2024
01:35:11,480 --> 01:35:15,230
would be one way to solve is another

2025
01:35:12,650 --> 01:35:17,089
might be to look to the equivalent of an

2026
01:35:15,230 --> 01:35:19,730
entity myth where you can somehow

2027
01:35:17,090 --> 01:35:21,860
discover the line cards that existing on

2028
01:35:19,730 --> 01:35:24,070
the device and then you know derive from

2029
01:35:21,860 --> 01:35:28,130
that that they might be suitable for

2030
01:35:24,070 --> 01:35:30,920
using as channels detonators in either

2031
01:35:28,130 --> 01:35:35,870
case I think this draft needs to talk to

2032
01:35:30,920 --> 01:35:38,180
it and and choose an approach that you

2033
01:35:35,870 --> 01:35:41,300
know but you either say that it's out of

2034
01:35:38,180 --> 01:35:43,340
scope and and you know it's only going

2035
01:35:41,300 --> 01:35:47,390
to support closed ecosystems as ten

2036
01:35:43,340 --> 01:35:49,760
dimensions or it's in scope and point to

2037
01:35:47,390 --> 01:35:51,830
a solution that people can use right you

2038
01:35:49,760 --> 01:35:53,570
can imagine an IOT you know if you're

2039
01:35:51,830 --> 01:35:55,640
looking at this an IOT would be some of

2040
01:35:53,570 --> 01:35:58,190
the mechanisms they use for discovery

2041
01:35:55,640 --> 01:36:00,200
may be out of coop you know that type of

2042
01:35:58,190 --> 01:36:01,400
stuff so you can it can spin quickly if

2043
01:36:00,200 --> 01:36:02,990
you want to move it out of that closed

2044
01:36:01,400 --> 01:36:05,480
ecosystem but even within the closed

2045
01:36:02,990 --> 01:36:07,010
ecosystem you're correct you might want

2046
01:36:05,480 --> 01:36:08,990
to give them some guidance say hey look

2047
01:36:07,010 --> 01:36:10,850
when you build a line card it comes with

2048
01:36:08,990 --> 01:36:12,440
what you guys were talking about becomes

2049
01:36:10,850 --> 01:36:16,900
a channel right you know you want to be

2050
01:36:12,440 --> 01:36:16,900
able to listen abilities okay thank you

2051
01:36:19,270 --> 01:36:24,250
poignant from a hobby for this is

2052
01:36:21,410 --> 01:36:27,019
rushing I just a machine we have already

2053
01:36:24,250 --> 01:36:30,280
implemented in our some pro taught and I

2054
01:36:27,020 --> 01:36:30,280
interact with the customer

2055
01:36:40,469 --> 01:36:47,790
so I can't as a contributor I guess I

2056
01:36:44,850 --> 01:36:50,250
was I think we talked about we discussed

2057
01:36:47,790 --> 01:36:53,100
this on lists and the with the channels

2058
01:36:50,250 --> 01:36:55,680
it was unclear to me that the channels

2059
01:36:53,100 --> 01:36:58,680
was a lists of channels or or you know

2060
01:36:55,680 --> 01:37:01,170
or not also there's you know we don't

2061
01:36:58,680 --> 01:37:04,440
have a gang model that is yet defining

2062
01:37:01,170 --> 01:37:06,150
this this node this container called a

2063
01:37:04,440 --> 01:37:07,799
channel or actually is a list without

2064
01:37:06,150 --> 01:37:09,089
your sirness so you'll have a note we

2065
01:37:07,800 --> 01:37:12,150
don't have a gang model that defines a

2066
01:37:09,090 --> 01:37:14,850
list called channel where where is that

2067
01:37:12,150 --> 01:37:15,809
gang model working no it presumably it

2068
01:37:14,850 --> 01:37:18,780
should be in this draft

2069
01:37:15,810 --> 01:37:20,219
well actually really presumably might

2070
01:37:18,780 --> 01:37:23,219
offend in the SUBSCRIBE notification

2071
01:37:20,219 --> 01:37:26,580
shaft but I think that there's a you

2072
01:37:23,219 --> 01:37:28,560
know it I'm not really clear how to

2073
01:37:26,580 --> 01:37:31,140
extend this draft to have that

2074
01:37:28,560 --> 01:37:35,699
definition of the list of channels in it

2075
01:37:31,140 --> 01:37:40,860
being maudlin could you go to the

2076
01:37:35,699 --> 01:37:45,389
configure substitution yeah yeah no yes

2077
01:37:40,860 --> 01:37:49,139
this size so right now if this is not

2078
01:37:45,390 --> 01:37:52,770
included in the in the yeah model in the

2079
01:37:49,140 --> 01:37:55,140
draft so if we can agree we can have our

2080
01:37:52,770 --> 01:37:59,130
consensus then I would like to add our

2081
01:37:55,140 --> 01:38:06,420
list of add a channel list under the

2082
01:37:59,130 --> 01:38:09,600
receiver yeah that means the each

2083
01:38:06,420 --> 01:38:13,739
receiver can have Chhabra establish

2084
01:38:09,600 --> 01:38:20,310
annals each receiver have several

2085
01:38:13,739 --> 01:38:23,790
channel configurations okay again as a

2086
01:38:20,310 --> 01:38:26,880
contributor right so and and also the

2087
01:38:23,790 --> 01:38:28,739
co-author of the HTTP note of draft that

2088
01:38:26,880 --> 01:38:32,460
my actual net present after your

2089
01:38:28,739 --> 01:38:35,339
presentation mm-hmm that HTTP note of

2090
01:38:32,460 --> 01:38:36,840
draft is the first note of draft that we

2091
01:38:35,340 --> 01:38:40,140
have that this working group has

2092
01:38:36,840 --> 01:38:43,050
produced for a configured description

2093
01:38:40,140 --> 01:38:46,230
and the approach is taking which is in

2094
01:38:43,050 --> 01:38:48,060
fact was sort of you know suggested or

2095
01:38:46,230 --> 01:38:50,280
we're almost mandated by these describe

2096
01:38:48,060 --> 01:38:54,419
notifications draft or ARF's are almost

2097
01:38:50,280 --> 01:38:58,709
farsi was to augment the receiver

2098
01:38:54,419 --> 01:39:00,840
No and so that's what that track does it

2099
01:38:58,709 --> 01:39:01,949
augmented the receiver note yeah and

2100
01:39:00,840 --> 01:39:04,289
then what you're suggesting is that

2101
01:39:01,949 --> 01:39:06,178
there'd be a channel that's underneath

2102
01:39:04,289 --> 01:39:07,648
the receiver yeah yeah and that it

2103
01:39:06,179 --> 01:39:10,889
should actually be augmenting the

2104
01:39:07,649 --> 01:39:13,439
channel note yes and so how is it

2105
01:39:10,889 --> 01:39:14,789
it knows am I supposed to be augmenting

2106
01:39:13,439 --> 01:39:16,919
the receiver note or am I supposed to be

2107
01:39:14,789 --> 01:39:18,749
lifting the channel no how can it you

2108
01:39:16,919 --> 01:39:25,380
know so I think we get into this issue

2109
01:39:18,749 --> 01:39:26,789
of like in these not've they should that

2110
01:39:25,380 --> 01:39:29,689
it's the intention the note of craft

2111
01:39:26,789 --> 01:39:33,478
it's kind of somewhat independent of the

2112
01:39:29,689 --> 01:39:36,179
transport so out of the contest

2113
01:39:33,479 --> 01:39:39,090
so how would it know if this is a device

2114
01:39:36,179 --> 01:39:41,729
that has slang carts or not and what is

2115
01:39:39,090 --> 01:39:43,979
the appropriate augmentation one I think

2116
01:39:41,729 --> 01:39:47,820
that's the issue that we know this this

2117
01:39:43,979 --> 01:39:51,840
is C and this is also an Augmented to

2118
01:39:47,820 --> 01:39:56,249
the the subjective draft so let me see

2119
01:39:51,840 --> 01:40:01,889
if you own if you opened if you wanna

2120
01:39:56,249 --> 01:40:05,070
only wanna enable the one channel to the

2121
01:40:01,889 --> 01:40:09,360
receiver is like the sub no TV after you

2122
01:40:05,070 --> 01:40:13,380
you just augments that draft and added

2123
01:40:09,360 --> 01:40:16,589
audio configurations on the receivers on

2124
01:40:13,380 --> 01:40:19,289
the receivers and if you wanna enable

2125
01:40:16,590 --> 01:40:24,030
the mark on line cars the multiple

2126
01:40:19,289 --> 01:40:26,489
originator scenario then you can augment

2127
01:40:24,030 --> 01:40:30,090
the augment the channel configuration

2128
01:40:26,489 --> 01:40:31,829
sounder to China here I think I

2129
01:40:30,090 --> 01:40:33,869
understood that and just sort of restate

2130
01:40:31,829 --> 01:40:35,249
it what you're saying is that the HTTP

2131
01:40:33,869 --> 01:40:37,348
not've draft could actually have two

2132
01:40:35,249 --> 01:40:38,789
augments one to receive who wanted

2133
01:40:37,349 --> 01:40:40,289
Channel and each of those arguments

2134
01:40:38,789 --> 01:40:42,989
could be for instance with a feature

2135
01:40:40,289 --> 01:40:44,820
statement so that you know it's only one

2136
01:40:42,989 --> 01:40:49,919
or the other or maybe both I don't know

2137
01:40:44,820 --> 01:40:52,558
or I think in and no need to do that

2138
01:40:49,919 --> 01:40:55,619
because that the channel configuration

2139
01:40:52,559 --> 01:41:01,610
is also under the receiver right so you

2140
01:40:55,619 --> 01:41:04,860
you just add you just augmented the

2141
01:41:01,610 --> 01:41:06,469
augment your configurations to the

2142
01:41:04,860 --> 01:41:11,860
receiver

2143
01:41:06,469 --> 01:41:13,969
of the sub not've shaft but the

2144
01:41:11,860 --> 01:41:16,969
subscribe notification strap doesn't

2145
01:41:13,969 --> 01:41:20,570
itself how the channels list in it like

2146
01:41:16,969 --> 01:41:23,059
by default and and so yeah devices that

2147
01:41:20,570 --> 01:41:25,639
only implement that RFC he will not be

2148
01:41:23,059 --> 01:41:28,159
having Melissa Janice yes not that is

2149
01:41:25,639 --> 01:41:33,530
the question yeah I realized this

2150
01:41:28,159 --> 01:41:38,210
question then so I initialize I send a

2151
01:41:33,530 --> 01:41:42,079
send email true to you to suggest to

2152
01:41:38,210 --> 01:41:45,320
suggest your transporter document we

2153
01:41:42,079 --> 01:41:49,429
included these channel configurations so

2154
01:41:45,320 --> 01:41:52,239
so that can be compatible of if you only

2155
01:41:49,429 --> 01:41:54,440
enable one channel or multiple channel

2156
01:41:52,239 --> 01:41:57,169
okay

2157
01:41:54,440 --> 01:41:59,329
there can be many notice transports that

2158
01:41:57,170 --> 01:42:02,059
are defined the HTTP notice is just one

2159
01:41:59,329 --> 01:42:03,679
of many possible its begin and and I

2160
01:42:02,059 --> 01:42:06,559
don't think we want each of those notice

2161
01:42:03,679 --> 01:42:11,119
transports to themselves happen to be

2162
01:42:06,559 --> 01:42:13,820
augmenting it and optionally implemented

2163
01:42:11,119 --> 01:42:16,820
channel that's it so it's not the right

2164
01:42:13,820 --> 01:42:19,009
place to do it I think that you're a guy

2165
01:42:16,820 --> 01:42:20,749
can have a data model that augments the

2166
01:42:19,010 --> 01:42:22,880
receiver lists adding in a channel list

2167
01:42:20,749 --> 01:42:25,999
some devices will implement it others

2168
01:42:22,880 --> 01:42:27,590
won't the note of straps we could

2169
01:42:25,999 --> 01:42:29,059
actually have it that they have a

2170
01:42:27,590 --> 01:42:30,619
dependency both to subscribe

2171
01:42:29,059 --> 01:42:32,889
notifications as well as to your draft

2172
01:42:30,619 --> 01:42:35,749
with two arguments and there's a feature

2173
01:42:32,889 --> 01:42:37,449
effectively that the server chooses

2174
01:42:35,749 --> 01:42:40,130
whether or not the note of is a

2175
01:42:37,449 --> 01:42:41,960
augmenting one of the sub the channel

2176
01:42:40,130 --> 01:42:44,239
list if it exists or not I think that's

2177
01:42:41,960 --> 01:42:46,550
what we could do but we can't just hard

2178
01:42:44,239 --> 01:42:48,768
if we move the channel list into the

2179
01:42:46,550 --> 01:42:50,929
HTML oh crap and it's only one of many

2180
01:42:48,769 --> 01:42:53,800
possible future note of that it's not

2181
01:42:50,929 --> 01:42:57,170
the right location for it

2182
01:42:53,800 --> 01:43:00,110
but Angela Erickson I'm confused by a

2183
01:42:57,170 --> 01:43:02,659
statement on this list all potential

2184
01:43:00,110 --> 01:43:06,320
channels are pre-configured so others

2185
01:43:02,659 --> 01:43:11,869
this configuration data perfect route

2186
01:43:06,320 --> 01:43:14,478
notes yes is configuration how do you

2187
01:43:11,869 --> 01:43:17,420
prevent the user to add or remove

2188
01:43:14,479 --> 01:43:19,260
channels that actually exist or are our

2189
01:43:17,420 --> 01:43:21,730
dummy

2190
01:43:19,260 --> 01:43:25,780
we have that problem in the many places

2191
01:43:21,730 --> 01:43:27,849
and have a Erickson specific or 3gpp

2192
01:43:25,780 --> 01:43:33,120
specific solution but what is your

2193
01:43:27,850 --> 01:43:41,410
proposal I actually do not realize your

2194
01:43:33,120 --> 01:43:42,250
problem so I see that all channels are

2195
01:43:41,410 --> 01:43:44,410
pre-configured

2196
01:43:42,250 --> 01:43:48,610
to pre configures and the device itself

2197
01:43:44,410 --> 01:43:52,090
or for device or device to configure all

2198
01:43:48,610 --> 01:43:54,009
the channels but what does what prevents

2199
01:43:52,090 --> 01:43:56,140
the operator from going on and saying

2200
01:43:54,010 --> 01:43:58,180
that there's also balázs channel

2201
01:43:56,140 --> 01:44:00,610
actually there's no such thing but it

2202
01:43:58,180 --> 01:44:03,699
looks like from now on as if it was

2203
01:44:00,610 --> 01:44:05,889
there so how can you prevent someone

2204
01:44:03,699 --> 01:44:08,139
messing up this pre-configured set of

2205
01:44:05,890 --> 01:44:09,640
channels there's two things there's the

2206
01:44:08,140 --> 01:44:11,050
adding of channels to don't exist and

2207
01:44:09,640 --> 01:44:12,820
there's the forgetting to configure

2208
01:44:11,050 --> 01:44:15,480
channels that do exist or removing

2209
01:44:12,820 --> 01:44:18,429
channels that were pre-configured right

2210
01:44:15,480 --> 01:44:21,699
I think maybe the channel is some other

2211
01:44:18,430 --> 01:44:26,020
results just use delivery for eun-jung

2212
01:44:21,699 --> 01:44:28,570
and every reference like an interface to

2213
01:44:26,020 --> 01:44:31,719
be called like a FTP we maybe we can

2214
01:44:28,570 --> 01:44:33,670
specify the outgoing interface we just

2215
01:44:31,719 --> 01:44:37,000
configure the interface but that

2216
01:44:33,670 --> 01:44:38,770
anything master begin the interface

2217
01:44:37,000 --> 01:44:48,520
model and adjust the reference state

2218
01:44:38,770 --> 01:44:50,830
maybe like this okay but that doesn't

2219
01:44:48,520 --> 01:44:52,750
really address the problem I think that

2220
01:44:50,830 --> 01:44:55,059
if you operate ER by even by mistake

2221
01:44:52,750 --> 01:44:57,670
removes a channel will it ever get back

2222
01:44:55,060 --> 01:45:02,590
there or how shall he know that he

2223
01:44:57,670 --> 01:45:05,949
should put it back there you mean just

2224
01:45:02,590 --> 01:45:07,900
configure King to if for he company to

2225
01:45:05,949 --> 01:45:08,879
remove the channel and how to get back

2226
01:45:07,900 --> 01:45:11,589
that sound right

2227
01:45:08,880 --> 01:45:14,050
maybe we should define another typo

2228
01:45:11,590 --> 01:45:18,730
trust of for Vader only for maybe

2229
01:45:14,050 --> 01:45:21,640
another channel for reference maybe so

2230
01:45:18,730 --> 01:45:24,190
we have a comment on jabber from Erik he

2231
01:45:21,640 --> 01:45:28,090
says I support Ken's proposal for multi

2232
01:45:24,190 --> 01:45:30,280
stream originators in its GPS not of you

2233
01:45:28,090 --> 01:45:33,010
can augment subscribe notifications or

2234
01:45:30,280 --> 01:45:39,009
some objects and multi stream

2235
01:45:33,010 --> 01:45:40,650
multiple line cuts are needed thank you

2236
01:45:39,010 --> 01:45:43,450
you're going back to the previous

2237
01:45:40,650 --> 01:45:46,660
comment or discussion I was just we're

2238
01:45:43,450 --> 01:45:48,429
having let's take a step back why do we

2239
01:45:46,660 --> 01:45:51,700
want to have it list the channels at all

2240
01:45:48,430 --> 01:45:54,850
the reason why is because some protocols

2241
01:45:51,700 --> 01:45:56,860
require her channel configuration for

2242
01:45:54,850 --> 01:46:00,220
instance and actually it's questionable

2243
01:45:56,860 --> 01:46:03,009
right but for instance in TCP you may

2244
01:46:00,220 --> 01:46:07,120
want to specify the source IP address on

2245
01:46:03,010 --> 01:46:08,800
a per line basis also for TLS you may

2246
01:46:07,120 --> 01:46:11,800
want to specify the cryptographic

2247
01:46:08,800 --> 01:46:14,770
credentials on per line card basis but

2248
01:46:11,800 --> 01:46:16,840
those are TCP and TLS specifics not all

2249
01:46:14,770 --> 01:46:19,570
notifications transports will

2250
01:46:16,840 --> 01:46:22,810
necessarily have either or any such

2251
01:46:19,570 --> 01:46:25,389
considerations for instance a flat UDP

2252
01:46:22,810 --> 01:46:27,970
let's say syslog or UDP has none of

2253
01:46:25,390 --> 01:46:30,520
these concerns and so a global

2254
01:46:27,970 --> 01:46:32,920
configuration of sits log of e to be for

2255
01:46:30,520 --> 01:46:36,010
instance just going to receive her you

2256
01:46:32,920 --> 01:46:38,080
know augmenting receiver and then the

2257
01:46:36,010 --> 01:46:40,840
could be a global flag that says I want

2258
01:46:38,080 --> 01:46:43,000
the these line cards to be able to send

2259
01:46:40,840 --> 01:46:45,280
syslog a read P straight out the data

2260
01:46:43,000 --> 01:46:46,750
plane and that's it we're done

2261
01:46:45,280 --> 01:46:49,150
it's just a global flag there's no need

2262
01:46:46,750 --> 01:46:53,350
for a per line card configuration of any

2263
01:46:49,150 --> 01:46:56,860
sort right so no so I think let's try to

2264
01:46:53,350 --> 01:46:58,690
take a step back and and you know see

2265
01:46:56,860 --> 01:47:00,549
you how much configuration needs to go

2266
01:46:58,690 --> 01:47:02,259
in there and can we tease out certain

2267
01:47:00,550 --> 01:47:10,930
flags that exist in the global level

2268
01:47:02,260 --> 01:47:12,400
versus for line card bases yeah so so in

2269
01:47:10,930 --> 01:47:16,390
the interest of trying to move this

2270
01:47:12,400 --> 01:47:18,480
draft forward one conversation that the

2271
01:47:16,390 --> 01:47:23,380
chairs were having was to figure out

2272
01:47:18,480 --> 01:47:27,309
maybe we need to put a design team that

2273
01:47:23,380 --> 01:47:30,400
might be helpful for the for the authors

2274
01:47:27,310 --> 01:47:32,560
and if such a design team would informed

2275
01:47:30,400 --> 01:47:35,849
if people here would be interested in

2276
01:47:32,560 --> 01:47:39,970
and of contributing to that design team

2277
01:47:35,850 --> 01:47:43,420
identify the problem may be defined the

2278
01:47:39,970 --> 01:47:46,000
scope of the graph help to move it

2279
01:47:43,420 --> 01:47:47,920
forward that would be one day a week

2280
01:47:46,000 --> 01:47:54,040
would suggest

2281
01:47:47,920 --> 01:47:57,660
how you move to that pole yeah there's a

2282
01:47:54,040 --> 01:47:57,660
design team it's very welcome

2283
01:47:58,080 --> 01:48:02,769
yeah I mean to be clear the work group

2284
01:48:00,970 --> 01:48:04,510
very much wants to adopt the strap we

2285
01:48:02,770 --> 01:48:05,620
think it's important work I shouldn't

2286
01:48:04,510 --> 01:48:10,360
say the watch group I can't speak for

2287
01:48:05,620 --> 01:48:12,340
group chairs niggas I think we welcome

2288
01:48:10,360 --> 01:48:14,559
if I can't say working group we adopted

2289
01:48:12,340 --> 01:48:16,030
you to keep up sub three four because

2290
01:48:14,560 --> 01:48:17,890
this was the use case that we were

2291
01:48:16,030 --> 01:48:19,300
hoping that it was going to solve but in

2292
01:48:17,890 --> 01:48:21,220
the end it turned out to be a UDP

2293
01:48:19,300 --> 01:48:23,080
transport which is actually not so we

2294
01:48:21,220 --> 01:48:25,840
did actually as a working group adopted

2295
01:48:23,080 --> 01:48:28,390
this idea if we want it we need to

2296
01:48:25,840 --> 01:48:30,160
support this so we're trying to get it

2297
01:48:28,390 --> 01:48:31,990
over the line quickly as possible and

2298
01:48:30,160 --> 01:48:35,110
we're just thinking that it might be

2299
01:48:31,990 --> 01:48:38,769
helpful to have a design team um so

2300
01:48:35,110 --> 01:48:41,349
would anybody be willing or to work with

2301
01:48:38,770 --> 01:48:46,030
the author on a design team basis your

2302
01:48:41,350 --> 01:48:49,150
hand yeah I see some hints so that's

2303
01:48:46,030 --> 01:48:50,590
great and you everyone in the race are

2304
01:48:49,150 --> 01:48:56,099
here and send a message to the author so

2305
01:48:50,590 --> 01:48:57,820
they can sync up with rocker think it'll

2306
01:48:56,100 --> 01:49:00,250
okay great thank you

2307
01:48:57,820 --> 01:49:02,950
ah thank you and we need to move to our

2308
01:49:00,250 --> 01:49:05,610
last presentation which is Mahesh should

2309
01:49:02,950 --> 01:49:05,610
be providing

2310
01:49:21,940 --> 01:49:24,750
Shh

2311
01:49:30,020 --> 01:49:32,560
No

2312
01:49:36,530 --> 01:49:39,630
[Music]

2313
01:49:43,369 --> 01:49:51,320
no it's not hollering so I'm going to

2314
01:49:48,320 --> 01:49:54,259
talk about HTTP based transport for

2315
01:49:51,320 --> 01:49:56,119
subscribe notifications so this is the

2316
01:49:54,260 --> 01:49:59,260
case where we talking about configured

2317
01:49:56,119 --> 01:50:03,170
subscriptions next slide please

2318
01:49:59,260 --> 01:50:06,010
so the motivation behind this draft has

2319
01:50:03,170 --> 01:50:10,030
a couple of references have been made

2320
01:50:06,010 --> 01:50:12,590
the SUBSCRIBE notifications draft

2321
01:50:10,030 --> 01:50:14,540
defined the container for receivers but

2322
01:50:12,590 --> 01:50:19,699
kind of left it up to the other drafts

2323
01:50:14,540 --> 01:50:25,909
to actually define the transport so this

2324
01:50:19,699 --> 01:50:28,339
draft tries to do that it's it's simple

2325
01:50:25,909 --> 01:50:30,589
in terms of the fact that we defining

2326
01:50:28,340 --> 01:50:35,349
one well-known transport protocol which

2327
01:50:30,590 --> 01:50:39,170
is HTTP in this case and it's using

2328
01:50:35,349 --> 01:50:42,170
well-known encoding support that is XML

2329
01:50:39,170 --> 01:50:46,099
and JSON used today a bit net content

2330
01:50:42,170 --> 01:50:48,590
has come next slide alright so the

2331
01:50:46,099 --> 01:50:50,570
design is the of course the ability to

2332
01:50:48,590 --> 01:50:55,280
support multiple subscriptions to the

2333
01:50:50,570 --> 01:50:56,750
same HCT it's gtps receiver and the idea

2334
01:50:55,280 --> 01:51:02,110
is that without replicating the

2335
01:50:56,750 --> 01:51:04,580
configuration for a receiver the model

2336
01:51:02,110 --> 01:51:07,699
basically augments the subscribe

2337
01:51:04,580 --> 01:51:09,820
notifications container receiver as you

2338
01:51:07,699 --> 01:51:14,598
see at the bottom on the right side and

2339
01:51:09,820 --> 01:51:17,059
then that augmentation refers to a list

2340
01:51:14,599 --> 01:51:20,060
of receivers or a receiver actually in

2341
01:51:17,060 --> 01:51:24,849
this case and the receiver as we say in

2342
01:51:20,060 --> 01:51:31,099
the module has a list of TCP TLS and

2343
01:51:24,849 --> 01:51:33,460
HTTP parameters that it uses from the

2344
01:51:31,099 --> 01:51:38,030
module at the drafts that Kent has been

2345
01:51:33,460 --> 01:51:41,510
presenting and is working on so that's

2346
01:51:38,030 --> 01:51:44,330
really the sum of the entire draft and I

2347
01:51:41,510 --> 01:51:47,199
know there were a couple of questions on

2348
01:51:44,330 --> 01:51:51,050
the mailing list

2349
01:51:47,199 --> 01:51:53,299
Rashaad cisco why is it called HTTPS and

2350
01:51:51,050 --> 01:51:54,309
not rest conf is that deliberate or is

2351
01:51:53,300 --> 01:51:58,329
that

2352
01:51:54,309 --> 01:52:00,730
yeah I think it is it's gtps meaning

2353
01:51:58,329 --> 01:52:03,579
it's not it doesn't have the heavy pay

2354
01:52:00,730 --> 01:52:10,690
off the rest of the rest conf it's

2355
01:52:03,579 --> 01:52:20,639
mostly its GDP s okay okay I might have

2356
01:52:10,690 --> 01:52:23,259
further questions or not all right no no

2357
01:52:20,639 --> 01:52:26,699
robots in Cisco any thought to using

2358
01:52:23,260 --> 01:52:26,699
binary coding here ah

2359
01:52:28,619 --> 01:52:39,389
good question yes I guess there was that

2360
01:52:34,599 --> 01:52:43,170
draft presented early and co-op is also

2361
01:52:39,389 --> 01:52:46,239
suggesting a binary based notification

2362
01:52:43,170 --> 01:52:50,409
so that's certainly something we could

2363
01:52:46,239 --> 01:52:52,780
consider as a contributor this graph

2364
01:52:50,409 --> 01:52:54,940
actually supports both JSON and XML and

2365
01:52:52,780 --> 01:52:56,679
the way it does so is through this

2366
01:52:54,940 --> 01:52:58,329
describe notifications draft already

2367
01:52:56,679 --> 01:53:01,300
inside that data model there's a leaf

2368
01:52:58,329 --> 01:53:05,110
called encoding Eastern identity with

2369
01:53:01,300 --> 01:53:07,900
Drive types XML JSON in theory it could

2370
01:53:05,110 --> 01:53:10,089
be extended to support binary and then

2371
01:53:07,900 --> 01:53:10,808
it you know here just be binary over

2372
01:53:10,090 --> 01:53:13,409
HTTP

2373
01:53:10,809 --> 01:53:17,170
so we distract herself we don't think

2374
01:53:13,409 --> 01:53:19,299
you know leads to itself you know it's

2375
01:53:17,170 --> 01:53:21,369
it it's already not it's indicating what

2376
01:53:19,300 --> 01:53:22,630
encoding is used being is it just

2377
01:53:21,369 --> 01:53:24,730
inherits it on the subscribes other

2378
01:53:22,630 --> 01:53:29,440
patients trapped okay makes sense okay

2379
01:53:24,730 --> 01:53:34,900
thanks all right

2380
01:53:29,440 --> 01:53:37,719
next slide all right if there are no

2381
01:53:34,900 --> 01:53:41,589
other questions actually in interest of

2382
01:53:37,719 --> 01:53:44,050
full disclosure I and axe and Kent since

2383
01:53:41,590 --> 01:53:49,030
via co-authors on the draft I want to

2384
01:53:44,050 --> 01:53:53,400
step back and have our ad kind of come

2385
01:53:49,030 --> 01:53:53,400
up to ask the remaining two questions

2386
01:53:56,280 --> 01:53:59,950
you can as well doing this well if you

2387
01:53:58,240 --> 01:54:04,990
really insist I can certainly read those

2388
01:53:59,950 --> 01:54:06,880
two I'm sorry right but now you you'll

2389
01:54:04,990 --> 01:54:08,200
be on the video and you can actually see

2390
01:54:06,880 --> 01:54:10,930
the hands that way

2391
01:54:08,200 --> 01:54:12,820
because I'm fine I can actually read

2392
01:54:10,930 --> 01:54:18,340
those two lines if you insist

2393
01:54:12,820 --> 01:54:20,469
so again serious question is the working

2394
01:54:18,340 --> 01:54:23,350
group sees this as the work that is

2395
01:54:20,470 --> 01:54:28,840
needed if the community would eventually

2396
01:54:23,350 --> 01:54:31,110
see this being deployed and used what

2397
01:54:28,840 --> 01:54:37,690
can I see can I see a show of hands

2398
01:54:31,110 --> 01:54:44,009
right if you so about who has who has

2399
01:54:37,690 --> 01:54:46,509
read this document all right now I think

2400
01:54:44,010 --> 01:54:48,610
this needs to be raised into the mailing

2401
01:54:46,510 --> 01:54:51,610
list about adoption please read the

2402
01:54:48,610 --> 01:54:54,309
document and please provide your

2403
01:54:51,610 --> 01:54:57,160
comments and feedback about that from

2404
01:54:54,310 --> 01:54:58,540
from those hands which I ca think it's a

2405
01:54:57,160 --> 01:55:01,150
little bit premature to ask this

2406
01:54:58,540 --> 01:55:09,040
question right now so let's take this to

2407
01:55:01,150 --> 01:55:10,839
the mailing list so I read the draft in

2408
01:55:09,040 --> 01:55:12,460
detail and it's well returned it matches

2409
01:55:10,840 --> 01:55:14,110
well with subscribe notifications can

2410
01:55:12,460 --> 01:55:15,760
all that so it's all good but one thing

2411
01:55:14,110 --> 01:55:18,160
I was asking the restaurant question

2412
01:55:15,760 --> 01:55:21,370
before is we don't actually have an

2413
01:55:18,160 --> 01:55:24,550
HTTPS draft for dynamic subscriptions we

2414
01:55:21,370 --> 01:55:26,800
have net can-can restaurant right so is

2415
01:55:24,550 --> 01:55:28,480
it just configured or is there something

2416
01:55:26,800 --> 01:55:31,140
else for dynamic subscriptions actually

2417
01:55:28,480 --> 01:55:34,000
it's that's the part I'm struggling with

2418
01:55:31,140 --> 01:55:35,650
okay so first I'll thank you Ignace for

2419
01:55:34,000 --> 01:55:39,640
running this question we'll take it to

2420
01:55:35,650 --> 01:55:42,610
the non list and then back to Rashad

2421
01:55:39,640 --> 01:55:48,250
question which you raised before but so

2422
01:55:42,610 --> 01:55:49,990
with a contributor hat on so over the

2423
01:55:48,250 --> 01:55:52,420
course of several a test we didn't race

2424
01:55:49,990 --> 01:55:55,150
and talk about this discussion and

2425
01:55:52,420 --> 01:55:56,770
certainly dynamic descriptions have to

2426
01:55:55,150 --> 01:55:58,450
be restaurant that cough because you're

2427
01:55:56,770 --> 01:56:01,150
coming in over a restaurant for an

2428
01:55:58,450 --> 01:56:03,670
economic connection to begin with with

2429
01:56:01,150 --> 01:56:06,549
configured descriptions is it the best

2430
01:56:03,670 --> 01:56:08,709
choice like if the device is going to

2431
01:56:06,550 --> 01:56:12,789
proactively initiate a connection

2432
01:56:08,709 --> 01:56:15,969
to a receiver would that should that

2433
01:56:12,789 --> 01:56:19,478
connection be of reskin a connection

2434
01:56:15,969 --> 01:56:22,269
which all that into it entails meaning

2435
01:56:19,479 --> 01:56:25,869
it's a full configuration operational

2436
01:56:22,269 --> 01:56:28,420
stage etc type connection do we want all

2437
01:56:25,869 --> 01:56:30,728
that or we were looking for something

2438
01:56:28,420 --> 01:56:33,189
smaller simpler remember this is being

2439
01:56:30,729 --> 01:56:36,130
implemented online cards so it has to be

2440
01:56:33,189 --> 01:56:37,679
simple and and you know and typically

2441
01:56:36,130 --> 01:56:41,260
you know people talk about pushing

2442
01:56:37,679 --> 01:56:43,959
notifications syslog SNMP is sort of the

2443
01:56:41,260 --> 01:56:45,489
baseline what we're doing so the next

2444
01:56:43,959 --> 01:56:51,880
simplest thing that we're thinking is

2445
01:56:45,489 --> 01:56:54,518
HTTP s because it is fairly simple

2446
01:56:51,880 --> 01:56:57,099
protocol and and it doesn't come with it

2447
01:56:54,519 --> 01:56:59,499
any of the extra management overhead of

2448
01:56:57,099 --> 01:57:05,019
oh oh but no rush comecomecome

2449
01:56:59,499 --> 01:57:07,389
okay thanks for dispersion Oh 3gpp has

2450
01:57:05,019 --> 01:57:10,590
recently started defining here yang

2451
01:57:07,389 --> 01:57:14,979
solution set for number four Wyndham

2452
01:57:10,590 --> 01:57:18,059
issues and they actually stated that

2453
01:57:14,979 --> 01:57:20,079
they prefer a configured way of

2454
01:57:18,059 --> 01:57:24,719
subscription you're subscribing to

2455
01:57:20,079 --> 01:57:24,719
notification so I see this is important

2456
01:57:27,300 --> 01:57:35,050
we are three minutes ahead of time

2457
01:57:30,989 --> 01:57:37,749
that's great um yes that's it thank you

2458
01:57:35,050 --> 01:57:39,760
very much for coming to the session of

2459
01:57:37,749 --> 01:57:41,469
course it's lunch now after lunch will

2460
01:57:39,760 --> 01:57:44,559
be met Maude I believe it's in this room

2461
01:57:41,469 --> 01:57:46,239
met mom session one and then a short

2462
01:57:44,559 --> 01:57:47,789
break followed by even that mom session

2463
01:57:46,239 --> 01:57:50,968
two in the room next door

2464
01:57:47,789 --> 01:57:50,969
see you then

