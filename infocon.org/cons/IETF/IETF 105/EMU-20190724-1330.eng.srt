1
00:00:09,530 --> 00:00:15,809
up-gunned I'm going to do that

2
00:00:13,219 --> 00:00:19,130
so everybody seen the note well yet

3
00:00:15,809 --> 00:00:21,259
anybody not see the note well yet I

4
00:00:19,130 --> 00:00:24,689
didn't think so

5
00:00:21,260 --> 00:00:27,710
all right so we have a pretty packed

6
00:00:24,690 --> 00:00:30,060
agenda today with lots of excitement

7
00:00:27,710 --> 00:00:32,040
discussing some working group documents

8
00:00:30,060 --> 00:00:35,040
going through some errata and then a

9
00:00:32,040 --> 00:00:37,769
couple of new items including some

10
00:00:35,040 --> 00:00:41,280
discussion about reach ordering for some

11
00:00:37,769 --> 00:00:45,800
additional items so does anybody have

12
00:00:41,280 --> 00:00:54,989
any changes to the agenda that they

13
00:00:45,800 --> 00:00:57,780
anticipate okay then let's get going so

14
00:00:54,989 --> 00:01:01,288
we have a couple documents that have

15
00:00:57,780 --> 00:01:04,530
been going through the working group

16
00:01:01,289 --> 00:01:11,640
process one of them is ETL s13 I think

17
00:01:04,530 --> 00:01:16,939
John Madson is online and if he wants to

18
00:01:11,640 --> 00:01:16,939
come up and present he can do that

19
00:01:26,780 --> 00:01:37,830
the owner so maybe I can quickly go

20
00:01:34,980 --> 00:01:39,480
through what has changed in the latest

21
00:01:37,830 --> 00:01:42,300
version what were the comments we

22
00:01:39,480 --> 00:01:49,380
received in the last call and what steps

23
00:01:42,300 --> 00:01:52,979
do we plan to take about it so so

24
00:01:49,380 --> 00:01:55,619
basically we agreed that will remove all

25
00:01:52,980 --> 00:02:06,560
the text on other TLS base type method

26
00:01:55,620 --> 00:02:10,440
so there are or now now he's hi yeah

27
00:02:06,560 --> 00:02:12,510
do you hear me yeah we can hear em great

28
00:02:10,440 --> 00:02:16,200
yeah yes didn't know how to end the

29
00:02:12,510 --> 00:02:18,540
presentation mode so yeah we removed all

30
00:02:16,200 --> 00:02:22,320
the text about other TLS based method

31
00:02:18,540 --> 00:02:26,510
according to the decision last meeting

32
00:02:22,320 --> 00:02:31,200
this should move to a separate draft

33
00:02:26,510 --> 00:02:35,190
probably dropped the cookie mu till SCP

34
00:02:31,200 --> 00:02:38,670
types that will be discussed later we

35
00:02:35,190 --> 00:02:42,959
added reference to draw the idft as old

36
00:02:38,670 --> 00:02:46,519
versions this is a draft in the TLS

37
00:02:42,959 --> 00:02:47,760
working group that is updating or fc5

38
00:02:46,520 --> 00:02:52,459
t16

39
00:02:47,760 --> 00:03:00,000
and prohibits use and negotiation of TLS

40
00:02:52,459 --> 00:03:02,790
1.0 and 1 TLS 1.2 bomb so this the TLS

41
00:03:00,000 --> 00:03:07,230
103 draft now reference that and

42
00:03:02,790 --> 00:03:09,929
describes this update it also slightly

43
00:03:07,230 --> 00:03:14,399
changed the language in the text to not

44
00:03:09,930 --> 00:03:18,390
refer to TLS 102 or earlier as they are

45
00:03:14,400 --> 00:03:22,680
or soon will be forbidden to negotiate

46
00:03:18,390 --> 00:03:26,458
in any use of TLS then there is a new

47
00:03:22,680 --> 00:03:28,800
section on hello retry request that's

48
00:03:26,459 --> 00:03:32,160
very straight forward it just describes

49
00:03:28,800 --> 00:03:35,700
this new hello retry requests the

50
00:03:32,160 --> 00:03:36,970
message that TLS 103 introduces so

51
00:03:35,700 --> 00:03:41,049
nobody is so

52
00:03:36,970 --> 00:03:44,020
Christ there are several changes based

53
00:03:41,050 --> 00:03:48,120
on the review by yim shot I think there

54
00:03:44,020 --> 00:03:52,020
is nothing major there's some editorial

55
00:03:48,120 --> 00:03:57,670
recordings and there are some technical

56
00:03:52,020 --> 00:04:02,410
rewording changing from what not to do

57
00:03:57,670 --> 00:04:05,799
to instead what to do and then there are

58
00:04:02,410 --> 00:04:11,970
updated requirements on the ll be tested

59
00:04:05,800 --> 00:04:11,970
by Oleg and what was decided was to

60
00:04:12,180 --> 00:04:26,680
decide what to do but to be flexible in

61
00:04:15,910 --> 00:04:29,260
what clients and servers accept and this

62
00:04:26,680 --> 00:04:32,380
draft went to working less cold without

63
00:04:29,260 --> 00:04:37,140
any comments but after the working group

64
00:04:32,380 --> 00:04:44,320
that's cold was coming by uni Malinin

65
00:04:37,140 --> 00:04:47,349
and the comments where yeah so comments

66
00:04:44,320 --> 00:04:52,659
were about the use of the empty TLS

67
00:04:47,350 --> 00:04:57,010
record as you could see on the last

68
00:04:52,660 --> 00:05:01,290
lurid the TLS 103 allows you to send

69
00:04:57,010 --> 00:05:04,570
this in two different ways either with

70
00:05:01,290 --> 00:05:08,140
the and the problems here is that open

71
00:05:04,570 --> 00:05:11,169
SSL does not support everything in TLS

72
00:05:08,140 --> 00:05:14,710
103 it does not support you to send

73
00:05:11,169 --> 00:05:18,419
completely empty TLS record and it also

74
00:05:14,710 --> 00:05:22,239
it does not currently support the server

75
00:05:18,419 --> 00:05:29,039
sending early application data without

76
00:05:22,240 --> 00:05:35,970
an ex declined first a sent an extension

77
00:05:29,040 --> 00:05:41,880
so this needs to be sold somehow and

78
00:05:35,970 --> 00:05:46,650
also think we can go to the next slide

79
00:05:41,880 --> 00:05:49,840
and then Joni also had more editorial

80
00:05:46,650 --> 00:05:53,138
comments that needs to be changed that

81
00:05:49,840 --> 00:05:54,820
the language it's not really empty and

82
00:05:53,139 --> 00:05:57,460
we should change it to a better

83
00:05:54,820 --> 00:05:59,320
technical description and also that

84
00:05:57,460 --> 00:06:01,120
there's slightly different wording in

85
00:05:59,320 --> 00:06:05,440
the text and the figures that should be

86
00:06:01,120 --> 00:06:08,800
fixed but they're two problems that we

87
00:06:05,440 --> 00:06:11,950
need today decisions on and Joanie and

88
00:06:08,800 --> 00:06:14,910
Alan had quite good discussion on the

89
00:06:11,950 --> 00:06:20,610
list so the first problem is that

90
00:06:14,910 --> 00:06:24,130
OpenSSL 1.1.1 does not support an empty

91
00:06:20,610 --> 00:06:30,930
empty string to be sent as application

92
00:06:24,130 --> 00:06:32,580
data Jonas just use one byte with zeros

93
00:06:30,930 --> 00:06:37,120
instead

94
00:06:32,580 --> 00:06:41,169
and I think Ireland agreed that that was

95
00:06:37,120 --> 00:06:43,720
a good and there is what needs to be

96
00:06:41,169 --> 00:06:46,900
decided here in the group is do we go

97
00:06:43,720 --> 00:06:49,889
with this approach and then do we go

98
00:06:46,900 --> 00:06:54,669
with a single solution or do we allow

99
00:06:49,889 --> 00:06:58,000
the current to or in Surbiton to send

100
00:06:54,669 --> 00:07:01,210
several the server to some different

101
00:06:58,000 --> 00:07:04,390
things and also what how should the

102
00:07:01,210 --> 00:07:08,950
client react if the server some

103
00:07:04,390 --> 00:07:15,880
something unexpected should it ignore it

104
00:07:08,950 --> 00:07:17,680
or him so I think it would be boarding

105
00:07:15,880 --> 00:07:19,539
discussion on the list was to maybe

106
00:07:17,680 --> 00:07:26,160
allow both I think it would be good to

107
00:07:19,539 --> 00:07:30,219
have it as strict as possible maybe I

108
00:07:26,160 --> 00:07:32,770
would suggest going for it zero X zero

109
00:07:30,220 --> 00:07:36,640
zero only describe that that is what you

110
00:07:32,770 --> 00:07:40,060
shall do but then maybe write that you

111
00:07:36,640 --> 00:07:42,990
accept anything else also I would I'm

112
00:07:40,060 --> 00:07:55,740
hesitant to talk about this as a future

113
00:07:42,990 --> 00:07:55,740
extension mechanism any comments on this

114
00:07:59,169 --> 00:08:05,900
so my I agree we should be as strict as

115
00:08:03,259 --> 00:08:08,689
possible but also define how the

116
00:08:05,900 --> 00:08:11,030
implementation should behave when things

117
00:08:08,689 --> 00:08:13,479
don't go as expected so sending one byte

118
00:08:11,030 --> 00:08:16,280
of zeroes is fine

119
00:08:13,479 --> 00:08:17,810
anything else I think there was some

120
00:08:16,280 --> 00:08:19,818
some comment on the list saying that

121
00:08:17,810 --> 00:08:22,849
perhaps that could indicate that there

122
00:08:19,819 --> 00:08:25,250
is other post handshake messages that

123
00:08:22,849 --> 00:08:27,560
that the server is trying to send I

124
00:08:25,250 --> 00:08:29,150
think it makes the implementation more

125
00:08:27,560 --> 00:08:31,129
complex because now you are in this

126
00:08:29,150 --> 00:08:34,880
state that there may be more messages

127
00:08:31,129 --> 00:08:37,130
coming so I I I would prefer to keep

128
00:08:34,880 --> 00:08:39,409
this more strict than just say that once

129
00:08:37,130 --> 00:08:41,299
you are done send this one byte of zero

130
00:08:39,409 --> 00:08:52,040
is to say that okay that's the end of

131
00:08:41,299 --> 00:08:53,959
the handshake so let's try to update a

132
00:08:52,040 --> 00:08:57,099
draft with this if you have any further

133
00:08:53,959 --> 00:09:00,079
comments on the list as soon as possible

134
00:08:57,100 --> 00:09:03,410
then the second problem we need to

135
00:09:00,079 --> 00:09:07,069
discuss is that open SSL does not

136
00:09:03,410 --> 00:09:10,930
support the server to send early

137
00:09:07,070 --> 00:09:15,529
application data to a unauthenticated

138
00:09:10,930 --> 00:09:20,089
client unless the client has sent the

139
00:09:15,529 --> 00:09:23,810
early data extension and the client has

140
00:09:20,089 --> 00:09:28,850
send early data if I understand the

141
00:09:23,810 --> 00:09:32,750
comments on the list fortunately this

142
00:09:28,850 --> 00:09:35,269
can be we don't really know if open SSL

143
00:09:32,750 --> 00:09:37,699
will support change its behavior in the

144
00:09:35,269 --> 00:09:41,899
future and support this feature in

145
00:09:37,699 --> 00:09:45,829
terrace poetry or not but you can get

146
00:09:41,899 --> 00:09:51,110
around this by forcing the server to use

147
00:09:45,829 --> 00:09:54,729
send a new session ticket so we don't

148
00:09:51,110 --> 00:10:00,920
really really need any changes to the

149
00:09:54,730 --> 00:10:07,010
specification should we talk comment

150
00:10:00,920 --> 00:10:08,839
this in some way yes some short note

151
00:10:07,010 --> 00:10:13,220
somewhere that

152
00:10:08,840 --> 00:10:15,590
if at the writing time of writing this

153
00:10:13,220 --> 00:10:18,140
draw song implementation does not

154
00:10:15,590 --> 00:10:21,950
support this and then it can be solved

155
00:10:18,140 --> 00:10:28,330
by forcing a new session ticket or some

156
00:10:21,950 --> 00:10:31,100
other post handshake message Jim shot I

157
00:10:28,330 --> 00:10:33,410
don't like the ideas to need a new

158
00:10:31,100 --> 00:10:35,240
session ticket because the server may

159
00:10:33,410 --> 00:10:38,480
not actually want to send a session

160
00:10:35,240 --> 00:10:41,150
ticket I also don't understand why you

161
00:10:38,480 --> 00:10:45,920
think this is a problem because in the

162
00:10:41,150 --> 00:10:47,800
OpenSSL case they can send the they can

163
00:10:45,920 --> 00:10:51,050
send this message after the quiet

164
00:10:47,800 --> 00:10:54,469
authenticates they just have to send a

165
00:10:51,050 --> 00:10:56,719
send a data record which says I'm done

166
00:10:54,470 --> 00:10:58,190
we're not going to do anything more it

167
00:10:56,720 --> 00:11:01,700
doesn't matter whether it comes before

168
00:10:58,190 --> 00:11:06,860
or after the client authenticates but

169
00:11:01,700 --> 00:11:10,130
the EP s103 documentation right now says

170
00:11:06,860 --> 00:11:13,430
that you must if you don't sending any

171
00:11:10,130 --> 00:11:16,810
post handshake you must send an empty

172
00:11:13,430 --> 00:11:25,729
application data to let the client know

173
00:11:16,810 --> 00:11:27,380
the EAP state it should be in that it

174
00:11:25,730 --> 00:11:30,410
does not have to send that message

175
00:11:27,380 --> 00:11:32,720
before the client authentication

176
00:11:30,410 --> 00:11:39,890
messages come it can send that

177
00:11:32,720 --> 00:11:43,280
afterwards it's just the first

178
00:11:39,890 --> 00:11:45,590
authenticated message from the server to

179
00:11:43,280 --> 00:11:55,490
the client it doesn't matter where in

180
00:11:45,590 --> 00:11:58,850
the sequence it comes I then we need to

181
00:11:55,490 --> 00:12:00,860
if that if to allow dot we need to

182
00:11:58,850 --> 00:12:04,180
rewrite the specification I don't know

183
00:12:00,860 --> 00:12:11,190
how that match with the EAP state

184
00:12:04,180 --> 00:12:13,739
machine maybe

185
00:12:11,190 --> 00:12:17,330
works I mean if it should match just

186
00:12:13,740 --> 00:12:19,740
fine because you would send that message

187
00:12:17,330 --> 00:12:34,010
instead of sending the new session check

188
00:12:19,740 --> 00:12:34,010
out yeah yes okay that's good

189
00:12:34,190 --> 00:12:43,050
okay it's not something we can clarify

190
00:12:36,480 --> 00:12:48,060
on the list yeah I think so that seems

191
00:12:43,050 --> 00:12:52,760
to work them we make it optional when

192
00:12:48,060 --> 00:12:52,760
the client this or server sends this

193
00:12:52,880 --> 00:13:00,780
application data to signal it will not

194
00:12:56,010 --> 00:13:02,880
sin anymore handshake the in open

195
00:13:00,780 --> 00:13:06,000
current version openers cell it will

196
00:13:02,880 --> 00:13:09,810
still introduce an additional round trip

197
00:13:06,000 --> 00:13:14,070
but the server does not need to to send

198
00:13:09,810 --> 00:13:17,959
a new session ticket that seems good yep

199
00:13:14,070 --> 00:13:22,410
I agree I will send the

200
00:13:17,960 --> 00:13:24,720
I will send to the list summary I will

201
00:13:22,410 --> 00:13:27,089
try to implement write it down and and

202
00:13:24,720 --> 00:13:33,810
send it to the list to confirm this and

203
00:13:27,090 --> 00:13:38,040
get more discussion great so I think

204
00:13:33,810 --> 00:13:41,599
yeah once we get that settled I think we

205
00:13:38,040 --> 00:13:44,040
can either see if we need to do another

206
00:13:41,600 --> 00:13:46,110
working group last call but probably we

207
00:13:44,040 --> 00:13:47,670
can just make the revisions and as long

208
00:13:46,110 --> 00:13:49,040
as we don't have any contention we can

209
00:13:47,670 --> 00:13:53,449
move forward

210
00:13:49,040 --> 00:13:53,449
yep sounds good

211
00:14:03,830 --> 00:14:08,390
so here's a the other draft is yours -

212
00:14:06,740 --> 00:14:23,030
John so I'm going to leave you in the

213
00:14:08,390 --> 00:14:25,990
queue so we have submitted the new

214
00:14:23,030 --> 00:14:30,860
version based on comments um and the

215
00:14:25,990 --> 00:14:33,350
changed packets to round trips so

216
00:14:30,860 --> 00:14:36,050
authenticators typically am the

217
00:14:33,350 --> 00:14:38,210
connection after 40 to 50 round clips

218
00:14:36,050 --> 00:14:44,959
not packaged as was stated in the

219
00:14:38,210 --> 00:14:48,230
earlier version we have added short text

220
00:14:44,960 --> 00:14:50,390
about a dirty less based EP methods in

221
00:14:48,230 --> 00:14:55,700
the introduction we earlier to the

222
00:14:50,390 --> 00:14:58,730
decision to change a title to a dirty

223
00:14:55,700 --> 00:15:01,460
less based methods and us now that's

224
00:14:58,730 --> 00:15:05,780
reflected in the introduction then there

225
00:15:01,460 --> 00:15:07,850
is a new section for - for about

226
00:15:05,780 --> 00:15:12,980
suppressing intermediate certificate

227
00:15:07,850 --> 00:15:17,890
this shortly describes a new TLS working

228
00:15:12,980 --> 00:15:20,720
group dropped by Martin Thomson that

229
00:15:17,890 --> 00:15:23,150
allows the client to inform the TLS

230
00:15:20,720 --> 00:15:26,870
server that it has all the intermediates

231
00:15:23,150 --> 00:15:30,079
that at the end that the server ever can

232
00:15:26,870 --> 00:15:33,490
omit sending and the intermediate

233
00:15:30,080 --> 00:15:36,850
certificates their bar there for

234
00:15:33,490 --> 00:15:42,170
reducing the size of the TLS handshake

235
00:15:36,850 --> 00:15:44,480
then we have added text to section 4.3

236
00:15:42,170 --> 00:15:48,020
about updating authenticators this

237
00:15:44,480 --> 00:15:50,980
section existed but it was empty and

238
00:15:48,020 --> 00:15:53,840
this basically describes the reasons why

239
00:15:50,980 --> 00:15:58,490
authenticators might want to limit the

240
00:15:53,840 --> 00:16:00,790
amount of round-trips packets and also

241
00:15:58,490 --> 00:16:06,920
shortly why updating existing

242
00:16:00,790 --> 00:16:12,079
authenticators is hot and this text is

243
00:16:06,920 --> 00:16:17,060
quite a lot up based on the discussion

244
00:16:12,080 --> 00:16:20,780
comments explanation by yoni I think

245
00:16:17,060 --> 00:16:23,060
over a year ago on the mailing list and

246
00:16:20,780 --> 00:16:25,490
the formation of the EMU that's

247
00:16:23,060 --> 00:16:28,119
basically it I think it's in a good

248
00:16:25,490 --> 00:16:31,070
shape quite good shape now all the

249
00:16:28,120 --> 00:16:35,060
carrion all the comments received have

250
00:16:31,070 --> 00:16:37,910
been addressed as far as I know it's

251
00:16:35,060 --> 00:16:39,739
definitely my action item to call for

252
00:16:37,910 --> 00:16:44,270
the adoption so I'll do that immediately

253
00:16:39,740 --> 00:16:51,220
after this meeting and unless there's

254
00:16:44,270 --> 00:16:51,220
somebody objects here okay perfect okay

255
00:16:54,100 --> 00:17:28,180
all right okay

256
00:17:07,240 --> 00:17:36,980
eeep session ID not a lot new since the

257
00:17:28,180 --> 00:17:39,290
previous draft just restating but know

258
00:17:36,980 --> 00:17:40,540
you're popped up in the queue or we

259
00:17:39,290 --> 00:17:43,580
didn't see it before

260
00:17:40,540 --> 00:17:46,240
well I was commenting on something like

261
00:17:43,580 --> 00:17:50,600
a half an hour ago

262
00:17:46,240 --> 00:17:54,880
I'm not relating to this okay well we'll

263
00:17:50,600 --> 00:18:03,020
put you back in in the after this if you

264
00:17:54,880 --> 00:18:04,550
okay okay so session ID this problem

265
00:18:03,020 --> 00:18:10,250
statement hasn't been defined for fast

266
00:18:04,550 --> 00:18:12,560
reification likely vendor eat methods

267
00:18:10,250 --> 00:18:14,210
have the same problem I tried pinging

268
00:18:12,560 --> 00:18:16,010
some people haven't got response so I

269
00:18:14,210 --> 00:18:18,730
suspect most of the vendor eat methods

270
00:18:16,010 --> 00:18:18,730
are dead at this point

271
00:18:19,390 --> 00:18:26,450
draft has minor changes from zero zero

272
00:18:23,890 --> 00:18:30,410
updates to eat sim noting that there may

273
00:18:26,450 --> 00:18:31,970
be a varying number of triplets

274
00:18:30,410 --> 00:18:35,540
other than that there hasn't really been

275
00:18:31,970 --> 00:18:42,020
much in the way of comments or negative

276
00:18:35,540 --> 00:18:45,379
feedback but I'll wait now I think we

277
00:18:42,020 --> 00:18:47,990
should adopt and do last call as soon as

278
00:18:45,380 --> 00:18:49,820
possible I had one other comment can we

279
00:18:47,990 --> 00:18:52,750
change the title because now it says

280
00:18:49,820 --> 00:18:54,950
session ID derivation for EEP and not

281
00:18:52,750 --> 00:18:57,020
like can we make it a little bit more

282
00:18:54,950 --> 00:18:58,880
specific because otherwise it feels like

283
00:18:57,020 --> 00:19:06,129
this is this draft defines how to drive

284
00:18:58,880 --> 00:19:06,130
session ID for all eat methods sure okay

285
00:19:12,490 --> 00:19:22,790
okay so we'll start the call for

286
00:19:15,350 --> 00:19:25,280
adoption after this meeting do we want

287
00:19:22,790 --> 00:19:38,710
it Bernard did you want to come to the

288
00:19:25,280 --> 00:19:38,710
mic all right don't

289
00:19:44,030 --> 00:19:53,000
all right well go to the next so we have

290
00:19:50,230 --> 00:19:56,060
for the also have another draft that's

291
00:19:53,000 --> 00:20:01,360
waiting for adoption and has gotten some

292
00:19:56,060 --> 00:20:06,590
support but there were IPR issues raised

293
00:20:01,360 --> 00:20:08,000
against EEP aka PFS so we had some

294
00:20:06,590 --> 00:20:12,860
discussion on the list

295
00:20:08,000 --> 00:20:15,620
a while back beginning of this year but

296
00:20:12,860 --> 00:20:19,070
no other alternatives have been proposed

297
00:20:15,620 --> 00:20:21,169
for this work item in general there is

298
00:20:19,070 --> 00:20:23,810
consensus that this document is needed

299
00:20:21,170 --> 00:20:26,990
and should move forward and in addition

300
00:20:23,810 --> 00:20:29,840
this IPR situation isn't any different

301
00:20:26,990 --> 00:20:33,140
than what's for essentially a KN aka

302
00:20:29,840 --> 00:20:36,470
prime and the document is targeted for

303
00:20:33,140 --> 00:20:38,480
an informational document so my proposal

304
00:20:36,470 --> 00:20:42,080
is that we accept this as a working

305
00:20:38,480 --> 00:20:44,890
group item unless there's people are

306
00:20:42,080 --> 00:20:52,159
wanting to object

307
00:20:44,890 --> 00:20:54,020
anybody here wishing to object Roman

308
00:20:52,160 --> 00:20:55,640
Tunisia was the responsible ID not

309
00:20:54,020 --> 00:20:57,560
objecting I just didn't watch the

310
00:20:55,640 --> 00:20:59,240
process when we did the call for

311
00:20:57,560 --> 00:21:13,879
adoption did we explicitly kind of call

312
00:20:59,240 --> 00:21:18,790
out the IPR yeah yeah yeah okay

313
00:21:13,880 --> 00:21:18,790
yari did you have some slides I believe

314
00:21:21,460 --> 00:21:28,760
so I had slides on the other one not not

315
00:21:24,500 --> 00:21:37,610
the PFS right yeah this is RFC 54 48

316
00:21:28,760 --> 00:21:39,590
this okay so just real quick so this has

317
00:21:37,610 --> 00:21:43,250
gone through working group last call and

318
00:21:39,590 --> 00:21:45,550
there's been some feedback from from

319
00:21:43,250 --> 00:21:49,730
that as well as feedback from various

320
00:21:45,550 --> 00:21:54,500
IETF and 3gpp participants and as well

321
00:21:49,730 --> 00:21:58,539
as importantly implementer feedback and

322
00:21:54,500 --> 00:22:01,570
so we published a new verb

323
00:21:58,539 --> 00:22:05,469
before the deadlines and and that new

324
00:22:01,570 --> 00:22:11,649
version has a few sort of relatively

325
00:22:05,469 --> 00:22:13,690
minor changes we had in the security

326
00:22:11,649 --> 00:22:17,458
considerations to XP mistakenly had said

327
00:22:13,690 --> 00:22:20,200
that must not communicate the the

328
00:22:17,459 --> 00:22:23,919
privacy friendly identifier and must

329
00:22:20,200 --> 00:22:26,109
communicate the you know permanent

330
00:22:23,919 --> 00:22:28,450
identity of the user and that of course

331
00:22:26,109 --> 00:22:30,218
it was exactly the other way around

332
00:22:28,450 --> 00:22:32,969
fortunately that was said the correct

333
00:22:30,219 --> 00:22:34,899
way elsewhere in the document not in the

334
00:22:32,969 --> 00:22:36,909
security considerations part so we

335
00:22:34,899 --> 00:22:38,529
changed that that's a big bug but

336
00:22:36,909 --> 00:22:41,859
hopefully people understood the other

337
00:22:38,529 --> 00:22:44,409
parts we also changed because we were

338
00:22:41,859 --> 00:22:46,059
sort of carefully going through the 3gpp

339
00:22:44,409 --> 00:22:50,200
specifications and the idea

340
00:22:46,059 --> 00:22:52,059
specifications and the some cases for

341
00:22:50,200 --> 00:22:53,349
like what do you need to do in you know

342
00:22:52,059 --> 00:22:57,249
when you receive different types of

343
00:22:53,349 --> 00:23:01,269
identifiers requests you know in a 5g

344
00:22:57,249 --> 00:23:03,249
network and the 3gpp language talked

345
00:23:01,269 --> 00:23:05,229
about you know you shall do this and

346
00:23:03,249 --> 00:23:08,259
that and and our previous text was

347
00:23:05,229 --> 00:23:13,450
should do change it to a must to match

348
00:23:08,259 --> 00:23:16,059
better the 3gpp language we also added

349
00:23:13,450 --> 00:23:18,339
an attribute table and we've not had an

350
00:23:16,059 --> 00:23:20,829
attribute table so you know a table of

351
00:23:18,339 --> 00:23:22,690
attributes where they must appear what

352
00:23:20,829 --> 00:23:24,879
attributes can and may appear and

353
00:23:22,690 --> 00:23:31,049
different messages and that did not

354
00:23:24,879 --> 00:23:35,799
exist for 54:48 before it did exist for

355
00:23:31,049 --> 00:23:39,399
4187 so we took that added the entries

356
00:23:35,799 --> 00:23:41,079
that belong to EI PA K Prime just to be

357
00:23:39,399 --> 00:23:44,559
sort of crystal clear you know what's

358
00:23:41,079 --> 00:23:46,899
what's needed and and what's not so

359
00:23:44,559 --> 00:23:48,459
there's a actually two attribute tables

360
00:23:46,899 --> 00:23:53,168
depending on the situation that you're

361
00:23:48,459 --> 00:23:56,079
in and yeah that's at least I personally

362
00:23:53,169 --> 00:23:59,200
felt that that's that's useful there

363
00:23:56,079 --> 00:24:02,129
were some attacks of course I mean the

364
00:23:59,200 --> 00:24:05,619
aka protocol receives quite a lot of

365
00:24:02,129 --> 00:24:08,168
interest from the academic community so

366
00:24:05,619 --> 00:24:11,139
different side to security problems or

367
00:24:08,169 --> 00:24:13,600
potential problems are I looked at over

368
00:24:11,140 --> 00:24:14,890
and a couple more attacks have been

369
00:24:13,600 --> 00:24:17,679
discussed now in the security

370
00:24:14,890 --> 00:24:20,380
consideration sections including what

371
00:24:17,680 --> 00:24:24,160
the impact or lack thereof might be so

372
00:24:20,380 --> 00:24:26,260
do take a look at that there's some more

373
00:24:24,160 --> 00:24:28,810
really minor things we just you know

374
00:24:26,260 --> 00:24:30,670
made absolutely sure that we say what to

375
00:24:28,810 --> 00:24:33,639
do with the length field calculations or

376
00:24:30,670 --> 00:24:34,930
we say things more explicitly now we

377
00:24:33,640 --> 00:24:39,210
clarified a little bit the language

378
00:24:34,930 --> 00:24:43,440
around the 80 KDF negotiation procedure

379
00:24:39,210 --> 00:24:45,790
as well as what to do in the case of the

380
00:24:43,440 --> 00:24:50,170
synchronization failure messages and and

381
00:24:45,790 --> 00:24:52,060
at 80 KDF attribute and then a hugely

382
00:24:50,170 --> 00:24:54,130
controversial change i'm sure we moved

383
00:24:52,060 --> 00:24:56,050
from decimal to hexadecimal for the e

384
00:24:54,130 --> 00:24:59,230
type values just to make sure that

385
00:24:56,050 --> 00:25:01,870
different documents are in line with

386
00:24:59,230 --> 00:25:03,700
each other and then some reference

387
00:25:01,870 --> 00:25:09,909
updates and editorial clarification so

388
00:25:03,700 --> 00:25:11,890
that's that's basically it people have

389
00:25:09,910 --> 00:25:13,300
any particular points to raise here

390
00:25:11,890 --> 00:25:15,640
about these changes or other other

391
00:25:13,300 --> 00:25:18,490
things we can we can have some

392
00:25:15,640 --> 00:25:22,060
discussion I think I don't think these

393
00:25:18,490 --> 00:25:23,260
require any sort of re process in the in

394
00:25:22,060 --> 00:25:26,710
the working group so from my perspective

395
00:25:23,260 --> 00:25:29,020
the next step is that share should send

396
00:25:26,710 --> 00:25:33,070
a pop request to to ist and then that

397
00:25:29,020 --> 00:25:34,530
process should should start yeah that's

398
00:25:33,070 --> 00:25:37,360
it

399
00:25:34,530 --> 00:25:42,040
any comments on this and no working

400
00:25:37,360 --> 00:25:52,300
group anybody not think this is ready

401
00:25:42,040 --> 00:25:54,850
for is G okay thanks thank you so

402
00:25:52,300 --> 00:25:57,970
Danielle amigo I would think yeah the

403
00:25:54,850 --> 00:25:59,080
document seems to read it to me I just

404
00:25:57,970 --> 00:26:00,910
have one question which is who's

405
00:25:59,080 --> 00:26:04,169
reviewed the document at this point for

406
00:26:00,910 --> 00:26:08,620
for that particular question

407
00:26:04,170 --> 00:26:15,490
Elliot how many people have reviewed the

408
00:26:08,620 --> 00:26:17,770
document yeah two three four five and

409
00:26:15,490 --> 00:26:20,770
and also outside this room we had a fair

410
00:26:17,770 --> 00:26:22,300
bit of sort of that Ericsson team

411
00:26:20,770 --> 00:26:25,980
looking at this as well as various

412
00:26:22,300 --> 00:26:25,980
people from Fiji BP other companies

413
00:26:29,550 --> 00:26:34,200
okay so we've had a there's been some

414
00:26:32,230 --> 00:26:55,000
review of the document thanks Eliot

415
00:26:34,200 --> 00:27:08,260
thank you alright so next on the agenda

416
00:26:55,000 --> 00:27:11,170
is uni has been busy working on a cheap

417
00:27:08,260 --> 00:27:15,879
implementation apparently and he filed

418
00:27:11,170 --> 00:27:17,290
some errata against the t p-- RFC so

419
00:27:15,880 --> 00:27:19,120
there was already exists there were some

420
00:27:17,290 --> 00:27:21,100
existing arad already there these two

421
00:27:19,120 --> 00:27:23,050
that i have on here what i want to try

422
00:27:21,100 --> 00:27:24,939
to do is go through some of these here

423
00:27:23,050 --> 00:27:26,950
and see if anybody has any opinions on

424
00:27:24,940 --> 00:27:29,820
them I have a feeling that some of them

425
00:27:26,950 --> 00:27:31,960
will need to take to the list to

426
00:27:29,820 --> 00:27:33,429
continue well continued discussion on

427
00:27:31,960 --> 00:27:38,380
the list because they're a little bit

428
00:27:33,430 --> 00:27:40,810
complicated but these first errata seem

429
00:27:38,380 --> 00:27:46,630
pretty straightforward and that the

430
00:27:40,810 --> 00:27:50,590
function signature for the TLS PRF was

431
00:27:46,630 --> 00:27:52,450
represented incorrectly and so these are

432
00:27:50,590 --> 00:27:54,639
just as pretty straightforward changes

433
00:27:52,450 --> 00:27:57,820
that were reported these were reported a

434
00:27:54,640 --> 00:28:00,070
while ago so my proposal is to accept

435
00:27:57,820 --> 00:28:04,510
these changes is that believe it's just

436
00:28:00,070 --> 00:28:09,700
a you know a kind of a mistaken in that

437
00:28:04,510 --> 00:28:12,190
function signature so I already posted

438
00:28:09,700 --> 00:28:16,150
this to the list if somebody could take

439
00:28:12,190 --> 00:28:18,580
a look and make sure that what that this

440
00:28:16,150 --> 00:28:20,830
looks correct and respond that would be

441
00:28:18,580 --> 00:28:24,879
great and then we believe that process

442
00:28:20,830 --> 00:28:28,080
is to tell Roman and then he can do

443
00:28:24,880 --> 00:28:28,080
whatever magic it takes

444
00:28:35,590 --> 00:28:48,980
yeah there I cover which yes sorry and

445
00:28:46,970 --> 00:28:57,770
so there was no objection to adopting

446
00:28:48,980 --> 00:29:01,580
the document so yeah the next errata was

447
00:28:57,770 --> 00:29:04,100
one filed by uni there's some conflict

448
00:29:01,580 --> 00:29:07,970
between the authority ID which is an

449
00:29:04,100 --> 00:29:12,949
outer TLD in teep was currently marked

450
00:29:07,970 --> 00:29:14,270
as being mandatory but there's another

451
00:29:12,950 --> 00:29:18,770
section of the document that said all

452
00:29:14,270 --> 00:29:20,480
outer TL B's must be optional this seems

453
00:29:18,770 --> 00:29:24,889
like a pretty straightforward change to

454
00:29:20,480 --> 00:29:28,970
make the authority ID optional so unless

455
00:29:24,890 --> 00:29:38,960
somebody has does anybody have an

456
00:29:28,970 --> 00:29:42,200
opinion on that in this room why was it

457
00:29:38,960 --> 00:29:50,210
is there any logic as to why it was a

458
00:29:42,200 --> 00:29:53,840
must in the first place yeah that's a

459
00:29:50,210 --> 00:29:58,900
good question I don't know for certain I

460
00:29:53,840 --> 00:29:58,899
think it was a fast has a similar

461
00:29:59,020 --> 00:30:07,850
construct and it may have been marked

462
00:30:01,760 --> 00:30:09,830
mandatory and you fast this is something

463
00:30:07,850 --> 00:30:11,570
we'll continue the discussion on the

464
00:30:09,830 --> 00:30:17,540
list I just want to see if there's any

465
00:30:11,570 --> 00:30:20,240
discussion to be had here but I assume

466
00:30:17,540 --> 00:30:22,490
there is text on what to do when some

467
00:30:20,240 --> 00:30:26,120
theories are not there so what should an

468
00:30:22,490 --> 00:30:29,120
implementation do when these optional

469
00:30:26,120 --> 00:30:36,350
things are not there I haven't read the

470
00:30:29,120 --> 00:30:40,289
full spec myself so doing the

471
00:30:36,350 --> 00:30:42,149
implementation right now okay

472
00:30:40,289 --> 00:30:45,330
a little bit of time on this unless

473
00:30:42,149 --> 00:30:46,678
there's a rush to do it we can verify as

474
00:30:45,330 --> 00:30:48,960
we're going through our representation

475
00:30:46,679 --> 00:30:50,820
now that would be awesome so yeah with

476
00:30:48,960 --> 00:30:53,610
all of these this is something if you

477
00:30:50,820 --> 00:30:56,668
guys when you get to this point your

478
00:30:53,610 --> 00:31:02,600
implementation I be great to get the

479
00:30:56,669 --> 00:31:10,289
comments out on the list Thanks

480
00:31:02,600 --> 00:31:16,320
so similarly there were some confusion

481
00:31:10,289 --> 00:31:19,200
as to the intermediate result to TLB and

482
00:31:16,320 --> 00:31:21,928
you only proposed a you know

483
00:31:19,200 --> 00:31:25,529
clarification in the wording here and

484
00:31:21,929 --> 00:31:29,159
clarifying what the authentication

485
00:31:25,529 --> 00:31:30,809
method text you know how we define an

486
00:31:29,159 --> 00:31:32,850
authentication method versus a non

487
00:31:30,809 --> 00:31:35,190
authenticating method so each identity

488
00:31:32,850 --> 00:31:39,779
versus a method that performs an

489
00:31:35,190 --> 00:31:42,269
authentication I think this is pretty

490
00:31:39,779 --> 00:31:43,830
straightforward my pearls would be to

491
00:31:42,269 --> 00:31:46,379
accept but if there are people

492
00:31:43,830 --> 00:31:49,019
implementing at this time I'd like to

493
00:31:46,379 --> 00:31:52,709
you know we can certainly hold off until

494
00:31:49,019 --> 00:31:54,889
the implementations implementers come

495
00:31:52,710 --> 00:31:54,889
back

496
00:32:08,640 --> 00:32:11,700
I mean if we're gonna be waiting Roman

497
00:32:10,380 --> 00:32:13,320
didn't forgive me waiting for the last

498
00:32:11,700 --> 00:32:15,059
one based on implementation I see no

499
00:32:13,320 --> 00:32:17,250
reason why we couldn't just batch a

500
00:32:15,059 --> 00:32:19,889
couple of them waiting but we should set

501
00:32:17,250 --> 00:32:21,720
a deed that we would go forward even if

502
00:32:19,890 --> 00:32:24,330
we don't hear from the implementers okay

503
00:32:21,720 --> 00:32:26,929
yeah we'll work with that off the list

504
00:32:24,330 --> 00:32:30,480
and see what the what the schedules are

505
00:32:26,929 --> 00:32:32,429
but because it is pretty important to

506
00:32:30,480 --> 00:32:35,100
move or because I know uni is waiting on

507
00:32:32,429 --> 00:32:36,690
his implementation so if we can kind of

508
00:32:35,100 --> 00:32:41,699
try to get these questions resolved that

509
00:32:36,690 --> 00:32:46,730
would be helpful the next one is the

510
00:32:41,700 --> 00:32:49,590
compound Mack is specified as 20 bytes

511
00:32:46,730 --> 00:32:53,899
which is kind of fixed to this length of

512
00:32:49,590 --> 00:32:58,980
sha-1 sha-1 is no longer used by most

513
00:32:53,899 --> 00:33:02,459
TLS cipher suites so we need to decide

514
00:32:58,980 --> 00:33:04,980
what to do here it could either be I

515
00:33:02,460 --> 00:33:08,330
think you Oni said his simple fix was

516
00:33:04,980 --> 00:33:11,580
just to truncate the the max to 20 bytes

517
00:33:08,330 --> 00:33:16,918
it seems like maybe would be better to

518
00:33:11,580 --> 00:33:20,399
have a variable length Mac that would be

519
00:33:16,919 --> 00:33:23,519
my preference this is something we can

520
00:33:20,399 --> 00:33:26,279
probably discuss Elliot if we can work

521
00:33:23,519 --> 00:33:28,500
with your implementers to to kind of

522
00:33:26,279 --> 00:33:34,429
work through this issue as to what seems

523
00:33:28,500 --> 00:33:34,429
to be the best that would be great

524
00:33:35,929 --> 00:33:43,889
the same thing up Roman no Roman to you

525
00:33:42,630 --> 00:33:45,320
again again with kind of all these my

526
00:33:43,889 --> 00:33:58,709
question is do we want to put a timer on

527
00:33:45,320 --> 00:34:01,830
trying to get a response I would say you

528
00:33:58,710 --> 00:34:03,870
know September September 1 September 15

529
00:34:01,830 --> 00:34:07,168
you want to just resolve by the time out

530
00:34:03,870 --> 00:34:11,339
that there's thinking before Singapore

531
00:34:07,169 --> 00:34:14,810
yeah yeah wait we definitely want to

532
00:34:11,339 --> 00:34:14,810
have these resolved by single port

533
00:34:21,340 --> 00:34:27,500
and then there were some questions about

534
00:34:23,630 --> 00:34:32,690
the inter me the kind of session key

535
00:34:27,500 --> 00:34:34,040
derivation this is kind of very vague in

536
00:34:32,690 --> 00:34:37,370
the draft because there are

537
00:34:34,040 --> 00:34:43,639
implementations that may support an msk

538
00:34:37,370 --> 00:34:46,489
and an extended msk so this and the

539
00:34:43,639 --> 00:34:51,859
instructions on how to construct the

540
00:34:46,489 --> 00:34:53,719
secret aren't complete so there's a lot

541
00:34:51,860 --> 00:34:56,810
of questions as to how it how it should

542
00:34:53,719 --> 00:35:00,020
be done I think this can be just I think

543
00:34:56,810 --> 00:35:01,580
the this needs to be it can be worked

544
00:35:00,020 --> 00:35:08,840
through but it needs to be clarified in

545
00:35:01,580 --> 00:35:12,350
the draft how it works and then finally

546
00:35:08,840 --> 00:35:17,150
what to do if there is no key generating

547
00:35:12,350 --> 00:35:20,810
method executed the the draft does not

548
00:35:17,150 --> 00:35:28,570
specify what the compound Mack key is in

549
00:35:20,810 --> 00:35:32,029
that case what CM k0 and so presumably

550
00:35:28,570 --> 00:35:33,680
there's a couple options here but we

551
00:35:32,030 --> 00:35:37,520
just need to decide which one it is and

552
00:35:33,680 --> 00:35:39,919
then do that so the the changes here or

553
00:35:37,520 --> 00:35:43,390
could you know are significant in that

554
00:35:39,920 --> 00:35:47,180
they do in fact interoperability and

555
00:35:43,390 --> 00:35:49,129
implementations and so we'd like to get

556
00:35:47,180 --> 00:35:51,350
these resolved and then we can certainly

557
00:35:49,130 --> 00:35:54,890
file their errata then the question

558
00:35:51,350 --> 00:36:00,920
would be is if we want to open up fit

559
00:35:54,890 --> 00:36:03,339
the the RFC 7170 to see if if we want to

560
00:36:00,920 --> 00:36:07,210
make these make a revision to fix these

561
00:36:03,340 --> 00:36:07,210
but I think we can wait on that

562
00:36:12,250 --> 00:36:17,839
so you know one of the things that I

563
00:36:15,559 --> 00:36:20,269
think that ties to is our presentation a

564
00:36:17,839 --> 00:36:22,069
little bit in terms of ETA risky one of

565
00:36:20,269 --> 00:36:24,709
the reasons that it does is that

566
00:36:22,069 --> 00:36:28,549
essentially keepers you sort of set out

567
00:36:24,710 --> 00:36:30,109
to do what he was planning to do anyway

568
00:36:28,549 --> 00:36:32,470
if we're going to open up that document

569
00:36:30,109 --> 00:36:35,319
we just cram our stuff into that then

570
00:36:32,470 --> 00:36:38,419
but otherwise we just do it as each

571
00:36:35,319 --> 00:36:40,369
extensions and I'm I'm sort of easy as

572
00:36:38,420 --> 00:36:41,779
to how we go about that right if

573
00:36:40,369 --> 00:36:43,640
whatever whatever they were working for

574
00:36:41,779 --> 00:36:44,539
plots I think the real question is

575
00:36:43,640 --> 00:36:47,629
whether people want to do the

576
00:36:44,539 --> 00:36:57,579
implementation along with us decreasing

577
00:36:47,630 --> 00:37:00,529
stuff you know at the base level oh and

578
00:36:57,579 --> 00:37:02,269
and there's more to it maybe that

579
00:37:00,529 --> 00:37:10,309
question you should defer until of my

580
00:37:02,269 --> 00:37:13,758
presentation okay this is a lunch that

581
00:37:10,309 --> 00:37:19,339
will follow up to that I know my next

582
00:37:13,759 --> 00:37:21,890
document talks about fixing t4 TLS 1.3

583
00:37:19,339 --> 00:37:25,220
but if it doesn't sort of mostly work

584
00:37:21,890 --> 00:37:27,140
for TLS 1.2 right now I'd be more than

585
00:37:25,220 --> 00:37:28,759
happy to remove that text from the

586
00:37:27,140 --> 00:37:31,190
document because almost I have no idea

587
00:37:28,759 --> 00:37:33,859
what it should say and there has been

588
00:37:31,190 --> 00:37:36,500
very little feedback so I'm happy just

589
00:37:33,859 --> 00:37:42,009
to remove that push it off to a tee bids

590
00:37:36,500 --> 00:37:42,009
or T updates or something okay

591
00:37:46,710 --> 00:37:54,630
all right so I think that anybody have

592
00:37:49,990 --> 00:37:55,779
any other discussion items for teep teep

593
00:37:54,630 --> 00:38:00,880
errata

594
00:37:55,780 --> 00:38:15,430
all right then we'll move on to oh yeah

595
00:38:00,880 --> 00:38:18,359
we can do your so hopefully this should

596
00:38:15,430 --> 00:38:21,879
be pretty simple

597
00:38:18,359 --> 00:38:26,859
so again key derivation has changed in

598
00:38:21,880 --> 00:38:30,400
TLS 1.3 most of this is pretty easy fast

599
00:38:26,859 --> 00:38:34,390
and cheap have a much more complex key

600
00:38:30,400 --> 00:38:36,789
derivation so if we can punt on that

601
00:38:34,390 --> 00:38:42,970
specifically for teep that makes this

602
00:38:36,789 --> 00:38:47,130
document pretty trivial eat fast i fewer

603
00:38:42,970 --> 00:38:50,879
opinions on that's mostly historical

604
00:38:47,130 --> 00:38:54,130
cisco thing i guess the question for

605
00:38:50,880 --> 00:38:56,200
cisco maybe nancy or some elliot or

606
00:38:54,130 --> 00:38:59,230
someone else is whether you have

607
00:38:56,200 --> 00:39:01,629
opinions on this and what should be done

608
00:38:59,230 --> 00:39:03,400
or perhaps there could be just a

609
00:39:01,630 --> 00:39:11,319
statement saying yeah I don't use eat

610
00:39:03,400 --> 00:39:12,640
fast with TLS 1.3 Elliot here I don't

611
00:39:11,319 --> 00:39:16,359
have an opinion personally but I'll

612
00:39:12,640 --> 00:39:19,569
think about thanks on the so short

613
00:39:16,359 --> 00:39:22,630
solution is they were some small changes

614
00:39:19,569 --> 00:39:26,440
to eat TLS key derivations and now

615
00:39:22,630 --> 00:39:29,380
unlike the previous eat methods in TLS

616
00:39:26,440 --> 00:39:32,829
1.2 all the key derivation is the same

617
00:39:29,380 --> 00:39:34,900
for all the TLS based eat methods with

618
00:39:32,829 --> 00:39:36,549
the exception of the other ones so that

619
00:39:34,900 --> 00:39:40,420
just makes things much much simpler for

620
00:39:36,549 --> 00:39:44,650
implementers not really a lot of

621
00:39:40,420 --> 00:39:47,589
security considerations lots of issues

622
00:39:44,650 --> 00:39:51,730
with EEP in TLS but some minor ones that

623
00:39:47,589 --> 00:39:55,390
need discussing here and as the question

624
00:39:51,730 --> 00:39:57,130
is tiba right I'm I think I'm happy to

625
00:39:55,390 --> 00:39:59,319
pull that out and push it off on to a

626
00:39:57,130 --> 00:40:00,640
teep document because it looks like so

627
00:39:59,320 --> 00:40:03,160
everyone's implementing it and

628
00:40:00,640 --> 00:40:05,350
discovering all kinds of issues with it

629
00:40:03,160 --> 00:40:08,529
and so we can simplify this document so

630
00:40:05,350 --> 00:40:10,839
if we pull the TT p-- and maybe have a

631
00:40:08,530 --> 00:40:14,170
simple comment for fast then this

632
00:40:10,840 --> 00:40:15,400
document becomes very very trivial and

633
00:40:14,170 --> 00:40:27,520
we should be able to publish it pretty

634
00:40:15,400 --> 00:40:32,530
quickly questions No all right all right

635
00:40:27,520 --> 00:40:42,430
so now we'll move on to our reach our

636
00:40:32,530 --> 00:40:44,050
during discussion sure so over the last

637
00:40:42,430 --> 00:40:47,470
couple of five years we have had several

638
00:40:44,050 --> 00:40:50,830
new drafts which don't necessarily are

639
00:40:47,470 --> 00:40:56,200
unnecessarily covered by by the existing

640
00:40:50,830 --> 00:40:58,750
charter so the draft that Alan presented

641
00:40:56,200 --> 00:41:01,000
just now it's somewhat covered but but

642
00:40:58,750 --> 00:41:04,360
it would be nice to clarify the charter

643
00:41:01,000 --> 00:41:07,750
text further we as you saw we discussed

644
00:41:04,360 --> 00:41:09,520
several deep deep aratus and perhaps it

645
00:41:07,750 --> 00:41:12,040
would make sense to open that document

646
00:41:09,520 --> 00:41:15,160
and fix those things especially if

647
00:41:12,040 --> 00:41:18,670
people are implementing it so perhaps

648
00:41:15,160 --> 00:41:22,020
including that on the Charter would make

649
00:41:18,670 --> 00:41:25,510
sense also we have had like a couple of

650
00:41:22,020 --> 00:41:28,140
drop drawers which are completely out of

651
00:41:25,510 --> 00:41:32,050
the current charters one has been this

652
00:41:28,140 --> 00:41:35,680
OB authentication for EEP which is draft

653
00:41:32,050 --> 00:41:39,310
outer loop and then also a couple of

654
00:41:35,680 --> 00:41:41,290
drafts that try to try to do things

655
00:41:39,310 --> 00:41:43,330
where you start with certain credentials

656
00:41:41,290 --> 00:41:45,610
and and then you end with certain other

657
00:41:43,330 --> 00:41:49,270
types of credentials so let's say you

658
00:41:45,610 --> 00:41:52,170
start with certificates that are put by

659
00:41:49,270 --> 00:41:54,250
one guy and then after you run EEP

660
00:41:52,170 --> 00:41:56,440
authentication you end up with with

661
00:41:54,250 --> 00:42:01,540
certificates that belong to to a

662
00:41:56,440 --> 00:42:04,960
different domain for example and there

663
00:42:01,540 --> 00:42:08,140
have been requests to to update the

664
00:42:04,960 --> 00:42:10,690
Charter and I guess we are using this

665
00:42:08,140 --> 00:42:12,790
time to discuss

666
00:42:10,690 --> 00:42:15,280
if there is enough interest if there are

667
00:42:12,790 --> 00:42:17,620
enough people willing to review the text

668
00:42:15,280 --> 00:42:34,930
what should the Charter exactly cover

669
00:42:17,620 --> 00:42:38,259
and and so on so this charter text is a

670
00:42:34,930 --> 00:42:41,319
revision of the existing Charter so it

671
00:42:38,260 --> 00:42:43,060
it still includes all the things that we

672
00:42:41,320 --> 00:42:48,300
have currently on the Charter including

673
00:42:43,060 --> 00:42:51,009
if TLS with TLS 1.3 EPK aka PFS I

674
00:42:48,300 --> 00:42:54,430
polished the text a little bit and fix

675
00:42:51,010 --> 00:42:58,210
some typos but otherwise all the three

676
00:42:54,430 --> 00:42:59,980
paragraphs on on this slide cover what

677
00:42:58,210 --> 00:43:03,940
we already have on the Charter and not

678
00:42:59,980 --> 00:43:06,250
necessarily any any of the new items do

679
00:43:03,940 --> 00:43:16,150
you have any issues if anyone has issues

680
00:43:06,250 --> 00:43:25,420
with this text come forward now can we

681
00:43:16,150 --> 00:43:27,430
ask how many people have read it yari

682
00:43:25,420 --> 00:43:50,560
has read it because he wrote the initial

683
00:43:27,430 --> 00:43:52,600
Charter but perhaps it is is it related

684
00:43:50,560 --> 00:43:54,430
to our Charter discussions or do you

685
00:43:52,600 --> 00:43:57,250
want it on the Charter is it something

686
00:43:54,430 --> 00:43:59,230
it's a question of what do we do so

687
00:43:57,250 --> 00:44:01,450
there are people doing things with eat

688
00:43:59,230 --> 00:44:04,350
that violate the existing RFC's are

689
00:44:01,450 --> 00:44:07,600
pushing the mat all over the place and

690
00:44:04,350 --> 00:44:10,690
what do we do when you know things

691
00:44:07,600 --> 00:44:15,220
bypass the IETF and don't care with you

692
00:44:10,690 --> 00:44:18,370
and is any of these items are violating

693
00:44:15,220 --> 00:44:21,430
the no no this is this is something in

694
00:44:18,370 --> 00:44:23,600
addition to the Charter right but I sure

695
00:44:21,430 --> 00:44:27,868
think that we may want to have

696
00:44:23,600 --> 00:44:29,040
then we can have a discussion on that so

697
00:44:27,869 --> 00:44:31,350
I don't know what elf about the

698
00:44:29,040 --> 00:44:32,670
specifics of that issue but is the

699
00:44:31,350 --> 00:44:35,490
concrete action that you're proposing

700
00:44:32,670 --> 00:44:40,800
for us is a publication of something

701
00:44:35,490 --> 00:44:43,529
plication guidance it's more just asking

702
00:44:40,800 --> 00:44:47,700
what do we do a little bit right I mean

703
00:44:43,530 --> 00:44:51,000
allegedly if if the IETF is in change

704
00:44:47,700 --> 00:44:53,549
control for eat and people are

705
00:44:51,000 --> 00:44:57,060
implementing things and vaguely sort of

706
00:44:53,550 --> 00:45:00,630
standardizing them that finally the

707
00:44:57,060 --> 00:45:02,970
various RF seeds and do some inventive

708
00:45:00,630 --> 00:45:07,260
things with that review the question is

709
00:45:02,970 --> 00:45:11,040
what can we do what should we do there

710
00:45:07,260 --> 00:45:13,050
that's there I was gonna say that

711
00:45:11,040 --> 00:45:15,109
doesn't sound like a chartering of a new

712
00:45:13,050 --> 00:45:19,640
item

713
00:45:15,109 --> 00:45:25,080
Bernard's here so let's well I mean

714
00:45:19,640 --> 00:45:35,060
there's no e police to call have those

715
00:45:25,080 --> 00:45:35,060
individuals arrested presumably you know

716
00:45:35,119 --> 00:45:41,490
something and then people could you know

717
00:45:38,850 --> 00:45:43,650
it it wouldn't making this guidance for

718
00:45:41,490 --> 00:45:44,330
example or people might decide not to

719
00:45:43,650 --> 00:45:46,770
buy it

720
00:45:44,330 --> 00:45:51,779
are you referring to security think

721
00:45:46,770 --> 00:45:54,300
Helen in particularly know there's so as

722
00:45:51,780 --> 00:45:58,980
background there there was some work in

723
00:45:54,300 --> 00:46:02,810
3gpp on encrypted MCS in sin and a K and

724
00:45:58,980 --> 00:46:05,790
a ka prime that work is now continuing

725
00:46:02,810 --> 00:46:09,330
partly outside 3gpp from what I

726
00:46:05,790 --> 00:46:12,180
understand and and doing things that are

727
00:46:09,330 --> 00:46:15,270
not really clear it's it's it's it's not

728
00:46:12,180 --> 00:46:18,180
clear overall even to me why this kind

729
00:46:15,270 --> 00:46:23,100
of thing is happening and then the

730
00:46:18,180 --> 00:46:27,540
question I guess is do we have a charter

731
00:46:23,100 --> 00:46:29,520
item to work with people to get review

732
00:46:27,540 --> 00:46:33,910
before these things get standardized

733
00:46:29,520 --> 00:46:37,630
outside the IETF or well

734
00:46:33,910 --> 00:46:39,848
so we have the method number right IANA

735
00:46:37,630 --> 00:46:42,099
locates them and there is expert review

736
00:46:39,849 --> 00:46:44,319
for for doing that and there is no

737
00:46:42,099 --> 00:46:46,900
requirement that all the methods are

738
00:46:44,319 --> 00:46:52,029
published as RFC Schloss I counted there

739
00:46:46,900 --> 00:46:53,980
are 52 EEP methods perhaps that some guy

740
00:46:52,030 --> 00:46:55,690
we could provide some things to the

741
00:46:53,980 --> 00:46:58,990
experts that when they are doing the

742
00:46:55,690 --> 00:47:01,390
method allocation no that's not that's

743
00:46:58,990 --> 00:47:03,098
not right I don't think I just it's the

744
00:47:01,390 --> 00:47:05,650
banker stuff that doesn't have to be

745
00:47:03,099 --> 00:47:07,809
reviewed to get us met that allocation

746
00:47:05,650 --> 00:47:10,049
you do need to review this this is not

747
00:47:07,809 --> 00:47:17,410
vendor stuff this is changes to existing

748
00:47:10,049 --> 00:47:19,150
methods okay okay the labs so the I

749
00:47:17,410 --> 00:47:21,279
guess the question is are these people

750
00:47:19,150 --> 00:47:22,599
even going if be actually each other or

751
00:47:21,280 --> 00:47:24,849
do something are these people going to

752
00:47:22,599 --> 00:47:26,680
bring any of this for to the EMU working

753
00:47:24,849 --> 00:47:31,539
you clearly if they don't what are you

754
00:47:26,680 --> 00:47:34,990
gonna do yeah so do you would think

755
00:47:31,539 --> 00:47:37,030
people changing eat methods under change

756
00:47:34,990 --> 00:47:39,098
control of the ietf would talk to the

757
00:47:37,030 --> 00:47:44,200
ITF but a parent that doesn't always

758
00:47:39,099 --> 00:47:46,809
happen and I guess the question is do we

759
00:47:44,200 --> 00:47:49,990
want to see if we can reach out and

760
00:47:46,809 --> 00:47:51,400
review these things or have ietf state

761
00:47:49,990 --> 00:47:53,288
than this but instead of what security

762
00:47:51,400 --> 00:47:58,930
practices or this is good and this is

763
00:47:53,289 --> 00:48:00,940
bad I don't know it's all you can reach

764
00:47:58,930 --> 00:48:03,549
out if you know about them so I guess

765
00:48:00,940 --> 00:48:06,160
this is where like liaisons with 3gpp

766
00:48:03,549 --> 00:48:09,520
and so on can can help help us but

767
00:48:06,160 --> 00:48:11,348
there's no way we can force people you

768
00:48:09,520 --> 00:48:19,329
know if you don't even know about it we

769
00:48:11,349 --> 00:48:20,950
can't help them Romania to reiterate you

770
00:48:19,329 --> 00:48:22,690
go talk to people we don't need to

771
00:48:20,950 --> 00:48:24,250
change the Charter if we're going to

772
00:48:22,690 --> 00:48:25,690
formally do something in terms of

773
00:48:24,250 --> 00:48:27,460
producing a draft we certainly would

774
00:48:25,690 --> 00:48:28,990
need to and we've already said liaison

775
00:48:27,460 --> 00:48:31,029
statement so we have license to the

776
00:48:28,990 --> 00:48:33,689
right organizations we can absolutely

777
00:48:31,029 --> 00:48:33,690
find those

778
00:48:37,110 --> 00:48:42,900
so alright this was what we dis text

779
00:48:40,860 --> 00:48:45,750
covers what we already have on the

780
00:48:42,900 --> 00:48:48,270
Charter and then the next slide we have

781
00:48:45,750 --> 00:48:50,700
some text on on things that that have

782
00:48:48,270 --> 00:48:54,090
been brought to the ITF and are

783
00:48:50,700 --> 00:48:56,819
currently not on the Charter this is

784
00:48:54,090 --> 00:48:58,950
some initial text and now it's open for

785
00:48:56,820 --> 00:49:02,820
you to come in and bash this text

786
00:48:58,950 --> 00:49:05,279
together so if you have comments what do

787
00:49:02,820 --> 00:49:08,130
you think does this make sense does it

788
00:49:05,280 --> 00:49:26,820
cover the things or the ideas that you

789
00:49:08,130 --> 00:49:28,560
had in mind if the working group wants

790
00:49:26,820 --> 00:49:30,900
to kind of tackle some of those issues I

791
00:49:28,560 --> 00:49:32,250
will support them editorially I think we

792
00:49:30,900 --> 00:49:34,410
should structure those work items

793
00:49:32,250 --> 00:49:36,060
similarly to the way we structure the

794
00:49:34,410 --> 00:49:38,910
other work items unless we're rewriting

795
00:49:36,060 --> 00:49:40,710
the text of them because all the rest of

796
00:49:38,910 --> 00:49:43,500
the murray provided guidance or updates

797
00:49:40,710 --> 00:49:45,680
to update foo and this one is more as

798
00:49:43,500 --> 00:49:53,070
more background than some of those

799
00:49:45,680 --> 00:49:55,680
explicit well the other items for kind

800
00:49:53,070 --> 00:49:58,200
of fixing existing things whereas these

801
00:49:55,680 --> 00:50:01,350
would be either new method or extensions

802
00:49:58,200 --> 00:50:04,919
to to method whereas all the previous

803
00:50:01,350 --> 00:50:08,279
were like how to do if TLS bill TLS 1.3

804
00:50:04,920 --> 00:50:12,960
but if TLS already existed the same for

805
00:50:08,280 --> 00:50:32,010
eBay ka prime sure perhaps this could

806
00:50:12,960 --> 00:50:36,090
also be restructured so does anybody

807
00:50:32,010 --> 00:50:38,370
have any concerns or does this cover

808
00:50:36,090 --> 00:50:40,730
Elliott things that you guys are looking

809
00:50:38,370 --> 00:50:40,730
at

810
00:50:45,960 --> 00:50:51,340
forgive me for not being able to really

811
00:50:49,390 --> 00:50:53,379
read through the the text on the screen

812
00:50:51,340 --> 00:50:56,800
it's really hard from back there but in

813
00:50:53,380 --> 00:50:58,359
my earlier discussions with Mookie where

814
00:50:56,800 --> 00:51:00,760
I thought I had it wrong but he

815
00:50:58,359 --> 00:51:02,230
corrected me to say no I have it wrong I

816
00:51:00,760 --> 00:51:04,090
do have it wrong here's where you're

817
00:51:02,230 --> 00:51:05,590
covered I'm trusting I'm essentially

818
00:51:04,090 --> 00:51:08,740
trusting you guys that you've gotten it

819
00:51:05,590 --> 00:51:10,840
Ronnie that what I'm expecting is that

820
00:51:08,740 --> 00:51:14,439
we'll be able to cover it like either a

821
00:51:10,840 --> 00:51:16,180
teef update or you keep brewski or it's

822
00:51:14,440 --> 00:51:20,770
certainly we want to also include in

823
00:51:16,180 --> 00:51:22,419
that something like a new intern and I'm

824
00:51:20,770 --> 00:51:23,770
not saying by the way that this force is

825
00:51:22,420 --> 00:51:27,550
the working group to take on any of that

826
00:51:23,770 --> 00:51:30,130
work just that if if there if we get

827
00:51:27,550 --> 00:51:31,630
into a an adoption call that it that

828
00:51:30,130 --> 00:51:32,830
it's right for consider when it's right

829
00:51:31,630 --> 00:51:40,359
for consideration we don't get it to

830
00:51:32,830 --> 00:51:43,600
charter issues for each of these items

831
00:51:40,359 --> 00:51:44,680
you'd be nice to kind of see who kind of

832
00:51:43,600 --> 00:51:58,089
working on them who would be

833
00:51:44,680 --> 00:52:00,399
implementing okay so for the out-of-band

834
00:51:58,090 --> 00:52:06,480
we can call these kind of out-of-band

835
00:52:00,400 --> 00:52:10,330
channel I guess introduction or

836
00:52:06,480 --> 00:52:12,430
registration methods are there people

837
00:52:10,330 --> 00:52:22,650
who are interested in working on this

838
00:52:12,430 --> 00:52:27,879
work item one two three four I'm sure

839
00:52:22,650 --> 00:52:30,220
Thomas he's okay

840
00:52:27,880 --> 00:52:31,810
so we definitely have interest in and

841
00:52:30,220 --> 00:52:36,279
are those how many of those people are

842
00:52:31,810 --> 00:52:47,049
willing to actually contribute text okay

843
00:52:36,280 --> 00:52:49,359
great clarification I suspect Daniel

844
00:52:47,050 --> 00:52:52,780
amigo when you say I think test you mean

845
00:52:49,359 --> 00:52:55,029
reviewing well when I say adding takes

846
00:52:52,780 --> 00:52:57,800
me an authoring okay not necessarily

847
00:52:55,030 --> 00:53:00,290
doesn't necessary have to be a primary

848
00:52:57,800 --> 00:53:02,650
but we definitely need people to author

849
00:53:00,290 --> 00:53:05,930
the documents and then instead of just

850
00:53:02,650 --> 00:53:07,790
reviewing and in making comments it's

851
00:53:05,930 --> 00:53:09,710
very useful to have people who will

852
00:53:07,790 --> 00:53:13,190
actually contribute the text that will

853
00:53:09,710 --> 00:53:14,960
fix the document dieudonné that a remedy

854
00:53:13,190 --> 00:53:31,250
new implementation who's willing to

855
00:53:14,960 --> 00:53:32,990
write the code forgive my thickness just

856
00:53:31,250 --> 00:53:35,810
a clarification here

857
00:53:32,990 --> 00:53:39,020
mohit again which which sentences do you

858
00:53:35,810 --> 00:53:40,880
believe cover this sort of book not only

859
00:53:39,020 --> 00:53:43,099
I can see where you eat noob is covered

860
00:53:40,880 --> 00:53:46,010
in the QR code discussion where do you

861
00:53:43,099 --> 00:53:52,099
think that you keep the entire second

862
00:53:46,010 --> 00:53:55,580
paragraph so so the second last line the

863
00:53:52,099 --> 00:53:58,280
the reason it says minimal mechanisms is

864
00:53:55,580 --> 00:54:01,730
try to use existing things where it

865
00:53:58,280 --> 00:54:06,520
would be hopefully deep or some some

866
00:54:01,730 --> 00:54:09,970
method that has a TLS outer tunnel but

867
00:54:06,520 --> 00:54:14,359
because there is also this other draft

868
00:54:09,970 --> 00:54:17,060
which it cred so I didn't want to tie it

869
00:54:14,359 --> 00:54:19,900
down to EEP deep but the fact that it

870
00:54:17,060 --> 00:54:22,369
says minimal mechanisms with which

871
00:54:19,900 --> 00:54:24,500
limited use credentials can then be used

872
00:54:22,369 --> 00:54:33,950
for creating general use long term

873
00:54:24,500 --> 00:54:36,410
credentials first in the second

874
00:54:33,950 --> 00:54:50,930
paragraph the first paragraph is quite

875
00:54:36,410 --> 00:54:52,970
happy to receive changes suggestions the

876
00:54:50,930 --> 00:54:56,839
reason is there is true drafts so there

877
00:54:52,970 --> 00:54:58,520
is he creds and I'm not authoring any of

878
00:54:56,839 --> 00:55:01,210
those two drafts I'm just saying there

879
00:54:58,520 --> 00:55:03,080
were two drafts and I try to capture

880
00:55:01,210 --> 00:55:06,170
essentially what they're trying to do

881
00:55:03,080 --> 00:55:08,720
with the same text but if you want to

882
00:55:06,170 --> 00:55:10,640
put deep here specifically that's

883
00:55:08,720 --> 00:55:10,939
something we can discuss on the list as

884
00:55:10,640 --> 00:55:13,368
well

885
00:55:10,940 --> 00:55:15,049
yeah and I think this comes makes us

886
00:55:13,369 --> 00:55:16,849
back to both the previous conversation

887
00:55:15,049 --> 00:55:18,619
and then the forthcoming conversation is

888
00:55:16,849 --> 00:55:24,230
that it's clear that there is some

889
00:55:18,619 --> 00:55:25,670
teamwork that's needed in fact the one

890
00:55:24,230 --> 00:55:29,539
of the conversations I just had lunch

891
00:55:25,670 --> 00:55:32,119
was from people in the field area

892
00:55:29,539 --> 00:55:35,930
network space in which they're not even

893
00:55:32,119 --> 00:55:38,539
sure they want an hour TLS connection we

894
00:55:35,930 --> 00:55:41,089
need to have that dialogue I think here

895
00:55:38,539 --> 00:55:45,200
in the name towards common architecture

896
00:55:41,089 --> 00:55:47,150
now and so yeah in that case this text

897
00:55:45,200 --> 00:55:49,399
is in fact bare because I don't say deep

898
00:55:47,150 --> 00:55:52,010
so you're not necessarily restricted by

899
00:55:49,400 --> 00:55:54,079
having outer TLS tunnel and rather you

900
00:55:52,010 --> 00:56:02,380
have minimal mechanism so it's a growth

901
00:55:54,079 --> 00:56:04,849
broader swath probably there's there's

902
00:56:02,380 --> 00:56:06,680
little recent if you guys just when I'm

903
00:56:04,849 --> 00:56:08,359
singing the charters giving that not

904
00:56:06,680 --> 00:56:10,430
part of the text and that goes to Romans

905
00:56:08,359 --> 00:56:11,750
point right which is you might want to

906
00:56:10,430 --> 00:56:15,440
put the you might want to separate out

907
00:56:11,750 --> 00:56:19,010
that text in perfect terms the third

908
00:56:15,440 --> 00:56:20,329
third line stick that into V it stick

909
00:56:19,010 --> 00:56:22,000
that into your deliverables text or

910
00:56:20,329 --> 00:56:26,390
something like that

911
00:56:22,000 --> 00:56:28,309
okay okay pepsin I think you already

912
00:56:26,390 --> 00:56:30,410
covered the question I was gonna ask but

913
00:56:28,309 --> 00:56:31,579
I think the second second second

914
00:56:30,410 --> 00:56:32,990
paragraph is generally enough and I

915
00:56:31,579 --> 00:56:36,859
assume that it kind of already covered

916
00:56:32,990 --> 00:56:38,118
the it creds use case also right so I'm

917
00:56:36,859 --> 00:56:45,170
fine with it then we can probably do

918
00:56:38,119 --> 00:56:46,880
some word spinning but I think okay I

919
00:56:45,170 --> 00:56:49,160
think we should still have some

920
00:56:46,880 --> 00:56:51,289
discussion of this charter text on the

921
00:56:49,160 --> 00:56:52,700
on the list since not every breeze here

922
00:56:51,289 --> 00:57:06,859
and I think it could probably use some

923
00:56:52,700 --> 00:57:08,660
polishing yes but I Roman but yes again

924
00:57:06,859 --> 00:57:14,270
I think we still confirm on the list

925
00:57:08,660 --> 00:57:16,970
yeah absolutely and just to confirm the

926
00:57:14,270 --> 00:57:18,859
second part for the mineral mechanisms

927
00:57:16,970 --> 00:57:20,509
which use a potent ocation credentials

928
00:57:18,859 --> 00:57:23,720
that can be used for creating general

929
00:57:20,510 --> 00:57:24,770
use long term credentials are there

930
00:57:23,720 --> 00:57:27,669
people who are in

931
00:57:24,770 --> 00:57:33,710
interested in in working on this item

932
00:57:27,670 --> 00:57:37,580
these three four six

933
00:57:33,710 --> 00:57:42,640
okay okay

934
00:57:37,580 --> 00:57:42,640
how many interested in contributing text

935
00:57:43,420 --> 00:57:51,220
implementers okay great

936
00:57:51,880 --> 00:58:24,080
alright let's see next we have an update

937
00:58:08,570 --> 00:58:29,300
on EEP noob so tall us yes just can you

938
00:58:24,080 --> 00:58:34,390
hear me yes okay so it's an update on

939
00:58:29,300 --> 00:58:34,390
hip nope next slide please

940
00:58:35,420 --> 00:58:42,170
so just this slide is a kind of segue to

941
00:58:38,330 --> 00:58:43,880
the retiring discussion so just a

942
00:58:42,170 --> 00:58:47,119
reminder that out-of-band

943
00:58:43,880 --> 00:58:51,369
means a second independent communication

944
00:58:47,119 --> 00:58:53,780
channel which is used for authenticating

945
00:58:51,369 --> 00:58:56,990
something on the primary channel and

946
00:58:53,780 --> 00:59:00,109
this has become a kind of common way of

947
00:58:56,990 --> 00:59:04,819
boosting security in applications and

948
00:59:00,109 --> 00:59:07,160
devices but if even though it is the

949
00:59:04,820 --> 00:59:10,070
scenario authentication framework with

950
00:59:07,160 --> 00:59:12,220
the all kinds of authentication methods

951
00:59:10,070 --> 00:59:14,930
doesn't currently support an open

952
00:59:12,220 --> 00:59:17,959
authentication and that's why we set out

953
00:59:14,930 --> 00:59:23,990
to to specify the ignore protocol for

954
00:59:17,960 --> 00:59:25,940
this purpose next slide here is our

955
00:59:23,990 --> 00:59:31,220
timeline we have been working actually

956
00:59:25,940 --> 00:59:34,810
over three years on this and kind of

957
00:59:31,220 --> 00:59:37,950
polish the specification and the in

958
00:59:34,810 --> 00:59:42,509
written implementation for linux

959
00:59:37,950 --> 00:59:47,149
and the modeling and verification of the

960
00:59:42,510 --> 00:59:50,339
protocol and as a new thing there is no

961
00:59:47,150 --> 00:59:54,920
peer implementation for Contiki in

962
00:59:50,339 --> 00:59:58,400
progress and the draft is in version 6

963
00:59:54,920 --> 00:59:58,400
next slide please

964
00:59:59,760 --> 01:00:07,530
so I have two slides just to remind us

965
01:00:02,670 --> 01:00:09,810
what is in old an overview so it isn't

966
01:00:07,530 --> 01:00:11,839
leap a method for bootstrapping devices

967
01:00:09,810 --> 01:00:13,799
out of the box without professional

968
01:00:11,839 --> 01:00:17,730
administration that's kind of the use

969
01:00:13,800 --> 01:00:20,760
case that we trying to solve and the

970
01:00:17,730 --> 01:00:26,010
authentication is based on user assisted

971
01:00:20,760 --> 01:00:28,829
out-of-band authentication that success

972
01:00:26,010 --> 01:00:34,800
the user using a mobile phone to spend a

973
01:00:28,829 --> 01:00:36,540
dynamic QR code or NFC tag and in

974
01:00:34,800 --> 01:00:39,420
addition to doing just one time out

975
01:00:36,540 --> 01:00:42,270
indication the method registers the

976
01:00:39,420 --> 01:00:44,099
device these two Triple A it creates a

977
01:00:42,270 --> 01:00:46,920
persistent association between the

978
01:00:44,099 --> 01:00:49,349
Triple A server and the device and this

979
01:00:46,920 --> 01:00:52,770
association can then be used later for

980
01:00:49,349 --> 01:00:58,650
fast reorient occasion of the previously

981
01:00:52,770 --> 01:01:01,440
registered devices next slide here is an

982
01:00:58,650 --> 01:01:03,990
art picture picture of the use case when

983
01:01:01,440 --> 01:01:07,410
when this method is used for network

984
01:01:03,990 --> 01:01:09,959
attachment so we have a new device that

985
01:01:07,410 --> 01:01:11,250
is not reality stirred on the network

986
01:01:09,960 --> 01:01:13,380
and then we have the network

987
01:01:11,250 --> 01:01:18,599
infrastructure with an access points and

988
01:01:13,380 --> 01:01:21,599
the Triple A architecture and most of

989
01:01:18,599 --> 01:01:24,990
the communication in this method happens

990
01:01:21,599 --> 01:01:28,460
over the EAP Channel in band between the

991
01:01:24,990 --> 01:01:31,799
new device and the Triple A server

992
01:01:28,460 --> 01:01:33,810
but then there is one message that goes

993
01:01:31,800 --> 01:01:36,270
over the user assisted out-of-band

994
01:01:33,810 --> 01:01:38,839
channel such as the user scanning the QR

995
01:01:36,270 --> 01:01:43,859
code but could be something else and

996
01:01:38,839 --> 01:01:47,940
that authenticates the inventor of key

997
01:01:43,859 --> 01:01:49,880
exchange and configuration the three

998
01:01:47,940 --> 01:01:53,680
killer

999
01:01:49,880 --> 01:01:56,060
that kind of critical thing is that

1000
01:01:53,680 --> 01:01:57,830
normally in device bootstrapping you

1001
01:01:56,060 --> 01:02:00,890
have the problem that you would like to

1002
01:01:57,830 --> 01:02:03,500
register a device in the server but you

1003
01:02:00,890 --> 01:02:05,060
need network connectivity for that but

1004
01:02:03,500 --> 01:02:06,890
then you don't have network connectivity

1005
01:02:05,060 --> 01:02:11,029
because the device is not yet registered

1006
01:02:06,890 --> 01:02:13,670
and we've solved that by using the EAP

1007
01:02:11,030 --> 01:02:18,410
panel for communicating between the new

1008
01:02:13,670 --> 01:02:21,530
device and the server before the device

1009
01:02:18,410 --> 01:02:23,359
is registered and clearly this is has

1010
01:02:21,530 --> 01:02:27,950
been a successful idea it's been now

1011
01:02:23,360 --> 01:02:35,050
copied by at least two other tracks next

1012
01:02:27,950 --> 01:02:38,359
slide what is new in this version well

1013
01:02:35,050 --> 01:02:40,280
that the draft has been fairly stable so

1014
01:02:38,360 --> 01:02:42,470
we have continuously just police the

1015
01:02:40,280 --> 01:02:44,620
text and the details of the

1016
01:02:42,470 --> 01:02:47,029
specification based on feedback from

1017
01:02:44,620 --> 01:02:51,410
implementation and lessons from the

1018
01:02:47,030 --> 01:02:55,100
formal verification however this time we

1019
01:02:51,410 --> 01:02:57,170
did make one slightly bigger chains so

1020
01:02:55,100 --> 01:02:59,390
in earlier versions of the draft

1021
01:02:57,170 --> 01:03:04,100
we have overloaded the network access

1022
01:02:59,390 --> 01:03:08,660
identifier now so that it conveyed the

1023
01:03:04,100 --> 01:03:11,930
peer ID and the state and this doesn't

1024
01:03:08,660 --> 01:03:14,299
really comply with the with the Evo

1025
01:03:11,930 --> 01:03:16,640
RFC's guidance where it says that the

1026
01:03:14,300 --> 01:03:19,460
identity response should be used

1027
01:03:16,640 --> 01:03:23,060
primarily for routing and for selecting

1028
01:03:19,460 --> 01:03:25,100
the eat method and for that reason we

1029
01:03:23,060 --> 01:03:28,070
now cleaned up the draft and got rid of

1030
01:03:25,100 --> 01:03:30,650
this overload of the NIE and the cost

1031
01:03:28,070 --> 01:03:34,100
here is an extra round trip at the

1032
01:03:30,650 --> 01:03:36,610
beginning of the eve conversation but it

1033
01:03:34,100 --> 01:03:39,970
does help the implementations as well

1034
01:03:36,610 --> 01:03:46,970
because implementations are not really

1035
01:03:39,970 --> 01:03:50,629
don't have support for this changing the

1036
01:03:46,970 --> 01:03:53,569
knife frequently so that's the only

1037
01:03:50,630 --> 01:03:57,680
bigger change for a while then there is

1038
01:03:53,570 --> 01:04:01,790
some of these smaller cleanups we added

1039
01:03:57,680 --> 01:04:03,890
earlier a key identifier we to help the

1040
01:04:01,790 --> 01:04:09,529
peer implementation

1041
01:04:03,890 --> 01:04:12,019
but after some thinking we may want to

1042
01:04:09,529 --> 01:04:15,099
in the future randomize the identifiers

1043
01:04:12,019 --> 01:04:18,019
in the protocol for privacy reasons and

1044
01:04:15,099 --> 01:04:20,420
the key identifier would then leak the

1045
01:04:18,019 --> 01:04:23,839
peer identity so it's better get rid of

1046
01:04:20,420 --> 01:04:26,359
that the cost here is that the peer may

1047
01:04:23,839 --> 01:04:28,038
sometimes in rare cases have to try two

1048
01:04:26,359 --> 01:04:29,869
different keys because it doesn't know

1049
01:04:28,039 --> 01:04:36,200
whether it's the new or old key that

1050
01:04:29,869 --> 01:04:41,059
that was used for some message and then

1051
01:04:36,200 --> 01:04:43,368
we made some editorial changes so all

1052
01:04:41,059 --> 01:04:46,369
the exchanges in the protocol all the it

1053
01:04:43,369 --> 01:04:49,099
conversation have this common apart kind

1054
01:04:46,369 --> 01:04:53,089
of handshake and we move that to a

1055
01:04:49,099 --> 01:04:54,709
separate text section of course anyone

1056
01:04:53,089 --> 01:04:56,900
who implements the protocol would do

1057
01:04:54,709 --> 01:04:58,609
this necessarily in this order so you do

1058
01:04:56,900 --> 01:05:02,420
first the common part and then branch

1059
01:04:58,609 --> 01:05:05,058
out to the different exchanges and now

1060
01:05:02,420 --> 01:05:07,039
the text follows more closely there how

1061
01:05:05,059 --> 01:05:09,199
we would expect people to implement it

1062
01:05:07,039 --> 01:05:12,849
and this previously caused some

1063
01:05:09,199 --> 01:05:12,849
confusion with the implementers

1064
01:05:14,410 --> 01:05:21,890
finally another thing is related to

1065
01:05:18,049 --> 01:05:25,880
roaming support so the method allows the

1066
01:05:21,890 --> 01:05:29,199
server to assign realm' to the peer with

1067
01:05:25,880 --> 01:05:34,309
the peer will later use in future

1068
01:05:29,199 --> 01:05:35,959
conversations forum so that the requests

1069
01:05:34,309 --> 01:05:38,239
can be routed over the Triple A

1070
01:05:35,959 --> 01:05:40,640
architecture to the correct server and

1071
01:05:38,239 --> 01:05:46,789
this is especially useful in cases like

1072
01:05:40,640 --> 01:05:49,308
Eddie Rome where roaming and there was a

1073
01:05:46,789 --> 01:05:52,549
question about when should the peer

1074
01:05:49,309 --> 01:05:56,630
start using the the realm and that it

1075
01:05:52,549 --> 01:05:58,880
received and the answer to that is now

1076
01:05:56,630 --> 01:06:00,920
written in that that text it is that

1077
01:05:58,880 --> 01:06:04,940
using as early as possible immediately

1078
01:06:00,920 --> 01:06:08,449
start using the servers and reown that

1079
01:06:04,940 --> 01:06:14,540
is because it makes the growing more

1080
01:06:08,449 --> 01:06:16,810
seamless in some specific scenarios okay

1081
01:06:14,540 --> 01:06:21,740
those were the updates from this version

1082
01:06:16,810 --> 01:06:29,029
and there is the next slide already so

1083
01:06:21,740 --> 01:06:32,060
the we have analyzed this so-called miss

1084
01:06:29,030 --> 01:06:50,510
finding threats against the pairing

1085
01:06:32,060 --> 01:06:53,240
protocols and okay the hood so in the

1086
01:06:50,510 --> 01:06:55,370
previous meeting in this articles were

1087
01:06:53,240 --> 01:06:58,640
enacted in based on on these misspending

1088
01:06:55,370 --> 01:06:59,240
attacks and we had now published a full

1089
01:06:58,640 --> 01:07:02,420
report

1090
01:06:59,240 --> 01:07:06,560
Theseus in CAS consists of an academic a

1091
01:07:02,420 --> 01:07:11,270
conference report is available online it

1092
01:07:06,560 --> 01:07:19,730
explains the rest and some mitigate this

1093
01:07:11,270 --> 01:07:21,890
information will also excuse me you must

1094
01:07:19,730 --> 01:07:24,440
quick quick question the slide says

1095
01:07:21,890 --> 01:07:26,440
March 2009 you're talking about the

1096
01:07:24,440 --> 01:07:31,030
presentation at the last Saturday I

1097
01:07:26,440 --> 01:07:31,030
don't know where that came from it's 19

1098
01:07:35,920 --> 01:07:44,930
so I think they have less the video but

1099
01:07:39,410 --> 01:07:47,020
and let's continue to the next one next

1100
01:07:44,930 --> 01:07:50,509
slide please

1101
01:07:47,020 --> 01:07:53,509
we're on the to-do list slide how ok I

1102
01:07:50,510 --> 01:07:55,400
ate it was the video completely ok so so

1103
01:07:53,510 --> 01:07:59,480
that here is my to-do list and we don't

1104
01:07:55,400 --> 01:08:01,010
plan any major changes I don't have any

1105
01:07:59,480 --> 01:08:05,210
plans to make major changes to the

1106
01:08:01,010 --> 01:08:07,660
specification anymore unless there is

1107
01:08:05,210 --> 01:08:11,060
some someone else comes up with a reason

1108
01:08:07,660 --> 01:08:13,399
but there will be small polishing so one

1109
01:08:11,060 --> 01:08:16,939
thing is that the message examples need

1110
01:08:13,400 --> 01:08:21,200
to be updated with the changes made to

1111
01:08:16,939 --> 01:08:23,000
the version 6 and then I am still a bit

1112
01:08:21,200 --> 01:08:25,309
worried about the time outs and the

1113
01:08:23,000 --> 01:08:26,889
usability aspect related to time out so

1114
01:08:25,310 --> 01:08:33,330
we may need to do some modeling

1115
01:08:26,889 --> 01:08:35,889
user testing about that and we have

1116
01:08:33,330 --> 01:08:38,170
solved the problem of lost last met

1117
01:08:35,889 --> 01:08:40,659
cities can recover from that and what we

1118
01:08:38,170 --> 01:08:42,850
formally verified that it works but that

1119
01:08:40,658 --> 01:08:45,068
should be written up and reported in

1120
01:08:42,850 --> 01:08:45,699
some way and not in the draft but

1121
01:08:45,069 --> 01:08:50,500
somewhere else

1122
01:08:45,698 --> 01:08:52,178
and finally we maybe should write into

1123
01:08:50,500 --> 01:08:55,118
the draft these hooks for future

1124
01:08:52,179 --> 01:08:58,060
expansions which we have been thinking

1125
01:08:55,118 --> 01:08:59,349
about along the way so things that I

1126
01:08:58,060 --> 01:09:03,089
already mentioned device registration

1127
01:08:59,350 --> 01:09:07,299
while roaming identify randomization

1128
01:09:03,089 --> 01:09:09,189
configuring application parameters we

1129
01:09:07,299 --> 01:09:12,278
are currently only creating a shared key

1130
01:09:09,189 --> 01:09:15,250
for the application layer but not really

1131
01:09:12,279 --> 01:09:19,029
don't give any advice how to configure

1132
01:09:15,250 --> 01:09:21,040
other parameters and then maybe

1133
01:09:19,029 --> 01:09:23,940
interplay with the manufacturer

1134
01:09:21,040 --> 01:09:27,219
certificates and other credentials which

1135
01:09:23,939 --> 01:09:30,068
themselves are not always sufficient for

1136
01:09:27,219 --> 01:09:34,540
authentication but could help mitigate

1137
01:09:30,069 --> 01:09:38,049
threats like miss finding okay next

1138
01:09:34,540 --> 01:09:45,580
slide that should be the final summary

1139
01:09:38,049 --> 01:09:48,219
slide and so to summarize EAP noob is an

1140
01:09:45,580 --> 01:09:52,750
EAP method for user assisted of the

1141
01:09:48,219 --> 01:09:56,500
Panda authentication and the draft is

1142
01:09:52,750 --> 01:09:57,219
now I think very complete and should be

1143
01:09:56,500 --> 01:09:59,770
quite stable

1144
01:09:57,219 --> 01:10:01,960
we have implementations for Linux and

1145
01:09:59,770 --> 01:10:07,960
the implementation of the pier on

1146
01:10:01,960 --> 01:10:10,840
contiki ongoing work and then formal

1147
01:10:07,960 --> 01:10:14,550
models of the protocol and of the

1148
01:10:10,840 --> 01:10:18,070
security aspects the authentication and

1149
01:10:14,550 --> 01:10:19,570
this seems to be some interest in this

1150
01:10:18,070 --> 01:10:25,150
protocol that people asking questions

1151
01:10:19,570 --> 01:10:27,549
and this could be a work item related to

1152
01:10:25,150 --> 01:10:31,449
the paragraph for each other in that way

1153
01:10:27,550 --> 01:10:33,750
so just stop okay thank you that's all I

1154
01:10:31,449 --> 01:10:33,750
had

1155
01:10:35,400 --> 01:10:39,809
any questions for Thomas

1156
01:10:43,550 --> 01:10:47,300
okay thank you

1157
01:10:53,810 --> 01:11:12,690
next we have Elliot up with cheap

1158
01:11:00,620 --> 01:11:15,180
brewski good afternoon again this is a

1159
01:11:12,690 --> 01:11:16,950
very quick update we've done a little

1160
01:11:15,180 --> 01:11:18,570
bit a little bit of work on ep brewski

1161
01:11:16,950 --> 01:11:24,980
and no text but mostly been spending

1162
01:11:18,570 --> 01:11:28,830
time coding doesn't seem to be advancing

1163
01:11:24,980 --> 01:11:30,030
thank you all right sir review RFC 7170

1164
01:11:28,830 --> 01:11:32,370
specifies teep

1165
01:11:30,030 --> 01:11:34,889
there's TLS based authentication as well

1166
01:11:32,370 --> 01:11:37,680
as some enrollment support some really

1167
01:11:34,890 --> 01:11:41,190
nice TVs in there which essentially I

1168
01:11:37,680 --> 01:11:42,380
would say mimic est in some way shape or

1169
01:11:41,190 --> 01:11:46,530
form

1170
01:11:42,380 --> 01:11:49,890
RFC 83 66 specifies a voucher format in

1171
01:11:46,530 --> 01:11:52,740
which do you trust an introduction at

1172
01:11:49,890 --> 01:11:56,280
least the results of that are the draft

1173
01:11:52,740 --> 01:11:57,990
IETF anima bootstrapping key infra says

1174
01:11:56,280 --> 01:12:00,840
here's how you do the request to get the

1175
01:11:57,990 --> 01:12:03,780
83 66 voucher and this draft

1176
01:12:00,840 --> 01:12:06,930
incorporates all three into a flow next

1177
01:12:03,780 --> 01:12:08,639
slide okay so I'm not going to go

1178
01:12:06,930 --> 01:12:09,810
through how everything works because

1179
01:12:08,640 --> 01:12:12,180
I've done that several times in this

1180
01:12:09,810 --> 01:12:15,240
room before and I want to respect your

1181
01:12:12,180 --> 01:12:17,520
time here's what we did the first thing

1182
01:12:15,240 --> 01:12:19,080
is the last time you saw the draft in

1183
01:12:17,520 --> 01:12:21,090
Prague there were no security

1184
01:12:19,080 --> 01:12:23,010
considerations it's not that there

1185
01:12:21,090 --> 01:12:25,230
aren't security considerations it's just

1186
01:12:23,010 --> 01:12:28,520
that we haven't gotten to him yet and I

1187
01:12:25,230 --> 01:12:31,110
pleaded prodded poked and otherwise

1188
01:12:28,520 --> 01:12:33,990
convinced Dan Harkins to help us out on

1189
01:12:31,110 --> 01:12:36,870
this and he did and filled in what I

1190
01:12:33,990 --> 01:12:38,880
think is pretty good claim section to

1191
01:12:36,870 --> 01:12:40,440
begin with the Security's consideration

1192
01:12:38,880 --> 01:12:42,420
section so I'd ask you to please review

1193
01:12:40,440 --> 01:12:43,919
that diagrams have been updated the

1194
01:12:42,420 --> 01:12:46,860
principle reason the diagrams have been

1195
01:12:43,920 --> 01:12:49,050
updated is that we had to combine the

1196
01:12:46,860 --> 01:12:51,860
join registrar and each server in order

1197
01:12:49,050 --> 01:12:51,860
to satisfy the

1198
01:12:51,930 --> 01:12:57,810
the anima brewski and 83 66 requirements

1199
01:12:56,070 --> 01:13:02,219
such that signatures all match along the

1200
01:12:57,810 --> 01:13:03,720
path from and on our well bound from the

1201
01:13:02,220 --> 01:13:08,070
all the way from the pier all the way

1202
01:13:03,720 --> 01:13:10,350
out to the masa the diagrams are not yet

1203
01:13:08,070 --> 01:13:13,259
to my liking we have a few ASCII humps

1204
01:13:10,350 --> 01:13:15,720
in them which I think I can remove just

1205
01:13:13,260 --> 01:13:18,420
by splitting a couple of diagrams into

1206
01:13:15,720 --> 01:13:19,890
two and removing elements in various

1207
01:13:18,420 --> 01:13:21,750
places which are which would otherwise

1208
01:13:19,890 --> 01:13:24,660
be redundant but that's very cosmetic

1209
01:13:21,750 --> 01:13:28,080
what's really needed now is just to do

1210
01:13:24,660 --> 01:13:29,790
implementation development testing we

1211
01:13:28,080 --> 01:13:31,250
started that just by testing out teeth

1212
01:13:29,790 --> 01:13:32,940
to make sure it works so we are

1213
01:13:31,250 --> 01:13:35,760
obviously finding some of the same

1214
01:13:32,940 --> 01:13:37,250
ambiguities that you Andy found and so

1215
01:13:35,760 --> 01:13:41,130
we're going through all those right now

1216
01:13:37,250 --> 01:13:43,260
our next step is to to go further we're

1217
01:13:41,130 --> 01:13:47,340
we're developing on both sides of this

1218
01:13:43,260 --> 01:13:49,950
in terms of both a server implementation

1219
01:13:47,340 --> 01:13:51,960
and we're developing in the WPA stuff

1220
01:13:49,950 --> 01:13:53,929
looking codebase as well and we're doing

1221
01:13:51,960 --> 01:13:57,660
a little bit of testing and hosts a DBA

1222
01:13:53,930 --> 01:14:01,020
PD to make sure that that this will all

1223
01:13:57,660 --> 01:14:02,870
work smoothly so what we're hoping then

1224
01:14:01,020 --> 01:14:06,270
a next slide if I even have a next slide

1225
01:14:02,870 --> 01:14:08,099
yeah okay good yeah coding happening now

1226
01:14:06,270 --> 01:14:11,270
a couple things that we're still

1227
01:14:08,100 --> 01:14:13,790
thinking about along these lines is

1228
01:14:11,270 --> 01:14:17,940
whether there are some 802 11

1229
01:14:13,790 --> 01:14:19,500
interactions here's the basic problem so

1230
01:14:17,940 --> 01:14:22,820
in order to get to the point where

1231
01:14:19,500 --> 01:14:24,780
you're doing the the t p-- transaction

1232
01:14:22,820 --> 01:14:28,889
what happens if you're in the middle of

1233
01:14:24,780 --> 01:14:30,599
Tokyo and you have 2,000 VSS IDs that

1234
01:14:28,890 --> 01:14:35,070
are blasting at you saying join me join

1235
01:14:30,600 --> 01:14:36,660
me join me and so you have it the device

1236
01:14:35,070 --> 01:14:39,120
has a choice can it hunt through all of

1237
01:14:36,660 --> 01:14:42,360
those to go find something that I can

1238
01:14:39,120 --> 01:14:46,680
join it might take a very long time in

1239
01:14:42,360 --> 01:14:48,150
the meantime its battery is done and so

1240
01:14:46,680 --> 01:14:50,970
that might mean that we might need to do

1241
01:14:48,150 --> 01:14:52,500
a little bit of 802 11 integration in

1242
01:14:50,970 --> 01:14:53,970
some cases might not be 802 11

1243
01:14:52,500 --> 01:14:56,040
integration might be integration with

1244
01:14:53,970 --> 01:14:57,480
with with Wi-Fi Alliance componentry or

1245
01:14:56,040 --> 01:14:59,760
something like that with it's all based

1246
01:14:57,480 --> 01:15:02,309
on 802 11 we haven't quite worked any of

1247
01:14:59,760 --> 01:15:03,330
that out but we're thinking about it and

1248
01:15:02,310 --> 01:15:05,789
that's really an optimization

1249
01:15:03,330 --> 01:15:07,969
optimization on the flow that you see

1250
01:15:05,789 --> 01:15:11,099
in the draft the draft basically makes

1251
01:15:07,969 --> 01:15:14,579
various different portions of the

1252
01:15:11,099 --> 01:15:15,809
exchange conditional based on whether or

1253
01:15:14,579 --> 01:15:18,869
not you're able to use the

1254
01:15:15,809 --> 01:15:21,030
authentication material that you have so

1255
01:15:18,869 --> 01:15:22,739
I'm going to I will do a quick redraw of

1256
01:15:21,030 --> 01:15:24,900
the diagrams to avoid the humps again

1257
01:15:22,739 --> 01:15:28,669
its aesthetic and then what I'm hoping

1258
01:15:24,900 --> 01:15:31,429
for is adoption in time for Singapore if

1259
01:15:28,670 --> 01:15:34,980
we as we begin to see some code and

1260
01:15:31,429 --> 01:15:37,099
produce some results so that's the

1261
01:15:34,980 --> 01:15:49,730
update questions comments thoughts

1262
01:15:37,099 --> 01:15:53,130
criticisms Tomatoes no tomatoes bananas

1263
01:15:49,730 --> 01:16:06,239
alright I was waiting for yes we have no

1264
01:15:53,130 --> 01:16:09,440
good could this voucher that he brewski

1265
01:16:06,239 --> 01:16:16,289
used be considered an out-of-band

1266
01:16:09,440 --> 01:16:17,789
mechanism partly it is it partly could

1267
01:16:16,289 --> 01:16:21,539
be let me give you an example of how it

1268
01:16:17,789 --> 01:16:24,360
might be so this ties into the animal

1269
01:16:21,539 --> 01:16:26,039
architecture and so there are two

1270
01:16:24,360 --> 01:16:28,920
possibilities in that architecture one

1271
01:16:26,039 --> 01:16:31,139
possibility is you go all the way out to

1272
01:16:28,920 --> 01:16:33,659
the manufacturer and say hey is this

1273
01:16:31,139 --> 01:16:36,599
yours and if so can I have a voucher

1274
01:16:33,659 --> 01:16:38,489
please and that I wouldn't call that

1275
01:16:36,599 --> 01:16:41,670
out-of-band I'd call that in-band

1276
01:16:38,489 --> 01:16:44,218
even though we're not specifying the the

1277
01:16:41,670 --> 01:16:46,559
mass of communication the second part is

1278
01:16:44,219 --> 01:16:48,449
instead of that I've been given a

1279
01:16:46,559 --> 01:16:51,210
voucher through whatever means I've been

1280
01:16:48,449 --> 01:16:53,369
given it right and I've shoved it into

1281
01:16:51,210 --> 01:16:55,289
my join registrar right at which point

1282
01:16:53,369 --> 01:16:56,730
you've received this thing out of and

1283
01:16:55,289 --> 01:16:59,219
you've shoved it into your join

1284
01:16:56,730 --> 01:17:01,409
registrar maybe it's you know as simple

1285
01:16:59,219 --> 01:17:03,000
as an Excel import or hopefully

1286
01:17:01,409 --> 01:17:06,750
something a little bit more structured

1287
01:17:03,000 --> 01:17:08,219
and then from that point you could you

1288
01:17:06,750 --> 01:17:09,599
could just as easily authenticate so you

1289
01:17:08,219 --> 01:17:11,369
don't have to do the cloud transaction

1290
01:17:09,599 --> 01:17:13,320
immediately thereafter and I'll give you

1291
01:17:11,369 --> 01:17:14,789
know another example of that flow which

1292
01:17:13,320 --> 01:17:17,579
is it could be that the sales

1293
01:17:14,789 --> 01:17:19,500
integration that might happen as part of

1294
01:17:17,579 --> 01:17:21,599
this and you can see this with say

1295
01:17:19,500 --> 01:17:23,790
the cloud-based IOT providers this is

1296
01:17:21,600 --> 01:17:26,730
where they're going they may want to

1297
01:17:23,790 --> 01:17:28,980
hand me a voucher at the time that I

1298
01:17:26,730 --> 01:17:30,179
thought that the sale occurs and I can

1299
01:17:28,980 --> 01:17:31,379
just cram it into my triple-a

1300
01:17:30,180 --> 01:17:34,050
infrastructure right then and there so

1301
01:17:31,380 --> 01:17:36,600
there's no cloud transaction needed but

1302
01:17:34,050 --> 01:17:41,400
that should not affect the bits on the

1303
01:17:36,600 --> 01:17:43,020
wire that we're specifying I hope that's

1304
01:17:41,400 --> 01:17:45,719
what we have to test out over the next

1305
01:17:43,020 --> 01:17:48,620
of the over the coming months and so the

1306
01:17:45,720 --> 01:17:48,620
other questions comments thoughts

1307
01:17:49,610 --> 01:18:09,589
bye-bye thank you

1308
01:17:53,810 --> 01:18:11,940
and last but not least oh it okay so

1309
01:18:09,590 --> 01:18:13,320
I've given this deter Tommy giving this

1310
01:18:11,940 --> 01:18:15,450
presentation or giving a variation at

1311
01:18:13,320 --> 01:18:17,250
this of Acme and a variation of desert

1312
01:18:15,450 --> 01:18:19,740
anima and what this covers is how we can

1313
01:18:17,250 --> 01:18:21,690
use an acme CA in the crowd or just not

1314
01:18:19,740 --> 01:18:24,900
be in the cloud on acne CA as a back-end

1315
01:18:21,690 --> 01:18:29,339
for issuing certificates when you do an

1316
01:18:24,900 --> 01:18:31,769
enrollment over teep so the high-level

1317
01:18:29,340 --> 01:18:33,030
summary is you know teep specifies how

1318
01:18:31,770 --> 01:18:34,650
appear can perform a certain role

1319
01:18:33,030 --> 01:18:37,290
mminton ban by exchanging pic you see is

1320
01:18:34,650 --> 01:18:39,480
ten and seven messages with the chief

1321
01:18:37,290 --> 01:18:41,730
server teak doesn't define how the deep

1322
01:18:39,480 --> 01:18:44,700
server interacts with the CA Acme

1323
01:18:41,730 --> 01:18:46,769
defines how a client can interact with a

1324
01:18:44,700 --> 01:18:49,590
CA and get certificates issued a

1325
01:18:46,770 --> 01:18:50,910
dramatically what this draft covers it

1326
01:18:49,590 --> 01:18:53,190
recovers multiple things but the thing

1327
01:18:50,910 --> 01:18:55,170
that's most relevant here is it shows

1328
01:18:53,190 --> 01:18:58,500
how to stitch these things together how

1329
01:18:55,170 --> 01:19:00,450
a teep a client can interact with a teep

1330
01:18:58,500 --> 01:19:02,010
server exchange because he has ten seven

1331
01:19:00,450 --> 01:19:03,360
messages with the teep server and the

1332
01:19:02,010 --> 01:19:05,160
tips are going to turn around and talk

1333
01:19:03,360 --> 01:19:09,000
to an acme CA to get those certs issued

1334
01:19:05,160 --> 01:19:10,980
and there's probably no changes required

1335
01:19:09,000 --> 01:19:12,090
to Acme your T but possibly T pisander

1336
01:19:10,980 --> 01:19:15,599
specified and want to talk about that

1337
01:19:12,090 --> 01:19:18,840
little bit so there's multiple different

1338
01:19:15,600 --> 01:19:20,520
use cases covered in the draft and the

1339
01:19:18,840 --> 01:19:23,280
one that's important is three here t p--

1340
01:19:20,520 --> 01:19:25,080
and Hana me presents this that Acme we

1341
01:19:23,280 --> 01:19:27,090
agreed that the activations of subdomain

1342
01:19:25,080 --> 01:19:29,220
search would be split out into a

1343
01:19:27,090 --> 01:19:32,220
separate chart draft and what that

1344
01:19:29,220 --> 01:19:33,190
really means is and a client can

1345
01:19:32,220 --> 01:19:36,550
interact with on acnes

1346
01:19:33,190 --> 01:19:38,620
and prove ownership of a domain and then

1347
01:19:36,550 --> 01:19:41,440
the Acme server can then issue multiple

1348
01:19:38,620 --> 01:19:42,790
certs against sub means without declined

1349
01:19:41,440 --> 01:19:44,860
to having to explicitly prove ownership

1350
01:19:42,790 --> 01:19:47,590
of all subdomains so what that means for

1351
01:19:44,860 --> 01:19:49,269
for client integrations is that and the

1352
01:19:47,590 --> 01:19:51,460
client which we teach server in this use

1353
01:19:49,270 --> 01:19:54,790
case and would prove ownership of a

1354
01:19:51,460 --> 01:19:56,770
domain once and then that client would

1355
01:19:54,790 --> 01:19:58,740
be able to get certs from acne from

1356
01:19:56,770 --> 01:20:01,410
multiple different clients hurts against

1357
01:19:58,740 --> 01:20:05,530
some of the means of that primary domain

1358
01:20:01,410 --> 01:20:07,450
these cases we've talked about EST and

1359
01:20:05,530 --> 01:20:09,790
brewski in anima we had a side meeting

1360
01:20:07,450 --> 01:20:13,090
this morning and there's strong interest

1361
01:20:09,790 --> 01:20:14,950
in pursuing and progressing the EST and

1362
01:20:13,090 --> 01:20:16,720
brewski work so that a client will be

1363
01:20:14,950 --> 01:20:18,639
able to talk EST or a clang to be able

1364
01:20:16,720 --> 01:20:20,500
to talk brewski to a server and then

1365
01:20:18,640 --> 01:20:22,840
that server can turn around and talk

1366
01:20:20,500 --> 01:20:25,150
mapping to a CA to get searched that

1367
01:20:22,840 --> 01:20:27,310
work would be progressed and but a

1368
01:20:25,150 --> 01:20:30,790
logical extension and this as well is we

1369
01:20:27,310 --> 01:20:32,200
talk client talks cheap to a server and

1370
01:20:30,790 --> 01:20:37,480
that tip server turns around and talks

1371
01:20:32,200 --> 01:20:39,670
Acme to a CA call flows here this is

1372
01:20:37,480 --> 01:20:40,929
just boilerplate stuff this this is

1373
01:20:39,670 --> 01:20:43,240
lifted from my draft

1374
01:20:40,930 --> 01:20:44,830
its standard Acme authorizations of it

1375
01:20:43,240 --> 01:20:48,219
straight from the Acme draft as well and

1376
01:20:44,830 --> 01:20:51,610
it simply illustrates how a server

1377
01:20:48,220 --> 01:20:53,590
interacts with acne and DNS to prove

1378
01:20:51,610 --> 01:20:58,240
ownership of domain there's nothing new

1379
01:20:53,590 --> 01:21:00,280
here it's pod repaired acne and what I'm

1380
01:20:58,240 --> 01:21:02,139
showing here is and it's a bit of an eye

1381
01:21:00,280 --> 01:21:05,320
strain but it's taken from this current

1382
01:21:02,140 --> 01:21:07,540
draft it's just standard boilerplate TLS

1383
01:21:05,320 --> 01:21:10,030
1.2 tunnel establishment using tip

1384
01:21:07,540 --> 01:21:12,220
nothing new here at all and this is the

1385
01:21:10,030 --> 01:21:15,460
interesting thing here is once the teep

1386
01:21:12,220 --> 01:21:19,810
tunnel is established and the client

1387
01:21:15,460 --> 01:21:22,300
sends a PK C is 10 T of the request in

1388
01:21:19,810 --> 01:21:24,280
that tip tunnel to the tip server we can

1389
01:21:22,300 --> 01:21:27,550
see the tip server is turning around and

1390
01:21:24,280 --> 01:21:31,570
interacting to acne CA and to get that

1391
01:21:27,550 --> 01:21:34,000
certificate issued but there's a couple

1392
01:21:31,570 --> 01:21:34,840
of things that are not fully specified

1393
01:21:34,000 --> 01:21:35,620
here and we haven't really thought

1394
01:21:34,840 --> 01:21:40,450
through properly

1395
01:21:35,620 --> 01:21:43,660
one is the mechanism by which the pier

1396
01:21:40,450 --> 01:21:45,760
will definitively know what domain or

1397
01:21:43,660 --> 01:21:46,910
what fqdn what identifier to put in the

1398
01:21:45,760 --> 01:21:51,200
subject or the sand

1399
01:21:46,910 --> 01:21:55,340
about me acting happy and and the other

1400
01:21:51,200 --> 01:21:58,760
thing that est covers but this doesn't

1401
01:21:55,340 --> 01:22:00,590
is potentially when that pkc on tip

1402
01:21:58,760 --> 01:22:02,960
doesn't over desire on pickasee is ten

1403
01:22:00,590 --> 01:22:04,400
requests a sense with deep server if the

1404
01:22:02,960 --> 01:22:05,870
team server wants to fulfill that

1405
01:22:04,400 --> 01:22:08,410
request but is not able to fulfill that

1406
01:22:05,870 --> 01:22:12,110
request yet how does the tips ever

1407
01:22:08,410 --> 01:22:14,570
signal to the client that yes I am

1408
01:22:12,110 --> 01:22:16,849
willing to give you a pkcs7 response but

1409
01:22:14,570 --> 01:22:22,340
not yet so tip doesn't cover how to do

1410
01:22:16,850 --> 01:22:24,500
that and discussion dot that's it really

1411
01:22:22,340 --> 01:22:26,270
short presentation and it's just a

1412
01:22:24,500 --> 01:22:27,830
broader interest it is of interest to

1413
01:22:26,270 --> 01:22:31,400
the est and brewski communities of

1414
01:22:27,830 --> 01:22:34,220
interest here is two rakat the next

1415
01:22:31,400 --> 01:22:35,690
existing tip an existing tip do we need

1416
01:22:34,220 --> 01:22:39,830
something to back off or retry mechanism

1417
01:22:35,690 --> 01:22:41,240
in response to a PK c as ten TLV and are

1418
01:22:39,830 --> 01:22:43,550
there any channel binding issues not

1419
01:22:41,240 --> 01:22:46,160
covered by section 3 a 2 of t I'm not

1420
01:22:43,550 --> 01:22:47,840
sure I don't think there are but I need

1421
01:22:46,160 --> 01:22:49,580
to review that as well there are some

1422
01:22:47,840 --> 01:22:51,080
related drafts as well there's a couple

1423
01:22:49,580 --> 01:22:55,370
of realtor offs hear that reef at house

1424
01:22:51,080 --> 01:22:57,019
and Kathleen has for issuing acne being

1425
01:22:55,370 --> 01:22:58,190
used to issue device certs but they

1426
01:22:57,020 --> 01:23:05,600
don't explicitly touch on deep

1427
01:22:58,190 --> 01:23:08,150
integration that is it so it's really

1428
01:23:05,600 --> 01:23:10,550
interesting because a lot of what

1429
01:23:08,150 --> 01:23:13,370
swollen are probably a lot of small

1430
01:23:10,550 --> 01:23:17,210
enterprises don't even want to run any

1431
01:23:13,370 --> 01:23:19,460
form of CA and the ability to to maybe

1432
01:23:17,210 --> 01:23:21,710
link up to a public C or CA something

1433
01:23:19,460 --> 01:23:25,010
like this so may be very very useful in

1434
01:23:21,710 --> 01:23:26,360
number of cases the reason I got the

1435
01:23:25,010 --> 01:23:28,880
microphone is I think what you're asking

1436
01:23:26,360 --> 01:23:30,460
about the teeth work is that we need to

1437
01:23:28,880 --> 01:23:34,400
have the equivalent of a 202

1438
01:23:30,460 --> 01:23:37,880
under a response code in the draft that

1439
01:23:34,400 --> 01:23:41,509
we put together and I think the answer

1440
01:23:37,880 --> 01:23:44,000
is yes we do I think one of the things

1441
01:23:41,510 --> 01:23:45,440
that we need from the security our area

1442
01:23:44,000 --> 01:23:49,130
as we go through a lot of the review

1443
01:23:45,440 --> 01:23:50,870
around this is what are our resource

1444
01:23:49,130 --> 01:23:53,390
concern what is resource where is

1445
01:23:50,870 --> 01:23:56,180
resource consumption occurring and in

1446
01:23:53,390 --> 01:23:58,010
the process of doing that and and the

1447
01:23:56,180 --> 01:23:59,960
fun of the fundamental layer is that the

1448
01:23:58,010 --> 01:24:02,630
if the CA is unavailable

1449
01:23:59,960 --> 01:24:06,710
at a time at any given time somebody's

1450
01:24:02,630 --> 01:24:09,290
holding state essentially saying as we

1451
01:24:06,710 --> 01:24:11,480
were saying in another room no super you

1452
01:24:09,290 --> 01:24:13,700
come back in five minutes but how to

1453
01:24:11,480 --> 01:24:18,099
state expire in these circumstances we

1454
01:24:13,700 --> 01:24:18,099
should be studying now a little bit

1455
01:24:19,870 --> 01:24:25,460
thanks hone up Dan Harkins again perhaps

1456
01:24:23,510 --> 01:24:28,460
this isn't the related grass they didn't

1457
01:24:25,460 --> 01:24:30,890
read yet but how do you envision these

1458
01:24:28,460 --> 01:24:33,380
devices get or these certificates get

1459
01:24:30,890 --> 01:24:37,160
named so if you know the devices you

1460
01:24:33,380 --> 01:24:38,960
know widget my serial number is one two

1461
01:24:37,160 --> 01:24:41,780
three four I guess that would be in the

1462
01:24:38,960 --> 01:24:43,219
CSR but then that's exactly the open

1463
01:24:41,780 --> 01:24:45,710
issue that I mentioned going through one

1464
01:24:43,219 --> 01:24:47,870
open issue is how to ensure that the

1465
01:24:45,710 --> 01:24:50,000
device the station knows exactly what

1466
01:24:47,870 --> 01:24:53,450
fqdn are identified to put in subject

1467
01:24:50,000 --> 01:24:56,690
your sand key cap keep acme happy and in

1468
01:24:53,450 --> 01:24:59,719
east EST and brewski the way that could

1469
01:24:56,690 --> 01:25:01,460
happen is the device sends a CSR out

1470
01:24:59,719 --> 01:25:02,840
treats requests to the server and the

1471
01:25:01,460 --> 01:25:06,050
server responds and tells it what to put

1472
01:25:02,840 --> 01:25:15,700
in the subject how it works here it's an

1473
01:25:06,050 --> 01:25:18,050
open I do not know okay Joe solloway so

1474
01:25:15,700 --> 01:25:21,769
it's kind of interesting to have that

1475
01:25:18,050 --> 01:25:25,310
the the kind of I can't give you a

1476
01:25:21,770 --> 01:25:28,010
certificate now come back later I mean

1477
01:25:25,310 --> 01:25:30,530
the net result there is probably you're

1478
01:25:28,010 --> 01:25:33,110
gonna not get any network I mean I think

1479
01:25:30,530 --> 01:25:35,660
it actually could work that you you you

1480
01:25:33,110 --> 01:25:38,630
basically reject you know you do it

1481
01:25:35,660 --> 01:25:41,780
eat fail and and give the person a token

1482
01:25:38,630 --> 01:25:43,270
to call back later within this state

1483
01:25:41,780 --> 01:25:46,519
could all be maintained

1484
01:25:43,270 --> 01:25:48,830
probably in the in the back end you

1485
01:25:46,520 --> 01:25:50,120
could you could you could even work

1486
01:25:48,830 --> 01:25:52,580
thought with T this one the three

1487
01:25:50,120 --> 01:25:54,800
session resumption right so you give it

1488
01:25:52,580 --> 01:25:57,200
a token to retry establish an UTI

1489
01:25:54,800 --> 01:25:59,630
session later or yeah you would still

1490
01:25:57,200 --> 01:26:04,280
probably need that this acne support

1491
01:25:59,630 --> 01:26:05,750
call me back later yeah yeah yeah so

1492
01:26:04,280 --> 01:26:07,309
there's probably see I'm token that the

1493
01:26:05,750 --> 01:26:09,650
client would have to maintain but you

1494
01:26:07,310 --> 01:26:12,140
did acne would be maintaining the state

1495
01:26:09,650 --> 01:26:13,670
on whether their sir was no on how to

1496
01:26:12,140 --> 01:26:15,350
get the cert back

1497
01:26:13,670 --> 01:26:16,850
so I think it would be possible you're

1498
01:26:15,350 --> 01:26:19,510
just you're not going to have any

1499
01:26:16,850 --> 01:26:23,120
network connectivity until that point

1500
01:26:19,510 --> 01:26:35,720
which I you know may or may not be a

1501
01:26:23,120 --> 01:26:38,000
problem yeah hmm boy so do do questions

1502
01:26:35,720 --> 01:26:40,040
or remarks anything that happens beyond

1503
01:26:38,000 --> 01:26:42,740
the deep server is not really concern of

1504
01:26:40,040 --> 01:26:45,410
this group whether you Zack may or full

1505
01:26:42,740 --> 01:26:47,330
bar right whatever happens between the e

1506
01:26:45,410 --> 01:26:52,970
pier and the observer is what

1507
01:26:47,330 --> 01:26:55,550
eeep is doing and I mean sure you could

1508
01:26:52,970 --> 01:26:58,700
use Acme I have no tact Acme expert but

1509
01:26:55,550 --> 01:27:00,170
I don't know whether Acme does client

1510
01:26:58,700 --> 01:27:02,420
certificates nor does it even

1511
01:27:00,170 --> 01:27:04,430
distinguish between client certificates

1512
01:27:02,420 --> 01:27:06,500
and server certificates because my

1513
01:27:04,430 --> 01:27:08,960
understanding was activist mostly for

1514
01:27:06,500 --> 01:27:11,360
like domain validation and and server

1515
01:27:08,960 --> 01:27:13,220
certificates and not for issuing device

1516
01:27:11,360 --> 01:27:17,710
certificates maybe there is some some

1517
01:27:13,220 --> 01:27:20,810
super sir so what we've used cases for

1518
01:27:17,710 --> 01:27:23,030
the thing that's getting the certificate

1519
01:27:20,810 --> 01:27:25,100
is both a client and server so we have

1520
01:27:23,030 --> 01:27:26,300
like sure but part is not the group to

1521
01:27:25,100 --> 01:27:32,840
do that right

1522
01:27:26,300 --> 01:27:35,030
maybe Acme is the group to do that so

1523
01:27:32,840 --> 01:27:36,470
that there may be like there's a couple

1524
01:27:35,030 --> 01:27:38,630
of things here right first there may be

1525
01:27:36,470 --> 01:27:42,440
work required in the peak is he is ten

1526
01:27:38,630 --> 01:27:44,300
pkc seven back off retry and there may

1527
01:27:42,440 --> 01:27:46,009
also be work the question that I asked

1528
01:27:44,300 --> 01:27:49,250
in the question that I open question

1529
01:27:46,010 --> 01:27:53,150
anyways as well is the mechanism by

1530
01:27:49,250 --> 01:28:03,650
which the station or the peer knows

1531
01:27:53,150 --> 01:28:05,809
exactly but but it it it it involves

1532
01:28:03,650 --> 01:28:09,099
changes to the state machine that t p--

1533
01:28:05,810 --> 01:28:14,240
goes through to in order to enable that

1534
01:28:09,100 --> 01:28:16,400
okay the teep the t client and server

1535
01:28:14,240 --> 01:28:20,780
okay the supplicant and the

1536
01:28:16,400 --> 01:28:24,679
authenticator okay have to add states to

1537
01:28:20,780 --> 01:28:26,179
deal with this additional question acne

1538
01:28:24,680 --> 01:28:27,469
already deals with the problem it's

1539
01:28:26,180 --> 01:28:28,580
already stated do something

1540
01:28:27,469 --> 01:28:30,320
point is that's why we're here

1541
01:28:28,580 --> 01:28:32,660
discussing it is because it involves

1542
01:28:30,320 --> 01:28:37,190
changes potential changes to state

1543
01:28:32,660 --> 01:28:43,130
machine that octi okay and Acme doesn't

1544
01:28:37,190 --> 01:28:46,070
know anything about that you do right so

1545
01:28:43,130 --> 01:28:50,210
yeah maybe there is something we can we

1546
01:28:46,070 --> 01:28:51,769
can look into that the second kind of

1547
01:28:50,210 --> 01:28:54,770
note I wanted to make it should not be

1548
01:28:51,770 --> 01:28:56,630
the device or the peer that says issue

1549
01:28:54,770 --> 01:28:58,610
made this certificate it should be the

1550
01:28:56,630 --> 01:29:01,400
deep server which is authenticating the

1551
01:28:58,610 --> 01:29:03,980
peer saying that so so so the server is

1552
01:29:01,400 --> 01:29:05,629
the one that sees this is this is the

1553
01:29:03,980 --> 01:29:08,199
device that's trying to connect to me

1554
01:29:05,630 --> 01:29:11,570
this is the knife that it sent to me and

1555
01:29:08,199 --> 01:29:13,549
whether I issue it a certificate for

1556
01:29:11,570 --> 01:29:15,799
deny that it sent me or for some

1557
01:29:13,550 --> 01:29:17,630
something completely different it should

1558
01:29:15,800 --> 01:29:19,400
be the server that enforces this and not

1559
01:29:17,630 --> 01:29:20,989
like client saying hey can you give me a

1560
01:29:19,400 --> 01:29:44,360
certificate for that guy in the next

1561
01:29:20,989 --> 01:29:46,580
room okay so you're saying that this or

1562
01:29:44,360 --> 01:29:51,259
would still enforce it when it sees the

1563
01:29:46,580 --> 01:29:55,280
CSR but okay the server can enforce a

1564
01:29:51,260 --> 01:30:03,230
policy but if you know the client has to

1565
01:29:55,280 --> 01:30:09,019
generate the request okay thanks any

1566
01:30:03,230 --> 01:30:10,790
other questions on this topic all right

1567
01:30:09,020 --> 01:30:13,190
now I think we run through our regular

1568
01:30:10,790 --> 01:30:16,070
agenda I don't know if Bernard if you

1569
01:30:13,190 --> 01:30:17,870
ever got to cover the topic you wanted

1570
01:30:16,070 --> 01:30:23,739
to cover at the beginning when we missed

1571
01:30:17,870 --> 01:30:27,730
you or if anybody had

1572
01:30:23,739 --> 01:30:30,428
another topic up here comes Bernard yeah

1573
01:30:27,730 --> 01:30:33,428
basically I've been working offline to

1574
01:30:30,429 --> 01:30:35,320
get Alan the contacts he wanted and I

1575
01:30:33,429 --> 01:30:38,050
think I may have that so that that was

1576
01:30:35,320 --> 01:30:43,889
my only my only comment relating gallons

1577
01:30:38,050 --> 01:30:48,159
questions okay great thank you very much

1578
01:30:43,889 --> 01:30:50,139
Roman I'm just bringing up a pet topic

1579
01:30:48,159 --> 01:30:51,820
that I'm sharing in all the working

1580
01:30:50,139 --> 01:30:54,010
groups I love the fact that we're

1581
01:30:51,820 --> 01:30:55,360
talking about kind of drafts and I love

1582
01:30:54,010 --> 01:30:57,340
the fact that we're saying let's wait

1583
01:30:55,360 --> 01:30:59,320
for the code to tap to help us I think

1584
01:30:57,340 --> 01:31:01,539
that tremendously improves kind of the

1585
01:30:59,320 --> 01:31:03,849
quality one thing I would ask that kind

1586
01:31:01,539 --> 01:31:05,559
of this working group is can we put a

1587
01:31:03,849 --> 01:31:07,119
list of those implementations relative

1588
01:31:05,559 --> 01:31:09,099
to those drafts somewhere where it's

1589
01:31:07,119 --> 01:31:10,690
easily accessible perhaps not to those

1590
01:31:09,099 --> 01:31:12,039
that regularly come to these meetings so

1591
01:31:10,690 --> 01:31:13,749
there's a better sense of what the

1592
01:31:12,039 --> 01:31:17,289
running code is behind those drafts so

1593
01:31:13,749 --> 01:31:18,909
we're groups like TLS dots and others

1594
01:31:17,289 --> 01:31:21,789
have done things like that do it in

1595
01:31:18,909 --> 01:31:23,289
github do it in the tract wiki I would

1596
01:31:21,789 --> 01:31:25,719
recommend not just the list I would

1597
01:31:23,289 --> 01:31:27,249
recommend you know running code versus

1598
01:31:25,719 --> 01:31:28,719
this draft and potentially even which

1599
01:31:27,249 --> 01:31:30,789
version of that draft and that'll help

1600
01:31:28,719 --> 01:31:32,110
if we decided to interrupt testing and

1601
01:31:30,789 --> 01:31:34,719
it certainly helps me when I advance

1602
01:31:32,110 --> 01:31:36,460
drafts to say it's not just us having

1603
01:31:34,719 --> 01:31:38,050
written some words it's we have some

1604
01:31:36,460 --> 01:31:56,730
code backing us to give us confidence to

1605
01:31:38,050 --> 01:32:19,150
progress the droughts great thanks but I

1606
01:31:56,730 --> 01:32:20,829
working all the different business other

1607
01:32:19,150 --> 01:32:26,589
business Dan what is it

1608
01:32:20,829 --> 01:32:28,749
aside from cookies I send a note the

1609
01:32:26,590 --> 01:32:31,690
list I have a new draft out that fixes

1610
01:32:28,749 --> 01:32:34,280
the attacks against ep WD that were

1611
01:32:31,690 --> 01:32:39,290
highlighted in the dragon blood paper

1612
01:32:34,280 --> 01:32:43,280
so please have a look comment and thank

1613
01:32:39,290 --> 01:32:46,670
you all right when or did you have

1614
01:32:43,280 --> 01:32:53,269
another no I think he was just he didn't

1615
01:32:46,670 --> 01:33:00,260
hit leave the queue alright see you next

1616
01:32:53,270 --> 01:33:01,970
time yeah I just had a question about

1617
01:33:00,260 --> 01:33:05,450
whether we would think about Interop

1618
01:33:01,970 --> 01:33:08,570
test for some of the TOS 1.3 stuff at

1619
01:33:05,450 --> 01:33:16,460
some point it interrupts us yeah like at

1620
01:33:08,570 --> 01:33:18,500
a hackathon I know I think well that's

1621
01:33:16,460 --> 01:33:19,760
something we'll have to take up and see

1622
01:33:18,500 --> 01:33:26,080
if we can find it but I think that would

1623
01:33:19,760 --> 01:33:26,080
be a good idea okay thanks

1624
01:34:30,570 --> 01:34:42,169
[Music]

1625
01:35:27,280 --> 01:35:30,349
[Music]

1626
01:36:41,489 --> 01:36:43,549
you

