1
00:01:01,440 --> 00:01:04,530
[Music]

2
00:01:53,850 --> 00:02:01,809
you can start thank you welcome this is

3
00:01:58,180 --> 00:02:05,800
Dina self working group we have two

4
00:02:01,810 --> 00:02:09,390
hours this session I'm Benna Tim is

5
00:02:05,800 --> 00:02:20,560
sitting over there Suzanne is over here

6
00:02:09,389 --> 00:02:21,609
scribe is who subscribe actually Brian

7
00:02:20,560 --> 00:02:22,870
here Berman will be helping them out

8
00:02:21,610 --> 00:02:25,200
concetto pretend to be here for the

9
00:02:22,870 --> 00:02:27,660
whole meeting and our minute taker is

10
00:02:25,200 --> 00:02:32,109
thank you Paul thank you

11
00:02:27,660 --> 00:02:36,310
okay welcome demon ah excellent

12
00:02:32,110 --> 00:02:38,920
thank you very much a note well take

13
00:02:36,310 --> 00:02:41,769
notice of this note well is also applied

14
00:02:38,920 --> 00:02:43,720
so this working group of course blue

15
00:02:41,769 --> 00:02:45,790
sheets please fill them in with a full

16
00:02:43,720 --> 00:02:48,730
room we want to have a large room and

17
00:02:45,790 --> 00:02:53,200
for the next time also to accommodate

18
00:02:48,730 --> 00:02:56,679
everyone thank you agenda we have a full

19
00:02:53,200 --> 00:02:58,109
agenda so please bear with me if we are

20
00:02:56,680 --> 00:03:01,870
a little bit strict on time management

21
00:02:58,110 --> 00:03:03,790
depending on a discussion of course we

22
00:03:01,870 --> 00:03:06,640
have some current working group business

23
00:03:03,790 --> 00:03:08,739
to a name we have something like the

24
00:03:06,640 --> 00:03:12,820
chairs introduction we will give brief

25
00:03:08,739 --> 00:03:16,840
context about a name and a new draft by

26
00:03:12,820 --> 00:03:22,780
Eric negan I sorry I've mispronounced

27
00:03:16,840 --> 00:03:24,820
your name about HTTP SVC well gives a

28
00:03:22,780 --> 00:03:28,840
little bit context how they overlap but

29
00:03:24,820 --> 00:03:31,660
also different new working business it's

30
00:03:28,840 --> 00:03:35,290
not all new but it's not it's not dinner

31
00:03:31,660 --> 00:03:40,390
stop working business yet is work on the

32
00:03:35,290 --> 00:03:44,320
r DD r DB d by Steven and maybe Carson

33
00:03:40,390 --> 00:03:48,190
okay some will give a presentation new

34
00:03:44,320 --> 00:03:55,290
work by Paul hora Giovanni will give an

35
00:03:48,190 --> 00:03:55,290
update etcetera if time permits what

36
00:03:57,760 --> 00:04:04,209
I'll give a presentation on Venus

37
00:03:59,920 --> 00:04:07,329
comfort good let's get started

38
00:04:04,209 --> 00:04:11,230
so we want to start with a name

39
00:04:07,330 --> 00:04:17,280
discussion here a name has seen a number

40
00:04:11,230 --> 00:04:20,139
of iterations after Tony did some

41
00:04:17,279 --> 00:04:23,138
redrafting of the document it simplified

42
00:04:20,139 --> 00:04:25,180
a name draft and it makes a distinction

43
00:04:23,139 --> 00:04:27,040
be the authoritative parts and the

44
00:04:25,180 --> 00:04:28,870
recursive part so much of the complexity

45
00:04:27,040 --> 00:04:31,300
are in the recursive part and the more

46
00:04:28,870 --> 00:04:33,479
simple use case are in the alternative

47
00:04:31,300 --> 00:04:36,669
part a name

48
00:04:33,479 --> 00:04:39,310
at least it started out to solve a

49
00:04:36,669 --> 00:04:43,870
problem like an alias or a cname in the

50
00:04:39,310 --> 00:04:46,150
apex but it also has other solutions

51
00:04:43,870 --> 00:04:50,979
that's a solution it spawns a solution

52
00:04:46,150 --> 00:04:55,198
space with the recent SPS SVC proposal

53
00:04:50,979 --> 00:04:57,969
it's address is partly the same problem

54
00:04:55,199 --> 00:05:00,280
provisioning web services or names for

55
00:04:57,970 --> 00:05:03,490
web services on different maybe multiple

56
00:05:00,280 --> 00:05:06,820
CD ends so that seems to be an overlap

57
00:05:03,490 --> 00:05:09,400
so the chair still believe they

58
00:05:06,820 --> 00:05:12,550
addressed different problem spaces with

59
00:05:09,400 --> 00:05:14,830
an overlap but are still both worthwhile

60
00:05:12,550 --> 00:05:18,360
to explore so let's keep that in mind

61
00:05:14,830 --> 00:05:22,930
when we discuss the different drafts

62
00:05:18,360 --> 00:05:26,349
more specifically a name and if you have

63
00:05:22,930 --> 00:05:28,720
more interest in that's use case a name

64
00:05:26,349 --> 00:05:31,659
is very interesting if you talk about

65
00:05:28,720 --> 00:05:32,950
API so if you go for fertilization you

66
00:05:31,660 --> 00:05:35,289
have all kind of services on different

67
00:05:32,950 --> 00:05:38,469
places that move around you want so it's

68
00:05:35,289 --> 00:05:40,990
not specific it has started a name work

69
00:05:38,470 --> 00:05:43,180
started out for the web services and the

70
00:05:40,990 --> 00:05:46,990
CDN said provisioning but it has a

71
00:05:43,180 --> 00:05:49,120
larger solution space also for api's and

72
00:05:46,990 --> 00:05:54,880
not necessarily web services web

73
00:05:49,120 --> 00:06:00,030
browsers Tim should I mention something

74
00:05:54,880 --> 00:06:00,030
else on this topic to give some context

75
00:06:00,419 --> 00:06:04,960
so so for

76
00:06:02,620 --> 00:06:07,570
keep in mind as the authoritative parts

77
00:06:04,960 --> 00:06:12,099
comp less complex in the recursive part

78
00:06:07,570 --> 00:06:14,860
for HCPs it's straightforward cotton

79
00:06:12,100 --> 00:06:16,630
quality solution but it probably needs

80
00:06:14,860 --> 00:06:19,510
some additional processing for the

81
00:06:16,630 --> 00:06:21,760
records but we expect I am NOT and web

82
00:06:19,510 --> 00:06:23,469
browser developer this additional

83
00:06:21,760 --> 00:06:26,080
processing is probably done by the web

84
00:06:23,470 --> 00:06:28,060
browsers anyway or might be end up

85
00:06:26,080 --> 00:06:29,919
somewhere extra work in Lipsey I don't

86
00:06:28,060 --> 00:06:32,260
know but that's all something to discuss

87
00:06:29,919 --> 00:06:35,760
during the drafts I think I give

88
00:06:32,260 --> 00:06:39,669
sufficient contacts on both the draft

89
00:06:35,760 --> 00:06:42,190
we reserved quite some time twenty plus

90
00:06:39,669 --> 00:06:44,698
twenty minutes so it's about 40 ish

91
00:06:42,190 --> 00:06:48,340
minutes including discussions of course

92
00:06:44,699 --> 00:06:51,580
I think we go to the remote presentation

93
00:06:48,340 --> 00:06:54,250
by my dice Evan will be in the room is

94
00:06:51,580 --> 00:06:56,440
in the room and this will act as a

95
00:06:54,250 --> 00:07:00,669
backup for discussions and explanations

96
00:06:56,440 --> 00:07:03,270
I don't think it's necessary but okay

97
00:07:00,669 --> 00:07:03,270
thank you

98
00:07:19,939 --> 00:07:28,770
hello now you can hear me yeah we do

99
00:07:25,409 --> 00:07:33,169
hear you I do see you and I think yeah

100
00:07:28,770 --> 00:07:33,169
on the large screen URLs of this book

101
00:07:33,379 --> 00:07:44,120
I'm I will go to the slide sorry yeah

102
00:07:37,590 --> 00:07:51,750
thanks I think this might ask this one

103
00:07:44,120 --> 00:07:55,969
yes you see the slides yes yes please go

104
00:07:51,750 --> 00:07:57,300
out and say next next slide let me think

105
00:07:55,969 --> 00:07:59,039
so

106
00:07:57,300 --> 00:08:01,099
they know already mentioned a little bit

107
00:07:59,039 --> 00:08:05,639
on the motivation

108
00:08:01,099 --> 00:08:08,039
so this slide should be a little bit of

109
00:08:05,639 --> 00:08:09,629
repetition this is the motivation we

110
00:08:08,039 --> 00:08:13,289
started out we want to do seeing them at

111
00:08:09,629 --> 00:08:15,150
the apex of the suit work for the CBN's

112
00:08:13,289 --> 00:08:17,039
but it's not the only use case although

113
00:08:15,150 --> 00:08:21,029
admittedly it's probably the largest use

114
00:08:17,039 --> 00:08:23,099
case the nests provide us with silly end

115
00:08:21,029 --> 00:08:26,000
customers now have their own propriety

116
00:08:23,099 --> 00:08:28,878
solutions and so it's hard for them to

117
00:08:26,000 --> 00:08:38,149
to switch providers or support multiple

118
00:08:28,879 --> 00:08:38,149
model next slide a little bit of history

119
00:08:38,539 --> 00:08:46,949
basically forget everything before the -

120
00:08:41,578 --> 00:08:49,229
no - version that version I think is the

121
00:08:46,949 --> 00:08:51,479
fundamental basis of aiming everything

122
00:08:49,230 --> 00:08:53,130
before had some issues it required to

123
00:08:51,480 --> 00:08:57,149
resolve a spot which made it hard to

124
00:08:53,130 --> 00:08:59,399
deploy had issues with some transfers

125
00:08:57,149 --> 00:09:03,360
and so the rewrite actually makes it

126
00:08:59,399 --> 00:09:06,420
much simpler in the sense that it makes

127
00:09:03,360 --> 00:09:11,490
aiming processing optional in every

128
00:09:06,420 --> 00:09:14,579
place but possible in any place what

129
00:09:11,490 --> 00:09:19,380
that means is that afforded if can do

130
00:09:14,579 --> 00:09:21,269
the ending processing but then the

131
00:09:19,380 --> 00:09:23,100
result can also do they mean processing

132
00:09:21,269 --> 00:09:25,970
and that might be redundant if both to

133
00:09:23,100 --> 00:09:30,619
them but it still works

134
00:09:25,970 --> 00:09:34,079
from there I sort of cook the editing

135
00:09:30,619 --> 00:09:36,509
obligations on me and I made it first

136
00:09:34,079 --> 00:09:41,128
and editorial version which is attached

137
00:09:36,509 --> 00:09:44,069
to a tree and then a one that resolves

138
00:09:41,129 --> 00:09:50,849
some issues that was still existing in a

139
00:09:44,069 --> 00:09:52,439
digital version next slide so the deso 2

140
00:09:50,849 --> 00:09:54,359
version for those who haven't been

141
00:09:52,439 --> 00:09:57,179
following the evening work is the much

142
00:09:54,359 --> 00:10:00,720
cleaner version it makes a result of

143
00:09:57,179 --> 00:10:04,079
support optional and even the perfect

144
00:10:00,720 --> 00:10:07,049
look of optional that means that if

145
00:10:04,079 --> 00:10:09,299
nobody's doing a name it's not so useful

146
00:10:07,049 --> 00:10:12,779
it would be similar to just publishing

147
00:10:09,299 --> 00:10:14,489
every circuit in the zone but the

148
00:10:12,779 --> 00:10:18,769
expectation is that the DNS provider

149
00:10:14,489 --> 00:10:24,179
will implement or would look up at lives

150
00:10:18,769 --> 00:10:30,659
as their alternative to the propriety

151
00:10:24,179 --> 00:10:32,309
solutions there is no longer an

152
00:10:30,659 --> 00:10:34,409
exception for zone transfers there's

153
00:10:32,309 --> 00:10:41,899
lots of flexibility to get to your use

154
00:10:34,409 --> 00:10:41,899
case yeah let's go to the next slide so

155
00:10:42,919 --> 00:10:51,509
- up free is mostly style structure some

156
00:10:48,769 --> 00:10:52,709
moving text form from the main body to

157
00:10:51,509 --> 00:10:57,449
the appendix because it's more a

158
00:10:52,709 --> 00:10:59,819
background information and I want to do

159
00:10:57,449 --> 00:11:03,628
this version before going into the

160
00:10:59,819 --> 00:11:07,049
issues to make a clear cut so that

161
00:11:03,629 --> 00:11:09,289
explains where we have a - or 3 next

162
00:11:07,049 --> 00:11:09,289
fight

163
00:11:09,470 --> 00:11:16,919
- afford use with a lot of issues that

164
00:11:13,199 --> 00:11:20,748
were mentioned on the list put him to

165
00:11:16,919 --> 00:11:24,019
the github and then and then we solved

166
00:11:20,749 --> 00:11:26,519
these three I think are the main ones

167
00:11:24,019 --> 00:11:28,439
first one is alien precedents there was

168
00:11:26,519 --> 00:11:30,720
a discussion whether the addresses that

169
00:11:28,439 --> 00:11:34,139
are next to the aining whether they

170
00:11:30,720 --> 00:11:36,629
should override aiming or could be used

171
00:11:34,139 --> 00:11:41,369
as a defaults when the lookup fails for

172
00:11:36,629 --> 00:11:43,030
example we resolved it to being as a

173
00:11:41,369 --> 00:11:46,630
default

174
00:11:43,030 --> 00:11:49,689
that means in the - co2 version that was

175
00:11:46,630 --> 00:11:53,380
already okay so little tax changes were

176
00:11:49,690 --> 00:11:56,170
needed for the - affirm the second one

177
00:11:53,380 --> 00:12:00,400
listed TTL considerations when doing a

178
00:11:56,170 --> 00:12:02,469
target lookup now when you have resolved

179
00:12:00,400 --> 00:12:06,100
the target and you're going to place the

180
00:12:02,470 --> 00:12:08,290
sibling other circuits if the TTL will

181
00:12:06,100 --> 00:12:12,790
be the minimum of all the encountered

182
00:12:08,290 --> 00:12:15,670
TTL so if you do look up in Percy name

183
00:12:12,790 --> 00:12:20,219
on or a name you will minimize the TTL

184
00:12:15,670 --> 00:12:22,780
and then eventually will be target and

185
00:12:20,220 --> 00:12:25,840
so you're going to necessary matters

186
00:12:22,780 --> 00:12:29,439
it's the TTL will be the lowest you'll

187
00:12:25,840 --> 00:12:31,150
encounter this is because when you're

188
00:12:29,440 --> 00:12:35,380
doing this at the afford it if you're

189
00:12:31,150 --> 00:12:37,270
actually playing as a resolver and so

190
00:12:35,380 --> 00:12:39,340
you can do some caching but then you

191
00:12:37,270 --> 00:12:42,250
have a cache at your authoritative and

192
00:12:39,340 --> 00:12:44,350
then the client will ask for records and

193
00:12:42,250 --> 00:12:47,760
they will cast themselves as well so

194
00:12:44,350 --> 00:12:51,730
there's some TTL stretching here and and

195
00:12:47,760 --> 00:12:55,330
taking the minimum TTL will mitigate

196
00:12:51,730 --> 00:12:57,820
against it's a little bit we also put

197
00:12:55,330 --> 00:13:01,750
some text in there for those stretching

198
00:12:57,820 --> 00:13:09,210
considerations explain what exactly

199
00:13:01,750 --> 00:13:12,760
happens and the third point is whether

200
00:13:09,210 --> 00:13:16,360
the sibling advocates records should be

201
00:13:12,760 --> 00:13:18,060
in the additional section so let me

202
00:13:16,360 --> 00:13:21,840
rephrase again whether when you do a

203
00:13:18,060 --> 00:13:24,069
address query so cute IP say or four day

204
00:13:21,840 --> 00:13:28,270
whether the a9 should be in the answer

205
00:13:24,070 --> 00:13:30,130
section or in the additional section am

206
00:13:28,270 --> 00:13:32,290
is part of the answer so it makes sense

207
00:13:30,130 --> 00:13:34,840
to put them in the am section but Tony

208
00:13:32,290 --> 00:13:44,349
pointed out that the DNA is caused a lot

209
00:13:34,840 --> 00:13:46,540
of issues still on the demos of list it

210
00:13:44,350 --> 00:13:48,340
looked like there was slight concerns a

211
00:13:46,540 --> 00:13:51,430
slightly leaning towards putting the

212
00:13:48,340 --> 00:13:54,980
enemy in the answer section so the -

213
00:13:51,430 --> 00:13:56,900
refer has specification or

214
00:13:54,980 --> 00:14:02,840
that and put them in in the answer

215
00:13:56,900 --> 00:14:08,750
section next slide this is a list of all

216
00:14:02,840 --> 00:14:10,580
the issues with results on the github so

217
00:14:08,750 --> 00:14:16,100
you can see there's a lot of work being

218
00:14:10,580 --> 00:14:18,170
done next slide there are some open

219
00:14:16,100 --> 00:14:19,700
issues one of them is the loop detection

220
00:14:18,170 --> 00:14:23,030
issue and the loop detection issue is

221
00:14:19,700 --> 00:14:26,210
the point where you doing a query in

222
00:14:23,030 --> 00:14:28,040
addis barry and you're following the

223
00:14:26,210 --> 00:14:33,260
target

224
00:14:28,040 --> 00:14:36,920
so an address query which has an a name

225
00:14:33,260 --> 00:14:40,060
on that evening may trigger another

226
00:14:36,920 --> 00:14:43,219
additional query to look up that target

227
00:14:40,060 --> 00:14:45,229
that can hit another server that has a

228
00:14:43,220 --> 00:14:48,380
name name and that will point back to

229
00:14:45,230 --> 00:14:53,740
eventually the same server creating a

230
00:14:48,380 --> 00:14:53,740
loop and it's very hard to detect a blue

231
00:14:54,100 --> 00:15:00,530
young posted is to list with some

232
00:14:56,680 --> 00:15:04,790
options to resolve it

233
00:15:00,530 --> 00:15:07,699
one option is to put the logic that a

234
00:15:04,790 --> 00:15:10,010
queue type a name means that the

235
00:15:07,700 --> 00:15:13,600
afforded a service should not almost not

236
00:15:10,010 --> 00:15:17,420
chase the target so that accent avoids

237
00:15:13,600 --> 00:15:23,120
or allows for a target look up without

238
00:15:17,420 --> 00:15:25,870
one have to worry about a loop and the

239
00:15:23,120 --> 00:15:28,430
other one is having an easiness option

240
00:15:25,870 --> 00:15:39,860
and that says don't chase targets i know

241
00:15:28,430 --> 00:15:43,040
a name myself my personal consideration

242
00:15:39,860 --> 00:15:45,830
that the last one is that eventually

243
00:15:43,040 --> 00:15:49,880
will hope that browsers will query for a

244
00:15:45,830 --> 00:15:54,620
name or similar record and how will they

245
00:15:49,880 --> 00:15:58,490
signal that support and also in the

246
00:15:54,620 --> 00:16:01,430
current version of the draft we say a

247
00:15:58,490 --> 00:16:04,310
for deaf can do any processing which

248
00:16:01,430 --> 00:16:06,729
also can do any processing so if we

249
00:16:04,310 --> 00:16:08,660
resolve a signal support for a name and

250
00:16:06,730 --> 00:16:11,899
authority

251
00:16:08,660 --> 00:16:13,730
could still chase targets because it

252
00:16:11,899 --> 00:16:22,209
wants to give the most optimized

253
00:16:13,730 --> 00:16:25,250
response so that's one issue next slide

254
00:16:22,209 --> 00:16:27,349
another open issue is what to do if you

255
00:16:25,250 --> 00:16:33,740
do any processing and the target lookup

256
00:16:27,350 --> 00:16:39,949
fails so basically how to treat an error

257
00:16:33,740 --> 00:16:43,670
response my feeling is that that you

258
00:16:39,949 --> 00:16:47,589
could use the currently known sibling

259
00:16:43,670 --> 00:16:50,240
other circuits as the best effort or

260
00:16:47,589 --> 00:16:53,110
another option is to transfer fail

261
00:16:50,240 --> 00:16:56,269
because on your lookup something

262
00:16:53,110 --> 00:16:58,699
unexpected happens so would you give

263
00:16:56,269 --> 00:17:02,569
back a slightly less optimized response

264
00:16:58,699 --> 00:17:14,899
or would you prefer to signal that that

265
00:17:02,569 --> 00:17:17,178
I look up films next slide so there's

266
00:17:14,900 --> 00:17:20,179
actually a couple of more issues there's

267
00:17:17,179 --> 00:17:25,339
no slide for that but better provided a

268
00:17:20,179 --> 00:17:29,090
review on aiming which has some slight

269
00:17:25,339 --> 00:17:32,090
some small issues that I think also need

270
00:17:29,090 --> 00:17:35,539
to be covered together with that I think

271
00:17:32,090 --> 00:17:40,580
we should cover those issues hopefully

272
00:17:35,539 --> 00:17:43,158
shortly after this meeting my plan is to

273
00:17:40,580 --> 00:17:44,870
publish a dash of five and hopefully

274
00:17:43,159 --> 00:17:49,580
that will be the first thing that can go

275
00:17:44,870 --> 00:17:55,760
to working book last call and I think

276
00:17:49,580 --> 00:17:57,649
that's it thank you any comments from

277
00:17:55,760 --> 00:18:08,040
the room

278
00:17:57,650 --> 00:18:10,980
questions remarks Ben Schwartz Google

279
00:18:08,040 --> 00:18:14,129
I'm one of the co-authors on the draft

280
00:18:10,980 --> 00:18:16,290
that will be presented next which has

281
00:18:14,130 --> 00:18:19,230
been I mentioned also bears on some of

282
00:18:16,290 --> 00:18:23,100
these issues and so I don't want to give

283
00:18:19,230 --> 00:18:27,240
too much of a preview or mix the topics

284
00:18:23,100 --> 00:18:28,860
but I'll just say that I I've come to

285
00:18:27,240 --> 00:18:32,940
the conclusion that that I think we do

286
00:18:28,860 --> 00:18:34,669
want both of these proposals that I I

287
00:18:32,940 --> 00:18:37,560
personally think that we should probably

288
00:18:34,670 --> 00:18:41,550
standardize both but I do think that

289
00:18:37,560 --> 00:18:44,580
there's an opportunity to to simplify a

290
00:18:41,550 --> 00:18:46,350
name by essentially taking some of the

291
00:18:44,580 --> 00:18:47,850
use cases that generate complexity and

292
00:18:46,350 --> 00:18:50,820
and sort of pushing them over to the

293
00:18:47,850 --> 00:18:54,300
HTTP service draft and so for that

294
00:18:50,820 --> 00:18:56,189
reason I'd like to see if we can not go

295
00:18:54,300 --> 00:18:59,370
to last call until we've had a chance to

296
00:18:56,190 --> 00:19:00,510
absorb both of these options and see

297
00:18:59,370 --> 00:19:02,669
what the best way is to divide

298
00:19:00,510 --> 00:19:03,379
functionality between them yeah thank

299
00:19:02,670 --> 00:19:06,960
you

300
00:19:03,380 --> 00:19:11,400
Evan hunt is see I was the original name

301
00:19:06,960 --> 00:19:13,890
draft author and I wanted to make a

302
00:19:11,400 --> 00:19:16,320
similar but also kind of different point

303
00:19:13,890 --> 00:19:19,140
I also don't think we should go to last

304
00:19:16,320 --> 00:19:21,570
call but it has always been my opinion

305
00:19:19,140 --> 00:19:23,400
from the beginning that the reason I was

306
00:19:21,570 --> 00:19:25,439
doing the a name draft was that I did

307
00:19:23,400 --> 00:19:28,500
not expect browser uptake of any other

308
00:19:25,440 --> 00:19:30,180
solution I'm getting the impression now

309
00:19:28,500 --> 00:19:33,630
that there is some momentum for browsers

310
00:19:30,180 --> 00:19:35,400
to take up HTTP SVC and I believe that

311
00:19:33,630 --> 00:19:37,200
if they do so I would personally

312
00:19:35,400 --> 00:19:39,570
recommend that we not proceed forward

313
00:19:37,200 --> 00:19:41,520
with a name I'd suggest that we shall

314
00:19:39,570 --> 00:19:43,080
but until such time as we have a really

315
00:19:41,520 --> 00:19:47,550
clear use case that justifies the weight

316
00:19:43,080 --> 00:19:48,990
on the camel that said however since I

317
00:19:47,550 --> 00:19:51,870
don't know yet whether the browser's are

318
00:19:48,990 --> 00:19:53,790
in fact going to pick up HTTPS we see I

319
00:19:51,870 --> 00:19:56,159
think we need to carry on as if they

320
00:19:53,790 --> 00:19:58,320
won't until we find out that they will

321
00:19:56,160 --> 00:19:59,550
but I think that I think that working

322
00:19:58,320 --> 00:20:04,770
group last call might be premature at

323
00:19:59,550 --> 00:20:07,460
this point tim was sinski I know I made

324
00:20:04,770 --> 00:20:09,870
some comments kind of cautious about it

325
00:20:07,460 --> 00:20:10,920
HTTP VC but I've really come around on

326
00:20:09,870 --> 00:20:13,649
it

327
00:20:10,920 --> 00:20:15,320
I like a lot of the ideas especially not

328
00:20:13,650 --> 00:20:18,059
putting you know stuff in there but I

329
00:20:15,320 --> 00:20:20,399
ever saw a name as trying to solve the

330
00:20:18,059 --> 00:20:23,850
web problem I always saw it trying to

331
00:20:20,400 --> 00:20:25,710
solve the name at Apex problem and so

332
00:20:23,850 --> 00:20:26,730
and I think part of my problem this is

333
00:20:25,710 --> 00:20:29,370
what I didn't want to sit up there today

334
00:20:26,730 --> 00:20:32,400
because I spend way more of my day now

335
00:20:29,370 --> 00:20:34,709
talking about containers and sight cars

336
00:20:32,400 --> 00:20:36,690
and service meshes and all these things

337
00:20:34,710 --> 00:20:39,030
and I'm think about like I see we're

338
00:20:36,690 --> 00:20:40,410
aiming I get host my name right I

339
00:20:39,030 --> 00:20:42,299
remember it mentioned that to Eric and

340
00:20:40,410 --> 00:20:43,710
that's like how do we you know you know

341
00:20:42,299 --> 00:20:46,379
a night Eric's you know Eric had some

342
00:20:43,710 --> 00:20:48,179
great answers for that right but and I

343
00:20:46,380 --> 00:20:50,549
look at all these zones so I'm an

344
00:20:48,179 --> 00:20:52,610
operator right and I I work for a crazy

345
00:20:50,549 --> 00:20:54,780
company that does weird things and so

346
00:20:52,610 --> 00:20:55,379
but I spend a lot of time looking at

347
00:20:54,780 --> 00:20:57,720
zone data

348
00:20:55,380 --> 00:21:00,150
I see no zones anymore with a and quad-a

349
00:20:57,720 --> 00:21:02,040
in them anymore and they do crazy things

350
00:21:00,150 --> 00:21:03,270
where they're just service cuts you know

351
00:21:02,040 --> 00:21:06,299
they're just doing zone cuts all over

352
00:21:03,270 --> 00:21:08,549
the place and then doing oh we're gonna

353
00:21:06,299 --> 00:21:10,260
do AWS security based on doing zone cuts

354
00:21:08,549 --> 00:21:12,629
and then everybody's just doing alias

355
00:21:10,260 --> 00:21:14,429
records you know at various apex points

356
00:21:12,630 --> 00:21:15,900
and stuff like that and nobody has an A

357
00:21:14,429 --> 00:21:17,970
or quad-a anywhere and it's just like

358
00:21:15,900 --> 00:21:19,290
okay this is a totally different reality

359
00:21:17,970 --> 00:21:22,320
than I think anybody's ever thought of

360
00:21:19,290 --> 00:21:24,418
right and so it's like I think I'm in a

361
00:21:22,320 --> 00:21:26,370
weird world and I understand that but

362
00:21:24,419 --> 00:21:29,100
I'm trying to feel I think they both

363
00:21:26,370 --> 00:21:30,989
have value like you say and I'm but it's

364
00:21:29,100 --> 00:21:33,510
like I think a team needs to be simpler

365
00:21:30,990 --> 00:21:35,760
as far as the best race it say it and I

366
00:21:33,510 --> 00:21:38,490
can see a name being like your worst

367
00:21:35,760 --> 00:21:40,169
case performance thing for web stuff and

368
00:21:38,490 --> 00:21:41,970
then hey that makes you want to like

369
00:21:40,169 --> 00:21:42,510
move to the HTTP service which faster

370
00:21:41,970 --> 00:21:45,390
kind of thing

371
00:21:42,510 --> 00:21:47,250
so yeah that's my opinion but yeah and

372
00:21:45,390 --> 00:21:49,440
thank you Miss iestrellas work and so I

373
00:21:47,250 --> 00:21:51,630
think it's really good I think we're

374
00:21:49,440 --> 00:21:53,340
yeah I think we need to never never rev

375
00:21:51,630 --> 00:21:54,419
on that if people want it and I don't

376
00:21:53,340 --> 00:21:57,330
know if the working group wants to do

377
00:21:54,419 --> 00:21:59,570
one or two so we'll leave it to the

378
00:21:57,330 --> 00:21:59,570
chairs

379
00:22:06,269 --> 00:22:13,019
Ron Dixon Go Daddy I agree with most of

380
00:22:10,200 --> 00:22:16,679
the previous folks that HDPE SBS

381
00:22:13,019 --> 00:22:20,250
definitely is SBC is is the way to go

382
00:22:16,679 --> 00:22:23,130
for the web use case I'm wondering for

383
00:22:20,250 --> 00:22:26,220
the API use cases whether it's feasible

384
00:22:23,130 --> 00:22:31,110
to go back to you to the the larger more

385
00:22:26,220 --> 00:22:34,279
generic SRV if that's feasible at all

386
00:22:31,110 --> 00:22:38,840
but it's something to consider as well

387
00:22:34,279 --> 00:22:42,059
but definitely my vote would be for

388
00:22:38,840 --> 00:22:45,539
putting on putting a bit of a break on a

389
00:22:42,059 --> 00:22:50,460
name until we know about the the other

390
00:22:45,539 --> 00:22:53,009
proposal okay thank you better shakes is

391
00:22:50,460 --> 00:22:58,440
I think I think that the last call is

392
00:22:53,009 --> 00:23:00,210
well premature the sections 1 1 to 4 are

393
00:22:58,440 --> 00:23:01,830
ok-ish and could solve the

394
00:23:00,210 --> 00:23:03,899
interoperability problem between health

395
00:23:01,830 --> 00:23:05,970
providers and that's okay but the

396
00:23:03,899 --> 00:23:09,719
processing Condor is oversized sections

397
00:23:05,970 --> 00:23:11,580
5 & 6 needs more work so we either

398
00:23:09,720 --> 00:23:14,519
postpone the last call and refine

399
00:23:11,580 --> 00:23:17,428
resolver processing or splitted to two

400
00:23:14,519 --> 00:23:19,500
drafts and you know dude solve the

401
00:23:17,429 --> 00:23:21,600
interoperability for cloud providers and

402
00:23:19,500 --> 00:23:24,149
then go and look at the optimizations

403
00:23:21,600 --> 00:23:26,219
because the resolver processing is just

404
00:23:24,149 --> 00:23:28,469
optimization not requirement yeah I

405
00:23:26,220 --> 00:23:31,080
think we'll discuss both options with

406
00:23:28,470 --> 00:23:33,659
office yeah thank you just to clarify

407
00:23:31,080 --> 00:23:35,840
I'm not suggesting to do the current

408
00:23:33,659 --> 00:23:38,250
version as a working to block all the

409
00:23:35,840 --> 00:23:41,639
issues that better mention on the list

410
00:23:38,250 --> 00:23:43,080
and look it's action issue and the

411
00:23:41,639 --> 00:23:46,309
remaining issues need to be resolved

412
00:23:43,080 --> 00:23:46,309
first in a dash of 5

413
00:23:47,090 --> 00:23:53,699
Heights tell Tim you managed to confuse

414
00:23:50,490 --> 00:23:56,490
me a little you started off by saying

415
00:23:53,700 --> 00:23:59,190
you never saw a name is solving the web

416
00:23:56,490 --> 00:24:01,799
problem but I was just solving the C

417
00:23:59,190 --> 00:24:03,840
name at the apex problem which I

418
00:24:01,799 --> 00:24:05,789
understand all those words but to me the

419
00:24:03,840 --> 00:24:08,100
compelling use case that C named at the

420
00:24:05,789 --> 00:24:09,299
apex was the problem for was the web and

421
00:24:08,100 --> 00:24:12,799
I wasn't aware that there were other

422
00:24:09,299 --> 00:24:12,799
compelling use cases

423
00:24:13,440 --> 00:24:21,040
and it and and records at the apex make

424
00:24:18,820 --> 00:24:23,260
a big difference there for the remote

425
00:24:21,040 --> 00:24:27,970
participants the different use case our

426
00:24:23,260 --> 00:24:29,680
service anyways yeah so then great that

427
00:24:27,970 --> 00:24:32,830
there's an another use case I'm done

428
00:24:29,680 --> 00:24:34,900
with that but I think that it probably

429
00:24:32,830 --> 00:24:38,010
should be mentioned in the draft you

430
00:24:34,900 --> 00:24:41,560
know what what these other use cases are

431
00:24:38,010 --> 00:24:43,090
doing since again yeah it's it's not

432
00:24:41,560 --> 00:24:44,950
even it's not even like the browser

433
00:24:43,090 --> 00:24:46,720
stuff it's all that back-end servers

434
00:24:44,950 --> 00:24:48,280
that talk to all the back-end services

435
00:24:46,720 --> 00:24:50,440
that talk to all the various things that

436
00:24:48,280 --> 00:24:51,700
are basically and they're just setting

437
00:24:50,440 --> 00:24:53,170
up zones understanding something at the

438
00:24:51,700 --> 00:24:54,280
apex it's like why not I have an apex

439
00:24:53,170 --> 00:24:55,900
right why do I need to actually add

440
00:24:54,280 --> 00:24:57,280
anything else to it you know it's like

441
00:24:55,900 --> 00:24:59,170
they're an engineer they're working in

442
00:24:57,280 --> 00:25:01,060
some application space in the world

443
00:24:59,170 --> 00:25:05,770
that's kind of wonderful to them right

444
00:25:01,060 --> 00:25:10,240
and so and so you're saying the world is

445
00:25:05,770 --> 00:25:11,710
kind of wonderful thinners so I and so

446
00:25:10,240 --> 00:25:14,290
it that is sort of a different use case

447
00:25:11,710 --> 00:25:16,390
than you know but if you're in this

448
00:25:14,290 --> 00:25:18,250
weird container world which everybody is

449
00:25:16,390 --> 00:25:22,360
seems to be running into at full speed

450
00:25:18,250 --> 00:25:24,610
right there's they're just these elastic

451
00:25:22,360 --> 00:25:26,679
services fancy cloud things that people

452
00:25:24,610 --> 00:25:28,479
get and you never get an answer you know

453
00:25:26,680 --> 00:25:31,030
you never get in a wrecker until the

454
00:25:28,480 --> 00:25:36,130
very end basically right so takeaway is

455
00:25:31,030 --> 00:25:37,960
put that in the draft yeah so Eric

456
00:25:36,130 --> 00:25:40,270
Nygren Akamai and I think on some of

457
00:25:37,960 --> 00:25:42,490
those that that particularly use case of

458
00:25:40,270 --> 00:25:44,950
cloud services and I think one thing

459
00:25:42,490 --> 00:25:47,080
that before jumping straight into a name

460
00:25:44,950 --> 00:25:48,520
is a solution there may be to step back

461
00:25:47,080 --> 00:25:49,570
and work with some of those folks to

462
00:25:48,520 --> 00:25:50,950
figure out what the requirements are

463
00:25:49,570 --> 00:25:52,330
because I think when you look at the

464
00:25:50,950 --> 00:25:54,220
requirements in that space especially

465
00:25:52,330 --> 00:25:56,590
with things like service meshes and

466
00:25:54,220 --> 00:25:57,730
similar becoming more common that often

467
00:25:56,590 --> 00:26:00,159
times those things are wanting to go

468
00:25:57,730 --> 00:26:01,720
from a name to a to a more complicated

469
00:26:00,160 --> 00:26:04,540
set of stuff like they're looking to go

470
00:26:01,720 --> 00:26:07,390
to a IP port pair so it may actually be

471
00:26:04,540 --> 00:26:08,649
that maybe even SRV or it should be a

472
00:26:07,390 --> 00:26:10,270
server something else was actually more

473
00:26:08,650 --> 00:26:15,820
applicable than it didn't solve that

474
00:26:10,270 --> 00:26:20,110
problem okay so concluding here can I

475
00:26:15,820 --> 00:26:22,750
come down from that I I'm not convinced

476
00:26:20,110 --> 00:26:26,678
yet that we should put all the use cases

477
00:26:22,750 --> 00:26:29,019
in here I feel like people seeing in and

478
00:26:26,679 --> 00:26:32,259
thinking hey this might fit my use case

479
00:26:29,019 --> 00:26:33,820
and now additional requirements will

480
00:26:32,259 --> 00:26:37,090
come there I think a name

481
00:26:33,820 --> 00:26:39,730
initially the motivation was to have

482
00:26:37,090 --> 00:26:42,158
something else that propriety idea

483
00:26:39,730 --> 00:26:45,129
cinematic VFX solutions and there's

484
00:26:42,159 --> 00:26:48,309
those all are basically going to a

485
00:26:45,129 --> 00:26:52,719
different name at your apex that is what

486
00:26:48,309 --> 00:26:54,668
aiming provides sure if the working

487
00:26:52,720 --> 00:26:56,739
group now thinks we should come up with

488
00:26:54,669 --> 00:26:59,109
the solution that fits both CDN and

489
00:26:56,739 --> 00:27:01,690
service end points and they text and

490
00:26:59,109 --> 00:27:04,149
then we should say take a step back but

491
00:27:01,690 --> 00:27:07,690
that was never the initial case of

492
00:27:04,149 --> 00:27:09,699
anything so putting all those many use

493
00:27:07,690 --> 00:27:13,389
cases in the draft I'm not convinced

494
00:27:09,700 --> 00:27:16,869
that it's a good idea it's a lot of

495
00:27:13,389 --> 00:27:23,949
extra work that's just delaying actual

496
00:27:16,869 --> 00:27:25,779
implementation of a name thank you to

497
00:27:23,950 --> 00:27:27,549
make some progress but I'm just

498
00:27:25,779 --> 00:27:31,269
proposing this without any consultation

499
00:27:27,549 --> 00:27:33,129
and maybe so in August Tim always tells

500
00:27:31,269 --> 00:27:35,019
that all the Europeans are on holidays

501
00:27:33,129 --> 00:27:37,840
who nothing happens but maybe in

502
00:27:35,019 --> 00:27:41,580
September October ish early October we

503
00:27:37,840 --> 00:27:44,590
can plan a virtual meeting on this topic

504
00:27:41,580 --> 00:27:47,259
do you get the use case order the

505
00:27:44,590 --> 00:27:49,059
overlap and the differences and more

506
00:27:47,259 --> 00:27:50,919
clear straighten out so we have

507
00:27:49,059 --> 00:27:55,690
something more the next step for the

508
00:27:50,919 --> 00:27:55,840
next RDF meeting in Singapore okay thank

509
00:27:55,690 --> 00:27:58,509
you

510
00:27:55,840 --> 00:28:00,580
we will send some follow-up emails to

511
00:27:58,509 --> 00:28:04,419
the mailing list to coordinators okay

512
00:28:00,580 --> 00:28:06,899
thank you my dice yeah okay so okay

513
00:28:04,419 --> 00:28:06,899
thank you

514
00:28:09,789 --> 00:28:41,299
next yeah Eric yeah no degree of eating

515
00:28:39,380 --> 00:28:42,440
okay that's better no degree of eating

516
00:28:41,299 --> 00:28:46,220
them out my could have helped in that

517
00:28:42,440 --> 00:28:49,580
case um so eight can talk about HTTP VC

518
00:28:46,220 --> 00:28:52,580
which is a little bit of a mouthful the

519
00:28:49,580 --> 00:28:53,928
the goal here was looking at a bunch of

520
00:28:52,580 --> 00:28:56,689
these different use cases that were

521
00:28:53,929 --> 00:29:00,649
coming up in a number of working groups

522
00:28:56,690 --> 00:29:02,059
and TLS DNS off HD PBS quick and trying

523
00:29:00,649 --> 00:29:03,949
to see if there was a holistic solution

524
00:29:02,059 --> 00:29:05,750
for them because one of the problems

525
00:29:03,950 --> 00:29:07,220
we're running into is is that we're

526
00:29:05,750 --> 00:29:10,009
running into this chicken and the egg of

527
00:29:07,220 --> 00:29:12,409
various things wanted to have a some

528
00:29:10,009 --> 00:29:14,990
information in the DNS to use to prime

529
00:29:12,409 --> 00:29:17,570
before making a connection to an HTTP

530
00:29:14,990 --> 00:29:21,200
connection but there was a concern on

531
00:29:17,570 --> 00:29:23,120
the browser side on this like oh if we

532
00:29:21,200 --> 00:29:25,190
have to go do an extra DNS lookup for

533
00:29:23,120 --> 00:29:26,570
that particular use case what is gonna

534
00:29:25,190 --> 00:29:30,649
be the performance impact what's going

535
00:29:26,570 --> 00:29:33,350
to be the impact on bad home bad home

536
00:29:30,649 --> 00:29:36,080
recursive resolver is it that don't know

537
00:29:33,350 --> 00:29:37,699
about extra record types is and also as

538
00:29:36,080 --> 00:29:39,740
you start accumulating these different

539
00:29:37,700 --> 00:29:42,200
record lookups are you going to be in a

540
00:29:39,740 --> 00:29:43,610
situation before where where it's not

541
00:29:42,200 --> 00:29:44,960
just one lookup you have to make that

542
00:29:43,610 --> 00:29:47,709
it's ten different lookups and then you

543
00:29:44,960 --> 00:29:50,389
have correlation issues between them so

544
00:29:47,710 --> 00:29:52,730
HTTP SVC tries to look at some of these

545
00:29:50,389 --> 00:29:54,019
holistically the things which some of

546
00:29:52,730 --> 00:29:56,110
the use cases we've been trying to

547
00:29:54,019 --> 00:29:58,850
address have been the encrypted S&I keys

548
00:29:56,110 --> 00:30:01,459
discussion that's been going on in the

549
00:29:58,850 --> 00:30:03,949
TLS working group which we've had a

550
00:30:01,460 --> 00:30:08,120
number of design meetings around there's

551
00:30:03,950 --> 00:30:10,850
the the ability to negotiate a transport

552
00:30:08,120 --> 00:30:13,459
protocol in particular for HTTP 3 where

553
00:30:10,850 --> 00:30:16,668
with HTTP 2 you can use a LPN to

554
00:30:13,460 --> 00:30:18,769
negotiate upwards with with HTTP 3

555
00:30:16,669 --> 00:30:20,659
currently the only way to get to

556
00:30:18,769 --> 00:30:23,090
actually use quick is to first go

557
00:30:20,659 --> 00:30:25,250
through TCP by H 2 or H 1

558
00:30:23,090 --> 00:30:26,629
and then get a header back that cause

559
00:30:25,250 --> 00:30:28,250
you negotiate up so the next row

560
00:30:26,630 --> 00:30:29,990
round-trip there that having that

561
00:30:28,250 --> 00:30:34,900
information having information in DNS

562
00:30:29,990 --> 00:30:37,490
could help skip there is a use case of

563
00:30:34,900 --> 00:30:39,290
indicating that that in origin defaults

564
00:30:37,490 --> 00:30:41,270
to HTTPS so for example in the browser

565
00:30:39,290 --> 00:30:43,879
use case if someone types a bear name

566
00:30:41,270 --> 00:30:46,550
like example.com into a web browser does

567
00:30:43,880 --> 00:30:49,550
the web browser default into HTTP or

568
00:30:46,550 --> 00:30:51,680
HTTPS today it has to go to http M

569
00:30:49,550 --> 00:30:54,919
securely and get a redirect back and

570
00:30:51,680 --> 00:30:57,290
this prevents an opportunity to to have

571
00:30:54,920 --> 00:30:59,870
a say much more safe and secure default

572
00:30:57,290 --> 00:31:04,310
as more things ibiki to PS by default

573
00:30:59,870 --> 00:31:06,469
and then the a long-standing issue on

574
00:31:04,310 --> 00:31:09,110
the dns ops side is is hey we created

575
00:31:06,470 --> 00:31:12,530
this SRV record why won't the browser's

576
00:31:09,110 --> 00:31:14,179
implement it and which led to a number

577
00:31:12,530 --> 00:31:15,889
of VA named discussions of okay we need

578
00:31:14,180 --> 00:31:19,550
to create a name because browsers won't

579
00:31:15,890 --> 00:31:21,980
implement as haven't implemented s SRV

580
00:31:19,550 --> 00:31:24,200
and that chicken and egg there and being

581
00:31:21,980 --> 00:31:25,820
able to address that but then also it's

582
00:31:24,200 --> 00:31:27,440
clear that we've been accumulating these

583
00:31:25,820 --> 00:31:30,139
use cases it was probably going to be

584
00:31:27,440 --> 00:31:32,390
the n plus one in a year or two or three

585
00:31:30,140 --> 00:31:33,770
from now in fact I've been kind of

586
00:31:32,390 --> 00:31:35,660
terrified at the number of people who

587
00:31:33,770 --> 00:31:38,080
have come come up with other use cases

588
00:31:35,660 --> 00:31:40,430
not all of which are applicable and

589
00:31:38,080 --> 00:31:43,129
since the since that or the first

590
00:31:40,430 --> 00:31:45,080
version of the draft was published um so

591
00:31:43,130 --> 00:31:46,970
being about to be extensible without

592
00:31:45,080 --> 00:31:49,909
having to go and add new record types

593
00:31:46,970 --> 00:31:51,800
that browsers would have to look up so

594
00:31:49,910 --> 00:31:53,720
the goal here we have a single new brow

595
00:31:51,800 --> 00:31:55,159
a single new record that browsers could

596
00:31:53,720 --> 00:31:58,160
resolve in parallel with the a and

597
00:31:55,160 --> 00:31:59,470
quad-a lookups that would be extensible

598
00:31:58,160 --> 00:32:03,140
enough that we could use for the next

599
00:31:59,470 --> 00:32:05,300
solve kind of the current cases but but

600
00:32:03,140 --> 00:32:08,930
but also be extensible enough to cover

601
00:32:05,300 --> 00:32:11,360
the next few the but also to do this in

602
00:32:08,930 --> 00:32:13,760
a way that's a that is usable for

603
00:32:11,360 --> 00:32:16,459
operators usable for site site owners

604
00:32:13,760 --> 00:32:18,470
and has some ability to do some of the

605
00:32:16,460 --> 00:32:20,720
performance optimizations so that it

606
00:32:18,470 --> 00:32:23,660
doesn't have a huge lots of different RT

607
00:32:20,720 --> 00:32:25,910
T's in the case word has been set up

608
00:32:23,660 --> 00:32:27,530
sanely there's gonna be obviously gonna

609
00:32:25,910 --> 00:32:29,540
be some corner cases where things are

610
00:32:27,530 --> 00:32:30,950
gonna have more performance overhead but

611
00:32:29,540 --> 00:32:32,780
I think another goal here is to have

612
00:32:30,950 --> 00:32:34,790
something that's compelling enough to

613
00:32:32,780 --> 00:32:36,649
finally convince clients and browsers

614
00:32:34,790 --> 00:32:39,379
that it's going to go implement it

615
00:32:36,650 --> 00:32:40,910
any one of these use cases like SRV may

616
00:32:39,380 --> 00:32:42,830
not have been enough to get browsers to

617
00:32:40,910 --> 00:32:45,770
implement it but if we can solve a few

618
00:32:42,830 --> 00:32:48,260
of these together plus the next few and

619
00:32:45,770 --> 00:32:52,160
move to more secure defaults that may be

620
00:32:48,260 --> 00:32:53,420
enough to and has gotten some interest

621
00:32:52,160 --> 00:32:54,710
from browsers of this may actually be

622
00:32:53,420 --> 00:32:58,100
enough to start moving the needle and to

623
00:32:54,710 --> 00:33:00,410
do something here so structure wise when

624
00:32:58,100 --> 00:33:02,560
looking at this record there's a number

625
00:33:00,410 --> 00:33:06,050
of properties of this that end up being

626
00:33:02,560 --> 00:33:08,929
similar to the concept of SRV and i

627
00:33:06,050 --> 00:33:11,450
think the idea here is that that within

628
00:33:08,930 --> 00:33:13,400
a given within a given resource record

629
00:33:11,450 --> 00:33:15,020
or RR there's a number of these things

630
00:33:13,400 --> 00:33:18,320
you need to glue together and return

631
00:33:15,020 --> 00:33:20,600
back to clients as a a single unit and

632
00:33:18,320 --> 00:33:22,520
some of those may be references off to

633
00:33:20,600 --> 00:33:26,510
other things to go use so in the SRV

634
00:33:22,520 --> 00:33:28,310
case it was a you had as the name

635
00:33:26,510 --> 00:33:31,310
something which was basically the name

636
00:33:28,310 --> 00:33:35,179
and the port in the scheme and the

637
00:33:31,310 --> 00:33:37,190
target of or the data of the RR was a

638
00:33:35,180 --> 00:33:39,830
combination of things it was that

639
00:33:37,190 --> 00:33:45,940
service Jim it was a a domain name it

640
00:33:39,830 --> 00:33:49,699
was a port and priority information on

641
00:33:45,940 --> 00:33:53,060
HTTP SRV basically starts off with that

642
00:33:49,700 --> 00:33:55,850
basic kind of port and I end and

643
00:33:53,060 --> 00:33:57,830
hostname that SRV has but then makes it

644
00:33:55,850 --> 00:34:00,350
extensible so tied to those two and tied

645
00:33:57,830 --> 00:34:01,730
to that are that are within that are are

646
00:34:00,350 --> 00:34:05,060
you can start adding on additional

647
00:34:01,730 --> 00:34:07,250
information such as as the what is the

648
00:34:05,060 --> 00:34:10,668
application protocol such as h3 that's

649
00:34:07,250 --> 00:34:13,250
supported if there are any es ni keys

650
00:34:10,668 --> 00:34:15,199
that are needed to negotiate and the

651
00:34:13,250 --> 00:34:16,880
handshake what are those and part of the

652
00:34:15,199 --> 00:34:19,460
reason why it's critical to have those

653
00:34:16,880 --> 00:34:23,000
kind of bound together at the RR is

654
00:34:19,460 --> 00:34:24,949
because like in the es and I discussions

655
00:34:23,000 --> 00:34:26,600
within the TLS working group you may

656
00:34:24,949 --> 00:34:28,370
have these different different services

657
00:34:26,600 --> 00:34:29,960
being operated by different operators

658
00:34:28,370 --> 00:34:32,750
you may have with transitions where

659
00:34:29,960 --> 00:34:34,820
we're seen amis has switched from or

660
00:34:32,750 --> 00:34:36,530
things are switching from one hosting

661
00:34:34,820 --> 00:34:38,600
provider to another or you have

662
00:34:36,530 --> 00:34:41,899
operational upgrades or you may have

663
00:34:38,600 --> 00:34:44,179
multi CDN use cases and you try to mix

664
00:34:41,899 --> 00:34:46,668
and match things like es ni keys and

665
00:34:44,179 --> 00:34:49,220
which application protocol is supported

666
00:34:46,668 --> 00:34:50,429
with which actual services imports to

667
00:34:49,219 --> 00:34:54,299
connect to

668
00:34:50,429 --> 00:34:59,160
work so well so there are two forms of

669
00:34:54,300 --> 00:35:02,359
the HTTP SVC record one of those if you

670
00:34:59,160 --> 00:35:05,250
look at the structure of the record the

671
00:35:02,359 --> 00:35:08,609
and the defaults in the candidate for

672
00:35:05,250 --> 00:35:10,890
the default HTTP port and scheme doesn't

673
00:35:08,609 --> 00:35:12,359
use any label prefixes and that

674
00:35:10,890 --> 00:35:16,740
operationally makes a bunch of things

675
00:35:12,359 --> 00:35:21,270
easier but in the the Ana's alias form

676
00:35:16,740 --> 00:35:23,160
the very first element is a is a service

677
00:35:21,270 --> 00:35:25,319
record type 0 that means that it's alias

678
00:35:23,160 --> 00:35:27,868
form there's a priority that that isn't

679
00:35:25,319 --> 00:35:29,869
used in this record and this forms of 0

680
00:35:27,869 --> 00:35:32,819
and then you have the service domain

681
00:35:29,869 --> 00:35:34,740
name so in this this form it's purely an

682
00:35:32,819 --> 00:35:37,410
alias target this is one which is

683
00:35:34,740 --> 00:35:39,750
handled by clients there's no special

684
00:35:37,410 --> 00:35:42,359
hand it's similar to SRV where there's

685
00:35:39,750 --> 00:35:43,950
no special handling that's needed by

686
00:35:42,359 --> 00:35:45,990
authorities no special handling needed

687
00:35:43,950 --> 00:35:49,710
in DNS SEC no special handling needed

688
00:35:45,990 --> 00:35:52,910
and recursive and then there's the

689
00:35:49,710 --> 00:35:56,069
alternative service form which is

690
00:35:52,910 --> 00:35:58,970
basically which you can think of as a SR

691
00:35:56,069 --> 00:36:02,670
an extensible SRV so it starts off with

692
00:35:58,970 --> 00:36:04,439
the that service record type 1 saying

693
00:36:02,670 --> 00:36:08,990
that it's the alternative service form

694
00:36:04,440 --> 00:36:12,329
followed by a priority followed by the

695
00:36:08,990 --> 00:36:15,209
that on that service domain name target

696
00:36:12,329 --> 00:36:17,339
similar to SSR v but then a bunch of

697
00:36:15,210 --> 00:36:20,549
extensible information and this we're

698
00:36:17,339 --> 00:36:22,619
proposing to use the things in the alt

699
00:36:20,549 --> 00:36:25,259
service format which is a format that's

700
00:36:22,619 --> 00:36:28,020
defined in RFC in the HTTP working group

701
00:36:25,260 --> 00:36:29,790
and then at least one Club at least one

702
00:36:28,020 --> 00:36:33,180
browser supports and is also part of how

703
00:36:29,790 --> 00:36:38,460
clients negotiate up to to quick in the

704
00:36:33,180 --> 00:36:40,500
in the HTTP 3 protocol and so in this

705
00:36:38,460 --> 00:36:43,500
case it so in this case the first one of

706
00:36:40,500 --> 00:36:47,579
these records would say say that you can

707
00:36:43,500 --> 00:36:51,990
either use quick to UDP over UDP 2 sv 3

708
00:36:47,579 --> 00:36:53,730
3 sv c 3 example that met 8003 with this

709
00:36:51,990 --> 00:36:56,220
particular set of us in Ikeys or you

710
00:36:53,730 --> 00:36:58,290
could do HTTP to 2 over tcp to a

711
00:36:56,220 --> 00:37:01,589
different SVC 2 with a different port

712
00:36:58,290 --> 00:37:04,680
with these other yes and I keys and I

713
00:37:01,589 --> 00:37:07,170
think one thing I'll highlight here is

714
00:37:04,680 --> 00:37:10,980
it that well web browsers is a common

715
00:37:07,170 --> 00:37:13,079
use for HTTP HTTP isn't just about web

716
00:37:10,980 --> 00:37:15,829
browsers like as a from a CDN

717
00:37:13,079 --> 00:37:18,390
perspective we're actually seeing that a

718
00:37:15,829 --> 00:37:20,760
huge fraction of traffic that we have is

719
00:37:18,390 --> 00:37:24,480
not for is no longer just from browsers

720
00:37:20,760 --> 00:37:26,640
it's also from API clients think on

721
00:37:24,480 --> 00:37:28,410
service to service calls and a bunch of

722
00:37:26,640 --> 00:37:31,020
this information around kind of port

723
00:37:28,410 --> 00:37:32,970
associations and bindings and protocols

724
00:37:31,020 --> 00:37:35,670
are just as applicable to some of those

725
00:37:32,970 --> 00:37:39,328
in the cloud use cases as they are to

726
00:37:35,670 --> 00:37:41,849
the web browser use case on a how does

727
00:37:39,329 --> 00:37:43,680
this compare how do HTTP service and a

728
00:37:41,849 --> 00:37:45,299
name compare to each other I think

729
00:37:43,680 --> 00:37:46,799
they're complementary they solve

730
00:37:45,299 --> 00:37:49,530
different cases there's not necessarily

731
00:37:46,799 --> 00:37:51,780
saying that one may need to replace the

732
00:37:49,530 --> 00:37:54,270
other I think there may be cases where

733
00:37:51,780 --> 00:37:55,619
if we look and say say that we can have

734
00:37:54,270 --> 00:37:57,059
the two of these together and that they

735
00:37:55,619 --> 00:37:58,890
both felt things that maybe we can

736
00:37:57,059 --> 00:38:00,540
reduce a bunch of complexity out of a

737
00:37:58,890 --> 00:38:02,460
name it may be that looking at what is a

738
00:38:00,540 --> 00:38:04,410
coverage set of problem spaces we're

739
00:38:02,460 --> 00:38:05,910
trying to solve might be that there's a

740
00:38:04,410 --> 00:38:07,890
bunch of use cases out of a name that

741
00:38:05,910 --> 00:38:11,899
could just be pulled out and reduce the

742
00:38:07,890 --> 00:38:11,900
amount of camelid that's happening there

743
00:38:16,730 --> 00:38:24,990
so the I think the big one of the big

744
00:38:22,440 --> 00:38:27,680
differences and been helped clarify that

745
00:38:24,990 --> 00:38:31,259
clarify this in the slides was that that

746
00:38:27,680 --> 00:38:33,058
HTTP SVC doesn't require any changes to

747
00:38:31,260 --> 00:38:34,650
DNS servers it's basically something

748
00:38:33,059 --> 00:38:38,609
that's just a record type that has no

749
00:38:34,650 --> 00:38:39,869
special handling whereas a name on the

750
00:38:38,609 --> 00:38:41,759
other hand doesn't require any special

751
00:38:39,869 --> 00:38:43,410
changes to clients the clients in it

752
00:38:41,760 --> 00:38:45,000
with you have a named clients basically

753
00:38:43,410 --> 00:38:48,270
just magic all the existing clients

754
00:38:45,000 --> 00:38:49,740
magically work with HTTP SVC all the

755
00:38:48,270 --> 00:38:51,540
existing name servers just magically

756
00:38:49,740 --> 00:38:54,540
work so that's probably the biggest

757
00:38:51,540 --> 00:38:56,819
distinction between those and any but on

758
00:38:54,540 --> 00:38:59,640
the con side there that means that it

759
00:38:56,819 --> 00:39:01,950
should PS SVC is only respected by the

760
00:38:59,640 --> 00:39:04,740
compliant clients so to add support into

761
00:39:01,950 --> 00:39:06,299
clients which would ideally would be

762
00:39:04,740 --> 00:39:09,509
something that I'm expecting would

763
00:39:06,299 --> 00:39:10,470
happen at the client library perspective

764
00:39:09,510 --> 00:39:12,089
and if we've been looking at the

765
00:39:10,470 --> 00:39:14,310
ecosystem of client libraries that are

766
00:39:12,089 --> 00:39:15,330
out there there's a lot of cases on the

767
00:39:14,310 --> 00:39:17,430
HTTP I miss

768
00:39:15,330 --> 00:39:19,830
much complexity involved in making an

769
00:39:17,430 --> 00:39:22,740
HTTP connection already that a lot of

770
00:39:19,830 --> 00:39:24,330
operating that a lot of mature operating

771
00:39:22,740 --> 00:39:26,520
systems are starting to provide higher

772
00:39:24,330 --> 00:39:28,110
level abstractions so applications

773
00:39:26,520 --> 00:39:30,720
aren't going and doing get hosts my name

774
00:39:28,110 --> 00:39:34,050
they're going and provide calling some

775
00:39:30,720 --> 00:39:37,439
some OS or library API that is going and

776
00:39:34,050 --> 00:39:39,030
dealing with all the certification DNS

777
00:39:37,440 --> 00:39:40,740
stuff all that stuff for them and this

778
00:39:39,030 --> 00:39:43,470
so that's presumably where this would

779
00:39:40,740 --> 00:39:46,379
get shimmed in there a downside here is

780
00:39:43,470 --> 00:39:49,649
this is HTTP specific but again HTTP is

781
00:39:46,380 --> 00:39:52,980
not a is not just about web browsers and

782
00:39:49,650 --> 00:39:54,750
I think a consideration for this if this

783
00:39:52,980 --> 00:39:56,790
is successful might be that maybe there

784
00:39:54,750 --> 00:39:59,100
is a pattern here that some of the

785
00:39:56,790 --> 00:40:00,990
things we could learn by age from HTTP

786
00:39:59,100 --> 00:40:03,420
SVC might be applicable to other

787
00:40:00,990 --> 00:40:05,490
protocols and having a either more

788
00:40:03,420 --> 00:40:07,200
generic or other record type that kind

789
00:40:05,490 --> 00:40:10,080
of leverages off some of the things

790
00:40:07,200 --> 00:40:12,240
structure of this might make sense to

791
00:40:10,080 --> 00:40:13,590
have is more generic and I think that

792
00:40:12,240 --> 00:40:15,959
maybe also a question for the working

793
00:40:13,590 --> 00:40:19,860
group of how much makes sense to over

794
00:40:15,960 --> 00:40:24,990
genera size HTTP SVC versus keep it

795
00:40:19,860 --> 00:40:26,280
focused on the HTTP use case so next

796
00:40:24,990 --> 00:40:30,500
steps we're going to be talking about

797
00:40:26,280 --> 00:40:34,200
this also in the HTTP HDPE Biss on

798
00:40:30,500 --> 00:40:35,850
Thursday initially I thought that was

799
00:40:34,200 --> 00:40:37,379
the best home for adoption I think in

800
00:40:35,850 --> 00:40:39,509
talking with people here I think there's

801
00:40:37,380 --> 00:40:41,940
a question on whether it makes sense to

802
00:40:39,510 --> 00:40:43,800
have whether to adopt this in DNS

803
00:40:41,940 --> 00:40:45,660
operates deep abyss I don't have a

804
00:40:43,800 --> 00:40:47,370
strong feeling either way I think that's

805
00:40:45,660 --> 00:40:49,170
up to the working groups and the chairs

806
00:40:47,370 --> 00:40:50,850
on where they think would be the most

807
00:40:49,170 --> 00:40:54,290
constructive place and where there's the

808
00:40:50,850 --> 00:40:56,580
most interest in doing work on this and

809
00:40:54,290 --> 00:40:58,950
but I think no matter what it's going to

810
00:40:56,580 --> 00:41:00,360
be critical to get to get input from

811
00:40:58,950 --> 00:41:02,220
both of those communities and I think

812
00:41:00,360 --> 00:41:04,230
actually I've been very pleased on the

813
00:41:02,220 --> 00:41:07,799
amount of great feedback we've gotten

814
00:41:04,230 --> 00:41:09,930
from DNS so far in particular as we on

815
00:41:07,800 --> 00:41:11,670
the some of the stuff we had in the wire

816
00:41:09,930 --> 00:41:14,160
format didn't make sense and we've

817
00:41:11,670 --> 00:41:15,330
cleared that up based and I got some

818
00:41:14,160 --> 00:41:18,020
feedbacks from some browser

819
00:41:15,330 --> 00:41:20,910
implementations in fact there is a

820
00:41:18,020 --> 00:41:22,830
already a bind nine private type in

821
00:41:20,910 --> 00:41:24,690
draft implementation that Mark Andrews

822
00:41:22,830 --> 00:41:27,090
did and the hackathon as presented

823
00:41:24,690 --> 00:41:28,620
yesterday someone did an implementation

824
00:41:27,090 --> 00:41:29,100
and unbound I was kind of surprised

825
00:41:28,620 --> 00:41:30,690
before

826
00:41:29,100 --> 00:41:33,540
presented that there are already two

827
00:41:30,690 --> 00:41:36,210
implementations but feedback comment

828
00:41:33,540 --> 00:41:38,270
suggestions are most welcome here thank

829
00:41:36,210 --> 00:41:38,270
you

830
00:41:38,300 --> 00:41:42,450
yeah I think I'm the administrative

831
00:41:40,650 --> 00:41:43,440
issue we had already actually did the

832
00:41:42,450 --> 00:41:44,609
chairs had already discussed this

833
00:41:43,440 --> 00:41:47,070
briefly and I think what we're gonna do

834
00:41:44,610 --> 00:41:48,180
this get together with the HTTP chairs

835
00:41:47,070 --> 00:41:49,380
and we'll figure out where it belongs

836
00:41:48,180 --> 00:41:53,399
but we're gonna need review and

837
00:41:49,380 --> 00:41:54,810
buckler's hmm Warren Kumari would you

838
00:41:53,400 --> 00:42:00,000
mind going back to the thing where you

839
00:41:54,810 --> 00:42:01,500
have the old service DNS HCP one yeah so

840
00:42:00,000 --> 00:42:03,570
a quick question and sorry if you've

841
00:42:01,500 --> 00:42:04,770
already answered this but it looks like

842
00:42:03,570 --> 00:42:07,350
there are a number of things that you

843
00:42:04,770 --> 00:42:10,770
can stick it right there's like h2 h3 ma

844
00:42:07,350 --> 00:42:12,839
assist yes and I keys how big do these

845
00:42:10,770 --> 00:42:15,480
end up cuz I could see this getting

846
00:42:12,840 --> 00:42:18,690
really large which is funded us I think

847
00:42:15,480 --> 00:42:21,300
that's the that's definitely concern and

848
00:42:18,690 --> 00:42:23,910
definitely I think I think that becomes

849
00:42:21,300 --> 00:42:25,230
a matter of how much gets shoved in here

850
00:42:23,910 --> 00:42:27,450
and we'll want to be still want to be

851
00:42:25,230 --> 00:42:28,620
some guidance on what is appropriate to

852
00:42:27,450 --> 00:42:31,410
put in here and what's not appropriate

853
00:42:28,620 --> 00:42:34,859
to put in here like for exact

854
00:42:31,410 --> 00:42:36,750
then highlighted is that that not

855
00:42:34,860 --> 00:42:41,220
everything makes sense to especially if

856
00:42:36,750 --> 00:42:42,690
especially when DNS especially when DNS

857
00:42:41,220 --> 00:42:44,399
SEC validation isn't being done by

858
00:42:42,690 --> 00:42:46,800
clients there's some things that you

859
00:42:44,400 --> 00:42:48,000
might seem attractive to put in here but

860
00:42:46,800 --> 00:42:50,280
would have unfortunate security

861
00:42:48,000 --> 00:42:51,780
properties um so I think a lot of the I

862
00:42:50,280 --> 00:42:53,490
think the things that you would want to

863
00:42:51,780 --> 00:42:55,500
put in here would need to have some

864
00:42:53,490 --> 00:42:57,810
constraints on and some consideration on

865
00:42:55,500 --> 00:43:03,300
what would make sense there there is

866
00:42:57,810 --> 00:43:05,759
already a the alt service already has a

867
00:43:03,300 --> 00:43:07,200
Ayana registry for the alt service

868
00:43:05,760 --> 00:43:08,310
parameters which is part of why we're

869
00:43:07,200 --> 00:43:10,410
using this to kind of leverage off of

870
00:43:08,310 --> 00:43:12,960
off of that and this draft just adds

871
00:43:10,410 --> 00:43:14,490
proposes adding on the es and I keys but

872
00:43:12,960 --> 00:43:16,020
that could potentially be split off as a

873
00:43:14,490 --> 00:43:20,850
separate draft it might make sense to do

874
00:43:16,020 --> 00:43:22,650
that and I think one question that's

875
00:43:20,850 --> 00:43:25,950
come up on the browser side that fits

876
00:43:22,650 --> 00:43:31,670
into that is to what degree would

877
00:43:25,950 --> 00:43:35,009
browsers do this over doe 53 to do 53

878
00:43:31,670 --> 00:43:37,130
genus over 53 versus just doing this

879
00:43:35,010 --> 00:43:39,810
over doe where some of the size issues

880
00:43:37,130 --> 00:43:41,770
become somewhat less somewhat less of a

881
00:43:39,810 --> 00:43:46,480
problem

882
00:43:41,770 --> 00:43:49,509
I all over the Muslim CloudFlare I like

883
00:43:46,480 --> 00:43:51,490
this a lot and I think this is a much

884
00:43:49,510 --> 00:43:55,210
better and cleaner solutions than a name

885
00:43:51,490 --> 00:43:58,089
but you have managed to walk into the

886
00:43:55,210 --> 00:44:00,340
biggest pitfall the DNS has ever had

887
00:43:58,090 --> 00:44:03,640
with dealing with records you have

888
00:44:00,340 --> 00:44:06,550
subtyping and that has always to be

889
00:44:03,640 --> 00:44:08,410
taken as a backing of thought and makes

890
00:44:06,550 --> 00:44:11,470
things very difficult so I would propose

891
00:44:08,410 --> 00:44:13,960
that you get rid of this first numeric

892
00:44:11,470 --> 00:44:18,160
field in there and just have a case 0

893
00:44:13,960 --> 00:44:21,280
with an empty shrink just type 2 or type

894
00:44:18,160 --> 00:44:21,910
1 as it is in there that would be my

895
00:44:21,280 --> 00:44:24,190
suggestion

896
00:44:21,910 --> 00:44:25,569
under this record I'm not sure I file

897
00:44:24,190 --> 00:44:32,140
I'm not sure I finally follow but I'm

898
00:44:25,570 --> 00:44:34,180
happy to provision interfaces etc they

899
00:44:32,140 --> 00:44:36,310
will write it based on the spec when it

900
00:44:34,180 --> 00:44:39,700
gets published so when you implement the

901
00:44:36,310 --> 00:44:42,040
next asked form or service record type

902
00:44:39,700 --> 00:44:43,750
it's not going to get supported ever by

903
00:44:42,040 --> 00:44:46,869
most of the provisions because they are

904
00:44:43,750 --> 00:44:49,210
it's a one-time-only write process for

905
00:44:46,869 --> 00:44:51,609
that mmm we have this problem with DNS

906
00:44:49,210 --> 00:44:54,100
keys we have this with all kinds of all

907
00:44:51,609 --> 00:44:56,170
the records so just have one format and

908
00:44:54,100 --> 00:44:58,380
that is acceptable in the string cut yet

909
00:44:56,170 --> 00:45:01,450
mm-hmm would be my suggestion

910
00:44:58,380 --> 00:45:03,430
yeah as for implementation yeah this is

911
00:45:01,450 --> 00:45:06,129
gonna be easy to handle but there is a

912
00:45:03,430 --> 00:45:09,520
question about the sni K keys in the

913
00:45:06,130 --> 00:45:11,859
multi cloud instance given a number of

914
00:45:09,520 --> 00:45:14,020
operators roll these keys over very

915
00:45:11,859 --> 00:45:18,180
rapidly it's gonna require online

916
00:45:14,020 --> 00:45:20,770
generation of these records

917
00:45:18,180 --> 00:45:22,839
that'll be and I think some of that may

918
00:45:20,770 --> 00:45:24,430
be interesting that's probable a good

919
00:45:22,840 --> 00:45:26,500
discussion to have on the kind of a TLS

920
00:45:24,430 --> 00:45:30,549
side to see how that relates yeah

921
00:45:26,500 --> 00:45:34,660
relates there so we have sufficient time

922
00:45:30,550 --> 00:45:37,450
but I want to close the line Evan hunter

923
00:45:34,660 --> 00:45:38,740
first of all HTTP SVC is way too much of

924
00:45:37,450 --> 00:45:40,149
a mouthful I'm gonna call it hat tip

925
00:45:38,740 --> 00:45:42,160
service from now on I invite you all to

926
00:45:40,150 --> 00:45:44,140
join me

927
00:45:42,160 --> 00:45:45,700
you mentioned implementation status on

928
00:45:44,140 --> 00:45:47,170
the DNS side do you have any information

929
00:45:45,700 --> 00:45:50,470
about implementation status on the

930
00:45:47,170 --> 00:45:52,920
browser side um not yet any movement at

931
00:45:50,470 --> 00:45:55,029
all yet okay I mention it because

932
00:45:52,920 --> 00:45:55,550
changes and implementation status on the

933
00:45:55,030 --> 00:45:58,130
browser

934
00:45:55,550 --> 00:45:59,750
we'll inform the decisions that we make

935
00:45:58,130 --> 00:46:00,320
with respect to whether a name is

936
00:45:59,750 --> 00:46:02,720
worthwhile

937
00:46:00,320 --> 00:46:05,300
I think and I'd like to figure out how

938
00:46:02,720 --> 00:46:08,359
we can find out what what the what the

939
00:46:05,300 --> 00:46:11,630
early indicators will be if this is it's

940
00:46:08,360 --> 00:46:14,330
actually getting up take the other

941
00:46:11,630 --> 00:46:16,550
question I wanted to ask all of our

942
00:46:14,330 --> 00:46:19,340
already mentioned some typing and I

943
00:46:16,550 --> 00:46:21,950
don't care subtyping as much have you

944
00:46:19,340 --> 00:46:23,030
did you give any thought to genera

945
00:46:21,950 --> 00:46:26,450
sizing this so that it wouldn't be

946
00:46:23,030 --> 00:46:28,100
specific to http and that may be an

947
00:46:26,450 --> 00:46:30,169
additional some type field that would

948
00:46:28,100 --> 00:46:33,220
indicate that this is for a different

949
00:46:30,170 --> 00:46:35,960
but similar use case that's not HTTP I

950
00:46:33,220 --> 00:46:38,480
it's worth considering I think my big

951
00:46:35,960 --> 00:46:40,700
worry about that would be that the our

952
00:46:38,480 --> 00:46:42,350
our set gets really big is that if we

953
00:46:40,700 --> 00:46:45,259
start he's basically start putting all

954
00:46:42,350 --> 00:46:48,890
the potential services if you basically

955
00:46:45,260 --> 00:46:50,510
put the like HTTP as a key in there and

956
00:46:48,890 --> 00:46:52,819
you don't do this as it and you don't do

957
00:46:50,510 --> 00:46:54,260
a prefix label then your are our set has

958
00:46:52,820 --> 00:46:56,930
to contain all the different possible

959
00:46:54,260 --> 00:46:59,290
services that you might support it may

960
00:46:56,930 --> 00:47:02,899
be word I think it's worth considering

961
00:46:59,290 --> 00:47:04,610
or may be worth having genera sizing and

962
00:47:02,900 --> 00:47:05,840
there's a bunch of different things I've

963
00:47:04,610 --> 00:47:07,910
thought about on the generic sizing

964
00:47:05,840 --> 00:47:09,470
front in fact a a few years back I had a

965
00:47:07,910 --> 00:47:15,859
more generic draft that was very very

966
00:47:09,470 --> 00:47:18,620
similar to this but but I don't I think

967
00:47:15,860 --> 00:47:20,750
what's the one option might be to to

968
00:47:18,620 --> 00:47:24,049
have the format be generic but then to

969
00:47:20,750 --> 00:47:26,960
hat but then for at least for a few of

970
00:47:24,050 --> 00:47:28,250
the most common are are types or few of

971
00:47:26,960 --> 00:47:30,020
the most common application types would

972
00:47:28,250 --> 00:47:32,600
just be to use a different RR type form

973
00:47:30,020 --> 00:47:35,210
for each of those but still bounding

974
00:47:32,600 --> 00:47:40,690
that fairly small okay thanks sorry I

975
00:47:35,210 --> 00:47:44,120
did close the mic line so thank you

976
00:47:40,690 --> 00:47:48,890
Loren's clearly I think I also find sort

977
00:47:44,120 --> 00:47:50,359
of the IC HTTP service SVC and just keep

978
00:47:48,890 --> 00:47:54,080
hearing the word browser browser browser

979
00:47:50,360 --> 00:47:55,610
browser why there are lots of

980
00:47:54,080 --> 00:47:57,680
complications in our browser I mean you

981
00:47:55,610 --> 00:47:59,270
use yourself mention API endpoints and

982
00:47:57,680 --> 00:48:01,669
container container communication I

983
00:47:59,270 --> 00:48:03,740
would like to echo the call to sort of

984
00:48:01,670 --> 00:48:06,140
can we can we at least like try to

985
00:48:03,740 --> 00:48:09,020
design this to be generic and not like

986
00:48:06,140 --> 00:48:10,339
because I keep using the word browser

987
00:48:09,020 --> 00:48:11,750
we're gonna end up doing some

988
00:48:10,340 --> 00:48:13,520
engineering that only actually really

989
00:48:11,750 --> 00:48:16,160
works for browsers so if you have

990
00:48:13,520 --> 00:48:18,980
something like a split like DNS was over

991
00:48:16,160 --> 00:48:20,540
with and application model like you know

992
00:48:18,980 --> 00:48:21,890
most of Android is like that you've got

993
00:48:20,540 --> 00:48:23,360
a DNS resolver and you've got a bunch of

994
00:48:21,890 --> 00:48:24,589
apps to go what's happened this and that

995
00:48:23,360 --> 00:48:27,290
and you could you could say that what

996
00:48:24,590 --> 00:48:29,920
saps a browser cuz it just uses HTTP but

997
00:48:27,290 --> 00:48:32,300
I think we might you know it huh

998
00:48:29,920 --> 00:48:34,190
TLS or it yet TLS service seems like a

999
00:48:32,300 --> 00:48:37,670
good idea because it is a lot of this is

1000
00:48:34,190 --> 00:48:41,330
in fact TLS but you know SMTP also uses

1001
00:48:37,670 --> 00:48:43,430
TLS it would be really good if we didn't

1002
00:48:41,330 --> 00:48:45,470
barks ourselves in and I think also that

1003
00:48:43,430 --> 00:48:48,560
would actually argue for not doing this

1004
00:48:45,470 --> 00:48:49,790
maybe an HTTP bus is an HTP working

1005
00:48:48,560 --> 00:48:52,340
group but actually trying to do this

1006
00:48:49,790 --> 00:48:54,529
maybe even here you know so well

1007
00:48:52,340 --> 00:48:57,590
actually this group can't do protocols

1008
00:48:54,530 --> 00:49:01,100
or can it I don't know but then then

1009
00:48:57,590 --> 00:49:02,660
then I think you know it would sort of I

1010
00:49:01,100 --> 00:49:04,160
think it would I think it would help a

1011
00:49:02,660 --> 00:49:06,319
lot if we if we looked at because I I

1012
00:49:04,160 --> 00:49:07,670
guess I see maybe you know maybe this

1013
00:49:06,320 --> 00:49:11,480
can become what s are we never could

1014
00:49:07,670 --> 00:49:13,190
right so and I think for size your

1015
00:49:11,480 --> 00:49:15,080
concern was size but I can't think in

1016
00:49:13,190 --> 00:49:16,970
practice we're actually gonna end up

1017
00:49:15,080 --> 00:49:18,529
doing this over TCP and then encrypted

1018
00:49:16,970 --> 00:49:19,819
transport anyway cuz you probably don't

1019
00:49:18,530 --> 00:49:21,740
want that stuff in the clear where

1020
00:49:19,820 --> 00:49:23,450
anyone can mess with oh yeah like I'm

1021
00:49:21,740 --> 00:49:25,399
actually gonna move to a different port

1022
00:49:23,450 --> 00:49:27,379
right cuz like oh here here's your new s

1023
00:49:25,400 --> 00:49:28,790
and I keys because I'm in the middle and

1024
00:49:27,380 --> 00:49:31,340
I happen to be yours all right you don't

1025
00:49:28,790 --> 00:49:33,140
want that anyway so I think the the sort

1026
00:49:31,340 --> 00:49:35,090
of size constraints are really not you

1027
00:49:33,140 --> 00:49:45,319
know material anymore but that's just my

1028
00:49:35,090 --> 00:49:50,150
personal opinion either discussion on

1029
00:49:45,320 --> 00:49:52,730
the microphone or all right Steve Brown

1030
00:49:50,150 --> 00:49:54,470
so and yeah good comments are all for

1031
00:49:52,730 --> 00:49:57,170
made that people are rolling yes my keys

1032
00:49:54,470 --> 00:50:01,600
every hour minutes now there's only one

1033
00:49:57,170 --> 00:50:05,090
real deployment but nonetheless and so

1034
00:50:01,600 --> 00:50:08,560
yeah I mean I guess my take is if

1035
00:50:05,090 --> 00:50:08,560
browsers implement this than I like it

1036
00:50:10,240 --> 00:50:17,569
also it's not clear to me I mean there's

1037
00:50:13,880 --> 00:50:20,450
an ESN I or R type in the is my spec is

1038
00:50:17,570 --> 00:50:22,000
your intense that clients would look up

1039
00:50:20,450 --> 00:50:24,430
maybe both or what

1040
00:50:22,000 --> 00:50:25,810
I had added a slide on that but only put

1041
00:50:24,430 --> 00:50:30,549
it in the deck for to the chillest

1042
00:50:25,810 --> 00:50:32,380
working group the but I then I think one

1043
00:50:30,550 --> 00:50:35,740
thing on the structure of this a part of

1044
00:50:32,380 --> 00:50:38,860
why I'm part of why there is the Elias

1045
00:50:35,740 --> 00:50:40,959
Forum is to get is to be able to to

1046
00:50:38,860 --> 00:50:43,480
either see name or use the alias form

1047
00:50:40,960 --> 00:50:45,730
for whoever is kind of operating

1048
00:50:43,480 --> 00:50:47,140
example.com to be able to have the

1049
00:50:45,730 --> 00:50:49,030
option of delegating and pointing this

1050
00:50:47,140 --> 00:50:52,029
over to whoever is operating the service

1051
00:50:49,030 --> 00:50:54,280
so that the whoever is operating those

1052
00:50:52,030 --> 00:50:55,870
servers could be returning this record

1053
00:50:54,280 --> 00:50:57,250
and the yes and I keys themselves so

1054
00:50:55,870 --> 00:50:59,319
that in collaboration they could be

1055
00:50:57,250 --> 00:51:01,240
could be doing that quick that quick

1056
00:50:59,320 --> 00:51:04,620
rolling without having to do without

1057
00:51:01,240 --> 00:51:06,879
having to go and find some way of

1058
00:51:04,620 --> 00:51:10,690
getting the s and I keys back into the

1059
00:51:06,880 --> 00:51:12,040
back into the the first part domain but

1060
00:51:10,690 --> 00:51:13,210
generally I mean if browsers did

1061
00:51:12,040 --> 00:51:15,690
implemented I mean I guess you can

1062
00:51:13,210 --> 00:51:18,490
handle having the es like public key in

1063
00:51:15,690 --> 00:51:20,020
many different formats and different

1064
00:51:18,490 --> 00:51:22,270
places in the DNS seems that I could

1065
00:51:20,020 --> 00:51:30,009
downside but I don't know what to do

1066
00:51:22,270 --> 00:51:33,430
about that Ben Schwartz so ok on on the

1067
00:51:30,010 --> 00:51:35,380
ESN I question my view is that that we

1068
00:51:33,430 --> 00:51:38,169
should pick one and I would like to pick

1069
00:51:35,380 --> 00:51:40,240
this one and not to the other one so

1070
00:51:38,170 --> 00:51:44,830
that hopefully that answers that

1071
00:51:40,240 --> 00:51:47,319
question on the online signing thing

1072
00:51:44,830 --> 00:51:50,380
Eric just answered this but in case it

1073
00:51:47,320 --> 00:51:52,300
wasn't clear if you roll the es and iqs

1074
00:51:50,380 --> 00:51:54,190
once an hour you have to sign them once

1075
00:51:52,300 --> 00:51:57,090
an hour in this in this format there's

1076
00:51:54,190 --> 00:52:00,670
no there's no need for repeated signing

1077
00:51:57,090 --> 00:52:05,250
and on the topic of being generic could

1078
00:52:00,670 --> 00:52:08,830
you go back to the two slides I guess

1079
00:52:05,250 --> 00:52:10,870
maybe the only one slide this one so you

1080
00:52:08,830 --> 00:52:12,670
can see on the lower example that

1081
00:52:10,870 --> 00:52:19,200
there's something there underscore 8 4 4

1082
00:52:12,670 --> 00:52:22,990
3 underscore HTTP so as defined this

1083
00:52:19,200 --> 00:52:25,330
this draft does admit essentially

1084
00:52:22,990 --> 00:52:28,120
arbitrary new protocols to be defined to

1085
00:52:25,330 --> 00:52:31,140
use this and the the data type that's in

1086
00:52:28,120 --> 00:52:34,720
the service field domain value is

1087
00:52:31,140 --> 00:52:35,710
essentially a completely unstructured

1088
00:52:34,720 --> 00:52:38,649
dick

1089
00:52:35,710 --> 00:52:40,390
of keys and values in a registry

1090
00:52:38,650 --> 00:52:42,369
controlled by Ayane and the existing

1091
00:52:40,390 --> 00:52:44,440
definition of the alt service field

1092
00:52:42,369 --> 00:52:48,040
value says that it is extensible to non

1093
00:52:44,440 --> 00:52:50,470
HTTP protocols subject to I Ana control

1094
00:52:48,040 --> 00:52:53,080
basically so you can if you're if you

1095
00:52:50,470 --> 00:52:56,049
write a draft that defines what all

1096
00:52:53,080 --> 00:53:01,230
service means for for any other protocol

1097
00:52:56,050 --> 00:53:03,190
for SSH or FTP then this this draft

1098
00:53:01,230 --> 00:53:06,730
automatically covers you the only thing

1099
00:53:03,190 --> 00:53:08,950
is that you do then need to need to do

1100
00:53:06,730 --> 00:53:12,460
the name prefixing as in the second

1101
00:53:08,950 --> 00:53:16,598
example here so in that sense this isn't

1102
00:53:12,460 --> 00:53:20,140
as HTTP specific as maybe the name

1103
00:53:16,599 --> 00:53:23,200
implies but certainly HTTPS is the clear

1104
00:53:20,140 --> 00:53:26,470
focus of the dress and I'm totally open

1105
00:53:23,200 --> 00:53:32,859
to to kind of the bike shed of names

1106
00:53:26,470 --> 00:53:35,379
that are less of a mouthful Eric or from

1107
00:53:32,859 --> 00:53:37,270
Google and I lead the chrome DNS team

1108
00:53:35,380 --> 00:53:38,800
everyone keeps asking what browsers

1109
00:53:37,270 --> 00:53:41,589
another clients here thinking about this

1110
00:53:38,800 --> 00:53:45,369
I thought it'd come give my thing at

1111
00:53:41,589 --> 00:53:48,160
least so we're we like the sound of this

1112
00:53:45,369 --> 00:53:50,349
and we are tracking it closely the one

1113
00:53:48,160 --> 00:53:52,690
important caveat is the current thinking

1114
00:53:50,349 --> 00:53:56,050
is we would only be doing this query

1115
00:53:52,690 --> 00:53:58,720
when we have doe mostly because a lot of

1116
00:53:56,050 --> 00:54:00,280
stuff in it has been mentioned is not

1117
00:53:58,720 --> 00:54:03,970
very helpful unless it's a secure

1118
00:54:00,280 --> 00:54:05,290
context as well as also it we're a

1119
00:54:03,970 --> 00:54:08,589
little bit worried about sending out a

1120
00:54:05,290 --> 00:54:10,029
third query for each requests when we

1121
00:54:08,589 --> 00:54:12,910
don't have a good signal that the

1122
00:54:10,030 --> 00:54:14,619
upstream or Chris resolver is a nice

1123
00:54:12,910 --> 00:54:18,359
modern one that won't crash if we start

1124
00:54:14,619 --> 00:54:20,890
sending extra queries to it so this does

1125
00:54:18,359 --> 00:54:23,109
mean that well yeah there's been talked

1126
00:54:20,890 --> 00:54:24,848
about sighs that maybe that's not as

1127
00:54:23,109 --> 00:54:27,848
much of an issue if we are only doing

1128
00:54:24,849 --> 00:54:29,140
this over toe it also means that if we

1129
00:54:27,849 --> 00:54:31,900
need to some of this information like

1130
00:54:29,140 --> 00:54:34,270
the zone apex issue when Chrome is not

1131
00:54:31,900 --> 00:54:39,670
talking Doe there's still room for other

1132
00:54:34,270 --> 00:54:41,050
solutions for this like a a thank you

1133
00:54:39,670 --> 00:54:46,070
thank you Eric

1134
00:54:41,050 --> 00:54:49,670
well I will so I will join the ACPs it's

1135
00:54:46,070 --> 00:54:53,960
it's this whip with a group session and

1136
00:54:49,670 --> 00:54:59,170
discuss with the chairs pretty and where

1137
00:54:53,960 --> 00:54:59,170
we can adopt thank you thank you

1138
00:55:00,350 --> 00:55:23,120
next is Steven Williams okay next step

1139
00:55:11,150 --> 00:55:25,870
is Steven Ferrell alright so yeah I

1140
00:55:23,120 --> 00:55:28,910
think we presented this draft last time

1141
00:55:25,870 --> 00:55:30,560
we got some feedback we implemented the

1142
00:55:28,910 --> 00:55:42,859
feedback in the drafts you'd like more

1143
00:55:30,560 --> 00:55:44,090
feedback kind of done really now yeah so

1144
00:55:42,860 --> 00:55:46,310
this is the summary it allows you to

1145
00:55:44,090 --> 00:55:49,550
kind of express a relationship between

1146
00:55:46,310 --> 00:55:50,870
two two names you can one of the pieces

1147
00:55:49,550 --> 00:55:52,550
of feedback we got last time was that

1148
00:55:50,870 --> 00:55:53,690
people thought yeah I mean that's

1149
00:55:52,550 --> 00:55:55,730
interesting but I'd like to be able to

1150
00:55:53,690 --> 00:55:59,390
express or this is their relationship so

1151
00:55:55,730 --> 00:56:03,350
it's kind of negative one and so we

1152
00:55:59,390 --> 00:56:05,450
added that in as part of that you're

1153
00:56:03,350 --> 00:56:06,740
going to possibly have a long list of

1154
00:56:05,450 --> 00:56:09,140
people that you don't want to be

1155
00:56:06,740 --> 00:56:10,819
associated with so we change the thing

1156
00:56:09,140 --> 00:56:12,920
to say you can either have a name or a

1157
00:56:10,820 --> 00:56:16,640
URL and if there's a URL then there can

1158
00:56:12,920 --> 00:56:17,300
be a list of names so those are the kind

1159
00:56:16,640 --> 00:56:19,490
of two main changes

1160
00:56:17,300 --> 00:56:22,520
there's the optional signature mechanism

1161
00:56:19,490 --> 00:56:24,259
is still there these are the kind of use

1162
00:56:22,520 --> 00:56:26,750
cases that I think we covered last time

1163
00:56:24,260 --> 00:56:30,130
so unless somebody wants to jump up I

1164
00:56:26,750 --> 00:56:30,130
won't stand at that really

1165
00:56:30,340 --> 00:56:36,980
and this is the changes which I mostly

1166
00:56:32,690 --> 00:56:38,600
said we had originally you know at the

1167
00:56:36,980 --> 00:56:39,830
first version of this we had a DCAM like

1168
00:56:38,600 --> 00:56:41,480
syntax which is kind of a little bit

1169
00:56:39,830 --> 00:56:43,549
what was like the the values for the

1170
00:56:41,480 --> 00:56:45,770
previous presentation at this time it's

1171
00:56:43,550 --> 00:56:47,600
kind of binary we scripted up the sample

1172
00:56:45,770 --> 00:56:48,890
generation stuff so it kind of looks

1173
00:56:47,600 --> 00:56:53,270
like it could work if people wanted it

1174
00:56:48,890 --> 00:56:54,290
to work and basically we're just still

1175
00:56:53,270 --> 00:56:56,420
looking for more feedback we're not

1176
00:56:54,290 --> 00:56:58,100
asking for it to be adopted just yes if

1177
00:56:56,420 --> 00:56:59,440
we get more feedback and if that's of

1178
00:56:58,100 --> 00:57:00,549
the nature that

1179
00:56:59,440 --> 00:57:03,220
this is something that might get

1180
00:57:00,550 --> 00:57:05,080
deployed then we're happy to kind of you

1181
00:57:03,220 --> 00:57:07,209
know do the changes to the thing and

1182
00:57:05,080 --> 00:57:08,710
bring it to the point where hopefully we

1183
00:57:07,210 --> 00:57:09,670
could ask for adoption and I think here

1184
00:57:08,710 --> 00:57:12,850
would be the right place to ask for

1185
00:57:09,670 --> 00:57:14,770
adoption if any per and previously it's

1186
00:57:12,850 --> 00:57:15,940
been on the D Bound list because one of

1187
00:57:14,770 --> 00:57:18,490
the apps ATS thought that was a good

1188
00:57:15,940 --> 00:57:20,380
place to start discussion we can move it

1189
00:57:18,490 --> 00:57:23,950
to the DNS op list if you prefer it I

1190
00:57:20,380 --> 00:57:26,890
don't mind us and that's all I had Jeff

1191
00:57:23,950 --> 00:57:28,750
hi Jeff Hodges um yeah this has been a

1192
00:57:26,890 --> 00:57:31,509
can we've been kicking down the road for

1193
00:57:28,750 --> 00:57:33,340
a long time it's on the D bound list

1194
00:57:31,510 --> 00:57:36,010
because we did have a working group a

1195
00:57:33,340 --> 00:57:38,740
while back that was specifically working

1196
00:57:36,010 --> 00:57:41,200
on this problem but nobody had the time

1197
00:57:38,740 --> 00:57:45,120
to keep pushing it forward we just kept

1198
00:57:41,200 --> 00:57:48,460
kicking can it does need to get solved

1199
00:57:45,120 --> 00:57:50,710
Andrew Sullivan and I believe firmly

1200
00:57:48,460 --> 00:57:54,280
that this really needs to be in the DNS

1201
00:57:50,710 --> 00:57:56,950
this sort of information on this this

1202
00:57:54,280 --> 00:57:59,800
draft is pretty congruent with or we

1203
00:57:56,950 --> 00:58:04,720
were coming from there is a problem

1204
00:57:59,800 --> 00:58:07,900
statement draft out there if you search

1205
00:58:04,720 --> 00:58:11,500
for d bound in file names you can find

1206
00:58:07,900 --> 00:58:13,300
it on there's also the start of policy

1207
00:58:11,500 --> 00:58:17,680
authority draft which this is pretty

1208
00:58:13,300 --> 00:58:24,250
congruent with the this draft does not

1209
00:58:17,680 --> 00:58:26,740
yet cover all the intricity x' at this

1210
00:58:24,250 --> 00:58:29,460
point in time um it kind of glosses over

1211
00:58:26,740 --> 00:58:32,770
various things happy to provide feedback

1212
00:58:29,460 --> 00:58:35,500
down the road on it I think this is good

1213
00:58:32,770 --> 00:58:38,590
work it really needs to find a home and

1214
00:58:35,500 --> 00:58:40,270
it needs to get solved great thanks yeah

1215
00:58:38,590 --> 00:58:42,460
I mean just sign your comment about

1216
00:58:40,270 --> 00:58:45,310
intricacies my hope but I don't know

1217
00:58:42,460 --> 00:58:47,650
it's realistic enough is enough

1218
00:58:45,310 --> 00:58:49,150
get mired in all the intricacies in this

1219
00:58:47,650 --> 00:58:50,530
draft and just do the mechanism bit but

1220
00:58:49,150 --> 00:58:53,290
that's what I meant

1221
00:58:50,530 --> 00:58:58,420
yes is there some mechanism things that

1222
00:58:53,290 --> 00:59:02,080
aren't mentioned yet in in terms of the

1223
00:58:58,420 --> 00:59:05,710
default at this point in time the

1224
00:59:02,080 --> 00:59:09,160
default is assumed of everything relying

1225
00:59:05,710 --> 00:59:12,820
on the DNS for the most part

1226
00:59:09,160 --> 00:59:15,790
that policy applies to subdomains

1227
00:59:12,820 --> 00:59:19,720
and that's not explicitly mentioned yes

1228
00:59:15,790 --> 00:59:23,650
and you need we you need to be able to

1229
00:59:19,720 --> 00:59:25,959
say at some node in the tree that no I

1230
00:59:23,650 --> 00:59:31,570
do not belong to the policy domain above

1231
00:59:25,960 --> 00:59:35,290
me awesome so yeah man and also the

1232
00:59:31,570 --> 00:59:38,230
current draft has it's optional for one

1233
00:59:35,290 --> 00:59:41,110
endpoint to our one node in the tree to

1234
00:59:38,230 --> 00:59:44,440
say I belong to this other one you can

1235
00:59:41,110 --> 00:59:47,440
unilaterally say that we disagree but

1236
00:59:44,440 --> 00:59:49,570
really we really think that you need to

1237
00:59:47,440 --> 00:59:50,710
say it both both nodes whether or not

1238
00:59:49,570 --> 00:59:52,480
they belong to each other

1239
00:59:50,710 --> 00:59:54,790
sure I heard that coming from a few

1240
00:59:52,480 --> 00:59:57,340
people and disagree with all of them and

1241
00:59:54,790 --> 00:59:58,600
I'm happy to keep disagreeing but if it

1242
00:59:57,340 --> 01:00:00,370
ever got adopted as a working good thing

1243
00:59:58,600 --> 01:00:03,700
then we would write the word and we need

1244
01:00:00,370 --> 01:00:05,950
to work our perspective is we need to we

1245
01:00:03,700 --> 01:00:07,569
need to do this and we need to work

1246
01:00:05,950 --> 01:00:10,660
through it and make it happen

1247
01:00:07,570 --> 01:00:14,230
yep thank you I'm closing the line of

1248
01:00:10,660 --> 01:00:17,170
the beret stefan-boltzmann I really

1249
01:00:14,230 --> 01:00:19,960
don't understand why we don't if we want

1250
01:00:17,170 --> 01:00:22,450
authenticity why we don't simply use DNS

1251
01:00:19,960 --> 01:00:24,640
SEC today's a draft creates a very

1252
01:00:22,450 --> 01:00:27,819
complicated authentication mechanism

1253
01:00:24,640 --> 01:00:31,930
copy and paste from DNS SEC which adds a

1254
01:00:27,820 --> 01:00:34,750
lot of Camela of style complexity so why

1255
01:00:31,930 --> 01:00:36,940
not just cutting everything out on

1256
01:00:34,750 --> 01:00:39,550
saying if you need to identify this

1257
01:00:36,940 --> 01:00:41,650
relationship use DNS SEC which is a

1258
01:00:39,550 --> 01:00:46,270
proper way to identify things

1259
01:00:41,650 --> 01:00:47,830
sure you could personally and again if

1260
01:00:46,270 --> 01:00:52,540
that's all working we wanted to do fine

1261
01:00:47,830 --> 01:00:53,560
boss I think there I'm still willing to

1262
01:00:52,540 --> 01:00:55,930
make the argument that there might be

1263
01:00:53,560 --> 01:00:56,410
value in cases where one part of the

1264
01:00:55,930 --> 01:00:57,790
relationship

1265
01:00:56,410 --> 01:00:59,410
those have DNS SEC and the other does

1266
01:00:57,790 --> 01:01:01,509
not and that's what the signature

1267
01:00:59,410 --> 01:01:04,779
mechanism does it is bit a bit

1268
01:01:01,510 --> 01:01:07,030
complicated but it's also a vast subset

1269
01:01:04,780 --> 01:01:08,770
of DNS SEC so DNS SEC is obviously more

1270
01:01:07,030 --> 01:01:12,160
complicated than what's in here but it

1271
01:01:08,770 --> 01:01:15,400
adds to a character it's not a small

1272
01:01:12,160 --> 01:01:19,100
subset it's most also complexity of the

1273
01:01:15,400 --> 01:01:19,800
in a sec how long is a camel

1274
01:01:19,100 --> 01:01:23,930
[Music]

1275
01:01:19,800 --> 01:01:23,930
[Laughter]

1276
01:01:25,370 --> 01:01:30,480
I'm not going to answer that last

1277
01:01:27,480 --> 01:01:33,300
question John Bradley yubico I'm gonna

1278
01:01:30,480 --> 01:01:35,160
largely agree with Jeff we have web

1279
01:01:33,300 --> 01:01:38,250
authentic and binding a bunch of

1280
01:01:35,160 --> 01:01:42,529
different projects I'm working on we if

1281
01:01:38,250 --> 01:01:46,500
we keep inventing point solutions to

1282
01:01:42,530 --> 01:01:47,700
address this these and the same issues

1283
01:01:46,500 --> 01:01:50,640
are coming up over and over again

1284
01:01:47,700 --> 01:01:52,350
eventually we're not going to you know

1285
01:01:50,640 --> 01:01:55,759
things will start falling over because

1286
01:01:52,350 --> 01:01:55,759
we won't be able to keep up with

1287
01:01:56,060 --> 01:02:11,670
manually maintaining lists and patches

1288
01:01:59,310 --> 01:02:15,690
and it's it is impacting web authentic

1289
01:02:11,670 --> 01:02:17,730
and the us relate their European domain

1290
01:02:15,690 --> 01:02:20,000
this is unreasonable as far as they're

1291
01:02:17,730 --> 01:02:21,660
concerned this is something we have to

1292
01:02:20,000 --> 01:02:23,640
progress progress

1293
01:02:21,660 --> 01:02:26,520
yeah I'm not emotionally attached to

1294
01:02:23,640 --> 01:02:28,620
this particular spec but we need to move

1295
01:02:26,520 --> 01:02:30,660
this ahead this may be a reasonable way

1296
01:02:28,620 --> 01:02:32,400
of doing it I'd be willing to work on it

1297
01:02:30,660 --> 01:02:34,440
to make sure that some of these we have

1298
01:02:32,400 --> 01:02:36,510
a broad selection of use cases that are

1299
01:02:34,440 --> 01:02:42,390
covered by whatever the final document

1300
01:02:36,510 --> 01:02:45,120
is great thanks Paul office in the past

1301
01:02:42,390 --> 01:02:46,950
I used to be fairly against this I'm not

1302
01:02:45,120 --> 01:02:50,700
flipping to the other side I'm more in

1303
01:02:46,950 --> 01:02:52,439
favor of it of doing this I do see some

1304
01:02:50,700 --> 01:02:54,419
problems that are not solved and I'm not

1305
01:02:52,440 --> 01:02:56,850
sure if you can solve them for instance

1306
01:02:54,420 --> 01:02:59,880
the one I see very frequently now at my

1307
01:02:56,850 --> 01:03:02,069
day job is people doing surveys

1308
01:02:59,880 --> 01:03:05,190
internally and then using a Google forum

1309
01:03:02,070 --> 01:03:06,930
and a shortener and and so then it's a

1310
01:03:05,190 --> 01:03:09,030
relationship between me and all of

1311
01:03:06,930 --> 01:03:10,980
Google and it sort of doesn't really

1312
01:03:09,030 --> 01:03:16,170
help me if everybody burns to these

1313
01:03:10,980 --> 01:03:17,940
super generic solution farms domains so

1314
01:03:16,170 --> 01:03:20,310
I'm not sure what this solution for that

1315
01:03:17,940 --> 01:03:25,980
as a name that can be thought of somehow

1316
01:03:20,310 --> 01:03:28,290
in this too to have a more specific URL

1317
01:03:25,980 --> 01:03:32,040
I guess because like I wanna I wanna

1318
01:03:28,290 --> 01:03:34,940
maybe specify some forms with like a

1319
01:03:32,040 --> 01:03:38,930
Google Form URL

1320
01:03:34,940 --> 01:03:41,720
of a just a domain name uni so that's

1321
01:03:38,930 --> 01:03:46,009
one part and I also agree with if you

1322
01:03:41,720 --> 01:03:49,220
use DNS SEC as the trust model has some

1323
01:03:46,010 --> 01:03:52,220
advantages one all people that keep

1324
01:03:49,220 --> 01:03:55,459
confusing Transport Security with with

1325
01:03:52,220 --> 01:03:57,939
authenticity of data I get another slap

1326
01:03:55,460 --> 01:04:02,960
on the wrist of doing it properly and

1327
01:03:57,940 --> 01:04:06,680
and the other part is if the power bind

1328
01:04:02,960 --> 01:04:08,690
draft moves forward then that is

1329
01:04:06,680 --> 01:04:11,868
actually your signal of saying I am

1330
01:04:08,690 --> 01:04:17,210
independent of my parent and so you

1331
01:04:11,869 --> 01:04:21,500
would solve that problem there Victor hi

1332
01:04:17,210 --> 01:04:22,490
this is Marie honorary co-chair I talked

1333
01:04:21,500 --> 01:04:23,569
about this the last time when you

1334
01:04:22,490 --> 01:04:25,279
brought it up and the Demark working

1335
01:04:23,569 --> 01:04:26,329
group is also doing we're interested in

1336
01:04:25,280 --> 01:04:28,310
something like this all right we

1337
01:04:26,329 --> 01:04:30,130
currently solved the problem with the

1338
01:04:28,310 --> 01:04:33,049
public suffix list for better or worse

1339
01:04:30,130 --> 01:04:34,970
and we've now we're just working group

1340
01:04:33,050 --> 01:04:36,530
last called a document that is sort of a

1341
01:04:34,970 --> 01:04:38,359
patch to that model that attempts to

1342
01:04:36,530 --> 01:04:40,010
bring in slightly more use cases that

1343
01:04:38,359 --> 01:04:41,990
are covered by that but not quite and

1344
01:04:40,010 --> 01:04:43,520
I'm worried that we're gonna continue on

1345
01:04:41,990 --> 01:04:44,209
this path of kind of like one more one

1346
01:04:43,520 --> 01:04:45,710
more one more

1347
01:04:44,210 --> 01:04:48,230
warts rather than a more general

1348
01:04:45,710 --> 01:04:50,510
solution so I'd love to collaborate with

1349
01:04:48,230 --> 01:04:52,250
maybe can this do something that

1350
01:04:50,510 --> 01:04:54,890
replaces that entire suite of use cases

1351
01:04:52,250 --> 01:04:56,300
and and solves that problem for us once

1352
01:04:54,890 --> 01:04:57,770
and for all I mean a lot of people with

1353
01:04:56,300 --> 01:04:59,150
allergies to use in the public suffix

1354
01:04:57,770 --> 01:05:01,339
lists the way we're doing it and so on

1355
01:04:59,150 --> 01:05:03,290
so I'm excited about this I want to see

1356
01:05:01,339 --> 01:05:04,700
it move ahead and if you need a home for

1357
01:05:03,290 --> 01:05:08,270
it that isn't here we'll take it or

1358
01:05:04,700 --> 01:05:10,520
something like that but yes this is this

1359
01:05:08,270 --> 01:05:11,960
is good stuff and if it simplifies our

1360
01:05:10,520 --> 01:05:13,400
lives then we'll be happy to move

1361
01:05:11,960 --> 01:05:14,839
towards that we even said in the Demark

1362
01:05:13,400 --> 01:05:17,060
document as soon as something better

1363
01:05:14,839 --> 01:05:19,549
than the PSL comes out jump to that so

1364
01:05:17,060 --> 01:05:20,839
if this is that then we want it okay

1365
01:05:19,550 --> 01:05:23,210
great

1366
01:05:20,839 --> 01:05:25,279
thank you Thanks so did I guess the only

1367
01:05:23,210 --> 01:05:27,069
question for now is do you want to move

1368
01:05:25,280 --> 01:05:32,420
the discussion to the DNS up list or

1369
01:05:27,069 --> 01:05:36,400
okay and please send feedback to the

1370
01:05:32,420 --> 01:05:36,400
mailing list and I think the chairs

1371
01:05:39,670 --> 01:05:44,869
about call for a dozen I think from the

1372
01:05:43,579 --> 01:05:47,319
room there's a lot of interest and

1373
01:05:44,869 --> 01:05:49,280
people want to work on the document but

1374
01:05:47,319 --> 01:05:52,820
yeah

1375
01:05:49,280 --> 01:05:58,460
thank you if it's a side mark for the

1376
01:05:52,820 --> 01:05:59,510
power bytes it's correct the draft from

1377
01:05:58,460 --> 01:06:01,730
what I understand there was some

1378
01:05:59,510 --> 01:06:03,530
interest in the draft but not on the

1379
01:06:01,730 --> 01:06:05,869
mailing list not expressed in the Menem

1380
01:06:03,530 --> 01:06:07,609
itself as people have an interest in the

1381
01:06:05,869 --> 01:06:08,810
draft these also expressed their

1382
01:06:07,609 --> 01:06:10,970
interest on the mailing list because

1383
01:06:08,810 --> 01:06:13,009
it's now being discussed on the

1384
01:06:10,970 --> 01:06:16,310
coordinate on the hallway please correct

1385
01:06:13,010 --> 01:06:19,700
me follow if not Breck so if people have

1386
01:06:16,310 --> 01:06:22,820
interesting power bite please express

1387
01:06:19,700 --> 01:06:25,848
their interest etc on the mailings it's

1388
01:06:22,820 --> 01:06:36,020
important for us okay thank you

1389
01:06:25,849 --> 01:06:39,560
next yeah oh oh sorry woody sorry I

1390
01:06:36,020 --> 01:06:47,119
thought you're such a familiar face

1391
01:06:39,560 --> 01:06:51,650
sorry yeah hi so I'm here to talk about

1392
01:06:47,119 --> 01:06:54,380
the DNS resolver information draft I

1393
01:06:51,650 --> 01:06:57,380
just noticed that the link there is for

1394
01:06:54,380 --> 01:06:59,720
one of the instantiations of the data

1395
01:06:57,380 --> 01:07:02,619
types not be resolved our information

1396
01:06:59,720 --> 01:07:02,618
draft so we'll fix it later

1397
01:07:07,089 --> 01:07:11,430
yeah

1398
01:07:09,539 --> 01:07:14,490
so the main thing is we are looking for

1399
01:07:11,430 --> 01:07:17,519
working group adoption and the reason

1400
01:07:14,490 --> 01:07:20,189
this draft exists is that primarily the

1401
01:07:17,519 --> 01:07:23,519
primary use cases it's originated with

1402
01:07:20,190 --> 01:07:25,049
was for doe but there was some feedback

1403
01:07:23,519 --> 01:07:26,669
that this should be generalized so it

1404
01:07:25,049 --> 01:07:30,059
could be used for other pieces of

1405
01:07:26,670 --> 01:07:31,319
information and so that resolvers can

1406
01:07:30,059 --> 01:07:35,250
publish more information about

1407
01:07:31,319 --> 01:07:40,349
themselves and the doe information will

1408
01:07:35,250 --> 01:07:43,410
move to a separate draft so this draft

1409
01:07:40,349 --> 01:07:45,690
proposes using I Jason to represent the

1410
01:07:43,410 --> 01:07:48,029
information it's presented in a

1411
01:07:45,690 --> 01:07:53,250
extensible form using name value pairs

1412
01:07:48,029 --> 01:07:55,619
and the client is can query for specific

1413
01:07:53,250 --> 01:07:57,359
names or a well-defined name called

1414
01:07:55,619 --> 01:08:02,299
inventory which gives you a list of all

1415
01:07:57,359 --> 01:08:02,299
available information on that resolver

1416
01:08:03,470 --> 01:08:10,078
so there are two endpoints specified for

1417
01:08:06,809 --> 01:08:14,069
creating this one over DNS which uses

1418
01:08:10,079 --> 01:08:16,350
the in a draw ARPA IP address of the

1419
01:08:14,069 --> 01:08:18,988
resolver itself and the reason for doing

1420
01:08:16,350 --> 01:08:21,420
that is it may allow for using DNS SEC

1421
01:08:18,988 --> 01:08:26,278
for validating the answers and the other

1422
01:08:21,420 --> 01:08:28,290
one is using HTTP originally we

1423
01:08:26,279 --> 01:08:31,670
considered using a special used domain

1424
01:08:28,290 --> 01:08:39,479
name but that was dropped in favor of T

1425
01:08:31,670 --> 01:08:43,889
in a draw ARPA DNS name so here's the

1426
01:08:39,479 --> 01:08:46,290
thing this one we are mentioning that

1427
01:08:43,889 --> 01:08:49,109
you can implement this over DNS or HTTPS

1428
01:08:46,290 --> 01:08:51,630
and the client could also decide to

1429
01:08:49,109 --> 01:08:53,870
query this information over DNS or over

1430
01:08:51,630 --> 01:08:56,400
HTTP which leads to an interesting

1431
01:08:53,870 --> 01:08:58,738
interoperability question which is if

1432
01:08:56,399 --> 01:09:00,210
the server and the client implement only

1433
01:08:58,738 --> 01:09:02,488
one of them and they are not the same

1434
01:09:00,210 --> 01:09:04,139
then they can't figure the information

1435
01:09:02,488 --> 01:09:10,129
out so that's something we are looking

1436
01:09:04,139 --> 01:09:13,730
for feedback here okay that's it a

1437
01:09:10,130 --> 01:09:13,730
questions feedback

1438
01:09:16,770 --> 01:09:25,060
then Schwartz so I I think I support

1439
01:09:22,359 --> 01:09:28,750
adoption I would like to solve this use

1440
01:09:25,060 --> 01:09:34,509
case I appreciate the work here I have

1441
01:09:28,750 --> 01:09:36,729
some personal differences of artistic

1442
01:09:34,509 --> 01:09:39,850
differences with with the engineering

1443
01:09:36,729 --> 01:09:42,339
choices here I really liked the special

1444
01:09:39,850 --> 01:09:43,989
use domain name formulation that you

1445
01:09:42,339 --> 01:09:46,689
have originally had much better than the

1446
01:09:43,988 --> 01:09:49,988
than the reverse IP address formulation

1447
01:09:46,689 --> 01:09:53,500
because I think a very large fraction of

1448
01:09:49,988 --> 01:09:55,989
users are behind DNS forwarders with the

1449
01:09:53,500 --> 01:09:58,960
result that the the true recursive

1450
01:09:55,989 --> 01:10:01,928
resolver in play has an IP address that

1451
01:09:58,960 --> 01:10:04,270
is not known to the client so for

1452
01:10:01,929 --> 01:10:10,000
example if ISPs wanted to use this

1453
01:10:04,270 --> 01:10:12,219
service to to offer improve transports

1454
01:10:10,000 --> 01:10:13,960
to their customers I think for

1455
01:10:12,219 --> 01:10:16,060
residential ISPs that would largely not

1456
01:10:13,960 --> 01:10:19,290
work because most customer equipment

1457
01:10:16,060 --> 01:10:23,679
most most stub resolver --zz are behind

1458
01:10:19,290 --> 01:10:25,750
DNS forwarder in their in their Wi-Fi

1459
01:10:23,679 --> 01:10:28,420
router if the Wi-Fi router actually just

1460
01:10:25,750 --> 01:10:30,340
passes the true IP it forwards the IP

1461
01:10:28,420 --> 01:10:32,620
address of the of the ISP resolver then

1462
01:10:30,340 --> 01:10:35,020
it will work but I'd like to cover that

1463
01:10:32,620 --> 01:10:39,159
use case I also think that the dot

1464
01:10:35,020 --> 01:10:40,750
well-known solution is is not necessary

1465
01:10:39,159 --> 01:10:45,099
thing it might simplify things agree

1466
01:10:40,750 --> 01:10:48,250
just pick the DNS thank you yeah it's

1467
01:10:45,100 --> 01:10:50,679
pretty brief so you can kind of reply to

1468
01:10:48,250 --> 01:10:53,230
that power just we just entrace had a

1469
01:10:50,679 --> 01:10:55,060
discussion about pcp 190 and using

1470
01:10:53,230 --> 01:10:57,309
well-known and we got pretty much shut

1471
01:10:55,060 --> 01:10:59,770
down it and you cannot get an exception

1472
01:10:57,310 --> 01:11:02,500
to that so not using without well-known

1473
01:10:59,770 --> 01:11:05,830
will be a hard problem you will first

1474
01:11:02,500 --> 01:11:08,050
have to convince the arc area to a piece

1475
01:11:05,830 --> 01:11:09,880
of you 190 needs updating right so I

1476
01:11:08,050 --> 01:11:11,469
think if the working group adopts this

1477
01:11:09,880 --> 01:11:14,620
we're gonna have all of these questions

1478
01:11:11,469 --> 01:11:16,480
we don't need to do them now and and yes

1479
01:11:14,620 --> 01:11:18,550
we need to if we'd go with dot well

1480
01:11:16,480 --> 01:11:21,159
known we're gonna have to like get

1481
01:11:18,550 --> 01:11:24,010
pre-approvals and stuff so yeah well

1482
01:11:21,159 --> 01:11:27,849
gentle request if you like you can

1483
01:11:24,010 --> 01:11:30,110
express it would be working group or it

1484
01:11:27,850 --> 01:11:33,330
will be adopted

1485
01:11:30,110 --> 01:11:34,650
it's recorded enough to get some sense

1486
01:11:33,330 --> 01:11:39,690
from the rumor from the cupboard

1487
01:11:34,650 --> 01:11:41,519
I don't like keep the strategic remarks

1488
01:11:39,690 --> 01:11:43,650
for later when we will have content to

1489
01:11:41,520 --> 01:11:46,080
put here but first from a technical

1490
01:11:43,650 --> 01:11:48,509
point of view getting information about

1491
01:11:46,080 --> 01:11:50,880
the network you connect to seems to me

1492
01:11:48,510 --> 01:11:53,700
very close from what are doing the

1493
01:11:50,880 --> 01:11:56,610
captive portal working group on also the

1494
01:11:53,700 --> 01:11:59,340
entire provisional provisioning demands

1495
01:11:56,610 --> 01:12:02,730
thing that is done I believe in the

1496
01:11:59,340 --> 01:12:05,550
internet area so is it isn't it simply a

1497
01:12:02,730 --> 01:12:08,190
very special case of provisioning

1498
01:12:05,550 --> 01:12:10,980
demands and should we instead rely on

1499
01:12:08,190 --> 01:12:14,460
the provisioning demands draft which is

1500
01:12:10,980 --> 01:12:17,790
I think near to completion so the answer

1501
01:12:14,460 --> 01:12:20,310
that one of the initial use cases could

1502
01:12:17,790 --> 01:12:22,860
be done in DHC as you were saying

1503
01:12:20,310 --> 01:12:25,680
although there's when that was asked

1504
01:12:22,860 --> 01:12:27,179
earlier in the dough working group there

1505
01:12:25,680 --> 01:12:29,790
was very little interest in that people

1506
01:12:27,180 --> 01:12:32,340
said no we don't care but in addition

1507
01:12:29,790 --> 01:12:34,800
this allows you to get other information

1508
01:12:32,340 --> 01:12:37,500
about a resolver it's not just for

1509
01:12:34,800 --> 01:12:39,660
getting finding out about dough so a

1510
01:12:37,500 --> 01:12:41,790
resolver might want to tell you other

1511
01:12:39,660 --> 01:12:44,610
things about itself such as I prefer

1512
01:12:41,790 --> 01:12:45,780
that you connect to me to me over TCP

1513
01:12:44,610 --> 01:12:48,540
things like that

1514
01:12:45,780 --> 01:12:51,599
so that is really a you know this can be

1515
01:12:48,540 --> 01:12:54,120
used by resolvers saying to stub

1516
01:12:51,600 --> 01:12:56,370
resolver recursive resolver saying stub

1517
01:12:54,120 --> 01:12:58,410
resolvers please do this with me i am

1518
01:12:56,370 --> 01:13:00,090
able to do this so it really isn't a

1519
01:12:58,410 --> 01:13:02,790
provisioning thing as much because

1520
01:13:00,090 --> 01:13:05,100
remember not all not all resolvers are

1521
01:13:02,790 --> 01:13:09,630
provisioned through DHCP people choose

1522
01:13:05,100 --> 01:13:14,460
other ones in other ways it seems to me

1523
01:13:09,630 --> 01:13:16,890
very see a very similar problem so maybe

1524
01:13:14,460 --> 01:13:19,140
it will be a good idea to add in the

1525
01:13:16,890 --> 01:13:19,760
draft why bother learning domains is not

1526
01:13:19,140 --> 01:13:22,050
a solution

1527
01:13:19,760 --> 01:13:25,580
ok that sounds good and I hadn't even

1528
01:13:22,050 --> 01:13:25,580
thought of looking at cap for I will

1529
01:13:28,580 --> 01:13:32,250
Jimmy I just think this is an

1530
01:13:30,540 --> 01:13:34,080
interesting piece of what attempts to

1531
01:13:32,250 --> 01:13:37,490
solve or your problem and I think the

1532
01:13:34,080 --> 01:13:37,490
one who should adopt as a document

1533
01:13:39,240 --> 01:13:47,260
West heard Icarus I so I shortly before

1534
01:13:44,950 --> 01:13:48,670
the IHF I was actually gonna write

1535
01:13:47,260 --> 01:13:50,800
something very similar so I guess I

1536
01:13:48,670 --> 01:13:52,300
support this in concept I was gonna do

1537
01:13:50,800 --> 01:13:53,920
it in a completely different way so the

1538
01:13:52,300 --> 01:13:56,230
way I was gonna do it was actually to

1539
01:13:53,920 --> 01:13:58,300
create a single name that would give you

1540
01:13:56,230 --> 01:14:00,969
a list of other records you could go

1541
01:13:58,300 --> 01:14:02,860
look up such like we already have some

1542
01:14:00,970 --> 01:14:04,120
that a resolver based like you know what

1543
01:14:02,860 --> 01:14:06,179
do you know ski do you support and

1544
01:14:04,120 --> 01:14:10,090
things like that

1545
01:14:06,180 --> 01:14:12,340
the so one note on that that who needs

1546
01:14:10,090 --> 01:14:15,340
taped over is new name value pair if

1547
01:14:12,340 --> 01:14:17,590
this goes through with the current set

1548
01:14:15,340 --> 01:14:19,900
up new name value pairs can be defined

1549
01:14:17,590 --> 01:14:22,030
just by expert review and specification

1550
01:14:19,900 --> 01:14:24,639
required mean just an internet draft so

1551
01:14:22,030 --> 01:14:27,130
it's very lightweight for adding in some

1552
01:14:24,640 --> 01:14:30,690
of those yes with the caveat that I was

1553
01:14:27,130 --> 01:14:30,690
about to get to so thank you perfect

1554
01:14:31,440 --> 01:14:35,980
architectural II we're doing strange

1555
01:14:33,310 --> 01:14:39,010
things with the text encoding values in

1556
01:14:35,980 --> 01:14:40,419
DNS we now have records that are

1557
01:14:39,010 --> 01:14:42,580
encoding in a number of different

1558
01:14:40,420 --> 01:14:45,010
encoding you know mechanisms like SPF

1559
01:14:42,580 --> 01:14:48,610
you know as semi colon separated kind of

1560
01:14:45,010 --> 01:14:51,490
stuff this is now doing a JSON and every

1561
01:14:48,610 --> 01:14:54,250
time we we fracture that you know we are

1562
01:14:51,490 --> 01:14:55,929
limiting or or the number of things that

1563
01:14:54,250 --> 01:14:57,070
can read it or mandating that you know

1564
01:14:55,930 --> 01:15:01,300
everything that needs to be able to read

1565
01:14:57,070 --> 01:15:03,509
everything go off and include the

1566
01:15:01,300 --> 01:15:07,030
appropriate parser and I don't know

1567
01:15:03,510 --> 01:15:09,400
positively that we want to do that with

1568
01:15:07,030 --> 01:15:11,889
respect to it would be easy to add stuff

1569
01:15:09,400 --> 01:15:13,450
you're also building on gigantic record

1570
01:15:11,890 --> 01:15:15,490
sizes and things like that which is why

1571
01:15:13,450 --> 01:15:18,040
I was sort of you know thinking about an

1572
01:15:15,490 --> 01:15:21,010
index based approach you know doing it

1573
01:15:18,040 --> 01:15:23,320
instead so you know again I think I

1574
01:15:21,010 --> 01:15:24,760
support the concept in general I'm not

1575
01:15:23,320 --> 01:15:26,290
sure I support the implementation I

1576
01:15:24,760 --> 01:15:29,860
think that the DNS up working group

1577
01:15:26,290 --> 01:15:31,810
audit solve this problem case and we

1578
01:15:29,860 --> 01:15:34,780
should get to what's the right mechanism

1579
01:15:31,810 --> 01:15:37,240
so so support not necessarily the

1580
01:15:34,780 --> 01:15:39,160
drafted I support the moving forward of

1581
01:15:37,240 --> 01:15:41,260
it and we're totally open to like for

1582
01:15:39,160 --> 01:15:43,210
example if people don't like hi Jason

1583
01:15:41,260 --> 01:15:44,890
and they want to go back to you know

1584
01:15:43,210 --> 01:15:47,110
like you were saying semicolons in

1585
01:15:44,890 --> 01:15:48,730
between such sure that's fine well and

1586
01:15:47,110 --> 01:15:50,259
Jason makes perfect sense for the HTTP

1587
01:15:48,730 --> 01:15:52,239
pool because he already know that that

1588
01:15:50,260 --> 01:15:54,550
that mechanism probably has it

1589
01:15:52,239 --> 01:15:56,679
but as you say this would add another

1590
01:15:54,550 --> 01:15:58,150
parser for some people maybe that's too

1591
01:15:56,680 --> 01:15:59,890
much maybe we don't want to do it that

1592
01:15:58,150 --> 01:16:03,429
way we can do in some other format

1593
01:15:59,890 --> 01:16:05,070
that's fine on the top of Ben Schwartz

1594
01:16:03,430 --> 01:16:06,940
on the topic of provisioning

1595
01:16:05,070 --> 01:16:08,830
provisioning makes sense when you're

1596
01:16:06,940 --> 01:16:11,650
speaking about local information about

1597
01:16:08,830 --> 01:16:13,510
the network I view this personally as

1598
01:16:11,650 --> 01:16:15,040
non-local at least my use cases as I

1599
01:16:13,510 --> 01:16:17,440
mentioned before are essentially

1600
01:16:15,040 --> 01:16:19,300
non-local and in fact architectural II

1601
01:16:17,440 --> 01:16:23,139
what I would really like although I

1602
01:16:19,300 --> 01:16:31,690
don't know if it's possible is a DNS

1603
01:16:23,140 --> 01:16:38,739
trace route that tells me but can we cut

1604
01:16:31,690 --> 01:16:40,059
the might line before you so as we

1605
01:16:38,739 --> 01:16:43,690
consider adoption I think we should also

1606
01:16:40,060 --> 01:16:45,390
think about what design spaces open what

1607
01:16:43,690 --> 01:16:48,820
are we actually considering yeah

1608
01:16:45,390 --> 01:16:52,150
and this might add into that trace Ruby

1609
01:16:48,820 --> 01:16:54,009
a thing if certain resolvers want to say

1610
01:16:52,150 --> 01:16:55,839
that and want to say where they're doing

1611
01:16:54,010 --> 01:16:58,210
upstream no limitation on that

1612
01:16:55,840 --> 01:17:00,910
regardless of the format that we come up

1613
01:16:58,210 --> 01:17:02,580
with so great so you folks will figure

1614
01:17:00,910 --> 01:17:05,500
out about working with adoption calls

1615
01:17:02,580 --> 01:17:07,510
yes yeah yeah no indeed so I think

1616
01:17:05,500 --> 01:17:09,280
concluding there's interest but there's

1617
01:17:07,510 --> 01:17:11,520
I think we do need some additional

1618
01:17:09,280 --> 01:17:16,769
discussion in the mailing list and then

1619
01:17:11,520 --> 01:17:21,969
maybe on the mailing list or maybe idea

1620
01:17:16,770 --> 01:17:24,450
okay okay okay thank you yeah thanks

1621
01:17:21,969 --> 01:17:24,450
thanks

1622
01:17:27,420 --> 01:17:43,270
so next speak rubbish giovanna yes

1623
01:17:40,380 --> 01:17:45,880
um yeah good morning everybody

1624
01:17:43,270 --> 01:17:51,840
so today we're I'm here presenting this

1625
01:17:45,880 --> 01:17:55,050
draft version for well it's strange

1626
01:17:51,840 --> 01:17:55,050
[Music]

1627
01:17:57,390 --> 01:18:03,010
alright so just this is just a draft

1628
01:18:01,000 --> 01:18:05,530
history it was first presented after 104

1629
01:18:03,010 --> 01:18:08,380
and Claude just a commander Peter the

1630
01:18:05,530 --> 01:18:10,570
slides here and today diversion for we

1631
01:18:08,380 --> 01:18:13,930
incorporated a lot of changes based on

1632
01:18:10,570 --> 01:18:16,420
the feedback we had on Oh for all this

1633
01:18:13,930 --> 01:18:18,190
changes our openness issues we're open

1634
01:18:16,420 --> 01:18:21,640
si shoes on github II want to cover that

1635
01:18:18,190 --> 01:18:23,410
and today we'll be covering most the

1636
01:18:21,640 --> 01:18:25,720
most important ones only and before I

1637
01:18:23,410 --> 01:18:27,309
even dive here to start to cover them I

1638
01:18:25,720 --> 01:18:29,110
would like to thank again everybody on

1639
01:18:27,310 --> 01:18:30,490
the 104 for the feedback I think it was

1640
01:18:29,110 --> 01:18:32,139
a little defensive that's probably my

1641
01:18:30,490 --> 01:18:33,880
the way I'm used to academic conferences

1642
01:18:32,140 --> 01:18:35,350
but when he went home and watching the

1643
01:18:33,880 --> 01:18:36,730
video was like these guys are right so

1644
01:18:35,350 --> 01:18:41,830
thanks for the feedback was really nice

1645
01:18:36,730 --> 01:18:43,450
um so changes for a no for and we had a

1646
01:18:41,830 --> 01:18:45,190
discussion on the title the word

1647
01:18:43,450 --> 01:18:47,679
recommendation that's very strong for

1648
01:18:45,190 --> 01:18:49,929
the ATF so we replace every instance of

1649
01:18:47,680 --> 01:18:52,300
recommendations to considerations women

1650
01:18:49,930 --> 01:18:53,980
point that point on and he was concerned

1651
01:18:52,300 --> 01:18:56,080
that we could reduce the setups Richard

1652
01:18:53,980 --> 01:18:58,240
JT because if they everyone would follow

1653
01:18:56,080 --> 01:18:59,980
that recommendation and in also real

1654
01:18:58,240 --> 01:19:02,320
considerations the word you use in many

1655
01:18:59,980 --> 01:19:04,780
of other several others DNS or Isis and

1656
01:19:02,320 --> 01:19:06,219
a note to self here it's like a ATF

1657
01:19:04,780 --> 01:19:08,469
recommendations different from a paper

1658
01:19:06,220 --> 01:19:10,300
recommendation in a paper recommendation

1659
01:19:08,470 --> 01:19:14,950
it's more or less like a IETF

1660
01:19:10,300 --> 01:19:16,950
consideration other issue draft talks

1661
01:19:14,950 --> 01:19:19,630
mostly about anycast but not exclusively

1662
01:19:16,950 --> 01:19:21,550
enjoyably pointed at except for the CTR

1663
01:19:19,630 --> 01:19:24,550
considerations are other ones are

1664
01:19:21,550 --> 01:19:26,200
related to any case and he is right but

1665
01:19:24,550 --> 01:19:28,060
the thing is like this is a tax we put

1666
01:19:26,200 --> 01:19:29,800
there our fix is based pretty much

1667
01:19:28,060 --> 01:19:34,120
saying yeah that could be the case can

1668
01:19:29,800 --> 01:19:35,800
you work for other applications but we

1669
01:19:34,120 --> 01:19:37,750
have only done for DNS this academic

1670
01:19:35,800 --> 01:19:39,010
study so we cannot actually claim that

1671
01:19:37,750 --> 01:19:42,030
it would work for the others but could

1672
01:19:39,010 --> 01:19:42,030
Wells might as well were

1673
01:19:42,429 --> 01:19:45,280
TTL consideration controversy like Peter

1674
01:19:44,890 --> 01:19:47,230
call

1675
01:19:45,280 --> 01:19:49,719
he pointed how complex the issue was

1676
01:19:47,230 --> 01:19:51,339
before DNS off like 15 years ago people

1677
01:19:49,719 --> 01:19:55,630
try to figure that out there was a very

1678
01:19:51,340 --> 01:19:57,850
complex problem and he also said like

1679
01:19:55,630 --> 01:19:59,620
tht I was mostly first on Montana's not

1680
01:19:57,850 --> 01:20:00,940
ops but there you know there's some

1681
01:19:59,620 --> 01:20:04,150
operators that also zone maintainer

1682
01:20:00,940 --> 01:20:06,790
still this typically there's child and

1683
01:20:04,150 --> 01:20:09,150
parent detail as well so it's important

1684
01:20:06,790 --> 01:20:12,580
for issue and to fix that we actually

1685
01:20:09,150 --> 01:20:14,320
rewrote the entire section and because

1686
01:20:12,580 --> 01:20:16,870
we had a new study the cover and

1687
01:20:14,320 --> 01:20:19,150
specifically the considerations of TTL

1688
01:20:16,870 --> 01:20:22,000
we just I presented last Sunday here on

1689
01:20:19,150 --> 01:20:25,659
ia PG and has just been accepted on the

1690
01:20:22,000 --> 01:20:28,420
next forthcoming IMC conference this is

1691
01:20:25,659 --> 01:20:31,210
a here in this URL you have actually the

1692
01:20:28,420 --> 01:20:33,310
submitted version a revised version will

1693
01:20:31,210 --> 01:20:34,690
follow up after that so pretty much we

1694
01:20:33,310 --> 01:20:36,760
wrote the whole thing and now we kind of

1695
01:20:34,690 --> 01:20:38,139
up we don't you don't say like hey you

1696
01:20:36,760 --> 01:20:41,679
should use a detail of one day or one

1697
01:20:38,140 --> 01:20:43,300
hour we just like measure care a lot of

1698
01:20:41,679 --> 01:20:45,159
scenarios and situations and you show

1699
01:20:43,300 --> 01:20:47,500
where the consequences and the

1700
01:20:45,159 --> 01:20:49,239
implications of the choices because

1701
01:20:47,500 --> 01:20:51,370
before people wouldn't you know people

1702
01:20:49,239 --> 01:20:52,780
just copy and paste details and let it

1703
01:20:51,370 --> 01:20:54,489
run in that way but now we can actually

1704
01:20:52,780 --> 01:20:56,980
make any form choice and how to choose

1705
01:20:54,489 --> 01:20:58,419
that and regards performance with

1706
01:20:56,980 --> 01:20:59,860
regards caching and we've got a bunch of

1707
01:20:58,420 --> 01:21:05,020
stuff so I recommend it you have a look

1708
01:20:59,860 --> 01:21:07,299
in that paper select issue 15 first

1709
01:21:05,020 --> 01:21:09,880
selection could be a more diverse we had

1710
01:21:07,300 --> 01:21:11,770
trade different papers on to the

1711
01:21:09,880 --> 01:21:14,469
references of this draft which you are

1712
01:21:11,770 --> 01:21:16,690
not co-author by us we also had this

1713
01:21:14,469 --> 01:21:19,540
piece of tax here to just say hey this

1714
01:21:16,690 --> 01:21:22,299
document actually covers it's based on

1715
01:21:19,540 --> 01:21:24,010
research papers and recommend folks to

1716
01:21:22,300 --> 01:21:25,480
read the related work section of those

1717
01:21:24,010 --> 01:21:28,870
papers because they they have a specific

1718
01:21:25,480 --> 01:21:30,360
they address that specifically so that's

1719
01:21:28,870 --> 01:21:32,739
what we have done

1720
01:21:30,360 --> 01:21:36,159
I think George Marcus when he pointed at

1721
01:21:32,739 --> 01:21:37,928
like Atlas it's typically biased towards

1722
01:21:36,159 --> 01:21:43,059
Europe for one of our considerations

1723
01:21:37,929 --> 01:21:45,190
that was like a c3 and he's right but I

1724
01:21:43,060 --> 01:21:47,710
did include and we have include that on

1725
01:21:45,190 --> 01:21:50,678
version oh three of the trap that

1726
01:21:47,710 --> 01:21:53,199
actually the consideration about any

1727
01:21:50,679 --> 01:21:54,130
case and this paper the folks the altar

1728
01:21:53,199 --> 01:21:56,440
is what they did

1729
01:21:54,130 --> 01:21:58,869
did not do it only analysis for the all

1730
01:21:56,440 --> 01:22:00,820
the awry pathos probes altogether they

1731
01:21:58,869 --> 01:22:03,848
actually break that down into countries

1732
01:22:00,820 --> 01:22:06,790
and regions so the consequences of that

1733
01:22:03,849 --> 01:22:10,840
is it's this text that we put there it's

1734
01:22:06,790 --> 01:22:12,969
a given that well Atlas has a little bit

1735
01:22:10,840 --> 01:22:14,949
more bias towards here but the analysis

1736
01:22:12,969 --> 01:22:16,510
per country per region does not change

1737
01:22:14,949 --> 01:22:18,579
the conclusion that locations of any

1738
01:22:16,510 --> 01:22:22,599
caste instances dominates latency and

1739
01:22:18,579 --> 01:22:24,699
just to remind us also peer review and I

1740
01:22:22,599 --> 01:22:27,219
think that's the most important issues

1741
01:22:24,699 --> 01:22:28,719
we have changed there's many more but

1742
01:22:27,219 --> 01:22:53,530
they're on github and I just cover the

1743
01:22:28,719 --> 01:22:54,909
basic ones here thanks I'm not I cannot

1744
01:22:53,530 --> 01:23:01,000
say that I know much positive and all

1745
01:22:54,909 --> 01:23:03,150
that I'm sure I would be so there are

1746
01:23:01,000 --> 01:23:06,190
two things that was the the wordy

1747
01:23:03,150 --> 01:23:12,250
document to be adopted daemon also

1748
01:23:06,190 --> 01:23:13,750
pointed out and that has been solved the

1749
01:23:12,250 --> 01:23:15,210
other thing is of course to the working

1750
01:23:13,750 --> 01:23:17,380
group

1751
01:23:15,210 --> 01:23:21,489
listen it's interesting to see that

1752
01:23:17,380 --> 01:23:27,780
research can be well finds its way to

1753
01:23:21,489 --> 01:23:29,799
operational practices or considerations

1754
01:23:27,780 --> 01:23:31,329
there's a group of people here in their

1755
01:23:29,800 --> 01:23:35,369
working group they think it's very

1756
01:23:31,329 --> 01:23:38,079
interesting and very good to have and

1757
01:23:35,369 --> 01:23:41,290
but that's more the biggest discussion

1758
01:23:38,079 --> 01:23:44,739
about the wordy so and for the draft

1759
01:23:41,290 --> 01:23:48,369
future it's also of course up to the

1760
01:23:44,739 --> 01:23:54,820
group what I think it's a useful

1761
01:23:48,369 --> 01:23:58,259
document yeah and please please speak up

1762
01:23:54,820 --> 01:23:58,259
here in the room or on the mailing list

1763
01:23:58,440 --> 01:24:06,699
also operators you also discussed things

1764
01:24:01,630 --> 01:24:08,090
with any card operators yeah so some of

1765
01:24:06,699 --> 01:24:10,759
these considerations have been there boy

1766
01:24:08,090 --> 01:24:12,110
by us like dining our by the earth by

1767
01:24:10,760 --> 01:24:19,460
odors as well we have talked about that

1768
01:24:12,110 --> 01:24:20,960
yeah yeah yep alright so in the room how

1769
01:24:19,460 --> 01:24:22,250
many folks have read it I have the

1770
01:24:20,960 --> 01:24:28,760
impression a bunch of people around this

1771
01:24:22,250 --> 01:24:30,230
document okay just as a quick home to

1772
01:24:28,760 --> 01:24:32,000
get where we are as far as the future

1773
01:24:30,230 --> 01:24:36,379
this document because because there have

1774
01:24:32,000 --> 01:24:37,640
been a couple of versions here if you

1775
01:24:36,380 --> 01:24:40,970
think it makes sense for the working

1776
01:24:37,640 --> 01:24:46,900
group to consider this as it adds a

1777
01:24:40,970 --> 01:24:49,760
working group draft these home now if

1778
01:24:46,900 --> 01:24:56,420
you oppose it as a working group draft

1779
01:24:49,760 --> 01:24:59,750
please home now okay so I guess the only

1780
01:24:56,420 --> 01:25:02,270
thing we can say from that is um we were

1781
01:24:59,750 --> 01:25:03,890
asking room for more review and you to

1782
01:25:02,270 --> 01:25:07,670
continue to take the feedback up

1783
01:25:03,890 --> 01:25:10,430
chirping thank oh yeah Matt Poinsett

1784
01:25:07,670 --> 01:25:11,450
I've a sort of a comment on the adoption

1785
01:25:10,430 --> 01:25:14,690
question

1786
01:25:11,450 --> 01:25:19,519
since this is a review essentially a

1787
01:25:14,690 --> 01:25:22,429
review of academic papers I don't really

1788
01:25:19,520 --> 01:25:25,130
see what the working group is going to

1789
01:25:22,430 --> 01:25:28,100
do to improve it it's it's an analysis

1790
01:25:25,130 --> 01:25:30,770
of research that's out there and I and

1791
01:25:28,100 --> 01:25:32,210
so I don't really see what what the

1792
01:25:30,770 --> 01:25:35,750
contribution of the working group would

1793
01:25:32,210 --> 01:25:39,040
be to improving it um it really feels

1794
01:25:35,750 --> 01:25:39,040
like an independent submission to me

1795
01:25:43,270 --> 01:25:47,560
thank you

1796
01:25:44,660 --> 01:25:47,559
Thanks

1797
01:25:56,000 --> 01:26:01,640
okay next speaker put you myself

1798
01:26:05,330 --> 01:26:15,950
good morning I'm column J PRS you talk

1799
01:26:09,870 --> 01:26:15,950
about avoid augmentation in DNA's

1800
01:26:24,380 --> 01:26:30,210
posterity discover is vulnerable

1801
01:26:27,000 --> 01:26:34,760
details are presented in my presentation

1802
01:26:30,210 --> 01:26:38,040
at rock sathi and this IEP meeting and

1803
01:26:34,760 --> 01:26:40,620
energy is said to be the biggest user by

1804
01:26:38,040 --> 01:26:42,830
IP fragmentation because Eden's arrow

1805
01:26:40,620 --> 01:26:47,190
under dynastic with widely deployed

1806
01:26:42,830 --> 01:26:49,559
research papers described effective

1807
01:26:47,190 --> 01:26:52,099
cache poisoning attacks using IP

1808
01:26:49,560 --> 01:26:55,800
fragmentation on the passivity discovery

1809
01:26:52,100 --> 01:27:00,060
fragmentation cost the poisonous 2013 IP

1810
01:26:55,800 --> 01:27:02,370
hunter shot attack on DNS 2030 domain

1811
01:27:00,060 --> 01:27:07,200
validation prosperous for MDM reagent

1812
01:27:02,370 --> 01:27:10,130
PKI 2000 2018 auditor toe we cannot

1813
01:27:07,200 --> 01:27:16,980
trust to fragment the UDP packets and

1814
01:27:10,130 --> 01:27:21,660
passivity discovery then we can avoid

1815
01:27:16,980 --> 01:27:23,790
raj UDP responses it is hot ETS arrow

1816
01:27:21,660 --> 01:27:27,450
has requested EDP paid all the sites

1817
01:27:23,790 --> 01:27:33,390
field it can choose smaller bodies more

1818
01:27:27,450 --> 01:27:37,740
than passivity you and I she should see

1819
01:27:33,390 --> 01:27:40,680
891 section six point two point one says

1820
01:27:37,740 --> 01:27:43,200
that note that facility with the wizard

1821
01:27:40,680 --> 01:27:48,900
fragmentation could be smaller than this

1822
01:27:43,200 --> 01:27:52,110
and truncation works well when responses

1823
01:27:48,900 --> 01:27:54,440
exceed specify the median suicides some

1824
01:27:52,110 --> 01:27:57,990
of the written truncated responses and

1825
01:27:54,440 --> 01:27:59,969
currently try by TCP and TCP is

1826
01:27:57,990 --> 01:28:05,610
considered resilient against IP

1827
01:27:59,970 --> 01:28:08,730
fragmentation attacks are she 77 1666

1828
01:28:05,610 --> 01:28:11,849
states that or general-purpose DNS

1829
01:28:08,730 --> 01:28:18,360
implementations masks support both UDP

1830
01:28:11,850 --> 01:28:21,179
and TCP then I'd like to propose new

1831
01:28:18,360 --> 01:28:23,309
recommendations new services or about

1832
01:28:21,179 --> 01:28:28,889
the shooter set to ETS arrow requested

1833
01:28:23,310 --> 01:28:33,780
EVP pelo sides to 2120 defined in DNS

1834
01:28:28,889 --> 01:28:36,600
take Archie 40:35 as minimum pay Rosa

1835
01:28:33,780 --> 01:28:39,830
sides and also observers Andrews

1836
01:28:36,600 --> 01:28:43,020
observers should set each net zero

1837
01:28:39,830 --> 01:28:49,139
spawned responded maximum payroll side

1838
01:28:43,020 --> 01:28:52,530
to 320 same body and more also it is

1839
01:28:49,139 --> 01:28:54,960
harbors may send DNS responses it's IP

1840
01:28:52,530 --> 01:28:57,840
don't hug IP version 6 don't allow

1841
01:28:54,960 --> 01:29:00,840
options and Hulu service is all about

1842
01:28:57,840 --> 01:29:02,369
may drop fragmented EVP responses there

1843
01:29:00,840 --> 01:29:04,920
I will hood on Dennis before I P

1844
01:29:02,369 --> 01:29:06,869
reassembly it is a countermeasure

1845
01:29:04,920 --> 01:29:09,659
against the unit's just poisoning

1846
01:29:06,869 --> 01:29:16,769
attacks using IP fragmentation and last

1847
01:29:09,659 --> 01:29:21,860
night for a week she advised me that the

1848
01:29:16,770 --> 01:29:26,280
constant 320 is not good calculate from

1849
01:29:21,860 --> 01:29:32,250
passivity or incremental value it is

1850
01:29:26,280 --> 01:29:34,679
wrong idea and we need a special

1851
01:29:32,250 --> 01:29:37,350
consideration in small mutant network

1852
01:29:34,679 --> 01:29:41,060
when DNS servers are located across the

1853
01:29:37,350 --> 01:29:44,070
increased empty body less than 280

1854
01:29:41,060 --> 01:29:46,530
choose the EDS requesters and responders

1855
01:29:44,070 --> 01:29:50,000
maximum payload sizes fit to the

1856
01:29:46,530 --> 01:29:50,000
smallest ring como tu barrio

1857
01:29:50,119 --> 01:29:59,790
otherwise the response may be dropped

1858
01:29:55,940 --> 01:30:02,339
and the small empty body - IP version 4

1859
01:29:59,790 --> 01:30:08,429
version 6 head aside and UDP he decides

1860
01:30:02,340 --> 01:30:11,429
it's possible in a genericized or maybe

1861
01:30:08,429 --> 01:30:13,949
another recommendation nina sabado

1862
01:30:11,429 --> 01:30:14,849
should be located on networks higher mu

1863
01:30:13,949 --> 01:30:17,759
tu barrio

1864
01:30:14,849 --> 01:30:19,499
to the major part to the major part of

1865
01:30:17,760 --> 01:30:28,199
the Internet is Raja

1866
01:30:19,499 --> 01:30:30,719
or equal to 1280 and deployment the

1867
01:30:28,199 --> 01:30:34,199
proposed method supports incremental

1868
01:30:30,719 --> 01:30:37,260
deployment when observer increments the

1869
01:30:34,199 --> 01:30:40,320
proposal the horses who services rubra

1870
01:30:37,260 --> 01:30:42,780
becomes to avoid IP fragmentation in DNS

1871
01:30:40,320 --> 01:30:46,049
and when an authoritative server

1872
01:30:42,780 --> 01:30:48,900
implements the proposal the authorative

1873
01:30:46,050 --> 01:30:54,420
Sabha becomes to avoid IP fragmentation

1874
01:30:48,900 --> 01:30:57,570
in DNS other proposal case basic OTC

1875
01:30:54,420 --> 01:31:03,650
with shared key requires both requesters

1876
01:30:57,570 --> 01:31:03,650
and respondents support not implemented

1877
01:31:04,010 --> 01:31:11,900
under I hope I have concern about to

1878
01:31:08,699 --> 01:31:14,940
drop in fragments not written in draft

1879
01:31:11,900 --> 01:31:17,699
drop fragment derocker elementary

1880
01:31:14,940 --> 01:31:21,150
responses and DNS responses I peed on

1881
01:31:17,699 --> 01:31:23,190
trot version 6 don't shrug options may

1882
01:31:21,150 --> 01:31:29,999
cause Deena's communication error

1883
01:31:23,190 --> 01:31:32,400
timeout and to recover - situation guru

1884
01:31:29,999 --> 01:31:36,769
services Israel who services world needs

1885
01:31:32,400 --> 01:31:40,348
to retry by TCP transport it increases

1886
01:31:36,769 --> 01:31:44,969
compare complexity of service robots new

1887
01:31:40,349 --> 01:31:47,880
robots and how do you consider do you

1888
01:31:44,969 --> 01:31:52,489
support this recommendation or do you

1889
01:31:47,880 --> 01:31:52,489
like fragmentation that's all

1890
01:32:07,840 --> 01:32:16,250
though largely month on that note i

1891
01:32:11,330 --> 01:32:18,500
think i ieave your writing what you say

1892
01:32:16,250 --> 01:32:21,890
the the technical content in there is

1893
01:32:18,500 --> 01:32:25,010
quite okay so my comment is just along

1894
01:32:21,890 --> 01:32:29,530
the lines of again as the last last

1895
01:32:25,010 --> 01:32:33,100
draft how to how to put this to the

1896
01:32:29,530 --> 01:32:34,990
end-users and the people who deploy this

1897
01:32:33,100 --> 01:32:38,020
recommendations is a strong word

1898
01:32:34,990 --> 01:32:40,429
considerations might be a better word

1899
01:32:38,020 --> 01:32:43,670
please have a look at at how that is

1900
01:32:40,430 --> 01:32:45,530
presented and and I would like the

1901
01:32:43,670 --> 01:32:47,450
working group to make a choice here how

1902
01:32:45,530 --> 01:32:49,340
to present that if it's adopted to the

1903
01:32:47,450 --> 01:32:50,900
working group be careful about how you

1904
01:32:49,340 --> 01:32:58,580
present this to the people who read it

1905
01:32:50,900 --> 01:33:01,610
that's my only comment hi

1906
01:32:58,580 --> 01:33:04,970
Puneet from Google Public DNS so we are

1907
01:33:01,610 --> 01:33:07,160
in favor of fixing the fragment UDP

1908
01:33:04,970 --> 01:33:08,990
fragmentation issue so in principle we

1909
01:33:07,160 --> 01:33:10,760
support this I think figuring out the

1910
01:33:08,990 --> 01:33:12,679
MTU and some of the deployment

1911
01:33:10,760 --> 01:33:16,870
considerations that can be figured out

1912
01:33:12,680 --> 01:33:16,870
on the working group mailing list

1913
01:33:17,230 --> 01:33:22,879
arithmetic on Akamai have you been in

1914
01:33:19,820 --> 01:33:27,170
coordination with the TMT SV working

1915
01:33:22,880 --> 01:33:29,030
groups working on APL PMT UD Trafford

1916
01:33:27,170 --> 01:33:30,740
ideograms it's addressing is trying to

1917
01:33:29,030 --> 01:33:32,360
dress in similar things it may make

1918
01:33:30,740 --> 01:33:34,429
sense to collaborate with them to figure

1919
01:33:32,360 --> 01:33:36,230
out are there some ways to make this

1920
01:33:34,430 --> 01:33:38,990
complimentary because there may also be

1921
01:33:36,230 --> 01:33:41,179
some ways to not have to set it on set

1922
01:33:38,990 --> 01:33:43,429
for the low MTU and all in all cases but

1923
01:33:41,180 --> 01:33:46,850
only in certain cases thank you

1924
01:33:43,430 --> 01:33:49,250
currently no but I need but there's

1925
01:33:46,850 --> 01:33:50,900
projects is ethnic among the pragmatic

1926
01:33:49,250 --> 01:33:54,230
Westside so yeah I do support the

1927
01:33:50,900 --> 01:33:58,129
document and as software developers we

1928
01:33:54,230 --> 01:34:00,830
intend to drop the maximum n2e dns

1929
01:33:58,130 --> 01:34:02,720
buffer size so effectively implementing

1930
01:34:00,830 --> 01:34:07,309
what you are recommending so yes go

1931
01:34:02,720 --> 01:34:09,110
ahead please Brian Dixon GoDaddy but

1932
01:34:07,310 --> 01:34:11,090
previously it a little bit of follow-on

1933
01:34:09,110 --> 01:34:14,360
research to the original fragmentation

1934
01:34:11,090 --> 01:34:18,500
poison draft it's much much worse than

1935
01:34:14,360 --> 01:34:20,660
that draft or that dark paper was if

1936
01:34:18,500 --> 01:34:21,380
anybody is really interested I can go

1937
01:34:20,660 --> 01:34:24,409
into more deep

1938
01:34:21,380 --> 01:34:26,810
he'll at some later point I'm definitely

1939
01:34:24,409 --> 01:34:29,599
in favor that definitely want to

1940
01:34:26,810 --> 01:34:32,870
recommend that the developers of

1941
01:34:29,600 --> 01:34:35,480
resolvers changed the default on their a

1942
01:34:32,870 --> 01:34:40,730
dns buffer size to get it down to a

1943
01:34:35,480 --> 01:34:45,739
reasonable level thanks Mike Andrews I

1944
01:34:40,730 --> 01:34:52,218
see you mentioned T seek I've also got a

1945
01:34:45,739 --> 01:34:58,699
draft chose submitted using a woman

1946
01:34:52,219 --> 01:35:02,810
teasing key which effectively allows the

1947
01:34:58,699 --> 01:35:07,150
DNS level to detect any fragmentation

1948
01:35:02,810 --> 01:35:09,679
reassembly a successful at the IP level

1949
01:35:07,150 --> 01:35:16,820
fragmentation reassembly attack and

1950
01:35:09,679 --> 01:35:23,120
reject such a response looking at the

1951
01:35:16,820 --> 01:35:28,809
Alexa top 1 million and looks like three

1952
01:35:23,120 --> 01:35:28,809
quarters of servers there could deploy a

1953
01:35:28,929 --> 01:35:36,889
woman-owned key today with just a

1954
01:35:32,719 --> 01:35:40,880
configuration update that's they all

1955
01:35:36,889 --> 01:35:46,060
that's about level of T that's level

1956
01:35:40,880 --> 01:35:54,790
where they that's the level of TC

1957
01:35:46,060 --> 01:35:57,590
deployment in that set of servers so I

1958
01:35:54,790 --> 01:36:02,090
think there are ways around this without

1959
01:35:57,590 --> 01:36:04,370
getting rid of fragmentation I realized

1960
01:36:02,090 --> 01:36:06,020
people don't people don't sometimes

1961
01:36:04,370 --> 01:36:11,300
don't feel like they need to solve the

1962
01:36:06,020 --> 01:36:16,600
pregnant ation problem but you end up

1963
01:36:11,300 --> 01:36:16,600
with other issues going to TCP to

1964
01:36:20,790 --> 01:36:32,080
just want the wing group to look a both

1965
01:36:25,800 --> 01:36:37,360
together please thank you mark from the

1966
01:36:32,080 --> 01:36:39,460
mic line I do here in support I was also

1967
01:36:37,360 --> 01:36:42,339
asked want to ask the working group to

1968
01:36:39,460 --> 01:36:47,680
look at the draft of supply and Britain

1969
01:36:42,340 --> 01:36:49,720
but mark and I think please give some

1970
01:36:47,680 --> 01:36:53,470
reply some comments feedback on the

1971
01:36:49,720 --> 01:36:55,660
mailing list and we will discuss it with

1972
01:36:53,470 --> 01:36:57,960
the chair and the author about a call

1973
01:36:55,660 --> 01:37:13,660
for adoption later on the mailing list

1974
01:36:57,960 --> 01:37:17,110
yep thank you there we go next present

1975
01:37:13,660 --> 01:37:30,970
that presenter John Woodward on the bill

1976
01:37:17,110 --> 01:37:34,509
I am morning John Woodworth here to talk

1977
01:37:30,970 --> 01:37:36,460
about the bulk of our again we've made a

1978
01:37:34,510 --> 01:37:40,120
few changes I've gotten a lot of good

1979
01:37:36,460 --> 01:37:49,540
feedback from the last the last time I

1980
01:37:40,120 --> 01:37:52,110
presented so those of you who are not

1981
01:37:49,540 --> 01:37:55,510
familiar with it it is basically a

1982
01:37:52,110 --> 01:37:58,839
compact or condensed representation that

1983
01:37:55,510 --> 01:38:04,210
can expand similar to a dollar generate

1984
01:37:58,840 --> 01:38:05,770
at a meta level and it can also be

1985
01:38:04,210 --> 01:38:07,570
transferred between primaries and

1986
01:38:05,770 --> 01:38:11,350
secondaries in a condensed form so a

1987
01:38:07,570 --> 01:38:13,860
single record could expand into millions

1988
01:38:11,350 --> 01:38:13,860
of Records

1989
01:38:14,860 --> 01:38:21,400
it offers standardizations around some

1990
01:38:20,260 --> 01:38:24,480
of the implementations that are already

1991
01:38:21,400 --> 01:38:28,030
being done certain vendors have similar

1992
01:38:24,480 --> 01:38:31,209
features and technology this would just

1993
01:38:28,030 --> 01:38:34,950
offer a standard way to exchange those

1994
01:38:31,210 --> 01:38:34,950
records between the multiple vendors

1995
01:38:35,120 --> 01:38:43,720
and I've also in the field I've seen

1996
01:38:39,640 --> 01:38:47,900
record or zone files that have expanded

1997
01:38:43,720 --> 01:38:52,880
well above 50 even above 150 megabytes

1998
01:38:47,900 --> 01:38:56,170
which don't really transfer well if they

1999
01:38:52,880 --> 01:38:58,130
do a lot of timeouts a lot of errors

2000
01:38:56,170 --> 01:39:01,430
sometimes they'll have to be manually

2001
01:38:58,130 --> 01:39:08,240
transfer etc or broken into smaller zone

2002
01:39:01,430 --> 01:39:11,000
files the new draft what I've done is

2003
01:39:08,240 --> 01:39:14,210
I've broken it into two drafts we had

2004
01:39:11,000 --> 01:39:16,670
NPN which helps with the some of the

2005
01:39:14,210 --> 01:39:21,770
offline signing capabilities in a

2006
01:39:16,670 --> 01:39:26,210
pattern generated record way we also

2007
01:39:21,770 --> 01:39:33,650
have a couple I P v6 examples with the

2008
01:39:26,210 --> 01:39:37,270
new the new formatting yes and I've

2009
01:39:33,650 --> 01:39:42,589
broken up the NPN into a second draft

2010
01:39:37,270 --> 01:39:47,990
thank you and we are still trying to get

2011
01:39:42,590 --> 01:39:51,340
this adopted by the working group so any

2012
01:39:47,990 --> 01:39:55,969
questions comments

2013
01:39:51,340 --> 01:40:00,140
Jeff Houston peteus on it how do you

2014
01:39:55,970 --> 01:40:04,100
sign it you either would use the NPN

2015
01:40:00,140 --> 01:40:06,740
which would modify the signature and the

2016
01:40:04,100 --> 01:40:10,840
validation mechanism there's another

2017
01:40:06,740 --> 01:40:10,840
record or you would do online signing

2018
01:40:17,459 --> 01:40:26,858
other comments please go after Warren so

2019
01:40:24,639 --> 01:40:29,439
Warren Kumari Google I mean I've got a

2020
01:40:26,859 --> 01:40:31,179
bunch of v6 base it sure would be nice

2021
01:40:29,439 --> 01:40:33,279
to go to provide reverse DNS for it

2022
01:40:31,179 --> 01:40:35,019
there's no other way I can see to do

2023
01:40:33,279 --> 01:40:40,859
that like realistically

2024
01:40:35,019 --> 01:40:40,859
so right thank you

2025
01:40:50,049 --> 01:40:55,089
all our yes I read this draft I like it

2026
01:40:52,659 --> 01:40:57,188
I don't like the name of the record tag

2027
01:40:55,089 --> 01:40:59,169
balk I think it should be renamed or

2028
01:40:57,189 --> 01:41:02,139
something like that and the draft could

2029
01:40:59,169 --> 01:41:03,999
also use some more examples off at the

2030
01:41:02,139 --> 01:41:06,369
input and the outputs to the expressions

2031
01:41:03,999 --> 01:41:08,739
you have there a little bit convoluted

2032
01:41:06,369 --> 01:41:14,669
that some of us are afraid of regular

2033
01:41:08,739 --> 01:41:18,009
expressions thank you

2034
01:41:14,669 --> 01:41:21,909
yeah I'm open I think all the authors

2035
01:41:18,010 --> 01:41:25,499
are open to renaming it as well and all

2036
01:41:21,909 --> 01:41:25,499
the life signing is not the problem jobs

2037
01:41:29,309 --> 01:41:34,599
thank you thank you yeah we would like

2038
01:41:32,889 --> 01:41:39,549
to see a little bit more discussion also

2039
01:41:34,599 --> 01:41:48,459
on the mailing list before we go see I

2040
01:41:39,549 --> 01:41:51,029
think thank you very much so permitting

2041
01:41:48,459 --> 01:41:57,239
time we had presentation by whittles

2042
01:41:51,029 --> 01:41:57,239
so and we have time well thank you all

2043
01:41:58,409 --> 01:42:02,108
there we go okay so this should be a

2044
01:42:01,569 --> 01:42:07,899
short one

2045
01:42:02,109 --> 01:42:10,209
hi I'm Vito from I see the idea is DNS

2046
01:42:07,899 --> 01:42:12,429
resource record for transferring covert

2047
01:42:10,209 --> 01:42:16,119
information from primary to secondary

2048
01:42:12,429 --> 01:42:17,769
and don't ask me about the covert we've

2049
01:42:16,119 --> 01:42:21,129
had this discussion about how to name it

2050
01:42:17,769 --> 01:42:24,010
so the idea is to transfer something

2051
01:42:21,129 --> 01:42:27,519
that should not be queried for in

2052
01:42:24,010 --> 01:42:29,360
bandwidth the zone the idea is for it to

2053
01:42:27,519 --> 01:42:31,540
be generic so that we can

2054
01:42:29,360 --> 01:42:33,830
spend it with another our types without

2055
01:42:31,540 --> 01:42:36,680
changing the behavior of the server and

2056
01:42:33,830 --> 01:42:40,730
the examples include note RR which we

2057
01:42:36,680 --> 01:42:44,870
have a draft for this Evan is here as an

2058
01:42:40,730 --> 01:42:47,299
author DHCP time out from Tim for

2059
01:42:44,870 --> 01:42:50,300
example an SEC five keys when if an SEC

2060
01:42:47,300 --> 01:42:52,490
five is adopted and even zone signing

2061
01:42:50,300 --> 01:42:54,650
keys for inline sign Inc on the

2062
01:42:52,490 --> 01:42:57,260
secondary although that's that's just an

2063
01:42:54,650 --> 01:42:59,809
example so don't be scared because

2064
01:42:57,260 --> 01:43:01,940
that's the most of the discussion on the

2065
01:42:59,810 --> 01:43:05,020
list was about examples and that's just

2066
01:43:01,940 --> 01:43:08,710
an example it's a generic for anything

2067
01:43:05,020 --> 01:43:11,060
the big I think the biggest issue was

2068
01:43:08,710 --> 01:43:13,030
that was on the list

2069
01:43:11,060 --> 01:43:15,830
and in other discussions was about

2070
01:43:13,030 --> 01:43:18,170
encryption and the security of transfer

2071
01:43:15,830 --> 01:43:21,830
because we are putting something that

2072
01:43:18,170 --> 01:43:24,350
should be hidden and then we we don't

2073
01:43:21,830 --> 01:43:26,570
encrypt it we don't mandate encryption

2074
01:43:24,350 --> 01:43:28,130
so for example forensic five the

2075
01:43:26,570 --> 01:43:31,099
encryption is not either because if you

2076
01:43:28,130 --> 01:43:34,070
have the zone then the an SEC five key

2077
01:43:31,100 --> 01:43:36,650
is not needed for it is not necessary

2078
01:43:34,070 --> 01:43:40,009
for you it has no value but for zone

2079
01:43:36,650 --> 01:43:42,559
signing key it's required so the

2080
01:43:40,010 --> 01:43:45,710
question becomes should we mandate a

2081
01:43:42,560 --> 01:43:48,920
form of security or a specific form of

2082
01:43:45,710 --> 01:43:52,400
security like etc over TLS which will be

2083
01:43:48,920 --> 01:44:01,220
discussed I believe tomorrow on on

2084
01:43:52,400 --> 01:44:03,290
deprive drive deep I fast so that's

2085
01:44:01,220 --> 01:44:05,350
those are the questions for the draft

2086
01:44:03,290 --> 01:44:10,040
and the details

2087
01:44:05,350 --> 01:44:12,440
well we there is a range in our type

2088
01:44:10,040 --> 01:44:16,670
numbers that's currently reserved we

2089
01:44:12,440 --> 01:44:18,950
want to cut a piece of it for for this

2090
01:44:16,670 --> 01:44:21,650
kind of Records the question also

2091
01:44:18,950 --> 01:44:25,700
becomes should there be a private wrench

2092
01:44:21,650 --> 01:44:29,420
for this kind of Records cut from also

2093
01:44:25,700 --> 01:44:32,389
from the reserved archives there is a

2094
01:44:29,420 --> 01:44:34,580
mechanism that this allows transfer to

2095
01:44:32,390 --> 01:44:37,130
secondaries if they don't understand the

2096
01:44:34,580 --> 01:44:39,380
covert semantics so if there is a second

2097
01:44:37,130 --> 01:44:41,840
secondary that does not understand

2098
01:44:39,380 --> 01:44:42,920
covert records it won't send the idns

2099
01:44:41,840 --> 01:44:45,710
option

2100
01:44:42,920 --> 01:44:48,020
that I understand covert records and it

2101
01:44:45,710 --> 01:44:51,260
won't receive the transfer at all so

2102
01:44:48,020 --> 01:44:54,170
that it won't serve it also the server

2103
01:44:51,260 --> 01:44:57,230
must not serve covered records without

2104
01:44:54,170 --> 01:44:59,150
an explicit ACL allowing it that's for

2105
01:44:57,230 --> 01:45:02,330
example for a note because a note is a

2106
01:44:59,150 --> 01:45:06,099
record that someone an operator might

2107
01:45:02,330 --> 01:45:10,070
want to ask for but it requires an ACL

2108
01:45:06,100 --> 01:45:11,690
the other thing that's in not in current

2109
01:45:10,070 --> 01:45:14,540
version of the draft because I thought

2110
01:45:11,690 --> 01:45:17,870
about it on Sunday is that we should not

2111
01:45:14,540 --> 01:45:20,870
we should for generic types generic

2112
01:45:17,870 --> 01:45:23,360
binary types we should change name so

2113
01:45:20,870 --> 01:45:25,519
that the zone would not load if it has

2114
01:45:23,360 --> 01:45:29,139
covert records on a server that does not

2115
01:45:25,520 --> 01:45:32,030
understand covert and there is an usage

2116
01:45:29,140 --> 01:45:35,330
we published those two drafts in

2117
01:45:32,030 --> 01:45:38,660
simultaneously there is a note or our

2118
01:45:35,330 --> 01:45:41,179
definition which is basically a comment

2119
01:45:38,660 --> 01:45:45,380
in zone that can be transferred with the

2120
01:45:41,179 --> 01:45:49,250
zone because 1034 has own comments but

2121
01:45:45,380 --> 01:45:50,949
axfr came a bit later and those comments

2122
01:45:49,250 --> 01:45:53,540
are not transferred with the zone and

2123
01:45:50,949 --> 01:45:56,330
sometimes it might be useful for

2124
01:45:53,540 --> 01:45:58,910
operators so for example mark that this

2125
01:45:56,330 --> 01:46:01,309
IP was given to this person and these

2126
01:45:58,910 --> 01:46:05,030
you know it's just a comment but it it

2127
01:46:01,310 --> 01:46:19,610
stays on on the secondary so yeah that's

2128
01:46:05,030 --> 01:46:23,719
it and comments feedback it's useful but

2129
01:46:19,610 --> 01:46:26,630
if HX is ethnic it smells like database

2130
01:46:23,719 --> 01:46:28,850
and I SES on top of it and I have a bad

2131
01:46:26,630 --> 01:46:31,760
feeling that eventually someone will

2132
01:46:28,850 --> 01:46:34,850
come and ask hey I want to have only

2133
01:46:31,760 --> 01:46:36,890
this group of users allowed to query for

2134
01:46:34,850 --> 01:46:38,870
this type and that group of users

2135
01:46:36,890 --> 01:46:41,540
allowed to create that other type and

2136
01:46:38,870 --> 01:46:43,580
stuff like that and then you will have

2137
01:46:41,540 --> 01:46:45,980
to invent mechanism how to transfer the

2138
01:46:43,580 --> 01:46:49,160
ACLs and so on and so on so I think it's

2139
01:46:45,980 --> 01:46:50,209
kind of worms and it don't belong to DNS

2140
01:46:49,160 --> 01:46:55,809
please don't

2141
01:46:50,210 --> 01:46:58,119
I Steve I guess I'd also

2142
01:46:55,809 --> 01:47:00,519
wonder how to think through the cases if

2143
01:46:58,119 --> 01:47:03,239
you're transferring is LSK over TLS that

2144
01:47:00,519 --> 01:47:05,260
depends on PA i'll it depends on DNS

2145
01:47:03,239 --> 01:47:08,169
things might go wrong there somewhere

2146
01:47:05,260 --> 01:47:14,019
right like I said that's that's just an

2147
01:47:08,170 --> 01:47:16,659
example and now I well I didn't want it

2148
01:47:14,019 --> 01:47:20,369
to put examples in the draft I put and

2149
01:47:16,659 --> 01:47:21,969
now you know that's what's happening

2150
01:47:20,369 --> 01:47:24,369
Jerry mandersohn

2151
01:47:21,969 --> 01:47:27,840
from a principle point of view just

2152
01:47:24,369 --> 01:47:27,839
because you can doesn't mean you should

2153
01:47:28,499 --> 01:47:33,789
so all of this is orchestration

2154
01:47:31,630 --> 01:47:38,340
mechanisms and orchestration information

2155
01:47:33,789 --> 01:47:38,340
I wouldn't want to see that in DNS or

2156
01:47:43,469 --> 01:47:49,300
enquiry Google but no hats so the

2157
01:47:47,050 --> 01:47:51,309
special range thing and taking like a

2158
01:47:49,300 --> 01:47:53,889
bunch and setting aside that feels kinda

2159
01:47:51,309 --> 01:47:55,179
icky to me all right I'm not speaking

2160
01:47:53,889 --> 01:47:57,280
about the rest of it just a you know

2161
01:47:55,179 --> 01:47:59,440
gonna take it well the idea was you know

2162
01:47:57,280 --> 01:48:01,809
if you want to put if you want to have

2163
01:47:59,440 --> 01:48:03,789
something that's covert and with each

2164
01:48:01,809 --> 01:48:06,010
draft you would have to specify that

2165
01:48:03,789 --> 01:48:08,829
this should not be queried for so the

2166
01:48:06,010 --> 01:48:11,469
idea is to have a range in which you can

2167
01:48:08,829 --> 01:48:13,929
put specific resource records like note

2168
01:48:11,469 --> 01:48:17,289
like DHCP timeout like anything else

2169
01:48:13,929 --> 01:48:20,530
that you know servers with would

2170
01:48:17,289 --> 01:48:22,389
understand that they should not allow

2171
01:48:20,530 --> 01:48:25,719
queries for me to take you could have a

2172
01:48:22,389 --> 01:48:27,760
type for covert and then stuff under

2173
01:48:25,719 --> 01:48:35,380
that but that's subtyping yeah that's

2174
01:48:27,760 --> 01:48:37,239
not allowed the comment that this sort

2175
01:48:35,380 --> 01:48:38,590
of thing doesn't belong on the DNS and I

2176
01:48:37,239 --> 01:48:40,178
just wanted to say that this sort of

2177
01:48:38,590 --> 01:48:42,849
thing already is in the DNS quite often

2178
01:48:40,179 --> 01:48:46,420
it's just not in the DNS in a way that

2179
01:48:42,849 --> 01:48:51,729
is resistant to open normal queries from

2180
01:48:46,420 --> 01:48:54,519
just everybody and I have heard a number

2181
01:48:51,729 --> 01:48:56,619
of people who are operators request a

2182
01:48:54,519 --> 01:48:58,510
way of putting something in the DNS that

2183
01:48:56,619 --> 01:49:01,420
will automatically be replicated to

2184
01:48:58,510 --> 01:49:03,309
secondaries that isn't easily queryable

2185
01:49:01,420 --> 01:49:05,530
and there is already data that is used

2186
01:49:03,309 --> 01:49:07,510
in DNS that is not easily queryable you

2187
01:49:05,530 --> 01:49:09,459
can't look up in SEC 3 record you

2188
01:49:07,510 --> 01:49:11,229
receive it if you look up something that

2189
01:49:09,459 --> 01:49:14,679
doesn't exist but you can't specifically

2190
01:49:11,229 --> 01:49:16,959
query for it policy zones are often

2191
01:49:14,679 --> 01:49:18,849
often have queries disallowed that's

2192
01:49:16,959 --> 01:49:20,438
just metadata for the operation of the

2193
01:49:18,849 --> 01:49:21,880
server but it can still be transferred

2194
01:49:20,439 --> 01:49:24,699
over a channel from a primary to a

2195
01:49:21,880 --> 01:49:26,639
secondary what this is is a mechanism of

2196
01:49:24,699 --> 01:49:30,070
having in-band data in the DNS that

2197
01:49:26,639 --> 01:49:31,689
resists ordinary queries and I think it

2198
01:49:30,070 --> 01:49:33,759
could be useful in a number of use cases

2199
01:49:31,689 --> 01:49:36,219
and some of those use cases have already

2200
01:49:33,760 --> 01:49:41,739
been done in a less convenient and less

2201
01:49:36,219 --> 01:49:43,739
secure way but there's projects easily I

2202
01:49:41,739 --> 01:49:47,768
think that evan has a point basically

2203
01:49:43,739 --> 01:49:49,089
this is inventing tens zone transfer

2204
01:49:47,769 --> 01:49:51,039
protocol which is intentionally

2205
01:49:49,090 --> 01:49:53,050
incompatible video all one using the

2206
01:49:51,039 --> 01:49:55,509
ideon assumption to prevent the old

2207
01:49:53,050 --> 01:49:57,729
slaves from getting the data right so I

2208
01:49:55,510 --> 01:50:00,729
think it's opportunity to invent much

2209
01:49:57,729 --> 01:50:02,949
better than through protocol which

2210
01:50:00,729 --> 01:50:06,219
allows like more flexibility and don't

2211
01:50:02,949 --> 01:50:08,888
necessarily stops all the non DNS data

2212
01:50:06,219 --> 01:50:10,840
in its own file right I mean this is the

2213
01:50:08,889 --> 01:50:13,059
perfect opportunity to do that I think

2214
01:50:10,840 --> 01:50:17,280
and do news on transfer protocols

2215
01:50:13,059 --> 01:50:17,280
because the old one is quite horrible so

2216
01:50:19,260 --> 01:50:28,689
Wes heard of here is a we have

2217
01:50:25,709 --> 01:50:35,559
traditionally so to two points I guess

2218
01:50:28,689 --> 01:50:37,630
one DNS is not designed to be a a entity

2219
01:50:35,559 --> 01:50:38,889
to entity type mechanism so we have

2220
01:50:37,630 --> 01:50:40,630
transfer abilities and things like that

2221
01:50:38,889 --> 01:50:43,150
who we expect caching we expect things

2222
01:50:40,630 --> 01:50:45,489
to be transferred beyond that we have

2223
01:50:43,150 --> 01:50:48,638
signatures that exist over portions of

2224
01:50:45,489 --> 01:50:50,888
it we have a draft that you know it's

2225
01:50:48,639 --> 01:50:53,050
signing the whole thing so you end up in

2226
01:50:50,889 --> 01:50:56,199
these cases where if you have partial

2227
01:50:53,050 --> 01:50:57,729
zones where some entities have part of

2228
01:50:56,199 --> 01:51:00,400
the zone and some entities have all of

2229
01:50:57,729 --> 01:51:03,189
the zone you'll end up will in this case

2230
01:51:00,400 --> 01:51:07,808
all entities that have the zone have the

2231
01:51:03,189 --> 01:51:09,010
zone if the covert records are not

2232
01:51:07,809 --> 01:51:10,510
allowed to be transferred then that's

2233
01:51:09,010 --> 01:51:15,699
not going to be the case then they won't

2234
01:51:10,510 --> 01:51:16,840
have the zone so right they won't have

2235
01:51:15,699 --> 01:51:19,659
the whole zone which means they can't

2236
01:51:16,840 --> 01:51:22,420
validate records that have no they they

2237
01:51:19,659 --> 01:51:23,018
won't have the zone if if there is a

2238
01:51:22,420 --> 01:51:25,599
covert

2239
01:51:23,019 --> 01:51:27,789
cortisone cannot be transferred to a

2240
01:51:25,599 --> 01:51:29,649
secondary that does not support covert

2241
01:51:27,789 --> 01:51:33,039
right so here you're prohibiting

2242
01:51:29,649 --> 01:51:35,469
transfers yes okay so second point is

2243
01:51:33,039 --> 01:51:39,759
that in a security context we almost

2244
01:51:35,469 --> 01:51:42,549
always insist on private information to

2245
01:51:39,760 --> 01:51:45,279
be transferred out of band not in the

2246
01:51:42,549 --> 01:51:49,599
original protocol so it's unclear to me

2247
01:51:45,279 --> 01:51:51,699
what the why it is needed to be in band

2248
01:51:49,599 --> 01:51:54,339
in DNS protocol as opposed to a

2249
01:51:51,699 --> 01:51:55,898
supplemental bit of information like how

2250
01:51:54,339 --> 01:52:02,109
we currently transfer security related

2251
01:51:55,899 --> 01:52:05,249
information okay Jim reads I'm sorry to

2252
01:52:02,109 --> 01:52:08,079
say I think this is a very bad idea

2253
01:52:05,249 --> 01:52:11,349
well first of all it smells what

2254
01:52:08,079 --> 01:52:13,539
security by obscurity and then we create

2255
01:52:11,349 --> 01:52:15,609
some kind of special secret sauce from

2256
01:52:13,539 --> 01:52:17,289
special resource record tapes have got a

2257
01:52:15,609 --> 01:52:19,269
special significant meaning and that

2258
01:52:17,289 --> 01:52:20,829
will then determine the behavior of the

2259
01:52:19,269 --> 01:52:23,019
server and how it then response to

2260
01:52:20,829 --> 01:52:24,579
queries I think that's a very bad idea

2261
01:52:23,019 --> 01:52:26,319
and a start of a very very slippery

2262
01:52:24,579 --> 01:52:28,808
slope if we're going to set aside a verb

2263
01:52:26,319 --> 01:52:30,339
types and see these are special

2264
01:52:28,809 --> 01:52:33,489
significance and the kumbhak build by

2265
01:52:30,339 --> 01:52:35,439
certain clients or sell and serve those

2266
01:52:33,489 --> 01:52:37,268
under certain circumstances I think

2267
01:52:35,439 --> 01:52:39,489
that's a very very bad thing to do I

2268
01:52:37,269 --> 01:52:41,579
think it will keep very many difficult

2269
01:52:39,489 --> 01:52:43,898
and proper able operability and

2270
01:52:41,579 --> 01:52:46,449
operational problems if the stuff

2271
01:52:43,899 --> 01:52:48,489
escapes into the wild now yes the maybe

2272
01:52:46,449 --> 01:52:50,318
I need for some candies can afford cost

2273
01:52:48,489 --> 01:52:52,419
not as much as covert information but as

2274
01:52:50,319 --> 01:52:54,459
I find information like that that make

2275
01:52:52,419 --> 01:52:56,829
my better description over here but if

2276
01:52:54,459 --> 01:53:04,989
that information is sensitive don't put

2277
01:52:56,829 --> 01:53:07,389
in the DNS the DNS is public partly

2278
01:53:04,989 --> 01:53:10,598
month at node west beat me to it

2279
01:53:07,389 --> 01:53:12,760
I agree that I think this this type of

2280
01:53:10,599 --> 01:53:15,309
information doesn't belong in the zone I

2281
01:53:12,760 --> 01:53:17,829
I can see a need to transfer such

2282
01:53:15,309 --> 01:53:20,469
information between two two servers but

2283
01:53:17,829 --> 01:53:21,099
I think to do it in zone is probably not

2284
01:53:20,469 --> 01:53:23,529
the best approach

2285
01:53:21,099 --> 01:53:26,499
I'm listening to the comments here I

2286
01:53:23,529 --> 01:53:29,649
think that having some kind of parallel

2287
01:53:26,499 --> 01:53:33,039
transferring structure may be in invent

2288
01:53:29,649 --> 01:53:35,840
a new transfer type instead of normal

2289
01:53:33,039 --> 01:53:37,670
sometimes grow incremental song traffic

2290
01:53:35,840 --> 01:53:43,120
that that transfers parallel information

2291
01:53:37,670 --> 01:53:45,400
or we already have the the NSC control

2292
01:53:43,120 --> 01:53:49,130
protocol which is another method of

2293
01:53:45,400 --> 01:53:50,570
transferring data but I don't see it

2294
01:53:49,130 --> 01:53:59,990
really it doesn't feel right to have it

2295
01:53:50,570 --> 01:54:02,360
inside so Brian Hamer memory are relying

2296
01:53:59,990 --> 01:54:05,450
a question from jabber could this be

2297
01:54:02,360 --> 01:54:08,240
done with catalogs ohms instead well

2298
01:54:05,450 --> 01:54:11,480
catalogs owns convey information about a

2299
01:54:08,240 --> 01:54:14,000
zone as a whole and in this case we can

2300
01:54:11,480 --> 01:54:16,429
for example for notes record we can have

2301
01:54:14,000 --> 01:54:18,470
a record in the zone guess what

2302
01:54:16,430 --> 01:54:23,420
we can have a record in the zone so for

2303
01:54:18,470 --> 01:54:26,620
example mac-10 dot is C dot org and the

2304
01:54:23,420 --> 01:54:32,210
note stating that mac-10 I see that org

2305
01:54:26,620 --> 01:54:36,019
is Evans computer which catalog zones

2306
01:54:32,210 --> 01:54:37,850
are a concept well it's it would be

2307
01:54:36,020 --> 01:54:40,220
possible to for example transfer zone

2308
01:54:37,850 --> 01:54:43,940
signing keys with catalog zones because

2309
01:54:40,220 --> 01:54:46,760
those are those are values that are

2310
01:54:43,940 --> 01:54:49,160
attached to a zone but in this case we

2311
01:54:46,760 --> 01:54:52,610
want to have something that's in the

2312
01:54:49,160 --> 01:54:54,620
same key our key as the zone so if we

2313
01:54:52,610 --> 01:54:57,320
can have a record in the zone and a note

2314
01:54:54,620 --> 01:54:59,720
for this and a note for this specific

2315
01:54:57,320 --> 01:55:03,860
record so yeah in this case for example

2316
01:54:59,720 --> 01:55:05,900
for note R or DHCP timeout R

2317
01:55:03,860 --> 01:55:11,330
it's not possible to do it with catalog

2318
01:55:05,900 --> 01:55:14,509
zones Paul Hoffman um just since I'm

2319
01:55:11,330 --> 01:55:16,900
busily typing the minutes I think that

2320
01:55:14,510 --> 01:55:19,580
Peter said something that many people

2321
01:55:16,900 --> 01:55:21,889
agreed with afterwards but didn't say

2322
01:55:19,580 --> 01:55:23,420
they agreed with which is this is an

2323
01:55:21,890 --> 01:55:25,550
opportunity to create a new zone

2324
01:55:23,420 --> 01:55:28,190
transfer program if people don't like

2325
01:55:25,550 --> 01:55:30,080
doing it this way which is seem like a

2326
01:55:28,190 --> 01:55:31,820
bunch of people didn't but they agree

2327
01:55:30,080 --> 01:55:33,590
that there is a use case and might even

2328
01:55:31,820 --> 01:55:36,679
have extra use cases which it seemed

2329
01:55:33,590 --> 01:55:38,090
like a bunch of people did a different

2330
01:55:36,680 --> 01:55:40,280
zone transfer program it could be

2331
01:55:38,090 --> 01:55:43,400
parallel that only does not so we don't

2332
01:55:40,280 --> 01:55:45,290
we aren't wedded to axfr and IX FR

2333
01:55:43,400 --> 01:55:47,150
forever if we can come up with a better

2334
01:55:45,290 --> 01:55:49,369
way to do it and i think i've seen

2335
01:55:47,150 --> 01:55:51,079
better ways to do this written on

2336
01:55:49,369 --> 01:55:53,509
eight boards for the last ten or fifteen

2337
01:55:51,079 --> 01:55:56,659
years so maybe this is the opportunity

2338
01:55:53,510 --> 01:55:58,760
to do that at which point in that new

2339
01:55:56,659 --> 01:56:01,429
transfer it's not just zone transfer

2340
01:55:58,760 --> 01:56:03,169
zone information transfer or you know

2341
01:56:01,429 --> 01:56:08,599
zone configuration transfer as well

2342
01:56:03,169 --> 01:56:10,459
could include this okay thank you thank

2343
01:56:08,599 --> 01:56:13,729
you thank you for all your contributions

2344
01:56:10,459 --> 01:56:18,919
and comments on the microphone any

2345
01:56:13,729 --> 01:56:24,919
closing remarks well please fill in the

2346
01:56:18,919 --> 01:56:31,459
blue sheet thank you all and see you

2347
01:56:24,919 --> 01:56:34,159
back in Singapore thank you thanks for

2348
01:56:31,459 --> 01:56:38,619
the the note-taker all and described

2349
01:56:34,159 --> 01:56:38,619
right so please fill in the blue sheets

2350
01:56:48,219 --> 01:56:52,059
yeah I could be five minutes

