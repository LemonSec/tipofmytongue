1
00:00:35,460 --> 00:00:38,490
[Music]

2
00:01:12,830 --> 00:01:16,048
[Music]

3
00:01:16,860 --> 00:01:24,299
okay alone people stem the clock

4
00:01:27,500 --> 00:01:30,609
[Music]

5
00:01:41,850 --> 00:01:50,229
so it's so it's about time for us to get

6
00:01:45,340 --> 00:01:52,030
started if we can work our way down to

7
00:01:50,229 --> 00:01:53,649
one boss in the room at the time at a

8
00:01:52,030 --> 00:01:56,560
time it will probably be helpful to the

9
00:01:53,649 --> 00:01:59,159
area directors I am

10
00:01:56,560 --> 00:02:03,759
Spencer Dawkins and this is Oh waitron

11
00:01:59,159 --> 00:02:05,860
we are your Pepe both chairs for the

12
00:02:03,759 --> 00:02:07,509
gluts pop if you're in the loops pop

13
00:02:05,860 --> 00:02:11,079
you're in the right place and if you're

14
00:02:07,509 --> 00:02:13,230
needing to be somewhere else we'll miss

15
00:02:11,079 --> 00:02:13,230
you

16
00:02:14,410 --> 00:02:20,200
this is a Bob at the ITF so it is

17
00:02:18,099 --> 00:02:24,819
covered by the note well which many of

18
00:02:20,200 --> 00:02:27,190
us have seen and references PCBs which

19
00:02:24,819 --> 00:02:32,518
all of us should have at least looked at

20
00:02:27,190 --> 00:02:35,400
once this is our agenda for the day and

21
00:02:32,519 --> 00:02:41,579
wanted to give a brief pause to do

22
00:02:35,400 --> 00:02:41,579
agenda bashing if anybody has thoughts

23
00:02:44,519 --> 00:02:50,139
so good excellent

24
00:02:47,200 --> 00:02:51,819
so we will go with this agenda please

25
00:02:50,139 --> 00:02:53,620
remember that this stuff is not working

26
00:02:51,819 --> 00:02:59,768
group forming which is means that we're

27
00:02:53,620 --> 00:03:02,410
thinking I wanted to do a little scope

28
00:02:59,769 --> 00:03:04,959
scoping for our discussions we're not

29
00:03:02,410 --> 00:03:06,849
replacing the internet quick or TCP we

30
00:03:04,959 --> 00:03:08,739
are talking about optimizations where

31
00:03:06,849 --> 00:03:10,899
things work but don't always work well

32
00:03:08,739 --> 00:03:14,109
we're talking about optimizations

33
00:03:10,900 --> 00:03:16,599
between network elements not involving

34
00:03:14,109 --> 00:03:18,579
hosts and your network might not need

35
00:03:16,599 --> 00:03:21,940
loops but somebody else's network might

36
00:03:18,579 --> 00:03:25,750
I think the first law of optimization is

37
00:03:21,940 --> 00:03:27,269
first do no harm and so that's one of

38
00:03:25,750 --> 00:03:31,090
the things I'd like for people to be

39
00:03:27,269 --> 00:03:32,790
watching for in our path we're talking

40
00:03:31,090 --> 00:03:36,250
about a transport independent

41
00:03:32,790 --> 00:03:39,060
optimization we are not changing the

42
00:03:36,250 --> 00:03:42,430
indian transport protocol payload and

43
00:03:39,060 --> 00:03:44,129
our goal for this off is that we agree

44
00:03:42,430 --> 00:03:47,609
on what happens

45
00:03:44,129 --> 00:03:50,790
so there's a lot of things we could talk

46
00:03:47,609 --> 00:03:52,980
about for two hours but I would like to

47
00:03:50,790 --> 00:03:55,828
direct your attention to helping us find

48
00:03:52,980 --> 00:03:58,980
out what needs to happen next our face

49
00:03:55,829 --> 00:04:01,109
to face time is precious this is not a

50
00:03:58,980 --> 00:04:03,450
work group forming both because for my

51
00:04:01,109 --> 00:04:05,510
other reasons the proponents were

52
00:04:03,450 --> 00:04:07,439
meeting for the last day and a half and

53
00:04:05,510 --> 00:04:09,629
they learn well they were learning a lot

54
00:04:07,439 --> 00:04:12,930
from each other what I think this means

55
00:04:09,629 --> 00:04:15,629
is that people are different people are

56
00:04:12,930 --> 00:04:18,978
working in the same space but since

57
00:04:15,629 --> 00:04:21,149
there's no IETF activity yet they're not

58
00:04:18,978 --> 00:04:22,740
doing things the same way and there

59
00:04:21,149 --> 00:04:24,539
wouldn't be you know anything they

60
00:04:22,740 --> 00:04:27,780
produced would not be produced providing

61
00:04:24,539 --> 00:04:29,699
the same services so it sounds to me

62
00:04:27,780 --> 00:04:33,719
like kind of a opportunity for us to

63
00:04:29,699 --> 00:04:35,759
avoid our experience with gnats where we

64
00:04:33,720 --> 00:04:39,360
said this is a bad idea but people did

65
00:04:35,759 --> 00:04:43,110
it anyway and they didn't do it here for

66
00:04:39,360 --> 00:04:45,660
the longest time people come to mini

67
00:04:43,110 --> 00:04:46,889
buffs debuffs for many reasons note that

68
00:04:45,660 --> 00:04:50,400
it's possible to watch a train wreck

69
00:04:46,889 --> 00:04:51,750
while looking down at the Train we're

70
00:04:50,400 --> 00:04:54,260
not going to ask if you came to see a

71
00:04:51,750 --> 00:04:58,050
train wreck but we are going to ask ya

72
00:04:54,260 --> 00:04:59,849
who consider yourself and this is show

73
00:04:58,050 --> 00:05:07,250
of hands kind of thing primarily a

74
00:04:59,849 --> 00:05:11,969
transport person more than anything else

75
00:05:07,250 --> 00:05:14,759
okay so about the third of the room you

76
00:05:11,970 --> 00:05:17,150
think cool so consider yourself

77
00:05:14,759 --> 00:05:23,940
primarily an Internet application person

78
00:05:17,150 --> 00:05:26,669
or Internet encapsulation person that's

79
00:05:23,940 --> 00:05:29,630
almost as many people as transport so we

80
00:05:26,669 --> 00:05:29,630
have the right co-chair

81
00:05:30,449 --> 00:05:36,870
application layer it's a smaller number

82
00:05:35,280 --> 00:05:44,669
but thank you for being here primarily

83
00:05:36,870 --> 00:05:47,130
operations we have we have we have we

84
00:05:44,669 --> 00:05:49,500
have to we have to we have to excellent

85
00:05:47,130 --> 00:05:52,130
cool this is double the number of the

86
00:05:49,500 --> 00:05:52,130
average profit

87
00:05:53,530 --> 00:06:02,888
primarily a measurement person yes

88
00:05:58,150 --> 00:06:04,719
that's okay yeah so at least like at

89
00:06:02,889 --> 00:06:07,990
least like four or five people in here

90
00:06:04,720 --> 00:06:13,360
without expertise primarily a security

91
00:06:07,990 --> 00:06:15,669
person we're seeing one hand two heads

92
00:06:13,360 --> 00:06:18,880
and I'm pretty sure that they're all at

93
00:06:15,669 --> 00:06:23,830
the quick thing at a in our W that was a

94
00:06:18,880 --> 00:06:28,270
joke who's read the problems

95
00:06:23,830 --> 00:06:32,109
opportunities draft Wow this is where do

96
00:06:28,270 --> 00:06:34,090
you say a third of the room cool and who

97
00:06:32,110 --> 00:06:40,180
is working on a product that does local

98
00:06:34,090 --> 00:06:43,989
transport optimizations I'm countin

99
00:06:40,180 --> 00:06:48,460
eight hands ish yeah you know like more

100
00:06:43,990 --> 00:06:51,550
like ten yeah okay so maybe maybe this

101
00:06:48,460 --> 00:06:53,680
is not a proposal from one percent of

102
00:06:51,550 --> 00:06:56,620
group sorry Aaron fogg mkhaya are you

103
00:06:53,680 --> 00:06:58,870
product or a system I mean some people

104
00:06:56,620 --> 00:07:01,060
are not building trucks I don't

105
00:06:58,870 --> 00:07:09,759
understand the intention of the question

106
00:07:01,060 --> 00:07:12,789
so know that I don't understand yeah yes

107
00:07:09,759 --> 00:07:17,080
yes yes thank you for thank you for

108
00:07:12,789 --> 00:07:19,719
clarifying questions hi Cory hi Spencer

109
00:07:17,080 --> 00:07:23,080
I'm taking notes do you want to say what

110
00:07:19,719 --> 00:07:26,710
you find out or do you just want to tell

111
00:07:23,080 --> 00:07:28,210
me afterwards I can send it to you

112
00:07:26,710 --> 00:07:31,359
afterwards but to summarize its

113
00:07:28,210 --> 00:07:35,229
one-third transport one-third Internet

114
00:07:31,360 --> 00:07:38,219
one tenth on the application to people

115
00:07:35,229 --> 00:07:43,680
on operations five people on measurement

116
00:07:38,219 --> 00:07:46,240
to one and a half and security perhaps a

117
00:07:43,680 --> 00:07:48,610
third of the room has read the problems

118
00:07:46,240 --> 00:07:51,340
opportunities draft and we have sort of

119
00:07:48,610 --> 00:07:53,650
1012 people who are actually working on

120
00:07:51,340 --> 00:08:01,029
products in this area or systems in this

121
00:07:53,650 --> 00:08:03,760
area fabulous thank you so I'd like to

122
00:08:01,029 --> 00:08:05,230
just put the questions to guide us

123
00:08:03,760 --> 00:08:09,820
between now and ITF world

124
00:08:05,230 --> 00:08:11,770
six up we're going to loop back to this

125
00:08:09,820 --> 00:08:15,969
slide at the end of at the end of our

126
00:08:11,770 --> 00:08:19,919
discussion time but this is these are

127
00:08:15,970 --> 00:08:24,640
questions that I'm going to be asking or

128
00:08:19,920 --> 00:08:28,180
hums and my client

129
00:08:24,640 --> 00:08:30,130
if you're humming no to help help us

130
00:08:28,180 --> 00:08:32,440
understand why not

131
00:08:30,130 --> 00:08:34,840
and so I say you'll see the slide again

132
00:08:32,440 --> 00:08:41,110
but I wanted you to have it in your mind

133
00:08:34,840 --> 00:08:59,260
since we started the discussion so I

134
00:08:41,110 --> 00:08:59,800
think we're ready for Carsten good

135
00:08:59,260 --> 00:09:05,590
morning

136
00:08:59,800 --> 00:09:10,750
Monday morning is not my time I defended

137
00:09:05,590 --> 00:09:15,100
my PhD on a Monday morning so quick

138
00:09:10,750 --> 00:09:17,110
question who in this rule was not in one

139
00:09:15,100 --> 00:09:20,890
of the previous loop side meetings we

140
00:09:17,110 --> 00:09:23,710
had at the last word yes okay so it

141
00:09:20,890 --> 00:09:30,460
makes sense to say what is the room for

142
00:09:23,710 --> 00:09:33,750
pouring thank you so basically how can

143
00:09:30,460 --> 00:09:41,440
you do the incorrectly slide searching

144
00:09:33,750 --> 00:09:45,580
it's not doing first name yes yes thank

145
00:09:41,440 --> 00:09:49,750
you okay so basically this is about

146
00:09:45,580 --> 00:09:51,220
packet loss if your network doesn't have

147
00:09:49,750 --> 00:09:58,150
packet loss you're probably in the wrong

148
00:09:51,220 --> 00:09:59,950
room more interestingly if you if Peck

149
00:09:58,150 --> 00:10:01,959
loss is not a problem for you you're

150
00:09:59,950 --> 00:10:04,390
probably also in the wrong room because

151
00:10:01,960 --> 00:10:06,850
all we are going to do for the rest of

152
00:10:04,390 --> 00:10:10,800
the morning is looking at optimizing

153
00:10:06,850 --> 00:10:14,470
things so we have less packet loss and

154
00:10:10,800 --> 00:10:17,189
I've also mentioned that one form of

155
00:10:14,470 --> 00:10:18,860
pick loss for instances tail loss

156
00:10:17,190 --> 00:10:23,470
Michael has provided

157
00:10:18,860 --> 00:10:26,980
this nice demonstration of tail loss and

158
00:10:23,470 --> 00:10:30,050
so there's always a little bit of

159
00:10:26,980 --> 00:10:33,610
latency consideration behind that but

160
00:10:30,050 --> 00:10:38,329
what we are primarily try to do here is

161
00:10:33,610 --> 00:10:41,810
reduce packet loss and the the approach

162
00:10:38,330 --> 00:10:47,510
is to do the simplest thing that could

163
00:10:41,810 --> 00:10:50,150
possibly work which is we have a network

164
00:10:47,510 --> 00:10:52,100
path between two hosts that are

165
00:10:50,150 --> 00:10:56,900
oblivious to what's going on here

166
00:10:52,100 --> 00:10:59,990
and we have two nodes in the network

167
00:10:56,900 --> 00:11:03,740
that cooperate both are on paths they

168
00:10:59,990 --> 00:11:06,590
cooperate in reducing the loss and it's

169
00:11:03,740 --> 00:11:09,080
about compensating

170
00:11:06,590 --> 00:11:11,960
for losses that happen in the path

171
00:11:09,080 --> 00:11:14,350
between the two nodes so I think it's

172
00:11:11,960 --> 00:11:19,040
hard to do something that's even simpler

173
00:11:14,350 --> 00:11:22,160
than that so that is what we're trying

174
00:11:19,040 --> 00:11:24,199
to do here and of course there are

175
00:11:22,160 --> 00:11:26,750
things like retransmissions and FEC and

176
00:11:24,200 --> 00:11:31,190
and things we can't could do or could

177
00:11:26,750 --> 00:11:33,140
not do and that's possibly something

178
00:11:31,190 --> 00:11:34,610
that a working group could let to find

179
00:11:33,140 --> 00:11:36,380
out what exactly you want to do but

180
00:11:34,610 --> 00:11:40,700
right now let's try to understand the

181
00:11:36,380 --> 00:11:45,320
problem so the point is to recover

182
00:11:40,700 --> 00:11:45,740
packets locally so locally has two

183
00:11:45,320 --> 00:11:49,370
meanings

184
00:11:45,740 --> 00:11:53,570
it means close together low latency but

185
00:11:49,370 --> 00:11:55,100
it also means with no impact on the rest

186
00:11:53,570 --> 00:11:57,800
of the network and that of course

187
00:11:55,100 --> 00:11:59,390
requires a little bit of thinking how

188
00:11:57,800 --> 00:12:02,569
you really can make sure that there is

189
00:11:59,390 --> 00:12:04,310
no impact on the rest of the network but

190
00:12:02,570 --> 00:12:06,470
the main thing is doing it locally

191
00:12:04,310 --> 00:12:09,500
allows us to do it with low latency

192
00:12:06,470 --> 00:12:10,990
that's one of the objectives the second

193
00:12:09,500 --> 00:12:13,900
thing is we want to do it in the network

194
00:12:10,990 --> 00:12:17,630
so host participation is not required

195
00:12:13,900 --> 00:12:20,990
that doesn't mean that there shouldn't

196
00:12:17,630 --> 00:12:24,740
be activities with host participation

197
00:12:20,990 --> 00:12:26,870
that's fine but it's not what what's on

198
00:12:24,740 --> 00:12:31,490
the agenda today so we want to do this

199
00:12:26,870 --> 00:12:33,080
in the network and something because we

200
00:12:31,490 --> 00:12:36,580
we don't want the whole

201
00:12:33,080 --> 00:12:40,520
to participate we don't want to touch

202
00:12:36,580 --> 00:12:42,860
the hosts packets

203
00:12:40,520 --> 00:12:46,120
so traditionally peps have been very

204
00:12:42,860 --> 00:12:48,650
intrusive and and have looked into

205
00:12:46,120 --> 00:12:50,570
packets and actually changed packets and

206
00:12:48,650 --> 00:12:53,060
this is not the objective the objective

207
00:12:50,570 --> 00:12:57,170
is that the packet that comes out of

208
00:12:53,060 --> 00:12:59,119
loops is the same one that came in it's

209
00:12:57,170 --> 00:13:01,969
just more likely to actually really

210
00:12:59,120 --> 00:13:04,700
emerge then it would be without loops

211
00:13:01,970 --> 00:13:07,610
and this of course means it works with

212
00:13:04,700 --> 00:13:10,550
any kind of IP packets so encryption is

213
00:13:07,610 --> 00:13:15,950
not a problem for for what we are trying

214
00:13:10,550 --> 00:13:20,660
to do so don't look and don't touch so

215
00:13:15,950 --> 00:13:24,320
with these three framing things copying

216
00:13:20,660 --> 00:13:28,000
things it's pretty clear that any

217
00:13:24,320 --> 00:13:31,420
solution would have retransmission

218
00:13:28,000 --> 00:13:34,070
forward error correction or both and

219
00:13:31,420 --> 00:13:37,010
right now we are looking at the solution

220
00:13:34,070 --> 00:13:39,380
that actually can do both and of course

221
00:13:37,010 --> 00:13:42,439
for retransmission you need some

222
00:13:39,380 --> 00:13:43,700
information going from the egress to the

223
00:13:42,440 --> 00:13:48,710
ingress which we call reverse

224
00:13:43,700 --> 00:13:51,460
information like X next whatever and you

225
00:13:48,710 --> 00:13:54,110
also typically include some forward

226
00:13:51,460 --> 00:13:55,520
information although Michael will talk

227
00:13:54,110 --> 00:13:59,330
about the case where you actually don't

228
00:13:55,520 --> 00:14:01,010
need that so if the terms reverse

229
00:13:59,330 --> 00:14:03,170
information and forward information I

230
00:14:01,010 --> 00:14:04,310
come up these are things that need to be

231
00:14:03,170 --> 00:14:08,270
done and these are the things that

232
00:14:04,310 --> 00:14:10,729
actually we want to send it as here so

233
00:14:08,270 --> 00:14:12,890
we can interoperate the same thing is

234
00:14:10,730 --> 00:14:16,820
true for forward error correction since

235
00:14:12,890 --> 00:14:20,120
that may not be as familiar to people it

236
00:14:16,820 --> 00:14:22,730
means adding redundancy to the packets

237
00:14:20,120 --> 00:14:26,000
so if you lose one out of a group of

238
00:14:22,730 --> 00:14:29,240
packets you can recover independent of

239
00:14:26,000 --> 00:14:33,770
which of the packets your us this has

240
00:14:29,240 --> 00:14:36,470
some latency advantages and it gets

241
00:14:33,770 --> 00:14:39,620
really good when you do a dynamic

242
00:14:36,470 --> 00:14:41,990
selection and adaptation algorithm for

243
00:14:39,620 --> 00:14:43,970
the parameters of the fact things like

244
00:14:41,990 --> 00:14:46,120
block size if you have a block size and

245
00:14:43,970 --> 00:14:48,420
fake rate

246
00:14:46,120 --> 00:14:52,749
how much redundancy do you actually add

247
00:14:48,420 --> 00:14:55,748
it helps to dynamically adapt there and

248
00:14:52,749 --> 00:14:58,809
to be able to adapt you need measurement

249
00:14:55,749 --> 00:15:02,709
and we will see a few other places where

250
00:14:58,809 --> 00:15:04,889
measurement is useful and finally it

251
00:15:02,709 --> 00:15:08,079
turns out there are some some hybrid

252
00:15:04,889 --> 00:15:10,779
approaches where you react to a neck by

253
00:15:08,079 --> 00:15:14,469
adding FEC so this is not not out of

254
00:15:10,779 --> 00:15:18,189
scope what we don't really want to spend

255
00:15:14,470 --> 00:15:20,559
a lot of time on is things like protocol

256
00:15:18,189 --> 00:15:22,899
setup negotiation and so on we're

257
00:15:20,559 --> 00:15:24,339
assuming this that this happens in an

258
00:15:22,899 --> 00:15:27,189
environment where we have some

259
00:15:24,339 --> 00:15:29,949
controller thing that does these things

260
00:15:27,189 --> 00:15:33,430
for us and we are hand waving there this

261
00:15:29,949 --> 00:15:35,709
is not meant to be part of the effort

262
00:15:33,430 --> 00:15:38,229
but of course we need to understand what

263
00:15:35,709 --> 00:15:39,699
information needs to be in that setup so

264
00:15:38,230 --> 00:15:44,649
maybe in the end there will be a yang

265
00:15:39,699 --> 00:15:47,680
model or something like that ok the

266
00:15:44,649 --> 00:15:50,050
other part as I said we don't want to

267
00:15:47,680 --> 00:15:51,579
influence what's outside there and and

268
00:15:50,050 --> 00:15:55,959
the most important thing is we don't

269
00:15:51,579 --> 00:15:59,069
want to blow it up and this means we

270
00:15:55,959 --> 00:16:01,599
have to be careful about concealing

271
00:15:59,069 --> 00:16:04,479
packet losses because if you completely

272
00:16:01,600 --> 00:16:07,749
conceal all packet losses then of course

273
00:16:04,480 --> 00:16:10,660
the end hosts will ramp up and and you

274
00:16:07,749 --> 00:16:13,110
get into all kinds of problems because

275
00:16:10,660 --> 00:16:15,639
you will increase congestion so a

276
00:16:13,110 --> 00:16:22,360
necessary component here is congestion

277
00:16:15,639 --> 00:16:24,279
feedback to the end hosts and yeah the

278
00:16:22,360 --> 00:16:26,800
preferred way of course is easy and we

279
00:16:24,279 --> 00:16:31,809
have a way to do congestion feedback but

280
00:16:26,800 --> 00:16:34,508
for those flows that cannot use Sen we

281
00:16:31,809 --> 00:16:39,129
also need a fallback for Beck so we

282
00:16:34,509 --> 00:16:41,170
don't get an deployment problem

283
00:16:39,129 --> 00:16:44,559
the permanent disincentive everybody is

284
00:16:41,170 --> 00:16:46,929
waiting for easy end actually some

285
00:16:44,559 --> 00:16:51,309
informal measurements make me very

286
00:16:46,929 --> 00:16:53,230
optimistic about ecn about the

287
00:16:51,309 --> 00:16:55,750
percentage of traffic that already is

288
00:16:53,230 --> 00:16:59,010
easy and caliber but that's maybe not

289
00:16:55,750 --> 00:17:04,140
for this of to discuss

290
00:16:59,010 --> 00:17:08,400
and the other observation is we assume

291
00:17:04,140 --> 00:17:11,730
the transfer protocols on the hosts will

292
00:17:08,400 --> 00:17:14,220
improve over time and we want to play

293
00:17:11,730 --> 00:17:17,310
the puck a little bit to what where they

294
00:17:14,220 --> 00:17:19,319
will be yet not where they are now so we

295
00:17:17,310 --> 00:17:23,129
are assuming more easy and we are

296
00:17:19,319 --> 00:17:25,980
assuming more time-dependent loss

297
00:17:23,130 --> 00:17:28,110
detection stuff like in rec instead of

298
00:17:25,980 --> 00:17:29,760
packet number dependent loss detection

299
00:17:28,109 --> 00:17:33,179
and so on so there are a number of

300
00:17:29,760 --> 00:17:37,110
improvements that may may shape the

301
00:17:33,180 --> 00:17:38,460
optimal solution of things for loops but

302
00:17:37,110 --> 00:17:42,590
since we are not picking anything today

303
00:17:38,460 --> 00:17:42,590
that's just something to keep in mind

304
00:17:42,920 --> 00:17:46,500
yeah

305
00:17:44,040 --> 00:17:49,220
so in summary we want to do the local

306
00:17:46,500 --> 00:17:52,200
recovery thing we want to do some

307
00:17:49,220 --> 00:17:54,270
measurement both to set recovery

308
00:17:52,200 --> 00:17:59,610
parameters like when do I stop

309
00:17:54,270 --> 00:18:01,980
retransmit ring and also if we have to

310
00:17:59,610 --> 00:18:05,219
signal a congestion by actually dropping

311
00:18:01,980 --> 00:18:07,380
packets we want to do this as little as

312
00:18:05,220 --> 00:18:09,750
possible and maybe measurement can help

313
00:18:07,380 --> 00:18:12,620
us understand whether a loss was was a

314
00:18:09,750 --> 00:18:16,670
congestion or a non congestion loss and

315
00:18:12,620 --> 00:18:24,060
we have to do the actual congestion

316
00:18:16,670 --> 00:18:27,000
feedback what's not in scope but what

317
00:18:24,060 --> 00:18:30,139
maybe at some point some people want to

318
00:18:27,000 --> 00:18:32,430
do is adding multipath to the picture

319
00:18:30,140 --> 00:18:35,130
well traditionally I would propose

320
00:18:32,430 --> 00:18:37,320
adding multicast mobility and security

321
00:18:35,130 --> 00:18:39,270
that's always the three things that make

322
00:18:37,320 --> 00:18:45,149
things interesting but multipath is

323
00:18:39,270 --> 00:18:50,940
joint that list and also we are not we

324
00:18:45,150 --> 00:18:55,620
into diagnosing that path segment we

325
00:18:50,940 --> 00:18:57,690
have ways of diagnosing paths also IOM

326
00:18:55,620 --> 00:19:00,239
and so on this is not really what what

327
00:18:57,690 --> 00:19:02,490
we are trying to do here we are seeing

328
00:19:00,240 --> 00:19:04,320
the path segments as one thing we want

329
00:19:02,490 --> 00:19:05,670
to do some measurements on it but we

330
00:19:04,320 --> 00:19:09,120
don't necessarily want to understand

331
00:19:05,670 --> 00:19:11,840
which of the nodes is which of the links

332
00:19:09,120 --> 00:19:15,800
is causing the losses

333
00:19:11,840 --> 00:19:19,490
MTU handling is not something we will be

334
00:19:15,800 --> 00:19:21,800
the first to solve I mean it has been

335
00:19:19,490 --> 00:19:23,870
tried before and we know that there are

336
00:19:21,800 --> 00:19:27,649
a number of solutions that are not

337
00:19:23,870 --> 00:19:32,300
always very satisfying but we will just

338
00:19:27,650 --> 00:19:36,320
live in that thank you and finally since

339
00:19:32,300 --> 00:19:39,200
this needs tunneling we probably want to

340
00:19:36,320 --> 00:19:43,159
use some tunnel encapsulation this is

341
00:19:39,200 --> 00:19:47,180
not about defining one and not not about

342
00:19:43,160 --> 00:19:49,220
choosing one but really we want to be

343
00:19:47,180 --> 00:19:52,190
able to use any tunnel encapsulation

344
00:19:49,220 --> 00:19:53,960
that that's out there and there are some

345
00:19:52,190 --> 00:19:58,810
sketches to make sure that's possible

346
00:19:53,960 --> 00:20:02,860
but these are proof of existence

347
00:19:58,810 --> 00:20:06,310
sketches and much things to choose from

348
00:20:02,860 --> 00:20:09,050
there are a couple documents out there

349
00:20:06,310 --> 00:20:11,120
for the problem opportunities draft as

350
00:20:09,050 --> 00:20:13,310
Spencer asked about there is a strong

351
00:20:11,120 --> 00:20:16,879
and proposal we will spend a couple of

352
00:20:13,310 --> 00:20:18,679
minutes on later they even is a charter

353
00:20:16,880 --> 00:20:20,720
proposal for a new working group but we

354
00:20:18,680 --> 00:20:24,710
are not working group forming buff so we

355
00:20:20,720 --> 00:20:28,850
are not going to discuss that and there

356
00:20:24,710 --> 00:20:30,440
is a groups mailing list you may want to

357
00:20:28,850 --> 00:20:43,750
join on what you may want to consult you

358
00:20:30,440 --> 00:20:46,550
okay ten minutes can I ask a question

359
00:20:43,750 --> 00:20:48,110
yes lucky chose democracy I'm the

360
00:20:46,550 --> 00:20:50,570
co-chair of the network coding Research

361
00:20:48,110 --> 00:20:53,810
Group where we have a tunnel where we do

362
00:20:50,570 --> 00:20:55,970
per per segment coding where we have

363
00:20:53,810 --> 00:20:59,840
dealt with the issue of hiding and

364
00:20:55,970 --> 00:21:02,750
hiding losses and not breaking the

365
00:20:59,840 --> 00:21:05,090
internet where we do have error recovery

366
00:21:02,750 --> 00:21:08,380
and I'm wondering why we need another

367
00:21:05,090 --> 00:21:08,379
group to do that

368
00:21:10,700 --> 00:21:17,799
so the one possible one possibility

369
00:21:15,529 --> 00:21:20,179
would be standardizing it in the IETF

370
00:21:17,799 --> 00:21:23,179
okay yeah we've been a research group

371
00:21:20,179 --> 00:21:26,840
but yeah because a lot of the problems

372
00:21:23,179 --> 00:21:28,899
that were stated here are things that we

373
00:21:26,840 --> 00:21:31,820
have been addressing for what five years

374
00:21:28,899 --> 00:21:32,600
or something like this yeah this is why

375
00:21:31,820 --> 00:21:34,970
we have mops

376
00:21:32,600 --> 00:21:36,289
this is good thank you a lot of people

377
00:21:34,970 --> 00:21:37,840
in this room have been working on this

378
00:21:36,289 --> 00:21:40,580
for five or ten or fifteen years

379
00:21:37,840 --> 00:21:42,649
spending the last ever since I graduated

380
00:21:40,580 --> 00:21:44,570
from college and looking at my old age

381
00:21:42,649 --> 00:21:46,158
you can imagine how long that was so so

382
00:21:44,570 --> 00:21:48,350
what I would say that yeah there's

383
00:21:46,159 --> 00:21:50,059
already a lot of work done in a research

384
00:21:48,350 --> 00:21:52,309
group that could actually profit this

385
00:21:50,059 --> 00:21:56,210
absolutely absolutely and then have some

386
00:21:52,309 --> 00:21:58,580
slides about it later but everybody in

387
00:21:56,210 --> 00:22:01,820
this room can can go home comfortably

388
00:21:58,580 --> 00:22:04,699
thinking this new work is a spinoff of

389
00:22:01,820 --> 00:22:08,450
the work that did it before so this will

390
00:22:04,700 --> 00:22:15,200
be a NW c RG spin-off if it becomes a

391
00:22:08,450 --> 00:22:20,690
working group if that helps I booked

392
00:22:15,200 --> 00:22:23,210
Brisco independent I I just will an

393
00:22:20,690 --> 00:22:25,429
answer to this question when you move

394
00:22:23,210 --> 00:22:28,190
from a per link retransmission to an

395
00:22:25,429 --> 00:22:29,570
overlay retransmission you stop being

396
00:22:28,190 --> 00:22:32,779
able to tell whether it's a transmission

397
00:22:29,570 --> 00:22:34,279
loss or a congestion loss when you're on

398
00:22:32,779 --> 00:22:36,739
the purling you know whether it's a

399
00:22:34,279 --> 00:22:38,480
transmission loss or not but once you go

400
00:22:36,739 --> 00:22:40,779
away from that you don't so the the

401
00:22:38,480 --> 00:22:45,619
statements you made about wanting to

402
00:22:40,779 --> 00:22:48,440
avoid hiding congestion loss don't

403
00:22:45,619 --> 00:22:50,389
square with the scope of the of the both

404
00:22:48,440 --> 00:22:51,950
as far as I can see because your your

405
00:22:50,389 --> 00:22:56,570
honor you're definitely on a multi-link

406
00:22:51,950 --> 00:22:59,809
scope so tying the recovery scheme to

407
00:22:56,570 --> 00:23:01,789
the link helps you but I don't agree

408
00:22:59,809 --> 00:23:03,918
with the other half that if you would

409
00:23:01,789 --> 00:23:06,799
not try it with the link you cannot say

410
00:23:03,919 --> 00:23:07,899
anything I don't agree with it well how

411
00:23:06,799 --> 00:23:10,549
do you know the difference between

412
00:23:07,899 --> 00:23:12,408
congestion loss and transmission loss if

413
00:23:10,549 --> 00:23:16,899
you're not on the lane well maybe the

414
00:23:12,409 --> 00:23:16,899
delay window maybe the delay went up

415
00:23:17,019 --> 00:23:22,260
okay so you're then starting to do but

416
00:23:19,639 --> 00:23:26,669
that's something lot of things we

417
00:23:22,260 --> 00:23:28,560
have to look at and there is a number of

418
00:23:26,670 --> 00:23:30,240
things you can do relatively safely and

419
00:23:28,560 --> 00:23:32,370
there are a number of things that may be

420
00:23:30,240 --> 00:23:34,230
a little bit aggressive and then we are

421
00:23:32,370 --> 00:23:36,540
right there in congestion control and

422
00:23:34,230 --> 00:23:38,970
where we have a number of algorithms and

423
00:23:36,540 --> 00:23:41,460
mechanisms to choose from and there will

424
00:23:38,970 --> 00:23:43,530
be BCPs and and everything I think this

425
00:23:41,460 --> 00:23:45,240
needs to be examined I just want to

426
00:23:43,530 --> 00:23:51,139
point out um we might want to do that

427
00:23:45,240 --> 00:23:53,490
might come back to say real quickly here

428
00:23:51,140 --> 00:23:55,620
one of the things one of the questions

429
00:23:53,490 --> 00:23:57,420
that it's on our list of questions is

430
00:23:55,620 --> 00:23:59,729
how much you know how much of this is

431
00:23:57,420 --> 00:24:03,180
what's research and what's engineering

432
00:23:59,730 --> 00:24:08,100
so we you know we are kind of headed

433
00:24:03,180 --> 00:24:09,570
towards that question in the first

434
00:24:08,100 --> 00:24:12,270
couple that have come up and I wanted to

435
00:24:09,570 --> 00:24:13,860
thank you all for helping us to

436
00:24:12,270 --> 00:24:18,420
understand that that one of the

437
00:24:13,860 --> 00:24:21,419
questions so tender than it is most you

438
00:24:18,420 --> 00:24:24,120
all david black as a transparent group

439
00:24:21,420 --> 00:24:26,520
chair or one of the chairs want to quick

440
00:24:24,120 --> 00:24:28,649
get up to do two quick plugs from labor

441
00:24:26,520 --> 00:24:31,710
at first for all bob Brisco who just sat

442
00:24:28,650 --> 00:24:34,230
down has written a couple of drafts that

443
00:24:31,710 --> 00:24:36,930
are that are mostly done in the working

444
00:24:34,230 --> 00:24:38,820
group headed for IETF last call soon of

445
00:24:36,930 --> 00:24:41,340
important interests of this group is

446
00:24:38,820 --> 00:24:44,929
that they explain a bit about how to

447
00:24:41,340 --> 00:24:47,040
handle EC and a tunnel a tunnel ich

448
00:24:44,930 --> 00:24:49,290
egress and particular bob has written

449
00:24:47,040 --> 00:24:53,280
some text on fragmentation that might

450
00:24:49,290 --> 00:24:56,159
also in might also apply to FEC if you

451
00:24:53,280 --> 00:24:57,899
don't look at it look at at the details

452
00:24:56,160 --> 00:25:00,360
to closes on cars looking that at those

453
00:24:57,900 --> 00:25:00,750
drafts one of them has Easton and cap my

454
00:25:00,360 --> 00:25:03,840
name

455
00:25:00,750 --> 00:25:05,940
the other has RFC 6040 updates shim in

456
00:25:03,840 --> 00:25:08,669
the name we apologize for the not

457
00:25:05,940 --> 00:25:11,630
exactly intuitive draft names and then

458
00:25:08,670 --> 00:25:14,190
having mentioned tunnels there's a

459
00:25:11,630 --> 00:25:16,830
long-suffering draft in antic area on

460
00:25:14,190 --> 00:25:21,180
tunnels please read that and don't

461
00:25:16,830 --> 00:25:24,540
reinvent it thank thank you David just

462
00:25:21,180 --> 00:25:27,840
and just those are both TST WT working

463
00:25:24,540 --> 00:25:31,350
group drafts right the interior one

464
00:25:27,840 --> 00:25:34,110
isn't no yeah there's there's there's

465
00:25:31,350 --> 00:25:35,360
2tsp WG drafts one sec and cap the name

466
00:25:34,110 --> 00:25:39,080
one has

467
00:25:35,360 --> 00:25:41,719
RFC 6040 updates shim in the name oh and

468
00:25:39,080 --> 00:25:44,330
there's an indie area draft on tunnels

469
00:25:41,720 --> 00:25:46,159
and of the 3d interior draft is probably

470
00:25:44,330 --> 00:25:48,499
the most important because it reflects a

471
00:25:46,159 --> 00:25:50,330
bunch of things learned learned along to

472
00:25:48,499 --> 00:25:58,100
over a long time the hard way about

473
00:25:50,330 --> 00:25:59,570
tunnels Thank You Ted lemon so to me

474
00:25:58,100 --> 00:26:01,519
so I'm a little frustrated by what

475
00:25:59,570 --> 00:26:03,470
Carsten just said because to me the most

476
00:26:01,519 --> 00:26:05,149
interesting problem that that needs to

477
00:26:03,470 --> 00:26:08,840
be solved in this space is the is the

478
00:26:05,149 --> 00:26:10,549
problem of the edge device the leaf

479
00:26:08,840 --> 00:26:13,399
device talking to the border router

480
00:26:10,549 --> 00:26:15,408
between and I a constrained network and

481
00:26:13,399 --> 00:26:17,689
a bigger network and so if that problem

482
00:26:15,409 --> 00:26:20,720
is out of scope then I actually have no

483
00:26:17,690 --> 00:26:22,220
interest in this work that's not to say

484
00:26:20,720 --> 00:26:23,779
that I don't don't think it's a good

485
00:26:22,220 --> 00:26:26,779
idea it just I personally don't have

486
00:26:23,779 --> 00:26:27,859
interest in it so and I'm not saying

487
00:26:26,779 --> 00:26:29,840
that you should change your mind I'm

488
00:26:27,859 --> 00:26:33,609
just making I'm just raising that point

489
00:26:29,840 --> 00:26:39,619
to point it out to you thank you

490
00:26:33,609 --> 00:26:42,889
sniffing Vega one thing one thing that

491
00:26:39,619 --> 00:26:47,209
came to my mind is I think this this

492
00:26:42,889 --> 00:26:51,229
problem that was described here is at

493
00:26:47,210 --> 00:26:54,139
least for many more tricky links solved

494
00:26:51,230 --> 00:26:58,549
in proprietary ways by basically

495
00:26:54,139 --> 00:27:01,789
everyone and I think it's also quite

496
00:26:58,549 --> 00:27:04,149
common that the that said when you have

497
00:27:01,789 --> 00:27:06,529
a satellite link that your satellite

498
00:27:04,149 --> 00:27:08,539
uplink and your satellite downlink and

499
00:27:06,529 --> 00:27:11,809
the boxes attached to it where something

500
00:27:08,539 --> 00:27:13,369
like this has to happen are from the

501
00:27:11,809 --> 00:27:15,678
same vendor and they do them and a

502
00:27:13,369 --> 00:27:17,269
specific thing why is that not

503
00:27:15,679 --> 00:27:20,720
sufficient anymore are we are we

504
00:27:17,269 --> 00:27:24,259
standardizing just for the sake of

505
00:27:20,720 --> 00:27:30,559
standardization good thank you next

506
00:27:24,259 --> 00:27:33,710
presentation thank you so I'm going to

507
00:27:30,559 --> 00:27:37,399
present a use case so hopefully some of

508
00:27:33,710 --> 00:27:42,429
the questions can be answered when we

509
00:27:37,399 --> 00:27:45,379
have a very specific use case so here

510
00:27:42,429 --> 00:27:48,919
here is the usage scenario we are trying

511
00:27:45,379 --> 00:27:51,478
to introduce thinking about

512
00:27:48,919 --> 00:27:55,259
intercontinental when past for example

513
00:27:51,479 --> 00:27:57,239
from Paris to Beijing either over NPSL

514
00:27:55,259 --> 00:27:59,549
over Internet but here we're trying to

515
00:27:57,239 --> 00:28:02,129
focusing on over the public Internet

516
00:27:59,549 --> 00:28:04,259
so we find out as the default path does

517
00:28:02,129 --> 00:28:07,320
not always keep the latency we required

518
00:28:04,259 --> 00:28:10,739
or the best latency so what we are

519
00:28:07,320 --> 00:28:13,609
trying to do is look at the small square

520
00:28:10,739 --> 00:28:17,039
here we create the workload from

521
00:28:13,609 --> 00:28:21,629
multiple clouds in different geographer

522
00:28:17,039 --> 00:28:23,849
sites to build a better web pass via the

523
00:28:21,629 --> 00:28:26,158
overlay nodes those square boxes

524
00:28:23,849 --> 00:28:29,339
actually the overlay notes record crowd

525
00:28:26,159 --> 00:28:33,149
the Internet network science or

526
00:28:29,339 --> 00:28:37,049
something so we have put this virtual

527
00:28:33,149 --> 00:28:39,899
nodes or cloud routers globally then we

528
00:28:37,049 --> 00:28:43,168
have experiments based on 37 cloud

529
00:28:39,899 --> 00:28:45,988
routers then we find out wisdom we have

530
00:28:43,169 --> 00:28:49,889
71 percent chance of finding a better

531
00:28:45,989 --> 00:28:52,199
path in terms of latency so what's next

532
00:28:49,889 --> 00:28:55,168
we find out even we have a selected path

533
00:28:52,199 --> 00:28:59,849
gives a better latency the loss still

534
00:28:55,169 --> 00:29:02,159
exists then there are some pretty

535
00:28:59,849 --> 00:29:04,979
well-known negative impacts of packet

536
00:29:02,159 --> 00:29:07,349
loss in Longhorn Network the Longhorn

537
00:29:04,979 --> 00:29:11,219
Network here we refers to the long

538
00:29:07,349 --> 00:29:14,099
pipeline at least like tens of hundreds

539
00:29:11,219 --> 00:29:17,879
of milliseconds so there are at a loss

540
00:29:14,099 --> 00:29:20,339
problem for short flow which possibly

541
00:29:17,879 --> 00:29:22,829
caused by the timeout

542
00:29:20,339 --> 00:29:26,999
possibly a few seconds at the sender or

543
00:29:22,829 --> 00:29:31,889
it may take an additional Artie T for T

544
00:29:26,999 --> 00:29:34,889
spirit transmission in so the long flow

545
00:29:31,889 --> 00:29:38,069
completion time is is expected in this

546
00:29:34,889 --> 00:29:41,309
case and for large flows the throughput

547
00:29:38,069 --> 00:29:45,149
is the large flow I mean the cares most

548
00:29:41,309 --> 00:29:47,459
so there are chances that the TCP sender

549
00:29:45,149 --> 00:29:49,589
actually reduce its sending rate even

550
00:29:47,459 --> 00:29:52,919
when the loss is not caused by a

551
00:29:49,589 --> 00:29:56,489
persistent congestion so in summary the

552
00:29:52,919 --> 00:29:58,169
packet loss negative impact most because

553
00:29:56,489 --> 00:30:01,529
of the internal transmission it takes

554
00:29:58,169 --> 00:30:02,440
time especially in long-haul network so

555
00:30:01,529 --> 00:30:04,630
too

556
00:30:02,440 --> 00:30:08,380
have some further study on the packet

557
00:30:04,630 --> 00:30:12,340
loss pattern we we have this picture

558
00:30:08,380 --> 00:30:16,060
sorry syllabus little bit more but for

559
00:30:12,340 --> 00:30:18,459
those is in Chinese but you can guess

560
00:30:16,060 --> 00:30:21,600
there there are locations I mean they

561
00:30:18,460 --> 00:30:25,060
are Shanghai by Eugene I think there are

562
00:30:21,600 --> 00:30:27,520
Silicon Valley and like San Paulo or

563
00:30:25,060 --> 00:30:30,909
somewhere so each pair of them there's

564
00:30:27,520 --> 00:30:33,220
the small square here actually captures

565
00:30:30,910 --> 00:30:35,980
the loss rate so it can be easily

566
00:30:33,220 --> 00:30:37,810
identified that the loss over past

567
00:30:35,980 --> 00:30:40,690
segments has very different

568
00:30:37,810 --> 00:30:45,520
characteristics some Dom them the loss

569
00:30:40,690 --> 00:30:48,850
is is persistently high and some some of

570
00:30:45,520 --> 00:30:52,420
them the loss almost can be ignored in

571
00:30:48,850 --> 00:30:55,270
some random the laws vary over time for

572
00:30:52,420 --> 00:30:58,270
example higher getting higher over the

573
00:30:55,270 --> 00:31:01,690
peak peak hours yeah something like that

574
00:30:58,270 --> 00:31:05,290
then another finding is the loss over a

575
00:31:01,690 --> 00:31:08,260
single specific segments may affect the

576
00:31:05,290 --> 00:31:11,530
end-to-end loss significantly that is to

577
00:31:08,260 --> 00:31:13,780
say the loss detected by the end-to-end

578
00:31:11,530 --> 00:31:17,430
pass actually can possibly be

579
00:31:13,780 --> 00:31:21,760
contributed by a short single segments

580
00:31:17,430 --> 00:31:23,440
so in our usage scenario there are at

581
00:31:21,760 --> 00:31:27,010
least two opportunities to new

582
00:31:23,440 --> 00:31:30,820
opportunities we have now with where we

583
00:31:27,010 --> 00:31:33,760
find out that can solve the packet loss

584
00:31:30,820 --> 00:31:36,159
problem the first one is in this cloud

585
00:31:33,760 --> 00:31:38,170
internet we have overlay nodes they

586
00:31:36,160 --> 00:31:41,140
partition the whole heads into shorter

587
00:31:38,170 --> 00:31:43,330
segments naturally and we can enable the

588
00:31:41,140 --> 00:31:46,060
per segment operation for example

589
00:31:43,330 --> 00:31:48,699
quicker recovery from loss comparing to

590
00:31:46,060 --> 00:31:51,580
entry and also we can do the adaptive

591
00:31:48,700 --> 00:31:53,140
recovery so the adaptive here means for

592
00:31:51,580 --> 00:31:55,000
each of the segments we can decide

593
00:31:53,140 --> 00:31:57,910
whether we should enable the local

594
00:31:55,000 --> 00:32:01,060
recovery or not always should use the

595
00:31:57,910 --> 00:32:03,210
retransmission or we can enable the FEC

596
00:32:01,060 --> 00:32:06,570
with different level of redundancy

597
00:32:03,210 --> 00:32:09,580
another opportunity we find out is the

598
00:32:06,570 --> 00:32:12,060
overlay nose nowadays have computing and

599
00:32:09,580 --> 00:32:15,610
memory resources so are capable of

600
00:32:12,060 --> 00:32:16,330
provides providing the complex features

601
00:32:15,610 --> 00:32:18,820
like

602
00:32:16,330 --> 00:32:23,408
detection recovery measurement is a

603
00:32:18,820 --> 00:32:28,439
marking others things so here this pay

604
00:32:23,409 --> 00:32:32,230
trying to show a little bit how the

605
00:32:28,440 --> 00:32:34,659
segment based merriment can help us help

606
00:32:32,230 --> 00:32:36,820
determine the cause of a packet loss

607
00:32:34,659 --> 00:32:41,100
look at the picture here the left-hand

608
00:32:36,820 --> 00:32:44,110
side actually I think is from where

609
00:32:41,100 --> 00:32:46,539
Frankfurt or Shanghai on the right side

610
00:32:44,110 --> 00:32:49,840
from Frankfurt to Shanghai and the left

611
00:32:46,539 --> 00:32:54,519
side is from Shanghai to u.s. West so

612
00:32:49,840 --> 00:32:57,070
the blue is the loss rate the red is the

613
00:32:54,519 --> 00:33:01,480
RTT so we can see there is a strong

614
00:32:57,070 --> 00:33:06,549
correlation in these two cases so that

615
00:33:01,480 --> 00:33:09,580
somehow in ties if it has such pattern

616
00:33:06,549 --> 00:33:12,490
the high correlation pattern then there

617
00:33:09,580 --> 00:33:15,850
is a loss then we check that at that

618
00:33:12,490 --> 00:33:18,610
time the delay is high then we it's

619
00:33:15,850 --> 00:33:20,949
highly possible that losses caused by a

620
00:33:18,610 --> 00:33:24,039
congestion otherwise it's possible that

621
00:33:20,950 --> 00:33:26,380
caused by a non-contrast reason so why

622
00:33:24,039 --> 00:33:29,980
we care about this remember the slides

623
00:33:26,380 --> 00:33:32,500
that are shown by Caston somehow we want

624
00:33:29,980 --> 00:33:36,130
the feedback the congestion information

625
00:33:32,500 --> 00:33:40,059
to the sender so that's how the segment

626
00:33:36,130 --> 00:33:42,190
based information helped us I believe in

627
00:33:40,059 --> 00:33:43,720
the solution sketch presentation may

628
00:33:42,190 --> 00:33:46,720
have made touch more on this

629
00:33:43,720 --> 00:33:49,990
so to summarize I have introduced that

630
00:33:46,720 --> 00:33:53,830
is a particular scenario in the overlay

631
00:33:49,990 --> 00:33:56,409
nodes allow us to improve the loss the

632
00:33:53,830 --> 00:33:59,139
packet loss over some specific channel

633
00:33:56,409 --> 00:34:01,510
based path segments in we are requiring

634
00:33:59,139 --> 00:34:03,370
mechanism to be defined to achieve the

635
00:34:01,510 --> 00:34:07,240
local recovery and at the same time

636
00:34:03,370 --> 00:34:09,699
minimizing the undesired side effects we

637
00:34:07,240 --> 00:34:12,520
I kind of think the loops buys too

638
00:34:09,699 --> 00:34:15,489
should buy to existing overlay tonneau

639
00:34:12,520 --> 00:34:16,839
insulation we do not want to invent a

640
00:34:15,489 --> 00:34:24,549
new ink encapsulation

641
00:34:16,839 --> 00:34:28,038
that's or for this quarry

642
00:34:24,549 --> 00:34:30,949
Gouri first and cartwright question so

643
00:34:28,039 --> 00:34:32,899
we we have these effects going on at

644
00:34:30,949 --> 00:34:35,089
multiple layers so I write I put my

645
00:34:32,899 --> 00:34:38,449
operator hat on I'm doing stuff that

646
00:34:35,089 --> 00:34:40,460
late to mail maybe layer three then I'm

647
00:34:38,449 --> 00:34:42,078
doing routine control to try eliminate

648
00:34:40,460 --> 00:34:44,179
these things I've got transport

649
00:34:42,079 --> 00:34:46,279
protocols running over the top I see

650
00:34:44,179 --> 00:34:48,829
real dangers that we have too many

651
00:34:46,279 --> 00:34:50,629
layers trying to cross optimize the same

652
00:34:48,829 --> 00:34:53,149
things over slightly different time

653
00:34:50,629 --> 00:35:00,380
scales is this something that you're

654
00:34:53,149 --> 00:35:03,319
considering okay for this one I am it's

655
00:35:00,380 --> 00:35:05,509
highly depends on their deployment

656
00:35:03,319 --> 00:35:08,720
because for this one we are thinking

657
00:35:05,509 --> 00:35:12,589
there are some underling nodes and it's

658
00:35:08,720 --> 00:35:15,529
not under control of the operator who

659
00:35:12,589 --> 00:35:18,589
provides all the small square boxes so

660
00:35:15,529 --> 00:35:20,630
this is an overlay note managed by

661
00:35:18,589 --> 00:35:26,720
somebody else so that's why we have

662
00:35:20,630 --> 00:35:28,400
layering so naturally they're not doing

663
00:35:26,720 --> 00:35:30,259
traffic at you are they not looking at

664
00:35:28,400 --> 00:35:35,299
the BGP tables and considering how to

665
00:35:30,259 --> 00:35:36,739
optimize this this um you I'm trying to

666
00:35:35,299 --> 00:35:39,559
say actually there are some underlying

667
00:35:36,739 --> 00:35:43,729
optimization that that's the I mean

668
00:35:39,559 --> 00:35:47,390
operators are trying news right guys I I

669
00:35:43,729 --> 00:35:50,239
think it's possible but that part is not

670
00:35:47,390 --> 00:35:52,759
the I mean they're the provider with

671
00:35:50,239 --> 00:35:55,009
this layer will be worried about and

672
00:35:52,759 --> 00:35:58,670
from some of the experiments will show

673
00:35:55,009 --> 00:36:00,680
actually the latency I mean they the

674
00:35:58,670 --> 00:36:03,680
unrecorded underlay actually the

675
00:36:00,680 --> 00:36:06,469
underlay latency given by them is not

676
00:36:03,680 --> 00:36:08,690
satisfied so that's why they're the

677
00:36:06,469 --> 00:36:15,259
middle layer operator I want to do

678
00:36:08,690 --> 00:36:20,420
something by themselves Aaron Falk

679
00:36:15,259 --> 00:36:22,190
Akamai thank you for your presentation

680
00:36:20,420 --> 00:36:23,989
was very clear I thought it was very

681
00:36:22,190 --> 00:36:28,009
helpful could you go to the slide that

682
00:36:23,989 --> 00:36:31,130
shows the delay and loss rate and I

683
00:36:28,009 --> 00:36:35,869
think this is a the point that Corey was

684
00:36:31,130 --> 00:36:37,710
making which is at every layer that you

685
00:36:35,869 --> 00:36:40,440
are implementing loss recovery

686
00:36:37,710 --> 00:36:43,020
you are converting loss into delay

687
00:36:40,440 --> 00:36:45,000
because each layer is doing some sort of

688
00:36:43,020 --> 00:36:47,400
loss detection and then recovery to

689
00:36:45,000 --> 00:36:49,110
ensure successful transmission so that's

690
00:36:47,400 --> 00:36:51,360
happening at the link layer that could

691
00:36:49,110 --> 00:36:54,060
be happening between routers you're

692
00:36:51,360 --> 00:36:56,160
doing it between your cloud routers so

693
00:36:54,060 --> 00:37:00,540
what that's going to do is that's going

694
00:36:56,160 --> 00:37:03,950
to mask some of the signal so if you are

695
00:37:00,540 --> 00:37:07,290
using an indication of delay to say

696
00:37:03,950 --> 00:37:11,790
correlated with loss to say that this is

697
00:37:07,290 --> 00:37:13,200
congestion related loss you may be may

698
00:37:11,790 --> 00:37:14,700
be incorrect in that because what's

699
00:37:13,200 --> 00:37:17,759
happening is that a layer underneath you

700
00:37:14,700 --> 00:37:21,779
is converting that loss that it's

701
00:37:17,760 --> 00:37:23,640
detected into delay so what we are

702
00:37:21,780 --> 00:37:27,270
trying to do is at least we need to do

703
00:37:23,640 --> 00:37:28,950
no harm so this is just an example to

704
00:37:27,270 --> 00:37:30,870
show in case there is a strong

705
00:37:28,950 --> 00:37:33,930
correlation what's possibly we can do

706
00:37:30,870 --> 00:37:36,630
but if I mean if people really have

707
00:37:33,930 --> 00:37:39,270
worries about this we can just do the

708
00:37:36,630 --> 00:37:42,600
local recovery and then let the sender -

709
00:37:39,270 --> 00:37:44,700
as they usually do I mean if one they

710
00:37:42,600 --> 00:37:47,310
want to decrease the sending rate so

711
00:37:44,700 --> 00:37:48,930
just as a conventional TCP sender but at

712
00:37:47,310 --> 00:37:55,080
least we are to doing no harm

713
00:37:48,930 --> 00:38:01,160
this can you go back to the slide with

714
00:37:55,080 --> 00:38:01,160
the graph and that shows that topology

715
00:38:02,750 --> 00:38:10,200
the topology graphic so this kind of

716
00:38:07,170 --> 00:38:13,530
makes it look like the majority of the

717
00:38:10,200 --> 00:38:15,689
transmit path is the long-haul which in

718
00:38:13,530 --> 00:38:19,860
regards to the latency seems like that

719
00:38:15,690 --> 00:38:22,170
would be where the most delay is so if

720
00:38:19,860 --> 00:38:24,330
local recovery is over the largest part

721
00:38:22,170 --> 00:38:26,210
of the path I'm not sure that that's

722
00:38:24,330 --> 00:38:32,009
going to be very different than and

723
00:38:26,210 --> 00:38:34,350
recovery so that's in your comment on

724
00:38:32,010 --> 00:38:38,360
that yeah that's fair I think that's a

725
00:38:34,350 --> 00:38:42,299
fair comment so from our experiments we

726
00:38:38,360 --> 00:38:46,410
normally we have at least three segments

727
00:38:42,300 --> 00:38:48,810
I mean so so as the previous

728
00:38:46,410 --> 00:38:51,149
presentation in custom showed if there

729
00:38:48,810 --> 00:38:51,640
is a longest segment that is our TT is

730
00:38:51,150 --> 00:38:54,040
almost

731
00:38:51,640 --> 00:38:57,490
equivalent to the end-to-end now I don't

732
00:38:54,040 --> 00:38:59,170
think we should enable loops so you

733
00:38:57,490 --> 00:39:02,020
break it into smaller segments the

734
00:38:59,170 --> 00:39:03,490
advantages of localization but then the

735
00:39:02,020 --> 00:39:04,960
obvious problem becomes what if I have

736
00:39:03,490 --> 00:39:07,270
lost it each segment and they'll have

737
00:39:04,960 --> 00:39:09,880
additive delay which is making the

738
00:39:07,270 --> 00:39:10,750
problem even worse oh it's just some of

739
00:39:09,880 --> 00:39:13,420
the things I'm sure you're thinking

740
00:39:10,750 --> 00:39:15,310
about these things yeah so so that's why

741
00:39:13,420 --> 00:39:17,080
I mean during the solution

742
00:39:15,310 --> 00:39:20,290
considerations I think we want to make

743
00:39:17,080 --> 00:39:22,660
the recovery mechanism more adaptive so

744
00:39:20,290 --> 00:39:24,730
some sources for certain segments maybe

745
00:39:22,660 --> 00:39:26,290
we don't want to enable it at all for

746
00:39:24,730 --> 00:39:28,120
some of them maybe retransmission okay

747
00:39:26,290 --> 00:39:30,100
now for some of them if you see with

748
00:39:28,120 --> 00:39:32,740
different redundancy might be applicable

749
00:39:30,100 --> 00:39:34,870
so that's yeah but we don't have very

750
00:39:32,740 --> 00:39:36,549
very specific solution right now but

751
00:39:34,870 --> 00:39:38,460
because this is known working group

752
00:39:36,550 --> 00:39:43,620
forming both so that's what I'm thinking

753
00:39:38,460 --> 00:39:46,870
Spencer Spencer Dawkins speaking as

754
00:39:43,620 --> 00:39:49,230
individual contributor so one of the

755
00:39:46,870 --> 00:39:51,700
things I wanted to be sure and say was

756
00:39:49,230 --> 00:39:52,480
again I'm glad that Aaron stood up and

757
00:39:51,700 --> 00:39:54,819
started talking

758
00:39:52,480 --> 00:39:56,860
Aaron and I co-chaired the pilk working

759
00:39:54,820 --> 00:39:59,170
group which produced the advice for

760
00:39:56,860 --> 00:40:01,390
subjects sub network protocol designers

761
00:39:59,170 --> 00:40:05,200
a long time ago and one of the things

762
00:40:01,390 --> 00:40:07,299
that's in there or is about being aware

763
00:40:05,200 --> 00:40:09,009
of reach you know retransmissions we did

764
00:40:07,300 --> 00:40:12,790
that so long ago that people are still

765
00:40:09,010 --> 00:40:14,770
running IPO for x.25 you know in the end

766
00:40:12,790 --> 00:40:17,620
people were still saying that they want

767
00:40:14,770 --> 00:40:21,280
to say your hops that were completely

768
00:40:17,620 --> 00:40:23,560
reliable completely reliable so those

769
00:40:21,280 --> 00:40:27,070
kinds of things so we've had the ITF has

770
00:40:23,560 --> 00:40:30,029
done work that required a you know that

771
00:40:27,070 --> 00:40:32,740
that tried to help people be aware of

772
00:40:30,030 --> 00:40:35,980
that problem and I think what we're

773
00:40:32,740 --> 00:40:38,680
saying now is that that problem is at

774
00:40:35,980 --> 00:40:40,540
more than one layer down you know it's

775
00:40:38,680 --> 00:40:44,710
more than one layer for the two layers

776
00:40:40,540 --> 00:40:47,230
that could be arguing and so I think

777
00:40:44,710 --> 00:40:50,290
being aware of that is going to be

778
00:40:47,230 --> 00:40:52,810
really important and this is kind of

779
00:40:50,290 --> 00:40:54,009
what I was thinking about when I was

780
00:40:52,810 --> 00:40:57,940
talking about performance implications

781
00:40:54,010 --> 00:41:02,520
of path characteristics at the at the

782
00:40:57,940 --> 00:41:02,520
IRC talk thank you

783
00:41:03,700 --> 00:41:09,259
and Rebecca you pointed in the same

784
00:41:07,400 --> 00:41:10,580
thread it's in the same thread it's

785
00:41:09,260 --> 00:41:13,610
returning to the previous point about

786
00:41:10,580 --> 00:41:15,860
doing no harm with the correlation named

787
00:41:13,610 --> 00:41:23,119
Lillian sorry innately

788
00:41:15,860 --> 00:41:24,760
Andrew McGregor if you hide or smear out

789
00:41:23,119 --> 00:41:27,950
in time the correlation between

790
00:41:24,760 --> 00:41:30,230
congestive loss and the delay you're

791
00:41:27,950 --> 00:41:32,689
doing harm end of story

792
00:41:30,230 --> 00:41:34,700
because it reduces the ability of the

793
00:41:32,690 --> 00:41:36,440
congestion control to see what's going

794
00:41:34,700 --> 00:41:39,049
on if on the other hand you have some

795
00:41:36,440 --> 00:41:41,090
level of non congestive loss then

796
00:41:39,050 --> 00:41:43,640
papering over that is purely a good

797
00:41:41,090 --> 00:41:46,910
thing the question is can you tell the

798
00:41:43,640 --> 00:41:49,970
difference and that's the that's the key

799
00:41:46,910 --> 00:41:51,618
problem in all of this yeah and the

800
00:41:49,970 --> 00:41:54,080
reason works layer too by the way and

801
00:41:51,619 --> 00:41:55,369
you know there's probably more than four

802
00:41:54,080 --> 00:41:58,130
instances of an algorithm that does

803
00:41:55,369 --> 00:42:01,430
exactly this for per person in this room

804
00:41:58,130 --> 00:42:05,360
running is that you know that it's not

805
00:42:01,430 --> 00:42:07,310
congested was right Wi-Fi you dropped up

806
00:42:05,360 --> 00:42:08,900
you know you have an error rate that's

807
00:42:07,310 --> 00:42:10,820
rather high for an indifferent internet

808
00:42:08,900 --> 00:42:13,720
going you dropped a packet because of

809
00:42:10,820 --> 00:42:17,420
that we'll find just paper over it right

810
00:42:13,720 --> 00:42:19,069
whereas you know if you don't know on a

811
00:42:17,420 --> 00:42:20,990
long-haul path whether it was congested

812
00:42:19,070 --> 00:42:25,270
or not you should probably leave it in

813
00:42:20,990 --> 00:42:28,129
the string so let me answer that quickly

814
00:42:25,270 --> 00:42:33,950
the point of the congestion feedback is

815
00:42:28,130 --> 00:42:37,520
to not lose the information now let me

816
00:42:33,950 --> 00:42:40,910
answer the other question which is

817
00:42:37,520 --> 00:42:43,670
essentially we have survived the last 30

818
00:42:40,910 --> 00:42:47,029
years why are we doing this now there

819
00:42:43,670 --> 00:42:50,869
are a number of things coming together

820
00:42:47,030 --> 00:42:55,670
and the cloudy stuff that you talked

821
00:42:50,869 --> 00:42:57,290
about is maybe one aspect of it but I

822
00:42:55,670 --> 00:42:59,420
think the important observation is this

823
00:42:57,290 --> 00:43:01,580
is not supposed to reply we've replaced

824
00:42:59,420 --> 00:43:03,950
the existing Internet this is a

825
00:43:01,580 --> 00:43:07,520
particular performance optimization that

826
00:43:03,950 --> 00:43:10,850
you can employ at specific places in the

827
00:43:07,520 --> 00:43:14,070
network that have the characteristics to

828
00:43:10,850 --> 00:43:18,360
make this useful and having

829
00:43:14,070 --> 00:43:20,850
a sizable part of non congestive loss

830
00:43:18,360 --> 00:43:24,780
probably is a precondition to to make

831
00:43:20,850 --> 00:43:26,220
this really worthwhile so there is an

832
00:43:24,780 --> 00:43:27,990
assumption there is a controller

833
00:43:26,220 --> 00:43:29,730
somewhere that is looking at the network

834
00:43:27,990 --> 00:43:33,000
and has already has some measurement

835
00:43:29,730 --> 00:43:36,390
data and that helps you decide where to

836
00:43:33,000 --> 00:43:41,460
put a loop segment and and we are not to

837
00:43:36,390 --> 00:43:44,009
put one and the third observation is the

838
00:43:41,460 --> 00:43:46,380
the blue segments work best when they

839
00:43:44,010 --> 00:43:48,780
are shot so this is not supposed to be

840
00:43:46,380 --> 00:43:50,550
an edge-to-edge thing this is supposed

841
00:43:48,780 --> 00:43:53,970
to be in the network deeply in the

842
00:43:50,550 --> 00:43:56,790
network and the final observation when

843
00:43:53,970 --> 00:43:59,759
you think about this problem try to

844
00:43:56,790 --> 00:44:02,310
strike from your minds that a

845
00:43:59,760 --> 00:44:06,900
retransmission scheme has to do

846
00:44:02,310 --> 00:44:09,270
resequencing so most people who want to

847
00:44:06,900 --> 00:44:12,360
do that something in this space don't

848
00:44:09,270 --> 00:44:14,850
want to do resequencing many link layer

849
00:44:12,360 --> 00:44:17,430
solutions today have to do resequencing

850
00:44:14,850 --> 00:44:21,270
because the link layers are you find to

851
00:44:17,430 --> 00:44:24,120
be sequence preserving and also the the

852
00:44:21,270 --> 00:44:26,640
tunnel based solutions often do

853
00:44:24,120 --> 00:44:30,870
resequencing and this is pretty much

854
00:44:26,640 --> 00:44:33,180
about exploring the space where where

855
00:44:30,870 --> 00:44:39,180
you can have performance improvements

856
00:44:33,180 --> 00:44:42,750
without resequencing okay Thank You Joan

857
00:44:39,180 --> 00:44:46,529
and Yuen long you're next so that's one

858
00:44:42,750 --> 00:44:48,960
more presentation on use cases for this

859
00:44:46,530 --> 00:44:51,810
problem and then we're going to talk a

860
00:44:48,960 --> 00:44:53,430
little bit about solution sketches just

861
00:44:51,810 --> 00:44:55,590
in a matter of time keeping we're

862
00:44:53,430 --> 00:44:57,600
running a little late but I think this

863
00:44:55,590 --> 00:44:59,550
discussion is very useful and important

864
00:44:57,600 --> 00:45:01,560
to understand the problems but at some

865
00:44:59,550 --> 00:45:04,590
point we're going to you know draw a

866
00:45:01,560 --> 00:45:06,630
hard line and ensure that we get off

867
00:45:04,590 --> 00:45:10,770
questions answered as well so you're

868
00:45:06,630 --> 00:45:16,680
enforcing and forcing MTU size on time

869
00:45:10,770 --> 00:45:18,450
slots good job the problem is that the

870
00:45:16,680 --> 00:45:21,410
questions have come up make me think I

871
00:45:18,450 --> 00:45:21,410
need more in five minutes

872
00:45:23,000 --> 00:45:27,570
so anyway so I'm going to show you a

873
00:45:25,830 --> 00:45:31,740
couple pictures about satellite use case

874
00:45:27,570 --> 00:45:35,119
so basically you know today it's TCP we

875
00:45:31,740 --> 00:45:37,410
put a pep in there over satellite to

876
00:45:35,119 --> 00:45:39,660
optimize one of the things that

877
00:45:37,410 --> 00:45:42,180
optimizes is recovery from loss over the

878
00:45:39,660 --> 00:45:43,440
satellite link a particular thing that

879
00:45:42,180 --> 00:45:44,879
makes it a little different than what

880
00:45:43,440 --> 00:45:46,920
was talked about earlier is you're still

881
00:45:44,880 --> 00:45:49,440
going to be latency there even with a

882
00:45:46,920 --> 00:45:51,300
loose based solution but the key thing

883
00:45:49,440 --> 00:45:53,820
we're looking at though is with the move

884
00:45:51,300 --> 00:45:55,410
towards things like quick we can't do

885
00:45:53,820 --> 00:45:59,790
split TCP anymore

886
00:45:55,410 --> 00:46:01,410
so we need some kind of underlay as was

887
00:45:59,790 --> 00:46:04,470
pointed out you know we actually have

888
00:46:01,410 --> 00:46:05,970
proprietary solutions now so one of the

889
00:46:04,470 --> 00:46:08,399
questions a couple why are we looking

890
00:46:05,970 --> 00:46:10,169
potentially a sterilised one well one is

891
00:46:08,400 --> 00:46:11,790
maybe we can leverage open source

892
00:46:10,170 --> 00:46:15,020
solutions especially with respect to

893
00:46:11,790 --> 00:46:17,820
solutions that include more advanced FEC

894
00:46:15,020 --> 00:46:19,320
the other thing is for my future thing

895
00:46:17,820 --> 00:46:21,720
which is out of scope I think Ted

896
00:46:19,320 --> 00:46:23,340
brought it up even though right now

897
00:46:21,720 --> 00:46:25,980
we're not looking and going to the end

898
00:46:23,340 --> 00:46:28,140
host you need this this part in the

899
00:46:25,980 --> 00:46:30,359
middle to get there because I would like

900
00:46:28,140 --> 00:46:33,690
to optimize recovery over that Wi-Fi

901
00:46:30,359 --> 00:46:35,940
link at my remote site also so you know

902
00:46:33,690 --> 00:46:38,070
in the longer term I want to build on

903
00:46:35,940 --> 00:46:39,780
this solution to get to the point where

904
00:46:38,070 --> 00:46:41,280
I can actually recover because that's

905
00:46:39,780 --> 00:46:45,869
another thing that pept does for me is

906
00:46:41,280 --> 00:46:49,440
it gives me the local recovery at each

907
00:46:45,869 --> 00:46:51,690
of the three spaces so that's kind of

908
00:46:49,440 --> 00:46:53,310
where we're looking at it you know terms

909
00:46:51,690 --> 00:46:56,580
of why we're interested in this from the

910
00:46:53,310 --> 00:46:58,830
satellite what have you so I kept it

911
00:46:56,580 --> 00:47:01,430
under the 5 because I talk fast there

912
00:46:58,830 --> 00:47:01,430
any questions

913
00:47:02,990 --> 00:47:07,700
fantastic you'll recover two minutes oh

914
00:47:05,220 --> 00:47:07,700
no

915
00:47:10,490 --> 00:47:17,990
I'm going to create the problem here

916
00:47:12,350 --> 00:47:21,860
actually again with the chair we're

917
00:47:17,990 --> 00:47:25,549
actually having two drops that actually

918
00:47:21,860 --> 00:47:28,670
want to put fvc inside quick to deal

919
00:47:25,550 --> 00:47:32,869
with losses without having another layer

920
00:47:28,670 --> 00:47:35,240
so how do you go well how are you going

921
00:47:32,869 --> 00:47:37,820
to deal with essentially two layers of

922
00:47:35,240 --> 00:47:39,770
FEC one below which is what you want to

923
00:47:37,820 --> 00:47:42,680
do in loops and the one that we already

924
00:47:39,770 --> 00:47:46,490
have inside quick why do we need to

925
00:47:42,680 --> 00:47:49,609
loose well I I'm actually very

926
00:47:46,490 --> 00:47:51,589
interested in that solution also because

927
00:47:49,610 --> 00:47:53,000
I actually because it can learn

928
00:47:51,590 --> 00:47:55,760
something about the network and be very

929
00:47:53,000 --> 00:47:58,490
specific to the transport protocol this

930
00:47:55,760 --> 00:48:00,050
is more generic but also you know

931
00:47:58,490 --> 00:48:02,390
hopefully I would say I would set this

932
00:48:00,050 --> 00:48:04,340
up to be intelligent enough that I

933
00:48:02,390 --> 00:48:07,310
wouldn't use this one if I didn't need

934
00:48:04,340 --> 00:48:09,650
it if if it was there or maybe I use

935
00:48:07,310 --> 00:48:11,960
this one you know quick still going to

936
00:48:09,650 --> 00:48:13,700
have a learning curve to figure out that

937
00:48:11,960 --> 00:48:15,290
I'm going satellite-linked so I think

938
00:48:13,700 --> 00:48:16,129
they could play together but they are

939
00:48:15,290 --> 00:48:17,450
actually there's two different

940
00:48:16,130 --> 00:48:21,350
approaches and I'm actually interested

941
00:48:17,450 --> 00:48:24,069
in both solutions towards us the FEC

942
00:48:21,350 --> 00:48:28,250
inside quick is very interesting to me

943
00:48:24,070 --> 00:48:30,920
you know I think what I hear is that

944
00:48:28,250 --> 00:48:33,980
there seems to be a gathering of a ton

945
00:48:30,920 --> 00:48:35,960
of different pieces of information that

946
00:48:33,980 --> 00:48:38,060
come from a ton of different groups and

947
00:48:35,960 --> 00:48:40,580
research groups and I don't know one

948
00:48:38,060 --> 00:48:43,160
task that you guys want to to take is

949
00:48:40,580 --> 00:48:45,109
actually to see what exists and what has

950
00:48:43,160 --> 00:48:49,970
been done and what can actually be used

951
00:48:45,109 --> 00:48:51,740
here next slide set ok well thank you

952
00:48:49,970 --> 00:48:55,279
but what I'm saying is that yes there is

953
00:48:51,740 --> 00:48:56,890
going to be FEC inside quick and I hope

954
00:48:55,280 --> 00:48:59,119
that who do not work against one another

955
00:48:56,890 --> 00:49:00,770
yeah I guess one of the problems I have

956
00:48:59,119 --> 00:49:04,730
way you just said that you said there's

957
00:49:00,770 --> 00:49:07,250
going to be its research is it really

958
00:49:04,730 --> 00:49:11,500
good I have to say the reason that our

959
00:49:07,250 --> 00:49:14,300
draft is not in the quickly in the quick

960
00:49:11,500 --> 00:49:17,510
working group is because they are

961
00:49:14,300 --> 00:49:19,130
focusing on delivering the first version

962
00:49:17,510 --> 00:49:21,980
of the product yeah and we didn't want

963
00:49:19,130 --> 00:49:23,190
to come in too quick and with this FEC

964
00:49:21,980 --> 00:49:27,180
proposal and

965
00:49:23,190 --> 00:49:28,619
things up well and actually I will tell

966
00:49:27,180 --> 00:49:30,660
you that the way the draft is being

967
00:49:28,619 --> 00:49:32,400
structured right now it is not

968
00:49:30,660 --> 00:49:34,828
structured that their research draft it

969
00:49:32,400 --> 00:49:37,560
is structured as a working group draft

970
00:49:34,829 --> 00:49:40,410
but we're holding on to it so that lures

971
00:49:37,560 --> 00:49:43,470
can start sleeping at night and not

972
00:49:40,410 --> 00:49:46,290
figuring out that we have these people

973
00:49:43,470 --> 00:49:49,319
coming yet another add-on to quit that

974
00:49:46,290 --> 00:49:51,540
will the last two hours of sleep I added

975
00:49:49,319 --> 00:49:54,359
so yes it's inside the research group

976
00:49:51,540 --> 00:49:56,759
right now but it is not to be a research

977
00:49:54,359 --> 00:49:59,160
paper the strategy is the minute that

978
00:49:56,760 --> 00:50:01,109
these guys issue version one or whatever

979
00:49:59,160 --> 00:50:03,180
the stable version they have we are

980
00:50:01,109 --> 00:50:04,020
coming in the in the working group thank

981
00:50:03,180 --> 00:50:06,118
you okay

982
00:50:04,020 --> 00:50:10,950
yeah and I hope that's the way it works

983
00:50:06,119 --> 00:50:15,119
out I was trying to hedge my bets yeah

984
00:50:10,950 --> 00:50:19,290
cuz I I just wanted to say again we want

985
00:50:15,119 --> 00:50:23,190
to play the part to where the entrant

986
00:50:19,290 --> 00:50:25,529
protocol will be so of course yes we are

987
00:50:23,190 --> 00:50:29,579
considering if you see that is being

988
00:50:25,530 --> 00:50:32,369
done end to end so that's useful stuff

989
00:50:29,579 --> 00:50:35,970
going on and what loops can do is

990
00:50:32,369 --> 00:50:38,849
provide FEC in places in specific places

991
00:50:35,970 --> 00:50:41,790
in the network where it's needed and not

992
00:50:38,849 --> 00:50:45,150
having the overhead in other places so

993
00:50:41,790 --> 00:50:48,779
this is 100% complimentary and yes the

994
00:50:45,150 --> 00:50:51,720
fun part will be getting the to dynamic

995
00:50:48,780 --> 00:50:54,960
adaptation algorithms work together

996
00:50:51,720 --> 00:50:57,859
correctly that will be enjoyable and I'm

997
00:50:54,960 --> 00:50:57,859
looking forward to it

998
00:51:00,020 --> 00:51:05,220
well I don't have the research for that

999
00:51:03,630 --> 00:51:07,440
yet

1000
00:51:05,220 --> 00:51:10,950
but again there's a difference between a

1001
00:51:07,440 --> 00:51:15,210
protocol and a mechanism and we can

1002
00:51:10,950 --> 00:51:18,060
standardize things at different times so

1003
00:51:15,210 --> 00:51:20,119
when we understand good mechanisms to do

1004
00:51:18,060 --> 00:51:23,220
this optimally we should send analyzed

1005
00:51:20,119 --> 00:51:27,650
those and we should define a protocol

1006
00:51:23,220 --> 00:51:31,140
within which we can do these mechanisms

1007
00:51:27,650 --> 00:51:32,819
investigations actually I should

1008
00:51:31,140 --> 00:51:35,310
probably mention that we're kind of

1009
00:51:32,819 --> 00:51:36,120
getting towards the discussions that we

1010
00:51:35,310 --> 00:51:39,390
would have

1011
00:51:36,120 --> 00:51:41,670
at a chartering time for a working group

1012
00:51:39,390 --> 00:51:43,890
which it's now is not be honest out the

1013
00:51:41,670 --> 00:51:45,240
conversation we're having here but then

1014
00:51:43,890 --> 00:51:47,670
it is stuff that we have to think about

1015
00:51:45,240 --> 00:51:50,370
and probably stuff that has to appear in

1016
00:51:47,670 --> 00:51:53,510
the Charter but it's just not necessary

1017
00:51:50,370 --> 00:51:56,509
for us to know what to do next after

1018
00:51:53,510 --> 00:51:59,100
noon today

1019
00:51:56,510 --> 00:52:01,080
Lars Eiger chairing the quick working

1020
00:51:59,100 --> 00:52:03,150
group so we don't have fact on the

1021
00:52:01,080 --> 00:52:04,950
agenda at the moment on the agenda on

1022
00:52:03,150 --> 00:52:06,690
the Charter at the moment and while

1023
00:52:04,950 --> 00:52:09,180
there is significant interest in having

1024
00:52:06,690 --> 00:52:10,500
some sort of effect in quickly at the

1025
00:52:09,180 --> 00:52:12,149
moment it's it's if they're all

1026
00:52:10,500 --> 00:52:14,100
individual proposals right and and

1027
00:52:12,150 --> 00:52:16,140
there's no working group consensus on

1028
00:52:14,100 --> 00:52:18,390
what to do with this I will know that

1029
00:52:16,140 --> 00:52:19,980
that fact was actually part of Google

1030
00:52:18,390 --> 00:52:22,259
quick at some point it was removed at

1031
00:52:19,980 --> 00:52:24,270
least one particular way of doing effect

1032
00:52:22,260 --> 00:52:26,730
and quick because it didn't deliver on

1033
00:52:24,270 --> 00:52:28,410
the promise a new proposal for doing

1034
00:52:26,730 --> 00:52:30,570
second quick might be different thread

1035
00:52:28,410 --> 00:52:32,190
and better and and - to cause it to

1036
00:52:30,570 --> 00:52:35,390
perfect at the moment or if it is no

1037
00:52:32,190 --> 00:52:37,860
such plan on the charlie

1038
00:52:35,390 --> 00:52:39,660
thank you can have this visual image of

1039
00:52:37,860 --> 00:52:40,950
the new flick that the hordes are hiding

1040
00:52:39,660 --> 00:52:45,359
against the castle gate and as soon as

1041
00:52:40,950 --> 00:52:53,330
v1 drops we're gonna be I don't wanna

1042
00:52:45,360 --> 00:52:55,800
sleep now but I I so I think that

1043
00:52:53,330 --> 00:52:56,700
you know I came here to try to get a

1044
00:52:55,800 --> 00:53:00,270
better understanding of what the problem

1045
00:52:56,700 --> 00:53:03,210
is that that the blue who have used

1046
00:53:00,270 --> 00:53:05,850
cases feel they need to solve I think

1047
00:53:03,210 --> 00:53:07,230
that will inform some IETF activity

1048
00:53:05,850 --> 00:53:08,870
maybe it happens in a new working group

1049
00:53:07,230 --> 00:53:13,190
maybe happens an existing working group

1050
00:53:08,870 --> 00:53:15,540
and also to learn about some existing

1051
00:53:13,190 --> 00:53:16,800
proposed solutions to try to understand

1052
00:53:15,540 --> 00:53:18,090
what the solution space is you know

1053
00:53:16,800 --> 00:53:20,790
what's changed and what are people doing

1054
00:53:18,090 --> 00:53:23,130
so I think that the network coding is an

1055
00:53:20,790 --> 00:53:26,340
important piece of that quick is a piece

1056
00:53:23,130 --> 00:53:28,230
of that the the overlay stuff is a piece

1057
00:53:26,340 --> 00:53:30,210
of that so I don't see you know this is

1058
00:53:28,230 --> 00:53:31,620
an informational bar so we're just we're

1059
00:53:30,210 --> 00:53:32,790
not making decisions about what's gonna

1060
00:53:31,620 --> 00:53:34,799
happen we're trying to understand the

1061
00:53:32,790 --> 00:53:36,120
problem space and so I don't think we

1062
00:53:34,800 --> 00:53:37,800
need to have the argument about where

1063
00:53:36,120 --> 00:53:41,359
the work is going to happen we get to do

1064
00:53:37,800 --> 00:53:41,360
that in a we're going to performing Bach

1065
00:53:44,690 --> 00:53:48,770
Jinlong you're you're next

1066
00:53:57,809 --> 00:54:04,119
morning everyone this is John from China

1067
00:54:01,239 --> 00:54:06,849
Telecom and like I like to present a

1068
00:54:04,119 --> 00:54:10,569
petition scenario that loops could be

1069
00:54:06,849 --> 00:54:12,910
applicable as its mentioned in the draft

1070
00:54:10,569 --> 00:54:15,489
I will talk about a zombie six and base

1071
00:54:12,910 --> 00:54:18,700
that Enterprise one connection his kiss

1072
00:54:15,489 --> 00:54:21,789
for loops after say I will take a brief

1073
00:54:18,700 --> 00:54:24,519
introduction about the background China

1074
00:54:21,789 --> 00:54:27,759
is the largest public Internet backbone

1075
00:54:24,519 --> 00:54:30,910
network in China a melon provides Robin

1076
00:54:27,759 --> 00:54:34,660
Internet and a cloud access was for

1077
00:54:30,910 --> 00:54:38,170
public users and enterprise users their

1078
00:54:34,660 --> 00:54:42,519
entire network devices are ipv6 enabled

1079
00:54:38,170 --> 00:54:46,269
and we plan to support SRV Six Sigma

1080
00:54:42,519 --> 00:54:49,299
routing of ipv6 to provide the path

1081
00:54:46,269 --> 00:54:52,299
selection to me services array however

1082
00:54:49,299 --> 00:54:56,019
when we deploy some services of the

1083
00:54:52,299 --> 00:54:58,839
internet for example enterprise usually

1084
00:54:56,019 --> 00:55:02,288
require network connection between the

1085
00:54:58,839 --> 00:55:05,460
branch offices or between branch offices

1086
00:55:02,289 --> 00:55:09,339
and cloud data center over Geographic

1087
00:55:05,460 --> 00:55:12,789
distances the problem we encounter is

1088
00:55:09,339 --> 00:55:15,759
that the traffic over the Internet a

1089
00:55:12,789 --> 00:55:20,200
subject to lose during the best effort

1090
00:55:15,759 --> 00:55:25,150
networks so there is a urgent need to do

1091
00:55:20,200 --> 00:55:28,629
network optimization to provide high

1092
00:55:25,150 --> 00:55:32,309
quality internet for specific service

1093
00:55:28,630 --> 00:55:36,210
that needed the reliability of data

1094
00:55:32,309 --> 00:55:39,519
transform the following in the use case

1095
00:55:36,210 --> 00:55:43,960
as the picture shows there are two

1096
00:55:39,519 --> 00:55:46,930
branches of the enterprise which access

1097
00:55:43,960 --> 00:55:49,960
the internet through visa Vee for one

1098
00:55:46,930 --> 00:55:52,930
connection and recipe connects to a

1099
00:55:49,960 --> 00:55:55,920
cloud-based pub which further directs

1100
00:55:52,930 --> 00:55:59,769
the traffic to the PC for cloud access

1101
00:55:55,920 --> 00:56:02,619
you know we see PSO and they favor two

1102
00:55:59,769 --> 00:56:05,640
node in the network so it can be

1103
00:56:02,619 --> 00:56:11,440
enable with some whining I did services

1104
00:56:05,640 --> 00:56:13,960
to be provided from providers work so we

1105
00:56:11,440 --> 00:56:18,220
can see there are three typical services

1106
00:56:13,960 --> 00:56:22,660
deployed the yellow one the yellow line

1107
00:56:18,220 --> 00:56:25,720
represent one connection and the green I

1108
00:56:22,660 --> 00:56:29,910
represent the cloud axis and the red

1109
00:56:25,720 --> 00:56:33,730
line represent the DZ interconnection so

1110
00:56:29,910 --> 00:56:36,279
obviously we can say one we see p2

1111
00:56:33,730 --> 00:56:39,460
another vase EPE recipe to a cloud-based

1112
00:56:36,279 --> 00:56:40,210
pub pub to pub can be over a long

1113
00:56:39,460 --> 00:56:42,789
distance

1114
00:56:40,210 --> 00:56:46,210
which could be divided into multiple

1115
00:56:42,789 --> 00:56:50,490
Szabo paths based on a sorry six

1116
00:56:46,210 --> 00:56:55,210
segments but some of which must have

1117
00:56:50,490 --> 00:56:58,808
packages generally so this is the will

1118
00:56:55,210 --> 00:57:01,900
be of opportunity for loops which can be

1119
00:56:58,809 --> 00:57:06,400
enabled for the segments of the scible

1120
00:57:01,900 --> 00:57:11,109
paths to solve packet loss and provide

1121
00:57:06,400 --> 00:57:13,239
the better for path selection with with

1122
00:57:11,109 --> 00:57:15,460
this deployment we can provide her

1123
00:57:13,239 --> 00:57:19,960
County internet connection in terms of

1124
00:57:15,460 --> 00:57:23,109
loss rate so do you think it is so

1125
00:57:19,960 --> 00:57:28,359
applicable use case for loops that we

1126
00:57:23,109 --> 00:57:31,598
also should focus on and I think it can

1127
00:57:28,359 --> 00:57:35,200
be applied to the enterprise one

1128
00:57:31,599 --> 00:57:39,819
connections an area apart from that s

1129
00:57:35,200 --> 00:57:42,399
our v6 provider provide the path

1130
00:57:39,819 --> 00:57:45,400
selection naturally so it could be a

1131
00:57:42,400 --> 00:57:49,150
specific encapsulation protocol for

1132
00:57:45,400 --> 00:57:51,849
loops so it could be considered in the

1133
00:57:49,150 --> 00:57:53,410
following work so if you are also

1134
00:57:51,849 --> 00:57:56,499
interesting this topic

1135
00:57:53,410 --> 00:58:02,140
welcome more common and discussion thank

1136
00:57:56,499 --> 00:58:05,348
you okay thank you very much so the next

1137
00:58:02,140 --> 00:58:09,180
presentation is by Michael giving us

1138
00:58:05,349 --> 00:58:09,180
some ideas or solutions can look like

1139
00:58:11,490 --> 00:58:17,970
the Spencer has definitely started

1140
00:58:13,230 --> 00:58:22,559
trying mercy do my best to be yeah

1141
00:58:17,970 --> 00:58:27,899
double time here alright quick overview

1142
00:58:22,559 --> 00:58:29,400
of how loops could work I got the

1143
00:58:27,900 --> 00:58:31,680
impression from the discussion already

1144
00:58:29,400 --> 00:58:33,569
that some people tend to have a specific

1145
00:58:31,680 --> 00:58:35,098
image in the mind of how a loop system

1146
00:58:33,569 --> 00:58:37,550
is gonna work like it's definitely going

1147
00:58:35,099 --> 00:58:40,800
to affect or it's definitely gonna do

1148
00:58:37,550 --> 00:58:42,240
resequencing and I think none of these

1149
00:58:40,800 --> 00:58:43,800
things are none of these things are

1150
00:58:42,240 --> 00:58:45,750
decided yet so this is just an overview

1151
00:58:43,800 --> 00:58:47,339
of the possibilities that that we have

1152
00:58:45,750 --> 00:58:49,980
you know some things that we thought

1153
00:58:47,339 --> 00:58:52,078
about a strawman of the information that

1154
00:58:49,980 --> 00:58:53,910
would have to go between an ingress and

1155
00:58:52,079 --> 00:58:59,250
egress so that this whole thing could

1156
00:58:53,910 --> 00:59:02,609
operate that's you know the context for

1157
00:58:59,250 --> 00:59:04,589
the for the following details you know

1158
00:59:02,609 --> 00:59:08,130
we have data going into an ingress we

1159
00:59:04,589 --> 00:59:09,509
have data that's possibly encapsulated

1160
00:59:08,130 --> 00:59:10,770
not necessarily there are two

1161
00:59:09,510 --> 00:59:15,300
possibilities here and I'm going to

1162
00:59:10,770 --> 00:59:19,500
explain what's an egress the egress is

1163
00:59:15,300 --> 00:59:21,690
gonna act on AK or both and the ingress

1164
00:59:19,500 --> 00:59:25,230
is gonna reach transmit or it's gonna

1165
00:59:21,690 --> 00:59:27,869
use fetch or both not probably not but

1166
00:59:25,230 --> 00:59:30,030
we transmit or use FAQ and then well the

1167
00:59:27,869 --> 00:59:34,770
end goal is that much better data and

1168
00:59:30,030 --> 00:59:40,260
leaves tigress I mean more data less

1169
00:59:34,770 --> 00:59:42,000
death less testicle there so the

1170
00:59:40,260 --> 00:59:44,609
problems that we'll have to try to

1171
00:59:42,000 --> 00:59:45,930
address loss detection and regions

1172
00:59:44,609 --> 00:59:48,930
mission we need to somehow do something

1173
00:59:45,930 --> 00:59:54,270
about loss we need to well probably work

1174
00:59:48,930 --> 00:59:56,160
on fact then the will also be a need to

1175
00:59:54,270 --> 00:59:59,970
detect congestion that happens on the

1176
00:59:56,160 --> 01:00:01,290
path segment they will need to be some

1177
00:59:59,970 --> 01:00:03,359
measurement that will need to be some

1178
01:00:01,290 --> 01:00:05,460
congestion detection and we'll need to

1179
01:00:03,359 --> 01:00:07,230
think about how congestion is signal

1180
01:00:05,460 --> 01:00:10,740
towards the end hosts if it was if it

1181
01:00:07,230 --> 01:00:11,940
was detected can be done by dropping a

1182
01:00:10,740 --> 01:00:14,430
packet which is against the whole

1183
01:00:11,940 --> 01:00:16,530
purpose of loops but you could drop you

1184
01:00:14,430 --> 01:00:18,540
know a better packet in the last packet

1185
01:00:16,530 --> 01:00:22,140
could be done using ecn which is

1186
01:00:18,540 --> 01:00:23,609
preferable some concrete ideas on how

1187
01:00:22,140 --> 01:00:25,109
these things cooperate are coming now

1188
01:00:23,609 --> 01:00:26,730
but it's just a straw man

1189
01:00:25,110 --> 01:00:28,170
the two modes here that I'm going to

1190
01:00:26,730 --> 01:00:30,540
present to you the first is tunnel mode

1191
01:00:28,170 --> 01:00:33,230
which is I guess closer to what most of

1192
01:00:30,540 --> 01:00:35,640
the things are that you've seen so far

1193
01:00:33,230 --> 01:00:38,270
step one of the steps that you that

1194
01:00:35,640 --> 01:00:42,029
you've seen is encapsulation you would

1195
01:00:38,270 --> 01:00:46,170
on the ingress side encapsulated in

1196
01:00:42,030 --> 01:00:48,660
something we don't specify how yet you

1197
01:00:46,170 --> 01:00:51,570
know there are the document has caches

1198
01:00:48,660 --> 01:00:53,640
of gooey and of genève and how it could

1199
01:00:51,570 --> 01:00:55,260
be possibly done but the point is you

1200
01:00:53,640 --> 01:00:58,319
would encapsulate and add some

1201
01:00:55,260 --> 01:01:00,030
information that is necessary such that

1202
01:00:58,320 --> 01:01:03,480
we can reflect for instance sequence

1203
01:01:00,030 --> 01:01:05,160
numbers we can use you know proper X so

1204
01:01:03,480 --> 01:01:06,690
you need obviously right you need to

1205
01:01:05,160 --> 01:01:09,540
identify packets you need the sequence

1206
01:01:06,690 --> 01:01:12,720
number we identified also some other

1207
01:01:09,540 --> 01:01:15,350
information Tunnel type an actus arable

1208
01:01:12,720 --> 01:01:19,109
flag I get to what that is about quickly

1209
01:01:15,350 --> 01:01:23,160
next slide and whatever might may be

1210
01:01:19,110 --> 01:01:25,890
needed by a key so regarding exact

1211
01:01:23,160 --> 01:01:27,870
desirable flag there are two blocks that

1212
01:01:25,890 --> 01:01:31,290
are currently being envisioned for the

1213
01:01:27,870 --> 01:01:32,940
feedback this box would be just sent in

1214
01:01:31,290 --> 01:01:34,440
some way right it could be interspersed

1215
01:01:32,940 --> 01:01:36,750
it could be repeated they could be

1216
01:01:34,440 --> 01:01:38,340
piggybacked on packets but the point is

1217
01:01:36,750 --> 01:01:40,620
that there are two information blocks

1218
01:01:38,340 --> 01:01:42,300
that are transmitted from the receiving

1219
01:01:40,620 --> 01:01:45,660
from the ink from the egress back to the

1220
01:01:42,300 --> 01:01:47,190
ingress one is an optional bottle both

1221
01:01:45,660 --> 01:01:52,560
are optional they don't always have to

1222
01:01:47,190 --> 01:01:55,650
be included in every a key one would

1223
01:01:52,560 --> 01:01:58,080
contain the PSM this sequence number and

1224
01:01:55,650 --> 01:01:59,760
an absolute reception time such that we

1225
01:01:58,080 --> 01:02:02,000
get the delay signal that could then be

1226
01:01:59,760 --> 01:02:04,530
used for as a congestion indicator and

1227
01:02:02,000 --> 01:02:06,660
the other one building would contain an

1228
01:02:04,530 --> 01:02:08,460
occupied map that's based on the packet

1229
01:02:06,660 --> 01:02:11,190
sequence number and a delta indicating

1230
01:02:08,460 --> 01:02:16,350
the end of the the last psn of the

1231
01:02:11,190 --> 01:02:18,180
bitmap so that's the feedback and then

1232
01:02:16,350 --> 01:02:22,080
getting the feedback the ingress would

1233
01:02:18,180 --> 01:02:24,450
do something right it gets max or it

1234
01:02:22,080 --> 01:02:27,299
gets it so it learns about missing

1235
01:02:24,450 --> 01:02:31,680
missing sequence numbers from from this

1236
01:02:27,300 --> 01:02:33,300
occupied map or about catenaccio make a

1237
01:02:31,680 --> 01:02:36,080
decision that's somehow related to the

1238
01:02:33,300 --> 01:02:38,060
congestion estimate that it's taking

1239
01:02:36,080 --> 01:02:40,910
possibly use this young you know if that

1240
01:02:38,060 --> 01:02:43,340
if that works to somehow influence the

1241
01:02:40,910 --> 01:02:45,980
decision calculate late severe variation

1242
01:02:43,340 --> 01:02:50,750
from the timestamps in feedback blocks

1243
01:02:45,980 --> 01:02:53,660
and well and then it would either

1244
01:02:50,750 --> 01:02:58,220
retransmit or sent factory pair packets

1245
01:02:53,660 --> 01:03:00,710
depending on how design goes the egress

1246
01:02:58,220 --> 01:03:06,379
on forwarding it but you know effect is

1247
01:03:00,710 --> 01:03:08,240
used it would defect and it will have to

1248
01:03:06,380 --> 01:03:10,910
inform and holds about congestion if

1249
01:03:08,240 --> 01:03:13,640
needed so there is an opportunity here

1250
01:03:10,910 --> 01:03:15,740
to make it you know to to distinguish

1251
01:03:13,640 --> 01:03:17,359
between between congestion corruption

1252
01:03:15,740 --> 01:03:19,959
loss or some some other form of loss

1253
01:03:17,360 --> 01:03:25,570
loss that happens that isn't congestion

1254
01:03:19,960 --> 01:03:28,010
if we can do that something that I find

1255
01:03:25,570 --> 01:03:29,870
personally interesting about this as

1256
01:03:28,010 --> 01:03:32,120
people were saying you know this is what

1257
01:03:29,870 --> 01:03:34,220
introduced delay and it would you know

1258
01:03:32,120 --> 01:03:36,410
if you can't you know in the worst case

1259
01:03:34,220 --> 01:03:38,330
you know you'll have to you have to

1260
01:03:36,410 --> 01:03:41,470
inform the aunt systems about a lot loss

1261
01:03:38,330 --> 01:03:44,390
here I see that as an opportunity to

1262
01:03:41,470 --> 01:03:47,049
make use of ezn signaling you have an

1263
01:03:44,390 --> 01:03:49,370
systems today that uses yen and

1264
01:03:47,050 --> 01:03:51,350
basically no equipment inside the

1265
01:03:49,370 --> 01:03:53,359
network that makes use of ezn so here

1266
01:03:51,350 --> 01:03:55,190
there will be some equipment I could you

1267
01:03:53,360 --> 01:03:56,690
know basically you could turn a loss

1268
01:03:55,190 --> 01:04:00,050
notification into an easy end

1269
01:03:56,690 --> 01:04:02,330
notification with this right if you have

1270
01:04:00,050 --> 01:04:07,010
easy and capable sandals you can tell

1271
01:04:02,330 --> 01:04:09,770
them so that's a summary slide of the

1272
01:04:07,010 --> 01:04:11,600
information exchanged in tunnel mode on

1273
01:04:09,770 --> 01:04:13,430
forwarding the packet sequence number

1274
01:04:11,600 --> 01:04:14,870
tunnel type actually terrible flag that

1275
01:04:13,430 --> 01:04:17,109
would inform you that occasionally you

1276
01:04:14,870 --> 01:04:19,940
want to have this timestamp included

1277
01:04:17,110 --> 01:04:21,800
anything that's needed perfect and for

1278
01:04:19,940 --> 01:04:23,210
backward these two blocks one that

1279
01:04:21,800 --> 01:04:27,050
contains the timestamp the other one

1280
01:04:23,210 --> 01:04:29,330
that has this occupied map now just to

1281
01:04:27,050 --> 01:04:31,460
show that this whole thing could be done

1282
01:04:29,330 --> 01:04:34,460
in a much less intrusive way as well and

1283
01:04:31,460 --> 01:04:36,940
a very different way we get to this

1284
01:04:34,460 --> 01:04:40,100
transparent mode that's in the appendix

1285
01:04:36,940 --> 01:04:42,290
that's a bit more radical and the point

1286
01:04:40,100 --> 01:04:46,220
here is to to have the least intrusive

1287
01:04:42,290 --> 01:04:48,170
possible thing the goal is to never

1288
01:04:46,220 --> 01:04:49,250
delay anything and to not even tunnel

1289
01:04:48,170 --> 01:04:50,990
just

1290
01:04:49,250 --> 01:04:52,850
I'm just just discussing retransmission

1291
01:04:50,990 --> 01:04:54,169
you could do the same with FAQ you could

1292
01:04:52,850 --> 01:04:57,589
have all kinds of variations in between

1293
01:04:54,170 --> 01:04:59,810
the spectrum yeah but in the simplest

1294
01:04:57,590 --> 01:05:02,150
case you know you would on the on the

1295
01:04:59,810 --> 01:05:04,190
English side just forward and keep a

1296
01:05:02,150 --> 01:05:07,480
copy of the packets with the hash of a

1297
01:05:04,190 --> 01:05:10,040
packet so I you could identify it so

1298
01:05:07,480 --> 01:05:14,030
it's just taking a copy but forwarding

1299
01:05:10,040 --> 01:05:16,100
not adding any header or anything the

1300
01:05:14,030 --> 01:05:18,590
hash calculation made it many to include

1301
01:05:16,100 --> 01:05:20,390
data beyond IP but this is not relying

1302
01:05:18,590 --> 01:05:24,080
on a specific protocol anything it's

1303
01:05:20,390 --> 01:05:28,670
just taking the bytes and the egress

1304
01:05:24,080 --> 01:05:30,860
would answer in this idea here bodek it

1305
01:05:28,670 --> 01:05:32,810
couldn't neck right because we don't

1306
01:05:30,860 --> 01:05:36,380
have consecutively growing sequence

1307
01:05:32,810 --> 01:05:38,029
numbers we just have hashes and the AK

1308
01:05:36,380 --> 01:05:41,600
format could be similar to the tunnel

1309
01:05:38,030 --> 01:05:45,050
mode now the ingress upon seeing that

1310
01:05:41,600 --> 01:05:46,610
there's an RTO for one of the hashes

1311
01:05:45,050 --> 01:05:50,180
that it has it could make it make a

1312
01:05:46,610 --> 01:05:52,130
decision to retransmit packets that

1313
01:05:50,180 --> 01:05:55,220
could also be that should be done based

1314
01:05:52,130 --> 01:05:56,810
on a congestion estimate as before the

1315
01:05:55,220 --> 01:05:59,240
cost of a hash coalition in this whole

1316
01:05:56,810 --> 01:06:00,920
thing is kinda low because what that

1317
01:05:59,240 --> 01:06:02,959
would mean is you mister retransmit

1318
01:06:00,920 --> 01:06:04,430
opportunity if you if you have a hash

1319
01:06:02,960 --> 01:06:05,870
collision you just can't store it in

1320
01:06:04,430 --> 01:06:07,580
your cache so you've reduced the

1321
01:06:05,870 --> 01:06:11,839
probability of being able to reach and

1322
01:06:07,580 --> 01:06:14,779
submit something at the egress we'll

1323
01:06:11,840 --> 01:06:16,730
just forward so that that's you know in

1324
01:06:14,780 --> 01:06:17,990
that particular case that's all they

1325
01:06:16,730 --> 01:06:21,170
would be doing there wouldn't be any

1326
01:06:17,990 --> 01:06:25,069
reordering I think sending things on

1327
01:06:21,170 --> 01:06:27,110
without resequencing I mean yes you have

1328
01:06:25,070 --> 01:06:30,950
modern TCPS that can handle that well

1329
01:06:27,110 --> 01:06:33,440
you have rack you have experienced loss

1330
01:06:30,950 --> 01:06:35,390
detection mechanisms but I think it's

1331
01:06:33,440 --> 01:06:37,400
important to keep in mind that for TCP s

1332
01:06:35,390 --> 01:06:38,930
that don't have that or any mechanisms

1333
01:06:37,400 --> 01:06:40,460
that don't have that you know the worst

1334
01:06:38,930 --> 01:06:42,230
thing that would happen is that you

1335
01:06:40,460 --> 01:06:43,910
don't have the benefit of the region's

1336
01:06:42,230 --> 01:06:47,840
mission right it's not going to be any

1337
01:06:43,910 --> 01:06:50,359
worse if you just forward you just don't

1338
01:06:47,840 --> 01:06:52,100
have any benefit in in the worst case

1339
01:06:50,360 --> 01:06:54,230
then they're all done would be you

1340
01:06:52,100 --> 01:06:56,540
udp-based transports all kinds of

1341
01:06:54,230 --> 01:06:58,570
transports that might you know not have

1342
01:06:56,540 --> 01:07:01,009
a big problem with the reordering anyway

1343
01:06:58,570 --> 01:07:02,580
so there may not always be a need to

1344
01:07:01,010 --> 01:07:06,360
delay packets

1345
01:07:02,580 --> 01:07:07,770
sequencing to summarize this on

1346
01:07:06,360 --> 01:07:10,350
forwarding you wouldn't add anything

1347
01:07:07,770 --> 01:07:12,180
extra on back or backward you would have

1348
01:07:10,350 --> 01:07:14,430
roughly the same thing as before this

1349
01:07:12,180 --> 01:07:17,879
blocks one and two they would have to

1350
01:07:14,430 --> 01:07:22,770
look slightly different block one will

1351
01:07:17,880 --> 01:07:24,750
be limited in some way because this act

1352
01:07:22,770 --> 01:07:29,370
is Arabic flag doesn't exist we don't

1353
01:07:24,750 --> 01:07:32,340
have any forward information right yeah

1354
01:07:29,370 --> 01:07:34,500
and then everything is about hashes so

1355
01:07:32,340 --> 01:07:36,330
black two can't really have this

1356
01:07:34,500 --> 01:07:37,920
occupied map you know we could maybe you

1357
01:07:36,330 --> 01:07:40,880
have a bloom filter or something like

1358
01:07:37,920 --> 01:07:45,390
that some interesting way of encoding X

1359
01:07:40,880 --> 01:07:46,950
and that's that so the point is there's

1360
01:07:45,390 --> 01:07:48,569
a spectrum of possibilities here we're

1361
01:07:46,950 --> 01:07:52,169
not trying to nail it down to one

1362
01:07:48,570 --> 01:07:53,490
specific mechanism just yet rather the

1363
01:07:52,170 --> 01:07:55,590
idea could be that we could have a

1364
01:07:53,490 --> 01:08:00,390
framework that would allow to implement

1365
01:07:55,590 --> 01:08:02,790
several mechanisms in all cases it could

1366
01:08:00,390 --> 01:08:04,109
be pretty beneficial when the RTT on the

1367
01:08:02,790 --> 01:08:06,750
segment is much shorter than the

1368
01:08:04,110 --> 01:08:08,130
end-to-end rgt that's already well I

1369
01:08:06,750 --> 01:08:10,580
think these things have been said you

1370
01:08:08,130 --> 01:08:13,020
know while this next use that fact and

1371
01:08:10,580 --> 01:08:18,059
well I believe in the benefit of

1372
01:08:13,020 --> 01:08:19,799
reducing Talos yeah clarifying question

1373
01:08:18,060 --> 01:08:21,420
I don't I don't think that I mean we're

1374
01:08:19,799 --> 01:08:29,390
getting close to this lot of longer

1375
01:08:21,420 --> 01:08:29,390
discussions anyways oh yeah all right

1376
01:08:31,939 --> 01:08:35,119
[Music]

1377
01:08:36,089 --> 01:08:52,000
in excellent work on time management

1378
01:08:38,500 --> 01:08:54,158
thank you okay so so there are a number

1379
01:08:52,000 --> 01:08:55,960
of questions that come up with and again

1380
01:08:54,158 --> 01:09:01,599
and again some of them already have come

1381
01:08:55,960 --> 01:09:04,839
up just to answer a few of them so one

1382
01:09:01,600 --> 01:09:07,000
one misunderstanding you got early in

1383
01:09:04,839 --> 01:09:10,960
the process was that this was only for

1384
01:09:07,000 --> 01:09:13,868
encrypted traffic well it's for any

1385
01:09:10,960 --> 01:09:17,529
traffic and the message is that we can

1386
01:09:13,868 --> 01:09:22,389
work with encrypted traffic and loops

1387
01:09:17,529 --> 01:09:25,150
does not peak beyond layer three

1388
01:09:22,389 --> 01:09:29,259
well maybe the part numbers but not

1389
01:09:25,149 --> 01:09:32,198
beyond that so that doesn't mean that an

1390
01:09:29,259 --> 01:09:34,149
implementer couldn't apply some secret

1391
01:09:32,198 --> 01:09:36,250
sauce they still have from the pet days

1392
01:09:34,149 --> 01:09:39,040
and do wonderful things by digging

1393
01:09:36,250 --> 01:09:41,649
forward and combine them with groups but

1394
01:09:39,040 --> 01:09:43,479
we're not going to standardize those so

1395
01:09:41,649 --> 01:09:48,580
the solution we are discussing here is

1396
01:09:43,479 --> 01:09:52,209
based on don't look don't touch how do

1397
01:09:48,580 --> 01:09:59,800
we actually know which of the packets in

1398
01:09:52,210 --> 01:10:03,699
an aggregate are worth worth recovering

1399
01:09:59,800 --> 01:10:06,520
and the answer is Lukas doesn't have a

1400
01:10:03,699 --> 01:10:09,730
way to find out but there is a little

1401
01:10:06,520 --> 01:10:11,469
bit of an assumption that the the setup

1402
01:10:09,730 --> 01:10:15,280
mechanism the controller based setup

1403
01:10:11,469 --> 01:10:16,989
mechanism that you use for installing a

1404
01:10:15,280 --> 01:10:20,800
loops pair somewhere in the network

1405
01:10:16,989 --> 01:10:28,150
might also have a way for for the

1406
01:10:20,800 --> 01:10:29,920
ingress know to sort between the useful

1407
01:10:28,150 --> 01:10:35,170
recover ones and the ones where where

1408
01:10:29,920 --> 01:10:37,449
you wouldn't care Korea how how would he

1409
01:10:35,170 --> 01:10:40,480
have an insight into which ones were

1410
01:10:37,449 --> 01:10:44,138
better to recover well it might be part

1411
01:10:40,480 --> 01:10:45,049
number eighty-eight oh no so there may

1412
01:10:44,139 --> 01:10:47,150
be ways in

1413
01:10:45,050 --> 01:10:49,910
network you know oh this is an important

1414
01:10:47,150 --> 01:10:51,320
customer so we are going to to support

1415
01:10:49,910 --> 01:10:53,120
their application and this other

1416
01:10:51,320 --> 01:10:55,660
customer hasn't paid their dues so we

1417
01:10:53,120 --> 01:10:58,280
are not supporting their application

1418
01:10:55,660 --> 01:10:59,990
itself called Project something for

1419
01:10:58,280 --> 01:11:05,929
coming this completely out let's go out

1420
01:10:59,990 --> 01:11:08,960
of scope for this third question how do

1421
01:11:05,930 --> 01:11:12,940
we transport the measurement related

1422
01:11:08,960 --> 01:11:16,940
information or actually any reverse

1423
01:11:12,940 --> 01:11:19,660
informations so any measurement related

1424
01:11:16,940 --> 01:11:23,540
information that is going in the forward

1425
01:11:19,660 --> 01:11:26,150
direction probably would be put into the

1426
01:11:23,540 --> 01:11:28,790
encapsulation as a form of an extension

1427
01:11:26,150 --> 01:11:31,009
together with the sequence number so if

1428
01:11:28,790 --> 01:11:33,530
you would need to send a timestamp for

1429
01:11:31,010 --> 01:11:35,530
some reason we would put it there we're

1430
01:11:33,530 --> 01:11:39,290
not currently advocating for that and

1431
01:11:35,530 --> 01:11:41,440
the the reverse direction could be done

1432
01:11:39,290 --> 01:11:44,990
the same way we do with the AK

1433
01:11:41,440 --> 01:11:46,910
information so again that depends a bit

1434
01:11:44,990 --> 01:11:48,650
on the encapsulation if you have a

1435
01:11:46,910 --> 01:11:51,110
bi-directional tunnel you might be able

1436
01:11:48,650 --> 01:11:53,240
to piggyback it if your tunnel is Julie

1437
01:11:51,110 --> 01:11:55,070
directional you have to send several

1438
01:11:53,240 --> 01:11:58,330
packets for the X anyway and you can

1439
01:11:55,070 --> 01:12:01,570
include measurement information there

1440
01:11:58,330 --> 01:12:06,790
and you do the fullscreen thing again

1441
01:12:01,570 --> 01:12:06,790
code screen holds mean fullscreen

1442
01:12:07,540 --> 01:12:15,769
carsten yes David David black real quick

1443
01:12:12,200 --> 01:12:21,019
real quick note on your second FAQ which

1444
01:12:15,770 --> 01:12:22,910
says this is an l-3 only mechanism I

1445
01:12:21,020 --> 01:12:24,710
assume that's that that's intended to

1446
01:12:22,910 --> 01:12:26,660
scope for whatever whatever comes out of

1447
01:12:24,710 --> 01:12:29,720
here is that correct yes

1448
01:12:26,660 --> 01:12:31,550
okay one could point out and I apologize

1449
01:12:29,720 --> 01:12:32,810
not doing this during during the second

1450
01:12:31,550 --> 01:12:34,550
presentation and the satellite

1451
01:12:32,810 --> 01:12:36,710
presentation if you look at what a

1452
01:12:34,550 --> 01:12:40,100
satellite pepper does it does two things

1453
01:12:36,710 --> 01:12:41,840
one is it does some things here to to

1454
01:12:40,100 --> 01:12:44,210
deal with losses as soon as you can

1455
01:12:41,840 --> 01:12:46,460
figure out the size that something has

1456
01:12:44,210 --> 01:12:49,580
not bounced off the satellite the other

1457
01:12:46,460 --> 01:12:52,820
thing that it does is it MUX with the

1458
01:12:49,580 --> 01:12:53,990
transport protocol to grow the window

1459
01:12:52,820 --> 01:12:55,670
historically this was needed because

1460
01:12:53,990 --> 01:12:57,590
endpoints just didn't have enough

1461
01:12:55,670 --> 01:13:00,080
buffers to fill the pipe up with

1462
01:12:57,590 --> 01:13:01,940
satellite and back the former it would

1463
01:13:00,080 --> 01:13:04,580
be within scope for loops the latter

1464
01:13:01,940 --> 01:13:11,869
would be out and have to do it in the

1465
01:13:04,580 --> 01:13:17,630
transport protocol itself somehow okay

1466
01:13:11,869 --> 01:13:21,259
the question that comes up loops has

1467
01:13:17,630 --> 01:13:24,380
some cost even transparent load has some

1468
01:13:21,260 --> 01:13:26,599
cost because you have to send forward

1469
01:13:24,380 --> 01:13:28,010
and back the ancillary information how

1470
01:13:26,599 --> 01:13:31,040
do you know that this cost is actually

1471
01:13:28,010 --> 01:13:33,199
worth it and again we assume we have

1472
01:13:31,040 --> 01:13:37,250
some some Network intelligence some

1473
01:13:33,199 --> 01:13:39,559
controller thing that understands what's

1474
01:13:37,250 --> 01:13:41,929
going on in the network we may want to

1475
01:13:39,560 --> 01:13:44,869
put something in loops that might

1476
01:13:41,929 --> 01:13:47,570
actually enable the protocol to

1477
01:13:44,869 --> 01:13:52,040
dynamically be switched on and switched

1478
01:13:47,570 --> 01:13:55,009
off to make this quicker if the

1479
01:13:52,040 --> 01:13:58,280
assumption is something is providing the

1480
01:13:55,010 --> 01:14:04,099
information and providing the monitoring

1481
01:13:58,280 --> 01:14:06,019
that allows making that call yeah and I

1482
01:14:04,099 --> 01:14:09,580
think the the final question has been

1483
01:14:06,020 --> 01:14:12,409
answered but just to repeat we need

1484
01:14:09,580 --> 01:14:17,030
congestion relay we don't want to lose

1485
01:14:12,409 --> 01:14:20,230
information in this tunnel so we need to

1486
01:14:17,030 --> 01:14:24,500
do a dropping for non easy and capable

1487
01:14:20,230 --> 01:14:27,379
transports and yeah we can do this by by

1488
01:14:24,500 --> 01:14:29,300
dropping we can probably more usefully

1489
01:14:27,380 --> 01:14:31,730
do this by simply not doing

1490
01:14:29,300 --> 01:14:33,500
retransmissions when we know those would

1491
01:14:31,730 --> 01:14:37,820
be dropped for organization feedback

1492
01:14:33,500 --> 01:14:40,880
anyway okay so let's talk about related

1493
01:14:37,820 --> 01:14:42,980
work for a moment Cori has a better idea

1494
01:14:40,880 --> 01:14:47,659
I'm looking forward to him telling me

1495
01:14:42,980 --> 01:14:50,480
after the meeting so of course as we

1496
01:14:47,659 --> 01:14:55,009
said many of us have worked on systems

1497
01:14:50,480 --> 01:14:58,659
that did something like that some people

1498
01:14:55,010 --> 01:15:01,820
have first sent mail about interesting

1499
01:14:58,659 --> 01:15:04,460
papers about this we know that link

1500
01:15:01,820 --> 01:15:06,320
layers are doing that for us all the

1501
01:15:04,460 --> 01:15:10,389
time and if we look closely at these

1502
01:15:06,320 --> 01:15:13,540
link layers these are often tunnels

1503
01:15:10,389 --> 01:15:17,380
so yes this is being done and an

1504
01:15:13,540 --> 01:15:19,380
important part of the actual work will

1505
01:15:17,380 --> 01:15:24,369
be to get a better overview of what's

1506
01:15:19,380 --> 01:15:26,079
going on there does a custard so I'll

1507
01:15:24,369 --> 01:15:28,030
note that there's a lot of related work

1508
01:15:26,079 --> 01:15:30,040
as you say in the ITF but but the the

1509
01:15:28,030 --> 01:15:32,019
most sort of common thing that was

1510
01:15:30,040 --> 01:15:33,670
brought up today are pets and those we

1511
01:15:32,020 --> 01:15:35,949
don't have any idea because the vendors

1512
01:15:33,670 --> 01:15:41,230
of those boxes have had no interest in

1513
01:15:35,949 --> 01:15:44,110
an IGF standard ever right so I you know

1514
01:15:41,230 --> 01:15:47,980
has that changed it so bill those

1515
01:15:44,110 --> 01:15:49,329
vendors participate here or your are we

1516
01:15:47,980 --> 01:15:52,780
are we standardizing something that then

1517
01:15:49,329 --> 01:15:55,239
we'll never get actually shipped well I

1518
01:15:52,780 --> 01:15:56,530
can so I'm also about pimping is the

1519
01:15:55,239 --> 01:15:58,509
interest from the vendors that

1520
01:15:56,530 --> 01:16:00,400
traditionally this is very close to a

1521
01:15:58,510 --> 01:16:02,199
pet box but we don't standardize those

1522
01:16:00,400 --> 01:16:03,519
here we never have not for lack of

1523
01:16:02,199 --> 01:16:05,559
trying simple because the vendors

1524
01:16:03,520 --> 01:16:07,329
weren't interested has that changed at

1525
01:16:05,560 --> 01:16:09,730
other vendors that traditionally have

1526
01:16:07,329 --> 01:16:11,469
shipped these boxes for customers do

1527
01:16:09,730 --> 01:16:15,280
they want common standards in this space

1528
01:16:11,469 --> 01:16:19,329
now you think that's very much a

1529
01:16:15,280 --> 01:16:22,409
business decision for them well if they

1530
01:16:19,329 --> 01:16:24,460
decided that it's in their interest to

1531
01:16:22,409 --> 01:16:26,339
so what do you think that's a

1532
01:16:24,460 --> 01:16:36,969
prerequisite for doing this work yes I

1533
01:16:26,340 --> 01:16:39,489
don't things that is relevant here is

1534
01:16:36,969 --> 01:16:41,230
that that's a really good question for a

1535
01:16:39,489 --> 01:16:45,070
working group charter time

1536
01:16:41,230 --> 01:16:46,360
but I don't know if we're going to be

1537
01:16:45,070 --> 01:16:48,549
able to figure out the answer between

1538
01:16:46,360 --> 01:16:51,699
now and twelve o'clock that would guide

1539
01:16:48,550 --> 01:16:55,300
us on what we do after twelve o'clock so

1540
01:16:51,699 --> 01:16:57,699
I would encourage everybody to not have

1541
01:16:55,300 --> 01:17:00,130
a food fight about business models and

1542
01:16:57,699 --> 01:17:02,739
things like that but it is an important

1543
01:17:00,130 --> 01:17:06,880
question for us to talk about at charter

1544
01:17:02,739 --> 01:17:08,468
time I mean my answer would be that time

1545
01:17:06,880 --> 01:17:10,540
is playing for more and more software

1546
01:17:08,469 --> 01:17:13,030
based networks were much larger variety

1547
01:17:10,540 --> 01:17:14,739
of you know vendors are coming into play

1548
01:17:13,030 --> 01:17:16,719
so the opportunities I think are

1549
01:17:14,739 --> 01:17:18,428
something that we can try to leap onto

1550
01:17:16,719 --> 01:17:20,409
right now I don't think that traditional

1551
01:17:18,429 --> 01:17:21,980
hardware vendors might be the first ones

1552
01:17:20,409 --> 01:17:23,690
to pick up after the experience

1553
01:17:21,980 --> 01:17:29,540
was correctly recited but that's not the

1554
01:17:23,690 --> 01:17:31,549
market anymore alone today all right

1555
01:17:29,540 --> 01:17:37,400
Aaron Falk I want to respond to largest

1556
01:17:31,550 --> 01:17:41,140
point I think that I think that what

1557
01:17:37,400 --> 01:17:43,580
we've heard here is expression today of

1558
01:17:41,140 --> 01:17:45,410
operators who see this as a problem that

1559
01:17:43,580 --> 01:17:46,940
they want to have solved the fact that a

1560
01:17:45,410 --> 01:17:47,989
set of vendors doesn't want to solve

1561
01:17:46,940 --> 01:17:50,120
their problem for them is irrelevant

1562
01:17:47,989 --> 01:17:51,139
right somebody they want somebody step

1563
01:17:50,120 --> 01:17:52,640
forward and solve it they're asking you

1564
01:17:51,140 --> 01:17:53,960
if you have to do it if the ITF doesn't

1565
01:17:52,640 --> 01:17:55,790
do it then they'll find some other

1566
01:17:53,960 --> 01:17:59,930
solution that's what is what the pet

1567
01:17:55,790 --> 01:18:02,930
benders did so the economists word is

1568
01:17:59,930 --> 01:18:15,710
this is disruptive we don't need the

1569
01:18:02,930 --> 01:18:19,220
agendas that might be more discussion or

1570
01:18:15,710 --> 01:18:22,400
question no no we speak about pets but

1571
01:18:19,220 --> 01:18:25,430
this discussion is also relevant for all

1572
01:18:22,400 --> 01:18:27,620
the software define one equivalents that

1573
01:18:25,430 --> 01:18:29,360
are in the market today that are not

1574
01:18:27,620 --> 01:18:30,710
interoperable so if we want to

1575
01:18:29,360 --> 01:18:32,509
standardize something we may want them

1576
01:18:30,710 --> 01:18:35,180
to be to work together but there are

1577
01:18:32,510 --> 01:18:37,550
already lots of solutions that do this

1578
01:18:35,180 --> 01:18:40,400
kind of things and also something that I

1579
01:18:37,550 --> 01:18:45,830
think is missing if the discussions now

1580
01:18:40,400 --> 01:18:49,280
needs to distinguish whether the scope

1581
01:18:45,830 --> 01:18:51,260
is enterprise networks or public access

1582
01:18:49,280 --> 01:18:52,370
because as soon as we have public access

1583
01:18:51,260 --> 01:18:55,310
we have all these they're true

1584
01:18:52,370 --> 01:18:57,800
mechanisms that will break whatever we

1585
01:18:55,310 --> 01:19:08,690
just adding another layer on all the

1586
01:18:57,800 --> 01:19:10,130
existing layers okay I just want to give

1587
01:19:08,690 --> 01:19:12,530
a very specific example following

1588
01:19:10,130 --> 01:19:14,630
tallest comments regarding why we want

1589
01:19:12,530 --> 01:19:16,820
to standardize this for example we have

1590
01:19:14,630 --> 01:19:19,640
current we have an EMV function we have

1591
01:19:16,820 --> 01:19:21,320
vcp and the v8 way so they're possibly

1592
01:19:19,640 --> 01:19:24,550
provided by different different parties

1593
01:19:21,320 --> 01:19:24,549
so that's why I want to stand out

1594
01:19:27,890 --> 01:19:35,630
hi Stuart card critical technologies I

1595
01:19:31,320 --> 01:19:35,630
just have a couple of points on scoping

1596
01:19:35,719 --> 01:19:42,600
there's a focus on loss mitigation and

1597
01:19:39,170 --> 01:19:45,060
there's an assumption that we can really

1598
01:19:42,600 --> 01:19:46,770
only help when the round trip time on

1599
01:19:45,060 --> 01:19:48,449
the path segment is significantly

1600
01:19:46,770 --> 01:19:52,699
shorter than the end-to-end round trip

1601
01:19:48,449 --> 01:19:55,379
time neither of those need be the case

1602
01:19:52,699 --> 01:19:58,110
if you think of path segments as

1603
01:19:55,380 --> 01:20:01,350
essentially being transfer functions and

1604
01:19:58,110 --> 01:20:03,059
different path segments having different

1605
01:20:01,350 --> 01:20:06,270
statistical characteristics they are

1606
01:20:03,060 --> 01:20:07,980
different transfer functions and so the

1607
01:20:06,270 --> 01:20:09,719
end-to-end transport protocol is

1608
01:20:07,980 --> 01:20:13,409
presented with a composition of

1609
01:20:09,719 --> 01:20:17,670
functions that it may not be well able

1610
01:20:13,409 --> 01:20:18,809
to handle and so the different transport

1611
01:20:17,670 --> 01:20:20,760
protocols with which we are familiar

1612
01:20:18,810 --> 01:20:23,159
makes certain assumptions about those

1613
01:20:20,760 --> 01:20:25,469
statistical distributions and congestion

1614
01:20:23,159 --> 01:20:28,080
versus non congestion losses and so on

1615
01:20:25,469 --> 01:20:30,060
it may be that by simply taking a

1616
01:20:28,080 --> 01:20:32,010
segment that exhibits a different

1617
01:20:30,060 --> 01:20:33,750
statistical distribution that then the

1618
01:20:32,010 --> 01:20:36,719
end-to-end transport protocols are

1619
01:20:33,750 --> 01:20:39,840
anticipating and causing that segment to

1620
01:20:36,719 --> 01:20:42,270
conform more to the expected

1621
01:20:39,840 --> 01:20:44,820
distribution we may enhance end-to-end

1622
01:20:42,270 --> 01:20:48,210
performance even if the segments that we

1623
01:20:44,820 --> 01:20:51,210
are mitigating has a long round-trip

1624
01:20:48,210 --> 01:20:54,870
time and even if the underlying problem

1625
01:20:51,210 --> 01:20:56,699
is something other than laws yeah I

1626
01:20:54,870 --> 01:20:59,309
think that's particularly true if the

1627
01:20:56,699 --> 01:21:02,070
other segments contribute something to

1628
01:20:59,310 --> 01:21:03,510
how the decomposition feels in the end

1629
01:21:02,070 --> 01:21:06,299
the other segments segments are

1630
01:21:03,510 --> 01:21:11,190
completely lossless completely clear you

1631
01:21:06,300 --> 01:21:13,620
are not winning a lot Tom Harper so

1632
01:21:11,190 --> 01:21:16,980
thinking about the use cases this

1633
01:21:13,620 --> 01:21:20,130
actually looks a lot more like a piece

1634
01:21:16,980 --> 01:21:22,860
of QoS to me so we're basically offering

1635
01:21:20,130 --> 01:21:27,600
a well it does in the sense we're

1636
01:21:22,860 --> 01:21:29,759
offering a path with more reliability or

1637
01:21:27,600 --> 01:21:32,070
lower latency or something like that so

1638
01:21:29,760 --> 01:21:33,870
if you view it as that it sounds to me

1639
01:21:32,070 --> 01:21:35,909
like this could be considered one type

1640
01:21:33,870 --> 01:21:39,630
of QoS for a path and then something

1641
01:21:35,909 --> 01:21:40,679
like the pan or G or some of the other

1642
01:21:39,630 --> 01:21:44,100
efforts to make

1643
01:21:40,680 --> 01:21:46,860
qos aware networking might be applicable

1644
01:21:44,100 --> 01:21:48,390
so the application or the transport

1645
01:21:46,860 --> 01:21:50,759
layer may in fact know about this

1646
01:21:48,390 --> 01:21:52,550
information it could then adjust its

1647
01:21:50,760 --> 01:21:55,350
transport layer no you want to keep it

1648
01:21:52,550 --> 01:21:56,880
transparent to the end host but there

1649
01:21:55,350 --> 01:21:59,640
actually could be advantages if you

1650
01:21:56,880 --> 01:22:02,040
could somehow expose this to them yeah

1651
01:21:59,640 --> 01:22:04,440
there should could be advances to a path

1652
01:22:02,040 --> 01:22:07,080
away networking we are not solving this

1653
01:22:04,440 --> 01:22:11,910
problem in this room well I have a slide

1654
01:22:07,080 --> 01:22:13,830
on that one comment I know you want to

1655
01:22:11,910 --> 01:22:16,290
keep this completely independent and all

1656
01:22:13,830 --> 01:22:19,140
layer three but the second you have any

1657
01:22:16,290 --> 01:22:21,300
sort of multi path where you have you

1658
01:22:19,140 --> 01:22:22,770
can take possibly two segments you're

1659
01:22:21,300 --> 01:22:25,950
gonna have to make sure that you do that

1660
01:22:22,770 --> 01:22:27,270
per flow at the transport layer so it's

1661
01:22:25,950 --> 01:22:29,220
it's inevitable you're gonna have to

1662
01:22:27,270 --> 01:22:31,140
look beyond layer three or use the flow

1663
01:22:29,220 --> 01:22:41,010
label or an ipv6 or something like that

1664
01:22:31,140 --> 01:22:45,630
I just do one come up again when i was

1665
01:22:41,010 --> 01:22:50,280
III Brian Crandall my energy co-chair

1666
01:22:45,630 --> 01:22:53,640
had energy say it said like three times

1667
01:22:50,280 --> 01:22:57,059
so I was summoned um I would say that

1668
01:22:53,640 --> 01:22:58,950
the problems that we're trying to solve

1669
01:22:57,060 --> 01:23:00,060
here in loops are actually kind of

1670
01:22:58,950 --> 01:23:02,340
overlapped with a lot of the problems

1671
01:23:00,060 --> 01:23:04,020
that we're trying to solve energy the

1672
01:23:02,340 --> 01:23:05,340
approaches that we're looking at energy

1673
01:23:04,020 --> 01:23:07,410
are entirely different in that the

1674
01:23:05,340 --> 01:23:09,060
energy we're looking at taking the this

1675
01:23:07,410 --> 01:23:10,950
information whatever measurement

1676
01:23:09,060 --> 01:23:15,090
information you get from the path that

1677
01:23:10,950 --> 01:23:17,010
goes into the deeps ingress point we're

1678
01:23:15,090 --> 01:23:18,270
actually taking it and taking it all the

1679
01:23:17,010 --> 01:23:19,470
way to the endpoint right like so we

1680
01:23:18,270 --> 01:23:20,880
have a completely different name we want

1681
01:23:19,470 --> 01:23:24,030
to modify the endpoint so that it can do

1682
01:23:20,880 --> 01:23:25,740
paths where sort of stuff that being

1683
01:23:24,030 --> 01:23:27,120
said there's a big question going on in

1684
01:23:25,740 --> 01:23:28,889
panner G as to what is an endpoint is a

1685
01:23:27,120 --> 01:23:33,000
tunnel ingress midpoint also an endpoint

1686
01:23:28,890 --> 01:23:35,520
maybe I don't know so one of the

1687
01:23:33,000 --> 01:23:36,930
outcomes of this lake so things that are

1688
01:23:35,520 --> 01:23:38,100
a little bit less engineering uni a

1689
01:23:36,930 --> 01:23:39,990
little bit more research he could

1690
01:23:38,100 --> 01:23:41,340
certainly come over to panner G and be

1691
01:23:39,990 --> 01:23:43,050
digested a little while and then come

1692
01:23:41,340 --> 01:23:49,230
back to the idea I think that's that's a

1693
01:23:43,050 --> 01:23:51,780
way to do it so I Aaron Falk again I

1694
01:23:49,230 --> 01:23:53,620
just we shouldn't lose the sort of

1695
01:23:51,780 --> 01:23:56,920
initial insight from your

1696
01:23:53,620 --> 01:23:59,320
you're opening science which is that the

1697
01:23:56,920 --> 01:24:00,250
concept here is to fix packet loss close

1698
01:23:59,320 --> 01:24:05,019
to where it happens

1699
01:24:00,250 --> 01:24:07,170
which is not what and in fact or energy

1700
01:24:05,020 --> 01:24:09,730
stuff is trying to do now

1701
01:24:07,170 --> 01:24:11,080
maybe there are other benefits but

1702
01:24:09,730 --> 01:24:14,679
that's part of the trade-off space right

1703
01:24:11,080 --> 01:24:19,000
that if you know you're you have a good

1704
01:24:14,680 --> 01:24:20,950
put increase if you are able to do that

1705
01:24:19,000 --> 01:24:25,480
so I just think we shouldn't lose track

1706
01:24:20,950 --> 01:24:29,290
of that thank you okay now to my

1707
01:24:25,480 --> 01:24:32,080
presentation have really sad yet I

1708
01:24:29,290 --> 01:24:35,260
wanted to quickly point to four pieces

1709
01:24:32,080 --> 01:24:38,070
of work inside the aisle I eat EF and

1710
01:24:35,260 --> 01:24:43,450
actually in one case inside the IRT F

1711
01:24:38,070 --> 01:24:45,340
that are interesting in this context one

1712
01:24:43,450 --> 01:24:47,830
of course there's lots of work on

1713
01:24:45,340 --> 01:24:49,510
measurements and we want to stand on the

1714
01:24:47,830 --> 01:24:54,640
shoulders of those people and not on

1715
01:24:49,510 --> 01:24:57,550
their feet there is actually some work

1716
01:24:54,640 --> 01:24:59,650
already on ER loops like recovery thing

1717
01:24:57,550 --> 01:25:01,330
going on which you have noticed yet

1718
01:24:59,650 --> 01:25:05,759
because it's happening at the internet

1719
01:25:01,330 --> 01:25:10,809
layer there is the the network coding

1720
01:25:05,760 --> 01:25:12,820
Research Group work and the TSV work in

1721
01:25:10,810 --> 01:25:14,920
particular on sliding-window IVC I'm

1722
01:25:12,820 --> 01:25:16,840
singling this out because it seems to be

1723
01:25:14,920 --> 01:25:18,820
the next thing we want to touch but

1724
01:25:16,840 --> 01:25:21,070
there of course other things we want to

1725
01:25:18,820 --> 01:25:24,610
learn yet there and there is something

1726
01:25:21,070 --> 01:25:26,590
called tunnel congestion feedback so

1727
01:25:24,610 --> 01:25:32,500
let's talk about these four things

1728
01:25:26,590 --> 01:25:36,730
quickly I am or Institute OAM is used to

1729
01:25:32,500 --> 01:25:39,190
collect information within the package

1730
01:25:36,730 --> 01:25:42,879
why the package traverses a path between

1731
01:25:39,190 --> 01:25:48,400
two points in the network so it's about

1732
01:25:42,880 --> 01:25:50,200
hop hop hop hop information it might

1733
01:25:48,400 --> 01:25:55,150
return the measurement to a third party

1734
01:25:50,200 --> 01:25:58,420
using postcards and yeah my observation

1735
01:25:55,150 --> 01:26:00,480
would be loops is really about an

1736
01:25:58,420 --> 01:26:04,270
ingress and egress pair and not about

1737
01:26:00,480 --> 01:26:05,620
lots of hops so at some point we won't

1738
01:26:04,270 --> 01:26:09,070
may want to mix that

1739
01:26:05,620 --> 01:26:11,200
in some form so rubies may be able to

1740
01:26:09,070 --> 01:26:14,049
make use of information that i ôm

1741
01:26:11,200 --> 01:26:18,550
provides but right now this seems to be

1742
01:26:14,050 --> 01:26:22,030
a little bit different i also uses the

1743
01:26:18,550 --> 01:26:25,690
generic information model approach which

1744
01:26:22,030 --> 01:26:28,150
is not new in the IP PM community so we

1745
01:26:25,690 --> 01:26:32,040
can certainly learn something from there

1746
01:26:28,150 --> 01:26:36,099
so we can map our protocol to multiple

1747
01:26:32,040 --> 01:26:39,210
formats and speaking about formats the

1748
01:26:36,100 --> 01:26:42,840
data formats that the IP PM people have

1749
01:26:39,210 --> 01:26:46,720
developed and maybe some measurement

1750
01:26:42,840 --> 01:26:50,230
methods are of course things that may be

1751
01:26:46,720 --> 01:26:53,650
applicable so that's rated rogue number

1752
01:26:50,230 --> 01:26:56,919
one related work number two the 6lowpan

1753
01:26:53,650 --> 01:26:59,530
fragment recovery word came up in 2008

1754
01:26:56,920 --> 01:27:02,290
in the 600 plan but in a world where I

1755
01:26:59,530 --> 01:27:05,920
was to chairing it I have spent the last

1756
01:27:02,290 --> 01:27:08,980
10 years mainly and in trying it not to

1757
01:27:05,920 --> 01:27:12,430
make sure it doesn't happen but at some

1758
01:27:08,980 --> 01:27:14,049
point the 6lowpan group was decided to

1759
01:27:12,430 --> 01:27:17,650
replace but the 6-2 working group and so

1760
01:27:14,050 --> 01:27:19,510
on and this is now no down it has passed

1761
01:27:17,650 --> 01:27:23,170
working with last call in the 6th over

1762
01:27:19,510 --> 01:27:24,370
Europe and we'll hit the iesg soon now

1763
01:27:23,170 --> 01:27:26,860
this is a little bit different because

1764
01:27:24,370 --> 01:27:30,010
it's about fragments within a packet

1765
01:27:26,860 --> 01:27:33,190
it's not about packets and and a number

1766
01:27:30,010 --> 01:27:35,590
of parameters constrain the situation a

1767
01:27:33,190 --> 01:27:37,839
lot so that actually may be more

1768
01:27:35,590 --> 01:27:44,110
attractable than it would have been in

1769
01:27:37,840 --> 01:27:46,690
the global Internet and yeah of course

1770
01:27:44,110 --> 01:27:50,620
again the congestion control issues the

1771
01:27:46,690 --> 01:27:54,190
the interesting one and the question

1772
01:27:50,620 --> 01:27:55,120
about the control loops working against

1773
01:27:54,190 --> 01:27:58,089
each other

1774
01:27:55,120 --> 01:28:00,820
so this is work that's going on and I

1775
01:27:58,090 --> 01:28:03,130
would expect other pieces of work will

1776
01:28:00,820 --> 01:28:06,009
be going on in the ITF at some point

1777
01:28:03,130 --> 01:28:07,660
when it's really needed so I think it

1778
01:28:06,010 --> 01:28:10,270
would be good to bring these things

1779
01:28:07,660 --> 01:28:12,670
together in groups I mean I don't mean

1780
01:28:10,270 --> 01:28:16,550
stopping this work but just learning

1781
01:28:12,670 --> 01:28:21,239
from it and going forward

1782
01:28:16,550 --> 01:28:26,369
the sliding window fec I think is

1783
01:28:21,239 --> 01:28:29,190
interesting which has has left the

1784
01:28:26,369 --> 01:28:34,920
network according research group and is

1785
01:28:29,190 --> 01:28:39,509
now in TS vwg draft and that's certainly

1786
01:28:34,920 --> 01:28:46,380
something that will go into a good

1787
01:28:39,510 --> 01:28:49,590
loop's solution and finally there is the

1788
01:28:46,380 --> 01:28:53,429
channel congestion feedback framework

1789
01:28:49,590 --> 01:28:57,329
well yeah this is one one more of those

1790
01:28:53,429 --> 01:29:01,369
TS WG drafts they've like mentioned a

1791
01:28:57,329 --> 01:29:05,489
few more ones that we may want to use

1792
01:29:01,369 --> 01:29:08,598
there is an IP fix mapping in there we

1793
01:29:05,489 --> 01:29:11,159
may want to use that as a source of

1794
01:29:08,599 --> 01:29:15,929
information elements that need to be

1795
01:29:11,159 --> 01:29:18,719
part of loops okay I'm doing this really

1796
01:29:15,929 --> 01:29:22,289
quickly I just want to say what is

1797
01:29:18,719 --> 01:29:24,989
really out of scope of loops and really

1798
01:29:22,289 --> 01:29:27,420
the the litmus test here is do you need

1799
01:29:24,989 --> 01:29:31,289
host participation to make this happen

1800
01:29:27,420 --> 01:29:36,090
and well Panaji is about host

1801
01:29:31,289 --> 01:29:38,039
participation Erin sorry I just I just

1802
01:29:36,090 --> 01:29:39,780
want to challenge your framing of this

1803
01:29:38,039 --> 01:29:42,300
question because it seems to me that you

1804
01:29:39,780 --> 01:29:43,849
know we're motivating this by several

1805
01:29:42,300 --> 01:29:47,340
operators who say they have a problem

1806
01:29:43,849 --> 01:29:49,110
you know I think would be they haven't

1807
01:29:47,340 --> 01:29:51,059
said that the host participation is

1808
01:29:49,110 --> 01:29:53,009
impossible from their point of view that

1809
01:29:51,059 --> 01:29:54,840
it is that it is a it's a requirement

1810
01:29:53,010 --> 01:29:56,190
that the host cannot participate I'd be

1811
01:29:54,840 --> 01:29:58,710
interested in knowing whether that's

1812
01:29:56,190 --> 01:30:00,589
actually the case or not yeah maybe I

1813
01:29:58,710 --> 01:30:05,489
should have been more specific because

1814
01:30:00,590 --> 01:30:08,099
in the slide that John showed you have

1815
01:30:05,489 --> 01:30:10,138
this leaps loops thing in one of the end

1816
01:30:08,099 --> 01:30:12,059
hosts but the interesting thing about

1817
01:30:10,139 --> 01:30:14,249
this loose thing is in an actual

1818
01:30:12,059 --> 01:30:17,460
implementation this would be in the VPN

1819
01:30:14,249 --> 01:30:20,880
layer it would not influence the

1820
01:30:17,460 --> 01:30:22,019
transport layer in the host so you're

1821
01:30:20,880 --> 01:30:23,550
talking about the solution not the

1822
01:30:22,019 --> 01:30:26,159
problem I'm trying to understand the

1823
01:30:23,550 --> 01:30:28,889
problem right yes I don't care whether

1824
01:30:26,159 --> 01:30:29,730
loops is the solution yet until I

1825
01:30:28,889 --> 01:30:32,340
understand what the

1826
01:30:29,730 --> 01:30:35,639
that is trying to get off like if I

1827
01:30:32,340 --> 01:30:38,070
could just do it your interrupt here it

1828
01:30:35,640 --> 01:30:39,180
would have been reasonable for us to say

1829
01:30:38,070 --> 01:30:41,880
at the beginning of Carson's

1830
01:30:39,180 --> 01:30:47,460
presentation that this is Carson's view

1831
01:30:41,880 --> 01:30:48,989
and these are the things that the we

1832
01:30:47,460 --> 01:30:51,210
could talk about a chart you know and

1833
01:30:48,989 --> 01:30:54,360
probably really a charter time so it's

1834
01:30:51,210 --> 01:30:57,930
not necessary for us to to figure out

1835
01:30:54,360 --> 01:30:59,940
what all the linkages are really but to

1836
01:30:57,930 --> 01:31:02,870
figure out where we need to be with you

1837
01:30:59,940 --> 01:31:06,950
know with observations like Erin's so

1838
01:31:02,870 --> 01:31:10,170
thank you yeah thank you that thank you

1839
01:31:06,950 --> 01:31:12,480
so it's almost like that did I hear you

1840
01:31:10,170 --> 01:31:18,630
it's out of scope from my current of

1841
01:31:12,480 --> 01:31:20,309
three years yeah but I mean why because

1842
01:31:18,630 --> 01:31:21,750
we want to solve the tractable problem

1843
01:31:20,310 --> 01:31:24,600
first before we do the interactive real

1844
01:31:21,750 --> 01:31:26,810
ones and how do you make the judgment

1845
01:31:24,600 --> 01:31:33,090
call about what's tractable or not

1846
01:31:26,810 --> 01:31:35,130
shorter time yes I'd say I mean there is

1847
01:31:33,090 --> 01:31:37,739
there there is no reason to try to

1848
01:31:35,130 --> 01:31:39,870
constrain you know the specification of

1849
01:31:37,739 --> 01:31:43,049
the solution to something that you must

1850
01:31:39,870 --> 01:31:47,599
not deploy however you figure out also

1851
01:31:43,050 --> 01:31:52,140
on the Intel's right the point is that

1852
01:31:47,600 --> 01:31:55,320
this thing works best if there is not a

1853
01:31:52,140 --> 01:31:57,900
deployability block that is caused by

1854
01:31:55,320 --> 01:32:00,210
hosts this is really what I'm trying to

1855
01:31:57,900 --> 01:32:03,599
say nobody said you must deploy it on

1856
01:32:00,210 --> 01:32:05,640
the host the the the the way I perceived

1857
01:32:03,600 --> 01:32:09,540
what you were saying is that you exclude

1858
01:32:05,640 --> 01:32:14,400
the you know option to even do it on the

1859
01:32:09,540 --> 01:32:17,730
host or the host is a node I think the

1860
01:32:14,400 --> 01:32:19,950
question has been noted you end the

1861
01:32:17,730 --> 01:32:23,759
community needs to be aware of that

1862
01:32:19,950 --> 01:32:26,910
question as we discuss things further so

1863
01:32:23,760 --> 01:32:30,420
I think this really helps clarifying the

1864
01:32:26,910 --> 01:32:33,510
concern yeah so the point is if we do

1865
01:32:30,420 --> 01:32:39,210
this right it doesn't require host

1866
01:32:33,510 --> 01:32:41,370
people to do something now there is one

1867
01:32:39,210 --> 01:32:43,030
other thing for instance the the spin

1868
01:32:41,370 --> 01:32:46,120
bit discussion in increase

1869
01:32:43,030 --> 01:32:51,340
if that creates something that could be

1870
01:32:46,120 --> 01:32:53,860
used that's great if the problem that

1871
01:32:51,340 --> 01:32:57,040
you're trying to solve with loops is on

1872
01:32:53,860 --> 01:33:00,849
the last or first help to the host how

1873
01:32:57,040 --> 01:33:04,030
do you solve it well maybe solving it

1874
01:33:00,850 --> 01:33:06,610
second the difference between the the in

1875
01:33:04,030 --> 01:33:09,070
network case and the case where the host

1876
01:33:06,610 --> 01:33:10,750
is involved is that with the host a

1877
01:33:09,070 --> 01:33:12,909
number of additional considerations come

1878
01:33:10,750 --> 01:33:15,280
in like how do you actually do the setup

1879
01:33:12,909 --> 01:33:18,040
what are the privacy considerations and

1880
01:33:15,280 --> 01:33:19,780
so on know as you yes you just brought

1881
01:33:18,040 --> 01:33:23,019
the example right if you basically

1882
01:33:19,780 --> 01:33:24,699
simply do it sure implementation

1883
01:33:23,020 --> 01:33:27,219
questions decide just you know as part

1884
01:33:24,699 --> 01:33:28,839
of the network layer in the host stack

1885
01:33:27,219 --> 01:33:30,639
then you're having exactly the same

1886
01:33:28,840 --> 01:33:32,920
architectural model you're just also

1887
01:33:30,639 --> 01:33:34,900
able to include the first last hops yes

1888
01:33:32,920 --> 01:33:36,670
in the solution so I don't think we

1889
01:33:34,900 --> 01:33:39,460
should go beyond that but that option

1890
01:33:36,670 --> 01:33:42,760
certainly shouldn't be excluded so I

1891
01:33:39,460 --> 01:33:45,870
think we are actually moving past the

1892
01:33:42,760 --> 01:33:48,760
end of Carson's last slide and into

1893
01:33:45,870 --> 01:33:51,370
technical discussion so like to thank

1894
01:33:48,760 --> 01:33:57,190
you Carson program leaving this section

1895
01:33:51,370 --> 01:34:01,239
of the are for sharing the maps and gaps

1896
01:33:57,190 --> 01:34:04,030
analysis that you've done so far very

1897
01:34:01,239 --> 01:34:10,209
helpful and I think we are - open mic

1898
01:34:04,030 --> 01:34:12,610
time we have a timer running for just a

1899
01:34:10,210 --> 01:34:15,250
little under 17 minutes for us to talk

1900
01:34:12,610 --> 01:34:16,989
and then we have ten minute we measure

1901
01:34:15,250 --> 01:34:19,270
will go off and we'll have like 10

1902
01:34:16,989 --> 01:34:23,739
minutes to talk about humps and things

1903
01:34:19,270 --> 01:34:26,880
like that so please make please make

1904
01:34:23,739 --> 01:34:30,820
your comments please make them succinct

1905
01:34:26,880 --> 01:34:34,870
Brandon Williams Akamai just one quick

1906
01:34:30,820 --> 01:34:37,509
thing about the previous talk for

1907
01:34:34,870 --> 01:34:39,900
completeness Network coding research

1908
01:34:37,510 --> 01:34:43,449
group is also looking specifically

1909
01:34:39,900 --> 01:34:46,420
satellite use cases it would be valuable

1910
01:34:43,449 --> 01:34:48,599
for for you to track that as well thank

1911
01:34:46,420 --> 01:34:48,600
you

1912
01:34:49,340 --> 01:34:54,920
but Briscoe again I just wanna I said I

1913
01:34:52,610 --> 01:34:57,080
might come back to this and I'm coming

1914
01:34:54,920 --> 01:35:01,940
back to it I've not heard an answer to

1915
01:34:57,080 --> 01:35:05,540
the question I don't get why you want to

1916
01:35:01,940 --> 01:35:07,940
do something on an overlay that's

1917
01:35:05,540 --> 01:35:10,700
relatively easy on a link and the link

1918
01:35:07,940 --> 01:35:12,860
if the link knows it's bad it do it

1919
01:35:10,700 --> 01:35:16,160
because they want to sell their

1920
01:35:12,860 --> 01:35:17,599
technology so why try and fix something

1921
01:35:16,160 --> 01:35:19,130
that someone else has got the motivation

1922
01:35:17,600 --> 01:35:21,280
to fix anyway and they can do it really

1923
01:35:19,130 --> 01:35:24,470
easily and it's really difficult to do

1924
01:35:21,280 --> 01:35:37,940
just slightly above that layer it just

1925
01:35:24,470 --> 01:35:41,510
doesn't make sense to me that's actually

1926
01:35:37,940 --> 01:35:50,120
interesting because in a rational world

1927
01:35:41,510 --> 01:35:56,750
you would be right but there's a bad

1928
01:35:50,120 --> 01:36:00,280
coming years if there's a ssin may not

1929
01:35:56,750 --> 01:36:03,370
be the person that owns the name yeah

1930
01:36:00,280 --> 01:36:08,540
that's the answer to the question are

1931
01:36:03,370 --> 01:36:15,710
you talking equipment build a person or

1932
01:36:08,540 --> 01:36:17,780
operator person yes both but what I was

1933
01:36:15,710 --> 01:36:23,420
saying is that those that develop

1934
01:36:17,780 --> 01:36:25,210
technology have a standard idea at they

1935
01:36:23,420 --> 01:36:28,490
are chiefly or whatever link technology

1936
01:36:25,210 --> 01:36:31,130
they they have a perfectly good

1937
01:36:28,490 --> 01:36:33,050
motivation to do link layer

1938
01:36:31,130 --> 01:36:42,110
retransmission if it's going to make

1939
01:36:33,050 --> 01:36:43,820
their link better so I'm no longer a

1940
01:36:42,110 --> 01:36:46,849
satellite person so John can stand up

1941
01:36:43,820 --> 01:36:48,730
and correct me but just use a satellite

1942
01:36:46,850 --> 01:36:52,240
link as an example but it you know any

1943
01:36:48,730 --> 01:36:57,589
any physical layer right when you design

1944
01:36:52,240 --> 01:36:58,880
the data transmission for the link you

1945
01:36:57,590 --> 01:37:00,440
basically make an effort I'm going to

1946
01:36:58,880 --> 01:37:01,730
try so hard to get the data through and

1947
01:37:00,440 --> 01:37:03,019
then at some point I'm going to give up

1948
01:37:01,730 --> 01:37:04,309
and there's sort of an economics

1949
01:37:03,020 --> 01:37:05,660
they're like you know how much data can

1950
01:37:04,310 --> 01:37:07,790
I consistently get through under what

1951
01:37:05,660 --> 01:37:09,440
conditions you make an assumption on how

1952
01:37:07,790 --> 01:37:10,790
that link is going to be used by the

1953
01:37:09,440 --> 01:37:12,710
person who designs and runs the link

1954
01:37:10,790 --> 01:37:14,360
often knows very little about the

1955
01:37:12,710 --> 01:37:17,990
application and within the application

1956
01:37:14,360 --> 01:37:19,580
owners or the various parties that are

1957
01:37:17,990 --> 01:37:22,099
in between the app the the end

1958
01:37:19,580 --> 01:37:24,050
application user and the link designer

1959
01:37:22,100 --> 01:37:27,710
may have very different ideas of how

1960
01:37:24,050 --> 01:37:30,530
that link is going to be used and if if

1961
01:37:27,710 --> 01:37:31,100
the link is better than they need nobody

1962
01:37:30,530 --> 01:37:33,080
complains

1963
01:37:31,100 --> 01:37:35,450
except maybe about price the only goes

1964
01:37:33,080 --> 01:37:37,430
worse than they need then you then some

1965
01:37:35,450 --> 01:37:39,019
other party has to try to improve the

1966
01:37:37,430 --> 01:37:40,640
data throughput right and that's what

1967
01:37:39,020 --> 01:37:42,770
we're talking about now right the in

1968
01:37:40,640 --> 01:37:44,600
going the assumption here is that the

1969
01:37:42,770 --> 01:37:46,640
link is not good enough right otherwise

1970
01:37:44,600 --> 01:37:48,470
you don't deploy this at all yet once

1971
01:37:46,640 --> 01:37:50,790
the link is if the link is good enough

1972
01:37:48,470 --> 01:37:53,110
then we don't have this conversation

1973
01:37:50,790 --> 01:37:56,450
[Music]

1974
01:37:53,110 --> 01:38:00,080
Danny the other case that you talked

1975
01:37:56,450 --> 01:38:02,840
about is we are that the person who

1976
01:38:00,080 --> 01:38:05,630
wants to make the optimization sees a

1977
01:38:02,840 --> 01:38:08,150
path that person doesn't have access to

1978
01:38:05,630 --> 01:38:11,080
all the individual links okay has the

1979
01:38:08,150 --> 01:38:14,780
part and it once said they want to

1980
01:38:11,080 --> 01:38:16,390
optimize the usage of their path but I

1981
01:38:14,780 --> 01:38:20,170
actually wanted to give another example

1982
01:38:16,390 --> 01:38:23,020
we are what you said it's not working

1983
01:38:20,170 --> 01:38:28,010
either net is standardized by Triple E

1984
01:38:23,020 --> 01:38:30,560
and wireless Wi-Fi is kind of trying to

1985
01:38:28,010 --> 01:38:34,100
be like either and there is one

1986
01:38:30,560 --> 01:38:36,980
constraint in Ethernet that IP doesn't

1987
01:38:34,100 --> 01:38:39,980
have which is even as the sequence

1988
01:38:36,980 --> 01:38:42,410
preserving IP is not sequence designer

1989
01:38:39,980 --> 01:38:44,450
so we can do things at layer 3 that you

1990
01:38:42,410 --> 01:38:47,360
came up to weight layer 2 which is weird

1991
01:38:44,450 --> 01:38:50,090
but it's the current situation yeah I

1992
01:38:47,360 --> 01:38:52,790
was just thinking - Aaron had said no I

1993
01:38:50,090 --> 01:38:54,320
was thinking that they big change that

1994
01:38:52,790 --> 01:38:56,360
you're proposing needs to be split into

1995
01:38:54,320 --> 01:39:00,080
two parts the other I power on the

1996
01:38:56,360 --> 01:39:01,759
sequence not preserving pop and and and

1997
01:39:00,080 --> 01:39:03,320
once the link people know they don't

1998
01:39:01,760 --> 01:39:05,810
have to keep the thing from sequence

1999
01:39:03,320 --> 01:39:08,330
preserved then they've got a different

2000
01:39:05,810 --> 01:39:11,330
way of fixing their links you know

2001
01:39:08,330 --> 01:39:13,220
currently they do it to a certain level

2002
01:39:11,330 --> 01:39:14,510
and then they think I can't wait any

2003
01:39:13,220 --> 01:39:15,500
longer to get this retransmission

2004
01:39:14,510 --> 01:39:15,770
because I've got to keep everything in

2005
01:39:15,500 --> 01:39:17,690
order

2006
01:39:15,770 --> 01:39:23,020
I'm buttering up a receiver but if they

2007
01:39:17,690 --> 01:39:23,019
can relax that constraint then we don't

2008
01:39:24,010 --> 01:39:32,390
well the paper I sent on me on the loops

2009
01:39:29,480 --> 01:39:34,700
list a couple of days ago says how you

2010
01:39:32,390 --> 01:39:37,750
can now know where the racks being used

2011
01:39:34,700 --> 01:39:46,130
or not and so or something like

2012
01:39:37,750 --> 01:39:48,650
something that's less order okay so Cory

2013
01:39:46,130 --> 01:39:50,030
first and we said was it a transport

2014
01:39:48,650 --> 01:39:52,490
thing if you start fiddling with

2015
01:39:50,030 --> 01:39:53,929
ordering and changing the transport

2016
01:39:52,490 --> 01:40:04,030
properties of your path and this is

2017
01:39:53,930 --> 01:40:04,030
certainly a transport topic Tom Herbert

2018
01:40:05,290 --> 01:40:11,390
so to me it seems like the biggest now

2019
01:40:09,560 --> 01:40:14,750
use case of something like loops would

2020
01:40:11,390 --> 01:40:17,360
be a long path delay say over the

2021
01:40:14,750 --> 01:40:21,290
Internet where one of those segments

2022
01:40:17,360 --> 01:40:23,900
within that is low delay but possibly

2023
01:40:21,290 --> 01:40:26,540
high loss and to me it sounds like that

2024
01:40:23,900 --> 01:40:27,769
would be a mobile network satellites

2025
01:40:26,540 --> 01:40:29,690
interesting but that seems like that

2026
01:40:27,770 --> 01:40:33,920
already has a long delay so I'm

2027
01:40:29,690 --> 01:40:36,169
wondering or guests asking are there

2028
01:40:33,920 --> 01:40:38,330
applications in mobile world where we do

2029
01:40:36,170 --> 01:40:42,220
have that situation like at the last hop

2030
01:40:38,330 --> 01:40:45,980
or Radio Network getting to that point

2031
01:40:42,220 --> 01:40:49,370
that could be that low low delay high

2032
01:40:45,980 --> 01:40:51,379
loss is there value for loops in that

2033
01:40:49,370 --> 01:40:53,330
scenario or is everything already

2034
01:40:51,380 --> 01:40:55,930
covered by some layer to retransmissions

2035
01:40:53,330 --> 01:40:55,930
that's not an issue

2036
01:40:57,100 --> 01:41:01,340
Spencer Dawkins speaking as an

2037
01:40:59,780 --> 01:41:06,380
individual contributor

2038
01:41:01,340 --> 01:41:09,530
I like Tom's question and I would offer

2039
01:41:06,380 --> 01:41:11,380
as a semi friendly amendment what if

2040
01:41:09,530 --> 01:41:16,460
there are two what if there are two

2041
01:41:11,380 --> 01:41:20,240
network segments like that and and that

2042
01:41:16,460 --> 01:41:22,370
that you know it seems to me that we

2043
01:41:20,240 --> 01:41:26,330
can't really guarantee that there would

2044
01:41:22,370 --> 01:41:28,429
there would only be one and so to the

2045
01:41:26,330 --> 01:41:31,130
extent that there is more than one

2046
01:41:28,429 --> 01:41:33,320
I think that changes the way we look at

2047
01:41:31,130 --> 01:41:35,179
the problem well look at it this way

2048
01:41:33,320 --> 01:41:38,059
what's the most common use case so we

2049
01:41:35,179 --> 01:41:40,100
have our mobile phone connecting to a

2050
01:41:38,060 --> 01:41:42,320
wireless network eventually it gets into

2051
01:41:40,100 --> 01:41:44,420
the intranet and goes to Google or

2052
01:41:42,320 --> 01:41:47,349
whatever so I'm assuming that that later

2053
01:41:44,420 --> 01:41:49,699
part is already pretty highly reliable

2054
01:41:47,350 --> 01:41:51,620
but the longer latency but I'm really

2055
01:41:49,699 --> 01:41:54,500
interested in it is that short path

2056
01:41:51,620 --> 01:41:57,800
where we could definitely have high loss

2057
01:41:54,500 --> 01:41:59,840
and to me if Luke's is optimizing that

2058
01:41:57,800 --> 01:42:01,489
and it seems like the key here is if

2059
01:41:59,840 --> 01:42:03,830
we're going to do these retransmissions

2060
01:42:01,489 --> 01:42:06,739
it has to be so fast that that really

2061
01:42:03,830 --> 01:42:08,890
doesn't affect the end-to-end view of

2062
01:42:06,739 --> 01:42:11,299
delay so if you can slip this in and

2063
01:42:08,890 --> 01:42:12,830
save a packet loss as opposed to

2064
01:42:11,300 --> 01:42:16,699
increasing delay then and there's a

2065
01:42:12,830 --> 01:42:18,800
value yeah I would also maybe observed

2066
01:42:16,699 --> 01:42:22,820
that when Aaron and I were co-chairing

2067
01:42:18,800 --> 01:42:27,170
milk the B common case of what people

2068
01:42:22,820 --> 01:42:30,259
were optimizing for was like 56 kilobits

2069
01:42:27,170 --> 01:42:31,699
links so you know I think we should

2070
01:42:30,260 --> 01:42:33,940
probably think towards the future as

2071
01:42:31,699 --> 01:42:33,940
well

2072
01:42:35,080 --> 01:42:41,840
it's Ducard kernel technologies just a

2073
01:42:38,270 --> 01:42:46,340
specific example of such a low latency

2074
01:42:41,840 --> 01:42:48,230
high loss case I Triple E 802 that 11 P

2075
01:42:46,340 --> 01:42:49,550
wireless access and VA theater

2076
01:42:48,230 --> 01:42:51,799
environments dedicated short range

2077
01:42:49,550 --> 01:42:54,050
communications especially when you're

2078
01:42:51,800 --> 01:42:56,230
handing off from one access point to

2079
01:42:54,050 --> 01:42:56,230
another

2080
01:42:56,679 --> 01:43:02,810
totally sacred I missed the beginning so

2081
01:43:01,100 --> 01:43:04,280
I'm not quite sure if the scope was more

2082
01:43:02,810 --> 01:43:06,409
about you know dealing with congestion

2083
01:43:04,280 --> 01:43:08,269
loss on on congestion loss right what I

2084
01:43:06,409 --> 01:43:09,679
would say is that traditionally you know

2085
01:43:08,270 --> 01:43:11,659
the non congestion loss is something

2086
01:43:09,679 --> 01:43:13,460
that you know subnets try to get rid of

2087
01:43:11,659 --> 01:43:15,559
but you know if we look through the

2088
01:43:13,460 --> 01:43:17,060
industry that hasn't always been very

2089
01:43:15,560 --> 01:43:19,670
successful so I think one of the

2090
01:43:17,060 --> 01:43:21,710
questions would really be you know how

2091
01:43:19,670 --> 01:43:24,320
awaiting the scope of you know

2092
01:43:21,710 --> 01:43:26,420
congestion laws local solving and non

2093
01:43:24,320 --> 01:43:28,250
congestion loss local solving right and

2094
01:43:26,420 --> 01:43:29,510
I think it would really be nice to have

2095
01:43:28,250 --> 01:43:32,030
something that's more generically

2096
01:43:29,510 --> 01:43:33,920
applicable to all type of subnets if you

2097
01:43:32,030 --> 01:43:36,409
have a shocking subnet where it doesn't

2098
01:43:33,920 --> 01:43:38,000
you know the provided mechanisms of that

2099
01:43:36,409 --> 01:43:39,409
layer to submit are not good enough to

2100
01:43:38,000 --> 01:43:41,949
deal with the loss it has the non

2101
01:43:39,409 --> 01:43:41,949
congestion

2102
01:43:48,300 --> 01:43:57,370
we've cleared the mic line which I find

2103
01:43:52,360 --> 01:44:00,490
amazing we have about 17 minutes until

2104
01:43:57,370 --> 01:44:04,440
we're through so it may be time for us

2105
01:44:00,490 --> 01:44:04,440
to move back to the questions to get us

2106
01:44:25,980 --> 01:44:32,259
right so the biggest one do we

2107
01:44:28,660 --> 01:44:33,849
understand a problem and I don't know

2108
01:44:32,260 --> 01:44:35,650
Spencer do you think we should have a

2109
01:44:33,850 --> 01:44:40,870
discussion on each of these or should we

2110
01:44:35,650 --> 01:44:43,750
try to do humps as we go we have 17

2111
01:44:40,870 --> 01:44:46,120
minutes but we've only has 6 already 6

2112
01:44:43,750 --> 01:44:48,040
16 minutes but we've only got 16 minutes

2113
01:44:46,120 --> 01:44:55,559
let's do humps and see if we need to do

2114
01:44:48,040 --> 01:44:59,920
a discussion on the no that's wrong okay

2115
01:44:55,560 --> 01:45:01,600
prepare so those who think that we do

2116
01:44:59,920 --> 01:45:08,140
understand the problem can you please

2117
01:45:01,600 --> 01:45:10,120
hum now thank you and those who do not

2118
01:45:08,140 --> 01:45:12,630
think we understand the problem please

2119
01:45:10,120 --> 01:45:12,630
hum now

2120
01:45:14,730 --> 01:45:23,919
okay - yeah 6040 perhaps but yes we so

2121
01:45:21,280 --> 01:45:25,809
so we made it we made the right yeah we

2122
01:45:23,920 --> 01:45:32,230
made the right choice by having it now

2123
01:45:25,810 --> 01:45:33,370
worker forum Bob hi Aaron Falk again let

2124
01:45:32,230 --> 01:45:35,259
me try not to kill you what I think I

2125
01:45:33,370 --> 01:45:37,780
heard because this was exactly my mind

2126
01:45:35,260 --> 01:45:40,690
in thinking that this question which is

2127
01:45:37,780 --> 01:45:42,880
we have identified a bunch of problems I

2128
01:45:40,690 --> 01:45:44,669
don't think we've identified how they

2129
01:45:42,880 --> 01:45:46,570
group together to become the problem

2130
01:45:44,670 --> 01:45:48,130
there's a bunch of there's work that's

2131
01:45:46,570 --> 01:45:50,530
going on there's a lot of history here

2132
01:45:48,130 --> 01:45:52,720
there's stuff that is kind of outside

2133
01:45:50,530 --> 01:45:53,740
the scope of the IETF and it's that

2134
01:45:52,720 --> 01:45:55,390
there's mechanisms that are happening

2135
01:45:53,740 --> 01:46:00,429
way down in the staff

2136
01:45:55,390 --> 01:46:01,720
and in the applications and I have not

2137
01:46:00,430 --> 01:46:05,410
come away from this discussion with a

2138
01:46:01,720 --> 01:46:08,080
clear idea of the thing the thing that's

2139
01:46:05,410 --> 01:46:11,920
unaddressed that there needs to be work

2140
01:46:08,080 --> 01:46:16,360
on so that's that's what I heard

2141
01:46:11,920 --> 01:46:18,610
I was trying some 70% policy modulation

2142
01:46:16,360 --> 01:46:21,429
I understand the problem so I think it

2143
01:46:18,610 --> 01:46:23,290
very much depends on a lot of the scope

2144
01:46:21,430 --> 01:46:26,260
details right so I haven't heard you

2145
01:46:23,290 --> 01:46:27,580
know just vague sub sensation of trying

2146
01:46:26,260 --> 01:46:29,530
to differentiate between different

2147
01:46:27,580 --> 01:46:31,630
traffic right obviously congestion

2148
01:46:29,530 --> 01:46:34,240
control expectations of this adhesive e

2149
01:46:31,630 --> 01:46:35,680
are different from TCP right would we be

2150
01:46:34,240 --> 01:46:37,300
willing to do that and the whole

2151
01:46:35,680 --> 01:46:38,550
discussion of why the heck would we want

2152
01:46:37,300 --> 01:46:41,080
to exclude the last thing so

2153
01:46:38,550 --> 01:46:44,410
understanding comes a little bit through

2154
01:46:41,080 --> 01:46:46,330
the refinement of the scope and I hope

2155
01:46:44,410 --> 01:46:52,900
that we can solve this for me 30 percent

2156
01:46:46,330 --> 01:46:57,820
remaining I burn caramel no hats at this

2157
01:46:52,900 --> 01:46:58,809
point the so I hunt yes because actually

2158
01:46:57,820 --> 01:47:02,440
I think we've understood this problem

2159
01:46:58,810 --> 01:47:03,370
for the past quarter century and we've

2160
01:47:02,440 --> 01:47:04,509
had the problem for the baryon

2161
01:47:03,370 --> 01:47:06,750
supporters entry and we've come up with

2162
01:47:04,510 --> 01:47:13,930
a bunch of bad solutions for it right so

2163
01:47:06,750 --> 01:47:15,790
the the the thing that I'd like to see a

2164
01:47:13,930 --> 01:47:17,230
refinement of is one a little bit of the

2165
01:47:15,790 --> 01:47:18,460
refinement of the scope but to a little

2166
01:47:17,230 --> 01:47:19,900
bit more of the fun none of us not the

2167
01:47:18,460 --> 01:47:21,580
scope of the problem but also scope of

2168
01:47:19,900 --> 01:47:27,040
the solution great like so a little bit

2169
01:47:21,580 --> 01:47:28,540
more discussion about which exact subset

2170
01:47:27,040 --> 01:47:30,730
of the we do not have complete

2171
01:47:28,540 --> 01:47:32,230
clairvoyance for every past segment of

2172
01:47:30,730 --> 01:47:36,040
transport problem do we want to solve

2173
01:47:32,230 --> 01:47:37,929
here and then a little bit more of the

2174
01:47:36,040 --> 01:47:40,840
the reducing down the solution space to

2175
01:47:37,930 --> 01:47:43,330
something tractable I think this this

2176
01:47:40,840 --> 01:47:44,230
ball was a very good sort of start to

2177
01:47:43,330 --> 01:47:46,750
that and I'd like to see you continue

2178
01:47:44,230 --> 01:47:50,110
but yeah that's why I hummed yes and

2179
01:47:46,750 --> 01:47:52,120
still came up with a mic line and thank

2180
01:47:50,110 --> 01:47:55,320
you to the presenters and everyone who

2181
01:47:52,120 --> 01:47:55,320
participated for that

2182
01:48:00,240 --> 01:48:09,219
yeah given that we half of us don't

2183
01:48:03,160 --> 01:48:14,349
understand the problem yes should we see

2184
01:48:09,220 --> 01:48:18,610
what they know so one one way for us to

2185
01:48:14,350 --> 01:48:22,390
rephrase the question now is that I

2186
01:48:18,610 --> 01:48:23,830
think I heard assertions from multiple

2187
01:48:22,390 --> 01:48:26,980
people out of the research community

2188
01:48:23,830 --> 01:48:30,610
that at least some parts of this are

2189
01:48:26,980 --> 01:48:32,860
engineering so as long as some parties

2190
01:48:30,610 --> 01:48:35,589
can answer engineering to the previous

2191
01:48:32,860 --> 01:48:37,570
thing because there was some comments on

2192
01:48:35,590 --> 01:48:39,550
the microphone that made it an important

2193
01:48:37,570 --> 01:48:40,330
distinction between the program and the

2194
01:48:39,550 --> 01:48:43,600
scope of the problem

2195
01:48:40,330 --> 01:48:45,850
I think 60% of the room answered the

2196
01:48:43,600 --> 01:48:48,760
question do we understand the problem in

2197
01:48:45,850 --> 01:48:55,210
40% and such I don't understand the

2198
01:48:48,760 --> 01:48:56,800
scope of the problem and can we so so if

2199
01:48:55,210 --> 01:48:59,650
I was going to do a friendly amendment

2200
01:48:56,800 --> 01:49:01,810
to the question that's on the screen I

2201
01:48:59,650 --> 01:49:07,570
think I would be suggesting something

2202
01:49:01,810 --> 01:49:09,700
like is there engineering are people

2203
01:49:07,570 --> 01:49:11,230
ready are there things that we talked

2204
01:49:09,700 --> 01:49:16,059
about today that were ready to do

2205
01:49:11,230 --> 01:49:19,269
engineering that don't need additional

2206
01:49:16,060 --> 01:49:21,490
research and I was thinking in before

2207
01:49:19,270 --> 01:49:24,240
the buff that if we had enough people

2208
01:49:21,490 --> 01:49:28,179
show up saying I'm working on this now

2209
01:49:24,240 --> 01:49:31,750
that that was at least some people have

2210
01:49:28,180 --> 01:49:34,570
thought that but the microphone lines

2211
01:49:31,750 --> 01:49:37,210
are open as they say yeah you're caught

2212
01:49:34,570 --> 01:49:40,690
too quickly looking at the first bullet

2213
01:49:37,210 --> 01:49:42,280
I was actually humming with the question

2214
01:49:40,690 --> 01:49:46,360
in mind whether we have a common

2215
01:49:42,280 --> 01:49:49,990
understanding everybody may have their

2216
01:49:46,360 --> 01:49:51,460
own idea of what the problem might turn

2217
01:49:49,990 --> 01:49:54,610
out to be useful to have a common one

2218
01:49:51,460 --> 01:49:57,210
and I'm I haven't Gilly that hasn't come

2219
01:49:54,610 --> 01:49:57,210
across to me

2220
01:50:01,600 --> 01:50:06,489
Colin Perkins with with no hats

2221
01:50:04,960 --> 01:50:09,580
[Music]

2222
01:50:06,489 --> 01:50:12,610
is this Engineering or is it research I

2223
01:50:09,580 --> 01:50:15,820
would say that big chunks of this are

2224
01:50:12,610 --> 01:50:19,380
engineering and parts of it are probably

2225
01:50:15,820 --> 01:50:22,450
still research but I think that's okay

2226
01:50:19,380 --> 01:50:27,070
this could be a good topic at the IRS GE

2227
01:50:22,450 --> 01:50:28,540
dinner I mean you know I mean to expand

2228
01:50:27,070 --> 01:50:30,809
a bit I think there's enough of this

2229
01:50:28,540 --> 01:50:34,239
which is engineering that there is a

2230
01:50:30,810 --> 01:50:36,190
useful IETF work we can do there are

2231
01:50:34,239 --> 01:50:38,169
bits I think we don't know don't

2232
01:50:36,190 --> 01:50:40,120
necessarily know how to solve I think we

2233
01:50:38,170 --> 01:50:41,980
don't necessarily need to know how to

2234
01:50:40,120 --> 01:50:45,700
solve them all to do an initial version

2235
01:50:41,980 --> 01:50:47,500
of this yeah it wouldn't be the first

2236
01:50:45,700 --> 01:50:49,269
time the ITF has chartered a group but

2237
01:50:47,500 --> 01:50:55,060
we don't have all of the answers at the

2238
01:50:49,270 --> 01:50:56,710
beginning so stiffening up I come back

2239
01:50:55,060 --> 01:50:59,560
to that question which I had originally

2240
01:50:56,710 --> 01:51:02,710
I read here is this engineering or is

2241
01:50:59,560 --> 01:51:04,870
research required blah blah blah I would

2242
01:51:02,710 --> 01:51:06,670
say absolutely there is research

2243
01:51:04,870 --> 01:51:11,890
required maybe not technically research

2244
01:51:06,670 --> 01:51:14,260
but I think I think base insufficient

2245
01:51:11,890 --> 01:51:16,600
input on whether there is actually a

2246
01:51:14,260 --> 01:51:19,450
demand for such a standard for

2247
01:51:16,600 --> 01:51:26,350
standardized solution that I do not see

2248
01:51:19,450 --> 01:51:28,599
personally david black i hummed no on

2249
01:51:26,350 --> 01:51:30,520
not nourishing a problem because basic

2250
01:51:28,600 --> 01:51:33,100
please come what I heard some matches

2251
01:51:30,520 --> 01:51:35,650
mine which is a bit concerned about the

2252
01:51:33,100 --> 01:51:37,750
scope is our problem here yeah that's

2253
01:51:35,650 --> 01:51:39,849
probably more than one I've heard

2254
01:51:37,750 --> 01:51:43,239
discussion wander back and forth across

2255
01:51:39,850 --> 01:51:46,960
levels two three and four and I think I

2256
01:51:43,239 --> 01:51:50,110
want to see a focus a clear focus on one

2257
01:51:46,960 --> 01:51:52,690
of the levels with a clay defined scope

2258
01:51:50,110 --> 01:51:54,509
to change my hum from no to yes thank

2259
01:51:52,690 --> 01:51:58,839
you

2260
01:51:54,510 --> 01:52:00,760
Aaron Falk again so I think what I heard

2261
01:51:58,840 --> 01:52:04,719
very clearly was a proposed set of

2262
01:52:00,760 --> 01:52:06,940
requirements for a protocol something

2263
01:52:04,719 --> 01:52:10,600
that operates over a subset of the path

2264
01:52:06,940 --> 01:52:13,599
doesn't involve the endpoints works on

2265
01:52:10,600 --> 01:52:15,969
IP is transport independent and doesn't

2266
01:52:13,600 --> 01:52:20,190
modify packets as they go what I'm not

2267
01:52:15,969 --> 01:52:20,190
clear on is a

2268
01:52:20,239 --> 01:52:25,239
how important is that how useful is it

2269
01:52:22,400 --> 01:52:29,089
how what what set of problems it solves

2270
01:52:25,239 --> 01:52:30,530
having said that you know I'm not

2271
01:52:29,090 --> 01:52:31,969
opposed to seeing somebody go and build

2272
01:52:30,530 --> 01:52:33,440
something like that and try it out I

2273
01:52:31,969 --> 01:52:35,510
don't know if I would recommend that it

2274
01:52:33,440 --> 01:52:38,780
be used on the internet or what problems

2275
01:52:35,510 --> 01:52:41,510
it's going to be useful for but so to me

2276
01:52:38,780 --> 01:52:43,280
this is even with that statement it's

2277
01:52:41,510 --> 01:52:47,900
not obvious to me it's it's in the the

2278
01:52:43,280 --> 01:52:51,769
gray area between the IRT F work in ITF

2279
01:52:47,900 --> 01:52:53,360
work I wouldn't actually be opposed to

2280
01:52:51,770 --> 01:52:57,200
it in either place I'd kind of like to

2281
01:52:53,360 --> 01:52:59,960
see the thinking of how this could work

2282
01:52:57,200 --> 01:53:01,250
move forward I would also like to see it

2283
01:52:59,960 --> 01:53:04,400
not interfere with some of the other

2284
01:53:01,250 --> 01:53:10,250
ideas for improving things like effect

2285
01:53:04,400 --> 01:53:11,750
and quick and the panel G stuff so I you

2286
01:53:10,250 --> 01:53:12,860
know I say if people won't work on this

2287
01:53:11,750 --> 01:53:14,480
they should be able to work on it I

2288
01:53:12,860 --> 01:53:16,730
wouldn't stand in the way I don't think

2289
01:53:14,480 --> 01:53:18,379
it's necessarily a bad thing just don't

2290
01:53:16,730 --> 01:53:27,530
think we should over promise what its

2291
01:53:18,380 --> 01:53:30,020
gonna do was hurt occurred I say I guess

2292
01:53:27,530 --> 01:53:32,389
with my IAB had half kill turd because I

2293
01:53:30,020 --> 01:53:37,190
have questions I'm not a statement or

2294
01:53:32,390 --> 01:53:38,570
iam so I the whole point of the IRT F

2295
01:53:37,190 --> 01:53:40,129
and I'm very glad that there's people

2296
01:53:38,570 --> 01:53:44,059
here that are working on that part of

2297
01:53:40,130 --> 01:53:45,680
the area if it's not me the whole point

2298
01:53:44,060 --> 01:53:47,840
of the RTF is to eventually transition

2299
01:53:45,680 --> 01:53:50,510
work into the IETF for Standardization

2300
01:53:47,840 --> 01:53:52,700
and I think that this this whole baath

2301
01:53:50,510 --> 01:53:55,100
shows that there is no an effort or

2302
01:53:52,700 --> 01:53:56,929
desire to to transition to something

2303
01:53:55,100 --> 01:53:59,570
that might actually work

2304
01:53:56,930 --> 01:54:01,340
I do think that the proponents and the

2305
01:53:59,570 --> 01:54:02,540
research side need to get together and

2306
01:54:01,340 --> 01:54:04,730
seems like there's sort of a split

2307
01:54:02,540 --> 01:54:06,530
between groups and they really need to

2308
01:54:04,730 --> 01:54:08,360
sit in a room and say okay what elements

2309
01:54:06,530 --> 01:54:11,360
are ready for transition and what it's

2310
01:54:08,360 --> 01:54:14,089
still in research and if solutions exist

2311
01:54:11,360 --> 01:54:15,410
great now is the time to to push those

2312
01:54:14,090 --> 01:54:17,750
forward into standards so they can

2313
01:54:15,410 --> 01:54:20,239
actually be deployed and and put into

2314
01:54:17,750 --> 01:54:23,420
interoperability the one concern I have

2315
01:54:20,239 --> 01:54:26,989
is whether the research community in

2316
01:54:23,420 --> 01:54:30,170
particular agrees that there aren't

2317
01:54:26,989 --> 01:54:32,299
issues that are hiding where even though

2318
01:54:30,170 --> 01:54:32,660
the engineering side may say we think we

2319
01:54:32,300 --> 01:54:35,270
have a

2320
01:54:32,660 --> 01:54:36,860
Ellucian the research cited say no you

2321
01:54:35,270 --> 01:54:38,780
know we haven't actually figured out

2322
01:54:36,860 --> 01:54:40,790
like the whole house congestion getting

2323
01:54:38,780 --> 01:54:42,620
away and how are we going to make sure

2324
01:54:40,790 --> 01:54:43,880
that we're not actually building adding

2325
01:54:42,620 --> 01:54:46,190
that the engineering solution doesn't

2326
01:54:43,880 --> 01:54:51,980
add to the problem that's just my

2327
01:54:46,190 --> 01:54:55,370
thoughts I think you know the list of

2328
01:54:51,980 --> 01:54:59,660
places that we need to look look at for

2329
01:54:55,370 --> 01:55:01,700
this work in addition to just what we're

2330
01:54:59,660 --> 01:55:04,990
thinking about here I think that's going

2331
01:55:01,700 --> 01:55:09,710
to be not a short list thank you

2332
01:55:04,990 --> 01:55:11,360
Andrew Berg Riga I think the answers to

2333
01:55:09,710 --> 01:55:13,720
the first two questions very strongly

2334
01:55:11,360 --> 01:55:17,200
depend on what the scope turns out to be

2335
01:55:13,720 --> 01:55:20,180
because there are things in here where

2336
01:55:17,200 --> 01:55:23,929
I'm sitting there is research required

2337
01:55:20,180 --> 01:55:25,910
in the potential scope of this and there

2338
01:55:23,930 --> 01:55:31,940
are other things which you're like yeah

2339
01:55:25,910 --> 01:55:34,309
sure we can do that that's fine so yeah

2340
01:55:31,940 --> 01:55:39,410
it really does require a very careful

2341
01:55:34,310 --> 01:55:40,820
discussion on scope so Carson has been

2342
01:55:39,410 --> 01:55:46,720
standing there for a long time you wanna

2343
01:55:40,820 --> 01:55:48,920
go now a lot of people who think

2344
01:55:46,720 --> 01:55:53,150
researchers required some of the

2345
01:55:48,920 --> 01:55:55,520
questions that came up today I'm really

2346
01:55:53,150 --> 01:55:57,230
hearing that people think there is

2347
01:55:55,520 --> 01:56:11,120
research required on the things that

2348
01:55:57,230 --> 01:56:12,950
we're trying to do sorry yeah I look a

2349
01:56:11,120 --> 01:56:13,790
control loop response reply you know

2350
01:56:12,950 --> 01:56:17,000
yeah

2351
01:56:13,790 --> 01:56:18,680
control it yeah I'm I'm still not very

2352
01:56:17,000 --> 01:56:20,600
sure about how all this interacts

2353
01:56:18,680 --> 01:56:22,220
between different layers so there's this

2354
01:56:20,600 --> 01:56:24,740
transport questions and there's ops

2355
01:56:22,220 --> 01:56:27,350
questions and I guess this routine

2356
01:56:24,740 --> 01:56:30,469
questions here and I'd like to see which

2357
01:56:27,350 --> 01:56:33,590
ones of laws actually have concerns and

2358
01:56:30,470 --> 01:56:36,020
by whom because the the use case we saw

2359
01:56:33,590 --> 01:56:37,790
was simple but our people signed up

2360
01:56:36,020 --> 01:56:41,630
against those two use cases or do they

2361
01:56:37,790 --> 01:56:43,970
have more and so so I see questions here

2362
01:56:41,630 --> 01:56:45,620
and I think these are research questions

2363
01:56:43,970 --> 01:56:46,840
that we don't see data now with the

2364
01:56:45,620 --> 01:56:52,130
answers

2365
01:56:46,840 --> 01:56:56,960
let me clarify this what we need to do

2366
01:56:52,130 --> 01:56:58,970
is standardized protocol what we also

2367
01:56:56,960 --> 01:57:01,160
need to do is understand how to

2368
01:56:58,970 --> 01:57:03,830
correctly use that protocol all the

2369
01:57:01,160 --> 01:57:08,630
mechanisms so TCP was standardized in

2370
01:57:03,830 --> 01:57:11,300
1983 or something and 76 how you look at

2371
01:57:08,630 --> 01:57:15,800
it and we are starting to understand the

2372
01:57:11,300 --> 01:57:19,520
mechanisms now and I think we can go

2373
01:57:15,800 --> 01:57:23,150
ahead and do a mechanism the mechanism

2374
01:57:19,520 --> 01:57:29,030
work do protocol work excuse me

2375
01:57:23,150 --> 01:57:32,240
on loops now and fully understanding

2376
01:57:29,030 --> 01:57:34,490
that we will have five years or so

2377
01:57:32,240 --> 01:57:37,700
looking at all the research questions

2378
01:57:34,490 --> 01:57:46,099
that finally go into DBC piece on how to

2379
01:57:37,700 --> 01:57:48,349
best one it's on I continue to believe

2380
01:57:46,100 --> 01:57:54,310
that a basic version of loops can be

2381
01:57:48,350 --> 01:57:59,030
built today so there are some existence

2382
01:57:54,310 --> 01:58:00,950
proofs and I didn't understand that the

2383
01:57:59,030 --> 01:58:02,450
purpose of this path was to find out

2384
01:58:00,950 --> 01:58:07,160
whether there's commercial interest or

2385
01:58:02,450 --> 01:58:08,630
we would have done more working so yes

2386
01:58:07,160 --> 01:58:11,210
there's lots of interesting research

2387
01:58:08,630 --> 01:58:14,150
waiting for us that is going to go into

2388
01:58:11,210 --> 01:58:17,200
busy piece at some point but the

2389
01:58:14,150 --> 01:58:20,330
protocol stuff should be possible to

2390
01:58:17,200 --> 01:58:22,160
grow the first version of that so if I

2391
01:58:20,330 --> 01:58:24,230
could do an ad interrupt everybody stay

2392
01:58:22,160 --> 01:58:28,130
at the microphones that still at the

2393
01:58:24,230 --> 01:58:31,509
microphones Magnus asked if I could do a

2394
01:58:28,130 --> 01:58:34,060
hum if people believe that

2395
01:58:31,510 --> 01:58:39,680
standardization in this space is

2396
01:58:34,060 --> 01:58:42,950
required is required or if if it's not

2397
01:58:39,680 --> 01:58:45,170
and if you think that it's not a few hum

2398
01:58:42,950 --> 01:58:47,840
does not feel you know feel free to hop

2399
01:58:45,170 --> 01:58:49,970
up to the mic lines we've got about men

2400
01:58:47,840 --> 01:58:55,220
and I have to go but we'd be interested

2401
01:58:49,970 --> 01:58:57,860
in hearing could I ask for hum of people

2402
01:58:55,220 --> 01:58:59,449
who think that standardization in this

2403
01:58:57,860 --> 01:59:04,120
space is required

2404
01:58:59,449 --> 01:59:06,860
can we clarify the question yes

2405
01:59:04,120 --> 01:59:09,880
standardization in this space required

2406
01:59:06,860 --> 01:59:12,139
required is a strange way of phrasing

2407
01:59:09,880 --> 01:59:14,480
this little wait a second if you don't

2408
01:59:12,140 --> 01:59:24,380
get to change the question the chairs

2409
01:59:14,480 --> 01:59:28,099
ask the question would it be beneficial

2410
01:59:24,380 --> 01:59:36,380
we standardization be desirable of

2411
01:59:28,100 --> 01:59:38,780
beneficial I think right so those who

2412
01:59:36,380 --> 01:59:41,060
think that standardization in this space

2413
01:59:38,780 --> 01:59:47,120
is beneficial or desirable can you

2414
01:59:41,060 --> 01:59:49,790
please hum now and those who do not

2415
01:59:47,120 --> 01:59:57,769
think it's desirable or needed please

2416
01:59:49,790 --> 02:00:01,040
hum now okay we are at 25 seconds left

2417
01:59:57,770 --> 02:00:02,510
to go in our time is I'm doing it so let

2418
02:00:01,040 --> 02:00:05,179
me bring up an important point right so

2419
02:00:02,510 --> 02:00:06,560
nobody talked about I think analyzing

2420
02:00:05,179 --> 02:00:08,390
what's already out there in the market

2421
02:00:06,560 --> 02:00:10,429
there are a lot of proprietary solutions

2422
02:00:08,390 --> 02:00:11,060
to do these things they may cover a lot

2423
02:00:10,429 --> 02:00:13,969
of IPR

2424
02:00:11,060 --> 02:00:15,710
but they may also set a good amount of

2425
02:00:13,969 --> 02:00:18,320
references of you know what we could

2426
02:00:15,710 --> 02:00:20,210
achieve and you know showing what we

2427
02:00:18,320 --> 02:00:22,460
want to achieve compared to to that

2428
02:00:20,210 --> 02:00:24,679
stuff so it's ugly work to try to do

2429
02:00:22,460 --> 02:00:27,199
that analysis but I think it would be

2430
02:00:24,679 --> 02:00:30,230
very helpful thank you and that's

2431
02:00:27,199 --> 02:00:37,780
actually it's actually where we hand the

2432
02:00:30,230 --> 02:00:40,610
mic to the ad so on this last frame

2433
02:00:37,780 --> 02:00:42,800
who's actually willing to do active work

2434
02:00:40,610 --> 02:00:47,410
of looking at what's doing and working

2435
02:00:42,800 --> 02:00:47,410
on the scoping and we have some hands

2436
02:00:47,620 --> 02:00:55,519
okay we have some 15 hands that's good

2437
02:00:51,620 --> 02:00:57,739
great so my conclusions here is that the

2438
02:00:55,520 --> 02:01:00,050
scoping etcetera in small discussion we

2439
02:00:57,739 --> 02:01:02,900
have the loops but loops mailing lists

2440
02:01:00,050 --> 02:01:04,460
to do things so please if you're not

2441
02:01:02,900 --> 02:01:06,920
already subscribed go there and let's

2442
02:01:04,460 --> 02:01:09,020
have some discussions about scope etc

2443
02:01:06,920 --> 02:01:13,840
and what's what's available or not and

2444
02:01:09,020 --> 02:01:13,840
let's be done okay thank you everyone

2445
02:01:14,130 --> 02:01:17,850
see you on the mailing list

