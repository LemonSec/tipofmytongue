1
00:00:12,660 --> 00:00:20,039
folks we're going to start in a minute

2
00:00:15,610 --> 00:00:20,039
take your seats if you like

3
00:00:27,130 --> 00:00:40,699
yes it's blue back there and it's the

4
00:00:32,509 --> 00:00:42,110
big ones that are not working they

5
00:00:40,699 --> 00:00:47,140
didn't work all day yesterday for me I

6
00:00:42,110 --> 00:00:51,129
was in no okay

7
00:00:47,140 --> 00:00:51,129
do you want a different dongle maybe

8
00:00:53,170 --> 00:01:00,280
okay are you able yeah let's do it

9
00:01:22,920 --> 00:01:26,229
hello everyone we're going to get

10
00:01:24,850 --> 00:01:28,960
started we're just dealing with a few

11
00:01:26,229 --> 00:01:29,830
technical issues up here please have a

12
00:01:28,960 --> 00:01:31,660
seat

13
00:01:29,830 --> 00:01:34,570
or take your side discussions to the

14
00:01:31,660 --> 00:01:38,350
hallway this is quick our second session

15
00:01:34,570 --> 00:01:39,789
for the week if someone could close the

16
00:01:38,350 --> 00:01:42,369
doors in the back that'd be fantastic

17
00:01:39,790 --> 00:01:43,630
- oh thank you we need someone to take

18
00:01:42,369 --> 00:01:51,580
minutes today do we have any volunteers

19
00:01:43,630 --> 00:01:53,320
I know you're bright-eyed and okay Brian

20
00:01:51,580 --> 00:01:56,440
Trammell is exempted because he did such

21
00:01:53,320 --> 00:02:00,570
a fantastic job yesterday even minuted

22
00:01:56,440 --> 00:02:00,570
in a foreign language which is fantastic

23
00:02:04,259 --> 00:02:11,250
so true any volunteers

24
00:02:07,690 --> 00:02:11,250
otherwise we will volunteer someone

25
00:02:13,050 --> 00:02:17,310
Chris but thank you very much here

26
00:02:15,160 --> 00:02:20,019
you're a gentleman

27
00:02:17,310 --> 00:02:23,410
so please do it in the Java channel and

28
00:02:20,019 --> 00:02:25,890
if folks could help him out by

29
00:02:23,410 --> 00:02:28,299
correcting or elaborating more necessary

30
00:02:25,890 --> 00:02:30,220
or or capturing things that he fails to

31
00:02:28,299 --> 00:02:32,049
capture that would be very helpful sorry

32
00:02:30,220 --> 00:02:34,329
I'm not either pad I'm sorry on the

33
00:02:32,049 --> 00:02:35,769
either pad if you could refrain from

34
00:02:34,329 --> 00:02:39,790
translating it to another language we

35
00:02:35,769 --> 00:02:44,400
would very much appreciate that so this

36
00:02:39,790 --> 00:02:46,359
is our second session the blue sheets

37
00:02:44,400 --> 00:02:51,280
will circulate the blue sheets at the

38
00:02:46,360 --> 00:02:55,000
moment we have a scribe note well we can

39
00:02:51,280 --> 00:02:56,440
get from the screen actually as we've

40
00:02:55,000 --> 00:02:57,790
said so many times before these are the

41
00:02:56,440 --> 00:02:59,590
terms under which we participate here in

42
00:02:57,790 --> 00:03:01,298
the ITF regarding things like

43
00:02:59,590 --> 00:03:03,190
intellectual property regarding things

44
00:03:01,299 --> 00:03:04,570
like professional behavior would you

45
00:03:03,190 --> 00:03:06,040
take these seriously so please

46
00:03:04,570 --> 00:03:12,269
familiarize yourself with these if

47
00:03:06,040 --> 00:03:12,269
you're not already aware sorry yeah

48
00:03:13,060 --> 00:03:20,180
agenda bashing today we are going to

49
00:03:16,730 --> 00:03:21,019
continue to go over the issues against

50
00:03:20,180 --> 00:03:25,700
the base traps

51
00:03:21,020 --> 00:03:27,950
especially the the virginal ossification

52
00:03:25,700 --> 00:03:31,790
and the other issues we deferred

53
00:03:27,950 --> 00:03:33,980
yesterday then as time permits we're

54
00:03:31,790 --> 00:03:39,079
going to talk about the recovery draft

55
00:03:33,980 --> 00:03:41,239
and the HTTP draft if we could Reserve

56
00:03:39,080 --> 00:03:43,280
we had a side meeting this morning with

57
00:03:41,240 --> 00:03:44,720
some HTTP folks I'd like to reserve

58
00:03:43,280 --> 00:03:45,950
about 10 or 15 minutes to have a

59
00:03:44,720 --> 00:03:47,810
discussion about HD through our

60
00:03:45,950 --> 00:03:49,970
priorities so we'll make sure to do that

61
00:03:47,810 --> 00:03:53,030
before the end do we have any other

62
00:03:49,970 --> 00:03:55,550
agenda fashion yeah Krista let's like

63
00:03:53,030 --> 00:03:57,080
make a quick announcement with Antwon

64
00:03:55,550 --> 00:03:59,510
LaVon for Microsoft Research we're

65
00:03:57,080 --> 00:04:01,790
preparing a workshop for Bulls before

66
00:03:59,510 --> 00:04:04,370
and ESS this year focusing on quick

67
00:04:01,790 --> 00:04:06,620
security and privacy hopefully that will

68
00:04:04,370 --> 00:04:09,170
be accepted and and that'll be announced

69
00:04:06,620 --> 00:04:10,580
sometime mid-september and the workshop

70
00:04:09,170 --> 00:04:13,250
usually takes place sometime in February

71
00:04:10,580 --> 00:04:15,430
so if you know if anyone runs a family

72
00:04:13,250 --> 00:04:18,100
who are working on this particular issue

73
00:04:15,430 --> 00:04:21,019
please encourage them to you know

74
00:04:18,100 --> 00:04:22,310
continue that work and then bring it to

75
00:04:21,019 --> 00:04:23,450
the workshop when the time comes we've

76
00:04:22,310 --> 00:04:25,669
reached out to a couple people who are

77
00:04:23,450 --> 00:04:29,120
actively working in this area and

78
00:04:25,669 --> 00:04:32,479
related TOS aspects so it should be

79
00:04:29,120 --> 00:04:35,750
quite interesting so and one other thing

80
00:04:32,480 --> 00:04:37,960
on the agenda will reserve a brief

81
00:04:35,750 --> 00:04:42,890
amount of time at the end to talk about

82
00:04:37,960 --> 00:04:44,000
planning in future I don't think we're

83
00:04:42,890 --> 00:04:46,820
gonna be able to announce the next

84
00:04:44,000 --> 00:04:48,410
interims location and time firmly this

85
00:04:46,820 --> 00:04:52,010
week but hopefully we'll be able to do

86
00:04:48,410 --> 00:04:53,000
that in the next week or so okay so

87
00:04:52,010 --> 00:05:01,840
let's get started

88
00:04:53,000 --> 00:05:04,430
I think yesterday we deferred 28:44

89
00:05:01,840 --> 00:05:06,440
client connection IDs are broken they

90
00:05:04,430 --> 00:05:11,140
have Ignasi did were you able to make

91
00:05:06,440 --> 00:05:11,140
some progress on that I know it's hard

92
00:05:12,130 --> 00:05:17,440
yes David Skinner Z cool so I applied

93
00:05:16,240 --> 00:05:20,320
the changes that we discussed yesterday

94
00:05:17,440 --> 00:05:22,870
to the PR I saw at least one comment

95
00:05:20,320 --> 00:05:25,090
saying that it addressed consider the

96
00:05:22,870 --> 00:05:28,090
concerns were resolved what do people

97
00:05:25,090 --> 00:05:30,400
think now mainly it's yeah changing the

98
00:05:28,090 --> 00:05:33,609
must to assured and adding a sentence

99
00:05:30,400 --> 00:05:35,380
saying like you this breaks these

100
00:05:33,610 --> 00:05:36,700
features and so you must not do this

101
00:05:35,380 --> 00:05:40,570
unless you know that those are not in

102
00:05:36,700 --> 00:05:42,430
use any further comment on that or

103
00:05:40,570 --> 00:05:45,310
should we go ahead and try and get

104
00:05:42,430 --> 00:05:47,110
consensus in the list I'm sorry I took a

105
00:05:45,310 --> 00:05:48,510
preliminary look but that last part I

106
00:05:47,110 --> 00:05:52,630
had not study properly

107
00:05:48,510 --> 00:05:54,010
I took a preliminary look and must

108
00:05:52,630 --> 00:05:55,900
should just fine but the rest I'm not

109
00:05:54,010 --> 00:05:59,440
sure about seven taken worst idea I

110
00:05:55,900 --> 00:06:03,099
can't do that today so what we might do

111
00:05:59,440 --> 00:06:04,090
then is wait about another week and you

112
00:06:03,100 --> 00:06:05,950
can have something discussion on the

113
00:06:04,090 --> 00:06:08,049
issue and then if things look settled

114
00:06:05,950 --> 00:06:10,320
there we'll go ahead and issue that the

115
00:06:08,050 --> 00:06:15,220
consensus call after that make sense

116
00:06:10,320 --> 00:06:16,930
okay and and again a reminder of the

117
00:06:15,220 --> 00:06:19,510
acoustics in this rumor or horrific so

118
00:06:16,930 --> 00:06:21,760
please speak distinctly and close to the

119
00:06:19,510 --> 00:06:23,710
mic that you can anybody know how to

120
00:06:21,760 --> 00:06:33,039
scroll horizontally in this Chromebook

121
00:06:23,710 --> 00:06:33,849
oh so if I swipe then the wants to go

122
00:06:33,040 --> 00:06:37,270
back in history

123
00:06:33,850 --> 00:06:47,980
oh how many fingers are you using for

124
00:06:37,270 --> 00:06:57,430
this this oh they need to be why is it

125
00:06:47,980 --> 00:07:03,430
working out okay so that was 28:44 next

126
00:06:57,430 --> 00:07:05,170
up 2863 i believe we deferred martin

127
00:07:03,430 --> 00:07:07,960
siemens issue on unrecoverable lost

128
00:07:05,170 --> 00:07:10,480
pattern leads to deadlock where do you

129
00:07:07,960 --> 00:07:13,239
believe that that has gotten less not

130
00:07:10,480 --> 00:07:14,860
more clear in past 24 hours

131
00:07:13,240 --> 00:07:16,650
sorry i do not think we're fair to have

132
00:07:14,860 --> 00:07:17,860
any kind of consensus calls earned late

133
00:07:16,650 --> 00:07:20,500
okay

134
00:07:17,860 --> 00:07:23,190
i think david may have to reestablish

135
00:07:20,500 --> 00:07:25,569
himself as chair of the design team i

136
00:07:23,190 --> 00:07:31,479
think you said that nope

137
00:07:25,569 --> 00:07:34,360
on grass yeah okay here it's Ganassi

138
00:07:31,479 --> 00:07:36,188
yeah negative progress there is a

139
00:07:34,360 --> 00:07:39,520
discussion about reopening things that

140
00:07:36,189 --> 00:07:41,860
we landed so we're gonna take that back

141
00:07:39,520 --> 00:07:43,508
with the same suspects on the design on

142
00:07:41,860 --> 00:07:44,889
the discard keys design team and come

143
00:07:43,509 --> 00:07:47,669
back with something that we all agree on

144
00:07:44,889 --> 00:07:51,789
okay

145
00:07:47,669 --> 00:07:53,859
speaking of which 27:41 revisit initial

146
00:07:51,789 --> 00:07:57,789
key discard has any progress been made

147
00:07:53,860 --> 00:08:00,099
there so we're fighting on this one as

148
00:07:57,789 --> 00:08:01,688
well so so the the message here is that

149
00:08:00,099 --> 00:08:04,748
there's a cluster of issues that are all

150
00:08:01,689 --> 00:08:07,479
all around this and we will be reopening

151
00:08:04,749 --> 00:08:09,580
some and all the ones that fall into

152
00:08:07,479 --> 00:08:11,770
this bucket revisit initial this key

153
00:08:09,580 --> 00:08:15,490
discards the unrecoverable loss pattern

154
00:08:11,770 --> 00:08:17,169
one and even potentially the timing side

155
00:08:15,490 --> 00:08:19,979
channel one will be resolved at the end

156
00:08:17,169 --> 00:08:21,789
of this thing but at the moment it's

157
00:08:19,979 --> 00:08:26,529
gotten worse not better

158
00:08:21,789 --> 00:08:28,929
can can any always what a chair wants to

159
00:08:26,529 --> 00:08:30,729
hear is there any progress that can be

160
00:08:28,929 --> 00:08:32,110
made in this meeting is there any useful

161
00:08:30,729 --> 00:08:33,759
no I don't think this would be a very

162
00:08:32,110 --> 00:08:36,519
good good use of our time here though

163
00:08:33,759 --> 00:08:39,039
that requires time in front of a

164
00:08:36,519 --> 00:08:40,448
whiteboard and is this something that

165
00:08:39,039 --> 00:08:41,979
you believe you can bring the gripping

166
00:08:40,448 --> 00:08:44,560
get consensus on the list or we're gonna

167
00:08:41,979 --> 00:08:47,829
have to wait until the interim this is

168
00:08:44,560 --> 00:08:50,199
not a disagreement it's more along the

169
00:08:47,829 --> 00:08:51,609
lines that we we've now come to new

170
00:08:50,199 --> 00:08:54,008
understandings about the properties of

171
00:08:51,610 --> 00:08:55,870
the system and we need to simply work

172
00:08:54,009 --> 00:08:57,459
them in the design team to come up with

173
00:08:55,870 --> 00:08:59,439
a solution we should have something by

174
00:08:57,459 --> 00:09:05,518
the interim if we don't then you can

175
00:08:59,439 --> 00:09:07,380
fire us all we'll save a lot of money a

176
00:09:05,519 --> 00:09:09,850
lot of time and money

177
00:09:07,380 --> 00:09:11,279
okay well we'll wait to hear from you

178
00:09:09,850 --> 00:09:13,860
yeah

179
00:09:11,279 --> 00:09:21,279
the screens are making me nervous now

180
00:09:13,860 --> 00:09:23,740
okay that leaves us I propose we do the

181
00:09:21,279 --> 00:09:26,680
version ossification thing or straight

182
00:09:23,740 --> 00:09:28,389
to version ossification yeah there are

183
00:09:26,680 --> 00:09:30,339
probably other ones that we can do but

184
00:09:28,389 --> 00:09:35,290
that one just has to me to be that is

185
00:09:30,339 --> 00:09:37,740
the tricky one yep so 2496 quick version

186
00:09:35,290 --> 00:09:37,740
ossification

187
00:09:38,800 --> 00:09:47,029
can you find the slides mark it just a

188
00:09:45,050 --> 00:09:49,339
note I want to make sure that we get to

189
00:09:47,029 --> 00:09:51,430
the recovery issues so as long as this

190
00:09:49,339 --> 00:09:54,200
is I can't understand you I'm sorry I

191
00:09:51,430 --> 00:09:56,689
want to make sure that we get recovery

192
00:09:54,200 --> 00:09:57,699
issues yes we will type down this thank

193
00:09:56,690 --> 00:10:00,410
you

194
00:09:57,699 --> 00:10:00,949
and just one last thing on the discard

195
00:10:00,410 --> 00:10:03,620
keys

196
00:10:00,949 --> 00:10:06,859
i reaiiy unarchive the discard keys

197
00:10:03,620 --> 00:10:08,899
channel on slack I will be coordinating

198
00:10:06,860 --> 00:10:10,579
see if we can meet in person during this

199
00:10:08,899 --> 00:10:12,829
week and they clog us there with the

200
00:10:10,579 --> 00:10:15,589
design team so whoever wants to be part

201
00:10:12,829 --> 00:10:33,589
of that send a message on the discard

202
00:10:15,589 --> 00:10:35,570
keys channel aside as you didn't see the

203
00:10:33,589 --> 00:10:37,490
first step in anger can someone contact

204
00:10:35,570 --> 00:10:40,880
the secretary didn't ask them but tell

205
00:10:37,490 --> 00:10:42,380
them the screens aren't working again as

206
00:10:40,880 --> 00:10:46,180
you can see the first step in bringing

207
00:10:42,380 --> 00:10:46,180
personification is use Comic Sans

208
00:10:46,420 --> 00:10:50,810
Christian women Christian we know that

209
00:10:48,860 --> 00:10:53,000
kazuo and I sat down and tried to work

210
00:10:50,810 --> 00:10:55,459
on this problem and this staff is more

211
00:10:53,000 --> 00:10:56,839
like a problem sorry this is this

212
00:10:55,459 --> 00:10:59,000
presentation like a problem statement

213
00:10:56,839 --> 00:11:00,440
than it is like a solution um I try to

214
00:10:59,000 --> 00:11:02,630
present credit and the problems and I

215
00:11:00,440 --> 00:11:03,980
walk through all the horrific ideas we

216
00:11:02,630 --> 00:11:05,600
had to try to fix them then up which are

217
00:11:03,980 --> 00:11:07,269
really good so maybe someone this room

218
00:11:05,600 --> 00:11:13,250
will have a better idea

219
00:11:07,269 --> 00:11:14,720
next slide so okay there's the high

220
00:11:13,250 --> 00:11:16,699
level problem but the version is like

221
00:11:14,720 --> 00:11:18,050
right there it's like an invariant it's

222
00:11:16,699 --> 00:11:22,329
in the header it's like fights you know

223
00:11:18,050 --> 00:11:26,630
it's bite bytes 1 2 5 or 0 2 or you know

224
00:11:22,329 --> 00:11:30,199
however you count it to 2 to 6 I guess

225
00:11:26,630 --> 00:11:31,670
it's 2 to 5 and so like what happens if

226
00:11:30,199 --> 00:11:32,990
middle boxes start rejecting anything

227
00:11:31,670 --> 00:11:34,550
with a long header this is version 1

228
00:11:32,990 --> 00:11:35,660
which like is not entirely out of the

229
00:11:34,550 --> 00:11:37,099
question given that we've already

230
00:11:35,660 --> 00:11:39,380
established lots other stuff that looks

231
00:11:37,100 --> 00:11:40,490
like this a pattern matching um that

232
00:11:39,380 --> 00:11:43,220
would obviously make it hard to deploy

233
00:11:40,490 --> 00:11:44,630
quick version do and you end up with

234
00:11:43,220 --> 00:11:46,459
some version of world where like you

235
00:11:44,630 --> 00:11:49,220
can't do that so that would be sad I

236
00:11:46,459 --> 00:11:50,540
suppose we can always as usual stuff the

237
00:11:49,220 --> 00:11:52,070
version somewhere else like we are what

238
00:11:50,540 --> 00:11:54,069
to do but like that was annoying

239
00:11:52,070 --> 00:11:58,940
Els so maybe one ought to do it again

240
00:11:54,070 --> 00:12:00,410
next slide so the first thing we did was

241
00:11:58,940 --> 00:12:02,389
trying to sit back and say like what's

242
00:12:00,410 --> 00:12:03,949
the threat model for this like and this

243
00:12:02,389 --> 00:12:05,480
is basic an attack by the middle box is

244
00:12:03,949 --> 00:12:07,670
let's be clear so what's our threat

245
00:12:05,480 --> 00:12:09,230
model for the middle boxes and we

246
00:12:07,670 --> 00:12:11,269
searched I'd like there to kinds of my

247
00:12:09,230 --> 00:12:13,009
front models like one is implementers

248
00:12:11,269 --> 00:12:14,660
are like really like really pretty

249
00:12:13,009 --> 00:12:15,920
Lindsay right like they don't really

250
00:12:14,660 --> 00:12:17,779
read this back they just sit there with

251
00:12:15,920 --> 00:12:19,370
like TCP dump and they're like oh well

252
00:12:17,779 --> 00:12:22,339
like all these packets out like one here

253
00:12:19,370 --> 00:12:24,170
so I guess it must be one a might like

254
00:12:22,339 --> 00:12:26,690
check the quick bit and make sure the

255
00:12:24,170 --> 00:12:30,380
version and maybe either do dependent on

256
00:12:26,690 --> 00:12:32,600
a panel situation maybe they do state

257
00:12:30,380 --> 00:12:36,110
enforcement so they say well if I have

258
00:12:32,600 --> 00:12:37,550
you know I have NAT state or some other

259
00:12:36,110 --> 00:12:39,410
kind of state for this host port quartet

260
00:12:37,550 --> 00:12:40,910
then I do then I check the version but

261
00:12:39,410 --> 00:12:42,259
otherwise I don't that's like a pretty

262
00:12:40,910 --> 00:12:43,490
pretty common they do is pull check on

263
00:12:42,259 --> 00:12:46,430
the opening but on the rest of the thing

264
00:12:43,490 --> 00:12:50,180
um so it's like version 1 and like it's

265
00:12:46,430 --> 00:12:51,439
not you know motivations very but those

266
00:12:50,180 --> 00:12:52,729
are people aren't trying very hard on

267
00:12:51,440 --> 00:12:54,560
the other end or people were like trying

268
00:12:52,730 --> 00:12:56,089
really hard right like read the whole

269
00:12:54,560 --> 00:12:57,410
specification we're actually trying to

270
00:12:56,089 --> 00:12:59,389
stop you from deploying the next version

271
00:12:57,410 --> 00:13:00,800
hum and we certainly have seen this

272
00:12:59,389 --> 00:13:01,850
somewhere TLS or people were like well I

273
00:13:00,800 --> 00:13:04,339
don't want you to point on this version

274
00:13:01,850 --> 00:13:05,540
um and um and they're only do

275
00:13:04,339 --> 00:13:08,779
essentially an arbitrary amount of work

276
00:13:05,540 --> 00:13:10,670
um and so that in particular means like

277
00:13:08,779 --> 00:13:12,740
any anything we stick in this back like

278
00:13:10,670 --> 00:13:14,329
they're gonna know about um so these

279
00:13:12,740 --> 00:13:16,670
things so one of these we have in the

280
00:13:14,329 --> 00:13:18,469
spec now is we have every version has

281
00:13:16,670 --> 00:13:20,180
this um this encryption of the initial

282
00:13:18,470 --> 00:13:21,319
data but then curse is based in a fixed

283
00:13:20,180 --> 00:13:22,670
key which is the spec so they're gonna

284
00:13:21,319 --> 00:13:24,500
know about that and they're gonna know

285
00:13:22,670 --> 00:13:26,029
that if we change it that it's different

286
00:13:24,500 --> 00:13:28,760
so first we just I put a front model is

287
00:13:26,029 --> 00:13:29,439
um by the way you feel free to jump in

288
00:13:28,760 --> 00:13:32,360
at any time

289
00:13:29,440 --> 00:13:35,870
this is we're almost tutorial I mean

290
00:13:32,360 --> 00:13:37,339
nature anything else uh because what you

291
00:13:35,870 --> 00:13:38,949
need to do in order defend against these

292
00:13:37,339 --> 00:13:44,569
people is like extraordinarily different

293
00:13:38,949 --> 00:13:45,829
next slide so the good news is the lazy

294
00:13:44,569 --> 00:13:46,399
implementers thing is actually like

295
00:13:45,829 --> 00:13:49,880
pretty easy

296
00:13:46,399 --> 00:13:52,130
um and David Benjamin can't see movies

297
00:13:49,880 --> 00:13:53,509
here I'm floating a bunch of ideas for

298
00:13:52,130 --> 00:13:54,980
dealing with this in CLS you can see

299
00:13:53,509 --> 00:13:56,779
malarkey is here so the first thing to

300
00:13:54,980 --> 00:13:57,800
do is like get them get the explicit

301
00:13:56,779 --> 00:13:59,120
version out of the header because like

302
00:13:57,800 --> 00:14:00,199
that's the source of the problem I mean

303
00:13:59,120 --> 00:14:01,430
you could also leave it there and have

304
00:14:00,199 --> 00:14:02,719
it be one all the time to have to dumb

305
00:14:01,430 --> 00:14:04,489
you're just wasting bytes it's like

306
00:14:02,720 --> 00:14:05,900
effectively getting a header and then

307
00:14:04,490 --> 00:14:07,670
you have like a bunch of versions

308
00:14:05,900 --> 00:14:09,370
a bunch of versions of figure out what

309
00:14:07,670 --> 00:14:11,360
the version is that more or less depend

310
00:14:09,370 --> 00:14:15,800
yeah you're feeling bad now aren't you

311
00:14:11,360 --> 00:14:17,089
David I can see it and the other bunch

312
00:14:15,800 --> 00:14:19,430
of options that basically depend on

313
00:14:17,089 --> 00:14:23,000
knowing what the spec what the deals the

314
00:14:19,430 --> 00:14:25,430
spec um so maybe you remove version nine

315
00:14:23,000 --> 00:14:27,650
use travel encryption based on the

316
00:14:25,430 --> 00:14:30,560
perspect

317
00:14:27,650 --> 00:14:32,360
seed value you replace the version with

318
00:14:30,560 --> 00:14:34,189
like a mass version which is like again

319
00:14:32,360 --> 00:14:36,980
the perversion see is the person see

320
00:14:34,190 --> 00:14:38,270
value another session would have the

321
00:14:36,980 --> 00:14:40,700
server pride like an alternate be an

322
00:14:38,270 --> 00:14:42,710
another connection um like all these are

323
00:14:40,700 --> 00:14:45,020
like trivial easy to circumvent um if

324
00:14:42,710 --> 00:14:47,300
you actually for the specification so

325
00:14:45,020 --> 00:14:48,650
like first of all um you can just ignore

326
00:14:47,300 --> 00:14:49,910
the version number just travel too quick

327
00:14:48,650 --> 00:14:51,170
for the potential version and it's like

328
00:14:49,910 --> 00:14:52,310
the thing comes up and it looks like a

329
00:14:51,170 --> 00:14:53,599
quick packet and it's like properly

330
00:14:52,310 --> 00:14:54,890
formatted then you're pretty sure you do

331
00:14:53,600 --> 00:15:00,050
the right thing and if it didn't then

332
00:14:54,890 --> 00:15:01,370
it's garbage next Martin Duke f5 um I'm

333
00:15:00,050 --> 00:15:04,270
not convinced that the third option

334
00:15:01,370 --> 00:15:06,980
there is that easy to circumvent

335
00:15:04,270 --> 00:15:09,470
so there are two versions the third

336
00:15:06,980 --> 00:15:10,730
option um one of which is where you

337
00:15:09,470 --> 00:15:11,959
provide an alternate version and the

338
00:15:10,730 --> 00:15:13,730
others by the alternate version and an

339
00:15:11,959 --> 00:15:16,010
alternate seed right if you don't play

340
00:15:13,730 --> 00:15:17,120
all for the C is a trivial right um if

341
00:15:16,010 --> 00:15:21,920
you don't provide an alternate version

342
00:15:17,120 --> 00:15:25,339
um then um then I think the most likely

343
00:15:21,920 --> 00:15:26,750
outcome is that most sir that a lot of

344
00:15:25,339 --> 00:15:27,950
servers are not alternate versions and

345
00:15:26,750 --> 00:15:29,300
what the attackers do is they're just

346
00:15:27,950 --> 00:15:31,490
like well we only let version one

347
00:15:29,300 --> 00:15:32,540
through and then basically people are

348
00:15:31,490 --> 00:15:34,130
gonna have to be willing to fall back to

349
00:15:32,540 --> 00:15:36,620
version one and it of an equilibrium

350
00:15:34,130 --> 00:15:39,589
where we're basically repeating

351
00:15:36,620 --> 00:15:42,980
connections don't work properly or they

352
00:15:39,589 --> 00:15:44,420
fall out ccp so um so I'm not entirely

353
00:15:42,980 --> 00:15:46,459
sure it's true but I think it's a

354
00:15:44,420 --> 00:15:47,360
plausible if they're working there but

355
00:15:46,459 --> 00:15:48,949
he I agree it's a somewhat different

356
00:15:47,360 --> 00:15:51,170
situation in situation but he's other

357
00:15:48,950 --> 00:15:53,959
ones obviously trivial to get house okay

358
00:15:51,170 --> 00:16:00,319
so III think really almost any model for

359
00:15:53,959 --> 00:16:01,880
this is gonna require a significant at

360
00:16:00,320 --> 00:16:05,060
least some critical mass of clients and

361
00:16:01,880 --> 00:16:07,990
servers to implement and just count on

362
00:16:05,060 --> 00:16:10,279
the fact that you're breaking your

363
00:16:07,990 --> 00:16:12,800
severely doing those connections to

364
00:16:10,279 --> 00:16:15,010
create organizational pressure to not do

365
00:16:12,800 --> 00:16:15,010
this

366
00:16:18,800 --> 00:16:22,349
yeah maybe

367
00:16:20,610 --> 00:16:23,730
um I think some of the other vert

368
00:16:22,350 --> 00:16:24,870
someone the more aggressive versions

369
00:16:23,730 --> 00:16:28,290
don't have that property necessarily

370
00:16:24,870 --> 00:16:30,120
okay um but I mean like let's um I guess

371
00:16:28,290 --> 00:16:31,829
but yes - right there's a sliding scale

372
00:16:30,120 --> 00:16:33,569
of a region of pressure that goes from

373
00:16:31,829 --> 00:16:34,589
like nobody does it - some people do it

374
00:16:33,569 --> 00:16:35,880
all the time they're with us all the

375
00:16:34,589 --> 00:16:37,290
time right and so the more you get

376
00:16:35,880 --> 00:16:43,680
towards the right the more pressure the

377
00:16:37,290 --> 00:16:47,759
harder it is the ossification but yeah

378
00:16:43,680 --> 00:16:50,719
Roberto very young there's one other

379
00:16:47,759 --> 00:16:53,490
thing that is interesting here which is

380
00:16:50,720 --> 00:16:55,920
not necessarily preventing ossification

381
00:16:53,490 --> 00:16:57,899
as a first-order effect but preventing

382
00:16:55,920 --> 00:16:59,339
loss if ocation by letting everybody

383
00:16:57,899 --> 00:17:03,329
know something is preventing them from

384
00:16:59,339 --> 00:17:05,429
upgrading I believe that you know we've

385
00:17:03,329 --> 00:17:07,889
talked about having version inside of

386
00:17:05,429 --> 00:17:09,809
things before but it's interesting to

387
00:17:07,890 --> 00:17:11,189
have it both inside and outside so the

388
00:17:09,809 --> 00:17:13,770
network can respond because that's why

389
00:17:11,189 --> 00:17:17,250
you have it externally and so you can

390
00:17:13,770 --> 00:17:22,439
record and report and accuse by having

391
00:17:17,250 --> 00:17:25,319
it interview directly so gory Fair has

392
00:17:22,439 --> 00:17:26,699
the two things when when we want to

393
00:17:25,319 --> 00:17:28,260
deploy a new version of something in the

394
00:17:26,699 --> 00:17:32,159
network often we want to know the new

395
00:17:28,260 --> 00:17:33,629
version exists to do good stuff to let

396
00:17:32,159 --> 00:17:35,309
that traffic through to classify

397
00:17:33,630 --> 00:17:37,380
measurements from one versus the other

398
00:17:35,309 --> 00:17:39,918
if we close that then we close an

399
00:17:37,380 --> 00:17:43,290
opportunity to deploy new versions

400
00:17:39,919 --> 00:17:44,610
second I'm not convinced this threat

401
00:17:43,290 --> 00:17:46,139
model is the one we have to deal with

402
00:17:44,610 --> 00:17:48,689
there are ways of doing versioning

403
00:17:46,140 --> 00:17:50,850
within quick if we if the outer version

404
00:17:48,690 --> 00:17:53,400
number it gets ossified I don't think

405
00:17:50,850 --> 00:17:56,668
you will get asleep I'd so am I wrong am

406
00:17:53,400 --> 00:17:59,340
i right how do we know well I think um I

407
00:17:56,669 --> 00:18:01,409
mean definitely the challenge in front

408
00:17:59,340 --> 00:18:02,668
models totally legit I think by and

409
00:18:01,409 --> 00:18:04,169
large in the front all those group is

410
00:18:02,669 --> 00:18:06,000
adopted but people can correct me is

411
00:18:04,169 --> 00:18:07,380
that like we should be treating the

412
00:18:06,000 --> 00:18:09,809
middle boxes the greatest and possible

413
00:18:07,380 --> 00:18:11,429
as a dumb pipe and like trying to avoid

414
00:18:09,809 --> 00:18:12,899
them looking at data and so and not

415
00:18:11,429 --> 00:18:14,429
being pretty good sympathetic to maybe

416
00:18:12,900 --> 00:18:15,929
if they knew there is more version

417
00:18:14,429 --> 00:18:17,630
information they would do better um but

418
00:18:15,929 --> 00:18:20,490
again that's a question for the group on

419
00:18:17,630 --> 00:18:22,470
the certainly you're right that the

420
00:18:20,490 --> 00:18:23,850
outer version goes ossify we can like we

421
00:18:22,470 --> 00:18:25,350
can like move inner version and then

422
00:18:23,850 --> 00:18:26,820
like when that Kasasa five-minute

423
00:18:25,350 --> 00:18:28,469
version I mean like that's basically

424
00:18:26,820 --> 00:18:30,720
where like people are worried TLS is

425
00:18:28,470 --> 00:18:32,160
gonna go but I think the

426
00:18:30,720 --> 00:18:35,160
the idea here was to avoid having that

427
00:18:32,160 --> 00:18:37,370
view I guess so it seems like it could

428
00:18:35,160 --> 00:18:40,470
head to try and stop something that we

429
00:18:37,370 --> 00:18:43,439
might think is an issue and that's what

430
00:18:40,470 --> 00:18:44,970
threats are so yeah I get it and I don't

431
00:18:43,440 --> 00:18:47,250
agree with the threat model okay

432
00:18:44,970 --> 00:18:48,960
enough what it's worth my understanding

433
00:18:47,250 --> 00:18:57,360
is that Google's already seen this real

434
00:18:48,960 --> 00:18:58,830
quick yes it's true but we don't know

435
00:18:57,360 --> 00:19:00,840
it's true right yeah quit where people

436
00:18:58,830 --> 00:19:02,310
actually know this exists I think at

437
00:19:00,840 --> 00:19:05,310
that time people didn't really know what

438
00:19:02,310 --> 00:19:07,440
quick was and the intervention nation on

439
00:19:05,310 --> 00:19:11,520
which to look at particular terms I

440
00:19:07,440 --> 00:19:13,080
can't speak to that intelligently um so

441
00:19:11,520 --> 00:19:14,100
like I say um with number options if

442
00:19:13,080 --> 00:19:16,199
we're willing to just deal with lazy

443
00:19:14,100 --> 00:19:17,639
implementers um for her working

444
00:19:16,200 --> 00:19:18,570
implementers you either client/server to

445
00:19:17,640 --> 00:19:20,940
share some kind of secret information

446
00:19:18,570 --> 00:19:22,230
somehow there's no way around as far as

447
00:19:20,940 --> 00:19:24,330
I can tell that was the consensus of

448
00:19:22,230 --> 00:19:31,110
like a Christian and cuz you hold up

449
00:19:24,330 --> 00:19:32,340
myself um next slide so sorry I'd like

450
00:19:31,110 --> 00:19:33,540
for I do these slides a while ago you

451
00:19:32,340 --> 00:19:37,620
showed me the slide of this just so I'm

452
00:19:33,540 --> 00:19:42,270
like or get you some oriented okay good

453
00:19:37,620 --> 00:19:44,659
okay so I mean the bottom line is I you

454
00:19:42,270 --> 00:19:48,300
have to equip the initial somehow and so

455
00:19:44,660 --> 00:19:53,760
the there's a number of possible ways to

456
00:19:48,300 --> 00:19:55,080
do this one is to use this there's this

457
00:19:53,760 --> 00:19:56,820
detail about trial decryption or

458
00:19:55,080 --> 00:19:58,260
separately encrypting the version number

459
00:19:56,820 --> 00:19:59,429
that's like a really boring crypto

460
00:19:58,260 --> 00:20:00,540
detail because I'm not gonna bother you

461
00:19:59,430 --> 00:20:02,400
with right now

462
00:20:00,540 --> 00:20:03,980
there's the variants where you deliver

463
00:20:02,400 --> 00:20:06,240
the key in yes and I this is very

464
00:20:03,980 --> 00:20:08,550
analogous records de France were to look

465
00:20:06,240 --> 00:20:11,010
at the key like in the previous

466
00:20:08,550 --> 00:20:13,260
connection and so that goes back to the

467
00:20:11,010 --> 00:20:14,520
point Martin Duke was making I think but

468
00:20:13,260 --> 00:20:16,680
the bottom line is you've gotta like

469
00:20:14,520 --> 00:20:18,450
encrypt the damn thing with a key that

470
00:20:16,680 --> 00:20:20,040
life is not known not known at none

471
00:20:18,450 --> 00:20:23,490
available in the box or they're just

472
00:20:20,040 --> 00:20:24,810
going to equip themselves um so this

473
00:20:23,490 --> 00:20:27,090
obviously is you for what happens in

474
00:20:24,810 --> 00:20:30,300
cases with secrets and available um so

475
00:20:27,090 --> 00:20:31,830
um now in the case of DNS yes and I

476
00:20:30,300 --> 00:20:35,430
style approaches the secret isn't

477
00:20:31,830 --> 00:20:36,899
available um typically on a per server

478
00:20:35,430 --> 00:20:39,540
basis that it servers may not publish it

479
00:20:36,900 --> 00:20:41,280
in the case of

480
00:20:39,540 --> 00:20:42,690
the case of the subsequent conversion

481
00:20:41,280 --> 00:20:43,920
obviously it's key very common the

482
00:20:42,690 --> 00:20:44,670
secret will be available numb what do

483
00:20:43,920 --> 00:20:46,380
you do

484
00:20:44,670 --> 00:20:48,300
and so that that's one hence my concern

485
00:20:46,380 --> 00:20:49,500
about its first connection for

486
00:20:48,300 --> 00:20:51,570
subsequent connection our certification

487
00:20:49,500 --> 00:20:53,280
wears in the SLI style it's more work

488
00:20:51,570 --> 00:20:55,470
but you get you know you get foot you

489
00:20:53,280 --> 00:20:59,040
get you get a randomized version from

490
00:20:55,470 --> 00:21:01,530
minute zero it's not obviously the case

491
00:20:59,040 --> 00:21:03,360
you could try doing both of these you

492
00:21:01,530 --> 00:21:06,180
could try doing um you know you could

493
00:21:03,360 --> 00:21:07,679
try doing you can have basically a

494
00:21:06,180 --> 00:21:08,730
standard way to reach this end result

495
00:21:07,680 --> 00:21:10,170
and then you can have something going

496
00:21:08,730 --> 00:21:13,110
connection NES and ice town the same

497
00:21:10,170 --> 00:21:16,320
people discussed um one point Christian

498
00:21:13,110 --> 00:21:18,870
visionary discussion this is like more

499
00:21:16,320 --> 00:21:20,460
than like the sort of trend here the

500
00:21:18,870 --> 00:21:22,169
trend here if you follow this line of

501
00:21:20,460 --> 00:21:23,220
reasoning it's just completely shut the

502
00:21:22,170 --> 00:21:24,960
middle box out as much as you possibly

503
00:21:23,220 --> 00:21:27,000
can so they can't even read for

504
00:21:24,960 --> 00:21:28,020
missionary initial and so as Corey what

505
00:21:27,000 --> 00:21:29,220
you're saying we're the deployment

506
00:21:28,020 --> 00:21:30,930
implications of doing that if you just

507
00:21:29,220 --> 00:21:32,640
say like look you're a dumb bit pipe

508
00:21:30,930 --> 00:21:36,530
stay out of my way I'm something we have

509
00:21:32,640 --> 00:21:38,940
to consider in any case um next slide

510
00:21:36,530 --> 00:21:40,350
this is a fine technical point but I

511
00:21:38,940 --> 00:21:42,330
know there's concerns when this was

512
00:21:40,350 --> 00:21:44,929
initially raised at the sort of cost of

513
00:21:42,330 --> 00:21:49,980
having yet another publication for um

514
00:21:44,930 --> 00:21:51,330
for this the so yes and I obviously use

515
00:21:49,980 --> 00:21:53,730
the public key because you have to worry

516
00:21:51,330 --> 00:21:55,350
about disclosure of the si key um it's

517
00:21:53,730 --> 00:21:56,700
possible you could snake out here which

518
00:21:55,350 --> 00:21:59,490
is a symmetric key that was delivered

519
00:21:56,700 --> 00:22:01,500
either which delivery or in band on

520
00:21:59,490 --> 00:22:03,480
previous connections or in DNS record

521
00:22:01,500 --> 00:22:04,770
and the rationale for this is that it's

522
00:22:03,480 --> 00:22:06,930
a gun or miss I'm going to work for the

523
00:22:04,770 --> 00:22:08,970
for the for the middle box employed like

524
00:22:06,930 --> 00:22:09,930
that pull the side the DNS will make

525
00:22:08,970 --> 00:22:11,130
their own connection and get the

526
00:22:09,930 --> 00:22:12,600
information that's try to try to do

527
00:22:11,130 --> 00:22:14,340
things and that seems like maybe it'd be

528
00:22:12,600 --> 00:22:16,230
something almost nobody willing to do so

529
00:22:14,340 --> 00:22:17,429
if you assume not somewhat bounded like

530
00:22:16,230 --> 00:22:18,840
hard-working implementer than this

531
00:22:17,430 --> 00:22:20,580
possibly get it with a symmetric key and

532
00:22:18,840 --> 00:22:21,959
then obviously you've like it's a much

533
00:22:20,580 --> 00:22:24,449
much faster operation it's a life is

534
00:22:21,960 --> 00:22:25,770
simple and also probably you don't too

535
00:22:24,450 --> 00:22:28,710
much per packet overhead in the first

536
00:22:25,770 --> 00:22:31,020
packet yes mom Thomson I make the

537
00:22:28,710 --> 00:22:33,930
observation that a lot of this stuff

538
00:22:31,020 --> 00:22:36,120
that we've been doing sort of assumes

539
00:22:33,930 --> 00:22:38,370
that symmetric crypto is free but I

540
00:22:36,120 --> 00:22:40,169
symmetric crypto is is pretty deeply

541
00:22:38,370 --> 00:22:41,669
expensive for the sorts of things we're

542
00:22:40,170 --> 00:22:43,770
talking about like if you want to send a

543
00:22:41,670 --> 00:22:45,390
retry packet and you have to do a public

544
00:22:43,770 --> 00:22:47,730
key operation before you can send one

545
00:22:45,390 --> 00:22:55,530
that would be I think a non-starter okay

546
00:22:47,730 --> 00:22:55,950
um yeah that's true um so um right next

547
00:22:55,530 --> 00:23:00,009
slide

548
00:22:55,950 --> 00:23:01,389
um so there's one other suggestion that

549
00:23:00,009 --> 00:23:03,129
kazoo heard floated that was sort of our

550
00:23:01,389 --> 00:23:04,149
final of this but might be a way to deal

551
00:23:03,129 --> 00:23:06,488
with this it didn't have all these sort

552
00:23:04,149 --> 00:23:07,899
of crazy things with initial um and that

553
00:23:06,489 --> 00:23:11,259
was what he was calling mid connection

554
00:23:07,899 --> 00:23:12,428
greasing um so the idea is that you

555
00:23:11,259 --> 00:23:14,200
allow people to send along hunter

556
00:23:12,429 --> 00:23:15,489
packets during the connection and under

557
00:23:14,200 --> 00:23:17,710
those the version of Burton obviously be

558
00:23:15,489 --> 00:23:19,509
random appearing um and of gender if

559
00:23:17,710 --> 00:23:21,759
some protection secret um

560
00:23:19,509 --> 00:23:23,830
this probably is lazy implementers um

561
00:23:21,759 --> 00:23:26,349
like obviously whether that work depends

562
00:23:23,830 --> 00:23:27,849
on sites really doing it I think my

563
00:23:26,349 --> 00:23:29,739
concern when he waged this was it

564
00:23:27,849 --> 00:23:31,899
doesn't work properly if sites like

565
00:23:29,739 --> 00:23:33,039
basically only do version enforcement

566
00:23:31,899 --> 00:23:36,939
for the first packet it's nothing the

567
00:23:33,039 --> 00:23:39,039
state table um so um and I guess thank

568
00:23:36,940 --> 00:23:40,629
you for putting this in you can do force

569
00:23:39,039 --> 00:23:42,759
migrations to in order to like sort of

570
00:23:40,629 --> 00:23:43,330
pull the state people away is one

571
00:23:42,759 --> 00:23:45,249
possibility

572
00:23:43,330 --> 00:23:46,749
um but again let's go got two more

573
00:23:45,249 --> 00:23:47,979
induce question of like how well doesn't

574
00:23:46,749 --> 00:23:49,719
that hasn't work and how much work do

575
00:23:47,979 --> 00:23:52,839
people have to do to it to get like an

576
00:23:49,719 --> 00:23:55,389
te ossification defenses so the other

577
00:23:52,839 --> 00:23:57,428
observation here is that this sort of

578
00:23:55,389 --> 00:23:58,629
goes back to that really old issue where

579
00:23:57,429 --> 00:24:01,989
someone said make connection

580
00:23:58,629 --> 00:24:05,498
establishment look like migration you

581
00:24:01,989 --> 00:24:07,149
can you can imagine this being you send

582
00:24:05,499 --> 00:24:09,940
long header packets in front of those

583
00:24:07,149 --> 00:24:11,379
migrations and and that further off

584
00:24:09,940 --> 00:24:13,539
supplies the protocol and in in a

585
00:24:11,379 --> 00:24:15,009
different way in that

586
00:24:13,539 --> 00:24:17,139
yeah this tell us the pattern that if

587
00:24:15,009 --> 00:24:19,809
you're sending the first packets or the

588
00:24:17,139 --> 00:24:22,449
first datagrams on a path have long

589
00:24:19,809 --> 00:24:24,609
header packet in them and that's not

590
00:24:22,450 --> 00:24:29,200
something that we've ever promised yeah

591
00:24:24,609 --> 00:24:35,639
so yeah so Roberto says every other

592
00:24:29,200 --> 00:24:38,289
migration is like yeah next slide

593
00:24:35,639 --> 00:24:41,019
right so as I said beginning this is

594
00:24:38,289 --> 00:24:42,789
like not like a great situation um if

595
00:24:41,019 --> 00:24:44,139
we're willing to say look we just care

596
00:24:42,789 --> 00:24:45,729
about people we're all we're trying to

597
00:24:44,139 --> 00:24:47,559
do is stop people who are like two

598
00:24:45,729 --> 00:24:49,059
incompetent to like read the

599
00:24:47,559 --> 00:24:50,529
specifications and know the invariants

600
00:24:49,059 --> 00:24:52,089
are then like you have a number of

601
00:24:50,529 --> 00:24:54,700
options that are like you know we can

602
00:24:52,089 --> 00:24:56,289
decide between right and they're largely

603
00:24:54,700 --> 00:24:57,609
pretty easy on some of them may grow

604
00:24:56,289 --> 00:24:59,830
card then in the variants a little bit

605
00:24:57,609 --> 00:25:01,418
um like to make the pig version over out

606
00:24:59,830 --> 00:25:02,589
or to like mask uh personal things but

607
00:25:01,419 --> 00:25:07,239
maybe not depending which one you choose

608
00:25:02,589 --> 00:25:09,040
on on the prettiest hard-working bonus

609
00:25:07,239 --> 00:25:10,270
like he's getting a lot harder

610
00:25:09,040 --> 00:25:11,889
and is gonna almost certainly acquire

611
00:25:10,270 --> 00:25:13,810
change their instance pretty nasty ways

612
00:25:11,890 --> 00:25:15,910
it also involves some there's which

613
00:25:13,810 --> 00:25:16,960
particular version you choose involves

614
00:25:15,910 --> 00:25:19,810
and trade-offs depend on how well it

615
00:25:16,960 --> 00:25:23,020
works and whether and basically how much

616
00:25:19,810 --> 00:25:25,990
packet boat you introduce versus versus

617
00:25:23,020 --> 00:25:27,910
how much work the the server has to do

618
00:25:25,990 --> 00:25:29,110
determine which version you have so just

619
00:25:27,910 --> 00:25:30,760
to give you a sense of this trial

620
00:25:29,110 --> 00:25:32,050
decryption has less back upload button

621
00:25:30,760 --> 00:25:35,100
curtain the curtain sequence number

622
00:25:32,050 --> 00:25:37,480
special so version numbers faster so um

623
00:25:35,100 --> 00:25:39,010
so first you decide like what like that

624
00:25:37,480 --> 00:25:40,870
our objective is here before we like

625
00:25:39,010 --> 00:25:42,040
actually try to engineer a solution hum

626
00:25:40,870 --> 00:25:43,770
that's so that's probably what I want to

627
00:25:42,040 --> 00:25:47,350
leave you

628
00:25:43,770 --> 00:25:49,210
hey Mia could have been so for me this

629
00:25:47,350 --> 00:25:51,909
all breaks down to whatever we do is

630
00:25:49,210 --> 00:25:53,680
like just increasing the load or the

631
00:25:51,910 --> 00:25:56,770
work that somebody has to do to try to

632
00:25:53,680 --> 00:25:59,020
to break this which also means

633
00:25:56,770 --> 00:26:01,930
increasing the load on the server or on

634
00:25:59,020 --> 00:26:04,210
the receiver basically and like I would

635
00:26:01,930 --> 00:26:06,100
actually think that this is like even

636
00:26:04,210 --> 00:26:07,450
worse because in many situations you

637
00:26:06,100 --> 00:26:08,919
might have a minute middle box which is

638
00:26:07,450 --> 00:26:10,480
somewhere in the excess network and has

639
00:26:08,920 --> 00:26:12,580
like very few quick connections to

640
00:26:10,480 --> 00:26:14,710
handle while the server can have very

641
00:26:12,580 --> 00:26:17,280
many quicker connections to handle so

642
00:26:14,710 --> 00:26:19,570
there is like there's a big performance

643
00:26:17,280 --> 00:26:21,100
implementation here and I'm not sure if

644
00:26:19,570 --> 00:26:24,010
it worse is to go down this way

645
00:26:21,100 --> 00:26:26,110
given that I'm you're also uncertain

646
00:26:24,010 --> 00:26:28,629
about this red model and we uncertain

647
00:26:26,110 --> 00:26:30,250
about what the risks are for me it would

648
00:26:28,630 --> 00:26:32,650
be really more important that we have a

649
00:26:30,250 --> 00:26:34,390
way out if we find this happening at

650
00:26:32,650 --> 00:26:36,640
some point and there is a way out in the

651
00:26:34,390 --> 00:26:38,800
next version which will be like an

652
00:26:36,640 --> 00:26:40,630
overhead it has a cost but as long as we

653
00:26:38,800 --> 00:26:43,570
have a way out that's important right

654
00:26:40,630 --> 00:26:45,670
for me so what actually sure that we're

655
00:26:43,570 --> 00:26:47,500
materially increasing the cost on either

656
00:26:45,670 --> 00:26:49,870
the server deployment on memory designs

657
00:26:47,500 --> 00:26:51,670
basically round up to like one or two

658
00:26:49,870 --> 00:26:55,239
more cooperating more symmetrical

659
00:26:51,670 --> 00:26:57,460
operations so in particular if you only

660
00:26:55,240 --> 00:27:00,280
support one if you only support one

661
00:26:57,460 --> 00:27:02,830
version and they clipped across as

662
00:27:00,280 --> 00:27:03,730
identical um it's only becomes upon the

663
00:27:02,830 --> 00:27:07,330
matter which one of these effectively

664
00:27:03,730 --> 00:27:08,410
issues so um I'm not sure actually I

665
00:27:07,330 --> 00:27:14,139
changed the load depending on which one

666
00:27:08,410 --> 00:27:17,170
you choose then eventually it's I mostly

667
00:27:14,140 --> 00:27:19,630
wanted to mention that if you believe in

668
00:27:17,170 --> 00:27:22,090
split mode yes and I the split mode

669
00:27:19,630 --> 00:27:22,700
forwarder is a middle box that needs to

670
00:27:22,090 --> 00:27:25,449
know the version

671
00:27:22,700 --> 00:27:29,920
number so split Modi is nice probably

672
00:27:25,450 --> 00:27:29,920
incompatible with in-band version number

673
00:27:30,610 --> 00:27:36,310
yes I think yes what's up thank you took

674
00:27:33,530 --> 00:27:39,020
me a minute but yes you're angry good

675
00:27:36,310 --> 00:27:41,000
David Benjamin so I think there's a

676
00:27:39,020 --> 00:27:42,230
second thing that we should do a second

677
00:27:41,000 --> 00:27:44,360
like access we should be considering in

678
00:27:42,230 --> 00:27:45,740
front model which is whether or not I

679
00:27:44,360 --> 00:27:47,419
mean I guess it's kind of lazy and hard

680
00:27:45,740 --> 00:27:49,340
working whether or not these middle

681
00:27:47,420 --> 00:27:51,110
boxes can get updated because for

682
00:27:49,340 --> 00:27:52,639
chillest 1 3 the big problem is not just

683
00:27:51,110 --> 00:27:54,469
that the middle boxes had all supplied

684
00:27:52,640 --> 00:27:56,150
everything and done everything wrong but

685
00:27:54,470 --> 00:27:58,670
that they couldn't ship the update till

686
00:27:56,150 --> 00:28:01,520
I fix it when we told them and so the

687
00:27:58,670 --> 00:28:05,650
idea with the the crazy trial decryption

688
00:28:01,520 --> 00:28:08,450
thing which was to pair that with

689
00:28:05,650 --> 00:28:10,730
rapidly cycling versions in like a few

690
00:28:08,450 --> 00:28:13,880
rapidly a few like the point isn't can

691
00:28:10,730 --> 00:28:16,100
be updated quickly and so this way the

692
00:28:13,880 --> 00:28:17,870
the idea was that if if you cannot

693
00:28:16,100 --> 00:28:19,399
distinguish any two versions you do not

694
00:28:17,870 --> 00:28:21,139
know about then that means that being

695
00:28:19,400 --> 00:28:23,000
able to deploy one new version means we

696
00:28:21,140 --> 00:28:24,620
can deploy any new version and so as

697
00:28:23,000 --> 00:28:26,660
long as there's this rapidly cycling

698
00:28:24,620 --> 00:28:31,250
side that keeps the light that keeps

699
00:28:26,660 --> 00:28:33,020
things moving then hopefully like you

700
00:28:31,250 --> 00:28:35,330
know the the the ones that can't get

701
00:28:33,020 --> 00:28:36,860
updated will not be able to do this sort

702
00:28:35,330 --> 00:28:38,330
of stuff the ones that can well we can

703
00:28:36,860 --> 00:28:40,699
tell them to go fix their bug in the

704
00:28:38,330 --> 00:28:42,830
process which is a slight improvement

705
00:28:40,700 --> 00:28:44,690
over the current situation you could

706
00:28:42,830 --> 00:28:46,699
argue that like really it's just the

707
00:28:44,690 --> 00:28:48,500
rapid cycling and not the crazy child

708
00:28:46,700 --> 00:28:51,590
decryption that's getting us that I

709
00:28:48,500 --> 00:28:54,890
think the correctly then might not be

710
00:28:51,590 --> 00:28:56,540
wrong yeah thank you it's good I mean my

711
00:28:54,890 --> 00:28:57,770
basic assumption as you say is that well

712
00:28:56,540 --> 00:29:00,260
have some class and little boxes you

713
00:28:57,770 --> 00:29:02,090
can't get updated and then I think this

714
00:29:00,260 --> 00:29:04,460
I mean this meshes not it I say more in

715
00:29:02,090 --> 00:29:06,050
Dukes point about like how much

716
00:29:04,460 --> 00:29:08,330
commitment do we have to like how much

717
00:29:06,050 --> 00:29:09,830
sort of installed base of people who are

718
00:29:08,330 --> 00:29:11,480
exercising these functions do we have to

719
00:29:09,830 --> 00:29:12,980
have before it becomes unprofitable

720
00:29:11,480 --> 00:29:16,640
thing boxes to ossify in these but on

721
00:29:12,980 --> 00:29:18,350
these properties first a question which

722
00:29:16,640 --> 00:29:19,550
is are you done with your slice I'm

723
00:29:18,350 --> 00:29:22,959
totally done yeah I'm happy to sit down

724
00:29:19,550 --> 00:29:22,960
to again good I just wanted to make sure

725
00:29:24,100 --> 00:29:30,290
it's my personal belief that protecting

726
00:29:28,430 --> 00:29:32,210
against the lazy implementers is good

727
00:29:30,290 --> 00:29:34,730
and we're missing by the way at the lazy

728
00:29:32,210 --> 00:29:41,780
endpoint implementers

729
00:29:34,730 --> 00:29:43,460
they exist and but but I do think that

730
00:29:41,780 --> 00:29:46,639
it's important to think about the second

731
00:29:43,460 --> 00:29:48,770
aspect which is I believe that

732
00:29:46,640 --> 00:29:49,910
hard-working implementers are going to

733
00:29:48,770 --> 00:29:51,770
do their right thing they're gonna

734
00:29:49,910 --> 00:29:53,330
intercept things that's going to be

735
00:29:51,770 --> 00:29:56,690
something that will be necessary in many

736
00:29:53,330 --> 00:29:58,820
networks that's okay but good but you

737
00:29:56,690 --> 00:30:02,120
should consider whether or not the

738
00:29:58,820 --> 00:30:04,460
detection of that is part of what we

739
00:30:02,120 --> 00:30:08,049
need to concern ourselves with my

740
00:30:04,460 --> 00:30:08,049
personal belief would also be yes I

741
00:30:10,299 --> 00:30:15,918
print channel too much work what Roberto

742
00:30:13,700 --> 00:30:20,809
said I actually want to address this

743
00:30:15,919 --> 00:30:25,460
last point on this slide I haven't

744
00:30:20,809 --> 00:30:27,020
really heard a convincing model of what

745
00:30:25,460 --> 00:30:30,500
a middle box might actually want to do

746
00:30:27,020 --> 00:30:32,990
to quick rate I think that we are we've

747
00:30:30,500 --> 00:30:34,429
taken a lot of learning from some of the

748
00:30:32,990 --> 00:30:37,010
stuff that happened early on with quick

749
00:30:34,429 --> 00:30:38,630
crypto um I think we've taken a lot of

750
00:30:37,010 --> 00:30:40,549
learning for what happened in TCP I

751
00:30:38,630 --> 00:30:44,330
don't think a lot of those lessons apply

752
00:30:40,549 --> 00:30:46,370
here as far as I can see there are two

753
00:30:44,330 --> 00:30:48,590
operations that you can do if you're not

754
00:30:46,370 --> 00:30:50,689
if you basically don't have the keys

755
00:30:48,590 --> 00:30:52,428
from both ends and can't like break

756
00:30:50,690 --> 00:30:54,140
everything all the way apart there are

757
00:30:52,429 --> 00:30:56,210
two operations you can do with respect

758
00:30:54,140 --> 00:30:59,169
to version ossification one you can

759
00:30:56,210 --> 00:31:01,250
detect that it's quick and drop it and

760
00:30:59,169 --> 00:31:03,530
what we really want to keep from

761
00:31:01,250 --> 00:31:06,590
happening here is that quick version one

762
00:31:03,530 --> 00:31:08,870
does not become the flag that says this

763
00:31:06,590 --> 00:31:11,629
is quick versus this is not quick the

764
00:31:08,870 --> 00:31:13,459
other thing that you can do is in a

765
00:31:11,630 --> 00:31:15,470
future where we have determined that

766
00:31:13,460 --> 00:31:17,480
quick version one has a vulnerability

767
00:31:15,470 --> 00:31:20,510
that allows an intercepting middle box

768
00:31:17,480 --> 00:31:23,240
to actually be able to do more than we

769
00:31:20,510 --> 00:31:24,860
think it can it can use the ability to

770
00:31:23,240 --> 00:31:26,419
determine determine quick version one

771
00:31:24,860 --> 00:31:29,330
complete version two to force it down

772
00:31:26,419 --> 00:31:30,860
great attack are there any other things

773
00:31:29,330 --> 00:31:32,240
that we're trying to prevent happening

774
00:31:30,860 --> 00:31:36,289
because I think we are we're kind of

775
00:31:32,240 --> 00:31:37,909
wasting our time I see people behind you

776
00:31:36,289 --> 00:31:42,260
in the line I would like to be convinced

777
00:31:37,909 --> 00:31:43,450
that I'm wrong so mum Thompson I don't

778
00:31:42,260 --> 00:31:46,820
think you're wrong

779
00:31:43,450 --> 00:31:47,840
we have evidence at least from TLS that

780
00:31:46,820 --> 00:31:50,720
people

781
00:31:47,840 --> 00:31:54,139
to build products that detect is this

782
00:31:50,720 --> 00:31:56,600
TLS and drop it or vice versa

783
00:31:54,140 --> 00:32:01,250
is this TLS will let that pass is there

784
00:31:56,600 --> 00:32:04,879
something else and so having the ability

785
00:32:01,250 --> 00:32:06,770
to obscure them is this quick as is

786
00:32:04,880 --> 00:32:09,200
something that's kind of important too

787
00:32:06,770 --> 00:32:10,580
to be able to suppress but that's

788
00:32:09,200 --> 00:32:13,820
specifically I don't think we can

789
00:32:10,580 --> 00:32:16,309
suppress is this quick generically is

790
00:32:13,820 --> 00:32:20,059
this quick version one is a signal that

791
00:32:16,309 --> 00:32:22,010
we want to suppress because that has a

792
00:32:20,059 --> 00:32:25,760
direct effect on our ability to deploy a

793
00:32:22,010 --> 00:32:27,470
quick version in just another few

794
00:32:25,760 --> 00:32:29,809
management that Jonathan was after occur

795
00:32:27,470 --> 00:32:31,610
he's on the other mic so did this line

796
00:32:29,809 --> 00:32:40,090
until after accurate and for nothing on

797
00:32:31,610 --> 00:32:44,719
over them go ahead what it's about anger

798
00:32:40,090 --> 00:32:46,879
I'm not super convinced that to kind of

799
00:32:44,720 --> 00:32:49,100
just masking the version number is not

800
00:32:46,880 --> 00:32:51,140
to prevent very very motivated attackers

801
00:32:49,100 --> 00:32:54,740
them detecting quick version one and

802
00:32:51,140 --> 00:32:57,620
person two differences for example let's

803
00:32:54,740 --> 00:33:01,100
have we changed initial crypto scheme in

804
00:32:57,620 --> 00:33:04,399
quick version one version two what

805
00:33:01,100 --> 00:33:06,740
version to will look like an attacker

806
00:33:04,399 --> 00:33:08,928
could do trial decryption of the the

807
00:33:06,740 --> 00:33:10,460
packet the packet encryption scheme

808
00:33:08,929 --> 00:33:12,590
itself determine whether it's version

809
00:33:10,460 --> 00:33:14,720
one version do I think more substantial

810
00:33:12,590 --> 00:33:16,549
changes probably would need to be made

811
00:33:14,720 --> 00:33:18,890
for the protocol we want completed

812
00:33:16,549 --> 00:33:21,980
indistinguishability between versions to

813
00:33:18,890 --> 00:33:23,659
exist as well having said that I think

814
00:33:21,980 --> 00:33:25,520
believe protect protecting against a

815
00:33:23,659 --> 00:33:28,610
lazy implementers is like using

816
00:33:25,520 --> 00:33:30,770
obfuscation techniques to hide the

817
00:33:28,610 --> 00:33:32,779
version numbers that like if somebody is

818
00:33:30,770 --> 00:33:35,629
just implementing like a middle box like

819
00:33:32,779 --> 00:33:37,640
the one in the idea quick was hard-coded

820
00:33:35,630 --> 00:33:40,120
diverted number seven or bit number

821
00:33:37,640 --> 00:33:43,039
seven that should not be allowed to

822
00:33:40,120 --> 00:33:47,570
block quick deployment subvert and do

823
00:33:43,039 --> 00:33:48,860
first version month um so but I

824
00:33:47,570 --> 00:33:49,908
certainly agree masking the version

825
00:33:48,860 --> 00:33:51,889
number is not enough to deal with

826
00:33:49,909 --> 00:33:56,480
someone who are working no you have to

827
00:33:51,890 --> 00:33:58,760
like okay you're freaking me out yeah

828
00:33:56,480 --> 00:34:00,590
you have to

829
00:33:58,760 --> 00:34:01,309
yep in cipher the entire entire block

830
00:34:00,590 --> 00:34:03,889
and it has to end

831
00:34:01,309 --> 00:34:05,570
key that is not not publicly no um I

832
00:34:03,889 --> 00:34:08,810
guess I just want to float one other

833
00:34:05,570 --> 00:34:10,819
thing we seen um you know boxes do that

834
00:34:08,810 --> 00:34:13,429
is more aggressive than inversion

835
00:34:10,819 --> 00:34:16,129
checking and that is a protocol

836
00:34:13,429 --> 00:34:17,780
correctness enforcement and so first and

837
00:34:16,129 --> 00:34:19,368
what you do is you look at the TLS

838
00:34:17,780 --> 00:34:21,589
client oh and like I don't like this

839
00:34:19,369 --> 00:34:23,419
extension or like this extension because

840
00:34:21,589 --> 00:34:25,520
you focus on that and then you and then

841
00:34:23,418 --> 00:34:27,319
you strip it so it's it so it's

842
00:34:25,520 --> 00:34:29,300
important it's true that that's like a

843
00:34:27,319 --> 00:34:32,300
kind of a kind of interference that's

844
00:34:29,300 --> 00:34:35,270
more like it's more like aggressive than

845
00:34:32,300 --> 00:34:37,399
um checking the diversion but it's like

846
00:34:35,270 --> 00:34:39,770
but it's something that it bit as long

847
00:34:37,399 --> 00:34:40,969
as as long as the diversion scheme is

848
00:34:39,770 --> 00:34:42,230
constant with a version and that's

849
00:34:40,969 --> 00:34:43,578
public information and of course you can

850
00:34:42,230 --> 00:34:46,969
pack the whole thing and I felt like we

851
00:34:43,579 --> 00:34:49,280
we did it okay um like in the experience

852
00:34:46,969 --> 00:34:51,290
with with I mean there's some hope I

853
00:34:49,280 --> 00:34:52,790
think that like in the Box people got

854
00:34:51,290 --> 00:34:54,259
the message about TLS about these this

855
00:34:52,790 --> 00:34:56,719
tension points and littles it or not and

856
00:34:54,260 --> 00:34:59,630
like like not screwed not screw of like

857
00:34:56,719 --> 00:35:01,279
is that really Persian huh like you know

858
00:34:59,630 --> 00:35:03,650
on extension and stuff like that so I

859
00:35:01,280 --> 00:35:05,060
think there's some possibility to deal

860
00:35:03,650 --> 00:35:07,579
with it I mean he's get away with just

861
00:35:05,060 --> 00:35:08,480
hiding the version number but it but

862
00:35:07,579 --> 00:35:13,760
definitely that kind of protocol

863
00:35:08,480 --> 00:35:16,849
enforcement something even systematics

864
00:35:13,760 --> 00:35:18,410
it occurs to me that another you were

865
00:35:16,849 --> 00:35:21,260
asking why a middle box might be doing

866
00:35:18,410 --> 00:35:22,490
this another possible use case the

867
00:35:21,260 --> 00:35:23,750
little box says quick is great I love

868
00:35:22,490 --> 00:35:25,729
quick but I don't want to allow random

869
00:35:23,750 --> 00:35:27,980
you TP through so I'm this is what I'm

870
00:35:25,730 --> 00:35:30,050
using to detect that these packets are

871
00:35:27,980 --> 00:35:31,760
in fact quick and not just some other

872
00:35:30,050 --> 00:35:34,010
random UDP

873
00:35:31,760 --> 00:35:34,970
I'm obviously want that to work going

874
00:35:34,010 --> 00:35:39,339
forward but you also want that be

875
00:35:34,970 --> 00:35:44,720
possible I think so a little bit tricky

876
00:35:39,339 --> 00:35:47,480
finish wins so yes I to you that middle

877
00:35:44,720 --> 00:35:49,220
boxes will inspect and attempt to

878
00:35:47,480 --> 00:35:52,280
distinguish quick version numbers and

879
00:35:49,220 --> 00:35:55,578
the reason as echo said is that the

880
00:35:52,280 --> 00:35:57,680
ability to parse the client hello out of

881
00:35:55,579 --> 00:35:59,780
the initial is version dependent and you

882
00:35:57,680 --> 00:36:02,029
need to parse the client hello out of

883
00:35:59,780 --> 00:36:06,970
the initial if you want to do sni based

884
00:36:02,030 --> 00:36:13,310
censorship which is which is very common

885
00:36:06,970 --> 00:36:14,839
so the yeah those those systems even if

886
00:36:13,310 --> 00:36:17,779
they're set to

887
00:36:14,839 --> 00:36:21,259
not do any filtering in at some point in

888
00:36:17,779 --> 00:36:23,419
time are still going to be doing version

889
00:36:21,259 --> 00:36:26,059
dependent processing and I suspect that

890
00:36:23,419 --> 00:36:27,799
they're not going to fail open and let

891
00:36:26,059 --> 00:36:34,929
everything through if they don't like

892
00:36:27,799 --> 00:36:38,929
the movie number hi Brian Trammell again

893
00:36:34,929 --> 00:36:41,449
so one of the things I've heard is that

894
00:36:38,929 --> 00:36:43,039
there's I think actually the the model

895
00:36:41,449 --> 00:36:45,559
that Jonathan presented is probably the

896
00:36:43,039 --> 00:36:47,630
most the one that we are going to be

897
00:36:45,559 --> 00:36:48,919
least likely to say no you can't do that

898
00:36:47,630 --> 00:36:51,079
because there will be an overwhelming

899
00:36:48,919 --> 00:36:53,479
desire to do it and that is to say I

900
00:36:51,079 --> 00:36:55,729
want to distinguish quick from garbage

901
00:36:53,479 --> 00:36:58,459
because I'd like to be able to let quick

902
00:36:55,729 --> 00:37:00,288
in and not garbage and one of the ways

903
00:36:58,459 --> 00:37:01,669
that that middle box vendors will try to

904
00:37:00,289 --> 00:37:04,069
do this is the protocol correctness

905
00:37:01,669 --> 00:37:07,009
enforcement I don't actually know how

906
00:37:04,069 --> 00:37:10,400
that's like looking at how like the

907
00:37:07,009 --> 00:37:13,759
sequence of possible packets in a quick

908
00:37:10,400 --> 00:37:16,130
connection there's not a lot you can do

909
00:37:13,759 --> 00:37:17,809
there to say oh no this was wrong I'm

910
00:37:16,130 --> 00:37:19,669
not gonna let this packet through great

911
00:37:17,809 --> 00:37:21,199
that doesn't seem useful to me people

912
00:37:19,669 --> 00:37:23,419
probably try it it doesn't seem useful

913
00:37:21,199 --> 00:37:25,099
the fact that there will be an

914
00:37:23,419 --> 00:37:26,808
overwhelming desire to tell a quick

915
00:37:25,099 --> 00:37:30,049
packet from a non-quick packet means

916
00:37:26,809 --> 00:37:33,829
that I think it should be an on goal to

917
00:37:30,049 --> 00:37:35,479
just to obfuscate the distinction

918
00:37:33,829 --> 00:37:38,269
between quick packets and non packets

919
00:37:35,479 --> 00:37:41,538
because if you make it a goal you will

920
00:37:38,269 --> 00:37:42,979
fail and people will invent ways to do

921
00:37:41,539 --> 00:37:47,749
the distinguishing and it will be wrong

922
00:37:42,979 --> 00:37:49,368
and it will break I think the right

923
00:37:47,749 --> 00:37:51,558
way to go about this is to figure out

924
00:37:49,369 --> 00:37:53,719
what break point we want in the in the

925
00:37:51,559 --> 00:37:56,599
the wire image of the protocol design it

926
00:37:53,719 --> 00:38:00,709
in make it easy make it obvious but the

927
00:37:56,599 --> 00:38:02,419
blink tag on it and then defend the rest

928
00:38:00,709 --> 00:38:04,399
because the rest of this is like this

929
00:38:02,419 --> 00:38:06,739
this rabbit hole seems like it's going

930
00:38:04,400 --> 00:38:11,239
to be a lot of work for a fair amount of

931
00:38:06,739 --> 00:38:12,949
disappointment in a couple of years very

932
00:38:11,239 --> 00:38:15,949
short time so if you want to get in line

933
00:38:12,949 --> 00:38:19,130
you still can but nobody moves soon here

934
00:38:15,949 --> 00:38:20,719
it's the last one so Cory bear has tried

935
00:38:19,130 --> 00:38:22,549
to make sure I didn't create the wrong

936
00:38:20,719 --> 00:38:25,489
impression I want a quick version two

937
00:38:22,549 --> 00:38:28,099
and three and four to appear I think

938
00:38:25,489 --> 00:38:28,630
people will try and find which was great

939
00:38:28,099 --> 00:38:30,280
one

940
00:38:28,630 --> 00:38:32,350
people want to when to is available they

941
00:38:30,280 --> 00:38:33,520
wanted objects not one but two going

942
00:38:32,350 --> 00:38:35,650
through their network and they're going

943
00:38:33,520 --> 00:38:37,270
to find ways to do this if we want to

944
00:38:35,650 --> 00:38:39,340
let them learn it by some heuristics

945
00:38:37,270 --> 00:38:41,200
from traffic partners which i think is

946
00:38:39,340 --> 00:38:42,730
very hard like Brian stars then will

947
00:38:41,200 --> 00:38:45,009
still try and do this you'll produce

948
00:38:42,730 --> 00:38:46,950
products to do that if we give them an

949
00:38:45,010 --> 00:38:50,110
easy way they'll take the easy way so

950
00:38:46,950 --> 00:38:52,419
I'm not sure that ossifying this is such

951
00:38:50,110 --> 00:38:59,380
a bad thing I think it will help us

952
00:38:52,420 --> 00:39:04,000
deploy version 2 3 4 July younger can

953
00:38:59,380 --> 00:39:05,740
you hear me mark okay just checking I

954
00:39:04,000 --> 00:39:11,830
was going to text to voice but I'm not

955
00:39:05,740 --> 00:39:15,549
doing it I think as there's there's a

956
00:39:11,830 --> 00:39:17,380
couple of points and we already have

957
00:39:15,550 --> 00:39:19,270
experience with the fact that people and

958
00:39:17,380 --> 00:39:21,280
we know that people are looking to

959
00:39:19,270 --> 00:39:24,100
detect quick in the network at the

960
00:39:21,280 --> 00:39:26,230
interim I had a slide showing a bunch of

961
00:39:24,100 --> 00:39:28,660
firewalls and middle box vendors that

962
00:39:26,230 --> 00:39:30,610
are offering quick detection as as a

963
00:39:28,660 --> 00:39:32,710
feature and that's only going to

964
00:39:30,610 --> 00:39:34,690
increase as quick gets deployed more and

965
00:39:32,710 --> 00:39:38,350
more I'd be surprised if that wasn't the

966
00:39:34,690 --> 00:39:39,940
case I believe that that's going to be a

967
00:39:38,350 --> 00:39:42,040
feature for a number of reasons and we

968
00:39:39,940 --> 00:39:44,890
won't be seeing it in play with G quick

969
00:39:42,040 --> 00:39:47,800
I believe that the quick version number

970
00:39:44,890 --> 00:39:49,930
is going to be in play also at least in

971
00:39:47,800 --> 00:39:51,850
part because of the sli point people

972
00:39:49,930 --> 00:39:53,410
want to be able to do as an eye

973
00:39:51,850 --> 00:39:56,620
detection because they want to be able

974
00:39:53,410 --> 00:39:58,990
to block it's it's done it's already

975
00:39:56,620 --> 00:40:00,580
there people this is used for zero

976
00:39:58,990 --> 00:40:02,950
rating this is used for all sorts of

977
00:40:00,580 --> 00:40:05,850
things and sni is critical to get to and

978
00:40:02,950 --> 00:40:09,609
that's going to be version dependent I

979
00:40:05,850 --> 00:40:11,830
don't think that we should lose fixing

980
00:40:09,610 --> 00:40:13,450
this problem again of protecting against

981
00:40:11,830 --> 00:40:15,880
lazy implementers because at least my

982
00:40:13,450 --> 00:40:16,419
experience has been that that is a real

983
00:40:15,880 --> 00:40:18,280
problem

984
00:40:16,420 --> 00:40:21,250
it doesn't seem exciting and interesting

985
00:40:18,280 --> 00:40:22,690
but it is the real problem the one data

986
00:40:21,250 --> 00:40:24,730
point that I have is the experience that

987
00:40:22,690 --> 00:40:27,160
we had the cheek quick wear public

988
00:40:24,730 --> 00:40:30,760
documentation was available they didn't

989
00:40:27,160 --> 00:40:32,950
look at it we asked them and they said

990
00:40:30,760 --> 00:40:34,750
no it was a doc heroes a Google Doc and

991
00:40:32,950 --> 00:40:37,149
it was available but they simply didn't

992
00:40:34,750 --> 00:40:39,910
look at it and they didn't even know

993
00:40:37,150 --> 00:40:42,110
that it existed but they built a feature

994
00:40:39,910 --> 00:40:44,960
and sold it anyways

995
00:40:42,110 --> 00:40:46,670
so let's be clear about at least I'd

996
00:40:44,960 --> 00:40:48,470
like this distinction because I think it

997
00:40:46,670 --> 00:40:50,240
really lays out the options that are the

998
00:40:48,470 --> 00:40:51,770
considerations we ought to have I would

999
00:40:50,240 --> 00:40:54,080
say that we should at least build

1000
00:40:51,770 --> 00:40:55,370
against lazy implementers whether we go

1001
00:40:54,080 --> 00:40:57,230
against hard work implemented or not

1002
00:40:55,370 --> 00:40:59,930
it's clearly going to be hard I think I

1003
00:40:57,230 --> 00:41:02,810
cuz exactly right here I don't think we

1004
00:40:59,930 --> 00:41:06,230
should lose the first say solving the

1005
00:41:02,810 --> 00:41:08,090
first problem for the second one so

1006
00:41:06,230 --> 00:41:10,100
check quickly so at the end of this when

1007
00:41:08,090 --> 00:41:12,080
we have the my clients trained I think

1008
00:41:10,100 --> 00:41:14,240
we want to do a three way hum to get a

1009
00:41:12,080 --> 00:41:17,299
sense of the room on what we should be

1010
00:41:14,240 --> 00:41:19,520
doing here one would be nothing so not

1011
00:41:17,300 --> 00:41:21,800
no prevention of personalization one

1012
00:41:19,520 --> 00:41:23,780
would be protect against the lazy

1013
00:41:21,800 --> 00:41:25,400
implementers and when the last one

1014
00:41:23,780 --> 00:41:29,240
lovely we try to put through something

1015
00:41:25,400 --> 00:41:30,860
against the eager implementers just as a

1016
00:41:29,240 --> 00:41:33,649
foreshadow what we're gonna do after

1017
00:41:30,860 --> 00:41:34,180
this and I think we're cutting the line

1018
00:41:33,650 --> 00:41:36,680
at Ecker

1019
00:41:34,180 --> 00:41:38,390
unless somebody knowing that we're gonna

1020
00:41:36,680 --> 00:41:44,839
have a hum wants to still get into it

1021
00:41:38,390 --> 00:41:47,990
yeah David can I see cool so we recently

1022
00:41:44,840 --> 00:41:50,060
deployed Google quick version 46 which

1023
00:41:47,990 --> 00:41:52,549
finally got us to the IETF invariance

1024
00:41:50,060 --> 00:41:58,940
which was the old invariance before they

1025
00:41:52,550 --> 00:42:01,010
changed yay that when we did that no one

1026
00:41:58,940 --> 00:42:04,940
said anything yeah it works

1027
00:42:01,010 --> 00:42:06,530
everything's great and then weeks went

1028
00:42:04,940 --> 00:42:08,170
by and little by little middle box

1029
00:42:06,530 --> 00:42:10,700
vendors came out of the woodwork Oh

1030
00:42:08,170 --> 00:42:13,880
everything's on fire you broke X you

1031
00:42:10,700 --> 00:42:16,490
books why turns out there al are already

1032
00:42:13,880 --> 00:42:18,980
a lot of these features so some of them

1033
00:42:16,490 --> 00:42:20,839
are reasonable identifying quick because

1034
00:42:18,980 --> 00:42:22,250
it's a reasonable protocol of congestion

1035
00:42:20,840 --> 00:42:25,010
control letting it through against other

1036
00:42:22,250 --> 00:42:27,700
things that I'm ok with there are other

1037
00:42:25,010 --> 00:42:30,170
middle boxes that we're looking at S&I

1038
00:42:27,700 --> 00:42:32,120
but the reason for that is there was

1039
00:42:30,170 --> 00:42:34,400
your rating video like this video

1040
00:42:32,120 --> 00:42:36,049
service is free on our network whether

1041
00:42:34,400 --> 00:42:38,060
that's a good or bad idea is beside the

1042
00:42:36,050 --> 00:42:39,290
point but that's what they're doing and

1043
00:42:38,060 --> 00:42:41,000
they were complaining very aggressively

1044
00:42:39,290 --> 00:42:43,430
when we broke them just because we

1045
00:42:41,000 --> 00:42:47,480
slightly move the bits 4 bytes to the

1046
00:42:43,430 --> 00:42:51,109
right but the problem is like Jonah was

1047
00:42:47,480 --> 00:42:54,140
saying these people who implement this

1048
00:42:51,110 --> 00:42:55,530
don't read the docs they fall completely

1049
00:42:54,140 --> 00:42:58,560
in the category of

1050
00:42:55,530 --> 00:43:00,060
he's lazy implementers and I'm really

1051
00:42:58,560 --> 00:43:02,880
scared that we can end up in the

1052
00:43:00,060 --> 00:43:05,160
situation like TLS where they do

1053
00:43:02,880 --> 00:43:07,380
something lazy and then we're stuck so I

1054
00:43:05,160 --> 00:43:08,220
personally think we do want to do

1055
00:43:07,380 --> 00:43:11,910
something thing

1056
00:43:08,220 --> 00:43:14,609
but though protecting us hard-working

1057
00:43:11,910 --> 00:43:16,009
implementers we having a lot of smart

1058
00:43:14,610 --> 00:43:19,890
people in the room who can come up with

1059
00:43:16,010 --> 00:43:21,750
incredibly convoluted smart ideas that's

1060
00:43:19,890 --> 00:43:24,000
just terrifying but at the end of the

1061
00:43:21,750 --> 00:43:26,340
day if the client is able to identify

1062
00:43:24,000 --> 00:43:28,080
which versions you speak so is the

1063
00:43:26,340 --> 00:43:31,050
middle box going to be to some extent

1064
00:43:28,080 --> 00:43:32,580
unless we throw huge resources at the

1065
00:43:31,050 --> 00:43:34,710
service on I don't think we want to do

1066
00:43:32,580 --> 00:43:37,860
that please from the server's

1067
00:43:34,710 --> 00:43:40,410
perspective so my personal take would be

1068
00:43:37,860 --> 00:43:43,080
do a little bit so someone who's just

1069
00:43:40,410 --> 00:43:47,279
being lazy things fall over for them and

1070
00:43:43,080 --> 00:43:48,660
they notice it very early but don't go

1071
00:43:47,280 --> 00:43:51,690
don't get too smart

1072
00:43:48,660 --> 00:43:54,029
because greatest that could be really

1073
00:43:51,690 --> 00:43:55,680
dangerous and we're going to cut the

1074
00:43:54,030 --> 00:43:57,060
line of Ian's unless Patrick was on his

1075
00:43:55,680 --> 00:43:58,140
way to the microphone until the detour

1076
00:43:57,060 --> 00:44:02,790
I'm not sure no you weren't

1077
00:43:58,140 --> 00:44:05,520
okay Mia could and I wanted to come back

1078
00:44:02,790 --> 00:44:07,320
to this use case where for whatever

1079
00:44:05,520 --> 00:44:10,530
reason you want to identify certain

1080
00:44:07,320 --> 00:44:12,420
information maybe there's an eye and you

1081
00:44:10,530 --> 00:44:15,480
will block traffic if you don't identify

1082
00:44:12,420 --> 00:44:17,340
it what that means is that people think

1083
00:44:15,480 --> 00:44:19,620
they have a strong need to only allow a

1084
00:44:17,340 --> 00:44:21,720
certain kind of traffic and they will

1085
00:44:19,620 --> 00:44:24,060
block everything else so if they can't

1086
00:44:21,720 --> 00:44:27,270
get this information they will block it

1087
00:44:24,060 --> 00:44:30,029
they will block all quick right so yeah

1088
00:44:27,270 --> 00:44:31,500
so I mean like some of those cases might

1089
00:44:30,030 --> 00:44:33,900
actually the right decision but I don't

1090
00:44:31,500 --> 00:44:35,670
want to get in it situation where we get

1091
00:44:33,900 --> 00:44:37,530
to the point where people just don't

1092
00:44:35,670 --> 00:44:38,940
want to support quick anymore because

1093
00:44:37,530 --> 00:44:40,710
it's too complicated for them because

1094
00:44:38,940 --> 00:44:42,270
that would be like the worst outcome of

1095
00:44:40,710 --> 00:44:44,190
who's working with I don't think that

1096
00:44:42,270 --> 00:44:46,860
reasoning the Wersching number gets us

1097
00:44:44,190 --> 00:44:48,750
to that point but like it is it has the

1098
00:44:46,860 --> 00:44:50,430
cost and I'm not sure if there's a

1099
00:44:48,750 --> 00:44:55,920
benefit we know for real that there's a

1100
00:44:50,430 --> 00:44:57,339
cost we don't know that will be then Ben

1101
00:44:55,920 --> 00:45:00,490
Schwartz

1102
00:44:57,340 --> 00:45:02,290
so there's been some discussion of a

1103
00:45:00,490 --> 00:45:06,160
quick bit some some way to identify

1104
00:45:02,290 --> 00:45:08,890
quick or not quick I want at a minimum

1105
00:45:06,160 --> 00:45:13,029
the inverse I would like to make sure

1106
00:45:08,890 --> 00:45:15,400
that there is a space of packets an

1107
00:45:13,030 --> 00:45:17,620
inverse wire image of quick that is

1108
00:45:15,400 --> 00:45:19,030
guaranteed never to collide because I

1109
00:45:17,620 --> 00:45:21,190
would like to be able to multiplex other

1110
00:45:19,030 --> 00:45:26,620
protocols against quick on the same

1111
00:45:21,190 --> 00:45:29,260
points we did work through that well I

1112
00:45:26,620 --> 00:45:30,580
understand but this is what we're

1113
00:45:29,260 --> 00:45:31,960
talking about changing the wire image

1114
00:45:30,580 --> 00:45:33,190
okay gotta agree that you want to

1115
00:45:31,960 --> 00:45:35,440
maintain that property that we currently

1116
00:45:33,190 --> 00:45:38,560
have in case we get and do something

1117
00:45:35,440 --> 00:45:39,730
about those justification but it okay

1118
00:45:38,560 --> 00:45:41,170
thank you

1119
00:45:39,730 --> 00:45:43,000
and the other thing I will say is if you

1120
00:45:41,170 --> 00:45:45,400
want to disclose the version number two

1121
00:45:43,000 --> 00:45:49,570
for statistical monitoring purposes you

1122
00:45:45,400 --> 00:45:51,190
can do it in the last patch there

1123
00:45:49,570 --> 00:45:55,510
patrolling or make two points

1124
00:45:51,190 --> 00:45:57,340
on first two nearest point on forcing

1125
00:45:55,510 --> 00:45:59,470
people to block quick in order to do

1126
00:45:57,340 --> 00:46:01,060
censorship is the point in fact the

1127
00:45:59,470 --> 00:46:02,470
whole point of like yes and I and things

1128
00:46:01,060 --> 00:46:03,610
like it is to make a safer block

1129
00:46:02,470 --> 00:46:07,259
everything if you want to block anything

1130
00:46:03,610 --> 00:46:10,990
that's like the purpose to exercise the

1131
00:46:07,260 --> 00:46:12,940
second on to David's point on on there

1132
00:46:10,990 --> 00:46:14,379
are two costs I think - I'm trying to

1133
00:46:12,940 --> 00:46:16,570
defend this for working for looters one

1134
00:46:14,380 --> 00:46:17,980
is like you know whatever calories we

1135
00:46:16,570 --> 00:46:21,580
burn thinking about it and the second is

1136
00:46:17,980 --> 00:46:22,630
the cost to servers on I agree that it

1137
00:46:21,580 --> 00:46:24,340
will be expensive in terms of the cost

1138
00:46:22,630 --> 00:46:26,320
of our calories I do not think it out

1139
00:46:24,340 --> 00:46:28,120
yesterday I spent two servers designs

1140
00:46:26,320 --> 00:46:32,230
that scene that we discussed I think can

1141
00:46:28,120 --> 00:46:34,960
be done almost almost incremental zero

1142
00:46:32,230 --> 00:46:36,520
incremental circle would so if if that's

1143
00:46:34,960 --> 00:46:37,870
people's concern that I think that like

1144
00:46:36,520 --> 00:46:39,370
that saying we should explore and make

1145
00:46:37,870 --> 00:46:40,630
this anguish explore I feel sometimes

1146
00:46:39,370 --> 00:46:42,609
like too much work for us that's a

1147
00:46:40,630 --> 00:46:43,840
political reason and as it should be

1148
00:46:42,610 --> 00:46:46,660
clear I'm like kind of undecided between

1149
00:46:43,840 --> 00:46:48,730
these like I'm I'm full software lines

1150
00:46:46,660 --> 00:46:50,290
towards doing a really good job but I

1151
00:46:48,730 --> 00:46:54,580
understand like that may be worse is

1152
00:46:50,290 --> 00:46:56,520
better because the whole body have fun

1153
00:46:54,580 --> 00:47:00,730
comment and one clarifying question

1154
00:46:56,520 --> 00:47:03,370
regarding Maria's comment my point is

1155
00:47:00,730 --> 00:47:08,310
that made conditional greasing is a good

1156
00:47:03,370 --> 00:47:11,350
way to prevent the mailboxes trying to

1157
00:47:08,310 --> 00:47:13,390
decrypt the client in shop

1158
00:47:11,350 --> 00:47:16,000
to see if the client how is good because

1159
00:47:13,390 --> 00:47:18,220
in case of meat connection grazing you

1160
00:47:16,000 --> 00:47:19,600
the middle box would see a long hitter

1161
00:47:18,220 --> 00:47:22,299
pocket for gaining another version

1162
00:47:19,600 --> 00:47:24,190
that's unacceptable and if those middle

1163
00:47:22,300 --> 00:47:28,380
boxes dropped that because it's anti

1164
00:47:24,190 --> 00:47:32,440
crypto then the connection fail so that

1165
00:47:28,380 --> 00:47:35,140
is kind and the clarification question

1166
00:47:32,440 --> 00:47:38,470
is regarding the consist of call are we

1167
00:47:35,140 --> 00:47:41,529
going to discuss the options based on

1168
00:47:38,470 --> 00:47:43,779
the presumption that they are optional

1169
00:47:41,530 --> 00:47:46,390
features of quick or I will considering

1170
00:47:43,780 --> 00:47:48,250
them at the mandatory feature I didn't

1171
00:47:46,390 --> 00:47:50,980
catch the last what you said are we

1172
00:47:48,250 --> 00:47:53,890
considering them as it's optional I mean

1173
00:47:50,980 --> 00:47:56,020
are we making consensus calls based on

1174
00:47:53,890 --> 00:47:59,200
the assumption that each option is

1175
00:47:56,020 --> 00:48:01,150
considered as an optional feature or are

1176
00:47:59,200 --> 00:48:04,480
we considering them as a mandatory

1177
00:48:01,150 --> 00:48:06,250
feature good thanks for rating that so I

1178
00:48:04,480 --> 00:48:08,620
had assumed we were kind of discussed

1179
00:48:06,250 --> 00:48:10,300
and that's mandatory but I'm that was an

1180
00:48:08,620 --> 00:48:12,310
assumption and that might be my

1181
00:48:10,300 --> 00:48:15,480
assumption it's good cuz you already at

1182
00:48:12,310 --> 00:48:17,770
this point because some of these are

1183
00:48:15,480 --> 00:48:19,450
potentially optimal optional and some of

1184
00:48:17,770 --> 00:48:21,160
them potentially not optional so like

1185
00:48:19,450 --> 00:48:22,509
the version where you like remove the

1186
00:48:21,160 --> 00:48:24,490
version number and you travel decrypt

1187
00:48:22,510 --> 00:48:26,230
like obvious enough is not optional huh

1188
00:48:24,490 --> 00:48:28,240
and the version where you do make

1189
00:48:26,230 --> 00:48:30,340
connection greasing or this alternate

1190
00:48:28,240 --> 00:48:32,200
version number is optional and so that's

1191
00:48:30,340 --> 00:48:33,280
actually I don't know how to I that's

1192
00:48:32,200 --> 00:48:34,899
why you get paid the big bucks to sort

1193
00:48:33,280 --> 00:48:36,310
this out but like it's a more

1194
00:48:34,900 --> 00:48:39,000
complicated question than just optional

1195
00:48:36,310 --> 00:48:39,000
versus not optional

1196
00:48:39,060 --> 00:48:44,259
yes about Google I thank you for

1197
00:48:42,520 --> 00:48:45,820
bringing that up the zoo I assumed that

1198
00:48:44,260 --> 00:48:48,450
they were all going to be optional so

1199
00:48:45,820 --> 00:48:48,450
obviously I was wrong

1200
00:48:49,210 --> 00:48:53,200
one question is are any of the options

1201
00:48:51,310 --> 00:48:55,090
going to be I think what Christian at

1202
00:48:53,200 --> 00:48:57,009
some point floated of basically like

1203
00:48:55,090 --> 00:48:59,560
shipping new versions in a relatively

1204
00:48:57,010 --> 00:49:01,480
timely fashion so like the version

1205
00:48:59,560 --> 00:49:03,670
update mechanic mechanism of these

1206
00:49:01,480 --> 00:49:06,160
middle boxes is actually exercise one

1207
00:49:03,670 --> 00:49:07,180
Watson is that do-nothing I mean that's

1208
00:49:06,160 --> 00:49:08,379
not really do nothing that's

1209
00:49:07,180 --> 00:49:10,210
specifically saying like we are

1210
00:49:08,380 --> 00:49:12,460
proactively going to try to ship

1211
00:49:10,210 --> 00:49:14,680
versions on a like once a year or more

1212
00:49:12,460 --> 00:49:16,750
frequent basis because as long as we're

1213
00:49:14,680 --> 00:49:20,919
exercising these these joints at that

1214
00:49:16,750 --> 00:49:22,930
frequency we think it's okay so we can

1215
00:49:20,920 --> 00:49:24,670
hum on this but it's it's kind of a

1216
00:49:22,930 --> 00:49:26,890
non-binding right I mean

1217
00:49:24,670 --> 00:49:28,329
the building a protocol here and then we

1218
00:49:26,890 --> 00:49:30,129
can you can have about what's optional

1219
00:49:28,329 --> 00:49:32,469
what's required with it and so on but we

1220
00:49:30,130 --> 00:49:34,359
can't really you know agree on shipping

1221
00:49:32,469 --> 00:49:36,160
very frequently for the foreseeable

1222
00:49:34,359 --> 00:49:37,808
future so it's an aspiration that we can

1223
00:49:36,160 --> 00:49:40,029
have in addition to something in the

1224
00:49:37,809 --> 00:49:41,769
protocol or not but it's you know what

1225
00:49:40,029 --> 00:49:44,259
about what the hum do really other than

1226
00:49:41,769 --> 00:49:46,238
that giving us a good feeling okay

1227
00:49:44,259 --> 00:49:49,630
thanks and then I think I want a carpet

1228
00:49:46,239 --> 00:49:51,579
I don't have to close the lines I'm a

1229
00:49:49,630 --> 00:49:53,529
little more concerned about like more

1230
00:49:51,579 --> 00:49:55,900
intrusive termination than I am about

1231
00:49:53,529 --> 00:49:59,140
any of these things at this point but

1232
00:49:55,900 --> 00:50:04,150
that's just me now you're using your IAB

1233
00:49:59,140 --> 00:50:07,538
override or did you not hear me he's

1234
00:50:04,150 --> 00:50:13,749
saving right you see there's an IV of

1235
00:50:07,539 --> 00:50:14,979
right um so I thought this was gonna be

1236
00:50:13,749 --> 00:50:17,410
easy to be ready humming it sounds like

1237
00:50:14,979 --> 00:50:19,989
it's not um so I'm not gonna engineer

1238
00:50:17,410 --> 00:50:24,058
this um up here in my current shape but

1239
00:50:19,989 --> 00:50:26,769
if somebody wanted to propose something

1240
00:50:24,059 --> 00:50:29,349
right that's actually what I was

1241
00:50:26,769 --> 00:50:31,390
standing up to see earlier I think you

1242
00:50:29,349 --> 00:50:33,579
can make the optional or not optional

1243
00:50:31,390 --> 00:50:36,308
question a later one if you believe this

1244
00:50:33,579 --> 00:50:39,759
problem is worth solving that's what it

1245
00:50:36,309 --> 00:50:42,160
seems like this light is about maybe

1246
00:50:39,759 --> 00:50:44,619
that's one way of so what I what I

1247
00:50:42,160 --> 00:50:47,199
wanted to do is do a three-way hum on

1248
00:50:44,619 --> 00:50:49,239
this is we should do nothing here where

1249
00:50:47,199 --> 00:50:51,219
we should try and protect against lazy

1250
00:50:49,239 --> 00:50:53,439
implementers or we should try against

1251
00:50:51,219 --> 00:50:55,509
attractive lady and hard-working

1252
00:50:53,439 --> 00:50:58,509
implementation if I get one with the

1253
00:50:55,509 --> 00:51:00,339
other and that's a useful hum to have

1254
00:50:58,509 --> 00:51:01,420
them then I and we can we can have

1255
00:51:00,339 --> 00:51:03,130
another harm on something else

1256
00:51:01,420 --> 00:51:05,979
afterwards that's good if we need to

1257
00:51:03,130 --> 00:51:08,079
have a two dimensional harm then no it's

1258
00:51:05,979 --> 00:51:09,968
okay but my my solution will be if you

1259
00:51:08,079 --> 00:51:13,140
want it to be optional so that you don't

1260
00:51:09,969 --> 00:51:15,429
implement it then hum for the first one

1261
00:51:13,140 --> 00:51:20,469
okay that's fair

1262
00:51:15,429 --> 00:51:22,900
and I I have some concern about this

1263
00:51:20,469 --> 00:51:24,549
lazy eager distinction I think if I were

1264
00:51:22,900 --> 00:51:28,719
a really lazy implementer I would just

1265
00:51:24,549 --> 00:51:30,400
grab the some quick library and shove

1266
00:51:28,719 --> 00:51:33,609
the packets through the through the

1267
00:51:30,400 --> 00:51:35,529
parser so if then you should come for

1268
00:51:33,609 --> 00:51:38,140
the last option I think it's what what

1269
00:51:35,529 --> 00:51:40,300
the answer would be because

1270
00:51:38,140 --> 00:51:41,799
that is the distinction right the lazy

1271
00:51:40,300 --> 00:51:43,630
implement I wouldn't wouldn't even do

1272
00:51:41,800 --> 00:51:45,220
that right but I mean I think it's

1273
00:51:43,630 --> 00:51:47,230
actually less engineering work than

1274
00:51:45,220 --> 00:51:49,359
writing your own parser and while there

1275
00:51:47,230 --> 00:51:50,890
are certainly some super tightly CPU

1276
00:51:49,360 --> 00:51:53,890
constrained places where you can't do

1277
00:51:50,890 --> 00:51:57,629
this you know I think CPUs continue to

1278
00:51:53,890 --> 00:51:59,710
achieve all right

1279
00:51:57,630 --> 00:52:02,530
so if you lunch a another question

1280
00:51:59,710 --> 00:52:05,650
because I might in sadhana people keep

1281
00:52:02,530 --> 00:52:07,300
going to microphone is that maybe this

1282
00:52:05,650 --> 00:52:08,680
is useful to get a sense of the room but

1283
00:52:07,300 --> 00:52:11,290
effectively you know if there would be a

1284
00:52:08,680 --> 00:52:14,319
solution for protecting against smart

1285
00:52:11,290 --> 00:52:16,720
implementers that has zero cost right

1286
00:52:14,320 --> 00:52:17,650
then why not do it but like we don't

1287
00:52:16,720 --> 00:52:19,089
have it as so I think your answer

1288
00:52:17,650 --> 00:52:21,610
depends on the solution you're looking

1289
00:52:19,090 --> 00:52:26,800
at sure but anyway

1290
00:52:21,610 --> 00:52:30,160
uh-hum time okay Kristin IO your beard

1291
00:52:26,800 --> 00:52:31,810
it's about the hum sure Christians was a

1292
00:52:30,160 --> 00:52:35,319
valley comer to anyway go ahead be quick

1293
00:52:31,810 --> 00:52:36,880
so there's understand the spec thing

1294
00:52:35,320 --> 00:52:38,590
implementations that don't understand

1295
00:52:36,880 --> 00:52:41,140
the spec and there's implementations

1296
00:52:38,590 --> 00:52:42,790
that understand the spec right that's

1297
00:52:41,140 --> 00:52:45,879
one way to define lazy versus

1298
00:52:42,790 --> 00:52:47,560
hard-working I don't know if you want to

1299
00:52:45,880 --> 00:52:49,690
change anything I just want to say that

1300
00:52:47,560 --> 00:52:51,759
this is a definition that we can wholly

1301
00:52:49,690 --> 00:52:55,480
agree on because it it's actually

1302
00:52:51,760 --> 00:52:58,000
definitional I'm gonna stick with the

1303
00:52:55,480 --> 00:53:02,710
lazy hardworking just because then

1304
00:52:58,000 --> 00:53:05,110
that's what I'm gonna do right and this

1305
00:53:02,710 --> 00:53:06,910
is I mean to get a general sense of the

1306
00:53:05,110 --> 00:53:09,900
room the details of this obviously will

1307
00:53:06,910 --> 00:53:12,819
they need to have proposals worked out

1308
00:53:09,900 --> 00:53:18,160
right so as I said we're gonna do three

1309
00:53:12,820 --> 00:53:20,280
hums on whether we should do nothing to

1310
00:53:18,160 --> 00:53:23,020
prevent personal version ossification

1311
00:53:20,280 --> 00:53:28,960
whether we should try and protect

1312
00:53:23,020 --> 00:53:31,750
against version of vacation or get lazy

1313
00:53:28,960 --> 00:53:35,170
implementers that would otherwise

1314
00:53:31,750 --> 00:53:36,970
falsify or if we should try to have a

1315
00:53:35,170 --> 00:53:38,170
describe type of protection against the

1316
00:53:36,970 --> 00:53:40,359
hard-working at the labs

1317
00:53:38,170 --> 00:53:42,280
right so you believe we should do

1318
00:53:40,360 --> 00:53:45,240
nothing to prevent version ossification

1319
00:53:42,280 --> 00:53:45,240
to be some now

1320
00:53:46,310 --> 00:53:53,630
all right thank you if you believe we

1321
00:53:51,770 --> 00:54:00,020
should do something to protect against

1322
00:53:53,630 --> 00:54:03,320
lazy implementers please from now thank

1323
00:54:00,020 --> 00:54:04,670
you and if you believe we should do

1324
00:54:03,320 --> 00:54:06,320
something to protect protect against

1325
00:54:04,670 --> 00:54:13,100
hard-working implementers please from

1326
00:54:06,320 --> 00:54:15,260
now I would call that strong consensus

1327
00:54:13,100 --> 00:54:17,930
for the middle option I'm looking at the

1328
00:54:15,260 --> 00:54:21,650
lazy oh no no that there were a few hums

1329
00:54:17,930 --> 00:54:25,730
in jabber for nothing and I don't see

1330
00:54:21,650 --> 00:54:28,640
any endeavour for the other options so

1331
00:54:25,730 --> 00:54:31,430
it sounds like it's definitely the

1332
00:54:28,640 --> 00:54:34,879
middle option or even you know little

1333
00:54:31,430 --> 00:54:38,600
biased weak so so just to be clear this

1334
00:54:34,880 --> 00:54:41,150
is a decision that will bind let me

1335
00:54:38,600 --> 00:54:43,009
speak up sorry Martin Thompson it to be

1336
00:54:41,150 --> 00:54:46,250
clear this is a decision that will bind

1337
00:54:43,010 --> 00:54:50,030
our actions in this working group before

1338
00:54:46,250 --> 00:54:51,680
we should protocol yes and that does not

1339
00:54:50,030 --> 00:54:55,400
preclude someone building something

1340
00:54:51,680 --> 00:54:57,379
additional at some later time it's

1341
00:54:55,400 --> 00:55:00,110
called a decision to bind future action

1342
00:54:57,380 --> 00:55:01,970
that is often problematic exactly that's

1343
00:55:00,110 --> 00:55:04,430
I'm just clarifying that for some people

1344
00:55:01,970 --> 00:55:05,930
I don't know that we can really so for

1345
00:55:04,430 --> 00:55:11,600
those people who wanted to for instance

1346
00:55:05,930 --> 00:55:15,440
do the dedicated hard-working maybe even

1347
00:55:11,600 --> 00:55:17,270
malicious implementers who wanted do

1348
00:55:15,440 --> 00:55:19,520
things with the protocol so we can

1349
00:55:17,270 --> 00:55:22,250
augment this by doron that's my

1350
00:55:19,520 --> 00:55:24,640
understanding so what I think that the

1351
00:55:22,250 --> 00:55:27,020
purpose of the hum was is to determine

1352
00:55:24,640 --> 00:55:29,600
what we need to do for a quick version

1353
00:55:27,020 --> 00:55:32,780
one which means the currently they'll

1354
00:55:29,600 --> 00:55:35,990
open specs and I think we hummed on that

1355
00:55:32,780 --> 00:55:39,560
it doesn't preclude anything further in

1356
00:55:35,990 --> 00:55:40,339
future versions of quick Martin yeah

1357
00:55:39,560 --> 00:55:43,220
yeah

1358
00:55:40,340 --> 00:55:44,840
Martin Duke yet the optional stuff

1359
00:55:43,220 --> 00:55:48,859
almost by definition does it need to

1360
00:55:44,840 --> 00:55:50,720
block B 1 because it's optional as long

1361
00:55:48,860 --> 00:55:53,900
as we've put some thought into how this

1362
00:55:50,720 --> 00:55:56,240
would work we'll have some there'll be a

1363
00:55:53,900 --> 00:55:59,500
decent interval of time where there's Q

1364
00:55:56,240 --> 00:56:01,450
X X X versions going around there's F F

1365
00:55:59,500 --> 00:56:03,100
our versions going around which will

1366
00:56:01,450 --> 00:56:05,470
give us some protection against this but

1367
00:56:03,100 --> 00:56:07,000
I would feel pretty happy if we had a

1368
00:56:05,470 --> 00:56:08,649
notion of how we're gonna approach it in

1369
00:56:07,000 --> 00:56:12,940
an optional manner and have that follow

1370
00:56:08,650 --> 00:56:16,840
the the core of quick specification what

1371
00:56:12,940 --> 00:56:19,450
is this is it you'll be happy to follow

1372
00:56:16,840 --> 00:56:23,170
this in an optional manner to have to

1373
00:56:19,450 --> 00:56:26,319
have a a solution for lazy implementers

1374
00:56:23,170 --> 00:56:28,690
that is optional that follows the beef

1375
00:56:26,320 --> 00:56:32,020
cork have that full respect out in and

1376
00:56:28,690 --> 00:56:34,150
our seed if necessary after the rest of

1377
00:56:32,020 --> 00:56:35,410
Creek goes to RFC but so this is an

1378
00:56:34,150 --> 00:56:37,120
interesting point where the question is

1379
00:56:35,410 --> 00:56:40,750
is this an optional part of the

1380
00:56:37,120 --> 00:56:42,850
specification or is it required or again

1381
00:56:40,750 --> 00:56:44,620
and that's depending on the design I

1382
00:56:42,850 --> 00:56:46,600
mean I don't want to have that argument

1383
00:56:44,620 --> 00:56:48,630
now but there's some there's some what

1384
00:56:46,600 --> 00:56:50,680
designs really requires this to be

1385
00:56:48,630 --> 00:56:57,070
everyone to do it and others that are

1386
00:56:50,680 --> 00:56:59,500
purely optional okay yeah cool even I

1387
00:56:57,070 --> 00:57:00,640
just wanted to say because I'm not sure

1388
00:56:59,500 --> 00:57:02,640
it was almost like there is this option

1389
00:57:00,640 --> 00:57:04,960
to do nothing and protect against lazy

1390
00:57:02,640 --> 00:57:10,660
implemented by deploying two versions at

1391
00:57:04,960 --> 00:57:12,040
once right I didn't quite use that the

1392
00:57:10,660 --> 00:57:15,490
acoustics are really poor you need to

1393
00:57:12,040 --> 00:57:17,560
really do nothing and protect against

1394
00:57:15,490 --> 00:57:22,000
they the implementers by deploying

1395
00:57:17,560 --> 00:57:28,150
tuitions at once it's not clear whether

1396
00:57:22,000 --> 00:57:29,890
that's a long-term solution it might

1397
00:57:28,150 --> 00:57:33,070
help us initially right but at some

1398
00:57:29,890 --> 00:57:35,140
point it might stop helping us by

1399
00:57:33,070 --> 00:57:37,180
deploying worksheets very quickly in

1400
00:57:35,140 --> 00:57:39,310
dynamically like this this is again sort

1401
00:57:37,180 --> 00:57:40,839
of this is also what what was suggested

1402
00:57:39,310 --> 00:57:42,160
earlier right that if we all agree to

1403
00:57:40,840 --> 00:57:44,170
should like to rev the version very

1404
00:57:42,160 --> 00:57:45,759
quickly that would help us but that is

1405
00:57:44,170 --> 00:57:47,250
certainly true but it's not really

1406
00:57:45,760 --> 00:57:51,550
something that the working group can

1407
00:57:47,250 --> 00:57:53,470
agree to because it it affects people's

1408
00:57:51,550 --> 00:57:55,570
deployment so it can aspire to that but

1409
00:57:53,470 --> 00:58:03,879
we can certainly agree to put something

1410
00:57:55,570 --> 00:58:05,620
in the protocol as a mechanism I think

1411
00:58:03,880 --> 00:58:07,780
was on whether we include something in

1412
00:58:05,620 --> 00:58:09,490
the design of the protocol to prevent

1413
00:58:07,780 --> 00:58:11,560
against verse notification by lazy

1414
00:58:09,490 --> 00:58:13,450
implementers right because that's what

1415
00:58:11,560 --> 00:58:14,799
the issue is about the issue isn't about

1416
00:58:13,450 --> 00:58:18,040
you know it should we all try and wrap

1417
00:58:14,800 --> 00:58:24,010
the versions very quickly actually my

1418
00:58:18,040 --> 00:58:26,980
some travel different meaning that well

1419
00:58:24,010 --> 00:58:29,470
I thought that we were having or we are

1420
00:58:26,980 --> 00:58:32,710
confident about spending our beam and

1421
00:58:29,470 --> 00:58:37,500
discussion time on dealing with about

1422
00:58:32,710 --> 00:58:40,750
those options I mean so I think our

1423
00:58:37,500 --> 00:58:45,700
consensus is that we would spend time on

1424
00:58:40,750 --> 00:58:48,670
discussing how we prevent those lazy but

1425
00:58:45,700 --> 00:58:52,060
that we wouldn't spend even discussion

1426
00:58:48,670 --> 00:58:57,970
time on discussing how we prevent those

1427
00:58:52,060 --> 00:58:59,560
hard-working well yes or no in a sense

1428
00:58:57,970 --> 00:59:01,029
that we would certainly sort of hum

1429
00:58:59,560 --> 00:59:03,100
would certainly indicate that we should

1430
00:59:01,030 --> 00:59:05,290
spend our time on on the middle bullet

1431
00:59:03,100 --> 00:59:07,380
so to speak but but with the intent of

1432
00:59:05,290 --> 00:59:10,300
actually coming up with the mechanism

1433
00:59:07,380 --> 00:59:11,770
yeah that matched my assumption as well

1434
00:59:10,300 --> 00:59:13,750
which is we already spent some time on

1435
00:59:11,770 --> 00:59:14,620
this problem and then maybe we'd come up

1436
00:59:13,750 --> 00:59:15,760
with solution which didn't require

1437
00:59:14,620 --> 00:59:18,009
change there were I put a call or

1438
00:59:15,760 --> 00:59:19,630
concede one in which case we would like

1439
00:59:18,010 --> 00:59:20,950
put it down in this case design thinking

1440
00:59:19,630 --> 00:59:22,450
about it or there or we hope the

1441
00:59:20,950 --> 00:59:24,910
solution fire chief nor a protocol in

1442
00:59:22,450 --> 00:59:26,290
case we make those changes that's

1443
00:59:24,910 --> 00:59:32,950
basically I assume who were hunting for

1444
00:59:26,290 --> 00:59:33,910
um so yeah I guess um I don't know how

1445
00:59:32,950 --> 00:59:34,960
you want to actually in the car make

1446
00:59:33,910 --> 00:59:39,549
progress in this do we need a design

1447
00:59:34,960 --> 00:59:42,870
team anything else okay so I step back

1448
00:59:39,550 --> 00:59:44,860
and let you manage are you volunteering

1449
00:59:42,870 --> 00:59:48,270
certainly how be part of that yeah um

1450
00:59:44,860 --> 00:59:48,270
after organize if you want

1451
00:59:48,810 --> 00:59:54,730
so mutton Thomson not nothing joke

1452
00:59:51,430 --> 00:59:57,040
observed that if we remove this from

1453
00:59:54,730 --> 00:59:59,010
blocking the one we might have some time

1454
00:59:57,040 --> 01:00:01,840
or suggested that that with the case

1455
00:59:59,010 --> 01:00:04,720
because we're in the state now where the

1456
01:00:01,840 --> 01:00:06,220
core transport and invariance and even

1457
01:00:04,720 --> 01:00:07,839
recovery is getting to the point where

1458
01:00:06,220 --> 01:00:10,029
it's pretty mature

1459
01:00:07,840 --> 01:00:13,930
I suspect that those will be sitting

1460
01:00:10,030 --> 01:00:16,990
there done or some time while we work

1461
01:00:13,930 --> 01:00:19,120
for the h3 stuff to finalize and so I

1462
01:00:16,990 --> 01:00:20,529
suspect we'll have plenty of time to to

1463
01:00:19,120 --> 01:00:22,600
sort this out this is not a particularly

1464
01:00:20,530 --> 01:00:26,990
difficult problem in it and if we go for

1465
01:00:22,600 --> 01:00:28,368
this sort of lazy implementers one when

1466
01:00:26,990 --> 01:00:33,319
we can come up with a pretty simple

1467
01:00:28,369 --> 01:00:38,060
solution I have three time line this to

1468
01:00:33,320 --> 01:00:39,619
have it closed by the theorem like let

1469
01:00:38,060 --> 01:00:41,599
have a design team of some sort work on

1470
01:00:39,619 --> 01:00:43,910
this and then I'd like to say pretty

1471
01:00:41,599 --> 01:00:46,880
points on the arum bring to the puzzle

1472
01:00:43,910 --> 01:00:48,290
at the inner yeah okay can we see a show

1473
01:00:46,880 --> 01:00:54,830
of hands who's interested in

1474
01:00:48,290 --> 01:00:56,660
contributing to that okay the design

1475
01:00:54,830 --> 01:01:00,920
design team to prevent version

1476
01:00:56,660 --> 01:01:04,339
ossification for lazy implement along

1477
01:01:00,920 --> 01:01:05,660
these lines so for the minute can you

1478
01:01:04,339 --> 01:01:08,060
put your hands up again not within

1479
01:01:05,660 --> 01:01:10,490
minutes we have kazuo we have Jana

1480
01:01:08,060 --> 01:01:15,799
Davidson Aussie mark Duke Christian

1481
01:01:10,490 --> 01:01:19,580
Luther Martin seaman roberto support

1482
01:01:15,800 --> 01:01:21,980
acre the usual suspects I guess Chris

1483
01:01:19,580 --> 01:01:31,759
would think more hands keep going up

1484
01:01:21,980 --> 01:01:38,300
Yaya kono very back Matt Thompson right

1485
01:01:31,760 --> 01:01:40,280
I forgot your name Erica near so I think

1486
01:01:38,300 --> 01:01:41,540
we have more than enough if I haven't

1487
01:01:40,280 --> 01:01:42,980
called your name Andy interested I'm

1488
01:01:41,540 --> 01:01:46,009
sure you know one of the people we named

1489
01:01:42,980 --> 01:01:50,060
go to them and and can we have a

1490
01:01:46,010 --> 01:01:53,900
volunteer to lead that effort that car

1491
01:01:50,060 --> 01:01:54,890
you're you're a gentleman okay so if you

1492
01:01:53,900 --> 01:01:56,210
didn't put your hand up but you change

1493
01:01:54,890 --> 01:01:57,830
your mind please go and talk to ekor and

1494
01:01:56,210 --> 01:01:59,750
he'll coordinate that group and we'll

1495
01:01:57,830 --> 01:02:08,630
hopefully hear back from you at the

1496
01:01:59,750 --> 01:02:11,500
interim or earlier yeah do we want to

1497
01:02:08,630 --> 01:02:14,780
consider early detection of a downgrade

1498
01:02:11,500 --> 01:02:18,800
we call it a downgrade attack in scope

1499
01:02:14,780 --> 01:02:20,720
for this because if you want to detect a

1500
01:02:18,800 --> 01:02:22,010
downgrade it should be early enough that

1501
01:02:20,720 --> 01:02:27,740
you understand it's a different attack

1502
01:02:22,010 --> 01:02:29,510
surface potentially I want that was very

1503
01:02:27,740 --> 01:02:31,549
quick because when a if it if it red

1504
01:02:29,510 --> 01:02:33,080
walls were going to punt it 17 we talked

1505
01:02:31,550 --> 01:02:35,330
about this before when when we removed

1506
01:02:33,080 --> 01:02:37,040
the version negotiation stuff from the

1507
01:02:35,330 --> 01:02:39,710
from the draft that was on the

1508
01:02:37,040 --> 01:02:41,690
understanding that

1509
01:02:39,710 --> 01:02:43,880
would have a solution that hasn't been

1510
01:02:41,690 --> 01:02:46,460
forthcoming or we haven't discussed it

1511
01:02:43,880 --> 01:02:48,290
and any length I think that's because we

1512
01:02:46,460 --> 01:02:54,710
made a mistake and drop it from the

1513
01:02:48,290 --> 01:02:56,390
issues list version downgrade is not

1514
01:02:54,710 --> 01:03:01,540
something you can really detect until

1515
01:02:56,390 --> 01:03:04,220
you've got a shared context and so

1516
01:03:01,540 --> 01:03:07,130
whatever we do I think we need to couple

1517
01:03:04,220 --> 01:03:09,080
that to the version negotiation work

1518
01:03:07,130 --> 01:03:10,510
that's that's ongoing and I think that

1519
01:03:09,080 --> 01:03:12,920
guy has a proposal on that one that's

1520
01:03:10,510 --> 01:03:16,940
relatively sensible so we should look at

1521
01:03:12,920 --> 01:03:18,650
that because I wanna make sure I

1522
01:03:16,940 --> 01:03:23,869
understand that they've downgrade so in

1523
01:03:18,650 --> 01:03:25,550
the present quick design um there is no

1524
01:03:23,869 --> 01:03:26,660
version of eëtion him all right it's a

1525
01:03:25,550 --> 01:03:29,810
version that was impossible

1526
01:03:26,660 --> 01:03:31,609
um in I was not proposing to change

1527
01:03:29,810 --> 01:03:33,890
those semantics I'd like to change those

1528
01:03:31,609 --> 01:03:36,830
semantics but like in this in this uh

1529
01:03:33,890 --> 01:03:39,230
not to change them so basically I don't

1530
01:03:36,830 --> 01:03:40,339
think this would change anything in that

1531
01:03:39,230 --> 01:03:43,750
respect but maybe I misunderstood

1532
01:03:40,339 --> 01:03:43,750
something about hyper reasoning okay

1533
01:03:45,940 --> 01:03:50,270
dudes cannot see as the person who wrote

1534
01:03:48,560 --> 01:03:53,630
the pr to remove growth and area

1535
01:03:50,270 --> 01:03:55,940
prevention from the protocol when the

1536
01:03:53,630 --> 01:03:58,130
reason we did that at the time was that

1537
01:03:55,940 --> 01:04:01,160
we were rattling quite a bit about how

1538
01:03:58,130 --> 01:04:03,230
to do it and the consensus in the room

1539
01:04:01,160 --> 01:04:06,230
at the time which he decided decided to

1540
01:04:03,230 --> 01:04:09,080
move forward with was taken out for now

1541
01:04:06,230 --> 01:04:10,970
we will whatever happens be able to

1542
01:04:09,080 --> 01:04:14,150
implement it as a transport parameter

1543
01:04:10,970 --> 01:04:15,680
extension so when quick v2 comes into

1544
01:04:14,150 --> 01:04:18,530
being it will come alongside an

1545
01:04:15,680 --> 01:04:20,509
extension to quit v1 so that both can

1546
01:04:18,530 --> 01:04:25,310
prevent this doubt great so that's the

1547
01:04:20,510 --> 01:04:27,589
current plan of record so to be clear

1548
01:04:25,310 --> 01:04:29,359
I'm trying to avoid rattling on this I'm

1549
01:04:27,589 --> 01:04:32,450
asking what I hope to be a procedural

1550
01:04:29,359 --> 01:04:34,460
question for the design team we are

1551
01:04:32,450 --> 01:04:39,049
making to tackle this specific problem

1552
01:04:34,460 --> 01:04:42,380
is downgrade detection prevention

1553
01:04:39,050 --> 01:04:44,890
detection part of the scope of the

1554
01:04:42,380 --> 01:04:44,890
design team

1555
01:04:45,400 --> 01:04:50,099
I think you know and the answer is there

1556
01:04:47,739 --> 01:04:51,789
isn't any version negotiation at all so

1557
01:04:50,099 --> 01:05:01,450
therefore you don't need to tech

1558
01:04:51,789 --> 01:05:03,759
downgrades okay all right

1559
01:05:01,450 --> 01:05:06,549
so I think that closes out the issues

1560
01:05:03,759 --> 01:05:12,700
that we deferred yesterday did anyone

1561
01:05:06,549 --> 01:05:14,979
does did we miss any there okay that

1562
01:05:12,700 --> 01:05:18,399
leaves a couple of different discussions

1563
01:05:14,979 --> 01:05:19,598
oh we have the recovery draft which I

1564
01:05:18,400 --> 01:05:21,969
think it's good to do in this room

1565
01:05:19,599 --> 01:05:24,369
because it's a broader set of folks then

1566
01:05:21,969 --> 01:05:27,219
come to our income sometimes we also

1567
01:05:24,369 --> 01:05:30,130
have the HTP draft and we also have the

1568
01:05:27,219 --> 01:05:34,329
discussion of HTTP priorities what I'd

1569
01:05:30,130 --> 01:05:37,660
suggest is we take 15 minutes to discuss

1570
01:05:34,329 --> 01:05:40,359
priorities now at the most and then

1571
01:05:37,660 --> 01:05:41,769
discuss recovery and then with the

1572
01:05:40,359 --> 01:05:45,779
remaining time we go back to the other

1573
01:05:41,769 --> 01:05:45,779
HTTP issues so it's unreasonable

1574
01:05:51,290 --> 01:05:58,490
I thought Kristen was going to the mic

1575
01:05:54,160 --> 01:06:02,420
okay as a as long as we can time bomb

1576
01:05:58,490 --> 01:06:05,240
the priorities discussion of course that

1577
01:06:02,420 --> 01:06:07,160
was that was part of the deal so there

1578
01:06:05,240 --> 01:06:11,569
was a side meeting this morning about

1579
01:06:07,160 --> 01:06:14,560
HTTP priorities and and uh I think a

1580
01:06:11,570 --> 01:06:17,390
useful discussion there one of our

1581
01:06:14,560 --> 01:06:19,340
constraints for the HTTP deliverable is

1582
01:06:17,390 --> 01:06:21,080
is that we need to deliver something

1583
01:06:19,340 --> 01:06:23,810
that's compatible with this vinick's of

1584
01:06:21,080 --> 01:06:27,440
HTTP to I believe is the phrasing that's

1585
01:06:23,810 --> 01:06:30,230
in the Charter and one can interpret

1586
01:06:27,440 --> 01:06:33,080
that to include priorities and so our

1587
01:06:30,230 --> 01:06:35,540
deliverable has currently has an HTTP

1588
01:06:33,080 --> 01:06:38,660
two somewhat compatible priority scheme

1589
01:06:35,540 --> 01:06:41,180
in it but there's been another larger

1590
01:06:38,660 --> 01:06:49,609
discussion of community about how hb2

1591
01:06:41,180 --> 01:06:54,500
priorities is not optimal and so the

1592
01:06:49,610 --> 01:06:56,000
question is as a group do we want to try

1593
01:06:54,500 --> 01:06:58,220
and just deliver something that I would

1594
01:06:56,000 --> 01:07:01,460
hate to be do priorities or do we want

1595
01:06:58,220 --> 01:07:04,370
to do something else so in you were

1596
01:07:01,460 --> 01:07:07,340
leading you early in that side meeting

1597
01:07:04,370 --> 01:07:10,040
do you want to kind of summarize what

1598
01:07:07,340 --> 01:07:15,520
the proposed that is from that group of

1599
01:07:10,040 --> 01:07:15,520
people either Mike is fine

1600
01:07:18,069 --> 01:07:27,650
okay uh yeah I can teach or anything so

1601
01:07:24,849 --> 01:07:29,359
what depth of information would you like

1602
01:07:27,650 --> 01:07:32,509
me to take the high-level takeaways I

1603
01:07:29,359 --> 01:07:34,578
would we have talked about this

1604
01:07:32,509 --> 01:07:36,730
extensively in the past didn't several

1605
01:07:34,579 --> 01:07:43,009
venues right let's just cut to the chase

1606
01:07:36,730 --> 01:07:45,259
okay so the short of it is there's

1607
01:07:43,009 --> 01:07:47,779
fairly broad interest at least in the

1608
01:07:45,259 --> 01:07:51,470
room this morning in removing the

1609
01:07:47,779 --> 01:07:56,000
existing h2 style parties from the HTTP

1610
01:07:51,470 --> 01:07:59,359
3 spec there was quite a bit of interest

1611
01:07:56,000 --> 01:08:02,420
in trying to ship something simpler in

1612
01:07:59,359 --> 01:08:04,130
time for HTTP 3 there was a little bit

1613
01:08:02,420 --> 01:08:06,529
of disagreement I think about whether

1614
01:08:04,130 --> 01:08:09,170
that should be a blocking item or not a

1615
01:08:06,529 --> 01:08:11,059
blocking item there was also some

1616
01:08:09,170 --> 01:08:12,950
discussion as to whether that

1617
01:08:11,059 --> 01:08:15,349
prioritization information should be

1618
01:08:12,950 --> 01:08:19,219
conveyed in a frame or a header as in

1619
01:08:15,349 --> 01:08:21,109
kazoo and Lucas's header proposal there

1620
01:08:19,219 --> 01:08:23,089
was very broad support for a setting

1621
01:08:21,109 --> 01:08:25,880
that indicated are you actually doing

1622
01:08:23,089 --> 01:08:28,189
prioritization and if so like what

1623
01:08:25,880 --> 01:08:35,630
schemer using this would both allow

1624
01:08:28,189 --> 01:08:41,509
YouTube so I don't think that there was

1625
01:08:35,630 --> 01:08:44,239
support for that so yeah I think there

1626
01:08:41,509 --> 01:08:46,189
was support for the notion that you

1627
01:08:44,238 --> 01:08:51,290
could signal in h2 that you're not using

1628
01:08:46,189 --> 01:08:53,388
the edge 2 priority scheme which might

1629
01:08:51,290 --> 01:08:54,710
be the same thing it might be the same

1630
01:08:53,389 --> 01:08:56,870
thing I might not be depending on

1631
01:08:54,710 --> 01:09:04,420
whether you want to have multiple

1632
01:08:56,870 --> 01:09:04,420
different priority schemes so

1633
01:09:06,130 --> 01:09:09,580
but I think the critical issue that we

1634
01:09:08,529 --> 01:09:12,729
want to move forward on in the

1635
01:09:09,580 --> 01:09:15,069
relatively timely manner is kind of

1636
01:09:12,729 --> 01:09:19,029
getting broader consensus on the idea

1637
01:09:15,069 --> 01:09:22,540
that we will not do h2 style parties in

1638
01:09:19,029 --> 01:09:24,550
HPP is that correct I think so I think

1639
01:09:22,540 --> 01:09:26,290
we need to have a coordination of the

1640
01:09:24,550 --> 01:09:27,970
HTTP working group and if we can get

1641
01:09:26,290 --> 01:09:31,029
consensus in those two groups about what

1642
01:09:27,970 --> 01:09:34,060
HTTP through will do or will not do at

1643
01:09:31,029 --> 01:09:35,500
least four priorities then you know we

1644
01:09:34,060 --> 01:09:36,820
can take that to the our directors and

1645
01:09:35,500 --> 01:09:39,479
talk about our Charter and see if we

1646
01:09:36,819 --> 01:09:42,219
need to make a charter change or not and

1647
01:09:39,479 --> 01:09:44,500
and so you know I think one of the

1648
01:09:42,220 --> 01:09:46,180
things that came up was if hdhd working

1649
01:09:44,500 --> 01:09:49,180
group ships a setting that says we're

1650
01:09:46,180 --> 01:09:50,830
not using priorities then htv3 can

1651
01:09:49,180 --> 01:09:53,950
decide that that's the semantics that it

1652
01:09:50,830 --> 01:09:56,080
is you know considering to be the the

1653
01:09:53,950 --> 01:09:58,929
right semantics to to carry forward and

1654
01:09:56,080 --> 01:10:00,640
assuming that you know someone at some

1655
01:09:58,930 --> 01:10:02,890
point and we can talk about timing but

1656
01:10:00,640 --> 01:10:05,080
not today we'll come up with an

1657
01:10:02,890 --> 01:10:08,230
extension that works that the semantics

1658
01:10:05,080 --> 01:10:10,000
can be mapped to HB 2 NH 2 to 3 and and

1659
01:10:08,230 --> 01:10:12,580
be better than what we have now

1660
01:10:10,000 --> 01:10:15,280
yeah there's very broad interest in that

1661
01:10:12,580 --> 01:10:17,140
but yeah yeah I think we still have that

1662
01:10:15,280 --> 01:10:18,790
exactly of them right but we're in this

1663
01:10:17,140 --> 01:10:22,060
uncomfortable situation with this very

1664
01:10:18,790 --> 01:10:24,730
little belief in the community that hdu

1665
01:10:22,060 --> 01:10:26,410
priorities are working well and people

1666
01:10:24,730 --> 01:10:29,799
don't want to persist that into the new

1667
01:10:26,410 --> 01:10:34,480
protocol but we don't have consensus on

1668
01:10:29,800 --> 01:10:38,320
the replacement yet Roberto Roberto at

1669
01:10:34,480 --> 01:10:42,129
Lyon as one of the instigators of h2

1670
01:10:38,320 --> 01:10:46,269
priorities and I will say that I've said

1671
01:10:42,130 --> 01:10:47,980
this in HTTP as well I just want to say

1672
01:10:46,270 --> 01:10:51,310
it is my belief that this scheme has

1673
01:10:47,980 --> 01:10:53,950
failed h2 priorities in my opinion is

1674
01:10:51,310 --> 01:10:55,870
one of the instigators has failed in its

1675
01:10:53,950 --> 01:10:58,150
design intent there are many reasons for

1676
01:10:55,870 --> 01:11:02,400
that but it's failed I think we should

1677
01:10:58,150 --> 01:11:02,400
move on thank you

1678
01:11:02,660 --> 01:11:09,930
so Martin Thompson from my perspective I

1679
01:11:06,140 --> 01:11:12,120
definitely agree with Roberto I think

1680
01:11:09,930 --> 01:11:14,190
there is general consensus that there is

1681
01:11:12,120 --> 01:11:17,820
value in having the client signal

1682
01:11:14,190 --> 01:11:21,139
priorities kazuo suggested that there's

1683
01:11:17,820 --> 01:11:23,340
value in also having origin servers

1684
01:11:21,140 --> 01:11:25,920
signal priorities - gateways which is a

1685
01:11:23,340 --> 01:11:27,120
new concept and a group on I think but I

1686
01:11:25,920 --> 01:11:30,840
haven't thought it or what all the way

1687
01:11:27,120 --> 01:11:31,320
through so there's a lot of work to do

1688
01:11:30,840 --> 01:11:34,620
here

1689
01:11:31,320 --> 01:11:38,219
I would caution against overestimating

1690
01:11:34,620 --> 01:11:41,160
our ability to resolve this issue in the

1691
01:11:38,219 --> 01:11:45,780
time that we have left in this working

1692
01:11:41,160 --> 01:11:49,920
group to get something shipped if we put

1693
01:11:45,780 --> 01:11:55,110
this on the critical path I have doubts

1694
01:11:49,920 --> 01:12:01,100
that we'll see anything in RFC form next

1695
01:11:55,110 --> 01:12:01,099
year and that worries me

1696
01:12:07,400 --> 01:12:12,690
so I just also want to remind everybody

1697
01:12:10,440 --> 01:12:15,210
that anything the client says about

1698
01:12:12,690 --> 01:12:16,739
priorities is a hint and it doesn't

1699
01:12:15,210 --> 01:12:18,119
matter what you spec this is what we're

1700
01:12:16,739 --> 01:12:23,848
seeing in iron from the patient's today

1701
01:12:18,119 --> 01:12:26,880
I think that it's an interesting take to

1702
01:12:23,849 --> 01:12:28,440
cut priorities out right now

1703
01:12:26,880 --> 01:12:30,929
because one of two things is going to

1704
01:12:28,440 --> 01:12:34,469
happen either it will be perfectly fine

1705
01:12:30,929 --> 01:12:36,119
and we'll just move on right or we will

1706
01:12:34,469 --> 01:12:38,460
experience some extreme shittiness in

1707
01:12:36,119 --> 01:12:39,110
some cases and we will be incentive to

1708
01:12:38,460 --> 01:12:40,979
fix it

1709
01:12:39,110 --> 01:12:50,780
both of those are in actually

1710
01:12:40,979 --> 01:12:53,820
interesting outcomes generally inga just

1711
01:12:50,780 --> 01:12:56,699
note that Robin Marks has sent a nice

1712
01:12:53,820 --> 01:12:58,949
summary of the side meeting on issue 29

1713
01:12:56,699 --> 01:13:01,739
24 for those of you missing there's also

1714
01:12:58,949 --> 01:13:06,690
linked to the notes is not setting from

1715
01:13:01,739 --> 01:13:08,940
of the side meeting I am not sure

1716
01:13:06,690 --> 01:13:14,820
exactly what this discussion is about if

1717
01:13:08,940 --> 01:13:16,469
if we are discussing whether to remove

1718
01:13:14,820 --> 01:13:17,610
priorities or not that seems to have

1719
01:13:16,469 --> 01:13:19,110
been done at the side meeting and I

1720
01:13:17,610 --> 01:13:21,030
expect it will happen in the HDP this

1721
01:13:19,110 --> 01:13:23,909
meeting as well if you're talking about

1722
01:13:21,030 --> 01:13:28,349
creating a new priority scheme

1723
01:13:23,909 --> 01:13:32,400
I heard Martin Thompson say he quit I

1724
01:13:28,349 --> 01:13:33,749
might as well but that's sort of the are

1725
01:13:32,400 --> 01:13:35,549
we talking about creating a new priority

1726
01:13:33,749 --> 01:13:39,030
seem in this working group or an HDTV

1727
01:13:35,550 --> 01:13:42,059
now yeah I think what we're talking

1728
01:13:39,030 --> 01:13:45,570
about is from this working groups

1729
01:13:42,059 --> 01:13:48,360
perspective are their shipping HTTP 3

1730
01:13:45,570 --> 01:13:50,999
with an HTTP 2 compatible priority

1731
01:13:48,360 --> 01:13:52,650
scheme or shipping it we're negotiating

1732
01:13:50,999 --> 01:13:54,059
and talking to the community though the

1733
01:13:52,650 --> 01:13:57,839
broader community passes working group

1734
01:13:54,059 --> 01:14:02,039
about shipping HTTP 3 with no priority

1735
01:13:57,840 --> 01:14:05,039
scheme in some fashion so I'm actually

1736
01:14:02,039 --> 01:14:07,530
very I'm very much in support of the

1737
01:14:05,039 --> 01:14:10,469
latter which is to have this discussion

1738
01:14:07,530 --> 01:14:12,509
with the HTTP community and try to go to

1739
01:14:10,469 --> 01:14:14,999
its shipping without any penalties

1740
01:14:12,510 --> 01:14:17,010
knowing fully well that servers will

1741
01:14:14,999 --> 01:14:19,199
still actually do some implementations

1742
01:14:17,010 --> 01:14:20,230
will still do paralyzation just not

1743
01:14:19,199 --> 01:14:25,450
based on the pair

1744
01:14:20,230 --> 01:14:26,860
ah Wow and and to be clear we keep on

1745
01:14:25,450 --> 01:14:29,710
saying priority scheme what we really

1746
01:14:26,860 --> 01:14:31,599
mean is a client-to-server hinting

1747
01:14:29,710 --> 01:14:35,200
scheme to help it make decisions about

1748
01:14:31,600 --> 01:14:37,930
priorities and when I say ship h3 with

1749
01:14:35,200 --> 01:14:40,059
no priority scheme there you know that

1750
01:14:37,930 --> 01:14:47,680
need will be filled in some fashion just

1751
01:14:40,060 --> 01:14:49,360
not by us give its Ignasi I want to

1752
01:14:47,680 --> 01:14:51,100
agree with a lot of the previous points

1753
01:14:49,360 --> 01:14:55,179
that what we currently have in the spec

1754
01:14:51,100 --> 01:14:59,350
is very complicated and let's just say

1755
01:14:55,180 --> 01:15:03,640
an ideal my personal preference would be

1756
01:14:59,350 --> 01:15:07,750
to not have the hints in the course back

1757
01:15:03,640 --> 01:15:10,870
because as we've seen this could delay

1758
01:15:07,750 --> 01:15:12,210
us for quite a while and I would love to

1759
01:15:10,870 --> 01:15:14,710
see and I think there will be

1760
01:15:12,210 --> 01:15:16,930
experimentation with its new hint

1761
01:15:14,710 --> 01:15:19,210
schemes but all those can be implemented

1762
01:15:16,930 --> 01:15:20,470
as extensions and we would probably be

1763
01:15:19,210 --> 01:15:22,270
experimenting with those and deploying

1764
01:15:20,470 --> 01:15:24,910
them in production as well it would be

1765
01:15:22,270 --> 01:15:26,470
really nice to not block the shipping of

1766
01:15:24,910 --> 01:15:28,599
the course back due to this

1767
01:15:26,470 --> 01:15:35,530
experimentation we can all laugh later

1768
01:15:28,600 --> 01:15:38,650
that's fine as a whole I what I wanted

1769
01:15:35,530 --> 01:15:42,099
to say that I agree with Thompson he

1770
01:15:38,650 --> 01:15:45,549
says that we shouldn't be blocking HTTP

1771
01:15:42,100 --> 01:15:49,000
3 due to lack of priorities and my

1772
01:15:45,550 --> 01:15:50,710
reasoning is that our whole the server

1773
01:15:49,000 --> 01:15:54,640
deployments have the experiment

1774
01:15:50,710 --> 01:15:56,260
experience of handling browsers that do

1775
01:15:54,640 --> 01:15:59,770
not send priorities in the correct way

1776
01:15:56,260 --> 01:16:02,590
so we know how to prioritize against

1777
01:15:59,770 --> 01:16:10,210
them so it's not the end of world if we

1778
01:16:02,590 --> 01:16:11,530
ship HTTP without priorities I think in

1779
01:16:10,210 --> 01:16:17,080
classic fashion because it was

1780
01:16:11,530 --> 01:16:18,509
understating the situation here it's not

1781
01:16:17,080 --> 01:16:20,800
just that clients may or may not

1782
01:16:18,510 --> 01:16:23,950
arguably send something that is correct

1783
01:16:20,800 --> 01:16:25,270
it's that the server's ignore it right

1784
01:16:23,950 --> 01:16:27,550
so the purpose of putting any of this

1785
01:16:25,270 --> 01:16:30,869
stuff into a spec is for Interop and

1786
01:16:27,550 --> 01:16:32,869
given that these are hints

1787
01:16:30,869 --> 01:16:35,429
they were always optional to the inlet

1788
01:16:32,869 --> 01:16:38,549
to be clear they were always optional

1789
01:16:35,429 --> 01:16:40,050
right we never had a must on on this

1790
01:16:38,550 --> 01:16:44,849
except that you have to receive it and

1791
01:16:40,050 --> 01:16:46,650
discard it right so at worst if we do

1792
01:16:44,849 --> 01:16:49,139
nothing and we keep H two priorities in

1793
01:16:46,650 --> 01:16:51,119
the spec we can receive in discard I

1794
01:16:49,139 --> 01:16:54,539
think that that is suboptimal because

1795
01:16:51,119 --> 01:16:57,058
it's okay lights I believe that it is

1796
01:16:54,539 --> 01:16:59,639
better to to say hey it was hints we got

1797
01:16:57,059 --> 01:17:05,189
it wrong let's move forward but either

1798
01:16:59,639 --> 01:17:07,499
outcome probably shouldn't block our are

1799
01:17:05,189 --> 01:17:09,780
deciding to deliver h3 because these are

1800
01:17:07,499 --> 01:17:13,039
hints and we can acknowledge we got them

1801
01:17:09,780 --> 01:17:16,800
wrong because Interop is terrible right

1802
01:17:13,039 --> 01:17:18,959
and to what Kazuo have said I mean one

1803
01:17:16,800 --> 01:17:21,179
of the negative outcomes here that is a

1804
01:17:18,959 --> 01:17:23,130
concern of the back of my mind is that

1805
01:17:21,179 --> 01:17:25,499
we could have you know a lot of

1806
01:17:23,130 --> 01:17:28,439
different party schemes emerge that you

1807
01:17:25,499 --> 01:17:30,239
know muddy the waters even more but in

1808
01:17:28,439 --> 01:17:32,369
some ways that's already happened we

1809
01:17:30,239 --> 01:17:34,709
have such drastically different uses of

1810
01:17:32,369 --> 01:17:36,420
the existing party scheme it's it's not

1811
01:17:34,709 --> 01:17:40,739
a great situation for servers in any way

1812
01:17:36,420 --> 01:17:43,800
so Lucas modified fire um I generally

1813
01:17:40,739 --> 01:17:45,718
agree with Roberta's points but I'd want

1814
01:17:43,800 --> 01:17:49,170
to disagree on one aspect which relates

1815
01:17:45,719 --> 01:17:51,780
to placeholders it's hard to ignore that

1816
01:17:49,170 --> 01:17:54,630
it's hard to create the hint when we're

1817
01:17:51,780 --> 01:17:56,459
talking about this quantity of

1818
01:17:54,630 --> 01:17:58,469
placeholders where you might need a

1819
01:17:56,459 --> 01:18:00,329
certain value for that quantity to

1820
01:17:58,469 --> 01:18:02,909
create the prioritization structure that

1821
01:18:00,329 --> 01:18:04,499
you want for your user agent and the

1822
01:18:02,909 --> 01:18:06,719
server doesn't give that to you and that

1823
01:18:04,499 --> 01:18:08,670
said negotiate or value and quite a wide

1824
01:18:06,719 --> 01:18:11,249
scale and so you end up adding

1825
01:18:08,670 --> 01:18:13,320
complexity into the user agents that now

1826
01:18:11,249 --> 01:18:16,228
have to do prioritization schemes in H 2

1827
01:18:13,320 --> 01:18:18,389
and H 3 and maybe diverge in the H 3

1828
01:18:16,229 --> 01:18:21,959
space and I think that's a problem to

1829
01:18:18,389 --> 01:18:27,449
the Interop we are now out of our time

1830
01:18:21,959 --> 01:18:29,099
box so I think we're just sorry Alan

1831
01:18:27,449 --> 01:18:32,039
I think what we probably want to do at

1832
01:18:29,099 --> 01:18:34,920
this point is do a hum and I think the

1833
01:18:32,039 --> 01:18:38,009
options for that hum are to keep H 2

1834
01:18:34,920 --> 01:18:41,130
priorities in H 3 or H 2 compatible

1835
01:18:38,010 --> 01:18:42,630
programs or to negotiate the removal

1836
01:18:41,130 --> 01:18:50,180
with the greater community

1837
01:18:42,630 --> 01:18:54,000
or we don't know yes those good options

1838
01:18:50,180 --> 01:18:58,140
okay if you believe that we should keep

1839
01:18:54,000 --> 01:19:03,150
H two priorities in h3 or h2 compatible

1840
01:18:58,140 --> 01:19:13,440
priorities please hum now if you believe

1841
01:19:03,150 --> 01:19:15,870
that sorry I so we have Dmitry

1842
01:19:13,440 --> 01:19:18,750
suggesting that he wants to keep H two

1843
01:19:15,870 --> 01:19:20,070
priorities in that's the only person I

1844
01:19:18,750 --> 01:19:22,110
see in there so he hunt for that thank

1845
01:19:20,070 --> 01:19:24,389
you yeah the parties are keep H two

1846
01:19:22,110 --> 01:19:27,660
compatible priorities remove them from

1847
01:19:24,390 --> 01:19:29,880
h3 or we don't know yet so if you would

1848
01:19:27,660 --> 01:19:31,889
use its we've done the first one if you

1849
01:19:29,880 --> 01:19:34,080
believe we should negotiate with a

1850
01:19:31,890 --> 01:19:36,780
greater community to remove h2

1851
01:19:34,080 --> 01:19:39,090
compatible priorities from htv3 and

1852
01:19:36,780 --> 01:19:40,740
effectively ship it with no hints from

1853
01:19:39,090 --> 01:19:47,430
the client to the server as to priority

1854
01:19:40,740 --> 01:19:49,889
please hum now is it a question of

1855
01:19:47,430 --> 01:19:51,690
models you see no it is you slipped a

1856
01:19:49,890 --> 01:19:53,910
little bit into be there that hadn't

1857
01:19:51,690 --> 01:19:55,169
been part of the description of the home

1858
01:19:53,910 --> 01:19:58,290
prior to me what did I what did I slip

1859
01:19:55,170 --> 01:20:02,340
in so you initially described the second

1860
01:19:58,290 --> 01:20:03,930
option as not making h2 priority as part

1861
01:20:02,340 --> 01:20:06,120
of h3 and negotiating with the community

1862
01:20:03,930 --> 01:20:08,010
the implication of how that would happen

1863
01:20:06,120 --> 01:20:09,269
and then when you said it the second

1864
01:20:08,010 --> 01:20:11,370
time you said how that would happen

1865
01:20:09,270 --> 01:20:13,530
would be not shipping the priority

1866
01:20:11,370 --> 01:20:16,050
mechanism in h3 those are different

1867
01:20:13,530 --> 01:20:19,950
things yeah and I think what Patrick is

1868
01:20:16,050 --> 01:20:23,850
implying there is that if we do find a

1869
01:20:19,950 --> 01:20:25,320
priority scheme we that we all agree on

1870
01:20:23,850 --> 01:20:26,730
and the community is behind we can put

1871
01:20:25,320 --> 01:20:28,139
it in this bag oh of course

1872
01:20:26,730 --> 01:20:31,049
yes well it again we're not binding

1873
01:20:28,140 --> 01:20:32,880
future action here we know we don't know

1874
01:20:31,050 --> 01:20:34,830
if that's gonna happen arguing that the

1875
01:20:32,880 --> 01:20:38,490
definition of what negotiation has to be

1876
01:20:34,830 --> 01:20:41,010
multiple parties including your other

1877
01:20:38,490 --> 01:20:42,660
working group as well like HTTP it's

1878
01:20:41,010 --> 01:20:46,080
going to be very interested in what this

1879
01:20:42,660 --> 01:20:47,790
may look like even if we feel as a quick

1880
01:20:46,080 --> 01:20:49,620
working group that no one's going to

1881
01:20:47,790 --> 01:20:51,570
implement the h2 thing I think that

1882
01:20:49,620 --> 01:20:53,019
negotiation could have come up a bunch

1883
01:20:51,570 --> 01:20:56,148
of different outcomes

1884
01:20:53,019 --> 01:20:58,550
if the HTTP working group comes back and

1885
01:20:56,149 --> 01:20:59,719
says you have to ship h3 with some

1886
01:20:58,550 --> 01:21:02,630
priority scheme but we don't care what

1887
01:20:59,719 --> 01:21:03,530
it is that's or or use this one well

1888
01:21:02,630 --> 01:21:07,429
then we're gonna have to have that

1889
01:21:03,530 --> 01:21:07,699
discussion Wow but yeah and I'm fine

1890
01:21:07,429 --> 01:21:09,289
with that

1891
01:21:07,699 --> 01:21:10,789
you just the last time you described

1892
01:21:09,289 --> 01:21:13,099
what option B was you actually removed

1893
01:21:10,789 --> 01:21:13,518
that as a possibility that was not the

1894
01:21:13,099 --> 01:21:16,369
intent

1895
01:21:13,519 --> 01:21:18,289
so I'll rerun that hum I'm a little

1896
01:21:16,369 --> 01:21:22,188
weary of trying to restate it because

1897
01:21:18,289 --> 01:21:25,249
I'll probably mess it up again but if

1898
01:21:22,189 --> 01:21:29,749
you do not want to preserve h2

1899
01:21:25,249 --> 01:21:37,849
compatible priorities in HTTP 3 please

1900
01:21:29,749 --> 01:21:39,260
hub now and if you think we don't have

1901
01:21:37,849 --> 01:21:44,030
enough information yet to make this

1902
01:21:39,260 --> 01:21:46,519
decision please up now ok so that was

1903
01:21:44,030 --> 01:21:50,898
pretty strong so we had 103 in Java

1904
01:21:46,519 --> 01:21:52,849
that's ok 1 for 3 ok I think the next

1905
01:21:50,899 --> 01:21:54,769
step then is to take this discussion

1906
01:21:52,849 --> 01:21:56,659
tomorrow to the HTTP working group and

1907
01:21:54,769 --> 01:21:59,380
see what that community feels hopefully

1908
01:21:56,659 --> 01:22:03,709
it will along with what you hear here

1909
01:21:59,380 --> 01:22:06,219
thank you so next up is the recovery

1910
01:22:03,709 --> 01:22:06,219
issues

1911
01:22:09,690 --> 01:22:17,040
I to correct that last one Robin changed

1912
01:22:12,990 --> 01:22:19,920
his mind to two after that one okay I

1913
01:22:17,040 --> 01:22:23,240
think implies we don't know yet is the

1914
01:22:19,920 --> 01:22:23,240
underlying message there

1915
01:22:34,210 --> 01:22:44,200
okay sure

1916
01:22:39,420 --> 01:22:46,630
27 89 before I look it up to anybody

1917
01:22:44,200 --> 01:22:50,440
feels like the only here oh where are

1918
01:22:46,630 --> 01:22:54,670
the blue sheets right now who has the

1919
01:22:50,440 --> 01:22:56,410
blue sheets Kingdom ah could you please

1920
01:22:54,670 --> 01:23:00,400
send them towards the middle please

1921
01:22:56,410 --> 01:23:03,910
the middle section thank you so what

1922
01:23:00,400 --> 01:23:05,500
Martin Thompson whispers um if you want

1923
01:23:03,910 --> 01:23:07,240
to summarize for us what do you have to

1924
01:23:05,500 --> 01:23:09,610
state with it it's actually a gory issue

1925
01:23:07,240 --> 01:23:11,170
originally yeah I'm not sure that I

1926
01:23:09,610 --> 01:23:14,589
understood what Cory suggests you can

1927
01:23:11,170 --> 01:23:21,850
you bring it up there yes I quoted or

1928
01:23:14,590 --> 01:23:24,370
email some discussion on this one so

1929
01:23:21,850 --> 01:23:27,220
there was something about a longer so

1930
01:23:24,370 --> 01:23:28,990
you've got a an RTT estimate for the

1931
01:23:27,220 --> 01:23:30,490
current path and there was a suggestion

1932
01:23:28,990 --> 01:23:33,639
that you might be able to use that as

1933
01:23:30,490 --> 01:23:36,340
the basis for the initial RTT on a new

1934
01:23:33,640 --> 01:23:42,060
path of course behind you to record your

1935
01:23:36,340 --> 01:23:45,670
one time Tory you want Frankie and I

1936
01:23:42,060 --> 01:23:47,110
read from that that maybe multiplying

1937
01:23:45,670 --> 01:23:48,940
that out or increasing that value

1938
01:23:47,110 --> 01:23:51,639
somewhat to be a little conservative

1939
01:23:48,940 --> 01:23:53,530
would be a good idea but there's been a

1940
01:23:51,640 --> 01:23:58,330
lot of discussion on this aura can you

1941
01:23:53,530 --> 01:24:00,160
summarize I tried to write down

1942
01:23:58,330 --> 01:24:03,160
something which I thought was what TCP

1943
01:24:00,160 --> 01:24:04,870
does and then the the basic thing here

1944
01:24:03,160 --> 01:24:06,130
is to try and avoid lots and lots of

1945
01:24:04,870 --> 01:24:07,690
quick flows all starting at the same

1946
01:24:06,130 --> 01:24:09,490
time then all retransmitting at the same

1947
01:24:07,690 --> 01:24:18,089
time etc creating some congestion

1948
01:24:09,490 --> 01:24:21,910
collapse so what's the way forward but

1949
01:24:18,090 --> 01:24:24,520
better text if the principle here is to

1950
01:24:21,910 --> 01:24:27,820
do what TCP would do in this environment

1951
01:24:24,520 --> 01:24:30,790
then I think the text needs to be

1952
01:24:27,820 --> 01:24:33,130
improved and to show that back off more

1953
01:24:30,790 --> 01:24:38,500
clearly and what do the authors of the

1954
01:24:33,130 --> 01:24:40,330
document think I think sorry we failed

1955
01:24:38,500 --> 01:24:41,860
to we actually talk to the person in for

1956
01:24:40,330 --> 01:24:44,230
quite a while with the quarry on

1957
01:24:41,860 --> 01:24:47,650
Saturday and we've helped to nurse this

1958
01:24:44,230 --> 01:24:52,480
issue because I think Martin

1959
01:24:47,650 --> 01:24:55,679
I think some of the text has improved

1960
01:24:52,480 --> 01:24:58,089
since Corey originally wrote this and

1961
01:24:55,679 --> 01:25:02,199
unclear so I think I think we basically

1962
01:24:58,090 --> 01:25:03,730
it's probably I I don't know if this is

1963
01:25:02,199 --> 01:25:05,559
an editorial review or not we're gonna

1964
01:25:03,730 --> 01:25:08,409
have a PR yet but I think we can resolve

1965
01:25:05,560 --> 01:25:09,460
this money like John and I agree you're

1966
01:25:08,409 --> 01:25:10,690
good you're good hard to hear when you

1967
01:25:09,460 --> 01:25:12,639
speaking to the side of the microphone

1968
01:25:10,690 --> 01:25:15,519
but I think you said you want a PR do

1969
01:25:12,639 --> 01:25:16,900
you want gory to prepare one or would I

1970
01:25:15,520 --> 01:25:18,550
think John and I are on that for

1971
01:25:16,900 --> 01:25:21,040
preparing one of the major document all

1972
01:25:18,550 --> 01:25:23,710
right so we marked us as you want to do

1973
01:25:21,040 --> 01:25:26,230
the theater ticket editing all right so

1974
01:25:23,710 --> 01:25:29,380
editors have it to token to the payer

1975
01:25:26,230 --> 01:25:32,559
APR and we got more comments though in

1976
01:25:29,380 --> 01:25:36,179
the line there or not

1977
01:25:32,560 --> 01:25:41,260
gore Martin's ear is not the microphone

1978
01:25:36,179 --> 01:25:42,849
so for what it's worth we already if we

1979
01:25:41,260 --> 01:25:45,219
talk about using the pod challenge and

1980
01:25:42,849 --> 01:25:48,130
path response frames that the seed would

1981
01:25:45,219 --> 01:25:51,070
be basically equivalent to an initial

1982
01:25:48,130 --> 01:25:54,219
are TTC and we use two times the initial

1983
01:25:51,070 --> 01:25:56,860
RTD for the initial time out anyways

1984
01:25:54,219 --> 01:26:01,150
so it's actually even more than the 1.5

1985
01:25:56,860 --> 01:26:02,710
that let me suggesting and the 1.5 thing

1986
01:26:01,150 --> 01:26:05,559
was a little bit complicated anyway I

1987
01:26:02,710 --> 01:26:08,260
think the intention here is to do the

1988
01:26:05,560 --> 01:26:09,969
right thing so I don't have a a protocol

1989
01:26:08,260 --> 01:26:12,580
question but I just think we should all

1990
01:26:09,969 --> 01:26:13,900
work together on the text and I don't

1991
01:26:12,580 --> 01:26:16,570
think don't working group will be

1992
01:26:13,900 --> 01:26:17,888
surprised at the outcome at all okay so

1993
01:26:16,570 --> 01:26:20,380
this can be done quickly it's what I'm

1994
01:26:17,889 --> 01:26:23,949
hearing yes and another implementation

1995
01:26:20,380 --> 01:26:27,010
student and it's only a design issue

1996
01:26:23,949 --> 01:26:28,629
because it changes some specification

1997
01:26:27,010 --> 01:26:30,460
text but it's basically editorial

1998
01:26:28,630 --> 01:26:31,150
because yeah we are just allowing it

1999
01:26:30,460 --> 01:26:33,429
needs to be gutted

2000
01:26:31,150 --> 01:26:35,559
Thank You Janice a up there next one is

2001
01:26:33,429 --> 01:26:39,929
yours 26:30

2002
01:26:35,560 --> 01:26:39,929
define under utilization of Seawind I

2003
01:26:40,080 --> 01:26:48,040
thought there was text that had the

2004
01:26:42,670 --> 01:26:50,190
proof that are discussed in London we'd

2005
01:26:48,040 --> 01:26:50,190
like

2006
01:26:53,370 --> 01:26:59,260
being robbed this gory who did see the

2007
01:26:56,980 --> 01:27:01,450
movie this is complicated and it's

2008
01:26:59,260 --> 01:27:03,880
complicated to get the text the intent

2009
01:27:01,450 --> 01:27:07,510
again was easy and I don't think we got

2010
01:27:03,880 --> 01:27:10,510
the new text finish did we we have

2011
01:27:07,510 --> 01:27:12,880
Praveen in the line remotely they

2012
01:27:10,510 --> 01:27:14,560
disappear for this I think right yeah

2013
01:27:12,880 --> 01:27:15,700
there's been a PR for it for awhile we

2014
01:27:14,560 --> 01:27:17,410
just kind of going keep going back and

2015
01:27:15,700 --> 01:27:20,380
forth on it it's it's rather difficult

2016
01:27:17,410 --> 01:27:22,420
to get right um I need someone to I

2017
01:27:20,380 --> 01:27:28,480
guess we need more people to review it

2018
01:27:22,420 --> 01:27:32,770
but yeah pretty yeah so I'm saying this

2019
01:27:28,480 --> 01:27:34,089
is not working Praveen no give it a

2020
01:27:32,770 --> 01:27:41,320
moment that Mike we'll see each other

2021
01:27:34,090 --> 01:27:43,180
please Praveen right now yes what the

2022
01:27:41,320 --> 01:27:44,860
under utilization of semen means

2023
01:27:43,180 --> 01:27:46,900
I think capping this even seems to be

2024
01:27:44,860 --> 01:27:50,889
the right idea so we actually specified

2025
01:27:46,900 --> 01:27:53,589
possible algorithm standard thread so

2026
01:27:50,890 --> 01:27:57,100
captain the see when growth might be of

2027
01:27:53,590 --> 01:27:58,780
medication here Praveen you're very very

2028
01:27:57,100 --> 01:28:00,160
hard to hear can you stick that into the

2029
01:27:58,780 --> 01:28:02,700
ticket instead of the comment please

2030
01:28:00,160 --> 01:28:07,660
that the audio was really poor sure

2031
01:28:02,700 --> 01:28:10,150
thank you at least it was poor up here I

2032
01:28:07,660 --> 01:28:14,290
can restate what I mean oh yeah please

2033
01:28:10,150 --> 01:28:16,780
and he can correct me he said that we

2034
01:28:14,290 --> 01:28:18,820
can we have algorithms for capping the

2035
01:28:16,780 --> 01:28:20,230
Seawind and that that's something that

2036
01:28:18,820 --> 01:28:22,420
we ought to be able to do instead of

2037
01:28:20,230 --> 01:28:27,610
having to specify what underutilized

2038
01:28:22,420 --> 01:28:29,890
means I think that's that's probably

2039
01:28:27,610 --> 01:28:33,160
gonna be harder to do but we might

2040
01:28:29,890 --> 01:28:34,780
disagree on that the the whole the whole

2041
01:28:33,160 --> 01:28:37,480
reason we want to specify what under

2042
01:28:34,780 --> 01:28:41,050
utilizing this even means is to avoid

2043
01:28:37,480 --> 01:28:42,580
bursting when you have your bytes in

2044
01:28:41,050 --> 01:28:46,090
flight is substantially below the

2045
01:28:42,580 --> 01:28:48,160
condition window and so we've had

2046
01:28:46,090 --> 01:28:49,900
discussions around that gory Ian and I

2047
01:28:48,160 --> 01:28:52,780
have had a discussion around that and we

2048
01:28:49,900 --> 01:28:56,920
I think we have some way to go around

2049
01:28:52,780 --> 01:29:00,940
that I actually didn't particular that's

2050
01:28:56,920 --> 01:29:02,590
the other issue the underutilization one

2051
01:29:00,940 --> 01:29:04,030
is actually about not growing the

2052
01:29:02,590 --> 01:29:05,070
congestion window when you are not using

2053
01:29:04,030 --> 01:29:07,349
the dish

2054
01:29:05,070 --> 01:29:09,330
was a separate issue about not bursting

2055
01:29:07,350 --> 01:29:11,220
too much into the network they're both I

2056
01:29:09,330 --> 01:29:16,140
attempted to address both of them in one

2057
01:29:11,220 --> 01:29:17,400
PR because they saw what really I think

2058
01:29:16,140 --> 01:29:19,410
as much as anything on this stuff we

2059
01:29:17,400 --> 01:29:22,469
just need like people who have strong

2060
01:29:19,410 --> 01:29:24,120
opinions to either write text or take a

2061
01:29:22,470 --> 01:29:25,950
closer look at the existing PR and try

2062
01:29:24,120 --> 01:29:27,510
to make proactive suggestions about

2063
01:29:25,950 --> 01:29:28,650
trying to fix it because I think we're

2064
01:29:27,510 --> 01:29:29,880
going in the right general direction I

2065
01:29:28,650 --> 01:29:32,400
think there's a big design issue here

2066
01:29:29,880 --> 01:29:34,350
but we need to like eventually all of

2067
01:29:32,400 --> 01:29:35,639
these are somewhat related right and I

2068
01:29:34,350 --> 01:29:38,580
wonder if it makes sense to have like a

2069
01:29:35,640 --> 01:29:40,830
recovery design team that would work

2070
01:29:38,580 --> 01:29:42,390
through them in in conjunction rather

2071
01:29:40,830 --> 01:29:43,440
than having like three different their

2072
01:29:42,390 --> 01:29:45,240
discussions programs

2073
01:29:43,440 --> 01:29:46,889
sorry just I don't think you need a

2074
01:29:45,240 --> 01:29:48,170
design team I need I think we need

2075
01:29:46,890 --> 01:29:51,660
people to engage on the recovery

2076
01:29:48,170 --> 01:29:53,400
document we can propose as Ian said that

2077
01:29:51,660 --> 01:29:55,050
is a PR right now that basically does

2078
01:29:53,400 --> 01:29:56,280
talk about what effectively

2079
01:29:55,050 --> 01:29:58,350
underutilization means and that's

2080
01:29:56,280 --> 01:29:59,700
basically very exact right as long as

2081
01:29:58,350 --> 01:30:01,350
you're my template is less than the

2082
01:29:59,700 --> 01:30:04,110
condition window it's something good

2083
01:30:01,350 --> 01:30:05,820
okay so the proposal is there if people

2084
01:30:04,110 --> 01:30:07,950
want to suggest other things and we need

2085
01:30:05,820 --> 01:30:12,889
you know to say yes or no and or propose

2086
01:30:07,950 --> 01:30:12,889
edit right and engage on those fears

2087
01:30:13,970 --> 01:30:19,350
gory Fairhurst here I mean look let's be

2088
01:30:17,100 --> 01:30:21,600
honest John and I did not apply enough

2089
01:30:19,350 --> 01:30:23,610
cycles on this in the last period and

2090
01:30:21,600 --> 01:30:25,980
it's now important so we will apply

2091
01:30:23,610 --> 01:30:29,509
cycles now and we'd love other people to

2092
01:30:25,980 --> 01:30:29,509
join us thank you

2093
01:30:30,050 --> 01:30:34,490
which brings us to

2094
01:30:35,180 --> 01:30:40,440
25:56 I'm mark here we have coasters at

2095
01:30:37,890 --> 01:30:42,000
some point maybe I should just k

2096
01:30:40,440 --> 01:30:45,240
persistent connection congestion

2097
01:30:42,000 --> 01:30:48,420
threshold be two or three from open by

2098
01:30:45,240 --> 01:30:53,070
Praveen in March so a bunch of

2099
01:30:48,420 --> 01:30:56,430
discussion in March and then April and

2100
01:30:53,070 --> 01:30:58,019
then mark made and this is best to bring

2101
01:30:56,430 --> 01:31:02,370
this up at the full ITF meaning what

2102
01:30:58,020 --> 01:31:04,590
you're doing now okay

2103
01:31:02,370 --> 01:31:06,090
can someone help me here does this is

2104
01:31:04,590 --> 01:31:07,890
this something that can be decided with

2105
01:31:06,090 --> 01:31:10,170
a coin flip before or is there something

2106
01:31:07,890 --> 01:31:11,700
substantive that we need to understand I

2107
01:31:10,170 --> 01:31:16,110
think the questions decisions also to

2108
01:31:11,700 --> 01:31:17,239
what TCP does but I don't think that's a

2109
01:31:16,110 --> 01:31:20,670
principle that we

2110
01:31:17,239 --> 01:31:24,120
like if if TCP has some principles we

2111
01:31:20,670 --> 01:31:29,370
can reuse to help us make this decision

2112
01:31:24,120 --> 01:31:33,030
and the antastic but what's the

2113
01:31:29,370 --> 01:31:35,489
principle the current value was chosen

2114
01:31:33,030 --> 01:31:40,050
because previously in spec you could

2115
01:31:35,489 --> 01:31:42,419
fire the Telus probe twice before firing

2116
01:31:40,050 --> 01:31:44,820
an RTO and declaring all bytes in quite

2117
01:31:42,420 --> 01:31:47,250
lost and basically declaring persistent

2118
01:31:44,820 --> 01:31:48,599
congestion and so we picked the constant

2119
01:31:47,250 --> 01:31:51,570
that was most similar to that model

2120
01:31:48,600 --> 01:31:53,400
which is like you get two timeouts and

2121
01:31:51,570 --> 01:31:56,610
then the third one you know do that and

2122
01:31:53,400 --> 01:31:59,040
that's how the current number was chosen

2123
01:31:56,610 --> 01:32:00,660
I mean these are it's a constant it's

2124
01:31:59,040 --> 01:32:04,199
it's a little bit magic but it basically

2125
01:32:00,660 --> 01:32:06,150
allows you to lose packets twice alpacas

2126
01:32:04,199 --> 01:32:09,719
twice before you declare persistent

2127
01:32:06,150 --> 01:32:11,250
congestion just for me yeah I mean we

2128
01:32:09,719 --> 01:32:12,690
can make it one or the other and let

2129
01:32:11,250 --> 01:32:16,080
implementations choose that's what we

2130
01:32:12,690 --> 01:32:18,389
did actually up above in the PTO text we

2131
01:32:16,080 --> 01:32:22,519
said you can send one or two full sized

2132
01:32:18,390 --> 01:32:27,540
MSS opposed to just prescribing only one

2133
01:32:22,520 --> 01:32:35,400
this is Yossi young one question do you

2134
01:32:27,540 --> 01:32:37,620
have a some data point of this one about

2135
01:32:35,400 --> 01:32:43,500
which what this being a better value

2136
01:32:37,620 --> 01:32:46,559
than I don't have I can't provide any

2137
01:32:43,500 --> 01:32:50,640
data on this particular number I've

2138
01:32:46,560 --> 01:32:57,300
never tried like yeah yeah I'd say we

2139
01:32:50,640 --> 01:33:00,810
should be based on beta be it I think so

2140
01:32:57,300 --> 01:33:02,400
I'm trying to page this back in then is

2141
01:33:00,810 --> 01:33:04,710
that the problem if I remember correctly

2142
01:33:02,400 --> 01:33:07,830
is the discussion of whether we should

2143
01:33:04,710 --> 01:33:13,350
model two PL peas and an RTO or one TLP

2144
01:33:07,830 --> 01:33:18,030
and an idea is that correct right so the

2145
01:33:13,350 --> 01:33:19,679
spec arbitrarily for TCP says 1 TLP it

2146
01:33:18,030 --> 01:33:25,050
doesn't really say you can't do multiple

2147
01:33:19,679 --> 01:33:27,780
TPMS the spec says one or two and we say

2148
01:33:25,050 --> 01:33:30,960
here - TLPs and then an RTO that's

2149
01:33:27,780 --> 01:33:33,480
effectively what we modeled because in

2150
01:33:30,960 --> 01:33:36,900
there is no separation between tailors

2151
01:33:33,480 --> 01:33:39,570
groups and RTOS there's only a PTO if we

2152
01:33:36,900 --> 01:33:42,210
use the same period of time that it

2153
01:33:39,570 --> 01:33:45,210
would take to fire two PL pees followed

2154
01:33:42,210 --> 01:33:46,860
by an RTO and TCP as the model for how

2155
01:33:45,210 --> 01:33:49,400
long we should wait before declaring

2156
01:33:46,860 --> 01:33:51,929
what we call persistent congestion I

2157
01:33:49,400 --> 01:33:54,449
think that's a reasonable model to

2158
01:33:51,929 --> 01:34:00,270
videos seems better than one simply

2159
01:33:54,449 --> 01:34:03,540
because you are it's one packet on a TLP

2160
01:34:00,270 --> 01:34:05,670
is too sensitive we believe but it's

2161
01:34:03,540 --> 01:34:09,000
it's it's I think it's perfectly

2162
01:34:05,670 --> 01:34:13,770
reasonable to do that that's why the

2163
01:34:09,000 --> 01:34:16,560
numbers where it is there what one

2164
01:34:13,770 --> 01:34:19,710
proposal will be to close with no action

2165
01:34:16,560 --> 01:34:21,360
because we have now very soon hopefully

2166
01:34:19,710 --> 01:34:23,699
thanks to the simulator that you guys

2167
01:34:21,360 --> 01:34:25,409
that the ability to actually validate

2168
01:34:23,699 --> 01:34:27,239
some of those things and if somebody

2169
01:34:25,409 --> 01:34:31,379
finds an issue in validation we can

2170
01:34:27,239 --> 01:34:33,150
reopen but for reasonable month on

2171
01:34:31,380 --> 01:34:36,090
something I think there are two valid

2172
01:34:33,150 --> 01:34:38,940
paths here one is to say two is fine

2173
01:34:36,090 --> 01:34:41,699
we'll get more data book it later the

2174
01:34:38,940 --> 01:34:43,589
other one is to say two or three is is

2175
01:34:41,699 --> 01:34:46,379
acceptable and implement implementations

2176
01:34:43,590 --> 01:34:48,599
can decide on their own and we'll get

2177
01:34:46,380 --> 01:34:53,580
more data and refine that as we as we go

2178
01:34:48,599 --> 01:34:56,510
on I don't have a preference on either

2179
01:34:53,580 --> 01:34:59,849
one of those I'm a little cautious about

2180
01:34:56,510 --> 01:35:01,770
being confident that we can get the

2181
01:34:59,849 --> 01:35:04,080
information we need to make a solid firm

2182
01:35:01,770 --> 01:35:05,699
decision on this one I think that's ever

2183
01:35:04,080 --> 01:35:07,679
the case that we'll have another

2184
01:35:05,699 --> 01:35:10,500
information to be really confident about

2185
01:35:07,679 --> 01:35:12,960
these sorts of constants so I would I

2186
01:35:10,500 --> 01:35:16,170
would actually lean towards saying two

2187
01:35:12,960 --> 01:35:18,719
or three and recognize that and maybe

2188
01:35:16,170 --> 01:35:20,670
even explicitly knowledge that we don't

2189
01:35:18,719 --> 01:35:22,530
we don't know what the right answer is

2190
01:35:20,670 --> 01:35:25,440
here which one is more conservative two

2191
01:35:22,530 --> 01:35:28,139
or three what which one is more

2192
01:35:25,440 --> 01:35:30,629
conservative to I think we'll get get

2193
01:35:28,139 --> 01:35:34,650
you a lower congestion window over time

2194
01:35:30,630 --> 01:35:36,630
so so in the absence of data that we

2195
01:35:34,650 --> 01:35:40,530
should do three let's go to that will be

2196
01:35:36,630 --> 01:35:42,780
one proposal but I mean in the absence

2197
01:35:40,530 --> 01:35:46,160
of video you can also choose three

2198
01:35:42,780 --> 01:35:49,679
because it's conservative enough now I

2199
01:35:46,160 --> 01:35:51,870
chose is you know it honestly it doesn't

2200
01:35:49,680 --> 01:35:56,370
matter to me what I think may be more

2201
01:35:51,870 --> 01:36:00,960
useful here is the illustration of why

2202
01:35:56,370 --> 01:36:03,330
or what the what the what the value

2203
01:36:00,960 --> 01:36:04,560
means what happens if you change the

2204
01:36:03,330 --> 01:36:06,750
value to three what happens if they

2205
01:36:04,560 --> 01:36:08,010
change the value to 2 and people are

2206
01:36:06,750 --> 01:36:10,290
going to set the constants the way they

2207
01:36:08,010 --> 01:36:13,070
want anyways so we might as well

2208
01:36:10,290 --> 01:36:15,570
recognize that and simply describe the

2209
01:36:13,070 --> 01:36:18,900
effects of doing this I don't mind

2210
01:36:15,570 --> 01:36:20,309
allowing two or three we can and I'm not

2211
01:36:18,900 --> 01:36:23,460
so strongly opposed to doing it I just

2212
01:36:20,310 --> 01:36:24,750
sort of thinking of an implementer that

2213
01:36:23,460 --> 01:36:26,670
just wants to implement this and not

2214
01:36:24,750 --> 01:36:30,450
like work through whether you should use

2215
01:36:26,670 --> 01:36:32,070
two or three and why you know I'm gonna

2216
01:36:30,450 --> 01:36:34,410
make easy two people do the right thing

2217
01:36:32,070 --> 01:36:36,389
and the more knobs you give them and the

2218
01:36:34,410 --> 01:36:37,980
more like thinking you're required in

2219
01:36:36,390 --> 01:36:41,490
because you know I would put three

2220
01:36:37,980 --> 01:36:43,500
because it's bigger so anyway but I

2221
01:36:41,490 --> 01:36:45,420
think the sort of Tory take us home and

2222
01:36:43,500 --> 01:36:48,560
I will encounter next can I try on this

2223
01:36:45,420 --> 01:36:51,660
and first of all very first again the

2224
01:36:48,560 --> 01:36:53,160
this is actually new ground in the HF

2225
01:36:51,660 --> 01:36:54,870
surprising they have lots of things

2226
01:36:53,160 --> 01:36:56,639
about congestion controller all over the

2227
01:36:54,870 --> 01:36:59,040
place in RFC's but we don't really have

2228
01:36:56,640 --> 01:37:00,780
some sort of this is how the principles

2229
01:36:59,040 --> 01:37:02,670
work I'm trying to cook for something in

2230
01:37:00,780 --> 01:37:04,469
TCP M on that and you might want to look

2231
01:37:02,670 --> 01:37:06,750
it up and we might want to see we can

2232
01:37:04,470 --> 01:37:11,250
take it forward in the absence of that

2233
01:37:06,750 --> 01:37:14,280
how about should do through to but must

2234
01:37:11,250 --> 01:37:16,920
not do more than three or something that

2235
01:37:14,280 --> 01:37:19,950
really really sets a hardly three more

2236
01:37:16,920 --> 01:37:24,530
than three is probably dangerous T is

2237
01:37:19,950 --> 01:37:26,730
definitely saved you choose Praveen

2238
01:37:24,530 --> 01:37:28,380
inter-process he agrees to close with no

2239
01:37:26,730 --> 01:37:31,139
action and revisit if there's data

2240
01:37:28,380 --> 01:37:34,260
suggesting otherwise when I see a thumbs

2241
01:37:31,140 --> 01:37:39,020
up from Jenna let's do that okay we're

2242
01:37:34,260 --> 01:37:39,020
doing that can you updated

2243
01:37:41,310 --> 01:37:47,400
and we're going to the next one which is

2244
01:37:44,960 --> 01:37:50,400
255 which is related to what we talked

2245
01:37:47,400 --> 01:37:53,519
about earlier open by Praveen define

2246
01:37:50,400 --> 01:37:56,969
idle period for congestion control this

2247
01:37:53,520 --> 01:37:58,980
is from March and we talked water in

2248
01:37:56,970 --> 01:38:01,110
London incepted to take it to the idea I

2249
01:37:58,980 --> 01:38:02,700
think this is the other yeah this is

2250
01:38:01,110 --> 01:38:11,040
also the define under utilization and

2251
01:38:02,700 --> 01:38:12,150
accession we get here I don't know I

2252
01:38:11,040 --> 01:38:13,920
mean I don't know what we're gonna

2253
01:38:12,150 --> 01:38:17,820
resolve at the moment you know I think

2254
01:38:13,920 --> 01:38:20,240
this is praveen I quarry in China maybe

2255
01:38:17,820 --> 01:38:24,630
need to talk I don't know

2256
01:38:20,240 --> 01:38:26,639
so a couple of more points on this first

2257
01:38:24,630 --> 01:38:28,620
I think Ian's exactly right that there

2258
01:38:26,640 --> 01:38:30,270
is something proposed in 2675 people

2259
01:38:28,620 --> 01:38:32,970
should take a look and comment and see

2260
01:38:30,270 --> 01:38:36,270
if that's adequate and say something if

2261
01:38:32,970 --> 01:38:43,110
it's not second on the particular or the

2262
01:38:36,270 --> 01:38:45,270
general issue of idle period between on

2263
01:38:43,110 --> 01:38:48,599
defining idle period water reviewing an

2264
01:38:45,270 --> 01:38:50,790
idle period we specifically chose not to

2265
01:38:48,600 --> 01:38:53,430
walk into that territory because Gauri

2266
01:38:50,790 --> 01:38:56,640
knows how painful that is and we would

2267
01:38:53,430 --> 01:39:03,650
like to we deferred the discussion to

2268
01:38:56,640 --> 01:39:06,600
his RFC which is the CWA the new cwv RFC

2269
01:39:03,650 --> 01:39:08,940
which i think is adequate we don't need

2270
01:39:06,600 --> 01:39:12,540
to spend time in this document I believe

2271
01:39:08,940 --> 01:39:14,190
on making sure that we can write a

2272
01:39:12,540 --> 01:39:16,800
people can people are free to write

2273
01:39:14,190 --> 01:39:19,200
follow-on documents but at the moment

2274
01:39:16,800 --> 01:39:21,060
you need effort to move that one so

2275
01:39:19,200 --> 01:39:23,610
you're saying we have a PR people should

2276
01:39:21,060 --> 01:39:26,790
look at it and see if it addresses the

2277
01:39:23,610 --> 01:39:28,830
issue and if it does then we're done

2278
01:39:26,790 --> 01:39:32,100
yeah and also recognize that the text

2279
01:39:28,830 --> 01:39:37,530
already defers to the new CW government

2280
01:39:32,100 --> 01:39:41,660
for for you know idle periods okay so in

2281
01:39:37,530 --> 01:39:41,660
Montreal the rigidity are

2282
01:39:45,660 --> 01:39:51,730
and the last one is 25:34 PCN text

2283
01:39:49,990 --> 01:39:54,610
disables easy and too aggressively

2284
01:39:51,730 --> 01:39:56,410
I'm working Duke yeah this we talked

2285
01:39:54,610 --> 01:39:59,380
about yesterday but there's a PR needs

2286
01:39:56,410 --> 01:40:00,910
some updates based on comments I think

2287
01:39:59,380 --> 01:40:03,550
this is just Johnny getting time to do

2288
01:40:00,910 --> 01:40:05,200
the updates yeah this week we discussed

2289
01:40:03,550 --> 01:40:09,640
yesterday with the transport issues this

2290
01:40:05,200 --> 01:40:10,510
is fine okay I guess we'll hopefully get

2291
01:40:09,640 --> 01:40:11,650
this soonish

2292
01:40:10,510 --> 01:40:13,360
yeah yeah we're gonna get this this week

2293
01:40:11,650 --> 01:40:15,190
I'm working I don't know but we'll get

2294
01:40:13,360 --> 01:40:17,559
an update on this and that is engagement

2295
01:40:15,190 --> 01:40:21,400
on the spear but it's on me I have not

2296
01:40:17,560 --> 01:40:23,230
been able to updated updated pretty sure

2297
01:40:21,400 --> 01:40:25,360
Magnus is playing us fear fear the first

2298
01:40:23,230 --> 01:40:28,540
document with no issues of them just

2299
01:40:25,360 --> 01:40:29,769
saying slicing onion pretty sure Magnus

2300
01:40:28,540 --> 01:40:31,240
is taking you out for drinks if you're

2301
01:40:29,770 --> 01:40:35,470
the first document with no open issues

2302
01:40:31,240 --> 01:40:40,960
out of quick that's promising

2303
01:40:35,470 --> 01:40:43,840
I'm sharing other people so that takes

2304
01:40:40,960 --> 01:40:46,330
us through the recovery issues before we

2305
01:40:43,840 --> 01:40:48,070
move on order to ask what I've been

2306
01:40:46,330 --> 01:40:52,269
asking a lot recently

2307
01:40:48,070 --> 01:40:53,920
Ian especially and Jonah how do you feel

2308
01:40:52,270 --> 01:40:54,880
about moving there's dr. evil eight

2309
01:40:53,920 --> 01:40:58,090
states process

2310
01:40:54,880 --> 01:40:59,740
um just one one issue that's that it

2311
01:40:58,090 --> 01:41:02,680
does exist on the list but has not been

2312
01:40:59,740 --> 01:41:04,900
tied gears because gory filed it what is

2313
01:41:02,680 --> 01:41:08,580
was it this morning or last fight it's

2314
01:41:04,900 --> 01:41:08,580
something like that it's a recovery she

2315
01:41:14,790 --> 01:41:25,510
go to the top of the listeners top moves

2316
01:41:19,300 --> 01:41:29,670
rapidly here is friend 2923 the top of

2317
01:41:25,510 --> 01:41:35,860
the list rules by five every one our

2318
01:41:29,670 --> 01:41:37,690
winner GT management yes so we we this

2319
01:41:35,860 --> 01:41:39,940
is this is just a question we have a

2320
01:41:37,690 --> 01:41:42,370
mineral tea tea and we also have the

2321
01:41:39,940 --> 01:41:44,049
expectation that Creek floors last for a

2322
01:41:42,370 --> 01:41:46,960
long time in some cases because we might

2323
01:41:44,050 --> 01:41:49,200
use them over hours and min RTT records

2324
01:41:46,960 --> 01:41:51,370
the smallest RTT we saw on the path

2325
01:41:49,200 --> 01:41:53,920
you're going to change connection to

2326
01:41:51,370 --> 01:41:55,900
part in the document but that is men

2327
01:41:53,920 --> 01:41:57,440
forever and if your path changes then

2328
01:41:55,900 --> 01:41:59,389
the men are TT changes to lift

2329
01:41:57,440 --> 01:42:01,309
like so it may not eat e is useful then

2330
01:41:59,390 --> 01:42:03,620
maybe we should periodically reset the

2331
01:42:01,310 --> 01:42:06,260
not eating question what do we think

2332
01:42:03,620 --> 01:42:08,059
it's a good to the point so let that has

2333
01:42:06,260 --> 01:42:09,739
a similar concept of minerality and I

2334
01:42:08,060 --> 01:42:14,090
think we do something there where we

2335
01:42:09,739 --> 01:42:16,040
don't let it you know be unbounded or or

2336
01:42:14,090 --> 01:42:17,780
we refresh it over a lifetime of

2337
01:42:16,040 --> 01:42:20,510
connection and something similar makes

2338
01:42:17,780 --> 01:42:21,769
sense a to I agree is the let everybody

2339
01:42:20,510 --> 01:42:24,830
know what that that's doing can we just

2340
01:42:21,770 --> 01:42:28,520
copy that or Martin I'm Jana Sangh

2341
01:42:24,830 --> 01:42:31,400
off-mike that not sure that that does

2342
01:42:28,520 --> 01:42:34,130
anything Martin Thompson I would suggest

2343
01:42:31,400 --> 01:42:35,989
something less than a completely naive

2344
01:42:34,130 --> 01:42:40,989
implementation where you just sort of

2345
01:42:35,989 --> 01:42:43,790
cut and start over every ten minutes

2346
01:42:40,989 --> 01:42:46,968
I'd suggest this is probably something

2347
01:42:43,790 --> 01:42:51,230
you want to do in terms of number of

2348
01:42:46,969 --> 01:42:54,530
samples rather than rather than time and

2349
01:42:51,230 --> 01:42:57,169
you might want to give the replacement

2350
01:42:54,530 --> 01:42:58,969
min RTT a little bit of soak time before

2351
01:42:57,170 --> 01:43:01,790
you threw it in over the top of the

2352
01:42:58,969 --> 01:43:03,680
existing one pravin on the end driver

2353
01:43:01,790 --> 01:43:05,360
says that possible expiration events

2354
01:43:03,680 --> 01:43:07,460
from an RTG might be persistent

2355
01:43:05,360 --> 01:43:12,170
connection as adverse changes and app

2356
01:43:07,460 --> 01:43:14,120
idle not have a not ever fixed scheme

2357
01:43:12,170 --> 01:43:17,000
but make beta give an event based scheme

2358
01:43:14,120 --> 01:43:18,860
to invalidate minority T my proposal was

2359
01:43:17,000 --> 01:43:20,690
the very simplest which I think would be

2360
01:43:18,860 --> 01:43:22,429
helpful to do the same as path MTU

2361
01:43:20,690 --> 01:43:24,949
discovery every ten minutes just read

2362
01:43:22,430 --> 01:43:26,810
the RTG and work from there I think all

2363
01:43:24,949 --> 01:43:29,210
these other proposals are better and

2364
01:43:26,810 --> 01:43:31,489
more helpful and slightly more caught so

2365
01:43:29,210 --> 01:43:32,540
somebody has to make a call it partly

2366
01:43:31,489 --> 01:43:35,209
depends on what you're going to use min

2367
01:43:32,540 --> 01:43:36,949
RT t for it's used as a rejection think

2368
01:43:35,210 --> 01:43:38,420
rejection samples at the moment so it's

2369
01:43:36,949 --> 01:43:40,849
not that critical when you get it right

2370
01:43:38,420 --> 01:43:44,469
it's important that you don't get it

2371
01:43:40,850 --> 01:43:44,469
wildly wrong for long periods of time

2372
01:43:46,900 --> 01:43:50,629
yeah yeah let that does something more

2373
01:43:49,280 --> 01:43:51,980
complicated because it depends more on

2374
01:43:50,630 --> 01:43:54,560
it so I don't think it's super useful

2375
01:43:51,980 --> 01:43:57,290
but +12 it should be reset on idle and

2376
01:43:54,560 --> 01:44:01,160
maybe every 10 minutes or something it's

2377
01:43:57,290 --> 01:44:04,880
really high okay does anybody want to

2378
01:44:01,160 --> 01:44:08,840
take a token for writing something up so

2379
01:44:04,880 --> 01:44:10,699
Revere to them while what I'm saying

2380
01:44:08,840 --> 01:44:12,980
maybe editorial

2381
01:44:10,699 --> 01:44:17,360
but it's super nice when the thing

2382
01:44:12,980 --> 01:44:21,499
actually is what it says if it's called

2383
01:44:17,360 --> 01:44:23,420
Minar TT I will find it confusing that's

2384
01:44:21,499 --> 01:44:25,699
why I say this is potentially editorial

2385
01:44:23,420 --> 01:44:28,760
we're called low art you tear up yeah

2386
01:44:25,699 --> 01:44:31,098
sure so long as I don't have to have a

2387
01:44:28,760 --> 01:44:37,940
variable in my code that says actual in

2388
01:44:31,099 --> 01:44:39,619
our GT some we aren't sure andrew Grega

2389
01:44:37,940 --> 01:44:41,629
I recall somewhere in the Linux kernel

2390
01:44:39,619 --> 01:44:44,329
this is a very simple algorithm for a

2391
01:44:41,630 --> 01:44:46,190
sliding window to maximum I think maybe

2392
01:44:44,329 --> 01:44:48,799
we might want to a draw adopt the

2393
01:44:46,190 --> 01:44:51,530
inverse of that and so yes it becomes a

2394
01:44:48,800 --> 01:44:55,099
windowed in an RTT it's just the window

2395
01:44:51,530 --> 01:44:59,139
being samples or anything else but you

2396
01:44:55,099 --> 01:44:59,139
know that seems like a reasonable thing

2397
01:45:00,789 --> 01:45:05,389
so Martin Thompson if it occurs to me

2398
01:45:03,590 --> 01:45:06,980
that there are many possible ways you

2399
01:45:05,389 --> 01:45:10,519
could paint this particular bike shed

2400
01:45:06,980 --> 01:45:12,369
and it really is a bike shed I think

2401
01:45:10,519 --> 01:45:15,079
that we want to make some suggestions

2402
01:45:12,369 --> 01:45:18,440
and not do anything more concrete than

2403
01:45:15,079 --> 01:45:20,719
that the suggestion for instance the

2404
01:45:18,440 --> 01:45:23,210
idea that you have you reset this on

2405
01:45:20,719 --> 01:45:26,059
idle won't work for a number of very

2406
01:45:23,210 --> 01:45:28,190
common usage patterns because their

2407
01:45:26,059 --> 01:45:35,030
definition of idle is such that we

2408
01:45:28,190 --> 01:45:37,699
actually get that very frequently we

2409
01:45:35,030 --> 01:45:41,960
often have periods where there's nothing

2410
01:45:37,699 --> 01:45:43,549
descended that's that's something yes I

2411
01:45:41,960 --> 01:45:46,219
think the congestion control meeting of

2412
01:45:43,550 --> 01:45:47,570
idle isn't doesn't it doesn't the event

2413
01:45:46,219 --> 01:45:50,119
doesn't slide immediately when you run

2414
01:45:47,570 --> 01:45:53,058
out of theaters and it's usually anyways

2415
01:45:50,119 --> 01:45:54,768
but I agree that so maybe the way

2416
01:45:53,059 --> 01:45:59,360
forward here is so I think we tree arch

2417
01:45:54,769 --> 01:46:01,820
this as the design item and you have a

2418
01:45:59,360 --> 01:46:03,558
very very simple thing that we say you

2419
01:46:01,820 --> 01:46:05,989
know you you can do this but you can

2420
01:46:03,559 --> 01:46:10,730
also do other things but the point is to

2421
01:46:05,989 --> 01:46:12,409
not let it basically be unchecked for a

2422
01:46:10,730 --> 01:46:15,440
long time yeah I think a recommendation

2423
01:46:12,409 --> 01:46:17,360
is and if somebody wants to put a PR in

2424
01:46:15,440 --> 01:46:18,739
and then you feel what the microphone

2425
01:46:17,360 --> 01:46:20,449
can have a quick discussion about that's

2426
01:46:18,739 --> 01:46:23,739
visible we can probably third is pretty

2427
01:46:20,449 --> 01:46:26,500
quickly yeah let's move forward attack

2428
01:46:23,739 --> 01:46:28,509
so this is like I'm a should do

2429
01:46:26,500 --> 01:46:30,520
something about this and but the

2430
01:46:28,510 --> 01:46:31,719
recommendation of particular other than

2431
01:46:30,520 --> 01:46:38,560
that you could use if you want you

2432
01:46:31,719 --> 01:46:40,270
correct I'm Jenna Inga so I agree with

2433
01:46:38,560 --> 01:46:42,250
with the idea that we should build

2434
01:46:40,270 --> 01:46:44,469
something fairly simple but we should

2435
01:46:42,250 --> 01:46:47,050
build something fairly simple it's

2436
01:46:44,469 --> 01:46:49,750
important to bear in mind that this is

2437
01:46:47,050 --> 01:46:50,350
the consequences of getting the minority

2438
01:46:49,750 --> 01:46:52,830
wrong here

2439
01:46:50,350 --> 01:46:56,290
so this is not a congestion control

2440
01:46:52,830 --> 01:46:58,930
issue it's a loss recovery issue the

2441
01:46:56,290 --> 01:47:02,190
minority in quick is used primarily to

2442
01:46:58,930 --> 01:47:07,210
reject samples that might be too small

2443
01:47:02,190 --> 01:47:09,339
then the measured minority so that's in

2444
01:47:07,210 --> 01:47:11,230
in the worst case you end up having some

2445
01:47:09,340 --> 01:47:12,640
samples that are that that go in you

2446
01:47:11,230 --> 01:47:16,450
might have some I think you might have

2447
01:47:12,640 --> 01:47:20,950
some spurious retransmissions but that's

2448
01:47:16,450 --> 01:47:22,480
the worst that would happen yeah so so

2449
01:47:20,950 --> 01:47:24,580
bear in mind that this is not something

2450
01:47:22,480 --> 01:47:26,019
you need a complicated machinery for if

2451
01:47:24,580 --> 01:47:27,370
you already have complicated machinery

2452
01:47:26,020 --> 01:47:29,260
that you use for your condition

2453
01:47:27,370 --> 01:47:30,940
controller feel absolutely free to use

2454
01:47:29,260 --> 01:47:33,370
that for this but we should have some

2455
01:47:30,940 --> 01:47:35,559
basic protection against an old minority

2456
01:47:33,370 --> 01:47:43,469
being then in the case of the park

2457
01:47:35,560 --> 01:47:45,700
change okay so I started ask before

2458
01:47:43,469 --> 01:47:52,120
Jonny and any thoughts about saying this

2459
01:47:45,700 --> 01:47:54,580
list H process I think the document

2460
01:47:52,120 --> 01:48:00,099
itself is getting in very close to the

2461
01:47:54,580 --> 01:48:03,719
to the right shape it's still like the

2462
01:48:00,100 --> 01:48:03,719
late stage process to be a little faster

2463
01:48:07,140 --> 01:48:10,750
at the pace the document is going I

2464
01:48:09,550 --> 01:48:12,940
don't think the late stage party was

2465
01:48:10,750 --> 01:48:14,620
going to slow it down yeah look that's

2466
01:48:12,940 --> 01:48:17,259
that's completely fair I don't think

2467
01:48:14,620 --> 01:48:21,489
that the velocity of change here is that

2468
01:48:17,260 --> 01:48:22,870
dramatic the which also leads to the

2469
01:48:21,489 --> 01:48:24,879
other question right we've not gotten a

2470
01:48:22,870 --> 01:48:26,349
ton of feedback regarding feedback from

2471
01:48:24,880 --> 01:48:27,520
a couple of people right from the from

2472
01:48:26,350 --> 01:48:29,590
the time of the document but not

2473
01:48:27,520 --> 01:48:32,020
everybody so I don't know where people

2474
01:48:29,590 --> 01:48:33,910
are on implementing loss recovery an

2475
01:48:32,020 --> 01:48:35,500
agreement in condition control this is

2476
01:48:33,910 --> 01:48:37,290
part of the reason that Martin and I

2477
01:48:35,500 --> 01:48:39,690
worked on building the simulator

2478
01:48:37,290 --> 01:48:41,550
same framework so that we could actually

2479
01:48:39,690 --> 01:48:44,580
test what people's about implementations

2480
01:48:41,550 --> 01:48:47,340
are doing my hope is people are people

2481
01:48:44,580 --> 01:48:49,140
are planning to get there soon even if

2482
01:48:47,340 --> 01:48:51,030
they haven't gotten that I don't know

2483
01:48:49,140 --> 01:48:53,130
how you want to use that information in

2484
01:48:51,030 --> 01:48:54,780
informing this process though we don't

2485
01:48:53,130 --> 01:48:56,070
need to go too deeply into this I just

2486
01:48:54,780 --> 01:48:57,450
wanted to get a sense of whether you

2487
01:48:56,070 --> 01:48:58,679
thought we were ready or not it sounds

2488
01:48:57,450 --> 01:49:01,620
like you want a bit more time that's

2489
01:48:58,680 --> 01:49:03,660
fine my impression from from talking to

2490
01:49:01,620 --> 01:49:05,309
the implementers that some implementers

2491
01:49:03,660 --> 01:49:06,720
are actually just trying to quick stack

2492
01:49:05,310 --> 01:49:08,640
into whatever condition control

2493
01:49:06,720 --> 01:49:11,490
framework they have for other transports

2494
01:49:08,640 --> 01:49:13,860
others implement you know cubic in some

2495
01:49:11,490 --> 01:49:16,740
way some are actually trying to

2496
01:49:13,860 --> 01:49:18,450
implement the recovery draft and then I

2497
01:49:16,740 --> 01:49:20,550
don't I don't know if there's still any

2498
01:49:18,450 --> 01:49:23,250
out there that just have a a quick hack

2499
01:49:20,550 --> 01:49:26,160
that suppose it mostly flow control

2500
01:49:23,250 --> 01:49:28,380
based I think those are like upgrading

2501
01:49:26,160 --> 01:49:29,880
to proper congestion control now or have

2502
01:49:28,380 --> 01:49:31,110
done that but those are sort of the

2503
01:49:29,880 --> 01:49:33,180
three approaches that I see

2504
01:49:31,110 --> 01:49:34,559
implementations following can is it

2505
01:49:33,180 --> 01:49:35,580
possible for me asking for show of hands

2506
01:49:34,560 --> 01:49:42,780
of how many people have read the

2507
01:49:35,580 --> 01:49:46,860
recovery document sure thank you I

2508
01:49:42,780 --> 01:49:51,450
appreciate maybe they just read and just

2509
01:49:46,860 --> 01:49:52,920
don't care but but I was gonna say that

2510
01:49:51,450 --> 01:49:55,200
condition control yes you're right

2511
01:49:52,920 --> 01:49:56,660
people will use other controllers

2512
01:49:55,200 --> 01:49:59,670
because it's much harder to implement

2513
01:49:56,660 --> 01:50:02,639
those ones but loss recovery should be

2514
01:49:59,670 --> 01:50:05,040
this prom is going to have to be granion

2515
01:50:02,640 --> 01:50:06,240
so we would definitely for the people

2516
01:50:05,040 --> 01:50:07,890
who read and for the people who have

2517
01:50:06,240 --> 01:50:09,900
implemented we'd definitely like to hear

2518
01:50:07,890 --> 01:50:12,210
some feedback on whether you think

2519
01:50:09,900 --> 01:50:13,559
clarifications required or even if it

2520
01:50:12,210 --> 01:50:18,960
did if it all went well that would be

2521
01:50:13,560 --> 01:50:22,230
very useful feedback to have very

2522
01:50:18,960 --> 01:50:23,310
briefly Oh Erica near Apple um to what

2523
01:50:22,230 --> 01:50:26,070
large said we've actually done both

2524
01:50:23,310 --> 01:50:27,780
we've got cubic and all that but we also

2525
01:50:26,070 --> 01:50:29,730
just did a vanilla exactly what's in

2526
01:50:27,780 --> 01:50:31,200
recovery draft and I think the last time

2527
01:50:29,730 --> 01:50:32,429
we asked this question I stood up and

2528
01:50:31,200 --> 01:50:33,420
said hey I think we need more time

2529
01:50:32,430 --> 01:50:35,160
before we do the late stage process

2530
01:50:33,420 --> 01:50:37,530
cause nobody's really poked at it yet

2531
01:50:35,160 --> 01:50:39,240
and I think now we're seeing that most

2532
01:50:37,530 --> 01:50:41,550
people have poked it we've done a nice

2533
01:50:39,240 --> 01:50:42,990
rebbe of kind of how do we word it

2534
01:50:41,550 --> 01:50:45,300
what's confusing what makes sense what

2535
01:50:42,990 --> 01:50:47,340
just flat-out doesn't work and we're

2536
01:50:45,300 --> 01:50:49,080
kind of into the place where we still

2537
01:50:47,340 --> 01:50:50,790
have a bunch of testing we need to do

2538
01:50:49,080 --> 01:50:54,000
but

2539
01:50:50,790 --> 01:50:55,470
changes that would that I think at least

2540
01:50:54,000 --> 01:50:57,030
on my end I'd be saying hey we really

2541
01:50:55,470 --> 01:50:58,380
need to change this would have a bunch

2542
01:50:57,030 --> 01:51:00,179
of like test results and data behind

2543
01:50:58,380 --> 01:51:03,690
them which kind of fits okay in the

2544
01:51:00,180 --> 01:51:04,740
wastage process - it sounds like we're

2545
01:51:03,690 --> 01:51:10,710
getting there but not quite there yet

2546
01:51:04,740 --> 01:51:12,719
okay so we have nine minutes left we

2547
01:51:10,710 --> 01:51:14,600
have the HTTP issues up I don't think

2548
01:51:12,720 --> 01:51:16,110
we'd have time to go through them so

2549
01:51:14,600 --> 01:51:17,760
Mike Bishop

2550
01:51:16,110 --> 01:51:19,290
worry there you are anything in

2551
01:51:17,760 --> 01:51:21,000
particular you'd like some information

2552
01:51:19,290 --> 01:51:27,050
or help from the working group on in

2553
01:51:21,000 --> 01:51:30,239
this time 26:32 okay

2554
01:51:27,050 --> 01:51:30,239
[Music]

2555
01:51:41,469 --> 01:51:45,969
so I was looking through the issues

2556
01:51:43,630 --> 01:51:48,520
trying to find a couple but hopefully we

2557
01:51:45,969 --> 01:51:51,250
could make good progress on a couple

2558
01:51:48,520 --> 01:51:56,020
minutes at the interim we said that we

2559
01:51:51,250 --> 01:51:58,480
were going to reread 7540 and ask

2560
01:51:56,020 --> 01:52:01,780
questions of HP mailing list with regard

2561
01:51:58,480 --> 01:52:04,030
to this issue that has happened and so

2562
01:52:01,780 --> 01:52:08,199
we were to see if anyone's opinion has

2563
01:52:04,030 --> 01:52:11,050
changed should to recap this issue it's

2564
01:52:08,199 --> 01:52:17,139
basically the observation that go away

2565
01:52:11,050 --> 01:52:19,660
in h2 refers to screens and tells which

2566
01:52:17,140 --> 01:52:24,310
makes things stop in both directions it

2567
01:52:19,660 --> 01:52:26,830
makes push stop as well where it's

2568
01:52:24,310 --> 01:52:29,199
intended to refer to requests and in

2569
01:52:26,830 --> 01:52:33,250
fact does refer to requests streams of

2570
01:52:29,199 --> 01:52:34,960
h3 but that's a difference from h2 it

2571
01:52:33,250 --> 01:52:38,050
doesn't do anything about push other

2572
01:52:34,960 --> 01:52:40,510
than let the transaction finish a

2573
01:52:38,050 --> 01:52:42,730
sparkly response so there are two

2574
01:52:40,510 --> 01:52:48,430
schools of thought here we just need to

2575
01:52:42,730 --> 01:52:50,610
pick one in the book any thoughts about

2576
01:52:48,430 --> 01:52:50,610
that

2577
01:52:53,160 --> 01:52:58,090
allons and now I'll just repeat that I I

2578
01:52:56,110 --> 01:53:02,580
filed this issue and I still think it

2579
01:52:58,090 --> 01:53:02,580
should be and similar to h2

2580
01:53:06,710 --> 01:53:12,340
anyone want to argue the converse yeah

2581
01:53:09,380 --> 01:53:14,480
yeah I'm going to argue the converse

2582
01:53:12,340 --> 01:53:18,830
this all depends on your on your

2583
01:53:14,480 --> 01:53:20,928
conception of push and we have different

2584
01:53:18,830 --> 01:53:21,860
Alan and I have different views on this

2585
01:53:20,929 --> 01:53:24,020
one because we have different

2586
01:53:21,860 --> 01:53:28,040
understandings of what push really means

2587
01:53:24,020 --> 01:53:31,370
and I think this is this is the

2588
01:53:28,040 --> 01:53:33,710
fundamental disagreement then I say push

2589
01:53:31,370 --> 01:53:36,140
it being related to the requests and so

2590
01:53:33,710 --> 01:53:38,600
you shut down the requests you

2591
01:53:36,140 --> 01:53:43,370
ultimately need to allow the pushes to

2592
01:53:38,600 --> 01:53:48,800
continue does anyone else in the room

2593
01:53:43,370 --> 01:53:52,370
care about the outcome Alan and Martin

2594
01:53:48,800 --> 01:53:54,800
what are you doing for lunch so far I

2595
01:53:52,370 --> 01:53:57,559
have two different lunches I understand

2596
01:53:54,800 --> 01:53:59,960
yeah well at some point if he too could

2597
01:53:57,560 --> 01:54:05,630
collaborate a little bit maybe try and

2598
01:53:59,960 --> 01:54:07,400
find a way for that debate there I was

2599
01:54:05,630 --> 01:54:09,050
gonna said that I kind of hear and I

2600
01:54:07,400 --> 01:54:16,699
tend to give him where we're at favor

2601
01:54:09,050 --> 01:54:20,140
Martin's perspective okay it so Mike to

2602
01:54:16,699 --> 01:54:22,669
be clear is this issue a blocker for you

2603
01:54:20,140 --> 01:54:25,429
it is one of the things keeping us from

2604
01:54:22,670 --> 01:54:27,739
hitting zvv a lot of the remaining open

2605
01:54:25,429 --> 01:54:30,350
issues are limited to priority and if we

2606
01:54:27,739 --> 01:54:40,519
decide that priority is coming out I can

2607
01:54:30,350 --> 01:54:42,230
close over half the issues yeah oh

2608
01:54:40,520 --> 01:54:47,719
commit to talking to Alan about this one

2609
01:54:42,230 --> 01:54:49,099
okay this this is something that is

2610
01:54:47,719 --> 01:54:53,900
perfectly suited to the late stage

2611
01:54:49,100 --> 01:54:55,820
process Charlie so don't let this be I

2612
01:54:53,900 --> 01:54:56,960
mean I would take a home I just don't

2613
01:54:55,820 --> 01:55:00,199
think that we have enough information to

2614
01:54:56,960 --> 01:55:01,969
make an informed one so no and we can we

2615
01:55:00,199 --> 01:55:03,440
can develop presentation material if

2616
01:55:01,969 --> 01:55:05,090
people feel that they need to understand

2617
01:55:03,440 --> 01:55:07,730
this a little better but so can I think

2618
01:55:05,090 --> 01:55:11,330
that people who understand the problem

2619
01:55:07,730 --> 01:55:14,059
and already have the information that

2620
01:55:11,330 --> 01:55:15,920
they need I think we just okay disagree

2621
01:55:14,060 --> 01:55:17,630
on what the right what the right model

2622
01:55:15,920 --> 01:55:19,370
is to enable alright I'm just just

2623
01:55:17,630 --> 01:55:20,420
interrupt Mike are there any other

2624
01:55:19,370 --> 01:55:26,360
issues that you would like to

2625
01:55:20,420 --> 01:55:28,670
discuss right now I don't know that

2626
01:55:26,360 --> 01:55:30,349
there are anywhere two or three minutes

2627
01:55:28,670 --> 01:55:33,489
here is going to be more productive than

2628
01:55:30,350 --> 01:55:35,660
the Midwest okay thank you

2629
01:55:33,489 --> 01:55:40,339
Roberto did you have a thought that you

2630
01:55:35,660 --> 01:55:42,849
wanted to convey okay conveyed in three

2631
01:55:40,340 --> 01:55:44,840
minutes it shouldn't take that long

2632
01:55:42,850 --> 01:55:49,820
unless you want me to take the full

2633
01:55:44,840 --> 01:55:52,640
three minutes but anyway I think that

2634
01:55:49,820 --> 01:55:54,830
what we might be seeing here is a bit of

2635
01:55:52,640 --> 01:55:57,590
the tussle between whether or not go

2636
01:55:54,830 --> 01:55:58,940
away makes the most sense of the h3

2637
01:55:57,590 --> 01:56:01,160
layer or the layer

2638
01:55:58,940 --> 01:56:03,889
I wouldn't say transport but earlier

2639
01:56:01,160 --> 01:56:06,710
than you I don't believe we're gonna

2640
01:56:03,890 --> 01:56:09,800
resolve that in v1 I don't know if that

2641
01:56:06,710 --> 01:56:16,370
changes anyone's opinions so there you

2642
01:56:09,800 --> 01:56:19,280
go I'm I'm firmly against moving go away

2643
01:56:16,370 --> 01:56:22,480
any further down for the reasons that

2644
01:56:19,280 --> 01:56:27,080
have already been discussed at length

2645
01:56:22,480 --> 01:56:28,519
no no period okay sounds like we need to

2646
01:56:27,080 --> 01:56:31,850
take a discussion of the list and have

2647
01:56:28,520 --> 01:56:34,370
some hawai discussions with that I think

2648
01:56:31,850 --> 01:56:37,130
we're just about done as we mentioned

2649
01:56:34,370 --> 01:56:39,890
we're going to try to announce an

2650
01:56:37,130 --> 01:56:42,890
interim as soon as possible again we're

2651
01:56:39,890 --> 01:56:44,719
thinking probably October early October

2652
01:56:42,890 --> 01:56:48,320
to mid October I think is their current

2653
01:56:44,719 --> 01:56:49,699
thinking but we'll we'll get that

2654
01:56:48,320 --> 01:56:51,980
information to you as soon as we

2655
01:56:49,699 --> 01:56:53,809
possibly can from North America and and

2656
01:56:51,980 --> 01:56:55,849
we're looking at North America now it

2657
01:56:53,810 --> 01:56:57,500
would be at this point where we're

2658
01:56:55,850 --> 01:56:59,630
trying really hard for North America if

2659
01:56:57,500 --> 01:57:02,780
for some reason we really can't find a

2660
01:56:59,630 --> 01:57:04,520
location we might have to fall back

2661
01:57:02,780 --> 01:57:07,670
somewhere else but that's our intent

2662
01:57:04,520 --> 01:57:10,760
right now so thanks for that

2663
01:57:07,670 --> 01:57:12,320
and we'll do dinner up again there also

2664
01:57:10,760 --> 01:57:13,969
is another doodle poll for another

2665
01:57:12,320 --> 01:57:17,719
virtual interrupt between now and

2666
01:57:13,969 --> 01:57:20,330
October which would probably be I guess

2667
01:57:17,719 --> 01:57:23,150
I guess when whenever in the next draft

2668
01:57:20,330 --> 01:57:24,860
revisions drop would be a natural time

2669
01:57:23,150 --> 01:57:28,940
to have it since people are still not

2670
01:57:24,860 --> 01:57:31,969
fully on board with - 22 where's where's

2671
01:57:28,940 --> 01:57:34,809
the other blue sheet where we have a

2672
01:57:31,969 --> 01:57:34,810
missing blue sheet

2673
01:57:34,870 --> 01:57:44,530
anyone have the blue sheets okay see you

2674
01:57:42,170 --> 01:57:44,530
next time

2675
01:57:50,250 --> 01:57:53,340
[Music]

