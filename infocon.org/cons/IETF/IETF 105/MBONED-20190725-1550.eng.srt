1
00:00:42,350 --> 00:00:48,210
statistics make an argument for savings

2
00:00:46,110 --> 00:00:49,890
for taking the user taking the number of

3
00:00:48,210 --> 00:00:52,590
users watching a stream and multiplying

4
00:00:49,890 --> 00:00:54,420
that by the half bandwidth and ran out

5
00:00:52,590 --> 00:01:09,749
of your memory like that's how much data

6
00:00:54,420 --> 00:01:12,030
you should read that traffic you - data

7
00:01:09,749 --> 00:01:15,570
structure all in a beer an AMT like

8
00:01:12,030 --> 00:01:25,819
compare them all just won't break we get

9
00:01:15,570 --> 00:01:30,350
dropped in it was made by a little pasta

10
00:01:25,819 --> 00:01:30,350
that we knocked many quantum an analyst

11
00:01:35,869 --> 00:02:13,730
would use all right you actually really

12
00:02:09,179 --> 00:02:13,730
- I'm a Nikon

13
00:02:18,739 --> 00:02:37,430
outside I'm sorry yeah you had to show

14
00:02:34,980 --> 00:02:37,429
that it worked

15
00:02:51,409 --> 00:03:17,988
yeah yeah so we're down the stage

16
00:04:11,410 --> 00:04:19,680
the Simpsons going high glad someone

17
00:04:23,430 --> 00:04:27,220
[Laughter]

18
00:04:34,410 --> 00:04:47,950
showers by okay we're ready to get

19
00:04:43,990 --> 00:04:49,950
started welcome to M&D get to know your

20
00:04:47,950 --> 00:04:53,650
neighbor introduce yourself to everyone

21
00:04:49,950 --> 00:04:57,760
you know hopefully you're all meant to

22
00:04:53,650 --> 00:05:00,429
be in a Modi here's a note well you

23
00:04:57,760 --> 00:05:02,440
probably haven't seen this yet but it

24
00:05:00,430 --> 00:05:07,630
actually can be read in iambic

25
00:05:02,440 --> 00:05:12,520
pentameter yes yeah that's a fun fact it

26
00:05:07,630 --> 00:05:20,590
was written in iambic pentameter please

27
00:05:12,520 --> 00:05:23,380
note it well here's our agenda and I

28
00:05:20,590 --> 00:05:26,859
think a lot of the folks in here are

29
00:05:23,380 --> 00:05:34,480
going to be presenting so would anyone

30
00:05:26,860 --> 00:05:40,260
like to bash this agenda I don't think

31
00:05:34,480 --> 00:05:43,590
we have a whole lot of a whole lot of

32
00:05:40,260 --> 00:05:46,719
potential controversies on this agenda

33
00:05:43,590 --> 00:05:52,359
okay so let's get started with the

34
00:05:46,720 --> 00:05:55,180
status of the active drafts the first

35
00:05:52,360 --> 00:05:57,610
two drafts the Dryad draft jakes triad

36
00:05:55,180 --> 00:05:59,590
draft did just complete working group

37
00:05:57,610 --> 00:06:01,500
last call it is in the hands of the

38
00:05:59,590 --> 00:06:05,950
Shepherd and we would like to thank Tim

39
00:06:01,500 --> 00:06:12,760
toon town for volunteering to Shepherd

40
00:06:05,950 --> 00:06:14,710
that one the EM cast problems draft did

41
00:06:12,760 --> 00:06:16,690
complete work last working group last

42
00:06:14,710 --> 00:06:18,570
call with there were some minor

43
00:06:16,690 --> 00:06:20,910
revisions

44
00:06:18,570 --> 00:06:22,960
we'd like to kind of go through

45
00:06:20,910 --> 00:06:24,870
Charlie's going to provide an update on

46
00:06:22,960 --> 00:06:27,090
all the changes that

47
00:06:24,870 --> 00:06:28,980
made most of them were textual somewhere

48
00:06:27,090 --> 00:06:31,469
you know everything was minor but there

49
00:06:28,980 --> 00:06:33,150
are a few additions and let's decide if

50
00:06:31,470 --> 00:06:34,980
we think we need another working group

51
00:06:33,150 --> 00:06:39,919
last call for that one based on those

52
00:06:34,980 --> 00:06:42,720
last few changes that were made and

53
00:06:39,920 --> 00:06:45,210
whenever that's ready though because it

54
00:06:42,720 --> 00:06:48,090
did seem to successfully complete we had

55
00:06:45,210 --> 00:06:50,460
enough support for it to move on thank

56
00:06:48,090 --> 00:06:54,150
you to Jake for volunteering to be the

57
00:06:50,460 --> 00:06:57,030
shepherd of that one next we have two

58
00:06:54,150 --> 00:06:59,760
drafts that are in active working group

59
00:06:57,030 --> 00:07:03,419
last call so here is an opportunity

60
00:06:59,760 --> 00:07:06,300
here's your opportunity as a reminder to

61
00:07:03,420 --> 00:07:08,970
please provide feedback if you support

62
00:07:06,300 --> 00:07:11,280
or do not support working group the

63
00:07:08,970 --> 00:07:14,730
advancement of these documents please

64
00:07:11,280 --> 00:07:16,559
speak up we're running that last call

65
00:07:14,730 --> 00:07:19,020
for the next few weeks but we wanted to

66
00:07:16,560 --> 00:07:21,450
run it through IETF so that we could

67
00:07:19,020 --> 00:07:23,599
remind everyone in the room that hey

68
00:07:21,450 --> 00:07:26,430
here now would be a good opportunity to

69
00:07:23,600 --> 00:07:29,940
if you forgot the send hit the send

70
00:07:26,430 --> 00:07:32,040
button on your email that you have

71
00:07:29,940 --> 00:07:34,140
feedback on these drafts now is the time

72
00:07:32,040 --> 00:07:38,040
to do it

73
00:07:34,140 --> 00:07:41,159
the last active work draft is the yang

74
00:07:38,040 --> 00:07:45,000
models and Sandee wanted me to bring

75
00:07:41,160 --> 00:07:49,200
this one up because she is she is

76
00:07:45,000 --> 00:07:53,060
looking for feedback as well is this

77
00:07:49,200 --> 00:07:58,050
ready for working group last call first

78
00:07:53,060 --> 00:08:00,900
what what what what is the Stig or

79
00:07:58,050 --> 00:08:02,970
Warren what exactly is the process for

80
00:08:00,900 --> 00:08:05,250
the young doctors do we send it to them

81
00:08:02,970 --> 00:08:09,450
after working group last call do we send

82
00:08:05,250 --> 00:08:11,220
it to them for feedback prior how does

83
00:08:09,450 --> 00:08:13,680
what are we supposed to do what's the

84
00:08:11,220 --> 00:08:16,230
interaction state so you can actually go

85
00:08:13,680 --> 00:08:18,300
in the data checker and request a young

86
00:08:16,230 --> 00:08:25,730
doctor review okay you can do that

87
00:08:18,300 --> 00:08:30,240
before before last college okay yeah

88
00:08:25,730 --> 00:08:32,760
better cool while you're upstate I I'm

89
00:08:30,240 --> 00:08:34,409
guessing you have the highest person's

90
00:08:32,760 --> 00:08:37,650
percent likelihood of actually have read

91
00:08:34,409 --> 00:08:38,760
read this have you read it

92
00:08:37,650 --> 00:08:43,439
do you have any thoughts

93
00:08:38,760 --> 00:08:45,540
I have read it but I feel like I know

94
00:08:43,440 --> 00:08:47,820
not that much get involved with young

95
00:08:45,540 --> 00:08:49,589
myself so it's kind of hard for me and

96
00:08:47,820 --> 00:08:51,000
I'm afraid it's the same problem with

97
00:08:49,590 --> 00:08:53,720
most people in the working group they

98
00:08:51,000 --> 00:08:57,150
don't mean know young that well okay and

99
00:08:53,720 --> 00:08:59,070
also though no ideally there should be

100
00:08:57,150 --> 00:09:01,890
operators so they were saying that's the

101
00:08:59,070 --> 00:09:04,740
small include what they need but but

102
00:09:01,890 --> 00:09:14,160
yeah okay so we need more provider input

103
00:09:04,740 --> 00:09:17,640
on this one yeah Jake Holland I asked

104
00:09:14,160 --> 00:09:21,060
sandy about this because my opinion it

105
00:09:17,640 --> 00:09:21,360
was basically if it works it looks okay

106
00:09:21,060 --> 00:09:24,839
to me

107
00:09:21,360 --> 00:09:27,600
I read it also and she said that yes

108
00:09:24,840 --> 00:09:32,460
they've been running it and it's in it's

109
00:09:27,600 --> 00:09:34,320
in testing so I don't know how to

110
00:09:32,460 --> 00:09:37,170
incorporate that feedback into the

111
00:09:34,320 --> 00:09:39,780
consensus process but I feel like that

112
00:09:37,170 --> 00:09:42,660
is the you know if it actually works

113
00:09:39,780 --> 00:09:44,339
for deployed systems then we probably

114
00:09:42,660 --> 00:09:50,010
should drop her stamp it and get this

115
00:09:44,340 --> 00:09:52,830
out the door see you again

116
00:09:50,010 --> 00:09:55,020
yeah I agree you know it's possible that

117
00:09:52,830 --> 00:09:57,720
doesn't include everything that ideally

118
00:09:55,020 --> 00:09:59,460
should be there but it can always if we

119
00:09:57,720 --> 00:10:01,950
find stuff that this missing later they

120
00:09:59,460 --> 00:10:05,340
can always revise it or you send the

121
00:10:01,950 --> 00:10:07,710
model there's no harm in maybe starting

122
00:10:05,340 --> 00:10:10,770
with it just the basics so now's a good

123
00:10:07,710 --> 00:10:17,810
time to request yang doctor review I

124
00:10:10,770 --> 00:10:17,810
guess okay we will note that

125
00:10:19,910 --> 00:10:22,959
[Music]

126
00:10:28,139 --> 00:10:35,910
please go back in that doctor though yes

127
00:10:34,040 --> 00:10:38,490
yeah make sure those are all in the

128
00:10:35,910 --> 00:10:42,209
minutes yes please doctor the notes so

129
00:10:38,490 --> 00:10:46,620
that it doesn't say the cynical things

130
00:10:42,209 --> 00:10:52,079
that we mean other Doc's there's the

131
00:10:46,620 --> 00:10:53,639
Ambu draft and Jake anything you want to

132
00:10:52,079 --> 00:11:02,248
say about this or will this be covered a

133
00:10:53,639 --> 00:11:05,519
little bit in your hackathon update yeah

134
00:11:02,249 --> 00:11:08,370
Jake Holland I have not implemented this

135
00:11:05,519 --> 00:11:10,889
yet but but that is the plan

136
00:11:08,370 --> 00:11:12,389
it's gonna be necessary it will I will

137
00:11:10,889 --> 00:11:13,649
touch on it briefly in my hackathon

138
00:11:12,389 --> 00:11:16,980
update I'd be happy to take questions

139
00:11:13,649 --> 00:11:19,759
about it and I think I'll have my slot

140
00:11:16,980 --> 00:11:23,399
has plenty of time then so yeah please

141
00:11:19,759 --> 00:11:34,769
it is I'll just say it is still highly

142
00:11:23,399 --> 00:11:48,540
relevant and will be coming up again so

143
00:11:34,769 --> 00:11:50,910
we will start with okay come on put

144
00:11:48,540 --> 00:11:56,009
together this slide deck he is not here

145
00:11:50,910 --> 00:12:00,410
unfortunately but he wanted Stig would

146
00:11:56,009 --> 00:12:03,089
you like to speak to this or shall I

147
00:12:00,410 --> 00:12:05,040
good if you want to have been discussing

148
00:12:03,089 --> 00:12:10,459
it with him and I also spoke to I am I

149
00:12:05,040 --> 00:12:10,459
earlier today take take of the pink X

150
00:12:15,470 --> 00:12:23,750
all right I haven't seen this slide so

151
00:12:26,029 --> 00:12:33,089
all right so Empress version 2 was

152
00:12:29,910 --> 00:12:37,920
published as an RFC recently and they

153
00:12:33,089 --> 00:12:40,230
got UDP port number from Ayane but then

154
00:12:37,920 --> 00:12:41,400
it turns out that that port number is in

155
00:12:40,230 --> 00:12:44,730
the range used by

156
00:12:41,400 --> 00:12:50,270
traceroute on linux and I think on some

157
00:12:44,730 --> 00:12:50,270
other UNIX operating systems as well so

158
00:12:50,780 --> 00:12:55,589
I'm not sure how much I need to explain

159
00:12:53,130 --> 00:12:58,200
but basically traceroute uses like

160
00:12:55,590 --> 00:13:01,350
hundred ports yourself but they only got

161
00:12:58,200 --> 00:13:04,410
one port a sign from Ayane which is in

162
00:13:01,350 --> 00:13:05,670
the port registry the the the port

163
00:13:04,410 --> 00:13:07,980
numbers coming after that the next

164
00:13:05,670 --> 00:13:10,620
several hundred pores are just Markus

165
00:13:07,980 --> 00:13:12,840
unassigned and M Chase was the first

166
00:13:10,620 --> 00:13:15,540
application or service that got the port

167
00:13:12,840 --> 00:13:18,840
number in that range

168
00:13:15,540 --> 00:13:22,439
and the problem you're seeing now is M

169
00:13:18,840 --> 00:13:25,410
trace is actually working just fine but

170
00:13:22,440 --> 00:13:28,500
if someone does a trace route what trace

171
00:13:25,410 --> 00:13:30,360
wrote does is I think it's like the

172
00:13:28,500 --> 00:13:32,640
first packet has like the lowest port

173
00:13:30,360 --> 00:13:34,500
number the next one with a higher TTL

174
00:13:32,640 --> 00:13:38,610
has the next higher port number and so

175
00:13:34,500 --> 00:13:40,920
on and then you you expect from routers

176
00:13:38,610 --> 00:13:42,660
on the path to get an ICMP message back

177
00:13:40,920 --> 00:13:45,599
because there's nothing listening on

178
00:13:42,660 --> 00:13:47,699
that port and you can then mark the TTL

179
00:13:45,600 --> 00:13:50,640
show that the round-trip time and stuff

180
00:13:47,700 --> 00:13:53,010
to that router but if something like M

181
00:13:50,640 --> 00:13:55,530
trace is listening on the port then

182
00:13:53,010 --> 00:13:57,270
there's no ICMP message going back and

183
00:13:55,530 --> 00:14:00,270
it will just show up as a star and kind

184
00:13:57,270 --> 00:14:03,420
of like time out and trace route so the

185
00:14:00,270 --> 00:14:11,819
problem here is not really an trace but

186
00:14:03,420 --> 00:14:12,329
trace route is sort of broken no I don't

187
00:14:11,820 --> 00:14:22,770
think so

188
00:14:12,330 --> 00:14:24,450
there's just lost implementations who

189
00:14:22,770 --> 00:14:27,930
maintains treasurers are just kind of

190
00:14:24,450 --> 00:14:30,930
like dead code right now I mean they

191
00:14:27,930 --> 00:14:32,849
this this being maintained so I'm not

192
00:14:30,930 --> 00:14:34,650
sure you know this it's been around of

193
00:14:32,850 --> 00:14:36,810
course for decades and there's probably

194
00:14:34,650 --> 00:14:40,470
several implementations and some of them

195
00:14:36,810 --> 00:14:43,859
are maintained some why not yeah I'm

196
00:14:40,470 --> 00:14:45,090
just wondering if if it's been doing if

197
00:14:43,860 --> 00:14:48,050
it's had this behavior for long enough

198
00:14:45,090 --> 00:14:50,580
it's sort of like grandfathered in yeah

199
00:14:48,050 --> 00:14:54,060
so but then it would be up to us so

200
00:14:50,580 --> 00:14:55,140
basically I don't know and can we make

201
00:14:54,060 --> 00:14:57,899
sure I enter reserve

202
00:14:55,140 --> 00:15:01,620
I mean get a different yeah so I spoke

203
00:14:57,899 --> 00:15:04,800
to say anything because first we want to

204
00:15:01,620 --> 00:15:08,640
have em face work but then basically

205
00:15:04,800 --> 00:15:10,740
Ayane needs to block this yeah so I can

206
00:15:08,640 --> 00:15:16,529
come and go that far so I have a patient

207
00:15:10,740 --> 00:15:19,200
but Lenny Juliana Jennifer so here's

208
00:15:16,529 --> 00:15:21,540
what I don't get I mean Windows doesn't

209
00:15:19,200 --> 00:15:24,690
do this windows sends an ICMP echo reply

210
00:15:21,540 --> 00:15:27,360
and with a TTL and the important part is

211
00:15:24,690 --> 00:15:30,690
it sets it with a TTL and it expects a

212
00:15:27,360 --> 00:15:33,029
TTL expired the fact that UNIX is

213
00:15:30,690 --> 00:15:34,440
sending it with a TC with a UDP port and

214
00:15:33,029 --> 00:15:37,320
a different port what does it matter

215
00:15:34,440 --> 00:15:39,420
it's waiting to hear back what why isn't

216
00:15:37,320 --> 00:15:41,100
behaving the same way which is I can

217
00:15:39,420 --> 00:15:44,910
pick out any port I want it doesn't need

218
00:15:41,100 --> 00:15:47,640
to go anywhere it's the ICMP the TTL

219
00:15:44,910 --> 00:15:51,949
exceeded message that comes back took

220
00:15:47,640 --> 00:15:51,949
why does this break so the problem is

221
00:15:52,880 --> 00:16:00,470
let's see yeah

222
00:16:01,380 --> 00:16:06,720
so this is the question I had for hooman

223
00:16:03,329 --> 00:16:09,569
and yeah he wasn't sure either

224
00:16:06,720 --> 00:16:11,010
he said just he was aware of an

225
00:16:09,570 --> 00:16:14,100
implementation that this was breaking

226
00:16:11,010 --> 00:16:16,829
but to me it's it's not clear

227
00:16:14,100 --> 00:16:19,920
let them squat on these ports do these

228
00:16:16,829 --> 00:16:22,019
ports matter yeah so at least at least I

229
00:16:19,920 --> 00:16:23,729
can say some implementations like

230
00:16:22,019 --> 00:16:27,360
Windows they believe on the use of

231
00:16:23,730 --> 00:16:28,860
single port number but I know for

232
00:16:27,360 --> 00:16:31,320
instance on the next day for some reason

233
00:16:28,860 --> 00:16:36,120
they use a different port for two

234
00:16:31,320 --> 00:16:38,550
different distances Warren Kumari as far

235
00:16:36,120 --> 00:16:39,899
as I understand UNIX uses multiple port

236
00:16:38,550 --> 00:16:42,240
numbers because otherwise you have to

237
00:16:39,899 --> 00:16:43,769
send one traceroute packet wait for it

238
00:16:42,240 --> 00:16:45,540
to come back send the next one wait for

239
00:16:43,769 --> 00:16:47,970
it to come back if you spread it across

240
00:16:45,540 --> 00:16:49,709
multiple port numbers you can fire a

241
00:16:47,970 --> 00:16:52,260
bunch of them and get your response as

242
00:16:49,709 --> 00:16:54,750
fast as what I'd understood whatever the

243
00:16:52,260 --> 00:16:56,459
case traceroute has been around for so

244
00:16:54,750 --> 00:17:00,449
long and is so widely implemented

245
00:16:56,459 --> 00:17:02,250
according to the unix way that I don't

246
00:17:00,449 --> 00:17:03,750
really think we can say you know all

247
00:17:02,250 --> 00:17:04,410
implementation should go and fix

248
00:17:03,750 --> 00:17:05,800
themselves

249
00:17:04,410 --> 00:17:08,080
there's

250
00:17:05,800 --> 00:17:10,510
that's been deployed for so long I think

251
00:17:08,079 --> 00:17:12,399
we kind of fact I think that a Juniper

252
00:17:10,510 --> 00:17:15,569
for example does their trace routes

253
00:17:12,400 --> 00:17:17,680
using multiple numbers as an example

254
00:17:15,569 --> 00:17:19,030
Simon I think the right thing to do here

255
00:17:17,680 --> 00:17:21,430
is be like us we're gonna have to move

256
00:17:19,030 --> 00:17:25,240
and then a sky in a nicely turns block

257
00:17:21,430 --> 00:17:30,280
who I spoke to I am in the break here

258
00:17:25,240 --> 00:17:32,770
and comment before that or you know I

259
00:17:30,280 --> 00:17:34,360
like I have to somebody who knows better

260
00:17:32,770 --> 00:17:35,980
but I thought there was also something

261
00:17:34,360 --> 00:17:38,080
related when you go through a net and a

262
00:17:35,980 --> 00:17:38,790
fire water so but so I think you could

263
00:17:38,080 --> 00:17:42,100
Mary's

264
00:17:38,790 --> 00:17:46,210
yeah no I'm sure there are some reasons

265
00:17:42,100 --> 00:17:48,939
for this but yeah I spoke to Jana in a

266
00:17:46,210 --> 00:17:50,440
break and they were saying yeah it

267
00:17:48,940 --> 00:17:53,140
should be possible for us to get a

268
00:17:50,440 --> 00:17:56,230
different port number they may need our

269
00:17:53,140 --> 00:17:58,810
ad to sort of approve of it or something

270
00:17:56,230 --> 00:18:00,310
I'm not sure but but I guess though if

271
00:17:58,810 --> 00:18:03,070
you were to change the port number it

272
00:18:00,310 --> 00:18:06,370
means that we need to update the

273
00:18:03,070 --> 00:18:08,500
existing RFC maybe even obsolete it to

274
00:18:06,370 --> 00:18:10,600
make sure that people don't implement

275
00:18:08,500 --> 00:18:14,320
the old one with the wrong port number

276
00:18:10,600 --> 00:18:17,590
no no but we need a new RFC ities with a

277
00:18:14,320 --> 00:18:19,780
new port number and and then ask Ayane

278
00:18:17,590 --> 00:18:20,290
to update the registry rot have been

279
00:18:19,780 --> 00:18:23,980
filed

280
00:18:20,290 --> 00:18:25,690
I don't know first thing is filing

281
00:18:23,980 --> 00:18:33,580
around but it's not really in there out

282
00:18:25,690 --> 00:18:36,730
that's not a router yet no em trace

283
00:18:33,580 --> 00:18:39,040
works its trace route that breaks now

284
00:18:36,730 --> 00:18:41,290
I'm serious we have process to create

285
00:18:39,040 --> 00:18:43,090
visibility I would be more worried about

286
00:18:41,290 --> 00:18:44,710
making sure they are capability than

287
00:18:43,090 --> 00:18:49,750
whether or not is under percent matches

288
00:18:44,710 --> 00:18:52,180
the intended process yeah something

289
00:18:49,750 --> 00:18:54,280
similar kind of happened in sorry Warren

290
00:18:52,180 --> 00:18:56,590
Kumari still something similar happened

291
00:18:54,280 --> 00:18:57,700
with home net where there was some

292
00:18:56,590 --> 00:19:00,010
advice which turned out to not

293
00:18:57,700 --> 00:19:01,840
necessarily be great I'm not saying that

294
00:19:00,010 --> 00:19:03,550
that's what happened here but I think

295
00:19:01,840 --> 00:19:04,000
the right thing to do is to file an

296
00:19:03,550 --> 00:19:05,860
errata

297
00:19:04,000 --> 00:19:08,290
errata can't be used to actually update

298
00:19:05,860 --> 00:19:11,110
an RFC and so it would have to be

299
00:19:08,290 --> 00:19:12,850
rejected or 'rock document update but we

300
00:19:11,110 --> 00:19:15,250
can pointed it and there's some warning

301
00:19:12,850 --> 00:19:17,379
I'm and then at the same time there

302
00:19:15,250 --> 00:19:19,220
should be a new RFC like a new draft

303
00:19:17,380 --> 00:19:21,409
could move to RFC ready

304
00:19:19,220 --> 00:19:24,200
he being like identical to the last one

305
00:19:21,409 --> 00:19:26,390
with the string change so we would need

306
00:19:24,200 --> 00:19:28,429
a new RFC we couldn't just use errata

307
00:19:26,390 --> 00:19:31,940
and just say I've changed the court

308
00:19:28,429 --> 00:19:33,049
through that yeah and it should just go

309
00:19:31,940 --> 00:19:35,419
through the process really easy

310
00:19:33,049 --> 00:19:38,960
especially if the only thing that's

311
00:19:35,419 --> 00:19:41,809
changed is one thing there and it should

312
00:19:38,960 --> 00:19:43,640
be already fast you know SAS GRC editor

313
00:19:41,809 --> 00:19:47,149
to do expedited processing because it

314
00:19:43,640 --> 00:19:51,140
should be a single number and maybe like

315
00:19:47,150 --> 00:19:58,580
a paragraph explaining why why it's

316
00:19:51,140 --> 00:20:01,159
unfortunate check on do know how to

317
00:19:58,580 --> 00:20:13,039
avoid colliding with the next part which

318
00:20:01,159 --> 00:20:17,179
is not comment I guess we can google it

319
00:20:13,039 --> 00:20:19,250
I do a man on traceroute and see but

320
00:20:17,179 --> 00:20:22,730
yeah the other thing the only thing I

321
00:20:19,250 --> 00:20:24,740
Anna's said this weekend report that you

322
00:20:22,730 --> 00:20:28,880
know that they are kind of like using

323
00:20:24,740 --> 00:20:31,640
some unallocated ports that traceroute

324
00:20:28,880 --> 00:20:34,190
is and they can they can kind of block

325
00:20:31,640 --> 00:20:36,409
it internally so they don't accidentally

326
00:20:34,190 --> 00:20:38,990
give those port numbers to others but

327
00:20:36,409 --> 00:20:41,510
ideally they would prefer if we can find

328
00:20:38,990 --> 00:20:44,210
someone from the traceroute community

329
00:20:41,510 --> 00:20:46,789
whatever that can you know sort of

330
00:20:44,210 --> 00:20:49,940
officially requests and their full range

331
00:20:46,789 --> 00:20:52,010
for trace registrations they can send

332
00:20:49,940 --> 00:20:54,710
their know where to send I understand

333
00:20:52,010 --> 00:20:57,950
that dianna police yeah booted thugs

334
00:20:54,710 --> 00:21:00,200
right yeah but yeah we can just find out

335
00:20:57,950 --> 00:21:01,850
all like the maintainer or who lost made

336
00:21:00,200 --> 00:21:11,450
a change to Linux trace routes or

337
00:21:01,850 --> 00:21:20,059
whatever and ports are within

338
00:21:11,450 --> 00:21:22,659
jurisdiction I assume now we've got

339
00:21:20,059 --> 00:21:22,658
somebody on the beat

340
00:21:22,950 --> 00:21:27,399
[Music]

341
00:21:24,999 --> 00:21:29,619
all right so I guess that the plan is we

342
00:21:27,399 --> 00:21:33,609
will file errata and then we will reach

343
00:21:29,619 --> 00:21:37,208
out to Ayane to tell them what's going

344
00:21:33,609 --> 00:21:43,149
on and then we will resubmit a new yeah

345
00:21:37,209 --> 00:21:45,369
I guess do you need you need someone to

346
00:21:43,149 --> 00:21:47,738
volunteer to write a new draft I guess I

347
00:21:45,369 --> 00:21:51,069
guess the old did the Office of the old

348
00:21:47,739 --> 00:21:55,869
draft whatever well we've got Toshi here

349
00:21:51,069 --> 00:21:59,889
and you saw that document from for a

350
00:21:55,869 --> 00:22:03,249
long time so I assume you might want to

351
00:21:59,889 --> 00:22:05,139
be involved in this one as well so this

352
00:22:03,249 --> 00:22:07,449
this should be the easiest revision

353
00:22:05,139 --> 00:22:11,349
you've ever made to that draft after I

354
00:22:07,449 --> 00:22:18,759
believe it was 18 versions or were we in

355
00:22:11,349 --> 00:22:21,819
the low 20s it was it was yeah 26

356
00:22:18,759 --> 00:22:22,419
all right well and here I said 26 time

357
00:22:21,819 --> 00:22:28,229
is a charm

358
00:22:22,419 --> 00:22:28,229
apparently I was wrong okay

359
00:22:34,020 --> 00:22:43,110
okay next up is Charlie Charlie are you

360
00:22:39,340 --> 00:22:50,590
online I'm here can you hear me

361
00:22:43,110 --> 00:22:55,780
barely well let's see how's that any

362
00:22:50,590 --> 00:23:00,909
better each time you speak it's a little

363
00:22:55,780 --> 00:23:07,660
bit better all right well I'm not sure

364
00:23:00,910 --> 00:23:10,750
what more I can do okay again all right

365
00:23:07,660 --> 00:23:13,300
we'll I'm Charles Perkins and I'm here

366
00:23:10,750 --> 00:23:17,020
to describe the changes since the last

367
00:23:13,300 --> 00:23:23,200
IETF for the multicast considerations

368
00:23:17,020 --> 00:23:26,700
over uh Tripoli 802 wireless medium so I

369
00:23:23,200 --> 00:23:26,700
guess next slide please

370
00:23:29,670 --> 00:23:38,050
or is that something I can do to change

371
00:23:32,380 --> 00:23:40,750
the slides now okay all right well so

372
00:23:38,050 --> 00:23:43,149
after it goes like after the last ITF

373
00:23:40,750 --> 00:23:45,490
and during the discussion in idea there

374
00:23:43,150 --> 00:23:48,330
are quite many comments some of them

375
00:23:45,490 --> 00:23:52,960
were generated at the hackathon and

376
00:23:48,330 --> 00:23:58,149
after that I submitted revision number

377
00:23:52,960 --> 00:24:03,180
five on April 15th and requested working

378
00:23:58,150 --> 00:24:07,290
group last call uh next slide please so

379
00:24:03,180 --> 00:24:11,110
here's a list of some of the changes

380
00:24:07,290 --> 00:24:13,960
there was a new section essentially Jake

381
00:24:11,110 --> 00:24:16,780
Holland just gave you the text for a

382
00:24:13,960 --> 00:24:19,690
conversion of multicast a unicast and

383
00:24:16,780 --> 00:24:23,980
included a MT as an existing solution

384
00:24:19,690 --> 00:24:25,180
and described some future applications

385
00:24:23,980 --> 00:24:27,850
that would emphasize the need for

386
00:24:25,180 --> 00:24:31,350
attention to the technical matters that

387
00:24:27,850 --> 00:24:31,350
are described in this document

388
00:24:32,460 --> 00:24:38,320
there were several places all along in

389
00:24:35,530 --> 00:24:41,050
the text that were a generative sort of

390
00:24:38,320 --> 00:24:44,320
mean needed to be more generic instead

391
00:24:41,050 --> 00:24:47,770
of referring to specifically IETF

392
00:24:44,320 --> 00:24:50,379
conference solutions and so that those

393
00:24:47,770 --> 00:24:53,590
been sort of caught more and more over

394
00:24:50,380 --> 00:24:56,380
time and I hope it's old done but it

395
00:24:53,590 --> 00:25:03,030
could still be interpreted perhaps from

396
00:24:56,380 --> 00:25:06,580
a two specific way sent places but added

397
00:25:03,030 --> 00:25:09,030
UPnP universal plug and play is a

398
00:25:06,580 --> 00:25:12,370
representative multicast protocol

399
00:25:09,030 --> 00:25:15,879
incited the bridging code for people who

400
00:25:12,370 --> 00:25:18,820
wanted to convert multicast a unicast

401
00:25:15,880 --> 00:25:20,770
and then there's a lot of bibliographic

402
00:25:18,820 --> 00:25:23,379
citations and actually there's more

403
00:25:20,770 --> 00:25:24,370
updates are needed which I'll get to

404
00:25:23,380 --> 00:25:27,550
that a little later

405
00:25:24,370 --> 00:25:30,070
and then more editorial improvements and

406
00:25:27,550 --> 00:25:32,280
grammatical Corrections the next slide

407
00:25:30,070 --> 00:25:32,280
please

408
00:25:33,120 --> 00:25:39,100
so that was submitted on April 15th and

409
00:25:36,940 --> 00:25:41,230
then there was some more discussion on

410
00:25:39,100 --> 00:25:43,199
the mailing list it's been some really

411
00:25:41,230 --> 00:25:46,900
good discussion

412
00:25:43,200 --> 00:25:49,960
geoffrey zhang made a comment about i

413
00:25:46,900 --> 00:25:52,330
think it was a superuser webpage it had

414
00:25:49,960 --> 00:25:54,640
a lot of discussion about the problems

415
00:25:52,330 --> 00:25:56,970
in this draft and mentioned some more

416
00:25:54,640 --> 00:26:01,150
things that hadn't been considered

417
00:25:56,970 --> 00:26:03,490
specifically about how Wireless failures

418
00:26:01,150 --> 00:26:07,720
can really complicate problems with

419
00:26:03,490 --> 00:26:10,240
multicast group membership so the way of

420
00:26:07,720 --> 00:26:13,840
handling that comment was to update the

421
00:26:10,240 --> 00:26:16,450
security considerations and really ended

422
00:26:13,840 --> 00:26:19,780
up just sort of summarizing some of the

423
00:26:16,450 --> 00:26:23,170
text that was on the webpage the other

424
00:26:19,780 --> 00:26:25,270
big change that was done was really

425
00:26:23,170 --> 00:26:29,520
there was a lot of comments from Bill

426
00:26:25,270 --> 00:26:32,379
Atwood who made a extremely detailed and

427
00:26:29,520 --> 00:26:36,580
appreciated you review of the document

428
00:26:32,380 --> 00:26:40,500
and he also suggested included including

429
00:26:36,580 --> 00:26:43,889
Dryad as a relay discovery a possibility

430
00:26:40,500 --> 00:26:43,890
next slide please

431
00:26:44,580 --> 00:26:54,909
so in that all those things resulted in

432
00:26:48,750 --> 00:26:58,410
submitting a revision number six I think

433
00:26:54,910 --> 00:27:00,870
that was done in the early part of July

434
00:26:58,410 --> 00:27:03,789
so

435
00:27:00,870 --> 00:27:07,299
as I mentioned news hacked into security

436
00:27:03,789 --> 00:27:10,059
considerations and also including Dryad

437
00:27:07,299 --> 00:27:12,580
at the discovery mechanism and I

438
00:27:10,059 --> 00:27:15,250
actually did an English refresher course

439
00:27:12,580 --> 00:27:18,399
learning about when to use which versus

440
00:27:15,250 --> 00:27:22,120
that and a mouth versus number and a few

441
00:27:18,399 --> 00:27:25,809
other things and then more bibliographic

442
00:27:22,120 --> 00:27:28,199
updates and editorial improvements next

443
00:27:25,809 --> 00:27:28,200
slide please

444
00:27:29,250 --> 00:27:36,039
well since then there's been some more

445
00:27:32,679 --> 00:27:37,779
email from Bill Atwood pointing out a

446
00:27:36,039 --> 00:27:40,299
few other things that need to be taken

447
00:27:37,779 --> 00:27:43,299
care of him plus email from Jay Colin

448
00:27:40,299 --> 00:27:45,549
and interestingly enough Jake is arguing

449
00:27:43,299 --> 00:27:49,230
that Dryad should not be listed as a

450
00:27:45,549 --> 00:27:53,679
discovery mechanism because it's really

451
00:27:49,230 --> 00:27:56,100
useful from the remote side and also a

452
00:27:53,679 --> 00:28:00,340
few other minor Corrections on the draft

453
00:27:56,100 --> 00:28:05,350
so that's pretty much it but I have for

454
00:28:00,340 --> 00:28:07,299
now the next document I thought I would

455
00:28:05,350 --> 00:28:09,459
try to get it out this week but that

456
00:28:07,299 --> 00:28:12,750
didn't really happen and anyway is

457
00:28:09,460 --> 00:28:15,820
probably better to wait to see if

458
00:28:12,750 --> 00:28:18,669
there's any additional comments during

459
00:28:15,820 --> 00:28:23,019
this face-to-face meeting or let's say

460
00:28:18,669 --> 00:28:24,750
almost face-to-face so I next slide

461
00:28:23,019 --> 00:28:27,539
please

462
00:28:24,750 --> 00:28:31,899
so that's what I just said I will

463
00:28:27,539 --> 00:28:34,120
produce a new draft quite soon and if

464
00:28:31,899 --> 00:28:37,330
there's any additional reviews oh and by

465
00:28:34,120 --> 00:28:40,870
the way I guess special thanks to a-1

466
00:28:37,330 --> 00:28:42,639
Kumari for motivating people to submit

467
00:28:40,870 --> 00:28:45,459
some reviews for the draft that was very

468
00:28:42,639 --> 00:28:48,010
helpful so that's it for my presentation

469
00:28:45,460 --> 00:28:50,370
and I'll be happy to answer questions

470
00:28:48,010 --> 00:28:53,110
but I just want to mention that

471
00:28:50,370 --> 00:28:55,209
sometimes yeah I think you have to be

472
00:28:53,110 --> 00:28:57,399
close to the mic because sometimes the

473
00:28:55,210 --> 00:29:00,750
echoes in the room make it hard for me

474
00:28:57,399 --> 00:29:00,750
to hear what you're saying otherwise

475
00:29:05,080 --> 00:29:11,139
Thank You charlie so I think given the

476
00:29:08,200 --> 00:29:14,529
changes you've described

477
00:29:11,139 --> 00:29:17,199
I think after you get that last that

478
00:29:14,529 --> 00:29:20,049
next Rev out I think we should have a

479
00:29:17,200 --> 00:29:21,279
brief another working group last call

480
00:29:20,049 --> 00:29:25,239
because these are you know some

481
00:29:21,279 --> 00:29:28,029
substantive additions so we'll run

482
00:29:25,239 --> 00:29:31,049
another quick last call just so that

483
00:29:28,029 --> 00:29:34,600
folks have an opportunity to review what

484
00:29:31,049 --> 00:29:36,269
the changes have been made and make sure

485
00:29:34,600 --> 00:29:38,949
there's no objections to those changes

486
00:29:36,269 --> 00:29:42,039
okay well that's fine with me I also

487
00:29:38,950 --> 00:29:44,649
just mentioned that I try to be somewhat

488
00:29:42,039 --> 00:29:46,989
inclusive in the changes section in the

489
00:29:44,649 --> 00:29:49,119
bill in the appendix so you can take a

490
00:29:46,989 --> 00:29:53,980
look at that and get a hint about what's

491
00:29:49,119 --> 00:29:57,668
been changed or in kumari that's batino

492
00:29:53,980 --> 00:29:59,379
house if you do another well when you do

493
00:29:57,669 --> 00:30:01,389
another working group last call is it

494
00:29:59,379 --> 00:30:03,850
going to be one where you expect replies

495
00:30:01,389 --> 00:30:04,988
or will Simon's be taken as consent or

496
00:30:03,850 --> 00:30:07,029
how do you want to run it just

497
00:30:04,989 --> 00:30:09,909
gloucester was really hard to get any

498
00:30:07,029 --> 00:30:15,509
comments i would be fine with doing

499
00:30:09,909 --> 00:30:20,559
silence equals consent can can the ad

500
00:30:15,509 --> 00:30:23,919
thumbs up that one assuming the ad does

501
00:30:20,559 --> 00:30:26,168
not object to that isn't responsible for

502
00:30:23,919 --> 00:30:27,460
this document okay I mean if it's

503
00:30:26,169 --> 00:30:29,769
already gone through one working group

504
00:30:27,460 --> 00:30:31,600
Bosko like cherries have the flexibility

505
00:30:29,769 --> 00:30:35,049
to say you know this is the changes does

506
00:30:31,600 --> 00:30:37,658
anybody object yeah that's that's how

507
00:30:35,049 --> 00:30:39,369
we'll frame it yeah please speak up

508
00:30:37,659 --> 00:30:44,109
if you have any objections to these

509
00:30:39,369 --> 00:30:49,029
changes so so charlie when you do submit

510
00:30:44,109 --> 00:30:54,119
it send to the working group just kind

511
00:30:49,029 --> 00:30:56,440
of maybe a diff between that that shows

512
00:30:54,119 --> 00:30:59,470
specifically so the folks don't have to

513
00:30:56,440 --> 00:31:02,470
Day card but that they can specifically

514
00:30:59,470 --> 00:31:04,389
see the new text that was added since

515
00:31:02,470 --> 00:31:07,179
the original working group last call and

516
00:31:04,389 --> 00:31:08,529
that way it's easy for people to review

517
00:31:07,179 --> 00:31:12,279
and if they have an objection they can

518
00:31:08,529 --> 00:31:14,740
speak up okay when was the original

519
00:31:12,279 --> 00:31:18,940
working group let's call me like a month

520
00:31:14,740 --> 00:31:20,920
ago it was awhile ago

521
00:31:18,940 --> 00:31:23,710
I would say something like the beginning

522
00:31:20,920 --> 00:31:25,870
of May okay so then I'm gonna in order

523
00:31:23,710 --> 00:31:28,300
to satisfy your requests I'll include

524
00:31:25,870 --> 00:31:36,459
all the changes from drab 5 up to dress

525
00:31:28,300 --> 00:31:38,230
7 sounds good okay well that's it for me

526
00:31:36,460 --> 00:31:40,150
I'm sorry I can't be there in person and

527
00:31:38,230 --> 00:31:43,410
thank you very much of the Medeco crew

528
00:31:40,150 --> 00:31:43,410
it's really very good

529
00:31:47,430 --> 00:32:04,300
ok Kyle come on down hi I'm Kyle rose I

530
00:32:02,350 --> 00:32:07,209
work at Akamai Technologies and I'm this

531
00:32:04,300 --> 00:32:10,659
is a work that I'm doing with Jake that

532
00:32:07,210 --> 00:32:15,190
is intended for multicast so I'll set up

533
00:32:10,660 --> 00:32:18,730
the problem oh all right so I'll set up

534
00:32:15,190 --> 00:32:21,400
the problem here so the the issue is

535
00:32:18,730 --> 00:32:22,840
being able to authenticate all of the

536
00:32:21,400 --> 00:32:26,320
packets that you receive in a possibly

537
00:32:22,840 --> 00:32:29,470
lossy stream there we go

538
00:32:26,320 --> 00:32:31,149
so in say video delivery for instance

539
00:32:29,470 --> 00:32:34,570
which is kind of the target application

540
00:32:31,150 --> 00:32:36,370
for this they the the data that's

541
00:32:34,570 --> 00:32:38,500
received has some properties that are

542
00:32:36,370 --> 00:32:39,729
important first is of the payloads have

543
00:32:38,500 --> 00:32:41,560
a deadline if you don't receive a

544
00:32:39,730 --> 00:32:42,910
particular payload by a certain point

545
00:32:41,560 --> 00:32:44,530
then you might as well just throw it

546
00:32:42,910 --> 00:32:46,930
away you may as well not not have gotten

547
00:32:44,530 --> 00:32:49,420
it at all so in some sense retransmits

548
00:32:46,930 --> 00:32:52,390
are not are not interesting the other

549
00:32:49,420 --> 00:32:55,270
problem the other big problem is that is

550
00:32:52,390 --> 00:32:57,280
that with multicast video delivery there

551
00:32:55,270 --> 00:33:00,370
are many receivers so one of the things

552
00:32:57,280 --> 00:33:03,510
that TLS relies on for efficiency in its

553
00:33:00,370 --> 00:33:05,739
in its encryption is that it only uses

554
00:33:03,510 --> 00:33:07,990
asymmetric crypto to negotiate a

555
00:33:05,740 --> 00:33:09,610
symmetric key the symmetric key is then

556
00:33:07,990 --> 00:33:11,560
known only to the sender and the

557
00:33:09,610 --> 00:33:13,209
receiver or you know they're known it's

558
00:33:11,560 --> 00:33:15,190
known to each peer so if you didn't

559
00:33:13,210 --> 00:33:17,140
originate a message encrypted and signed

560
00:33:15,190 --> 00:33:19,720
with that symmetric key you know that

561
00:33:17,140 --> 00:33:21,970
the other party did and you know not

562
00:33:19,720 --> 00:33:26,770
notwithstanding key exfiltration attacks

563
00:33:21,970 --> 00:33:31,330
and whatnot the other problems with with

564
00:33:26,770 --> 00:33:32,740
video that are or with with unreliable

565
00:33:31,330 --> 00:33:35,939
delivery are

566
00:33:32,740 --> 00:33:38,049
that datagrams are lossy and that

567
00:33:35,940 --> 00:33:40,090
retransmits are not appropriate because

568
00:33:38,049 --> 00:33:41,889
in multicast you're not I mean how would

569
00:33:40,090 --> 00:33:43,480
you how would you retransmit a multicast

570
00:33:41,889 --> 00:33:45,729
packet right you'd have to you'd have to

571
00:33:43,480 --> 00:33:47,619
have it transmitted to you via a unicast

572
00:33:45,730 --> 00:33:49,029
you need some signaling mechanism and

573
00:33:47,619 --> 00:33:55,600
you don't even know who the sender is

574
00:33:49,029 --> 00:33:58,749
most of the time so so the the naive

575
00:33:55,600 --> 00:34:01,090
solution to this is to sign individual

576
00:33:58,749 --> 00:34:03,730
packets right so you have you send you

577
00:34:01,090 --> 00:34:05,199
know you divide your video into into

578
00:34:03,730 --> 00:34:07,539
individual packets you leave enough room

579
00:34:05,200 --> 00:34:09,099
for signature you sign it using an

580
00:34:07,539 --> 00:34:11,319
asymmetric signature algorithm and you

581
00:34:09,099 --> 00:34:13,659
append that to the packet so the pros

582
00:34:11,319 --> 00:34:15,339
for this approach being the naive

583
00:34:13,659 --> 00:34:18,369
approach is that you can verify every

584
00:34:15,339 --> 00:34:21,399
packet that you receive so big con here

585
00:34:18,369 --> 00:34:24,369
is that it's very CPU very CPU intensive

586
00:34:21,399 --> 00:34:25,929
four receivers it may also be CPU

587
00:34:24,369 --> 00:34:27,730
intensive for the sender but that's not

588
00:34:25,929 --> 00:34:30,129
the case that I'm targeting because

589
00:34:27,730 --> 00:34:31,599
typically the sender is also the sending

590
00:34:30,129 --> 00:34:34,239
infrastructure is also involved in video

591
00:34:31,599 --> 00:34:35,919
encoding which is much more CPU

592
00:34:34,239 --> 00:34:38,739
intensive but the client may have

593
00:34:35,918 --> 00:34:40,868
dedicated hardware for video decoding it

594
00:34:38,739 --> 00:34:42,908
probably doesn't have dedicated hardware

595
00:34:40,869 --> 00:34:48,730
for doing some for doing signature

596
00:34:42,909 --> 00:34:51,700
validation so tesla tries to solve this

597
00:34:48,730 --> 00:34:55,210
problem not by using asymmetric crypto

598
00:34:51,699 --> 00:34:58,450
but it introduces asymmetry by doing a

599
00:34:55,210 --> 00:35:00,960
by holding back the key the symmetric

600
00:34:58,450 --> 00:35:03,939
key that is used to sign the packets and

601
00:35:00,960 --> 00:35:05,799
releasing it after it expects all the

602
00:35:03,940 --> 00:35:08,170
receivers have received the packets that

603
00:35:05,799 --> 00:35:10,150
were signed with that key right so

604
00:35:08,170 --> 00:35:12,849
essentially as you can see in the

605
00:35:10,150 --> 00:35:16,180
diagram here there are three packets

606
00:35:12,849 --> 00:35:19,030
that were signed with key k1 there's a

607
00:35:16,180 --> 00:35:21,069
deadline at which all receivers must

608
00:35:19,030 --> 00:35:23,980
have received that key and then it

609
00:35:21,069 --> 00:35:26,259
releases key k1 and the receivers can

610
00:35:23,980 --> 00:35:27,579
use it to verify the packets then it has

611
00:35:26,260 --> 00:35:30,250
to use a different key for any

612
00:35:27,579 --> 00:35:32,349
subsequent packets this is a this is a

613
00:35:30,250 --> 00:35:34,420
good scheme in certain circumstances but

614
00:35:32,349 --> 00:35:36,970
it does have some it does have some cons

615
00:35:34,420 --> 00:35:39,700
the big one is that it requires weak

616
00:35:36,970 --> 00:35:42,629
clock synchronization and while this

617
00:35:39,700 --> 00:35:45,549
works well in in controlled environments

618
00:35:42,630 --> 00:35:46,240
in adversarial environments you run into

619
00:35:45,549 --> 00:35:48,940
you run into

620
00:35:46,240 --> 00:35:50,919
problems where the we're attackers can

621
00:35:48,940 --> 00:35:55,420
delay packets used for clock

622
00:35:50,920 --> 00:35:58,600
synchronization and and therefore cause

623
00:35:55,420 --> 00:35:59,590
receivers targeted receivers to process

624
00:35:58,600 --> 00:36:02,799
packets that they wouldn't otherwise

625
00:35:59,590 --> 00:36:05,110
have processed the other the other big

626
00:36:02,800 --> 00:36:07,320
problem that we have is that if you try

627
00:36:05,110 --> 00:36:11,230
to use this inter domain by using say

628
00:36:07,320 --> 00:36:13,150
NTP well even with even with n TS which

629
00:36:11,230 --> 00:36:16,390
hasn't even been standardized yet I

630
00:36:13,150 --> 00:36:23,590
don't know that I as an as an enterprise

631
00:36:16,390 --> 00:36:27,430
or I as a as a CDN employee would want

632
00:36:23,590 --> 00:36:29,890
to trust NTP as a security mechanism for

633
00:36:27,430 --> 00:36:31,660
the streams that I'm publishing so once

634
00:36:29,890 --> 00:36:34,560
the keys been released all bets are off

635
00:36:31,660 --> 00:36:38,680
and any receiver can then can then

636
00:36:34,560 --> 00:36:40,299
inject a packet signed with k12 any

637
00:36:38,680 --> 00:36:45,970
receipt to any other receiver that is

638
00:36:40,300 --> 00:36:48,760
still willing to accept them didn't get

639
00:36:45,970 --> 00:36:51,279
the the trick of this security thing I

640
00:36:48,760 --> 00:36:55,119
mean for an invalid receiver who's not

641
00:36:51,280 --> 00:36:56,740
meant to be able to decrypt this how how

642
00:36:55,119 --> 00:36:58,780
does the scheme protect against that if

643
00:36:56,740 --> 00:37:00,459
the key is transmitted so this isn't

644
00:36:58,780 --> 00:37:03,070
this isn't an encryption scheme this is

645
00:37:00,460 --> 00:37:05,950
an authentication scheme the the idea is

646
00:37:03,070 --> 00:37:07,210
that is that the the publisher I mean

647
00:37:05,950 --> 00:37:09,790
and this is not the algorithm that I'm

648
00:37:07,210 --> 00:37:12,250
that I'm talking about in the rest of my

649
00:37:09,790 --> 00:37:14,950
talk right but the idea here is that is

650
00:37:12,250 --> 00:37:17,050
that in order to keep a one of the

651
00:37:14,950 --> 00:37:20,169
receivers which in order to authenticate

652
00:37:17,050 --> 00:37:22,090
the signature has to know k1 from

653
00:37:20,170 --> 00:37:24,670
injecting packets into the stream it

654
00:37:22,090 --> 00:37:29,619
can't it cannot get k1 until after all

655
00:37:24,670 --> 00:37:30,700
the packets have been received yes sorry

656
00:37:29,619 --> 00:37:43,810
I should have made that I should have

657
00:37:30,700 --> 00:37:45,790
made that clear okay the problem could

658
00:37:43,810 --> 00:37:47,890
just say that this key is valid for

659
00:37:45,790 --> 00:37:50,380
whatever you received when in doubt the

660
00:37:47,890 --> 00:37:52,029
previous few hundred milliseconds with

661
00:37:50,380 --> 00:37:53,440
something I mean do you need to use like

662
00:37:52,030 --> 00:37:55,480
common

663
00:37:53,440 --> 00:37:57,430
well the problem is that an attacker

664
00:37:55,480 --> 00:38:00,220
that is trying to target you can delay

665
00:37:57,430 --> 00:38:02,259
that can delay the packets in a way that

666
00:38:00,220 --> 00:38:04,209
causes you to authenticate something

667
00:38:02,260 --> 00:38:06,910
that you wouldn't have authenticated if

668
00:38:04,210 --> 00:38:08,800
it were just if it were expected network

669
00:38:06,910 --> 00:38:11,770
delay I don't want to get too far into

670
00:38:08,800 --> 00:38:13,270
analyzing this though since this is sort

671
00:38:11,770 --> 00:38:15,009
of where I'm going with this is that

672
00:38:13,270 --> 00:38:17,079
there are situations in which you really

673
00:38:15,010 --> 00:38:20,680
do want a symmetric crypto to provide

674
00:38:17,079 --> 00:38:22,630
your asymmetry so one approach that I

675
00:38:20,680 --> 00:38:27,040
tried and we actually went to sect

676
00:38:22,630 --> 00:38:27,640
dispatch with this year ago was a sign

677
00:38:27,040 --> 00:38:29,349
manifest

678
00:38:27,640 --> 00:38:31,540
so essentially you send a bunch payloads

679
00:38:29,349 --> 00:38:34,119
and then every so often you have a

680
00:38:31,540 --> 00:38:36,279
manifest that is signed and this

681
00:38:34,119 --> 00:38:38,980
manifest contains hashes of all the

682
00:38:36,280 --> 00:38:41,530
payloads that you sent previously so the

683
00:38:38,980 --> 00:38:43,720
pros of this is that it's lots of lots

684
00:38:41,530 --> 00:38:47,440
of fast hashes only one signature per

685
00:38:43,720 --> 00:38:49,419
you know n packets but the cons are well

686
00:38:47,440 --> 00:38:50,530
what if you lose a manifest well you

687
00:38:49,420 --> 00:38:53,530
know you can send them multiple times

688
00:38:50,530 --> 00:38:55,480
but you're still going to lose some of

689
00:38:53,530 --> 00:38:57,819
them and when you lose a when you lose a

690
00:38:55,480 --> 00:38:59,740
manifest completely all of the packets

691
00:38:57,819 --> 00:39:01,839
that it's signed are now on authenticate

692
00:38:59,740 --> 00:39:05,140
able and so you may have some huge cap

693
00:39:01,839 --> 00:39:08,200
gap in your video the other problem is

694
00:39:05,140 --> 00:39:10,299
kind of a conceptual problem which is

695
00:39:08,200 --> 00:39:13,149
that the which is that the fate of the

696
00:39:10,300 --> 00:39:16,060
authentication information is separate

697
00:39:13,150 --> 00:39:17,680
from the fate of the data payloads so

698
00:39:16,060 --> 00:39:20,290
you can receive all the data payloads

699
00:39:17,680 --> 00:39:22,930
and not receive the authentication

700
00:39:20,290 --> 00:39:24,339
payload and that would be a perfectly

701
00:39:22,930 --> 00:39:27,549
normal situation to expect on the

702
00:39:24,339 --> 00:39:28,990
Internet and in that case all of the

703
00:39:27,550 --> 00:39:32,619
data you receive is now useless because

704
00:39:28,990 --> 00:39:34,629
you can't verify it so a different

705
00:39:32,619 --> 00:39:37,990
approach is to use change integrity

706
00:39:34,630 --> 00:39:40,420
right so here you have a series of a

707
00:39:37,990 --> 00:39:42,879
series of packets where each packet

708
00:39:40,420 --> 00:39:44,920
contains the hash of the previous packet

709
00:39:42,880 --> 00:39:47,800
and then occasionally you have a

710
00:39:44,920 --> 00:39:50,290
signature that allows you that acts as

711
00:39:47,800 --> 00:39:52,960
the as the trust anchor for that

712
00:39:50,290 --> 00:39:53,680
sequence of packets so the pros of this

713
00:39:52,960 --> 00:39:55,119
are again

714
00:39:53,680 --> 00:39:57,009
sparse signatures you only have a

715
00:39:55,119 --> 00:39:59,020
signature every so often and there's

716
00:39:57,010 --> 00:40:01,300
tolerance for signature loss because if

717
00:39:59,020 --> 00:40:03,190
you lose this signature you just have to

718
00:40:01,300 --> 00:40:04,690
wait for the next one as long as you

719
00:40:03,190 --> 00:40:07,330
receive all the packets in the meantime

720
00:40:04,690 --> 00:40:08,730
that form a chain back to

721
00:40:07,330 --> 00:40:11,860
whichever one you haven't been able to

722
00:40:08,730 --> 00:40:13,690
haven't been able to authenticate the

723
00:40:11,860 --> 00:40:17,050
problem with that is that one loss

724
00:40:13,690 --> 00:40:19,000
breaks the chain so so it's it's not

725
00:40:17,050 --> 00:40:21,460
tolerant to loss in a way that is

726
00:40:19,000 --> 00:40:22,960
interesting but it is better in some

727
00:40:21,460 --> 00:40:27,700
sense because the authentication

728
00:40:22,960 --> 00:40:29,650
information is does share fate in in a

729
00:40:27,700 --> 00:40:33,009
limited way with the data that's being

730
00:40:29,650 --> 00:40:35,370
transmitted so a slight refinement to

731
00:40:33,010 --> 00:40:38,530
this is to have redundant integrity

732
00:40:35,370 --> 00:40:40,630
right so here you have two hashes so

733
00:40:38,530 --> 00:40:43,630
essentially every packet contains the

734
00:40:40,630 --> 00:40:46,240
hashes of the two prior packets so this

735
00:40:43,630 --> 00:40:49,600
gives you essentially two ways of

736
00:40:46,240 --> 00:40:50,979
getting to of getting to any packet so

737
00:40:49,600 --> 00:40:52,960
you have two chances to get a packet ash

738
00:40:50,980 --> 00:40:56,080
if you'd have to lose two in a row in

739
00:40:52,960 --> 00:40:57,310
order to break the chain but that's

740
00:40:56,080 --> 00:40:58,870
still not good enough because you're

741
00:40:57,310 --> 00:41:00,940
really just instead of having the loss

742
00:40:58,870 --> 00:41:02,950
rate of P you now have a loss rate of P

743
00:41:00,940 --> 00:41:05,440
squared which is still fairly high

744
00:41:02,950 --> 00:41:07,109
presumably in you know when you're when

745
00:41:05,440 --> 00:41:09,760
you really want to be lost tolerant and

746
00:41:07,110 --> 00:41:11,440
this can be a lot more often if losses

747
00:41:09,760 --> 00:41:13,600
bursty which it often is where you will

748
00:41:11,440 --> 00:41:16,000
lose multiple packets in a row so really

749
00:41:13,600 --> 00:41:19,390
what you want is redundant integrity

750
00:41:16,000 --> 00:41:22,960
that is patterned in such a way that it

751
00:41:19,390 --> 00:41:26,319
is resistant to expected patterns of

752
00:41:22,960 --> 00:41:29,530
loss and this is what this is what we

753
00:41:26,320 --> 00:41:30,040
implemented so during SEC dispatch last

754
00:41:29,530 --> 00:41:32,220
year

755
00:41:30,040 --> 00:41:34,540
Eckerd just like out of the blue

756
00:41:32,220 --> 00:41:37,899
remembered some paper from like you know

757
00:41:34,540 --> 00:41:39,490
17 years prior that described a solution

758
00:41:37,900 --> 00:41:41,650
to the exact problem we were we were

759
00:41:39,490 --> 00:41:44,560
having and this is the golian mode of

760
00:41:41,650 --> 00:41:48,130
dugu paper this provides a dag of hashes

761
00:41:44,560 --> 00:41:52,029
with periodic signatures the the so in

762
00:41:48,130 --> 00:41:55,390
in this diagram the the arrows are

763
00:41:52,030 --> 00:42:00,130
directed in such a way that that a hash

764
00:41:55,390 --> 00:42:05,339
of a packet is contained within the the

765
00:42:00,130 --> 00:42:07,660
packet at the end of the directed arc

766
00:42:05,340 --> 00:42:11,920
right so a sense so in this case for

767
00:42:07,660 --> 00:42:16,720
instance the hash of b0 would be

768
00:42:11,920 --> 00:42:17,980
contained within the packet a for right

769
00:42:16,720 --> 00:42:20,080
I'm not going to go through this believe

770
00:42:17,980 --> 00:42:20,950
it or not it's a dag this is actually a

771
00:42:20,080 --> 00:42:23,049
simplified

772
00:42:20,950 --> 00:42:25,810
version of what what the algorithm is

773
00:42:23,050 --> 00:42:27,460
actually doing but it's it's a little

774
00:42:25,810 --> 00:42:29,410
bit complicated to read the paper to

775
00:42:27,460 --> 00:42:31,869
understand how to do how to do the

776
00:42:29,410 --> 00:42:33,520
construction but it's actually fairly

777
00:42:31,869 --> 00:42:35,099
easy to implement the construction

778
00:42:33,520 --> 00:42:38,710
because they almost provide a an

779
00:42:35,099 --> 00:42:40,450
algorithm in the paper itself so the

780
00:42:38,710 --> 00:42:42,820
pros here that you you always get two

781
00:42:40,450 --> 00:42:44,348
chances to get each packet hash but

782
00:42:42,820 --> 00:42:47,710
they're better distributed in such a way

783
00:42:44,349 --> 00:42:51,070
that even if you lose both packets that

784
00:42:47,710 --> 00:42:53,109
are that contain a hash of one of the

785
00:42:51,070 --> 00:42:55,510
packets in the stream you are very

786
00:42:53,109 --> 00:42:56,589
unlikely to lose many other packets as

787
00:42:55,510 --> 00:42:59,320
well because there's additional

788
00:42:56,589 --> 00:43:01,900
redundancy there are many ways to get

789
00:42:59,320 --> 00:43:04,690
from a signature to any particular

790
00:43:01,900 --> 00:43:08,230
packet and I've proved this with with

791
00:43:04,690 --> 00:43:10,810
some running code the cons are it's

792
00:43:08,230 --> 00:43:12,460
complicated as I said and there's also a

793
00:43:10,810 --> 00:43:14,980
variable number of hashes per packet

794
00:43:12,460 --> 00:43:16,599
which means that you're the data that

795
00:43:14,980 --> 00:43:20,170
you're transmitting you must be able to

796
00:43:16,599 --> 00:43:22,420
segment it into into variable length

797
00:43:20,170 --> 00:43:24,970
pieces which might be a problem for some

798
00:43:22,420 --> 00:43:27,970
payloads but not for the use case that

799
00:43:24,970 --> 00:43:29,379
Jake and I are working on so the key

800
00:43:27,970 --> 00:43:31,240
properties of this are that it has

801
00:43:29,380 --> 00:43:32,530
optimal resistance to bursty packet loss

802
00:43:31,240 --> 00:43:35,470
there's a nice proof of this in the

803
00:43:32,530 --> 00:43:37,359
paper and as I said it has tolerance

804
00:43:35,470 --> 00:43:39,578
your signature loss just like the the

805
00:43:37,359 --> 00:43:40,869
other chained algorithms because you can

806
00:43:39,579 --> 00:43:43,000
just wait for the next signature to come

807
00:43:40,869 --> 00:43:45,160
through one of the other nice features

808
00:43:43,000 --> 00:43:47,230
there that it follows on from that is

809
00:43:45,160 --> 00:43:48,640
that if your receiver is smart it

810
00:43:47,230 --> 00:43:51,339
doesn't have to authenticate every

811
00:43:48,640 --> 00:43:53,290
signature you can send more signatures

812
00:43:51,339 --> 00:43:55,630
than you expect the receiver to actually

813
00:43:53,290 --> 00:43:57,250
authenticate and it can just skip some

814
00:43:55,630 --> 00:43:58,510
of them as long as it as long as it

815
00:43:57,250 --> 00:44:02,470
knows it's going to get one eventually

816
00:43:58,510 --> 00:44:05,890
within its deadline so the next steps

817
00:44:02,470 --> 00:44:08,560
are our running code I have code that is

818
00:44:05,890 --> 00:44:10,299
running now it's not public yet I hope

819
00:44:08,560 --> 00:44:12,970
to make it public in the next like week

820
00:44:10,300 --> 00:44:17,770
or two just have to go through the legal

821
00:44:12,970 --> 00:44:19,180
department Akamai and then there's a

822
00:44:17,770 --> 00:44:21,849
bunch of design choices that need to be

823
00:44:19,180 --> 00:44:24,490
made I put one issue in the in the

824
00:44:21,849 --> 00:44:27,460
github repo that would be interesting to

825
00:44:24,490 --> 00:44:30,459
get some feedback on I'm about opacity

826
00:44:27,460 --> 00:44:32,890
versus overhead so the way that I

827
00:44:30,460 --> 00:44:34,390
currently have it implemented it is not

828
00:44:32,890 --> 00:44:36,430
possible with

829
00:44:34,390 --> 00:44:39,430
access to out-of-band metadata that

830
00:44:36,430 --> 00:44:41,500
tells you how long specific fields are I

831
00:44:39,430 --> 00:44:44,259
don't know whether people feel strongly

832
00:44:41,500 --> 00:44:46,510
about making it possible even without

833
00:44:44,260 --> 00:44:49,210
that metadata and then just in general

834
00:44:46,510 --> 00:44:52,000
we need to flush out the draft but I'm

835
00:44:49,210 --> 00:44:53,290
curious if other people have if people

836
00:44:52,000 --> 00:45:00,180
have questions or if they're interested

837
00:44:53,290 --> 00:45:05,440
in doing this work something like

838
00:45:00,180 --> 00:45:07,779
infeasible something like 1g make GCM

839
00:45:05,440 --> 00:45:10,150
color counter mode for you know the

840
00:45:07,780 --> 00:45:14,410
built-in authentication that comes along

841
00:45:10,150 --> 00:45:18,940
with it I'm not understanding the that's

842
00:45:14,410 --> 00:45:20,440
understanding the relevance the

843
00:45:18,940 --> 00:45:22,180
authentication comes for free with the

844
00:45:20,440 --> 00:45:26,020
crypto we can look at the overall

845
00:45:22,180 --> 00:45:28,660
complexity of the system GCM seems to be

846
00:45:26,020 --> 00:45:31,540
you know something that that I said is

847
00:45:28,660 --> 00:45:34,899
working fairly extremely fast in you

848
00:45:31,540 --> 00:45:37,990
know crypto hardware so basically that

849
00:45:34,900 --> 00:45:39,970
if I haven't tried to analyze what it

850
00:45:37,990 --> 00:45:42,370
means if you have velocity channel but

851
00:45:39,970 --> 00:45:44,169
otherwise the question really is why

852
00:45:42,370 --> 00:45:47,100
don't we just use crypto with GCM

853
00:45:44,170 --> 00:45:49,330
because that's help authentication yeah

854
00:45:47,100 --> 00:45:51,819
sorry I'm not I'm not sure how that's

855
00:45:49,330 --> 00:45:54,220
how that's relevant to to loss right to

856
00:45:51,820 --> 00:45:56,380
the issue the the issue the issue with

857
00:45:54,220 --> 00:45:59,439
the issue with authenticating a lossy

858
00:45:56,380 --> 00:46:01,450
stream is that if you if you don't

859
00:45:59,440 --> 00:46:04,750
include if you don't if you can't

860
00:46:01,450 --> 00:46:06,730
authenticate individual a segments of

861
00:46:04,750 --> 00:46:08,620
data that you receive and you need to

862
00:46:06,730 --> 00:46:11,500
have the whole like all of the data in

863
00:46:08,620 --> 00:46:19,180
order to authenticate it the right

864
00:46:11,500 --> 00:46:21,930
answer faster yeah okay

865
00:46:19,180 --> 00:46:21,930
that too

866
00:46:26,619 --> 00:46:32,300
okay any other questions anyone

867
00:46:30,410 --> 00:46:39,230
interested in using this or helping out

868
00:46:32,300 --> 00:46:41,750
with this thanks Jake Jake's volunteered

869
00:46:39,230 --> 00:46:43,970
to help sighs one for the one thing I'm

870
00:46:41,750 --> 00:46:46,670
wondering about maybe stupid question

871
00:46:43,970 --> 00:46:48,740
again but you know you can do like a

872
00:46:46,670 --> 00:46:51,530
manifest as you said those every flight

873
00:46:48,740 --> 00:46:52,790
packets whatever with signatures so it's

874
00:46:51,530 --> 00:46:55,790
kind of wondering if you take that

875
00:46:52,790 --> 00:46:57,740
manifest of hi packets then they use

876
00:46:55,790 --> 00:46:59,930
some redundant coding of that and you

877
00:46:57,740 --> 00:47:01,580
include you know parts of that in each

878
00:46:59,930 --> 00:47:04,879
of the next five packets or something

879
00:47:01,580 --> 00:47:07,400
like that so that's actually that's very

880
00:47:04,880 --> 00:47:09,770
similar to what Jake is proposing so we

881
00:47:07,400 --> 00:47:12,080
were not actually the way that we're the

882
00:47:09,770 --> 00:47:16,130
way that we are intending to use this is

883
00:47:12,080 --> 00:47:18,890
not to actually put the video into this

884
00:47:16,130 --> 00:47:21,740
payload but actually to use this stream

885
00:47:18,890 --> 00:47:24,859
to distribute a manifest a rolling

886
00:47:21,740 --> 00:47:37,399
window manifest of hashes of video

887
00:47:24,859 --> 00:47:40,000
packets this by the way reintroduces the

888
00:47:37,400 --> 00:47:43,310
the problem commented about fate sharing

889
00:47:40,000 --> 00:47:46,849
so I'm arguing we should live with that

890
00:47:43,310 --> 00:47:48,290
but well it being a rolling window means

891
00:47:46,849 --> 00:47:49,700
that you'd have to lose an awful lot in

892
00:47:48,290 --> 00:47:52,609
a row in which case you are probably

893
00:47:49,700 --> 00:47:58,790
going to run into you know a skip in

894
00:47:52,609 --> 00:48:01,369
your video anyway that said I my intent

895
00:47:58,790 --> 00:48:03,050
is to run the manifests at as part of

896
00:48:01,369 --> 00:48:05,810
the same multicast group on a different

897
00:48:03,050 --> 00:48:08,390
port so they they have some amount of

898
00:48:05,810 --> 00:48:13,490
fate sharing up in the routing layer but

899
00:48:08,390 --> 00:48:15,650
that's so I didn't really ask the stupid

900
00:48:13,490 --> 00:48:19,160
questions intentionally but if we take

901
00:48:15,650 --> 00:48:21,470
them as move that so you should you

902
00:48:19,160 --> 00:48:26,750
should take my response as I'm confused

903
00:48:21,470 --> 00:48:28,399
right let me take these guys I'm the one

904
00:48:26,750 --> 00:48:34,040
with it he the stupid guy the other one

905
00:48:28,400 --> 00:48:36,080
without the t's so the as a proof that

906
00:48:34,040 --> 00:48:38,140
this obviously is the best working group

907
00:48:36,080 --> 00:48:39,790
YouTube the specialist for new crypto or

908
00:48:38,140 --> 00:48:41,890
authentication mechanisms

909
00:48:39,790 --> 00:48:44,350
right so I think the best role that this

910
00:48:41,890 --> 00:48:47,440
working group would have is basically

911
00:48:44,350 --> 00:48:49,810
with anything it produces supports the

912
00:48:47,440 --> 00:48:51,880
notion of you know the need the

913
00:48:49,810 --> 00:48:53,860
requirement to do something like this

914
00:48:51,880 --> 00:48:56,560
because I would say the fundamental

915
00:48:53,860 --> 00:48:58,780
reason why you know a fast mechanism for

916
00:48:56,560 --> 00:49:00,310
a symmetric transmission like that

917
00:48:58,780 --> 00:49:03,430
exists a lot more than multi casting

918
00:49:00,310 --> 00:49:05,770
than unicast E right because in in in

919
00:49:03,430 --> 00:49:07,779
the in the unicasting way kind of all

920
00:49:05,770 --> 00:49:10,330
these symmetric things have a lot of

921
00:49:07,780 --> 00:49:12,910
good solutions whereas the asymmetric

922
00:49:10,330 --> 00:49:15,100
stuff is you know effectively reduced

923
00:49:12,910 --> 00:49:17,259
and then basically here your whole

924
00:49:15,100 --> 00:49:18,940
argument would be in multicast we can't

925
00:49:17,260 --> 00:49:21,670
do it in the same way we need the

926
00:49:18,940 --> 00:49:23,080
asymmetric stuff so if basically this

927
00:49:21,670 --> 00:49:25,330
working group is required to produce

928
00:49:23,080 --> 00:49:26,799
something that says you already must do

929
00:49:25,330 --> 00:49:28,140
this and then some other working group

930
00:49:26,800 --> 00:49:31,210
that really knows what crypto means

931
00:49:28,140 --> 00:49:33,549
would basically standardize whatever is

932
00:49:31,210 --> 00:49:34,510
needed in this case right but I mean

933
00:49:33,550 --> 00:49:36,640
this is not a product called work

934
00:49:34,510 --> 00:49:37,990
working group right so and him wouldn't

935
00:49:36,640 --> 00:49:40,740
be what protocol working group either

936
00:49:37,990 --> 00:49:42,819
right this would have to go whoever does

937
00:49:40,740 --> 00:49:45,279
authentication encryption or

938
00:49:42,820 --> 00:49:46,720
authentication encapsulation right I

939
00:49:45,280 --> 00:49:48,910
don't even know what it this is this

940
00:49:46,720 --> 00:49:50,319
time but I think we could only create

941
00:49:48,910 --> 00:49:51,370
the requirement saying this is a cool

942
00:49:50,320 --> 00:49:52,930
thing and we really want to have

943
00:49:51,370 --> 00:49:56,730
something like this yeah I think you're

944
00:49:52,930 --> 00:49:56,730
probably right I kind of I kind of

945
00:49:57,030 --> 00:50:00,550
skipped part of the skill that I had

946
00:49:59,200 --> 00:50:03,250
prepared and I probably should have

947
00:50:00,550 --> 00:50:05,230
included that which was which was does

948
00:50:03,250 --> 00:50:07,240
it make sense for embo need to take on

949
00:50:05,230 --> 00:50:10,510
this work the reason I brought her here

950
00:50:07,240 --> 00:50:12,220
was that this is the group of subject

951
00:50:10,510 --> 00:50:14,290
matter experts about the application

952
00:50:12,220 --> 00:50:16,509
that we're planning to use it for but do

953
00:50:14,290 --> 00:50:18,850
we need to reopen m/sec should I go back

954
00:50:16,510 --> 00:50:23,740
to sect dispatch what is you know what

955
00:50:18,850 --> 00:50:26,230
are the next steps for this J holin what

956
00:50:23,740 --> 00:50:28,029
we took this to SEC dispatch last time

957
00:50:26,230 --> 00:50:30,730
and this is where we got the feedback

958
00:50:28,030 --> 00:50:33,430
we're happy to do it again and to open a

959
00:50:30,730 --> 00:50:37,030
working group for it their feedback was

960
00:50:33,430 --> 00:50:38,440
that we need to get support so that's

961
00:50:37,030 --> 00:50:41,320
part of what we're doing here is this

962
00:50:38,440 --> 00:50:44,080
being the the application experts that

963
00:50:41,320 --> 00:50:45,430
can talk about the need for it I don't

964
00:50:44,080 --> 00:50:47,380
know if it has to be like an

965
00:50:45,430 --> 00:50:50,169
informational draft declaring a need for

966
00:50:47,380 --> 00:50:51,420
it or if you can just show up to m/sec

967
00:50:50,170 --> 00:50:53,250
and raise your hand

968
00:50:51,420 --> 00:50:55,769
two sectors bachelors your hand at the

969
00:50:53,250 --> 00:51:00,660
right time but one of those things might

970
00:50:55,769 --> 00:51:02,879
be useful yeah I don't know the security

971
00:51:00,660 --> 00:51:04,799
area well enough to say how they want to

972
00:51:02,880 --> 00:51:07,440
run their stuff right in terms of to me

973
00:51:04,799 --> 00:51:09,890
this looks like whatever ESP or whatever

974
00:51:07,440 --> 00:51:12,630
other stuff is defining you you know

975
00:51:09,890 --> 00:51:14,400
form of crypto profile for that that

976
00:51:12,630 --> 00:51:15,869
would effectively do this stuff I'm not

977
00:51:14,400 --> 00:51:18,470
sure about the additional complexity

978
00:51:15,869 --> 00:51:21,930
with the metadata or something but I

979
00:51:18,470 --> 00:51:24,240
think it's very viable for them to say

980
00:51:21,930 --> 00:51:25,680
we need to see some interest so the

981
00:51:24,240 --> 00:51:29,098
question is what's the best type of

982
00:51:25,680 --> 00:51:30,690
interest we can express right so so this

983
00:51:29,099 --> 00:51:34,349
is a this is let's look to the chairs

984
00:51:30,690 --> 00:51:36,900
for guidance on this so I would turn to

985
00:51:34,349 --> 00:51:39,569
the ideas for direction but what I've

986
00:51:36,900 --> 00:51:43,260
seen quite a bit in a lot of work we

987
00:51:39,569 --> 00:51:46,170
cross boundaries all the time the

988
00:51:43,260 --> 00:51:48,690
interest is coming here how do we show

989
00:51:46,170 --> 00:51:51,210
interest do we adopt it that'll wake

990
00:51:48,690 --> 00:51:53,910
them up but I don't know you know we

991
00:51:51,210 --> 00:51:55,890
finally push through the is you know

992
00:51:53,910 --> 00:51:57,779
much more feedback on a document with

993
00:51:55,890 --> 00:51:59,339
creating your crypto stuff then for all

994
00:51:57,779 --> 00:52:01,380
these other documents you're doing here

995
00:51:59,339 --> 00:52:11,460
yeah and advantage of the queue and

996
00:52:01,380 --> 00:52:13,650
you'll get feedback to me it does feel

997
00:52:11,460 --> 00:52:15,539
like having this discussion and a group

998
00:52:13,650 --> 00:52:18,450
that has a lot more crypto people would

999
00:52:15,539 --> 00:52:20,519
be much more valuable okay

1000
00:52:18,450 --> 00:52:22,740
it seems as though there's enough stuff

1001
00:52:20,519 --> 00:52:26,069
yeah that's easy to shoot ourselves in

1002
00:52:22,740 --> 00:52:27,538
the foot work this is Craig I just I

1003
00:52:26,069 --> 00:52:28,950
don't disagree with you but I think it

1004
00:52:27,539 --> 00:52:31,200
would frame it differently I wouldn't

1005
00:52:28,950 --> 00:52:33,660
say more valuable I would say additional

1006
00:52:31,200 --> 00:52:35,640
value the use case is just as important

1007
00:52:33,660 --> 00:52:38,609
they they don't see a reason to do it we

1008
00:52:35,640 --> 00:52:41,308
do so together yeah right so you know

1009
00:52:38,609 --> 00:52:43,410
requirements are clear there's a

1010
00:52:41,309 --> 00:52:44,970
solution here that may be enough even

1011
00:52:43,410 --> 00:52:46,769
getting their sanity check on something

1012
00:52:44,970 --> 00:52:48,569
is uses the case when we cross

1013
00:52:46,769 --> 00:52:50,308
boundaries is not often to throw it over

1014
00:52:48,569 --> 00:52:52,019
the wall and have them do the work it's

1015
00:52:50,309 --> 00:52:55,140
just to ensure that those experts get a

1016
00:52:52,019 --> 00:52:56,819
chance to review our work yeah that's

1017
00:52:55,140 --> 00:52:58,500
that item say in every case but that's

1018
00:52:56,819 --> 00:53:00,029
often the case yeah

1019
00:52:58,500 --> 00:53:02,390
so not just review our work that

1020
00:53:00,029 --> 00:53:04,829
hopefully be involved in making sure

1021
00:53:02,390 --> 00:53:05,220
yeah what partner review say no this is

1022
00:53:04,829 --> 00:53:06,570
a

1023
00:53:05,220 --> 00:53:08,580
lame ID and we got a much much better

1024
00:53:06,570 --> 00:53:09,840
way of doing this to dance in the racks

1025
00:53:08,580 --> 00:53:12,090
and we go through the process but

1026
00:53:09,840 --> 00:53:13,980
there's a process so I would so one

1027
00:53:12,090 --> 00:53:15,000
thing I would say is that as I've

1028
00:53:13,980 --> 00:53:17,849
presented it here

1029
00:53:15,000 --> 00:53:20,160
there's nothing novel crypto wise there

1030
00:53:17,849 --> 00:53:24,060
although there are some things that we

1031
00:53:20,160 --> 00:53:27,779
would like to do that probably would you

1032
00:53:24,060 --> 00:53:30,000
know probably raise the hairs on the you

1033
00:53:27,780 --> 00:53:31,590
know the back of Ben's head if we

1034
00:53:30,000 --> 00:53:33,780
actually implemented them such as like

1035
00:53:31,590 --> 00:53:36,510
truncating hashes right how much can we

1036
00:53:33,780 --> 00:53:38,160
do that and still have a security margin

1037
00:53:36,510 --> 00:53:40,740
right so that's the kind of thing where

1038
00:53:38,160 --> 00:53:44,700
we would definitely need security area

1039
00:53:40,740 --> 00:53:47,879
input well but don't you feel that you

1040
00:53:44,700 --> 00:53:49,560
know the amount of crypto Ryu and I mean

1041
00:53:47,880 --> 00:53:50,880
there is this metadata channel which I

1042
00:53:49,560 --> 00:53:53,310
don't know right so there were these

1043
00:53:50,880 --> 00:53:55,740
parameters that he said right so I don't

1044
00:53:53,310 --> 00:53:57,090
know anybody here who could and that may

1045
00:53:55,740 --> 00:53:59,220
impact whether you need a metadata

1046
00:53:57,090 --> 00:54:00,990
channel or whether we feel oh we can get

1047
00:53:59,220 --> 00:54:02,970
to statically define a profile that will

1048
00:54:00,990 --> 00:54:04,740
be fine forever and then somebody comes

1049
00:54:02,970 --> 00:54:06,089
around and says crypto agility and so I

1050
00:54:04,740 --> 00:54:08,939
mean there there's a lot more stuff

1051
00:54:06,090 --> 00:54:10,619
which you know I think if we do it with

1052
00:54:08,940 --> 00:54:12,450
review afterwards towards the end right

1053
00:54:10,619 --> 00:54:14,670
we do we do everything working for class

1054
00:54:12,450 --> 00:54:17,368
call and then core issues come up right

1055
00:54:14,670 --> 00:54:20,250
so I think it's fine to get started with

1056
00:54:17,369 --> 00:54:22,500
this one block requirement use cases one

1057
00:54:20,250 --> 00:54:24,839
block proposed solution worst case is a

1058
00:54:22,500 --> 00:54:26,910
scheme slipped in the middle and the

1059
00:54:24,839 --> 00:54:33,619
solution goes to a working group that

1060
00:54:26,910 --> 00:54:36,980
does it better right thanks anyone else

1061
00:54:33,619 --> 00:54:36,980
all right thank you

1062
00:54:49,460 --> 00:55:05,490
all right Jake come on down okay

1063
00:55:01,920 --> 00:55:15,150
Jake Owen and I was gonna talk about the

1064
00:55:05,490 --> 00:55:17,970
hackathon so my focus at this with this

1065
00:55:15,150 --> 00:55:20,340
effort is about getting receivers

1066
00:55:17,970 --> 00:55:26,549
deployed that can actually do the ingest

1067
00:55:20,340 --> 00:55:28,530
so the idea is it is it broad deployment

1068
00:55:26,550 --> 00:55:30,450
for something that's gonna implement the

1069
00:55:28,530 --> 00:55:32,720
discovery because the the new discovery

1070
00:55:30,450 --> 00:55:36,779
that were that we've recently passed

1071
00:55:32,720 --> 00:55:41,310
last call complicates the multicast

1072
00:55:36,780 --> 00:55:43,590
application and making sure that it's

1073
00:55:41,310 --> 00:55:46,020
going to be viable to get it and the the

1074
00:55:43,590 --> 00:55:48,000
crypto that were that we believe is

1075
00:55:46,020 --> 00:55:49,470
going to be necessary for the receivers

1076
00:55:48,000 --> 00:55:51,480
also is going to complicate the

1077
00:55:49,470 --> 00:55:54,109
application so I'm trying to merge this

1078
00:55:51,480 --> 00:55:56,340
into a library and get this and and

1079
00:55:54,110 --> 00:55:58,230
provide a proof of concept that it can

1080
00:55:56,340 --> 00:56:00,540
be integrated and in fact go ahead and

1081
00:55:58,230 --> 00:56:05,520
do some integration on some widely

1082
00:56:00,540 --> 00:56:11,130
deployed clients to that end I published

1083
00:56:05,520 --> 00:56:13,430
a Lib em CRX library BSD license I have

1084
00:56:11,130 --> 00:56:16,740
it running with basic SSM receive and

1085
00:56:13,430 --> 00:56:20,069
it's compiling on Mac and Linux and in

1086
00:56:16,740 --> 00:56:22,470
fact receiving data my intent is to add

1087
00:56:20,070 --> 00:56:25,500
the empty gateway with Dryad discovery

1088
00:56:22,470 --> 00:56:27,600
with the local DNS SD discovery so the

1089
00:56:25,500 --> 00:56:30,810
the you know it's it's critical to the

1090
00:56:27,600 --> 00:56:35,040
use case of deploying multicast that we

1091
00:56:30,810 --> 00:56:37,830
get that when you can discover a local

1092
00:56:35,040 --> 00:56:39,900
relay you use it so that a locally

1093
00:56:37,830 --> 00:56:43,049
capable multicast network actually

1094
00:56:39,900 --> 00:56:46,380
provides multicast if you just connect

1095
00:56:43,050 --> 00:56:48,450
to a remote relay you will you will sort

1096
00:56:46,380 --> 00:56:50,790
of ossify multicast before you can get

1097
00:56:48,450 --> 00:56:52,980
the actual replication it has to go over

1098
00:56:50,790 --> 00:56:54,509
the access network that's my that's my

1099
00:56:52,980 --> 00:56:56,340
view of it

1100
00:56:54,510 --> 00:56:58,410
you know the the place you get the most

1101
00:56:56,340 --> 00:56:59,650
games is in those fiber networks and in

1102
00:56:58,410 --> 00:57:01,899
the cable networks where

1103
00:56:59,650 --> 00:57:02,920
you wear there's physical bits on the

1104
00:57:01,900 --> 00:57:04,330
wire that don't you have to get

1105
00:57:02,920 --> 00:57:06,490
transmitted because you did it in

1106
00:57:04,330 --> 00:57:07,810
multicast so that's what I'm trying to

1107
00:57:06,490 --> 00:57:11,439
accomplish with this and the other piece

1108
00:57:07,810 --> 00:57:13,060
is that is the authentication which you

1109
00:57:11,440 --> 00:57:15,250
know on the internet we have to send

1110
00:57:13,060 --> 00:57:16,779
over untrusted networks and in in actual

1111
00:57:15,250 --> 00:57:18,310
deployment it's going to be critical to

1112
00:57:16,780 --> 00:57:20,980
get that working that's why we've

1113
00:57:18,310 --> 00:57:23,320
started this work we're gonna try and

1114
00:57:20,980 --> 00:57:28,600
make it run and it's gonna go into that

1115
00:57:23,320 --> 00:57:30,610
library with the same API or a small

1116
00:57:28,600 --> 00:57:32,230
extensions to the API that's there now

1117
00:57:30,610 --> 00:57:34,360
for how to do the receive and the

1118
00:57:32,230 --> 00:57:39,880
application side it will be relatively

1119
00:57:34,360 --> 00:57:42,070
invisible so at the hackathon over the

1120
00:57:39,880 --> 00:57:45,610
weekend we did I got it running and

1121
00:57:42,070 --> 00:57:47,530
integrated in the upstream for the app

1122
00:57:45,610 --> 00:57:49,630
for the taps reference implementation

1123
00:57:47,530 --> 00:57:53,380
it's a Python implementation of taps

1124
00:57:49,630 --> 00:57:57,100
taps is is working on a sort of

1125
00:57:53,380 --> 00:57:58,500
replacement API for socket libraries so

1126
00:57:57,100 --> 00:58:03,310
I've been participating with that group

1127
00:57:58,500 --> 00:58:04,900
and I have now integrated this multicast

1128
00:58:03,310 --> 00:58:08,590
receive library into that reference

1129
00:58:04,900 --> 00:58:10,420
implementation it was running it's it is

1130
00:58:08,590 --> 00:58:12,640
research code so this is not super

1131
00:58:10,420 --> 00:58:14,950
deployable on its own but it was

1132
00:58:12,640 --> 00:58:16,920
heartening to see it you know be

1133
00:58:14,950 --> 00:58:19,379
successful with the API that was there

1134
00:58:16,920 --> 00:58:22,720
and I think it does represent an

1135
00:58:19,380 --> 00:58:27,330
worthwhile proof of concept the other

1136
00:58:22,720 --> 00:58:30,490
thing is the upcoming idea which is I

1137
00:58:27,330 --> 00:58:32,500
have a prototype running which uses the

1138
00:58:30,490 --> 00:58:38,319
same API and runs under chromium

1139
00:58:32,500 --> 00:58:39,700
providing a JavaScript API which you

1140
00:58:38,320 --> 00:58:41,890
issue a joint and now you start

1141
00:58:39,700 --> 00:58:45,609
receiving UDP payloads once we've

1142
00:58:41,890 --> 00:58:47,170
integrated the discovery and the and the

1143
00:58:45,610 --> 00:58:48,010
authentication this is going to mean

1144
00:58:47,170 --> 00:58:49,450
that you're going to receive

1145
00:58:48,010 --> 00:58:50,500
authenticated payloads and you'll be

1146
00:58:49,450 --> 00:58:54,730
doing it whether or not you have

1147
00:58:50,500 --> 00:58:57,190
multicast capability but if the if the

1148
00:58:54,730 --> 00:58:58,600
local network does provide multicast

1149
00:58:57,190 --> 00:59:01,120
capabilities then you would be getting

1150
00:58:58,600 --> 00:59:04,779
it with multicast so that's the basic

1151
00:59:01,120 --> 00:59:07,080
idea this also is running and it's gonna

1152
00:59:04,780 --> 00:59:12,089
need this is going to need a lot of work

1153
00:59:07,080 --> 00:59:15,119
in fact yes this is my to-do list

1154
00:59:12,089 --> 00:59:20,219
there's uh the this is not going to be

1155
00:59:15,119 --> 00:59:23,789
you know done in November I doubt it

1156
00:59:20,219 --> 00:59:26,939
will be done in April but I don't know

1157
00:59:23,789 --> 00:59:28,680
depending if I can get any support I I

1158
00:59:26,939 --> 00:59:30,089
can type all of this I think I know what

1159
00:59:28,680 --> 00:59:32,969
to type I think I know how to make this

1160
00:59:30,089 --> 00:59:36,180
go but it's there's a lot of pieces to

1161
00:59:32,969 --> 00:59:37,769
put together and and before it can

1162
00:59:36,180 --> 00:59:40,828
really be deployed I think all of this

1163
00:59:37,769 --> 00:59:42,890
or you know appropriate substitutes that

1164
00:59:40,829 --> 00:59:46,920
simplify are going to have to be there

1165
00:59:42,890 --> 00:59:49,939
so yeah if you know any grad students

1166
00:59:46,920 --> 00:59:54,689
that want some good experience or that

1167
00:59:49,939 --> 00:59:56,699
you know then I would love to hook them

1168
00:59:54,689 --> 00:59:59,089
up if people are interested in this I

1169
00:59:56,699 --> 01:00:05,099
would love to get some assistance on on

1170
00:59:59,089 --> 01:00:07,170
working this out and I'm I'm I'm gonna

1171
01:00:05,099 --> 01:00:08,789
start typing myself and I would love for

1172
01:00:07,170 --> 01:00:16,819
people to come join me for friendly

1173
01:00:08,789 --> 01:00:19,469
mentoring indeed what's their carrot

1174
01:00:16,819 --> 01:00:22,019
there's it's a wonderful experience you

1175
01:00:19,469 --> 01:00:25,519
know what I'd have to talk to him it

1176
01:00:22,019 --> 01:00:25,519
depends on I don't know

1177
01:00:26,059 --> 01:00:40,109
stick you know you share libraries so

1178
01:00:38,309 --> 01:00:41,279
like pre-loading so that you can have

1179
01:00:40,109 --> 01:00:43,769
like a pre-compiled

1180
01:00:41,279 --> 01:00:47,459
existing application using the socket

1181
01:00:43,769 --> 01:00:51,468
API and then they calling your MT

1182
01:00:47,459 --> 01:00:57,149
library that is an interesting idea

1183
01:00:51,469 --> 01:00:59,819
so the socket API is arguably a poor

1184
01:00:57,150 --> 01:01:01,469
choice for some of this you need to you

1185
01:00:59,819 --> 01:01:04,288
know I'm using a socket API underneath

1186
01:01:01,469 --> 01:01:06,150
it of course it's not really

1187
01:01:04,289 --> 01:01:07,920
cross-platform it doesn't work

1188
01:01:06,150 --> 01:01:09,390
cross-platform there's different sock

1189
01:01:07,920 --> 01:01:13,760
hops you have to do to actually issue

1190
01:01:09,390 --> 01:01:18,620
the join there's you know

1191
01:01:13,760 --> 01:01:23,120
you get a um you know if you want to

1192
01:01:18,620 --> 01:01:27,859
write that that would be awesome I don't

1193
01:01:23,120 --> 01:01:30,049
know how to write that one actually open

1194
01:01:27,860 --> 01:01:32,300
source code look at that kill ago that

1195
01:01:30,050 --> 01:01:34,310
did something like this for SSM so the

1196
01:01:32,300 --> 01:01:36,530
application just joined star key as

1197
01:01:34,310 --> 01:01:38,600
usual but then you have this library

1198
01:01:36,530 --> 01:01:41,540
it's really app and kernel basically

1199
01:01:38,600 --> 01:01:44,210
you're an Eskimo you join or some other

1200
01:01:41,540 --> 01:01:46,100
group right so that's that's kind of

1201
01:01:44,210 --> 01:01:49,400
what the the role that this library is

1202
01:01:46,100 --> 01:01:54,290
trying to fill you do have a relatively

1203
01:01:49,400 --> 01:01:57,050
simple SSM join API and your you know

1204
01:01:54,290 --> 01:01:58,880
the the hope is that that the receive

1205
01:01:57,050 --> 01:02:02,120
side use cases for applications actually

1206
01:01:58,880 --> 01:02:03,800
can work with this app with this API and

1207
01:02:02,120 --> 01:02:07,430
that that's going to be somewhat simpler

1208
01:02:03,800 --> 01:02:09,980
than the then trying to use sockets that

1209
01:02:07,430 --> 01:02:13,190
has been my experience with messing with

1210
01:02:09,980 --> 01:02:15,200
it so far I think it you know as as with

1211
01:02:13,190 --> 01:02:24,530
all code it will presumably get refined

1212
01:02:15,200 --> 01:02:28,790
along the way but I don't know sockets

1213
01:02:24,530 --> 01:02:32,840
or so like one of the lessons from taps

1214
01:02:28,790 --> 01:02:34,820
is that if they're working loop is

1215
01:02:32,840 --> 01:02:36,440
formed because like three different

1216
01:02:34,820 --> 01:02:38,960
groups tried to do this not for the more

1217
01:02:36,440 --> 01:02:42,200
complicated cases of multicast with like

1218
01:02:38,960 --> 01:02:45,550
extra features but but just for regulars

1219
01:02:42,200 --> 01:02:48,020
you know ease of use on sockets and

1220
01:02:45,550 --> 01:02:49,430
ended up deciding actually this is kind

1221
01:02:48,020 --> 01:02:51,380
of complicated and now they've been

1222
01:02:49,430 --> 01:02:54,440
hammering out of for a couple of years

1223
01:02:51,380 --> 01:03:05,650
and maybe they'll have a good API for

1224
01:02:54,440 --> 01:03:05,650
long please do some great thank you

1225
01:03:06,490 --> 01:03:10,450
alright thanks

1226
01:03:23,780 --> 01:03:30,829
a good multicast presence at all the

1227
01:03:25,579 --> 01:03:40,549
hackathons and yes you're doing the work

1228
01:03:30,829 --> 01:03:51,280
of the Lord okay we are Leslie come on

1229
01:03:40,549 --> 01:03:56,079
down and Glen so the media ops buff

1230
01:03:51,280 --> 01:04:01,569
there was a media ops off occurred

1231
01:03:56,079 --> 01:04:05,359
Monday who here in this room attended

1232
01:04:01,569 --> 01:04:08,630
okay so about a freak ball flies a third

1233
01:04:05,359 --> 01:04:11,690
of the room and this was the first buff

1234
01:04:08,630 --> 01:04:13,700
after the one in Chicago

1235
01:04:11,690 --> 01:04:17,329
was that correct yeah I remember she

1236
01:04:13,700 --> 01:04:19,009
it's the first for MoMA okay that was

1237
01:04:17,329 --> 01:04:21,680
the bar Bob in Chicago I remember that

1238
01:04:19,010 --> 01:04:24,049
and there hasn't been anything formal

1239
01:04:21,680 --> 01:04:26,240
but you've been you've had the list

1240
01:04:24,049 --> 01:04:29,119
going in right so even we we've been

1241
01:04:26,240 --> 01:04:30,680
talking about video at the ITF had an

1242
01:04:29,119 --> 01:04:31,520
informal group over the course of the

1243
01:04:30,680 --> 01:04:33,770
last two years

1244
01:04:31,520 --> 01:04:35,599
yeah so since since your cognitive

1245
01:04:33,770 --> 01:04:37,279
Chicago is kind of overwhelming with

1246
01:04:35,599 --> 01:04:40,700
number of people in the room we went to

1247
01:04:37,279 --> 01:04:42,140
a much smaller group throw less formal

1248
01:04:40,700 --> 01:04:46,480
called the video interest group that's

1249
01:04:42,140 --> 01:04:48,589
the median every ITF since then and

1250
01:04:46,480 --> 01:04:51,079
which has been pretty good as a slob

1251
01:04:48,589 --> 01:04:52,819
they sort of the the nascent ideas to

1252
01:04:51,079 --> 01:04:54,559
sort of form and say well what would you

1253
01:04:52,819 --> 01:04:56,240
work on how would you tackle things and

1254
01:04:54,559 --> 01:04:59,000
I think we've developed a really good

1255
01:04:56,240 --> 01:05:01,098
community of interested parties both

1256
01:04:59,000 --> 01:05:05,059
individuals and and organizations that

1257
01:05:01,099 --> 01:05:06,619
would support the topic space but now

1258
01:05:05,059 --> 01:05:08,329
it's time to maybe make it a little more

1259
01:05:06,619 --> 01:05:10,849
formal and do a little bit more that's

1260
01:05:08,329 --> 01:05:12,920
why we called for the media ops both to

1261
01:05:10,849 --> 01:05:17,630
sort of open it up to the rest of the

1262
01:05:12,920 --> 01:05:19,220
world and so people who were in the bath

1263
01:05:17,630 --> 01:05:22,160
have heard this part of the song and

1264
01:05:19,220 --> 01:05:23,660
dance before so part of what we were

1265
01:05:22,160 --> 01:05:25,368
hoping to do that was to highlight the

1266
01:05:23,660 --> 01:05:27,078
fact that there are many video

1267
01:05:25,369 --> 01:05:29,299
activities that are ongoing at the ITF

1268
01:05:27,079 --> 01:05:33,049
that don't actually fit in any one

1269
01:05:29,299 --> 01:05:35,390
particular place and identify gaps in

1270
01:05:33,049 --> 01:05:37,550
IETF work in areas of incompatibility

1271
01:05:35,390 --> 01:05:39,259
with video technology development

1272
01:05:37,550 --> 01:05:42,680
efforts being carried out elsewhere so

1273
01:05:39,260 --> 01:05:46,160
for example gran gave a presentation

1274
01:05:42,680 --> 01:05:50,270
about the the sim Tirek dependencies on

1275
01:05:46,160 --> 01:05:52,220
IETF standards there was representation

1276
01:05:50,270 --> 01:05:54,970
from folks involved in the SVA the

1277
01:05:52,220 --> 01:05:58,009
streaming video Alliance in the room and

1278
01:05:54,970 --> 01:06:00,200
these are all other organizations that

1279
01:05:58,010 --> 01:06:05,240
use IETF standards in ways that might be

1280
01:06:00,200 --> 01:06:06,740
surprising to us yes so on that I for

1281
01:06:05,240 --> 01:06:07,970
people that live in the world of the ITF

1282
01:06:06,740 --> 01:06:09,709
they're probably not very aware of

1283
01:06:07,970 --> 01:06:12,379
what's going on in some of the other

1284
01:06:09,710 --> 01:06:13,490
orgs simp T is a Society of motion

1285
01:06:12,380 --> 01:06:16,130
picture and television engineers

1286
01:06:13,490 --> 01:06:19,220
basically they do TV and they do

1287
01:06:16,130 --> 01:06:20,990
broadcasts they do production they run

1288
01:06:19,220 --> 01:06:24,560
studios they do all that kind of fun

1289
01:06:20,990 --> 01:06:27,020
stuff that whole industry kind of like

1290
01:06:24,560 --> 01:06:30,259
the tell us to all 30 guys by radio and

1291
01:06:27,020 --> 01:06:31,790
we had sip they're migrating from a

1292
01:06:30,260 --> 01:06:34,850
protocol called SDI

1293
01:06:31,790 --> 01:06:36,740
which is a point-to-point protocol that

1294
01:06:34,850 --> 01:06:39,830
they get all the gears wired with allows

1295
01:06:36,740 --> 01:06:42,379
them to stream their streaming move

1296
01:06:39,830 --> 01:06:45,230
content from sources to destinations in

1297
01:06:42,380 --> 01:06:47,240
studios and production environments and

1298
01:06:45,230 --> 01:06:49,670
then ultimately do a broadcast tower or

1299
01:06:47,240 --> 01:06:53,209
a cable network they're migrating to the

1300
01:06:49,670 --> 01:06:54,770
single IP and they're just discovering

1301
01:06:53,210 --> 01:06:57,260
IP networks and so one of the first

1302
01:06:54,770 --> 01:07:00,020
things they did was create this suite of

1303
01:06:57,260 --> 01:07:02,540
standards called 2110 in their parlance

1304
01:07:00,020 --> 01:07:04,400
which essentially is how do you do all

1305
01:07:02,540 --> 01:07:06,050
this kind of stuff we've regularly been

1306
01:07:04,400 --> 01:07:08,660
doing over SDI how do you do over IP

1307
01:07:06,050 --> 01:07:10,400
networks they learned a lot about you

1308
01:07:08,660 --> 01:07:11,480
know updating their stuff to make it

1309
01:07:10,400 --> 01:07:13,520
work in that environment they also

1310
01:07:11,480 --> 01:07:14,780
learned a lot about IP networks things

1311
01:07:13,520 --> 01:07:16,970
that worked for them things that didn't

1312
01:07:14,780 --> 01:07:18,560
work for them and so they l1 things we

1313
01:07:16,970 --> 01:07:20,149
presented was this long list of

1314
01:07:18,560 --> 01:07:23,420
normative references that they have back

1315
01:07:20,150 --> 01:07:24,740
to us in the ICF and unfortunately the

1316
01:07:23,420 --> 01:07:26,030
director standards

1317
01:07:24,740 --> 01:07:27,560
Thomas Powell's and Mesa was supposed to

1318
01:07:26,030 --> 01:07:30,860
be at the boss but he had to go to LA

1319
01:07:27,560 --> 01:07:32,150
for a meeting at the last minute or he

1320
01:07:30,860 --> 01:07:34,400
would have been able to give you a real

1321
01:07:32,150 --> 01:07:35,510
good in-depth overview on it but the

1322
01:07:34,400 --> 01:07:37,730
takeaway there is that there's these

1323
01:07:35,510 --> 01:07:39,410
groups are now just like so often you

1324
01:07:37,730 --> 01:07:41,990
guys did they're starting to be I'm

1325
01:07:39,410 --> 01:07:43,850
dependent upon IP networks and so part

1326
01:07:41,990 --> 01:07:46,700
of the takeaway that up for me on this

1327
01:07:43,850 --> 01:07:48,290
is that there is this new set of parties

1328
01:07:46,700 --> 01:07:49,399
that are really dependent upon us and

1329
01:07:48,290 --> 01:07:51,440
they're really interested in stuff we do

1330
01:07:49,400 --> 01:07:53,569
here there's an opportunity here

1331
01:07:51,440 --> 01:07:55,280
to fire up some working the ITF and

1332
01:07:53,569 --> 01:07:56,900
bring these guys in as well because they

1333
01:07:55,280 --> 01:07:59,349
have stuff they want to talk to us about

1334
01:07:56,900 --> 01:08:01,940
and it'd be us they used to work

1335
01:07:59,349 --> 01:08:04,460
successful new work for the IDF but also

1336
01:08:01,940 --> 01:08:06,079
a way for all of us to make our TV shows

1337
01:08:04,460 --> 01:08:08,089
and movies that we all love a little bit

1338
01:08:06,079 --> 01:08:10,780
better and I think Charlie says

1339
01:08:08,089 --> 01:08:13,400
something he wants to talk to us about

1340
01:08:10,780 --> 01:08:15,349
I've seen really crazy ways on how some

1341
01:08:13,400 --> 01:08:17,239
of the broadcast equipment has been you

1342
01:08:15,349 --> 01:08:19,880
know abusing IGMP even the way they

1343
01:08:17,238 --> 01:08:22,068
documented and their stuff and you know

1344
01:08:19,880 --> 01:08:23,930
we do have existing working groups where

1345
01:08:22,069 --> 01:08:25,880
they could have come to like this one or

1346
01:08:23,930 --> 01:08:27,380
pay more others if they have any

1347
01:08:25,880 --> 01:08:30,290
questions about the technologies that

1348
01:08:27,380 --> 01:08:33,080
they're using so I'm just wondering you

1349
01:08:30,290 --> 01:08:36,049
know what's what's the process by really

1350
01:08:33,080 --> 01:08:37,609
because we've we have adoption of IP

1351
01:08:36,049 --> 01:08:38,930
technologies and all these different

1352
01:08:37,609 --> 01:08:41,029
technologies for such a long time and

1353
01:08:38,930 --> 01:08:42,799
there and always the ongoing pain that

1354
01:08:41,029 --> 01:08:44,810
everybody would ops it thinks they

1355
01:08:42,799 --> 01:08:46,519
understand this stuff better so I think

1356
01:08:44,810 --> 01:08:48,140
yeah so I think part of the problem is

1357
01:08:46,520 --> 01:08:49,549
that for the people who are working in

1358
01:08:48,140 --> 01:08:51,589
those groups it's even if they ever

1359
01:08:49,549 --> 01:08:54,920
looked at an IETF schedule or at the ITF

1360
01:08:51,589 --> 01:08:56,630
webpage heaven forfend never would have

1361
01:08:54,920 --> 01:08:58,219
no idea where to plug in right I mean

1362
01:08:56,630 --> 01:09:00,410
maybe they would understand while I'm

1363
01:08:58,219 --> 01:09:02,509
using v6 technology and I'm gonna do it

1364
01:09:00,410 --> 01:09:03,680
this way I look here's a v6 working

1365
01:09:02,509 --> 01:09:05,529
group it was like none of the work items

1366
01:09:03,680 --> 01:09:10,969
are relevant to what they're doing so

1367
01:09:05,529 --> 01:09:13,130
the point because I mean I've been help

1368
01:09:10,969 --> 01:09:14,390
mentoring people as well who came in

1369
01:09:13,130 --> 01:09:16,130
there somebody asked what the

1370
01:09:14,390 --> 01:09:17,900
technologies are and then they've been

1371
01:09:16,130 --> 01:09:18,350
asking around with a mentor II smooth no

1372
01:09:17,899 --> 01:09:20,358
sleep

1373
01:09:18,350 --> 01:09:22,819
I didn't say nobody succeeded agree to

1374
01:09:20,359 --> 01:09:24,230
disagree yeah and University work man

1375
01:09:22,819 --> 01:09:26,029
these are people trying to get the job

1376
01:09:24,229 --> 01:09:28,009
done they get really paid to do it they

1377
01:09:26,029 --> 01:09:30,170
don't care they find a solution and they

1378
01:09:28,009 --> 01:09:32,180
go after it they can't get a spec read

1379
01:09:30,170 --> 01:09:33,620
and clarified in time they do it the way

1380
01:09:32,180 --> 01:09:35,420
they want to do it you know I think we

1381
01:09:33,620 --> 01:09:37,250
agree on that what I'm saying is I

1382
01:09:35,420 --> 01:09:40,040
disagree on the fact that somebody if

1383
01:09:37,250 --> 01:09:41,569
they wanted to come to the ITF wouldn't

1384
01:09:40,040 --> 01:09:43,130
be able to figure out where to go to

1385
01:09:41,569 --> 01:09:44,810
because we're helping them with that so

1386
01:09:43,130 --> 01:09:46,219
so one of the problems is that you you

1387
01:09:44,810 --> 01:09:47,630
actually stand up in a working group and

1388
01:09:46,219 --> 01:09:49,600
you say here's this problem you get told

1389
01:09:47,630 --> 01:09:55,400
you there isn't a problem

1390
01:09:49,600 --> 01:09:57,710
sort of like now well well specifically

1391
01:09:55,400 --> 01:10:00,049
to this point you know as me as an IT

1392
01:09:57,710 --> 01:10:01,550
effort when I go and work with my

1393
01:10:00,050 --> 01:10:03,590
colleagues in these other groups which

1394
01:10:01,550 --> 01:10:05,150
I'm a member of simpie and I'm on the

1395
01:10:03,590 --> 01:10:07,820
board of the streaming video alliance

1396
01:10:05,150 --> 01:10:10,580
I will tell you I've received vocal

1397
01:10:07,820 --> 01:10:12,769
feedback many a time from people who

1398
01:10:10,580 --> 01:10:15,110
have tried to come in and engage with us

1399
01:10:12,770 --> 01:10:17,330
we do have a bit of a reputation of not

1400
01:10:15,110 --> 01:10:19,190
being the friendliest crowd to open the

1401
01:10:17,330 --> 01:10:22,400
door and welcome people and part of the

1402
01:10:19,190 --> 01:10:26,690
idea that behind this is it could

1403
01:10:22,400 --> 01:10:29,240
provide a safe video a group that

1404
01:10:26,690 --> 01:10:31,370
understands video concerns and also

1405
01:10:29,240 --> 01:10:33,740
understands the IGF and could help

1406
01:10:31,370 --> 01:10:36,230
bridge them into it so how that might

1407
01:10:33,740 --> 01:10:38,240
work in practice for instance would be

1408
01:10:36,230 --> 01:10:40,580
hey I've got a problem that's video

1409
01:10:38,240 --> 01:10:43,610
related that I think such as IP networks

1410
01:10:40,580 --> 01:10:45,470
okay first step step number two I would

1411
01:10:43,610 --> 01:10:47,120
like to find a bunch of like people at

1412
01:10:45,470 --> 01:10:49,880
the ITF who understand this problem

1413
01:10:47,120 --> 01:10:52,550
space and who would work with me to

1414
01:10:49,880 --> 01:10:56,240
create sort of an essence of ID's that

1415
01:10:52,550 --> 01:10:59,690
could eventually either create work in

1416
01:10:56,240 --> 01:11:01,820
this space or could get take it over

1417
01:10:59,690 --> 01:11:03,349
into another working group that's

1418
01:11:01,820 --> 01:11:06,799
working on the specific stuff such as

1419
01:11:03,350 --> 01:11:09,950
mbone d1 fields ideas are allowed to be

1420
01:11:06,800 --> 01:11:11,600
developed and refined so that they're

1421
01:11:09,950 --> 01:11:14,330
ready to be brought into a group like mo

1422
01:11:11,600 --> 01:11:15,740
D or some other group within the ITF by

1423
01:11:14,330 --> 01:11:17,840
the way time it turns out to be is a

1424
01:11:15,740 --> 01:11:20,210
huge new topic for a lot of these video

1425
01:11:17,840 --> 01:11:22,640
guys who knew right

1426
01:11:20,210 --> 01:11:26,000
but faith has faced that exact problem

1427
01:11:22,640 --> 01:11:27,650
how do you make those ideas coit before

1428
01:11:26,000 --> 01:11:30,560
you bring them forward and into those

1429
01:11:27,650 --> 01:11:32,179
working groups and I didn't mean to I

1430
01:11:30,560 --> 01:11:34,520
didn't mean to imply that nobody

1431
01:11:32,180 --> 01:11:36,230
succeeds in bringing their stuff in I

1432
01:11:34,520 --> 01:11:38,000
think that you've you're identifying

1433
01:11:36,230 --> 01:11:40,160
that you have successfully helped bring

1434
01:11:38,000 --> 01:11:42,050
some people in and sort of smooth their

1435
01:11:40,160 --> 01:11:44,389
their access to getting the right

1436
01:11:42,050 --> 01:11:46,070
answers and and we're saying there are

1437
01:11:44,390 --> 01:11:48,110
some people who don't succeed maybe they

1438
01:11:46,070 --> 01:11:49,460
haven't found you but I mean the point

1439
01:11:48,110 --> 01:11:51,170
is there are people for whom this

1440
01:11:49,460 --> 01:11:55,310
doesn't work maybe the gentleman behind

1441
01:11:51,170 --> 01:11:57,080
you would like to make a remark hi

1442
01:11:55,310 --> 01:11:59,270
family come on love Harry stone it works

1443
01:11:57,080 --> 01:12:01,610
I agree I think this is very much needed

1444
01:11:59,270 --> 01:12:03,590
I know from talking to customers in the

1445
01:12:01,610 --> 01:12:05,719
kind of media or world that even a

1446
01:12:03,590 --> 01:12:06,920
concept like an IP address it's quite

1447
01:12:05,720 --> 01:12:08,960
keen or scary to them

1448
01:12:06,920 --> 01:12:11,360
and they always want to try to avoid a

1449
01:12:08,960 --> 01:12:13,130
lot of cannae technical details so I

1450
01:12:11,360 --> 01:12:17,389
think we're suggesting mix our saying so

1451
01:12:13,130 --> 01:12:18,469
I'm very useful so in terms of trying to

1452
01:12:17,390 --> 01:12:20,030
do this

1453
01:12:18,469 --> 01:12:21,769
this type of work some of the challenges

1454
01:12:20,030 --> 01:12:23,900
we outlined were the fact that this

1455
01:12:21,769 --> 01:12:25,729
video work is multifaceted covers a lot

1456
01:12:23,900 --> 01:12:28,999
of traditional areas no clear single

1457
01:12:25,729 --> 01:12:30,530
home for it and therefore some

1458
01:12:28,999 --> 01:12:32,539
coordination would be useful as Clem was

1459
01:12:30,530 --> 01:12:34,759
just outlining and so we kind of went up

1460
01:12:32,539 --> 01:12:37,070
in the ops space for the Boff in part

1461
01:12:34,760 --> 01:12:38,719
because it's not there's not specific

1462
01:12:37,070 --> 01:12:40,630
proposals for developing specific

1463
01:12:38,719 --> 01:12:43,159
technologies at this point but rather

1464
01:12:40,630 --> 01:12:45,920
more a set of operational issues that

1465
01:12:43,159 --> 01:12:48,079
people are encountering and finding

1466
01:12:45,920 --> 01:12:51,460
solutions or creating creative solutions

1467
01:12:48,079 --> 01:12:53,478
to address them so in terms of the boff

1468
01:12:51,460 --> 01:12:56,409
we had about a hundred people in the

1469
01:12:53,479 --> 01:12:58,219
room 100 something people in the room

1470
01:12:56,409 --> 01:12:59,749
yeah there are a lot of people there and

1471
01:12:58,219 --> 01:13:02,510
there's general support that there is

1472
01:12:59,749 --> 01:13:04,039
work here that is IETF appropriate a

1473
01:13:02,510 --> 01:13:05,360
reasonable number of people who are

1474
01:13:04,039 --> 01:13:07,249
willing to sign up to the mailing list

1475
01:13:05,360 --> 01:13:10,339
here's a plug the mailing this is the

1476
01:13:07,249 --> 01:13:12,590
mop set IETF done org mailing list we've

1477
01:13:10,340 --> 01:13:14,479
just set it up because we've been

1478
01:13:12,590 --> 01:13:17,150
camping out on a different mailing list

1479
01:13:14,479 --> 01:13:18,590
until now so please do sign up if you're

1480
01:13:17,150 --> 01:13:21,079
interested and don't be surprised if

1481
01:13:18,590 --> 01:13:23,389
there isn't yet a lot of traffic but

1482
01:13:21,079 --> 01:13:25,159
also an outcome is that clearly we were

1483
01:13:23,389 --> 01:13:26,900
not clear in scoping the problem space

1484
01:13:25,159 --> 01:13:29,839
partly because this is not a traditional

1485
01:13:26,900 --> 01:13:31,549
ops group for a particular protocol so

1486
01:13:29,840 --> 01:13:34,670
we heard that we're willing to work with

1487
01:13:31,550 --> 01:13:37,849
that and we will be back with some

1488
01:13:34,670 --> 01:13:39,739
creative solutions at some point so just

1489
01:13:37,849 --> 01:13:41,420
from the process are you trying to be

1490
01:13:39,739 --> 01:13:44,030
working group forming or what's been of

1491
01:13:41,420 --> 01:13:46,460
the process steps that you're trying to

1492
01:13:44,030 --> 01:13:48,079
achieve next yes this actually this this

1493
01:13:46,460 --> 01:13:49,999
path was a working group for me in Botha

1494
01:13:48,079 --> 01:14:00,228
that's the intent to ultimately form or

1495
01:13:49,999 --> 01:14:02,809
working group so Jake yeah Jake actually

1496
01:14:00,229 --> 01:14:05,690
has proposed that we consider doing a

1497
01:14:02,809 --> 01:14:08,389
taxonomy of issues and in this space to

1498
01:14:05,690 --> 01:14:10,518
help map out the space for instance I

1499
01:14:08,389 --> 01:14:11,840
think that that's part of what we

1500
01:14:10,519 --> 01:14:18,019
actually have to do in terms of

1501
01:14:11,840 --> 01:14:20,719
clarifying what the scope would be you

1502
01:14:18,019 --> 01:14:23,570
know the typical thing for working group

1503
01:14:20,719 --> 01:14:25,489
is kind of maybe not really it's more

1504
01:14:23,570 --> 01:14:28,219
like a consultation group would be you

1505
01:14:25,489 --> 01:14:29,769
know the bigger scope of what this

1506
01:14:28,219 --> 01:14:31,600
starts out be right yeah

1507
01:14:29,770 --> 01:14:33,040
what we really wanted was to do

1508
01:14:31,600 --> 01:14:34,900
something like an interest group that's

1509
01:14:33,040 --> 01:14:36,190
why we were informally calling it a

1510
01:14:34,900 --> 01:14:37,540
video interest group when we were

1511
01:14:36,190 --> 01:14:40,240
meeting informally but the problem was

1512
01:14:37,540 --> 01:14:42,100
trying to meet informally is you don't

1513
01:14:40,240 --> 01:14:47,820
have bounds on your discussion right so

1514
01:14:42,100 --> 01:14:50,260
no charge no charter boundaries and also

1515
01:14:47,820 --> 01:14:51,639
no possibility to actually answering the

1516
01:14:50,260 --> 01:14:53,550
question because he's gone off to take a

1517
01:14:51,640 --> 01:14:58,810
call

1518
01:14:53,550 --> 01:15:00,640
shall we move on okay I did what I did

1519
01:14:58,810 --> 01:15:03,040
want to make one point in the video

1520
01:15:00,640 --> 01:15:06,040
interest group that we ran for two years

1521
01:15:03,040 --> 01:15:07,630
and and and the notes from it are online

1522
01:15:06,040 --> 01:15:13,150
the presentations that were done are

1523
01:15:07,630 --> 01:15:14,470
online and there were repeatedly we ran

1524
01:15:13,150 --> 01:15:15,910
basically a little mini workgroup so

1525
01:15:14,470 --> 01:15:17,410
people did come and give presentations

1526
01:15:15,910 --> 01:15:19,030
and actually have things hey I'm working

1527
01:15:17,410 --> 01:15:22,000
on stuff here that's relevant to the

1528
01:15:19,030 --> 01:15:23,590
IETF and this is work I'd like to do and

1529
01:15:22,000 --> 01:15:24,970
we have a kept haven't say well that's

1530
01:15:23,590 --> 01:15:27,190
awesome but we're not a were actual

1531
01:15:24,970 --> 01:15:29,590
working group but it's Austin you've got

1532
01:15:27,190 --> 01:15:33,519
work you want to do so there's a

1533
01:15:29,590 --> 01:15:35,530
pipeline so yeah I mean this doesn't

1534
01:15:33,520 --> 01:15:37,060
look like a normal working group but I

1535
01:15:35,530 --> 01:15:38,860
don't think that's necessarily a problem

1536
01:15:37,060 --> 01:15:40,450
right it's fairly clear that there are a

1537
01:15:38,860 --> 01:15:42,280
lot of people who want to do some sort

1538
01:15:40,450 --> 01:15:44,740
of stuff it doesn't fall into the

1539
01:15:42,280 --> 01:15:46,090
regular working group type design but

1540
01:15:44,740 --> 01:15:47,769
that doesn't mean that it's not worth

1541
01:15:46,090 --> 01:15:50,050
doing I think that might just be a

1542
01:15:47,770 --> 01:15:53,140
signal that we need something else other

1543
01:15:50,050 --> 01:15:54,730
than working groups I think for now

1544
01:15:53,140 --> 01:15:56,950
we're gonna try and leverage it into a

1545
01:15:54,730 --> 01:15:58,419
working group because redesigning stuff

1546
01:15:56,950 --> 01:16:02,250
and or something else is a really big

1547
01:15:58,420 --> 01:16:04,090
job I think there is some sort of

1548
01:16:02,250 --> 01:16:05,290
precedent for this which is things

1549
01:16:04,090 --> 01:16:07,600
except dispatch

1550
01:16:05,290 --> 01:16:09,610
sec dispatch doesn't always do its own

1551
01:16:07,600 --> 01:16:11,500
work it looks at things and sins then

1552
01:16:09,610 --> 01:16:17,889
both other places and that kind of seems

1553
01:16:11,500 --> 01:16:19,360
like a model that we could have used no

1554
01:16:17,890 --> 01:16:21,280
I think I think that sounds great and I

1555
01:16:19,360 --> 01:16:23,049
wasn't meaning to do with the initial

1556
01:16:21,280 --> 01:16:25,360
stuff to reject this I was just hoping

1557
01:16:23,050 --> 01:16:27,670
that nobody would have said that em

1558
01:16:25,360 --> 01:16:29,769
buddy or Pam have been you know nasty to

1559
01:16:27,670 --> 01:16:31,750
people coming in from the outside right

1560
01:16:29,770 --> 01:16:33,700
so because I'm hoping we're not part of

1561
01:16:31,750 --> 01:16:36,880
my job was great but really part of the

1562
01:16:33,700 --> 01:16:40,360
solution and from that perspective if we

1563
01:16:36,880 --> 01:16:42,340
find a way to you know not force this

1564
01:16:40,360 --> 01:16:43,650
thing to unnecessarily do some stupid

1565
01:16:42,340 --> 01:16:46,040
you know

1566
01:16:43,650 --> 01:16:50,730
to work that's really just there to and

1567
01:16:46,040 --> 01:16:53,310
but you sound very right and so that

1568
01:16:50,730 --> 01:16:55,530
actually brings us to why we're here

1569
01:16:53,310 --> 01:16:59,610
because we were invited to come and tell

1570
01:16:55,530 --> 01:17:01,830
you all about this work and indeed given

1571
01:16:59,610 --> 01:17:03,960
this this sort of dispatched like

1572
01:17:01,830 --> 01:17:08,100
structure or intention of the other work

1573
01:17:03,960 --> 01:17:09,900
we could certainly see we well the mocks

1574
01:17:08,100 --> 01:17:11,070
might working group might attract people

1575
01:17:09,900 --> 01:17:13,290
to come in and talk about video

1576
01:17:11,070 --> 01:17:15,000
challenges we can certainly vector

1577
01:17:13,290 --> 01:17:17,340
participants to come and take actual

1578
01:17:15,000 --> 01:17:19,260
multicast issues here for discussion

1579
01:17:17,340 --> 01:17:20,909
amongst people who actually will be able

1580
01:17:19,260 --> 01:17:23,250
to point them more precisely at

1581
01:17:20,909 --> 01:17:25,259
solutions so we're trying to be part of

1582
01:17:23,250 --> 01:17:27,690
the you know helpful to other working

1583
01:17:25,260 --> 01:17:30,239
groups it's not about stealing anybody

1584
01:17:27,690 --> 01:17:32,489
else's lunch yeah because it turns out

1585
01:17:30,239 --> 01:17:37,769
that you know video and multicast kind

1586
01:17:32,489 --> 01:17:40,259
of have things in common who knew yes so

1587
01:17:37,770 --> 01:17:42,390
that that's actually an you know an

1588
01:17:40,260 --> 01:17:44,610
observation I don't have a it seems at

1589
01:17:42,390 --> 01:17:46,710
times that the video folks have gone

1590
01:17:44,610 --> 01:17:49,259
taken great pains to avoid using

1591
01:17:46,710 --> 01:17:50,670
multicast when we when they clearly and

1592
01:17:49,260 --> 01:17:53,010
they will state we have this problem

1593
01:17:50,670 --> 01:17:54,870
with it's a lot of data what a man it's

1594
01:17:53,010 --> 01:17:57,630
a whole lot of stuff we got to send it

1595
01:17:54,870 --> 01:18:06,300
everywhere he's like you know we do have

1596
01:17:57,630 --> 01:18:07,710
a solution here yeah so so yeah we would

1597
01:18:06,300 --> 01:18:09,239
love the you know play role because

1598
01:18:07,710 --> 01:18:10,949
we've been trying to solve a lot of

1599
01:18:09,239 --> 01:18:12,059
these problems and we'd like to know you

1600
01:18:10,949 --> 01:18:14,129
know we would love to have better

1601
01:18:12,060 --> 01:18:17,550
feedback from the relevant groups that

1602
01:18:14,130 --> 01:18:19,260
would consume it that is this helpful is

1603
01:18:17,550 --> 01:18:21,900
this not is this something they're

1604
01:18:19,260 --> 01:18:23,610
they're aware of you know we're were you

1605
01:18:21,900 --> 01:18:27,690
know working somewhat assiduously trying

1606
01:18:23,610 --> 01:18:31,530
to come up with solutions and tools to

1607
01:18:27,690 --> 01:18:33,360
solve these problems so right so I mean

1608
01:18:31,530 --> 01:18:34,860
this is what I throw up on on slide in

1609
01:18:33,360 --> 01:18:36,690
preparation for this discussion I'm

1610
01:18:34,860 --> 01:18:39,000
happy to take suggestions for other

1611
01:18:36,690 --> 01:18:40,830
bullet points and one that pops mine

1612
01:18:39,000 --> 01:18:42,420
just now as you're describing that is

1613
01:18:40,830 --> 01:18:44,400
you know we might want to make sure to

1614
01:18:42,420 --> 01:18:46,530
have sort of a standing item depending

1615
01:18:44,400 --> 01:18:48,540
on the scheduling of you know hey the

1616
01:18:46,530 --> 01:18:50,309
other working group is meeting later

1617
01:18:48,540 --> 01:18:52,380
this week here's some topics should be

1618
01:18:50,310 --> 01:18:53,460
covered or hey we met earlier this week

1619
01:18:52,380 --> 01:18:55,440
and this is what we went over this

1620
01:18:53,460 --> 01:18:56,520
relevant to this working group I don't I

1621
01:18:55,440 --> 01:18:57,419
don't see why we couldn't do some

1622
01:18:56,520 --> 01:18:58,890
crossed some

1623
01:18:57,420 --> 01:19:01,350
purposeful cross-pollination on the

1624
01:18:58,890 --> 01:19:05,070
agenda for instance and don't schedule

1625
01:19:01,350 --> 01:19:08,610
in the same time we're updating our

1626
01:19:05,070 --> 01:19:11,759
conflict list and we will definitely add

1627
01:19:08,610 --> 01:19:14,040
you guys in there I just like that from

1628
01:19:11,760 --> 01:19:18,930
a co-chair that I see this is completely

1629
01:19:14,040 --> 01:19:23,160
complementary great great thanks thank

1630
01:19:18,930 --> 01:19:25,410
you was our last slide I think right yes

1631
01:19:23,160 --> 01:19:34,500
so thank you for sharing and we look

1632
01:19:25,410 --> 01:19:37,110
forward to collaborating and cool so

1633
01:19:34,500 --> 01:19:39,120
first blue sheets has everybody signed

1634
01:19:37,110 --> 01:19:41,250
the blue sheet there's only one it's

1635
01:19:39,120 --> 01:19:43,260
blue sheet we have a second one but I

1636
01:19:41,250 --> 01:19:44,820
don't think we need it I think we can

1637
01:19:43,260 --> 01:19:53,010
fit everybody on it try to save blue

1638
01:19:44,820 --> 01:19:56,759
trees yes and Greg did you want to we

1639
01:19:53,010 --> 01:19:58,020
have a little bit of time left over did

1640
01:19:56,760 --> 01:20:00,030
you want to give a little bit of an

1641
01:19:58,020 --> 01:20:02,310
update on beer how things are going and

1642
01:20:00,030 --> 01:20:07,320
more specifically what we and M bone D

1643
01:20:02,310 --> 01:20:08,970
should be caring about so I guess what I

1644
01:20:07,320 --> 01:20:10,590
should have done was like have a slide

1645
01:20:08,970 --> 01:20:12,870
with the RFC's and status and we're

1646
01:20:10,590 --> 01:20:17,220
moving but I think I want to throw it is

1647
01:20:12,870 --> 01:20:18,750
I I see sure I mean that's a that's a

1648
01:20:17,220 --> 01:20:20,220
chair update of the group itself but

1649
01:20:18,750 --> 01:20:22,250
what I'd say looking around the room of

1650
01:20:20,220 --> 01:20:24,720
people who I don't see in the beer room

1651
01:20:22,250 --> 01:20:26,160
each I think it's time to start paying

1652
01:20:24,720 --> 01:20:27,330
attention from an ops level there's a

1653
01:20:26,160 --> 01:20:28,920
lot of pox taking place out there

1654
01:20:27,330 --> 01:20:31,050
there's a lot of discussions some quick

1655
01:20:28,920 --> 01:20:32,550
too early deployments and I think we're

1656
01:20:31,050 --> 01:20:37,800
gonna see a lot of discussion around

1657
01:20:32,550 --> 01:20:39,480
transition mechanisms goodness so what

1658
01:20:37,800 --> 01:20:44,190
I'm looking for this type of draft

1659
01:20:39,480 --> 01:20:45,570
that's a best practices use cases things

1660
01:20:44,190 --> 01:20:48,480
that are starting to come out quite a

1661
01:20:45,570 --> 01:20:50,940
bit so if nothing more pay attention

1662
01:20:48,480 --> 01:20:53,129
maybe pay attention to the beer list

1663
01:20:50,940 --> 01:20:57,059
itself use cases would be interesting to

1664
01:20:53,130 --> 01:20:58,440
take a look at and see if you know it's

1665
01:20:57,060 --> 01:21:01,170
well representative of what you're

1666
01:20:58,440 --> 01:21:05,160
working on nothing better but ops inputs

1667
01:21:01,170 --> 01:21:06,750
are always in are valued at the protocol

1668
01:21:05,160 --> 01:21:09,059
site we can't just be doing the stuff in

1669
01:21:06,750 --> 01:21:11,930
a vacuum so pay attention subscribe to

1670
01:21:09,060 --> 01:21:11,930
the list and come have fun

1671
01:21:12,990 --> 01:21:16,830
okay with that does anybody else have it

1672
01:21:15,100 --> 01:21:27,790
no furless come on now

1673
01:21:16,830 --> 01:21:29,380
wait a minute sir what's your name I was

1674
01:21:27,790 --> 01:21:32,650
just wondering if the context was really

1675
01:21:29,380 --> 01:21:34,780
from M Bundy or from him earlier but so

1676
01:21:32,650 --> 01:21:36,490
the the the traceroute stuff is also

1677
01:21:34,780 --> 01:21:40,300
question of the API so I was talking

1678
01:21:36,490 --> 01:21:41,860
with genuine and so in in the ICMP reply

1679
01:21:40,300 --> 01:21:43,270
the question is always depending on us

1680
01:21:41,860 --> 01:21:45,130
how are many information you get back

1681
01:21:43,270 --> 01:21:48,280
you always get the port number back if

1682
01:21:45,130 --> 01:21:50,770
you don't have an API where you get more

1683
01:21:48,280 --> 01:21:52,450
back from from the payload that so the

1684
01:21:50,770 --> 01:21:54,880
safest way to get the port number back

1685
01:21:52,450 --> 01:21:56,410
different for every packet otherwise

1686
01:21:54,880 --> 01:21:58,300
you'd have to have a nonce in the

1687
01:21:56,410 --> 01:22:05,980
payload and then the API needs to have

1688
01:21:58,300 --> 01:22:09,310
sent more so cool all right with that I

1689
01:22:05,980 --> 01:22:11,049
guess we are done but you can't leave

1690
01:22:09,310 --> 01:22:14,680
so everybody the meeting is not over

1691
01:22:11,050 --> 01:22:16,300
until you know 5:50 so everybody hands

1692
01:22:14,680 --> 01:22:19,210
folded feet flat on the floors eyes

1693
01:22:16,300 --> 01:22:23,500
forward and please sit in silence for

1694
01:22:19,210 --> 01:23:10,930
the next 40 minutes thanks for coming

1695
01:22:23,500 --> 01:23:13,320
we'll see you in ETF 106 now actually we

1696
01:23:10,930 --> 01:23:13,320
wasted

1697
01:23:26,260 --> 01:23:31,100
actually it's Thomas pointed out today's

1698
01:23:29,390 --> 01:23:34,070
use for building new recruit from Hebert

1699
01:23:31,100 --> 01:23:36,770
are planted solely to prohibited motion

1700
01:23:34,070 --> 01:23:39,549
so not not in all cases hands on that

1701
01:23:36,770 --> 01:23:39,550
money species

