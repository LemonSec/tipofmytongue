1
00:00:04,670 --> 00:00:11,959
I PR guidelines of the IETF to apply we

2
00:00:09,559 --> 00:00:14,480
have the blue color pink sheets going on

3
00:00:11,959 --> 00:00:16,789
please sign them we have to note taker

4
00:00:14,480 --> 00:00:18,650
sponsor thank you around and honor but

5
00:00:16,789 --> 00:00:20,210
everyone else feel free to chime in on

6
00:00:18,650 --> 00:00:22,369
the note-taking we're using the ether

7
00:00:20,210 --> 00:00:25,119
pad you have the link of the indicated

8
00:00:22,369 --> 00:00:32,090
webpage and in the official agenda page

9
00:00:25,119 --> 00:00:35,570
is there anyone using jabber anyone who

10
00:00:32,090 --> 00:00:38,329
can use jabber perfect okay if you guys

11
00:00:35,570 --> 00:00:40,250
can join the chapel room just in case if

12
00:00:38,329 --> 00:00:42,559
there's something to relay haven't been

13
00:00:40,250 --> 00:00:45,350
too much lately but you never know as

14
00:00:42,559 --> 00:00:47,239
usual we have our github repo where you

15
00:00:45,350 --> 00:00:48,739
have the latest agenda and and slide

16
00:00:47,239 --> 00:00:53,059
material available and you can see the

17
00:00:48,739 --> 00:00:56,149
link at the bottom of the slides our

18
00:00:53,059 --> 00:00:58,309
agenda for today I some changes done

19
00:00:56,149 --> 00:00:59,960
this morning we're gonna now now

20
00:00:58,309 --> 00:01:01,010
starting with the introduction on the

21
00:00:59,960 --> 00:01:03,890
current status of the research group

22
00:01:01,010 --> 00:01:05,330
upcoming meaning activities and going on

23
00:01:03,890 --> 00:01:07,610
then holding some bit more detailed

24
00:01:05,330 --> 00:01:10,908
reports on on we see creative meetings

25
00:01:07,610 --> 00:01:15,229
oma etc after that Michael coaster will

26
00:01:10,909 --> 00:01:17,840
give us an update on the activity little

27
00:01:15,229 --> 00:01:20,360
convergence and also w3c community group

28
00:01:17,840 --> 00:01:22,340
on schema extensions after Michael

29
00:01:20,360 --> 00:01:25,280
McCool will give us an update on the web

30
00:01:22,340 --> 00:01:27,970
of things and then we have two short

31
00:01:25,280 --> 00:01:30,140
presentations one from evallo on this

32
00:01:27,970 --> 00:01:32,329
activity that we were already doing at

33
00:01:30,140 --> 00:01:35,420
Aetna Vichy and looking into how we can

34
00:01:32,329 --> 00:01:38,658
use young or object Universal parsing

35
00:01:35,420 --> 00:01:40,850
interface and Christian I'm just will

36
00:01:38,659 --> 00:01:44,090
give us an update on that new transports

37
00:01:40,850 --> 00:01:46,280
for co-op design team after that the

38
00:01:44,090 --> 00:01:48,950
second half of the meeting is gonna be

39
00:01:46,280 --> 00:01:51,140
focused on the edge so we will have Dirk

40
00:01:48,950 --> 00:01:52,969
presenting outrages of Indian

41
00:01:51,140 --> 00:01:53,360
presentation YH and IOT will never

42
00:01:52,969 --> 00:01:55,908
happen

43
00:01:53,360 --> 00:01:58,909
sparks I'm discussing there and will be

44
00:01:55,909 --> 00:02:01,130
followed by a presentation on a draft on

45
00:01:58,909 --> 00:02:04,609
problem statements on the IOT indicated

46
00:02:01,130 --> 00:02:07,310
its computing and finally a demo on H an

47
00:02:04,609 --> 00:02:10,820
IOT so looking for it very interesting

48
00:02:07,310 --> 00:02:13,690
session on h2 any questions or comments

49
00:02:10,820 --> 00:02:13,690
or basing on the agenda

50
00:02:15,120 --> 00:02:19,120
okay then let's get started just a quick

51
00:02:17,349 --> 00:02:21,129
reminder and since we may have some

52
00:02:19,120 --> 00:02:22,870
newcomers here also in the room their

53
00:02:21,129 --> 00:02:24,099
scope and goals of fielding research

54
00:02:22,870 --> 00:02:26,409
group is that we are looking into

55
00:02:24,099 --> 00:02:28,179
research issues that we can turn the

56
00:02:26,409 --> 00:02:30,189
Internet of Things into reality

57
00:02:28,180 --> 00:02:32,139
really focusing on those low resource

58
00:02:30,189 --> 00:02:33,760
nodes how they can communicate among

59
00:02:32,139 --> 00:02:37,299
themselves and also with the wider

60
00:02:33,760 --> 00:02:40,030
Internet we are looking at a big part of

61
00:02:37,299 --> 00:02:41,829
the stack but really focusing on the

62
00:02:40,030 --> 00:02:45,010
opportunities where there's potential

63
00:02:41,829 --> 00:02:46,900
for IETF standardization so we started

64
00:02:45,010 --> 00:02:48,730
the idea of taste layer and work our way

65
00:02:46,900 --> 00:02:50,650
all the way to the applications but not

66
00:02:48,730 --> 00:02:55,119
forgetting things like management and

67
00:02:50,650 --> 00:02:56,739
security one thing we're often asking is

68
00:02:55,120 --> 00:02:58,689
what's the relationship with this IOT

69
00:02:56,739 --> 00:03:00,939
work in Tilden research group and IETF

70
00:02:58,689 --> 00:03:02,680
and elsewhere there's obviously a lot of

71
00:03:00,939 --> 00:03:05,168
overlap but where we are looking at

72
00:03:02,680 --> 00:03:07,060
these research issues whereas the IETF

73
00:03:05,169 --> 00:03:09,219
side is looking for example on protocol

74
00:03:07,060 --> 00:03:11,829
engineering in part garden core working

75
00:03:09,219 --> 00:03:13,780
group a lot of those things were

76
00:03:11,829 --> 00:03:15,459
discussed are common between us but the

77
00:03:13,780 --> 00:03:17,500
standardization aspects are done in the

78
00:03:15,459 --> 00:03:19,599
core working group another idea to

79
00:03:17,500 --> 00:03:21,250
cutter's is for security but a lot of

80
00:03:19,599 --> 00:03:23,500
the research topics are explored here

81
00:03:21,250 --> 00:03:25,720
and then there's also for example dalvik

82
00:03:23,500 --> 00:03:27,849
working group in an IETF side looking

83
00:03:25,720 --> 00:03:30,009
into guidance aspects on the same area

84
00:03:27,849 --> 00:03:31,810
so that's how these are roughly working

85
00:03:30,009 --> 00:03:33,220
together and there's no clear-cut line

86
00:03:31,810 --> 00:03:39,189
but it's a lot of collaboration between

87
00:03:33,220 --> 00:03:41,650
these various groups some of the recent

88
00:03:39,189 --> 00:03:44,198
activities that we have had we've been

89
00:03:41,650 --> 00:03:47,379
running this long-running work on IOT

90
00:03:44,199 --> 00:03:49,569
semantic interoperability wishing we

91
00:03:47,379 --> 00:03:51,759
have had from bi weekly to monthly calls

92
00:03:49,569 --> 00:03:54,129
for quite some time already we had a

93
00:03:51,759 --> 00:03:56,548
couple of calls between these two ideas

94
00:03:54,129 --> 00:03:59,828
and also we are at a hackathon activity

95
00:03:56,549 --> 00:04:02,590
we also had a meeting last Friday with

96
00:03:59,829 --> 00:04:05,079
our miss peg products and we have had

97
00:04:02,590 --> 00:04:06,969
two site meetings all over to see

98
00:04:05,079 --> 00:04:08,709
related site meetings this week one

99
00:04:06,969 --> 00:04:11,829
distinct DRT work meeting this morning

100
00:04:08,709 --> 00:04:14,530
but also a related meeting on core

101
00:04:11,829 --> 00:04:17,909
applications that were most discussed in

102
00:04:14,530 --> 00:04:17,909
the score and pops of applications

103
00:04:19,700 --> 00:04:23,479
next meetings that are coming after the

104
00:04:21,709 --> 00:04:26,180
summary meeting will likely be

105
00:04:23,480 --> 00:04:27,680
continuing with these vehicles maybe on

106
00:04:26,180 --> 00:04:30,860
a monthly cadence a couple of calls

107
00:04:27,680 --> 00:04:32,600
between the few IETF s we are planning

108
00:04:30,860 --> 00:04:34,310
to continue our virtual meetings with

109
00:04:32,600 --> 00:04:35,600
ocf and home inspectors those have been

110
00:04:34,310 --> 00:04:37,310
very very valuable we I don't have

111
00:04:35,600 --> 00:04:39,230
anything scheduled right now but you

112
00:04:37,310 --> 00:04:41,660
will likely see something something show

113
00:04:39,230 --> 00:04:43,160
up and then of course in the next thing

114
00:04:41,660 --> 00:04:46,340
apart in an excited meeting in Singapore

115
00:04:43,160 --> 00:04:50,030
in November with Muslims we have a wish

116
00:04:46,340 --> 00:04:51,710
hackathon and we're also as usual in

117
00:04:50,030 --> 00:04:54,409
very interesting co-locating academic

118
00:04:51,710 --> 00:04:56,270
conferences this year or later so if you

119
00:04:54,410 --> 00:05:00,250
have any good opportunities in mind

120
00:04:56,270 --> 00:05:02,960
please to let us know but bit more

121
00:05:00,250 --> 00:05:05,720
details on potential for the Singapore

122
00:05:02,960 --> 00:05:07,700
meeting so as you know we are using

123
00:05:05,720 --> 00:05:09,590
these meetings also since we are

124
00:05:07,700 --> 00:05:11,060
travelling around and have a chance to

125
00:05:09,590 --> 00:05:12,830
interact with special specific

126
00:05:11,060 --> 00:05:14,000
communities we want to use those

127
00:05:12,830 --> 00:05:16,909
opportunities to connect with those

128
00:05:14,000 --> 00:05:18,800
communities around so in the meeting in

129
00:05:16,910 --> 00:05:20,960
Singapore there's one very obvious

130
00:05:18,800 --> 00:05:23,810
potential point of contact the Singapore

131
00:05:20,960 --> 00:05:25,280
smart nation project it's a big smart

132
00:05:23,810 --> 00:05:27,320
city project going on there right now

133
00:05:25,280 --> 00:05:29,570
and especially since they do have some

134
00:05:27,320 --> 00:05:32,420
requirements on standardisation its kind

135
00:05:29,570 --> 00:05:34,370
of fits nicely what we are looking at so

136
00:05:32,420 --> 00:05:35,990
one potential we are now looking into is

137
00:05:34,370 --> 00:05:38,360
to actually have for example before the

138
00:05:35,990 --> 00:05:42,470
IETF meeting something like a Friday

139
00:05:38,360 --> 00:05:44,660
work meeting around these topics and

140
00:05:42,470 --> 00:05:46,640
just to give you a bit of flavor on what

141
00:05:44,660 --> 00:05:48,200
it could be and there was a good

142
00:05:46,640 --> 00:05:50,810
presentation in the web of things work

143
00:05:48,200 --> 00:05:53,090
so come on a month ago from the

144
00:05:50,810 --> 00:05:54,200
Singapore smart nation and this is one

145
00:05:53,090 --> 00:05:57,260
of the slides that they use that I

146
00:05:54,200 --> 00:05:59,090
loaned with permission what they are

147
00:05:57,260 --> 00:06:02,240
what they're really aiming for so as you

148
00:05:59,090 --> 00:06:03,919
can see the smartness and platform

149
00:06:02,240 --> 00:06:05,480
solutions that they are aiming for must

150
00:06:03,920 --> 00:06:07,490
be able to demonstrate the ability to

151
00:06:05,480 --> 00:06:09,860
standardize collect and aggregate are

152
00:06:07,490 --> 00:06:11,480
you today that scale sounds of course

153
00:06:09,860 --> 00:06:13,280
very very familiar to us and also

154
00:06:11,480 --> 00:06:15,770
guaranteeing or cotton carrot and water

155
00:06:13,280 --> 00:06:18,020
resources so have security there secure

156
00:06:15,770 --> 00:06:21,979
platform end-to-end immutable records

157
00:06:18,020 --> 00:06:23,870
and also relevant use cases so we see

158
00:06:21,980 --> 00:06:26,060
there's not a potential here and we are

159
00:06:23,870 --> 00:06:28,190
now in the discussions to see what kind

160
00:06:26,060 --> 00:06:29,660
of things we could be doing so if you

161
00:06:28,190 --> 00:06:31,610
want to be involved in this please do

162
00:06:29,660 --> 00:06:33,240
let us us as chairs know or if you know

163
00:06:31,610 --> 00:06:34,949
other activities in sync

164
00:06:33,240 --> 00:06:36,690
or I think we should be engaging with

165
00:06:34,949 --> 00:06:39,030
please do let us know

166
00:06:36,690 --> 00:06:40,889
but look forward for more information

167
00:06:39,030 --> 00:06:46,859
coming on this and potential work

168
00:06:40,889 --> 00:06:49,199
meeting in the Singapore IETF 10

169
00:06:46,860 --> 00:06:53,550
research group document status we

170
00:06:49,199 --> 00:06:58,229
finally have an RFC so the state of the

171
00:06:53,550 --> 00:07:00,810
art and challenges state of the art and

172
00:06:58,229 --> 00:07:05,520
challenges variety securities now RFC 85

173
00:07:00,810 --> 00:07:06,900
76 that was a good work done by totally

174
00:07:05,520 --> 00:07:08,758
took quite some time

175
00:07:06,900 --> 00:07:12,929
get it through but now we have finally

176
00:07:08,759 --> 00:07:15,060
done it yes there's a lot of lot of

177
00:07:12,930 --> 00:07:17,310
history in various forms but you know

178
00:07:15,060 --> 00:07:20,159
security security is not easy sometimes

179
00:07:17,310 --> 00:07:23,190
take takes a while get those things

180
00:07:20,159 --> 00:07:26,039
right but of course the work doesn't

181
00:07:23,190 --> 00:07:28,110
stop there we do have also another

182
00:07:26,039 --> 00:07:29,460
research group document that has been

183
00:07:28,110 --> 00:07:30,870
going on for quite some time stressful

184
00:07:29,460 --> 00:07:33,359
design priority it's with more

185
00:07:30,870 --> 00:07:35,550
information on the next slide we also

186
00:07:33,360 --> 00:07:37,080
are planning for a whole set of other

187
00:07:35,550 --> 00:07:38,759
documents that are currently in deed or

188
00:07:37,080 --> 00:07:40,800
submissions but who do have potential of

189
00:07:38,759 --> 00:07:43,169
becoming a research group documents in

190
00:07:40,800 --> 00:07:45,690
parts go on H and IOT will be presented

191
00:07:43,169 --> 00:07:48,000
later today also secure bootstrapping

192
00:07:45,690 --> 00:07:51,180
for IOT story that has been going going

193
00:07:48,000 --> 00:07:53,219
up and down we have been working on core

194
00:07:51,180 --> 00:07:56,400
applications and in part clock or

195
00:07:53,219 --> 00:07:57,870
interfaces and thinking magus maybe some

196
00:07:56,400 --> 00:08:00,659
of that information should be turned

197
00:07:57,870 --> 00:08:03,750
into research group documents and also

198
00:08:00,659 --> 00:08:05,729
last IETF and decided we had quite a bit

199
00:08:03,750 --> 00:08:07,860
of discussions on layer 3 considerations

200
00:08:05,729 --> 00:08:10,050
on connectivity on restricting

201
00:08:07,860 --> 00:08:12,000
connection enabling connectivity we may

202
00:08:10,050 --> 00:08:14,969
want to work on some research group

203
00:08:12,000 --> 00:08:16,860
documents around that area and also in

204
00:08:14,969 --> 00:08:18,840
that context of wishi we've been

205
00:08:16,860 --> 00:08:21,719
discussing distinct concept of wishing

206
00:08:18,840 --> 00:08:23,250
notes so short notes on on the topics

207
00:08:21,719 --> 00:08:24,750
that we have been discussing what we

208
00:08:23,250 --> 00:08:27,090
have discovered what we have learned and

209
00:08:24,750 --> 00:08:28,740
maybe publishes some of those either as

210
00:08:27,090 --> 00:08:35,010
as individual documents or maybe as a

211
00:08:28,740 --> 00:08:37,320
collection of documents so restful

212
00:08:35,010 --> 00:08:39,529
design for IOT the remaining research

213
00:08:37,320 --> 00:08:42,839
groups we have right now there was a

214
00:08:39,529 --> 00:08:44,550
small update that head well as a lot of

215
00:08:42,839 --> 00:08:46,890
small updates on on this document

216
00:08:44,550 --> 00:08:47,160
in particular we added more information

217
00:08:46,890 --> 00:08:49,890
on

218
00:08:47,160 --> 00:08:52,319
these specifics was that some of the

219
00:08:49,890 --> 00:08:54,270
servers are constrained which is quite

220
00:08:52,320 --> 00:08:55,470
different from the big web where a lot

221
00:08:54,270 --> 00:08:57,630
of use of the servers are not

222
00:08:55,470 --> 00:08:59,790
constrained and also on the dual roles

223
00:08:57,630 --> 00:09:02,970
of servers and clients that they are

224
00:08:59,790 --> 00:09:04,410
usually serving both roles also one of

225
00:09:02,970 --> 00:09:06,810
the point of this document is to provide

226
00:09:04,410 --> 00:09:08,040
reference is to for more information so

227
00:09:06,810 --> 00:09:09,569
we had added whole bunch of better and

228
00:09:08,040 --> 00:09:12,420
more references across the whole

229
00:09:09,570 --> 00:09:14,700
document and then one bigger change was

230
00:09:12,420 --> 00:09:17,370
these clarifications on the push

231
00:09:14,700 --> 00:09:18,930
mechanisms and and there we are in in

232
00:09:17,370 --> 00:09:21,480
part while working on to alignment with

233
00:09:18,930 --> 00:09:23,609
a core dine link document which was

234
00:09:21,480 --> 00:09:25,530
actually updated just for this IETF so

235
00:09:23,610 --> 00:09:28,350
we also need to work on some updates on

236
00:09:25,530 --> 00:09:30,839
the restful design we're not planning

237
00:09:28,350 --> 00:09:32,820
for major more information on this

238
00:09:30,840 --> 00:09:35,310
before publishing except perhaps add

239
00:09:32,820 --> 00:09:37,620
some information on affordances and also

240
00:09:35,310 --> 00:09:40,020
some more details on coral and how that

241
00:09:37,620 --> 00:09:43,530
there is now emerging use that we see in

242
00:09:40,020 --> 00:09:44,760
in the use for IOT there is some button

243
00:09:43,530 --> 00:09:47,160
so for adding more information from

244
00:09:44,760 --> 00:09:48,420
discovery for not on IOT but we have to

245
00:09:47,160 --> 00:09:50,100
see how do you wanna align that work

246
00:09:48,420 --> 00:09:51,900
with the core interfaces and a research

247
00:09:50,100 --> 00:09:54,270
director is chest may be it's gonna be

248
00:09:51,900 --> 00:09:55,500
just a pointer to some other documents

249
00:09:54,270 --> 00:10:00,990
which have more information on

250
00:09:55,500 --> 00:10:03,180
discovering the secure boot strapping

251
00:10:00,990 --> 00:10:05,790
draft so I got a few bullets from the

252
00:10:03,180 --> 00:10:08,400
authors of that document and they what

253
00:10:05,790 --> 00:10:10,260
they wanted to highlight that in the IOT

254
00:10:08,400 --> 00:10:12,060
state-of-the-art security document they

255
00:10:10,260 --> 00:10:13,920
identified secure bootstrapping as one

256
00:10:12,060 --> 00:10:16,319
of the key challenges so they are

257
00:10:13,920 --> 00:10:18,689
planning to work on that topic in in the

258
00:10:16,320 --> 00:10:20,670
context of this document in particular

259
00:10:18,690 --> 00:10:22,650
documenting some of the terminology and

260
00:10:20,670 --> 00:10:24,930
how those terms relate to each other

261
00:10:22,650 --> 00:10:27,630
onboarding commissioning configuring etc

262
00:10:24,930 --> 00:10:29,790
it's a pretty messy field when it comes

263
00:10:27,630 --> 00:10:31,350
terminology and well same difference in

264
00:10:29,790 --> 00:10:36,030
terms used for different things and vice

265
00:10:31,350 --> 00:10:38,580
versa but this is thinking Archie so

266
00:10:36,030 --> 00:10:41,790
it's a secure bootstrapping adding his

267
00:10:38,580 --> 00:10:43,620
name of the name of the document also

268
00:10:41,790 --> 00:10:45,150
the goal is to identify common design

269
00:10:43,620 --> 00:10:48,240
assumptions and argit's are components

270
00:10:45,150 --> 00:10:49,439
that are are here and finally

271
00:10:48,240 --> 00:10:52,590
investigating the benefits and

272
00:10:49,440 --> 00:10:53,880
challenges of EAP for IOT so if you're

273
00:10:52,590 --> 00:10:55,140
interested in that that were pleased to

274
00:10:53,880 --> 00:10:59,180
check out the secure boot strapping

275
00:10:55,140 --> 00:10:59,180
document and and conduct the authors

276
00:11:00,270 --> 00:11:05,790
only she what we've been doing since the

277
00:11:04,020 --> 00:11:08,339
last two is that was meant we had two

278
00:11:05,790 --> 00:11:11,910
online meetings where we were focusing

279
00:11:08,339 --> 00:11:13,649
on these online meetings is planning for

280
00:11:11,910 --> 00:11:16,110
the hackathon we had this idea but then

281
00:11:13,649 --> 00:11:17,880
also a research agenda so what are the

282
00:11:16,110 --> 00:11:20,430
topics we should be focusing on moving

283
00:11:17,880 --> 00:11:23,189
forward in VC but also things in Archie

284
00:11:20,430 --> 00:11:26,189
at large so we have identified so far

285
00:11:23,190 --> 00:11:28,680
six topics or topic areas that seem to

286
00:11:26,190 --> 00:11:30,540
be very interesting for us in particle

287
00:11:28,680 --> 00:11:31,949
the modeling data interaction was so

288
00:11:30,540 --> 00:11:34,589
interesting that we spent most of the

289
00:11:31,950 --> 00:11:35,940
calls we had between the IETF focusing

290
00:11:34,589 --> 00:11:38,610
on that so that's clearly something

291
00:11:35,940 --> 00:11:40,410
we're gonna be going forward with and

292
00:11:38,610 --> 00:11:42,959
Michael will address some of those

293
00:11:40,410 --> 00:11:45,000
aspects in his presentation and overall

294
00:11:42,959 --> 00:11:47,010
this whole area of rest based high fiber

295
00:11:45,000 --> 00:11:49,980
media and how it works together with

296
00:11:47,010 --> 00:11:52,140
interaction and data modeling but we do

297
00:11:49,980 --> 00:11:54,810
have quite a bit of interest also on the

298
00:11:52,140 --> 00:11:57,120
connect connectivity area those layer

299
00:11:54,810 --> 00:11:58,770
three considerations and forward but

300
00:11:57,120 --> 00:12:00,000
then also in network and edge computing

301
00:11:58,770 --> 00:12:02,310
and this of course is something together

302
00:12:00,000 --> 00:12:05,010
with the co Energy we have been we have

303
00:12:02,310 --> 00:12:07,050
been exploring and never never

304
00:12:05,010 --> 00:12:10,079
forgetting security when it comes to IOT

305
00:12:07,050 --> 00:12:11,790
and and finally terminology that's

306
00:12:10,079 --> 00:12:14,670
something what we have repeatedly

307
00:12:11,790 --> 00:12:16,380
identified is very valuable to get some

308
00:12:14,670 --> 00:12:18,240
more clarity and more contribution so

309
00:12:16,380 --> 00:12:24,360
we're likely to produce some terminology

310
00:12:18,240 --> 00:12:27,060
documents going forward then quick

311
00:12:24,360 --> 00:12:29,220
report on the vichy hackathon so this

312
00:12:27,060 --> 00:12:33,300
was the sixth time we had wishing

313
00:12:29,220 --> 00:12:35,670
hackathon at this time we had roughly

314
00:12:33,300 --> 00:12:36,959
nine participants depends how many how

315
00:12:35,670 --> 00:12:38,610
do you compete all the people in the

316
00:12:36,959 --> 00:12:42,089
table couple of participants also

317
00:12:38,610 --> 00:12:44,279
remotely we had two key focus areas in

318
00:12:42,089 --> 00:12:46,800
the hackathon one was this IOT data

319
00:12:44,279 --> 00:12:51,750
model convergence and the other one was

320
00:12:46,800 --> 00:12:53,069
hypermedia for IOT and coffee making so

321
00:12:51,750 --> 00:12:55,350
briefly more on the data model

322
00:12:53,070 --> 00:12:58,020
convergence what we're working there is

323
00:12:55,350 --> 00:13:00,839
how we can use the one data model simple

324
00:12:58,020 --> 00:13:03,810
definition format to enable data and

325
00:13:00,839 --> 00:13:05,550
moral model interchange so one data

326
00:13:03,810 --> 00:13:08,369
model is new activity looking on

327
00:13:05,550 --> 00:13:10,290
consolidation of data models but Michael

328
00:13:08,370 --> 00:13:11,220
will be covering more details on that in

329
00:13:10,290 --> 00:13:14,130
a moment

330
00:13:11,220 --> 00:13:16,110
but what we did in the hackathon

331
00:13:14,130 --> 00:13:18,780
we were working on for example this tool

332
00:13:16,110 --> 00:13:20,190
that we can automatically convert if so

333
00:13:18,780 --> 00:13:22,410
like with them the models from Ole Miss

334
00:13:20,190 --> 00:13:26,400
back works the models expressed using

335
00:13:22,410 --> 00:13:29,310
the STF language and so that tool is

336
00:13:26,400 --> 00:13:33,150
currently available online you its web

337
00:13:29,310 --> 00:13:35,069
based service but also the code is open

338
00:13:33,150 --> 00:13:39,090
source you can find that in in github

339
00:13:35,070 --> 00:13:41,310
also based on this work we did find some

340
00:13:39,090 --> 00:13:43,020
good improvement suggestions for the STF

341
00:13:41,310 --> 00:13:44,670
language in particular on the data type

342
00:13:43,020 --> 00:13:46,890
schema and constraints that we are now

343
00:13:44,670 --> 00:13:50,370
implementing on on the STF language

344
00:13:46,890 --> 00:13:52,189
itself also one contribution of the

345
00:13:50,370 --> 00:13:55,470
hackathon was this tool for generating

346
00:13:52,190 --> 00:13:57,810
schemas in CDL as you know CD deal with

347
00:13:55,470 --> 00:14:00,030
what we are widely using instead of JSON

348
00:13:57,810 --> 00:14:03,900
schema native context so we can turn the

349
00:14:00,030 --> 00:14:05,459
chasing schemas of of SDF also into CD

350
00:14:03,900 --> 00:14:09,720
deal and use the CD deal tools for that

351
00:14:05,460 --> 00:14:12,090
and as a side product we did end up also

352
00:14:09,720 --> 00:14:14,520
designing at least a first proposal for

353
00:14:12,090 --> 00:14:16,770
JSON format for coral so that enables

354
00:14:14,520 --> 00:14:22,560
you to use your chasing cooling in in

355
00:14:16,770 --> 00:14:24,030
context of coral applications one

356
00:14:22,560 --> 00:14:26,760
activity related test was this binary

357
00:14:24,030 --> 00:14:29,069
data extraction so avala was working on

358
00:14:26,760 --> 00:14:32,430
on on tooling that could extract a

359
00:14:29,070 --> 00:14:34,350
binary data using young and there was a

360
00:14:32,430 --> 00:14:36,239
problem statement written on that and

361
00:14:34,350 --> 00:14:38,910
also evolved and deployed a playground

362
00:14:36,240 --> 00:14:40,560
deployment as we will hear bit more bit

363
00:14:38,910 --> 00:14:42,600
more about that and the whole young

364
00:14:40,560 --> 00:14:44,699
object Universal parsing interface in

365
00:14:42,600 --> 00:14:50,070
develops presentation it was also a good

366
00:14:44,700 --> 00:14:51,690
activity at the IETF hackathon and the

367
00:14:50,070 --> 00:14:54,540
other main area was disproving coffee

368
00:14:51,690 --> 00:14:56,610
with hyper media so you as you all know

369
00:14:54,540 --> 00:14:59,760
I mean making making coffee has been the

370
00:14:56,610 --> 00:15:03,300
grand goal of IOT since the 1990s and

371
00:14:59,760 --> 00:15:04,980
the time of the hypertext coffee pod

372
00:15:03,300 --> 00:15:07,560
control protocol so what we are doing

373
00:15:04,980 --> 00:15:09,990
here in the hackathon we were taking a

374
00:15:07,560 --> 00:15:12,449
look at the same topic area with more

375
00:15:09,990 --> 00:15:14,460
modern tools and techniques and part

376
00:15:12,450 --> 00:15:17,430
about what can coral and coop

377
00:15:14,460 --> 00:15:19,860
do here so we have a reference scenario

378
00:15:17,430 --> 00:15:22,140
that is what we'll be working on it's

379
00:15:19,860 --> 00:15:25,020
called carrier-grade coffee machine also

380
00:15:22,140 --> 00:15:26,880
known as Karstens coffee machine what we

381
00:15:25,020 --> 00:15:27,279
were doing with with that the reference

382
00:15:26,880 --> 00:15:30,160
in our

383
00:15:27,279 --> 00:15:31,389
is that you or describing the coffee

384
00:15:30,160 --> 00:15:34,329
machine using hypermedia

385
00:15:31,389 --> 00:15:35,589
and make it discoverable and you we had

386
00:15:34,329 --> 00:15:36,849
hypermedia clients that were

387
00:15:35,589 --> 00:15:38,829
automatically will to discover different

388
00:15:36,850 --> 00:15:40,449
menu options but you wanna have a lot

389
00:15:38,829 --> 00:15:42,910
there or a cappuccino maybe with a

390
00:15:40,449 --> 00:15:44,979
that's a whiskey on top i know it made

391
00:15:42,910 --> 00:15:47,819
me be able to make the coffee selections

392
00:15:44,980 --> 00:15:50,230
and then execute on on the brewing part

393
00:15:47,819 --> 00:15:51,910
so we have now two open-source

394
00:15:50,230 --> 00:15:54,009
implementations using Quraan Khoa

395
00:15:51,910 --> 00:15:55,389
being able to do all of that the brewing

396
00:15:54,009 --> 00:15:56,559
part is maybe something a bit

397
00:15:55,389 --> 00:15:58,300
work-in-progress you actually have to

398
00:15:56,559 --> 00:16:00,129
plug in a real coffee machine there but

399
00:15:58,300 --> 00:16:02,529
the whole application logic is already

400
00:16:00,129 --> 00:16:04,870
there they're running both on riot OS on

401
00:16:02,529 --> 00:16:07,029
an actual IOT port and then also a

402
00:16:04,870 --> 00:16:08,709
python implementation that the christian

403
00:16:07,029 --> 00:16:10,180
was working on and they're the

404
00:16:08,709 --> 00:16:16,959
presentations you have links for both

405
00:16:10,180 --> 00:16:20,529
implementations then finally we had this

406
00:16:16,959 --> 00:16:22,479
last Friday the meeting with OMA spec

407
00:16:20,529 --> 00:16:25,089
works so this is a part of our long-term

408
00:16:22,480 --> 00:16:27,550
collaboration and coordination work with

409
00:16:25,089 --> 00:16:30,730
OMA that we are exchanging information

410
00:16:27,550 --> 00:16:33,128
and making sure that our protocols and

411
00:16:30,730 --> 00:16:34,269
data models are used in a good way you

412
00:16:33,129 --> 00:16:36,579
know in Maine but also that the

413
00:16:34,269 --> 00:16:40,029
requirement that OMA has are addressed

414
00:16:36,579 --> 00:16:42,939
by the IETF so we had a very good luck

415
00:16:40,029 --> 00:16:44,889
within the tutorial by Hannes by the way

416
00:16:42,939 --> 00:16:46,059
all these materials are available in in

417
00:16:44,889 --> 00:16:48,430
the meeting github if you want to go

418
00:16:46,059 --> 00:16:50,170
check them out we had also a good

419
00:16:48,430 --> 00:16:51,790
presentation on the whole object

420
00:16:50,170 --> 00:16:53,410
registry model if so like within the

421
00:16:51,790 --> 00:16:55,809
object and like with them doing

422
00:16:53,410 --> 00:16:57,279
requirements going forward but too OMA

423
00:16:55,809 --> 00:17:00,879
will be working on for the next version

424
00:16:57,279 --> 00:17:03,040
of the protocol and data models we did

425
00:17:00,879 --> 00:17:06,399
also discuss document dependencies

426
00:17:03,040 --> 00:17:09,069
between OMA and IETF in particle

427
00:17:06,398 --> 00:17:11,648
research directly dining corpora SMS and

428
00:17:09,069 --> 00:17:15,030
cinema registry some of those will be

429
00:17:11,648 --> 00:17:18,369
discussed tomorrow in the core meeting

430
00:17:15,030 --> 00:17:20,859
we also had a dis unconference style

431
00:17:18,369 --> 00:17:22,958
discussion so they were a bunch of

432
00:17:20,859 --> 00:17:25,000
topics that could be proposed any are of

433
00:17:22,959 --> 00:17:27,520
interest of all of these communities and

434
00:17:25,000 --> 00:17:29,730
then we will discuss those in on former

435
00:17:27,520 --> 00:17:31,929
fashion we had a whole long list of

436
00:17:29,730 --> 00:17:33,789
ideas but unfortunately we had a chance

437
00:17:31,929 --> 00:17:36,010
to only tackle three of them cause so

438
00:17:33,789 --> 00:17:38,379
long and interesting discussions on all

439
00:17:36,010 --> 00:17:41,110
of them but again data model convergence

440
00:17:38,380 --> 00:17:42,940
between live with m2 m1 DM in particular

441
00:17:41,110 --> 00:17:44,979
we were discussing and also the role of

442
00:17:42,940 --> 00:17:46,720
the the modern hybrid media formats such

443
00:17:44,980 --> 00:17:48,670
as a score corinne format and an

444
00:17:46,720 --> 00:17:51,370
internal choral when it when it comes to

445
00:17:48,670 --> 00:17:52,750
like with them to him and also briefly

446
00:17:51,370 --> 00:17:55,090
touch the access control modeling

447
00:17:52,750 --> 00:17:56,740
aspects unfortunately I don't have more

448
00:17:55,090 --> 00:17:58,209
time on that topic today but you can go

449
00:17:56,740 --> 00:18:04,090
and check out the meeting minutes on the

450
00:17:58,210 --> 00:18:06,880
github page that was the brief report

451
00:18:04,090 --> 00:18:10,449
from Archie current status and and

452
00:18:06,880 --> 00:18:16,210
recent activities any questions or

453
00:18:10,450 --> 00:18:34,660
comments before we move forward okay in

454
00:18:16,210 --> 00:18:36,460
that case thank you and Michael okay you

455
00:18:34,660 --> 00:18:38,410
know the topic is IOT data model

456
00:18:36,460 --> 00:18:40,330
convergence I'm going to talk about two

457
00:18:38,410 --> 00:18:43,809
activities that are going on one is

458
00:18:40,330 --> 00:18:46,720
extensions to schema.org for IOT and the

459
00:18:43,809 --> 00:18:50,950
other is one data model as Ari just

460
00:18:46,720 --> 00:18:52,630
mentioned so for IOT extensions what we

461
00:18:50,950 --> 00:18:55,240
want to do is extend what we're working

462
00:18:52,630 --> 00:18:59,470
on is extending the schema.org model to

463
00:18:55,240 --> 00:19:03,120
accommodate IOT semantics and schema.org

464
00:18:59,470 --> 00:19:05,890
if you don't know is a public online

465
00:19:03,120 --> 00:19:09,189
resource that provides semantic

466
00:19:05,890 --> 00:19:11,559
interoperability for for web pages

467
00:19:09,190 --> 00:19:13,870
basically is currently being used it

468
00:19:11,559 --> 00:19:15,790
contains a lot of information and

469
00:19:13,870 --> 00:19:17,979
semantic definitions for things you

470
00:19:15,790 --> 00:19:20,860
might find in a web page around

471
00:19:17,980 --> 00:19:22,750
e-commerce or you know trying to do

472
00:19:20,860 --> 00:19:24,699
something on the web and it was

473
00:19:22,750 --> 00:19:27,190
originally started for search engine

474
00:19:24,700 --> 00:19:30,190
optimization but it's turned into a

475
00:19:27,190 --> 00:19:34,090
semantic interoperability framework so

476
00:19:30,190 --> 00:19:36,299
we're we're extending that in order that

477
00:19:34,090 --> 00:19:39,870
these be open and publicly available and

478
00:19:36,299 --> 00:19:42,730
everyone can have access to these models

479
00:19:39,870 --> 00:19:45,668
so we've started we're starting to

480
00:19:42,730 --> 00:19:49,000
develop models for sensors and actuators

481
00:19:45,669 --> 00:19:50,950
as the first step recognizing that the

482
00:19:49,000 --> 00:19:54,120
whole problem is really much larger than

483
00:19:50,950 --> 00:19:56,159
that but you have to start somewhere

484
00:19:54,120 --> 00:19:58,559
so we're we're also connecting those

485
00:19:56,159 --> 00:20:00,350
semantics to what we call features of

486
00:19:58,559 --> 00:20:02,490
interest and I have a little more

487
00:20:00,350 --> 00:20:05,668
description of what that is a little

488
00:20:02,490 --> 00:20:07,980
later these definitions are currently

489
00:20:05,669 --> 00:20:10,320
based on an emerging meta model that's

490
00:20:07,980 --> 00:20:12,500
pretty popular across different device

491
00:20:10,320 --> 00:20:16,678
vendors and different service providers

492
00:20:12,500 --> 00:20:19,049
and it's a sort of an affordance model

493
00:20:16,679 --> 00:20:21,570
consisting of properties actions and

494
00:20:19,049 --> 00:20:24,418
events and those things are rolled up

495
00:20:21,570 --> 00:20:26,250
into what we call capabilities and I

496
00:20:24,419 --> 00:20:29,090
have some more detail about that as well

497
00:20:26,250 --> 00:20:32,010
and we're building a community

498
00:20:29,090 --> 00:20:34,799
contribution process that's modeled

499
00:20:32,010 --> 00:20:38,039
after how schema.org works but it's

500
00:20:34,799 --> 00:20:42,899
intended to include a much larger set of

501
00:20:38,039 --> 00:20:45,720
contributors and reviewers so the meta

502
00:20:42,899 --> 00:20:48,719
model is basically a semantic model for

503
00:20:45,720 --> 00:20:51,390
the affordances that a device or

504
00:20:48,720 --> 00:20:52,649
something offers for software to

505
00:20:51,390 --> 00:20:55,529
interact with it we call those

506
00:20:52,649 --> 00:20:57,600
interaction affordances there's property

507
00:20:55,529 --> 00:21:00,059
which is some readable and writeable

508
00:20:57,600 --> 00:21:02,820
piece of state there's an action which

509
00:21:00,059 --> 00:21:05,760
is how software induces a state change

510
00:21:02,820 --> 00:21:08,010
through some parameterization so things

511
00:21:05,760 --> 00:21:10,770
that are more sophisticated than just

512
00:21:08,010 --> 00:21:12,149
updating some resource but actually you

513
00:21:10,770 --> 00:21:14,039
know want to set something into motion

514
00:21:12,149 --> 00:21:18,178
or whatever and then there are events

515
00:21:14,039 --> 00:21:20,789
which is how the the device or thing

516
00:21:18,179 --> 00:21:22,770
sends information back when when

517
00:21:20,789 --> 00:21:24,870
something changes so it could be a state

518
00:21:22,770 --> 00:21:27,629
change it could be a message describing

519
00:21:24,870 --> 00:21:29,610
something that happened and it can be

520
00:21:27,630 --> 00:21:34,950
delivered asynchronously using observe

521
00:21:29,610 --> 00:21:37,889
or some kind of message protocol the

522
00:21:34,950 --> 00:21:40,260
meta model has this concept of a

523
00:21:37,890 --> 00:21:42,570
capability that basically rolls at the

524
00:21:40,260 --> 00:21:45,480
set of events actions and properties

525
00:21:42,570 --> 00:21:48,049
together to do some common function like

526
00:21:45,480 --> 00:21:50,220
you know temperature measurement or

527
00:21:48,049 --> 00:21:52,379
controlling temperature or turning

528
00:21:50,220 --> 00:21:55,080
something on and off so we try to keep

529
00:21:52,380 --> 00:21:56,970
these you know small and granular so we

530
00:21:55,080 --> 00:21:58,949
have a system where you can compose

531
00:21:56,970 --> 00:22:00,750
things but they could be larger

532
00:21:58,950 --> 00:22:03,049
aggregations like you could describe an

533
00:22:00,750 --> 00:22:05,520
air conditioner as a capability or a

534
00:22:03,049 --> 00:22:07,230
pump in an industrial setting as a

535
00:22:05,520 --> 00:22:10,320
capability as well

536
00:22:07,230 --> 00:22:12,600
and we also define datatypes and the

537
00:22:10,320 --> 00:22:14,639
main purpose that there is to associate

538
00:22:12,600 --> 00:22:18,000
semantic meaning with a piece of data

539
00:22:14,639 --> 00:22:22,649
that you're sending back and forth as an

540
00:22:18,000 --> 00:22:24,389
event or or action and also provides

541
00:22:22,649 --> 00:22:27,059
some data constraints like you might

542
00:22:24,389 --> 00:22:34,229
have to say something is a string type

543
00:22:27,059 --> 00:22:36,600
or number type or boolean type so that's

544
00:22:34,230 --> 00:22:38,750
basically a diagram of the model you

545
00:22:36,600 --> 00:22:41,459
know if capabilities that provide

546
00:22:38,750 --> 00:22:44,580
interaction affordances of types events

547
00:22:41,460 --> 00:22:47,730
actions and properties and they exchange

548
00:22:44,580 --> 00:22:50,010
data items that are data typed and

549
00:22:47,730 --> 00:22:52,169
that's really our whole our whole model

550
00:22:50,010 --> 00:22:54,149
it's really pretty simple and it

551
00:22:52,169 --> 00:22:56,399
overlaps with a lot of what other

552
00:22:54,149 --> 00:23:01,070
organizations and vendors are already

553
00:22:56,399 --> 00:23:05,399
using in terms of semantic definitions

554
00:23:01,070 --> 00:23:07,168
so we also though recognize that just

555
00:23:05,399 --> 00:23:08,820
saying here's a temperature sensor

556
00:23:07,169 --> 00:23:11,309
doesn't really do much good in terms of

557
00:23:08,820 --> 00:23:13,678
semantics so it's really important to be

558
00:23:11,309 --> 00:23:15,779
able to connect these capabilities to

559
00:23:13,679 --> 00:23:17,820
things in the real world and and and

560
00:23:15,779 --> 00:23:20,940
we're using the concept of feature of

561
00:23:17,820 --> 00:23:23,760
interest from existing ontologies to to

562
00:23:20,940 --> 00:23:25,850
form those relations so a couple of

563
00:23:23,760 --> 00:23:27,899
examples of ontology x' that are

564
00:23:25,850 --> 00:23:31,080
contained features of interests that are

565
00:23:27,899 --> 00:23:33,299
at layer features like a brick schema

566
00:23:31,080 --> 00:23:34,799
has a bunch of definitions from haystack

567
00:23:33,299 --> 00:23:37,590
that talk about things that you might

568
00:23:34,799 --> 00:23:40,590
find in a in a building and maybe mostly

569
00:23:37,590 --> 00:23:42,750
HVAC systems in a building but but other

570
00:23:40,590 --> 00:23:44,789
things as well and then there's some

571
00:23:42,750 --> 00:23:47,279
work on this thing called Giannini that

572
00:23:44,789 --> 00:23:50,279
describes all of the components of an

573
00:23:47,279 --> 00:23:53,190
automobile and in many different views

574
00:23:50,279 --> 00:23:56,190
of that mostly for ivi which they call

575
00:23:53,190 --> 00:23:58,049
in-vehicle infotainment or info systems

576
00:23:56,190 --> 00:23:59,760
but but also describes the engine and

577
00:23:58,049 --> 00:24:01,830
the powertrain and the wheels and the

578
00:23:59,760 --> 00:24:05,549
tires and the doors and their you know

579
00:24:01,830 --> 00:24:06,720
seats and all of that stuff additionally

580
00:24:05,549 --> 00:24:08,639
you know you have the problem of

581
00:24:06,720 --> 00:24:10,049
quantities in engineering units and

582
00:24:08,639 --> 00:24:12,719
things like that and there are existing

583
00:24:10,049 --> 00:24:16,289
ontology that already described those so

584
00:24:12,720 --> 00:24:17,580
our intention is to connect to those in

585
00:24:16,289 --> 00:24:20,640
addition there are some more base

586
00:24:17,580 --> 00:24:24,210
basically Tala G's such as SSN and so

587
00:24:20,640 --> 00:24:26,010
si ref that that have concepts that are

588
00:24:24,210 --> 00:24:28,860
useful as well so we want to be able to

589
00:24:26,010 --> 00:24:31,590
use those to extend the definition and

590
00:24:28,860 --> 00:24:33,840
this is all being done in various RDF

591
00:24:31,590 --> 00:24:37,590
languages a JSON schema and turtle

592
00:24:33,840 --> 00:24:39,330
things like that so the this integration

593
00:24:37,590 --> 00:24:41,280
allows us to take a feature of interest

594
00:24:39,330 --> 00:24:43,949
like something in a building or a room

595
00:24:41,280 --> 00:24:47,220
or a floor or you know part of a

596
00:24:43,950 --> 00:24:49,140
automobile apply an IOT schema

597
00:24:47,220 --> 00:24:53,160
definition that tells you how to sense

598
00:24:49,140 --> 00:24:55,860
it or actuate it and then also combine

599
00:24:53,160 --> 00:24:57,660
that with the parameters of data that

600
00:24:55,860 --> 00:24:59,790
you exchange with it so the software

601
00:24:57,660 --> 00:25:01,980
knows sort of what is what it's

602
00:24:59,790 --> 00:25:03,540
interacting with and what influence is

603
00:25:01,980 --> 00:25:05,669
expected to have in the physical world

604
00:25:03,540 --> 00:25:08,159
and also sort of what kind of data to

605
00:25:05,669 --> 00:25:12,120
send it so this is getting pretty close

606
00:25:08,160 --> 00:25:16,410
to an end-to-end bare-bones semantic

607
00:25:12,120 --> 00:25:18,689
system and these look like like this

608
00:25:16,410 --> 00:25:20,820
that's the same basic interaction model

609
00:25:18,690 --> 00:25:24,690
with events actions properties data's

610
00:25:20,820 --> 00:25:27,299
data schemas as data types connected

611
00:25:24,690 --> 00:25:29,520
through various RDF property types two

612
00:25:27,299 --> 00:25:31,020
features of interest like has feature of

613
00:25:29,520 --> 00:25:33,629
interest you could just say this this

614
00:25:31,020 --> 00:25:35,280
has a feature of interest you can say

615
00:25:33,630 --> 00:25:38,690
this is a property of or this is

616
00:25:35,280 --> 00:25:41,639
associated with there's a set of

617
00:25:38,690 --> 00:25:45,419
relation types or property types in RDF

618
00:25:41,640 --> 00:25:47,910
that we're creating to to enable this

619
00:25:45,419 --> 00:25:49,890
and of course these are all extensible

620
00:25:47,910 --> 00:25:51,780
we can create some types today and some

621
00:25:49,890 --> 00:25:57,570
new ones tomorrow and they all work

622
00:25:51,780 --> 00:26:00,149
together through the magic of RDF so the

623
00:25:57,570 --> 00:26:01,799
status of this is that there are a set

624
00:26:00,150 --> 00:26:04,559
of prototype definitions that we've been

625
00:26:01,799 --> 00:26:07,830
working on and we've been using them

626
00:26:04,559 --> 00:26:11,370
mostly in the web of things work in the

627
00:26:07,830 --> 00:26:14,428
plug fests and in generating example web

628
00:26:11,370 --> 00:26:17,668
of things thing description documents to

629
00:26:14,429 --> 00:26:21,390
layer semantic interoperability on the

630
00:26:17,669 --> 00:26:24,570
on web of things so a web of things uses

631
00:26:21,390 --> 00:26:26,910
the same basic concepts events actions

632
00:26:24,570 --> 00:26:30,270
properties and we just provide the

633
00:26:26,910 --> 00:26:32,580
application layer vocabulary so that an

634
00:26:30,270 --> 00:26:34,350
application can identify which which

635
00:26:32,580 --> 00:26:37,590
thing which type of thing which I

636
00:26:34,350 --> 00:26:41,399
of event action property and then the

637
00:26:37,590 --> 00:26:44,340
web of things format basically explains

638
00:26:41,400 --> 00:26:48,000
how to operate the API for that and how

639
00:26:44,340 --> 00:26:49,918
to operate the security sort of a sort

640
00:26:48,000 --> 00:26:51,630
of a binding to an instance of something

641
00:26:49,919 --> 00:26:55,950
in the real world that expresses these

642
00:26:51,630 --> 00:26:57,150
semantic properties we have some

643
00:26:55,950 --> 00:26:59,429
high-level interoperability

644
00:26:57,150 --> 00:27:02,309
demonstrations using node-red where you

645
00:26:59,429 --> 00:27:05,299
essentially feed in the semantic terms

646
00:27:02,309 --> 00:27:08,668
and the API is can be generated through

647
00:27:05,299 --> 00:27:10,580
through some automation and we're

648
00:27:08,669 --> 00:27:14,130
currently working on a submission

649
00:27:10,580 --> 00:27:16,350
process so if you want to make some new

650
00:27:14,130 --> 00:27:18,120
semantic definitions fill out a form and

651
00:27:16,350 --> 00:27:20,459
submit it and we have some automation

652
00:27:18,120 --> 00:27:24,809
behind that that that creates the

653
00:27:20,460 --> 00:27:27,720
proposed RDF instances for that we have

654
00:27:24,809 --> 00:27:31,980
a w3c community group schema extensions

655
00:27:27,720 --> 00:27:33,870
for IOT that is still ramping up we you

656
00:27:31,980 --> 00:27:35,760
know the membership is increasing and we

657
00:27:33,870 --> 00:27:39,270
need to do a little outreach and build

658
00:27:35,760 --> 00:27:41,370
that up but that's going to be the the

659
00:27:39,270 --> 00:27:43,168
venue for contributions so there are

660
00:27:41,370 --> 00:27:45,178
some IPR agreements that you make when

661
00:27:43,169 --> 00:27:48,690
you join these groups and that basically

662
00:27:45,179 --> 00:27:52,260
gives people a framework to submit their

663
00:27:48,690 --> 00:27:54,240
information in a way that's IPR safe and

664
00:27:52,260 --> 00:27:58,679
we have monthly teleconferences there's

665
00:27:54,240 --> 00:28:04,890
the next one is tomorrow at noon eastern

666
00:27:58,679 --> 00:28:06,360
time here now the other thing that that

667
00:28:04,890 --> 00:28:08,610
we're working on it's just a newly

668
00:28:06,360 --> 00:28:14,070
emerging activity called one data model

669
00:28:08,610 --> 00:28:16,459
and this was driven mostly by SD o--'s

670
00:28:14,070 --> 00:28:20,428
and vendors that from their perspective

671
00:28:16,460 --> 00:28:22,620
they don't want to compete anymore on

672
00:28:20,429 --> 00:28:25,039
saying their data model is so special

673
00:28:22,620 --> 00:28:27,209
that you can only use their stuff

674
00:28:25,039 --> 00:28:29,400
there's a lot of motivation now to

675
00:28:27,210 --> 00:28:32,100
normalize across all these different

676
00:28:29,400 --> 00:28:35,460
data models so they're they're driving

677
00:28:32,100 --> 00:28:37,678
convergence and that what we're working

678
00:28:35,460 --> 00:28:39,780
on first is developing a common

679
00:28:37,679 --> 00:28:41,850
definition language that can be used to

680
00:28:39,780 --> 00:28:45,530
describe all of these different types of

681
00:28:41,850 --> 00:28:45,530
devices and and things

682
00:28:46,980 --> 00:28:53,650
that's that's really the first challenge

683
00:28:50,260 --> 00:28:55,720
and and you know to put a point on it

684
00:28:53,650 --> 00:28:59,470
it's not an API description it's not

685
00:28:55,720 --> 00:29:01,900
something like swagger or anything like

686
00:28:59,470 --> 00:29:04,450
that it's it's semantics only I have a

687
00:29:01,900 --> 00:29:06,640
couple of examples and it depends on

688
00:29:04,450 --> 00:29:10,360
having a way of binding a protocol to

689
00:29:06,640 --> 00:29:13,900
this to actually use it in the system so

690
00:29:10,360 --> 00:29:16,389
something like a w3c web of things thing

691
00:29:13,900 --> 00:29:19,270
description can contain a protocol

692
00:29:16,390 --> 00:29:22,420
binding we can use swagger as a protocol

693
00:29:19,270 --> 00:29:24,820
binding or open API and I think it's

694
00:29:22,420 --> 00:29:27,250
really interesting to consider using

695
00:29:24,820 --> 00:29:31,419
something like coral and combining this

696
00:29:27,250 --> 00:29:33,550
this these semantic terms with a coral

697
00:29:31,420 --> 00:29:36,070
document to provide a REST API

698
00:29:33,550 --> 00:29:39,970
description that has semantic annotation

699
00:29:36,070 --> 00:29:41,770
and that's that would enable you to put

700
00:29:39,970 --> 00:29:43,630
in the terms for events actions

701
00:29:41,770 --> 00:29:45,190
properties and features of interest and

702
00:29:43,630 --> 00:29:49,510
have a complete semantics plus

703
00:29:45,190 --> 00:29:51,190
operational description in one data

704
00:29:49,510 --> 00:29:53,500
model we're using essentially the same

705
00:29:51,190 --> 00:29:58,600
meta model as IOT schema the same

706
00:29:53,500 --> 00:30:01,690
popular industry common industry set of

707
00:29:58,600 --> 00:30:04,270
affordance descriptions and most

708
00:30:01,690 --> 00:30:05,980
interestingly I think will end up being

709
00:30:04,270 --> 00:30:08,470
able to use one data model as a

710
00:30:05,980 --> 00:30:11,230
front-end for IOT schema definitions as

711
00:30:08,470 --> 00:30:13,540
well so if these device vendors end up

712
00:30:11,230 --> 00:30:15,550
creating one data model format

713
00:30:13,540 --> 00:30:19,120
descriptions for all their devices they

714
00:30:15,550 --> 00:30:21,940
will be relatively easy to turn into IOT

715
00:30:19,120 --> 00:30:29,020
schema definitions and host them on the

716
00:30:21,940 --> 00:30:32,200
web in rdf so we've built a little DSL

717
00:30:29,020 --> 00:30:34,330
domain-specific JSON format for this and

718
00:30:32,200 --> 00:30:36,670
this is really this is an example of the

719
00:30:34,330 --> 00:30:38,169
JSON but if you strip out some of the

720
00:30:36,670 --> 00:30:41,950
point Shu a ssin it's easier to see

721
00:30:38,170 --> 00:30:44,470
what's going on here and essentially

722
00:30:41,950 --> 00:30:47,080
it's it's making the same kind of

723
00:30:44,470 --> 00:30:49,900
definitions you would make in RDF but

724
00:30:47,080 --> 00:30:51,879
just using JSON so you essentially have

725
00:30:49,900 --> 00:30:55,720
here's a definition that I'm making and

726
00:30:51,880 --> 00:30:59,380
here are its terms and here are the

727
00:30:55,720 --> 00:31:02,080
definitions of the terms so in green

728
00:30:59,380 --> 00:31:07,000
we see you're defining switch having a

729
00:31:02,080 --> 00:31:09,850
value property that's a type string and

730
00:31:07,000 --> 00:31:12,850
it can contain one of two values on or

731
00:31:09,850 --> 00:31:16,270
off in the string and then we're

732
00:31:12,850 --> 00:31:19,480
defining a couple of actions an action

733
00:31:16,270 --> 00:31:22,240
to turn on and an action to turn off so

734
00:31:19,480 --> 00:31:26,700
this is pretty much the simplest on/off

735
00:31:22,240 --> 00:31:26,700
capability model that we could express

736
00:31:26,910 --> 00:31:33,429
and the there's a JSON schema and a

737
00:31:30,730 --> 00:31:35,590
markdown document in a public repository

738
00:31:33,429 --> 00:31:41,080
we're doing the development of this

739
00:31:35,590 --> 00:31:42,879
language in the open and certainly would

740
00:31:41,080 --> 00:31:46,000
would welcome if anyone's interested

741
00:31:42,880 --> 00:31:51,640
github issues comments on what we're

742
00:31:46,000 --> 00:31:53,350
doing I can't really talk about the

743
00:31:51,640 --> 00:31:55,750
whole list of all the people that are

744
00:31:53,350 --> 00:31:58,780
involved but there are a number of

745
00:31:55,750 --> 00:32:03,669
well-known organizations involved and we

746
00:31:58,780 --> 00:32:05,500
would welcome more the status of this is

747
00:32:03,669 --> 00:32:08,320
we've been working on it for about six

748
00:32:05,500 --> 00:32:11,200
months it was suggested from one of the

749
00:32:08,320 --> 00:32:12,939
ZB hive meetings where they bring in

750
00:32:11,200 --> 00:32:14,710
people from across industry to talk

751
00:32:12,940 --> 00:32:18,309
about what some of the big problems are

752
00:32:14,710 --> 00:32:20,080
and the consensus was one of the big

753
00:32:18,309 --> 00:32:22,240
problems was lack of a common data model

754
00:32:20,080 --> 00:32:25,960
so we went to create this group to

755
00:32:22,240 --> 00:32:28,150
address it it's not an organization it's

756
00:32:25,960 --> 00:32:31,750
really a Federation of separate

757
00:32:28,150 --> 00:32:34,510
organizations and invited experts and

758
00:32:31,750 --> 00:32:36,880
we're operating under leis on agreements

759
00:32:34,510 --> 00:32:39,970
currently we have weekly teleconferences

760
00:32:36,880 --> 00:32:42,909
to discuss both the legal aspect of how

761
00:32:39,970 --> 00:32:46,030
all this stuff gets licensed so everyone

762
00:32:42,909 --> 00:32:50,130
can use it as well as the technical

763
00:32:46,030 --> 00:32:52,149
development and mostly working on

764
00:32:50,130 --> 00:32:54,220
progressing the language description

765
00:32:52,150 --> 00:32:56,409
right now and testing it against taking

766
00:32:54,220 --> 00:32:59,350
of these models from these different

767
00:32:56,409 --> 00:33:02,710
organizations and seeing how well it

768
00:32:59,350 --> 00:33:04,928
works to to build one data model

769
00:33:02,710 --> 00:33:07,210
representations of them and we have

770
00:33:04,929 --> 00:33:09,760
participation from a number of members

771
00:33:07,210 --> 00:33:11,710
of the thing to thing research group and

772
00:33:09,760 --> 00:33:16,560
was she involved

773
00:33:11,710 --> 00:33:16,560
hmmm I think that's it

774
00:33:22,120 --> 00:33:29,429
questions comments okay good schedule

775
00:33:39,600 --> 00:33:46,899
okay so I'm gonna give an update on the

776
00:33:42,270 --> 00:33:50,350
w3c web of Things project which is

777
00:33:46,900 --> 00:33:53,350
actually just wrapping up its first two

778
00:33:50,350 --> 00:33:54,520
your charter and actually there's an

779
00:33:53,350 --> 00:33:58,360
interest group and there's a working

780
00:33:54,520 --> 00:34:01,000
group inside w3c and overall is about

781
00:33:58,360 --> 00:34:04,929
200 participants different organizations

782
00:34:01,000 --> 00:34:06,130
and people universities for example we

783
00:34:04,930 --> 00:34:10,030
just had a workshop which is mentioned

784
00:34:06,130 --> 00:34:11,530
briefly where we discussed even charter

785
00:34:10,030 --> 00:34:13,390
for the next round of standardization

786
00:34:11,530 --> 00:34:16,420
but we also discussed various

787
00:34:13,389 --> 00:34:20,679
applications and use of semantics for

788
00:34:16,420 --> 00:34:23,590
example in the in the in the IOT we also

789
00:34:20,679 --> 00:34:25,299
have two documents let me describe in

790
00:34:23,590 --> 00:34:28,930
some detail that are now candidly

791
00:34:25,300 --> 00:34:31,360
recommendations and are on req track we

792
00:34:28,929 --> 00:34:35,679
also several the notes that are not very

793
00:34:31,360 --> 00:34:37,720
informative that are also some of them

794
00:34:35,679 --> 00:34:41,859
actually are quite relevant outside that

795
00:34:37,719 --> 00:34:44,919
we ot to clear the protocol bindings so

796
00:34:41,860 --> 00:34:49,330
overall the way the wad is architected

797
00:34:44,920 --> 00:34:51,100
is a set of building blocks and so in

798
00:34:49,330 --> 00:34:53,049
particular we have when we talk about

799
00:34:51,100 --> 00:34:56,589
mostly will be the wat thing description

800
00:34:53,050 --> 00:35:00,130
which is a basically description of a

801
00:34:56,590 --> 00:35:03,730
thing or a service that is provided by

802
00:35:00,130 --> 00:35:05,290
an IOT device and it actually uses an

803
00:35:03,730 --> 00:35:07,480
interaction model which is closely

804
00:35:05,290 --> 00:35:09,270
related to the affordances that Michael

805
00:35:07,480 --> 00:35:12,250
Koster was talking about there's before

806
00:35:09,270 --> 00:35:15,009
it's also been I guess co-developed with

807
00:35:12,250 --> 00:35:16,600
the IOT schema.org and out to second org

808
00:35:15,010 --> 00:35:18,010
is not the only semantic Maalik we used

809
00:35:16,600 --> 00:35:21,250
with it but it is definitely one that

810
00:35:18,010 --> 00:35:24,730
we've tested with we also been working

811
00:35:21,250 --> 00:35:28,300
on the scripting API however we decided

812
00:35:24,730 --> 00:35:29,380
not to make this normative because we're

813
00:35:28,300 --> 00:35:31,240
still working on the use case of the

814
00:35:29,380 --> 00:35:33,040
deployment models for it but this is

815
00:35:31,240 --> 00:35:35,140
still under development and it's meant

816
00:35:33,040 --> 00:35:35,529
to make it easier to write things I owe

817
00:35:35,140 --> 00:35:37,870
to York

818
00:35:35,530 --> 00:35:42,160
raishin layers or program IOT devices

819
00:35:37,870 --> 00:35:44,680
behavior is also a document the buying

820
00:35:42,160 --> 00:35:48,040
templates so basically the thing

821
00:35:44,680 --> 00:35:49,990
description describes the interaction of

822
00:35:48,040 --> 00:35:51,790
the high-level abstraction but actually

823
00:35:49,990 --> 00:35:53,740
use it with a particular protocol like

824
00:35:51,790 --> 00:35:56,350
Co app or a particular organization like

825
00:35:53,740 --> 00:35:59,169
OCF need some additional parameters and

826
00:35:56,350 --> 00:36:01,420
you need things like URL schemes and

827
00:35:59,170 --> 00:36:03,430
maybe header options and security

828
00:36:01,420 --> 00:36:05,080
options that need to be associated with

829
00:36:03,430 --> 00:36:10,600
anything description for it to actually

830
00:36:05,080 --> 00:36:13,930
work so again we have two rec track

831
00:36:10,600 --> 00:36:15,910
items and we have a note and this is

832
00:36:13,930 --> 00:36:20,560
also going to be a note as are the

833
00:36:15,910 --> 00:36:22,509
security guidelines so yeah there's

834
00:36:20,560 --> 00:36:24,190
different levels but basically rec is a

835
00:36:22,510 --> 00:36:27,910
full standard it's a recommended

836
00:36:24,190 --> 00:36:30,040
standard our recommended use and a note

837
00:36:27,910 --> 00:36:34,020
is just an informative document so rec

838
00:36:30,040 --> 00:36:34,020
is normative and a note is informative

839
00:36:34,740 --> 00:36:40,120
and just submit more detail use these

840
00:36:37,810 --> 00:36:42,730
documents so the architecture is just I

841
00:36:40,120 --> 00:36:44,950
mean it's technically normative but it's

842
00:36:42,730 --> 00:36:46,800
it's a fairly high level document that

843
00:36:44,950 --> 00:36:50,169
describes the overall use cases and

844
00:36:46,800 --> 00:36:51,850
applications but it also talks about I

845
00:36:50,170 --> 00:36:55,840
guess the philosophical model or the

846
00:36:51,850 --> 00:36:58,120
semantic model of IOT including our high

847
00:36:55,840 --> 00:37:00,100
level affordances which I'm gonna talk

848
00:36:58,120 --> 00:37:03,490
about in a minute and in the thing

849
00:37:00,100 --> 00:37:05,440
description is a more detailed document

850
00:37:03,490 --> 00:37:06,970
that gives the exact information model

851
00:37:05,440 --> 00:37:09,670
for this document

852
00:37:06,970 --> 00:37:12,250
it also gives a json-ld 1.1

853
00:37:09,670 --> 00:37:14,530
serialization of the information model

854
00:37:12,250 --> 00:37:16,210
so you have you know the information ma

855
00:37:14,530 --> 00:37:18,430
how it's stored in a database but you

856
00:37:16,210 --> 00:37:23,560
also have how would appear in a file

857
00:37:18,430 --> 00:37:25,419
when recorded as json-ld and it's also

858
00:37:23,560 --> 00:37:26,200
an extension extensible format although

859
00:37:25,420 --> 00:37:28,660
mention in a minute

860
00:37:26,200 --> 00:37:31,060
it's based on json-ld and you can use

861
00:37:28,660 --> 00:37:36,370
external semantics and and vocabulary

862
00:37:31,060 --> 00:37:39,490
with it so there's a bit more

863
00:37:36,370 --> 00:37:42,970
information here so so I think I just

864
00:37:39,490 --> 00:37:44,350
want to mention start over here so

865
00:37:42,970 --> 00:37:47,709
there's a certain set of constraints

866
00:37:44,350 --> 00:37:49,049
about you know what has a TD and what

867
00:37:47,710 --> 00:37:51,950
does a TD what roles

868
00:37:49,050 --> 00:37:54,510
play what kinds of devices can have TVs

869
00:37:51,950 --> 00:37:57,390
can you have devices both produce and

870
00:37:54,510 --> 00:38:00,840
consume TDS what functionally serve in a

871
00:37:57,390 --> 00:38:02,490
network of devices and so forth we also

872
00:38:00,840 --> 00:38:03,980
have a definition which i think is are

873
00:38:02,490 --> 00:38:07,890
practically important in this in this

874
00:38:03,980 --> 00:38:09,750
talk about our interactions what is an

875
00:38:07,890 --> 00:38:12,480
interaction and we use this concept of

876
00:38:09,750 --> 00:38:13,620
an affordance so as a difference this is

877
00:38:12,480 --> 00:38:16,740
coming a user interface

878
00:38:13,620 --> 00:38:18,180
you know our research idea so a door

879
00:38:16,740 --> 00:38:20,339
handle is a good example of an

880
00:38:18,180 --> 00:38:22,200
affordance so you have a door and you

881
00:38:20,340 --> 00:38:23,850
want to operate on the door and you got

882
00:38:22,200 --> 00:38:26,549
to figure out how do I operate on this

883
00:38:23,850 --> 00:38:28,860
door how I open it and so you want to do

884
00:38:26,550 --> 00:38:31,050
a certain thing at a high level you and

885
00:38:28,860 --> 00:38:32,910
open the door but you got to look at the

886
00:38:31,050 --> 00:38:35,040
door and figure out how do I use the

887
00:38:32,910 --> 00:38:37,770
door to open it there might be different

888
00:38:35,040 --> 00:38:39,930
kinds of handles but B you have some

889
00:38:37,770 --> 00:38:41,610
information about how to operate reach

890
00:38:39,930 --> 00:38:45,750
those handles to cause the door to open

891
00:38:41,610 --> 00:38:47,760
and so there's a way to aspects to the

892
00:38:45,750 --> 00:38:49,920
finger scription one of the semantics

893
00:38:47,760 --> 00:38:52,500
you know what does this thing do and

894
00:38:49,920 --> 00:38:52,710
what is it I mean there's a how do I use

895
00:38:52,500 --> 00:38:55,230
it

896
00:38:52,710 --> 00:38:57,240
you know what protocol vary what bits do

897
00:38:55,230 --> 00:39:00,210
I put on the wire what protocol do I use

898
00:38:57,240 --> 00:39:01,709
to make it do that thing and so the

899
00:39:00,210 --> 00:39:06,510
things efficient describes both of these

900
00:39:01,710 --> 00:39:10,470
and in practice it's this json-ld 1.1

901
00:39:06,510 --> 00:39:13,920
doc JSON document and because it's

902
00:39:10,470 --> 00:39:16,740
json-ld now it's json-ld 1.1 which is

903
00:39:13,920 --> 00:39:18,830
still a spec in progress if people have

904
00:39:16,740 --> 00:39:23,310
had previous experience with Jason LD

905
00:39:18,830 --> 00:39:25,770
1.0 I really feel sorry for you ok 1.1

906
00:39:23,310 --> 00:39:28,410
is a vast improvement in particular

907
00:39:25,770 --> 00:39:31,080
edition LD 1.0 was meant to be a

908
00:39:28,410 --> 00:39:33,899
serialization format for RDF databases .

909
00:39:31,080 --> 00:39:36,680
. and it was a horrible JSON document

910
00:39:33,900 --> 00:39:40,740
had all kinds of weird conventions

911
00:39:36,680 --> 00:39:43,740
json-ld 1.1 the goal is to allow people

912
00:39:40,740 --> 00:39:46,919
to semantically annotate idiomatic JSON

913
00:39:43,740 --> 00:39:48,959
as used in practice so so really we're

914
00:39:46,920 --> 00:39:51,540
going to do is take jason as using web

915
00:39:48,960 --> 00:39:53,400
services or for data data flows and be

916
00:39:51,540 --> 00:39:56,400
able to annotate it with semantics and

917
00:39:53,400 --> 00:39:58,350
so this is the json-ld 1.1 document

918
00:39:56,400 --> 00:40:00,900
which means is much more idiomatic json

919
00:39:58,350 --> 00:40:02,819
and much closer what you'd expect jason

920
00:40:00,900 --> 00:40:05,100
document to look like

921
00:40:02,820 --> 00:40:06,510
and you can see an example here but you

922
00:40:05,100 --> 00:40:08,640
know there's a typical metadata on top

923
00:40:06,510 --> 00:40:11,190
but then we also have categories for

924
00:40:08,640 --> 00:40:12,990
properties and actions and so forth and

925
00:40:11,190 --> 00:40:15,150
actually embedded inside properties are

926
00:40:12,990 --> 00:40:17,100
basically the JSON schema data model

927
00:40:15,150 --> 00:40:19,080
describing the datum all of the stuff

928
00:40:17,100 --> 00:40:21,180
that goes in the wire and all of this

929
00:40:19,080 --> 00:40:23,880
can be semantically annotated and you

930
00:40:21,180 --> 00:40:25,649
can pull in the context to describe your

931
00:40:23,880 --> 00:40:27,840
external vocabulary and this is how you

932
00:40:25,650 --> 00:40:30,960
do extensions so for example if you can

933
00:40:27,840 --> 00:40:32,100
use the IOT schema.org terminology you

934
00:40:30,960 --> 00:40:34,080
can just pull it in with an external

935
00:40:32,100 --> 00:40:37,140
reference like this and then use those

936
00:40:34,080 --> 00:40:40,170
terms with an IOT prefix for example iot

937
00:40:37,140 --> 00:40:41,640
light and became a type of isis's so I

938
00:40:40,170 --> 00:40:43,560
think one of the interesting things

939
00:40:41,640 --> 00:40:46,290
going forward is how things like SDF and

940
00:40:43,560 --> 00:40:47,790
this you know work together so I think

941
00:40:46,290 --> 00:40:49,470
in practice will happen you'll have an

942
00:40:47,790 --> 00:40:51,900
SDF definition for a bunch of data

943
00:40:49,470 --> 00:40:55,049
models in various ecosystems well the

944
00:40:51,900 --> 00:40:58,020
compiler that compiles down to RDF based

945
00:40:55,050 --> 00:40:59,160
definitions right maybe Jason LD but we

946
00:40:58,020 --> 00:41:02,670
can then pull in and then we can

947
00:40:59,160 --> 00:41:04,560
annotate this with those definitions and

948
00:41:02,670 --> 00:41:06,510
then when this gets pulled into a

949
00:41:04,560 --> 00:41:08,820
database you know you pick please pull

950
00:41:06,510 --> 00:41:10,290
it into an RDF database you'll be able

951
00:41:08,820 --> 00:41:11,970
to pull in so definitions and have all

952
00:41:10,290 --> 00:41:13,710
the semantics come along for the ride so

953
00:41:11,970 --> 00:41:16,470
that's kind of how this fits together

954
00:41:13,710 --> 00:41:19,110
the SDF and this are kind of

955
00:41:16,470 --> 00:41:21,540
complementary mechanisms SDF defines

956
00:41:19,110 --> 00:41:24,510
data models lets you attach data models

957
00:41:21,540 --> 00:41:29,730
to protocols and and and also data

958
00:41:24,510 --> 00:41:31,290
schemas so anyways these are additional

959
00:41:29,730 --> 00:41:33,510
notes but the most important one here is

960
00:41:31,290 --> 00:41:35,460
that the buying templates which describe

961
00:41:33,510 --> 00:41:38,850
how the protocol bindings work for

962
00:41:35,460 --> 00:41:40,260
particular ecosystems and protocols and

963
00:41:38,850 --> 00:41:43,230
this is meant to be a living document

964
00:41:40,260 --> 00:41:45,410
you know as we uncover new things may be

965
00:41:43,230 --> 00:41:47,700
modeled we'll describe what is the

966
00:41:45,410 --> 00:41:51,080
typical way to use those those

967
00:41:47,700 --> 00:41:51,080
ecosystems with with a thing scription

968
00:41:51,560 --> 00:41:59,060
now our current status we quite late in

969
00:41:56,820 --> 00:42:01,650
the process decide to use Jason ld1

970
00:41:59,060 --> 00:42:03,990
previously we used 1.0 but it was had

971
00:42:01,650 --> 00:42:05,610
too much you know resistance because of

972
00:42:03,990 --> 00:42:08,009
the syntactic difficulties

973
00:42:05,610 --> 00:42:10,590
well 1.1 has been a great improvement

974
00:42:08,010 --> 00:42:12,960
we've been working with the json-ld 1.1

975
00:42:10,590 --> 00:42:15,300
working group in WPC to make sure it has

976
00:42:12,960 --> 00:42:17,310
all the right stuff for us to do things

977
00:42:15,300 --> 00:42:20,880
in a natural way

978
00:42:17,310 --> 00:42:22,290
and and we basically also have a bunch

979
00:42:20,880 --> 00:42:24,270
of default values in our systems you

980
00:42:22,290 --> 00:42:25,560
don't specify everything you know a lot

981
00:42:24,270 --> 00:42:27,119
of things have defaults and you can just

982
00:42:25,560 --> 00:42:30,390
leave them leave them out and they'll do

983
00:42:27,119 --> 00:42:32,400
something reasonable we also have

984
00:42:30,390 --> 00:42:34,140
security metadata so you can declare

985
00:42:32,400 --> 00:42:36,300
what kind of security is required to

986
00:42:34,140 --> 00:42:38,400
access a thing this is an extensible

987
00:42:36,300 --> 00:42:40,470
mechanism so we have a few basic things

988
00:42:38,400 --> 00:42:42,900
and they're all ready but the idea is

989
00:42:40,470 --> 00:42:46,230
you can pull an external vocabulary's so

990
00:42:42,900 --> 00:42:48,089
if someone defines a new format or a new

991
00:42:46,230 --> 00:42:50,820
security mechanism for controlling

992
00:42:48,089 --> 00:42:53,700
access to a thing you can declare the

993
00:42:50,820 --> 00:42:55,980
public metadata about that so you can

994
00:42:53,700 --> 00:42:57,540
say you know what is needed to get

995
00:42:55,980 --> 00:42:59,220
authorization to get access this thing

996
00:42:57,540 --> 00:43:00,570
it's not going to put you know private

997
00:42:59,220 --> 00:43:02,160
information in the thing it's just going

998
00:43:00,570 --> 00:43:07,200
to say here's what you need to know to

999
00:43:02,160 --> 00:43:09,899
get in anyway these extension points in

1000
00:43:07,200 --> 00:43:11,069
addition to the screen metadata you can

1001
00:43:09,900 --> 00:43:13,410
potentially have additional protocols

1002
00:43:11,070 --> 00:43:15,599
and header options look at this and you

1003
00:43:13,410 --> 00:43:16,890
can also have a semantic annotation and

1004
00:43:15,599 --> 00:43:19,290
actually the semantic annotation can

1005
00:43:16,890 --> 00:43:20,848
take place at the entire thing level it

1006
00:43:19,290 --> 00:43:22,740
can take place at the interaction level

1007
00:43:20,849 --> 00:43:24,690
properties events and actions and also

1008
00:43:22,740 --> 00:43:25,979
take place at the data schema level so

1009
00:43:24,690 --> 00:43:28,050
particular data elements could have a

1010
00:43:25,980 --> 00:43:30,839
type that could be a unit for example or

1011
00:43:28,050 --> 00:43:38,579
you know is this an incremental thing or

1012
00:43:30,839 --> 00:43:40,078
whatever so I think that one thing that

1013
00:43:38,579 --> 00:43:42,630
I presented oma but I don't have

1014
00:43:40,079 --> 00:43:44,280
presented here is we've noticed a few

1015
00:43:42,630 --> 00:43:47,430
places where we need some more work on

1016
00:43:44,280 --> 00:43:49,470
aligning our standards so one thing is a

1017
00:43:47,430 --> 00:43:53,819
lot of standards now use JSON schema

1018
00:43:49,470 --> 00:43:54,118
embedded inside them like open API uses

1019
00:43:53,819 --> 00:43:56,910
it

1020
00:43:54,119 --> 00:44:00,089
SDF uses it we use it but JSON schema

1021
00:43:56,910 --> 00:44:02,790
itself doesn't really have a single

1022
00:44:00,089 --> 00:44:04,859
unified you know formal standard

1023
00:44:02,790 --> 00:44:06,329
associated with it there's a draft this

1024
00:44:04,859 --> 00:44:08,098
is something we feel strongly about I

1025
00:44:06,329 --> 00:44:09,180
feel strongly about it needs to be needs

1026
00:44:08,099 --> 00:44:13,589
to be moved along

1027
00:44:09,180 --> 00:44:16,290
I think addition the JavaScript and

1028
00:44:13,589 --> 00:44:18,000
scripting API we to more formally

1029
00:44:16,290 --> 00:44:20,730
understand the deployment model for that

1030
00:44:18,000 --> 00:44:23,130
and also figure out how it works with

1031
00:44:20,730 --> 00:44:26,040
edge computing is an edge computing

1032
00:44:23,130 --> 00:44:28,050
service a thing or is it a web service

1033
00:44:26,040 --> 00:44:29,819
you know do I open the API for it could

1034
00:44:28,050 --> 00:44:31,349
you is your thing description

1035
00:44:29,819 --> 00:44:33,359
is there some common thing we can do

1036
00:44:31,349 --> 00:44:36,029
that describes both things and web

1037
00:44:33,359 --> 00:44:44,640
services and is an edge service a thing

1038
00:44:36,029 --> 00:44:47,009
or a web service and yeah so I in in the

1039
00:44:44,640 --> 00:44:48,808
presentation these are all live links if

1040
00:44:47,009 --> 00:44:50,729
you want to have some reading material

1041
00:44:48,809 --> 00:44:54,119
in the plane you have nothing else to

1042
00:44:50,729 --> 00:44:56,038
read here's here's all the specs are and

1043
00:44:54,119 --> 00:44:57,989
the important one here is going to be

1044
00:44:56,039 --> 00:44:59,309
the candidate recommendations or the

1045
00:44:57,989 --> 00:45:01,949
architecture and the things portion

1046
00:44:59,309 --> 00:45:04,529
itself there's many examples by the way

1047
00:45:01,949 --> 00:45:08,969
as well in the thing scription I think

1048
00:45:04,529 --> 00:45:12,269
busily last slide so questions they were

1049
00:45:08,969 --> 00:45:14,099
just on the topic of JSON schema the

1050
00:45:12,269 --> 00:45:18,390
closest thing to an official reference

1051
00:45:14,099 --> 00:45:21,509
right now is JSON schema.org and yes I

1052
00:45:18,390 --> 00:45:24,239
went there and this was news to me so I

1053
00:45:21,509 --> 00:45:27,599
thought I'd share it update as of 27th

1054
00:45:24,239 --> 00:45:30,299
of May 2019 yep the forthcoming draft is

1055
00:45:27,599 --> 00:45:31,559
in final review and so it is apparently

1056
00:45:30,299 --> 00:45:33,479
being maintained at that particular

1057
00:45:31,559 --> 00:45:34,769
organization and that's the closest

1058
00:45:33,479 --> 00:45:38,249
thing we have to a reference right now

1059
00:45:34,769 --> 00:45:41,339
correct so as a draft we reference

1060
00:45:38,249 --> 00:45:43,649
version 7 in our specs the trouble is

1061
00:45:41,339 --> 00:45:45,150
that very few extended in various ways -

1062
00:45:43,650 --> 00:45:47,459
for example at options for Seabourn

1063
00:45:45,150 --> 00:45:49,859
whatever in the thing description we use

1064
00:45:47,459 --> 00:45:53,009
it to describe palos besides JSON like

1065
00:45:49,859 --> 00:45:55,140
Seabourn llamó and and xml how does that

1066
00:45:53,009 --> 00:45:58,680
actually work in practice there's also

1067
00:45:55,140 --> 00:46:00,538
an IETF draft which has expired because

1068
00:45:58,680 --> 00:46:03,598
it was an effort to move JSON schema

1069
00:46:00,539 --> 00:46:05,579
forward as no IETF draft and I think

1070
00:46:03,599 --> 00:46:06,989
that that organization people working on

1071
00:46:05,579 --> 00:46:09,029
JSON schema will be very interested in

1072
00:46:06,989 --> 00:46:10,529
moving that forward again as an IETF

1073
00:46:09,029 --> 00:46:12,719
draft and there are several

1074
00:46:10,529 --> 00:46:14,069
organizations that need it and so this

1075
00:46:12,719 --> 00:46:22,769
is something that I'd like to see happen

1076
00:46:14,069 --> 00:46:27,269
myself okay I need more questions just

1077
00:46:22,769 --> 00:46:29,448
as an anecdote on this this ITF draft

1078
00:46:27,269 --> 00:46:33,058
you are talking - that's the draft zip

1079
00:46:29,449 --> 00:46:35,609
schema oh for that is actually used as

1080
00:46:33,059 --> 00:46:39,059
the basis for an appendix of the

1081
00:46:35,609 --> 00:46:42,799
document that is right now getting done

1082
00:46:39,059 --> 00:46:45,920
in in the security incident handling

1083
00:46:42,800 --> 00:46:47,180
energy here Jason I would've but

1084
00:46:45,920 --> 00:46:49,160
fortunately they also have a CDL

1085
00:46:47,180 --> 00:46:51,230
appendix so you can find out what it

1086
00:46:49,160 --> 00:46:53,720
really means so there are various

1087
00:46:51,230 --> 00:46:56,330
versions I think the newest versions of

1088
00:46:53,720 --> 00:46:58,509
JSON schema Olga also being submitted to

1089
00:46:56,330 --> 00:47:01,490
the IDF so you can also find them as

1090
00:46:58,510 --> 00:47:04,250
internet draft and ok you have to check

1091
00:47:01,490 --> 00:47:06,049
which one yeah the website only

1092
00:47:04,250 --> 00:47:07,910
indicated that it was pointing to an

1093
00:47:06,050 --> 00:47:10,070
expired draft they were plain to update

1094
00:47:07,910 --> 00:47:12,980
it so I think it's one of these need to

1095
00:47:10,070 --> 00:47:16,910
refresh it to make it a line with these

1096
00:47:12,980 --> 00:47:20,360
so points 7 version might be expired

1097
00:47:16,910 --> 00:47:22,640
also ok but the one that most people

1098
00:47:20,360 --> 00:47:25,640
uses the o for that has been expired for

1099
00:47:22,640 --> 00:47:28,279
a while yeah yeah so I use one challenge

1100
00:47:25,640 --> 00:47:30,650
here is that we see JSON schema being

1101
00:47:28,280 --> 00:47:32,200
embedded in several reasons and there's

1102
00:47:30,650 --> 00:47:34,250
a real chance for these to diverge

1103
00:47:32,200 --> 00:47:35,509
especially we talk even if we have

1104
00:47:34,250 --> 00:47:38,390
common requirements like sea bore

1105
00:47:35,510 --> 00:47:40,910
extensions so we really need to I think

1106
00:47:38,390 --> 00:47:42,890
look at this problem and see if we can

1107
00:47:40,910 --> 00:47:44,480
take that little piece and get that more

1108
00:47:42,890 --> 00:47:46,700
standardized because there's there

1109
00:47:44,480 --> 00:47:49,820
really is a need for kind of a generic

1110
00:47:46,700 --> 00:47:51,770
data schema and JSON schema right now is

1111
00:47:49,820 --> 00:47:53,830
used it isn't the perfect that's used in

1112
00:47:51,770 --> 00:48:02,290
at least three places I know of

1113
00:47:53,830 --> 00:48:02,290
ok maybe else ok thank you

1114
00:48:24,750 --> 00:48:32,380
okay so hello everyone my name is Val

1115
00:48:27,910 --> 00:48:37,569
Petrov and I will be presenting you P

1116
00:48:32,380 --> 00:48:40,329
which is I will start by defining the

1117
00:48:37,569 --> 00:48:43,569
problem statement and then I would

1118
00:48:40,329 --> 00:48:47,650
describe how we try to solve this

1119
00:48:43,569 --> 00:48:51,450
problem so during the which act on we

1120
00:48:47,650 --> 00:48:53,950
were discussing that all the

1121
00:48:51,450 --> 00:48:57,819
applications and interoperability that

1122
00:48:53,950 --> 00:49:00,790
we have been trying to do or great if

1123
00:48:57,819 --> 00:49:03,599
you have fresh new IPs but once you have

1124
00:49:00,790 --> 00:49:06,849
some very constrained networks like

1125
00:49:03,599 --> 00:49:10,559
Laura SiC box and reality and others and

1126
00:49:06,849 --> 00:49:13,420
or very constrained devices those things

1127
00:49:10,559 --> 00:49:16,540
sometimes don't work that great because

1128
00:49:13,420 --> 00:49:22,119
there are some binary formats that are

1129
00:49:16,540 --> 00:49:25,180
used by people so in order to try to

1130
00:49:22,119 --> 00:49:27,849
make interoperability with such kind of

1131
00:49:25,180 --> 00:49:32,379
devices possible it's important to be

1132
00:49:27,849 --> 00:49:34,869
able to understand the data that they

1133
00:49:32,380 --> 00:49:37,210
are sending and be able to format data

1134
00:49:34,869 --> 00:49:39,760
that come from other applications so

1135
00:49:37,210 --> 00:49:44,290
that they can be received by those

1136
00:49:39,760 --> 00:49:46,569
devices and after some considering well

1137
00:49:44,290 --> 00:49:48,520
in the IDF we know how to do data

1138
00:49:46,569 --> 00:49:53,380
modelling who use yunk

1139
00:49:48,520 --> 00:49:57,460
and we decided to try to use the same

1140
00:49:53,380 --> 00:50:00,069
thing here as well and of course we have

1141
00:49:57,460 --> 00:50:04,059
the added benefit that I want something

1142
00:50:00,069 --> 00:50:07,750
is first we can then use a young to see

1143
00:50:04,059 --> 00:50:11,049
Boer to JSON XML or other bindings in

1144
00:50:07,750 --> 00:50:16,329
order to have output format as we need

1145
00:50:11,049 --> 00:50:19,319
it so here is an example of how this

1146
00:50:16,329 --> 00:50:23,049
could look like we have the usual young

1147
00:50:19,319 --> 00:50:24,750
primitives we can do type deaths we can

1148
00:50:23,049 --> 00:50:27,420
do

1149
00:50:24,750 --> 00:50:33,210
we can add some restrictions of the

1150
00:50:27,420 --> 00:50:35,130
final results we can add even units so

1151
00:50:33,210 --> 00:50:41,400
that the data can be semantically

1152
00:50:35,130 --> 00:50:46,440
annotated and yes then we have some

1153
00:50:41,400 --> 00:50:49,470
specific extensions to the yonk model so

1154
00:50:46,440 --> 00:50:51,720
that in the end we have the parsing

1155
00:50:49,470 --> 00:50:54,868
collage ik for example here you can see

1156
00:50:51,720 --> 00:50:56,970
we can have some information what is

1157
00:50:54,869 --> 00:50:59,160
which are the bits that need to be

1158
00:50:56,970 --> 00:51:04,290
passed from the binary representation in

1159
00:50:59,160 --> 00:51:07,649
the position attribute and using such

1160
00:51:04,290 --> 00:51:10,200
kind of information we are able to read

1161
00:51:07,650 --> 00:51:14,220
in the binary data and then obtain some

1162
00:51:10,200 --> 00:51:16,919
usable values that could be sent as JSON

1163
00:51:14,220 --> 00:51:22,230
or something else as a receipt we have

1164
00:51:16,920 --> 00:51:26,339
working example and that people can play

1165
00:51:22,230 --> 00:51:28,859
with I mean we have like playground

1166
00:51:26,339 --> 00:51:31,619
where people can submit their own models

1167
00:51:28,859 --> 00:51:35,790
and their data and see what will be the

1168
00:51:31,619 --> 00:51:36,810
result and the link for this is in the

1169
00:51:35,790 --> 00:51:41,970
Moishe

1170
00:51:36,810 --> 00:51:45,299
hackathon wiki page which I can make

1171
00:51:41,970 --> 00:51:50,060
sure to put it in the ether pad not so

1172
00:51:45,300 --> 00:51:52,710
so that would be useful and so in the

1173
00:51:50,060 --> 00:51:55,710
extensions we have some other useful

1174
00:51:52,710 --> 00:51:58,290
things like being able to do

1175
00:51:55,710 --> 00:52:02,670
multiplication and addition of

1176
00:51:58,290 --> 00:52:04,740
additional I'm some arithmetic of

1177
00:52:02,670 --> 00:52:06,750
operations with the values to attend we

1178
00:52:04,740 --> 00:52:09,689
can do mapping between battles using

1179
00:52:06,750 --> 00:52:13,109
announce we can have choice between

1180
00:52:09,690 --> 00:52:15,720
different possibilities if we know that

1181
00:52:13,109 --> 00:52:18,779
some part of the format depends on some

1182
00:52:15,720 --> 00:52:21,660
part of some other part of the payloads

1183
00:52:18,780 --> 00:52:26,010
such kind of things error I currently

1184
00:52:21,660 --> 00:52:29,220
also supported and that is to see if

1185
00:52:26,010 --> 00:52:35,220
there is any interest for such kind of

1186
00:52:29,220 --> 00:52:37,259
work whether I mean an ideal outcome for

1187
00:52:35,220 --> 00:52:38,399
me would be someone to say hey I have

1188
00:52:37,260 --> 00:52:43,020
this use case and

1189
00:52:38,400 --> 00:52:47,160
I will try to see if dis completed if we

1190
00:52:43,020 --> 00:52:53,369
can work together to solve it and yeah

1191
00:52:47,160 --> 00:52:55,680
any feedback is welcome so this is just

1192
00:52:53,369 --> 00:53:13,289
to let you know that this work is being

1193
00:52:55,680 --> 00:53:16,109
done and questions I think I think the

1194
00:53:13,289 --> 00:53:19,289
second item here cannot be stressed

1195
00:53:16,109 --> 00:53:21,750
enough you cannot develop something like

1196
00:53:19,289 --> 00:53:23,549
this without generating a ton of

1197
00:53:21,750 --> 00:53:27,049
examples and seeing whether it actually

1198
00:53:23,549 --> 00:53:33,150
works since so those people who have

1199
00:53:27,049 --> 00:53:37,529
weird data what bus whatever it would be

1200
00:53:33,150 --> 00:53:42,990
really useful analysis how well it's

1201
00:53:37,529 --> 00:53:46,109
such a scheme works for you and if we

1202
00:53:42,990 --> 00:53:52,589
have achieved a certain level of

1203
00:53:46,109 --> 00:53:55,230
validation then I think the auto da is

1204
00:53:52,589 --> 00:53:58,890
it video action or it means that you can

1205
00:53:55,230 --> 00:54:01,309
go from Jason - yeah that is the idea

1206
00:53:58,890 --> 00:54:11,609
that it should support bi-directional

1207
00:54:01,309 --> 00:54:20,270
communication thank you perspective RFC

1208
00:54:11,609 --> 00:54:24,750
49 97 that's also a bi-directional

1209
00:54:20,270 --> 00:54:27,500
mechanism for translating between two

1210
00:54:24,750 --> 00:54:31,619
formats at the bit level in this case

1211
00:54:27,500 --> 00:54:33,440
the uncompressed at the compressed form

1212
00:54:31,619 --> 00:54:36,809
of record so it's a little bit different

1213
00:54:33,440 --> 00:54:39,089
but I think many of the questions that

1214
00:54:36,809 --> 00:54:46,470
come up when you do something like this

1215
00:54:39,089 --> 00:54:50,210
are similar so if somebody wants to do

1216
00:54:46,470 --> 00:54:50,209
an interesting paper compare for

1217
00:54:57,489 --> 00:55:26,150
49 97 I think the former location yes so

1218
00:55:11,869 --> 00:55:35,329
that was the most fun yeah so what can I

1219
00:55:26,150 --> 00:55:43,459
just yeah so your um hello my name is

1220
00:55:35,329 --> 00:55:45,229
Christine I'm just hello okay and I'd

1221
00:55:43,459 --> 00:55:47,660
like to give you a brief update on what

1222
00:55:45,229 --> 00:55:49,729
has been happening in the field of

1223
00:55:47,660 --> 00:55:53,839
alternative transports and protocol

1224
00:55:49,729 --> 00:55:55,839
negotiation for coop so the history of

1225
00:55:53,839 --> 00:55:59,119
this is that quite for quite some time

1226
00:55:55,839 --> 00:56:02,209
the core working group has promised to

1227
00:55:59,119 --> 00:56:04,849
make coop available over transport with

1228
00:56:02,209 --> 00:56:08,180
a single your eyes scheme over all the

1229
00:56:04,849 --> 00:56:13,430
transports and a group of people that is

1230
00:56:08,180 --> 00:56:17,538
build house in SME have taken up work on

1231
00:56:13,430 --> 00:56:20,169
this again around last ITF and got

1232
00:56:17,539 --> 00:56:22,759
together and first try to cite a few

1233
00:56:20,170 --> 00:56:28,009
goals of what we're actually trying to

1234
00:56:22,759 --> 00:56:31,219
do in in this kind of small sub working

1235
00:56:28,009 --> 00:56:33,709
group with what we call our mini Charter

1236
00:56:31,219 --> 00:56:36,559
so this is nothing this is not a new

1237
00:56:33,709 --> 00:56:39,410
working group activity it's just things

1238
00:56:36,559 --> 00:56:41,539
that we write up for for the authors of

1239
00:56:39,410 --> 00:56:44,660
the upcoming documents so that we have

1240
00:56:41,539 --> 00:56:48,499
currents and that we can receive

1241
00:56:44,660 --> 00:56:51,890
targeted input on so um what we are what

1242
00:56:48,499 --> 00:56:54,529
we set out to do is define coop over SMS

1243
00:56:51,890 --> 00:56:58,308
which has been around in Co for quite

1244
00:56:54,529 --> 00:57:00,799
some time to find to find how we can

1245
00:56:58,309 --> 00:57:03,330
describe a single your eye scheme for

1246
00:57:00,799 --> 00:57:06,450
Trent for all the transport

1247
00:57:03,330 --> 00:57:10,799
without creating the problems of your

1248
00:57:06,450 --> 00:57:14,580
aisle icing that usually that have shown

1249
00:57:10,800 --> 00:57:18,840
up in previous approaches and to find

1250
00:57:14,580 --> 00:57:21,540
good ways to announce for one for co-op

1251
00:57:18,840 --> 00:57:23,490
contacted over one transport to announce

1252
00:57:21,540 --> 00:57:25,560
where the other transports are so to

1253
00:57:23,490 --> 00:57:28,020
switch over for example from a co-op of

1254
00:57:25,560 --> 00:57:32,240
a UDP connection co-op over TCP

1255
00:57:28,020 --> 00:57:34,950
connection with co-op over SMS we're

1256
00:57:32,240 --> 00:57:38,609
we're building on the existing working

1257
00:57:34,950 --> 00:57:40,710
group drafts that have expert input from

1258
00:57:38,610 --> 00:57:44,130
OMA where they've actually deployed it

1259
00:57:40,710 --> 00:57:46,680
and we are you looking into coop over

1260
00:57:44,130 --> 00:57:49,050
SMS particularly for the reason that it

1261
00:57:46,680 --> 00:57:52,259
is an example of a co-op transport that

1262
00:57:49,050 --> 00:57:54,450
is not using the rest of the IP stack

1263
00:57:52,260 --> 00:57:57,270
but using something different there are

1264
00:57:54,450 --> 00:58:00,480
other up there are other transports in

1265
00:57:57,270 --> 00:58:03,990
the works that have similar properties

1266
00:58:00,480 --> 00:58:08,010
but by dealing with co-op over SMS we

1267
00:58:03,990 --> 00:58:13,410
hope to rule out any any roadblocks for

1268
00:58:08,010 --> 00:58:16,500
those other transports for the for the

1269
00:58:13,410 --> 00:58:18,359
single scheme we are and especially the

1270
00:58:16,500 --> 00:58:22,530
uriah lasting problem we are drawing a

1271
00:58:18,360 --> 00:58:26,820
lot from HTTPS alternative services for

1272
00:58:22,530 --> 00:58:30,210
the for announcing the active transports

1273
00:58:26,820 --> 00:58:33,300
we are building on Bill's previous work

1274
00:58:30,210 --> 00:58:37,080
in the protocol negotiation document

1275
00:58:33,300 --> 00:58:40,200
that is so far still being worked on

1276
00:58:37,080 --> 00:58:42,509
under a core name but most of this is

1277
00:58:40,200 --> 00:58:45,359
experimental enough that we are doing it

1278
00:58:42,510 --> 00:58:47,220
in in t2 TRG because it is a research

1279
00:58:45,360 --> 00:58:50,850
topic we don't really have a clear path

1280
00:58:47,220 --> 00:58:55,560
on on how to get there only the coop

1281
00:58:50,850 --> 00:58:59,160
over SMS work is aiming to be to start

1282
00:58:55,560 --> 00:59:00,810
in call ready because that's that should

1283
00:58:59,160 --> 00:59:05,339
be a simple that should be a simple and

1284
00:59:00,810 --> 00:59:08,090
nothing we'd appreciate if more people

1285
00:59:05,340 --> 00:59:11,490
provided input for this so we are doing

1286
00:59:08,090 --> 00:59:15,020
we're tracking the goals the individual

1287
00:59:11,490 --> 00:59:17,089
problems to solve in an initial tracker

1288
00:59:15,020 --> 00:59:20,540
there's the your I um we'd appreciate

1289
00:59:17,089 --> 00:59:22,759
look eyes on the bully the approaches

1290
00:59:20,540 --> 00:59:28,390
that we are discussing so far and the

1291
00:59:22,760 --> 00:59:28,390
end yet and the overall mini chato

1292
00:59:29,950 --> 00:59:49,160
questions yeah yep so my comment this

1293
00:59:44,660 --> 00:59:52,279
would be this is interesting work and he

1294
00:59:49,160 --> 00:59:57,230
did work but also I think it's a nice

1295
00:59:52,280 --> 00:59:59,990
example for how we can organize work so

1296
00:59:57,230 --> 01:00:02,270
some people that here in the research

1297
00:59:59,990 --> 01:00:05,720
group want to build a team to work on

1298
01:00:02,270 --> 01:00:12,740
something just go ahead you get a github

1299
01:00:05,720 --> 01:00:16,970
repository for free so we have a way to

1300
01:00:12,740 --> 01:00:27,109
just kick off work in a very informal

1301
01:00:16,970 --> 01:00:29,200
very low this is not the focus focus is

1302
01:00:27,109 --> 01:00:34,450
first of all to understand the problem

1303
01:00:29,200 --> 01:00:34,450
to see how can you guys

1304
01:00:38,250 --> 01:00:41,289
[Music]

1305
01:00:55,320 --> 01:01:11,650
okay and now for something completely

1306
01:01:07,119 --> 01:01:14,890
different so the chest asked me to not

1307
01:01:11,650 --> 01:01:17,950
cut with some outrageous thoughts about

1308
01:01:14,890 --> 01:01:21,700
IOT and edge computing which I'm also

1309
01:01:17,950 --> 01:01:28,839
guilty of having introduced to you here

1310
01:01:21,700 --> 01:01:32,710
in this group some meetings ago and I

1311
01:01:28,840 --> 01:01:35,890
did about so these things these thoughts

1312
01:01:32,710 --> 01:01:37,750
here are actually less defined then you

1313
01:01:35,890 --> 01:01:41,710
would maybe think right now so just

1314
01:01:37,750 --> 01:01:45,460
please but so if you ever found yourself

1315
01:01:41,710 --> 01:01:48,130
sitting in a management meeting was a

1316
01:01:45,460 --> 01:01:51,730
piece of paper and a pencil and you know

1317
01:01:48,130 --> 01:01:56,680
you making checks for every buzz word

1318
01:01:51,730 --> 01:02:01,330
that comes up IOT edge computing this is

1319
01:01:56,680 --> 01:02:05,500
the ideal password bingo and the problem

1320
01:02:01,330 --> 01:02:10,060
is not test these are not relevant areas

1321
01:02:05,500 --> 01:02:14,170
or important topics it's just these

1322
01:02:10,060 --> 01:02:17,500
terms are so broad it's almost not

1323
01:02:14,170 --> 01:02:20,410
possible to talk meaningful about them

1324
01:02:17,500 --> 01:02:26,349
without being really specific what you

1325
01:02:20,410 --> 01:02:28,690
mean so for example in there all these

1326
01:02:26,349 --> 01:02:30,760
different you know vertical scenarios

1327
01:02:28,690 --> 01:02:34,089
and that's reality whole networks they

1328
01:02:30,760 --> 01:02:36,910
have you can all you can do computing in

1329
01:02:34,089 --> 01:02:41,080
all of those but it's going to be

1330
01:02:36,910 --> 01:02:44,740
completely different so depending on for

1331
01:02:41,080 --> 01:02:50,140
example you're talking about virtualized

1332
01:02:44,740 --> 01:02:52,899
servers maybe lambda functions different

1333
01:02:50,140 --> 01:02:54,520
detection models and so on so I'm not

1334
01:02:52,900 --> 01:02:56,500
saying there is no compute in these

1335
01:02:54,520 --> 01:02:58,859
scenarios because quite the opposite

1336
01:02:56,500 --> 01:03:02,470
they're interesting things you would do

1337
01:02:58,859 --> 01:03:04,710
for example in industrial see there

1338
01:03:02,470 --> 01:03:08,939
there are different opportunities

1339
01:03:04,710 --> 01:03:11,670
and relevant use cases for computing so

1340
01:03:08,940 --> 01:03:15,810
for example in yeah it's schema here and

1341
01:03:11,670 --> 01:03:18,590
this diagram you could they have

1342
01:03:15,810 --> 01:03:22,049
different programs where we're computing

1343
01:03:18,590 --> 01:03:24,680
so like programmable functions would be

1344
01:03:22,050 --> 01:03:28,620
interesting for example close to the

1345
01:03:24,680 --> 01:03:30,720
deterministic networking you want to

1346
01:03:28,620 --> 01:03:33,049
have maybe a low latency control

1347
01:03:30,720 --> 01:03:35,970
function some people talk about

1348
01:03:33,050 --> 01:03:39,030
virtualizing PLC so putting them in a

1349
01:03:35,970 --> 01:03:44,189
data center so that's all computing

1350
01:03:39,030 --> 01:03:46,380
somehow but to be honest as yourself so

1351
01:03:44,190 --> 01:03:49,560
what's the research there I mean this is

1352
01:03:46,380 --> 01:03:51,750
mostly server virtualization maybe you

1353
01:03:49,560 --> 01:03:54,620
have some specialized hardware system

1354
01:03:51,750 --> 01:03:58,710
that understand real-time a little bit

1355
01:03:54,620 --> 01:04:01,160
but I think this is the ITF so the

1356
01:03:58,710 --> 01:04:04,470
challenge here suit is to identify

1357
01:04:01,160 --> 01:04:08,490
interesting research challenges and so

1358
01:04:04,470 --> 01:04:10,430
that's why I'm saying let's be a bit

1359
01:04:08,490 --> 01:04:15,000
more specific when we talk about IOT and

1360
01:04:10,430 --> 01:04:16,589
computing another completely different

1361
01:04:15,000 --> 01:04:18,240
examples would company different

1362
01:04:16,590 --> 01:04:20,550
properties is for example data

1363
01:04:18,240 --> 01:04:23,850
processing so some kind of pipeline data

1364
01:04:20,550 --> 01:04:27,860
analytics aggregation these kind of

1365
01:04:23,850 --> 01:04:31,759
things they are very successful very

1366
01:04:27,860 --> 01:04:38,400
widely deployed systems in the cloud

1367
01:04:31,760 --> 01:04:41,370
this is a sheaf link here and I would

1368
01:04:38,400 --> 01:04:45,120
say we can imagine interesting use cases

1369
01:04:41,370 --> 01:04:47,160
for it here as well but compared to the

1370
01:04:45,120 --> 01:04:49,710
previous example these industrial air

1371
01:04:47,160 --> 01:04:55,790
tea use cases this can be different

1372
01:04:49,710 --> 01:04:58,220
beasts and as different properties so

1373
01:04:55,790 --> 01:05:00,650
let's really look built into the

1374
01:04:58,220 --> 01:05:03,930
technical property is a criteria that

1375
01:05:00,650 --> 01:05:06,690
interesting to discuss these things in a

1376
01:05:03,930 --> 01:05:09,149
meaningful way so for example I think

1377
01:05:06,690 --> 01:05:11,280
it's interesting to understand what are

1378
01:05:09,150 --> 01:05:13,020
the interaction models so stateless

1379
01:05:11,280 --> 01:05:17,610
function or more like a server X are

1380
01:05:13,020 --> 01:05:18,619
more what do we actually mean by H or

1381
01:05:17,610 --> 01:05:22,130
maybe in network

1382
01:05:18,619 --> 01:05:25,220
computing so it are we talking about you

1383
01:05:22,130 --> 01:05:27,980
know intercepting flows looking into

1384
01:05:25,220 --> 01:05:31,399
packets is that more sample application

1385
01:05:27,980 --> 01:05:35,329
data units or just you know coop request

1386
01:05:31,400 --> 01:05:40,099
response where we trigger trigger and

1387
01:05:35,329 --> 01:05:42,799
computation sometimes you you have the

1388
01:05:40,099 --> 01:05:46,190
notion of mobile code so what what what

1389
01:05:42,799 --> 01:05:47,240
is that so what is your execution

1390
01:05:46,190 --> 01:05:51,970
environment for that or how do you

1391
01:05:47,240 --> 01:05:56,209
program that and also really important

1392
01:05:51,970 --> 01:05:59,749
what is the security and it's a trust

1393
01:05:56,210 --> 01:06:01,579
model in these things so so what

1394
01:05:59,749 --> 01:06:04,640
platforms how can you trust platforms

1395
01:06:01,579 --> 01:06:06,740
how can you trust trust the the

1396
01:06:04,640 --> 01:06:10,970
functions the results of those functions

1397
01:06:06,740 --> 01:06:12,499
and what I think we have really learned

1398
01:06:10,970 --> 01:06:14,118
in what meanwhile that it's not

1399
01:06:12,499 --> 01:06:18,279
acceptable to postpone that discussion

1400
01:06:14,119 --> 01:06:23,480
so these are questions that have to be

1401
01:06:18,279 --> 01:06:26,749
asked from the beginning and so in the

1402
01:06:23,480 --> 01:06:30,109
same way as IOT is a very very broad

1403
01:06:26,749 --> 01:06:34,430
topic of course edge computing itself is

1404
01:06:30,109 --> 01:06:37,960
used in different way and Brian's today

1405
01:06:34,430 --> 01:06:42,680
so this is a Etsy mobile computing

1406
01:06:37,960 --> 01:06:45,980
diagram and well it's kind of

1407
01:06:42,680 --> 01:06:48,980
interesting like to some parts of the

1408
01:06:45,980 --> 01:06:51,289
industry but because you can do

1409
01:06:48,980 --> 01:06:53,480
interesting things but technically from

1410
01:06:51,289 --> 01:06:56,599
a say networking perspective or from

1411
01:06:53,480 --> 01:06:58,900
awesome management perspective I mean

1412
01:06:56,599 --> 01:07:03,950
this is just flour computing extended to

1413
01:06:58,900 --> 01:07:09,920
external pots on base stations and doing

1414
01:07:03,950 --> 01:07:12,980
something radio specific perhaps so not

1415
01:07:09,920 --> 01:07:17,569
irrelevant but doesn't require that much

1416
01:07:12,980 --> 01:07:18,920
say networking or internet research so

1417
01:07:17,569 --> 01:07:20,720
when you when you when you say edge

1418
01:07:18,920 --> 01:07:23,059
computing what about what do you mean

1419
01:07:20,720 --> 01:07:25,669
so do you mean which like versus gateway

1420
01:07:23,059 --> 01:07:29,869
platforms between this whole continuum

1421
01:07:25,670 --> 01:07:32,300
from from cloud to edge or do you mean

1422
01:07:29,869 --> 01:07:34,610
something like offloading compute

1423
01:07:32,300 --> 01:07:38,120
in constraint networks perhaps also

1424
01:07:34,610 --> 01:07:40,280
interesting possibly relevant or do you

1425
01:07:38,120 --> 01:07:42,940
mean what I showed earlier like

1426
01:07:40,280 --> 01:07:45,800
disability computing stream processing

1427
01:07:42,940 --> 01:07:48,500
so quite often when people say actually

1428
01:07:45,800 --> 01:07:51,200
they actually mean something like doing

1429
01:07:48,500 --> 01:07:55,180
something on the gateway with cloud

1430
01:07:51,200 --> 01:07:57,649
concepts and cloud technologies and

1431
01:07:55,180 --> 01:08:02,029
these technologies are of course very

1432
01:07:57,650 --> 01:08:07,940
well understood very successful widely

1433
01:08:02,030 --> 01:08:11,320
deployed so mm question is is edge

1434
01:08:07,940 --> 01:08:17,260
computing actually the best term anyway

1435
01:08:11,320 --> 01:08:21,109
so edge computing as I explained earlier

1436
01:08:17,260 --> 01:08:25,190
often has this connotation of extending

1437
01:08:21,109 --> 01:08:28,580
the cloud to the edge and basically

1438
01:08:25,189 --> 01:08:31,790
applying the same technology same

1439
01:08:28,580 --> 01:08:35,149
concepts but also maybe inheriting the

1440
01:08:31,790 --> 01:08:39,200
same trust models or trust anchors in

1441
01:08:35,149 --> 01:08:41,358
those systems and well there's a bursty

1442
01:08:39,200 --> 01:08:48,429
potential of the danger of well

1443
01:08:41,359 --> 01:08:48,430
basically yeah requiring

1444
01:08:49,299 --> 01:08:55,880
dependencies on the cloud so things like

1445
01:08:51,200 --> 01:08:59,269
centralization or maybe promoted

1446
01:08:55,880 --> 01:09:01,250
motivated by business models that expect

1447
01:08:59,270 --> 01:09:04,450
some continuous you know contract

1448
01:09:01,250 --> 01:09:08,210
renewal and so on so unnecessary

1449
01:09:04,450 --> 01:09:11,028
dependencies or unwanted dependencies so

1450
01:09:08,210 --> 01:09:16,880
that may not be the best notion to start

1451
01:09:11,029 --> 01:09:19,299
with in the beginning and so I I thought

1452
01:09:16,880 --> 01:09:24,380
a bit about okay so what could be

1453
01:09:19,299 --> 01:09:28,970
actually interesting in this very white

1454
01:09:24,380 --> 01:09:31,370
space from a thing to thing perspective

1455
01:09:28,970 --> 01:09:34,250
so maybe instead of edge computing we

1456
01:09:31,370 --> 01:09:37,390
want to be talking about computing with

1457
01:09:34,250 --> 01:09:39,799
things or computing four things and

1458
01:09:37,390 --> 01:09:41,480
starting from an from a position or say

1459
01:09:39,799 --> 01:09:44,600
okay we we don't want to enforce the

1460
01:09:41,479 --> 01:09:45,799
appendices on centralized communication

1461
01:09:44,600 --> 01:09:49,969
computing and

1462
01:09:45,799 --> 01:09:57,070
huge infrastructure and while your ITF

1463
01:09:49,969 --> 01:09:59,170
has for example well we essentially them

1464
01:09:57,070 --> 01:10:02,989
develop things like like a co-op

1465
01:09:59,170 --> 01:10:08,500
actually quite a nice example of a

1466
01:10:02,989 --> 01:10:11,839
protocol that just you know it's rather

1467
01:10:08,500 --> 01:10:15,500
minimal in terms of complexity but on

1468
01:10:11,840 --> 01:10:17,000
the other hand was can provide different

1469
01:10:15,500 --> 01:10:20,239
building blocks that allow you to

1470
01:10:17,000 --> 01:10:24,309
realize different scenarios so simple

1471
01:10:20,239 --> 01:10:26,869
you know request response observe so

1472
01:10:24,309 --> 01:10:31,309
subscribe kind of semantics you can run

1473
01:10:26,869 --> 01:10:33,019
it over TCP UDP all these things doesn't

1474
01:10:31,309 --> 01:10:34,730
solve all the problems in the world but

1475
01:10:33,020 --> 01:10:38,599
it's really flexible

1476
01:10:34,730 --> 01:10:43,070
and so is that an interesting approach

1477
01:10:38,599 --> 01:10:48,290
perhaps to to address computing with

1478
01:10:43,070 --> 01:10:51,790
things in this community and so that's

1479
01:10:48,290 --> 01:10:55,610
the thesis of course hoping to get many

1480
01:10:51,790 --> 01:10:58,190
comments on this so potentially

1481
01:10:55,610 --> 01:11:01,730
interesting directions if you weren't

1482
01:10:58,190 --> 01:11:04,969
trying to do so could be yes that was

1483
01:11:01,730 --> 01:11:06,759
the idea of decentralized secure

1484
01:11:04,969 --> 01:11:11,329
computing with things from the beginning

1485
01:11:06,760 --> 01:11:13,840
so enable connecting things in local

1486
01:11:11,329 --> 01:11:16,190
networks that can establish trust

1487
01:11:13,840 --> 01:11:20,230
exchange data but also maybe off flow

1488
01:11:16,190 --> 01:11:24,348
computation or create disability

1489
01:11:20,230 --> 01:11:28,909
computing sessions that doesn't have to

1490
01:11:24,349 --> 01:11:31,730
exclude you know communicating or you

1491
01:11:28,909 --> 01:11:33,199
know integrating the cloud but maybe

1492
01:11:31,730 --> 01:11:37,940
that's not that the mental model we want

1493
01:11:33,199 --> 01:11:42,820
to start with so I mentioned this very

1494
01:11:37,940 --> 01:11:47,030
successful event stream processing

1495
01:11:42,820 --> 01:11:50,540
frameworks in the cloud earlier so in

1496
01:11:47,030 --> 01:11:53,269
the cloud the data centers networking is

1497
01:11:50,540 --> 01:11:55,280
normally really cheap and so that's why

1498
01:11:53,270 --> 01:11:58,429
it's slowly okay to build those systems

1499
01:11:55,280 --> 01:11:59,389
as this overlay where they have security

1500
01:11:58,429 --> 01:12:03,230
and

1501
01:11:59,390 --> 01:12:07,670
about connections and essentially

1502
01:12:03,230 --> 01:12:12,740
abstract from the underlying say no to

1503
01:12:07,670 --> 01:12:17,120
node network that may be a bit expensive

1504
01:12:12,740 --> 01:12:18,830
in certain constraint IOT scenarios so

1505
01:12:17,120 --> 01:12:22,390
because essentially that this is a

1506
01:12:18,830 --> 01:12:24,740
circuit like connectivity model where

1507
01:12:22,390 --> 01:12:25,970
it's very difficult for me to say where

1508
01:12:24,740 --> 01:12:28,400
should I actually offload these

1509
01:12:25,970 --> 01:12:30,950
computations to there are aquifers that

1510
01:12:28,400 --> 01:12:32,330
know where it's available compute

1511
01:12:30,950 --> 01:12:34,400
capacity and so on but they don't really

1512
01:12:32,330 --> 01:12:36,640
know how the network is feeling at a

1513
01:12:34,400 --> 01:12:40,490
certain point because it's so cheap and

1514
01:12:36,640 --> 01:12:45,260
over-provisioned another little issue

1515
01:12:40,490 --> 01:12:46,460
with this approach is that often we find

1516
01:12:45,260 --> 01:12:48,290
ourselves and having to translate

1517
01:12:46,460 --> 01:12:50,810
between different namespaces so when

1518
01:12:48,290 --> 01:12:53,620
using a DNS and so on that means if we

1519
01:12:50,810 --> 01:12:55,540
want to you know offload something

1520
01:12:53,620 --> 01:12:57,800
efficiently in a lightweight fashion

1521
01:12:55,540 --> 01:12:59,810
what we may be required to do lookups

1522
01:12:57,800 --> 01:13:02,360
first and have the infrastructure the

1523
01:12:59,810 --> 01:13:06,380
secure interceptor for that installed

1524
01:13:02,360 --> 01:13:10,190
first so one discussion that is taking

1525
01:13:06,380 --> 01:13:13,580
place in the coins computing in the

1526
01:13:10,190 --> 01:13:18,679
network research group proposed a group

1527
01:13:13,580 --> 01:13:21,019
as well in is to find ways to deal with

1528
01:13:18,680 --> 01:13:23,740
computing in network in a bit different

1529
01:13:21,020 --> 01:13:26,270
way where you are not necessarily

1530
01:13:23,740 --> 01:13:28,790
requiring overlays but you could be able

1531
01:13:26,270 --> 01:13:31,340
to say integrate computing and

1532
01:13:28,790 --> 01:13:36,620
networking a bit closer so for example

1533
01:13:31,340 --> 01:13:40,340
that disability computing could also

1534
01:13:36,620 --> 01:13:41,870
leverage more knowledge that from the

1535
01:13:40,340 --> 01:13:44,540
network or could knowledge information

1536
01:13:41,870 --> 01:13:46,280
from the network such as routing

1537
01:13:44,540 --> 01:13:48,890
information congestion and information

1538
01:13:46,280 --> 01:13:53,080
and so on and you could have a system

1539
01:13:48,890 --> 01:13:55,430
that would be a bit more self organized

1540
01:13:53,080 --> 01:13:59,210
doesn't perhaps require that much

1541
01:13:55,430 --> 01:14:01,730
central orchestration and as well you

1542
01:13:59,210 --> 01:14:05,150
don't have time to go very deep into

1543
01:14:01,730 --> 01:14:09,019
this but so maybe you get a bit the idea

1544
01:14:05,150 --> 01:14:11,690
that so you the proposal here is to move

1545
01:14:09,020 --> 01:14:13,070
away from from overlays to like

1546
01:14:11,690 --> 01:14:16,190
something bit more

1547
01:14:13,070 --> 01:14:19,040
yeah lightweight but where you are able

1548
01:14:16,190 --> 01:14:27,049
to optimize the networking and compute

1549
01:14:19,040 --> 01:14:30,530
resources in a holistic way so thinking

1550
01:14:27,050 --> 01:14:35,870
about interesting say functionality or

1551
01:14:30,530 --> 01:14:38,929
say use cases perhaps in say computing

1552
01:14:35,870 --> 01:14:41,570
with considering things scenarios so

1553
01:14:38,930 --> 01:14:43,970
function of loading I guess is very

1554
01:14:41,570 --> 01:14:46,849
interesting for power saving of a load

1555
01:14:43,970 --> 01:14:49,040
concentration management things like

1556
01:14:46,850 --> 01:14:52,310
trigger execution or reactive

1557
01:14:49,040 --> 01:14:58,480
programming if this then that so when

1558
01:14:52,310 --> 01:15:01,790
new data is generated but also perhaps

1559
01:14:58,480 --> 01:15:03,620
managing all that data so then you can

1560
01:15:01,790 --> 01:15:07,040
remove all scenarios perhaps offloading

1561
01:15:03,620 --> 01:15:10,190
data to a custodian transfer or storage

1562
01:15:07,040 --> 01:15:12,980
service and then the data presenting

1563
01:15:10,190 --> 01:15:16,280
pipelines that I mentioned earlier so be

1564
01:15:12,980 --> 01:15:22,580
able to construct different pipelines in

1565
01:15:16,280 --> 01:15:26,150
a lightweight fashion so just a bit full

1566
01:15:22,580 --> 01:15:30,860
of thought so when I said in the

1567
01:15:26,150 --> 01:15:34,120
beginning I hope th computing will never

1568
01:15:30,860 --> 01:15:39,170
happen that was of course outrageous but

1569
01:15:34,120 --> 01:15:41,300
what I actually meant is I want to

1570
01:15:39,170 --> 01:15:44,930
discuss with you how we can make it

1571
01:15:41,300 --> 01:15:47,450
happen in the ITF and and the thing to

1572
01:15:44,930 --> 01:15:49,190
think research group because I mean to

1573
01:15:47,450 --> 01:15:51,380
be honest we know that there's so many

1574
01:15:49,190 --> 01:15:53,629
forums and you know industry alliances

1575
01:15:51,380 --> 01:15:56,150
that do something was edge computing

1576
01:15:53,630 --> 01:15:58,160
right so and we have to ask ourselves so

1577
01:15:56,150 --> 01:15:59,809
where can we actually make at the end

1578
01:15:58,160 --> 01:16:05,570
what are the research questions that are

1579
01:15:59,810 --> 01:16:09,530
interesting and not yet solved and what

1580
01:16:05,570 --> 01:16:11,509
so I normally also prefer doing for this

1581
01:16:09,530 --> 01:16:15,530
like the unchartered territories these

1582
01:16:11,510 --> 01:16:18,320
days really pursue an application driven

1583
01:16:15,530 --> 01:16:20,150
development approach where you you know

1584
01:16:18,320 --> 01:16:22,219
identify few really interesting things

1585
01:16:20,150 --> 01:16:25,339
that are maybe hard to do these days was

1586
01:16:22,220 --> 01:16:26,900
legacy stuff and then really do a deep

1587
01:16:25,340 --> 01:16:30,170
dive and thing outwards to what you

1588
01:16:26,900 --> 01:16:31,879
need to make this happen and but it's

1589
01:16:30,170 --> 01:16:36,230
really important to really leave that

1590
01:16:31,880 --> 01:16:38,570
you know cozy business case level and

1591
01:16:36,230 --> 01:16:43,389
and and really try to figure out what

1592
01:16:38,570 --> 01:16:45,650
the issues are and so the interesting

1593
01:16:43,390 --> 01:16:47,150
questions to look at is really what what

1594
01:16:45,650 --> 01:16:49,129
what needs to happen what are the

1595
01:16:47,150 --> 01:16:51,379
interaction models the compute

1596
01:16:49,130 --> 01:16:54,440
computation models that we would like to

1597
01:16:51,380 --> 01:16:56,800
support so what for example do we need

1598
01:16:54,440 --> 01:17:00,169
to agree on so do we need to agree on a

1599
01:16:56,800 --> 01:17:05,330
execution platform or just rather on say

1600
01:17:00,170 --> 01:17:07,130
API interfaces and protocols the the

1601
01:17:05,330 --> 01:17:09,880
important pillars in my point of view

1602
01:17:07,130 --> 01:17:13,850
are decentralized lightweight approach

1603
01:17:09,880 --> 01:17:15,980
this joint optimization of computing I

1604
01:17:13,850 --> 01:17:19,909
think it's very promising hasn't been

1605
01:17:15,980 --> 01:17:22,968
done very much and I didn't mention it

1606
01:17:19,909 --> 01:17:25,730
earlier but object security is probably

1607
01:17:22,969 --> 01:17:29,690
as a key to a lightweight non connection

1608
01:17:25,730 --> 01:17:32,000
based approach of course since we are we

1609
01:17:29,690 --> 01:17:35,870
are doing something with computing and

1610
01:17:32,000 --> 01:17:38,480
network in the proposed coin RG so I

1611
01:17:35,870 --> 01:17:40,809
think this so these ideas here could

1612
01:17:38,480 --> 01:17:44,209
tough hire quite nicely was the coin

1613
01:17:40,810 --> 01:17:46,060
agenda perhaps if we could focus a

1614
01:17:44,210 --> 01:17:51,610
little bit on the say constraint things

1615
01:17:46,060 --> 01:18:00,739
space these were my ideas on that topic

1616
01:17:51,610 --> 01:18:02,960
No flamie I think it's one additional

1617
01:18:00,739 --> 01:18:05,059
challenge for edge computing especially

1618
01:18:02,960 --> 01:18:07,100
in decentralized fashion and that's

1619
01:18:05,060 --> 01:18:09,620
what's a secure execution environment

1620
01:18:07,100 --> 01:18:11,179
entail oh yes it's not only the object

1621
01:18:09,620 --> 01:18:12,830
security security the data being

1622
01:18:11,179 --> 01:18:15,350
transmitted around it's like how do I

1623
01:18:12,830 --> 01:18:17,449
get a blob of code and run untrusted

1624
01:18:15,350 --> 01:18:19,250
code an untrusted platform right you

1625
01:18:17,449 --> 01:18:21,169
know with other pieces of untrusted code

1626
01:18:19,250 --> 01:18:23,360
in the same interested platform wait how

1627
01:18:21,170 --> 01:18:24,800
does that actually happen and I think

1628
01:18:23,360 --> 01:18:26,269
there's technologies to do that they'll

1629
01:18:24,800 --> 01:18:29,239
still be standards for how we deploy

1630
01:18:26,270 --> 01:18:32,330
these things and manage routes of trusts

1631
01:18:29,239 --> 01:18:34,250
and and so forth right and do you think

1632
01:18:32,330 --> 01:18:39,100
there are say research questions that

1633
01:18:34,250 --> 01:18:39,100
this community could look at

1634
01:18:39,130 --> 01:18:45,860
well certainly so for example how do i

1635
01:18:43,010 --> 01:18:47,390
how do i trust a platform right so one

1636
01:18:45,860 --> 01:18:49,130
ways have a technology kind of nailed

1637
01:18:47,390 --> 01:18:51,260
down the other would be the amount of

1638
01:18:49,130 --> 01:18:53,300
reputational mechanism and to figure out

1639
01:18:51,260 --> 01:18:55,340
which platforms to be trusted which code

1640
01:18:53,300 --> 01:18:56,660
sources can be trusted and so forth so

1641
01:18:55,340 --> 01:18:58,700
how can that be managed is there any way

1642
01:18:56,660 --> 01:19:00,700
we can have a reputational system for

1643
01:18:58,700 --> 01:19:05,420
example are you one possible route there

1644
01:19:00,700 --> 01:19:07,670
yeah cool things that custom Omen

1645
01:19:05,420 --> 01:19:12,140
reputations are pretty important word I

1646
01:19:07,670 --> 01:19:15,260
think in this context so the problem

1647
01:19:12,140 --> 01:19:19,760
that I'm really interested in in this

1648
01:19:15,260 --> 01:19:22,730
context is one word that has been said

1649
01:19:19,760 --> 01:19:25,100
about 50 times in this room already but

1650
01:19:22,730 --> 01:19:27,620
that nobody seems to know exactly how to

1651
01:19:25,100 --> 01:19:30,800
handle in the IOT space which is the

1652
01:19:27,620 --> 01:19:34,880
word event so there is an event

1653
01:19:30,800 --> 01:19:36,470
happening and what do we do now yeah now

1654
01:19:34,880 --> 01:19:38,840
if only one event is happening it's not

1655
01:19:36,470 --> 01:19:43,010
a big problem but if several of them are

1656
01:19:38,840 --> 01:19:45,470
happening and local memories of things

1657
01:19:43,010 --> 01:19:47,540
are overflowing and so on we need

1658
01:19:45,470 --> 01:19:50,870
something like the custodial transfer

1659
01:19:47,540 --> 01:19:58,130
you talked about and how do we actually

1660
01:19:50,870 --> 01:20:01,580
run this in an environment we are really

1661
01:19:58,130 --> 01:20:04,790
we aren't that were not only do these

1662
01:20:01,580 --> 01:20:08,000
things have nefarious jobs that we are

1663
01:20:04,790 --> 01:20:11,210
talking to but even even if they are all

1664
01:20:08,000 --> 01:20:13,310
on our side and wonderful are they going

1665
01:20:11,210 --> 01:20:15,050
to work I mean is it a custodial

1666
01:20:13,310 --> 01:20:17,660
transfer to something that's going to

1667
01:20:15,050 --> 01:20:21,770
burn together with me in five minutes

1668
01:20:17,660 --> 01:20:24,200
instead a useful thing to do and some

1669
01:20:21,770 --> 01:20:27,890
reputation is is not just past behavior

1670
01:20:24,200 --> 01:20:31,550
here it's it's also knowledge about how

1671
01:20:27,890 --> 01:20:34,070
the thing in all its fingers will

1672
01:20:31,550 --> 01:20:36,680
actually act in a particular environment

1673
01:20:34,070 --> 01:20:38,950
right and I think that there's so much

1674
01:20:36,680 --> 01:20:42,470
that we don't understand about how to

1675
01:20:38,950 --> 01:20:45,320
structure systems of course you can

1676
01:20:42,470 --> 01:20:48,770
always say that's the job of engineering

1677
01:20:45,320 --> 01:20:51,830
they can plan this and and it's all

1678
01:20:48,770 --> 01:20:52,570
wonderful but we know that most systems

1679
01:20:51,830 --> 01:20:54,370
are

1680
01:20:52,570 --> 01:20:56,679
really engineered this way if I build a

1681
01:20:54,370 --> 01:20:59,800
single bridge I can make sure that this

1682
01:20:56,680 --> 01:21:02,620
bridge is kind of connected properly and

1683
01:20:59,800 --> 01:21:05,740
so on but if I have a real IOT system

1684
01:21:02,620 --> 01:21:09,010
like a smart city or a smart nation or

1685
01:21:05,740 --> 01:21:11,679
even home this will evolve over time and

1686
01:21:09,010 --> 01:21:15,340
it would be nice if we really had ways

1687
01:21:11,680 --> 01:21:20,740
to get these storage problems these

1688
01:21:15,340 --> 01:21:26,700
problems where do we put the data if we

1689
01:21:20,740 --> 01:21:32,230
had a way to resolve okay I agree

1690
01:21:26,700 --> 01:21:36,309
hi this is Schuler and so I loved your

1691
01:21:32,230 --> 01:21:38,950
talk of course I like that you we're

1692
01:21:36,310 --> 01:21:40,720
talking about pillars or at least

1693
01:21:38,950 --> 01:21:44,380
adjectives that sort of describe the

1694
01:21:40,720 --> 01:21:45,970
space that we should target one of the

1695
01:21:44,380 --> 01:21:48,250
questions that I think will be echoed in

1696
01:21:45,970 --> 01:21:50,620
the next talk and the draft that's

1697
01:21:48,250 --> 01:21:52,300
associated with it is there are many

1698
01:21:50,620 --> 01:21:54,340
problems in this space or building

1699
01:21:52,300 --> 01:21:55,930
blocks or I love the building block idea

1700
01:21:54,340 --> 01:21:57,520
there are many building blocks that we

1701
01:21:55,930 --> 01:21:59,050
could build but which are the ones that

1702
01:21:57,520 --> 01:22:01,870
are most appropriate for this culture

1703
01:21:59,050 --> 01:22:03,730
for the idea that our they don't

1704
01:22:01,870 --> 01:22:05,980
necessarily have to be our expertise now

1705
01:22:03,730 --> 01:22:08,410
but become our expertise but sort of sit

1706
01:22:05,980 --> 01:22:10,780
squarely in our domain versus some of

1707
01:22:08,410 --> 01:22:12,309
the adjacent standards organizations so

1708
01:22:10,780 --> 01:22:15,969
that I think you should think about that

1709
01:22:12,310 --> 01:22:17,530
as you as we go along hmm so that was

1710
01:22:15,970 --> 01:22:20,890
really why I wanted to get up here but

1711
01:22:17,530 --> 01:22:22,800
then the other thing that you raised and

1712
01:22:20,890 --> 01:22:25,690
when I think about building blocks is

1713
01:22:22,800 --> 01:22:27,430
edge computing is completely a misnomer

1714
01:22:25,690 --> 01:22:31,929
because this really isn't just about

1715
01:22:27,430 --> 01:22:33,460
computing it is about reimagining the

1716
01:22:31,930 --> 01:22:35,740
data center and all the things that the

1717
01:22:33,460 --> 01:22:38,950
data center does in a place that's more

1718
01:22:35,740 --> 01:22:41,380
proximate because all these IOT use

1719
01:22:38,950 --> 01:22:45,940
cases have requirements that that really

1720
01:22:41,380 --> 01:22:49,870
far away cloud can't meet and so edge

1721
01:22:45,940 --> 01:22:52,000
computing is a combination of computing

1722
01:22:49,870 --> 01:22:53,680
and storage and networking and control

1723
01:22:52,000 --> 01:22:57,400
points and data management and probably

1724
01:22:53,680 --> 01:22:59,830
some other things so which of those are

1725
01:22:57,400 --> 01:23:02,410
our domain to work on and then when I

1726
01:22:59,830 --> 01:23:04,540
think of the edge it's again it's part

1727
01:23:02,410 --> 01:23:06,040
of a continuum we don't it's it doesn't

1728
01:23:04,540 --> 01:23:08,080
have to be it could be on

1729
01:23:06,040 --> 01:23:09,730
the thing it could be in the data center

1730
01:23:08,080 --> 01:23:10,360
but so they're gonna be many edges

1731
01:23:09,730 --> 01:23:12,009
they're going to be different

1732
01:23:10,360 --> 01:23:15,759
proximities from where the actions

1733
01:23:12,010 --> 01:23:17,320
happening and but I think one of the

1734
01:23:15,760 --> 01:23:19,450
building blocks that could be in our

1735
01:23:17,320 --> 01:23:23,019
domain from a thing to thing standpoint

1736
01:23:19,450 --> 01:23:25,360
is that edges and clouds are collections

1737
01:23:23,020 --> 01:23:29,170
of things and so maybe the sorts of

1738
01:23:25,360 --> 01:23:32,950
protocols that get developed to federate

1739
01:23:29,170 --> 01:23:35,340
things whether if they're things of

1740
01:23:32,950 --> 01:23:37,599
things or they're just you know devices

1741
01:23:35,340 --> 01:23:39,820
the actual end points is almost

1742
01:23:37,600 --> 01:23:42,030
immaterial but those sorts of protocols

1743
01:23:39,820 --> 01:23:44,290
that Feder ate to create edges

1744
01:23:42,030 --> 01:23:47,110
collections I think could be something

1745
01:23:44,290 --> 01:23:51,720
that are the kinds of protocols I would

1746
01:23:47,110 --> 01:23:55,599
like to see us at least consider yeah so

1747
01:23:51,720 --> 01:23:59,320
yeah thank you so I understand what

1748
01:23:55,600 --> 01:24:03,970
you're saying and so they say notion of

1749
01:23:59,320 --> 01:24:06,309
reimagining Center I have some sympathy

1750
01:24:03,970 --> 01:24:09,370
for that on the other hand I was

1751
01:24:06,310 --> 01:24:11,500
wondering whether we should maybe just

1752
01:24:09,370 --> 01:24:15,550
start a little bit smaller you know and

1753
01:24:11,500 --> 01:24:16,960
not do all of this only maybe it could

1754
01:24:15,550 --> 01:24:19,300
be very constrained in its center oh

1755
01:24:16,960 --> 01:24:21,640
sure and and I so let's go back to

1756
01:24:19,300 --> 01:24:23,530
you're constrained you know this grows

1757
01:24:21,640 --> 01:24:24,580
out of some of the co-op activities so

1758
01:24:23,530 --> 01:24:29,280
constrained devices

1759
01:24:24,580 --> 01:24:31,750
I think the edge challenges that the IOT

1760
01:24:29,280 --> 01:24:33,759
equals constrained devices because

1761
01:24:31,750 --> 01:24:35,620
you're going to do this offload they

1762
01:24:33,760 --> 01:24:39,810
can't all be in constraining devices so

1763
01:24:35,620 --> 01:24:43,480
it challenges that a bit so you could

1764
01:24:39,810 --> 01:24:45,670
talk about the very edge sometimes the

1765
01:24:43,480 --> 01:24:48,009
Bleak called the bleeding edge so yeah

1766
01:24:45,670 --> 01:24:51,040
focus there on the kind of reimagined

1767
01:24:48,010 --> 01:24:54,160
data center in quotes that would live

1768
01:24:51,040 --> 01:24:56,620
there and maybe doesn't provide all of

1769
01:24:54,160 --> 01:24:59,110
the functionality of a data center but

1770
01:24:56,620 --> 01:25:02,530
maybe one like computes start there or

1771
01:24:59,110 --> 01:25:04,990
storage but so I would agree you don't

1772
01:25:02,530 --> 01:25:06,940
have to make it a full-fledged data

1773
01:25:04,990 --> 01:25:08,110
center but think about what that those

1774
01:25:06,940 --> 01:25:12,839
localized

1775
01:25:08,110 --> 01:25:12,839
collections of things need you want yeah

1776
01:25:14,809 --> 01:25:20,130
you mentioned that there obviously all

1777
01:25:18,210 --> 01:25:22,050
these activities ongoing even the

1778
01:25:20,130 --> 01:25:23,400
standards getting an idea of what the

1779
01:25:22,050 --> 01:25:26,210
different standards groups do in that

1780
01:25:23,400 --> 01:25:30,030
space is already a tremendous task a

1781
01:25:26,210 --> 01:25:32,579
different way of approaching this topic

1782
01:25:30,030 --> 01:25:36,000
here's however by looking at what the

1783
01:25:32,579 --> 01:25:39,210
folks in the room for example are

1784
01:25:36,000 --> 01:25:41,489
already doing in terms of deployments

1785
01:25:39,210 --> 01:25:43,800
and and learn from that and maybe take

1786
01:25:41,489 --> 01:25:46,019
it more from a sort of a blight could be

1787
01:25:43,800 --> 01:25:48,420
the science type of approach and see

1788
01:25:46,020 --> 01:25:50,880
like what worked for them and what

1789
01:25:48,420 --> 01:25:53,429
didn't work you know and if you collect

1790
01:25:50,880 --> 01:25:58,110
that sort of input I think there may be

1791
01:25:53,429 --> 01:26:00,270
also some interesting sort of areas of

1792
01:25:58,110 --> 01:26:03,030
the investigations that arise that

1793
01:26:00,270 --> 01:26:04,860
actually can then feed back to the idea

1794
01:26:03,030 --> 01:26:07,400
of community potentially yeah do you

1795
01:26:04,860 --> 01:26:09,900
have something in mind already well if

1796
01:26:07,400 --> 01:26:11,790
it was just talking I

1797
01:26:09,900 --> 01:26:14,369
they have edge computing solution we

1798
01:26:11,790 --> 01:26:16,500
have a computing solution there probably

1799
01:26:14,369 --> 01:26:19,469
five other companies in this room who

1800
01:26:16,500 --> 01:26:22,559
have a similar solution Microsoft where

1801
01:26:19,469 --> 01:26:24,809
they sure Microsoft has something

1802
01:26:22,559 --> 01:26:29,239
there's folks here from Amazon they have

1803
01:26:24,809 --> 01:26:33,179
a solution and so on and yeah okay okay

1804
01:26:29,239 --> 01:26:36,089
thank you just know and I think the the

1805
01:26:33,179 --> 01:26:39,900
Tongans frame is that just came up with

1806
01:26:36,090 --> 01:26:43,290
actually pretty productive we just have

1807
01:26:39,900 --> 01:26:45,000
to think about it in in a different

1808
01:26:43,290 --> 01:26:48,900
sense than we have been thinking about

1809
01:26:45,000 --> 01:26:51,059
in the last 10 years or so so when I

1810
01:26:48,900 --> 01:26:54,360
talk to our electrical engineering

1811
01:26:51,059 --> 01:26:57,239
people and tell them I I work on

1812
01:26:54,360 --> 01:27:01,259
unconstrained systems they look at me

1813
01:26:57,239 --> 01:27:05,009
with large eyes and say all engineering

1814
01:27:01,260 --> 01:27:05,969
happens within constraints and the hard

1815
01:27:05,010 --> 01:27:09,900
part is finding out what those

1816
01:27:05,969 --> 01:27:13,590
constraints are and so when we think

1817
01:27:09,900 --> 01:27:16,949
about computing for things we still have

1818
01:27:13,590 --> 01:27:19,349
a lot of constraints and for instance

1819
01:27:16,949 --> 01:27:22,049
most likely we would have significant

1820
01:27:19,349 --> 01:27:24,329
energy constraints because we don't want

1821
01:27:22,050 --> 01:27:25,469
to blow all the energy we can save

1822
01:27:24,329 --> 01:27:27,619
energy

1823
01:27:25,469 --> 01:27:32,840
out for running it

1824
01:27:27,619 --> 01:27:35,299
we have constraints in terms of the

1825
01:27:32,840 --> 01:27:38,170
levels of protection we can afford to

1826
01:27:35,300 --> 01:27:42,619
these systems the levels of attention

1827
01:27:38,170 --> 01:27:46,130
they can get and so on so I think we

1828
01:27:42,619 --> 01:27:49,280
have a set of new interesting

1829
01:27:46,130 --> 01:27:52,340
constraints here and I think really

1830
01:27:49,280 --> 01:27:56,360
understanding those constraints will

1831
01:27:52,340 --> 01:28:01,039
help us getting from just redoing all

1832
01:27:56,360 --> 01:28:04,579
the the container stuff we do in the big

1833
01:28:01,039 --> 01:28:07,550
web but understanding what we need to do

1834
01:28:04,579 --> 01:28:09,849
to make this really a significant part

1835
01:28:07,550 --> 01:28:09,849
of reality

1836
01:28:15,340 --> 01:28:25,579
Dave wheeler I'm also from Intel and

1837
01:28:21,849 --> 01:28:27,770
even I talked quite a bit so I'm gonna

1838
01:28:25,579 --> 01:28:31,820
kind of springboard off of some of what

1839
01:28:27,770 --> 01:28:34,369
you said and and you know I I like what

1840
01:28:31,820 --> 01:28:37,308
you said about constraints but I

1841
01:28:34,369 --> 01:28:40,308
actually think what we're trying to do

1842
01:28:37,309 --> 01:28:43,449
with edge computing is actually take

1843
01:28:40,309 --> 01:28:48,980
those things with constraints and

1844
01:28:43,449 --> 01:28:52,070
compose compute engine near to the

1845
01:28:48,980 --> 01:28:55,190
problem without the constraints inherent

1846
01:28:52,070 --> 01:28:57,170
in those devices so much like what we do

1847
01:28:55,190 --> 01:29:00,110
in the data center where we take

1848
01:28:57,170 --> 01:29:06,110
elements in Iraq and we compose them

1849
01:29:00,110 --> 01:29:08,329
into a platform on the fly right and we

1850
01:29:06,110 --> 01:29:11,808
have protocols and security and things

1851
01:29:08,329 --> 01:29:13,880
to do that in a trusted way that's what

1852
01:29:11,809 --> 01:29:16,119
we really want to do at the edge so I

1853
01:29:13,880 --> 01:29:19,820
want to move compute over to this

1854
01:29:16,119 --> 01:29:22,969
element but it doesn't have a GPU to do

1855
01:29:19,820 --> 01:29:25,369
my AI algorithm so I combine that with

1856
01:29:22,969 --> 01:29:28,429
something else close by that has that

1857
01:29:25,369 --> 01:29:30,889
and and put storage over here because

1858
01:29:28,429 --> 01:29:33,320
it's it's convenient that's what we

1859
01:29:30,889 --> 01:29:36,289
really want to do with the edge and and

1860
01:29:33,320 --> 01:29:39,018
I think that that's kind of what you

1861
01:29:36,289 --> 01:29:41,179
were saying Eve move the data center

1862
01:29:39,019 --> 01:29:44,030
down towards the edge

1863
01:29:41,179 --> 01:29:46,760
that's a big vision but I think we can

1864
01:29:44,030 --> 01:29:49,938
start off small and take take pieces

1865
01:29:46,760 --> 01:29:51,800
what are those protocols to do you know

1866
01:29:49,939 --> 01:29:53,630
those those five questions you had at

1867
01:29:51,800 --> 01:29:56,420
the beginning we're really good right

1868
01:29:53,630 --> 01:29:58,550
let's look at those take a piece of that

1869
01:29:56,420 --> 01:30:01,789
yeah and and say that that's where we

1870
01:29:58,550 --> 01:30:04,489
need to go right yeah thank you yeah I'm

1871
01:30:01,789 --> 01:30:10,340
of course from familiar with these

1872
01:30:04,489 --> 01:30:12,610
models and solutions I think it could be

1873
01:30:10,340 --> 01:30:16,119
one task perhaps or one interesting

1874
01:30:12,610 --> 01:30:18,530
activity to find out whether this

1875
01:30:16,119 --> 01:30:21,199
constrain things and then maybe

1876
01:30:18,530 --> 01:30:23,719
offloading to more powerful gateways but

1877
01:30:21,199 --> 01:30:26,388
that's the only model or whether they're

1878
01:30:23,719 --> 01:30:28,280
also you know other distributed

1879
01:30:26,389 --> 01:30:34,309
computation models that are interesting

1880
01:30:28,280 --> 01:30:37,369
and so my se perspective right now is

1881
01:30:34,309 --> 01:30:42,309
that maybe it could be more fruitful to

1882
01:30:37,369 --> 01:30:47,119
you know not ossify on the edge gateway

1883
01:30:42,309 --> 01:30:50,090
model so I like your idea of a joint

1884
01:30:47,119 --> 01:30:51,889
optimization a dynamic system however I

1885
01:30:50,090 --> 01:30:53,780
want to occur to me recently but the

1886
01:30:51,889 --> 01:30:56,269
building blocks approach that is taken

1887
01:30:53,780 --> 01:30:59,268
by like whore and that's the problem

1888
01:30:56,269 --> 01:31:00,530
emergent properties so as an example of

1889
01:30:59,269 --> 01:31:03,260
a merchant property going to worry about

1890
01:31:00,530 --> 01:31:06,018
that's privacy so a data format by

1891
01:31:03,260 --> 01:31:08,630
itself may not really be analyzable

1892
01:31:06,019 --> 01:31:12,079
terms of privacy a data access mechanism

1893
01:31:08,630 --> 01:31:13,010
you know may not mean anything just you

1894
01:31:12,079 --> 01:31:15,590
don't know what data you're accessing

1895
01:31:13,010 --> 01:31:17,840
but together there could be a privacy

1896
01:31:15,590 --> 01:31:19,550
risk because the data could be accessed

1897
01:31:17,840 --> 01:31:22,429
in a certain way our associate with a

1898
01:31:19,550 --> 01:31:24,409
person or whatever right so I think one

1899
01:31:22,429 --> 01:31:26,030
one thing to worry about here is that we

1900
01:31:24,409 --> 01:31:28,579
can't necessarily decompose things

1901
01:31:26,030 --> 01:31:31,759
nicely you'd also think how they how

1902
01:31:28,579 --> 01:31:33,199
they stack together we use cases yeah

1903
01:31:31,760 --> 01:31:34,909
and I think when you look at these joint

1904
01:31:33,199 --> 01:31:37,428
optimizations you'll get build

1905
01:31:34,909 --> 01:31:39,259
additional constraints into that like

1906
01:31:37,429 --> 01:31:40,820
for example competition cannot migrate

1907
01:31:39,260 --> 01:31:43,099
across the national boundaries it has

1908
01:31:40,820 --> 01:31:44,420
certain data that's these things also

1909
01:31:43,099 --> 01:31:49,969
need to be considered in the design of

1910
01:31:44,420 --> 01:31:50,630
the system yes good point Michael Koster

1911
01:31:49,969 --> 01:31:53,599
smartthings

1912
01:31:50,630 --> 01:31:54,830
and I wanted to just say that we we sort

1913
01:31:53,599 --> 01:31:57,950
of looked this

1914
01:31:54,830 --> 01:31:59,420
look at this commercially and we have

1915
01:31:57,950 --> 01:32:00,950
more of a compute in the network model

1916
01:31:59,420 --> 01:32:02,240
and now I appreciate really the

1917
01:32:00,950 --> 01:32:05,769
difference between what you're saying as

1918
01:32:02,240 --> 01:32:08,510
edge versus computing in the network and

1919
01:32:05,770 --> 01:32:10,460
so we're taking an application layer

1920
01:32:08,510 --> 01:32:13,610
approach and decomposing application

1921
01:32:10,460 --> 01:32:16,910
functions to granular elements like

1922
01:32:13,610 --> 01:32:19,460
scenes rules behaviors routines and then

1923
01:32:16,910 --> 01:32:21,440
find that we can run them in the network

1924
01:32:19,460 --> 01:32:23,620
on different devices so I think there's

1925
01:32:21,440 --> 01:32:27,769
some kind of a semantic interoperability

1926
01:32:23,620 --> 01:32:29,330
around functions and and sort of what

1927
01:32:27,770 --> 01:32:31,730
you call the little elements of

1928
01:32:29,330 --> 01:32:33,920
computation that you do that sort of

1929
01:32:31,730 --> 01:32:35,660
parallels the elements of sensing and

1930
01:32:33,920 --> 01:32:38,800
actuation mmm yeah that's a big word

1931
01:32:35,660 --> 01:32:38,800
have in mind sounds very cool

1932
01:32:42,220 --> 01:32:53,860
okay and so not only to the actual

1933
01:32:48,770 --> 01:32:53,860
rework thank you

1934
01:33:16,680 --> 01:33:22,780
okay good afternoon ladies gentlemen

1935
01:33:19,510 --> 01:33:25,450
this is the problem state of IOT

1936
01:33:22,780 --> 01:33:27,490
integrated with the edge computing so my

1937
01:33:25,450 --> 01:33:32,260
name is dawn when home I'm working for

1938
01:33:27,490 --> 01:33:36,309
July so first I thanks to chair to

1939
01:33:32,260 --> 01:33:37,240
provide another time to show our demo

1940
01:33:36,310 --> 01:33:41,940
thank you

1941
01:33:37,240 --> 01:33:45,820
so it is the content the first we

1942
01:33:41,940 --> 01:33:49,750
describe what the change on out rep and

1943
01:33:45,820 --> 01:33:52,179
ii will show a short time show for our

1944
01:33:49,750 --> 01:33:55,500
implementation of edge computing the

1945
01:33:52,180 --> 01:33:59,830
goal is to support not left

1946
01:33:55,500 --> 01:34:04,720
yeah TC stored history of our drift in I

1947
01:33:59,830 --> 01:34:08,320
trade ITA 103 meeting we pretend out Rev

1948
01:34:04,720 --> 01:34:13,210
first into to Giles Terry meeting on the

1949
01:34:08,320 --> 01:34:19,030
time the file is the Jerome version so

1950
01:34:13,210 --> 01:34:21,940
at the time we show two demos scenario

1951
01:34:19,030 --> 01:34:24,880
as a use case of IH computing the first

1952
01:34:21,940 --> 01:34:26,980
one is not construction providing or

1953
01:34:24,880 --> 01:34:30,250
moisturing services over construction

1954
01:34:26,980 --> 01:34:33,009
site and second is real-time control

1955
01:34:30,250 --> 01:34:36,550
monitoring system by a lottery inverted

1956
01:34:33,010 --> 01:34:40,780
pendulum system in the last meeting we

1957
01:34:36,550 --> 01:34:44,320
present out ref in on free ITF work

1958
01:34:40,780 --> 01:34:49,240
meeting at the time to fail aim is to

1959
01:34:44,320 --> 01:34:53,230
zero to version okay o for this meeting

1960
01:34:49,240 --> 01:34:56,230
we did some major uptake but first we

1961
01:34:53,230 --> 01:34:58,809
change the file name to specify it under

1962
01:34:56,230 --> 01:35:02,980
t to geology because in the last meeting

1963
01:34:58,810 --> 01:35:07,060
we cut positive feedback comment from

1964
01:35:02,980 --> 01:35:10,750
floor especially Matthias suggested this

1965
01:35:07,060 --> 01:35:13,960
walk should be done in the t2 t RG so

1966
01:35:10,750 --> 01:35:17,190
that's the reason we rename our file aim

1967
01:35:13,960 --> 01:35:18,490
to threaten fidelity blah blah and

1968
01:35:17,190 --> 01:35:22,450
second

1969
01:35:18,490 --> 01:35:25,179
we integrated the sub a and kept

1970
01:35:22,450 --> 01:35:29,820
analysis I remember that

1971
01:35:25,180 --> 01:35:33,760
Sabir presented and discussed at IDF

1972
01:35:29,820 --> 01:35:37,389
100-miles meeting so as a result of the

1973
01:35:33,760 --> 01:35:41,830
integration duo sir for example

1974
01:35:37,390 --> 01:35:45,520
Sabir meteos if torque were added in

1975
01:35:41,830 --> 01:35:50,350
this threat so I show you what is the

1976
01:35:45,520 --> 01:35:53,620
change in with the EOC on poor example

1977
01:35:50,350 --> 01:35:57,160
in Section 3 background the material

1978
01:35:53,620 --> 01:35:59,590
suggested we should clearly separate

1979
01:35:57,160 --> 01:36:02,170
here what is the color computing and

1980
01:35:59,590 --> 01:36:05,530
what is the edge computing so we try to

1981
01:36:02,170 --> 01:36:08,980
add the separation cloud and edge

1982
01:36:05,530 --> 01:36:12,490
computing and we slightly modify on

1983
01:36:08,980 --> 01:36:16,419
second Pole you change of aut for

1984
01:36:12,490 --> 01:36:19,929
example strict latency and jitter Oh

1985
01:36:16,420 --> 01:36:26,170
bring cost on interrupted services and

1986
01:36:19,930 --> 01:36:29,290
privacy and security and section 5 there

1987
01:36:26,170 --> 01:36:31,600
are some to edit or change in section 6

1988
01:36:29,290 --> 01:36:35,500
also in this yeah there are so many

1989
01:36:31,600 --> 01:36:39,580
changes section 7 use cases of edge

1990
01:36:35,500 --> 01:36:44,290
computing is to rename state-of-the-art

1991
01:36:39,580 --> 01:36:50,460
of ith computing the sub a and the cab

1992
01:36:44,290 --> 01:36:56,290
analysis by tab years I thought many

1993
01:36:50,460 --> 01:36:58,810
parts are moved to section 7.1 common

1994
01:36:56,290 --> 01:37:01,720
aspect of at ith computing service

1995
01:36:58,810 --> 01:37:05,650
platform and then the many detailed

1996
01:37:01,720 --> 01:37:10,420
texts are included in appendix a mobile

1997
01:37:05,650 --> 01:37:12,700
of ith computing so I think that you can

1998
01:37:10,420 --> 01:37:16,030
find variable information what is H

1999
01:37:12,700 --> 01:37:18,639
computing and water currently use open

2000
01:37:16,030 --> 01:37:21,490
source product over standard and any

2001
01:37:18,640 --> 01:37:23,530
other related project so you can refer

2002
01:37:21,490 --> 01:37:28,420
some developer up-to-date information

2003
01:37:23,530 --> 01:37:30,730
about H computing yeah this is one of

2004
01:37:28,420 --> 01:37:33,920
the content of the

2005
01:37:30,730 --> 01:37:36,500
the it's computing in this threat I

2006
01:37:33,920 --> 01:37:40,300
would like or discussed the Gateway

2007
01:37:36,500 --> 01:37:43,730
based architecture or ith computing I

2008
01:37:40,300 --> 01:37:47,420
emphasize that this approach this

2009
01:37:43,730 --> 01:37:49,400
architecture to not cover or the case of

2010
01:37:47,420 --> 01:37:52,699
edge computing this is one of a

2011
01:37:49,400 --> 01:37:55,820
particular way when we implement edge

2012
01:37:52,699 --> 01:38:03,049
computing for example or it drew tricht

2013
01:37:55,820 --> 01:38:06,079
or similar to IOT gateway to connect the

2014
01:38:03,050 --> 01:38:09,170
sensor Y device we must provide a

2015
01:38:06,079 --> 01:38:12,519
genetic function in the southbound area

2016
01:38:09,170 --> 01:38:17,630
and to connect to cloud network who are

2017
01:38:12,520 --> 01:38:21,920
sober then we need to educate wave

2018
01:38:17,630 --> 01:38:25,639
function to dos bound area and one

2019
01:38:21,920 --> 01:38:29,510
important thing is to if the bidder hk2

2020
01:38:25,639 --> 01:38:32,599
a function so in educated function we

2021
01:38:29,510 --> 01:38:35,480
can imagine for example storagee

2022
01:38:32,599 --> 01:38:39,770
processing analyze pre-processing

2023
01:38:35,480 --> 01:38:42,829
intelligence whatever so we suggested

2024
01:38:39,770 --> 01:38:47,119
this kind of dog it way architecture of

2025
01:38:42,829 --> 01:38:48,739
ith computing yeah but are we noted

2026
01:38:47,119 --> 01:38:50,869
there are lots of different edge

2027
01:38:48,739 --> 01:38:54,530
computing approach for example each

2028
01:38:50,869 --> 01:38:59,150
cloud educate way distribute edge North

2029
01:38:54,530 --> 01:39:03,050
divides married a node etc so in the

2030
01:38:59,150 --> 01:39:05,440
next revision we will add some different

2031
01:39:03,050 --> 01:39:10,599
edge computing approach in now trapped

2032
01:39:05,440 --> 01:39:14,269
and I would like to ask is already

2033
01:39:10,599 --> 01:39:17,119
42 G urge adoption what we need a word

2034
01:39:14,270 --> 01:39:22,730
up to the progress so before decision

2035
01:39:17,119 --> 01:39:39,558
this adoption I want to show our demo

2036
01:39:22,730 --> 01:39:40,610
what is age computing yeah so in current

2037
01:39:39,559 --> 01:39:43,960
draft

2038
01:39:40,610 --> 01:39:48,570
we only suggest that 80

2039
01:39:43,960 --> 01:39:54,160
based on age computing but I also

2040
01:39:48,570 --> 01:39:57,250
discussed about we must provide many

2041
01:39:54,160 --> 01:39:58,540
cases of each computer in a bony gateway

2042
01:39:57,250 --> 01:40:02,620
pH computing

2043
01:39:58,540 --> 01:40:06,550
so as the doc says that we must consider

2044
01:40:02,620 --> 01:40:09,940
also the current environment as

2045
01:40:06,550 --> 01:40:12,660
computing also so we hoped in the next

2046
01:40:09,940 --> 01:40:22,839
revision we include this kind of the

2047
01:40:12,660 --> 01:40:32,080
cases also in this then deport our next

2048
01:40:22,840 --> 01:40:33,430
meeting willing to review this next

2049
01:40:32,080 --> 01:40:36,610
revision but if we don't know when we

2050
01:40:33,430 --> 01:40:45,210
get it that's maybe a difficult question

2051
01:40:36,610 --> 01:40:48,160
to ask but really I asked it anyway so

2052
01:40:45,210 --> 01:40:50,890
when this next revision comes out I'm

2053
01:40:48,160 --> 01:40:59,370
ready even with us who would be

2054
01:40:50,890 --> 01:40:59,370
interested Videl a bit of a review of it

2055
01:41:01,439 --> 01:41:13,619
Robyn Thomas Michael and Michael though

2056
01:41:06,389 --> 01:41:17,840
uh and Carlos okay thank you thank you

2057
01:41:13,619 --> 01:41:21,299
thank you yeah this is our

2058
01:41:17,840 --> 01:41:26,489
implementation demo so I know that this

2059
01:41:21,300 --> 01:41:28,139
is not user but as Todd says that there

2060
01:41:26,489 --> 01:41:33,178
are a lot of the edge computing for

2061
01:41:28,139 --> 01:41:36,179
example Amazon Microsoft and Google we

2062
01:41:33,179 --> 01:41:39,209
noted the companies are commercial of

2063
01:41:36,179 --> 01:41:42,840
the traditional cloud computing company

2064
01:41:39,209 --> 01:41:45,360
but nowadays the company also moved to

2065
01:41:42,840 --> 01:41:48,809
the attraction to in the area of edge

2066
01:41:45,360 --> 01:41:51,749
computing and Samsung while they're or

2067
01:41:48,809 --> 01:41:54,959
arm also have interest in edge computing

2068
01:41:51,749 --> 01:42:00,019
and there are lots of the project

2069
01:41:54,959 --> 01:42:03,449
regarding of the edge computing so we

2070
01:42:00,019 --> 01:42:08,449
only Soto objects of this demonstration

2071
01:42:03,449 --> 01:42:11,400
is the first show on the attempt or

2072
01:42:08,449 --> 01:42:16,018
implementation of edge computing based

2073
01:42:11,400 --> 01:42:19,438
on open source HX HX is the open source

2074
01:42:16,019 --> 01:42:23,999
on project there is the umbrella of the

2075
01:42:19,439 --> 01:42:28,829
Linux Foundation on air f8 so you can

2076
01:42:23,999 --> 01:42:31,019
use it edge X free not only ITF there

2077
01:42:28,829 --> 01:42:33,840
are lots of the open source regarding to

2078
01:42:31,019 --> 01:42:36,689
on edge computing so you can choose what

2079
01:42:33,840 --> 01:42:39,059
is the best for you and second object

2080
01:42:36,689 --> 01:42:41,309
the core is to provide your mapping

2081
01:42:39,059 --> 01:42:44,010
between our implementation and

2082
01:42:41,309 --> 01:42:46,650
architecture in the track and the final

2083
01:42:44,010 --> 01:42:50,969
is of all important thing is to to

2084
01:42:46,650 --> 01:42:56,070
George adoptions of sport yeah this is

2085
01:42:50,969 --> 01:43:00,239
the service scenario yeah we prepare our

2086
01:42:56,070 --> 01:43:03,469
third year test bed in the front desk so

2087
01:43:00,239 --> 01:43:08,749
after my presentation I show you two

2088
01:43:03,469 --> 01:43:11,639
videos the working scenario so we

2089
01:43:08,749 --> 01:43:12,830
prepared a three-part one is to send

2090
01:43:11,639 --> 01:43:17,060
thing

2091
01:43:12,830 --> 01:43:20,840
and second is to executing system part

2092
01:43:17,060 --> 01:43:27,320
and find the third is to attract device

2093
01:43:20,840 --> 01:43:29,780
part so what is our eighth complete

2094
01:43:27,320 --> 01:43:32,750
function in our implementation is dead

2095
01:43:29,780 --> 01:43:35,690
we are targeting on provided

2096
01:43:32,750 --> 01:43:36,620
intelligence when you talk about

2097
01:43:35,690 --> 01:43:39,860
intelligence

2098
01:43:36,620 --> 01:43:44,320
we are provide two pre-processing data

2099
01:43:39,860 --> 01:43:48,950
and prediction the next barrier and

2100
01:43:44,320 --> 01:43:53,389
analyze and control so to do this we

2101
01:43:48,950 --> 01:43:56,780
train the people on Vera in other

2102
01:43:53,390 --> 01:44:00,440
trouble or other cloud network and then

2103
01:43:56,780 --> 01:44:03,019
we copy the result of the training the

2104
01:44:00,440 --> 01:44:08,719
ratted is the tap to be fired

2105
01:44:03,020 --> 01:44:13,090
so this file is to copy our AG system so

2106
01:44:08,720 --> 01:44:15,860
if we retrieve third era so only

2107
01:44:13,090 --> 01:44:21,770
inference while prediction works don't

2108
01:44:15,860 --> 01:44:26,450
turn in HD system so the main Encore of

2109
01:44:21,770 --> 01:44:29,690
our service Nereo is to detect normal

2110
01:44:26,450 --> 01:44:32,150
situation and on normal situation

2111
01:44:29,690 --> 01:44:34,309
separation what is the normal and what

2112
01:44:32,150 --> 01:44:36,950
is on normal if we think about our

2113
01:44:34,310 --> 01:44:41,390
previous cases the best one is to

2114
01:44:36,950 --> 01:44:45,110
compare the threshold failure so if some

2115
01:44:41,390 --> 01:44:47,900
period exceeds the threshold then you

2116
01:44:45,110 --> 01:44:53,389
can imagine oh this is some extent while

2117
01:44:47,900 --> 01:44:55,700
there are something happen but in for

2118
01:44:53,390 --> 01:45:00,230
example in construction area there are

2119
01:44:55,700 --> 01:45:05,540
many vibration era there are many big

2120
01:45:00,230 --> 01:45:09,259
noise so if we compare only one time or

2121
01:45:05,540 --> 01:45:13,280
second time the threshold failure tent

2122
01:45:09,260 --> 01:45:15,920
or desert is not good so our intention

2123
01:45:13,280 --> 01:45:17,660
is to something more better so it is

2124
01:45:15,920 --> 01:45:21,140
related to the machine running team

2125
01:45:17,660 --> 01:45:22,400
running so in this case if we make some

2126
01:45:21,140 --> 01:45:25,940
noise

2127
01:45:22,400 --> 01:45:29,269
there are some patent so in our IT

2128
01:45:25,940 --> 01:45:31,790
system it detects it is the abnormal

2129
01:45:29,270 --> 01:45:34,610
situation and then it was something for

2130
01:45:31,790 --> 01:45:37,790
example make alarm worst make some

2131
01:45:34,610 --> 01:45:40,070
action to the actuator so you can see

2132
01:45:37,790 --> 01:45:42,980
there are some three things one is to

2133
01:45:40,070 --> 01:45:46,490
same thing in the other to HD system and

2134
01:45:42,980 --> 01:45:51,440
the third is to actuator so it is the

2135
01:45:46,490 --> 01:45:54,620
thing to thing we believe yeah this is

2136
01:45:51,440 --> 01:45:58,059
the test configuration one is sending

2137
01:45:54,620 --> 01:46:01,490
part each part and actuator part and

2138
01:45:58,060 --> 01:46:03,320
this is the software computation as I

2139
01:46:01,490 --> 01:46:09,429
said it is based on HDX

2140
01:46:03,320 --> 01:46:12,170
so first the sensor device by the

2141
01:46:09,430 --> 01:46:15,500
Arduino port or it is connected to

2142
01:46:12,170 --> 01:46:18,710
device to add system and then it cracked

2143
01:46:15,500 --> 01:46:21,410
air up from sensor and then it through

2144
01:46:18,710 --> 01:46:24,560
process Tara and prediction make some

2145
01:46:21,410 --> 01:46:27,860
inference and then he analyzed control

2146
01:46:24,560 --> 01:46:32,060
device and actual device so top law is

2147
01:46:27,860 --> 01:46:37,240
like this or it is a screenshot of each

2148
01:46:32,060 --> 01:46:41,170
process so for it click let received

2149
01:46:37,240 --> 01:46:45,139
sensor from the earth sensor and then it

2150
01:46:41,170 --> 01:46:49,960
delivered to edge system using MQTT and

2151
01:46:45,140 --> 01:46:52,580
then in AI platform it analyzed and some

2152
01:46:49,960 --> 01:46:59,060
decision and this decision will be done

2153
01:46:52,580 --> 01:47:01,850
in other actuator so it is 33rd

2154
01:46:59,060 --> 01:47:06,320
information about each process the first

2155
01:47:01,850 --> 01:47:08,540
one is correct device so it ordered some

2156
01:47:06,320 --> 01:47:11,059
of the sensor is already expensive and

2157
01:47:08,540 --> 01:47:16,730
it is now used in the real field and

2158
01:47:11,060 --> 01:47:23,450
this sound level meter takes you to our

2159
01:47:16,730 --> 01:47:28,209
eighty stem or using arduino r3 and then

2160
01:47:23,450 --> 01:47:31,820
this tara are collected from this way so

2161
01:47:28,210 --> 01:47:35,989
in the latest version of HS are used

2162
01:47:31,820 --> 01:47:40,518
coding language so we implemented

2163
01:47:35,989 --> 01:47:42,709
a model in the padang this is the pre

2164
01:47:40,519 --> 01:47:45,289
post area and prediction I know that a

2165
01:47:42,710 --> 01:47:49,190
lot of the air platform so you can use

2166
01:47:45,289 --> 01:47:52,730
any platform as you want so in this case

2167
01:47:49,190 --> 01:47:57,110
we use air platform which is also

2168
01:47:52,730 --> 01:48:00,829
emitted by a three so the flow is like

2169
01:47:57,110 --> 01:48:04,999
this and then in analyzed and the

2170
01:48:00,829 --> 01:48:07,130
control device cases and finally so I

2171
01:48:04,999 --> 01:48:13,539
think that the most important thing is

2172
01:48:07,130 --> 01:48:13,539
to result or the next step of the

2173
01:48:15,159 --> 01:48:23,659
inference what the prediction is to do

2174
01:48:20,869 --> 01:48:26,989
something to make something for example

2175
01:48:23,659 --> 01:48:30,348
the actuator while some device to

2176
01:48:26,989 --> 01:48:33,619
prepare or pre-painted something so in

2177
01:48:30,349 --> 01:48:45,139
this case our poll is to if something

2178
01:48:33,619 --> 01:48:48,619
happened then we enable the object

2179
01:48:45,139 --> 01:48:50,840
detection model yes sorry so in the

2180
01:48:48,619 --> 01:48:54,039
normal state the object detection model

2181
01:48:50,840 --> 01:48:57,980
is disabled but is something happen and

2182
01:48:54,039 --> 01:49:02,420
at least an critic make impressed then

2183
01:48:57,980 --> 01:49:05,089
in it enable the object detection motor

2184
01:49:02,420 --> 01:49:07,099
so I know that this is a very simple

2185
01:49:05,090 --> 01:49:09,769
kitchen so please understand that this

2186
01:49:07,099 --> 01:49:15,530
is not a commercial product it is kind

2187
01:49:09,769 --> 01:49:18,739
of that pure she kisses yeah so in the

2188
01:49:15,530 --> 01:49:21,440
in our trapped we propose gateway based

2189
01:49:18,739 --> 01:49:26,239
architecture about edge comparing like

2190
01:49:21,440 --> 01:49:29,598
this and how our implementation is

2191
01:49:26,239 --> 01:49:34,669
related to the threat I met a trifle

2192
01:49:29,599 --> 01:49:38,090
mapping so to Sony device who are

2193
01:49:34,670 --> 01:49:40,429
actuate located this area and the

2194
01:49:38,090 --> 01:49:44,150
connected device who are correct era and

2195
01:49:40,429 --> 01:49:47,539
the actual device are located in the HEA

2196
01:49:44,150 --> 01:49:49,369
network function and then pre-processed

2197
01:49:47,539 --> 01:49:53,059
era while prediction

2198
01:49:49,369 --> 01:49:56,389
analyze control device locate is a tenet

2199
01:49:53,059 --> 01:50:00,679
each company function so in our

2200
01:49:56,389 --> 01:50:03,499
demonstration we don't have any HC k to

2201
01:50:00,679 --> 01:50:07,070
a function because we don't have any

2202
01:50:03,499 --> 01:50:10,070
outbound connection but if you want to

2203
01:50:07,070 --> 01:50:12,978
connect to other commercial or other

2204
01:50:10,070 --> 01:50:18,049
kind of the cloud network then you can

2205
01:50:12,979 --> 01:50:22,729
simply make some connection pair to

2206
01:50:18,050 --> 01:50:27,489
educate with a function okay so that

2207
01:50:22,729 --> 01:50:30,709
time I show the real working over our

2208
01:50:27,489 --> 01:50:34,360
implementation then can I change the

2209
01:50:30,709 --> 01:50:34,360
HDMI cable to our system

2210
01:50:46,699 --> 01:50:53,449
so please be patient we are changing the

2211
01:50:50,210 --> 01:50:56,929
HTML cable to our HD system so it takes

2212
01:50:53,449 --> 01:51:04,070
a little time to configure the window

2213
01:50:56,929 --> 01:51:06,860
and Thummim are so after meeting we keep

2214
01:51:04,070 --> 01:51:08,840
to our implementation in this test so if

2215
01:51:06,860 --> 01:51:12,130
you have interest and join us then we

2216
01:51:08,840 --> 01:51:12,130
can explain what it Harry

2217
01:51:53,349 --> 01:51:59,300
because of the differences of the ledger

2218
01:51:56,719 --> 01:52:06,290
Lucia so easy not easy to find the best

2219
01:51:59,300 --> 01:52:09,079
place of terminal window using UNIX then

2220
01:52:06,290 --> 01:52:12,380
they and the projector then they have to

2221
01:52:09,079 --> 01:52:31,308
practice this at least an hour before

2222
01:52:12,380 --> 01:52:33,710
they make the presentation okay music or

2223
01:52:31,309 --> 01:52:40,869
could you show our implementation with

2224
01:52:33,710 --> 01:52:40,869
your camera yeah

2225
01:53:01,039 --> 01:53:12,989
yeah this is the sensor and it is made

2226
01:53:08,699 --> 01:53:15,928
to Arduino port and then so could you

2227
01:53:12,989 --> 01:53:19,049
show to our at least M so a system is

2228
01:53:15,929 --> 01:53:22,499
installed in the laptop Soto laptop has

2229
01:53:19,050 --> 01:53:25,559
the GPU to process Madeira and then

2230
01:53:22,499 --> 01:53:27,659
could you show our actuator this is the

2231
01:53:25,559 --> 01:53:31,530
Raspberry Pi 3 or with the also clean

2232
01:53:27,659 --> 01:53:37,170
and it because it hindered the image

2233
01:53:31,530 --> 01:53:41,719
Dara so it used Intel or videos

2234
01:53:37,170 --> 01:53:49,019
NCS - yeah so could you show the

2235
01:53:41,719 --> 01:53:53,820
screenshot of the laptop yeah so as I

2236
01:53:49,019 --> 01:53:56,730
mentioned that this is the terminal of

2237
01:53:53,820 --> 01:54:01,289
the Itchy process that is the same thing

2238
01:53:56,730 --> 01:54:04,739
there are and so Dara is to trigger to

2239
01:54:01,289 --> 01:54:07,800
AG system and air prep on to something

2240
01:54:04,739 --> 01:54:12,449
port or ml operation and then the result

2241
01:54:07,800 --> 01:54:15,719
is to deliver to racket is ok so the

2242
01:54:12,449 --> 01:54:18,419
explanation is a little long but demo is

2243
01:54:15,719 --> 01:54:23,579
very simple so if we make a noise you

2244
01:54:18,420 --> 01:54:28,219
can find that failure of the net period

2245
01:54:23,579 --> 01:54:33,659
there is some change so a DoD George

2246
01:54:28,219 --> 01:54:36,269
there are some change Carson and re so

2247
01:54:33,659 --> 01:54:40,110
object detection so if we go then

2248
01:54:36,269 --> 01:54:46,550
they'll change is to current era and the

2249
01:54:40,110 --> 01:54:49,949
net payload era in front predict and

2250
01:54:46,550 --> 01:54:52,849
object is get your model it disabled me

2251
01:54:49,949 --> 01:54:52,848
so could you do one tomorrow

2252
01:55:03,510 --> 01:55:11,320
so if we emulate the noise then you can

2253
01:55:07,750 --> 01:55:19,630
find some changing of the oyster next

2254
01:55:11,320 --> 01:55:22,450
barrier then it detects a pretty net

2255
01:55:19,630 --> 01:55:26,410
failure and it executes obligation water

2256
01:55:22,450 --> 01:55:31,030
enable and as a result some action was

2257
01:55:26,410 --> 01:55:34,150
done in the actuator so if we cut off

2258
01:55:31,030 --> 01:55:37,380
the noise and it changed to normal stage

2259
01:55:34,150 --> 01:55:39,759
this is simple but it is a little

2260
01:55:37,380 --> 01:55:43,900
difficult to implement

2261
01:55:39,760 --> 01:55:48,460
okay means could you back to the yeah a

2262
01:55:43,900 --> 01:55:52,599
distal end of our demo so I come back to

2263
01:55:48,460 --> 01:55:56,410
that so okay thank you for your

2264
01:55:52,600 --> 01:55:59,020
listening our demo so I want to your

2265
01:55:56,410 --> 01:56:01,740
opinion or commander kitchen whatever

2266
01:55:59,020 --> 01:56:01,740
thank you

2267
01:56:09,820 --> 01:56:13,759
or akhirah now I had a question about

2268
01:56:12,019 --> 01:56:16,189
the data model that you were using there

2269
01:56:13,760 --> 01:56:18,199
we saw some JSON fragments in the demo

2270
01:56:16,189 --> 01:56:20,479
is that something you made up on your

2271
01:56:18,199 --> 01:56:23,539
own or is that some standardized limo

2272
01:56:20,479 --> 01:56:26,300
yeah thank you poopoo kitchen so in the

2273
01:56:23,539 --> 01:56:30,469
edge yet there I used the Taser to

2274
01:56:26,300 --> 01:56:33,159
deliver their internal inner area so you

2275
01:56:30,469 --> 01:56:38,869
used the taste one so it is come from

2276
01:56:33,159 --> 01:56:40,699
EDX community okay well I was wondering

2277
01:56:38,869 --> 01:56:42,499
cause I mean we're also building some

2278
01:56:40,699 --> 01:56:44,839
standardized data models here at IETF

2279
01:56:42,499 --> 01:56:46,519
Centinela for example would be

2280
01:56:44,840 --> 01:56:48,439
interesting to see like how good fit

2281
01:56:46,519 --> 01:56:50,510
that would be for this kind of cases and

2282
01:56:48,439 --> 01:56:51,979
then bring the learnings back okay

2283
01:56:50,510 --> 01:56:54,289
these are the shortcomings here it works

2284
01:56:51,979 --> 01:56:55,699
well user could be improved that could

2285
01:56:54,289 --> 01:56:59,239
be maybe something an angle have here

2286
01:56:55,699 --> 01:57:03,409
yeah it's a good comment but I'm not

2287
01:56:59,239 --> 01:57:06,619
sure the the RF H and H F is the open

2288
01:57:03,409 --> 01:57:10,509
source project the core is not making

2289
01:57:06,619 --> 01:57:14,420
the tender but oh we can all collaborate

2290
01:57:10,510 --> 01:57:16,729
at the Express project both or regarding

2291
01:57:14,420 --> 01:57:20,689
of the piece the more there okay then I

2292
01:57:16,729 --> 01:57:23,499
try to contact it to the team good

2293
01:57:20,689 --> 01:57:23,499
thanks thank you

2294
01:57:28,269 --> 01:57:35,269
observation whenever looking at his demo

2295
01:57:32,650 --> 01:57:40,009
I think someone should write a paper

2296
01:57:35,269 --> 01:57:42,739
about what good sensors alpha GTM us so

2297
01:57:40,010 --> 01:57:44,959
we have had temperature sensors and

2298
01:57:42,739 --> 01:57:50,119
these are we bad because they are so

2299
01:57:44,959 --> 01:57:56,510
slower and having a noise set so also

2300
01:57:50,119 --> 01:57:59,268
it's may be kind of noisy yes and so

2301
01:57:56,510 --> 01:58:00,650
that's one one interesting problem that

2302
01:57:59,269 --> 01:58:13,159
we all share we want to demonstrate

2303
01:58:00,650 --> 01:58:15,709
something of course it has me because

2304
01:58:13,159 --> 01:58:18,200
they just had to breathe into the system

2305
01:58:15,709 --> 01:58:20,690
and then of course this huge event

2306
01:58:18,200 --> 01:58:24,530
up very freakin so yeah that actually

2307
01:58:20,690 --> 01:58:28,040
work much better than I thought but

2308
01:58:24,530 --> 01:58:32,840
another nice thing that came up on last

2309
01:58:28,040 --> 01:58:35,600
Friday was that we had some component of

2310
01:58:32,840 --> 01:58:39,070
a standard they had a minimum time

2311
01:58:35,600 --> 01:58:42,470
constant of 60 seconds for something and

2312
01:58:39,070 --> 01:58:43,160
we decided we will never ever do that

2313
01:58:42,470 --> 01:58:45,610
again

2314
01:58:43,160 --> 01:58:48,440
because in testing and it doubles

2315
01:58:45,610 --> 01:58:50,570
demonstrating things that means you have

2316
01:58:48,440 --> 01:58:52,910
to wait for something for 60 seconds

2317
01:58:50,570 --> 01:58:56,870
which is completely ok for the actual

2318
01:58:52,910 --> 01:58:59,660
intended usage but for me when you are

2319
01:58:56,870 --> 01:59:01,760
running your CI test you don't want to

2320
01:58:59,660 --> 01:59:05,540
help that wait for 60 seconds before

2321
01:59:01,760 --> 01:59:07,940
something so I think these demos always

2322
01:59:05,540 --> 01:59:20,269
have this interesting metal never love

2323
01:59:07,940 --> 01:59:22,519
what would you done yeah so to get back

2324
01:59:20,270 --> 01:59:24,530
to what we could do for standardisation

2325
01:59:22,520 --> 01:59:27,020
opportunities here so we've been talking

2326
01:59:24,530 --> 01:59:29,360
about this quite a bit and you know AI

2327
01:59:27,020 --> 01:59:31,820
is a service interesting thing to have

2328
01:59:29,360 --> 01:59:33,860
but what I want to do is be able to plug

2329
01:59:31,820 --> 01:59:35,480
and play in AI service with a bunch of

2330
01:59:33,860 --> 01:59:38,900
other things because they I can plug and

2331
01:59:35,480 --> 01:59:40,009
play a sensor you know into a system so

2332
01:59:38,900 --> 01:59:42,500
I don't to use like an orchestration

2333
01:59:40,010 --> 01:59:46,070
statistic node-red to plug in to compute

2334
01:59:42,500 --> 01:59:48,230
surface so I like to see is first of all

2335
01:59:46,070 --> 01:59:49,940
standard way to describe edge surfaces

2336
01:59:48,230 --> 01:59:52,910
that fits in everything's we're doing

2337
01:59:49,940 --> 01:59:54,530
you know your open API or whatever I'd

2338
01:59:52,910 --> 01:59:56,780
like to see some sterilized edge

2339
01:59:54,530 --> 01:59:58,250
services regardless of who deploys them

2340
01:59:56,780 --> 02:00:00,469
you know there should be standardized

2341
01:59:58,250 --> 02:00:01,700
ways to do a I am saying there's some

2342
02:00:00,470 --> 02:00:04,430
interesting standards related to this

2343
02:00:01,700 --> 02:00:06,889
like onyx describing neural net models

2344
02:00:04,430 --> 02:00:08,630
that could be used right

2345
02:00:06,890 --> 02:00:10,640
I think AI interesting is especially

2346
02:00:08,630 --> 02:00:12,350
interesting because it's not Turing

2347
02:00:10,640 --> 02:00:14,150
complete so you can still upload a

2348
02:00:12,350 --> 02:00:15,890
computation without worried about

2349
02:00:14,150 --> 02:00:18,410
someone employees virus you because just

2350
02:00:15,890 --> 02:00:20,180
awful your neural net model so I think

2351
02:00:18,410 --> 02:00:22,880
it's a very interesting you know thing

2352
02:00:20,180 --> 02:00:25,790
to deploy a service with I think related

2353
02:00:22,880 --> 02:00:28,520
to the idea of AI is a service is how

2354
02:00:25,790 --> 02:00:30,290
can we extend discovery mechanisms so we

2355
02:00:28,520 --> 02:00:32,280
have discovery mechanisms for like

2356
02:00:30,290 --> 02:00:34,890
devices the coyote thing

2357
02:00:32,280 --> 02:00:37,950
those same sure mechanisms also work for

2358
02:00:34,890 --> 02:00:44,340
edge computing services okay thank you

2359
02:00:37,950 --> 02:00:47,280
thank you for comment cannabis from

2360
02:00:44,340 --> 02:00:48,590
jabber um please tell us why you used

2361
02:00:47,280 --> 02:00:51,540
Kafka Thanks

2362
02:00:48,590 --> 02:00:55,170
Kafka because the in the sensing the era

2363
02:00:51,540 --> 02:00:58,380
it makes a big volume of data so we used

2364
02:00:55,170 --> 02:01:00,990
the MQTT who are left so among them the

2365
02:00:58,380 --> 02:01:03,210
cop car is a more reliable mechanism to

2366
02:01:00,990 --> 02:01:05,790
train support people Oh Vera so that's

2367
02:01:03,210 --> 02:01:09,870
the reason we use the cop car thank you

2368
02:01:05,790 --> 02:01:12,900
I would echo what Michael McCool just

2369
02:01:09,870 --> 02:01:14,820
said about discovery but one of the

2370
02:01:12,900 --> 02:01:16,410
aspects or at least one of the objects

2371
02:01:14,820 --> 02:01:18,559
that I'm really interested in is all the

2372
02:01:16,410 --> 02:01:20,639
data because I think with all this

2373
02:01:18,560 --> 02:01:24,360
computation everywhere that the data

2374
02:01:20,640 --> 02:01:25,530
gets scattered if you will and the

2375
02:01:24,360 --> 02:01:27,150
question is if you're going to do

2376
02:01:25,530 --> 02:01:28,559
computation how do you marshal the data

2377
02:01:27,150 --> 02:01:31,019
where do you put it after you're done

2378
02:01:28,560 --> 02:01:33,450
and that we need some mechanisms for

2379
02:01:31,020 --> 02:01:37,170
discovering its existence its access

2380
02:01:33,450 --> 02:01:39,900
control etc so I would argue that there

2381
02:01:37,170 --> 02:01:42,120
there may be some utility to some kind

2382
02:01:39,900 --> 02:01:45,780
of discovery mechanisms specifically for

2383
02:01:42,120 --> 02:01:49,040
objects like data okay thank you so

2384
02:01:45,780 --> 02:01:51,690
actually this draft is the title is the

2385
02:01:49,040 --> 02:01:53,790
problem statement or I didn't do the

2386
02:01:51,690 --> 02:01:55,830
edge computing so we are not taking on

2387
02:01:53,790 --> 02:01:58,980
the make sound solution or as some

2388
02:01:55,830 --> 02:02:01,620
propose or so I'm considering of the how

2389
02:01:58,980 --> 02:02:05,250
to hinder their your command so I know

2390
02:02:01,620 --> 02:02:10,019
that you can everything in one thread so

2391
02:02:05,250 --> 02:02:12,030
I'm sorry or what is the best way think

2392
02:02:10,020 --> 02:02:14,460
about edge computing is a micro services

2393
02:02:12,030 --> 02:02:15,719
model there's a set of services you can

2394
02:02:14,460 --> 02:02:18,210
you know plug together in different ways

2395
02:02:15,720 --> 02:02:20,910
one service you can certainly have is a

2396
02:02:18,210 --> 02:02:23,100
storage service right that allows things

2397
02:02:20,910 --> 02:02:25,290
like serial transfers and so forth and

2398
02:02:23,100 --> 02:02:28,020
you know access control so I think it's

2399
02:02:25,290 --> 02:02:30,060
a very important component service want

2400
02:02:28,020 --> 02:02:32,660
to consider I can also do historical

2401
02:02:30,060 --> 02:02:35,760
data searches in this little thing

2402
02:02:32,660 --> 02:02:39,059
you're right I was completing your talk

2403
02:02:35,760 --> 02:02:41,370
and Kurt and Dirk's talk but I think it

2404
02:02:39,060 --> 02:02:43,620
is the thing to put into this draft is

2405
02:02:41,370 --> 02:02:45,660
more about the problem statement

2406
02:02:43,620 --> 02:02:46,050
oh there's we need to find our data if

2407
02:02:45,660 --> 02:02:50,660
we're

2408
02:02:46,050 --> 02:02:54,330
do in network compute and then for dirts

2409
02:02:50,660 --> 02:02:55,620
outrageous opinions segments it's the

2410
02:02:54,330 --> 02:02:57,750
you know what are the building blocks

2411
02:02:55,620 --> 02:03:02,550
and maybe one of them is you know how do

2412
02:02:57,750 --> 02:03:07,260
you find objects that are not merely you

2413
02:03:02,550 --> 02:03:12,540
know the DNS end host address or name

2414
02:03:07,260 --> 02:03:18,120
okay thank you I like the question about

2415
02:03:12,540 --> 02:03:20,010
Kafka cover take offense ago somebody

2416
02:03:18,120 --> 02:03:22,050
was demonstrating something then that

2417
02:03:20,010 --> 02:03:24,440
essentially went into the XMPP groups

2418
02:03:22,050 --> 02:03:28,140
then descended that has recently

2419
02:03:24,440 --> 02:03:29,719
published and they try to build things

2420
02:03:28,140 --> 02:03:31,920
together with the X would be

2421
02:03:29,720 --> 02:03:34,500
infrastructure and didn't quite get it

2422
02:03:31,920 --> 02:03:36,900
to work in the end they just said screw

2423
02:03:34,500 --> 02:03:39,660
it we are going to do this with Kafka

2424
02:03:36,900 --> 02:03:42,660
because it's going to work and what we

2425
02:03:39,660 --> 02:03:46,139
are demonstrating yes not XMPP but the

2426
02:03:42,660 --> 02:03:48,389
actual day tomorrow yeah so we have this

2427
02:03:46,140 --> 02:03:51,000
this interesting little disconnect which

2428
02:03:48,390 --> 02:03:53,490
also came to me came up in the question

2429
02:03:51,000 --> 02:03:56,120
why aren't you using standards you and

2430
02:03:53,490 --> 02:03:59,550
we certainly have to work more on

2431
02:03:56,120 --> 02:04:02,700
aligning the realities of what you

2432
02:03:59,550 --> 02:04:06,710
actually can like together quickly today

2433
02:04:02,700 --> 02:04:09,599
on based on some some open source

2434
02:04:06,710 --> 02:04:12,990
projects that are widely used and the

2435
02:04:09,600 --> 02:04:16,170
standards that we are building yet so

2436
02:04:12,990 --> 02:04:20,190
that that's maybe another piece of work

2437
02:04:16,170 --> 02:04:21,720
that should and fit when you are talking

2438
02:04:20,190 --> 02:04:24,960
about technology like like edge

2439
02:04:21,720 --> 02:04:28,230
computing or computing for things that

2440
02:04:24,960 --> 02:04:30,240
have a high integration aspect to them

2441
02:04:28,230 --> 02:04:35,459
it becomes more and more difficult to

2442
02:04:30,240 --> 02:04:36,450
ignore this issue I think with this we

2443
02:04:35,460 --> 02:04:38,670
are out of time

2444
02:04:36,450 --> 02:04:42,720
only for a while thank you all for

2445
02:04:38,670 --> 02:04:46,680
coming and I hope we can put something

2446
02:04:42,720 --> 02:04:50,640
interesting ever for Singapore and see

2447
02:04:46,680 --> 02:04:51,550
you all in Singapore you think you like

2448
02:04:50,640 --> 02:04:53,610
it

2449
02:04:51,550 --> 02:04:53,610
you

