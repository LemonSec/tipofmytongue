1
00:00:05,180 --> 00:02:03,699
oh no back you get back to the manage to

2
00:02:04,720 --> 00:02:07,720
know

3
00:02:10,610 --> 00:02:13,699
[Music]

4
00:02:22,240 --> 00:02:33,980
eric is taking books not so many that we

5
00:02:30,650 --> 00:02:42,800
have some open mic Tim but nobody was

6
00:02:33,980 --> 00:02:44,810
any we will have some we want some

7
00:02:42,800 --> 00:02:46,160
feedback on like amputees if you invert

8
00:02:44,810 --> 00:02:54,650
you do the work so that could be some

9
00:02:46,160 --> 00:02:56,920
discussion I can when you you think it's

10
00:02:54,650 --> 00:02:56,920
a pity

11
00:02:57,290 --> 00:03:00,370
[Music]

12
00:03:12,900 --> 00:03:16,089
[Music]

13
00:03:59,620 --> 00:04:08,440
okay hello everybody welcome to GTV area

14
00:04:04,150 --> 00:04:08,440
you made it until Thursday yeah

15
00:04:09,200 --> 00:04:19,760
I'm New York Ruben Magnus :

16
00:04:14,200 --> 00:04:23,510
we are we have also in this session we

17
00:04:19,760 --> 00:04:25,849
have to note well you should have seen

18
00:04:23,510 --> 00:04:27,260
it already but maybe you want to reread

19
00:04:25,850 --> 00:04:30,320
some parts of it maybe you want to look

20
00:04:27,260 --> 00:04:37,599
at the code of conduct again that can be

21
00:04:30,320 --> 00:04:37,599
useful from time to time keep it in mind

22
00:04:37,840 --> 00:04:43,880
this is our agenda today we just started

23
00:04:41,360 --> 00:04:46,610
you have a chance to pitch the agenda

24
00:04:43,880 --> 00:04:48,860
basically right now if you want we have

25
00:04:46,610 --> 00:04:51,910
as usually a couple of slides about what

26
00:04:48,860 --> 00:04:53,990
we did in the last couple of months and

27
00:04:51,910 --> 00:04:58,100
what the working groups are doing right

28
00:04:53,990 --> 00:04:59,600
now then like I have a point where I

29
00:04:58,100 --> 00:05:03,650
would like feedback from the community

30
00:04:59,600 --> 00:05:05,150
about where in the IETF to do multipass

31
00:05:03,650 --> 00:05:07,039
work because it's coming up in different

32
00:05:05,150 --> 00:05:08,719
places and I want to make sure that

33
00:05:07,040 --> 00:05:11,650
people are aware and talk to each other

34
00:05:08,720 --> 00:05:15,920
so maybe you have better ideas than I do

35
00:05:11,650 --> 00:05:19,060
and then we have a talk by Christian

36
00:05:15,920 --> 00:05:21,290
about congestion defense in depth and

37
00:05:19,060 --> 00:05:24,380
finally we get an update from Robin

38
00:05:21,290 --> 00:05:26,810
which is a remote talk he presented some

39
00:05:24,380 --> 00:05:29,780
quick based logging schemes last time

40
00:05:26,810 --> 00:05:31,760
and he has pushed out two drafts and a

41
00:05:29,780 --> 00:05:33,760
lot of work and so we thought we'd give

42
00:05:31,760 --> 00:05:42,950
him some time to update on what he did

43
00:05:33,760 --> 00:05:45,490
any questions about the agenda as always

44
00:05:42,950 --> 00:05:49,280
we would like to thank our review team

45
00:05:45,490 --> 00:05:51,140
we got quite frequent reviews in the

46
00:05:49,280 --> 00:05:53,780
last couple of months and that's always

47
00:05:51,140 --> 00:05:54,390
very helpful you can see it's not like a

48
00:05:53,780 --> 00:05:55,710
huge load

49
00:05:54,390 --> 00:05:58,169
[Music]

50
00:05:55,710 --> 00:06:02,580
but it's it's important to have those

51
00:05:58,169 --> 00:06:03,870
previous in quickly and yeah some some

52
00:06:02,580 --> 00:06:10,469
good feedback from these people thank

53
00:06:03,870 --> 00:06:12,330
you very much and this is also the

54
00:06:10,470 --> 00:06:14,460
useless light which is like kind of

55
00:06:12,330 --> 00:06:15,780
summarizes very briefly our view about

56
00:06:14,460 --> 00:06:17,909
the current status of each working group

57
00:06:15,780 --> 00:06:20,820
the one thing to mention is that there's

58
00:06:17,910 --> 00:06:22,229
one working group less but also big

59
00:06:20,820 --> 00:06:24,060
thanks to everybody who worked on this

60
00:06:22,229 --> 00:06:28,050
working group and did the work in this

61
00:06:24,060 --> 00:06:33,900
group so we closed it successfully and

62
00:06:28,050 --> 00:06:39,479
have there are seats out there now if

63
00:06:33,900 --> 00:06:41,460
there are no questions I'd go on also

64
00:06:39,479 --> 00:06:42,030
just to to be a little bit proud of

65
00:06:41,460 --> 00:06:43,739
ourself

66
00:06:42,030 --> 00:06:45,659
this is like the documents that we

67
00:06:43,740 --> 00:06:47,789
published in the last couple of months a

68
00:06:45,660 --> 00:06:49,889
bunch of them are in the editor queue

69
00:06:47,789 --> 00:07:08,039
right now and for new our seats out of

70
00:06:49,889 --> 00:07:12,930
transport area yes I just mentioned

71
00:07:08,039 --> 00:07:14,219
stuff that's related to transport this

72
00:07:12,930 --> 00:07:16,580
is the right one okay

73
00:07:14,220 --> 00:07:20,490
just to mention stuff that's related to

74
00:07:16,580 --> 00:07:23,240
transport most of those things had

75
00:07:20,490 --> 00:07:26,820
happened already because it's Thursday

76
00:07:23,240 --> 00:07:29,280
the the only thing that's so on tomorrow

77
00:07:26,820 --> 00:07:32,010
is Mapuche and it's usually there are a

78
00:07:29,280 --> 00:07:35,070
couple of transport related discussions

79
00:07:32,010 --> 00:07:36,570
there are presentations there but like

80
00:07:35,070 --> 00:07:39,060
you can also go back and watch the

81
00:07:36,570 --> 00:07:42,479
recordings there was ICC a tree with

82
00:07:39,060 --> 00:07:43,500
some interesting TCP related and

83
00:07:42,479 --> 00:07:46,469
congestion related

84
00:07:43,500 --> 00:07:49,260
talks there was something which just

85
00:07:46,470 --> 00:07:52,229
touch transport quite a lot in dispatch

86
00:07:49,260 --> 00:07:53,639
that's called webs web transports so if

87
00:07:52,229 --> 00:07:56,610
you haven't heard of that yet maybe have

88
00:07:53,639 --> 00:07:59,729
a look at it and pen and she also didn't

89
00:07:56,610 --> 00:08:03,060
have me at right no it did yes just yeah

90
00:07:59,729 --> 00:08:05,630
okay it's over sorry but of course it's

91
00:08:03,060 --> 00:08:05,630
related

92
00:08:08,520 --> 00:08:13,378
in general I make one point on the web

93
00:08:11,669 --> 00:08:16,229
print works thing they also had a site

94
00:08:13,379 --> 00:08:18,599
meeting here and it seems like the

95
00:08:16,229 --> 00:08:19,650
outcome of that site meeting is going to

96
00:08:18,599 --> 00:08:23,940
be they're going to think about maybe

97
00:08:19,650 --> 00:08:25,258
doing a bath in Singapore I don't know

98
00:08:23,940 --> 00:08:26,940
what area they're going to send that to

99
00:08:25,259 --> 00:08:28,409
but if it doesn't end up in the

100
00:08:26,940 --> 00:08:31,229
transport area even though it's got

101
00:08:28,409 --> 00:08:33,000
transport rate in the name we should

102
00:08:31,229 --> 00:08:34,799
make sure that there is encouragement

103
00:08:33,000 --> 00:08:36,719
for transport people to show up because

104
00:08:34,799 --> 00:08:49,560
it definitely needs transport are those

105
00:08:36,719 --> 00:08:52,020
on it during the passage dates Ganassi

106
00:08:49,560 --> 00:08:54,839
to add to the web transport topic we

107
00:08:52,020 --> 00:08:57,000
have just created a mailing list web

108
00:08:54,839 --> 00:09:00,029
transport ITF it's currently under the

109
00:08:57,000 --> 00:09:01,529
applications area but like yes I Brian

110
00:09:00,029 --> 00:09:02,779
said there will be transport components

111
00:09:01,529 --> 00:09:04,740
and more love to hear from people

112
00:09:02,779 --> 00:09:09,990
knowledgeable who all send emails to

113
00:09:04,740 --> 00:09:13,279
lists about the very list Colin Perkins

114
00:09:09,990 --> 00:09:16,980
also in the meat's transport ipols loops

115
00:09:13,279 --> 00:09:26,670
continues yeah loops was a transport off

116
00:09:16,980 --> 00:09:28,860
so I hope you all guys okay that gets us

117
00:09:26,670 --> 00:09:32,130
to my point where I really need some

118
00:09:28,860 --> 00:09:35,459
feedback from you guys so we do have a

119
00:09:32,130 --> 00:09:38,070
couple of efforts where something

120
00:09:35,459 --> 00:09:39,569
happens with multipath and it seems that

121
00:09:38,070 --> 00:09:42,720
it's getting worse so that if there's of

122
00:09:39,570 --> 00:09:44,640
course MP TCP however they are basically

123
00:09:42,720 --> 00:09:46,170
at the end of their Charter they don't

124
00:09:44,640 --> 00:09:47,730
really have a new work item right now

125
00:09:46,170 --> 00:09:49,380
and there are people interested in

126
00:09:47,730 --> 00:09:50,970
amputees being general but it doesn't

127
00:09:49,380 --> 00:09:53,579
look like they have any standardization

128
00:09:50,970 --> 00:09:56,370
work should you so my big question is

129
00:09:53,579 --> 00:09:59,910
should I close a working group or is

130
00:09:56,370 --> 00:10:02,970
there another option but we also have

131
00:09:59,910 --> 00:10:05,850
had a lot of discussion about making

132
00:10:02,970 --> 00:10:08,070
quick multipass capable it's even in the

133
00:10:05,850 --> 00:10:11,070
Charter it will not be an aversion one

134
00:10:08,070 --> 00:10:12,870
of quick but it will come up again and

135
00:10:11,070 --> 00:10:16,589
there has been a proposal for multi pass

136
00:10:12,870 --> 00:10:18,120
DCC P and he's working group and of

137
00:10:16,589 --> 00:10:20,339
course there are other discussions which

138
00:10:18,120 --> 00:10:23,089
are related to multi pass in Panaji and

139
00:10:20,339 --> 00:10:23,089
ICC or gene

140
00:10:30,020 --> 00:10:36,480
yes a the important point here that I

141
00:10:35,070 --> 00:10:38,340
want to make sure that people are

142
00:10:36,480 --> 00:10:39,960
somehow think that everybody knows what

143
00:10:38,340 --> 00:10:41,670
what the other people are doing that

144
00:10:39,960 --> 00:10:43,710
good thoughts are brought to the

145
00:10:41,670 --> 00:10:46,979
different groups and not only discussed

146
00:10:43,710 --> 00:10:49,080
in one part of the community and that

147
00:10:46,980 --> 00:10:51,030
also maybe you know we don't do the work

148
00:10:49,080 --> 00:10:52,290
twice we solve the problems once and

149
00:10:51,030 --> 00:10:55,410
then can apply it somewhere if

150
00:10:52,290 --> 00:10:56,849
applicable and the other problem I I

151
00:10:55,410 --> 00:10:58,800
really would like to address is that

152
00:10:56,850 --> 00:11:00,690
also new people from outside because

153
00:10:58,800 --> 00:11:02,640
these protocols become more mature so

154
00:11:00,690 --> 00:11:04,260
more people get interested in it that

155
00:11:02,640 --> 00:11:06,660
they know where to go that they have a

156
00:11:04,260 --> 00:11:07,920
place to ask the question that they know

157
00:11:06,660 --> 00:11:10,620
there is the place where this discussion

158
00:11:07,920 --> 00:11:12,780
will happen in the IETF and it's like as

159
00:11:10,620 --> 00:11:14,820
easy for them as possible to find the

160
00:11:12,780 --> 00:11:17,010
right place and I have one more quick

161
00:11:14,820 --> 00:11:18,510
slide which is basically kind of the

162
00:11:17,010 --> 00:11:21,000
questions a little bit broke them down

163
00:11:18,510 --> 00:11:23,310
so do we need a new group in the ITF do

164
00:11:21,000 --> 00:11:25,470
we need a group in the ITF what did you

165
00:11:23,310 --> 00:11:29,219
about MBT CP what did you about

166
00:11:25,470 --> 00:11:30,600
multipass quick is it useful to split

167
00:11:29,220 --> 00:11:32,310
the work in some way or it should we

168
00:11:30,600 --> 00:11:39,570
make sure it all stays kind of in the

169
00:11:32,310 --> 00:11:42,060
same place David Mark David brought one

170
00:11:39,570 --> 00:11:43,530
of the chairs of TS vwg and help and

171
00:11:42,060 --> 00:11:49,250
hence with a not quite enlightened

172
00:11:43,530 --> 00:11:53,089
self-interest in moving work elsewhere I

173
00:11:49,250 --> 00:11:55,740
would really like to see one form for

174
00:11:53,090 --> 00:12:00,600
for multi path topics that would make an

175
00:11:55,740 --> 00:12:04,590
enormous amount of sense could I suggest

176
00:12:00,600 --> 00:12:08,280
a non working group bath for Singapore

177
00:12:04,590 --> 00:12:10,620
to go over all of these possibly along

178
00:12:08,280 --> 00:12:12,720
the line and he might even think of it

179
00:12:10,620 --> 00:12:15,870
in along the lines of The Dispatch

180
00:12:12,720 --> 00:12:19,110
mechanism we she used in other areas but

181
00:12:15,870 --> 00:12:22,110
at least for Singapore a multi path

182
00:12:19,110 --> 00:12:23,640
interest bath might be a good way to get

183
00:12:22,110 --> 00:12:27,480
everybody in one place and have a better

184
00:12:23,640 --> 00:12:29,460
discussion say great question the buff

185
00:12:27,480 --> 00:12:32,640
would make a lot of sense if it's a

186
00:12:29,460 --> 00:12:34,950
cross area topic do you see that this is

187
00:12:32,640 --> 00:12:37,040
coming up a lot outside of the transport

188
00:12:34,950 --> 00:12:37,040
area

189
00:12:38,690 --> 00:12:45,570
not sure probably not have not pitted

190
00:12:40,800 --> 00:12:46,829
early I lies I hurt

191
00:12:45,570 --> 00:12:49,260
could you go back here to slide it had

192
00:12:46,830 --> 00:12:51,420
all the options on it so I have a

193
00:12:49,260 --> 00:12:59,400
variety of opinions and they change a

194
00:12:51,420 --> 00:13:01,319
lot right now so I think MPT TV should

195
00:12:59,400 --> 00:13:03,209
probably could be closed if there's any

196
00:13:01,320 --> 00:13:06,600
sort of maintenance stuff that pops up

197
00:13:03,210 --> 00:13:08,190
you know is ticket TS vwg or tcp em

198
00:13:06,600 --> 00:13:14,340
whoop sort of preternatural homes right

199
00:13:08,190 --> 00:13:16,800
um I'm I'm I I sort of saw the DCCC beep

200
00:13:14,340 --> 00:13:19,710
multipath proposal I didn't hear about

201
00:13:16,800 --> 00:13:22,589
setp frankly I don't really care about

202
00:13:19,710 --> 00:13:26,130
either of those two so I I don't

203
00:13:22,590 --> 00:13:30,120
so however unsurprisingly I care a lot

204
00:13:26,130 --> 00:13:33,900
about quick so I I think actually so the

205
00:13:30,120 --> 00:13:35,430
multipath work effect the main one right

206
00:13:33,900 --> 00:13:38,189
that we're going to do is is for quick

207
00:13:35,430 --> 00:13:41,339
and and in my mind at least it needs to

208
00:13:38,190 --> 00:13:46,020
be done in quick because it ties in a

209
00:13:41,340 --> 00:13:49,350
lot with the protocol details right and

210
00:13:46,020 --> 00:13:50,850
with with TCP M and multipath tcp tcp

211
00:13:49,350 --> 00:13:52,800
was already a you're quite established

212
00:13:50,850 --> 00:13:55,350
protocol one could say and by the time

213
00:13:52,800 --> 00:13:57,390
we did multipath tcp and so there wasn't

214
00:13:55,350 --> 00:13:59,040
i think it was okay to have it as in a

215
00:13:57,390 --> 00:14:00,630
different working group but doing

216
00:13:59,040 --> 00:14:01,890
multipath quick in a working group that

217
00:14:00,630 --> 00:14:03,570
isn't the quick working group i think

218
00:14:01,890 --> 00:14:05,880
will be very difficult

219
00:14:03,570 --> 00:14:07,170
um i would rather just give quick you

220
00:14:05,880 --> 00:14:09,150
know a third slot or something like that

221
00:14:07,170 --> 00:14:13,140
well maybe we keep the second one and we

222
00:14:09,150 --> 00:14:17,010
use it for this um we absolutely want to

223
00:14:13,140 --> 00:14:19,650
learn from what multipath tcp did um we

224
00:14:17,010 --> 00:14:21,240
don't want to reinvent the stuff there's

225
00:14:19,650 --> 00:14:23,100
a lot of the problem I see is that

226
00:14:21,240 --> 00:14:25,200
there's a lot of sort of architectural

227
00:14:23,100 --> 00:14:27,300
thinking that was done like already

228
00:14:25,200 --> 00:14:30,660
before the ITF work started in trilogy

229
00:14:27,300 --> 00:14:33,030
and elsewhere right and so um it would

230
00:14:30,660 --> 00:14:35,880
probably be good to figure out what the

231
00:14:33,030 --> 00:14:37,949
principles are that underlie multipath

232
00:14:35,880 --> 00:14:40,439
TCP and apply those to quick the

233
00:14:37,950 --> 00:14:42,630
protocol mechanisms in multi-party CBR

234
00:14:40,440 --> 00:14:44,400
but actually because they had to be

235
00:14:42,630 --> 00:14:46,830
because it was TCP and we needed to get

236
00:14:44,400 --> 00:14:48,569
through middle boxes right um and so in

237
00:14:46,830 --> 00:14:50,220
quick we can hopefully do this a lot

238
00:14:48,570 --> 00:14:52,760
cleaner and simpler

239
00:14:50,220 --> 00:14:55,140
but but those those principles I think

240
00:14:52,760 --> 00:14:57,510
would be valuable to figure out what

241
00:14:55,140 --> 00:15:00,330
they were if I could only remember and

242
00:14:57,510 --> 00:15:02,069
and see how we can apply them so so that

243
00:15:00,330 --> 00:15:04,260
could be something that I see crg could

244
00:15:02,070 --> 00:15:06,120
do or you could have a joint joint

245
00:15:04,260 --> 00:15:08,550
session or a workshop or something I

246
00:15:06,120 --> 00:15:10,770
don't know if it's a buff so in theory I

247
00:15:08,550 --> 00:15:12,510
would like to do it exactly that way I

248
00:15:10,770 --> 00:15:14,310
think that's the right way however in

249
00:15:12,510 --> 00:15:15,960
practice what we have right now is that

250
00:15:14,310 --> 00:15:19,530
we already have for example the problem

251
00:15:15,960 --> 00:15:21,870
that some of the they take or TCP people

252
00:15:19,530 --> 00:15:23,310
don't show up in MB TCP anymore and we

253
00:15:21,870 --> 00:15:25,020
have the problem that some of the court

254
00:15:23,310 --> 00:15:27,030
you see people don't show up and quick

255
00:15:25,020 --> 00:15:29,130
anymore so we really have to make sure

256
00:15:27,030 --> 00:15:31,199
that the right people show up at the

257
00:15:29,130 --> 00:15:32,790
right places and I'm not sure if that's

258
00:15:31,200 --> 00:15:34,680
the right the perfect solution for it

259
00:15:32,790 --> 00:15:36,360
but very quickly before I get out of

260
00:15:34,680 --> 00:15:38,969
line so I think that's sort of an

261
00:15:36,360 --> 00:15:42,210
artifact of how the things of all trades

262
00:15:38,970 --> 00:15:43,950
so multipath TCP for a long time has

263
00:15:42,210 --> 00:15:45,960
been a proxy protocol right they're not

264
00:15:43,950 --> 00:15:47,580
really a TCP protocol and so it's not

265
00:15:45,960 --> 00:15:51,990
sort of really surprising that the TCP

266
00:15:47,580 --> 00:15:54,420
folks aren't there anymore and I think

267
00:15:51,990 --> 00:15:55,650
you would probably so and in quickride

268
00:15:54,420 --> 00:15:58,290
we we don't really have a lot of

269
00:15:55,650 --> 00:15:59,400
participation from TCP connection sort

270
00:15:58,290 --> 00:16:01,620
of recovery people because we really

271
00:15:59,400 --> 00:16:04,140
haven't done much we just like the bits

272
00:16:01,620 --> 00:16:06,180
go and and got the underlying protocol

273
00:16:04,140 --> 00:16:07,949
correct I think now this will probably

274
00:16:06,180 --> 00:16:10,349
ramp up especially with China's and

275
00:16:07,950 --> 00:16:11,640
Martin's work on the simulator and then

276
00:16:10,350 --> 00:16:13,410
the Q log stuff that we're gonna see

277
00:16:11,640 --> 00:16:14,790
where you can actually do congestion

278
00:16:13,410 --> 00:16:16,110
control work with quick because we

279
00:16:14,790 --> 00:16:18,390
actually have a protocol now that runs

280
00:16:16,110 --> 00:16:21,770
so I'm hoping that I'll sort of correct

281
00:16:18,390 --> 00:16:21,770
itself but maybe I'm optimistic

282
00:16:23,540 --> 00:16:28,410
Spencer darkus Mary thank you for

283
00:16:26,340 --> 00:16:33,270
bringing this topic forward to address

284
00:16:28,410 --> 00:16:34,530
what it seems like to me that yeah to

285
00:16:33,270 --> 00:16:40,079
the extent that we can come up with

286
00:16:34,530 --> 00:16:42,600
principles that anybody like the point

287
00:16:40,080 --> 00:16:44,400
was not to do quick right the point was

288
00:16:42,600 --> 00:16:46,350
to be able to do quick and prove that

289
00:16:44,400 --> 00:16:48,689
that was then there we can do in their

290
00:16:46,350 --> 00:16:50,310
transport protocols which may even be a

291
00:16:48,690 --> 00:16:54,600
different variant versions of quick the

292
00:16:50,310 --> 00:16:56,760
behave in different ways so I think that

293
00:16:54,600 --> 00:16:59,190
trying to think about things at the at

294
00:16:56,760 --> 00:17:00,100
the principle what were the principles

295
00:16:59,190 --> 00:17:06,699
level

296
00:17:00,100 --> 00:17:09,790
it's really worth doing and then you can

297
00:17:06,699 --> 00:17:11,410
feel what you know if you it seems like

298
00:17:09,790 --> 00:17:15,668
to me that like questions like how do

299
00:17:11,410 --> 00:17:19,839
you how do you pick which paths to use

300
00:17:15,669 --> 00:17:22,480
for which packets win but maybe that's

301
00:17:19,839 --> 00:17:24,579
not tied to a protocol so that maybe

302
00:17:22,480 --> 00:17:27,040
Wesley maybe maybe there are things like

303
00:17:24,579 --> 00:17:32,168
that that you can spin off if you ask

304
00:17:27,040 --> 00:17:34,780
about course area possibilities I we've

305
00:17:32,169 --> 00:17:37,780
had conversations in the idea for a long

306
00:17:34,780 --> 00:17:40,899
time about applications the pop out that

307
00:17:37,780 --> 00:17:47,710
want to manage their bench pass

308
00:17:40,900 --> 00:17:52,179
themselves even though they're not

309
00:17:47,710 --> 00:17:57,760
transport protocols and I would hope

310
00:17:52,179 --> 00:18:07,809
that security and operations people as

311
00:17:57,760 --> 00:18:10,299
well but still card critical

312
00:18:07,809 --> 00:18:13,210
technologies one other place where

313
00:18:10,299 --> 00:18:17,230
multipath work is already being done is

314
00:18:13,210 --> 00:18:21,190
the network coding research group and so

315
00:18:17,230 --> 00:18:22,600
I've actually been that connected to

316
00:18:21,190 --> 00:18:25,900
quick as well somehow or is that

317
00:18:22,600 --> 00:18:29,230
completely independent independent okay

318
00:18:25,900 --> 00:18:31,720
so I've actually been running multipath

319
00:18:29,230 --> 00:18:33,640
routing and transport to aircraft for at

320
00:18:31,720 --> 00:18:35,950
least 15 years published a paper back in

321
00:18:33,640 --> 00:18:38,080
2004 at the I Triple E military

322
00:18:35,950 --> 00:18:40,470
communications conference so practical

323
00:18:38,080 --> 00:18:42,908
background in it but not a lot published

324
00:18:40,470 --> 00:18:44,500
just going to first principles I mean

325
00:18:42,909 --> 00:18:46,510
it's the job of routing to concatenate

326
00:18:44,500 --> 00:18:48,520
links to create paths it's the job of

327
00:18:46,510 --> 00:18:50,408
Transport to then use the paths with

328
00:18:48,520 --> 00:18:51,280
which it's presented but then if we want

329
00:18:50,409 --> 00:18:53,290
to do better than that

330
00:18:51,280 --> 00:18:55,270
it might also be the job of Transport to

331
00:18:53,290 --> 00:18:57,220
give routing a hint about the kind of

332
00:18:55,270 --> 00:19:00,309
paths that it might like and it might be

333
00:18:57,220 --> 00:19:02,350
the job of routing to give Transport a

334
00:19:00,309 --> 00:19:04,899
hint as to the kinds of paths that it

335
00:19:02,350 --> 00:19:07,959
was able to construct so I think this is

336
00:19:04,900 --> 00:19:09,880
intrinsically a a cross layer topic and

337
00:19:07,960 --> 00:19:12,040
it's not just that we need the different

338
00:19:09,880 --> 00:19:13,539
people to talk to each other it's that

339
00:19:12,040 --> 00:19:15,309
we need the different protocols to

340
00:19:13,539 --> 00:19:17,408
talk to each other we need ways of layer

341
00:19:15,309 --> 00:19:19,989
3 giving layer 4 hints and layer for

342
00:19:17,409 --> 00:19:22,570
giving layer 3 hints and I don't know

343
00:19:19,989 --> 00:19:25,059
where within I ATF is the right place to

344
00:19:22,570 --> 00:19:26,710
talk about these cross layer hints the

345
00:19:25,059 --> 00:19:29,080
person was up in a tree had standing

346
00:19:26,710 --> 00:19:33,909
right behind you and raising this in my

347
00:19:29,080 --> 00:19:37,210
brain to a co-chair of panel G so it's

348
00:19:33,909 --> 00:19:39,929
all apparently on the list there as like

349
00:19:37,210 --> 00:19:43,090
sort of like problems and requirements

350
00:19:39,929 --> 00:19:45,309
we are actually kind of a venue for a

351
00:19:43,090 --> 00:19:47,109
for problems in requirements and whatnot

352
00:19:45,309 --> 00:19:48,639
for a subset of the multi path problem

353
00:19:47,109 --> 00:19:50,590
which is exactly the subset of the multi

354
00:19:48,639 --> 00:19:52,629
path problem where you are doing exactly

355
00:19:50,590 --> 00:19:57,549
the kind of hinting that Stu was talking

356
00:19:52,629 --> 00:20:00,009
about but it like so the from what I've

357
00:19:57,549 --> 00:20:01,418
heard in the line so far I had a

358
00:20:00,009 --> 00:20:04,509
slightly different opinion when I got in

359
00:20:01,419 --> 00:20:10,629
line the hat is actually kind of messing

360
00:20:04,509 --> 00:20:13,179
with my brain the V it sounds like a

361
00:20:10,629 --> 00:20:16,178
multi path interest bath is probably a

362
00:20:13,179 --> 00:20:18,669
good idea for Singapore um one of the

363
00:20:16,179 --> 00:20:22,330
outcomes of that could be hey look it's

364
00:20:18,669 --> 00:20:24,399
the usual suspects in the room we need

365
00:20:22,330 --> 00:20:25,629
to have I think we call it a multi path

366
00:20:24,399 --> 00:20:27,219
interest boss you're gonna get a ladder

367
00:20:25,629 --> 00:20:30,639
outing people showing up and that's a

368
00:20:27,220 --> 00:20:32,470
good thing um just to make sure that

369
00:20:30,639 --> 00:20:33,699
like the when we're talking about the

370
00:20:32,470 --> 00:20:37,409
principles that we're talking about the

371
00:20:33,700 --> 00:20:42,369
principle is in the same way as to were

372
00:20:37,409 --> 00:20:43,840
the as to where to work ends up after

373
00:20:42,369 --> 00:20:45,369
that it's definitely in the transport

374
00:20:43,840 --> 00:20:47,590
area somehow but I don't want to have

375
00:20:45,369 --> 00:20:52,658
the buff that we haven't had yet in the

376
00:20:47,590 --> 00:20:54,340
mic line right here um a reflection on

377
00:20:52,659 --> 00:20:57,609
sort of a difference between NP TCP and

378
00:20:54,340 --> 00:21:03,519
MP quick as I'll say a little bit less

379
00:20:57,609 --> 00:21:06,699
pejoratively the Moores did the the way

380
00:21:03,519 --> 00:21:08,799
that that TCP was multipath was

381
00:21:06,700 --> 00:21:10,179
constrained by the design of TCP in a

382
00:21:08,799 --> 00:21:12,009
way that the way that quit will be

383
00:21:10,179 --> 00:21:15,599
multipath is not necessarily designed by

384
00:21:12,009 --> 00:21:15,599
be constrained by the design of quick

385
00:21:15,960 --> 00:21:19,509
way just the network okay yes it allows

386
00:21:18,279 --> 00:21:22,450
to stutters the network the constrained

387
00:21:19,509 --> 00:21:23,529
which yeah I agree with that um quick

388
00:21:22,450 --> 00:21:25,809
does not have the same set of

389
00:21:23,529 --> 00:21:26,890
constraints right so it has quick has a

390
00:21:25,809 --> 00:21:30,040
much larger

391
00:21:26,890 --> 00:21:32,740
in design space that it can explore for

392
00:21:30,040 --> 00:21:34,450
how it does multipath and Van itself

393
00:21:32,740 --> 00:21:36,610
suggests to me that there does need to

394
00:21:34,450 --> 00:21:40,570
be some work separate from quick on sort

395
00:21:36,610 --> 00:21:41,770
of design principles and like transport

396
00:21:40,570 --> 00:21:43,450
independent design principles I think

397
00:21:41,770 --> 00:21:44,889
that's a that's a work that we have to

398
00:21:43,450 --> 00:21:46,990
take on I have no idea where to do it

399
00:21:44,890 --> 00:21:49,540
I'd like to discuss that in a bath in

400
00:21:46,990 --> 00:21:51,040
Singapore so give him Christian as the

401
00:21:49,540 --> 00:21:54,460
next speaker and he said last one in the

402
00:21:51,040 --> 00:21:55,990
mic land across in my plane that's where

403
00:21:54,460 --> 00:21:58,090
they can jump in las going to ask a

404
00:21:55,990 --> 00:22:00,820
really quick clarification question so

405
00:21:58,090 --> 00:22:04,600
when you say multipath do you think it

406
00:22:00,820 --> 00:22:07,629
is in scope for a transport session to

407
00:22:04,600 --> 00:22:09,699
use path diversity that is deeper in the

408
00:22:07,630 --> 00:22:12,580
network than the first hop or last stop

409
00:22:09,700 --> 00:22:14,610
so do i target multi path or multi

410
00:22:12,580 --> 00:22:17,260
interface because multipath TCP

411
00:22:14,610 --> 00:22:19,270
originally tried to do multi path but

412
00:22:17,260 --> 00:22:21,460
will actually deliver this mostly multi

413
00:22:19,270 --> 00:22:23,440
interface and I think for quick the

414
00:22:21,460 --> 00:22:26,799
interest specifically now is a multi

415
00:22:23,440 --> 00:22:28,690
interface support right it just sort of

416
00:22:26,799 --> 00:22:30,190
to see if that's if this is what you

417
00:22:28,690 --> 00:22:33,280
mean or whether you actually move multi

418
00:22:30,190 --> 00:22:36,250
path or not sure yet so I actually had

419
00:22:33,280 --> 00:22:38,559
multi interface in my mind but there

420
00:22:36,250 --> 00:22:41,169
also might be pass stuff that's cross

421
00:22:38,559 --> 00:22:43,320
transport right so that's coming up as

422
00:22:41,169 --> 00:22:43,320
well

423
00:22:45,390 --> 00:22:54,730
this is I think that this problem

424
00:22:49,840 --> 00:22:56,139
statement is this is way too broad which

425
00:22:54,730 --> 00:22:56,860
which relates to something that lasts

426
00:22:56,140 --> 00:22:58,780
just said

427
00:22:56,860 --> 00:23:00,340
first there's the multi interface versus

428
00:22:58,780 --> 00:23:01,600
multi path and I didn't understand that

429
00:23:00,340 --> 00:23:07,090
but I think it's important to

430
00:23:01,600 --> 00:23:08,860
distinguish those things MPT Cebu NP TCP

431
00:23:07,090 --> 00:23:10,178
was right to be chartered as a separate

432
00:23:08,860 --> 00:23:11,918
working group because of a ton of

433
00:23:10,179 --> 00:23:14,049
protocol work to be done then that's

434
00:23:11,919 --> 00:23:15,850
primarily what happened we did not

435
00:23:14,049 --> 00:23:18,070
discuss the condition controller really

436
00:23:15,850 --> 00:23:19,899
that much it was a separate document and

437
00:23:18,070 --> 00:23:21,460
it was fine and you could replace it

438
00:23:19,900 --> 00:23:23,950
with whatever you want that was

439
00:23:21,460 --> 00:23:26,309
effectively what the the protocol

440
00:23:23,950 --> 00:23:29,590
document said I think that's appropriate

441
00:23:26,309 --> 00:23:31,480
similarly if you think about quick as

442
00:23:29,590 --> 00:23:33,399
the next thing that's that we want to

443
00:23:31,480 --> 00:23:36,490
think about doing multipath in I agree

444
00:23:33,400 --> 00:23:37,870
completely with loves that's where the

445
00:23:36,490 --> 00:23:40,390
quick working group is where the

446
00:23:37,870 --> 00:23:42,639
discussion ought to happen and where

447
00:23:40,390 --> 00:23:44,800
that we I don't think that we need to

448
00:23:42,640 --> 00:23:46,420
charter an MP quick working group

449
00:23:44,800 --> 00:23:48,040
because what I'm trying to say here

450
00:23:46,420 --> 00:23:51,570
there is no requirement for an

451
00:23:48,040 --> 00:23:56,440
equivalent of the MPD City working group

452
00:23:51,570 --> 00:23:58,270
in in terms of outside of that I

453
00:23:56,440 --> 00:24:00,760
actually don't know what is left to be

454
00:23:58,270 --> 00:24:02,050
done if all we're talking about here I

455
00:24:00,760 --> 00:24:03,610
mean if you don't know about doing multi

456
00:24:02,050 --> 00:24:04,930
power DC CP and I said again this is all

457
00:24:03,610 --> 00:24:07,209
protocol level work that we're talking

458
00:24:04,930 --> 00:24:08,410
about not condition control work or

459
00:24:07,210 --> 00:24:10,300
anything like that I don't think it

460
00:24:08,410 --> 00:24:11,590
makes sense to have them in a common

461
00:24:10,300 --> 00:24:13,510
place just because they have the word

462
00:24:11,590 --> 00:24:15,250
multipath in front of them because the

463
00:24:13,510 --> 00:24:16,960
work that I ultimately doing there is

464
00:24:15,250 --> 00:24:19,810
protocol work you want the protocol

465
00:24:16,960 --> 00:24:21,370
experts to be in that room so you want

466
00:24:19,810 --> 00:24:23,590
the quick experts to be in the room

467
00:24:21,370 --> 00:24:25,770
where MP click is happening you want TCP

468
00:24:23,590 --> 00:24:29,980
experts in the room at MPT CDs happening

469
00:24:25,770 --> 00:24:32,290
so I don't disagree but I think there

470
00:24:29,980 --> 00:24:34,450
are things left that like may come up in

471
00:24:32,290 --> 00:24:36,250
future more when people use these

472
00:24:34,450 --> 00:24:37,300
protocols even more which is like for

473
00:24:36,250 --> 00:24:39,760
example congestion control this

474
00:24:37,300 --> 00:24:42,159
questions about scheduling and smaller

475
00:24:39,760 --> 00:24:44,710
optimizations interface questions which

476
00:24:42,160 --> 00:24:46,650
pass to setup when right at or if at all

477
00:24:44,710 --> 00:24:49,150
and these questions are all very similar

478
00:24:46,650 --> 00:24:50,740
some of them might clearly be more in

479
00:24:49,150 --> 00:24:52,090
the research area than in in the

480
00:24:50,740 --> 00:24:53,830
transfer protocol but then as you're

481
00:24:52,090 --> 00:24:55,600
standing there do you think there it

482
00:24:53,830 --> 00:24:58,149
would be space for another multi pass

483
00:24:55,600 --> 00:25:00,280
research group in the IRT F because it's

484
00:24:58,150 --> 00:25:03,030
also it's also my parents also covered

485
00:25:00,280 --> 00:25:05,260
by other groups a little bit I mean

486
00:25:03,030 --> 00:25:07,840
there's room if you create room for it

487
00:25:05,260 --> 00:25:10,660
you let us call it that's not my place

488
00:25:07,840 --> 00:25:12,909
to say anything there right but I again

489
00:25:10,660 --> 00:25:15,130
I don't know how that this overlaps here

490
00:25:12,910 --> 00:25:18,460
so in terms of the condition controller

491
00:25:15,130 --> 00:25:20,920
that could go into IC crg the scheduling

492
00:25:18,460 --> 00:25:22,270
itself I I would I would not touch it

493
00:25:20,920 --> 00:25:24,270
with a ten-foot pole because I've done

494
00:25:22,270 --> 00:25:26,580
work on that aspect of it and it's it's

495
00:25:24,270 --> 00:25:29,320
difficult to nail down any particular

496
00:25:26,580 --> 00:25:30,550
you you won't come to consensus or

497
00:25:29,320 --> 00:25:31,600
anything that's meaningful there it's

498
00:25:30,550 --> 00:25:33,460
ultimately going to be left to

499
00:25:31,600 --> 00:25:35,169
implementers to do what they do in terms

500
00:25:33,460 --> 00:25:36,760
of scheduling it might be valuable

501
00:25:35,170 --> 00:25:38,980
research but that's not going to be

502
00:25:36,760 --> 00:25:41,680
valuable enough to create a research

503
00:25:38,980 --> 00:25:43,300
group for so but you I mean actually

504
00:25:41,680 --> 00:25:45,640
that's a right point - right relay a

505
00:25:43,300 --> 00:25:49,210
comment from Robin max from the Java he

506
00:25:45,640 --> 00:25:51,220
said like the the MP quick authors of

507
00:25:49,210 --> 00:25:53,000
the proposed MP Creek multi pass and be

508
00:25:51,220 --> 00:25:55,510
quick draw

509
00:25:53,000 --> 00:25:58,820
they are the same office as for MP TCP

510
00:25:55,510 --> 00:26:00,650
right and so the problems I have here

511
00:25:58,820 --> 00:26:03,470
and I try to press down on this light

512
00:26:00,650 --> 00:26:05,180
was that I want to make sure that those

513
00:26:03,470 --> 00:26:06,110
people who have the expertise even so if

514
00:26:05,180 --> 00:26:08,180
they've been working on a different

515
00:26:06,110 --> 00:26:09,860
protocol actually come to the to the new

516
00:26:08,180 --> 00:26:11,480
working group where this work is done

517
00:26:09,860 --> 00:26:13,850
and currently I see that this is like

518
00:26:11,480 --> 00:26:15,380
off not happening because we have too

519
00:26:13,850 --> 00:26:16,669
many places where we do the work even so

520
00:26:15,380 --> 00:26:19,610
it's different protocols and they need

521
00:26:16,670 --> 00:26:21,080
to do we have places for them the

522
00:26:19,610 --> 00:26:23,629
problem is we have too many places and

523
00:26:21,080 --> 00:26:25,129
the same the same base problem is for

524
00:26:23,630 --> 00:26:27,320
the second point on this slide where

525
00:26:25,130 --> 00:26:29,360
people who are interested in MB TCP and

526
00:26:27,320 --> 00:26:30,740
as soon as I close the embassy working

527
00:26:29,360 --> 00:26:32,120
group they will think outside of the

528
00:26:30,740 --> 00:26:34,880
idea if they would think we don't have a

529
00:26:32,120 --> 00:26:36,709
place for it anymore so I want to make

530
00:26:34,880 --> 00:26:38,360
sure that they can kind of look at the

531
00:26:36,710 --> 00:26:39,860
agender and know where to go and no

532
00:26:38,360 --> 00:26:41,689
where to talk to these people because

533
00:26:39,860 --> 00:26:43,490
everybody is still around and open to

534
00:26:41,690 --> 00:26:45,790
talk to you right so that's a problems I

535
00:26:43,490 --> 00:26:48,170
have yeah so so I can I can speak to the

536
00:26:45,790 --> 00:26:49,909
in terms of MPD's if you work where that

537
00:26:48,170 --> 00:26:51,980
should happen I have a very quick opener

538
00:26:49,910 --> 00:26:53,600
which is I think yeah TCP MRTS vwg both

539
00:26:51,980 --> 00:26:56,060
are wonderful homes for continuing work

540
00:26:53,600 --> 00:26:58,429
that's all we've done in the past sed B

541
00:26:56,060 --> 00:27:00,500
when it closed it moved to TS vwg and

542
00:26:58,430 --> 00:27:01,910
that seemed natural and here we have two

543
00:27:00,500 --> 00:27:07,130
potential homes and they both seem

544
00:27:01,910 --> 00:27:09,110
natural but in terms of the how to get

545
00:27:07,130 --> 00:27:10,580
the right people in the room we've

546
00:27:09,110 --> 00:27:12,590
struggled with that and quick as well

547
00:27:10,580 --> 00:27:14,480
the lost recovery document I've tried to

548
00:27:12,590 --> 00:27:16,189
bring it up to TCP M and present it I've

549
00:27:14,480 --> 00:27:17,750
done it several times but we have a few

550
00:27:16,190 --> 00:27:19,670
people engage in Gauri's there and Bob

551
00:27:17,750 --> 00:27:23,420
is Babas in all of it but then there's

552
00:27:19,670 --> 00:27:24,590
the force of TCP M is not there right we

553
00:27:23,420 --> 00:27:25,880
have a handful of people who are in

554
00:27:24,590 --> 00:27:27,649
order DCP more there but you're not

555
00:27:25,880 --> 00:27:29,870
getting the views from a lot of other

556
00:27:27,650 --> 00:27:31,250
people in TCP M I don't know how to

557
00:27:29,870 --> 00:27:33,379
solve that problem besides encouraging

558
00:27:31,250 --> 00:27:35,330
people to show up if they're interested

559
00:27:33,380 --> 00:27:39,230
they ought to show up and they ought to

560
00:27:35,330 --> 00:27:40,730
engage so I mean like even if I mean

561
00:27:39,230 --> 00:27:43,010
quick right you have this the same

562
00:27:40,730 --> 00:27:44,540
problem but like you could have we could

563
00:27:43,010 --> 00:27:46,220
have split up the quick working group

564
00:27:44,540 --> 00:27:48,110
interest in a quick quick mapping

565
00:27:46,220 --> 00:27:50,090
working group and a quick core protocol

566
00:27:48,110 --> 00:27:52,100
working group which could have addressed

567
00:27:50,090 --> 00:27:54,439
this problem but maybe cost other phone

568
00:27:52,100 --> 00:27:57,679
whatever so quick mapping in terms of

569
00:27:54,440 --> 00:28:00,470
the you know a cheapy mapping put the up

570
00:27:57,680 --> 00:28:01,940
yeah so like this could have addressed

571
00:28:00,470 --> 00:28:02,810
the problem we have right now like I

572
00:28:01,940 --> 00:28:05,370
don't want to change it I'm not

573
00:28:02,810 --> 00:28:06,840
producing it right but

574
00:28:05,370 --> 00:28:09,360
that like this is what I'm talking about

575
00:28:06,840 --> 00:28:10,949
because making decision about who had to

576
00:28:09,360 --> 00:28:12,659
do the work and how to frame it is

577
00:28:10,950 --> 00:28:14,280
actually called implicating by people in

578
00:28:12,660 --> 00:28:16,200
the room yeah in the multi part case I

579
00:28:14,280 --> 00:28:18,180
honestly think that the protocol work is

580
00:28:16,200 --> 00:28:19,800
much more than anything that you do

581
00:28:18,180 --> 00:28:21,180
above it like I don't think there's a

582
00:28:19,800 --> 00:28:22,169
lot of abstraction work to be done like

583
00:28:21,180 --> 00:28:23,640
you said the scheduling and the

584
00:28:22,170 --> 00:28:25,530
condition controllers are independent

585
00:28:23,640 --> 00:28:26,820
the condition controller can go to ICC

586
00:28:25,530 --> 00:28:29,040
are gee I don't think we'll do anything

587
00:28:26,820 --> 00:28:30,480
useful which as a scheduling that leaves

588
00:28:29,040 --> 00:28:36,710
the protocol work and that should be

589
00:28:30,480 --> 00:28:39,330
long in the protocol homes in Baku Baku

590
00:28:36,710 --> 00:28:42,690
few questions of besides agreeing with

591
00:28:39,330 --> 00:28:44,760
Larsen's a previous speaker I believe it

592
00:28:42,690 --> 00:28:48,810
actually having a both it's a bad idea

593
00:28:44,760 --> 00:28:52,020
and why I say so it's totally dependent

594
00:28:48,810 --> 00:28:54,780
on what is your overall timeline you

595
00:28:52,020 --> 00:28:58,100
would like to address his work if you do

596
00:28:54,780 --> 00:29:03,350
consider this work to be used also

597
00:28:58,100 --> 00:29:07,110
inside of other SDOs essentially above

598
00:29:03,350 --> 00:29:09,570
would eliminate this or from 3gpp Ellis

599
00:29:07,110 --> 00:29:11,490
was a really seventeen because

600
00:29:09,570 --> 00:29:15,840
practically you cannot do envy DPP

601
00:29:11,490 --> 00:29:19,380
anymore beef before at least March next

602
00:29:15,840 --> 00:29:22,139
year so forget about having any type of

603
00:29:19,380 --> 00:29:27,360
multipath quake it was already lost in

604
00:29:22,140 --> 00:29:30,840
really sixteen other groups like BBF

605
00:29:27,360 --> 00:29:36,110
also wanted to have such a work being

606
00:29:30,840 --> 00:29:36,110
done again I'm not going to be done so

607
00:29:38,090 --> 00:29:42,480
anyway I don't think that like no matter

608
00:29:40,560 --> 00:29:43,770
what we do there will be no MP quick

609
00:29:42,480 --> 00:29:46,800
work before next March

610
00:29:43,770 --> 00:29:49,920
is not to be you will not even be able

611
00:29:46,800 --> 00:29:51,659
to start anywhere visit problem your can

612
00:29:49,920 --> 00:29:53,970
start work right people started working

613
00:29:51,660 --> 00:29:56,430
on it already so yeah we will not have

614
00:29:53,970 --> 00:29:57,990
an official okay as a participant and

615
00:29:56,430 --> 00:30:01,200
one of the company which originally

616
00:29:57,990 --> 00:30:04,050
proposed this part you simply not going

617
00:30:01,200 --> 00:30:06,680
to be able to propose any work even if

618
00:30:04,050 --> 00:30:10,370
the work can continue in the next year

619
00:30:06,680 --> 00:30:10,370
just my field I

620
00:30:12,360 --> 00:30:16,649
Perkins speaking as an individual um

621
00:30:14,610 --> 00:30:19,559
just in response to that I don't think

622
00:30:16,650 --> 00:30:20,370
if if we have above to discuss that this

623
00:30:19,559 --> 00:30:21,600
sort of thing is gonna make the

624
00:30:20,370 --> 00:30:24,469
slightest bit of difference to the

625
00:30:21,600 --> 00:30:27,379
timescale of the quick work yeah

626
00:30:24,470 --> 00:30:29,760
anything to do with multipath quick as

627
00:30:27,380 --> 00:30:32,700
protocol specifics clearly has to go to

628
00:30:29,760 --> 00:30:34,740
the quick working group I will all that

629
00:30:32,700 --> 00:30:36,480
allows chip in for the timescale of the

630
00:30:34,740 --> 00:30:38,250
chip of the quick working group but I

631
00:30:36,480 --> 00:30:39,600
would be surprised if everything is

632
00:30:38,250 --> 00:30:42,620
finished and ready to do multiplayer

633
00:30:39,600 --> 00:30:42,620
work in that timeframe

634
00:30:46,850 --> 00:30:51,379
Mike don't open issues and quick anymore

635
00:30:53,030 --> 00:30:58,770
in terms of the multipath congestion

636
00:30:55,830 --> 00:31:00,750
control work I mean yes obviously we can

637
00:30:58,770 --> 00:31:05,190
move you know we could do that sort of

638
00:31:00,750 --> 00:31:07,080
work in ICC RG in many ways that would

639
00:31:05,190 --> 00:31:09,960
make a lot of sense

640
00:31:07,080 --> 00:31:10,949
we could also you know potentially you

641
00:31:09,960 --> 00:31:13,350
know there's been some discussion of

642
00:31:10,950 --> 00:31:16,559
potentially moving you know single perf

643
00:31:13,350 --> 00:31:18,570
congestion control up into IC crg rather

644
00:31:16,559 --> 00:31:20,510
than trying to do it in the TCP specific

645
00:31:18,570 --> 00:31:23,340
way in a quick specific way for example

646
00:31:20,510 --> 00:31:25,200
and there are potential advantages to

647
00:31:23,340 --> 00:31:26,790
doing that there's also a potential

648
00:31:25,200 --> 00:31:28,650
disadvantage which is that it ends up in

649
00:31:26,790 --> 00:31:31,610
the IRT F which means that everything is

650
00:31:28,650 --> 00:31:33,660
done as an experimental protocol or as a

651
00:31:31,610 --> 00:31:36,059
informational document and not a

652
00:31:33,660 --> 00:31:39,660
standards document and maybe that

653
00:31:36,059 --> 00:31:42,510
doesn't matter and maybe the IETF is

654
00:31:39,660 --> 00:31:44,660
okay with referring to information all

655
00:31:42,510 --> 00:31:47,070
our experimental documents for the

656
00:31:44,660 --> 00:31:48,390
congestion control and doesn't doesn't

657
00:31:47,070 --> 00:31:50,040
worry about having stands of strike

658
00:31:48,390 --> 00:31:52,500
congestion control algorithms but it is

659
00:31:50,040 --> 00:31:54,510
only something that we should consider I

660
00:31:52,500 --> 00:31:56,640
mean there's one more difference like

661
00:31:54,510 --> 00:31:59,820
IETF documents have IETF consensus and

662
00:31:56,640 --> 00:32:01,740
IRT documents don't yes yes so I mean it

663
00:31:59,820 --> 00:32:04,200
changes the type of review it changes

664
00:32:01,740 --> 00:32:06,120
that the type of document we get and and

665
00:32:04,200 --> 00:32:07,679
maybe that that matters maybe that

666
00:32:06,120 --> 00:32:10,678
doesn't matter get given this particular

667
00:32:07,679 --> 00:32:12,330
problem domain it's not like a lot of

668
00:32:10,679 --> 00:32:21,000
the internet runs on standard congestion

669
00:32:12,330 --> 00:32:23,820
control anyway can we generalize

670
00:32:21,000 --> 00:32:25,320
congestion control multiple most of eff

671
00:32:23,820 --> 00:32:26,580
congestion control across

672
00:32:25,320 --> 00:32:29,100
the transport protocols or other

673
00:32:26,580 --> 00:32:31,529
protocols specific differences enough to

674
00:32:29,100 --> 00:32:33,178
cause problems I'm not sure we've we've

675
00:32:31,529 --> 00:32:37,549
investigated that well enough to know

676
00:32:33,179 --> 00:32:41,610
the answer maybe we can I don't know

677
00:32:37,549 --> 00:32:44,759
similarly you know things like half

678
00:32:41,610 --> 00:32:47,908
awareness routing if you see you reach

679
00:32:44,759 --> 00:32:49,889
retransmission scheduling a I think we

680
00:32:47,909 --> 00:32:51,600
perhaps need a conversation to figure

681
00:32:49,889 --> 00:32:54,809
out how general this can be and how much

682
00:32:51,600 --> 00:32:56,908
it is unavoidably protocol-specific

683
00:32:54,809 --> 00:32:58,049
if we're trying to generalize things we

684
00:32:56,909 --> 00:33:01,320
should understand whether it's possible

685
00:32:58,049 --> 00:33:02,580
to generalize them so I think that

686
00:33:01,320 --> 00:33:04,320
that's kind of a long-winded way of

687
00:33:02,580 --> 00:33:09,870
saying plus one so a longer discussion

688
00:33:04,320 --> 00:33:12,960
in Singapore David scan Ozzie

689
00:33:09,870 --> 00:33:16,949
I really have to eat this one yeah it's

690
00:33:12,960 --> 00:33:19,409
Kedah see google this sounds to me a lot

691
00:33:16,950 --> 00:33:22,259
like a premature optimization in the

692
00:33:19,409 --> 00:33:25,710
sense that the reason we form working

693
00:33:22,259 --> 00:33:27,990
groups in the ITF is that we have people

694
00:33:25,710 --> 00:33:29,549
that don't have a home and so we take

695
00:33:27,990 --> 00:33:31,470
those birds of a feather and we help

696
00:33:29,549 --> 00:33:33,720
them flock together to make a bath

697
00:33:31,470 --> 00:33:36,690
working group so everyone is happy and

698
00:33:33,720 --> 00:33:40,980
sing Kumbaya yeah

699
00:33:36,690 --> 00:33:42,870
but the but in this case like I don't

700
00:33:40,980 --> 00:33:45,149
see anyone with a draft saying I don't

701
00:33:42,870 --> 00:33:46,860
know where to put this like if people

702
00:33:45,149 --> 00:33:48,928
are doing this work it'll go to the

703
00:33:46,860 --> 00:33:52,229
right place say quick multipath we'll go

704
00:33:48,929 --> 00:33:55,080
in quick so on and so forth right where

705
00:33:52,230 --> 00:33:58,950
I said I would close MP TCP right yeah

706
00:33:55,080 --> 00:34:00,658
and I am not and the reason we closed MP

707
00:33:58,950 --> 00:34:03,120
TCP is that there is no more things

708
00:34:00,659 --> 00:34:05,009
happening and if they come back we will

709
00:34:03,120 --> 00:34:07,590
reopen the working group that's a common

710
00:34:05,009 --> 00:34:10,290
pattern at the IETF you don't need a

711
00:34:07,590 --> 00:34:17,279
place for these hypothetical Jess I

712
00:34:10,290 --> 00:34:19,469
might come one day and so I mean like I

713
00:34:17,280 --> 00:34:21,060
again agree but it doesn't address the

714
00:34:19,469 --> 00:34:23,489
problems I have it doesn't address that

715
00:34:21,060 --> 00:34:25,589
people with the expertise we need have

716
00:34:23,489 --> 00:34:26,969
to go to multiple groups and potentially

717
00:34:25,589 --> 00:34:28,500
have to say the same things over there

718
00:34:26,969 --> 00:34:30,868
right and it doesn't address a problem

719
00:34:28,500 --> 00:34:32,460
that people come from come from the

720
00:34:30,869 --> 00:34:33,899
outside don't know where to go because

721
00:34:32,460 --> 00:34:35,760
they don't know the inner structure as

722
00:34:33,899 --> 00:34:38,040
well as we do so I understand the

723
00:34:35,760 --> 00:34:40,919
theoretical problem you described

724
00:34:38,040 --> 00:34:42,960
I have never seen it in practice what

725
00:34:40,918 --> 00:34:44,969
water I don't see these multiple working

726
00:34:42,960 --> 00:34:47,580
groups were that aren't talking to each

727
00:34:44,969 --> 00:34:49,709
other we have it we have it in practical

728
00:34:47,580 --> 00:34:51,810
practice we have it in mp TCP because no

729
00:34:49,710 --> 00:34:53,159
TCP we show up anymore and we have it in

730
00:34:51,810 --> 00:34:54,870
quick because the transfer people don't

731
00:34:53,159 --> 00:34:57,750
but you creating a new working group

732
00:34:54,870 --> 00:35:00,240
will not get people to show up like I'm

733
00:34:57,750 --> 00:35:01,860
I work on quick and I will keep going to

734
00:35:00,240 --> 00:35:04,799
quick and if we do multipath in quickly

735
00:35:01,860 --> 00:35:06,840
I will go there if I don't go to NP TCP

736
00:35:04,800 --> 00:35:08,790
I won't go to this other or working

737
00:35:06,840 --> 00:35:10,470
group either like at the end of the day

738
00:35:08,790 --> 00:35:12,120
or maybe I will choose to depending on

739
00:35:10,470 --> 00:35:13,439
the drafts they are but I will go for

740
00:35:12,120 --> 00:35:15,569
the drafts in the agenda not for the

741
00:35:13,440 --> 00:35:17,670
working group so but you would go so you

742
00:35:15,570 --> 00:35:19,590
would go to an working group that is

743
00:35:17,670 --> 00:35:21,450
chartered to do MP quick work right

744
00:35:19,590 --> 00:35:22,770
because you want to do that and if

745
00:35:21,450 --> 00:35:24,629
that's happened to be the same working

746
00:35:22,770 --> 00:35:26,640
group that works on some kind of TCP and

747
00:35:24,630 --> 00:35:28,200
extension I'm not proposing that I want

748
00:35:26,640 --> 00:35:31,259
this group right but then you would go

749
00:35:28,200 --> 00:35:35,279
there yeah and then leave halfway

750
00:35:31,260 --> 00:35:37,740
through but and people do that all I've

751
00:35:35,280 --> 00:35:39,180
done like for example I started this

752
00:35:37,740 --> 00:35:40,560
particular meeting in another session

753
00:35:39,180 --> 00:35:43,020
because I wanted to see that and then

754
00:35:40,560 --> 00:35:44,430
came over here we're all busy there are

755
00:35:43,020 --> 00:35:46,950
conflicts and that was always be the

756
00:35:44,430 --> 00:35:49,169
case it's i if you want

757
00:35:46,950 --> 00:35:51,060
cross-pollination and I've it's been

758
00:35:49,170 --> 00:35:53,580
said before you want to encourage people

759
00:35:51,060 --> 00:35:56,910
to review and that's very hard but

760
00:35:53,580 --> 00:35:59,160
adding process and working groups is not

761
00:35:56,910 --> 00:36:00,330
how you solve this I don't know how to

762
00:35:59,160 --> 00:36:06,420
solve it but I don't think this will

763
00:36:00,330 --> 00:36:07,980
help generate a map I'll be brief

764
00:36:06,420 --> 00:36:17,490
because I want to leave time for the

765
00:36:07,980 --> 00:36:21,060
next speaker but but basically I mean

766
00:36:17,490 --> 00:36:24,120
what not said there is no evidence that

767
00:36:21,060 --> 00:36:26,420
the guy were doing multi paths are not

768
00:36:24,120 --> 00:36:29,150
participating in quick they are

769
00:36:26,420 --> 00:36:32,430
so there is no problem to solve there

770
00:36:29,150 --> 00:36:35,700
there is something that could be said

771
00:36:32,430 --> 00:36:39,750
about adding ICC ology look at the issue

772
00:36:35,700 --> 00:36:41,549
of multi-link congestion control for a

773
00:36:39,750 --> 00:36:44,100
theoretical point of view that will be a

774
00:36:41,550 --> 00:36:45,870
very interesting because that's the kind

775
00:36:44,100 --> 00:36:47,279
of stuff that gets picked up I mean if I

776
00:36:45,870 --> 00:36:50,069
look at the work that quick did on

777
00:36:47,280 --> 00:36:51,630
congestion that values teams do yeah in

778
00:36:50,070 --> 00:36:51,900
here we they do we know but in practice

779
00:36:51,630 --> 00:36:54,779
it

780
00:36:51,900 --> 00:36:58,019
in practice they pit the research that

781
00:36:54,779 --> 00:37:01,200
has been happening and they put it in

782
00:36:58,019 --> 00:37:05,758
that code so having that in Isis he or

783
00:37:01,200 --> 00:37:11,368
she would be very nice yes okay thank

784
00:37:05,759 --> 00:37:13,799
you very much for the input it might be

785
00:37:11,369 --> 00:37:16,200
it might we would every just go on as we

786
00:37:13,799 --> 00:37:21,480
are but I also had people who would be

787
00:37:16,200 --> 00:37:28,740
interested in a I've said this already

788
00:37:21,480 --> 00:37:30,450
did yes I need it in I heard also people

789
00:37:28,740 --> 00:37:32,788
who thought that like having a border

790
00:37:30,450 --> 00:37:36,299
come communication and discussion would

791
00:37:32,789 --> 00:37:37,920
be useful however I think the community

792
00:37:36,299 --> 00:37:39,210
needs to propose something here so if

793
00:37:37,920 --> 00:37:40,440
you're actually interested in this and

794
00:37:39,210 --> 00:37:42,930
you can scope it in a way that you think

795
00:37:40,440 --> 00:37:47,039
it will be useful discussion then please

796
00:37:42,930 --> 00:37:49,848
work on that and now Christian I you

797
00:37:47,039 --> 00:37:49,849
need slides right

798
00:37:59,070 --> 00:38:04,709
that's low it's working

799
00:38:01,630 --> 00:38:04,709
[Music]

800
00:38:10,880 --> 00:38:22,190
prisons okay good afternoon so a couple

801
00:38:20,220 --> 00:38:26,660
of months ago I wrote a little piece

802
00:38:22,190 --> 00:38:28,830
about congestion control and

803
00:38:26,660 --> 00:38:33,060
specifically about congestion control

804
00:38:28,830 --> 00:38:36,619
and the new transport protocol that are

805
00:38:33,060 --> 00:38:36,619
developed in the application space

806
00:38:46,660 --> 00:38:54,080
[Laughter]

807
00:38:50,599 --> 00:38:54,080
speaking about congestion

808
00:39:05,090 --> 00:39:15,150
okay so basically the the plan is the

809
00:39:13,470 --> 00:39:18,830
following in there

810
00:39:15,150 --> 00:39:22,320
the way we have been doing transport

811
00:39:18,830 --> 00:39:25,830
pretty much until the last two three

812
00:39:22,320 --> 00:39:30,359
years was that if you wanted transport

813
00:39:25,830 --> 00:39:33,540
was thought of as TCP and France and was

814
00:39:30,359 --> 00:39:35,730
developed mostly in the kernel I mean

815
00:39:33,540 --> 00:39:38,009
yes there were examples of protocol

816
00:39:35,730 --> 00:39:40,650
develop in application space a bit big

817
00:39:38,010 --> 00:39:43,050
current comes to mine but they were kind

818
00:39:40,650 --> 00:39:48,180
of specialized when it was original

819
00:39:43,050 --> 00:39:52,170
practice and so the result of that is

820
00:39:48,180 --> 00:39:54,930
that if you want to change say the TCP

821
00:39:52,170 --> 00:39:58,849
retransmission algorithm what you have

822
00:39:54,930 --> 00:40:01,710
to be that tool to participate I mean

823
00:39:58,849 --> 00:40:05,970
metaphorically nothing with actually

824
00:40:01,710 --> 00:40:08,040
measure your size but they the idea is

825
00:40:05,970 --> 00:40:10,339
that if you want to check in some scenes

826
00:40:08,040 --> 00:40:12,270
in the Windows camera that I know well

827
00:40:10,339 --> 00:40:15,839
well I mean there will be quite a

828
00:40:12,270 --> 00:40:17,550
process before you do that and similarly

829
00:40:15,839 --> 00:40:19,770
if you want to checking something in

830
00:40:17,550 --> 00:40:22,109
Linux you can definitely check that in

831
00:40:19,770 --> 00:40:23,220
your own branch and do your own copy but

832
00:40:22,109 --> 00:40:24,460
if you want to have that in the main

833
00:40:23,220 --> 00:40:26,140
distribution

834
00:40:24,460 --> 00:40:28,270
there'll be some process I mean people

835
00:40:26,140 --> 00:40:30,670
will check what have you been doing

836
00:40:28,270 --> 00:40:32,799
show me the the RFC was that new

837
00:40:30,670 --> 00:40:34,270
algorithms it is defined or there is no

838
00:40:32,799 --> 00:40:35,859
I've seen then I want to see your

839
00:40:34,270 --> 00:40:37,259
simulation I want to see something I

840
00:40:35,859 --> 00:40:40,808
want to get face and what you are doing

841
00:40:37,260 --> 00:40:45,359
so there is effectively a gatekeeper

842
00:40:40,809 --> 00:40:48,970
that stands before between you and and

843
00:40:45,359 --> 00:40:51,910
imposes friction that limits the amount

844
00:40:48,970 --> 00:40:56,140
of crazy innovation that you could do

845
00:40:51,910 --> 00:40:59,859
and the good thing is that application

846
00:40:56,140 --> 00:41:03,250
level transports solve that I mean if

847
00:40:59,859 --> 00:41:05,410
you look at the the quick interrupts

848
00:41:03,250 --> 00:41:09,730
spreadsheet you see nineteen

849
00:41:05,410 --> 00:41:12,520
implementation they walk on about four

850
00:41:09,730 --> 00:41:16,089
counters so clearly there is

851
00:41:12,520 --> 00:41:19,210
independence and they can do that

852
00:41:16,089 --> 00:41:22,029
because the way you ship transport is

853
00:41:19,210 --> 00:41:24,789
with implementations as the library so

854
00:41:22,029 --> 00:41:27,220
you do application update and for

855
00:41:24,789 --> 00:41:29,369
example if the Google guys want to

856
00:41:27,220 --> 00:41:32,529
update the transport running in Chrome

857
00:41:29,369 --> 00:41:34,059
shipping on Windows 10 they don't have

858
00:41:32,529 --> 00:41:36,599
to ask permission to Microsoft they

859
00:41:34,059 --> 00:41:40,480
don't have to wait that Microsoft

860
00:41:36,599 --> 00:41:43,839
implements TCP first open they don't do

861
00:41:40,480 --> 00:41:47,829
that they just update the code and they

862
00:41:43,839 --> 00:41:50,170
ship it is there and Google is an

863
00:41:47,829 --> 00:41:54,220
example but you could see any kind of

864
00:41:50,170 --> 00:41:56,380
application if you have an app and it

865
00:41:54,220 --> 00:41:59,078
speaks to a server and you can update at

866
00:41:56,380 --> 00:42:01,660
the same time the server undercutting

867
00:41:59,079 --> 00:42:05,260
your up you're good to go you can do

868
00:42:01,660 --> 00:42:14,759
what you want so this guy here the

869
00:42:05,260 --> 00:42:14,760
gatekeeper has been removed okay so yeah

870
00:42:16,799 --> 00:42:23,650
generally our diva may disagree with you

871
00:42:19,329 --> 00:42:24,730
now or severely under labor Jen I want

872
00:42:23,650 --> 00:42:29,050
you to actually use me

873
00:42:24,730 --> 00:42:29,050
[Laughter]

874
00:42:29,120 --> 00:42:32,700
mineralize I'd not generally but there

875
00:42:31,560 --> 00:42:42,680
are a couple of points but I can read

876
00:42:32,700 --> 00:42:46,410
under later if you'd rather okay later

877
00:42:42,680 --> 00:42:48,089
so I would say that being able to do

878
00:42:46,410 --> 00:42:50,250
that kind of innovation is actually very

879
00:42:48,090 --> 00:42:53,880
good when there is no question about

880
00:42:50,250 --> 00:42:57,930
that and and in fact what we have done

881
00:42:53,880 --> 00:42:59,580
by going into I mean letting people do

882
00:42:57,930 --> 00:43:03,029
this transport at the application level

883
00:42:59,580 --> 00:43:05,549
is open new opportunities for

884
00:43:03,030 --> 00:43:08,160
development and research and it's not

885
00:43:05,550 --> 00:43:10,590
like there is no need for that I mean we

886
00:43:08,160 --> 00:43:12,899
are mentioning multipath before but all

887
00:43:10,590 --> 00:43:15,810
open of migration estimating which link

888
00:43:12,900 --> 00:43:19,020
you go to how you mix real-time to have

889
00:43:15,810 --> 00:43:21,840
it in a non real-time transport how you

890
00:43:19,020 --> 00:43:24,690
deal with loss independently of

891
00:43:21,840 --> 00:43:28,020
congestion how do you deal with the

892
00:43:24,690 --> 00:43:30,780
fading of radio links etc etc all these

893
00:43:28,020 --> 00:43:34,170
are problems that are partially solved

894
00:43:30,780 --> 00:43:40,470
in the transport that we have but in

895
00:43:34,170 --> 00:43:43,260
fact this work to do okay and because we

896
00:43:40,470 --> 00:43:45,000
have this application level transport if

897
00:43:43,260 --> 00:43:47,850
you are running a research lab for

898
00:43:45,000 --> 00:43:51,210
example you can tell to your grad

899
00:43:47,850 --> 00:43:53,610
students that hey take that and and try

900
00:43:51,210 --> 00:43:55,110
and they don't have to be compiler

901
00:43:53,610 --> 00:43:57,690
kernel they just have to be comprise the

902
00:43:55,110 --> 00:44:00,690
app they can try 25 valuation of the

903
00:43:57,690 --> 00:44:02,100
Argo is in a single afternoon so that's

904
00:44:00,690 --> 00:44:05,250
quite okay

905
00:44:02,100 --> 00:44:08,330
and I'm sure that because we have done

906
00:44:05,250 --> 00:44:12,060
that we are going to see many mortices

907
00:44:08,330 --> 00:44:14,430
PhD master whichever being written being

908
00:44:12,060 --> 00:44:16,950
walked on and loss was telling me that's

909
00:44:14,430 --> 00:44:20,100
that's actually something to happen so

910
00:44:16,950 --> 00:44:21,750
that's that's very good so don't do not

911
00:44:20,100 --> 00:44:24,440
ever quote me in saying that I think

912
00:44:21,750 --> 00:44:32,450
it's a bad idea it's a really good idea

913
00:44:24,440 --> 00:44:36,210
next but there is this guy okay and

914
00:44:32,450 --> 00:44:38,669
assume that you are working not in a

915
00:44:36,210 --> 00:44:39,390
research lab you are working for some

916
00:44:38,670 --> 00:44:42,960
kind of coma

917
00:44:39,390 --> 00:44:44,819
company and you are developing a new

918
00:44:42,960 --> 00:44:46,529
version of the transport that you are

919
00:44:44,819 --> 00:44:50,430
going that's going to go between your

920
00:44:46,529 --> 00:44:51,930
application and your server and what is

921
00:44:50,430 --> 00:44:56,750
these guys gonna tell you

922
00:44:51,930 --> 00:45:01,200
let's cut you Google you beat Facebook

923
00:44:56,750 --> 00:45:03,779
no back to work it's absolutely going to

924
00:45:01,200 --> 00:45:09,000
tell you something like that or some

925
00:45:03,779 --> 00:45:12,390
variation of that okay and and that

926
00:45:09,000 --> 00:45:15,079
could go very wrong very quickly I mean

927
00:45:12,390 --> 00:45:18,629
the first way that can go wrong is

928
00:45:15,079 --> 00:45:19,769
competitive congestion control so we

929
00:45:18,630 --> 00:45:22,200
know that we have seen that already

930
00:45:19,769 --> 00:45:24,959
remember the time where brazo were

931
00:45:22,200 --> 00:45:27,089
competing on how many TCP connection

932
00:45:24,960 --> 00:45:28,380
they could open at the same time so that

933
00:45:27,089 --> 00:45:31,890
they could have n times the congestion

934
00:45:28,380 --> 00:45:34,650
window I mean if you have application

935
00:45:31,890 --> 00:45:36,660
level transport that's much easier just

936
00:45:34,650 --> 00:45:42,450
had to change a constant in the code to

937
00:45:36,660 --> 00:45:45,058
get the same effect already you can see

938
00:45:42,450 --> 00:45:47,160
people I mean that was actually in the

939
00:45:45,059 --> 00:45:49,049
Google quick code it was there is a

940
00:45:47,160 --> 00:45:52,200
factor in the Google quick code that

941
00:45:49,049 --> 00:45:54,960
says how many cubic congestion control

942
00:45:52,200 --> 00:45:57,868
many cubic conscious Corrections do you

943
00:45:54,960 --> 00:46:00,359
want to emulate and you can compile with

944
00:45:57,869 --> 00:46:03,029
a tractor and he said the default was to

945
00:46:00,359 --> 00:46:10,589
I believe but you could set it to 4 or

946
00:46:03,029 --> 00:46:14,339
16 if you wanted okay and someone is

947
00:46:10,589 --> 00:46:18,240
going to invent a super fast version of

948
00:46:14,339 --> 00:46:19,980
the new TCP that is not bothered by

949
00:46:18,240 --> 00:46:23,669
these stupid losses in the network and

950
00:46:19,980 --> 00:46:25,980
goes as fast as you can I mean they'll

951
00:46:23,670 --> 00:46:31,200
do that I think they already did

952
00:46:25,980 --> 00:46:34,849
actually but yes ok but now with they

953
00:46:31,200 --> 00:46:37,348
can put that in there up and ship it and

954
00:46:34,849 --> 00:46:40,579
that shows the competitive congestion

955
00:46:37,349 --> 00:46:43,140
control that's not the most interesting

956
00:46:40,579 --> 00:46:45,839
suppose that you are managing your

957
00:46:43,140 --> 00:46:47,700
bottleneck and you you do some smart

958
00:46:45,839 --> 00:46:52,880
sensing which we can do that and says

959
00:46:47,700 --> 00:46:55,700
damn I'm copying with a cubic connection

960
00:46:52,880 --> 00:46:59,869
and they are bursting my database

961
00:46:55,700 --> 00:47:02,689
congestion control what can I do well I

962
00:46:59,869 --> 00:47:06,019
know the specifics of cubic I know what

963
00:47:02,690 --> 00:47:10,759
I can do I can do a spike of traffic

964
00:47:06,019 --> 00:47:13,069
very briefly then I go on doing what I

965
00:47:10,759 --> 00:47:16,099
was doing before I know the spike of

966
00:47:13,069 --> 00:47:19,430
traffic would have caused a loss in the

967
00:47:16,099 --> 00:47:22,759
cubic in the in the bottleneck and the

968
00:47:19,430 --> 00:47:27,910
connections gonna back off and now I can

969
00:47:22,759 --> 00:47:29,960
have the network of myself okay and and

970
00:47:27,910 --> 00:47:39,410
maybe others something like that

971
00:47:29,960 --> 00:47:41,029
actually but now what will be our best

972
00:47:39,410 --> 00:47:44,029
two-qubit you can absolutely do to be be

973
00:47:41,029 --> 00:47:45,680
are you look at the idea technique and

974
00:47:44,029 --> 00:47:48,500
how they are doing you know that they

975
00:47:45,680 --> 00:47:51,379
will be sensing at one specific point in

976
00:47:48,500 --> 00:47:55,220
the flow at that precise point you send

977
00:47:51,380 --> 00:47:56,809
a spike talking about cough and they're

978
00:47:55,220 --> 00:47:58,609
gonna back up for six transmission

979
00:47:56,809 --> 00:48:00,349
windows that's great

980
00:47:58,609 --> 00:48:03,890
for the next six transmission windows

981
00:48:00,349 --> 00:48:06,079
you get the network for you and that's

982
00:48:03,890 --> 00:48:08,808
what I call address on your congestion

983
00:48:06,079 --> 00:48:12,880
control and I think that's a new idea of

984
00:48:08,809 --> 00:48:12,880
research in which we can find many PhDs

985
00:48:13,210 --> 00:48:19,910
okay that's gonna happen I mean because

986
00:48:18,079 --> 00:48:22,819
you don't have any gatekeeper to tell

987
00:48:19,910 --> 00:48:29,259
them don't do that and you only get

988
00:48:22,819 --> 00:48:33,558
keepers are the network geyser okay so

989
00:48:29,259 --> 00:48:38,289
you know if you give brilliant new guys

990
00:48:33,559 --> 00:48:43,210
new tools stuff may very well happen and

991
00:48:38,289 --> 00:48:45,859
goods poem is an explanation of that but

992
00:48:43,210 --> 00:48:47,930
basically if if you have an application

993
00:48:45,859 --> 00:48:50,000
that keep winning local congestion

994
00:48:47,930 --> 00:48:52,460
control because they are doing one of

995
00:48:50,000 --> 00:48:55,880
those smart adverse higher congestion

996
00:48:52,460 --> 00:48:58,789
control stuff what will happen is that

997
00:48:55,880 --> 00:49:02,480
the users of the other apps are going to

998
00:48:58,789 --> 00:49:05,299
be pissed off because the application

999
00:49:02,480 --> 00:49:05,870
doesn't work and they are going to

1000
00:49:05,299 --> 00:49:11,240
chorus

1001
00:49:05,870 --> 00:49:12,770
lines but very good if you are going to

1002
00:49:11,240 --> 00:49:16,640
have one of those competitive things

1003
00:49:12,770 --> 00:49:18,740
that emulates 256 connections it will

1004
00:49:16,640 --> 00:49:20,359
have some kind of an effect on the

1005
00:49:18,740 --> 00:49:27,529
network bottleneck between two networks

1006
00:49:20,360 --> 00:49:30,440
etc etc now normally I don't expect that

1007
00:49:27,530 --> 00:49:32,750
to have more than local effects but with

1008
00:49:30,440 --> 00:49:37,370
a little work and a good software update

1009
00:49:32,750 --> 00:49:40,490
who knows okay we have seen software

1010
00:49:37,370 --> 00:49:45,500
updates already bringing down big

1011
00:49:40,490 --> 00:49:47,930
companies so it can very well happen at

1012
00:49:45,500 --> 00:49:50,950
that point you want to call back the

1013
00:49:47,930 --> 00:50:00,020
master sorcerer but is not there anymore

1014
00:49:50,950 --> 00:50:04,299
so hey and that next slide so who's seen

1015
00:50:00,020 --> 00:50:04,300
a streetcar named desire

1016
00:50:04,330 --> 00:50:10,400
yeah and so that's this lady blondie

1017
00:50:07,490 --> 00:50:13,600
well she's at the Alice's I always

1018
00:50:10,400 --> 00:50:17,090
depended on the kindness of strangers

1019
00:50:13,600 --> 00:50:21,049
it's kind of what we do in the network

1020
00:50:17,090 --> 00:50:25,370
we cannot depend on the kindness of the

1021
00:50:21,050 --> 00:50:28,250
transport level developers and I think

1022
00:50:25,370 --> 00:50:31,490
that we should not do you should not be

1023
00:50:28,250 --> 00:50:33,710
doing that anymore we should stop for

1024
00:50:31,490 --> 00:50:35,660
the principle that one way or another

1025
00:50:33,710 --> 00:50:38,780
the end-to-end developers are kind of

1026
00:50:35,660 --> 00:50:43,279
 off because their interests are not

1027
00:50:38,780 --> 00:50:45,460
aligned with ours and if your network

1028
00:50:43,280 --> 00:50:49,130
manager you have to believe that

1029
00:50:45,460 --> 00:50:51,260
actually defending against this kind of

1030
00:50:49,130 --> 00:50:53,120
stuff like a competitive congestion

1031
00:50:51,260 --> 00:50:55,520
control or adversarial congestion

1032
00:50:53,120 --> 00:50:58,430
control is something you want to have in

1033
00:50:55,520 --> 00:51:00,860
your network and that's really my call I

1034
00:50:58,430 --> 00:51:01,460
chorus guys it's time to think about

1035
00:51:00,860 --> 00:51:04,640
that

1036
00:51:01,460 --> 00:51:06,650
and start implementing the defense in OS

1037
00:51:04,640 --> 00:51:08,210
in depth they have to be implemented

1038
00:51:06,650 --> 00:51:11,180
probably at the access point in the

1039
00:51:08,210 --> 00:51:16,160
network but probably also points that

1040
00:51:11,180 --> 00:51:18,960
are sensitive as well that's Jenna now

1041
00:51:16,160 --> 00:51:23,308
I'm sure yoga with me

1042
00:51:18,960 --> 00:51:27,240
after all that thank you Chris and Jenna

1043
00:51:23,309 --> 00:51:29,010
Inger I think this is a very important

1044
00:51:27,240 --> 00:51:30,990
question and I think it's an important

1045
00:51:29,010 --> 00:51:34,740
question because we are as you point out

1046
00:51:30,990 --> 00:51:38,069
going into sort of a new space where we

1047
00:51:34,740 --> 00:51:40,259
are gonna have potentially an easy ease

1048
00:51:38,069 --> 00:51:41,940
of develop development and deployment of

1049
00:51:40,260 --> 00:51:45,900
congestion controllers and that's going

1050
00:51:41,940 --> 00:51:48,869
to change things somewhat it's not clear

1051
00:51:45,900 --> 00:51:50,700
to me how much so let me let me be

1052
00:51:48,869 --> 00:51:55,049
specific here you might remember that

1053
00:51:50,700 --> 00:51:55,578
about I want to say almost 15 15 to 20

1054
00:51:55,049 --> 00:51:57,900
years ago

1055
00:51:55,579 --> 00:51:59,220
video applications started to get

1056
00:51:57,900 --> 00:52:00,240
deployed on the internet and they were

1057
00:51:59,220 --> 00:52:02,700
deploying their own condition

1058
00:52:00,240 --> 00:52:04,288
controllers in the application space yes

1059
00:52:02,700 --> 00:52:07,859
and again people were crying murder at

1060
00:52:04,289 --> 00:52:09,390
the time and we seem to have survived

1061
00:52:07,859 --> 00:52:11,339
that I'm not saying that that

1062
00:52:09,390 --> 00:52:13,859
necessarily means that we will survive

1063
00:52:11,339 --> 00:52:17,038
this but I do want to just remind people

1064
00:52:13,859 --> 00:52:19,140
that this is not the first time you sort

1065
00:52:17,039 --> 00:52:21,299
of seeing this problem where we are

1066
00:52:19,140 --> 00:52:23,520
concerned that people might start

1067
00:52:21,299 --> 00:52:27,450
building random stuff and it will bake

1068
00:52:23,520 --> 00:52:28,890
everything that we love the thing I

1069
00:52:27,450 --> 00:52:31,799
wanted to disagree with you at the

1070
00:52:28,890 --> 00:52:33,750
beginning was you pointed out that it

1071
00:52:31,799 --> 00:52:36,240
there's a gatekeeper and I agree with

1072
00:52:33,750 --> 00:52:38,700
you that there has been a bit a bit of a

1073
00:52:36,240 --> 00:52:40,348
gatekeeper in the Linux kernel but for

1074
00:52:38,700 --> 00:52:41,520
most server providers when you're

1075
00:52:40,349 --> 00:52:42,750
talking about congestion control for the

1076
00:52:41,520 --> 00:52:43,970
most part on the internet we're talking

1077
00:52:42,750 --> 00:52:47,329
about content providers like Google

1078
00:52:43,970 --> 00:52:49,529
cloud providers etcetera etcetera now

1079
00:52:47,329 --> 00:52:51,750
not having something in the kernel has

1080
00:52:49,529 --> 00:52:55,230
not stopped them from deploying whatever

1081
00:52:51,750 --> 00:52:57,119
they want to deploy so not having

1082
00:52:55,230 --> 00:52:58,529
something up streamed into Linux has not

1083
00:52:57,119 --> 00:53:00,569
stopped them from experimenting and

1084
00:52:58,529 --> 00:53:02,460
deploying maybe as a good example if you

1085
00:53:00,569 --> 00:53:04,740
look at Akamai Akamai deploys fast

1086
00:53:02,460 --> 00:53:06,119
there's a whole bunch of condition

1087
00:53:04,740 --> 00:53:09,359
controls that have been deployed at

1088
00:53:06,119 --> 00:53:11,700
server found and server deployments that

1089
00:53:09,359 --> 00:53:17,250
aren't basically in upstream linux as it

1090
00:53:11,700 --> 00:53:19,319
is and there are measurements there are

1091
00:53:17,250 --> 00:53:21,960
various things that are done there and I

1092
00:53:19,319 --> 00:53:24,450
I guess I what I want to say is that the

1093
00:53:21,960 --> 00:53:27,539
colonel isn't has not been in the past

1094
00:53:24,450 --> 00:53:30,328
the gatekeeper of this this particular

1095
00:53:27,539 --> 00:53:31,290
thing it has been people who deploy

1096
00:53:30,329 --> 00:53:33,030
stuff

1097
00:53:31,290 --> 00:53:35,040
so yes is Google a gatekeeper of this

1098
00:53:33,030 --> 00:53:36,990
absolutely it is it's a gatekeeper of

1099
00:53:35,040 --> 00:53:38,730
what they deploy on their service his

1100
00:53:36,990 --> 00:53:40,410
Netflix a gatekeeper of this yes they

1101
00:53:38,730 --> 00:53:42,060
are because they control what they

1102
00:53:40,410 --> 00:53:44,940
deploy on their service and it's not

1103
00:53:42,060 --> 00:53:48,180
typically what's in in-stock FreeBSD or

1104
00:53:44,940 --> 00:53:49,710
stock Linux so I think that the

1105
00:53:48,180 --> 00:53:51,660
gatekeepers are different and in that

1106
00:53:49,710 --> 00:53:56,180
sense those gatekeepers have not changed

1107
00:53:51,660 --> 00:54:01,529
fundamentally but they have they have

1108
00:53:56,180 --> 00:54:06,000
take the Google cloud now the guy who

1109
00:54:01,530 --> 00:54:08,850
can change the congestion control is not

1110
00:54:06,000 --> 00:54:12,120
the runner of the Google cloud it's

1111
00:54:08,850 --> 00:54:15,270
every single app that's running in a VM

1112
00:54:12,120 --> 00:54:18,299
someone again that's not very different

1113
00:54:15,270 --> 00:54:18,690
they can already do that with TCP is my

1114
00:54:18,300 --> 00:54:22,050
point

1115
00:54:18,690 --> 00:54:24,030
they have root privileges on the thing

1116
00:54:22,050 --> 00:54:25,620
that they run and they can absolutely

1117
00:54:24,030 --> 00:54:27,240
change the controller there they can

1118
00:54:25,620 --> 00:54:31,350
deploy whatever they want in fact yeah

1119
00:54:27,240 --> 00:54:44,729
sure that's true and in LED and should

1120
00:54:31,350 --> 00:54:49,680
we panic we can yeah so the line is

1121
00:54:44,730 --> 00:54:51,330
closed for now so I was lost in so I I

1122
00:54:49,680 --> 00:54:53,009
what I'm trying to point out here is

1123
00:54:51,330 --> 00:54:55,710
that thinking about the kernel as a

1124
00:54:53,010 --> 00:54:57,720
gatekeeper I think is a fallacy because

1125
00:54:55,710 --> 00:55:00,450
the people who are gatekeeping at the

1126
00:54:57,720 --> 00:55:02,129
kernel were not and are not experts in

1127
00:55:00,450 --> 00:55:04,980
congestion control this is a

1128
00:55:02,130 --> 00:55:06,540
long-standing problem and the second

1129
00:55:04,980 --> 00:55:08,430
thing is what you're talking about here

1130
00:55:06,540 --> 00:55:10,500
with isolation of users and so on I

1131
00:55:08,430 --> 00:55:13,080
agree with you that's a useful strategy

1132
00:55:10,500 --> 00:55:14,340
for doing things it's already happened a

1133
00:55:13,080 --> 00:55:16,680
fair bit yes

1134
00:55:14,340 --> 00:55:19,980
it's what happen yes it's a good thing

1135
00:55:16,680 --> 00:55:21,480
yes like I saw it first

1136
00:55:19,980 --> 00:55:23,310
I'm worrying about these things makes

1137
00:55:21,480 --> 00:55:24,110
you an excellent candidate for Transport

1138
00:55:23,310 --> 00:55:25,960
ad please

1139
00:55:24,110 --> 00:55:29,030
[Laughter]

1140
00:55:25,960 --> 00:55:29,030
[Applause]

1141
00:55:32,630 --> 00:55:39,160
[Laughter]

1142
00:55:37,330 --> 00:55:40,690
so I used to worry about many of those

1143
00:55:39,160 --> 00:55:45,310
same things and I'm so chilled out a lot

1144
00:55:40,690 --> 00:55:47,110
and there's some reason for it right so

1145
00:55:45,310 --> 00:55:50,170
what one reason is right so this is sort

1146
00:55:47,110 --> 00:55:51,970
of roughly two kinds of applications on

1147
00:55:50,170 --> 00:55:53,470
the Internet right there's this the ones

1148
00:55:51,970 --> 00:55:54,759
that ship enough bytes to really do some

1149
00:55:53,470 --> 00:55:56,020
damage and then there's the ones that

1150
00:55:54,760 --> 00:55:58,120
don't right

1151
00:55:56,020 --> 00:56:00,610
so the long tail what the long tail does

1152
00:55:58,120 --> 00:56:01,990
who cares right because the data just

1153
00:56:00,610 --> 00:56:02,380
have enough data to actually do any

1154
00:56:01,990 --> 00:56:04,419
damage

1155
00:56:02,380 --> 00:56:05,650
really they might sort of cost himself

1156
00:56:04,420 --> 00:56:07,120
and if he runs problem for a particular

1157
00:56:05,650 --> 00:56:09,070
user that runs that Abin and they get

1158
00:56:07,120 --> 00:56:10,450
annoyed but dinner is not that harm from

1159
00:56:09,070 --> 00:56:12,400
those codes and then there's like the

1160
00:56:10,450 --> 00:56:13,839
guys who shape a lot of data right but

1161
00:56:12,400 --> 00:56:16,240
those funny enough for all the people

1162
00:56:13,840 --> 00:56:17,830
who quite carefully monitor what happens

1163
00:56:16,240 --> 00:56:20,020
to their traffic because you know their

1164
00:56:17,830 --> 00:56:21,549
revenue stream pretty directly depends

1165
00:56:20,020 --> 00:56:23,740
on that really working well and not

1166
00:56:21,550 --> 00:56:26,140
causing the customers trouble and and

1167
00:56:23,740 --> 00:56:28,060
that feedback loop is is I think what is

1168
00:56:26,140 --> 00:56:29,920
actually now the protection that we have

1169
00:56:28,060 --> 00:56:31,690
for the most part and then when I got

1170
00:56:29,920 --> 00:56:34,540
back what China said that we do actually

1171
00:56:31,690 --> 00:56:37,300
see over the last 10 20 years that that

1172
00:56:34,540 --> 00:56:39,790
access networks a sort of isolate users

1173
00:56:37,300 --> 00:56:42,250
to an upstream link so you can at best

1174
00:56:39,790 --> 00:56:45,160
sort of harm yourself and we saw that

1175
00:56:42,250 --> 00:56:47,650
when like BitTorrent went to that pad

1176
00:56:45,160 --> 00:56:48,940
right because um the the work calls

1177
00:56:47,650 --> 00:56:50,950
would die if somebody turned on

1178
00:56:48,940 --> 00:56:52,030
BitTorrent and and that was not good and

1179
00:56:50,950 --> 00:56:53,470
then they fixed it was all self

1180
00:56:52,030 --> 00:56:55,030
interference the network wasn't really

1181
00:56:53,470 --> 00:56:56,770
in danger here other than you know

1182
00:56:55,030 --> 00:56:57,970
traffic using peering links and it

1183
00:56:56,770 --> 00:57:00,700
wasn't going over before that's a

1184
00:56:57,970 --> 00:57:02,200
separate story so that that's sort of

1185
00:57:00,700 --> 00:57:04,210
it's it's a self interference is a

1186
00:57:02,200 --> 00:57:06,990
problem but but the Internet is not

1187
00:57:04,210 --> 00:57:13,290
really at a danger here

1188
00:57:06,990 --> 00:57:20,279
but but transport 2020 I'm a retiree

1189
00:57:13,290 --> 00:57:20,279
come on that means you have time a

1190
00:57:21,330 --> 00:57:25,210
second a lot of those things I actually

1191
00:57:23,830 --> 00:57:29,350
thought about this problem on and off

1192
00:57:25,210 --> 00:57:31,960
for two decades and Matt Mathis I'm

1193
00:57:29,350 --> 00:57:34,569
sorry there are a bunch of different

1194
00:57:31,960 --> 00:57:36,280
mechanisms that defend the internet and

1195
00:57:34,570 --> 00:57:37,530
up until fairly recently

1196
00:57:36,280 --> 00:57:40,230
[Music]

1197
00:57:37,530 --> 00:57:41,760
every code in TCP wasn't good enough and

1198
00:57:40,230 --> 00:57:43,380
if you pushed harder and congestion

1199
00:57:41,760 --> 00:57:46,080
control you took more losses and

1200
00:57:43,380 --> 00:57:48,330
therefore ran slower and so there was

1201
00:57:46,080 --> 00:57:49,650
this built-in mechanism the recovery

1202
00:57:48,330 --> 00:57:51,540
code has gotten good enough from the new

1203
00:57:49,650 --> 00:57:55,580
and they're stacks and sublet protocols

1204
00:57:51,540 --> 00:57:57,779
where this is no longer true and it's

1205
00:57:55,580 --> 00:58:02,700
yeah I know I know

1206
00:57:57,780 --> 00:58:04,920
I thought about that too where I have

1207
00:58:02,700 --> 00:58:06,629
actually run some TCP implementations

1208
00:58:04,920 --> 00:58:08,580
under situations where they were

1209
00:58:06,630 --> 00:58:10,380
sustaining above 50 percent lost because

1210
00:58:08,580 --> 00:58:12,569
Seawind was pegged at some large number

1211
00:58:10,380 --> 00:58:16,320
and they just ran happily along fixing

1212
00:58:12,570 --> 00:58:18,540
all walls you can do this but there are

1213
00:58:16,320 --> 00:58:20,070
other things those topological

1214
00:58:18,540 --> 00:58:22,830
constraints access links are a small

1215
00:58:20,070 --> 00:58:24,390
fraction of the core if the person you

1216
00:58:22,830 --> 00:58:27,000
hurt most is the person in the next

1217
00:58:24,390 --> 00:58:29,940
office and they're likely to come knock

1218
00:58:27,000 --> 00:58:31,560
on your door and there's a whole bunch

1219
00:58:29,940 --> 00:58:33,690
of mechanisms like that that tend to

1220
00:58:31,560 --> 00:58:36,360
defend the Internet the things that

1221
00:58:33,690 --> 00:58:39,300
worried me I'll be perfectly honest I am

1222
00:58:36,360 --> 00:58:42,450
NOT on the VBR project and I fretted

1223
00:58:39,300 --> 00:58:44,970
about VBR one in some of the situations

1224
00:58:42,450 --> 00:58:48,270
where it could get in trouble in the

1225
00:58:44,970 --> 00:58:50,910
public Internet and the the telemetry

1226
00:58:48,270 --> 00:58:53,460
that we had that the BBI team was

1227
00:58:50,910 --> 00:58:58,379
looking at very carefully is whether or

1228
00:58:53,460 --> 00:59:01,320
not running a b b BL in parallel if we

1229
00:58:58,380 --> 00:59:03,060
were in the bowbully the bbr flows had

1230
00:59:01,320 --> 00:59:05,310
lower round trip times which meant lower

1231
00:59:03,060 --> 00:59:07,110
queue occupancy and so there was a

1232
00:59:05,310 --> 00:59:09,630
single metric that we were looking at

1233
00:59:07,110 --> 00:59:11,250
that actually gave us confidence that

1234
00:59:09,630 --> 00:59:13,800
would work hurting the internet anywhere

1235
00:59:11,250 --> 00:59:15,840
we don't really have a way of observing

1236
00:59:13,800 --> 00:59:17,940
that data and so but it's a big concern

1237
00:59:15,840 --> 00:59:25,920
but people were paying attention to it

1238
00:59:17,940 --> 00:59:28,620
very much yeah I think what's up there

1239
00:59:25,920 --> 00:59:31,560
yeah no I but I agree that people who

1240
00:59:28,620 --> 00:59:33,060
are shipping large application etc do

1241
00:59:31,560 --> 00:59:34,860
pay attention and they are not on the

1242
00:59:33,060 --> 00:59:38,130
business of clocking the Internet you

1243
00:59:34,860 --> 00:59:40,590
can imagine pathologies where a widely

1244
00:59:38,130 --> 00:59:42,150
deployed game has got bad congestion

1245
00:59:40,590 --> 00:59:43,800
control in it and it's not until you get

1246
00:59:42,150 --> 00:59:46,440
hit a million users that you discover

1247
00:59:43,800 --> 00:59:47,760
that it's implicit DDoS or is anything I

1248
00:59:46,440 --> 00:59:50,030
didn't measure the common case is

1249
00:59:47,760 --> 00:59:59,860
actually deliberate DDoS and they don't

1250
00:59:50,030 --> 01:00:03,050
what you think I have experience with

1251
00:59:59,860 --> 01:00:04,730
video conferencing where RTP is the

1252
01:00:03,050 --> 01:00:07,100
similar thing because it's a transport

1253
01:00:04,730 --> 01:00:09,770
that runs in the application layer now

1254
01:00:07,100 --> 01:00:10,970
in that case in the beginning even I

1255
01:00:09,770 --> 01:00:11,600
mean you're talking about congestion

1256
01:00:10,970 --> 01:00:13,040
control

1257
01:00:11,600 --> 01:00:15,080
there was no congestion control at all

1258
01:00:13,040 --> 01:00:16,759
because everybody tried to use it as

1259
01:00:15,080 --> 01:00:18,950
much as you can and they had the

1260
01:00:16,760 --> 01:00:21,170
mechanism inside to get over packet loss

1261
01:00:18,950 --> 01:00:22,879
at up to a certain percentage so they

1262
01:00:21,170 --> 01:00:24,140
didn't care much and I said maybe the

1263
01:00:22,880 --> 01:00:26,300
other one one would use a trait that

1264
01:00:24,140 --> 01:00:29,210
I'll be able to show that my product

1265
01:00:26,300 --> 01:00:31,040
worked better okay so I think it's a

1266
01:00:29,210 --> 01:00:33,440
very important problem by the way this

1267
01:00:31,040 --> 01:00:35,600
happened mostly in the safe environment

1268
01:00:33,440 --> 01:00:37,610
because in h.323 there was a gatekeeper

1269
01:00:35,600 --> 01:00:39,620
because before we can start the call you

1270
01:00:37,610 --> 01:00:41,780
wait to ask for bad words from someone

1271
01:00:39,620 --> 01:00:43,160
it was not enforced but at least there

1272
01:00:41,780 --> 01:00:44,750
was the process of the application tried

1273
01:00:43,160 --> 01:00:46,339
to abide for you but the moment you

1274
01:00:44,750 --> 01:00:47,840
leave it open to them to decide whatever

1275
01:00:46,340 --> 01:00:49,790
they run they can do whatever they want

1276
01:00:47,840 --> 01:00:51,830
they don't wouldn't ask you what to do

1277
01:00:49,790 --> 01:00:53,930
then if they if they don't if they won't

1278
01:00:51,830 --> 01:00:56,630
care for what they network is about and

1279
01:00:53,930 --> 01:00:58,520
they can get over losses then why should

1280
01:00:56,630 --> 01:01:00,920
they care at all so I think it is

1281
01:00:58,520 --> 01:01:02,930
important to have some enforcement for

1282
01:01:00,920 --> 01:01:05,540
that what I think and maybe to have some

1283
01:01:02,930 --> 01:01:07,759
proactive condition comes to control

1284
01:01:05,540 --> 01:01:09,770
instead of the weighing whether to just

1285
01:01:07,760 --> 01:01:19,880
give them or lose it we even lose

1286
01:01:09,770 --> 01:01:25,520
packets or do something about it Victor

1287
01:01:19,880 --> 01:01:27,470
vasilia so few thoughts first many of

1288
01:01:25,520 --> 01:01:30,110
you might remember I think about a

1289
01:01:27,470 --> 01:01:34,540
decade ago BitTorrent decided that they

1290
01:01:30,110 --> 01:01:37,700
no longer want to use UDP and media

1291
01:01:34,540 --> 01:01:40,370
including I think major press raised

1292
01:01:37,700 --> 01:01:43,069
panic about BitTorrent switching to the

1293
01:01:40,370 --> 01:01:47,680
super aggressive congestion algorithm so

1294
01:01:43,070 --> 01:01:50,300
glad that and this is basically

1295
01:01:47,680 --> 01:01:52,690
continued this is kind of reminds me

1296
01:01:50,300 --> 01:01:55,160
because out of all

1297
01:01:52,690 --> 01:01:57,530
congestion control algorithms I seen

1298
01:01:55,160 --> 01:02:00,589
deployed in practice or even published

1299
01:01:57,530 --> 01:02:03,920
within last ten years all of them feel

1300
01:02:00,590 --> 01:02:07,490
buffers much less and Kubik task

1301
01:02:03,920 --> 01:02:09,829
case and in average case and we dis

1302
01:02:07,490 --> 01:02:12,950
includes videography one as I said when

1303
01:02:09,829 --> 01:02:15,319
Oh almost every iteration of PBR

1304
01:02:12,950 --> 01:02:17,868
everyone including the one with horrible

1305
01:02:15,319 --> 01:02:23,619
bugs where congestion control ran afoul

1306
01:02:17,869 --> 01:02:28,069
steel was had media and art et better

1307
01:02:23,619 --> 01:02:30,710
cubic the second thought is I don't

1308
01:02:28,069 --> 01:02:32,029
believe those gatekeepers ever existed

1309
01:02:30,710 --> 01:02:35,990
and I think a lot of people already

1310
01:02:32,029 --> 01:02:38,750
mentioned that well one if you look at

1311
01:02:35,990 --> 01:02:41,750
the congestion control algorithms in

1312
01:02:38,750 --> 01:02:44,660
linux kernel's there is a lot of them

1313
01:02:41,750 --> 01:02:48,769
and I'm not sure all of them are

1314
01:02:44,660 --> 01:02:51,769
rigorously tested and I mean even those

1315
01:02:48,769 --> 01:02:54,828
are regularly tested like TCP cubic had

1316
01:02:51,769 --> 01:02:59,209
an awful bug which just made it in

1317
01:02:54,829 --> 01:03:02,359
certain traffic just like basically

1318
01:02:59,210 --> 01:03:04,730
simulates slow start like semantics in

1319
01:03:02,359 --> 01:03:09,619
certain conditions and that Bach existed

1320
01:03:04,730 --> 01:03:14,000
for like ten years and we only found it

1321
01:03:09,619 --> 01:03:20,240
when we found similar bug in our quick

1322
01:03:14,000 --> 01:03:22,849
cubic so and I believe that the level of

1323
01:03:20,240 --> 01:03:25,220
gatekeeping is overstated and unfund

1324
01:03:22,849 --> 01:03:28,549
'mentally sockets with IP brought to you

1325
01:03:25,220 --> 01:03:34,700
GT existed for over 40 years and the

1326
01:03:28,549 --> 01:03:39,038
internist has not collapsed so that's

1327
01:03:34,700 --> 01:03:46,129
basically my sauce but I do agree that

1328
01:03:39,039 --> 01:03:48,470
if we deploy a QM or wisely this will be

1329
01:03:46,130 --> 01:03:50,119
better not because of I'm afraid of

1330
01:03:48,470 --> 01:03:53,720
collapse but because this would mean

1331
01:03:50,119 --> 01:03:56,329
people would be able to run a congestion

1332
01:03:53,720 --> 01:03:59,029
control algorithms that are more robust

1333
01:03:56,329 --> 01:04:04,039
to stochastic loss which is not induced

1334
01:03:59,029 --> 01:04:05,839
by themselves and that was one of the

1335
01:04:04,039 --> 01:04:09,259
problems that PBR tried to address a

1336
01:04:05,839 --> 01:04:10,578
special in version one and III see

1337
01:04:09,259 --> 01:04:12,190
that's a very important point I mean

1338
01:04:10,579 --> 01:04:16,400
that's point I should have made is that

1339
01:04:12,190 --> 01:04:17,180
the other big reason of deploying a so

1340
01:04:16,400 --> 01:04:20,710
they

1341
01:04:17,180 --> 01:04:24,020
between users is a basic unit enable

1342
01:04:20,710 --> 01:04:26,900
freedom of innovation for those users

1343
01:04:24,020 --> 01:04:28,720
and that's that's kind of the flip side

1344
01:04:26,900 --> 01:04:31,610
the story but if you know that yourself

1345
01:04:28,720 --> 01:04:33,319
then your you can try what is the best

1346
01:04:31,610 --> 01:04:36,350
for you you don't have to be compatible

1347
01:04:33,320 --> 01:04:39,530
with Kubik yeah

1348
01:04:36,350 --> 01:04:41,900
the thing about VBR versus T a cubic

1349
01:04:39,530 --> 01:04:44,600
competition is that I'm not sure how

1350
01:04:41,900 --> 01:04:48,500
well understood it is but it's extremely

1351
01:04:44,600 --> 01:04:53,960
parametric as you scale your TCP buffer

1352
01:04:48,500 --> 01:04:56,110
from like half BGP to ten BGP you will

1353
01:04:53,960 --> 01:04:58,700
see what either one or other

1354
01:04:56,110 --> 01:05:01,040
dramatically just suppress other's

1355
01:04:58,700 --> 01:05:04,220
traffic and that was a big problem with

1356
01:05:01,040 --> 01:05:06,440
PBR VLAN but it worked kind of fine

1357
01:05:04,220 --> 01:05:12,080
because most buffers were kind of in the

1358
01:05:06,440 --> 01:05:14,720
middle and PBR v2 a lot of heuristics to

1359
01:05:12,080 --> 01:05:16,009
make this work even better so we have

1360
01:05:14,720 --> 01:05:17,750
just peed a little bit up so if you

1361
01:05:16,010 --> 01:05:19,780
don't state anything that was stated

1362
01:05:17,750 --> 01:05:22,310
already that would be helpful

1363
01:05:19,780 --> 01:05:25,700
Andrew McGregor currently at fastly but

1364
01:05:22,310 --> 01:05:28,060
formerly an SRE at Google is hurrying a

1365
01:05:25,700 --> 01:05:32,120
system that did everything on that slide

1366
01:05:28,060 --> 01:05:33,500
and it's well documented well enough

1367
01:05:32,120 --> 01:05:35,540
documented to serve as a worked example

1368
01:05:33,500 --> 01:05:38,150
of how you might do this it's not the

1369
01:05:35,540 --> 01:05:39,410
own it's called bandwidth enforcer it's

1370
01:05:38,150 --> 01:05:41,000
not the only searchy that Google has

1371
01:05:39,410 --> 01:05:43,250
another one balanced enforcers for

1372
01:05:41,000 --> 01:05:45,110
Google to Google traffic the other one

1373
01:05:43,250 --> 01:05:47,420
which I'm not sure has a public name but

1374
01:05:45,110 --> 01:05:48,290
serves the similar purpose for traffic

1375
01:05:47,420 --> 01:05:51,710
facing the Internet

1376
01:05:48,290 --> 01:05:55,310
I'd like to point out that traffic out

1377
01:05:51,710 --> 01:05:56,630
of Google compute engine has to run the

1378
01:05:55,310 --> 01:06:01,759
gauntlet of both of them

1379
01:05:56,630 --> 01:06:06,290
and so it's so it's well controlled I

1380
01:06:01,760 --> 01:06:07,730
think any responsible CDN or cloud

1381
01:06:06,290 --> 01:06:10,520
provider is going to have an external

1382
01:06:07,730 --> 01:06:12,470
facing global on the siient congestion

1383
01:06:10,520 --> 01:06:16,730
controller or some sort because

1384
01:06:12,470 --> 01:06:17,990
otherwise your own mistakes you can take

1385
01:06:16,730 --> 01:06:21,470
out a large fraction in the internet and

1386
01:06:17,990 --> 01:06:22,669
all your customers with them it's safe

1387
01:06:21,470 --> 01:06:24,680
you go on the day we accidentally

1388
01:06:22,670 --> 01:06:26,760
globally booked deployed bbr to about 80

1389
01:06:24,680 --> 01:06:32,190
percent of the internal traffic

1390
01:06:26,760 --> 01:06:35,940
I know not supposed to say that but you

1391
01:06:32,190 --> 01:06:39,240
know I don't work and now it's in the

1392
01:06:35,940 --> 01:06:40,530
minute but we did that and the Kubek

1393
01:06:39,240 --> 01:06:44,040
traffic didn't stop

1394
01:06:40,530 --> 01:06:45,510
and that wasn't all bad one four four so

1395
01:06:44,040 --> 01:06:47,579
that was also partly just the fact that

1396
01:06:45,510 --> 01:06:51,359
they worked into out to be somewhat more

1397
01:06:47,579 --> 01:06:57,150
compatible and perhaps you know is

1398
01:06:51,359 --> 01:06:57,859
obviously the case hey Colin Perkins

1399
01:06:57,150 --> 01:07:01,859
with no hats

1400
01:06:57,859 --> 01:07:04,500
Ronnie mentioned RTP and video streaming

1401
01:07:01,859 --> 01:07:06,869
earlier I'm gonna be a little cynical

1402
01:07:04,500 --> 01:07:08,130
and probably get fired as chair of the

1403
01:07:06,869 --> 01:07:10,530
errand can't working group to saying

1404
01:07:08,130 --> 01:07:13,320
this but I don't think ITP congestion

1405
01:07:10,530 --> 01:07:15,300
control matters on the basis that by the

1406
01:07:13,320 --> 01:07:16,890
time you hit persistent congestion the

1407
01:07:15,300 --> 01:07:21,450
user has given up because the video is

1408
01:07:16,890 --> 01:07:24,348
unwatchable anyway I'm also tempted to

1409
01:07:21,450 --> 01:07:27,810
say that all the traffic is video anyway

1410
01:07:24,349 --> 01:07:30,480
the on/off dynamics of MPEG - completely

1411
01:07:27,810 --> 01:07:32,069
break congestion control well it doesn't

1412
01:07:30,480 --> 01:07:35,490
matter cause it's all application limits

1413
01:07:32,069 --> 01:07:36,869
it and all the large providers we have

1414
01:07:35,490 --> 01:07:40,470
monitoring in place to see if it's

1415
01:07:36,869 --> 01:07:44,609
causing problems that's it

1416
01:07:40,470 --> 01:07:46,680
I don't entirely disagree with you I

1417
01:07:44,609 --> 01:07:48,779
think and I think to the extent that

1418
01:07:46,680 --> 01:07:55,049
this is a problem it's a worse problem

1419
01:07:48,780 --> 01:07:57,210
that than we think in that everything is

1420
01:07:55,050 --> 01:07:58,829
moving too quick and quick encrypts

1421
01:07:57,210 --> 01:08:00,300
enough of the transport headers that we

1422
01:07:58,829 --> 01:08:04,650
have no visibility into where for this

1423
01:08:00,300 --> 01:08:06,890
is actually a problem on that you've

1424
01:08:04,650 --> 01:08:06,890
read

1425
01:08:08,960 --> 01:08:16,950
hi my name is David skinned Ozzy and I

1426
01:08:13,710 --> 01:08:19,589
used to be a gatekeeper so these days I

1427
01:08:16,950 --> 01:08:22,769
have this laptop and using it I can

1428
01:08:19,589 --> 01:08:25,500
check in code to Google quick and as you

1429
01:08:22,770 --> 01:08:28,920
say the kids with the magic of read

1430
01:08:25,500 --> 01:08:30,960
discs could break things last year on

1431
01:08:28,920 --> 01:08:32,850
the same time I had the same laptop that

1432
01:08:30,960 --> 01:08:39,250
Eric had which allowed me to check in

1433
01:08:32,850 --> 01:08:41,770
code checks and you and kind of the

1434
01:08:39,250 --> 01:08:44,380
actually now at Google we have tests

1435
01:08:41,770 --> 01:08:47,170
whereas there there weren't any so the

1436
01:08:44,380 --> 01:08:49,750
gatekeeper is probably better and Google

1437
01:08:47,170 --> 01:08:52,270
quick I mean I remember a really funny

1438
01:08:49,750 --> 01:08:54,670
bug where the apple kernel got into an

1439
01:08:52,270 --> 01:08:56,469
infinite loop and some connect cases

1440
01:08:54,670 --> 01:08:58,120
when you were doing TCP fest Oakland it

1441
01:08:56,469 --> 01:09:02,040
just happened that in that infinite loop

1442
01:08:58,120 --> 01:09:04,630
there was a call to send a packet out

1443
01:09:02,040 --> 01:09:08,040
there was a network in Switzerland that

1444
01:09:04,630 --> 01:09:12,370
was really unhappy with them for a while

1445
01:09:08,040 --> 01:09:14,769
yeah so on all your points about how

1446
01:09:12,370 --> 01:09:17,559
this is getting worse like I really

1447
01:09:14,770 --> 01:09:20,890
really disagree I saw some people pitch

1448
01:09:17,560 --> 01:09:22,930
some I personally think worse they call

1449
01:09:20,890 --> 01:09:25,480
companies telling now telling us that

1450
01:09:22,930 --> 01:09:27,670
hey look we make all your traffic faster

1451
01:09:25,479 --> 01:09:29,080
were when you look deeper was just a

1452
01:09:27,670 --> 01:09:33,520
thing that in the kernel disabled

1453
01:09:29,080 --> 01:09:35,500
congestion control that was in TCP that

1454
01:09:33,520 --> 01:09:37,900
said while I completely disagree with

1455
01:09:35,500 --> 01:09:43,660
your premise I fully support your

1456
01:09:37,899 --> 01:09:45,639
conclusion if you want to go around to

1457
01:09:43,660 --> 01:09:46,839
router manufacturers telling them ah the

1458
01:09:45,640 --> 01:09:49,690
world is about to end

1459
01:09:46,839 --> 01:09:51,519
please deploy it um continue that we

1460
01:09:49,689 --> 01:09:59,919
might be able to solve buffer bloat that

1461
01:09:51,520 --> 01:10:03,489
way I are not speaking as an employee of

1462
01:09:59,920 --> 01:10:11,230
Google or as a citizen Internet user in

1463
01:10:03,489 --> 01:10:15,879
Switzerland you actually as it turns out

1464
01:10:11,230 --> 01:10:17,589
of this slide back because I didn't do

1465
01:10:15,880 --> 01:10:18,730
anything except for a remind Christian

1466
01:10:17,590 --> 01:10:20,590
that he had to do slide so I have no

1467
01:10:18,730 --> 01:10:22,660
idea your name is on it I'm trying to

1468
01:10:20,590 --> 01:10:24,760
name name being on it

1469
01:10:22,660 --> 01:10:25,989
I agree actually that there is a little

1470
01:10:24,760 --> 01:10:27,489
bit of a problem I think it's maybe a

1471
01:10:25,989 --> 01:10:30,129
slightly different problem I want to go

1472
01:10:27,489 --> 01:10:35,650
back to something that some other Google

1473
01:10:30,130 --> 01:10:39,880
guy said maybe Matt I think yeah I think

1474
01:10:35,650 --> 01:10:41,339
it was not I think to some extent the

1475
01:10:39,880 --> 01:10:45,430
[Music]

1476
01:10:41,340 --> 01:10:47,830
security and reliability here or flip

1477
01:10:45,430 --> 01:10:49,900
sides are the same thing they're all

1478
01:10:47,830 --> 01:10:53,539
essentially transmission safety problems

1479
01:10:49,900 --> 01:10:56,360
and the work that has been done to

1480
01:10:53,539 --> 01:10:59,300
in some networks isolate users or

1481
01:10:56,360 --> 01:11:02,089
isolate processes from each other or to

1482
01:10:59,300 --> 01:11:04,670
isolate good traffic from evil DDoS

1483
01:11:02,090 --> 01:11:07,760
traffic is all kind of the same work to

1484
01:11:04,670 --> 01:11:10,550
the extent that putting better aqm in

1485
01:11:07,760 --> 01:11:13,420
the internet makes that work better it's

1486
01:11:10,550 --> 01:11:16,909
a good thing to do on its you know

1487
01:11:13,420 --> 01:11:18,860
anyway I will say as a former researcher

1488
01:11:16,909 --> 01:11:21,860
who spent a fair amount of time trying

1489
01:11:18,860 --> 01:11:24,190
to get cloud platforms to throw packets

1490
01:11:21,860 --> 01:11:28,429
at things as fast as I possibly could

1491
01:11:24,190 --> 01:11:30,320
all of the ones that I did did seem to

1492
01:11:28,429 --> 01:11:33,230
have some sort of outbound and with

1493
01:11:30,320 --> 01:11:36,469
policing and I'm I suspect that almost

1494
01:11:33,230 --> 01:11:39,650
all of it was there for abuse so the

1495
01:11:36,469 --> 01:11:41,780
nice thing about you know the abuse role

1496
01:11:39,650 --> 01:11:43,489
of internet that we have is that the

1497
01:11:41,780 --> 01:11:45,920
defenses that we need in order to keep

1498
01:11:43,489 --> 01:11:47,209
it working minimally well also seem to

1499
01:11:45,920 --> 01:11:49,760
be pretty good gatekeepers against

1500
01:11:47,210 --> 01:11:51,860
congestion collapse yeah Thanks thank

1501
01:11:49,760 --> 01:11:54,980
you well thank you for your attention I

1502
01:11:51,860 --> 01:11:58,219
I accept them in the point that we have

1503
01:11:54,980 --> 01:12:01,339
many more defenses today then people

1504
01:11:58,219 --> 01:12:03,590
would think and it's great I accept that

1505
01:12:01,340 --> 01:12:04,969
it will be very hard to do something

1506
01:12:03,590 --> 01:12:09,530
more aggressive to the intelligence

1507
01:12:04,969 --> 01:12:11,659
should be cubic as we know that and so

1508
01:12:09,530 --> 01:12:13,460
that we should not panic but we should

1509
01:12:11,659 --> 01:12:17,058
do isolation because it's a good thing

1510
01:12:13,460 --> 01:12:22,519
yeah okay that was less depressing than

1511
01:12:17,059 --> 01:12:26,829
I thought - more fun we have one more

1512
01:12:22,519 --> 01:12:30,230
Top Ramen are you on I think so here we

1513
01:12:26,829 --> 01:12:30,889
perfect yes you can start right away all

1514
01:12:30,230 --> 01:12:34,250
right great

1515
01:12:30,889 --> 01:12:36,530
so an object on queue lock quite quickly

1516
01:12:34,250 --> 01:12:37,900
for those who are not institute law yet

1517
01:12:36,530 --> 01:12:40,489
next slide please

1518
01:12:37,900 --> 01:12:42,980
so the main motivation is this we want

1519
01:12:40,489 --> 01:12:44,209
to help debug quick implementations it's

1520
01:12:42,980 --> 01:12:46,339
difficult to make this kind of

1521
01:12:44,210 --> 01:12:47,960
visualization and tools just using

1522
01:12:46,340 --> 01:12:50,150
packet capture files because they don't

1523
01:12:47,960 --> 01:12:53,239
contain things like ingest control

1524
01:12:50,150 --> 01:12:57,440
information so skip the next slides and

1525
01:12:53,239 --> 01:12:59,690
then go to next slide the next one so

1526
01:12:57,440 --> 01:13:01,369
what we proposed to help that will make

1527
01:12:59,690 --> 01:13:02,928
tooling development much easier if

1528
01:13:01,369 --> 01:13:05,849
everybody would just pretty the same

1529
01:13:02,929 --> 01:13:09,060
time flung of course

1530
01:13:05,850 --> 01:13:11,250
we call q log it's a relatively simple

1531
01:13:09,060 --> 01:13:14,280
scheme based on JSON because we want to

1532
01:13:11,250 --> 01:13:15,810
make web-based tools and we wanted to be

1533
01:13:14,280 --> 01:13:22,009
human readable for people not using

1534
01:13:15,810 --> 01:13:22,010
house tools and so skip the next slide

1535
01:13:22,320 --> 01:13:28,259
and so we presented that at the end of

1536
01:13:24,480 --> 01:13:29,429
last year and the bid is a surprise to

1537
01:13:28,260 --> 01:13:32,370
me a lot of people seemed quite

1538
01:13:29,430 --> 01:13:34,890
enthusiastic about that a lot of people

1539
01:13:32,370 --> 01:13:36,990
had some interests among those was media

1540
01:13:34,890 --> 01:13:39,210
and she said why would you do this just

1541
01:13:36,990 --> 01:13:42,030
for quick and hp3 why can't we do this

1542
01:13:39,210 --> 01:13:43,740
for more than those protocols and so I

1543
01:13:42,030 --> 01:13:45,570
got the chance to present some of our

1544
01:13:43,740 --> 01:13:48,360
talks on that last time at IETF in

1545
01:13:45,570 --> 01:13:50,670
Prague a couple of months ago again a

1546
01:13:48,360 --> 01:13:52,769
lot of people seemed interested but it

1547
01:13:50,670 --> 01:13:55,380
was deemed a bit too early to talk about

1548
01:13:52,770 --> 01:13:57,420
doing maybe above for a working group we

1549
01:13:55,380 --> 01:14:00,630
should get some more experience using

1550
01:13:57,420 --> 01:14:02,550
quick as a kind of an incubator to get

1551
01:14:00,630 --> 01:14:05,730
some more insights and so that's what we

1552
01:14:02,550 --> 01:14:07,620
left it off last time and so we have

1553
01:14:05,730 --> 01:14:09,769
been doing that since so next slide

1554
01:14:07,620 --> 01:14:09,769
please

1555
01:14:09,930 --> 01:14:13,590
what we clearly have is two different

1556
01:14:11,340 --> 01:14:15,180
drafts two documents one that we're

1557
01:14:13,590 --> 01:14:17,280
calling the high level schema which is

1558
01:14:15,180 --> 01:14:19,380
basically the protocol agnostic to

1559
01:14:17,280 --> 01:14:21,290
general purpose part of what we're doing

1560
01:14:19,380 --> 01:14:23,580
and then the other draft is a quick

1561
01:14:21,290 --> 01:14:25,680
specific stuff the second one is very

1562
01:14:23,580 --> 01:14:30,990
easy to understand right quick has

1563
01:14:25,680 --> 01:14:32,580
packets it has it has packet numbers it

1564
01:14:30,990 --> 01:14:34,469
has stream frames that have lengths and

1565
01:14:32,580 --> 01:14:37,710
offsets it's basically us going through

1566
01:14:34,470 --> 01:14:40,170
the quick documents and copying over

1567
01:14:37,710 --> 01:14:42,900
things into into a JSON format it's very

1568
01:14:40,170 --> 01:14:47,970
long and it's very boring the left one

1569
01:14:42,900 --> 01:14:49,589
is a bit more interesting next slide you

1570
01:14:47,970 --> 01:14:51,810
can see it is kind of the metadata that

1571
01:14:49,590 --> 01:14:53,880
helps you interpret the offense on the

1572
01:14:51,810 --> 01:14:55,530
right side so the simplest form is that

1573
01:14:53,880 --> 01:14:57,570
is that we have like a title and a

1574
01:14:55,530 --> 01:14:58,740
description of the current file but the

1575
01:14:57,570 --> 01:15:01,139
most important field there is the

1576
01:14:58,740 --> 01:15:02,790
protocol type as you can see if that is

1577
01:15:01,140 --> 01:15:04,410
the current values quickest betray that

1578
01:15:02,790 --> 01:15:07,950
means the offense in that part of the

1579
01:15:04,410 --> 01:15:09,780
file or from the other document but so

1580
01:15:07,950 --> 01:15:13,559
if we would expand this to more

1581
01:15:09,780 --> 01:15:15,120
protocols next slide we would change the

1582
01:15:13,560 --> 01:15:17,340
value of the field and suddenly you

1583
01:15:15,120 --> 01:15:19,159
which you would have for example tcp of

1584
01:15:17,340 --> 01:15:21,679
hb2

1585
01:15:19,159 --> 01:15:23,659
of course first kind of the high level

1586
01:15:21,679 --> 01:15:26,389
approach which taken out to still have

1587
01:15:23,659 --> 01:15:28,789
something protocol agnostic while

1588
01:15:26,389 --> 01:15:30,050
working on a quick specific thing I'm

1589
01:15:28,789 --> 01:15:32,389
going to give it a little bit more

1590
01:15:30,050 --> 01:15:35,300
detail on that just some examples next

1591
01:15:32,389 --> 01:15:37,219
slide so in the high-level schema for

1592
01:15:35,300 --> 01:15:40,699
example some people were worried about

1593
01:15:37,219 --> 01:15:42,469
the overhead of JSON so we have some

1594
01:15:40,699 --> 01:15:46,070
file size optimizations that you can

1595
01:15:42,469 --> 01:15:49,010
skip loading the same value in the same

1596
01:15:46,070 --> 01:15:52,009
file multiple times we also like to make

1597
01:15:49,010 --> 01:15:53,749
this very flexible so for example we've

1598
01:15:52,010 --> 01:15:55,479
already with Facebook they feel that

1599
01:15:53,749 --> 01:15:58,010
they have a lot of custom events

1600
01:15:55,479 --> 01:15:59,780
specific to their implementation we

1601
01:15:58,010 --> 01:16:03,919
support that they can also walk those

1602
01:15:59,780 --> 01:16:05,478
without a specific schema the bottom one

1603
01:16:03,919 --> 01:16:07,550
is I think one of the most interesting

1604
01:16:05,479 --> 01:16:09,349
things is that we want to do an

1605
01:16:07,550 --> 01:16:10,909
end-to-end lock so you have not just

1606
01:16:09,349 --> 01:16:13,039
client and server but you also have

1607
01:16:10,909 --> 01:16:15,049
several in-network intermediaries that

1608
01:16:13,039 --> 01:16:16,639
you want to log if you do that with

1609
01:16:15,050 --> 01:16:19,159
pcaps you would probably end up with

1610
01:16:16,639 --> 01:16:20,780
four individual files without much

1611
01:16:19,159 --> 01:16:23,299
context and it would be difficult to

1612
01:16:20,780 --> 01:16:25,219
bundle them together so one of the

1613
01:16:23,300 --> 01:16:28,039
things that Q log does is allow you to

1614
01:16:25,219 --> 01:16:30,439
aggregate different traces into the same

1615
01:16:28,039 --> 01:16:31,849
queue log file and then provide some

1616
01:16:30,439 --> 01:16:34,099
context so for example here we have the

1617
01:16:31,849 --> 01:16:36,590
fantage point saying from which point of

1618
01:16:34,099 --> 01:16:40,010
view was this trace taken this can also

1619
01:16:36,590 --> 01:16:41,570
allow us to add different protocols into

1620
01:16:40,010 --> 01:16:43,880
the same file for example let's say you

1621
01:16:41,570 --> 01:16:44,749
have an h3 to a Mississippi it needs to

1622
01:16:43,880 --> 01:16:47,209
be to implementation

1623
01:16:44,749 --> 01:16:49,728
you would have a CP to traces from a

1624
01:16:47,209 --> 01:16:52,010
user space implementation and then TCP

1625
01:16:49,729 --> 01:16:53,389
level traces maybe from the kernel and

1626
01:16:52,010 --> 01:16:57,229
you could combine them in the same file

1627
01:16:53,389 --> 01:17:01,400
to nicely keep everything together next

1628
01:16:57,229 --> 01:17:03,349
slide we have other things that make you

1629
01:17:01,400 --> 01:17:05,239
really want to keep things in one file

1630
01:17:03,349 --> 01:17:07,189
so we talked to for example China

1631
01:17:05,239 --> 01:17:08,989
Iyengar from fastly and he said you know

1632
01:17:07,189 --> 01:17:11,150
we're probably gonna have talents of

1633
01:17:08,989 --> 01:17:13,369
queue logs and we're mostly interested

1634
01:17:11,150 --> 01:17:16,489
in for example the ones that have a high

1635
01:17:13,369 --> 01:17:19,339
packet loss rate and so what we have now

1636
01:17:16,489 --> 01:17:21,079
is like a summary field on top that that

1637
01:17:19,340 --> 01:17:23,030
has some aggregate information for this

1638
01:17:21,079 --> 01:17:24,530
file so you can very quickly just sift

1639
01:17:23,030 --> 01:17:26,959
through all these files without having

1640
01:17:24,530 --> 01:17:28,969
to download them in full to find the

1641
01:17:26,959 --> 01:17:30,740
ones that you're looking for the second

1642
01:17:28,969 --> 01:17:32,300
thing is again with the tools

1643
01:17:30,740 --> 01:17:34,849
if you're loaded this you're probably

1644
01:17:32,300 --> 01:17:36,920
going to zoom in on this particular

1645
01:17:34,850 --> 01:17:38,960
section you're gonna filter some stuff

1646
01:17:36,920 --> 01:17:40,190
or you're going to change the colors if

1647
01:17:38,960 --> 01:17:42,500
you don't want to share that with a

1648
01:17:40,190 --> 01:17:45,290
colleague you would have to take a

1649
01:17:42,500 --> 01:17:47,840
screenshot right now right so instead of

1650
01:17:45,290 --> 01:17:50,060
doing that we say let's just embed those

1651
01:17:47,840 --> 01:17:53,030
settings into the Q log file as well so

1652
01:17:50,060 --> 01:17:54,890
you can just share the adjusted Q log

1653
01:17:53,030 --> 01:17:56,509
file with the colleague they can open it

1654
01:17:54,890 --> 01:17:58,490
up in the same tool and view the exact

1655
01:17:56,510 --> 01:18:01,400
same data that you were looking at

1656
01:17:58,490 --> 01:18:02,719
before so there's just a couple of

1657
01:18:01,400 --> 01:18:07,610
examples of what is in the high-level

1658
01:18:02,720 --> 01:18:11,330
schema next slide in terms of the event

1659
01:18:07,610 --> 01:18:14,780
definition we currently have about 50 40

1660
01:18:11,330 --> 01:18:17,150
events I think it will be about twice

1661
01:18:14,780 --> 01:18:18,650
that by the end some of the most

1662
01:18:17,150 --> 01:18:20,599
important ones I think of course the

1663
01:18:18,650 --> 01:18:22,099
ones that are not in the typical packet

1664
01:18:20,600 --> 01:18:25,130
capture so the things related to

1665
01:18:22,100 --> 01:18:27,350
congestion control or when packets were

1666
01:18:25,130 --> 01:18:29,050
lost that kind of stuff but of course

1667
01:18:27,350 --> 01:18:33,980
next to that we also log your typical

1668
01:18:29,050 --> 01:18:36,380
packet Racing type events next slide so

1669
01:18:33,980 --> 01:18:38,389
for example we have of course a typical

1670
01:18:36,380 --> 01:18:41,210
packet received offence where you just

1671
01:18:38,390 --> 01:18:43,550
log the received quick packet with each

1672
01:18:41,210 --> 01:18:45,650
constituent frames for example here

1673
01:18:43,550 --> 01:18:50,140
there's an ACK frame being logged this

1674
01:18:45,650 --> 01:18:50,139
iframe is aking packets four to seven

1675
01:18:50,410 --> 01:18:56,000
using this we kind of notice that it's

1676
01:18:52,520 --> 01:18:58,190
not enough in all use cases for example

1677
01:18:56,000 --> 01:19:02,300
we had this case where we clearly saw

1678
01:18:58,190 --> 01:19:04,790
the acknowledgement frame coming in and

1679
01:19:02,300 --> 01:19:08,360
after that it was still logging a packet

1680
01:19:04,790 --> 01:19:11,090
lost for one of the just act packets

1681
01:19:08,360 --> 01:19:13,429
right which is very weird that should

1682
01:19:11,090 --> 01:19:16,520
never happen and we found out that it

1683
01:19:13,430 --> 01:19:17,870
was agony realization where we parse the

1684
01:19:16,520 --> 01:19:20,060
AG frames but we don't immediately

1685
01:19:17,870 --> 01:19:22,490
process them so there was kind of a long

1686
01:19:20,060 --> 01:19:23,900
time in between those two sometimes and

1687
01:19:22,490 --> 01:19:26,269
it was time enough for the loss events

1688
01:19:23,900 --> 01:19:29,690
himer so you come in and declare the

1689
01:19:26,270 --> 01:19:32,180
packet lost even though the AG frame

1690
01:19:29,690 --> 01:19:36,110
just wasn't processed so the only way to

1691
01:19:32,180 --> 01:19:39,050
really solve that next slide is to add

1692
01:19:36,110 --> 01:19:41,750
yet another defense more explicit events

1693
01:19:39,050 --> 01:19:43,490
specifically for packet acknowledgments

1694
01:19:41,750 --> 01:19:45,530
because those

1695
01:19:43,490 --> 01:19:48,019
receipt of the egg frame and the package

1696
01:19:45,530 --> 01:19:51,530
acknowledged might not be directly

1697
01:19:48,020 --> 01:19:53,630
correlated so this one example I

1698
01:19:51,530 --> 01:19:55,340
recently did an order to talk with a lot

1699
01:19:53,630 --> 01:19:57,250
more information which you can find in

1700
01:19:55,340 --> 01:19:59,120
the youtube link on the bottom of slide

1701
01:19:57,250 --> 01:20:01,130
so as you can see we've made a lot of

1702
01:19:59,120 --> 01:20:02,660
progress on the text I'm happy to say we

1703
01:20:01,130 --> 01:20:05,960
also made some implementation progress

1704
01:20:02,660 --> 01:20:07,880
next slide we currently have five

1705
01:20:05,960 --> 01:20:11,450
different quick stacks that are

1706
01:20:07,880 --> 01:20:13,280
outputting Q Lord directly what I forgot

1707
01:20:11,450 --> 01:20:15,920
to say what last slide is you might end

1708
01:20:13,280 --> 01:20:18,530
up with 80-plus events but I do not

1709
01:20:15,920 --> 01:20:20,300
expect everybody to implement those

1710
01:20:18,530 --> 01:20:23,269
eight events most people will probably

1711
01:20:20,300 --> 01:20:26,180
have enough with about 20 of those

1712
01:20:23,270 --> 01:20:27,770
events and so a lot of these tools are

1713
01:20:26,180 --> 01:20:29,780
outputting Q log but they're definitely

1714
01:20:27,770 --> 01:20:32,240
not outputting every possibility like

1715
01:20:29,780 --> 01:20:34,519
events they're outputting the the main

1716
01:20:32,240 --> 01:20:36,320
basic set that is supported by our

1717
01:20:34,520 --> 01:20:37,970
current tools those tools are not

1718
01:20:36,320 --> 01:20:39,830
current really extensive right now we

1719
01:20:37,970 --> 01:20:43,040
mainly have one that is being used a lot

1720
01:20:39,830 --> 01:20:45,320
is when you're seeing it's for people in

1721
01:20:43,040 --> 01:20:47,570
congestion control memory but we are

1722
01:20:45,320 --> 01:20:49,880
working very hard on new tools I'm

1723
01:20:47,570 --> 01:20:51,980
working full time on new tools that will

1724
01:20:49,880 --> 01:20:53,450
come out over the course of August and

1725
01:20:51,980 --> 01:20:58,820
September so expect to see a loft

1726
01:20:53,450 --> 01:21:00,410
movement in that space next life is so

1727
01:20:58,820 --> 01:21:02,450
the nice thing about having other people

1728
01:21:00,410 --> 01:21:05,000
look at this is that we've been getting

1729
01:21:02,450 --> 01:21:06,830
some feedback from other implementers it

1730
01:21:05,000 --> 01:21:09,470
seems that for a lot of people the

1731
01:21:06,830 --> 01:21:11,620
overhead actually is quite okay Facebook

1732
01:21:09,470 --> 01:21:15,830
reports that they're logging 20 billion

1733
01:21:11,620 --> 01:21:17,900
quick events per day I don't think

1734
01:21:15,830 --> 01:21:20,059
they're actually logging Q log events at

1735
01:21:17,900 --> 01:21:23,330
that scale yet but it's nice to know

1736
01:21:20,060 --> 01:21:26,720
that it's possible that it's a possible

1737
01:21:23,330 --> 01:21:28,400
way forward someone mentioned that they

1738
01:21:26,720 --> 01:21:31,040
would like to use Q log as a way to

1739
01:21:28,400 --> 01:21:32,960
implement tests so instead of augmenting

1740
01:21:31,040 --> 01:21:34,670
the code with unit testing they can just

1741
01:21:32,960 --> 01:21:37,370
look at what was happening in the NICU

1742
01:21:34,670 --> 01:21:39,500
log and try to devise test failed or

1743
01:21:37,370 --> 01:21:42,680
succeeded that way which i think is a

1744
01:21:39,500 --> 01:21:45,020
very interesting use case and then the

1745
01:21:42,680 --> 01:21:46,520
the last sentence there was very

1746
01:21:45,020 --> 01:21:49,010
interesting for me because when we

1747
01:21:46,520 --> 01:21:51,350
started this I asked people

1748
01:21:49,010 --> 01:21:53,120
why isn't anybody doing this yet why

1749
01:21:51,350 --> 01:21:54,830
doesn't this exist and a lot of people

1750
01:21:53,120 --> 01:21:56,450
said well it's a lot of work and we

1751
01:21:54,830 --> 01:22:00,260
don't really have the map

1752
01:21:56,450 --> 01:22:02,019
next slide so I think you what really

1753
01:22:00,260 --> 01:22:04,700
helps take away a bit of that overhead

1754
01:22:02,020 --> 01:22:07,970
in terms of work we recently did some

1755
01:22:04,700 --> 01:22:10,099
some work on sp3 prioritization so in

1756
01:22:07,970 --> 01:22:12,290
this the top visualization each row is

1757
01:22:10,100 --> 01:22:16,850
an individual Q log file one web page

1758
01:22:12,290 --> 01:22:19,730
load so each vertical rectangle is one

1759
01:22:16,850 --> 01:22:20,780
quick packet and I really like this

1760
01:22:19,730 --> 01:22:22,280
visualization because it immediately

1761
01:22:20,780 --> 01:22:23,900
makes clear the differences between

1762
01:22:22,280 --> 01:22:24,410
different prioritization approaches

1763
01:22:23,900 --> 01:22:27,349
right

1764
01:22:24,410 --> 01:22:30,080
and yet it only took me about a day to

1765
01:22:27,350 --> 01:22:32,690
create this visualization based on the Q

1766
01:22:30,080 --> 01:22:34,970
log formats so it's a lot of profit for

1767
01:22:32,690 --> 01:22:37,219
not a lot of work the bottom one is even

1768
01:22:34,970 --> 01:22:39,220
faster this was implemented by one of

1769
01:22:37,220 --> 01:22:42,530
our pageant students in about two hours

1770
01:22:39,220 --> 01:22:44,690
and really helped us to debug the

1771
01:22:42,530 --> 01:22:47,420
prioritization implementation as we were

1772
01:22:44,690 --> 01:22:48,759
going so I really like that Q log

1773
01:22:47,420 --> 01:22:51,380
enables this kind of quick and dirty

1774
01:22:48,760 --> 01:22:53,630
fast visualization that helps implement

1775
01:22:51,380 --> 01:22:56,390
one of the some of the complex systems

1776
01:22:53,630 --> 01:22:58,970
as well so we've got a lot of good

1777
01:22:56,390 --> 01:23:02,930
feedback we've also got a lot of what I

1778
01:22:58,970 --> 01:23:05,990
would call constructive feedback next

1779
01:23:02,930 --> 01:23:08,330
slide so there are also people that say

1780
01:23:05,990 --> 01:23:09,830
that there is some overhead I'm a bit

1781
01:23:08,330 --> 01:23:12,380
ashamed to admit that our own

1782
01:23:09,830 --> 01:23:14,420
implementation gets very slow if we

1783
01:23:12,380 --> 01:23:16,160
enable all the queue logging but that's

1784
01:23:14,420 --> 01:23:19,490
because we're using javascript and a

1785
01:23:16,160 --> 01:23:21,980
very crappy logging framework but still

1786
01:23:19,490 --> 01:23:25,370
there is a cost some people still don't

1787
01:23:21,980 --> 01:23:27,530
like json some people their

1788
01:23:25,370 --> 01:23:29,269
implementations aren't fit to output

1789
01:23:27,530 --> 01:23:31,099
queue long as we have it right now and

1790
01:23:29,270 --> 01:23:33,800
then one of the most important ones is

1791
01:23:31,100 --> 01:23:35,600
the one at the bottom is even besides

1792
01:23:33,800 --> 01:23:37,820
the possible performance of red there is

1793
01:23:35,600 --> 01:23:40,070
also a certain maintenance burden in

1794
01:23:37,820 --> 01:23:41,660
adding this morning now something

1795
01:23:40,070 --> 01:23:44,059
changes in quick you don't just need to

1796
01:23:41,660 --> 01:23:46,880
update your business logic you also need

1797
01:23:44,060 --> 01:23:48,920
to update your logging code and so they

1798
01:23:46,880 --> 01:23:51,770
would rather wait until things settle

1799
01:23:48,920 --> 01:23:54,190
down a bit I think that's quite ironic

1800
01:23:51,770 --> 01:23:57,980
coming from people implementing quick

1801
01:23:54,190 --> 01:24:02,360
write but it's still a very good point

1802
01:23:57,980 --> 01:24:03,650
to make so next slide we've seen that a

1803
01:24:02,360 --> 01:24:05,750
lot of stacks that have these

1804
01:24:03,650 --> 01:24:08,089
reservations right now still are trying

1805
01:24:05,750 --> 01:24:09,340
to move towards key log they mainly do

1806
01:24:08,090 --> 01:24:11,470
that by using what

1807
01:24:09,340 --> 01:24:13,660
calling converters so they have some

1808
01:24:11,470 --> 01:24:15,460
kind of an internal watering format they

1809
01:24:13,660 --> 01:24:17,470
write a small program that transformed

1810
01:24:15,460 --> 01:24:21,010
it into Q log so that they can use the

1811
01:24:17,470 --> 01:24:23,500
tools this works just fine I think it's

1812
01:24:21,010 --> 01:24:26,320
a good approach I think it's a nice way

1813
01:24:23,500 --> 01:24:29,020
to eventually maybe get the browser I

1814
01:24:26,320 --> 01:24:31,000
put into a cute or compatible form as

1815
01:24:29,020 --> 01:24:34,150
well because I don't think they might

1816
01:24:31,000 --> 01:24:35,830
want to implement you log directly but I

1817
01:24:34,150 --> 01:24:39,629
am a bit worried about the maintenance

1818
01:24:35,830 --> 01:24:43,120
burden for these converters down to one

1819
01:24:39,630 --> 01:24:48,490
so that's about what I had to say next

1820
01:24:43,120 --> 01:24:50,170
slide of course I'm a bit biased but I'm

1821
01:24:48,490 --> 01:24:52,179
very happy but what we've been able to

1822
01:24:50,170 --> 01:24:53,470
do in Korea knew we were going I'm very

1823
01:24:52,180 --> 01:24:54,100
happy with old support from the

1824
01:24:53,470 --> 01:24:55,930
community

1825
01:24:54,100 --> 01:25:00,010
thank you everyone has been great

1826
01:24:55,930 --> 01:25:04,150
however next slide there remains some

1827
01:25:00,010 --> 01:25:06,040
serious open questions the one of the

1828
01:25:04,150 --> 01:25:07,330
major feedbacks from last time was that

1829
01:25:06,040 --> 01:25:09,790
we need to think about privacy and

1830
01:25:07,330 --> 01:25:11,920
security sadly that is one of the areas

1831
01:25:09,790 --> 01:25:14,320
that has you know will last the least

1832
01:25:11,920 --> 01:25:16,180
amount of progress since then one

1833
01:25:14,320 --> 01:25:17,530
because I'm not an expert on that until

1834
01:25:16,180 --> 01:25:19,630
because we haven't really had a lot of

1835
01:25:17,530 --> 01:25:21,610
feedback on that so if you have opinions

1836
01:25:19,630 --> 01:25:24,190
on that and ways that we can integrate

1837
01:25:21,610 --> 01:25:26,799
this into the format please let us know

1838
01:25:24,190 --> 01:25:29,650
and then it seems like this is working

1839
01:25:26,800 --> 01:25:31,500
quite well for quick but it doesn't mean

1840
01:25:29,650 --> 01:25:34,269
that it might work well for other

1841
01:25:31,500 --> 01:25:36,880
protocols as well so that's maybe a

1842
01:25:34,270 --> 01:25:41,680
discussion we still need to have next

1843
01:25:36,880 --> 01:25:43,420
and last slide so maybe we don't have to

1844
01:25:41,680 --> 01:25:45,400
have all these discussions right now we

1845
01:25:43,420 --> 01:25:48,220
also don't have time so please join us

1846
01:25:45,400 --> 01:25:50,379
on github we also have a brand new Q log

1847
01:25:48,220 --> 01:25:52,630
mailing lists thank you for that Maria

1848
01:25:50,380 --> 01:25:55,060
I'm also planning on landing launching

1849
01:25:52,630 --> 01:25:56,860
the quick tools of info website which is

1850
01:25:55,060 --> 01:26:00,040
going to gather all the liquid cooling

1851
01:25:56,860 --> 01:26:02,440
that exists not just ours but everything

1852
01:26:00,040 --> 01:26:04,450
that other people have made as well to

1853
01:26:02,440 --> 01:26:06,040
work as kind of a central hub if you

1854
01:26:04,450 --> 01:26:08,440
want to go further in and that feel free

1855
01:26:06,040 --> 01:26:10,240
to add Q log not just your quick stack

1856
01:26:08,440 --> 01:26:12,759
it would be fantastic to have someone

1857
01:26:10,240 --> 01:26:14,980
try to do this for other protocols as

1858
01:26:12,760 --> 01:26:17,770
well if you're able to do that and of

1859
01:26:14,980 --> 01:26:19,750
course we should be surely the only ones

1860
01:26:17,770 --> 01:26:22,290
making open-source visualization tools

1861
01:26:19,750 --> 01:26:25,380
feel free to do

1862
01:26:22,290 --> 01:26:26,850
finally I don't know what people want in

1863
01:26:25,380 --> 01:26:28,710
terms of next steps is this something

1864
01:26:26,850 --> 01:26:32,190
that should be a working group above or

1865
01:26:28,710 --> 01:26:38,130
not at all please let me know so thank

1866
01:26:32,190 --> 01:26:44,099
you thanks a lot we take a few short

1867
01:26:38,130 --> 01:26:46,350
questions to say sorry I've not had time

1868
01:26:44,100 --> 01:26:50,220
to make the Google quick tracing

1869
01:26:46,350 --> 01:26:52,680
compatible appeal we're working on but

1870
01:26:50,220 --> 01:26:55,080
they still have time I wanted to know

1871
01:26:52,680 --> 01:26:59,880
about extension from quick to other

1872
01:26:55,080 --> 01:27:02,940
protocol from our old very old logging

1873
01:26:59,880 --> 01:27:07,020
format was designed to be compatible

1874
01:27:02,940 --> 01:27:10,730
with TCP and quick and it didn't make

1875
01:27:07,020 --> 01:27:13,350
anyone happy nicer TCP nor quick people

1876
01:27:10,730 --> 01:27:15,620
because it turns out that while

1877
01:27:13,350 --> 01:27:20,430
protocols are similar in some level

1878
01:27:15,620 --> 01:27:25,230
they're also substantially different in

1879
01:27:20,430 --> 01:27:32,510
many important ways just wanted to note

1880
01:27:25,230 --> 01:27:32,509
that but this is really more Thank You

1881
01:27:33,290 --> 01:27:40,710
Jana Inger thank you so much for your

1882
01:27:38,430 --> 01:27:43,040
work this is super super cool

1883
01:27:40,710 --> 01:27:46,920
and I'm glad that you put this summery

1884
01:27:43,040 --> 01:27:53,960
stuff in you've got every clackety

1885
01:27:46,920 --> 01:27:53,960
keyboard it's lovely

1886
01:27:54,000 --> 01:28:02,340
we have a note-taker here so so the the

1887
01:28:00,060 --> 01:28:06,230
mini all this is is is it's great to see

1888
01:28:02,340 --> 01:28:09,270
you continuing to do work on this and I

1889
01:28:06,230 --> 01:28:12,299
will be soon starting to work on on

1890
01:28:09,270 --> 01:28:14,310
integrating quickly with Q log as well

1891
01:28:12,300 --> 01:28:17,280
so I hope to be engaging with you on

1892
01:28:14,310 --> 01:28:20,250
that soon in terms of the question of

1893
01:28:17,280 --> 01:28:22,320
both working group etc I honestly think

1894
01:28:20,250 --> 01:28:25,200
that the work as it's going along is is

1895
01:28:22,320 --> 01:28:27,690
is great I think that there should be

1896
01:28:25,200 --> 01:28:30,000
just more iterations on on how want

1897
01:28:27,690 --> 01:28:32,219
people integrating and then as people

1898
01:28:30,000 --> 01:28:33,570
start using traces which hopefully will

1899
01:28:32,220 --> 01:28:34,950
happen as people started do more

1900
01:28:33,570 --> 01:28:36,389
performance testing

1901
01:28:34,950 --> 01:28:37,590
which again we are trying to get the

1902
01:28:36,390 --> 01:28:41,280
quick implementers to do more

1903
01:28:37,590 --> 01:28:42,900
performance testing shortly that that

1904
01:28:41,280 --> 01:28:44,130
there will be evolution at that point

1905
01:28:42,900 --> 01:28:45,450
and I think there's an organic

1906
01:28:44,130 --> 01:28:48,030
engagement that's happening right now

1907
01:28:45,450 --> 01:28:49,800
that is wonderful I don't think that

1908
01:28:48,030 --> 01:28:51,780
formalizing this in any other way is

1909
01:28:49,800 --> 01:28:53,540
necessary at this point because I'm also

1910
01:28:51,780 --> 01:28:56,309
not sure what the outcome of such a

1911
01:28:53,540 --> 01:29:02,610
process would be but those are my

1912
01:28:56,310 --> 01:29:05,270
thoughts I was just gonna say in thanks

1913
01:29:02,610 --> 01:29:09,920
again but you should be showing up here

1914
01:29:05,270 --> 01:29:09,920
well if you can find us my flight next

1915
01:29:18,560 --> 01:29:23,490
see we can do about Singapore Robin

1916
01:29:21,900 --> 01:29:25,070
thank you for this thank you for giving

1917
01:29:23,490 --> 01:29:28,980
the talk at 11:00 p.m.

1918
01:29:25,070 --> 01:29:32,090
I'm like as somebody who like really

1919
01:29:28,980 --> 01:29:34,559
encouraged you to bring this forward I'm

1920
01:29:32,090 --> 01:29:36,420
kind of shocked and amazed at how far

1921
01:29:34,560 --> 01:29:38,640
this has come in one meaning cycle this

1922
01:29:36,420 --> 01:29:42,150
is really really cool I will reiterate

1923
01:29:38,640 --> 01:29:43,890
what Johnny said given the amount of

1924
01:29:42,150 --> 01:29:51,660
progress that's going on sort of on the

1925
01:29:43,890 --> 01:29:54,180
code naturally I would I would the next

1926
01:29:51,660 --> 01:29:58,590
step sure keep keep on keeping on making

1927
01:29:54,180 --> 01:30:02,010
it better as a tool set will we'll come

1928
01:29:58,590 --> 01:30:03,270
back and backfill the how can we

1929
01:30:02,010 --> 01:30:04,800
generalize this to sort of like

1930
01:30:03,270 --> 01:30:08,250
transport development logging stuff

1931
01:30:04,800 --> 01:30:10,740
later I actually had a question about

1932
01:30:08,250 --> 01:30:13,350
about privacy and security stuff but

1933
01:30:10,740 --> 01:30:16,469
since we're kind of short on time I will

1934
01:30:13,350 --> 01:30:19,290
take that offline for you again thank

1935
01:30:16,470 --> 01:30:21,590
you very much I'm I'm kind of shocked

1936
01:30:19,290 --> 01:30:25,200
and appalled at how awesome this is

1937
01:30:21,590 --> 01:30:27,360
thank you very much Robin unfortunately

1938
01:30:25,200 --> 01:30:30,660
we will close this meeting with a sad

1939
01:30:27,360 --> 01:30:32,639
news Sally Floyd is in the hospital and

1940
01:30:30,660 --> 01:30:35,670
many people in this room knew her very

1941
01:30:32,640 --> 01:30:37,260
well I guess um so we will ask you to

1942
01:30:35,670 --> 01:30:39,750
come to the front and take a picture for

1943
01:30:37,260 --> 01:30:42,800
her and we will send it to her as memory

1944
01:30:39,750 --> 01:30:42,800
thank you

1945
01:30:59,100 --> 01:31:05,280
some light I guess maybe over there

1946
01:31:12,410 --> 01:31:15,590
[Music]

