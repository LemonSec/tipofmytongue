1
00:00:14,000 --> 00:00:20,448
good morning welcome to the IEP G

2
00:00:17,369 --> 00:00:25,770
meeting at IETF 105 in Montreal

3
00:00:20,449 --> 00:00:28,410
hopefully you're all in Montreal okay

4
00:00:25,770 --> 00:00:30,619
there's no note well this Jeff will get

5
00:00:28,410 --> 00:00:34,519
angry if I do that a note well thing

6
00:00:30,619 --> 00:00:37,320
yeah he would we have four presenters

7
00:00:34,519 --> 00:00:41,460
five presenters sorry and potentially a

8
00:00:37,320 --> 00:00:42,480
six so we're gonna skip along pretty

9
00:00:41,460 --> 00:00:44,489
quickly between the two the

10
00:00:42,480 --> 00:00:46,529
presentations if you have any questions

11
00:00:44,489 --> 00:00:50,629
I guess the presenters can take those as

12
00:00:46,530 --> 00:00:55,829
they see first up is Joel we have about

13
00:00:50,629 --> 00:00:57,809
20 minutes per person okay if you don't

14
00:00:55,829 --> 00:01:01,980
need that much that's good please to the

15
00:00:57,809 --> 00:01:04,530
presenters from my member can't hear you

16
00:01:01,980 --> 00:01:16,170
and you want to stand on the pink X so

17
00:01:04,530 --> 00:01:17,909
that the medical people see us yes these

18
00:01:16,170 --> 00:01:22,740
these graphics are better than mine

19
00:01:17,909 --> 00:01:25,770
since I basically don't draw stuff yeah

20
00:01:22,740 --> 00:01:29,280
so this is actually sort of still recent

21
00:01:25,770 --> 00:01:31,500
news some of us have been more exposed

22
00:01:29,280 --> 00:01:33,600
to this and then others but basically

23
00:01:31,500 --> 00:01:39,119
anyone with a Linux Linux box has done a

24
00:01:33,600 --> 00:01:45,229
little bit of work in the last month due

25
00:01:39,119 --> 00:01:51,329
to this particular complex of

26
00:01:45,229 --> 00:01:53,250
vulnerabilities so I mean the basic gist

27
00:01:51,329 --> 00:01:57,000
of what's going on here is that there

28
00:01:53,250 --> 00:01:59,880
are various ways to panic your your your

29
00:01:57,000 --> 00:02:01,439
kernel using really small packets and if

30
00:01:59,880 --> 00:02:03,689
you're a malicious client you can

31
00:02:01,439 --> 00:02:07,679
actually get the server to participate

32
00:02:03,689 --> 00:02:12,900
in this by setting your TCP MSS rather

33
00:02:07,680 --> 00:02:15,090
low one of the proposed mitigations

34
00:02:12,900 --> 00:02:18,000
assuming that you cannot simply reboot

35
00:02:15,090 --> 00:02:24,209
all of your machines in a big hurry

36
00:02:18,000 --> 00:02:31,019
is to limit the minimum size MSS that

37
00:02:24,209 --> 00:02:35,819
you can actually set on my connection so

38
00:02:31,019 --> 00:02:37,560
in the in in in the CVE

39
00:02:35,819 --> 00:02:40,379
one of the proposed mitigations is

40
00:02:37,560 --> 00:02:44,579
actually the iptables lines that you see

41
00:02:40,379 --> 00:02:46,548
here for ipv4 and ipv6 and you know

42
00:02:44,579 --> 00:02:52,530
hopefully nobody is actually advertising

43
00:02:46,549 --> 00:02:54,599
a TCP MSS of 500 on ipv6 I'm not sure

44
00:02:52,530 --> 00:02:57,599
why we would consider that legal but as

45
00:02:54,599 --> 00:03:00,440
it turns out people actually do so

46
00:02:57,599 --> 00:03:02,790
before I actually went and slammed that

47
00:03:00,440 --> 00:03:05,359
mitigation and several thousand Linux

48
00:03:02,790 --> 00:03:07,950
machines that serve millions of

49
00:03:05,359 --> 00:03:13,319
connections per day per box

50
00:03:07,950 --> 00:03:15,480
I went and actually looked at two

51
00:03:13,319 --> 00:03:18,089
questions what is what is a legitimate

52
00:03:15,480 --> 00:03:20,099
TCP MSS we can go back to some fairly

53
00:03:18,090 --> 00:03:24,959
foundational documents with respect to

54
00:03:20,099 --> 00:03:28,230
ipv4 to look for advice there obviously

55
00:03:24,959 --> 00:03:31,379
at one point in time the maximum default

56
00:03:28,230 --> 00:03:37,948
maximum Datagram size was 576 really it

57
00:03:31,379 --> 00:03:39,629
still is for v4 and um you can of course

58
00:03:37,949 --> 00:03:43,549
obviously send a packet that's smaller

59
00:03:39,629 --> 00:03:45,750
than that down to the size of your

60
00:03:43,549 --> 00:03:53,780
minimal amount of data that's associated

61
00:03:45,750 --> 00:03:53,780
with your tcp ack so about 60 bytes but

62
00:03:55,729 --> 00:04:00,150
one of the things that you get at an

63
00:03:57,930 --> 00:04:03,629
advice on the size of ip datagrams

64
00:04:00,150 --> 00:04:06,919
not on the tcp MSS is that host actually

65
00:04:03,629 --> 00:04:11,849
must be able to receive a Datagram of

66
00:04:06,919 --> 00:04:20,659
576 bytes if somebody sends you an MSS

67
00:04:11,849 --> 00:04:23,580
of like 48 or 64 or 200 despite that you

68
00:04:20,659 --> 00:04:27,330
should be able to send them a TCP packet

69
00:04:23,580 --> 00:04:29,669
that's bigger than that otherwise they

70
00:04:27,330 --> 00:04:31,199
were violating RFC 791 as far as I can

71
00:04:29,669 --> 00:04:34,318
tell

72
00:04:31,199 --> 00:04:39,840
so that portion of mutual negotiation

73
00:04:34,319 --> 00:04:42,060
that's supposed to occur isn't

74
00:04:39,840 --> 00:04:47,008
reinforced by strong rules about how

75
00:04:42,060 --> 00:04:52,949
things are applied in TCP RFC 2460 sets

76
00:04:47,009 --> 00:05:01,979
the IP MTU for ipv6 to 1280 minimum

77
00:04:52,949 --> 00:05:04,289
right so that means that the MSS you

78
00:05:01,979 --> 00:05:07,050
should be able to send a packet with

79
00:05:04,289 --> 00:05:12,419
that someone can receive from that would

80
00:05:07,050 --> 00:05:14,400
follow on to be 1240 or so so before I

81
00:05:12,419 --> 00:05:17,698
actually went and whacked 500 on there I

82
00:05:14,400 --> 00:05:20,520
actually went to see on our network

83
00:05:17,699 --> 00:05:24,449
what MSS is do we actually see on

84
00:05:20,520 --> 00:05:25,859
packets so I looked in our flow data and

85
00:05:24,449 --> 00:05:27,509
that was kind of entertaining but I

86
00:05:25,860 --> 00:05:30,389
didn't really believe it so I just

87
00:05:27,509 --> 00:05:32,719
captured a hundred million sins from

88
00:05:30,389 --> 00:05:38,969
five different locations in the network

89
00:05:32,719 --> 00:05:43,080
and then captured all the values that

90
00:05:38,969 --> 00:05:46,979
were there yeah so they do actually all

91
00:05:43,080 --> 00:05:51,000
fit on one slide I guess you will see

92
00:05:46,979 --> 00:05:53,520
that the the largest one that's there is

93
00:05:51,000 --> 00:05:59,360
six five four nine six and the smallest

94
00:05:53,520 --> 00:06:03,089
one is zero I think both of those are

95
00:05:59,360 --> 00:06:08,339
rather optimistic on the part of part of

96
00:06:03,089 --> 00:06:10,560
the sender right there are some that are

97
00:06:08,339 --> 00:06:16,469
there some that are pretty common I

98
00:06:10,560 --> 00:06:20,520
think the the the most common very small

99
00:06:16,469 --> 00:06:25,469
one was unsurprisingly 536 so 576 minus

100
00:06:20,520 --> 00:06:28,680
40 bytes there were 3,000 odd packets

101
00:06:25,469 --> 00:06:33,449
there since with that MSS said I don't

102
00:06:28,680 --> 00:06:38,699
have a hundred million system many of

103
00:06:33,449 --> 00:06:41,459
these are pretty rare they're both I

104
00:06:38,699 --> 00:06:42,870
don't really you can actually see in

105
00:06:41,459 --> 00:06:45,090
this one

106
00:06:42,870 --> 00:06:48,389
if you do some quick math what

107
00:06:45,090 --> 00:06:52,400
percentage of my tea the TCP sins that

108
00:06:48,389 --> 00:06:58,650
we see in those pops is actually v6 but

109
00:06:52,400 --> 00:07:02,849
this is actually the the percentages for

110
00:06:58,650 --> 00:07:06,960
the common MSS sizes as sampled from a

111
00:07:02,850 --> 00:07:08,700
hundred million sins so you know

112
00:07:06,960 --> 00:07:12,060
fortunately for our expectations

113
00:07:08,700 --> 00:07:15,330
fourteen sixty and fourteen forty are

114
00:07:12,060 --> 00:07:21,390
pretty highly represented in this

115
00:07:15,330 --> 00:07:25,409
distribution 8960 interestingly is it's

116
00:07:21,390 --> 00:07:27,210
actually hard for me to separate out the

117
00:07:25,410 --> 00:07:30,330
portions of my network infrastructure

118
00:07:27,210 --> 00:07:33,390
that use that because we speak nine km

119
00:07:30,330 --> 00:07:34,859
to use back and forth to each other from

120
00:07:33,390 --> 00:07:37,860
the portion of the internet that

121
00:07:34,860 --> 00:07:41,669
optimistically suggests that it can

122
00:07:37,860 --> 00:07:43,410
support a 9k MTU I would say that for

123
00:07:41,669 --> 00:07:45,270
anything bigger than 1,500 they're

124
00:07:43,410 --> 00:07:50,790
basically counting on path MTU discovery

125
00:07:45,270 --> 00:07:55,380
to work and that's interestingly

126
00:07:50,790 --> 00:07:58,140
optimistic but for the most part we

127
00:07:55,380 --> 00:08:00,180
clamp those on their behalf so that it

128
00:07:58,140 --> 00:08:02,700
doesn't have to so um these are

129
00:08:00,180 --> 00:08:06,510
obviously just the the emesis is that

130
00:08:02,700 --> 00:08:09,120
they sent us not what we sent back okay

131
00:08:06,510 --> 00:08:12,750
so if we look down here at the bottom

132
00:08:09,120 --> 00:08:14,910
because I wanted to know if I was going

133
00:08:12,750 --> 00:08:17,060
to block small as MSS is because

134
00:08:14,910 --> 00:08:21,419
malicious clients might be using them

135
00:08:17,060 --> 00:08:25,590
what sizes would I see commonly down at

136
00:08:21,419 --> 00:08:30,770
the bottom so out of a hundred million

137
00:08:25,590 --> 00:08:37,968
samples the only one that gave me pause

138
00:08:30,770 --> 00:08:41,630
was this guy at 512 and the one at 256

139
00:08:37,969 --> 00:08:44,730
the suit so this seemed like interesting

140
00:08:41,630 --> 00:08:47,760
choices interestingly I didn't see those

141
00:08:44,730 --> 00:08:49,800
in all of our pops um so they many of

142
00:08:47,760 --> 00:08:51,720
these oddball ones that appear only

143
00:08:49,800 --> 00:08:55,199
regionally so there are particular

144
00:08:51,720 --> 00:08:56,490
providers or clusters of devices that

145
00:08:55,200 --> 00:08:58,589
seem to be associated

146
00:08:56,490 --> 00:09:01,610
with these kinds of behaviors they're

147
00:08:58,589 --> 00:09:07,230
not generalized ie

148
00:09:01,610 --> 00:09:11,820
the 256 one was most commonly seen in

149
00:09:07,230 --> 00:09:13,440
Northern Virginia and when I actually

150
00:09:11,820 --> 00:09:17,010
specifically filtered that the rate

151
00:09:13,440 --> 00:09:19,170
increased so I can Intuit from that that

152
00:09:17,010 --> 00:09:24,330
those clients were not very happy when

153
00:09:19,170 --> 00:09:29,300
they got that filtered so in fact when I

154
00:09:24,330 --> 00:09:34,020
built a mitigation for this um and

155
00:09:29,300 --> 00:09:37,290
socked it away for good for for future

156
00:09:34,020 --> 00:09:40,500
use and we put the threshold below that

157
00:09:37,290 --> 00:09:43,020
256 number because even though we are

158
00:09:40,500 --> 00:09:46,470
down here in the 10 to the minus 6 or 10

159
00:09:43,020 --> 00:09:49,350
to the minus 8 in terms of frequency of

160
00:09:46,470 --> 00:09:56,730
things that we see there's an awful lot

161
00:09:49,350 --> 00:10:00,959
of those so I guess I'm looking at this

162
00:09:56,730 --> 00:10:02,279
um one of the things I have we have to

163
00:10:00,959 --> 00:10:04,529
ask ourselves is what problems were

164
00:10:02,279 --> 00:10:06,360
exposed here there's a generalized

165
00:10:04,529 --> 00:10:08,579
problem with croix understood and

166
00:10:06,360 --> 00:10:10,430
infrequently exercised code paths so we

167
00:10:08,579 --> 00:10:16,589
see a number of kinds of vulnerabilities

168
00:10:10,430 --> 00:10:21,209
like that IP options handling ipv6

169
00:10:16,589 --> 00:10:25,140
packet to big handling in some of these

170
00:10:21,209 --> 00:10:26,609
are some of these are apparent in more

171
00:10:25,140 --> 00:10:28,410
than one operating system and in

172
00:10:26,610 --> 00:10:29,610
separate implementations so some of

173
00:10:28,410 --> 00:10:33,449
these things are a product of

174
00:10:29,610 --> 00:10:36,810
interpretation of IETF standards much

175
00:10:33,450 --> 00:10:41,070
like say routing header 0 type

176
00:10:36,810 --> 00:10:43,199
vulnerabilities were um so there are

177
00:10:41,070 --> 00:10:45,200
implementers out there that are looking

178
00:10:43,200 --> 00:10:47,120
at the advice that we provide and

179
00:10:45,200 --> 00:10:50,070
producing configurations that are

180
00:10:47,120 --> 00:10:53,040
feasible but not necessarily compliant

181
00:10:50,070 --> 00:10:57,240
or maybe they're completely illegal but

182
00:10:53,040 --> 00:11:00,000
MSS is lower than 536 or 1240 seem to

183
00:10:57,240 --> 00:11:01,860
fit into that category so when you see

184
00:11:00,000 --> 00:11:03,600
those and they're the product of say

185
00:11:01,860 --> 00:11:06,380
additional encapsulations

186
00:11:03,600 --> 00:11:09,329
where someone to set their MTU lower

187
00:11:06,380 --> 00:11:10,170
deliberately because they're not doing

188
00:11:09,329 --> 00:11:12,899
PPP

189
00:11:10,170 --> 00:11:16,589
for example those are all well

190
00:11:12,899 --> 00:11:19,740
understood so if you see an MTU of an

191
00:11:16,589 --> 00:11:21,959
advertised MSS of 1388 it's pretty

192
00:11:19,740 --> 00:11:27,000
obvious what's going on there right um

193
00:11:21,959 --> 00:11:29,599
but these 512 and 256 seems like numbers

194
00:11:27,000 --> 00:11:32,370
that someone picked out of a hat like

195
00:11:29,600 --> 00:11:37,050
you didn't arrive at those because of

196
00:11:32,370 --> 00:11:42,060
the structure of your of your link MTU

197
00:11:37,050 --> 00:11:43,560
for example um so one of the things

198
00:11:42,060 --> 00:11:46,229
that's exposed here is that malicious

199
00:11:43,560 --> 00:11:48,899
clients are they are able to control the

200
00:11:46,230 --> 00:11:51,449
behavior of servers right we new

201
00:11:48,899 --> 00:11:53,639
advertise a lower MSS than the server

202
00:11:51,449 --> 00:11:56,160
would prefer to use the server is going

203
00:11:53,639 --> 00:12:00,120
to use that unless it has a knob to

204
00:11:56,160 --> 00:12:02,430
prevent that and now Linux actually has

205
00:12:00,120 --> 00:12:06,570
one of those now as a product of this

206
00:12:02,430 --> 00:12:08,699
particular vulnerability but that's a

207
00:12:06,570 --> 00:12:15,269
behavior we try and avoid in in lots of

208
00:12:08,699 --> 00:12:17,939
things is to avoid cases where the

209
00:12:15,269 --> 00:12:19,500
client can specify things that you

210
00:12:17,940 --> 00:12:22,160
really don't want to do and you end up

211
00:12:19,500 --> 00:12:22,160
doing them anyway

212
00:12:22,310 --> 00:12:27,239
so there's also a need to mitigate

213
00:12:25,589 --> 00:12:30,089
certain kinds of behavior either

214
00:12:27,240 --> 00:12:32,910
temporarily or indifferent indefinitely

215
00:12:30,089 --> 00:12:35,190
without gratuitously breaking users that

216
00:12:32,910 --> 00:12:37,680
have made bad assumptions that's why I

217
00:12:35,190 --> 00:12:41,820
didn't use the 500 value in my own

218
00:12:37,680 --> 00:12:43,439
mitigation so is there some advice we

219
00:12:41,820 --> 00:12:51,269
should be offering here

220
00:12:43,440 --> 00:12:58,110
RFC 66 91 for example went back to went

221
00:12:51,269 --> 00:12:59,880
back to what we specified for Mt use and

222
00:12:58,110 --> 00:13:01,769
how to calculate offsets and provided

223
00:12:59,880 --> 00:13:07,560
better advice basically because of a

224
00:13:01,769 --> 00:13:09,690
lack of a lack of clarity and I think

225
00:13:07,560 --> 00:13:11,279
there's some argument to be made that

226
00:13:09,690 --> 00:13:13,829
there's more clarity that we could

227
00:13:11,279 --> 00:13:15,449
provide to implementers that would

228
00:13:13,829 --> 00:13:21,120
either prevent the sort of behavior or

229
00:13:15,449 --> 00:13:25,109
give me as a as a user license to ignore

230
00:13:21,120 --> 00:13:28,780
these things as bad behavior

231
00:13:25,110 --> 00:13:31,570
so the Linux kernel now actually imposes

232
00:13:28,780 --> 00:13:35,410
a minimum that minimum is pretty small

233
00:13:31,570 --> 00:13:41,170
it's 48 you can set that higher if you'd

234
00:13:35,410 --> 00:13:47,829
like and so if somebody proposes a lower

235
00:13:41,170 --> 00:13:50,110
MSS than that you won't use it and so in

236
00:13:47,830 --> 00:13:53,140
our cases like and we plan to set that

237
00:13:50,110 --> 00:13:55,770
to 200 that's not actually deployed yet

238
00:13:53,140 --> 00:13:59,290
but there you go

239
00:13:55,770 --> 00:14:02,069
so a reading about our reading that the

240
00:13:59,290 --> 00:14:07,589
document suggested we'd be well within

241
00:14:02,070 --> 00:14:12,090
the IP and TCP protocol specifications

242
00:14:07,590 --> 00:14:17,740
to enforce sending packets at minimums

243
00:14:12,090 --> 00:14:20,500
that are aligned with them the link the

244
00:14:17,740 --> 00:14:29,730
minimum link empty use or some value

245
00:14:20,500 --> 00:14:32,260
near them as opposed to at 0 or 60 or 48

246
00:14:29,730 --> 00:14:35,260
if these devices actually have link em

247
00:14:32,260 --> 00:14:38,439
to use it will not accommodate a 576 or

248
00:14:35,260 --> 00:14:40,569
1280 by packet they will break obviously

249
00:14:38,440 --> 00:14:44,290
even before the network could fragment

250
00:14:40,570 --> 00:15:00,870
those on your behalf in v6 it won't so

251
00:14:44,290 --> 00:15:00,870
too bad yeah thank you

252
00:15:06,990 --> 00:15:10,140
yes sir

253
00:15:31,800 --> 00:15:37,870
good morning I'm Cassandra from JP RS I

254
00:15:35,500 --> 00:15:43,750
will talk about attack to passivity

255
00:15:37,870 --> 00:15:49,210
discovery it is a portable walks haughty

256
00:15:43,750 --> 00:15:53,700
presentation this may attack the

257
00:15:49,210 --> 00:15:58,170
passivity discovery is presented by IP

258
00:15:53,700 --> 00:16:02,130
fragmentation attack on DNS after ripe

259
00:15:58,170 --> 00:16:04,329
6006 table meeting October 2013 and

260
00:16:02,130 --> 00:16:09,180
domain invitation prosperous for enmity

261
00:16:04,330 --> 00:16:15,790
I am religion to PKI she comes exact

262
00:16:09,180 --> 00:16:18,489
2018 they these papers show that some

263
00:16:15,790 --> 00:16:20,260
implementations accept a champey

264
00:16:18,490 --> 00:16:21,730
government ation needed on the DF set

265
00:16:20,260 --> 00:16:25,960
with small empty body

266
00:16:21,730 --> 00:16:28,870
this is on 576 under the code especially

267
00:16:25,960 --> 00:16:32,589
the body at the tessera toot body and

268
00:16:28,870 --> 00:16:37,390
the posse MP posterity body may be can

269
00:16:32,589 --> 00:16:38,020
be decreased to 552 on Linux three-point

270
00:16:37,390 --> 00:16:42,670
shotting

271
00:16:38,020 --> 00:16:45,660
or rate or order and the paper show that

272
00:16:42,670 --> 00:16:51,240
says that pass my body may be degrees to

273
00:16:45,660 --> 00:16:54,990
296 then I would like to evaluate to sir

274
00:16:51,240 --> 00:16:59,440
attack this space shows information

275
00:16:54,990 --> 00:17:02,820
methodology attack fast generate crafted

276
00:16:59,440 --> 00:17:05,770
ICMP packet details in next ride on

277
00:17:02,820 --> 00:17:12,000
second dose send the packet to the

278
00:17:05,770 --> 00:17:12,000
target and the attack Isis solder party

279
00:17:12,180 --> 00:17:20,740
at MTV buried target Saba under another

280
00:17:15,970 --> 00:17:23,770
machine and number three verify that

281
00:17:20,740 --> 00:17:29,050
easily verify the result on the target

282
00:17:23,770 --> 00:17:32,800
to machine using commands only Knox

283
00:17:29,050 --> 00:17:36,610
IP do to get IP address command and on

284
00:17:32,800 --> 00:17:41,730
previously his control or net tiny to

285
00:17:36,610 --> 00:17:46,729
TCP host Akash disto only TST NATO's

286
00:17:41,730 --> 00:17:49,740
- our Schultz passing with you

287
00:17:46,730 --> 00:17:52,190
this page shows how to generate to

288
00:17:49,740 --> 00:17:55,200
consideration people on who pockets

289
00:17:52,190 --> 00:18:00,710
Krusty - in people's pockets contains a

290
00:17:55,200 --> 00:18:03,180
shame people hate ICMP header weeds and

291
00:18:00,710 --> 00:18:07,020
unreachable augmentation needed on the

292
00:18:03,180 --> 00:18:10,020
deck set with small empty bar you undo

293
00:18:07,020 --> 00:18:19,650
in IP version of header and in a UDP

294
00:18:10,020 --> 00:18:23,730
header and specialized sauce this sauce

295
00:18:19,650 --> 00:18:27,840
is mauritius massaging pasanda and

296
00:18:23,730 --> 00:18:35,490
target which target victim Saba and the

297
00:18:27,840 --> 00:18:45,080
new motif and try to control remote to

298
00:18:35,490 --> 00:18:45,080
target to demote or summative are you ok

299
00:18:47,750 --> 00:18:56,060
and this page shows how to generate a

300
00:18:52,440 --> 00:18:59,400
cross needed a simpie baiance pockets i

301
00:18:56,060 --> 00:19:02,190
think i crafted eyes in people's pocket

302
00:18:59,400 --> 00:19:05,040
contains i simpiy bar on 6 header i

303
00:19:02,190 --> 00:19:07,950
simpiy buttons the item IP version 6

304
00:19:05,040 --> 00:19:11,570
header and across the ICMP balance sheet

305
00:19:07,950 --> 00:19:18,720
set that contains pocket - beak with

306
00:19:11,570 --> 00:19:23,070
small empty body for example 280 undo in

307
00:19:18,720 --> 00:19:26,790
ipvanish header and in i UDP header with

308
00:19:23,070 --> 00:19:30,389
large data sides and the field 0 to the

309
00:19:26,790 --> 00:19:36,710
end o packet under these small code

310
00:19:30,390 --> 00:19:36,710
shows how to generate the pocket

311
00:19:44,570 --> 00:19:51,270
this place holds verification with a

312
00:19:47,220 --> 00:19:54,960
lizard only knocks two points 6 points

313
00:19:51,270 --> 00:19:59,300
attitude I Peru to get come on the shows

314
00:19:54,960 --> 00:20:05,430
that a multi facility you change to

315
00:19:59,300 --> 00:20:10,919
2,180 IP version 6 under par 70 you

316
00:20:05,430 --> 00:20:17,190
change two degrees to 552 on IP version

317
00:20:10,920 --> 00:20:21,240
4 and this page shows the recent

318
00:20:17,190 --> 00:20:28,610
vegetation result of previously under

319
00:20:21,240 --> 00:20:35,490
NATO BST previously on previously which

320
00:20:28,610 --> 00:20:39,719
after attack Smt you just changed

321
00:20:35,490 --> 00:20:45,360
changes to change the under 70 degrees

322
00:20:39,720 --> 00:20:51,170
to 20 172 and only to Bastille after the

323
00:20:45,360 --> 00:20:51,169
attack the same you t to change to 1280

324
00:20:54,710 --> 00:21:02,220
this table shows aberration result of

325
00:20:57,510 --> 00:21:04,140
the attack domain volition prosperous

326
00:21:02,220 --> 00:21:07,080
whole empty I'm reading to pk paper

327
00:21:04,140 --> 00:21:09,930
shows that some some implementations

328
00:21:07,080 --> 00:21:11,909
accept crafted I simply button for

329
00:21:09,930 --> 00:21:18,200
augmented need under the offset or UDP

330
00:21:11,910 --> 00:21:26,460
and ICMP you degrees to 552 or 296 and

331
00:21:18,200 --> 00:21:27,600
on linux 2.6 case linux 2.6 accept

332
00:21:26,460 --> 00:21:29,640
accept

333
00:21:27,600 --> 00:21:32,550
crafted I keep Acosta dashing people

334
00:21:29,640 --> 00:21:38,930
John Holliman Tunisia and the except for

335
00:21:32,550 --> 00:21:38,930
UDP and passivity degrees to 552 and

336
00:21:38,960 --> 00:21:46,560
4.80 previously net Obst ignore crusty

337
00:21:44,280 --> 00:21:50,270
Tai Chi Chi B button for fragmentation

338
00:21:46,560 --> 00:21:52,950
needed under the except for UDP and the

339
00:21:50,270 --> 00:21:56,310
previously net we see case

340
00:21:52,950 --> 00:21:56,760
they don't have called for crafty

341
00:21:56,310 --> 00:21:59,399
Tadashi

342
00:21:56,760 --> 00:22:01,379
they don't have called for a simpie

343
00:21:59,400 --> 00:22:06,320
revolution needed under the except for

344
00:22:01,380 --> 00:22:11,280
UDP higher bar Linux and FreeBSD NetBSD

345
00:22:06,320 --> 00:22:16,350
all except crafty crafty dozen people in

346
00:22:11,280 --> 00:22:24,860
people's pocket to beak or UDP and they

347
00:22:16,350 --> 00:22:27,980
and passivity you decreased to 380

348
00:22:24,860 --> 00:22:30,810
this page shows summary of the attack

349
00:22:27,980 --> 00:22:33,870
although Linux system doc left custom

350
00:22:30,810 --> 00:22:40,020
people in media and DF set for UDP and

351
00:22:33,870 --> 00:22:42,030
pasyati changed to 500 to 550 to the BSD

352
00:22:40,020 --> 00:22:44,730
systems and renewal in existing ignore

353
00:22:42,030 --> 00:22:50,070
action people are admitted needed under

354
00:22:44,730 --> 00:22:53,130
the offset or UDP and DST under Linux

355
00:22:50,070 --> 00:22:56,189
systems except a shame people who

356
00:22:53,130 --> 00:22:59,370
fragmentation idea set SMP battleships

357
00:22:56,190 --> 00:23:07,260
Paquito too big for TCP and a changeup a

358
00:22:59,370 --> 00:23:16,590
74 much to TCP session tcp case they

359
00:23:07,260 --> 00:23:20,010
check existing TCP session table and not

360
00:23:16,590 --> 00:23:22,740
not vulnerable and many busy under Linux

361
00:23:20,010 --> 00:23:25,830
systems except crafted in version 6

362
00:23:22,740 --> 00:23:29,940
pocket Oh too big for UDP and facility

363
00:23:25,830 --> 00:23:34,770
the crystal clear of 180 and is easy to

364
00:23:29,940 --> 00:23:37,380
set remotely then I'd like to propose

365
00:23:34,770 --> 00:23:40,050
that don't change facility discovery a

366
00:23:37,380 --> 00:23:42,930
simple buttons expected to be Co TCP and

367
00:23:40,050 --> 00:23:46,440
IP version 4 permanently did not reset

368
00:23:42,930 --> 00:23:49,950
are necessary ho TCP because TCP stack

369
00:23:46,440 --> 00:23:52,280
uses a shame PP to be Rowan's needed

370
00:23:49,950 --> 00:23:57,870
under the accept to adjust packet size

371
00:23:52,280 --> 00:24:02,399
to others MSS and UDP is safe to use

372
00:23:57,870 --> 00:24:05,580
with packet size up to 1280 on IP

373
00:24:02,400 --> 00:24:07,369
version 6 i simpiy partnerships pocket

374
00:24:05,580 --> 00:24:10,158
too big for UDP balloon

375
00:24:07,369 --> 00:24:14,090
and I'm proposing recommendations to

376
00:24:10,159 --> 00:24:18,609
avoid the orientation in DNS so in this

377
00:24:14,090 --> 00:24:21,830
page is DNS might be my draft proposals

378
00:24:18,609 --> 00:24:26,059
through services rubadoux to set it en 0

379
00:24:21,830 --> 00:24:28,340
requested the UDP pedal size to 320 and

380
00:24:26,059 --> 00:24:31,249
also TT service under Rousseff is

381
00:24:28,340 --> 00:24:36,649
observable should set it en 0 responded

382
00:24:31,249 --> 00:24:38,600
maximum payload size 2 to 3 120 and more

383
00:24:36,649 --> 00:24:41,299
authoritive service may send a DNS

384
00:24:38,600 --> 00:24:45,168
response into its IP don't have IP

385
00:24:41,299 --> 00:24:47,929
version 6 don't rock options and euros

386
00:24:45,169 --> 00:24:50,899
observers may drop augmented the UDP

387
00:24:47,929 --> 00:24:53,299
responsive tribe drama penis before IP

388
00:24:50,899 --> 00:24:55,609
reassembly it is a countermeasure

389
00:24:53,299 --> 00:25:00,289
against DNS cache for the new attacks

390
00:24:55,609 --> 00:25:03,139
using IP fragmentation and conclusion

391
00:25:00,289 --> 00:25:06,980
and all questions ipvanish pocket topic

392
00:25:03,139 --> 00:25:10,129
is important for TCP and however many

393
00:25:06,980 --> 00:25:13,249
ways except crafted ICP bottom-6 pocket

394
00:25:10,129 --> 00:25:18,428
too big for UDP and posterity body is

395
00:25:13,249 --> 00:25:21,200
easy to decrease to 380 limit or e I

396
00:25:18,429 --> 00:25:23,919
will consider about facility discovery

397
00:25:21,200 --> 00:25:30,009
and fragmentation omit

398
00:25:23,919 --> 00:25:30,009
1280 or disabled that's all

399
00:25:34,940 --> 00:25:37,940
questions

400
00:25:43,450 --> 00:25:48,160
yeah Jolie eglee um so this is

401
00:25:47,200 --> 00:25:51,100
definitely something I was thinking

402
00:25:48,160 --> 00:25:53,110
about in the context of could I get

403
00:25:51,100 --> 00:25:59,709
things to go lower than that right I

404
00:25:53,110 --> 00:26:01,929
don't see a real high value as a

405
00:25:59,710 --> 00:26:07,600
malicious agent in reducing someone's

406
00:26:01,930 --> 00:26:11,710
MTU from say 1500 to 1280 right that's

407
00:26:07,600 --> 00:26:15,399
not I mean that's kind of me being an

408
00:26:11,710 --> 00:26:17,370
ass I suppose but like that that's not

409
00:26:15,400 --> 00:26:24,700
nearly as costly as if you can say

410
00:26:17,370 --> 00:26:26,800
reduce it to 200 right so I mean this is

411
00:26:24,700 --> 00:26:29,970
it this is essentially a product of us

412
00:26:26,800 --> 00:26:34,330
using an out-of-band signaling mechanism

413
00:26:29,970 --> 00:26:37,060
because the ICMP message is not embedded

414
00:26:34,330 --> 00:26:42,100
within the flow that that it's

415
00:26:37,060 --> 00:26:44,050
purporting to control that said like I I

416
00:26:42,100 --> 00:26:50,679
think the question here comes down to

417
00:26:44,050 --> 00:26:52,919
implementation advice like if we still

418
00:26:50,680 --> 00:26:56,790
want to path MTU discovery to work then

419
00:26:52,920 --> 00:26:59,500
out-of-band messages are of course

420
00:26:56,790 --> 00:27:01,659
necessary if you want to do it in band

421
00:26:59,500 --> 00:27:03,640
well yeah there's other mechanisms for

422
00:27:01,660 --> 00:27:07,230
doing that that are less susceptible to

423
00:27:03,640 --> 00:27:12,880
this kind of behavior um

424
00:27:07,230 --> 00:27:14,980
but unlike the case potentially in v4

425
00:27:12,880 --> 00:27:17,200
particularly with really old like

426
00:27:14,980 --> 00:27:22,420
architectures where you really could

427
00:27:17,200 --> 00:27:26,620
reduce the the MSS by a lot I think this

428
00:27:22,420 --> 00:27:29,890
is less dangerous I mean if you're using

429
00:27:26,620 --> 00:27:33,100
a huge MTU like say 65 K reducing it to

430
00:27:29,890 --> 00:27:36,640
1280 it's obviously quite detrimental to

431
00:27:33,100 --> 00:27:41,379
your performance and behavior but you

432
00:27:36,640 --> 00:27:46,170
know those are um not general Internet

433
00:27:41,380 --> 00:27:53,230
cases thank you uh-uh-uh-uh-uh people

434
00:27:46,170 --> 00:27:54,490
today 280 MTU is enough I see Eric fine

435
00:27:53,230 --> 00:27:56,500
yeah 1280

436
00:27:54,490 --> 00:27:58,090
I gave you six decision to do 1280 seems

437
00:27:56,500 --> 00:28:04,929
like a better and better idea with every

438
00:27:58,090 --> 00:28:06,970
passing presentation today so this has

439
00:28:04,929 --> 00:28:08,140
been interesting I think the original

440
00:28:06,970 --> 00:28:09,670
presentation as well about the

441
00:28:08,140 --> 00:28:11,620
fragmentation DNS tech that you

442
00:28:09,670 --> 00:28:14,110
mentioned in ryf was also very detailed

443
00:28:11,620 --> 00:28:17,290
and fascinating I think it's possible to

444
00:28:14,110 --> 00:28:19,449
do more sort of authentication if you

445
00:28:17,290 --> 00:28:22,000
will of the ICMP packet for TCP because

446
00:28:19,450 --> 00:28:23,890
you have some state tables for UDP you

447
00:28:22,000 --> 00:28:26,230
might not because it's not the socket is

448
00:28:23,890 --> 00:28:28,960
not necessarily connected it does seem

449
00:28:26,230 --> 00:28:31,059
like if a socket is connected the Linux

450
00:28:28,960 --> 00:28:33,160
kernel should bother it at least check

451
00:28:31,059 --> 00:28:37,980
the connected UDP sockets to verify that

452
00:28:33,160 --> 00:28:43,740
does it do that do you know yes is if

453
00:28:37,980 --> 00:28:48,790
Sandown knows all sent you the old UDP

454
00:28:43,740 --> 00:28:50,140
packet then possible yeah I think if

455
00:28:48,790 --> 00:28:51,879
it's if it's an unconnected socket it

456
00:28:50,140 --> 00:28:53,020
might not ever you might not maintain

457
00:28:51,880 --> 00:28:54,160
any state about that but if it's

458
00:28:53,020 --> 00:28:55,600
connected it would have it so it's

459
00:28:54,160 --> 00:28:57,370
definitely at least try to scan that

460
00:28:55,600 --> 00:28:59,530
table I think that would make sense um

461
00:28:57,370 --> 00:29:02,439
yeah this I thought was also a problem

462
00:28:59,530 --> 00:29:04,600
with Idina zeros MTU advertisement

463
00:29:02,440 --> 00:29:06,820
there's no in-band fragmentation which

464
00:29:04,600 --> 00:29:09,070
was like what eight zero eight fives

465
00:29:06,820 --> 00:29:11,800
predecessor recommended for how to write

466
00:29:09,070 --> 00:29:13,360
UDP applications but I I'm assuming the

467
00:29:11,800 --> 00:29:17,620
TC bit maybe solves all problem there

468
00:29:13,360 --> 00:29:19,800
I'm not a DNS person well actually I'm

469
00:29:17,620 --> 00:29:21,879
not really worried about TCP UDP

470
00:29:19,800 --> 00:29:23,770
fragmentation or texting Dennis because

471
00:29:21,880 --> 00:29:26,200
we do actually know how to deal with

472
00:29:23,770 --> 00:29:28,660
them we've got we can do that we can

473
00:29:26,200 --> 00:29:31,780
deal with them at the UDP at the D in

474
00:29:28,660 --> 00:29:33,910
this little if we have to you just use t

475
00:29:31,780 --> 00:29:39,820
seeking that generates the

476
00:29:33,910 --> 00:29:42,990
cryptographically secure signature over

477
00:29:39,820 --> 00:29:47,860
the UDP message and there's no way a

478
00:29:42,990 --> 00:29:49,690
reassemble packet passes that now as I

479
00:29:47,860 --> 00:29:51,520
suggested I suggest the win this was

480
00:29:49,690 --> 00:29:56,650
originally brought up that we use of

481
00:29:51,520 --> 00:30:01,350
online TC TC key to completely mitigate

482
00:29:56,650 --> 00:30:05,940
this problem there isn't it

483
00:30:01,350 --> 00:30:09,120
and looking at the way servers respond

484
00:30:05,940 --> 00:30:10,410
to unmanned t cigs I don't believe

485
00:30:09,120 --> 00:30:16,439
there's a real problem other than

486
00:30:10,410 --> 00:30:21,059
deploying that brings the that removes

487
00:30:16,440 --> 00:30:26,490
that complete thing I had Nick I'm not

488
00:30:21,059 --> 00:30:29,840
worried about DNS and fragmented UDP we

489
00:30:26,490 --> 00:30:29,840
can solve that completely

490
00:31:03,590 --> 00:31:08,520
this time they'll just tell us Chris I

491
00:31:06,240 --> 00:31:09,000
don't think anyone here is so I'm Tim

492
00:31:08,520 --> 00:31:11,490
April

493
00:31:09,000 --> 00:31:12,960
I'm from Akamai I'm also working on this

494
00:31:11,490 --> 00:31:15,860
project with a few people that are not

495
00:31:12,960 --> 00:31:19,260
from Akamai so we're proposing a new

496
00:31:15,860 --> 00:31:25,229
system that will help see changes that

497
00:31:19,260 --> 00:31:26,700
go into the DNS so the overall goal of

498
00:31:25,230 --> 00:31:28,620
this project is to try and make it so

499
00:31:26,700 --> 00:31:30,930
that anyone who wants to see changes to

500
00:31:28,620 --> 00:31:33,179
the DNS in near real-time or as close to

501
00:31:30,930 --> 00:31:34,620
real-time as we possibly can get it can

502
00:31:33,180 --> 00:31:36,840
get that data without having to go and

503
00:31:34,620 --> 00:31:41,070
pull the data yourself from the

504
00:31:36,840 --> 00:31:43,800
authorities so the problem was back in

505
00:31:41,070 --> 00:31:47,360
late last year early this year they're a

506
00:31:43,800 --> 00:31:49,530
bunch of attacks on the DNS where

507
00:31:47,360 --> 00:31:50,750
attackers would get in make changes very

508
00:31:49,530 --> 00:31:53,490
quickly and then change them back

509
00:31:50,750 --> 00:31:55,470
resulting in some queries some changes

510
00:31:53,490 --> 00:31:58,170
going unnoticed by monitoring systems

511
00:31:55,470 --> 00:32:01,490
all around the world and the nature of

512
00:31:58,170 --> 00:32:03,750
these short-term changes made it so that

513
00:32:01,490 --> 00:32:06,330
like mobile devices and things that were

514
00:32:03,750 --> 00:32:08,040
online but not actively doing and not

515
00:32:06,330 --> 00:32:12,090
actively having users attract with them

516
00:32:08,040 --> 00:32:15,030
may have sent either credentials or all

517
00:32:12,090 --> 00:32:16,320
sorts of other stuff to those to the

518
00:32:15,030 --> 00:32:22,950
target machines where the data was

519
00:32:16,320 --> 00:32:25,500
changed so the the problem was so the

520
00:32:22,950 --> 00:32:27,660
registration model that is used for the

521
00:32:25,500 --> 00:32:29,250
NS many of you probably already know

522
00:32:27,660 --> 00:32:31,260
where the registrar talks the registrar

523
00:32:29,250 --> 00:32:33,960
to the registry and then to the name

524
00:32:31,260 --> 00:32:36,800
servers the problem here was the

525
00:32:33,960 --> 00:32:39,930
attackers that tried to get this data

526
00:32:36,800 --> 00:32:43,200
either modified records at the Registrar

527
00:32:39,930 --> 00:32:46,020
without the registrants knowledge or in

528
00:32:43,200 --> 00:32:47,970
a couple cases modified had registrar

529
00:32:46,020 --> 00:32:49,470
credentials and modify them directly at

530
00:32:47,970 --> 00:32:52,410
the registry without the Registrar

531
00:32:49,470 --> 00:32:54,690
knowing resulting in takeovers that were

532
00:32:52,410 --> 00:32:58,650
essentially transparent to any of the

533
00:32:54,690 --> 00:33:01,650
people that cared about the names and

534
00:32:58,650 --> 00:33:03,540
then many people that have high-value

535
00:33:01,650 --> 00:33:05,940
names will set up all this monitoring

536
00:33:03,540 --> 00:33:08,370
stuff where you'll pull the registrar to

537
00:33:05,940 --> 00:33:10,140
make sure your names seem accurate you

538
00:33:08,370 --> 00:33:11,459
may pull the registry

539
00:33:10,140 --> 00:33:13,289
you may also pull the nameservers

540
00:33:11,460 --> 00:33:14,909
directly and see what's coming back but

541
00:33:13,289 --> 00:33:16,500
it really matters on what that polling

542
00:33:14,909 --> 00:33:20,580
window is whether you're gonna see these

543
00:33:16,500 --> 00:33:23,789
changes or not the solution we're

544
00:33:20,580 --> 00:33:27,389
proposing here is to create a open

545
00:33:23,789 --> 00:33:32,429
system kind of like wrist live is for

546
00:33:27,390 --> 00:33:34,679
BGP updates where the domain the data

547
00:33:32,429 --> 00:33:37,710
owners push data into the system and

548
00:33:34,679 --> 00:33:39,570
then it replicates the data back out to

549
00:33:37,710 --> 00:33:41,340
any of the end users that are interested

550
00:33:39,570 --> 00:33:43,889
so that could be the domain owner the

551
00:33:41,340 --> 00:33:47,428
domain users anyone that relies on those

552
00:33:43,889 --> 00:33:53,519
objects or people just monitoring for

553
00:33:47,429 --> 00:33:55,860
security reasons so they in phase one of

554
00:33:53,519 --> 00:33:57,480
what we're trying to do we're gonna try

555
00:33:55,860 --> 00:34:02,039
and get as much data from the registries

556
00:33:57,480 --> 00:34:03,630
as we can to push into this project so

557
00:34:02,039 --> 00:34:07,049
this is essentially a pub sub system

558
00:34:03,630 --> 00:34:10,530
that will send the data the main goal is

559
00:34:07,049 --> 00:34:12,060
back to the registrant so the people

560
00:34:10,530 --> 00:34:13,530
that own the domain should get updates

561
00:34:12,060 --> 00:34:17,099
about when anything changes in their

562
00:34:13,530 --> 00:34:19,859
name going forward we're also talking

563
00:34:17,099 --> 00:34:23,040
about trying to get data from either G

564
00:34:19,859 --> 00:34:26,190
TLD name servers and then possibly the

565
00:34:23,040 --> 00:34:27,839
registrar so that we can cross check if

566
00:34:26,190 --> 00:34:30,929
the registrar sent us this update and

567
00:34:27,839 --> 00:34:33,290
the registry sent us this update it that

568
00:34:30,929 --> 00:34:36,810
we know that they both know about this

569
00:34:33,290 --> 00:34:39,179
what about the registrant did they send

570
00:34:36,810 --> 00:34:41,429
any data to us if not that we might

571
00:34:39,179 --> 00:34:43,980
notify them or we may change how these

572
00:34:41,429 --> 00:34:45,570
notifications happen it also lets the

573
00:34:43,980 --> 00:34:47,790
Registrar subscribe to this that's one

574
00:34:45,570 --> 00:34:49,320
area I forgot to put on this graph where

575
00:34:47,790 --> 00:34:50,820
the registrar could receive this data so

576
00:34:49,320 --> 00:34:52,440
that when the registry makes the change

577
00:34:50,820 --> 00:34:56,460
they can notice that they actually got

578
00:34:52,440 --> 00:34:57,720
the update and then what or if they

579
00:34:56,460 --> 00:34:58,890
didn't request the change and they see

580
00:34:57,720 --> 00:35:04,560
the update they know something went

581
00:34:58,890 --> 00:35:07,020
horribly wrong so we modeled this off of

582
00:35:04,560 --> 00:35:10,320
this somewhat of the certificate

583
00:35:07,020 --> 00:35:12,780
transparency model the one major change

584
00:35:10,320 --> 00:35:14,060
that we had that we built into it was

585
00:35:12,780 --> 00:35:16,200
that we were gonna try and build some

586
00:35:14,060 --> 00:35:19,349
monitoring and alerting on top of it

587
00:35:16,200 --> 00:35:21,390
just as a way of but you'll still be

588
00:35:19,349 --> 00:35:22,790
able to get to the full log but we

589
00:35:21,390 --> 00:35:23,940
wanted to make it so that you could also

590
00:35:22,790 --> 00:35:25,740
you

591
00:35:23,940 --> 00:35:27,119
get real-time updates for whatever

592
00:35:25,740 --> 00:35:29,399
you're interested in so you're not

593
00:35:27,119 --> 00:35:31,170
having to go and crawl the entire log

594
00:35:29,400 --> 00:35:35,339
all the time just to see the changes

595
00:35:31,170 --> 00:35:37,859
that you really want to see so as I was

596
00:35:35,339 --> 00:35:40,650
saying the the data we want in is data

597
00:35:37,859 --> 00:35:46,140
from registries mostly the public zones

598
00:35:40,650 --> 00:35:47,940
that are out there where they've kind of

599
00:35:46,140 --> 00:35:50,819
like CCDs the centralized domain

600
00:35:47,940 --> 00:35:54,510
repositories service from ICANN but more

601
00:35:50,819 --> 00:35:57,359
up-to-date and faster we have no

602
00:35:54,510 --> 00:35:58,920
interest in contact information we these

603
00:35:57,359 --> 00:36:00,960
slides are from the ICANN meeting and I

604
00:35:58,920 --> 00:36:02,849
knew that was going to be a hot-button

605
00:36:00,960 --> 00:36:04,619
topic if we were wanting Whois

606
00:36:02,849 --> 00:36:08,339
information because I don't want to deal

607
00:36:04,619 --> 00:36:10,710
with gdpr and then we're hoping to

608
00:36:08,339 --> 00:36:12,359
output both our raw feed so anyone who

609
00:36:10,710 --> 00:36:14,250
wants to go and look at the data can see

610
00:36:12,359 --> 00:36:15,540
it and then the filtered updates for

611
00:36:14,250 --> 00:36:19,020
whatever you're interested in that could

612
00:36:15,540 --> 00:36:21,690
go over email SMS a web hook I don't

613
00:36:19,020 --> 00:36:23,880
really care how you get it if you want

614
00:36:21,690 --> 00:36:25,140
if you're interested in this and want a

615
00:36:23,880 --> 00:36:29,670
different data format let me know and

616
00:36:25,140 --> 00:36:31,319
we'll see what we can do so the places

617
00:36:29,670 --> 00:36:33,270
were the things we're working on now

618
00:36:31,319 --> 00:36:35,250
we're trying to create and append an

619
00:36:33,270 --> 00:36:36,960
entity for it rather than putting it

620
00:36:35,250 --> 00:36:41,790
through some corporation or some

621
00:36:36,960 --> 00:36:44,640
for-profit company so that it's a real

622
00:36:41,790 --> 00:36:46,740
open project rather than tied to some

623
00:36:44,640 --> 00:36:48,779
company and then we're actually starting

624
00:36:46,740 --> 00:36:51,419
to build the POC with a few different

625
00:36:48,780 --> 00:36:53,069
data providers that we're hoping to get

626
00:36:51,420 --> 00:36:57,109
up before the end of the year and

627
00:36:53,069 --> 00:36:57,109
actually sending data to the end users

628
00:36:58,670 --> 00:37:03,240
were mostly presenting around a whole

629
00:37:01,829 --> 00:37:04,859
bunch of different places to see if

630
00:37:03,240 --> 00:37:06,598
people are interested this if you're a

631
00:37:04,859 --> 00:37:09,180
registry and we want to provide data I'm

632
00:37:06,599 --> 00:37:10,920
happy to talk or we can you can reach us

633
00:37:09,180 --> 00:37:13,279
at the contact information at the end of

634
00:37:10,920 --> 00:37:16,230
the slide if you're a registrant and

635
00:37:13,280 --> 00:37:19,650
want to subscribe to this sort of thing

636
00:37:16,230 --> 00:37:21,089
let us know and what your use case is so

637
00:37:19,650 --> 00:37:24,839
we can make sure that we try and cover

638
00:37:21,089 --> 00:37:27,240
that if you're representing some sort of

639
00:37:24,839 --> 00:37:29,430
company and want to try and either help

640
00:37:27,240 --> 00:37:29,939
with resources or funding or something

641
00:37:29,430 --> 00:37:32,700
like that

642
00:37:29,940 --> 00:37:34,170
we're happy to talk mostly we're

643
00:37:32,700 --> 00:37:37,410
deferring a bunch of that until we get

644
00:37:34,170 --> 00:37:41,849
the organizational bits enough

645
00:37:37,410 --> 00:37:43,890
you want me to jump in now generator hi

646
00:37:41,849 --> 00:37:45,180
shared much I'm just curious

647
00:37:43,890 --> 00:37:47,279
this seems like it might be something

648
00:37:45,180 --> 00:37:49,859
that would fit in the DNS or wheelhouse

649
00:37:47,279 --> 00:37:53,519
I'm curious if there's a reason why not

650
00:37:49,859 --> 00:37:58,729
to park it there versus creating a new

651
00:37:53,519 --> 00:38:00,808
DNS monitoring organization we had some

652
00:37:58,729 --> 00:38:02,759
conversations about that I'm trying to

653
00:38:00,809 --> 00:38:09,869
remember back to why it ended up that

654
00:38:02,759 --> 00:38:12,509
way I'll have to I was just curious if

655
00:38:09,869 --> 00:38:14,069
it there is it if there is a explicit or

656
00:38:12,509 --> 00:38:16,229
implicit thought process you could say

657
00:38:14,069 --> 00:38:17,729
I'll talk to you later offline yeah it's

658
00:38:16,229 --> 00:38:19,919
like it's it's something that we will

659
00:38:17,729 --> 00:38:24,049
consider that we had considered and I'll

660
00:38:19,920 --> 00:38:24,049
see okay we actually ruled it out or not

661
00:38:24,109 --> 00:38:29,130
and then the other things that we're

662
00:38:27,299 --> 00:38:31,499
looking for is if you have experience

663
00:38:29,130 --> 00:38:34,470
with nonprofit stuff that's something

664
00:38:31,499 --> 00:38:37,709
we're actively trying to work on sorry

665
00:38:34,470 --> 00:38:40,259
good question though what's the license

666
00:38:37,710 --> 00:38:49,559
hopefully code developed we're trying to

667
00:38:40,259 --> 00:38:51,450
make it either MIT or GPL thank you to

668
00:38:49,559 --> 00:38:54,930
respond to job's reaction that wasn't my

669
00:38:51,450 --> 00:38:57,419
I don't care how it is I just wanted out

670
00:38:54,930 --> 00:38:58,950
there hi Johanna say again just a nice

671
00:38:57,420 --> 00:39:02,489
project I really like this idea this is

672
00:38:58,950 --> 00:39:03,419
this a problem we have um of course the

673
00:39:02,489 --> 00:39:04,950
problem here is not the technical

674
00:39:03,420 --> 00:39:06,749
artistic interest or the registration

675
00:39:04,950 --> 00:39:09,569
share and two people to share data with

676
00:39:06,749 --> 00:39:11,098
you you could also try maybe to build

677
00:39:09,569 --> 00:39:13,259
another system like in parallel to the

678
00:39:11,099 --> 00:39:15,239
one in which people can submit their own

679
00:39:13,259 --> 00:39:16,499
domains if you will and then you start

680
00:39:15,239 --> 00:39:17,969
tracking them from the parent and the

681
00:39:16,499 --> 00:39:19,769
child allegation to see if they match

682
00:39:17,969 --> 00:39:23,430
you know there's a change you can just

683
00:39:19,769 --> 00:39:25,348
notify the same way so tracking that

684
00:39:23,430 --> 00:39:28,710
sort of change where we're getting data

685
00:39:25,349 --> 00:39:30,349
from below the second level is also

686
00:39:28,710 --> 00:39:33,269
something very much on our radar and

687
00:39:30,349 --> 00:39:35,509
that was we had proposed going that

688
00:39:33,269 --> 00:39:37,439
method first but we actually have more

689
00:39:35,509 --> 00:39:40,829
registry interest than we thought we

690
00:39:37,440 --> 00:39:42,390
were going to where there are a handful

691
00:39:40,829 --> 00:39:45,359
of registries that are willing to hand

692
00:39:42,390 --> 00:39:47,098
us their full zone file in essentially

693
00:39:45,359 --> 00:39:50,819
the same format they send it to their

694
00:39:47,099 --> 00:39:51,130
till their name servers so we we're

695
00:39:50,819 --> 00:39:53,020
going

696
00:39:51,130 --> 00:39:55,570
try and push forward on that one so

697
00:39:53,020 --> 00:39:57,370
because that requires less and user

698
00:39:55,570 --> 00:39:59,890
interaction right now

699
00:39:57,370 --> 00:40:01,960
I mean like because I work for one TLD

700
00:39:59,890 --> 00:40:05,140
ccTLD and I'm pretty sure we couldn't

701
00:40:01,960 --> 00:40:08,260
share yes it's like we're hoping to get

702
00:40:05,140 --> 00:40:11,670
the steel these we have online first and

703
00:40:08,260 --> 00:40:14,500
then go to the next level down and then

704
00:40:11,670 --> 00:40:15,670
try and target the other cc's after that

705
00:40:14,500 --> 00:40:20,620
that's a nice project thanks a lot for

706
00:40:15,670 --> 00:40:24,040
Dan is dr. Montgomery's there in any

707
00:40:20,620 --> 00:40:28,240
notion of limiting the scope of what you

708
00:40:24,040 --> 00:40:30,130
can subscribe to monitor some sense your

709
00:40:28,240 --> 00:40:34,299
resources are can i subscribe to bonnet

710
00:40:30,130 --> 00:40:35,890
or any and all resources i we we were

711
00:40:34,300 --> 00:40:40,020
planning to try and make it so you can

712
00:40:35,890 --> 00:40:42,370
subscribe to whatever you'd like to wear

713
00:40:40,020 --> 00:40:45,009
the primary reason for that is if you

714
00:40:42,370 --> 00:40:47,890
look at trying to remember someone from

715
00:40:45,010 --> 00:40:50,200
Verisign may be able to correct my the

716
00:40:47,890 --> 00:40:52,930
domain name but I think it's trans -

717
00:40:50,200 --> 00:40:54,430
trust Barris on labs comm where you can

718
00:40:52,930 --> 00:40:58,180
see all of the name servers that your

719
00:40:54,430 --> 00:41:00,609
delegations rely on so like if you're if

720
00:40:58,180 --> 00:41:02,230
you're into a org you'll see that you

721
00:41:00,610 --> 00:41:04,540
have the door name servers you have the

722
00:41:02,230 --> 00:41:07,750
all the affiliates name sets and then

723
00:41:04,540 --> 00:41:10,540
you have the dotnet from Verisign net

724
00:41:07,750 --> 00:41:12,430
and common Verisign also rely on that so

725
00:41:10,540 --> 00:41:14,529
you'd probably want to know any update

726
00:41:12,430 --> 00:41:15,940
if you're really interested in no name

727
00:41:14,530 --> 00:41:19,030
changes you want to know all of the

728
00:41:15,940 --> 00:41:20,230
updates to any of those names and being

729
00:41:19,030 --> 00:41:24,810
able to subscribe to all of that and

730
00:41:20,230 --> 00:41:27,610
then like I'm a if I'm a customer of

731
00:41:24,810 --> 00:41:29,049
like if my mail is hosted on Google I

732
00:41:27,610 --> 00:41:31,060
probably want to know if any of their

733
00:41:29,050 --> 00:41:36,750
names change so that I know if my mail

734
00:41:31,060 --> 00:41:36,750
is impacted things like that

735
00:41:41,990 --> 00:41:47,160
ready bouche um the DMS is pretty big so

736
00:41:45,510 --> 00:41:49,020
I think the subscribers you're gonna

737
00:41:47,160 --> 00:41:53,129
want to deal with scoping in many ways

738
00:41:49,020 --> 00:41:58,100
um but could you sometime somewhere

739
00:41:53,130 --> 00:42:03,480
posts a URL for those of us who do run

740
00:41:58,100 --> 00:42:06,230
cctlds with an ICD it's page on how to

741
00:42:03,480 --> 00:42:11,400
push yeah

742
00:42:06,230 --> 00:42:16,620
there's your URL I didn't realize I only

743
00:42:11,400 --> 00:42:20,330
have one side left so I'll send it out

744
00:42:16,620 --> 00:42:22,890
to the cie PG list a little bit with the

745
00:42:20,330 --> 00:42:24,210
it's right now it's a very basic website

746
00:42:22,890 --> 00:42:25,560
it just has the quick description of

747
00:42:24,210 --> 00:42:27,840
what we're doing and then we have a form

748
00:42:25,560 --> 00:42:30,570
that you can go and say I'm a registry

749
00:42:27,840 --> 00:42:31,860
and I'd like to send data we don't have

750
00:42:30,570 --> 00:42:35,720
anything like we don't have any of the

751
00:42:31,860 --> 00:42:43,440
infrastructure deployed yet once we do I

752
00:42:35,720 --> 00:42:45,720
will come knocking will do a question

753
00:42:43,440 --> 00:42:49,800
for you actually is what's the easiest

754
00:42:45,720 --> 00:42:54,980
way for you to send me data I will note

755
00:42:49,800 --> 00:42:54,980
that and set up instructions Thank You

756
00:42:55,670 --> 00:43:00,480
Lucille in responding to your question

757
00:42:58,020 --> 00:43:02,790
about setting up nonprofits that's

758
00:43:00,480 --> 00:43:04,680
actually a relatively long and

759
00:43:02,790 --> 00:43:07,640
heavyweight process have you looked at

760
00:43:04,680 --> 00:43:10,560
the Linux Foundation sponsored projects

761
00:43:07,640 --> 00:43:13,350
we have not I you might want to do that

762
00:43:10,560 --> 00:43:15,450
they they take a lot of the pain out of

763
00:43:13,350 --> 00:43:18,680
it and those things like let's encrypt

764
00:43:15,450 --> 00:43:23,310
so you might be a good fit for them okay

765
00:43:18,680 --> 00:43:26,940
keep that in mind thank you any other

766
00:43:23,310 --> 00:43:29,390
questions I'm here all week if you want

767
00:43:26,940 --> 00:43:29,390
to get trained later

768
00:43:36,720 --> 00:43:44,410
we're down to just the last official

769
00:43:39,000 --> 00:43:52,750
presenter oh yeah where are your slides

770
00:43:44,410 --> 00:43:55,990
I know you did I sure did it wait a

771
00:43:52,750 --> 00:43:57,370
minute so yeah what we needed you

772
00:43:55,990 --> 00:44:00,490
instead of Randy where we can do Randy

773
00:43:57,370 --> 00:44:03,540
than you Oh Randy Europe I'll figure

774
00:44:00,490 --> 00:44:03,540
this out while we do that

775
00:44:12,900 --> 00:44:22,720
miss Lehman gallery speaking so hi I'm

776
00:44:19,750 --> 00:44:27,369
Randy from a J researching from our

777
00:44:22,720 --> 00:44:31,839
kissing um how many people here remember

778
00:44:27,369 --> 00:44:35,950
in mid-april DNS attack miss called sea

779
00:44:31,839 --> 00:44:40,990
turtle please this is scary

780
00:44:35,950 --> 00:44:45,430
this room's half DNS people come on okay

781
00:44:40,990 --> 00:44:51,640
so what happened was DNS registration

782
00:44:45,430 --> 00:44:56,769
systems are hierarchy and hierarchy is

783
00:44:51,640 --> 00:44:58,990
as strong as its weakest link bad actors

784
00:44:56,769 --> 00:45:05,519
were discovered by I think it was Cisco

785
00:44:58,990 --> 00:45:15,459
talus group to be breaking links at the

786
00:45:05,519 --> 00:45:18,569
ccTLD and other TLD levels and forging

787
00:45:15,460 --> 00:45:22,450
and so on and so forth

788
00:45:18,569 --> 00:45:24,009
no this is not a talk about the DNS but

789
00:45:22,450 --> 00:45:29,439
it's a talk about the weakness of

790
00:45:24,009 --> 00:45:33,279
hierarchy and we have another hierarchy

791
00:45:29,440 --> 00:45:36,490
which I did spend some time in luckily

792
00:45:33,279 --> 00:45:37,720
yob who invented it is now promoting it

793
00:45:36,490 --> 00:45:43,990
much better than I could and I'm

794
00:45:37,720 --> 00:45:47,410
relieved but that's the rpki and it is

795
00:45:43,990 --> 00:45:51,729
has the same weaknesses as the DNS in

796
00:45:47,410 --> 00:45:54,848
terms of a hierarchy it has the same

797
00:45:51,730 --> 00:45:58,690
security model for the small deployment

798
00:45:54,849 --> 00:46:03,339
of DNS which is object security as

799
00:45:58,690 --> 00:46:06,880
opposed to transport security okay so if

800
00:46:03,339 --> 00:46:12,220
you can break things up chain you've got

801
00:46:06,880 --> 00:46:16,150
it and it has one the way it is

802
00:46:12,220 --> 00:46:20,430
currently deployed it has one wonderful

803
00:46:16,150 --> 00:46:25,660
additional brilliant weakness which is

804
00:46:20,430 --> 00:46:28,270
all five of the registry

805
00:46:25,660 --> 00:46:34,509
at the root of the registry hierarchies

806
00:46:28,270 --> 00:46:40,990
are authoritative for the route that is

807
00:46:34,510 --> 00:46:47,980
as if d dot de was also authoritative

808
00:46:40,990 --> 00:46:54,180
for dot all five are IRS claimed

809
00:46:47,980 --> 00:46:59,520
authority over 0/0 this is brilliant

810
00:46:54,180 --> 00:47:03,308
okay in the security universe

811
00:46:59,520 --> 00:47:05,890
the question isn't when this will be

812
00:47:03,309 --> 00:47:11,200
attacked if this will be attacked it is

813
00:47:05,890 --> 00:47:13,328
when this will be attacked okay we're

814
00:47:11,200 --> 00:47:15,009
starting more and more thank you very

815
00:47:13,329 --> 00:47:17,680
much for the people who are deploying

816
00:47:15,010 --> 00:47:20,589
and for people like you who are putting

817
00:47:17,680 --> 00:47:25,839
a lot of effort between in the getting

818
00:47:20,589 --> 00:47:29,589
deployment out there we need to get the

819
00:47:25,839 --> 00:47:32,578
security of the system and the

820
00:47:29,589 --> 00:47:37,210
operational reliability cleaned up

821
00:47:32,579 --> 00:47:39,940
before the disasters happen not after

822
00:47:37,210 --> 00:47:44,020
the first disaster happens and it will

823
00:47:39,940 --> 00:47:47,319
happen so some of the things we can do

824
00:47:44,020 --> 00:47:50,288
are pretty obvious and getting the

825
00:47:47,319 --> 00:47:56,049
registries not to be authoritative for

826
00:47:50,289 --> 00:48:01,539
0/0 it's just one small step rudiger are

827
00:47:56,049 --> 00:48:04,359
you ready to leak to the mine why didn't

828
00:48:01,539 --> 00:48:08,650
we talk about this two years ago because

829
00:48:04,359 --> 00:48:11,788
then it wasn't this way because I aren't

830
00:48:08,650 --> 00:48:14,230
usually used to you being snarky

831
00:48:11,789 --> 00:48:16,180
Ruettiger and I did talk about it two

832
00:48:14,230 --> 00:48:19,779
years ago as his point and we didn't

833
00:48:16,180 --> 00:48:22,779
succeed I'm trying to explain we tried

834
00:48:19,779 --> 00:48:25,960
to talk about it from an authority angle

835
00:48:22,779 --> 00:48:29,279
then and it was a bad mom it's a

836
00:48:25,960 --> 00:48:33,690
security problem

837
00:48:29,279 --> 00:48:33,690
it's not just an authority problem

838
00:48:33,839 --> 00:48:37,140
that's it

839
00:48:42,680 --> 00:48:52,470
nobody except for Ruettiger

840
00:48:44,640 --> 00:48:58,950
okay okay Giovanni I found your slides I

841
00:48:52,470 --> 00:49:01,279
found them but I have that shoe Brandi's

842
00:48:58,950 --> 00:49:01,279
time's up

843
00:49:16,810 --> 00:49:28,100
Yeah right so I'm standing here between

844
00:49:26,840 --> 00:49:30,380
you and lunch but if it's already

845
00:49:28,100 --> 00:49:31,779
actually for death so good morning

846
00:49:30,380 --> 00:49:34,700
everybody

847
00:49:31,780 --> 00:49:36,680
so this presentation is actually a work

848
00:49:34,700 --> 00:49:39,460
that we did together with some

849
00:49:36,680 --> 00:49:42,470
colleagues at ISI and also at the UPF

850
00:49:39,460 --> 00:49:47,840
this topic that spits usually splits the

851
00:49:42,470 --> 00:49:49,189
crowd the details on DNS so what

852
00:49:47,840 --> 00:49:52,190
happened like we had a study last year

853
00:49:49,190 --> 00:49:55,400
on IMC on details and denial of service

854
00:49:52,190 --> 00:49:58,040
attacks and we saw we show how the

855
00:49:55,400 --> 00:50:00,080
longer TTL protect users when there's

856
00:49:58,040 --> 00:50:02,330
denial of service attacks and on the

857
00:50:00,080 --> 00:50:04,520
authoritative servers and I present that

858
00:50:02,330 --> 00:50:06,140
to the ops folks at this idea that I now

859
00:50:04,520 --> 00:50:07,490
and they were like all right so it's

860
00:50:06,140 --> 00:50:10,040
nice to know that so which details

861
00:50:07,490 --> 00:50:11,569
should I use I was like oops that's a

862
00:50:10,040 --> 00:50:13,130
different question I haven't looked into

863
00:50:11,570 --> 00:50:16,430
that so that's what he's trying to do

864
00:50:13,130 --> 00:50:18,710
here this is that has just been except

865
00:50:16,430 --> 00:50:21,830
last Thursday right for publication in

866
00:50:18,710 --> 00:50:23,840
IMC this year in Amsterdam um which is

867
00:50:21,830 --> 00:50:26,150
perfect timing for this meeting we have

868
00:50:23,840 --> 00:50:29,570
put online the submission version at

869
00:50:26,150 --> 00:50:31,160
this URL if you're interested we're

870
00:50:29,570 --> 00:50:32,720
gonna of course created a revised

871
00:50:31,160 --> 00:50:35,180
version with the comments that we're

872
00:50:32,720 --> 00:50:39,109
gonna get last week and that will follow

873
00:50:35,180 --> 00:50:41,210
will be online as well now kesshun is

874
00:50:39,110 --> 00:50:44,330
the cornerstone of DNS performance we

875
00:50:41,210 --> 00:50:46,730
know like a 15 millisecond query

876
00:50:44,330 --> 00:50:48,350
response time is real good but 1

877
00:50:46,730 --> 00:50:51,440
milliseconds far better coming from a

878
00:50:48,350 --> 00:50:53,630
cache hit and as I said we did a study

879
00:50:51,440 --> 00:50:56,240
last year we'll look how caching protect

880
00:50:53,630 --> 00:50:59,660
users from alternative service attacks

881
00:50:56,240 --> 00:51:02,600
on DDoS attacks on out servers and the

882
00:50:59,660 --> 00:51:06,230
thing with TTL and DNS and caching says

883
00:51:02,600 --> 00:51:08,360
the DNS detail set at the zones they can

884
00:51:06,230 --> 00:51:11,150
actually control cache and duration at

885
00:51:08,360 --> 00:51:13,130
resolver sized site so it actually

886
00:51:11,150 --> 00:51:15,590
affects latency and resilience

887
00:51:13,130 --> 00:51:18,140
indirectly actually very directly and

888
00:51:15,590 --> 00:51:20,150
there hasn't been a lot of evaluation on

889
00:51:18,140 --> 00:51:22,339
the topic I'm just mentioned here two

890
00:51:20,150 --> 00:51:25,219
studies there's some more on

891
00:51:22,339 --> 00:51:27,680
paper we mentioned and no research

892
00:51:25,219 --> 00:51:29,299
actually provides recommendations or in

893
00:51:27,680 --> 00:51:31,549
the context of that ETF I should you use

894
00:51:29,299 --> 00:51:33,619
the word considerations it's less

895
00:51:31,549 --> 00:51:39,259
controversial here on which vendors are

896
00:51:33,619 --> 00:51:41,239
good for TTLs because it's very it's a

897
00:51:39,259 --> 00:51:42,799
very challenge it's a big challenge is

898
00:51:41,239 --> 00:51:44,869
very challenge this topic to determine

899
00:51:42,799 --> 00:51:46,459
what good vendors are because there are

900
00:51:44,869 --> 00:51:47,660
trade-offs intrinsic trade-offs in the

901
00:51:46,459 --> 00:51:50,808
choices of TTLs

902
00:51:47,660 --> 00:51:53,538
short TTL allows for operation Ops teams

903
00:51:50,809 --> 00:51:56,199
to change quickly services along details

904
00:51:53,539 --> 00:51:59,390
with those latencies and service load so

905
00:51:56,199 --> 00:52:01,130
given that and but other sort of details

906
00:51:59,390 --> 00:52:02,719
is no surprise there's no consensus so

907
00:52:01,130 --> 00:52:05,119
let's try to fill this gap into this

908
00:52:02,719 --> 00:52:08,209
study and we break this down into three

909
00:52:05,119 --> 00:52:11,900
different research questions the first

910
00:52:08,209 --> 00:52:13,999
one we ask we need to know if resolvers

911
00:52:11,900 --> 00:52:16,219
in practice in in the wire they're

912
00:52:13,999 --> 00:52:18,828
actually parent or child centric I'm

913
00:52:16,219 --> 00:52:20,719
gonna explain this in more details but

914
00:52:18,829 --> 00:52:22,489
you can get some information either from

915
00:52:20,719 --> 00:52:24,109
parent or child depend on how your zone

916
00:52:22,489 --> 00:52:25,939
is configured and they may have

917
00:52:24,109 --> 00:52:28,009
different TTL values so we wanted to be

918
00:52:25,939 --> 00:52:31,009
sure who is actually in charge of the

919
00:52:28,009 --> 00:52:33,199
TTL s and the second question we wanted

920
00:52:31,009 --> 00:52:34,910
to know it's like how the different

921
00:52:33,199 --> 00:52:38,859
parts of the fully qualified domain name

922
00:52:34,910 --> 00:52:41,598
changed effective TTL life time for

923
00:52:38,859 --> 00:52:43,578
example let's say you have your DNS

924
00:52:41,599 --> 00:52:45,920
provider has a use a certain DNS

925
00:52:43,579 --> 00:52:47,869
provider to gives you the NS records

926
00:52:45,920 --> 00:52:49,999
details for a domain for an hour what

927
00:52:47,869 --> 00:52:51,319
happens if you are on a record is like

928
00:52:49,999 --> 00:52:55,069
two hours and how those things interact

929
00:52:51,319 --> 00:52:56,900
with each other and the third question

930
00:52:55,069 --> 00:52:58,329
that we address in this paper we wanted

931
00:52:56,900 --> 00:53:01,849
to know right we do some background work

932
00:52:58,329 --> 00:53:03,589
some in one in two to see how the

933
00:53:01,849 --> 00:53:05,900
resolvers choose these details and

934
00:53:03,589 --> 00:53:07,308
firmware but then we wanted to know how

935
00:53:05,900 --> 00:53:10,249
actually they are used in a while how

936
00:53:07,309 --> 00:53:11,719
folks are deploying that we know that

937
00:53:10,249 --> 00:53:13,279
our roots are very conservative and they

938
00:53:11,719 --> 00:53:15,170
have to be for resilience so they have

939
00:53:13,279 --> 00:53:17,420
longer details but see the ends on the

940
00:53:15,170 --> 00:53:19,579
other hand they usually have shorter

941
00:53:17,420 --> 00:53:22,099
details because they want to change

942
00:53:19,579 --> 00:53:23,719
things very quickly in our grow here she

943
00:53:22,099 --> 00:53:27,279
provides recommendations or

944
00:53:23,719 --> 00:53:30,170
considerations and choosing those values

945
00:53:27,279 --> 00:53:35,209
so let's start here the first questions

946
00:53:30,170 --> 00:53:36,200
resolver centricity like if you let me

947
00:53:35,209 --> 00:53:39,799
see let me get let's get

948
00:53:36,200 --> 00:53:42,049
one TLD that's al from Chile if would if

949
00:53:39,799 --> 00:53:44,030
you would ask for the NS record of that

950
00:53:42,049 --> 00:53:45,349
CL phone one other root servers I just

951
00:53:44,030 --> 00:53:48,049
speak a word here but it doesn't matter

952
00:53:45,349 --> 00:53:49,790
kiss all the same if you ask for the NS

953
00:53:48,049 --> 00:53:53,180
record you're gonna get a response that

954
00:53:49,790 --> 00:53:55,279
say is that with a detail of this value

955
00:53:53,180 --> 00:53:58,910
here which is like two days and they

956
00:53:55,280 --> 00:54:00,920
don't within that response that value

957
00:53:58,910 --> 00:54:03,490
would come in this alternative section

958
00:54:00,920 --> 00:54:06,349
authorities section part of the response

959
00:54:03,490 --> 00:54:08,959
now you can also ask for the same

960
00:54:06,349 --> 00:54:10,819
question and type instead of the roots

961
00:54:08,960 --> 00:54:13,280
you can ask for directly to the

962
00:54:10,819 --> 00:54:16,308
authoritative surveillance itself aid

963
00:54:13,280 --> 00:54:18,109
that Nicosia one of them and then you're

964
00:54:16,309 --> 00:54:20,329
gonna get the same answer but with a

965
00:54:18,109 --> 00:54:23,119
different detail here or one hour and

966
00:54:20,329 --> 00:54:24,500
that's the child value so you see

967
00:54:23,119 --> 00:54:27,680
there's a difference in here for two

968
00:54:24,500 --> 00:54:29,329
days in one hour and this one they the

969
00:54:27,680 --> 00:54:32,328
response actually of this one comes

970
00:54:29,329 --> 00:54:34,700
actually as this an authoritative answer

971
00:54:32,329 --> 00:54:36,290
and comes within the answer field of

972
00:54:34,700 --> 00:54:39,379
their response so it's quite a confusing

973
00:54:36,290 --> 00:54:41,509
on DNS like a DNS response may have up

974
00:54:39,380 --> 00:54:44,780
to three parts answer authority and

975
00:54:41,510 --> 00:54:46,790
additional so that's why this one here

976
00:54:44,780 --> 00:54:48,319
comes in the answer and it has even a

977
00:54:46,790 --> 00:54:51,440
flag it just says that is actually the

978
00:54:48,319 --> 00:54:53,900
real authoritative so we have like two

979
00:54:51,440 --> 00:54:55,490
different choices there's an RFC to say

980
00:54:53,900 --> 00:54:57,410
that they should resolve should trust

981
00:54:55,490 --> 00:54:59,118
this one but do you know how resolvers

982
00:54:57,410 --> 00:55:00,649
are in the wild there's a lot of

983
00:54:59,119 --> 00:55:02,839
resolvers different versions of code you

984
00:55:00,650 --> 00:55:06,530
cannot be really one person sure if you

985
00:55:02,839 --> 00:55:09,650
can obey to that so to investigate that

986
00:55:06,530 --> 00:55:13,910
we chose that your UI which is from

987
00:55:09,650 --> 00:55:15,859
Uruguay why because well at the roots as

988
00:55:13,910 --> 00:55:18,529
every single TLD they had a detail in

989
00:55:15,859 --> 00:55:21,259
today's but the time of this analysis

990
00:55:18,530 --> 00:55:24,890
they had an NS record TTL with a child

991
00:55:21,260 --> 00:55:26,750
of 300 seconds in a record for 120

992
00:55:24,890 --> 00:55:28,940
seconds so this vendors are very nice

993
00:55:26,750 --> 00:55:32,720
video sorry for my experiments are very

994
00:55:28,940 --> 00:55:34,630
nice but there but not for operations

995
00:55:32,720 --> 00:55:37,939
they changed I let me get to that later

996
00:55:34,630 --> 00:55:39,470
they change those values but for if

997
00:55:37,940 --> 00:55:40,880
you're losing ripe Atlas that which I

998
00:55:39,470 --> 00:55:42,439
use all the time it takes guys phone

999
00:55:40,880 --> 00:55:45,020
right and those again to for this

1000
00:55:42,440 --> 00:55:46,460
platform which is amazing if you use it

1001
00:55:45,020 --> 00:55:48,319
all the time and if you usually would

1002
00:55:46,460 --> 00:55:49,880
measure every 10 minutes so if you run

1003
00:55:48,319 --> 00:55:52,850
queries tools those

1004
00:55:49,880 --> 00:55:54,530
records every 10 minutes every time as

1005
00:55:52,850 --> 00:55:56,600
you do it you know you get ahead get

1006
00:55:54,530 --> 00:56:00,110
against code cache because it gonna be

1007
00:55:56,600 --> 00:56:02,150
expired by then now so we did a bunch of

1008
00:56:00,110 --> 00:56:05,840
measurements I'm gonna cover two of them

1009
00:56:02,150 --> 00:56:08,420
here the rest is in the paper we query

1010
00:56:05,840 --> 00:56:11,270
for NS queries for NS records for that

1011
00:56:08,420 --> 00:56:13,400
year by the a record with one of those

1012
00:56:11,270 --> 00:56:15,170
rating themselves for Uruguay and it

1013
00:56:13,400 --> 00:56:18,890
just asked the probes which were like

1014
00:56:15,170 --> 00:56:20,360
roughly 15,000 of them 16,000 to ask

1015
00:56:18,890 --> 00:56:22,250
their local resolver to get those

1016
00:56:20,360 --> 00:56:23,360
records we don't know and we don't know

1017
00:56:22,250 --> 00:56:26,690
where the gonna kid could be coming from

1018
00:56:23,360 --> 00:56:29,000
and that's exactly what we want to know

1019
00:56:26,690 --> 00:56:31,370
so how we want to know how do you know

1020
00:56:29,000 --> 00:56:32,540
if the answers are actually the results

1021
00:56:31,370 --> 00:56:34,910
are getting the answers from the parents

1022
00:56:32,540 --> 00:56:36,529
are from the child we just analyze the

1023
00:56:34,910 --> 00:56:40,250
distribution of the details that come

1024
00:56:36,530 --> 00:56:42,290
back so remember that at the parent the

1025
00:56:40,250 --> 00:56:45,500
root sets the TTL their trade data for

1026
00:56:42,290 --> 00:56:48,850
any TLD to two days but you see here the

1027
00:56:45,500 --> 00:56:51,260
CDF we see here to let's say 60% or

1028
00:56:48,850 --> 00:56:55,040
there's a huge spike here that most

1029
00:56:51,260 --> 00:56:57,230
queries but for the a record they come

1030
00:56:55,040 --> 00:56:59,509
back with a TTL of two hundred twenty

1031
00:56:57,230 --> 00:57:01,340
seconds meaning that most resolvers are

1032
00:56:59,510 --> 00:57:04,310
actually trusting the child value not

1033
00:57:01,340 --> 00:57:07,790
one set by the roots and the same

1034
00:57:04,310 --> 00:57:10,009
applies to the NS record so what we see

1035
00:57:07,790 --> 00:57:12,410
here it's that most reserves I child

1036
00:57:10,010 --> 00:57:14,810
sank with centric preferring the details

1037
00:57:12,410 --> 00:57:18,049
of the authoritative answers and as

1038
00:57:14,810 --> 00:57:19,820
should be there's an RFC for that 2181

1039
00:57:18,050 --> 00:57:21,320
I'm not sure filters one of the outers

1040
00:57:19,820 --> 00:57:25,460
here in the list I think is brandy is

1041
00:57:21,320 --> 00:57:27,680
one of those maybe in section five for

1042
00:57:25,460 --> 00:57:31,940
that one they specified this order that

1043
00:57:27,680 --> 00:57:33,680
they should have just records so with

1044
00:57:31,940 --> 00:57:34,760
the to order experiments I'm not gonna

1045
00:57:33,680 --> 00:57:37,250
cover because it's kind of a repetition

1046
00:57:34,760 --> 00:57:39,260
but we need to double check that and we

1047
00:57:37,250 --> 00:57:40,790
use we say I said well let's use another

1048
00:57:39,260 --> 00:57:42,560
domain name that's using Google calm

1049
00:57:40,790 --> 00:57:44,540
because those are TLD so maybe things

1050
00:57:42,560 --> 00:57:46,460
will be different but no those results

1051
00:57:44,540 --> 00:57:47,600
are the same and we analyzed passive

1052
00:57:46,460 --> 00:57:50,990
data and then I know as well

1053
00:57:47,600 --> 00:57:52,339
so most resolvers I child-centric and I

1054
00:57:50,990 --> 00:57:54,799
think that's a good thing because that

1055
00:57:52,340 --> 00:57:59,120
gives the power to the whoever actually

1056
00:57:54,800 --> 00:58:02,180
all the domains enough the parent now

1057
00:57:59,120 --> 00:58:03,930
second question how different parts of

1058
00:58:02,180 --> 00:58:06,149
the fully qualified domain name

1059
00:58:03,930 --> 00:58:10,470
change detail lifetime how look how long

1060
00:58:06,150 --> 00:58:11,940
he gets in caching uh so let me explain

1061
00:58:10,470 --> 00:58:14,910
this is a little more tricky but let's

1062
00:58:11,940 --> 00:58:16,650
let me try to break this down so we we

1063
00:58:14,910 --> 00:58:18,538
have this case domain cache test of math

1064
00:58:16,650 --> 00:58:21,180
we use for testing and I create a

1065
00:58:18,539 --> 00:58:23,519
subsonic outs of that cache test net and

1066
00:58:21,180 --> 00:58:27,240
I configure this domain in two different

1067
00:58:23,519 --> 00:58:29,758
scenarios the first one we use as the NS

1068
00:58:27,240 --> 00:58:32,249
record for sublet cache test that net I

1069
00:58:29,759 --> 00:58:33,720
used this name server and the second

1070
00:58:32,249 --> 00:58:36,419
scenario out of bailiwick we use

1071
00:58:33,720 --> 00:58:38,009
dishonor 1 in Bailey week out of beta

1072
00:58:36,420 --> 00:58:40,019
wicket for enough meaner in beta week

1073
00:58:38,009 --> 00:58:42,509
means that your name servers is under

1074
00:58:40,019 --> 00:58:44,308
the same zone in this case of the cache

1075
00:58:42,509 --> 00:58:46,109
test of Nats so it's part of this and

1076
00:58:44,309 --> 00:58:51,180
out of beta wickets means in this is a

1077
00:58:46,109 --> 00:58:54,058
difference on and we set we set

1078
00:58:51,180 --> 00:58:56,910
intentionally to set a detail of the NS

1079
00:58:54,059 --> 00:58:59,609
record to be shorter than the a one hour

1080
00:58:56,910 --> 00:59:02,879
versus two hours and we wanted to know

1081
00:58:59,609 --> 00:59:03,359
what happens with the answers in the

1082
00:59:02,880 --> 00:59:06,150
cashy

1083
00:59:03,359 --> 00:59:08,609
once the NS record expires does the a is

1084
00:59:06,150 --> 00:59:10,440
gonna expire as well so we wanted to

1085
00:59:08,609 --> 00:59:12,808
know how this different components of

1086
00:59:10,440 --> 00:59:17,339
DNS interact to give answers to the

1087
00:59:12,809 --> 00:59:19,559
users so let's so that's pretty much how

1088
00:59:17,339 --> 00:59:21,509
it looks like our setup and the dot Nats

1089
00:59:19,559 --> 00:59:24,269
on that's what we have there the circuit

1090
00:59:21,509 --> 00:59:26,519
details and the cache test that this is

1091
00:59:24,269 --> 00:59:29,279
I also placed a time net this one's here

1092
00:59:26,519 --> 00:59:30,868
one hour and an hour and in our zone

1093
00:59:29,279 --> 00:59:33,180
that we actually take care of we set the

1094
00:59:30,869 --> 00:59:35,970
NS to one hour the a record to two hours

1095
00:59:33,180 --> 00:59:37,470
and the trick is we start the

1096
00:59:35,970 --> 00:59:40,140
measurements every 10 minutes with ripe

1097
00:59:37,470 --> 00:59:42,868
again 15,000 vantage points and at time

1098
00:59:40,140 --> 00:59:45,089
equals to 9 we read direct we just

1099
00:59:42,869 --> 00:59:48,480
remember our authoritative nameserver

1100
00:59:45,089 --> 00:59:49,589
and in this way and we configured a new

1101
00:59:48,480 --> 00:59:52,049
server to give you a different answer

1102
00:59:49,589 --> 00:59:53,339
why I'm doing this fame because I wanted

1103
00:59:52,049 --> 00:59:54,989
to know later where the answer came from

1104
00:59:53,339 --> 00:59:56,160
if it's the new or the old because

1105
00:59:54,989 --> 00:59:57,960
that's the thing I wanted to evaluate if

1106
00:59:56,160 --> 01:00:02,249
they went to the if they're respecting

1107
00:59:57,960 --> 01:00:04,499
the TTL or not and I actually asked my

1108
01:00:02,249 --> 01:00:06,328
reservoir should ask quad-a queries they

1109
01:00:04,499 --> 01:00:08,308
don't matter but like oh they're not

1110
01:00:06,329 --> 01:00:10,529
that not asking directly those records I

1111
01:00:08,309 --> 01:00:13,109
me asking records at under that tree and

1112
01:00:10,529 --> 01:00:16,589
I use those vantage points to write

1113
01:00:13,109 --> 01:00:17,700
office so these are the two figures the

1114
01:00:16,589 --> 01:00:20,400
first one here is for

1115
01:00:17,700 --> 01:00:22,730
in Bailiwick experiment this one is for

1116
01:00:20,400 --> 01:00:25,680
auto bailiwick we see let me start here

1117
01:00:22,730 --> 01:00:28,500
every bar here it shows a time being of

1118
01:00:25,680 --> 01:00:30,660
10 minutes and what we do in both

1119
01:00:28,500 --> 01:00:33,510
figures at that 10 the time equals to 0

1120
01:00:30,660 --> 01:00:35,790
from 0 to 10 we allow other probes to

1121
01:00:33,510 --> 01:00:37,290
ask for this quad a query and other

1122
01:00:35,790 --> 01:00:38,910
answers comes from the original server

1123
01:00:37,290 --> 01:00:42,180
that's the ones configuring this honor I

1124
01:00:38,910 --> 01:00:44,009
think is fine both cases here at time

1125
01:00:42,180 --> 01:00:46,230
equals to 9 when you see this arrow here

1126
01:00:44,010 --> 01:00:47,220
in both cases we're in number the

1127
01:00:46,230 --> 01:00:51,299
authoritative nameserver

1128
01:00:47,220 --> 01:00:53,368
and we see what happens so for this time

1129
01:00:51,299 --> 01:00:55,859
period here this color here in both

1130
01:00:53,369 --> 01:00:56,309
figures we see the same behavior what is

1131
01:00:55,859 --> 01:00:59,670
that

1132
01:00:56,309 --> 01:01:01,260
people that knew they're having cash the

1133
01:00:59,670 --> 01:01:02,940
values of these previous records they

1134
01:01:01,260 --> 01:01:06,599
still keep on going that because both of

1135
01:01:02,940 --> 01:01:08,280
them are still valid both a and ns so

1136
01:01:06,599 --> 01:01:10,079
nothing really new here people that

1137
01:01:08,280 --> 01:01:11,790
didn't know about that they go to the

1138
01:01:10,079 --> 01:01:14,250
new server because that's the one that's

1139
01:01:11,790 --> 01:01:17,490
currently available now that's when it

1140
01:01:14,250 --> 01:01:19,890
gets interesting here here only the TTL

1141
01:01:17,490 --> 01:01:22,500
of the NS record expires because they

1142
01:01:19,890 --> 01:01:24,629
had to detail when one hour so once an

1143
01:01:22,500 --> 01:01:28,020
expires a resolver has to refetch again

1144
01:01:24,630 --> 01:01:30,540
that information and we see here for the

1145
01:01:28,020 --> 01:01:33,390
in bailiwick experiment most queries are

1146
01:01:30,540 --> 01:01:36,569
coming actually from a new server but a

1147
01:01:33,390 --> 01:01:39,270
very different scenario here from the

1148
01:01:36,569 --> 01:01:40,650
out of beta week and most clear answers

1149
01:01:39,270 --> 01:01:42,599
come actually from the old servers so

1150
01:01:40,650 --> 01:01:45,480
what is actually going on in both cases

1151
01:01:42,599 --> 01:01:47,970
the a records still in theory is a still

1152
01:01:45,480 --> 01:01:50,400
valid in cache so what is actually going

1153
01:01:47,970 --> 01:01:52,200
on and after that some of them have to

1154
01:01:50,400 --> 01:01:54,059
both expire in the second error here

1155
01:01:52,200 --> 01:01:55,500
some of them will keep going to the

1156
01:01:54,059 --> 01:01:57,930
original this is a stick resolvers these

1157
01:01:55,500 --> 01:01:59,250
are could also be sticky but I have to

1158
01:01:57,930 --> 01:02:01,500
drill down this once because this is

1159
01:01:59,250 --> 01:02:03,180
very surprising for me by the way but

1160
01:02:01,500 --> 01:02:05,520
it's just I don't think all of them are

1161
01:02:03,180 --> 01:02:07,230
sticky but the difference is like and

1162
01:02:05,520 --> 01:02:09,720
that's important thing here

1163
01:02:07,230 --> 01:02:11,819
once your NS record expires and a

1164
01:02:09,720 --> 01:02:13,169
resolver is gonna get that this is just

1165
01:02:11,819 --> 01:02:16,500
an example from in bailiwick

1166
01:02:13,170 --> 01:02:18,950
configuration if your reserve your

1167
01:02:16,500 --> 01:02:21,960
reserve is gonna give this answer to you

1168
01:02:18,950 --> 01:02:26,279
but they also can include the glues here

1169
01:02:21,960 --> 01:02:27,720
if your though in this way even though

1170
01:02:26,280 --> 01:02:30,930
you had an NS record you which it has a

1171
01:02:27,720 --> 01:02:33,299
duration of two hours just by ask

1172
01:02:30,930 --> 01:02:35,399
in the aim bailiwick configuration gonna

1173
01:02:33,299 --> 01:02:36,359
get also the glues so the resume is

1174
01:02:35,400 --> 01:02:38,460
gonna get that information is gonna be

1175
01:02:36,359 --> 01:02:40,288
data cache or try to figure out where

1176
01:02:38,460 --> 01:02:42,510
this answer is located at the date later

1177
01:02:40,289 --> 01:02:44,849
but if it is out of bailiwick

1178
01:02:42,510 --> 01:02:48,660
you don't get that you just get

1179
01:02:44,849 --> 01:02:50,549
attractive answer answer so what matters

1180
01:02:48,660 --> 01:02:52,348
in here is that's like most recovers

1181
01:02:50,549 --> 01:02:53,788
would trust cached a records on servant

1182
01:02:52,349 --> 01:02:58,289
from different zones for auto bailiwick

1183
01:02:53,789 --> 01:03:00,450
scenario so the independence of the

1184
01:02:58,289 --> 01:03:02,099
records actually depends on how your

1185
01:03:00,450 --> 01:03:07,078
system is configure your zone it is out

1186
01:03:02,099 --> 01:03:08,940
of a tweeker of in bailiwick and if he's

1187
01:03:07,079 --> 01:03:11,039
in bed wake is if one answer or never

1188
01:03:08,940 --> 01:03:15,630
the NS expires is in a force you're a

1189
01:03:11,039 --> 01:03:17,910
also to expires okay so now let's move

1190
01:03:15,630 --> 01:03:20,789
to the third research question how

1191
01:03:17,910 --> 01:03:23,759
people use details in the wild so we

1192
01:03:20,789 --> 01:03:26,700
just like got a bunch of hit lists the

1193
01:03:23,760 --> 01:03:28,680
public of popular lists I know they're

1194
01:03:26,700 --> 01:03:30,270
biased but we're not interested we're

1195
01:03:28,680 --> 01:03:32,879
interested like in a big picture where

1196
01:03:30,270 --> 01:03:36,299
they have and we also use entire

1197
01:03:32,880 --> 01:03:38,369
Grinnell's on ccTLD and other field is

1198
01:03:36,299 --> 01:03:41,400
available in the root zone and you're

1199
01:03:38,369 --> 01:03:43,980
gonna retrieve in retrieve like TT else

1200
01:03:41,400 --> 01:03:48,079
for NS a quad a and Max and DNS KITT

1201
01:03:43,980 --> 01:03:51,329
KITT sorry and we focus only on child

1202
01:03:48,079 --> 01:03:54,299
TTL values why because we found out the

1203
01:03:51,329 --> 01:03:56,270
most resolvers i child-centric and and

1204
01:03:54,299 --> 01:03:59,970
that's the latch there was some

1205
01:03:56,270 --> 01:04:02,009
discussions of our operators so we see

1206
01:03:59,970 --> 01:04:03,629
here on this first line on response to

1207
01:04:02,010 --> 01:04:05,700
see the number of domains that responded

1208
01:04:03,630 --> 01:04:07,109
and the first thing we fought we they

1209
01:04:05,700 --> 01:04:10,348
can catch the first lesson from this

1210
01:04:07,109 --> 01:04:12,990
table you can see is that most of the

1211
01:04:10,349 --> 01:04:15,450
domains except for the root zone they

1212
01:04:12,990 --> 01:04:18,209
are only using out of bailiwick name

1213
01:04:15,450 --> 01:04:19,799
servers they alternative name servers so

1214
01:04:18,210 --> 01:04:22,529
we should like you have like example.com

1215
01:04:19,799 --> 01:04:25,619
your name server would be example and as

1216
01:04:22,529 --> 01:04:27,750
that example that net so most of them 95

1217
01:04:25,619 --> 01:04:30,450
nine percent in a both not on the routes

1218
01:04:27,750 --> 01:04:32,460
not other routes their routes a lot of

1219
01:04:30,450 --> 01:04:33,839
them have mixed set up or in bailiwick

1220
01:04:32,460 --> 01:04:37,230
one way

1221
01:04:33,839 --> 01:04:41,430
it's like rough some of them are only in

1222
01:04:37,230 --> 01:04:44,450
avail week and I have here two figures

1223
01:04:41,430 --> 01:04:47,240
of the CDF the distributions of

1224
01:04:44,450 --> 01:04:49,160
TTL records for different zones so the

1225
01:04:47,240 --> 01:04:52,399
way to read this is for example the root

1226
01:04:49,160 --> 01:04:55,009
and s records here from the child you

1227
01:04:52,400 --> 01:04:58,310
see like roughly less than 10% that

1228
01:04:55,010 --> 01:04:59,060
within 24 hours but if you look at the

1229
01:04:58,310 --> 01:05:01,820
other zones

1230
01:04:59,060 --> 01:05:04,670
it's like 40% have a TTL that just is

1231
01:05:01,820 --> 01:05:06,790
like a smaller than one day for the

1232
01:05:04,670 --> 01:05:08,990
other zones here for the NS record and

1233
01:05:06,790 --> 01:05:10,340
so that means that the roots is more

1234
01:05:08,990 --> 01:05:13,160
conservative more people are having

1235
01:05:10,340 --> 01:05:15,350
longer 2t LZ r which is what we found

1236
01:05:13,160 --> 01:05:17,029
but if you look at that rake a records

1237
01:05:15,350 --> 01:05:18,350
you see the figures little shifted to

1238
01:05:17,030 --> 01:05:20,330
the left I'm just gonna move back and

1239
01:05:18,350 --> 01:05:23,089
forth for you to see that it's because

1240
01:05:20,330 --> 01:05:26,660
the TTL typically of the a records are

1241
01:05:23,090 --> 01:05:28,250
shorter for the same domain than the NS

1242
01:05:26,660 --> 01:05:29,569
records themselves so that's what

1243
01:05:28,250 --> 01:05:30,970
they're trying to see here how people

1244
01:05:29,570 --> 01:05:35,240
actually deploy those values and

1245
01:05:30,970 --> 01:05:37,069
umbrella it's a list and I think it is

1246
01:05:35,240 --> 01:05:38,899
the only one in our list that not

1247
01:05:37,070 --> 01:05:40,310
doesn't only have like second-level

1248
01:05:38,900 --> 01:05:42,740
domain information they have like fully

1249
01:05:40,310 --> 01:05:46,120
qualified and have a lot of system CDN

1250
01:05:42,740 --> 01:05:49,609
names that they have like many parts and

1251
01:05:46,120 --> 01:05:51,950
those look like CDN domains they tend to

1252
01:05:49,610 --> 01:05:53,990
be very short-lived some of them use

1253
01:05:51,950 --> 01:05:56,839
like only for one time signaling and

1254
01:05:53,990 --> 01:05:58,729
that's why I see the umbrella list here

1255
01:05:56,840 --> 01:06:01,190
having way short details and the rest

1256
01:05:58,730 --> 01:06:06,350
like 60% a you have less than 10 minutes

1257
01:06:01,190 --> 01:06:09,530
which is like a lot now we found we so

1258
01:06:06,350 --> 01:06:12,140
then we look at this and now I mean if I

1259
01:06:09,530 --> 01:06:13,370
have to choose I like a look first look

1260
01:06:12,140 --> 01:06:16,549
in the TLDs

1261
01:06:13,370 --> 01:06:20,270
we need found we found a 34 of them had

1262
01:06:16,550 --> 01:06:23,510
a TTL for the NS record which was under

1263
01:06:20,270 --> 01:06:25,540
half an hour and one or 22 one or two

1264
01:06:23,510 --> 01:06:28,340
hours on the child delegation and we

1265
01:06:25,540 --> 01:06:31,580
contacted ATC T of this on this matter

1266
01:06:28,340 --> 01:06:33,980
and six responded so three of them did

1267
01:06:31,580 --> 01:06:35,390
not consider this question before you

1268
01:06:33,980 --> 01:06:36,710
said it was intentional that you were

1269
01:06:35,390 --> 01:06:39,140
changing infrastructure they want to

1270
01:06:36,710 --> 01:06:41,030
keep it low TTL values because if the

1271
01:06:39,140 --> 01:06:44,660
world problems would it would ease it to

1272
01:06:41,030 --> 01:06:46,640
reshuffle reroute stuff and one said it

1273
01:06:44,660 --> 01:06:48,109
was the way they got it from the client

1274
01:06:46,640 --> 01:06:52,430
because they are just an operator for

1275
01:06:48,110 --> 01:06:54,140
this Tod and they keep that way and the

1276
01:06:52,430 --> 01:06:56,000
cool figure after them certification we

1277
01:06:54,140 --> 01:06:57,779
found that 3 T of these actually

1278
01:06:56,000 --> 01:06:59,130
increases the TTL of their

1279
01:06:57,780 --> 01:07:01,710
any records because they were not aware

1280
01:06:59,130 --> 01:07:04,200
of that and that that's was like I

1281
01:07:01,710 --> 01:07:05,670
didn't expect that to happen but there

1282
01:07:04,200 --> 01:07:07,580
were folks having attorneys I mean I'm

1283
01:07:05,670 --> 01:07:10,640
gonna get it one case here of your why

1284
01:07:07,580 --> 01:07:14,940
yeah I'm sorry

1285
01:07:10,640 --> 01:07:19,640
it's something oh yeah honey it's not

1286
01:07:14,940 --> 01:07:19,640
passing nope Chris can help me on here

1287
01:07:32,360 --> 01:07:42,540
measure with I think the next no here's

1288
01:07:39,990 --> 01:07:48,020
fine or should be fine now can move

1289
01:07:42,540 --> 01:07:58,830
forward next one next one yeah

1290
01:07:48,020 --> 01:08:00,300
next one 22 it's not working maybe you

1291
01:07:58,830 --> 01:08:07,140
could open outside the browser

1292
01:08:00,300 --> 01:08:12,570
oh all right

1293
01:08:07,140 --> 01:08:21,779
oh yeah that one yes 22 probably has a

1294
01:08:12,570 --> 01:08:23,220
CDF in so if we have a problem can also

1295
01:08:21,779 --> 01:08:30,479
read from I have it here

1296
01:08:23,220 --> 01:08:32,810
let me just pull it for a more email so

1297
01:08:30,479 --> 01:08:32,809
there's

1298
01:08:38,279 --> 01:08:44,200
how about that yeah perfect yeah all

1299
01:08:41,439 --> 01:08:47,019
right no that does the trick so as I

1300
01:08:44,200 --> 01:08:49,059
said we know three cctlds they actually

1301
01:08:47,020 --> 01:08:51,520
change dirty tales of their records and

1302
01:08:49,060 --> 01:08:53,049
one of them was Uruguay we contacted

1303
01:08:51,520 --> 01:08:56,319
them and we actually asked permission to

1304
01:08:53,049 --> 01:08:58,120
disclose that publicly they were like

1305
01:08:56,319 --> 01:09:01,270
they had changed the value before in the

1306
01:08:58,120 --> 01:09:02,528
past and because they were doing some

1307
01:09:01,270 --> 01:09:04,650
infrastructure changes but then they

1308
01:09:02,529 --> 01:09:07,839
after that didn't change it again and

1309
01:09:04,649 --> 01:09:11,589
they went far for the NS that went for

1310
01:09:07,839 --> 01:09:14,380
300 seconds to one day so from I was

1311
01:09:11,589 --> 01:09:16,839
lucky that I had measured them before

1312
01:09:14,380 --> 01:09:18,009
they change it and one day I may I just

1313
01:09:16,839 --> 01:09:19,870
double check if they had changed they

1314
01:09:18,009 --> 01:09:22,149
had change it to one day so I measure

1315
01:09:19,870 --> 01:09:23,620
again I asked fifteen thousand ripe

1316
01:09:22,149 --> 01:09:24,939
Atlas probes to send queers and let's

1317
01:09:23,620 --> 01:09:28,180
see the performance that they get and

1318
01:09:24,939 --> 01:09:31,330
this is the CDF you see here and what we

1319
01:09:28,180 --> 01:09:35,259
can see instead like the median response

1320
01:09:31,330 --> 01:09:37,568
time for a client of right before was 28

1321
01:09:35,259 --> 01:09:41,890
milliseconds for all the 15,000 vantage

1322
01:09:37,569 --> 01:09:44,160
points for a TTL of 3600 seconds but

1323
01:09:41,890 --> 01:09:49,330
after that he went down to eight

1324
01:09:44,160 --> 01:09:52,568
milliseconds and then 75% I went down

1325
01:09:49,330 --> 01:09:56,200
from 180 to 80 21 milliseconds you're

1326
01:09:52,569 --> 01:09:57,970
shaving love like 160 milliseconds just

1327
01:09:56,200 --> 01:10:00,010
by changing the DT L I think that's a

1328
01:09:57,970 --> 01:10:02,680
great change as men of course it

1329
01:10:00,010 --> 01:10:04,840
requires the records to be in cash but

1330
01:10:02,680 --> 01:10:06,610
that shows the power of TTL here you can

1331
01:10:04,840 --> 01:10:11,730
actually improve a lot of response times

1332
01:10:06,610 --> 01:10:14,110
next let's see if it works so yeah I

1333
01:10:11,730 --> 01:10:16,480
yeah if you know should we probably find

1334
01:10:14,110 --> 01:10:20,469
a certain more figures anyways what if

1335
01:10:16,480 --> 01:10:23,200
it works oh it doesn't yeah well got

1336
01:10:20,470 --> 01:10:25,270
that that's fine yeah

1337
01:10:23,200 --> 01:10:26,950
so the question so just going back to

1338
01:10:25,270 --> 01:10:29,350
research questions a resolvers parents

1339
01:10:26,950 --> 01:10:30,660
are centric so just answered in Mostar

1340
01:10:29,350 --> 01:10:32,830
child-centric

1341
01:10:30,660 --> 01:10:35,830
how the different parts interact

1342
01:10:32,830 --> 01:10:37,780
bailiwick in pets a lot how caching

1343
01:10:35,830 --> 01:10:39,940
works depends on earlier domain how its

1344
01:10:37,780 --> 01:10:41,950
configured how are details using the

1345
01:10:39,940 --> 01:10:45,219
wild the Vedas are all over the place

1346
01:10:41,950 --> 01:10:47,440
longer and answers but then Aden Cuates

1347
01:10:45,219 --> 01:10:49,250
and most of the domains we see it's like

1348
01:10:47,440 --> 01:10:59,629
they're out of a lake max

1349
01:10:49,250 --> 01:11:01,700
to see if it works always obviously the

1350
01:10:59,630 --> 01:11:20,120
FBI wastes heavy to load that means it's

1351
01:11:01,700 --> 01:11:22,550
a problem let me sit me in here so high

1352
01:11:20,120 --> 01:11:25,730
24 it's not loading you can go to 25 is

1353
01:11:22,550 --> 01:11:26,720
also fine so I think the other one

1354
01:11:25,730 --> 01:11:30,559
probably not gonna load because there

1355
01:11:26,720 --> 01:11:32,810
are two figures but anyway we did an

1356
01:11:30,560 --> 01:11:34,850
experiment to evaluate what is like

1357
01:11:32,810 --> 01:11:36,040
performance impact of using longer

1358
01:11:34,850 --> 01:11:38,450
shorter TTLs

1359
01:11:36,040 --> 01:11:41,240
it's gonna be available later on the

1360
01:11:38,450 --> 01:11:43,190
webpage of the IPG but it's like 24

1361
01:11:41,240 --> 01:11:45,019
you're gonna be able to see that longer

1362
01:11:43,190 --> 01:11:48,589
details reduce to improve the

1363
01:11:45,020 --> 01:11:50,510
performance and we found out that if you

1364
01:11:48,590 --> 01:11:54,500
have two scenarios if you have a domain

1365
01:11:50,510 --> 01:11:56,270
name configured of a TTL of 60 seconds

1366
01:11:54,500 --> 01:11:59,810
one minute and then if you have a domain

1367
01:11:56,270 --> 01:12:02,090
name configured with a detail of 60

1368
01:11:59,810 --> 01:12:05,090
sorry one day another one with 60

1369
01:12:02,090 --> 01:12:07,280
seconds using any cast any case is not

1370
01:12:05,090 --> 01:12:11,120
gonna help you as much as caching

1371
01:12:07,280 --> 01:12:12,830
because caching even even though even

1372
01:12:11,120 --> 01:12:14,360
though caching helps a lot

1373
01:12:12,830 --> 01:12:16,220
it helped Cowie helps much more than any

1374
01:12:14,360 --> 01:12:18,679
cast if the domains cache just I'm

1375
01:12:16,220 --> 01:12:23,300
trying to say here and we found out that

1376
01:12:18,680 --> 01:12:25,700
if you use if yours longer details we

1377
01:12:23,300 --> 01:12:27,620
will run if you use longer detail to

1378
01:12:25,700 --> 01:12:33,500
observe like a reduced query loads you

1379
01:12:27,620 --> 01:12:37,580
nurse your server on a reduction 77% and

1380
01:12:33,500 --> 01:12:40,750
let's hope it works this time by 24 or

1381
01:12:37,580 --> 01:12:40,750
25 that we do it

1382
01:12:44,550 --> 01:12:58,090
yeah yeah so that yeah that one so you

1383
01:12:54,939 --> 01:13:00,070
see here that one that's exactly what I

1384
01:12:58,090 --> 01:13:02,439
said before on this figure here on the

1385
01:13:00,070 --> 01:13:04,869
left you see the red color we show the

1386
01:13:02,439 --> 01:13:07,119
detail of the domain of for the bright

1387
01:13:04,869 --> 01:13:09,610
probes for towards one authoritative

1388
01:13:07,119 --> 01:13:12,398
nameserver in unique a single location

1389
01:13:09,610 --> 01:13:15,039
and you see here the curve and if you

1390
01:13:12,399 --> 01:13:18,280
use a detail change that record and run

1391
01:13:15,039 --> 01:13:20,679
in the same unicast for a server that

1392
01:13:18,280 --> 01:13:22,419
actually has a TTL for just any TTL to

1393
01:13:20,679 --> 01:13:25,209
one day you see the performance improves

1394
01:13:22,419 --> 01:13:27,849
a lot so here you know you would see

1395
01:13:25,209 --> 01:13:30,309
like 60% of the people there under 15

1396
01:13:27,849 --> 01:13:33,729
milliseconds if they use a detail of one

1397
01:13:30,309 --> 01:13:35,439
day but if the user to TL of one minutes

1398
01:13:33,729 --> 01:13:38,649
is there roughly around 60 milliseconds

1399
01:13:35,439 --> 01:13:40,899
in any case rerun this on any cast we

1400
01:13:38,649 --> 01:13:43,659
put the same zone we put on route 53

1401
01:13:40,899 --> 01:13:45,070
with a TTL of one minute and my question

1402
01:13:43,659 --> 01:13:47,469
was like alright let's see how much

1403
01:13:45,070 --> 01:13:49,360
anycast benefits the users and compares

1404
01:13:47,469 --> 01:13:51,010
to a longer TTL maybe I have a big

1405
01:13:49,360 --> 01:13:53,289
anycast Network I don't care about the

1406
01:13:51,010 --> 01:13:55,749
tails anymore but for the point of view

1407
01:13:53,289 --> 01:13:57,518
of performance you see here that any

1408
01:13:55,749 --> 01:13:59,349
cast does improve that much for people

1409
01:13:57,519 --> 01:14:01,510
of we which are very close it grows

1410
01:13:59,349 --> 01:14:03,039
longer here for people that are both 50

1411
01:14:01,510 --> 01:14:05,619
dead where you actually start to see the

1412
01:14:03,039 --> 01:14:07,840
difference but caching helps that helps

1413
01:14:05,619 --> 01:14:09,669
more if the domain is cached of course

1414
01:14:07,840 --> 01:14:13,919
then any cast and that's a lesson here

1415
01:14:09,669 --> 01:14:13,919
for operators next if it works

1416
01:14:18,689 --> 01:14:24,429
yeah Jerry those figures in PDF and they

1417
01:14:22,360 --> 01:14:29,880
tend to have a lot of data point

1418
01:14:24,429 --> 01:14:29,880
sometimes it become heavy let's see

1419
01:14:33,149 --> 01:14:36,649
oh yeah he's not working

1420
01:14:41,400 --> 01:14:44,059
yay

1421
01:14:53,050 --> 01:15:04,240
yes so reasons for longer in shorter

1422
01:15:01,660 --> 01:15:07,180
detail so longer TT our labels longer

1423
01:15:04,240 --> 01:15:08,980
caching which means faster responses

1424
01:15:07,180 --> 01:15:12,070
lower DNS traffic to authoritative

1425
01:15:08,980 --> 01:15:14,410
server more robustness towards to

1426
01:15:12,070 --> 01:15:16,120
denying service attacks shark action on

1427
01:15:14,410 --> 01:15:17,710
the other hand supports operational

1428
01:15:16,120 --> 01:15:20,019
changes it's like faster for you to

1429
01:15:17,710 --> 01:15:22,210
change stuff can help in case you use

1430
01:15:20,020 --> 01:15:25,420
like DNS phase response to those systems

1431
01:15:22,210 --> 01:15:28,420
mitigation it can cope better DNS base

1432
01:15:25,420 --> 01:15:30,190
load balancing so the takeaway here is

1433
01:15:28,420 --> 01:15:32,080
like fergan ization should like wait and

1434
01:15:30,190 --> 01:15:36,580
this trade-offs here to find a good

1435
01:15:32,080 --> 01:15:39,519
balance next so recommendations are

1436
01:15:36,580 --> 01:15:42,250
considerations that we knew there's no

1437
01:15:39,520 --> 01:15:44,890
single optimal TTL for our users but for

1438
01:15:42,250 --> 01:15:47,830
general users longer details hours or

1439
01:15:44,890 --> 01:15:51,100
like even a day if you will a great like

1440
01:15:47,830 --> 01:15:54,730
even like 440 LG's as well the exception

1441
01:15:51,100 --> 01:15:57,130
is if you're if you're running dns-based

1442
01:15:54,730 --> 01:15:59,080
DDoS protection servers so that we would

1443
01:15:57,130 --> 01:16:01,390
like to have like a short it also allows

1444
01:15:59,080 --> 01:16:03,430
you to quickly configure your service

1445
01:16:01,390 --> 01:16:06,700
but feels like only BGP Bay's you don't

1446
01:16:03,430 --> 01:16:09,400
care about that a and quota a records an

1447
01:16:06,700 --> 01:16:10,840
NS relationship for out of bailiwick the

1448
01:16:09,400 --> 01:16:12,879
records are caching the family so we

1449
01:16:10,840 --> 01:16:14,500
don't really care about the details like

1450
01:16:12,880 --> 01:16:16,480
but if in there and made a wiki we

1451
01:16:14,500 --> 01:16:18,670
recommend to set it CEO of the a and

1452
01:16:16,480 --> 01:16:22,509
quad a should be shorter or equal to the

1453
01:16:18,670 --> 01:16:25,180
NS and location of those records as well

1454
01:16:22,510 --> 01:16:27,580
at least you should have one preferably

1455
01:16:25,180 --> 01:16:29,380
one at least out of beta week name

1456
01:16:27,580 --> 01:16:34,600
server in case the zone becomes

1457
01:16:29,380 --> 01:16:36,490
unreachable next conclusions so details

1458
01:16:34,600 --> 01:16:39,100
in DNS or a complex topic we all know

1459
01:16:36,490 --> 01:16:42,130
that we carry out a bunch of careful

1460
01:16:39,100 --> 01:16:45,310
design experiments to to factor how to

1461
01:16:42,130 --> 01:16:47,560
figure out how those factors interact we

1462
01:16:45,310 --> 01:16:49,630
show that in the wild there's a little

1463
01:16:47,560 --> 01:16:52,120
consensus on how to TL values are used

1464
01:16:49,630 --> 01:16:54,460
and what I really liked about this paper

1465
01:16:52,120 --> 01:16:55,900
like the discussion of the Ops teams for

1466
01:16:54,460 --> 01:16:59,290
some sissies here this actually led to

1467
01:16:55,900 --> 01:17:00,940
improve a user's experience and in short

1468
01:16:59,290 --> 01:17:03,160
longer to TL so if you can't do that

1469
01:17:00,940 --> 01:17:06,200
just do it and

1470
01:17:03,160 --> 01:17:08,240
this is also a very good time because we

1471
01:17:06,200 --> 01:17:10,970
have a draft now on IETF justice

1472
01:17:08,240 --> 01:17:13,190
messenger and we're proposing

1473
01:17:10,970 --> 01:17:15,440
recommendations of sorry considerations

1474
01:17:13,190 --> 01:17:18,049
for Dennis ups and I'm gonna represent

1475
01:17:15,440 --> 01:17:20,389
that on Tuesday and consideration number

1476
01:17:18,050 --> 01:17:26,360
five multi TLS it's all based on this

1477
01:17:20,390 --> 01:17:27,740
paper now thanks any questions hi Jerry

1478
01:17:26,360 --> 01:17:31,969
I was just curious if you were able to

1479
01:17:27,740 --> 01:17:34,519
infer behavior from different software

1480
01:17:31,970 --> 01:17:37,130
stacks of how the caching hierarchy

1481
01:17:34,520 --> 01:17:40,790
interacted based upon whether or not you

1482
01:17:37,130 --> 01:17:42,830
got that which answer you received so

1483
01:17:40,790 --> 01:17:46,250
the way they did is measurements like I

1484
01:17:42,830 --> 01:17:47,720
use dry pathless and it can have we kind

1485
01:17:46,250 --> 01:17:49,820
of agnostic because I don't know which

1486
01:17:47,720 --> 01:17:51,410
resolvers they are and what they do I

1487
01:17:49,820 --> 01:17:53,059
haven't looked at the problem but I know

1488
01:17:51,410 --> 01:17:54,530
someone who is looking into that his

1489
01:17:53,060 --> 01:17:56,180
nominee Elias works with Roland

1490
01:17:54,530 --> 01:17:57,980
Sheffield Roland's here from University

1491
01:17:56,180 --> 01:18:00,350
of Twente in Holland it's actually look

1492
01:17:57,980 --> 01:18:02,419
into every single resolver version and

1493
01:18:00,350 --> 01:18:04,190
what you see what they're actually doing

1494
01:18:02,420 --> 01:18:05,630
because that's a different contribution

1495
01:18:04,190 --> 01:18:08,059
of course I was looking into the big

1496
01:18:05,630 --> 01:18:10,700
picture but we need to know if the

1497
01:18:08,060 --> 01:18:13,190
vendors are complying to the RFC yeah

1498
01:18:10,700 --> 01:18:15,019
yeah I was more I'm curious because I

1499
01:18:13,190 --> 01:18:17,269
know many years ago people use the

1500
01:18:15,020 --> 01:18:20,380
additional section for you know

1501
01:18:17,270 --> 01:18:22,850
different attack you know you know

1502
01:18:20,380 --> 01:18:24,080
different attack vectors and stuff to go

1503
01:18:22,850 --> 01:18:26,180
and poison

1504
01:18:24,080 --> 01:18:28,550
you know caches and stuff and so the

1505
01:18:26,180 --> 01:18:29,810
fact that you can tell which answer

1506
01:18:28,550 --> 01:18:31,580
because there's different answers in

1507
01:18:29,810 --> 01:18:34,730
different places you know which answer

1508
01:18:31,580 --> 01:18:36,590
you received yeah and whether or not you

1509
01:18:34,730 --> 01:18:39,169
were able to infer from from that what

1510
01:18:36,590 --> 01:18:42,200
the resolver stack or stacks or you are

1511
01:18:39,170 --> 01:18:43,460
doing from that is it so yeah it seems

1512
01:18:42,200 --> 01:18:44,510
like it'd be interesting in addition

1513
01:18:43,460 --> 01:18:46,610
that's a good point I don't look at that

1514
01:18:44,510 --> 01:18:47,990
yeah sure looking today I'm not sure if

1515
01:18:46,610 --> 01:18:49,429
my I don't think my data allows me to

1516
01:18:47,990 --> 01:18:53,019
explain that but I could carry all their

1517
01:18:49,430 --> 01:18:53,020
experiments generalize that Thanks

1518
01:18:59,659 --> 01:19:22,619
that's it else Thanks morning all I'm

1519
01:19:19,050 --> 01:19:24,749
Jeff Houston I'm with a peening as Randy

1520
01:19:22,619 --> 01:19:28,409
observed IEP G meetings are exclusively

1521
01:19:24,749 --> 01:19:31,800
for DNS and BGP and nothing else and so

1522
01:19:28,409 --> 01:19:34,709
Joel and and the MTU work merely

1523
01:19:31,800 --> 01:19:37,949
aberrations but you know you hadn't had

1524
01:19:34,709 --> 01:19:39,719
a BGP dos this morning so you're early

1525
01:19:37,949 --> 01:19:42,329
you're not allowed out into the room

1526
01:19:39,719 --> 01:19:46,229
until midday so you've got to have your

1527
01:19:42,329 --> 01:19:48,989
dose of BGP this is actually a summary

1528
01:19:46,229 --> 01:19:53,429
of an awful lot of data it's gonna say

1529
01:19:48,989 --> 01:19:55,018
2018 was last year this is oh you'll

1530
01:19:53,429 --> 01:20:01,349
actually see why it doesn't really

1531
01:19:55,019 --> 01:20:03,510
matter you know BGP is wonderful because

1532
01:20:01,349 --> 01:20:04,859
of all these pieces of work bgp is the

1533
01:20:03,510 --> 01:20:07,829
one protocol that brings the entire

1534
01:20:04,859 --> 01:20:09,959
internet back to you your details might

1535
01:20:07,829 --> 01:20:11,818
vary with my details depending on where

1536
01:20:09,959 --> 01:20:13,889
you sit in the routing mesh but the

1537
01:20:11,819 --> 01:20:16,199
whole issue about routing protocols is

1538
01:20:13,889 --> 01:20:18,839
you get to see a complete topology of

1539
01:20:16,199 --> 01:20:21,119
the entire internet not perfect but not

1540
01:20:18,839 --> 01:20:23,939
bad and so in some ways it gives you

1541
01:20:21,119 --> 01:20:26,459
some amazing insights as to what the

1542
01:20:23,939 --> 01:20:29,760
internet did and if you take all of

1543
01:20:26,459 --> 01:20:32,188
route views over all of its data which

1544
01:20:29,760 --> 01:20:34,079
starts around 93 in terms of hour by

1545
01:20:32,189 --> 01:20:35,669
hour and this is hour by hour huge

1546
01:20:34,079 --> 01:20:36,929
amount of data you actually see the

1547
01:20:35,669 --> 01:20:39,089
major events that happened in the

1548
01:20:36,929 --> 01:20:42,679
internet you know the great internet

1549
01:20:39,089 --> 01:20:46,019
boom and bust god i'll need a microscope

1550
01:20:42,679 --> 01:20:50,099
just around here somewhere you know it

1551
01:20:46,019 --> 01:20:52,379
happened big boom and bust what actually

1552
01:20:50,099 --> 01:20:55,859
really happened was the rise of consumer

1553
01:20:52,379 --> 01:20:58,709
DSL and that fueled through the early

1554
01:20:55,859 --> 01:21:01,859
2000s and this whole thing about

1555
01:20:58,709 --> 01:21:02,519
consumer based internet drove inexorable

1556
01:21:01,859 --> 01:21:05,519
growth

1557
01:21:02,519 --> 01:21:08,579
this is v4 but the remarkable thing is

1558
01:21:05,519 --> 01:21:11,069
about all of this that was when we

1559
01:21:08,579 --> 01:21:13,499
started running out that's the date at

1560
01:21:11,069 --> 01:21:16,229
which I Anna ran out then a pina can

1561
01:21:13,499 --> 01:21:19,289
write then lactic and then we seem to be

1562
01:21:16,229 --> 01:21:21,269
running on empty and running at an

1563
01:21:19,289 --> 01:21:23,789
increased rate in terms of the routing

1564
01:21:21,269 --> 01:21:25,379
size even though we're not pushing more

1565
01:21:23,789 --> 01:21:28,170
addresses into the routing system

1566
01:21:25,379 --> 01:21:33,330
there's something going on there and

1567
01:21:28,170 --> 01:21:37,590
let's have a look at it this is 24

1568
01:21:33,330 --> 01:21:40,940
months in detail of every pair of route

1569
01:21:37,590 --> 01:21:45,750
views and every pair of rights rests

1570
01:21:40,940 --> 01:21:47,960
bizarrely route views sees more prefixes

1571
01:21:45,750 --> 01:21:51,570
and oddly enough actually more addresses

1572
01:21:47,960 --> 01:21:54,780
than rest they have much the same growth

1573
01:21:51,570 --> 01:21:57,719
model but in Europe there's certainly

1574
01:21:54,780 --> 01:21:59,969
almost 2/8 less of fine-grained detail

1575
01:21:57,719 --> 01:22:03,870
in routing of address band than in route

1576
01:21:59,969 --> 01:22:06,780
views a number of possible reasons about

1577
01:22:03,870 --> 01:22:09,420
about this including perhaps the notion

1578
01:22:06,780 --> 01:22:11,580
of ghosts prefixes that are sitting in

1579
01:22:09,420 --> 01:22:13,410
the route table that withdrawn at source

1580
01:22:11,580 --> 01:22:15,330
but just continue to hum around in the

1581
01:22:13,410 --> 01:22:18,660
routing system because the withdrawal is

1582
01:22:15,330 --> 01:22:20,550
not Universal so yeah an oddly

1583
01:22:18,660 --> 01:22:22,440
divergents average growth rate much the

1584
01:22:20,550 --> 01:22:25,739
same and we can break it down in detail

1585
01:22:22,440 --> 01:22:26,250
and don't forget there are no more new

1586
01:22:25,739 --> 01:22:28,919
addresses

1587
01:22:26,250 --> 01:22:30,960
that's 2011 over there on the left and

1588
01:22:28,920 --> 01:22:32,429
that's when we ran out of really pushing

1589
01:22:30,960 --> 01:22:34,770
large amounts of address space out into

1590
01:22:32,429 --> 01:22:36,750
the internet yet we're growing and at

1591
01:22:34,770 --> 01:22:40,140
fifty two thousand prefixes per year in

1592
01:22:36,750 --> 01:22:42,480
the v4 space almost clockwork and what

1593
01:22:40,140 --> 01:22:46,020
is even Auto in some ways is that the a

1594
01:22:42,480 --> 01:22:49,320
s growth 34,000 prefixes per year is

1595
01:22:46,020 --> 01:22:51,480
clockwork so at some point I don't know

1596
01:22:49,320 --> 01:22:54,870
how you guys organize this as operators

1597
01:22:51,480 --> 01:22:57,449
you know only ten per day and once there

1598
01:22:54,870 --> 01:23:00,140
attend no more no more you've got to

1599
01:22:57,449 --> 01:23:02,610
line up tomorrow even on weekends it's

1600
01:23:00,140 --> 01:23:05,360
phenomenally uniform in terms of the

1601
01:23:02,610 --> 01:23:08,219
growth rate of AAS numbers

1602
01:23:05,360 --> 01:23:09,690
BGP for traffic engineering is still BGP

1603
01:23:08,219 --> 01:23:12,000
for traffic engineering absolutely

1604
01:23:09,690 --> 01:23:13,889
nothing has changed over that same

1605
01:23:12,000 --> 01:23:15,900
extraordinary long period the amount of

1606
01:23:13,890 --> 01:23:18,780
more specifics which used to be half of

1607
01:23:15,900 --> 01:23:21,599
the routing table is now 54 percent of

1608
01:23:18,780 --> 01:23:23,190
the routing table ie around half so no

1609
01:23:21,600 --> 01:23:25,040
matter what we say in the message about

1610
01:23:23,190 --> 01:23:27,150
aggregate aggregate aggregate aggregate

1611
01:23:25,040 --> 01:23:29,040
whoever's not listening is still not

1612
01:23:27,150 --> 01:23:30,690
listening in whoever it is listening was

1613
01:23:29,040 --> 01:23:33,750
always listening and so the basic

1614
01:23:30,690 --> 01:23:35,610
message has never really changed the

1615
01:23:33,750 --> 01:23:37,679
only thing that's really changed over

1616
01:23:35,610 --> 01:23:40,080
those last few years is the average size

1617
01:23:37,679 --> 01:23:41,730
for routing advertisement because there

1618
01:23:40,080 --> 01:23:43,500
are no new addresses right

1619
01:23:41,730 --> 01:23:45,570
address span that's being advertised the

1620
01:23:43,500 --> 01:23:47,130
last few years is being constant so how

1621
01:23:45,570 --> 01:23:49,530
do you get all those address new routing

1622
01:23:47,130 --> 01:23:51,810
advertisements in you advertise smaller

1623
01:23:49,530 --> 01:23:56,040
and smaller prefixes the average routing

1624
01:23:51,810 --> 01:23:59,280
size now spans 4,000 slash 32 s it used

1625
01:23:56,040 --> 01:24:01,560
to span around 7,000 so the average

1626
01:23:59,280 --> 01:24:04,800
routing element is getting more and more

1627
01:24:01,560 --> 01:24:10,130
finer as we progressed that's the

1628
01:24:04,800 --> 01:24:10,130
address span and you can see from around

1629
01:24:10,640 --> 01:24:15,600
2016 or so that was the amount of

1630
01:24:14,010 --> 01:24:17,940
address space that's being routed in the

1631
01:24:15,600 --> 01:24:20,520
Internet we actually haven't unleashed

1632
01:24:17,940 --> 01:24:22,860
the rest of the unadvertised addresses

1633
01:24:20,520 --> 01:24:26,430
into the network that's now relatively

1634
01:24:22,860 --> 01:24:28,769
constant sitting there to around 170 /a

1635
01:24:26,430 --> 01:24:30,840
it's being advertised and that is know

1636
01:24:28,770 --> 01:24:32,700
more is coming out whoever's sitting on

1637
01:24:30,840 --> 01:24:35,100
an advertised addresses is sitting on

1638
01:24:32,700 --> 01:24:37,559
them whoever was going to sell has

1639
01:24:35,100 --> 01:24:39,540
possibly sold I don't know but we're not

1640
01:24:37,560 --> 01:24:41,100
seeing more in the routing space and the

1641
01:24:39,540 --> 01:24:44,880
other thing that's pretty constant is

1642
01:24:41,100 --> 01:24:46,200
the average AAS path length and that's

1643
01:24:44,880 --> 01:24:49,170
going to be relatively important but

1644
01:24:46,200 --> 01:24:51,360
that's remain constant for ever where I

1645
01:24:49,170 --> 01:24:53,880
sit it's a little under 6 a SS from

1646
01:24:51,360 --> 01:24:56,250
where you see the actual value might be

1647
01:24:53,880 --> 01:24:58,440
different but it's consistency might

1648
01:24:56,250 --> 01:25:02,070
well be much the same unless you change

1649
01:24:58,440 --> 01:25:04,139
your own routing so this is another one

1650
01:25:02,070 --> 01:25:05,969
this is the amount of adjacencies now

1651
01:25:04,140 --> 01:25:08,760
the people on this list might vary

1652
01:25:05,970 --> 01:25:11,130
depending on where you sit where I sit I

1653
01:25:08,760 --> 01:25:13,980
see Huracan electric with the greatest

1654
01:25:11,130 --> 01:25:16,290
number of adjacencies is $6.99 but

1655
01:25:13,980 --> 01:25:17,940
that's me you look at yours you might

1656
01:25:16,290 --> 01:25:22,290
find a different one but what you will

1657
01:25:17,940 --> 01:25:23,580
find is around 9 to 10 a s's have an

1658
01:25:22,290 --> 01:25:25,320
extraordinary large number of

1659
01:25:23,580 --> 01:25:29,040
adjacencies number of neighbors more

1660
01:25:25,320 --> 01:25:30,929
than a thousand about 2,000 or so have

1661
01:25:29,040 --> 01:25:33,420
around you know 10 or more adjacencies

1662
01:25:30,930 --> 01:25:35,400
and everyone else is out on the edge one

1663
01:25:33,420 --> 01:25:38,130
or two adjacencies so that it almost

1664
01:25:35,400 --> 01:25:40,589
looks like a power-law distribution it's

1665
01:25:38,130 --> 01:25:42,510
not exactly obvious who sits in the top

1666
01:25:40,590 --> 01:25:43,980
slot as a global constant because I

1667
01:25:42,510 --> 01:25:46,140
don't think it is it depends on where

1668
01:25:43,980 --> 01:25:48,389
you are but that shape is the same no

1669
01:25:46,140 --> 01:25:51,270
matter where you are so the Internet is

1670
01:25:48,390 --> 01:25:53,700
very heavily not even a star network

1671
01:25:51,270 --> 01:25:55,289
it's a dense black hole kind of network

1672
01:25:53,700 --> 01:25:57,150
we're a very small number of foe

1673
01:25:55,289 --> 01:25:58,710
do the bulk of the transit routing and

1674
01:25:57,150 --> 01:26:00,989
everyone else just attaches at the end

1675
01:25:58,710 --> 01:26:04,380
and everyone wants to get as close as

1676
01:26:00,989 --> 01:26:07,230
possible to those magic 10 right there

1677
01:26:04,380 --> 01:26:10,530
is no long AS path vectors flying around

1678
01:26:07,230 --> 01:26:12,239
as sort of an industry norm it's not so

1679
01:26:10,530 --> 01:26:12,659
this is why the actual date doesn't

1680
01:26:12,239 --> 01:26:15,690
matter

1681
01:26:12,659 --> 01:26:18,089
nothing's change you know the growth

1682
01:26:15,690 --> 01:26:19,678
plots it's just business as usual the

1683
01:26:18,090 --> 01:26:21,420
number of entries is reached you know a

1684
01:26:19,679 --> 01:26:23,280
magic three-quarters of a million and

1685
01:26:21,420 --> 01:26:27,150
it's keeping on growing at much the same

1686
01:26:23,280 --> 01:26:29,130
rate 52,000 entries a year 34,000 is is

1687
01:26:27,150 --> 01:26:31,440
a year and quite frankly the way we're

1688
01:26:29,130 --> 01:26:34,409
doing this shorter and shorter prefixes

1689
01:26:31,440 --> 01:26:36,409
but exactly the same topology so what

1690
01:26:34,409 --> 01:26:39,079
about address exhaustion well you know

1691
01:26:36,409 --> 01:26:41,039
Erin ran out just really ran out

1692
01:26:39,079 --> 01:26:45,090
everything's going to go in about May

1693
01:26:41,039 --> 01:26:46,650
next year like Nick late this year ap

1694
01:26:45,090 --> 01:26:48,780
Nick and right both have these last

1695
01:26:46,650 --> 01:26:53,699
slash eight policies you know dribbling

1696
01:26:48,780 --> 01:26:55,139
it out AP Nick late 2020 maybe if they

1697
01:26:53,699 --> 01:26:58,320
change their policies and I think they

1698
01:26:55,139 --> 01:27:00,690
have to a slash 23 or something it might

1699
01:26:58,320 --> 01:27:02,280
last a bit longer but effectively all

1700
01:27:00,690 --> 01:27:05,759
that's left is sort of dribbling little

1701
01:27:02,280 --> 01:27:09,150
bits and pieces so what's driving growth

1702
01:27:05,760 --> 01:27:11,610
right now in v4 is it all transfers of

1703
01:27:09,150 --> 01:27:14,400
these last slash eights the factor or is

1704
01:27:11,610 --> 01:27:15,570
it leasing an address recovery what if

1705
01:27:14,400 --> 01:27:17,699
you take a snapshot of the routing

1706
01:27:15,570 --> 01:27:19,199
system at the start of the year and a

1707
01:27:17,699 --> 01:27:20,879
snapshot at the end of the year and

1708
01:27:19,199 --> 01:27:25,230
eliminated everything that's in both

1709
01:27:20,880 --> 01:27:28,409
tables so the new staff you look out and

1710
01:27:25,230 --> 01:27:30,449
say when was that allocated so what

1711
01:27:28,409 --> 01:27:32,009
appeared through the year and when did

1712
01:27:30,449 --> 01:27:35,699
the registries claim they gab give it

1713
01:27:32,010 --> 01:27:37,590
out in 2010 80 percent of all the

1714
01:27:35,699 --> 01:27:39,808
addresses we saw in the routing table at

1715
01:27:37,590 --> 01:27:41,489
the end of the year were allocated

1716
01:27:39,809 --> 01:27:43,139
within 12 months before when they first

1717
01:27:41,489 --> 01:27:45,449
appeared so in other words you got an

1718
01:27:43,139 --> 01:27:47,789
address you routed it and that was the

1719
01:27:45,449 --> 01:27:52,320
major source of entries into the routing

1720
01:27:47,789 --> 01:27:53,969
system this is every year since then and

1721
01:27:52,320 --> 01:27:57,690
what you notice is it's a very sort of

1722
01:27:53,969 --> 01:28:02,610
similar curve but it keeps on dropping

1723
01:27:57,690 --> 01:28:04,500
so last year only 20% of all the new

1724
01:28:02,610 --> 01:28:06,539
addresses I saw in the routing system

1725
01:28:04,500 --> 01:28:08,659
were actually allocated or assigned by

1726
01:28:06,539 --> 01:28:12,409
an RA are in the last 12 months

1727
01:28:08,659 --> 01:28:17,049
which kind of figures what isn't quite

1728
01:28:12,409 --> 01:28:21,138
so obvious is that almost half are

1729
01:28:17,050 --> 01:28:24,020
really really old really old more than

1730
01:28:21,139 --> 01:28:26,659
20 years so this is almost predates the

1731
01:28:24,020 --> 01:28:28,429
RIR system this is getting into legacy

1732
01:28:26,659 --> 01:28:30,949
space and what's happened in the

1733
01:28:28,429 --> 01:28:32,540
intervening period is more and more of

1734
01:28:30,949 --> 01:28:34,790
the legatus from that legacy space

1735
01:28:32,540 --> 01:28:36,920
relatively is bleeding back into the

1736
01:28:34,790 --> 01:28:39,980
internet and the amount of sort of

1737
01:28:36,920 --> 01:28:42,949
transfer and trading she hasn't changed

1738
01:28:39,980 --> 01:28:44,629
a lot this is the major factor of what's

1739
01:28:42,949 --> 01:28:47,360
driving new addresses into the internet

1740
01:28:44,630 --> 01:28:48,199
and I can look at that in a bit more

1741
01:28:47,360 --> 01:28:50,150
detail

1742
01:28:48,199 --> 01:28:51,830
but looking at the total amount of

1743
01:28:50,150 --> 01:28:54,949
addresses that are marked as being out

1744
01:28:51,830 --> 01:28:57,800
there the amount that's advertised and

1745
01:28:54,949 --> 01:28:59,540
the amount that the RI hours are saying

1746
01:28:57,800 --> 01:29:03,770
is out there but I can't seem in the

1747
01:28:59,540 --> 01:29:06,699
routing system so that's that

1748
01:29:03,770 --> 01:29:13,699
unadvertised address space blown up and

1749
01:29:06,699 --> 01:29:15,199
again this gets interesting addresses we

1750
01:29:13,699 --> 01:29:20,360
had 50 slash eights that weren't in the

1751
01:29:15,199 --> 01:29:23,449
routing system we now have 48 so this

1752
01:29:20,360 --> 01:29:25,009
whole idea that transfers and trading

1753
01:29:23,449 --> 01:29:27,620
would unleash a huge amount of address

1754
01:29:25,010 --> 01:29:30,110
space that was otherwise dormant isn't

1755
01:29:27,620 --> 01:29:33,019
supported by the facts and in fact the

1756
01:29:30,110 --> 01:29:35,480
last 12 months were even more amazing

1757
01:29:33,020 --> 01:29:38,230
that the amount of unadvertised

1758
01:29:35,480 --> 01:29:40,790
addresses actually rose not fell and

1759
01:29:38,230 --> 01:29:43,159
there are a number of large transfer

1760
01:29:40,790 --> 01:29:44,150
deals where their end result was the

1761
01:29:43,159 --> 01:29:47,750
addresses that were previously

1762
01:29:44,150 --> 01:29:50,799
advertised to now not advertised which

1763
01:29:47,750 --> 01:29:54,679
again is sort of anomalous behavior so

1764
01:29:50,800 --> 01:29:56,840
the drawdown from the R&R pool just

1765
01:29:54,679 --> 01:29:58,699
under a slash eight the change in the

1766
01:29:56,840 --> 01:30:03,800
unadvertised and advertise place though

1767
01:29:58,699 --> 01:30:06,290
much much higher that's the text yeah

1768
01:30:03,800 --> 01:30:08,270
you've had a question Julie I can't

1769
01:30:06,290 --> 01:30:13,370
speak to the details of any particular

1770
01:30:08,270 --> 01:30:15,969
transfer but I would observe that one of

1771
01:30:13,370 --> 01:30:19,610
the things that people tend to require

1772
01:30:15,969 --> 01:30:21,620
when they when they do transfer them is

1773
01:30:19,610 --> 01:30:22,630
that the previous prefix announcements

1774
01:30:21,620 --> 01:30:25,220
go away

1775
01:30:22,630 --> 01:30:29,120
so that actually means that some

1776
01:30:25,220 --> 01:30:31,370
existing advertisement advertisements

1777
01:30:29,120 --> 01:30:36,320
have gone away that I know of

1778
01:30:31,370 --> 01:30:38,900
specifically prior to the address base

1779
01:30:36,320 --> 01:30:40,940
being transferred this is kind of bears

1780
01:30:38,900 --> 01:30:42,469
out with what we see too and the

1781
01:30:40,940 --> 01:30:44,719
predominant factor we see in the

1782
01:30:42,470 --> 01:30:47,060
movement of addresses is towards various

1783
01:30:44,720 --> 01:30:49,460
forms of CD ends and cloud providers and

1784
01:30:47,060 --> 01:30:51,950
they do go away we're probably going to

1785
01:30:49,460 --> 01:30:53,810
see them again at some point but in this

1786
01:30:51,950 --> 01:30:56,240
case the go away was more than three

1787
01:30:53,810 --> 01:31:00,070
months so in relatively long quarantine

1788
01:30:56,240 --> 01:31:02,450
period between previous use and NEX use

1789
01:31:00,070 --> 01:31:05,870
so we assigned some addresses from the

1790
01:31:02,450 --> 01:31:08,090
our our system relatively small but 2.1

1791
01:31:05,870 --> 01:31:10,250
/ eights actually were dropped into the

1792
01:31:08,090 --> 01:31:12,050
quarantine pool we'll probably see them

1793
01:31:10,250 --> 01:31:13,670
again a little while later and most of

1794
01:31:12,050 --> 01:31:16,130
that was actually heading towards the

1795
01:31:13,670 --> 01:31:19,430
cloud providers there so far as I can

1796
01:31:16,130 --> 01:31:21,500
see the biggest buyers not ISPs cloud

1797
01:31:19,430 --> 01:31:25,910
providers ISPs don't seem to be doing

1798
01:31:21,500 --> 01:31:27,860
much v6 well exponential growth for all

1799
01:31:25,910 --> 01:31:29,570
u v6 folk you can smile it's still

1800
01:31:27,860 --> 01:31:31,190
exponential it hasn't gone linear yet

1801
01:31:29,570 --> 01:31:34,429
this is probably for them really good

1802
01:31:31,190 --> 01:31:37,190
news Jared actually I had a question on

1803
01:31:34,430 --> 01:31:39,260
the last slide yeah these jared montz

1804
01:31:37,190 --> 01:31:40,099
he's from yeah yeah the speaker

1805
01:31:39,260 --> 01:31:44,870
identified me

1806
01:31:40,100 --> 01:31:49,090
thanks for Andy though so I'm still

1807
01:31:44,870 --> 01:31:53,269
Jared even just in case Randy forgot

1808
01:31:49,090 --> 01:31:56,000
yeah I'm I worked for somebody if he if

1809
01:31:53,270 --> 01:31:58,760
he's interested that I'm curious if

1810
01:31:56,000 --> 01:32:00,950
you've extrapolated out of the legacy

1811
01:31:58,760 --> 01:32:02,690
space when you think that will exhaust

1812
01:32:00,950 --> 01:32:04,790
or do you have a slide on that I don't

1813
01:32:02,690 --> 01:32:06,559
have a slide on it but right now it's

1814
01:32:04,790 --> 01:32:09,769
impossible to create a model that says

1815
01:32:06,560 --> 01:32:12,040
that exhausts if you look at that trend

1816
01:32:09,770 --> 01:32:14,840
where there was a slight downward curve

1817
01:32:12,040 --> 01:32:16,760
healed back up again signal-to-noise

1818
01:32:14,840 --> 01:32:20,180
kind of says we're going to sit between

1819
01:32:16,760 --> 01:32:23,420
45 and 50 for an awfully long time and

1820
01:32:20,180 --> 01:32:25,480
the stats aren't draining it now I don't

1821
01:32:23,420 --> 01:32:28,550
understand the market signals out there

1822
01:32:25,480 --> 01:32:30,740
you know I I was sitting there going at

1823
01:32:28,550 --> 01:32:33,800
20 bucks it's a steal wait till it hits

1824
01:32:30,740 --> 01:32:36,170
a thousand and I'm still waiting right

1825
01:32:33,800 --> 01:32:38,180
and maybe all these folks away

1826
01:32:36,170 --> 01:32:39,830
until it hits a thousand I don't know I

1827
01:32:38,180 --> 01:32:41,330
don't know if it's a price based thing a

1828
01:32:39,830 --> 01:32:43,910
logistic thing they don't even know they

1829
01:32:41,330 --> 01:32:50,300
own it but you know there's no clear

1830
01:32:43,910 --> 01:32:51,980
model of when that runs out I'm still

1831
01:32:50,300 --> 01:32:56,720
Randy but occasionally I try to have

1832
01:32:51,980 --> 01:33:03,110
manners um two things one is I'm aware

1833
01:32:56,720 --> 01:33:07,640
of ISPs purchasing address space from

1834
01:33:03,110 --> 01:33:11,059
customers legacy space from customers

1835
01:33:07,640 --> 01:33:15,140
and putting it in their back pocket for

1836
01:33:11,060 --> 01:33:19,160
next year's customers in non small

1837
01:33:15,140 --> 01:33:24,880
amounts I'm not talking slash eights but

1838
01:33:19,160 --> 01:33:27,880
I'm talking 16 the second thing is I

1839
01:33:24,880 --> 01:33:31,400
just had a little trouble with your

1840
01:33:27,880 --> 01:33:33,170
unrouted and legacy space doesn't exist

1841
01:33:31,400 --> 01:33:36,589
it's that some of your terminology there

1842
01:33:33,170 --> 01:33:42,290
seemed a little extreme but did the

1843
01:33:36,590 --> 01:33:45,950
motion what's interesting is I think

1844
01:33:42,290 --> 01:33:49,550
what we're seeing is a motion from stuff

1845
01:33:45,950 --> 01:33:54,290
coming from the our IRS to stuff coming

1846
01:33:49,550 --> 01:33:57,410
from existing holders and if I were in

1847
01:33:54,290 --> 01:34:01,420
our IR I'd be very happy that I chose a

1848
01:33:57,410 --> 01:34:03,980
rental model instead of a sale model

1849
01:34:01,420 --> 01:34:06,850
I'll go back to this graph which is I

1850
01:34:03,980 --> 01:34:09,349
think what you're referring to and this

1851
01:34:06,850 --> 01:34:11,780
relatively large pool of addresses that

1852
01:34:09,350 --> 01:34:12,980
appeared in the routing system that

1853
01:34:11,780 --> 01:34:15,500
weren't there at the start of the year

1854
01:34:12,980 --> 01:34:17,379
whose original allocation age was a long

1855
01:34:15,500 --> 01:34:20,750
time ago and then in some cases

1856
01:34:17,380 --> 01:34:22,190
predating the our IRS and the

1857
01:34:20,750 --> 01:34:24,650
observation is just that number is

1858
01:34:22,190 --> 01:34:27,469
increasing you know the percent each

1859
01:34:24,650 --> 01:34:31,670
year gets bigger where we're mining

1860
01:34:27,470 --> 01:34:35,360
ancient coal right this is not recent

1861
01:34:31,670 --> 01:34:41,750
energy it's a long time ago we're good

1862
01:34:35,360 --> 01:34:44,900
at this yo name is your person adopts I

1863
01:34:41,750 --> 01:34:46,850
was wondering if when you present us a

1864
01:34:44,900 --> 01:34:49,420
similar update in two thousand twenty

1865
01:34:46,850 --> 01:34:53,380
twenty about the 2019 day

1866
01:34:49,420 --> 01:34:55,060
if you can also incorporate our PK

1867
01:34:53,380 --> 01:34:58,900
enveloped announcements in a similar

1868
01:34:55,060 --> 01:34:59,530
fashion as unadvertised graphs that's a

1869
01:34:58,900 --> 01:35:02,290
good point

1870
01:34:59,530 --> 01:35:05,170
times have gone into looking at bogans

1871
01:35:02,290 --> 01:35:06,970
you know and routing issues it makes

1872
01:35:05,170 --> 01:35:09,190
what I thought was a quick pack even

1873
01:35:06,970 --> 01:35:12,550
longer but it is useful to understand

1874
01:35:09,190 --> 01:35:14,320
the extent to which we understand

1875
01:35:12,550 --> 01:35:16,780
exactly what's in the routing system is

1876
01:35:14,320 --> 01:35:20,040
being valid versus wow how did that get

1877
01:35:16,780 --> 01:35:22,330
there yes now specifically interested we

1878
01:35:20,040 --> 01:35:24,580
through community effort managed to

1879
01:35:22,330 --> 01:35:28,780
reduce the number of envelops through

1880
01:35:24,580 --> 01:35:31,750
social media pressure by the polling but

1881
01:35:28,780 --> 01:35:33,480
there's this long till 2000 prefixes

1882
01:35:31,750 --> 01:35:37,000
that don't seem to move in any direction

1883
01:35:33,480 --> 01:35:42,209
are those not in use are those up for

1884
01:35:37,000 --> 01:35:42,210
SIL like who knows good question Yankee

1885
01:35:42,780 --> 01:35:49,179
- no it's not - the presenter part of

1886
01:35:45,730 --> 01:35:51,969
the chair maybe first of all I cannot

1887
01:35:49,180 --> 01:35:55,300
find the slides on the subs that's my

1888
01:35:51,970 --> 01:35:59,770
fault okay about the second one I was

1889
01:35:55,300 --> 01:36:08,620
surprised to see that the IPG moved back

1890
01:35:59,770 --> 01:36:10,990
to 2018 and it's hard for me to do even

1891
01:36:08,620 --> 01:36:12,700
a partial analysis in under an hour it

1892
01:36:10,990 --> 01:36:14,530
takes me a lot longer to pull through

1893
01:36:12,700 --> 01:36:16,870
this data this is an extraordinary large

1894
01:36:14,530 --> 01:36:19,719
amount of data yeah and then I'll move

1895
01:36:16,870 --> 01:36:22,030
on right okay quick question back to the

1896
01:36:19,720 --> 01:36:25,660
age graph when you see the spike of

1897
01:36:22,030 --> 01:36:29,860
really old address spaces from your

1898
01:36:25,660 --> 01:36:32,080
analysis is this the original owners who

1899
01:36:29,860 --> 01:36:35,080
are now putting this into play or poison

1900
01:36:32,080 --> 01:36:36,850
of the sell-off of part oh no I assume

1901
01:36:35,080 --> 01:36:38,350
and you might say I'm out on a plank

1902
01:36:36,850 --> 01:36:41,830
that's just broken behind me

1903
01:36:38,350 --> 01:36:44,950
I assume that the dates recorded in the

1904
01:36:41,830 --> 01:36:47,290
RIR registry are real and that's the

1905
01:36:44,950 --> 01:36:49,330
date they left the shop and when Aaron

1906
01:36:47,290 --> 01:36:51,880
changed the date on a transfer I write

1907
01:36:49,330 --> 01:36:55,180
it back again because I want to know the

1908
01:36:51,880 --> 01:36:56,530
date it first left the shop not the date

1909
01:36:55,180 --> 01:36:57,430
when they fussed around with it and

1910
01:36:56,530 --> 01:37:00,099
changed something

1911
01:36:57,430 --> 01:37:03,700
so I'm going for the allocation date

1912
01:37:00,100 --> 01:37:07,420
when a previously unheard

1913
01:37:03,700 --> 01:37:10,420
becomes in play but but in but in

1914
01:37:07,420 --> 01:37:13,030
particular if someone sold off part of a

1915
01:37:10,420 --> 01:37:14,980
transferred part of a legacy allocation

1916
01:37:13,030 --> 01:37:16,750
you would hope that that transfer would

1917
01:37:14,980 --> 01:37:18,459
be recorded so that would look Heron

1918
01:37:16,750 --> 01:37:20,110
recalled that with today's date but I

1919
01:37:18,460 --> 01:37:23,770
assign the date of the original

1920
01:37:20,110 --> 01:37:25,809
allocation of the /a whatever it was so

1921
01:37:23,770 --> 01:37:37,690
I record that as old space because it is

1922
01:37:25,810 --> 01:37:40,240
old space yes if s RI has the earlier

1923
01:37:37,690 --> 01:37:46,150
earlier one that's the one I use that's

1924
01:37:40,240 --> 01:37:49,480
why a lot of this stuff is very old you

1925
01:37:46,150 --> 01:37:53,110
know I'm curious as to the makeup of

1926
01:37:49,480 --> 01:37:56,919
this unadvertised space there's a lot of

1927
01:37:53,110 --> 01:38:00,099
rumors that the u.s. DoD is setting on a

1928
01:37:56,920 --> 01:38:02,380
whole bunch of space and it's a little

1929
01:38:00,100 --> 01:38:04,510
um I said there's a lot of rumors around

1930
01:38:02,380 --> 01:38:06,310
about people have squatted on it so I'm

1931
01:38:04,510 --> 01:38:07,900
just curious what what is yours what are

1932
01:38:06,310 --> 01:38:13,410
your thoughts and opinions on all of

1933
01:38:07,900 --> 01:38:13,410
that um the data is open you can look to

1934
01:38:18,000 --> 01:38:24,070
Jeff how's Jeff have you done any

1935
01:38:21,460 --> 01:38:26,890
analysis for these very old allocations

1936
01:38:24,070 --> 01:38:28,840
to see what the relationship of his path

1937
01:38:26,890 --> 01:38:32,950
is versus those old allocations when

1938
01:38:28,840 --> 01:38:35,680
they have been announced no I have not

1939
01:38:32,950 --> 01:38:37,540
so I haven't looked at a as path or you

1940
01:38:35,680 --> 01:38:39,430
know changes in the advertisements I

1941
01:38:37,540 --> 01:38:41,080
haven't looked for where the a s and the

1942
01:38:39,430 --> 01:38:43,090
addresses have been sold versus the

1943
01:38:41,080 --> 01:38:45,160
addresses only no I haven't looked at

1944
01:38:43,090 --> 01:38:47,680
that it's interesting place to look but

1945
01:38:45,160 --> 01:38:49,180
yeah yeah so the the two things they

1946
01:38:47,680 --> 01:38:51,940
think might be interesting out of that

1947
01:38:49,180 --> 01:38:55,900
the first one is that if the s paths

1948
01:38:51,940 --> 01:38:58,540
have no relationship no that potentially

1949
01:38:55,900 --> 01:39:01,059
implies that you know the allocations

1950
01:38:58,540 --> 01:39:03,010
just walking away and that this is an

1951
01:39:01,060 --> 01:39:04,780
allowed thing of course the second thing

1952
01:39:03,010 --> 01:39:06,970
I find interesting out of that based on

1953
01:39:04,780 --> 01:39:10,690
but some of our security friends tend to

1954
01:39:06,970 --> 01:39:12,700
say is that those spaces have been sort

1955
01:39:10,690 --> 01:39:15,190
of prime pools where hijacks are

1956
01:39:12,700 --> 01:39:17,170
happening and this is where cross

1957
01:39:15,190 --> 01:39:20,710
correlation with the rpki stuff

1958
01:39:17,170 --> 01:39:23,650
interesting that's a different talk I do

1959
01:39:20,710 --> 01:39:27,370
look at that it's a different talk I'll

1960
01:39:23,650 --> 01:39:29,530
take it at that we'll press on for all

1961
01:39:27,370 --> 01:39:31,960
uv6 vote you're waiting for this this is

1962
01:39:29,530 --> 01:39:35,259
where I'd got to the exponential growth

1963
01:39:31,960 --> 01:39:37,210
is still growing there interestingly v6

1964
01:39:35,260 --> 01:39:40,180
risks and route views have a very

1965
01:39:37,210 --> 01:39:42,490
consistent view now the this is a recent

1966
01:39:40,180 --> 01:39:45,130
routing table it's only a you know a

1967
01:39:42,490 --> 01:39:48,250
decade or so old in in reality there are

1968
01:39:45,130 --> 01:39:50,770
fewer ghosts and one of the issue is to

1969
01:39:48,250 --> 01:39:52,960
what extent is the v4 table full of

1970
01:39:50,770 --> 01:39:55,330
prefixes that are actually unadvertised

1971
01:39:52,960 --> 01:39:57,100
but withdrawals haven't fully permeated

1972
01:39:55,330 --> 01:39:58,750
through the entire system and no one's

1973
01:39:57,100 --> 01:40:01,720
going to permeate a second gratuitous

1974
01:39:58,750 --> 01:40:04,090
withdrawal and the fact that this is

1975
01:40:01,720 --> 01:40:05,710
more concise and tighter the written

1976
01:40:04,090 --> 01:40:09,430
route view see exactly the same picture

1977
01:40:05,710 --> 01:40:11,290
is interesting but more than that I

1978
01:40:09,430 --> 01:40:11,830
don't know ghost-hunting is extremely

1979
01:40:11,290 --> 01:40:15,519
difficult

1980
01:40:11,830 --> 01:40:17,559
the routing indicators what was at fifty

1981
01:40:15,520 --> 01:40:24,160
two thousand a year in v4 15,000 a year

1982
01:40:17,560 --> 01:40:26,020
in v6 3400 asns in V 4 mm in v6 so that

1983
01:40:24,160 --> 01:40:26,559
growth curve is slightly higher than

1984
01:40:26,020 --> 01:40:28,870
linear

1985
01:40:26,560 --> 01:40:31,420
so v6 is certainly accelerating and

1986
01:40:28,870 --> 01:40:34,260
growth faster than B for more specifics

1987
01:40:31,420 --> 01:40:36,100
one third of the routing table

1988
01:40:34,260 --> 01:40:39,490
predominantly 48

1989
01:40:36,100 --> 01:40:42,700
if you are filtering on 32 or 35 s you

1990
01:40:39,490 --> 01:40:45,309
wouldn't see an awful lot of v6 so more

1991
01:40:42,700 --> 01:40:50,559
specifics at the 48 level and also quite

1992
01:40:45,310 --> 01:40:52,450
a lot of 64 s where I sit yeah your

1993
01:40:50,560 --> 01:40:54,730
routers are going to melt one day take

1994
01:40:52,450 --> 01:40:57,580
up a lot of the routing table and the

1995
01:40:54,730 --> 01:41:00,009
average routing size is now sitting at

1996
01:40:57,580 --> 01:41:01,900
around a 32 so if you're filtering in a

1997
01:41:00,010 --> 01:41:04,210
32 again you're going to miss a lot out

1998
01:41:01,900 --> 01:41:06,309
of here so average size is getting

1999
01:41:04,210 --> 01:41:08,470
smaller much the same as before I've had

2000
01:41:06,310 --> 01:41:12,550
to resort to a log scale because v6 is

2001
01:41:08,470 --> 01:41:14,170
crazy advertised address span it's

2002
01:41:12,550 --> 01:41:16,810
linear in a log scale

2003
01:41:14,170 --> 01:41:18,760
remember maths if it's linear in a log

2004
01:41:16,810 --> 01:41:20,440
scale that means in a normal scale it

2005
01:41:18,760 --> 01:41:23,500
would be exponential but I couldn't get

2006
01:41:20,440 --> 01:41:25,059
it on a graph so that means it's growing

2007
01:41:23,500 --> 01:41:27,880
and it's growing at an exponential rate

2008
01:41:25,060 --> 01:41:30,900
take my word for it the interconnection

2009
01:41:27,880 --> 01:41:33,030
in v6 is weird and I suspect

2010
01:41:30,900 --> 01:41:36,059
this is a relatively long baseline it's

2011
01:41:33,030 --> 01:41:38,699
the slow decline of the v6 tunnel

2012
01:41:36,060 --> 01:41:41,100
overlay Network and the increasing use

2013
01:41:38,699 --> 01:41:42,928
of native connections actually means

2014
01:41:41,100 --> 01:41:44,850
that this is behaving the way we would

2015
01:41:42,929 --> 01:41:46,440
like it to behave you're actually seeing

2016
01:41:44,850 --> 01:41:48,420
something closer to the underlying

2017
01:41:46,440 --> 01:41:51,389
topology the fact that it's still noisy

2018
01:41:48,420 --> 01:41:53,760
says here still more work to do

2019
01:41:51,390 --> 01:41:56,010
and part of the reason I think why

2020
01:41:53,760 --> 01:41:58,679
Huracan is that there is Huracan did the

2021
01:41:56,010 --> 01:41:59,940
whole bunch of v6 tunnel so again your

2022
01:41:58,679 --> 01:42:02,370
view will differ depending on where you

2023
01:41:59,940 --> 01:42:04,019
are the v4 shaped v6 shaping

2024
01:42:02,370 --> 01:42:05,730
connectivity exactly the same small

2025
01:42:04,020 --> 01:42:07,830
number of players right in the middle in

2026
01:42:05,730 --> 01:42:09,870
this case only two AAS numbers from

2027
01:42:07,830 --> 01:42:12,239
where I sit have enormous numbers of

2028
01:42:09,870 --> 01:42:13,650
adjacencies you will probably see a

2029
01:42:12,239 --> 01:42:14,879
different number from where you sit and

2030
01:42:13,650 --> 01:42:17,309
you might even see different players

2031
01:42:14,880 --> 01:42:19,350
there it's all relative

2032
01:42:17,310 --> 01:42:22,320
so overall it's growing what to expect

2033
01:42:19,350 --> 01:42:24,860
well some projections this is V for

2034
01:42:22,320 --> 01:42:28,650
daily growth rates 140 routes a day

2035
01:42:24,860 --> 01:42:30,540
52,000 a year you should prepare within

2036
01:42:28,650 --> 01:42:33,629
two years for up to you know a million

2037
01:42:30,540 --> 01:42:36,360
entries or so despite address exhaustion

2038
01:42:33,630 --> 01:42:38,280
despite everything there's no reason to

2039
01:42:36,360 --> 01:42:41,040
suggest that's going into a logistic

2040
01:42:38,280 --> 01:42:42,659
curve so if you're planning on fib size

2041
01:42:41,040 --> 01:42:44,760
and if you really want to stuff all your

2042
01:42:42,659 --> 01:42:46,559
routes into a fib if that's what you

2043
01:42:44,760 --> 01:42:48,630
want to do you're going to just have to

2044
01:42:46,560 --> 01:42:50,010
grow at this kind of size there's the

2045
01:42:48,630 --> 01:42:53,880
only other way of doing it is don't put

2046
01:42:50,010 --> 01:42:57,300
all your routes in the FIB yeah small

2047
01:42:53,880 --> 01:42:59,489
comments on the predictions as operators

2048
01:42:57,300 --> 01:43:02,880
we agreed that's either people need to

2049
01:42:59,489 --> 01:43:05,879
deploy RPK original edition or we will

2050
01:43:02,880 --> 01:43:08,190
be aggregate them 2/24 to protect

2051
01:43:05,880 --> 01:43:10,940
ourselves so there may be some swinging

2052
01:43:08,190 --> 01:43:13,379
later on let's hope that doesn't inspire

2053
01:43:10,940 --> 01:43:15,000
this could get really fascinating

2054
01:43:13,380 --> 01:43:17,100
because these are starting to get big

2055
01:43:15,000 --> 01:43:19,140
numbers even for big iron out there

2056
01:43:17,100 --> 01:43:22,199
the v6 daily growth rates it's not

2057
01:43:19,140 --> 01:43:24,090
linear it's exponential so those

2058
01:43:22,199 --> 01:43:26,099
predictions get to be scary because

2059
01:43:24,090 --> 01:43:30,270
they're 128 bits long

2060
01:43:26,100 --> 01:43:31,739
so at Alinea you kind of go yawn but v6

2061
01:43:30,270 --> 01:43:33,989
is not growing in a linear rate it's

2062
01:43:31,739 --> 01:43:35,989
growing exponentially we can expect and

2063
01:43:33,989 --> 01:43:38,639
within five years quarter of a million

2064
01:43:35,989 --> 01:43:41,489
128 bit entries in the FIB so it starts

2065
01:43:38,640 --> 01:43:44,699
to get significant so in absolute terms

2066
01:43:41,489 --> 01:43:47,129
v6 table is rocketing along

2067
01:43:44,699 --> 01:43:50,400
it'll be about the same footprint in

2068
01:43:47,130 --> 01:43:53,610
feed memory in about five years time the

2069
01:43:50,400 --> 01:43:55,619
same footprint now as long as you're

2070
01:43:53,610 --> 01:43:57,360
prepared to do this the internet will

2071
01:43:55,619 --> 01:43:59,699
keep on running BGP I'm like there's

2072
01:43:57,360 --> 01:44:01,710
nothing intrinsically wrong with BGP

2073
01:43:59,699 --> 01:44:04,199
scaling profitable properties it's going

2074
01:44:01,710 --> 01:44:06,150
just fine but if you don't want that

2075
01:44:04,199 --> 01:44:09,089
size you've got to think long and hard

2076
01:44:06,150 --> 01:44:12,119
about how you want around the other part

2077
01:44:09,090 --> 01:44:14,340
of this is the performance of BGP which

2078
01:44:12,119 --> 01:44:16,769
is the level of updates this is where

2079
01:44:14,340 --> 01:44:18,750
odd things happen in BGP that none of us

2080
01:44:16,770 --> 01:44:21,449
can understand this is the number of

2081
01:44:18,750 --> 01:44:23,639
prefixes in v4 this is the number of

2082
01:44:21,449 --> 01:44:25,409
updates in v4 this is the number of

2083
01:44:23,639 --> 01:44:28,710
withdrawals in v4 the number of

2084
01:44:25,409 --> 01:44:31,799
withdrawals per day is constant riddle

2085
01:44:28,710 --> 01:44:34,080
me that one with more people more

2086
01:44:31,800 --> 01:44:35,639
Brownian motion more noise more random

2087
01:44:34,080 --> 01:44:38,159
actors more there's more that more

2088
01:44:35,639 --> 01:44:41,570
withdrawals no no withdrawals are a

2089
01:44:38,159 --> 01:44:43,888
different thing I don't understand

2090
01:44:41,570 --> 01:44:44,130
roughly what is that number 10,000 a

2091
01:44:43,889 --> 01:44:48,210
year

2092
01:44:44,130 --> 01:44:50,659
10,000 per day constantly no matter

2093
01:44:48,210 --> 01:44:53,429
where I look I see a very similar number

2094
01:44:50,659 --> 01:44:55,739
but the one thing about this is that it

2095
01:44:53,429 --> 01:45:01,020
does have a relationship to convergence

2096
01:44:55,739 --> 01:45:03,299
performance Randy Randy um those two

2097
01:45:01,020 --> 01:45:05,849
that many of the announcements create

2098
01:45:03,300 --> 01:45:09,570
implicit withdrawals so the explicit

2099
01:45:05,849 --> 01:45:11,190
withdrawals are not necessary many of

2100
01:45:09,570 --> 01:45:13,519
the announcements Korea implicit

2101
01:45:11,190 --> 01:45:16,888
withdrawals yes

2102
01:45:13,520 --> 01:45:20,840
but why it's ten thousand why does it

2103
01:45:16,889 --> 01:45:23,130
grow even the updates grow slowly

2104
01:45:20,840 --> 01:45:24,869
whereas withdrawals the number of

2105
01:45:23,130 --> 01:45:26,820
explicit withdrawals kind of because

2106
01:45:24,869 --> 01:45:42,989
those updates have the implicit

2107
01:45:26,820 --> 01:45:46,409
withdraws okay okay maybe it only ever

2108
01:45:42,989 --> 01:45:49,610
takes an average of two updates for a

2109
01:45:46,409 --> 01:45:52,500
prefix to converge to its new state

2110
01:45:49,610 --> 01:45:56,759
whether its withdrawal or a new path on

2111
01:45:52,500 --> 01:45:58,349
average two updates on average it's been

2112
01:45:56,760 --> 01:46:01,019
the same since 2000

2113
01:45:58,349 --> 01:46:04,019
or even earlier it converges at the same

2114
01:46:01,019 --> 01:46:06,149
speed and because of MRI intervals that

2115
01:46:04,019 --> 01:46:09,539
number actually translates to just

2116
01:46:06,149 --> 01:46:12,179
around 50 seconds so on average around

2117
01:46:09,539 --> 01:46:15,148
50 seconds whatever state it was going

2118
01:46:12,179 --> 01:46:16,859
to now stays in that state for at least

2119
01:46:15,149 --> 01:46:18,899
a minute I think was the way I'd timed

2120
01:46:16,859 --> 01:46:21,510
that so it remains stable after that

2121
01:46:18,899 --> 01:46:27,119
point more than two MRI intervals and

2122
01:46:21,510 --> 01:46:30,989
that's been the same for ever this is

2123
01:46:27,119 --> 01:46:33,299
viewed no this is viewed from 1:30 1:07

2124
01:46:30,989 --> 01:46:35,879
to I had a different graph that did all

2125
01:46:33,300 --> 01:46:39,329
of route views all of the time but it

2126
01:46:35,879 --> 01:46:42,959
does take a lot of compute it's the same

2127
01:46:39,329 --> 01:46:45,749
property it's exactly the same property

2128
01:46:42,959 --> 01:46:48,688
because it's actually based on average

2129
01:46:45,749 --> 01:46:50,129
AAS path length because what you're

2130
01:46:48,689 --> 01:46:52,469
looking at is there's a disturbance in

2131
01:46:50,129 --> 01:46:54,179
the force it has to propagate a longer

2132
01:46:52,469 --> 01:46:56,129
convergence time actually means a longer

2133
01:46:54,179 --> 01:46:57,989
path to propagate through because you

2134
01:46:56,129 --> 01:47:00,629
always like connecting into the core

2135
01:46:57,989 --> 01:47:02,879
updates happen really quickly so into

2136
01:47:00,629 --> 01:47:05,309
the core back out again you're done so

2137
01:47:02,879 --> 01:47:08,579
this is why it's relatively constant as

2138
01:47:05,309 --> 01:47:10,229
far as I can see Jeff has so I think

2139
01:47:08,579 --> 01:47:13,139
your observations are correct at the

2140
01:47:10,229 --> 01:47:16,919
little cautious about tying it in memory

2141
01:47:13,139 --> 01:47:18,719
I type the timers most people don't

2142
01:47:16,919 --> 01:47:20,969
necessarily really have those for real

2143
01:47:18,719 --> 01:47:25,079
but queuing artifacts will look like

2144
01:47:20,969 --> 01:47:27,269
that well if MRI has been as long slow

2145
01:47:25,079 --> 01:47:29,579
decline whatever has replaced it has a

2146
01:47:27,269 --> 01:47:31,889
very similar observed behavior or

2147
01:47:29,579 --> 01:47:33,478
property I think what you're going to

2148
01:47:31,889 --> 01:47:36,599
see especially with your prior slide

2149
01:47:33,479 --> 01:47:38,159
with amount of HP update noise just

2150
01:47:36,599 --> 01:47:41,159
simply the link that something is going

2151
01:47:38,159 --> 01:47:45,839
to be in a queue tends to cause that to

2152
01:47:41,159 --> 01:47:48,688
happen so when you have a fair amount of

2153
01:47:45,840 --> 01:47:51,300
stuff churning around you get a lot of

2154
01:47:48,689 --> 01:47:53,129
convergence no niceties as a side-effect

2155
01:47:51,300 --> 01:47:54,599
of that where you actually get the

2156
01:47:53,129 --> 01:47:58,800
pathological stuff is when you have

2157
01:47:54,599 --> 01:48:01,979
short queues okay is where it's really

2158
01:47:58,800 --> 01:48:03,689
good that is an amazing thing like grown

2159
01:48:01,979 --> 01:48:06,419
by an order of 10 but convergence is

2160
01:48:03,689 --> 01:48:08,729
much the same so if you're worried about

2161
01:48:06,419 --> 01:48:09,260
v4 update performance in BGP don't

2162
01:48:08,729 --> 01:48:11,969
bother

2163
01:48:09,260 --> 01:48:12,269
and whether it's M right or whether it's

2164
01:48:11,969 --> 01:48:14,639
Q

2165
01:48:12,269 --> 01:48:16,099
just suggests the underlying observation

2166
01:48:14,639 --> 01:48:19,079
is the system is actually quite stable

2167
01:48:16,099 --> 01:48:21,090
from where I sit v6 is entirely not that

2168
01:48:19,079 --> 01:48:22,799
and I'm always been wondering to what

2169
01:48:21,090 --> 01:48:24,630
extent it's me and to what extent others

2170
01:48:22,800 --> 01:48:26,969
see this when I look further afield I

2171
01:48:24,630 --> 01:48:29,400
still see large amounts of operational

2172
01:48:26,969 --> 01:48:31,679
instability in routing updates bizarre

2173
01:48:29,400 --> 01:48:33,659
the number withdrawals are still low but

2174
01:48:31,679 --> 01:48:37,199
it's more variable the number of updates

2175
01:48:33,659 --> 01:48:39,659
is unbounded it just seems at some times

2176
01:48:37,199 --> 01:48:41,579
some routers is going to catatonic

2177
01:48:39,659 --> 01:48:44,518
update announcement systems a little

2178
01:48:41,579 --> 01:48:46,380
earlier and never stop convergence

2179
01:48:44,519 --> 01:48:50,519
performance as a result is all over the

2180
01:48:46,380 --> 01:48:52,199
shop there's no true average that

2181
01:48:50,519 --> 01:48:54,210
maintains from day to day to the amount

2182
01:48:52,199 --> 01:48:56,789
of updates that converge and nor is

2183
01:48:54,210 --> 01:48:59,219
there any real consistency in time now

2184
01:48:56,789 --> 01:49:01,349
whether this is the impact of tunnels

2185
01:48:59,219 --> 01:49:04,380
close in to the call or some other

2186
01:49:01,349 --> 01:49:07,530
impact there is something really

2187
01:49:04,380 --> 01:49:10,199
different in BGP carrying v6 and BGP

2188
01:49:07,530 --> 01:49:12,599
carrying v4 and the suspicion is it's

2189
01:49:10,199 --> 01:49:14,789
something to do with topology and the

2190
01:49:12,599 --> 01:49:16,499
suspicion is Jeff's nods if shaking his

2191
01:49:14,789 --> 01:49:18,329
head to say no or something to do with

2192
01:49:16,499 --> 01:49:20,210
overlays and tunnels and tunnel behavior

2193
01:49:18,329 --> 01:49:22,590
and if there's another explanation

2194
01:49:20,210 --> 01:49:29,840
someone should enlighten me because I'm

2195
01:49:22,590 --> 01:49:32,820
not enlightened Jeff has made a joke a

2196
01:49:29,840 --> 01:49:35,909
partial joke and made the Doug just too

2197
01:49:32,820 --> 01:49:38,489
much cargo in the system and I wish I

2198
01:49:35,909 --> 01:49:40,530
was joking absolutely much Kroger in the

2199
01:49:38,489 --> 01:49:42,900
system there's there's unfortunately

2200
01:49:40,530 --> 01:49:44,849
some interesting artifacts some of the

2201
01:49:42,900 --> 01:49:48,749
older trees routing software that was

2202
01:49:44,849 --> 01:49:50,940
out about and it causes that a huge

2203
01:49:48,749 --> 01:49:53,610
amount of noise in the system when I was

2204
01:49:50,940 --> 01:49:55,710
doing work some number of years ago for

2205
01:49:53,610 --> 01:49:57,869
you know the four byte a s transition

2206
01:49:55,710 --> 01:50:00,150
and stuff we found that there is

2207
01:49:57,869 --> 01:50:02,339
significant meta stable routing updates

2208
01:50:00,150 --> 01:50:05,369
going around and it was showing up

2209
01:50:02,340 --> 01:50:08,730
because it was incorrect no for by

2210
01:50:05,369 --> 01:50:10,039
transition code and a bit of chasing

2211
01:50:08,730 --> 01:50:11,518
down since they ended up being a

2212
01:50:10,039 --> 01:50:13,679
customer I had a little bit of

2213
01:50:11,519 --> 01:50:16,530
visibility and at the time was much old

2214
01:50:13,679 --> 01:50:19,619
cargo boxes so there's just literally I

2215
01:50:16,530 --> 01:50:22,289
think a lot of this noise is from the

2216
01:50:19,619 --> 01:50:24,659
fact that a lot of v6 is being done know

2217
01:50:22,289 --> 01:50:26,130
via software routing and a lot of it's

2218
01:50:24,659 --> 01:50:28,559
being done across tunnels that you're

2219
01:50:26,130 --> 01:50:30,000
saying and a lot of the things that are

2220
01:50:28,560 --> 01:50:30,710
plugging those things together at the

2221
01:50:30,000 --> 01:50:33,510
moment

2222
01:50:30,710 --> 01:50:37,170
hopefully decreasing is a bunch of older

2223
01:50:33,510 --> 01:50:41,730
routing stacks that need work well the

2224
01:50:37,170 --> 01:50:44,070
good news is but it's taking a long time

2225
01:50:41,730 --> 01:50:45,330
to get there yes and well I think that

2226
01:50:44,070 --> 01:50:46,739
partially that what you're seeing here

2227
01:50:45,330 --> 01:50:48,870
is also your observation about these

2228
01:50:46,739 --> 01:50:51,388
being over tunnels as we get them more

2229
01:50:48,870 --> 01:50:52,440
and more native v6 connectivity and the

2230
01:50:51,389 --> 01:50:54,449
tunnels go away

2231
01:50:52,440 --> 01:50:56,519
people are shipping their routes across

2232
01:50:54,449 --> 01:50:58,169
actual routers which tend to actually be

2233
01:50:56,520 --> 01:51:01,320
a little more stable versus over the

2234
01:50:58,170 --> 01:51:03,350
things that are problematic okay thank

2235
01:51:01,320 --> 01:51:03,349
you

2236
01:51:04,370 --> 01:51:10,880
Randy motion

2237
01:51:05,909 --> 01:51:15,059
um many years ago some Australian nut

2238
01:51:10,880 --> 01:51:18,570
said that v6 performance absolutely

2239
01:51:15,060 --> 01:51:21,330
sucks due to tunnels and crazy peering

2240
01:51:18,570 --> 01:51:25,110
agreements and so on and so forth but

2241
01:51:21,330 --> 01:51:31,199
that as more money started real resting

2242
01:51:25,110 --> 01:51:34,049
on v6 this will get fixed for to get

2243
01:51:31,199 --> 01:51:39,719
fixed those people playing in the game

2244
01:51:34,050 --> 01:51:44,400
would benefit from even more analysis so

2245
01:51:39,719 --> 01:51:46,199
we know what to fix I think you know

2246
01:51:44,400 --> 01:51:48,239
finally people are coming to the

2247
01:51:46,199 --> 01:51:55,049
conclusion that tunnels are is evil as

2248
01:51:48,239 --> 01:52:01,370
gnats but I think the other Jeff's is

2249
01:51:55,050 --> 01:52:03,870
saying that weak software it's a problem

2250
01:52:01,370 --> 01:52:06,210
it's worth investigating this is not

2251
01:52:03,870 --> 01:52:08,880
acceptable as a production network we

2252
01:52:06,210 --> 01:52:10,530
shouldn't be worth in this and we should

2253
01:52:08,880 --> 01:52:17,190
understand why this is still the case

2254
01:52:10,530 --> 01:52:18,750
today yeah yeah Joel yeagley um yeah I

2255
01:52:17,190 --> 01:52:25,710
mean that certainly is historically the

2256
01:52:18,750 --> 01:52:28,290
case like I can remember circa 1998 the

2257
01:52:25,710 --> 01:52:30,179
reason our BGP implementation was

2258
01:52:28,290 --> 01:52:32,850
shittier was literally because it was a

2259
01:52:30,179 --> 01:52:35,159
different platform because the soup zero

2260
01:52:32,850 --> 01:52:37,800
cat 65 hundredths that we had running

2261
01:52:35,159 --> 01:52:39,659
the core did forward v6 at that point

2262
01:52:37,800 --> 01:52:42,090
and so like literally the

2263
01:52:39,659 --> 01:52:44,460
Cisco 7000 that was sitting in the

2264
01:52:42,090 --> 01:52:48,780
corner was doing the v6 overlay Network

2265
01:52:44,460 --> 01:52:53,580
so it's literally shittier I have

2266
01:52:48,780 --> 01:52:57,690
observed in the in the process of

2267
01:52:53,580 --> 01:53:03,830
building adjacencies in exchange points

2268
01:52:57,690 --> 01:53:06,719
over a long period of time that people

2269
01:53:03,830 --> 01:53:10,590
apply the principles of benign neglect

2270
01:53:06,719 --> 01:53:12,960
to their deployment of v6 peering if you

2271
01:53:10,590 --> 01:53:13,560
take down a v4 peer they noticed pretty

2272
01:53:12,960 --> 01:53:15,929
quickly

2273
01:53:13,560 --> 01:53:17,670
weirdly because the traffic that they

2274
01:53:15,929 --> 01:53:21,210
were saving a lot of money on stopped

2275
01:53:17,670 --> 01:53:23,820
flowing if you take down the v6 one most

2276
01:53:21,210 --> 01:53:26,520
of them don't notice for some time dual

2277
01:53:23,820 --> 01:53:29,460
stack happy.i Bibles yeah it was missing

2278
01:53:26,520 --> 01:53:32,130
your v6 peering with Google tends to get

2279
01:53:29,460 --> 01:53:36,239
a lot of notice because like the

2280
01:53:32,130 --> 01:53:41,480
youtubes flow over it and so this that

2281
01:53:36,239 --> 01:53:45,330
that property of benign neglect has been

2282
01:53:41,480 --> 01:53:48,030
like slowly getting pushed out of that

2283
01:53:45,330 --> 01:53:52,350
but it's still readily apparent in a

2284
01:53:48,030 --> 01:53:57,059
number of regions that I operated where

2285
01:53:52,350 --> 01:53:59,130
um that that the management of those

2286
01:53:57,060 --> 01:54:01,080
resources and the the frequency with

2287
01:53:59,130 --> 01:54:03,960
which they're up is demonstrably lower

2288
01:54:01,080 --> 01:54:05,070
than the v4 ones even even in the case

2289
01:54:03,960 --> 01:54:07,860
where they're running on the same

2290
01:54:05,070 --> 01:54:08,940
hardware well I'm happy to look deeper

2291
01:54:07,860 --> 01:54:10,860
and others who are interested in this

2292
01:54:08,940 --> 01:54:14,428
should look deeper as well certainly the

2293
01:54:10,860 --> 01:54:17,040
data is available yeah jhope again the

2294
01:54:14,429 --> 01:54:23,250
blue graph on the right side it seems to

2295
01:54:17,040 --> 01:54:26,130
stabilize the left side yeah is that

2296
01:54:23,250 --> 01:54:28,500
around February 2018 yes

2297
01:54:26,130 --> 01:54:35,429
that's when a number of security updates

2298
01:54:28,500 --> 01:54:37,139
were dispatched for quaggan based you

2299
01:54:35,429 --> 01:54:39,330
might well have observation of

2300
01:54:37,139 --> 01:54:44,190
correlation and reason I done causality

2301
01:54:39,330 --> 01:54:47,969
I don't know again I am curious if you

2302
01:54:44,190 --> 01:54:50,460
could correlate those frequencies of

2303
01:54:47,969 --> 01:54:52,800
updates and instability with actual

2304
01:54:50,460 --> 01:54:55,559
traffic and actual users behind it

2305
01:54:52,800 --> 01:54:56,820
had this conversation and I assume that

2306
01:54:55,559 --> 01:54:58,710
you were going to offer me some

2307
01:54:56,820 --> 01:55:01,829
resources to help me do the analysis and

2308
01:54:58,710 --> 01:55:04,829
we're still in that conversation because

2309
01:55:01,829 --> 01:55:06,239
I suspect it's still like the more users

2310
01:55:04,829 --> 01:55:08,460
you have behind the previous and most

2311
01:55:06,239 --> 01:55:10,348
abilities because the Eric I both said

2312
01:55:08,460 --> 01:55:12,929
people do not like this stop of their

2313
01:55:10,349 --> 01:55:14,880
own own complaints it's worth more

2314
01:55:12,929 --> 01:55:16,170
investigation Jim no matter how we cut

2315
01:55:14,880 --> 01:55:20,130
it we need to understand this better

2316
01:55:16,170 --> 01:55:22,469
that's true um do you need to run a

2317
01:55:20,130 --> 01:55:24,150
successive protocol to BGP I don't

2318
01:55:22,469 --> 01:55:26,820
understand why you would need to in

2319
01:55:24,150 --> 01:55:29,009
terms of is BGP failing no it's not is

2320
01:55:26,820 --> 01:55:31,440
it scaling well it seems to be there's

2321
01:55:29,010 --> 01:55:33,599
no great sort of cracks appearing and no

2322
01:55:31,440 --> 01:55:35,848
great huge holes in performance or even

2323
01:55:33,599 --> 01:55:37,469
size as long as you've got the money you

2324
01:55:35,849 --> 01:55:39,570
can create the hardware it will keep on

2325
01:55:37,469 --> 01:55:41,099
working as a protocol there might be

2326
01:55:39,570 --> 01:55:43,259
other reasons to go to a different

2327
01:55:41,099 --> 01:55:45,570
protocol but you know BGP itself is

2328
01:55:43,260 --> 01:55:47,389
still scaling fib size line speeds

2329
01:55:45,570 --> 01:55:49,440
equipment cost sets up to you guys

2330
01:55:47,389 --> 01:55:51,300
nothing's going to get cheaper I make

2331
01:55:49,440 --> 01:55:52,888
the stuff is still going to grow and as

2332
01:55:51,300 --> 01:55:54,929
v6 grows it's going to place more

2333
01:55:52,889 --> 01:55:58,380
pressure on that what you put in your

2334
01:55:54,929 --> 01:55:59,940
cache what you are floats up to you but

2335
01:55:58,380 --> 01:56:01,679
the routing space itself is going to

2336
01:55:59,940 --> 01:56:04,558
keep on growing as far as I can see in

2337
01:56:01,679 --> 01:56:06,690
both protocols so you know if you're

2338
01:56:04,559 --> 01:56:08,070
running this stuff understand what

2339
01:56:06,690 --> 01:56:10,079
you're putting in your high-speed fib

2340
01:56:08,070 --> 01:56:11,699
cards and manage that very carefully you

2341
01:56:10,079 --> 01:56:14,099
can't ignore it it's going to get more

2342
01:56:11,699 --> 01:56:17,519
and more critical and another thing is

2343
01:56:14,099 --> 01:56:20,520
gets ignored is v4 v6 partitioning in

2344
01:56:17,520 --> 01:56:22,349
your fehb that allocation which was

2345
01:56:20,520 --> 01:56:27,030
normally static in a lot of router con

2346
01:56:22,349 --> 01:56:28,829
things Oh 10% v6 90% v4 will not work

2347
01:56:27,030 --> 01:56:32,880
even today you need to look at that

2348
01:56:28,829 --> 01:56:34,230
balance carefully and quite frankly you

2349
01:56:32,880 --> 01:56:35,760
don't need to carry every router all the

2350
01:56:34,230 --> 01:56:42,348
time you can't just default this stuff

2351
01:56:35,760 --> 01:56:46,290
outwards end of rant Randi again um

2352
01:56:42,349 --> 01:56:51,179
one place I'd quibble is the cost of the

2353
01:56:46,290 --> 01:56:53,460
hardware falls radically and and it's

2354
01:56:51,179 --> 01:56:57,780
held up artificially by market forces

2355
01:56:53,460 --> 01:56:59,730
etc etc but it really my entire you know

2356
01:56:57,780 --> 01:57:00,269
I've been in this field for 50 something

2357
01:56:59,730 --> 01:57:03,718
years

2358
01:57:00,270 --> 01:57:06,420
those damn hardware people are just

2359
01:57:03,719 --> 01:57:09,270
killer they drive the cost down and down

2360
01:57:06,420 --> 01:57:13,980
scaling up and up and up bet on them

2361
01:57:09,270 --> 01:57:16,410
don't bet on the software Meredith oh

2362
01:57:13,980 --> 01:57:19,559
you can bet on the software bugs good

2363
01:57:16,410 --> 01:57:22,740
and good margin net so I'm not that

2364
01:57:19,560 --> 01:57:24,630
worried about router scaling I'm worried

2365
01:57:22,740 --> 01:57:30,920
about the market forces driving what I

2366
01:57:24,630 --> 01:57:30,920
pay to purchase it but maybe some people

2367
01:57:31,820 --> 01:57:42,150
now they're coming to questions

2368
01:57:34,880 --> 01:57:46,710
that's me thanks a lot thank you we're

2369
01:57:42,150 --> 01:57:48,320
essentially out of time see you in three

2370
01:57:46,710 --> 01:57:53,750
months

2371
01:57:48,320 --> 01:57:53,750
what and we're done

