1
00:00:05,610 --> 00:00:12,660
- the second commenting we always have

2
00:00:10,860 --> 00:00:14,700
about two-thirds as many people in the

3
00:00:12,660 --> 00:00:17,420
second commuting than we have in the

4
00:00:14,700 --> 00:00:22,710
first meeting so this seems to be true

5
00:00:17,420 --> 00:00:25,290
this time as well it's Thursday so I

6
00:00:22,710 --> 00:00:34,219
probably don't have to say all these

7
00:00:25,290 --> 00:00:37,739
things yeah not well and everything so

8
00:00:34,219 --> 00:00:41,070
on Tuesday we already agreed that we

9
00:00:37,740 --> 00:00:45,989
will massage this agenda a little bit

10
00:00:41,070 --> 00:00:47,760
and and move fazer early and because

11
00:00:45,989 --> 00:00:51,510
it's so hard to change my slides I

12
00:00:47,760 --> 00:00:55,559
decided to redefine time instead so

13
00:00:51,510 --> 00:00:58,530
10:30 comes before 10:00 today so we

14
00:00:55,560 --> 00:01:02,640
will mostly talk about group

15
00:00:58,530 --> 00:01:09,090
communication multicast things like that

16
00:01:02,640 --> 00:01:18,658
for the first hour all the times are

17
00:01:09,090 --> 00:01:19,890
wrong here our Eastern Standard Time and

18
00:01:18,659 --> 00:01:22,560
Eastern Daylight Time

19
00:01:19,890 --> 00:01:25,920
anyway then we have we'll have a quick

20
00:01:22,560 --> 00:01:29,220
intermission for phaser and then we go

21
00:01:25,920 --> 00:01:32,280
into cinema and have a little I hope we

22
00:01:29,220 --> 00:01:35,298
have a little bit of time at the end and

23
00:01:32,280 --> 00:01:41,220
we also have a couple of ideas from

24
00:01:35,299 --> 00:01:50,070
Christian or to do at the end so any any

25
00:01:41,220 --> 00:01:56,270
other comments on the agenda so on

26
00:01:50,070 --> 00:01:59,789
Tuesday we celebrated our cat6 13 but

27
00:01:56,270 --> 00:02:04,710
maybe it's interesting to look back a

28
00:01:59,790 --> 00:02:08,129
little bit it's 2019 or 725 today so

29
00:02:04,710 --> 00:02:13,049
it's not quite 10 years but we it's

30
00:02:08,128 --> 00:02:16,519
going to be weekend on the 28th ten

31
00:02:13,049 --> 00:02:18,960
years ago we had the six low ab bob of

32
00:02:16,520 --> 00:02:23,220
which was pretty

33
00:02:18,960 --> 00:02:25,500
legendary because we had actual beer in

34
00:02:23,220 --> 00:02:28,650
a meeting room so we had an extra bar

35
00:02:25,500 --> 00:02:31,440
buff in a meeting room that was

36
00:02:28,650 --> 00:02:36,620
organized by zeg heavy who essentially

37
00:02:31,440 --> 00:02:39,720
is the man who who made co-op happen and

38
00:02:36,620 --> 00:02:41,160
it was a bob of in Stockholm so I've no

39
00:02:39,720 --> 00:02:43,500
idea how much money since you know it

40
00:02:41,160 --> 00:02:46,560
has paid for that but fortunately I'm

41
00:02:43,500 --> 00:02:48,990
bought that at some point so they got

42
00:02:46,560 --> 00:02:50,970
the money back it was an interesting bob

43
00:02:48,990 --> 00:02:52,890
off because there were at least five

44
00:02:50,970 --> 00:02:56,000
area directors in the room I think even

45
00:02:52,890 --> 00:03:00,420
more I don't don't have the exact count

46
00:02:56,000 --> 00:03:05,730
right now and that's where we decided to

47
00:03:00,420 --> 00:03:07,140
do the application layer for 6lowpan we

48
00:03:05,730 --> 00:03:10,609
would start working on an application

49
00:03:07,140 --> 00:03:13,079
layer protocol and not try to define a

50
00:03:10,610 --> 00:03:14,910
transfer protocol and the reason for the

51
00:03:13,080 --> 00:03:16,230
letter was that we thought it would take

52
00:03:14,910 --> 00:03:18,750
ten years to do that

53
00:03:16,230 --> 00:03:21,060
now then those ten years are over so the

54
00:03:18,750 --> 00:03:23,310
transfer protocol would now be done and

55
00:03:21,060 --> 00:03:25,910
I would not be available but maybe a

56
00:03:23,310 --> 00:03:28,860
little bit too late to make a difference

57
00:03:25,910 --> 00:03:31,980
anyway so this happened 10 years ago and

58
00:03:28,860 --> 00:03:34,140
took about half a year until we

59
00:03:31,980 --> 00:03:37,980
sufficiently understood our requirements

60
00:03:34,140 --> 00:03:42,059
to either draft published on December

61
00:03:37,980 --> 00:03:44,790
24th 2009 so you you either do things on

62
00:03:42,060 --> 00:03:48,000
my birthday or you do it on Christmas I

63
00:03:44,790 --> 00:03:50,760
think this is a good tradition we should

64
00:03:48,000 --> 00:03:54,120
try to pick up again the working group

65
00:03:50,760 --> 00:03:56,820
was established in March of the

66
00:03:54,120 --> 00:04:01,260
following year that's also a relatively

67
00:03:56,820 --> 00:04:03,000
normal period for the ITF and it's

68
00:04:01,260 --> 00:04:06,750
interesting to see that we actually got

69
00:04:03,000 --> 00:04:09,150
our draft approved four years after the

70
00:04:06,750 --> 00:04:11,580
initial bob off so I think that's

71
00:04:09,150 --> 00:04:15,780
already pretty good I mean given that we

72
00:04:11,580 --> 00:04:18,510
really did this from our cloth this this

73
00:04:15,780 --> 00:04:20,760
is an interesting development time and

74
00:04:18,510 --> 00:04:23,430
then of course we got held up for

75
00:04:20,760 --> 00:04:26,820
another year by a normative reference to

76
00:04:23,430 --> 00:04:31,110
a security area draft that was stuck in

77
00:04:26,820 --> 00:04:32,770
some absolutely meaningless squabble but

78
00:04:31,110 --> 00:04:37,509
that's a story on it

79
00:04:32,770 --> 00:04:41,520
so if you think about when co-op was was

80
00:04:37,509 --> 00:04:45,190
done the birthday of Webb that was 2013

81
00:04:41,520 --> 00:04:48,810
6 years ago and then we just had to wait

82
00:04:45,190 --> 00:04:51,849
for a year for office politics reasons

83
00:04:48,810 --> 00:04:55,900
anyway I thought I would throw this in

84
00:04:51,849 --> 00:04:58,810
who was present in that first year I

85
00:04:55,900 --> 00:05:03,099
know that Klaus was making first

86
00:04:58,810 --> 00:05:06,270
comments on some email from him who else

87
00:05:03,099 --> 00:05:08,680
are you as president Peter was present

88
00:05:06,270 --> 00:05:12,359
okay so if you have any questions about

89
00:05:08,680 --> 00:05:17,080
who helped you you know who to talk to

90
00:05:12,360 --> 00:05:22,830
okay so let's go into the agenda and the

91
00:05:17,080 --> 00:05:22,830
first one is oscar group communication

92
00:05:27,479 --> 00:05:34,389
hi Marco Tanaka from rice to start an

93
00:05:32,020 --> 00:05:40,810
update on the group of scored draft now

94
00:05:34,389 --> 00:05:42,789
version 5 after the meeting we got a

95
00:05:40,810 --> 00:05:45,820
number of reviews and comments again

96
00:05:42,789 --> 00:05:48,490
that considering producing these updates

97
00:05:45,820 --> 00:05:51,909
among which selected ones we're now

98
00:05:48,490 --> 00:05:54,940
referring to a tentative update or

99
00:05:51,909 --> 00:05:56,740
observation of 7390 that we've been

100
00:05:54,940 --> 00:05:58,539
working on with us was the intended

101
00:05:56,740 --> 00:06:02,610
document referred to in the first place

102
00:05:58,539 --> 00:06:05,620
for a group communication with co-op

103
00:06:02,610 --> 00:06:07,770
related thing in group of score already

104
00:06:05,620 --> 00:06:10,330
we have been describing how to handle

105
00:06:07,770 --> 00:06:13,750
possible repeated or replayed responses

106
00:06:10,330 --> 00:06:16,630
on the client considering and the token

107
00:06:13,750 --> 00:06:19,270
is retained at given time out in order

108
00:06:16,630 --> 00:06:21,370
to process possible multiple responses

109
00:06:19,270 --> 00:06:23,530
coming back to the client and right now

110
00:06:21,370 --> 00:06:25,840
we are doing essentially here in this

111
00:06:23,530 --> 00:06:28,030
document using group Oh score features

112
00:06:25,840 --> 00:06:30,280
taking into account observers an

113
00:06:28,030 --> 00:06:31,869
exception to this and after some

114
00:06:30,280 --> 00:06:36,729
discussion we think it's actually better

115
00:06:31,870 --> 00:06:39,699
to move this this future to the new

116
00:06:36,729 --> 00:06:42,279
draft with ESCO as an update to 7390 so

117
00:06:39,699 --> 00:06:44,680
to delegate this kind of check to co-op

118
00:06:42,279 --> 00:06:46,599
itself and if we do that then it's just

119
00:06:44,680 --> 00:06:53,919
no need to do it again

120
00:06:46,599 --> 00:06:57,219
in group ascore then we have extended a

121
00:06:53,919 --> 00:07:00,370
bit the actual message protection part

122
00:06:57,219 --> 00:07:03,400
introducing two externally ATS used to

123
00:07:00,370 --> 00:07:07,059
be one only before for encryption and

124
00:07:03,400 --> 00:07:10,650
signature of messages we essentially

125
00:07:07,059 --> 00:07:12,729
extended the first one with additional

126
00:07:10,650 --> 00:07:14,919
parameters related to the context

127
00:07:12,729 --> 00:07:17,979
signature algorithm and his then we

128
00:07:14,919 --> 00:07:20,289
created a second one to be used for the

129
00:07:17,979 --> 00:07:23,650
signature process only where in addition

130
00:07:20,289 --> 00:07:25,599
we further added the value of the oscar

131
00:07:23,650 --> 00:07:28,659
option that they somehow protected also

132
00:07:25,599 --> 00:07:31,569
going directly to the country's insurer

133
00:07:28,659 --> 00:07:33,279
now we agreed already on further manual

134
00:07:31,569 --> 00:07:35,249
improvements on this encoding but the

135
00:07:33,279 --> 00:07:41,529
big thing is now we have two different

136
00:07:35,249 --> 00:07:44,949
external IDs also we extend pretty much

137
00:07:41,529 --> 00:07:46,539
the security consideration section a big

138
00:07:44,949 --> 00:07:50,800
new one essentially explaining why we

139
00:07:46,539 --> 00:07:52,930
are covering also us corruption now to

140
00:07:50,800 --> 00:07:55,919
practically prevent to make practically

141
00:07:52,930 --> 00:07:58,539
invisible cross group injection attack

142
00:07:55,919 --> 00:07:59,830
that was the result of very good and

143
00:07:58,539 --> 00:08:02,800
long discussion especially with

144
00:07:59,830 --> 00:08:05,198
challenging also the security

145
00:08:02,800 --> 00:08:07,120
considerations continuing with a number

146
00:08:05,199 --> 00:08:09,189
of sections essentially aligned with the

147
00:08:07,120 --> 00:08:14,860
respective ones you had in the Oscar

148
00:08:09,189 --> 00:08:17,949
document already there are a few open

149
00:08:14,860 --> 00:08:19,539
points some earn well where is before

150
00:08:17,949 --> 00:08:22,449
and not exactly close now

151
00:08:19,539 --> 00:08:27,969
right now we are mandating to implement

152
00:08:22,449 --> 00:08:31,120
it say it did say with the 2509

153
00:08:27,969 --> 00:08:35,049
curve we wonder if this is the right

154
00:08:31,120 --> 00:08:37,810
choice if we should mandate more there

155
00:08:35,049 --> 00:08:40,649
are more details in issue 7 the data

156
00:08:37,809 --> 00:08:44,979
from John we mostly need feedback from

157
00:08:40,649 --> 00:08:46,510
deployers on this because from a street

158
00:08:44,980 --> 00:08:50,139
photography point of view we wouldn't

159
00:08:46,510 --> 00:08:54,510
make this big difference otherwise we

160
00:08:50,139 --> 00:08:54,510
would likely stick to the other curve

161
00:08:54,810 --> 00:09:00,899
then I raise again this point on the

162
00:08:57,939 --> 00:09:00,899
format of the

163
00:09:02,370 --> 00:09:07,000
Jim quick clarification on is on this

164
00:09:05,050 --> 00:09:09,779
light are both of the algorithm is

165
00:09:07,000 --> 00:09:12,430
mandatory increment or just one of them

166
00:09:09,779 --> 00:09:14,189
one only if you can see four have one

167
00:09:12,430 --> 00:09:17,439
nine right now

168
00:09:14,190 --> 00:09:19,960
so the the interesting observation is

169
00:09:17,440 --> 00:09:24,190
that we have mandatory to implement

170
00:09:19,960 --> 00:09:28,089
algorithms in in the base call document

171
00:09:24,190 --> 00:09:30,730
and that is ECDSA pasted at the moment

172
00:09:28,089 --> 00:09:35,620
via twenty seventy nine thirty five and

173
00:09:30,730 --> 00:09:38,770
so on and if we want to move to a

174
00:09:35,620 --> 00:09:40,330
different set of preferred curves that

175
00:09:38,770 --> 00:09:44,710
probably should be done in a coordinated

176
00:09:40,330 --> 00:09:47,680
fashion so so I would say it's the

177
00:09:44,710 --> 00:09:49,830
correct thing to say ECDSA now but it's

178
00:09:47,680 --> 00:09:53,560
all it's all a little bit of a push to

179
00:09:49,830 --> 00:09:57,370
one small thing is it may be time to

180
00:09:53,560 --> 00:09:59,050
move to a different default and I don't

181
00:09:57,370 --> 00:10:01,210
have the answer on that and we were

182
00:09:59,050 --> 00:10:04,479
probably not going to discuss it today

183
00:10:01,210 --> 00:10:06,430
but I think it's a good thing to do a

184
00:10:04,480 --> 00:10:08,170
really a reality check

185
00:10:06,430 --> 00:10:10,930
again what what we can do in

186
00:10:08,170 --> 00:10:13,930
implementations today and very we want

187
00:10:10,930 --> 00:10:18,359
to see this go so my assumption here is

188
00:10:13,930 --> 00:10:21,099
that it's there is no overwhelming

189
00:10:18,360 --> 00:10:22,440
technical advantage of one over the

190
00:10:21,100 --> 00:10:25,660
other

191
00:10:22,440 --> 00:10:27,610
no talk no technical overwhelming

192
00:10:25,660 --> 00:10:30,850
advantage but once you have ensure chef

193
00:10:27,610 --> 00:10:32,470
to negotiate it and so that has to be

194
00:10:30,850 --> 00:10:33,730
foreseen also in the draft and if you

195
00:10:32,470 --> 00:10:41,560
start having loadable

196
00:10:33,730 --> 00:10:44,200
algorithms sync yeah so we need agility

197
00:10:41,560 --> 00:10:47,680
so that we will have to be able to

198
00:10:44,200 --> 00:10:55,690
choose it anyway there's no way around

199
00:10:47,680 --> 00:10:58,359
adjudicate right summary yes

200
00:10:55,690 --> 00:10:59,589
I believe for the last time this open

201
00:10:58,360 --> 00:11:03,520
point of the format of the group

202
00:10:59,589 --> 00:11:05,110
identifier we are given in principle

203
00:11:03,520 --> 00:11:06,670
total freedom about that to the group

204
00:11:05,110 --> 00:11:09,300
manager to define it but we are also

205
00:11:06,670 --> 00:11:11,469
providing an example as an appendix to

206
00:11:09,300 --> 00:11:13,930
structure the group identifier in two

207
00:11:11,470 --> 00:11:15,130
parts a constant prefix that never

208
00:11:13,930 --> 00:11:16,660
change

209
00:11:15,130 --> 00:11:19,360
and the network that is essentially

210
00:11:16,660 --> 00:11:22,810
incremented every time the key material

211
00:11:19,360 --> 00:11:25,380
is register buted in the group this

212
00:11:22,810 --> 00:11:28,449
makes a number of things easier and

213
00:11:25,380 --> 00:11:31,509
ensures by construction a number of good

214
00:11:28,449 --> 00:11:35,649
properties so the question is should

215
00:11:31,509 --> 00:11:38,800
this just remain an example that of

216
00:11:35,649 --> 00:11:41,620
course is evidently convenient or should

217
00:11:38,800 --> 00:11:46,689
we stress a bit more that well this is

218
00:11:41,620 --> 00:12:00,610
at least recommended otherwise we keep

219
00:11:46,690 --> 00:12:13,269
it just as an example please keep it as

220
00:12:00,610 --> 00:12:15,850
an example I do not cut it then new open

221
00:12:13,269 --> 00:12:17,470
points cause we got to review on the

222
00:12:15,850 --> 00:12:19,750
very latest version from Ludwig

223
00:12:17,470 --> 00:12:22,300
yesterday thanks a lot for that and

224
00:12:19,750 --> 00:12:24,069
we'll process it and reply to the list

225
00:12:22,300 --> 00:12:29,800
but it was worth already highlighting

226
00:12:24,069 --> 00:12:33,040
few points from his review one is about

227
00:12:29,800 --> 00:12:35,199
the management of group identifiers of

228
00:12:33,040 --> 00:12:37,930
course by the group manager and right

229
00:12:35,199 --> 00:12:40,510
now we're saying that in the terminology

230
00:12:37,930 --> 00:12:44,469
section actually they should be unique

231
00:12:40,510 --> 00:12:46,300
just non normative even within the set

232
00:12:44,470 --> 00:12:49,720
of the whole of all the groups under the

233
00:12:46,300 --> 00:12:52,959
same group manager and the comment was

234
00:12:49,720 --> 00:12:57,730
well why don't we just demand that why

235
00:12:52,959 --> 00:12:59,589
is it not just that way now if it's

236
00:12:57,730 --> 00:13:01,089
different group manager there's nothing

237
00:12:59,589 --> 00:13:02,620
you can do fundamentally you can have

238
00:13:01,089 --> 00:13:04,240
collisions of course if the group

239
00:13:02,620 --> 00:13:05,529
managers are non synchronized and you

240
00:13:04,240 --> 00:13:07,630
just have to live with it and handle

241
00:13:05,529 --> 00:13:10,839
them at the application but under the

242
00:13:07,630 --> 00:13:13,209
same group manager perhaps we can

243
00:13:10,839 --> 00:13:15,250
actually use at least a normative sure

244
00:13:13,209 --> 00:13:16,869
to say that a sane group manager should

245
00:13:15,250 --> 00:13:18,910
not assignment the same time the same

246
00:13:16,870 --> 00:13:22,899
group ID to two or more different groups

247
00:13:18,910 --> 00:13:32,259
so this makes

248
00:13:22,899 --> 00:13:35,009
to me at least I don't understand why

249
00:13:32,259 --> 00:13:35,009
it's not a must

250
00:13:35,459 --> 00:13:41,739
they must be unique otherwise running

251
00:13:40,179 --> 00:13:47,189
things like Katy sees they're gonna be

252
00:13:41,740 --> 00:13:51,429
really really hard to preserve unique

253
00:13:47,189 --> 00:13:54,099
usually if within a single manager you

254
00:13:51,429 --> 00:13:55,410
you are permitted to provide your group

255
00:13:54,100 --> 00:14:00,399
IDs

256
00:13:55,410 --> 00:14:03,759
that's not to make people happy it's

257
00:14:00,399 --> 00:14:06,339
gonna make people unhappy enough if they

258
00:14:03,759 --> 00:14:09,240
are already if they feel alive just

259
00:14:06,339 --> 00:14:11,980
because they're different group managers

260
00:14:09,240 --> 00:14:15,610
because you're gonna end up but oh I got

261
00:14:11,980 --> 00:14:18,279
this thing and all of a sudden I need to

262
00:14:15,610 --> 00:14:24,759
go talk to the KDC to see if Michael

263
00:14:18,279 --> 00:14:26,819
McKean is real changed things we need to

264
00:14:24,759 --> 00:14:30,129
think about it

265
00:14:26,819 --> 00:14:38,920
Ludwig from Jagger must would make more

266
00:14:30,129 --> 00:14:46,959
sense to me as well so we raise this to

267
00:14:38,920 --> 00:14:53,319
the list probably okay another comment

268
00:14:46,959 --> 00:14:55,569
from the big was always Ludwig

269
00:14:53,319 --> 00:14:57,219
if group IDs collide authorizations

270
00:14:55,569 --> 00:14:59,819
referring to that group need another

271
00:14:57,220 --> 00:14:59,819
unique ID

272
00:15:04,790 --> 00:15:11,240
okay and another point from that it was

273
00:15:08,290 --> 00:15:14,140
about a security consideration section

274
00:15:11,240 --> 00:15:16,940
about key rotation where essentially

275
00:15:14,140 --> 00:15:19,430
client and server are temporarily

276
00:15:16,940 --> 00:15:22,250
misaligned on the Austral security

277
00:15:19,430 --> 00:15:25,189
context they are using so a new context

278
00:15:22,250 --> 00:15:29,180
had been distributed the client still

279
00:15:25,190 --> 00:15:30,920
has still has the old one so his law in

280
00:15:29,180 --> 00:15:32,719
switching to doing one the client

281
00:15:30,920 --> 00:15:34,760
protects a request with the old context

282
00:15:32,720 --> 00:15:37,340
sends it and it gets the server when the

283
00:15:34,760 --> 00:15:39,830
server has already fully established the

284
00:15:37,340 --> 00:15:41,030
new context if we stick to that of

285
00:15:39,830 --> 00:15:42,680
course the processing of the server

286
00:15:41,030 --> 00:15:46,730
would fail and there's an error message

287
00:15:42,680 --> 00:15:49,339
returned but in the section we we are

288
00:15:46,730 --> 00:15:52,340
admitting though highlighting is not

289
00:15:49,340 --> 00:15:55,610
exactly good to do that the server can

290
00:15:52,340 --> 00:15:58,490
shortly preserve the right previous all

291
00:15:55,610 --> 00:16:01,010
context to try to process that message

292
00:15:58,490 --> 00:16:05,420
with that context in the first

293
00:16:01,010 --> 00:16:07,610
processing fails and of course this has

294
00:16:05,420 --> 00:16:11,030
a degree of danger that we described in

295
00:16:07,610 --> 00:16:13,400
the section and I understood the comment

296
00:16:11,030 --> 00:16:16,430
from Ludwig that this should be actually

297
00:16:13,400 --> 00:16:31,060
simply forbid forbidden not be allowed

298
00:16:16,430 --> 00:16:39,130
by constructions to say something good

299
00:16:31,060 --> 00:16:41,739
so oh damn it I'm getting feedback from

300
00:16:39,130 --> 00:16:49,520
microphone

301
00:16:41,740 --> 00:16:52,490
could you know okay I'll try anyway so I

302
00:16:49,520 --> 00:16:55,460
think a much better solution but perhaps

303
00:16:52,490 --> 00:16:58,400
I overlooked some problem with that say

304
00:16:55,460 --> 00:17:00,500
you're this client who is using this old

305
00:16:58,400 --> 00:17:02,780
context and has just sent the request

306
00:17:00,500 --> 00:17:06,500
with the old context and then you

307
00:17:02,780 --> 00:17:09,800
discover this this new context why not

308
00:17:06,500 --> 00:17:13,280
just instead of saying you can keep old

309
00:17:09,800 --> 00:17:16,849
context around just say if you just send

310
00:17:13,280 --> 00:17:17,639
a request with the context that gets

311
00:17:16,849 --> 00:17:20,669
renewed

312
00:17:17,640 --> 00:17:24,270
then within a certain time frame you

313
00:17:20,670 --> 00:17:27,150
just resend your your request with the

314
00:17:24,270 --> 00:17:32,100
newer context that would be I think much

315
00:17:27,150 --> 00:17:34,680
less dangerous to recommend to do then

316
00:17:32,100 --> 00:17:43,409
keeping old context around for a certain

317
00:17:34,680 --> 00:17:45,510
amount of time trying to suggest I think

318
00:17:43,410 --> 00:17:47,340
you may risk double processing on the

319
00:17:45,510 --> 00:17:51,600
server if it happens to process both

320
00:17:47,340 --> 00:17:54,199
requests and if it's get fair enough if

321
00:17:51,600 --> 00:17:57,330
it's not yep

322
00:17:54,200 --> 00:18:00,270
Franchesca from from the floor

323
00:17:57,330 --> 00:18:05,490
also for implementations I think you'd

324
00:18:00,270 --> 00:18:08,370
be crossing the security layer and the

325
00:18:05,490 --> 00:18:10,410
application layer because you need to

326
00:18:08,370 --> 00:18:13,040
know okay I'm keeping that context I

327
00:18:10,410 --> 00:18:15,630
just repeat which means that now the

328
00:18:13,040 --> 00:18:19,820
application will have to send the second

329
00:18:15,630 --> 00:18:19,820
request I'm not sure that's a good idea

330
00:18:29,060 --> 00:18:34,440
in the other case it will get an error

331
00:18:32,940 --> 00:18:37,740
message back if you use the wrong

332
00:18:34,440 --> 00:18:38,760
security contacts yeah the case it from

333
00:18:37,740 --> 00:18:48,480
the host :

334
00:18:38,760 --> 00:18:51,530
right okay think about the security

335
00:18:48,480 --> 00:18:56,460
implications of this because it feels

336
00:18:51,530 --> 00:18:59,040
fishy we write the side effects that can

337
00:18:56,460 --> 00:19:01,140
derive from that both online if it's we

338
00:18:59,040 --> 00:19:07,170
want this to be an application policy or

339
00:19:01,140 --> 00:19:08,910
not essentially one thing to keep in

340
00:19:07,170 --> 00:19:10,500
mind here is I think we're trying to get

341
00:19:08,910 --> 00:19:13,320
at and that doesn't really work with

342
00:19:10,500 --> 00:19:15,570
ludwig's the proposal is that rekeying

343
00:19:13,320 --> 00:19:19,200
or making new contracts distributing

344
00:19:15,570 --> 00:19:22,050
them takes a long time possibly so there

345
00:19:19,200 --> 00:19:23,700
has to be a lot of forgiveness it's not

346
00:19:22,050 --> 00:19:25,980
like oh I just sent that and I got a new

347
00:19:23,700 --> 00:19:27,540
one well I better send it again it might

348
00:19:25,980 --> 00:19:29,430
be minutes or longer

349
00:19:27,540 --> 00:19:34,110
for everybody to get the new car

350
00:19:29,430 --> 00:19:36,150
so you this it's a difficult problem but

351
00:19:34,110 --> 00:19:38,550
but I think having the receivers have

352
00:19:36,150 --> 00:19:40,590
overlapping and accept either one within

353
00:19:38,550 --> 00:19:42,149
a reasonable time frame to allow

354
00:19:40,590 --> 00:19:43,679
everybody to get up to speed

355
00:19:42,150 --> 00:19:45,780
oh you're using an old key well let's

356
00:19:43,680 --> 00:19:48,030
find it's been ten minutes that's cool

357
00:19:45,780 --> 00:19:50,240
or even an hour or a day I don't care

358
00:19:48,030 --> 00:19:52,440
what it is that's application dependent

359
00:19:50,240 --> 00:19:55,890
whatever your security gun but you have

360
00:19:52,440 --> 00:19:59,670
to allow the protocol to allow a lengthy

361
00:19:55,890 --> 00:20:01,950
review process or redistribution I mean

362
00:19:59,670 --> 00:20:04,710
the more time if you haven't if custom

363
00:20:01,950 --> 00:20:07,070
government from the floor yeah to be

364
00:20:04,710 --> 00:20:10,770
here we try to limit the risk by

365
00:20:07,070 --> 00:20:12,360
defining a time limit and I think we

366
00:20:10,770 --> 00:20:13,889
need to do this here as well at that

367
00:20:12,360 --> 00:20:17,909
time and limit maybe add a year or

368
00:20:13,890 --> 00:20:21,090
something but if we have a way to

369
00:20:17,910 --> 00:20:24,570
communicate this time limit as part of a

370
00:20:21,090 --> 00:20:28,530
wiki I think we are as safe as you can

371
00:20:24,570 --> 00:20:30,480
get beautiful stuff I'm not so much

372
00:20:28,530 --> 00:20:32,910
worried about the security as about the

373
00:20:30,480 --> 00:20:34,620
ordering of the messages because so

374
00:20:32,910 --> 00:20:37,560
messages should not be allowed on the

375
00:20:34,620 --> 00:20:41,189
vulnerability core set of keys and on

376
00:20:37,560 --> 00:20:43,919
the other box so if you have several key

377
00:20:41,190 --> 00:20:46,110
sets and you want to go to the new one

378
00:20:43,920 --> 00:20:48,000
then you should not allow any messages

379
00:20:46,110 --> 00:20:50,010
with the new city set before you have to

380
00:20:48,000 --> 00:20:51,180
lift out all vista up old key set

381
00:20:50,010 --> 00:20:53,100
otherwise you have an inconsistent

382
00:20:51,180 --> 00:21:00,720
message sets and you may have problems

383
00:20:53,100 --> 00:21:02,969
efficient applications jumpshot one of

384
00:21:00,720 --> 00:21:05,640
the problems we have in terms of dealing

385
00:21:02,970 --> 00:21:11,460
with key location is we do not currently

386
00:21:05,640 --> 00:21:14,550
have any sort of standardized way of a

387
00:21:11,460 --> 00:21:17,160
KDC even telling people that the key has

388
00:21:14,550 --> 00:21:21,210
rolled over it just kind of happens in

389
00:21:17,160 --> 00:21:23,700
an ad hoc way I think we should not

390
00:21:21,210 --> 00:21:25,830
forbid the eff that the server to retain

391
00:21:23,700 --> 00:21:28,740
the old context but I think we should

392
00:21:25,830 --> 00:21:31,050
give it the option of returning a not

393
00:21:28,740 --> 00:21:33,900
authorized if it decides that the key

394
00:21:31,050 --> 00:21:37,100
context is no longer acceptable for his

395
00:21:33,900 --> 00:21:37,100
application purposes

396
00:21:42,350 --> 00:21:50,039
okay good and we have also good news

397
00:21:46,769 --> 00:21:52,350
from the hackathons we came here with

398
00:21:50,039 --> 00:21:55,019
three implementations from rice Peter

399
00:21:52,350 --> 00:21:59,009
and Jim we're an interrupt test

400
00:21:55,019 --> 00:22:02,519
according to a plan we can find here

401
00:21:59,009 --> 00:22:04,500
linked on the Eric's on github more

402
00:22:02,519 --> 00:22:07,169
results would be published on the list

403
00:22:04,500 --> 00:22:10,679
as an actual report we managed to cover

404
00:22:07,169 --> 00:22:12,899
most from the test specification all the

405
00:22:10,679 --> 00:22:14,909
run tests where we're fine somewhere

406
00:22:12,899 --> 00:22:18,090
remaining due to lack of time as to

407
00:22:14,909 --> 00:22:24,120
optional features to be tested the next

408
00:22:18,090 --> 00:22:26,879
a cat hopefully as next steps well we

409
00:22:24,120 --> 00:22:30,870
would like to of course amend the

410
00:22:26,879 --> 00:22:33,629
pending comments in the text and trying

411
00:22:30,870 --> 00:22:35,658
to wrap up also these open points after

412
00:22:33,629 --> 00:22:40,649
this discussion and possible follow-ups

413
00:22:35,659 --> 00:22:42,509
on the main list also we had to make

414
00:22:40,649 --> 00:22:44,459
some updating the text based on latest

415
00:22:42,509 --> 00:22:46,950
discussion with Jim about again the

416
00:22:44,460 --> 00:22:48,360
exact format of the external ad and just

417
00:22:46,950 --> 00:22:51,870
clarified that it's really up to the

418
00:22:48,360 --> 00:22:54,000
group manager to say that the form of

419
00:22:51,870 --> 00:22:58,258
the public is are fine they're

420
00:22:54,000 --> 00:23:01,169
consistent be using that group on top of

421
00:22:58,259 --> 00:23:03,240
this we think we can start considering

422
00:23:01,169 --> 00:23:11,730
to move the document forward to working

423
00:23:03,240 --> 00:23:13,080
with Pascal so these changes you have

424
00:23:11,730 --> 00:23:15,929
been talking about what would they

425
00:23:13,080 --> 00:23:21,210
benefit from doing another round of

426
00:23:15,929 --> 00:23:23,759
intro not the changes in the draft the

427
00:23:21,210 --> 00:23:27,269
Interop is now set to cause all the

428
00:23:23,759 --> 00:23:30,419
pending tests the final test plan yeah

429
00:23:27,269 --> 00:23:33,330
but you don't think these changes need

430
00:23:30,419 --> 00:23:36,779
to be tested when we get the interrupt

431
00:23:33,330 --> 00:23:40,230
we actually rolls the changes into the

432
00:23:36,779 --> 00:23:43,049
interrupt okay right already the

433
00:23:40,230 --> 00:23:45,649
encoding lady was contested in fact just

434
00:23:43,049 --> 00:23:45,649
missing in the text

435
00:23:48,250 --> 00:23:57,309
good so yeah that that sounds to me like

436
00:23:52,950 --> 00:23:59,830
we are moving towards going to Glasgow

437
00:23:57,309 --> 00:24:06,158
so what's the timeline for having a

438
00:23:59,830 --> 00:24:07,949
draft that reflects all this and we can

439
00:24:06,159 --> 00:24:10,419
do a few things next week but a

440
00:24:07,950 --> 00:24:13,269
submission is most likely interrogation

441
00:24:10,419 --> 00:24:16,600
actually yeah so in Europe of course we

442
00:24:13,269 --> 00:24:18,970
we have vacation period coming up which

443
00:24:16,600 --> 00:24:21,759
will be interesting for the class

444
00:24:18,970 --> 00:24:23,710
because no French person will be able to

445
00:24:21,759 --> 00:24:28,029
answer that because it will be entirely

446
00:24:23,710 --> 00:24:31,059
in August but I think September is level

447
00:24:28,029 --> 00:24:35,700
okay so let's shoot for September as the

448
00:24:31,059 --> 00:24:48,730
working class go period of this great

449
00:24:35,700 --> 00:24:50,860
next then your next okay an update on

450
00:24:48,730 --> 00:24:56,110
this at other draws very much related to

451
00:24:50,860 --> 00:24:59,350
grupo score version 3 just as a quick

452
00:24:56,110 --> 00:25:02,949
recap we we thought of this thinking of

453
00:24:59,350 --> 00:25:04,779
a new device deploying the field has to

454
00:25:02,950 --> 00:25:07,509
join a group where communication is

455
00:25:04,779 --> 00:25:09,669
secured with a group of score and has in

456
00:25:07,509 --> 00:25:11,860
the first place to find out the group

457
00:25:09,669 --> 00:25:14,559
practically found out the group manager

458
00:25:11,860 --> 00:25:17,949
and its general resource to access the

459
00:25:14,559 --> 00:25:19,870
group and we talked about way to achieve

460
00:25:17,950 --> 00:25:22,360
this using the the core resource

461
00:25:19,870 --> 00:25:24,879
directory so the idea is that the group

462
00:25:22,360 --> 00:25:26,889
manager registers itself and it's joy

463
00:25:24,879 --> 00:25:29,590
resources in the resource directory and

464
00:25:26,889 --> 00:25:31,719
then later on a journey node can find

465
00:25:29,590 --> 00:25:34,689
the links to those joy resources and

466
00:25:31,720 --> 00:25:36,610
later on approach the group manager to

467
00:25:34,690 --> 00:25:39,549
join the group and this is by the way a

468
00:25:36,610 --> 00:25:41,918
landline consistent with the approach we

469
00:25:39,549 --> 00:25:45,700
have for joining oscar groups in a is in

470
00:25:41,919 --> 00:25:47,919
a separate document and what we use for

471
00:25:45,700 --> 00:25:50,289
the join notes here it's simple resource

472
00:25:47,919 --> 00:25:53,379
lookup so in fact looking for the jury

473
00:25:50,289 --> 00:25:55,149
sources of the group manager and this is

474
00:25:53,379 --> 00:25:56,350
essentially intended for a scenario like

475
00:25:55,149 --> 00:25:58,719
this where you start defining

476
00:25:56,350 --> 00:26:01,699
application groups as collection of

477
00:25:58,720 --> 00:26:03,889
resources shared by multiple endpoints

478
00:26:01,700 --> 00:26:05,779
and then you can map one or multiple

479
00:26:03,889 --> 00:26:08,990
application groups to a same security

480
00:26:05,779 --> 00:26:12,380
group in this case all score group that

481
00:26:08,990 --> 00:26:14,480
is the same set of key material and then

482
00:26:12,380 --> 00:26:19,340
of course you have a special request

483
00:26:14,480 --> 00:26:22,549
running over multicast we have two main

484
00:26:19,340 --> 00:26:26,029
updates in this latest version we had

485
00:26:22,549 --> 00:26:30,460
the very home session describing is step

486
00:26:26,029 --> 00:26:32,210
by step example aligned with real-life

487
00:26:30,460 --> 00:26:35,539
installation procedure in a lightning

488
00:26:32,210 --> 00:26:38,720
scenario with good feedback and input

489
00:26:35,539 --> 00:26:42,019
from the robin these are the list of

490
00:26:38,720 --> 00:26:44,630
steps occurring the stamp also a first

491
00:26:42,019 --> 00:26:47,320
macro phase with first steps where a

492
00:26:44,630 --> 00:26:50,630
commissioning tool essentially setups

493
00:26:47,320 --> 00:26:53,720
the endpoints the application groups and

494
00:26:50,630 --> 00:26:55,690
the security groups and in this macro

495
00:26:53,720 --> 00:26:58,850
phase this document essentially

496
00:26:55,690 --> 00:27:00,830
describes that for so the registration

497
00:26:58,850 --> 00:27:04,908
of the security groups then we have a

498
00:27:00,830 --> 00:27:07,250
second macro phase essentially the

499
00:27:04,909 --> 00:27:08,659
joining node is the main character and

500
00:27:07,250 --> 00:27:11,149
performance to look up on the resource

501
00:27:08,659 --> 00:27:13,820
directory to get the links to the to the

502
00:27:11,149 --> 00:27:17,330
gel resources and this particular

503
00:27:13,820 --> 00:27:18,889
document actually defines step 7 because

504
00:27:17,330 --> 00:27:20,240
previous steps are just inherited from

505
00:27:18,889 --> 00:27:22,789
the resource directory for the sake of

506
00:27:20,240 --> 00:27:24,620
discovering application groups and their

507
00:27:22,789 --> 00:27:28,070
multicast IP address and then of course

508
00:27:24,620 --> 00:27:32,539
after that the join node can proceed

509
00:27:28,070 --> 00:27:35,149
with joining the group the second big

510
00:27:32,539 --> 00:27:37,940
update is that we defined a number of

511
00:27:35,149 --> 00:27:39,918
additional target attributes for the gel

512
00:27:37,940 --> 00:27:41,830
resource registered in the resource

513
00:27:39,919 --> 00:27:45,380
directory and these are essentially

514
00:27:41,830 --> 00:27:47,870
algorithms and parameters to be used in

515
00:27:45,380 --> 00:27:51,049
the oskol group so simply giving more

516
00:27:47,870 --> 00:27:53,209
information to the journey not for what

517
00:27:51,049 --> 00:27:56,360
is going to face in the group and this

518
00:27:53,210 --> 00:27:58,669
has two advantages we believe this fully

519
00:27:56,360 --> 00:28:01,309
enabled this approach as one of the

520
00:27:58,669 --> 00:28:03,769
approaches described in the ACE document

521
00:28:01,309 --> 00:28:05,899
about the joining to know very much in

522
00:28:03,769 --> 00:28:08,299
advance how the group works essentially

523
00:28:05,899 --> 00:28:09,949
in terms of algorithms and if you know

524
00:28:08,299 --> 00:28:13,460
that so in advance you can essentially

525
00:28:09,950 --> 00:28:15,470
avoid having any specific interaction

526
00:28:13,460 --> 00:28:19,460
about this with a group manager like

527
00:28:15,470 --> 00:28:21,890
explicitly or by a trial and error you

528
00:28:19,460 --> 00:28:23,630
have also second advantage upon

529
00:28:21,890 --> 00:28:26,570
performing this discovery the jury not

530
00:28:23,630 --> 00:28:28,340
can just find out that the group works

531
00:28:26,570 --> 00:28:30,860
according to algorithms that it doesn't

532
00:28:28,340 --> 00:28:32,600
support and can just decide to give up

533
00:28:30,860 --> 00:28:39,649
and forget about joining the group all

534
00:28:32,600 --> 00:28:42,260
together a few Willis a minor or open

535
00:28:39,650 --> 00:28:44,659
points about this we are defining target

536
00:28:42,260 --> 00:28:48,020
attributes here and of course you'd be

537
00:28:44,659 --> 00:28:51,020
ideal to register them but as you know

538
00:28:48,020 --> 00:28:54,530
there's no registry to register target

539
00:28:51,020 --> 00:28:58,250
attributes like a few months ago Haim I

540
00:28:54,530 --> 00:29:00,260
started document or a wiki to collect

541
00:28:58,250 --> 00:29:03,500
existing target attributes here and

542
00:29:00,260 --> 00:29:06,740
there what they are used for and so on I

543
00:29:03,500 --> 00:29:09,049
like to believe with intent to think

544
00:29:06,740 --> 00:29:10,610
more of a possible registry and then I

545
00:29:09,049 --> 00:29:13,490
remember a few Corinne three meetings

546
00:29:10,610 --> 00:29:16,490
ago just mentioning it was considering

547
00:29:13,490 --> 00:29:19,400
to revise a few related registers about

548
00:29:16,490 --> 00:29:21,049
this so I wonder if putting all this

549
00:29:19,400 --> 00:29:23,450
thing together possibly that there is

550
00:29:21,049 --> 00:29:27,830
enough critical mass to think of a

551
00:29:23,450 --> 00:29:34,909
registry for target attributes I would

552
00:29:27,830 --> 00:29:37,340
like to as a summary yeah the ability

553
00:29:34,909 --> 00:29:39,169
consisted mostly on the full step by

554
00:29:37,340 --> 00:29:41,510
step example and new parameters

555
00:29:39,169 --> 00:29:46,130
representing the algorithms in the group

556
00:29:41,510 --> 00:29:50,120
and as a result of the presentation in

557
00:29:46,130 --> 00:29:52,460
Prague from the other pad notes it's

558
00:29:50,120 --> 00:29:56,809
time to start reading it in order to

559
00:29:52,460 --> 00:30:00,830
decide for adoption so we look forward

560
00:29:56,809 --> 00:30:02,840
to receive reviews that were promises

561
00:30:00,830 --> 00:30:07,000
were promised there plus more possibly

562
00:30:02,840 --> 00:30:07,000
an adopted document

563
00:30:15,290 --> 00:30:30,980
Jim shot question number one is this

564
00:30:24,860 --> 00:30:39,330
expected to be used for pre-configured

565
00:30:30,980 --> 00:30:42,660
groups or not what do you mean with

566
00:30:39,330 --> 00:30:45,960
pre-configured the the commissioning

567
00:30:42,660 --> 00:30:48,150
system put all of the groupie material

568
00:30:45,960 --> 00:30:52,620
under the device and told it what it was

569
00:30:48,150 --> 00:30:59,820
doing and the there's no it's the

570
00:30:52,620 --> 00:31:01,739
situation where there's no KDC it's not

571
00:30:59,820 --> 00:31:03,570
covered yet in this document this is

572
00:31:01,740 --> 00:31:06,090
just about finding a pointer to the KDC

573
00:31:03,570 --> 00:31:09,929
in fact it handles the case where the

574
00:31:06,090 --> 00:31:12,270
KDC is not deployed yet actually because

575
00:31:09,930 --> 00:31:14,690
you can't observe the registration of

576
00:31:12,270 --> 00:31:17,100
the KBC at the results directory

577
00:31:14,690 --> 00:31:19,140
probably is like right but that's still

578
00:31:17,100 --> 00:31:21,990
the situation where you're planning to

579
00:31:19,140 --> 00:31:24,420
do using ABC right you should proceed

580
00:31:21,990 --> 00:31:29,790
later on with joining question number

581
00:31:24,420 --> 00:31:35,370
two as ace culture should this actually

582
00:31:29,790 --> 00:31:37,620
be in ace basically this is we're

583
00:31:35,370 --> 00:31:42,149
basically talking completely about ace

584
00:31:37,620 --> 00:31:43,530
or this is basically always work okay we

585
00:31:42,150 --> 00:31:45,960
start saying here because it's really

586
00:31:43,530 --> 00:31:48,270
based on the resource directory but and

587
00:31:45,960 --> 00:31:51,570
sure it's aligned with the a is draft

588
00:31:48,270 --> 00:31:55,860
but can support different types of KBC

589
00:31:51,570 --> 00:32:02,730
but if you think it can fit in ace and

590
00:31:55,860 --> 00:32:07,770
no strong objections to that so this

591
00:32:02,730 --> 00:32:09,420
child has an opinion on that resource

592
00:32:07,770 --> 00:32:13,020
directory is an application we have

593
00:32:09,420 --> 00:32:15,240
defined here the call working group but

594
00:32:13,020 --> 00:32:16,950
not everything that uses that

595
00:32:15,240 --> 00:32:19,680
application has to be defined in the

596
00:32:16,950 --> 00:32:21,810
cover group so given that the the the

597
00:32:19,680 --> 00:32:25,340
subject matter the content of that

598
00:32:21,810 --> 00:32:27,290
registration is mostly security

599
00:32:25,340 --> 00:32:31,459
stuff I could very well imagine doing

600
00:32:27,290 --> 00:32:36,920
this in the yes looking question number

601
00:32:31,460 --> 00:32:39,320
three we had a a side meeting on coral

602
00:32:36,920 --> 00:32:42,910
this week and one of the things we

603
00:32:39,320 --> 00:32:49,429
talked about was we need to define some

604
00:32:42,910 --> 00:32:50,990
at Ace grammar for coral do you think

605
00:32:49,430 --> 00:32:52,910
this is a reasonable document to be

606
00:32:50,990 --> 00:32:57,530
putting that in since it basically

607
00:32:52,910 --> 00:33:01,700
should run in parallel with the width

608
00:32:57,530 --> 00:33:05,139
but the lake format stuff yes though we

609
00:33:01,700 --> 00:33:05,140
need to think a lot of details

610
00:33:07,780 --> 00:33:14,330
Francesca bromine from the floor it

611
00:33:11,930 --> 00:33:18,200
would be used in this document for sure

612
00:33:14,330 --> 00:33:20,600
if the coral was defined it's the

613
00:33:18,200 --> 00:33:27,320
reasonable thing to define it in this

614
00:33:20,600 --> 00:33:29,480
document not not sure I would assume

615
00:33:27,320 --> 00:33:34,820
that basically the coral language and

616
00:33:29,480 --> 00:33:36,590
the length language would the coral

617
00:33:34,820 --> 00:33:39,850
language would be a superset of the link

618
00:33:36,590 --> 00:33:39,850
language is my assumption

619
00:33:44,720 --> 00:33:51,799
beautiful stoke it's not that I prefer

620
00:33:48,620 --> 00:33:54,320
link format of a coral or vice versa but

621
00:33:51,799 --> 00:33:56,780
I think that the people who might use it

622
00:33:54,320 --> 00:34:00,530
in the future in the short term say two

623
00:33:56,780 --> 00:34:03,590
years that those will be more used to

624
00:34:00,530 --> 00:34:05,780
link format than to coral so if you want

625
00:34:03,590 --> 00:34:07,699
to encourage the use and I think link

626
00:34:05,780 --> 00:34:11,320
form it should be a part and a coral and

627
00:34:07,700 --> 00:34:11,320
second language mm-hmm

628
00:34:12,429 --> 00:34:26,060
customers agree also know people who

629
00:34:24,050 --> 00:34:27,669
have made comments please take a look at

630
00:34:26,060 --> 00:34:31,389
the end or pad and if your comment was

631
00:34:27,668 --> 00:34:33,949
captured correctly thank you

632
00:34:31,389 --> 00:34:37,550
so we understand correctly there are

633
00:34:33,949 --> 00:34:40,609
still pending reviews in principle to be

634
00:34:37,550 --> 00:34:45,139
waited for and does this can be moved

635
00:34:40,609 --> 00:34:48,290
ways well we can just do the work

636
00:34:45,139 --> 00:34:51,500
wherever the thing is at the moment so I

637
00:34:48,290 --> 00:34:54,109
have no idea what the ace chairs think

638
00:34:51,500 --> 00:34:55,790
they need to do to pull this over

639
00:34:54,109 --> 00:34:58,330
whether there needs to be another

640
00:34:55,790 --> 00:35:03,349
adoption call how you plan to handle

641
00:34:58,330 --> 00:35:05,810
that but we don't have to wait for

642
00:35:03,349 --> 00:35:08,210
anything of this to happen we will just

643
00:35:05,810 --> 00:35:12,830
go forward so you next job is to make

644
00:35:08,210 --> 00:35:15,109
the videos right I mean it was just the

645
00:35:12,830 --> 00:35:17,690
comment was relative to the sense of

646
00:35:15,109 --> 00:35:21,200
language says we need to decide on a

647
00:35:17,690 --> 00:35:22,970
work the group adoption huh maybe if

648
00:35:21,200 --> 00:35:25,270
people should read the document comment

649
00:35:22,970 --> 00:35:25,270
on it

650
00:35:30,700 --> 00:35:41,210
okay so I think that that's all the

651
00:35:36,560 --> 00:35:43,250
questions we as chairs need to ask I

652
00:35:41,210 --> 00:35:48,130
think it would be a good thing to have

653
00:35:43,250 --> 00:35:52,670
this data model for a so however you

654
00:35:48,130 --> 00:35:55,880
want to call that so that's certainly

655
00:35:52,670 --> 00:36:02,510
something that we would be interested to

656
00:35:55,880 --> 00:36:06,800
look at as well and I also think we need

657
00:36:02,510 --> 00:36:09,320
to it's very bad strategy to correctly

658
00:36:06,800 --> 00:36:12,380
handle the corner transition without

659
00:36:09,320 --> 00:36:19,820
dumping Ling forward on the floor just

660
00:36:12,380 --> 00:36:23,660
yet Thanks so we are six minutes behind

661
00:36:19,820 --> 00:36:27,290
schedule but I think that's okay because

662
00:36:23,660 --> 00:36:28,279
we have flex time at the end so I think

663
00:36:27,290 --> 00:36:38,119
you are next

664
00:36:28,280 --> 00:36:40,990
yes yes mark again this is a new work we

665
00:36:38,119 --> 00:36:43,580
talked about defining multicast

666
00:36:40,990 --> 00:36:48,649
responses especially as observed

667
00:36:43,580 --> 00:36:52,839
notifications we we thought this to rely

668
00:36:48,650 --> 00:36:56,180
essentially you have the observers to

669
00:36:52,839 --> 00:36:58,730
7640 one is an unicast registration

670
00:36:56,180 --> 00:37:02,540
request and you get after that and

671
00:36:58,730 --> 00:37:05,270
notifications over unicast in the update

672
00:37:02,540 --> 00:37:07,880
to 7390 base we are actually defining

673
00:37:05,270 --> 00:37:09,950
well you can send a registration request

674
00:37:07,880 --> 00:37:11,839
over multicast able to target multiple

675
00:37:09,950 --> 00:37:15,470
servers and you will you will get from

676
00:37:11,839 --> 00:37:18,020
each of them unique as notifications so

677
00:37:15,470 --> 00:37:20,629
we talked of the next step what if you

678
00:37:18,020 --> 00:37:24,440
have many clients observing the same

679
00:37:20,630 --> 00:37:25,910
resource on a given server in the end

680
00:37:24,440 --> 00:37:29,000
for the sake of performance you would

681
00:37:25,910 --> 00:37:31,580
like to have that server sending a

682
00:37:29,000 --> 00:37:34,790
multicast notification to all those

683
00:37:31,580 --> 00:37:37,098
client and once and of course multicast

684
00:37:34,790 --> 00:37:39,650
responses are not defined by now and

685
00:37:37,099 --> 00:37:41,090
mostly because of the issue due to the

686
00:37:39,650 --> 00:37:44,660
token binding

687
00:37:41,090 --> 00:37:46,490
not to mention security this is true in

688
00:37:44,660 --> 00:37:50,120
general the moment you have many

689
00:37:46,490 --> 00:37:53,479
observers on the same server but we have

690
00:37:50,120 --> 00:37:56,240
a very practical use case that was

691
00:37:53,480 --> 00:37:59,210
discussed at the hallway meeting we had

692
00:37:56,240 --> 00:38:03,290
in Prague covering different aspects of

693
00:37:59,210 --> 00:38:04,940
pub/sub including this one is it

694
00:38:03,290 --> 00:38:07,550
possible to make it more efficient

695
00:38:04,940 --> 00:38:10,340
through multicast and there were four

696
00:38:07,550 --> 00:38:13,700
proposals and number four was the only

697
00:38:10,340 --> 00:38:16,190
one that was considering in fact moved

698
00:38:13,700 --> 00:38:18,470
the cast responses that of course don't

699
00:38:16,190 --> 00:38:21,440
exist they all have the advantage not

700
00:38:18,470 --> 00:38:24,069
only to use multicast for the sake of

701
00:38:21,440 --> 00:38:29,930
performance but also to keep subscribers

702
00:38:24,070 --> 00:38:32,540
client only essentially of course you

703
00:38:29,930 --> 00:38:34,810
need to solve the same general problem

704
00:38:32,540 --> 00:38:39,500
especially of token binding and possibly

705
00:38:34,810 --> 00:38:41,810
security the contribution here is

706
00:38:39,500 --> 00:38:44,990
accessible defining observed

707
00:38:41,810 --> 00:38:46,820
notifications of multicast covering the

708
00:38:44,990 --> 00:38:49,729
the management of a common token space

709
00:38:46,820 --> 00:38:52,730
that is intuitively managed by the

710
00:38:49,730 --> 00:38:56,150
server that communicates a common token

711
00:38:52,730 --> 00:38:57,800
value to all clients as they register is

712
00:38:56,150 --> 00:38:59,830
observers the resource and to be

713
00:38:57,800 --> 00:39:03,560
considered for all the following

714
00:38:59,830 --> 00:39:07,009
multicast responses also we describe how

715
00:39:03,560 --> 00:39:10,580
to you want to deploy security use group

716
00:39:07,010 --> 00:39:14,270
of score to protect those multicast

717
00:39:10,580 --> 00:39:17,360
notifications essentially indicating the

718
00:39:14,270 --> 00:39:22,390
clients how to be same consistent

719
00:39:17,360 --> 00:39:22,390
externally ad for all those responses

720
00:39:26,950 --> 00:39:34,270
yeah I think it's interesting because

721
00:39:32,610 --> 00:39:38,780
[Music]

722
00:39:34,270 --> 00:39:46,840
tokens which is our word for request

723
00:39:38,780 --> 00:39:46,840
identifiers a client namespace inquire

724
00:39:47,440 --> 00:39:52,330
so when you say they are managed by the

725
00:39:49,910 --> 00:39:52,330
server

726
00:39:52,460 --> 00:40:00,980
is very weird because a client might be

727
00:39:57,650 --> 00:40:04,820
talking to multiple servers so you would

728
00:40:00,980 --> 00:40:16,430
have to have these servers coordinate on

729
00:40:04,820 --> 00:40:18,890
that log in space yeah of course another

730
00:40:16,430 --> 00:40:22,009
problem with observe and mighty health

731
00:40:18,890 --> 00:40:24,980
response is that multicast this cannot

732
00:40:22,010 --> 00:40:27,140
be reliable so it's hard to do remote

733
00:40:24,980 --> 00:40:30,290
your consistency without doing some form

734
00:40:27,140 --> 00:40:32,509
of keep a live thing but I think that

735
00:40:30,290 --> 00:40:36,859
that's easy to fix much

736
00:40:32,510 --> 00:40:39,560
I think managing the token space is more

737
00:40:36,859 --> 00:40:44,119
difficult nd the interesting observation

738
00:40:39,560 --> 00:40:49,009
years of course that the client of a

739
00:40:44,119 --> 00:40:52,430
multicast response is the group it's not

740
00:40:49,010 --> 00:40:58,760
a single node the the entire group needs

741
00:40:52,430 --> 00:41:01,879
to agree that this token relates to the

742
00:40:58,760 --> 00:41:04,820
request that somebody put in for the

743
00:41:01,880 --> 00:41:07,849
group so that's really an architecture

744
00:41:04,820 --> 00:41:12,080
of you and I stop talking now and come

745
00:41:07,849 --> 00:41:18,770
back to it but that explains why why I

746
00:41:12,080 --> 00:41:21,589
looked at it in understanding STM's is

747
00:41:18,770 --> 00:41:25,009
on that particular comment on the client

748
00:41:21,589 --> 00:41:28,640
management of the tokens I think they

749
00:41:25,010 --> 00:41:32,960
are what matters here is that we defined

750
00:41:28,640 --> 00:41:35,540
tokens for I mean tokens token and the

751
00:41:32,960 --> 00:41:38,300
the scope of tokens is also related to

752
00:41:35,540 --> 00:41:41,779
the to the addresses involved and so far

753
00:41:38,300 --> 00:41:44,599
the all definitions that for tokens

754
00:41:41,780 --> 00:41:47,420
related to addresses where the client is

755
00:41:44,599 --> 00:41:49,190
the unicast and things are a bit

756
00:41:47,420 --> 00:41:52,460
different when the client is a multicast

757
00:41:49,190 --> 00:41:56,480
thing so we may want to have an extended

758
00:41:52,460 --> 00:41:58,820
definition of of who is responsible for

759
00:41:56,480 --> 00:42:00,950
the token management in that case so

760
00:41:58,820 --> 00:42:02,660
it's it's it's a case that is not

761
00:42:00,950 --> 00:42:04,970
defined yet so we will have to come up

762
00:42:02,660 --> 00:42:05,940
with a good definition there and then is

763
00:42:04,970 --> 00:42:07,799
something that will

764
00:42:05,940 --> 00:42:10,050
we'll probably need to do in a larger

765
00:42:07,800 --> 00:42:12,510
context that and only this document yes

766
00:42:10,050 --> 00:42:17,700
so you just said this sentence that had

767
00:42:12,510 --> 00:42:19,829
the words token and extended and you may

768
00:42:17,700 --> 00:42:22,680
want to remember we are extending the

769
00:42:19,829 --> 00:42:25,380
token right now in another place so is

770
00:42:22,680 --> 00:42:30,230
that it's um no no not not in the sense

771
00:42:25,380 --> 00:42:30,230
of extending the length of the token but

772
00:42:30,530 --> 00:42:36,089
extending the definition of where of

773
00:42:33,420 --> 00:42:39,000
where it is coped to something where

774
00:42:36,089 --> 00:42:40,740
it's not defined yet and we will find

775
00:42:39,000 --> 00:42:42,089
we'll find ways of talking abut we'll

776
00:42:40,740 --> 00:42:46,470
need to find ways of talking about the

777
00:42:42,089 --> 00:42:48,690
scope token for both yeah in just four

778
00:42:46,470 --> 00:42:49,200
cases where right now it can't be there

779
00:42:48,690 --> 00:42:52,710
at all

780
00:42:49,200 --> 00:42:54,779
and when we have it there then we'll

781
00:42:52,710 --> 00:42:57,390
need to define the semantics for that

782
00:42:54,780 --> 00:43:00,180
and the semantics or the unicast case

783
00:42:57,390 --> 00:43:02,790
we'll probably not directly be

784
00:43:00,180 --> 00:43:05,000
extensible there so they'll be different

785
00:43:02,790 --> 00:43:08,790
there because the situation is different

786
00:43:05,000 --> 00:43:11,579
before Klaus so if I'm not wrong this

787
00:43:08,790 --> 00:43:13,050
slide is about hinting and what the

788
00:43:11,579 --> 00:43:18,329
problem is and then we have more details

789
00:43:13,050 --> 00:43:20,700
about the how this draft is trying to

790
00:43:18,329 --> 00:43:22,680
solve this problem so if this is more

791
00:43:20,700 --> 00:43:24,810
comments about how can you do that then

792
00:43:22,680 --> 00:43:30,000
maybe we should wait after otherwise go

793
00:43:24,810 --> 00:43:31,950
ahead I want to briefly explain why this

794
00:43:30,000 --> 00:43:34,740
slide makes a lot of sense to me as an

795
00:43:31,950 --> 00:43:38,609
approach and when we define the original

796
00:43:34,740 --> 00:43:40,379
group comm draft we were quite possible

797
00:43:38,609 --> 00:43:43,470
for a while why does it actually mean to

798
00:43:40,380 --> 00:43:45,150
do a multicast request I mean yes you

799
00:43:43,470 --> 00:43:47,129
can easily send a multicast message that

800
00:43:45,150 --> 00:43:50,460
contains a request but what does it mean

801
00:43:47,130 --> 00:43:53,400
in terms of rest and at some point we

802
00:43:50,460 --> 00:43:56,700
came up with this fiction that is

803
00:43:53,400 --> 00:44:00,510
basically we are sending the same

804
00:43:56,700 --> 00:44:02,970
identical request unicast to every

805
00:44:00,510 --> 00:44:04,470
member of the group and then of course

806
00:44:02,970 --> 00:44:06,270
we would as per normal

807
00:44:04,470 --> 00:44:09,750
co-op specification get a unicast

808
00:44:06,270 --> 00:44:12,480
response for each and we just optimize

809
00:44:09,750 --> 00:44:15,060
these many many identical unicast

810
00:44:12,480 --> 00:44:17,490
requests by using a multicast message

811
00:44:15,060 --> 00:44:19,380
and said my the fiction is is actually

812
00:44:17,490 --> 00:44:20,310
unicast requests there just happened to

813
00:44:19,380 --> 00:44:22,290
be

814
00:44:20,310 --> 00:44:24,750
so this makes a lot of sense to me

815
00:44:22,290 --> 00:44:30,090
because it's using the same fiction

816
00:44:24,750 --> 00:44:31,830
essentially there are lots of clients

817
00:44:30,090 --> 00:44:36,120
they're going to receive notifications

818
00:44:31,830 --> 00:44:38,850
and so each of them would observe the

819
00:44:36,120 --> 00:44:41,480
Resource Center request and if each of

820
00:44:38,850 --> 00:44:44,790
this guy on sends the 100% identical

821
00:44:41,480 --> 00:44:47,270
request including the token then you can

822
00:44:44,790 --> 00:44:50,100
optimize that using a multicast message

823
00:44:47,270 --> 00:44:53,070
this is where this proposal came from at

824
00:44:50,100 --> 00:44:56,700
last ITF I think we had this discussion

825
00:44:53,070 --> 00:45:00,240
in the heck aslam well yeah this was

826
00:44:56,700 --> 00:45:02,339
presented and yes we now need to find

827
00:45:00,240 --> 00:45:05,640
out how we get all those plans to send

828
00:45:02,340 --> 00:45:09,270
the same identical a unicast requests as

829
00:45:05,640 --> 00:45:11,609
so we can optimize it but using some

830
00:45:09,270 --> 00:45:14,520
kind of token names facing us all like

831
00:45:11,610 --> 00:45:20,220
Christian separation extending the token

832
00:45:14,520 --> 00:45:21,750
with your namespace no I think we can

833
00:45:20,220 --> 00:45:26,700
figure something out because the fiction

834
00:45:21,750 --> 00:45:29,730
makes a lot of sense going was trying to

835
00:45:26,700 --> 00:45:33,330
say is that as long as possible try to

836
00:45:29,730 --> 00:45:34,890
stay within this fiction and the problem

837
00:45:33,330 --> 00:45:37,319
with the multiple cast responses that

838
00:45:34,890 --> 00:45:40,920
the client gets it when it's member of a

839
00:45:37,320 --> 00:45:43,530
multicast group so the fact that the

840
00:45:40,920 --> 00:45:45,900
client is member of multicast group may

841
00:45:43,530 --> 00:45:48,110
be somewhat orthogonal to some other

842
00:45:45,900 --> 00:45:50,610
member of the same multicast group

843
00:45:48,110 --> 00:45:53,610
putting in a request to some server

844
00:45:50,610 --> 00:45:56,820
somewhere that that server then starts

845
00:45:53,610 --> 00:46:01,220
to correspond to so the question really

846
00:45:56,820 --> 00:46:01,220
is how does this group get coordinated

847
00:46:01,760 --> 00:46:06,900
okay thanks I'll continue giving a bit

848
00:46:05,520 --> 00:46:09,750
more details on the two aspects

849
00:46:06,900 --> 00:46:12,600
separately so I first thing without

850
00:46:09,750 --> 00:46:16,280
security focusing on the token

851
00:46:12,600 --> 00:46:19,440
synchronization a few assumptions first

852
00:46:16,280 --> 00:46:21,600
we are assuming here that the client

853
00:46:19,440 --> 00:46:25,500
knows that that resource observe is that

854
00:46:21,600 --> 00:46:28,529
server we assume that the clients note

855
00:46:25,500 --> 00:46:31,320
the right multicast IP address to listen

856
00:46:28,530 --> 00:46:33,000
to just nothing right now about possible

857
00:46:31,320 --> 00:46:33,619
discovery problems that can be solved

858
00:46:33,000 --> 00:46:36,170
somehow

859
00:46:33,619 --> 00:46:37,670
differently anyway and thinking also

860
00:46:36,170 --> 00:46:39,740
grupos core we assumed that all the

861
00:46:37,670 --> 00:46:41,660
clients and the server have already

862
00:46:39,740 --> 00:46:43,999
previously joined the right of score

863
00:46:41,660 --> 00:46:49,220
group and that can also be discovered

864
00:46:43,999 --> 00:46:51,709
well you saw how the token overriding is

865
00:46:49,220 --> 00:46:54,499
essentially enforced through a new co-op

866
00:46:51,710 --> 00:46:57,170
option override token that the server

867
00:46:54,499 --> 00:47:01,249
includes in the first unicast

868
00:46:57,170 --> 00:47:03,680
notification sent to each client of

869
00:47:01,249 --> 00:47:06,049
course indicating the very same value to

870
00:47:03,680 --> 00:47:09,078
any other following client to come

871
00:47:06,049 --> 00:47:11,538
registering to that resource so it

872
00:47:09,079 --> 00:47:13,789
essentially replies of course with the

873
00:47:11,539 --> 00:47:16,160
response justö can value matches the

874
00:47:13,789 --> 00:47:18,619
token value of the request but then it's

875
00:47:16,160 --> 00:47:20,509
saying from now on you're going to get

876
00:47:18,619 --> 00:47:23,180
multicast notifications that will have

877
00:47:20,509 --> 00:47:25,220
the token value I indicate in this

878
00:47:23,180 --> 00:47:30,410
option and this is the token value for

879
00:47:25,220 --> 00:47:32,328
this observation overall I don't go into

880
00:47:30,410 --> 00:47:33,769
details when it comes about proxies but

881
00:47:32,329 --> 00:47:35,359
we have a section in the draft

882
00:47:33,769 --> 00:47:39,919
describing how this can just be

883
00:47:35,359 --> 00:47:42,980
reapplied hope I hope and Yuki you can

884
00:47:39,920 --> 00:47:45,789
keep consistency all the way back to the

885
00:47:42,980 --> 00:47:50,150
clients this option needs to be class

886
00:47:45,789 --> 00:47:52,249
Hugh for a score essentially because of

887
00:47:50,150 --> 00:47:54,739
the possible presence of proxies that

888
00:47:52,249 --> 00:47:56,538
can take away that instance and include

889
00:47:54,739 --> 00:47:58,279
their own one and of course the side

890
00:47:56,539 --> 00:48:00,950
effects of that is just the same you

891
00:47:58,279 --> 00:48:05,359
have for a proxy messing up with a main

892
00:48:00,950 --> 00:48:08,450
token field of the coop message an

893
00:48:05,359 --> 00:48:12,140
example here the registration of the

894
00:48:08,450 --> 00:48:17,058
first client approved by the server that

895
00:48:12,140 --> 00:48:22,160
replies indicating a value of F in the

896
00:48:17,059 --> 00:48:24,769
override token option it easy a client

897
00:48:22,160 --> 00:48:28,749
to registers and the same option with

898
00:48:24,769 --> 00:48:32,508
the same value is included by the server

899
00:48:28,749 --> 00:48:35,538
and then you have a multicast

900
00:48:32,509 --> 00:48:37,430
notification that has FF s token value

901
00:48:35,539 --> 00:48:40,279
and all following multicast

902
00:48:37,430 --> 00:48:43,009
notifications will have the same token

903
00:48:40,279 --> 00:48:46,549
value and this essentially makes it

904
00:48:43,009 --> 00:48:47,450
possible to to keep a matching and the

905
00:48:46,549 --> 00:48:49,910
correspondence with

906
00:48:47,450 --> 00:48:52,640
doing the observation of each of those

907
00:48:49,910 --> 00:49:02,200
client and the resource under

908
00:48:52,640 --> 00:49:06,259
observation to keep things a bit safer

909
00:49:02,200 --> 00:49:08,450
we are defining a tentative set of

910
00:49:06,260 --> 00:49:12,190
ranges of token values that of course

911
00:49:08,450 --> 00:49:14,509
are open for discussion and changes

912
00:49:12,190 --> 00:49:16,580
servers and clients that support these

913
00:49:14,510 --> 00:49:19,760
mechanisms should consider these ranges

914
00:49:16,580 --> 00:49:21,620
in the sense that the server must use

915
00:49:19,760 --> 00:49:24,140
one of these talking about is to be

916
00:49:21,620 --> 00:49:27,080
specified in that option as overridden

917
00:49:24,140 --> 00:49:29,540
token values while the client must never

918
00:49:27,080 --> 00:49:31,340
use one of these token values for

919
00:49:29,540 --> 00:49:35,690
outgoing messages with the exception of

920
00:49:31,340 --> 00:49:37,450
the observation cancellation and this

921
00:49:35,690 --> 00:49:41,330
essentially makes it possible for

922
00:49:37,450 --> 00:49:43,069
clients to keep a few things apart so

923
00:49:41,330 --> 00:49:46,880
observation served with multicast

924
00:49:43,070 --> 00:49:51,430
notifications and regular observation or

925
00:49:46,880 --> 00:49:51,430
just regular exchanges request response

926
00:49:52,330 --> 00:49:58,100
wait so I think I see some skeptical

927
00:49:55,610 --> 00:50:00,620
faces in the audience so maybe we should

928
00:49:58,100 --> 00:50:02,660
start with the questions on this part

929
00:50:00,620 --> 00:50:16,790
comments and then we move on to the

930
00:50:02,660 --> 00:50:18,470
security part Klaus I don't really know

931
00:50:16,790 --> 00:50:26,330
right now what to say except to make

932
00:50:18,470 --> 00:50:27,919
disgusted faces my solution but I want

933
00:50:26,330 --> 00:50:29,750
to rule out every other possible

934
00:50:27,920 --> 00:50:35,750
solution first before we would do

935
00:50:29,750 --> 00:50:37,610
something like this Kristen I'm says I'd

936
00:50:35,750 --> 00:50:40,010
like to come back briefly to the to that

937
00:50:37,610 --> 00:50:42,470
fiction of the unique custom messages so

938
00:50:40,010 --> 00:50:44,240
this is something that I'm not talking

939
00:50:42,470 --> 00:50:47,120
about the range of token values because

940
00:50:44,240 --> 00:50:49,270
frankly I'm a bit behind on reading up

941
00:50:47,120 --> 00:50:52,819
on why we are having a letter in there

942
00:50:49,270 --> 00:50:58,430
but the the token indicated back is

943
00:50:52,820 --> 00:51:00,640
basically the server saying I imagined

944
00:50:58,430 --> 00:51:03,618
that you could have sent this man

945
00:51:00,640 --> 00:51:06,019
from a multicast source address and

946
00:51:03,619 --> 00:51:07,579
would have used that token and of course

947
00:51:06,019 --> 00:51:11,959
you can send from the multicast source

948
00:51:07,579 --> 00:51:15,349
address but if you if you had then you

949
00:51:11,959 --> 00:51:17,328
would have used that token and I'm now

950
00:51:15,349 --> 00:51:18,529
sending I'm also sending observations

951
00:51:17,329 --> 00:51:20,269
they're based on the assumption that

952
00:51:18,529 --> 00:51:27,890
such a message has such an original

953
00:51:20,269 --> 00:51:30,529
message has arrived earlier yeah this

954
00:51:27,890 --> 00:51:32,420
slug really raises a red flag because if

955
00:51:30,529 --> 00:51:35,930
you think you needed that then you're

956
00:51:32,420 --> 00:51:39,019
doing something wrong you said it's just

957
00:51:35,930 --> 00:51:41,689
a little bit additional safety message

958
00:51:39,019 --> 00:51:44,058
but really the fact that you start

959
00:51:41,689 --> 00:51:46,578
thinking about that demonstrates that

960
00:51:44,059 --> 00:51:49,969
something is not yet right in the

961
00:51:46,579 --> 00:51:52,939
architecture and I think basically we

962
00:51:49,969 --> 00:51:55,189
have to think about this group client or

963
00:51:52,939 --> 00:51:58,969
client group or whatever that that is

964
00:51:55,189 --> 00:52:02,569
tied to the multicast and we need

965
00:51:58,969 --> 00:52:04,819
somebody who stands in for this group I

966
00:52:02,569 --> 00:52:06,799
normally would use the word proxy but

967
00:52:04,819 --> 00:52:09,319
that has a different meaning so I cannot

968
00:52:06,799 --> 00:52:13,699
use it so I'll say it's standing so that

969
00:52:09,319 --> 00:52:18,259
the the entity that represents this

970
00:52:13,699 --> 00:52:22,779
client group manages the token space for

971
00:52:18,259 --> 00:52:25,459
this triangle and what you are saying is

972
00:52:22,779 --> 00:52:28,910
we could use the server as the entity

973
00:52:25,459 --> 00:52:32,868
that does that it's not not a worse

974
00:52:28,910 --> 00:52:35,959
answer than any other except we have to

975
00:52:32,869 --> 00:52:40,819
make sure how that the server actually

976
00:52:35,959 --> 00:52:44,749
gets into a position to talk for to

977
00:52:40,819 --> 00:52:46,369
speak for this triangle and that may

978
00:52:44,749 --> 00:52:48,109
actually be a security question in the

979
00:52:46,369 --> 00:52:52,369
end so maybe we should forget the other

980
00:52:48,109 --> 00:52:54,348
slides and then revisit that issue but I

981
00:52:52,369 --> 00:52:58,549
think that the main point I'm trying to

982
00:52:54,349 --> 00:53:01,369
make is that really the multicast group

983
00:52:58,549 --> 00:53:04,400
and the set of clients would have joined

984
00:53:01,369 --> 00:53:08,269
that multicast group that is the entity

985
00:53:04,400 --> 00:53:11,779
we should be thinking about and how this

986
00:53:08,269 --> 00:53:13,950
client group makes decisions and there

987
00:53:11,779 --> 00:53:16,440
is no problem then delegating

988
00:53:13,950 --> 00:53:18,270
decisions to a particular entity but it

989
00:53:16,440 --> 00:53:21,119
really needs to speak for the whole a

990
00:53:18,270 --> 00:53:24,660
client group and not just for a single

991
00:53:21,119 --> 00:53:26,609
service service can still do that but it

992
00:53:24,660 --> 00:53:35,009
needs to be in a position to speak for

993
00:53:26,609 --> 00:53:36,779
the entire Jim John except for the fact

994
00:53:35,010 --> 00:53:41,900
that I have no idea how to fix the

995
00:53:36,780 --> 00:53:44,790
process the problem is there

996
00:53:41,900 --> 00:53:49,109
did you looking at the possible solution

997
00:53:44,790 --> 00:53:53,339
of the server advertises in the resource

998
00:53:49,109 --> 00:53:57,810
directory I am willing to entertain this

999
00:53:53,339 --> 00:53:59,790
observation as a multicast observation

1000
00:53:57,810 --> 00:54:02,099
and here's the token you should give me

1001
00:53:59,790 --> 00:54:05,490
for it

1002
00:54:02,099 --> 00:54:15,990
the first off yes the second no but it

1003
00:54:05,490 --> 00:54:22,560
makes sense to consider just Francesca

1004
00:54:15,990 --> 00:54:24,569
question for Klaus when you said want to

1005
00:54:22,560 --> 00:54:26,130
rule out other solutions first before we

1006
00:54:24,569 --> 00:54:29,599
do something like this where you

1007
00:54:26,130 --> 00:54:33,569
specifically specifically talking about

1008
00:54:29,599 --> 00:54:35,490
reserving range of token values like the

1009
00:54:33,569 --> 00:54:40,319
application reserving ranges

1010
00:54:35,490 --> 00:54:42,270
I noticed operating mechanism where you

1011
00:54:40,319 --> 00:54:44,609
first get your own token back and then

1012
00:54:42,270 --> 00:54:50,490
it goes okay double mechanism okay thank

1013
00:54:44,609 --> 00:54:54,150
you very short answer is why I don't

1014
00:54:50,490 --> 00:54:55,169
like it is because you if this

1015
00:54:54,150 --> 00:54:58,260
overriding

1016
00:54:55,170 --> 00:55:03,540
process might easily fail if you lose

1017
00:54:58,260 --> 00:55:05,280
messages and so on so that's the start

1018
00:55:03,540 --> 00:55:07,619
when I started raising my eyebrows and

1019
00:55:05,280 --> 00:55:11,040
if I'm that I on if we have all these

1020
00:55:07,619 --> 00:55:14,069
considerations of like what custom

1021
00:55:11,040 --> 00:55:18,900
mentioned we need somebody to send some

1022
00:55:14,069 --> 00:55:23,040
entity to manage this coordination and

1023
00:55:18,900 --> 00:55:26,190
we also have questions like when we when

1024
00:55:23,040 --> 00:55:27,630
all observers go away because they are

1025
00:55:26,190 --> 00:55:30,270
no longer interested

1026
00:55:27,630 --> 00:55:37,620
how does the server know that it should

1027
00:55:30,270 --> 00:55:40,410
stop and then this simple module of one

1028
00:55:37,620 --> 00:55:43,259
entity that it stands in for the group

1029
00:55:40,410 --> 00:55:45,299
it's not very reliable again because if

1030
00:55:43,260 --> 00:55:49,650
that one entity goes away because of the

1031
00:55:45,300 --> 00:55:52,920
network error then the whole group

1032
00:55:49,650 --> 00:55:55,860
breaks down and so they asked us to of

1033
00:55:52,920 --> 00:55:59,510
problems and we need to solve all of

1034
00:55:55,860 --> 00:56:01,980
them and it's not easy

1035
00:55:59,510 --> 00:56:04,470
Christine I'm just we briefly earlier

1036
00:56:01,980 --> 00:56:07,140
already discussed the possibilities of

1037
00:56:04,470 --> 00:56:10,529
having the reliability how do you know

1038
00:56:07,140 --> 00:56:14,339
when everyone is away on topic that but

1039
00:56:10,530 --> 00:56:16,710
that would indeed need respond a massive

1040
00:56:14,340 --> 00:56:20,070
to multicast that is calm that will be

1041
00:56:16,710 --> 00:56:23,340
sent all like every every tenth event or

1042
00:56:20,070 --> 00:56:26,640
so that solicits sometimes it acts from

1043
00:56:23,340 --> 00:56:28,950
still interested clients but that is not

1044
00:56:26,640 --> 00:56:30,569
aligned with the current multicast um

1045
00:56:28,950 --> 00:56:34,410
the current multicast reaches the

1046
00:56:30,570 --> 00:56:38,040
doubtful core generally the the point of

1047
00:56:34,410 --> 00:56:40,740
multicast is the network is to prune all

1048
00:56:38,040 --> 00:56:43,860
the branches that have no receivers

1049
00:56:40,740 --> 00:56:47,069
so when sender sends to magic has group

1050
00:56:43,860 --> 00:56:48,930
that nobody business to in theory that

1051
00:56:47,070 --> 00:56:51,240
is pretty inexpensive because that will

1052
00:56:48,930 --> 00:56:52,710
all be followed by the next router in

1053
00:56:51,240 --> 00:56:55,649
practice of course it's bit more

1054
00:56:52,710 --> 00:56:57,630
complicated and also it's seeded

1055
00:56:55,650 --> 00:57:00,930
consumer server resources so it would be

1056
00:56:57,630 --> 00:57:04,680
nice to find out so in various reliable

1057
00:57:00,930 --> 00:57:07,919
multicast protocols we have techniques

1058
00:57:04,680 --> 00:57:11,700
for doing route management so for

1059
00:57:07,920 --> 00:57:18,240
instance you have random members of the

1060
00:57:11,700 --> 00:57:20,040
group respond at some point to set the

1061
00:57:18,240 --> 00:57:23,160
parameters for this randomness you need

1062
00:57:20,040 --> 00:57:26,220
a group size estimate that group size

1063
00:57:23,160 --> 00:57:28,980
estimate can be derived from the current

1064
00:57:26,220 --> 00:57:32,790
size estimate plus a measurement of how

1065
00:57:28,980 --> 00:57:35,040
many actual responding which works well

1066
00:57:32,790 --> 00:57:36,570
unless you have big transients in the

1067
00:57:35,040 --> 00:57:39,180
group size then of course you get

1068
00:57:36,570 --> 00:57:40,140
implosion Zoar periods when you think

1069
00:57:39,180 --> 00:57:43,169
nobody is there

1070
00:57:40,140 --> 00:57:46,200
there is still somebody there and so on

1071
00:57:43,170 --> 00:57:49,430
and so on so all these are problems that

1072
00:57:46,200 --> 00:57:52,710
have been solved for reliable miracast

1073
00:57:49,430 --> 00:57:57,000
but what what we tried to do here was

1074
00:57:52,710 --> 00:58:00,300
not reinvent multicast so everything we

1075
00:57:57,000 --> 00:58:02,910
can do to scope the problem that we

1076
00:58:00,300 --> 00:58:05,310
don't need these mechanisms would be

1077
00:58:02,910 --> 00:58:08,100
good but it may be that in the end we

1078
00:58:05,310 --> 00:58:10,320
find out maybe this cannot be made to

1079
00:58:08,100 --> 00:58:15,569
work without inheriting at least some of

1080
00:58:10,320 --> 00:58:17,970
these packets going back to this

1081
00:58:15,570 --> 00:58:21,090
question how do you as a client find our

1082
00:58:17,970 --> 00:58:24,029
to depth a notification is attended for

1083
00:58:21,090 --> 00:58:26,220
him and what request relates to if we

1084
00:58:24,030 --> 00:58:27,900
add the security layer with Oscar and

1085
00:58:26,220 --> 00:58:31,620
all that stuff and we securely manage

1086
00:58:27,900 --> 00:58:35,400
the members of the group can we maybe

1087
00:58:31,620 --> 00:58:39,420
piggyback on that to identify what a

1088
00:58:35,400 --> 00:58:52,710
notification relates to yes no I don't

1089
00:58:39,420 --> 00:58:54,420
know just a numbers I'm not really

1090
00:58:52,710 --> 00:58:58,410
convinced that we have this problem

1091
00:58:54,420 --> 00:59:02,780
because while by the time a client is

1092
00:58:58,410 --> 00:59:06,000
receiving a response automatic on on a

1093
00:59:02,780 --> 00:59:09,930
multicast message by the time it needs

1094
00:59:06,000 --> 00:59:12,240
to it it will be aware of having

1095
00:59:09,930 --> 00:59:14,669
requested something from that particular

1096
00:59:12,240 --> 00:59:17,359
server and if it hasn't been in really

1097
00:59:14,670 --> 00:59:19,920
ignored because it's a road multicast

1098
00:59:17,360 --> 00:59:21,810
but it will come from a particular

1099
00:59:19,920 --> 00:59:24,690
server and will be scoped to a

1100
00:59:21,810 --> 00:59:27,840
particular multicast address and with

1101
00:59:24,690 --> 00:59:30,180
that the tokens are managed within the

1102
00:59:27,840 --> 00:59:32,970
server or with an whether the stand-in

1103
00:59:30,180 --> 00:59:35,460
is and I don't see how there can be

1104
00:59:32,970 --> 00:59:40,890
messages where there is ambiguity on on

1105
00:59:35,460 --> 00:59:43,400
which requests they related but the the

1106
00:59:40,890 --> 00:59:47,180
promise that this particular client

1107
00:59:43,400 --> 00:59:47,180
didn't put in the request

1108
00:59:53,490 --> 00:59:58,839
the point is in an Oscar group you can

1109
00:59:56,080 --> 01:00:04,319
have many servers so what would you

1110
00:59:58,839 --> 01:00:07,210
piggyback a group token for what server

1111
01:00:04,320 --> 01:00:09,970
the token doesn't have to be unique and

1112
01:00:07,210 --> 01:00:11,589
an entire namespace of the plant it just

1113
01:00:09,970 --> 01:00:14,669
has to be unique for the security

1114
01:00:11,589 --> 01:00:16,990
context and maybe we can manage the

1115
01:00:14,670 --> 01:00:21,400
tokens for the security context

1116
01:00:16,990 --> 01:00:22,149
somewhere centrally I think we need to

1117
01:00:21,400 --> 01:00:24,430
take this

1118
01:00:22,150 --> 01:00:26,619
we need to continue so this is very

1119
01:00:24,430 --> 01:00:30,220
interesting discussion I don't want to

1120
01:00:26,619 --> 01:00:36,820
cut it but we can take this off list as

1121
01:00:30,220 --> 01:00:38,680
well only ok this was on the main point

1122
01:00:36,820 --> 01:00:40,589
of overriding the talk and then building

1123
01:00:38,680 --> 01:00:44,259
on this you may also want to add

1124
01:00:40,589 --> 01:00:46,660
security through group or score and the

1125
01:00:44,260 --> 01:00:49,990
whole point becomes aligning all those

1126
01:00:46,660 --> 01:00:53,649
clients to be able to process the next

1127
01:00:49,990 --> 01:00:57,640
coming multicast responses and the

1128
01:00:53,650 --> 01:00:59,109
approach we adopt was making them use or

1129
01:00:57,640 --> 01:01:00,690
making them able to build the same

1130
01:00:59,109 --> 01:01:05,589
external EAB

1131
01:01:00,690 --> 01:01:09,359
this way we have a new co-op option also

1132
01:01:05,589 --> 01:01:11,710
included only in that first unicast

1133
01:01:09,359 --> 01:01:14,500
notification to the client upon

1134
01:01:11,710 --> 01:01:18,550
registration the option specifies two

1135
01:01:14,500 --> 01:01:21,190
values essentially let's say x and y x

1136
01:01:18,550 --> 01:01:26,170
is the sender ID of the server in the

1137
01:01:21,190 --> 01:01:28,720
oscar group y is the sender sequence

1138
01:01:26,170 --> 01:01:32,470
number of the server in the oscar group

1139
01:01:28,720 --> 01:01:34,118
in a particular moment when the

1140
01:01:32,470 --> 01:01:37,209
observation request from the first

1141
01:01:34,119 --> 01:01:39,520
client has come then that value is

1142
01:01:37,210 --> 01:01:42,580
consumed and not used anymore by the

1143
01:01:39,520 --> 01:01:46,020
server for any outgoing message secure

1144
01:01:42,580 --> 01:01:50,980
with that security context given this -

1145
01:01:46,020 --> 01:01:52,890
fixed in time values x and y the point

1146
01:01:50,980 --> 01:01:55,660
of the option is telling all the clients

1147
01:01:52,890 --> 01:01:57,839
when you get a secure multicast

1148
01:01:55,660 --> 01:02:02,348
notification and you want to verify it

1149
01:01:57,839 --> 01:02:05,360
build your external ad considering X as

1150
01:02:02,349 --> 01:02:08,900
a request KD and y as

1151
01:02:05,360 --> 01:02:10,580
request partial ID and those values will

1152
01:02:08,900 --> 01:02:12,530
be the same for all the following

1153
01:02:10,580 --> 01:02:15,590
multicast notifications coming from that

1154
01:02:12,530 --> 01:02:18,620
server for that resource and this can

1155
01:02:15,590 --> 01:02:20,270
definitely be a must be Class E for

1156
01:02:18,620 --> 01:02:22,520
score because it's really intended to be

1157
01:02:20,270 --> 01:02:28,490
and to end between the server and the

1158
01:02:22,520 --> 01:02:29,600
clients an example with security we

1159
01:02:28,490 --> 01:02:32,060
don't need to go line by line through

1160
01:02:29,600 --> 01:02:34,279
this traffic just to set some some

1161
01:02:32,060 --> 01:02:36,920
values that the parameters involved but

1162
01:02:34,280 --> 01:02:39,670
essentially we assume a client one and

1163
01:02:36,920 --> 01:02:41,990
this has already no score association

1164
01:02:39,670 --> 01:02:46,190
client when they separate you know score

1165
01:02:41,990 --> 01:02:49,459
security Association and C 1 C 2 and s

1166
01:02:46,190 --> 01:02:52,970
are already member of the same Oscar

1167
01:02:49,460 --> 01:02:55,310
group so building on the example of

1168
01:02:52,970 --> 01:02:58,580
above the token of the writing is just

1169
01:02:55,310 --> 01:03:00,680
the same we have a second option that

1170
01:02:58,580 --> 01:03:04,569
the server includes in the registration

1171
01:03:00,680 --> 01:03:07,520
response to the client specifying five

1172
01:03:04,570 --> 01:03:09,530
five zero one where again five is the

1173
01:03:07,520 --> 01:03:12,770
sender ID of the server in your group

1174
01:03:09,530 --> 01:03:14,450
and five zero one was the sender

1175
01:03:12,770 --> 01:03:16,400
sequence number of that server in the

1176
01:03:14,450 --> 01:03:18,109
score group upon getting the

1177
01:03:16,400 --> 01:03:21,490
registration from this first client

1178
01:03:18,110 --> 01:03:24,440
fiant one in fact right after that

1179
01:03:21,490 --> 01:03:27,799
number is staffed by one so it's

1180
01:03:24,440 --> 01:03:30,290
consumed when client who registers in

1181
01:03:27,800 --> 01:03:35,840
fact same talking of a writing same

1182
01:03:30,290 --> 01:03:37,520
option with the exact same values then

1183
01:03:35,840 --> 01:03:41,390
the multicast notification comes

1184
01:03:37,520 --> 01:03:43,160
protected with a group of score the red

1185
01:03:41,390 --> 01:03:46,940
frame was supposed to be around the

1186
01:03:43,160 --> 01:03:49,850
token field by the way sorry the point

1187
01:03:46,940 --> 01:03:52,070
is that the clients will verify this

1188
01:03:49,850 --> 01:03:57,529
response building and externally ID

1189
01:03:52,070 --> 01:03:59,780
considering five and 501s signaled in

1190
01:03:57,530 --> 01:04:01,970
the option returned in the response to

1191
01:03:59,780 --> 01:04:03,950
the registration to verify this

1192
01:04:01,970 --> 01:04:05,930
multicast response and all the following

1193
01:04:03,950 --> 01:04:09,529
ones coming from this server for this

1194
01:04:05,930 --> 01:04:12,680
resource so essentially at the first

1195
01:04:09,530 --> 01:04:15,020
unique identification to each client is

1196
01:04:12,680 --> 01:04:17,029
also bound to the following multicast

1197
01:04:15,020 --> 01:04:19,450
and deviations from the server in a

1198
01:04:17,030 --> 01:04:19,450
secure way

1199
01:04:19,970 --> 01:04:24,259
so as a summary this was about

1200
01:04:22,250 --> 01:04:26,920
introducing multicast responses

1201
01:04:24,260 --> 01:04:30,290
especially as observed notifications

1202
01:04:26,920 --> 01:04:32,960
addressing two main points first one

1203
01:04:30,290 --> 01:04:34,910
really co-op related synchronizing all

1204
01:04:32,960 --> 01:04:36,980
the clients on the same token value to

1205
01:04:34,910 --> 01:04:39,890
be used to be used in all multi

1206
01:04:36,980 --> 01:04:42,670
identification x' and also enable the

1207
01:04:39,890 --> 01:04:45,618
usage of Grupo score to protect those

1208
01:04:42,670 --> 01:04:47,300
multicast notifications so of course you

1209
01:04:45,619 --> 01:04:49,310
immediately gain the benefit coming from

1210
01:04:47,300 --> 01:04:52,099
the usage of multicast and in the

1211
01:04:49,310 --> 01:04:55,849
particular case of pub/sub application

1212
01:04:52,099 --> 01:04:59,839
you can keep the subscribers clients

1213
01:04:55,849 --> 01:05:02,300
only very good discussions already we

1214
01:04:59,839 --> 01:05:15,589
look forward for more comments or

1215
01:05:02,300 --> 01:05:17,320
reviews yeah we have had the most

1216
01:05:15,589 --> 01:05:19,940
important parts of the discussion

1217
01:05:17,320 --> 01:05:24,800
already so I think we need a clearer

1218
01:05:19,940 --> 01:05:31,250
model of who the players are clients of

1219
01:05:24,800 --> 01:05:35,690
group multicast group but may or may not

1220
01:05:31,250 --> 01:05:38,180
be exactly the same thing and if we have

1221
01:05:35,690 --> 01:05:41,920
clarified the model then maybe we also

1222
01:05:38,180 --> 01:05:52,460
can clarify the mechanisms that realize

1223
01:05:41,920 --> 01:05:56,060
the model you know right now I think

1224
01:05:52,460 --> 01:05:58,270
more reviewers wouldn't help as much

1225
01:05:56,060 --> 01:06:01,520
because we still have fundamental

1226
01:05:58,270 --> 01:06:06,339
problems so right now I think it's more

1227
01:06:01,520 --> 01:06:06,339
useful to have some ideas how to

1228
01:06:06,940 --> 01:06:14,030
recreate the required modeling in this

1229
01:06:10,630 --> 01:06:17,060
context and curves knows how to do that

1230
01:06:14,030 --> 01:06:21,290
I think we should use some of the core

1231
01:06:17,060 --> 01:06:23,630
interims yeah to this and since many of

1232
01:06:21,290 --> 01:06:26,540
us are based in Stockholm we were

1233
01:06:23,630 --> 01:06:30,230
discussing having a full-day workshop

1234
01:06:26,540 --> 01:06:32,150
even on this topic and maybe we can put

1235
01:06:30,230 --> 01:06:35,240
that on on the day where we have a core

1236
01:06:32,150 --> 01:06:36,920
Durham so we could first try to clarify

1237
01:06:35,240 --> 01:06:39,470
things and then go into that interim

1238
01:06:36,920 --> 01:06:41,180
yeah but everyone disagree then there

1239
01:06:39,470 --> 01:06:45,009
was model that work very well for suit

1240
01:06:41,180 --> 01:06:49,089
where where they had a two-day hackathon

1241
01:06:45,010 --> 01:06:51,920
in Berlin that ended in the SOOC interim

1242
01:06:49,089 --> 01:06:54,799
that was really useful and and we could

1243
01:06:51,920 --> 01:07:03,109
try to do something like that as well

1244
01:06:54,799 --> 01:07:08,049
okay thank you thank you yeah so we have

1245
01:07:03,109 --> 01:07:15,680
you used up almost all of our flex time

1246
01:07:08,049 --> 01:07:20,660
hi ESCO so you're next no no hello I

1247
01:07:15,680 --> 01:07:22,730
think you hear me well again okay then

1248
01:07:20,660 --> 01:07:25,160
I'll start with the next presentation so

1249
01:07:22,730 --> 01:07:29,390
from Marcos who lost money now going

1250
01:07:25,160 --> 01:07:33,890
back to basics and maybe shirts shirts

1251
01:07:29,390 --> 01:07:42,368
lines yes thank you so setting me up

1252
01:07:33,890 --> 01:07:45,200
date 0 1 this is also just a recap from

1253
01:07:42,369 --> 01:07:47,869
basically the previous active

1254
01:07:45,200 --> 01:07:49,640
presentation of marco gave so we have

1255
01:07:47,869 --> 01:07:53,140
this draft intended as a normative

1256
01:07:49,640 --> 01:07:56,390
successor of the experimental ourseives

1257
01:07:53,140 --> 01:07:59,420
17.0 we want to position it now as a

1258
01:07:56,390 --> 01:08:01,970
standard strength document I refer to

1259
01:07:59,420 --> 01:08:05,599
the old one as much as possible or used

1260
01:08:01,970 --> 01:08:08,209
content from there also it should be the

1261
01:08:05,599 --> 01:08:11,630
standard reference for communication

1262
01:08:08,210 --> 01:08:15,950
implementations examples are shown here

1263
01:08:11,630 --> 01:08:19,009
so this kids californium and the co

1264
01:08:15,950 --> 01:08:22,250
implementation and in the scope of this

1265
01:08:19,009 --> 01:08:26,448
draft is really coop group communication

1266
01:08:22,250 --> 01:08:28,670
using UDP IP including the latest

1267
01:08:26,448 --> 01:08:32,120
development sort of means for example or

1268
01:08:28,670 --> 01:08:34,850
I shall observe and both unsecured and

1269
01:08:32,120 --> 01:08:38,568
also a group Oscar secured location is

1270
01:08:34,850 --> 01:08:40,520
covered well in the previous draft 7390

1271
01:08:38,569 --> 01:08:43,370
that security of nodes in the present

1272
01:08:40,520 --> 01:08:45,740
yet we also want to have principles for

1273
01:08:43,370 --> 01:08:51,470
secure group configuration

1274
01:08:45,740 --> 01:08:54,740
and list of huge cases so we'll go to

1275
01:08:51,470 --> 01:08:58,790
the next slide

1276
01:08:54,740 --> 01:09:01,479
Thanks so what we did is there are three

1277
01:08:58,790 --> 01:09:04,850
slides on the progress and version one

1278
01:09:01,479 --> 01:09:07,490
the drafters updated using part of the

1279
01:09:04,850 --> 01:09:09,140
review comments and more updates based

1280
01:09:07,490 --> 01:09:11,359
on the review comments are pending so

1281
01:09:09,140 --> 01:09:12,860
already many thanks to reveal if yours

1282
01:09:11,359 --> 01:09:16,490
for that I think it's quite useful to

1283
01:09:12,859 --> 01:09:19,009
have that the scope has been clarified I

1284
01:09:16,490 --> 01:09:21,950
will come back to that in presentation

1285
01:09:19,010 --> 01:09:25,900
what that means we made a decision to

1286
01:09:21,950 --> 01:09:28,189
copy over some content from chef 390 and

1287
01:09:25,899 --> 01:09:30,200
this also gives the opportunity to

1288
01:09:28,189 --> 01:09:34,129
update that content wherever it's in

1289
01:09:30,200 --> 01:09:36,470
order to fix more issues in it also

1290
01:09:34,130 --> 01:09:39,020
there is a more detailing of the ah

1291
01:09:36,470 --> 01:09:43,490
score group key management in section 5

1292
01:09:39,020 --> 01:09:46,460
- 1 and a new structure is applied where

1293
01:09:43,490 --> 01:09:49,760
use cases and all informative elements

1294
01:09:46,460 --> 01:09:51,430
are moved to the appendix that means the

1295
01:09:49,760 --> 01:09:57,050
main body of the documents will be

1296
01:09:51,430 --> 01:10:03,170
normative text hey let's go to the next

1297
01:09:57,050 --> 01:10:05,390
slide so also we have a bit more detail

1298
01:10:03,170 --> 01:10:07,250
on the different type of groups that's

1299
01:10:05,390 --> 01:10:09,800
already came back in an earlier

1300
01:10:07,250 --> 01:10:11,000
presentation in this session just now so

1301
01:10:09,800 --> 01:10:13,250
there are different types of groups you

1302
01:10:11,000 --> 01:10:15,250
can have what is called now a co-op

1303
01:10:13,250 --> 01:10:18,620
group let's find out the network level

1304
01:10:15,250 --> 01:10:20,660
using multicast address and port there's

1305
01:10:18,620 --> 01:10:23,599
the oscar group defining the security

1306
01:10:20,660 --> 01:10:26,150
also with its own ID and an application

1307
01:10:23,600 --> 01:10:30,530
group so this can be any agent specific

1308
01:10:26,150 --> 01:10:32,269
ID what still could be done in this

1309
01:10:30,530 --> 01:10:34,219
draft to also detail bit more the

1310
01:10:32,270 --> 01:10:36,380
relations between these group types

1311
01:10:34,220 --> 01:10:40,790
one example is already shown on the

1312
01:10:36,380 --> 01:10:43,100
bottom so Joe's here one a co-op group

1313
01:10:40,790 --> 01:10:47,690
is basically associated one oscar group

1314
01:10:43,100 --> 01:10:50,630
which covers two application groups that

1315
01:10:47,690 --> 01:10:53,419
used the same security and the same as

1316
01:10:50,630 --> 01:10:55,160
others and same fourth or they can also

1317
01:10:53,420 --> 01:10:58,790
be many other relations you can also

1318
01:10:55,160 --> 01:11:00,170
have everything one-to-one or many

1319
01:10:58,790 --> 01:11:02,580
different from

1320
01:11:00,170 --> 01:11:07,800
so I think that will be useful to to

1321
01:11:02,580 --> 01:11:15,030
mention that okay then let's go to the

1322
01:11:07,800 --> 01:11:17,610
next slide so what we also detailed more

1323
01:11:15,030 --> 01:11:20,490
is how to use multi cars together with

1324
01:11:17,610 --> 01:11:22,320
observe and together way the block wise

1325
01:11:20,490 --> 01:11:26,610
transfer specifically the block one

1326
01:11:22,320 --> 01:11:30,269
option so this slide shows two kind of

1327
01:11:26,610 --> 01:11:32,940
cases of that top one chose serve so

1328
01:11:30,270 --> 01:11:36,150
multicast makes an observation to entire

1329
01:11:32,940 --> 01:11:38,419
group all the group members now adds the

1330
01:11:36,150 --> 01:11:42,839
client to the service list and start

1331
01:11:38,420 --> 01:11:46,320
sending back a unicast notifications for

1332
01:11:42,840 --> 01:11:48,330
the lower part not just put post or

1333
01:11:46,320 --> 01:11:50,700
fetch the use case is basically

1334
01:11:48,330 --> 01:11:55,170
efficient distribution of large files

1335
01:11:50,700 --> 01:11:57,330
specifically software constant so you

1336
01:11:55,170 --> 01:11:59,610
can imagine client pushes a block to a

1337
01:11:57,330 --> 01:12:03,570
group and then individual servers

1338
01:11:59,610 --> 01:12:06,030
respond back while writing this we found

1339
01:12:03,570 --> 01:12:09,110
this to be a non-trivial case and many

1340
01:12:06,030 --> 01:12:10,800
exceptions like rotation of locked eyes

1341
01:12:09,110 --> 01:12:14,070
that get lost

1342
01:12:10,800 --> 01:12:17,130
example and so it's getting already

1343
01:12:14,070 --> 01:12:19,200
rather complex with some yeah open items

1344
01:12:17,130 --> 01:12:20,700
in the drafts currently so we have to

1345
01:12:19,200 --> 01:12:23,760
make a decision there so tsuki really

1346
01:12:20,700 --> 01:12:26,220
spin out is behavior to a new idea

1347
01:12:23,760 --> 01:12:29,430
because it will otherwise slow down the

1348
01:12:26,220 --> 01:12:34,020
progress of the current one which is not

1349
01:12:29,430 --> 01:12:37,710
intended okay so this concludes the

1350
01:12:34,020 --> 01:12:40,140
updates to graph one what we added now

1351
01:12:37,710 --> 01:12:46,640
the next part will be about the scope

1352
01:12:40,140 --> 01:12:49,370
for the next slide so this is

1353
01:12:46,640 --> 01:12:51,650
of update you scope when you approach so

1354
01:12:49,370 --> 01:12:55,880
we have now marked this document to

1355
01:12:51,650 --> 01:13:00,710
obsolete the RFC 7390 so before that was

1356
01:12:55,880 --> 01:13:03,350
updates the reason to do this is that it

1357
01:13:00,710 --> 01:13:06,440
was remarked at standards track document

1358
01:13:03,350 --> 01:13:08,600
that updates an experimental RFC would

1359
01:13:06,440 --> 01:13:11,240
be kind of strange it would lead to an

1360
01:13:08,600 --> 01:13:13,640
clarity what is actually negative what

1361
01:13:11,240 --> 01:13:17,870
is experimental because the previous one

1362
01:13:13,640 --> 01:13:20,780
had only experimental stages so to make

1363
01:13:17,870 --> 01:13:22,960
it clear we should start you document

1364
01:13:20,780 --> 01:13:26,210
that actually it's the previous one and

1365
01:13:22,960 --> 01:13:28,930
then we should copy over any content we

1366
01:13:26,210 --> 01:13:31,670
wish to keep and update it as well

1367
01:13:28,930 --> 01:13:34,580
that's at least most clear so to avoid

1368
01:13:31,670 --> 01:13:37,280
any confusion on that we can still point

1369
01:13:34,580 --> 01:13:40,610
to the experimental rest protocol but

1370
01:13:37,280 --> 01:13:44,179
it's in 1790 you can say that that space

1371
01:13:40,610 --> 01:13:46,219
experiment we did not intend to make

1372
01:13:44,180 --> 01:13:49,250
that normative and people can still

1373
01:13:46,220 --> 01:13:55,270
experiment with that from that's no

1374
01:13:49,250 --> 01:13:58,100
problem at all anybody playing with it

1375
01:13:55,270 --> 01:14:05,870
no the reason it's people are all not

1376
01:13:58,100 --> 01:14:08,050
where he was looking so maybe another

1377
01:14:05,870 --> 01:14:20,180
strategy is to it's a pretty clear the

1378
01:14:08,050 --> 01:14:26,930
experiment is completed we can also do

1379
01:14:20,180 --> 01:14:33,380
that course there they can go at with

1380
01:14:26,930 --> 01:14:36,470
that okay so this is 90 and then the

1381
01:14:33,380 --> 01:14:41,230
next slide so have other updates that

1382
01:14:36,470 --> 01:14:43,760
are not so surf and ice RC specifically

1383
01:14:41,230 --> 01:14:45,769
so I didn't mention already before what

1384
01:14:43,760 --> 01:14:48,820
these are plates are so there are

1385
01:14:45,770 --> 01:14:51,620
specific uses so multicast yet with

1386
01:14:48,820 --> 01:14:55,849
block wise we have to put post or fetch

1387
01:14:51,620 --> 01:14:58,280
will work on option and these are not

1388
01:14:55,850 --> 01:14:59,780
yet defined in the RFC so that's why it

1389
01:14:58,280 --> 01:15:02,660
isn't update really

1390
01:14:59,780 --> 01:15:06,500
she's also articles now on updates

1391
01:15:02,660 --> 01:15:09,920
remarketing 72i through the purpose was

1392
01:15:06,500 --> 01:15:13,160
to renew our client request response

1393
01:15:09,920 --> 01:15:15,620
matching rule but I think it will likely

1394
01:15:13,160 --> 01:15:18,559
be removed again because after I read it

1395
01:15:15,620 --> 01:15:20,630
again with the definition of coop client

1396
01:15:18,560 --> 01:15:24,260
I think it's not needed to make any of

1397
01:15:20,630 --> 01:15:27,740
it it's already working in the intended

1398
01:15:24,260 --> 01:15:33,770
by itself we don't have to go to that's

1399
01:15:27,740 --> 01:15:38,929
character okay and then let's move on to

1400
01:15:33,770 --> 01:15:41,330
the next site oops so what we want to do

1401
01:15:38,930 --> 01:15:43,310
is complete the processing of the all

1402
01:15:41,330 --> 01:15:46,250
the review comments and maybe come

1403
01:15:43,310 --> 01:15:50,120
backwards more fixes or questions to the

1404
01:15:46,250 --> 01:15:54,890
revealed also implement the decisions of

1405
01:15:50,120 --> 01:15:56,960
also resides now to spin out this one

1406
01:15:54,890 --> 01:15:58,820
function then that should be removed

1407
01:15:56,960 --> 01:16:02,750
from the kern draft and made in circuit

1408
01:15:58,820 --> 01:16:04,969
now and on the lower end of course

1409
01:16:02,750 --> 01:16:09,170
completed document so we have to still

1410
01:16:04,970 --> 01:16:13,130
copy over remaining sections review them

1411
01:16:09,170 --> 01:16:16,310
again of the content if needed fill in

1412
01:16:13,130 --> 01:16:18,200
some open interested dvds and if

1413
01:16:16,310 --> 01:16:21,490
anything we have to possibly add missing

1414
01:16:18,200 --> 01:16:23,780
points so there there are ways

1415
01:16:21,490 --> 01:16:26,179
constantly asking for input so if

1416
01:16:23,780 --> 01:16:30,050
everything is missing then we'd like to

1417
01:16:26,180 --> 01:16:32,510
know about it i think there is no direct

1418
01:16:30,050 --> 01:16:35,270
need for document reviews now this

1419
01:16:32,510 --> 01:16:39,710
version people can go ahead but I think

1420
01:16:35,270 --> 01:16:41,240
the coming zero to update where some of

1421
01:16:39,710 --> 01:16:43,550
the above things are implemented it

1422
01:16:41,240 --> 01:16:48,290
would be useful to have again more

1423
01:16:43,550 --> 01:16:53,990
reviews of this okay so this concludes

1424
01:16:48,290 --> 01:16:56,510
my presentation for any comments or

1425
01:16:53,990 --> 01:17:00,130
questions or good ideas rolls welcome

1426
01:16:56,510 --> 01:17:00,130
welcome now on the mailing list

1427
01:17:03,820 --> 01:17:09,190
yeah and also thanks for allowing this

1428
01:17:05,770 --> 01:17:27,940
remote presentation that's extremely

1429
01:17:09,190 --> 01:17:30,700
handy for me thanks yeah so what is what

1430
01:17:27,940 --> 01:17:38,950
is the temperature reading of the room

1431
01:17:30,700 --> 01:17:46,599
do we like what we have seen a few nods

1432
01:17:38,950 --> 01:17:52,000
a few slow nods but I think the overall

1433
01:17:46,600 --> 01:17:56,370
feedback is good so I think we are we

1434
01:17:52,000 --> 01:18:00,370
should be encouraging you to continue

1435
01:17:56,370 --> 01:18:03,750
this work and maybe we actually can make

1436
01:18:00,370 --> 01:18:08,349
a decision in the next few weeks that we

1437
01:18:03,750 --> 01:18:10,870
consider the experimental the experiment

1438
01:18:08,350 --> 01:18:13,420
on the experimental interface for group

1439
01:18:10,870 --> 01:18:16,000
management as completed because we are

1440
01:18:13,420 --> 01:18:18,090
not aware about orientation but of

1441
01:18:16,000 --> 01:18:23,590
course we should do that on the list

1442
01:18:18,090 --> 01:18:26,230
that might simplify things but what is

1443
01:18:23,590 --> 01:18:28,740
the timeline that we are thinking about

1444
01:18:26,230 --> 01:18:28,740
here

1445
01:18:55,560 --> 01:19:02,700
so I think about yeah maybe by next ITF

1446
01:18:58,900 --> 01:19:06,690
thinking yeah if you have excursion

1447
01:19:02,700 --> 01:19:06,690
become a working on documents

1448
01:19:09,490 --> 01:19:17,110
now in the room who would be interested

1449
01:19:12,310 --> 01:19:25,510
in reviewing such a document I'm seeing

1450
01:19:17,110 --> 01:19:28,299
Jim Christian Klaus yeah and cost that's

1451
01:19:25,510 --> 01:19:31,530
good so we have interest in reviewing in

1452
01:19:28,300 --> 01:19:42,100
the world so again I think that that is

1453
01:19:31,530 --> 01:19:49,030
signal thank us Co X so we are now 30

1454
01:19:42,100 --> 01:19:58,260
minutes behind schedule and the the next

1455
01:19:49,030 --> 01:19:58,259
item the next thing is

1456
01:20:11,530 --> 01:20:22,160
well cool okay so this is the fire craft

1457
01:20:20,600 --> 01:20:28,730
this joint work with

1458
01:20:22,160 --> 01:20:30,590
ilpo p110 so for those of you who

1459
01:20:28,730 --> 01:20:32,959
probably don't remember what fire is all

1460
01:20:30,590 --> 01:20:37,100
about it's an alternative RTO and

1461
01:20:32,960 --> 01:20:39,680
consistent control offering for co-op so

1462
01:20:37,100 --> 01:20:43,630
as an alternative it's just like cocoa

1463
01:20:39,680 --> 01:20:48,380
it's optional to implement so for those

1464
01:20:43,630 --> 01:20:53,620
implementers who think they may benefit

1465
01:20:48,380 --> 01:20:57,500
from from more efficient of recovery in

1466
01:20:53,620 --> 01:21:00,530
in presence of corruption as well as

1467
01:20:57,500 --> 01:21:03,740
more safe consistent control so those

1468
01:21:00,530 --> 01:21:08,150
improv implementers made in implementing

1469
01:21:03,740 --> 01:21:09,980
it it's in we have implemented for leap

1470
01:21:08,150 --> 01:21:12,219
co-op and experiment experimented with

1471
01:21:09,980 --> 01:21:15,889
it and we have published the results in

1472
01:21:12,220 --> 01:21:17,810
kokum december last year so basically

1473
01:21:15,890 --> 01:21:20,720
the first sanity check off that it works

1474
01:21:17,810 --> 01:21:25,850
and behaves like the intended and and

1475
01:21:20,720 --> 01:21:28,220
provides the the internet results that

1476
01:21:25,850 --> 01:21:31,460
have been done as far as we know there

1477
01:21:28,220 --> 01:21:35,330
is at least one independent

1478
01:21:31,460 --> 01:21:37,850
implementation upcoming and and and also

1479
01:21:35,330 --> 01:21:41,650
the experiments hopefully this happens

1480
01:21:37,850 --> 01:21:47,390
and it's all welcome to get more

1481
01:21:41,650 --> 01:21:51,860
experimentation on on this quick history

1482
01:21:47,390 --> 01:21:54,920
so the tea was first published about a

1483
01:21:51,860 --> 01:21:58,490
year ago so the pre before the last

1484
01:21:54,920 --> 01:22:01,690
montreal meeting as a tradition is in

1485
01:21:58,490 --> 01:22:05,510
the transport area new consistent

1486
01:22:01,690 --> 01:22:07,900
contributed in the ICC Archie for review

1487
01:22:05,510 --> 01:22:09,770
and it was also on the agenda for

1488
01:22:07,900 --> 01:22:11,929
Corbett there was not enough time to

1489
01:22:09,770 --> 01:22:14,660
present it so we published it zero one

1490
01:22:11,930 --> 01:22:17,660
person in just before the Bangkok

1491
01:22:14,660 --> 01:22:20,840
meeting we added zero code and some

1492
01:22:17,660 --> 01:22:23,540
small clarifications and presented it in

1493
01:22:20,840 --> 01:22:27,560
core so it was discussed here

1494
01:22:23,540 --> 01:22:30,710
and then waiting for the baddy group

1495
01:22:27,560 --> 01:22:33,440
eruption it expired and we just to

1496
01:22:30,710 --> 01:22:35,480
refresh the document and updated it a

1497
01:22:33,440 --> 01:22:37,009
couple of weeks back so nobody vacation

1498
01:22:35,480 --> 01:22:41,019
so baby from the author's point of view

1499
01:22:37,010 --> 01:22:45,830
it has been stable for one year now and

1500
01:22:41,020 --> 01:22:47,750
about intended studies this is a little

1501
01:22:45,830 --> 01:22:50,510
bit maybe different that so that's

1502
01:22:47,750 --> 01:22:51,950
already happened here in the decor so in

1503
01:22:50,510 --> 01:22:54,680
the transport area for the new

1504
01:22:51,950 --> 01:22:58,000
consistent control work the transport

1505
01:22:54,680 --> 01:23:01,220
area is very conservative so inherently

1506
01:22:58,000 --> 01:23:05,690
almost all work is intended as a

1507
01:23:01,220 --> 01:23:09,400
standard track but there is the the

1508
01:23:05,690 --> 01:23:14,990
tradition and and actually the rules

1509
01:23:09,400 --> 01:23:17,780
that are described in RC 50:33 that is

1510
01:23:14,990 --> 01:23:19,940
how new conditional control work should

1511
01:23:17,780 --> 01:23:21,559
be handled in IETF which is that all

1512
01:23:19,940 --> 01:23:25,099
work should be first published as

1513
01:23:21,560 --> 01:23:27,830
experimental to idea being that that

1514
01:23:25,100 --> 01:23:29,840
that we get enough experimentation to

1515
01:23:27,830 --> 01:23:33,440
ensure that the mechanism works and it's

1516
01:23:29,840 --> 01:23:36,980
safe for the internet and that is a step

1517
01:23:33,440 --> 01:23:38,870
then once this has happened the enough

1518
01:23:36,980 --> 01:23:41,750
experimentation has done has been done

1519
01:23:38,870 --> 01:23:44,120
then did that we moved to the standards

1520
01:23:41,750 --> 01:23:47,000
track and we think this is the right

1521
01:23:44,120 --> 01:23:50,090
thing for these to do the same thing

1522
01:23:47,000 --> 01:23:53,630
because these his SS really conscious

1523
01:23:50,090 --> 01:23:58,060
non control work so the Western insist

1524
01:23:53,630 --> 01:23:58,060
is ready for working group Arab eruption

1525
01:24:01,960 --> 01:24:08,900
yeah we discussed this at the last

1526
01:24:06,100 --> 01:24:13,430
meeting where do we do mr. meet last hug

1527
01:24:08,900 --> 01:24:16,519
I don't and we we had said that the

1528
01:24:13,430 --> 01:24:18,830
problem we had before with group

1529
01:24:16,520 --> 01:24:22,640
adoption that we didn't we know what

1530
01:24:18,830 --> 01:24:27,350
what the IPR declaration really was that

1531
01:24:22,640 --> 01:24:30,830
problem had gone away we now had a

1532
01:24:27,350 --> 01:24:33,320
detailed IPR declaration but of course

1533
01:24:30,830 --> 01:24:35,510
still everybody had to figure out

1534
01:24:33,320 --> 01:24:36,340
whether that detailed IPR declaration

1535
01:24:35,510 --> 01:24:39,460
was

1536
01:24:36,340 --> 01:24:41,590
something they want to live with or not

1537
01:24:39,460 --> 01:24:48,330
so that that was the kind of what we

1538
01:24:41,590 --> 01:24:48,330
went out of the Prague meeting with and

1539
01:24:48,480 --> 01:24:55,269
yeah we could have done a wagon road

1540
01:24:51,430 --> 01:25:00,430
option call right away we didn't do that

1541
01:24:55,270 --> 01:25:05,140
so people have had about four months of

1542
01:25:00,430 --> 01:25:07,690
time looking at the situation and I'm

1543
01:25:05,140 --> 01:25:09,460
just wondering do we have new data or we

1544
01:25:07,690 --> 01:25:13,389
already get new data by actually during

1545
01:25:09,460 --> 01:25:16,990
the the work group adoption call so has

1546
01:25:13,390 --> 01:25:22,210
anybody looked at this into this and has

1547
01:25:16,990 --> 01:25:25,389
a position whether this is an IPO

1548
01:25:22,210 --> 01:25:32,020
declaration we can live with so I see

1549
01:25:25,390 --> 01:25:36,070
one person nodding I reckon I am

1550
01:25:32,020 --> 01:25:41,200
I had a look at it looks fine good two

1551
01:25:36,070 --> 01:25:43,030
person two people are nodding so it

1552
01:25:41,200 --> 01:25:50,170
looks like we should just do the

1553
01:25:43,030 --> 01:25:53,519
adoption for now great so let's do that

1554
01:25:50,170 --> 01:25:53,520
okay thanks

1555
01:26:06,910 --> 01:26:23,389
so next is a ton of anybody can help

1556
01:26:20,360 --> 01:26:28,089
with the minute taking since Ari was one

1557
01:26:23,390 --> 01:26:28,090
of the two thank you thank you sir

1558
01:26:31,600 --> 01:26:38,180
somewhere here okay good

1559
01:26:36,200 --> 01:26:41,210
sentiment data value content format

1560
01:26:38,180 --> 01:26:42,680
indication quick recap what the whole

1561
01:26:41,210 --> 01:26:45,200
graphs about this all was all

1562
01:26:42,680 --> 01:26:47,750
represented at the last IETF but to

1563
01:26:45,200 --> 01:26:49,760
remind you so this about binary values

1564
01:26:47,750 --> 01:26:52,489
in sentinel data records we have this VD

1565
01:26:49,760 --> 01:26:55,310
field then you can basically have binary

1566
01:26:52,489 --> 01:26:57,410
bits and bytes stuffed in you base64

1567
01:26:55,310 --> 01:26:59,900
encode it in in json or you put it as

1568
01:26:57,410 --> 01:27:01,730
such in Siebel format and that's how it

1569
01:26:59,900 --> 01:27:06,710
looks like as the example shows in the

1570
01:27:01,730 --> 01:27:08,660
slide the red part so this draft one

1571
01:27:06,710 --> 01:27:11,300
presenting the idea was that we could

1572
01:27:08,660 --> 01:27:13,280
indicate as a content format of that

1573
01:27:11,300 --> 01:27:15,760
data so it's no longer just arbitrary

1574
01:27:13,280 --> 01:27:18,590
data makes it easier for especially

1575
01:27:15,760 --> 01:27:20,510
middle boxes or other systems outside of

1576
01:27:18,590 --> 01:27:22,960
this single sentiment exchange to I

1577
01:27:20,510 --> 01:27:25,220
understand what's going on in the data

1578
01:27:22,960 --> 01:27:27,410
so the idea is that we add this new

1579
01:27:25,220 --> 01:27:29,630
field called city where we can indicate

1580
01:27:27,410 --> 01:27:32,059
the content format for example here you

1581
01:27:29,630 --> 01:27:34,370
have basically four encoded sibour array

1582
01:27:32,060 --> 01:27:37,550
with two values inside it and because it

1583
01:27:34,370 --> 01:27:39,140
says city is 60 receiver can easily

1584
01:27:37,550 --> 01:27:44,239
figure out its eeper it should be

1585
01:27:39,140 --> 01:27:45,770
decoding that was the background what we

1586
01:27:44,239 --> 01:27:48,950
discussed already in the last IETF that

1587
01:27:45,770 --> 01:27:51,500
it's useful to have not only the content

1588
01:27:48,950 --> 01:27:52,849
format IDs but also the string format

1589
01:27:51,500 --> 01:27:56,060
that then you can express any kind of

1590
01:27:52,850 --> 01:27:57,860
high content types and content coatings

1591
01:27:56,060 --> 01:28:01,970
that are possibly not already registered

1592
01:27:57,860 --> 01:28:04,160
as content formats however as we learned

1593
01:28:01,970 --> 01:28:07,210
in the discusses the previous ideas if

1594
01:28:04,160 --> 01:28:09,739
we do the obvious thing and just

1595
01:28:07,210 --> 01:28:11,450
register basically three different

1596
01:28:09,739 --> 01:28:13,879
fields for these three different

1597
01:28:11,450 --> 01:28:15,590
purposes it gets a bit complicated on

1598
01:28:13,880 --> 01:28:17,119
you have various different

1599
01:28:15,590 --> 01:28:19,520
since how we can use them and especially

1600
01:28:17,119 --> 01:28:21,290
if you define because you cannot have in

1601
01:28:19,520 --> 01:28:23,449
the same record both the string format

1602
01:28:21,290 --> 01:28:25,790
and and a numeric format cuz they would

1603
01:28:23,449 --> 01:28:27,589
be unless it's conflicting it gets

1604
01:28:25,790 --> 01:28:31,190
pretty messy with precedence rules and

1605
01:28:27,590 --> 01:28:32,780
how you undo one or the other so what we

1606
01:28:31,190 --> 01:28:34,280
did after last night if we look at this

1607
01:28:32,780 --> 01:28:38,030
problem and try to figure out would be a

1608
01:28:34,280 --> 01:28:40,639
cleaner way solve this and it seems that

1609
01:28:38,030 --> 01:28:43,040
the best way we could come up with is

1610
01:28:40,639 --> 01:28:46,400
that okay we would use only one single

1611
01:28:43,040 --> 01:28:50,869
field CD field but it could have either

1612
01:28:46,400 --> 01:28:52,820
a numeric or a string value so there's a

1613
01:28:50,869 --> 01:28:56,179
couple of small complications to it one

1614
01:28:52,820 --> 01:28:58,369
of them is that in the content coding

1615
01:28:56,179 --> 01:28:59,840
and and media types you can have they're

1616
01:28:58,369 --> 01:29:03,739
two different separate fields when it

1617
01:28:59,840 --> 01:29:05,000
comes to HTTP and we would now need to

1618
01:29:03,739 --> 01:29:08,809
actually put the both piece of

1619
01:29:05,000 --> 01:29:10,400
information in a single string so what

1620
01:29:08,810 --> 01:29:12,889
we are suggesting in this trash person

1621
01:29:10,400 --> 01:29:16,670
is that we would have this add suffix

1622
01:29:12,889 --> 01:29:22,070
index so you could have for example text

1623
01:29:16,670 --> 01:29:25,639
a CSV at GC so that would be away on a

1624
01:29:22,070 --> 01:29:28,239
single string to express port and the

1625
01:29:25,639 --> 01:29:31,369
media type and the coding of that type

1626
01:29:28,239 --> 01:29:33,379
or if there's no content coding you just

1627
01:29:31,369 --> 01:29:35,739
wouldn't use that time tenancy exactly

1628
01:29:33,380 --> 01:29:40,219
identical to the to the previous

1629
01:29:35,739 --> 01:29:43,820
proposal so that was one part of it

1630
01:29:40,219 --> 01:29:45,349
attenders the second part it would have

1631
01:29:43,820 --> 01:29:47,809
been again natural design that you would

1632
01:29:45,349 --> 01:29:51,739
have either a string or a numeric value

1633
01:29:47,810 --> 01:29:54,380
or for the cinema field value however as

1634
01:29:51,739 --> 01:29:56,598
Colin pointed out there's a bunch of

1635
01:29:54,380 --> 01:29:58,909
complications in that approach so one of

1636
01:29:56,599 --> 01:30:01,040
the kind of original design ideas of

1637
01:29:58,909 --> 01:30:03,830
sentiment was that all fields have a

1638
01:30:01,040 --> 01:30:06,530
single fixed type so that's what we have

1639
01:30:03,830 --> 01:30:09,219
for example the field for numeric values

1640
01:30:06,530 --> 01:30:11,449
and vs through field for string values

1641
01:30:09,219 --> 01:30:13,070
the benefits of doing it this way around

1642
01:30:11,449 --> 01:30:14,299
that you have more efficient to parse if

1643
01:30:13,070 --> 01:30:15,949
you do it in high speed you don't need

1644
01:30:14,300 --> 01:30:18,320
to do type checks of what kind of values

1645
01:30:15,949 --> 01:30:20,059
the string or ISTA it's the integral in

1646
01:30:18,320 --> 01:30:22,190
there in the value part you can also

1647
01:30:20,060 --> 01:30:23,840
generate parser code more efficient for

1648
01:30:22,190 --> 01:30:25,638
different languages and if you're

1649
01:30:23,840 --> 01:30:28,070
storing this in a database with a simple

1650
01:30:25,639 --> 01:30:29,560
schema again it gets it it's simpler to

1651
01:30:28,070 --> 01:30:33,019
use it that way

1652
01:30:29,560 --> 01:30:35,060
so then the question was how could we go

1653
01:30:33,020 --> 01:30:38,270
with this numeric and string formats

1654
01:30:35,060 --> 01:30:41,780
with a single field well the obvious

1655
01:30:38,270 --> 01:30:45,800
solution is we express the number as a

1656
01:30:41,780 --> 01:30:47,929
string so I've been talking about with

1657
01:30:45,800 --> 01:30:50,330
some of you here and this idea for me I

1658
01:30:47,930 --> 01:30:51,830
usually get some raised eyebrows when I

1659
01:30:50,330 --> 01:30:54,800
mentioned the first time because it kind

1660
01:30:51,830 --> 01:30:57,500
of feels like we're design however when

1661
01:30:54,800 --> 01:30:58,940
we're thinking about this more kind of

1662
01:30:57,500 --> 01:31:01,970
from practical engineering point of view

1663
01:30:58,940 --> 01:31:03,889
it's rather small overhead in in JSON

1664
01:31:01,970 --> 01:31:05,000
format basically just put quotes around

1665
01:31:03,890 --> 01:31:07,160
and you're done

1666
01:31:05,000 --> 01:31:09,320
in Seymour format yes it's going to be a

1667
01:31:07,160 --> 01:31:12,430
string and instead of Ewing so you lose

1668
01:31:09,320 --> 01:31:16,670
a few bytes efficiency on the wire

1669
01:31:12,430 --> 01:31:18,140
however these values you at least how we

1670
01:31:16,670 --> 01:31:20,030
envision them being used you don't

1671
01:31:18,140 --> 01:31:22,310
really do any any arithmetic soren like

1672
01:31:20,030 --> 01:31:24,320
that you basically just compare is the

1673
01:31:22,310 --> 01:31:27,530
city what I expected it to be

1674
01:31:24,320 --> 01:31:30,170
or perhaps sexy the city matches a small

1675
01:31:27,530 --> 01:31:31,730
set of values that you're expecting so

1676
01:31:30,170 --> 01:31:33,800
it doesn't make that big a difference

1677
01:31:31,730 --> 01:31:35,929
what are you doing string comparison or

1678
01:31:33,800 --> 01:31:40,460
a and marek comparison it's a small

1679
01:31:35,930 --> 01:31:43,700
overhead but but not a maximum so that's

1680
01:31:40,460 --> 01:31:50,470
why it seems that that would be the best

1681
01:31:43,700 --> 01:31:52,580
way forward so that's basically the

1682
01:31:50,470 --> 01:31:55,190
update on this traffic and then a bunch

1683
01:31:52,580 --> 01:31:58,100
of questions to the group so first of

1684
01:31:55,190 --> 01:32:02,660
all are they any concern so using this

1685
01:31:58,100 --> 01:32:05,660
string value for content formats so we

1686
01:32:02,660 --> 01:32:10,730
are using both the numeric value and the

1687
01:32:05,660 --> 01:32:14,210
string value in the same same field also

1688
01:32:10,730 --> 01:32:16,910
this new format where we'd say use this

1689
01:32:14,210 --> 01:32:18,800
at content coding soon that's I think

1690
01:32:16,910 --> 01:32:22,070
that's the first time we are doing that

1691
01:32:18,800 --> 01:32:24,800
kind of a design is there any concerns

1692
01:32:22,070 --> 01:32:27,769
on that style we did check that add

1693
01:32:24,800 --> 01:32:29,240
character is not one of the characters

1694
01:32:27,770 --> 01:32:30,380
that you are allowed to use in content

1695
01:32:29,240 --> 01:32:34,160
coding or media types so it should be

1696
01:32:30,380 --> 01:32:35,840
safe as a delimiter but of course we can

1697
01:32:34,160 --> 01:32:39,580
it's a nice bike sure to think about

1698
01:32:35,840 --> 01:32:43,590
what would be alternatives for that and

1699
01:32:39,580 --> 01:32:47,559
finally one minor issue that we

1700
01:32:43,590 --> 01:32:50,110
discover is that this we have two ways

1701
01:32:47,560 --> 01:32:51,610
of expressing fields in sin ml the ones

1702
01:32:50,110 --> 01:32:52,929
that you must I understand and once the

1703
01:32:51,610 --> 01:32:56,799
ones that you don't need to understand

1704
01:32:52,930 --> 01:32:58,330
and if you want to force the receiver of

1705
01:32:56,800 --> 01:33:00,010
cinnamon to check that it actually

1706
01:32:58,330 --> 01:33:02,950
understands all those fields you just

1707
01:33:00,010 --> 01:33:04,270
put an underscore in the end so we were

1708
01:33:02,950 --> 01:33:07,090
not sure if we actually need this

1709
01:33:04,270 --> 01:33:08,980
underscore format in this case but then

1710
01:33:07,090 --> 01:33:11,260
thinking about this except this morning

1711
01:33:08,980 --> 01:33:15,129
I did realize that you may have a case

1712
01:33:11,260 --> 01:33:16,270
where a single sensor is ending with

1713
01:33:15,130 --> 01:33:19,180
multiple content types

1714
01:33:16,270 --> 01:33:21,030
and actually alternating between sending

1715
01:33:19,180 --> 01:33:24,220
them and in that case actually would be

1716
01:33:21,030 --> 01:33:25,780
critical for the receiver to see to

1717
01:33:24,220 --> 01:33:28,360
understand which which type it is it

1718
01:33:25,780 --> 01:33:30,099
this time so it seems reasonable to also

1719
01:33:28,360 --> 01:33:31,690
define the must understand field

1720
01:33:30,100 --> 01:33:33,280
probably that wouldn't be used in

1721
01:33:31,690 --> 01:33:35,500
majority of the cases usually would be

1722
01:33:33,280 --> 01:33:37,300
just a simple hint of something is

1723
01:33:35,500 --> 01:33:39,370
anyway known but there are some cases

1724
01:33:37,300 --> 01:33:41,800
where might be useful so you might as

1725
01:33:39,370 --> 01:33:46,840
well define in this draft or an register

1726
01:33:41,800 --> 01:33:48,700
both verses and then finally is there

1727
01:33:46,840 --> 01:33:55,300
anything else that we need to do before

1728
01:33:48,700 --> 01:33:58,320
going for last course so any comments on

1729
01:33:55,300 --> 01:33:58,320
any of these issues

1730
01:34:05,310 --> 01:34:09,090
[Music]

1731
01:34:06,590 --> 01:34:15,240
just moving from the floor even though

1732
01:34:09,090 --> 01:34:16,740
I'm singing records on this right that

1733
01:34:15,240 --> 01:34:19,110
the problem would be real chairs that

1734
01:34:16,740 --> 01:34:20,490
you are so involved with all the drafts

1735
01:34:19,110 --> 01:34:26,880
that at some point you don't know any

1736
01:34:20,490 --> 01:34:34,019
longer whether you actually so would you

1737
01:34:26,880 --> 01:34:36,270
ever I think there could be say some

1738
01:34:34,020 --> 01:34:38,580
applications where you're just like okay

1739
01:34:36,270 --> 01:34:40,650
this is just in case hint and if there's

1740
01:34:38,580 --> 01:34:41,610
something let's say you have a some

1741
01:34:40,650 --> 01:34:43,170
security

1742
01:34:41,610 --> 01:34:45,269
well let's say some storage box in

1743
01:34:43,170 --> 01:34:46,890
between that's like would prefer retest

1744
01:34:45,270 --> 01:34:48,300
or everything but then wouldn't need to

1745
01:34:46,890 --> 01:34:49,710
actually understand whether this has

1746
01:34:48,300 --> 01:34:51,780
some relevant semantics or not I have a

1747
01:34:49,710 --> 01:34:54,510
hard time understanding how an

1748
01:34:51,780 --> 01:34:56,730
originator of Senate would make that

1749
01:34:54,510 --> 01:35:00,720
decision that probably would be up to

1750
01:34:56,730 --> 01:35:02,309
configuration so it would be out of kind

1751
01:35:00,720 --> 01:35:05,660
of configuration to do that whether you

1752
01:35:02,310 --> 01:35:05,660
would actually include it there or not

1753
01:35:09,200 --> 01:35:14,820
this is totally and utterly I admit but

1754
01:35:13,110 --> 01:35:17,910
but when you were looking at the

1755
01:35:14,820 --> 01:35:21,960
prefixes your at V if a numeric value

1756
01:35:17,910 --> 01:35:24,960
and vs for string and when I see that in

1757
01:35:21,960 --> 01:35:27,510
languages or definitions it just it it

1758
01:35:24,960 --> 01:35:29,880
introduces cognitive dissonance because

1759
01:35:27,510 --> 01:35:35,400
if in s is a string value what isn't a

1760
01:35:29,880 --> 01:35:38,550
numeric value VN so I guess the reason

1761
01:35:35,400 --> 01:35:41,460
that it says V was for efficiency you

1762
01:35:38,550 --> 01:35:42,450
say what say one byte in JSON there but

1763
01:35:41,460 --> 01:35:44,580
that's actually that's already in the

1764
01:35:42,450 --> 01:35:51,960
RFC so that's something we cannot cannot

1765
01:35:44,580 --> 01:35:54,390
change and pretty much is majority of

1766
01:35:51,960 --> 01:35:55,860
the use case are using the V so it kind

1767
01:35:54,390 --> 01:35:58,740
of made sense to optimize one byte from

1768
01:35:55,860 --> 01:36:04,940
there I want one of those design

1769
01:35:58,740 --> 01:36:07,710
decisions okay so what I'm hearing okay

1770
01:36:04,940 --> 01:36:09,900
makes sense to have them monitor to

1771
01:36:07,710 --> 01:36:12,900
understand kind of raised the same

1772
01:36:09,900 --> 01:36:15,540
problem we ran into was a web where we

1773
01:36:12,900 --> 01:36:19,289
have elective and critical and then at

1774
01:36:15,540 --> 01:36:22,019
some point we found out

1775
01:36:19,289 --> 01:36:25,739
that's good for in systems but what

1776
01:36:22,019 --> 01:36:28,769
about proxies and we came up with safe

1777
01:36:25,739 --> 01:36:31,949
and unsafe for proxies and use use him

1778
01:36:28,769 --> 01:36:35,219
to believe that storage nodes for

1779
01:36:31,949 --> 01:36:36,598
instance what read to must understand

1780
01:36:35,219 --> 01:36:41,610
fear in some form

1781
01:36:36,599 --> 01:36:43,079
I would depending on the application yes

1782
01:36:41,610 --> 01:36:44,518
depending on the application so you

1783
01:36:43,079 --> 01:36:46,920
could have a storage system and Ali said

1784
01:36:44,519 --> 01:36:48,179
okay dump everything as such and I

1785
01:36:46,920 --> 01:36:50,369
likened or storage is try to do

1786
01:36:48,179 --> 01:36:52,110
sanitization maybe transformations that

1787
01:36:50,369 --> 01:36:53,598
may need to do but now you would have at

1788
01:36:52,110 --> 01:36:56,719
least the capability to indicate that

1789
01:36:53,599 --> 01:36:59,550
way depending on your application needs

1790
01:36:56,719 --> 01:37:01,969
just numbers I think that where as soon

1791
01:36:59,550 --> 01:37:05,340
as the storage system does anything like

1792
01:37:01,969 --> 01:37:08,630
concatenating to send ml files they must

1793
01:37:05,340 --> 01:37:08,630
understand their options in there

1794
01:37:09,829 --> 01:37:14,929
understand what the resolution rules are

1795
01:37:12,809 --> 01:37:17,639
you find in such a way that you can

1796
01:37:14,929 --> 01:37:19,860
apply them without understanding creates

1797
01:37:17,639 --> 01:37:22,260
yes but we have already considered and

1798
01:37:19,860 --> 01:37:26,610
must understand fields that do things

1799
01:37:22,260 --> 01:37:29,099
like base time offset and that sets the

1800
01:37:26,610 --> 01:37:32,820
time for each next record to a second

1801
01:37:29,099 --> 01:37:33,989
later than the last one and those were

1802
01:37:32,820 --> 01:37:39,110
applications that were considered for

1803
01:37:33,989 --> 01:37:41,579
must understand rules that are laid out

1804
01:37:39,110 --> 01:37:43,380
okay so I guess we have a violent

1805
01:37:41,579 --> 01:37:45,209
agreement on adding they must understand

1806
01:37:43,380 --> 01:37:46,530
because we're gonna need it in any

1807
01:37:45,209 --> 01:37:48,929
anyway for purposes and their stall

1808
01:37:46,530 --> 01:37:50,509
that's not really cost in specifying and

1809
01:37:48,929 --> 01:37:52,709
then it's up to the application

1810
01:37:50,510 --> 01:37:54,209
application logic whether that is needed

1811
01:37:52,709 --> 01:37:56,369
in in certain applications or not and

1812
01:37:54,209 --> 01:37:57,840
maybe we should add some more think

1813
01:37:56,369 --> 01:38:02,969
about more clarifications how that is

1814
01:37:57,840 --> 01:38:03,510
used with with different systems okay

1815
01:38:02,969 --> 01:38:06,360
then

1816
01:38:03,510 --> 01:38:08,610
anything on the order to index I don't

1817
01:38:06,360 --> 01:38:11,759
see anyone running on the mic so I guess

1818
01:38:08,610 --> 01:38:14,478
that's it's fine to do it like that I'm

1819
01:38:11,760 --> 01:38:14,479
looking at our ad

1820
01:38:18,880 --> 01:38:23,050
and this could become a pattern we may

1821
01:38:20,380 --> 01:38:28,300
want to replicate elsewhere - oh let's

1822
01:38:23,050 --> 01:38:31,690
see this looks like an hour elegant hack

1823
01:38:28,300 --> 01:38:35,260
so I need to check what they allowed

1824
01:38:31,690 --> 01:38:36,909
characters are I said I've never seen

1825
01:38:35,260 --> 01:38:40,540
any media type of that science so I

1826
01:38:36,909 --> 01:38:42,159
think that's Pablo cake they are not

1827
01:38:40,540 --> 01:38:44,860
allowed for media types but they might

1828
01:38:42,159 --> 01:38:47,409
occur in permit us the thing to the left

1829
01:38:44,860 --> 01:38:54,309
of an ED sign is the content type or the

1830
01:38:47,409 --> 01:38:57,120
media type so I understand now I would

1831
01:38:54,310 --> 01:39:00,820
somebody just parsing it as a media type

1832
01:38:57,120 --> 01:39:03,250
be confused by this I mean I need to

1833
01:39:00,820 --> 01:39:05,199
think a bit more about yes the point I'm

1834
01:39:03,250 --> 01:39:08,620
trying to make is if you actually want

1835
01:39:05,199 --> 01:39:12,669
to pause it you have to look at the

1836
01:39:08,620 --> 01:39:15,519
double quotes so any media type

1837
01:39:12,670 --> 01:39:18,850
parameters that are to the left of the

1838
01:39:15,520 --> 01:39:22,239
edge might have headlines but only in

1839
01:39:18,850 --> 01:39:24,040
quoted parameters so are you saying that

1840
01:39:22,239 --> 01:39:25,809
after this drink you might still have

1841
01:39:24,040 --> 01:39:28,900
media type parameters you know they're

1842
01:39:25,810 --> 01:39:30,370
there before so the thing to the left of

1843
01:39:28,900 --> 01:39:32,259
a net sign is a content type and a

1844
01:39:30,370 --> 01:39:35,320
quantity video tire plus optional

1845
01:39:32,260 --> 01:39:38,139
parameters so you might have optional

1846
01:39:35,320 --> 01:39:41,799
parameters before the add sign which

1847
01:39:38,139 --> 01:39:44,800
contain a string a quoted thing with an

1848
01:39:41,800 --> 01:39:47,949
ED sign in it say you can have I don't

1849
01:39:44,800 --> 01:39:50,500
know SIL example but text plain text

1850
01:39:47,949 --> 01:39:59,919
flash playing semicolon just as equal

1851
01:39:50,500 --> 01:40:03,820
utf-8 at deflate okay the preferred

1852
01:39:59,920 --> 01:40:08,620
example this is pleased to add an

1853
01:40:03,820 --> 01:40:10,389
example then at least I will very

1854
01:40:08,620 --> 01:40:14,320
definitely tell you whether this is a

1855
01:40:10,389 --> 01:40:15,760
good idea or not sounds like I will

1856
01:40:14,320 --> 01:40:19,780
generate a few examples on how they

1857
01:40:15,760 --> 01:40:22,659
could look like does beg the question

1858
01:40:19,780 --> 01:40:25,239
why not just create a see e to go along

1859
01:40:22,659 --> 01:40:26,969
with the CT that was the designing the

1860
01:40:25,239 --> 01:40:29,070
yeah

1861
01:40:26,970 --> 01:40:30,330
don't like parsing it as a string I

1862
01:40:29,070 --> 01:40:33,210
don't like parsing I didn't like the

1863
01:40:30,330 --> 01:40:35,340
string is a number because I always you

1864
01:40:33,210 --> 01:40:37,200
have to figure out is this a number who

1865
01:40:35,340 --> 01:40:39,030
are you right in that you probably won't

1866
01:40:37,200 --> 01:40:42,389
even say is this a number you'll just

1867
01:40:39,030 --> 01:40:44,250
say is this 40 do I as a string yep um

1868
01:40:42,390 --> 01:40:46,050
and as long as the numbers are small

1869
01:40:44,250 --> 01:40:49,290
then the overhead is not as you said is

1870
01:40:46,050 --> 01:40:52,440
not a bad idea but if the number is 4932

1871
01:40:49,290 --> 01:40:54,660
that's for octet snot is you can put

1872
01:40:52,440 --> 01:40:56,339
that in an integer in two octets but I

1873
01:40:54,660 --> 01:40:59,639
think there they are small numbers so

1874
01:40:56,340 --> 01:41:01,740
we'll leave it at that but and but if

1875
01:40:59,640 --> 01:41:03,060
you don't control the number space if

1876
01:41:01,740 --> 01:41:04,710
it's from somebody else then it might be

1877
01:41:03,060 --> 01:41:07,500
huge and representing that as a string

1878
01:41:04,710 --> 01:41:09,840
is not efficient yeah very good points a

1879
01:41:07,500 --> 01:41:11,840
couple of answers so it's the 16-bit

1880
01:41:09,840 --> 01:41:14,940
number of space so yeah they can write

1881
01:41:11,840 --> 01:41:16,860
65,000 on the other hand if you put

1882
01:41:14,940 --> 01:41:18,839
enough data that you are using them

1883
01:41:16,860 --> 01:41:20,639
structured media-type probably your VD

1884
01:41:18,840 --> 01:41:22,890
is already like tens of bytes or maybe

1885
01:41:20,640 --> 01:41:29,430
hundred bytes yeah so then a few bytes

1886
01:41:22,890 --> 01:41:36,480
here may may not be a big concern but

1887
01:41:29,430 --> 01:41:39,330
but the original point yes very good

1888
01:41:36,480 --> 01:41:42,209
point that was our previous design then

1889
01:41:39,330 --> 01:41:44,670
we then we realized that you're running

1890
01:41:42,210 --> 01:41:47,130
the problems cause there's interesting

1891
01:41:44,670 --> 01:41:49,560
how waiting is how interwork if you have

1892
01:41:47,130 --> 01:41:51,690
base value of one eight one let's say

1893
01:41:49,560 --> 01:41:53,580
from the numeric area another then you

1894
01:41:51,690 --> 01:41:57,450
have later a new base value from the

1895
01:41:53,580 --> 01:41:59,610
string kind and which one are you ten

1896
01:41:57,450 --> 01:42:01,590
supposed to be using so you could come

1897
01:41:59,610 --> 01:42:03,120
up with rules okay this one has the

1898
01:42:01,590 --> 01:42:05,400
precedence but wonder if you want to go

1899
01:42:03,120 --> 01:42:07,200
back no you need to undo the one that

1900
01:42:05,400 --> 01:42:09,780
has precedence we don't really have

1901
01:42:07,200 --> 01:42:11,490
simple way of undoing base values yeah

1902
01:42:09,780 --> 01:42:14,160
you could set it into undefined value

1903
01:42:11,490 --> 01:42:16,410
etc it starts to get a little by little

1904
01:42:14,160 --> 01:42:18,389
rather complicated rules like how do you

1905
01:42:16,410 --> 01:42:20,880
work on if you have two different things

1906
01:42:18,390 --> 01:42:23,160
defining the same thing that's why we

1907
01:42:20,880 --> 01:42:24,660
went in this version of the craft for

1908
01:42:23,160 --> 01:42:28,200
the design where it's only single field

1909
01:42:24,660 --> 01:42:29,700
defining a a single kind of parameter

1910
01:42:28,200 --> 01:42:33,080
but yet that was the one you can check

1911
01:42:29,700 --> 01:42:33,080
out the previous draft how it look like

1912
01:42:34,160 --> 01:42:40,889
yeah yeah so yeah pros and cons and and

1913
01:42:38,790 --> 01:42:43,590
yeah I fully agree I mean this time

1914
01:42:40,890 --> 01:42:45,810
this number as a string also concerned

1915
01:42:43,590 --> 01:42:49,680
me and many of you who I actually talk

1916
01:42:45,810 --> 01:42:52,170
with this about this during the week but

1917
01:42:49,680 --> 01:42:54,930
that seems to be kind of there and I

1918
01:42:52,170 --> 01:42:56,760
hate to call the sweet spot but their

1919
01:42:54,930 --> 01:42:58,820
engineering compromise that makes more

1920
01:42:56,760 --> 01:42:58,820
sense

1921
01:43:03,350 --> 01:43:23,340
yeah then Oh No there was a slight

1922
01:43:10,590 --> 01:43:24,990
afterwards yes so I can I can talk to

1923
01:43:23,340 --> 01:43:27,900
you in the other issue so it's it's

1924
01:43:24,990 --> 01:43:31,349
nothing it's not not really about this

1925
01:43:27,900 --> 01:43:35,490
nml city but it's about base values and

1926
01:43:31,350 --> 01:43:38,820
must understand values in general there

1927
01:43:35,490 --> 01:43:41,730
are some potential complications because

1928
01:43:38,820 --> 01:43:44,849
you know you can define your base value

1929
01:43:41,730 --> 01:43:46,679
as something you must understand or not

1930
01:43:44,850 --> 01:43:51,360
and not don't need to understand and

1931
01:43:46,680 --> 01:43:53,700
your regular field as a same same way so

1932
01:43:51,360 --> 01:43:58,880
here's at least a set of combinations

1933
01:43:53,700 --> 01:44:02,580
with this imaginary foo sin ml field and

1934
01:43:58,880 --> 01:44:05,310
how its each of these records resolved

1935
01:44:02,580 --> 01:44:07,980
is perhaps something that would need to

1936
01:44:05,310 --> 01:44:10,050
be clarified initially unfortunately I

1937
01:44:07,980 --> 01:44:11,940
don't have a clear answer that right now

1938
01:44:10,050 --> 01:44:16,830
we kind of discovered this issue two

1939
01:44:11,940 --> 01:44:19,679
hours ago there's no need for

1940
01:44:16,830 --> 01:44:22,640
clarifications very clear how we resolve

1941
01:44:19,680 --> 01:44:25,560
this it's just not useful yes

1942
01:44:22,640 --> 01:44:31,380
so yeah we probably need to clarify a

1943
01:44:25,560 --> 01:44:33,840
bit more clarify the clarifications but

1944
01:44:31,380 --> 01:44:35,340
just a quick heads-up for everyone um if

1945
01:44:33,840 --> 01:44:37,140
you want to if you're interested on

1946
01:44:35,340 --> 01:44:39,120
working on these together do do let me

1947
01:44:37,140 --> 01:44:42,570
know so I was trying to punt this by

1948
01:44:39,120 --> 01:44:46,470
saying it's always must understand but

1949
01:44:42,570 --> 01:44:48,630
maybe that doesn't work anyway so you

1950
01:44:46,470 --> 01:44:50,160
asked for work last call we cannot work

1951
01:44:48,630 --> 01:44:52,500
last call a document that is not the

1952
01:44:50,160 --> 01:44:53,170
working document so the next step would

1953
01:44:52,500 --> 01:45:05,730
be

1954
01:44:53,170 --> 01:45:07,410
- selfie oh is it on the 17th I think oh

1955
01:45:05,730 --> 01:45:09,879
[Music]

1956
01:45:07,410 --> 01:45:13,230
and I think we had a bunch of people

1957
01:45:09,880 --> 01:45:17,080
plus-one yeah we should end up here so

1958
01:45:13,230 --> 01:45:18,940
you're right okay yeah but I think this

1959
01:45:17,080 --> 01:45:20,800
particular problem needs to be thought

1960
01:45:18,940 --> 01:45:23,259
through and bring you to read the

1961
01:45:20,800 --> 01:45:25,720
example yeah

1962
01:45:23,260 --> 01:45:31,690
so should the next version be bankrupted

1963
01:45:25,720 --> 01:45:33,820
went well if the adoption went through

1964
01:45:31,690 --> 01:45:36,250
which I cannot decide because Remy did

1965
01:45:33,820 --> 01:45:37,870
the adoption called and the no step is a

1966
01:45:36,250 --> 01:45:40,780
very good document and we progressively

1967
01:45:37,870 --> 01:45:43,510
spin this once to address the issues

1968
01:45:40,780 --> 01:45:46,259
that came up okay sounds good thanks

1969
01:45:43,510 --> 01:45:46,260
others

1970
01:45:54,440 --> 01:46:05,759
okay I just I tried to be fairly short

1971
01:46:00,679 --> 01:46:07,440
okay um this is my own slide so this is

1972
01:46:05,760 --> 01:46:12,059
one issue that we discovered when

1973
01:46:07,440 --> 01:46:16,799
working in OMA on on version 1.1 where

1974
01:46:12,059 --> 01:46:21,409
we so we had sentiment already in the

1975
01:46:16,800 --> 01:46:23,400
original version 1.0 but as you know the

1976
01:46:21,409 --> 01:46:25,789
specification in the ITF central

1977
01:46:23,400 --> 01:46:28,019
specification was released as RC and

1978
01:46:25,789 --> 01:46:30,929
everything was great and when we did our

1979
01:46:28,020 --> 01:46:34,800
consistency reviews as part of the what

1980
01:46:30,929 --> 01:46:37,610
we call one that one that one we found

1981
01:46:34,800 --> 01:46:40,139
out that our examples were not correct

1982
01:46:37,610 --> 01:46:43,739
were not in compliance with the

1983
01:46:40,139 --> 01:46:47,039
specification and the way as you know

1984
01:46:43,739 --> 01:46:50,730
the way how we use out or the data model

1985
01:46:47,039 --> 01:46:53,489
works is we use this object object

1986
01:46:50,730 --> 01:46:55,409
instance and resource a notation with a

1987
01:46:53,489 --> 01:46:58,519
numerical ID so you see that in the

1988
01:46:55,409 --> 01:47:02,009
example below and what we missed was

1989
01:46:58,520 --> 01:47:05,610
that there's this base name concept

1990
01:47:02,010 --> 01:47:09,329
which always has to be unique for each

1991
01:47:05,610 --> 01:47:12,780
specific sensor reading or each specific

1992
01:47:09,329 --> 01:47:16,380
sentimental document and so you see you

1993
01:47:12,780 --> 01:47:19,710
see an example on the top the base name

1994
01:47:16,380 --> 01:47:21,900
here is for example the urine and we

1995
01:47:19,710 --> 01:47:23,909
have a couple of ways to uniquely

1996
01:47:21,900 --> 01:47:26,759
identify a device and then there would

1997
01:47:23,909 --> 01:47:28,589
the resources and an object and object

1998
01:47:26,760 --> 01:47:31,650
instance and resources would followed

1999
01:47:28,590 --> 01:47:33,360
and afterwards but the consequence of

2000
01:47:31,650 --> 01:47:35,759
this is of this design decision in

2001
01:47:33,360 --> 01:47:38,280
cinnamon which we unfortunately didn't

2002
01:47:35,760 --> 01:47:40,679
realize home or realize much much too

2003
01:47:38,280 --> 01:47:43,349
late was that we now have to carry this

2004
01:47:40,679 --> 01:47:46,710
base name with the fully identifying the

2005
01:47:43,349 --> 01:47:49,559
endpoint name using a your eyes we are

2006
01:47:46,710 --> 01:47:55,289
using in each of the measurements and

2007
01:47:49,559 --> 01:47:58,380
that's our kind of a fortunate because

2008
01:47:55,289 --> 01:48:00,269
it obviously means that we are wasting a

2009
01:47:58,380 --> 01:48:01,920
lot of bytes we are just sending the

2010
01:48:00,270 --> 01:48:05,620
data we use sentiment as an

2011
01:48:01,920 --> 01:48:08,080
encapsulation technique which is a fits

2012
01:48:05,620 --> 01:48:10,050
our purpose like from from from that

2013
01:48:08,080 --> 01:48:13,809
point of view because it allows us to

2014
01:48:10,050 --> 01:48:16,720
take a bunch of for example readings it

2015
01:48:13,810 --> 01:48:18,910
allows us to put a couple of for example

2016
01:48:16,720 --> 01:48:22,150
if it goes into the other direction a

2017
01:48:18,910 --> 01:48:24,040
couple of requests into one into one

2018
01:48:22,150 --> 01:48:26,320
cinema document and ship it off to the

2019
01:48:24,040 --> 01:48:27,790
client and sort of there's only the

2020
01:48:26,320 --> 01:48:32,049
client-server interaction so we don't

2021
01:48:27,790 --> 01:48:34,630
need to carry in each payload uniquely

2022
01:48:32,050 --> 01:48:39,220
identifying information so we had a chat

2023
01:48:34,630 --> 01:48:42,490
in our in our club and and reached out

2024
01:48:39,220 --> 01:48:48,130
to some of you last week also at the

2025
01:48:42,490 --> 01:48:51,730
joint ITF ion TF ome meeting and the

2026
01:48:48,130 --> 01:48:53,350
idea we came up with was wouldn't be

2027
01:48:51,730 --> 01:48:56,679
great if we could define a local base

2028
01:48:53,350 --> 01:48:59,800
name that has local semantics semantics

2029
01:48:56,680 --> 01:49:01,660
but doesn't require us to carry always

2030
01:48:59,800 --> 01:49:04,030
the global context so if you ship it off

2031
01:49:01,660 --> 01:49:08,710
further for example to something else

2032
01:49:04,030 --> 01:49:10,870
you could of course still use cinnamon

2033
01:49:08,710 --> 01:49:13,570
and you could then enhance it if that

2034
01:49:10,870 --> 01:49:17,080
makes sense in your context or if in

2035
01:49:13,570 --> 01:49:20,980
your context you require to have that

2036
01:49:17,080 --> 01:49:23,380
global space this global uniqueness

2037
01:49:20,980 --> 01:49:24,879
property then you can still do that but

2038
01:49:23,380 --> 01:49:29,200
the local base name would be an

2039
01:49:24,880 --> 01:49:33,580
alternative okay with the consequence

2040
01:49:29,200 --> 01:49:34,840
being that we save a lot of bytes one

2041
01:49:33,580 --> 01:49:37,090
other thing which I don't have on the

2042
01:49:34,840 --> 01:49:38,740
slides which only showed up very

2043
01:49:37,090 --> 01:49:41,440
recently it's not captured in the

2044
01:49:38,740 --> 01:49:45,190
document and we'll need to do a little

2045
01:49:41,440 --> 01:49:50,070
bit of homework with Ari and Mochan and

2046
01:49:45,190 --> 01:49:54,280
and in others is we we have cases where

2047
01:49:50,070 --> 01:50:00,040
we send for example if we create an an

2048
01:49:54,280 --> 01:50:03,250
object on the device then we would send

2049
01:50:00,040 --> 01:50:06,610
that but currently that requires us in a

2050
01:50:03,250 --> 01:50:08,620
way how the the the local base name and

2051
01:50:06,610 --> 01:50:15,540
also done the normal base name gets

2052
01:50:08,620 --> 01:50:17,869
constructed to control path we required

2053
01:50:15,540 --> 01:50:19,519
the full sort of

2054
01:50:17,869 --> 01:50:22,280
like the complete string to be present

2055
01:50:19,519 --> 01:50:25,249
but we don't actually necessarily know

2056
01:50:22,280 --> 01:50:27,590
on what the inst object instance will be

2057
01:50:25,249 --> 01:50:28,999
that the client would allocate so the

2058
01:50:27,590 --> 01:50:31,249
server sends something create a new

2059
01:50:28,999 --> 01:50:34,959
object so for example that an object

2060
01:50:31,249 --> 01:50:39,379
could be let's say I want to instantiate

2061
01:50:34,959 --> 01:50:40,669
a lightweight m2m server resource also I

2062
01:50:39,379 --> 01:50:42,889
want to add another server to the

2063
01:50:40,669 --> 01:50:46,398
configuration of the office of the

2064
01:50:42,889 --> 01:50:50,030
client so I don't know what object

2065
01:50:46,399 --> 01:50:51,829
instance ID the client will be using of

2066
01:50:50,030 --> 01:50:54,199
course I could query him first and ask

2067
01:50:51,829 --> 01:50:56,659
him like what's the most recent one but

2068
01:50:54,199 --> 01:51:00,978
even then there's no requirement to have

2069
01:50:56,659 --> 01:51:02,749
consecutive numbers either so that

2070
01:51:00,979 --> 01:51:05,959
creates some some problems with the

2071
01:51:02,749 --> 01:51:07,249
current resolution scheme and so we need

2072
01:51:05,959 --> 01:51:09,379
to do a little bit of thinking there as

2073
01:51:07,249 --> 01:51:11,179
well so dia there's a little bit more

2074
01:51:09,379 --> 01:51:12,669
than than what I just said and it was

2075
01:51:11,179 --> 01:51:17,709
only discovered very recently

2076
01:51:12,669 --> 01:51:20,479
unfortunately so here I'm basically

2077
01:51:17,709 --> 01:51:25,340
suggesting to enhance cinema with this

2078
01:51:20,479 --> 01:51:28,129
local base name to essentially help us

2079
01:51:25,340 --> 01:51:34,539
to get the specification in in in line

2080
01:51:28,129 --> 01:51:34,539
with the RC or with the functionality

2081
01:51:34,899 --> 01:51:40,610
does that make sense

2082
01:51:36,499 --> 01:51:43,570
some of you stares at me like you have

2083
01:51:40,610 --> 01:51:43,570
no idea what I'm talking about

2084
01:51:46,119 --> 01:51:55,848
that's much better of course there are a

2085
01:51:53,570 --> 01:51:57,919
couple of ways of doing that and pro

2086
01:51:55,849 --> 01:52:00,019
pros and cons there but I think

2087
01:51:57,919 --> 01:52:06,709
something along these lines makes a lot

2088
01:52:00,019 --> 01:52:09,050
of sense yeah yeah two observations here

2089
01:52:06,709 --> 01:52:11,869
one this probably would need to be

2090
01:52:09,050 --> 01:52:14,829
simpler be Landin not a bien

2091
01:52:11,869 --> 01:52:19,129
all just effects this one single record

2092
01:52:14,829 --> 01:52:22,219
following it was but I think the more

2093
01:52:19,129 --> 01:52:30,630
important observation is we do have the

2094
01:52:22,219 --> 01:52:35,730
idea of base UI in rest

2095
01:52:30,630 --> 01:52:42,080
and we could actually tap on that I mean

2096
01:52:35,730 --> 01:52:44,790
cinema has judiciously avoided using it

2097
01:52:42,080 --> 01:52:47,070
but that's because cinema originally was

2098
01:52:44,790 --> 01:52:50,670
meant for a certain area of replication

2099
01:52:47,070 --> 01:52:54,690
and opening a new area of application

2100
01:52:50,670 --> 01:52:57,180
may require doing that yes fully agree

2101
01:52:54,690 --> 01:52:59,460
and there is a another draft I suddenly

2102
01:52:57,180 --> 01:53:01,230
on monitoring Chris and I have been

2103
01:52:59,460 --> 01:53:03,930
working on this based in pointer and

2104
01:53:01,230 --> 01:53:05,820
indication so that one is going that

2105
01:53:03,930 --> 01:53:07,650
direction that you could indicate what

2106
01:53:05,820 --> 01:53:10,889
should be the based based thing over

2107
01:53:07,650 --> 01:53:12,660
there they're having it posted on on the

2108
01:53:10,890 --> 01:53:15,000
core mailings there is an upcoming IPO

2109
01:53:12,660 --> 01:53:17,099
declaration and on that draft at once

2110
01:53:15,000 --> 01:53:19,980
once that's done I can I can post it on

2111
01:53:17,100 --> 01:53:21,930
the core mailing list but yeah but there

2112
01:53:19,980 --> 01:53:23,820
you can basically indicate with the new

2113
01:53:21,930 --> 01:53:26,070
field that okay here's what should be

2114
01:53:23,820 --> 01:53:28,230
before this base name and then it

2115
01:53:26,070 --> 01:53:29,849
becomes unique in the context of anyone

2116
01:53:28,230 --> 01:53:32,280
who receives that and then when you are

2117
01:53:29,850 --> 01:53:33,810
forwarding for example to let's say like

2118
01:53:32,280 --> 01:53:36,450
I see a sentence you said I understand

2119
01:53:33,810 --> 01:53:38,460
that you can easily test our resolve

2120
01:53:36,450 --> 01:53:41,040
those records that then it becomes a

2121
01:53:38,460 --> 01:53:42,360
unique so that's alternative way of

2122
01:53:41,040 --> 01:53:44,730
doing that maybe something we should be

2123
01:53:42,360 --> 01:53:46,589
exploring how can but I'm but I think

2124
01:53:44,730 --> 01:53:49,169
the problem is very bad I mean we need

2125
01:53:46,590 --> 01:53:51,960
to solve it get alignment and and also

2126
01:53:49,170 --> 01:53:56,610
save those bytes in the wire so the

2127
01:53:51,960 --> 01:53:59,130
take-home message would be we accept the

2128
01:53:56,610 --> 01:54:00,630
issue we want to resolve the issue but

2129
01:53:59,130 --> 01:54:04,920
there are some some alternative

2130
01:54:00,630 --> 01:54:06,960
approaches we have to look at and what's

2131
01:54:04,920 --> 01:54:07,790
the timeline what when does that need to

2132
01:54:06,960 --> 01:54:13,200
be fixed

2133
01:54:07,790 --> 01:54:14,400
yeah ideally yesterday but you

2134
01:54:13,200 --> 01:54:17,309
understand like we obviously need to

2135
01:54:14,400 --> 01:54:20,400
work on the details and and look at the

2136
01:54:17,310 --> 01:54:23,430
alternative ideas to make sure that we

2137
01:54:20,400 --> 01:54:25,769
actually get something working right now

2138
01:54:23,430 --> 01:54:28,740
and we didn't have to create another

2139
01:54:25,770 --> 01:54:30,270
sort of ref of a bug-fix release of our

2140
01:54:28,740 --> 01:54:34,099
specification to make sure that this is

2141
01:54:30,270 --> 01:54:39,030
in line because currently we essentially

2142
01:54:34,100 --> 01:54:43,320
don't properly use cin ml and i was it

2143
01:54:39,030 --> 01:54:44,429
just didn't realize this actually is

2144
01:54:43,320 --> 01:54:46,079
violating

2145
01:54:44,429 --> 01:54:47,340
there but the reason for having the

2146
01:54:46,079 --> 01:54:49,409
mosque there is something that we don't

2147
01:54:47,340 --> 01:54:51,150
actually get in in light within them so

2148
01:54:49,409 --> 01:54:53,070
in that sense we're okay as long as

2149
01:54:51,150 --> 01:54:55,138
we're confined in our own little space

2150
01:54:53,070 --> 01:54:57,030
of course long-term that is not a good

2151
01:54:55,139 --> 01:54:58,829
solution we do wanna expand those

2152
01:54:57,030 --> 01:55:03,059
records to various different autofocus

2153
01:54:58,829 --> 01:55:05,639
and a standard so and really background

2154
01:55:03,059 --> 01:55:08,010
on this why it is a mosque that you can

2155
01:55:05,639 --> 01:55:09,989
easily use in various contexts but now

2156
01:55:08,010 --> 01:55:11,459
you have a probable única in fire you

2157
01:55:09,989 --> 01:55:13,949
don't have to start generating one on

2158
01:55:11,459 --> 01:55:15,869
the fly when you first NBC the back so

2159
01:55:13,949 --> 01:55:18,509
that's the kind of background there but

2160
01:55:15,869 --> 01:55:20,400
um let's work on all night on a solution

2161
01:55:18,510 --> 01:55:23,840
here guys

2162
01:55:20,400 --> 01:55:28,018
great so we don't have five minutes left

2163
01:55:23,840 --> 01:55:30,510
for 15 minutes of agenda and we are do

2164
01:55:28,019 --> 01:55:32,880
this the usual way so the working group

2165
01:55:30,510 --> 01:55:36,179
meeting will last for another five

2166
01:55:32,880 --> 01:55:39,989
minutes and then we will have an

2167
01:55:36,179 --> 01:55:49,829
unofficial Albury meeting for the other

2168
01:55:39,989 --> 01:55:53,218
items so let me quickly about talk about

2169
01:55:49,829 --> 01:55:57,509
the unit's thing which also is something

2170
01:55:53,219 --> 01:56:03,090
that kind of was based on input from

2171
01:55:57,510 --> 01:56:07,409
from a customer Sto again cinema has a

2172
01:56:03,090 --> 01:56:11,929
units registry that actually seems to be

2173
01:56:07,409 --> 01:56:14,749
quite useful for many IOT applications

2174
01:56:11,929 --> 01:56:19,650
so even though it's originally just for

2175
01:56:14,749 --> 01:56:21,869
cinema it's being picked up and now the

2176
01:56:19,650 --> 01:56:25,709
problem is people who are picking it up

2177
01:56:21,869 --> 01:56:28,348
already have data models that have their

2178
01:56:25,709 --> 01:56:31,260
own way of dealing with units whence

2179
01:56:28,349 --> 01:56:34,889
animal is pretty straight with units and

2180
01:56:31,260 --> 01:56:37,380
says use SI units and if you want to use

2181
01:56:34,889 --> 01:56:39,869
scaling use the number for scaling and

2182
01:56:37,380 --> 01:56:43,769
not the unit name and so on but that

2183
01:56:39,869 --> 01:56:45,420
doesn't mesh with the existing data

2184
01:56:43,769 --> 01:56:48,449
models and we're talking about several

2185
01:56:45,420 --> 01:56:51,030
hundred data models here so this is not

2186
01:56:48,449 --> 01:56:54,570
a trivial effort to just say oh we're

2187
01:56:51,030 --> 01:56:56,130
throw them all away and fix them to do

2188
01:56:54,570 --> 01:56:57,980
unscared

2189
01:56:56,130 --> 01:57:01,320
as i you

2190
01:56:57,980 --> 01:57:04,679
and of course there's also the problem

2191
01:57:01,320 --> 01:57:06,900
that in many cases we are actually

2192
01:57:04,680 --> 01:57:12,200
shipping around integer numbers even

2193
01:57:06,900 --> 01:57:15,030
though Jason is nominally floating-point

2194
01:57:12,200 --> 01:57:18,240
so if we have something like

2195
01:57:15,030 --> 01:57:19,349
microseconds or micrometers milliseconds

2196
01:57:18,240 --> 01:57:22,080
or micrometers

2197
01:57:19,350 --> 01:57:27,210
it's a bit inconvenient because you no

2198
01:57:22,080 --> 01:57:29,430
longer can use integers so we move this

2199
01:57:27,210 --> 01:57:32,910
back and forth and at the end we decided

2200
01:57:29,430 --> 01:57:38,340
we don't really want to break sentiments

2201
01:57:32,910 --> 01:57:41,880
clean approach but instead we add a

2202
01:57:38,340 --> 01:57:46,020
secondary registry of secondary unit

2203
01:57:41,880 --> 01:57:48,180
names with a big hood not on top of it

2204
01:57:46,020 --> 01:57:52,470
you should not use that except if you

2205
01:57:48,180 --> 01:57:57,210
have a reason for to use it and so this

2206
01:57:52,470 --> 01:57:59,880
would essentially have four columns a

2207
01:57:57,210 --> 01:58:02,700
secondary unit name so this is the

2208
01:57:59,880 --> 01:58:06,780
relaxed version a cellular unit name a

2209
01:58:02,700 --> 01:58:09,080
scale and an offset and there would be a

2210
01:58:06,780 --> 01:58:12,030
proscribed from your how to translate

2211
01:58:09,080 --> 01:58:15,650
between the secondary unit and and a

2212
01:58:12,030 --> 01:58:20,910
cinema unit so the details are in the

2213
01:58:15,650 --> 01:58:24,290
draft but seem to me that this is a good

2214
01:58:20,910 --> 01:58:26,519
way forward and we can keep cinema clean

2215
01:58:24,290 --> 01:58:31,710
but we can also have this little

2216
01:58:26,520 --> 01:58:36,690
backpack where we stuff things that are

2217
01:58:31,710 --> 01:58:46,070
based on an order data marts so I think

2218
01:58:36,690 --> 01:58:48,360
that's about it on this I see nodding so

2219
01:58:46,070 --> 01:58:52,559
yeah this is currently an individual

2220
01:58:48,360 --> 01:58:54,679
submission by me so if we want to do

2221
01:58:52,560 --> 01:58:58,050
this we have to go through the usual

2222
01:58:54,680 --> 01:58:59,760
steps and that that's probably also

2223
01:58:58,050 --> 01:59:03,940
something that we want to do relatively

2224
01:58:59,760 --> 01:59:07,510
quickly so oh and I can't use it

2225
01:59:03,940 --> 01:59:10,150
so please please have a look who in this

2226
01:59:07,510 --> 01:59:12,630
room cares about things like units Hana

2227
01:59:10,150 --> 01:59:12,629
sorry

2228
01:59:14,219 --> 01:59:21,340
Tomas lots of hands lots of hands so can

2229
01:59:19,510 --> 01:59:23,590
you please all have a quick look at the

2230
01:59:21,340 --> 01:59:25,690
document it's not long the three pages

2231
01:59:23,590 --> 01:59:29,349
or so and and see whether we're on the

2232
01:59:25,690 --> 01:59:31,780
right track thank you yeah this ends the

2233
01:59:29,349 --> 01:59:36,040
official part of the meeting but

2234
01:59:31,780 --> 01:59:38,980
Christian had a few ideas for things we

2235
01:59:36,040 --> 01:59:42,400
maybe should be discussing so we are now

2236
01:59:38,980 --> 01:59:44,500
in a hallway meeting and if you haven't

2237
01:59:42,400 --> 01:59:46,239
signed the blue sheets please do so

2238
01:59:44,500 --> 01:59:47,650
well the hallway meeting is the perfect

2239
01:59:46,239 --> 01:59:49,690
place to discuss those things because

2240
01:59:47,650 --> 01:59:51,790
they are more targeted towards people

2241
01:59:49,690 --> 01:59:54,009
typically around core than actually

2242
01:59:51,790 --> 01:59:57,489
being things that would become working

2243
01:59:54,010 --> 02:00:00,400
group items or if so then they are a bit

2244
01:59:57,489 --> 02:00:03,190
far from that my idea here is to give

2245
02:00:00,400 --> 02:00:04,989
just um inform you and ask feedback from

2246
02:00:03,190 --> 02:00:09,699
you because this could be relevant in

2247
02:00:04,989 --> 02:00:13,239
things that are coming up later so one

2248
02:00:09,699 --> 02:00:16,570
of those items is that it would be great

2249
02:00:13,239 --> 02:00:19,570
to use shake for for compressing co-op

2250
02:00:16,570 --> 02:00:22,239
options because the time and again

2251
02:00:19,570 --> 02:00:24,159
people come around and say that there is

2252
02:00:22,239 --> 02:00:26,440
a particular thing in co-op options that

2253
02:00:24,159 --> 02:00:28,449
doesn't really express nicely for me or

2254
02:00:26,440 --> 02:00:30,119
that's bloated so that if that's whether

2255
02:00:28,449 --> 02:00:33,250
that's people complaining about

2256
02:00:30,119 --> 02:00:37,030
well-known protocol name bland names are

2257
02:00:33,250 --> 02:00:40,449
long I'll rather have specifier things

2258
02:00:37,030 --> 02:00:44,650
at /c and then get into big discussions

2259
02:00:40,449 --> 02:00:46,989
on art or whether that's protocols that

2260
02:00:44,650 --> 02:00:49,480
include numbers in path options those

2261
02:00:46,989 --> 02:00:52,480
could all be generalized if we use the

2262
02:00:49,480 --> 02:00:55,650
work that is in Schick and just give

2263
02:00:52,480 --> 02:00:59,558
guidance on how to derive new options to

2264
02:00:55,650 --> 02:01:02,920
to have Schick data in those options

2265
02:00:59,559 --> 02:01:05,590
that would then expand out to existing

2266
02:01:02,920 --> 02:01:07,900
options with pretty straightforward

2267
02:01:05,590 --> 02:01:11,079
semantics I don't have a draft on this I

2268
02:01:07,900 --> 02:01:13,030
don't intend to start one unless more

2269
02:01:11,079 --> 02:01:15,099
use cases crop up where people actually

2270
02:01:13,030 --> 02:01:16,050
say okay I'll need this for that and

2271
02:01:15,099 --> 02:01:17,469
then I'd be happy to

2272
02:01:16,050 --> 02:01:19,959
kind of

2273
02:01:17,469 --> 02:01:21,699
to the groundwork part and whoever comes

2274
02:01:19,959 --> 02:01:25,389
up with a use case to do the motivation

2275
02:01:21,699 --> 02:01:28,030
and and particulars but this is when do

2276
02:01:25,389 --> 02:01:31,360
you do those use cases may be useful to

2277
02:01:28,030 --> 02:01:34,419
have an idea where that context actually

2278
02:01:31,360 --> 02:01:37,030
live so this is based on static context

2279
02:01:34,419 --> 02:01:39,159
again and each use case would need to

2280
02:01:37,030 --> 02:01:40,478
recall that there is a good place to

2281
02:01:39,159 --> 02:01:43,598
keep that conduct

2282
02:01:40,479 --> 02:01:45,789
yeah and I figured that context would be

2283
02:01:43,599 --> 02:01:48,760
encoded in a in a high counter in the

2284
02:01:45,789 --> 02:01:53,800
high option number but still the context

2285
02:01:48,760 --> 02:01:56,949
definition needs to recite another thing

2286
02:01:53,800 --> 02:01:58,959
that came up and that's even even less a

2287
02:01:56,949 --> 02:02:01,780
working group item related is that I've

2288
02:01:58,959 --> 02:02:04,709
worked with a quite a few coop libraries

2289
02:02:01,780 --> 02:02:06,969
and there seems to be a pattern of

2290
02:02:04,709 --> 02:02:09,010
interacting with coop messages so this

2291
02:02:06,969 --> 02:02:11,530
is not about the kind of high level I'm

2292
02:02:09,010 --> 02:02:13,360
having a rest implement a rest engine

2293
02:02:11,530 --> 02:02:15,579
there but the low levels of I'm

2294
02:02:13,360 --> 02:02:20,709
processing observation I'm processing a

2295
02:02:15,579 --> 02:02:22,989
score those things I'm gathering I'm

2296
02:02:20,709 --> 02:02:26,499
gathering those those kemon methods as

2297
02:02:22,989 --> 02:02:29,669
part of an Oscar implementation in the

2298
02:02:26,499 --> 02:02:33,209
context of the rat operating system but

2299
02:02:29,669 --> 02:02:35,619
I'd appreciate if library authors could

2300
02:02:33,209 --> 02:02:37,749
come together with me and maybe we can

2301
02:02:35,619 --> 02:02:39,369
work something out that is that could

2302
02:02:37,749 --> 02:02:41,919
become a common pattern and ease

2303
02:02:39,369 --> 02:02:46,030
portability of of intermediary

2304
02:02:41,919 --> 02:02:50,769
processors and the last item is that

2305
02:02:46,030 --> 02:02:54,959
creepy about it that could become a wiki

2306
02:02:50,769 --> 02:02:57,820
somewhere yes or if we sufficiently

2307
02:02:54,959 --> 02:03:00,489
agree that this is something that is

2308
02:02:57,820 --> 02:03:03,070
starting to get stable and we actually

2309
02:03:00,489 --> 02:03:07,089
want people to use we could also turn

2310
02:03:03,070 --> 02:03:08,709
this into an informational or C you

2311
02:03:07,090 --> 02:03:10,749
could could do that if there's interest

2312
02:03:08,709 --> 02:03:14,079
in I'd be happy to a company should

2313
02:03:10,749 --> 02:03:15,760
start with the we yeah that's so current

2314
02:03:14,079 --> 02:03:17,380
currently currently it starts with the

2315
02:03:15,760 --> 02:03:20,709
documentation of the Oscar library that

2316
02:03:17,380 --> 02:03:23,169
is describing that but the the idea is

2317
02:03:20,709 --> 02:03:24,699
to migrate that over to through the more

2318
02:03:23,169 --> 02:03:27,099
general case

2319
02:03:24,699 --> 02:03:31,119
but speaking of wiki's um I've started a

2320
02:03:27,099 --> 02:03:34,480
co-op FAQ page in the in the co wiki

2321
02:03:31,119 --> 02:03:36,489
I hope to collect answers to all those

2322
02:03:34,480 --> 02:03:40,629
questions that pop up time and again on

2323
02:03:36,489 --> 02:03:42,250
the mailing list like can I can I just

2324
02:03:40,630 --> 02:03:45,520
send an empty observe if I don't know

2325
02:03:42,250 --> 02:03:47,920
the value yet can I Elad the uriah host

2326
02:03:45,520 --> 02:03:49,840
option and for many of those things we

2327
02:03:47,920 --> 02:03:52,389
don't even have a good answer yet but at

2328
02:03:49,840 --> 02:03:54,130
least we can collect the answers that

2329
02:03:52,389 --> 02:03:56,860
are there and point people to the right

2330
02:03:54,130 --> 02:03:59,440
discussion rather than asking answering

2331
02:03:56,860 --> 02:04:01,598
the same thing time and again in the

2332
02:03:59,440 --> 02:04:03,070
lightweight m2m issue tracker where it

2333
02:04:01,599 --> 02:04:05,760
doesn't really belong or on Stack

2334
02:04:03,070 --> 02:04:08,679
Overflow and just have this as a

2335
02:04:05,760 --> 02:04:11,980
dispatch dispatch place and place to

2336
02:04:08,679 --> 02:04:13,719
collect typical questions so if anything

2337
02:04:11,980 --> 02:04:15,549
of that is interesting to you or you'd

2338
02:04:13,719 --> 02:04:16,349
like to contribute I would very much

2339
02:04:15,550 --> 02:04:18,969
appreciate that

2340
02:04:16,349 --> 02:04:21,909
yeah I think they need to be disclaimer

2341
02:04:18,969 --> 02:04:26,190
on that thing that these are answers of

2342
02:04:21,909 --> 02:04:29,110
individuals that is in place there yes

2343
02:04:26,190 --> 02:04:33,040
really good effort and I also would be

2344
02:04:29,110 --> 02:04:35,049
happy with if it really is just an FAQ

2345
02:04:33,040 --> 02:04:37,210
in part so at least know what those

2346
02:04:35,050 --> 02:04:39,699
questions are even if we don't have a

2347
02:04:37,210 --> 02:04:41,770
perfect yeah and so for them if if this

2348
02:04:39,699 --> 02:04:43,059
point in time if questions pop up there

2349
02:04:41,770 --> 02:04:48,360
and we don't have an answer then there's

2350
02:04:43,060 --> 02:04:48,360
no answer yet great thank you

2351
02:04:52,080 --> 02:04:55,980
[Laughter]

2352
02:05:13,140 --> 02:05:15,200
you

