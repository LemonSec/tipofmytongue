1
00:02:35,610 --> 00:02:38,749
[Music]

2
00:03:49,350 --> 00:03:52,478
[Music]

3
00:04:40,800 --> 00:04:43,980
[Applause]

4
00:05:13,040 --> 00:05:18,510
[Music]

5
00:05:15,199 --> 00:05:22,080
so this is the orange cat session are

6
00:05:18,510 --> 00:05:44,699
you all here for our MCAT if not you're

7
00:05:22,080 --> 00:05:47,070
in the wrong room so we're having some

8
00:05:44,699 --> 00:05:52,970
technical problems but we hope we will

9
00:05:47,070 --> 00:05:52,969
get the slides online here in minute

10
00:06:45,790 --> 00:06:51,120
[Music]

11
00:06:47,780 --> 00:06:55,710
so we need Yammer scribe and the minute

12
00:06:51,120 --> 00:06:57,090
taker please Thank You Alton

13
00:06:55,710 --> 00:07:02,370
do we have someone who can take the

14
00:06:57,090 --> 00:07:04,400
minutes as well it should not be too

15
00:07:02,370 --> 00:07:04,400
difficult

16
00:07:05,840 --> 00:07:08,989
thank you

17
00:07:50,830 --> 00:07:59,030
box them okay good

18
00:07:56,780 --> 00:08:02,179
so then welcome everyone to the armed

19
00:07:59,030 --> 00:08:06,500
cat session now we also have slides to

20
00:08:02,180 --> 00:08:07,780
you so this is good so let's let's get

21
00:08:06,500 --> 00:08:10,790
started

22
00:08:07,780 --> 00:08:14,200
this is the note well I think by now you

23
00:08:10,790 --> 00:08:16,520
are all familiar with it it guides the

24
00:08:14,200 --> 00:08:20,680
procedures for the meeting so if you are

25
00:08:16,520 --> 00:08:20,680
not familiar with it then please read it

26
00:08:22,600 --> 00:08:30,140
we have now you have a scribe and minute

27
00:08:26,450 --> 00:08:32,960
taker so thank you for this this is the

28
00:08:30,140 --> 00:08:35,059
under for today we will start by going

29
00:08:32,960 --> 00:08:37,419
over the status for the working group

30
00:08:35,059 --> 00:08:42,169
the different documents then we have a

31
00:08:37,419 --> 00:08:44,540
presentation on nada some updates on the

32
00:08:42,169 --> 00:08:47,439
draft and some evaluation results and

33
00:08:44,540 --> 00:08:50,870
the charging will give this presentation

34
00:08:47,440 --> 00:08:56,180
remotely and then Collin is going to

35
00:08:50,870 --> 00:09:00,340
give an update on the rtcp feedback work

36
00:08:56,180 --> 00:09:03,979
and if there are any other items that

37
00:09:00,340 --> 00:09:06,980
anyone wants to bring up so let's start

38
00:09:03,980 --> 00:09:10,370
with the overview of the status so we

39
00:09:06,980 --> 00:09:13,850
are finishing up most of our documents

40
00:09:10,370 --> 00:09:16,420
so for the algorithms congestion control

41
00:09:13,850 --> 00:09:19,760
algorithms two of them were already

42
00:09:16,420 --> 00:09:23,229
RFC's before the meeting and we have

43
00:09:19,760 --> 00:09:28,750
nada that was submitted to the iesg and

44
00:09:23,230 --> 00:09:32,180
it gets some review from Mira and the 80

45
00:09:28,750 --> 00:09:34,040
review and the authors are updated to

46
00:09:32,180 --> 00:09:36,260
draft after that so we have this on the

47
00:09:34,040 --> 00:09:37,969
agenda for today and then it will go

48
00:09:36,260 --> 00:09:40,819
back of course and continue the process

49
00:09:37,970 --> 00:09:44,030
and then we have the coupled congestion

50
00:09:40,820 --> 00:09:47,270
control draft which was in the RFC

51
00:09:44,030 --> 00:09:49,970
additives queue when there was some we

52
00:09:47,270 --> 00:09:51,710
detected the optimisation for the using

53
00:09:49,970 --> 00:09:52,610
the bandwidth fully so we took this

54
00:09:51,710 --> 00:09:55,640
draft back to the

55
00:09:52,610 --> 00:09:59,839
working group the authors are updated it

56
00:09:55,640 --> 00:10:01,610
and it was with the shares for review in

57
00:09:59,839 --> 00:10:05,540
the last meeting that has been completed

58
00:10:01,610 --> 00:10:07,370
and we use now need the final document

59
00:10:05,540 --> 00:10:09,319
from the waters before it goes back to

60
00:10:07,370 --> 00:10:11,540
media so shabby cool who is the the

61
00:10:09,320 --> 00:10:13,459
first author on the draft has been on

62
00:10:11,540 --> 00:10:16,399
parental leave so he's coming back in

63
00:10:13,459 --> 00:10:18,800
August and then we will have the updated

64
00:10:16,399 --> 00:10:21,709
version and then Miriah will have a look

65
00:10:18,800 --> 00:10:23,779
and decide what needs to be done with it

66
00:10:21,709 --> 00:10:27,410
for it to go back into the queue

67
00:10:23,779 --> 00:10:29,540
and of course the GCC congestion control

68
00:10:27,410 --> 00:10:33,199
was a draft that we don't expect that

69
00:10:29,540 --> 00:10:34,880
wit will continue then we have the

70
00:10:33,200 --> 00:10:36,829
various documents we have the

71
00:10:34,880 --> 00:10:38,899
requirements draft that is in the RFC

72
00:10:36,829 --> 00:10:41,989
editor too and there is now hopes that

73
00:10:38,899 --> 00:10:45,050
this whole bundle will be resolved quite

74
00:10:41,990 --> 00:10:48,890
soon so probably this draft will finally

75
00:10:45,050 --> 00:10:52,010
move on to RFC we have the different

76
00:10:48,890 --> 00:10:56,209
evaluation graph drafts and one of them

77
00:10:52,010 --> 00:10:59,089
now became an RFC the RFC 85 93 the

78
00:10:56,209 --> 00:11:02,439
video traffic model and the valve test

79
00:10:59,089 --> 00:11:06,769
draft is in the RFC editor queue also

80
00:11:02,440 --> 00:11:11,420
waiting for the requirements draft to

81
00:11:06,769 --> 00:11:13,880
finish up because yes so it hopefully

82
00:11:11,420 --> 00:11:16,459
will come out on the same bundle results

83
00:11:13,880 --> 00:11:18,470
and then we have the eval criteria and

84
00:11:16,459 --> 00:11:21,680
the wireless test that went through the

85
00:11:18,470 --> 00:11:23,990
the working group last call and the

86
00:11:21,680 --> 00:11:25,939
author's just submitted up the final

87
00:11:23,990 --> 00:11:27,410
updates on both of those two drafts so

88
00:11:25,940 --> 00:11:33,050
they are now with the shares for the

89
00:11:27,410 --> 00:11:35,689
write up and sending it off and then we

90
00:11:33,050 --> 00:11:38,089
have the feedback part so column will

91
00:11:35,690 --> 00:11:40,490
give us an update on the draft in a

92
00:11:38,089 --> 00:11:43,100
Vedic core and then we have the draft in

93
00:11:40,490 --> 00:11:46,880
Orion cap that will be updated once the

94
00:11:43,100 --> 00:11:49,640
AVD core draft gets finished and we have

95
00:11:46,880 --> 00:11:55,630
some of the old other drafts that we

96
00:11:49,640 --> 00:11:58,910
don't expect to go on at this point our

97
00:11:55,630 --> 00:12:01,399
milestones so the evaluation criteria

98
00:11:58,910 --> 00:12:03,170
and those drafts or being submitted so

99
00:12:01,399 --> 00:12:04,620
we still need to finish up the final

100
00:12:03,170 --> 00:12:06,930
ones

101
00:12:04,620 --> 00:12:09,060
then we had some milestones related to

102
00:12:06,930 --> 00:12:12,959
the evaluation results and how to

103
00:12:09,060 --> 00:12:15,270
proceed beyond the experimental part so

104
00:12:12,960 --> 00:12:18,000
we have some presentations today on the

105
00:12:15,270 --> 00:12:20,640
evaluations and and at some point we

106
00:12:18,000 --> 00:12:24,930
need to figure out how to proceed the

107
00:12:20,640 --> 00:12:27,720
area field continue moving draft onto

108
00:12:24,930 --> 00:12:29,760
the the proposed standard track or if

109
00:12:27,720 --> 00:12:33,360
they will end up as the experimental

110
00:12:29,760 --> 00:12:38,580
draft depending on the the interest and

111
00:12:33,360 --> 00:12:58,260
needs okay so that completes the

112
00:12:38,580 --> 00:13:01,940
overview hi should I get started yes

113
00:12:58,260 --> 00:13:06,270
let's see if then I think yes now we

114
00:13:01,940 --> 00:13:10,140
should be able to have the drafts up yes

115
00:13:06,270 --> 00:13:13,740
please go ahead judging your yeah thanks

116
00:13:10,140 --> 00:13:17,689
a lot sir I'm hoping the audio goes

117
00:13:13,740 --> 00:13:19,430
through okay just to double-check first

118
00:13:17,690 --> 00:13:22,470
fine thank you

119
00:13:19,430 --> 00:13:24,810
great so yeah so this will be and I'm

120
00:13:22,470 --> 00:13:27,020
giving an update another post on the

121
00:13:24,810 --> 00:13:29,819
draft as well as on some updated

122
00:13:27,020 --> 00:13:32,480
implementation and evaluation results in

123
00:13:29,820 --> 00:13:35,250
integrating it in a the open source

124
00:13:32,480 --> 00:13:38,900
Mozilla browser steering the development

125
00:13:35,250 --> 00:13:42,390
branch next slide please

126
00:13:38,900 --> 00:13:45,420
so first the update on the draft is that

127
00:13:42,390 --> 00:13:47,939
recently we got that the 80 review from

128
00:13:45,420 --> 00:13:50,699
amnesia thanks for that and on the draft

129
00:13:47,940 --> 00:13:53,760
she raised a collection of questions as

130
00:13:50,700 --> 00:13:57,810
well as some editorial suggestions and I

131
00:13:53,760 --> 00:14:01,380
pushed the updated version and 11

132
00:13:57,810 --> 00:14:03,449
version 11 now to the basically uploaded

133
00:14:01,380 --> 00:14:05,700
the draft this morning and then I wanted

134
00:14:03,450 --> 00:14:09,870
to summarize the changes here these

135
00:14:05,700 --> 00:14:12,720
changes were also summarized in sort of

136
00:14:09,870 --> 00:14:15,510
my email response to Mira before the the

137
00:14:12,720 --> 00:14:17,850
addition the edit so first off the

138
00:14:15,510 --> 00:14:20,759
question was around the

139
00:14:17,850 --> 00:14:23,449
the impact of how the rate adjustment on

140
00:14:20,759 --> 00:14:27,389
the great shaping buffer size influences

141
00:14:23,449 --> 00:14:28,769
of targets video encoding rate as well

142
00:14:27,389 --> 00:14:32,009
as descending grades

143
00:14:28,769 --> 00:14:35,310
so Mira raised some good points some

144
00:14:32,009 --> 00:14:37,940
concerns about what if the video encoder

145
00:14:35,310 --> 00:14:41,130
for instance is then it's an iris

146
00:14:37,940 --> 00:14:44,310
irresponsive one then what if the great

147
00:14:41,130 --> 00:14:46,519
shaping buffer buttes builds up to you

148
00:14:44,310 --> 00:14:49,109
know an outrageous size would that

149
00:14:46,519 --> 00:14:51,149
basically become counterproductive with

150
00:14:49,110 --> 00:14:53,550
respect to the actual rate per one

151
00:14:51,149 --> 00:14:57,810
percent over to the network so based on

152
00:14:53,550 --> 00:15:00,149
those concerns I've both and carried out

153
00:14:57,810 --> 00:15:02,670
some simulation based results that I

154
00:15:00,149 --> 00:15:04,860
will show later as well as some

155
00:15:02,670 --> 00:15:07,740
additional sort of you know sort of

156
00:15:04,860 --> 00:15:10,290
caveats noting and text in the current

157
00:15:07,740 --> 00:15:13,110
draft so we added discussion to show

158
00:15:10,290 --> 00:15:16,290
that the typical rate changes introduced

159
00:15:13,110 --> 00:15:18,630
by a read shaping buffer in a you know

160
00:15:16,290 --> 00:15:21,480
in a normal scenario is on the order of

161
00:15:18,630 --> 00:15:24,060
tens of kilobits per second we added one

162
00:15:21,480 --> 00:15:27,870
example of calculation in the draft and

163
00:15:24,060 --> 00:15:30,449
assuming a 2,000 bytes of a great

164
00:15:27,870 --> 00:15:33,779
shaping buffer I've run some simulations

165
00:15:30,449 --> 00:15:36,029
and see that most of the time the ratio

166
00:15:33,779 --> 00:15:39,689
ping buffer is empty because you know

167
00:15:36,029 --> 00:15:41,220
the interest being fairly responsive and

168
00:15:39,689 --> 00:15:43,230
one thing about if there's the

169
00:15:41,220 --> 00:15:45,449
generation of an iframe so there is an

170
00:15:43,230 --> 00:15:47,699
instantaneous you know sort of a big

171
00:15:45,449 --> 00:15:50,459
frame interested in great shaping buffer

172
00:15:47,699 --> 00:15:54,630
and the size is between you know sort of

173
00:15:50,459 --> 00:15:56,638
2,000 to 4,000 bytes typically depend to

174
00:15:54,630 --> 00:15:59,490
an iframe so that's where the numbers

175
00:15:56,639 --> 00:16:01,829
come from and the assimilation results

176
00:15:59,490 --> 00:16:04,529
that I'll show later will kind of show

177
00:16:01,829 --> 00:16:07,739
the impact of the ratio ping buffer when

178
00:16:04,529 --> 00:16:10,500
we use the recommended parameters and

179
00:16:07,740 --> 00:16:13,079
the corresponding and code changes have

180
00:16:10,500 --> 00:16:15,839
also been pushed to our open source

181
00:16:13,079 --> 00:16:18,750
report for this one and github now

182
00:16:15,839 --> 00:16:21,120
secondly to maybe to address the concern

183
00:16:18,750 --> 00:16:24,209
and in the presence of an you know not

184
00:16:21,120 --> 00:16:26,160
so cooperative video encoder we added

185
00:16:24,209 --> 00:16:29,638
some bonding conditions some bonding

186
00:16:26,160 --> 00:16:31,379
logic just to bounce the influence the

187
00:16:29,639 --> 00:16:33,539
the rate change in

188
00:16:31,379 --> 00:16:35,489
reduced by this mechanism noting that

189
00:16:33,539 --> 00:16:37,169
this is a mechanism that's kind of

190
00:16:35,489 --> 00:16:40,439
optional because it depends on whether

191
00:16:37,169 --> 00:16:42,660
the great shaping buffer information is

192
00:16:40,439 --> 00:16:44,669
available or not in the sender that

193
00:16:42,660 --> 00:16:47,189
implementation so it's outside of the

194
00:16:44,669 --> 00:16:49,049
core congestion control modular so it

195
00:16:47,189 --> 00:16:52,319
added some bonding conditions both on

196
00:16:49,049 --> 00:16:55,049
the size of the absolute yessir as a

197
00:16:52,319 --> 00:16:57,509
percentage of the reference rate as well

198
00:16:55,049 --> 00:17:00,239
as bounding the final rate decisions

199
00:16:57,509 --> 00:17:02,519
within its original and range the

200
00:17:00,239 --> 00:17:05,429
minimum and the max so all these text

201
00:17:02,519 --> 00:17:08,699
changes are now in the version 11 of the

202
00:17:05,429 --> 00:17:12,059
draft and in addition as I mentioned

203
00:17:08,699 --> 00:17:14,039
this is a option of the feature not

204
00:17:12,059 --> 00:17:17,279
really not the core congestion control

205
00:17:14,039 --> 00:17:19,648
modeler the second point raised by the

206
00:17:17,279 --> 00:17:22,019
ad review was to add text on the

207
00:17:19,648 --> 00:17:24,599
security considerations so we did that

208
00:17:22,019 --> 00:17:27,000
and I'll be fleshing out the security

209
00:17:24,599 --> 00:17:28,918
consideration text in the next page and

210
00:17:27,000 --> 00:17:31,350
finally there were some editorial

211
00:17:28,919 --> 00:17:35,190
suggestions we incorporated all of them

212
00:17:31,350 --> 00:17:39,449
in the draft and I see mirror a console

213
00:17:35,190 --> 00:17:41,159
there's a question go ahead I didn't

214
00:17:39,450 --> 00:17:42,389
notice that do you that this is optional

215
00:17:41,159 --> 00:17:45,539
can you explain why it's optional

216
00:17:42,389 --> 00:17:48,209
optional in the sense that so the

217
00:17:45,539 --> 00:17:51,389
implementation is not on the congestion

218
00:17:48,210 --> 00:17:54,029
control modular but rather in the sender

219
00:17:51,389 --> 00:17:57,449
module so in the draft we have a diagram

220
00:17:54,029 --> 00:17:59,549
showing that it it basically revises the

221
00:17:57,450 --> 00:18:02,399
rate calculation from the congestion

222
00:17:59,549 --> 00:18:05,039
control modular but modulates descending

223
00:18:02,399 --> 00:18:07,979
the reason why it's respect this rate

224
00:18:05,039 --> 00:18:10,529
shaping buffer and information may or

225
00:18:07,980 --> 00:18:12,690
may not be exposed to the let's it to

226
00:18:10,529 --> 00:18:15,179
the developer so for instance in our an

227
00:18:12,690 --> 00:18:16,649
s3 simulation we added the

228
00:18:15,179 --> 00:18:19,409
implementation of the race shipping

229
00:18:16,649 --> 00:18:22,439
buffer but then in our implementation of

230
00:18:19,409 --> 00:18:24,210
the mozilla code right and there is no

231
00:18:22,440 --> 00:18:26,279
way in the congestion control modeler to

232
00:18:24,210 --> 00:18:29,330
find this information so that's why it's

233
00:18:26,279 --> 00:18:32,639
an external mechanism to to handle

234
00:18:29,330 --> 00:18:34,980
instantaneous sort of additional bursts

235
00:18:32,639 --> 00:18:37,620
of traffic kind of the discrepancy

236
00:18:34,980 --> 00:18:39,059
between what the video encoder produces

237
00:18:37,620 --> 00:18:45,469
and what we want to send over the

238
00:18:39,059 --> 00:18:49,619
network but was that clear yeah

239
00:18:45,470 --> 00:18:52,379
okay so yeah cool so then the next page

240
00:18:49,619 --> 00:18:56,428
I'll just show up the text on the

241
00:18:52,379 --> 00:18:58,619
security consideration next slide yes so

242
00:18:56,429 --> 00:18:59,700
this one maybe I'll briefly mention it

243
00:18:58,619 --> 00:19:01,918
and of course you know people are

244
00:18:59,700 --> 00:19:05,100
welcome to read it it's the same text

245
00:19:01,919 --> 00:19:07,470
now in the track as well as I coded the

246
00:19:05,100 --> 00:19:10,080
same text in the email so there are sort

247
00:19:07,470 --> 00:19:12,450
of two maybe aspects of security

248
00:19:10,080 --> 00:19:13,949
consideration the first one is to say

249
00:19:12,450 --> 00:19:16,799
that because everything is feedback

250
00:19:13,950 --> 00:19:21,019
based so we do want the feedback message

251
00:19:16,799 --> 00:19:23,658
to be an integrity checked you know

252
00:19:21,019 --> 00:19:25,710
there is kind of the potential

253
00:19:23,659 --> 00:19:28,919
vulnerability to attacks based on

254
00:19:25,710 --> 00:19:31,350
feedback messages now secondly is kind

255
00:19:28,919 --> 00:19:33,720
of inspired by mirrors comment to say

256
00:19:31,350 --> 00:19:37,289
that you know this mechanism of the

257
00:19:33,720 --> 00:19:40,799
great shaping buffer potentially is can

258
00:19:37,289 --> 00:19:44,340
you know can can hold up you know large

259
00:19:40,799 --> 00:19:46,710
chunks of data if the encoder is not a

260
00:19:44,340 --> 00:19:49,709
responsive one and our current

261
00:19:46,710 --> 00:19:52,980
medication in the draft is to limit its

262
00:19:49,710 --> 00:19:55,320
impact on the sort of on the outgoing

263
00:19:52,980 --> 00:19:58,139
traffic so in the worst case the video

264
00:19:55,320 --> 00:19:59,908
itself will suffer but the traffic over

265
00:19:58,139 --> 00:20:02,850
the network will still be congestion

266
00:19:59,909 --> 00:20:05,789
control so if people have suggestions of

267
00:20:02,850 --> 00:20:08,519
notes on the text in the in this section

268
00:20:05,789 --> 00:20:11,190
feel free to either mention it here or

269
00:20:08,519 --> 00:20:16,619
you know discuss further on the mailing

270
00:20:11,190 --> 00:20:18,960
list and so if that is fine maybe we can

271
00:20:16,619 --> 00:20:21,149
move on so these are some of the results

272
00:20:18,960 --> 00:20:23,610
just showing kind of the before and

273
00:20:21,149 --> 00:20:24,928
after in introducing the influence of

274
00:20:23,610 --> 00:20:27,600
the great shaping buffer

275
00:20:24,929 --> 00:20:30,419
these are simulation results from the

276
00:20:27,600 --> 00:20:32,850
and s3 simulation the ones on the should

277
00:20:30,419 --> 00:20:35,700
be should be identical to what we've

278
00:20:32,850 --> 00:20:39,029
shown an earlier and then the one ones

279
00:20:35,700 --> 00:20:41,759
on the right are using this in basically

280
00:20:39,029 --> 00:20:43,889
adding the year the influence of the

281
00:20:41,759 --> 00:20:46,889
read shaping buffer bite by tuning up

282
00:20:43,889 --> 00:20:51,689
the scaling parameter from zero to point

283
00:20:46,889 --> 00:20:53,639
one and I can I picked four I think I

284
00:20:51,690 --> 00:20:55,590
picked three out of the test cases to

285
00:20:53,639 --> 00:20:57,080
show in this section and then there are

286
00:20:55,590 --> 00:20:59,870
a few more in the very

287
00:20:57,080 --> 00:21:02,000
and just because qualitatively we see

288
00:20:59,870 --> 00:21:05,090
very similar behavior except that and

289
00:21:02,000 --> 00:21:06,680
the one on the right because of the the

290
00:21:05,090 --> 00:21:08,449
you know the slight change

291
00:21:06,680 --> 00:21:09,920
multiplications of the grades

292
00:21:08,450 --> 00:21:11,840
added by the great shaping effort

293
00:21:09,920 --> 00:21:14,120
there's a little bit of a jitter so this

294
00:21:11,840 --> 00:21:18,040
is the first test case with a single

295
00:21:14,120 --> 00:21:18,040
flow and next page please

296
00:21:18,280 --> 00:21:24,320
this one is shows the competition of two

297
00:21:21,770 --> 00:21:26,570
floats over and time glaring ventless

298
00:21:24,320 --> 00:21:29,149
and it is also interesting to see that

299
00:21:26,570 --> 00:21:31,070
for instance in the second case there's

300
00:21:29,150 --> 00:21:32,510
there's always some random hissing you

301
00:21:31,070 --> 00:21:34,879
know in how the traffic is being

302
00:21:32,510 --> 00:21:37,670
modulated over to the network so in the

303
00:21:34,880 --> 00:21:40,130
second case for instance the the one on

304
00:21:37,670 --> 00:21:43,210
the right kind of works even a bit

305
00:21:40,130 --> 00:21:47,750
better than the delay introduced in that

306
00:21:43,210 --> 00:21:51,470
this region is slightly lower next page

307
00:21:47,750 --> 00:21:54,590
and the other test case I'm showing is

308
00:21:51,470 --> 00:21:57,950
for the multiple competing flows with

309
00:21:54,590 --> 00:21:59,689
different round-trip time over sort of

310
00:21:57,950 --> 00:22:03,050
over different paths sharing a

311
00:21:59,690 --> 00:22:05,830
bottleneck and and I think I'm also

312
00:22:03,050 --> 00:22:08,570
showing the next page reads

313
00:22:05,830 --> 00:22:12,679
so the five point six this one is the

314
00:22:08,570 --> 00:22:14,929
competition against TCP so I thought

315
00:22:12,680 --> 00:22:17,570
these side-by-side simulations can help

316
00:22:14,930 --> 00:22:19,910
to characterize that the impact of the

317
00:22:17,570 --> 00:22:22,460
rating buffer for the parameter value

318
00:22:19,910 --> 00:22:25,640
that will pick the end of this slide

319
00:22:22,460 --> 00:22:28,580
deck also includes the remaining four

320
00:22:25,640 --> 00:22:30,950
test cases and for this suit just for

321
00:22:28,580 --> 00:22:33,320
just for reference but I think maybe in

322
00:22:30,950 --> 00:22:36,160
the interest of time I won't go into

323
00:22:33,320 --> 00:22:41,899
them they show very similar qualitative

324
00:22:36,160 --> 00:22:44,270
comparisons and next page please so now

325
00:22:41,900 --> 00:22:47,840
for the second half of the presentation

326
00:22:44,270 --> 00:22:49,700
I wanted to give an update on the

327
00:22:47,840 --> 00:22:52,480
implementation both on the

328
00:22:49,700 --> 00:22:57,320
implementation state status and some

329
00:22:52,480 --> 00:23:00,040
evaluation results and this is of the

330
00:22:57,320 --> 00:23:02,689
NADA implementation we have rebates or

331
00:23:00,040 --> 00:23:06,500
modifications to the mozilla-central

332
00:23:02,690 --> 00:23:09,250
nightly branch to a much newer recent so

333
00:23:06,500 --> 00:23:11,120
sorry to a much more recent version

334
00:23:09,250 --> 00:23:16,490
compared to our last

335
00:23:11,120 --> 00:23:19,340
presentation so is this one we this one

336
00:23:16,490 --> 00:23:22,160
the main difference is that this this

337
00:23:19,340 --> 00:23:24,770
May version of the Mozilla Apple now

338
00:23:22,160 --> 00:23:27,170
incorporates are also a much more recent

339
00:23:24,770 --> 00:23:29,420
version of the web RTC Mozilla we did

340
00:23:27,170 --> 00:23:31,130
realize that the earlier modifications

341
00:23:29,420 --> 00:23:33,950
we did there were a lot of coach angels

342
00:23:31,130 --> 00:23:36,559
in web RTC so we now replace it to the

343
00:23:33,950 --> 00:23:39,230
newer version and if people interested

344
00:23:36,559 --> 00:23:41,330
in checking out the code we do have we

345
00:23:39,230 --> 00:23:43,400
do have we have pushed it up you know

346
00:23:41,330 --> 00:23:46,070
under Sergio's account and also under my

347
00:23:43,400 --> 00:23:47,660
accounts are as a development branch so

348
00:23:46,070 --> 00:23:49,370
this link for instance if you're looking

349
00:23:47,660 --> 00:23:51,220
to there you'll be able to see our code

350
00:23:49,370 --> 00:23:54,739
if you want right now it's slightly

351
00:23:51,220 --> 00:23:57,370
pending some further clean cleaning up

352
00:23:54,740 --> 00:24:00,620
but you know the main logic is there and

353
00:23:57,370 --> 00:24:02,809
in terms of the main part of the code

354
00:24:00,620 --> 00:24:06,189
changes that in this version of the

355
00:24:02,809 --> 00:24:10,460
implementation what we did is that we

356
00:24:06,190 --> 00:24:14,540
replaced with switch the use of playing

357
00:24:10,460 --> 00:24:16,280
web RTC there was a delay based sorry I

358
00:24:14,540 --> 00:24:19,460
think it should be delay based spend

359
00:24:16,280 --> 00:24:24,620
with CERN and with estimation model not

360
00:24:19,460 --> 00:24:27,650
one other delay based PMP w/e modular

361
00:24:24,620 --> 00:24:29,689
with our own nada one-way delay based on

362
00:24:27,650 --> 00:24:32,150
congestion control and this is in the

363
00:24:29,690 --> 00:24:34,820
congestion control modular a within web

364
00:24:32,150 --> 00:24:37,790
RTC and here compared to our previous

365
00:24:34,820 --> 00:24:39,950
presentation in this version will

366
00:24:37,790 --> 00:24:43,610
following the draft more strictly in the

367
00:24:39,950 --> 00:24:46,250
sense that we now use a relative one-way

368
00:24:43,610 --> 00:24:47,990
delay as the congestion signal so the

369
00:24:46,250 --> 00:24:50,630
calculation of the congestion control

370
00:24:47,990 --> 00:24:52,640
signal now follows more closely to the

371
00:24:50,630 --> 00:24:55,820
draft I should mention that at this

372
00:24:52,640 --> 00:24:58,190
stage we haven't yet added the influence

373
00:24:55,820 --> 00:25:00,830
of packet losses yet that is pending

374
00:24:58,190 --> 00:25:03,590
further investigation but in terms of

375
00:25:00,830 --> 00:25:06,678
using a reacting to delay and using a

376
00:25:03,590 --> 00:25:08,750
relative one-way delay as the basic

377
00:25:06,679 --> 00:25:12,650
congestion control no we're not were not

378
00:25:08,750 --> 00:25:14,660
in sync with the draft and the reason we

379
00:25:12,650 --> 00:25:18,200
are able to do it is that with this

380
00:25:14,660 --> 00:25:21,500
version if we interoperate with an

381
00:25:18,200 --> 00:25:24,530
unmodified Chrome or Firefox they both

382
00:25:21,500 --> 00:25:26,510
support the track see back we

383
00:25:24,530 --> 00:25:29,240
provides which actually reports a

384
00:25:26,510 --> 00:25:31,250
perfected information including sequence

385
00:25:29,240 --> 00:25:33,560
number as well as send and receive

386
00:25:31,250 --> 00:25:36,200
timestamp which turned out to be a super

387
00:25:33,560 --> 00:25:39,310
convenient for us to gather all the per

388
00:25:36,200 --> 00:25:42,440
packet information at the sender and the

389
00:25:39,310 --> 00:25:45,290
your error I product here is sort of

390
00:25:42,440 --> 00:25:48,410
embedded in the code itself and that is

391
00:25:45,290 --> 00:25:50,810
how the transport CC feedback message is

392
00:25:48,410 --> 00:25:55,370
sort of incremented based on so with

393
00:25:50,810 --> 00:25:58,490
that we can operate with sort of against

394
00:25:55,370 --> 00:26:01,040
our modified Chrome or Firefox browser

395
00:25:58,490 --> 00:26:05,150
so long as both sides support transport

396
00:26:01,040 --> 00:26:08,570
system and finally just for convenience

397
00:26:05,150 --> 00:26:11,960
our implementation we also use export

398
00:26:08,570 --> 00:26:14,780
statistics using similar mechanism the

399
00:26:11,960 --> 00:26:17,380
sort of the standard web RTC login

400
00:26:14,780 --> 00:26:20,870
framework and that's kind of the main

401
00:26:17,380 --> 00:26:23,900
changes in the in the code in terms of

402
00:26:20,870 --> 00:26:26,270
implementation we basically implemented

403
00:26:23,900 --> 00:26:29,330
our modular and you know modify some of

404
00:26:26,270 --> 00:26:31,400
the switching logic in WebRTC to use the

405
00:26:29,330 --> 00:26:33,590
nagas based bandwidth estimation as

406
00:26:31,400 --> 00:26:38,390
opposed to the delay the original delay

407
00:26:33,590 --> 00:26:41,570
based Ventus estimation and if that is

408
00:26:38,390 --> 00:26:44,210
good I can maybe explain a bit more kind

409
00:26:41,570 --> 00:26:46,340
of the test setup we we have carried out

410
00:26:44,210 --> 00:26:49,460
will follow more or less the same

411
00:26:46,340 --> 00:26:52,520
formula in the sense that we set up by

412
00:26:49,460 --> 00:26:55,370
directional audio-visual cars between a

413
00:26:52,520 --> 00:26:57,950
modified Firefox nightly with our Ranade

414
00:26:55,370 --> 00:27:01,010
in one way relative one way delay based

415
00:26:57,950 --> 00:27:04,670
bandwidth estimation against an

416
00:27:01,010 --> 00:27:07,580
unmodified Chrome browser so basically

417
00:27:04,670 --> 00:27:11,000
the blue stream right from hi and a to B

418
00:27:07,580 --> 00:27:13,850
will be sort of congestion controlled

419
00:27:11,000 --> 00:27:16,700
using the proposed nada scheme whereas

420
00:27:13,850 --> 00:27:20,300
the reversed and green extreme from

421
00:27:16,700 --> 00:27:22,670
client B to a will be sort of congestion

422
00:27:20,300 --> 00:27:25,610
control using Chrome so whatever is the

423
00:27:22,670 --> 00:27:27,530
import algorithm there and the reason

424
00:27:25,610 --> 00:27:29,570
why we want to do bi-directional and

425
00:27:27,530 --> 00:27:32,090
also check out the performance of the

426
00:27:29,570 --> 00:27:34,460
reverse direction is mostly just to

427
00:27:32,090 --> 00:27:36,919
consider that as a reference but of

428
00:27:34,460 --> 00:27:38,390
course I do want to call out that the

429
00:27:36,920 --> 00:27:39,860
comparison between

430
00:27:38,390 --> 00:27:41,899
the blue and the green are not really

431
00:27:39,860 --> 00:27:45,500
side-by-side comparisons yeah this is

432
00:27:41,899 --> 00:27:49,029
more just for our reference and most of

433
00:27:45,500 --> 00:27:53,360
the but the other thing we did for our

434
00:27:49,029 --> 00:27:55,010
is that we just fixed the screen but

435
00:27:53,360 --> 00:27:57,199
address it so basically in the browser

436
00:27:55,010 --> 00:28:01,429
you can configure the default resolution

437
00:27:57,200 --> 00:28:03,679
so we set it to 720p and then also

438
00:28:01,429 --> 00:28:06,559
inside the code we set our our mags to

439
00:28:03,679 --> 00:28:09,980
three men but then I looked into some of

440
00:28:06,559 --> 00:28:12,440
the code in the Mozilla browser there is

441
00:28:09,980 --> 00:28:15,049
a spatial resolutions of baseline rates

442
00:28:12,440 --> 00:28:18,620
which ended with limits the sending rate

443
00:28:15,049 --> 00:28:21,019
to 0.55 by the representin if the X the

444
00:28:18,620 --> 00:28:23,360
resolution of 720p and that is indeed

445
00:28:21,019 --> 00:28:26,510
what we observed and finally as I

446
00:28:23,360 --> 00:28:29,779
mentioned we do lock the statistics of

447
00:28:26,510 --> 00:28:33,769
the outgoing floor based on both the our

448
00:28:29,779 --> 00:28:37,789
calculation itself as well as the as

449
00:28:33,769 --> 00:28:40,279
well as the the per packet sort of

450
00:28:37,789 --> 00:28:42,679
information from the feedback message so

451
00:28:40,279 --> 00:28:45,380
from that we do have kind of per packets

452
00:28:42,679 --> 00:28:48,049
and information of how our how the blue

453
00:28:45,380 --> 00:28:50,419
stream went and then also to double

454
00:28:48,049 --> 00:28:53,389
check on those results in chrome the

455
00:28:50,419 --> 00:28:55,970
conveniently provides you know graphs of

456
00:28:53,389 --> 00:28:58,370
ongoing statistics in both directions so

457
00:28:55,970 --> 00:29:00,440
we also have a few screenshots just to

458
00:28:58,370 --> 00:29:04,219
corroborate with whatever we measure

459
00:29:00,440 --> 00:29:06,620
locally and so let's go through a few of

460
00:29:04,220 --> 00:29:10,340
the evaluation scenarios and what we

461
00:29:06,620 --> 00:29:11,959
measure next paper please so the first

462
00:29:10,340 --> 00:29:14,600
scenario is really more a sanity check

463
00:29:11,960 --> 00:29:17,510
so this is more I have two Macs in my

464
00:29:14,600 --> 00:29:20,719
home I have you know sort of Google

465
00:29:17,510 --> 00:29:22,340
Fiber and then you know Wi-Fi so

466
00:29:20,720 --> 00:29:24,830
basically it's a local connection

467
00:29:22,340 --> 00:29:27,439
between two clients and connected

468
00:29:24,830 --> 00:29:33,230
through a home Wi-Fi I am used a sorry I

469
00:29:27,440 --> 00:29:35,929
forgot to mention I am using the APR is

470
00:29:33,230 --> 00:29:37,850
but I believe that it's more for and

471
00:29:35,929 --> 00:29:40,149
setting up the car where's the car is it

472
00:29:37,850 --> 00:29:44,059
set up it doesn't really go through that

473
00:29:40,149 --> 00:29:46,399
it does not really go through the UM the

474
00:29:44,059 --> 00:29:48,379
the server so it's a peer-to-peer car so

475
00:29:46,399 --> 00:29:50,250
for instance in this first car it is a

476
00:29:48,380 --> 00:29:53,250
local car

477
00:29:50,250 --> 00:29:55,799
what I'm showing here are three graphs

478
00:29:53,250 --> 00:29:57,659
and they were state of the the semantics

479
00:29:55,799 --> 00:30:00,450
would stay the same for the rest of the

480
00:29:57,659 --> 00:30:02,789
presentation the first one shows both

481
00:30:00,450 --> 00:30:06,030
the calculated grade by the conditional

482
00:30:02,789 --> 00:30:08,700
continued modular in blue as well as the

483
00:30:06,030 --> 00:30:10,770
reported kind of the impact rates by the

484
00:30:08,700 --> 00:30:13,500
receiver based on the per packet

485
00:30:10,770 --> 00:30:16,260
information and in red so for instance

486
00:30:13,500 --> 00:30:19,380
once in a while those people to

487
00:30:16,260 --> 00:30:22,049
introduce sort of spiked up arrivals at

488
00:30:19,380 --> 00:30:25,830
the receivers we do see them at you know

489
00:30:22,049 --> 00:30:27,720
the s reported back in red and as as I

490
00:30:25,830 --> 00:30:29,939
mentioned before even though our reads

491
00:30:27,720 --> 00:30:33,870
congestion control algorithm in this

492
00:30:29,940 --> 00:30:36,000
case it's kind of uncongested specifies

493
00:30:33,870 --> 00:30:38,639
the sending grades to be the reference

494
00:30:36,000 --> 00:30:41,159
rate to be 3 megabits per second the

495
00:30:38,640 --> 00:30:45,000
actual sending rate is limited by one to

496
00:30:41,159 --> 00:30:46,890
two point five meter per second in the

497
00:30:45,000 --> 00:30:49,140
middle graph shows the delay in

498
00:30:46,890 --> 00:30:51,570
pollution we report on both the

499
00:30:49,140 --> 00:30:54,510
congestion control signal which is the

500
00:30:51,570 --> 00:30:56,730
relative one-way delay in blue as well

501
00:30:54,510 --> 00:30:59,908
as as a reference the round-trip time

502
00:30:56,730 --> 00:31:03,169
measurement on the per packet basis in

503
00:30:59,909 --> 00:31:06,750
Inglot and the bottom graph shows the

504
00:31:03,169 --> 00:31:10,169
instantaneous packet loss ratio measured

505
00:31:06,750 --> 00:31:12,179
over a window of five hundred minutes

506
00:31:10,169 --> 00:31:15,480
ago I believe but then with the sliding

507
00:31:12,179 --> 00:31:18,720
windows our report for for one data

508
00:31:15,480 --> 00:31:20,549
point for every 100 minute second so

509
00:31:18,720 --> 00:31:22,440
even though you do see sort of

510
00:31:20,549 --> 00:31:24,690
vocational route are some very high in

511
00:31:22,440 --> 00:31:27,480
setting up a Colossus coinciding with

512
00:31:24,690 --> 00:31:30,059
those big delays the overall loss ratio

513
00:31:27,480 --> 00:31:32,190
as reported up only one point six

514
00:31:30,059 --> 00:31:34,230
percent throughout this session so most

515
00:31:32,190 --> 00:31:37,770
of the time there are no losses but when

516
00:31:34,230 --> 00:31:39,450
there is it's very thirsty so and also

517
00:31:37,770 --> 00:31:42,240
in this case because it's a local

518
00:31:39,450 --> 00:31:45,270
connection the baseline RTP is only five

519
00:31:42,240 --> 00:31:47,159
millisecond but then believe it or not

520
00:31:45,270 --> 00:31:49,139
you know even in a local session one

521
00:31:47,159 --> 00:31:51,539
thing about the RTT measurement is one

522
00:31:49,140 --> 00:31:55,230
point the highest part it is one point

523
00:31:51,539 --> 00:31:58,830
two setting it lucky you have a question

524
00:31:55,230 --> 00:32:02,250
yeah just a clarification question sure

525
00:31:58,830 --> 00:32:04,179
so you say like your kind implementation

526
00:32:02,250 --> 00:32:06,160
doesn't react to packet loss

527
00:32:04,180 --> 00:32:08,830
yes right now we're not using that

528
00:32:06,160 --> 00:32:14,050
information yet yes oh yes so the high

529
00:32:08,830 --> 00:32:16,830
losses will not create impact condition

530
00:32:14,050 --> 00:32:19,899
control at all okay just I just wanted

531
00:32:16,830 --> 00:32:21,550
because I want to beaut I got to build

532
00:32:19,900 --> 00:32:24,700
the implementation of one layer at a

533
00:32:21,550 --> 00:32:26,080
time yeah and go ahead Anna yeah yeah so

534
00:32:24,700 --> 00:32:27,640
from the floor so I'm also the

535
00:32:26,080 --> 00:32:30,850
clarifying question because you have the

536
00:32:27,640 --> 00:32:35,170
path characteristics and they're the max

537
00:32:30,850 --> 00:32:37,389
or tt is 1.2 seconds and in your delay

538
00:32:35,170 --> 00:32:39,670
measurements you don't have that high

539
00:32:37,390 --> 00:32:42,550
value so is this during a longer time

540
00:32:39,670 --> 00:32:48,190
period or how does have character that's

541
00:32:42,550 --> 00:32:51,399
a great respond to the I limited the

542
00:32:48,190 --> 00:32:53,860
graph to 400 mini-set and top just so

543
00:32:51,400 --> 00:32:56,680
that we can see because otherwise if we

544
00:32:53,860 --> 00:32:58,360
saw everything for scale and the blue

545
00:32:56,680 --> 00:33:01,630
and the red would be locked together

546
00:32:58,360 --> 00:33:07,719
that's also why I'm reporting on the one

547
00:33:01,630 --> 00:33:11,020
going to sew a are high up there part

548
00:33:07,720 --> 00:33:14,040
yeah this is more visualization

549
00:33:11,020 --> 00:33:15,370
challenge yourself but I think for that

550
00:33:14,040 --> 00:33:17,710
question

551
00:33:15,370 --> 00:33:20,530
yeah that's also why I'm always

552
00:33:17,710 --> 00:33:22,390
reporting on the maximum RTP see usually

553
00:33:20,530 --> 00:33:25,270
they're not even a single data point

554
00:33:22,390 --> 00:33:28,150
there are a few and then I wanted to

555
00:33:25,270 --> 00:33:29,830
show the shape of the delay measurements

556
00:33:28,150 --> 00:33:32,950
a bit more clearly that's why I was

557
00:33:29,830 --> 00:33:39,820
limiting the kind of the the plotting

558
00:33:32,950 --> 00:33:42,190
bound yeah so if if folks are good sort

559
00:33:39,820 --> 00:33:44,500
of with this graph we can then we can

560
00:33:42,190 --> 00:33:46,930
move forward and of course feel free to

561
00:33:44,500 --> 00:33:49,540
answer a question sorry ask questions

562
00:33:46,930 --> 00:33:51,670
because I'm always happy to chat about

563
00:33:49,540 --> 00:33:56,740
how I measure and you know all kinds of

564
00:33:51,670 --> 00:33:59,020
observations the second so the from the

565
00:33:56,740 --> 00:34:01,600
same experiment shows none of the view

566
00:33:59,020 --> 00:34:04,900
report by the chrome so keep in mind

567
00:34:01,600 --> 00:34:06,850
that chrome is the client B so when it

568
00:34:04,900 --> 00:34:09,310
says it's a receive stream it really

569
00:34:06,850 --> 00:34:11,529
refers to the blue a to be stream which

570
00:34:09,310 --> 00:34:14,199
is controlled by nada whereas when it

571
00:34:11,530 --> 00:34:16,909
says when it's reporting on any of the

572
00:34:14,199 --> 00:34:20,029
sense doing statistics it's the one

573
00:34:16,909 --> 00:34:23,329
from p2a or just adding those labels for

574
00:34:20,029 --> 00:34:25,759
reference so we can see here the other

575
00:34:23,329 --> 00:34:29,329
thing is that the reported grades are in

576
00:34:25,759 --> 00:34:31,039
some reason are in bytes per second so

577
00:34:29,329 --> 00:34:33,049
whatever number you see here if you

578
00:34:31,039 --> 00:34:37,399
multiply by eight it should more or less

579
00:34:33,049 --> 00:34:40,369
corroborate disturb a red curve before

580
00:34:37,399 --> 00:34:42,440
for the direction of A to B whereas the

581
00:34:40,369 --> 00:34:44,440
reverse direction within the nada

582
00:34:42,440 --> 00:34:46,849
modular we really don't have any

583
00:34:44,440 --> 00:34:49,549
visibility into that so it was good or

584
00:34:46,849 --> 00:34:53,889
so cool just to check how the reversal

585
00:34:49,549 --> 00:34:57,139
was doing I want to mention that here

586
00:34:53,889 --> 00:34:59,960
because of the scale so the blue stream

587
00:34:57,139 --> 00:35:01,759
was operating more or less at 300

588
00:34:59,960 --> 00:35:04,970
kilobytes per second so that's

589
00:35:01,759 --> 00:35:08,380
approximately 2.4 2.5 megabits per

590
00:35:04,970 --> 00:35:12,319
second whereas the the reverse direction

591
00:35:08,380 --> 00:35:15,019
it's a little bit lower it's more at 200

592
00:35:12,319 --> 00:35:18,288
kilobytes per second so that's more like

593
00:35:15,019 --> 00:35:21,258
1.6 so for some reason the reverse flow

594
00:35:18,289 --> 00:35:23,990
was operating at a lower rate and that's

595
00:35:21,259 --> 00:35:27,319
also reflected are they're operating at

596
00:35:23,990 --> 00:35:30,819
a little bit lower at a lower spatial

597
00:35:27,319 --> 00:35:34,339
resolution even though with the same

598
00:35:30,819 --> 00:35:36,319
frame rate at 30 frames per second so

599
00:35:34,339 --> 00:35:39,470
this is a local flow by the way yeah so

600
00:35:36,319 --> 00:35:42,710
we are looking at more or less a typical

601
00:35:39,470 --> 00:35:44,390
but you know sort of probably kind of

602
00:35:42,710 --> 00:35:46,250
the best-case scenario more or less but

603
00:35:44,390 --> 00:35:48,589
but everything is a world Wi-Fi so

604
00:35:46,250 --> 00:35:55,720
they're still you know spikes of delay

605
00:35:48,589 --> 00:35:59,299
and next page please so this next one

606
00:35:55,720 --> 00:36:02,419
sort of and confirmed more to a more

607
00:35:59,299 --> 00:36:05,538
typical remote cause so this is between

608
00:36:02,420 --> 00:36:07,910
me and a colleague in San Jose so both

609
00:36:05,539 --> 00:36:10,130
of us are in fiscal office but those are

610
00:36:07,910 --> 00:36:11,868
thing over enterprise Wi-Fi so

611
00:36:10,130 --> 00:36:15,039
enterprise Wi-Fi and then you know as

612
00:36:11,869 --> 00:36:17,869
well and kind of enterprise of

613
00:36:15,039 --> 00:36:22,910
enterprise grade wired connections right

614
00:36:17,869 --> 00:36:24,740
behind that so here again maybe what I

615
00:36:22,910 --> 00:36:25,670
want to point out is that overall the

616
00:36:24,740 --> 00:36:29,598
past is

617
00:36:25,670 --> 00:36:30,440
uncongested and there is you know sort

618
00:36:29,599 --> 00:36:33,049
of

619
00:36:30,440 --> 00:36:35,390
target rate at three and the actual

620
00:36:33,049 --> 00:36:39,170
sending rates most of time at two point

621
00:36:35,390 --> 00:36:43,220
five we do see that in this case the

622
00:36:39,170 --> 00:36:46,579
baseline are kiki is reported at 16

623
00:36:43,220 --> 00:36:48,529
milliseconds so that's why in this scale

624
00:36:46,579 --> 00:36:50,299
of the graph would you see that you know

625
00:36:48,530 --> 00:36:53,140
there's there's kind of a floor of the

626
00:36:50,299 --> 00:36:55,190
are cheeky measurements whereas with

627
00:36:53,140 --> 00:36:57,200
relative one wait delay as the

628
00:36:55,190 --> 00:37:00,200
congestion signal most of Tanglers do

629
00:36:57,200 --> 00:37:01,759
measuring sort of close to zero so

630
00:37:00,200 --> 00:37:04,308
that's why the you know the sending rate

631
00:37:01,760 --> 00:37:07,220
is able to sustain at the maximum

632
00:37:04,309 --> 00:37:09,049
possible and occasional petty losses but

633
00:37:07,220 --> 00:37:10,098
occasional bonuses of packets maybe I

634
00:37:09,049 --> 00:37:13,130
should put it that way

635
00:37:10,099 --> 00:37:15,109
and I'm reporting on post there the

636
00:37:13,130 --> 00:37:17,960
highest our Tiki measured is actually

637
00:37:15,109 --> 00:37:20,569
two point five seconds and the overall

638
00:37:17,960 --> 00:37:23,720
loss ratio remains fairly low to point

639
00:37:20,569 --> 00:37:29,450
to over this duration of four hundred

640
00:37:23,720 --> 00:37:36,558
four hundred and fifteen seconds so next

641
00:37:29,450 --> 00:37:39,529
page so in this scenario I'm again kind

642
00:37:36,559 --> 00:37:42,799
of the reported rate on post directions

643
00:37:39,529 --> 00:37:45,369
from the chrome and sort of chrome

644
00:37:42,799 --> 00:37:49,190
reported statistics the corresponding

645
00:37:45,369 --> 00:37:52,640
framed resolution as well as the frames

646
00:37:49,190 --> 00:37:55,819
per second so in this case number wise

647
00:37:52,640 --> 00:37:58,400
both on the streams reach around three

648
00:37:55,819 --> 00:38:01,099
hundred kilobytes per second at the

649
00:37:58,400 --> 00:38:03,279
maximum rate but maybe one thing I do

650
00:38:01,099 --> 00:38:06,049
want to point out here is that

651
00:38:03,279 --> 00:38:08,420
apparently the NADA control stream is

652
00:38:06,049 --> 00:38:12,259
able to ramp up much faster compared to

653
00:38:08,420 --> 00:38:14,539
the the chrome default behavior and also

654
00:38:12,260 --> 00:38:16,579
in the middle there was Chrome's or

655
00:38:14,539 --> 00:38:19,010
maybe there was a a glitch and it took

656
00:38:16,579 --> 00:38:22,279
it like somewhat longer to recover

657
00:38:19,010 --> 00:38:26,450
whereas in another stream the recovery

658
00:38:22,279 --> 00:38:29,119
typically its varied asked so one that I

659
00:38:26,450 --> 00:38:31,700
didn't really talk about but I want to

660
00:38:29,119 --> 00:38:34,460
mention is that and another we have

661
00:38:31,700 --> 00:38:38,359
designed this the great adaptation to

662
00:38:34,460 --> 00:38:40,089
automate entry modes one is gradual

663
00:38:38,359 --> 00:38:43,009
great update the other one is

664
00:38:40,089 --> 00:38:43,630
accelerated ramp up initially we wanted

665
00:38:43,010 --> 00:38:46,749
the

666
00:38:43,630 --> 00:38:49,960
accelerated ramp up mode to to help the

667
00:38:46,749 --> 00:38:53,200
initial start great but turns out it's

668
00:38:49,960 --> 00:38:55,239
being invoked very often also in all

669
00:38:53,200 --> 00:38:57,399
those recovery mode so that turned out

670
00:38:55,239 --> 00:39:03,910
to be the main kind of one feature that

671
00:38:57,400 --> 00:39:07,559
really helped and if folks are good with

672
00:39:03,910 --> 00:39:11,440
this one I can move on to a second case

673
00:39:07,559 --> 00:39:14,470
between Austin and San Jose and so this

674
00:39:11,440 --> 00:39:16,869
one the main difference is that again

675
00:39:14,470 --> 00:39:20,109
this is between the two locations but in

676
00:39:16,869 --> 00:39:23,700
this case client B is behind a home

677
00:39:20,109 --> 00:39:28,299
Wi-Fi network so we see much easier

678
00:39:23,700 --> 00:39:31,269
delay measurements and in this case also

679
00:39:28,299 --> 00:39:35,400
even though physically the similar

680
00:39:31,269 --> 00:39:38,499
location much higher baseline our Kiki

681
00:39:35,400 --> 00:39:42,339
just maybe for reference the previous

682
00:39:38,499 --> 00:39:45,160
set up between the two offices it was 60

683
00:39:42,339 --> 00:39:46,690
minute set here even though the sender

684
00:39:45,160 --> 00:39:49,359
is at the same location

685
00:39:46,690 --> 00:39:53,170
just because receiver was behind a home

686
00:39:49,359 --> 00:39:55,299
Wi-Fi behind cable modem if the baseline

687
00:39:53,170 --> 00:40:00,930
our Tiki is now a hundred and ten

688
00:39:55,299 --> 00:40:03,219
milliseconds and the the high belay and

689
00:40:00,930 --> 00:40:07,029
sort of the corresponding burst of

690
00:40:03,219 --> 00:40:10,059
patchy losses are much more frequently

691
00:40:07,029 --> 00:40:13,630
within similar duration but other than

692
00:40:10,059 --> 00:40:15,640
that yeah so the sending rate right the

693
00:40:13,630 --> 00:40:17,710
calculate not ascending great to dip

694
00:40:15,640 --> 00:40:21,390
very frequently too but it also bounced

695
00:40:17,710 --> 00:40:26,910
back to the maximum rate whenever it can

696
00:40:21,390 --> 00:40:32,460
next page and this is the corresponding

697
00:40:26,910 --> 00:40:36,879
rate resolution and framing great

698
00:40:32,460 --> 00:40:39,940
statistics reported by van chrome so the

699
00:40:36,880 --> 00:40:44,259
top three graphs correspond to what we

700
00:40:39,940 --> 00:40:46,359
sort of measured for the blue stream for

701
00:40:44,259 --> 00:40:49,359
the NADA control stream and the bottom

702
00:40:46,359 --> 00:40:51,729
three graphs shows a reference on the

703
00:40:49,359 --> 00:40:54,640
reverse direction in this case the

704
00:40:51,729 --> 00:40:57,129
reverse direction does suffer a hike a

705
00:40:54,640 --> 00:41:00,730
bit so we see

706
00:40:57,130 --> 00:41:03,250
sort of fairly low grades and lower

707
00:41:00,730 --> 00:41:07,480
resolution and the frame the frame rate

708
00:41:03,250 --> 00:41:10,540
drops quite a bit I want to mention that

709
00:41:07,480 --> 00:41:12,460
visually obviously I also have some

710
00:41:10,540 --> 00:41:14,650
screenshots but since it's all people

711
00:41:12,460 --> 00:41:16,930
spaces I wasn't so sure whether to show

712
00:41:14,650 --> 00:41:20,140
them here the of course you know at this

713
00:41:16,930 --> 00:41:22,810
resolution and frame rates and also

714
00:41:20,140 --> 00:41:24,819
encoding grades yet the visual effect

715
00:41:22,810 --> 00:41:32,490
were not very good on the other

716
00:41:24,820 --> 00:41:35,620
direction so and then moving forward

717
00:41:32,490 --> 00:41:37,750
next page this is again between Austin

718
00:41:35,620 --> 00:41:40,810
and San Jose and this is a case where

719
00:41:37,750 --> 00:41:42,760
were a bit curious about what happens if

720
00:41:40,810 --> 00:41:45,970
you have a background address you know

721
00:41:42,760 --> 00:41:49,870
suburb ongoing data downloading flow so

722
00:41:45,970 --> 00:41:54,160
in this case the client be behind the

723
00:41:49,870 --> 00:41:57,100
home Wi-Fi also has an ongoing bit

724
00:41:54,160 --> 00:41:59,170
current as our BitTorrent sort of

725
00:41:57,100 --> 00:42:01,270
traffic and he verified that this

726
00:41:59,170 --> 00:42:04,210
disposal uplink and downlink both

727
00:42:01,270 --> 00:42:11,380
directions so in this case we did see

728
00:42:04,210 --> 00:42:15,460
that the fellow from A to B now operates

729
00:42:11,380 --> 00:42:18,340
at a much lower grades around 650 8

730
00:42:15,460 --> 00:42:19,840
kilobits per second and and the other

731
00:42:18,340 --> 00:42:21,700
thing I want to mention but I don't

732
00:42:19,840 --> 00:42:25,840
really have an explanation here is that

733
00:42:21,700 --> 00:42:31,359
in this case we also see that the actual

734
00:42:25,840 --> 00:42:34,300
grades is the target rate where is you

735
00:42:31,360 --> 00:42:36,010
know in critical way drawn so for this

736
00:42:34,300 --> 00:42:39,130
one I just want to mention this

737
00:42:36,010 --> 00:42:42,070
conservation but it it's pending further

738
00:42:39,130 --> 00:42:51,310
investigation to to find out why

739
00:42:42,070 --> 00:42:57,010
now delay wise they did my article 125

740
00:42:51,310 --> 00:43:00,700
mini second and similar maximum RT key

741
00:42:57,010 --> 00:43:02,320
and loss ratio as before so this mainly

742
00:43:00,700 --> 00:43:05,710
shows that in the presence of a

743
00:43:02,320 --> 00:43:09,340
persistent background traffic the video

744
00:43:05,710 --> 00:43:10,240
flow itself in term you know only

745
00:43:09,340 --> 00:43:13,000
operates at a much

746
00:43:10,240 --> 00:43:16,419
lower sort of this is how it operates

747
00:43:13,000 --> 00:43:23,410
right now in the face of a competing

748
00:43:16,420 --> 00:43:26,619
flow next page and if you look at both

749
00:43:23,410 --> 00:43:29,830
directions the top graph shows the NADA

750
00:43:26,619 --> 00:43:32,110
behavior the bottom graphs shows in the

751
00:43:29,830 --> 00:43:35,440
chrome behavior I do want to mention

752
00:43:32,110 --> 00:43:37,780
that here the rate reported by the

753
00:43:35,440 --> 00:43:42,850
direction controlled by chrome operates

754
00:43:37,780 --> 00:43:46,630
at even lower rate the the Nano graph is

755
00:43:42,850 --> 00:43:51,430
a 80 kilobytes per second whereas for

756
00:43:46,630 --> 00:43:53,710
Chrome it's below 20 kilobytes so so so

757
00:43:51,430 --> 00:43:56,890
looks like chrome the chrome flow and

758
00:43:53,710 --> 00:43:59,580
suffers even more in the presence of the

759
00:43:56,890 --> 00:43:59,580
background traffic

760
00:44:00,810 --> 00:44:08,380
yeah and that shows up on post frame

761
00:44:04,090 --> 00:44:15,100
frame rate and the resolution choices

762
00:44:08,380 --> 00:44:18,070
too so I have two more two more

763
00:44:15,100 --> 00:44:21,069
experiments to go over and now in this

764
00:44:18,070 --> 00:44:23,770
case I was working with another

765
00:44:21,070 --> 00:44:25,660
colleague and this this is the call over

766
00:44:23,770 --> 00:44:27,820
even longer distances across the

767
00:44:25,660 --> 00:44:33,549
Atlantic because we really wanted to

768
00:44:27,820 --> 00:44:36,940
stretch the past RT and Lisa these type

769
00:44:33,550 --> 00:44:38,950
of remote colors can crystal sustain so

770
00:44:36,940 --> 00:44:42,700
this one is between Austin Texas and

771
00:44:38,950 --> 00:44:45,910
Florida in Switzerland and we listed two

772
00:44:42,700 --> 00:44:48,640
cases in this first case the client B is

773
00:44:45,910 --> 00:44:51,100
wired lately connected so the only

774
00:44:48,640 --> 00:44:53,640
waters hub is between I laptop you know

775
00:44:51,100 --> 00:44:56,080
in the local enterprise Wi-Fi network

776
00:44:53,640 --> 00:45:00,520
that may be compared to previous graphs

777
00:44:56,080 --> 00:45:03,130
now the past is much cleaner there are

778
00:45:00,520 --> 00:45:07,060
still occasional archie keys and even a

779
00:45:03,130 --> 00:45:11,560
big one but overall with even lower

780
00:45:07,060 --> 00:45:13,210
losses and more stable calculate posts

781
00:45:11,560 --> 00:45:16,299
the calculate the gradient and the

782
00:45:13,210 --> 00:45:19,720
actual rate i should mention that in

783
00:45:16,300 --> 00:45:23,170
this case the based on RTG is 180 mini

784
00:45:19,720 --> 00:45:25,720
second that's very high so I was on

785
00:45:23,170 --> 00:45:31,410
I was happy that this in didn't break it

786
00:45:25,720 --> 00:45:35,439
sort of still worked well next page and

787
00:45:31,410 --> 00:45:38,140
this one shows the the corresponding

788
00:45:35,440 --> 00:45:39,880
screenshot me you both for for both

789
00:45:38,140 --> 00:45:42,848
directions I guess by now you guys are

790
00:45:39,880 --> 00:45:45,160
very familiar what to look for in these

791
00:45:42,849 --> 00:45:49,839
graphs supposed sending worried as well

792
00:45:45,160 --> 00:45:53,200
as the frame sort of the temporal rate

793
00:45:49,839 --> 00:45:54,880
yeah off of the frames I forgot to point

794
00:45:53,200 --> 00:45:57,098
out that in this case for instance the

795
00:45:54,880 --> 00:46:00,160
reverse direction this is quite typical

796
00:45:57,099 --> 00:46:02,440
of Chrome it typically takes them a bit

797
00:46:00,160 --> 00:46:08,859
longer time to ramp up on the next wait

798
00:46:02,440 --> 00:46:11,520
even if the past is good and one final

799
00:46:08,859 --> 00:46:15,598
set of experiments this is again between

800
00:46:11,520 --> 00:46:18,670
Austin and the Switzerland office and

801
00:46:15,599 --> 00:46:20,950
this Switzerland office the Wi-Fi

802
00:46:18,670 --> 00:46:23,500
connection happens to be very choppy so

803
00:46:20,950 --> 00:46:26,379
even when we were let's say occasional

804
00:46:23,500 --> 00:46:30,010
cause over WebEx etc sometimes even the

805
00:46:26,380 --> 00:46:32,319
audio itself that's largely delayed so

806
00:46:30,010 --> 00:46:34,690
instead of using the wired connection

807
00:46:32,319 --> 00:46:37,349
for client B in this case we switch back

808
00:46:34,690 --> 00:46:40,630
to enterprise Wi-Fi and we see a similar

809
00:46:37,349 --> 00:46:43,750
behavior kind of similar as previous

810
00:46:40,630 --> 00:46:49,299
case with a home connection so those big

811
00:46:43,750 --> 00:46:52,650
Jones of spite of delay introduced brief

812
00:46:49,299 --> 00:46:55,480
jobs in the calculated rates but our

813
00:46:52,650 --> 00:46:57,819
calculations also our target rate bounce

814
00:46:55,480 --> 00:47:05,950
back thirdly the clean and the crisp on

815
00:46:57,819 --> 00:47:08,650
the sort of her delay and bursts of loss

816
00:47:05,950 --> 00:47:11,078
sorry I forgot to puts the loss ratio

817
00:47:08,650 --> 00:47:14,760
number in this one I should look up the

818
00:47:11,079 --> 00:47:17,710
number and feed adding that was a glitch

819
00:47:14,760 --> 00:47:19,660
but it but I should mention or sin it

820
00:47:17,710 --> 00:47:23,049
should be similar to the the previous

821
00:47:19,660 --> 00:47:28,390
work is around one or two percent

822
00:47:23,049 --> 00:47:31,420
probably next one and this one we didn't

823
00:47:28,390 --> 00:47:33,700
capture the corresponding resolution and

824
00:47:31,420 --> 00:47:35,799
great information what the I should

825
00:47:33,700 --> 00:47:36,490
mention is that throughout our case my

826
00:47:35,799 --> 00:47:39,280
guest speakers

827
00:47:36,490 --> 00:47:45,040
we have specified the import resolution

828
00:47:39,280 --> 00:47:45,730
in the in the nada controlled stream in

829
00:47:45,040 --> 00:47:49,840
Firefox

830
00:47:45,730 --> 00:47:53,470
the resolution is always at 720p so

831
00:47:49,840 --> 00:47:56,020
great changes show up in frame rate

832
00:47:53,470 --> 00:47:58,240
changes whereas in Chrome to adapt both

833
00:47:56,020 --> 00:48:01,900
the frame rate has as well as the

834
00:47:58,240 --> 00:48:05,319
spatial resolution so here there's a

835
00:48:01,900 --> 00:48:08,830
difference in scale but if you peel that

836
00:48:05,320 --> 00:48:11,860
off we're really looking at sort of 300k

837
00:48:08,830 --> 00:48:14,860
as kind of the main operating point for

838
00:48:11,860 --> 00:48:17,890
both of the flows the thing is the

839
00:48:14,860 --> 00:48:21,550
diverse flow at one point that may be

840
00:48:17,890 --> 00:48:24,190
the spiking delay introduced a dip in

841
00:48:21,550 --> 00:48:29,440
the rate and it took that stream sort of

842
00:48:24,190 --> 00:48:31,590
a longer time to recover I think this

843
00:48:29,440 --> 00:48:35,680
should be the last slide in terms of

844
00:48:31,590 --> 00:48:40,450
experimental so next slide is more a

845
00:48:35,680 --> 00:48:43,299
summary our observations so so far in I

846
00:48:40,450 --> 00:48:45,100
think we kind of tried you we try three

847
00:48:43,300 --> 00:48:46,810
different combinations the local session

848
00:48:45,100 --> 00:48:50,859
is a very easy one the other two are

849
00:48:46,810 --> 00:48:54,540
rolling what we think as typical remote

850
00:48:50,859 --> 00:48:56,799
car and situations in these cases

851
00:48:54,540 --> 00:48:58,960
typically we do have sufficient

852
00:48:56,800 --> 00:49:02,440
bandwidth but then because of the

853
00:48:58,960 --> 00:49:04,630
presence of the wireless link we do see

854
00:49:02,440 --> 00:49:07,660
that there are occasional delay spikes

855
00:49:04,630 --> 00:49:10,869
so our observation of the NADA control

856
00:49:07,660 --> 00:49:13,589
and flow is that it tends to ramp up

857
00:49:10,869 --> 00:49:17,290
fairly fast a maximum allowed rate

858
00:49:13,590 --> 00:49:19,420
that's within a few seconds and also the

859
00:49:17,290 --> 00:49:21,790
sending rate will react to occasional

860
00:49:19,420 --> 00:49:25,300
big delay spikes but it recovers very

861
00:49:21,790 --> 00:49:27,910
quickly thanks to the the other mode of

862
00:49:25,300 --> 00:49:32,020
operation the accelerated grab mode

863
00:49:27,910 --> 00:49:34,359
operation and we have examined how sort

864
00:49:32,020 --> 00:49:36,490
of how frequently the modes switch so we

865
00:49:34,359 --> 00:49:39,220
do see that the switching between the

866
00:49:36,490 --> 00:49:43,209
axillary ramp up and the gradual updated

867
00:49:39,220 --> 00:49:46,270
ramp up a gradual update of modes are

868
00:49:43,210 --> 00:49:48,700
fairly frequent and he certificate is

869
00:49:46,270 --> 00:49:50,410
used by those of frequent delay spikes

870
00:49:48,700 --> 00:49:55,180
and also just because we have a

871
00:49:50,410 --> 00:49:57,580
stringent some of criteria for the flow

872
00:49:55,180 --> 00:49:58,240
to operate in accelerated relic mode

873
00:49:57,580 --> 00:50:02,170
yeah

874
00:49:58,240 --> 00:50:04,060
and finally maybe kind of the the

875
00:50:02,170 --> 00:50:07,630
reassuring part is that we have tested

876
00:50:04,060 --> 00:50:09,759
these cars with past baseline our

877
00:50:07,630 --> 00:50:13,300
teepees up to a hundred millisecond and

878
00:50:09,760 --> 00:50:15,940
you see that the flows seem to operate

879
00:50:13,300 --> 00:50:18,330
in very you know speaking a very stable

880
00:50:15,940 --> 00:50:20,740
work mechanism even though

881
00:50:18,330 --> 00:50:22,930
180 milliseconds is just the baseline

882
00:50:20,740 --> 00:50:25,270
the occasional our teachers can be on

883
00:50:22,930 --> 00:50:28,680
the order of several seconds so that was

884
00:50:25,270 --> 00:50:31,600
fairly reassuring to to know and finally

885
00:50:28,680 --> 00:50:34,569
maybe for further investigations were

886
00:50:31,600 --> 00:50:36,880
more interested in looking maybe looking

887
00:50:34,570 --> 00:50:39,490
into performance where there is

888
00:50:36,880 --> 00:50:41,290
abandoned bandwidth limited connections

889
00:50:39,490 --> 00:50:43,919
we're scratching our head a little bit

890
00:50:41,290 --> 00:50:46,960
in terms of what type of typical use

891
00:50:43,920 --> 00:50:48,790
usage scenario that would relate to so

892
00:50:46,960 --> 00:50:51,340
if the audience have any suggestions

893
00:50:48,790 --> 00:50:54,940
we'd like to hear those as well and then

894
00:50:51,340 --> 00:50:57,070
finally sort of the study of coexistence

895
00:50:54,940 --> 00:51:00,820
with TCP light background traffic are

896
00:50:57,070 --> 00:51:03,070
also of interest from the audience go

897
00:51:00,820 --> 00:51:06,370
ahead I'll show from tensing so I think

898
00:51:03,070 --> 00:51:08,380
it's better to show a third graph all

899
00:51:06,370 --> 00:51:11,140
the scenario to show that a prompt

900
00:51:08,380 --> 00:51:12,790
chrome because all the data at the

901
00:51:11,140 --> 00:51:14,859
reverse that I could be because of the

902
00:51:12,790 --> 00:51:16,750
rest method to giving a different path

903
00:51:14,860 --> 00:51:18,430
and then the delay is gonna be different

904
00:51:16,750 --> 00:51:20,560
so it's better to show like ROM to

905
00:51:18,430 --> 00:51:23,589
chrome from differencing arrows then you

906
00:51:20,560 --> 00:51:28,680
will see if Ranade from nada to chrome

907
00:51:23,590 --> 00:51:31,510
might be better can you explain about

908
00:51:28,680 --> 00:51:34,089
extreme scenario is from the from nada

909
00:51:31,510 --> 00:51:38,080
to chrome right there's no data there's

910
00:51:34,090 --> 00:51:40,810
no testing from crumb crumb to be 24

911
00:51:38,080 --> 00:51:44,920
locations truly yeah

912
00:51:40,810 --> 00:51:47,710
but the reverse direction and is I'll

913
00:51:44,920 --> 00:51:49,240
modify if I may say so but I understand

914
00:51:47,710 --> 00:51:51,010
about from the two different continent

915
00:51:49,240 --> 00:51:51,609
rows and the reverse path would be

916
00:51:51,010 --> 00:51:55,360
different

917
00:51:51,610 --> 00:51:57,880
most of the time yes this I agree yes

918
00:51:55,360 --> 00:52:00,610
yeah so that's always saying they in my

919
00:51:57,880 --> 00:52:03,550
if you show three different grasses from

920
00:52:00,610 --> 00:52:08,869
nada to chrome and Chrome to Chrome

921
00:52:03,550 --> 00:52:11,930
that might be I'll show you more instead

922
00:52:08,869 --> 00:52:15,440
of just okay so I'm saying instance for

923
00:52:11,930 --> 00:52:17,899
the scenario and we do a wine round with

924
00:52:15,440 --> 00:52:38,359
nada to Chrome and then another one and

925
00:52:17,900 --> 00:52:39,800
switch the same Google Chrome John

926
00:52:38,359 --> 00:52:42,799
thanks in terms of figuring out what do

927
00:52:39,800 --> 00:52:46,160
you is for your typical prefer your

928
00:52:42,800 --> 00:52:48,410
bandwidth limited case I'm not I'm sort

929
00:52:46,160 --> 00:52:50,390
of spitballing here but it might be if

930
00:52:48,410 --> 00:52:54,200
you can find somebody who's you know got

931
00:52:50,390 --> 00:52:55,759
cheap home connection like DSL or

932
00:52:54,200 --> 00:52:57,919
something that might be a useful case I

933
00:52:55,760 --> 00:53:00,020
think that's probably the you know where

934
00:52:57,920 --> 00:53:03,260
somebody has a I mean I'm gonna have to

935
00:53:00,020 --> 00:53:04,970
find a colleague who's lived somewhere

936
00:53:03,260 --> 00:53:06,589
remote you know lips of more rural or

937
00:53:04,970 --> 00:53:08,779
doesn't feel like spending a lot for

938
00:53:06,589 --> 00:53:10,869
home bandwidth it can be hard for you

939
00:53:08,780 --> 00:53:13,250
know engineering colleagues I understand

940
00:53:10,869 --> 00:53:16,609
yeah I think that feels like that might

941
00:53:13,250 --> 00:53:18,290
be a you know you know somebody with you

942
00:53:16,609 --> 00:53:20,119
know just to you know live out in the

943
00:53:18,290 --> 00:53:22,430
woods and all we can get his DSL or

944
00:53:20,119 --> 00:53:23,900
something like that okay another thing

945
00:53:22,430 --> 00:53:25,910
to try but I guess this probably has a

946
00:53:23,900 --> 00:53:27,920
lot of other complexity might be mobile

947
00:53:25,910 --> 00:53:36,109
data but that might have a whole lot of

948
00:53:27,920 --> 00:53:39,109
other complexity here so I'm a transfer

949
00:53:36,109 --> 00:53:41,299
from the phone so in terms of comparing

950
00:53:39,109 --> 00:53:43,578
the two maybe you can also run them in

951
00:53:41,299 --> 00:53:46,190
parallel so that you would have gotten

952
00:53:43,579 --> 00:53:47,839
call with with nada and one call with

953
00:53:46,190 --> 00:53:52,130
the chrome in the same direction at the

954
00:53:47,839 --> 00:53:54,020
same time if you do with her after each

955
00:53:52,130 --> 00:53:56,390
other the path I mean the conditions

956
00:53:54,020 --> 00:53:58,280
will also not be exactly the same at the

957
00:53:56,390 --> 00:53:59,509
two points in time they may remove

958
00:53:58,280 --> 00:54:02,480
similar done going in different

959
00:53:59,510 --> 00:54:04,309
directions but but still then Wi-Fi over

960
00:54:02,480 --> 00:54:10,040
time and then the path over time may

961
00:54:04,309 --> 00:54:13,130
change sure thank you yep new to me I

962
00:54:10,040 --> 00:54:14,720
actually learned at the hackathon last

963
00:54:13,130 --> 00:54:17,690
weekend that there's a

964
00:54:14,720 --> 00:54:23,200
nice command-line tool for limiting your

965
00:54:17,690 --> 00:54:26,480
bandwidth it's all Comcast all right

966
00:54:23,200 --> 00:54:28,910
Comcast you know like the like like

967
00:54:26,480 --> 00:54:31,910
you're not so great in that provider in

968
00:54:28,910 --> 00:54:33,560
the US or I don't know I'm I'm guessing

969
00:54:31,910 --> 00:54:35,779
that's what the naming is coming from

970
00:54:33,560 --> 00:54:38,000
but it allows you to basically set on

971
00:54:35,780 --> 00:54:41,150
the command line bandwidth limitations

972
00:54:38,000 --> 00:54:42,800
for given ports and protocols and so on

973
00:54:41,150 --> 00:54:50,060
so maybe that's like something to

974
00:54:42,800 --> 00:54:50,599
explore it works on OSX and Linux okay

975
00:54:50,060 --> 00:54:53,619
thank you

976
00:54:50,599 --> 00:54:55,819
I think we can definitely try was

977
00:54:53,619 --> 00:54:58,520
artificially limiting the bandwidth and

978
00:54:55,819 --> 00:55:01,130
see what we want but maybe the other

979
00:54:58,520 --> 00:55:03,500
side and actually early on in some of

980
00:55:01,130 --> 00:55:06,470
the tests that evaluations we we did

981
00:55:03,500 --> 00:55:08,150
some of those too but maybe we'll try

982
00:55:06,470 --> 00:55:10,879
those as well I think we're really

983
00:55:08,150 --> 00:55:12,980
trying to hunt for typical scenarios

984
00:55:10,880 --> 00:55:15,770
where the bandwidth is limited just more

985
00:55:12,980 --> 00:55:18,339
like a real word type of test so this so

986
00:55:15,770 --> 00:55:27,020
yeah I think you know what pursue pros

987
00:55:18,339 --> 00:55:28,520
sort of both methods and the suggestion

988
00:55:27,020 --> 00:55:29,869
earlier there was one on mobile

989
00:55:28,520 --> 00:55:32,720
connections that's exactly something

990
00:55:29,869 --> 00:55:37,579
were curious inga seeing how things work

991
00:55:32,720 --> 00:55:40,279
yeah but we haven't really tried the

992
00:55:37,579 --> 00:55:45,349
mobile version of the browsers to to

993
00:55:40,280 --> 00:55:48,170
carry out cause yeah thank you I think

994
00:55:45,349 --> 00:55:51,280
this is my last slide so I'm happy to

995
00:55:48,170 --> 00:55:54,430
answer more questions or you know so

996
00:55:51,280 --> 00:56:01,520
thank you do we have any more questions

997
00:55:54,430 --> 00:56:03,098
before we come no seems not okay thank

998
00:56:01,520 --> 00:56:06,490
you

999
00:56:03,099 --> 00:56:06,490
okay thank you

1000
00:56:10,590 --> 00:56:15,720
so we move on and call in you are next

1001
00:56:24,600 --> 00:56:27,730
[Music]

1002
00:56:55,150 --> 00:57:03,290
all right uh hi I'm Colin Perkins I can

1003
00:56:58,640 --> 00:57:05,240
now actually see my slides help so I

1004
00:57:03,290 --> 00:57:07,310
want to run the RTP congestion control

1005
00:57:05,240 --> 00:57:08,899
feedback draft I feel I should be

1006
00:57:07,310 --> 00:57:22,180
looking at the rest of the room but then

1007
00:57:08,900 --> 00:57:24,710
I can't see this at all this will do so

1008
00:57:22,180 --> 00:57:25,730
the conditioning trophy back draft was

1009
00:57:24,710 --> 00:57:28,460
obviously something we've been

1010
00:57:25,730 --> 00:57:31,520
discussing for a while we got a bunch of

1011
00:57:28,460 --> 00:57:33,380
feedback based on hackathons at the last

1012
00:57:31,520 --> 00:57:36,170
few meetings most recently in the

1013
00:57:33,380 --> 00:57:39,110
product meeting and we submitted the the

1014
00:57:36,170 --> 00:57:40,760
zero for draft to reflect the

1015
00:57:39,110 --> 00:57:44,860
implementation experience and the

1016
00:57:40,760 --> 00:57:47,780
hackathon lots of changes in the draft a

1017
00:57:44,860 --> 00:57:48,890
few changes in draft no changes the

1018
00:57:47,780 --> 00:57:52,010
packet format everything is

1019
00:57:48,890 --> 00:57:54,980
clarifications and we discussed these in

1020
00:57:52,010 --> 00:57:59,210
a boutique or earlier in the week most

1021
00:57:54,980 --> 00:58:04,790
of the clarifications are around Sigma

1022
00:57:59,210 --> 00:58:06,860
link which I'm proposin but this or

1023
00:58:04,790 --> 00:58:09,800
about that the precise details of what

1024
00:58:06,860 --> 00:58:11,570
you report on when and how you split our

1025
00:58:09,800 --> 00:58:13,520
TCP packets up and that sort of thing

1026
00:58:11,570 --> 00:58:16,190
there's two changes I wanted to

1027
00:58:13,520 --> 00:58:18,410
highlight for this working group one is

1028
00:58:16,190 --> 00:58:20,150
about the feedback hardened effect in

1029
00:58:18,410 --> 00:58:24,560
retransmission packets and one is the

1030
00:58:20,150 --> 00:58:26,270
response to lost feedback so in the

1031
00:58:24,560 --> 00:58:29,120
first subject the the thing we've added

1032
00:58:26,270 --> 00:58:34,790
to the draft this time is a statement

1033
00:58:29,120 --> 00:58:36,830
that if you are sending separate RTP

1034
00:58:34,790 --> 00:58:38,750
streams that contain if forward error

1035
00:58:36,830 --> 00:58:43,880
correction or retransmission packets

1036
00:58:38,750 --> 00:58:45,500
with their own SSRC then when you're

1037
00:58:43,880 --> 00:58:48,230
sending congestion feedback you also

1038
00:58:45,500 --> 00:58:49,280
send the congestion feedback reports on

1039
00:58:48,230 --> 00:58:51,950
those streams

1040
00:58:49,280 --> 00:58:53,270
see using congestion feedback on on the

1041
00:58:51,950 --> 00:58:55,399
on the fact trafficker on the

1042
00:58:53,270 --> 00:58:56,990
retransmission traffic on the basis that

1043
00:58:55,400 --> 00:58:58,760
this is taking a bandwidth from

1044
00:58:56,990 --> 00:59:01,509
potentially causing congestion so you

1045
00:58:58,760 --> 00:59:01,510
should report on it

1046
00:59:01,960 --> 00:59:08,320
the second change was to add a section

1047
00:59:05,440 --> 00:59:10,360
talking about congestion response when

1048
00:59:08,320 --> 00:59:14,110
congestion control feedback packets are

1049
00:59:10,360 --> 00:59:16,660
lost and this is two things firstly it

1050
00:59:14,110 --> 00:59:19,210
points out that like all all our TCP

1051
00:59:16,660 --> 00:59:21,990
packets it's possible the congestion

1052
00:59:19,210 --> 00:59:25,780
control feedback packets are lost and

1053
00:59:21,990 --> 00:59:27,970
any TP congestion control algorithm must

1054
00:59:25,780 --> 00:59:30,610
specify what it does in response to the

1055
00:59:27,970 --> 00:59:32,230
fact that feedback is being lost it

1056
00:59:30,610 --> 00:59:35,980
can't just assume the feedback could be

1057
00:59:32,230 --> 00:59:39,640
delivered reliably it then suggests that

1058
00:59:35,980 --> 00:59:42,190
if you just get an isolated feedback

1059
00:59:39,640 --> 00:59:44,230
packets loss then probably the right

1060
00:59:42,190 --> 00:59:46,390
thing to do is assume that the

1061
00:59:44,230 --> 00:59:49,810
congestion remains at about same level

1062
00:59:46,390 --> 00:59:51,190
it was before but if a significant

1063
00:59:49,810 --> 00:59:51,610
number of feedback packets are being

1064
00:59:51,190 --> 00:59:54,400
lost

1065
00:59:51,610 --> 00:59:56,530
you should fairly rapidly reduce

1066
00:59:54,400 --> 00:59:58,120
something rate down towards zero on the

1067
00:59:56,530 --> 00:59:59,500
assumption that if all the feedback is

1068
00:59:58,120 --> 01:00:01,120
being lost then it's likely that

1069
00:59:59,500 --> 01:00:03,760
something significant has failed on the

1070
01:00:01,120 --> 01:00:06,460
pass and it points out that the circuit

1071
01:00:03,760 --> 01:00:08,260
breaker RFC provides some further

1072
01:00:06,460 --> 01:00:13,810
guidance here and just when you should

1073
01:00:08,260 --> 01:00:19,450
stop sending entirely and does they have

1074
01:00:13,810 --> 01:00:20,860
a microphone yes it does okay and those

1075
01:00:19,450 --> 01:00:24,430
are the main changes that there are two

1076
01:00:20,860 --> 01:00:26,890
very hopefully minor open issues with a

1077
01:00:24,430 --> 01:00:28,480
drift the first is that we have yet to

1078
01:00:26,890 --> 01:00:30,400
add a comparison with the whole mer

1079
01:00:28,480 --> 01:00:32,460
draft to explain that the design

1080
01:00:30,400 --> 01:00:37,900
rationale costs and benefits and so on

1081
01:00:32,460 --> 01:00:39,790
and also to add it has previously been

1082
01:00:37,900 --> 01:00:42,280
suggested that we add some discussion of

1083
01:00:39,790 --> 01:00:46,960
power of how you convert between the per

1084
01:00:42,280 --> 01:00:48,640
SSRC sequence numbers as proposed in

1085
01:00:46,960 --> 01:00:51,310
this draft and that the unified sequence

1086
01:00:48,640 --> 01:00:52,810
numbers face in the other draft and talk

1087
01:00:51,310 --> 01:00:56,799
about what are the trade-offs between

1088
01:00:52,810 --> 01:00:58,090
the two approaches you know that these

1089
01:00:56,800 --> 01:01:01,210
are fairly straightforward in that the

1090
01:00:58,090 --> 01:01:03,160
per SSRC sequence numbers let you do per

1091
01:01:01,210 --> 01:01:04,750
SSRC congestion control if you want to

1092
01:01:03,160 --> 01:01:07,750
do something different for the audio and

1093
01:01:04,750 --> 01:01:10,740
video for example much more easily than

1094
01:01:07,750 --> 01:01:13,240
having a unified sequence number space

1095
01:01:10,740 --> 01:01:17,140
but at the expense of having a

1096
01:01:13,240 --> 01:01:18,520
a slight increase in complexity also a

1097
01:01:17,140 --> 01:01:19,750
slight reduction in bandwidth because

1098
01:01:18,520 --> 01:01:21,370
you don't have that the header

1099
01:01:19,750 --> 01:01:23,410
extensions with the unified sequence

1100
01:01:21,370 --> 01:01:27,359
number space so the trade-offs pretty

1101
01:01:23,410 --> 01:01:30,910
quick pretty clear that's all I have

1102
01:01:27,360 --> 01:01:32,740
hopefully we will address these the plan

1103
01:01:30,910 --> 01:01:33,970
is to address these over the summer and

1104
01:01:32,740 --> 01:01:36,100
then hopefully this should be ready to

1105
01:01:33,970 --> 01:01:37,959
go for working your bus call before the

1106
01:01:36,100 --> 01:01:41,920
Singapore meeting him and hopefully

1107
01:01:37,960 --> 01:01:49,660
significantly before that's why I have

1108
01:01:41,920 --> 01:01:53,530
for any comments or questions the

1109
01:01:49,660 --> 01:01:56,319
comparison with the home of draft yes as

1110
01:01:53,530 --> 01:01:59,380
far as I remember leaving the design

1111
01:01:56,320 --> 01:02:01,420
team there are some comparisons done and

1112
01:01:59,380 --> 01:02:05,320
I have compared the results like well

1113
01:02:01,420 --> 01:02:08,790
what are the compression or what kind of

1114
01:02:05,320 --> 01:02:11,770
benefit or cost we get our overrated get

1115
01:02:08,790 --> 01:02:13,570
but I'm still like I have a hard time

1116
01:02:11,770 --> 01:02:18,790
digesting like why we need this

1117
01:02:13,570 --> 01:02:20,230
compression in this it was a previous

1118
01:02:18,790 --> 01:02:23,440
meeting we were asked to provide such a

1119
01:02:20,230 --> 01:02:25,600
comparison I have no particular desire

1120
01:02:23,440 --> 01:02:26,860
to do it but it was what are the what

1121
01:02:25,600 --> 01:02:31,029
are the things we were asked to do it a

1122
01:02:26,860 --> 01:02:36,190
previous meeting of course at every

1123
01:02:31,030 --> 01:02:39,820
Depot of ABC car yeah and what benefit

1124
01:02:36,190 --> 01:02:43,420
it brings to the draft unknown

1125
01:02:39,820 --> 01:02:45,310
whatsoever as far as I could tell it

1126
01:02:43,420 --> 01:02:47,200
just positions it makes it clear what

1127
01:02:45,310 --> 01:02:51,160
why you would implement certain I mean

1128
01:02:47,200 --> 01:02:55,000
what it's like yeah I mean we in the

1129
01:02:51,160 --> 01:02:57,310
design we did calculation and we saw

1130
01:02:55,000 --> 01:02:59,080
like yeah that could be a better I mean

1131
01:02:57,310 --> 01:03:02,650
there could be another way of doing the

1132
01:02:59,080 --> 01:03:05,080
signalling and we agree to this working

1133
01:03:02,650 --> 01:03:07,240
group will do that and we this is what

1134
01:03:05,080 --> 01:03:09,279
our output right and then if somebody

1135
01:03:07,240 --> 01:03:11,109
thinks like okay they have a better and

1136
01:03:09,280 --> 01:03:15,790
a feedback and they don't want to really

1137
01:03:11,110 --> 01:03:17,350
compile generation because now then we

1138
01:03:15,790 --> 01:03:19,810
have other bike Nara has their own

1139
01:03:17,350 --> 01:03:21,400
consumer feedback scream has their own

1140
01:03:19,810 --> 01:03:23,920
condition config crap shall we be

1141
01:03:21,400 --> 01:03:25,870
comparing all of them if you are not

1142
01:03:23,920 --> 01:03:26,400
comparing all of them then why we are

1143
01:03:25,870 --> 01:03:28,890
picking up

1144
01:03:26,400 --> 01:03:31,079
this one and I actually really have to

1145
01:03:28,890 --> 01:03:34,259
understand why we need to do that at all

1146
01:03:31,079 --> 01:03:35,819
as I say that the reason it's on the

1147
01:03:34,260 --> 01:03:37,859
to-do list is because one of the

1148
01:03:35,819 --> 01:03:43,020
outcomes of a previous apt meeting was

1149
01:03:37,859 --> 01:03:43,529
that we would other comparisons I don't

1150
01:03:43,020 --> 01:03:45,349
remember

1151
01:03:43,529 --> 01:03:47,970
done I don't remember exactly what the

1152
01:03:45,349 --> 01:03:50,010
group said but I mean my argument for it

1153
01:03:47,970 --> 01:03:52,379
would be because the homer graph is

1154
01:03:50,010 --> 01:03:53,970
actually widely deployed and to convey

1155
01:03:52,380 --> 01:03:56,010
need to convince people to switch from

1156
01:03:53,970 --> 01:03:58,109
that to something standard you have to

1157
01:03:56,010 --> 01:03:59,549
show them no this isn't gonna hurt you

1158
01:03:58,109 --> 01:04:00,960
and in fact hopefully will help you yes

1159
01:03:59,549 --> 01:04:02,309
and I think this is a pretty

1160
01:04:00,960 --> 01:04:04,500
straightforward thing to do and it will

1161
01:04:02,309 --> 01:04:06,839
be a very short amount of time yeah yeah

1162
01:04:04,500 --> 01:04:12,900
basically you know be know the you know

1163
01:04:06,839 --> 01:04:14,819
the extremely aggressive you know very

1164
01:04:12,900 --> 01:04:16,319
Zara you know virally encoding as well

1165
01:04:14,819 --> 01:04:18,839
in home or don't actually help you that

1166
01:04:16,319 --> 01:04:21,390
much in the normal case where you're

1167
01:04:18,839 --> 01:04:23,308
just reporting on a few packets so this

1168
01:04:21,390 --> 01:04:24,960
isn't gonna be you know some huge

1169
01:04:23,309 --> 01:04:27,089
explosion and your feedback because for

1170
01:04:24,960 --> 01:04:30,180
the despite the much simpler packet

1171
01:04:27,089 --> 01:04:32,130
format for instance yes yeah and I'm not

1172
01:04:30,180 --> 01:04:35,460
sure I would even go so far as to have a

1173
01:04:32,130 --> 01:04:38,339
comparison of the bandwidth costs in

1174
01:04:35,460 --> 01:04:40,890
this I think that the main the main

1175
01:04:38,339 --> 01:04:43,859
advantage of this is that it provides

1176
01:04:40,890 --> 01:04:46,500
per sssee feedback which gives you

1177
01:04:43,859 --> 01:04:48,180
flexibility to do differential

1178
01:04:46,500 --> 01:04:54,660
congestion control for the different

1179
01:04:48,180 --> 01:04:55,950
sources and this one here but worth the

1180
01:04:54,660 --> 01:04:58,170
whole my draft give kiss it gives you a

1181
01:04:55,950 --> 01:05:00,808
single secret i spaced honestly i do

1182
01:04:58,170 --> 01:05:02,640
don't have a nice guy honest ii don't

1183
01:05:00,809 --> 01:05:05,460
think so because the conversion you're

1184
01:05:02,640 --> 01:05:06,420
describing here between caresses are see

1185
01:05:05,460 --> 01:05:07,589
and you know if i think whatever it's

1186
01:05:06,420 --> 01:05:10,650
been run either direction it doesn't

1187
01:05:07,589 --> 01:05:18,000
actually it's difficult to do if you

1188
01:05:10,650 --> 01:05:19,950
don't know which always the sender but

1189
01:05:18,000 --> 01:05:21,839
no i think the big advantage is not

1190
01:05:19,950 --> 01:05:25,319
having the header extension especially

1191
01:05:21,839 --> 01:05:28,078
as i think i'm pretty sure that

1192
01:05:25,319 --> 01:05:30,210
gradually in most cases you'll actually

1193
01:05:28,079 --> 01:05:31,710
get all header extensions out of your

1194
01:05:30,210 --> 01:05:34,529
average varsity video packet which is

1195
01:05:31,710 --> 01:05:36,690
actually losing the generic header

1196
01:05:34,529 --> 01:05:39,300
extension overhead is actually a fairly

1197
01:05:36,690 --> 01:05:41,880
large win as opposed to just

1198
01:05:39,300 --> 01:05:45,000
yeah I think that's that's the bigger

1199
01:05:41,880 --> 01:05:50,370
win is losing the per per packet header

1200
01:05:45,000 --> 01:05:52,980
extension overhead yes yeah I mean I

1201
01:05:50,370 --> 01:05:54,359
yeah I can propose some text separately

1202
01:05:52,980 --> 01:06:00,420
to the list and we can discuss whether

1203
01:05:54,360 --> 01:06:02,880
it makes sense to put it in the first

1204
01:06:00,420 --> 01:06:04,770
text on the comparison of the home a

1205
01:06:02,880 --> 01:06:08,180
draft and then we can have a discussion

1206
01:06:04,770 --> 01:06:08,180
about whether it makes sense to go in

1207
01:06:08,330 --> 01:06:14,370
okay Thank You Colin and the plan is to

1208
01:06:11,700 --> 01:06:19,129
do the working group last call on him

1209
01:06:14,370 --> 01:06:24,630
both Sunday Tom boasts lists I guess

1210
01:06:19,130 --> 01:06:26,550
yeah yeah so that for the recording that

1211
01:06:24,630 --> 01:06:29,180
was Jonathan saying yes it would be done

1212
01:06:26,550 --> 01:06:29,180
in both groups

1213
01:06:30,800 --> 01:06:33,829
[Music]

1214
01:06:38,570 --> 01:06:43,680
Jonathan exam what Colin said in a

1215
01:06:41,190 --> 01:06:45,480
boutique or is that he hopes to get all

1216
01:06:43,680 --> 01:06:48,060
this done before his students come back

1217
01:06:45,480 --> 01:06:50,790
for the fall semester because as many

1218
01:06:48,060 --> 01:06:52,680
doesn't have time anymore so that's is

1219
01:06:50,790 --> 01:06:54,029
the hook yes is the help so basically so

1220
01:06:52,680 --> 01:06:56,160
where our hope was before the end of the

1221
01:06:54,030 --> 01:06:57,960
summer we will get the new draft with

1222
01:06:56,160 --> 01:07:00,029
all this requested text they'll be able

1223
01:06:57,960 --> 01:07:02,760
to do organ group last call which indeed

1224
01:07:00,030 --> 01:07:06,270
we will make sure to send to both maybe

1225
01:07:02,760 --> 01:07:06,780
décor and Armco yeah thank you that

1226
01:07:06,270 --> 01:07:10,560
smells good

1227
01:07:06,780 --> 01:07:13,020
and then I guess Colin once this draft

1228
01:07:10,560 --> 01:07:17,970
goes through down you will update the

1229
01:07:13,020 --> 01:07:19,320
Orem cat dress yeah this is pretty

1230
01:07:17,970 --> 01:07:21,029
straightforward to updates is just

1231
01:07:19,320 --> 01:07:23,400
plugging in the the appropriate package

1232
01:07:21,030 --> 01:07:25,710
sizes I'm rerunning the analysis and

1233
01:07:23,400 --> 01:07:29,520
that then we can have a discussion as to

1234
01:07:25,710 --> 01:07:31,560
whether that is describing what what we

1235
01:07:29,520 --> 01:07:34,470
wanted to describe but it's very easy to

1236
01:07:31,560 --> 01:07:36,830
bring in substitutes okay very good

1237
01:07:34,470 --> 01:07:36,830
thank you

1238
01:07:41,820 --> 01:07:46,110
okay this was the last item on the

1239
01:07:44,430 --> 01:07:48,569
agenda unless anyone has anything they

1240
01:07:46,110 --> 01:07:51,000
want to bring up for discussion so thank

1241
01:07:48,570 --> 01:07:53,700
you all very much for attending

1242
01:07:51,000 --> 01:08:04,200
despite being light late on Thursday

1243
01:07:53,700 --> 01:08:06,600
afternoon and very good temperature as

1244
01:08:04,200 --> 01:08:09,299
well so it's a good spot okay thank you

1245
01:08:06,600 --> 01:08:14,940
let's complete AB did everyone sign the

1246
01:08:09,300 --> 01:08:17,270
blue sheet where is it okay perfect

1247
01:08:14,940 --> 01:08:17,270
Thanks

