1
00:00:18,230 --> 00:00:50,149
good morning crowding we're starting our

2
00:00:20,510 --> 00:00:51,739
second session assume hello yeah thank

3
00:00:50,149 --> 00:00:54,950
you

4
00:00:51,739 --> 00:00:59,050
my name is Asim chowsie and I am going

5
00:00:54,950 --> 00:00:59,050
to provide the updates on queuing model

6
00:01:09,280 --> 00:01:13,659
okay so I'm going to cover these topics

7
00:01:17,950 --> 00:01:25,909
okay so there was adoption called in

8
00:01:22,759 --> 00:01:28,909
version 7 of the model we got some

9
00:01:25,909 --> 00:01:30,679
reasonable set of comments we had

10
00:01:28,909 --> 00:01:32,899
replied to some of the comments beyond

11
00:01:30,679 --> 00:01:35,060
sense some of the comments we clarified

12
00:01:32,899 --> 00:01:37,429
some of the comments rest of the

13
00:01:35,060 --> 00:01:39,319
comments we were able to incorporate and

14
00:01:37,429 --> 00:01:44,899
based on that we were able to publish

15
00:01:39,319 --> 00:01:49,279
wasn't n of the model next slide thank

16
00:01:44,899 --> 00:01:51,049
you so basically you know some of the

17
00:01:49,279 --> 00:01:53,479
comments would had been regarding the

18
00:01:51,049 --> 00:01:55,999
references there were some missing

19
00:01:53,479 --> 00:01:59,119
references there were some incorrect

20
00:01:55,999 --> 00:02:03,139
references so for example we had a

21
00:01:59,119 --> 00:02:06,189
reference for yang 1.1 into the draft we

22
00:02:03,139 --> 00:02:10,340
added reference for the imported modules

23
00:02:06,189 --> 00:02:12,890
also some of the yang nodes we provided

24
00:02:10,340 --> 00:02:14,420
specific reference from the work which

25
00:02:12,890 --> 00:02:18,290
had been done in the past in the various

26
00:02:14,420 --> 00:02:20,929
RFC's for example for pali sir

27
00:02:18,290 --> 00:02:23,750
one rate three color and two rate three

28
00:02:20,930 --> 00:02:27,019
color we were able to provide reference

29
00:02:23,750 --> 00:02:28,189
for RFC two six nine seven and two six

30
00:02:27,019 --> 00:02:30,170
nine eight

31
00:02:28,189 --> 00:02:31,989
similarly for choose and scheduler we

32
00:02:30,170 --> 00:02:34,849
were able to provide comment through

33
00:02:31,989 --> 00:02:36,400
solid reference through audacity to

34
00:02:34,849 --> 00:02:40,730
eight nine

35
00:02:36,400 --> 00:02:45,530
similarly we added reference for Yankee

36
00:02:40,730 --> 00:02:50,589
diagrams which is RFC a340 as well as we

37
00:02:45,530 --> 00:02:50,590
added reference for nmda architecture

38
00:02:55,840 --> 00:03:02,359
all right so so some of the comments had

39
00:02:59,239 --> 00:03:05,079
been regarding the dates that is for

40
00:03:02,359 --> 00:03:08,239
either in some case in not updated and

41
00:03:05,079 --> 00:03:11,000
so what we updated the dates for

42
00:03:08,239 --> 00:03:16,060
copyright information we update that

43
00:03:11,000 --> 00:03:18,799
it's for revision of the various modules

44
00:03:16,060 --> 00:03:23,510
also we added section for I know

45
00:03:18,799 --> 00:03:26,049
consideration we provided some editorial

46
00:03:23,510 --> 00:03:29,358
note in the introduction section

47
00:03:26,049 --> 00:03:31,129
detailing that you this particular you

48
00:03:29,359 --> 00:03:33,199
know once the RFC is created and remove

49
00:03:31,129 --> 00:03:40,370
this particular section or update the

50
00:03:33,199 --> 00:03:43,099
RFC number according you annex I also

51
00:03:40,370 --> 00:03:45,829
you know when we were going through when

52
00:03:43,099 --> 00:03:49,069
we were reviewing the draft ourselves we

53
00:03:45,829 --> 00:03:51,560
figured out that in the sir model we

54
00:03:49,069 --> 00:03:54,500
need to provide further restriction into

55
00:03:51,560 --> 00:03:56,989
in what cases we will be able to

56
00:03:54,500 --> 00:03:59,810
configure difícil module and that will

57
00:03:56,989 --> 00:04:01,760
be based on the divs or policy types so

58
00:03:59,810 --> 00:04:09,349
accordingly we added a when statement

59
00:04:01,760 --> 00:04:13,280
for it so to summarize the the draft you

60
00:04:09,349 --> 00:04:17,539
know we have created a basic framework

61
00:04:13,280 --> 00:04:20,089
of Q s as an classifier module we have

62
00:04:17,539 --> 00:04:22,300
action module policy module and target

63
00:04:20,089 --> 00:04:25,369
module and these are the base modules

64
00:04:22,300 --> 00:04:28,639
based on these base modules we have

65
00:04:25,370 --> 00:04:30,710
created set of derived modules which are

66
00:04:28,639 --> 00:04:33,710
difícil module

67
00:04:30,710 --> 00:04:37,370
and this'll include match and action

68
00:04:33,710 --> 00:04:40,340
related to yourself but it takes those

69
00:04:37,370 --> 00:04:43,340
matches an action and combine them

70
00:04:40,340 --> 00:04:47,359
create the base framework of policy and

71
00:04:43,340 --> 00:04:52,159
classifier and create a policy out of it

72
00:04:47,360 --> 00:04:55,699
similarly we have created derived module

73
00:04:52,160 --> 00:04:59,919
of queueing policy which actually work

74
00:04:55,699 --> 00:05:02,960
on the metadata information and and then

75
00:04:59,919 --> 00:05:07,419
we are able to configure the queuing

76
00:05:02,960 --> 00:05:13,789
parameters similarly for excuse me

77
00:05:07,419 --> 00:05:17,719
schedulers you know we have provided the

78
00:05:13,789 --> 00:05:19,009
actions for scheduling also you know

79
00:05:17,720 --> 00:05:22,729
that reference II have been provided

80
00:05:19,009 --> 00:05:24,320
from the PS RFC's for that also this

81
00:05:22,729 --> 00:05:29,229
model is very very adaptable to any

82
00:05:24,320 --> 00:05:32,150
vendor requirements and any vendor

83
00:05:29,229 --> 00:05:34,969
because the constructs are so different

84
00:05:32,150 --> 00:05:37,489
across vendors fork us so they may be

85
00:05:34,970 --> 00:05:40,849
able to you know use various match in

86
00:05:37,490 --> 00:05:43,580
action and able to stitch with the base

87
00:05:40,849 --> 00:05:46,370
framework of Q s and can create their

88
00:05:43,580 --> 00:05:47,960
own set of model also and they can keep

89
00:05:46,370 --> 00:05:51,169
adding lot of features they can keep

90
00:05:47,960 --> 00:05:56,198
adding lot of a match in action when

91
00:05:51,169 --> 00:05:56,198
they when there is a requirement for so

92
00:05:58,960 --> 00:06:07,340
ok at the next step we expect any

93
00:06:03,409 --> 00:06:09,199
further comment we we will be looking

94
00:06:07,340 --> 00:06:13,280
for any further comment from the from

95
00:06:09,199 --> 00:06:16,310
this community also vendor prototyping

96
00:06:13,280 --> 00:06:21,380
is in progress in some cases also you

97
00:06:16,310 --> 00:06:23,870
know to be realistic unless until this

98
00:06:21,380 --> 00:06:26,659
is adopted and become a working group

99
00:06:23,870 --> 00:06:28,789
duct document vendor will not invest

100
00:06:26,659 --> 00:06:30,889
that much to actually implement the

101
00:06:28,789 --> 00:06:32,630
draft so once it become a working

102
00:06:30,889 --> 00:06:37,070
document then vendor will go ahead and

103
00:06:32,630 --> 00:06:40,580
implement it out yeah ok let me finish

104
00:06:37,070 --> 00:06:42,620
the last point also so currently you

105
00:06:40,580 --> 00:06:43,669
know it is in candidate for working of

106
00:06:42,620 --> 00:06:45,370
adoption

107
00:06:43,669 --> 00:06:50,628
please provide your opinion on that

108
00:06:45,370 --> 00:06:53,419
Thanks yes dan Bogdanovich so this

109
00:06:50,629 --> 00:06:58,009
document has been being bounced around

110
00:06:53,419 --> 00:07:02,948
now for seven years eight years not

111
00:06:58,009 --> 00:07:05,659
really fears we study I think in 2015

112
00:07:02,949 --> 00:07:07,159
yeah because before that because there

113
00:07:05,659 --> 00:07:10,729
was a previous version of that document

114
00:07:07,159 --> 00:07:14,509
that was in then we started into it was

115
00:07:10,729 --> 00:07:16,878
restarted in 2014 because or even

116
00:07:14,509 --> 00:07:19,069
beginning of 2014 because I was one of

117
00:07:16,879 --> 00:07:22,009
the authors on that right you were part

118
00:07:19,069 --> 00:07:24,620
of the doctor yes XO and we are still

119
00:07:22,009 --> 00:07:28,370
trying to issue the first version of

120
00:07:24,620 --> 00:07:31,969
that document okay document do you know

121
00:07:28,370 --> 00:07:33,590
to start work so I think there's a good

122
00:07:31,969 --> 00:07:35,689
reason for that though this is quite

123
00:07:33,590 --> 00:07:37,698
difficult to standardize these QRS

124
00:07:35,689 --> 00:07:40,250
models so it's not it's not a

125
00:07:37,699 --> 00:07:43,729
coincidence but yes it could move faster

126
00:07:40,250 --> 00:07:45,229
but what is your specific point well the

127
00:07:43,729 --> 00:07:46,669
specific point here is that you're

128
00:07:45,229 --> 00:07:49,099
trying to match on all the

129
00:07:46,669 --> 00:07:50,960
functionalities instead of saying an

130
00:07:49,099 --> 00:07:53,089
obstructing saying these are the basics

131
00:07:50,960 --> 00:07:55,188
however how curious is working these are

132
00:07:53,089 --> 00:07:57,409
the basic elements and then different

133
00:07:55,189 --> 00:07:59,300
characteristics of those elements came

134
00:07:57,409 --> 00:08:01,639
in and specifies afterwards but right

135
00:07:59,300 --> 00:08:05,870
now we still don't have a common syntax

136
00:08:01,639 --> 00:08:10,129
how to specifies you know POS in the

137
00:08:05,870 --> 00:08:11,719
systems okay so so of the schools of

138
00:08:10,129 --> 00:08:13,870
thought where we go we'll go with the

139
00:08:11,719 --> 00:08:16,550
vendor C school of thought or vendors

140
00:08:13,870 --> 00:08:20,270
Jason oh I think this has been clarified

141
00:08:16,550 --> 00:08:23,210
in the past presentations that may be

142
00:08:20,270 --> 00:08:26,240
proceeded and we understood that it will

143
00:08:23,210 --> 00:08:29,270
be accepted by all is when we have a

144
00:08:26,240 --> 00:08:36,049
kind of a superset of the model and that

145
00:08:29,270 --> 00:08:39,708
not only is the operational excellence

146
00:08:36,049 --> 00:08:42,439
in many cases but also it allows many

147
00:08:39,708 --> 00:08:45,018
vendors to implement in a couple of ways

148
00:08:42,440 --> 00:08:47,269
the same configuration in fact some of

149
00:08:45,019 --> 00:08:50,690
the men I do allow the configuration

150
00:08:47,269 --> 00:08:54,310
that in a multiple way to to ease the

151
00:08:50,690 --> 00:08:57,290
operational excellence

152
00:08:54,310 --> 00:08:59,660
so yeah means may

153
00:08:57,290 --> 00:09:02,689
I'm missing the point here means what he

154
00:08:59,660 --> 00:09:04,400
does pollution here you try to over

155
00:09:02,690 --> 00:09:06,560
specify too many things in a single

156
00:09:04,400 --> 00:09:08,840
draft without sorting just have a basic

157
00:09:06,560 --> 00:09:10,430
syntax that could be implemented then

158
00:09:08,840 --> 00:09:12,170
see and then adding you know the

159
00:09:10,430 --> 00:09:15,439
additional curious features on top of

160
00:09:12,170 --> 00:09:17,089
that nor example you know like there

161
00:09:15,440 --> 00:09:19,040
buffers everybody's using buffers and

162
00:09:17,090 --> 00:09:20,780
cue specify them describe them and then

163
00:09:19,040 --> 00:09:22,699
different types of buffering and queuing

164
00:09:20,780 --> 00:09:25,339
mechanisms depending on what vendor

165
00:09:22,700 --> 00:09:28,610
supports which version can be then added

166
00:09:25,340 --> 00:09:30,770
and extended keep excellent yeah it

167
00:09:28,610 --> 00:09:34,010
means basically the queue schedulers and

168
00:09:30,770 --> 00:09:36,140
police are the basics of the QoS so if

169
00:09:34,010 --> 00:09:39,560
we don't have you know agreement on that

170
00:09:36,140 --> 00:09:41,810
it's hard to say that we have a the us

171
00:09:39,560 --> 00:09:46,000
model so we have to have agreement on

172
00:09:41,810 --> 00:09:46,000
all those aspects the basic aspect of us

173
00:09:48,790 --> 00:09:55,849
so I was really this hasn't been adopted

174
00:09:52,670 --> 00:09:58,219
yet from my point of view I think fairly

175
00:09:55,850 --> 00:10:00,710
obvious the ITF does want to do a qsr

176
00:09:58,220 --> 00:10:02,900
model we've been working this for a long

177
00:10:00,710 --> 00:10:04,580
time and it's changing I'm not sure we

178
00:10:02,900 --> 00:10:07,310
need perfection here we need to get

179
00:10:04,580 --> 00:10:10,610
something out and shipped and we can

180
00:10:07,310 --> 00:10:12,229
extend over time so I I'd be very keen

181
00:10:10,610 --> 00:10:14,360
to see this the doctor as it is there's

182
00:10:12,230 --> 00:10:16,730
a lot of time spent on it and then

183
00:10:14,360 --> 00:10:18,110
refine it a bit as as we go but try and

184
00:10:16,730 --> 00:10:19,460
actually gets out the door because

185
00:10:18,110 --> 00:10:21,140
you've got lots of other yang models out

186
00:10:19,460 --> 00:10:23,390
there and we people want to use these or

187
00:10:21,140 --> 00:10:24,620
or should be wanted to use them so we

188
00:10:23,390 --> 00:10:25,270
want to try and push this along if you

189
00:10:24,620 --> 00:10:28,190
can

190
00:10:25,270 --> 00:10:30,380
okay so yeah means that the model has

191
00:10:28,190 --> 00:10:32,060
been stable for some time now

192
00:10:30,380 --> 00:10:33,620
it just said you know be helping the

193
00:10:32,060 --> 00:10:35,839
question for more and what comment so

194
00:10:33,620 --> 00:10:37,310
that we can incorporate those there was

195
00:10:35,840 --> 00:10:37,820
a versus seven there was an option

196
00:10:37,310 --> 00:10:40,400
called

197
00:10:37,820 --> 00:10:42,950
we got some comments regarding the you

198
00:10:40,400 --> 00:10:46,100
know mainly regarding the format and

199
00:10:42,950 --> 00:10:48,290
some of the correction to be done in the

200
00:10:46,100 --> 00:10:50,000
drops which we have done but other than

201
00:10:48,290 --> 00:10:56,750
that yeah the model has been stable for

202
00:10:50,000 --> 00:11:02,420
some time defense former range I have a

203
00:10:56,750 --> 00:11:05,060
senior event has then had about not the

204
00:11:02,420 --> 00:11:07,130
complexity but we develop details in

205
00:11:05,060 --> 00:11:10,250
terms of scheduling which is in

206
00:11:07,130 --> 00:11:12,230
currently in the document because

207
00:11:10,250 --> 00:11:15,440
especially the scheduling is something

208
00:11:12,230 --> 00:11:17,720
which is really oddly dependent and you

209
00:11:15,440 --> 00:11:20,210
may not be able to do exactly the same

210
00:11:17,720 --> 00:11:23,150
thing and express it at least in the

211
00:11:20,210 --> 00:11:25,130
same way on one Hardware of yoga so I'm

212
00:11:23,150 --> 00:11:27,220
really happy to see that you have some

213
00:11:25,130 --> 00:11:30,560
vendors that are trying to prototype

214
00:11:27,220 --> 00:11:33,260
this model and I will be really happy to

215
00:11:30,560 --> 00:11:35,479
see the outcomes of this prototyping if

216
00:11:33,260 --> 00:11:37,580
it's something that which which is

217
00:11:35,480 --> 00:11:40,340
really physical in term of madhuri or

218
00:11:37,580 --> 00:11:42,590
not okay so there had been some

219
00:11:40,340 --> 00:11:44,360
reference in the past in the

220
00:11:42,590 --> 00:11:47,660
particularly the RFC three two eight

221
00:11:44,360 --> 00:11:49,940
nine and we are actually describe about

222
00:11:47,660 --> 00:11:52,370
the scheduling parameters and all so we

223
00:11:49,940 --> 00:11:55,390
have referred that - you know model this

224
00:11:52,370 --> 00:11:58,940
one so and we have similarity across

225
00:11:55,390 --> 00:12:00,620
vendors to implement those scheduling

226
00:11:58,940 --> 00:12:03,200
the pieces there are some similarities

227
00:12:00,620 --> 00:12:05,420
but it's not exactly the same and today

228
00:12:03,200 --> 00:12:07,310
we are already facing some issues when

229
00:12:05,420 --> 00:12:09,770
we are moving from one platform to be

230
00:12:07,310 --> 00:12:11,089
over to really express our customer that

231
00:12:09,770 --> 00:12:14,720
because sometimes it's completely

232
00:12:11,090 --> 00:12:18,500
different we cannot really do exactly

233
00:12:14,720 --> 00:12:21,410
the same thing so okay so has to

234
00:12:18,500 --> 00:12:26,180
understand that specific so that but as

235
00:12:21,410 --> 00:12:28,130
we have debated across vendors we do

236
00:12:26,180 --> 00:12:31,689
have a similar set of parameter when it

237
00:12:28,130 --> 00:12:31,689
comes to scheduling and queuing a

238
00:12:32,620 --> 00:12:36,860
ceiling the masses of systems I in

239
00:12:35,240 --> 00:12:39,260
defense of this I haven't reviewed the

240
00:12:36,860 --> 00:12:41,810
latest version but I did a review what a

241
00:12:39,260 --> 00:12:43,819
couple years at least year-and-a-half

242
00:12:41,810 --> 00:12:47,119
ago or something of this model and it's

243
00:12:43,820 --> 00:12:51,920
it's not the one of the real problems is

244
00:12:47,120 --> 00:12:55,190
is chip designers have had no motivation

245
00:12:51,920 --> 00:12:56,930
to have any common analogy and the in

246
00:12:55,190 --> 00:12:59,120
their QoS the way it's attached and

247
00:12:56,930 --> 00:13:01,819
there's and at one time I worked on

248
00:12:59,120 --> 00:13:06,170
trying to unify the CLI this was years

249
00:13:01,820 --> 00:13:08,930
ago for different line cards families in

250
00:13:06,170 --> 00:13:11,870
the same chassis but but it was just

251
00:13:08,930 --> 00:13:13,699
about it was a hard problem exacting a

252
00:13:11,870 --> 00:13:15,260
minimum subset and you you really

253
00:13:13,700 --> 00:13:18,020
couldn't get something that was bit

254
00:13:15,260 --> 00:13:20,870
one-size-fits-all for it exactly means

255
00:13:18,020 --> 00:13:24,060
it's not easy prominent assault but over

256
00:13:20,870 --> 00:13:25,260
a period of time we have debated a lot

257
00:13:24,060 --> 00:13:27,750
we have come up with the model which

258
00:13:25,260 --> 00:13:29,970
actually works for all and we see that

259
00:13:27,750 --> 00:13:34,560
all the vendors will be able to adopt

260
00:13:29,970 --> 00:13:37,230
the way we have design it right now and

261
00:13:34,560 --> 00:13:39,780
so I'm pretty confident that any vendor

262
00:13:37,230 --> 00:13:41,760
will be able to use this model to to

263
00:13:39,780 --> 00:13:44,280
configure their device even though you

264
00:13:41,760 --> 00:13:45,840
know for all the you know even for a

265
00:13:44,280 --> 00:13:47,970
single vendor there will be differences

266
00:13:45,840 --> 00:13:50,970
for qsr based on the platforms in all

267
00:13:47,970 --> 00:13:53,220
but they still you know provide that

268
00:13:50,970 --> 00:13:56,370
common CLI across it and so we have

269
00:13:53,220 --> 00:13:57,510
merged all them together and I think all

270
00:13:56,370 --> 00:14:00,000
the vendors should be able to probably a

271
00:13:57,510 --> 00:14:03,150
pretty confident for that so in terms of

272
00:14:00,000 --> 00:14:05,130
this document we already like start an

273
00:14:03,150 --> 00:14:08,329
adoption call back in December I think

274
00:14:05,130 --> 00:14:11,040
exit Nam and a lot of this you know the

275
00:14:08,330 --> 00:14:13,830
changes you've applied or responses to

276
00:14:11,040 --> 00:14:17,010
that and so and other feedback so I mean

277
00:14:13,830 --> 00:14:18,180
we're planning to adopt this we've

278
00:14:17,010 --> 00:14:20,610
gotten a lot of feedback that this

279
00:14:18,180 --> 00:14:22,199
approach possibly isn't as useful as

280
00:14:20,610 --> 00:14:23,640
another approach but does anyone

281
00:14:22,200 --> 00:14:26,970
actually have an objection to going

282
00:14:23,640 --> 00:14:28,620
ahead and you know adopting this as a

283
00:14:26,970 --> 00:14:31,170
working group document polishing it off

284
00:14:28,620 --> 00:14:33,060
and publishing it as you know this isn't

285
00:14:31,170 --> 00:14:35,010
a working group last call but in general

286
00:14:33,060 --> 00:14:37,619
our intention would be to adopt it

287
00:14:35,010 --> 00:14:41,370
finish it off publish it does that

288
00:14:37,620 --> 00:14:45,300
produce any damage any objections to

289
00:14:41,370 --> 00:14:48,350
that I'm supportive I'm very supportive

290
00:14:45,300 --> 00:14:51,089
to adopt it as a working group document

291
00:14:48,350 --> 00:14:53,490
I just considered this document too

292
00:14:51,090 --> 00:14:56,850
complex that's you know that's one part

293
00:14:53,490 --> 00:14:58,440
and if people try to put some of the

294
00:14:56,850 --> 00:15:01,140
other daughters some of the other

295
00:14:58,440 --> 00:15:06,030
related models to work with this small

296
00:15:01,140 --> 00:15:08,490
or will run into challenges okay but but

297
00:15:06,030 --> 00:15:11,880
do you see this as a good basis to start

298
00:15:08,490 --> 00:15:13,500
with to adopt and I would cut down

299
00:15:11,880 --> 00:15:23,790
significant amounts of document but this

300
00:15:13,500 --> 00:15:27,150
is my personal opinion okay okay so

301
00:15:23,790 --> 00:15:30,270
would anyone opposed to adopt this work

302
00:15:27,150 --> 00:15:32,420
here and start refining iterating

303
00:15:30,270 --> 00:15:32,420
through

304
00:15:36,240 --> 00:15:41,080
sounds good so we'll continue that

305
00:15:38,740 --> 00:15:44,860
option process and they're a bunch of

306
00:15:41,080 --> 00:16:09,250
warnings please fix them before okay

307
00:15:44,860 --> 00:16:12,460
thank you thank you hi so we've been

308
00:16:09,250 --> 00:16:14,830
working some of us for on automation for

309
00:16:12,460 --> 00:16:17,700
multiple years and on the management and

310
00:16:14,830 --> 00:16:20,620
as we are implementing some of the

311
00:16:17,700 --> 00:16:23,580
concepts we are seeing some of the

312
00:16:20,620 --> 00:16:29,560
problems that we are running into it and

313
00:16:23,580 --> 00:16:31,540
some of you know I read so I really when

314
00:16:29,560 --> 00:16:34,569
I saw this on Twitter I really liked it

315
00:16:31,540 --> 00:16:37,990
because we are putting the cart in front

316
00:16:34,570 --> 00:16:43,030
of the horse there are some changes

317
00:16:37,990 --> 00:16:45,700
coming in the networking that will

318
00:16:43,030 --> 00:16:48,610
require some significantly different and

319
00:16:45,700 --> 00:16:52,390
approach to how we are doing network

320
00:16:48,610 --> 00:16:57,700
automation but we are still using some

321
00:16:52,390 --> 00:16:59,800
of in my opinion concepts that are where

322
00:16:57,700 --> 00:17:02,890
too much device related and not much

323
00:16:59,800 --> 00:17:08,349
service related why I'm saying this we

324
00:17:02,890 --> 00:17:10,510
are seeing a large increase in routing

325
00:17:08,349 --> 00:17:12,969
endpoints in networks today large

326
00:17:10,510 --> 00:17:16,030
networks will have six seven thousand

327
00:17:12,970 --> 00:17:18,220
routing points we are talking to service

328
00:17:16,030 --> 00:17:21,899
providers that are planning to increase

329
00:17:18,220 --> 00:17:24,280
their networks to 120 plus thousand

330
00:17:21,900 --> 00:17:27,640
endpoints AT&T publicly announced

331
00:17:24,280 --> 00:17:29,889
they're adding 60,000 routing points in

332
00:17:27,640 --> 00:17:32,500
their in their network and how we are

333
00:17:29,890 --> 00:17:34,740
doing network management today I don't

334
00:17:32,500 --> 00:17:36,880
see how we can effect it will scale that

335
00:17:34,740 --> 00:17:40,120
because the traditional network

336
00:17:36,880 --> 00:17:44,950
management it is very much focused on a

337
00:17:40,120 --> 00:17:46,899
single device you are building up from

338
00:17:44,950 --> 00:17:48,800
multiple device configurations you're

339
00:17:46,900 --> 00:17:50,960
building up a service

340
00:17:48,800 --> 00:17:54,500
the larger the network is the harder it

341
00:17:50,960 --> 00:17:57,410
will it will be it will be harder to do

342
00:17:54,500 --> 00:18:03,130
that as well it will you know take

343
00:17:57,410 --> 00:18:06,470
longer to provision new services across

344
00:18:03,130 --> 00:18:09,440
significantly larger network than what

345
00:18:06,470 --> 00:18:14,210
we have today we are trying to move away

346
00:18:09,440 --> 00:18:19,310
from a human interface to a machine

347
00:18:14,210 --> 00:18:22,160
interface but some of the content that

348
00:18:19,310 --> 00:18:23,960
is being provided through the human

349
00:18:22,160 --> 00:18:26,150
interface we are just translating it

350
00:18:23,960 --> 00:18:28,430
directly into a machine interface and we

351
00:18:26,150 --> 00:18:30,440
are missing some abstractions we are

352
00:18:28,430 --> 00:18:33,890
trying to do that with the models but

353
00:18:30,440 --> 00:18:37,610
still models are too much I would just

354
00:18:33,890 --> 00:18:40,880
point out to the QoS which in my opinion

355
00:18:37,610 --> 00:18:42,260
is to be the reason I'm pointing it out

356
00:18:40,880 --> 00:18:45,850
because it was the last one mentioned

357
00:18:42,260 --> 00:18:49,220
just before Mike before my presentation

358
00:18:45,850 --> 00:18:51,350
but it is instead of trying to abstract

359
00:18:49,220 --> 00:18:53,270
actions and saying this is the abstract

360
00:18:51,350 --> 00:18:55,899
way how we can do it and it can be

361
00:18:53,270 --> 00:18:58,700
implemented across multiple different

362
00:18:55,900 --> 00:19:01,040
architectures we are trying to cram all

363
00:18:58,700 --> 00:19:03,440
the architectures into one model and

364
00:19:01,040 --> 00:19:06,170
then we ending up with something pretty

365
00:19:03,440 --> 00:19:07,730
complex that is not helping us moving

366
00:19:06,170 --> 00:19:09,830
forward as well

367
00:19:07,730 --> 00:19:12,530
we are not improving the programmability

368
00:19:09,830 --> 00:19:16,129
the programmable capabilities of the

369
00:19:12,530 --> 00:19:20,110
network that we are trying to do I put

370
00:19:16,130 --> 00:19:22,700
in here a couple of you know essentially

371
00:19:20,110 --> 00:19:26,360
these are descriptions different lecture

372
00:19:22,700 --> 00:19:30,770
definitions but the key thing is that in

373
00:19:26,360 --> 00:19:34,399
the automation with minimal or no human

374
00:19:30,770 --> 00:19:37,010
intervention there are a few private

375
00:19:34,400 --> 00:19:39,830
enterprise operators that are very good

376
00:19:37,010 --> 00:19:43,490
at doing this but many people of them

377
00:19:39,830 --> 00:19:48,139
their self relying on the CLI and on the

378
00:19:43,490 --> 00:19:50,420
human operators the idea is that we have

379
00:19:48,140 --> 00:19:52,010
to if you want really to scale those

380
00:19:50,420 --> 00:19:54,200
networks and provide those new services

381
00:19:52,010 --> 00:19:56,090
we have to rethink you know some of the

382
00:19:54,200 --> 00:19:59,930
management how it's done even you know

383
00:19:56,090 --> 00:20:01,939
some of the tools because the idea is

384
00:19:59,930 --> 00:20:02,420
look you have to do it from a service

385
00:20:01,940 --> 00:20:04,130
perspective

386
00:20:02,420 --> 00:20:07,580
and from a service going down

387
00:20:04,130 --> 00:20:11,120
essentially turn it upside down this

388
00:20:07,580 --> 00:20:15,290
brings us to the API management you know

389
00:20:11,120 --> 00:20:17,810
approach and we have today some tools

390
00:20:15,290 --> 00:20:21,230
and protocols that are there some of

391
00:20:17,810 --> 00:20:24,740
them are developed within the ITF

392
00:20:21,230 --> 00:20:26,630
community some of them are being done by

393
00:20:24,740 --> 00:20:29,930
the vendors some of them are being done

394
00:20:26,630 --> 00:20:34,160
by the consortiums plus open source

395
00:20:29,930 --> 00:20:36,890
they're all helping us rethink how we

396
00:20:34,160 --> 00:20:39,140
are doing the automation in seeing how

397
00:20:36,890 --> 00:20:42,860
we are you know how we can move forward

398
00:20:39,140 --> 00:20:45,020
in order to address the new requirements

399
00:20:42,860 --> 00:20:46,520
but some of us also have to switch the

400
00:20:45,020 --> 00:20:48,260
net engineers we have to switch our

401
00:20:46,520 --> 00:20:52,370
thinking and start thinking more in

402
00:20:48,260 --> 00:20:55,400
doing programs what I will show this

403
00:20:52,370 --> 00:20:58,429
later there are no conditional loops in

404
00:20:55,400 --> 00:21:01,490
the configurational data that we are

405
00:20:58,430 --> 00:21:03,260
doing it will be very nice to see oh how

406
00:21:01,490 --> 00:21:05,450
can we add unit tests for certain

407
00:21:03,260 --> 00:21:10,940
functionalities as a network engineer

408
00:21:05,450 --> 00:21:14,120
and this is this is one part that we

409
00:21:10,940 --> 00:21:16,640
have to start thinking more in trying to

410
00:21:14,120 --> 00:21:19,399
adopt more software development

411
00:21:16,640 --> 00:21:22,250
techniques instead of what we were doing

412
00:21:19,400 --> 00:21:24,200
through different vendors provisioning

413
00:21:22,250 --> 00:21:26,510
processes that were mainly saying oh

414
00:21:24,200 --> 00:21:28,790
here's the business logic that want to

415
00:21:26,510 --> 00:21:32,810
be executed on the device but I cannot

416
00:21:28,790 --> 00:21:37,250
put any conditional statements inside

417
00:21:32,810 --> 00:21:39,830
that provisioning information with the

418
00:21:37,250 --> 00:21:42,230
API definition requirements we are

419
00:21:39,830 --> 00:21:45,080
defining the and what we are doing here

420
00:21:42,230 --> 00:21:49,190
at the ITF with the data models we are

421
00:21:45,080 --> 00:21:51,280
essentially defining and we are we are

422
00:21:49,190 --> 00:21:53,510
describing different levels of

423
00:21:51,280 --> 00:21:56,270
functionalities that are available in

424
00:21:53,510 --> 00:21:58,340
the devices as well in the networks we

425
00:21:56,270 --> 00:22:01,210
are talking about what operations can we

426
00:21:58,340 --> 00:22:03,800
do we are deciding how we can you know

427
00:22:01,210 --> 00:22:05,450
send the data back and forth that we can

428
00:22:03,800 --> 00:22:07,760
understand it that we have standardized

429
00:22:05,450 --> 00:22:10,160
it because most of those things which

430
00:22:07,760 --> 00:22:13,280
are well known within the software

431
00:22:10,160 --> 00:22:16,310
development in the networking until

432
00:22:13,280 --> 00:22:20,270
where recently was very

433
00:22:16,310 --> 00:22:22,909
on its own and our best tool was tickle

434
00:22:20,270 --> 00:22:27,760
and expect and we all know the paint's

435
00:22:22,910 --> 00:22:31,280
that was causing us that the data models

436
00:22:27,760 --> 00:22:32,900
there are you know so again there are

437
00:22:31,280 --> 00:22:35,690
vendor models there are some community

438
00:22:32,900 --> 00:22:36,980
models I'm just building you know going

439
00:22:35,690 --> 00:22:40,910
for all of that just giving you a brief

440
00:22:36,980 --> 00:22:43,550
overview but some of the models I'm

441
00:22:40,910 --> 00:22:46,670
saying we have to do we have to provide

442
00:22:43,550 --> 00:22:48,080
better abstractions if we we can say

443
00:22:46,670 --> 00:22:50,630
there are common functionalities that

444
00:22:48,080 --> 00:22:52,399
every single vendor is using but how

445
00:22:50,630 --> 00:22:54,440
those functionalities are implemented

446
00:22:52,400 --> 00:22:56,480
should be abstracted away we should we

447
00:22:54,440 --> 00:22:58,700
should not continue pushing up those

448
00:22:56,480 --> 00:23:01,280
implementation details into the higher

449
00:22:58,700 --> 00:23:03,440
levels throughout the data models if we

450
00:23:01,280 --> 00:23:05,990
continue doing that we will not be able

451
00:23:03,440 --> 00:23:10,550
to scale the management forward and then

452
00:23:05,990 --> 00:23:14,480
all the efforts that we are doing will

453
00:23:10,550 --> 00:23:18,409
be I don't on the same vein but I'm

454
00:23:14,480 --> 00:23:21,170
going to say so the transfer protocols

455
00:23:18,410 --> 00:23:25,070
they are multiple of them everybody can

456
00:23:21,170 --> 00:23:26,390
decide which one they want to use but

457
00:23:25,070 --> 00:23:30,980
one of the things which I'm a little bit

458
00:23:26,390 --> 00:23:37,130
concerned is that G RPC is becoming the

459
00:23:30,980 --> 00:23:42,200
facto standard for telemetry if G RPC is

460
00:23:37,130 --> 00:23:45,920
more or less owned by a vendor mom a by

461
00:23:42,200 --> 00:23:48,980
a by a single enterprise and not what we

462
00:23:45,920 --> 00:23:51,110
need all of us commonly might be good

463
00:23:48,980 --> 00:23:54,620
for us what might be good for that

464
00:23:51,110 --> 00:23:57,500
enterprise and seeing more and more

465
00:23:54,620 --> 00:24:02,360
requirements that saying oh we want you

466
00:23:57,500 --> 00:24:04,310
know GRP cg and a my support is you know

467
00:24:02,360 --> 00:24:07,909
it's a nice thing to hear because if

468
00:24:04,310 --> 00:24:09,470
they're providing some good mechanisms

469
00:24:07,910 --> 00:24:11,780
they're a good framework on the other

470
00:24:09,470 --> 00:24:13,550
hand I'm also hearing some concerns that

471
00:24:11,780 --> 00:24:16,210
some that the framework is not

472
00:24:13,550 --> 00:24:19,760
sufficient enough for what some other

473
00:24:16,210 --> 00:24:24,500
operators network operators would like

474
00:24:19,760 --> 00:24:26,510
to do so if we are looking at B in

475
00:24:24,500 --> 00:24:29,390
network device configuration and

476
00:24:26,510 --> 00:24:32,090
management api's is

477
00:24:29,390 --> 00:24:36,380
we have device resource and network

478
00:24:32,090 --> 00:24:41,659
functions that should be used for high

479
00:24:36,380 --> 00:24:43,580
level data models if in the net mod

480
00:24:41,660 --> 00:24:45,590
working group we're trying to define how

481
00:24:43,580 --> 00:24:48,740
can we build up packages that will

482
00:24:45,590 --> 00:24:50,270
provide the abstractions for different

483
00:24:48,740 --> 00:24:52,400
functionalities and systems that you

484
00:24:50,270 --> 00:24:55,610
want to build in order to ease the

485
00:24:52,400 --> 00:24:59,000
management and provide common schemas to

486
00:24:55,610 --> 00:25:02,570
the higher level ones the point there is

487
00:24:59,000 --> 00:25:06,290
the young data model is in the young

488
00:25:02,570 --> 00:25:07,879
language is a common it's a common

489
00:25:06,290 --> 00:25:11,450
language that is adopted some people

490
00:25:07,880 --> 00:25:13,250
prefer protobuf / yang but majority of

491
00:25:11,450 --> 00:25:16,549
majority of the industry settling down

492
00:25:13,250 --> 00:25:20,750
on yang the bad part of that thing is

493
00:25:16,549 --> 00:25:24,950
it's too much tight to two out of three

494
00:25:20,750 --> 00:25:29,780
available transport protocols that are

495
00:25:24,950 --> 00:25:31,700
in use widely today and us working on

496
00:25:29,780 --> 00:25:34,220
trying to say hey there is another

497
00:25:31,700 --> 00:25:37,100
framework that is being de facto

498
00:25:34,220 --> 00:25:39,320
standard but yang is a standard and

499
00:25:37,100 --> 00:25:41,209
those things are incompatible is a

500
00:25:39,320 --> 00:25:42,620
problem that needs to be solving that we

501
00:25:41,210 --> 00:25:45,020
should you know start thinking about

502
00:25:42,620 --> 00:25:46,309
that because the more we will grow apart

503
00:25:45,020 --> 00:25:48,650
the harder it will be to come together

504
00:25:46,309 --> 00:25:50,690
and we will run again into a management

505
00:25:48,650 --> 00:25:55,549
problem forgot to mention at the

506
00:25:50,690 --> 00:25:57,740
beginning there is a I heard it from

507
00:25:55,549 --> 00:26:00,049
several people that the golden standard

508
00:25:57,740 --> 00:26:03,190
for network management was the Wellfleet

509
00:26:00,049 --> 00:26:05,690
frame relay network management suite and

510
00:26:03,190 --> 00:26:07,640
many operators are remembering how

511
00:26:05,690 --> 00:26:09,169
nicely it was done they saying if you

512
00:26:07,640 --> 00:26:10,850
can provide us something like that we

513
00:26:09,169 --> 00:26:13,250
will love to buy your product because we

514
00:26:10,850 --> 00:26:16,370
needed a very small number of operators

515
00:26:13,250 --> 00:26:21,290
in for us to manage a continental scale

516
00:26:16,370 --> 00:26:22,668
network and we have to do that but we

517
00:26:21,290 --> 00:26:24,500
have to be sometimes a little bit more

518
00:26:22,669 --> 00:26:26,480
open and saying let's forget about the

519
00:26:24,500 --> 00:26:28,100
implementation details and decide on the

520
00:26:26,480 --> 00:26:30,169
functional details in order to move it

521
00:26:28,100 --> 00:26:32,330
forward and make sure that what the

522
00:26:30,169 --> 00:26:34,460
industry is doing that we are you know

523
00:26:32,330 --> 00:26:36,379
aligning the common interest across that

524
00:26:34,460 --> 00:26:38,450
and making sure that we are not letting

525
00:26:36,380 --> 00:26:41,799
certain things out because it can you

526
00:26:38,450 --> 00:26:47,779
know really hurt us

527
00:26:41,799 --> 00:26:50,269
this is a example of a open config

528
00:26:47,779 --> 00:26:53,840
device model and the reason why I'm you

529
00:26:50,269 --> 00:26:55,700
know putting it out this is done by a

530
00:26:53,840 --> 00:26:58,039
consortium and they put in

531
00:26:55,700 --> 00:27:00,950
functionalities in there that they

532
00:26:58,039 --> 00:27:04,100
really need it there are things that

533
00:27:00,950 --> 00:27:09,580
could be you know extended there are

534
00:27:04,100 --> 00:27:11,899
things in there that are you know

535
00:27:09,580 --> 00:27:14,210
missing but there are also things that

536
00:27:11,899 --> 00:27:16,340
are there that could be used that my

537
00:27:14,210 --> 00:27:18,260
main my main issue there is it's a

538
00:27:16,340 --> 00:27:19,820
device model where is the where is the

539
00:27:18,260 --> 00:27:22,039
next one the service models on top of

540
00:27:19,820 --> 00:27:23,899
that in the ITF we have two service

541
00:27:22,039 --> 00:27:26,658
models that we have worked so far at the

542
00:27:23,899 --> 00:27:28,820
L to SM and l3 SM we need many other

543
00:27:26,659 --> 00:27:35,210
service models that can set you know on

544
00:27:28,820 --> 00:27:38,240
top of the device walls and built up if

545
00:27:35,210 --> 00:27:41,120
you look again into the open config G

546
00:27:38,240 --> 00:27:42,919
RPC interfaces and I'm going here a

547
00:27:41,120 --> 00:27:45,649
little bit more Ruggieri's interfaces

548
00:27:42,919 --> 00:27:48,440
since last time they're presented at the

549
00:27:45,649 --> 00:27:50,418
ITF there has been an evolution and some

550
00:27:48,440 --> 00:27:54,850
of the concept that did that we did in

551
00:27:50,419 --> 00:27:57,590
the ITF and drop they picked them up and

552
00:27:54,850 --> 00:28:01,010
or they came with their own ideas that

553
00:27:57,590 --> 00:28:03,110
were similar to ours ideas and expanded

554
00:28:01,010 --> 00:28:07,070
that one of the interesting interfaces

555
00:28:03,110 --> 00:28:11,059
that they added is the G ribeye this is

556
00:28:07,070 --> 00:28:14,480
you know if some people might remember

557
00:28:11,059 --> 00:28:17,809
the I to RS the original ideas of the

558
00:28:14,480 --> 00:28:18,490
ITRs and JIRA by have certain things in

559
00:28:17,809 --> 00:28:20,928
common

560
00:28:18,490 --> 00:28:23,330
but then the very interesting part is

561
00:28:20,929 --> 00:28:25,970
how the integrating with the G NMR and

562
00:28:23,330 --> 00:28:27,740
getting the information of your body

563
00:28:25,970 --> 00:28:30,110
from informational state they can use

564
00:28:27,740 --> 00:28:34,760
for certain you know other operations

565
00:28:30,110 --> 00:28:36,740
and this is a nice example how they were

566
00:28:34,760 --> 00:28:42,379
building on top of the abstractions and

567
00:28:36,740 --> 00:28:45,620
putting you know into a pretty common

568
00:28:42,380 --> 00:28:47,120
frame pretty foundational framework that

569
00:28:45,620 --> 00:28:50,539
works well if you want to build

570
00:28:47,120 --> 00:28:53,689
different applications on top of that so

571
00:28:50,539 --> 00:28:56,779
quickly why like G nmi it

572
00:28:53,690 --> 00:28:57,710
you essentially capabilities so you're

573
00:28:56,779 --> 00:29:00,019
getting you know okay

574
00:28:57,710 --> 00:29:03,259
give me the the capabilities what are

575
00:29:00,019 --> 00:29:06,320
there I can get and set on them and I

576
00:29:03,259 --> 00:29:09,080
can subscribe and I like the way how

577
00:29:06,320 --> 00:29:12,080
their subscription stream works I think

578
00:29:09,080 --> 00:29:13,639
that what some of our subscription

579
00:29:12,080 --> 00:29:16,370
frameworks that we have available today

580
00:29:13,639 --> 00:29:18,979
have things missing I also don't think

581
00:29:16,370 --> 00:29:23,809
they I think they are too heavy for the

582
00:29:18,980 --> 00:29:26,799
devices and we should try to see what

583
00:29:23,809 --> 00:29:29,210
can be changed and what can be adapted

584
00:29:26,799 --> 00:29:31,519
from some of the other frameworks

585
00:29:29,210 --> 00:29:34,100
because one thing what I really love

586
00:29:31,519 --> 00:29:37,610
about the jean-mi is for the telemetry

587
00:29:34,100 --> 00:29:41,029
and you can decide okay here's my you

588
00:29:37,610 --> 00:29:43,459
know I want to subscribe and this is the

589
00:29:41,029 --> 00:29:47,659
path to the path element for which data

590
00:29:43,460 --> 00:29:50,320
information I want to get this is

591
00:29:47,659 --> 00:29:53,600
interesting because you can create

592
00:29:50,320 --> 00:29:56,090
telemetry you can create data collection

593
00:29:53,600 --> 00:29:58,939
subscriptions for a cert for specific

594
00:29:56,090 --> 00:30:00,168
service and get data for that service

595
00:29:58,940 --> 00:30:02,629
that means when I write an application

596
00:30:00,169 --> 00:30:04,850
that provisions the service I can

597
00:30:02,629 --> 00:30:08,120
subscribe only to that service relevant

598
00:30:04,850 --> 00:30:10,519
information and use that as certain

599
00:30:08,120 --> 00:30:12,830
event triggers that can provide the

600
00:30:10,519 --> 00:30:15,500
corrective actions that can be the input

601
00:30:12,830 --> 00:30:19,759
for my conditional statements in my

602
00:30:15,500 --> 00:30:25,580
service provisioning in in in my service

603
00:30:19,759 --> 00:30:29,090
provisioning logic so do we have the

604
00:30:25,580 --> 00:30:31,460
right tools today yes and no we have the

605
00:30:29,090 --> 00:30:33,139
right ideas some of our implementations

606
00:30:31,460 --> 00:30:35,179
could be better you know

607
00:30:33,139 --> 00:30:38,149
I'm guilty as charged I've been working

608
00:30:35,179 --> 00:30:40,220
on that for years and you know we are

609
00:30:38,149 --> 00:30:43,518
learning as we are moving forward but

610
00:30:40,220 --> 00:30:46,909
getting I will make a call out that US

611
00:30:43,519 --> 00:30:49,039
vendors are not the best people to talk

612
00:30:46,909 --> 00:30:51,169
to and rely on us on how to do

613
00:30:49,039 --> 00:30:53,570
operations I've been a vendor my whole

614
00:30:51,169 --> 00:30:56,840
life so you know this is the one part

615
00:30:53,570 --> 00:30:59,090
that but we also know how to do certain

616
00:30:56,840 --> 00:31:02,269
abstractions and we should do that

617
00:30:59,090 --> 00:31:05,449
forget the implementation details focus

618
00:31:02,269 --> 00:31:07,620
on the functionalities and saying this

619
00:31:05,450 --> 00:31:09,390
is what we can do as a vendor the

620
00:31:07,620 --> 00:31:10,770
is what we can get input from the

621
00:31:09,390 --> 00:31:14,160
service you know from the action from

622
00:31:10,770 --> 00:31:16,920
the network operators and use the input

623
00:31:14,160 --> 00:31:18,930
from the network operators to refine the

624
00:31:16,920 --> 00:31:21,740
network functions that we are providing

625
00:31:18,930 --> 00:31:24,150
to them to build the network services

626
00:31:21,740 --> 00:31:27,809
the service Wallace has mentioned you

627
00:31:24,150 --> 00:31:30,390
know they are two of them open config I

628
00:31:27,809 --> 00:31:32,820
will say the only define you know model

629
00:31:30,390 --> 00:31:34,860
set the device level and growing the

630
00:31:32,820 --> 00:31:37,649
network just based on the device level

631
00:31:34,860 --> 00:31:39,270
will not scale we will run into many

632
00:31:37,650 --> 00:31:41,910
problems if you will you know when we

633
00:31:39,270 --> 00:31:43,559
see like a 10 or 20 X increase in size

634
00:31:41,910 --> 00:31:49,429
of our networks the way how we are

635
00:31:43,559 --> 00:31:51,899
managing you know that today and the

636
00:31:49,429 --> 00:31:55,020
many network operators have their own

637
00:31:51,900 --> 00:31:57,540
proprietary tools that they are creating

638
00:31:55,020 --> 00:31:59,520
in order you know to manage the services

639
00:31:57,540 --> 00:32:00,990
this how they are managing this how they

640
00:31:59,520 --> 00:32:04,770
manage network how they are creating the

641
00:32:00,990 --> 00:32:07,500
value and this is how they are at the

642
00:32:04,770 --> 00:32:11,460
end making money making profits if we

643
00:32:07,500 --> 00:32:15,030
can help them by providing them better

644
00:32:11,460 --> 00:32:17,760
tools for them to create the higher you

645
00:32:15,030 --> 00:32:20,040
know values that will you know be also

646
00:32:17,760 --> 00:32:21,990
better for our industry in general so

647
00:32:20,040 --> 00:32:23,550
the question is could we use any

648
00:32:21,990 --> 00:32:25,110
reasonable pattern to design and

649
00:32:23,550 --> 00:32:26,460
automate networking service there's

650
00:32:25,110 --> 00:32:28,830
something that we should be asking us

651
00:32:26,460 --> 00:32:33,570
when we are working on any of the

652
00:32:28,830 --> 00:32:35,490
standards that we are working on so we

653
00:32:33,570 --> 00:32:39,030
try to classify certain things you know

654
00:32:35,490 --> 00:32:43,980
in the ITF but yesterday during the

655
00:32:39,030 --> 00:32:47,250
first working group session the

656
00:32:43,980 --> 00:32:48,960
presentation from Reza and Nokia he was

657
00:32:47,250 --> 00:32:51,740
mainly talking about translation of a

658
00:32:48,960 --> 00:32:55,080
business service into lower layers I

659
00:32:51,740 --> 00:32:57,300
will say that again we are not the right

660
00:32:55,080 --> 00:32:59,100
community to define the business

661
00:32:57,300 --> 00:33:02,760
services and interfaces to the business

662
00:32:59,100 --> 00:33:04,620
services but we can help them to define

663
00:33:02,760 --> 00:33:06,929
an interface between the business

664
00:33:04,620 --> 00:33:09,000
service and the network service and then

665
00:33:06,929 --> 00:33:11,730
you know going down into how the network

666
00:33:09,000 --> 00:33:14,010
service is being decomposed into

667
00:33:11,730 --> 00:33:15,720
multiple Network functions based on the

668
00:33:14,010 --> 00:33:17,940
characteristics that the customer is

669
00:33:15,720 --> 00:33:21,110
asking for and what the network operator

670
00:33:17,940 --> 00:33:23,700
currently supports

671
00:33:21,110 --> 00:33:28,918
for the network service automation you

672
00:33:23,700 --> 00:33:31,200
always have essentially three heads one

673
00:33:28,919 --> 00:33:33,450
of them is a business user I like to say

674
00:33:31,200 --> 00:33:36,840
this is our good old non PLM here they

675
00:33:33,450 --> 00:33:39,269
have to define the use cases tell us you

676
00:33:36,840 --> 00:33:43,620
know what use cases have to be defined

677
00:33:39,269 --> 00:33:45,870
and the network operator knows about

678
00:33:43,620 --> 00:33:48,110
troubleshooting operations provisioning

679
00:33:45,870 --> 00:33:53,489
and then we have a network developer

680
00:33:48,110 --> 00:33:56,309
when they talk to some of the VARs and s

681
00:33:53,490 --> 00:34:01,529
i--'s today they're saying we have 2000

682
00:33:56,309 --> 00:34:04,830
CC II's and 1800 J and C is great but

683
00:34:01,529 --> 00:34:07,260
those guys cannot really they are good

684
00:34:04,830 --> 00:34:08,759
as a network developers you know the

685
00:34:07,260 --> 00:34:11,070
question is how many of them are as a

686
00:34:08,760 --> 00:34:12,510
network operators and how many of them

687
00:34:11,070 --> 00:34:18,000
will be really good at translating the

688
00:34:12,510 --> 00:34:21,149
business user requirements into you know

689
00:34:18,000 --> 00:34:23,580
into the lower layers so if you look at

690
00:34:21,149 --> 00:34:25,710
the traditional network service

691
00:34:23,580 --> 00:34:28,020
orchestration approach you still have a

692
00:34:25,710 --> 00:34:31,290
network operator that is following the

693
00:34:28,020 --> 00:34:34,080
alarms and then executing certain

694
00:34:31,290 --> 00:34:36,300
predetermined actions when I was working

695
00:34:34,080 --> 00:34:38,129
for a large vendor at an SDK

696
00:34:36,300 --> 00:34:40,919
one of the biggest applications they

697
00:34:38,129 --> 00:34:42,779
were using for the SDK was preset

698
00:34:40,918 --> 00:34:45,449
commands that the network operator was

699
00:34:42,780 --> 00:34:47,369
executing based on the alarms they were

700
00:34:45,449 --> 00:34:49,560
creating custom CLI for a different

701
00:34:47,369 --> 00:34:51,510
level of an operator I'm asking why do

702
00:34:49,560 --> 00:34:54,210
you need that operator in there to

703
00:34:51,510 --> 00:34:56,790
execute on that create a loop control

704
00:34:54,210 --> 00:34:58,910
loop and let that automate that and let

705
00:34:56,790 --> 00:35:02,700
that operator do something more valuable

706
00:34:58,910 --> 00:35:05,970
but our tools are not there yet

707
00:35:02,700 --> 00:35:07,710
because if we want to build an ensign

708
00:35:05,970 --> 00:35:09,209
application the natural developer has to

709
00:35:07,710 --> 00:35:11,970
listen to the business guide they have

710
00:35:09,210 --> 00:35:14,670
to look at the operators guys and say

711
00:35:11,970 --> 00:35:16,950
this is my business technical and

712
00:35:14,670 --> 00:35:18,869
operational requirements and I will put

713
00:35:16,950 --> 00:35:22,890
that together into a single network

714
00:35:18,869 --> 00:35:27,060
application I will be using the the the

715
00:35:22,890 --> 00:35:29,069
well-known procedures of software

716
00:35:27,060 --> 00:35:31,170
development where I can unit test my

717
00:35:29,069 --> 00:35:32,339
functions I can unit test my service I

718
00:35:31,170 --> 00:35:34,350
can do you know different types of

719
00:35:32,339 --> 00:35:36,150
testing functional testing on that

720
00:35:34,350 --> 00:35:38,310
I can run that application multiple

721
00:35:36,150 --> 00:35:41,220
times I will have no the predictable

722
00:35:38,310 --> 00:35:43,950
results when we have been up putting in

723
00:35:41,220 --> 00:35:45,330
different configurations we are still

724
00:35:43,950 --> 00:35:47,970
trying to figure out what is the state

725
00:35:45,330 --> 00:35:49,770
we are not always sure that the state on

726
00:35:47,970 --> 00:35:52,259
the network will be what we were really

727
00:35:49,770 --> 00:35:53,910
putting it and if we would go from a

728
00:35:52,260 --> 00:35:56,250
top-down perspective saying this is the

729
00:35:53,910 --> 00:35:57,750
predicted state we can then compare what

730
00:35:56,250 --> 00:36:01,200
is the state on each device and try to

731
00:35:57,750 --> 00:36:04,700
do the corrective actions and that would

732
00:36:01,200 --> 00:36:08,700
be the first part is that we have to

733
00:36:04,700 --> 00:36:10,919
saying we are having a set of api's from

734
00:36:08,700 --> 00:36:14,060
our devices that are being you know

735
00:36:10,920 --> 00:36:16,200
streamed upstream data being from a

736
00:36:14,060 --> 00:36:17,250
network service instance being pushed

737
00:36:16,200 --> 00:36:19,589
down and they're being you know

738
00:36:17,250 --> 00:36:21,360
essentially streamed up for the

739
00:36:19,590 --> 00:36:23,580
monitoring you know of the device

740
00:36:21,360 --> 00:36:26,550
resources this would be the step one

741
00:36:23,580 --> 00:36:28,740
when we are trying to add conditions on

742
00:36:26,550 --> 00:36:31,550
the network to be tested and verified

743
00:36:28,740 --> 00:36:34,529
where our service logic based is

744
00:36:31,550 --> 00:36:36,750
checking on the function that we have

745
00:36:34,530 --> 00:36:39,120
invoked if we build the right service

746
00:36:36,750 --> 00:36:42,990
and we can then provide another API to a

747
00:36:39,120 --> 00:36:45,870
high level application to be consumed by

748
00:36:42,990 --> 00:36:47,790
that if we can achieve that today there

749
00:36:45,870 --> 00:36:49,020
are certain operators and enterprise

750
00:36:47,790 --> 00:36:52,259
they're building on that they have

751
00:36:49,020 --> 00:36:54,990
experience on that and I would be happy

752
00:36:52,260 --> 00:36:56,760
to you know work on such architectures

753
00:36:54,990 --> 00:36:58,890
discrete descriptions just as in

754
00:36:56,760 --> 00:37:02,520
informational documents with the other

755
00:36:58,890 --> 00:37:05,040
people but now where we really have to

756
00:37:02,520 --> 00:37:07,080
start going as the next step is deciding

757
00:37:05,040 --> 00:37:09,600
hey we have a distributed device

758
00:37:07,080 --> 00:37:12,600
management platform and I really want to

759
00:37:09,600 --> 00:37:13,920
have a streaming event bus that is

760
00:37:12,600 --> 00:37:16,470
providing the operational and

761
00:37:13,920 --> 00:37:19,080
provisional interface in one I'm just

762
00:37:16,470 --> 00:37:21,540
passing into the stream and that's in

763
00:37:19,080 --> 00:37:23,850
the stream will push the data to all the

764
00:37:21,540 --> 00:37:25,380
devices for the service so instead of

765
00:37:23,850 --> 00:37:27,630
being on the device base I have a

766
00:37:25,380 --> 00:37:29,550
service level in that service level

767
00:37:27,630 --> 00:37:31,170
because device is configured for certain

768
00:37:29,550 --> 00:37:32,640
types of events it will receive the

769
00:37:31,170 --> 00:37:35,780
provisioning information but it's also

770
00:37:32,640 --> 00:37:38,790
sent back the operational data for that

771
00:37:35,780 --> 00:37:42,450
there is a pretty good framework out

772
00:37:38,790 --> 00:37:44,100
there that is done by a vendor and there

773
00:37:42,450 --> 00:37:46,109
are certain things that I would like to

774
00:37:44,100 --> 00:37:47,029
see in that framework to be expanded and

775
00:37:46,110 --> 00:37:49,580
extended

776
00:37:47,030 --> 00:37:52,460
maybe even standardized because this

777
00:37:49,580 --> 00:37:54,380
would be very helpful and that we can

778
00:37:52,460 --> 00:37:56,420
have for the configuration actions as

779
00:37:54,380 --> 00:37:59,390
well for the monitoring actions a single

780
00:37:56,420 --> 00:38:01,400
API we can have a single common data

781
00:37:59,390 --> 00:38:03,830
model for both of them which would makes

782
00:38:01,400 --> 00:38:05,090
the something because one of our biggest

783
00:38:03,830 --> 00:38:06,470
promise realization between the

784
00:38:05,090 --> 00:38:08,930
operational model and the

785
00:38:06,470 --> 00:38:10,490
configurational model and trying to

786
00:38:08,930 --> 00:38:13,220
figure out what does this operational

787
00:38:10,490 --> 00:38:15,560
model mean in configurational terms this

788
00:38:13,220 --> 00:38:17,379
should you know be able to simplify the

789
00:38:15,560 --> 00:38:20,690
actions that we are trying to do and

790
00:38:17,380 --> 00:38:22,550
then as the last iteration would be that

791
00:38:20,690 --> 00:38:25,430
instead of having enough separate

792
00:38:22,550 --> 00:38:26,780
configuration and operational parts we

793
00:38:25,430 --> 00:38:28,730
will just have a network service

794
00:38:26,780 --> 00:38:32,390
instance that would be using data lying

795
00:38:28,730 --> 00:38:35,690
SDK and instead of being an expert in

796
00:38:32,390 --> 00:38:37,520
CLI you would say oh this in your

797
00:38:35,690 --> 00:38:39,440
library that they have to learn in order

798
00:38:37,520 --> 00:38:43,960
to be able to provision this new service

799
00:38:39,440 --> 00:38:46,850
and writing a new application would be

800
00:38:43,960 --> 00:38:48,650
network independent as well as a vendor

801
00:38:46,850 --> 00:38:51,080
independent because you're talking about

802
00:38:48,650 --> 00:38:54,920
the abstractions and saying look for me

803
00:38:51,080 --> 00:38:57,200
to do a filter have to have a match

804
00:38:54,920 --> 00:38:59,690
condition I have to have a action on top

805
00:38:57,200 --> 00:39:02,299
of that and I will be learning about

806
00:38:59,690 --> 00:39:04,130
different types of actions and match and

807
00:39:02,300 --> 00:39:06,230
actual conditions I have available in

808
00:39:04,130 --> 00:39:08,510
order to execute on that I can find out

809
00:39:06,230 --> 00:39:10,310
from the network what is available what

810
00:39:08,510 --> 00:39:12,200
is not available are the resources are

811
00:39:10,310 --> 00:39:13,640
there are no resources and based on that

812
00:39:12,200 --> 00:39:16,189
make a decision can something like that

813
00:39:13,640 --> 00:39:20,420
be deployed across the service topology

814
00:39:16,190 --> 00:39:23,180
or not these days why do we still have

815
00:39:20,420 --> 00:39:25,520
to use rollback and then question is

816
00:39:23,180 --> 00:39:29,540
what is the state across my network

817
00:39:25,520 --> 00:39:32,210
after I did the rollback and that would

818
00:39:29,540 --> 00:39:33,950
be the end of the application the

819
00:39:32,210 --> 00:39:37,600
presentation and if you have any

820
00:39:33,950 --> 00:39:37,600
questions I welcome

821
00:39:47,660 --> 00:39:51,390
but my class of 510 for this so it's

822
00:39:50,819 --> 00:39:53,819
great

823
00:39:51,390 --> 00:39:55,589
now what I'm missing is okay what are

824
00:39:53,819 --> 00:39:58,230
the top three things we should be doing

825
00:39:55,589 --> 00:39:59,759
in this community to get together top

826
00:39:58,230 --> 00:40:01,410
three things what are the top three

827
00:39:59,760 --> 00:40:06,890
things we should be doing now to get

828
00:40:01,410 --> 00:40:10,049
there in this community I will welcome

829
00:40:06,890 --> 00:40:12,750
getting so I will go back to QoS and

830
00:40:10,049 --> 00:40:15,690
Akko to have it better abstract it'd be

831
00:40:12,750 --> 00:40:17,099
less implementation detail so provide

832
00:40:15,690 --> 00:40:22,319
better abstractions for all the yang

833
00:40:17,099 --> 00:40:26,220
models get in try to reach out because

834
00:40:22,319 --> 00:40:28,410
my big war is telemetry and GN mi is a

835
00:40:26,220 --> 00:40:32,069
really good telemetry framework what we

836
00:40:28,410 --> 00:40:33,750
are doing here needs a lot of you know

837
00:40:32,069 --> 00:40:36,180
work and I don't think that it can scale

838
00:40:33,750 --> 00:40:38,609
to what we are to what we need and try

839
00:40:36,180 --> 00:40:43,348
to re-engage the GN mi in order in

840
00:40:38,609 --> 00:40:45,690
together that so but then also I would

841
00:40:43,349 --> 00:40:48,180
ask that vendor to be sometimes a little

842
00:40:45,690 --> 00:40:50,700
bit more open to our input as well what

843
00:40:48,180 --> 00:40:52,078
we are proposing back because we also

844
00:40:50,700 --> 00:40:54,589
have our own reasons why we need certain

845
00:40:52,079 --> 00:40:58,109
things that my different you know from

846
00:40:54,589 --> 00:41:01,349
defender so my I will say again we need

847
00:40:58,109 --> 00:41:04,109
better abstractions for devices for

848
00:41:01,349 --> 00:41:06,720
therefore the network functions devices

849
00:41:04,109 --> 00:41:12,869
network functions and a certain extent

850
00:41:06,720 --> 00:41:15,480
first for network services so I like to

851
00:41:12,869 --> 00:41:18,450
presentations good and I think that I

852
00:41:15,480 --> 00:41:20,880
agree that would be useful to have an

853
00:41:18,450 --> 00:41:22,529
official draft documenting how to use

854
00:41:20,880 --> 00:41:24,029
some of this and do the lifecycle

855
00:41:22,529 --> 00:41:27,569
management through yang unless they have

856
00:41:24,029 --> 00:41:28,710
that be greatly beneficial and I have an

857
00:41:27,569 --> 00:41:31,740
interested in that's what suffers well

858
00:41:28,710 --> 00:41:34,109
one question on this particular is what

859
00:41:31,740 --> 00:41:37,680
do you see the s what do you see the API

860
00:41:34,109 --> 00:41:39,089
has between the operators and the

861
00:41:37,680 --> 00:41:41,038
services is that something that's

862
00:41:39,089 --> 00:41:43,259
written in yang or is that a

863
00:41:41,039 --> 00:41:45,660
programmatic interface in some

864
00:41:43,260 --> 00:41:47,490
particular language its programmatic

865
00:41:45,660 --> 00:41:51,379
interfaces whichever language you know

866
00:41:47,490 --> 00:41:54,689
you prefer and you like to use okay so

867
00:41:51,380 --> 00:41:55,450
who writes that SDK and who chooses that

868
00:41:54,690 --> 00:42:03,339
language so

869
00:41:55,450 --> 00:42:06,640
if so the the language the you have

870
00:42:03,339 --> 00:42:08,799
frameworks that can once you write the

871
00:42:06,640 --> 00:42:12,730
definition can give you a library in

872
00:42:08,799 --> 00:42:15,609
many different languages and it's a

873
00:42:12,730 --> 00:42:19,809
question now how you can get the data

874
00:42:15,609 --> 00:42:21,460
model be translated into the language so

875
00:42:19,809 --> 00:42:23,230
I will not go into the specific

876
00:42:21,460 --> 00:42:25,210
different frameworks that are providing

877
00:42:23,230 --> 00:42:27,609
you their functionality but that should

878
00:42:25,210 --> 00:42:29,799
you know there are frameworks out there

879
00:42:27,609 --> 00:42:31,808
that can be used and again it would be

880
00:42:29,799 --> 00:42:34,030
easier I will come down to that if yang

881
00:42:31,809 --> 00:42:35,859
would be a little bit more independent

882
00:42:34,030 --> 00:42:38,079
to be able to write some of those

883
00:42:35,859 --> 00:42:40,270
translation between Yang and some of the

884
00:42:38,079 --> 00:42:41,950
other frameworks without having the

885
00:42:40,270 --> 00:42:44,170
other transfer protocol restrictions

886
00:42:41,950 --> 00:42:44,529
what we have we could you know work from

887
00:42:44,170 --> 00:42:46,210
there

888
00:42:44,530 --> 00:42:48,210
so this is another part that we could

889
00:42:46,210 --> 00:42:53,160
you know we work in as a community

890
00:42:48,210 --> 00:42:56,170
because yang is being adopted and it's a

891
00:42:53,160 --> 00:42:56,770
useful tool that we can use but we have

892
00:42:56,170 --> 00:42:59,170
to evolve

893
00:42:56,770 --> 00:43:02,109
I mean they also I would like to see

894
00:42:59,170 --> 00:43:03,700
more about yang next what he could do

895
00:43:02,109 --> 00:43:09,240
you know there was young next and then

896
00:43:03,700 --> 00:43:18,490
suddenly it disappeared it vanished

897
00:43:09,240 --> 00:43:21,098
so I I don't want to be very much per se

898
00:43:18,490 --> 00:43:25,328
on the language specific I say this is a

899
00:43:21,099 --> 00:43:27,790
common interface that we can use in

900
00:43:25,329 --> 00:43:31,000
order to provide there can be variants

901
00:43:27,790 --> 00:43:33,520
of the features that are supported

902
00:43:31,000 --> 00:43:37,450
within that but it's they share a common

903
00:43:33,520 --> 00:43:39,309
syntax okay so does that mean really you

904
00:43:37,450 --> 00:43:42,160
need to translate yang into something

905
00:43:39,309 --> 00:43:43,329
like open api or swipe or something and

906
00:43:42,160 --> 00:43:47,759
then that could be used to generate

907
00:43:43,329 --> 00:43:47,760
whatever language findings you want yeah

908
00:43:52,799 --> 00:44:00,670
listen Leon from sallee Oh from North

909
00:43:57,520 --> 00:44:02,890
American we support different defense I

910
00:44:00,670 --> 00:44:04,660
have two questions one question is aware

911
00:44:02,890 --> 00:44:06,910
of northbound interface in this

912
00:44:04,660 --> 00:44:07,990
architecture and the second question is

913
00:44:06,910 --> 00:44:10,810
regarding this

914
00:44:07,990 --> 00:44:12,700
streaming event bass so he's past you

915
00:44:10,810 --> 00:44:13,480
are talking about pops up which is

916
00:44:12,700 --> 00:44:15,910
required

917
00:44:13,480 --> 00:44:18,190
communication for telemetry may be fine

918
00:44:15,910 --> 00:44:20,859
but for the per inning how you guarantee

919
00:44:18,190 --> 00:44:23,050
you know what your print will be

920
00:44:20,860 --> 00:44:24,190
immediately you know being committed

921
00:44:23,050 --> 00:44:26,500
it's working

922
00:44:24,190 --> 00:44:28,660
your pops Avenida synchronize not

923
00:44:26,500 --> 00:44:31,300
necessary what do you intend to present

924
00:44:28,660 --> 00:44:33,790
well beeper yeah so there may be delayed

925
00:44:31,300 --> 00:44:35,530
okay so I have a question now first you

926
00:44:33,790 --> 00:44:37,660
ask worse than North but the interface

927
00:44:35,530 --> 00:44:40,450
word the north and salbon interfaces are

928
00:44:37,660 --> 00:44:44,080
and then the second question is how do

929
00:44:40,450 --> 00:44:48,580
you guarantee the networks that the that

930
00:44:44,080 --> 00:44:50,529
the provisioning information was it has

931
00:44:48,580 --> 00:44:54,360
been provisioned across the service that

932
00:44:50,530 --> 00:44:57,369
you desire yeah

933
00:44:54,360 --> 00:44:59,380
so on the northbound and solve an

934
00:44:57,369 --> 00:45:00,790
interface this is relative you know

935
00:44:59,380 --> 00:45:02,980
where you're putting in in this case

936
00:45:00,790 --> 00:45:05,380
yeah southbound I should have put it

937
00:45:02,980 --> 00:45:09,610
there an API and say this is my API to

938
00:45:05,380 --> 00:45:13,000
the devices and think about devices are

939
00:45:09,610 --> 00:45:15,280
the physical layer that are doing the

940
00:45:13,000 --> 00:45:18,400
packet forwarding then you have the

941
00:45:15,280 --> 00:45:20,350
device management platform is where you

942
00:45:18,400 --> 00:45:21,940
are abstracting the devices in a set of

943
00:45:20,350 --> 00:45:24,490
functions and the resources that they

944
00:45:21,940 --> 00:45:28,540
are using as well you are providing you

945
00:45:24,490 --> 00:45:29,979
know the the messaging the message bus

946
00:45:28,540 --> 00:45:31,630
that has the provisioning and the

947
00:45:29,980 --> 00:45:34,270
operational data that you can subscribe

948
00:45:31,630 --> 00:45:36,460
to that you can you know collect and

949
00:45:34,270 --> 00:45:37,900
send the data to so you have here

950
00:45:36,460 --> 00:45:40,150
multiple northbound and solve on

951
00:45:37,900 --> 00:45:41,140
interfaces I am NOT hung up and very

952
00:45:40,150 --> 00:45:43,960
much on that

953
00:45:41,140 --> 00:45:46,509
what framework it is I just want to

954
00:45:43,960 --> 00:45:48,340
define what are those you know data

955
00:45:46,510 --> 00:45:51,460
models what are the schemas for those

956
00:45:48,340 --> 00:45:54,220
interfaces for the what the actual

957
00:45:51,460 --> 00:45:56,920
implementation will it be on that part

958
00:45:54,220 --> 00:45:59,049
what today might be on tomorrow might be

959
00:45:56,920 --> 00:46:02,050
you know protobufs day after tomorrow

960
00:45:59,050 --> 00:46:04,210
might be you know shameless you know

961
00:46:02,050 --> 00:46:07,900
blog Volta bus whatever doesn't matter

962
00:46:04,210 --> 00:46:11,830
and if we can agree on the general

963
00:46:07,900 --> 00:46:14,080
network management architecture that

964
00:46:11,830 --> 00:46:17,460
would help us with the next step forward

965
00:46:14,080 --> 00:46:21,799
and then you're asking me how can I

966
00:46:17,460 --> 00:46:24,740
guarantee that my provisioning was

967
00:46:21,800 --> 00:46:28,010
correctly across the network across the

968
00:46:24,740 --> 00:46:28,790
service topology so I can when I'm

969
00:46:28,010 --> 00:46:30,530
writing software

970
00:46:28,790 --> 00:46:32,660
I can always the unit test and verify

971
00:46:30,530 --> 00:46:34,580
that I have the outcome today when I

972
00:46:32,660 --> 00:46:36,560
want to write unit tests the operational

973
00:46:34,580 --> 00:46:38,630
model and the provisional model are

974
00:46:36,560 --> 00:46:40,940
different and have to do transformation

975
00:46:38,630 --> 00:46:42,440
with the data and making sure it was

976
00:46:40,940 --> 00:46:44,350
this really what I meant

977
00:46:42,440 --> 00:46:46,910
does this you know operational model

978
00:46:44,350 --> 00:46:48,860
really translates correctly into my

979
00:46:46,910 --> 00:46:50,359
provisioning model and vice versa so

980
00:46:48,860 --> 00:46:52,220
this is one of the problems that we have

981
00:46:50,360 --> 00:46:54,620
today when we are doing that if you can

982
00:46:52,220 --> 00:46:56,509
remove some of those abstractions in

983
00:46:54,620 --> 00:47:00,200
between then you can start doing unit

984
00:46:56,510 --> 00:47:03,740
testing and making sure through others

985
00:47:00,200 --> 00:47:06,109
you can then decide what do it does it

986
00:47:03,740 --> 00:47:08,479
have to be an end function or it has to

987
00:47:06,110 --> 00:47:10,520
be an end function or how will you know

988
00:47:08,480 --> 00:47:11,990
combined of each of those unit tested

989
00:47:10,520 --> 00:47:14,300
you're they're going across the network

990
00:47:11,990 --> 00:47:15,979
what would be the final outcome this is

991
00:47:14,300 --> 00:47:18,710
what the network operator can decide

992
00:47:15,980 --> 00:47:20,360
based on their own internal policies so

993
00:47:18,710 --> 00:47:21,980
in the synchronize the communication

994
00:47:20,360 --> 00:47:24,200
busier you send the request your

995
00:47:21,980 --> 00:47:26,630
autonomy that come back e-reading effect

996
00:47:24,200 --> 00:47:29,600
few seconds but for us here is the bus

997
00:47:26,630 --> 00:47:31,430
you send something with what you respond

998
00:47:29,600 --> 00:47:33,410
may come back our later

999
00:47:31,430 --> 00:47:34,879
so you either no guarantee you will miss

1000
00:47:33,410 --> 00:47:37,279
so it's bad that's a big difference

1001
00:47:34,880 --> 00:47:40,700
so for telemetry it probably is fine but

1002
00:47:37,280 --> 00:47:42,500
hold on so email please say there I just

1003
00:47:40,700 --> 00:47:44,569
want to make sure they understood so the

1004
00:47:42,500 --> 00:47:46,610
first of all you said you're interested

1005
00:47:44,570 --> 00:47:49,550
in if the data is correct is

1006
00:47:46,610 --> 00:47:51,440
synchronized so it's super busy like you

1007
00:47:49,550 --> 00:47:52,910
can write a right Reggie of software

1008
00:47:51,440 --> 00:47:54,320
right for simple right

1009
00:47:52,910 --> 00:47:56,810
synchronized communication means you

1010
00:47:54,320 --> 00:47:59,150
send the request you respond I'll come

1011
00:47:56,810 --> 00:48:01,279
back within second expected is come back

1012
00:47:59,150 --> 00:48:03,740
with our short time window but we will

1013
00:48:01,280 --> 00:48:06,680
give you utilize the search path which

1014
00:48:03,740 --> 00:48:08,240
is mr. is a pop subscription model this

1015
00:48:06,680 --> 00:48:10,700
means you can be sure it's a

1016
00:48:08,240 --> 00:48:13,189
synchronized you send a request you

1017
00:48:10,700 --> 00:48:14,720
respond we come back hours later so you

1018
00:48:13,190 --> 00:48:19,400
now guard he'll come back within a few

1019
00:48:14,720 --> 00:48:21,770
seconds so these days sometimes to get

1020
00:48:19,400 --> 00:48:24,320
the wire that get the state on the wire

1021
00:48:21,770 --> 00:48:25,940
takes 20 minutes so a few seconds I will

1022
00:48:24,320 --> 00:48:30,830
see that there's a quite a good of

1023
00:48:25,940 --> 00:48:32,480
improvement I mean I if I find this with

1024
00:48:30,830 --> 00:48:35,330
your question is today we have a problem

1025
00:48:32,480 --> 00:48:37,370
that you know different devices take

1026
00:48:35,330 --> 00:48:38,930
times in order to get a note on the on

1027
00:48:37,370 --> 00:48:44,330
the same to get the same provisioning

1028
00:48:38,930 --> 00:48:46,370
information my network state suitable

1029
00:48:44,330 --> 00:48:48,529
for any type of traffic is good for

1030
00:48:46,370 --> 00:48:53,690
telemetrics but now may not be good for

1031
00:48:48,530 --> 00:48:58,400
Prairie then can you try to answer his

1032
00:48:53,690 --> 00:49:00,860
question say for you if I'm chief on

1033
00:48:58,400 --> 00:49:04,460
your from that of all the networks so

1034
00:49:00,860 --> 00:49:06,620
for the scenario you described it's

1035
00:49:04,460 --> 00:49:09,590
pretty much like notification

1036
00:49:06,620 --> 00:49:11,480
it's a other kind of notification not a

1037
00:49:09,590 --> 00:49:15,970
telemetry so for that kind of

1038
00:49:11,480 --> 00:49:18,380
notification other common management

1039
00:49:15,970 --> 00:49:20,720
protocols are they support that nikon

1040
00:49:18,380 --> 00:49:33,950
has notification and there so you can

1041
00:49:20,720 --> 00:49:36,109
get the nod of cleaner that way two

1042
00:49:33,950 --> 00:49:40,370
questions for clarifications the first

1043
00:49:36,110 --> 00:49:43,810
one he songs sliced you have two

1044
00:49:40,370 --> 00:49:47,060
platforms and both of them are marked as

1045
00:49:43,810 --> 00:49:49,370
distributed here so from the service one

1046
00:49:47,060 --> 00:49:52,279
we have multiple instance and and it

1047
00:49:49,370 --> 00:49:54,290
looks like a distributive system but the

1048
00:49:52,280 --> 00:49:56,420
bottom one we call it the device

1049
00:49:54,290 --> 00:49:58,730
management system and it looks like it

1050
00:49:56,420 --> 00:50:02,950
should be centralized reminder explain

1051
00:49:58,730 --> 00:50:07,070
why you think this is distributed system

1052
00:50:02,950 --> 00:50:11,140
devices in general are will be so so and

1053
00:50:07,070 --> 00:50:14,150
then like if I want to create a single

1054
00:50:11,140 --> 00:50:20,629
centralized management platform the

1055
00:50:14,150 --> 00:50:23,720
question is how to scale it and if the

1056
00:50:20,630 --> 00:50:26,420
idea there is that you want to keep up

1057
00:50:23,720 --> 00:50:28,220
certain latency requirements for the

1058
00:50:26,420 --> 00:50:31,670
certain devices that you're abstracting

1059
00:50:28,220 --> 00:50:33,620
in the geographical area you could be

1060
00:50:31,670 --> 00:50:36,410
using today's technology can bull build

1061
00:50:33,620 --> 00:50:39,020
a single device management platform for

1062
00:50:36,410 --> 00:50:40,850
the whole us for the whole North America

1063
00:50:39,020 --> 00:50:42,650
but how much does it make sense because

1064
00:50:40,850 --> 00:50:44,720
of the latency that you will be seeing

1065
00:50:42,650 --> 00:50:46,850
in order to communicate those devices

1066
00:50:44,720 --> 00:50:48,470
collected so if you are doing some

1067
00:50:46,850 --> 00:50:50,779
hierarchical

1068
00:50:48,470 --> 00:50:52,490
management platform assortment platform

1069
00:50:50,779 --> 00:50:55,549
that is distributed you can you know get

1070
00:50:52,490 --> 00:50:58,758
to certain performances that you need in

1071
00:50:55,549 --> 00:51:01,910
order to do the right provisioning okay

1072
00:50:58,759 --> 00:51:04,940
so there can also be multiple platforms

1073
00:51:01,910 --> 00:51:11,740
on the same level and they do the top

1074
00:51:04,940 --> 00:51:11,740
with each other or how they interact I

1075
00:51:13,059 --> 00:51:17,930
mean not the scale on the scalability

1076
00:51:15,799 --> 00:51:20,740
perspective okay it's okay to have

1077
00:51:17,930 --> 00:51:23,450
multiple platforms also same hierarchy

1078
00:51:20,740 --> 00:51:27,848
so there are different schools of

1079
00:51:23,450 --> 00:51:30,379
thought on that and this is a you know a

1080
00:51:27,849 --> 00:51:32,119
so if I would that's an example how

1081
00:51:30,380 --> 00:51:34,039
would you want to do database sharding

1082
00:51:32,119 --> 00:51:36,079
and how they want to implement that

1083
00:51:34,039 --> 00:51:38,390
there is a question how different people

1084
00:51:36,079 --> 00:51:40,640
will do it then different people might

1085
00:51:38,390 --> 00:51:42,379
have different ways of implementing that

1086
00:51:40,640 --> 00:51:49,759
but they can come up to the you know

1087
00:51:42,380 --> 00:51:51,859
same result in this presentation you

1088
00:51:49,759 --> 00:51:55,609
talk about a lot about the network

1089
00:51:51,859 --> 00:51:57,640
service and if I understand the crackly

1090
00:51:55,609 --> 00:51:59,808
low service is something that called

1091
00:51:57,640 --> 00:52:02,420
exists in the service management

1092
00:51:59,809 --> 00:52:06,769
platform and something beyond it for the

1093
00:52:02,420 --> 00:52:09,710
user plain I also notice that in this

1094
00:52:06,769 --> 00:52:12,319
slide and some other previous slides the

1095
00:52:09,710 --> 00:52:15,230
term service is missed in the kind of

1096
00:52:12,319 --> 00:52:17,480
device management platform so are you

1097
00:52:15,230 --> 00:52:22,450
implying are you implying that the

1098
00:52:17,480 --> 00:52:27,309
service say the management platform is

1099
00:52:22,450 --> 00:52:30,140
is not aware of this network service or

1100
00:52:27,309 --> 00:52:32,359
so the device management platform and

1101
00:52:30,140 --> 00:52:33,950
the service platforms are different and

1102
00:52:32,359 --> 00:52:38,089
I was talking to you more about network

1103
00:52:33,950 --> 00:52:41,240
management than specific services I just

1104
00:52:38,089 --> 00:52:44,750
see it as build ups on one on top of the

1105
00:52:41,240 --> 00:52:47,598
other because the network operator for

1106
00:52:44,750 --> 00:52:51,950
them services are revenue generating and

1107
00:52:47,599 --> 00:52:54,529
the control plane the physical layer is

1108
00:52:51,950 --> 00:52:56,799
a cost center so they would be focused

1109
00:52:54,529 --> 00:53:00,109
mainly on services how they can

1110
00:52:56,799 --> 00:53:01,430
provision the services faster with more

1111
00:53:00,109 --> 00:53:03,470
ease it

1112
00:53:01,430 --> 00:53:05,808
or to satisfy the customer demands in

1113
00:53:03,470 --> 00:53:08,390
making sure that the underlying

1114
00:53:05,809 --> 00:53:14,859
operational infrastructure is being

1115
00:53:08,390 --> 00:53:18,558
managed most efficiently API here we

1116
00:53:14,859 --> 00:53:23,720
basically focus more on the resource

1117
00:53:18,559 --> 00:53:26,390
rather than the service right it's its

1118
00:53:23,720 --> 00:53:32,750
capabilities and resources they are very

1119
00:53:26,390 --> 00:53:34,970
tightly coupled together and so just the

1120
00:53:32,750 --> 00:53:36,680
last two questioners and we're closing

1121
00:53:34,970 --> 00:53:38,020
the line here and try to wrap it up in

1122
00:53:36,680 --> 00:53:41,118
about five minutes

1123
00:53:38,020 --> 00:53:43,460
Stephanie from Orange I have a very very

1124
00:53:41,119 --> 00:53:45,410
open question and I don't have any

1125
00:53:43,460 --> 00:53:49,089
strong opinion about it

1126
00:53:45,410 --> 00:53:51,200
let's focus in 10 or 20 years okay

1127
00:53:49,089 --> 00:53:53,480
abstraction are really something which

1128
00:53:51,200 --> 00:53:55,359
is required especially from provisioning

1129
00:53:53,480 --> 00:53:58,460
because it will speed up how we are

1130
00:53:55,359 --> 00:54:00,619
creating services and so on but now if

1131
00:53:58,460 --> 00:54:04,190
we are focusing on really network

1132
00:54:00,619 --> 00:54:07,670
operations don't you think that at least

1133
00:54:04,190 --> 00:54:11,089
on the operator side people may lose

1134
00:54:07,670 --> 00:54:13,579
some skills and will not understand

1135
00:54:11,089 --> 00:54:16,940
anymore how things are really working if

1136
00:54:13,579 --> 00:54:19,250
they are only manipulating abstraction I

1137
00:54:16,940 --> 00:54:21,920
can go back through the same way their

1138
00:54:19,250 --> 00:54:23,109
computer science are we losing you know

1139
00:54:21,920 --> 00:54:25,250
that people are only learning

1140
00:54:23,109 --> 00:54:27,380
higher-level languages there will be

1141
00:54:25,250 --> 00:54:29,480
people who will want to understand the

1142
00:54:27,380 --> 00:54:31,069
system throughout that would like to

1143
00:54:29,480 --> 00:54:34,180
understand how packet pipeline is

1144
00:54:31,069 --> 00:54:36,980
working but I don't see that within a

1145
00:54:34,180 --> 00:54:38,328
large enterprise like yours you will

1146
00:54:36,980 --> 00:54:40,400
have five thousand people that are

1147
00:54:38,329 --> 00:54:42,230
really interested in knowing how packet

1148
00:54:40,400 --> 00:54:44,359
pipeline you know creation is working

1149
00:54:42,230 --> 00:54:45,920
you might be interested you might really

1150
00:54:44,359 --> 00:54:47,420
want to dig that understand that there

1151
00:54:45,920 --> 00:54:49,250
will be people who really would like to

1152
00:54:47,420 --> 00:54:52,160
know that and they will dig into it they

1153
00:54:49,250 --> 00:54:54,290
will be able to go through those but in

1154
00:54:52,160 --> 00:54:57,170
order sometimes to understand how things

1155
00:54:54,290 --> 00:54:58,670
are working I go back to the days when I

1156
00:54:57,170 --> 00:55:00,710
went to school and you know I had the

1157
00:54:58,670 --> 00:55:02,000
you know like a piggy board and in order

1158
00:55:00,710 --> 00:55:03,589
to do certain functions and the

1159
00:55:02,000 --> 00:55:06,670
programming I had to shortcut them in

1160
00:55:03,589 --> 00:55:10,130
order to get there and to understand how

1161
00:55:06,670 --> 00:55:12,470
high-level concepts are was a pretty

1162
00:55:10,130 --> 00:55:14,150
of journey and sometimes saying oh this

1163
00:55:12,470 --> 00:55:15,410
and some of the new concepts you see the

1164
00:55:14,150 --> 00:55:17,210
abstractions then they may go down

1165
00:55:15,410 --> 00:55:19,308
understanding it and you're learning

1166
00:55:17,210 --> 00:55:21,650
some use up so it there is something to

1167
00:55:19,309 --> 00:55:24,890
be said for both yeah because I'm still

1168
00:55:21,650 --> 00:55:28,130
not concerned or worried better some

1169
00:55:24,890 --> 00:55:30,348
question about yeah 20 years if for

1170
00:55:28,130 --> 00:55:33,289
example I have a packet which is taking

1171
00:55:30,349 --> 00:55:36,849
one cue you know one specific chip of my

1172
00:55:33,289 --> 00:55:43,640
box which still I be able to know it

1173
00:55:36,849 --> 00:55:53,869
yeah well this is a good beer above

1174
00:55:43,640 --> 00:55:55,339
discussion cisco say i just want to

1175
00:55:53,869 --> 00:55:57,650
comment on this is some discussion early

1176
00:55:55,339 --> 00:55:59,690
on about secrets versus a secrets

1177
00:55:57,650 --> 00:56:02,150
probing models for doing configuration

1178
00:55:59,690 --> 00:56:03,769
i'm a big fan of doing this in an

1179
00:56:02,150 --> 00:56:05,930
asynchronous way where you push the

1180
00:56:03,769 --> 00:56:07,758
configuration down and you assume that

1181
00:56:05,930 --> 00:56:10,788
the device will take some amount of time

1182
00:56:07,759 --> 00:56:12,319
to apply that configuration and not only

1183
00:56:10,789 --> 00:56:14,539
that but if the configuration set is

1184
00:56:12,319 --> 00:56:16,339
large different parts that configuration

1185
00:56:14,539 --> 00:56:18,259
we applied over a period of time

1186
00:56:16,339 --> 00:56:21,109
so i think there's a there's a lot of

1187
00:56:18,259 --> 00:56:22,730
benefits of being able to monitor and

1188
00:56:21,109 --> 00:56:24,828
get telemetry data backup of what the

1189
00:56:22,730 --> 00:56:26,349
configuration changes are so you can

1190
00:56:24,829 --> 00:56:29,059
actually see what the device is doing

1191
00:56:26,349 --> 00:56:30,950
over that period of time rather than

1192
00:56:29,059 --> 00:56:33,529
getting a snapshot after twenty minutes

1193
00:56:30,950 --> 00:56:34,788
is that now it's all done and in that in

1194
00:56:33,529 --> 00:56:37,099
that window you don't really know what

1195
00:56:34,789 --> 00:56:38,690
it's doing so that's one benefit of

1196
00:56:37,099 --> 00:56:41,329
doing this in a serious way another one

1197
00:56:38,690 --> 00:56:44,809
is if you want to be modifying your

1198
00:56:41,329 --> 00:56:46,519
devices a relatively high frequency you

1199
00:56:44,809 --> 00:56:48,980
don't want to be blocking and waiting

1200
00:56:46,519 --> 00:56:50,390
for each device to reply back before you

1201
00:56:48,980 --> 00:56:52,039
move on to the next one on certain

1202
00:56:50,390 --> 00:56:56,538
things you have to do that there are

1203
00:56:52,039 --> 00:56:59,240
certain provisioning actions that

1204
00:56:56,539 --> 00:57:00,920
require you to do that yes agree but I

1205
00:56:59,240 --> 00:57:02,029
wonder whether those provision actions

1206
00:57:00,920 --> 00:57:04,579
that should be controlled by the

1207
00:57:02,029 --> 00:57:11,630
controller or as the sequencing and not

1208
00:57:04,579 --> 00:57:14,820
the devices themselves yeah thank you

1209
00:57:11,630 --> 00:57:18,330
Halla document dealing with us pretty

1210
00:57:14,820 --> 00:57:21,090
much in daily basis I would second you

1211
00:57:18,330 --> 00:57:23,430
have to be a synchronous networking if

1212
00:57:21,090 --> 00:57:27,020
distributed system you don't want to

1213
00:57:23,430 --> 00:57:29,790
deal with slurry there's slow writers

1214
00:57:27,020 --> 00:57:31,080
you have to do this we cannot go into

1215
00:57:29,790 --> 00:57:35,120
synchronous month with thousands of

1216
00:57:31,080 --> 00:57:40,830
devices you'll be looking forever so

1217
00:57:35,120 --> 00:57:45,680
it's personal comment so next up is

1218
00:57:40,830 --> 00:57:45,680
Oscar Gonzalez did years

1219
00:58:08,960 --> 00:58:17,130
do we need okay can you hear me now yes

1220
00:58:13,610 --> 00:58:19,730
you can do you okay okay I think I I

1221
00:58:17,130 --> 00:58:23,840
immediately I just needed to press the

1222
00:58:19,730 --> 00:58:27,660
blue button the blue button okay so

1223
00:58:23,840 --> 00:58:30,690
thank you very much guys it's a pity not

1224
00:58:27,660 --> 00:58:33,779
to be with you today but fortunately we

1225
00:58:30,690 --> 00:58:38,910
have these remote facilities to to

1226
00:58:33,780 --> 00:58:43,160
present so I think this or the idea

1227
00:58:38,910 --> 00:58:47,430
today is to present you the layer 3 VPN

1228
00:58:43,160 --> 00:58:49,100
network model that will have lessened

1229
00:58:47,430 --> 00:58:54,330
this admitted together with some other

1230
00:58:49,100 --> 00:58:56,790
operators and there was a request in the

1231
00:58:54,330 --> 00:58:59,700
middle is to present it in the routine

1232
00:58:56,790 --> 00:59:04,680
working group especially a wide we need

1233
00:58:59,700 --> 00:59:06,240
a new model and implications with the

1234
00:59:04,680 --> 00:59:09,029
rest of modern-day architectural

1235
00:59:06,240 --> 00:59:14,310
implications so please if you um move

1236
00:59:09,030 --> 00:59:18,930
one more slide okay so we'll I'll go

1237
00:59:14,310 --> 00:59:22,590
from Kratos do we need a net model for

1238
00:59:18,930 --> 00:59:24,470
billing service so we will see how to

1239
00:59:22,590 --> 00:59:29,010
use it in the different architectures

1240
00:59:24,470 --> 00:59:32,250
that we have seen and what is is in in

1241
00:59:29,010 --> 00:59:34,110
the in current approaches how are we

1242
00:59:32,250 --> 00:59:39,270
doing this and which are the open issues

1243
00:59:34,110 --> 00:59:43,140
please go to the next slide okay so

1244
00:59:39,270 --> 00:59:46,440
first of all why do with network for the

1245
00:59:43,140 --> 00:59:50,640
VPN so we have already a layer three a

1246
00:59:46,440 --> 00:59:57,030
service model the one that is defined in

1247
00:59:50,640 --> 00:59:59,250
RFC 899 there this model is very nice

1248
00:59:57,030 --> 01:00:03,060
and describe the service from the

1249
00:59:59,250 --> 01:00:05,370
customer perspective and it can be seen

1250
01:00:03,060 --> 01:00:07,860
the communication between the customer

1251
01:00:05,370 --> 01:00:11,509
and the network operator so we think

1252
01:00:07,860 --> 01:00:15,960
this model is good for that a

1253
01:00:11,510 --> 01:00:19,170
communication so this does not enter a

1254
01:00:15,960 --> 01:00:19,589
discussion of the parameterization of

1255
01:00:19,170 --> 01:00:21,180
the net

1256
01:00:19,589 --> 01:00:23,519
the resources that you need to

1257
01:00:21,180 --> 01:00:27,469
orchestrate in the in the network and

1258
01:00:23,519 --> 01:00:31,019
also it does not enter in to how the

1259
01:00:27,469 --> 01:00:35,239
service is mapped inside of Peters

1260
01:00:31,019 --> 01:00:43,890
Network okay so please go go ahead

1261
01:00:35,239 --> 01:00:51,660
Nexus light please okay can you move one

1262
01:00:43,890 --> 01:00:55,729
slide okay so so what would be the the

1263
01:00:51,660 --> 01:01:01,670
architecture so we have taken the

1264
01:00:55,729 --> 01:01:05,700
pictures from the RFC and map their

1265
01:01:01,670 --> 01:01:07,640
different models so in a deadener

1266
01:01:05,700 --> 01:01:11,609
architecture what we'll have is that the

1267
01:01:07,640 --> 01:01:17,009
customer that is the user of the service

1268
01:01:11,609 --> 01:01:19,469
they can be is a l3 same model to

1269
01:01:17,009 --> 01:01:23,219
communicate with the service

1270
01:01:19,469 --> 01:01:26,880
orchestration layer in the operator okay

1271
01:01:23,219 --> 01:01:30,180
so that will have a working gun young

1272
01:01:26,880 --> 01:01:31,829
model for that and as we said this model

1273
01:01:30,180 --> 01:01:34,618
should not carry me anything about the

1274
01:01:31,829 --> 01:01:39,599
network resources even internal routing

1275
01:01:34,619 --> 01:01:43,079
details he's just his part of the of the

1276
01:01:39,599 --> 01:01:45,839
movie okay so then we have the what we

1277
01:01:43,079 --> 01:01:50,940
call the service the network model so

1278
01:01:45,839 --> 01:01:53,609
this describes the service as perceived

1279
01:01:50,940 --> 01:01:57,210
by the network and he saying that a

1280
01:01:53,609 --> 01:01:59,069
business the input to automated tools so

1281
01:01:57,210 --> 01:02:02,579
you can do the provisioning you can do

1282
01:01:59,069 --> 01:02:07,619
the assurance so some model to be used

1283
01:02:02,579 --> 01:02:10,099
by the operators okay so this work came

1284
01:02:07,619 --> 01:02:14,430
as input so when we started to do our

1285
01:02:10,099 --> 01:02:18,299
automation in telefónica and in other

1286
01:02:14,430 --> 01:02:19,589
service providers and then we started

1287
01:02:18,299 --> 01:02:21,390
looking at the models and try to

1288
01:02:19,589 --> 01:02:25,469
implement the models when we discover

1289
01:02:21,390 --> 01:02:29,038
that the current existing models were

1290
01:02:25,469 --> 01:02:32,519
not enough or were not died at the end

1291
01:02:29,039 --> 01:02:33,150
that what we needed

1292
01:02:32,519 --> 01:02:36,538
okay

1293
01:02:33,150 --> 01:02:38,970
so this model he cares about topological

1294
01:02:36,539 --> 01:02:42,119
details for someone understands about a

1295
01:02:38,970 --> 01:02:45,328
piece and also is able to understand

1296
01:02:42,119 --> 01:02:47,730
about a network source for example the

1297
01:02:45,329 --> 01:02:52,200
allocation of artists and artists that

1298
01:02:47,730 --> 01:02:55,200
they do sometimes precise they also you

1299
01:02:52,200 --> 01:02:59,189
need to give them as input when you want

1300
01:02:55,200 --> 01:03:02,930
to create a service especially when you

1301
01:02:59,190 --> 01:03:07,220
need to go through multiple domains that

1302
01:03:02,930 --> 01:03:10,470
preserve some of these parameters across

1303
01:03:07,220 --> 01:03:14,189
different segments then you need to

1304
01:03:10,470 --> 01:03:16,049
include them in the network model but

1305
01:03:14,190 --> 01:03:17,670
those days you don't need them for the

1306
01:03:16,049 --> 01:03:25,440
customer the customer can't forget about

1307
01:03:17,670 --> 01:03:27,809
them also a model but it is aimed at

1308
01:03:25,440 --> 01:03:29,460
input to automation tools

1309
01:03:27,809 --> 01:03:32,099
it does not detail how the service is

1310
01:03:29,460 --> 01:03:35,539
transported and also does not detail the

1311
01:03:32,099 --> 01:03:43,079
node configuration that is the role of

1312
01:03:35,539 --> 01:03:45,980
the automated layer to again translate

1313
01:03:43,079 --> 01:03:48,750
this this model into device

1314
01:03:45,980 --> 01:03:51,589
configuration so here also we are

1315
01:03:48,750 --> 01:03:56,369
assuming that the routine is already

1316
01:03:51,589 --> 01:03:58,109
configured so you don't need to do it in

1317
01:03:56,369 --> 01:04:01,349
advance without entering that in the in

1318
01:03:58,109 --> 01:04:03,029
the model so also later this

1319
01:04:01,349 --> 01:04:05,250
orchestration layer will take care of

1320
01:04:03,029 --> 01:04:07,680
how to present a service if it's needed

1321
01:04:05,250 --> 01:04:10,410
to set up new Gillespie's who to

1322
01:04:07,680 --> 01:04:13,460
transport it ok he will take care of

1323
01:04:10,410 --> 01:04:16,879
that occasion next slide please

1324
01:04:13,460 --> 01:04:20,279
so also we can try to map the

1325
01:04:16,880 --> 01:04:24,990
dispatchers in the ICT and architecture

1326
01:04:20,279 --> 01:04:28,529
so here the this model in conjunction

1327
01:04:24,990 --> 01:04:32,069
with other other models will be used a

1328
01:04:28,529 --> 01:04:36,380
in the multi domain service controller

1329
01:04:32,069 --> 01:04:41,180
part or between the MDI parent and MDC a

1330
01:04:36,380 --> 01:04:47,230
child ok so we think there is where the

1331
01:04:41,180 --> 01:04:50,810
model the model will will apply ok and

1332
01:04:47,230 --> 01:04:53,390
but not in the device constellation part

1333
01:04:50,810 --> 01:04:57,980
okay so we live l3 SM between customer

1334
01:04:53,390 --> 01:05:01,129
homonym Yesi and internal energy NC on

1335
01:04:57,980 --> 01:05:06,290
between parent and child so please you

1336
01:05:01,130 --> 01:05:09,650
go to next next slide okay so what is

1337
01:05:06,290 --> 01:05:12,500
missing in the in current service model

1338
01:05:09,650 --> 01:05:15,620
is the reason while creating the the

1339
01:05:12,500 --> 01:05:18,830
network model so there are some Easton

1340
01:05:15,620 --> 01:05:20,180
areas where the the service model from

1341
01:05:18,830 --> 01:05:22,279
the customer perspective is not

1342
01:05:20,180 --> 01:05:26,950
sufficient for the plot of the service

1343
01:05:22,280 --> 01:05:30,380
so we need to identify and to identify

1344
01:05:26,950 --> 01:05:33,439
the provider rates where we are going to

1345
01:05:30,380 --> 01:05:35,960
deploy the service also we need data

1346
01:05:33,440 --> 01:05:38,960
submitters so I think we think that the

1347
01:05:35,960 --> 01:05:41,720
key are the the bidders that are the

1348
01:05:38,960 --> 01:05:45,100
physical connections to the piece so

1349
01:05:41,720 --> 01:05:53,000
that is the network element and the port

1350
01:05:45,100 --> 01:05:56,990
but correct like so we need the eeriest

1351
01:05:53,000 --> 01:05:59,350
and I think a peon and we need also the

1352
01:05:56,990 --> 01:06:04,819
list of the pillars that are available

1353
01:05:59,350 --> 01:06:07,400
for each side also we need to have cases

1354
01:06:04,820 --> 01:06:11,240
where we need the remote-firing

1355
01:06:07,400 --> 01:06:13,760
configuration for example we have use

1356
01:06:11,240 --> 01:06:17,629
cases in our operation where we have a

1357
01:06:13,760 --> 01:06:21,020
pseudo wire stitching to an l3 VPN also

1358
01:06:17,630 --> 01:06:24,250
a we have cases for multi domain

1359
01:06:21,020 --> 01:06:28,759
resource management so we have to our

1360
01:06:24,250 --> 01:06:33,860
VPN is splitted in several domains also

1361
01:06:28,760 --> 01:06:36,800
we need some configuration a specific

1362
01:06:33,860 --> 01:06:39,730
tool to donoso lastly the equivalent to

1363
01:06:36,800 --> 01:06:43,460
the to the PRF that we need to specify

1364
01:06:39,730 --> 01:06:46,520
from service definition and also to

1365
01:06:43,460 --> 01:06:53,200
cover more routing protocols between C

1366
01:06:46,520 --> 01:06:53,200
and NP okay so next slide please

1367
01:06:56,109 --> 01:07:04,310
okay so I do it so we are doing a

1368
01:07:02,020 --> 01:07:06,259
Protestant approach okay so we try to

1369
01:07:04,310 --> 01:07:08,328
preserve as much as possible the

1370
01:07:06,260 --> 01:07:11,960
structure of the of the service model

1371
01:07:08,329 --> 01:07:16,069
and just to remove what is unnecessary

1372
01:07:11,960 --> 01:07:20,000
for the network perspective everything

1373
01:07:16,069 --> 01:07:24,770
about customer details and locations etc

1374
01:07:20,000 --> 01:07:30,319
from the customer and we can remove them

1375
01:07:24,770 --> 01:07:35,300
and we extend extended to consider more

1376
01:07:30,319 --> 01:07:40,670
the operator perspective so we include

1377
01:07:35,300 --> 01:07:43,339
the concept of a VPN nobles and the

1378
01:07:40,670 --> 01:07:45,650
people willing them to the bidders that

1379
01:07:43,339 --> 01:07:47,779
are the connections to the VPN nodes

1380
01:07:45,650 --> 01:07:50,569
okay so I don't want to enter into the

1381
01:07:47,780 --> 01:07:53,810
details of the other model itself that

1382
01:07:50,569 --> 01:07:56,720
is for you to read and discuss here just

1383
01:07:53,810 --> 01:08:00,170
to present a concept the concept today

1384
01:07:56,720 --> 01:08:02,200
okay so maybe can you go to the next and

1385
01:08:00,170 --> 01:08:05,089
the next slide please

1386
01:08:02,200 --> 01:08:09,770
okay so what are the open issues and I

1387
01:08:05,089 --> 01:08:13,328
think those are the ones that are some

1388
01:08:09,770 --> 01:08:17,448
of them related to the previous talk or

1389
01:08:13,329 --> 01:08:19,600
team so first of all is how to link the

1390
01:08:17,448 --> 01:08:23,568
network solution model with other

1391
01:08:19,600 --> 01:08:25,699
modules so we are assuming that the

1392
01:08:23,569 --> 01:08:27,799
network operation the network automation

1393
01:08:25,698 --> 01:08:30,290
also called some people call it Sdn

1394
01:08:27,799 --> 01:08:32,930
controllers as you want it there will be

1395
01:08:30,290 --> 01:08:35,420
set off a modules available there and

1396
01:08:32,930 --> 01:08:38,210
they need to be linked to each other for

1397
01:08:35,420 --> 01:08:40,190
example topology a first one so we

1398
01:08:38,210 --> 01:08:42,080
assume that the service endpoints or the

1399
01:08:40,189 --> 01:08:43,910
solution or the points from where we

1400
01:08:42,080 --> 01:08:48,198
want to establish services they are part

1401
01:08:43,910 --> 01:08:50,599
of an existing topology okay so to link

1402
01:08:48,198 --> 01:08:53,149
them somehow a for traffic exceeding

1403
01:08:50,600 --> 01:09:00,799
there is already a proposal in in yes to

1404
01:08:53,149 --> 01:09:06,339
be able to map a success and a also the

1405
01:09:00,799 --> 01:09:09,019
LSP analyst at this this is need to be a

1406
01:09:06,339 --> 01:09:11,109
completed and road

1407
01:09:09,020 --> 01:09:15,529
another part is dead there's another

1408
01:09:11,109 --> 01:09:18,500
chance the compulsion to create any

1409
01:09:15,529 --> 01:09:25,029
scenarios that go beyond the single

1410
01:09:18,500 --> 01:09:29,359
operator services so this is only custom

1411
01:09:25,029 --> 01:09:35,120
thing over for example I shouldn't say

1412
01:09:29,359 --> 01:09:37,190
sparrows who is also some of initiatives

1413
01:09:35,120 --> 01:09:40,220
to deal with a hierarchy of controllers

1414
01:09:37,189 --> 01:09:49,339
so in many cases we live in the reality

1415
01:09:40,220 --> 01:09:55,010
that each domain is a domain it will

1416
01:09:49,339 --> 01:09:57,620
have its own control we need to create a

1417
01:09:55,010 --> 01:09:59,800
hierarchy so can we create this model

1418
01:09:57,620 --> 01:10:04,970
genetic enough so it allows this

1419
01:09:59,800 --> 01:10:08,290
hierarchy also we have some as in every

1420
01:10:04,970 --> 01:10:11,600
new design every time we have our own

1421
01:10:08,290 --> 01:10:12,980
model in discussions for example the set

1422
01:10:11,600 --> 01:10:15,050
attachments if you have separate

1423
01:10:12,980 --> 01:10:17,269
container or part of assignment

1424
01:10:15,050 --> 01:10:20,270
velocities are just people young modern

1425
01:10:17,270 --> 01:10:24,350
discussions also for example the use of

1426
01:10:20,270 --> 01:10:28,070
profiles versus creating the resources

1427
01:10:24,350 --> 01:10:31,430
deadly under the EPA no concept so here

1428
01:10:28,070 --> 01:10:34,759
we have our pros and cons of disability

1429
01:10:31,430 --> 01:10:39,530
but you said yes I think mine or a lot

1430
01:10:34,760 --> 01:10:42,170
more I can discuss and not as general so

1431
01:10:39,530 --> 01:10:46,700
for me general discussion that is a need

1432
01:10:42,170 --> 01:10:49,310
or what IDF an especially rooting row

1433
01:10:46,700 --> 01:10:53,780
working group can help is how to link

1434
01:10:49,310 --> 01:10:56,870
different young modems together so that

1435
01:10:53,780 --> 01:11:00,200
they are not separated modules Islands

1436
01:10:56,870 --> 01:11:04,370
because otherwise it is and you have to

1437
01:11:00,200 --> 01:11:10,540
do hugs or tricks to be able to link

1438
01:11:04,370 --> 01:11:10,540
them together ok so you got to just

1439
01:11:48,990 --> 01:12:01,420
operators as well network so thank you

1440
01:11:59,740 --> 01:12:17,650
much and I hope that the remote

1441
01:12:01,420 --> 01:12:21,730
presentation so open to questions I was

1442
01:12:17,650 --> 01:12:26,259
the singer Britain so just question for

1443
01:12:21,730 --> 01:12:28,809
clarification today we have Leah 3sm

1444
01:12:26,260 --> 01:12:32,700
model right as you mentioned that allows

1445
01:12:28,810 --> 01:12:38,440
clients to communicate service to the

1446
01:12:32,700 --> 01:12:41,849
network we have numerous models for the

1447
01:12:38,440 --> 01:12:45,160
network Orchestrator for example to

1448
01:12:41,850 --> 01:12:48,670
discover topologies ok including multi

1449
01:12:45,160 --> 01:12:52,840
domain scenario setting up tunnels we

1450
01:12:48,670 --> 01:12:57,490
are also working on the model that

1451
01:12:52,840 --> 01:13:00,250
allows steering services like layer 3

1452
01:12:57,490 --> 01:13:02,769
services to the tunnels O'Donnell pools

1453
01:13:00,250 --> 01:13:05,830
or even topologies of slices so

1454
01:13:02,770 --> 01:13:11,770
basically it is not really clear for me

1455
01:13:05,830 --> 01:13:14,950
what exactly is missing and those those

1456
01:13:11,770 --> 01:13:18,430
last pieces of work that you have

1457
01:13:14,950 --> 01:13:22,330
mentioned I have a complimentary ok so

1458
01:13:18,430 --> 01:13:24,449
what this year or what these complements

1459
01:13:22,330 --> 01:13:27,030
is the service

1460
01:13:24,449 --> 01:13:30,509
model that currently the service model

1461
01:13:27,030 --> 01:13:35,219
is just created from the perspective of

1462
01:13:30,510 --> 01:13:39,330
the customer so for example the customer

1463
01:13:35,219 --> 01:13:42,270
does not see where the quality to which

1464
01:13:39,330 --> 01:13:44,550
a specific port is it is connected in

1465
01:13:42,270 --> 01:13:47,250
the network he does not care it can go

1466
01:13:44,550 --> 01:13:49,920
through difference which is it it does

1467
01:13:47,250 --> 01:13:54,480
not know to which encapsulation it is

1468
01:13:49,920 --> 01:13:56,610
reaching your network so that you can

1469
01:13:54,480 --> 01:13:59,910
use it as input and the operator can

1470
01:13:56,610 --> 01:14:03,839
decide okay based on this service

1471
01:13:59,910 --> 01:14:06,030
description I am going to put this

1472
01:14:03,840 --> 01:14:10,110
customer in this P and I'm going to put

1473
01:14:06,030 --> 01:14:16,019
it in this particular in port and with

1474
01:14:10,110 --> 01:14:18,690
this particular encapsulation so that is

1475
01:14:16,020 --> 01:14:21,449
not part of the service model because

1476
01:14:18,690 --> 01:14:24,410
that is done from his perspective so

1477
01:14:21,449 --> 01:14:29,339
this is why it complements the the

1478
01:14:24,410 --> 01:14:32,550
service is the current series model so

1479
01:14:29,340 --> 01:14:35,640
it is a description of the series from

1480
01:14:32,550 --> 01:14:38,370
the network perspective okay so this is

1481
01:14:35,640 --> 01:14:41,910
why and the other works that you just

1482
01:14:38,370 --> 01:14:46,019
mentioned the stealing of the traffic

1483
01:14:41,910 --> 01:14:49,500
etcetera they are complimentary to to

1484
01:14:46,020 --> 01:14:53,130
this one okay and the other things that

1485
01:14:49,500 --> 01:14:56,160
are missing they are there Spain also

1486
01:14:53,130 --> 01:14:59,400
they for example the l3 same does not

1487
01:14:56,160 --> 01:15:03,900
have parameters like artists or artists

1488
01:14:59,400 --> 01:15:08,400
that as operators when we create a

1489
01:15:03,900 --> 01:15:12,000
service we give them and today the l3

1490
01:15:08,400 --> 01:15:15,929
same model explicitly says that they do

1491
01:15:12,000 --> 01:15:19,199
not enter into that resource allocation

1492
01:15:15,929 --> 01:15:22,590
so in the network model as operators we

1493
01:15:19,199 --> 01:15:26,009
need to enter into that resource

1494
01:15:22,590 --> 01:15:30,989
allocation business so this is why we

1495
01:15:26,010 --> 01:15:33,739
have to obtain today to the model so but

1496
01:15:30,989 --> 01:15:36,718
what is not expected to get into the

1497
01:15:33,739 --> 01:15:37,780
network resources right yes yes the

1498
01:15:36,719 --> 01:15:40,210
client yes

1499
01:15:37,780 --> 01:15:42,820
but this is this model is not a not

1500
01:15:40,210 --> 01:15:45,490
being used by the by the customer okay

1501
01:15:42,820 --> 01:15:47,259
the customer is fine so the customer is

1502
01:15:45,490 --> 01:15:51,880
perfectly fine from with using their

1503
01:15:47,260 --> 01:15:56,680
three same model okay so this is from

1504
01:15:51,880 --> 01:16:02,010
the service orchestration on a layer or

1505
01:15:56,680 --> 01:16:05,250
the OSS layer within an operator today

1506
01:16:02,010 --> 01:16:10,630
to a network controller so this is the

1507
01:16:05,250 --> 01:16:13,480
particular part of the chain or the tool

1508
01:16:10,630 --> 01:16:15,970
chain in an operator where we do think

1509
01:16:13,480 --> 01:16:21,250
this model is is needed and where we are

1510
01:16:15,970 --> 01:16:23,170
going to implement it so the network

1511
01:16:21,250 --> 01:16:26,230
historico takes as an input

1512
01:16:23,170 --> 01:16:28,870
but our client communicates over a layer

1513
01:16:26,230 --> 01:16:34,000
3 sm model and then it use separate

1514
01:16:28,870 --> 01:16:37,170
models right to discover and basically

1515
01:16:34,000 --> 01:16:40,060
allocate resources and set up services

1516
01:16:37,170 --> 01:16:43,120
ok so we are talking about different

1517
01:16:40,060 --> 01:16:46,120
models which are all in progress right

1518
01:16:43,120 --> 01:16:49,720
some of them in tears some of them in

1519
01:16:46,120 --> 01:16:52,240
the source right so basically from what

1520
01:16:49,720 --> 01:16:54,790
you well what I hear there is something

1521
01:16:52,240 --> 01:16:56,980
missing in terms of client to discover

1522
01:16:54,790 --> 01:16:58,630
how their services map to the access

1523
01:16:56,980 --> 01:17:01,419
points but beyond that I don't

1524
01:16:58,630 --> 01:17:04,290
understand we need to talk on on the

1525
01:17:01,420 --> 01:17:08,260
Beast ok yes please please feel free to

1526
01:17:04,290 --> 01:17:12,280
to comment on the on the list and and we

1527
01:17:08,260 --> 01:17:14,350
are happy to clarify there and and to be

1528
01:17:12,280 --> 01:17:17,200
clear that would be in the up Syria

1529
01:17:14,350 --> 01:17:19,420
working group list yeah so far we are

1530
01:17:17,200 --> 01:17:26,230
discussing there in in ops area working

1531
01:17:19,420 --> 01:17:29,320
group list ok we'll take the last two

1532
01:17:26,230 --> 01:17:31,809
sets of questions yeah this Prakash I

1533
01:17:29,320 --> 01:17:34,870
have question regarding your service

1534
01:17:31,810 --> 01:17:36,670
model is there any dependency on the

1535
01:17:34,870 --> 01:17:39,099
device model because finally the

1536
01:17:36,670 --> 01:17:41,110
services has to be implemented by by the

1537
01:17:39,100 --> 01:17:43,630
device itself so do you see a

1538
01:17:41,110 --> 01:17:46,420
relationship or any dependency on the

1539
01:17:43,630 --> 01:17:50,110
device model or they are totally

1540
01:17:46,420 --> 01:17:51,159
independent so so far is it it is

1541
01:17:50,110 --> 01:17:55,030
independent

1542
01:17:51,159 --> 01:18:00,070
okay for that what or the piece that you

1543
01:17:55,030 --> 01:18:03,909
are talking would be the some circus

1544
01:18:00,070 --> 01:18:07,299
decomposition into device model so far

1545
01:18:03,909 --> 01:18:11,400
it is independent and I think it should

1546
01:18:07,300 --> 01:18:17,230
be independent on how you implement it

1547
01:18:11,400 --> 01:18:19,929
okay so so far independent so the

1548
01:18:17,230 --> 01:18:23,620
assumption is that the service has been

1549
01:18:19,929 --> 01:18:26,230
implemented by some kind of consistent

1550
01:18:23,620 --> 01:18:28,360
technology across the devices a

1551
01:18:26,230 --> 01:18:32,159
different segment of the networks are

1552
01:18:28,360 --> 01:18:38,290
being enough made of the same kind of

1553
01:18:32,159 --> 01:18:40,239
using the same kind of technology or yes

1554
01:18:38,290 --> 01:18:41,889
I am assuming that the that the

1555
01:18:40,239 --> 01:18:47,019
controller of that portion of the

1556
01:18:41,889 --> 01:18:52,210
network is able to provide the service

1557
01:18:47,020 --> 01:18:55,360
based on doing his device configurations

1558
01:18:52,210 --> 01:19:01,389
and this model I don't enter how they

1559
01:18:55,360 --> 01:19:05,250
should do those configurations could you

1560
01:19:01,389 --> 01:19:05,250
please repeat a name for the either bed

1561
01:19:05,280 --> 01:19:14,019
your name thank you

1562
01:19:11,560 --> 01:19:16,900
Bob Wilson Cisco so I just had one

1563
01:19:14,020 --> 01:19:19,810
question on your implementation you say

1564
01:19:16,900 --> 01:19:22,679
that you prune and extend and I was

1565
01:19:19,810 --> 01:19:25,179
wondering about the prune bit

1566
01:19:22,679 --> 01:19:26,580
particularly the cases like hierarchical

1567
01:19:25,179 --> 01:19:29,199
models where you want to have

1568
01:19:26,580 --> 01:19:31,510
hierarchical controllers I was wondering

1569
01:19:29,199 --> 01:19:33,699
what you need to carry some of the

1570
01:19:31,510 --> 01:19:36,130
information that's in the l3 SM top

1571
01:19:33,699 --> 01:19:38,469
model further down the stack and hence

1572
01:19:36,130 --> 01:19:40,420
whether it should be more extend improve

1573
01:19:38,469 --> 01:19:43,810
I don't I don't know either the model so

1574
01:19:40,420 --> 01:19:46,389
they know what's been proved so far let

1575
01:19:43,810 --> 01:19:49,960
me clarify that the we have done extend

1576
01:19:46,389 --> 01:19:54,550
and we have not yet started the prune

1577
01:19:49,960 --> 01:19:59,590
okay so yes when we start the prune it

1578
01:19:54,550 --> 01:20:02,790
will see how much a can we remove from

1579
01:19:59,590 --> 01:20:04,510
the l3 SM or how much do we need to pass

1580
01:20:02,790 --> 01:20:08,260
from from

1581
01:20:04,510 --> 01:20:15,190
threesome I guess all the technical and

1582
01:20:08,260 --> 01:20:19,840
routine CP part will be kept and we will

1583
01:20:15,190 --> 01:20:23,580
just have to remove some of the more

1584
01:20:19,840 --> 01:20:27,250
commercial related information or the

1585
01:20:23,580 --> 01:20:30,210
site related information which is

1586
01:20:27,250 --> 01:20:34,060
relevant for the service but not for the

1587
01:20:30,210 --> 01:20:35,950
for the network okay so this is next

1588
01:20:34,060 --> 01:20:38,890
next next step

1589
01:20:35,950 --> 01:20:41,080
there are also some parameters like a

1590
01:20:38,890 --> 01:20:44,860
grouping that were associated to the

1591
01:20:41,080 --> 01:20:47,110
client and that you use them in the

1592
01:20:44,860 --> 01:20:51,820
service layer or in the service

1593
01:20:47,110 --> 01:20:55,120
orchestration layer to decide for

1594
01:20:51,820 --> 01:20:57,070
example if you if one or two accesses or

1595
01:20:55,120 --> 01:20:59,800
dude took or do you connect them to two

1596
01:20:57,070 --> 01:21:04,090
separate years and so on so once you

1597
01:20:59,800 --> 01:21:09,130
have decide that maybe then they are not

1598
01:21:04,090 --> 01:21:11,110
needed okay so the broom part will be

1599
01:21:09,130 --> 01:21:13,510
next and these are the kind of things

1600
01:21:11,110 --> 01:21:17,380
that we are thinking in in pruning from

1601
01:21:13,510 --> 01:21:19,360
the frontal threesome model okay I think

1602
01:21:17,380 --> 01:21:20,680
that makes sense i but one of the

1603
01:21:19,360 --> 01:21:22,809
questions with the pruning it may be

1604
01:21:20,680 --> 01:21:25,600
your change information with mandatory

1605
01:21:22,810 --> 01:21:27,670
possibly in the top level l3 SM model

1606
01:21:25,600 --> 01:21:29,590
and then make it optional to potentially

1607
01:21:27,670 --> 01:21:33,370
be carried through down to the lower

1608
01:21:29,590 --> 01:21:37,870
level called the other model or never

1609
01:21:33,370 --> 01:21:40,059
okay that might be nice yeah that can be

1610
01:21:37,870 --> 01:21:44,680
an option just keep it keep it optional

1611
01:21:40,060 --> 01:21:53,140
just just think it's if needed and down

1612
01:21:44,680 --> 01:21:55,930
down side can we go

1613
01:21:53,140 --> 01:21:58,750
last very quick comment sure yeah this

1614
01:21:55,930 --> 01:22:00,640
is true from Huawei I feel this work is

1615
01:21:58,750 --> 01:22:02,410
quite important because I are in some

1616
01:22:00,640 --> 01:22:04,690
implementations we were seeing people

1617
01:22:02,410 --> 01:22:07,240
directly converting l3 SM model to

1618
01:22:04,690 --> 01:22:09,129
device model and because that's the only

1619
01:22:07,240 --> 01:22:11,469
new models that existed and not having

1620
01:22:09,130 --> 01:22:14,920
this network model was creating even lot

1621
01:22:11,470 --> 01:22:17,159
of implementation complexity so really

1622
01:22:14,920 --> 01:22:22,350
welcome discussion on this

1623
01:22:17,159 --> 01:22:23,460
thank you Thank You Ana right okay

1624
01:22:22,350 --> 01:22:27,060
thanks a lot

1625
01:22:23,460 --> 01:22:41,190
Oscar that went very well remotely thank

1626
01:22:27,060 --> 01:22:43,920
you so next up is yari arco right good

1627
01:22:41,190 --> 01:22:47,509
morning this is work that I've done

1628
01:22:43,920 --> 01:22:50,790
together with Brian Ted and Steven and

1629
01:22:47,510 --> 01:22:54,030
it isn't necessarily a new thing and

1630
01:22:50,790 --> 01:22:56,310
it's not rocket science but it's we

1631
01:22:54,030 --> 01:22:59,880
think it change in the environment and

1632
01:22:56,310 --> 01:23:01,889
the internet environment that causes us

1633
01:22:59,880 --> 01:23:03,540
to think that this is a topic that

1634
01:23:01,889 --> 01:23:08,420
should get a little bit more attention

1635
01:23:03,540 --> 01:23:08,420
now at the IETF another other places

1636
01:23:09,920 --> 01:23:15,360
there's a couple of drafts and there

1637
01:23:12,090 --> 01:23:17,449
will be a society a few more you can you

1638
01:23:15,360 --> 01:23:19,739
can take a look at these if you like

1639
01:23:17,449 --> 01:23:23,839
it's also be some discussion that the

1640
01:23:19,739 --> 01:23:27,959
recent IAB workshop on deployment

1641
01:23:23,840 --> 01:23:30,270
expectations and versus reality workshop

1642
01:23:27,960 --> 01:23:33,150
happen in Finland at the beginning of

1643
01:23:30,270 --> 01:23:34,650
June and at the this idea we also will

1644
01:23:33,150 --> 01:23:41,280
have a discussion at the security area

1645
01:23:34,650 --> 01:23:45,989
group on Thursday I think and so there's

1646
01:23:41,280 --> 01:23:49,650
this RFC RFC 3550 - that is guidelines

1647
01:23:45,989 --> 01:23:52,709
for writing security consideration

1648
01:23:49,650 --> 01:23:55,799
sections on on RS it's basically all of

1649
01:23:52,710 --> 01:23:57,179
us follow try and figure out what what

1650
01:23:55,800 --> 01:24:00,210
kinds of security things we need to

1651
01:23:57,179 --> 01:24:02,850
consider and describe in in our our seas

1652
01:24:00,210 --> 01:24:08,070
and one of the sections there I think

1653
01:24:02,850 --> 01:24:10,110
section 3 possibly is about the infinite

1654
01:24:08,070 --> 01:24:11,340
threat model and basically tries to

1655
01:24:10,110 --> 01:24:13,769
describe you know this is the

1656
01:24:11,340 --> 01:24:17,909
environment that we should prepare for

1657
01:24:13,770 --> 01:24:21,120
and defend against or defend against the

1658
01:24:17,909 --> 01:24:23,280
bad things in the environment and it

1659
01:24:21,120 --> 01:24:26,370
says first of all that we assume that

1660
01:24:23,280 --> 01:24:30,519
the attacker has complete control of the

1661
01:24:26,370 --> 01:24:35,220
communications channel that you know our

1662
01:24:30,520 --> 01:24:37,690
are communicating in and and that's

1663
01:24:35,220 --> 01:24:40,000
obviously still valid they can be

1664
01:24:37,690 --> 01:24:42,960
attackers in our environment and may be

1665
01:24:40,000 --> 01:24:45,730
making some progress I think recently on

1666
01:24:42,960 --> 01:24:47,500
encrypting more traffic and using more

1667
01:24:45,730 --> 01:24:50,259
encryption and cryptographic mechanisms

1668
01:24:47,500 --> 01:24:53,890
to protect our communications and that's

1669
01:24:50,260 --> 01:24:55,600
great but it also says that we assume

1670
01:24:53,890 --> 01:24:57,490
that the end systems engaging in

1671
01:24:55,600 --> 01:24:59,770
protocol exchange have not themselves

1672
01:24:57,490 --> 01:25:03,160
being compromised so basically assuming

1673
01:24:59,770 --> 01:25:05,890
that well you know outsiders are bad

1674
01:25:03,160 --> 01:25:08,170
inside this are good and and that's the

1675
01:25:05,890 --> 01:25:11,860
assumption that we build protocols for

1676
01:25:08,170 --> 01:25:16,500
and try to describe how they manage in

1677
01:25:11,860 --> 01:25:21,190
that that situation and basically the

1678
01:25:16,500 --> 01:25:24,910
the belief is that changing my screen

1679
01:25:21,190 --> 01:25:27,370
here okay so the we believe that this

1680
01:25:24,910 --> 01:25:30,130
the protecting the communication is

1681
01:25:27,370 --> 01:25:31,809
still very much necessary and we

1682
01:25:30,130 --> 01:25:33,010
probably need to be doing it better than

1683
01:25:31,810 --> 01:25:35,700
we're doing today there's some

1684
01:25:33,010 --> 01:25:39,460
improvements that that are useful there

1685
01:25:35,700 --> 01:25:41,740
but we are sort of doubting this second

1686
01:25:39,460 --> 01:25:45,790
part of this assumption in in this this

1687
01:25:41,740 --> 01:25:51,309
RFC it seems to be basically counter to

1688
01:25:45,790 --> 01:25:54,430
current reality so and there's a couple

1689
01:25:51,310 --> 01:25:57,220
of reasons for that we've as I said made

1690
01:25:54,430 --> 01:25:58,930
some progress in encrypting Internet

1691
01:25:57,220 --> 01:26:01,570
traffic I think at least from some

1692
01:25:58,930 --> 01:26:03,520
networks that I follow we went from say

1693
01:26:01,570 --> 01:26:05,650
20 percent encrypted traffic to 80

1694
01:26:03,520 --> 01:26:09,910
percent and you know headed towards

1695
01:26:05,650 --> 01:26:13,360
hundred so that means that if you were

1696
01:26:09,910 --> 01:26:15,519
you know previously spying on stuff by

1697
01:26:13,360 --> 01:26:18,040
you know attaching a sniffer on the

1698
01:26:15,520 --> 01:26:21,340
network and looking at the packets that

1699
01:26:18,040 --> 01:26:24,400
is no longer possible as easily and if

1700
01:26:21,340 --> 01:26:27,070
you are determined attacker

1701
01:26:24,400 --> 01:26:30,370
you know criminal or governmental or you

1702
01:26:27,070 --> 01:26:33,190
know surveillance or whatnot you will

1703
01:26:30,370 --> 01:26:36,760
think about other options so you look

1704
01:26:33,190 --> 01:26:38,440
elsewhere now and we've seen some of

1705
01:26:36,760 --> 01:26:41,560
this actually there's been government

1706
01:26:38,440 --> 01:26:44,169
surveillance agencies who are today more

1707
01:26:41,560 --> 01:26:47,830
focused on acquiring data from say

1708
01:26:44,170 --> 01:26:50,530
provider than firm looking at you know

1709
01:26:47,830 --> 01:26:52,950
what's going on in the in the wire or

1710
01:26:50,530 --> 01:26:57,759
the wireless domain for that matter

1711
01:26:52,950 --> 01:26:59,200
there was a case of Australian proposal

1712
01:26:57,760 --> 01:27:03,340
for a law and say I think actually came

1713
01:26:59,200 --> 01:27:06,160
to be a law about what they can you know

1714
01:27:03,340 --> 01:27:08,200
try and force various internet entities

1715
01:27:06,160 --> 01:27:12,010
to provide for them and this is sort of

1716
01:27:08,200 --> 01:27:14,559
to the heart of that desire by some some

1717
01:27:12,010 --> 01:27:16,960
surveillance agencies there's also

1718
01:27:14,560 --> 01:27:19,560
surveillance in a commercial sense

1719
01:27:16,960 --> 01:27:22,720
surveillance capitalism estate call it

1720
01:27:19,560 --> 01:27:26,290
and there's new risks for us the users

1721
01:27:22,720 --> 01:27:28,720
because some applications are having you

1722
01:27:26,290 --> 01:27:30,820
know far more data collection than they

1723
01:27:28,720 --> 01:27:32,800
perhaps did in the past so information

1724
01:27:30,820 --> 01:27:36,370
about us or our activities are being

1725
01:27:32,800 --> 01:27:38,890
collected there's a very big database is

1726
01:27:36,370 --> 01:27:43,840
being created perhaps as part of this

1727
01:27:38,890 --> 01:27:46,210
first item here and there's a fairly

1728
01:27:43,840 --> 01:27:49,180
common design pattern for building

1729
01:27:46,210 --> 01:27:51,190
network things where you have you know

1730
01:27:49,180 --> 01:27:54,700
centralized parties that are controlling

1731
01:27:51,190 --> 01:27:56,440
other other entities and or you know

1732
01:27:54,700 --> 01:27:58,420
that that if I want to communicate with

1733
01:27:56,440 --> 01:28:00,759
my friend first I go to the cloud and

1734
01:27:58,420 --> 01:28:03,430
then the cloud communicates back to my

1735
01:28:00,760 --> 01:28:07,480
friend and that that design pattern is

1736
01:28:03,430 --> 01:28:09,700
is almost universal today there's also a

1737
01:28:07,480 --> 01:28:12,400
fundamental issue that the interest of a

1738
01:28:09,700 --> 01:28:14,320
party that you communicate with is not

1739
01:28:12,400 --> 01:28:16,570
aligned with your interests in all cases

1740
01:28:14,320 --> 01:28:18,099
so so you might be you know fully

1741
01:28:16,570 --> 01:28:21,730
encrypted and protected and

1742
01:28:18,100 --> 01:28:23,830
authenticated but you know the the

1743
01:28:21,730 --> 01:28:26,110
entity of the other end of the tunnel

1744
01:28:23,830 --> 01:28:29,590
might might not be having your best

1745
01:28:26,110 --> 01:28:33,580
interests in mind let's say a social

1746
01:28:29,590 --> 01:28:36,510
network or somesuch there's also the

1747
01:28:33,580 --> 01:28:42,070
question like you know when we consider

1748
01:28:36,510 --> 01:28:44,830
compromised notes and things that can

1749
01:28:42,070 --> 01:28:47,620
happen that I network that you thought

1750
01:28:44,830 --> 01:28:51,010
that was not connected to the internet

1751
01:28:47,620 --> 01:28:52,990
or wasn't like interesting from a

1752
01:28:51,010 --> 01:28:54,940
vulnerability or attack perspective

1753
01:28:52,990 --> 01:28:57,938
actually turns out to be attackable a

1754
01:28:54,940 --> 01:29:01,030
little bit more on that later

1755
01:28:57,939 --> 01:29:04,389
so I have some descriptions of this I I

1756
01:29:01,030 --> 01:29:08,320
won't read the poems that my colleagues

1757
01:29:04,389 --> 01:29:13,380
brought about this topic I'll just let

1758
01:29:08,320 --> 01:29:17,610
you read them yourself this person won

1759
01:29:13,380 --> 01:29:31,380
so the depressing worldview kind of

1760
01:29:17,610 --> 01:29:34,299
poetry and there's also you know more

1761
01:29:31,380 --> 01:29:36,780
pros like approach this describing the

1762
01:29:34,300 --> 01:29:39,189
situation so basically we assume that

1763
01:29:36,780 --> 01:29:42,429
applications either on our end or the

1764
01:29:39,189 --> 01:29:44,919
other end may themselves be working for

1765
01:29:42,429 --> 01:29:47,739
adversary or maybe on a network with

1766
01:29:44,919 --> 01:29:50,610
other endpoints hosted through to our

1767
01:29:47,739 --> 01:29:54,938
interests or the applications interests

1768
01:29:50,610 --> 01:30:00,009
and and that's sort of breaking what the

1769
01:29:54,939 --> 01:30:03,969
RFC's said earlier so the question is

1770
01:30:00,010 --> 01:30:07,260
what do we do so the four of us we've

1771
01:30:03,969 --> 01:30:10,090
been thinking about this we've been

1772
01:30:07,260 --> 01:30:12,639
writing some things and and and talking

1773
01:30:10,090 --> 01:30:16,329
about it it's we happen to be on the IAB

1774
01:30:12,639 --> 01:30:18,249
at least for now for us but but it's not

1775
01:30:16,329 --> 01:30:19,808
an IAB thing at the moment it's a

1776
01:30:18,249 --> 01:30:24,219
personal thing that we're we're trying

1777
01:30:19,809 --> 01:30:25,959
to discuss this idea of basically which

1778
01:30:24,219 --> 01:30:29,050
is sort of calling for interest and

1779
01:30:25,959 --> 01:30:32,590
discussion and get some guidance and

1780
01:30:29,050 --> 01:30:34,090
feedback if you think we're crazy or you

1781
01:30:32,590 --> 01:30:36,280
know we should do something else or you

1782
01:30:34,090 --> 01:30:40,719
should just this so that way please tell

1783
01:30:36,280 --> 01:30:42,728
us and you might also say that yeah

1784
01:30:40,719 --> 01:30:44,739
that's all true but you know there's

1785
01:30:42,729 --> 01:30:46,300
nothing that we can do which is built in

1786
01:30:44,739 --> 01:30:51,308
a communication spite it's not our

1787
01:30:46,300 --> 01:30:53,199
problem there's some truth to that but

1788
01:30:51,309 --> 01:30:57,189
there are also some useful things that

1789
01:30:53,199 --> 01:30:58,719
we could do one example is obviously

1790
01:30:57,189 --> 01:31:00,760
data minimization that we should think

1791
01:30:58,719 --> 01:31:04,229
more about that like what we actually

1792
01:31:00,760 --> 01:31:07,119
communicate in our protocols and systems

1793
01:31:04,229 --> 01:31:10,449
we should maybe avoid creating new

1794
01:31:07,119 --> 01:31:11,650
centralized architectures and everybody

1795
01:31:10,449 --> 01:31:13,659
can think of

1796
01:31:11,650 --> 01:31:16,599
some examples maybe some recent examples

1797
01:31:13,659 --> 01:31:20,219
apps from the DNS space for instance

1798
01:31:16,600 --> 01:31:20,219
where that's that's been the case

1799
01:31:20,280 --> 01:31:24,940
there's also other things like protocol

1800
01:31:22,900 --> 01:31:28,449
things or cryptographic things like you

1801
01:31:24,940 --> 01:31:30,849
know trying to keep things as modular

1802
01:31:28,449 --> 01:31:33,428
and separated from each other things as

1803
01:31:30,850 --> 01:31:36,010
possible so perfect forward secrecy is

1804
01:31:33,429 --> 01:31:37,300
one is one such example I've been

1805
01:31:36,010 --> 01:31:39,429
working on one protocol for instance

1806
01:31:37,300 --> 01:31:40,900
where we tried to make it you know PFS

1807
01:31:39,429 --> 01:31:44,140
capable today even though it was

1808
01:31:40,900 --> 01:31:45,879
designed as not such a protocol many

1809
01:31:44,140 --> 01:31:48,370
years ago and and the reason for that is

1810
01:31:45,880 --> 01:31:51,400
that if something leaks or some node

1811
01:31:48,370 --> 01:31:53,290
gets compromised then you don't want to

1812
01:31:51,400 --> 01:31:55,089
lose all the communications in the past

1813
01:31:53,290 --> 01:31:59,980
and in the future but you actually have

1814
01:31:55,090 --> 01:32:02,890
some compartments and another example

1815
01:31:59,980 --> 01:32:05,379
that's not on the slide I've been

1816
01:32:02,890 --> 01:32:08,320
working quite a bit with 5g and it has

1817
01:32:05,380 --> 01:32:11,380
many many really good improvements over

1818
01:32:08,320 --> 01:32:13,739
previous generations of systems and not

1819
01:32:11,380 --> 01:32:15,780
just in speed and latency but also in

1820
01:32:13,739 --> 01:32:18,940
insecurity one of those improvements is

1821
01:32:15,780 --> 01:32:23,349
identity privacy that the identity of

1822
01:32:18,940 --> 01:32:25,719
the end users is not not visible to

1823
01:32:23,350 --> 01:32:27,790
other sites it's pretty secure from from

1824
01:32:25,719 --> 01:32:30,640
that perspective it's not visible to

1825
01:32:27,790 --> 01:32:33,760
others sort of like looking at the radio

1826
01:32:30,640 --> 01:32:35,230
traffic but internally in the networks

1827
01:32:33,760 --> 01:32:37,360
the network's of course still have to

1828
01:32:35,230 --> 01:32:39,669
know you know who this is for you know

1829
01:32:37,360 --> 01:32:41,290
building reasons and other other reasons

1830
01:32:39,670 --> 01:32:45,699
but but if you look at the network

1831
01:32:41,290 --> 01:32:48,400
design the details of that they the real

1832
01:32:45,699 --> 01:32:51,699
identity of often are the real phone

1833
01:32:48,400 --> 01:32:54,190
number of a device is actually revealed

1834
01:32:51,699 --> 01:32:57,580
to a fairly large number of devices in

1835
01:32:54,190 --> 01:33:00,639
the network which you know if we

1836
01:32:57,580 --> 01:33:02,019
redesign things now maybe that would be

1837
01:33:00,640 --> 01:33:04,060
something that we should look at and

1838
01:33:02,020 --> 01:33:05,770
reduce the number of entities that hear

1839
01:33:04,060 --> 01:33:08,380
about this particular piece of

1840
01:33:05,770 --> 01:33:11,199
interesting privacy related information

1841
01:33:08,380 --> 01:33:13,150
just keep it on on a need-to-know basis

1842
01:33:11,199 --> 01:33:17,139
so that that's the kind of example that

1843
01:33:13,150 --> 01:33:21,009
we can do in this space and also when

1844
01:33:17,140 --> 01:33:24,460
you do your security considerations or

1845
01:33:21,010 --> 01:33:25,520
design new architectures or protocols do

1846
01:33:24,460 --> 01:33:27,890
think about the

1847
01:33:25,520 --> 01:33:31,510
abuse cases and not just the use cases

1848
01:33:27,890 --> 01:33:33,650
like what if you know somebody

1849
01:33:31,510 --> 01:33:36,800
compromised this node what would happen

1850
01:33:33,650 --> 01:33:38,570
or what if somebody made this a

1851
01:33:36,800 --> 01:33:40,640
centralized architecture and collected

1852
01:33:38,570 --> 01:33:42,860
the information what would it look like

1853
01:33:40,640 --> 01:33:48,980
and and see if he can actually defend

1854
01:33:42,860 --> 01:33:52,070
against it the RFC with security

1855
01:33:48,980 --> 01:33:55,250
considerations guidelines possibly we

1856
01:33:52,070 --> 01:33:59,059
might update that later or we write some

1857
01:33:55,250 --> 01:34:00,560
some other RFC about this this topic

1858
01:33:59,060 --> 01:34:02,750
we're not there yet we're just

1859
01:34:00,560 --> 01:34:04,850
discussing for now we're probably going

1860
01:34:02,750 --> 01:34:11,390
to create a mailing list and talk about

1861
01:34:04,850 --> 01:34:13,130
this topic yeah I wanted to sort of

1862
01:34:11,390 --> 01:34:15,470
briefly go into like why I'm here and

1863
01:34:13,130 --> 01:34:19,010
what how it might impact network

1864
01:34:15,470 --> 01:34:21,850
operator situations for instance I I did

1865
01:34:19,010 --> 01:34:25,220
want to say and hacked on my slides but

1866
01:34:21,850 --> 01:34:27,410
if you look at my draft there's a bunch

1867
01:34:25,220 --> 01:34:31,490
of guidelines and and it's one sort of

1868
01:34:27,410 --> 01:34:33,320
briefly mentioned few of them so starts

1869
01:34:31,490 --> 01:34:35,000
with considering the first principles in

1870
01:34:33,320 --> 01:34:40,400
in communication or protecting

1871
01:34:35,000 --> 01:34:42,950
communications that like if you perform

1872
01:34:40,400 --> 01:34:45,710
something by something of some node

1873
01:34:42,950 --> 01:34:49,099
instead of going directly from your

1874
01:34:45,710 --> 01:34:51,740
friend from you to your friend then that

1875
01:34:49,100 --> 01:34:54,170
means that if if you want to protect the

1876
01:34:51,740 --> 01:34:56,179
communications against others then maybe

1877
01:34:54,170 --> 01:34:59,300
you should protect them not just hop by

1878
01:34:56,180 --> 01:35:01,670
hop to the node in the middle and and

1879
01:34:59,300 --> 01:35:03,890
then back to your friend but all the way

1880
01:35:01,670 --> 01:35:05,540
so end-to-end protection so this means

1881
01:35:03,890 --> 01:35:08,870
that you have to think about things not

1882
01:35:05,540 --> 01:35:11,420
just in terms of you know we just use

1883
01:35:08,870 --> 01:35:12,620
TLS and in just stick it in and then

1884
01:35:11,420 --> 01:35:14,030
everything can it be five but you

1885
01:35:12,620 --> 01:35:15,170
actually have to think about like what

1886
01:35:14,030 --> 01:35:17,690
are you doing and what are you trying to

1887
01:35:15,170 --> 01:35:19,670
protect from want to minimize

1888
01:35:17,690 --> 01:35:21,530
information pass to others want to

1889
01:35:19,670 --> 01:35:24,410
minimize passing control functions to

1890
01:35:21,530 --> 01:35:28,099
others what we do with all of that in in

1891
01:35:24,410 --> 01:35:32,120
the operator networks want to avoid

1892
01:35:28,100 --> 01:35:34,160
centralized resources I mean or at least

1893
01:35:32,120 --> 01:35:38,320
need to be aware of the risks of

1894
01:35:34,160 --> 01:35:38,320
centralized free resources and controls

1895
01:35:38,729 --> 01:35:49,199
anyway so network operator networks it's

1896
01:35:47,190 --> 01:35:51,360
a so a lot of this work has been

1897
01:35:49,199 --> 01:35:53,369
inspired by sort of like end-user

1898
01:35:51,360 --> 01:35:56,579
internet views that you know how do we

1899
01:35:53,369 --> 01:35:58,499
leak information from individuals to to

1900
01:35:56,579 --> 01:36:00,749
large entities from the other side of

1901
01:35:58,499 --> 01:36:04,849
the world and that's not really the

1902
01:36:00,749 --> 01:36:07,969
problem that we have in with operators

1903
01:36:04,849 --> 01:36:11,239
but they also have large networks and

1904
01:36:07,969 --> 01:36:15,630
their problem is slightly easier because

1905
01:36:11,239 --> 01:36:16,739
you don't necessarily need alignment

1906
01:36:15,630 --> 01:36:20,519
that you have to worry about in a lot of

1907
01:36:16,739 --> 01:36:22,259
other cases so all your things are sort

1908
01:36:20,519 --> 01:36:26,670
of under one control one owner said

1909
01:36:22,260 --> 01:36:29,519
perhaps one network manager but even in

1910
01:36:26,670 --> 01:36:32,909
a closed or you know what network owned

1911
01:36:29,519 --> 01:36:35,999
by one party there's you know a lot of

1912
01:36:32,909 --> 01:36:38,518
potential for for being vulnerable so if

1913
01:36:35,999 --> 01:36:40,070
you think your your nodes are under your

1914
01:36:38,519 --> 01:36:42,539
control you haven't been reading enough

1915
01:36:40,070 --> 01:36:45,719
documentation about attacks on Intel

1916
01:36:42,539 --> 01:36:47,518
CPUs and such so so there's plenty of

1917
01:36:45,719 --> 01:36:51,659
opportunities for nodes to become

1918
01:36:47,519 --> 01:36:55,139
compromised and I think we should assume

1919
01:36:51,659 --> 01:36:57,690
that entities like this can be

1920
01:36:55,139 --> 01:37:00,059
compromised in in all kinds of networks

1921
01:36:57,690 --> 01:37:02,940
and design architectures with that in

1922
01:37:00,059 --> 01:37:06,329
mind doesn't mean that you can't have

1923
01:37:02,940 --> 01:37:08,039
your nice control node in the middle of

1924
01:37:06,329 --> 01:37:10,409
the network but it does me that you

1925
01:37:08,039 --> 01:37:13,650
should understand the implications of

1926
01:37:10,409 --> 01:37:15,449
you know what what happens if this thing

1927
01:37:13,650 --> 01:37:18,089
goes down or if this thing gets

1928
01:37:15,449 --> 01:37:20,159
compromised in some fashion and of

1929
01:37:18,090 --> 01:37:21,420
course that's in the most general sense

1930
01:37:20,159 --> 01:37:25,079
that's probably an unsolvable problem

1931
01:37:21,420 --> 01:37:29,179
plus Byzantine generals or Byzantine

1932
01:37:25,079 --> 01:37:33,150
routers but but I do believe that it

1933
01:37:29,179 --> 01:37:36,749
deserves some further thought so that's

1934
01:37:33,150 --> 01:37:38,969
what I have today and be here to discuss

1935
01:37:36,749 --> 01:37:45,949
or take feedback or you know have people

1936
01:37:38,969 --> 01:37:45,949
join join the thinking team Thanks

1937
01:37:48,600 --> 01:37:51,600
equation

1938
01:38:00,720 --> 01:38:07,030
so he re just to recognize Frank Rock

1939
01:38:04,090 --> 01:38:10,120
nurse I think this is useful despite the

1940
01:38:07,030 --> 01:38:14,380
fact nobody stood up and I think we have

1941
01:38:10,120 --> 01:38:16,809
to get ready for a world where we may

1942
01:38:14,380 --> 01:38:20,110
only want to go and trust devices that

1943
01:38:16,810 --> 01:38:23,890
convey trust along with what they're

1944
01:38:20,110 --> 01:38:26,620
sending so maybe we just mistrust

1945
01:38:23,890 --> 01:38:29,500
everything and then no like we have

1946
01:38:26,620 --> 01:38:33,490
today where we believe everything

1947
01:38:29,500 --> 01:38:36,100
behaves and maybe tomorrow we believe

1948
01:38:33,490 --> 01:38:39,099
that nothing behaves and as it's proven

1949
01:38:36,100 --> 01:38:40,660
that it behaves and I think there's a

1950
01:38:39,100 --> 01:38:43,090
steering that direction so that you're

1951
01:38:40,660 --> 01:38:45,970
reversing the logic of what we believe

1952
01:38:43,090 --> 01:38:48,100
in equipment does today and I think it's

1953
01:38:45,970 --> 01:38:50,770
useful to go and look at that what we

1954
01:38:48,100 --> 01:38:54,790
can do whether we can have information

1955
01:38:50,770 --> 01:38:57,610
conveyed along with the operation that

1956
01:38:54,790 --> 01:39:00,760
this device can be trusted and as such

1957
01:38:57,610 --> 01:39:04,660
and then intrusion and then compromise

1958
01:39:00,760 --> 01:39:07,600
could be slight misbehavior like iqu

1959
01:39:04,660 --> 01:39:10,150
messages a little longer than mine so

1960
01:39:07,600 --> 01:39:13,270
that in a financial transaction you

1961
01:39:10,150 --> 01:39:19,059
loose oh I win right so it's not massive

1962
01:39:13,270 --> 01:39:23,110
necessarily thank you and yes I agree

1963
01:39:19,060 --> 01:39:24,700
and yeah I mean one thing to say is that

1964
01:39:23,110 --> 01:39:27,549
there isn't necessarily a solution for

1965
01:39:24,700 --> 01:39:29,530
all of this but but it's still I think

1966
01:39:27,550 --> 01:39:32,140
important to be aware of this and and

1967
01:39:29,530 --> 01:39:38,380
understand our risks and manage those

1968
01:39:32,140 --> 01:39:49,420
risks anything else are we done they say

1969
01:39:38,380 --> 01:39:52,179
you cannot be paranoid enough so sorry

1970
01:39:49,420 --> 01:39:53,320
Adrian Farrell it's alright Yuri you

1971
01:39:52,179 --> 01:39:58,120
don't have to come back as a man

1972
01:39:53,320 --> 01:39:59,980
targeting Frank I I don't think you can

1973
01:39:58,120 --> 01:40:03,640
approach this because of that last line

1974
01:39:59,980 --> 01:40:06,639
by downtown Reuters are hard you can't

1975
01:40:03,640 --> 01:40:09,790
approach this by saying I won't trust a

1976
01:40:06,640 --> 01:40:13,650
node unless I can prove it works because

1977
01:40:09,790 --> 01:40:17,160
as a sociopathic principal there that

1978
01:40:13,650 --> 01:40:23,349
the node will prove that it's okay until

1979
01:40:17,160 --> 01:40:25,989
such time as you trust it yeah so you

1980
01:40:23,350 --> 01:40:36,820
can't you can't establish that anything

1981
01:40:25,989 --> 01:40:39,599
is trustable thank you everyone and will

1982
01:40:36,820 --> 01:40:39,599
soon double

1983
01:41:57,940 --> 01:42:00,000
you

