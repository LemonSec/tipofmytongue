1
00:01:01,280 --> 00:01:07,920
hey this is TLS we're gonna start now

2
00:01:04,519 --> 00:01:10,920
can you hear me I wondered how the audio

3
00:01:07,920 --> 00:01:15,740
is up here for all week so should I back

4
00:01:10,920 --> 00:01:18,600
off the money all right let's do this

5
00:01:15,740 --> 00:01:23,669
thanks if you're not here for TLS please

6
00:01:18,600 --> 00:01:26,160
leave I'm just learning

7
00:01:23,670 --> 00:01:26,850
here's the note well whatever what's

8
00:01:26,160 --> 00:01:28,530
today Tuesday

9
00:01:26,850 --> 00:01:30,990
it's Tuesday you should have seen this a

10
00:01:28,530 --> 00:01:33,660
little bit basically it's about IPR

11
00:01:30,990 --> 00:01:36,060
rules if you're you know about stuff IPR

12
00:01:33,660 --> 00:01:37,530
or lay the topics were discussing you're

13
00:01:36,060 --> 00:01:40,459
supposed to mention them they're gonna

14
00:01:37,530 --> 00:01:45,119
be recorded that kind of stuff

15
00:01:40,459 --> 00:01:48,119
please read requests need a minute taker

16
00:01:45,119 --> 00:01:53,880
and a jabber scribe we can't proceed

17
00:01:48,119 --> 00:01:54,619
until we get one of them jabber thank

18
00:01:53,880 --> 00:01:58,530
you David

19
00:01:54,619 --> 00:02:00,959
note-taker but we need is the we don't

20
00:01:58,530 --> 00:02:02,340
even play by play taker we just need

21
00:02:00,959 --> 00:02:07,470
people that actually take the action

22
00:02:02,340 --> 00:02:09,750
items and the output there we go rich

23
00:02:07,470 --> 00:02:11,300
thank you very much all right this blue

24
00:02:09,750 --> 00:02:13,500
sheets are going around please on them

25
00:02:11,300 --> 00:02:15,720
we're at the microphone please state

26
00:02:13,500 --> 00:02:17,340
your name for the minutes let's keep it

27
00:02:15,720 --> 00:02:21,810
professional and now let's try to be

28
00:02:17,340 --> 00:02:24,360
succinct all right here's our agenda

29
00:02:21,810 --> 00:02:28,470
time as you may have seen on the list we

30
00:02:24,360 --> 00:02:30,720
instituted a new presentation policy

31
00:02:28,470 --> 00:02:32,550
that we want presentations early please

32
00:02:30,720 --> 00:02:34,140
do that we are gonna do some adjustments

33
00:02:32,550 --> 00:02:38,090
based on that because somebody was super

34
00:02:34,140 --> 00:02:40,339
late so here's our agenda for today

35
00:02:38,090 --> 00:02:41,930
um delegated signing keys made delegated

36
00:02:40,340 --> 00:02:44,420
certificates this is a suggestion to

37
00:02:41,930 --> 00:02:47,030
rename it returning route ability check

38
00:02:44,420 --> 00:02:49,280
for TLS deprecating md5 of Flags

39
00:02:47,030 --> 00:02:51,580
extensions suppressing intermediate

40
00:02:49,280 --> 00:02:53,780
series their mediate certificates and

41
00:02:51,580 --> 00:02:57,739
fee lost one point three impacts on

42
00:02:53,780 --> 00:02:58,700
network based security the difference I

43
00:02:57,739 --> 00:03:01,370
guess I should have noted that the

44
00:02:58,700 --> 00:03:02,480
address between the two lines are

45
00:03:01,370 --> 00:03:04,819
working group drafts and the other

46
00:03:02,480 --> 00:03:08,619
drafts are individual submissions and

47
00:03:04,819 --> 00:03:11,839
that'll be our agenda for Thursday

48
00:03:08,620 --> 00:03:15,049
richer document status we have Greece is

49
00:03:11,840 --> 00:03:18,349
an idiom we have exported authenticators

50
00:03:15,049 --> 00:03:21,349
is going to ready for right up and then

51
00:03:18,349 --> 00:03:23,569
the publication requested of to the

52
00:03:21,349 --> 00:03:25,970
issues and requirements for S&I TLS

53
00:03:23,569 --> 00:03:28,760
certificate compression we hope to have

54
00:03:25,970 --> 00:03:31,010
GTS 1.3 and the details connection ID

55
00:03:28,760 --> 00:03:32,298
and working group last call shortly that

56
00:03:31,010 --> 00:03:34,879
obviously assumes that we can address

57
00:03:32,299 --> 00:03:36,349
those issues like this week so that's

58
00:03:34,879 --> 00:03:38,179
kind of one of our main things that

59
00:03:36,349 --> 00:03:39,230
we're hoping to do um then we have been

60
00:03:38,180 --> 00:03:41,420
progress as they have the rest of the

61
00:03:39,230 --> 00:03:43,970
other drafts the decorating credentials

62
00:03:41,420 --> 00:03:46,608
yes mi for TLS deprecated TLS will put

63
00:03:43,970 --> 00:03:49,910
oh and 1.1 sorry that's in the wrong

64
00:03:46,609 --> 00:03:51,410
slot that is being publication requested

65
00:03:49,910 --> 00:03:54,590
that's already been through working with

66
00:03:51,410 --> 00:03:57,920
last call ticket requests in surplus PSK

67
00:03:54,590 --> 00:03:59,180
and external PST reporters just wanted

68
00:03:57,920 --> 00:04:02,119
to let you guys know since we've lowered

69
00:03:59,180 --> 00:04:03,709
the code bars and basically the des can

70
00:04:02,120 --> 00:04:05,450
assign coup points for many of our

71
00:04:03,709 --> 00:04:07,700
tracks I just wanted to kind of give you

72
00:04:05,450 --> 00:04:09,560
a heads up that they've been busy so

73
00:04:07,700 --> 00:04:11,869
here's a bunch of schemes the ones on

74
00:04:09,560 --> 00:04:13,190
the left are working group ITF working

75
00:04:11,870 --> 00:04:17,209
group assigned drafts that were either

76
00:04:13,190 --> 00:04:19,250
signed as a result of early allocations

77
00:04:17,209 --> 00:04:21,320
so we have a couple there and then we

78
00:04:19,250 --> 00:04:22,550
have a bunch of other ones there may or

79
00:04:21,320 --> 00:04:24,620
may not be publishing RFC's

80
00:04:22,550 --> 00:04:26,330
we don't know just kind of a heads up

81
00:04:24,620 --> 00:04:29,180
one of the things I'm looking at is

82
00:04:26,330 --> 00:04:30,740
trying to get I ana to actually copy the

83
00:04:29,180 --> 00:04:32,330
TLS lists so we'll know when the values

84
00:04:30,740 --> 00:04:34,190
or assign so homeowners will know what

85
00:04:32,330 --> 00:04:35,539
they are so it's just kind of a heads up

86
00:04:34,190 --> 00:04:39,919
because I bet you a lot of you didn't

87
00:04:35,539 --> 00:04:41,750
know about some of these we have a

88
00:04:39,919 --> 00:04:43,940
website Chris did a lot of work on this

89
00:04:41,750 --> 00:04:46,280
it's still up there and people want to

90
00:04:43,940 --> 00:04:49,610
get on there and start hacking away feel

91
00:04:46,280 --> 00:04:52,460
free alright that's it

92
00:04:49,610 --> 00:04:54,800
actually real quickly the super-g is

93
00:04:52,460 --> 00:04:57,669
accurately doing or conducting a pig

94
00:04:54,800 --> 00:05:00,740
selection process to identify some fake

95
00:04:57,669 --> 00:05:02,000
well at least one fake or maybe none I

96
00:05:00,740 --> 00:05:04,849
don't actually don't let the criterias

97
00:05:02,000 --> 00:05:06,500
and they're actively going through that

98
00:05:04,849 --> 00:05:08,300
right now and as you may have seen on

99
00:05:06,500 --> 00:05:11,659
the list they're discussing integration

100
00:05:08,300 --> 00:05:13,789
with TLS 10 and 5 is here to potentially

101
00:05:11,659 --> 00:05:16,159
give us some insight into what the CFR G

102
00:05:13,789 --> 00:05:20,360
is requesting from the TLS working group

103
00:05:16,159 --> 00:05:20,860
so give you before thank you so much

104
00:05:20,360 --> 00:05:25,610
Jeff

105
00:05:20,860 --> 00:05:28,669
safer g63 so actually we are currently

106
00:05:25,610 --> 00:05:31,460
in the process of selecting one or two

107
00:05:28,669 --> 00:05:35,750
or maybe zero eggs as a result of the

108
00:05:31,460 --> 00:05:39,409
selection process and one of most

109
00:05:35,750 --> 00:05:42,199
important questions is integration into

110
00:05:39,409 --> 00:05:44,870
talents and the scenes we have had a lot

111
00:05:42,199 --> 00:05:48,949
of discussions and a lot of abilities

112
00:05:44,870 --> 00:05:52,870
and drafts of integration of OPEC in the

113
00:05:48,949 --> 00:05:55,580
tellers spec to into tellers cetera

114
00:05:52,870 --> 00:06:00,860
we've had a lot of discussions of how to

115
00:05:55,580 --> 00:06:03,859
integrate a any bakes into TLS so we'll

116
00:06:00,860 --> 00:06:07,279
have a call for experts called for

117
00:06:03,860 --> 00:06:09,860
reviews for a number of questions and

118
00:06:07,279 --> 00:06:13,250
one of these questions is integration

119
00:06:09,860 --> 00:06:16,699
into late delays so if you will be safer

120
00:06:13,250 --> 00:06:19,849
G on Thursday you'll hear this call for

121
00:06:16,699 --> 00:06:24,440
experts and if you don't please just

122
00:06:19,849 --> 00:06:27,830
know that we really need as a expert

123
00:06:24,440 --> 00:06:31,580
view from the Illes working group point

124
00:06:27,830 --> 00:06:34,609
of view about each candidate about each

125
00:06:31,580 --> 00:06:39,440
nominated pact because really wants that

126
00:06:34,610 --> 00:06:44,120
if we choose one or two as that will be

127
00:06:39,440 --> 00:06:47,919
really convenient for usage for example

128
00:06:44,120 --> 00:06:47,919
in TLS thank you

129
00:06:53,360 --> 00:06:56,360
No

130
00:06:58,870 --> 00:07:11,050
all right so first up minutes delegating

131
00:07:01,389 --> 00:07:12,840
credentials from Nick okay say I tell

132
00:07:11,050 --> 00:07:16,990
you I'm the next slide so the thing

133
00:07:12,840 --> 00:07:18,099
works great so delegate credentials

134
00:07:16,990 --> 00:07:20,919
we've been working on this for quite a

135
00:07:18,100 --> 00:07:25,060
lot more on draft for there are two

136
00:07:20,919 --> 00:07:27,460
changes in for one very minor adding the

137
00:07:25,060 --> 00:07:29,620
ETLs extension text vienna have not

138
00:07:27,460 --> 00:07:33,120
submitted the code point request yet but

139
00:07:29,620 --> 00:07:36,280
to be to be done and also extending this

140
00:07:33,120 --> 00:07:39,190
delegated credentials functionality to

141
00:07:36,280 --> 00:07:42,729
work with client certificates running

142
00:07:39,190 --> 00:07:44,800
code update we have a site running with

143
00:07:42,729 --> 00:07:48,210
seven-day delegated credential that auto

144
00:07:44,800 --> 00:07:52,150
updates and a certificate with the

145
00:07:48,210 --> 00:07:55,388
appropriate o ID there is a patch or

146
00:07:52,150 --> 00:07:57,580
server side that is has done boring ssl

147
00:07:55,389 --> 00:07:59,860
as well as a patch on the client side in

148
00:07:57,580 --> 00:08:01,630
NSS which is has been integrated into

149
00:07:59,860 --> 00:08:04,570
Firefox which I believe is we on a

150
00:08:01,630 --> 00:08:08,050
preference flag or if not will be very

151
00:08:04,570 --> 00:08:10,270
soon pardon yeah Mon Thompson I can

152
00:08:08,050 --> 00:08:13,150
report on NSS NSS has support for both

153
00:08:10,270 --> 00:08:14,560
client and server on this one

154
00:08:13,150 --> 00:08:20,489
our command-line tool doesn't have

155
00:08:14,560 --> 00:08:24,820
server support just yet to do the the

156
00:08:20,490 --> 00:08:27,700
patch for Firefox for the pref is landed

157
00:08:24,820 --> 00:08:30,669
but not yet in nightly I just updated

158
00:08:27,700 --> 00:08:33,610
nightly and hasn't appeared yet tomorrow

159
00:08:30,669 --> 00:08:35,949
I imagine there's a bunch of sort of

160
00:08:33,610 --> 00:08:38,289
plumbing stuff that we need to do but we

161
00:08:35,950 --> 00:08:43,390
expect to have that one turned on in

162
00:08:38,289 --> 00:08:47,020
nightly soonish probably within a couple

163
00:08:43,390 --> 00:08:48,819
of weeks we are waiting on Jonathan's

164
00:08:47,020 --> 00:08:54,130
analysis before we do anything crazy

165
00:08:48,820 --> 00:08:58,420
like chip in release thanks yep and I've

166
00:08:54,130 --> 00:09:00,070
heard also some rumors from Facebook

167
00:08:58,420 --> 00:09:02,079
that there may be some into some

168
00:09:00,070 --> 00:09:04,529
implementation so maybe someone from

169
00:09:02,080 --> 00:09:08,980
them can comment

170
00:09:04,529 --> 00:09:11,710
Kyle nekritz we have support in

171
00:09:08,980 --> 00:09:13,360
development the fizzle I bury its

172
00:09:11,710 --> 00:09:15,250
I believe we verified Interop was at

173
00:09:13,360 --> 00:09:16,720
least boring as a cell it's not landed

174
00:09:15,250 --> 00:09:20,170
yet but over the coming months it should

175
00:09:16,720 --> 00:09:23,440
be okay so this is the running code

176
00:09:20,170 --> 00:09:25,899
update there are currently four open

177
00:09:23,440 --> 00:09:29,680
issues to discuss here some of these are

178
00:09:25,899 --> 00:09:32,920
just editorial and pretty minor so I'll

179
00:09:29,680 --> 00:09:36,010
go over these cut ties with lurk there's

180
00:09:32,920 --> 00:09:38,620
references to the lurk ID

181
00:09:36,010 --> 00:09:40,959
it may not be canonical to reference an

182
00:09:38,620 --> 00:09:43,510
ID that is not going to be published in

183
00:09:40,959 --> 00:09:48,010
here so there are ways of replacing this

184
00:09:43,510 --> 00:09:52,240
with generic text PSS we are not

185
00:09:48,010 --> 00:09:55,569
explicit about not supporting pkcs1 in

186
00:09:52,240 --> 00:09:57,580
the current draft and I I believe that's

187
00:09:55,570 --> 00:09:58,230
pretty non-controversial to remove this

188
00:09:57,580 --> 00:10:00,580
Martin

189
00:09:58,230 --> 00:10:01,870
yeah non Thompson I support the proposal

190
00:10:00,580 --> 00:10:03,670
that you have here but I think there's

191
00:10:01,870 --> 00:10:05,050
probably a little bit more that needs to

192
00:10:03,670 --> 00:10:08,500
be said here

193
00:10:05,050 --> 00:10:11,709
I recently implemented support from the

194
00:10:08,500 --> 00:10:15,940
PSS spki for the delegated credential

195
00:10:11,709 --> 00:10:17,920
and it was a little tricky so there's a

196
00:10:15,940 --> 00:10:19,360
there's a little bit of fiddling around

197
00:10:17,920 --> 00:10:22,089
that you need to do in order to get

198
00:10:19,360 --> 00:10:23,620
those or working so there's that if

199
00:10:22,089 --> 00:10:26,890
everyone will remember there's two

200
00:10:23,620 --> 00:10:32,220
signature schemes in for every hash

201
00:10:26,890 --> 00:10:34,689
function for RSA there is the PSS

202
00:10:32,220 --> 00:10:39,520
signature scheme that uses the RSA

203
00:10:34,690 --> 00:10:44,140
encryption spki and then the one the

204
00:10:39,520 --> 00:10:47,220
same that uses the PSS spki and there's

205
00:10:44,140 --> 00:10:49,330
not a lot of wide support for the PSS

206
00:10:47,220 --> 00:10:51,220
spk is because we don't see them in

207
00:10:49,330 --> 00:10:55,089
certificates but we may see them in

208
00:10:51,220 --> 00:10:57,640
delegated credentials and so there's a

209
00:10:55,089 --> 00:11:01,180
little bit of tricky stuff to deal with

210
00:10:57,640 --> 00:11:03,100
in this area probably worth doing a

211
00:11:01,180 --> 00:11:07,060
little bit more discussion in the draft

212
00:11:03,100 --> 00:11:10,839
about these ones okay and do you have

213
00:11:07,060 --> 00:11:12,489
any proposed text for this I can help

214
00:11:10,839 --> 00:11:17,110
with the text on this one if you're

215
00:11:12,490 --> 00:11:18,370
gonna put me on the spot yeah okay my

216
00:11:17,110 --> 00:11:21,579
to-do list but it might technically what

217
00:11:18,370 --> 00:11:24,220
we can continue with this offline the

218
00:11:21,579 --> 00:11:25,359
the other piece here is last meeting we

219
00:11:24,220 --> 00:11:27,910
discussed

220
00:11:25,360 --> 00:11:29,320
not going forward with an RFC until

221
00:11:27,910 --> 00:11:31,029
there's some type of forum formal

222
00:11:29,320 --> 00:11:34,300
analysis so this is an outline of a

223
00:11:31,029 --> 00:11:36,760
formal analysis proof that Jonathan

224
00:11:34,300 --> 00:11:39,399
Hoyland has volunteered to do this is

225
00:11:36,760 --> 00:11:41,589
his outline in terms of what we want to

226
00:11:39,399 --> 00:11:44,110
prove is that delegate credentials do

227
00:11:41,589 --> 00:11:47,380
not weaken the current PKI and that they

228
00:11:44,110 --> 00:11:49,750
strengthen the current PKI there is a

229
00:11:47,380 --> 00:11:52,180
set of formal requirements for this to

230
00:11:49,750 --> 00:11:59,500
be secure this is going to be a by hand

231
00:11:52,180 --> 00:12:01,959
proof and this is from the composition

232
00:11:59,500 --> 00:12:03,640
result from cheval and all too defined

233
00:12:01,959 --> 00:12:05,199
set of requirements on PK eyes and

234
00:12:03,640 --> 00:12:08,589
public key protocols that when used

235
00:12:05,200 --> 00:12:11,470
together are secure the proof sketch is

236
00:12:08,589 --> 00:12:18,670
assumed that the current PKI is secure

237
00:12:11,470 --> 00:12:20,050
uh-huh mez dhaba but um in any case

238
00:12:18,670 --> 00:12:21,160
that's the assumption boundary and

239
00:12:20,050 --> 00:12:23,949
that's the assumption boundary we've had

240
00:12:21,160 --> 00:12:25,560
for TLS as well and maybe Jonathan can

241
00:12:23,950 --> 00:12:28,390
comment more because he's got the mic

242
00:12:25,560 --> 00:12:31,660
yeah the the assume the current PKI

243
00:12:28,390 --> 00:12:34,510
secure is not so much that I believe the

244
00:12:31,660 --> 00:12:37,480
current PKI secure it's that I think we

245
00:12:34,510 --> 00:12:40,149
can prove that anything that's broken

246
00:12:37,480 --> 00:12:43,300
about PKI plus delegated potentials is

247
00:12:40,149 --> 00:12:45,399
also broken in the PKI and therefore we

248
00:12:43,300 --> 00:12:48,010
don't have to care about that right so

249
00:12:45,399 --> 00:12:50,230
it's an implication error that arrow in

250
00:12:48,010 --> 00:12:53,370
that if this is broken then the entire

251
00:12:50,230 --> 00:12:58,529
PPI is broken and then several other

252
00:12:53,370 --> 00:13:00,520
points here proving specifically that

253
00:12:58,529 --> 00:13:03,339
this gives us the properties that we

254
00:13:00,520 --> 00:13:06,339
watch essentially yeah the delegates

255
00:13:03,339 --> 00:13:08,820
credentials a secure can be composed of

256
00:13:06,339 --> 00:13:12,990
the PPI and that they therefore can

257
00:13:08,820 --> 00:13:15,100
complete a PKI in northland selves right

258
00:13:12,990 --> 00:13:16,899
so this is this is the other question

259
00:13:15,100 --> 00:13:18,310
someone actually brought something up

260
00:13:16,899 --> 00:13:20,589
earlier this might not be the right name

261
00:13:18,310 --> 00:13:22,660
for it but there's been some fusion

262
00:13:20,589 --> 00:13:25,329
confusion about delegated credentials we

263
00:13:22,660 --> 00:13:28,329
don't this is not really a credential as

264
00:13:25,329 --> 00:13:30,910
much as it is a narrowing of the scope

265
00:13:28,329 --> 00:13:33,279
of time and a swap of the key there's no

266
00:13:30,910 --> 00:13:34,990
additional property is that this imbues

267
00:13:33,279 --> 00:13:37,340
onto the connection it doesn't say

268
00:13:34,990 --> 00:13:38,900
anything about

269
00:13:37,340 --> 00:13:41,120
key usages it doesn't say anything about

270
00:13:38,900 --> 00:13:45,829
the host names or the sands or anything

271
00:13:41,120 --> 00:13:47,240
like this so it may be worth I brought

272
00:13:45,830 --> 00:13:48,650
this idea of changing the name from

273
00:13:47,240 --> 00:13:51,320
delegated credentials to delegated

274
00:13:48,650 --> 00:13:53,990
signing keys and it was reminded that in

275
00:13:51,320 --> 00:13:58,730
potential future versions of TLS there

276
00:13:53,990 --> 00:14:00,350
may be semi static TLS so I haven't had

277
00:13:58,730 --> 00:14:02,480
a chance to change that so maybe the

278
00:14:00,350 --> 00:14:07,010
proposal is delegated authentication

279
00:14:02,480 --> 00:14:09,860
keys and if anyone's violently opposed

280
00:14:07,010 --> 00:14:11,920
to the name I don't think it it really

281
00:14:09,860 --> 00:14:14,480
makes that much of a difference but

282
00:14:11,920 --> 00:14:16,550
credential here is is a confusing word

283
00:14:14,480 --> 00:14:19,730
is loaded and so we might not want to

284
00:14:16,550 --> 00:14:21,410
use this this in this context I guess

285
00:14:19,730 --> 00:14:22,790
the question from the chairs perspective

286
00:14:21,410 --> 00:14:24,050
in trying to move the document forward

287
00:14:22,790 --> 00:14:26,000
is there anybody that's gonna like fall

288
00:14:24,050 --> 00:14:29,529
on the sword if he picks a name that's

289
00:14:26,000 --> 00:14:29,529
different than what's what it is now I

290
00:14:29,890 --> 00:14:34,640
mean obviously knowing that nick is a

291
00:14:32,900 --> 00:14:38,959
reasonable man and he's not just gonna

292
00:14:34,640 --> 00:14:40,520
make up some crazy name okay delegated

293
00:14:38,960 --> 00:14:42,230
authentication keys because that's

294
00:14:40,520 --> 00:14:43,790
really what we're doing is we're

295
00:14:42,230 --> 00:14:50,300
delegating the handshake authentication

296
00:14:43,790 --> 00:14:53,240
key and that's it so with respect to

297
00:14:50,300 --> 00:14:54,949
where the document is it's gone through

298
00:14:53,240 --> 00:14:57,680
several reviews lots of implementation

299
00:14:54,950 --> 00:15:01,550
we are going to get more production

300
00:14:57,680 --> 00:15:03,199
deployment experience very soon as I

301
00:15:01,550 --> 00:15:05,209
mentioned there are servers up there are

302
00:15:03,200 --> 00:15:06,490
clients there's different different

303
00:15:05,210 --> 00:15:08,900
stacks that have interoperability

304
00:15:06,490 --> 00:15:11,000
there's kind of two options here we've

305
00:15:08,900 --> 00:15:14,630
discussed the formal analysis as being

306
00:15:11,000 --> 00:15:17,270
important for the RFC but as these it's

307
00:15:14,630 --> 00:15:18,950
potentially useful for these things to

308
00:15:17,270 --> 00:15:21,140
go in parallel so we could begin the

309
00:15:18,950 --> 00:15:23,660
last call alongside the formal analysis

310
00:15:21,140 --> 00:15:27,199
or we could wait for the formal analysis

311
00:15:23,660 --> 00:15:32,170
to be complete and I'm bringing this two

312
00:15:27,200 --> 00:15:32,170
to the floor to see what people prefer

313
00:15:41,290 --> 00:15:45,010
Eric rola and they don't think it

314
00:15:42,820 --> 00:15:45,880
matters super much which one we do I

315
00:15:45,010 --> 00:15:48,880
guess

316
00:15:45,880 --> 00:15:50,950
my vote would be to do the boss call

317
00:15:48,880 --> 00:15:52,450
concurrently just because then we're

318
00:15:50,950 --> 00:15:54,970
like not burning whatever it is you know

319
00:15:52,450 --> 00:15:56,080
two weeks afterwards everyone else is

320
00:15:54,970 --> 00:15:57,280
complete I think it's a reasonable

321
00:15:56,080 --> 00:16:00,790
assumption the whole analysis will be

322
00:15:57,280 --> 00:16:02,319
like you know we'll come out okay it

323
00:16:00,790 --> 00:16:03,339
doesn't come out okay they're like right

324
00:16:02,320 --> 00:16:06,070
how much for your problems like

325
00:16:03,340 --> 00:16:07,660
everything weekend last call so so I

326
00:16:06,070 --> 00:16:09,490
think I would do currently but I get

327
00:16:07,660 --> 00:16:12,089
also people feel strong in other way it

328
00:16:09,490 --> 00:16:12,090
doesn't really matter

329
00:16:16,119 --> 00:16:21,199
some Cibola anger I think there's not

330
00:16:19,459 --> 00:16:23,420
many changes coming down the pipe seems

331
00:16:21,199 --> 00:16:27,019
like it you issues editorial issues

332
00:16:23,420 --> 00:16:29,509
mostly so I think having last call

333
00:16:27,019 --> 00:16:31,189
forces us to make it such that it's a

334
00:16:29,509 --> 00:16:34,759
pretty stable version where something we

335
00:16:31,189 --> 00:16:36,649
can do with formal analysis and then the

336
00:16:34,759 --> 00:16:40,399
one change is my why I'm violently

337
00:16:36,649 --> 00:16:44,689
anyone and it it helps us slow it by the

338
00:16:40,399 --> 00:16:48,290
code point yeah mom Thompson I'm

339
00:16:44,689 --> 00:16:50,329
reasonably happy with the the bulk of

340
00:16:48,290 --> 00:16:53,719
the document the only hole that I'm

341
00:16:50,329 --> 00:16:57,229
aware of is the formal analysis I would

342
00:16:53,720 --> 00:16:59,869
not want to conclude a last call before

343
00:16:57,230 --> 00:17:01,879
that formal analysis comes in but I

344
00:16:59,869 --> 00:17:04,399
think I'd be okay with I mean running

345
00:17:01,879 --> 00:17:06,140
the phone the working group last call up

346
00:17:04,398 --> 00:17:07,639
until the point when the analysis comes

347
00:17:06,140 --> 00:17:09,169
in and then we can make the decision so

348
00:17:07,640 --> 00:17:10,579
I think the point is that we can start

349
00:17:09,169 --> 00:17:12,049
them at the same time and we will not

350
00:17:10,579 --> 00:17:15,349
progress the document until the formal

351
00:17:12,049 --> 00:17:17,839
analysis absolutely so I guess what I'm

352
00:17:15,349 --> 00:17:19,668
hearing is that the things that you're

353
00:17:17,839 --> 00:17:22,879
proposing now unless anyone has anything

354
00:17:19,669 --> 00:17:24,500
new that they want to add it looks like

355
00:17:22,880 --> 00:17:27,399
we're once we get a new version we can

356
00:17:24,500 --> 00:17:30,830
start that all process

357
00:17:27,398 --> 00:17:32,959
Steven borrow just a cap I mean I think

358
00:17:30,830 --> 00:17:35,029
starting them in parallel is fine but

359
00:17:32,960 --> 00:17:36,350
when the formal analysis comes in you

360
00:17:35,029 --> 00:17:37,820
don't just immediately end the working

361
00:17:36,350 --> 00:17:41,770
group last call before people have had a

362
00:17:37,820 --> 00:17:44,809
chance to read it right yes thank you

363
00:17:41,770 --> 00:17:46,700
Roman is an individual I agree you can

364
00:17:44,809 --> 00:17:49,520
paralyze them and depending on which one

365
00:17:46,700 --> 00:17:51,559
comes first you can you can say you'll

366
00:17:49,520 --> 00:17:52,639
gate until the conclusion like I can

367
00:17:51,559 --> 00:17:54,200
guarantee you that we started working

368
00:17:52,639 --> 00:17:55,729
with a blast call in two weeks that will

369
00:17:54,200 --> 00:17:56,809
probably be done first because I think

370
00:17:55,730 --> 00:18:00,710
it takes a little bit more brain power

371
00:17:56,809 --> 00:18:01,760
than but we can we yeah I became way

372
00:18:00,710 --> 00:18:04,340
that's what I mean we can start it in

373
00:18:01,760 --> 00:18:05,750
wait and then you know give people a

374
00:18:04,340 --> 00:18:08,840
chance to review it before WordPress

375
00:18:05,750 --> 00:18:11,720
employer okay that's it for delegated

376
00:18:08,840 --> 00:18:13,760
credentials any other questions are

377
00:18:11,720 --> 00:18:18,039
there any other open issues that people

378
00:18:13,760 --> 00:18:18,039
know about all right

379
00:18:19,520 --> 00:18:24,440
that's Sybilla anger I just raised an

380
00:18:22,640 --> 00:18:26,270
open issue I just rated an issue which

381
00:18:24,440 --> 00:18:28,190
is currently open

382
00:18:26,270 --> 00:18:30,889
it's about interaction between session

383
00:18:28,190 --> 00:18:32,390
tickets and get it credentials one of

384
00:18:30,890 --> 00:18:35,900
the open questions of that issue raises

385
00:18:32,390 --> 00:18:40,730
is whether if a session ticket is issued

386
00:18:35,900 --> 00:18:42,170
bias by a server and it has a and it

387
00:18:40,730 --> 00:18:44,929
would have served up delegated

388
00:18:42,170 --> 00:18:47,000
credential is any risks to it being

389
00:18:44,929 --> 00:18:49,460
accepted by a server that would not have

390
00:18:47,000 --> 00:18:52,130
been issued as delegate it would not

391
00:18:49,460 --> 00:18:53,390
have served up a delegated credential

392
00:18:52,130 --> 00:18:55,640
that they shared the session ticket

393
00:18:53,390 --> 00:18:57,020
secrets between each other I do not

394
00:18:55,640 --> 00:18:59,510
think that that's an issue but that's

395
00:18:57,020 --> 00:19:01,250
something that I would love for people

396
00:18:59,510 --> 00:19:02,690
to pay attention to and kind of like

397
00:19:01,250 --> 00:19:06,440
think about that in the working group

398
00:19:02,690 --> 00:19:08,960
that doesn't sound like something that

399
00:19:06,440 --> 00:19:13,490
would change the wire format that would

400
00:19:08,960 --> 00:19:15,710
be editorial so Thompson thanks for

401
00:19:13,490 --> 00:19:18,110
pointing that out Capote I think is

402
00:19:15,710 --> 00:19:20,030
probably worth going into some detail

403
00:19:18,110 --> 00:19:24,100
about this one I would caution however

404
00:19:20,030 --> 00:19:27,580
that the way that people do effectively

405
00:19:24,100 --> 00:19:30,770
the the authorization decision or the

406
00:19:27,580 --> 00:19:34,220
indication choices on resumption vary

407
00:19:30,770 --> 00:19:36,910
wildly between implementations and so

408
00:19:34,220 --> 00:19:40,010
the best you can really do here is

409
00:19:36,910 --> 00:19:42,740
advise making sure that people are aware

410
00:19:40,010 --> 00:19:45,050
of the situation and the consequence of

411
00:19:42,740 --> 00:19:46,309
it so then they just be security

412
00:19:45,050 --> 00:19:49,040
considerations text they need to talk

413
00:19:46,309 --> 00:19:51,290
about so one final question for you Nick

414
00:19:49,040 --> 00:19:53,210
um are we looking at like September's

415
00:19:51,290 --> 00:19:54,889
time frame for the next version so we

416
00:19:53,210 --> 00:19:56,270
can that's none of our rate I mean

417
00:19:54,890 --> 00:19:58,850
obviously dependent upon how much review

418
00:19:56,270 --> 00:20:00,500
and comments again yeah we should

419
00:19:58,850 --> 00:20:03,439
definitely have it by then great an

420
00:20:00,500 --> 00:20:07,660
expression incorporating closing all of

421
00:20:03,440 --> 00:20:07,660
these issues wonderful

422
00:20:12,540 --> 00:20:17,840
alright delegating md5 and sha-1 say

423
00:20:24,260 --> 00:20:34,320
hello so the drop is nice and short the

424
00:20:30,750 --> 00:20:37,200
idea is to make the signature algorithms

425
00:20:34,320 --> 00:20:40,250
as extension mandatory for Telos combine

426
00:20:37,200 --> 00:20:43,620
two connections as well as for bid

427
00:20:40,250 --> 00:20:47,120
advertising md5 and sha-1 based

428
00:20:43,620 --> 00:20:50,219
algorithms a bunch of different places

429
00:20:47,120 --> 00:20:53,659
so this was originally proposed as part

430
00:20:50,220 --> 00:20:58,140
of the TLS 1.0 and 1.1 duplication

431
00:20:53,660 --> 00:21:01,200
discussion I think the idea where there

432
00:20:58,140 --> 00:21:04,620
was that tell us one point two with md5

433
00:21:01,200 --> 00:21:09,390
or sha-1 could potentially be less safe

434
00:21:04,620 --> 00:21:11,580
than 1.0 or 1.1 but by the way it seems

435
00:21:09,390 --> 00:21:15,270
like a good time to do this deprecation

436
00:21:11,580 --> 00:21:19,760
work so we collected some data from

437
00:21:15,270 --> 00:21:23,850
cloud lairs network and it seems that

438
00:21:19,760 --> 00:21:26,040
the number of TLS 1.2 connections that I

439
00:21:23,850 --> 00:21:29,429
don't have a signature algorithms

440
00:21:26,040 --> 00:21:34,350
extension or only advertised md5 and

441
00:21:29,430 --> 00:21:36,840
sha-1 algorithms is really small but of

442
00:21:34,350 --> 00:21:38,820
course this is just one data point so if

443
00:21:36,840 --> 00:21:43,320
anyone has any data that they want to

444
00:21:38,820 --> 00:21:46,800
share with us then please do so I guess

445
00:21:43,320 --> 00:21:48,929
that's it in terms of next steps I guess

446
00:21:46,800 --> 00:21:52,379
I wonder if the working group could

447
00:21:48,930 --> 00:21:54,710
consider adoption but if you have any

448
00:21:52,380 --> 00:21:54,710
questions

449
00:21:57,350 --> 00:22:01,730
benkei doc so when you say make

450
00:21:59,960 --> 00:22:03,140
signature augur in this mandatory does

451
00:22:01,730 --> 00:22:06,160
that mean I like Sierra's are gonna

452
00:22:03,140 --> 00:22:09,289
handshake failure if they don't see it

453
00:22:06,160 --> 00:22:11,600
yes so I think the current Act says that

454
00:22:09,289 --> 00:22:13,370
server should close the connector must

455
00:22:11,600 --> 00:22:21,370
close the connection if they don't see

456
00:22:13,370 --> 00:22:23,600
our signature algorithm Adam Langley

457
00:22:21,370 --> 00:22:25,219
measuring the incoming connections to

458
00:22:23,600 --> 00:22:26,600
CloudFlare measures like the client

459
00:22:25,220 --> 00:22:29,659
population which is very very different

460
00:22:26,600 --> 00:22:32,270
from the server population I just want

461
00:22:29,659 --> 00:22:33,890
to let you know that I think as a client

462
00:22:32,270 --> 00:22:35,658
by deprecating it would be way harder

463
00:22:33,890 --> 00:22:39,289
for us so we may be a little bit lagging

464
00:22:35,659 --> 00:22:41,450
on this right I guess it's kind of the

465
00:22:39,289 --> 00:22:43,429
same discussion we had with Ellis 1 0

466
00:22:41,450 --> 00:22:45,140
and 1 1 which is like we should start

467
00:22:43,429 --> 00:22:49,730
telling people that they shouldn't use

468
00:22:45,140 --> 00:22:50,090
this and then maybe they will stop using

469
00:22:49,730 --> 00:22:53,059
it

470
00:22:50,090 --> 00:22:56,449
oh yeah publish the document but with

471
00:22:53,059 --> 00:22:57,970
expectations yes with me but yeah I mean

472
00:22:56,450 --> 00:23:03,770
if you have some data to share it and

473
00:22:57,970 --> 00:23:06,320
would be interesting Honus I assume the

474
00:23:03,770 --> 00:23:08,150
first statement applies only to cipher

475
00:23:06,320 --> 00:23:11,299
suites that use public key crypto so if

476
00:23:08,150 --> 00:23:13,669
I do a few Pritchard secret or let's say

477
00:23:11,299 --> 00:23:17,408
password based authenticated key

478
00:23:13,669 --> 00:23:20,690
exchange then I don't that doesn't apply

479
00:23:17,409 --> 00:23:24,650
the first one I think the dropps says

480
00:23:20,690 --> 00:23:27,650
anything about that because it feels

481
00:23:24,650 --> 00:23:29,169
like wrong to mandate sending signatures

482
00:23:27,650 --> 00:23:35,260
and for ciphers which they don't even

483
00:23:29,169 --> 00:23:37,880
make use of signatures just yeah

484
00:23:35,260 --> 00:23:42,289
potentially I guess we can add some some

485
00:23:37,880 --> 00:23:45,110
text about that and rake and rake up of

486
00:23:42,289 --> 00:23:47,179
Microsoft basically I agree with the

487
00:23:45,110 --> 00:23:49,549
intent of this of this draft I think

488
00:23:47,179 --> 00:23:53,150
it's a good idea to do this I don't

489
00:23:49,549 --> 00:23:54,710
think I can enforce this at this time so

490
00:23:53,150 --> 00:24:00,200
but at some time in the future it will

491
00:23:54,710 --> 00:24:01,580
be a good idea yeah every school on yeah

492
00:24:00,200 --> 00:24:07,669
first of all I want to thank you for not

493
00:24:01,580 --> 00:24:10,040
naming this die die die second I mean I

494
00:24:07,669 --> 00:24:10,940
generally such a good idea on favor of

495
00:24:10,040 --> 00:24:15,230
adoption which is

496
00:24:10,940 --> 00:24:16,610
you're asking in terms of the I'm sure

497
00:24:15,230 --> 00:24:20,780
we can work shop some of the technical

498
00:24:16,610 --> 00:24:22,159
bits later Hannes I think is correct

499
00:24:20,780 --> 00:24:23,870
that obviously should require signature

500
00:24:22,160 --> 00:24:25,220
algorithms if the clients like only

501
00:24:23,870 --> 00:24:26,860
offering PSK several Suites but that's

502
00:24:25,220 --> 00:24:30,020
easy to fix

503
00:24:26,860 --> 00:24:33,350
I think the question of whether or not

504
00:24:30,020 --> 00:24:35,000
to acquire failure upon not receiving

505
00:24:33,350 --> 00:24:36,350
signature rhythms like largely can be

506
00:24:35,000 --> 00:24:37,730
resolved by as you say taking

507
00:24:36,350 --> 00:24:39,649
measurements of what clients offer um

508
00:24:37,730 --> 00:24:43,010
another reasonable alternative would be

509
00:24:39,650 --> 00:24:45,470
to pretend the client sent sha-256 and

510
00:24:43,010 --> 00:24:46,879
proceed as is but unless we can find

511
00:24:45,470 --> 00:24:48,380
evidence the clients like that exists

512
00:24:46,880 --> 00:24:50,420
that we should just go ahead and require

513
00:24:48,380 --> 00:24:52,220
it I'm sorry we should require in any

514
00:24:50,420 --> 00:24:53,840
case but the question whether you are to

515
00:24:52,220 --> 00:24:55,370
abort depends on whether there are a lot

516
00:24:53,840 --> 00:24:57,679
of clients we take a shot to certificate

517
00:24:55,370 --> 00:25:00,159
but somehow don't sense intervals so I

518
00:24:57,680 --> 00:25:02,240
think this the requirement for signature

519
00:25:00,160 --> 00:25:03,350
algorithms comes from the fact that

520
00:25:02,240 --> 00:25:06,410
right now

521
00:25:03,350 --> 00:25:09,530
no signature algorithms means shall one

522
00:25:06,410 --> 00:25:12,860
no I think her I guess I'd heard tell

523
00:25:09,530 --> 00:25:14,360
that some some some servers just sent

524
00:25:12,860 --> 00:25:17,389
shot to be situated anyway no matter

525
00:25:14,360 --> 00:25:20,090
what they got in the extension um and if

526
00:25:17,390 --> 00:25:21,350
that's not true or um then that's not

527
00:25:20,090 --> 00:25:22,879
true then we don't have to worry about

528
00:25:21,350 --> 00:25:24,590
it but if it is true and then we find

529
00:25:22,880 --> 00:25:26,690
the significant population that doesn't

530
00:25:24,590 --> 00:25:28,070
send it but that's two handshakes to

531
00:25:26,690 --> 00:25:29,390
work then we should like be like well

532
00:25:28,070 --> 00:25:30,830
those clients are busted but but we

533
00:25:29,390 --> 00:25:32,480
might interoperate with them but anyway

534
00:25:30,830 --> 00:25:35,320
it's like a measurement problem so does

535
00:25:32,480 --> 00:25:38,300
it resolve it a little bit

536
00:25:35,320 --> 00:25:40,159
Adam Langley I think we meant to stop

537
00:25:38,300 --> 00:25:41,720
and pause before sharing actual numbers

538
00:25:40,160 --> 00:25:43,490
too widely but I've looked up the actual

539
00:25:41,720 --> 00:25:45,350
numbers for Chrome and they're not as

540
00:25:43,490 --> 00:25:47,000
bad as I thought although they are quite

541
00:25:45,350 --> 00:25:48,740
a long way away from us just me other

542
00:25:47,000 --> 00:25:53,780
switches off yeah so slightly more

543
00:25:48,740 --> 00:25:57,670
positive all right so we're at that fun

544
00:25:53,780 --> 00:26:00,260
stage how many people read this draft

545
00:25:57,670 --> 00:26:01,700
great how many people saw the mailing

546
00:26:00,260 --> 00:26:05,540
list traffic about the other draft

547
00:26:01,700 --> 00:26:07,400
that's burned this draft okay good so um

548
00:26:05,540 --> 00:26:10,070
I want to go ahead and see if we can

549
00:26:07,400 --> 00:26:12,020
mask for working group adoption there

550
00:26:10,070 --> 00:26:16,730
wasn't everybody in the room but I'd

551
00:26:12,020 --> 00:26:18,800
like to get a sense if you would like to

552
00:26:16,730 --> 00:26:21,460
adopt this as a working group item to

553
00:26:18,800 --> 00:26:21,460
these hum now

554
00:26:22,980 --> 00:26:27,220
if you would not like to adopt this

555
00:26:25,630 --> 00:26:31,120
working this Jack does it working you

556
00:26:27,220 --> 00:26:33,190
bite him please home now all right let's

557
00:26:31,120 --> 00:26:35,340
go ahead thanks we'll verify this on the

558
00:26:33,190 --> 00:26:35,340
list

559
00:26:59,440 --> 00:27:04,159
hi and you have noon this is about a TLS

560
00:27:03,049 --> 00:27:08,029
flag extension

561
00:27:04,159 --> 00:27:11,870
I wrote a zero zero and a zero one draft

562
00:27:08,029 --> 00:27:16,400
during the last ITF and haven't touched

563
00:27:11,870 --> 00:27:20,090
it since so this is about TLS extensions

564
00:27:16,400 --> 00:27:25,070
tillis 1.3 currently has 28 extension

565
00:27:20,090 --> 00:27:27,439
types defined first 1.2 had 46 and there

566
00:27:25,070 --> 00:27:31,039
are many more that are proposed some

567
00:27:27,440 --> 00:27:33,470
extensions carry data but some like of

568
00:27:31,039 --> 00:27:35,149
10 shake off carry no data at all there

569
00:27:33,470 --> 00:27:38,480
only data they carry is that they're

570
00:27:35,149 --> 00:27:40,489
actually there and so and then there are

571
00:27:38,480 --> 00:27:42,049
some that carry data in some context

572
00:27:40,490 --> 00:27:45,380
like in the client in love and then they

573
00:27:42,049 --> 00:27:47,539
don't know that so they actually carry

574
00:27:45,380 --> 00:27:50,299
one bit of memory they are there that

575
00:27:47,539 --> 00:27:53,690
means either I support something or I

576
00:27:50,299 --> 00:27:56,539
want you to do something I'm going to do

577
00:27:53,690 --> 00:28:00,230
something and we can call these flag

578
00:27:56,539 --> 00:28:04,789
extensions so each such extensions takes

579
00:28:00,230 --> 00:28:06,409
four bytes or 32 bits of data that's 2

580
00:28:04,789 --> 00:28:08,990
bytes for the type 2 bytes for the

581
00:28:06,409 --> 00:28:14,090
length and that makes my image engineer

582
00:28:08,990 --> 00:28:16,220
said so we're proposing to do to create

583
00:28:14,090 --> 00:28:19,189
a single extension for the for these

584
00:28:16,220 --> 00:28:22,100
flags and unfortunately that can only

585
00:28:19,190 --> 00:28:25,250
apply to future flags because you'll

586
00:28:22,100 --> 00:28:27,860
never get the compatibility working for

587
00:28:25,250 --> 00:28:30,049
the old flag so this extension will

588
00:28:27,860 --> 00:28:32,719
carry a bunch of one bit indications in

589
00:28:30,049 --> 00:28:36,830
a more efficient way the actual format

590
00:28:32,720 --> 00:28:38,809
is to be decided in the future by this

591
00:28:36,830 --> 00:28:42,199
group assuming that we want to do this

592
00:28:38,809 --> 00:28:44,178
so this really short slot is that for

593
00:28:42,200 --> 00:28:47,029
designing if the group wants to do this

594
00:28:44,179 --> 00:28:48,679
or doesn't so of course I couldn't help

595
00:28:47,029 --> 00:28:50,990
myself and I added a few proposed

596
00:28:48,679 --> 00:28:52,630
formats in the following slides but the

597
00:28:50,990 --> 00:28:56,510
big question is do you want to do this

598
00:28:52,630 --> 00:28:59,809
so one proposal is to take 32 bits or

599
00:28:56,510 --> 00:29:02,870
maybe 16 or maybe 64 or 48 or any other

600
00:28:59,809 --> 00:29:04,879
number and make one extension that will

601
00:29:02,870 --> 00:29:07,120
have an extension data that is for its

602
00:29:04,880 --> 00:29:07,120
long

603
00:29:07,400 --> 00:29:11,970
total of eight including the extension

604
00:29:09,870 --> 00:29:14,159
header and this will be present in all

605
00:29:11,970 --> 00:29:17,040
client hello or encrypted extensions

606
00:29:14,160 --> 00:29:20,790
message and up to 32 flies can be

607
00:29:17,040 --> 00:29:23,550
supported and zero bit in this flag

608
00:29:20,790 --> 00:29:25,740
represents that the flag is not set or

609
00:29:23,550 --> 00:29:28,500
not there and the one bit says that it

610
00:29:25,740 --> 00:29:31,020
is if we ever get to the 33rd flag I'll

611
00:29:28,500 --> 00:29:35,070
get a rethink it or do a new extension

612
00:29:31,020 --> 00:29:38,490
or whatever and I'll remind her that TS

613
00:29:35,070 --> 00:29:44,520
1.2 had 46 extensions well not of often

614
00:29:38,490 --> 00:29:47,040
flags but still and the puzzle too is as

615
00:29:44,520 --> 00:29:49,560
many bits as needed 1 extensions flags

616
00:29:47,040 --> 00:29:51,870
are numbered from 0 to as many as we

617
00:29:49,560 --> 00:29:53,510
ever defined and the extension data

618
00:29:51,870 --> 00:29:57,000
field is as long as we need to to

619
00:29:53,510 --> 00:29:59,610
include the last octet that has set flag

620
00:29:57,000 --> 00:30:01,800
so if we're smart about it

621
00:29:59,610 --> 00:30:04,370
the popular Flags are going to be with

622
00:30:01,800 --> 00:30:07,050
lower numbers so that we so that most

623
00:30:04,370 --> 00:30:09,149
handshakes have just short extensions

624
00:30:07,050 --> 00:30:13,050
but of course we can define a lot of

625
00:30:09,150 --> 00:30:14,790
them and then define another one and

626
00:30:13,050 --> 00:30:16,980
said oh everybody's going to use this

627
00:30:14,790 --> 00:30:20,250
because this is needed for post quantum

628
00:30:16,980 --> 00:30:23,640
whatever so maybe we can be smart and

629
00:30:20,250 --> 00:30:26,220
leave a few missing bits at the start so

630
00:30:23,640 --> 00:30:28,770
that if we ever get a popular extension

631
00:30:26,220 --> 00:30:30,630
down the line we can assign it a low

632
00:30:28,770 --> 00:30:34,110
number but I don't want us to talk about

633
00:30:30,630 --> 00:30:36,810
these two slides so going back to this

634
00:30:34,110 --> 00:30:39,270
slide with the big question do we want

635
00:30:36,810 --> 00:30:41,040
to do this it's four bytes per extension

636
00:30:39,270 --> 00:30:45,740
and we have no idea how many extensions

637
00:30:41,040 --> 00:30:45,740
we're going to have but doing wonderful

638
00:30:47,420 --> 00:30:55,710
Martin Thompson yes I have a draft that

639
00:30:51,900 --> 00:30:58,080
I I think we that depends on this one I

640
00:30:55,710 --> 00:30:59,820
don't need to depend on this one if the

641
00:30:58,080 --> 00:31:03,360
bottom group decides not to do this then

642
00:30:59,820 --> 00:31:08,010
I can keep doing the same old thing as

643
00:31:03,360 --> 00:31:10,169
we always have I I know that this has a

644
00:31:08,010 --> 00:31:12,150
bit of a bootstrapping problem it is

645
00:31:10,170 --> 00:31:14,010
always the case that the flags extension

646
00:31:12,150 --> 00:31:16,530
a single flag extension is cheaper than

647
00:31:14,010 --> 00:31:20,640
doing anything like this you need to be

648
00:31:16,530 --> 00:31:23,610
forces actually saving you any space

649
00:31:20,640 --> 00:31:27,930
but I I think this is a reasonable thing

650
00:31:23,610 --> 00:31:29,820
to do one comment to add to that you

651
00:31:27,930 --> 00:31:31,170
mentioned client'll oh and let me put it

652
00:31:29,820 --> 00:31:32,730
extensions

653
00:31:31,170 --> 00:31:38,930
what about certificate request in

654
00:31:32,730 --> 00:31:40,800
certificate right yeah that Eric rajala

655
00:31:38,930 --> 00:31:45,480
vigorously restraining myself from

656
00:31:40,800 --> 00:31:46,830
working on the format right now the yeah

657
00:31:45,480 --> 00:31:48,840
it seems like basically good idea

658
00:31:46,830 --> 00:31:50,610
especially yesterday about how to like

659
00:31:48,840 --> 00:31:51,959
make the TLS wire format smaller and

660
00:31:50,610 --> 00:31:55,560
this clearly would fit into that general

661
00:31:51,960 --> 00:31:57,420
kind of idiom I'm not too worried about

662
00:31:55,560 --> 00:31:59,340
Martin's bigger problem in this I

663
00:31:57,420 --> 00:32:00,690
suggest that we just the future

664
00:31:59,340 --> 00:32:03,659
extensions that are like this is it only

665
00:32:00,690 --> 00:32:05,280
be defined this way and and I mean

666
00:32:03,660 --> 00:32:06,780
honestly like the diversity for whites

667
00:32:05,280 --> 00:32:08,250
and five bytes for the first one is

668
00:32:06,780 --> 00:32:10,230
pretty minimal given like the size of

669
00:32:08,250 --> 00:32:12,750
the handshake at present the nice thing

670
00:32:10,230 --> 00:32:14,790
about CTLs is that because it's a new

671
00:32:12,750 --> 00:32:17,520
wire protocol you can take all the

672
00:32:14,790 --> 00:32:19,770
existing flags and put them in the new

673
00:32:17,520 --> 00:32:21,960
extension that's an excellent point and

674
00:32:19,770 --> 00:32:26,400
actually suggest that maybe they should

675
00:32:21,960 --> 00:32:32,820
do that we have to careful that the

676
00:32:26,400 --> 00:32:35,250
assignment assignments but yes yeah this

677
00:32:32,820 --> 00:32:37,649
is the new pen Gilmore I just it was not

678
00:32:35,250 --> 00:32:42,180
clear to me how this Flags extension

679
00:32:37,650 --> 00:32:44,280
works with existing flag like extensions

680
00:32:42,180 --> 00:32:47,120
are we planning to assign the existing

681
00:32:44,280 --> 00:32:50,280
flag like extensions to one a bit 1 bit

682
00:32:47,120 --> 00:32:52,199
point here a bit point versus good point

683
00:32:50,280 --> 00:32:56,120
I don't know and if we are what do we do

684
00:32:52,200 --> 00:33:00,450
if there's a conflict in what's sent

685
00:32:56,120 --> 00:33:02,399
between the actual extensions and right

686
00:33:00,450 --> 00:33:04,260
so in my opinion we can't ever get rid

687
00:33:02,400 --> 00:33:06,210
of the backward compatibility problem

688
00:33:04,260 --> 00:33:09,510
even though TLS 1.2 B is young so

689
00:33:06,210 --> 00:33:12,990
everything that currently exists has to

690
00:33:09,510 --> 00:33:16,680
stay with a long 4 byte extension unless

691
00:33:12,990 --> 00:33:19,530
its CTLs words a new wire format not in

692
00:33:16,680 --> 00:33:22,950
Thompson I have a solution that might be

693
00:33:19,530 --> 00:33:26,190
less pessimistic than that which is to

694
00:33:22,950 --> 00:33:28,170
say that um yes unfortunately when you

695
00:33:26,190 --> 00:33:29,610
send a client hello you'll have to send

696
00:33:28,170 --> 00:33:33,280
the existing flag extensions as

697
00:33:29,610 --> 00:33:35,139
extensions or use SES V's

698
00:33:33,280 --> 00:33:38,080
it's your preferred mode of signaling

699
00:33:35,140 --> 00:33:41,020
these things that's just unavoidable but

700
00:33:38,080 --> 00:33:42,790
in the presence of this extension in the

701
00:33:41,020 --> 00:33:46,930
client below the server could choose to

702
00:33:42,790 --> 00:33:48,610
send those things in the extensions and

703
00:33:46,930 --> 00:33:52,090
the other messages we're talking about

704
00:33:48,610 --> 00:33:53,830
as well so that does save quite a bit of

705
00:33:52,090 --> 00:33:56,110
space particularly in in one of the more

706
00:33:53,830 --> 00:33:58,360
space constrained messages that we tend

707
00:33:56,110 --> 00:34:01,330
to have alongside certificate we send

708
00:33:58,360 --> 00:34:03,419
encrypted extensions and extensions in

709
00:34:01,330 --> 00:34:07,600
certificate requests potentially and

710
00:34:03,420 --> 00:34:10,240
certificate message a second so this

711
00:34:07,600 --> 00:34:12,219
does have the potential for saving us

712
00:34:10,239 --> 00:34:14,560
quite a bit of space even for those ones

713
00:34:12,219 --> 00:34:16,870
and I would recommend populating the low

714
00:34:14,560 --> 00:34:21,690
bits with in particular the

715
00:34:16,870 --> 00:34:24,400
renegotiation info extension and the

716
00:34:21,690 --> 00:34:27,580
extended Buster secret extension that's

717
00:34:24,400 --> 00:34:30,730
not going to work till s13 anyway along

718
00:34:27,580 --> 00:34:34,330
those lines so that we can written

719
00:34:30,730 --> 00:34:36,010
sequel voice building then Henoch I

720
00:34:34,330 --> 00:34:37,210
would propose we don't need to hammer

721
00:34:36,010 --> 00:34:38,770
out the details and there we don't need

722
00:34:37,210 --> 00:34:40,120
am rather links but I agree that there's

723
00:34:38,770 --> 00:34:45,639
some idea is that pretty promising

724
00:34:40,120 --> 00:34:47,679
opportunity sir Ben Schwartz there's

725
00:34:45,639 --> 00:34:55,529
also quick which hopefully is not

726
00:34:47,679 --> 00:34:58,210
supplied yet so who's read this draft

727
00:34:55,530 --> 00:35:00,370
fair number of people actually um I

728
00:34:58,210 --> 00:35:01,540
think what we're looking for is do we

729
00:35:00,370 --> 00:35:03,850
want to do this and this is a working

730
00:35:01,540 --> 00:35:05,050
with adoption call so you would like to

731
00:35:03,850 --> 00:35:11,950
adopt this draft

732
00:35:05,050 --> 00:35:14,680
please hum now know yo your assumed to

733
00:35:11,950 --> 00:35:19,060
be in the es boat um if you do not wish

734
00:35:14,680 --> 00:35:21,129
to adopt this draft please home now let

735
00:35:19,060 --> 00:35:23,290
the record show that I think there was

736
00:35:21,130 --> 00:35:25,120
maybe one person that hummed so this is

737
00:35:23,290 --> 00:35:27,700
a good starting point for the draft and

738
00:35:25,120 --> 00:35:30,940
we will do we want to ask those people

739
00:35:27,700 --> 00:35:32,740
to send mail to list yes I mean that's

740
00:35:30,940 --> 00:35:34,180
yeah if you want to if you want to

741
00:35:32,740 --> 00:35:36,299
object you objectively tell us why I

742
00:35:34,180 --> 00:35:39,190
know this maybe they know something

743
00:35:36,300 --> 00:35:41,320
that's well if that's the decision then

744
00:35:39,190 --> 00:35:43,660
should they submit something based on

745
00:35:41,320 --> 00:35:45,280
the proposal number two because I have

746
00:35:43,660 --> 00:35:46,870
no idea what I did with

747
00:35:45,280 --> 00:35:54,970
the one I know the zero zero is

748
00:35:46,870 --> 00:35:56,650
different from 0 1 but submit anyone

749
00:35:54,970 --> 00:35:59,109
we're gonna I mean it's a starting point

750
00:35:56,650 --> 00:36:19,930
if you submit the wrong one this working

751
00:35:59,110 --> 00:36:21,400
group will let you know sure Chris is

752
00:36:19,930 --> 00:36:28,169
asking me to try to kick this quick I

753
00:36:21,400 --> 00:36:30,670
only have this slide so this is a flag

754
00:36:28,170 --> 00:36:33,430
we have a draft that promises something

755
00:36:30,670 --> 00:36:36,520
in the order of three times compression

756
00:36:33,430 --> 00:36:39,069
for certificates this one provides

757
00:36:36,520 --> 00:36:42,280
similar benefit with a great deal less

758
00:36:39,070 --> 00:36:44,050
code at least in the TLS stack if you

759
00:36:42,280 --> 00:36:47,290
happen to have intermediates already

760
00:36:44,050 --> 00:36:49,180
available to you you can tell the server

761
00:36:47,290 --> 00:36:54,100
by putting the flag in the client below

762
00:36:49,180 --> 00:36:58,690
and the server can say ok and just send

763
00:36:54,100 --> 00:37:00,400
the end entity certificate I observed

764
00:36:58,690 --> 00:37:06,700
that some servers already do this

765
00:37:00,400 --> 00:37:08,280
without any signaling so it's obviously

766
00:37:06,700 --> 00:37:13,180
something that's compatible in some ways

767
00:37:08,280 --> 00:37:17,740
and this uses the the flag stuff that we

768
00:37:13,180 --> 00:37:20,799
just talked about Victor Victor Mozilla

769
00:37:17,740 --> 00:37:22,959
of Google syl.i this is something we did

770
00:37:20,800 --> 00:37:27,760
to some extent in the original quick

771
00:37:22,960 --> 00:37:29,740
certificate impression oh as in we we

772
00:37:27,760 --> 00:37:31,600
shipped it we shipped the dictionary off

773
00:37:29,740 --> 00:37:33,819
known intermediates and you could

774
00:37:31,600 --> 00:37:38,020
hotlines a dictionary the question I

775
00:37:33,820 --> 00:37:40,060
have is what happens if you receive a

776
00:37:38,020 --> 00:37:42,430
response and you don't have an

777
00:37:40,060 --> 00:37:46,770
intermediary do you pay roundtrip

778
00:37:42,430 --> 00:37:49,600
penalty do hard fail what they do so

779
00:37:46,770 --> 00:37:55,900
there's a longer discussion about that

780
00:37:49,600 --> 00:37:58,060
one that's going on the thinking is not

781
00:37:55,900 --> 00:37:58,970
yet complete on that one if possible but

782
00:37:58,060 --> 00:38:00,380
that

783
00:37:58,970 --> 00:38:02,419
we could have some sort of guarantee

784
00:38:00,380 --> 00:38:05,420
about knowing about intermediates before

785
00:38:02,420 --> 00:38:08,810
they used it's possible that we could

786
00:38:05,420 --> 00:38:11,030
have a definitive guarantee essentially

787
00:38:08,810 --> 00:38:12,859
that that you have all of the the

788
00:38:11,030 --> 00:38:15,109
intermediates and that's a hard fail

789
00:38:12,859 --> 00:38:17,240
scenario if you don't have any strong

790
00:38:15,109 --> 00:38:21,200
guarantee then the fall backs are pretty

791
00:38:17,240 --> 00:38:24,229
ugly and may make me reconsider whether

792
00:38:21,200 --> 00:38:32,210
I want to pursue this at all so I

793
00:38:24,230 --> 00:38:35,780
haven't chased that one down yet Adam

794
00:38:32,210 --> 00:38:38,810
Langley I'm not clear are you suggesting

795
00:38:35,780 --> 00:38:40,339
that clients would learn ie on a second

796
00:38:38,810 --> 00:38:41,960
connection tell the server hey I

797
00:38:40,339 --> 00:38:43,578
probably already got them or is the

798
00:38:41,960 --> 00:38:47,510
client just always going to send this

799
00:38:43,579 --> 00:38:49,609
and and chase the you know the HTTP

800
00:38:47,510 --> 00:38:51,349
links if it needs to so maybe I should

801
00:38:49,609 --> 00:38:54,200
should have given you a bit more context

802
00:38:51,349 --> 00:38:56,119
on what we're doing currently there's an

803
00:38:54,200 --> 00:38:58,910
experiment that we're running in I think

804
00:38:56,119 --> 00:39:01,820
I think I might be built where we send

805
00:38:58,910 --> 00:39:05,480
clients over time every single

806
00:39:01,820 --> 00:39:08,690
intermediate all of them we know about

807
00:39:05,480 --> 00:39:10,970
all of them right but well I mean you

808
00:39:08,690 --> 00:39:13,310
can get everywhere PKI intermediate but

809
00:39:10,970 --> 00:39:15,410
if someone's using vais this was it this

810
00:39:13,310 --> 00:39:17,480
was a discussion I I forget who to

811
00:39:15,410 --> 00:39:20,569
credit with this my apologies for that

812
00:39:17,480 --> 00:39:22,250
person but the there would be a

813
00:39:20,569 --> 00:39:24,650
requirement in this document that's not

814
00:39:22,250 --> 00:39:27,680
there currently to to say that if you

815
00:39:24,650 --> 00:39:31,369
have no expert if you have an

816
00:39:27,680 --> 00:39:32,690
understanding that the that the trust

817
00:39:31,369 --> 00:39:35,599
anchor or the intermediate that you're

818
00:39:32,690 --> 00:39:37,010
using is not in the standard set for the

819
00:39:35,599 --> 00:39:39,859
population that you're sending the

820
00:39:37,010 --> 00:39:44,720
requested so so this is a you're doing

821
00:39:39,859 --> 00:39:46,430
an interception proxy and and you want

822
00:39:44,720 --> 00:39:49,730
to send the whole chain down you have to

823
00:39:46,430 --> 00:39:51,618
ignore this extension so the server will

824
00:39:49,730 --> 00:39:54,260
be expected to know that it has a weird

825
00:39:51,619 --> 00:39:57,589
chain that's basically it yep okay does

826
00:39:54,260 --> 00:40:02,569
Firefox do way I a chasing no no this is

827
00:39:57,589 --> 00:40:04,990
our replacement for that okay as in it

828
00:40:02,569 --> 00:40:08,540
won't be perfectly complete I understand

829
00:40:04,990 --> 00:40:09,799
but that was a an explicit decision on

830
00:40:08,540 --> 00:40:11,509
our part and we can talk about the

831
00:40:09,800 --> 00:40:12,349
policies around AAA chasing and all this

832
00:40:11,510 --> 00:40:14,450
sort of both

833
00:40:12,349 --> 00:40:17,660
things for a long time Marshall but yeah

834
00:40:14,450 --> 00:40:19,999
yeah no problem it is this is a clever

835
00:40:17,660 --> 00:40:21,379
idea certainly gets you better

836
00:40:19,999 --> 00:40:24,680
compression than having people index

837
00:40:21,380 --> 00:40:27,079
event list I think that the real

838
00:40:24,680 --> 00:40:30,288
question is how how good is the actual

839
00:40:27,079 --> 00:40:32,239
synchronization we get lloyd quickly k

840
00:40:30,289 --> 00:40:35,390
on to then I suppose you just an

841
00:40:32,239 --> 00:40:37,670
experiment which is as you say Firefox

842
00:40:35,390 --> 00:40:40,129
already downloads entire and realist in

843
00:40:37,670 --> 00:40:42,380
order to we have UAA chasing therefore

844
00:40:40,130 --> 00:40:45,499
it's quite straightforward to see to

845
00:40:42,380 --> 00:40:47,029
simulate on this experiment merely by

846
00:40:45,499 --> 00:40:48,439
taking every detail every certificate

847
00:40:47,029 --> 00:40:50,809
you get in the Internet you ever get um

848
00:40:48,440 --> 00:40:52,849
and then any construct in the chain and

849
00:40:50,809 --> 00:40:54,380
because heard the chain without putting

850
00:40:52,849 --> 00:40:56,210
without putting in Ernie if it gets you

851
00:40:54,380 --> 00:40:58,670
if that ever and then and then as long

852
00:40:56,210 --> 00:41:00,079
and with appropriate illusion for for

853
00:40:58,670 --> 00:41:02,569
things that don't change lucky I ever at

854
00:41:00,079 --> 00:41:04,489
all or fail and then if the answer is

855
00:41:02,569 --> 00:41:06,079
those two have exactly the same set or

856
00:41:04,489 --> 00:41:07,640
more or less exactly the same successes

857
00:41:06,079 --> 00:41:08,930
then this is a good idea if there's do

858
00:41:07,640 --> 00:41:11,118
not have the same set of assesses then

859
00:41:08,930 --> 00:41:12,828
you have to like do something else like

860
00:41:11,119 --> 00:41:14,749
version your medias that's just like

861
00:41:12,829 --> 00:41:15,950
that so I think like like this is like

862
00:41:14,749 --> 00:41:16,640
actually quite quite easy to turn where

863
00:41:15,950 --> 00:41:19,368
that's gonna work or not

864
00:41:16,640 --> 00:41:20,900
um by like you know doing taking a month

865
00:41:19,369 --> 00:41:22,549
of data or something and then we'll get

866
00:41:20,900 --> 00:41:27,859
some sense of whether is it like did you

867
00:41:22,549 --> 00:41:30,259
even plausible yep thanks good evening

868
00:41:27,859 --> 00:41:33,499
CloudFlare so speaking for a CDN that

869
00:41:30,259 --> 00:41:35,960
adds a lot of certificate chains the

870
00:41:33,499 --> 00:41:41,348
server doesn't necessarily know if the

871
00:41:35,960 --> 00:41:43,160
chain is weird so because you know

872
00:41:41,349 --> 00:41:44,029
customers can upload their own

873
00:41:43,160 --> 00:41:46,368
certificates

874
00:41:44,029 --> 00:41:49,160
I love yeah that's true but I would

875
00:41:46,369 --> 00:41:51,019
expect that you would assume that the

876
00:41:49,160 --> 00:41:57,469
chains are not weird in the general case

877
00:41:51,019 --> 00:41:59,419
II possibly gets you're operating on the

878
00:41:57,469 --> 00:42:02,479
public Internet and I suspect that the

879
00:41:59,420 --> 00:42:03,609
the uses for the the weird changes is

880
00:42:02,479 --> 00:42:08,419
limited

881
00:42:03,609 --> 00:42:10,479
well not necessarily but we do actually

882
00:42:08,420 --> 00:42:13,670
have a lot of custom certificates and

883
00:42:10,479 --> 00:42:16,308
I'm mostly worried about you know all

884
00:42:13,670 --> 00:42:19,279
the weird edge cases where it becomes

885
00:42:16,309 --> 00:42:21,469
hard to debug if something goes wrong

886
00:42:19,279 --> 00:42:25,710
because maybe someone didn't update

887
00:42:21,469 --> 00:42:27,660
their browsers in a while yeah is so

888
00:42:25,710 --> 00:42:29,880
I'm just speculating here but you also

889
00:42:27,660 --> 00:42:32,578
have the ability to have every single

890
00:42:29,880 --> 00:42:34,020
intermediate known to you and you could

891
00:42:32,579 --> 00:42:37,260
determine whether or not those

892
00:42:34,020 --> 00:42:39,599
intermediates were more present right

893
00:42:37,260 --> 00:42:42,839
but you could scope CT in the same way

894
00:42:39,599 --> 00:42:44,670
that we're doing in prisons I mean we

895
00:42:42,839 --> 00:42:47,339
we've had problems in the past with

896
00:42:44,670 --> 00:42:51,180
clients that didn't get the latest list

897
00:42:47,339 --> 00:42:55,619
or whatever and things broke for sure

898
00:42:51,180 --> 00:42:58,078
yep I have a design suggestion since it

899
00:42:55,619 --> 00:43:00,329
sounds like you're shipping a fixed at

900
00:42:58,079 --> 00:43:03,690
and you know what's in so sets

901
00:43:00,329 --> 00:43:06,540
have you considered sending the server

902
00:43:03,690 --> 00:43:12,900
an indication of what exactly a set of

903
00:43:06,540 --> 00:43:16,200
intermediaries you're operating on yes

904
00:43:12,900 --> 00:43:18,990
but I maybe this was hopeful on my part

905
00:43:16,200 --> 00:43:21,450
that we wouldn't have to do that but

906
00:43:18,990 --> 00:43:24,000
certainly we're willing to consider that

907
00:43:21,450 --> 00:43:26,460
if the experiment that echo proposes

908
00:43:24,000 --> 00:43:29,099
doesn't quite work out but the problem

909
00:43:26,460 --> 00:43:30,900
with that is that the server may not be

910
00:43:29,099 --> 00:43:32,970
able to interpret that information in a

911
00:43:30,900 --> 00:43:36,270
meaningful way yeah

912
00:43:32,970 --> 00:43:37,589
Reince levy with Google it seems like my

913
00:43:36,270 --> 00:43:39,450
colleagues have got a number of things

914
00:43:37,589 --> 00:43:42,630
you've mentioned like Firefox has a

915
00:43:39,450 --> 00:43:45,180
complete set based on CT but CT has a

916
00:43:42,630 --> 00:43:47,069
known incomplete set and so I'm just

917
00:43:45,180 --> 00:43:48,450
thinking now imaginating multiple

918
00:43:47,069 --> 00:43:50,190
clients implementing this and thinking

919
00:43:48,450 --> 00:43:52,020
about that ability and interoperability

920
00:43:50,190 --> 00:43:54,180
it seems like you would need something

921
00:43:52,020 --> 00:43:57,230
like that version right we already see

922
00:43:54,180 --> 00:43:59,848
issues with say the trust or selection

923
00:43:57,230 --> 00:44:01,470
I'll share chrome details which is you

924
00:43:59,849 --> 00:44:03,030
know chrome running on a platform like

925
00:44:01,470 --> 00:44:04,680
Windows you have a variety of trust

926
00:44:03,030 --> 00:44:07,500
doors and a client may believe it has a

927
00:44:04,680 --> 00:44:08,879
current version of trust or but it turns

928
00:44:07,500 --> 00:44:10,950
out it's not the case

929
00:44:08,880 --> 00:44:14,549
and the server has no idea of what that

930
00:44:10,950 --> 00:44:16,919
gets so if you're going to propose this

931
00:44:14,549 --> 00:44:18,869
like I'm thinking like let's let's

932
00:44:16,920 --> 00:44:20,460
imagine that Firefox and Chrome were to

933
00:44:18,869 --> 00:44:22,230
implement something like this you would

934
00:44:20,460 --> 00:44:24,030
need those clients who update in

935
00:44:22,230 --> 00:44:25,589
lockstep with discovering new

936
00:44:24,030 --> 00:44:27,750
intermediates and making sure they

937
00:44:25,589 --> 00:44:30,450
propagate because if the server believes

938
00:44:27,750 --> 00:44:32,309
that it sees this 1 or 0 how does it

939
00:44:30,450 --> 00:44:34,589
know dealing with the chrome client that

940
00:44:32,309 --> 00:44:36,690
may have it or not have it or Firefox

941
00:44:34,589 --> 00:44:38,578
client that may have it or not

942
00:44:36,690 --> 00:44:40,470
so the idea of sending some version or

943
00:44:38,579 --> 00:44:42,810
some indicator

944
00:44:40,470 --> 00:44:44,970
seems highly desirable from an

945
00:44:42,810 --> 00:44:46,680
interoperability and it also goes to the

946
00:44:44,970 --> 00:44:49,560
processing mode which is if this is

947
00:44:46,680 --> 00:44:50,430
willing to fail or cause an RTT this is

948
00:44:49,560 --> 00:44:52,350
one of those things that you could

949
00:44:50,430 --> 00:44:53,819
possibly avoid with negotiation at the

950
00:44:52,350 --> 00:44:56,790
cost of introducing a fingerprinting

951
00:44:53,820 --> 00:44:57,450
vector knowledge oh yeah yeah all right

952
00:44:56,790 --> 00:44:58,920
thanks Ron

953
00:44:57,450 --> 00:45:01,529
just to jump in here I got a I got a

954
00:44:58,920 --> 00:45:03,990
clip the line here yeah this is just too

955
00:45:01,530 --> 00:45:05,580
much ponder to discuss I imagine it's

956
00:45:03,990 --> 00:45:07,319
real-world deployments right so at the

957
00:45:05,580 --> 00:45:10,230
end of the day it's super valuable dad's

958
00:45:07,320 --> 00:45:14,520
discussion so right it's yeah so I

959
00:45:10,230 --> 00:45:16,500
should have corrected something we do

960
00:45:14,520 --> 00:45:20,090
not acquire the intermediates I don't

961
00:45:16,500 --> 00:45:22,380
believe from CT that was probably bit

962
00:45:20,090 --> 00:45:24,450
through our group program we require

963
00:45:22,380 --> 00:45:26,210
that all intermediates are disclosed to

964
00:45:24,450 --> 00:45:28,560
us

965
00:45:26,210 --> 00:45:30,300
not technically constrained I think this

966
00:45:28,560 --> 00:45:34,410
is that this is the bit that what the

967
00:45:30,300 --> 00:45:36,180
Brian's wagging his hands about you wait

968
00:45:34,410 --> 00:45:38,220
am I my cutoff should I said no no no no

969
00:45:36,180 --> 00:45:39,990
I'm sorry no more no more no more lots

970
00:45:38,220 --> 00:45:41,819
of chicken oh I was simply going to say

971
00:45:39,990 --> 00:45:43,470
that ie I'm worried about this because

972
00:45:41,820 --> 00:45:46,140
it seems bad for Firefox so I think

973
00:45:43,470 --> 00:45:48,240
we're in the wrong position um let's say

974
00:45:46,140 --> 00:45:50,279
that let's say that this rolls out and

975
00:45:48,240 --> 00:45:51,750
the Mike and servers start doing this

976
00:45:50,280 --> 00:45:53,970
and like you don't always get

977
00:45:51,750 --> 00:45:56,100
intermediates chrome does eia chasing

978
00:45:53,970 --> 00:45:57,540
and so like servers might do it and

979
00:45:56,100 --> 00:45:59,970
everything works everything is great and

980
00:45:57,540 --> 00:46:02,900
then like Firefox is on fire down there

981
00:45:59,970 --> 00:46:05,790
and can talk to this server anymore I

982
00:46:02,900 --> 00:46:07,440
without a I a chasing I think you're in

983
00:46:05,790 --> 00:46:10,650
a bad position and you don't to do this

984
00:46:07,440 --> 00:46:12,840
yeah no okay we we should talk some more

985
00:46:10,650 --> 00:46:16,020
about a a chasing and all the wonderful

986
00:46:12,840 --> 00:46:18,660
properties that that has yeah III agree

987
00:46:16,020 --> 00:46:20,730
as lack of wonderfulness but I okay I

988
00:46:18,660 --> 00:46:23,129
mean I would rather put in a fallback in

989
00:46:20,730 --> 00:46:25,920
the case of a certificate validation

990
00:46:23,130 --> 00:46:27,660
file yet then do AI a chasing at this

991
00:46:25,920 --> 00:46:31,280
point and your fallback is to redo the

992
00:46:27,660 --> 00:46:35,819
TLS connection with the p-value yeah

993
00:46:31,280 --> 00:46:38,340
then Schwartz I just want to point out

994
00:46:35,820 --> 00:46:40,530
that if you do change this from one bit

995
00:46:38,340 --> 00:46:44,250
to you know some identifier four bytes

996
00:46:40,530 --> 00:46:46,200
whatever that that says this is my

997
00:46:44,250 --> 00:46:49,530
collection of certificates that I can

998
00:46:46,200 --> 00:46:51,359
validate against your you know your

999
00:46:49,530 --> 00:46:52,390
honor hairs hair's breadth from a pretty

1000
00:46:51,360 --> 00:46:56,819
profound change

1001
00:46:52,390 --> 00:47:01,058
to the tls validation model where

1002
00:46:56,819 --> 00:47:04,450
instead of the server not knowing what

1003
00:47:01,059 --> 00:47:05,799
what the web DKI were what DK I said the

1004
00:47:04,450 --> 00:47:09,640
client has and therefore having to

1005
00:47:05,799 --> 00:47:11,859
choose one of the common CAS it can the

1006
00:47:09,640 --> 00:47:13,240
server can can learn the see a set of

1007
00:47:11,859 --> 00:47:17,500
the client before it chooses what

1008
00:47:13,240 --> 00:47:19,089
certificate to reply with which has all

1009
00:47:17,500 --> 00:47:24,069
sorts of the potential of complex

1010
00:47:19,089 --> 00:47:26,019
effects on on see a selection whole a

1011
00:47:24,069 --> 00:47:26,769
whole CA ecosystem I think it's a

1012
00:47:26,019 --> 00:47:29,169
fascinating

1013
00:47:26,769 --> 00:47:30,939
yeah intimating here I'm just wondering

1014
00:47:29,170 --> 00:47:36,339
whether this this is good or bad or just

1015
00:47:30,940 --> 00:47:40,119
if I don't know what west heart occur I

1016
00:47:36,339 --> 00:47:41,859
say speaking in the non HDTV context for

1017
00:47:40,119 --> 00:47:44,079
once because a lot of it's been around

1018
00:47:41,859 --> 00:47:46,598
web focus but this seems like a perfect

1019
00:47:44,079 --> 00:47:48,250
example for when a Dane client like on

1020
00:47:46,599 --> 00:47:49,299
the male side for example gets a three

1021
00:47:48,250 --> 00:47:50,890
one one certificate that should

1022
00:47:49,299 --> 00:47:52,210
immediately set this bit and you might

1023
00:47:50,890 --> 00:47:56,170
want to make a suggestion in the

1024
00:47:52,210 --> 00:47:56,470
document saying then write I do thank

1025
00:47:56,170 --> 00:47:57,579
you

1026
00:47:56,470 --> 00:47:59,078
alright so I think there's definitely

1027
00:47:57,579 --> 00:48:00,430
some interest but I think there's maybe

1028
00:47:59,079 --> 00:48:01,990
a little more discussion that needs to

1029
00:48:00,430 --> 00:48:03,460
happen you might I don't know what a

1030
00:48:01,990 --> 00:48:06,220
score doctrine is also go that's great

1031
00:48:03,460 --> 00:48:08,849
thanks and we cut the lines off so

1032
00:48:06,220 --> 00:48:08,848
Watson sorry

1033
00:48:10,559 --> 00:48:14,099
next Nancy's

1034
00:48:26,180 --> 00:48:41,710
I get a whole extra minute thank you

1035
00:48:42,490 --> 00:48:46,540
okay I guess I'll just hold it Mike

1036
00:48:51,640 --> 00:49:00,500
okay so I will be talking about a topic

1037
00:48:55,730 --> 00:49:04,910
that was raised by my office and I about

1038
00:49:00,500 --> 00:49:07,160
18 months ago and that was with the

1039
00:49:04,910 --> 00:49:10,640
publication of TLS 1.3 and the

1040
00:49:07,160 --> 00:49:13,220
deployments there is an impact to the

1041
00:49:10,640 --> 00:49:14,960
current network security solutions and I

1042
00:49:13,220 --> 00:49:18,919
don't mean the exhaustive set of

1043
00:49:14,960 --> 00:49:20,810
solutions but instead of them that do

1044
00:49:18,920 --> 00:49:24,860
get impacted today so we put a draft

1045
00:49:20,810 --> 00:49:27,940
together and given that I only have the

1046
00:49:24,860 --> 00:49:31,730
five minutes I just wanted to cover them

1047
00:49:27,940 --> 00:49:35,720
broadly here if you download these

1048
00:49:31,730 --> 00:49:38,750
slides and if I do have time I can go

1049
00:49:35,720 --> 00:49:41,359
through the summary of the use cases and

1050
00:49:38,750 --> 00:49:44,780
the impact as I put them on the table in

1051
00:49:41,360 --> 00:49:48,770
the last two slides in this deck but the

1052
00:49:44,780 --> 00:49:51,520
purpose of here was to say the general

1053
00:49:48,770 --> 00:49:54,920
goal of the network solutions today as

1054
00:49:51,520 --> 00:49:57,440
we see them in the different products is

1055
00:49:54,920 --> 00:49:59,210
effectively to affect and provide the

1056
00:49:57,440 --> 00:50:01,940
different access controls whether

1057
00:49:59,210 --> 00:50:05,120
they're for general access or for the

1058
00:50:01,940 --> 00:50:09,080
security as well as providing the

1059
00:50:05,120 --> 00:50:12,920
auditing capabilities and auditing could

1060
00:50:09,080 --> 00:50:16,340
be for general purposes or for security

1061
00:50:12,920 --> 00:50:19,670
purposes as well as for compliance and

1062
00:50:16,340 --> 00:50:22,610
then using some of the information as

1063
00:50:19,670 --> 00:50:26,210
well as solutions that are specific to

1064
00:50:22,610 --> 00:50:29,720
providing longer bidding vulnerability

1065
00:50:26,210 --> 00:50:32,750
as well as threat detection so in

1066
00:50:29,720 --> 00:50:35,600
essence what we're trying to cover not

1067
00:50:32,750 --> 00:50:38,540
trying what we described in the document

1068
00:50:35,600 --> 00:50:39,660
through the use cases and the deployment

1069
00:50:38,540 --> 00:50:44,160
scenarios

1070
00:50:39,660 --> 00:50:49,348
is they need to sometimes introduce the

1071
00:50:44,160 --> 00:50:54,118
notion of a TLS proxy sometimes has been

1072
00:50:49,349 --> 00:50:58,920
referred as the middle box those and so

1073
00:50:54,119 --> 00:51:01,789
what these proxies do is they can do

1074
00:50:58,920 --> 00:51:06,750
passive or they can do active infection

1075
00:51:01,789 --> 00:51:09,599
inspection effectively passively what

1076
00:51:06,750 --> 00:51:12,030
they do is they observe the TLS metadata

1077
00:51:09,599 --> 00:51:15,869
to be able to affect some of the

1078
00:51:12,030 --> 00:51:19,109
policies that we have categorized these

1079
00:51:15,869 --> 00:51:21,839
usage policies for their business

1080
00:51:19,109 --> 00:51:24,500
compliances you will if you will and

1081
00:51:21,839 --> 00:51:27,930
then to affect the access control so

1082
00:51:24,500 --> 00:51:31,500
from a monitoring auditing and the

1083
00:51:27,930 --> 00:51:34,259
security control functions it's not that

1084
00:51:31,500 --> 00:51:38,369
the TLS proxy or the middle box is there

1085
00:51:34,260 --> 00:51:40,170
all of the time to inspect the data all

1086
00:51:38,369 --> 00:51:51,109
of the time

1087
00:51:40,170 --> 00:51:55,770
but it can actually be taken to action

1088
00:51:51,109 --> 00:52:00,750
depending on the initial passive

1089
00:51:55,770 --> 00:52:04,470
inspection if you will so with the

1090
00:52:00,750 --> 00:52:08,779
solutions that are in deployment today

1091
00:52:04,470 --> 00:52:13,828
and with the introduction of TLS 1.3

1092
00:52:08,779 --> 00:52:18,059
there are some impacts and effects that

1093
00:52:13,829 --> 00:52:23,279
occur given some of the changes that are

1094
00:52:18,059 --> 00:52:26,970
introduced in the TLS 1.3 handshake so

1095
00:52:23,279 --> 00:52:29,940
the document and the draft is there

1096
00:52:26,970 --> 00:52:33,419
here's the link to it it's an individual

1097
00:52:29,940 --> 00:52:37,500
submission about a year ago I guess I

1098
00:52:33,420 --> 00:52:40,289
brought it to the TLS thread we received

1099
00:52:37,500 --> 00:52:43,710
a lot of feedback we're now in version 4

1100
00:52:40,289 --> 00:52:49,020
so I appreciate all of the feedback good

1101
00:52:43,710 --> 00:52:51,809
a negative to improve on the draft we

1102
00:52:49,020 --> 00:52:53,549
haven't received any feedback since

1103
00:52:51,809 --> 00:52:56,939
until today

1104
00:52:53,549 --> 00:53:01,288
so at that point we thought that the

1105
00:52:56,939 --> 00:53:06,419
draft was stable enough that my goal in

1106
00:53:01,289 --> 00:53:10,319
here was to try to start the process if

1107
00:53:06,419 --> 00:53:14,939
you will to see if we can publish this

1108
00:53:10,319 --> 00:53:16,849
as an informational RFC so I realize

1109
00:53:14,939 --> 00:53:20,879
it's not quite in the Charter but it is

1110
00:53:16,849 --> 00:53:23,399
in the TLS scope if you will because it

1111
00:53:20,880 --> 00:53:26,729
is documenting the impacts of the TOS

1112
00:53:23,399 --> 00:53:33,569
2003 on the deployments as we know them

1113
00:53:26,729 --> 00:53:36,749
today so that was the original ask there

1114
00:53:33,569 --> 00:53:39,509
has been some new additions and comments

1115
00:53:36,749 --> 00:53:45,479
that we can address but I think the goal

1116
00:53:39,509 --> 00:53:49,729
is for us to still seek interest in

1117
00:53:45,479 --> 00:53:54,448
publication so I will leave it at that

1118
00:53:49,729 --> 00:54:02,038
we have one person into my client now we

1119
00:53:54,449 --> 00:54:03,149
have more people and I'm just real

1120
00:54:02,039 --> 00:54:04,909
quickly I'm show of hands here who's

1121
00:54:03,149 --> 00:54:09,538
actually read this draft

1122
00:54:04,909 --> 00:54:10,729
more than all the other dress Wow okay

1123
00:54:09,539 --> 00:54:13,799
all right let's go

1124
00:54:10,729 --> 00:54:16,049
I hope this is an easy question how is

1125
00:54:13,799 --> 00:54:18,529
this different than one sentence from

1126
00:54:16,049 --> 00:54:28,169
the ETLs

1127
00:54:18,529 --> 00:54:29,579
sorry from enterprise TLS dancy to be

1128
00:54:28,169 --> 00:54:32,489
honest with you I'm not personally

1129
00:54:29,579 --> 00:54:35,819
familiar with ETLs my co-author is here

1130
00:54:32,489 --> 00:54:40,259
too so i will see i will ask fleming if

1131
00:54:35,819 --> 00:54:42,989
he's familiar we're not we were trying

1132
00:54:40,259 --> 00:54:46,619
to stick to what the standard is about

1133
00:54:42,989 --> 00:54:54,329
and document it based on the standards

1134
00:54:46,619 --> 00:54:55,739
yeah please very soft hi Steven bro so

1135
00:54:54,329 --> 00:54:57,269
I'm not clear if you're asking for this

1136
00:54:55,739 --> 00:54:58,619
to be adopted by the TLS working group

1137
00:54:57,269 --> 00:55:00,629
or you want to go to the independent

1138
00:54:58,619 --> 00:55:03,299
stream or what and I have follow-up

1139
00:55:00,630 --> 00:55:06,179
questions well let I'm asking the

1140
00:55:03,299 --> 00:55:07,290
general question because there has been

1141
00:55:06,179 --> 00:55:10,800
interest

1142
00:55:07,290 --> 00:55:13,620
when we started the thread at the time

1143
00:55:10,800 --> 00:55:17,970
it was it's not in the working group

1144
00:55:13,620 --> 00:55:20,970
charter it seems like there are effects

1145
00:55:17,970 --> 00:55:22,230
to the design and the implications of

1146
00:55:20,970 --> 00:55:25,140
the one that to me

1147
00:55:22,230 --> 00:55:30,510
so in essence I'm asking the group if

1148
00:55:25,140 --> 00:55:32,490
there is interest I can express active

1149
00:55:30,510 --> 00:55:33,840
disinterest I think this would be a

1150
00:55:32,490 --> 00:55:37,560
waste of time to try and turn into

1151
00:55:33,840 --> 00:55:39,780
consensus text because we just as was I

1152
00:55:37,560 --> 00:55:43,140
guess area reflected wasting loads of

1153
00:55:39,780 --> 00:55:45,780
time rehashing old Rams and I think this

1154
00:55:43,140 --> 00:55:47,190
is pointless but what by all means go to

1155
00:55:45,780 --> 00:55:52,770
your dependents frame and talk to the

1156
00:55:47,190 --> 00:55:56,030
antenna stream editor if that's a really

1157
00:55:52,770 --> 00:55:56,030
attempt for one more question by the way

1158
00:55:57,950 --> 00:56:06,319
I support youth discussing this topic I

1159
00:56:03,990 --> 00:56:09,390
think it's important people are already

1160
00:56:06,320 --> 00:56:12,450
vendors already announcing bypasses to

1161
00:56:09,390 --> 00:56:14,279
tell us 1.3 I think as engineers we need

1162
00:56:12,450 --> 00:56:17,430
to deal with the reality of the

1163
00:56:14,280 --> 00:56:26,070
situation and not some kind of idealized

1164
00:56:17,430 --> 00:56:32,040
politically correct world can we have

1165
00:56:26,070 --> 00:56:34,500
questions about the draft I mean so I've

1166
00:56:32,040 --> 00:56:36,990
read the draft I think it is different

1167
00:56:34,500 --> 00:56:39,420
it DTL assume that this just lists the

1168
00:56:36,990 --> 00:56:42,899
use cases that are currently impacted by

1169
00:56:39,420 --> 00:56:46,290
TLS 1.3 and the draft has been stable

1170
00:56:42,900 --> 00:56:48,630
since 104 accepted today so I don't see

1171
00:56:46,290 --> 00:56:51,990
that it's generated already a lot of

1172
00:56:48,630 --> 00:56:53,370
dissent and maybe that would change but

1173
00:56:51,990 --> 00:56:54,750
based on how many people have read the

1174
00:56:53,370 --> 00:56:56,880
draft it does seem like it has a

1175
00:56:54,750 --> 00:56:59,220
sufficient interest so I would like to

1176
00:56:56,880 --> 00:57:01,110
see it progress as an informational

1177
00:56:59,220 --> 00:57:02,640
draft and I think someone said it was

1178
00:57:01,110 --> 00:57:06,630
pointless but I think there is a point

1179
00:57:02,640 --> 00:57:09,359
to publishing it then are you jumping in

1180
00:57:06,630 --> 00:57:13,350
line thank you are you ahead of me

1181
00:57:09,360 --> 00:57:15,450
better just in a place it's so like if

1182
00:57:13,350 --> 00:57:17,610
we want to publish something from the

1183
00:57:15,450 --> 00:57:21,210
TLS working group or us I think a tech

1184
00:57:17,610 --> 00:57:22,739
responsible ad which is why I'm cutting

1185
00:57:21,210 --> 00:57:24,119
if we're gonna publish something from

1186
00:57:22,739 --> 00:57:25,799
the tls women group or something the

1187
00:57:24,119 --> 00:57:29,339
ietf stream we have to have ITF

1188
00:57:25,799 --> 00:57:30,950
consensus about what it says and I could

1189
00:57:29,339 --> 00:57:33,680
imagine writing a document that says

1190
00:57:30,950 --> 00:57:37,649
here are some things that people do and

1191
00:57:33,680 --> 00:57:39,960
they don't work anymore and we could

1192
00:57:37,650 --> 00:57:41,849
probably write a document like that and

1193
00:57:39,960 --> 00:57:46,140
we could probably write get consensus

1194
00:57:41,849 --> 00:57:48,299
about that but it's really hard to go

1195
00:57:46,140 --> 00:57:51,359
from a document that says here are some

1196
00:57:48,299 --> 00:57:53,569
things that don't work anymore saying we

1197
00:57:51,359 --> 00:57:56,578
wish we could still do these things and

1198
00:57:53,569 --> 00:57:59,279
once we make that step I think it

1199
00:57:56,579 --> 00:58:03,210
becomes extremely hard to get ITF

1200
00:57:59,279 --> 00:58:05,609
consensus and even being of what Stephen

1201
00:58:03,210 --> 00:58:10,170
was saying you would be waste a lot of

1202
00:58:05,609 --> 00:58:11,578
people's time on the other hand I hope

1203
00:58:10,170 --> 00:58:13,499
you think it's really valuable to

1204
00:58:11,579 --> 00:58:18,839
document that people are doing this and

1205
00:58:13,499 --> 00:58:20,519
that doesn't work anymore and it kind of

1206
00:58:18,839 --> 00:58:23,670
feels to me like the independent streams

1207
00:58:20,519 --> 00:58:25,649
are really great hunger that's sorry I

1208
00:58:23,670 --> 00:58:27,869
can't hear you so it kind of feels to me

1209
00:58:25,650 --> 00:58:30,089
that the independent stream is a very

1210
00:58:27,869 --> 00:58:33,479
good phone for this I feel a little bit

1211
00:58:30,089 --> 00:58:36,328
sad you know we don't have to say the

1212
00:58:33,479 --> 00:58:38,848
ITF has looked at this and you know we

1213
00:58:36,329 --> 00:58:39,869
we understand that these are things that

1214
00:58:38,849 --> 00:58:43,229
people are doing and they don't work

1215
00:58:39,869 --> 00:58:44,609
anymore but it it's really hard to see

1216
00:58:43,229 --> 00:58:46,649
that it's gonna be a fruitful youssef

1217
00:58:44,609 --> 00:58:52,859
people's time to try and get that to

1218
00:58:46,650 --> 00:58:55,680
happen in the ITF stir it so um the

1219
00:58:52,859 --> 00:58:58,619
intent and that the intent in the draft

1220
00:58:55,680 --> 00:59:00,868
was not to make insinuation that I wish

1221
00:58:58,619 --> 00:59:03,509
we weren't doing this it was merely to

1222
00:59:00,869 --> 00:59:07,799
document this is the impact of what's

1223
00:59:03,509 --> 00:59:09,599
happening today so if that's how I mean

1224
00:59:07,799 --> 00:59:12,089
it so if that's what you want to try to

1225
00:59:09,599 --> 00:59:14,460
do I think yeah take another look at the

1226
00:59:12,089 --> 00:59:17,430
draft from that starting point and I

1227
00:59:14,460 --> 00:59:20,940
suggest some text changes please I mean

1228
00:59:17,430 --> 00:59:24,629
and so again the intent is to document

1229
00:59:20,940 --> 00:59:26,759
the impact it's not meant to be the you

1230
00:59:24,630 --> 00:59:29,819
have to change one that three it's just

1231
00:59:26,759 --> 00:59:31,769
this is what is going to happen just

1232
00:59:29,819 --> 00:59:33,170
from a documentation standpoint and to

1233
00:59:31,769 --> 00:59:35,720
raise the awareness

1234
00:59:33,170 --> 00:59:37,579
right okay thank you for clarifying yeah

1235
00:59:35,720 --> 00:59:42,819
thanks so we're at a time now folks

1236
00:59:37,579 --> 00:59:45,589
Oh Peter nine then I go 30 seconds yeah

1237
00:59:42,819 --> 00:59:47,119
arrow scroll up I mean III don't think

1238
00:59:45,589 --> 00:59:49,069
we should take this up and tell us um

1239
00:59:47,119 --> 00:59:50,269
this is like gonna be an incredible you

1240
00:59:49,069 --> 00:59:51,529
can in just negotiation about the

1241
00:59:50,269 --> 00:59:52,700
contents of this document on the ice

1242
00:59:51,529 --> 00:59:54,319
panic number I've said any other

1243
00:59:52,700 --> 00:59:55,460
comments I appreciate you tried to

1244
00:59:54,319 --> 00:59:58,519
incorporate them but I don't actually

1245
00:59:55,460 --> 00:59:59,750
think adequately um um and I think

1246
00:59:58,519 --> 01:00:01,879
that's partly because we actually don't

1247
00:59:59,750 --> 01:00:03,769
agree about what the situation is um and

1248
01:00:01,880 --> 01:00:06,289
I just understand how that's gonna be I

1249
01:00:03,769 --> 01:00:08,990
get you school UCITS times this is like

1250
01:00:06,289 --> 01:00:09,920
a great independent opportunity alright

1251
01:00:08,990 --> 01:00:11,359
so I'm gonna take the chairs prerogative

1252
01:00:09,920 --> 01:00:14,240
here we're out of time

1253
01:00:11,359 --> 01:00:15,440
I just want to tell people that you know

1254
01:00:14,240 --> 01:00:16,609
it's difficult to be the chair when

1255
01:00:15,440 --> 01:00:18,470
people come to these things because all

1256
01:00:16,609 --> 01:00:20,900
roads that are TLS related come to us

1257
01:00:18,470 --> 01:00:23,328
first so they pretty much have to come

1258
01:00:20,900 --> 01:00:25,460
to us whether you like it or not that's

1259
01:00:23,329 --> 01:00:26,960
how it works so when they come here and

1260
01:00:25,460 --> 01:00:30,170
they ask and then they get pushed back

1261
01:00:26,960 --> 01:00:31,460
and eaze happen it's it's clear to me

1262
01:00:30,170 --> 01:00:32,930
that there would be some dissension if

1263
01:00:31,460 --> 01:00:35,089
we were to adopt this as a working group

1264
01:00:32,930 --> 01:00:36,740
draft the best thing to do like the

1265
01:00:35,089 --> 01:00:39,799
other times is to try to talk to Ben to

1266
01:00:36,740 --> 01:00:41,149
figure out what to do okay um I don't

1267
01:00:39,799 --> 01:00:43,279
think I'm gonna try to take a home for

1268
01:00:41,150 --> 01:00:44,960
working group here their adoption or not

1269
01:00:43,279 --> 01:00:47,240
we're just gonna proceed and go to the

1270
01:00:44,960 --> 01:00:51,140
social and all have a great time thank

1271
01:00:47,240 --> 01:00:54,019
you yes thank you

1272
01:00:51,140 --> 01:00:55,640
thanks for I'm sorry I cut the lines and

1273
01:00:54,019 --> 01:00:59,348
I did the chair prerogative thing but I

1274
01:00:55,640 --> 01:00:59,348
think we're out of time Thanks

1275
01:01:12,500 --> 01:01:15,500
sorry

