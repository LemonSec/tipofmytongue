1
00:00:26,480 --> 00:00:27,439
so

2
00:00:27,439 --> 00:00:30,960
it's five o'clock here

3
00:00:30,960 --> 00:00:35,520
central european time four o'clock utc

4
00:00:35,520 --> 00:00:37,520
ready for session two dinosaur working

5
00:00:37,520 --> 00:00:39,440
group

6
00:00:39,440 --> 00:00:42,399
um in the agenda there was some we

7
00:00:42,399 --> 00:00:44,559
mentioned the chairs uh update but

8
00:00:44,559 --> 00:00:47,120
we well normally we have two chairs

9
00:00:47,120 --> 00:00:47,920
updates

10
00:00:47,920 --> 00:00:50,480
but then with meetings apart on

11
00:00:50,480 --> 00:00:51,920
different days

12
00:00:51,920 --> 00:00:55,280
uh so we skip that

13
00:00:55,280 --> 00:00:58,320
we proceed directly with the next

14
00:00:58,320 --> 00:01:00,559
draft presentation still working group

15
00:01:00,559 --> 00:01:02,959
business

16
00:01:03,760 --> 00:01:07,040
the draft dinosaur avoid fragmentation

17
00:01:07,040 --> 00:01:12,720
by mr fujiwara and paul vixie

18
00:01:12,720 --> 00:01:15,680
suzanne are there other maybe before we

19
00:01:15,680 --> 00:01:16,640
start other

20
00:01:16,640 --> 00:01:18,960
procedural organizational things to

21
00:01:18,960 --> 00:01:20,400
share

22
00:01:20,400 --> 00:01:22,720
um i don't think so i think we're we're

23
00:01:22,720 --> 00:01:24,840
up to date

24
00:01:24,840 --> 00:01:27,520
um yeah i think we're good

25
00:01:27,520 --> 00:01:30,159
thanks good i think still as you still

26
00:01:30,159 --> 00:01:30,880
see people

27
00:01:30,880 --> 00:01:33,439
joining the room yeah it might be a good

28
00:01:33,439 --> 00:01:35,200
idea to to give them another

29
00:01:35,200 --> 00:01:37,439
maybe another minute let's do that yeah

30
00:01:37,439 --> 00:01:38,799
yeah yeah

31
00:01:38,799 --> 00:01:41,840
let's do that

32
00:02:53,599 --> 00:02:56,959
uh to the room uh we decided to wait for

33
00:02:56,959 --> 00:02:59,280
one or two minutes before we start with

34
00:02:59,280 --> 00:03:00,560
the presentation

35
00:03:00,560 --> 00:03:02,959
as we still see people joining the room

36
00:03:02,959 --> 00:03:03,599
at

37
00:03:03,599 --> 00:03:06,879
five o'clock central european time

38
00:03:06,879 --> 00:03:08,879
so we'll start in 30 seconds something

39
00:03:08,879 --> 00:03:19,840
like that

40
00:03:53,120 --> 00:04:01,840
you can start the presentation

41
00:04:11,040 --> 00:04:14,319
fragmentation avoidance in dnase next

42
00:04:14,319 --> 00:04:17,120
slide please

43
00:04:19,680 --> 00:04:23,120
these are updates from last it meeting

44
00:04:23,120 --> 00:04:27,360
we submitted 03 november 23

45
00:04:27,360 --> 00:04:30,639
last year jerusalem includes

46
00:04:30,639 --> 00:04:34,560
proposed changes at the starting meeting

47
00:04:34,560 --> 00:04:38,400
and we submitted zero for february 22

48
00:04:38,400 --> 00:04:40,160
this year

49
00:04:40,160 --> 00:04:43,440
therefore we added reference to

50
00:04:43,440 --> 00:04:46,320
jeff houston's present presentation

51
00:04:46,320 --> 00:04:48,800
measuring dense cloud day 2020

52
00:04:48,800 --> 00:04:52,560
at work 34 and we changed to use

53
00:04:52,560 --> 00:04:55,759
default maximum dns udp pedal size

54
00:04:55,759 --> 00:04:58,800
instead of default opportunity value

55
00:04:58,800 --> 00:05:01,199
and we are did a test about how to

56
00:05:01,199 --> 00:05:02,400
calculate

57
00:05:02,400 --> 00:05:05,280
maximum dns udp payroll sites for each

58
00:05:05,280 --> 00:05:06,560
destination

59
00:05:06,560 --> 00:05:10,400
from the proximity discovery result

60
00:05:10,400 --> 00:05:13,600
and added text about the servers for

61
00:05:13,600 --> 00:05:14,639
cmtu

62
00:05:14,639 --> 00:05:18,400
to the internet and how to calculate

63
00:05:18,400 --> 00:05:21,680
the dns server's default maximum dns udp

64
00:05:21,680 --> 00:05:23,280
payroll size

65
00:05:23,280 --> 00:05:26,400
next slide please

66
00:05:28,720 --> 00:05:32,080
these are updates of recommendation

67
00:05:32,080 --> 00:05:33,440
section

68
00:05:33,440 --> 00:05:37,360
blue part is changes at blue part

69
00:05:37,360 --> 00:05:40,560
are changed at 0 3 if

70
00:05:40,560 --> 00:05:42,800
the udp responder detects immediate

71
00:05:42,800 --> 00:05:44,560
error

72
00:05:44,560 --> 00:05:46,800
that the udp packet cannot be sent

73
00:05:46,800 --> 00:05:49,199
beyond the past empty site in message

74
00:05:49,199 --> 00:05:50,880
size

75
00:05:50,880 --> 00:05:54,000
the udp responder may recreate response

76
00:05:54,000 --> 00:05:56,240
packets between possibility size

77
00:05:56,240 --> 00:05:59,759
or digit set and later part is changes

78
00:05:59,759 --> 00:06:00,080
at

79
00:06:00,080 --> 00:06:02,639
zero four

80
00:06:03,440 --> 00:06:07,280
if the percent discovery fader is

81
00:06:07,280 --> 00:06:11,680
impossible udp responders should compose

82
00:06:11,680 --> 00:06:15,520
udp responses that result in ip packets

83
00:06:15,520 --> 00:06:15,840
that

84
00:06:15,840 --> 00:06:19,360
do not exceed the default maximum dns

85
00:06:19,360 --> 00:06:23,039
payroll size described in section 3.3

86
00:06:23,039 --> 00:06:26,880
and on how to calculate adidas how to

87
00:06:26,880 --> 00:06:27,919
calculate then

88
00:06:27,919 --> 00:06:31,919
calculate the maximum dns udp parasites

89
00:06:31,919 --> 00:06:32,800
as

90
00:06:32,800 --> 00:06:35,680
the reported opposition to you minus

91
00:06:35,680 --> 00:06:39,039
vajra version 6 header size 2040

92
00:06:39,039 --> 00:06:42,319
minus udp header size if

93
00:06:42,319 --> 00:06:44,400
the percent discovery fedora is

94
00:06:44,400 --> 00:06:45,440
impossible

95
00:06:45,440 --> 00:06:48,080
use the default maximum dns udp payroll

96
00:06:48,080 --> 00:06:48,880
size

97
00:06:48,880 --> 00:06:52,560
described in section 3.3 and

98
00:06:52,560 --> 00:06:56,560
udp responders should use the requested

99
00:06:56,560 --> 00:07:00,080
maximum dncd peroxide as the calculated

100
00:07:00,080 --> 00:07:03,039
or the default function of the lcd field

101
00:07:03,039 --> 00:07:04,479
size

102
00:07:04,479 --> 00:07:07,520
next slide please

103
00:07:11,199 --> 00:07:14,479
these are changes about default maximum

104
00:07:14,479 --> 00:07:15,440
audience

105
00:07:15,440 --> 00:07:18,960
plus size this section was default

106
00:07:18,960 --> 00:07:22,080
proximity value

107
00:07:22,240 --> 00:07:25,240
and default maximum led pedal size for

108
00:07:25,240 --> 00:07:26,400
ipv6

109
00:07:26,400 --> 00:07:31,680
xxx guest and ip version 4 is xxx

110
00:07:31,680 --> 00:07:35,199
please choose go to with the values

111
00:07:35,199 --> 00:07:37,120
before our act working request

112
00:07:37,120 --> 00:07:40,880
call and we added

113
00:07:40,880 --> 00:07:45,360
how to major and how to

114
00:07:45,360 --> 00:07:48,479
generate good

115
00:07:48,479 --> 00:07:51,919
maximum dna parasites operators of dna

116
00:07:51,919 --> 00:07:52,720
servers should

117
00:07:52,720 --> 00:07:55,520
measure their proximity to well-known

118
00:07:55,520 --> 00:07:57,759
locations on the internet

119
00:07:57,759 --> 00:08:01,280
such as a2m root servers net or atm

120
00:08:01,280 --> 00:08:02,960
detailed servers net

121
00:08:02,960 --> 00:08:06,080
at setting up the servers

122
00:08:06,080 --> 00:08:10,080
and or periodical

123
00:08:10,080 --> 00:08:12,720
and the smallest value per cmt is the

124
00:08:12,720 --> 00:08:17,039
server's fastened due to the internet

125
00:08:17,520 --> 00:08:20,080
the server's maximum dlcdp payroll sites

126
00:08:20,080 --> 00:08:23,039
for ipv14006 is

127
00:08:23,039 --> 00:08:26,560
the reported percentu minus version 4.6

128
00:08:26,560 --> 00:08:29,360
header size 20 or 40 minus udp header

129
00:08:29,360 --> 00:08:32,000
size 8.

130
00:08:32,799 --> 00:08:35,919
next slide please

131
00:08:37,760 --> 00:08:41,838
please use the body and review

132
00:08:42,640 --> 00:08:44,720
please choose good default maximum

133
00:08:44,720 --> 00:08:47,760
during dns udp payroll size

134
00:08:47,760 --> 00:08:51,160
currently there are four candidates

135
00:08:51,160 --> 00:08:52,880
rc4035

136
00:08:52,880 --> 00:08:56,720
specified 20 hundred

137
00:08:56,720 --> 00:09:00,000
20 hours minimal value and

138
00:09:00,000 --> 00:09:04,680
dns frag day to 2000 2020 robot

139
00:09:04,680 --> 00:09:07,600
232 and

140
00:09:07,600 --> 00:09:11,760
and many access rankings forty hundred

141
00:09:11,760 --> 00:09:15,360
fourteen hundred maybe good value

142
00:09:15,360 --> 00:09:18,839
and j houston's measuring dns cloud day

143
00:09:18,839 --> 00:09:23,839
2020 proposed

144
00:09:24,760 --> 00:09:26,560
1472

145
00:09:26,560 --> 00:09:31,600
for ipv4 and 1452

146
00:09:31,600 --> 00:09:34,640
for ip version 6.

147
00:09:34,640 --> 00:09:38,080
please choose go to value and please

148
00:09:38,080 --> 00:09:43,760
debut that's all please comment

149
00:09:48,959 --> 00:09:52,320
thank you thank you any questions

150
00:09:52,320 --> 00:09:56,320
from the room comments

151
00:09:56,320 --> 00:09:59,240
paul please go ahead

152
00:09:59,240 --> 00:10:00,480
[Music]

153
00:10:00,480 --> 00:10:02,959
hi super briefly because i'm not a

154
00:10:02,959 --> 00:10:04,079
person who like

155
00:10:04,079 --> 00:10:06,320
tries to deal with any of this but this

156
00:10:06,320 --> 00:10:07,440
last slide

157
00:10:07,440 --> 00:10:09,519
indicates that we are not going to be

158
00:10:09,519 --> 00:10:11,600
able to choose a good value

159
00:10:11,600 --> 00:10:14,240
i mean there is a fast range between

160
00:10:14,240 --> 00:10:15,440
1232

161
00:10:15,440 --> 00:10:20,560
and 1500. yeah

162
00:10:23,360 --> 00:10:26,800
in yeah indeed

163
00:10:27,120 --> 00:10:30,320
we see values from dynasty

164
00:10:30,320 --> 00:10:34,880
which has been determined by the

165
00:10:34,880 --> 00:10:36,640
open source software developers or by

166
00:10:36,640 --> 00:10:40,000
the dns software developers

167
00:10:40,000 --> 00:10:42,240
also from operational practice maybe

168
00:10:42,240 --> 00:10:43,519
someone of the opera

169
00:10:43,519 --> 00:10:46,240
implementers can comment on that and

170
00:10:46,240 --> 00:10:48,000
there has been measurements

171
00:10:48,000 --> 00:10:51,519
like joy like jeff

172
00:10:52,160 --> 00:10:55,519
and how can we come to a consensus here

173
00:10:55,519 --> 00:11:00,959
in in the working group

174
00:11:00,959 --> 00:11:04,000
please go ahead punit

175
00:11:05,760 --> 00:11:09,680
hi uh hi so speaking from the experience

176
00:11:09,680 --> 00:11:10,560
with

177
00:11:10,560 --> 00:11:13,920
google public dns we implemented flag

178
00:11:13,920 --> 00:11:14,880
day with for

179
00:11:14,880 --> 00:11:18,560
a value of 1400 for both v4 and v6

180
00:11:18,560 --> 00:11:21,839
and it has worked

181
00:11:21,839 --> 00:11:23,920
it has worked very well meaning we are

182
00:11:23,920 --> 00:11:25,040
still seeing some

183
00:11:25,040 --> 00:11:28,240
issues which we are investigating where

184
00:11:28,240 --> 00:11:31,519
we do not get any responses over ts tcp

185
00:11:31,519 --> 00:11:34,399
but i believe that's something else

186
00:11:34,399 --> 00:11:36,000
going on there

187
00:11:36,000 --> 00:11:38,480
so our vote would be for something which

188
00:11:38,480 --> 00:11:41,360
is at least 1400

189
00:11:41,360 --> 00:11:44,720
having said what i think as paul hoffman

190
00:11:44,720 --> 00:11:45,920
just said

191
00:11:45,920 --> 00:11:48,079
it may be impossible to recommend a

192
00:11:48,079 --> 00:11:49,279
single value

193
00:11:49,279 --> 00:11:52,320
in the rfc so maybe saying

194
00:11:52,320 --> 00:11:55,440
saying a legal range

195
00:11:55,440 --> 00:11:58,399
as the recommendation may be the way to

196
00:11:58,399 --> 00:11:59,360
go say

197
00:11:59,360 --> 00:12:01,360
do not set it less than this and do not

198
00:12:01,360 --> 00:12:03,360
set it higher than this

199
00:12:03,360 --> 00:12:05,839
based on reasoning and then leave it up

200
00:12:05,839 --> 00:12:08,240
to the operator

201
00:12:08,240 --> 00:12:12,639
yeah thank you uh

202
00:12:12,639 --> 00:12:16,160
jim jim reid please go ahead

203
00:12:16,160 --> 00:12:18,720
um i think penice just summed up what i

204
00:12:18,720 --> 00:12:20,959
wanted to say

205
00:12:20,959 --> 00:12:23,600
it's probably impossible to converge on

206
00:12:23,600 --> 00:12:24,160
a single

207
00:12:24,160 --> 00:12:27,360
value for the payload size which will

208
00:12:27,360 --> 00:12:29,360
satisfy every consideration

209
00:12:29,360 --> 00:12:31,440
in every scenario and i think we

210
00:12:31,440 --> 00:12:33,680
shouldn't even try to do that

211
00:12:33,680 --> 00:12:36,079
so my preference would be to set

212
00:12:36,079 --> 00:12:37,760
suggestions for

213
00:12:37,760 --> 00:12:41,120
a minimum value and an upper value with

214
00:12:41,120 --> 00:12:43,600
explanations why those values were

215
00:12:43,600 --> 00:12:44,800
chosen

216
00:12:44,800 --> 00:12:46,480
and then leave some general guidelines

217
00:12:46,480 --> 00:12:48,399
for operators to say

218
00:12:48,399 --> 00:12:50,240
somewhere inside this mix might be the

219
00:12:50,240 --> 00:12:52,560
right value for you and you need

220
00:12:52,560 --> 00:12:54,320
adhesive these are possibly the factors

221
00:12:54,320 --> 00:12:56,160
you should consider when trying to

222
00:12:56,160 --> 00:12:57,360
choose that

223
00:12:57,360 --> 00:12:58,959
but i think trying to have the working

224
00:12:58,959 --> 00:13:00,880
group come up with an absolute number

225
00:13:00,880 --> 00:13:02,399
which will solve every problem for

226
00:13:02,399 --> 00:13:03,519
everybody

227
00:13:03,519 --> 00:13:05,680
is intractable and one other thing i

228
00:13:05,680 --> 00:13:07,279
would just say is this document has been

229
00:13:07,279 --> 00:13:08,240
going on

230
00:13:08,240 --> 00:13:11,519
for quite some time in the davis

231
00:13:11,519 --> 00:13:13,200
and it must be really frustrating for

232
00:13:13,200 --> 00:13:14,560
fujiwara-san

233
00:13:14,560 --> 00:13:16,480
that we still can't get some progress

234
00:13:16,480 --> 00:13:18,000
with it i really think we should try to

235
00:13:18,000 --> 00:13:19,600
get this document completed

236
00:13:19,600 --> 00:13:23,120
and out the door i agree

237
00:13:23,120 --> 00:13:26,480
indeed so yeah i will ask that

238
00:13:26,480 --> 00:13:28,240
first uh the queue and then i will come

239
00:13:28,240 --> 00:13:30,079
back to that later

240
00:13:30,079 --> 00:13:34,000
peter please go ahead thank you

241
00:13:34,000 --> 00:13:36,480
as a result for implementer i don't have

242
00:13:36,480 --> 00:13:38,720
time to probe any numbers

243
00:13:38,720 --> 00:13:41,279
so 1232 has worked well for us that's

244
00:13:41,279 --> 00:13:42,880
worked well for many of our customers

245
00:13:42,880 --> 00:13:45,120
over the last 10 years

246
00:13:45,120 --> 00:13:47,120
uh a resolver does not have time to

247
00:13:47,120 --> 00:13:48,160
probe

248
00:13:48,160 --> 00:13:51,120
if a server doesn't answer we cannot

249
00:13:51,120 --> 00:13:51,600
spend

250
00:13:51,600 --> 00:13:54,000
many more queries and seconds figuring

251
00:13:54,000 --> 00:13:55,680
out why that happens trying different

252
00:13:55,680 --> 00:13:56,560
sizes

253
00:13:56,560 --> 00:14:00,399
etc even worse as

254
00:14:00,399 --> 00:14:03,920
a responder one of the first slides

255
00:14:03,920 --> 00:14:05,519
suggested i probe

256
00:14:05,519 --> 00:14:08,639
the mpu part size to my clients but i

257
00:14:08,639 --> 00:14:10,399
have no way to do that either

258
00:14:10,399 --> 00:14:12,560
a responder does not remember a query

259
00:14:12,560 --> 00:14:14,480
had already answered

260
00:14:14,480 --> 00:14:16,720
so to me those parts of the draft are

261
00:14:16,720 --> 00:14:18,240
not implementable

262
00:14:18,240 --> 00:14:21,760
thank you okay

263
00:14:24,000 --> 00:14:26,399
thank you

264
00:14:27,760 --> 00:14:31,120
other people comments questions

265
00:14:31,120 --> 00:14:33,600
feedback

266
00:14:35,600 --> 00:14:38,639
no okay good

267
00:14:38,639 --> 00:14:42,079
thank you fujiwara-san indeed so the

268
00:14:42,079 --> 00:14:43,040
thing is

269
00:14:43,040 --> 00:14:46,320
what is necessary to go to make progress

270
00:14:46,320 --> 00:14:47,279
on the document

271
00:14:47,279 --> 00:14:50,880
so the the

272
00:14:50,880 --> 00:14:52,720
an interval has been suggested for the

273
00:14:52,720 --> 00:14:54,160
default maximum size

274
00:14:54,160 --> 00:14:57,199
payload size uh you got some feedback

275
00:14:57,199 --> 00:14:58,480
from the

276
00:14:58,480 --> 00:15:02,720
from the implementers um but also

277
00:15:02,720 --> 00:15:05,519
indeed also in the working group as a

278
00:15:05,519 --> 00:15:07,279
working group

279
00:15:07,279 --> 00:15:08,959
comment give feedback on the mailing

280
00:15:08,959 --> 00:15:10,399
list

281
00:15:10,399 --> 00:15:13,360
and identify what has to be done uh what

282
00:15:13,360 --> 00:15:14,639
is not possible

283
00:15:14,639 --> 00:15:17,440
uh so we can wrap uh well make progress

284
00:15:17,440 --> 00:15:18,560
with the document and

285
00:15:18,560 --> 00:15:21,120
and going towards a working group last

286
00:15:21,120 --> 00:15:23,360
call

287
00:15:23,360 --> 00:15:26,480
if it's ready of course uh suzanne yeah

288
00:15:26,480 --> 00:15:28,160
just um i think the the

289
00:15:28,160 --> 00:15:30,240
thing that we would like to to see more

290
00:15:30,240 --> 00:15:31,279
discussion

291
00:15:31,279 --> 00:15:34,480
you know on the mailing list um

292
00:15:34,480 --> 00:15:36,639
how much can we agree on what to say

293
00:15:36,639 --> 00:15:38,000
about

294
00:15:38,000 --> 00:15:41,360
payload size and what other what other

295
00:15:41,360 --> 00:15:42,320
content

296
00:15:42,320 --> 00:15:44,959
for this for this document do we think

297
00:15:44,959 --> 00:15:45,440
um

298
00:15:45,440 --> 00:15:47,519
should be an rfc and can we get

299
00:15:47,519 --> 00:15:48,959
consensus because i think what the

300
00:15:48,959 --> 00:15:50,240
chairs have to do is figure out where

301
00:15:50,240 --> 00:15:51,839
the consensus how big the consensus

302
00:15:51,839 --> 00:15:53,120
really is and how much of the draft it

303
00:15:53,120 --> 00:15:54,399
really covers

304
00:15:54,399 --> 00:15:57,360
thank you thank you yeah yeah and i

305
00:15:57,360 --> 00:15:57,839
think

306
00:15:57,839 --> 00:16:01,680
we have good feedback from the room now

307
00:16:01,680 --> 00:16:04,800
to make a next version and uh

308
00:16:04,800 --> 00:16:07,440
let's see how we can for go forward and

309
00:16:07,440 --> 00:16:09,680
get consensus on the

310
00:16:09,680 --> 00:16:14,719
on these changes um

311
00:16:15,120 --> 00:16:18,240
thank you yeah please go ahead

312
00:16:18,240 --> 00:16:22,320
would you rather yeah

313
00:16:22,320 --> 00:16:26,079
fujiwara-san you want to

314
00:16:26,079 --> 00:16:28,880
ask the room something specific or some

315
00:16:28,880 --> 00:16:31,680
final remarks

316
00:16:32,639 --> 00:16:36,320
please debut and comment

317
00:16:36,320 --> 00:16:39,120
yep indeed please read the document

318
00:16:39,120 --> 00:16:40,560
review the document

319
00:16:40,560 --> 00:16:43,839
send comments to the mailing list

320
00:16:43,839 --> 00:16:48,160
yeah thank you okay

321
00:16:48,839 --> 00:16:52,000
um go to the next slide sets

322
00:16:52,000 --> 00:16:56,399
and that's uh wes

323
00:16:56,399 --> 00:16:58,330
with um

324
00:16:58,330 --> 00:16:59,519
[Music]

325
00:16:59,519 --> 00:17:03,440
i can run the slides what do you prefer

326
00:17:03,440 --> 00:17:05,599
i can do it either way yeah excellent

327
00:17:05,599 --> 00:17:08,240
i'll give you

328
00:17:09,520 --> 00:17:12,160
yeah ground screen and i will stop

329
00:17:12,160 --> 00:17:14,640
sharing

330
00:17:15,760 --> 00:17:18,959
you see the pop-up permission let me try

331
00:17:18,959 --> 00:17:19,679
it again

332
00:17:19,679 --> 00:17:22,559
with it says i have asked but i don't

333
00:17:22,559 --> 00:17:22,959
okay

334
00:17:22,959 --> 00:17:25,919
i will do it again yeah okay there we go

335
00:17:25,919 --> 00:17:26,959
yeah i clicked but

336
00:17:26,959 --> 00:17:30,000
uh not too early yeah too early all

337
00:17:30,000 --> 00:17:32,240
right it's not a problem uh

338
00:17:32,240 --> 00:17:35,760
so this is a document that i wrote

339
00:17:35,760 --> 00:17:38,400
a couple of weeks ago um victor duchovny

340
00:17:38,400 --> 00:17:38,799
and i

341
00:17:38,799 --> 00:17:40,160
are co-authors on it i should have put

342
00:17:40,160 --> 00:17:42,240
his name on the slide uh

343
00:17:42,240 --> 00:17:43,760
we've been talking about it for a while

344
00:17:43,760 --> 00:17:45,360
and it seemed sort of finally the right

345
00:17:45,360 --> 00:17:47,360
time to throw it forward

346
00:17:47,360 --> 00:17:49,919
um so i won't go over the outline that's

347
00:17:49,919 --> 00:17:50,720
boring

348
00:17:50,720 --> 00:17:53,600
uh real quick just iterations refresher

349
00:17:53,600 --> 00:17:55,360
on how insect three works

350
00:17:55,360 --> 00:17:57,360
insect three is an alternate proof of

351
00:17:57,360 --> 00:17:58,720
non-existence i think most people in

352
00:17:58,720 --> 00:18:00,080
this room knows this

353
00:18:00,080 --> 00:18:02,559
its purpose is really to discourage zone

354
00:18:02,559 --> 00:18:03,360
enumeration

355
00:18:03,360 --> 00:18:05,200
and to provide an opt-out convention for

356
00:18:05,200 --> 00:18:06,400
large and unsigned

357
00:18:06,400 --> 00:18:09,600
you know zone zones

358
00:18:09,600 --> 00:18:12,000
and it does this by instead of using

359
00:18:12,000 --> 00:18:13,440
clear text names in

360
00:18:13,440 --> 00:18:15,840
insect records you know there's a start

361
00:18:15,840 --> 00:18:16,880
and an end domain

362
00:18:16,880 --> 00:18:20,720
name the nzec3 record uses

363
00:18:20,720 --> 00:18:23,120
it hashes that using n iterations of a

364
00:18:23,120 --> 00:18:24,720
cryptographic hash where n is

365
00:18:24,720 --> 00:18:27,200
defined by the zone owner and it allows

366
00:18:27,200 --> 00:18:27,919
the use

367
00:18:27,919 --> 00:18:30,480
of an optional salt as well in order to

368
00:18:30,480 --> 00:18:32,320
you know make offline dictionary attacks

369
00:18:32,320 --> 00:18:35,200
harder so one a couple of quick notes

370
00:18:35,200 --> 00:18:36,559
and a lot of people forget this is that

371
00:18:36,559 --> 00:18:38,000
the fully qualified domain name is

372
00:18:38,000 --> 00:18:39,520
actually put into the hash

373
00:18:39,520 --> 00:18:41,360
so all of these offline dictionaries

374
00:18:41,360 --> 00:18:42,799
can't be built

375
00:18:42,799 --> 00:18:44,480
in a generic one that'll apply to the

376
00:18:44,480 --> 00:18:46,880
entire internet the the hashing is done

377
00:18:46,880 --> 00:18:49,679
is very zone specific and the other

378
00:18:49,679 --> 00:18:51,200
thing to note is that rotating salts

379
00:18:51,200 --> 00:18:52,400
really only help

380
00:18:52,400 --> 00:18:54,960
once because once you actually know that

381
00:18:54,960 --> 00:18:56,480
a name exists in the zone you can just

382
00:18:56,480 --> 00:18:58,160
keep querying for it you don't need to

383
00:18:58,160 --> 00:18:58,799
actually

384
00:18:58,799 --> 00:19:01,520
um you know rotating the salt won't help

385
00:19:01,520 --> 00:19:02,799
you in the future so it only helps the

386
00:19:02,799 --> 00:19:05,600
first attack basically

387
00:19:05,600 --> 00:19:09,600
the guidance in rfc 5155 sets these

388
00:19:09,600 --> 00:19:12,400
limits so and and they sort of tie

389
00:19:12,400 --> 00:19:13,039
together

390
00:19:13,039 --> 00:19:15,360
the rsa key size and the strength of an

391
00:19:15,360 --> 00:19:17,440
rsa key to the number of iterations that

392
00:19:17,440 --> 00:19:18,559
they suggest

393
00:19:18,559 --> 00:19:20,880
if you want to try and you know force

394
00:19:20,880 --> 00:19:22,320
attackers that are trying to do zone

395
00:19:22,320 --> 00:19:23,360
enumeration

396
00:19:23,360 --> 00:19:25,120
to really you know come up with some

397
00:19:25,120 --> 00:19:27,679
pain right so the number of iterations

398
00:19:27,679 --> 00:19:29,520
uh gets larger as you use a potentially

399
00:19:29,520 --> 00:19:30,799
larger key

400
00:19:30,799 --> 00:19:33,520
up to 2500 and again this is a maximum

401
00:19:33,520 --> 00:19:36,400
size this is not a recommendation

402
00:19:36,400 --> 00:19:39,280
so why is this a problem well iterations

403
00:19:39,280 --> 00:19:40,400
are really expensive

404
00:19:40,400 --> 00:19:41,760
they're they're complex for the

405
00:19:41,760 --> 00:19:43,200
authoritative engines to calculate

406
00:19:43,200 --> 00:19:44,720
they're complex for the validators to

407
00:19:44,720 --> 00:19:46,480
calculate and in the end result

408
00:19:46,480 --> 00:19:49,600
everybody suffers and as dns

409
00:19:49,600 --> 00:19:53,440
validation kind of increases in in

410
00:19:53,440 --> 00:19:55,840
in youth which is definitely happening

411
00:19:55,840 --> 00:19:56,640
right uh

412
00:19:56,640 --> 00:19:58,080
so there's sort of this thinking of

413
00:19:58,080 --> 00:19:59,440
maybe it's time to reduce these

414
00:19:59,440 --> 00:20:00,160
penalties

415
00:20:00,160 --> 00:20:02,080
it's actually not helping people as much

416
00:20:02,080 --> 00:20:03,679
as it could be

417
00:20:03,679 --> 00:20:05,919
and i know um the nsac3 authors are

418
00:20:05,919 --> 00:20:07,600
likely in the room i would

419
00:20:07,600 --> 00:20:09,120
love their opinions on all of this as

420
00:20:09,120 --> 00:20:10,799
well um

421
00:20:10,799 --> 00:20:13,120
so it's time to define some sort of more

422
00:20:13,120 --> 00:20:14,640
reasonable limits given

423
00:20:14,640 --> 00:20:16,960
you know our experience in deployment

424
00:20:16,960 --> 00:20:18,640
now but you know of course there is no

425
00:20:18,640 --> 00:20:19,919
perfect so everybody gets to choose

426
00:20:19,919 --> 00:20:22,000
their own values

427
00:20:22,000 --> 00:20:23,679
so the proposal that we put into this

428
00:20:23,679 --> 00:20:25,440
document is a couple of things one we

429
00:20:25,440 --> 00:20:27,679
have recommendations for zone publishers

430
00:20:27,679 --> 00:20:30,480
that has an iterations count of zero uh

431
00:20:30,480 --> 00:20:30,960
being

432
00:20:30,960 --> 00:20:32,480
you know the recommended value which

433
00:20:32,480 --> 00:20:34,159
really means one hash

434
00:20:34,159 --> 00:20:36,480
right so there's no additional hashing

435
00:20:36,480 --> 00:20:38,799
that goes on so zero does not mean zero

436
00:20:38,799 --> 00:20:41,280
it really means one uh we recommend an

437
00:20:41,280 --> 00:20:42,480
empty salt value

438
00:20:42,480 --> 00:20:44,080
um you know if you're not going to

439
00:20:44,080 --> 00:20:46,880
rotate your salts then don't use one

440
00:20:46,880 --> 00:20:48,240
it just really doesn't help you if

441
00:20:48,240 --> 00:20:49,520
you're going to rotate your salts then

442
00:20:49,520 --> 00:20:51,280
feel free to go ahead and use one

443
00:20:51,280 --> 00:20:52,799
and then again you know opt out should

444
00:20:52,799 --> 00:20:54,960
really be for large sparse zones

445
00:20:54,960 --> 00:20:57,919
that's not terribly new but we leave it

446
00:20:57,919 --> 00:20:59,200
in there as a recommendation for when

447
00:20:59,200 --> 00:21:01,039
you should turn on that bit

448
00:21:01,039 --> 00:21:03,440
we also have recommendations for when to

449
00:21:03,440 --> 00:21:06,159
win for validating resolvers and this is

450
00:21:06,159 --> 00:21:08,720
a lot of the new stuff of you should

451
00:21:08,720 --> 00:21:10,320
limit insect three iterations to a

452
00:21:10,320 --> 00:21:12,559
maximum of a hundred

453
00:21:12,559 --> 00:21:14,799
you should return a serve fail for

454
00:21:14,799 --> 00:21:16,720
unsupported sizes so if somebody

455
00:21:16,720 --> 00:21:18,559
you know wants 101 and you're validating

456
00:21:18,559 --> 00:21:20,559
resolver then you should return sir fail

457
00:21:20,559 --> 00:21:22,880
and then we added a new ede code to

458
00:21:22,880 --> 00:21:23,600
return

459
00:21:23,600 --> 00:21:25,280
an error so that you can more

460
00:21:25,280 --> 00:21:26,720
appropriately describe why you're

461
00:21:26,720 --> 00:21:28,320
returning a serve fail

462
00:21:28,320 --> 00:21:30,720
i know that the serve fail is likely uh

463
00:21:30,720 --> 00:21:31,919
probably one of the more

464
00:21:31,919 --> 00:21:35,520
argumentative uh pieces of this document

465
00:21:35,520 --> 00:21:38,559
um i'll come back to that in a minute uh

466
00:21:38,559 --> 00:21:40,159
you know none of this is cast in stone

467
00:21:40,159 --> 00:21:41,520
is the way forward of course that's up

468
00:21:41,520 --> 00:21:42,559
to the working group

469
00:21:42,559 --> 00:21:45,280
um so you know the old table the values

470
00:21:45,280 --> 00:21:46,640
on the left and we're basically saying

471
00:21:46,640 --> 00:21:49,360
cap everything in a hundred

472
00:21:49,360 --> 00:21:51,679
so what's next and this is where the

473
00:21:51,679 --> 00:21:53,120
rest of the 15 minutes comes forward

474
00:21:53,120 --> 00:21:54,400
there's really you know two important

475
00:21:54,400 --> 00:21:56,320
questions to ask one is the

476
00:21:56,320 --> 00:21:58,799
document is this document you know or

477
00:21:58,799 --> 00:22:00,000
this tasking

478
00:22:00,000 --> 00:22:01,440
something that the working group is

479
00:22:01,440 --> 00:22:03,440
going to consider adopting

480
00:22:03,440 --> 00:22:05,360
uh clearly again the details are going

481
00:22:05,360 --> 00:22:06,799
to be hammered out on the list so

482
00:22:06,799 --> 00:22:08,480
whether or not you like sir fail or not

483
00:22:08,480 --> 00:22:08,799
is

484
00:22:08,799 --> 00:22:12,080
is probably a different question to

485
00:22:12,080 --> 00:22:14,799
that of is this a problem to be solved

486
00:22:14,799 --> 00:22:15,120
and

487
00:22:15,120 --> 00:22:16,960
you know this is a recognizable problem

488
00:22:16,960 --> 00:22:18,240
and then of course what is the right

489
00:22:18,240 --> 00:22:19,840
track it's actually i think the

490
00:22:19,840 --> 00:22:22,320
the first version i published was a bcp

491
00:22:22,320 --> 00:22:23,760
note that we're putting some shoulds and

492
00:22:23,760 --> 00:22:24,960
other things in there and it really is

493
00:22:24,960 --> 00:22:27,919
updating 51.55 so it seems to me like a

494
00:22:27,919 --> 00:22:29,360
standards track is probably the right

495
00:22:29,360 --> 00:22:30,400
way to go

496
00:22:30,400 --> 00:22:32,320
uh the information wall is even thrown

497
00:22:32,320 --> 00:22:33,520
around at one point

498
00:22:33,520 --> 00:22:34,960
uh so with that that's the end of my

499
00:22:34,960 --> 00:22:36,240
slides and i'll turn it over to the

500
00:22:36,240 --> 00:22:37,120
shares for

501
00:22:37,120 --> 00:22:39,360
a discussion of uh this is something we

502
00:22:39,360 --> 00:22:41,840
want to adopt

503
00:22:44,000 --> 00:22:46,960
thank you thank you wiz um well before

504
00:22:46,960 --> 00:22:47,360
we

505
00:22:47,360 --> 00:22:51,760
ask that question let's first go to

506
00:22:51,919 --> 00:22:56,000
roy the floor is yours please go ahead

507
00:22:56,000 --> 00:23:00,000
um thank you benoit thank you wes um

508
00:23:00,000 --> 00:23:03,520
so a few a few minor things and a big

509
00:23:03,520 --> 00:23:04,320
thing

510
00:23:04,320 --> 00:23:08,960
um from from victor duchovny statistics

511
00:23:08,960 --> 00:23:10,240
and i think you've seen them as well

512
00:23:10,240 --> 00:23:12,720
they're about 14 million if not more

513
00:23:12,720 --> 00:23:15,200
signed zones and the bulk of them about

514
00:23:15,200 --> 00:23:16,400
75

515
00:23:16,400 --> 00:23:19,919
is signed with msec3 so

516
00:23:19,919 --> 00:23:22,159
any change with regards to nsx3

517
00:23:22,159 --> 00:23:23,919
iterations value

518
00:23:23,919 --> 00:23:26,640
is going to impact potentially impact um

519
00:23:26,640 --> 00:23:28,960
a fair amount of signed zones

520
00:23:28,960 --> 00:23:31,360
um you you you also say let's reduce

521
00:23:31,360 --> 00:23:33,120
penalties and then you talk about

522
00:23:33,120 --> 00:23:37,039
survival i'm all about lowering the cap

523
00:23:37,039 --> 00:23:39,360
i i agree that this it's not complex but

524
00:23:39,360 --> 00:23:41,600
costly right it's costly for the

525
00:23:41,600 --> 00:23:42,720
for the resolver and for the

526
00:23:42,720 --> 00:23:45,039
authoritative server i'm happy

527
00:23:45,039 --> 00:23:46,720
happy to go with 100 happy to go even

528
00:23:46,720 --> 00:23:48,240
with 25.

529
00:23:48,240 --> 00:23:51,600
um my issue is with survival and you

530
00:23:51,600 --> 00:23:53,360
probably know this

531
00:23:53,360 --> 00:23:56,960
with rc 5155 we already have a solution

532
00:23:56,960 --> 00:23:59,360
for values that are above the cap and we

533
00:23:59,360 --> 00:24:01,520
treat the zone as unsigned

534
00:24:01,520 --> 00:24:03,360
even if an algorithm is not supported we

535
00:24:03,360 --> 00:24:04,720
treat the zone as enzymes and if a

536
00:24:04,720 --> 00:24:06,559
digest is not reported we treat the zone

537
00:24:06,559 --> 00:24:09,200
as enzymes so this is nothing new

538
00:24:09,200 --> 00:24:12,480
so if an iterations value is unsupported

539
00:24:12,480 --> 00:24:15,200
we should treat the zone as unsigned i'm

540
00:24:15,200 --> 00:24:17,120
happy for the current cap to be lowered

541
00:24:17,120 --> 00:24:20,480
such as the yeah like i said before 25

542
00:24:20,480 --> 00:24:23,679
i just can't can't support survival

543
00:24:23,679 --> 00:24:26,799
and with regards to the other things i

544
00:24:26,799 --> 00:24:27,520
think

545
00:24:27,520 --> 00:24:29,679
reducing the gap is the most important

546
00:24:29,679 --> 00:24:30,559
part of

547
00:24:30,559 --> 00:24:33,520
a potential working group adopted draft

548
00:24:33,520 --> 00:24:34,320
um

549
00:24:34,320 --> 00:24:35,520
i think there's a slight

550
00:24:35,520 --> 00:24:37,520
misunderstanding or maybe

551
00:24:37,520 --> 00:24:40,880
maybe a slightly we could clarify the

552
00:24:40,880 --> 00:24:43,200
purpose of salt a little bit better

553
00:24:43,200 --> 00:24:46,080
and i just think it's a distraction from

554
00:24:46,080 --> 00:24:46,799
all of this

555
00:24:46,799 --> 00:24:48,960
so i wouldn't i wouldn't even discuss

556
00:24:48,960 --> 00:24:50,159
salt um

557
00:24:50,159 --> 00:24:52,400
we wouldn't even discuss opt out it's

558
00:24:52,400 --> 00:24:53,840
not a bcp

559
00:24:53,840 --> 00:24:55,440
i think it's a standard track if you

560
00:24:55,440 --> 00:24:58,480
want to lower the uh the cap value

561
00:24:58,480 --> 00:25:01,200
anyway good work um as you know we've

562
00:25:01,200 --> 00:25:02,799
talked about this before

563
00:25:02,799 --> 00:25:05,120
and um and it's it's just um i'd rather

564
00:25:05,120 --> 00:25:07,279
have um have insecure rather than

565
00:25:07,279 --> 00:25:08,720
survival

566
00:25:08,720 --> 00:25:11,600
thanks thanks rory and and there is a

567
00:25:11,600 --> 00:25:12,320
question of

568
00:25:12,320 --> 00:25:14,240
do we want to narrowly scope it down to

569
00:25:14,240 --> 00:25:15,679
one thing i think

570
00:25:15,679 --> 00:25:17,840
um some additional guidance on

571
00:25:17,840 --> 00:25:19,840
reasonable cell values and when to do

572
00:25:19,840 --> 00:25:20,240
things

573
00:25:20,240 --> 00:25:22,159
operationally you know might be needed

574
00:25:22,159 --> 00:25:24,320
um the opt out is really already in

575
00:25:24,320 --> 00:25:26,320
51.55 so if it becomes standard

576
00:25:26,320 --> 00:25:28,080
track that probably is out of place and

577
00:25:28,080 --> 00:25:30,480
it's no longer looking pcp like

578
00:25:30,480 --> 00:25:32,960
thanks ray

579
00:25:36,400 --> 00:25:43,840
sorry jim please go ahead

580
00:25:44,559 --> 00:25:47,679
um wes you're on the right track here

581
00:25:47,679 --> 00:25:50,000
i think there's a good case to be made

582
00:25:50,000 --> 00:25:51,120
for some

583
00:25:51,120 --> 00:25:53,120
implementation guidelines or deployment

584
00:25:53,120 --> 00:25:55,200
guidelines around this stuff

585
00:25:55,200 --> 00:25:57,279
um the one thing i would say is that the

586
00:25:57,279 --> 00:25:58,559
number 100

587
00:25:58,559 --> 00:26:00,559
sounds a little bit arbitrary to me and

588
00:26:00,559 --> 00:26:02,559
i wonder if you've got any data to back

589
00:26:02,559 --> 00:26:02,880
that

590
00:26:02,880 --> 00:26:05,600
up or maybe maybe we could even use a

591
00:26:05,600 --> 00:26:08,400
low limit on the number of iterations

592
00:26:08,400 --> 00:26:11,840
and yeah and if we have to gather data

593
00:26:11,840 --> 00:26:13,840
perhaps we can get that from some of the

594
00:26:13,840 --> 00:26:15,600
big resolver operators because surely

595
00:26:15,600 --> 00:26:16,799
they can tell us

596
00:26:16,799 --> 00:26:18,960
how often they're seeing these resource

597
00:26:18,960 --> 00:26:20,720
records in the wild

598
00:26:20,720 --> 00:26:22,480
and maybe we get the salt value down to

599
00:26:22,480 --> 00:26:24,240
something even even more

600
00:26:24,240 --> 00:26:26,080
i'm very very worried about this almost

601
00:26:26,080 --> 00:26:27,679
have been since insects

602
00:26:27,679 --> 00:26:29,840
was first suggested because of the

603
00:26:29,840 --> 00:26:31,679
implication it has for the validating

604
00:26:31,679 --> 00:26:33,520
resolvers you could do nasty

605
00:26:33,520 --> 00:26:35,200
denial of service attacks but having

606
00:26:35,200 --> 00:26:38,559
huge values for those salts

607
00:26:38,559 --> 00:26:41,360
all the iterations on the salts thanks

608
00:26:41,360 --> 00:26:41,679
uh

609
00:26:41,679 --> 00:26:46,000
jim we i don't think that i believe

610
00:26:46,000 --> 00:26:47,360
somebody out there actually has numbers

611
00:26:47,360 --> 00:26:48,960
for how long it takes the cpu to

612
00:26:48,960 --> 00:26:50,240
actually calculate you know in

613
00:26:50,240 --> 00:26:52,240
iterations of of

614
00:26:52,240 --> 00:26:54,480
uh shas for insect three specific

615
00:26:54,480 --> 00:26:56,559
records uh that work has been done i

616
00:26:56,559 --> 00:26:58,720
don't have those numbers our victory

617
00:26:58,720 --> 00:26:59,679
companies

618
00:26:59,679 --> 00:27:02,960
and my project on stats.dnstools.org

619
00:27:02,960 --> 00:27:06,480
we do have a list of all of the

620
00:27:06,480 --> 00:27:08,400
zones that exist out there that we know

621
00:27:08,400 --> 00:27:10,400
of with insect three parameters and

622
00:27:10,400 --> 00:27:13,279
the the sizes that they're using uh so

623
00:27:13,279 --> 00:27:13,600
we

624
00:27:13,600 --> 00:27:15,600
do have in information about that

625
00:27:15,600 --> 00:27:17,520
whether a hundred is the right value or

626
00:27:17,520 --> 00:27:17,840
not

627
00:27:17,840 --> 00:27:19,520
is you know to me that's sort of a

628
00:27:19,520 --> 00:27:21,520
reasonable balance of

629
00:27:21,520 --> 00:27:24,320
not ridiculously high and yet you know

630
00:27:24,320 --> 00:27:25,919
still provide some people some room and

631
00:27:25,919 --> 00:27:26,240
there

632
00:27:26,240 --> 00:27:28,880
that is a somewhat reasonable cutoff um

633
00:27:28,880 --> 00:27:30,399
victor can share those numbers at some

634
00:27:30,399 --> 00:27:35,840
point in the future

635
00:27:39,840 --> 00:27:43,120
okay sorry um thank you uh peter peter

636
00:27:43,120 --> 00:27:45,120
thomason

637
00:27:45,120 --> 00:27:48,720
yeah um thunderstorm here i hope you're

638
00:27:48,720 --> 00:27:50,240
not disturbed by the thunder

639
00:27:50,240 --> 00:27:52,000
anyways um and the sun shining at the

640
00:27:52,000 --> 00:27:53,600
same time it's weird um

641
00:27:53,600 --> 00:27:55,840
i have a question or a comment about the

642
00:27:55,840 --> 00:27:57,520
start question or

643
00:27:57,520 --> 00:27:59,360
the the thought issue so i do follow

644
00:27:59,360 --> 00:28:00,640
wes's um

645
00:28:00,640 --> 00:28:02,880
argument that if the zone name is backed

646
00:28:02,880 --> 00:28:04,000
to the

647
00:28:04,000 --> 00:28:06,320
or the full name is backed into the um

648
00:28:06,320 --> 00:28:07,039
hashed

649
00:28:07,039 --> 00:28:08,960
then there is no reason to have a salt

650
00:28:08,960 --> 00:28:10,159
because salts are

651
00:28:10,159 --> 00:28:12,320
to prevent creating a rainbow table

652
00:28:12,320 --> 00:28:14,159
which is mitigated anyways

653
00:28:14,159 --> 00:28:17,279
and i have not heard whether

654
00:28:17,279 --> 00:28:19,679
there's any other arguments from anyone

655
00:28:19,679 --> 00:28:21,120
for keeping assault

656
00:28:21,120 --> 00:28:23,440
so if there's any proponents um i'd be

657
00:28:23,440 --> 00:28:26,320
interested in what the pros would be

658
00:28:26,320 --> 00:28:29,039
well i think if you are adding new names

659
00:28:29,039 --> 00:28:29,600
or if you

660
00:28:29,600 --> 00:28:31,360
have a highly dynamic zone where you're

661
00:28:31,360 --> 00:28:32,880
adding and removing names on a regular

662
00:28:32,880 --> 00:28:34,960
basis then it prevents

663
00:28:34,960 --> 00:28:38,559
uh it it allows more computations for

664
00:28:38,559 --> 00:28:40,799
uh as people are changing from one set

665
00:28:40,799 --> 00:28:43,039
of dictionaries to attack to ear

666
00:28:43,039 --> 00:28:45,200
it once out of zone data to attack to

667
00:28:45,200 --> 00:28:46,880
the next one that they can't just keep

668
00:28:46,880 --> 00:28:48,480
reusing the same thing and they end up

669
00:28:48,480 --> 00:28:49,600
having to

670
00:28:49,600 --> 00:28:53,200
you know recalculate a bunch of of names

671
00:28:53,200 --> 00:28:56,159
to see if the let's say you have a name

672
00:28:56,159 --> 00:28:58,240
called login.you know example.com

673
00:28:58,240 --> 00:29:01,039
right and it doesn't exist today and

674
00:29:01,039 --> 00:29:03,120
you've you've actually calculated the

675
00:29:03,120 --> 00:29:05,440
the the value with the salt that was in

676
00:29:05,440 --> 00:29:06,240
use well

677
00:29:06,240 --> 00:29:08,159
if the salt changes then you have to go

678
00:29:08,159 --> 00:29:09,360
recalculate that

679
00:29:09,360 --> 00:29:13,120
entire hash for the next zone where

680
00:29:13,120 --> 00:29:13,840
you're looking

681
00:29:13,840 --> 00:29:16,080
and waiting for it to appear so there is

682
00:29:16,080 --> 00:29:18,159
some benefit to it if

683
00:29:18,159 --> 00:29:19,840
if you're going to rotate it if you're

684
00:29:19,840 --> 00:29:21,200
not going to rotate it then it really

685
00:29:21,200 --> 00:29:23,120
doesn't help you

686
00:29:23,120 --> 00:29:27,840
got it

687
00:29:30,320 --> 00:29:32,799
okay you yeah there are no other people

688
00:29:32,799 --> 00:29:34,320
in the queue then we come

689
00:29:34,320 --> 00:29:39,520
oh go ahead you have time

690
00:29:39,520 --> 00:29:42,559
sorry last second to hop in here uh

691
00:29:42,559 --> 00:29:44,960
i want to ask have you any stats about

692
00:29:44,960 --> 00:29:47,120
how many domains would actually

693
00:29:47,120 --> 00:29:52,159
uh hit by if we cut off at 100

694
00:29:52,159 --> 00:29:54,399
yes as i mentioned earlier victor has a

695
00:29:54,399 --> 00:29:55,600
good list of

696
00:29:55,600 --> 00:29:57,679
uh domains you know certainly it's

697
00:29:57,679 --> 00:29:59,440
impossible to query the entire planet

698
00:29:59,440 --> 00:30:00,000
but

699
00:30:00,000 --> 00:30:02,480
uh he has a fairly extensive list of of

700
00:30:02,480 --> 00:30:04,320
what domains out there are deploying

701
00:30:04,320 --> 00:30:06,320
what values

702
00:30:06,320 --> 00:30:08,240
so we have that list available to us i

703
00:30:08,240 --> 00:30:09,919
don't have the numbers in my head for

704
00:30:09,919 --> 00:30:11,919
where the percentage cutoffs are but

705
00:30:11,919 --> 00:30:14,240
you know one of the reasons that um a

706
00:30:14,240 --> 00:30:15,440
hundred was picked was

707
00:30:15,440 --> 00:30:17,840
was because of looking at that list and

708
00:30:17,840 --> 00:30:18,640
where where

709
00:30:18,640 --> 00:30:23,840
people were cutting off and falling off

710
00:30:26,000 --> 00:30:29,840
okay jim

711
00:30:29,840 --> 00:30:32,559
please go ahead what's the next steps

712
00:30:32,559 --> 00:30:34,840
are you going to raise your call for

713
00:30:34,840 --> 00:30:36,399
adoption

714
00:30:36,399 --> 00:30:40,480
yeah that was my next step yeah but

715
00:30:40,480 --> 00:30:43,360
well now it began on the list yeah of

716
00:30:43,360 --> 00:30:43,840
course

717
00:30:43,840 --> 00:30:47,440
so i think uh well again the feedback on

718
00:30:47,440 --> 00:30:48,159
the mailing

719
00:30:48,159 --> 00:30:50,799
or here in the room sorry libra i will

720
00:30:50,799 --> 00:30:51,600
come back to you

721
00:30:51,600 --> 00:30:55,520
in 10 seconds i think that's positive

722
00:30:55,520 --> 00:30:58,640
um welcome group adoption we take it

723
00:30:58,640 --> 00:31:00,159
also to the list of course to the

724
00:31:00,159 --> 00:31:01,760
mailing list

725
00:31:01,760 --> 00:31:04,960
with the authors and the co-chairs will

726
00:31:04,960 --> 00:31:07,760
schedule that so that they're not more

727
00:31:07,760 --> 00:31:08,480
than

728
00:31:08,480 --> 00:31:11,679
well one working group adoption a week

729
00:31:11,679 --> 00:31:14,720
something like that is running but i

730
00:31:14,720 --> 00:31:16,559
think the feedback from the room is good

731
00:31:16,559 --> 00:31:19,039
it's positive and i also reading the the

732
00:31:19,039 --> 00:31:19,919
chat

733
00:31:19,919 --> 00:31:22,640
that this kind of uh guidelines for

734
00:31:22,640 --> 00:31:23,360
implementers

735
00:31:23,360 --> 00:31:27,200
is also very useful so indeed thanks

736
00:31:27,200 --> 00:31:31,039
uh libor please therefore joining the

737
00:31:31,039 --> 00:31:32,080
last second

738
00:31:32,080 --> 00:31:34,640
uh just my opinion on the number of

739
00:31:34,640 --> 00:31:36,000
iterations is that

740
00:31:36,000 --> 00:31:38,559
yeah i really much welcome the record

741
00:31:38,559 --> 00:31:40,559
the new recommended value to be around

742
00:31:40,559 --> 00:31:42,559
zero or one

743
00:31:42,559 --> 00:31:44,960
but uh i think that the most important

744
00:31:44,960 --> 00:31:45,600
is the

745
00:31:45,600 --> 00:31:48,720
is the absolute maximum capping because

746
00:31:48,720 --> 00:31:51,600
well this is about security of of body

747
00:31:51,600 --> 00:31:52,399
authoritative

748
00:31:52,399 --> 00:31:54,960
and the records of free service and if

749
00:31:54,960 --> 00:31:55,440
the

750
00:31:55,440 --> 00:31:58,159
attacker wants to like deny of service

751
00:31:58,159 --> 00:31:58,720
attack

752
00:31:58,720 --> 00:32:01,519
some recursive resolver it's up to him

753
00:32:01,519 --> 00:32:04,080
how he choose this

754
00:32:04,080 --> 00:32:07,039
this iteration value so here he can

755
00:32:07,039 --> 00:32:08,720
simply craft

756
00:32:08,720 --> 00:32:11,200
ancestry zone and choose the maximum

757
00:32:11,200 --> 00:32:12,399
number of iterations

758
00:32:12,399 --> 00:32:15,200
and perform this attack so i would be

759
00:32:15,200 --> 00:32:17,200
even glad if we consider

760
00:32:17,200 --> 00:32:20,159
lowering this maximum value which is now

761
00:32:20,159 --> 00:32:21,440
which is now expected at

762
00:32:21,440 --> 00:32:24,480
100 to to much lower like

763
00:32:24,480 --> 00:32:27,200
10 or something something really there

764
00:32:27,200 --> 00:32:28,000
we go because

765
00:32:28,000 --> 00:32:31,440
it's about security of the resolvers and

766
00:32:31,440 --> 00:32:35,919
that's all thanks okay thanks

767
00:32:35,919 --> 00:32:38,880
yeah i saw ray sent by roy but

768
00:32:38,880 --> 00:32:40,880
disappeared again

769
00:32:40,880 --> 00:32:42,480
okay i think thank you for the

770
00:32:42,480 --> 00:32:44,640
discussion uh we take it to the mailing

771
00:32:44,640 --> 00:32:45,679
list

772
00:32:45,679 --> 00:32:47,519
and we also will issue an uh working

773
00:32:47,519 --> 00:32:49,519
group adoption call for adoption on the

774
00:32:49,519 --> 00:32:50,559
mailing list

775
00:32:50,559 --> 00:32:53,279
we'll try and get a cdf uh curve posted

776
00:32:53,279 --> 00:32:54,240
to the list for

777
00:32:54,240 --> 00:32:56,480
where the cutoffs lie and and you know

778
00:32:56,480 --> 00:32:59,039
how what fraction of the existing world

779
00:32:59,039 --> 00:33:00,559
you know are we cutting off by going to

780
00:33:00,559 --> 00:33:04,080
100 we'll post that to the main list

781
00:33:04,159 --> 00:33:07,519
thank you thank you okay

782
00:33:07,519 --> 00:33:10,880
um right okay next up is

783
00:33:10,880 --> 00:33:14,720
ulrich visser um uric do you want to run

784
00:33:14,720 --> 00:33:16,159
your slides your own or

785
00:33:16,159 --> 00:33:18,559
shall i share them you can share this

786
00:33:18,559 --> 00:33:24,880
last piece

787
00:33:24,880 --> 00:33:29,120
and application i know

788
00:33:29,120 --> 00:33:33,199
yeah there you are sure

789
00:33:36,840 --> 00:33:38,240
and

790
00:33:38,240 --> 00:33:41,039
there we are okay please go ahead yes

791
00:33:41,039 --> 00:33:41,519
okay

792
00:33:41,519 --> 00:33:43,279
so hello i'm always from the swedish

793
00:33:43,279 --> 00:33:45,039
internet foundation

794
00:33:45,039 --> 00:33:47,519
and uh so we are running a project

795
00:33:47,519 --> 00:33:48,080
together

796
00:33:48,080 --> 00:33:50,720
with uh steve crocker and schumann

797
00:33:50,720 --> 00:33:52,000
invited us to be part

798
00:33:52,000 --> 00:33:55,440
of a project about uh multisigner

799
00:33:55,440 --> 00:33:58,480
and you might remember uh schumann's rfc

800
00:33:58,480 --> 00:34:00,240
about the multi-signer the nsx models a

801
00:34:00,240 --> 00:34:01,679
few years back

802
00:34:01,679 --> 00:34:03,279
and i have to share a little secret with

803
00:34:03,279 --> 00:34:05,919
you when schumann came first with this

804
00:34:05,919 --> 00:34:06,480
for

805
00:34:06,480 --> 00:34:10,960
the uh rfc i looked at it and i thought

806
00:34:10,960 --> 00:34:13,040
okay there's literally five people on

807
00:34:13,040 --> 00:34:15,760
the planet who are going to run this

808
00:34:15,760 --> 00:34:18,159
who's ever going to need multi signer

809
00:34:18,159 --> 00:34:19,679
and then when we got invited to this

810
00:34:19,679 --> 00:34:20,159
project

811
00:34:20,159 --> 00:34:23,280
it turns out that if you want to change

812
00:34:23,280 --> 00:34:25,599
name server operators without going

813
00:34:25,599 --> 00:34:26,879
insecure

814
00:34:26,879 --> 00:34:30,239
that is exactly what you need to do so

815
00:34:30,239 --> 00:34:32,239
changing name server operators means you

816
00:34:32,239 --> 00:34:34,079
join in a multi-signer group

817
00:34:34,079 --> 00:34:36,480
and then the old operator leaves the

818
00:34:36,480 --> 00:34:37,679
multi-signing group

819
00:34:37,679 --> 00:34:40,159
so basically everybody with a dns exam

820
00:34:40,159 --> 00:34:40,960
domain

821
00:34:40,960 --> 00:34:42,560
is going to want to do this at one point

822
00:34:42,560 --> 00:34:44,079
in time so

823
00:34:44,079 --> 00:34:46,239
you know how this goes with these only

824
00:34:46,239 --> 00:34:48,320
five people on the planet predictions

825
00:34:48,320 --> 00:34:52,000
yeah i made one of these so what are we

826
00:34:52,000 --> 00:34:56,320
working on we uh we want to

827
00:34:56,320 --> 00:34:59,280
let's say the the whole algorithm for

828
00:34:59,280 --> 00:35:00,560
changing

829
00:35:00,560 --> 00:35:04,160
uh name server operators for the nsx

830
00:35:04,160 --> 00:35:05,680
sign domain

831
00:35:05,680 --> 00:35:07,920
is quite complex and i think most people

832
00:35:07,920 --> 00:35:09,839
here in the room will come up with the

833
00:35:09,839 --> 00:35:12,240
correct algorithm and we all have to

834
00:35:12,240 --> 00:35:13,839
think a little bit about the timing and

835
00:35:13,839 --> 00:35:14,960
things

836
00:35:14,960 --> 00:35:16,720
but we all have to you know give it a

837
00:35:16,720 --> 00:35:18,160
good thought and

838
00:35:18,160 --> 00:35:20,640
you know it's not just something we do

839
00:35:20,640 --> 00:35:22,240
on the side

840
00:35:22,240 --> 00:35:24,720
and so it means it's a really complex

841
00:35:24,720 --> 00:35:25,920
operation

842
00:35:25,920 --> 00:35:28,000
and that means that a lot of system

843
00:35:28,000 --> 00:35:30,000
administrators out there will have

844
00:35:30,000 --> 00:35:32,960
problems running it correctly and so i

845
00:35:32,960 --> 00:35:34,560
think this is something that really

846
00:35:34,560 --> 00:35:37,119
should be automated

847
00:35:37,119 --> 00:35:40,079
and so we looked at the how to automate

848
00:35:40,079 --> 00:35:40,960
this

849
00:35:40,960 --> 00:35:45,440
and so and luckily there is a cds cdns

850
00:35:45,440 --> 00:35:46,560
key

851
00:35:46,560 --> 00:35:50,800
and then there is a csync record

852
00:35:50,800 --> 00:35:54,960
and with these we can actually automate

853
00:35:54,960 --> 00:35:57,359
the whole process actually without

854
00:35:57,359 --> 00:35:58,000
involving

855
00:35:58,000 --> 00:36:00,960
going to the registrar giving you know

856
00:36:00,960 --> 00:36:02,800
passing keys along the line and

857
00:36:02,800 --> 00:36:04,320
you all know that the problems we have

858
00:36:04,320 --> 00:36:06,400
with this so this makes

859
00:36:06,400 --> 00:36:10,000
the whole thing solvable uh

860
00:36:10,000 --> 00:36:12,800
from a pure dns perspective and that is

861
00:36:12,800 --> 00:36:14,000
what we're trying to do

862
00:36:14,000 --> 00:36:17,359
we have written here a new draft and we

863
00:36:17,359 --> 00:36:18,400
have started

864
00:36:18,400 --> 00:36:21,680
describing the algorithm and this is

865
00:36:21,680 --> 00:36:23,599
very much a work in progress

866
00:36:23,599 --> 00:36:26,400
so we really would like you all to um

867
00:36:26,400 --> 00:36:27,920
take a good look at it

868
00:36:27,920 --> 00:36:30,800
and come up with you know see what we're

869
00:36:30,800 --> 00:36:32,240
missing or

870
00:36:32,240 --> 00:36:34,240
if we did get any of the timing wrong

871
00:36:34,240 --> 00:36:35,760
and things like that so we

872
00:36:35,760 --> 00:36:38,480
really appreciate help and the next

873
00:36:38,480 --> 00:36:41,839
slide please

874
00:36:42,320 --> 00:36:46,079
yes um and so how would you run this

875
00:36:46,079 --> 00:36:49,200
well in the um the multi-signer dns

876
00:36:49,200 --> 00:36:49,920
models

877
00:36:49,920 --> 00:36:53,599
that schumann described there is this

878
00:36:53,599 --> 00:36:56,800
there's a description of an api and so

879
00:36:56,800 --> 00:36:58,720
with that you would have and like a

880
00:36:58,720 --> 00:37:02,079
centralized version of the multisignup

881
00:37:02,079 --> 00:37:02,960
controller

882
00:37:02,960 --> 00:37:05,440
you would control uh the whole

883
00:37:05,440 --> 00:37:08,240
multi-signer setup from a centralized

884
00:37:08,240 --> 00:37:12,240
software maybe and it would

885
00:37:12,240 --> 00:37:14,640
communicate with all designers involved

886
00:37:14,640 --> 00:37:16,640
through an api

887
00:37:16,640 --> 00:37:19,119
and we actually have implemented this

888
00:37:19,119 --> 00:37:21,119
with

889
00:37:21,119 --> 00:37:24,160
the esec and we tried this with powerdns

890
00:37:24,160 --> 00:37:25,359
through their web api

891
00:37:25,359 --> 00:37:28,400
and this actually works and uh

892
00:37:28,400 --> 00:37:30,079
at this point i was going to say that

893
00:37:30,079 --> 00:37:31,520
yeah powerdns doesn't

894
00:37:31,520 --> 00:37:34,880
support ceasing and we're waiting on

895
00:37:34,880 --> 00:37:36,320
peter to you know employ

896
00:37:36,320 --> 00:37:39,520
to merge but obviously he

897
00:37:39,520 --> 00:37:41,200
he knew that i was going to say this and

898
00:37:41,200 --> 00:37:43,440
merged it today so

899
00:37:43,440 --> 00:37:46,079
we're going to try this next week with

900
00:37:46,079 --> 00:37:47,440
uh even releasing

901
00:37:47,440 --> 00:37:50,720
empower neons um we

902
00:37:50,720 --> 00:37:52,640
actually tried to do it through dynamic

903
00:37:52,640 --> 00:37:53,760
updates

904
00:37:53,760 --> 00:37:57,119
but it turns out that none of the name

905
00:37:57,119 --> 00:37:59,680
server software's available would accept

906
00:37:59,680 --> 00:38:01,040
and dynamic update

907
00:38:01,040 --> 00:38:04,560
dns key record in dynamic update or

908
00:38:04,560 --> 00:38:06,800
cds cdns key record in the dynamic

909
00:38:06,800 --> 00:38:07,839
update

910
00:38:07,839 --> 00:38:11,920
so um this is

911
00:38:11,920 --> 00:38:13,839
not going to work that way or we have to

912
00:38:13,839 --> 00:38:15,440
work out something

913
00:38:15,440 --> 00:38:18,079
and then there is the let's say a

914
00:38:18,079 --> 00:38:20,640
decentralized model that we would say

915
00:38:20,640 --> 00:38:24,800
and that were that the involved signers

916
00:38:24,800 --> 00:38:27,520
name server software would talk to each

917
00:38:27,520 --> 00:38:28,800
other

918
00:38:28,800 --> 00:38:32,800
would collect the uh information needed

919
00:38:32,800 --> 00:38:35,359
and would then publish that information

920
00:38:35,359 --> 00:38:35,839
and

921
00:38:35,839 --> 00:38:38,240
for that obviously that would we would

922
00:38:38,240 --> 00:38:39,280
need to

923
00:38:39,280 --> 00:38:41,599
define some protocol elements in the

924
00:38:41,599 --> 00:38:43,359
future

925
00:38:43,359 --> 00:38:47,839
and so next slide please

926
00:38:49,680 --> 00:38:51,599
yes so we are looking for feedback on

927
00:38:51,599 --> 00:38:52,720
the document

928
00:38:52,720 --> 00:38:55,200
and we would really like to become in

929
00:38:55,200 --> 00:38:57,440
contact with the implementers

930
00:38:57,440 --> 00:39:00,720
and see if we can work make the whole

931
00:39:00,720 --> 00:39:02,000
operation easier

932
00:39:02,000 --> 00:39:04,880
because i can say that we didn't even

933
00:39:04,880 --> 00:39:07,359
manage to get it working

934
00:39:07,359 --> 00:39:10,960
working with command line tools and i

935
00:39:10,960 --> 00:39:13,359
i got work for help from mark andrews

936
00:39:13,359 --> 00:39:15,680
and i still struggling with it so uh

937
00:39:15,680 --> 00:39:19,040
it's not that easy and so yeah

938
00:39:19,040 --> 00:39:22,079
and that's uh i hope for feedback ideas

939
00:39:22,079 --> 00:39:22,400
and

940
00:39:22,400 --> 00:39:25,599
comments thank you

941
00:39:25,680 --> 00:39:28,880
thank you thank you uh jonathan

942
00:39:28,880 --> 00:39:31,839
please go ahead

943
00:39:32,079 --> 00:39:35,359
hey um john reid akamai um i thank you

944
00:39:35,359 --> 00:39:36,720
for this work uh this is

945
00:39:36,720 --> 00:39:38,960
an area where you know we need something

946
00:39:38,960 --> 00:39:41,200
we have the rfcs about best practices

947
00:39:41,200 --> 00:39:42,960
but this is a bit more practical

948
00:39:42,960 --> 00:39:45,599
that's great one of the challenges that

949
00:39:45,599 --> 00:39:46,400
i see in this

950
00:39:46,400 --> 00:39:50,000
is uh it's talking about the zsk and

951
00:39:50,000 --> 00:39:52,240
what you know we do and i i don't know

952
00:39:52,240 --> 00:39:54,079
if you guys do this but what our

953
00:39:54,079 --> 00:39:56,079
customers like is very free

954
00:39:56,079 --> 00:39:57,839
contributions of the zsk and

955
00:39:57,839 --> 00:40:00,000
infinite rotations of the ksk uh which

956
00:40:00,000 --> 00:40:02,240
is part of the point of the ksk

957
00:40:02,240 --> 00:40:05,280
and uh you know some guidance in here

958
00:40:05,280 --> 00:40:06,480
about

959
00:40:06,480 --> 00:40:09,280
whether or not it is advisable to pause

960
00:40:09,280 --> 00:40:09,760
the

961
00:40:09,760 --> 00:40:12,960
csk rotations during this process uh or

962
00:40:12,960 --> 00:40:15,359
or what would be uh yeah some guidance

963
00:40:15,359 --> 00:40:16,560
there would be helpful the other thing

964
00:40:16,560 --> 00:40:17,280
is

965
00:40:17,280 --> 00:40:20,560
see customers who are so hesitant

966
00:40:20,560 --> 00:40:24,000
to make any ds uh updates uh

967
00:40:24,000 --> 00:40:27,440
that in their registrar uh even for ksk

968
00:40:27,440 --> 00:40:29,040
rotations so

969
00:40:29,040 --> 00:40:30,880
part of the challenge you know i think

970
00:40:30,880 --> 00:40:32,240
is establishing some best practices

971
00:40:32,240 --> 00:40:33,760
about how long

972
00:40:33,760 --> 00:40:36,160
this multi-designer group should exist

973
00:40:36,160 --> 00:40:37,200
obviously

974
00:40:37,200 --> 00:40:38,720
you know used to exist for as long as

975
00:40:38,720 --> 00:40:40,000
it's practical but having some

976
00:40:40,000 --> 00:40:41,280
guidelines around

977
00:40:41,280 --> 00:40:43,040
how long this should take and best

978
00:40:43,040 --> 00:40:44,880
practices

979
00:40:44,880 --> 00:40:48,160
helpful um you know i'm sure there's an

980
00:40:48,160 --> 00:40:49,200
argument to be made that those things

981
00:40:49,200 --> 00:40:50,800
don't necessarily belong in that draft i

982
00:40:50,800 --> 00:40:51,280
think

983
00:40:51,280 --> 00:40:54,640
uh from my perspective

984
00:40:56,240 --> 00:40:59,839
yes so i'm just um so the how long the

985
00:40:59,839 --> 00:41:02,960
uh i can't speak to the last point first

986
00:41:02,960 --> 00:41:06,319
and that is how long the uh transition

987
00:41:06,319 --> 00:41:07,359
should take

988
00:41:07,359 --> 00:41:11,280
i think that is more a question of ttls

989
00:41:11,280 --> 00:41:13,599
i mean the you you have to you know the

990
00:41:13,599 --> 00:41:14,960
parent has to pick up the

991
00:41:14,960 --> 00:41:16,960
the new dear set and then you have to

992
00:41:16,960 --> 00:41:18,319
wait um

993
00:41:18,319 --> 00:41:23,359
before you can start to update the nsa

994
00:41:23,359 --> 00:41:25,839
but once the parent has updated the ns

995
00:41:25,839 --> 00:41:27,520
set you

996
00:41:27,520 --> 00:41:31,119
then you can start to to to do the whole

997
00:41:31,119 --> 00:41:33,280
thing again and and try to push out the

998
00:41:33,280 --> 00:41:34,079
old

999
00:41:34,079 --> 00:41:36,960
so um i think that the the process will

1000
00:41:36,960 --> 00:41:38,240
not be fast

1001
00:41:38,240 --> 00:41:42,160
but uh it is very dependent on on ttls

1002
00:41:42,160 --> 00:41:45,200
in the zones and how how often for

1003
00:41:45,200 --> 00:41:45,839
example

1004
00:41:45,839 --> 00:41:48,960
the parent would do the cds and ceasing

1005
00:41:48,960 --> 00:41:50,319
scanning

1006
00:41:50,319 --> 00:41:53,200
right now i know only about on the

1007
00:41:53,200 --> 00:41:54,560
swiss.ch and

1008
00:41:54,560 --> 00:41:57,839
the check dot c is that they do

1009
00:41:57,839 --> 00:42:00,480
the the scanning at at all and they do

1010
00:42:00,480 --> 00:42:01,520
it once a day

1011
00:42:01,520 --> 00:42:05,839
so um it is not immediate

1012
00:42:05,839 --> 00:42:07,440
yeah i meant more having an upper bound

1013
00:42:07,440 --> 00:42:08,960
not not a lower bound

1014
00:42:08,960 --> 00:42:10,319
because i've seen this process take

1015
00:42:10,319 --> 00:42:12,079
months and you know

1016
00:42:12,079 --> 00:42:17,839
yeah of course yes

1017
00:42:19,440 --> 00:42:22,800
okay good what a question

1018
00:42:22,800 --> 00:42:26,880
feedback suggestions

1019
00:42:26,880 --> 00:42:28,720
see there's also a good discussion on

1020
00:42:28,720 --> 00:42:31,839
the jabber

1021
00:42:31,920 --> 00:42:35,040
so going once going twice

1022
00:42:35,040 --> 00:42:38,319
no thank you ulrich um

1023
00:42:38,319 --> 00:42:40,240
looking forward to the next version of

1024
00:42:40,240 --> 00:42:42,319
the draft and

1025
00:42:42,319 --> 00:42:45,359
yeah probably as in july uh we'll see an

1026
00:42:45,359 --> 00:42:47,119
update of the pre of the of the draft

1027
00:42:47,119 --> 00:42:49,200
and the presentation from you

1028
00:42:49,200 --> 00:42:52,079
yeah absolutely and and we're going to

1029
00:42:52,079 --> 00:42:53,680
present a lot of this and

1030
00:42:53,680 --> 00:42:56,000
more practical work we did on at the

1031
00:42:56,000 --> 00:42:56,800
icann

1032
00:42:56,800 --> 00:43:00,240
the asset workshop okay excellent good

1033
00:43:00,240 --> 00:43:03,280
good thank you and yeah thank you

1034
00:43:03,280 --> 00:43:06,640
bye and

1035
00:43:06,640 --> 00:43:10,839
then next is

1036
00:43:10,839 --> 00:43:16,319
sorry i have to check my agenda

1037
00:43:16,470 --> 00:43:19,669
[Music]

1038
00:43:20,400 --> 00:43:23,760
next is i think neil cook will give the

1039
00:43:23,760 --> 00:43:25,680
presentation is that correct

1040
00:43:25,680 --> 00:43:29,440
dennis access the night error page

1041
00:43:29,599 --> 00:43:32,000
neil yeah here there you are uh do you

1042
00:43:32,000 --> 00:43:32,720
want to run

1043
00:43:32,720 --> 00:43:35,680
the slides or shall i share them you can

1044
00:43:35,680 --> 00:43:37,359
run them as any like foresight or

1045
00:43:37,359 --> 00:43:37,920
something

1046
00:43:37,920 --> 00:43:41,839
yeah i will do that

1047
00:43:42,720 --> 00:43:45,040
yes

1048
00:43:50,640 --> 00:43:54,960
okay there we are okay so um

1049
00:43:54,960 --> 00:43:56,960
so this is really about uh just

1050
00:43:56,960 --> 00:43:58,000
addressing the

1051
00:43:58,000 --> 00:44:01,920
feedback in the last uh interim session

1052
00:44:01,920 --> 00:44:04,720
so um

1053
00:44:05,680 --> 00:44:07,280
i'm not going to cover like what it does

1054
00:44:07,280 --> 00:44:08,800
just just the comments that were that

1055
00:44:08,800 --> 00:44:10,480
were

1056
00:44:10,480 --> 00:44:12,240
that were given to us since then so

1057
00:44:12,240 --> 00:44:13,839
forget the next slide

1058
00:44:13,839 --> 00:44:16,240
um just just to read just to recap what

1059
00:44:16,240 --> 00:44:17,200
this is this is a

1060
00:44:17,200 --> 00:44:20,240
basically an error page uri

1061
00:44:20,240 --> 00:44:22,960
excuse me that you can send as a as a

1062
00:44:22,960 --> 00:44:24,319
dns resolver

1063
00:44:24,319 --> 00:44:27,119
uh in conjunction with the the various

1064
00:44:27,119 --> 00:44:27,680
filtered

1065
00:44:27,680 --> 00:44:29,839
error codes or the error codes extended

1066
00:44:29,839 --> 00:44:30,960
error codes which are related to

1067
00:44:30,960 --> 00:44:32,400
filtering

1068
00:44:32,400 --> 00:44:35,200
um to give to give users more

1069
00:44:35,200 --> 00:44:36,640
information about why something was

1070
00:44:36,640 --> 00:44:38,960
filtered

1071
00:44:38,960 --> 00:44:41,280
so there were two main comments raised

1072
00:44:41,280 --> 00:44:42,560
by the working group

1073
00:44:42,560 --> 00:44:46,319
um so one is uh why not use the extra

1074
00:44:46,319 --> 00:44:48,400
text field to communicate this that's

1075
00:44:48,400 --> 00:44:50,079
already in ee

1076
00:44:50,079 --> 00:44:51,599
and the second one is well why do you

1077
00:44:51,599 --> 00:44:53,680
have a signature field in in the

1078
00:44:53,680 --> 00:44:55,839
option so i'll just cover these on the

1079
00:44:55,839 --> 00:44:59,920
next couple of slides so next slide

1080
00:45:01,680 --> 00:45:03,920
so the extra text field in extended

1081
00:45:03,920 --> 00:45:05,119
error codes

1082
00:45:05,119 --> 00:45:08,240
is not authenticated so it it can be

1083
00:45:08,240 --> 00:45:10,960
spoofed there's no way to display

1084
00:45:10,960 --> 00:45:12,480
anything in a language which is

1085
00:45:12,480 --> 00:45:15,359
under which is what you obviously you

1086
00:45:15,359 --> 00:45:16,560
can do with the uri because

1087
00:45:16,560 --> 00:45:18,560
because web pages you can you can give

1088
00:45:18,560 --> 00:45:19,920
people the language that they

1089
00:45:19,920 --> 00:45:22,800
they want uh it displays the source of

1090
00:45:22,800 --> 00:45:24,319
the error not necessarily the cause of

1091
00:45:24,319 --> 00:45:25,359
the error

1092
00:45:25,359 --> 00:45:27,920
so um it's it's essentially it's not

1093
00:45:27,920 --> 00:45:29,920
practical for what we want to do

1094
00:45:29,920 --> 00:45:31,520
the idea behind this is that we give a

1095
00:45:31,520 --> 00:45:33,520
uri which then can have a web page which

1096
00:45:33,520 --> 00:45:35,760
is easily renderable by a user

1097
00:45:35,760 --> 00:45:38,800
whereby users browse or whatever and it

1098
00:45:38,800 --> 00:45:40,720
can actually display useful information

1099
00:45:40,720 --> 00:45:43,680
potentially in multiple languages so

1100
00:45:43,680 --> 00:45:45,200
that's why extra text

1101
00:45:45,200 --> 00:45:48,400
isn't suitable for this

1102
00:45:48,400 --> 00:45:49,920
i don't know if anyone has any comments

1103
00:45:49,920 --> 00:45:52,880
on that before i move on

1104
00:45:54,720 --> 00:45:59,279
this slide yeah next slide okay

1105
00:45:59,680 --> 00:46:01,359
uh the next comment was about well why

1106
00:46:01,359 --> 00:46:03,440
do we have a signature well clearly

1107
00:46:03,440 --> 00:46:06,160
the error the uh the ui template that we

1108
00:46:06,160 --> 00:46:06,640
passed

1109
00:46:06,640 --> 00:46:09,680
back in this um could be spoofed

1110
00:46:09,680 --> 00:46:12,720
um right so it's it's it's so

1111
00:46:12,720 --> 00:46:15,359
we mandate that it has to be uh

1112
00:46:15,359 --> 00:46:17,040
propagated and processed over

1113
00:46:17,040 --> 00:46:20,480
an over authenticated and encrypted

1114
00:46:20,480 --> 00:46:24,160
connection um so that's really important

1115
00:46:24,160 --> 00:46:27,119
um but you also want to make sure that

1116
00:46:27,119 --> 00:46:27,680
this

1117
00:46:27,680 --> 00:46:30,400
is is what the resolver wanted to give

1118
00:46:30,400 --> 00:46:31,839
you the thing you're talking to wanted

1119
00:46:31,839 --> 00:46:33,200
to give you that it trusts it

1120
00:46:33,200 --> 00:46:34,640
and not something that it receives from

1121
00:46:34,640 --> 00:46:36,800
downstream which might have been

1122
00:46:36,800 --> 00:46:38,800
um or upstream whichever way you look at

1123
00:46:38,800 --> 00:46:42,640
it which might have been uh

1124
00:46:42,640 --> 00:46:46,240
subject to an attack so what we do is we

1125
00:46:46,240 --> 00:46:47,839
say well no matter where it came from

1126
00:46:47,839 --> 00:46:51,440
the uh the thing that you're talking to

1127
00:46:51,440 --> 00:46:52,160
has to

1128
00:46:52,160 --> 00:46:53,839
validate that what it's got whether it's

1129
00:46:53,839 --> 00:46:56,160
generated itself this is fine or if it's

1130
00:46:56,160 --> 00:46:58,000
got it from somewhere else it has to

1131
00:46:58,000 --> 00:46:59,760
validate that it trusts that

1132
00:46:59,760 --> 00:47:01,599
and then either generate the signature

1133
00:47:01,599 --> 00:47:03,359
itself or regenerate the signature if it

1134
00:47:03,359 --> 00:47:05,359
came from somewhere else

1135
00:47:05,359 --> 00:47:07,760
so um which which and essentially that

1136
00:47:07,760 --> 00:47:08,880
signature is then

1137
00:47:08,880 --> 00:47:11,680
signed in the same way so with the key

1138
00:47:11,680 --> 00:47:13,839
that you're useful

1139
00:47:13,839 --> 00:47:15,839
for tls so that you can verify the

1140
00:47:15,839 --> 00:47:17,440
signature

1141
00:47:17,440 --> 00:47:19,520
so the idea behind this is then if the

1142
00:47:19,520 --> 00:47:21,040
signature validation fails then you

1143
00:47:21,040 --> 00:47:23,040
don't go and go to an insecure page

1144
00:47:23,040 --> 00:47:24,400
which may have been created by an

1145
00:47:24,400 --> 00:47:25,760
attacker

1146
00:47:25,760 --> 00:47:28,559
which you definitely don't want to do so

1147
00:47:28,559 --> 00:47:30,079
that's the reason for the

1148
00:47:30,079 --> 00:47:32,400
uh for the for the signature so that you

1149
00:47:32,400 --> 00:47:34,559
can essentially validate that this uri

1150
00:47:34,559 --> 00:47:37,599
is this uri template is actually

1151
00:47:37,599 --> 00:47:38,000
something

1152
00:47:38,000 --> 00:47:40,880
you want to go to and it can be trusted

1153
00:47:40,880 --> 00:47:42,000
so the idea is

1154
00:47:42,000 --> 00:47:43,599
if the resolver that you're talking to

1155
00:47:43,599 --> 00:47:45,440
trusts it then then

1156
00:47:45,440 --> 00:47:48,240
you can trust it

1157
00:47:51,040 --> 00:47:54,160
yeah next slide

1158
00:47:56,800 --> 00:47:59,440
uh and so obviously we specify that uh

1159
00:47:59,440 --> 00:48:01,440
that

1160
00:48:01,440 --> 00:48:04,160
if the forwarded if something's

1161
00:48:04,160 --> 00:48:04,880
forwarding

1162
00:48:04,880 --> 00:48:08,079
um this and and doesn't recognize it so

1163
00:48:08,079 --> 00:48:09,599
there's a forwarder forwards it onto

1164
00:48:09,599 --> 00:48:10,720
something which then gives it to the

1165
00:48:10,720 --> 00:48:11,760
client

1166
00:48:11,760 --> 00:48:13,839
obviously the signature is not going to

1167
00:48:13,839 --> 00:48:15,680
be correct because the

1168
00:48:15,680 --> 00:48:17,760
the forwarder hasn't generated the

1169
00:48:17,760 --> 00:48:19,440
signature so the signature has to be

1170
00:48:19,440 --> 00:48:20,559
generated by the thing that you're

1171
00:48:20,559 --> 00:48:21,920
talking to and not something

1172
00:48:21,920 --> 00:48:25,040
sort of downstream from that so that's

1173
00:48:25,040 --> 00:48:26,079
the idea

1174
00:48:26,079 --> 00:48:30,319
um these are the only two comments that

1175
00:48:30,319 --> 00:48:32,240
i think that are relevant so

1176
00:48:32,240 --> 00:48:35,200
i'd be interested if if there's anything

1177
00:48:35,200 --> 00:48:38,160
else on this draft

1178
00:48:42,720 --> 00:48:45,919
i think ben has a comment

1179
00:48:47,359 --> 00:48:50,000
so uh on the signature i'm a little

1180
00:48:50,000 --> 00:48:51,920
confused what name

1181
00:48:51,920 --> 00:48:54,960
is the is the client

1182
00:48:54,960 --> 00:48:56,880
validating the signature against every

1183
00:48:56,880 --> 00:48:58,400
dns signature

1184
00:48:58,400 --> 00:49:03,520
is is for a domain name

1185
00:49:03,520 --> 00:49:07,680
uh well it's

1186
00:49:07,680 --> 00:49:09,760
it's essentially using the same keying

1187
00:49:09,760 --> 00:49:11,200
material that's being used for

1188
00:49:11,200 --> 00:49:15,280
tls but if i'm

1189
00:49:15,280 --> 00:49:19,280
uh okay

1190
00:49:19,280 --> 00:49:22,160
um so if i remember right a previous

1191
00:49:22,160 --> 00:49:24,800
version of this draft

1192
00:49:24,800 --> 00:49:27,839
specified that the the error page had to

1193
00:49:27,839 --> 00:49:29,040
be served

1194
00:49:29,040 --> 00:49:33,839
from the same tls authority

1195
00:49:33,839 --> 00:49:37,440
as the um as the dns connection was

1196
00:49:37,440 --> 00:49:38,079
using

1197
00:49:38,079 --> 00:49:41,520
so if i was connected to

1198
00:49:41,520 --> 00:49:44,559
an encrypted dns connection to some

1199
00:49:44,559 --> 00:49:47,040
dns server that i know by its name then

1200
00:49:47,040 --> 00:49:47,839
i can

1201
00:49:47,839 --> 00:49:50,319
just check that the url uses the same

1202
00:49:50,319 --> 00:49:51,760
domain name

1203
00:49:51,760 --> 00:49:55,839
um is that i think

1204
00:49:55,839 --> 00:49:57,280
that's changed because we want we don't

1205
00:49:57,280 --> 00:49:59,200
want it unnecessary you could go to

1206
00:49:59,200 --> 00:50:01,839
another we don't want to restrict it to

1207
00:50:01,839 --> 00:50:04,319
necessarily the same domain name

1208
00:50:04,319 --> 00:50:05,920
so okay i think it's important to

1209
00:50:05,920 --> 00:50:09,040
restrict it to the same domain name

1210
00:50:09,040 --> 00:50:10,720
not only because it drastically

1211
00:50:10,720 --> 00:50:12,240
simplifies this question

1212
00:50:12,240 --> 00:50:15,280
of trying to figure out whether the

1213
00:50:15,280 --> 00:50:17,200
you're talking to the right party but

1214
00:50:17,200 --> 00:50:19,040
also because

1215
00:50:19,040 --> 00:50:22,880
uh if we can substitute any domain name

1216
00:50:22,880 --> 00:50:24,559
then we reopen

1217
00:50:24,559 --> 00:50:28,640
a vast array of questions around

1218
00:50:28,640 --> 00:50:32,640
around the potential for phishing i can

1219
00:50:32,640 --> 00:50:35,440
direct the user to an error page that

1220
00:50:35,440 --> 00:50:36,079
clones

1221
00:50:36,079 --> 00:50:38,559
facebook.com and uses a domain name that

1222
00:50:38,559 --> 00:50:42,000
closely resembles facebook.com

1223
00:50:42,000 --> 00:50:45,280
so i

1224
00:50:45,280 --> 00:50:46,880
uh yeah i think that we should stick

1225
00:50:46,880 --> 00:50:49,200
with that model but to step back

1226
00:50:49,200 --> 00:50:52,480
one level here i think for this draft to

1227
00:50:52,480 --> 00:50:54,559
make progress we really need

1228
00:50:54,559 --> 00:50:56,640
to see some client-side implementer

1229
00:50:56,640 --> 00:50:58,720
interest and really i think that

1230
00:50:58,720 --> 00:51:00,400
it shouldn't you know in terms of

1231
00:51:00,400 --> 00:51:02,079
working group adoption i think that it

1232
00:51:02,079 --> 00:51:03,520
shouldn't be adopted

1233
00:51:03,520 --> 00:51:07,599
unless basically we can find a co-author

1234
00:51:07,599 --> 00:51:10,800
who is a who essentially represents the

1235
00:51:10,800 --> 00:51:12,079
client-side implementation

1236
00:51:12,079 --> 00:51:13,839
interest or has has deep knowledge of

1237
00:51:13,839 --> 00:51:16,160
that because

1238
00:51:16,160 --> 00:51:19,440
the the proposals here for security to

1239
00:51:19,440 --> 00:51:21,119
do this securely on the client

1240
00:51:21,119 --> 00:51:24,400
require tremendously invasive really

1241
00:51:24,400 --> 00:51:27,119
almost re-architecture of the browser

1242
00:51:27,119 --> 00:51:28,240
security model

1243
00:51:28,240 --> 00:51:30,240
it requires an entirely new concept of

1244
00:51:30,240 --> 00:51:31,680
an isolated

1245
00:51:31,680 --> 00:51:35,359
page in ways that couple into w3c

1246
00:51:35,359 --> 00:51:36,960
specifications about

1247
00:51:36,960 --> 00:51:40,640
how web pages interact so

1248
00:51:40,640 --> 00:51:44,079
i think the level of complexity has is a

1249
00:51:44,079 --> 00:51:45,359
little bit out of control

1250
00:51:45,359 --> 00:51:48,480
and i haven't seen really

1251
00:51:48,480 --> 00:51:52,480
any any confirmed interest there

1252
00:51:58,319 --> 00:52:00,319
okay i think tyra has some his coworker

1253
00:52:00,319 --> 00:52:02,559
he i think he has some comments on that

1254
00:52:02,559 --> 00:52:06,160
but in general i agree sorry yeah uh

1255
00:52:06,160 --> 00:52:08,480
so to address your comments right well

1256
00:52:08,480 --> 00:52:10,559
the first one was related to

1257
00:52:10,559 --> 00:52:12,800
uh uh what if you get a phishing page

1258
00:52:12,800 --> 00:52:13,599
right so

1259
00:52:13,599 --> 00:52:17,040
uh graph takes the uh the principle in

1260
00:52:17,040 --> 00:52:18,000
the draft uses

1261
00:52:18,000 --> 00:52:19,760
a technique similar to what we see in

1262
00:52:19,760 --> 00:52:21,119
captive portal that

1263
00:52:21,119 --> 00:52:24,240
uh that page is treated as an unrested

1264
00:52:24,240 --> 00:52:25,839
page and displayed in an isolated

1265
00:52:25,839 --> 00:52:27,040
environment

1266
00:52:27,040 --> 00:52:29,920
uh without any uh uh user input so

1267
00:52:29,920 --> 00:52:31,920
that's one way to prevent that attacks

1268
00:52:31,920 --> 00:52:32,480
and

1269
00:52:32,480 --> 00:52:35,119
uh the signature is basically generated

1270
00:52:35,119 --> 00:52:35,680
by the

1271
00:52:35,680 --> 00:52:38,160
dls server certificates private key so

1272
00:52:38,160 --> 00:52:39,680
the client would know that it's actually

1273
00:52:39,680 --> 00:52:41,440
coming from the

1274
00:52:41,440 --> 00:52:45,040
dns resolver and not from anybody else

1275
00:52:45,040 --> 00:52:46,079
upstream or

1276
00:52:46,079 --> 00:52:48,640
or uh it doesn't understand the option

1277
00:52:48,640 --> 00:52:49,520
and just uh

1278
00:52:49,520 --> 00:52:51,599
sending the option so it's it's actually

1279
00:52:51,599 --> 00:52:53,280
providing uh data origin authentication

1280
00:52:53,280 --> 00:52:55,040
that it's actually coming from the

1281
00:52:55,040 --> 00:52:58,480
dls server that it is talking to

1282
00:52:59,119 --> 00:53:02,240
i i guess i guess ben's point is that

1283
00:53:02,240 --> 00:53:04,480
you may trust this dns server for dns

1284
00:53:04,480 --> 00:53:06,480
requests but you may not trust it to

1285
00:53:06,480 --> 00:53:07,520
send you to a

1286
00:53:07,520 --> 00:53:10,000
web page right i guess that's the point

1287
00:53:10,000 --> 00:53:12,480
you're thinking

1288
00:53:12,720 --> 00:53:15,520
uh yeah and i also on that signature

1289
00:53:15,520 --> 00:53:15,839
scheme

1290
00:53:15,839 --> 00:53:17,760
specifically i want to comment that the

1291
00:53:17,760 --> 00:53:19,440
the server-side implementation

1292
00:53:19,440 --> 00:53:20,559
difficulty of this

1293
00:53:20,559 --> 00:53:24,480
is also kind of huge uh

1294
00:53:24,480 --> 00:53:27,359
there are there are many cases where the

1295
00:53:27,359 --> 00:53:28,240
the server

1296
00:53:28,240 --> 00:53:31,599
operator literally has no way to satisfy

1297
00:53:31,599 --> 00:53:33,839
this requirement because the tls

1298
00:53:33,839 --> 00:53:36,319
front-end serving infrastructure is

1299
00:53:36,319 --> 00:53:38,079
thoroughly decoupled

1300
00:53:38,079 --> 00:53:41,280
from the uh from

1301
00:53:41,280 --> 00:53:45,200
the the dns answer generation

1302
00:53:45,200 --> 00:53:47,119
yeah that's a good point uh then so if

1303
00:53:47,119 --> 00:53:48,880
you see the draft it's uh

1304
00:53:48,880 --> 00:53:50,720
it's just the uri template and the

1305
00:53:50,720 --> 00:53:53,119
signature is the static signature so

1306
00:53:53,119 --> 00:53:55,280
uh uh it doesn't change with every

1307
00:53:55,280 --> 00:53:56,240
domain so it's

1308
00:53:56,240 --> 00:54:00,000
it's it's a fixed uh data over which the

1309
00:54:00,000 --> 00:54:01,760
signature is generated so even in case

1310
00:54:01,760 --> 00:54:02,559
of uh

1311
00:54:02,559 --> 00:54:04,960
dls traffic offloading uh the signature

1312
00:54:04,960 --> 00:54:06,720
is not gonna change for every

1313
00:54:06,720 --> 00:54:10,559
uh domain that is getting blocked

1314
00:54:10,559 --> 00:54:14,880
uh so i can understand

1315
00:54:14,880 --> 00:54:16,880
i understand what you're saying here but

1316
00:54:16,880 --> 00:54:18,720
but it still assumes

1317
00:54:18,720 --> 00:54:21,440
that the signer has access to the tls

1318
00:54:21,440 --> 00:54:23,040
private key in order to generate

1319
00:54:23,040 --> 00:54:24,079
contents that show

1320
00:54:24,079 --> 00:54:26,960
up in the dns data stream necessarily

1321
00:54:26,960 --> 00:54:30,079
does not have to for example if uh

1322
00:54:30,079 --> 00:54:31,760
there is a load balancer which is doing

1323
00:54:31,760 --> 00:54:33,599
tailors offloading

1324
00:54:33,599 --> 00:54:35,920
those signatures can be generated by the

1325
00:54:35,920 --> 00:54:37,599
uh

1326
00:54:37,599 --> 00:54:39,280
by the backend server and hand it over

1327
00:54:39,280 --> 00:54:40,960
to the front-end server so

1328
00:54:40,960 --> 00:54:42,319
it's just a static piece of

1329
00:54:42,319 --> 00:54:44,799
configuration

1330
00:54:44,799 --> 00:54:47,119
yes but so it at a minimum requires a

1331
00:54:47,119 --> 00:54:49,200
new kind of communication between

1332
00:54:49,200 --> 00:54:51,040
the entity that holds your tls private

1333
00:54:51,040 --> 00:54:53,200
key that's being used for the session

1334
00:54:53,200 --> 00:54:56,240
and the dns generation

1335
00:54:56,240 --> 00:55:00,240
yeah but i think probably more

1336
00:55:00,240 --> 00:55:03,359
more importantly from ben's comments is

1337
00:55:03,359 --> 00:55:06,000
is getting someone on the client side

1338
00:55:06,000 --> 00:55:07,200
interested in this because i think we

1339
00:55:07,200 --> 00:55:08,000
can kind of

1340
00:55:08,000 --> 00:55:09,440
tease out more of these issues if we

1341
00:55:09,440 --> 00:55:11,119
have got someone from

1342
00:55:11,119 --> 00:55:12,480
from one of the browser vendors for

1343
00:55:12,480 --> 00:55:14,400
example who's interested in co-authoring

1344
00:55:14,400 --> 00:55:21,680
this or contributing to this so

1345
00:55:21,680 --> 00:55:25,359
okay thank you

1346
00:55:25,359 --> 00:55:30,640
any other comments questions

1347
00:55:32,839 --> 00:55:36,079
no um

1348
00:55:36,079 --> 00:55:40,160
yeah so back to the last slide you need

1349
00:55:40,160 --> 00:55:41,920
consider uh consider working group

1350
00:55:41,920 --> 00:55:42,880
adoption

1351
00:55:42,880 --> 00:55:45,920
i think given the feedback and comments

1352
00:55:45,920 --> 00:55:48,400
from ben

1353
00:55:48,799 --> 00:55:51,200
and i understand this that you well

1354
00:55:51,200 --> 00:55:52,559
you're already on

1355
00:55:52,559 --> 00:55:56,480
version six so it takes already some

1356
00:55:56,480 --> 00:55:58,240
time

1357
00:55:58,240 --> 00:56:00,799
but i rather have further discussion on

1358
00:56:00,799 --> 00:56:02,000
this on these issues

1359
00:56:02,000 --> 00:56:03,520
then then we start our work in group

1360
00:56:03,520 --> 00:56:06,160
adoption i feel it's too early for

1361
00:56:06,160 --> 00:56:09,599
for this call to the working group

1362
00:56:09,599 --> 00:56:12,240
and also there hasn't been in the well

1363
00:56:12,240 --> 00:56:14,319
at the start there was some discussion

1364
00:56:14,319 --> 00:56:16,319
on the mailing list but i haven't

1365
00:56:16,319 --> 00:56:18,319
checked recently but i think in the last

1366
00:56:18,319 --> 00:56:19,839
month or maybe half year

1367
00:56:19,839 --> 00:56:22,400
there was not much discussion on the on

1368
00:56:22,400 --> 00:56:23,440
the draft

1369
00:56:23,440 --> 00:56:25,200
so although also the working group

1370
00:56:25,200 --> 00:56:27,680
involvement should really

1371
00:56:27,680 --> 00:56:30,960
increase here

1372
00:56:30,960 --> 00:56:33,680
and i think well given the suggestions

1373
00:56:33,680 --> 00:56:34,240
from ben

1374
00:56:34,240 --> 00:56:37,440
and the feedback i'm looking

1375
00:56:37,440 --> 00:56:40,079
forward to the next version and

1376
00:56:40,079 --> 00:56:41,440
increased

1377
00:56:41,440 --> 00:56:43,920
working group involvement in the

1378
00:56:43,920 --> 00:56:45,680
discussion

1379
00:56:45,680 --> 00:56:49,200
um do you have

1380
00:56:49,200 --> 00:56:52,000
some other questions remarks to the

1381
00:56:52,000 --> 00:56:53,920
chairs or to the working group

1382
00:56:53,920 --> 00:56:56,400
i think one of the potential issues is

1383
00:56:56,400 --> 00:56:57,760
is that this is quite

1384
00:56:57,760 --> 00:57:01,359
this is of interest to people uh

1385
00:57:01,359 --> 00:57:04,799
potentially running uh great browsers or

1386
00:57:04,799 --> 00:57:05,680
whatever or

1387
00:57:05,680 --> 00:57:08,480
people who run who run systems doing

1388
00:57:08,480 --> 00:57:10,079
filtering so they can have better user

1389
00:57:10,079 --> 00:57:11,920
experience and i don't know how much

1390
00:57:11,920 --> 00:57:13,680
overlap there is with dns op

1391
00:57:13,680 --> 00:57:16,079
in those people so that could be one

1392
00:57:16,079 --> 00:57:17,839
reason for the

1393
00:57:17,839 --> 00:57:20,319
comments in on this draft and maybe

1394
00:57:20,319 --> 00:57:23,119
potentially yes

1395
00:57:23,119 --> 00:57:25,520
okay this is a good point so maybe also

1396
00:57:25,520 --> 00:57:28,400
the chairs can

1397
00:57:28,960 --> 00:57:30,319
discuss this with you and with the

1398
00:57:30,319 --> 00:57:33,359
authors uh to find an other audience

1399
00:57:33,359 --> 00:57:34,040
maybe or

1400
00:57:34,040 --> 00:57:38,400
a second audience to discuss this

1401
00:57:38,400 --> 00:57:40,559
yeah i think it's important to get

1402
00:57:40,559 --> 00:57:42,079
multiple groups looking at this

1403
00:57:42,079 --> 00:57:45,440
this is not purely the nsop thing

1404
00:57:45,440 --> 00:57:49,520
and we've been getting better at

1405
00:57:49,520 --> 00:57:50,880
being able to coordinate with chairs of

1406
00:57:50,880 --> 00:57:52,720
other other working groups and

1407
00:57:52,720 --> 00:57:55,760
and so on but this this uh this does

1408
00:57:55,760 --> 00:57:56,960
need the broader

1409
00:57:56,960 --> 00:57:59,359
review

1410
00:58:00,720 --> 00:58:04,240
thank you so uh neil and uh and uh

1411
00:58:04,240 --> 00:58:07,040
tori uh we will get in contact with you

1412
00:58:07,040 --> 00:58:08,799
how to proceed and

1413
00:58:08,799 --> 00:58:11,839
find another or second audience for to

1414
00:58:11,839 --> 00:58:13,359
review or to read and review the

1415
00:58:13,359 --> 00:58:15,520
document

1416
00:58:15,520 --> 00:58:18,480
okay thank you

1417
00:58:19,920 --> 00:58:24,160
let's see next up is roy

1418
00:58:24,400 --> 00:58:28,160
if i'm correct again

1419
00:58:28,799 --> 00:58:31,440
i can't see my agenda but i have

1420
00:58:31,440 --> 00:58:34,559
everything sorted out

1421
00:58:34,640 --> 00:58:37,920
yep that's right yeah it is yeah

1422
00:58:37,920 --> 00:58:41,520
yeah excellent roy is already there

1423
00:58:41,520 --> 00:58:50,480
uh i will share my screen

1424
00:58:50,480 --> 00:58:51,920
all right i've got a whopping amount of

1425
00:58:51,920 --> 00:58:53,520
slides and i'll let you uh

1426
00:58:53,520 --> 00:58:56,720
yeah yeah and let you go through it ah

1427
00:58:56,720 --> 00:58:57,520
you give it away

1428
00:58:57,520 --> 00:59:00,559
all right yeah there we are

1429
00:59:00,559 --> 00:59:02,960
okay so there's two two parts to this um

1430
00:59:02,960 --> 00:59:05,280
sorry go ahead guys

1431
00:59:05,280 --> 00:59:08,480
the floor is yours please go ahead

1432
00:59:08,480 --> 00:59:12,240
um thank you benno suzanne and tim um so

1433
00:59:12,240 --> 00:59:15,839
um i'll first give you a um a recap

1434
00:59:15,839 --> 00:59:18,400
what i'm talking about and what we've

1435
00:59:18,400 --> 00:59:19,599
been doing since last

1436
00:59:19,599 --> 00:59:23,680
um the last itf 109 and the second slide

1437
00:59:23,680 --> 00:59:25,520
will be about what is hopefully going to

1438
00:59:25,520 --> 00:59:27,359
happen and

1439
00:59:27,359 --> 00:59:29,440
so what i'm talking about draft errands

1440
00:59:29,440 --> 00:59:31,680
dns error reporting

1441
00:59:31,680 --> 00:59:34,079
i happen to be a co-author my other

1442
00:59:34,079 --> 00:59:35,119
co-author is

1443
00:59:35,119 --> 00:59:38,160
matt larson the idea is basically that

1444
00:59:38,160 --> 00:59:40,480
dns resolvers when they encounter an

1445
00:59:40,480 --> 00:59:41,119
error

1446
00:59:41,119 --> 00:59:43,680
instead of burying instead of just

1447
00:59:43,680 --> 00:59:46,079
burying the error in the log

1448
00:59:46,079 --> 00:59:49,200
they can maybe communicate this with the

1449
00:59:49,200 --> 00:59:51,520
owner of that domain that's failing

1450
00:59:51,520 --> 00:59:53,839
or the operator of the authoritative

1451
00:59:53,839 --> 00:59:54,960
server

1452
00:59:54,960 --> 00:59:57,440
and the draft describes a method on how

1453
00:59:57,440 --> 00:59:59,839
to do this

1454
00:59:59,839 --> 01:00:02,559
um this was first communicated a while

1455
01:00:02,559 --> 01:00:04,079
back to um to a few

1456
01:00:04,079 --> 01:00:07,520
um colleagues um who actually

1457
01:00:07,520 --> 01:00:10,480
write um dns software who know more

1458
01:00:10,480 --> 01:00:10,880
about

1459
01:00:10,880 --> 01:00:13,599
dns operations than i ever would and who

1460
01:00:13,599 --> 01:00:16,640
have large customer bases etc etc

1461
01:00:16,640 --> 01:00:18,640
and they didn't immediately run away

1462
01:00:18,640 --> 01:00:21,599
screaming so which is a good sign

1463
01:00:21,599 --> 01:00:24,880
so i i call that overall positive

1464
01:00:24,880 --> 01:00:27,440
then i asked during the last its

1465
01:00:27,440 --> 01:00:28,000
hackathon

1466
01:00:28,000 --> 01:00:32,640
109 if some folks would like to

1467
01:00:32,640 --> 01:00:36,240
implement this we have one

1468
01:00:36,240 --> 01:00:37,839
implementation the server side is

1469
01:00:37,839 --> 01:00:40,160
implemented and just as a proof of

1470
01:00:40,160 --> 01:00:41,440
concept nothing is in

1471
01:00:41,440 --> 01:00:43,359
nothing is them in stable code or

1472
01:00:43,359 --> 01:00:44,720
anything

1473
01:00:44,720 --> 01:00:47,520
so with with a proof of concept

1474
01:00:47,520 --> 01:00:48,880
implementation on server side

1475
01:00:48,880 --> 01:00:52,160
the resolver site basically depends on

1476
01:00:52,160 --> 01:00:56,240
extended dns error implementations um

1477
01:00:56,240 --> 01:00:59,760
so yeah we're waiting for that as well

1478
01:00:59,760 --> 01:01:02,720
the current draft is fairly mature you

1479
01:01:02,720 --> 01:01:04,160
will see some additional edits in

1480
01:01:04,160 --> 01:01:06,799
version 1

1481
01:01:06,880 --> 01:01:09,680
but the idea seems seems stable next

1482
01:01:09,680 --> 01:01:12,558
slide please vanilla

1483
01:01:14,720 --> 01:01:18,000
thank you so a few things

1484
01:01:18,000 --> 01:01:21,280
happened in the last couple of weeks i

1485
01:01:21,280 --> 01:01:22,079
noticed some

1486
01:01:22,079 --> 01:01:23,680
some issues with the s records of the

1487
01:01:23,680 --> 01:01:25,839
zone apex i i

1488
01:01:25,839 --> 01:01:28,240
i never thought that that this was

1489
01:01:28,240 --> 01:01:29,280
implementable but

1490
01:01:29,280 --> 01:01:31,280
actually you see it happen so this is a

1491
01:01:31,280 --> 01:01:32,960
failure that could potentially be

1492
01:01:32,960 --> 01:01:34,160
reported

1493
01:01:34,160 --> 01:01:36,880
and wes spoke earlier about mc3

1494
01:01:36,880 --> 01:01:37,599
iterations

1495
01:01:37,599 --> 01:01:39,680
higher than um the cap that's

1496
01:01:39,680 --> 01:01:40,799
recommended in them

1497
01:01:40,799 --> 01:01:43,599
in rrc5155 or to potentially lower that

1498
01:01:43,599 --> 01:01:44,240
cap

1499
01:01:44,240 --> 01:01:46,799
and go with surfill and this sure fill

1500
01:01:46,799 --> 01:01:48,720
can then be reported

1501
01:01:48,720 --> 01:01:51,359
um with with with a signal that's in dns

1502
01:01:51,359 --> 01:01:52,799
error reporting

1503
01:01:52,799 --> 01:01:55,119
and we know of many dns configuration

1504
01:01:55,119 --> 01:01:56,640
issues i've

1505
01:01:56,640 --> 01:01:58,400
put a few on them on the on the slide a

1506
01:01:58,400 --> 01:02:00,079
few top level domains

1507
01:02:00,079 --> 01:02:02,160
um but also a few second level domains

1508
01:02:02,160 --> 01:02:04,559
that i happen to know of that

1509
01:02:04,559 --> 01:02:07,839
that had some configuration issues um

1510
01:02:07,839 --> 01:02:10,000
recently we had um i'm not going to say

1511
01:02:10,000 --> 01:02:11,359
anything wrong here but i think one of

1512
01:02:11,359 --> 01:02:12,880
the root server

1513
01:02:12,880 --> 01:02:15,440
implementations that had a slightly

1514
01:02:15,440 --> 01:02:16,400
wrong response

1515
01:02:16,400 --> 01:02:19,680
those things can all be reported um

1516
01:02:19,680 --> 01:02:22,480
to the appropriate operator or owner of

1517
01:02:22,480 --> 01:02:23,760
the zone

1518
01:02:23,760 --> 01:02:27,200
um then a colleague of mine paul hoffman

1519
01:02:27,200 --> 01:02:29,440
he mentioned that recent work in the

1520
01:02:29,440 --> 01:02:31,119
d-priv working group

1521
01:02:31,119 --> 01:02:33,839
they have proposed using dns records for

1522
01:02:33,839 --> 01:02:35,200
discovery of

1523
01:02:35,200 --> 01:02:38,319
if an authoritative server offers dns

1524
01:02:38,319 --> 01:02:40,240
over-equipped transport

1525
01:02:40,240 --> 01:02:43,280
now when that happens it would be useful

1526
01:02:43,280 --> 01:02:46,839
for resolver to report if such a

1527
01:02:46,839 --> 01:02:50,000
discovery ends in an error

1528
01:02:50,000 --> 01:02:52,400
and this this this method that's in this

1529
01:02:52,400 --> 01:02:53,520
that is in our draft

1530
01:02:53,520 --> 01:02:56,559
and can deliver that error basically

1531
01:02:56,559 --> 01:03:00,079
and meanwhile also since last since last

1532
01:03:00,079 --> 01:03:03,359
last itf i've sent a message to the itf

1533
01:03:03,359 --> 01:03:06,319
dns operations working group chairs

1534
01:03:06,319 --> 01:03:09,359
benno suzanne and tim if they if they

1535
01:03:09,359 --> 01:03:09,680
were

1536
01:03:09,680 --> 01:03:13,119
interested in asking the working group

1537
01:03:13,119 --> 01:03:16,559
if there's consensus um

1538
01:03:16,559 --> 01:03:18,160
benno was kind enough to invite me to

1539
01:03:18,160 --> 01:03:19,680
give a presentation on this this is that

1540
01:03:19,680 --> 01:03:21,359
presentation

1541
01:03:21,359 --> 01:03:24,799
so my question to the itf um dns

1542
01:03:24,799 --> 01:03:26,559
operations workgroup chairs is

1543
01:03:26,559 --> 01:03:30,000
um would you would you be ready to ask

1544
01:03:30,000 --> 01:03:30,960
for consensus

1545
01:03:30,960 --> 01:03:34,319
on on the mailing list so that's it for

1546
01:03:34,319 --> 01:03:36,400
my presentation

1547
01:03:36,400 --> 01:03:39,440
thank you thank you

1548
01:03:39,520 --> 01:03:43,039
any comments before i start before i

1549
01:03:43,039 --> 01:03:43,440
will

1550
01:03:43,440 --> 01:03:46,480
answer your question

1551
01:03:47,680 --> 01:03:51,839
okay good paul please go ahead

1552
01:03:51,920 --> 01:03:54,400
just very briefly uh roy said the bit

1553
01:03:54,400 --> 01:03:56,559
that i wanted to about deprived so

1554
01:03:56,559 --> 01:04:00,079
um as we are discussing in dprive

1555
01:04:00,079 --> 01:04:02,400
the fact that in the dns you can say

1556
01:04:02,400 --> 01:04:04,400
i've got an authoritative server

1557
01:04:04,400 --> 01:04:07,440
multiple people who were skeptical

1558
01:04:07,440 --> 01:04:10,720
of that said well we we need to have a

1559
01:04:10,720 --> 01:04:13,359
way of telling an authoritative server

1560
01:04:13,359 --> 01:04:14,960
that they should be doing it because

1561
01:04:14,960 --> 01:04:16,480
they're announcing it and

1562
01:04:16,480 --> 01:04:18,400
this would be super lightweight i don't

1563
01:04:18,400 --> 01:04:20,480
want to see deprived doing

1564
01:04:20,480 --> 01:04:23,039
basically the moral equivalent of this

1565
01:04:23,039 --> 01:04:24,480
just for our own

1566
01:04:24,480 --> 01:04:26,480
um work i think that having a general

1567
01:04:26,480 --> 01:04:28,720
one would be good thanks

1568
01:04:28,720 --> 01:04:32,319
thank you punit

1569
01:04:32,319 --> 01:04:36,079
please go ahead hi so this sounds quite

1570
01:04:36,079 --> 01:04:38,400
interesting from a practical perspective

1571
01:04:38,400 --> 01:04:40,000
to report errors

1572
01:04:40,000 --> 01:04:42,880
but one question i have which i couldn't

1573
01:04:42,880 --> 01:04:44,480
get the answer from the security

1574
01:04:44,480 --> 01:04:45,280
consideration

1575
01:04:45,280 --> 01:04:47,680
section is this is going over an

1576
01:04:47,680 --> 01:04:49,839
unencrypted transport

1577
01:04:49,839 --> 01:04:52,880
and what is there to prevent

1578
01:04:52,880 --> 01:04:55,200
abusive players on the internet from

1579
01:04:55,200 --> 01:04:57,200
just trashing this

1580
01:04:57,200 --> 01:05:02,000
uh endpoint with garbage data

1581
01:05:03,839 --> 01:05:08,480
all right um so the idea is basically if

1582
01:05:08,480 --> 01:05:10,720
if the error came from a domain that was

1583
01:05:10,720 --> 01:05:12,640
retrieved over an encrypted channel then

1584
01:05:12,640 --> 01:05:14,000
the reporting should be over an

1585
01:05:14,000 --> 01:05:15,520
encrypted channel so you preserve

1586
01:05:15,520 --> 01:05:16,640
privacy that's

1587
01:05:16,640 --> 01:05:18,079
that's the general idea that might not

1588
01:05:18,079 --> 01:05:19,760
be reflected in the current draft but it

1589
01:05:19,760 --> 01:05:22,000
will be in the next one

1590
01:05:22,000 --> 01:05:24,799
there is nothing that anyone can do to

1591
01:05:24,799 --> 01:05:25,680
anyone to stop

1592
01:05:25,680 --> 01:05:27,359
anyone from sending anything over the

1593
01:05:27,359 --> 01:05:30,319
internet this is this is the golden rule

1594
01:05:30,319 --> 01:05:33,760
so if people want to crash this they can

1595
01:05:33,760 --> 01:05:36,960
if people want to send traffic they can

1596
01:05:36,960 --> 01:05:39,599
the most they would get out of it is

1597
01:05:39,599 --> 01:05:41,839
that they would send

1598
01:05:41,839 --> 01:05:45,200
an error report to some domain owner who

1599
01:05:45,200 --> 01:05:47,039
can then immediately see

1600
01:05:47,039 --> 01:05:49,680
that that either there is an error and

1601
01:05:49,680 --> 01:05:50,720
acts upon it

1602
01:05:50,720 --> 01:05:54,000
or can just ignore it um so there's

1603
01:05:54,000 --> 01:05:57,680
there's um there's there's a

1604
01:05:57,680 --> 01:06:00,000
there's there's there's no real

1605
01:06:00,000 --> 01:06:02,319
cryptographic authentication if you will

1606
01:06:02,319 --> 01:06:05,440
or cryptographic uh foundation

1607
01:06:05,440 --> 01:06:07,839
um it's just a lightweight reporting

1608
01:06:07,839 --> 01:06:08,720
method a

1609
01:06:08,720 --> 01:06:10,559
ping if you will if that makes sense

1610
01:06:10,559 --> 01:06:11,760
right so

1611
01:06:11,760 --> 01:06:14,559
roy i think i i probably exaggerated

1612
01:06:14,559 --> 01:06:15,200
when i say

1613
01:06:15,200 --> 01:06:18,240
trash but in the sense that uh

1614
01:06:18,240 --> 01:06:21,520
some malicious but smart adversary could

1615
01:06:21,520 --> 01:06:24,640
send you data which looks plausible

1616
01:06:24,640 --> 01:06:27,119
but then requires you to end up spending

1617
01:06:27,119 --> 01:06:28,319
a lot of cycles

1618
01:06:28,319 --> 01:06:30,880
of operators to investigate right that's

1619
01:06:30,880 --> 01:06:31,440
my

1620
01:06:31,440 --> 01:06:34,640
concern here that uh the

1621
01:06:34,640 --> 01:06:38,480
signal to noise ratio uh may go down if

1622
01:06:38,480 --> 01:06:41,200
we we don't have some way of saying this

1623
01:06:41,200 --> 01:06:41,599
is

1624
01:06:41,599 --> 01:06:45,119
good data now i agree and and but

1625
01:06:45,119 --> 01:06:48,000
if if if if this would be done in

1626
01:06:48,000 --> 01:06:49,839
practice i think for instance

1627
01:06:49,839 --> 01:06:52,960
um if um if there's a if there's a small

1628
01:06:52,960 --> 01:06:54,480
misconfiguration in

1629
01:06:54,480 --> 01:06:57,200
in www.example.com where one image

1630
01:06:57,200 --> 01:06:58,839
hosted on

1631
01:06:58,839 --> 01:07:01,760
image.example.com and

1632
01:07:01,760 --> 01:07:04,160
fills validation and the entire world

1633
01:07:04,160 --> 01:07:05,760
will start reporting so you're knowing

1634
01:07:05,760 --> 01:07:06,960
your signals if

1635
01:07:06,960 --> 01:07:08,799
you know 40 million elfis fans they

1636
01:07:08,799 --> 01:07:10,559
can't be wrong right so

1637
01:07:10,559 --> 01:07:12,640
so if if the entire world suddenly

1638
01:07:12,640 --> 01:07:14,079
starts from different

1639
01:07:14,079 --> 01:07:17,599
um locations not reporting an error

1640
01:07:17,599 --> 01:07:19,520
you know something is going on probably

1641
01:07:19,520 --> 01:07:20,960
a misconfiguration

1642
01:07:20,960 --> 01:07:23,039
now if you happen to operate a banking

1643
01:07:23,039 --> 01:07:24,000
domain

1644
01:07:24,000 --> 01:07:27,119
right and you see from somewhere

1645
01:07:27,119 --> 01:07:30,480
and somewhere unsavory

1646
01:07:30,480 --> 01:07:33,039
that errors are happening then you might

1647
01:07:33,039 --> 01:07:33,920
actually be

1648
01:07:33,920 --> 01:07:35,839
seeing a validation failure or someone

1649
01:07:35,839 --> 01:07:37,440
is trying to spoof

1650
01:07:37,440 --> 01:07:39,200
a dns cache which is interesting

1651
01:07:39,200 --> 01:07:40,880
information in itself

1652
01:07:40,880 --> 01:07:42,720
this all allows us to report it and yes

1653
01:07:42,720 --> 01:07:44,160
of course you need to investigate and

1654
01:07:44,160 --> 01:07:45,599
the moment you investigate

1655
01:07:45,599 --> 01:07:48,160
there might be false errors i i

1656
01:07:48,160 --> 01:07:51,038
completely see that

1657
01:07:54,240 --> 01:07:57,520
thank you sorry uh brett please

1658
01:07:57,520 --> 01:07:59,920
go ahead

1659
01:08:02,559 --> 01:08:05,200
read the draft uh roy but um i just want

1660
01:08:05,200 --> 01:08:07,200
you to add my support because i think

1661
01:08:07,200 --> 01:08:10,079
i think that anything that um allows

1662
01:08:10,079 --> 01:08:11,440
operators to do

1663
01:08:11,440 --> 01:08:14,000
more in-depth and easier troubleshooting

1664
01:08:14,000 --> 01:08:15,280
than we have currently

1665
01:08:15,280 --> 01:08:19,679
uh is to be encouraged and applauded

1666
01:08:19,679 --> 01:08:22,480
cool thank you brad

1667
01:08:23,359 --> 01:08:26,399
okay thanks next in the next and q is

1668
01:08:26,399 --> 01:08:30,000
jim reed uh i agree with what bet has

1669
01:08:30,000 --> 01:08:31,040
just said

1670
01:08:31,040 --> 01:08:32,880
if we get more information out to people

1671
01:08:32,880 --> 01:08:34,479
to help them travel and shoot problems

1672
01:08:34,479 --> 01:08:36,640
that's a great idea

1673
01:08:36,640 --> 01:08:37,920
i do think though we need to think a

1674
01:08:37,920 --> 01:08:39,439
little bit more about the threat models

1675
01:08:39,439 --> 01:08:40,238
and the risks

1676
01:08:40,238 --> 01:08:42,158
some of the concerns that penny alluded

1677
01:08:42,158 --> 01:08:44,640
to a moment or two ago

1678
01:08:44,640 --> 01:08:46,960
and i think some of his concerns are

1679
01:08:46,960 --> 01:08:47,839
valid but

1680
01:08:47,839 --> 01:08:50,880
some of them maybe not so much because

1681
01:08:50,880 --> 01:08:52,479
after all we have the same problem just

1682
01:08:52,479 --> 01:08:52,799
now

1683
01:08:52,799 --> 01:08:56,000
even with dns sec we can't validate if a

1684
01:08:56,000 --> 01:08:56,399
self

1685
01:08:56,399 --> 01:08:59,040
fail or a refused or not implemented

1686
01:08:59,040 --> 01:09:00,080
error code

1687
01:09:00,080 --> 01:09:03,439
response is genuine or not

1688
01:09:03,439 --> 01:09:05,198
so we can't necessarily guarantee that

1689
01:09:05,198 --> 01:09:06,799
other error failure modes are going to

1690
01:09:06,799 --> 01:09:07,920
be telling the truth

1691
01:09:07,920 --> 01:09:09,600
the whole truth and nothing but the

1692
01:09:09,600 --> 01:09:11,439
truth and i think we just have to live

1693
01:09:11,439 --> 01:09:12,319
with that

1694
01:09:12,319 --> 01:09:13,839
so i think we have to accept that as an

1695
01:09:13,839 --> 01:09:15,920
ugly compromise and then

1696
01:09:15,920 --> 01:09:17,600
figure out how we can improve the

1697
01:09:17,600 --> 01:09:19,759
overall ecosystem by at least providing

1698
01:09:19,759 --> 01:09:21,759
some information that can be helpful but

1699
01:09:21,759 --> 01:09:23,120
at the same time being

1700
01:09:23,120 --> 01:09:25,040
mindful of the risks and threats that

1701
01:09:25,040 --> 01:09:27,679
might introduce

1702
01:09:27,679 --> 01:09:31,120
and jim if i may respond to that

1703
01:09:31,120 --> 01:09:32,880
yes i think you're right and the other

1704
01:09:32,880 --> 01:09:34,158
option is to have

1705
01:09:34,158 --> 01:09:36,560
a completely secure way of doing things

1706
01:09:36,560 --> 01:09:37,600
which in itself

1707
01:09:37,600 --> 01:09:40,158
has new failure modes which in itself

1708
01:09:40,158 --> 01:09:42,319
needs yet another way of signaling which

1709
01:09:42,319 --> 01:09:43,679
needs to have new failure modes and you

1710
01:09:43,679 --> 01:09:45,439
get into this endless

1711
01:09:45,439 --> 01:09:47,759
heavy complex loop that that is

1712
01:09:47,759 --> 01:09:49,520
completely unavoidable if you

1713
01:09:49,520 --> 01:09:51,359
just keep it lightweight and of course

1714
01:09:51,359 --> 01:09:52,560
i'm hand waving now i

1715
01:09:52,560 --> 01:09:55,120
completely understand that yeah if i

1716
01:09:55,120 --> 01:09:57,440
knew it i am in violent ignorance

1717
01:09:57,440 --> 01:10:00,879
and that's a deeply troubling thing

1718
01:10:01,199 --> 01:10:04,480
cheers jim i owe you a beer

1719
01:10:05,360 --> 01:10:07,360
thanks next thank you is ben ben

1720
01:10:07,360 --> 01:10:09,520
schwartz

1721
01:10:09,520 --> 01:10:12,719
hey uh support i think uh we should

1722
01:10:12,719 --> 01:10:13,360
adopt and

1723
01:10:13,360 --> 01:10:15,920
make this real as a number of people

1724
01:10:15,920 --> 01:10:17,600
have said in the chat

1725
01:10:17,600 --> 01:10:20,800
i wonder if you could restrict this

1726
01:10:20,800 --> 01:10:25,040
to tcp or dns cookies or basically

1727
01:10:25,040 --> 01:10:27,440
uh some mechanism like source ip

1728
01:10:27,440 --> 01:10:29,360
validation

1729
01:10:29,360 --> 01:10:33,120
yeah yep that sounds good that's so good

1730
01:10:33,120 --> 01:10:34,960
as long as it's lightweight i don't i

1731
01:10:34,960 --> 01:10:36,640
don't think it's too much overhead to

1732
01:10:36,640 --> 01:10:38,080
ask for a tcp

1733
01:10:38,080 --> 01:10:40,400
as long as the failure mode the fall off

1734
01:10:40,400 --> 01:10:41,679
would be um

1735
01:10:41,679 --> 01:10:46,880
um would would be small

1736
01:10:47,840 --> 01:10:51,040
thanks ben thanks uh matt

1737
01:10:51,040 --> 01:10:58,400
please go ahead

1738
01:10:58,400 --> 01:11:02,719
uh next is math math bounce it

1739
01:11:05,280 --> 01:11:09,520
apologies no problem

1740
01:11:09,520 --> 01:11:11,040
two two different mute buttons that i

1741
01:11:11,040 --> 01:11:12,800
have to maintain um

1742
01:11:12,800 --> 01:11:15,120
so uh i i just wanted to add a bit to

1743
01:11:15,120 --> 01:11:16,159
what punit

1744
01:11:16,159 --> 01:11:19,600
said um so as an opportu operator i find

1745
01:11:19,600 --> 01:11:20,719
the idea of this

1746
01:11:20,719 --> 01:11:23,360
interesting but my mind immediately goes

1747
01:11:23,360 --> 01:11:24,640
to

1748
01:11:24,640 --> 01:11:28,000
you know i i'm going to receive hundreds

1749
01:11:28,000 --> 01:11:28,239
of

1750
01:11:28,239 --> 01:11:31,840
thousands of error reports every hour

1751
01:11:31,840 --> 01:11:34,000
and i'm never going to be able to look

1752
01:11:34,000 --> 01:11:35,600
at them i'm never going to know which

1753
01:11:35,600 --> 01:11:37,040
ones are

1754
01:11:37,040 --> 01:11:38,880
real things that i should investigate

1755
01:11:38,880 --> 01:11:40,400
and which ones are people just messing

1756
01:11:40,400 --> 01:11:42,000
with the system

1757
01:11:42,000 --> 01:11:45,440
um so i so i wonder

1758
01:11:45,440 --> 01:11:48,000
how many people would actually implement

1759
01:11:48,000 --> 01:11:50,320
this

1760
01:11:51,040 --> 01:11:53,679
that said though i could see it being

1761
01:11:53,679 --> 01:11:55,600
useful in a situation where you can set

1762
01:11:55,600 --> 01:11:57,600
up some sort of bilateral agreement to

1763
01:11:57,600 --> 01:11:59,520
accept those error reports

1764
01:11:59,520 --> 01:12:02,800
maybe you know tc authentication or

1765
01:12:02,800 --> 01:12:05,920
something like that so um yeah it seems

1766
01:12:05,920 --> 01:12:08,080
interesting and worth exploring

1767
01:12:08,080 --> 01:12:11,120
but i have some concerns

1768
01:12:11,120 --> 01:12:13,360
um thanks matt if i can if i can respond

1769
01:12:13,360 --> 01:12:15,600
to that the

1770
01:12:15,600 --> 01:12:17,040
part of the idea is that the

1771
01:12:17,040 --> 01:12:19,440
authoritative server would send in an

1772
01:12:19,440 --> 01:12:20,960
edns zero

1773
01:12:20,960 --> 01:12:24,960
option a location where to report

1774
01:12:24,960 --> 01:12:26,640
this thing so in a sense that's an

1775
01:12:26,640 --> 01:12:28,960
opt-in right you basically opt

1776
01:12:28,960 --> 01:12:30,480
in on the authoritative server side

1777
01:12:30,480 --> 01:12:32,400
you're basically saying by publishing

1778
01:12:32,400 --> 01:12:33,040
this

1779
01:12:33,040 --> 01:12:35,920
edns 0 option i would like to see errors

1780
01:12:35,920 --> 01:12:37,600
if you have any

1781
01:12:37,600 --> 01:12:40,239
um so that's that's that's that's part

1782
01:12:40,239 --> 01:12:42,799
of the idea

1783
01:12:42,880 --> 01:12:44,719
right but yeah but then having published

1784
01:12:44,719 --> 01:12:47,440
that end point

1785
01:12:47,440 --> 01:12:50,640
i i expect to see um error reports that

1786
01:12:50,640 --> 01:12:52,400
aren't air reports and i expect to see

1787
01:12:52,400 --> 01:12:54,640
them in extremely high volume

1788
01:12:54,640 --> 01:12:58,880
yes what i'm saying is i expect to see

1789
01:12:58,880 --> 01:13:01,040
an incredibly high volume of noise

1790
01:13:01,040 --> 01:13:04,560
um so much as to make it useless

1791
01:13:04,560 --> 01:13:07,360
unless i can restrict somehow who's able

1792
01:13:07,360 --> 01:13:09,040
to actually send stuff to that

1793
01:13:09,040 --> 01:13:12,159
endpoint yeah no i i understand

1794
01:13:12,159 --> 01:13:15,120
i understand so everyone these are all

1795
01:13:15,120 --> 01:13:16,560
good comments and i would like to have

1796
01:13:16,560 --> 01:13:18,159
them on the list as well

1797
01:13:18,159 --> 01:13:21,520
and my my brain is received often

1798
01:13:21,520 --> 01:13:25,840
so like teflon nothing sticks

1799
01:13:25,840 --> 01:13:30,840
we have we do have the recording so you

1800
01:13:30,840 --> 01:13:32,960
can

1801
01:13:32,960 --> 01:13:36,800
uh peter peter thomas please go ahead

1802
01:13:36,800 --> 01:13:40,480
um so as you just heard um there is

1803
01:13:40,480 --> 01:13:42,719
the need to have some kind of tooling on

1804
01:13:42,719 --> 01:13:43,920
the art

1805
01:13:43,920 --> 01:13:46,400
side to do or the domain on your site to

1806
01:13:46,400 --> 01:13:47,920
do the aggregation of

1807
01:13:47,920 --> 01:13:49,679
whatever the number of error reports is

1808
01:13:49,679 --> 01:13:51,360
and then um

1809
01:13:51,360 --> 01:13:54,400
to interpret them and um it's

1810
01:13:54,400 --> 01:13:55,840
it's similar like with dmarc is

1811
01:13:55,840 --> 01:13:57,600
something which had um

1812
01:13:57,600 --> 01:13:59,600
mentioned even though probably the dmarc

1813
01:13:59,600 --> 01:14:01,520
volume is lower than dns period

1814
01:14:01,520 --> 01:14:04,640
volume what i was wondering is um if i

1815
01:14:04,640 --> 01:14:06,080
go through the

1816
01:14:06,080 --> 01:14:07,679
failure modes that are listed on the

1817
01:14:07,679 --> 01:14:09,520
slides that are currently being shared

1818
01:14:09,520 --> 01:14:13,600
um so nc configuration gnsx stuff

1819
01:14:13,600 --> 01:14:16,320
whether some deprived thing is set and

1820
01:14:16,320 --> 01:14:17,120
all this

1821
01:14:17,120 --> 01:14:19,840
those are things that follow um from the

1822
01:14:19,840 --> 01:14:21,760
zone contents themselves or maybe

1823
01:14:21,760 --> 01:14:24,400
in conjunction with um the s records and

1824
01:14:24,400 --> 01:14:25,440
the parent

1825
01:14:25,440 --> 01:14:28,880
and they don't um in particular have

1826
01:14:28,880 --> 01:14:30,239
anything to do with the specific

1827
01:14:30,239 --> 01:14:31,360
resolver setup

1828
01:14:31,360 --> 01:14:32,880
at least it doesn't seem to be the case

1829
01:14:32,880 --> 01:14:34,640
for me so while um

1830
01:14:34,640 --> 01:14:36,960
the the error would probably come to the

1831
01:14:36,960 --> 01:14:37,679
surface

1832
01:14:37,679 --> 01:14:40,400
at resolving time um the arrow should

1833
01:14:40,400 --> 01:14:41,520
also be

1834
01:14:41,520 --> 01:14:43,199
if it's this kind of error that is shown

1835
01:14:43,199 --> 01:14:44,080
on the slide it should also be

1836
01:14:44,080 --> 01:14:45,760
detectable but just looking at the zone

1837
01:14:45,760 --> 01:14:46,480
file

1838
01:14:46,480 --> 01:14:49,280
which of course doing requires extra

1839
01:14:49,280 --> 01:14:50,400
tooling

1840
01:14:50,400 --> 01:14:53,040
um on the auth side but the same is true

1841
01:14:53,040 --> 01:14:54,159
for interpreting this

1842
01:14:54,159 --> 01:14:56,320
kind of error except that there is a lot

1843
01:14:56,320 --> 01:14:57,360
of um

1844
01:14:57,360 --> 01:14:59,120
a much higher number of parties involved

1845
01:14:59,120 --> 01:15:00,320
and a much higher number of reports

1846
01:15:00,320 --> 01:15:01,199
involved

1847
01:15:01,199 --> 01:15:03,760
so why not um develop great tooling for

1848
01:15:03,760 --> 01:15:04,880
the author sites to

1849
01:15:04,880 --> 01:15:06,960
to to interpret zones and figure out the

1850
01:15:06,960 --> 01:15:08,320
same kinds of errors

1851
01:15:08,320 --> 01:15:11,440
without um doing all this uh

1852
01:15:11,440 --> 01:15:15,040
involving everybody thing um i

1853
01:15:15,040 --> 01:15:18,400
i i completely agree and and and and

1854
01:15:18,400 --> 01:15:19,600
breath can we can

1855
01:15:19,600 --> 01:15:22,640
can confirm this if we had

1856
01:15:22,640 --> 01:15:25,040
all the tools available to test all the

1857
01:15:25,040 --> 01:15:27,280
value modes that would ever exist now

1858
01:15:27,280 --> 01:15:28,800
and in the future

1859
01:15:28,800 --> 01:15:30,239
then we wouldn't have to check this on

1860
01:15:30,239 --> 01:15:32,080
the resolver side but

1861
01:15:32,080 --> 01:15:34,640
when i was working at nominet we had we

1862
01:15:34,640 --> 01:15:36,560
had everything perfect everything done

1863
01:15:36,560 --> 01:15:37,040
and

1864
01:15:37,040 --> 01:15:41,520
still we introduced a previously

1865
01:15:41,520 --> 01:15:44,719
revoked key in the dns for

1866
01:15:44,719 --> 01:15:47,760
i think dot uk at the time and

1867
01:15:47,760 --> 01:15:51,360
um of course we did this on friday

1868
01:15:51,360 --> 01:15:53,760
um and yes we had all the tooling to to

1869
01:15:53,760 --> 01:15:55,040
to to test all this stuff

1870
01:15:55,040 --> 01:15:57,360
most of the tooling were built in-house

1871
01:15:57,360 --> 01:15:58,640
some of the tooling were for third

1872
01:15:58,640 --> 01:15:59,760
parties

1873
01:15:59,760 --> 01:16:02,000
but we couldn't just foresee this one

1874
01:16:02,000 --> 01:16:03,280
and then i mean if

1875
01:16:03,280 --> 01:16:06,640
we could we would have done it so

1876
01:16:06,640 --> 01:16:10,719
um we were basically reported

1877
01:16:10,719 --> 01:16:14,080
um this error via twitter by by

1878
01:16:14,080 --> 01:16:16,560
one of one of our colleagues and it was

1879
01:16:16,560 --> 01:16:18,239
it was fairly embarrassing

1880
01:16:18,239 --> 01:16:20,239
now if i would have this error report

1881
01:16:20,239 --> 01:16:21,760
like like five seconds

1882
01:16:21,760 --> 01:16:24,480
after i published the record because

1883
01:16:24,480 --> 01:16:25,360
someone in the

1884
01:16:25,360 --> 01:16:27,120
in i don't know west samoa would try to

1885
01:16:27,120 --> 01:16:28,719
resolve it and fails

1886
01:16:28,719 --> 01:16:30,719
and then send me a error report i could

1887
01:16:30,719 --> 01:16:34,080
do something immediately

1888
01:16:34,159 --> 01:16:36,159
and this is not an either or thing um

1889
01:16:36,159 --> 01:16:38,000
you're right these things need to be

1890
01:16:38,000 --> 01:16:40,000
checked the moment you publish

1891
01:16:40,000 --> 01:16:41,520
but there's always the potential to

1892
01:16:41,520 --> 01:16:43,280
overlook things always and i've learned

1893
01:16:43,280 --> 01:16:44,800
it the hard way

1894
01:16:44,800 --> 01:16:47,199
and i'm sure some of you have as well

1895
01:16:47,199 --> 01:16:48,640
and so i think it's good if this is done

1896
01:16:48,640 --> 01:16:50,880
in the resolver as well

1897
01:16:50,880 --> 01:16:53,520
okay but thanks for coming i have one

1898
01:16:53,520 --> 01:16:54,560
small follow-up

1899
01:16:54,560 --> 01:16:56,159
i mean the sa record there is the email

1900
01:16:56,159 --> 01:16:57,920
address for the zone admin

1901
01:16:57,920 --> 01:17:00,000
um is that where things are supposed to

1902
01:17:00,000 --> 01:17:01,520
go i don't think so right because why

1903
01:17:01,520 --> 01:17:02,960
not

1904
01:17:02,960 --> 01:17:06,000
uh no no there's not nothing to do with

1905
01:17:06,000 --> 01:17:08,320
nothing to do with an email address and

1906
01:17:08,320 --> 01:17:09,679
the whole idea is that he in

1907
01:17:09,679 --> 01:17:12,719
the eating a zero um

1908
01:17:12,719 --> 01:17:16,719
sorry in edna zero option there is a

1909
01:17:16,719 --> 01:17:20,159
suffix if you will that you apply to

1910
01:17:20,159 --> 01:17:22,159
the um to the owner name that you just

1911
01:17:22,159 --> 01:17:23,920
tried to resolve that failed

1912
01:17:23,920 --> 01:17:26,640
and the details are in the draft but um

1913
01:17:26,640 --> 01:17:26,960
no

1914
01:17:26,960 --> 01:17:28,400
this is not sending an email this is

1915
01:17:28,400 --> 01:17:30,800
just sending another dns record off

1916
01:17:30,800 --> 01:17:34,080
just sending another query of okay i

1917
01:17:34,080 --> 01:17:36,400
wasn't aware of the method okay cool

1918
01:17:36,400 --> 01:17:39,440
thank you um well good discussion and we

1919
01:17:39,440 --> 01:17:40,560
do have time

1920
01:17:40,560 --> 01:17:43,199
uh but i yeah let's close the queue

1921
01:17:43,199 --> 01:17:44,080
though

1922
01:17:44,080 --> 01:17:48,800
uh paul please go ahead

1923
01:17:51,920 --> 01:17:54,000
oops sorry i saw that uh warren was in

1924
01:17:54,000 --> 01:17:54,960
front of me so

1925
01:17:54,960 --> 01:17:58,159
uh to go back uh oh sorry

1926
01:17:58,159 --> 01:18:00,960
okay well he was but then he wasn't so

1927
01:18:00,960 --> 01:18:01,360
yeah

1928
01:18:01,360 --> 01:18:04,719
uh to go back to matt's concern

1929
01:18:04,719 --> 01:18:06,640
of i'm gonna get flooded and i'm not

1930
01:18:06,640 --> 01:18:08,159
gonna be able to deal with the flood

1931
01:18:08,159 --> 01:18:09,920
one of the things in this draft that i

1932
01:18:09,920 --> 01:18:11,600
really like is the fact

1933
01:18:11,600 --> 01:18:14,239
that you give that you the authoritative

1934
01:18:14,239 --> 01:18:16,640
give the prefix of where to send this to

1935
01:18:16,640 --> 01:18:19,280
so you can change that in your edns

1936
01:18:19,280 --> 01:18:22,000
option as often as you want

1937
01:18:22,000 --> 01:18:24,480
so in a sense this is somewhat like

1938
01:18:24,480 --> 01:18:25,520
salting

1939
01:18:25,520 --> 01:18:28,719
but if you want to if you're if you

1940
01:18:28,719 --> 01:18:30,719
if you want to change that every five

1941
01:18:30,719 --> 01:18:33,040
minutes you can change where it gets

1942
01:18:33,040 --> 01:18:34,080
sent to

1943
01:18:34,080 --> 01:18:36,560
and so it's not like that once you have

1944
01:18:36,560 --> 01:18:37,760
published something

1945
01:18:37,760 --> 01:18:39,120
it's going you know like once you've

1946
01:18:39,120 --> 01:18:41,040
published an address equivalent

1947
01:18:41,040 --> 01:18:43,280
that it's going to get spammed forever

1948
01:18:43,280 --> 01:18:44,320
um because

1949
01:18:44,320 --> 01:18:46,159
as soon as you stop publishing that you

1950
01:18:46,159 --> 01:18:47,920
can stop looking at it

1951
01:18:47,920 --> 01:18:52,840
thanks thank you

1952
01:18:52,840 --> 01:18:56,159
alex please go ahead yeah thank you

1953
01:18:56,159 --> 01:18:58,560
um roy thanks for getting this together

1954
01:18:58,560 --> 01:18:59,280
and and

1955
01:18:59,280 --> 01:19:02,560
uh i think it's pretty interesting um

1956
01:19:02,560 --> 01:19:04,719
however i also understand the concern of

1957
01:19:04,719 --> 01:19:07,199
being like fam the false error report

1958
01:19:07,199 --> 01:19:10,320
and and one way around this

1959
01:19:10,320 --> 01:19:12,640
besides that the thing that that paul

1960
01:19:12,640 --> 01:19:13,440
mentioned which

1961
01:19:13,440 --> 01:19:14,800
doesn't really help you because that

1962
01:19:14,800 --> 01:19:16,560
only means that you get the spam to a

1963
01:19:16,560 --> 01:19:18,320
new address every every five

1964
01:19:18,320 --> 01:19:20,239
minutes in the first place but anyways

1965
01:19:20,239 --> 01:19:21,760
it doesn't really prevent anybody to

1966
01:19:21,760 --> 01:19:24,400
send you spam

1967
01:19:25,520 --> 01:19:28,800
what about adding text to the draft that

1968
01:19:28,800 --> 01:19:32,560
i'm trying to phrase it very carefully

1969
01:19:33,520 --> 01:19:36,159
puts higher level of trust into reports

1970
01:19:36,159 --> 01:19:37,040
that arrive

1971
01:19:37,040 --> 01:19:40,480
where protocols that are harder to spoof

1972
01:19:40,480 --> 01:19:42,800
specifically if i get an error reporting

1973
01:19:42,800 --> 01:19:44,159
via an encrypted

1974
01:19:44,159 --> 01:19:47,360
uh dns connection from a client then

1975
01:19:47,360 --> 01:19:49,520
it's probably more trustworthy

1976
01:19:49,520 --> 01:19:53,120
uh and and and uh clearly that i get the

1977
01:19:53,120 --> 01:19:56,239
what tcpo port 53 udp from a

1978
01:19:56,239 --> 01:19:58,560
non-existing non-routed ip address

1979
01:19:58,560 --> 01:20:00,480
let me put it that way yeah i i know

1980
01:20:00,480 --> 01:20:02,320
it's like

1981
01:20:02,320 --> 01:20:04,239
opening a can of worms but that might be

1982
01:20:04,239 --> 01:20:06,719
an option i think this is useful because

1983
01:20:06,719 --> 01:20:10,000
um um it's a little bit like

1984
01:20:10,000 --> 01:20:12,880
like dmarc essentially yeah that has

1985
01:20:12,880 --> 01:20:14,560
proven to be useful in some scenarios as

1986
01:20:14,560 --> 01:20:15,920
well

1987
01:20:15,920 --> 01:20:19,040
um yeah i i i think um

1988
01:20:19,040 --> 01:20:20,800
it's it's actually exactly like dmarc

1989
01:20:20,800 --> 01:20:22,480
that's where the idea stems from

1990
01:20:22,480 --> 01:20:25,120
um um initially when i heard about the

1991
01:20:25,120 --> 01:20:26,159
mark i thought

1992
01:20:26,159 --> 01:20:28,400
that yeah no one's gonna report stuff

1993
01:20:28,400 --> 01:20:29,840
and everyone is reporting so

1994
01:20:29,840 --> 01:20:31,760
that's that's great it works there are

1995
01:20:31,760 --> 01:20:33,920
organizations around this that that help

1996
01:20:33,920 --> 01:20:34,880
brands to

1997
01:20:34,880 --> 01:20:37,679
to just make sure that they're stable

1998
01:20:37,679 --> 01:20:38,880
and

1999
01:20:38,880 --> 01:20:41,679
this is actually the missing link that i

2000
01:20:41,679 --> 01:20:42,480
thought between

2001
01:20:42,480 --> 01:20:45,440
operators of resolvers and operator

2002
01:20:45,440 --> 01:20:47,040
authoritative domains

2003
01:20:47,040 --> 01:20:50,000
now with regards to the reporting itself

2004
01:20:50,000 --> 01:20:51,760
keep in mind that since this is another

2005
01:20:51,760 --> 01:20:53,120
query

2006
01:20:53,120 --> 01:20:56,400
and you can actually on the response to

2007
01:20:56,400 --> 01:20:57,760
the error

2008
01:20:57,760 --> 01:21:00,080
you can set a timer you can set a ttl of

2009
01:21:00,080 --> 01:21:02,000
basically one hour or one day

2010
01:21:02,000 --> 01:21:03,280
and you're supposed to cache that

2011
01:21:03,280 --> 01:21:05,280
locally so there's some management that

2012
01:21:05,280 --> 01:21:05,760
you can do

2013
01:21:05,760 --> 01:21:08,400
as well if you overload it with errors

2014
01:21:08,400 --> 01:21:10,000
take the edna zero option now

2015
01:21:10,000 --> 01:21:11,600
right that's that's that's also an

2016
01:21:11,600 --> 01:21:13,040
option you don't really have to change

2017
01:21:13,040 --> 01:21:14,320
it you could change it every five

2018
01:21:14,320 --> 01:21:15,280
minutes

2019
01:21:15,280 --> 01:21:17,520
um but there are various various methods

2020
01:21:17,520 --> 01:21:19,920
of doing things

2021
01:21:19,920 --> 01:21:22,480
the reason this is so the reason i think

2022
01:21:22,480 --> 01:21:24,320
this needs to be lightweight

2023
01:21:24,320 --> 01:21:28,080
and not having a slightly more complex

2024
01:21:28,080 --> 01:21:31,760
mode using http or email

2025
01:21:31,760 --> 01:21:34,080
or whatever is that all of these other

2026
01:21:34,080 --> 01:21:34,800
methods

2027
01:21:34,800 --> 01:21:37,440
the moment you step out of the protocol

2028
01:21:37,440 --> 01:21:38,880
and you will introduce

2029
01:21:38,880 --> 01:21:41,600
new failure modes and you get into this

2030
01:21:41,600 --> 01:21:42,719
loop again

2031
01:21:42,719 --> 01:21:44,239
so i just want to avoid all the

2032
01:21:44,239 --> 01:21:46,000
additional complexity

2033
01:21:46,000 --> 01:21:49,120
and um and start simple

2034
01:21:49,120 --> 01:21:52,400
um but yeah if once once this thing is

2035
01:21:52,400 --> 01:21:53,199
adopted it's

2036
01:21:53,199 --> 01:21:54,800
out of my hands of course and then it's

2037
01:21:54,800 --> 01:21:56,320
a working group

2038
01:21:56,320 --> 01:22:00,000
problem to solve basically

2039
01:22:00,000 --> 01:22:03,679
but thanks for your comments alex

2040
01:22:06,560 --> 01:22:08,239
respond to that because i didn't mean to

2041
01:22:08,239 --> 01:22:10,480
step outside protocol

2042
01:22:10,480 --> 01:22:13,280
i only meant that that as an operator of

2043
01:22:13,280 --> 01:22:13,520
an

2044
01:22:13,520 --> 01:22:16,400
often often dns server that receives

2045
01:22:16,400 --> 01:22:18,320
reports i would probably consider

2046
01:22:18,320 --> 01:22:21,360
reports that come in via tcp or

2047
01:22:21,360 --> 01:22:25,120
uh dod between more trust versus it and

2048
01:22:25,120 --> 01:22:26,239
then

2049
01:22:26,239 --> 01:22:27,600
view reports that's what i meant i

2050
01:22:27,600 --> 01:22:29,760
didn't mean to step into http or email

2051
01:22:29,760 --> 01:22:30,560
or whatever

2052
01:22:30,560 --> 01:22:34,159
i meant to let me yeah sorry no i get

2053
01:22:34,159 --> 01:22:35,440
the community

2054
01:22:35,440 --> 01:22:38,320
yeah okay yeah no you're absolutely

2055
01:22:38,320 --> 01:22:38,719
right

2056
01:22:38,719 --> 01:22:42,239
i misunderstood i apologize so um

2057
01:22:42,239 --> 01:22:44,959
so yeah thank you

2058
01:22:46,320 --> 01:22:48,800
um i think we have a good idea of the

2059
01:22:48,800 --> 01:22:49,600
room

2060
01:22:49,600 --> 01:22:52,960
uh it's positive so

2061
01:22:52,960 --> 01:22:54,560
back to your last question or the last

2062
01:22:54,560 --> 01:22:56,639
bullet point not a question

2063
01:22:56,639 --> 01:22:59,840
um we will coordinate a working group

2064
01:22:59,840 --> 01:23:03,679
call for adoption of this draft

2065
01:23:03,679 --> 01:23:05,840
later in the next weeks but we will

2066
01:23:05,840 --> 01:23:07,280
contact you and

2067
01:23:07,280 --> 01:23:09,920
met the the authors of the of the of the

2068
01:23:09,920 --> 01:23:11,040
draft

2069
01:23:11,040 --> 01:23:14,320
thank you uh roy good then we

2070
01:23:14,320 --> 01:23:16,800
come to the next presentation of uh

2071
01:23:16,800 --> 01:23:18,880
vayari

2072
01:23:18,880 --> 01:23:21,760
great yeah uh shall i run the slides

2073
01:23:21,760 --> 01:23:23,120
what do you prefer

2074
01:23:23,120 --> 01:23:26,159
yes please yeah yeah um before you

2075
01:23:26,159 --> 01:23:27,840
already get started with this

2076
01:23:27,840 --> 01:23:30,719
um the chair is actually talked with the

2077
01:23:30,719 --> 01:23:32,719
the dennis opchairs actually talked with

2078
01:23:32,719 --> 01:23:33,280
yari

2079
01:23:33,280 --> 01:23:36,000
and with the add and deprived chairs

2080
01:23:36,000 --> 01:23:36,800
about

2081
01:23:36,800 --> 01:23:40,560
where this draft might find a home we

2082
01:23:40,560 --> 01:23:42,400
haven't taken a position on whether dns

2083
01:23:42,400 --> 01:23:43,760
op is the home

2084
01:23:43,760 --> 01:23:45,760
but we did feel that danasop has the

2085
01:23:45,760 --> 01:23:47,440
widest range of people who would be

2086
01:23:47,440 --> 01:23:48,639
interested

2087
01:23:48,639 --> 01:23:50,560
and would have an opinion on where this

2088
01:23:50,560 --> 01:23:52,719
draft should go next

2089
01:23:52,719 --> 01:23:54,639
so um we're not necessarily looking at

2090
01:23:54,639 --> 01:23:57,120
this for adoption but we are looking for

2091
01:23:57,120 --> 01:23:59,760
whether people are interested in further

2092
01:23:59,760 --> 01:24:01,280
consideration and doing work on

2093
01:24:01,280 --> 01:24:04,719
yeah thank you yari thank you

2094
01:24:04,719 --> 01:24:06,639
and we are looking for feedback so so

2095
01:24:06,639 --> 01:24:08,719
this is a topic that

2096
01:24:08,719 --> 01:24:10,000
me and some of my colleagues and

2097
01:24:10,000 --> 01:24:12,800
students looked at we have a

2098
01:24:12,800 --> 01:24:15,280
problem that we think is important and

2099
01:24:15,280 --> 01:24:18,719
some directions for a solution and

2100
01:24:18,719 --> 01:24:20,080
we're here to talk about that a little

2101
01:24:20,080 --> 01:24:22,639
bit and see um if you think this is

2102
01:24:22,639 --> 01:24:26,000
uh perhaps workable or you have concerns

2103
01:24:26,000 --> 01:24:28,000
or this is old news or

2104
01:24:28,000 --> 01:24:29,840
too much science fiction so let's see

2105
01:24:29,840 --> 01:24:32,560
next slide please

2106
01:24:35,120 --> 01:24:37,360
yeah so um i need to set the context a

2107
01:24:37,360 --> 01:24:38,480
little bit so obviously

2108
01:24:38,480 --> 01:24:41,679
dns privacy is popular and we've had

2109
01:24:41,679 --> 01:24:43,440
issues with you know things being

2110
01:24:43,440 --> 01:24:45,679
visible on the wire we've had issues

2111
01:24:45,679 --> 01:24:46,960
with

2112
01:24:46,960 --> 01:24:49,280
things being visible in the servers and

2113
01:24:49,280 --> 01:24:52,239
and leaking from there

2114
01:24:52,239 --> 01:24:54,719
and of course you know the resolver

2115
01:24:54,719 --> 01:24:57,440
services can be an attractive target for

2116
01:24:57,440 --> 01:25:00,480
let's say governments or attackers or

2117
01:25:00,480 --> 01:25:05,199
so on to retrieve some information about

2118
01:25:05,199 --> 01:25:07,440
people's browsing histories for instance

2119
01:25:07,440 --> 01:25:09,679
because they do see the browsing history

2120
01:25:09,679 --> 01:25:11,600
and as a result of this we've seen

2121
01:25:11,600 --> 01:25:13,600
obviously some work in in itf and

2122
01:25:13,600 --> 01:25:14,880
elsewhere

2123
01:25:14,880 --> 01:25:16,800
we've worked on encrypted dns query

2124
01:25:16,800 --> 01:25:19,600
protocols which plugs the whole on the

2125
01:25:19,600 --> 01:25:21,520
communication security side of things

2126
01:25:21,520 --> 01:25:22,719
using discovery

2127
01:25:22,719 --> 01:25:26,000
work at add and the the idea there

2128
01:25:26,000 --> 01:25:28,320
is that we can turn on the encryption in

2129
01:25:28,320 --> 01:25:30,159
in a wider number of cases and maybe

2130
01:25:30,159 --> 01:25:31,679
also distribute the

2131
01:25:31,679 --> 01:25:34,480
queries to uh more places not to

2132
01:25:34,480 --> 01:25:36,960
concentrate too much in one place

2133
01:25:36,960 --> 01:25:41,679
we've also seen like the uh rc on

2134
01:25:41,679 --> 01:25:43,440
recommended practices how to run some of

2135
01:25:43,440 --> 01:25:44,880
these services

2136
01:25:44,880 --> 01:25:47,440
what to do with logging and so on we've

2137
01:25:47,440 --> 01:25:48,000
also seen

2138
01:25:48,000 --> 01:25:51,040
expectations and contracts by people

2139
01:25:51,040 --> 01:25:52,880
like the mozilla

2140
01:25:52,880 --> 01:25:55,840
foundation whose uh trusted recursive

2141
01:25:55,840 --> 01:25:57,360
resolver requirements

2142
01:25:57,360 --> 01:25:59,679
um you know set some guidelines on what

2143
01:25:59,679 --> 01:26:01,760
what needs to be done

2144
01:26:01,760 --> 01:26:03,679
and of course we also had improvements

2145
01:26:03,679 --> 01:26:04,800
outside dns

2146
01:26:04,800 --> 01:26:08,080
uh esmi and so on and then sort of

2147
01:26:08,080 --> 01:26:10,639
totally outside

2148
01:26:10,639 --> 01:26:12,400
these arrangement that's also some

2149
01:26:12,400 --> 01:26:14,320
general technology developments and some

2150
01:26:14,320 --> 01:26:15,520
objects we

2151
01:26:15,520 --> 01:26:17,440
plan to use here confidential computing

2152
01:26:17,440 --> 01:26:22,320
in particular next slide please and

2153
01:26:22,320 --> 01:26:25,280
um so the idea here for for us has been

2154
01:26:25,280 --> 01:26:25,600
that

2155
01:26:25,600 --> 01:26:27,600
we should build on all of that work and

2156
01:26:27,600 --> 01:26:29,520
assume that we actually have taken all

2157
01:26:29,520 --> 01:26:31,360
of these steps that we've been planning

2158
01:26:31,360 --> 01:26:31,679
and

2159
01:26:31,679 --> 01:26:33,760
building technology for so for instance

2160
01:26:33,760 --> 01:26:34,880
that all the communications are

2161
01:26:34,880 --> 01:26:36,080
encrypted

2162
01:26:36,080 --> 01:26:38,400
and the question then is what's the

2163
01:26:38,400 --> 01:26:40,480
remaining problem or problems and is

2164
01:26:40,480 --> 01:26:41,600
their next step

2165
01:26:41,600 --> 01:26:44,159
and our main worry is that the resolvers

2166
01:26:44,159 --> 01:26:45,520
can be a major

2167
01:26:45,520 --> 01:26:48,159
remaining source of leaks through

2168
01:26:48,159 --> 01:26:50,080
accidents attacks

2169
01:26:50,080 --> 01:26:53,280
commercial use requests by authorities

2170
01:26:53,280 --> 01:26:53,760
and

2171
01:26:53,760 --> 01:26:56,480
i know none of us makes mistakes but

2172
01:26:56,480 --> 01:26:59,360
they can still happen

2173
01:27:00,000 --> 01:27:01,920
and the thing is that we actually need

2174
01:27:01,920 --> 01:27:04,960
to protect the user's data in flight

2175
01:27:04,960 --> 01:27:06,880
in the communications time but also at

2176
01:27:06,880 --> 01:27:09,199
rest or in use

2177
01:27:09,199 --> 01:27:11,760
and uh and what we wanted to do is to

2178
01:27:11,760 --> 01:27:13,199
figure out if we could actually do

2179
01:27:13,199 --> 01:27:14,320
something

2180
01:27:14,320 --> 01:27:15,600
with this confidence like computing

2181
01:27:15,600 --> 01:27:17,679
stuff to reduce the leaks on

2182
01:27:17,679 --> 01:27:19,760
the latter two and and there are some

2183
01:27:19,760 --> 01:27:22,639
possibility possibilities but they

2184
01:27:22,639 --> 01:27:24,719
they come with some impacts uh some

2185
01:27:24,719 --> 01:27:26,239
operational impacts that

2186
01:27:26,239 --> 01:27:28,080
might be worth discussing in this this

2187
01:27:28,080 --> 01:27:30,719
working group in particular

2188
01:27:30,719 --> 01:27:32,560
and one way to see what we're trying to

2189
01:27:32,560 --> 01:27:34,239
do here is that you could

2190
01:27:34,239 --> 01:27:36,560
potentially implement like a technical

2191
01:27:36,560 --> 01:27:38,480
version of some of these

2192
01:27:38,480 --> 01:27:40,480
resolver requirements or things that

2193
01:27:40,480 --> 01:27:42,239
people publish on the websites or or

2194
01:27:42,239 --> 01:27:44,239
make contracts out of but to actually

2195
01:27:44,239 --> 01:27:48,718
check some of that next slide please

2196
01:27:50,080 --> 01:27:52,080
so i'm not going to go into too much of

2197
01:27:52,080 --> 01:27:53,440
the details i think many of you don't

2198
01:27:53,440 --> 01:27:54,000
know

2199
01:27:54,000 --> 01:27:56,800
know the basic things but this is

2200
01:27:56,800 --> 01:27:58,639
basically about using this trusted

2201
01:27:58,639 --> 01:28:01,360
execution environments or tes

2202
01:28:01,360 --> 01:28:04,320
and so that's a ability to create these

2203
01:28:04,320 --> 01:28:06,159
processes inside computers that

2204
01:28:06,159 --> 01:28:08,320
are entirely encrypted even when they

2205
01:28:08,320 --> 01:28:10,239
write

2206
01:28:10,239 --> 01:28:12,960
right to local memory and so on you can

2207
01:28:12,960 --> 01:28:14,080
actually see what's going on

2208
01:28:14,080 --> 01:28:16,320
even the operating system or the owner

2209
01:28:16,320 --> 01:28:18,159
of the computer can't see that and

2210
01:28:18,159 --> 01:28:19,600
there's also some capabilities to

2211
01:28:19,600 --> 01:28:21,600
provide at the stations

2212
01:28:21,600 --> 01:28:24,080
even the remote parties uh which is

2213
01:28:24,080 --> 01:28:25,440
about

2214
01:28:25,440 --> 01:28:28,480
you know uh stable

2215
01:28:28,480 --> 01:28:31,679
verifiable statement that this is uh

2216
01:28:31,679 --> 01:28:33,920
a process running in in this kind of an

2217
01:28:33,920 --> 01:28:35,520
arrangement and environment

2218
01:28:35,520 --> 01:28:37,440
and it uses this particular software

2219
01:28:37,440 --> 01:28:39,040
image

2220
01:28:39,040 --> 01:28:40,800
so a basic idea is that we run the

2221
01:28:40,800 --> 01:28:42,080
resolver process inside

2222
01:28:42,080 --> 01:28:45,120
te and don't actually provide any user

2223
01:28:45,120 --> 01:28:47,120
specific data outside this encrypted

2224
01:28:47,120 --> 01:28:48,159
process

2225
01:28:48,159 --> 01:28:50,800
so we on purpose like if we're the dns

2226
01:28:50,800 --> 01:28:53,679
operator we cut ourselves out of the

2227
01:28:53,679 --> 01:28:56,480
the stream of data relating to user

2228
01:28:56,480 --> 01:28:58,239
relatable events at least

2229
01:28:58,239 --> 01:29:00,639
and the same is true of the owner of the

2230
01:29:00,639 --> 01:29:02,080
computer hardware if that's different

2231
01:29:02,080 --> 01:29:03,840
from the dns operator if you run in the

2232
01:29:03,840 --> 01:29:05,040
cloud

2233
01:29:05,040 --> 01:29:08,320
and operating system of course as well

2234
01:29:08,320 --> 01:29:10,480
and of course this requires somebody

2235
01:29:10,480 --> 01:29:11,840
willing to provide these

2236
01:29:11,840 --> 01:29:15,199
services in this this manner and uh

2237
01:29:15,199 --> 01:29:17,199
depending a little bit how you do this

2238
01:29:17,199 --> 01:29:18,880
you might also require to trust

2239
01:29:18,880 --> 01:29:21,920
a third party for for some aspects uh

2240
01:29:21,920 --> 01:29:23,120
with regards to

2241
01:29:23,120 --> 01:29:26,480
you know is this a cpu that's uh

2242
01:29:26,480 --> 01:29:27,760
using some of these technical

2243
01:29:27,760 --> 01:29:29,760
technologies and did we manufacture that

2244
01:29:29,760 --> 01:29:30,639
cpu and

2245
01:29:30,639 --> 01:29:32,960
uh what what is a good software that a

2246
01:29:32,960 --> 01:29:34,639
good software image that

2247
01:29:34,639 --> 01:29:38,159
is is trustworthy and so on but you

2248
01:29:38,159 --> 01:29:39,760
don't absolutely have to do that if

2249
01:29:39,760 --> 01:29:41,679
unless you really want

2250
01:29:41,679 --> 01:29:44,400
next slide please

2251
01:29:44,960 --> 01:29:47,040
so the basic arrangement is that

2252
01:29:47,040 --> 01:29:48,159
everything about the

2253
01:29:48,159 --> 01:29:50,400
client's process of asking about the

2254
01:29:50,400 --> 01:29:51,440
particular name

2255
01:29:51,440 --> 01:29:55,040
is is inside the encrypted uh platform

2256
01:29:55,040 --> 01:29:56,880
so it's encrypted first of all for the

2257
01:29:56,880 --> 01:29:58,639
transport part of it and the transport

2258
01:29:58,639 --> 01:30:00,239
ends inside this

2259
01:30:00,239 --> 01:30:03,920
uh encrypted uh pe and it doesn't leave

2260
01:30:03,920 --> 01:30:05,440
that

2261
01:30:05,440 --> 01:30:08,560
of course the the resolver

2262
01:30:08,560 --> 01:30:11,360
that answers a query may in some cases

2263
01:30:11,360 --> 01:30:14,000
need to consult the rest of the internet

2264
01:30:14,000 --> 01:30:16,000
and there's some some discussion in the

2265
01:30:16,000 --> 01:30:17,040
draft about

2266
01:30:17,040 --> 01:30:20,960
how one can do that securely

2267
01:30:20,960 --> 01:30:23,199
but basically the the information about

2268
01:30:23,199 --> 01:30:24,639
who asked for what

2269
01:30:24,639 --> 01:30:28,000
is kept inside so this since this is

2270
01:30:28,000 --> 01:30:31,360
kind of similar to oblivious dns

2271
01:30:31,360 --> 01:30:33,760
in in that it tries to keep away the

2272
01:30:33,760 --> 01:30:35,040
information of

2273
01:30:35,040 --> 01:30:38,480
which client asks for what next slide

2274
01:30:38,480 --> 01:30:40,718
please

2275
01:30:41,520 --> 01:30:43,600
okay so now we get to the interesting

2276
01:30:43,600 --> 01:30:45,280
piece so that that

2277
01:30:45,280 --> 01:30:47,199
previous stuff was was basically just

2278
01:30:47,199 --> 01:30:49,440
the setup that okay we can

2279
01:30:49,440 --> 01:30:52,400
we can maybe do this and uh at least in

2280
01:30:52,400 --> 01:30:54,320
theory seems possible but

2281
01:30:54,320 --> 01:30:55,679
the question is can we do this in

2282
01:30:55,679 --> 01:30:57,679
practice and this is in particular where

2283
01:30:57,679 --> 01:30:57,920
i

2284
01:30:57,920 --> 01:31:00,719
would like to get your feedback so

2285
01:31:00,719 --> 01:31:02,320
obviously the upside is that

2286
01:31:02,320 --> 01:31:04,320
it's possible to hide all user related

2287
01:31:04,320 --> 01:31:05,520
information

2288
01:31:05,520 --> 01:31:07,199
and we actually argue that one should do

2289
01:31:07,199 --> 01:31:08,719
so because

2290
01:31:08,719 --> 01:31:11,040
you know it's simply good management of

2291
01:31:11,040 --> 01:31:12,080
data that you

2292
01:31:12,080 --> 01:31:15,280
constrain who has access to data

2293
01:31:15,280 --> 01:31:19,840
um and and there's no reason um

2294
01:31:19,840 --> 01:31:23,040
for most of the parts of the

2295
01:31:23,040 --> 01:31:24,880
process at least to to have access to

2296
01:31:24,880 --> 01:31:26,480
that data it's just something that the

2297
01:31:26,480 --> 01:31:29,120
user needs

2298
01:31:29,280 --> 01:31:31,360
and another upset is that we could

2299
01:31:31,360 --> 01:31:33,360
provide evidence we don't have to but we

2300
01:31:33,360 --> 01:31:34,880
could have the clients actually do

2301
01:31:34,880 --> 01:31:36,719
something extra they could do

2302
01:31:36,719 --> 01:31:38,400
a verification they could do a remote at

2303
01:31:38,400 --> 01:31:40,639
the station of the service

2304
01:31:40,639 --> 01:31:42,480
which of course would require some

2305
01:31:42,480 --> 01:31:44,320
changes to the clients

2306
01:31:44,320 --> 01:31:46,800
which is a big hurdle but this is in

2307
01:31:46,800 --> 01:31:49,760
theory possible trust but verify

2308
01:31:49,760 --> 01:31:51,199
do we like this service but i actually

2309
01:31:51,199 --> 01:31:52,719
want to trust that they actually do what

2310
01:31:52,719 --> 01:31:55,520
they advertise

2311
01:31:56,960 --> 01:31:59,360
the downsides relate to operational

2312
01:31:59,360 --> 01:32:00,159
practices

2313
01:32:00,159 --> 01:32:02,159
um so obviously you need to have a big

2314
01:32:02,159 --> 01:32:03,920
service you want to do scaling

2315
01:32:03,920 --> 01:32:06,480
systems monitoring debugging you need to

2316
01:32:06,480 --> 01:32:08,320
be able to respond to denial service

2317
01:32:08,320 --> 01:32:09,550
attacks and so on

2318
01:32:09,550 --> 01:32:11,120
[Music]

2319
01:32:11,120 --> 01:32:13,360
the way that we saw this in in our

2320
01:32:13,360 --> 01:32:14,800
experiments was that

2321
01:32:14,800 --> 01:32:17,760
uh we can address them at least to an

2322
01:32:17,760 --> 01:32:18,480
extent

2323
01:32:18,480 --> 01:32:21,040
so the goal here is that we shouldn't

2324
01:32:21,040 --> 01:32:23,199
reveal the individual user behavior that

2325
01:32:23,199 --> 01:32:25,760
yari asked for this name but we could

2326
01:32:25,760 --> 01:32:26,719
still reveal

2327
01:32:26,719 --> 01:32:29,120
aggregate statistics on you know what's

2328
01:32:29,120 --> 01:32:30,800
the load on this instance what's the

2329
01:32:30,800 --> 01:32:32,239
performance memory

2330
01:32:32,239 --> 01:32:34,320
cache error counts for different types

2331
01:32:34,320 --> 01:32:36,800
of situations

2332
01:32:36,800 --> 01:32:38,719
we can set limits and particular types

2333
01:32:38,719 --> 01:32:40,639
of requests

2334
01:32:40,639 --> 01:32:43,840
or from particular clients or networks

2335
01:32:43,840 --> 01:32:45,199
and perhaps even control that

2336
01:32:45,199 --> 01:32:48,480
dynamically from outside

2337
01:32:48,480 --> 01:32:51,040
next slide

2338
01:32:53,440 --> 01:32:56,719
um and um

2339
01:32:56,719 --> 01:32:58,880
it also brings to my mind that you know

2340
01:32:58,880 --> 01:33:00,320
sometimes we actually use the data in

2341
01:33:00,320 --> 01:33:01,920
some ways so some some parties actually

2342
01:33:01,920 --> 01:33:03,840
use the data for

2343
01:33:03,840 --> 01:33:06,080
sort of business purposes and of course

2344
01:33:06,080 --> 01:33:07,040
if if you

2345
01:33:07,040 --> 01:33:09,360
intentionally forget user related stuff

2346
01:33:09,360 --> 01:33:11,199
then you can't sell the user's browsing

2347
01:33:11,199 --> 01:33:12,480
history anywhere

2348
01:33:12,480 --> 01:33:15,360
okay but i think that's a good thing but

2349
01:33:15,360 --> 01:33:16,639
you could still

2350
01:33:16,639 --> 01:33:19,360
take the aggregateable data so you could

2351
01:33:19,360 --> 01:33:21,360
have like a top 100

2352
01:33:21,360 --> 01:33:24,800
of this kind lists and so on that you

2353
01:33:24,800 --> 01:33:26,639
could gather you could also

2354
01:33:26,639 --> 01:33:28,480
gather not just for like names and so on

2355
01:33:28,480 --> 01:33:30,239
but you could also understand like what

2356
01:33:30,239 --> 01:33:30,719
are the

2357
01:33:30,719 --> 01:33:34,560
biggest uh memory consumers or error

2358
01:33:34,560 --> 01:33:36,800
cases and so on

2359
01:33:36,800 --> 01:33:38,000
in order to understand if there's

2360
01:33:38,000 --> 01:33:39,760
something fundamentally wrong with the

2361
01:33:39,760 --> 01:33:41,280
with the software

2362
01:33:41,280 --> 01:33:43,600
you could also do additional functions

2363
01:33:43,600 --> 01:33:45,600
like geolocation or some other other

2364
01:33:45,600 --> 01:33:46,239
things that

2365
01:33:46,239 --> 01:33:48,480
somebody wants to do as long as you do

2366
01:33:48,480 --> 01:33:49,760
it inside the tee

2367
01:33:49,760 --> 01:33:52,560
because you know no data user relatable

2368
01:33:52,560 --> 01:33:56,400
data leaves that so that should be fine

2369
01:33:57,520 --> 01:33:59,520
there's also dependencies another

2370
01:33:59,520 --> 01:34:00,560
downside

2371
01:34:00,560 --> 01:34:02,480
so you need suitable server hardware i

2372
01:34:02,480 --> 01:34:04,719
think that's largely available and some

2373
01:34:04,719 --> 01:34:06,560
of the

2374
01:34:06,560 --> 01:34:08,400
cloud providers are also providing these

2375
01:34:08,400 --> 01:34:11,440
services nowadays

2376
01:34:13,199 --> 01:34:15,440
use of attestation leads to need to have

2377
01:34:15,440 --> 01:34:16,400
this trusted

2378
01:34:16,400 --> 01:34:18,560
party that that you can go and ask let's

2379
01:34:18,560 --> 01:34:20,560
say the cpu manufacturer that is this

2380
01:34:20,560 --> 01:34:23,679
good cpu and do they actually

2381
01:34:23,679 --> 01:34:25,679
execute in this manner that they claim

2382
01:34:25,679 --> 01:34:27,120
um

2383
01:34:27,120 --> 01:34:29,360
you might need separately also somebody

2384
01:34:29,360 --> 01:34:31,199
who says that this software image is

2385
01:34:31,199 --> 01:34:32,960
good we verified it we looked at the

2386
01:34:32,960 --> 01:34:34,800
open source having compiled it and this

2387
01:34:34,800 --> 01:34:36,000
is the image hash

2388
01:34:36,000 --> 01:34:38,480
and it's good it doesn't leak user

2389
01:34:38,480 --> 01:34:39,440
information

2390
01:34:39,440 --> 01:34:42,880
according to our analysis

2391
01:34:42,880 --> 01:34:44,800
but if you have the clients do something

2392
01:34:44,800 --> 01:34:46,560
extra of course that requires

2393
01:34:46,560 --> 01:34:48,560
changes in the clients which may or may

2394
01:34:48,560 --> 01:34:52,560
not be feasible in some cases

2395
01:34:53,280 --> 01:34:55,520
um and so the main conclusion of all of

2396
01:34:55,520 --> 01:34:56,400
this is that

2397
01:34:56,400 --> 01:35:00,159
this is we think interesting and could

2398
01:35:00,159 --> 01:35:02,239
provide more evidence of actually

2399
01:35:02,239 --> 01:35:04,080
protecting the user's data

2400
01:35:04,080 --> 01:35:06,080
it's not a cure for all problems and

2401
01:35:06,080 --> 01:35:08,400
there are issues that of course remain

2402
01:35:08,400 --> 01:35:11,040
if you thought a manufacturer cp was

2403
01:35:11,040 --> 01:35:12,719
secure

2404
01:35:12,719 --> 01:35:16,080
you are not uh well informed um

2405
01:35:16,080 --> 01:35:17,760
there are attacks there's also side

2406
01:35:17,760 --> 01:35:20,000
channel attacks that you can use to

2407
01:35:20,000 --> 01:35:22,000
determine things you can have software

2408
01:35:22,000 --> 01:35:24,159
problems still even if your software is

2409
01:35:24,159 --> 01:35:28,400
securely run um

2410
01:35:28,400 --> 01:35:30,080
but it will still provide an additional

2411
01:35:30,080 --> 01:35:32,080
layer of defense so for instance from

2412
01:35:32,080 --> 01:35:33,760
from the point of view of pervasive

2413
01:35:33,760 --> 01:35:35,920
monitoring that some some agency

2414
01:35:35,920 --> 01:35:39,199
tries to look at all the use of data in

2415
01:35:39,199 --> 01:35:41,360
in a particular um

2416
01:35:41,360 --> 01:35:45,040
dns provider or operator and

2417
01:35:45,040 --> 01:35:46,480
and now they would have to go through

2418
01:35:46,480 --> 01:35:48,880
this as well i mean of course

2419
01:35:48,880 --> 01:35:50,880
we do believe that you know some attacks

2420
01:35:50,880 --> 01:35:52,880
are possible against these types of

2421
01:35:52,880 --> 01:35:55,679
setups but but now they would actually

2422
01:35:55,679 --> 01:35:56,480
have to do it

2423
01:35:56,480 --> 01:35:58,320
in order to gain this information

2424
01:35:58,320 --> 01:36:00,000
whereas previously all they needed to do

2425
01:36:00,000 --> 01:36:00,960
is to have say

2426
01:36:00,960 --> 01:36:04,400
say root access on the machine

2427
01:36:04,400 --> 01:36:07,199
next slide please

2428
01:36:09,440 --> 01:36:11,920
so i will leave it at that and the only

2429
01:36:11,920 --> 01:36:13,600
conclusion that i want to say here is

2430
01:36:13,600 --> 01:36:14,320
that

2431
01:36:14,320 --> 01:36:16,719
i think we really need to look carefully

2432
01:36:16,719 --> 01:36:18,560
at the data held by the servers

2433
01:36:18,560 --> 01:36:22,080
and we should look at security of that

2434
01:36:22,080 --> 01:36:22,480
as

2435
01:36:22,480 --> 01:36:25,119
as much as we look at the communications

2436
01:36:25,119 --> 01:36:27,760
it's particularly crucial for dns

2437
01:36:27,760 --> 01:36:29,600
we should consider all the tools this is

2438
01:36:29,600 --> 01:36:32,159
one particular tool

2439
01:36:32,159 --> 01:36:35,600
um like to hear if you think this is uh

2440
01:36:35,600 --> 01:36:39,199
you know tried and found one thing or

2441
01:36:39,199 --> 01:36:40,880
something interesting or something

2442
01:36:40,880 --> 01:36:42,639
interesting but with concerns

2443
01:36:42,639 --> 01:36:45,199
or perhaps total science fiction and not

2444
01:36:45,199 --> 01:36:46,800
feasible

2445
01:36:46,800 --> 01:36:50,159
um so with that i'll end and uh expect

2446
01:36:50,159 --> 01:36:51,119
some

2447
01:36:51,119 --> 01:36:54,080
comments thank you

2448
01:36:57,040 --> 01:36:59,840
oh thank you thank you yari um we have a

2449
01:36:59,840 --> 01:37:00,639
cue

2450
01:37:00,639 --> 01:37:02,159
thank you for your presentation very

2451
01:37:02,159 --> 01:37:03,840
interesting

2452
01:37:03,840 --> 01:37:07,119
sorry warren please uh go ahead

2453
01:37:07,119 --> 01:37:09,199
thanks for yeah warren kumari with no

2454
01:37:09,199 --> 01:37:11,040
hats yeah this does seem really

2455
01:37:11,040 --> 01:37:11,840
interesting

2456
01:37:11,840 --> 01:37:13,520
but something that i think needs a bit

2457
01:37:13,520 --> 01:37:15,520
more discussion is the sort of remote

2458
01:37:15,520 --> 01:37:17,440
asset attestation part

2459
01:37:17,440 --> 01:37:19,199
like how do i actually know that this

2460
01:37:19,199 --> 01:37:21,199
really is executing in some sort of

2461
01:37:21,199 --> 01:37:22,560
enclave

2462
01:37:22,560 --> 01:37:25,119
um the draft sort of mentions there'll

2463
01:37:25,119 --> 01:37:26,960
be an attestation but doesn't really

2464
01:37:26,960 --> 01:37:27,679
cover

2465
01:37:27,679 --> 01:37:29,920
how and without that i don't really see

2466
01:37:29,920 --> 01:37:31,280
how this is different to

2467
01:37:31,280 --> 01:37:33,360
you know a third party saying you're

2468
01:37:33,360 --> 01:37:34,800
querying a server in which case you

2469
01:37:34,800 --> 01:37:36,239
could just say you're querying a server

2470
01:37:36,239 --> 01:37:39,280
that doesn't log anything

2471
01:37:39,280 --> 01:37:41,119
right and and the reason that i didn't

2472
01:37:41,119 --> 01:37:42,320
include that part

2473
01:37:42,320 --> 01:37:44,000
in the draft was that that's sort of

2474
01:37:44,000 --> 01:37:46,400
covered extensively by

2475
01:37:46,400 --> 01:37:49,119
by others but but it is true though of

2476
01:37:49,119 --> 01:37:50,159
course that that

2477
01:37:50,159 --> 01:37:54,080
that is something that does require um

2478
01:37:54,080 --> 01:37:56,000
we need to understand that uh in order

2479
01:37:56,000 --> 01:37:57,679
to evaluate things like this

2480
01:37:57,679 --> 01:38:00,320
um but there are for instance itf

2481
01:38:00,320 --> 01:38:01,679
working groups working on this they have

2482
01:38:01,679 --> 01:38:03,520
a particular approach

2483
01:38:03,520 --> 01:38:06,159
there are other designs and there's a

2484
01:38:06,159 --> 01:38:07,360
fair number of variants and

2485
01:38:07,360 --> 01:38:09,199
architectures and

2486
01:38:09,199 --> 01:38:10,639
that would require another discussion

2487
01:38:10,639 --> 01:38:12,400
there's also protocol details exactly

2488
01:38:12,400 --> 01:38:17,040
how you transport this is like a

2489
01:38:25,840 --> 01:38:30,239
hi ben schwartz um i'm very uh

2490
01:38:30,239 --> 01:38:34,320
i'm very excited about this concept um

2491
01:38:34,320 --> 01:38:36,960
and uh yes one of the interesting

2492
01:38:36,960 --> 01:38:37,520
challenges

2493
01:38:37,520 --> 01:38:40,159
is that the remote attestation the the

2494
01:38:40,159 --> 01:38:41,199
cpu can

2495
01:38:41,199 --> 01:38:44,639
can prove to you that amd

2496
01:38:44,639 --> 01:38:46,800
claims that its chip is running software

2497
01:38:46,800 --> 01:38:48,320
with a particular hash

2498
01:38:48,320 --> 01:38:51,360
but you need reproducible builds and

2499
01:38:51,360 --> 01:38:53,840
every client needs to know the hashes of

2500
01:38:53,840 --> 01:38:55,119
all of its

2501
01:38:55,119 --> 01:39:00,000
trusted software builds or you need a

2502
01:39:00,000 --> 01:39:02,800
trust infrastructure where somebody

2503
01:39:02,800 --> 01:39:03,679
checks those

2504
01:39:03,679 --> 01:39:06,320
those hashes against the reproducible

2505
01:39:06,320 --> 01:39:07,119
build

2506
01:39:07,119 --> 01:39:09,920
of something that's one of many

2507
01:39:09,920 --> 01:39:11,440
challenges here

2508
01:39:11,440 --> 01:39:14,000
nonetheless i think this is is great

2509
01:39:14,000 --> 01:39:14,800
stuff

2510
01:39:14,800 --> 01:39:18,000
um maybe the right approach here would

2511
01:39:18,000 --> 01:39:21,920
be a non-working group forming buff

2512
01:39:22,639 --> 01:39:24,719
because really this is highly

2513
01:39:24,719 --> 01:39:26,560
speculative it's it's a

2514
01:39:26,560 --> 01:39:29,920
it's it's i think many years away

2515
01:39:29,920 --> 01:39:33,600
from dns operational practice

2516
01:39:33,600 --> 01:39:36,400
um it's fairly close to the privacy

2517
01:39:36,400 --> 01:39:37,600
research group

2518
01:39:37,600 --> 01:39:41,199
pergy that might not be a bad place

2519
01:39:41,199 --> 01:39:44,639
to to talk about these things and

2520
01:39:44,639 --> 01:39:48,159
i think it will require us to

2521
01:39:48,159 --> 01:39:50,080
give a lot of thought to the exact

2522
01:39:50,080 --> 01:39:51,440
threat models

2523
01:39:51,440 --> 01:39:53,679
and kinds of guarantees we want for

2524
01:39:53,679 --> 01:39:54,639
example one

2525
01:39:54,639 --> 01:39:57,520
one model i've considered here is a a

2526
01:39:57,520 --> 01:40:00,159
cash only resolver

2527
01:40:00,159 --> 01:40:01,920
so you you send your queries and if the

2528
01:40:01,920 --> 01:40:03,920
queries are in cash you get a response

2529
01:40:03,920 --> 01:40:06,080
back it's all perfectly

2530
01:40:06,080 --> 01:40:08,320
confidential if the response is not in

2531
01:40:08,320 --> 01:40:09,679
cash

2532
01:40:09,679 --> 01:40:12,159
you get an error back and you have to go

2533
01:40:12,159 --> 01:40:13,520
fetch it yourself and understand that

2534
01:40:13,520 --> 01:40:14,000
you're

2535
01:40:14,000 --> 01:40:15,440
you've lost your confidentiality

2536
01:40:15,440 --> 01:40:17,440
guarantee because otherwise it's very

2537
01:40:17,440 --> 01:40:18,960
unclear what the confidentiality

2538
01:40:18,960 --> 01:40:20,239
guarantee is of a

2539
01:40:20,239 --> 01:40:21,840
of the thing that's actually forwarding

2540
01:40:21,840 --> 01:40:24,239
your query on to some

2541
01:40:24,239 --> 01:40:27,840
third system so yeah many

2542
01:40:27,840 --> 01:40:30,000
architectures it it's speculative but

2543
01:40:30,000 --> 01:40:31,600
this is something i'm very excited about

2544
01:40:31,600 --> 01:40:34,320
and i'd love to find a way to support

2545
01:40:34,320 --> 01:40:36,800
thank you and um you suggested this this

2546
01:40:36,800 --> 01:40:37,600
possible

2547
01:40:37,600 --> 01:40:41,119
um both idea one other idea might also

2548
01:40:41,119 --> 01:40:42,320
be that this is maybe more

2549
01:40:42,320 --> 01:40:44,159
implementation and i mean there's

2550
01:40:44,159 --> 01:40:46,960
obviously a protocol component also but

2551
01:40:46,960 --> 01:40:48,880
maybe that's a small piece compared to

2552
01:40:48,880 --> 01:40:49,600
the sort of

2553
01:40:49,600 --> 01:40:51,679
building the software and so on and i

2554
01:40:51,679 --> 01:40:53,760
think we might actually consider also

2555
01:40:53,760 --> 01:40:56,880
some you know i don't know interrupt or

2556
01:40:56,880 --> 01:40:59,360
open source project or or some sites in

2557
01:40:59,360 --> 01:41:01,440
this space so maybe maybe next hack it

2558
01:41:01,440 --> 01:41:03,119
on my package

2559
01:41:03,119 --> 01:41:05,679
good moment for that and the other uh

2560
01:41:05,679 --> 01:41:07,520
comment that i i wanted to make is is

2561
01:41:07,520 --> 01:41:08,960
that the

2562
01:41:08,960 --> 01:41:12,400
um you know it means about the

2563
01:41:12,400 --> 01:41:14,560
privacy of you know thing that that

2564
01:41:14,560 --> 01:41:16,480
forwards questions and that

2565
01:41:16,480 --> 01:41:18,480
can be handled in multiple ways as you

2566
01:41:18,480 --> 01:41:20,480
mentioned the

2567
01:41:20,480 --> 01:41:22,800
um cash only option but there's also

2568
01:41:22,800 --> 01:41:24,239
other options what we actually did in

2569
01:41:24,239 --> 01:41:26,320
our experiment was that we

2570
01:41:26,320 --> 01:41:29,280
uh check the cash and then we return an

2571
01:41:29,280 --> 01:41:31,199
answer

2572
01:41:31,199 --> 01:41:33,440
and if we don't have flipping in the

2573
01:41:33,440 --> 01:41:35,119
cache then we do have to ask somebody

2574
01:41:35,119 --> 01:41:36,960
else but we also like we confuse the

2575
01:41:36,960 --> 01:41:38,400
timing

2576
01:41:38,400 --> 01:41:41,760
whether or not we um use the cache we

2577
01:41:41,760 --> 01:41:42,239
always

2578
01:41:42,239 --> 01:41:44,800
randomize the timing and so if you get

2579
01:41:44,800 --> 01:41:47,119
you know a thousand queries into the box

2580
01:41:47,119 --> 01:41:49,119
and then all the time you also get you

2581
01:41:49,119 --> 01:41:51,199
know let's say 500 queries out of the

2582
01:41:51,199 --> 01:41:52,159
box

2583
01:41:52,159 --> 01:41:54,159
uh but you can't actually match the at

2584
01:41:54,159 --> 01:41:55,840
least not exactly like you know

2585
01:41:55,840 --> 01:41:58,159
this came in and then one nanosecond

2586
01:41:58,159 --> 01:41:59,040
later

2587
01:41:59,040 --> 01:42:01,119
a query was sent out that's not the case

2588
01:42:01,119 --> 01:42:02,639
with the kind of arrangement that we're

2589
01:42:02,639 --> 01:42:04,159
doing but there's lots of algorithms one

2590
01:42:04,159 --> 01:42:06,080
could imagine here so

2591
01:42:06,080 --> 01:42:09,280
room for research also

2592
01:42:11,280 --> 01:42:14,560
thank you i'm closing the queue so jim

2593
01:42:14,560 --> 01:42:15,360
is the last

2594
01:42:15,360 --> 01:42:18,960
and um well please keep it a bit brief

2595
01:42:18,960 --> 01:42:19,840
because we have

2596
01:42:19,840 --> 01:42:23,520
still one invitation thanks sarah you're

2597
01:42:23,520 --> 01:42:25,840
next

2598
01:42:26,400 --> 01:42:28,320
comment related to the suggestion of

2599
01:42:28,320 --> 01:42:29,600
bringing it to peggy

2600
01:42:29,600 --> 01:42:32,480
um i think as one of the peggy chairs i

2601
01:42:32,480 --> 01:42:33,840
think we'd certainly be interested

2602
01:42:33,840 --> 01:42:36,000
in what we could do to host this and

2603
01:42:36,000 --> 01:42:38,000
help it evolve initially and just

2604
01:42:38,000 --> 01:42:39,440
be the list where you could get some of

2605
01:42:39,440 --> 01:42:41,520
that feedback actively so

2606
01:42:41,520 --> 01:42:42,719
we'll be happy to talk about that

2607
01:42:42,719 --> 01:42:45,119
offline okay

2608
01:42:45,119 --> 01:42:48,960
great thank you uh this is daniel khan

2609
01:42:48,960 --> 01:42:49,600
gilmore

2610
01:42:49,600 --> 01:42:52,960
uh i am excited about the thought of

2611
01:42:52,960 --> 01:42:54,159
trying to think about how much

2612
01:42:54,159 --> 01:42:55,840
information is held by a server and how

2613
01:42:55,840 --> 01:42:56,239
to

2614
01:42:56,239 --> 01:42:58,080
ensure the server is protecting that

2615
01:42:58,080 --> 01:42:59,440
information

2616
01:42:59,440 --> 01:43:01,600
i am pretty dubious about the trust

2617
01:43:01,600 --> 01:43:03,600
execution environment approach

2618
01:43:03,600 --> 01:43:04,800
there's a lot of ways that information

2619
01:43:04,800 --> 01:43:07,600
can radiate from

2620
01:43:07,600 --> 01:43:11,040
a server that's making these replies

2621
01:43:11,040 --> 01:43:12,719
and so you could imagine the information

2622
01:43:12,719 --> 01:43:14,639
radiates because

2623
01:43:14,639 --> 01:43:16,480
uh maybe the service is choosing the

2624
01:43:16,480 --> 01:43:18,400
wrong ephemeral secrets for the

2625
01:43:18,400 --> 01:43:20,639
transport session for example and then

2626
01:43:20,639 --> 01:43:22,400
the data could be held not by the server

2627
01:43:22,400 --> 01:43:23,199
that's running

2628
01:43:23,199 --> 01:43:25,760
the well-trusted code put by some

2629
01:43:25,760 --> 01:43:27,600
additional network device that happens

2630
01:43:27,600 --> 01:43:29,040
to have a tap into the into the

2631
01:43:29,040 --> 01:43:30,239
communication

2632
01:43:30,239 --> 01:43:32,320
so uh that's not to say that i think

2633
01:43:32,320 --> 01:43:33,520
that the goal is wrong

2634
01:43:33,520 --> 01:43:35,679
but i think that the te there's a

2635
01:43:35,679 --> 01:43:37,040
there's a lot of wiggle room

2636
01:43:37,040 --> 01:43:38,800
and it'd be very difficult to figure out

2637
01:43:38,800 --> 01:43:41,040
how to pin that down that accurately

2638
01:43:41,040 --> 01:43:43,360
yeah i i don't disagree certainly a lot

2639
01:43:43,360 --> 01:43:45,759
to look at

2640
01:43:48,080 --> 01:43:50,480
yeah this is jim i agree there's a lot

2641
01:43:50,480 --> 01:43:51,600
to look at here

2642
01:43:51,600 --> 01:43:53,280
and it's not just going to be on the

2643
01:43:53,280 --> 01:43:54,880
engineering side there's also a lot of

2644
01:43:54,880 --> 01:43:57,360
policy considerations and stuff

2645
01:43:57,360 --> 01:43:59,520
um i think also the cost benefit

2646
01:43:59,520 --> 01:44:00,639
analysis of this

2647
01:44:00,639 --> 01:44:03,199
approach will be fascinating and perhaps

2648
01:44:03,199 --> 01:44:04,639
take a long time to

2649
01:44:04,639 --> 01:44:08,320
to clarify or crystallize i think though

2650
01:44:08,320 --> 01:44:08,880
that

2651
01:44:08,880 --> 01:44:11,199
in terms of an itf home for this this

2652
01:44:11,199 --> 01:44:12,400
working group doing this

2653
01:44:12,400 --> 01:44:14,080
might be the best choice or the least

2654
01:44:14,080 --> 01:44:15,520
bad choice for it

2655
01:44:15,520 --> 01:44:18,159
because this topic i think is going to

2656
01:44:18,159 --> 01:44:20,000
run for several years and make way

2657
01:44:20,000 --> 01:44:23,040
out last pge or deprived

2658
01:44:23,040 --> 01:44:24,639
and says dean op is the working group

2659
01:44:24,639 --> 01:44:26,080
that never dies

2660
01:44:26,080 --> 01:44:27,840
there's like the best place as a home

2661
01:44:27,840 --> 01:44:29,360
for it and and

2662
01:44:29,360 --> 01:44:31,280
obviously can be built from there and

2663
01:44:31,280 --> 01:44:32,719
moved out into other working groups

2664
01:44:32,719 --> 01:44:34,400
involved hasn't been appropriate but i

2665
01:44:34,400 --> 01:44:34,800
think

2666
01:44:34,800 --> 01:44:37,040
this might be right shelter to start

2667
01:44:37,040 --> 01:44:40,080
this work off yaddy

2668
01:44:41,679 --> 01:44:45,199
thank you yeah okay

2669
01:44:45,199 --> 01:44:48,159
yeah thank you uh yeah you want to

2670
01:44:48,159 --> 01:44:49,040
answer

2671
01:44:49,040 --> 01:44:52,080
something no i think i'm done and you

2672
01:44:52,080 --> 01:44:53,679
have something else children

2673
01:44:53,679 --> 01:44:56,719
no no excellent thank you thank you for

2674
01:44:56,719 --> 01:44:57,760
the presentation

2675
01:44:57,760 --> 01:45:00,880
and we will follow up and

2676
01:45:00,880 --> 01:45:04,639
also discuss with the other dns related

2677
01:45:04,639 --> 01:45:06,719
chairs working groups uh what's the best

2678
01:45:06,719 --> 01:45:08,400
home for the presentation

2679
01:45:08,400 --> 01:45:11,920
for the sorry for the draft um

2680
01:45:11,920 --> 01:45:15,040
we go to the last presentation

2681
01:45:15,040 --> 01:45:19,040
um let's see

2682
01:45:20,320 --> 01:45:23,600
michael thank you you're already shall i

2683
01:45:23,600 --> 01:45:24,960
run the slides

2684
01:45:24,960 --> 01:45:28,239
uh let me yeah please go ahead

2685
01:45:28,239 --> 01:45:31,839
um i will give you

2686
01:45:34,080 --> 01:45:37,280
windows there we go okay hi

2687
01:45:37,280 --> 01:45:40,000
um so i'm here to talk about mud and dns

2688
01:45:40,000 --> 01:45:41,280
and iot

2689
01:45:41,280 --> 01:45:44,239
we all love to talk about iot devices um

2690
01:45:44,239 --> 01:45:45,679
and

2691
01:45:45,679 --> 01:45:48,080
there i'm sorry i've actually missed the

2692
01:45:48,080 --> 01:45:50,000
itf part in the title but it's in the

2693
01:45:50,000 --> 01:45:51,360
minutes correctly

2694
01:45:51,360 --> 01:45:53,440
um so what's the problem that i'm here

2695
01:45:53,440 --> 01:45:54,639
to talk about um

2696
01:45:54,639 --> 01:45:56,320
well we have this lovely thing the rfc

2697
01:45:56,320 --> 01:45:58,800
8520 manufacturer youtube's description

2698
01:45:58,800 --> 01:45:59,920
if you haven't checked it out

2699
01:45:59,920 --> 01:46:01,760
please it's a kind of very sweet little

2700
01:46:01,760 --> 01:46:04,000
protocol from elliott lear

2701
01:46:04,000 --> 01:46:06,880
basically describes a set of network

2702
01:46:06,880 --> 01:46:07,920
axles which i

2703
01:46:07,920 --> 01:46:09,360
now learn i'm supposed to pronounce that

2704
01:46:09,360 --> 01:46:10,960
way in yang

2705
01:46:10,960 --> 01:46:12,560
they're serialized to jason and they're

2706
01:46:12,560 --> 01:46:14,000
signed with cms

2707
01:46:14,000 --> 01:46:16,880
um and the idea is that the device says

2708
01:46:16,880 --> 01:46:17,760
i am

2709
01:46:17,760 --> 01:46:21,920
a foo kind of device um and uh

2710
01:46:21,920 --> 01:46:25,040
the um uh

2711
01:46:25,040 --> 01:46:27,440
the the the apples say these are what a

2712
01:46:27,440 --> 01:46:28,159
legitimate

2713
01:46:28,159 --> 01:46:30,639
connections are and if my div this

2714
01:46:30,639 --> 01:46:31,199
device

2715
01:46:31,199 --> 01:46:33,520
does something else then there's

2716
01:46:33,520 --> 01:46:34,960
probably a problem

2717
01:46:34,960 --> 01:46:37,119
and uh so there's a lot of people quite

2718
01:46:37,119 --> 01:46:38,239
excited this particularly in the

2719
01:46:38,239 --> 01:46:40,080
enterprise space particularly in health

2720
01:46:40,080 --> 01:46:40,719
where they have

2721
01:46:40,719 --> 01:46:42,719
hundreds and some thousands of devices

2722
01:46:42,719 --> 01:46:43,920
and they don't even know where they are

2723
01:46:43,920 --> 01:46:45,520
sometimes

2724
01:46:45,520 --> 01:46:46,880
and they really would like to get a

2725
01:46:46,880 --> 01:46:48,719
handle on what kind of network traffic

2726
01:46:48,719 --> 01:46:50,880
is legitimate and not legitimate

2727
01:46:50,880 --> 01:46:52,800
so but we'd like to use dns in these

2728
01:46:52,800 --> 01:46:54,880
apples and this can present challenges

2729
01:46:54,880 --> 01:46:56,320
and so first i'm going to explain how

2730
01:46:56,320 --> 01:46:57,440
not to do it and i'm sure

2731
01:46:57,440 --> 01:46:59,840
to you guys this is the dns op this is

2732
01:46:59,840 --> 01:47:01,040
totally obvious but

2733
01:47:01,040 --> 01:47:02,480
the part of the point of this document

2734
01:47:02,480 --> 01:47:04,480
is it's not obvious to many of the

2735
01:47:04,480 --> 01:47:07,040
people that this document is targeted at

2736
01:47:07,040 --> 01:47:08,000
so you

2737
01:47:08,000 --> 01:47:11,040
need to do a forward lookup right or do

2738
01:47:11,040 --> 01:47:12,800
you so people think okay i see the

2739
01:47:12,800 --> 01:47:13,600
packet

2740
01:47:13,600 --> 01:47:15,040
there's some source and destination

2741
01:47:15,040 --> 01:47:17,040
addresses i'll look up the ip address

2742
01:47:17,040 --> 01:47:18,719
with that reverse map right to get a

2743
01:47:18,719 --> 01:47:19,360
name

2744
01:47:19,360 --> 01:47:20,960
and then i'll compare that to my apple

2745
01:47:20,960 --> 01:47:22,800
will that work right well that's a total

2746
01:47:22,800 --> 01:47:24,320
fail and there's a whole bunch of

2747
01:47:24,320 --> 01:47:25,840
reasons for this you can't do it fast

2748
01:47:25,840 --> 01:47:27,360
enough there aren't really any reliable

2749
01:47:27,360 --> 01:47:28,400
reverse names

2750
01:47:28,400 --> 01:47:29,679
there's all sorts of things why this

2751
01:47:29,679 --> 01:47:32,000
doesn't work so don't do that that's

2752
01:47:32,000 --> 01:47:32,719
part of

2753
01:47:32,719 --> 01:47:34,159
the beginning of this document to say

2754
01:47:34,159 --> 01:47:36,000
this okay so you need to do it the other

2755
01:47:36,000 --> 01:47:37,840
way only do forward look up so you start

2756
01:47:37,840 --> 01:47:39,040
from the mud file

2757
01:47:39,040 --> 01:47:41,360
okay you do the access you do the dns

2758
01:47:41,360 --> 01:47:42,239
lookups to

2759
01:47:42,239 --> 01:47:45,840
on the names and you get an address

2760
01:47:45,840 --> 01:47:47,600
and that's what you write into your fib

2761
01:47:47,600 --> 01:47:49,679
policy the paul the positive parts that

2762
01:47:49,679 --> 01:47:50,239
say

2763
01:47:50,239 --> 01:47:52,639
okay i found this name it maps to this

2764
01:47:52,639 --> 01:47:53,360
thing

2765
01:47:53,360 --> 01:47:55,760
and that's what i put into my uh into my

2766
01:47:55,760 --> 01:47:57,360
firewall rule

2767
01:47:57,360 --> 01:47:58,960
so then i got to make sure i do this

2768
01:47:58,960 --> 01:48:01,119
right so i got to respect the ttl

2769
01:48:01,119 --> 01:48:02,800
um i got to make sure that i'm getting

2770
01:48:02,800 --> 01:48:04,400
the same address that

2771
01:48:04,400 --> 01:48:07,760
uh the uh the device is going to look up

2772
01:48:07,760 --> 01:48:10,480
and then we need to worry about dns over

2773
01:48:10,480 --> 01:48:12,800
http or quick or tls

2774
01:48:12,800 --> 01:48:15,199
along the way as well this document is

2775
01:48:15,199 --> 01:48:16,960
essentially about

2776
01:48:16,960 --> 01:48:19,440
so in the best scenario um in a home

2777
01:48:19,440 --> 01:48:20,320
network

2778
01:48:20,320 --> 01:48:22,960
um everything all of these components

2779
01:48:22,960 --> 01:48:24,400
happen in the same thing

2780
01:48:24,400 --> 01:48:26,320
your mud controller lives inside your

2781
01:48:26,320 --> 01:48:27,920
home router

2782
01:48:27,920 --> 01:48:31,119
and it consults the dns cache that

2783
01:48:31,119 --> 01:48:34,080
is on the home router um and it does the

2784
01:48:34,080 --> 01:48:36,400
dns lookups and the device uses the

2785
01:48:36,400 --> 01:48:38,000
does the nestle cups to the home router

2786
01:48:38,000 --> 01:48:40,800
so this has been you know the kind of

2787
01:48:40,800 --> 01:48:43,760
typical situation until you know five or

2788
01:48:43,760 --> 01:48:45,520
six years ago we kind of imagined

2789
01:48:45,520 --> 01:48:46,320
anything else

2790
01:48:46,320 --> 01:48:49,520
that way and so now things have changed

2791
01:48:49,520 --> 01:48:51,280
and so this is partly as about what is

2792
01:48:51,280 --> 01:48:53,040
what has changed okay

2793
01:48:53,040 --> 01:48:55,520
um it is more complicated in enterprises

2794
01:48:55,520 --> 01:48:56,960
um and there's a lot of

2795
01:48:56,960 --> 01:48:58,639
people who want to use various bits of

2796
01:48:58,639 --> 01:49:00,560
sdn to do this

2797
01:49:00,560 --> 01:49:02,080
and so this document is a little bit

2798
01:49:02,080 --> 01:49:03,840
about well how do you do that and

2799
01:49:03,840 --> 01:49:05,600
and this is where i'd really like a fair

2800
01:49:05,600 --> 01:49:07,520
bit of review and feedback as to whether

2801
01:49:07,520 --> 01:49:10,480
i'm getting all the things right

2802
01:49:10,480 --> 01:49:14,719
um so the document deals with um

2803
01:49:14,719 --> 01:49:16,480
how you should implement this how not to

2804
01:49:16,480 --> 01:49:18,560
do the right uh the things that we have

2805
01:49:18,560 --> 01:49:20,159
in the second slide

2806
01:49:20,159 --> 01:49:23,199
um and how not to leak the queries

2807
01:49:23,199 --> 01:49:27,119
and why you want to do this so i would

2808
01:49:27,119 --> 01:49:29,040
would love to have some feedback from

2809
01:49:29,040 --> 01:49:31,040
this group as to what parts i've missed

2810
01:49:31,040 --> 01:49:32,159
there

2811
01:49:32,159 --> 01:49:35,760
um one of the things that i believe that

2812
01:49:35,760 --> 01:49:37,840
i have correct but i i you know may just

2813
01:49:37,840 --> 01:49:39,920
not be operationally out there

2814
01:49:39,920 --> 01:49:42,880
um is the business of round robin dns

2815
01:49:42,880 --> 01:49:44,719
and geofence dns

2816
01:49:44,719 --> 01:49:46,800
my understanding is that for instance

2817
01:49:46,800 --> 01:49:48,719
that um

2818
01:49:48,719 --> 01:49:50,480
when you do round rob and dns that

2819
01:49:50,480 --> 01:49:52,400
you're supposed to get back the list of

2820
01:49:52,400 --> 01:49:54,480
all of the a records and quad a records

2821
01:49:54,480 --> 01:49:55,679
of course they don't all fit in the

2822
01:49:55,679 --> 01:49:56,320
packet

2823
01:49:56,320 --> 01:49:58,159
and that's part of the problem but that

2824
01:49:58,159 --> 01:49:59,599
you're supposed to use the first one and

2825
01:49:59,599 --> 01:50:00,960
that what's supposed to happen is it

2826
01:50:00,960 --> 01:50:02,719
just rotates which one is the first one

2827
01:50:02,719 --> 01:50:04,480
that's historically what happened

2828
01:50:04,480 --> 01:50:06,159
and if you do that and that's how it's

2829
01:50:06,159 --> 01:50:07,599
organized then it's

2830
01:50:07,599 --> 01:50:08,960
it's it's fine because the mud

2831
01:50:08,960 --> 01:50:10,880
controller gets the list of all possible

2832
01:50:10,880 --> 01:50:11,679
answers

2833
01:50:11,679 --> 01:50:13,679
can put them all into the forwarding uh

2834
01:50:13,679 --> 01:50:15,920
the axle and then the device when it

2835
01:50:15,920 --> 01:50:17,599
later gets one it gets whichever one it

2836
01:50:17,599 --> 01:50:19,040
thinks is the right one and everything's

2837
01:50:19,040 --> 01:50:20,560
good and as long as things don't change

2838
01:50:20,560 --> 01:50:22,080
faster than the ttl

2839
01:50:22,080 --> 01:50:24,400
then i think this works fine the issue

2840
01:50:24,400 --> 01:50:26,159
is that i think that in many cases there

2841
01:50:26,159 --> 01:50:28,000
are more a and quad a records than are

2842
01:50:28,000 --> 01:50:28,880
returned

2843
01:50:28,880 --> 01:50:31,199
and i think that in the geofence space

2844
01:50:31,199 --> 01:50:32,480
that of course you don't get all of the

2845
01:50:32,480 --> 01:50:34,080
names for all the world

2846
01:50:34,080 --> 01:50:37,360
but the hope is that if you can use the

2847
01:50:37,360 --> 01:50:39,280
right dns cache and it can convince all

2848
01:50:39,280 --> 01:50:41,440
the devices to use the same dns cache as

2849
01:50:41,440 --> 01:50:42,800
the mud controller

2850
01:50:42,800 --> 01:50:44,560
then you may get a consistent answer

2851
01:50:44,560 --> 01:50:45,840
back from from

2852
01:50:45,840 --> 01:50:49,760
uh things and uh life will be good

2853
01:50:49,760 --> 01:50:51,520
ben schwartz has some comments to the

2854
01:50:51,520 --> 01:50:52,960
list this week

2855
01:50:52,960 --> 01:50:54,639
that this may not be all good and i'd

2856
01:50:54,639 --> 01:50:56,800
like to know if there are any solutions

2857
01:50:56,800 --> 01:50:57,440
to this

2858
01:50:57,440 --> 01:51:00,639
um or whether essentially we're going to

2859
01:51:00,639 --> 01:51:02,080
have to guess and deal with what we

2860
01:51:02,080 --> 01:51:04,080
think is there

2861
01:51:04,080 --> 01:51:07,599
so um one of the pieces of advice to

2862
01:51:07,599 --> 01:51:10,639
iot devices specifically

2863
01:51:10,639 --> 01:51:13,360
is to use the dns provided by dhcp

2864
01:51:13,360 --> 01:51:14,000
whether

2865
01:51:14,000 --> 01:51:17,119
that's do 53 or doh or

2866
01:51:17,119 --> 01:51:19,280
dot or whatever but you should use that

2867
01:51:19,280 --> 01:51:21,280
one and not some other random one you

2868
01:51:21,280 --> 01:51:22,719
found on the internet that you think may

2869
01:51:22,719 --> 01:51:24,960
be more secure

2870
01:51:24,960 --> 01:51:28,400
and ideally that manufacturers when

2871
01:51:28,400 --> 01:51:29,520
they're dealing with

2872
01:51:29,520 --> 01:51:31,520
their devices are going to call back

2873
01:51:31,520 --> 01:51:33,199
typically to them

2874
01:51:33,199 --> 01:51:35,760
that they make sure that they are not

2875
01:51:35,760 --> 01:51:36,880
overloading that

2876
01:51:36,880 --> 01:51:38,880
that round robin answer and that they're

2877
01:51:38,880 --> 01:51:40,880
actually able to return all the records

2878
01:51:40,880 --> 01:51:41,360
because

2879
01:51:41,360 --> 01:51:43,280
mud requires some effort by the

2880
01:51:43,280 --> 01:51:44,560
manufacturer

2881
01:51:44,560 --> 01:51:47,119
um and so they would probably like it to

2882
01:51:47,119 --> 01:51:48,320
work

2883
01:51:48,320 --> 01:51:52,080
so there's my joke for that

2884
01:51:52,080 --> 01:51:54,239
um so that's really it that's my

2885
01:51:54,239 --> 01:51:55,440
question um

2886
01:51:55,440 --> 01:51:58,880
and you know did i get some things wrong

2887
01:51:58,880 --> 01:52:01,599
and we discussed this in ad at one point

2888
01:52:01,599 --> 01:52:02,080
um

2889
01:52:02,080 --> 01:52:03,679
it's not appropriate for there it now

2890
01:52:03,679 --> 01:52:05,920
has a home in ops awg which is the home

2891
01:52:05,920 --> 01:52:07,599
for mud so there's a not asking you to

2892
01:52:07,599 --> 01:52:09,119
adopt it i'm asking you to

2893
01:52:09,119 --> 01:52:11,599
please review it and tell us tell me

2894
01:52:11,599 --> 01:52:12,400
where i'm

2895
01:52:12,400 --> 01:52:16,400
where i've gone wrong

2896
01:52:16,400 --> 01:52:20,000
maybe there's one more slide yeah

2897
01:52:22,159 --> 01:52:25,440
ben you're in the queue hi

2898
01:52:25,440 --> 01:52:28,560
so i don't need to repeat my email um on

2899
01:52:28,560 --> 01:52:31,040
your previous slide i want to say

2900
01:52:31,040 --> 01:52:33,920
uh i have learned through my time here

2901
01:52:33,920 --> 01:52:34,800
that

2902
01:52:34,800 --> 01:52:38,000
rr sets in the dns are strictly

2903
01:52:38,000 --> 01:52:39,920
unordered sets there's no such thing as

2904
01:52:39,920 --> 01:52:42,080
the first element in the okay

2905
01:52:42,080 --> 01:52:45,599
that uh and that at least

2906
01:52:45,599 --> 01:52:49,119
if systems are conformant there is

2907
01:52:49,119 --> 01:52:51,760
uh no such thing as part of the set sets

2908
01:52:51,760 --> 01:52:52,159
are

2909
01:52:52,159 --> 01:52:55,840
atomic so yes okay

2910
01:52:55,840 --> 01:52:58,800
um that's good to know the authoritative

2911
01:52:58,800 --> 01:53:00,719
server

2912
01:53:00,719 --> 01:53:02,480
can give different sets to different

2913
01:53:02,480 --> 01:53:04,000
people so the

2914
01:53:04,000 --> 01:53:05,760
the actual domain owner may be handing

2915
01:53:05,760 --> 01:53:08,000
out different sets of ip addresses

2916
01:53:08,000 --> 01:53:11,280
to every time somebody asks

2917
01:53:11,280 --> 01:53:12,960
each of those sets is an atomic unit

2918
01:53:12,960 --> 01:53:15,520
that shouldn't subsequently be modified

2919
01:53:15,520 --> 01:53:18,719
but if you ask if you ask certainly

2920
01:53:18,719 --> 01:53:20,080
through two different resolvers you'll

2921
01:53:20,080 --> 01:53:20,400
get

2922
01:53:20,400 --> 01:53:22,480
two different answers even if you ask

2923
01:53:22,480 --> 01:53:24,320
twice through the same resolver

2924
01:53:24,320 --> 01:53:26,159
you can certainly get two different

2925
01:53:26,159 --> 01:53:27,760
answers unless it

2926
01:53:27,760 --> 01:53:30,639
so happens that the result you wanted is

2927
01:53:30,639 --> 01:53:32,159
still in cash

2928
01:53:32,159 --> 01:53:34,560
right and it's not sufficient for it to

2929
01:53:34,560 --> 01:53:36,080
have recently been queried

2930
01:53:36,080 --> 01:53:37,760
that's no guarantee that it's in cash

2931
01:53:37,760 --> 01:53:40,239
because caches have eviction

2932
01:53:40,239 --> 01:53:43,920
so so even if the ttl hasn't expired

2933
01:53:43,920 --> 01:53:45,280
that record could have been

2934
01:53:45,280 --> 01:53:48,320
evicted from the cache so when preparing

2935
01:53:48,320 --> 01:53:50,480
this document i went back and found some

2936
01:53:50,480 --> 01:53:53,199
some rfcs that explained round robin dns

2937
01:53:53,199 --> 01:53:53,520
and

2938
01:53:53,520 --> 01:53:56,159
and a lot of the lore was actually not

2939
01:53:56,159 --> 01:53:57,440
in a standard

2940
01:53:57,440 --> 01:53:59,679
um and and i believe that back at the

2941
01:53:59,679 --> 01:54:00,480
dawn of

2942
01:54:00,480 --> 01:54:02,960
you know the web browser um that there

2943
01:54:02,960 --> 01:54:04,960
was a belief that you could

2944
01:54:04,960 --> 01:54:08,320
um send back a ordered set and that the

2945
01:54:08,320 --> 01:54:11,119
browser was likely to use the first one

2946
01:54:11,119 --> 01:54:13,599
and that that's how you accomplished uh

2947
01:54:13,599 --> 01:54:14,239
both

2948
01:54:14,239 --> 01:54:16,000
fault tolerance they would get a set

2949
01:54:16,000 --> 01:54:17,599
that they have addresses that they could

2950
01:54:17,599 --> 01:54:18,400
try

2951
01:54:18,400 --> 01:54:20,480
um but that they were likely you would

2952
01:54:20,480 --> 01:54:22,239
steer them to the one that you wanted to

2953
01:54:22,239 --> 01:54:22,560
by

2954
01:54:22,560 --> 01:54:24,159
putting that first and you're telling me

2955
01:54:24,159 --> 01:54:25,920
that that's never really worked

2956
01:54:25,920 --> 01:54:29,440
and never really been uh there

2957
01:54:29,440 --> 01:54:30,639
so there are other people here can

2958
01:54:30,639 --> 01:54:32,960
answer that more authoritatively

2959
01:54:32,960 --> 01:54:35,599
but the bottom line is that your

2960
01:54:35,599 --> 01:54:37,520
resolver is within its rights to shuffle

2961
01:54:37,520 --> 01:54:38,560
those

2962
01:54:38,560 --> 01:54:41,599
yeah and and and that's actually okay

2963
01:54:41,599 --> 01:54:43,280
because i don't care about the ordering

2964
01:54:43,280 --> 01:54:45,280
of it as long as i get the complete set

2965
01:54:45,280 --> 01:54:46,960
i'm happy because i have to i assume

2966
01:54:46,960 --> 01:54:48,400
that that's going to happen

2967
01:54:48,400 --> 01:54:50,400
and that's why i went back to read that

2968
01:54:50,400 --> 01:54:51,920
to say okay well what's going on and

2969
01:54:51,920 --> 01:54:52,960
said okay so

2970
01:54:52,960 --> 01:54:54,320
it's not that they're returning one

2971
01:54:54,320 --> 01:54:56,800
answer and ignoring the rest they're

2972
01:54:56,800 --> 01:54:57,679
supposed to return

2973
01:54:57,679 --> 01:55:01,040
all of the answers and uh the hint was

2974
01:55:01,040 --> 01:55:03,119
the first one is the one to use but not

2975
01:55:03,119 --> 01:55:04,320
everyone did that

2976
01:55:04,320 --> 01:55:08,000
yeah i i think burial uh

2977
01:55:08,000 --> 01:55:10,000
so yeah beyond that i'll just say i'll

2978
01:55:10,000 --> 01:55:11,280
i'll stick to the

2979
01:55:11,280 --> 01:55:13,040
email and we should follow up there

2980
01:55:13,040 --> 01:55:14,560
thanks for that email too james

2981
01:55:14,560 --> 01:55:17,599
ben peter yeah peter

2982
01:55:17,599 --> 01:55:19,280
i queued three times and then ben said

2983
01:55:19,280 --> 01:55:21,520
what i wanted to say sorry bq

2984
01:55:21,520 --> 01:55:23,280
uh but just to the last bit when he said

2985
01:55:23,280 --> 01:55:25,040
to ben so you're telling me this was

2986
01:55:25,040 --> 01:55:26,400
never true

2987
01:55:26,400 --> 01:55:28,080
um the things you're saying about ron

2988
01:55:28,080 --> 01:55:30,480
robin trying the first address etc

2989
01:55:30,480 --> 01:55:32,239
they have always been statistically

2990
01:55:32,239 --> 01:55:35,040
cheap but that's not good enough for you

2991
01:55:35,040 --> 01:55:36,320
[Music]

2992
01:55:36,320 --> 01:55:37,920
i don't care if it's if it's the first

2993
01:55:37,920 --> 01:55:39,679
one i'm not trying to i'm not the web

2994
01:55:39,679 --> 01:55:42,000
service trying to direct you to a

2995
01:55:42,000 --> 01:55:43,599
particular server

2996
01:55:43,599 --> 01:55:47,280
right no um uh just i went back to look

2997
01:55:47,280 --> 01:55:48,080
at that to see

2998
01:55:48,080 --> 01:55:51,119
what was happening in that space

2999
01:55:51,119 --> 01:55:53,840
and at the time that's what people were

3000
01:55:53,840 --> 01:55:54,880
believing

3001
01:55:54,880 --> 01:55:57,599
but they said but you always return the

3002
01:55:57,599 --> 01:55:59,520
entire set of all the addresses because

3003
01:55:59,520 --> 01:56:01,040
that's what i really cared about was

3004
01:56:01,040 --> 01:56:01,440
that

3005
01:56:01,440 --> 01:56:03,840
you would always get the the whole set

3006
01:56:03,840 --> 01:56:05,599
because because of that and what what

3007
01:56:05,599 --> 01:56:06,719
ben said about

3008
01:56:06,719 --> 01:56:09,440
about cash eviction policy is absolutely

3009
01:56:09,440 --> 01:56:11,040
uh true and i think that's one of the

3010
01:56:11,040 --> 01:56:12,800
challenges and implementation challenges

3011
01:56:12,800 --> 01:56:13,280
and

3012
01:56:13,280 --> 01:56:16,159
partly why uh we'd really like the iot

3013
01:56:16,159 --> 01:56:17,360
device to use

3014
01:56:17,360 --> 01:56:20,080
a dns server that is under the control

3015
01:56:20,080 --> 01:56:20,639
of the

3016
01:56:20,639 --> 01:56:23,679
the mud system such that we can uh

3017
01:56:23,679 --> 01:56:25,760
either be aware and override the cache

3018
01:56:25,760 --> 01:56:27,119
eviction policy

3019
01:56:27,119 --> 01:56:29,920
or uh we can do something intelligent to

3020
01:56:29,920 --> 01:56:31,119
knowing when

3021
01:56:31,119 --> 01:56:32,880
if there's a re-query we can see the

3022
01:56:32,880 --> 01:56:36,239
re-query and know what happened that way

3023
01:56:36,239 --> 01:56:39,199
things and michael you're you're running

3024
01:56:39,199 --> 01:56:40,239
your own time

3025
01:56:40,239 --> 01:56:41,840
are you managing your own time now

3026
01:56:41,840 --> 01:56:44,320
because you also want it's your both

3027
01:56:44,320 --> 01:56:46,880
uh yeah so let me do that then peter and

3028
01:56:46,880 --> 01:56:47,599
benjamin

3029
01:56:47,599 --> 01:56:50,880
uh on queue um

3030
01:56:50,880 --> 01:56:54,400
but again um you're in charge now

3031
01:56:54,400 --> 01:56:57,280
we have four why don't you ask your

3032
01:56:57,280 --> 01:56:59,920
question while i switch the slide

3033
01:56:59,920 --> 01:57:02,159
yeah are there any uh are any questions

3034
01:57:02,159 --> 01:57:04,480
still

3035
01:57:06,239 --> 01:57:07,920
ben schwartz so this isn't a question

3036
01:57:07,920 --> 01:57:09,520
but i'll just say i think that this

3037
01:57:09,520 --> 01:57:11,360
this draft has has hit upon a real

3038
01:57:11,360 --> 01:57:12,719
problem but i don't think it can be

3039
01:57:12,719 --> 01:57:13,760
solved with

3040
01:57:13,760 --> 01:57:16,080
operational considerations i think that

3041
01:57:16,080 --> 01:57:18,080
mud dns is basically

3042
01:57:18,080 --> 01:57:20,960
slightly mis-specified or or at least

3043
01:57:20,960 --> 01:57:22,239
specified in an

3044
01:57:22,239 --> 01:57:24,480
in an unclear where the the logical

3045
01:57:24,480 --> 01:57:25,520
interpretation

3046
01:57:25,520 --> 01:57:27,199
the the intuitive interpretation is

3047
01:57:27,199 --> 01:57:28,800
wrong so

3048
01:57:28,800 --> 01:57:30,560
well and i i don't want to follow up

3049
01:57:30,560 --> 01:57:32,639
with that on the list um

3050
01:57:32,639 --> 01:57:38,000
i think we should very well taken

3051
01:57:38,000 --> 01:57:40,400
so uh tomorrow morning this is an

3052
01:57:40,400 --> 01:57:42,320
unrelated thing to make a clear break i

3053
01:57:42,320 --> 01:57:44,000
don't have a hat to change here

3054
01:57:44,000 --> 01:57:47,119
um uh wes and i are co-chairing a buff

3055
01:57:47,119 --> 01:57:48,560
called danish

3056
01:57:48,560 --> 01:57:52,480
um oh i can't get the acronym right so i

3057
01:57:52,480 --> 01:57:53,440
won't even try

3058
01:57:53,440 --> 01:57:56,480
um but um

3059
01:57:56,480 --> 01:57:59,599
it's about dane and it's about iot

3060
01:57:59,599 --> 01:58:02,800
security hardening that's the ish um

3061
01:58:02,800 --> 01:58:04,880
but i can't remember how the dan works

3062
01:58:04,880 --> 01:58:06,080
now but anyway it's tomorrow

3063
01:58:06,080 --> 01:58:09,360
morning in room eight uh first thing um

3064
01:58:09,360 --> 01:58:11,199
it's going to be discussing these three

3065
01:58:11,199 --> 01:58:13,360
three drafts and discussing the problem

3066
01:58:13,360 --> 01:58:15,599
space for these three drafts

3067
01:58:15,599 --> 01:58:17,280
clicking the right thing this is a bit

3068
01:58:17,280 --> 01:58:19,280
about our our agenda so you can see

3069
01:58:19,280 --> 01:58:20,000
where we're going

3070
01:58:20,000 --> 01:58:22,239
we're really trying to figure out if we

3071
01:58:22,239 --> 01:58:24,800
understand what the problem space is

3072
01:58:24,800 --> 01:58:28,239
and uh uh to understand what problem

3073
01:58:28,239 --> 01:58:29,920
we're trying to solve here

3074
01:58:29,920 --> 01:58:32,800
um and there's been a lot of interest

3075
01:58:32,800 --> 01:58:34,800
over many years in coming back to dane

3076
01:58:34,800 --> 01:58:36,159
to do things

3077
01:58:36,159 --> 01:58:38,639
and it looks like that iot uh there are

3078
01:58:38,639 --> 01:58:40,400
a number of iot vendors that

3079
01:58:40,400 --> 01:58:42,080
uh think that this may actually help

3080
01:58:42,080 --> 01:58:44,320
them a great deal um and so there's some

3081
01:58:44,320 --> 01:58:46,800
there's where it's coming from so this

3082
01:58:46,800 --> 01:58:48,639
is the thing come if you can watch the

3083
01:58:48,639 --> 01:58:50,960
video if you can't join the mailing list

3084
01:58:50,960 --> 01:58:54,880
and uh that's again the the um

3085
01:58:54,880 --> 01:58:57,280
uh some of the goals part of the goal is

3086
01:58:57,280 --> 01:58:59,440
to deal to be able to support

3087
01:58:59,440 --> 01:59:02,480
object security um as well as

3088
01:59:02,480 --> 01:59:05,520
session security for this um so that may

3089
01:59:05,520 --> 01:59:06,880
be something that

3090
01:59:06,880 --> 01:59:08,800
some of you are interested in if you

3091
01:59:08,800 --> 01:59:10,639
want to see your

3092
01:59:10,639 --> 01:59:13,840
uh non-dns uh queries

3093
01:59:13,840 --> 01:59:16,639
get across the network without uh being

3094
01:59:16,639 --> 01:59:17,440
seen

3095
01:59:17,440 --> 01:59:21,760
thank you paul you had a question

3096
01:59:21,760 --> 01:59:23,360
a very quick question cause i know we're

3097
01:59:23,360 --> 01:59:24,960
out of time is that supposed to be

3098
01:59:24,960 --> 01:59:27,760
um uh working group forming or just

3099
01:59:27,760 --> 01:59:28,840
discussion

3100
01:59:28,840 --> 01:59:32,560
off non-working group forming this time

3101
01:59:32,560 --> 01:59:35,520
um we we're we are we are closer to

3102
01:59:35,520 --> 01:59:37,360
working group farming now than we were

3103
01:59:37,360 --> 01:59:39,199
when the buff was requested

3104
01:59:39,199 --> 01:59:40,960
but we are not going to be uh

3105
01:59:40,960 --> 01:59:42,480
wordsmithing a charter

3106
01:59:42,480 --> 01:59:45,679
uh at the meeting tomorrow so you won't

3107
01:59:45,679 --> 01:59:46,800
miss that if you

3108
01:59:46,800 --> 01:59:49,840
if that matters to you

3109
01:59:52,400 --> 01:59:59,839
thanks thank you all for your time

3110
02:00:00,000 --> 02:00:02,719
yeah i think i think we're done um

3111
02:00:02,719 --> 02:00:04,639
unless benno or tim had anything else to

3112
02:00:04,639 --> 02:00:05,920
add

3113
02:00:05,920 --> 02:00:08,800
um in particular these last two drafts

3114
02:00:08,800 --> 02:00:10,840
yaris and and michael's

3115
02:00:10,840 --> 02:00:14,239
um it's really helpful to even even for

3116
02:00:14,239 --> 02:00:15,360
work that

3117
02:00:15,360 --> 02:00:17,199
no that we don't anticipate will happen

3118
02:00:17,199 --> 02:00:18,400
in dns op

3119
02:00:18,400 --> 02:00:20,080
or drafts that we don't anticipate will

3120
02:00:20,080 --> 02:00:22,239
be adopted here it's really helpful to

3121
02:00:22,239 --> 02:00:23,440
people sometimes to have

3122
02:00:23,440 --> 02:00:26,159
the feedback from the dns operations

3123
02:00:26,159 --> 02:00:27,119
experts

3124
02:00:27,119 --> 02:00:28,960
so thanks everybody that's commented on

3125
02:00:28,960 --> 02:00:30,719
those and if you want to comment and

3126
02:00:30,719 --> 02:00:31,280
haven't

3127
02:00:31,280 --> 02:00:34,560
please please feel free to um

3128
02:00:34,560 --> 02:00:37,280
reach across and and provide some cross

3129
02:00:37,280 --> 02:00:40,480
area review for it for those documents

3130
02:00:40,480 --> 02:00:44,480
and i think that is the end of dns opt

3131
02:00:44,480 --> 02:00:46,239
for ietf110

3132
02:00:46,239 --> 02:00:48,800
unless benno has something to add or tim

3133
02:00:48,800 --> 02:00:50,480
i guess

3134
02:00:50,480 --> 02:00:53,040
um it's not at all clear whether

3135
02:00:53,040 --> 02:00:54,000
there'll be a

3136
02:00:54,000 --> 02:00:56,639
in-person ietf next time or not but in

3137
02:00:56,639 --> 02:00:59,520
any case there will be an ietf 111

3138
02:00:59,520 --> 02:01:02,560
and we'll see everybody there one way or

3139
02:01:02,560 --> 02:01:03,599
another

3140
02:01:03,599 --> 02:01:06,159
thanks for your time thank you thank you

3141
02:01:06,159 --> 02:01:07,360
all

3142
02:01:07,360 --> 02:01:09,839
bye

