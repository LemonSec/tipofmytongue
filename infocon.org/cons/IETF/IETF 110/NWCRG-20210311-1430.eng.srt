1
00:00:04,960 --> 00:00:17,920
only cannot hear us

2
00:00:35,120 --> 00:00:38,879
uh we will start in a few minutes

3
00:00:39,120 --> 00:00:43,680
oh yes i suggest we start quite rapidly

4
00:00:43,680 --> 00:00:47,440
it's 9 it's 3 30 pm so

5
00:00:47,440 --> 00:00:51,280
wait one minute okay we can do that

6
00:00:51,280 --> 00:00:59,840
who's missing nikola is missing

7
00:01:11,840 --> 00:01:13,920
you

8
00:01:41,280 --> 00:01:45,040
okay i guess we can start

9
00:01:45,040 --> 00:01:47,840
um yes

10
00:01:48,159 --> 00:01:51,680
hello welcome everyone uh this is the

11
00:01:51,680 --> 00:01:53,439
uh coding for efficient network

12
00:01:53,439 --> 00:01:56,640
communication research group

13
00:01:56,640 --> 00:02:00,079
next slide sorry

14
00:02:00,079 --> 00:02:02,640
oh and uh well i'm matthew simon petty

15
00:02:02,640 --> 00:02:03,280
and my

16
00:02:03,280 --> 00:02:06,079
uh or my co-chair uh vanessa is there

17
00:02:06,079 --> 00:02:07,600
too

18
00:02:07,600 --> 00:02:11,440
so um our goals which have not changed

19
00:02:11,440 --> 00:02:12,959
since a long time

20
00:02:12,959 --> 00:02:15,200
is to foster research and network and

21
00:02:15,200 --> 00:02:17,040
application layer coding

22
00:02:17,040 --> 00:02:19,680
and the goal is to improve network

23
00:02:19,680 --> 00:02:21,040
performance

24
00:02:21,040 --> 00:02:23,920
so through the years we looked at coding

25
00:02:23,920 --> 00:02:26,480
coding libraries the protocols to use

26
00:02:26,480 --> 00:02:27,760
these codes

27
00:02:27,760 --> 00:02:31,200
and a lot of uh real world use cases

28
00:02:31,200 --> 00:02:33,280
and there's work in progress especially

29
00:02:33,280 --> 00:02:36,319
in congestion control for example

30
00:02:36,319 --> 00:02:38,879
next slide

31
00:02:42,400 --> 00:02:46,000
so uh ipr has always been a problem with

32
00:02:46,000 --> 00:02:46,640
this group

33
00:02:46,640 --> 00:02:49,280
we remind everybody that everything that

34
00:02:49,280 --> 00:02:50,080
is presented

35
00:02:50,080 --> 00:02:53,440
here if you have ipr should be

36
00:02:53,440 --> 00:02:55,840
uh disclosed and that the group should

37
00:02:55,840 --> 00:02:57,599
be aware of it

38
00:02:57,599 --> 00:03:00,159
next slide

39
00:03:02,319 --> 00:03:05,440
uh there's also a code of conduct it

40
00:03:05,440 --> 00:03:07,440
actually there were issues this week and

41
00:03:07,440 --> 00:03:08,800
the ietf

42
00:03:08,800 --> 00:03:11,280
about people who had not read that and

43
00:03:11,280 --> 00:03:12,800
instead of bullying people

44
00:03:12,800 --> 00:03:18,319
and that's not acceptable so next night

45
00:03:18,319 --> 00:03:20,480
so the goal of the irtf i think it's

46
00:03:20,480 --> 00:03:22,879
also extremely important and this

47
00:03:22,879 --> 00:03:27,519
is a uh a not a warning but an advice to

48
00:03:27,519 --> 00:03:30,840
everyone presenting we are not

49
00:03:30,840 --> 00:03:32,000
standardization

50
00:03:32,000 --> 00:03:34,560
we're not there to standardize anything

51
00:03:34,560 --> 00:03:35,200
where they

52
00:03:35,200 --> 00:03:38,879
foster research to present research to

53
00:03:38,879 --> 00:03:42,000
to essentially

54
00:03:42,000 --> 00:03:44,799
create research communities around

55
00:03:44,799 --> 00:03:46,959
network coding and not

56
00:03:46,959 --> 00:03:49,760
just to present a bunch of solutions for

57
00:03:49,760 --> 00:03:52,239
standardization which is not the role

58
00:03:52,239 --> 00:03:54,720
so please when you present highlight

59
00:03:54,720 --> 00:03:55,360
what

60
00:03:55,360 --> 00:03:57,519
is the role of the research and what the

61
00:03:57,519 --> 00:03:58,720
community will

62
00:03:58,720 --> 00:04:03,120
will gain from it next play

63
00:04:05,599 --> 00:04:08,640
uh so great but we're on

64
00:04:08,640 --> 00:04:11,519
online it's recorded so we can have we

65
00:04:11,519 --> 00:04:13,840
can do the minutes later

66
00:04:13,840 --> 00:04:16,560
we didn't have anyone to take minutes

67
00:04:16,560 --> 00:04:18,320
but i guess we can do it from

68
00:04:18,320 --> 00:04:21,918
the recording it's great also

69
00:04:21,918 --> 00:04:25,440
that the uh the blue sheet is now

70
00:04:25,440 --> 00:04:27,440
automatically generated so don't worry

71
00:04:27,440 --> 00:04:29,120
you we know you we know you're there

72
00:04:29,120 --> 00:04:32,160
well we know you're there um big big

73
00:04:32,160 --> 00:04:34,080
brother is watching you i guess

74
00:04:34,080 --> 00:04:36,720
uh and you can actually press the raise

75
00:04:36,720 --> 00:04:37,280
hand

76
00:04:37,280 --> 00:04:40,000
if you want to talk um and if you want

77
00:04:40,000 --> 00:04:41,520
to ask questions

78
00:04:41,520 --> 00:04:43,600
i would say also another great way of

79
00:04:43,600 --> 00:04:45,680
asking questions is putting question in

80
00:04:45,680 --> 00:04:46,880
the chat

81
00:04:46,880 --> 00:04:48,960
and both bayside and i will monitor the

82
00:04:48,960 --> 00:04:50,960
chat to make sure that we know that

83
00:04:50,960 --> 00:04:54,160
you're in line for a question

84
00:04:54,160 --> 00:04:57,199
next slide so our agenda

85
00:04:57,199 --> 00:05:00,240
uh there's there's me now

86
00:05:00,240 --> 00:05:02,400
uh hopefully it won't be ten minutes and

87
00:05:02,400 --> 00:05:03,280
then uh

88
00:05:03,280 --> 00:05:05,440
we're going to have uh the presentation

89
00:05:05,440 --> 00:05:06,560
on bats which is

90
00:05:06,560 --> 00:05:09,680
a coding scheme for

91
00:05:09,680 --> 00:05:12,639
uh obviously the ongoing research on

92
00:05:12,639 --> 00:05:14,639
coding and congestion control which is

93
00:05:14,639 --> 00:05:15,840
also done in

94
00:05:15,840 --> 00:05:17,919
almost collaboration with our friends in

95
00:05:17,919 --> 00:05:21,520
the in congestion control research group

96
00:05:21,520 --> 00:05:24,560
and more from morton about

97
00:05:24,560 --> 00:05:27,919
uh latency and reliability for block and

98
00:05:27,919 --> 00:05:30,320
sliding codes

99
00:05:30,320 --> 00:05:34,320
and then we wrap up

100
00:05:35,840 --> 00:05:39,280
uh so we have a new rfc for instance

101
00:05:39,280 --> 00:05:40,960
last time congratulations

102
00:05:40,960 --> 00:05:44,080
to every author uh

103
00:05:44,080 --> 00:05:48,160
we have the one that i should

104
00:05:48,160 --> 00:05:52,000
be more uh forceful on but i've been uh

105
00:05:52,000 --> 00:05:54,000
busy on other things but we actually are

106
00:05:54,000 --> 00:05:55,680
pushing the nc for

107
00:05:55,680 --> 00:06:00,240
uh cc and icn we have bats that's uh

108
00:06:00,240 --> 00:06:03,360
kind of ready to to move on

109
00:06:03,360 --> 00:06:06,639
to uh you know becoming

110
00:06:06,639 --> 00:06:09,440
uh more than an rg document but also

111
00:06:09,440 --> 00:06:11,120
going to last call

112
00:06:11,120 --> 00:06:13,440
and the uh coding for congestion control

113
00:06:13,440 --> 00:06:15,039
is also very much

114
00:06:15,039 --> 00:06:16,400
progressing and there's going to be

115
00:06:16,400 --> 00:06:18,400
presentations on those two

116
00:06:18,400 --> 00:06:21,840
drafts today

117
00:06:27,120 --> 00:06:30,000
so the action needed is the coding for

118
00:06:30,000 --> 00:06:31,520
quick

119
00:06:31,520 --> 00:06:33,520
we have decided to put it on hold a

120
00:06:33,520 --> 00:06:34,880
little bit while quick was

121
00:06:34,880 --> 00:06:36,960
pushing uh deciding what they were going

122
00:06:36,960 --> 00:06:38,080
to do

123
00:06:38,080 --> 00:06:41,840
and we have to decide if we want to push

124
00:06:41,840 --> 00:06:42,960
that to be a quick

125
00:06:42,960 --> 00:06:45,759
draft or what we want to do with it and

126
00:06:45,759 --> 00:06:47,680
then there's tetris

127
00:06:47,680 --> 00:06:50,800
the group of tetris has actually uh told

128
00:06:50,800 --> 00:06:52,319
us that they wanted

129
00:06:52,319 --> 00:06:54,319
to continue the document and put it to a

130
00:06:54,319 --> 00:06:55,680
level where it could be

131
00:06:55,680 --> 00:07:00,840
uh you know pushed forward also to the

132
00:07:00,840 --> 00:07:02,319
isu

133
00:07:02,319 --> 00:07:04,880
next slide

134
00:07:05,840 --> 00:07:09,120
so um maybe our plan is

135
00:07:09,120 --> 00:07:13,759
to meet at ietf 111 we will

136
00:07:13,759 --> 00:07:16,400
meet probably at an interim to make sure

137
00:07:16,400 --> 00:07:17,520
we do that

138
00:07:17,520 --> 00:07:20,639
we want to close the group i think we've

139
00:07:20,639 --> 00:07:21,360
achieved

140
00:07:21,360 --> 00:07:24,400
everything we wanted to do and uh since

141
00:07:24,400 --> 00:07:25,120
there's

142
00:07:25,120 --> 00:07:27,360
the the research community is not as

143
00:07:27,360 --> 00:07:29,280
large as it was and i think in terms of

144
00:07:29,280 --> 00:07:30,160
our milestone

145
00:07:30,160 --> 00:07:32,720
we met everything so we planned to close

146
00:07:32,720 --> 00:07:33,360
the group

147
00:07:33,360 --> 00:07:36,720
at ietf 2011.

148
00:07:38,720 --> 00:07:42,880
yeah that's it well done thank you

149
00:07:42,880 --> 00:07:46,080
so now the next presentation is from

150
00:07:46,080 --> 00:07:47,440
raymond so raymond

151
00:07:47,440 --> 00:07:51,919
can you uh come up

152
00:07:51,919 --> 00:07:55,120
i have your slides yes i'm here i'm here

153
00:07:55,120 --> 00:07:59,120
yeah i will share your slides now

154
00:07:59,120 --> 00:08:04,400
um yes that's the right button

155
00:08:05,039 --> 00:08:10,560
it's arriving yep here we are

156
00:08:10,560 --> 00:08:13,759
okay uh i will switch off my video

157
00:08:13,759 --> 00:08:16,479
if you can put your own video that's uh

158
00:08:16,479 --> 00:08:17,520
okay nice

159
00:08:17,520 --> 00:08:21,599
if you want that to you yeah sure yeah

160
00:08:21,599 --> 00:08:24,160
hello everybody and good morning uh good

161
00:08:24,160 --> 00:08:26,800
afternoon it's night time in hong kong

162
00:08:26,800 --> 00:08:28,560
so i'm going i'm going to give you an

163
00:08:28,560 --> 00:08:30,240
update on the

164
00:08:30,240 --> 00:08:33,120
deployment of bass codes and next slides

165
00:08:33,120 --> 00:08:35,440
please

166
00:08:39,440 --> 00:08:42,719
okay so uh just uh a few very quick uh

167
00:08:42,719 --> 00:08:45,600
brief introduction uh why do we care

168
00:08:45,600 --> 00:08:46,560
about bats

169
00:08:46,560 --> 00:08:48,560
uh because the wireless communication uh

170
00:08:48,560 --> 00:08:50,480
multi-hub is a long-standing

171
00:08:50,480 --> 00:08:53,120
problem you know if uh data packets are

172
00:08:53,120 --> 00:08:54,399
treated as commodities

173
00:08:54,399 --> 00:08:56,320
you know when you go through different

174
00:08:56,320 --> 00:08:57,519
uh hubs and

175
00:08:57,519 --> 00:09:00,320
the uh pack loss will keep uh

176
00:09:00,320 --> 00:09:01,600
accumulating

177
00:09:01,600 --> 00:09:03,760
and that's why you know usually after a

178
00:09:03,760 --> 00:09:04,800
few hops you

179
00:09:04,800 --> 00:09:07,279
it's very hard to transmit for exa in

180
00:09:07,279 --> 00:09:09,440
particular video very smoothly

181
00:09:09,440 --> 00:09:11,360
and uh in the industry sometimes it is

182
00:09:11,360 --> 00:09:14,160
referred to as the multi-multi-hop curse

183
00:09:14,160 --> 00:09:16,640
and uh by doing recording at the

184
00:09:16,640 --> 00:09:17,600
intermediate nodes

185
00:09:17,600 --> 00:09:20,399
uh bats which is a an efficient

186
00:09:20,399 --> 00:09:22,640
implementation of network coding

187
00:09:22,640 --> 00:09:24,399
the transmission can sustain tens or

188
00:09:24,399 --> 00:09:25,920
even hundreds of hops

189
00:09:25,920 --> 00:09:27,760
and without relying on link by link

190
00:09:27,760 --> 00:09:29,839
retransmission which by the way is very

191
00:09:29,839 --> 00:09:30,399
bad for

192
00:09:30,399 --> 00:09:33,120
video transmission as many of us know

193
00:09:33,120 --> 00:09:36,000
next night please

194
00:09:36,000 --> 00:09:38,480
okay uh here's a monograph that we uh

195
00:09:38,480 --> 00:09:40,320
that i published with uh shanghai

196
00:09:40,320 --> 00:09:44,320
back in 2017. uh next slide please

197
00:09:44,320 --> 00:09:46,080
okay here's a quick performance

198
00:09:46,080 --> 00:09:49,200
comparison assuming that there's a 20

199
00:09:49,200 --> 00:09:51,920
packet loss on each link then the the

200
00:09:51,920 --> 00:09:53,760
red curve is the

201
00:09:53,760 --> 00:09:56,240
performance uh i mean the throughput for

202
00:09:56,240 --> 00:09:56,800
any

203
00:09:56,800 --> 00:09:59,839
uh routing based protocol uh it could be

204
00:09:59,839 --> 00:10:03,040
tcp or of end to end founding code

205
00:10:03,040 --> 00:10:05,120
x-axis is the number of hops and the

206
00:10:05,120 --> 00:10:06,880
y-axis is the throughput

207
00:10:06,880 --> 00:10:09,760
and uh we can see that you know uh when

208
00:10:09,760 --> 00:10:10,240
when you

209
00:10:10,240 --> 00:10:13,279
the number of hops increases then uh the

210
00:10:13,279 --> 00:10:14,640
throughput actually decreases

211
00:10:14,640 --> 00:10:16,800
um exponentially fast because every time

212
00:10:16,800 --> 00:10:18,800
you multiply by 0.8

213
00:10:18,800 --> 00:10:22,240
and whereas for best code the um the

214
00:10:22,240 --> 00:10:24,399
throughput can sustain very well and

215
00:10:24,399 --> 00:10:25,760
after 50 hops

216
00:10:25,760 --> 00:10:28,320
uh the throughput can still sustain at

217
00:10:28,320 --> 00:10:29,680
1.7

218
00:10:29,680 --> 00:10:33,120
next slide piece and even after a

219
00:10:33,120 --> 00:10:33,760
thousand

220
00:10:33,760 --> 00:10:36,640
hubs the throughput can still uh be

221
00:10:36,640 --> 00:10:38,480
around 0.66

222
00:10:38,480 --> 00:10:41,519
next one please okay um

223
00:10:41,519 --> 00:10:44,320
the our first employment of basco is

224
00:10:44,320 --> 00:10:44,880
actually

225
00:10:44,880 --> 00:10:47,200
in the hong kong government's smart

226
00:10:47,200 --> 00:10:48,640
lamppost project

227
00:10:48,640 --> 00:10:52,560
next please okay so this is the

228
00:10:52,560 --> 00:10:55,600
uh an illustration of the system uh

229
00:10:55,600 --> 00:10:56,320
suppose

230
00:10:56,320 --> 00:10:58,720
uh on the same street we have a number

231
00:10:58,720 --> 00:11:00,240
of lamp posts

232
00:11:00,240 --> 00:11:02,320
and the left one is connected to an

233
00:11:02,320 --> 00:11:03,680
optical fiber

234
00:11:03,680 --> 00:11:06,160
and the rest are connected through this

235
00:11:06,160 --> 00:11:08,480
wireless multi-hub network enabled by

236
00:11:08,480 --> 00:11:12,959
by bass code next please

237
00:11:13,200 --> 00:11:16,399
okay so um in 2019 we successfully

238
00:11:16,399 --> 00:11:17,760
deployed uh

239
00:11:17,760 --> 00:11:20,959
uh bats in 36 smart lampposts

240
00:11:20,959 --> 00:11:24,160
however due to the social unrest the

241
00:11:24,160 --> 00:11:26,320
general public is concerned about the

242
00:11:26,320 --> 00:11:28,160
installation of video cameras on the

243
00:11:28,160 --> 00:11:28,880
lamppost

244
00:11:28,880 --> 00:11:32,320
due to possible infringement of privacy

245
00:11:32,320 --> 00:11:36,959
and however uh uh we we learned that

246
00:11:36,959 --> 00:11:39,600
it is quite quite hopeful then the uh

247
00:11:39,600 --> 00:11:40,959
the project can

248
00:11:40,959 --> 00:11:42,800
resume by the end of this year with the

249
00:11:42,800 --> 00:11:44,480
video cameras replaced by

250
00:11:44,480 --> 00:11:48,880
lighters next next one please

251
00:11:48,880 --> 00:11:50,800
okay there's a picture of the smart

252
00:11:50,800 --> 00:11:52,480
lamppost that we have

253
00:11:52,480 --> 00:11:56,160
deployed next please

254
00:11:56,160 --> 00:11:59,519
okay um currently we are building a

255
00:11:59,519 --> 00:12:02,720
smart lamppost testbed on the chk that's

256
00:12:02,720 --> 00:12:04,560
my university the chinese university of

257
00:12:04,560 --> 00:12:05,760
hong kong campus

258
00:12:05,760 --> 00:12:10,000
next place

259
00:12:10,000 --> 00:12:12,639
okay so uh what we are uh well one thing

260
00:12:12,639 --> 00:12:13,600
i would like to

261
00:12:13,600 --> 00:12:16,000
uh bring up is is something quite

262
00:12:16,000 --> 00:12:17,600
interesting uh because bats is

263
00:12:17,600 --> 00:12:18,880
inherently a

264
00:12:18,880 --> 00:12:20,880
uh a fault computing application because

265
00:12:20,880 --> 00:12:23,120
the computation must be done at the edge

266
00:12:23,120 --> 00:12:23,760
okay there's

267
00:12:23,760 --> 00:12:27,120
no choice and so we're going to

268
00:12:27,120 --> 00:12:30,639
install 24 computing based smart lampos

269
00:12:30,639 --> 00:12:32,959
on our campus with bats being provided

270
00:12:32,959 --> 00:12:34,240
as a service

271
00:12:34,240 --> 00:12:37,920
and after the network is being set up uh

272
00:12:37,920 --> 00:12:40,079
different services pro will will be

273
00:12:40,079 --> 00:12:41,440
provided including

274
00:12:41,440 --> 00:12:44,480
uh wi-fi wi-fi access lamp post assisted

275
00:12:44,480 --> 00:12:47,040
autonomous driving real-time traffic

276
00:12:47,040 --> 00:12:47,680
monitor

277
00:12:47,680 --> 00:12:50,880
monitoring with ai application next

278
00:12:50,880 --> 00:12:53,600
please

279
00:12:53,600 --> 00:12:56,720
okay this is a picture of the uh the

280
00:12:56,720 --> 00:12:58,399
smart lamppost we we're building on

281
00:12:58,399 --> 00:13:00,000
campus as you can see they're not as

282
00:13:00,000 --> 00:13:01,360
fancy as the one

283
00:13:01,360 --> 00:13:06,399
we just saw a moment ago next please

284
00:13:06,399 --> 00:13:08,959
okay we are also we also have started a

285
00:13:08,959 --> 00:13:10,160
new pilot trial

286
00:13:10,160 --> 00:13:13,200
uh at uh one of the the country parks in

287
00:13:13,200 --> 00:13:14,399
hong kong

288
00:13:14,399 --> 00:13:17,040
next please

289
00:13:17,519 --> 00:13:19,839
so in this uh picture you know in this

290
00:13:19,839 --> 00:13:20,880
map you see that

291
00:13:20,880 --> 00:13:24,399
we're going to build a four node uh

292
00:13:24,399 --> 00:13:27,279
pilot trial in in a country park which

293
00:13:27,279 --> 00:13:27,839
is not

294
00:13:27,839 --> 00:13:31,040
well covered by uh by the cellular

295
00:13:31,040 --> 00:13:33,200
network and that poses

296
00:13:33,200 --> 00:13:36,240
threats to hikers in addition to

297
00:13:36,240 --> 00:13:38,639
being inconvenient okay so what we're

298
00:13:38,639 --> 00:13:41,120
going to do is to extend the

299
00:13:41,120 --> 00:13:44,560
the network to to the country park via

300
00:13:44,560 --> 00:13:49,120
the best technology next please

301
00:13:49,120 --> 00:13:52,240
okay so this is a picture of uh uh

302
00:13:52,240 --> 00:13:55,519
of the one of the notes which is um

303
00:13:55,519 --> 00:13:57,519
uh driven by solar power because there's

304
00:13:57,519 --> 00:13:58,560
no uh

305
00:13:58,560 --> 00:14:01,839
power uh available or no electric power

306
00:14:01,839 --> 00:14:03,199
available over there

307
00:14:03,199 --> 00:14:06,480
and beneath the solar panel are the

308
00:14:06,480 --> 00:14:08,639
other equipments and you see that on the

309
00:14:08,639 --> 00:14:09,680
pole uh

310
00:14:09,680 --> 00:14:12,240
and opposed there are some that are

311
00:14:12,240 --> 00:14:13,040
there

312
00:14:13,040 --> 00:14:17,760
these are the antennas okay next piece

313
00:14:17,760 --> 00:14:19,519
so during the past few years we have

314
00:14:19,519 --> 00:14:21,279
been um exploring different

315
00:14:21,279 --> 00:14:22,079
opportunities

316
00:14:22,079 --> 00:14:24,399
and we have identified uh quite a number

317
00:14:24,399 --> 00:14:26,880
of potential applications of bats

318
00:14:26,880 --> 00:14:29,040
uh so also these include satellite

319
00:14:29,040 --> 00:14:30,720
communications

320
00:14:30,720 --> 00:14:33,839
rural communications

321
00:14:33,839 --> 00:14:37,040
okay private networks rapid

322
00:14:37,040 --> 00:14:40,320
response network smart cities like

323
00:14:40,320 --> 00:14:43,440
smart lampposts and things like that v2x

324
00:14:43,440 --> 00:14:45,120
safety and surveillance internet of

325
00:14:45,120 --> 00:14:48,160
things uh confined space like uh

326
00:14:48,160 --> 00:14:52,160
mining tunnels uh 5g access networks

327
00:14:52,160 --> 00:14:55,519
uh power line communications and

328
00:14:55,519 --> 00:14:59,440
also underwater acoustic communications

329
00:14:59,440 --> 00:15:03,680
next please okay uh currently we are

330
00:15:03,680 --> 00:15:04,959
build uh building an

331
00:15:04,959 --> 00:15:08,240
fpga to to implement

332
00:15:08,240 --> 00:15:10,800
the best coding algorithm and for this

333
00:15:10,800 --> 00:15:12,639
project we are working with

334
00:15:12,639 --> 00:15:16,480
with intel and aero electronics

335
00:15:16,480 --> 00:15:19,360
okay next please

336
00:15:19,600 --> 00:15:21,920
okay so we have uh submitted an internet

337
00:15:21,920 --> 00:15:22,959
draft as

338
00:15:22,959 --> 00:15:26,000
many of us know and the latest update

339
00:15:26,000 --> 00:15:29,279
uh is on february 2nd this year

340
00:15:29,279 --> 00:15:31,839
next please

341
00:15:32,880 --> 00:15:36,800
so this job consists of a couple of uh

342
00:15:36,800 --> 00:15:39,519
sections uh with one section on on the

343
00:15:39,519 --> 00:15:40,480
the basic

344
00:15:40,480 --> 00:15:42,880
data delivery procedures using a base

345
00:15:42,880 --> 00:15:43,759
code

346
00:15:43,759 --> 00:15:46,079
with one section on a baseline batch

347
00:15:46,079 --> 00:15:47,839
code specification

348
00:15:47,839 --> 00:15:49,440
and there's a new section on related

349
00:15:49,440 --> 00:15:51,279
research issues

350
00:15:51,279 --> 00:15:53,920
including coding design issues protocol

351
00:15:53,920 --> 00:15:54,720
design issues

352
00:15:54,720 --> 00:15:57,279
and applications related issues and we

353
00:15:57,279 --> 00:15:58,240
also have a section

354
00:15:58,240 --> 00:16:00,560
uh discussing the security issues

355
00:16:00,560 --> 00:16:02,560
related to bets

356
00:16:02,560 --> 00:16:06,160
next piece so i'd like to take this

357
00:16:06,160 --> 00:16:07,360
opportunity to

358
00:16:07,360 --> 00:16:12,399
thank the two shares maria jose and uh

359
00:16:12,399 --> 00:16:14,800
and the vincent and for the suggestion

360
00:16:14,800 --> 00:16:16,000
to

361
00:16:16,000 --> 00:16:18,079
add discussions on related research

362
00:16:18,079 --> 00:16:19,199
issues

363
00:16:19,199 --> 00:16:22,959
and also to dave iran for the pointer to

364
00:16:22,959 --> 00:16:26,079
uh the recent work by buyers and newbie

365
00:16:26,079 --> 00:16:28,560
on the so-called liquid data networking

366
00:16:28,560 --> 00:16:29,199
so indeed

367
00:16:29,199 --> 00:16:32,320
bats is a is a suitable candidate for

368
00:16:32,320 --> 00:16:36,160
the eurasia correction code in liquid

369
00:16:36,160 --> 00:16:37,920
data networking in the presence

370
00:16:37,920 --> 00:16:40,959
of multiple hubs in the network

371
00:16:40,959 --> 00:16:43,680
okay next please

372
00:16:45,199 --> 00:16:49,040
so this is a list of the ips that we

373
00:16:49,040 --> 00:16:50,720
have uh

374
00:16:50,720 --> 00:16:53,360
files so far and most of them have

375
00:16:53,360 --> 00:16:54,480
already been granted

376
00:16:54,480 --> 00:16:57,519
except for one or two which are pending

377
00:16:57,519 --> 00:17:01,279
uh that's and next please

378
00:17:01,839 --> 00:17:05,199
okay so uh so i actually

379
00:17:05,199 --> 00:17:08,079
this is the the pdf file in the uh in

380
00:17:08,079 --> 00:17:08,400
the

381
00:17:08,400 --> 00:17:11,679
uh uh powerpoint file this is actually a

382
00:17:11,679 --> 00:17:12,799
very interesting

383
00:17:12,799 --> 00:17:15,359
animation to to entertain you you see

384
00:17:15,359 --> 00:17:17,439
you keep see cars running around

385
00:17:17,439 --> 00:17:18,880
and so this is the end of my talk thank

386
00:17:18,880 --> 00:17:21,039
you

387
00:17:26,959 --> 00:17:33,840
any questions

388
00:17:33,840 --> 00:17:36,400
okay sorry i was muted thank you very

389
00:17:36,400 --> 00:17:37,200
much raymond

390
00:17:37,200 --> 00:17:41,360
for your presentation uh is there any

391
00:17:41,360 --> 00:17:43,679
question from the audience i haven't

392
00:17:43,679 --> 00:17:46,480
seen any so far

393
00:17:46,480 --> 00:17:51,840
otherwise i have okay there's somebody

394
00:17:51,840 --> 00:17:53,760
what's in lad cloudflare uh this is

395
00:17:53,760 --> 00:17:55,120
really interesting work

396
00:17:55,120 --> 00:17:58,320
is there if this uh research group spans

397
00:17:58,320 --> 00:17:59,200
sort of

398
00:17:59,200 --> 00:18:02,480
six months or three months from now is

399
00:18:02,480 --> 00:18:06,000
how we're going to advance the draft

400
00:18:06,960 --> 00:18:09,919
how how are we going to expand the draft

401
00:18:09,919 --> 00:18:11,120
it's the draft

402
00:18:11,120 --> 00:18:14,160
as in get moving closer to publication

403
00:18:14,160 --> 00:18:17,840
this is really cool i i think

404
00:18:17,840 --> 00:18:21,679
it is uh uh pretty ready for

405
00:18:21,679 --> 00:18:25,039
uh for publication

406
00:18:25,200 --> 00:18:27,440
yes i cannot something i i've been

407
00:18:27,440 --> 00:18:28,480
through this

408
00:18:28,480 --> 00:18:30,799
brand new section 4 about research

409
00:18:30,799 --> 00:18:31,600
issues

410
00:18:31,600 --> 00:18:34,080
i found it generally speaking very well

411
00:18:34,080 --> 00:18:37,520
written and very clear

412
00:18:37,520 --> 00:18:40,559
we have many references to a

413
00:18:40,559 --> 00:18:43,919
key research topic so that's very great

414
00:18:43,919 --> 00:18:47,360
and i also i've also been through the

415
00:18:47,360 --> 00:18:49,919
security considerations new section and

416
00:18:49,919 --> 00:18:51,919
that's uh

417
00:18:51,919 --> 00:18:54,400
well i have a few comments on each for

418
00:18:54,400 --> 00:18:55,600
each of them but

419
00:18:55,600 --> 00:18:58,240
generally speaking that are pretty nice

420
00:18:58,240 --> 00:18:59,280
sections

421
00:18:59,280 --> 00:19:02,640
um i haven't read so far the

422
00:19:02,640 --> 00:19:04,799
specification once again so i will do

423
00:19:04,799 --> 00:19:06,880
that but i have the feeling that

424
00:19:06,880 --> 00:19:10,480
uh except a few minor

425
00:19:10,480 --> 00:19:12,480
modifications there we are very close to

426
00:19:12,480 --> 00:19:14,480
the to the end with this uh document

427
00:19:14,480 --> 00:19:16,559
uh so i'm very happy with this the way

428
00:19:16,559 --> 00:19:17,760
it moves forward

429
00:19:17,760 --> 00:19:20,240
and especially this uh the addition of

430
00:19:20,240 --> 00:19:21,840
this new research

431
00:19:21,840 --> 00:19:24,880
uh section that's great that's great

432
00:19:24,880 --> 00:19:27,760
if i can i would just do a general

433
00:19:27,760 --> 00:19:29,039
comment for this

434
00:19:29,039 --> 00:19:32,640
uh section four uh

435
00:19:32,640 --> 00:19:35,039
so it's uh it's very well uh written no

436
00:19:35,039 --> 00:19:35,840
problem for that

437
00:19:35,840 --> 00:19:38,640
very synthetic synthetic manner so

438
00:19:38,640 --> 00:19:39,919
that's great

439
00:19:39,919 --> 00:19:42,640
i am may just have one comment it's uh

440
00:19:42,640 --> 00:19:43,200
it

441
00:19:43,200 --> 00:19:46,559
can be understood as some advertisement

442
00:19:46,559 --> 00:19:48,000
for that so

443
00:19:48,000 --> 00:19:49,679
i understand that it's in some way

444
00:19:49,679 --> 00:19:52,160
unavoidable that's not the problem but

445
00:19:52,160 --> 00:19:55,679
if you can uh i would say make it

446
00:19:55,679 --> 00:19:59,360
a bit more generic uh it would be great

447
00:19:59,360 --> 00:20:00,559
i think

448
00:20:00,559 --> 00:20:04,159
a bit more neutral i would say okay okay

449
00:20:04,159 --> 00:20:06,960
i don't think it's a big deal uh it's no

450
00:20:06,960 --> 00:20:08,880
problem if there are many references to

451
00:20:08,880 --> 00:20:09,440
that but

452
00:20:09,440 --> 00:20:12,640
uh if if you can make it more generic

453
00:20:12,640 --> 00:20:15,039
anyway that's uh that would be great

454
00:20:15,039 --> 00:20:17,120
that's just

455
00:20:17,120 --> 00:20:19,280
we will reduce the number of uh

456
00:20:19,280 --> 00:20:22,159
references or

457
00:20:22,159 --> 00:20:24,640
yeah it can be yeah that can be a way to

458
00:20:24,640 --> 00:20:25,520
do that

459
00:20:25,520 --> 00:20:28,159
yeah okay okay i don't know what the

460
00:20:28,159 --> 00:20:30,080
authors

461
00:20:30,080 --> 00:20:32,799
think about it but that's what i would

462
00:20:32,799 --> 00:20:33,600
say

463
00:20:33,600 --> 00:20:37,280
as far as i'm concerned okay thank you

464
00:20:37,280 --> 00:20:41,440
yes i see dave do you want to

465
00:20:41,840 --> 00:20:45,600
speak the floor is yours i i'm not

466
00:20:45,600 --> 00:20:47,520
trying to speak for colin here but just

467
00:20:47,520 --> 00:20:49,600
uh with reflecting on on watson's

468
00:20:49,600 --> 00:20:50,640
comment the

469
00:20:50,640 --> 00:20:52,480
what we've done i believe in the ihf in

470
00:20:52,480 --> 00:20:54,960
the past is we put a working uh research

471
00:20:54,960 --> 00:20:56,480
group to sleep while there's still

472
00:20:56,480 --> 00:20:57,520
documents

473
00:20:57,520 --> 00:20:59,600
um going through the process and don't

474
00:20:59,600 --> 00:21:01,600
formally close until the last one's been

475
00:21:01,600 --> 00:21:02,960
disposed of

476
00:21:02,960 --> 00:21:04,720
so i think what'll probably happen is

477
00:21:04,720 --> 00:21:07,039
we'll you know if we if we're done

478
00:21:07,039 --> 00:21:08,799
you know the active need to meet and

479
00:21:08,799 --> 00:21:10,799
exchange stuff we'll just put the work

480
00:21:10,799 --> 00:21:12,159
we'll put the research group to sleep

481
00:21:12,159 --> 00:21:14,840
until everything gets through the

482
00:21:14,840 --> 00:21:17,840
process

483
00:21:27,360 --> 00:21:31,280
yeah thank you

484
00:21:31,280 --> 00:21:34,320
was the opinion of the comments

485
00:21:34,320 --> 00:21:37,200
for this document

486
00:21:41,039 --> 00:21:45,840
nobody are we done

487
00:21:49,360 --> 00:21:52,240
okay it seems well thank you very much

488
00:21:52,240 --> 00:21:54,960
yeah okay thank you very much

489
00:21:54,960 --> 00:21:57,679
thank you so much yes and i'm quite uh

490
00:21:57,679 --> 00:21:58,960
confident that we can

491
00:21:58,960 --> 00:22:01,360
have it uh start a working group oh

492
00:22:01,360 --> 00:22:03,200
sorry a research group last call quite

493
00:22:03,200 --> 00:22:03,760
soon

494
00:22:03,760 --> 00:22:06,640
for this document uh it shouldn't be a

495
00:22:06,640 --> 00:22:07,600
big deal

496
00:22:07,600 --> 00:22:09,840
so thank you so much for for your

497
00:22:09,840 --> 00:22:10,720
efforts and

498
00:22:10,720 --> 00:22:13,679
the quality of the dock

499
00:22:14,159 --> 00:22:16,799
so now it's time to switch to the next

500
00:22:16,799 --> 00:22:18,159
session

501
00:22:18,159 --> 00:22:21,600
i will upload the slides

502
00:22:21,600 --> 00:22:27,520
share the slide sorry

503
00:22:27,520 --> 00:22:30,960
nicola can you hear me

504
00:22:30,960 --> 00:22:34,080
yes we can hear you perfect

505
00:22:34,080 --> 00:22:37,360
hello everyone um so i'm presenting the

506
00:22:37,360 --> 00:22:38,000
draft

507
00:22:38,000 --> 00:22:40,960
update on the draft rafter condition

508
00:22:40,960 --> 00:22:42,080
this is the

509
00:22:42,080 --> 00:22:45,440
sixth scene of the document um

510
00:22:45,440 --> 00:22:46,640
so there are some things that i think

511
00:22:46,640 --> 00:22:48,559
that i've presented in previous itf

512
00:22:48,559 --> 00:22:49,280
meetings

513
00:22:49,280 --> 00:22:52,720
um i have letted them in this deck

514
00:22:52,720 --> 00:22:54,480
in case there was some person that we're

515
00:22:54,480 --> 00:22:56,799
not there at that moment

516
00:22:56,799 --> 00:23:00,000
um sorry nicola

517
00:23:00,000 --> 00:23:01,919
the the quality the audio quality is

518
00:23:01,919 --> 00:23:04,240
quite bad

519
00:23:04,240 --> 00:23:08,400
there is some echo i will switch off my

520
00:23:08,400 --> 00:23:11,200
is it better now

521
00:23:13,840 --> 00:23:17,039
is it better i'm trying okay

522
00:23:17,039 --> 00:23:20,320
not really nips

523
00:23:20,320 --> 00:23:22,720
it is better thank you thank you it is

524
00:23:22,720 --> 00:23:23,760
better um

525
00:23:23,760 --> 00:23:27,360
so it slides hides and there are

526
00:23:27,360 --> 00:23:29,919
there are much content content to what

527
00:23:29,919 --> 00:23:31,039
is actually new

528
00:23:31,039 --> 00:23:33,919
um but i wanted to make a make on what

529
00:23:33,919 --> 00:23:34,799
one the province

530
00:23:34,799 --> 00:23:36,000
the previous version of these two

531
00:23:36,000 --> 00:23:38,880
parties now

532
00:23:39,679 --> 00:23:43,600
this is there is an incredible uh

533
00:23:43,600 --> 00:23:46,559
there is an incredible echo uh somebody

534
00:23:46,559 --> 00:23:48,840
probably has

535
00:23:48,840 --> 00:23:52,080
a loop so can any everybody

536
00:23:52,080 --> 00:23:55,760
put themselves on just me or

537
00:23:59,460 --> 00:24:02,519
[Music]

538
00:24:02,840 --> 00:24:05,840
otherwise

539
00:24:10,720 --> 00:24:15,120
okay i have to take this as a yes i just

540
00:24:15,120 --> 00:24:17,600
have some issues to follow the screen um

541
00:24:17,600 --> 00:24:18,640
so

542
00:24:18,640 --> 00:24:23,520
basically we had some comments

543
00:24:23,520 --> 00:24:26,720
on live live the previous and this

544
00:24:26,720 --> 00:24:28,080
helped us to

545
00:24:28,080 --> 00:24:31,600
improve the document so i will try to

546
00:24:31,600 --> 00:24:32,960
make an emphasis on that during the

547
00:24:32,960 --> 00:24:34,960
presentation

548
00:24:34,960 --> 00:24:38,080
so next slide please

549
00:24:38,240 --> 00:24:39,919
so next though is something that was

550
00:24:39,919 --> 00:24:42,480
only that we presented before

551
00:24:42,480 --> 00:24:45,840
not take uh

552
00:24:46,480 --> 00:24:50,080
further further this set of experiments

553
00:24:50,080 --> 00:24:50,640
we have

554
00:24:50,640 --> 00:24:52,799
run over different different fat

555
00:24:52,799 --> 00:24:54,559
characteristics

556
00:24:54,559 --> 00:24:58,159
um so i think the main

557
00:24:58,159 --> 00:25:00,799
point that we want to highlight is on

558
00:25:00,799 --> 00:25:02,880
the series of the slide

559
00:25:02,880 --> 00:25:05,440
um we have a lossy satellite static and

560
00:25:05,440 --> 00:25:06,559
we use either

561
00:25:06,559 --> 00:25:09,840
um tcp or

562
00:25:09,840 --> 00:25:12,799
connection controls of course so can you

563
00:25:12,799 --> 00:25:16,240
go next slide please bye

564
00:25:25,760 --> 00:25:28,799
nicola we it's very difficult to

565
00:25:28,799 --> 00:25:30,559
understand you

566
00:25:30,559 --> 00:25:33,440
uh so

567
00:25:34,159 --> 00:25:36,799
maybe okay so there's a suggestion in

568
00:25:36,799 --> 00:25:37,279
the

569
00:25:37,279 --> 00:25:40,880
in the list find the chat that you

570
00:25:40,880 --> 00:25:43,840
uh

571
00:25:49,200 --> 00:25:52,080
try to connect again

572
00:25:52,320 --> 00:25:57,840
oh please speak

573
00:26:37,760 --> 00:26:40,640
can you hear me now

574
00:26:42,720 --> 00:26:45,919
it's much better now okay perfect sorry

575
00:26:45,919 --> 00:26:48,240
for that

576
00:26:48,559 --> 00:26:52,880
you can hit four please

577
00:26:52,880 --> 00:26:55,840
okay see casey work really well i will

578
00:26:55,840 --> 00:26:56,400
just not

579
00:26:56,400 --> 00:26:58,320
want to want to focus that slide already

580
00:26:58,320 --> 00:26:59,840
presented

581
00:26:59,840 --> 00:27:03,279
next slide the sound

582
00:27:03,279 --> 00:27:07,840
came back to be terrible

583
00:27:24,720 --> 00:27:27,360
is it better

584
00:27:31,760 --> 00:27:35,120
go on speak we cannot see

585
00:27:35,120 --> 00:27:38,720
so on slide four we just show that

586
00:27:38,720 --> 00:27:42,240
um having a fec improves

587
00:27:42,240 --> 00:27:45,440
a lot with the download and

588
00:27:45,440 --> 00:27:47,360
for the downloading time of 20 megabits

589
00:27:47,360 --> 00:27:49,360
mega megabytes

590
00:27:49,360 --> 00:27:51,840
but then what is interesting interesting

591
00:27:51,840 --> 00:27:53,200
is that the results are very different

592
00:27:53,200 --> 00:27:54,000
from tcp

593
00:27:54,000 --> 00:27:55,679
and quick so that the main point we

594
00:27:55,679 --> 00:27:57,200
wanted to make is that fcc

595
00:27:57,200 --> 00:27:58,960
doesn't have the same impact on all the

596
00:27:58,960 --> 00:28:00,480
construction controls

597
00:28:00,480 --> 00:28:04,880
then if we go to slide six

598
00:28:10,159 --> 00:28:13,360
um it's shown that ietf 109 is that when

599
00:28:13,360 --> 00:28:14,399
we have uh

600
00:28:14,399 --> 00:28:16,799
i want to focus on the graph at the

601
00:28:16,799 --> 00:28:17,520
bottom

602
00:28:17,520 --> 00:28:20,000
is that basically when we have uh coded

603
00:28:20,000 --> 00:28:22,080
tcp flows flow uh they just take the

604
00:28:22,080 --> 00:28:23,279
whole capacity

605
00:28:23,279 --> 00:28:25,360
so that's a there can be lots of

606
00:28:25,360 --> 00:28:26,399
fairness issues

607
00:28:26,399 --> 00:28:28,720
when you use um coding without

608
00:28:28,720 --> 00:28:30,799
considering congestion control

609
00:28:30,799 --> 00:28:32,799
so the objective of the slides is shown

610
00:28:32,799 --> 00:28:34,960
outside seven

611
00:28:34,960 --> 00:28:38,559
basically when we use coding we can help

612
00:28:38,559 --> 00:28:39,600
dealing with losses at the end of

613
00:28:39,600 --> 00:28:42,240
transfers or when we have networks with

614
00:28:42,240 --> 00:28:44,240
non-construction losses but we should

615
00:28:44,240 --> 00:28:45,840
not hide constitutional losses

616
00:28:45,840 --> 00:28:47,600
constraint signals so the objective of

617
00:28:47,600 --> 00:28:49,919
the draft is to describe of how fake

618
00:28:49,919 --> 00:28:53,039
and question control can coexist and

619
00:28:53,039 --> 00:28:56,000
as soon as we have some research on

620
00:28:56,000 --> 00:28:57,600
let's put coding

621
00:28:57,600 --> 00:28:59,840
in a question control we should consider

622
00:28:59,840 --> 00:29:01,120
the aspects that are discussed on this

623
00:29:01,120 --> 00:29:03,360
in this draft

624
00:29:03,360 --> 00:29:05,919
if we go to slide eight um this

625
00:29:05,919 --> 00:29:06,960
basically shows

626
00:29:06,960 --> 00:29:08,960
the main changes changes as the last

627
00:29:08,960 --> 00:29:10,559
ietf

628
00:29:10,559 --> 00:29:13,679
basically we have realized circle and

629
00:29:13,679 --> 00:29:17,840
document um how the figure is not to go

630
00:29:17,840 --> 00:29:21,679
now into that okay but uh

631
00:29:21,679 --> 00:29:23,360
just to show you that there were lots of

632
00:29:23,360 --> 00:29:26,080
changes um

633
00:29:26,080 --> 00:29:29,200
basically atf 109. we had comments or

634
00:29:29,200 --> 00:29:31,039
comments on adding an art transport

635
00:29:31,039 --> 00:29:32,559
multipass

636
00:29:32,559 --> 00:29:34,480
executions on questions on readability

637
00:29:34,480 --> 00:29:36,159
and partial

638
00:29:36,159 --> 00:29:39,279
so we have we have something some things

639
00:29:39,279 --> 00:29:42,320
suspect in the current version

640
00:29:42,320 --> 00:29:44,559
and also thank you very very much for

641
00:29:44,559 --> 00:29:46,480
very much for

642
00:29:46,480 --> 00:29:50,320
first review the document on the list

643
00:29:50,320 --> 00:29:53,279
so we have tried to try to include most

644
00:29:53,279 --> 00:29:54,880
of them then

645
00:29:54,880 --> 00:29:58,080
that invasion division and and

646
00:29:58,080 --> 00:30:00,799
other that were more complicated to

647
00:30:00,799 --> 00:30:02,000
assess quickly

648
00:30:02,000 --> 00:30:04,399
have been added as issues and are here

649
00:30:04,399 --> 00:30:05,760
on these slides to be discussed today

650
00:30:05,760 --> 00:30:08,399
just today

651
00:30:09,200 --> 00:30:11,760
what discussed if you go to the next

652
00:30:11,760 --> 00:30:13,760
slide this slide

653
00:30:13,760 --> 00:30:15,440
is also something that we have added in

654
00:30:15,440 --> 00:30:18,480
the document is what is fairness

655
00:30:18,480 --> 00:30:21,520
so they say this paper that was

656
00:30:21,520 --> 00:30:22,559
presented

657
00:30:22,559 --> 00:30:25,760
in one night um

658
00:30:25,760 --> 00:30:29,279
on what is furnace and i think that

659
00:30:29,279 --> 00:30:32,399
is just we are defining it in the in the

660
00:30:32,399 --> 00:30:34,960
draft it's just saying that saying that

661
00:30:34,960 --> 00:30:36,880
we measure fairness as the impacts

662
00:30:36,880 --> 00:30:38,640
of causing of coding flow and inflows

663
00:30:38,640 --> 00:30:41,919
when they share about an hour

664
00:30:42,559 --> 00:30:44,720
next slide please it's just some

665
00:30:44,720 --> 00:30:46,080
comments on

666
00:30:46,080 --> 00:30:47,840
what is and what is not in the scope of

667
00:30:47,840 --> 00:30:49,679
this document

668
00:30:49,679 --> 00:30:51,919
i think this was not clear for someone

669
00:30:51,919 --> 00:30:54,080
asked something to clarify

670
00:30:54,080 --> 00:30:58,240
this so we have um may include

671
00:30:58,240 --> 00:31:00,799
so the picture that is here will be the

672
00:31:00,799 --> 00:31:02,640
next version of the document it's not

673
00:31:02,640 --> 00:31:04,159
in the current one that has been

674
00:31:04,159 --> 00:31:05,919
published for the atf

675
00:31:05,919 --> 00:31:08,559
but basically what we want to say that

676
00:31:08,559 --> 00:31:09,600
an application

677
00:31:09,600 --> 00:31:13,600
may be composed of several streams

678
00:31:13,600 --> 00:31:17,200
and we do not consider

679
00:31:17,200 --> 00:31:20,080
the impact of fact of mutualism and how

680
00:31:20,080 --> 00:31:21,600
they attract each other

681
00:31:21,600 --> 00:31:24,799
that being said we may have a fec it is

682
00:31:24,799 --> 00:31:27,120
above a multi-part transplant

683
00:31:27,120 --> 00:31:30,159
composed of different subfloors and we

684
00:31:30,159 --> 00:31:33,039
may have also fcc below

685
00:31:33,039 --> 00:31:35,279
a multiple transport but in this case

686
00:31:35,279 --> 00:31:36,240
applies to

687
00:31:36,240 --> 00:31:38,799
the thing with the flows not to combine

688
00:31:38,799 --> 00:31:41,600
one of the flows

689
00:31:44,320 --> 00:31:48,320
next slide please is just uh recording

690
00:31:48,320 --> 00:31:51,760
um what we have we have in

691
00:31:51,760 --> 00:31:54,640
in this document um basically we have if

692
00:31:54,640 --> 00:31:55,039
you have

693
00:31:55,039 --> 00:31:58,640
fcc that is above in or below

694
00:31:58,640 --> 00:32:00,480
condition control and control so we

695
00:32:00,480 --> 00:32:02,000
discovered these

696
00:32:02,000 --> 00:32:05,200
different cases in this inter and

697
00:32:05,200 --> 00:32:08,240
and in version uh in the previous

698
00:32:08,240 --> 00:32:09,360
version

699
00:32:09,360 --> 00:32:12,480
with fairness um how you did with

700
00:32:12,480 --> 00:32:14,559
recovered symbols

701
00:32:14,559 --> 00:32:17,039
how you adapt coding rates and what you

702
00:32:17,039 --> 00:32:17,600
what you

703
00:32:17,600 --> 00:32:21,440
choose useless involved in

704
00:32:21,440 --> 00:32:22,640
the current version we have added

705
00:32:22,640 --> 00:32:24,320
discussions on partial ordering

706
00:32:24,320 --> 00:32:25,840
partially ability

707
00:32:25,840 --> 00:32:29,360
multiple transports

708
00:32:29,360 --> 00:32:31,919
so the first slide slide was present on

709
00:32:31,919 --> 00:32:32,399
previous

710
00:32:32,399 --> 00:32:36,000
previously and so we're not going to go

711
00:32:36,000 --> 00:32:39,360
into the details details

712
00:32:41,360 --> 00:32:43,840
the

713
00:32:47,120 --> 00:32:50,320
next next slide please is what is

714
00:32:50,320 --> 00:32:53,519
um new in this version of the document

715
00:32:53,519 --> 00:32:56,640
for i don't i have time i am going to

716
00:32:56,640 --> 00:33:00,240
go into already we have here um

717
00:33:00,240 --> 00:33:03,679
i think it's very wordy it was more

718
00:33:03,679 --> 00:33:06,799
for everyone to know through the mailing

719
00:33:06,799 --> 00:33:08,320
list if you have if you have

720
00:33:08,320 --> 00:33:11,679
any comments on different boxes boxes

721
00:33:11,679 --> 00:33:16,640
we tried to cover all the cases and

722
00:33:16,640 --> 00:33:19,440
we hope that we hope

723
00:33:19,919 --> 00:33:21,679
what we have done you don't know

724
00:33:21,679 --> 00:33:23,039
different aspects

725
00:33:23,039 --> 00:33:28,159
um there are some options

726
00:33:28,159 --> 00:33:31,679
on availability and for which we have an

727
00:33:31,679 --> 00:33:32,799
issue

728
00:33:32,799 --> 00:33:35,440
so i guess we can move to the next slide

729
00:33:35,440 --> 00:33:37,200
14.

730
00:33:37,200 --> 00:33:39,200
basically that is one open issue we have

731
00:33:39,200 --> 00:33:40,960
at the moment um

732
00:33:40,960 --> 00:33:45,840
in the github repo ripple is the

733
00:33:45,840 --> 00:33:48,480
for the moment uh basically vessel had a

734
00:33:48,480 --> 00:33:53,360
comment on partial reliability and

735
00:33:53,360 --> 00:33:53,919
saying that

736
00:33:53,919 --> 00:33:55,519
it impacts a lot the type of effects

737
00:33:55,519 --> 00:33:56,960
that you are using that's right

738
00:33:56,960 --> 00:34:00,320
um so at the moment we have just covered

739
00:34:00,320 --> 00:34:02,159
that by saying that partial reliability

740
00:34:02,159 --> 00:34:04,080
impacts the type of effects

741
00:34:04,080 --> 00:34:05,760
and the type of codecs that can be used

742
00:34:05,760 --> 00:34:07,200
but i'm not sure to what extent we

743
00:34:07,200 --> 00:34:08,800
should provide more details for this

744
00:34:08,800 --> 00:34:11,040
point

745
00:34:11,520 --> 00:34:14,399
okay so maybe

746
00:34:14,560 --> 00:34:19,359
yes okay okay

747
00:34:19,359 --> 00:34:21,280
so yes it's pretty easy to address i

748
00:34:21,280 --> 00:34:22,639
would say

749
00:34:22,639 --> 00:34:26,480
okay so maybe i can answer right now

750
00:34:26,480 --> 00:34:29,839
can you okay

751
00:34:29,839 --> 00:34:32,159
um so yes it's pretty easy to address i

752
00:34:32,159 --> 00:34:34,639
would say

753
00:34:37,679 --> 00:34:40,879
can you do something

754
00:34:40,879 --> 00:34:43,918
okay you can hear me at least so quality

755
00:34:43,918 --> 00:34:44,800
is bad but

756
00:34:44,800 --> 00:34:47,679
let's do our best so yes i think this

757
00:34:47,679 --> 00:34:48,320
issue

758
00:34:48,320 --> 00:34:51,040
is pretty easy to address if you just

759
00:34:51,040 --> 00:34:52,079
mentioned that

760
00:34:52,079 --> 00:34:55,199
uh okay for instance we can have a

761
00:34:55,199 --> 00:34:58,320
block versus sliding windows it can

762
00:34:58,320 --> 00:34:59,920
impact blocks any windows

763
00:34:59,920 --> 00:35:02,960
it can also be a matter of having small

764
00:35:02,960 --> 00:35:04,560
versus medium or

765
00:35:04,560 --> 00:35:08,400
large block sizes or also the potential

766
00:35:08,400 --> 00:35:10,480
the possibility to solve a subset of the

767
00:35:10,480 --> 00:35:14,240
linear system so if you add this kind of

768
00:35:14,240 --> 00:35:16,800
precision i think it will solve this uh

769
00:35:16,800 --> 00:35:17,680
opening

770
00:35:17,680 --> 00:35:20,400
so we have knotted that down and we will

771
00:35:20,400 --> 00:35:21,920
it's not a big deal

772
00:35:21,920 --> 00:35:24,720
to address my comment um so next line

773
00:35:24,720 --> 00:35:27,279
next slide

774
00:35:27,359 --> 00:35:30,800
next slide it covers another issue

775
00:35:30,800 --> 00:35:33,599
um that was more related to the

776
00:35:33,599 --> 00:35:35,280
appropriate parametric motivation

777
00:35:35,280 --> 00:35:36,880
techniques

778
00:35:36,880 --> 00:35:40,200
you pointed out to to see

779
00:35:40,200 --> 00:35:44,240
81 so indeed um

780
00:35:44,240 --> 00:35:47,839
i think the same points um impact a lot

781
00:35:47,839 --> 00:35:49,440
a lot on the flow that we are

782
00:35:49,440 --> 00:35:51,200
considering uh

783
00:35:51,200 --> 00:35:53,680
whether it is a constant bit rate and

784
00:35:53,680 --> 00:35:55,760
real time or it is non-real time that is

785
00:35:55,760 --> 00:35:56,400
what you have

786
00:35:56,400 --> 00:35:58,240
at least in your in the appendix of the

787
00:35:58,240 --> 00:35:59,920
next that you showed

788
00:35:59,920 --> 00:36:03,200
um so at the moment we tried to to

789
00:36:03,200 --> 00:36:06,000
say uh

790
00:36:06,400 --> 00:36:08,000
we just answered by saying that there's

791
00:36:08,000 --> 00:36:10,720
a general trade-off between

792
00:36:10,720 --> 00:36:12,160
the amount of variance t to add

793
00:36:12,160 --> 00:36:13,200
depending on the transport of the

794
00:36:13,200 --> 00:36:15,040
transport value and the requirements

795
00:36:15,040 --> 00:36:16,720
did you not go in more into the details

796
00:36:16,720 --> 00:36:19,440
uh i don't know if you think we should

797
00:36:19,440 --> 00:36:22,000
provide more for using these covered

798
00:36:22,000 --> 00:36:23,680
issues or

799
00:36:23,680 --> 00:36:27,920
or deep i would say for this

800
00:36:27,920 --> 00:36:31,200
issue it should be almost efficient

801
00:36:31,200 --> 00:36:34,319
to add a reference

802
00:36:35,280 --> 00:36:38,400
okay i would say

803
00:36:38,400 --> 00:36:41,839
for this issue that it would be almost

804
00:36:41,839 --> 00:36:44,480
sufficient to add a reference to this

805
00:36:44,480 --> 00:36:47,599
already existing rfc

806
00:36:47,599 --> 00:36:49,760
once again it's not that difficult

807
00:36:49,760 --> 00:36:51,119
because

808
00:36:51,119 --> 00:36:53,280
the trade-offs are not only the amount

809
00:36:53,280 --> 00:36:54,240
of redundancy

810
00:36:54,240 --> 00:36:57,839
that could be added it's

811
00:36:57,839 --> 00:37:00,240
more general than that and we are back

812
00:37:00,240 --> 00:37:01,599
to the previous

813
00:37:01,599 --> 00:37:05,839
command for instance

814
00:37:05,839 --> 00:37:08,000
you can achieve the same reliability

815
00:37:08,000 --> 00:37:09,760
which is more or less what we try to

816
00:37:09,760 --> 00:37:10,800
achieve

817
00:37:10,800 --> 00:37:15,359
while reducing the

818
00:37:15,359 --> 00:37:18,480
amount of relevant packets just by

819
00:37:18,480 --> 00:37:21,200
changing the nature of the fake scheme

820
00:37:21,200 --> 00:37:21,599
or

821
00:37:21,599 --> 00:37:23,599
changing the block size if you are using

822
00:37:23,599 --> 00:37:24,640
the size

823
00:37:24,640 --> 00:37:27,440
fcc scheme things like that so it's a

824
00:37:27,440 --> 00:37:30,000
bit more complex

825
00:37:30,000 --> 00:37:37,839
but once again i think that uh

826
00:37:49,200 --> 00:37:51,200
what what what is the current research

827
00:37:51,200 --> 00:37:52,800
going what is what

828
00:37:52,800 --> 00:37:55,200
and uh we agree with the course that we

829
00:37:55,200 --> 00:37:55,839
need to

830
00:37:55,839 --> 00:37:58,960
do um some some second

831
00:37:58,960 --> 00:38:00,960
consequent test on that in the next

832
00:38:00,960 --> 00:38:02,400
version next very that's really a

833
00:38:02,400 --> 00:38:03,920
missing point we have at the moment and

834
00:38:03,920 --> 00:38:05,599
we need to work more

835
00:38:05,599 --> 00:38:08,400
uh on appropriate sections for values we

836
00:38:08,400 --> 00:38:08,720
just

837
00:38:08,720 --> 00:38:12,000
list these sums and from uh reference

838
00:38:12,000 --> 00:38:14,160
element but this needs to be more

839
00:38:14,160 --> 00:38:15,760
structured and

840
00:38:15,760 --> 00:38:20,000
more made more things more thing

841
00:38:20,000 --> 00:38:23,359
so the next next slide is on

842
00:38:23,359 --> 00:38:26,960
what we're going to do for basically

843
00:38:26,960 --> 00:38:32,400
there is a new version on going um

844
00:38:32,400 --> 00:38:34,720
we plan to plan to address the open

845
00:38:34,720 --> 00:38:36,640
issues as soon as possible

846
00:38:36,640 --> 00:38:39,520
um also try to have sites to ask from

847
00:38:39,520 --> 00:38:40,880
all the research groups

848
00:38:40,880 --> 00:38:44,400
because affects um

849
00:38:44,400 --> 00:38:47,599
control and control we see

850
00:38:47,599 --> 00:38:50,720
see and attract some synergies other

851
00:38:50,720 --> 00:38:52,720
working groups

852
00:38:52,720 --> 00:38:56,560
on this topic so thank you very much and

853
00:38:56,560 --> 00:38:58,000
i don't know if there are questions

854
00:38:58,000 --> 00:39:00,800
because i'm using this i'm using strange

855
00:39:00,800 --> 00:39:06,720
i cannot see the the cue the queue

856
00:39:08,560 --> 00:39:15,839
if you have any questions please

857
00:39:26,640 --> 00:39:28,960
i think that in spite of the but with

858
00:39:28,960 --> 00:39:31,040
very bad audio quality we managed to

859
00:39:31,040 --> 00:39:32,640
understand

860
00:39:32,640 --> 00:39:35,760
uh what you said i think so

861
00:39:35,760 --> 00:39:39,040
but it was quite difficult uh

862
00:39:39,040 --> 00:39:41,200
is there any question or comment from

863
00:39:41,200 --> 00:39:42,400
the

864
00:39:42,400 --> 00:39:45,040
from the audience i see marcus in the

865
00:39:45,040 --> 00:39:46,079
queue

866
00:39:46,079 --> 00:39:49,280
we had many many comments last time it

867
00:39:49,280 --> 00:39:51,040
seems to be

868
00:39:51,040 --> 00:39:57,839
pretty calm this day

869
00:40:00,480 --> 00:40:04,800
um marcus can you

870
00:40:08,839 --> 00:40:11,839
speak

871
00:40:23,520 --> 00:40:25,200
you cannot speak you cannot speak

872
00:40:25,200 --> 00:40:26,880
exchange on the

873
00:40:26,880 --> 00:40:29,200
email

874
00:40:36,079 --> 00:40:40,000
like yes

875
00:40:40,400 --> 00:40:42,720
okay

876
00:40:50,839 --> 00:40:53,520
yes

877
00:40:53,520 --> 00:40:56,079
marcos speaking can i raise some

878
00:40:56,079 --> 00:40:56,800
questions

879
00:40:56,800 --> 00:41:00,400
can you hear me yes

880
00:41:00,400 --> 00:41:03,920
sorry i i had some issues um

881
00:41:03,920 --> 00:41:07,200
so i'm one of the authors of the

882
00:41:07,200 --> 00:41:10,000
multipass dccp draft and also the

883
00:41:10,000 --> 00:41:12,560
multipath reordering draft

884
00:41:12,560 --> 00:41:15,040
and to have two questions my first

885
00:41:15,040 --> 00:41:16,079
question is

886
00:41:16,079 --> 00:41:20,880
do you learn another reference

887
00:41:24,319 --> 00:41:26,480
the transport that is the one we have

888
00:41:26,480 --> 00:41:28,960
been using for the tests

889
00:41:28,960 --> 00:41:33,440
that we showed earlier and he's more

890
00:41:33,440 --> 00:41:37,040
gathering and different protocols so

891
00:41:37,040 --> 00:41:39,359
it's not really specific to one protocol

892
00:41:39,359 --> 00:41:42,640
so francois had some michelle had some

893
00:41:42,640 --> 00:41:43,599
implementations

894
00:41:43,599 --> 00:41:47,119
for fec in quick so

895
00:41:47,119 --> 00:41:49,680
it depends on the protocols you are

896
00:41:49,680 --> 00:41:50,720
using but we have

897
00:41:50,720 --> 00:42:03,839
in some cases running code

898
00:42:05,359 --> 00:42:08,079
okay uh because i could imagine okay

899
00:42:08,079 --> 00:42:08,880
that

900
00:42:08,880 --> 00:42:11,200
this would be a great opportunity to

901
00:42:11,200 --> 00:42:13,040
bring this to the multi-pass

902
00:42:13,040 --> 00:42:15,119
dccp and if you are interested in that

903
00:42:15,119 --> 00:42:16,560
you are very much

904
00:42:16,560 --> 00:42:19,760
mel welcome here

905
00:42:19,760 --> 00:42:23,839
um my second question

906
00:42:23,839 --> 00:42:26,880
is related to the multi-path reordering

907
00:42:26,880 --> 00:42:28,960
draft and you already commented

908
00:42:28,960 --> 00:42:31,200
something on the mailing list

909
00:42:31,200 --> 00:42:34,480
and after having a first read through

910
00:42:34,480 --> 00:42:35,599
your document

911
00:42:35,599 --> 00:42:38,400
i could imagine that we can leverage

912
00:42:38,400 --> 00:42:39,640
some

913
00:42:39,640 --> 00:42:45,839
synergies but maybe we have

914
00:42:46,960 --> 00:42:50,480
but i think indeed there is opportunity

915
00:42:50,480 --> 00:42:52,160
for senators here because and that's

916
00:42:52,160 --> 00:42:53,839
also why i sent the email saying that

917
00:42:53,839 --> 00:42:58,160
i guess there are some overlaps between

918
00:42:58,160 --> 00:42:58,800
the draft

919
00:42:58,800 --> 00:43:01,520
yes okay

920
00:43:04,079 --> 00:43:06,480
thank you

921
00:43:10,839 --> 00:43:13,440
yeah okay very good yeah then we will do

922
00:43:13,440 --> 00:43:14,800
it

923
00:43:14,800 --> 00:43:19,839
thanks you're welcome

924
00:43:23,760 --> 00:43:25,119
is there anything else we have one

925
00:43:25,119 --> 00:43:27,839
minute

926
00:43:32,160 --> 00:43:35,280
it seems it's not the case so thank you

927
00:43:35,280 --> 00:43:36,319
nikola so we

928
00:43:36,319 --> 00:43:38,400
are waiting for the next version yes

929
00:43:38,400 --> 00:43:39,440
there is

930
00:43:39,440 --> 00:43:43,280
some work to be done for this uh

931
00:43:43,280 --> 00:43:46,400
for the comment that mariju made about

932
00:43:46,400 --> 00:43:47,359
the document

933
00:43:47,359 --> 00:43:50,079
but otherwise uh yes the document seems

934
00:43:50,079 --> 00:43:51,119
to be

935
00:43:51,119 --> 00:43:53,359
progressing well so once again i'm

936
00:43:53,359 --> 00:43:55,200
confident that we managed to to get

937
00:43:55,200 --> 00:43:55,839
something

938
00:43:55,839 --> 00:43:59,920
ready for not too far in the future

939
00:43:59,920 --> 00:44:02,560
so thank you very much for for the team

940
00:44:02,560 --> 00:44:03,119
for you

941
00:44:03,119 --> 00:44:06,480
from you and the others go first

942
00:44:06,480 --> 00:44:09,839
thank you nikola

943
00:44:12,079 --> 00:44:15,920
so now it's time to switch to the last

944
00:44:15,920 --> 00:44:18,480
session

945
00:44:20,400 --> 00:44:23,680
the last presentation sorry um yep

946
00:44:23,680 --> 00:44:26,319
from martin

947
00:44:27,839 --> 00:44:30,880
hello everybody can you hear me yes we

948
00:44:30,880 --> 00:44:31,680
can hear you

949
00:44:31,680 --> 00:44:34,640
we don't see you but we can hear you let

950
00:44:34,640 --> 00:44:37,200
me see if i can grab the floor

951
00:44:37,200 --> 00:44:40,000
okay so hello everybody so i have a

952
00:44:40,000 --> 00:44:41,599
short presentation

953
00:44:41,599 --> 00:44:46,240
on uh on basically a small comparison of

954
00:44:46,240 --> 00:44:48,880
latency and reliability for for block

955
00:44:48,880 --> 00:44:50,560
and sliding window codes

956
00:44:50,560 --> 00:44:53,839
so if you go to the next slide

957
00:44:55,839 --> 00:44:58,720
so one of the sort of key reasons why we

958
00:44:58,720 --> 00:45:00,079
introduce

959
00:45:00,079 --> 00:45:04,079
fpc or ecc in a system is a sort of an

960
00:45:04,079 --> 00:45:06,079
effort at least in a point-to-point case

961
00:45:06,079 --> 00:45:07,280
to reduce

962
00:45:07,280 --> 00:45:09,920
or minimize latency and if we look at

963
00:45:09,920 --> 00:45:11,839
what the most transport protocols use

964
00:45:11,839 --> 00:45:14,880
today which is aiq or re-transmissions

965
00:45:14,880 --> 00:45:17,280
shown in the figure on the on the left

966
00:45:17,280 --> 00:45:19,599
there you can see basically that

967
00:45:19,599 --> 00:45:20,960
as packets are flowing through the

968
00:45:20,960 --> 00:45:23,359
network if we have some packet loss

969
00:45:23,359 --> 00:45:25,520
then we basically need to discover that

970
00:45:25,520 --> 00:45:27,119
at the receiver we need to ask for

971
00:45:27,119 --> 00:45:29,040
retransmission and that re-transmission

972
00:45:29,040 --> 00:45:30,400
has to be delivered

973
00:45:30,400 --> 00:45:32,560
at the receiver again and so basically

974
00:45:32,560 --> 00:45:34,480
we're going to be paying in latency for

975
00:45:34,480 --> 00:45:35,760
the reliability

976
00:45:35,760 --> 00:45:38,640
with one return a one one rtt one round

977
00:45:38,640 --> 00:45:39,359
trip time

978
00:45:39,359 --> 00:45:41,520
per retransmission so this can be

979
00:45:41,520 --> 00:45:43,200
problematic for some applications

980
00:45:43,200 --> 00:45:45,119
especially when the link latency or the

981
00:45:45,119 --> 00:45:46,079
network latency

982
00:45:46,079 --> 00:45:48,560
grows certain applications have you know

983
00:45:48,560 --> 00:45:50,800
latency requirements in the order of

984
00:45:50,800 --> 00:45:52,960
hundreds of milliseconds and so if the

985
00:45:52,960 --> 00:45:54,720
link latency grows too large then we

986
00:45:54,720 --> 00:45:56,000
don't have time for enough real

987
00:45:56,000 --> 00:45:57,599
transmissions and we need to come up

988
00:45:57,599 --> 00:45:59,359
with a different solution for

989
00:45:59,359 --> 00:46:01,280
for obtaining the reliability but still

990
00:46:01,280 --> 00:46:03,040
meeting the latency requirements

991
00:46:03,040 --> 00:46:04,720
so one of the things that that is often

992
00:46:04,720 --> 00:46:07,599
suggested is using coding for that

993
00:46:07,599 --> 00:46:11,760
and and basically as shown here in the

994
00:46:11,760 --> 00:46:13,760
diagram right the nice thing is that we

995
00:46:13,760 --> 00:46:15,920
can interleave these repair packets with

996
00:46:15,920 --> 00:46:16,880
our normal

997
00:46:16,880 --> 00:46:20,720
data packets and and once we sort of

998
00:46:20,720 --> 00:46:22,640
if we experience some packet loss we can

999
00:46:22,640 --> 00:46:25,440
use our repair packets to recover

1000
00:46:25,440 --> 00:46:28,400
from that from that packet loss and we

1001
00:46:28,400 --> 00:46:29,520
can combine that with three

1002
00:46:29,520 --> 00:46:31,359
transmissions of course but we can also

1003
00:46:31,359 --> 00:46:32,480
run it sort of

1004
00:46:32,480 --> 00:46:35,599
in a in a in a unidirectional way where

1005
00:46:35,599 --> 00:46:36,880
we just have you know

1006
00:46:36,880 --> 00:46:38,640
no feedback at all from the receivers

1007
00:46:38,640 --> 00:46:40,319
but but there's also there's still

1008
00:46:40,319 --> 00:46:42,400
some latency involved here although this

1009
00:46:42,400 --> 00:46:43,760
figure is uh

1010
00:46:43,760 --> 00:46:45,520
basically seems like there's almost no

1011
00:46:45,520 --> 00:46:47,440
latency in the recovery that's actually

1012
00:46:47,440 --> 00:46:48,160
not

1013
00:46:48,160 --> 00:46:50,960
the case and so one of the things that i

1014
00:46:50,960 --> 00:46:52,880
want to share a little bit about today

1015
00:46:52,880 --> 00:46:53,119
is

1016
00:46:53,119 --> 00:46:55,599
is the latency involved when using an

1017
00:46:55,599 --> 00:46:57,040
encoding approach

1018
00:46:57,040 --> 00:47:00,079
so if you take the next slide so if we

1019
00:47:00,079 --> 00:47:02,000
start by looking at something

1020
00:47:02,000 --> 00:47:04,720
which is called the block fec or block

1021
00:47:04,720 --> 00:47:05,359
ecc

1022
00:47:05,359 --> 00:47:07,119
basically what we're doing in those

1023
00:47:07,119 --> 00:47:08,560
cases is that we are

1024
00:47:08,560 --> 00:47:11,200
taking our data packets we are putting

1025
00:47:11,200 --> 00:47:12,319
them into

1026
00:47:12,319 --> 00:47:14,800
blocks and then from those blocks we are

1027
00:47:14,800 --> 00:47:15,680
generating

1028
00:47:15,680 --> 00:47:18,880
a repair so in this figure here i have

1029
00:47:18,880 --> 00:47:20,400
two cases

1030
00:47:20,400 --> 00:47:22,960
in case number one we have four blocks

1031
00:47:22,960 --> 00:47:24,400
of four symbols

1032
00:47:24,400 --> 00:47:26,480
and in case number two we are gathering

1033
00:47:26,480 --> 00:47:28,240
a larger block which contains

1034
00:47:28,240 --> 00:47:31,599
16 symbols and so if we look at what the

1035
00:47:31,599 --> 00:47:33,680
repair pattern looks like

1036
00:47:33,680 --> 00:47:35,680
for those two different cases if we look

1037
00:47:35,680 --> 00:47:37,359
at the timeline that we have there at

1038
00:47:37,359 --> 00:47:38,960
the bottom you can see in case number

1039
00:47:38,960 --> 00:47:39,599
one

1040
00:47:39,599 --> 00:47:41,599
we are taking our four data packets and

1041
00:47:41,599 --> 00:47:43,680
then generating two repair packets then

1042
00:47:43,680 --> 00:47:45,599
the next four data packets two repair

1043
00:47:45,599 --> 00:47:47,119
packets and so forth and

1044
00:47:47,119 --> 00:47:49,680
the process continues whereas in case

1045
00:47:49,680 --> 00:47:51,359
number two

1046
00:47:51,359 --> 00:47:54,240
we are collecting the 16 data packets

1047
00:47:54,240 --> 00:47:55,760
and then we are generating the

1048
00:47:55,760 --> 00:47:59,359
eight repair packets and if we look at

1049
00:47:59,359 --> 00:48:01,200
the next slide

1050
00:48:01,200 --> 00:48:03,839
we can see that the sort of the worst

1051
00:48:03,839 --> 00:48:04,559
case

1052
00:48:04,559 --> 00:48:07,040
latency or the is is the distance to

1053
00:48:07,040 --> 00:48:08,880
repair right so the worst case that we

1054
00:48:08,880 --> 00:48:10,880
can have is that we lose the first data

1055
00:48:10,880 --> 00:48:11,520
packet

1056
00:48:11,520 --> 00:48:13,760
because then we have to wait the longest

1057
00:48:13,760 --> 00:48:17,200
until we get any repair

1058
00:48:17,200 --> 00:48:19,200
the repair rate in both of these cases

1059
00:48:19,200 --> 00:48:21,440
are the same right 33

1060
00:48:21,440 --> 00:48:23,920
of the traffic sent is actually repair

1061
00:48:23,920 --> 00:48:24,480
data

1062
00:48:24,480 --> 00:48:26,720
but when we use the small blocks we can

1063
00:48:26,720 --> 00:48:28,720
minimize the distance to repair

1064
00:48:28,720 --> 00:48:31,359
and therefore also minimize the latency

1065
00:48:31,359 --> 00:48:32,000
or the

1066
00:48:32,000 --> 00:48:34,079
the latency of decoding or repairing

1067
00:48:34,079 --> 00:48:35,359
packet loss

1068
00:48:35,359 --> 00:48:37,359
and the graph that at the bottom

1069
00:48:37,359 --> 00:48:38,960
basically just shows

1070
00:48:38,960 --> 00:48:42,319
with a five megabit stream and a 1280

1071
00:48:42,319 --> 00:48:43,920
byte packet size

1072
00:48:43,920 --> 00:48:46,720
that that the the block size really

1073
00:48:46,720 --> 00:48:48,400
matters when you look at something like

1074
00:48:48,400 --> 00:48:50,079
latency there are certain codes that

1075
00:48:50,079 --> 00:48:51,839
require very large blocks

1076
00:48:51,839 --> 00:48:53,119
and what you can see there in that

1077
00:48:53,119 --> 00:48:54,800
figure is that if you have a block size

1078
00:48:54,800 --> 00:48:56,720
of more than 500 you actually have

1079
00:48:56,720 --> 00:48:57,760
accumulated

1080
00:48:57,760 --> 00:49:01,040
one second of latency inside that block

1081
00:49:01,040 --> 00:49:02,720
of course this also depends on the

1082
00:49:02,720 --> 00:49:05,040
source how it's transmitting data how

1083
00:49:05,040 --> 00:49:06,480
bursty it is and all these kind of

1084
00:49:06,480 --> 00:49:07,119
things

1085
00:49:07,119 --> 00:49:09,119
but the block size can really have a big

1086
00:49:09,119 --> 00:49:10,640
impact on

1087
00:49:10,640 --> 00:49:12,800
the latency that we're going to observe

1088
00:49:12,800 --> 00:49:14,000
and for that reason

1089
00:49:14,000 --> 00:49:16,240
we typically want to make the block very

1090
00:49:16,240 --> 00:49:19,119
small in latency sensitive applications

1091
00:49:19,119 --> 00:49:22,480
so on the next slide we compared uh

1092
00:49:22,480 --> 00:49:24,559
two different configurations the one the

1093
00:49:24,559 --> 00:49:26,800
case one and the case two that we had in

1094
00:49:26,800 --> 00:49:27,839
the in

1095
00:49:27,839 --> 00:49:31,280
in the in the first in the in small

1096
00:49:31,280 --> 00:49:33,280
with the video camera there and you can

1097
00:49:33,280 --> 00:49:34,720
see that that

1098
00:49:34,720 --> 00:49:37,119
that the on the figure on the left we

1099
00:49:37,119 --> 00:49:39,440
are comparing the residual packet loss

1100
00:49:39,440 --> 00:49:41,839
that is the loss that is sort of still

1101
00:49:41,839 --> 00:49:43,680
ex still that we are that is

1102
00:49:43,680 --> 00:49:45,040
unrecoverable

1103
00:49:45,040 --> 00:49:47,760
uh given a certain loss on the network

1104
00:49:47,760 --> 00:49:49,520
on the x-axis we have the residual

1105
00:49:49,520 --> 00:49:51,760
packet loss on the on the y-axis for the

1106
00:49:51,760 --> 00:49:53,280
two different codes

1107
00:49:53,280 --> 00:49:55,280
and what you can see is that the larger

1108
00:49:55,280 --> 00:49:56,800
block code the one

1109
00:49:56,800 --> 00:49:58,800
that sort of accumulates more symbols

1110
00:49:58,800 --> 00:50:00,480
before it generates repair

1111
00:50:00,480 --> 00:50:02,960
is capable of handling a higher amount

1112
00:50:02,960 --> 00:50:05,280
of packet loss before it actually

1113
00:50:05,280 --> 00:50:07,839
sort of has to give up and expose a

1114
00:50:07,839 --> 00:50:09,680
packet loss to the application

1115
00:50:09,680 --> 00:50:11,839
whereas the smaller block code is more

1116
00:50:11,839 --> 00:50:13,760
fragile because it has less

1117
00:50:13,760 --> 00:50:16,319
sort of it has less protection against

1118
00:50:16,319 --> 00:50:17,920
variance in the packet loss in the

1119
00:50:17,920 --> 00:50:19,520
channel basically

1120
00:50:19,520 --> 00:50:21,680
but but the the good side about the good

1121
00:50:21,680 --> 00:50:23,040
thing about the small

1122
00:50:23,040 --> 00:50:25,119
block code is that if you look then at

1123
00:50:25,119 --> 00:50:26,960
the latency characteristics

1124
00:50:26,960 --> 00:50:29,119
you basically see that for the for the

1125
00:50:29,119 --> 00:50:30,079
larger

1126
00:50:30,079 --> 00:50:32,559
block the larger red solomon code you

1127
00:50:32,559 --> 00:50:33,839
have the blue

1128
00:50:33,839 --> 00:50:36,160
histogram there you can see that the per

1129
00:50:36,160 --> 00:50:37,119
packet delay

1130
00:50:37,119 --> 00:50:38,960
that we're going to experience with that

1131
00:50:38,960 --> 00:50:41,040
block code is actually sort of

1132
00:50:41,040 --> 00:50:43,359
much more smeared out and in the worst

1133
00:50:43,359 --> 00:50:44,480
case we have a

1134
00:50:44,480 --> 00:50:47,680
sort of relatively high per packet delay

1135
00:50:47,680 --> 00:50:48,079
right

1136
00:50:48,079 --> 00:50:49,839
whereas when we use the smaller block

1137
00:50:49,839 --> 00:50:52,319
code because we are generating the

1138
00:50:52,319 --> 00:50:54,480
repair much quicker we're actually

1139
00:50:54,480 --> 00:50:56,480
actually able to cut the tail of that

1140
00:50:56,480 --> 00:50:58,559
latency distribution by a lot

1141
00:50:58,559 --> 00:51:00,640
and we have most of our delay within a

1142
00:51:00,640 --> 00:51:02,480
very sort of confined region

1143
00:51:02,480 --> 00:51:05,680
which is really what we want to have so

1144
00:51:05,680 --> 00:51:07,440
one of the things that sort of is

1145
00:51:07,440 --> 00:51:09,440
interesting to try to

1146
00:51:09,440 --> 00:51:11,760
to investigate is how can we sort of

1147
00:51:11,760 --> 00:51:13,520
bring these two things together like get

1148
00:51:13,520 --> 00:51:15,599
the residual packet loss performance of

1149
00:51:15,599 --> 00:51:15,920
the

1150
00:51:15,920 --> 00:51:19,119
of the of the big block code

1151
00:51:19,119 --> 00:51:21,520
but get the delay or the per packet

1152
00:51:21,520 --> 00:51:24,240
delay profile of the small block code

1153
00:51:24,240 --> 00:51:27,359
and if you take the next slide so one of

1154
00:51:27,359 --> 00:51:28,800
the sort of

1155
00:51:28,800 --> 00:51:31,040
ways that we can do that is by using the

1156
00:51:31,040 --> 00:51:33,119
sliding window codes that have been

1157
00:51:33,119 --> 00:51:35,760
that also vincent has has done some a

1158
00:51:35,760 --> 00:51:37,040
lot of work on

1159
00:51:37,040 --> 00:51:39,359
and and just to give you a little bit of

1160
00:51:39,359 --> 00:51:41,599
insights on how those perform

1161
00:51:41,599 --> 00:51:44,319
so uh just to give you also like a quick

1162
00:51:44,319 --> 00:51:45,359
overview of

1163
00:51:45,359 --> 00:51:47,599
how they work right if a blog code

1164
00:51:47,599 --> 00:51:49,200
basically as i said uh

1165
00:51:49,200 --> 00:51:51,280
what is what is shown on the right oh

1166
00:51:51,280 --> 00:51:52,559
sorry on the left

1167
00:51:52,559 --> 00:51:54,319
where we are collecting six symbols then

1168
00:51:54,319 --> 00:51:56,319
we're generating two repair packets from

1169
00:51:56,319 --> 00:51:58,160
those six symbols and then in the next

1170
00:51:58,160 --> 00:52:00,079
block we have the next six symbols

1171
00:52:00,079 --> 00:52:01,920
and then we generate two repair symbols

1172
00:52:01,920 --> 00:52:04,160
for those for those packets

1173
00:52:04,160 --> 00:52:05,839
and and sort of there's no overlap

1174
00:52:05,839 --> 00:52:08,000
between the repair and the symbols that

1175
00:52:08,000 --> 00:52:09,760
just you know

1176
00:52:09,760 --> 00:52:11,359
one block is only protected by the

1177
00:52:11,359 --> 00:52:13,359
repair symbols of that one block

1178
00:52:13,359 --> 00:52:15,359
if we look at something like a sliding

1179
00:52:15,359 --> 00:52:16,880
window code

1180
00:52:16,880 --> 00:52:19,520
it works quite differently but one of

1181
00:52:19,520 --> 00:52:21,200
the key things that we can observe

1182
00:52:21,200 --> 00:52:23,200
is that every symbol is actually

1183
00:52:23,200 --> 00:52:25,680
protected by the same amount of repair

1184
00:52:25,680 --> 00:52:27,920
so if you look in the columns you will

1185
00:52:27,920 --> 00:52:29,280
see that every packet

1186
00:52:29,280 --> 00:52:31,440
is included in two repair packets which

1187
00:52:31,440 --> 00:52:33,520
is exactly the same

1188
00:52:33,520 --> 00:52:35,599
as with the block code but what we're

1189
00:52:35,599 --> 00:52:37,520
able to do with the sliding window code

1190
00:52:37,520 --> 00:52:38,160
is that we

1191
00:52:38,160 --> 00:52:40,559
were able to distribute the repair

1192
00:52:40,559 --> 00:52:41,359
packets

1193
00:52:41,359 --> 00:52:44,480
uh much more granularly granularly

1194
00:52:44,480 --> 00:52:46,800
inside the the stream of the packets

1195
00:52:46,800 --> 00:52:48,480
that are flowing through the network

1196
00:52:48,480 --> 00:52:50,319
and so if we look at the results from

1197
00:52:50,319 --> 00:52:52,160
for a sliding window implementation

1198
00:52:52,160 --> 00:52:52,960
versus the

1199
00:52:52,960 --> 00:52:55,359
versus the resolument implementation on

1200
00:52:55,359 --> 00:52:57,599
the next slide

1201
00:52:57,599 --> 00:53:00,880
you can see that that actually using the

1202
00:53:00,880 --> 00:53:02,000
sliding window

1203
00:53:02,000 --> 00:53:05,280
uh where we have uh we we so to make it

1204
00:53:05,280 --> 00:53:05,680
fair

1205
00:53:05,680 --> 00:53:08,000
we made we made the sliding window code

1206
00:53:08,000 --> 00:53:10,240
only code over 24 symbols

1207
00:53:10,240 --> 00:53:13,119
so it's it's not keeping data inside the

1208
00:53:13,119 --> 00:53:14,640
encoder for longer

1209
00:53:14,640 --> 00:53:16,640
than the read solomon code does but it's

1210
00:53:16,640 --> 00:53:19,359
sort of sliding packets

1211
00:53:19,359 --> 00:53:21,520
out of the encoder as they're becoming

1212
00:53:21,520 --> 00:53:22,400
too old

1213
00:53:22,400 --> 00:53:24,480
and what you can see that and then we

1214
00:53:24,480 --> 00:53:26,319
have a repair pattern here which is

1215
00:53:26,319 --> 00:53:28,880
similar to the to the small resolument

1216
00:53:28,880 --> 00:53:30,720
code where every four packets

1217
00:53:30,720 --> 00:53:33,040
we generate to repair and then we can

1218
00:53:33,040 --> 00:53:34,319
see basically that

1219
00:53:34,319 --> 00:53:37,599
previously the for a six comma four read

1220
00:53:37,599 --> 00:53:40,079
solomon code had a worse residual packet

1221
00:53:40,079 --> 00:53:41,359
loss profile

1222
00:53:41,359 --> 00:53:43,280
than the larger red soleum and block

1223
00:53:43,280 --> 00:53:45,280
code but with the sliding window code

1224
00:53:45,280 --> 00:53:46,720
it's actually the opposite

1225
00:53:46,720 --> 00:53:49,760
even with the with the with the more

1226
00:53:49,760 --> 00:53:51,839
granular repairs or the more a

1227
00:53:51,839 --> 00:53:54,079
sort of evenly spread out repair we can

1228
00:53:54,079 --> 00:53:56,160
we can actually handle more packet loss

1229
00:53:56,160 --> 00:53:57,280
before we start to

1230
00:53:57,280 --> 00:54:00,160
sort of um expose packet loss to the

1231
00:54:00,160 --> 00:54:01,280
application

1232
00:54:01,280 --> 00:54:03,440
and at the same time we are able to get

1233
00:54:03,440 --> 00:54:05,359
the same latency profile

1234
00:54:05,359 --> 00:54:07,280
as we had with the small read solomon

1235
00:54:07,280 --> 00:54:09,520
code so you can see again the results

1236
00:54:09,520 --> 00:54:10,480
from the larger

1237
00:54:10,480 --> 00:54:12,720
solomon code where we have a latency per

1238
00:54:12,720 --> 00:54:14,400
packet latency profile

1239
00:54:14,400 --> 00:54:16,400
which is basically spread out and the

1240
00:54:16,400 --> 00:54:18,160
worst case is pretty bad

1241
00:54:18,160 --> 00:54:20,079
so it means that sometimes you know

1242
00:54:20,079 --> 00:54:22,079
packets experience quite a bit of

1243
00:54:22,079 --> 00:54:23,280
latency

1244
00:54:23,280 --> 00:54:25,119
which causes jitter in the application

1245
00:54:25,119 --> 00:54:27,680
and all sorts of unwanted effects

1246
00:54:27,680 --> 00:54:29,680
but with the with the sliding window

1247
00:54:29,680 --> 00:54:31,920
code we can actually narrow in

1248
00:54:31,920 --> 00:54:34,559
and cut off that tail because we're

1249
00:54:34,559 --> 00:54:36,400
generating the repair needed to deal

1250
00:54:36,400 --> 00:54:38,400
with losses much more often

1251
00:54:38,400 --> 00:54:41,680
um so we can basically get

1252
00:54:41,680 --> 00:54:43,440
sort of the the best of the two worlds

1253
00:54:43,440 --> 00:54:45,920
with uh with sliding window codes

1254
00:54:45,920 --> 00:54:48,000
and so i think the final slide is just

1255
00:54:48,000 --> 00:54:49,200
as quick a

1256
00:54:49,200 --> 00:54:51,599
conclusion on our side right so one of

1257
00:54:51,599 --> 00:54:52,640
the things that

1258
00:54:52,640 --> 00:54:54,319
you should really consider is that if

1259
00:54:54,319 --> 00:54:56,000
you're using if you see

1260
00:54:56,000 --> 00:54:59,440
ecc and you have a and you have a system

1261
00:54:59,440 --> 00:55:00,960
where latency is a

1262
00:55:00,960 --> 00:55:04,400
is a important parameter to optimize for

1263
00:55:04,400 --> 00:55:05,920
you should really consider sliding

1264
00:55:05,920 --> 00:55:07,920
window codes over block codes

1265
00:55:07,920 --> 00:55:10,400
and really when you look at the behavior

1266
00:55:10,400 --> 00:55:11,839
of a sliding window code

1267
00:55:11,839 --> 00:55:13,599
you will see that sort of in the worst

1268
00:55:13,599 --> 00:55:16,000
case it can it will just perform

1269
00:55:16,000 --> 00:55:18,559
as a block code right and if you want to

1270
00:55:18,559 --> 00:55:20,319
read some more about the sliding window

1271
00:55:20,319 --> 00:55:22,319
coding we have a lot of uh we have a lot

1272
00:55:22,319 --> 00:55:22,640
of

1273
00:55:22,640 --> 00:55:25,839
documentation on on on on how they work

1274
00:55:25,839 --> 00:55:27,440
and different ways to configure them on

1275
00:55:27,440 --> 00:55:29,280
that link there

1276
00:55:29,280 --> 00:55:32,400
in in our own implementation called rely

1277
00:55:32,400 --> 00:55:35,520
and if you uh you know wanna ask me

1278
00:55:35,520 --> 00:55:37,839
questions uh either go to the list or

1279
00:55:37,839 --> 00:55:40,000
you can also reach out directly uh

1280
00:55:40,000 --> 00:55:43,200
at the modern steinwrist.com and

1281
00:55:43,200 --> 00:55:44,480
if you have some questions or feedback

1282
00:55:44,480 --> 00:55:49,839
for it i'd be happy to to discuss

1283
00:55:51,280 --> 00:55:54,240
thank you so much martin uh i have

1284
00:55:54,240 --> 00:55:55,440
comments some questions

1285
00:55:55,440 --> 00:55:59,200
uh but uh is there anybody else

1286
00:55:59,200 --> 00:56:03,440
there's me okay please

1287
00:56:03,440 --> 00:56:06,960
um yeah so i i will will sound like the

1288
00:56:06,960 --> 00:56:09,040
the usual broken record

1289
00:56:09,040 --> 00:56:12,799
um is there more research being done on

1290
00:56:12,799 --> 00:56:13,760
this

1291
00:56:13,760 --> 00:56:16,880
i went through an nsf

1292
00:56:16,880 --> 00:56:20,400
group on the future of broadband

1293
00:56:20,400 --> 00:56:22,960
and you know delay and bandwidth are not

1294
00:56:22,960 --> 00:56:24,000
the only

1295
00:56:24,000 --> 00:56:27,359
metrics anymore so

1296
00:56:28,559 --> 00:56:30,799
so i would like to know the research and

1297
00:56:30,799 --> 00:56:32,160
also

1298
00:56:32,160 --> 00:56:36,000
um this seems to be

1299
00:56:36,559 --> 00:56:39,359
like i would say it's nice you checked

1300
00:56:39,359 --> 00:56:40,000
it

1301
00:56:40,000 --> 00:56:41,440
but i think we kind of knew that for

1302
00:56:41,440 --> 00:56:43,200
quite a long time right anybody like me

1303
00:56:43,200 --> 00:56:45,680
who's done sliding anything

1304
00:56:45,680 --> 00:56:49,280
in or um in our career know that sliding

1305
00:56:49,280 --> 00:56:51,200
will be better than block because

1306
00:56:51,200 --> 00:56:53,440
you can start decoding as as the window

1307
00:56:53,440 --> 00:56:55,680
arrives and not wait for the whole block

1308
00:56:55,680 --> 00:56:58,799
so i'm actually wondering

1309
00:56:58,799 --> 00:57:02,559
uh what else is in that research

1310
00:57:02,559 --> 00:57:04,559
yeah so that's a super good question so

1311
00:57:04,559 --> 00:57:06,400
there's actually a lot of

1312
00:57:06,400 --> 00:57:08,400
interesting research to be done in this

1313
00:57:08,400 --> 00:57:10,480
area still so so one of the things that

1314
00:57:10,480 --> 00:57:12,319
we are looking at right now is that it's

1315
00:57:12,319 --> 00:57:14,079
actually not true that sliding window is

1316
00:57:14,079 --> 00:57:15,599
always better than a block

1317
00:57:15,599 --> 00:57:18,240
uh when when you have when when the

1318
00:57:18,240 --> 00:57:20,000
repair rate that you have for a sliding

1319
00:57:20,000 --> 00:57:21,599
window code approaches

1320
00:57:21,599 --> 00:57:24,559
the losses on the network the fact that

1321
00:57:24,559 --> 00:57:25,040
you have

1322
00:57:25,040 --> 00:57:27,440
overlap in your repair actually means

1323
00:57:27,440 --> 00:57:28,480
that you sometimes

1324
00:57:28,480 --> 00:57:30,319
you can end up in a situation where most

1325
00:57:30,319 --> 00:57:32,319
of your repair becomes useless

1326
00:57:32,319 --> 00:57:34,160
because you're right at the boundary of

1327
00:57:34,160 --> 00:57:36,720
where the sliding window code is able to

1328
00:57:36,720 --> 00:57:39,119
sort of you have a lot of dependency in

1329
00:57:39,119 --> 00:57:41,040
the repair symbols in the sliding window

1330
00:57:41,040 --> 00:57:42,559
code that you don't have in the blog

1331
00:57:42,559 --> 00:57:43,760
code which is sort of

1332
00:57:43,760 --> 00:57:45,920
you get a block and then you get repair

1333
00:57:45,920 --> 00:57:47,440
and sometimes you're lucky there you get

1334
00:57:47,440 --> 00:57:49,040
enough repair to deal with the packet

1335
00:57:49,040 --> 00:57:49,520
loss

1336
00:57:49,520 --> 00:57:51,680
but the next block is independent in the

1337
00:57:51,680 --> 00:57:52,960
sliding window code

1338
00:57:52,960 --> 00:57:55,119
the repair that you that you currently

1339
00:57:55,119 --> 00:57:56,559
get might be

1340
00:57:56,559 --> 00:57:58,880
dependent on another block decode not a

1341
00:57:58,880 --> 00:58:01,119
sort of a previous window decoding

1342
00:58:01,119 --> 00:58:02,960
and that actually can become a pro so so

1343
00:58:02,960 --> 00:58:04,880
basically one of the things that we are

1344
00:58:04,880 --> 00:58:06,400
looking at right now which is sort of

1345
00:58:06,400 --> 00:58:08,240
open research is how you shape the

1346
00:58:08,240 --> 00:58:09,200
window

1347
00:58:09,200 --> 00:58:12,319
depending on how close your

1348
00:58:12,319 --> 00:58:15,040
your repair rate is to the packet loss

1349
00:58:15,040 --> 00:58:16,480
rate that you're observing

1350
00:58:16,480 --> 00:58:18,319
and so if you look and the reason why

1351
00:58:18,319 --> 00:58:19,839
that is important is that if you look at

1352
00:58:19,839 --> 00:58:21,440
something like a video streaming

1353
00:58:21,440 --> 00:58:22,480
application

1354
00:58:22,480 --> 00:58:24,319
you can't always increase the repair

1355
00:58:24,319 --> 00:58:25,680
rate it's not that you can

1356
00:58:25,680 --> 00:58:27,440
just bring like then you run into

1357
00:58:27,440 --> 00:58:29,520
congestion right you there's some times

1358
00:58:29,520 --> 00:58:30,000
where

1359
00:58:30,000 --> 00:58:32,480
you have like a maximum amount of repair

1360
00:58:32,480 --> 00:58:33,760
that you can put on top

1361
00:58:33,760 --> 00:58:35,920
and there actually when you reach that

1362
00:58:35,920 --> 00:58:38,240
ceiling you need to start to manage your

1363
00:58:38,240 --> 00:58:39,440
coding window

1364
00:58:39,440 --> 00:58:42,160
x you can't just include as much as

1365
00:58:42,160 --> 00:58:43,920
possible you need to actually swing it

1366
00:58:43,920 --> 00:58:44,480
down

1367
00:58:44,480 --> 00:58:46,400
and so that you get more basically you

1368
00:58:46,400 --> 00:58:47,839
become like a block code

1369
00:58:47,839 --> 00:58:49,760
and then you can open it up again as

1370
00:58:49,760 --> 00:58:52,000
your repair rate actually drops away

1371
00:58:52,000 --> 00:58:54,079
from the from the packet loss rate that

1372
00:58:54,079 --> 00:58:55,599
you're observing so that's one

1373
00:58:55,599 --> 00:58:57,920
open thing another thing which is

1374
00:58:57,920 --> 00:58:59,200
currently being looked at

1375
00:58:59,200 --> 00:59:01,520
is how you manage the coding window when

1376
00:59:01,520 --> 00:59:02,960
you have heterogeneous links with

1377
00:59:02,960 --> 00:59:04,400
different latencies

1378
00:59:04,400 --> 00:59:07,599
so basically when you have like again

1379
00:59:07,599 --> 00:59:09,040
you need to be able to control the

1380
00:59:09,040 --> 00:59:10,799
coding window in time

1381
00:59:10,799 --> 00:59:12,880
and you need to be able to say so so you

1382
00:59:12,880 --> 00:59:14,559
can imagine you have one link which has

1383
00:59:14,559 --> 00:59:16,480
100 milliseconds latency and another

1384
00:59:16,480 --> 00:59:19,040
link which has a 150 milliseconds

1385
00:59:19,040 --> 00:59:20,000
latency

1386
00:59:20,000 --> 00:59:21,440
the packets that you're sending over

1387
00:59:21,440 --> 00:59:23,680
this the slower link

1388
00:59:23,680 --> 00:59:26,160
they can't include as many of the source

1389
00:59:26,160 --> 00:59:26,880
symbols

1390
00:59:26,880 --> 00:59:28,799
as the other link because when they

1391
00:59:28,799 --> 00:59:31,119
arrive they are 50 milliseconds behind

1392
00:59:31,119 --> 00:59:32,160
the other link

1393
00:59:32,160 --> 00:59:33,839
and and that becomes important when you

1394
00:59:33,839 --> 00:59:36,240
have an overall latency criteria that

1395
00:59:36,240 --> 00:59:37,599
you're trying to meet

1396
00:59:37,599 --> 00:59:39,839
and so i think there's a lot of work

1397
00:59:39,839 --> 00:59:42,240
that hasn't really been done

1398
00:59:42,240 --> 00:59:44,480
especially when we look at the most

1399
00:59:44,480 --> 00:59:46,319
bringing it sort of closer to the

1400
00:59:46,319 --> 00:59:47,359
applications i

1401
00:59:47,359 --> 00:59:48,880
at last time i talked a little bit about

1402
00:59:48,880 --> 00:59:50,400
content aware coding

1403
00:59:50,400 --> 00:59:52,000
where basically you have to shape the

1404
00:59:52,000 --> 00:59:54,240
window according to the video frames

1405
00:59:54,240 --> 00:59:56,799
so if you have like if you if you just

1406
00:59:56,799 --> 00:59:58,559
have a if you have a coding window where

1407
00:59:58,559 --> 01:00:00,400
you're just blindly saying every four

1408
01:00:00,400 --> 01:00:01,040
packets i

1409
01:00:01,040 --> 01:00:03,119
create two repair that's not a good

1410
01:00:03,119 --> 01:00:04,640
approach if you have a video frame

1411
01:00:04,640 --> 01:00:06,640
that's like 15 symbols because you might

1412
01:00:06,640 --> 01:00:07,200
have a

1413
01:00:07,200 --> 01:00:10,319
have a case where somewhat some some of

1414
01:00:10,319 --> 01:00:12,160
parts of the symbol of your video frame

1415
01:00:12,160 --> 01:00:14,079
is not is included in

1416
01:00:14,079 --> 01:00:16,319
it's not getting repaired until the next

1417
01:00:16,319 --> 01:00:18,319
video frame arrives basically

1418
01:00:18,319 --> 01:00:20,799
and so you get like a sort of a latency

1419
01:00:20,799 --> 01:00:21,760
penalty

1420
01:00:21,760 --> 01:00:24,319
if you don't make your window adjust to

1421
01:00:24,319 --> 01:00:25,280
the content

1422
01:00:25,280 --> 01:00:27,119
so you need basically your repair to

1423
01:00:27,119 --> 01:00:28,720
follow the

1424
01:00:28,720 --> 01:00:31,200
the content that you are so this is

1425
01:00:31,200 --> 01:00:33,040
again very application specific of

1426
01:00:33,040 --> 01:00:34,559
course but i think you know so that's

1427
01:00:34,559 --> 01:00:36,319
some of the directions that that we are

1428
01:00:36,319 --> 01:00:37,359
looking at

1429
01:00:37,359 --> 01:00:39,200
improving this or working on the sliding

1430
01:00:39,200 --> 01:00:41,119
window codes uh

1431
01:00:41,119 --> 01:00:44,160
and and sort of optimizing them but uh i

1432
01:00:44,160 --> 01:00:45,440
think that that's also and

1433
01:00:45,440 --> 01:00:47,440
i can mention also a third uh sorry

1434
01:00:47,440 --> 01:00:48,559
fourth thing

1435
01:00:48,559 --> 01:00:51,920
which is basically um which is basically

1436
01:00:51,920 --> 01:00:56,079
um there's been a lot of uh of

1437
01:00:56,079 --> 01:00:58,640
sort of uh work where you either split

1438
01:00:58,640 --> 01:00:59,359
the solution

1439
01:00:59,359 --> 01:01:02,160
into aiq or fec so either you build a

1440
01:01:02,160 --> 01:01:04,079
transport build just on air q or you

1441
01:01:04,079 --> 01:01:06,400
build a transport just build an fcc

1442
01:01:06,400 --> 01:01:08,400
there's very little actual transport

1443
01:01:08,400 --> 01:01:10,960
protocols that try to combine the two

1444
01:01:10,960 --> 01:01:13,680
where you actually use aiq when link

1445
01:01:13,680 --> 01:01:15,760
latency is low because then you have

1446
01:01:15,760 --> 01:01:19,040
you have time to do air q but but

1447
01:01:19,040 --> 01:01:20,960
when link latency grows you need to

1448
01:01:20,960 --> 01:01:22,640
basically switch out of that mode and

1449
01:01:22,640 --> 01:01:24,400
start to use more the fcc

1450
01:01:24,400 --> 01:01:27,040
to to to get some of the repair up front

1451
01:01:27,040 --> 01:01:27,760
yeah so

1452
01:01:27,760 --> 01:01:30,400
that's some of the areas okay and i

1453
01:01:30,400 --> 01:01:31,680
think i think uh

1454
01:01:31,680 --> 01:01:34,079
maybe uh you should mention that oh you

1455
01:01:34,079 --> 01:01:35,200
know shouldn't you know this

1456
01:01:35,200 --> 01:01:38,319
on in the future and also like you know

1457
01:01:38,319 --> 01:01:39,280
we're also looking at

1458
01:01:39,280 --> 01:01:42,000
research communities here so you said a

1459
01:01:42,000 --> 01:01:43,359
lot of wee wee wee but

1460
01:01:43,359 --> 01:01:46,880
is we just you or is we many more

1461
01:01:46,880 --> 01:01:48,000
universities

1462
01:01:48,000 --> 01:01:50,240
and i will give that the floor to walk

1463
01:01:50,240 --> 01:01:53,599
to to watson after

1464
01:01:53,599 --> 01:01:57,280
what's in life so watson please please

1465
01:01:57,280 --> 01:01:58,559
go

1466
01:01:58,559 --> 01:02:01,839
um this is really interesting my

1467
01:02:01,839 --> 01:02:04,960
question is impact on the

1468
01:02:04,960 --> 01:02:06,640
transport protocol of the loss in other

1469
01:02:06,640 --> 01:02:09,200
words how close to the channel capacity

1470
01:02:09,200 --> 01:02:13,680
is the good put of the channel

1471
01:02:14,160 --> 01:02:17,359
on the ground so

1472
01:02:17,359 --> 01:02:20,640
so well there's a bunch of trade-offs

1473
01:02:20,640 --> 01:02:22,559
involved here right so so if you

1474
01:02:22,559 --> 01:02:24,640
if you use if you see underneath the

1475
01:02:24,640 --> 01:02:26,160
transport protocol

1476
01:02:26,160 --> 01:02:29,280
um you can you can you can

1477
01:02:29,280 --> 01:02:32,480
effectively mask all packet laws

1478
01:02:32,480 --> 01:02:34,799
but it comes at a cost of increased

1479
01:02:34,799 --> 01:02:36,319
bandwidth right

1480
01:02:36,319 --> 01:02:40,160
so so and when you say good put do you

1481
01:02:40,160 --> 01:02:41,200
mean like what is

1482
01:02:41,200 --> 01:02:43,359
what is the balance between the amount

1483
01:02:43,359 --> 01:02:45,280
of repair that i'm putting

1484
01:02:45,280 --> 01:02:48,480
on my network compared to the

1485
01:02:48,480 --> 01:02:52,480
actual data that i'm that i'm

1486
01:02:52,480 --> 01:02:54,960
putting in

1487
01:02:55,520 --> 01:02:57,680
yeah i mean the actual data the actual

1488
01:02:57,680 --> 01:03:00,559
data the application is transporting

1489
01:03:00,559 --> 01:03:02,640
now obviously there's there's this issue

1490
01:03:02,640 --> 01:03:04,079
with congestion control but assuming

1491
01:03:04,079 --> 01:03:04,960
that you've got a

1492
01:03:04,960 --> 01:03:07,280
fixed amount of on the wire packets you

1493
01:03:07,280 --> 01:03:08,559
can send

1494
01:03:08,559 --> 01:03:09,920
how close are you getting your channel

1495
01:03:09,920 --> 01:03:13,200
with a certain amount of loss

1496
01:03:14,000 --> 01:03:16,160
yeah so i think looking at the graphs

1497
01:03:16,160 --> 01:03:18,400
you can see that the sliding window code

1498
01:03:18,400 --> 01:03:20,319
is the one that gives you the best sort

1499
01:03:20,319 --> 01:03:22,559
of reliability overhead trade-off right

1500
01:03:22,559 --> 01:03:22,880
so

1501
01:03:22,880 --> 01:03:25,599
giving having the same in in all of

1502
01:03:25,599 --> 01:03:27,200
these cases

1503
01:03:27,200 --> 01:03:29,920
they are using 33 repair so that means

1504
01:03:29,920 --> 01:03:30,319
that

1505
01:03:30,319 --> 01:03:34,079
33 of the of the of the packets sent is

1506
01:03:34,079 --> 01:03:36,000
repair right and there you are able to

1507
01:03:36,000 --> 01:03:37,839
handle i don't know what is the

1508
01:03:37,839 --> 01:03:40,079
the number here like like the sliding

1509
01:03:40,079 --> 01:03:41,839
window code can handle 20

1510
01:03:41,839 --> 01:03:44,799
packet loss before it starts to sort of

1511
01:03:44,799 --> 01:03:45,520
expose

1512
01:03:45,520 --> 01:03:47,520
some packet loss to the application

1513
01:03:47,520 --> 01:03:48,640
right whereas

1514
01:03:48,640 --> 01:03:51,200
whereas the resolument code is is down

1515
01:03:51,200 --> 01:03:52,079
to 10

1516
01:03:52,079 --> 01:03:53,359
or something and then it starts to

1517
01:03:53,359 --> 01:03:55,760
expose some packet loss so clearly the

1518
01:03:55,760 --> 01:03:56,720
coding

1519
01:03:56,720 --> 01:03:58,720
that you you can you can use that

1520
01:03:58,720 --> 01:04:00,799
overhead more effectively with certain

1521
01:04:00,799 --> 01:04:03,280
types of codes than others

1522
01:04:03,280 --> 01:04:07,359
but if you rely only on fec

1523
01:04:07,359 --> 01:04:08,960
you have to have a certain amount of

1524
01:04:08,960 --> 01:04:11,680
repair in order to deal with

1525
01:04:11,680 --> 01:04:14,960
with a given amount of packet loss on

1526
01:04:14,960 --> 01:04:16,000
the network

1527
01:04:16,000 --> 01:04:18,559
um and also how that packet loss is

1528
01:04:18,559 --> 01:04:20,720
distributed is also

1529
01:04:20,720 --> 01:04:24,079
also has an impact okay i think we need

1530
01:04:24,079 --> 01:04:24,839
to stop

1531
01:04:24,839 --> 01:04:28,160
here uh thank you very much morton

1532
01:04:28,160 --> 01:04:31,200
whatever you've said after uh doing the

1533
01:04:31,200 --> 01:04:32,559
the questions for the questions

1534
01:04:32,559 --> 01:04:34,640
was extremely interesting and i would be

1535
01:04:34,640 --> 01:04:36,160
interested in having more

1536
01:04:36,160 --> 01:04:41,839
detail on this which is uh

1537
01:04:44,319 --> 01:04:47,520
oh i'm losing you vincent

1538
01:04:47,520 --> 01:04:50,720
so yes that's very important so i hope

1539
01:04:50,720 --> 01:04:52,559
that next time you will have time to to

1540
01:04:52,559 --> 01:04:52,960
share

1541
01:04:52,960 --> 01:04:56,000
on this we tried on our side a few years

1542
01:04:56,000 --> 01:04:57,039
ago but

1543
01:04:57,039 --> 01:04:59,760
we've reached a situation that is not

1544
01:04:59,760 --> 01:05:00,559
perf our

1545
01:05:00,559 --> 01:05:03,680
i was not totally satisfied with the

1546
01:05:03,680 --> 01:05:05,920
the way we initialize such parameters so

1547
01:05:05,920 --> 01:05:07,280
if you have more insight on this

1548
01:05:07,280 --> 01:05:10,640
it will be great so we nee now need to

1549
01:05:10,640 --> 01:05:13,200
switch to close the the session the

1550
01:05:13,200 --> 01:05:13,839
meeting

1551
01:05:13,839 --> 01:05:16,559
so thank you very much for all of you i

1552
01:05:16,559 --> 01:05:19,920
don't know my jose do you want to add

1553
01:05:20,839 --> 01:05:23,839
something

1554
01:05:24,559 --> 01:05:27,119
i i was on mute sorry no i think it was

1555
01:05:27,119 --> 01:05:28,000
an interesting

1556
01:05:28,000 --> 01:05:29,599
i think it was a good meeting i think it

1557
01:05:29,599 --> 01:05:31,200
was very interesting the work is very

1558
01:05:31,200 --> 01:05:32,079
interesting

1559
01:05:32,079 --> 01:05:34,000
it shows that there's still some things

1560
01:05:34,000 --> 01:05:36,079
that are moving on

1561
01:05:36,079 --> 01:05:39,200
and it's uh it's nice to hear

1562
01:05:39,200 --> 01:05:42,000
thank you everyone

1563
01:05:42,559 --> 01:05:44,240
thank you thank you see you next time

1564
01:05:44,240 --> 01:05:47,839
next time bye

1565
01:05:48,839 --> 01:05:51,839
goodbye

