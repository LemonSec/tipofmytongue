1
00:00:06,879 --> 00:00:07,279
okay

2
00:00:07,279 --> 00:00:10,639
for 30 i think we can start so welcome

3
00:00:10,639 --> 00:00:11,920
to the itf

4
00:00:11,920 --> 00:00:15,519
110 role meeting

5
00:00:15,519 --> 00:00:17,199
please be aware that this meeting is

6
00:00:17,199 --> 00:00:18,800
aligned with the note well

7
00:00:18,800 --> 00:00:20,800
we are not going to read it but uh you

8
00:00:20,800 --> 00:00:22,560
have to follow in order to attend this

9
00:00:22,560 --> 00:00:24,480
meeting

10
00:00:24,480 --> 00:00:30,080
so uh please help us with the kodi md

11
00:00:36,399 --> 00:00:38,160
if you want to join so this is our

12
00:00:38,160 --> 00:00:40,000
agenda we will provide

13
00:00:40,000 --> 00:00:43,040
now a working group status then pascal

14
00:00:43,040 --> 00:00:46,320
with probably status into the dow

15
00:00:46,320 --> 00:00:48,079
projection trap

16
00:00:48,079 --> 00:00:50,320
michael goes through the environment

17
00:00:50,320 --> 00:00:51,120
priority

18
00:00:51,120 --> 00:00:53,360
and then travel with the updates mopeds

19
00:00:53,360 --> 00:00:54,960
and capabilities

20
00:00:54,960 --> 00:01:00,239
london open floor if time permits

21
00:01:00,399 --> 00:01:03,199
so about the state of active internet

22
00:01:03,199 --> 00:01:04,159
trap

23
00:01:04,159 --> 00:01:07,520
we have finally four

24
00:01:07,520 --> 00:01:13,520
main draft into the rfc8q

25
00:01:13,520 --> 00:01:17,200
turn on rfc 8138 and aware leave use of

26
00:01:17,200 --> 00:01:18,080
ripple info

27
00:01:18,080 --> 00:01:21,439
so good job down there so today we're

28
00:01:21,439 --> 00:01:23,280
going to discuss about capabilities

29
00:01:23,280 --> 00:01:24,320
style projection

30
00:01:24,320 --> 00:01:26,320
enrollment priority and mopex has was

31
00:01:26,320 --> 00:01:27,840
mentioned before

32
00:01:27,840 --> 00:01:31,439
and ncs text extension was submitted to

33
00:01:31,439 --> 00:01:32,640
the isg

34
00:01:32,640 --> 00:01:36,000
presently and the audv it's in a

35
00:01:36,000 --> 00:01:39,600
still area evaluation

36
00:01:39,600 --> 00:01:41,360
ripple observation is working progress

37
00:01:41,360 --> 00:01:44,560
and this modification is standby

38
00:01:44,560 --> 00:01:48,159
so related internet draft for storing

39
00:01:48,159 --> 00:01:49,200
root act we

40
00:01:49,200 --> 00:01:51,840
had the card for adoption issued january

41
00:01:51,840 --> 00:01:53,600
26 but we have not

42
00:01:53,600 --> 00:01:57,439
got any any feedback so probably we will

43
00:01:57,439 --> 00:01:57,840
rise

44
00:01:57,840 --> 00:02:00,799
again and let's see if people want to

45
00:02:00,799 --> 00:02:02,479
work on that

46
00:02:02,479 --> 00:02:05,439
and a lighting dial information is going

47
00:02:05,439 --> 00:02:07,759
to be continued

48
00:02:07,759 --> 00:02:11,038
uh on the state of inactive intellectual

49
00:02:11,038 --> 00:02:16,000
they are still to be continued later

50
00:02:16,560 --> 00:02:19,920
so our milestones uh these are done

51
00:02:19,920 --> 00:02:22,480
turn off in our leave okay audible

52
00:02:22,480 --> 00:02:24,160
repair was submitted

53
00:02:24,160 --> 00:02:27,040
but there still is a correcting feedback

54
00:02:27,040 --> 00:02:27,840
and

55
00:02:27,840 --> 00:02:31,280
use of ripple info submitted um in video

56
00:02:31,280 --> 00:02:32,879
as well

57
00:02:32,879 --> 00:02:36,160
and then we have the toastmasters is

58
00:02:36,160 --> 00:02:38,080
still active probably yeah we will have

59
00:02:38,080 --> 00:02:39,519
to

60
00:02:39,519 --> 00:02:43,040
update the dates here

61
00:02:44,879 --> 00:02:48,080
and the tickets we have

62
00:02:48,080 --> 00:02:50,480
mainly the tickets are in github for

63
00:02:50,480 --> 00:02:52,480
ripple observations though projections

64
00:02:52,480 --> 00:02:54,720
efficient routing validation and

65
00:02:54,720 --> 00:02:56,720
capabilities

66
00:02:56,720 --> 00:02:59,280
uh but that's where we keep some track

67
00:02:59,280 --> 00:03:00,959
in the old system

68
00:03:00,959 --> 00:03:04,239
uh for odb ripple maybe mainly under the

69
00:03:04,239 --> 00:03:05,920
projection but the adult projection

70
00:03:05,920 --> 00:03:10,159
are a move to the cheat hub

71
00:03:10,239 --> 00:03:14,000
um okay pascal

72
00:03:15,280 --> 00:03:18,159
about the root initial state in ripple

73
00:03:18,159 --> 00:03:20,959
no projection

74
00:03:23,599 --> 00:03:26,640
are you online pascal

75
00:03:26,959 --> 00:03:30,319
okay we cannot hear you

76
00:03:31,120 --> 00:03:34,080
oh is it better like this okay yes now

77
00:03:34,080 --> 00:03:34,480
it's

78
00:03:34,480 --> 00:03:37,120
not now we can't hear you thank you okay

79
00:03:37,120 --> 00:03:39,440
i'm sorry there was double mute on my pc

80
00:03:39,440 --> 00:03:42,239
uh and maybe i can share the video i

81
00:03:42,239 --> 00:03:43,599
don't know if people are constrained

82
00:03:43,599 --> 00:03:45,519
with video today so

83
00:03:45,519 --> 00:03:48,720
um do you want me to share my slides

84
00:03:48,720 --> 00:03:51,760
oh i have them here but okay okay please

85
00:03:51,760 --> 00:03:53,519
go ahead i will ask you to switch

86
00:03:53,519 --> 00:03:56,879
right so yeah um

87
00:03:56,879 --> 00:03:59,360
so what can i say about this there was

88
00:03:59,360 --> 00:04:00,239
um two

89
00:04:00,239 --> 00:04:03,599
important and big changes um

90
00:04:03,599 --> 00:04:06,159
publication of the dow projection draft

91
00:04:06,159 --> 00:04:07,280
15 and 16

92
00:04:07,280 --> 00:04:10,560
and um the intent uh

93
00:04:10,560 --> 00:04:14,000
was to first do things that that we

94
00:04:14,000 --> 00:04:17,040
said we would at the previous atf but um

95
00:04:17,040 --> 00:04:20,798
also and mostly we wanted to simplify

96
00:04:20,798 --> 00:04:22,720
because it was getting

97
00:04:22,720 --> 00:04:25,280
uh complicated i was getting feedback

98
00:04:25,280 --> 00:04:26,880
that's complex and um

99
00:04:26,880 --> 00:04:30,560
we wanted to to make it

100
00:04:30,560 --> 00:04:34,479
more um streamlined

101
00:04:34,479 --> 00:04:38,000
more everything is is the same

102
00:04:38,000 --> 00:04:40,400
and to do that what we did is we

103
00:04:40,400 --> 00:04:41,360
realigned

104
00:04:41,360 --> 00:04:44,560
the operation of a track to the

105
00:04:44,560 --> 00:04:46,080
operation of the main dag

106
00:04:46,080 --> 00:04:50,000
everything in a track smells looks like

107
00:04:50,000 --> 00:04:53,759
a the main dag in non-storing mode

108
00:04:53,759 --> 00:04:56,960
just that it's a local instance for a

109
00:04:56,960 --> 00:04:58,240
truck and the global

110
00:04:58,240 --> 00:05:00,560
instance for the main geodag but

111
00:05:00,560 --> 00:05:01,280
otherwise

112
00:05:01,280 --> 00:05:03,680
all the concepts and and things that you

113
00:05:03,680 --> 00:05:04,400
know

114
00:05:04,400 --> 00:05:07,039
and how in particular you use use of

115
00:05:07,039 --> 00:05:07,840
ripple info

116
00:05:07,840 --> 00:05:10,960
to encapsulate etc all that you knew and

117
00:05:10,960 --> 00:05:12,320
understood with the main

118
00:05:12,320 --> 00:05:15,039
non-storing geodag will apply to the

119
00:05:15,039 --> 00:05:15,520
track

120
00:05:15,520 --> 00:05:18,639
which is a non-storing

121
00:05:18,639 --> 00:05:21,600
instance so that that's for that we had

122
00:05:21,600 --> 00:05:23,440
to do some changes like

123
00:05:23,440 --> 00:05:26,240
uh we made the the root of the track the

124
00:05:26,240 --> 00:05:27,520
tracking grass

125
00:05:27,520 --> 00:05:29,120
it used to be the christ for a number of

126
00:05:29,120 --> 00:05:30,800
reasons but now which

127
00:05:30,800 --> 00:05:32,960
um so that you have a single destination

128
00:05:32,960 --> 00:05:34,479
that was the main reason

129
00:05:34,479 --> 00:05:37,680
now we turned it into the root is the

130
00:05:37,680 --> 00:05:39,600
tracking grass meaning that the truck

131
00:05:39,600 --> 00:05:41,680
can lead from one place to multiple

132
00:05:41,680 --> 00:05:43,520
place if you really like it too

133
00:05:43,520 --> 00:05:46,639
just like the main geodag uh or

134
00:05:46,639 --> 00:05:49,039
you can make it converging like one

135
00:05:49,039 --> 00:05:51,039
ingress and one egress and multiple

136
00:05:51,039 --> 00:05:53,840
paths in between if you like as well

137
00:05:53,840 --> 00:05:58,240
so we imposed that the main geoduck is

138
00:05:58,240 --> 00:05:59,360
non-storing

139
00:05:59,360 --> 00:06:01,600
and the reason for that is that gives us

140
00:06:01,600 --> 00:06:03,120
an idea of the topology

141
00:06:03,120 --> 00:06:05,520
using the non-storing signaling and we

142
00:06:05,520 --> 00:06:07,840
also imposed that the track itself is

143
00:06:07,840 --> 00:06:09,520
non-story

144
00:06:09,520 --> 00:06:12,319
so you know uh who's the root you know

145
00:06:12,319 --> 00:06:14,160
all the steps etc

146
00:06:14,160 --> 00:06:19,120
in both cases we can use storing mode

147
00:06:19,120 --> 00:06:23,199
to install segments

148
00:06:23,199 --> 00:06:27,120
so that the non-storing signaling now

149
00:06:27,120 --> 00:06:28,319
can be loose

150
00:06:28,319 --> 00:06:31,360
so if you want to go from abcdef

151
00:06:31,360 --> 00:06:33,680
you can have non-storing which which

152
00:06:33,680 --> 00:06:34,560
have a

153
00:06:34,560 --> 00:06:37,919
sorcerer together which says a d

154
00:06:37,919 --> 00:06:41,039
f and have

155
00:06:41,039 --> 00:06:44,160
source routed segments which are bcd

156
00:06:44,160 --> 00:06:47,199
and def if you like it that way

157
00:06:47,199 --> 00:06:49,039
so that makes it so that you have the

158
00:06:49,039 --> 00:06:50,960
best of both worlds

159
00:06:50,960 --> 00:06:53,280
some state but not too much and the root

160
00:06:53,280 --> 00:06:55,680
can control how much that you get

161
00:06:55,680 --> 00:06:58,000
uh installed in the nodes and then a

162
00:06:58,000 --> 00:06:59,759
loose routing editor so that

163
00:06:59,759 --> 00:07:01,919
the size of the packet doesn't grow too

164
00:07:01,919 --> 00:07:03,840
big

165
00:07:03,840 --> 00:07:05,440
now you'll find there is an exception

166
00:07:05,440 --> 00:07:08,160
when it would be kind of silly to have

167
00:07:08,160 --> 00:07:11,360
a non-storing track with just

168
00:07:11,360 --> 00:07:15,039
one segment in it then the segment

169
00:07:15,039 --> 00:07:17,599
implicitly defines the track but

170
00:07:17,599 --> 00:07:18,400
otherwise

171
00:07:18,400 --> 00:07:22,400
we have a strict naming and convention

172
00:07:22,400 --> 00:07:27,440
that a truck is a non-stirring deodag

173
00:07:27,440 --> 00:07:30,720
and the segment is a strict

174
00:07:30,720 --> 00:07:33,360
sequence of nodes that you can have

175
00:07:33,360 --> 00:07:34,319
between

176
00:07:34,319 --> 00:07:37,520
loose hops in the track and you can

177
00:07:37,520 --> 00:07:39,440
apply that to the main geodag and you

178
00:07:39,440 --> 00:07:41,520
can apply that notion of segment

179
00:07:41,520 --> 00:07:43,840
to a track as well so everything has

180
00:07:43,840 --> 00:07:46,160
been simplified to a single model

181
00:07:46,160 --> 00:07:49,360
you have basically a skeleton

182
00:07:49,360 --> 00:07:51,360
in non-storing mode that can be the main

183
00:07:51,360 --> 00:07:53,680
geoduck that can be the track

184
00:07:53,680 --> 00:07:56,160
and the skeleton can now be loose

185
00:07:56,160 --> 00:07:57,360
meaning that you don't have to have the

186
00:07:57,360 --> 00:07:58,080
strict list

187
00:07:58,080 --> 00:08:00,800
list of hops because uh between two

188
00:08:00,800 --> 00:08:02,160
loose hops you can have

189
00:08:02,160 --> 00:08:05,840
a storing mode segment now you could if

190
00:08:05,840 --> 00:08:07,440
you really wanted to

191
00:08:07,440 --> 00:08:12,319
also have this loose hop

192
00:08:12,319 --> 00:08:15,680
signaled as another track which means

193
00:08:15,680 --> 00:08:16,319
that

194
00:08:16,319 --> 00:08:18,560
when you are inside the loose hub you

195
00:08:18,560 --> 00:08:19,680
encapsulate

196
00:08:19,680 --> 00:08:23,280
in another track so you have

197
00:08:23,280 --> 00:08:25,520
source routing inside source routing if

198
00:08:25,520 --> 00:08:28,080
you really wanted to you could do that

199
00:08:28,080 --> 00:08:32,000
but the the more attractive model

200
00:08:32,000 --> 00:08:34,240
is when the skeleton on the loose

201
00:08:34,240 --> 00:08:35,039
structure

202
00:08:35,039 --> 00:08:37,839
is non-stirring and just when you want

203
00:08:37,839 --> 00:08:38,719
to save

204
00:08:38,719 --> 00:08:41,919
you have storing mod segments and

205
00:08:41,919 --> 00:08:45,519
another thing that we did to simplify

206
00:08:45,519 --> 00:08:48,800
uh the draft is that we will see that

207
00:08:48,800 --> 00:08:49,519
later but

208
00:08:49,519 --> 00:08:52,240
we split the possible things you can

209
00:08:52,240 --> 00:08:53,519
implement

210
00:08:53,519 --> 00:08:57,760
in uh six mo six modes basically

211
00:08:57,760 --> 00:09:00,800
just like in the main repo we have

212
00:09:00,800 --> 00:09:03,760
story mode non-storing etc we we

213
00:09:03,760 --> 00:09:04,320
actually

214
00:09:04,320 --> 00:09:08,080
split um the power projection support

215
00:09:08,080 --> 00:09:10,800
in six profiles you will see that they

216
00:09:10,800 --> 00:09:13,200
all inherit from this same

217
00:09:13,200 --> 00:09:16,160
overall design that the track is a

218
00:09:16,160 --> 00:09:17,839
non-stirring loose thing

219
00:09:17,839 --> 00:09:20,560
and the segments join the loose hops of

220
00:09:20,560 --> 00:09:22,480
the track using storing mode

221
00:09:22,480 --> 00:09:25,680
this is this is pervading but you can

222
00:09:25,680 --> 00:09:27,120
actually

223
00:09:27,120 --> 00:09:29,360
build different things as i said and we

224
00:09:29,360 --> 00:09:31,120
made that different mode so if you have

225
00:09:31,120 --> 00:09:31,920
a

226
00:09:31,920 --> 00:09:34,480
uh for instance nixon start body like

227
00:09:34,480 --> 00:09:35,920
not thread because they're not using

228
00:09:35,920 --> 00:09:38,800
ripple but maybe ysun or weather

229
00:09:38,800 --> 00:09:42,000
wants to use repo in just a certain

230
00:09:42,000 --> 00:09:44,399
one specific of those modes then they

231
00:09:44,399 --> 00:09:46,399
will have the clear explanation

232
00:09:46,399 --> 00:09:49,040
in the draft and how this mode works how

233
00:09:49,040 --> 00:09:50,240
you do the encapsulation

234
00:09:50,240 --> 00:09:53,600
etc so we did a lot of uh

235
00:09:53,600 --> 00:09:56,720
most big addition also uh

236
00:09:56,720 --> 00:09:59,440
giving an example for each mode of how

237
00:09:59,440 --> 00:10:01,440
the packet gets encapsulated

238
00:10:01,440 --> 00:10:04,320
how the track gets signaled etc so now

239
00:10:04,320 --> 00:10:08,320
you know exactly how you do things

240
00:10:08,480 --> 00:10:11,200
next slide please

241
00:10:12,880 --> 00:10:17,360
okay another thing that happened is um

242
00:10:17,360 --> 00:10:20,399
we found that uh it was

243
00:10:20,399 --> 00:10:22,880
probably useful when you're forwarding a

244
00:10:22,880 --> 00:10:25,040
packet and that's from an early

245
00:10:25,040 --> 00:10:29,040
implementation that a group at cisco did

246
00:10:29,040 --> 00:10:31,200
we found that it could be useful to

247
00:10:31,200 --> 00:10:32,160
signal

248
00:10:32,160 --> 00:10:34,800
in the packet that it's being forwarded

249
00:10:34,800 --> 00:10:36,880
along a period it's already clear

250
00:10:36,880 --> 00:10:39,279
that it's being forwarded along a local

251
00:10:39,279 --> 00:10:41,040
ripple instance because the ripple

252
00:10:41,040 --> 00:10:42,079
instance id

253
00:10:42,079 --> 00:10:44,480
has one bit which says it's a local risk

254
00:10:44,480 --> 00:10:45,519
instance

255
00:10:45,519 --> 00:10:47,040
but they thought that you know for the

256
00:10:47,040 --> 00:10:49,120
code path it was more clear

257
00:10:49,120 --> 00:10:51,200
to signal as well that the packet is

258
00:10:51,200 --> 00:10:53,040
following a projected route

259
00:10:53,040 --> 00:10:55,440
so we said hey there is a free bit in

260
00:10:55,440 --> 00:10:57,200
the hop by hub header

261
00:10:57,200 --> 00:10:59,519
uh in the non-compressed format so let's

262
00:10:59,519 --> 00:11:01,279
let's use it to signal that we are

263
00:11:01,279 --> 00:11:02,560
following a pure out

264
00:11:02,560 --> 00:11:03,839
but something we discussed on the

265
00:11:03,839 --> 00:11:05,920
mailing list but then

266
00:11:05,920 --> 00:11:08,399
um that causes another prime which is

267
00:11:08,399 --> 00:11:10,240
that uh 8138

268
00:11:10,240 --> 00:11:13,440
the compression of ripple um signaling

269
00:11:13,440 --> 00:11:14,000
for the data

270
00:11:14,000 --> 00:11:17,360
path um that did not have room for this

271
00:11:17,360 --> 00:11:18,000
extra bit

272
00:11:18,000 --> 00:11:20,640
and actually what it had room for things

273
00:11:20,640 --> 00:11:22,079
we don't need

274
00:11:22,079 --> 00:11:24,560
um like the loop avoidance mechanism

275
00:11:24,560 --> 00:11:26,000
which is not used here because you

276
00:11:26,000 --> 00:11:27,760
signal the path

277
00:11:27,760 --> 00:11:31,120
so what we did

278
00:11:31,120 --> 00:11:34,480
in this draft is create a

279
00:11:34,480 --> 00:11:38,240
new six lower range which

280
00:11:38,240 --> 00:11:40,399
when you you forward along the track the

281
00:11:40,399 --> 00:11:41,519
suggestion is

282
00:11:41,519 --> 00:11:45,200
do not use the normal rpi six leverage

283
00:11:45,200 --> 00:11:47,120
but use the projected rpi

284
00:11:47,120 --> 00:11:50,639
six leverage um and for this projected

285
00:11:50,639 --> 00:11:51,600
rpi

286
00:11:51,600 --> 00:11:54,800
six rh we provided both an

287
00:11:54,800 --> 00:11:57,920
elective and a non-elective form so

288
00:11:57,920 --> 00:12:01,120
if you have a source route either way

289
00:12:01,120 --> 00:12:03,040
you can live without completely no not

290
00:12:03,040 --> 00:12:04,480
knowing that

291
00:12:04,480 --> 00:12:07,920
um it's a peer route then um

292
00:12:07,920 --> 00:12:10,959
you can still put the the prpi into

293
00:12:10,959 --> 00:12:14,160
into the packet and a node which

294
00:12:14,160 --> 00:12:15,760
doesn't understand it but doesn't need

295
00:12:15,760 --> 00:12:18,079
to know would know that it can skip it

296
00:12:18,079 --> 00:12:20,160
because it's an elective

297
00:12:20,160 --> 00:12:22,639
but if you if you if your operation

298
00:12:22,639 --> 00:12:24,480
depends on the fact that every node

299
00:12:24,480 --> 00:12:26,720
understands the projected route

300
00:12:26,720 --> 00:12:30,800
then you use the non-negative form

301
00:12:30,800 --> 00:12:34,000
um and and then if a node in the way

302
00:12:34,000 --> 00:12:35,760
does not understand

303
00:12:35,760 --> 00:12:38,320
uh the period then it will actually drop

304
00:12:38,320 --> 00:12:40,160
the packet

305
00:12:40,160 --> 00:12:42,800
next slide please

306
00:12:43,760 --> 00:12:46,800
um okay

307
00:12:46,800 --> 00:12:50,399
so um we kind of simplified as well the

308
00:12:50,399 --> 00:12:52,000
rules for the projected dial

309
00:12:52,000 --> 00:12:53,680
construction because you could add

310
00:12:53,680 --> 00:12:55,600
you have a lot of elasticity in whether

311
00:12:55,600 --> 00:12:57,600
you have one or more targets one or more

312
00:12:57,600 --> 00:12:58,880
transit

313
00:12:58,880 --> 00:13:02,160
um and uh actually the transit in

314
00:13:02,160 --> 00:13:04,560
in the pdaw is not the tio as you knew

315
00:13:04,560 --> 00:13:06,480
it it's the vio

316
00:13:06,480 --> 00:13:08,079
if you remember what a transit

317
00:13:08,079 --> 00:13:09,680
information is it's basically

318
00:13:09,680 --> 00:13:11,040
how you signal your parent in

319
00:13:11,040 --> 00:13:12,880
non-storing mode with a little bit more

320
00:13:12,880 --> 00:13:15,040
information like lifetimes

321
00:13:15,040 --> 00:13:16,959
but here you don't signal a parent you

322
00:13:16,959 --> 00:13:18,399
signal a full path

323
00:13:18,399 --> 00:13:21,920
but you still can think of a pidao

324
00:13:21,920 --> 00:13:25,680
as a dao where instead of having a tio

325
00:13:25,680 --> 00:13:27,360
for signaling just a parrot

326
00:13:27,360 --> 00:13:31,360
you have a vio for signaling a full path

327
00:13:31,360 --> 00:13:33,120
the target is still the same that's

328
00:13:33,120 --> 00:13:34,720
where you go so the vio

329
00:13:34,720 --> 00:13:38,560
is the via how you get there and the

330
00:13:38,560 --> 00:13:40,959
target option is where you're going as

331
00:13:40,959 --> 00:13:42,959
it was before like i said we are trying

332
00:13:42,959 --> 00:13:45,279
to make it very very homogeneous

333
00:13:45,279 --> 00:13:47,120
between what we are doing in pidao and

334
00:13:47,120 --> 00:13:48,800
what you already knew

335
00:13:48,800 --> 00:13:51,600
in non-storing mode a track is just one

336
00:13:51,600 --> 00:13:53,760
other non-storing mode

337
00:13:53,760 --> 00:13:57,199
do that another simplification that we

338
00:13:57,199 --> 00:13:58,079
made

339
00:13:58,079 --> 00:14:00,800
is in the naming instead of having this

340
00:14:00,800 --> 00:14:02,959
root projection option this rpo concept

341
00:14:02,959 --> 00:14:04,720
which was yet another acronym to live

342
00:14:04,720 --> 00:14:05,600
with

343
00:14:05,600 --> 00:14:07,600
uh we said no no no let's let's get rid

344
00:14:07,600 --> 00:14:09,600
of that let's just say we have this

345
00:14:09,600 --> 00:14:12,560
the stateful vio for storing mode and we

346
00:14:12,560 --> 00:14:13,120
have the

347
00:14:13,120 --> 00:14:16,560
source routing vio for non-storing mode

348
00:14:16,560 --> 00:14:18,480
like i said earlier the non-storing mode

349
00:14:18,480 --> 00:14:20,399
signals the skeleton of the track the

350
00:14:20,399 --> 00:14:21,279
structure of it

351
00:14:21,279 --> 00:14:23,920
from where you go where you're going and

352
00:14:23,920 --> 00:14:25,920
if you have segments in between that are

353
00:14:25,920 --> 00:14:26,959
loose then you use

354
00:14:26,959 --> 00:14:30,480
sfvios state four vios to set a state

355
00:14:30,480 --> 00:14:34,079
in every node along that segment

356
00:14:34,079 --> 00:14:37,360
and by the way the track id etc

357
00:14:37,360 --> 00:14:39,600
in the sfvio for that segment of that

358
00:14:39,600 --> 00:14:40,480
track

359
00:14:40,480 --> 00:14:44,160
will have the same track id into it as

360
00:14:44,160 --> 00:14:46,079
the main skeleton so you can relate

361
00:14:46,079 --> 00:14:49,690
the segment with the main skeleton

362
00:14:49,690 --> 00:14:52,000
[Music]

363
00:14:52,000 --> 00:14:55,839
that's pretty much it next slide

364
00:14:56,399 --> 00:14:58,240
oh there is a typo here it's not taken

365
00:14:58,240 --> 00:15:00,079
from the tracking grass it's taken from

366
00:15:00,079 --> 00:15:00,639
the track

367
00:15:00,639 --> 00:15:04,480
ingress sorry for that um so like i said

368
00:15:04,480 --> 00:15:06,160
to simplify implementation and

369
00:15:06,160 --> 00:15:08,480
documentation and also

370
00:15:08,480 --> 00:15:10,959
uh standards which would import just one

371
00:15:10,959 --> 00:15:12,000
profile

372
00:15:12,000 --> 00:15:15,680
we split um we described six profiles

373
00:15:15,680 --> 00:15:18,000
we choose the same basic structures but

374
00:15:18,000 --> 00:15:19,440
use them differently

375
00:15:19,440 --> 00:15:21,279
so if you need to do this then you will

376
00:15:21,279 --> 00:15:23,120
apply profile blood if you need to do

377
00:15:23,120 --> 00:15:27,839
that then you will pick another profile

378
00:15:28,639 --> 00:15:30,880
and also like i said earlier but they

379
00:15:30,880 --> 00:15:31,680
insist on it

380
00:15:31,680 --> 00:15:33,600
everything new about use of ripple info

381
00:15:33,600 --> 00:15:35,279
applies meaning that

382
00:15:35,279 --> 00:15:37,440
if the packet is coming from the outside

383
00:15:37,440 --> 00:15:39,680
of the track and needs to be transported

384
00:15:39,680 --> 00:15:42,240
in the track like think about earth it

385
00:15:42,240 --> 00:15:43,759
like if it was a tunnel

386
00:15:43,759 --> 00:15:45,199
it's it's more than a tunnel but you

387
00:15:45,199 --> 00:15:46,880
could think about it as a tunnel for a

388
00:15:46,880 --> 00:15:47,680
while

389
00:15:47,680 --> 00:15:50,000
um then any packet which is coming from

390
00:15:50,000 --> 00:15:51,440
the outside has to be

391
00:15:51,440 --> 00:15:54,000
encapsulated same thing any packet which

392
00:15:54,000 --> 00:15:54,959
is trust

393
00:15:54,959 --> 00:15:57,600
traversing the track may be injected by

394
00:15:57,600 --> 00:15:59,120
the root or nj or coming from the

395
00:15:59,120 --> 00:16:00,000
outside

396
00:16:00,000 --> 00:16:02,800
uh and that is to be delivered to a node

397
00:16:02,800 --> 00:16:04,480
which is outside the track

398
00:16:04,480 --> 00:16:06,959
like the target in the tio is a neighbor

399
00:16:06,959 --> 00:16:08,079
of the egress

400
00:16:08,079 --> 00:16:09,600
but it's not the aggressor itself it's

401
00:16:09,600 --> 00:16:11,440
one of its neighbors

402
00:16:11,440 --> 00:16:13,680
then the egress has to decapsulate

403
00:16:13,680 --> 00:16:14,560
exactly like

404
00:16:14,560 --> 00:16:17,120
the access router that serves a reaper a

405
00:16:17,120 --> 00:16:17,920
newer leaf

406
00:16:17,920 --> 00:16:21,199
would have to decapsulate so you need to

407
00:16:21,199 --> 00:16:23,600
think we are building a geoduck

408
00:16:23,600 --> 00:16:26,240
with the projected route inside the main

409
00:16:26,240 --> 00:16:28,560
geoduck but it's still a deodag

410
00:16:28,560 --> 00:16:30,880
everything that is in the main geodag

411
00:16:30,880 --> 00:16:31,600
but not

412
00:16:31,600 --> 00:16:35,199
inside this smaller geoduck is external

413
00:16:35,199 --> 00:16:38,079
to this small diode so it has to be

414
00:16:38,079 --> 00:16:39,199
processed like a

415
00:16:39,199 --> 00:16:41,040
ripple and a wall if you like like any

416
00:16:41,040 --> 00:16:42,639
external destination

417
00:16:42,639 --> 00:16:44,720
it's not part of this track it's an

418
00:16:44,720 --> 00:16:46,079
external destination

419
00:16:46,079 --> 00:16:48,320
if if it sends a packet into a truck we

420
00:16:48,320 --> 00:16:51,600
have to encapsulate it

421
00:16:51,600 --> 00:16:54,240
next slide please

422
00:16:56,160 --> 00:16:58,880
so yes when we encapsulate the source of

423
00:16:58,880 --> 00:16:59,920
the autorider

424
00:16:59,920 --> 00:17:02,639
is the tracking grass so think of it as

425
00:17:02,639 --> 00:17:04,319
a packet coming from the internet

426
00:17:04,319 --> 00:17:06,480
and being transported over a ripple

427
00:17:06,480 --> 00:17:07,599
domain

428
00:17:07,599 --> 00:17:09,760
we the route has to encapsulate it same

429
00:17:09,760 --> 00:17:11,760
thing but here it's going to be

430
00:17:11,760 --> 00:17:14,240
source the deodor group so the ingress

431
00:17:14,240 --> 00:17:15,359
of the track

432
00:17:15,359 --> 00:17:18,400
rpi the the local instance id uh

433
00:17:18,400 --> 00:17:20,240
for for this particular track and it can

434
00:17:20,240 --> 00:17:22,400
be compressed with the prpi

435
00:17:22,400 --> 00:17:25,760
six leverage and uh the destination

436
00:17:25,760 --> 00:17:26,799
whatever

437
00:17:26,799 --> 00:17:28,640
but the destination must be something

438
00:17:28,640 --> 00:17:31,679
which is a target for this track

439
00:17:31,679 --> 00:17:32,380
so

440
00:17:32,380 --> 00:17:35,200
[Music]

441
00:17:35,200 --> 00:17:37,039
and then again as i said we have the

442
00:17:37,039 --> 00:17:39,840
concept of source rating vio so

443
00:17:39,840 --> 00:17:43,679
can we lose it's source routed

444
00:17:43,679 --> 00:17:46,799
we also made this change and i also

445
00:17:46,799 --> 00:17:48,559
already introduced that at the interim

446
00:17:48,559 --> 00:17:50,720
but it's good to say to the more

447
00:17:50,720 --> 00:17:55,120
global instance global population

448
00:17:55,120 --> 00:17:58,240
the um we we

449
00:17:58,240 --> 00:18:02,480
encode the srvio in the dow

450
00:18:02,480 --> 00:18:05,600
exactly like it will be in the packet if

451
00:18:05,600 --> 00:18:08,240
you are using 8138

452
00:18:08,240 --> 00:18:11,360
that means that

453
00:18:11,360 --> 00:18:13,919
the node which will place that in the

454
00:18:13,919 --> 00:18:16,480
packet to do the encapsulation

455
00:18:16,480 --> 00:18:19,280
will do a strict copy from what it got

456
00:18:19,280 --> 00:18:20,160
from the root

457
00:18:20,160 --> 00:18:22,640
into the packet and that's important

458
00:18:22,640 --> 00:18:23,840
because

459
00:18:23,840 --> 00:18:26,720
using the compressed form is easy

460
00:18:26,720 --> 00:18:28,559
computing the best way you do the

461
00:18:28,559 --> 00:18:30,080
compressed form

462
00:18:30,080 --> 00:18:32,320
is a bit more complex it's something

463
00:18:32,320 --> 00:18:34,080
that the root already does

464
00:18:34,080 --> 00:18:37,520
if you implement 8138 the root already

465
00:18:37,520 --> 00:18:40,720
does this compression but now

466
00:18:40,720 --> 00:18:43,280
since it knows how to do it we decided

467
00:18:43,280 --> 00:18:44,640
to to just

468
00:18:44,640 --> 00:18:47,360
let the root always do it and put the

469
00:18:47,360 --> 00:18:49,120
compressed form

470
00:18:49,120 --> 00:18:52,240
uh verbatim into the the pidao

471
00:18:52,240 --> 00:18:55,840
so so the now the local route the track

472
00:18:55,840 --> 00:18:58,960
ingress we just picked from the dao

473
00:18:58,960 --> 00:19:01,280
the source routing six lower range and

474
00:19:01,280 --> 00:19:03,690
copied verbatim

475
00:19:03,690 --> 00:19:06,720
[Music]

476
00:19:06,720 --> 00:19:09,280
also an important thing which was there

477
00:19:09,280 --> 00:19:11,840
from the very beginning of this e40 is

478
00:19:11,840 --> 00:19:14,480
when you use a stat for vio so so the

479
00:19:14,480 --> 00:19:17,120
the non-stop the storing mode i'm sorry

480
00:19:17,120 --> 00:19:20,320
um one intent is to use it in the main

481
00:19:20,320 --> 00:19:21,039
geodag

482
00:19:21,039 --> 00:19:24,160
so for specific path in the main geodag

483
00:19:24,160 --> 00:19:27,120
you can actually use storing mode just

484
00:19:27,120 --> 00:19:28,080
there

485
00:19:28,080 --> 00:19:31,679
to make the source routing editor

486
00:19:31,679 --> 00:19:33,600
smaller right because you don't have to

487
00:19:33,600 --> 00:19:34,720
to have the strict

488
00:19:34,720 --> 00:19:36,400
list of hopes but now you can have a

489
00:19:36,400 --> 00:19:38,720
loose list of hopes

490
00:19:38,720 --> 00:19:43,360
now to to to to be very clear on

491
00:19:43,360 --> 00:19:45,440
this is a segment which applies to this

492
00:19:45,440 --> 00:19:47,600
track or this is a segment which applies

493
00:19:47,600 --> 00:19:49,200
to the main geodag

494
00:19:49,200 --> 00:19:51,679
then the p dial for the segment has the

495
00:19:51,679 --> 00:19:53,679
same track id information

496
00:19:53,679 --> 00:19:55,919
which could be the main geode actually

497
00:19:55,919 --> 00:19:56,799
as

498
00:19:56,799 --> 00:19:59,760
the source routing thing so you can

499
00:19:59,760 --> 00:20:00,880
really say oh

500
00:20:00,880 --> 00:20:03,200
i have this loose packet going down this

501
00:20:03,200 --> 00:20:04,000
this

502
00:20:04,000 --> 00:20:06,960
either main geodag or going along a

503
00:20:06,960 --> 00:20:07,919
track

504
00:20:07,919 --> 00:20:10,320
let me find if i have a segment

505
00:20:10,320 --> 00:20:12,080
expressed in storing mode

506
00:20:12,080 --> 00:20:14,080
which actually has the same track id

507
00:20:14,080 --> 00:20:16,720
information main diode or this track

508
00:20:16,720 --> 00:20:19,120
and if i have that then i can forward to

509
00:20:19,120 --> 00:20:20,320
the next loose hop

510
00:20:20,320 --> 00:20:22,320
using this segment so you have to do

511
00:20:22,320 --> 00:20:23,600
this matching

512
00:20:23,600 --> 00:20:27,440
of the loose source routing

513
00:20:27,440 --> 00:20:30,720
and the segment in storing mode

514
00:20:30,720 --> 00:20:34,240
that goes between the loose hops

515
00:20:34,240 --> 00:20:35,760
now there was a question on the mailing

516
00:20:35,760 --> 00:20:37,280
list

517
00:20:37,280 --> 00:20:41,280
could we have a track in which we inject

518
00:20:41,280 --> 00:20:43,520
not all the packets for the target but

519
00:20:43,520 --> 00:20:45,440
only a subset of the packet with some

520
00:20:45,440 --> 00:20:47,120
flow information

521
00:20:47,120 --> 00:20:49,760
like if you know it's this flow flow

522
00:20:49,760 --> 00:20:50,400
label

523
00:20:50,400 --> 00:20:53,840
or this five top or anything like this

524
00:20:53,840 --> 00:20:57,039
so the the question is still uh open

525
00:20:57,039 --> 00:21:00,840
i mean i've not seen much

526
00:21:00,840 --> 00:21:05,360
um expression of the need for doing this

527
00:21:05,360 --> 00:21:07,840
it seems to me somehow that it could be

528
00:21:07,840 --> 00:21:10,159
a different draft because it's kind of

529
00:21:10,159 --> 00:21:12,000
saying okay here is a way to express a

530
00:21:12,000 --> 00:21:14,080
policy and if you have this policy you

531
00:21:14,080 --> 00:21:16,559
may use this track or that truck

532
00:21:16,559 --> 00:21:18,640
and we could link that kind of policy

533
00:21:18,640 --> 00:21:22,400
matching to either that net or

534
00:21:22,400 --> 00:21:25,600
segment routing or i don't know what so

535
00:21:25,600 --> 00:21:27,760
right now i'm not very clear if it has

536
00:21:27,760 --> 00:21:29,360
to be something which is specific to

537
00:21:29,360 --> 00:21:30,159
ripple

538
00:21:30,159 --> 00:21:32,480
and that we have to indicate their own

539
00:21:32,480 --> 00:21:33,520
rfcs

540
00:21:33,520 --> 00:21:35,840
or if it's just something that will uh

541
00:21:35,840 --> 00:21:36,720
when you deploy

542
00:21:36,720 --> 00:21:39,919
a protocol a global uh thing like

543
00:21:39,919 --> 00:21:42,720
ysun that incorporates 3.6 lapad and

544
00:21:42,720 --> 00:21:44,000
many other things

545
00:21:44,000 --> 00:21:45,840
maybe they could say oh basically you

546
00:21:45,840 --> 00:21:48,080
need to have a match

547
00:21:48,080 --> 00:21:50,000
and and you could use a segment routing

548
00:21:50,000 --> 00:21:51,840
policy or something like that

549
00:21:51,840 --> 00:21:53,039
and then we don't need to define

550
00:21:53,039 --> 00:21:54,720
anything it's just the complete bundle

551
00:21:54,720 --> 00:21:56,640
of rfcs that they use for the solution

552
00:21:56,640 --> 00:21:57,120
which

553
00:21:57,120 --> 00:21:58,880
which has this other component for doing

554
00:21:58,880 --> 00:22:00,720
the flow matching

555
00:22:00,720 --> 00:22:03,440
next slide please

556
00:22:04,559 --> 00:22:06,320
and if you have any anything you want to

557
00:22:06,320 --> 00:22:07,760
say or any question i'm

558
00:22:07,760 --> 00:22:10,400
more than willing to answer it as how

559
00:22:10,400 --> 00:22:11,840
much time because you extended my time

560
00:22:11,840 --> 00:22:15,600
but now i'm lost how much time do i have

561
00:22:16,640 --> 00:22:20,159
you may have another 10 minutes

562
00:22:20,159 --> 00:22:22,720
i'm rich i know i shouldn't tell you

563
00:22:22,720 --> 00:22:24,000
that

564
00:22:24,000 --> 00:22:27,840
you'll use 20. okay

565
00:22:27,840 --> 00:22:31,200
thank you dominique um so yeah i already

566
00:22:31,200 --> 00:22:33,360
presented the slides at the interim but

567
00:22:33,360 --> 00:22:35,200
it's worth

568
00:22:35,200 --> 00:22:37,919
i guess it's worth showing them again to

569
00:22:37,919 --> 00:22:39,440
the wider audience and

570
00:22:39,440 --> 00:22:42,159
and even for those who already saw them

571
00:22:42,159 --> 00:22:44,000
uh

572
00:22:44,000 --> 00:22:46,559
probably it's not fully obvious how

573
00:22:46,559 --> 00:22:48,080
things are done

574
00:22:48,080 --> 00:22:51,360
so basically

575
00:22:51,360 --> 00:22:54,960
you have to signal

576
00:22:54,960 --> 00:22:57,039
when you when you defined a track or

577
00:22:57,039 --> 00:22:58,880
when you define a segment

578
00:22:58,880 --> 00:23:02,880
you have to signal where you want to go

579
00:23:02,880 --> 00:23:06,080
so that will be the targets

580
00:23:06,080 --> 00:23:08,240
for instance on the on the top left here

581
00:23:08,240 --> 00:23:09,440
you see targets b

582
00:23:09,440 --> 00:23:11,600
and c that's where you want to go so

583
00:23:11,600 --> 00:23:13,280
that's going to be the destination

584
00:23:13,280 --> 00:23:16,640
address in your routing table

585
00:23:16,640 --> 00:23:20,559
and you either have an srvio

586
00:23:20,559 --> 00:23:23,840
one slvio only for the simplification

587
00:23:23,840 --> 00:23:27,440
or one sfvio only for giving you

588
00:23:27,440 --> 00:23:30,720
strict hubs if it's an sfvio and

589
00:23:30,720 --> 00:23:33,679
strict or lose hops if it's an sr source

590
00:23:33,679 --> 00:23:34,960
routing vio

591
00:23:34,960 --> 00:23:38,080
okay so based on this

592
00:23:38,080 --> 00:23:41,200
those basic tools you can do a number of

593
00:23:41,200 --> 00:23:41,679
things

594
00:23:41,679 --> 00:23:45,360
which as i said we divided in profiles

595
00:23:45,360 --> 00:23:48,480
and now we are going to go through the

596
00:23:48,480 --> 00:23:50,000
six profiles to see

597
00:23:50,000 --> 00:23:53,120
what they can do so profile one

598
00:23:53,120 --> 00:23:56,240
is actually the one thing that

599
00:23:56,240 --> 00:23:59,760
i promised we would be doing uh when i

600
00:23:59,760 --> 00:24:02,159
suggested this work to the

601
00:24:02,159 --> 00:24:06,240
to the royal working group and the idea

602
00:24:06,240 --> 00:24:09,840
was not to build track at all the idea

603
00:24:09,840 --> 00:24:10,320
was

604
00:24:10,320 --> 00:24:15,200
just in the main non-storing deodag

605
00:24:15,200 --> 00:24:18,720
to enable a hybrid storing

606
00:24:18,720 --> 00:24:23,039
non-stirring world where

607
00:24:23,039 --> 00:24:27,360
if the root knows how much state can be

608
00:24:27,360 --> 00:24:30,640
used for rotting in the in the nodes

609
00:24:30,640 --> 00:24:32,880
then it could actually go and program

610
00:24:32,880 --> 00:24:34,080
the nodes

611
00:24:34,080 --> 00:24:37,039
for just at the maximum that amount of

612
00:24:37,039 --> 00:24:37,919
state

613
00:24:37,919 --> 00:24:42,320
but no more and um

614
00:24:42,320 --> 00:24:45,520
use that at the best possible place to

615
00:24:45,520 --> 00:24:46,799
save

616
00:24:46,799 --> 00:24:48,640
source routing headers so to save

617
00:24:48,640 --> 00:24:51,200
bandwidth and frame size

618
00:24:51,200 --> 00:24:53,200
in the packets so for instance if you

619
00:24:53,200 --> 00:24:54,559
have a very long line

620
00:24:54,559 --> 00:24:57,440
to get somewhere you want to express it

621
00:24:57,440 --> 00:24:59,279
as a loose

622
00:24:59,279 --> 00:25:03,360
hub in the source rotator

623
00:25:03,360 --> 00:25:05,679
but then you along this long line you

624
00:25:05,679 --> 00:25:07,440
want you have to install

625
00:25:07,440 --> 00:25:10,640
a uh storing mode wrapped

626
00:25:10,640 --> 00:25:13,039
which will enable to to join the loose

627
00:25:13,039 --> 00:25:14,320
hops

628
00:25:14,320 --> 00:25:17,520
in this example i have two such

629
00:25:17,520 --> 00:25:21,760
loose hops one is

630
00:25:21,760 --> 00:25:25,039
a to c we want to save the signaling of

631
00:25:25,039 --> 00:25:26,880
b

632
00:25:26,880 --> 00:25:30,080
and then we have c d e

633
00:25:30,080 --> 00:25:35,120
f we want to save uh the signaling of d

634
00:25:35,120 --> 00:25:38,159
okay and we could also um well

635
00:25:38,159 --> 00:25:39,520
you will you'll see there are little

636
00:25:39,520 --> 00:25:40,799
alternates whether you want the

637
00:25:40,799 --> 00:25:43,200
destination to be the track egress

638
00:25:43,200 --> 00:25:46,080
or the destination to be a neighbor just

639
00:25:46,080 --> 00:25:47,600
after the track egress

640
00:25:47,600 --> 00:25:50,720
so so and actually i show in this uh

641
00:25:50,720 --> 00:25:53,919
diagram i show both cases

642
00:25:53,919 --> 00:25:57,039
i guess i do um okay so

643
00:25:57,039 --> 00:26:00,400
um the first thing that

644
00:26:00,400 --> 00:26:02,640
that we have to do is build this track

645
00:26:02,640 --> 00:26:04,080
but in profile one

646
00:26:04,080 --> 00:26:07,440
the track is the main geodag profile one

647
00:26:07,440 --> 00:26:09,120
you don't have the concept of a

648
00:26:09,120 --> 00:26:12,320
shorter path inside the geodag uh

649
00:26:12,320 --> 00:26:14,720
using a track it's just we have the main

650
00:26:14,720 --> 00:26:16,799
geodag we have we have all this graph

651
00:26:16,799 --> 00:26:17,440
that that

652
00:26:17,440 --> 00:26:20,240
that may have those long lines and we

653
00:26:20,240 --> 00:26:22,000
basically want to do some compression

654
00:26:22,000 --> 00:26:23,039
here and there

655
00:26:23,039 --> 00:26:26,400
by hybriding and with some story mode

656
00:26:26,400 --> 00:26:30,400
and so um to do this in this example

657
00:26:30,400 --> 00:26:33,600
we need uh two p dials p

658
00:26:33,600 --> 00:26:36,480
o one and p d o two p d o one enables

659
00:26:36,480 --> 00:26:38,159
the compression of the

660
00:26:38,159 --> 00:26:41,760
cde path okay

661
00:26:41,760 --> 00:26:44,880
so it can be now just a loose hop c

662
00:26:44,880 --> 00:26:49,039
e and uh we also want to compress

663
00:26:49,039 --> 00:26:52,480
abc and just signal ac in the packet so

664
00:26:52,480 --> 00:26:54,000
now the the

665
00:26:54,000 --> 00:26:57,679
source rod header uh from um

666
00:26:57,679 --> 00:27:01,440
the root to f would be basically

667
00:27:01,440 --> 00:27:05,200
signaling a c e and finally f

668
00:27:05,200 --> 00:27:07,039
which could be in the inner packet which

669
00:27:07,039 --> 00:27:08,880
could be anywhere but it really depends

670
00:27:08,880 --> 00:27:10,159
on what you're sending

671
00:27:10,159 --> 00:27:12,559
but basically the important thing i want

672
00:27:12,559 --> 00:27:14,400
to say is the loose information now in

673
00:27:14,400 --> 00:27:15,600
the srh is a

674
00:27:15,600 --> 00:27:18,720
c e we have skipped b we have skip d and

675
00:27:18,720 --> 00:27:20,159
that could be many more right you don't

676
00:27:20,159 --> 00:27:21,919
have to skip any one half you can skip

677
00:27:21,919 --> 00:27:24,960
five of them if you want to um

678
00:27:24,960 --> 00:27:28,880
and we do that two times

679
00:27:28,880 --> 00:27:31,360
we don't necessarily do that as a single

680
00:27:31,360 --> 00:27:32,320
line

681
00:27:32,320 --> 00:27:34,559
you see we skip b separately from

682
00:27:34,559 --> 00:27:36,399
skipping d which means that

683
00:27:36,399 --> 00:27:39,679
if you have a b c c d e

684
00:27:39,679 --> 00:27:43,360
and c d prime e prime um the compression

685
00:27:43,360 --> 00:27:43,760
of b

686
00:27:43,760 --> 00:27:45,840
doesn't have to be done twice i mean the

687
00:27:45,840 --> 00:27:46,880
the hop

688
00:27:46,880 --> 00:27:50,880
abc has been compressed with pdo2

689
00:27:50,880 --> 00:27:53,919
it works wherever you go from from

690
00:27:53,919 --> 00:27:56,559
c right so that's that's one good reason

691
00:27:56,559 --> 00:27:57,679
for doing it in

692
00:27:57,679 --> 00:28:00,840
two shots so

693
00:28:00,840 --> 00:28:04,720
um pdl1 is sent by the root to

694
00:28:04,720 --> 00:28:07,120
remember we send the pdaw in storing

695
00:28:07,120 --> 00:28:08,480
mode to the

696
00:28:08,480 --> 00:28:11,039
exit so we send it to the egress which

697
00:28:11,039 --> 00:28:11,840
is e so p

698
00:28:11,840 --> 00:28:15,679
r1 flies to e and it it

699
00:28:15,679 --> 00:28:19,200
uh the target of e doesn't signal

700
00:28:19,200 --> 00:28:20,640
in this in this example it doesn't

701
00:28:20,640 --> 00:28:23,279
signal any other target

702
00:28:23,279 --> 00:28:25,279
you could have signaled f if you wanted

703
00:28:25,279 --> 00:28:27,760
to but in this example we place f in the

704
00:28:27,760 --> 00:28:29,919
packet it's a choice

705
00:28:29,919 --> 00:28:34,399
so um basically the svio says cde so

706
00:28:34,399 --> 00:28:37,120
d will e will pass it to d d will pass

707
00:28:37,120 --> 00:28:38,399
it to c

708
00:28:38,399 --> 00:28:41,919
all of them along the path will set up a

709
00:28:41,919 --> 00:28:43,279
route to the target

710
00:28:43,279 --> 00:28:46,799
so c and d will have a route to e

711
00:28:46,799 --> 00:28:49,520
okay and the the interesting thing that

712
00:28:49,520 --> 00:28:51,120
we've built here is really c

713
00:28:51,120 --> 00:28:54,559
having a route to d to evrd

714
00:28:54,559 --> 00:28:56,399
you will find the draft so it's all

715
00:28:56,399 --> 00:28:58,080
explained with tables and all you will

716
00:28:58,080 --> 00:28:59,200
see

717
00:28:59,200 --> 00:29:00,960
who installs what because you have the

718
00:29:00,960 --> 00:29:02,640
neighbor entries and you have the

719
00:29:02,640 --> 00:29:04,799
the routing entries so the only routing

720
00:29:04,799 --> 00:29:06,399
entries that is really set

721
00:29:06,399 --> 00:29:10,320
by this pw1 is c now as a route

722
00:29:10,320 --> 00:29:13,440
to e via d

723
00:29:13,440 --> 00:29:16,880
okay and so when the pilot uh reaches c

724
00:29:16,880 --> 00:29:18,559
it installs that route

725
00:29:18,559 --> 00:29:21,919
and it sends the the pidawak to the root

726
00:29:21,919 --> 00:29:24,960
so now the root knows that c knows how

727
00:29:24,960 --> 00:29:27,120
to get to e without signaling the

728
00:29:27,120 --> 00:29:27,679
segment

729
00:29:27,679 --> 00:29:31,760
the source routing either same thing

730
00:29:31,760 --> 00:29:34,320
for b but you see that i could have set

731
00:29:34,320 --> 00:29:35,440
the p down 1

732
00:29:35,440 --> 00:29:38,559
to c c would have done would have

733
00:29:38,559 --> 00:29:39,440
terminated

734
00:29:39,440 --> 00:29:43,600
the the first sequence and and um

735
00:29:43,600 --> 00:29:45,840
started the second but we can also and

736
00:29:45,840 --> 00:29:47,919
which is this is what i do here

737
00:29:47,919 --> 00:29:50,399
uh we could also consider that the

738
00:29:50,399 --> 00:29:51,840
segment ends at d

739
00:29:51,840 --> 00:29:53,760
because b knows about c being your

740
00:29:53,760 --> 00:29:55,039
neighbor

741
00:29:55,039 --> 00:29:57,120
so you don't need really to do what i

742
00:29:57,120 --> 00:29:58,080
did on the right

743
00:29:58,080 --> 00:30:01,120
which is send the p dow to d to e on the

744
00:30:01,120 --> 00:30:02,080
right i send the p

745
00:30:02,080 --> 00:30:04,240
out to e which sends it to d and the

746
00:30:04,240 --> 00:30:05,919
only thing that

747
00:30:05,919 --> 00:30:08,720
d learns from this p pdo is that it can

748
00:30:08,720 --> 00:30:10,080
reach evie

749
00:30:10,080 --> 00:30:12,399
it's something it's really new so i just

750
00:30:12,399 --> 00:30:14,240
show that it's possible but

751
00:30:14,240 --> 00:30:15,840
probably the best thing to do in this

752
00:30:15,840 --> 00:30:17,440
case is to send

753
00:30:17,440 --> 00:30:20,080
the the pedal what i do to be to be

754
00:30:20,080 --> 00:30:20,799
directly

755
00:30:20,799 --> 00:30:24,320
like 1 could have been sent to e p 02 is

756
00:30:24,320 --> 00:30:26,399
effectively sent to b

757
00:30:26,399 --> 00:30:29,600
so with this b says okay

758
00:30:29,600 --> 00:30:33,279
um the targets are myself fine and c

759
00:30:33,279 --> 00:30:36,480
okay do i have c as a neighbor yes so

760
00:30:36,480 --> 00:30:38,480
this p dio is valid

761
00:30:38,480 --> 00:30:41,600
i can reach c i can reach myself uh i'm

762
00:30:41,600 --> 00:30:42,799
a validity grasp

763
00:30:42,799 --> 00:30:45,679
for this segment what are what is the

764
00:30:45,679 --> 00:30:47,120
sfvio a b

765
00:30:47,120 --> 00:30:49,279
okay so i need to pass it to the guy

766
00:30:49,279 --> 00:30:50,320
before me which is

767
00:30:50,320 --> 00:30:53,520
a so b passes the p dao

768
00:30:53,520 --> 00:30:57,760
2 to to a a looks at the p dao says okay

769
00:30:57,760 --> 00:30:59,120
what do i see in there

770
00:30:59,120 --> 00:31:01,679
first the targets are b and c okay let's

771
00:31:01,679 --> 00:31:04,159
let me look at my routing table

772
00:31:04,159 --> 00:31:06,000
b i knew already how to reach him right

773
00:31:06,000 --> 00:31:08,399
he's my neighbor but i can reach

774
00:31:08,399 --> 00:31:10,880
c via b let me install cvrb in my

775
00:31:10,880 --> 00:31:12,960
routing table

776
00:31:12,960 --> 00:31:16,159
so at this point we see as e via d

777
00:31:16,159 --> 00:31:20,720
and a as c via b

778
00:31:20,960 --> 00:31:23,600
and uh a is actually the first in the

779
00:31:23,600 --> 00:31:25,120
sevier list so it

780
00:31:25,120 --> 00:31:28,320
it sends the arc to the root the root

781
00:31:28,320 --> 00:31:30,480
gets that and now it knows that

782
00:31:30,480 --> 00:31:33,840
a can go to c

783
00:31:34,159 --> 00:31:38,080
and c can go to e so now in the source

784
00:31:38,080 --> 00:31:39,679
rotator instead of saying

785
00:31:39,679 --> 00:31:43,279
a b c d e f the root can do

786
00:31:43,279 --> 00:31:47,840
a c e f

787
00:31:48,240 --> 00:31:51,120
okay so in this case the track as i said

788
00:31:51,120 --> 00:31:52,320
is the main diode

789
00:31:52,320 --> 00:31:54,640
just same thing it's just that the main

790
00:31:54,640 --> 00:31:55,760
jag

791
00:31:55,760 --> 00:31:58,159
is a global instance and another track

792
00:31:58,159 --> 00:31:59,600
that we'll see in the other profiles are

793
00:31:59,600 --> 00:32:00,799
local instances

794
00:32:00,799 --> 00:32:02,799
but it's exactly the same game a packet

795
00:32:02,799 --> 00:32:04,000
comes in the root

796
00:32:04,000 --> 00:32:06,720
the root uh has to encapsulate it for

797
00:32:06,720 --> 00:32:08,559
the track which is the main geodag so it

798
00:32:08,559 --> 00:32:11,039
will put the rpi of the media dag

799
00:32:11,039 --> 00:32:13,279
it will put a source routing editor but

800
00:32:13,279 --> 00:32:14,720
now it can be compressed

801
00:32:14,720 --> 00:32:16,640
and the source routing there will say a

802
00:32:16,640 --> 00:32:19,519
c e f

803
00:32:19,679 --> 00:32:23,039
okay remember the target is where you're

804
00:32:23,039 --> 00:32:24,399
going it's what you install in the rib

805
00:32:24,399 --> 00:32:25,840
as the destination

806
00:32:25,840 --> 00:32:29,279
and the vio is the path to get there

807
00:32:29,279 --> 00:32:31,120
okay so that's profile one and that's

808
00:32:31,120 --> 00:32:32,320
what was

809
00:32:32,320 --> 00:32:35,360
originally promised uh for the work in

810
00:32:35,360 --> 00:32:43,120
in pidao next slide please

811
00:32:43,120 --> 00:32:45,440
so uh so the first thing that that i got

812
00:32:45,440 --> 00:32:46,720
as a request

813
00:32:46,720 --> 00:32:48,399
from the working group when we started

814
00:32:48,399 --> 00:32:50,080
this work is hey

815
00:32:50,080 --> 00:32:52,799
uh could you please do the same thing

816
00:32:52,799 --> 00:32:53,279
that

817
00:32:53,279 --> 00:32:56,799
expressing quote unquote the segments

818
00:32:56,799 --> 00:33:02,480
as non-storing mode as well

819
00:33:02,880 --> 00:33:06,399
i said well okay when you do non-storing

820
00:33:06,399 --> 00:33:06,960
mode

821
00:33:06,960 --> 00:33:09,120
for expressing quote unquote this

822
00:33:09,120 --> 00:33:10,559
segment

823
00:33:10,559 --> 00:33:14,399
as it goes you have to re-encapsulate

824
00:33:14,399 --> 00:33:17,360
to place the source rotator which will

825
00:33:17,360 --> 00:33:17,760
allow

826
00:33:17,760 --> 00:33:20,880
a to reach c which i represent in

827
00:33:20,880 --> 00:33:22,720
in orange in this slide you see why it's

828
00:33:22,720 --> 00:33:24,000
written track 2 and track

829
00:33:24,000 --> 00:33:27,760
1. it really means a okay a has a loose

830
00:33:27,760 --> 00:33:31,120
source routing packet to get to c

831
00:33:31,120 --> 00:33:34,320
but but it needs to send it via b and so

832
00:33:34,320 --> 00:33:36,000
it needs to encapsulate it with a

833
00:33:36,000 --> 00:33:37,519
routing error

834
00:33:37,519 --> 00:33:40,480
which will express how to get to c

835
00:33:40,480 --> 00:33:41,760
because now everything is a routing

836
00:33:41,760 --> 00:33:42,480
editor

837
00:33:42,480 --> 00:33:44,240
so it's you you end up with a double

838
00:33:44,240 --> 00:33:46,240
encapsulation the root takes the packet

839
00:33:46,240 --> 00:33:47,679
from the outside of the diode

840
00:33:47,679 --> 00:33:50,960
encapsulates it with rpi zero and now

841
00:33:50,960 --> 00:33:55,600
a has to encapsulate it to c via b

842
00:33:56,480 --> 00:33:59,840
so the the bottom line is

843
00:33:59,840 --> 00:34:02,480
when we're using non-storing mode to

844
00:34:02,480 --> 00:34:03,200
signal

845
00:34:03,200 --> 00:34:05,519
intermediate hops between the loose

846
00:34:05,519 --> 00:34:06,480
thing

847
00:34:06,480 --> 00:34:08,879
you're actually re-encapsulating the

848
00:34:08,879 --> 00:34:09,839
packet in

849
00:34:09,839 --> 00:34:12,879
another track

850
00:34:13,280 --> 00:34:15,119
whether it's the main geodag or that

851
00:34:15,119 --> 00:34:16,399
that was the outer thing

852
00:34:16,399 --> 00:34:18,560
well the the first encapsulation the

853
00:34:18,560 --> 00:34:20,399
second encapsulation is a new track

854
00:34:20,399 --> 00:34:22,239
that's one of the realizations we ended

855
00:34:22,239 --> 00:34:24,560
up doing um

856
00:34:24,560 --> 00:34:27,760
in the process of of defining pidao is

857
00:34:27,760 --> 00:34:30,000
as soon as you use rotting headers you

858
00:34:30,000 --> 00:34:31,520
have to re-encapsulate which means

859
00:34:31,520 --> 00:34:32,960
really another track

860
00:34:32,960 --> 00:34:36,000
so to make this work in non-storing mode

861
00:34:36,000 --> 00:34:38,879
same thing as before we have to create

862
00:34:38,879 --> 00:34:42,079
two tracks track one and track two

863
00:34:42,079 --> 00:34:44,800
so it's easier in terms of signaling

864
00:34:44,800 --> 00:34:46,399
because the pdo

865
00:34:46,399 --> 00:34:51,119
in non-storing mode so the the the sr

866
00:34:51,119 --> 00:34:54,560
the pida vio is

867
00:34:54,560 --> 00:34:56,879
is really passed to to only the ingress

868
00:34:56,879 --> 00:34:58,400
the ingress gets it

869
00:34:58,400 --> 00:35:00,320
gets the source writing header just

870
00:35:00,320 --> 00:35:02,960
answers immediately so you see p01

871
00:35:02,960 --> 00:35:06,240
uh being sent to c and c answering and

872
00:35:06,240 --> 00:35:08,720
p double 2 being sent to a and a

873
00:35:08,720 --> 00:35:10,400
answering

874
00:35:10,400 --> 00:35:12,160
okay so it's easier for signaling you

875
00:35:12,160 --> 00:35:13,760
don't have to to forward it along the

876
00:35:13,760 --> 00:35:15,520
path as we did before

877
00:35:15,520 --> 00:35:18,240
but the the operation is less efficient

878
00:35:18,240 --> 00:35:19,440
more complex because you have to

879
00:35:19,440 --> 00:35:21,920
re-encapsulate and de-capsulate

880
00:35:21,920 --> 00:35:24,640
a encapsulate b decapsulates c

881
00:35:24,640 --> 00:35:27,040
re-encapsulate

882
00:35:27,040 --> 00:35:29,920
d forward using the source rotator e d

883
00:35:29,920 --> 00:35:32,560
capsulates

884
00:35:33,040 --> 00:35:35,520
okay and like before you could you could

885
00:35:35,520 --> 00:35:36,079
end up

886
00:35:36,079 --> 00:35:39,359
in uh in d just like we end up in b

887
00:35:39,359 --> 00:35:40,800
uh it's that's why i say there are two

888
00:35:40,800 --> 00:35:42,960
way of expressing roughly the same thing

889
00:35:42,960 --> 00:35:44,480
it's just that in this case it's more

890
00:35:44,480 --> 00:35:47,200
obvious that b will decapsulate

891
00:35:47,200 --> 00:35:50,480
and forward the packet which is still

892
00:35:50,480 --> 00:35:53,119
forwarded along the main geodag with rpi

893
00:35:53,119 --> 00:35:55,839
zero in the outer rider now

894
00:35:55,839 --> 00:35:57,920
from b to c that's the same packet that

895
00:35:57,920 --> 00:35:59,520
was from the root to a

896
00:35:59,520 --> 00:36:02,560
because b has encapsulated reaches c c

897
00:36:02,560 --> 00:36:05,599
needs to send it to to e oh guess what

898
00:36:05,599 --> 00:36:06,800
to say to you i have this

899
00:36:06,800 --> 00:36:09,440
srv io which says d e okay i have to

900
00:36:09,440 --> 00:36:11,520
re-encapsulate

901
00:36:11,520 --> 00:36:14,480
so for for a to encapsulate and c to

902
00:36:14,480 --> 00:36:15,520
encapsulate

903
00:36:15,520 --> 00:36:18,400
we have to define two tracks next slide

904
00:36:18,400 --> 00:36:20,640
please

905
00:36:20,880 --> 00:36:22,960
and how much time i still have five

906
00:36:22,960 --> 00:36:26,480
minutes right or am i wrong

907
00:36:26,480 --> 00:36:28,880
you only use the you already used up to

908
00:36:28,880 --> 00:36:30,240
10 minutes

909
00:36:30,240 --> 00:36:33,599
okay very large but i'm checking with

910
00:36:33,599 --> 00:36:36,160
the other presenters so you can

911
00:36:36,160 --> 00:36:38,880
you can have another five minutes so try

912
00:36:38,880 --> 00:36:40,240
to

913
00:36:40,240 --> 00:36:44,079
give the high level i don't need that

914
00:36:44,079 --> 00:36:46,800
but can you just summarize you know the

915
00:36:46,800 --> 00:36:48,720
the differences between the profile so

916
00:36:48,720 --> 00:36:50,560
we get the high level view

917
00:36:50,560 --> 00:36:53,359
okay so let's schedule an intro to dive

918
00:36:53,359 --> 00:36:54,720
into the details

919
00:36:54,720 --> 00:36:57,839
which are absolutely exciting but

920
00:36:57,839 --> 00:37:01,280
sorry yes i'm sure uh

921
00:37:01,280 --> 00:37:04,240
okay so no no no worries i mean actually

922
00:37:04,240 --> 00:37:06,000
everything is expressed in in the

923
00:37:06,000 --> 00:37:09,280
the draft anyway with examples etc

924
00:37:09,280 --> 00:37:11,200
and uh you see that the profiles are

925
00:37:11,200 --> 00:37:12,720
mostly expressing the same thing but

926
00:37:12,720 --> 00:37:14,960
instead of having the main deal the egg

927
00:37:14,960 --> 00:37:17,119
now you're trying to do a shortcut

928
00:37:17,119 --> 00:37:18,560
because that's the second thing that the

929
00:37:18,560 --> 00:37:18,880
group

930
00:37:18,880 --> 00:37:20,960
asked me after doing this the

931
00:37:20,960 --> 00:37:22,160
non-storing mode

932
00:37:22,160 --> 00:37:25,200
uh segments which really are tracks

933
00:37:25,200 --> 00:37:28,640
uh here's uh how can we

934
00:37:28,640 --> 00:37:31,520
do shortcuts inside the geoduck so not

935
00:37:31,520 --> 00:37:33,359
just along the main geoduck but inside

936
00:37:33,359 --> 00:37:34,480
the geodex

937
00:37:34,480 --> 00:37:36,480
so all profiles starting at three so

938
00:37:36,480 --> 00:37:37,760
three four five six

939
00:37:37,760 --> 00:37:40,000
will be doing the shortcuts avoiding

940
00:37:40,000 --> 00:37:41,520
going all the way to the command parents

941
00:37:41,520 --> 00:37:42,400
and down

942
00:37:42,400 --> 00:37:44,000
or in non-storing mode all the way to

943
00:37:44,000 --> 00:37:46,000
the root and down now we can do

944
00:37:46,000 --> 00:37:47,040
shortcuts

945
00:37:47,040 --> 00:37:49,359
which means that we are building tracks

946
00:37:49,359 --> 00:37:50,160
geodags

947
00:37:50,160 --> 00:37:52,160
where the root is one node in the

948
00:37:52,160 --> 00:37:53,920
network on the left

949
00:37:53,920 --> 00:37:55,839
and the egress is another node on the

950
00:37:55,839 --> 00:37:57,280
right

951
00:37:57,280 --> 00:37:59,680
and like i said earlier we made it so

952
00:37:59,680 --> 00:38:01,119
that the root is the ingress

953
00:38:01,119 --> 00:38:02,720
meaning that now a track can have

954
00:38:02,720 --> 00:38:04,320
multiple aggresses

955
00:38:04,320 --> 00:38:08,160
profile 3 is the case where

956
00:38:08,160 --> 00:38:10,560
the track i mentioned that earlier but

957
00:38:10,560 --> 00:38:12,960
the track is implicit

958
00:38:12,960 --> 00:38:15,760
because all you're doing is giving me a

959
00:38:15,760 --> 00:38:17,440
list of hops

960
00:38:17,440 --> 00:38:20,960
so you're saying oh i want to get

961
00:38:20,960 --> 00:38:23,520
from a node which is next to a to a

962
00:38:23,520 --> 00:38:24,240
destination

963
00:38:24,240 --> 00:38:27,040
f and to get to the destination f which

964
00:38:27,040 --> 00:38:27,680
is a

965
00:38:27,680 --> 00:38:30,640
neighbor of e all i want to do is go a b

966
00:38:30,640 --> 00:38:31,040
c d

967
00:38:31,040 --> 00:38:33,920
e so you can express that as a non as a

968
00:38:33,920 --> 00:38:35,359
storing mode

969
00:38:35,359 --> 00:38:37,839
path which is just represented by this p

970
00:38:37,839 --> 00:38:38,800
one

971
00:38:38,800 --> 00:38:40,839
but you don't really need to do an

972
00:38:40,839 --> 00:38:42,400
encapsulation

973
00:38:42,400 --> 00:38:44,480
um well calculation you you do need to

974
00:38:44,480 --> 00:38:46,960
do encapsulation but to signal

975
00:38:46,960 --> 00:38:49,839
a track which would have the exact same

976
00:38:49,839 --> 00:38:50,560
information

977
00:38:50,560 --> 00:38:53,599
and saying ingress a egress e

978
00:38:53,599 --> 00:38:55,040
i mean that would be an addition on p

979
00:38:55,040 --> 00:38:57,280
dial for just nothing match

980
00:38:57,280 --> 00:39:01,040
so when you signal p01 as expressed here

981
00:39:01,040 --> 00:39:03,440
you can think that implicitly comes with

982
00:39:03,440 --> 00:39:04,400
it

983
00:39:04,400 --> 00:39:08,240
a non-storing pidao

984
00:39:08,240 --> 00:39:11,839
an sr vio which says ae

985
00:39:11,839 --> 00:39:14,640
right ingress egress it's implicit you

986
00:39:14,640 --> 00:39:15,520
you

987
00:39:15,520 --> 00:39:17,599
you have signaled by by this segment i

988
00:39:17,599 --> 00:39:19,599
have also signaled implicitly a track

989
00:39:19,599 --> 00:39:21,359
so that's that's profile three that's

990
00:39:21,359 --> 00:39:23,680
how you can do a next slide please let's

991
00:39:23,680 --> 00:39:24,720
see how we can do

992
00:39:24,720 --> 00:39:27,680
the the simple segment which is a track

993
00:39:27,680 --> 00:39:30,160
by itself

994
00:39:30,320 --> 00:39:32,640
um

995
00:39:33,839 --> 00:39:36,720
in this case

996
00:39:37,440 --> 00:39:40,839
so so three four five six i forgot to

997
00:39:40,839 --> 00:39:42,240
say

998
00:39:42,240 --> 00:39:43,920
because you're doing left or right you

999
00:39:43,920 --> 00:39:45,440
need sibling information option

1000
00:39:45,440 --> 00:39:47,599
for one two you don't need the new

1001
00:39:47,599 --> 00:39:49,280
option that we have in the pdf draft but

1002
00:39:49,280 --> 00:39:50,079
for two

1003
00:39:50,079 --> 00:39:53,359
three four five six uh we we need

1004
00:39:53,359 --> 00:39:56,560
um the the sibling information so the

1005
00:39:56,560 --> 00:39:57,839
root can know actually what the

1006
00:39:57,839 --> 00:39:58,400
neighbors

1007
00:39:58,400 --> 00:40:02,160
are in this case we are using

1008
00:40:02,160 --> 00:40:05,200
a uh storing mode track

1009
00:40:05,200 --> 00:40:07,920
to signal the the same path as before

1010
00:40:07,920 --> 00:40:08,839
but

1011
00:40:08,839 --> 00:40:12,079
um now we we are we have a straight

1012
00:40:12,079 --> 00:40:14,319
uh

1013
00:40:16,960 --> 00:40:19,440
i just i don't say why i say loose hop

1014
00:40:19,440 --> 00:40:20,319
one

1015
00:40:20,319 --> 00:40:21,680
because it's really straight i mean it's

1016
00:40:21,680 --> 00:40:23,839
it's it's so sorry for the typo

1017
00:40:23,839 --> 00:40:25,359
the hops are not loose anymore in this

1018
00:40:25,359 --> 00:40:27,040
case the orbs are straight

1019
00:40:27,040 --> 00:40:28,880
and it's uh basically you signal this

1020
00:40:28,880 --> 00:40:30,400
exact same case as three

1021
00:40:30,400 --> 00:40:33,760
but using uh a non-storing mode

1022
00:40:33,760 --> 00:40:38,079
next slide please

1023
00:40:38,079 --> 00:40:41,359
so here we are so every odd number

1024
00:40:41,359 --> 00:40:44,720
is using storing mode every

1025
00:40:44,720 --> 00:40:46,960
uh even number is using non-storing mode

1026
00:40:46,960 --> 00:40:48,560
so what we've done here

1027
00:40:48,560 --> 00:40:50,880
is pretty much the same thing as we did

1028
00:40:50,880 --> 00:40:52,720
in pro in the first profile in profile

1029
00:40:52,720 --> 00:40:53,440
one

1030
00:40:53,440 --> 00:40:55,920
but now you realize that the the main

1031
00:40:55,920 --> 00:40:56,640
diode

1032
00:40:56,640 --> 00:41:00,160
is replaced by a track and profile six

1033
00:41:00,160 --> 00:41:03,839
is the same thing but using track within

1034
00:41:03,839 --> 00:41:05,280
track

1035
00:41:05,280 --> 00:41:08,880
and that's pretty much it okay

1036
00:41:08,880 --> 00:41:11,359
um so so there are some questions which

1037
00:41:11,359 --> 00:41:12,960
were really already asked

1038
00:41:12,960 --> 00:41:15,119
during the interim i don't have much

1039
00:41:15,119 --> 00:41:16,000
time but

1040
00:41:16,000 --> 00:41:17,839
i would like can you go to the

1041
00:41:17,839 --> 00:41:19,119
conclusions please

1042
00:41:19,119 --> 00:41:21,440
yes i'm done i'm saying i just want to

1043
00:41:21,440 --> 00:41:22,640
to

1044
00:41:22,640 --> 00:41:24,640
to address those questions on on the

1045
00:41:24,640 --> 00:41:26,000
mailing list

1046
00:41:26,000 --> 00:41:27,520
so do we need to do more on loop

1047
00:41:27,520 --> 00:41:29,200
avoidance that's the last slide that you

1048
00:41:29,200 --> 00:41:30,319
have here

1049
00:41:30,319 --> 00:41:33,680
um when we have the packet the pedal

1050
00:41:33,680 --> 00:41:35,599
request who sends it

1051
00:41:35,599 --> 00:41:37,839
um so so those questions that you can

1052
00:41:37,839 --> 00:41:39,119
read i would like damage rest on the

1053
00:41:39,119 --> 00:41:40,400
mailing list

1054
00:41:40,400 --> 00:41:43,280
um to to solve it and pretty much we are

1055
00:41:43,280 --> 00:41:44,240
done after that

1056
00:41:44,240 --> 00:41:46,560
that's my conclusion once we resolve

1057
00:41:46,560 --> 00:41:48,000
those issues we're pretty much done

1058
00:41:48,000 --> 00:41:52,000
i guess so what are you your next steps

1059
00:41:52,000 --> 00:41:53,839
uh do you need feedback from the group

1060
00:41:53,839 --> 00:41:55,040
do you need

1061
00:41:55,040 --> 00:41:57,920
yes exactly i i need to to to to discuss

1062
00:41:57,920 --> 00:41:59,599
those items that you can see in front of

1063
00:41:59,599 --> 00:42:00,400
you

1064
00:42:00,400 --> 00:42:03,200
and get feedback from the from the group

1065
00:42:03,200 --> 00:42:04,640
there was the question of whether we do

1066
00:42:04,640 --> 00:42:05,760
flow filtering

1067
00:42:05,760 --> 00:42:08,240
and then uh whether we want to do more

1068
00:42:08,240 --> 00:42:09,520
on loop avoidance

1069
00:42:09,520 --> 00:42:10,960
uh whether we want to extend the

1070
00:42:10,960 --> 00:42:13,599
capability to send a pid out request so

1071
00:42:13,599 --> 00:42:15,280
that's a message which says please build

1072
00:42:15,280 --> 00:42:16,480
me this track

1073
00:42:16,480 --> 00:42:18,160
for now only the traffic rights can do

1074
00:42:18,160 --> 00:42:19,760
it do we want more

1075
00:42:19,760 --> 00:42:22,240
uh how do we maintain the the neighbor

1076
00:42:22,240 --> 00:42:23,119
state

1077
00:42:23,119 --> 00:42:24,480
you know we now have the sibling

1078
00:42:24,480 --> 00:42:26,400
information option how do we

1079
00:42:26,400 --> 00:42:28,800
maintain the state of the sibling do we

1080
00:42:28,800 --> 00:42:30,880
say oh use nd or something it's not

1081
00:42:30,880 --> 00:42:35,119
it's not really detailed and

1082
00:42:35,119 --> 00:42:37,359
and the last one is already done i mean

1083
00:42:37,359 --> 00:42:38,560
we we already see

1084
00:42:38,560 --> 00:42:40,800
now pretty clearly you'll find the draft

1085
00:42:40,800 --> 00:42:42,400
that depending if you're using srv

1086
00:42:42,400 --> 00:42:45,440
your svio basically implicitly the

1087
00:42:45,440 --> 00:42:46,640
egress

1088
00:42:46,640 --> 00:42:49,920
is a target when you're using

1089
00:42:49,920 --> 00:42:51,520
non-storing mode but it's not you have

1090
00:42:51,520 --> 00:42:53,040
to signal it in story mode

1091
00:42:53,040 --> 00:42:54,319
same thing for the ingress it's

1092
00:42:54,319 --> 00:42:55,760
signaling in storing mode it's not

1093
00:42:55,760 --> 00:42:59,200
signaling non-story

1094
00:42:59,200 --> 00:43:01,200
can you please write up those questions

1095
00:43:01,200 --> 00:43:02,640
on the mailing list

1096
00:43:02,640 --> 00:43:05,920
yep so you idiot

1097
00:43:05,920 --> 00:43:10,960
have a question sure yes india go ahead

1098
00:43:10,960 --> 00:43:14,880
yes thank you uh hi all thanks for the

1099
00:43:14,880 --> 00:43:15,520
great

1100
00:43:15,520 --> 00:43:18,800
presentation uh i'd like to ask if there

1101
00:43:18,800 --> 00:43:20,079
is any profile that

1102
00:43:20,079 --> 00:43:23,119
um i i was looking at

1103
00:43:23,119 --> 00:43:25,200
searching for a profile that we send the

1104
00:43:25,200 --> 00:43:26,560
pdao

1105
00:43:26,560 --> 00:43:30,000
to all of the intermediate hubs and not

1106
00:43:30,000 --> 00:43:32,880
only their ingress or address that would

1107
00:43:32,880 --> 00:43:34,079
have some benefits

1108
00:43:34,079 --> 00:43:35,760
obviously it would also have some

1109
00:43:35,760 --> 00:43:37,359
disadvantages like

1110
00:43:37,359 --> 00:43:41,599
scalability how do you analyze that

1111
00:43:41,599 --> 00:43:43,359
so though we have not designed for it i

1112
00:43:43,359 --> 00:43:46,240
mean yeah you're the first one asking

1113
00:43:46,240 --> 00:43:47,040
for this

1114
00:43:47,040 --> 00:43:49,040
in sixties when we looked at how we

1115
00:43:49,040 --> 00:43:50,640
could establish a path

1116
00:43:50,640 --> 00:43:52,319
uh we considered it we called it the

1117
00:43:52,319 --> 00:43:54,000
shower model compared to

1118
00:43:54,000 --> 00:43:57,440
the uh basically

1119
00:43:57,440 --> 00:44:00,720
usual usual voice call model that that

1120
00:44:00,720 --> 00:44:01,440
we used

1121
00:44:01,440 --> 00:44:04,960
for rsvp for instance um

1122
00:44:04,960 --> 00:44:07,280
but we we found that it was consuming if

1123
00:44:07,280 --> 00:44:08,480
you have a big deal dag

1124
00:44:08,480 --> 00:44:10,720
and the nodes are deep into uh doing

1125
00:44:10,720 --> 00:44:11,599
what you're asking

1126
00:44:11,599 --> 00:44:14,079
uh could be very costly and then uh if

1127
00:44:14,079 --> 00:44:15,280
any of those

1128
00:44:15,280 --> 00:44:17,200
doesn't work then you have to undo

1129
00:44:17,200 --> 00:44:18,480
everything and

1130
00:44:18,480 --> 00:44:20,480
so we thought it's a bit harder from the

1131
00:44:20,480 --> 00:44:22,800
root to control everything

1132
00:44:22,800 --> 00:44:25,119
when things work it's much easier to

1133
00:44:25,119 --> 00:44:26,720
just send to the egress and

1134
00:44:26,720 --> 00:44:28,720
let it forward to the ingress we did

1135
00:44:28,720 --> 00:44:30,000
that for economy

1136
00:44:30,000 --> 00:44:32,319
now if you you we can do this on the

1137
00:44:32,319 --> 00:44:34,240
mailing list if you want to justify

1138
00:44:34,240 --> 00:44:37,440
why in which cases it could be useful to

1139
00:44:37,440 --> 00:44:39,119
also define what you said

1140
00:44:39,119 --> 00:44:41,440
i'm not against it it's just that we

1141
00:44:41,440 --> 00:44:42,880
have been doing a lot of effort to

1142
00:44:42,880 --> 00:44:45,119
simplify the draft and now you're asking

1143
00:44:45,119 --> 00:44:51,839
more complexity again so

1144
00:44:56,240 --> 00:44:59,279
okay thank you very much

1145
00:45:00,480 --> 00:45:05,839
michael are you there

1146
00:45:08,880 --> 00:45:11,839
you have slides i don't need to project

1147
00:45:11,839 --> 00:45:12,720
yes i

1148
00:45:12,720 --> 00:45:14,720
yes i have this line here that you send

1149
00:45:14,720 --> 00:45:16,879
me

1150
00:45:17,200 --> 00:45:20,240
okay so uh yeah so status of this

1151
00:45:20,240 --> 00:45:20,800
document

1152
00:45:20,800 --> 00:45:23,440
um so we adopted it uh uh after sitting

1153
00:45:23,440 --> 00:45:25,440
around for a while in march of 2020

1154
00:45:25,440 --> 00:45:27,440
there were some revisions to it

1155
00:45:27,440 --> 00:45:30,480
um last year um

1156
00:45:30,480 --> 00:45:33,520
and then uh we have this document uh

1157
00:45:33,520 --> 00:45:37,440
from um human do i say is not right

1158
00:45:37,440 --> 00:45:40,720
name right i hope so um on the

1159
00:45:40,720 --> 00:45:44,240
uh this dodag metric for joining

1160
00:45:44,240 --> 00:45:48,400
based upon the size of the uh dodag

1161
00:45:48,400 --> 00:45:51,760
and so the suggestion in the january

1162
00:45:51,760 --> 00:45:53,599
virtual interim was that we merged this

1163
00:45:53,599 --> 00:45:55,280
into um

1164
00:45:55,280 --> 00:46:00,960
this document and so next slide please

1165
00:46:00,960 --> 00:46:04,079
so this is it merged those are a couple

1166
00:46:04,079 --> 00:46:06,480
sample of some of the diffs of course

1167
00:46:06,480 --> 00:46:07,839
you can go read them all

1168
00:46:07,839 --> 00:46:12,960
in greater detail next slide please

1169
00:46:12,960 --> 00:46:15,599
this is essentially the core of the

1170
00:46:15,599 --> 00:46:18,160
thing you'll see that there is a

1171
00:46:18,160 --> 00:46:22,079
new dodag size a 16-bit uh sorry it's a

1172
00:46:22,079 --> 00:46:23,119
16-bit

1173
00:46:23,119 --> 00:46:25,520
um number no it's not 16-bit it's a it's

1174
00:46:25,520 --> 00:46:26,480
a 16

1175
00:46:26,480 --> 00:46:29,839
bits with an exponent and a mantissa

1176
00:46:29,839 --> 00:46:32,910
um there and um

1177
00:46:32,910 --> 00:46:34,800
[Music]

1178
00:46:34,800 --> 00:46:37,359
that's essentially that gives us the the

1179
00:46:37,359 --> 00:46:37,920
size

1180
00:46:37,920 --> 00:46:40,480
value um and then there has been some

1181
00:46:40,480 --> 00:46:41,839
discussion i'm sorry i didn't write a

1182
00:46:41,839 --> 00:46:42,720
point about this

1183
00:46:42,720 --> 00:46:45,119
between pascal and newman and some

1184
00:46:45,119 --> 00:46:46,480
others about

1185
00:46:46,480 --> 00:46:49,839
um exactly what are we measuring and

1186
00:46:49,839 --> 00:46:52,560
um with pascal suggesting that the thing

1187
00:46:52,560 --> 00:46:54,560
that we actually can know about

1188
00:46:54,560 --> 00:46:57,920
in the case of um

1189
00:46:57,920 --> 00:47:00,000
particularly non-storing mode the root

1190
00:47:00,000 --> 00:47:02,720
knows the number of roots that he has

1191
00:47:02,720 --> 00:47:04,560
not necessarily the number of nodes that

1192
00:47:04,560 --> 00:47:06,480
there are um

1193
00:47:06,480 --> 00:47:10,400
i'm found at difficulty to figure out

1194
00:47:10,400 --> 00:47:13,200
are there situations where we have more

1195
00:47:13,200 --> 00:47:14,960
nodes and we have roots for

1196
00:47:14,960 --> 00:47:18,240
for them or if we have uh

1197
00:47:18,240 --> 00:47:20,400
fewer roots than we have sorry if we

1198
00:47:20,400 --> 00:47:21,280
have

1199
00:47:21,280 --> 00:47:23,920
more roots than we have nodes um so when

1200
00:47:23,920 --> 00:47:25,280
would those numbers not be

1201
00:47:25,280 --> 00:47:28,480
uh the same and i don't have an answer

1202
00:47:28,480 --> 00:47:30,240
to that question and pascal probably

1203
00:47:30,240 --> 00:47:30,800
answered

1204
00:47:30,800 --> 00:47:32,319
in the queue just give me a moment

1205
00:47:32,319 --> 00:47:34,079
pascal

1206
00:47:34,079 --> 00:47:36,559
and the other side of the discussion is

1207
00:47:36,559 --> 00:47:37,599
i think

1208
00:47:37,599 --> 00:47:40,079
do we have any concept of what we would

1209
00:47:40,079 --> 00:47:41,680
do in storing mode

1210
00:47:41,680 --> 00:47:43,839
and the answer may be that we don't have

1211
00:47:43,839 --> 00:47:45,680
any idea how to measure that

1212
00:47:45,680 --> 00:47:47,440
unless we have some other telemetry go

1213
00:47:47,440 --> 00:47:52,480
ahead pascal

1214
00:47:52,480 --> 00:47:55,359
go ahead pascal

1215
00:48:01,359 --> 00:48:03,520
okay you want it to say something but

1216
00:48:03,520 --> 00:48:04,880
your hands still up

1217
00:48:04,880 --> 00:48:08,000
next slide maybe we lost him

1218
00:48:08,000 --> 00:48:09,599
i'm sorry i was muted when i thought i

1219
00:48:09,599 --> 00:48:11,200
was not yeah

1220
00:48:11,200 --> 00:48:14,559
is it okay now yeah go ahead okay

1221
00:48:14,559 --> 00:48:16,240
so i was saying hey first thing is

1222
00:48:16,240 --> 00:48:18,079
storing mode storing mode the only thing

1223
00:48:18,079 --> 00:48:19,359
you know is the number of final

1224
00:48:19,359 --> 00:48:20,240
destinations

1225
00:48:20,240 --> 00:48:22,400
and the number of children that you have

1226
00:48:22,400 --> 00:48:23,599
so the root will

1227
00:48:23,599 --> 00:48:25,760
only knows number of final destinations

1228
00:48:25,760 --> 00:48:27,920
now

1229
00:48:28,400 --> 00:48:30,480
you mean the the addresses that are

1230
00:48:30,480 --> 00:48:32,839
being injected in daos at this moment of

1231
00:48:32,839 --> 00:48:34,480
time

1232
00:48:34,480 --> 00:48:38,079
so so right but how many routes

1233
00:48:38,640 --> 00:48:40,400
talking stories oh i see yes yes of

1234
00:48:40,400 --> 00:48:41,760
course yes of course because we get

1235
00:48:41,760 --> 00:48:44,319
we get the we get all of them summary as

1236
00:48:44,319 --> 00:48:45,359
a summary up to the

1237
00:48:45,359 --> 00:48:46,880
exactly that's right so the only thing

1238
00:48:46,880 --> 00:48:48,559
you see is number of addresses so it

1239
00:48:48,559 --> 00:48:50,000
might be that this node

1240
00:48:50,000 --> 00:48:51,839
is slipping doesn't need to contact the

1241
00:48:51,839 --> 00:48:53,359
network for two hours

1242
00:48:53,359 --> 00:48:55,200
and decided not to send a dowel he will

1243
00:48:55,200 --> 00:48:56,640
send the dowel in two hours when he

1244
00:48:56,640 --> 00:48:58,240
wants to be reachable in this case you

1245
00:48:58,240 --> 00:48:59,680
don't have an entry for him but he's

1246
00:48:59,680 --> 00:49:00,880
there

1247
00:49:00,880 --> 00:49:03,200
yeah and the opposite case is this node

1248
00:49:03,200 --> 00:49:04,640
which wants to have two addresses for

1249
00:49:04,640 --> 00:49:05,520
its own needs

1250
00:49:05,520 --> 00:49:06,720
i don't know why maybe one for

1251
00:49:06,720 --> 00:49:09,280
management one for other purposes

1252
00:49:09,280 --> 00:49:12,079
and having two addresses two entries in

1253
00:49:12,079 --> 00:49:12,880
in the

1254
00:49:12,880 --> 00:49:15,280
routing table but a single node so it's

1255
00:49:15,280 --> 00:49:16,640
just two examples where

1256
00:49:16,640 --> 00:49:18,640
uh the number of routes doesn't match

1257
00:49:18,640 --> 00:49:20,319
the number of nodes

1258
00:49:20,319 --> 00:49:23,200
um now in storing in non-storing mode

1259
00:49:23,200 --> 00:49:24,960
you have a little bit more information

1260
00:49:24,960 --> 00:49:27,280
at least you know the number of parents

1261
00:49:27,280 --> 00:49:29,040
but at the last half you still don't

1262
00:49:29,040 --> 00:49:31,040
know what's going on

1263
00:49:31,040 --> 00:49:33,760
yeah so it seems reasonable that you

1264
00:49:33,760 --> 00:49:35,200
know this is an estimate

1265
00:49:35,200 --> 00:49:38,800
and um um i have a feeling based upon

1266
00:49:38,800 --> 00:49:39,680
the

1267
00:49:39,680 --> 00:49:42,559
uh and based upon the discussion that we

1268
00:49:42,559 --> 00:49:43,040
had

1269
00:49:43,040 --> 00:49:46,319
around um uh

1270
00:49:46,319 --> 00:49:49,119
the six tisch draft that is related to

1271
00:49:49,119 --> 00:49:49,920
this

1272
00:49:49,920 --> 00:49:52,800
um that there that there may be some

1273
00:49:52,800 --> 00:49:54,640
desire to explain what it is we're gonna

1274
00:49:54,640 --> 00:49:56,160
do with these numbers down

1275
00:49:56,160 --> 00:49:59,359
down the down the tree um

1276
00:49:59,359 --> 00:50:02,720
and um some of this is a

1277
00:50:02,720 --> 00:50:05,040
a little bit of of we want the

1278
00:50:05,040 --> 00:50:06,559
standardized containers with the

1279
00:50:06,559 --> 00:50:08,079
standardized meanings but we don't

1280
00:50:08,079 --> 00:50:08,800
actually know

1281
00:50:08,800 --> 00:50:11,119
necessarily what we're going to do with

1282
00:50:11,119 --> 00:50:12,720
them precisely until people do some

1283
00:50:12,720 --> 00:50:14,000
experimenting

1284
00:50:14,000 --> 00:50:16,319
um and i don't know how to capture that

1285
00:50:16,319 --> 00:50:18,240
intelligently into the draft

1286
00:50:18,240 --> 00:50:19,440
uh maybe the whole thing should be

1287
00:50:19,440 --> 00:50:20,960
marked experimental maybe that's the

1288
00:50:20,960 --> 00:50:21,920
right answer

1289
00:50:21,920 --> 00:50:24,720
um but anyway at this point i i think

1290
00:50:24,720 --> 00:50:27,760
this is a a welcome and simple change

1291
00:50:27,760 --> 00:50:30,800
um and we should just proceed with it

1292
00:50:30,800 --> 00:50:32,720
um and that's about it i think that's

1293
00:50:32,720 --> 00:50:34,240
the last slide you know

1294
00:50:34,240 --> 00:50:37,920
is it okay yeah uh

1295
00:50:37,920 --> 00:50:40,319
you have two minutes more michael is

1296
00:50:40,319 --> 00:50:41,920
there another slide there's no new

1297
00:50:41,920 --> 00:50:43,440
slide yeah questions that was the only

1298
00:50:43,440 --> 00:50:45,599
question um yeah at this point i think

1299
00:50:45,599 --> 00:50:46,960
we should just we should just

1300
00:50:46,960 --> 00:50:50,319
proceed to uh reviews and publications

1301
00:50:50,319 --> 00:50:53,200
and um i would love to have and figure

1302
00:50:53,200 --> 00:50:54,559
out the question of

1303
00:50:54,559 --> 00:50:57,040
do we have to specify the semantics of

1304
00:50:57,040 --> 00:50:58,800
what you do with all of this

1305
00:50:58,800 --> 00:51:02,640
um or not um and um

1306
00:51:02,640 --> 00:51:04,480
if we do then we're gonna have to have a

1307
00:51:04,480 --> 00:51:06,319
longer conversation and i think that we

1308
00:51:06,319 --> 00:51:06,960
need to

1309
00:51:06,960 --> 00:51:09,200
have some implementation experience with

1310
00:51:09,200 --> 00:51:11,759
this first

1311
00:51:12,319 --> 00:51:13,680
okay great we can take that to the

1312
00:51:13,680 --> 00:51:15,440
mailing list

1313
00:51:15,440 --> 00:51:17,839
thank you very much okay pascal you have

1314
00:51:17,839 --> 00:51:19,040
one minute to

1315
00:51:19,040 --> 00:51:21,760
for questions yeah uh the question

1316
00:51:21,760 --> 00:51:22,960
though it's not really a question it's

1317
00:51:22,960 --> 00:51:23,680
just

1318
00:51:23,680 --> 00:51:26,000
uh basically there is the wise son you

1319
00:51:26,000 --> 00:51:27,520
know why son is kind of important for

1320
00:51:27,520 --> 00:51:28,880
ripple they have deployed millions of

1321
00:51:28,880 --> 00:51:30,319
ripple nodes

1322
00:51:30,319 --> 00:51:34,160
and um they they needed this information

1323
00:51:34,160 --> 00:51:35,920
of having a rough idea of the size of

1324
00:51:35,920 --> 00:51:37,040
the deodag

1325
00:51:37,040 --> 00:51:38,880
in that case it's one address per node

1326
00:51:38,880 --> 00:51:40,640
blah blah blah so then they actually

1327
00:51:40,640 --> 00:51:41,119
match

1328
00:51:41,119 --> 00:51:44,079
us intuitively michael does as well the

1329
00:51:44,079 --> 00:51:46,160
number of rods with the number of nodes

1330
00:51:46,160 --> 00:51:48,000
and they they needed this to balance

1331
00:51:48,000 --> 00:51:50,400
geodex so they already are using this

1332
00:51:50,400 --> 00:51:52,000
information to if you have five

1333
00:51:52,000 --> 00:51:53,760
geodesics you want them to have roughly

1334
00:51:53,760 --> 00:51:55,040
the same size

1335
00:51:55,040 --> 00:51:56,640
and so that that's an important thing

1336
00:51:56,640 --> 00:51:59,040
that that they they wanted to have

1337
00:51:59,040 --> 00:52:00,880
so it's it's very cool that we actually

1338
00:52:00,880 --> 00:52:03,040
giving that to them

1339
00:52:03,040 --> 00:52:04,880
okay okay so that would be great to hear

1340
00:52:04,880 --> 00:52:06,800
uh i guess directly from my son about

1341
00:52:06,800 --> 00:52:07,440
that

1342
00:52:07,440 --> 00:52:10,880
um and um i know that's your

1343
00:52:10,880 --> 00:52:13,200
cisco has a lot of have connection but

1344
00:52:13,200 --> 00:52:14,480
it'd be great to hear

1345
00:52:14,480 --> 00:52:18,000
from some other people on that

1346
00:52:18,000 --> 00:52:21,040
guys thank you very much michael uh raun

1347
00:52:21,040 --> 00:52:24,319
please go ahead i hope

1348
00:52:24,319 --> 00:52:27,680
uh everyone can hear me okay

1349
00:52:27,680 --> 00:52:30,480
yeah i've got a status for two drafts

1350
00:52:30,480 --> 00:52:32,400
one is the capabilities draft and other

1351
00:52:32,400 --> 00:52:34,319
is the mopex draft

1352
00:52:34,319 --> 00:52:37,599
for the capabilities the there had been

1353
00:52:37,599 --> 00:52:37,839
an

1354
00:52:37,839 --> 00:52:40,720
update before the last winterim

1355
00:52:40,720 --> 00:52:42,640
primarily based on dominic's feedback

1356
00:52:42,640 --> 00:52:43,599
extensive

1357
00:52:43,599 --> 00:52:45,680
review done by dominic thank you atomic

1358
00:52:45,680 --> 00:52:46,720
but after that

1359
00:52:46,720 --> 00:52:49,280
there has been no changes i would like

1360
00:52:49,280 --> 00:52:51,280
to summarize what the document does here

1361
00:52:51,280 --> 00:52:54,480
uh can you go to the previous slide pcr

1362
00:52:54,480 --> 00:52:56,559
so it basically talks about the

1363
00:52:56,559 --> 00:52:58,319
capability options format

1364
00:52:58,319 --> 00:53:00,960
so capabilities is something that a node

1365
00:53:00,960 --> 00:53:02,079
might possess

1366
00:53:02,079 --> 00:53:04,800
and might want to handshake with other

1367
00:53:04,800 --> 00:53:05,680
other nodes

1368
00:53:05,680 --> 00:53:06,960
a node might want to know some of the

1369
00:53:06,960 --> 00:53:08,160
capabilities for the other nodes

1370
00:53:08,160 --> 00:53:10,240
adjoining nodes or nodes

1371
00:53:10,240 --> 00:53:13,200
not necessarily at joining nodes but any

1372
00:53:13,200 --> 00:53:14,559
other node a route might want to know

1373
00:53:14,559 --> 00:53:16,240
specific capabilities of a newly joined

1374
00:53:16,240 --> 00:53:17,119
node

1375
00:53:17,119 --> 00:53:19,359
you know so all these all these use

1376
00:53:19,359 --> 00:53:21,520
cases are covered by this document

1377
00:53:21,520 --> 00:53:23,520
there are two specific capabilities

1378
00:53:23,520 --> 00:53:25,119
which are instantiated

1379
00:53:25,119 --> 00:53:26,559
as part of the document one is the

1380
00:53:26,559 --> 00:53:28,480
capability indicators flags

1381
00:53:28,480 --> 00:53:31,760
uh these are single beat uh single bit

1382
00:53:31,760 --> 00:53:33,920
capabilities uh one of the capabilities

1383
00:53:33,920 --> 00:53:35,280
which is already defined is

1384
00:53:35,280 --> 00:53:37,359
about six language whether the node

1385
00:53:37,359 --> 00:53:38,480
supports six large

1386
00:53:38,480 --> 00:53:41,520
compression or not the second

1387
00:53:41,520 --> 00:53:43,359
capability is is a routing resource

1388
00:53:43,359 --> 00:53:45,040
capability which basically tells you how

1389
00:53:45,040 --> 00:53:46,720
much of the routing table size you have

1390
00:53:46,720 --> 00:53:49,680
and how much of it is already used

1391
00:53:49,680 --> 00:53:52,000
and then we have query and response

1392
00:53:52,000 --> 00:53:53,280
signal which came up later in the

1393
00:53:53,280 --> 00:53:54,839
document uh

1394
00:53:54,839 --> 00:53:57,920
post the working group feedback

1395
00:53:57,920 --> 00:54:00,400
and there are guidelines for defining

1396
00:54:00,400 --> 00:54:01,520
new capabilities so

1397
00:54:01,520 --> 00:54:04,400
there are certain flags uh in the

1398
00:54:04,400 --> 00:54:06,240
capabilities options and

1399
00:54:06,240 --> 00:54:08,160
how one should be defining those

1400
00:54:08,160 --> 00:54:09,760
products or using those flags has been

1401
00:54:09,760 --> 00:54:11,200
defined in the

1402
00:54:11,200 --> 00:54:13,119
in the document there's only one one

1403
00:54:13,119 --> 00:54:15,680
important must that i need to

1404
00:54:15,680 --> 00:54:16,880
bring to the notice of this working

1405
00:54:16,880 --> 00:54:19,920
group it's that the capabilities

1406
00:54:19,920 --> 00:54:21,920
will be mandatory in the world if the

1407
00:54:21,920 --> 00:54:24,240
network uses more packs

1408
00:54:24,240 --> 00:54:27,920
essentially mop greater than or equal to

1409
00:54:27,920 --> 00:54:30,240
seven

1410
00:54:30,480 --> 00:54:34,480
next slide piece and this gives you a

1411
00:54:34,480 --> 00:54:35,920
very high level of

1412
00:54:35,920 --> 00:54:38,559
view of the messaging format we have a

1413
00:54:38,559 --> 00:54:40,000
new capabilities options

1414
00:54:40,000 --> 00:54:43,520
and then there's a there are tlps

1415
00:54:43,520 --> 00:54:47,119
nested tlvs uh the jic flags

1416
00:54:47,119 --> 00:54:48,799
those are the flags which are actually

1417
00:54:48,799 --> 00:54:53,200
defined by the mopx

1418
00:54:53,200 --> 00:54:56,480
draft and as i had mentioned before that

1419
00:54:56,480 --> 00:54:58,240
there is capability indicators the two

1420
00:54:58,240 --> 00:54:59,920
capabilities which are already defined

1421
00:54:59,920 --> 00:55:01,359
one is the capability indicators and the

1422
00:55:01,359 --> 00:55:02,000
other is the

1423
00:55:02,000 --> 00:55:05,680
optimal source and then there

1424
00:55:05,680 --> 00:55:08,559
there are uh there is a way for the

1425
00:55:08,559 --> 00:55:10,559
capability query and response model

1426
00:55:10,559 --> 00:55:11,839
there is a way to

1427
00:55:11,839 --> 00:55:14,960
request a capability set or uh

1428
00:55:14,960 --> 00:55:16,799
you know send the response for that

1429
00:55:16,799 --> 00:55:18,400
particular capability set and there are

1430
00:55:18,400 --> 00:55:21,359
several scenarios so that's the only

1431
00:55:21,359 --> 00:55:22,240
complicated

1432
00:55:22,240 --> 00:55:24,559
piece i would say in the whole draft but

1433
00:55:24,559 --> 00:55:26,079
otherwise it's a pretty straightforward

1434
00:55:26,079 --> 00:55:27,040
uh

1435
00:55:27,040 --> 00:55:31,279
read it i should say next slide please

1436
00:55:31,839 --> 00:55:34,480
and here i'm giving some details about

1437
00:55:34,480 --> 00:55:35,040
how the

1438
00:55:35,040 --> 00:55:37,599
query and response model works uh

1439
00:55:37,599 --> 00:55:38,960
basically

1440
00:55:38,960 --> 00:55:40,799
the primary challenge is you know you

1441
00:55:40,799 --> 00:55:43,839
might have capabilities sent across

1442
00:55:43,839 --> 00:55:45,520
you know multiple messages is it

1443
00:55:45,520 --> 00:55:47,280
possible so if you're sending back the

1444
00:55:47,280 --> 00:55:48,880
responses saying i have all these

1445
00:55:48,880 --> 00:55:50,559
capabilities

1446
00:55:50,559 --> 00:55:52,720
it might so happen over a period of time

1447
00:55:52,720 --> 00:55:54,720
that this capability message

1448
00:55:54,720 --> 00:55:57,119
might exceed the entity size and how to

1449
00:55:57,119 --> 00:55:58,400
handle that so that is one of the

1450
00:55:58,400 --> 00:55:59,760
primary challenge that has been handled

1451
00:55:59,760 --> 00:56:00,960
in the draft i would

1452
00:56:00,960 --> 00:56:02,960
really like to see the feedback from the

1453
00:56:02,960 --> 00:56:04,640
working group on how the handling

1454
00:56:04,640 --> 00:56:07,839
will that handling be enough

1455
00:56:07,839 --> 00:56:10,558
next slide please

1456
00:56:11,359 --> 00:56:13,760
and that's pretty much about the

1457
00:56:13,760 --> 00:56:15,520
capability status

1458
00:56:15,520 --> 00:56:18,079
now i'm going to talk about mopex status

1459
00:56:18,079 --> 00:56:19,680
well the document what it does is

1460
00:56:19,680 --> 00:56:21,200
this is a very straightforward document

1461
00:56:21,200 --> 00:56:23,920
in the sense that it doesn't have any

1462
00:56:23,920 --> 00:56:27,040
uh any new messaging involved it's uh

1463
00:56:27,040 --> 00:56:30,000
it defines some opex the base mop is

1464
00:56:30,000 --> 00:56:31,280
equal to 7

1465
00:56:31,280 --> 00:56:33,359
then you basically use the mop from the

1466
00:56:33,359 --> 00:56:35,599
extended mopex option control option

1467
00:56:35,599 --> 00:56:38,799
that's that's the core of the document

1468
00:56:38,799 --> 00:56:41,839
it explains various conditions and it

1469
00:56:41,839 --> 00:56:44,319
basically tells you know what happens if

1470
00:56:44,319 --> 00:56:46,000
you know base mob is so and if the

1471
00:56:46,000 --> 00:56:47,280
extent nmop is

1472
00:56:47,280 --> 00:56:49,520
present or if the base move is seven and

1473
00:56:49,520 --> 00:56:51,680
what happens if the expected if the m op

1474
00:56:51,680 --> 00:56:53,280
x is not present how to handle all the

1475
00:56:53,280 --> 00:56:54,480
scenarios

1476
00:56:54,480 --> 00:56:58,079
uh in the past itf session one of the

1477
00:56:58,079 --> 00:56:59,680
point that was discussed was

1478
00:56:59,680 --> 00:57:02,880
you know uh there are new control

1479
00:57:02,880 --> 00:57:04,960
options being added

1480
00:57:04,960 --> 00:57:08,079
by a lot of new drafts out there

1481
00:57:08,079 --> 00:57:11,680
and is it possible for us to make sure

1482
00:57:11,680 --> 00:57:13,359
that any new control options that are

1483
00:57:13,359 --> 00:57:14,960
getting added in the future

1484
00:57:14,960 --> 00:57:18,079
could be backward compatible can we

1485
00:57:18,079 --> 00:57:19,920
handle the backup compatibility

1486
00:57:19,920 --> 00:57:21,760
issues in a graceful manner and that's

1487
00:57:21,760 --> 00:57:23,200
where the third point comes into picture

1488
00:57:23,200 --> 00:57:24,000
which is

1489
00:57:24,000 --> 00:57:26,480
extending the rpl control options which

1490
00:57:26,480 --> 00:57:28,000
we decided to merge in this particular

1491
00:57:28,000 --> 00:57:29,680
document

1492
00:57:29,680 --> 00:57:31,599
and i'll talk about that particular

1493
00:57:31,599 --> 00:57:33,440
point in detail in the next slides next

1494
00:57:33,440 --> 00:57:35,920
slide please

1495
00:57:36,319 --> 00:57:39,119
so extending the rpl control options we

1496
00:57:39,119 --> 00:57:41,119
needed few bits

1497
00:57:41,119 --> 00:57:43,119
currently we have an option type if the

1498
00:57:43,119 --> 00:57:44,880
first bit of that option type is set

1499
00:57:44,880 --> 00:57:46,400
which means essentially it's an extended

1500
00:57:46,400 --> 00:57:47,119
control

1501
00:57:47,119 --> 00:57:49,520
control option if it's an extended

1502
00:57:49,520 --> 00:57:51,119
control options there are additionally

1503
00:57:51,119 --> 00:57:53,280
optional flags

1504
00:57:53,280 --> 00:57:54,960
which could be set and in the optional

1505
00:57:54,960 --> 00:57:56,640
flags you could see that three flags are

1506
00:57:56,640 --> 00:57:57,520
already defined

1507
00:57:57,520 --> 00:58:01,760
j ic so basically the problem is

1508
00:58:01,760 --> 00:58:05,359
if you get an unknown rpm control option

1509
00:58:05,359 --> 00:58:07,040
how would you handle that how how should

1510
00:58:07,040 --> 00:58:09,280
the node handle it uh currently there is

1511
00:58:09,280 --> 00:58:09,680
no

1512
00:58:09,680 --> 00:58:13,119
uh you know there are there are three

1513
00:58:13,119 --> 00:58:14,640
possibilities on how to handle it and

1514
00:58:14,640 --> 00:58:16,079
basically the three bits

1515
00:58:16,079 --> 00:58:18,720
take into consideration that the first j

1516
00:58:18,720 --> 00:58:19,680
bit is

1517
00:58:19,680 --> 00:58:22,079
if the j bit is uh set it means that if

1518
00:58:22,079 --> 00:58:23,760
you don't understand the option

1519
00:58:23,760 --> 00:58:27,040
join only as a 6ln

1520
00:58:27,359 --> 00:58:29,680
if the second bit is ignore bit which

1521
00:58:29,680 --> 00:58:31,040
means that if you don't understand this

1522
00:58:31,040 --> 00:58:32,160
control option

1523
00:58:32,160 --> 00:58:33,920
drop the whole message ignore the whole

1524
00:58:33,920 --> 00:58:35,839
message

1525
00:58:35,839 --> 00:58:38,880
c bit is a copy bit which is uh

1526
00:58:38,880 --> 00:58:41,839
which is uh you know you copy the

1527
00:58:41,839 --> 00:58:43,760
control options as it is in the

1528
00:58:43,760 --> 00:58:46,240
in the in the message and let the

1529
00:58:46,240 --> 00:58:48,720
upstream or downstream note design

1530
00:58:48,720 --> 00:58:51,680
you just act as a relay uh so this is

1531
00:58:51,680 --> 00:58:53,839
very much similar to uh cast and gave a

1532
00:58:53,839 --> 00:58:54,960
feedback and i had it

1533
00:58:54,960 --> 00:58:58,559
look at uh you know coupe has similar

1534
00:58:58,559 --> 00:59:01,839
uh co-op has similar uh

1535
00:59:01,839 --> 00:59:03,280
bits and i had a look and you know i

1536
00:59:03,280 --> 00:59:05,520
tried to take some inspiration from

1537
00:59:05,520 --> 00:59:06,799
those bits as well

1538
00:59:06,799 --> 00:59:08,720
oh i i think pascal has a question is

1539
00:59:08,720 --> 00:59:09,839
the hand raised

1540
00:59:09,839 --> 00:59:12,640
i can it's a very quick one thank you

1541
00:59:12,640 --> 00:59:14,160
for the presentation

1542
00:59:14,160 --> 00:59:16,559
um the and hope everything is good with

1543
00:59:16,559 --> 00:59:18,480
you i'm just thinking hey

1544
00:59:18,480 --> 00:59:20,880
um i already had the problem of thinking

1545
00:59:20,880 --> 00:59:21,599
about it but

1546
00:59:21,599 --> 00:59:23,440
that could be a cases where if this guy

1547
00:59:23,440 --> 00:59:24,880
does not support the option it should

1548
00:59:24,880 --> 00:59:25,760
not join at

1549
00:59:25,760 --> 00:59:27,280
all and since you have four

1550
00:59:27,280 --> 00:59:28,880
possibilities and you're only

1551
00:59:28,880 --> 00:59:31,440
using three i was wondering if you know

1552
00:59:31,440 --> 00:59:32,000
you could play

1553
00:59:32,000 --> 00:59:35,280
with the g and c bit when when j is one

1554
00:59:35,280 --> 00:59:38,480
uh with based on the c bit you could say

1555
00:59:38,480 --> 00:59:41,200
or you you join us a leaf or you don't

1556
00:59:41,200 --> 00:59:41,920
join at

1557
00:59:41,920 --> 00:59:43,920
all because could it be that for

1558
00:59:43,920 --> 00:59:45,359
instance

1559
00:59:45,359 --> 00:59:47,599
the bit says you must compress just an

1560
00:59:47,599 --> 00:59:48,720
example

1561
00:59:48,720 --> 00:59:50,880
you must compress and if the node

1562
00:59:50,880 --> 00:59:52,880
doesn't know to compress

1563
00:59:52,880 --> 00:59:54,880
um there should be a way to say you

1564
00:59:54,880 --> 00:59:56,079
don't join at all

1565
00:59:56,079 --> 00:59:58,160
so here it's not that it's understanding

1566
00:59:58,160 --> 00:59:59,520
an option but

1567
00:59:59,520 --> 01:00:02,000
um if the option could be to say to

1568
01:00:02,000 --> 01:00:03,920
compress actually i don't know

1569
01:00:03,920 --> 01:00:05,599
it's not the right example but you see

1570
01:00:05,599 --> 01:00:07,200
the point maybe there's a case where you

1571
01:00:07,200 --> 01:00:08,400
don't want to join

1572
01:00:08,400 --> 01:00:11,040
and since your c is not reused why don't

1573
01:00:11,040 --> 01:00:12,799
we say a

1574
01:00:12,799 --> 01:00:15,920
c j one c zero you can join us

1575
01:00:15,920 --> 01:00:18,480
j one c one you don't join at all sorry

1576
01:00:18,480 --> 01:00:22,079
but you don't speak the right language

1577
01:00:22,720 --> 01:00:25,440
okay uh that makes sense i think i think

1578
01:00:25,440 --> 01:00:27,680
we should

1579
01:00:27,680 --> 01:00:30,240
let me think more about this uh pascal

1580
01:00:30,240 --> 01:00:32,000
point noted uh thank you very much for

1581
01:00:32,000 --> 01:00:34,799
the feedback uh

1582
01:00:35,359 --> 01:00:38,559
uh i have lost the slides can you hear

1583
01:00:38,559 --> 01:00:39,040
me

1584
01:00:39,040 --> 01:00:43,119
still okay i'm done with my presentation

1585
01:00:43,119 --> 01:00:46,880
uh just the next slide please uh uh

1586
01:00:46,880 --> 01:00:49,280
in this okay so there are no tickets

1587
01:00:49,280 --> 01:00:50,319
open by the way for

1588
01:00:50,319 --> 01:00:52,720
any capabilities or the mopex draft all

1589
01:00:52,720 --> 01:00:54,559
the tickets have been taken care of

1590
01:00:54,559 --> 01:00:56,960
you know before the last interim itself

1591
01:00:56,960 --> 01:00:58,720
i saw that you know unless you mentioned

1592
01:00:58,720 --> 01:00:59,280
in this

1593
01:00:59,280 --> 01:01:00,799
summary status before that the six

1594
01:01:00,799 --> 01:01:02,960
capability issues open i just verified

1595
01:01:02,960 --> 01:01:03,839
there are no

1596
01:01:03,839 --> 01:01:04,960
issues open in the context of

1597
01:01:04,960 --> 01:01:07,920
capabilities or mopeds all right

1598
01:01:07,920 --> 01:01:11,359
yeah so i i mean

1599
01:01:11,359 --> 01:01:14,240
especially for mob x there is no complex

1600
01:01:14,240 --> 01:01:15,440
handling involved

1601
01:01:15,440 --> 01:01:17,119
for capabilities there is a complex

1602
01:01:17,119 --> 01:01:18,640
handling involved because i mean some

1603
01:01:18,640 --> 01:01:20,000
sort of complex handling i would say

1604
01:01:20,000 --> 01:01:21,200
just because of the addition of new

1605
01:01:21,200 --> 01:01:22,079
messaging

1606
01:01:22,079 --> 01:01:23,920
mopex is basically a precursor for

1607
01:01:23,920 --> 01:01:25,440
capabilities because capabilities would

1608
01:01:25,440 --> 01:01:26,240
be enabled only

1609
01:01:26,240 --> 01:01:29,440
from if if mob x is supported

1610
01:01:29,440 --> 01:01:32,000
uh so basically what i'm trying to say

1611
01:01:32,000 --> 01:01:32,640
is

1612
01:01:32,640 --> 01:01:34,000
let's prioritize more pecs or

1613
01:01:34,000 --> 01:01:36,079
capabilities and

1614
01:01:36,079 --> 01:01:38,000
and if we can get more reviews for our

1615
01:01:38,000 --> 01:01:39,839
markets that would be great

1616
01:01:39,839 --> 01:01:42,559
uh yeah that would be great uh please

1617
01:01:42,559 --> 01:01:44,400
review this last version

1618
01:01:44,400 --> 01:01:46,319
of my bike so we can go proceed with the

1619
01:01:46,319 --> 01:01:48,799
last call

1620
01:01:51,040 --> 01:01:54,480
okay thank you thank you

1621
01:01:54,480 --> 01:01:58,559
yes thank you so

1622
01:01:58,559 --> 01:02:01,119
thank you very much we have uh one

1623
01:02:01,119 --> 01:02:01,680
minute

1624
01:02:01,680 --> 01:02:05,599
over the time but i think we have action

1625
01:02:05,599 --> 01:02:06,960
points that we are going to send to the

1626
01:02:06,960 --> 01:02:08,720
mainly list

1627
01:02:08,720 --> 01:02:10,880
so thank you very much to everyone uh

1628
01:02:10,880 --> 01:02:14,240
dominic you want to add something

1629
01:02:14,240 --> 01:02:17,599
well uh congratulations for achieving

1630
01:02:17,599 --> 01:02:18,559
here

1631
01:02:18,559 --> 01:02:21,200
you know unlocking these four uh drafts

1632
01:02:21,200 --> 01:02:23,039
that we are sitting

1633
01:02:23,039 --> 01:02:26,559
and i know that many people are going to

1634
01:02:26,559 --> 01:02:27,359
be happy

1635
01:02:27,359 --> 01:02:30,960
that uh c if we when c318 is out

1636
01:02:30,960 --> 01:02:33,440
and so that's a great achievement

1637
01:02:33,440 --> 01:02:35,280
congratulations to him

1638
01:02:35,280 --> 01:02:37,839
and then we can we can focus on the next

1639
01:02:37,839 --> 01:02:40,480
drafts and we have a lot of work

1640
01:02:40,480 --> 01:02:42,799
ahead of us that can now proceed so

1641
01:02:42,799 --> 01:02:44,240
that's good news

1642
01:02:44,240 --> 01:02:47,599
yes we mentioned briefly that

1643
01:02:47,599 --> 01:02:50,640
we have indeed have this rfc

1644
01:02:50,640 --> 01:02:54,720
50 a 5550 base

1645
01:02:54,720 --> 01:02:56,880
so take a look and comment so we are

1646
01:02:56,880 --> 01:02:59,440
going to start working on that

1647
01:02:59,440 --> 01:03:02,720
okay uh thank you very much paul and

1648
01:03:02,720 --> 01:03:05,439
have a nice day

1649
01:03:06,559 --> 01:03:10,319
thank you have a nice afternoon morning

1650
01:03:10,319 --> 01:03:11,839
wherever you are

1651
01:03:11,839 --> 01:03:17,839
yeah thank you bye-bye

1652
01:03:42,839 --> 01:03:45,839
so

