1
00:00:05,040 --> 00:00:06,000
they make me laugh

2
00:00:06,000 --> 00:00:08,640
every time

3
00:00:09,280 --> 00:00:13,040
you're on mute no there's no sound in

4
00:00:13,040 --> 00:00:15,280
space

5
00:00:15,280 --> 00:00:18,560
except in the movies anyway

6
00:00:18,560 --> 00:00:22,400
um so it's uh 1500 or

7
00:00:22,400 --> 00:00:26,880
1700 utc this is the dtn

8
00:00:26,880 --> 00:00:30,400
working group session and i think

9
00:00:30,400 --> 00:00:34,399
we should start so

10
00:00:34,800 --> 00:00:37,440
okay um i'm gonna have to jump to the

11
00:00:37,440 --> 00:00:38,960
slide deck so i can lose

12
00:00:38,960 --> 00:00:40,960
a picture there so you get to watch me

13
00:00:40,960 --> 00:00:42,840
staring at my

14
00:00:42,840 --> 00:00:45,840
screen so uh the agenda

15
00:00:45,840 --> 00:00:47,760
is published online as part of the

16
00:00:47,760 --> 00:00:50,320
meeting materials there's a url here

17
00:00:50,320 --> 00:00:52,399
guides for participants particularly

18
00:00:52,399 --> 00:00:53,840
relevant with

19
00:00:53,840 --> 00:00:56,079
this being an online session although

20
00:00:56,079 --> 00:00:57,600
given it's now thursday one would have

21
00:00:57,600 --> 00:00:59,120
hoped you would have participated in a

22
00:00:59,120 --> 00:01:00,320
few other things

23
00:01:00,320 --> 00:01:03,199
if you were attending all iedf week uh

24
00:01:03,199 --> 00:01:04,720
if you need any technical assistance

25
00:01:04,720 --> 00:01:07,520
there's a url there as well

26
00:01:07,520 --> 00:01:09,520
so this being an ietf working group

27
00:01:09,520 --> 00:01:11,280
meeting it is covered under the note

28
00:01:11,280 --> 00:01:12,159
well

29
00:01:12,159 --> 00:01:14,320
uh i am not going to go into a deep

30
00:01:14,320 --> 00:01:16,000
legal analysis of this document

31
00:01:16,000 --> 00:01:18,240
if this is your first ietf or this

32
00:01:18,240 --> 00:01:20,400
document and the concept of a notewell

33
00:01:20,400 --> 00:01:22,240
is a mystery to you

34
00:01:22,240 --> 00:01:24,159
you need to read it carefully because

35
00:01:24,159 --> 00:01:26,000
you are actively contributing

36
00:01:26,000 --> 00:01:28,400
during this meeting and there are

37
00:01:28,400 --> 00:01:30,240
ramifications to do with ipr

38
00:01:30,240 --> 00:01:32,880
disclosure associated with that i am not

39
00:01:32,880 --> 00:01:34,799
a lawyer but this document was written

40
00:01:34,799 --> 00:01:35,600
by lawyers

41
00:01:35,600 --> 00:01:38,079
go and read it if you have any queries

42
00:01:38,079 --> 00:01:39,840
uh type notewell into your favorite

43
00:01:39,840 --> 00:01:43,200
search engine and it'll find it

44
00:01:43,200 --> 00:01:47,840
so uh ed go ahead agenda

45
00:01:48,320 --> 00:01:50,560
uh certainly so the the working group

46
00:01:50,560 --> 00:01:52,560
meeting uh for the two hours that we

47
00:01:52,560 --> 00:01:54,079
have is essentially split

48
00:01:54,079 --> 00:01:57,360
into two parts uh the first part is our

49
00:01:57,360 --> 00:01:58,159
series of

50
00:01:58,159 --> 00:02:00,479
four presentations uh to talk about some

51
00:02:00,479 --> 00:02:02,159
of the work that is going on and in

52
00:02:02,159 --> 00:02:03,040
particular

53
00:02:03,040 --> 00:02:06,240
to have some some of the users in our

54
00:02:06,240 --> 00:02:07,119
community

55
00:02:07,119 --> 00:02:10,318
who are starting to deploy dtn uh either

56
00:02:10,318 --> 00:02:12,160
to talk about their deployments or to

57
00:02:12,160 --> 00:02:13,680
talk about the additional things they

58
00:02:13,680 --> 00:02:15,200
want to add in support of their

59
00:02:15,200 --> 00:02:16,160
deployments

60
00:02:16,160 --> 00:02:18,000
and then the second part of the meeting

61
00:02:18,000 --> 00:02:19,680
if you notice it says next steps for the

62
00:02:19,680 --> 00:02:21,200
working group and rechartering

63
00:02:21,200 --> 00:02:23,840
40 minutes we've allocated just sort of

64
00:02:23,840 --> 00:02:25,599
a large enough chunk of time

65
00:02:25,599 --> 00:02:27,680
to talk through uh all of the things

66
00:02:27,680 --> 00:02:28,640
that we

67
00:02:28,640 --> 00:02:30,720
uh think are candidates for the next set

68
00:02:30,720 --> 00:02:32,400
of working group charter items

69
00:02:32,400 --> 00:02:34,080
and then to talk a little bit about how

70
00:02:34,080 --> 00:02:35,680
we might prioritize those

71
00:02:35,680 --> 00:02:37,040
we can't do everything in the next

72
00:02:37,040 --> 00:02:39,040
recharter we need to make sure that we

73
00:02:39,040 --> 00:02:40,239
take on

74
00:02:40,239 --> 00:02:42,720
uh enough material to move the community

75
00:02:42,720 --> 00:02:43,440
forward

76
00:02:43,440 --> 00:02:45,760
but not so much material that it takes

77
00:02:45,760 --> 00:02:47,280
us years and years and years before we

78
00:02:47,280 --> 00:02:48,319
can start

79
00:02:48,319 --> 00:02:50,319
crossing things off the list and i think

80
00:02:50,319 --> 00:02:52,720
that that is a large and interesting and

81
00:02:52,720 --> 00:02:54,000
complex discussion

82
00:02:54,000 --> 00:02:55,599
that's going to take a fair bit of time

83
00:02:55,599 --> 00:02:57,120
so that is the second half of the

84
00:02:57,120 --> 00:02:58,239
meeting

85
00:02:58,239 --> 00:03:02,400
uh with with that uh i think we can

86
00:03:02,400 --> 00:03:03,920
go on to well what's the next slide is

87
00:03:03,920 --> 00:03:05,599
it administrative yeah

88
00:03:05,599 --> 00:03:06,879
it's administrative yeah sorry i should

89
00:03:06,879 --> 00:03:08,319
have probably put this before the agenda

90
00:03:08,319 --> 00:03:09,760
but i was shuffling slides around at the

91
00:03:09,760 --> 00:03:11,200
last minute

92
00:03:11,200 --> 00:03:14,640
um so adam's already put a post on the

93
00:03:14,640 --> 00:03:15,120
chat

94
00:03:15,120 --> 00:03:18,080
saying we're using kodi md it for note

95
00:03:18,080 --> 00:03:19,440
taking it's a collaborative

96
00:03:19,440 --> 00:03:21,280
platform so please all help to

97
00:03:21,280 --> 00:03:22,640
collaborate

98
00:03:22,640 --> 00:03:25,120
uh please hope to please all help to try

99
00:03:25,120 --> 00:03:26,640
and get accurate minutes and please

100
00:03:26,640 --> 00:03:28,480
don't type all over each other

101
00:03:28,480 --> 00:03:31,120
i had a different working group where

102
00:03:31,120 --> 00:03:32,319
the notes somehow

103
00:03:32,319 --> 00:03:34,480
failed to merge at all well and it ended

104
00:03:34,480 --> 00:03:35,760
up as gibberish but

105
00:03:35,760 --> 00:03:36,879
to be honest someone could have been

106
00:03:36,879 --> 00:03:38,319
typing gibberish to start with so a

107
00:03:38,319 --> 00:03:40,239
little bit of care it's not a bad system

108
00:03:40,239 --> 00:03:41,599
but

109
00:03:41,599 --> 00:03:43,920
we are global and latency can be a

110
00:03:43,920 --> 00:03:44,799
problem

111
00:03:44,799 --> 00:03:47,120
uh the mailing lists you probably are

112
00:03:47,120 --> 00:03:50,080
aware of if not they are recorded there

113
00:03:50,080 --> 00:03:52,080
uh what else have i got ah important

114
00:03:52,080 --> 00:03:53,280
last minute slide

115
00:03:53,280 --> 00:03:56,080
so there's been a change of personnel uh

116
00:03:56,080 --> 00:03:57,599
magnus westland has

117
00:03:57,599 --> 00:04:01,120
finished his term as rad so a massive

118
00:04:01,120 --> 00:04:02,239
thank you to magnus

119
00:04:02,239 --> 00:04:05,280
for uh helping get bpsec and bp

120
00:04:05,280 --> 00:04:09,439
base and tcpcl over the line

121
00:04:09,439 --> 00:04:14,560
and uh welcome to our new ad who is

122
00:04:15,120 --> 00:04:17,759
i hope i've pronounced that right uh i

123
00:04:17,759 --> 00:04:19,440
should be continue to refer to him as a

124
00:04:19,440 --> 00:04:20,880
head because i

125
00:04:20,880 --> 00:04:23,280
struggle with names because i'm an idiot

126
00:04:23,280 --> 00:04:24,320
and also

127
00:04:24,320 --> 00:04:27,120
a big thank you for our new working

128
00:04:27,120 --> 00:04:28,000
group secretary

129
00:04:28,000 --> 00:04:31,520
adam whitaker for basically deciding he

130
00:04:31,520 --> 00:04:32,960
would be happy to take

131
00:04:32,960 --> 00:04:34,960
extra notes and nobody's quite sure what

132
00:04:34,960 --> 00:04:37,840
a secretary does but you're very welcome

133
00:04:37,840 --> 00:04:40,880
um and

134
00:04:40,880 --> 00:04:43,360
with that ed you sort of covered the

135
00:04:43,360 --> 00:04:45,600
charter items but the key point

136
00:04:45,600 --> 00:04:48,639
is bp bis bp sec

137
00:04:48,639 --> 00:04:51,040
and tcpcl are now in the rfc editor

138
00:04:51,040 --> 00:04:53,360
queue this is a

139
00:04:53,360 --> 00:04:55,120
huge achievement well done everyone

140
00:04:55,120 --> 00:04:56,720
involved and a massive thank you to the

141
00:04:56,720 --> 00:04:58,000
author teams

142
00:04:58,000 --> 00:05:00,960
and also the isg reviewers and everyone

143
00:05:00,960 --> 00:05:02,320
discussing the fine points of the

144
00:05:02,320 --> 00:05:04,320
feedback we've done it it's taken a very

145
00:05:04,320 --> 00:05:06,880
long time

146
00:05:06,880 --> 00:05:08,880
but they are complicated things and i

147
00:05:08,880 --> 00:05:10,720
think the working group should be

148
00:05:10,720 --> 00:05:12,800
deserved deservedly proud of doing it

149
00:05:12,800 --> 00:05:15,680
and the authors particularly so as a

150
00:05:15,680 --> 00:05:17,199
follow-up to that the fourth document

151
00:05:17,199 --> 00:05:19,120
which is the bp sec default security

152
00:05:19,120 --> 00:05:20,320
context document

153
00:05:20,320 --> 00:05:22,960
has just been submitted to the iesg we

154
00:05:22,960 --> 00:05:25,120
are waiting for reviews we haven't had

155
00:05:25,120 --> 00:05:26,880
any feedback yet on that

156
00:05:26,880 --> 00:05:30,479
ad if i'm correct that's correct i think

157
00:05:30,479 --> 00:05:31,199
the next step

158
00:05:31,199 --> 00:05:33,680
is the ad review and uh we've not gotten

159
00:05:33,680 --> 00:05:34,960
feedback yet

160
00:05:34,960 --> 00:05:36,639
okay possibly the change in ads is going

161
00:05:36,639 --> 00:05:38,320
to slow that down and it's probably the

162
00:05:38,320 --> 00:05:40,000
head's first document to look at so

163
00:05:40,000 --> 00:05:42,160
he will undoubtedly have some questions

164
00:05:42,160 --> 00:05:43,360
um

165
00:05:43,360 --> 00:05:45,840
the looking at the charter items as they

166
00:05:45,840 --> 00:05:47,919
currently stand we have a charter item

167
00:05:47,919 --> 00:05:49,520
for custody

168
00:05:49,520 --> 00:05:51,759
uh which has sort of been superseded by

169
00:05:51,759 --> 00:05:54,080
the bundle in bundle encapsulation

170
00:05:54,080 --> 00:05:57,199
um procedures so uh

171
00:05:57,199 --> 00:06:00,000
tunneling is part of custody transfer um

172
00:06:00,000 --> 00:06:01,280
scott is going to say a few words about

173
00:06:01,280 --> 00:06:02,479
that in a minute

174
00:06:02,479 --> 00:06:06,319
and our intention is to roll that into

175
00:06:06,319 --> 00:06:08,560
any re-chartering so to clarify that

176
00:06:08,560 --> 00:06:10,160
we're not looking at custody transfer

177
00:06:10,160 --> 00:06:11,759
per se as a technology

178
00:06:11,759 --> 00:06:13,360
but probably rolling it into bundle in

179
00:06:13,360 --> 00:06:14,639
bundle if that seems the right

180
00:06:14,639 --> 00:06:17,120
technology

181
00:06:17,440 --> 00:06:19,360
and with that that's a repeat slide on

182
00:06:19,360 --> 00:06:20,960
the agenda

183
00:06:20,960 --> 00:06:24,319
if we have scott uh

184
00:06:24,319 --> 00:06:26,479
would you uh one thing i have a copy of

185
00:06:26,479 --> 00:06:28,160
all the slides you sent

186
00:06:28,160 --> 00:06:30,880
downloaded on my machine so if you have

187
00:06:30,880 --> 00:06:32,560
presentation issues i'm happier for

188
00:06:32,560 --> 00:06:33,919
everyone to present with their own

189
00:06:33,919 --> 00:06:34,800
slides

190
00:06:34,800 --> 00:06:36,720
but if there's a technology problem i

191
00:06:36,720 --> 00:06:38,400
can i can do backups

192
00:06:38,400 --> 00:06:42,080
so scott let me

193
00:06:42,080 --> 00:06:44,960
attempt to say yes to your request if

194
00:06:44,960 --> 00:06:46,880
you click the request to share slides

195
00:06:46,880 --> 00:06:50,639
i think i can click accept

196
00:06:50,639 --> 00:06:54,560
twice do you mean ask to share screen

197
00:06:54,560 --> 00:06:56,560
because i do not have the slides up

198
00:06:56,560 --> 00:06:59,039
oh in which case i will uh i will switch

199
00:06:59,039 --> 00:06:59,759
slides

200
00:06:59,759 --> 00:07:02,960
and i will put the slides up for

201
00:07:04,880 --> 00:07:09,199
you're slightly quiet

202
00:07:11,199 --> 00:07:14,000
i just lost

203
00:07:14,400 --> 00:07:18,159
rick um

204
00:07:19,840 --> 00:07:22,319
we'll see if he uh reconnects uh if not

205
00:07:22,319 --> 00:07:24,720
uh give me a moment and i can

206
00:07:24,720 --> 00:07:27,919
uh take over and and drive

207
00:07:27,919 --> 00:07:30,319
i muted myself for some unknown reason

208
00:07:30,319 --> 00:07:32,080
let me just

209
00:07:32,080 --> 00:07:34,560
find were you about to say that my audio

210
00:07:34,560 --> 00:07:35,440
was too

211
00:07:35,440 --> 00:07:37,919
quiet i was just about to say your audio

212
00:07:37,919 --> 00:07:39,520
seems a little quiet to me but that

213
00:07:39,520 --> 00:07:44,240
might have been my audio failing

214
00:07:44,240 --> 00:07:46,960
uh i can i try putting in a headset that

215
00:07:46,960 --> 00:07:48,160
may be better but

216
00:07:48,160 --> 00:07:50,080
uh i thought this would be better

217
00:07:50,080 --> 00:07:51,919
coordinated i don't know

218
00:07:51,919 --> 00:07:59,840
it's it's absolutely fine um

219
00:08:01,919 --> 00:08:05,360
why can i no

220
00:08:05,360 --> 00:08:07,120
let me just find these i keep opening

221
00:08:07,120 --> 00:08:09,759
these slides and not

222
00:08:09,759 --> 00:08:12,240
ah you've named them solar system

223
00:08:12,240 --> 00:08:14,400
internet that's why i keep

224
00:08:14,400 --> 00:08:17,440
there we go can you see those oh sorry

225
00:08:17,440 --> 00:08:19,680
no no it's all right the tab i was just

226
00:08:19,680 --> 00:08:21,520
staring at a tab entitled solar system

227
00:08:21,520 --> 00:08:22,639
internet and wondering

228
00:08:22,639 --> 00:08:24,720
that wasn't scott's slides anyway moving

229
00:08:24,720 --> 00:08:27,919
on um sorry

230
00:08:28,560 --> 00:08:31,680
uh okay so uh let me uh press on with

231
00:08:31,680 --> 00:08:32,240
this

232
00:08:32,240 --> 00:08:34,000
and the reason that the date on this is

233
00:08:34,000 --> 00:08:36,399
so weird is that this is actually

234
00:08:36,399 --> 00:08:40,880
a talk that i gave three years ago

235
00:08:40,880 --> 00:08:42,640
i didn't do any new slides because

236
00:08:42,640 --> 00:08:44,560
really there hasn't been any

237
00:08:44,560 --> 00:08:47,440
significant change in uh the thinking on

238
00:08:47,440 --> 00:08:49,120
bundle button encapsulation since then

239
00:08:49,120 --> 00:08:50,640
this is actually a pretty good

240
00:08:50,640 --> 00:08:54,880
uh summary of of uh where we were

241
00:08:54,880 --> 00:08:57,920
then on um on this topic and and

242
00:08:57,920 --> 00:09:00,399
where we are now i believe on this topic

243
00:09:00,399 --> 00:09:01,519
so um

244
00:09:01,519 --> 00:09:03,040
and and these slides had already been

245
00:09:03,040 --> 00:09:04,720
cleared for an unlimited release so it

246
00:09:04,720 --> 00:09:06,080
saved me a whole lot of administrative

247
00:09:06,080 --> 00:09:06,959
stuff

248
00:09:06,959 --> 00:09:11,279
so with that as background can we go

249
00:09:11,279 --> 00:09:12,160
ahead to the next

250
00:09:12,160 --> 00:09:15,360
slide the first which is i think a

251
00:09:15,360 --> 00:09:19,040
summary of what's in the presentation

252
00:09:19,440 --> 00:09:22,080
i will very briefly go over one of the

253
00:09:22,080 --> 00:09:24,160
bundle encapsulations history

254
00:09:24,160 --> 00:09:27,120
um uh talk about uh aggregate custody

255
00:09:27,120 --> 00:09:29,120
signaling which is an elaboration of the

256
00:09:29,120 --> 00:09:30,880
custody transfer that was in the

257
00:09:30,880 --> 00:09:32,800
original rsc 5050

258
00:09:32,800 --> 00:09:36,240
specification um uh

259
00:09:36,240 --> 00:09:38,560
go through the current design of bundle

260
00:09:38,560 --> 00:09:39,920
bundle encapsulation

261
00:09:39,920 --> 00:09:42,720
and then to to whatever extent people

262
00:09:42,720 --> 00:09:45,120
are patient with it i can go through

263
00:09:45,120 --> 00:09:48,080
some of the the ways in which uh bundle

264
00:09:48,080 --> 00:09:49,760
and bundle encapsulation technology can

265
00:09:49,760 --> 00:09:50,800
be applied which i think they're

266
00:09:50,800 --> 00:09:51,760
actually quite

267
00:09:51,760 --> 00:09:54,160
uh interesting and and ingenious in some

268
00:09:54,160 --> 00:09:55,839
ways and then

269
00:09:55,839 --> 00:09:58,080
i guess a note on on what we can do in

270
00:09:58,080 --> 00:09:59,120
the future

271
00:09:59,120 --> 00:10:02,320
so uh next slide please uh and the next

272
00:10:02,320 --> 00:10:05,839
one after that

273
00:10:06,399 --> 00:10:08,800
uh so the original bundle bundle uh

274
00:10:08,800 --> 00:10:10,079
specification

275
00:10:10,079 --> 00:10:13,040
uh dates back to august of 2009 it was

276
00:10:13,040 --> 00:10:14,399
put together by

277
00:10:14,399 --> 00:10:17,680
some folks at mitre corporation uh

278
00:10:17,680 --> 00:10:21,519
who are i think keith of course is still

279
00:10:21,519 --> 00:10:22,640
heavily involved in

280
00:10:22,640 --> 00:10:26,000
dtn bob durst is i think

281
00:10:26,000 --> 00:10:29,360
an amused spectator at this point um

282
00:10:29,360 --> 00:10:33,360
it was um the original idea was that

283
00:10:33,360 --> 00:10:35,600
uh bundle bundle encapsulation would be

284
00:10:35,600 --> 00:10:36,560
a

285
00:10:36,560 --> 00:10:38,240
bundle protocol application that is

286
00:10:38,240 --> 00:10:40,079
living you can

287
00:10:40,079 --> 00:10:42,000
think of it as being above bundle

288
00:10:42,000 --> 00:10:43,120
protocol

289
00:10:43,120 --> 00:10:46,399
and the motivations for it were uh

290
00:10:46,399 --> 00:10:49,279
support for content centric networking

291
00:10:49,279 --> 00:10:51,200
um

292
00:10:51,200 --> 00:10:53,519
custodial retransmission of multicast

293
00:10:53,519 --> 00:10:54,399
bundles and

294
00:10:54,399 --> 00:10:56,320
and security tunneling especially uh

295
00:10:56,320 --> 00:10:58,240
traffic analysis defense

296
00:10:58,240 --> 00:11:01,680
uh next slide please

297
00:11:01,680 --> 00:11:03,760
those motivations i think are are are

298
00:11:03,760 --> 00:11:04,800
still uh

299
00:11:04,800 --> 00:11:08,000
kind of handy um and and they are

300
00:11:08,000 --> 00:11:10,320
more or less preserved in in later

301
00:11:10,320 --> 00:11:11,440
thinking on

302
00:11:11,440 --> 00:11:13,279
um bundle and bundle encapsulation we

303
00:11:13,279 --> 00:11:15,680
should sort of

304
00:11:15,680 --> 00:11:18,640
get resurrected in 2013 i wrote up a

305
00:11:18,640 --> 00:11:20,800
draft for it

306
00:11:20,800 --> 00:11:24,079
in march and here the idea was

307
00:11:24,079 --> 00:11:26,079
and it's sort of it's just a matter of

308
00:11:26,079 --> 00:11:27,839
looking at it in a different way i guess

309
00:11:27,839 --> 00:11:31,360
it's conceived uh in this draft as a

310
00:11:31,360 --> 00:11:33,360
convergence layer protocol underneath

311
00:11:33,360 --> 00:11:34,880
bundle protocol instead of a

312
00:11:34,880 --> 00:11:38,320
an application above it and that was

313
00:11:38,320 --> 00:11:40,880
intended to solve a couple of problems

314
00:11:40,880 --> 00:11:42,079
in particular

315
00:11:42,079 --> 00:11:45,040
the the the the immediate problem is it

316
00:11:45,040 --> 00:11:46,480
was supposed to solve was

317
00:11:46,480 --> 00:11:51,279
disentangling routing from uh security

318
00:11:51,279 --> 00:11:54,560
it gave us a way of of

319
00:11:54,560 --> 00:11:56,959
implementing security with a security

320
00:11:56,959 --> 00:11:59,120
source and a security destination

321
00:11:59,120 --> 00:12:02,000
that it was um more rational and more

322
00:12:02,000 --> 00:12:03,360
powerful than

323
00:12:03,360 --> 00:12:06,000
in the original bundle security uh

324
00:12:06,000 --> 00:12:06,959
protocol spec

325
00:12:06,959 --> 00:12:10,160
it it solved a bunch of of uh

326
00:12:10,160 --> 00:12:12,880
potential routing uh problems and ways

327
00:12:12,880 --> 00:12:14,800
in which routing and security

328
00:12:14,800 --> 00:12:19,040
could conflict next slide please

329
00:12:22,320 --> 00:12:26,320
so um uh taking a step back

330
00:12:26,320 --> 00:12:28,480
at at the same time we've been looking

331
00:12:28,480 --> 00:12:29,680
at custody transfer

332
00:12:29,680 --> 00:12:33,040
and in 2015 2016 we we

333
00:12:33,040 --> 00:12:37,279
looked at um what became the eventual

334
00:12:37,279 --> 00:12:39,279
decision to remove custody transfer from

335
00:12:39,279 --> 00:12:40,399
bundle protocol

336
00:12:40,399 --> 00:12:41,920
there were a couple of problems with it

337
00:12:41,920 --> 00:12:44,639
one was that uh

338
00:12:44,639 --> 00:12:47,839
custodial retransmission was uh

339
00:12:47,839 --> 00:12:50,639
was problematic in a number of ways the

340
00:12:50,639 --> 00:12:52,560
two most prominent being that

341
00:12:52,560 --> 00:12:54,480
uh accurately estimating the round-trip

342
00:12:54,480 --> 00:12:56,000
time was not possible in the general

343
00:12:56,000 --> 00:12:56,399
case

344
00:12:56,399 --> 00:12:59,839
because the um the entity

345
00:12:59,839 --> 00:13:02,959
that would be acknowledging the bundle

346
00:13:02,959 --> 00:13:05,839
might be the next bundle hop or it might

347
00:13:05,839 --> 00:13:07,519
be six bundle hops away there was no

348
00:13:07,519 --> 00:13:08,480
requirement

349
00:13:08,480 --> 00:13:12,720
for um restricting that and so you just

350
00:13:12,720 --> 00:13:15,279
couldn't really know who was gonna

351
00:13:15,279 --> 00:13:17,279
receive and take custody and so you

352
00:13:17,279 --> 00:13:18,160
couldn't know

353
00:13:18,160 --> 00:13:20,240
when that would happen you couldn't know

354
00:13:20,240 --> 00:13:21,200
when

355
00:13:21,200 --> 00:13:23,680
it'd be efficient to uh time that out

356
00:13:23,680 --> 00:13:25,360
and retransmit

357
00:13:25,360 --> 00:13:28,399
um maybe even more of a problem uh

358
00:13:28,399 --> 00:13:29,839
bundles that were fragmented by

359
00:13:29,839 --> 00:13:31,040
non-custodians

360
00:13:31,040 --> 00:13:34,560
um uh the the original

361
00:13:34,560 --> 00:13:37,920
custody holder would never receive a

362
00:13:37,920 --> 00:13:40,800
custody acknowledgement and uh the

363
00:13:40,800 --> 00:13:41,920
custody

364
00:13:41,920 --> 00:13:43,680
transmission would just basically break

365
00:13:43,680 --> 00:13:45,839
down all the same

366
00:13:45,839 --> 00:13:48,160
there were and are some deployment

367
00:13:48,160 --> 00:13:49,519
scenarios

368
00:13:49,519 --> 00:13:52,560
where a delay tolerant asymmetric

369
00:13:52,560 --> 00:13:54,079
acknowledgement mechanism

370
00:13:54,079 --> 00:13:56,720
is needed and bundled protocol is is

371
00:13:56,720 --> 00:13:58,560
clearly the way to do that

372
00:13:58,560 --> 00:14:03,519
next slide

373
00:14:03,519 --> 00:14:06,639
uh so um so the

374
00:14:06,639 --> 00:14:09,760
the idea there was well how about um

375
00:14:09,760 --> 00:14:12,959
just making bundle protocol um

376
00:14:12,959 --> 00:14:15,680
encapsulation uh a uh convert make

377
00:14:15,680 --> 00:14:17,519
custody transfer and encapsulate a

378
00:14:17,519 --> 00:14:20,240
convergence layer uh re-transmission

379
00:14:20,240 --> 00:14:22,000
mechanism same as

380
00:14:22,000 --> 00:14:25,040
uh tcp or ltp that is between

381
00:14:25,040 --> 00:14:27,680
um topologically adjacent uh bundle

382
00:14:27,680 --> 00:14:28,880
protocol nodes

383
00:14:28,880 --> 00:14:31,120
so you would do custody transfer at the

384
00:14:31,120 --> 00:14:32,720
convergence layer so you'd use

385
00:14:32,720 --> 00:14:34,399
bundle protocol as a configurator

386
00:14:34,399 --> 00:14:35,839
protocol and oh

387
00:14:35,839 --> 00:14:38,320
well one of the bundle encapsulation was

388
00:14:38,320 --> 00:14:39,199
already doing that

389
00:14:39,199 --> 00:14:42,560
so the the concept

390
00:14:42,560 --> 00:14:45,680
suddenly became let's just put custody

391
00:14:45,680 --> 00:14:47,120
transfer into bundle and bundle

392
00:14:47,120 --> 00:14:48,240
encapsulation

393
00:14:48,240 --> 00:14:51,760
and use the ibe for both purposes

394
00:14:51,760 --> 00:14:54,000
independently or together that is it it

395
00:14:54,000 --> 00:14:55,120
can function

396
00:14:55,120 --> 00:14:58,320
in to solve some cross-domain security

397
00:14:58,320 --> 00:14:59,120
problems with

398
00:14:59,120 --> 00:15:01,360
uh mechanisms for security sources and

399
00:15:01,360 --> 00:15:02,480
destinations

400
00:15:02,480 --> 00:15:05,040
and and at the same time it can be the

401
00:15:05,040 --> 00:15:06,079
the place where we do

402
00:15:06,079 --> 00:15:07,360
reliable convergence there

403
00:15:07,360 --> 00:15:09,199
re-transmission over asymmetric paths

404
00:15:09,199 --> 00:15:10,880
using bundle protocol

405
00:15:10,880 --> 00:15:13,839
next slide

406
00:15:15,920 --> 00:15:19,760
so um taking one more

407
00:15:19,760 --> 00:15:23,360
out of left field approach at this uh in

408
00:15:23,360 --> 00:15:25,839
in 2012 there were some folks at

409
00:15:25,839 --> 00:15:27,279
university of colorado

410
00:15:27,279 --> 00:15:30,399
who were working on

411
00:15:30,399 --> 00:15:34,320
a mechanism for more efficient

412
00:15:34,320 --> 00:15:38,720
custody transfer by aggregating

413
00:15:38,720 --> 00:15:42,720
custody signals for uh for multiple

414
00:15:42,720 --> 00:15:45,680
bundles and sort of tagging the bundles

415
00:15:45,680 --> 00:15:46,720
so that the

416
00:15:46,720 --> 00:15:50,320
signals could be uh applied to

417
00:15:50,320 --> 00:15:55,279
multiple uh bundles and uh and the

418
00:15:55,279 --> 00:15:58,320
total volume of custody

419
00:15:58,320 --> 00:16:01,519
signal transmission could be sharply

420
00:16:01,519 --> 00:16:03,600
reduced which is very important for

421
00:16:03,600 --> 00:16:06,880
some applications where the

422
00:16:06,880 --> 00:16:09,519
transmission bandwidth was extremely

423
00:16:09,519 --> 00:16:10,320
asymmetric

424
00:16:10,320 --> 00:16:12,399
and there are some space applications

425
00:16:12,399 --> 00:16:13,440
for example where that's

426
00:16:13,440 --> 00:16:16,959
uh definitely true uh in particular

427
00:16:16,959 --> 00:16:22,160
uh this mechanism was implemented and

428
00:16:22,160 --> 00:16:25,279
was used for reliable uh vertical

429
00:16:25,279 --> 00:16:26,959
communications with the international

430
00:16:26,959 --> 00:16:28,079
space station

431
00:16:28,079 --> 00:16:31,519
starting in probably 2014

432
00:16:31,519 --> 00:16:34,800
something like that and and has been

433
00:16:34,800 --> 00:16:37,120
very well received it's it's there's a

434
00:16:37,120 --> 00:16:38,480
lot of enthusiasm for

435
00:16:38,480 --> 00:16:40,639
aggregate custody signaling uh next

436
00:16:40,639 --> 00:16:42,959
slide

437
00:16:46,560 --> 00:16:49,120
so um aggregate custody signaling has

438
00:16:49,120 --> 00:16:51,279
been so successful in

439
00:16:51,279 --> 00:16:54,800
operational use in on iss that

440
00:16:54,800 --> 00:16:58,240
um it seemed to me that

441
00:16:58,240 --> 00:17:01,680
the original custody transfer really

442
00:17:01,680 --> 00:17:04,720
wasn't necessary that the acs

443
00:17:04,720 --> 00:17:07,359
can do all the things that the original

444
00:17:07,359 --> 00:17:09,439
custody transfer system could do and and

445
00:17:09,439 --> 00:17:10,240
can also be

446
00:17:10,240 --> 00:17:13,839
much more efficient and so

447
00:17:13,839 --> 00:17:17,520
this this new design for

448
00:17:17,520 --> 00:17:19,919
bundle and bundle encapsulation uh

449
00:17:19,919 --> 00:17:20,559
posted

450
00:17:20,559 --> 00:17:23,839
in may of 2018 uh

451
00:17:23,839 --> 00:17:26,319
includes custody transfer in bundle and

452
00:17:26,319 --> 00:17:27,199
bundle

453
00:17:27,199 --> 00:17:29,760
uh and in particular it concludes the

454
00:17:29,760 --> 00:17:30,799
aggregate

455
00:17:30,799 --> 00:17:33,120
custody signaling concept in bundle and

456
00:17:33,120 --> 00:17:35,440
bundle encapsulation

457
00:17:35,440 --> 00:17:38,720
that enables bib-e to

458
00:17:38,720 --> 00:17:40,960
operate as a an optionally it's not

459
00:17:40,960 --> 00:17:42,559
necessarily you can turn off

460
00:17:42,559 --> 00:17:44,320
a custody transfer but it's an

461
00:17:44,320 --> 00:17:46,080
optionally reliable

462
00:17:46,080 --> 00:17:48,400
convergence layer protocol under bundle

463
00:17:48,400 --> 00:17:49,200
protocol

464
00:17:49,200 --> 00:17:53,760
that is asymmetric and and can

465
00:17:55,039 --> 00:17:58,160
traverse multiple uh bundle hops because

466
00:17:58,160 --> 00:17:59,679
the uh

467
00:17:59,679 --> 00:18:03,520
the the end points at the uh convergence

468
00:18:03,520 --> 00:18:04,320
layer

469
00:18:04,320 --> 00:18:07,280
uh which are the sender and receiver of

470
00:18:07,280 --> 00:18:07,840
the

471
00:18:07,840 --> 00:18:12,880
custody transfer destination

472
00:18:12,880 --> 00:18:16,480
will uh will in turn send their bundles

473
00:18:16,480 --> 00:18:17,760
using

474
00:18:17,760 --> 00:18:20,880
underlying uh custody transfers this

475
00:18:20,880 --> 00:18:22,480
turtles over turtles you know turtles

476
00:18:22,480 --> 00:18:23,280
all the way down

477
00:18:23,280 --> 00:18:26,080
sort of thing very uh bizarre looking

478
00:18:26,080 --> 00:18:27,280
stack

479
00:18:27,280 --> 00:18:30,640
but it enables um

480
00:18:30,640 --> 00:18:33,919
this quite powerful

481
00:18:33,919 --> 00:18:37,200
operational mode the encapsulated bundle

482
00:18:37,200 --> 00:18:40,799
can be uh acknowledged that is the the

483
00:18:40,799 --> 00:18:43,679
the custody transfer can be used to to

484
00:18:43,679 --> 00:18:45,679
move that encapsulated bundle

485
00:18:45,679 --> 00:18:48,799
uh between nodes reliably and and

486
00:18:48,799 --> 00:18:53,039
or it can be encrypted or signed the uh

487
00:18:53,039 --> 00:18:56,080
security measures available in in bundle

488
00:18:56,080 --> 00:18:57,840
and bundle encapsulation are

489
00:18:57,840 --> 00:19:00,960
are merged with the ability to do

490
00:19:00,960 --> 00:19:02,640
custody transfer

491
00:19:02,640 --> 00:19:05,200
next slide

492
00:19:07,679 --> 00:19:11,039
so how does this work um

493
00:19:11,039 --> 00:19:14,160
bibe is a reliable custody convergence

494
00:19:14,160 --> 00:19:15,520
layer protocol

495
00:19:15,520 --> 00:19:17,280
and the way we do this is that the

496
00:19:17,280 --> 00:19:19,760
payload of the encapsulating bundle

497
00:19:19,760 --> 00:19:22,400
uh the payload of that of that bundle is

498
00:19:22,400 --> 00:19:24,080
three things the encapsulated bundle

499
00:19:24,080 --> 00:19:27,600
but that's preceded by a transmission

500
00:19:27,600 --> 00:19:30,480
identifier and an expected time of

501
00:19:30,480 --> 00:19:32,320
acknowledgement that is the

502
00:19:32,320 --> 00:19:37,039
the sender passes along in the

503
00:19:37,039 --> 00:19:40,559
uh in the payload of the encapsulated

504
00:19:40,559 --> 00:19:41,360
bundle

505
00:19:41,360 --> 00:19:44,480
uh the time that it expects to get an

506
00:19:44,480 --> 00:19:46,880
acknowledgement back and those things

507
00:19:46,880 --> 00:19:48,720
can be zeroed out if custody transfer is

508
00:19:48,720 --> 00:19:50,080
not requested

509
00:19:50,080 --> 00:19:52,880
um the acknowledgment of the

510
00:19:52,880 --> 00:19:54,320
encapsulating bundle is

511
00:19:54,320 --> 00:19:56,559
aggregated into a new administrative

512
00:19:56,559 --> 00:19:57,520
record that is

513
00:19:57,520 --> 00:20:00,240
sent in a responding bundle the expected

514
00:20:00,240 --> 00:20:01,600
time of acknowledgment is

515
00:20:01,600 --> 00:20:04,640
used as a control mechanism for for

516
00:20:04,640 --> 00:20:05,840
telling the

517
00:20:05,840 --> 00:20:09,440
receiver when to stop aggregating and

518
00:20:09,440 --> 00:20:12,720
go ahead and send the aggregated

519
00:20:12,720 --> 00:20:16,400
custody signal the

520
00:20:16,400 --> 00:20:19,760
responding custody signal will

521
00:20:19,760 --> 00:20:21,919
contain a custody transfer disposition

522
00:20:21,919 --> 00:20:22,960
code same as

523
00:20:22,960 --> 00:20:25,600
the original custody transfer mechanism

524
00:20:25,600 --> 00:20:27,520
of custody accepted or else a reason for

525
00:20:27,520 --> 00:20:28,559
refusal

526
00:20:28,559 --> 00:20:31,840
and uh and and there will be in each

527
00:20:31,840 --> 00:20:35,360
acknowledgement bundle a custody signal

528
00:20:35,360 --> 00:20:38,080
bundle a sequence or multiple sequences

529
00:20:38,080 --> 00:20:40,080
of consecutive transmission ids of the

530
00:20:40,080 --> 00:20:41,600
received bundle so that

531
00:20:41,600 --> 00:20:43,840
any number of of bundles can be

532
00:20:43,840 --> 00:20:45,520
acknowledged in a single

533
00:20:45,520 --> 00:20:48,480
acknowledgement the acknowledgement is

534
00:20:48,480 --> 00:20:50,320
not received by the expected time

535
00:20:50,320 --> 00:20:52,559
then uh the transmission of the

536
00:20:52,559 --> 00:20:53,440
encapsulated

537
00:20:53,440 --> 00:20:54,880
bundle is assumed to have failed and

538
00:20:54,880 --> 00:20:56,799
encapsulated bundled can then be

539
00:20:56,799 --> 00:20:59,440
queued for for being re-forwarded the

540
00:20:59,440 --> 00:21:00,799
same as we would do with other

541
00:21:00,799 --> 00:21:03,360
reliable convergence layer protocols

542
00:21:03,360 --> 00:21:05,918
next slide

543
00:21:08,640 --> 00:21:10,000
in the interest of time i won't go

544
00:21:10,000 --> 00:21:11,679
through all these but

545
00:21:11,679 --> 00:21:14,720
but i will suggest that these are

546
00:21:14,720 --> 00:21:17,600
kind of interesting uh ways in which

547
00:21:17,600 --> 00:21:19,200
bundled model encapsulation can be

548
00:21:19,200 --> 00:21:20,799
configured and used

549
00:21:20,799 --> 00:21:23,440
you can in in this slide here we're

550
00:21:23,440 --> 00:21:24,880
showing it

551
00:21:24,880 --> 00:21:28,080
doing just custodial reliability

552
00:21:28,080 --> 00:21:31,280
uh here the the custody

553
00:21:31,280 --> 00:21:34,799
uh signal is being sent from node

554
00:21:34,799 --> 00:21:38,720
two uh back through uh node 62 and

555
00:21:38,720 --> 00:21:42,400
19 which are are not

556
00:21:42,960 --> 00:21:46,000
taking part in the bundle bundle

557
00:21:46,000 --> 00:21:47,440
encapsulation they're just

558
00:21:47,440 --> 00:21:49,760
bundle forwarders and so they're at the

559
00:21:49,760 --> 00:21:50,960
bottom of the stack

560
00:21:50,960 --> 00:21:55,679
in this very strange protocol stack next

561
00:21:56,840 --> 00:21:58,559
slide

562
00:21:58,559 --> 00:22:01,039
uh here's a cross-domain security which

563
00:22:01,039 --> 00:22:01,840
is uh

564
00:22:01,840 --> 00:22:04,720
uh bundle and bundle encapsulation being

565
00:22:04,720 --> 00:22:05,280
used

566
00:22:05,280 --> 00:22:09,200
to uh um uh

567
00:22:09,200 --> 00:22:13,039
to sign a bundle as it traverses and a

568
00:22:13,039 --> 00:22:14,480
particularly unsafe

569
00:22:14,480 --> 00:22:18,320
um segment of the end-to-end path

570
00:22:18,320 --> 00:22:20,799
next slide now i think the next slide is

571
00:22:20,799 --> 00:22:22,480
the same sort of thing but here instead

572
00:22:22,480 --> 00:22:24,799
of being signed it's encrypted

573
00:22:24,799 --> 00:22:27,280
during its traversal over this this um

574
00:22:27,280 --> 00:22:28,159
unsafe

575
00:22:28,159 --> 00:22:31,760
bit of path um defense against traffic

576
00:22:31,760 --> 00:22:32,720
analysis

577
00:22:32,720 --> 00:22:35,600
uh next slide

578
00:22:36,000 --> 00:22:39,120
uh we can uh imagine

579
00:22:39,120 --> 00:22:42,559
um a node and

580
00:22:42,559 --> 00:22:44,320
i'm sorry a bundle entering a portion of

581
00:22:44,320 --> 00:22:46,400
the network that's very heavily used

582
00:22:46,400 --> 00:22:50,159
and during uh in its local parts of the

583
00:22:50,159 --> 00:22:52,799
network it's it's a an expedited high

584
00:22:52,799 --> 00:22:54,640
priority bundle once it gets to the

585
00:22:54,640 --> 00:22:55,360
trunk line

586
00:22:55,360 --> 00:22:58,240
oh no everybody else will is is

587
00:22:58,240 --> 00:22:59,360
important too

588
00:22:59,360 --> 00:23:03,520
so the the encapsulating bundle may be

589
00:23:03,520 --> 00:23:07,039
at a lower or higher

590
00:23:07,039 --> 00:23:09,840
the quality of service than the the

591
00:23:09,840 --> 00:23:11,120
encapsulated bundle

592
00:23:11,120 --> 00:23:13,678
next slide

593
00:23:14,640 --> 00:23:18,080
um the same thing there's a notion in

594
00:23:18,080 --> 00:23:21,600
in the ion implementation of something

595
00:23:21,600 --> 00:23:23,440
called critical forwarding where

596
00:23:23,440 --> 00:23:26,880
uh there's a

597
00:23:26,880 --> 00:23:29,360
extend class service switch that says

598
00:23:29,360 --> 00:23:31,120
this is a really critical bundle

599
00:23:31,120 --> 00:23:32,960
send it every possible way you can send

600
00:23:32,960 --> 00:23:34,720
it and and that

601
00:23:34,720 --> 00:23:37,120
could be done end to end and here we're

602
00:23:37,120 --> 00:23:38,159
showing it being done

603
00:23:38,159 --> 00:23:41,440
only between the entry and exit points

604
00:23:41,440 --> 00:23:43,440
from a particularly unstable portion of

605
00:23:43,440 --> 00:23:44,400
the network

606
00:23:44,400 --> 00:23:47,039
next slide

607
00:23:48,159 --> 00:23:50,080
multicast oddly enough you could do a

608
00:23:50,080 --> 00:23:51,600
transient multicast you could

609
00:23:51,600 --> 00:23:54,559
uh have an end-to-end bundle that is not

610
00:23:54,559 --> 00:23:56,559
really multicast but when it gets to a

611
00:23:56,559 --> 00:23:57,919
particularly unstable part of the

612
00:23:57,919 --> 00:23:59,600
network

613
00:23:59,600 --> 00:24:02,080
to increase the chance of it getting out

614
00:24:02,080 --> 00:24:05,039
and reaching the destination uh maybe

615
00:24:05,039 --> 00:24:08,320
the uh entry to that that portion of

616
00:24:08,320 --> 00:24:11,600
the uh of the network uh encapsulates

617
00:24:11,600 --> 00:24:13,279
the original bundle in uh

618
00:24:13,279 --> 00:24:15,440
in a bundle that is then multicast to

619
00:24:15,440 --> 00:24:17,200
multiple exit points from

620
00:24:17,200 --> 00:24:19,760
that portion of the network and

621
00:24:19,760 --> 00:24:21,360
whichever one of those

622
00:24:21,360 --> 00:24:23,840
uh guys actually gets the bundle and can

623
00:24:23,840 --> 00:24:25,600
forward it on to the destination node in

624
00:24:25,600 --> 00:24:27,440
the stable part of the network

625
00:24:27,440 --> 00:24:29,919
that that succeeds or there may be maybe

626
00:24:29,919 --> 00:24:31,120
there are multiple

627
00:24:31,120 --> 00:24:33,919
copies that arrive but it increases the

628
00:24:33,919 --> 00:24:34,720
chance of

629
00:24:34,720 --> 00:24:39,360
successful arrival next slide

630
00:24:40,320 --> 00:24:44,480
this is oddly enough a way that you can

631
00:24:44,480 --> 00:24:46,080
use this mechanism to do

632
00:24:46,080 --> 00:24:50,640
source path routing by encapsulating

633
00:24:50,640 --> 00:24:56,080
uh in increasingly deep layers of

634
00:24:58,720 --> 00:25:02,320
network adjacency um

635
00:25:02,320 --> 00:25:04,960
next slide

636
00:25:05,919 --> 00:25:09,120
um oh and yeah here's

637
00:25:09,120 --> 00:25:11,279
you can do you know certain combinations

638
00:25:11,279 --> 00:25:13,200
of all these things you could do

639
00:25:13,200 --> 00:25:15,600
certified multicast that that the

640
00:25:15,600 --> 00:25:16,960
certification and the multicast

641
00:25:16,960 --> 00:25:18,720
terminates when you leave the network

642
00:25:18,720 --> 00:25:22,880
um and and the number of combinations is

643
00:25:22,880 --> 00:25:25,440
i think limited only by the imagination

644
00:25:25,440 --> 00:25:29,840
next slide

645
00:25:30,400 --> 00:25:33,840
uh so um what i

646
00:25:33,840 --> 00:25:37,440
would see here is i would i would um

647
00:25:37,440 --> 00:25:40,720
urge us to um

648
00:25:41,039 --> 00:25:43,440
add bundle button encapsulation along

649
00:25:43,440 --> 00:25:44,640
these lines

650
00:25:44,640 --> 00:25:47,760
to the um chartered

651
00:25:47,760 --> 00:25:50,240
program report for the working group um

652
00:25:50,240 --> 00:25:52,240
the specification is

653
00:25:52,240 --> 00:25:55,840
actually um not very

654
00:25:55,840 --> 00:25:58,559
difficult implementation is not very

655
00:25:58,559 --> 00:25:59,520
difficult

656
00:25:59,520 --> 00:26:01,279
i think we can get a lot of benefit from

657
00:26:01,279 --> 00:26:04,480
it um and

658
00:26:04,480 --> 00:26:07,679
i think the the ability to

659
00:26:07,679 --> 00:26:10,960
reclaim some of the features of

660
00:26:10,960 --> 00:26:13,840
earlier earlier iterations of our

661
00:26:13,840 --> 00:26:16,000
protocols that we had to abandon is

662
00:26:16,000 --> 00:26:19,279
is desirable just in itself getting

663
00:26:19,279 --> 00:26:21,200
security sources and destinations and

664
00:26:21,200 --> 00:26:23,039
custody transfer back

665
00:26:23,039 --> 00:26:26,080
uh in in a way is uh

666
00:26:26,080 --> 00:26:29,200
i i think in itself a good argument for

667
00:26:29,200 --> 00:26:31,679
adopting bundled encapsulation and i

668
00:26:31,679 --> 00:26:32,400
will finish

669
00:26:32,400 --> 00:26:34,799
right there

670
00:26:36,960 --> 00:26:39,440
thanks very much scott um spot on time

671
00:26:39,440 --> 00:26:41,520
um i've noted that you're

672
00:26:41,520 --> 00:26:43,440
effectively requesting working group

673
00:26:43,440 --> 00:26:45,200
adoption of bundle in bundle

674
00:26:45,200 --> 00:26:48,559
i think we will roll that question

675
00:26:48,559 --> 00:26:51,200
into the discussion in the second half

676
00:26:51,200 --> 00:26:52,400
of the agenda

677
00:26:52,400 --> 00:26:54,400
because i know you've made mention of

678
00:26:54,400 --> 00:26:55,440
bundle and muddlers

679
00:26:55,440 --> 00:26:58,880
as part of that um

680
00:26:58,880 --> 00:27:01,919
i'll still make a note anyway so uh next

681
00:27:01,919 --> 00:27:02,799
up on the agenda

682
00:27:02,799 --> 00:27:06,080
i believe we have uh

683
00:27:06,080 --> 00:27:08,400
the we have marius feldman who's going

684
00:27:08,400 --> 00:27:09,440
to talk about his

685
00:27:09,440 --> 00:27:11,440
bundle protocol version 7 tests with

686
00:27:11,440 --> 00:27:12,880
issa opsat

687
00:27:12,880 --> 00:27:16,000
uh marius are you there yes you are

688
00:27:16,000 --> 00:27:18,720
yes i'm here hi can can you present your

689
00:27:18,720 --> 00:27:20,880
own slides or would you like me to do it

690
00:27:20,880 --> 00:27:23,279
uh felix will do it so he will take the

691
00:27:23,279 --> 00:27:24,960
second part of the presentation and

692
00:27:24,960 --> 00:27:28,320
uh cersei will share the slides go

693
00:27:28,320 --> 00:27:31,840
oh i i think i have to stop sharing

694
00:27:31,840 --> 00:27:34,159
stop sharing and then let there you go

695
00:27:34,159 --> 00:27:37,279
felix you should have control

696
00:27:39,679 --> 00:27:43,039
so well hi everybody

697
00:27:43,039 --> 00:27:45,600
um yeah well felix is searching for the

698
00:27:45,600 --> 00:27:46,320
presentation

699
00:27:46,320 --> 00:27:48,480
i'm

700
00:27:50,240 --> 00:27:52,480
i can already start to talk a little bit

701
00:27:52,480 --> 00:27:54,240
about the next minute so

702
00:27:54,240 --> 00:27:57,279
um actually um so we changed the title

703
00:27:57,279 --> 00:27:59,360
slightly because we do not just want to

704
00:27:59,360 --> 00:28:00,880
talk about that one test but

705
00:28:00,880 --> 00:28:03,360
um there's a preliminary test with it um

706
00:28:03,360 --> 00:28:04,480
because while we hadn't

707
00:28:04,480 --> 00:28:06,159
uh we did not had any any flight

708
00:28:06,159 --> 00:28:08,720
opportunity um in the meanwhile and i

709
00:28:08,720 --> 00:28:10,320
briefly want to to talk about that test

710
00:28:10,320 --> 00:28:12,240
as well and then um about the either

711
00:28:12,240 --> 00:28:14,559
offset test that we did just in in

712
00:28:14,559 --> 00:28:15,279
december

713
00:28:15,279 --> 00:28:18,320
or 2020 um so

714
00:28:18,320 --> 00:28:21,440
before uh we go to some technical uh

715
00:28:21,440 --> 00:28:21,840
things

716
00:28:21,840 --> 00:28:23,440
um i would like to give you some some

717
00:28:23,440 --> 00:28:25,840
background information uh felix maybe

718
00:28:25,840 --> 00:28:28,880
you start with the next slide right um

719
00:28:28,880 --> 00:28:30,000
so it's some background

720
00:28:30,000 --> 00:28:33,039
um well uh that shows how how long we

721
00:28:33,039 --> 00:28:33,840
already

722
00:28:33,840 --> 00:28:37,279
um desired that moment to test uh the

723
00:28:37,279 --> 00:28:40,159
ddn protocols um in the low earth orbit

724
00:28:40,159 --> 00:28:40,799
um

725
00:28:40,799 --> 00:28:42,640
actually uh so we are working

726
00:28:42,640 --> 00:28:44,080
intensively on

727
00:28:44,080 --> 00:28:46,159
the so-called ring road concept since a

728
00:28:46,159 --> 00:28:47,200
couple of years

729
00:28:47,200 --> 00:28:50,080
um so it was um well the guy that that

730
00:28:50,080 --> 00:28:52,399
was just presenting scott burleigh

731
00:28:52,399 --> 00:28:55,360
who pointed us to that concept so the

732
00:28:55,360 --> 00:28:56,799
idea is

733
00:28:56,799 --> 00:28:59,600
that you leverage uh low earth orbit uh

734
00:28:59,600 --> 00:29:00,559
satellite

735
00:29:00,559 --> 00:29:03,440
satellites in order to transfer data for

736
00:29:03,440 --> 00:29:04,320
example from

737
00:29:04,320 --> 00:29:06,320
um from sites that are decoupled from

738
00:29:06,320 --> 00:29:07,919
the internet to the internet and back

739
00:29:07,919 --> 00:29:08,640
again

740
00:29:08,640 --> 00:29:11,200
um so it's a sort of approach for

741
00:29:11,200 --> 00:29:12,320
low-cost

742
00:29:12,320 --> 00:29:15,679
communication networks and um

743
00:29:15,679 --> 00:29:19,120
so while scott mentions that uh back in

744
00:29:19,120 --> 00:29:22,320
i think it was march or february 2013 13

745
00:29:22,320 --> 00:29:24,399
during a visit of mine it's

746
00:29:24,399 --> 00:29:28,159
a jpl so eight years ago and um

747
00:29:28,159 --> 00:29:30,159
the interesting thing is um first of all

748
00:29:30,159 --> 00:29:31,760
well for sure i liked the idea because

749
00:29:31,760 --> 00:29:32,559
it's simple and

750
00:29:32,559 --> 00:29:35,039
well um i saw an opportunity to say

751
00:29:35,039 --> 00:29:36,159
something practically

752
00:29:36,159 --> 00:29:38,559
and on the other hand um it was a lucky

753
00:29:38,559 --> 00:29:40,399
incident of history let's say that

754
00:29:40,399 --> 00:29:43,200
suddenly two flight opportunities popped

755
00:29:43,200 --> 00:29:44,320
up

756
00:29:44,320 --> 00:29:46,880
one of them um was from the technical

757
00:29:46,880 --> 00:29:48,720
university of dresden

758
00:29:48,720 --> 00:29:51,760
where cubesat was built and they were

759
00:29:51,760 --> 00:29:53,520
searching for payloads

760
00:29:53,520 --> 00:29:56,000
and on the other hand um well there was

761
00:29:56,000 --> 00:29:58,080
a either observed um

762
00:29:58,080 --> 00:30:00,720
request for for proposals uh that was

763
00:30:00,720 --> 00:30:02,039
published in march uh

764
00:30:02,039 --> 00:30:04,720
2013 also really at the same point in

765
00:30:04,720 --> 00:30:06,159
time when scott mentioned

766
00:30:06,159 --> 00:30:09,039
um this is over a concept um in a

767
00:30:09,039 --> 00:30:10,320
discussion with me

768
00:30:10,320 --> 00:30:13,039
and um we have handed in at that point

769
00:30:13,039 --> 00:30:13,600
in time

770
00:30:13,600 --> 00:30:16,399
a proposal to practically demonstrate

771
00:30:16,399 --> 00:30:17,520
this ring road concept

772
00:30:17,520 --> 00:30:20,799
on leveraging the these are upset um so

773
00:30:20,799 --> 00:30:22,880
long story short um at that point in

774
00:30:22,880 --> 00:30:23,840
time um

775
00:30:23,840 --> 00:30:26,399
we well decided to to go for a practical

776
00:30:26,399 --> 00:30:28,240
realization of that concept and

777
00:30:28,240 --> 00:30:30,640
had some opportunities by hand um there

778
00:30:30,640 --> 00:30:31,520
were actually

779
00:30:31,520 --> 00:30:34,720
two issues uh the first issue is um that

780
00:30:34,720 --> 00:30:35,120
uh

781
00:30:35,120 --> 00:30:38,159
the the project that um worked on the

782
00:30:38,159 --> 00:30:39,840
cubesat at the technical university of

783
00:30:39,840 --> 00:30:40,720
dresden

784
00:30:40,720 --> 00:30:43,919
um required um a

785
00:30:43,919 --> 00:30:46,080
really simple implementation uh that can

786
00:30:46,080 --> 00:30:46,960
operate on the

787
00:30:46,960 --> 00:30:50,000
arm cortex m5 microcontroller and that

788
00:30:50,000 --> 00:30:51,600
leverages three others as an operating

789
00:30:51,600 --> 00:30:52,159
system

790
00:30:52,159 --> 00:30:55,279
um which was um at least to the best of

791
00:30:55,279 --> 00:30:56,559
our knowledge not available at that

792
00:30:56,559 --> 00:30:57,760
point in time

793
00:30:57,760 --> 00:31:00,000
um and on the other hand while it was

794
00:31:00,000 --> 00:31:00,960
for sure unclear

795
00:31:00,960 --> 00:31:04,320
um if this either offset um

796
00:31:04,320 --> 00:31:06,320
will happen one day um and if our

797
00:31:06,320 --> 00:31:07,760
proposal is accepted so

798
00:31:07,760 --> 00:31:09,919
um we focus in the first place on the uh

799
00:31:09,919 --> 00:31:11,519
geodristin experiment

800
00:31:11,519 --> 00:31:14,799
um and uh started to to build an own

801
00:31:14,799 --> 00:31:16,399
dtn protocol implementation in the

802
00:31:16,399 --> 00:31:18,480
beginning of 2014.

803
00:31:18,480 --> 00:31:20,159
unfortunately unfortunately it was

804
00:31:20,159 --> 00:31:21,840
finally decided um

805
00:31:21,840 --> 00:31:24,640
that um that experiment um will not make

806
00:31:24,640 --> 00:31:25,440
it to the

807
00:31:25,440 --> 00:31:28,399
to dresden uh cubesat as i want to have

808
00:31:28,399 --> 00:31:28,799
had

809
00:31:28,799 --> 00:31:33,039
have very simple payloads only and our

810
00:31:33,039 --> 00:31:35,039
project idea was maybe a little bit too

811
00:31:35,039 --> 00:31:36,240
too complex from them

812
00:31:36,240 --> 00:31:39,200
for them and uh they saw it some some

813
00:31:39,200 --> 00:31:40,159
risk in it

814
00:31:40,159 --> 00:31:43,679
um for their overall goals um so thus

815
00:31:43,679 --> 00:31:47,519
um well even um if it triggered uh

816
00:31:47,519 --> 00:31:50,399
the overall development of micro and pcn

817
00:31:50,399 --> 00:31:52,159
also a

818
00:31:52,159 --> 00:31:54,559
low memory profile uh dpi protocol

819
00:31:54,559 --> 00:31:55,360
implementation

820
00:31:55,360 --> 00:31:56,880
um it didn't make it to to that

821
00:31:56,880 --> 00:31:58,640
experiment and on the other hand well

822
00:31:58,640 --> 00:32:00,640
either

823
00:32:00,640 --> 00:32:02,880
was somehow active but there was not um

824
00:32:02,880 --> 00:32:04,399
continuous feedback from

825
00:32:04,399 --> 00:32:06,399
um from that opportunity so we didn't

826
00:32:06,399 --> 00:32:07,760
know it if it will happen

827
00:32:07,760 --> 00:32:09,440
and um that part of the history will be

828
00:32:09,440 --> 00:32:11,200
relevant in a second uh when i talk

829
00:32:11,200 --> 00:32:12,320
about the first field

830
00:32:12,320 --> 00:32:15,679
tests that we said we did um so well

831
00:32:15,679 --> 00:32:18,399
time moved on um for sure we are delayed

832
00:32:18,399 --> 00:32:19,360
tolerance so we

833
00:32:19,360 --> 00:32:21,840
kept on the track and um uh pushed

834
00:32:21,840 --> 00:32:23,120
forward micro pcn

835
00:32:23,120 --> 00:32:26,399
and as it uh has grown this time

836
00:32:26,399 --> 00:32:29,519
we decided to um to transform it um to

837
00:32:29,519 --> 00:32:29,840
an

838
00:32:29,840 --> 00:32:32,159
a real open source project that is uh

839
00:32:32,159 --> 00:32:34,000
hosted in in gitlab

840
00:32:34,000 --> 00:32:37,679
um felix maybe you you can go on and um

841
00:32:37,679 --> 00:32:40,960
um well i have also fully redesigned it

842
00:32:40,960 --> 00:32:44,159
um and extended its its applicability

843
00:32:44,159 --> 00:32:45,840
so first of all it was intended to to

844
00:32:45,840 --> 00:32:47,760
just run on really

845
00:32:47,760 --> 00:32:50,159
low profile microcontrollers but later

846
00:32:50,159 --> 00:32:52,240
on we added also platform support

847
00:32:52,240 --> 00:32:55,200
for public operating systems and well

848
00:32:55,200 --> 00:32:56,080
linux

849
00:32:56,080 --> 00:32:58,880
um and have developed several

850
00:32:58,880 --> 00:33:01,279
convergency layer adapters um

851
00:33:01,279 --> 00:33:02,880
i don't want to go into the detail of

852
00:33:02,880 --> 00:33:04,320
the architecture and so on but

853
00:33:04,320 --> 00:33:06,000
one thing that will be important in a

854
00:33:06,000 --> 00:33:08,240
second for describing the experiment as

855
00:33:08,240 --> 00:33:09,360
well is

856
00:33:09,360 --> 00:33:12,720
that we needed an opportunity for sure

857
00:33:12,720 --> 00:33:13,120
to

858
00:33:13,120 --> 00:33:15,200
also from the application uh layer

859
00:33:15,200 --> 00:33:16,240
interact with

860
00:33:16,240 --> 00:33:20,640
the ddm protocol implementation with

861
00:33:20,640 --> 00:33:23,840
micro pcn that was well renamed some

862
00:33:23,840 --> 00:33:24,399
time ago

863
00:33:24,399 --> 00:33:27,440
to micro dtn um and for that we we have

864
00:33:27,440 --> 00:33:28,320
developed um

865
00:33:28,320 --> 00:33:31,279
a specific protocol which we named just

866
00:33:31,279 --> 00:33:32,480
uh as we are not

867
00:33:32,480 --> 00:33:34,799
that creative on our naming application

868
00:33:34,799 --> 00:33:36,240
agent protocol

869
00:33:36,240 --> 00:33:39,279
uh aap for sure for short and that

870
00:33:39,279 --> 00:33:40,240
protocol can be

871
00:33:40,240 --> 00:33:43,279
used to transfer typical commands to a

872
00:33:43,279 --> 00:33:45,760
ddn protocol implementation like um

873
00:33:45,760 --> 00:33:47,039
means that you will want to create a

874
00:33:47,039 --> 00:33:48,000
bundle um

875
00:33:48,000 --> 00:33:49,840
or such well you want to hand over some

876
00:33:49,840 --> 00:33:51,120
configuration information

877
00:33:51,120 --> 00:33:53,360
so we defined a set of commands for well

878
00:33:53,360 --> 00:33:54,480
typical operations

879
00:33:54,480 --> 00:33:58,240
um within this uh dtn

880
00:33:58,240 --> 00:34:01,519
protocol implementation um so apart from

881
00:34:01,519 --> 00:34:03,519
this as i said or several cla

882
00:34:03,519 --> 00:34:05,679
implementations have been created like

883
00:34:05,679 --> 00:34:06,559
mtcp

884
00:34:06,559 --> 00:34:10,719
or spp um also over tcp for example

885
00:34:10,719 --> 00:34:14,719
plus also um the first bundled protocol

886
00:34:14,719 --> 00:34:18,079
on version 7 implementation has been

887
00:34:18,079 --> 00:34:20,879
added to our implementation um already

888
00:34:20,879 --> 00:34:22,879
quite some some while ago

889
00:34:22,879 --> 00:34:25,520
and um yeah with this well we have also

890
00:34:25,520 --> 00:34:26,239
received some

891
00:34:26,239 --> 00:34:29,440
some mentioning in the in the itf

892
00:34:29,440 --> 00:34:32,960
draft document felix maybe you can go on

893
00:34:32,960 --> 00:34:35,280
um skips the next slide slide about the

894
00:34:35,280 --> 00:34:36,399
architecture so

895
00:34:36,399 --> 00:34:38,879
let's move to the first few tests so as

896
00:34:38,879 --> 00:34:40,000
i've already mentioned

897
00:34:40,000 --> 00:34:42,719
um there were initially two options for

898
00:34:42,719 --> 00:34:43,440
for testing

899
00:34:43,440 --> 00:34:47,040
everything but um well it

900
00:34:47,280 --> 00:34:51,119
um it took really some time um to um

901
00:34:51,119 --> 00:34:53,760
to to flight test uh things on on

902
00:34:53,760 --> 00:34:54,560
observe so

903
00:34:54,560 --> 00:34:57,040
in the meanwhile to not get bored and

904
00:34:57,040 --> 00:34:59,359
after having a basic version of

905
00:34:59,359 --> 00:35:02,240
micro dtn on slash micropc pcn available

906
00:35:02,240 --> 00:35:03,359
and we decided to

907
00:35:03,359 --> 00:35:06,560
go for a small ether project um to um

908
00:35:06,560 --> 00:35:08,560
do some some fuel testing and that

909
00:35:08,560 --> 00:35:09,680
project uh is named

910
00:35:09,680 --> 00:35:11,359
code sound it was executed in the middle

911
00:35:11,359 --> 00:35:13,599
of 2019 so a little bit more than one

912
00:35:13,599 --> 00:35:14,880
and a half years ago

913
00:35:14,880 --> 00:35:18,079
the idea is that we wanted to build a

914
00:35:18,079 --> 00:35:20,800
system consisting of a underwater

915
00:35:20,800 --> 00:35:21,760
wireless

916
00:35:21,760 --> 00:35:25,359
that's underwater sensor network

917
00:35:25,359 --> 00:35:29,599
which transfers data via a voice system

918
00:35:29,599 --> 00:35:32,160
through a satellite uh link uh to the

919
00:35:32,160 --> 00:35:33,280
internet

920
00:35:33,280 --> 00:35:36,240
um so in this case uh well we for sure

921
00:35:36,240 --> 00:35:37,680
also had the idea to

922
00:35:37,680 --> 00:35:40,640
um to have the ring road approach within

923
00:35:40,640 --> 00:35:42,079
the space segment

924
00:35:42,079 --> 00:35:44,160
however while we can also easily use or

925
00:35:44,160 --> 00:35:45,359
could also easily use

926
00:35:45,359 --> 00:35:47,680
um existing satellite networks this is

927
00:35:47,680 --> 00:35:48,720
what we exactly do

928
00:35:48,720 --> 00:35:52,320
i did felix next slide

929
00:35:52,320 --> 00:35:55,359
so in this test um well the idea was

930
00:35:55,359 --> 00:35:56,480
then to transfer

931
00:35:56,480 --> 00:35:58,720
typical data that you um can gather

932
00:35:58,720 --> 00:36:00,560
easily under water like temperature

933
00:36:00,560 --> 00:36:03,200
like uh pressure and so on and so on um

934
00:36:03,200 --> 00:36:04,480
via a homebrew

935
00:36:04,480 --> 00:36:08,079
um sensor network and um

936
00:36:08,079 --> 00:36:11,040
from this sensor network um we

937
00:36:11,040 --> 00:36:11,680
transferred

938
00:36:11,680 --> 00:36:14,320
the data to a spoil system that i've

939
00:36:14,320 --> 00:36:15,200
just mentioned

940
00:36:15,200 --> 00:36:17,839
handed it over to micro dtn um and then

941
00:36:17,839 --> 00:36:18,400
via

942
00:36:18,400 --> 00:36:21,839
mtcp um in a specific relay

943
00:36:21,839 --> 00:36:23,440
that we have built on through the

944
00:36:23,440 --> 00:36:25,520
inverse satellite iot network

945
00:36:25,520 --> 00:36:28,800
um to a remote web service and from

946
00:36:28,800 --> 00:36:29,839
there it was then

947
00:36:29,839 --> 00:36:33,119
transferred um via mpcp again to micro

948
00:36:33,119 --> 00:36:34,079
dtn

949
00:36:34,079 --> 00:36:37,040
um so um yeah we did some some testing

950
00:36:37,040 --> 00:36:38,560
maybe you can show some some

951
00:36:38,560 --> 00:36:40,640
pictures on the next slides i always

952
00:36:40,640 --> 00:36:42,720
like to show such pictures uh here so

953
00:36:42,720 --> 00:36:43,280
it's really

954
00:36:43,280 --> 00:36:46,000
uh getting our hands dirty um or maybe

955
00:36:46,000 --> 00:36:47,440
also the next one as well

956
00:36:47,440 --> 00:36:49,280
um where we did the first bundle

957
00:36:49,280 --> 00:36:51,119
protocol version seven testing

958
00:36:51,119 --> 00:36:54,240
on in a lake nearby um where we when

959
00:36:54,240 --> 00:36:56,880
uh pulled uh that sets that overall boy

960
00:36:56,880 --> 00:36:58,960
system as well as a

961
00:36:58,960 --> 00:37:00,640
underwater network so it was a sort of

962
00:37:00,640 --> 00:37:02,800
mobile underwater network even

963
00:37:02,800 --> 00:37:05,440
um through a lake and um um transferred

964
00:37:05,440 --> 00:37:06,720
data continuously

965
00:37:06,720 --> 00:37:10,320
um to a monitoring system in the

966
00:37:10,320 --> 00:37:10,960
internet

967
00:37:10,960 --> 00:37:12,640
leveraging the bundle protocol version

968
00:37:12,640 --> 00:37:14,960
seven so that was our answer to

969
00:37:14,960 --> 00:37:16,880
not having a flight opportunity for

970
00:37:16,880 --> 00:37:18,480
quite some years um that we at least

971
00:37:18,480 --> 00:37:20,160
were able to play a little bit around

972
00:37:20,160 --> 00:37:21,359
with the protocols

973
00:37:21,359 --> 00:37:24,079
test everything and plug things together

974
00:37:24,079 --> 00:37:24,720
and to

975
00:37:24,720 --> 00:37:26,720
have some practical experiences next

976
00:37:26,720 --> 00:37:28,640
slide please

977
00:37:28,640 --> 00:37:31,839
so um well then um

978
00:37:31,839 --> 00:37:35,440
after really years finally the offset

979
00:37:35,440 --> 00:37:38,800
was well launched and

980
00:37:38,800 --> 00:37:40,400
became reality maybe some basic

981
00:37:40,400 --> 00:37:42,079
information about that um

982
00:37:42,079 --> 00:37:44,079
that satellite it's a three-year

983
00:37:44,079 --> 00:37:45,599
cubesats it was launched in december

984
00:37:45,599 --> 00:37:46,720
2019

985
00:37:46,720 --> 00:37:48,480
um and then while it took one year

986
00:37:48,480 --> 00:37:50,079
before experiments were allowed

987
00:37:50,079 --> 00:37:52,240
and our experiment was the first one um

988
00:37:52,240 --> 00:37:53,119
so it was a

989
00:37:53,119 --> 00:37:55,599
well simple um ring road concept that

990
00:37:55,599 --> 00:37:56,480
was explored

991
00:37:56,480 --> 00:37:59,040
um maybe some information about the

992
00:37:59,040 --> 00:37:59,920
usage

993
00:37:59,920 --> 00:38:04,320
of the the upside um so in the end we

994
00:38:04,320 --> 00:38:07,599
we could start a payload there um and

995
00:38:07,599 --> 00:38:10,000
connect to a local port or tcp port

996
00:38:10,000 --> 00:38:12,240
and transfer data via sbp to this tcp

997
00:38:12,240 --> 00:38:13,760
port and well if a

998
00:38:13,760 --> 00:38:16,720
ground station is inside um then the

999
00:38:16,720 --> 00:38:18,079
data will be handed over

1000
00:38:18,079 --> 00:38:20,720
and um either offered um um the

1001
00:38:20,720 --> 00:38:22,160
so-called either smile lab so

1002
00:38:22,160 --> 00:38:24,480
a ground station in dumstraps germany um

1003
00:38:24,480 --> 00:38:25,599
in order to

1004
00:38:25,599 --> 00:38:27,839
um to fetch the data via some um some

1005
00:38:27,839 --> 00:38:28,880
reverse ssa

1006
00:38:28,880 --> 00:38:31,200
uh ssh port forwarding um so in the end

1007
00:38:31,200 --> 00:38:32,800
well we were just able to pass

1008
00:38:32,800 --> 00:38:35,680
um spp packets from us observed um to

1009
00:38:35,680 --> 00:38:36,480
the ground segment

1010
00:38:36,480 --> 00:38:39,839
next slide please um based on that setup

1011
00:38:39,839 --> 00:38:42,880
we have developed a small scenario

1012
00:38:42,880 --> 00:38:44,640
um so it demonstrates a ring road

1013
00:38:44,640 --> 00:38:46,000
approach side here is

1014
00:38:46,000 --> 00:38:48,480
a code spot um not having an internet

1015
00:38:48,480 --> 00:38:49,920
connection and from there we were

1016
00:38:49,920 --> 00:38:52,320
wanted to be able to to query our

1017
00:38:52,320 --> 00:38:53,040
websites

1018
00:38:53,040 --> 00:38:54,960
so the idea is that there's a remote

1019
00:38:54,960 --> 00:38:56,800
user that wants to assess leveraging

1020
00:38:56,800 --> 00:38:58,320
http a website

1021
00:38:58,320 --> 00:39:01,200
and an http request is then transferred

1022
00:39:01,200 --> 00:39:02,320
by a gateway

1023
00:39:02,320 --> 00:39:05,680
um to um um

1024
00:39:05,680 --> 00:39:08,720
to a micro dtn that encapsulates the

1025
00:39:08,720 --> 00:39:11,040
http request um in a bundle and hence

1026
00:39:11,040 --> 00:39:12,880
over the bundle then to the space

1027
00:39:12,880 --> 00:39:14,480
segment

1028
00:39:14,480 --> 00:39:16,800
this hanging over is done leveraging a

1029
00:39:16,800 --> 00:39:18,320
specific component that we call

1030
00:39:18,320 --> 00:39:21,119
dispatcher or it's also offered as open

1031
00:39:21,119 --> 00:39:21,920
source

1032
00:39:21,920 --> 00:39:24,960
if somebody is interested it's a simple

1033
00:39:24,960 --> 00:39:26,560
component that whether it's possible to

1034
00:39:26,560 --> 00:39:28,240
simulate different ground stations as we

1035
00:39:28,240 --> 00:39:29,119
only had one

1036
00:39:29,119 --> 00:39:31,920
well we needed to introduce virtual ones

1037
00:39:31,920 --> 00:39:33,359
uh so the dispatcher

1038
00:39:33,359 --> 00:39:34,800
then connects at a specific point in

1039
00:39:34,800 --> 00:39:36,640
time or in a specific time span

1040
00:39:36,640 --> 00:39:39,760
with one of the micro dtn instances

1041
00:39:39,760 --> 00:39:41,599
of simulating different uh ground

1042
00:39:41,599 --> 00:39:43,520
stations and

1043
00:39:43,520 --> 00:39:46,079
leveraging um spp well as i've just

1044
00:39:46,079 --> 00:39:47,280
mentioned we handed over

1045
00:39:47,280 --> 00:39:49,090
bundle protocol version seven um

1046
00:39:49,090 --> 00:39:50,720
[Music]

1047
00:39:50,720 --> 00:39:53,839
instances uh to a micro gta um an

1048
00:39:53,839 --> 00:39:54,320
instance

1049
00:39:54,320 --> 00:39:56,480
operating on the upside and then back to

1050
00:39:56,480 --> 00:39:57,680
the ground um

1051
00:39:57,680 --> 00:40:00,480
where well again some gateway carried

1052
00:40:00,480 --> 00:40:01,520
for transferring

1053
00:40:01,520 --> 00:40:03,760
the http request to um to then a real

1054
00:40:03,760 --> 00:40:05,200
request to a web server

1055
00:40:05,200 --> 00:40:08,400
and from there well the pass um back

1056
00:40:08,400 --> 00:40:09,040
again

1057
00:40:09,040 --> 00:40:12,720
or was sent and selected

1058
00:40:12,720 --> 00:40:15,119
by the offset back to the the requesting

1059
00:40:15,119 --> 00:40:15,920
user

1060
00:40:15,920 --> 00:40:17,680
uh one information about that that

1061
00:40:17,680 --> 00:40:19,760
figure so you see an iron instance and

1062
00:40:19,760 --> 00:40:20,880
some information about

1063
00:40:20,880 --> 00:40:24,079
the dsn um on the on the bottom

1064
00:40:24,079 --> 00:40:26,000
uh so the reason for that is uh that

1065
00:40:26,000 --> 00:40:27,280
initially we um

1066
00:40:27,280 --> 00:40:28,720
planned also in the discussion with

1067
00:40:28,720 --> 00:40:30,960
scott um to have an extended version

1068
00:40:30,960 --> 00:40:32,000
where we wanted to

1069
00:40:32,000 --> 00:40:36,240
simulate a sort of um well um

1070
00:40:36,240 --> 00:40:38,400
communication from a ring road uh

1071
00:40:38,400 --> 00:40:39,760
realized on planet mars

1072
00:40:39,760 --> 00:40:43,119
uh to earth um uh where well dsn

1073
00:40:43,119 --> 00:40:45,200
uh would have played a role um

1074
00:40:45,200 --> 00:40:46,640
unfortunately so far there's no

1075
00:40:46,640 --> 00:40:49,440
no no no feedback on on on the requests

1076
00:40:49,440 --> 00:40:49,760
but

1077
00:40:49,760 --> 00:40:51,920
we can discuss this with scott again um

1078
00:40:51,920 --> 00:40:53,280
but that would be an option for

1079
00:40:53,280 --> 00:40:54,400
extending the experiment

1080
00:40:54,400 --> 00:40:57,520
um later on yeah felix will now use the

1081
00:40:57,520 --> 00:40:59,599
last two minutes in order to get

1082
00:40:59,599 --> 00:41:03,359
some details on on that experiment

1083
00:41:03,520 --> 00:41:06,880
thanks marius i hope you can hear me so

1084
00:41:06,880 --> 00:41:08,640
um yeah i would like to shed some light

1085
00:41:08,640 --> 00:41:11,040
on some technical details of this

1086
00:41:11,040 --> 00:41:12,880
experiment so what happened

1087
00:41:12,880 --> 00:41:16,160
during the course of this experiment so

1088
00:41:16,160 --> 00:41:18,319
first of all of course what we had to do

1089
00:41:18,319 --> 00:41:19,440
here is

1090
00:41:19,440 --> 00:41:22,720
uh to configure all um

1091
00:41:22,720 --> 00:41:25,680
these instances all these services which

1092
00:41:25,680 --> 00:41:26,720
we're running

1093
00:41:26,720 --> 00:41:29,440
and we can take a look at how we

1094
00:41:29,440 --> 00:41:30,880
configured for example

1095
00:41:30,880 --> 00:41:34,960
the micro dtn instance on the offset

1096
00:41:34,960 --> 00:41:38,240
um let's shortly have a look at the code

1097
00:41:38,240 --> 00:41:38,960
so this is

1098
00:41:38,960 --> 00:41:41,839
just a part of our script which uh con

1099
00:41:41,839 --> 00:41:42,800
configured and

1100
00:41:42,800 --> 00:41:45,839
ran the experiment and

1101
00:41:45,839 --> 00:41:48,400
what we can see here is that we leverage

1102
00:41:48,400 --> 00:41:51,520
a small python tool aapsend.pi

1103
00:41:51,520 --> 00:41:54,960
which um sends an aap packet to a

1104
00:41:54,960 --> 00:41:58,240
given micro dtn instance specified by

1105
00:41:58,240 --> 00:42:02,480
a tcp endpoint and um this aap packet

1106
00:42:02,480 --> 00:42:03,839
contains a destination

1107
00:42:03,839 --> 00:42:07,599
eid as well as a bundle payload

1108
00:42:07,599 --> 00:42:10,560
and the micro dtn instance will then

1109
00:42:10,560 --> 00:42:10,960
take

1110
00:42:10,960 --> 00:42:13,040
this and make this the payload of an

1111
00:42:13,040 --> 00:42:14,079
actual

1112
00:42:14,079 --> 00:42:16,880
bp version 7 bundle and send it to the

1113
00:42:16,880 --> 00:42:18,160
specified

1114
00:42:18,160 --> 00:42:22,079
endpoint id and what you can see here is

1115
00:42:22,079 --> 00:42:23,839
is basically the payload of one of our

1116
00:42:23,839 --> 00:42:25,359
configuration messages

1117
00:42:25,359 --> 00:42:27,520
so this is a quite a basic

1118
00:42:27,520 --> 00:42:28,480
straightforward

1119
00:42:28,480 --> 00:42:32,000
configuration format that consists of

1120
00:42:32,000 --> 00:42:34,720
first a command that is this number one

1121
00:42:34,720 --> 00:42:35,520
at the start

1122
00:42:35,520 --> 00:42:39,119
which just says add this contact

1123
00:42:39,119 --> 00:42:41,200
to the local contact plan and then we

1124
00:42:41,200 --> 00:42:42,240
have the

1125
00:42:42,240 --> 00:42:44,880
endpoint identifier of our ground

1126
00:42:44,880 --> 00:42:45,680
station

1127
00:42:45,680 --> 00:42:47,599
of our hotspot ground station first of

1128
00:42:47,599 --> 00:42:49,359
all and this is addressed

1129
00:42:49,359 --> 00:42:52,240
or this is reached via a tcp spp

1130
00:42:52,240 --> 00:42:53,280
convergence layer

1131
00:42:53,280 --> 00:42:55,440
so space packet protocol encapsulated

1132
00:42:55,440 --> 00:42:57,440
into a tcp connection

1133
00:42:57,440 --> 00:43:00,240
and then we have the contacts which can

1134
00:43:00,240 --> 00:43:01,359
be added here

1135
00:43:01,359 --> 00:43:04,160
um where we simply specify one contact

1136
00:43:04,160 --> 00:43:04,960
um by

1137
00:43:04,960 --> 00:43:06,960
two variables that contain the dtn

1138
00:43:06,960 --> 00:43:09,119
timestamps of the contact interval

1139
00:43:09,119 --> 00:43:11,280
as well as a bitrate for calculating

1140
00:43:11,280 --> 00:43:12,400
contact volume

1141
00:43:12,400 --> 00:43:15,680
and this is also done of course for

1142
00:43:15,680 --> 00:43:18,240
the cold spot contact and when this is

1143
00:43:18,240 --> 00:43:19,280
configured and

1144
00:43:19,280 --> 00:43:21,760
as well of course uh the dispatcher

1145
00:43:21,760 --> 00:43:22,400
service

1146
00:43:22,400 --> 00:43:25,200
is configured with the same parameters

1147
00:43:25,200 --> 00:43:26,000
then we

1148
00:43:26,000 --> 00:43:29,359
can send a request to our

1149
00:43:29,359 --> 00:43:32,640
hd http uh gateway that we can

1150
00:43:32,640 --> 00:43:35,839
um see here and for this we leverage

1151
00:43:35,839 --> 00:43:36,720
curl

1152
00:43:36,720 --> 00:43:41,280
um which gets set in http proxy

1153
00:43:41,280 --> 00:43:45,359
and um of course also and quite uh

1154
00:43:45,359 --> 00:43:49,119
an increase in the in the um maximum

1155
00:43:49,119 --> 00:43:51,599
um allowed delay for the request so that

1156
00:43:51,599 --> 00:43:53,119
we don't run into a timeout

1157
00:43:53,119 --> 00:43:55,680
here and then um we add simply the the

1158
00:43:55,680 --> 00:43:57,520
url which shall be requested

1159
00:43:57,520 --> 00:44:01,040
and the http um contents are then

1160
00:44:01,040 --> 00:44:03,359
sent to the communication gateway which

1161
00:44:03,359 --> 00:44:05,440
will forward them via aap

1162
00:44:05,440 --> 00:44:07,440
the bundle will be generated this goes

1163
00:44:07,440 --> 00:44:08,560
to the offset

1164
00:44:08,560 --> 00:44:11,280
the offset routes the bundle um back to

1165
00:44:11,280 --> 00:44:13,359
via the dispatcher to the micro dtn

1166
00:44:13,359 --> 00:44:14,319
instance

1167
00:44:14,319 --> 00:44:16,560
two and then it will reach um the web

1168
00:44:16,560 --> 00:44:18,400
server via the communication gateway

1169
00:44:18,400 --> 00:44:20,880
and when we take a look at the log files

1170
00:44:20,880 --> 00:44:21,760
which were

1171
00:44:21,760 --> 00:44:23,920
um produced during the test we can first

1172
00:44:23,920 --> 00:44:25,359
of all take a look at this

1173
00:44:25,359 --> 00:44:28,960
instance micro dtn one where we see

1174
00:44:28,960 --> 00:44:32,000
that it first of all receives a um

1175
00:44:32,000 --> 00:44:35,440
bundle payload via aap it makes a bundle

1176
00:44:35,440 --> 00:44:36,319
out of it

1177
00:44:36,319 --> 00:44:39,280
it routes the bundle so and shows that

1178
00:44:39,280 --> 00:44:39,839
okay

1179
00:44:39,839 --> 00:44:42,880
the bundle has been scheduled and then

1180
00:44:42,880 --> 00:44:46,000
um a connection is created

1181
00:44:46,000 --> 00:44:49,599
to um the dispatcher to to the esa

1182
00:44:49,599 --> 00:44:52,079
um ground station wireless dispatcher

1183
00:44:52,079 --> 00:44:52,640
and

1184
00:44:52,640 --> 00:44:54,960
um the bundles the bundle is scheduled

1185
00:44:54,960 --> 00:44:56,240
for this contact and

1186
00:44:56,240 --> 00:44:59,599
uh sent via this connection

1187
00:44:59,599 --> 00:45:03,119
and then we can take a look um also at

1188
00:45:03,119 --> 00:45:06,240
the micro dtn instance three um when the

1189
00:45:06,240 --> 00:45:08,160
bundle comes back from the satellite

1190
00:45:08,160 --> 00:45:12,160
we see that um here

1191
00:45:12,160 --> 00:45:15,119
again a contact starts um with a

1192
00:45:15,119 --> 00:45:16,400
dispatcher service

1193
00:45:16,400 --> 00:45:19,520
and then we get a bundle

1194
00:45:19,520 --> 00:45:22,560
um for a local endpoint which is then

1195
00:45:22,560 --> 00:45:26,319
delivered again via aap to

1196
00:45:26,319 --> 00:45:30,319
the um http proxy um which send it

1197
00:45:30,319 --> 00:45:32,240
the request to the web server the web

1198
00:45:32,240 --> 00:45:33,440
server will answer

1199
00:45:33,440 --> 00:45:36,480
and then we even get the response uh

1200
00:45:36,480 --> 00:45:38,960
from which another bundle is created and

1201
00:45:38,960 --> 00:45:40,319
this is sent back

1202
00:45:40,319 --> 00:45:43,599
to our satellite in this case um

1203
00:45:43,599 --> 00:45:45,520
unfortunately during this experiment we

1204
00:45:45,520 --> 00:45:46,079
could not

1205
00:45:46,079 --> 00:45:48,960
um verify the whole return path as the

1206
00:45:48,960 --> 00:45:50,079
contact wasn't

1207
00:45:50,079 --> 00:45:52,400
simply over it was a quite short contact

1208
00:45:52,400 --> 00:45:54,160
but we aim to

1209
00:45:54,160 --> 00:45:56,400
test this during our next opportunity

1210
00:45:56,400 --> 00:45:58,319
which will hopefully occur

1211
00:45:58,319 --> 00:46:02,079
soon so all in all um

1212
00:46:02,079 --> 00:46:04,560
from on this experiment um we can

1213
00:46:04,560 --> 00:46:05,599
summarize that

1214
00:46:05,599 --> 00:46:07,280
the bundle protocol version seven as

1215
00:46:07,280 --> 00:46:08,640
well as our

1216
00:46:08,640 --> 00:46:10,880
uh implementation worked without any

1217
00:46:10,880 --> 00:46:12,720
issues however what we

1218
00:46:12,720 --> 00:46:15,680
identified as an issue is that uh

1219
00:46:15,680 --> 00:46:16,880
routing and forwarding

1220
00:46:16,880 --> 00:46:19,359
simply based on time stems is quite

1221
00:46:19,359 --> 00:46:20,560
error prone

1222
00:46:20,560 --> 00:46:23,839
um so uh in this experiment we had no

1223
00:46:23,839 --> 00:46:27,440
mechanism um to to to notice

1224
00:46:27,440 --> 00:46:30,960
that the actual link to the satellite um

1225
00:46:30,960 --> 00:46:34,319
is up and and um so that

1226
00:46:34,319 --> 00:46:36,400
our bundle protocol implementation can

1227
00:46:36,400 --> 00:46:37,599
react to this

1228
00:46:37,599 --> 00:46:39,520
so the the forwarding of the bundles

1229
00:46:39,520 --> 00:46:40,800
purely occurred

1230
00:46:40,800 --> 00:46:43,280
due to the timestamps and of course for

1231
00:46:43,280 --> 00:46:45,440
this you need a very accurate

1232
00:46:45,440 --> 00:46:48,319
and precise clock synchronization um

1233
00:46:48,319 --> 00:46:49,280
which was

1234
00:46:49,280 --> 00:46:52,480
a bit of an issue for us also

1235
00:46:52,480 --> 00:46:55,680
what we want to highlight is um that a

1236
00:46:55,680 --> 00:46:57,760
standardized mechanisms for

1237
00:46:57,760 --> 00:46:59,680
configuration and management

1238
00:46:59,680 --> 00:47:03,200
um would be uh very good so on our side

1239
00:47:03,200 --> 00:47:03,920
we have this

1240
00:47:03,920 --> 00:47:06,000
very simple configuration format which

1241
00:47:06,000 --> 00:47:07,359
which i have shown

1242
00:47:07,359 --> 00:47:09,520
in the future of course we also want to

1243
00:47:09,520 --> 00:47:11,119
explore amp

1244
00:47:11,119 --> 00:47:12,960
but i i think it's quite important to

1245
00:47:12,960 --> 00:47:14,560
have something

1246
00:47:14,560 --> 00:47:17,200
standardized here to interact also with

1247
00:47:17,200 --> 00:47:18,560
heterogeneous

1248
00:47:18,560 --> 00:47:21,119
implementations of the bundled protocol

1249
00:47:21,119 --> 00:47:21,599
and

1250
00:47:21,599 --> 00:47:23,599
last but not least what would be also

1251
00:47:23,599 --> 00:47:25,040
massively useful

1252
00:47:25,040 --> 00:47:28,400
for us would be some basic tools

1253
00:47:28,400 --> 00:47:31,760
which are able um to check on the bundle

1254
00:47:31,760 --> 00:47:32,400
layer

1255
00:47:32,400 --> 00:47:34,880
on the availability of other abundant

1256
00:47:34,880 --> 00:47:36,400
protocol agents as well as their

1257
00:47:36,400 --> 00:47:38,240
operational states so simply like

1258
00:47:38,240 --> 00:47:41,040
like something like a a ping utility

1259
00:47:41,040 --> 00:47:42,880
which can be used to simply check

1260
00:47:42,880 --> 00:47:44,640
whether the instance running on the

1261
00:47:44,640 --> 00:47:47,760
offset is alive and well

1262
00:47:47,760 --> 00:47:50,800
so um at the end we would like to

1263
00:47:50,800 --> 00:47:54,000
motivate everyone to participate in more

1264
00:47:54,000 --> 00:47:56,800
practical tests and experiments and

1265
00:47:56,800 --> 00:47:57,760
collaborate

1266
00:47:57,760 --> 00:48:01,119
on to drive really these things

1267
00:48:01,119 --> 00:48:04,000
forward so if you have any questions

1268
00:48:04,000 --> 00:48:06,079
feel free to ask and otherwise thanks so

1269
00:48:06,079 --> 00:48:08,960
much for your attention

1270
00:48:08,960 --> 00:48:11,520
thank you very much both of you uh that

1271
00:48:11,520 --> 00:48:13,520
was really interesting it's it's

1272
00:48:13,520 --> 00:48:15,839
your conclusions were very interesting

1273
00:48:15,839 --> 00:48:17,520
and i think we'll feed into

1274
00:48:17,520 --> 00:48:19,520
the the discussion we'll have after the

1275
00:48:19,520 --> 00:48:20,559
presentations

1276
00:48:20,559 --> 00:48:22,160
uh particularly your comment about time

1277
00:48:22,160 --> 00:48:24,559
based routing that's that's interesting

1278
00:48:24,559 --> 00:48:27,920
um do we have any questions nobody in

1279
00:48:27,920 --> 00:48:28,640
the queue

1280
00:48:28,640 --> 00:48:32,079
and i'm watching our time so

1281
00:48:32,079 --> 00:48:35,359
if not thank you both very much

1282
00:48:35,359 --> 00:48:39,920
and uh next up brian

1283
00:48:42,640 --> 00:48:46,880
are you there brian uh go ahead

1284
00:48:46,880 --> 00:48:48,559
so brian i have you on the agenda as

1285
00:48:48,559 --> 00:48:50,079
talking about the udpcl

1286
00:48:50,079 --> 00:48:51,920
i know you wanted to say a few things

1287
00:48:51,920 --> 00:48:53,599
about cozy and there were a couple of

1288
00:48:53,599 --> 00:48:55,040
slides there for it

1289
00:48:55,040 --> 00:48:57,280
i'll let you combine the two we're

1290
00:48:57,280 --> 00:48:59,040
compressing time slightly so you

1291
00:48:59,040 --> 00:49:02,800
quarter of an hour try and fit in what

1292
00:49:02,800 --> 00:49:06,240
sure uh i messed up my screen sharing so

1293
00:49:06,240 --> 00:49:07,599
i tried again

1294
00:49:07,599 --> 00:49:17,839
it's all right i have to click again

1295
00:49:24,079 --> 00:49:27,359
the fireworks

1296
00:49:28,880 --> 00:49:32,240
sorry for this light delay here

1297
00:49:34,079 --> 00:49:37,359
i have some if you don't

1298
00:49:40,800 --> 00:49:44,160
just trying to get okay yay so i should

1299
00:49:44,160 --> 00:49:47,200
be coming through now yes

1300
00:49:47,280 --> 00:49:51,119
um so the first thing i want to discuss

1301
00:49:51,119 --> 00:49:54,480
are potential updates to udpcl

1302
00:49:54,480 --> 00:49:57,280
um and these are all kind of at this

1303
00:49:57,280 --> 00:49:58,079
point

1304
00:49:58,079 --> 00:50:01,280
speculation and open for question

1305
00:50:01,280 --> 00:50:04,720
but the the main idea is that

1306
00:50:04,720 --> 00:50:08,880
udp provides some unique behaviors

1307
00:50:08,880 --> 00:50:12,240
that other transports uh

1308
00:50:12,240 --> 00:50:15,200
are not going to have and the the main

1309
00:50:15,200 --> 00:50:15,760
goal

1310
00:50:15,760 --> 00:50:18,880
of all of this discussion is

1311
00:50:18,880 --> 00:50:22,160
um in a sense backwards compatibility

1312
00:50:22,160 --> 00:50:24,000
for the very simple use case of one

1313
00:50:24,000 --> 00:50:26,000
bundle turns into one datagram

1314
00:50:26,000 --> 00:50:29,280
it goes away and the convergence layer

1315
00:50:29,280 --> 00:50:31,119
is done

1316
00:50:31,119 --> 00:50:34,800
and there's a top-level question

1317
00:50:34,800 --> 00:50:41,119
about bpv6 and bpv7 compatibility and

1318
00:50:41,119 --> 00:50:42,559
backward support that hadn't been

1319
00:50:42,559 --> 00:50:44,800
brought up earlier so

1320
00:50:44,800 --> 00:50:46,079
a lot of these topics are going to be

1321
00:50:46,079 --> 00:50:48,160
kind of open questions

1322
00:50:48,160 --> 00:50:51,118
at least in the near term

1323
00:50:51,520 --> 00:50:53,280
but because of the different encodings

1324
00:50:53,280 --> 00:50:54,880
between v6 and v7

1325
00:50:54,880 --> 00:50:58,079
you can't disambiguate them in a

1326
00:50:58,079 --> 00:51:00,640
deterministic way so there's not any

1327
00:51:00,640 --> 00:51:02,400
issue of not being able to do it's just

1328
00:51:02,400 --> 00:51:03,760
a question of

1329
00:51:03,760 --> 00:51:07,200
what's required the next area

1330
00:51:07,200 --> 00:51:09,119
is about unspecified weak points of the

1331
00:51:09,119 --> 00:51:10,480
current youtube pcl

1332
00:51:10,480 --> 00:51:12,160
uh which is very simple and

1333
00:51:12,160 --> 00:51:14,079
straightforward but it leads some things

1334
00:51:14,079 --> 00:51:16,640
to imagination and to implementation

1335
00:51:16,640 --> 00:51:18,880
uh one thing that i ran into when i was

1336
00:51:18,880 --> 00:51:22,000
just experimenting with the udpcl was i

1337
00:51:22,000 --> 00:51:24,640
was doing some work with the bp sec

1338
00:51:24,640 --> 00:51:28,720
and with security transports and when

1339
00:51:28,720 --> 00:51:32,640
things like certificate change

1340
00:51:32,640 --> 00:51:36,000
are involved the size of the bundles

1341
00:51:36,000 --> 00:51:37,040
we're starting to approach

1342
00:51:37,040 --> 00:51:41,040
or exceed the the path mtu on my network

1343
00:51:41,040 --> 00:51:44,319
which is not that big uh 1500

1344
00:51:44,319 --> 00:51:47,599
to 1200 bytes is is kind of a typical

1345
00:51:47,599 --> 00:51:50,640
mtu um so in

1346
00:51:50,640 --> 00:51:53,280
the individual draft that i posted was a

1347
00:51:53,280 --> 00:51:54,640
very very simple

1348
00:51:54,640 --> 00:51:57,839
uh unacknowledged still way of doing

1349
00:51:57,839 --> 00:52:01,280
uh convergence layer fragmentation um

1350
00:52:01,280 --> 00:52:03,359
and the other thing that's not mentioned

1351
00:52:03,359 --> 00:52:05,520
in the original udpcl was

1352
00:52:05,520 --> 00:52:08,240
how unicast versus multicast are to be

1353
00:52:08,240 --> 00:52:09,040
used

1354
00:52:09,040 --> 00:52:12,640
and bp agent level interface

1355
00:52:12,640 --> 00:52:15,680
details like should an agent or must an

1356
00:52:15,680 --> 00:52:16,559
agent choose

1357
00:52:16,559 --> 00:52:19,760
what network interface a

1358
00:52:19,760 --> 00:52:22,960
uh a bundle be transported on

1359
00:52:22,960 --> 00:52:25,440
um things like that and then the the

1360
00:52:25,440 --> 00:52:27,520
next topic is about extensibility and

1361
00:52:27,520 --> 00:52:29,200
interoperable security

1362
00:52:29,200 --> 00:52:32,559
in the same way as the updates to tcpcl

1363
00:52:32,559 --> 00:52:34,960
involved a lot of discussions with ietf

1364
00:52:34,960 --> 00:52:36,000
best practices and

1365
00:52:36,000 --> 00:52:39,200
around security and tls um

1366
00:52:39,200 --> 00:52:40,720
it seems like this is a reasonable thing

1367
00:52:40,720 --> 00:52:42,800
to at least specify in the same vein as

1368
00:52:42,800 --> 00:52:44,079
tcpcl

1369
00:52:44,079 --> 00:52:46,880
where it is uh here's how to do it when

1370
00:52:46,880 --> 00:52:48,480
you're configured to do it but nobody's

1371
00:52:48,480 --> 00:52:51,040
saying you have to do it

1372
00:52:51,040 --> 00:52:54,319
and um and again the

1373
00:52:54,319 --> 00:52:58,000
the goal is this uh send and forget

1374
00:52:58,000 --> 00:52:59,839
type of strategy with this convergence

1375
00:52:59,839 --> 00:53:01,359
layer is that it's very simple it's

1376
00:53:01,359 --> 00:53:02,400
straightforward there's no

1377
00:53:02,400 --> 00:53:05,119
convergence layer acknowledgements it's

1378
00:53:05,119 --> 00:53:05,520
the

1379
00:53:05,520 --> 00:53:07,680
the bundles go out and something else

1380
00:53:07,680 --> 00:53:08,559
worries about

1381
00:53:08,559 --> 00:53:11,760
acknowledgement and um

1382
00:53:11,760 --> 00:53:14,480
also doing um congestion control things

1383
00:53:14,480 --> 00:53:16,319
like that

1384
00:53:16,319 --> 00:53:18,000
the last thing i ran into when i was

1385
00:53:18,000 --> 00:53:19,839
looking at some other similar protocols

1386
00:53:19,839 --> 00:53:20,480
was

1387
00:53:20,480 --> 00:53:24,079
uh bundle packing within datagrams for

1388
00:53:24,079 --> 00:53:26,800
efficiency purposes right now the the

1389
00:53:26,800 --> 00:53:27,680
udpcl

1390
00:53:27,680 --> 00:53:30,160
very explicitly says one bundle one

1391
00:53:30,160 --> 00:53:31,119
datagram

1392
00:53:31,119 --> 00:53:34,640
uh but if you have very small bundles um

1393
00:53:34,640 --> 00:53:37,440
does it make sense to allow packing uh

1394
00:53:37,440 --> 00:53:39,440
to fill up datagram sizes

1395
00:53:39,440 --> 00:53:42,240
and then the last thing that i had uh

1396
00:53:42,240 --> 00:53:43,680
run into and hadn't written anything up

1397
00:53:43,680 --> 00:53:45,040
about this yet is

1398
00:53:45,040 --> 00:53:47,839
uh in circumstances where an agent is

1399
00:53:47,839 --> 00:53:50,000
behind a nat

1400
00:53:50,000 --> 00:53:53,040
i can't open up a port uh arbitrarily

1401
00:53:53,040 --> 00:53:55,040
but what i can do is i can establish a

1402
00:53:55,040 --> 00:53:56,880
udp conversation that's going to

1403
00:53:56,880 --> 00:54:00,559
get through a firewall and through a nat

1404
00:54:00,559 --> 00:54:03,440
and that i can potentially advertise

1405
00:54:03,440 --> 00:54:03,920
here i

1406
00:54:03,920 --> 00:54:06,400
am are there any bundles for me in the

1407
00:54:06,400 --> 00:54:07,040
same ways

1408
00:54:07,040 --> 00:54:10,880
that the tcpcl allows bi-directional

1409
00:54:10,880 --> 00:54:12,480
uh communication allows but doesn't

1410
00:54:12,480 --> 00:54:14,800
mandate

1411
00:54:14,800 --> 00:54:19,040
um so i did uh post an independent draft

1412
00:54:19,040 --> 00:54:22,319
um and i had some really minor last

1413
00:54:22,319 --> 00:54:23,359
edits that i made

1414
00:54:23,359 --> 00:54:25,920
but i got cut off by the data tracker

1415
00:54:25,920 --> 00:54:26,720
freeze

1416
00:54:26,720 --> 00:54:30,000
um but it does it covers a lot of these

1417
00:54:30,000 --> 00:54:31,280
topics

1418
00:54:31,280 --> 00:54:34,800
unicast multicast fragmented

1419
00:54:34,800 --> 00:54:38,079
transfer dtls use

1420
00:54:38,079 --> 00:54:41,119
and also i

1421
00:54:41,119 --> 00:54:43,920
i open up a bunch of different issues on

1422
00:54:43,920 --> 00:54:44,319
these

1423
00:54:44,319 --> 00:54:46,640
specific topics here about bundle

1424
00:54:46,640 --> 00:54:49,440
packing about

1425
00:54:49,920 --> 00:54:53,359
fragmentation above and below

1426
00:54:53,359 --> 00:54:56,079
mtu discovery is a thing that you run

1427
00:54:56,079 --> 00:54:56,799
into when you

1428
00:54:56,799 --> 00:55:00,079
start dealing with a packetization

1429
00:55:00,079 --> 00:55:03,119
at a datagram layer and then

1430
00:55:03,119 --> 00:55:07,200
advertise return path and the um

1431
00:55:07,760 --> 00:55:10,079
uh this last one is about conversations

1432
00:55:10,079 --> 00:55:11,200
that when you're when you're trying to

1433
00:55:11,200 --> 00:55:12,960
troubleshoot or trying to analyze things

1434
00:55:12,960 --> 00:55:13,680
right now the

1435
00:55:13,680 --> 00:55:16,079
the udpcl doesn't say anything about if

1436
00:55:16,079 --> 00:55:18,559
i'm communicating with a peer node

1437
00:55:18,559 --> 00:55:21,599
uh should i always use my same source

1438
00:55:21,599 --> 00:55:22,960
port number

1439
00:55:22,960 --> 00:55:24,960
uh when i'm communicating with them it's

1440
00:55:24,960 --> 00:55:26,960
a it's an ephemera report but should i

1441
00:55:26,960 --> 00:55:28,799
use it consistently or does it not

1442
00:55:28,799 --> 00:55:30,720
matter um

1443
00:55:30,720 --> 00:55:34,960
so the those are all my topics

1444
00:55:34,960 --> 00:55:37,760
for the udpcl let me check my time

1445
00:55:37,760 --> 00:55:39,839
quickly

1446
00:55:39,839 --> 00:55:43,119
a little bit of time uh so i can i can

1447
00:55:43,119 --> 00:55:45,440
go on to

1448
00:55:45,440 --> 00:55:48,799
uh questions or

1449
00:55:48,799 --> 00:55:54,160
any discussion topics go ahead thank us

1450
00:55:54,559 --> 00:55:56,960
yes i one question you brought up not

1451
00:55:56,960 --> 00:55:58,079
the firewalls here

1452
00:55:58,079 --> 00:56:02,160
um or i mean i assume this is

1453
00:56:02,160 --> 00:56:04,559
you want to maintain that this is simple

1454
00:56:04,559 --> 00:56:05,280
in in

1455
00:56:05,280 --> 00:56:07,119
regards to what you're trying to achieve

1456
00:56:07,119 --> 00:56:09,200
but maybe

1457
00:56:09,200 --> 00:56:11,440
you actually want to discuss three usage

1458
00:56:11,440 --> 00:56:13,680
of stand and turn here for

1459
00:56:13,680 --> 00:56:15,440
to achieve those controversial

1460
00:56:15,440 --> 00:56:18,160
capabilities

1461
00:56:20,559 --> 00:56:24,240
of interest yeah i had looked into those

1462
00:56:24,240 --> 00:56:25,359
as topics

1463
00:56:25,359 --> 00:56:28,880
um and things like that rely

1464
00:56:28,880 --> 00:56:32,000
on some specified behavior

1465
00:56:32,000 --> 00:56:35,040
such as using consistent port numbers

1466
00:56:35,040 --> 00:56:40,240
or accepting return path

1467
00:56:40,960 --> 00:56:43,599
behavior that right now the the udpcl

1468
00:56:43,599 --> 00:56:44,240
doesn't

1469
00:56:44,240 --> 00:56:46,559
doesn't mention all about source port

1470
00:56:46,559 --> 00:56:48,160
numbers or

1471
00:56:48,160 --> 00:56:52,880
uh possible return path so uh

1472
00:56:52,880 --> 00:56:56,000
using things like stun

1473
00:56:56,000 --> 00:56:59,440
and those kind of related strategies

1474
00:56:59,440 --> 00:57:02,960
uh would rely on some

1475
00:57:02,960 --> 00:57:07,280
more well specified behavior such as uh

1476
00:57:07,280 --> 00:57:10,079
discussed in this uh yeah i mean in

1477
00:57:10,079 --> 00:57:10,960
general if you're gonna have

1478
00:57:10,960 --> 00:57:12,319
bi-directional communication

1479
00:57:12,319 --> 00:57:14,400
through and that the firewall you're

1480
00:57:14,400 --> 00:57:16,079
gonna have to have some

1481
00:57:16,079 --> 00:57:18,720
restrictions to how you transmit so you

1482
00:57:18,720 --> 00:57:20,799
you're outgoing traffic through the nuts

1483
00:57:20,799 --> 00:57:24,480
has a return path so um but maybe it's

1484
00:57:24,480 --> 00:57:26,720
it i don't know if really you need to

1485
00:57:26,720 --> 00:57:28,640
how complicated you want to do this and

1486
00:57:28,640 --> 00:57:30,160
i'm probably maybe keeping that on

1487
00:57:30,160 --> 00:57:31,520
simple side

1488
00:57:31,520 --> 00:57:33,280
for those particular use case which is

1489
00:57:33,280 --> 00:57:35,200
more like okay it's multicast is it one

1490
00:57:35,200 --> 00:57:37,440
way

1491
00:57:37,440 --> 00:57:39,280
yeah so in the current the current draft

1492
00:57:39,280 --> 00:57:40,960
doesn't mention anything at all about

1493
00:57:40,960 --> 00:57:44,240
about return path so this specific

1494
00:57:44,240 --> 00:57:47,520
item is really just asking is there

1495
00:57:47,520 --> 00:57:51,200
enough value in operating a node

1496
00:57:51,200 --> 00:57:53,440
behind a nat or behind a firewall is

1497
00:57:53,440 --> 00:57:54,720
there even enough interest that it's

1498
00:57:54,720 --> 00:57:55,440
worth

1499
00:57:55,440 --> 00:57:57,440
investigating or just leave it

1500
00:57:57,440 --> 00:57:59,119
unspecified as currently

1501
00:57:59,119 --> 00:58:02,400
so i uh rick with my personal hat on um

1502
00:58:02,400 --> 00:58:05,520
i'm with magnus i think taking the the

1503
00:58:05,520 --> 00:58:07,680
steer from stun and turn and though

1504
00:58:07,680 --> 00:58:09,760
those sort of net punching technologies

1505
00:58:09,760 --> 00:58:12,799
is is worth doing uh bidirectional

1506
00:58:12,799 --> 00:58:13,680
capability

1507
00:58:13,680 --> 00:58:16,079
i can see being useful particularly in

1508
00:58:16,079 --> 00:58:17,599
that environment

1509
00:58:17,599 --> 00:58:22,079
and i think dtn has uses

1510
00:58:22,079 --> 00:58:25,520
um on domestic terrestrial internets for

1511
00:58:25,520 --> 00:58:27,680
uh for messaging services and so on and

1512
00:58:27,680 --> 00:58:28,720
in those cases

1513
00:58:28,720 --> 00:58:30,640
you're going to get firewalls and nets

1514
00:58:30,640 --> 00:58:32,480
and all sorts of horrible domestic

1515
00:58:32,480 --> 00:58:34,000
broadband kind of things

1516
00:58:34,000 --> 00:58:37,200
in the way and that's why

1517
00:58:37,200 --> 00:58:39,280
this i ran into this was just on a

1518
00:58:39,280 --> 00:58:40,799
private network that has a restricted

1519
00:58:40,799 --> 00:58:42,240
firewall that

1520
00:58:42,240 --> 00:58:44,319
that's just nothing right magnus does

1521
00:58:44,319 --> 00:58:47,119
that cover it

1522
00:58:51,440 --> 00:58:54,720
so i had no particular interest in

1523
00:58:54,720 --> 00:58:57,119
or need for this provides yes that i

1524
00:58:57,119 --> 00:58:59,119
mean i have experience with the whole

1525
00:58:59,119 --> 00:59:02,000
not five volt reversal aspect so that's

1526
00:59:02,000 --> 00:59:02,480
what

1527
00:59:02,480 --> 00:59:05,280
i was asking so it's uh but i would

1528
00:59:05,280 --> 00:59:05,760
recommend

1529
00:59:05,760 --> 00:59:07,760
keeping on a simple side and then just

1530
00:59:07,760 --> 00:59:09,760
go for what you really need if it's

1531
00:59:09,760 --> 00:59:11,839
if if you need bi-directional yes then

1532
00:59:11,839 --> 00:59:13,440
you probably need to specify something

1533
00:59:13,440 --> 00:59:15,040
but

1534
00:59:15,040 --> 00:59:17,200
trying to get this water tight this it's

1535
00:59:17,200 --> 00:59:18,079
a lot of work and

1536
00:59:18,079 --> 00:59:20,640
i would recommend against it but maybe

1537
00:59:20,640 --> 00:59:22,720
some basic capabilities might be worth

1538
00:59:22,720 --> 00:59:26,480
specifying here but also with that need

1539
00:59:26,480 --> 00:59:29,119
with my chair hat on i think if this was

1540
00:59:29,119 --> 00:59:30,960
to be adopted as a working group draft

1541
00:59:30,960 --> 00:59:31,440
that is

1542
00:59:31,440 --> 00:59:32,960
the sort of topics that the working

1543
00:59:32,960 --> 00:59:35,520
group would sort out and so on

1544
00:59:35,520 --> 00:59:36,799
personally i think this sounds like

1545
00:59:36,799 --> 00:59:39,200
interesting work but in light of time

1546
00:59:39,200 --> 00:59:40,640
because we want to get on to the next

1547
00:59:40,640 --> 00:59:42,640
steps discussion in general

1548
00:59:42,640 --> 00:59:44,720
do you want to cover the cozy bit why do

1549
00:59:44,720 --> 00:59:46,720
you have the the mic

1550
00:59:46,720 --> 00:59:50,240
i can yes um

1551
00:59:52,559 --> 00:59:55,920
and this is

1552
00:59:55,920 --> 00:59:57,839
uh covering a lot of the same ground as

1553
00:59:57,839 --> 00:59:59,040
as the last cozy

1554
00:59:59,040 --> 01:00:02,559
uh beep stick presentation um the goals

1555
01:00:02,559 --> 01:00:04,160
are all the same as what was discussed

1556
01:00:04,160 --> 01:00:04,960
before is

1557
01:00:04,960 --> 01:00:06,799
keeping it as simple as possible this is

1558
01:00:06,799 --> 01:00:08,079
a glue between

1559
01:00:08,079 --> 01:00:12,400
two existing protocols that are both

1560
01:00:12,400 --> 01:00:15,440
well-defined enough that uh they both

1561
01:00:15,440 --> 01:00:15,760
have

1562
01:00:15,760 --> 01:00:18,880
uh some implementation and and some

1563
01:00:18,880 --> 01:00:19,920
logic about how they're supposed to

1564
01:00:19,920 --> 01:00:23,040
operate uh and it proposes

1565
01:00:23,040 --> 01:00:25,520
a a very simple set of i'll show in the

1566
01:00:25,520 --> 01:00:26,480
next slide

1567
01:00:26,480 --> 01:00:29,599
uh interoperability algorithms that

1568
01:00:29,599 --> 01:00:32,799
follows very similarly from the

1569
01:00:32,799 --> 01:00:35,839
um the bpsec default algorithms for

1570
01:00:35,839 --> 01:00:37,119
symmetric keys

1571
01:00:37,119 --> 01:00:39,839
but it expands the scope to asymmetric

1572
01:00:39,839 --> 01:00:42,160
keys and that's really the the big

1573
01:00:42,160 --> 01:00:45,680
uh goal for this

1574
01:00:45,680 --> 01:00:50,400
uh draft is to allow existing

1575
01:00:50,400 --> 01:00:53,599
asymmetric keyed algorithm behavior in

1576
01:00:53,599 --> 01:00:56,559
as little effort as possible uh in the

1577
01:00:56,559 --> 01:00:59,200
bpsec environment

1578
01:00:59,200 --> 01:01:01,200
and cosy is a very good fit because code

1579
01:01:01,200 --> 01:01:02,720
c itself is designed for

1580
01:01:02,720 --> 01:01:05,520
that kind of store and forward uh

1581
01:01:05,520 --> 01:01:07,200
transfers there's no bi-directionality

1582
01:01:07,200 --> 01:01:10,000
to it at all um

1583
01:01:10,000 --> 01:01:13,200
and there is uh

1584
01:01:13,200 --> 01:01:16,240
also uh some ongoing

1585
01:01:16,240 --> 01:01:19,920
work in the um cozy working group about

1586
01:01:19,920 --> 01:01:23,620
uh pkix and x509 transfers and

1587
01:01:23,620 --> 01:01:24,799
[Music]

1588
01:01:24,799 --> 01:01:27,920
details to be worked out on the cosy

1589
01:01:27,920 --> 01:01:29,520
side

1590
01:01:29,520 --> 01:01:33,599
but all the main points all the main

1591
01:01:33,599 --> 01:01:36,240
requirements exist already at least as

1592
01:01:36,240 --> 01:01:38,400
far as uh

1593
01:01:38,400 --> 01:01:40,240
drafts to point that and explain how

1594
01:01:40,240 --> 01:01:43,200
things are all to be done

1595
01:01:45,680 --> 01:01:48,000
and there's there's also a demo

1596
01:01:48,000 --> 01:01:49,599
implementation

1597
01:01:49,599 --> 01:01:53,680
that actually is doing bi-directional uh

1598
01:01:53,680 --> 01:01:57,119
bp sec uh transfers with uh integrity

1599
01:01:57,119 --> 01:01:58,160
checks

1600
01:01:58,160 --> 01:02:00,640
and it it's working at least all pieces

1601
01:02:00,640 --> 01:02:03,118
fit together

1602
01:02:03,280 --> 01:02:04,720
brilliant and again i note from that

1603
01:02:04,720 --> 01:02:05,920
that you'd be interested in working

1604
01:02:05,920 --> 01:02:07,599
group adoption as well

1605
01:02:07,599 --> 01:02:10,480
which seems like a seems like an obvious

1606
01:02:10,480 --> 01:02:11,440
next step

1607
01:02:11,440 --> 01:02:15,280
okay uh any questions on

1608
01:02:15,280 --> 01:02:21,280
that from anyone

1609
01:02:21,280 --> 01:02:24,799
i don't hear any so thank you very much

1610
01:02:24,799 --> 01:02:25,680
brian

1611
01:02:25,680 --> 01:02:27,520
uh thank you for keeping it nice and

1612
01:02:27,520 --> 01:02:29,200
short as well um

1613
01:02:29,200 --> 01:02:32,079
so next up we have uh alberto montia

1614
01:02:32,079 --> 01:02:32,839
from

1615
01:02:32,839 --> 01:02:36,400
uh ipnzig

1616
01:02:36,400 --> 01:02:38,960
who wants to talk about interplanetary

1617
01:02:38,960 --> 01:02:40,799
internet interoperability and management

1618
01:02:40,799 --> 01:02:42,400
considerations

1619
01:02:42,400 --> 01:02:45,839
uh i shall click grand screen

1620
01:02:45,839 --> 01:02:49,839
and let you drive your own slides

1621
01:02:49,920 --> 01:02:53,599
and i'll reset the clock on you as well

1622
01:02:59,280 --> 01:03:03,520
just give me one second i'm having a uh

1623
01:03:03,520 --> 01:03:06,480
it seems i'm having a uh share issue

1624
01:03:06,480 --> 01:03:09,280
here with their preferences

1625
01:03:09,280 --> 01:03:11,760
i've got a copy of your slides if you uh

1626
01:03:11,760 --> 01:03:13,920
if you decide to give up

1627
01:03:13,920 --> 01:03:18,400
okay let me let me try and uh

1628
01:03:19,039 --> 01:03:22,079
let me try here

1629
01:03:22,960 --> 01:03:27,200
um oops

1630
01:03:27,200 --> 01:03:28,640
yeah i might need your help because it's

1631
01:03:28,640 --> 01:03:30,880
not letting me to do it

1632
01:03:30,880 --> 01:03:35,920
okay let me try share screen

1633
01:03:37,599 --> 01:03:41,440
how's that can you see those

1634
01:03:42,240 --> 01:03:45,680
yep i can see it thank you um no trouble

1635
01:03:45,680 --> 01:03:47,200
and uh good morning good afternoon

1636
01:03:47,200 --> 01:03:49,119
everyone my name is

1637
01:03:49,119 --> 01:03:50,720
although it says alberto bravo and the

1638
01:03:50,720 --> 01:03:53,359
titan um i'm a board member of

1639
01:03:53,359 --> 01:03:55,359
ipnc the interplanetary networking

1640
01:03:55,359 --> 01:03:56,880
especially especially interest group

1641
01:03:56,880 --> 01:03:59,039
within the internet society

1642
01:03:59,039 --> 01:04:01,280
and i'm also a member of um one of it

1643
01:04:01,280 --> 01:04:02,079
working group

1644
01:04:02,079 --> 01:04:04,160
uh the pilot project uh working group

1645
01:04:04,160 --> 01:04:05,599
which i'm representing

1646
01:04:05,599 --> 01:04:08,880
today and also i'm a board member and

1647
01:04:08,880 --> 01:04:12,240
ceo of spartan corporation

1648
01:04:12,240 --> 01:04:14,640
my goal is to provide you our

1649
01:04:14,640 --> 01:04:16,000
perspective

1650
01:04:16,000 --> 01:04:19,200
um share a bit about what we are doing

1651
01:04:19,200 --> 01:04:22,799
at ipmc and draw some conclusions

1652
01:04:22,799 --> 01:04:27,839
about it as well next slide

1653
01:04:28,880 --> 01:04:31,760
so the mission of the ipn city is no

1654
01:04:31,760 --> 01:04:32,559
other than

1655
01:04:32,559 --> 01:04:34,720
to help realizing a functional and

1656
01:04:34,720 --> 01:04:36,480
scalable

1657
01:04:36,480 --> 01:04:38,000
system of interplanetary data

1658
01:04:38,000 --> 01:04:40,160
communications and within that we have

1659
01:04:40,160 --> 01:04:41,920
an organization

1660
01:04:41,920 --> 01:04:45,039
which uh tackles a

1661
01:04:45,039 --> 01:04:47,680
strategy tackles experimentation which

1662
01:04:47,680 --> 01:04:49,359
is the pilot project group

1663
01:04:49,359 --> 01:04:52,160
um also technical documentation because

1664
01:04:52,160 --> 01:04:52,880
one of our

1665
01:04:52,880 --> 01:04:56,079
main goals is to advocate and promote

1666
01:04:56,079 --> 01:04:59,280
uh the use and the technologies um so

1667
01:04:59,280 --> 01:05:02,079
looking at any possibility for us to

1668
01:05:02,079 --> 01:05:02,720
expand

1669
01:05:02,720 --> 01:05:06,480
adoption of these technologies

1670
01:05:06,480 --> 01:05:08,720
so within the pilot project uh working

1671
01:05:08,720 --> 01:05:09,760
loop we

1672
01:05:09,760 --> 01:05:11,760
basically engage in research and

1673
01:05:11,760 --> 01:05:13,520
prototyping opportunities

1674
01:05:13,520 --> 01:05:16,559
to validate and extend the use of

1675
01:05:16,559 --> 01:05:20,319
dtn a couple of things one is we look at

1676
01:05:20,319 --> 01:05:20,960
the core

1677
01:05:20,960 --> 01:05:23,760
of vtn in the sense of scale

1678
01:05:23,760 --> 01:05:25,920
interpretability and management of vtn

1679
01:05:25,920 --> 01:05:27,200
protocols

1680
01:05:27,200 --> 01:05:30,480
and second we also experiment

1681
01:05:30,480 --> 01:05:32,960
with use cases and applications

1682
01:05:32,960 --> 01:05:34,880
primarily to

1683
01:05:34,880 --> 01:05:36,240
demonstrate the applicability of the

1684
01:05:36,240 --> 01:05:38,960
protocol and also promote

1685
01:05:38,960 --> 01:05:42,559
its use to space which is well known and

1686
01:05:42,559 --> 01:05:43,200
also to

1687
01:05:43,200 --> 01:05:46,160
air applications i'm going to be talking

1688
01:05:46,160 --> 01:05:47,039
today about

1689
01:05:47,039 --> 01:05:49,280
some of the projects we're building um

1690
01:05:49,280 --> 01:05:51,920
primarily our main goal is to build a

1691
01:05:51,920 --> 01:05:54,799
dtn test bed and then we currently have

1692
01:05:54,799 --> 01:05:57,359
active pursuit participation from many

1693
01:05:57,359 --> 01:06:00,079
institutions and corporations so we are

1694
01:06:00,079 --> 01:06:00,880
trying to

1695
01:06:00,880 --> 01:06:03,440
we have very ambitious goals um but

1696
01:06:03,440 --> 01:06:05,280
going step by step which i'm gonna

1697
01:06:05,280 --> 01:06:08,640
talk about in a couple of minutes and

1698
01:06:08,640 --> 01:06:10,720
one thing is you know we would like to

1699
01:06:10,720 --> 01:06:12,240
share priority our progress

1700
01:06:12,240 --> 01:06:14,720
and very important our learnings with

1701
01:06:14,720 --> 01:06:15,839
this community and

1702
01:06:15,839 --> 01:06:20,720
this is our first update next slide

1703
01:06:23,440 --> 01:06:25,359
so let's talk about the active projects

1704
01:06:25,359 --> 01:06:28,720
uh the first and main one is the

1705
01:06:28,720 --> 01:06:32,240
dtn test that we basically are creating

1706
01:06:32,240 --> 01:06:33,680
a network of networks

1707
01:06:33,680 --> 01:06:35,599
now we have different different

1708
01:06:35,599 --> 01:06:37,119
institutions and corporations that are

1709
01:06:37,119 --> 01:06:38,160
participating

1710
01:06:38,160 --> 01:06:41,280
each of them with their own networks and

1711
01:06:41,280 --> 01:06:43,440
the idea is that we create a platform in

1712
01:06:43,440 --> 01:06:45,440
which a platform that is open to the

1713
01:06:45,440 --> 01:06:47,599
general public to come in

1714
01:06:47,599 --> 01:06:50,799
learn and also um

1715
01:06:50,799 --> 01:06:53,280
run certain experiments uh very specific

1716
01:06:53,280 --> 01:06:54,319
to

1717
01:06:54,319 --> 01:06:56,880
btn so things that are keeping us busy

1718
01:06:56,880 --> 01:06:57,359
is

1719
01:06:57,359 --> 01:07:01,039
looking at how we scale so connecting um

1720
01:07:01,039 --> 01:07:03,200
not only tens of nodes but our goal is

1721
01:07:03,200 --> 01:07:04,079
to get to

1722
01:07:04,079 --> 01:07:06,640
the hundreds if not thousands of nodes

1723
01:07:06,640 --> 01:07:08,480
as well and look at interoperability in

1724
01:07:08,480 --> 01:07:09,760
general

1725
01:07:09,760 --> 01:07:12,319
and then look at new features so use the

1726
01:07:12,319 --> 01:07:14,319
test bed also as a way to test

1727
01:07:14,319 --> 01:07:15,920
some of the new features that are coming

1728
01:07:15,920 --> 01:07:17,359
or some of the proposals that are coming

1729
01:07:17,359 --> 01:07:19,599
from the different organizations

1730
01:07:19,599 --> 01:07:22,880
and in addition to

1731
01:07:22,880 --> 01:07:26,079
looking a need for at the network uh

1732
01:07:26,079 --> 01:07:28,079
level uh we're also looking at the

1733
01:07:28,079 --> 01:07:29,440
different use cases as you're going to

1734
01:07:29,440 --> 01:07:31,680
see in a second

1735
01:07:31,680 --> 01:07:33,839
so all this started with a set of member

1736
01:07:33,839 --> 01:07:36,640
projects and

1737
01:07:36,799 --> 01:07:40,480
the projects cover a different areas

1738
01:07:40,480 --> 01:07:44,799
starting with a network management for

1739
01:07:45,359 --> 01:07:47,280
space and earth use cases i lost the

1740
01:07:47,280 --> 01:07:49,520
share

1741
01:07:53,680 --> 01:07:55,680
i can still see i can still see the

1742
01:07:55,680 --> 01:07:56,960
screen so i know that we're still

1743
01:07:56,960 --> 01:07:58,720
sharing on this end

1744
01:07:58,720 --> 01:08:01,119
okay perfect yeah i i got it back thank

1745
01:08:01,119 --> 01:08:02,160
you

1746
01:08:02,160 --> 01:08:04,319
um so when we look at the and then

1747
01:08:04,319 --> 01:08:05,359
member projects

1748
01:08:05,359 --> 01:08:07,920
uh starting with network management to

1749
01:08:07,920 --> 01:08:09,119
basically

1750
01:08:09,119 --> 01:08:12,559
manage btn and very specifically at this

1751
01:08:12,559 --> 01:08:12,960
point

1752
01:08:12,960 --> 01:08:15,760
ion instances that could be in a space

1753
01:08:15,760 --> 01:08:16,479
or

1754
01:08:16,479 --> 01:08:20,000
on earth looking at

1755
01:08:20,000 --> 01:08:23,120
the different applications the the one a

1756
01:08:23,120 --> 01:08:25,279
prayer that is ongoing is um

1757
01:08:25,279 --> 01:08:27,520
the use of dtn to extend crisis

1758
01:08:27,520 --> 01:08:29,759
information management systems

1759
01:08:29,759 --> 01:08:31,759
with the use of rovers and the use of

1760
01:08:31,759 --> 01:08:32,880
drones

1761
01:08:32,880 --> 01:08:35,920
um that um are connected via dtn and

1762
01:08:35,920 --> 01:08:38,158
this is an earth use case

1763
01:08:38,158 --> 01:08:42,960
um we also um

1764
01:08:42,960 --> 01:08:46,158
are now in or have incorporated let's

1765
01:08:46,158 --> 01:08:47,600
say incorporated

1766
01:08:47,600 --> 01:08:49,839
one of our members um and i'm gonna talk

1767
01:08:49,839 --> 01:08:50,880
about that in a second

1768
01:08:50,880 --> 01:08:55,520
have implemented a dtn system for

1769
01:08:55,520 --> 01:08:58,080
a reindeer husbandry and that's in the

1770
01:08:58,080 --> 01:08:59,759
nordics

1771
01:08:59,759 --> 01:09:03,040
in the arctic uh

1772
01:09:03,040 --> 01:09:06,000
circle in the i think the area belongs

1773
01:09:06,000 --> 01:09:07,040
to sweden

1774
01:09:07,040 --> 01:09:09,439
and this is a fully operational system

1775
01:09:09,439 --> 01:09:10,319
as well

1776
01:09:10,319 --> 01:09:12,158
things we have tried out uh unified

1777
01:09:12,158 --> 01:09:13,920
medical records for space exploration

1778
01:09:13,920 --> 01:09:15,600
there's a prototype a build that

1779
01:09:15,600 --> 01:09:16,880
basically takes

1780
01:09:16,880 --> 01:09:20,158
um information from the emr database

1781
01:09:20,158 --> 01:09:22,799
uh using sql and uh basically have a

1782
01:09:22,799 --> 01:09:23,600
gateway

1783
01:09:23,600 --> 01:09:25,920
that uh where you know those records can

1784
01:09:25,920 --> 01:09:26,880
be sent

1785
01:09:26,880 --> 01:09:29,279
to a space as needed and the gateway

1786
01:09:29,279 --> 01:09:30,080
also performs

1787
01:09:30,080 --> 01:09:33,040
um you know curate the data so only the

1788
01:09:33,040 --> 01:09:34,960
critical data is sent

1789
01:09:34,960 --> 01:09:38,560
back to you know the remote area

1790
01:09:38,560 --> 01:09:40,560
and very recently we with the help of

1791
01:09:40,560 --> 01:09:42,560
google we have been experimenting with

1792
01:09:42,560 --> 01:09:42,880
uh

1793
01:09:42,880 --> 01:09:46,319
connecting um some um

1794
01:09:46,319 --> 01:09:49,120
machine learning um and or computer

1795
01:09:49,120 --> 01:09:50,399
vision i would say

1796
01:09:50,399 --> 01:09:52,399
uh com computer vision algorithms to

1797
01:09:52,399 --> 01:09:54,800
perform in image recognition over

1798
01:09:54,800 --> 01:09:57,360
uh dtn and the goal is to basically you

1799
01:09:57,360 --> 01:09:58,800
know some of these applications the goal

1800
01:09:58,800 --> 01:09:59,840
is to understand

1801
01:09:59,840 --> 01:10:01,760
and the particularities of you know how

1802
01:10:01,760 --> 01:10:03,360
the application would work in

1803
01:10:03,360 --> 01:10:06,400
you know over uh long distances um and

1804
01:10:06,400 --> 01:10:07,760
things of that nature

1805
01:10:07,760 --> 01:10:10,320
next slide

1806
01:10:13,600 --> 01:10:16,159
then let me double click on a couple of

1807
01:10:16,159 --> 01:10:16,960
things

1808
01:10:16,960 --> 01:10:20,560
i mentioned the dtn testbed

1809
01:10:20,880 --> 01:10:24,159
late last year november 27th

1810
01:10:24,159 --> 01:10:25,520
we were able to make the first

1811
01:10:25,520 --> 01:10:27,360
connection having

1812
01:10:27,360 --> 01:10:30,560
a few instances running

1813
01:10:30,560 --> 01:10:34,000
ion instances running on

1814
01:10:34,000 --> 01:10:37,280
the um google cloud and

1815
01:10:37,280 --> 01:10:38,880
that's basically managed by google

1816
01:10:38,880 --> 01:10:40,960
including some

1817
01:10:40,960 --> 01:10:44,560
sensors connected via um

1818
01:10:44,560 --> 01:10:47,760
all using the bundled protocol versus

1819
01:10:47,760 --> 01:10:48,560
seven

1820
01:10:48,560 --> 01:10:51,120
connecting to the health information

1821
01:10:51,120 --> 01:10:52,560
network deployment on

1822
01:10:52,560 --> 01:10:56,640
aws um that have the medical gateway

1823
01:10:56,640 --> 01:10:58,000
record as well

1824
01:10:58,000 --> 01:11:00,800
so this basic was a you know hello world

1825
01:11:00,800 --> 01:11:02,719
demonstration just a basic

1826
01:11:02,719 --> 01:11:06,480
uh using basic bp7 functionality and

1827
01:11:06,480 --> 01:11:08,640
that was the start of it

1828
01:11:08,640 --> 01:11:10,560
as of february we have now four

1829
01:11:10,560 --> 01:11:12,400
organizations on board

1830
01:11:12,400 --> 01:11:15,440
um basically exchanging messages

1831
01:11:15,440 --> 01:11:18,080
everything is ion-based right now but we

1832
01:11:18,080 --> 01:11:19,440
basically welcome

1833
01:11:19,440 --> 01:11:23,360
other um implementations of

1834
01:11:23,360 --> 01:11:25,520
the bundled protocol so that we can also

1835
01:11:25,520 --> 01:11:28,640
do interpretability testing

1836
01:11:28,640 --> 01:11:30,320
we are exercising with you know

1837
01:11:30,320 --> 01:11:32,960
exchanging messaging files um

1838
01:11:32,960 --> 01:11:35,920
recently starting with multicast and we

1839
01:11:35,920 --> 01:11:37,280
have put image free

1840
01:11:37,280 --> 01:11:39,520
an image recognition prototype over dtn

1841
01:11:39,520 --> 01:11:42,400
where a node can send an image

1842
01:11:42,400 --> 01:11:45,440
um and then we'll get back um

1843
01:11:45,440 --> 01:11:47,280
basically what elements or objects have

1844
01:11:47,280 --> 01:11:48,960
been identified so one of the

1845
01:11:48,960 --> 01:11:51,600
one of the things is uh um we're looking

1846
01:11:51,600 --> 01:11:52,080
at

1847
01:11:52,080 --> 01:11:55,199
the understanding of uh the extent of

1848
01:11:55,199 --> 01:11:57,600
what use cases could be enabled like uh

1849
01:11:57,600 --> 01:11:59,120
you know

1850
01:11:59,120 --> 01:12:02,559
identification of um

1851
01:12:02,640 --> 01:12:04,159
identification of elements within a

1852
01:12:04,159 --> 01:12:06,159
picture or a video

1853
01:12:06,159 --> 01:12:08,320
so one thing that we learned um straight

1854
01:12:08,320 --> 01:12:10,560
away is that management is critical

1855
01:12:10,560 --> 01:12:13,199
um you know contacts and context plans

1856
01:12:13,199 --> 01:12:15,600
are hard to manage and prone to error

1857
01:12:15,600 --> 01:12:18,159
every single test session we have had

1858
01:12:18,159 --> 01:12:20,000
there there was always

1859
01:12:20,000 --> 01:12:22,800
you know one eid that was wrong or one

1860
01:12:22,800 --> 01:12:24,239
ip that was wrong

1861
01:12:24,239 --> 01:12:27,360
um so you know at four scale the first

1862
01:12:27,360 --> 01:12:28,080
thing is

1863
01:12:28,080 --> 01:12:30,239
you know uh having consistent management

1864
01:12:30,239 --> 01:12:31,440
across the board

1865
01:12:31,440 --> 01:12:33,679
not only within the networks but also

1866
01:12:33,679 --> 01:12:34,960
between the networks is

1867
01:12:34,960 --> 01:12:37,679
is critical and the other is that

1868
01:12:37,679 --> 01:12:40,000
separating routing from management today

1869
01:12:40,000 --> 01:12:43,600
is an interesting challenge um and

1870
01:12:43,600 --> 01:12:46,640
both from topology uh

1871
01:12:46,640 --> 01:12:49,040
and as well as you know the exchange of

1872
01:12:49,040 --> 01:12:50,159
contact information

1873
01:12:50,159 --> 01:12:53,450
as well so you know we're working on um

1874
01:12:53,450 --> 01:12:54,560
[Music]

1875
01:12:54,560 --> 01:12:57,760
uh trying to understand how much

1876
01:12:57,760 --> 01:12:59,520
governance and automation we need to

1877
01:12:59,520 --> 01:13:00,800
continue this uh

1878
01:13:00,800 --> 01:13:04,239
scale next step

1879
01:13:04,239 --> 01:13:07,040
next slide sorry

1880
01:13:07,760 --> 01:13:10,159
thank you the next uh point is you know

1881
01:13:10,159 --> 01:13:12,400
as we discovered those challenges we

1882
01:13:12,400 --> 01:13:14,719
um also continue the experimentation

1883
01:13:14,719 --> 01:13:16,640
with network management

1884
01:13:16,640 --> 01:13:19,600
and where we have a very very early uh

1885
01:13:19,600 --> 01:13:22,400
draft of a contact plan generator that

1886
01:13:22,400 --> 01:13:25,040
the whole organization is using but we

1887
01:13:25,040 --> 01:13:26,960
also are experimenting with

1888
01:13:26,960 --> 01:13:30,000
um and as a way to

1889
01:13:30,000 --> 01:13:33,040
basically transfer those contacts um

1890
01:13:33,040 --> 01:13:35,280
those contacts automatically to the

1891
01:13:35,280 --> 01:13:37,920
different agents on the different nodes

1892
01:13:37,920 --> 01:13:41,040
and that's something that um is keeping

1893
01:13:41,040 --> 01:13:41,520
us

1894
01:13:41,520 --> 01:13:44,159
busy right now so that you know there is

1895
01:13:44,159 --> 01:13:46,960
just a single place where

1896
01:13:46,960 --> 01:13:49,040
all the organizations can go manage

1897
01:13:49,040 --> 01:13:51,120
their networks and also manage the test

1898
01:13:51,120 --> 01:13:52,640
bed which is the interconnection of the

1899
01:13:52,640 --> 01:13:54,239
networks in a dynamic

1900
01:13:54,239 --> 01:13:56,718
fashion

1901
01:13:57,280 --> 01:14:01,840
and next slide

1902
01:14:02,800 --> 01:14:04,560
and this is uh the example of the

1903
01:14:04,560 --> 01:14:06,719
unified medical records um

1904
01:14:06,719 --> 01:14:10,320
very straightforward um every uh

1905
01:14:10,320 --> 01:14:12,480
corporation or institution on earth it

1906
01:14:12,480 --> 01:14:13,520
relies

1907
01:14:13,520 --> 01:14:16,960
or every person rely on their medical

1908
01:14:16,960 --> 01:14:19,520
records on a hosted on an electronic

1909
01:14:19,520 --> 01:14:22,159
medical record system emr or ehr

1910
01:14:22,159 --> 01:14:24,400
depending on where you live there is a

1911
01:14:24,400 --> 01:14:26,239
bunch of data

1912
01:14:26,239 --> 01:14:29,120
typically using relational databases uh

1913
01:14:29,120 --> 01:14:32,080
the health information network um

1914
01:14:32,080 --> 01:14:35,840
uh um go went ahead and um

1915
01:14:35,840 --> 01:14:38,880
created a basically a prototype

1916
01:14:38,880 --> 01:14:39,920
application

1917
01:14:39,920 --> 01:14:43,520
to uh being able to put those records

1918
01:14:43,520 --> 01:14:43,920
over

1919
01:14:43,920 --> 01:14:46,159
or create those records and being able

1920
01:14:46,159 --> 01:14:47,920
to send those records over

1921
01:14:47,920 --> 01:14:50,560
dtn

1922
01:14:51,360 --> 01:14:56,000
next slide

1923
01:14:56,000 --> 01:14:58,320
last but not least um on the ones we

1924
01:14:58,320 --> 01:14:59,520
want to highlight this

1925
01:14:59,520 --> 01:15:02,719
is a project as i said before this is a

1926
01:15:02,719 --> 01:15:03,760
project uh

1927
01:15:03,760 --> 01:15:08,000
that it's fully in production

1928
01:15:08,000 --> 01:15:11,199
it was contracted by uh and is

1929
01:15:11,199 --> 01:15:13,679
still run by the dalvadis economic

1930
01:15:13,679 --> 01:15:15,280
association

1931
01:15:15,280 --> 01:15:17,679
back there in uh sweden uh with the help

1932
01:15:17,679 --> 01:15:20,080
of the lulia university of technology

1933
01:15:20,080 --> 01:15:23,120
and it incorporates uh the full stack

1934
01:15:23,120 --> 01:15:26,320
from um a series of lower

1935
01:15:26,320 --> 01:15:29,920
uh radio um stations

1936
01:15:29,920 --> 01:15:33,199
uh all the way to uh the sensors and

1937
01:15:33,199 --> 01:15:36,560
um uh the the dtn sensor

1938
01:15:36,560 --> 01:15:39,440
and and stack plus sensors uh on the

1939
01:15:39,440 --> 01:15:40,400
renders

1940
01:15:40,400 --> 01:15:43,920
all the way to an app where um the hertz

1941
01:15:43,920 --> 01:15:44,400
can be

1942
01:15:44,400 --> 01:15:47,360
uh tracked and followed and this doesn't

1943
01:15:47,360 --> 01:15:48,640
use ion this uh

1944
01:15:48,640 --> 01:15:51,920
use a kind of a different version of a

1945
01:15:51,920 --> 01:15:53,920
proprietary version of a

1946
01:15:53,920 --> 01:15:56,000
dtn it's not it doesn't rely on the

1947
01:15:56,000 --> 01:15:57,120
bundled protocol

1948
01:15:57,120 --> 01:15:58,880
and part of the discussions is

1949
01:15:58,880 --> 01:16:00,159
understanding how

1950
01:16:00,159 --> 01:16:03,840
what it would take to get this to become

1951
01:16:03,840 --> 01:16:06,000
you know a standard implementation using

1952
01:16:06,000 --> 01:16:09,360
standard protocols like bp

1953
01:16:10,159 --> 01:16:12,719
next slide

1954
01:16:14,400 --> 01:16:16,640
and um one thing you know i want to

1955
01:16:16,640 --> 01:16:20,239
highlight is um

1956
01:16:20,239 --> 01:16:22,480
if you think about the goal of ipnc

1957
01:16:22,480 --> 01:16:23,920
which is promoting

1958
01:16:23,920 --> 01:16:28,080
the um an extended use of um

1959
01:16:28,080 --> 01:16:32,480
vtn protocols to have a reliable

1960
01:16:32,480 --> 01:16:35,440
and scalable interplanetary internet we

1961
01:16:35,440 --> 01:16:37,360
are committed to standard so

1962
01:16:37,360 --> 01:16:39,840
right now every test uh that we're doing

1963
01:16:39,840 --> 01:16:40,640
is uh

1964
01:16:40,640 --> 01:16:42,239
incorporating the bundle protocol

1965
01:16:42,239 --> 01:16:44,560
version seven we as i said before we are

1966
01:16:44,560 --> 01:16:46,800
starting to experiment with an amp

1967
01:16:46,800 --> 01:16:49,520
as a way to have a management framework

1968
01:16:49,520 --> 01:16:51,280
for all the instances

1969
01:16:51,280 --> 01:16:54,400
and you know as we go forward we

1970
01:16:54,400 --> 01:16:57,280
you know continue identifying areas for

1971
01:16:57,280 --> 01:16:58,800
to for further exploration and

1972
01:16:58,800 --> 01:17:01,760
enhancement such as

1973
01:17:01,760 --> 01:17:03,280
multi-region we're going to talk about

1974
01:17:03,280 --> 01:17:04,800
ion charms

1975
01:17:04,800 --> 01:17:06,960
multi-agency routing and management is

1976
01:17:06,960 --> 01:17:08,159
critical

1977
01:17:08,159 --> 01:17:10,400
for scale network management is also

1978
01:17:10,400 --> 01:17:11,679
critical for scale

1979
01:17:11,679 --> 01:17:14,560
and also better supports for mobile use

1980
01:17:14,560 --> 01:17:16,719
cases on the discovery and auto

1981
01:17:16,719 --> 01:17:18,080
configuration front

1982
01:17:18,080 --> 01:17:23,440
as well next slide

1983
01:17:26,320 --> 01:17:28,800
and last this is the summary so we're

1984
01:17:28,800 --> 01:17:30,480
building the dtn test bed

1985
01:17:30,480 --> 01:17:31,920
with my participation from multiple

1986
01:17:31,920 --> 01:17:34,320
institutions we are learning a lot

1987
01:17:34,320 --> 01:17:37,280
um you know current learnings are very

1988
01:17:37,280 --> 01:17:37,840
you know

1989
01:17:37,840 --> 01:17:39,679
telling us that there is a still a big

1990
01:17:39,679 --> 01:17:41,600
interdependency between dtn

1991
01:17:41,600 --> 01:17:44,400
um and the management and this requires

1992
01:17:44,400 --> 01:17:46,480
a time alignment to jointly evolve

1993
01:17:46,480 --> 01:17:49,120
both protocols and frameworks there is

1994
01:17:49,120 --> 01:17:50,800
an opportunity to enhance

1995
01:17:50,800 --> 01:17:53,920
the protocol stack by uh

1996
01:17:53,920 --> 01:17:56,320
you know management and routing options

1997
01:17:56,320 --> 01:17:57,520
to enhance multi-network and

1998
01:17:57,520 --> 01:17:59,360
multi-agency connectivity

1999
01:17:59,360 --> 01:18:01,920
and basically taking uh scale into

2000
01:18:01,920 --> 01:18:03,120
consideration

2001
01:18:03,120 --> 01:18:04,880
and we have this for the long run so

2002
01:18:04,880 --> 01:18:07,440
we're committed to promote experiment

2003
01:18:07,440 --> 01:18:09,760
um with and augment the standard as

2004
01:18:09,760 --> 01:18:10,560
needed

2005
01:18:10,560 --> 01:18:12,080
and last but not least you know we would

2006
01:18:12,080 --> 01:18:13,840
like to continue reporting the updates

2007
01:18:13,840 --> 01:18:14,320
to this

2008
01:18:14,320 --> 01:18:18,000
working group as needed thank you

2009
01:18:18,000 --> 01:18:19,920
thank you alberto that was very

2010
01:18:19,920 --> 01:18:21,040
interesting and uh

2011
01:18:21,040 --> 01:18:22,719
yes of course you would be welcome to

2012
01:18:22,719 --> 01:18:24,560
continue reporting updates to this

2013
01:18:24,560 --> 01:18:26,580
working group i think

2014
01:18:26,580 --> 01:18:28,159
[Music]

2015
01:18:28,159 --> 01:18:30,640
multi-agency test beds being built and

2016
01:18:30,640 --> 01:18:32,159
really testing at scale

2017
01:18:32,159 --> 01:18:34,239
gives us very valuable feedback as we

2018
01:18:34,239 --> 01:18:36,239
get into standardization and i think it

2019
01:18:36,239 --> 01:18:37,199
will be input

2020
01:18:37,199 --> 01:18:40,560
into our next step conversation today

2021
01:18:40,560 --> 01:18:43,679
and we'll also guide uh what we think

2022
01:18:43,679 --> 01:18:46,640
considering you as effectively operators

2023
01:18:46,640 --> 01:18:47,520
it will guide

2024
01:18:47,520 --> 01:18:50,000
what we as a working group um look to

2025
01:18:50,000 --> 01:18:52,080
standardize for interoperability

2026
01:18:52,080 --> 01:18:55,600
at that sort of scale um so

2027
01:18:55,600 --> 01:18:57,920
thank you very much what i will do now

2028
01:18:57,920 --> 01:18:59,520
is hand over to

2029
01:18:59,520 --> 01:19:02,560
ed who wants to introduce the

2030
01:19:02,560 --> 01:19:05,679
uh next steps ed would you like me to

2031
01:19:05,679 --> 01:19:07,040
share slides or do you want to give it a

2032
01:19:07,040 --> 01:19:08,159
try

2033
01:19:08,159 --> 01:19:10,239
uh no if you've already set up the

2034
01:19:10,239 --> 01:19:12,000
sharing i'm i'm happy to

2035
01:19:12,000 --> 01:19:15,040
to not share i will click the button as

2036
01:19:15,040 --> 01:19:16,719
i'm becoming accomplished at this now

2037
01:19:16,719 --> 01:19:20,159
allegedly um and

2038
01:19:20,159 --> 01:19:22,960
attempt to click the right tab working

2039
01:19:22,960 --> 01:19:23,520
group

2040
01:19:23,520 --> 01:19:26,080
next step so these are my slides i must

2041
01:19:26,080 --> 01:19:28,640
say which is why they are hideously ugly

2042
01:19:28,640 --> 01:19:32,080
um but only go ahead

2043
01:19:32,080 --> 01:19:36,080
no worries so uh what we

2044
01:19:36,080 --> 01:19:38,880
did uh in preparation for this meeting

2045
01:19:38,880 --> 01:19:40,239
was to go back through

2046
01:19:40,239 --> 01:19:43,760
uh the set of uh new agenda topics that

2047
01:19:43,760 --> 01:19:45,679
had come up uh through discussion

2048
01:19:45,679 --> 01:19:48,400
over the past roughly year and a half uh

2049
01:19:48,400 --> 01:19:50,400
or maybe more this past year has been a

2050
01:19:50,400 --> 01:19:51,199
strange

2051
01:19:51,199 --> 01:19:54,400
a strange time for sure uh at the

2052
01:19:54,400 --> 01:19:58,080
ietf's 105 and 106 in anticipation

2053
01:19:58,080 --> 01:20:00,400
for finishing our initial set of working

2054
01:20:00,400 --> 01:20:01,199
group uh

2055
01:20:01,199 --> 01:20:03,360
charters we had put out some calls to

2056
01:20:03,360 --> 01:20:04,800
the working group

2057
01:20:04,800 --> 01:20:07,120
associated with what do we think are

2058
01:20:07,120 --> 01:20:09,199
candidates for next steps

2059
01:20:09,199 --> 01:20:11,600
in doing all of that these are the

2060
01:20:11,600 --> 01:20:13,600
things that came to the top

2061
01:20:13,600 --> 01:20:15,360
that seem to have the consensus of the

2062
01:20:15,360 --> 01:20:17,760
working group at that time

2063
01:20:17,760 --> 01:20:19,920
if we just sort of enumerate them or

2064
01:20:19,920 --> 01:20:21,679
list them here quickly

2065
01:20:21,679 --> 01:20:23,840
we have bundle and bundle encapsulation

2066
01:20:23,840 --> 01:20:25,840
which is again as as scott had

2067
01:20:25,840 --> 01:20:27,920
talked about earlier there was a

2068
01:20:27,920 --> 01:20:29,440
discussion of whether

2069
01:20:29,440 --> 01:20:31,360
additional extension blocks were

2070
01:20:31,360 --> 01:20:33,040
near-term needs

2071
01:20:33,040 --> 01:20:35,199
neighbor discovery and and right behind

2072
01:20:35,199 --> 01:20:36,800
that naming and addressing

2073
01:20:36,800 --> 01:20:38,880
their the network management work and

2074
01:20:38,880 --> 01:20:40,960
then how many other additional security

2075
01:20:40,960 --> 01:20:43,280
contexts and convergence layers

2076
01:20:43,280 --> 01:20:46,480
again were needed in the short term next

2077
01:20:46,480 --> 01:20:48,799
slide

2078
01:20:49,360 --> 01:20:52,400
in and then looking through this the the

2079
01:20:52,400 --> 01:20:55,280
the comment uh both from us and and from

2080
01:20:55,280 --> 01:20:55,679
uh

2081
01:20:55,679 --> 01:20:58,320
from the uh from magnus at the time was

2082
01:20:58,320 --> 01:20:59,520
that's an awful lot

2083
01:20:59,520 --> 01:21:01,360
it's very good work but how do we

2084
01:21:01,360 --> 01:21:02,639
prioritize this

2085
01:21:02,639 --> 01:21:04,400
in terms of again near-term over the

2086
01:21:04,400 --> 01:21:06,239
next few years and then that which

2087
01:21:06,239 --> 01:21:07,280
follows

2088
01:21:07,280 --> 01:21:09,199
uh and and we started to whittle it down

2089
01:21:09,199 --> 01:21:11,040
and say there there are things that are

2090
01:21:11,040 --> 01:21:11,560
already

2091
01:21:11,560 --> 01:21:14,320
actively being pursued there's energy

2092
01:21:14,320 --> 01:21:15,760
behind it and there's a lot of work

2093
01:21:15,760 --> 01:21:17,920
there and we shouldn't let that go

2094
01:21:17,920 --> 01:21:20,560
so to that extent of the things from the

2095
01:21:20,560 --> 01:21:21,600
prior list

2096
01:21:21,600 --> 01:21:23,360
the ones that seem to have a lot of

2097
01:21:23,360 --> 01:21:25,360
activity behind them right now

2098
01:21:25,360 --> 01:21:27,440
are uh bundle and model encapsulation

2099
01:21:27,440 --> 01:21:29,120
the udp convergence layer

2100
01:21:29,120 --> 01:21:31,199
uh some prior work that had been done on

2101
01:21:31,199 --> 01:21:32,400
key administration

2102
01:21:32,400 --> 01:21:35,120
uh the amp work and then the cosy

2103
01:21:35,120 --> 01:21:36,560
security context

2104
01:21:36,560 --> 01:21:38,080
and again we just had the presentation

2105
01:21:38,080 --> 01:21:39,760
on the cosy security context

2106
01:21:39,760 --> 01:21:41,840
more evidence that it is actively being

2107
01:21:41,840 --> 01:21:42,960
worked

2108
01:21:42,960 --> 01:21:46,719
next slide so in all of this

2109
01:21:46,719 --> 01:21:48,639
and and what we had devoted the second

2110
01:21:48,639 --> 01:21:50,639
uh portion of this meeting for

2111
01:21:50,639 --> 01:21:53,679
was to walk through this list uh ask to

2112
01:21:53,679 --> 01:21:54,560
the working group

2113
01:21:54,560 --> 01:21:57,040
uh are there significant things that are

2114
01:21:57,040 --> 01:21:57,760
missing

2115
01:21:57,760 --> 01:21:59,920
but then also to to really come to

2116
01:21:59,920 --> 01:22:00,960
understand uh

2117
01:22:00,960 --> 01:22:03,280
what is the prioritization of this to

2118
01:22:03,280 --> 01:22:04,320
inform uh

2119
01:22:04,320 --> 01:22:07,040
the next uh charter so to try and do

2120
01:22:07,040 --> 01:22:09,280
that in an organized way

2121
01:22:09,280 --> 01:22:12,560
we propose is we go through these topics

2122
01:22:12,560 --> 01:22:12,880
uh

2123
01:22:12,880 --> 01:22:16,320
topic by topic and we have some comments

2124
01:22:16,320 --> 01:22:17,520
associated with them

2125
01:22:17,520 --> 01:22:20,320
we ask people uh to comment on those

2126
01:22:20,320 --> 01:22:21,280
topics

2127
01:22:21,280 --> 01:22:23,679
and also to suggest new topics and then

2128
01:22:23,679 --> 01:22:25,760
when this conversation is done

2129
01:22:25,760 --> 01:22:27,440
then we will take the compiled list out

2130
01:22:27,440 --> 01:22:29,920
to the mailing list and and finish it

2131
01:22:29,920 --> 01:22:32,159
uh there where we would then have the

2132
01:22:32,159 --> 01:22:33,440
entirety of the mailing list and not

2133
01:22:33,440 --> 01:22:34,880
just the folks who were able

2134
01:22:34,880 --> 01:22:37,120
to attend today and then of course the

2135
01:22:37,120 --> 01:22:38,159
hope is that the

2136
01:22:38,159 --> 01:22:39,840
you know we will suggest that a final

2137
01:22:39,840 --> 01:22:42,000
decision on the chart will be confirmed

2138
01:22:42,000 --> 01:22:45,040
uh at 1 11. uh unless we think that we

2139
01:22:45,040 --> 01:22:47,040
need more time based on the mailing list

2140
01:22:47,040 --> 01:22:48,960
conversations

2141
01:22:48,960 --> 01:22:52,080
uh additionally i it is likely that

2142
01:22:52,080 --> 01:22:54,880
we may need additional interim uh

2143
01:22:54,880 --> 01:22:55,440
meetings

2144
01:22:55,440 --> 01:22:57,040
to talk through these things and if so

2145
01:22:57,040 --> 01:22:58,960
we can certainly get them

2146
01:22:58,960 --> 01:23:02,080
scheduled uh last part and then

2147
01:23:02,080 --> 01:23:05,360
on the next slide the

2148
01:23:05,360 --> 01:23:07,679
the topic breakdown uh something that

2149
01:23:07,679 --> 01:23:09,520
that rick and i propose

2150
01:23:09,520 --> 01:23:11,600
as a way of helping to prioritize this

2151
01:23:11,600 --> 01:23:12,639
work is

2152
01:23:12,639 --> 01:23:14,400
uh again we mentioned before there are

2153
01:23:14,400 --> 01:23:15,920
some things for which there is already a

2154
01:23:15,920 --> 01:23:17,280
lot of active involvement and we

2155
01:23:17,280 --> 01:23:18,719
certainly don't want to

2156
01:23:18,719 --> 01:23:21,120
to lose you know that that energy and

2157
01:23:21,120 --> 01:23:23,040
work that's already progressing

2158
01:23:23,040 --> 01:23:26,080
so to help us prioritize and not pick

2159
01:23:26,080 --> 01:23:28,880
too much uh but also not to not uh pick

2160
01:23:28,880 --> 01:23:29,679
too little

2161
01:23:29,679 --> 01:23:31,840
is to come back and try and look at

2162
01:23:31,840 --> 01:23:33,280
things in terms of

2163
01:23:33,280 --> 01:23:35,920
existing work and extensions to existing

2164
01:23:35,920 --> 01:23:36,400
work

2165
01:23:36,400 --> 01:23:38,000
and things that are just brand new and

2166
01:23:38,000 --> 01:23:40,080
the idea is that we could take on

2167
01:23:40,080 --> 01:23:42,480
a larger amount of existing work and

2168
01:23:42,480 --> 01:23:44,400
extensions to existing work

2169
01:23:44,400 --> 01:23:46,800
because these things are closer to being

2170
01:23:46,800 --> 01:23:48,000
finished and farther

2171
01:23:48,000 --> 01:23:50,320
along in being understood and then

2172
01:23:50,320 --> 01:23:51,840
things that are brand new work

2173
01:23:51,840 --> 01:23:54,800
uh where we will spend significant time

2174
01:23:54,800 --> 01:23:55,600
scoping

2175
01:23:55,600 --> 01:23:58,400
understanding uh you know converging on

2176
01:23:58,400 --> 01:23:59,760
on things

2177
01:23:59,760 --> 01:24:01,920
maybe we take on fewer of those because

2178
01:24:01,920 --> 01:24:03,440
those are the kinds of things

2179
01:24:03,440 --> 01:24:04,960
that could really eat up a lot of

2180
01:24:04,960 --> 01:24:06,639
mailing list time working group time and

2181
01:24:06,639 --> 01:24:07,360
could extend

2182
01:24:07,360 --> 01:24:09,600
into multiple years which is of course

2183
01:24:09,600 --> 01:24:11,600
not to say we we should not take one new

2184
01:24:11,600 --> 01:24:13,520
work that's that's obviously a big part

2185
01:24:13,520 --> 01:24:14,320
of things

2186
01:24:14,320 --> 01:24:15,679
but if we were to look back

2187
01:24:15,679 --> 01:24:17,280
realistically and say where is the

2188
01:24:17,280 --> 01:24:18,719
likely complexity

2189
01:24:18,719 --> 01:24:22,159
the likely complexity is and and concern

2190
01:24:22,159 --> 01:24:24,000
would be that we would take one too many

2191
01:24:24,000 --> 01:24:26,800
brand new things

2192
01:24:27,280 --> 01:24:29,920
and there are some new topics vital to

2193
01:24:29,920 --> 01:24:31,040
get right and at the end here we've

2194
01:24:31,040 --> 01:24:32,400
mentioned it again naming

2195
01:24:32,400 --> 01:24:35,760
and addressing is probably a big one so

2196
01:24:35,760 --> 01:24:37,440
then if we go to the next slide and say

2197
01:24:37,440 --> 01:24:39,360
these are the things that we have

2198
01:24:39,360 --> 01:24:42,480
decided uh you know are extensions to

2199
01:24:42,480 --> 01:24:44,159
existing work or we propose

2200
01:24:44,159 --> 01:24:45,840
that they are the extensions to existing

2201
01:24:45,840 --> 01:24:47,679
work again bundle and bundle

2202
01:24:47,679 --> 01:24:48,639
encapsulation

2203
01:24:48,639 --> 01:24:50,800
uh is under active development and and

2204
01:24:50,800 --> 01:24:51,920
exists

2205
01:24:51,920 --> 01:24:54,639
the manifest block is part of open

2206
01:24:54,639 --> 01:24:56,560
discussion but it has been discussed

2207
01:24:56,560 --> 01:24:57,199
prior

2208
01:24:57,199 --> 01:25:01,360
the udp convergence layer is also

2209
01:25:01,360 --> 01:25:03,120
being discussed and also a male

2210
01:25:03,120 --> 01:25:04,960
convergence layer which an http

2211
01:25:04,960 --> 01:25:06,400
convergence layer is something

2212
01:25:06,400 --> 01:25:08,960
that's come up several times convergence

2213
01:25:08,960 --> 01:25:11,120
layers are extensions we have put one

2214
01:25:11,120 --> 01:25:12,080
convergence layer

2215
01:25:12,080 --> 01:25:13,760
out we have a sense of what convergence

2216
01:25:13,760 --> 01:25:15,120
layers need to do

2217
01:25:15,120 --> 01:25:17,760
bundle and bundle encapsulation is a a

2218
01:25:17,760 --> 01:25:19,199
convergence layer

2219
01:25:19,199 --> 01:25:21,840
and so these are all things that are

2220
01:25:21,840 --> 01:25:24,159
repetitions on a theme

2221
01:25:24,159 --> 01:25:26,239
we already have a default security

2222
01:25:26,239 --> 01:25:28,159
context that has gone out if we add

2223
01:25:28,159 --> 01:25:28,800
another

2224
01:25:28,800 --> 01:25:31,120
security context uh that that certainly

2225
01:25:31,120 --> 01:25:31,920
uh helps

2226
01:25:31,920 --> 01:25:34,000
explain the concept of security context

2227
01:25:34,000 --> 01:25:35,600
and there's a lot of energy there

2228
01:25:35,600 --> 01:25:36,880
and then of course the asynchronous

2229
01:25:36,880 --> 01:25:39,360
management work is is also quite active

2230
01:25:39,360 --> 01:25:42,960
and and is existing work

2231
01:25:43,040 --> 01:25:45,360
uh so with that with an idea of that

2232
01:25:45,360 --> 01:25:46,960
which is new in that which is uh

2233
01:25:46,960 --> 01:25:49,760
existing uh and and rick please correct

2234
01:25:49,760 --> 01:25:50,880
me if you wanted to

2235
01:25:50,880 --> 01:25:52,800
approach this in a different way we were

2236
01:25:52,800 --> 01:25:54,560
going to go slide by slide

2237
01:25:54,560 --> 01:25:56,800
and talk through some of this and then

2238
01:25:56,800 --> 01:25:58,239
elicit any comments

2239
01:25:58,239 --> 01:26:00,159
for each of these topics and then when

2240
01:26:00,159 --> 01:26:01,440
we get to the end if there's anything

2241
01:26:01,440 --> 01:26:02,320
that's missing

2242
01:26:02,320 --> 01:26:04,800
we would then discuss that as as new

2243
01:26:04,800 --> 01:26:06,719
items is that about right rick

2244
01:26:06,719 --> 01:26:09,199
that's that was my plan i think there is

2245
01:26:09,199 --> 01:26:10,719
a danger if we stop

2246
01:26:10,719 --> 01:26:12,639
constantly for people to say oh what

2247
01:26:12,639 --> 01:26:14,000
about this subject

2248
01:26:14,000 --> 01:26:17,520
then we'll miss out uh

2249
01:26:17,520 --> 01:26:19,120
an active discussion over the things we

2250
01:26:19,120 --> 01:26:21,440
have already discussed at some length

2251
01:26:21,440 --> 01:26:24,880
so um this slide on asynchronous

2252
01:26:24,880 --> 01:26:27,280
management is just to say there

2253
01:26:27,280 --> 01:26:29,840
we've heard twice maybe three times now

2254
01:26:29,840 --> 01:26:31,040
today

2255
01:26:31,040 --> 01:26:33,199
that i'll turn my camera on for polinus

2256
01:26:33,199 --> 01:26:34,880
we've heard twice or maybe three times

2257
01:26:34,880 --> 01:26:36,080
today from

2258
01:26:36,080 --> 01:26:38,800
uh people saying management needs more

2259
01:26:38,800 --> 01:26:41,920
work we're really interested in amp

2260
01:26:41,920 --> 01:26:44,800
so and this is just to say although we

2261
01:26:44,800 --> 01:26:45,280
have a

2262
01:26:45,280 --> 01:26:48,400
charter item already about the

2263
01:26:48,400 --> 01:26:50,560
management architecture and we have a

2264
01:26:50,560 --> 01:26:51,760
draft which really

2265
01:26:51,760 --> 01:26:55,199
is ready for last call um

2266
01:26:55,199 --> 01:26:57,280
as an aside that we will ask for last

2267
01:26:57,280 --> 01:26:59,120
call after this meeting

2268
01:26:59,120 --> 01:27:02,159
um there's work there's energy there's

2269
01:27:02,159 --> 01:27:05,280
teams working on this uh

2270
01:27:05,280 --> 01:27:06,639
from my perspective although it's

2271
01:27:06,639 --> 01:27:08,000
existing i think it really should go

2272
01:27:08,000 --> 01:27:09,600
ahead that's the only reason this slide

2273
01:27:09,600 --> 01:27:10,239
is here

2274
01:27:10,239 --> 01:27:12,320
uh the rest of the slides are purely

2275
01:27:12,320 --> 01:27:13,920
talking about

2276
01:27:13,920 --> 01:27:17,120
the new items and breaking them down

2277
01:27:17,120 --> 01:27:20,320
so that people get some idea of of of

2278
01:27:20,320 --> 01:27:22,159
where the discussion is going

2279
01:27:22,159 --> 01:27:25,280
so carry on ed i've interrupted

2280
01:27:25,280 --> 01:27:28,400
no no no that that's good so so uh

2281
01:27:28,400 --> 01:27:31,120
yes i agreed there's a lot of of of the

2282
01:27:31,120 --> 01:27:33,040
set of existing work there's a lot

2283
01:27:33,040 --> 01:27:34,719
of good work behind there and i think

2284
01:27:34,719 --> 01:27:36,639
that a lot of that should continue i

2285
01:27:36,639 --> 01:27:38,239
certainly heard the same message

2286
01:27:38,239 --> 01:27:39,760
that management is something that we

2287
01:27:39,760 --> 01:27:41,520
need to tackle here and that it is

2288
01:27:41,520 --> 01:27:43,840
has unique parts to dtn so i think that

2289
01:27:43,840 --> 01:27:44,800
that is uh

2290
01:27:44,800 --> 01:27:46,880
fairly and and firmly in scope for a

2291
01:27:46,880 --> 01:27:47,840
recharter

2292
01:27:47,840 --> 01:27:49,600
uh and then i think we should talk

2293
01:27:49,600 --> 01:27:52,719
through these new proposals

2294
01:27:53,520 --> 01:27:56,239
so do you want me to go ahead oh no no

2295
01:27:56,239 --> 01:27:56,880
please uh

2296
01:27:56,880 --> 01:27:59,360
yeah i i i talk plenty uh why don't you

2297
01:27:59,360 --> 01:28:00,880
go through and talk through naming and

2298
01:28:00,880 --> 01:28:02,560
addressing and so on

2299
01:28:02,560 --> 01:28:04,000
yeah i'll start to peter out when it

2300
01:28:04,000 --> 01:28:05,840
gets to sort of discovery okay so

2301
01:28:05,840 --> 01:28:07,280
so naming addressing there's quite a lot

2302
01:28:07,280 --> 01:28:08,880
of detail on these slides and i'll go

2303
01:28:08,880 --> 01:28:10,159
reasonably quickly

2304
01:28:10,159 --> 01:28:13,280
but these are things that i believe

2305
01:28:13,280 --> 01:28:15,199
should be tackled as part of naming and

2306
01:28:15,199 --> 01:28:16,639
addressing so

2307
01:28:16,639 --> 01:28:18,560
um on the surface naming addressing

2308
01:28:18,560 --> 01:28:20,239
sounds really obvious because bundle

2309
01:28:20,239 --> 01:28:23,280
protocol defines the ipn and the dtn eid

2310
01:28:23,280 --> 01:28:25,440
format it specifies how you put text

2311
01:28:25,440 --> 01:28:27,520
characters in what's valid what's not

2312
01:28:27,520 --> 01:28:30,800
jobs done where's the complexity

2313
01:28:30,800 --> 01:28:32,719
the complexity really is when you start

2314
01:28:32,719 --> 01:28:34,400
to read between the lines of bundle

2315
01:28:34,400 --> 01:28:35,920
protocol version 7 and the earlier

2316
01:28:35,920 --> 01:28:37,199
bundle protocols

2317
01:28:37,199 --> 01:28:39,360
the concept of late binding of endpoints

2318
01:28:39,360 --> 01:28:40,560
is very interesting

2319
01:28:40,560 --> 01:28:43,440
it starts to suggest that an endpoint is

2320
01:28:43,440 --> 01:28:45,679
named and the name doesn't necessarily

2321
01:28:45,679 --> 01:28:46,159
give you

2322
01:28:46,159 --> 01:28:48,560
any meta information of how to get a

2323
01:28:48,560 --> 01:28:50,080
bundle to that name

2324
01:28:50,080 --> 01:28:53,440
so so-called locator identity separation

2325
01:28:53,440 --> 01:28:57,040
um okay so then if bundles are

2326
01:28:57,040 --> 01:28:59,840
bundle names are semantic rather than

2327
01:28:59,840 --> 01:29:02,000
location based or they're purely an

2328
01:29:02,000 --> 01:29:03,360
identifier

2329
01:29:03,360 --> 01:29:06,400
how do we locate them um

2330
01:29:06,400 --> 01:29:08,400
etc etc so there's a lot of questions

2331
01:29:08,400 --> 01:29:09,440
here

2332
01:29:09,440 --> 01:29:12,000
one of the other questions is okay we've

2333
01:29:12,000 --> 01:29:14,000
we've got a dtn and we've got an ipn

2334
01:29:14,000 --> 01:29:17,040
scheme are they global

2335
01:29:17,040 --> 01:29:19,280
will the interplanetary internet have a

2336
01:29:19,280 --> 01:29:21,120
single

2337
01:29:21,120 --> 01:29:24,080
set of of globally unique names if so

2338
01:29:24,080 --> 01:29:25,520
who controls them

2339
01:29:25,520 --> 01:29:27,679
uh the schemes are controlled by iona

2340
01:29:27,679 --> 01:29:29,760
the scheme registration

2341
01:29:29,760 --> 01:29:32,320
does that extend to icann handing out in

2342
01:29:32,320 --> 01:29:33,520
in a sort of dns

2343
01:29:33,520 --> 01:29:37,280
style way is it a free-for-all

2344
01:29:37,280 --> 01:29:38,639
there are some open questions there that

2345
01:29:38,639 --> 01:29:41,040
need to be addressed um

2346
01:29:41,040 --> 01:29:43,600
and the bottom point here which is

2347
01:29:43,600 --> 01:29:45,440
entity ids

2348
01:29:45,440 --> 01:29:48,000
an entity id can refer it can be a

2349
01:29:48,000 --> 01:29:49,120
multicast entity

2350
01:29:49,120 --> 01:29:52,960
so giving you multicast anycast style

2351
01:29:52,960 --> 01:29:56,159
capabilities so it's not

2352
01:29:56,159 --> 01:29:59,120
blindingly well that underlines my

2353
01:29:59,120 --> 01:30:01,199
thought that there is locator identity

2354
01:30:01,199 --> 01:30:03,120
separation going on here

2355
01:30:03,120 --> 01:30:06,239
um this is a topic that needs careful

2356
01:30:06,239 --> 01:30:07,120
thought

2357
01:30:07,120 --> 01:30:10,159
and many of these things need to be

2358
01:30:10,159 --> 01:30:12,960
tackled that's that's my pitch on naming

2359
01:30:12,960 --> 01:30:14,560
and addressing

2360
01:30:14,560 --> 01:30:18,080
as a sort of addendum to that as part of

2361
01:30:18,080 --> 01:30:19,760
our current charter there is an item

2362
01:30:19,760 --> 01:30:20,000
called

2363
01:30:20,000 --> 01:30:23,679
a registry of service identifiers so

2364
01:30:23,679 --> 01:30:25,679
this is the concept of are there common

2365
01:30:25,679 --> 01:30:27,040
bundle services

2366
01:30:27,040 --> 01:30:28,880
a bit like the common services you would

2367
01:30:28,880 --> 01:30:30,239
get in your

2368
01:30:30,239 --> 01:30:32,880
services file on a on a unix machine

2369
01:30:32,880 --> 01:30:35,679
which says port 22 is ssh

2370
01:30:35,679 --> 01:30:40,239
port 80 is is http do we have common dtn

2371
01:30:40,239 --> 01:30:44,320
services that we wish to

2372
01:30:44,320 --> 01:30:46,159
update i think there is an existing iona

2373
01:30:46,159 --> 01:30:48,080
registry do we wish to refresh

2374
01:30:48,080 --> 01:30:52,880
that do we wish to do that sort of work

2375
01:30:53,360 --> 01:30:55,679
from that point ipn has a concept of a

2376
01:30:55,679 --> 01:30:56,880
service number

2377
01:30:56,880 --> 01:31:00,880
as part of its definition dtn doesn't

2378
01:31:00,880 --> 01:31:04,080
um so that probably needs to be tackled

2379
01:31:04,080 --> 01:31:05,199
at some point

2380
01:31:05,199 --> 01:31:08,639
um and rick uh yep

2381
01:31:08,639 --> 01:31:10,400
oh i think we have somebody who joined

2382
01:31:10,400 --> 01:31:12,639
the queue oh excellent sorry i'm looking

2383
01:31:12,639 --> 01:31:14,159
at the slides not the cue we have mark

2384
01:31:14,159 --> 01:31:16,080
blanche who knows all about

2385
01:31:16,080 --> 01:31:19,760
service i did first go ahead mark

2386
01:31:21,760 --> 01:31:25,120
uh hello do you hear me yes yes

2387
01:31:25,120 --> 01:31:27,199
yeah i was i actually chatted the same

2388
01:31:27,199 --> 01:31:28,800
thing which is

2389
01:31:28,800 --> 01:31:31,840
in the chat room so um

2390
01:31:31,840 --> 01:31:35,920
uh we a while ago we discussed that we

2391
01:31:35,920 --> 01:31:37,440
would do that work after

2392
01:31:37,440 --> 01:31:40,239
you know bp business kind of you know

2393
01:31:40,239 --> 01:31:41,360
done

2394
01:31:41,360 --> 01:31:44,960
so that if anything

2395
01:31:44,960 --> 01:31:47,679
related to it is uh would have an impact

2396
01:31:47,679 --> 01:31:48,239
on

2397
01:31:48,239 --> 01:31:51,280
this thing which we all

2398
01:31:51,280 --> 01:31:53,360
thought it was you should not but you

2399
01:31:53,360 --> 01:31:55,199
know to be precocious

2400
01:31:55,199 --> 01:31:58,239
so i'm happy to resume that work and you

2401
01:31:58,239 --> 01:31:58,800
know

2402
01:31:58,800 --> 01:32:02,719
do a new draft and and working through

2403
01:32:02,719 --> 01:32:06,000
the hurdles of this work i think that's

2404
01:32:06,000 --> 01:32:06,960
very important

2405
01:32:06,960 --> 01:32:09,440
because right now there's kind of an

2406
01:32:09,440 --> 01:32:10,320
implicit

2407
01:32:10,320 --> 01:32:13,840
you know things around and

2408
01:32:13,840 --> 01:32:16,159
around people deploying that is that

2409
01:32:16,159 --> 01:32:17,040
they know

2410
01:32:17,040 --> 01:32:18,639
what they're expecting but in the

2411
01:32:18,639 --> 01:32:21,679
general context of deploying

2412
01:32:21,679 --> 01:32:24,080
like you said like you know port numbers

2413
01:32:24,080 --> 01:32:25,360
we need to

2414
01:32:25,360 --> 01:32:28,400
identify and standardize what we expect

2415
01:32:28,400 --> 01:32:28,719
to

2416
01:32:28,719 --> 01:32:30,800
receive where so i think that's an

2417
01:32:30,800 --> 01:32:31,920
important work

2418
01:32:31,920 --> 01:32:35,360
and i'm happy to start it

2419
01:32:35,600 --> 01:32:38,840
thank you yes consider yourself

2420
01:32:38,840 --> 01:32:41,679
volunteered

2421
01:32:41,679 --> 01:32:43,360
if the working group oh actually this is

2422
01:32:43,360 --> 01:32:45,120
already a charter item so you're

2423
01:32:45,120 --> 01:32:46,719
you're quite within your rights to to

2424
01:32:46,719 --> 01:32:48,800
push something immediately

2425
01:32:48,800 --> 01:32:52,239
so uh uh right i'm gonna i'm gonna keep

2426
01:32:52,239 --> 01:32:53,440
going on this because i want to try and

2427
01:32:53,440 --> 01:32:55,920
get to some discussion as well as

2428
01:32:55,920 --> 01:32:58,080
these slides are possibly useful to go

2429
01:32:58,080 --> 01:33:00,080
back to if people wish to raise explicit

2430
01:33:00,080 --> 01:33:01,280
comments

2431
01:33:01,280 --> 01:33:03,120
another topic that has come up over the

2432
01:33:03,120 --> 01:33:04,400
years repeatedly is

2433
01:33:04,400 --> 01:33:07,520
when we get bp7 out the way in bpsec etc

2434
01:33:07,520 --> 01:33:09,040
we really ought to tackle neighbor

2435
01:33:09,040 --> 01:33:10,239
discovery

2436
01:33:10,239 --> 01:33:13,760
so on my analysis neighbor discovery is

2437
01:33:13,760 --> 01:33:15,920
sort of divided actually into a couple

2438
01:33:15,920 --> 01:33:16,719
of topics

2439
01:33:16,719 --> 01:33:19,440
there's neighbor discovery is a bundle

2440
01:33:19,440 --> 01:33:21,440
protocol facility so

2441
01:33:21,440 --> 01:33:24,719
some kind of bundle protocol style arp

2442
01:33:24,719 --> 01:33:27,600
that says you know i will send bundles

2443
01:33:27,600 --> 01:33:28,000
across

2444
01:33:28,000 --> 01:33:30,719
my one hop or whatever neighborhood to

2445
01:33:30,719 --> 01:33:31,040
say

2446
01:33:31,040 --> 01:33:32,960
hey i'm here who are you what have you

2447
01:33:32,960 --> 01:33:34,719
got kind of an

2448
01:33:34,719 --> 01:33:38,400
arp analogy then if we've got service

2449
01:33:38,400 --> 01:33:40,320
identifiers do we use that as

2450
01:33:40,320 --> 01:33:43,199
service discovery as well as node id

2451
01:33:43,199 --> 01:33:44,320
discovery given

2452
01:33:44,320 --> 01:33:46,719
endpoint ids implicitly encapsulate

2453
01:33:46,719 --> 01:33:48,000
services

2454
01:33:48,000 --> 01:33:51,280
maybe also there's the element that

2455
01:33:51,280 --> 01:33:53,120
convergence layers

2456
01:33:53,120 --> 01:33:54,800
because they could well be running

2457
01:33:54,800 --> 01:33:57,280
across uh ip

2458
01:33:57,280 --> 01:33:59,280
which has its own neighbor discovery

2459
01:33:59,280 --> 01:34:01,120
mechanisms convergence layers may

2460
01:34:01,120 --> 01:34:02,400
discover neighbors

2461
01:34:02,400 --> 01:34:05,040
possibly wouldn't discover dtn services

2462
01:34:05,040 --> 01:34:06,639
at neighbours but could probably

2463
01:34:06,639 --> 01:34:08,639
discover node ids

2464
01:34:08,639 --> 01:34:11,040
and that information could flow back up

2465
01:34:11,040 --> 01:34:12,639
in a sort of event-driven way

2466
01:34:12,639 --> 01:34:15,280
into the into the bundle protocol there

2467
01:34:15,280 --> 01:34:15,840
to say

2468
01:34:15,840 --> 01:34:17,440
hey i got some neighbors if you're

2469
01:34:17,440 --> 01:34:19,199
interested

2470
01:34:19,199 --> 01:34:20,960
or do we need a hybrid approach where

2471
01:34:20,960 --> 01:34:22,639
all of this gets tied together in a sort

2472
01:34:22,639 --> 01:34:24,800
of lovely melange which all just works

2473
01:34:24,800 --> 01:34:26,320
beautifully

2474
01:34:26,320 --> 01:34:27,520
that's why i thought about neighbor

2475
01:34:27,520 --> 01:34:30,560
discovery and it's more than one draft

2476
01:34:30,560 --> 01:34:32,560
in my mind

2477
01:34:32,560 --> 01:34:36,400
um any comments on that or i'll move

2478
01:34:36,400 --> 01:34:39,599
on to the next one

2479
01:34:39,840 --> 01:34:42,239
go ahead

2480
01:34:43,920 --> 01:34:49,520
oh god scott i just want to

2481
01:34:51,280 --> 01:34:54,080
endorse the importance of this uh i

2482
01:34:54,080 --> 01:34:55,280
think the

2483
01:34:55,280 --> 01:34:58,400
uh the ip neighbor discovery protocol

2484
01:34:58,400 --> 01:34:59,840
for which we've had a draft for many

2485
01:34:59,840 --> 01:35:00,719
years

2486
01:35:00,719 --> 01:35:03,040
is uh i i think is an excellent starting

2487
01:35:03,040 --> 01:35:04,080
point uh

2488
01:35:04,080 --> 01:35:08,239
and um and i and it seems to me

2489
01:35:08,239 --> 01:35:12,080
the the the the the

2490
01:35:12,080 --> 01:35:14,560
core of neighbor discovery has to be

2491
01:35:14,560 --> 01:35:16,239
discovery at the convergence layer

2492
01:35:16,239 --> 01:35:18,639
because bottom protocol absent that

2493
01:35:18,639 --> 01:35:20,400
converts their protocol cannot hear

2494
01:35:20,400 --> 01:35:22,239
anything and so i don't know how it can

2495
01:35:22,239 --> 01:35:26,080
converse um so i i

2496
01:35:26,080 --> 01:35:28,639
strongly endorse pursuing this i think

2497
01:35:28,639 --> 01:35:29,119
it's a

2498
01:35:29,119 --> 01:35:33,199
really important uh uh charter writer

2499
01:35:33,199 --> 01:35:36,400
thanks scott go ahead brian

2500
01:35:37,520 --> 01:35:40,639
i can mention that uh i did

2501
01:35:40,639 --> 01:35:42,320
uh play around a little bit with some

2502
01:35:42,320 --> 01:35:44,239
neighbor discovery based on mene

2503
01:35:44,239 --> 01:35:47,280
and some other related protocols and

2504
01:35:47,280 --> 01:35:49,920
one of the updates to the udpcl would be

2505
01:35:49,920 --> 01:35:51,440
to enable

2506
01:35:51,440 --> 01:35:55,520
a multicast type of discovery

2507
01:35:55,520 --> 01:35:58,480
thing that is similar and warm in scope

2508
01:35:58,480 --> 01:35:59,119
to the

2509
01:35:59,119 --> 01:36:01,760
like scott said ip neighbor discovery

2510
01:36:01,760 --> 01:36:03,600
but it would be at the bp layer

2511
01:36:03,600 --> 01:36:05,840
which enables a lot of things that bp

2512
01:36:05,840 --> 01:36:07,440
takes care of things that manet

2513
01:36:07,440 --> 01:36:11,600
has to do at a lower level

2514
01:36:11,600 --> 01:36:15,040
okay okay which is interesting um

2515
01:36:15,040 --> 01:36:16,800
that that sounds like there's there's

2516
01:36:16,800 --> 01:36:18,639
such general interest and support there

2517
01:36:18,639 --> 01:36:19,119
for the

2518
01:36:19,119 --> 01:36:23,040
neighbors discovery tasks so noted

2519
01:36:23,040 --> 01:36:24,960
um what's the next slide is it more

2520
01:36:24,960 --> 01:36:28,400
contentious yes it's the big one

2521
01:36:28,560 --> 01:36:32,000
rooting okay uh so as several people

2522
01:36:32,000 --> 01:36:34,080
brought up in the um

2523
01:36:34,080 --> 01:36:37,920
the ipn sig and the esa opsats uh

2524
01:36:37,920 --> 01:36:40,159
implementation experiences

2525
01:36:40,159 --> 01:36:43,360
um routing's really hard but it has to

2526
01:36:43,360 --> 01:36:44,400
happen otherwise

2527
01:36:44,400 --> 01:36:46,159
how on earth do we work out where or

2528
01:36:46,159 --> 01:36:47,760
where to send where or when to send

2529
01:36:47,760 --> 01:36:49,440
these bundles

2530
01:36:49,440 --> 01:36:52,719
i know contact graph routing has been

2531
01:36:52,719 --> 01:36:57,920
a stalwart um now named sabre

2532
01:36:57,920 --> 01:37:01,600
from from ccsds profit has been around

2533
01:37:01,600 --> 01:37:03,040
for a long time has

2534
01:37:03,040 --> 01:37:06,159
always sounded like it works brilliantly

2535
01:37:06,159 --> 01:37:08,639
but i'm not sure anyone's used it with

2536
01:37:08,639 --> 01:37:09,920
bundle protocol version

2537
01:37:09,920 --> 01:37:13,119
7. i i know there's a group in korea who

2538
01:37:13,119 --> 01:37:14,639
wanted to talk about it

2539
01:37:14,639 --> 01:37:16,639
but they're currently trying to resolve

2540
01:37:16,639 --> 01:37:18,080
some ipr issues

2541
01:37:18,080 --> 01:37:19,920
i really hope they're listening and can

2542
01:37:19,920 --> 01:37:21,600
come and talk to us at

2543
01:37:21,600 --> 01:37:24,639
ietf 111 um

2544
01:37:24,639 --> 01:37:26,239
because they had done some tweaks for

2545
01:37:26,239 --> 01:37:27,840
bp7 which would be interesting and i

2546
01:37:27,840 --> 01:37:30,480
think we have to be realistic and say

2547
01:37:30,480 --> 01:37:32,719
we haven't solved rooting and lots of

2548
01:37:32,719 --> 01:37:34,480
people are itching to turn up with

2549
01:37:34,480 --> 01:37:37,280
exciting rooting ideas

2550
01:37:37,280 --> 01:37:40,400
so as i say here

2551
01:37:40,400 --> 01:37:43,520
uh attempting to standardize one of

2552
01:37:43,520 --> 01:37:44,080
these

2553
01:37:44,080 --> 01:37:47,119
within the working group starting

2554
01:37:47,119 --> 01:37:48,400
tomorrow

2555
01:37:48,400 --> 01:37:50,400
i think maybe beyond our current

2556
01:37:50,400 --> 01:37:51,600
bandwidth

2557
01:37:51,600 --> 01:37:54,960
i i don't think

2558
01:37:54,960 --> 01:37:56,719
we have sufficient bits and pieces

2559
01:37:56,719 --> 01:37:58,880
together to try and get this done within

2560
01:37:58,880 --> 01:38:00,400
a reasonable

2561
01:38:00,400 --> 01:38:03,840
period of time um

2562
01:38:03,840 --> 01:38:06,560
so my proposal would be to divide divide

2563
01:38:06,560 --> 01:38:07,679
the problem into a

2564
01:38:07,679 --> 01:38:09,600
into a forwarding problem and then a

2565
01:38:09,600 --> 01:38:11,440
routing problem and and what i mean by

2566
01:38:11,440 --> 01:38:12,000
that

2567
01:38:12,000 --> 01:38:14,719
is if you take a parallel from the ip

2568
01:38:14,719 --> 01:38:16,239
world and i know i'm teaching people to

2569
01:38:16,239 --> 01:38:18,400
suck x because this is the ietf

2570
01:38:18,400 --> 01:38:21,520
um a lot of the routing problems

2571
01:38:21,520 --> 01:38:24,480
um they they separate the the

2572
01:38:24,480 --> 01:38:26,560
information that the routing protocol

2573
01:38:26,560 --> 01:38:27,679
builds

2574
01:38:27,679 --> 01:38:30,880
into its routing information base

2575
01:38:30,880 --> 01:38:34,400
and the sum of whatever clever

2576
01:38:34,400 --> 01:38:38,239
protocol evaluation that is performed

2577
01:38:38,239 --> 01:38:40,960
is then placed into the forwarding

2578
01:38:40,960 --> 01:38:42,800
information base of the system which

2579
01:38:42,800 --> 01:38:44,560
actually moves the packets you know kind

2580
01:38:44,560 --> 01:38:44,880
of

2581
01:38:44,880 --> 01:38:47,520
the os kernel or or however whatever

2582
01:38:47,520 --> 01:38:50,000
your abstract image is

2583
01:38:50,000 --> 01:38:52,080
and i'm wondering whether it would be

2584
01:38:52,080 --> 01:38:54,080
achievable and beneficial for the

2585
01:38:54,080 --> 01:38:54,960
working group

2586
01:38:54,960 --> 01:38:58,159
to try and define

2587
01:38:58,159 --> 01:39:00,480
the forwarding information base in terms

2588
01:39:00,480 --> 01:39:01,840
of these are the minimum

2589
01:39:01,840 --> 01:39:06,880
things you need to have in that

2590
01:39:06,880 --> 01:39:10,000
conceptual data structure i'm not i

2591
01:39:10,000 --> 01:39:11,040
don't want to get in to see

2592
01:39:11,040 --> 01:39:13,920
implementation here or rust or name your

2593
01:39:13,920 --> 01:39:14,960
favorite language

2594
01:39:14,960 --> 01:39:17,760
i'm trying to say to do forwarding the

2595
01:39:17,760 --> 01:39:19,600
bundle processing agent needs

2596
01:39:19,600 --> 01:39:22,719
this information now i think that might

2597
01:39:22,719 --> 01:39:24,960
be achievable because it's alluded to in

2598
01:39:24,960 --> 01:39:26,080
bundle protocol version

2599
01:39:26,080 --> 01:39:29,679
7 but quite rightly bundle person

2600
01:39:29,679 --> 01:39:31,760
version 7 at a certain point says this

2601
01:39:31,760 --> 01:39:33,119
is out of scope

2602
01:39:33,119 --> 01:39:34,880
i think it might now start to be in

2603
01:39:34,880 --> 01:39:37,440
scope and it allows us to

2604
01:39:37,440 --> 01:39:40,320
see how that that forwarding table

2605
01:39:40,320 --> 01:39:42,239
interacts with neighbor discovery and

2606
01:39:42,239 --> 01:39:44,400
convergence layers and naming and

2607
01:39:44,400 --> 01:39:45,679
addressing

2608
01:39:45,679 --> 01:39:47,760
without having to work out how to do

2609
01:39:47,760 --> 01:39:49,679
full end to end root

2610
01:39:49,679 --> 01:39:53,360
um and path tie down that

2611
01:39:53,360 --> 01:39:55,920
i'm gonna flip back to the actual yeah

2612
01:39:55,920 --> 01:39:57,360
scott's in the queue i knew someone was

2613
01:39:57,360 --> 01:39:59,440
in the queue

2614
01:39:59,440 --> 01:40:02,239
go ahead scott

2615
01:40:03,280 --> 01:40:08,480
uh i think you're correct that that's

2616
01:40:08,480 --> 01:40:10,719
our thing to point off right now i i

2617
01:40:10,719 --> 01:40:11,520
think

2618
01:40:11,520 --> 01:40:14,880
um it's still a topic that

2619
01:40:14,880 --> 01:40:17,920
uh is um actively

2620
01:40:17,920 --> 01:40:20,639
being researched and i think there are

2621
01:40:20,639 --> 01:40:21,440
remain

2622
01:40:21,440 --> 01:40:25,199
new ideas that can be um

2623
01:40:25,199 --> 01:40:28,000
discovered that can be applied to it so

2624
01:40:28,000 --> 01:40:28,719
i

2625
01:40:28,719 --> 01:40:32,400
endorse the idea of like continuing to

2626
01:40:32,400 --> 01:40:34,480
study this and pay a lot of attention to

2627
01:40:34,480 --> 01:40:36,880
it and bring it up at these meetings

2628
01:40:36,880 --> 01:40:40,000
and and yet not uh yet to uh

2629
01:40:40,000 --> 01:40:44,639
commit to a a particular

2630
01:40:44,639 --> 01:40:48,320
target document production

2631
01:40:48,320 --> 01:40:51,600
uh as as part of the charter yet

2632
01:40:51,600 --> 01:40:54,239
uh one other thing i would like to say

2633
01:40:54,239 --> 01:40:56,320
in connection with that is

2634
01:40:56,320 --> 01:40:59,520
that um uh

2635
01:40:59,520 --> 01:41:02,880
i think multicast is an important

2636
01:41:02,880 --> 01:41:05,679
uh element of the forwarding and routing

2637
01:41:05,679 --> 01:41:06,320
and

2638
01:41:06,320 --> 01:41:09,119
and also of the naming and addressing uh

2639
01:41:09,119 --> 01:41:09,840
it is a

2640
01:41:09,840 --> 01:41:12,880
topic that is near and dear to my heart

2641
01:41:12,880 --> 01:41:16,480
and i think it might be

2642
01:41:16,480 --> 01:41:21,040
productive to pursue

2643
01:41:21,040 --> 01:41:23,600
multicast in the naming and addressing

2644
01:41:23,600 --> 01:41:25,760
uh sort of area

2645
01:41:25,760 --> 01:41:28,800
before plunging into

2646
01:41:28,800 --> 01:41:32,560
what we do in in terms of

2647
01:41:32,560 --> 01:41:37,040
route computation i absolutely agree

2648
01:41:37,040 --> 01:41:39,440
i absolutely agree because you're right

2649
01:41:39,440 --> 01:41:41,040
about multicast and i really wish i'd

2650
01:41:41,040 --> 01:41:42,159
put a slide in now

2651
01:41:42,159 --> 01:41:45,440
about it multicast touches addressing as

2652
01:41:45,440 --> 01:41:47,840
in how do we know it's a multicast group

2653
01:41:47,840 --> 01:41:51,119
it touches forwarding as in when i'm

2654
01:41:51,119 --> 01:41:52,480
trying to send a multi-car

2655
01:41:52,480 --> 01:41:54,560
a bundle address to something multicast

2656
01:41:54,560 --> 01:41:55,760
how do i forward that

2657
01:41:55,760 --> 01:41:57,600
and how do i know that i forwarded it to

2658
01:41:57,600 --> 01:41:58,960
all the you know and the group

2659
01:41:58,960 --> 01:41:59,760
membership

2660
01:41:59,760 --> 01:42:01,520
so it attached it affects neighbor

2661
01:42:01,520 --> 01:42:02,960
discovery how do i dis

2662
01:42:02,960 --> 01:42:06,000
what is our equivalent of igmp how do i

2663
01:42:06,000 --> 01:42:09,199
discover my multicast listeners

2664
01:42:09,199 --> 01:42:10,480
effectively

2665
01:42:10,480 --> 01:42:13,360
right yeah great subject all of these

2666
01:42:13,360 --> 01:42:15,040
things are

2667
01:42:15,040 --> 01:42:18,159
closely intertwined and

2668
01:42:18,159 --> 01:42:21,040
i mean i'm we're doing things with to

2669
01:42:21,040 --> 01:42:22,560
address all of these in ion

2670
01:42:22,560 --> 01:42:24,719
are those the right ideas i don't know

2671
01:42:24,719 --> 01:42:26,560
but it would be things

2672
01:42:26,560 --> 01:42:30,639
to offer as part of the discussion

2673
01:42:30,639 --> 01:42:32,880
and this was one of the reasons i

2674
01:42:32,880 --> 01:42:34,159
suggested that an

2675
01:42:34,159 --> 01:42:37,280
an interim perhaps to just put all the

2676
01:42:37,280 --> 01:42:39,199
naming and addressing discussion on the

2677
01:42:39,199 --> 01:42:40,320
table and just

2678
01:42:40,320 --> 01:42:43,920
chew that one subject to work out if we

2679
01:42:43,920 --> 01:42:46,480
even had any kind of consensus at all

2680
01:42:46,480 --> 01:42:48,159
i think there might be some value in

2681
01:42:48,159 --> 01:42:50,320
that um again

2682
01:42:50,320 --> 01:42:51,679
we'll see but interesting to see what

2683
01:42:51,679 --> 01:42:53,600
people's opinion is i

2684
01:42:53,600 --> 01:42:56,880
okay i'm sorry i'm not i'm hearing

2685
01:42:56,880 --> 01:42:59,760
good noises from scott about forwarding

2686
01:42:59,760 --> 01:43:01,280
we'll see what everyone else has to say

2687
01:43:01,280 --> 01:43:04,480
um what else have i got

2688
01:43:06,080 --> 01:43:10,000
i'm coughing is is then the sense that

2689
01:43:10,000 --> 01:43:13,199
uh routing in general uh is not a topic

2690
01:43:13,199 --> 01:43:14,320
that we should uh

2691
01:43:14,320 --> 01:43:16,719
look at for the current charter uh

2692
01:43:16,719 --> 01:43:19,280
because it is complex and probably best

2693
01:43:19,280 --> 01:43:19,840
tackled

2694
01:43:19,840 --> 01:43:22,480
after we do naming and addressing to

2695
01:43:22,480 --> 01:43:23,760
include multicast

2696
01:43:23,760 --> 01:43:26,080
so naming addressing in multicast uh

2697
01:43:26,080 --> 01:43:27,040
should be uh

2698
01:43:27,040 --> 01:43:30,800
in but routing routing should not be

2699
01:43:30,800 --> 01:43:33,679
in this in this next uh in this next rev

2700
01:43:33,679 --> 01:43:35,040
that that's what i took away from that

2701
01:43:35,040 --> 01:43:36,480
and i just wanted to make sure that that

2702
01:43:36,480 --> 01:43:36,960
is

2703
01:43:36,960 --> 01:43:40,560
the right thing to be hearing well my

2704
01:43:40,560 --> 01:43:43,679
proposal was that i don't think you can

2705
01:43:43,679 --> 01:43:46,320
deal with naming addressing

2706
01:43:46,320 --> 01:43:49,040
multicast and neighbor discovery without

2707
01:43:49,040 --> 01:43:51,280
pinning down

2708
01:43:51,280 --> 01:43:53,920
some generalized concept of and this

2709
01:43:53,920 --> 01:43:55,280
will populate the table

2710
01:43:55,280 --> 01:43:59,440
used for forwarding i see

2711
01:43:59,440 --> 01:44:01,199
and that that was my point about just

2712
01:44:01,199 --> 01:44:02,960
trying to get how

2713
01:44:02,960 --> 01:44:04,239
routing protocols populate the

2714
01:44:04,239 --> 01:44:05,920
forwarding information base is out of

2715
01:44:05,920 --> 01:44:06,400
scope

2716
01:44:06,400 --> 01:44:09,199
but the existence and use of a

2717
01:44:09,199 --> 01:44:11,280
forwarding information base for unicast

2718
01:44:11,280 --> 01:44:13,040
and for multicast and for

2719
01:44:13,040 --> 01:44:14,719
for names that look like this and

2720
01:44:14,719 --> 01:44:16,159
services that look like that are

2721
01:44:16,159 --> 01:44:18,320
delivered locally etc etc

2722
01:44:18,320 --> 01:44:20,719
that i think we we kind of are going to

2723
01:44:20,719 --> 01:44:22,560
have to define it and if we don't

2724
01:44:22,560 --> 01:44:26,000
we'll sort of automatically have to

2725
01:44:26,000 --> 01:44:28,000
define it at the start of every document

2726
01:44:28,000 --> 01:44:29,760
that really should refer to the standard

2727
01:44:29,760 --> 01:44:30,800
definition

2728
01:44:30,800 --> 01:44:35,440
and they'll all slightly disagree

2729
01:44:35,440 --> 01:44:38,560
yeah so uh very quickly summarizing uh

2730
01:44:38,560 --> 01:44:39,840
because i think this is the last slide

2731
01:44:39,840 --> 01:44:40,880
i've got in the deck

2732
01:44:40,880 --> 01:44:43,920
um as mentioned before there's the dtnk

2733
01:44:43,920 --> 01:44:45,199
administration work

2734
01:44:45,199 --> 01:44:47,520
uh i know scott presented some work i

2735
01:44:47,520 --> 01:44:49,520
think he'd been doing a fred templin

2736
01:44:49,520 --> 01:44:52,719
on some really clever um techniques

2737
01:44:52,719 --> 01:44:56,239
for distributing keys i mean bp sec and

2738
01:44:56,239 --> 01:44:57,520
the convergence layers require

2739
01:44:57,520 --> 01:44:59,119
cryptographic material

2740
01:44:59,119 --> 01:45:00,960
if these networks are delayed and

2741
01:45:00,960 --> 01:45:02,800
disrupted disrupted

2742
01:45:02,800 --> 01:45:05,600
then the keys still need to get there

2743
01:45:05,600 --> 01:45:06,719
just relying on

2744
01:45:06,719 --> 01:45:08,800
some unspecified outbound mechanism at a

2745
01:45:08,800 --> 01:45:09,840
band mechanism

2746
01:45:09,840 --> 01:45:11,920
okay but it would be nice to have some

2747
01:45:11,920 --> 01:45:13,520
protocols that do this that run over

2748
01:45:13,520 --> 01:45:14,800
bpsec

2749
01:45:14,800 --> 01:45:18,320
if if there's interest in doing it

2750
01:45:18,320 --> 01:45:20,559
um

2751
01:45:22,800 --> 01:45:25,840
go ahead martin i'm done

2752
01:45:34,480 --> 01:45:37,199
there we go okay much better um i think

2753
01:45:37,199 --> 01:45:39,119
i double clicked muting for some reason

2754
01:45:39,119 --> 01:45:42,400
i requested to present

2755
01:45:42,560 --> 01:45:45,679
clarifying on the um on the forwarding

2756
01:45:45,679 --> 01:45:47,600
so would it be in scope to ha

2757
01:45:47,600 --> 01:45:49,440
so is it just affording information

2758
01:45:49,440 --> 01:45:51,040
based or does health

2759
01:45:51,040 --> 01:45:52,400
does that include how forwarding

2760
01:45:52,400 --> 01:45:54,480
decisions are made

2761
01:45:54,480 --> 01:45:57,760
given that information like is vowing

2762
01:45:57,760 --> 01:46:00,960
we could okay go ahead i i if my this is

2763
01:46:00,960 --> 01:46:01,360
rick

2764
01:46:01,360 --> 01:46:04,560
speaking personally i think if you're

2765
01:46:04,560 --> 01:46:06,639
defining the forwarding information base

2766
01:46:06,639 --> 01:46:08,480
you have to define how it's used

2767
01:46:08,480 --> 01:46:11,199
otherwise it's literally just a table

2768
01:46:11,199 --> 01:46:12,719
here here is some information in the

2769
01:46:12,719 --> 01:46:13,760
table

2770
01:46:13,760 --> 01:46:16,080
it has to be driven by a use case and

2771
01:46:16,080 --> 01:46:18,560
and describe how one would

2772
01:46:18,560 --> 01:46:21,600
use it okay so that seems logical so we

2773
01:46:21,600 --> 01:46:23,199
have the table on how to use it what we

2774
01:46:23,199 --> 01:46:24,639
can't up where we are we are assuming

2775
01:46:24,639 --> 01:46:25,679
here is how that

2776
01:46:25,679 --> 01:46:28,719
data is populated

2777
01:46:28,800 --> 01:46:31,360
yeah that's i i if i was writing this

2778
01:46:31,360 --> 01:46:33,040
document i would say

2779
01:46:33,040 --> 01:46:35,199
how this table is populated is currently

2780
01:46:35,199 --> 01:46:36,960
out of scope

2781
01:46:36,960 --> 01:46:39,840
and if neighbor discovery protocols want

2782
01:46:39,840 --> 01:46:41,520
to say and actually you can populate

2783
01:46:41,520 --> 01:46:43,280
bits of the fib with the equivalent of

2784
01:46:43,280 --> 01:46:44,560
linked local

2785
01:46:44,560 --> 01:46:48,080
addresses or link local scoped

2786
01:46:48,080 --> 01:46:50,080
stuff that's great they can say and this

2787
01:46:50,080 --> 01:46:51,679
can be used to populate the following

2788
01:46:51,679 --> 01:46:54,719
fields within the forwarding information

2789
01:46:54,719 --> 01:46:55,520
base

2790
01:46:55,520 --> 01:46:57,760
so it's kind of i could see it being

2791
01:46:57,760 --> 01:46:58,719
informational

2792
01:46:58,719 --> 01:47:00,880
i don't think it needs to specify

2793
01:47:00,880 --> 01:47:02,880
anything i would say the fib would be an

2794
01:47:02,880 --> 01:47:04,159
informational document

2795
01:47:04,159 --> 01:47:07,199
to use as a reference point as part of

2796
01:47:07,199 --> 01:47:08,880
the framework of forwarding and that and

2797
01:47:08,880 --> 01:47:10,239
that discussion so there's some

2798
01:47:10,239 --> 01:47:12,960
consistency in terminology

2799
01:47:12,960 --> 01:47:14,239
i mean it seems like a sensible

2800
01:47:14,239 --> 01:47:16,239
conceptual breakdown in my mind

2801
01:47:16,239 --> 01:47:18,400
um the other related point i would make

2802
01:47:18,400 --> 01:47:21,119
is i would i would ask that the charter

2803
01:47:21,119 --> 01:47:24,080
consider the cross area um consultation

2804
01:47:24,080 --> 01:47:25,520
should happen

2805
01:47:25,520 --> 01:47:27,760
whether it be interior routing area or

2806
01:47:27,760 --> 01:47:29,360
whatever it is that's relevant to this

2807
01:47:29,360 --> 01:47:32,960
i mean you know naming and so on thanks

2808
01:47:32,960 --> 01:47:36,000
point taken agreed hey

2809
01:47:36,000 --> 01:47:39,760
uh scott i

2810
01:47:39,760 --> 01:47:41,920
like the idea of an informational

2811
01:47:41,920 --> 01:47:43,679
document um

2812
01:47:43,679 --> 01:47:46,480
that describes the um of the forwarding

2813
01:47:46,480 --> 01:47:48,000
information base i think

2814
01:47:48,000 --> 01:47:50,560
establishing concepts and terminology

2815
01:47:50,560 --> 01:47:51,920
would be very helpful

2816
01:47:51,920 --> 01:47:54,239
um the other thing i did what i

2817
01:47:54,239 --> 01:47:55,119
originally

2818
01:47:55,119 --> 01:47:58,560
originally got into the q4 was to

2819
01:47:58,560 --> 01:48:05,840
endorse certainly um

2820
01:48:09,440 --> 01:48:11,280
i care deeply about it and i want to be

2821
01:48:11,280 --> 01:48:13,599
involved

2822
01:48:15,199 --> 01:48:18,639
thanks scott um zahed hello welcome

2823
01:48:18,639 --> 01:48:22,080
on uad yes uh

2824
01:48:22,080 --> 01:48:24,080
before i mean now we're open mike i i

2825
01:48:24,080 --> 01:48:25,520
was thinking like maybe i should say

2826
01:48:25,520 --> 01:48:26,159
before you

2827
01:48:26,159 --> 01:48:28,080
start the presentation i'm describing

2828
01:48:28,080 --> 01:48:29,199
all the topics

2829
01:48:29,199 --> 01:48:32,239
but i mean help me understand the one

2830
01:48:32,239 --> 01:48:32,560
thing

2831
01:48:32,560 --> 01:48:35,440
like i think this is this is mix of

2832
01:48:35,440 --> 01:48:36,480
technical and

2833
01:48:36,480 --> 01:48:38,080
and like charter discussion rechargeable

2834
01:48:38,080 --> 01:48:39,280
discussion like there's a technical

2835
01:48:39,280 --> 01:48:40,960
difficulties and now what is included in

2836
01:48:40,960 --> 01:48:42,080
the current chapter

2837
01:48:42,080 --> 01:48:45,280
charter or what it's rechartering help

2838
01:48:45,280 --> 01:48:45,600
me

2839
01:48:45,600 --> 01:48:47,520
in this discussion to understand it

2840
01:48:47,520 --> 01:48:49,199
better like when you talk

2841
01:48:49,199 --> 01:48:50,719
talk about how to discuss something on

2842
01:48:50,719 --> 01:48:53,199
the topics also perhaps bring the

2843
01:48:53,199 --> 01:48:56,000
angle whether you guys think unlike

2844
01:48:56,000 --> 01:48:56,480
working

2845
01:48:56,480 --> 01:48:58,560
things is within the charter or you need

2846
01:48:58,560 --> 01:49:00,320
recharging or doing some of these new

2847
01:49:00,320 --> 01:49:02,639
works

2848
01:49:06,159 --> 01:49:10,080
so i was from my perspective i was

2849
01:49:10,080 --> 01:49:13,920
really just going to raise the list of

2850
01:49:13,920 --> 01:49:16,480
things we had previously talked about

2851
01:49:16,480 --> 01:49:18,880
to the working group and say everyone

2852
01:49:18,880 --> 01:49:20,159
we've we've been

2853
01:49:20,159 --> 01:49:23,280
dancing around these topics and as

2854
01:49:23,280 --> 01:49:25,920
chairs either myself or an ed or myself

2855
01:49:25,920 --> 01:49:27,119
and mark have said

2856
01:49:27,119 --> 01:49:29,599
not yet because we need to get bundled

2857
01:49:29,599 --> 01:49:32,239
protocol 7 bpsec etc tcpcl

2858
01:49:32,239 --> 01:49:34,320
out the door now they're gone we've done

2859
01:49:34,320 --> 01:49:35,360
them now

2860
01:49:35,360 --> 01:49:38,480
so we're now going to stop saying no

2861
01:49:38,480 --> 01:49:40,320
to everything but obviously we can't say

2862
01:49:40,320 --> 01:49:42,080
yes to everything

2863
01:49:42,080 --> 01:49:43,599
but here is the list of all the things

2864
01:49:43,599 --> 01:49:46,320
we said no to before

2865
01:49:46,320 --> 01:49:49,760
what do you the working group want to do

2866
01:49:49,760 --> 01:49:51,920
which has to be ordered by not only

2867
01:49:51,920 --> 01:49:53,040
interest

2868
01:49:53,040 --> 01:49:56,560
but also technical need so

2869
01:49:56,560 --> 01:49:58,400
we can't go off and all as a working

2870
01:49:58,400 --> 01:49:59,760
group go and work on some

2871
01:49:59,760 --> 01:50:01,920
crazy quantum based probabilistic

2872
01:50:01,920 --> 01:50:04,000
forwarding routing algorithm although it

2873
01:50:04,000 --> 01:50:05,599
would be great if we can all get phds

2874
01:50:05,599 --> 01:50:07,440
again

2875
01:50:07,440 --> 01:50:09,599
we'll never achieve anything what we

2876
01:50:09,599 --> 01:50:11,360
probably need to do is to tackle naming

2877
01:50:11,360 --> 01:50:13,280
and how do we find our local neighbors

2878
01:50:13,280 --> 01:50:15,679
and how do we decide what services those

2879
01:50:15,679 --> 01:50:17,119
local neighbours have got

2880
01:50:17,119 --> 01:50:20,239
and which sounds on the surface really

2881
01:50:20,239 --> 01:50:22,080
dull and boring because it's been solved

2882
01:50:22,080 --> 01:50:22,880
for ip

2883
01:50:22,880 --> 01:50:25,760
but it isn't dull and boring for for

2884
01:50:25,760 --> 01:50:27,440
bundle protocol and actually they're

2885
01:50:27,440 --> 01:50:28,239
quite

2886
01:50:28,239 --> 01:50:30,960
deep topics at times they sound really

2887
01:50:30,960 --> 01:50:33,119
obvious

2888
01:50:33,119 --> 01:50:37,119
but they need a bit of consideration and

2889
01:50:37,440 --> 01:50:39,440
it was almost a sort of uh trying to

2890
01:50:39,440 --> 01:50:40,719
taste the water um

2891
01:50:40,719 --> 01:50:42,159
is there interest in the working group

2892
01:50:42,159 --> 01:50:43,760
to do these things so

2893
01:50:43,760 --> 01:50:46,960
and this is really everyone else in this

2894
01:50:46,960 --> 01:50:47,520
meeting

2895
01:50:47,520 --> 01:50:50,000
and again on the mailing list later on

2896
01:50:50,000 --> 01:50:52,080
can you gives ahead your feedback on

2897
01:50:52,080 --> 01:50:55,440
what you i know scott's excited about

2898
01:50:55,440 --> 01:50:57,119
doing stuff i know mark's excited about

2899
01:50:57,119 --> 01:50:58,560
doing service identifiers

2900
01:50:58,560 --> 01:51:02,800
is there interest from others um

2901
01:51:02,800 --> 01:51:07,040
i'm going to do a poll you

2902
01:51:08,239 --> 01:51:09,520
i just wanted to make the the

2903
01:51:09,520 --> 01:51:11,520
observation that when we when we looked

2904
01:51:11,520 --> 01:51:11,760
at

2905
01:51:11,760 --> 01:51:13,599
and started with uh bundled protocol

2906
01:51:13,599 --> 01:51:15,840
version 6 and rfc 5050

2907
01:51:15,840 --> 01:51:18,719
again going back to 2002 there were a

2908
01:51:18,719 --> 01:51:19,440
lot of

2909
01:51:19,440 --> 01:51:22,000
deployments and lessons learned from

2910
01:51:22,000 --> 01:51:22,880
that and

2911
01:51:22,880 --> 01:51:24,560
part of that working group was to take

2912
01:51:24,560 --> 01:51:26,639
that that set of work and then turn it

2913
01:51:26,639 --> 01:51:28,239
into the non-experimental

2914
01:51:28,239 --> 01:51:30,639
specifications and because it has taken

2915
01:51:30,639 --> 01:51:32,639
uh several years for that that tail part

2916
01:51:32,639 --> 01:51:34,159
of that process

2917
01:51:34,159 --> 01:51:36,239
we now have a case where some of these

2918
01:51:36,239 --> 01:51:37,760
other activities

2919
01:51:37,760 --> 01:51:40,320
have been uh up and running in various

2920
01:51:40,320 --> 01:51:40,880
areas

2921
01:51:40,880 --> 01:51:43,599
for a few years uh or or more in

2922
01:51:43,599 --> 01:51:44,960
reference implementation

2923
01:51:44,960 --> 01:51:46,639
uh in this case i'm thinking of the

2924
01:51:46,639 --> 01:51:48,000
network management but

2925
01:51:48,000 --> 01:51:50,719
also uh some of the the routing work and

2926
01:51:50,719 --> 01:51:51,679
so on

2927
01:51:51,679 --> 01:51:54,800
and we have experience with what needs

2928
01:51:54,800 --> 01:51:55,840
to be done there so

2929
01:51:55,840 --> 01:51:58,639
i think for some of that it is working

2930
01:51:58,639 --> 01:52:00,000
through that backlog

2931
01:52:00,000 --> 01:52:02,080
to make uh based on the priority of how

2932
01:52:02,080 --> 01:52:03,599
much effort and how close are they to

2933
01:52:03,599 --> 01:52:04,480
finishing

2934
01:52:04,480 --> 01:52:06,480
and and almost having part of that next

2935
01:52:06,480 --> 01:52:09,119
recharter be like the original charter

2936
01:52:09,119 --> 01:52:11,440
which is take that body of work and

2937
01:52:11,440 --> 01:52:12,400
finish it

2938
01:52:12,400 --> 01:52:14,159
and and before we get into the things

2939
01:52:14,159 --> 01:52:16,159
that are really uh sticky and

2940
01:52:16,159 --> 01:52:19,360
and difficult to work through yeah so

2941
01:52:19,360 --> 01:52:21,440
so let me just clarify myself a bit i

2942
01:52:21,440 --> 01:52:22,480
mean i i was

2943
01:52:22,480 --> 01:52:24,880
i was reading the charter text and

2944
01:52:24,880 --> 01:52:26,159
trying to understand what has been

2945
01:52:26,159 --> 01:52:27,119
discussed so far

2946
01:52:27,119 --> 01:52:28,960
today and there was like a couple of

2947
01:52:28,960 --> 01:52:30,719
things like the service registry and

2948
01:52:30,719 --> 01:52:32,320
stuff like that those are already in the

2949
01:52:32,320 --> 01:52:34,159
chat right and there are some

2950
01:52:34,159 --> 01:52:36,000
existing architecture work and other

2951
01:52:36,000 --> 01:52:38,239
things are already yeah you guys are

2952
01:52:38,239 --> 01:52:40,400
this working group is working on but

2953
01:52:40,400 --> 01:52:42,320
there are some new topics like cosa if

2954
01:52:42,320 --> 01:52:42,960
you need like

2955
01:52:42,960 --> 01:52:45,040
a key management whether that's

2956
01:52:45,040 --> 01:52:46,800
something people are interested in

2957
01:52:46,800 --> 01:52:49,760
so i was like what i wanted to take

2958
01:52:49,760 --> 01:52:51,520
advantage of today's discussion is like

2959
01:52:51,520 --> 01:52:53,840
if when you are discussing the technical

2960
01:52:53,840 --> 01:52:55,760
discussions technical interest and

2961
01:52:55,760 --> 01:52:57,920
whether something is needed also might

2962
01:52:57,920 --> 01:52:59,360
be a footnote

2963
01:52:59,360 --> 01:53:02,000
saying like this is perhaps needs some

2964
01:53:02,000 --> 01:53:03,119
rechartering

2965
01:53:03,119 --> 01:53:06,239
so that i can record it for myself

2966
01:53:06,239 --> 01:53:08,480
for further description but that's the

2967
01:53:08,480 --> 01:53:09,440
only thing but

2968
01:53:09,440 --> 01:53:11,360
i understand like if you want to only do

2969
01:53:11,360 --> 01:53:14,000
the technical discussion and

2970
01:53:14,000 --> 01:53:15,920
pull the interest of the working group

2971
01:53:15,920 --> 01:53:17,840
that's fine you can come back to

2972
01:53:17,840 --> 01:53:19,760
recharge questions whether you say

2973
01:53:19,760 --> 01:53:21,199
including charter

2974
01:53:21,199 --> 01:53:23,040
and current chatter or we need need to

2975
01:53:23,040 --> 01:53:24,880
reach it or maybe you can revisit that

2976
01:53:24,880 --> 01:53:26,159
one later on

2977
01:53:26,159 --> 01:53:28,320
so yeah it's ahead i think that's a

2978
01:53:28,320 --> 01:53:29,440
conversation

2979
01:53:29,440 --> 01:53:32,239
uh we'll the chairs and you can have

2980
01:53:32,239 --> 01:53:35,199
between now and ietf111 where perhaps we

2981
01:53:35,199 --> 01:53:38,159
can propose a charter based on the

2982
01:53:38,159 --> 01:53:40,880
the simultaneous conversation within the

2983
01:53:40,880 --> 01:53:42,239
working group about the technical

2984
01:53:42,239 --> 01:53:44,000
aspects and the importance and then

2985
01:53:44,000 --> 01:53:47,040
at one one one we can decide whether

2986
01:53:47,040 --> 01:53:48,800
a proposed new charter works whether the

2987
01:53:48,800 --> 01:53:50,960
isg is happy to do that blah blah blah

2988
01:53:50,960 --> 01:53:53,280
if that works for you yeah sounds like a

2989
01:53:53,280 --> 01:53:54,320
good plan for me

2990
01:53:54,320 --> 01:53:58,239
cool okay uh so i've got martin who

2991
01:53:58,239 --> 01:53:59,199
another a.d

2992
01:53:59,199 --> 01:54:00,719
do you wanna do you wanna say a few

2993
01:54:00,719 --> 01:54:02,239
words sure

2994
01:54:02,239 --> 01:54:04,159
i i'll have on two completely unrelated

2995
01:54:04,159 --> 01:54:06,080
points as irresponsible ad

2996
01:54:06,080 --> 01:54:09,280
um number one uh

2997
01:54:09,280 --> 01:54:10,480
that beyond just like what the group

2998
01:54:10,480 --> 01:54:11,840
wants to work on i think it's always

2999
01:54:11,840 --> 01:54:12,960
important to ask

3000
01:54:12,960 --> 01:54:14,960
what is actually what are people like

3001
01:54:14,960 --> 01:54:16,239
really dying to deploy

3002
01:54:16,239 --> 01:54:19,119
um this is not a research group so let's

3003
01:54:19,119 --> 01:54:21,360
make sure there are clear applications

3004
01:54:21,360 --> 01:54:24,320
um the other on totally unrelated point

3005
01:54:24,320 --> 01:54:25,520
is about convergence layers

3006
01:54:25,520 --> 01:54:26,880
if i understand correctly the only thing

3007
01:54:26,880 --> 01:54:29,199
we're considering doing is udpcl

3008
01:54:29,199 --> 01:54:33,440
this at this point um

3009
01:54:33,520 --> 01:54:36,639
yes so the other thing i uh okay

3010
01:54:36,639 --> 01:54:37,760
fair enough the only thing i want to

3011
01:54:37,760 --> 01:54:40,239
pitch here is um taps

3012
01:54:40,239 --> 01:54:42,480
uh i don't know who here is aware of

3013
01:54:42,480 --> 01:54:43,280
that is it

3014
01:54:43,280 --> 01:54:47,040
is a different transport i'm not that

3015
01:54:47,040 --> 01:54:48,239
aware of taps

3016
01:54:48,239 --> 01:54:51,199
i'm sorry no no no worries so it's

3017
01:54:51,199 --> 01:54:52,400
another transport

3018
01:54:52,400 --> 01:54:54,719
working group uh there's also heads

3019
01:54:54,719 --> 01:54:56,239
actually but i'm involved in it but

3020
01:54:56,239 --> 01:54:57,760
anyway it is a generic

3021
01:54:57,760 --> 01:55:01,119
api for applications to leverage

3022
01:55:01,119 --> 01:55:02,960
whatever transports happen to be on the

3023
01:55:02,960 --> 01:55:04,560
platform by

3024
01:55:04,560 --> 01:55:07,040
they would just the very short pages

3025
01:55:07,040 --> 01:55:08,159
applications request certain

3026
01:55:08,159 --> 01:55:09,520
characteristics and then you would just

3027
01:55:09,520 --> 01:55:10,880
go find whatever

3028
01:55:10,880 --> 01:55:13,599
tls library whatever http library

3029
01:55:13,599 --> 01:55:14,800
whatever

3030
01:55:14,800 --> 01:55:16,560
tcp implementation whatever i mean

3031
01:55:16,560 --> 01:55:17,920
taking an expansive view of transport

3032
01:55:17,920 --> 01:55:19,440
from http and below

3033
01:55:19,440 --> 01:55:21,760
uh to include you know tls etc so

3034
01:55:21,760 --> 01:55:23,599
anyways the upshot of this is

3035
01:55:23,599 --> 01:55:26,960
not sure how big it is but um

3036
01:55:26,960 --> 01:55:28,639
i think that's a very fertile ground for

3037
01:55:28,639 --> 01:55:30,639
something like this where you could have

3038
01:55:30,639 --> 01:55:32,320
you could actually potentially build a

3039
01:55:32,320 --> 01:55:33,760
generic convergence layer

3040
01:55:33,760 --> 01:55:35,679
once and for all using something like

3041
01:55:35,679 --> 01:55:38,480
this and then platforms could use taps

3042
01:55:38,480 --> 01:55:40,239
to go find whatever it has that that

3043
01:55:40,239 --> 01:55:41,360
fits the requirements for the

3044
01:55:41,360 --> 01:55:42,320
application

3045
01:55:42,320 --> 01:55:46,080
so just so sorry it's just questioning

3046
01:55:46,080 --> 01:55:48,639
your your tap summary does that mean

3047
01:55:48,639 --> 01:55:50,239
an application can say i need a

3048
01:55:50,239 --> 01:55:53,199
transport with these sort of reliability

3049
01:55:53,199 --> 01:55:55,760
characteristics this sort of timeliness

3050
01:55:55,760 --> 01:55:56,560
blah blah blah

3051
01:55:56,560 --> 01:55:58,800
is this sort of security integrity etc

3052
01:55:58,800 --> 01:56:00,159
that's interesting

3053
01:56:00,159 --> 01:56:02,000
exactly yeah so just something to play i

3054
01:56:02,000 --> 01:56:03,520
mean that doesn't sound good

3055
01:56:03,520 --> 01:56:05,360
a ton of convergence layer stuff in this

3056
01:56:05,360 --> 01:56:06,560
round but it's something i think that

3057
01:56:06,560 --> 01:56:07,760
people should take a look at

3058
01:56:07,760 --> 01:56:10,080
a great entry point to this is the tsv

3059
01:56:10,080 --> 01:56:11,599
area meeting

3060
01:56:11,599 --> 01:56:14,880
from 109. uh this is the last session

3061
01:56:14,880 --> 01:56:17,679
we had a talk very similar to edwards

3062
01:56:17,679 --> 01:56:19,520
today on dtn but it was about taps by

3063
01:56:19,520 --> 01:56:20,639
brian trammell

3064
01:56:20,639 --> 01:56:22,080
there's a good 30 minute discussion of

3065
01:56:22,080 --> 01:56:23,520
what that's about if people don't want

3066
01:56:23,520 --> 01:56:24,880
to read a ton of text

3067
01:56:24,880 --> 01:56:29,040
thanks okay thanks martin

3068
01:56:29,040 --> 01:56:31,599
um so i was putting a poll together very

3069
01:56:31,599 --> 01:56:32,239
quickly

3070
01:56:32,239 --> 01:56:34,480
um basically saying is anyone interested

3071
01:56:34,480 --> 01:56:35,360
in doing this work

3072
01:56:35,360 --> 01:56:38,000
given the time i'm wondering whether

3073
01:56:38,000 --> 01:56:39,679
it's it's worth people

3074
01:56:39,679 --> 01:56:42,960
i'm going to check the chat it's worth

3075
01:56:42,960 --> 01:56:45,280
people

3076
01:56:46,560 --> 01:56:48,080
putting forward to any questions i mean

3077
01:56:48,080 --> 01:56:49,920
it really is open mic

3078
01:56:49,920 --> 01:56:53,199
um technical questions have we missed

3079
01:56:53,199 --> 01:56:55,040
something

3080
01:56:55,040 --> 01:56:57,280
uh are you itching to work on something

3081
01:56:57,280 --> 01:56:59,119
that you think is vital

3082
01:56:59,119 --> 01:57:04,239
that we have completely missed um

3083
01:57:06,239 --> 01:57:10,080
go ahead scott i'd like to

3084
01:57:10,080 --> 01:57:12,159
get in a plug for quality of service

3085
01:57:12,159 --> 01:57:13,760
again um

3086
01:57:13,760 --> 01:57:17,520
that disappeared from um funnel protocol

3087
01:57:17,520 --> 01:57:20,080
uh i think people are going to need it

3088
01:57:20,080 --> 01:57:21,040
exactly what that

3089
01:57:21,040 --> 01:57:24,560
is i think is uh open to

3090
01:57:24,560 --> 01:57:27,119
a lot of discussion but uh i i think

3091
01:57:27,119 --> 01:57:28,960
we're gonna need to have something

3092
01:57:28,960 --> 01:57:32,320
and that would be a uh an additional

3093
01:57:32,320 --> 01:57:35,520
um uh thanks for block

3094
01:57:35,520 --> 01:57:39,040
and on that top the

3095
01:57:39,040 --> 01:57:41,040
manifest extension block as ed pointed

3096
01:57:41,040 --> 01:57:42,639
out a couple of months ago

3097
01:57:42,639 --> 01:57:46,480
is maybe obviated by bp sec because

3098
01:57:46,480 --> 01:57:50,000
the um multi-target nature of

3099
01:57:50,000 --> 01:57:53,119
bibs and uh who needs the manifest

3100
01:57:53,119 --> 01:57:55,360
blocks to be able to do the job

3101
01:57:55,360 --> 01:57:58,800
yeah okay

3102
01:57:58,800 --> 01:58:01,119
i take your point on qos completely

3103
01:58:01,119 --> 01:58:03,280
missed that out and yes that's vital

3104
01:58:03,280 --> 01:58:05,679
and that opens the door to okay if

3105
01:58:05,679 --> 01:58:06,800
you're going to do qos

3106
01:58:06,800 --> 01:58:08,800
is it a one bit high priority low

3107
01:58:08,800 --> 01:58:10,000
priority switch

3108
01:58:10,000 --> 01:58:13,040
or is it a full um mpls

3109
01:58:13,040 --> 01:58:16,080
style label switch

3110
01:58:16,080 --> 01:58:19,119
pin down flow track model to allow

3111
01:58:19,119 --> 01:58:20,080
transit networks

3112
01:58:20,080 --> 01:58:21,679
uh i think the answer is somewhere in

3113
01:58:21,679 --> 01:58:23,520
between the two um because

3114
01:58:23,520 --> 01:58:25,440
bundle and bundle can handle your

3115
01:58:25,440 --> 01:58:27,679
segment routing if you want to do it

3116
01:58:27,679 --> 01:58:30,639
um but yeah it's a wide open topic i

3117
01:58:30,639 --> 01:58:31,520
think it

3118
01:58:31,520 --> 01:58:34,719
deserves a full earring

3119
01:58:34,719 --> 01:58:38,080
okay as does

3120
01:58:38,080 --> 01:58:41,040
heterogeneous naming what happens when

3121
01:58:41,040 --> 01:58:42,080
you want to address

3122
01:58:42,080 --> 01:58:45,360
a dtn eid from an ipn

3123
01:58:45,360 --> 01:58:48,480
host and how did you get the message

3124
01:58:48,480 --> 01:58:49,760
back

3125
01:58:49,760 --> 01:58:52,239
etc so that's that's kind of attract

3126
01:58:52,239 --> 01:58:54,719
that's name switching rather than

3127
01:58:54,719 --> 01:58:58,000
a netting

3128
01:58:58,239 --> 01:59:00,159
i see that as a as a routing question

3129
01:59:00,159 --> 01:59:02,080
but that's also something there's a lot

3130
01:59:02,080 --> 01:59:04,559
of time on

3131
01:59:05,199 --> 01:59:06,960
the last thing i was going to bring up

3132
01:59:06,960 --> 01:59:08,239
as a question is

3133
01:59:08,239 --> 01:59:11,040
do we do we think that there is value in

3134
01:59:11,040 --> 01:59:13,199
planning now for an interim meeting

3135
01:59:13,199 --> 01:59:16,400
uh to to sort of uh force uh

3136
01:59:16,400 --> 01:59:18,239
you know the discussions on the working

3137
01:59:18,239 --> 01:59:20,239
group in anticipation of an interim

3138
01:59:20,239 --> 01:59:20,880
meeting

3139
01:59:20,880 --> 01:59:22,560
so that we can then have a down select

3140
01:59:22,560 --> 01:59:24,400
to then better inform

3141
01:59:24,400 --> 01:59:26,800
the next uh working group meeting at the

3142
01:59:26,800 --> 01:59:28,320
next ietf

3143
01:59:28,320 --> 01:59:30,639
and just wanted to know if there was any

3144
01:59:30,639 --> 01:59:32,480
concerns about the ability to support

3145
01:59:32,480 --> 01:59:34,638
that

3146
01:59:38,480 --> 01:59:41,199
right i've just started a very quick

3147
01:59:41,199 --> 01:59:42,800
poll

3148
01:59:42,800 --> 01:59:44,159
to allow you to raise your hand or

3149
01:59:44,159 --> 01:59:46,639
whatever to say and mark

3150
01:59:46,639 --> 01:59:49,280
is in the queue

3151
01:59:50,239 --> 01:59:52,959
go ahead mark

3152
01:59:57,440 --> 02:00:00,480
you you might be muted

3153
02:00:07,760 --> 02:00:10,719
okay so i don't hear anything so maybe

3154
02:00:10,719 --> 02:00:11,679
maybe the

3155
02:00:11,679 --> 02:00:13,599
rick is the poll for an interim meeting

3156
02:00:13,599 --> 02:00:14,880
or is the poll for

3157
02:00:14,880 --> 02:00:16,719
the poll is for an interim meeting it's

3158
02:00:16,719 --> 02:00:18,800
it's would you attend an interim meeting

3159
02:00:18,800 --> 02:00:19,920
before july

3160
02:00:19,920 --> 02:00:21,920
and i'm seeing of the 30 yard

3161
02:00:21,920 --> 02:00:24,880
participants i'm seeing a five positive

3162
02:00:24,880 --> 02:00:28,800
um uh yeah okay well i'll let that

3163
02:00:28,800 --> 02:00:30,239
tickle along because we're uh we're

3164
02:00:30,239 --> 02:00:32,560
heading towards the end of the session

3165
02:00:32,560 --> 02:00:35,119
where is the pole so the pole there is a

3166
02:00:35,119 --> 02:00:36,719
there is a poles tab

3167
02:00:36,719 --> 02:00:39,760
somewhere um i don't know

3168
02:00:39,760 --> 02:00:41,199
obviously as a chair you get a slightly

3169
02:00:41,199 --> 02:00:43,360
different user interface experience

3170
02:00:43,360 --> 02:00:45,599
but it's the bar graph icon in the upper

3171
02:00:45,599 --> 02:00:46,880
right of the screen

3172
02:00:46,880 --> 02:00:49,599
thank you very much it's the bar graph

3173
02:00:49,599 --> 02:00:51,840
icon on the top right of the screen

3174
02:00:51,840 --> 02:00:55,840
it's the fifth from the left

3175
02:00:59,520 --> 02:01:02,480
so uh really the the session is coming

3176
02:01:02,480 --> 02:01:03,280
to a close

3177
02:01:03,280 --> 02:01:05,119
uh luckily they keep the microphone open

3178
02:01:05,119 --> 02:01:08,239
for a little bit longer um

3179
02:01:08,239 --> 02:01:11,440
i'm gonna watch the queue and i

3180
02:01:11,440 --> 02:01:14,239
what i'm seeing is is an overwhelmingly

3181
02:01:14,239 --> 02:01:15,360
positive

3182
02:01:15,360 --> 02:01:18,400
um yes they would attend an interim

3183
02:01:18,400 --> 02:01:21,119
um i think as ed and i mentioned before

3184
02:01:21,119 --> 02:01:22,320
an interim would be

3185
02:01:22,320 --> 02:01:25,119
a sort of uh cards on the table

3186
02:01:25,119 --> 02:01:26,159
discussion about

3187
02:01:26,159 --> 02:01:29,440
probably naming and addressing um

3188
02:01:29,440 --> 02:01:30,960
because i think that drifts into

3189
02:01:30,960 --> 02:01:33,920
neighbors quite easily

3190
02:01:33,920 --> 02:01:37,119
um but we can discuss the the

3191
02:01:37,119 --> 02:01:40,159
the actual content of the of the interim

3192
02:01:40,159 --> 02:01:40,719
on

3193
02:01:40,719 --> 02:01:43,199
on the list between now and a sort of

3194
02:01:43,199 --> 02:01:44,719
midway between now and

3195
02:01:44,719 --> 02:01:48,000
uh ietf 111 would be my proposal for for

3196
02:01:48,000 --> 02:01:50,800
when to hold the interim

3197
02:01:50,800 --> 02:01:53,760
uh ed do you have any closing comments

3198
02:01:53,760 --> 02:01:55,920
and i am going to end

3199
02:01:55,920 --> 02:01:58,960
that nope no no closing comments other

3200
02:01:58,960 --> 02:01:59,280
than

3201
02:01:59,280 --> 02:02:00,639
uh thank you to everyone who presented

3202
02:02:00,639 --> 02:02:02,639
thank you for everyone uh for your

3203
02:02:02,639 --> 02:02:03,280
attention

3204
02:02:03,280 --> 02:02:06,080
and uh please be active on the working

3205
02:02:06,080 --> 02:02:07,199
group mailing lists

3206
02:02:07,199 --> 02:02:08,800
uh particularly as we go into that

3207
02:02:08,800 --> 02:02:10,480
interim discussion because

3208
02:02:10,480 --> 02:02:13,760
uh we recharter infrequently uh and uh

3209
02:02:13,760 --> 02:02:14,960
it is important that we get the

3210
02:02:14,960 --> 02:02:17,520
priorities of these things correct

3211
02:02:17,520 --> 02:02:19,040
and equally watch the mailing list

3212
02:02:19,040 --> 02:02:20,560
because we will be asking for some

3213
02:02:20,560 --> 02:02:21,599
working group adoption

3214
02:02:21,599 --> 02:02:24,560
for uh on behalf of the authors of a

3215
02:02:24,560 --> 02:02:26,000
couple of drafts so they'll be

3216
02:02:26,000 --> 02:02:27,360
in the next couple of days a bit of a

3217
02:02:27,360 --> 02:02:29,199
flurry of emails saying

3218
02:02:29,199 --> 02:02:32,000
working group adoption yay or nay so

3219
02:02:32,000 --> 02:02:34,239
please let us have your feedback on that

3220
02:02:34,239 --> 02:02:37,199
as usual ascent is assumed as silence is

3221
02:02:37,199 --> 02:02:38,400
assumed as ascent

3222
02:02:38,400 --> 02:02:40,719
but otherwise enjoy the rest of your

3223
02:02:40,719 --> 02:02:41,520
ietf

3224
02:02:41,520 --> 02:02:44,000
uh thank you very much for attending and

3225
02:02:44,000 --> 02:02:44,880
uh

3226
02:02:44,880 --> 02:02:46,320
i will speak to you at an interim by the

3227
02:02:46,320 --> 02:02:49,759
sound of it which sounds great

3228
02:02:50,639 --> 02:03:01,360
thanks all i'm shutting the session

3229
02:03:01,360 --> 02:03:03,440
you

