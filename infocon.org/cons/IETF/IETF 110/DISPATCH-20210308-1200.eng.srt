1
00:00:05,040 --> 00:00:06,480
might be a few months before we get to

2
00:00:06,480 --> 00:00:07,600
see each other so

3
00:00:07,600 --> 00:00:10,080
thank you

4
00:00:10,880 --> 00:00:12,639
um i will just apologize as well for

5
00:00:12,639 --> 00:00:14,960
patrick um he did mention that jesus

6
00:00:14,960 --> 00:00:17,039
some personal circumstances he might not

7
00:00:17,039 --> 00:00:18,240
be here for

8
00:00:18,240 --> 00:00:19,520
all of the meeting might be slightly

9
00:00:19,520 --> 00:00:22,400
late so um you've just got me

10
00:00:22,400 --> 00:00:25,279
so hi everyone i'm i'm new to uh

11
00:00:25,279 --> 00:00:27,039
dispatch chairing this is my first one

12
00:00:27,039 --> 00:00:28,240
so go easy on me

13
00:00:28,240 --> 00:00:31,519
um i'm kirsty payne from uk ncsc

14
00:00:31,519 --> 00:00:34,399
and uh it's very exciting to be chairing

15
00:00:34,399 --> 00:00:37,120
in a virtual setting

16
00:00:37,120 --> 00:00:40,960
um yeah great to be here

17
00:00:40,960 --> 00:00:42,480
so we'll get started we've got a really

18
00:00:42,480 --> 00:00:44,640
packed agenda for today um

19
00:00:44,640 --> 00:00:46,160
just to start with to remind you of a

20
00:00:46,160 --> 00:00:47,760
note well so for many of you this will

21
00:00:47,760 --> 00:00:48,399
be your first

22
00:00:48,399 --> 00:00:50,239
itf session of the week or it might be

23
00:00:50,239 --> 00:00:51,840
your first itf session ever

24
00:00:51,840 --> 00:00:53,920
so people tend to skip over this slide

25
00:00:53,920 --> 00:00:54,960
but because we're

26
00:00:54,960 --> 00:00:56,079
early in the week i'd just like to

27
00:00:56,079 --> 00:00:58,399
remind you of all the various processes

28
00:00:58,399 --> 00:01:00,160
and itf policies that we have

29
00:01:00,160 --> 00:01:02,800
um any ietf contribution if that's

30
00:01:02,800 --> 00:01:04,319
verbal in a meeting and there's a whole

31
00:01:04,319 --> 00:01:05,040
range of what

32
00:01:05,040 --> 00:01:07,920
contributions mean and it is covered by

33
00:01:07,920 --> 00:01:08,880
this kind of

34
00:01:08,880 --> 00:01:11,439
set of processes and documents of how

35
00:01:11,439 --> 00:01:13,119
you should behave and you know code of

36
00:01:13,119 --> 00:01:14,960
conduct and patents and stuff like that

37
00:01:14,960 --> 00:01:15,840
so

38
00:01:15,840 --> 00:01:17,200
by participating you should have read

39
00:01:17,200 --> 00:01:19,759
all this stuff but just to remind you

40
00:01:19,759 --> 00:01:23,200
okay and to remind you that this session

41
00:01:23,200 --> 00:01:24,560
is being recorded

42
00:01:24,560 --> 00:01:26,400
it might be your first virtual session

43
00:01:26,400 --> 00:01:28,560
in itf so use a headset

44
00:01:28,560 --> 00:01:31,439
um if you need to add yourself to the

45
00:01:31,439 --> 00:01:33,119
queue then please add yourself to the

46
00:01:33,119 --> 00:01:33,840
queue

47
00:01:33,840 --> 00:01:35,840
you can raise hands and keep yourself

48
00:01:35,840 --> 00:01:37,280
muted unless you are

49
00:01:37,280 --> 00:01:39,040
speaking you don't have to worry about

50
00:01:39,040 --> 00:01:40,799
blue sheets and they're automatically

51
00:01:40,799 --> 00:01:41,360
taken

52
00:01:41,360 --> 00:01:44,720
um thanks to the meat echo tool and

53
00:01:44,720 --> 00:01:46,479
you can have chats as you are in jabba

54
00:01:46,479 --> 00:01:48,000
that's great but if you're

55
00:01:48,000 --> 00:01:49,759
rounding on an important point please

56
00:01:49,759 --> 00:01:51,840
think about bringing that to the queue

57
00:01:51,840 --> 00:01:54,720
so you have notes being taken and we

58
00:01:54,720 --> 00:01:55,680
also have jabba

59
00:01:55,680 --> 00:01:57,360
and if you're unsure of how any of the

60
00:01:57,360 --> 00:01:58,719
meat echo stuff happens

61
00:01:58,719 --> 00:02:00,560
um or what's going on pop something in

62
00:02:00,560 --> 00:02:02,560
the chat the folks are around to help

63
00:02:02,560 --> 00:02:04,159
there's also the participant guide if

64
00:02:04,159 --> 00:02:05,520
you're stuck on what the tools how the

65
00:02:05,520 --> 00:02:08,800
tools work

66
00:02:08,800 --> 00:02:10,720
okay so welcome to dispatch it's our

67
00:02:10,720 --> 00:02:12,400
virtual meeting um

68
00:02:12,400 --> 00:02:13,760
it's nice to see you all here we've got

69
00:02:13,760 --> 00:02:15,760
a very packed agenda so split it into

70
00:02:15,760 --> 00:02:17,680
two parts and as you know we cover the

71
00:02:17,680 --> 00:02:18,239
art

72
00:02:18,239 --> 00:02:20,319
general area as well so to start with

73
00:02:20,319 --> 00:02:21,440
we'll just go through and look at the

74
00:02:21,440 --> 00:02:22,160
agenda

75
00:02:22,160 --> 00:02:24,319
and welcome everyone in and we've got

76
00:02:24,319 --> 00:02:25,920
date and time on the internet first

77
00:02:25,920 --> 00:02:27,520
then media types content types and

78
00:02:27,520 --> 00:02:29,120
related terminology

79
00:02:29,120 --> 00:02:32,080
then some http content negotiation using

80
00:02:32,080 --> 00:02:33,680
profiles

81
00:02:33,680 --> 00:02:35,680
and for the second part of the agenda we

82
00:02:35,680 --> 00:02:37,040
have the art area

83
00:02:37,040 --> 00:02:39,280
so this is not topics to be dispatched

84
00:02:39,280 --> 00:02:41,360
but just general topics of interest

85
00:02:41,360 --> 00:02:43,920
um and a time to kind of air the views

86
00:02:43,920 --> 00:02:46,160
and air or technologies so we've got apn

87
00:02:46,160 --> 00:02:49,280
as the first slot thank you log sdp

88
00:02:49,280 --> 00:02:50,239
mapping

89
00:02:50,239 --> 00:02:52,480
and zip extensions after that as you'll

90
00:02:52,480 --> 00:02:54,800
see we leave zero minutes for aob

91
00:02:54,800 --> 00:02:56,640
all times are utc as well so just

92
00:02:56,640 --> 00:02:57,920
whatever timezone you're in please

93
00:02:57,920 --> 00:03:00,159
adjust to that

94
00:03:00,159 --> 00:03:03,040
cool and as a reminder we have mailing

95
00:03:03,040 --> 00:03:06,239
lists art topics and dispatch topics

96
00:03:06,239 --> 00:03:08,640
discussed on those various lists so just

97
00:03:08,640 --> 00:03:10,319
pause here in case anyone has an agenda

98
00:03:10,319 --> 00:03:10,720
bash

99
00:03:10,720 --> 00:03:12,800
to make please add yourself to the queue

100
00:03:12,800 --> 00:03:14,400
or any questions about

101
00:03:14,400 --> 00:03:19,840
the session this morning

102
00:03:24,000 --> 00:03:26,799
okay all right let's crack on then so

103
00:03:26,799 --> 00:03:27,519
first stitch

104
00:03:27,519 --> 00:03:30,159
dispatch topic of today uh is date and

105
00:03:30,159 --> 00:03:30,560
time

106
00:03:30,560 --> 00:03:34,319
on the internet so

107
00:03:34,319 --> 00:03:36,400
yeah i'll be driving the slides for you

108
00:03:36,400 --> 00:03:37,440
but if you just

109
00:03:37,440 --> 00:03:40,799
i think add yourself to the queue

110
00:03:40,799 --> 00:03:46,560
and then we can get talking

111
00:03:46,560 --> 00:03:49,440
hello my audibles to everyone i hope i

112
00:03:49,440 --> 00:03:50,239
am

113
00:03:50,239 --> 00:03:52,159
yeah you are you're a bit quiet but i

114
00:03:52,159 --> 00:03:54,000
can hear you

115
00:03:54,000 --> 00:03:57,680
uh that might be my headphones and

116
00:03:57,680 --> 00:04:01,760
i've requested a screen share wait i can

117
00:04:01,760 --> 00:04:04,159
uh would you work the slides or can i

118
00:04:04,159 --> 00:04:05,200
drive

119
00:04:05,200 --> 00:04:08,720
yeah okay perfect thank you uh so hello

120
00:04:08,720 --> 00:04:09,360
everyone

121
00:04:09,360 --> 00:04:12,959
uh and let's talk about date and time on

122
00:04:12,959 --> 00:04:14,640
the internet i'm mujwal

123
00:04:14,640 --> 00:04:17,918
i work at this consultancy called galia

124
00:04:17,918 --> 00:04:20,959
and if you find that uh easier to

125
00:04:20,959 --> 00:04:23,040
pronounce you can call me rizzakookan

126
00:04:23,040 --> 00:04:26,840
so let's can you progress the slides

127
00:04:26,840 --> 00:04:29,840
please

128
00:04:32,150 --> 00:04:35,239
[Music]

129
00:04:40,160 --> 00:04:46,000
[Music]

130
00:04:46,000 --> 00:04:48,800
audio just got very strange um i don't

131
00:04:48,800 --> 00:04:50,400
know if you changed something

132
00:04:50,400 --> 00:04:57,840
when i advanced

133
00:05:01,680 --> 00:05:11,840
no it's still quite distorted

134
00:05:20,320 --> 00:05:22,160
okay it's not silent i don't know if

135
00:05:22,160 --> 00:05:25,840
you're expecting to be

136
00:05:28,000 --> 00:05:31,680
me echo suggests that might be a broken

137
00:05:36,840 --> 00:05:39,840
mic

138
00:05:48,880 --> 00:05:50,639
i did a test call with him a couple of

139
00:05:50,639 --> 00:05:52,000
hours ago and it

140
00:05:52,000 --> 00:05:54,320
worked fine in jitsi but that doesn't

141
00:05:54,320 --> 00:05:56,639
mean anything

142
00:05:56,639 --> 00:06:00,160
excuse me okay what about now

143
00:06:00,160 --> 00:06:03,520
much better oh okay uh

144
00:06:03,520 --> 00:06:07,360
okay so specifically inside of tc39 i am

145
00:06:07,360 --> 00:06:09,840
a part of the temporal champions group

146
00:06:09,840 --> 00:06:11,759
which is a group that has been tasked

147
00:06:11,759 --> 00:06:12,960
specifically

148
00:06:12,960 --> 00:06:15,360
with standardizing an update to the

149
00:06:15,360 --> 00:06:16,080
javascript

150
00:06:16,080 --> 00:06:19,600
date object which is a a constant pain

151
00:06:19,600 --> 00:06:20,240
point

152
00:06:20,240 --> 00:06:22,080
so they've been working on a modern

153
00:06:22,080 --> 00:06:24,080
ergonomic api for building daily time

154
00:06:24,080 --> 00:06:25,600
applications on the internet

155
00:06:25,600 --> 00:06:26,880
and there's a bunch of really cool

156
00:06:26,880 --> 00:06:29,520
people in this subgroup as well

157
00:06:29,520 --> 00:06:34,400
would you uh progress the slides

158
00:06:34,400 --> 00:06:36,639
okay so what is so special about

159
00:06:36,639 --> 00:06:37,440
temporal

160
00:06:37,440 --> 00:06:40,000
uh i am a little biased maybe you could

161
00:06:40,000 --> 00:06:41,919
say but we have come upon

162
00:06:41,919 --> 00:06:44,240
something which is a modern ergonomic

163
00:06:44,240 --> 00:06:44,960
api it

164
00:06:44,960 --> 00:06:46,400
addresses some of the long-standing

165
00:06:46,400 --> 00:06:48,479
weaknesses and we use

166
00:06:48,479 --> 00:06:51,039
3539 as the base interchange format for

167
00:06:51,039 --> 00:06:52,080
the different

168
00:06:52,080 --> 00:06:55,680
uh objects that we use we also have

169
00:06:55,680 --> 00:06:57,680
first class time zone support

170
00:06:57,680 --> 00:06:59,759
and first class calendar support for the

171
00:06:59,759 --> 00:07:01,520
different

172
00:07:01,520 --> 00:07:04,400
apis which is is something of the first

173
00:07:04,400 --> 00:07:05,759
in our space

174
00:07:05,759 --> 00:07:08,479
uh which means that now we have

175
00:07:08,479 --> 00:07:10,400
different objects which have time zones

176
00:07:10,400 --> 00:07:11,199
and counters

177
00:07:11,199 --> 00:07:14,080
inside of the data model and then you

178
00:07:14,080 --> 00:07:14,639
could ask

179
00:07:14,639 --> 00:07:16,479
well how does one persist that how does

180
00:07:16,479 --> 00:07:17,680
one persist

181
00:07:17,680 --> 00:07:19,680
a time zone that is attached to a date

182
00:07:19,680 --> 00:07:21,840
time or a time stamp

183
00:07:21,840 --> 00:07:23,759
uh could you please uh progress the

184
00:07:23,759 --> 00:07:26,160
slides

185
00:07:28,880 --> 00:07:31,919
okay so this is the standard

186
00:07:31,919 --> 00:07:34,560
uh timestamp as one might expect

187
00:07:34,560 --> 00:07:37,919
according to 3dz 9

188
00:07:38,000 --> 00:07:41,039
and if you progress the slides you

189
00:07:41,039 --> 00:07:43,680
would see that the time zone conundrum

190
00:07:43,680 --> 00:07:44,160
is

191
00:07:44,160 --> 00:07:46,800
is a special one it's a special one

192
00:07:46,800 --> 00:07:47,360
because

193
00:07:47,360 --> 00:07:49,280
fortunately or unfortunately we are not

194
00:07:49,280 --> 00:07:50,560
the first people

195
00:07:50,560 --> 00:07:53,039
first group of people to to come upon

196
00:07:53,039 --> 00:07:54,000
this problem

197
00:07:54,000 --> 00:07:57,440
uh 369 and the underlying iso

198
00:07:57,440 --> 00:08:00,639
standard 8601 allows absolute offsets

199
00:08:00,639 --> 00:08:01,440
from utc

200
00:08:01,440 --> 00:08:03,360
but many applications all over the

201
00:08:03,360 --> 00:08:04,800
internet uh

202
00:08:04,800 --> 00:08:07,199
work in the context of what one may call

203
00:08:07,199 --> 00:08:09,120
a human time zone

204
00:08:09,120 --> 00:08:12,319
uh and of course you need to encode the

205
00:08:12,319 --> 00:08:14,639
timestamp for persistent or

206
00:08:14,639 --> 00:08:16,400
for persistence or for interchange

207
00:08:16,400 --> 00:08:17,680
inside a database

208
00:08:17,680 --> 00:08:20,960
or to just round trip across clients

209
00:08:20,960 --> 00:08:22,960
and and you could ask well what is a

210
00:08:22,960 --> 00:08:24,160
human time zone

211
00:08:24,160 --> 00:08:26,879
is it a time zone that is that is

212
00:08:26,879 --> 00:08:28,080
included in the list of

213
00:08:28,080 --> 00:08:31,120
time zones by anna or is it uh

214
00:08:31,120 --> 00:08:33,679
as specified by unicode and well the

215
00:08:33,679 --> 00:08:34,880
group of people

216
00:08:34,880 --> 00:08:37,200
that came across this problem includes

217
00:08:37,200 --> 00:08:38,320
people from

218
00:08:38,320 --> 00:08:41,039
uh developing applications all over

219
00:08:41,039 --> 00:08:41,679
right there's

220
00:08:41,679 --> 00:08:45,040
java which built a similar api there's

221
00:08:45,040 --> 00:08:48,240
linux tools like date there's databases

222
00:08:48,240 --> 00:08:51,040
and then there's calendar applications

223
00:08:51,040 --> 00:08:52,560
so if you progress the slides

224
00:08:52,560 --> 00:08:55,680
you would see that now

225
00:08:55,680 --> 00:08:58,320
uh it's common even on the internet to

226
00:08:58,320 --> 00:08:59,519
come across

227
00:08:59,519 --> 00:09:01,519
a time stamp quite like this now it's my

228
00:09:01,519 --> 00:09:02,800
local time zone

229
00:09:02,800 --> 00:09:05,839
but you could see that uh apart from the

230
00:09:05,839 --> 00:09:07,519
time zone there's a suffix

231
00:09:07,519 --> 00:09:11,279
that that includes a an identifier for

232
00:09:11,279 --> 00:09:12,240
my time zone

233
00:09:12,240 --> 00:09:15,519
if you propose the slides there is

234
00:09:15,519 --> 00:09:18,000
another variant which includes the iana

235
00:09:18,000 --> 00:09:19,120
time zone

236
00:09:19,120 --> 00:09:23,120
and the next one would be

237
00:09:23,120 --> 00:09:26,640
this and this is i i believe a format

238
00:09:26,640 --> 00:09:27,440
that is

239
00:09:27,440 --> 00:09:29,360
quite popular at this point now the

240
00:09:29,360 --> 00:09:31,120
previous ones are

241
00:09:31,120 --> 00:09:33,440
especially popular in the database basis

242
00:09:33,440 --> 00:09:35,519
but this is something that i feel

243
00:09:35,519 --> 00:09:37,440
many people have encountered in the wild

244
00:09:37,440 --> 00:09:39,360
even though it is something

245
00:09:39,360 --> 00:09:41,519
that is not in the sanders track so if

246
00:09:41,519 --> 00:09:43,279
you move ahead

247
00:09:43,279 --> 00:09:46,480
uh the question is are we done

248
00:09:46,480 --> 00:09:48,480
and the answer is unfortunately not

249
00:09:48,480 --> 00:09:51,040
quite this format first of all was never

250
00:09:51,040 --> 00:09:52,320
standardized uh

251
00:09:52,320 --> 00:09:55,600
java or whoever

252
00:09:55,600 --> 00:09:58,640
first came across this uh just

253
00:09:58,640 --> 00:10:00,560
just move ahead with this without ever

254
00:10:00,560 --> 00:10:01,760
sanitizing it

255
00:10:01,760 --> 00:10:04,160
and of course one of the big problems is

256
00:10:04,160 --> 00:10:05,760
that there's so much more information

257
00:10:05,760 --> 00:10:06,959
that can be encoded

258
00:10:06,959 --> 00:10:10,079
for us specifically in temporal

259
00:10:10,079 --> 00:10:12,399
calendars are a big priority so we need

260
00:10:12,399 --> 00:10:13,839
calendars for

261
00:10:13,839 --> 00:10:16,959
uh all of these things i'm sorry uh

262
00:10:16,959 --> 00:10:19,920
and what else we can have cldr time

263
00:10:19,920 --> 00:10:20,480
zones

264
00:10:20,480 --> 00:10:22,720
we can have different numbering systems

265
00:10:22,720 --> 00:10:24,560
uh we can even have time skills

266
00:10:24,560 --> 00:10:26,720
so there is in fact a need for a

267
00:10:26,720 --> 00:10:28,959
generalized format that that

268
00:10:28,959 --> 00:10:32,000
is uh that provides people a way

269
00:10:32,000 --> 00:10:35,440
to form uh to

270
00:10:35,440 --> 00:10:38,640
format extensions in a way that

271
00:10:38,640 --> 00:10:40,399
that is agreed upon and generalized

272
00:10:40,399 --> 00:10:42,560
instead of just just coming up with ad

273
00:10:42,560 --> 00:10:44,480
hoc designs that don't play along well

274
00:10:44,480 --> 00:10:46,000
with each other possibly

275
00:10:46,000 --> 00:10:48,000
and there's also a need for a process to

276
00:10:48,000 --> 00:10:49,760
specify these keys the

277
00:10:49,760 --> 00:10:52,880
different information

278
00:10:52,880 --> 00:10:55,600
pieces of information that can be added

279
00:10:55,600 --> 00:10:55,920
and

280
00:10:55,920 --> 00:10:59,040
the list of acceptable values so

281
00:10:59,040 --> 00:11:02,320
if you move ahead uh

282
00:11:02,320 --> 00:11:05,200
this is something close to what we came

283
00:11:05,200 --> 00:11:05,839
up with i

284
00:11:05,839 --> 00:11:08,880
changed the time in the uh

285
00:11:08,880 --> 00:11:12,000
okay so on the left you would see

286
00:11:12,000 --> 00:11:15,360
uh what we usually see but towards the

287
00:11:15,360 --> 00:11:15,839
end

288
00:11:15,839 --> 00:11:19,519
there's uh another piece of information

289
00:11:19,519 --> 00:11:20,399
and this is

290
00:11:20,399 --> 00:11:23,040
a tag that includes a more generalized

291
00:11:23,040 --> 00:11:24,240
form of including

292
00:11:24,240 --> 00:11:28,320
any information in the timestamp so

293
00:11:28,320 --> 00:11:31,600
moving ahead we

294
00:11:31,600 --> 00:11:34,560
could see that temporal could utilize

295
00:11:34,560 --> 00:11:35,519
this format

296
00:11:35,519 --> 00:11:39,200
to to have its own extended version of

297
00:11:39,200 --> 00:11:40,640
359 strings

298
00:11:40,640 --> 00:11:44,240
and so we can we can use this to uh

299
00:11:44,240 --> 00:11:47,279
express what the calendar is like but uh

300
00:11:47,279 --> 00:11:50,480
hypothetically uh sorry ideally one

301
00:11:50,480 --> 00:11:51,360
could

302
00:11:51,360 --> 00:11:55,440
use this to include any information

303
00:11:55,440 --> 00:11:59,279
so if you move ahead

304
00:12:01,760 --> 00:12:05,120
uh yeah so this is a link

305
00:12:05,120 --> 00:12:07,600
back to the to the draft that i came up

306
00:12:07,600 --> 00:12:08,240
with

307
00:12:08,240 --> 00:12:11,600
uh we tried as uh tc39 to share

308
00:12:11,600 --> 00:12:13,600
observations with ietf

309
00:12:13,600 --> 00:12:16,720
to to upstream one could say this format

310
00:12:16,720 --> 00:12:17,360
to the

311
00:12:17,360 --> 00:12:20,320
standard track uh we tried keep folks

312
00:12:20,320 --> 00:12:21,360
from calconnect

313
00:12:21,360 --> 00:12:25,040
which is the liaison for iso in the loop

314
00:12:25,040 --> 00:12:28,000
the goal was to standardize generalized

315
00:12:28,000 --> 00:12:29,440
and optional extensions

316
00:12:29,440 --> 00:12:32,959
as well as modernized 339 which is

317
00:12:32,959 --> 00:12:36,480
uh gone out of sync one could say

318
00:12:36,480 --> 00:12:38,639
with the underlying iso 8601 with things

319
00:12:38,639 --> 00:12:40,720
like extended years syntax

320
00:12:40,720 --> 00:12:44,000
and also deprecating the fallback that

321
00:12:44,000 --> 00:12:45,680
allows two or three digits

322
00:12:45,680 --> 00:12:50,160
years we were trying to also standardize

323
00:12:50,160 --> 00:12:52,160
a mechanism for registering these keys

324
00:12:52,160 --> 00:12:55,680
quite similar to how bcp-47 does

325
00:12:55,680 --> 00:12:57,839
and we've been working simultaneously

326
00:12:57,839 --> 00:13:01,120
with unicode folks for

327
00:13:01,120 --> 00:13:03,519
coming up with a new namespace for these

328
00:13:03,519 --> 00:13:04,560
things so that

329
00:13:04,560 --> 00:13:07,600
you know time zones as well as

330
00:13:07,600 --> 00:13:10,240
calendars as specified by the unicode

331
00:13:10,240 --> 00:13:12,079
consortium could work

332
00:13:12,079 --> 00:13:15,760
uh moving ahead we

333
00:13:15,760 --> 00:13:18,560
uh the question now is how do we move

334
00:13:18,560 --> 00:13:20,880
ahead with this right uh we brought our

335
00:13:20,880 --> 00:13:23,279
findings to the calyx working group

336
00:13:23,279 --> 00:13:25,519
as well as calconnect uh which happened

337
00:13:25,519 --> 00:13:26,639
to be the two

338
00:13:26,639 --> 00:13:30,160
uh sort of big bodies that deal with

339
00:13:30,160 --> 00:13:30,720
these

340
00:13:30,720 --> 00:13:32,720
these changes in this space right we

341
00:13:32,720 --> 00:13:33,760
also the drafts

342
00:13:33,760 --> 00:13:35,760
which with the express goal of

343
00:13:35,760 --> 00:13:38,079
obsoleting 339 with these optional

344
00:13:38,079 --> 00:13:39,440
extensions so

345
00:13:39,440 --> 00:13:41,680
uh of course everything that is accepted

346
00:13:41,680 --> 00:13:43,760
right now is still accepted

347
00:13:43,760 --> 00:13:47,600
uh and we included updates

348
00:13:47,600 --> 00:13:49,920
with these optional extensions uh there

349
00:13:49,920 --> 00:13:51,360
was some pushback

350
00:13:51,360 --> 00:13:54,639
uh understandably to obsoleting 3d v9

351
00:13:54,639 --> 00:13:57,279
and so now i've tried to split the

352
00:13:57,279 --> 00:13:59,040
updates into another draft

353
00:13:59,040 --> 00:14:01,839
so that that could be accepted uh

354
00:14:01,839 --> 00:14:03,680
individually and then

355
00:14:03,680 --> 00:14:06,000
these extensions could live on as an

356
00:14:06,000 --> 00:14:07,040
add-on

357
00:14:07,040 --> 00:14:09,680
uh the question that now we're grappling

358
00:14:09,680 --> 00:14:10,480
with is

359
00:14:10,480 --> 00:14:13,440
can both be accepted and if they can

360
00:14:13,440 --> 00:14:13,920
then

361
00:14:13,920 --> 00:14:16,320
then by which working group specifically

362
00:14:16,320 --> 00:14:18,000
and do we even

363
00:14:18,000 --> 00:14:20,720
have a working group that that deals

364
00:14:20,720 --> 00:14:23,760
with this or do we need a new one

365
00:14:23,760 --> 00:14:26,959
and that said if you progress to the

366
00:14:26,959 --> 00:14:30,240
next slide

367
00:14:30,240 --> 00:14:34,880
thank you for having me here that's it

368
00:14:35,040 --> 00:14:37,279
great thank you um for your presentation

369
00:14:37,279 --> 00:14:39,279
so we've got time now for discussion

370
00:14:39,279 --> 00:14:41,760
um i've seen there's a lot of java chat

371
00:14:41,760 --> 00:14:42,800
going on

372
00:14:42,800 --> 00:14:45,199
any kind of if we focus on the dispatch

373
00:14:45,199 --> 00:14:46,720
questions here as well do we think this

374
00:14:46,720 --> 00:14:47,120
work

375
00:14:47,120 --> 00:14:50,160
is um valuable belongs in the itf and

376
00:14:50,160 --> 00:14:52,399
where would it go where should it go

377
00:14:52,399 --> 00:14:59,600
so i can see i've got pete in the queue

378
00:14:59,600 --> 00:15:01,279
we have to see if all this stuff works

379
00:15:01,279 --> 00:15:02,720
yes uh

380
00:15:02,720 --> 00:15:06,320
morning uh so first

381
00:15:06,320 --> 00:15:09,440
one quick question which is um

382
00:15:09,440 --> 00:15:11,839
does anybody have a sense of what cal

383
00:15:11,839 --> 00:15:13,680
ext thought of this

384
00:15:13,680 --> 00:15:15,360
like which what direction did the

385
00:15:15,360 --> 00:15:18,399
discussion go in there

386
00:15:20,480 --> 00:15:22,240
my personal impression was that it was

387
00:15:22,240 --> 00:15:24,160
really positive but i think braun can

388
00:15:24,160 --> 00:15:26,079
add more to that

389
00:15:26,079 --> 00:15:28,800
yeah as calyx chair i'll pop in uh to

390
00:15:28,800 --> 00:15:30,240
comment on that

391
00:15:30,240 --> 00:15:31,600
assuming you can hear me it's telling me

392
00:15:31,600 --> 00:15:33,360
attention you're not detecting audio but

393
00:15:33,360 --> 00:15:34,639
i think that's that wasn't talking to

394
00:15:34,639 --> 00:15:35,839
start off with

395
00:15:35,839 --> 00:15:39,360
thanks signal all right

396
00:15:39,360 --> 00:15:42,639
uh positive to the idea with some

397
00:15:42,639 --> 00:15:44,320
caveats of

398
00:15:44,320 --> 00:15:45,920
this is complex we probably want to

399
00:15:45,920 --> 00:15:47,360
spend some time talking about it but

400
00:15:47,360 --> 00:15:50,079
very negative to the idea of obsoleting

401
00:15:50,079 --> 00:15:51,920
rfc 3339 and

402
00:15:51,920 --> 00:15:54,320
defining a complete format that included

403
00:15:54,320 --> 00:15:55,360
everything

404
00:15:55,360 --> 00:15:58,399
so the idea is yes we can do this work

405
00:15:58,399 --> 00:16:00,720
but let's leave 339 by itself so that

406
00:16:00,720 --> 00:16:03,600
places where there's just a time stamp

407
00:16:03,600 --> 00:16:06,240
with with nothing else can stay like

408
00:16:06,240 --> 00:16:07,600
that like that

409
00:16:07,600 --> 00:16:09,920
okay and and so that brings me to

410
00:16:09,920 --> 00:16:11,600
question two which is

411
00:16:11,600 --> 00:16:14,720
can you give an example of where such a

412
00:16:14,720 --> 00:16:17,279
thing would be used to express a time

413
00:16:17,279 --> 00:16:19,120
i understand for calendars like

414
00:16:19,120 --> 00:16:22,480
expressing ongoing things

415
00:16:22,480 --> 00:16:25,199
and and uh you know that that makes

416
00:16:25,199 --> 00:16:25,839
sense

417
00:16:25,839 --> 00:16:28,720
but for expressing a single time why is

418
00:16:28,720 --> 00:16:30,320
it important to mention

419
00:16:30,320 --> 00:16:33,440
the locality beyond

420
00:16:33,440 --> 00:16:36,959
to maintain the contact with

421
00:16:39,759 --> 00:16:41,199
it was within a particular calendar

422
00:16:41,199 --> 00:16:42,959
system when it was generated maintaining

423
00:16:42,959 --> 00:16:44,639
that context allows you to know this was

424
00:16:44,639 --> 00:16:45,839
a time in like

425
00:16:45,839 --> 00:16:49,440
it happened at 9am context

426
00:16:49,440 --> 00:16:51,839
rather than it happened so you might be

427
00:16:51,839 --> 00:16:54,560
hanging 9am

428
00:16:55,040 --> 00:16:56,720
and saying yeah and want to retain that

429
00:16:56,720 --> 00:16:58,160
context through

430
00:16:58,160 --> 00:17:00,639
whatever else you're doing okay no that

431
00:17:00,639 --> 00:17:05,839
works for me thanks

432
00:17:06,959 --> 00:17:10,559
okay carsten you're next in the queue

433
00:17:12,160 --> 00:17:14,799
yes thank you um so in in the jabber

434
00:17:14,799 --> 00:17:16,799
room i already pointed out that

435
00:17:16,799 --> 00:17:18,959
in in the sibo working group which is

436
00:17:18,959 --> 00:17:20,959
actually meeting in the next slot

437
00:17:20,959 --> 00:17:24,319
um we have a draft

438
00:17:24,319 --> 00:17:27,359
uh defining a sibo tag for

439
00:17:27,359 --> 00:17:30,240
time now sibo already has two tags for

440
00:17:30,240 --> 00:17:31,440
time one for

441
00:17:31,440 --> 00:17:35,120
rfc 339 times and one for posix

442
00:17:35,120 --> 00:17:38,320
times but it has turned out that we

443
00:17:38,320 --> 00:17:41,120
we need more detail in time so there is

444
00:17:41,120 --> 00:17:41,760
a

445
00:17:41,760 --> 00:17:45,360
time tag 1001 that defines a few more

446
00:17:45,360 --> 00:17:48,799
properties of times and and that is now

447
00:17:48,799 --> 00:17:51,280
growing a bit according to requirements

448
00:17:51,280 --> 00:17:52,559
that other

449
00:17:52,559 --> 00:17:55,679
people have so in essence what what's

450
00:17:55,679 --> 00:17:59,120
happening is that we are defining a

451
00:17:59,120 --> 00:17:59,760
little

452
00:17:59,760 --> 00:18:03,200
information model uh for time

453
00:18:03,200 --> 00:18:06,720
and i'm wondering uh

454
00:18:06,720 --> 00:18:08,559
how we can make sure that that what

455
00:18:08,559 --> 00:18:10,640
really fine actually works well with

456
00:18:10,640 --> 00:18:11,440
what

457
00:18:11,440 --> 00:18:14,480
other people are doing in this space so

458
00:18:14,480 --> 00:18:16,080
we would be very interested

459
00:18:16,080 --> 00:18:19,200
in in making sure this this is all well

460
00:18:19,200 --> 00:18:21,919
coordinated

461
00:18:27,039 --> 00:18:30,080
yeah i i'm all up for coordination i

462
00:18:30,080 --> 00:18:30,799
think we could

463
00:18:30,799 --> 00:18:34,400
uh touch base once this session is over

464
00:18:34,400 --> 00:18:37,600
and we could discuss that

465
00:18:38,720 --> 00:18:41,280
okay thanks um daniel you're next in the

466
00:18:41,280 --> 00:18:43,840
queue

467
00:18:46,160 --> 00:18:49,840
dkg can't hear you

468
00:18:50,400 --> 00:18:54,080
i can see you but no audio i'll give you

469
00:18:54,080 --> 00:18:57,840
a sec

470
00:18:59,520 --> 00:19:01,200
if nothing else fix this is a good time

471
00:19:01,200 --> 00:19:02,799
to test out your audio

472
00:19:02,799 --> 00:19:05,918
join the queue with questions

473
00:19:07,760 --> 00:19:10,240
just getting background noise now dkg

474
00:19:10,240 --> 00:19:12,880
still can't hear you

475
00:19:16,480 --> 00:19:19,440
sorry shall i skip ahead and just get

476
00:19:19,440 --> 00:19:20,960
harold for a second i think you were

477
00:19:20,960 --> 00:19:22,400
just going to ask what was in the java

478
00:19:22,400 --> 00:19:22,960
chat right

479
00:19:22,960 --> 00:19:25,600
so i can relay it for you with um you

480
00:19:25,600 --> 00:19:27,120
said you don't understand what the

481
00:19:27,120 --> 00:19:28,960
recipient calendaring system should do

482
00:19:28,960 --> 00:19:31,280
it sees the conflicting utc offset and i

483
00:19:31,280 --> 00:19:32,880
on a label

484
00:19:32,880 --> 00:19:34,160
so i guess that's the question you're

485
00:19:34,160 --> 00:19:39,840
going to ask um

486
00:19:39,919 --> 00:19:42,160
uh i was focusing on meat echo but i

487
00:19:42,160 --> 00:19:43,919
could just jump on jabra chat in a

488
00:19:43,919 --> 00:19:46,160
second and answer that

489
00:19:46,160 --> 00:19:48,799
that's okay

490
00:19:51,679 --> 00:19:53,280
yeah or answer the question now if you

491
00:19:53,280 --> 00:19:56,480
have immediate thoughts on it

492
00:19:57,840 --> 00:20:01,679
do you read up uh on the message but let

493
00:20:01,679 --> 00:20:07,840
me just give me

494
00:20:11,919 --> 00:20:14,960
about the the

495
00:20:14,960 --> 00:20:17,600
uh i am the time zones changing over

496
00:20:17,600 --> 00:20:18,640
time

497
00:20:18,640 --> 00:20:21,840
if i'm correct

498
00:20:22,080 --> 00:20:23,919
it's just if the recipient calendaring

499
00:20:23,919 --> 00:20:26,320
system has a conflict with the utc

500
00:20:26,320 --> 00:20:28,559
offset and the iona label

501
00:20:28,559 --> 00:20:32,000
do you know i see yeah uh

502
00:20:32,000 --> 00:20:35,200
the the utc offset is a uh

503
00:20:35,200 --> 00:20:38,799
is supposed to be the source of truth in

504
00:20:38,799 --> 00:20:39,919
those matters

505
00:20:39,919 --> 00:20:43,120
the uh the labels and

506
00:20:43,120 --> 00:20:46,400
any additional information is

507
00:20:46,400 --> 00:20:48,880
something that can be used by the client

508
00:20:48,880 --> 00:20:50,880
to

509
00:20:50,880 --> 00:20:53,360
implementation you could say to you to

510
00:20:53,360 --> 00:20:55,200
process additional information

511
00:20:55,200 --> 00:20:59,039
right additional context but it's not uh

512
00:20:59,039 --> 00:21:01,440
necessary to take those into account and

513
00:21:01,440 --> 00:21:02,080
and

514
00:21:02,080 --> 00:21:03,520
maybe there'd be a bunch of

515
00:21:03,520 --> 00:21:04,960
implementations that don't even care

516
00:21:04,960 --> 00:21:06,080
about them right

517
00:21:06,080 --> 00:21:08,320
uh if they're not doing any localization

518
00:21:08,320 --> 00:21:09,280
or

519
00:21:09,280 --> 00:21:12,480
uh uh they're not dealing directly with

520
00:21:12,480 --> 00:21:13,440
any humans

521
00:21:13,440 --> 00:21:15,200
if they're doing timestamps or things

522
00:21:15,200 --> 00:21:17,840
like that

523
00:21:18,320 --> 00:21:20,159
cool thank you we've got a couple more

524
00:21:20,159 --> 00:21:24,320
in the queue so um harold you next

525
00:21:24,799 --> 00:21:27,919
so there is

526
00:21:27,919 --> 00:21:30,400
glance through the document and one of

527
00:21:30,400 --> 00:21:31,760
the things that

528
00:21:31,760 --> 00:21:34,240
i wondered about was you import

529
00:21:34,240 --> 00:21:35,280
wholesale

530
00:21:35,280 --> 00:21:39,360
the extension space of

531
00:21:39,360 --> 00:21:43,600
bcp 47 single character labels

532
00:21:43,600 --> 00:21:48,799
and why why do you want all that crap

533
00:21:48,799 --> 00:21:52,320
i see why i could want x but why all the

534
00:21:52,320 --> 00:21:55,760
why do you import the whole thing

535
00:21:56,720 --> 00:21:59,520
i think we might have been biased in

536
00:21:59,520 --> 00:22:00,080
silly

537
00:22:00,080 --> 00:22:01,760
because we were in talks with the

538
00:22:01,760 --> 00:22:03,360
unicode folks who

539
00:22:03,360 --> 00:22:07,200
authored bcp-47 i was mostly looking for

540
00:22:07,200 --> 00:22:09,919
an extensible way to generalize this

541
00:22:09,919 --> 00:22:10,880
format without

542
00:22:10,880 --> 00:22:15,440
having to write down as part of the rsc

543
00:22:15,440 --> 00:22:17,919
the different key values that are

544
00:22:17,919 --> 00:22:18,880
acceptable

545
00:22:18,880 --> 00:22:21,120
and and i thought it would be really

546
00:22:21,120 --> 00:22:22,320
hard to add

547
00:22:22,320 --> 00:22:25,520
to that set if if one had to

548
00:22:25,520 --> 00:22:28,480
do a new rc every time so that was the

549
00:22:28,480 --> 00:22:30,640
mechanism that was

550
00:22:30,640 --> 00:22:33,760
suggested to us as a way to make it low

551
00:22:33,760 --> 00:22:34,480
overhead

552
00:22:34,480 --> 00:22:38,559
to introduce new uh new new

553
00:22:38,559 --> 00:22:40,960
pieces of information but i'd be happy

554
00:22:40,960 --> 00:22:43,200
to replace that with something which is

555
00:22:43,200 --> 00:22:46,480
uh maybe of a lower overhead

556
00:22:46,480 --> 00:22:50,080
or something like that i would

557
00:22:50,080 --> 00:22:52,799
possibly argue the opposite that the

558
00:22:52,799 --> 00:22:53,919
overhead of

559
00:22:53,919 --> 00:22:56,720
defining new stuff is far too low when

560
00:22:56,720 --> 00:22:59,039
you use that mechanism

561
00:22:59,039 --> 00:23:02,400
and that that

562
00:23:02,400 --> 00:23:04,640
the risk you have is that people start

563
00:23:04,640 --> 00:23:05,919
using

564
00:23:05,919 --> 00:23:09,120
crap that or stuff that has been

565
00:23:09,120 --> 00:23:10,400
registered

566
00:23:10,400 --> 00:23:14,480
in that name space without even

567
00:23:14,480 --> 00:23:16,559
bothering to tell you how it's supposed

568
00:23:16,559 --> 00:23:18,480
to be interpreted in the

569
00:23:18,480 --> 00:23:21,600
in the context of dates i mean if you

570
00:23:21,600 --> 00:23:23,280
want interoperability

571
00:23:23,280 --> 00:23:26,960
you don't want the bar to be low

572
00:23:28,000 --> 00:23:29,840
yeah because um i'd be keen to kind of

573
00:23:29,840 --> 00:23:31,280
focus on the dispatch

574
00:23:31,280 --> 00:23:33,280
questions here so we might be getting

575
00:23:33,280 --> 00:23:35,760
just a bit more into the detail of the

576
00:23:35,760 --> 00:23:38,000
the work so if um i'd encourage people

577
00:23:38,000 --> 00:23:39,360
to come to the queue we've just got a

578
00:23:39,360 --> 00:23:41,120
couple minutes left on the agenda it's

579
00:23:41,120 --> 00:23:42,400
very packed today

580
00:23:42,400 --> 00:23:45,120
so um i've i can see some java chats on

581
00:23:45,120 --> 00:23:46,159
opinions on

582
00:23:46,159 --> 00:23:48,080
the dispatch questions so how do we move

583
00:23:48,080 --> 00:23:49,360
ahead with this work

584
00:23:49,360 --> 00:23:51,600
it sounds like there's at least interest

585
00:23:51,600 --> 00:23:52,400
in it so

586
00:23:52,400 --> 00:23:55,440
i'm keen to hear views from participants

587
00:23:55,440 --> 00:23:57,520
on what we do with the dispatch

588
00:23:57,520 --> 00:24:00,720
the dispatch question harold if you have

589
00:24:00,720 --> 00:24:01,600
a view on that

590
00:24:01,600 --> 00:24:03,520
that'd be great otherwise i'll move on

591
00:24:03,520 --> 00:24:05,840
in the queue

592
00:24:08,480 --> 00:24:10,799
i think we need to need to have careful

593
00:24:10,799 --> 00:24:12,320
consideration

594
00:24:12,320 --> 00:24:15,440
so i'd support a working group i think

595
00:24:15,440 --> 00:24:16,320
it needs

596
00:24:16,320 --> 00:24:18,880
more concentration than edius sponsored

597
00:24:18,880 --> 00:24:20,480
will bring

598
00:24:20,480 --> 00:24:22,960
okay thank you uh john you're next in

599
00:24:22,960 --> 00:24:25,039
the queue

600
00:24:25,039 --> 00:24:27,919
yeah i i partially just want to agree

601
00:24:27,919 --> 00:24:28,799
with what harold

602
00:24:28,799 --> 00:24:30,480
said because i didn't know he was going

603
00:24:30,480 --> 00:24:32,080
to say it uh

604
00:24:32,080 --> 00:24:34,559
but this uh this involves enough

605
00:24:34,559 --> 00:24:35,919
complexity that it

606
00:24:35,919 --> 00:24:38,960
uh it likely needs a working group

607
00:24:38,960 --> 00:24:41,360
and to add one piece one more piece of

608
00:24:41,360 --> 00:24:42,480
complexity

609
00:24:42,480 --> 00:24:44,159
to the list which may motivate the

610
00:24:44,159 --> 00:24:46,720
working group for the idea further

611
00:24:46,720 --> 00:24:48,559
i'm a little getting a little worried

612
00:24:48,559 --> 00:24:50,320
about a different time synchronization

613
00:24:50,320 --> 00:24:51,360
problem

614
00:24:51,360 --> 00:24:55,279
which is a uh ietf standard possibly

615
00:24:55,279 --> 00:24:56,480
with different

616
00:24:56,480 --> 00:24:59,200
sets of definitions and name spaces and

617
00:24:59,200 --> 00:25:01,039
an ecma standard

618
00:25:01,039 --> 00:25:04,240
and a javascript standard a

619
00:25:04,240 --> 00:25:07,600
java standard and uh uh and an iso

620
00:25:07,600 --> 00:25:08,799
standard

621
00:25:08,799 --> 00:25:11,600
and if they are uh if they are all

622
00:25:11,600 --> 00:25:13,360
different or even several of them are

623
00:25:13,360 --> 00:25:14,080
different

624
00:25:14,080 --> 00:25:17,200
we end up in a very strange very space

625
00:25:17,200 --> 00:25:18,480
sometimes referred to

626
00:25:18,480 --> 00:25:21,200
as as the nice thing about standards is

627
00:25:21,200 --> 00:25:22,240
there's so many things

628
00:25:22,240 --> 00:25:24,159
so many of them to choose from and we

629
00:25:24,159 --> 00:25:25,440
really don't want to go there if we can

630
00:25:25,440 --> 00:25:28,640
avoid it thank you

631
00:25:28,640 --> 00:25:32,799
the idea is uh for us in ecmascript

632
00:25:32,799 --> 00:25:36,240
to to put this uh to to

633
00:25:36,240 --> 00:25:39,279
uh try to get this into ietf in

634
00:25:39,279 --> 00:25:42,000
uh whichever way is most acceptable to

635
00:25:42,000 --> 00:25:43,200
idea folks

636
00:25:43,200 --> 00:25:45,279
and then change the format that we are

637
00:25:45,279 --> 00:25:46,480
using to that

638
00:25:46,480 --> 00:25:49,120
and also normatively reference that uh

639
00:25:49,120 --> 00:25:50,640
its standard

640
00:25:50,640 --> 00:25:52,559
uh so that we don't have to actually

641
00:25:52,559 --> 00:25:54,080
maintain

642
00:25:54,080 --> 00:25:57,279
this ad hoc standard well that that

643
00:25:57,279 --> 00:25:59,279
that sounds like a perfectly good idea

644
00:25:59,279 --> 00:26:01,279
except that ecmas script is not the

645
00:26:01,279 --> 00:26:02,880
international standard

646
00:26:02,880 --> 00:26:04,400
uh the iso documents is the

647
00:26:04,400 --> 00:26:06,080
international standard

648
00:26:06,080 --> 00:26:08,480
and i'm uh i'm concerned as i said in

649
00:26:08,480 --> 00:26:09,760
the chat that you're not coordinating

650
00:26:09,760 --> 00:26:12,400
with iso

651
00:26:15,520 --> 00:26:17,840
we don't need to resolve this now but it

652
00:26:17,840 --> 00:26:19,279
but it is an argument for a working

653
00:26:19,279 --> 00:26:21,760
group rather small cluster of people

654
00:26:21,760 --> 00:26:24,559
yeah sure sorry i'm gonna cut it here

655
00:26:24,559 --> 00:26:26,000
because we do have a really full

656
00:26:26,000 --> 00:26:27,760
thing today i'm seeing people posting on

657
00:26:27,760 --> 00:26:30,159
jabba um kind of a general agreement

658
00:26:30,159 --> 00:26:30,880
that

659
00:26:30,880 --> 00:26:33,360
uh a working group is what's needed but

660
00:26:33,360 --> 00:26:34,720
we'll take a final

661
00:26:34,720 --> 00:26:36,559
decision on the list i'm also conscious

662
00:26:36,559 --> 00:26:38,000
that um patrick's not

663
00:26:38,000 --> 00:26:40,480
here so i'd be keen to obviously make

664
00:26:40,480 --> 00:26:41,440
the decision

665
00:26:41,440 --> 00:26:43,840
with my co-chair as well so we'll just

666
00:26:43,840 --> 00:26:44,640
um

667
00:26:44,640 --> 00:26:46,240
say thank you at this time for your

668
00:26:46,240 --> 00:26:48,080
presentation we'll take it to the list

669
00:26:48,080 --> 00:26:48,720
and i think

670
00:26:48,720 --> 00:26:50,880
there is also a sort of mini charter for

671
00:26:50,880 --> 00:26:53,039
this um so i'd encourage folks to head

672
00:26:53,039 --> 00:26:54,000
over to the list

673
00:26:54,000 --> 00:26:56,240
um the link to the messages is in the

674
00:26:56,240 --> 00:26:57,120
agenda

675
00:26:57,120 --> 00:26:58,640
and just kind of read through and see if

676
00:26:58,640 --> 00:27:00,320
that seems like it

677
00:27:00,320 --> 00:27:01,679
a buff would be the next most

678
00:27:01,679 --> 00:27:03,919
appropriate step

679
00:27:03,919 --> 00:27:08,320
okay thank you withdrawal

680
00:27:09,200 --> 00:27:11,760
okay so our next presentation is from

681
00:27:11,760 --> 00:27:14,400
karsten

682
00:27:14,480 --> 00:27:17,840
um take it away hi thank you

683
00:27:17,840 --> 00:27:19,679
so this slide is mostly to show that i

684
00:27:19,679 --> 00:27:21,360
have larger characters

685
00:27:21,360 --> 00:27:24,480
than you have next slide

686
00:27:24,480 --> 00:27:27,360
so the the

687
00:27:27,679 --> 00:27:31,279
thank you so the the uh

688
00:27:31,279 --> 00:27:34,320
question that is coming up when editing

689
00:27:34,320 --> 00:27:37,679
documents that use media types is what

690
00:27:37,679 --> 00:27:38,000
do

691
00:27:38,000 --> 00:27:40,399
the various terms that we are using

692
00:27:40,399 --> 00:27:42,080
actually mean

693
00:27:42,080 --> 00:27:44,880
so i have met people who when i talk to

694
00:27:44,880 --> 00:27:45,279
them

695
00:27:45,279 --> 00:27:48,240
about media types tell me text is a

696
00:27:48,240 --> 00:27:49,679
media type

697
00:27:49,679 --> 00:27:52,080
other people tell me text plain is a

698
00:27:52,080 --> 00:27:53,679
media type

699
00:27:53,679 --> 00:27:55,840
and the other group of people is telling

700
00:27:55,840 --> 00:27:57,200
me text slash plain

701
00:27:57,200 --> 00:28:00,320
semicolon cassette equals utf-8

702
00:28:00,320 --> 00:28:03,679
is a media type now that's

703
00:28:03,679 --> 00:28:06,080
probably not not a bad thing in in

704
00:28:06,080 --> 00:28:08,480
casual conversation but it really starts

705
00:28:08,480 --> 00:28:09,520
to

706
00:28:09,520 --> 00:28:12,000
become a problem when you are writing

707
00:28:12,000 --> 00:28:15,279
specifications next slide please

708
00:28:15,279 --> 00:28:18,240
and we we have that problem not just in

709
00:28:18,240 --> 00:28:18,799
in the

710
00:28:18,799 --> 00:28:21,679
the area of terminology uh we also have

711
00:28:21,679 --> 00:28:22,000
it

712
00:28:22,000 --> 00:28:25,120
in the term of actual abn f that

713
00:28:25,120 --> 00:28:25,919
describes

714
00:28:25,919 --> 00:28:30,159
what uh these various uh

715
00:28:30,159 --> 00:28:33,200
names actually mean so it

716
00:28:33,200 --> 00:28:36,080
would be nice to actually consolidate

717
00:28:36,080 --> 00:28:37,760
when you go to the next slide

718
00:28:37,760 --> 00:28:41,200
to to actually consolidate

719
00:28:41,200 --> 00:28:44,159
the terminology we are using in this

720
00:28:44,159 --> 00:28:45,440
space

721
00:28:45,440 --> 00:28:49,279
and also the abnf that we are

722
00:28:49,279 --> 00:28:51,600
using i know it cannot be consolidated

723
00:28:51,600 --> 00:28:53,840
perfectly because of course we have

724
00:28:53,840 --> 00:28:57,360
lots of of existing systems

725
00:28:57,360 --> 00:29:00,480
that are slightly subtly

726
00:29:00,480 --> 00:29:04,320
different um but it would be nice to

727
00:29:04,320 --> 00:29:05,600
just have something that can be

728
00:29:05,600 --> 00:29:07,919
referenced

729
00:29:07,919 --> 00:29:11,039
from new documents and

730
00:29:11,039 --> 00:29:14,559
th this observation came up uh while

731
00:29:14,559 --> 00:29:18,159
writing a draft in the call a working

732
00:29:18,159 --> 00:29:20,640
group uh where it would have been nice

733
00:29:20,640 --> 00:29:22,320
to just point to something but

734
00:29:22,320 --> 00:29:24,159
there are ten things you can point to

735
00:29:24,159 --> 00:29:25,840
and not none of them

736
00:29:25,840 --> 00:29:27,440
actually defines all the things that

737
00:29:27,440 --> 00:29:29,360
that are

738
00:29:29,360 --> 00:29:31,840
needed and there are lots of rfcs that

739
00:29:31,840 --> 00:29:32,559
that use

740
00:29:32,559 --> 00:29:35,840
these terms in in different

741
00:29:35,840 --> 00:29:39,360
ways as well

742
00:29:39,360 --> 00:29:43,279
so uh next slide i started writing a

743
00:29:43,279 --> 00:29:45,360
little document that actually

744
00:29:45,360 --> 00:29:48,240
defines some terms so that makes a

745
00:29:48,240 --> 00:29:49,919
difference between a media type and a

746
00:29:49,919 --> 00:29:51,520
media type name

747
00:29:51,520 --> 00:29:53,679
um it defines another term called

748
00:29:53,679 --> 00:29:55,440
content type which is the media type

749
00:29:55,440 --> 00:29:57,039
name plus parameters

750
00:29:57,039 --> 00:29:59,279
and it also addresses some things that

751
00:29:59,279 --> 00:30:01,919
are probably more specific to core

752
00:30:01,919 --> 00:30:04,240
like content format numbers and content

753
00:30:04,240 --> 00:30:05,279
format strings which

754
00:30:05,279 --> 00:30:08,640
are content types combined with a

755
00:30:08,640 --> 00:30:10,480
content coding we like to give these

756
00:30:10,480 --> 00:30:13,039
things numbers so 11050

757
00:30:13,039 --> 00:30:15,840
for instance this application slash json

758
00:30:15,840 --> 00:30:16,080
in

759
00:30:16,080 --> 00:30:19,600
deflate content coding

760
00:30:19,600 --> 00:30:23,039
next slide so um

761
00:30:23,039 --> 00:30:25,679
yeah i i wrote that draft thinking that

762
00:30:25,679 --> 00:30:26,240
we could

763
00:30:26,240 --> 00:30:29,760
simply decide uh this in the car working

764
00:30:29,760 --> 00:30:30,480
group

765
00:30:30,480 --> 00:30:33,520
but then of course we we are writing a

766
00:30:33,520 --> 00:30:35,679
specification that

767
00:30:35,679 --> 00:30:38,960
tries to define terms that that touch

768
00:30:38,960 --> 00:30:41,120
just about everything that is in the

769
00:30:41,120 --> 00:30:42,880
application area

770
00:30:42,880 --> 00:30:45,279
um applications and real-time area of

771
00:30:45,279 --> 00:30:46,240
the

772
00:30:46,240 --> 00:30:48,720
uh iatf and and probably things beyond

773
00:30:48,720 --> 00:30:50,320
that so

774
00:30:50,320 --> 00:30:53,760
i i was reminded that core is not really

775
00:30:53,760 --> 00:30:54,399
chartered

776
00:30:54,399 --> 00:30:57,360
for this kind of work and also that this

777
00:30:57,360 --> 00:30:57,760
work

778
00:30:57,760 --> 00:31:00,399
would probably benefit from broader

779
00:31:00,399 --> 00:31:04,480
discussion and and consensus

780
00:31:04,480 --> 00:31:08,080
so yeah i was looking is there a working

781
00:31:08,080 --> 00:31:09,840
group that actually

782
00:31:09,840 --> 00:31:13,200
this would fit naturally into and

783
00:31:13,200 --> 00:31:17,039
we didn't quite find one

784
00:31:17,039 --> 00:31:20,720
um so um i'm i'm calling on on the

785
00:31:20,720 --> 00:31:21,600
wisdom of the

786
00:31:21,600 --> 00:31:24,000
the crowd of this working group here i'm

787
00:31:24,000 --> 00:31:25,679
i'm generally looking for

788
00:31:25,679 --> 00:31:29,120
for advice uh how to get a document like

789
00:31:29,120 --> 00:31:30,000
this

790
00:31:30,000 --> 00:31:32,000
uh both written but more importantly

791
00:31:32,000 --> 00:31:33,039
agreed

792
00:31:33,039 --> 00:31:36,080
uh between the various uh

793
00:31:36,080 --> 00:31:39,279
groups that that actually are using

794
00:31:39,279 --> 00:31:42,559
um media types and and related concepts

795
00:31:42,559 --> 00:31:43,840
like content types and

796
00:31:43,840 --> 00:31:47,039
content uh performance so please

797
00:31:47,039 --> 00:31:49,519
dispatch

798
00:31:50,240 --> 00:31:52,080
thank you thanks for the presentation

799
00:31:52,080 --> 00:31:53,279
okay so um

800
00:31:53,279 --> 00:31:54,880
i'll open up the queue i can see we've

801
00:31:54,880 --> 00:31:57,039
already got mark nottingham in the queue

802
00:31:57,039 --> 00:32:01,840
ask away

803
00:32:11,840 --> 00:32:14,640
so many buttons to press can you hear me

804
00:32:14,640 --> 00:32:16,240
we can hear and see

805
00:32:16,240 --> 00:32:19,840
lovely okay uh hi karsten um

806
00:32:19,840 --> 00:32:22,960
so i think the the my first blush

807
00:32:22,960 --> 00:32:23,679
reaction to this

808
00:32:23,679 --> 00:32:26,960
is that aligning the terminology is

809
00:32:26,960 --> 00:32:30,159
a wonderful thing to embark upon

810
00:32:30,159 --> 00:32:32,000
the terminology in this area has always

811
00:32:32,000 --> 00:32:34,320
bugged me it's imprecise

812
00:32:34,320 --> 00:32:36,960
and massively confusing to people who

813
00:32:36,960 --> 00:32:38,640
are new to this

814
00:32:38,640 --> 00:32:41,360
however when you get to the bits about

815
00:32:41,360 --> 00:32:42,000
defining

816
00:32:42,000 --> 00:32:46,080
a b and f and high level concepts like

817
00:32:46,080 --> 00:32:48,240
content coding and so forth

818
00:32:48,240 --> 00:32:50,240
between different protocols that use it

819
00:32:50,240 --> 00:32:52,880
i get really concerned

820
00:32:52,880 --> 00:32:55,200
because these protocols have evolved in

821
00:32:55,200 --> 00:32:56,559
different directions

822
00:32:56,559 --> 00:32:58,080
and sometimes it's for good reason

823
00:32:58,080 --> 00:33:00,240
sometimes that's through happenstance

824
00:33:00,240 --> 00:33:02,640
but they each define their own footprint

825
00:33:02,640 --> 00:33:04,080
of interoperability

826
00:33:04,080 --> 00:33:07,120
so i don't see the value and i see a lot

827
00:33:07,120 --> 00:33:07,919
of risk

828
00:33:07,919 --> 00:33:11,519
in aligning at that layer so if you

829
00:33:11,519 --> 00:33:13,360
restricted this to the the terminology

830
00:33:13,360 --> 00:33:13,840
i'd be

831
00:33:13,840 --> 00:33:16,720
very excited beyond that i'm concerned

832
00:33:16,720 --> 00:33:17,519
and

833
00:33:17,519 --> 00:33:19,279
especially since we have just finished

834
00:33:19,279 --> 00:33:21,840
work group last call on http core

835
00:33:21,840 --> 00:33:23,760
the opportunity for adjusting things

836
00:33:23,760 --> 00:33:27,200
like a b and f in http is probably past

837
00:33:27,200 --> 00:33:29,679
um i i think the terminology is safe to

838
00:33:29,679 --> 00:33:30,880
do because

839
00:33:30,880 --> 00:33:32,880
at first glance i'm sure julian will at

840
00:33:32,880 --> 00:33:34,240
some point correct me

841
00:33:34,240 --> 00:33:37,360
um i don't think we talk deeply about

842
00:33:37,360 --> 00:33:38,880
things like media types and media

843
00:33:38,880 --> 00:33:40,000
subtypes and use that kind of

844
00:33:40,000 --> 00:33:41,039
terminology

845
00:33:41,039 --> 00:33:43,039
in http itself that's usually for

846
00:33:43,039 --> 00:33:44,799
applications who use http you need to

847
00:33:44,799 --> 00:33:47,918
use that kind of terminology

848
00:33:48,080 --> 00:33:51,679
how do i stop this i press buttons again

849
00:33:51,679 --> 00:33:55,120
so the the clarification may be that

850
00:33:55,120 --> 00:33:56,880
this is not supposed to

851
00:33:56,880 --> 00:34:00,720
change existing protocols of course so

852
00:34:00,720 --> 00:34:04,080
http is going to stay the way it is

853
00:34:04,080 --> 00:34:06,159
male is going to stay the way it is and

854
00:34:06,159 --> 00:34:07,120
so on

855
00:34:07,120 --> 00:34:09,280
but it would still be useful to have a

856
00:34:09,280 --> 00:34:12,879
document that that can be referenced

857
00:34:12,879 --> 00:34:15,280
in case you don't have any specific

858
00:34:15,280 --> 00:34:16,480
tie-ins

859
00:34:16,480 --> 00:34:20,320
to those existing ecosystems and

860
00:34:20,320 --> 00:34:22,159
if if you think this should be done in

861
00:34:22,159 --> 00:34:24,560
call that that would be fine

862
00:34:24,560 --> 00:34:27,359
uh with me we we just need this and of

863
00:34:27,359 --> 00:34:29,520
course we could do it in the documents

864
00:34:29,520 --> 00:34:31,199
that actually use it

865
00:34:31,199 --> 00:34:33,918
uh but i think doing the the abn f

866
00:34:33,918 --> 00:34:35,760
separately

867
00:34:35,760 --> 00:34:38,239
in a separate document has a better

868
00:34:38,239 --> 00:34:41,040
reuse value

869
00:34:45,280 --> 00:34:48,800
sorry i had to click more buttons um i

870
00:34:48,800 --> 00:34:51,520
i think that that that's reasonable

871
00:34:51,520 --> 00:34:52,639
although

872
00:34:52,639 --> 00:34:54,639
i think in the same way that we ask

873
00:34:54,639 --> 00:34:56,320
people when they define new http methods

874
00:34:56,320 --> 00:34:57,760
to put them in separate documents so

875
00:34:57,760 --> 00:34:58,480
they don't

876
00:34:58,480 --> 00:35:00,000
look like they're application specific

877
00:35:00,000 --> 00:35:02,000
i'd ask you to break the terminology out

878
00:35:02,000 --> 00:35:03,359
to a separate document because that is i

879
00:35:03,359 --> 00:35:04,240
think

880
00:35:04,240 --> 00:35:06,560
more universal and and more uh

881
00:35:06,560 --> 00:35:08,160
referenceable and if you lump it in with

882
00:35:08,160 --> 00:35:09,040
the abnf

883
00:35:09,040 --> 00:35:10,160
people are going to get confused about

884
00:35:10,160 --> 00:35:12,160
their relationship

885
00:35:12,160 --> 00:35:16,240
thank you

886
00:35:16,240 --> 00:35:18,000
thank you um pete you're next in the

887
00:35:18,000 --> 00:35:20,240
queue

888
00:35:22,160 --> 00:35:25,760
um i'm wondering what's missing

889
00:35:25,760 --> 00:35:28,960
in rfc 2046 with regard to terminology

890
00:35:28,960 --> 00:35:31,839
here

891
00:35:32,240 --> 00:35:34,079
well it certainly doesn't define doesn't

892
00:35:34,079 --> 00:35:35,680
define

893
00:35:35,680 --> 00:35:38,160
terms such as content format and content

894
00:35:38,160 --> 00:35:39,760
from a string because

895
00:35:39,760 --> 00:35:43,200
those were invented 10 years later

896
00:35:43,200 --> 00:35:46,320
sure yeah but i mean media type top

897
00:35:46,320 --> 00:35:47,440
level media type

898
00:35:47,440 --> 00:35:50,640
subtypes are all in there

899
00:35:50,640 --> 00:35:54,400
it sounds like you you want to

900
00:35:54,400 --> 00:35:57,440
add on to this which is fine i guess but

901
00:35:57,440 --> 00:36:01,280
um let's be clear about what pieces you

902
00:36:01,280 --> 00:36:02,000
actually

903
00:36:02,000 --> 00:36:06,079
need to add and not invent new stuff

904
00:36:07,680 --> 00:36:11,280
okay as for where this should go

905
00:36:11,280 --> 00:36:15,200
i i have a hard time even believing this

906
00:36:15,200 --> 00:36:17,760
needs a particular working group i i

907
00:36:17,760 --> 00:36:20,560
mean especially for the terminology

908
00:36:20,560 --> 00:36:22,640
this is seeming pretty straightforward

909
00:36:22,640 --> 00:36:24,960
to me and something that could be done

910
00:36:24,960 --> 00:36:27,440
as an individual submission or ad

911
00:36:27,440 --> 00:36:29,920
sponsored

912
00:36:34,240 --> 00:36:40,079
okay thank you um colin you're next

913
00:36:40,079 --> 00:36:42,880
hi is this working

914
00:36:43,680 --> 00:36:47,520
we can we can hear you okay uh

915
00:36:47,520 --> 00:36:49,680
so i i think it's unclear how much what

916
00:36:49,680 --> 00:36:50,880
you want to do here is clarify

917
00:36:50,880 --> 00:36:52,560
terminology and how much what you want

918
00:36:52,560 --> 00:36:54,400
to do is extend this mechanism to

919
00:36:54,400 --> 00:36:56,400
something much more than it currently is

920
00:36:56,400 --> 00:36:57,920
and both of those seem like reasonable

921
00:36:57,920 --> 00:37:00,079
things to discuss but when i read the

922
00:37:00,079 --> 00:37:00,960
documents

923
00:37:00,960 --> 00:37:02,320
i don't i think actually the core

924
00:37:02,320 --> 00:37:03,599
documents that define this stuff which

925
00:37:03,599 --> 00:37:04,800
are not the ones you reference are the

926
00:37:04,800 --> 00:37:05,440
ones like

927
00:37:05,440 --> 00:37:06,960
define the iana registry are pretty

928
00:37:06,960 --> 00:37:09,440
crisp so i i think that you need to show

929
00:37:09,440 --> 00:37:11,119
there actually is a terminology problem

930
00:37:11,119 --> 00:37:12,400
and get a little bit more down on that

931
00:37:12,400 --> 00:37:13,839
and what needs to be clarified in the

932
00:37:13,839 --> 00:37:15,680
terminology is one thing

933
00:37:15,680 --> 00:37:17,280
and then separate out the parts of the

934
00:37:17,280 --> 00:37:19,920
extensions now the extension parts

935
00:37:19,920 --> 00:37:21,760
um i know that a lot of this we've done

936
00:37:21,760 --> 00:37:24,079
as bcps in the past in an apps area

937
00:37:24,079 --> 00:37:25,200
working group

938
00:37:25,200 --> 00:37:27,040
um i you know i don't see a problem with

939
00:37:27,040 --> 00:37:28,320
that it needs to be heavily coordinated

940
00:37:28,320 --> 00:37:30,000
within music and other groups

941
00:37:30,000 --> 00:37:32,079
but i think that this is um this looks

942
00:37:32,079 --> 00:37:33,119
very much like hey

943
00:37:33,119 --> 00:37:34,960
write me a blank check to go extend this

944
00:37:34,960 --> 00:37:36,720
in a very undefined way and i haven't

945
00:37:36,720 --> 00:37:38,320
really set up my ease yet but so i'm

946
00:37:38,320 --> 00:37:39,760
actually don't think this is ready for

947
00:37:39,760 --> 00:37:42,240
dispatch

948
00:37:44,560 --> 00:37:46,079
what would you like to see to get it

949
00:37:46,079 --> 00:37:47,760
ready for dispatch

950
00:37:47,760 --> 00:37:49,520
proposed charter or more discussion on

951
00:37:49,520 --> 00:37:50,880
lists or

952
00:37:50,880 --> 00:37:53,520
i'd like to see a crisp separation of

953
00:37:53,520 --> 00:37:54,400
what's wrong with our current

954
00:37:54,400 --> 00:37:56,880
terminology and let's update those bcps

955
00:37:56,880 --> 00:37:58,400
that did those terminologies that were

956
00:37:58,400 --> 00:37:59,280
could probably be done

957
00:37:59,280 --> 00:38:02,560
much the same way that bcps were as one

958
00:38:02,560 --> 00:38:03,119
thing

959
00:38:03,119 --> 00:38:05,280
and that's purely a terminology thing um

960
00:38:05,280 --> 00:38:07,040
and then the second thing would be

961
00:38:07,040 --> 00:38:10,160
um extensions and uh

962
00:38:10,160 --> 00:38:12,160
if we're doing extensions then then we

963
00:38:12,160 --> 00:38:13,440
should be very close where

964
00:38:13,440 --> 00:38:15,599
why what the scope and who uses them

965
00:38:15,599 --> 00:38:17,040
what other things have to support them

966
00:38:17,040 --> 00:38:18,320
because lots of things have to support

967
00:38:18,320 --> 00:38:20,480
every change we make to this area

968
00:38:20,480 --> 00:38:21,680
and i think that that would have to be

969
00:38:21,680 --> 00:38:24,240
done pretty carefully before

970
00:38:24,240 --> 00:38:25,839
before we could chart our working group

971
00:38:25,839 --> 00:38:26,960
in that space and that would probably

972
00:38:26,960 --> 00:38:29,280
need a working group

973
00:38:29,280 --> 00:38:31,839
okay so when you talk about extensions

974
00:38:31,839 --> 00:38:35,200
what exactly do you mean

975
00:38:35,440 --> 00:38:37,040
well there's several things here that

976
00:38:37,040 --> 00:38:38,800
are do not seem to be

977
00:38:38,800 --> 00:38:42,560
defined by the current iana registry or

978
00:38:42,560 --> 00:38:43,520
fit into that

979
00:38:43,520 --> 00:38:44,960
that current thing so my question is

980
00:38:44,960 --> 00:38:46,960
when i say extensions what do i mean

981
00:38:46,960 --> 00:38:48,880
i don't know but that's what do you mean

982
00:38:48,880 --> 00:38:51,440
right it's like

983
00:38:52,400 --> 00:38:54,720
yeah so the only thing that's new is

984
00:38:54,720 --> 00:38:57,280
this content format string

985
00:38:57,280 --> 00:39:00,160
concept and that's claiming that that

986
00:39:00,160 --> 00:39:02,079
doesn't change the syntax of anything on

987
00:39:02,079 --> 00:39:03,760
the wire that's purely just a

988
00:39:03,760 --> 00:39:06,960
a reference that's just a label to a

989
00:39:06,960 --> 00:39:08,800
concept that already exists is that what

990
00:39:08,800 --> 00:39:10,560
the

991
00:39:10,560 --> 00:39:14,480
yes well actually it would be a way to

992
00:39:14,480 --> 00:39:17,760
refer to these things without them being

993
00:39:17,760 --> 00:39:19,599
registered

994
00:39:19,599 --> 00:39:21,839
so you don't need a registration for

995
00:39:21,839 --> 00:39:23,680
every combination of content coding and

996
00:39:23,680 --> 00:39:25,520
content type that that you need

997
00:39:25,520 --> 00:39:27,359
okay and you don't see that as a very

998
00:39:27,359 --> 00:39:31,200
dramatic change of the way we do that

999
00:39:31,359 --> 00:39:33,839
well nobody is using something like this

1000
00:39:33,839 --> 00:39:34,720
yet so it's

1001
00:39:34,720 --> 00:39:38,320
not not an extension of existing things

1002
00:39:38,320 --> 00:39:40,079
it's something that new things like like

1003
00:39:40,079 --> 00:39:40,880
the

1004
00:39:40,880 --> 00:39:44,079
cinema extension that uh proposes

1005
00:39:44,079 --> 00:39:47,599
to use this uh could use so it's

1006
00:39:47,599 --> 00:39:50,079
i i it's a new thing it's not an

1007
00:39:50,079 --> 00:39:51,520
extension

1008
00:39:51,520 --> 00:39:53,920
oh oh well i i do think to me as an

1009
00:39:53,920 --> 00:39:55,520
extension so maybe i misused that a

1010
00:39:55,520 --> 00:39:56,880
little bit or whatever but i think that

1011
00:39:56,880 --> 00:39:58,000
this was not coming

1012
00:39:58,000 --> 00:40:00,079
clear from the whole this this the part

1013
00:40:00,079 --> 00:40:01,520
that was the terminology and the part

1014
00:40:01,520 --> 00:40:02,480
that was something new

1015
00:40:02,480 --> 00:40:05,520
seemed seemed

1016
00:40:05,520 --> 00:40:07,440
i seemed hard to figure out exactly what

1017
00:40:07,440 --> 00:40:08,640
was being proposed from the current

1018
00:40:08,640 --> 00:40:09,599
draft that's all

1019
00:40:09,599 --> 00:40:10,960
and i'm not saying that if they were

1020
00:40:10,960 --> 00:40:13,359
carefully like if those were

1021
00:40:13,359 --> 00:40:14,880
i mean i don't think anyone has a

1022
00:40:14,880 --> 00:40:16,400
problem with us clarifying some of our

1023
00:40:16,400 --> 00:40:17,760
terminology particularly where we get it

1024
00:40:17,760 --> 00:40:19,839
confused between multiple rfcs over the

1025
00:40:19,839 --> 00:40:21,040
years okay that's

1026
00:40:21,040 --> 00:40:24,160
that's a no-brainer um and sometimes

1027
00:40:24,160 --> 00:40:25,680
defining a term for something that's

1028
00:40:25,680 --> 00:40:27,280
always existed but we didn't have a good

1029
00:40:27,280 --> 00:40:28,880
word for it and we were sort of using

1030
00:40:28,880 --> 00:40:30,079
things like well you know the string

1031
00:40:30,079 --> 00:40:32,079
plus this string that comes after it

1032
00:40:32,079 --> 00:40:34,480
that's a good thing too um but i think

1033
00:40:34,480 --> 00:40:35,760
that's very different than

1034
00:40:35,760 --> 00:40:38,880
creating something that provides further

1035
00:40:38,880 --> 00:40:40,640
bits of information that transfer over

1036
00:40:40,640 --> 00:40:42,079
the wire that change what you can do

1037
00:40:42,079 --> 00:40:43,040
with these things

1038
00:40:43,040 --> 00:40:44,480
which again i think is probably a good

1039
00:40:44,480 --> 00:40:45,760
thing to do i'm not arguing against that

1040
00:40:45,760 --> 00:40:47,119
but those are two very different things

1041
00:40:47,119 --> 00:40:47,359
and

1042
00:40:47,359 --> 00:40:50,160
and one and there's there's not the

1043
00:40:50,160 --> 00:40:51,520
second one is not just an update to

1044
00:40:51,520 --> 00:40:54,079
terminology

1045
00:40:54,960 --> 00:40:57,200
thank you um i can see discussion in

1046
00:40:57,200 --> 00:40:58,720
jabba someone suggesting that a

1047
00:40:58,720 --> 00:41:00,079
short-lived working group

1048
00:41:00,079 --> 00:41:02,000
might be the best kind of solution to

1049
00:41:02,000 --> 00:41:03,760
this i'd encourage people to join the

1050
00:41:03,760 --> 00:41:05,359
queue and give a view on the dispatch

1051
00:41:05,359 --> 00:41:06,000
question

1052
00:41:06,000 --> 00:41:07,920
what's needed for next steps to progress

1053
00:41:07,920 --> 00:41:09,200
this work

1054
00:41:09,200 --> 00:41:14,000
um so i can see no one else in the queue

1055
00:41:14,000 --> 00:41:16,000
but um we've had so far someone

1056
00:41:16,000 --> 00:41:17,520
suggested it should be uh p i think

1057
00:41:17,520 --> 00:41:19,440
suggested as ada sponsored or individual

1058
00:41:19,440 --> 00:41:20,400
submission

1059
00:41:20,400 --> 00:41:22,480
and cullen saying to go away and kind of

1060
00:41:22,480 --> 00:41:24,240
really focus on the scope and what's

1061
00:41:24,240 --> 00:41:25,359
included

1062
00:41:25,359 --> 00:41:27,440
and then some chat about a short-lived

1063
00:41:27,440 --> 00:41:29,119
working group

1064
00:41:29,119 --> 00:41:30,880
so um anyone with a final view on this

1065
00:41:30,880 --> 00:41:32,160
please come up

1066
00:41:32,160 --> 00:41:49,839
we have the discussion time let's use it

1067
00:41:54,560 --> 00:41:57,680
yep john go for it

1068
00:41:58,960 --> 00:42:02,079
uh since you since you've decided you

1069
00:42:02,079 --> 00:42:03,440
have extra time

1070
00:42:03,440 --> 00:42:05,280
uh colin said almost everything i was

1071
00:42:05,280 --> 00:42:06,560
going to say

1072
00:42:06,560 --> 00:42:09,359
uh but let me add to the comment about a

1073
00:42:09,359 --> 00:42:10,000
uh

1074
00:42:10,000 --> 00:42:13,599
a special short-lived working group um

1075
00:42:13,599 --> 00:42:16,480
this this this is dangerous to do in a

1076
00:42:16,480 --> 00:42:17,280
uh

1077
00:42:17,280 --> 00:42:20,880
in a working group uh or uh or even an

1078
00:42:20,880 --> 00:42:21,200
a.d

1079
00:42:21,200 --> 00:42:24,400
sponsored document that uh that doesn't

1080
00:42:24,400 --> 00:42:24,800
have

1081
00:42:24,800 --> 00:42:28,640
a uh a specific charter and uh

1082
00:42:28,640 --> 00:42:32,480
uh and openness to broad participation

1083
00:42:32,480 --> 00:42:35,040
uh people who who involved in this from

1084
00:42:35,040 --> 00:42:35,599
uh

1085
00:42:35,599 --> 00:42:37,119
from the standpoint of other work may

1086
00:42:37,119 --> 00:42:39,200
not want to get involved with core

1087
00:42:39,200 --> 00:42:41,599
uh i agree that including the existing

1088
00:42:41,599 --> 00:42:42,560
document

1089
00:42:42,560 --> 00:42:44,480
it's hard to tell what the goals and

1090
00:42:44,480 --> 00:42:46,079
constraints are

1091
00:42:46,079 --> 00:42:49,040
and uh and that points fairly clearly in

1092
00:42:49,040 --> 00:42:50,960
my mind to it to a uh

1093
00:42:50,960 --> 00:42:54,160
to a wg even a very short-lived one uh

1094
00:42:54,160 --> 00:42:56,560
thanks

1095
00:42:57,280 --> 00:42:59,520
thank you john um i don't know if the

1096
00:42:59,520 --> 00:43:01,119
ads have a view

1097
00:43:01,119 --> 00:43:04,640
aed sponsorship was floated

1098
00:43:05,680 --> 00:43:07,839
um i can see on the chat says in new

1099
00:43:07,839 --> 00:43:09,760
working group it's overkill for this

1100
00:43:09,760 --> 00:43:13,839
simple document um

1101
00:43:14,319 --> 00:43:16,960
and harold you've just joined the queue

1102
00:43:16,960 --> 00:43:17,520
and

1103
00:43:17,520 --> 00:43:20,160
the implications of this document are

1104
00:43:20,160 --> 00:43:21,760
not simple

1105
00:43:21,760 --> 00:43:25,119
the making sure that we don't

1106
00:43:25,119 --> 00:43:28,640
add any extensions without

1107
00:43:28,640 --> 00:43:31,520
knowing what we're doing is not simple

1108
00:43:31,520 --> 00:43:32,640
the

1109
00:43:32,640 --> 00:43:36,799
idea that this document is simple is

1110
00:43:37,839 --> 00:43:40,400
you have not thought this through i

1111
00:43:40,400 --> 00:43:43,920
think a working group is recommended

1112
00:43:43,920 --> 00:43:46,319
but by saying that you excuse me by

1113
00:43:46,319 --> 00:43:47,200
saying that

1114
00:43:47,200 --> 00:43:50,160
this is not a simple document you kind

1115
00:43:50,160 --> 00:43:50,640
of

1116
00:43:50,640 --> 00:43:54,400
demonstrate that it's needed

1117
00:43:54,400 --> 00:43:55,839
yes because everything in there should

1118
00:43:55,839 --> 00:43:58,319
be simple

1119
00:44:05,440 --> 00:44:07,839
i think the general decision we're

1120
00:44:07,839 --> 00:44:09,280
coming to you here is that

1121
00:44:09,280 --> 00:44:11,599
um some sort of questions about scope

1122
00:44:11,599 --> 00:44:12,319
and the more

1123
00:44:12,319 --> 00:44:14,319
a more clear problem statement would be

1124
00:44:14,319 --> 00:44:15,920
helpful and then

1125
00:44:15,920 --> 00:44:18,640
um to revisit this so we can understand

1126
00:44:18,640 --> 00:44:19,920
exactly what the work is

1127
00:44:19,920 --> 00:44:22,160
that you're trying to do and so whether

1128
00:44:22,160 --> 00:44:23,839
it needs a working group or if the

1129
00:44:23,839 --> 00:44:25,440
document is a bit

1130
00:44:25,440 --> 00:44:27,599
more simple um but i think there is

1131
00:44:27,599 --> 00:44:28,480
general

1132
00:44:28,480 --> 00:44:31,680
agreement that uh the work is useful

1133
00:44:31,680 --> 00:44:33,440
that we'd like to see the work progress

1134
00:44:33,440 --> 00:44:35,200
but just needs a more clear problem

1135
00:44:35,200 --> 00:44:36,000
statement

1136
00:44:36,000 --> 00:44:38,880
and then we can uh discuss a kind of

1137
00:44:38,880 --> 00:44:40,079
working group

1138
00:44:40,079 --> 00:44:44,319
um or have a look on um

1139
00:44:44,319 --> 00:44:45,599
how simple the document would be and

1140
00:44:45,599 --> 00:44:47,119
then whether it could be a d sponsored

1141
00:44:47,119 --> 00:44:48,560
instead

1142
00:44:48,560 --> 00:44:52,000
um so again um i think the best thing to

1143
00:44:52,000 --> 00:44:53,920
do here is to take discussion further to

1144
00:44:53,920 --> 00:44:55,119
the list

1145
00:44:55,119 --> 00:44:57,280
and uh i'll discuss with patrick as well

1146
00:44:57,280 --> 00:44:58,880
offline and and talk about

1147
00:44:58,880 --> 00:45:02,079
best next steps for this so

1148
00:45:02,079 --> 00:45:04,240
thank you very much for the presentation

1149
00:45:04,240 --> 00:45:05,680
carsten

1150
00:45:05,680 --> 00:45:10,720
um and for addition everyone okay

1151
00:45:10,720 --> 00:45:14,319
so we next have um reuben or lars

1152
00:45:14,319 --> 00:45:19,680
to talk about http content renegotiation

1153
00:45:19,680 --> 00:45:23,359
take it away hi this is

1154
00:45:23,359 --> 00:45:26,160
reuben so i know the word negotiation is

1155
00:45:26,160 --> 00:45:27,280
on the slide but let's not get

1156
00:45:27,280 --> 00:45:28,640
distracted by that

1157
00:45:28,640 --> 00:45:30,160
if you follow the link the actual

1158
00:45:30,160 --> 00:45:32,319
proposal we have is as follows

1159
00:45:32,319 --> 00:45:35,520
so a many apis on the web if not most

1160
00:45:35,520 --> 00:45:36,319
apis

1161
00:45:36,319 --> 00:45:39,280
are actually lying when they communicate

1162
00:45:39,280 --> 00:45:40,319
they will tell you that

1163
00:45:40,319 --> 00:45:44,079
they're serving you json or xml

1164
00:45:44,079 --> 00:45:46,000
there's only a minority of apis that

1165
00:45:46,000 --> 00:45:48,079
will tell you actually i'm using this

1166
00:45:48,079 --> 00:45:50,319
very specific kind of json for instance

1167
00:45:50,319 --> 00:45:52,000
like very specific media types

1168
00:45:52,000 --> 00:45:53,760
but most apis out there will just use

1169
00:45:53,760 --> 00:45:55,200
very generic media types now what's the

1170
00:45:55,200 --> 00:45:56,240
problem with that

1171
00:45:56,240 --> 00:45:58,640
well the problem is that if clients code

1172
00:45:58,640 --> 00:45:59,520
against such

1173
00:45:59,520 --> 00:46:02,079
apis they're making assumptions that are

1174
00:46:02,079 --> 00:46:03,680
technically speaking not allowed

1175
00:46:03,680 --> 00:46:05,680
by the content type for instance if the

1176
00:46:05,680 --> 00:46:08,560
api says here is json

1177
00:46:08,560 --> 00:46:10,319
then then client's not allowed to assume

1178
00:46:10,319 --> 00:46:12,720
that a certain specific field called

1179
00:46:12,720 --> 00:46:15,200
username will be there for instance

1180
00:46:15,200 --> 00:46:16,960
whereas many clients do

1181
00:46:16,960 --> 00:46:19,280
and the results from that is that apis

1182
00:46:19,280 --> 00:46:20,560
are hard to evolve

1183
00:46:20,560 --> 00:46:22,480
because clients make certain assumptions

1184
00:46:22,480 --> 00:46:24,000
then when apis change you have to

1185
00:46:24,000 --> 00:46:25,920
version them and so on because those

1186
00:46:25,920 --> 00:46:29,040
no longer halt now as i said

1187
00:46:29,040 --> 00:46:31,200
a solution that we have is minting very

1188
00:46:31,200 --> 00:46:33,200
specific content types but

1189
00:46:33,200 --> 00:46:34,800
that also comes with the drawbacks

1190
00:46:34,800 --> 00:46:36,640
because there is value

1191
00:46:36,640 --> 00:46:39,359
in knowing that indeed some format is

1192
00:46:39,359 --> 00:46:40,000
json

1193
00:46:40,000 --> 00:46:41,599
with some extra assumptions or some form

1194
00:46:41,599 --> 00:46:43,599
it is xml but some extra assumptions

1195
00:46:43,599 --> 00:46:46,000
and in fact there can be multiple

1196
00:46:46,000 --> 00:46:47,839
dimensions of assumptions like it's not

1197
00:46:47,839 --> 00:46:48,400
just like

1198
00:46:48,400 --> 00:46:50,400
one categories assumptions you add but

1199
00:46:50,400 --> 00:46:51,440
it can be for instance

1200
00:46:51,440 --> 00:46:54,400
a json with a certain navigation section

1201
00:46:54,400 --> 00:46:55,680
a certain

1202
00:46:55,680 --> 00:46:57,760
section but links but a certain content

1203
00:46:57,760 --> 00:46:59,440
section with a username profile and so

1204
00:46:59,440 --> 00:46:59,839
on

1205
00:46:59,839 --> 00:47:01,520
so that it's like they can be composite

1206
00:47:01,520 --> 00:47:03,119
off of multiple

1207
00:47:03,119 --> 00:47:05,520
many standards if you will that they can

1208
00:47:05,520 --> 00:47:06,319
um

1209
00:47:06,319 --> 00:47:09,760
that they can adhere to so the issue is

1210
00:47:09,760 --> 00:47:11,119
that today you either

1211
00:47:11,119 --> 00:47:13,520
have apis under specified representation

1212
00:47:13,520 --> 00:47:15,119
by saying this is json

1213
00:47:15,119 --> 00:47:16,960
or you almost have to like overspecify

1214
00:47:16,960 --> 00:47:18,640
be very specific what it is but then you

1215
00:47:18,640 --> 00:47:20,559
kind of

1216
00:47:20,559 --> 00:47:22,160
lose the fact that it is json and can be

1217
00:47:22,160 --> 00:47:23,599
used in different context

1218
00:47:23,599 --> 00:47:26,720
so what we've done is we're proposing um

1219
00:47:26,720 --> 00:47:28,480
we're proposing a document here in which

1220
00:47:28,480 --> 00:47:30,800
we want to help with a couple of things

1221
00:47:30,800 --> 00:47:32,640
for to be specific on one hand we want

1222
00:47:32,640 --> 00:47:34,000
to help

1223
00:47:34,000 --> 00:47:36,720
servers indicate what kind of extra

1224
00:47:36,720 --> 00:47:38,800
constraints the representation conforms

1225
00:47:38,800 --> 00:47:40,079
to on top of

1226
00:47:40,079 --> 00:47:43,760
json xml and so on we want clients

1227
00:47:43,760 --> 00:47:46,559
seconds to be able to discover what kind

1228
00:47:46,559 --> 00:47:46,960
of

1229
00:47:46,960 --> 00:47:48,880
options exist on the server side what

1230
00:47:48,880 --> 00:47:50,880
kind of phrase constraints that are

1231
00:47:50,880 --> 00:47:52,000
supported

1232
00:47:52,000 --> 00:47:55,040
then we want clients also to be able to

1233
00:47:55,040 --> 00:47:57,359
to to request specific versions like hey

1234
00:47:57,359 --> 00:47:58,640
yes i want json but

1235
00:47:58,640 --> 00:48:00,000
i wanted to confirm to these in these

1236
00:48:00,000 --> 00:48:01,760
constraints and finally

1237
00:48:01,760 --> 00:48:04,319
also clients to send representations

1238
00:48:04,319 --> 00:48:05,760
that have extra consent or clients

1239
00:48:05,760 --> 00:48:07,440
saying like okay here's json

1240
00:48:07,440 --> 00:48:08,880
but actually it's subject to these and

1241
00:48:08,880 --> 00:48:10,640
these other constraints

1242
00:48:10,640 --> 00:48:13,200
to do so we reuse the notion of profiles

1243
00:48:13,200 --> 00:48:15,040
which is an existing rfc

1244
00:48:15,040 --> 00:48:16,960
in which indeed you can say well this is

1245
00:48:16,960 --> 00:48:18,640
json plus these and these and these

1246
00:48:18,640 --> 00:48:20,000
extra constraints

1247
00:48:20,000 --> 00:48:22,559
however i look at profiles a couple of

1248
00:48:22,559 --> 00:48:23,520
bits of glue

1249
00:48:23,520 --> 00:48:25,119
if you will what we're missing to make

1250
00:48:25,119 --> 00:48:26,559
it all work together

1251
00:48:26,559 --> 00:48:29,119
like indicating friends if multiple

1252
00:48:29,119 --> 00:48:30,720
profiles

1253
00:48:30,720 --> 00:48:33,040
are supported in a representation

1254
00:48:33,040 --> 00:48:34,800
clients asking for specific

1255
00:48:34,800 --> 00:48:36,640
representations and also clients

1256
00:48:36,640 --> 00:48:38,160
indicating that their representation

1257
00:48:38,160 --> 00:48:40,480
conforms to some things all these things

1258
00:48:40,480 --> 00:48:43,359
were not fully glued together so the

1259
00:48:43,359 --> 00:48:44,880
draft that we're currently proposing

1260
00:48:44,880 --> 00:48:46,400
glues these together using existing

1261
00:48:46,400 --> 00:48:47,760
mechanisms such as

1262
00:48:47,760 --> 00:48:50,800
profiles link hints and so on

1263
00:48:50,800 --> 00:48:52,240
the only new thing we're really

1264
00:48:52,240 --> 00:48:54,240
introducing here is also a header such

1265
00:48:54,240 --> 00:48:55,119
that we can have

1266
00:48:55,119 --> 00:48:57,760
um the reactive content negotiation from

1267
00:48:57,760 --> 00:48:59,359
the server side so just as you know

1268
00:48:59,359 --> 00:49:00,800
regular negotiation

1269
00:49:00,800 --> 00:49:02,800
that's only just a small part of the

1270
00:49:02,800 --> 00:49:03,920
proposal really

1271
00:49:03,920 --> 00:49:06,960
what this is ultimately is about is how

1272
00:49:06,960 --> 00:49:08,880
do we deal with the fact that many

1273
00:49:08,880 --> 00:49:11,040
content times today are underspecified

1274
00:49:11,040 --> 00:49:12,480
how can we allow servers to be more

1275
00:49:12,480 --> 00:49:13,520
specific

1276
00:49:13,520 --> 00:49:15,760
about what they have how can clients be

1277
00:49:15,760 --> 00:49:17,520
more specific about what they understand

1278
00:49:17,520 --> 00:49:18,640
and can reuse

1279
00:49:18,640 --> 00:49:20,960
and how can clients also send

1280
00:49:20,960 --> 00:49:22,160
representations that

1281
00:49:22,160 --> 00:49:25,119
that conform to more specific version of

1282
00:49:25,119 --> 00:49:26,640
media type

1283
00:49:26,640 --> 00:49:30,079
so this is our draft that we propose

1284
00:49:30,079 --> 00:49:33,920
it is adding um and gluing up profiles

1285
00:49:33,920 --> 00:49:36,720
for media types such that servers can

1286
00:49:36,720 --> 00:49:37,920
keep on communicating

1287
00:49:37,920 --> 00:49:41,280
in json xml and so on already today

1288
00:49:41,280 --> 00:49:43,280
but all of the assumptions that clients

1289
00:49:43,280 --> 00:49:44,400
are making today

1290
00:49:44,400 --> 00:49:47,040
and which break as apis evolve to make

1291
00:49:47,040 --> 00:49:49,440
those explicits in a reusable mechanism

1292
00:49:49,440 --> 00:49:49,839
that's

1293
00:49:49,839 --> 00:49:51,200
orthogonal to the rest of the whole

1294
00:49:51,200 --> 00:49:53,680
stack so that was a very short my

1295
00:49:53,680 --> 00:49:54,319
proposal

1296
00:49:54,319 --> 00:49:56,480
there's a link on the slants to the full

1297
00:49:56,480 --> 00:49:58,720
version which i will also add in chat

1298
00:49:58,720 --> 00:49:59,599
for your

1299
00:49:59,599 --> 00:50:01,920
convenience and i'm happy to hear what

1300
00:50:01,920 --> 00:50:04,079
you think about it specifically

1301
00:50:04,079 --> 00:50:06,400
what right places within ietf to have

1302
00:50:06,400 --> 00:50:07,680
these kind of discussions what do you

1303
00:50:07,680 --> 00:50:08,559
think is useful

1304
00:50:08,559 --> 00:50:10,240
and what you need from input from our

1305
00:50:10,240 --> 00:50:11,920
site to make this happen so thanks

1306
00:50:11,920 --> 00:50:14,880
advance for considering

1307
00:50:15,599 --> 00:50:17,760
thank you yes i encourage people to join

1308
00:50:17,760 --> 00:50:19,359
the queue if you have views on

1309
00:50:19,359 --> 00:50:22,799
how and where to dispatch this

1310
00:50:24,960 --> 00:50:27,440
um patrick and i discussed and we

1311
00:50:27,440 --> 00:50:29,040
thought maybe http

1312
00:50:29,040 --> 00:50:32,559
api or http biz would be a suitable

1313
00:50:32,559 --> 00:50:36,240
venue but keen to hear your thoughts as

1314
00:50:38,839 --> 00:50:41,839
well

1315
00:50:46,559 --> 00:50:49,359
mark go for it

1316
00:50:50,319 --> 00:50:53,680
oh again um i'm just going to assume you

1317
00:50:53,680 --> 00:50:55,040
can hear me

1318
00:50:55,040 --> 00:50:58,400
i kind of wanted this to come by

1319
00:50:58,400 --> 00:51:02,000
dispatch personally because i

1320
00:51:02,000 --> 00:51:04,000
there were a lot of open unanswered

1321
00:51:04,000 --> 00:51:06,400
questions about it for me in terms of

1322
00:51:06,400 --> 00:51:07,920
well i know that your use case is

1323
00:51:07,920 --> 00:51:09,680
primarily apis

1324
00:51:09,680 --> 00:51:11,359
it seems like this is potentially

1325
00:51:11,359 --> 00:51:13,040
generic uh

1326
00:51:13,040 --> 00:51:16,720
negotiation mechanism and so

1327
00:51:16,720 --> 00:51:18,079
that causes a question whether it could

1328
00:51:18,079 --> 00:51:20,079
be used by their folks so to be good

1329
00:51:20,079 --> 00:51:21,280
i thought it'd be good to get in front

1330
00:51:21,280 --> 00:51:23,200
of a broader audience than just

1331
00:51:23,200 --> 00:51:27,280
the hbi api folks and i'm also i guess

1332
00:51:27,280 --> 00:51:30,400
just wondering i mean

1333
00:51:31,040 --> 00:51:34,319
this mechanism is something that looks

1334
00:51:34,319 --> 00:51:36,480
good on paper i'm just wondering if

1335
00:51:36,480 --> 00:51:38,240
there are or or at least

1336
00:51:38,240 --> 00:51:40,880
feasible on paper i'm wondering if there

1337
00:51:40,880 --> 00:51:41,359
are

1338
00:51:41,359 --> 00:51:45,280
api practitioners and implementers

1339
00:51:45,280 --> 00:51:48,160
who want to be able to do this you know

1340
00:51:48,160 --> 00:51:50,160
if they're running up and saying

1341
00:51:50,160 --> 00:51:53,359
we tried to use media types we tried to

1342
00:51:53,359 --> 00:51:54,880
use the structured suffixes on media

1343
00:51:54,880 --> 00:51:55,760
types

1344
00:51:55,760 --> 00:51:57,200
and it wasn't descriptive enough for

1345
00:51:57,200 --> 00:51:59,359
what we need to do in our api

1346
00:51:59,359 --> 00:52:02,400
um and if that's the case

1347
00:52:02,400 --> 00:52:04,800
then then that's something that would be

1348
00:52:04,800 --> 00:52:06,400
worth pursuing but

1349
00:52:06,400 --> 00:52:10,079
i'm just you know popping up a level i'm

1350
00:52:10,079 --> 00:52:12,000
very wary of overloading

1351
00:52:12,000 --> 00:52:14,319
the http api working group with too many

1352
00:52:14,319 --> 00:52:15,280
work items

1353
00:52:15,280 --> 00:52:17,200
in its current state right now when it's

1354
00:52:17,200 --> 00:52:19,119
just trying to find a community

1355
00:52:19,119 --> 00:52:21,359
as it were so that that's kind of where

1356
00:52:21,359 --> 00:52:24,400
my head's at for this one

1357
00:52:26,000 --> 00:52:27,920
thank you mark and chris you're next in

1358
00:52:27,920 --> 00:52:30,319
the queue

1359
00:52:31,680 --> 00:52:35,200
all right so yeah uh the question is

1360
00:52:35,200 --> 00:52:35,839
well put

1361
00:52:35,839 --> 00:52:39,119
uh does this work outside

1362
00:52:39,119 --> 00:52:42,400
of um http apis and

1363
00:52:42,400 --> 00:52:45,280
um i will say that my first thought on

1364
00:52:45,280 --> 00:52:46,240
reading this

1365
00:52:46,240 --> 00:52:49,280
was a potential applicability

1366
00:52:49,280 --> 00:52:53,359
in things like uh

1367
00:52:53,359 --> 00:52:57,040
indicating whether uh a c uh

1368
00:52:57,040 --> 00:52:59,760
a given seabor client understands packed

1369
00:52:59,760 --> 00:53:00,640
sibor

1370
00:53:00,640 --> 00:53:04,960
or if it needs you know unpacked sebor

1371
00:53:04,960 --> 00:53:07,200
and there there are a number of

1372
00:53:07,200 --> 00:53:08,800
situations where

1373
00:53:08,800 --> 00:53:12,240
it's not just the format but also

1374
00:53:12,240 --> 00:53:17,119
what extensions do i support and that

1375
00:53:17,119 --> 00:53:18,640
and so i i do think there is some

1376
00:53:18,640 --> 00:53:20,240
applicability here but

1377
00:53:20,240 --> 00:53:23,599
there and also why dragons so

1378
00:53:23,599 --> 00:53:29,839
there's real work to be done here

1379
00:53:30,640 --> 00:53:33,760
okay thank you um timothy

1380
00:53:33,760 --> 00:53:36,720
hampton you're next

1381
00:53:38,960 --> 00:53:40,800
i i kind of thought from the heavy

1382
00:53:40,800 --> 00:53:42,000
dragons in there i'm slightly

1383
00:53:42,000 --> 00:53:44,079
worried that unless you really constrain

1384
00:53:44,079 --> 00:53:45,280
scope on this

1385
00:53:45,280 --> 00:53:49,040
sorry i don't know if it's just me or if

1386
00:53:49,040 --> 00:53:50,319
everyone else is getting that

1387
00:53:50,319 --> 00:53:53,359
it's quite broken up oh weird uh that's

1388
00:53:53,359 --> 00:53:53,839
better

1389
00:53:53,839 --> 00:53:56,800
so i think it's um it's an odd uh i

1390
00:53:56,800 --> 00:53:58,319
think it's a risk that the the hereby

1391
00:53:58,319 --> 00:53:59,040
dragons think

1392
00:53:59,040 --> 00:54:02,559
really kicks in and that uh so i i'd be

1393
00:54:02,559 --> 00:54:05,359
keen to see a kind of strong restriction

1394
00:54:05,359 --> 00:54:06,079
on the scope

1395
00:54:06,079 --> 00:54:09,760
maybe to um try and keep it out of

1396
00:54:09,760 --> 00:54:10,800
semantics and

1397
00:54:10,800 --> 00:54:15,040
and keep it talking about formats

1398
00:54:15,040 --> 00:54:17,359
you see what i mean see the distinction

1399
00:54:17,359 --> 00:54:21,119
um so yeah it bothers me

1400
00:54:22,839 --> 00:54:25,839
that

1401
00:54:28,400 --> 00:54:39,839
okay thank you um rich you're next

1402
00:54:43,359 --> 00:54:47,200
rich if you're speaking we can't hear

1403
00:54:50,839 --> 00:54:52,000
you

1404
00:54:52,000 --> 00:54:55,200
okay so uh so

1405
00:54:55,200 --> 00:54:58,240
co-chair of the http api group um as

1406
00:54:58,240 --> 00:54:59,119
mark had said

1407
00:54:59,119 --> 00:55:01,119
we're just trying to figure out what's

1408
00:55:01,119 --> 00:55:02,799
doing what we're doing and getting a

1409
00:55:02,799 --> 00:55:04,000
community going

1410
00:55:04,000 --> 00:55:08,079
um it could end up in http api

1411
00:55:08,079 --> 00:55:10,720
um but i would rather it didn't start

1412
00:55:10,720 --> 00:55:13,040
right now

1413
00:55:13,040 --> 00:55:15,760
start right away we've got five drafts

1414
00:55:15,760 --> 00:55:17,040
in progress

1415
00:55:17,040 --> 00:55:20,079
and a group that is about half new

1416
00:55:20,079 --> 00:55:22,480
to the ietf so it might be a little much

1417
00:55:22,480 --> 00:55:24,480
for this group

1418
00:55:24,480 --> 00:55:26,480
and also it seemed to me when i read the

1419
00:55:26,480 --> 00:55:28,319
draft that it was much more generic than

1420
00:55:28,319 --> 00:55:29,040
just

1421
00:55:29,040 --> 00:55:30,799
or it could be much more generic than

1422
00:55:30,799 --> 00:55:34,000
just apis

1423
00:55:34,000 --> 00:55:36,160
you

1424
00:55:38,160 --> 00:55:40,559
thanks rich um and you can see we've got

1425
00:55:40,559 --> 00:55:42,559
patrick joining us now as well so

1426
00:55:42,559 --> 00:55:46,160
no longer going solo um

1427
00:55:46,160 --> 00:55:47,599
patrick i don't know if you want to say

1428
00:55:47,599 --> 00:55:50,240
hi or

1429
00:55:50,640 --> 00:55:53,440
put you on the spot

1430
00:55:55,200 --> 00:55:58,079
okay so i'm not hearing any clear um

1431
00:55:58,079 --> 00:55:59,680
signals for whether we want this to go

1432
00:55:59,680 --> 00:56:00,319
to

1433
00:56:00,319 --> 00:56:03,359
api or biz might be

1434
00:56:03,359 --> 00:56:04,880
a good idea to just continue the

1435
00:56:04,880 --> 00:56:06,400
discussion on list

1436
00:56:06,400 --> 00:56:10,880
and try to find a natural home

1437
00:56:12,559 --> 00:56:14,000
but i'll just pause in case there's any

1438
00:56:14,000 --> 00:56:17,839
further closing thoughts

1439
00:56:18,079 --> 00:56:19,680
you can see a couple of things in java

1440
00:56:19,680 --> 00:56:21,119
just saying it smells like

1441
00:56:21,119 --> 00:56:24,480
http api work

1442
00:56:26,480 --> 00:56:27,599
but maybe i'm not picking up the

1443
00:56:27,599 --> 00:56:31,839
strongest feeling

1444
00:56:32,400 --> 00:56:34,640
to continue discussion i think is maybe

1445
00:56:34,640 --> 00:56:36,000
the outcome we need to talk about it a

1446
00:56:36,000 --> 00:56:37,119
bit more on list

1447
00:56:37,119 --> 00:56:40,559
and find a suitable home i'm very sorry

1448
00:56:40,559 --> 00:56:40,960
chris

1449
00:56:40,960 --> 00:56:42,240
i don't find the cue mechanism there

1450
00:56:42,240 --> 00:56:43,920
probably something wrong and i just want

1451
00:56:43,920 --> 00:56:44,400
to

1452
00:56:44,400 --> 00:56:46,079
confirm the point has been said like we

1453
00:56:46,079 --> 00:56:48,160
also see it as wider than apis i've

1454
00:56:48,160 --> 00:56:49,920
pitched it from an api perspective now

1455
00:56:49,920 --> 00:56:50,640
for

1456
00:56:50,640 --> 00:56:52,559
making the story understandable but this

1457
00:56:52,559 --> 00:56:54,240
is a need a much more generic mechanism

1458
00:56:54,240 --> 00:56:55,599
as far as we're concerned as well so

1459
00:56:55,599 --> 00:56:59,839
just to add to that

1460
00:56:59,920 --> 00:57:02,240
okay thank you for the time and um yeah

1461
00:57:02,240 --> 00:57:05,040
we'll we'll continue on list

1462
00:57:05,040 --> 00:57:06,960
um and just for the rest of the session

1463
00:57:06,960 --> 00:57:08,240
if you want to join the

1464
00:57:08,240 --> 00:57:12,240
queue you just tap the hand icon um

1465
00:57:12,240 --> 00:57:15,119
okay so we're moving into the kind of

1466
00:57:15,119 --> 00:57:15,760
art

1467
00:57:15,760 --> 00:57:17,760
uh section of the agenda now so we just

1468
00:57:17,760 --> 00:57:19,280
highlight as always a few

1469
00:57:19,280 --> 00:57:22,559
meetings of interest um so

1470
00:57:22,559 --> 00:57:26,079
there's a new uh buff this week on a

1471
00:57:26,079 --> 00:57:28,640
danish day in authentication for iot

1472
00:57:28,640 --> 00:57:29,920
service hardening

1473
00:57:29,920 --> 00:57:33,119
that's it friday at 12 o'clock utc

1474
00:57:33,119 --> 00:57:35,520
so we'll see modulate for your time zone

1475
00:57:35,520 --> 00:57:37,920
um and then there are a couple of um

1476
00:57:37,920 --> 00:57:41,359
not new but newish art working groups

1477
00:57:41,359 --> 00:57:44,480
so rtc web has recharted and

1478
00:57:44,480 --> 00:57:47,440
wish has been charted and s frame is

1479
00:57:47,440 --> 00:57:49,040
kind of new as well so

1480
00:57:49,040 --> 00:57:51,200
we just highlight those for you and in

1481
00:57:51,200 --> 00:57:53,680
other exciting news cluster 238 has

1482
00:57:53,680 --> 00:57:54,480
cleared

1483
00:57:54,480 --> 00:57:58,640
so let the party rain um

1484
00:57:58,640 --> 00:58:00,000
so we just kind of highlight those

1485
00:58:00,000 --> 00:58:01,200
because it's the start of the week and

1486
00:58:01,200 --> 00:58:03,119
it's always good to see

1487
00:58:03,119 --> 00:58:04,960
new work coming in and just things you

1488
00:58:04,960 --> 00:58:07,040
might be interested in during the week

1489
00:58:07,040 --> 00:58:08,640
and we've also highlighted a couple of

1490
00:58:08,640 --> 00:58:10,079
other interesting meetings

1491
00:58:10,079 --> 00:58:13,599
um all times utc again so um the rsc

1492
00:58:13,599 --> 00:58:15,760
editor future development program

1493
00:58:15,760 --> 00:58:18,480
and shmu staying at home and as we are

1494
00:58:18,480 --> 00:58:19,359
right now meeting

1495
00:58:19,359 --> 00:58:22,160
only online and that work continues and

1496
00:58:22,160 --> 00:58:23,760
then a couple of other dispatchy groups

1497
00:58:23,760 --> 00:58:25,119
that we always highlight there's

1498
00:58:25,119 --> 00:58:27,200
gen dispatch so dispatch for the general

1499
00:58:27,200 --> 00:58:29,119
area and security dispatch

1500
00:58:29,119 --> 00:58:31,359
sec dispatch for the security area and

1501
00:58:31,359 --> 00:58:33,280
finally the iab open meeting

1502
00:58:33,280 --> 00:58:36,240
which is a newish one um and so also

1503
00:58:36,240 --> 00:58:36,720
worth

1504
00:58:36,720 --> 00:58:39,440
having a look um patrick i don't know if

1505
00:58:39,440 --> 00:58:40,720
you want to say anything

1506
00:58:40,720 --> 00:58:45,200
um at this point we're just kind of

1507
00:58:45,200 --> 00:58:48,559
recognized during the meeting i really

1508
00:58:48,559 --> 00:58:49,280
appreciate you

1509
00:58:49,280 --> 00:58:52,079
setting all this up so this terrific i

1510
00:58:52,079 --> 00:58:53,520
will uh mostly listen if i can help out

1511
00:58:53,520 --> 00:58:55,520
with the queue as we go i'm happy to

1512
00:58:55,520 --> 00:58:57,359
um but this is great thanks chris

1513
00:58:57,359 --> 00:58:58,720
christie no worries

1514
00:58:58,720 --> 00:59:01,760
cool thank you um okay so we just move

1515
00:59:01,760 --> 00:59:02,799
into the

1516
00:59:02,799 --> 00:59:05,599
kind of art area section so all of these

1517
00:59:05,599 --> 00:59:06,240
um

1518
00:59:06,240 --> 00:59:08,720
presentations are just kind of like fyis

1519
00:59:08,720 --> 00:59:10,240
for your information and to raise

1520
00:59:10,240 --> 00:59:12,000
awareness of the technology topics we're

1521
00:59:12,000 --> 00:59:14,000
not taking dispatching decisions on

1522
00:59:14,000 --> 00:59:14,720
these

1523
00:59:14,720 --> 00:59:16,640
um it's just an opportunity to air out

1524
00:59:16,640 --> 00:59:18,000
the technologies

1525
00:59:18,000 --> 00:59:19,839
and get some interested folks together

1526
00:59:19,839 --> 00:59:21,200
and then follow up

1527
00:59:21,200 --> 00:59:23,280
um with the presenters or the authors of

1528
00:59:23,280 --> 00:59:24,960
the draft after the

1529
00:59:24,960 --> 00:59:28,000
after the session so um first up

1530
00:59:28,000 --> 00:59:31,359
we have apn application aware networking

1531
00:59:31,359 --> 00:59:34,319
and i can see we've got people in the

1532
00:59:34,319 --> 00:59:37,680
queue so yeah just take it away

1533
00:59:44,640 --> 00:59:47,839
hello uh kirsty can you hear me

1534
00:59:47,839 --> 00:59:50,880
yeah i can hear you and see you okay

1535
00:59:50,880 --> 00:59:54,000
okay thank you uh uh in fact the

1536
00:59:54,000 --> 00:59:55,440
shooting now is uh

1537
00:59:55,440 --> 00:59:58,559
this is the champion from huawei uh in

1538
00:59:58,559 --> 01:00:00,079
fact the shooting now is

1539
01:00:00,079 --> 01:00:02,240
in the spring working group i will do

1540
01:00:02,240 --> 01:00:03,920
the presentation

1541
01:00:03,920 --> 01:00:06,799
okay my uh this is my first uh

1542
01:00:06,799 --> 01:00:08,079
presentation

1543
01:00:08,079 --> 01:00:11,520
in the uh in the

1544
01:00:11,520 --> 01:00:15,359
art area because i'm i'm always working

1545
01:00:15,359 --> 01:00:17,040
in the routine area

1546
01:00:17,040 --> 01:00:20,000
but because of the application awareness

1547
01:00:20,000 --> 01:00:21,440
working work

1548
01:00:21,440 --> 01:00:25,119
proposal much confusing

1549
01:00:25,119 --> 01:00:28,319
in the ietf so i would like to do the

1550
01:00:28,319 --> 01:00:32,400
clarification uh in the application

1551
01:00:32,400 --> 01:00:36,319
area okay next page

1552
01:00:38,880 --> 01:00:41,680
okay uh purpose of the presenting in

1553
01:00:41,680 --> 01:00:42,000
this

1554
01:00:42,000 --> 01:00:45,200
working group so in fact we

1555
01:00:45,200 --> 01:00:47,839
have uh the discussion in the apm

1556
01:00:47,839 --> 01:00:49,359
mailing list

1557
01:00:49,359 --> 01:00:52,480
regarding the scope of the apm work

1558
01:00:52,480 --> 01:00:55,520
uh the api is the application are

1559
01:00:55,520 --> 01:00:56,640
networking

1560
01:00:56,640 --> 01:00:59,839
uh apn is the abbreviation of the

1561
01:00:59,839 --> 01:01:02,160
application we are networking

1562
01:01:02,160 --> 01:01:05,040
uh in fact we want a constraint of the

1563
01:01:05,040 --> 01:01:05,760
scope

1564
01:01:05,760 --> 01:01:08,799
of apn uh to only focus on the

1565
01:01:08,799 --> 01:01:12,079
network side solution that is

1566
01:01:12,079 --> 01:01:15,200
the application identifier is

1567
01:01:15,200 --> 01:01:19,280
derived as a network edge instead of the

1568
01:01:19,280 --> 01:01:20,000
host

1569
01:01:20,000 --> 01:01:23,280
or the application so that means

1570
01:01:23,280 --> 01:01:26,559
uh if we do like this way so this is the

1571
01:01:26,559 --> 01:01:30,400
network aside the problems uh instead of

1572
01:01:30,400 --> 01:01:34,559
instead of uh is as a application

1573
01:01:34,559 --> 01:01:37,359
problem uh regarding the application

1574
01:01:37,359 --> 01:01:38,799
area

1575
01:01:38,799 --> 01:01:41,680
so here we would like to introduce the

1576
01:01:41,680 --> 01:01:43,200
concept

1577
01:01:43,200 --> 01:01:46,319
clarification the scope and also

1578
01:01:46,319 --> 01:01:49,520
hope this the people in the art

1579
01:01:49,520 --> 01:01:52,799
area can understanding the work well

1580
01:01:52,799 --> 01:01:55,839
so if you have interest in this work you

1581
01:01:55,839 --> 01:01:56,799
can also

1582
01:01:56,799 --> 01:02:00,400
join this the ep mini list we can have

1583
01:02:00,400 --> 01:02:03,520
more across the area communication

1584
01:02:03,520 --> 01:02:06,640
for better understanding each other okay

1585
01:02:06,640 --> 01:02:09,279
next slides

1586
01:02:11,359 --> 01:02:14,400
okay so here we will introduce this the

1587
01:02:14,400 --> 01:02:17,599
apn uh so uh apn is

1588
01:02:17,599 --> 01:02:21,280
focused on the a framework

1589
01:02:21,280 --> 01:02:24,640
and a set of mechanism to derive convey

1590
01:02:24,640 --> 01:02:28,079
and use attribute information to allow

1591
01:02:28,079 --> 01:02:28,480
the

1592
01:02:28,480 --> 01:02:32,000
implementation of the fine greener user

1593
01:02:32,000 --> 01:02:34,880
group or the application group and the

1594
01:02:34,880 --> 01:02:36,640
service level requirement

1595
01:02:36,640 --> 01:02:40,559
as a network layer that means

1596
01:02:40,559 --> 01:02:43,760
such application aware information

1597
01:02:43,760 --> 01:02:48,079
is acquired constructed and encapsulated

1598
01:02:48,079 --> 01:02:51,760
in the packet and such information is

1599
01:02:51,760 --> 01:02:54,799
treated under the as an object

1600
01:02:54,799 --> 01:02:58,640
in the network so from this the picture

1601
01:02:58,640 --> 01:03:01,520
we can see this the application where

1602
01:03:01,520 --> 01:03:03,039
identifier

1603
01:03:03,039 --> 01:03:06,480
is tagged as a network edge

1604
01:03:06,480 --> 01:03:09,599
so this apn will work with a

1605
01:03:09,599 --> 01:03:12,640
limited trusted domain

1606
01:03:12,640 --> 01:03:16,160
that means a apn domain

1607
01:03:16,160 --> 01:03:19,359
is defined as a service provider's

1608
01:03:19,359 --> 01:03:22,960
limited domain in which mps

1609
01:03:22,960 --> 01:03:26,319
vxlan segment routine and other

1610
01:03:26,319 --> 01:03:29,920
tunnel technologies adopted to provide

1611
01:03:29,920 --> 01:03:31,760
the service

1612
01:03:31,760 --> 01:03:35,359
apn attributes is also tagged

1613
01:03:35,359 --> 01:03:38,960
and removed at the edge of this

1614
01:03:38,960 --> 01:03:42,079
limited trusted domain

1615
01:03:42,079 --> 01:03:45,839
okay next slice

1616
01:03:48,160 --> 01:03:51,359
okay so according to this the basic

1617
01:03:51,359 --> 01:03:54,559
concept of this the apn definition

1618
01:03:54,559 --> 01:03:57,440
so here i would like to expire

1619
01:03:57,440 --> 01:03:58,480
explanation

1620
01:03:58,480 --> 01:04:01,760
play what apn is not

1621
01:04:01,760 --> 01:04:05,440
the first api is not about identifying

1622
01:04:05,440 --> 01:04:07,359
the application

1623
01:04:07,359 --> 01:04:10,400
or always in the network

1624
01:04:10,400 --> 01:04:13,599
that means the network does not need to

1625
01:04:13,599 --> 01:04:14,480
know

1626
01:04:14,480 --> 01:04:16,799
which application are sending the

1627
01:04:16,799 --> 01:04:18,160
traffic

1628
01:04:18,160 --> 01:04:21,520
because the network uh as a network

1629
01:04:21,520 --> 01:04:24,160
edge is just to learn this the

1630
01:04:24,160 --> 01:04:28,760
application group so that's used for the

1631
01:04:28,760 --> 01:04:32,000
classification and also

1632
01:04:32,000 --> 01:04:35,280
because of this telling the network

1633
01:04:35,280 --> 01:04:37,680
uh which application are running would

1634
01:04:37,680 --> 01:04:38,559
also

1635
01:04:38,559 --> 01:04:41,359
propose this is the priority issue this

1636
01:04:41,359 --> 01:04:41,839
is not

1637
01:04:41,839 --> 01:04:46,640
the scope of this the apn

1638
01:04:47,039 --> 01:04:50,079
uh christie it seems the tread

1639
01:04:50,079 --> 01:04:54,880
in the queue so i will go on or tell you

1640
01:04:54,880 --> 01:05:00,000
we'll propose this your question firstly

1641
01:05:02,640 --> 01:05:04,319
i think you can proceed with the

1642
01:05:04,319 --> 01:05:05,839
presentation and we'll take questions at

1643
01:05:05,839 --> 01:05:07,200
the end ted if that

1644
01:05:07,200 --> 01:05:09,039
um if you're trying to clarify something

1645
01:05:09,039 --> 01:05:11,520
feel free to jump in directly

1646
01:05:11,520 --> 01:05:16,480
okay so thanks patrick okay okay

1647
01:05:17,760 --> 01:05:21,039
okay uh so uh the apn

1648
01:05:21,039 --> 01:05:24,240
is about telling the network what policy

1649
01:05:24,240 --> 01:05:26,079
to apply the traffic

1650
01:05:26,079 --> 01:05:28,799
uh that means the application can apply

1651
01:05:28,799 --> 01:05:30,240
multiple policy

1652
01:05:30,240 --> 01:05:33,359
to different traffic flows and also the

1653
01:05:33,359 --> 01:05:33,920
multi

1654
01:05:33,920 --> 01:05:36,559
applications can ask for the same

1655
01:05:36,559 --> 01:05:37,839
policies

1656
01:05:37,839 --> 01:05:41,520
so this this is the policy process

1657
01:05:41,520 --> 01:05:44,400
means that we need an author to for the

1658
01:05:44,400 --> 01:05:46,559
network to learn the specific

1659
01:05:46,559 --> 01:05:49,200
application information but it is just

1660
01:05:49,200 --> 01:05:52,000
needed to a classification

1661
01:05:52,000 --> 01:05:56,160
as a network edge so and also in history

1662
01:05:56,160 --> 01:05:59,760
there are a lot of similar work

1663
01:05:59,760 --> 01:06:02,960
that caused the confusion such as power

1664
01:06:02,960 --> 01:06:03,680
g

1665
01:06:03,680 --> 01:06:06,960
and sabbath plus or the network token

1666
01:06:06,960 --> 01:06:10,319
it has been discussed in the application

1667
01:06:10,319 --> 01:06:11,440
area or the

1668
01:06:11,440 --> 01:06:14,960
transport area but in fact

1669
01:06:14,960 --> 01:06:18,559
the apn is different from this the

1670
01:06:18,559 --> 01:06:22,319
this works uh first for the sabad plus

1671
01:06:22,319 --> 01:06:25,359
and the network token it focuses on to

1672
01:06:25,359 --> 01:06:26,319
encapsulate

1673
01:06:26,319 --> 01:06:29,599
the application information in the host

1674
01:06:29,599 --> 01:06:32,799
and the application that means it will

1675
01:06:32,799 --> 01:06:33,680
not

1676
01:06:33,680 --> 01:06:36,480
uh use it does not to encapsulate the

1677
01:06:36,480 --> 01:06:37,520
information

1678
01:06:37,520 --> 01:06:40,880
as a network edge so

1679
01:06:40,880 --> 01:06:43,760
so this is the first thing the second

1680
01:06:43,760 --> 01:06:44,400
thing

1681
01:06:44,400 --> 01:06:47,039
for the spot under the plus it will

1682
01:06:47,039 --> 01:06:48,640
carry the

1683
01:06:48,640 --> 01:06:52,240
application information in the transport

1684
01:06:52,240 --> 01:06:52,640
layer

1685
01:06:52,640 --> 01:06:55,680
or the application layer so but for the

1686
01:06:55,680 --> 01:06:56,480
apn

1687
01:06:56,480 --> 01:06:59,520
user just to carry this information in

1688
01:06:59,520 --> 01:07:00,960
the network layer

1689
01:07:00,960 --> 01:07:04,720
because it's just specific to the

1690
01:07:04,720 --> 01:07:08,000
limited network domain

1691
01:07:08,000 --> 01:07:11,200
so in fact we have a set meeting

1692
01:07:11,200 --> 01:07:14,799
in the itf 108 so here we do the

1693
01:07:14,799 --> 01:07:16,160
clarification

1694
01:07:16,160 --> 01:07:19,280
and so this is to be sum up there's a

1695
01:07:19,280 --> 01:07:20,960
conveyor information

1696
01:07:20,960 --> 01:07:23,839
where the transport application layer

1697
01:07:23,839 --> 01:07:25,280
and the network layer

1698
01:07:25,280 --> 01:07:28,880
are different technologies here apn use

1699
01:07:28,880 --> 01:07:31,440
the network layer

1700
01:07:31,440 --> 01:07:34,400
okay next page

1701
01:07:37,280 --> 01:07:40,319
okay so here is the y apn

1702
01:07:40,319 --> 01:07:44,160
so we propose this the popular as

1703
01:07:44,160 --> 01:07:47,359
sd1 as the use case sd1 means the

1704
01:07:47,359 --> 01:07:48,319
software

1705
01:07:48,319 --> 01:07:52,160
will define the one solutions

1706
01:07:52,160 --> 01:07:55,039
so in the case of the sd1 network

1707
01:07:55,039 --> 01:07:57,280
operators can provide

1708
01:07:57,280 --> 01:08:00,240
sre guaranteed one lines to help

1709
01:08:00,240 --> 01:08:01,119
enterprise

1710
01:08:01,119 --> 01:08:04,240
to access the clouds

1711
01:08:04,240 --> 01:08:07,520
when mapping the wine line into the

1712
01:08:07,520 --> 01:08:09,280
operators network

1713
01:08:09,280 --> 01:08:12,240
there are usually multiple network paths

1714
01:08:12,240 --> 01:08:12,640
with

1715
01:08:12,640 --> 01:08:15,359
different sr guarantees available

1716
01:08:15,359 --> 01:08:17,040
between the two endpoints

1717
01:08:17,040 --> 01:08:21,520
of the tunnel connecting the cpu nodes

1718
01:08:21,520 --> 01:08:25,120
in fact in the mef is already defended

1719
01:08:25,120 --> 01:08:26,238
this is the

1720
01:08:26,238 --> 01:08:29,439
standards related with the sd1

1721
01:08:29,439 --> 01:08:33,040
either car as this is the cpe it will

1722
01:08:33,040 --> 01:08:34,719
use this the fifth tube

1723
01:08:34,719 --> 01:08:37,839
information to classify

1724
01:08:37,839 --> 01:08:40,880
this the traffic flow and also steer

1725
01:08:40,880 --> 01:08:45,120
this the traffic into the different

1726
01:08:45,120 --> 01:08:49,520
one lines but we know that

1727
01:08:49,520 --> 01:08:52,238
this is adjusted for the cpe to the

1728
01:08:52,238 --> 01:08:52,880
different

1729
01:08:52,880 --> 01:08:55,359
one lines but you know that in the

1730
01:08:55,359 --> 01:08:57,279
underlying network

1731
01:08:57,279 --> 01:09:00,158
there can be multi paths that can be

1732
01:09:00,158 --> 01:09:01,520
satisfy the

1733
01:09:01,520 --> 01:09:05,120
different sre requirements

1734
01:09:05,120 --> 01:09:08,238
but there's no mechanism to communicate

1735
01:09:08,238 --> 01:09:11,120
the user application requirements to

1736
01:09:11,120 --> 01:09:11,759
match

1737
01:09:11,759 --> 01:09:15,279
to the capability of this the

1738
01:09:15,279 --> 01:09:19,520
path in the underly one network

1739
01:09:19,520 --> 01:09:23,600
so in order to cope with this

1740
01:09:23,600 --> 01:09:26,880
requirement and satisfy this requirement

1741
01:09:26,880 --> 01:09:29,839
so that's the traffic one goes from the

1742
01:09:29,839 --> 01:09:30,560
cpe

1743
01:09:30,560 --> 01:09:33,600
to the only one network

1744
01:09:33,600 --> 01:09:36,880
we need to convey this the application

1745
01:09:36,880 --> 01:09:39,679
related information to the only one

1746
01:09:39,679 --> 01:09:41,120
network

1747
01:09:41,120 --> 01:09:44,080
that is as is the head end of the one

1748
01:09:44,080 --> 01:09:45,120
network

1749
01:09:45,120 --> 01:09:48,158
either according to this the

1750
01:09:48,158 --> 01:09:50,479
application group information and the

1751
01:09:50,479 --> 01:09:51,279
user group

1752
01:09:51,279 --> 01:09:53,679
information to severely into

1753
01:09:53,679 --> 01:09:55,600
corresponding paths

1754
01:09:55,600 --> 01:09:59,520
uh to satisfy the sra requirements

1755
01:09:59,520 --> 01:10:03,520
and also in the along this the past

1756
01:10:03,520 --> 01:10:06,640
in the one network it can collect

1757
01:10:06,640 --> 01:10:08,400
the corresponding the performance

1758
01:10:08,400 --> 01:10:10,560
environment data

1759
01:10:10,560 --> 01:10:13,679
for the specific application group

1760
01:10:13,679 --> 01:10:17,199
or the user group and also because of

1761
01:10:17,199 --> 01:10:18,080
the service

1762
01:10:18,080 --> 01:10:22,159
training process and also in the

1763
01:10:22,159 --> 01:10:25,760
one network it also uses the application

1764
01:10:25,760 --> 01:10:26,159
group

1765
01:10:26,159 --> 01:10:29,440
information and also this is the user

1766
01:10:29,440 --> 01:10:29,840
group

1767
01:10:29,840 --> 01:10:32,640
information for specific service

1768
01:10:32,640 --> 01:10:35,280
function process

1769
01:10:35,280 --> 01:10:38,320
okay next slides

1770
01:10:41,679 --> 01:10:45,199
okay so i know here this is the

1771
01:10:45,199 --> 01:10:47,760
take this is the usual uh propose these

1772
01:10:47,760 --> 01:10:48,320
issues

1773
01:10:48,320 --> 01:10:51,120
and the possible solutions in fact i

1774
01:10:51,120 --> 01:10:51,679
already

1775
01:10:51,679 --> 01:10:54,960
explained uh these solutions

1776
01:10:54,960 --> 01:10:58,560
in the uh pre-war slides in fact

1777
01:10:58,560 --> 01:11:01,360
there have been some these alternative

1778
01:11:01,360 --> 01:11:02,560
solutions

1779
01:11:02,560 --> 01:11:05,760
uh for example uh some of the

1780
01:11:05,760 --> 01:11:08,800
solutions proposed in order

1781
01:11:08,800 --> 01:11:12,480
to facilitate the underlying one

1782
01:11:12,480 --> 01:11:16,400
one network to for the policy

1783
01:11:16,400 --> 01:11:20,320
process so it can encapsulate

1784
01:11:20,320 --> 01:11:24,000
various policies in at least trv

1785
01:11:24,000 --> 01:11:27,280
in the head of each packet when the

1786
01:11:27,280 --> 01:11:27,920
packet

1787
01:11:27,920 --> 01:11:31,199
into the one network it can

1788
01:11:31,199 --> 01:11:34,080
for the you can use this the list of the

1789
01:11:34,080 --> 01:11:35,040
tre

1790
01:11:35,040 --> 01:11:38,560
for the policy process but

1791
01:11:38,560 --> 01:11:42,480
we know that when you this is the method

1792
01:11:42,480 --> 01:11:45,920
all you this is the five tubes

1793
01:11:45,920 --> 01:11:49,840
in the ip package this proposes the

1794
01:11:49,840 --> 01:11:51,040
challenges

1795
01:11:51,040 --> 01:11:52,640
because this is the five tube

1796
01:11:52,640 --> 01:11:55,280
information in the

1797
01:11:55,280 --> 01:11:57,840
payload but when you encapsulate this

1798
01:11:57,840 --> 01:11:59,040
the tunnel

1799
01:11:59,040 --> 01:12:02,400
so that's the uh nodes along this

1800
01:12:02,400 --> 01:12:06,480
one network cannot be aware of this uh

1801
01:12:06,480 --> 01:12:09,840
be aware of this the uh group

1802
01:12:09,840 --> 01:12:13,440
information so and also with this ipsec

1803
01:12:13,440 --> 01:12:16,800
it has also impossible uh to abstain

1804
01:12:16,800 --> 01:12:17,199
this

1805
01:12:17,199 --> 01:12:20,840
the transpo this is the transport layer

1806
01:12:20,840 --> 01:12:23,040
information and also

1807
01:12:23,040 --> 01:12:26,719
in the ipv6 the data plane

1808
01:12:26,719 --> 01:12:30,239
now as this the ipv6 external header

1809
01:12:30,239 --> 01:12:33,920
has been widely used so because of

1810
01:12:33,920 --> 01:12:37,040
this information this is a transport

1811
01:12:37,040 --> 01:12:37,440
layer

1812
01:12:37,440 --> 01:12:40,719
information for the fab tube like this

1813
01:12:40,719 --> 01:12:44,159
the port number it will beneath

1814
01:12:44,159 --> 01:12:47,440
this the ipv6 extension header it

1815
01:12:47,440 --> 01:12:50,719
will more difficult for the network node

1816
01:12:50,719 --> 01:12:54,080
to learn this the information

1817
01:12:54,080 --> 01:12:57,440
okay next slides

1818
01:12:59,440 --> 01:13:02,080
okay next page okay so here are these

1819
01:13:02,080 --> 01:13:04,159
user to solve this is the issue

1820
01:13:04,159 --> 01:13:07,679
so that we can uh acquire and construct

1821
01:13:07,679 --> 01:13:10,800
attribute as a network edge and

1822
01:13:10,800 --> 01:13:14,560
encapsulate it in the package so that

1823
01:13:14,560 --> 01:13:17,199
such information can be treated as an

1824
01:13:17,199 --> 01:13:18,640
object

1825
01:13:18,640 --> 01:13:21,679
in the network this can bring some this

1826
01:13:21,679 --> 01:13:23,040
the benefits

1827
01:13:23,040 --> 01:13:26,080
so because this you this is the one

1828
01:13:26,080 --> 01:13:28,239
field the information instead of the

1829
01:13:28,239 --> 01:13:28,960
five tube

1830
01:13:28,960 --> 01:13:32,480
information so this is the so this can

1831
01:13:32,480 --> 01:13:35,920
improve this the scalability and also uh

1832
01:13:35,920 --> 01:13:36,640
you this

1833
01:13:36,640 --> 01:13:39,920
information it can provide a very

1834
01:13:39,920 --> 01:13:41,040
flexible

1835
01:13:41,040 --> 01:13:44,080
policy info enforcement uh

1836
01:13:44,080 --> 01:13:46,080
in various nodes and the service

1837
01:13:46,080 --> 01:13:47,840
function along with the network

1838
01:13:47,840 --> 01:13:50,960
paths uh furthermore with this

1839
01:13:50,960 --> 01:13:53,600
such information a module service could

1840
01:13:53,600 --> 01:13:55,040
be enabled

1841
01:13:55,040 --> 01:13:57,679
uh for example uh so let's use the

1842
01:13:57,679 --> 01:13:58,800
policy

1843
01:13:58,800 --> 01:14:01,920
uh executive execution on the

1844
01:14:01,920 --> 01:14:04,719
service function changing can be based

1845
01:14:04,719 --> 01:14:05,280
on this

1846
01:14:05,280 --> 01:14:08,880
the application attributes uh instead of

1847
01:14:08,880 --> 01:14:09,280
this

1848
01:14:09,280 --> 01:14:12,400
the five tube information and

1849
01:14:12,400 --> 01:14:15,679
we can also implement this the more fine

1850
01:14:15,679 --> 01:14:16,960
granularly

1851
01:14:16,960 --> 01:14:19,920
ready performance environment and also

1852
01:14:19,920 --> 01:14:22,239
this is the

1853
01:14:22,239 --> 01:14:25,520
uh for the sd1 so this underlay

1854
01:14:25,520 --> 01:14:29,199
performance guarantee uh can be achieved

1855
01:14:29,199 --> 01:14:32,159
so this is just a sort of new services

1856
01:14:32,159 --> 01:14:33,120
based on this

1857
01:14:33,120 --> 01:14:43,199
information okay next slides

1858
01:14:43,199 --> 01:14:47,040
okay so uh in fact so this uh

1859
01:14:47,040 --> 01:14:50,320
because this is a specific issue for the

1860
01:14:50,320 --> 01:14:51,520
limited network

1861
01:14:51,520 --> 01:14:55,280
domain uh in the rooting area uh in fact

1862
01:14:55,280 --> 01:14:58,560
in the past years there are the uh

1863
01:14:58,560 --> 01:15:01,760
a lot of these solutions and

1864
01:15:01,760 --> 01:15:05,360
has been proposed and been adopted

1865
01:15:05,360 --> 01:15:10,000
uh so the first we say that the dlcd

1866
01:15:10,000 --> 01:15:12,239
so that's the use for the div cell but

1867
01:15:12,239 --> 01:15:13,520
the fields is not

1868
01:15:13,520 --> 01:15:16,719
big enough because this is the for the

1869
01:15:16,719 --> 01:15:20,320
more fine granularity and also in the

1870
01:15:20,320 --> 01:15:24,400
for the ipv6 there's the ipv6 flow label

1871
01:15:24,400 --> 01:15:27,520
to identify the different flow and also

1872
01:15:27,520 --> 01:15:28,640
use the npr's

1873
01:15:28,640 --> 01:15:31,760
entropy label to identify this the

1874
01:15:31,760 --> 01:15:34,800
flow label but this is the

1875
01:15:34,800 --> 01:15:38,000
because this always has hazard defender

1876
01:15:38,000 --> 01:15:41,280
for the specific other usage so that

1877
01:15:41,280 --> 01:15:44,480
you cannot use the for the uh for the

1878
01:15:44,480 --> 01:15:45,520
identify the

1879
01:15:45,520 --> 01:15:48,560
application attributes and also there's

1880
01:15:48,560 --> 01:15:50,880
the service chaining there's a draft for

1881
01:15:50,880 --> 01:15:52,560
the service id

1882
01:15:52,560 --> 01:15:54,719
and also use it to identify this as the

1883
01:15:54,719 --> 01:15:56,560
flow but this is only

1884
01:15:56,560 --> 01:15:59,679
encapsulated into the specific and

1885
01:15:59,679 --> 01:16:01,520
essential encapsulation

1886
01:16:01,520 --> 01:16:04,960
it cannot be learned by the

1887
01:16:04,960 --> 01:16:07,679
nodes which is not the service function

1888
01:16:07,679 --> 01:16:08,560
node

1889
01:16:08,560 --> 01:16:12,480
and also for this is the i apologize for

1890
01:16:12,480 --> 01:16:14,320
jumping in um i just we're going to okay

1891
01:16:14,320 --> 01:16:15,840
second time we're down to four minutes

1892
01:16:15,840 --> 01:16:17,120
so i just want to give you a time to

1893
01:16:17,120 --> 01:16:18,560
make sure we can get at least a

1894
01:16:18,560 --> 01:16:20,320
couple of questions and so perhaps a

1895
01:16:20,320 --> 01:16:22,560
summaries in order here

1896
01:16:22,560 --> 01:16:25,360
okay i will try okay so and also this is

1897
01:16:25,360 --> 01:16:25,840
the

1898
01:16:25,840 --> 01:16:28,800
glasses iom and binding seed i also the

1899
01:16:28,800 --> 01:16:29,840
flow label

1900
01:16:29,840 --> 01:16:33,120
uh this is the uh portable solutions i

1901
01:16:33,120 --> 01:16:35,440
will not introduce the details

1902
01:16:35,440 --> 01:16:38,320
okay next slides

1903
01:16:41,360 --> 01:16:43,840
okay so now this solution is just

1904
01:16:43,840 --> 01:16:44,640
specific

1905
01:16:44,640 --> 01:16:47,600
the specific scenario so and also the

1906
01:16:47,600 --> 01:16:48,159
apn

1907
01:16:48,159 --> 01:16:51,360
tried to propose this the general

1908
01:16:51,360 --> 01:16:54,159
last attribute to use for the service

1909
01:16:54,159 --> 01:16:55,040
parveeni

1910
01:16:55,040 --> 01:16:58,480
and be carried in various data plane uh

1911
01:16:58,480 --> 01:17:03,839
encapsulation next slides okay

1912
01:17:04,880 --> 01:17:08,159
okay so now that's this is the last page

1913
01:17:08,159 --> 01:17:10,080
and also this is the question

1914
01:17:10,080 --> 01:17:12,560
uh student to be addressed so here this

1915
01:17:12,560 --> 01:17:13,679
is the secularity

1916
01:17:13,679 --> 01:17:16,880
issue we wanted to learn this the more

1917
01:17:16,880 --> 01:17:18,080
information

1918
01:17:18,080 --> 01:17:21,040
about this the secularity issue and for

1919
01:17:21,040 --> 01:17:22,640
the privacy issue

1920
01:17:22,640 --> 01:17:25,920
we propose this the idea and the concept

1921
01:17:25,920 --> 01:17:28,640
to mitigate this issue because this is

1922
01:17:28,640 --> 01:17:30,640
just use this user group

1923
01:17:30,640 --> 01:17:33,280
of application group instead of this

1924
01:17:33,280 --> 01:17:34,080
specific

1925
01:17:34,080 --> 01:17:36,320
applications and also use this

1926
01:17:36,320 --> 01:17:37,520
information as

1927
01:17:37,520 --> 01:17:41,280
opaque value so and also

1928
01:17:41,280 --> 01:17:44,480
this is just the introduction of the apn

1929
01:17:44,480 --> 01:17:47,679
for this the other area we would like to

1930
01:17:47,679 --> 01:17:48,800
clarify this

1931
01:17:48,800 --> 01:17:53,040
scope and also and because we

1932
01:17:53,040 --> 01:17:56,000
so this user has noted directly with

1933
01:17:56,000 --> 01:17:56,400
this

1934
01:17:56,400 --> 01:17:59,040
other area but we would like to learn in

1935
01:17:59,040 --> 01:18:00,560
the other layer about this

1936
01:18:00,560 --> 01:18:03,360
development trend of the new application

1937
01:18:03,360 --> 01:18:04,960
so that according to this

1938
01:18:04,960 --> 01:18:08,880
we it's better for us to summarize this

1939
01:18:08,880 --> 01:18:10,840
the requirement of this the new

1940
01:18:10,840 --> 01:18:12,159
applications

1941
01:18:12,159 --> 01:18:15,280
for uh to classify these applications in

1942
01:18:15,280 --> 01:18:16,560
the different

1943
01:18:16,560 --> 01:18:20,400
group so this is my

1944
01:18:21,280 --> 01:18:24,239
requirement for this the application

1945
01:18:24,239 --> 01:18:25,199
area

1946
01:18:25,199 --> 01:18:27,839
okay

1947
01:18:30,800 --> 01:18:34,560
uh patrick in fact i i would like to

1948
01:18:34,560 --> 01:18:37,600
say that because the last pages just

1949
01:18:37,600 --> 01:18:40,480
introduce our progress i would like to

1950
01:18:40,480 --> 01:18:42,000
stay in the previous

1951
01:18:42,000 --> 01:18:44,480
page i would like to learn the opinion

1952
01:18:44,480 --> 01:18:45,600
of the experts

1953
01:18:45,600 --> 01:18:49,199
in the other area okay

1954
01:18:49,199 --> 01:18:50,640
i think that's great i will just remind

1955
01:18:50,640 --> 01:18:52,640
people that we're in we're in the art

1956
01:18:52,640 --> 01:18:54,000
area section of the agenda

1957
01:18:54,000 --> 01:18:56,239
so um our intention at least today is

1958
01:18:56,239 --> 01:18:59,040
not to dispatch any of this work

1959
01:18:59,040 --> 01:19:00,880
um and with that should we open for a

1960
01:19:00,880 --> 01:19:03,440
couple questions does that make sense

1961
01:19:03,440 --> 01:19:07,040
yeah i can see ted's in the queue

1962
01:19:07,120 --> 01:19:09,760
okay uh patrick before that one can you

1963
01:19:09,760 --> 01:19:12,880
go to the page return

1964
01:19:14,320 --> 01:19:17,520
okay thanks okay okay ted please go

1965
01:19:17,520 --> 01:19:18,800
ahead

1966
01:19:18,800 --> 01:19:20,560
hi john bin uh thanks for your

1967
01:19:20,560 --> 01:19:22,960
presentation today a couple of points

1968
01:19:22,960 --> 01:19:26,560
uh to clarify uh it sounds like

1969
01:19:26,560 --> 01:19:28,800
uh to kind of work backwards that you

1970
01:19:28,800 --> 01:19:30,400
don't currently have a specific

1971
01:19:30,400 --> 01:19:31,840
application that's asking for this

1972
01:19:31,840 --> 01:19:32,880
functionality

1973
01:19:32,880 --> 01:19:34,719
instead you're coming to this group to

1974
01:19:34,719 --> 01:19:36,480
ask if there are applications which

1975
01:19:36,480 --> 01:19:38,159
would use this functionality

1976
01:19:38,159 --> 01:19:40,799
is that correct

1977
01:19:41,199 --> 01:19:44,560
uh in fact for for me

1978
01:19:44,560 --> 01:19:48,400
i also i trusted to for the purpose you

1979
01:19:48,400 --> 01:19:50,800
just clarify this is the scope that's

1980
01:19:50,800 --> 01:19:51,840
this

1981
01:19:51,840 --> 01:19:55,360
we just used as the classification of

1982
01:19:55,360 --> 01:19:55,679
this

1983
01:19:55,679 --> 01:19:58,320
the applicant group and also this is

1984
01:19:58,320 --> 01:19:59,520
encapsulated

1985
01:19:59,520 --> 01:20:03,600
in the network nodes instead of

1986
01:20:03,600 --> 01:20:06,639
use that also to be encapsulated in the

1987
01:20:06,639 --> 01:20:08,880
host of the application

1988
01:20:08,880 --> 01:20:12,159
yeah uh the other point i wanted to

1989
01:20:12,159 --> 01:20:14,800
to make was uh what i saw as a bit of a

1990
01:20:14,800 --> 01:20:16,560
confusion between slide three and slide

1991
01:20:16,560 --> 01:20:17,440
four

1992
01:20:17,440 --> 01:20:20,239
uh so if you could go to slide three for

1993
01:20:20,239 --> 01:20:21,360
a moment

1994
01:20:21,360 --> 01:20:25,199
uh so in slide three uh

1995
01:20:25,199 --> 01:20:27,199
you you mentioned that this was

1996
01:20:27,199 --> 01:20:28,719
something which could

1997
01:20:28,719 --> 01:20:30,960
uh possibly lose actually slide two but

1998
01:20:30,960 --> 01:20:33,040
let's go on to slide four yeah user

1999
01:20:33,040 --> 01:20:33,360
group

2000
01:20:33,360 --> 01:20:34,719
application group and service level

2001
01:20:34,719 --> 01:20:37,679
requirements and yet on slide four

2002
01:20:37,679 --> 01:20:40,080
if we go on to that it seems like at

2003
01:20:40,080 --> 01:20:42,400
least one of the implementations of this

2004
01:20:42,400 --> 01:20:45,199
would be a network edge device that's

2005
01:20:45,199 --> 01:20:45,600
doing

2006
01:20:45,600 --> 01:20:49,120
inspection in that case i was

2007
01:20:49,120 --> 01:20:51,199
curious to know whether it in fact is a

2008
01:20:51,199 --> 01:20:53,040
tuple that you're looking for of both

2009
01:20:53,040 --> 01:20:53,600
the user

2010
01:20:53,600 --> 01:20:55,040
and the application that the user is

2011
01:20:55,040 --> 01:20:57,440
looking for or whether they're groupings

2012
01:20:57,440 --> 01:20:59,440
that are user specific

2013
01:20:59,440 --> 01:21:01,840
or groupings which are application

2014
01:21:01,840 --> 01:21:03,920
specific but do not care what the user

2015
01:21:03,920 --> 01:21:06,080
is

2016
01:21:07,440 --> 01:21:11,520
uh okay this is a good question

2017
01:21:11,520 --> 01:21:15,520
ted so here this in fact for earth

2018
01:21:15,520 --> 01:21:18,480
for the carrier specific this is the

2019
01:21:18,480 --> 01:21:19,360
domain

2020
01:21:19,360 --> 01:21:22,320
uh the first one i think that we can

2021
01:21:22,320 --> 01:21:24,320
according to this the

2022
01:21:24,320 --> 01:21:28,080
five tube uh information in the packet

2023
01:21:28,080 --> 01:21:30,480
for the application group or the user

2024
01:21:30,480 --> 01:21:31,520
group

2025
01:21:31,520 --> 01:21:33,840
so this user just use the one this is

2026
01:21:33,840 --> 01:21:35,600
the possible method

2027
01:21:35,600 --> 01:21:37,679
and the second one because you know that

2028
01:21:37,679 --> 01:21:38,639
specific

2029
01:21:38,639 --> 01:21:42,080
user is expect especially

2030
01:21:42,080 --> 01:21:45,520
for the fixed accessed user or the

2031
01:21:45,520 --> 01:21:46,239
wireless

2032
01:21:46,239 --> 01:21:48,800
access user because it's always the

2033
01:21:48,800 --> 01:21:49,360
first

2034
01:21:49,360 --> 01:21:52,880
to communicate with the

2035
01:21:52,880 --> 01:21:55,360
communicator with the network for the

2036
01:21:55,360 --> 01:21:56,320
authority

2037
01:21:56,320 --> 01:21:59,600
uh oh sorry the vision

2038
01:21:59,600 --> 01:22:02,719
for this the user so that's the way it

2039
01:22:02,719 --> 01:22:07,280
asks for the authority authorization

2040
01:22:07,280 --> 01:22:09,600
so that the user can get this the user

2041
01:22:09,600 --> 01:22:10,560
id

2042
01:22:10,560 --> 01:22:14,400
so that's in the uh fixed access the

2043
01:22:14,400 --> 01:22:17,600
network or in the wireless network

2044
01:22:17,600 --> 01:22:20,960
you can use this the vla id to identify

2045
01:22:20,960 --> 01:22:21,360
this

2046
01:22:21,360 --> 01:22:24,719
user or for this the course this is the

2047
01:22:24,719 --> 01:22:25,840
surface

2048
01:22:25,840 --> 01:22:29,280
uh group such as this the multicast

2049
01:22:29,280 --> 01:22:32,560
or this is the unicost so that's a

2050
01:22:32,560 --> 01:22:35,679
uh in order for the final granularity so

2051
01:22:35,679 --> 01:22:36,080
this

2052
01:22:36,080 --> 01:22:38,159
is combined this is the five tube

2053
01:22:38,159 --> 01:22:39,199
information

2054
01:22:39,199 --> 01:22:42,159
and also this is the other this is the

2055
01:22:42,159 --> 01:22:43,600
user or this is the

2056
01:22:43,600 --> 01:22:46,239
service identification information so

2057
01:22:46,239 --> 01:22:47,600
that we can

2058
01:22:47,600 --> 01:22:51,199
create this the

2059
01:22:51,199 --> 01:22:53,600
user group information all this is the

2060
01:22:53,600 --> 01:22:54,639
application group

2061
01:22:54,639 --> 01:22:57,920
information uh that would be more

2062
01:22:57,920 --> 01:23:01,440
fine granularity than the five tube

2063
01:23:01,440 --> 01:23:05,679
of this package information yeah

2064
01:23:05,679 --> 01:23:08,000
thank you hi we're gonna have to cut the

2065
01:23:08,000 --> 01:23:09,280
discussion here and

2066
01:23:09,280 --> 01:23:11,280
we've got a very full agenda so thanks

2067
01:23:11,280 --> 01:23:13,440
for the presentation and we'll just

2068
01:23:13,440 --> 01:23:15,679
um take discussion to the list i see a

2069
01:23:15,679 --> 01:23:17,120
lot of questions in

2070
01:23:17,120 --> 01:23:19,760
jabber as well still to go through so um

2071
01:23:19,760 --> 01:23:20,880
thank you

2072
01:23:20,880 --> 01:23:23,199
okay so robin you're up next to speak

2073
01:23:23,199 --> 01:23:25,679
about q log

2074
01:23:25,679 --> 01:23:27,760
yeah all right thank you for giving me

2075
01:23:27,760 --> 01:23:29,120
some time to talk about q log

2076
01:23:29,120 --> 01:23:31,679
next slide

2077
01:23:32,400 --> 01:23:34,239
uh which stands for quick logging and

2078
01:23:34,239 --> 01:23:35,600
this project started about

2079
01:23:35,600 --> 01:23:38,560
two years ago and we noticed that uh new

2080
01:23:38,560 --> 01:23:40,880
quick and hp3 protocols were becoming a

2081
01:23:40,880 --> 01:23:41,360
bit

2082
01:23:41,360 --> 01:23:43,440
complex and we would need some advanced

2083
01:23:43,440 --> 01:23:46,000
tooling to debug and analyze them

2084
01:23:46,000 --> 01:23:49,199
what you would normally do next slide

2085
01:23:49,199 --> 01:23:51,600
uh for something like tcp is you would

2086
01:23:51,600 --> 01:23:52,800
do a packet capture

2087
01:23:52,800 --> 01:23:54,480
somewhere in the network and they would

2088
01:23:54,480 --> 01:23:56,800
use tools like wireshark to analyze

2089
01:23:56,800 --> 01:23:58,239
what's going on

2090
01:23:58,239 --> 01:23:59,760
for quick you can of course still do

2091
01:23:59,760 --> 01:24:01,679
that but it's more difficult

2092
01:24:01,679 --> 01:24:05,600
next slide because quick encrypts almost

2093
01:24:05,600 --> 01:24:07,520
all of its transport level metadata as

2094
01:24:07,520 --> 01:24:08,159
well

2095
01:24:08,159 --> 01:24:09,760
so to do this you would have to have an

2096
01:24:09,760 --> 01:24:12,239
entire packet capture

2097
01:24:12,239 --> 01:24:14,960
with the backup payload also there and

2098
01:24:14,960 --> 01:24:17,280
also the tls decryption secrets

2099
01:24:17,280 --> 01:24:19,520
which can uh lead you into some trouble

2100
01:24:19,520 --> 01:24:20,960
in large scale deployments through

2101
01:24:20,960 --> 01:24:22,159
scalability and

2102
01:24:22,159 --> 01:24:23,760
privacy this is also something that

2103
01:24:23,760 --> 01:24:25,520
we've already seen for encrypted

2104
01:24:25,520 --> 01:24:27,760
application layer protocols of course

2105
01:24:27,760 --> 01:24:29,199
which are also difficult to analyze

2106
01:24:29,199 --> 01:24:30,880
using just wireshark

2107
01:24:30,880 --> 01:24:32,960
there's a second problem here also long

2108
01:24:32,960 --> 01:24:36,159
running which is next slide

2109
01:24:36,639 --> 01:24:38,400
which is that not all aspects of the

2110
01:24:38,400 --> 01:24:39,760
protocol are of course sent over the

2111
01:24:39,760 --> 01:24:40,159
wire

2112
01:24:40,159 --> 01:24:41,920
the typical thing in quick was the

2113
01:24:41,920 --> 01:24:43,679
congest control information

2114
01:24:43,679 --> 01:24:46,000
which is of course not synced and so the

2115
01:24:46,000 --> 01:24:48,159
approach that we proposed for a quick

2116
01:24:48,159 --> 01:24:51,679
next slide was to instead of doing

2117
01:24:51,679 --> 01:24:52,880
things at network level

2118
01:24:52,880 --> 01:24:55,520
why not log at the endpoints directly

2119
01:24:55,520 --> 01:24:56,480
from inside

2120
01:24:56,480 --> 01:24:58,800
of the implementations where you have

2121
01:24:58,800 --> 01:25:00,800
much more control over what you log so

2122
01:25:00,800 --> 01:25:02,480
much more privacy sensitive

2123
01:25:02,480 --> 01:25:05,120
but you can also log a lot more internal

2124
01:25:05,120 --> 01:25:06,000
information

2125
01:25:06,000 --> 01:25:08,960
as well this is of course not a radical

2126
01:25:08,960 --> 01:25:09,679
new idea

2127
01:25:09,679 --> 01:25:12,159
most implementations have some form of

2128
01:25:12,159 --> 01:25:14,400
debug logging or output available

2129
01:25:14,400 --> 01:25:16,560
but the idea for qlog was to have a

2130
01:25:16,560 --> 01:25:17,760
single format

2131
01:25:17,760 --> 01:25:20,159
single schema that all the different

2132
01:25:20,159 --> 01:25:22,560
implementations would all follow

2133
01:25:22,560 --> 01:25:24,560
which would make it much easier to write

2134
01:25:24,560 --> 01:25:27,040
reusable tooling and to share data

2135
01:25:27,040 --> 01:25:29,600
and so qlog is really quite simple next

2136
01:25:29,600 --> 01:25:31,760
slide

2137
01:25:31,760 --> 01:25:33,360
at least for now we're just using a very

2138
01:25:33,360 --> 01:25:36,639
straightforward json serialization

2139
01:25:36,639 --> 01:25:38,719
defining for example if you want to log

2140
01:25:38,719 --> 01:25:40,320
if you receive a packet which

2141
01:25:40,320 --> 01:25:41,520
fields you should log in where they

2142
01:25:41,520 --> 01:25:43,760
should be very similar for

2143
01:25:43,760 --> 01:25:45,440
for example the congestion control

2144
01:25:45,440 --> 01:25:47,120
related events as you can see on the

2145
01:25:47,120 --> 01:25:48,480
right

2146
01:25:48,480 --> 01:25:51,040
using nqlog as an input for tools next

2147
01:25:51,040 --> 01:25:53,440
slide

2148
01:25:53,440 --> 01:25:55,760
we've also built quite a few quicken hp3

2149
01:25:55,760 --> 01:25:57,679
tools and what is called the qvis tool

2150
01:25:57,679 --> 01:25:58,560
suite

2151
01:25:58,560 --> 01:26:00,719
giving you things like this the uh

2152
01:26:00,719 --> 01:26:02,320
sequence diagram showing

2153
01:26:02,320 --> 01:26:04,080
the packets going over the wire and also

2154
01:26:04,080 --> 01:26:06,159
how they change the internal endpoint

2155
01:26:06,159 --> 01:26:07,120
state

2156
01:26:07,120 --> 01:26:11,040
and next slide also of course things

2157
01:26:11,040 --> 01:26:12,880
like this where we can

2158
01:26:12,880 --> 01:26:14,800
analyze the congested control behavior

2159
01:26:14,800 --> 01:26:16,560
in quick implementations

2160
01:26:16,560 --> 01:26:20,639
next slide this approach of having both

2161
01:26:20,639 --> 01:26:22,000
the format and some

2162
01:26:22,000 --> 01:26:24,320
reusable tooling has turned out quite

2163
01:26:24,320 --> 01:26:26,239
interesting for quick

2164
01:26:26,239 --> 01:26:27,679
leading to the majority of the

2165
01:26:27,679 --> 01:26:29,920
implementation supporting the format

2166
01:26:29,920 --> 01:26:32,400
one of the main ones is facebook we're

2167
01:26:32,400 --> 01:26:34,400
actually deploying this

2168
01:26:34,400 --> 01:26:37,920
at scale to analyze their hb3 um

2169
01:26:37,920 --> 01:26:39,920
deployment and that seems to be working

2170
01:26:39,920 --> 01:26:41,280
quite well

2171
01:26:41,280 --> 01:26:43,440
um and so because of this the fact that

2172
01:26:43,440 --> 01:26:45,600
it seems to be um

2173
01:26:45,600 --> 01:26:48,400
worth the effort um this has so far been

2174
01:26:48,400 --> 01:26:50,960
two individual drafts

2175
01:26:50,960 --> 01:26:54,159
next slide we are now looking to adopt

2176
01:26:54,159 --> 01:26:56,159
the dose within the quick working group

2177
01:26:56,159 --> 01:26:58,960
as part of the upcoming recharger over

2178
01:26:58,960 --> 01:27:00,239
the coming months

2179
01:27:00,239 --> 01:27:01,760
one of the main goals there is of course

2180
01:27:01,760 --> 01:27:03,440
to finalize all of this for

2181
01:27:03,440 --> 01:27:06,800
quicken http 3. but the secondary goal

2182
01:27:06,800 --> 01:27:08,560
is to look if we can actually

2183
01:27:08,560 --> 01:27:11,760
generalize this to more protocols of

2184
01:27:11,760 --> 01:27:12,080
course

2185
01:27:12,080 --> 01:27:13,600
that is that is one of the main reasons

2186
01:27:13,600 --> 01:27:15,120
that i'm here today

2187
01:27:15,120 --> 01:27:16,800
to make sure more people are aware of

2188
01:27:16,800 --> 01:27:18,639
that because it might impact some of you

2189
01:27:18,639 --> 01:27:20,239
down the line

2190
01:27:20,239 --> 01:27:22,960
because the whole idea of q log is again

2191
01:27:22,960 --> 01:27:24,639
quite simple it's just logging things in

2192
01:27:24,639 --> 01:27:25,760
a standard way

2193
01:27:25,760 --> 01:27:28,159
inside of the implementations directly

2194
01:27:28,159 --> 01:27:29,760
which can of course be useful for other

2195
01:27:29,760 --> 01:27:30,480
things

2196
01:27:30,480 --> 01:27:32,639
i've listed here a couple of projects

2197
01:27:32,639 --> 01:27:34,480
where people are concretely working on

2198
01:27:34,480 --> 01:27:36,159
them or at least thinking about using a

2199
01:27:36,159 --> 01:27:37,520
similar approach

2200
01:27:37,520 --> 01:27:38,880
and i wanted to highlight that it's not

2201
01:27:38,880 --> 01:27:40,800
just even the protocols themselves but

2202
01:27:40,800 --> 01:27:41,840
also

2203
01:27:41,840 --> 01:27:45,280
some higher level logic as well there is

2204
01:27:45,280 --> 01:27:47,280
one project looking at

2205
01:27:47,280 --> 01:27:49,760
adding for example adaptive bitrate

2206
01:27:49,760 --> 01:27:50,719
algorithm

2207
01:27:50,719 --> 01:27:52,560
decisions into the same logs as where

2208
01:27:52,560 --> 01:27:53,920
you have the quick layer

2209
01:27:53,920 --> 01:27:56,000
just control information hopefully

2210
01:27:56,000 --> 01:27:57,360
making it easier to

2211
01:27:57,360 --> 01:28:00,560
correlate and debug these complex

2212
01:28:00,560 --> 01:28:02,320
interactions

2213
01:28:02,320 --> 01:28:05,120
this goal of expanding q log is actually

2214
01:28:05,120 --> 01:28:06,880
already a little bit in there

2215
01:28:06,880 --> 01:28:10,639
next slide as we'll see there are two

2216
01:28:10,639 --> 01:28:12,480
different drafts one deals with

2217
01:28:12,480 --> 01:28:15,520
the quicken http 3 event specifically

2218
01:28:15,520 --> 01:28:17,040
but the other one is called the main

2219
01:28:17,040 --> 01:28:18,800
schema and that kind of

2220
01:28:18,800 --> 01:28:20,800
includes all of the protocol agnostic

2221
01:28:20,800 --> 01:28:22,080
stuff um

2222
01:28:22,080 --> 01:28:24,400
that we might need and the hope is that

2223
01:28:24,400 --> 01:28:26,000
eventually this will turn into

2224
01:28:26,000 --> 01:28:28,159
let's say a framework or a set of

2225
01:28:28,159 --> 01:28:30,239
guidelines and best practices

2226
01:28:30,239 --> 01:28:32,639
that you can use to define new q log

2227
01:28:32,639 --> 01:28:35,760
schemas for different protocols

2228
01:28:35,760 --> 01:28:40,560
down the line next slide

2229
01:28:40,639 --> 01:28:42,800
of course doing that comes with plenty

2230
01:28:42,800 --> 01:28:44,480
of challenges

2231
01:28:44,480 --> 01:28:46,480
um it's not going to be as

2232
01:28:46,480 --> 01:28:47,520
straightforward as i

2233
01:28:47,520 --> 01:28:49,440
um as i would like and i wanted to

2234
01:28:49,440 --> 01:28:50,639
highlight three of these

2235
01:28:50,639 --> 01:28:52,239
the top three ones just to give you an

2236
01:28:52,239 --> 01:28:53,760
idea of the type of discussion that we

2237
01:28:53,760 --> 01:28:55,280
will probably have

2238
01:28:55,280 --> 01:28:58,800
next slide so the first one is what the

2239
01:28:58,800 --> 01:29:00,560
event definitions should actually look

2240
01:29:00,560 --> 01:29:01,600
like

2241
01:29:01,600 --> 01:29:03,120
a very straightforward thing to do is

2242
01:29:03,120 --> 01:29:05,679
just map the wire image

2243
01:29:05,679 --> 01:29:08,159
wire serialization as we see fit into

2244
01:29:08,159 --> 01:29:09,840
for example json which is what you see

2245
01:29:09,840 --> 01:29:10,800
here

2246
01:29:10,800 --> 01:29:11,840
for example here we have an

2247
01:29:11,840 --> 01:29:14,000
acknowledgement oh no sorry here we have

2248
01:29:14,000 --> 01:29:15,360
an acknowledgement frame on the left

2249
01:29:15,360 --> 01:29:15,840
that is

2250
01:29:15,840 --> 01:29:17,520
missing the acknowledgements for packet

2251
01:29:17,520 --> 01:29:19,760
number 16.

2252
01:29:19,760 --> 01:29:22,159
which doesn't immediately mean that the

2253
01:29:22,159 --> 01:29:23,360
implementation also

2254
01:29:23,360 --> 01:29:26,080
marks packet number 16 as lost this

2255
01:29:26,080 --> 01:29:27,520
typically takes a few negative

2256
01:29:27,520 --> 01:29:28,800
acknowledgements

2257
01:29:28,800 --> 01:29:30,639
so what you need is what is now shown on

2258
01:29:30,639 --> 01:29:32,400
the right side is actually a second

2259
01:29:32,400 --> 01:29:34,960
type of event actually reflecting what

2260
01:29:34,960 --> 01:29:37,280
has happened at the implementation

2261
01:29:37,280 --> 01:29:41,440
itself to cover all of these use cases

2262
01:29:41,440 --> 01:29:43,120
you can make arguments for either or of

2263
01:29:43,120 --> 01:29:45,440
these types of events but in reality you

2264
01:29:45,440 --> 01:29:46,880
would need both

2265
01:29:46,880 --> 01:29:48,560
so that's a lot of work defining all of

2266
01:29:48,560 --> 01:29:50,719
those and especially for the people

2267
01:29:50,719 --> 01:29:51,199
making

2268
01:29:51,199 --> 01:29:53,040
tools because now you certainly have

2269
01:29:53,040 --> 01:29:55,199
different event types having overlapping

2270
01:29:55,199 --> 01:29:55,840
data

2271
01:29:55,840 --> 01:29:57,840
what if they contradict which one takes

2272
01:29:57,840 --> 01:30:00,080
precedence and so on and so forth

2273
01:30:00,080 --> 01:30:02,159
and that's even if we just stay within a

2274
01:30:02,159 --> 01:30:03,440
single protocol

2275
01:30:03,440 --> 01:30:07,360
because if we go to the next slide

2276
01:30:07,360 --> 01:30:10,400
tcp for example of course also has the

2277
01:30:10,400 --> 01:30:12,320
concept of selective acknowledgements

2278
01:30:12,320 --> 01:30:14,000
but there they are in the tcp packet

2279
01:30:14,000 --> 01:30:16,000
header inside of the options

2280
01:30:16,000 --> 01:30:18,400
so it's the exact same concept exact

2281
01:30:18,400 --> 01:30:20,480
same data but reflected in a different

2282
01:30:20,480 --> 01:30:21,760
form of schema

2283
01:30:21,760 --> 01:30:23,920
and so making tools that for example

2284
01:30:23,920 --> 01:30:25,920
work across tcp and quick and other

2285
01:30:25,920 --> 01:30:27,040
protocols

2286
01:30:27,040 --> 01:30:28,800
becomes more difficult if we would take

2287
01:30:28,800 --> 01:30:31,360
a naive approach

2288
01:30:31,360 --> 01:30:35,199
second challenge in the next slide

2289
01:30:35,199 --> 01:30:37,520
is the concrete serialization format

2290
01:30:37,520 --> 01:30:39,360
we've been using json mainly because

2291
01:30:39,360 --> 01:30:41,679
it's flexible and it's well supported

2292
01:30:41,679 --> 01:30:44,719
but it's not the most performant format

2293
01:30:44,719 --> 01:30:47,120
across the board of course and so we've

2294
01:30:47,120 --> 01:30:48,080
we've tried

2295
01:30:48,080 --> 01:30:50,880
to make the cuboid drafts serialization

2296
01:30:50,880 --> 01:30:52,400
format agnostic

2297
01:30:52,400 --> 01:30:54,239
by having like a custom data type

2298
01:30:54,239 --> 01:30:56,080
definition language for the events

2299
01:30:56,080 --> 01:30:57,520
which is what you can see on the right

2300
01:30:57,520 --> 01:30:59,199
side there

2301
01:30:59,199 --> 01:31:01,679
it's something very loose that is not

2302
01:31:01,679 --> 01:31:03,440
well defined and so we would prefer to

2303
01:31:03,440 --> 01:31:04,480
switch this to

2304
01:31:04,480 --> 01:31:07,760
something more well defined which i know

2305
01:31:07,760 --> 01:31:09,520
is present at the ietf i just don't have

2306
01:31:09,520 --> 01:31:11,199
enough experience choosing the correct

2307
01:31:11,199 --> 01:31:12,080
one

2308
01:31:12,080 --> 01:31:13,679
in hopes that we can automatically

2309
01:31:13,679 --> 01:31:16,000
generate serializers and these

2310
01:31:16,000 --> 01:31:18,080
serializers for these formats

2311
01:31:18,080 --> 01:31:20,719
in different programming languages and

2312
01:31:20,719 --> 01:31:22,159
contexts

2313
01:31:22,159 --> 01:31:23,600
one of the important things there i

2314
01:31:23,600 --> 01:31:25,600
think driving these decisions would be

2315
01:31:25,600 --> 01:31:27,440
how people will actually plan to use

2316
01:31:27,440 --> 01:31:29,360
this type of log

2317
01:31:29,360 --> 01:31:30,880
for example file based or streaming

2318
01:31:30,880 --> 01:31:32,480
based on how they will ingest this

2319
01:31:32,480 --> 01:31:34,320
information

2320
01:31:34,320 --> 01:31:38,000
the next slide finally a very big

2321
01:31:38,000 --> 01:31:40,000
challenge i think is privacy

2322
01:31:40,000 --> 01:31:41,600
as we said conceptually of course it's

2323
01:31:41,600 --> 01:31:43,840
very easy to leave out privacy sensitive

2324
01:31:43,840 --> 01:31:44,639
information

2325
01:31:44,639 --> 01:31:47,679
at the endpoints however

2326
01:31:47,679 --> 01:31:49,520
in some debugging use cases you of

2327
01:31:49,520 --> 01:31:51,679
course still need those ip addresses or

2328
01:31:51,679 --> 01:31:52,800
those urls

2329
01:31:52,800 --> 01:31:54,639
that you're going to be logging so the

2330
01:31:54,639 --> 01:31:56,960
current approach proposed approach is to

2331
01:31:56,960 --> 01:31:59,120
use different sanitization levels

2332
01:31:59,120 --> 01:32:01,520
going from relatively loose to very

2333
01:32:01,520 --> 01:32:02,480
strict

2334
01:32:02,480 --> 01:32:04,639
um defining which fields should you

2335
01:32:04,639 --> 01:32:06,000
can't include or how they should be

2336
01:32:06,000 --> 01:32:07,199
encoded or

2337
01:32:07,199 --> 01:32:09,280
or or hashed that kind of stuff they

2338
01:32:09,280 --> 01:32:11,360
have very concrete guidelines there

2339
01:32:11,360 --> 01:32:13,760
and my hopes at least is that at least

2340
01:32:13,760 --> 01:32:15,840
the very sanitized versions might then

2341
01:32:15,840 --> 01:32:19,280
lead to larger open source data sets for

2342
01:32:19,280 --> 01:32:20,960
example for research

2343
01:32:20,960 --> 01:32:23,199
or allowing for example your customers

2344
01:32:23,199 --> 01:32:24,239
to download

2345
01:32:24,239 --> 01:32:27,199
q logs from individual connections to

2346
01:32:27,199 --> 01:32:28,880
for example help debug

2347
01:32:28,880 --> 01:32:31,040
server-side problems there whether or

2348
01:32:31,040 --> 01:32:32,239
not that's actually a good idea in

2349
01:32:32,239 --> 01:32:34,560
practice i'm going to leave on the table

2350
01:32:34,560 --> 01:32:36,800
but it's one of those potential use

2351
01:32:36,800 --> 01:32:38,480
cases that we might think of

2352
01:32:38,480 --> 01:32:42,959
fusing q log for so the final slide

2353
01:32:43,520 --> 01:32:46,000
in summary what i hope and think will

2354
01:32:46,000 --> 01:32:47,840
eventually maybe happen is that we would

2355
01:32:47,840 --> 01:32:48,320
have a

2356
01:32:48,320 --> 01:32:51,520
separate q log working group

2357
01:32:51,520 --> 01:32:54,080
managing these main guidelines if it

2358
01:32:54,080 --> 01:32:55,760
turns out that this is indeed something

2359
01:32:55,760 --> 01:32:56,800
that is feasible

2360
01:32:56,800 --> 01:32:58,239
you know because we don't even know if

2361
01:32:58,239 --> 01:33:00,000
it's if it's that good of an idea to do

2362
01:33:00,000 --> 01:33:01,679
this for all the protocols at the same

2363
01:33:01,679 --> 01:33:02,239
time

2364
01:33:02,239 --> 01:33:04,159
or which additional challenges we might

2365
01:33:04,159 --> 01:33:05,440
face

2366
01:33:05,440 --> 01:33:07,199
and that that new working group that

2367
01:33:07,199 --> 01:33:10,080
will interface with other working groups

2368
01:33:10,080 --> 01:33:11,040
to define

2369
01:33:11,040 --> 01:33:12,639
uh particular schemas for different

2370
01:33:12,639 --> 01:33:15,120
protocols but as for in the future

2371
01:33:15,120 --> 01:33:18,080
for now for practical reasons mainly we

2372
01:33:18,080 --> 01:33:19,840
are keeping all of this within the quick

2373
01:33:19,840 --> 01:33:21,520
working group

2374
01:33:21,520 --> 01:33:23,280
uh mainly focusing on quickening street

2375
01:33:23,280 --> 01:33:25,760
but still discussing these type of

2376
01:33:25,760 --> 01:33:27,760
aspects hoping to uh

2377
01:33:27,760 --> 01:33:30,480
to prepare something that makes q log

2378
01:33:30,480 --> 01:33:31,440
usable uh

2379
01:33:31,440 --> 01:33:33,679
for for different things down the line

2380
01:33:33,679 --> 01:33:35,360
so this work will start happening in the

2381
01:33:35,360 --> 01:33:36,960
next couple of months

2382
01:33:36,960 --> 01:33:38,480
if you really can't wait you can already

2383
01:33:38,480 --> 01:33:40,480
join us on github

2384
01:33:40,480 --> 01:33:42,320
and of course i'm very happy to answer

2385
01:33:42,320 --> 01:33:44,159
any questions or listen to feedback you

2386
01:33:44,159 --> 01:33:45,520
have now as well

2387
01:33:45,520 --> 01:33:48,639
thank you thank you robin for the

2388
01:33:48,639 --> 01:33:49,520
presentation

2389
01:33:49,520 --> 01:33:51,760
um yeah let's open up the queue if

2390
01:33:51,760 --> 01:33:53,760
anyone's got comments or feedback or

2391
01:33:53,760 --> 01:33:56,080
questions i can see um jabba's quite

2392
01:33:56,080 --> 01:33:57,760
lively so you've certainly got

2393
01:33:57,760 --> 01:34:01,760
a group of folks interested um

2394
01:34:01,760 --> 01:34:05,840
philip palin off you go

2395
01:34:11,199 --> 01:34:13,520
um i think you're muted you have to

2396
01:34:13,520 --> 01:34:14,639
unmute both

2397
01:34:14,639 --> 01:34:18,400
yes okay yeah um i was just gonna put

2398
01:34:18,400 --> 01:34:19,840
down a market if you do

2399
01:34:19,840 --> 01:34:22,960
start forming a working group um

2400
01:34:22,960 --> 01:34:26,159
i want to encrypt my log files i want to

2401
01:34:26,159 --> 01:34:27,840
be able to have a standard format for

2402
01:34:27,840 --> 01:34:29,280
doing that

2403
01:34:29,280 --> 01:34:32,800
um you know we we've got

2404
01:34:32,800 --> 01:34:34,719
the message that all data should be

2405
01:34:34,719 --> 01:34:36,400
encrypted on the

2406
01:34:36,400 --> 01:34:38,800
wire it's about time we started

2407
01:34:38,800 --> 01:34:41,360
encrypting the data at rest as well

2408
01:34:41,360 --> 01:34:44,480
and the log files are really

2409
01:34:44,480 --> 01:34:47,760
uh sensitive information uh

2410
01:34:47,760 --> 01:34:51,840
and it should be encrypted gdpr etc etc

2411
01:34:51,840 --> 01:34:54,000
so just putting down a marker that i am

2412
01:34:54,000 --> 01:34:56,159
working on doing that at the moment

2413
01:34:56,159 --> 01:35:00,080
i'm using qlog as the schema for

2414
01:35:00,080 --> 01:35:03,760
the payload of my my packets but

2415
01:35:03,760 --> 01:35:05,440
i'm looking at encrypting the whole

2416
01:35:05,440 --> 01:35:07,600
thing

2417
01:35:07,600 --> 01:35:09,280
i agree that would be useful here thank

2418
01:35:09,280 --> 01:35:11,199
you oh and it's in

2419
01:35:11,199 --> 01:35:14,560
incremental encryption so that when you

2420
01:35:14,560 --> 01:35:16,560
you don't want to do a key exchange on

2421
01:35:16,560 --> 01:35:21,199
every log entry that would be silly

2422
01:35:24,000 --> 01:35:29,840
um mark nottingham join the key

2423
01:35:30,719 --> 01:35:34,480
hey um so

2424
01:35:34,480 --> 01:35:37,679
i i'm not against this work in any way i

2425
01:35:37,679 --> 01:35:38,560
think it's great

2426
01:35:38,560 --> 01:35:40,800
and it's necessary that this happened

2427
01:35:40,800 --> 01:35:42,320
i'm just wondering

2428
01:35:42,320 --> 01:35:45,040
what it becoming a standard brings to

2429
01:35:45,040 --> 01:35:46,400
the table

2430
01:35:46,400 --> 01:35:50,000
because you know in in many other places

2431
01:35:50,000 --> 01:35:51,600
things like this this kind of

2432
01:35:51,600 --> 01:35:53,360
operational infrastructure and logging

2433
01:35:53,360 --> 01:35:54,719
formats are done

2434
01:35:54,719 --> 01:35:58,159
in ad hoc or open source fashion um

2435
01:35:58,159 --> 01:36:00,639
and and indeed i think from your slides

2436
01:36:00,639 --> 01:36:02,080
you have a pretty strong market share

2437
01:36:02,080 --> 01:36:03,440
already just from

2438
01:36:03,440 --> 01:36:05,199
you know coordination in that kind of

2439
01:36:05,199 --> 01:36:07,280
fashion so it's not that i'm saying this

2440
01:36:07,280 --> 01:36:08,880
should not be a standard but i'm just

2441
01:36:08,880 --> 01:36:10,880
wondering what it brings to the table

2442
01:36:10,880 --> 01:36:13,920
and i made the remark in in jabber

2443
01:36:13,920 --> 01:36:16,960
you know we don't standardize apis

2444
01:36:16,960 --> 01:36:20,080
uh in the ietf for lots of different

2445
01:36:20,080 --> 01:36:23,520
reasons i wonder if if this has some of

2446
01:36:23,520 --> 01:36:25,520
the same properties as an api in terms

2447
01:36:25,520 --> 01:36:26,239
of

2448
01:36:26,239 --> 01:36:28,080
defining latent behaviors of

2449
01:36:28,080 --> 01:36:29,679
implementations

2450
01:36:29,679 --> 01:36:32,639
that we wouldn't want to standardize um

2451
01:36:32,639 --> 01:36:32,960
just

2452
01:36:32,960 --> 01:36:35,520
kind of an open thought there but uh so

2453
01:36:35,520 --> 01:36:37,040
so that's i

2454
01:36:37,040 --> 01:36:39,040
again i i'm not saying don't do this

2455
01:36:39,040 --> 01:36:40,320
just i wonder

2456
01:36:40,320 --> 01:36:42,960
why we're here

2457
01:36:44,639 --> 01:36:47,199
okay it's fair enough um question has

2458
01:36:47,199 --> 01:36:48,800
been asked several times and i'm also

2459
01:36:48,800 --> 01:36:50,000
not sure if this

2460
01:36:50,000 --> 01:36:52,080
should be done myself i just look at

2461
01:36:52,080 --> 01:36:55,040
things like ipfix or netflow and

2462
01:36:55,040 --> 01:36:56,960
see some similarities and see that that

2463
01:36:56,960 --> 01:36:58,239
work has found

2464
01:36:58,239 --> 01:37:01,119
quite a bit of work in the ietf so maybe

2465
01:37:01,119 --> 01:37:06,960
this this could fit as well

2466
01:37:06,960 --> 01:37:10,239
thank you ben schwartz

2467
01:37:11,199 --> 01:37:15,600
hi uh i yeah i think that

2468
01:37:15,600 --> 01:37:16,960
i feel like we've sort of lost a

2469
01:37:16,960 --> 01:37:18,719
tradition here like once upon a time

2470
01:37:18,719 --> 01:37:21,760
the ietf used to standardize

2471
01:37:21,760 --> 01:37:25,199
more file formats in my somewhat

2472
01:37:25,199 --> 01:37:27,280
educated opinion it seems like we've

2473
01:37:27,280 --> 01:37:29,280
we've gotten out of the habit

2474
01:37:29,280 --> 01:37:33,920
but i do think that there's value there

2475
01:37:33,920 --> 01:37:38,320
and um to to mark's point

2476
01:37:38,320 --> 01:37:40,560
i think the one really important thing

2477
01:37:40,560 --> 01:37:41,440
will be

2478
01:37:41,440 --> 01:37:44,560
to figure out where the

2479
01:37:44,560 --> 01:37:46,480
edges of your your standardization

2480
01:37:46,480 --> 01:37:48,239
domain are

2481
01:37:48,239 --> 01:37:51,600
and and make space for

2482
01:37:51,600 --> 01:37:54,880
um for non-standard information to be

2483
01:37:54,880 --> 01:37:58,639
mixed into this kind of log

2484
01:37:59,920 --> 01:38:01,199
that's that's actually one of the main

2485
01:38:01,199 --> 01:38:03,119
reasons we're using json

2486
01:38:03,119 --> 01:38:05,280
right now because it's very easy to add

2487
01:38:05,280 --> 01:38:07,440
implementation or deployment specific

2488
01:38:07,440 --> 01:38:09,520
events which is also something that has

2489
01:38:09,520 --> 01:38:10,880
happened a lot

2490
01:38:10,880 --> 01:38:13,440
in practice

2491
01:38:15,679 --> 01:38:18,960
thank you dkg

2492
01:38:20,960 --> 01:38:22,560
um i'm gonna try this again i don't know

2493
01:38:22,560 --> 01:38:25,280
if my audio is working

2494
01:38:25,280 --> 01:38:28,320
great thanks so

2495
01:38:28,320 --> 01:38:30,320
um i think there is value in

2496
01:38:30,320 --> 01:38:31,360
standardizing this

2497
01:38:31,360 --> 01:38:33,040
uh i think it's actually a mistake to

2498
01:38:33,040 --> 01:38:34,880
think that the ietf doesn't standardize

2499
01:38:34,880 --> 01:38:36,880
apis we have standardized apis in the

2500
01:38:36,880 --> 01:38:37,600
past

2501
01:38:37,600 --> 01:38:39,840
and file formats so i agree with ben

2502
01:38:39,840 --> 01:38:40,800
about that

2503
01:38:40,800 --> 01:38:43,119
i think part of the value here um

2504
01:38:43,119 --> 01:38:45,119
there's obvious interoperability value

2505
01:38:45,119 --> 01:38:46,719
right and that it's possible to debug

2506
01:38:46,719 --> 01:38:48,480
implementations and figure out

2507
01:38:48,480 --> 01:38:50,000
when there are problems what's going on

2508
01:38:50,000 --> 01:38:51,760
in them and that that's a that's a big

2509
01:38:51,760 --> 01:38:52,400
gain

2510
01:38:52,400 --> 01:38:54,080
um the second reason that it's good to

2511
01:38:54,080 --> 01:38:55,440
standardize this sort of stuff

2512
01:38:55,440 --> 01:38:58,480
is um the standards the standardization

2513
01:38:58,480 --> 01:38:59,920
process is a place for

2514
01:38:59,920 --> 01:39:02,880
implementers to think clearly about the

2515
01:39:02,880 --> 01:39:04,480
impact of some of these things

2516
01:39:04,480 --> 01:39:07,040
right including the privacy concerns

2517
01:39:07,040 --> 01:39:08,080
that were mentioned earlier in the

2518
01:39:08,080 --> 01:39:09,199
presentation

2519
01:39:09,199 --> 01:39:11,280
you know identifying hey you know these

2520
01:39:11,280 --> 01:39:13,440
fields are particularly sensitive

2521
01:39:13,440 --> 01:39:15,520
um if you're going to log this stuff you

2522
01:39:15,520 --> 01:39:17,360
know we might recommend

2523
01:39:17,360 --> 01:39:19,360
um you know data retention or

2524
01:39:19,360 --> 01:39:20,560
destruction policies

2525
01:39:20,560 --> 01:39:22,800
for data that is at this particular

2526
01:39:22,800 --> 01:39:24,320
level of sensitivity

2527
01:39:24,320 --> 01:39:27,280
um or um you know we you know we

2528
01:39:27,280 --> 01:39:28,639
recommend that you don't log the stuff

2529
01:39:28,639 --> 01:39:29,119
at all

2530
01:39:29,119 --> 01:39:31,119
unless you happen to have errors in this

2531
01:39:31,119 --> 01:39:32,639
particular domain

2532
01:39:32,639 --> 01:39:36,239
um you know i'm scared about the idea of

2533
01:39:36,239 --> 01:39:38,159
automatic retention of key log data in

2534
01:39:38,159 --> 01:39:39,679
the quantities of gigabytes and the way

2535
01:39:39,679 --> 01:39:40,480
that

2536
01:39:40,480 --> 01:39:42,159
one of the slides mentioned i don't want

2537
01:39:42,159 --> 01:39:44,719
to encourage that to happen

2538
01:39:44,719 --> 01:39:46,639
uh but i think if we don't actually talk

2539
01:39:46,639 --> 01:39:48,800
about the format specifically we can't

2540
01:39:48,800 --> 01:39:50,080
even have the conversation about what

2541
01:39:50,080 --> 01:39:52,080
our best practices here so

2542
01:39:52,080 --> 01:39:53,440
i think this is interesting it looks

2543
01:39:53,440 --> 01:39:56,080
like useful work

2544
01:39:59,600 --> 01:40:02,239
cool thank you for the comments um you

2545
01:40:02,239 --> 01:40:02,960
can see

2546
01:40:02,960 --> 01:40:04,480
a lot of chats sort of saying that this

2547
01:40:04,480 --> 01:40:06,239
is you know interesting work and that

2548
01:40:06,239 --> 01:40:07,840
the standardization of the log

2549
01:40:07,840 --> 01:40:10,800
seems seems like a good idea so um yeah

2550
01:40:10,800 --> 01:40:12,800
this is the kind of fyi let's continue

2551
01:40:12,800 --> 01:40:14,159
discussion and um

2552
01:40:14,159 --> 01:40:15,440
thank you so much robin for the

2553
01:40:15,440 --> 01:40:17,520
presentation you've provided a lot of

2554
01:40:17,520 --> 01:40:19,280
links for folks who are interested to to

2555
01:40:19,280 --> 01:40:21,199
go forward and get involved with it so

2556
01:40:21,199 --> 01:40:25,119
thank you very much thank you

2557
01:40:25,119 --> 01:40:27,920
cool so up next we have um james

2558
01:40:27,920 --> 01:40:29,040
presenting

2559
01:40:29,040 --> 01:40:33,679
his draft um take it away and i'll drive

2560
01:40:34,159 --> 01:40:38,400
uh good afternoon i hope i'm audible

2561
01:40:39,280 --> 01:40:42,320
yes yeah we can hear you cool uh uh

2562
01:40:42,320 --> 01:40:42,880
hello

2563
01:40:42,880 --> 01:40:45,679
so on the mailing list a couple of weeks

2564
01:40:45,679 --> 01:40:46,239
ago

2565
01:40:46,239 --> 01:40:49,119
i sort of put a call out to get some

2566
01:40:49,119 --> 01:40:50,080
attention on this

2567
01:40:50,080 --> 01:40:52,719
on a draft that i've been worked on all

2568
01:40:52,719 --> 01:40:54,239
the way back in singapore

2569
01:40:54,239 --> 01:40:56,480
uh and then sat on it for a very long

2570
01:40:56,480 --> 01:40:58,320
time due to procrastination and other

2571
01:40:58,320 --> 01:40:59,840
priorities

2572
01:40:59,840 --> 01:41:02,960
uh next slide please uh so

2573
01:41:02,960 --> 01:41:04,400
uh what what is the problem i'm trying

2574
01:41:04,400 --> 01:41:06,960
to solve well uh i use sdp

2575
01:41:06,960 --> 01:41:10,239
a lot for signaling uh various media

2576
01:41:10,239 --> 01:41:13,440
media workflows inside of and

2577
01:41:13,440 --> 01:41:16,239
and outside of uh the context that i

2578
01:41:16,239 --> 01:41:18,000
think a lot of other people use it in

2579
01:41:18,000 --> 01:41:20,400
terms of uh inside of sip and all the

2580
01:41:20,400 --> 01:41:21,760
rest of it

2581
01:41:21,760 --> 01:41:25,119
uh and this draft tries to tries to

2582
01:41:25,119 --> 01:41:27,520
describe it inside of http so it

2583
01:41:27,520 --> 01:41:30,239
could be used like that um the other

2584
01:41:30,239 --> 01:41:30,719
thing

2585
01:41:30,719 --> 01:41:32,880
that this draft is trying to eventually

2586
01:41:32,880 --> 01:41:35,040
solve is having the ability to signal

2587
01:41:35,040 --> 01:41:36,320
media

2588
01:41:36,320 --> 01:41:40,320
where http is the control so to speak

2589
01:41:40,320 --> 01:41:43,759
um next slide please

2590
01:41:44,480 --> 01:41:47,679
so this is basically it i'm gonna

2591
01:41:47,679 --> 01:41:50,800
breeze through this uh so i effectively

2592
01:41:50,800 --> 01:41:53,280
take the stp data model and apply it to

2593
01:41:53,280 --> 01:41:55,119
http header semantics

2594
01:41:55,119 --> 01:41:56,800
i'm using structure headers to do this

2595
01:41:56,800 --> 01:41:59,520
i'm using the latest sdp rfc for doing

2596
01:41:59,520 --> 01:42:00,480
it

2597
01:42:00,480 --> 01:42:04,400
and i have not yet got a very clear

2598
01:42:04,400 --> 01:42:06,480
answer to

2599
01:42:06,480 --> 01:42:09,840
all of the parts of

2600
01:42:09,840 --> 01:42:12,960
the media which is something that

2601
01:42:12,960 --> 01:42:16,560
um adam roach had raised on mailing list

2602
01:42:16,560 --> 01:42:20,159
basically i can describe the the basics

2603
01:42:20,159 --> 01:42:20,719
of it

2604
01:42:20,719 --> 01:42:22,800
uh and what i'm hoping out of this

2605
01:42:22,800 --> 01:42:23,760
discussion

2606
01:42:23,760 --> 01:42:27,679
uh is or at least your feedback is

2607
01:42:27,679 --> 01:42:29,280
what we should do with this and and how

2608
01:42:29,280 --> 01:42:32,159
that what that might look like

2609
01:42:32,159 --> 01:42:35,280
uh next slide

2610
01:42:35,360 --> 01:42:38,639
so just a really dumb naughty example of

2611
01:42:38,639 --> 01:42:40,560
what what this looks like in the

2612
01:42:40,560 --> 01:42:43,520
out there um in my real world

2613
01:42:43,520 --> 01:42:45,119
implementations it looks something very

2614
01:42:45,119 --> 01:42:46,800
similar to this

2615
01:42:46,800 --> 01:42:50,560
um next slide uh

2616
01:42:50,560 --> 01:42:51,920
so originally we were talking about

2617
01:42:51,920 --> 01:42:54,000
dispatching this uh

2618
01:42:54,000 --> 01:42:56,480
chairs have been very kind to um

2619
01:42:56,480 --> 01:42:57,840
encourage me to present this

2620
01:42:57,840 --> 01:42:59,280
there are a few places that this could

2621
01:42:59,280 --> 01:43:01,040
go and i can see that uh

2622
01:43:01,040 --> 01:43:02,800
java has already mentioned some of these

2623
01:43:02,800 --> 01:43:04,080
names

2624
01:43:04,080 --> 01:43:07,280
um i'm not asking for a

2625
01:43:07,280 --> 01:43:09,760
where should this go but i'm also more

2626
01:43:09,760 --> 01:43:11,119
importantly asking for it

2627
01:43:11,119 --> 01:43:13,760
is this worth doing uh because although

2628
01:43:13,760 --> 01:43:15,600
i've scratched my own back with it

2629
01:43:15,600 --> 01:43:18,639
um it's it's one of those things where

2630
01:43:18,639 --> 01:43:20,480
if nobody else has interest in it it's

2631
01:43:20,480 --> 01:43:23,040
probably not worth pursuing

2632
01:43:23,040 --> 01:43:26,880
um that that's it is there any feedback

2633
01:43:26,880 --> 01:43:29,440
that people have

2634
01:43:30,239 --> 01:43:31,920
thank you for the presentation james

2635
01:43:31,920 --> 01:43:33,760
thanks for bringing it um

2636
01:43:33,760 --> 01:43:36,000
just to get a few eyes on it and uh yeah

2637
01:43:36,000 --> 01:43:37,920
we'll open up the queue if anyone has

2638
01:43:37,920 --> 01:43:39,600
comments or thoughts on

2639
01:43:39,600 --> 01:43:42,560
the proposal other places it could go or

2640
01:43:42,560 --> 01:43:44,239
just any feedback generally

2641
01:43:44,239 --> 01:43:53,839
please please step up

2642
01:44:00,800 --> 01:44:03,040
um yeah i could just see in jabba

2643
01:44:03,040 --> 01:44:04,840
problem statement sounds like wish

2644
01:44:04,840 --> 01:44:07,920
um mark nottingham saying it seems out

2645
01:44:07,920 --> 01:44:09,119
of scope for http

2646
01:44:09,119 --> 01:44:13,119
api uh i'd encourage folks to get up to

2647
01:44:13,119 --> 01:44:14,400
the mic if you

2648
01:44:14,400 --> 01:44:21,839
want to have questions and chat

2649
01:44:23,360 --> 01:44:26,480
um eric criscolla

2650
01:44:26,480 --> 01:44:28,880
hi yeah i mean it seems that there's two

2651
01:44:28,880 --> 01:44:30,639
things here

2652
01:44:30,639 --> 01:44:34,000
one is a re-surrealization of the

2653
01:44:34,000 --> 01:44:37,119
http api in sorry the sap

2654
01:44:37,119 --> 01:44:39,040
format instructor header which is like

2655
01:44:39,040 --> 01:44:40,480
you know sdp

2656
01:44:40,480 --> 01:44:43,760
like not ng minus minus um and then the

2657
01:44:43,760 --> 01:44:45,040
other is hey we're going to stuff in

2658
01:44:45,040 --> 01:44:46,400
http headers

2659
01:44:46,400 --> 01:44:50,239
and you know um i think to recap

2660
01:44:50,239 --> 01:44:51,920
adam's comment i mean like sap is really

2661
01:44:51,920 --> 01:44:53,840
complicated and i'm sort of trying to

2662
01:44:53,840 --> 01:44:55,280
like like wallet is an enormous pain or

2663
01:44:55,280 --> 01:44:56,159
an svd person

2664
01:44:56,159 --> 01:44:58,159
um like i'm i'm because i'm like not

2665
01:44:58,159 --> 01:44:59,360
really persuaded that like it's that

2666
01:44:59,360 --> 01:45:00,320
valuable i'll put it

2667
01:45:00,320 --> 01:45:02,000
headers as opposed to in a new

2668
01:45:02,000 --> 01:45:03,360
structured format um

2669
01:45:03,360 --> 01:45:04,880
like i don't see like that generally

2670
01:45:04,880 --> 01:45:06,719
being helpful um like

2671
01:45:06,719 --> 01:45:07,760
you know for the purpose of opening the

2672
01:45:07,760 --> 01:45:09,520
header like if all the problem is you

2673
01:45:09,520 --> 01:45:10,719
want to get the header just basically

2674
01:45:10,719 --> 01:45:12,960
for it

2675
01:45:14,560 --> 01:45:17,119
okay let's let's that's fair feedback um

2676
01:45:17,119 --> 01:45:18,080
i don't i don't have a

2677
01:45:18,080 --> 01:45:19,440
i don't have an intelligent enough

2678
01:45:19,440 --> 01:45:30,159
response to it

2679
01:45:30,159 --> 01:45:32,320
okay um anyone else any comments in the

2680
01:45:32,320 --> 01:45:34,559
queue

2681
01:45:35,600 --> 01:45:38,239
otherwise we'll just um continue the

2682
01:45:38,239 --> 01:45:39,840
lively discussion that i've seen on the

2683
01:45:39,840 --> 01:45:40,639
list

2684
01:45:40,639 --> 01:45:43,280
um and thank you again james for taking

2685
01:45:43,280 --> 01:45:44,639
the time to come and present

2686
01:45:44,639 --> 01:45:46,239
uh present your work to us today thank

2687
01:45:46,239 --> 01:45:48,960
you thank you

2688
01:45:48,960 --> 01:45:51,119
okay so we're on to our final item on

2689
01:45:51,119 --> 01:45:52,320
the art agenda

2690
01:45:52,320 --> 01:45:54,639
um jonathan rosenberg i think you're

2691
01:45:54,639 --> 01:45:56,080
presenting

2692
01:45:56,080 --> 01:45:59,840
draft rosenberg

2693
01:46:02,480 --> 01:46:04,880
all right hopefully folks can hear me

2694
01:46:04,880 --> 01:46:07,360
and see me

2695
01:46:08,080 --> 01:46:11,520
yes yep we can hear and see you yeah

2696
01:46:11,520 --> 01:46:13,600
all right these days that's a hard

2697
01:46:13,600 --> 01:46:14,960
problem okay

2698
01:46:14,960 --> 01:46:16,480
uh thanks everyone i'm going to talk

2699
01:46:16,480 --> 01:46:18,239
about this draft next slide going to go

2700
01:46:18,239 --> 01:46:19,920
real quick so we can have time for

2701
01:46:19,920 --> 01:46:22,080
discussion and comments uh let's say

2702
01:46:22,080 --> 01:46:23,520
upfront by the way i'm not looking for

2703
01:46:23,520 --> 01:46:24,639
dispatch this is

2704
01:46:24,639 --> 01:46:26,960
uh this is merely letting people know

2705
01:46:26,960 --> 01:46:28,639
about this draft and looking for

2706
01:46:28,639 --> 01:46:30,639
interested folks to participate with us

2707
01:46:30,639 --> 01:46:32,480
the problem we're trying to solve is

2708
01:46:32,480 --> 01:46:34,320
uh to build highly reliable voice

2709
01:46:34,320 --> 01:46:36,000
systems in

2710
01:46:36,000 --> 01:46:37,840
cloud-based environments we have tons

2711
01:46:37,840 --> 01:46:39,199
and tons of

2712
01:46:39,199 --> 01:46:40,960
back-to-back user agents often with

2713
01:46:40,960 --> 01:46:43,119
media widely deployed

2714
01:46:43,119 --> 01:46:44,719
in server and data center environments

2715
01:46:44,719 --> 01:46:46,800
full state whether that's

2716
01:46:46,800 --> 01:46:49,920
srtp state rtp state sdp state

2717
01:46:49,920 --> 01:46:52,880
lots of low-level sip state making high

2718
01:46:52,880 --> 01:46:54,159
availability hard

2719
01:46:54,159 --> 01:46:56,480
two things there one is hey if a server

2720
01:46:56,480 --> 01:46:58,320
instance fails can you allow new calls

2721
01:46:58,320 --> 01:46:59,520
to succeed

2722
01:46:59,520 --> 01:47:01,040
and the much more tricky one which is

2723
01:47:01,040 --> 01:47:02,560
the focus of this draft is

2724
01:47:02,560 --> 01:47:04,719
hey if i've got an spc or a soft switch

2725
01:47:04,719 --> 01:47:05,840
and it fails

2726
01:47:05,840 --> 01:47:07,199
how can i actually make it so that the

2727
01:47:07,199 --> 01:47:09,280
call doesn't drop

2728
01:47:09,280 --> 01:47:11,119
that's hard that's not as commonly

2729
01:47:11,119 --> 01:47:12,800
implemented

2730
01:47:12,800 --> 01:47:15,840
it's sometimes done with ip takeover

2731
01:47:15,840 --> 01:47:16,960
solutions

2732
01:47:16,960 --> 01:47:18,639
with a lot of state replication but

2733
01:47:18,639 --> 01:47:20,320
that's not really amenable to cluster

2734
01:47:20,320 --> 01:47:21,440
deployments so

2735
01:47:21,440 --> 01:47:23,119
the goal this draft is to enable high

2736
01:47:23,119 --> 01:47:26,080
availability in clusters of b2b ways

2737
01:47:26,080 --> 01:47:27,760
that usually serve media although not

2738
01:47:27,760 --> 01:47:31,040
limited to that next slide

2739
01:47:31,520 --> 01:47:32,800
i'm not going to go through this there

2740
01:47:32,800 --> 01:47:34,159
are it's out of the document but we

2741
01:47:34,159 --> 01:47:35,760
basically want to recover a call in two

2742
01:47:35,760 --> 01:47:37,600
seconds we want to support

2743
01:47:37,600 --> 01:47:39,440
elastic expansion contraction of

2744
01:47:39,440 --> 01:47:41,760
clusters and cloud environments and

2745
01:47:41,760 --> 01:47:43,199
using that to make sure we can achieve

2746
01:47:43,199 --> 01:47:45,199
ha

2747
01:47:45,199 --> 01:47:47,440
active calls can get spread across

2748
01:47:47,440 --> 01:47:48,239
remaining

2749
01:47:48,239 --> 01:47:50,239
nodes in cluster and support things like

2750
01:47:50,239 --> 01:47:51,280
graceful shutdown

2751
01:47:51,280 --> 01:47:54,560
next line the basic uh architecture

2752
01:47:54,560 --> 01:47:56,080
looks like this you've got this idea

2753
01:47:56,080 --> 01:47:57,600
that there's a cluster of instances

2754
01:47:57,600 --> 01:47:59,119
whether that's a

2755
01:47:59,119 --> 01:48:01,520
soft switch or an spc or whatever you've

2756
01:48:01,520 --> 01:48:02,639
got n of them

2757
01:48:02,639 --> 01:48:04,239
they have some kind of shared database

2758
01:48:04,239 --> 01:48:05,679
which is outside the scope of this

2759
01:48:05,679 --> 01:48:06,800
document

2760
01:48:06,800 --> 01:48:08,560
and the idea is to recognize this notion

2761
01:48:08,560 --> 01:48:10,480
of a cluster and to

2762
01:48:10,480 --> 01:48:12,800
uh introduce requirements that need to

2763
01:48:12,800 --> 01:48:14,639
be implemented by the upstream calling

2764
01:48:14,639 --> 01:48:15,280
server

2765
01:48:15,280 --> 01:48:18,719
which can be another b2b ua or a bunch

2766
01:48:18,719 --> 01:48:20,000
of different type of things

2767
01:48:20,000 --> 01:48:23,520
um self switches or whatever and

2768
01:48:23,520 --> 01:48:25,520
the calling server is doing sip and rtp

2769
01:48:25,520 --> 01:48:27,679
load balancing across the instances

2770
01:48:27,679 --> 01:48:29,440
and more importantly when one of those

2771
01:48:29,440 --> 01:48:31,440
instances fail we want to

2772
01:48:31,440 --> 01:48:33,360
define processes and handling for the

2773
01:48:33,360 --> 01:48:34,560
calling server to

2774
01:48:34,560 --> 01:48:38,000
sort of recover that call and the last

2775
01:48:38,000 --> 01:48:38,480
bit of

2776
01:48:38,480 --> 01:48:40,320
what's in here is in order for this to

2777
01:48:40,320 --> 01:48:42,080
work we need a way

2778
01:48:42,080 --> 01:48:44,639
to propagate information about this

2779
01:48:44,639 --> 01:48:46,000
cluster the set of instances

2780
01:48:46,000 --> 01:48:48,320
their ips and ports their relative

2781
01:48:48,320 --> 01:48:49,840
capacities to the upstream calling

2782
01:48:49,840 --> 01:48:52,000
server in real time super fast

2783
01:48:52,000 --> 01:48:55,199
to deal with different aha situations

2784
01:48:55,199 --> 01:48:58,560
uh and then next slide

2785
01:48:58,560 --> 01:49:00,480
so the actual solution mechanism is not

2786
01:49:00,480 --> 01:49:01,920
complicated actually and

2787
01:49:01,920 --> 01:49:04,560
and this is largely just uh requiring

2788
01:49:04,560 --> 01:49:07,280
usage of specs we mostly already have

2789
01:49:07,280 --> 01:49:09,600
the only really newish thing is a json

2790
01:49:09,600 --> 01:49:11,280
object format for

2791
01:49:11,280 --> 01:49:13,199
pushing configuration of cluster members

2792
01:49:13,199 --> 01:49:14,880
to this calling server

2793
01:49:14,880 --> 01:49:16,960
uh but beyond that sort of recommending

2794
01:49:16,960 --> 01:49:18,719
techniques like zip options pings and

2795
01:49:18,719 --> 01:49:19,920
rtp

2796
01:49:19,920 --> 01:49:22,239
uh timeouts were already widely used for

2797
01:49:22,239 --> 01:49:23,920
rapid failure detection

2798
01:49:23,920 --> 01:49:25,520
and then and then really mandating the

2799
01:49:25,520 --> 01:49:27,920
implementation of invite with replaces

2800
01:49:27,920 --> 01:49:28,800
as a

2801
01:49:28,800 --> 01:49:31,679
specific way to sort of um reconstitute

2802
01:49:31,679 --> 01:49:32,320
the state

2803
01:49:32,320 --> 01:49:34,080
so if an instance fails we want the

2804
01:49:34,080 --> 01:49:35,360
calling server to

2805
01:49:35,360 --> 01:49:37,119
send an invite with replaces to a

2806
01:49:37,119 --> 01:49:39,360
different live instance in that cluster

2807
01:49:39,360 --> 01:49:41,599
that instance can um just using the

2808
01:49:41,599 --> 01:49:42,960
dialogue identifiers

2809
01:49:42,960 --> 01:49:45,280
uh rebuild the call generate a

2810
01:49:45,280 --> 01:49:47,360
downstream invite if needed uh

2811
01:49:47,360 --> 01:49:49,440
using invite with replaces and up and

2812
01:49:49,440 --> 01:49:50,800
going to do all that in like less than

2813
01:49:50,800 --> 01:49:51,679
two seconds

2814
01:49:51,679 --> 01:49:54,320
so that people don't hang up the call so

2815
01:49:54,320 --> 01:49:56,560
that's basically the solution um

2816
01:49:56,560 --> 01:49:59,199
i uh like i said not looking to form a

2817
01:49:59,199 --> 01:50:00,080
working group

2818
01:50:00,080 --> 01:50:03,360
mostly call for input uh the goal is to

2819
01:50:03,360 --> 01:50:05,440
sort of do some prototyping and vet this

2820
01:50:05,440 --> 01:50:08,080
out do some demos value it works

2821
01:50:08,080 --> 01:50:10,239
particularly in cloud environments and

2822
01:50:10,239 --> 01:50:11,199
then you know once we have some

2823
01:50:11,199 --> 01:50:12,639
implementations we'll

2824
01:50:12,639 --> 01:50:15,360
come back to explore standardization but

2825
01:50:15,360 --> 01:50:16,639
looking for pulmonary

2826
01:50:16,639 --> 01:50:25,280
questions or feedback

2827
01:50:25,280 --> 01:50:26,880
so come up and join the queue if you'd

2828
01:50:26,880 --> 01:50:29,679
like to ask any clarifying questions or

2829
01:50:29,679 --> 01:50:32,560
give your view on this

2830
01:50:37,440 --> 01:50:39,199
we'll just pause give folks a second to

2831
01:50:39,199 --> 01:50:40,960
find the raise hand

2832
01:50:40,960 --> 01:50:52,719
at the top of the screen

2833
01:50:52,719 --> 01:50:55,440
what no comments or questions come on

2834
01:50:55,440 --> 01:50:56,880
guys do you really still want to talk

2835
01:50:56,880 --> 01:50:57,760
about sdg

2836
01:50:57,760 --> 01:51:02,400
sd png this is more interesting

2837
01:51:03,599 --> 01:51:06,320
all right shots fired but i think yeah

2838
01:51:06,320 --> 01:51:06,880
you've got no

2839
01:51:06,880 --> 01:51:08,880
that's fine well if anyone is interested

2840
01:51:08,880 --> 01:51:10,159
in working with us on this again if

2841
01:51:10,159 --> 01:51:11,599
you're an sbc

2842
01:51:11,599 --> 01:51:14,480
got sbcs got soft switches conference

2843
01:51:14,480 --> 01:51:15,599
bridges

2844
01:51:15,599 --> 01:51:17,599
uh this is going to massively help the

2845
01:51:17,599 --> 01:51:20,239
reliability of your solution so

2846
01:51:20,239 --> 01:51:21,679
you know where to find me thanks

2847
01:51:21,679 --> 01:51:23,360
everyone

2848
01:51:23,360 --> 01:51:25,360
a late entrance to the keys jonathan

2849
01:51:25,360 --> 01:51:27,759
lennox

2850
01:51:29,360 --> 01:51:31,199
uh yeah so my i guess my question is

2851
01:51:31,199 --> 01:51:33,760
what what how much of the existing ship

2852
01:51:33,760 --> 01:51:35,040
would need to support invite were the

2853
01:51:35,040 --> 01:51:36,400
places is it just the immediately

2854
01:51:36,400 --> 01:51:37,920
upstream

2855
01:51:37,920 --> 01:51:40,000
uh sbc or are you saying that everything

2856
01:51:40,000 --> 01:51:42,560
in the whole world needs to suddenly

2857
01:51:42,560 --> 01:51:43,760
fight with their places one of those

2858
01:51:43,760 --> 01:51:45,679
things certainly a much easier lift than

2859
01:51:45,679 --> 01:51:46,480
the other

2860
01:51:46,480 --> 01:51:49,440
yeah that's a great question um so it is

2861
01:51:49,440 --> 01:51:49,840
the

2862
01:51:49,840 --> 01:51:52,560
the upstream element from the cluster

2863
01:51:52,560 --> 01:51:54,239
and the downstream element from the

2864
01:51:54,239 --> 01:51:54,800
cluster

2865
01:51:54,800 --> 01:51:56,880
and the hypoth the use cases are sort of

2866
01:51:56,880 --> 01:51:58,000
pretty fairly

2867
01:51:58,000 --> 01:51:59,599
narrowly constrained for this app

2868
01:51:59,599 --> 01:52:01,040
they're not meant for

2869
01:52:01,040 --> 01:52:02,800
the fundamental assumption is that the

2870
01:52:02,800 --> 01:52:05,040
downstream ua is under in the same

2871
01:52:05,040 --> 01:52:06,480
administrative control

2872
01:52:06,480 --> 01:52:08,239
of the entity that runs the cluster if

2873
01:52:08,239 --> 01:52:09,920
that's not the case this effect is not

2874
01:52:09,920 --> 01:52:10,719
applicable

2875
01:52:10,719 --> 01:52:12,639
so the only thing the spec is asking is

2876
01:52:12,639 --> 01:52:14,800
upstream so the main

2877
01:52:14,800 --> 01:52:16,239
real and this is why i want a standard

2878
01:52:16,239 --> 01:52:17,920
is like hey if i'm running a

2879
01:52:17,920 --> 01:52:19,679
cloud voice network and i want my

2880
01:52:19,679 --> 01:52:21,520
carrier to support invite replaces on

2881
01:52:21,520 --> 01:52:22,639
their spc

2882
01:52:22,639 --> 01:52:24,800
i'm covered i'm good with my soft

2883
01:52:24,800 --> 01:52:25,679
switches and my

2884
01:52:25,679 --> 01:52:27,199
whatever is but i just need the upstream

2885
01:52:27,199 --> 01:52:29,119
guy to do it that's really all this is

2886
01:52:29,119 --> 01:52:30,800
asking

2887
01:52:30,800 --> 01:52:33,280
great question

2888
01:52:36,480 --> 01:52:38,480
great thank you well thanks for the

2889
01:52:38,480 --> 01:52:39,760
presentation jonathan

2890
01:52:39,760 --> 01:52:41,520
and we'll continue the discussions on

2891
01:52:41,520 --> 01:52:44,159
list and uh thanks for presenting

2892
01:52:44,159 --> 01:52:46,080
so we're just um we reached the end of

2893
01:52:46,080 --> 01:52:47,679
our formal agenda so i'll just do a

2894
01:52:47,679 --> 01:52:48,400
wrap-up

2895
01:52:48,400 --> 01:52:51,920
um having discussed with patrick um

2896
01:52:51,920 --> 01:52:53,440
as well now we can just wrap up the

2897
01:52:53,440 --> 01:52:55,119
dispatch stuff concretely

2898
01:52:55,119 --> 01:52:58,320
and say um the summary is that we think

2899
01:52:58,320 --> 01:53:00,080
the date time work needs a short-lived

2900
01:53:00,080 --> 01:53:01,119
working group

2901
01:53:01,119 --> 01:53:03,760
so we'll just post on a list about that

2902
01:53:03,760 --> 01:53:04,400
um

2903
01:53:04,400 --> 01:53:06,560
and it seems to be uncontroversial so we

2904
01:53:06,560 --> 01:53:07,840
think probably

2905
01:53:07,840 --> 01:53:09,679
a buff is not needed but we'll just

2906
01:53:09,679 --> 01:53:11,360
continue the discussion on list about

2907
01:53:11,360 --> 01:53:12,239
that

2908
01:53:12,239 --> 01:53:14,320
um with the media types work from

2909
01:53:14,320 --> 01:53:15,280
carsten we

2910
01:53:15,280 --> 01:53:16,960
agree it's a simple document but it's

2911
01:53:16,960 --> 01:53:18,800
still likely to you know

2912
01:53:18,800 --> 01:53:20,880
not be as simple as we would hope so we

2913
01:53:20,880 --> 01:53:22,639
think a working group is needed

2914
01:53:22,639 --> 01:53:25,360
and we'll um discuss and clarify the

2915
01:53:25,360 --> 01:53:27,360
scope and the problem on on list

2916
01:53:27,360 --> 01:53:29,679
and then it might be resulting in a buff

2917
01:53:29,679 --> 01:53:32,239
and then for the http negotiation work

2918
01:53:32,239 --> 01:53:35,760
it sounds um api http api destined but

2919
01:53:35,760 --> 01:53:37,280
uh just a bit more discussion on this

2920
01:53:37,280 --> 01:53:39,280
required to confirm and

2921
01:53:39,280 --> 01:53:41,280
the chairs me and patrick we will post

2922
01:53:41,280 --> 01:53:43,040
and start that discussion

2923
01:53:43,040 --> 01:53:45,679
so just wanted to wrap that up um and

2924
01:53:45,679 --> 01:53:47,040
then hand over to

2925
01:53:47,040 --> 01:53:50,560
uh murray we've got um if you wanna

2926
01:53:50,560 --> 01:53:53,040
just say a few words that'll be grand

2927
01:53:53,040 --> 01:53:55,840
thanks

2928
01:54:04,000 --> 01:54:06,719
how's the audio

2929
01:54:07,360 --> 01:54:11,440
flawless flawless um i just wanted to

2930
01:54:11,440 --> 01:54:13,520
take this opportunity to thank mary for

2931
01:54:13,520 --> 01:54:16,000
his uh work supporting dispatch

2932
01:54:16,000 --> 01:54:18,560
and also supporting uh me as a new ad

2933
01:54:18,560 --> 01:54:19,040
and

2934
01:54:19,040 --> 01:54:21,119
francesca as a new ad this is his last

2935
01:54:21,119 --> 01:54:22,960
meeting as

2936
01:54:22,960 --> 01:54:25,599
our area director so thank you very much

2937
01:54:25,599 --> 01:54:27,920
barry

2938
01:54:34,320 --> 01:54:35,920
barry your audio is not working i'm

2939
01:54:35,920 --> 01:54:37,520
afraid

2940
01:54:37,520 --> 01:54:39,840
but i'll just use this silence too

2941
01:54:39,840 --> 01:54:42,080
thanks for watching

2942
01:54:42,080 --> 01:54:44,000
is that the music it's the mute button

2943
01:54:44,000 --> 01:54:45,520
that didn't work there was some lag on

2944
01:54:45,520 --> 01:54:45,920
it

2945
01:54:45,920 --> 01:54:47,520
anyway uh thanks murray and thanks

2946
01:54:47,520 --> 01:54:49,520
everybody uh in the art area for the

2947
01:54:49,520 --> 01:54:51,760
support you've given me is as a d

2948
01:54:51,760 --> 01:54:54,159
i've been i've been thrilled working

2949
01:54:54,159 --> 01:54:55,760
with you guys and i will continue to

2950
01:54:55,760 --> 01:54:57,119
work with you as working group chair

2951
01:54:57,119 --> 01:54:58,159
somewhere and

2952
01:54:58,159 --> 01:55:00,960
other such things

2953
01:55:02,080 --> 01:55:06,800
that's it yay thank you barry

2954
01:55:09,520 --> 01:55:12,159
thanks barry um okay so we just have a

2955
01:55:12,159 --> 01:55:14,400
few minutes left if anyone has any aob

2956
01:55:14,400 --> 01:55:17,040
to bring up otherwise we will close the

2957
01:55:17,040 --> 01:55:18,000
meeting out and

2958
01:55:18,000 --> 01:55:21,360
give you a little bit more break time

2959
01:55:27,520 --> 01:55:28,960
you can see a lot of thanks and applause

2960
01:55:28,960 --> 01:55:30,560
for barry in the chat so i think that's

2961
01:55:30,560 --> 01:55:31,199
a

2962
01:55:31,199 --> 01:55:32,880
lovely place to leave it thanks everyone

2963
01:55:32,880 --> 01:55:34,880
for your conversation and

2964
01:55:34,880 --> 01:55:36,480
contributions today and thanks to all

2965
01:55:36,480 --> 01:55:37,920
our speakers as well

2966
01:55:37,920 --> 01:55:40,960
uh what a great start to the week take

2967
01:55:40,960 --> 01:55:45,280
care bye

