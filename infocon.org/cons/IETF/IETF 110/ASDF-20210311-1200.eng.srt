1
00:00:05,120 --> 00:00:08,640
search for the word participant

2
00:00:08,960 --> 00:00:12,719
the number of participants minus chairs

3
00:00:14,920 --> 00:00:17,920
okay

4
00:00:20,480 --> 00:00:22,560
oh yeah search user okay you could

5
00:00:22,560 --> 00:00:23,680
search for participant

6
00:00:23,680 --> 00:00:27,359
interesting okay i think we are actually

7
00:00:27,359 --> 00:00:29,439
um

8
00:00:29,439 --> 00:00:32,720
it's time to get going

9
00:00:33,600 --> 00:00:36,719
are we ready michael are you going to

10
00:00:36,719 --> 00:00:37,840
play

11
00:00:37,840 --> 00:00:40,879
on the keyboard behind you

12
00:00:41,120 --> 00:00:43,920
no it's not mine it's my daughter so you

13
00:00:43,920 --> 00:00:45,120
don't want me playing there

14
00:00:45,120 --> 00:00:47,599
don't worry

15
00:00:51,440 --> 00:00:55,360
does it have an asdf model

16
00:00:56,840 --> 00:01:00,559
sorry it's a thing

17
00:01:00,559 --> 00:01:03,120
is it an internet of things yeah yeah

18
00:01:03,120 --> 00:01:04,080
yeah yeah it has

19
00:01:04,080 --> 00:01:06,720
um ethernet or and things but honestly i

20
00:01:06,720 --> 00:01:07,920
haven't

21
00:01:07,920 --> 00:01:11,439
i haven't hooked it up to anything yet

22
00:01:11,439 --> 00:01:12,560
it was recently

23
00:01:12,560 --> 00:01:15,360
purchased by the family or for my

24
00:01:15,360 --> 00:01:16,320
youngest daughter

25
00:01:16,320 --> 00:01:19,759
anyway uh so it's now um

26
00:01:19,759 --> 00:01:23,680
one o'clock in in europe here and uh

27
00:01:23,680 --> 00:01:27,520
12 utc so i think we should get going

28
00:01:27,520 --> 00:01:30,079
uh and we will let people trickle in as

29
00:01:30,079 --> 00:01:31,360
we go along

30
00:01:31,360 --> 00:01:34,159
welcome to the asdf working group

31
00:01:34,159 --> 00:01:36,000
meeting at iitf

32
00:01:36,000 --> 00:01:39,119
110 it's

33
00:01:39,119 --> 00:01:40,960
nicholas adele here and my co-chair is

34
00:01:40,960 --> 00:01:42,399
michael richardson who you see in the

35
00:01:42,399 --> 00:01:44,240
other picture

36
00:01:44,240 --> 00:01:48,240
um can you change slides

37
00:01:48,240 --> 00:01:51,759
next slide please okay uh this is an itf

38
00:01:51,759 --> 00:01:52,479
meeting

39
00:01:52,479 --> 00:01:55,119
here is the short note well the long one

40
00:01:55,119 --> 00:01:56,719
is coming on next page

41
00:01:56,719 --> 00:01:59,520
uh briefly you can go back to the

42
00:01:59,520 --> 00:02:00,240
previous one

43
00:02:00,240 --> 00:02:02,640
i think it has the uh you will be

44
00:02:02,640 --> 00:02:04,399
recorded

45
00:02:04,399 --> 00:02:06,960
remember to be nice and be professional

46
00:02:06,960 --> 00:02:08,720
and remember that ipr

47
00:02:08,720 --> 00:02:12,879
the itf ipr guidelines are in in effect

48
00:02:12,879 --> 00:02:16,239
and there you have links to our github

49
00:02:16,239 --> 00:02:16,800
repo

50
00:02:16,800 --> 00:02:20,000
where you can file all agendas and so on

51
00:02:20,000 --> 00:02:22,640
and also the notes for this particular

52
00:02:22,640 --> 00:02:23,760
meeting

53
00:02:23,760 --> 00:02:25,360
and those notes will of course also end

54
00:02:25,360 --> 00:02:27,440
up in the repo eventually

55
00:02:27,440 --> 00:02:30,640
good next slide please

56
00:02:31,120 --> 00:02:33,760
and so here is the full note well i hope

57
00:02:33,760 --> 00:02:34,720
you've read it

58
00:02:34,720 --> 00:02:37,920
if not read it at your convenience next

59
00:02:37,920 --> 00:02:40,399
slide please

60
00:02:40,560 --> 00:02:43,920
this is the agenda for today

61
00:02:43,920 --> 00:02:46,319
we start out with an introduction admin

62
00:02:46,319 --> 00:02:48,720
stuff agenda bashing and so on

63
00:02:48,720 --> 00:02:52,160
um we will say a few words about

64
00:02:52,160 --> 00:02:53,519
who we have been talking to with this

65
00:02:53,519 --> 00:02:55,360
working group since this this is largely

66
00:02:55,360 --> 00:02:55,680
about

67
00:02:55,680 --> 00:02:57,760
um building things from the wider

68
00:02:57,760 --> 00:02:58,720
community

69
00:02:58,720 --> 00:02:59,920
we will say a few words about the

70
00:02:59,920 --> 00:03:01,920
hackathon outcome uh

71
00:03:01,920 --> 00:03:04,400
that we had last week and then we will

72
00:03:04,400 --> 00:03:06,480
move on to the actual specification work

73
00:03:06,480 --> 00:03:06,959
and this

74
00:03:06,959 --> 00:03:09,440
the update there and the consensus call

75
00:03:09,440 --> 00:03:11,360
for sdf-11

76
00:03:11,360 --> 00:03:14,400
we'll do a bit of planning for upcoming

77
00:03:14,400 --> 00:03:15,519
virtual interims

78
00:03:15,519 --> 00:03:17,360
and then we'll move on to the next

79
00:03:17,360 --> 00:03:18,560
features so what will

80
00:03:18,560 --> 00:03:22,480
be in future versions of sdf

81
00:03:22,480 --> 00:03:24,319
and there are a couple of lists there so

82
00:03:24,319 --> 00:03:26,879
these uh the agenda was updated just

83
00:03:26,879 --> 00:03:28,239
before here as we

84
00:03:28,239 --> 00:03:30,959
had some minor or some changes in in the

85
00:03:30,959 --> 00:03:32,080
last minute but

86
00:03:32,080 --> 00:03:35,680
this this is also a data tracker now

87
00:03:35,680 --> 00:03:38,959
yeah next slide please

88
00:03:38,959 --> 00:03:41,519
um the administrative stuff there's a

89
00:03:41,519 --> 00:03:42,319
code md

90
00:03:42,319 --> 00:03:45,120
there's the meet echo jabber all notes

91
00:03:45,120 --> 00:03:46,400
at the point there

92
00:03:46,400 --> 00:03:49,519
uh we have uh so michael is uh jab

93
00:03:49,519 --> 00:03:50,400
prescribing

94
00:03:50,400 --> 00:03:52,080
and taking some notes ari is also

95
00:03:52,080 --> 00:03:54,239
helping out with the notes

96
00:03:54,239 --> 00:03:57,360
uh in kodi md um and

97
00:03:57,360 --> 00:04:00,480
uh i saw that michael sent in the in the

98
00:04:00,480 --> 00:04:01,439
chat

99
00:04:01,439 --> 00:04:04,400
please if you want to speak up from

100
00:04:04,400 --> 00:04:05,040
jabber

101
00:04:05,040 --> 00:04:08,480
uh add mick colon at the start of your

102
00:04:08,480 --> 00:04:09,840
sort of point so

103
00:04:09,840 --> 00:04:11,920
we don't miss it trying to navigate all

104
00:04:11,920 --> 00:04:13,040
these windows on our

105
00:04:13,040 --> 00:04:16,478
screens simultaneous windows

106
00:04:16,478 --> 00:04:20,639
anyway uh next slide please

107
00:04:21,358 --> 00:04:24,639
um so this is these are just the

108
00:04:24,639 --> 00:04:26,800
the working procedures for asdf working

109
00:04:26,800 --> 00:04:28,720
group we are using the same from since

110
00:04:28,720 --> 00:04:29,680
the start

111
00:04:29,680 --> 00:04:32,880
we keep our decisions on the mailing

112
00:04:32,880 --> 00:04:34,080
list

113
00:04:34,080 --> 00:04:36,560
and we but we do the most of the work on

114
00:04:36,560 --> 00:04:38,400
github there's the link there

115
00:04:38,400 --> 00:04:40,479
and we use an issue tracker on github to

116
00:04:40,479 --> 00:04:42,479
actually track issues

117
00:04:42,479 --> 00:04:45,919
which includes new features and fixes

118
00:04:45,919 --> 00:04:49,280
so to follow this work you need to both

119
00:04:49,280 --> 00:04:52,560
register for the mailing list as well as

120
00:04:52,560 --> 00:04:56,240
join our community on github

121
00:04:56,240 --> 00:04:58,479
and uh in addition to holding meetings

122
00:04:58,479 --> 00:05:00,000
at the sort of the

123
00:05:00,000 --> 00:05:01,520
face-to-face virtual face-to-face

124
00:05:01,520 --> 00:05:03,199
meetings we also do

125
00:05:03,199 --> 00:05:06,639
a couple of virtual interims

126
00:05:06,639 --> 00:05:08,960
between the virtual physical meetings

127
00:05:08,960 --> 00:05:09,840
and

128
00:05:09,840 --> 00:05:12,479
for these we we notify people on the

129
00:05:12,479 --> 00:05:13,280
mailing list

130
00:05:13,280 --> 00:05:15,039
and then we typically do a doodle to

131
00:05:15,039 --> 00:05:17,120
ensure that we get

132
00:05:17,120 --> 00:05:19,520
have find times that people are that fit

133
00:05:19,520 --> 00:05:20,240
people's

134
00:05:20,240 --> 00:05:25,840
schedules next slide please

135
00:05:26,639 --> 00:05:30,800
so um here is uh the status update

136
00:05:30,800 --> 00:05:33,520
uh i immediately see a an error here we

137
00:05:33,520 --> 00:05:34,240
were shot

138
00:05:34,240 --> 00:05:36,720
in october 2020. obviously this is not

139
00:05:36,720 --> 00:05:38,320
from the future

140
00:05:38,320 --> 00:05:40,400
so we were chartered last october and we

141
00:05:40,400 --> 00:05:41,919
had our first meeting at

142
00:05:41,919 --> 00:05:45,919
um at first virtual physical meeting

143
00:05:45,919 --> 00:05:50,000
at the uh 109 with a hackathon

144
00:05:50,000 --> 00:05:52,639
and we had one interim before that and

145
00:05:52,639 --> 00:05:53,680
one in trim

146
00:05:53,680 --> 00:05:56,880
after that and where we are now is that

147
00:05:56,880 --> 00:05:57,919
we have a

148
00:05:57,919 --> 00:06:01,039
reasonably stable uh specification the

149
00:06:01,039 --> 00:06:03,199
what we will call the sdf11

150
00:06:03,199 --> 00:06:05,600
which is on call of consensus and i will

151
00:06:05,600 --> 00:06:06,319
come

152
00:06:06,319 --> 00:06:08,960
to why we call this sdf one one in in a

153
00:06:08,960 --> 00:06:10,960
couple of slides

154
00:06:10,960 --> 00:06:14,080
um in addition to that we had a um

155
00:06:14,080 --> 00:06:16,639
there was a hackathon event last week

156
00:06:16,639 --> 00:06:18,479
together with the wishy folks i will

157
00:06:18,479 --> 00:06:20,639
also say a few words about that later

158
00:06:20,639 --> 00:06:22,960
and uh where we basically talked about

159
00:06:22,960 --> 00:06:25,520
new features for asdf

160
00:06:25,520 --> 00:06:28,720
uh meeting plans yeah we will

161
00:06:28,720 --> 00:06:31,199
obviously meet today here and then we

162
00:06:31,199 --> 00:06:32,000
will plan

163
00:06:32,000 --> 00:06:35,680
new meetings and to be um

164
00:06:35,680 --> 00:06:37,759
there were some unfortunately there was

165
00:06:37,759 --> 00:06:39,520
a scheduling uh

166
00:06:39,520 --> 00:06:41,600
complexity around this meeting i

167
00:06:41,600 --> 00:06:43,120
shouldn't say unfortunately

168
00:06:43,120 --> 00:06:45,520
but we we had requested a one-hour

169
00:06:45,520 --> 00:06:47,360
meeting now we have a two-hour meeting

170
00:06:47,360 --> 00:06:48,960
and we are of course very grateful for

171
00:06:48,960 --> 00:06:50,160
that because we can have longer

172
00:06:50,160 --> 00:06:51,680
discussions

173
00:06:51,680 --> 00:06:54,800
um but

174
00:06:54,800 --> 00:06:56,639
that was the outcome of sort of

175
00:06:56,639 --> 00:06:59,440
deconflicting other meetings

176
00:06:59,440 --> 00:07:03,840
anyway uh next slide please

177
00:07:04,319 --> 00:07:07,199
um so let's say a few words about the

178
00:07:07,199 --> 00:07:08,800
asdf outreach

179
00:07:08,800 --> 00:07:12,160
and uh the purpose of doing uh

180
00:07:12,160 --> 00:07:14,160
the asdf work which is basically

181
00:07:14,160 --> 00:07:16,160
developing the sdf specification

182
00:07:16,160 --> 00:07:18,479
it's of course to to enable this this

183
00:07:18,479 --> 00:07:19,599
vehicle of of

184
00:07:19,599 --> 00:07:21,919
interoperability between data and

185
00:07:21,919 --> 00:07:23,360
information models coming from different

186
00:07:23,360 --> 00:07:25,039
organizations

187
00:07:25,039 --> 00:07:28,639
and um we have been doing uh

188
00:07:28,639 --> 00:07:31,039
some outreach i realized now that i even

189
00:07:31,039 --> 00:07:32,720
missed a couple of things

190
00:07:32,720 --> 00:07:35,919
um there has been uh we have talked to

191
00:07:35,919 --> 00:07:36,400
the

192
00:07:36,400 --> 00:07:38,800
uh the light with m2m group you know

193
00:07:38,800 --> 00:07:40,160
most backworks

194
00:07:40,160 --> 00:07:43,120
we have part of sd sdf is actually part

195
00:07:43,120 --> 00:07:44,879
of an iso proposal

196
00:07:44,879 --> 00:07:46,479
even if the specification is not even

197
00:07:46,479 --> 00:07:48,240
done yet for

198
00:07:48,240 --> 00:07:52,960
jtc one sc41 on it iot

199
00:07:52,960 --> 00:07:54,639
we have an ongoing collaboration with

200
00:07:54,639 --> 00:07:57,199
web of things we have talked about other

201
00:07:57,199 --> 00:07:58,400
use cases where the

202
00:07:58,400 --> 00:08:00,479
setup of sdf can be useful like

203
00:08:00,479 --> 00:08:02,000
electronic data sheets

204
00:08:02,000 --> 00:08:04,639
textile manufacturing and so on i should

205
00:08:04,639 --> 00:08:06,960
also say that there was a

206
00:08:06,960 --> 00:08:09,360
one dm was included in an iic white

207
00:08:09,360 --> 00:08:11,039
paper and information models that was

208
00:08:11,039 --> 00:08:13,199
published two weeks ago

209
00:08:13,199 --> 00:08:14,879
and we have been and there is various

210
00:08:14,879 --> 00:08:16,879
other activities around doing blog posts

211
00:08:16,879 --> 00:08:18,560
and so on this that to to promote the

212
00:08:18,560 --> 00:08:19,440
work

213
00:08:19,440 --> 00:08:22,479
but uh the end the end um message for

214
00:08:22,479 --> 00:08:23,840
this is of course that if you

215
00:08:23,840 --> 00:08:27,039
are part of an iot organization that

216
00:08:27,039 --> 00:08:28,479
works with data models

217
00:08:28,479 --> 00:08:30,400
we are happy to work with you and reach

218
00:08:30,400 --> 00:08:31,840
out to you and discuss

219
00:08:31,840 --> 00:08:34,559
where we can cooperate because the value

220
00:08:34,559 --> 00:08:35,679
of sdf will

221
00:08:35,679 --> 00:08:37,839
be dependent on how many of course

222
00:08:37,839 --> 00:08:41,200
implement it or cooperate with it

223
00:08:41,200 --> 00:08:44,560
yes next slide please

224
00:08:44,959 --> 00:08:48,720
um yeah so the ietf

225
00:08:48,720 --> 00:08:51,680
hackathon that was last week and as i

226
00:08:51,680 --> 00:08:53,519
said this was a collaboration with

227
00:08:53,519 --> 00:08:56,880
between folks in the asdf working group

228
00:08:56,880 --> 00:08:59,519
and the folks in the wishy activity of

229
00:08:59,519 --> 00:09:01,680
things to things research group

230
00:09:01,680 --> 00:09:04,880
and we had a

231
00:09:04,880 --> 00:09:06,560
it looks like we worked all week last

232
00:09:06,560 --> 00:09:08,560
week but we had

233
00:09:08,560 --> 00:09:10,800
actually daily one-hour think meetings

234
00:09:10,800 --> 00:09:12,000
during the week

235
00:09:12,000 --> 00:09:16,000
where people discussed various topics

236
00:09:16,000 --> 00:09:18,000
we had seven people contributing

237
00:09:18,000 --> 00:09:19,839
including two newcomers one of which was

238
00:09:19,839 --> 00:09:21,200
a student

239
00:09:21,200 --> 00:09:24,560
and the outcome uh was quite interesting

240
00:09:24,560 --> 00:09:25,200
we had a

241
00:09:25,200 --> 00:09:28,640
lot of exploratory discussions on on new

242
00:09:28,640 --> 00:09:30,320
features

243
00:09:30,320 --> 00:09:32,240
we talked about tools to do model

244
00:09:32,240 --> 00:09:33,600
translation and

245
00:09:33,600 --> 00:09:35,760
some collaboration with w3c weather

246
00:09:35,760 --> 00:09:37,600
things they also had a

247
00:09:37,600 --> 00:09:40,080
had a hackathon event last week next

248
00:09:40,080 --> 00:09:41,519
slide please

249
00:09:41,519 --> 00:09:45,440
uh i can so here is a bit more details

250
00:09:45,440 --> 00:09:45,920
on the

251
00:09:45,920 --> 00:09:49,040
the um discussions that were had on

252
00:09:49,040 --> 00:09:51,680
validating stf11

253
00:09:51,680 --> 00:09:54,480
work on the semantic proxy these tools

254
00:09:54,480 --> 00:09:56,399
the thing maker and so on

255
00:09:56,399 --> 00:09:58,880
and then the mapping file concept and uh

256
00:09:58,880 --> 00:10:00,640
kirsten will talk to this slide a lot

257
00:10:00,640 --> 00:10:02,240
more in the things to things research

258
00:10:02,240 --> 00:10:03,279
group tomorrow

259
00:10:03,279 --> 00:10:04,959
but it's here for completeness this is

260
00:10:04,959 --> 00:10:06,959
the kind of more concrete stuff they put

261
00:10:06,959 --> 00:10:08,160
into it

262
00:10:08,160 --> 00:10:11,519
it's this afternoon or tomorrow

263
00:10:11,519 --> 00:10:14,800
oh sorry apologies i hope everybody

264
00:10:14,800 --> 00:10:16,079
heard that

265
00:10:16,079 --> 00:10:19,200
yeah sorry i'm a beast

266
00:10:19,200 --> 00:10:21,519
i wasn't looking at my schedule d2trg is

267
00:10:21,519 --> 00:10:22,480
this afternoon

268
00:10:22,480 --> 00:10:24,959
so um you just have to wait like a

269
00:10:24,959 --> 00:10:26,320
couple of hours

270
00:10:26,320 --> 00:10:28,720
for this to four hours from now you will

271
00:10:28,720 --> 00:10:31,200
hear this slide again

272
00:10:31,200 --> 00:10:35,440
yes uh next slide please

273
00:10:35,440 --> 00:10:39,440
so um when we started this work in a

274
00:10:39,440 --> 00:10:42,480
in in asdf um last year

275
00:10:42,480 --> 00:10:45,440
we already came with a reasonably mature

276
00:10:45,440 --> 00:10:46,560
specification

277
00:10:46,560 --> 00:10:50,560
which was marked as sdf-10

278
00:10:50,560 --> 00:10:52,880
and the first objective of this working

279
00:10:52,880 --> 00:10:54,320
group was to develop

280
00:10:54,320 --> 00:10:57,600
to take specification do as much quality

281
00:10:57,600 --> 00:10:59,120
improvement we could on that

282
00:10:59,120 --> 00:11:02,640
and then add the some features needed

283
00:11:02,640 --> 00:11:06,079
and then it calls something in sdf11 and

284
00:11:06,079 --> 00:11:08,720
uh we did that work and we did some

285
00:11:08,720 --> 00:11:09,360
there are some

286
00:11:09,360 --> 00:11:11,240
number of major changes on

287
00:11:11,240 --> 00:11:12,800
cross-referencing and

288
00:11:12,800 --> 00:11:15,839
reusing various other specifications

289
00:11:15,839 --> 00:11:17,440
from an stf file

290
00:11:17,440 --> 00:11:20,480
uh support for composite data types

291
00:11:20,480 --> 00:11:23,760
and then a longer long discussion on on

292
00:11:23,760 --> 00:11:27,279
enumeration choice and so on and

293
00:11:27,279 --> 00:11:29,600
uh with that we we thought we had

294
00:11:29,600 --> 00:11:31,440
something that we were happy with

295
00:11:31,440 --> 00:11:34,800
to to call sdf101 and

296
00:11:34,800 --> 00:11:37,440
mark as an implementation draft uh

297
00:11:37,440 --> 00:11:39,040
implementation draft is not

298
00:11:39,040 --> 00:11:42,079
uh sort of a formal isdf status it

299
00:11:42,079 --> 00:11:43,279
should be noted

300
00:11:43,279 --> 00:11:45,120
it's just a way to indicate that the

301
00:11:45,120 --> 00:11:46,480
particular

302
00:11:46,480 --> 00:11:49,120
specification is stable enough to serve

303
00:11:49,120 --> 00:11:50,240
as a

304
00:11:50,240 --> 00:11:53,040
basis of intermediate basis until the

305
00:11:53,040 --> 00:11:55,200
final specification is done

306
00:11:55,200 --> 00:11:57,680
so and the reason for that is that we

307
00:11:57,680 --> 00:11:58,320
really

308
00:11:58,320 --> 00:12:00,480
need that in the one data model work

309
00:12:00,480 --> 00:12:01,760
where we need to have a common

310
00:12:01,760 --> 00:12:04,079
specification to work against

311
00:12:04,079 --> 00:12:05,920
anyway so we called for a call for

312
00:12:05,920 --> 00:12:08,079
consensus a couple of weeks ago

313
00:12:08,079 --> 00:12:11,200
february 23rd it concluded uh two days

314
00:12:11,200 --> 00:12:12,160
ago

315
00:12:12,160 --> 00:12:14,959
and there were no objections raised so

316
00:12:14,959 --> 00:12:17,600
we all must have an sdf-101

317
00:12:17,600 --> 00:12:20,639
however during

318
00:12:20,639 --> 00:12:22,399
since we made this last call there have

319
00:12:22,399 --> 00:12:24,000
been a couple of um

320
00:12:24,000 --> 00:12:27,279
minor issues raised and and so they're

321
00:12:27,279 --> 00:12:28,880
not objections per se

322
00:12:28,880 --> 00:12:31,519
but they are minor issues or or some of

323
00:12:31,519 --> 00:12:33,279
us call comments

324
00:12:33,279 --> 00:12:36,320
that we would like to address so uh with

325
00:12:36,320 --> 00:12:39,600
that you can go to the next slide

326
00:12:39,600 --> 00:12:42,480
uh so karsten do you want to go through

327
00:12:42,480 --> 00:12:43,760
these

328
00:12:43,760 --> 00:12:46,800
yes so we had a pretty intensive

329
00:12:46,800 --> 00:12:50,720
uh a couple of weeks working on sdf

330
00:12:50,720 --> 00:12:55,279
and obviously a few things popped up

331
00:12:55,279 --> 00:12:56,959
so that there are three pull requests

332
00:12:56,959 --> 00:13:00,079
now that that i'm proposing we

333
00:13:00,079 --> 00:13:03,360
put into the the document before we we

334
00:13:03,360 --> 00:13:06,639
publish it as 1.1 um

335
00:13:06,639 --> 00:13:08,800
and the first thing is that there are

336
00:13:08,800 --> 00:13:10,480
some some editorial

337
00:13:10,480 --> 00:13:12,639
things id needs and so on but most

338
00:13:12,639 --> 00:13:15,360
importantly the id net

339
00:13:15,360 --> 00:13:17,760
that is a gaping hole is the ayanna

340
00:13:17,760 --> 00:13:19,839
consideration section for applications

341
00:13:19,839 --> 00:13:21,839
sdf plus json

342
00:13:21,839 --> 00:13:24,079
and because this implementation draft is

343
00:13:24,079 --> 00:13:25,600
probably what should be referenced from

344
00:13:25,600 --> 00:13:27,120
the media type

345
00:13:27,120 --> 00:13:28,880
registry it would be really good to have

346
00:13:28,880 --> 00:13:30,800
that ayanna considerations

347
00:13:30,800 --> 00:13:33,040
section in there now so you we can go

348
00:13:33,040 --> 00:13:34,079
through all the

349
00:13:34,079 --> 00:13:36,720
generations of getting an earlier

350
00:13:36,720 --> 00:13:38,160
location

351
00:13:38,160 --> 00:13:44,000
and so on next so i proposed

352
00:13:44,240 --> 00:13:47,600
no go back

353
00:13:47,600 --> 00:13:50,320
uh i propose that that we apply this

354
00:13:50,320 --> 00:13:51,760
pull request

355
00:13:51,760 --> 00:13:54,959
the second pull request came out of an

356
00:13:54,959 --> 00:13:56,399
observation last week in in the

357
00:13:56,399 --> 00:13:58,320
hackathon that that is

358
00:13:58,320 --> 00:14:00,639
if you actually compose sdf from from

359
00:14:00,639 --> 00:14:01,600
various pieces

360
00:14:01,600 --> 00:14:03,920
which is something that that people in

361
00:14:03,920 --> 00:14:05,839
the tool space want to do

362
00:14:05,839 --> 00:14:08,800
um it's really onerous that the the info

363
00:14:08,800 --> 00:14:10,320
block is

364
00:14:10,320 --> 00:14:13,519
required part of the syntax

365
00:14:13,519 --> 00:14:15,600
because when you have these various

366
00:14:15,600 --> 00:14:18,240
pieces and and have them coming together

367
00:14:18,240 --> 00:14:20,160
you have several info blocks and the

368
00:14:20,160 --> 00:14:22,079
tool that is combining the pieces

369
00:14:22,079 --> 00:14:24,480
which otherwise is a relatively simple

370
00:14:24,480 --> 00:14:25,120
thing

371
00:14:25,120 --> 00:14:28,079
has to combine the info blocks and in

372
00:14:28,079 --> 00:14:28,959
particular

373
00:14:28,959 --> 00:14:31,279
since people are going to put dummy info

374
00:14:31,279 --> 00:14:32,639
blocks with

375
00:14:32,639 --> 00:14:35,680
empty strings or tbd's or whatever

376
00:14:35,680 --> 00:14:37,440
you actually have to write code to

377
00:14:37,440 --> 00:14:39,519
discard the dummy

378
00:14:39,519 --> 00:14:43,519
info blocks and even though the policy

379
00:14:43,519 --> 00:14:46,480
to have an info block is certainly

380
00:14:46,480 --> 00:14:47,920
something that we want to have

381
00:14:47,920 --> 00:14:50,959
in in in 1dm and other places the the

382
00:14:50,959 --> 00:14:51,920
mechanism

383
00:14:51,920 --> 00:14:54,240
uh really gets in the way when when you

384
00:14:54,240 --> 00:14:55,360
are building

385
00:14:55,360 --> 00:14:58,560
uh sdf files from pieces so

386
00:14:58,560 --> 00:15:01,600
pull request 24 makes the info blog

387
00:15:01,600 --> 00:15:02,240
optional

388
00:15:02,240 --> 00:15:04,720
and adds some text there that explains

389
00:15:04,720 --> 00:15:05,760
this is

390
00:15:05,760 --> 00:15:08,800
not meant to to make it optional in in

391
00:15:08,800 --> 00:15:10,160
the

392
00:15:10,160 --> 00:15:12,880
sense of a policy but it's just a change

393
00:15:12,880 --> 00:15:14,000
in the mechanism to

394
00:15:14,000 --> 00:15:17,760
to simplify writing to it

395
00:15:17,760 --> 00:15:19,680
and we have had a side discussion on on

396
00:15:19,680 --> 00:15:20,800
whether the

397
00:15:20,800 --> 00:15:22,320
just making the whole info block

398
00:15:22,320 --> 00:15:24,079
optional is enough and we

399
00:15:24,079 --> 00:15:28,000
we want to maybe make individual entries

400
00:15:28,000 --> 00:15:29,680
in the infobox optional

401
00:15:29,680 --> 00:15:32,160
i don't think that's needed but we we

402
00:15:32,160 --> 00:15:32,959
certainly can

403
00:15:32,959 --> 00:15:35,680
can discuss that uh we just should come

404
00:15:35,680 --> 00:15:37,759
to a conclusion really quickly

405
00:15:37,759 --> 00:15:40,880
on this one and the the third

406
00:15:40,880 --> 00:15:43,759
pull request came out of a desire to

407
00:15:43,759 --> 00:15:45,360
finally define

408
00:15:45,360 --> 00:15:48,560
a scale minimum and scale maximum which

409
00:15:48,560 --> 00:15:49,600
has been

410
00:15:49,600 --> 00:15:53,680
in the sdf spec since may 2020

411
00:15:53,680 --> 00:15:56,720
but never was really defined uh so

412
00:15:56,720 --> 00:15:59,920
it existed as as an idea in in michael

413
00:15:59,920 --> 00:16:01,839
costa's head but

414
00:16:01,839 --> 00:16:04,160
uh and maybe he had told a few people so

415
00:16:04,160 --> 00:16:05,519
that they had something in their heads

416
00:16:05,519 --> 00:16:06,399
as well

417
00:16:06,399 --> 00:16:08,000
uh but we didn't actually write this

418
00:16:08,000 --> 00:16:10,720
down um so we actually did this

419
00:16:10,720 --> 00:16:13,920
and this led to pull request 22

420
00:16:13,920 --> 00:16:16,800
uh but then with with further work on on

421
00:16:16,800 --> 00:16:17,360
these

422
00:16:17,360 --> 00:16:22,320
um qualities um it actually turns out

423
00:16:22,320 --> 00:16:24,480
these things don't work the way they

424
00:16:24,480 --> 00:16:25,920
should

425
00:16:25,920 --> 00:16:27,839
so at the time when when scale minsky

426
00:16:27,839 --> 00:16:29,600
max were invented

427
00:16:29,600 --> 00:16:32,320
at the beginning of last year we hadn't

428
00:16:32,320 --> 00:16:34,480
really thought about

429
00:16:34,480 --> 00:16:37,680
combining models and mapping files

430
00:16:37,680 --> 00:16:40,000
uh so the the compositional aspect of

431
00:16:40,000 --> 00:16:41,519
these qualities

432
00:16:41,519 --> 00:16:44,720
uh wasn't really in in the focus

433
00:16:44,720 --> 00:16:47,440
uh so there was a lot of design space

434
00:16:47,440 --> 00:16:49,680
and and uh this gaming scale max used

435
00:16:49,680 --> 00:16:50,079
one

436
00:16:50,079 --> 00:16:52,240
one corner of the design space that

437
00:16:52,240 --> 00:16:53,279
actually is not the

438
00:16:53,279 --> 00:16:55,360
the right way to support combining

439
00:16:55,360 --> 00:16:56,800
models and mappings

440
00:16:56,800 --> 00:16:58,639
so i have some some detailed slides on

441
00:16:58,639 --> 00:17:00,160
on that uh later if

442
00:17:00,160 --> 00:17:03,360
there are questions i can explain those

443
00:17:03,360 --> 00:17:04,240
slides uh

444
00:17:04,240 --> 00:17:06,000
uh beforehand but i think that the main

445
00:17:06,000 --> 00:17:07,760
observation here is

446
00:17:07,760 --> 00:17:10,400
um we we have invented something new the

447
00:17:10,400 --> 00:17:11,119
mapping thing

448
00:17:11,119 --> 00:17:13,199
and it turns out what the other thing

449
00:17:13,199 --> 00:17:14,720
that we never

450
00:17:14,720 --> 00:17:18,559
got around to fully describing uh uh

451
00:17:18,559 --> 00:17:22,079
actually do what we want so since we

452
00:17:22,079 --> 00:17:25,919
we won't get this fixed before we make

453
00:17:25,919 --> 00:17:27,919
1.1 stable

454
00:17:27,919 --> 00:17:31,200
the best option is is probably to

455
00:17:31,200 --> 00:17:34,000
deprecate them so formally to say these

456
00:17:34,000 --> 00:17:35,120
are

457
00:17:35,120 --> 00:17:38,559
in sdf 1.0 but not in sdf 1.1

458
00:17:38,559 --> 00:17:40,880
and that's okay because the models that

459
00:17:40,880 --> 00:17:42,080
are in the 1dm

460
00:17:42,080 --> 00:17:45,039
playground also are not using this yet

461
00:17:45,039 --> 00:17:46,960
which is not not surprising because it

462
00:17:46,960 --> 00:17:48,640
wasn't fully defined

463
00:17:48,640 --> 00:17:51,520
um michael has some some pull requests

464
00:17:51,520 --> 00:17:53,360
that actually do use

465
00:17:53,360 --> 00:17:55,919
this and then the first one.next

466
00:17:55,919 --> 00:17:57,840
activity then will be

467
00:17:57,840 --> 00:18:01,120
uh coming up with the right quality

468
00:18:01,120 --> 00:18:02,960
so that these pull requests can be

469
00:18:02,960 --> 00:18:05,440
appropriately modified and and they do

470
00:18:05,440 --> 00:18:08,640
uh what we want but for sdf 1.1 uh we

471
00:18:08,640 --> 00:18:10,480
essentially should stop pretending that

472
00:18:10,480 --> 00:18:12,640
these qualities are there because they

473
00:18:12,640 --> 00:18:15,200
they haven't been fully defined and in

474
00:18:15,200 --> 00:18:19,280
one dot next we we can put them in again

475
00:18:19,440 --> 00:18:22,559
so that's a summary of the three pull

476
00:18:22,559 --> 00:18:24,400
requests

477
00:18:24,400 --> 00:18:27,919
so none of these actually change the the

478
00:18:27,919 --> 00:18:29,120
format in the sense

479
00:18:29,120 --> 00:18:32,720
that the tools that are creating

480
00:18:32,720 --> 00:18:35,919
uh and and consuming sdf uh

481
00:18:35,919 --> 00:18:38,640
have to uh change well okay they may

482
00:18:38,640 --> 00:18:39,919
have to cope with an

483
00:18:39,919 --> 00:18:41,280
optional info section but that's

484
00:18:41,280 --> 00:18:43,039
probably not very onerous

485
00:18:43,039 --> 00:18:45,440
but otherwise there is no change in in

486
00:18:45,440 --> 00:18:46,480
the

487
00:18:46,480 --> 00:18:48,960
format and that's why we actually can

488
00:18:48,960 --> 00:18:50,960
merge this before publishing or for

489
00:18:50,960 --> 00:18:56,000
without creating instability

490
00:18:56,000 --> 00:18:57,360
and i think this would be a good point

491
00:18:57,360 --> 00:19:11,840
to have a little bit of discussion

492
00:19:12,960 --> 00:19:16,480
i think you're speaking too mute

493
00:19:19,280 --> 00:19:22,720
sorry sorry uh

494
00:19:22,720 --> 00:19:25,039
i was on you to keep you from hearing my

495
00:19:25,039 --> 00:19:27,039
drinking

496
00:19:27,039 --> 00:19:29,120
no carson but i was willing to wait

497
00:19:29,120 --> 00:19:31,280
about the the merging issues with the

498
00:19:31,280 --> 00:19:32,080
scale min

499
00:19:32,080 --> 00:19:34,160
maximum but i think you said you have

500
00:19:34,160 --> 00:19:39,840
slides later on for that

501
00:19:45,760 --> 00:19:48,400
if people want that we can just continue

502
00:19:48,400 --> 00:19:49,360
in the agenda

503
00:19:49,360 --> 00:19:52,640
and it's like 10 slides on and

504
00:19:52,640 --> 00:19:56,640
then come back to this

505
00:19:56,640 --> 00:19:59,679
or we we could just uh

506
00:19:59,679 --> 00:20:03,520
go ahead now

507
00:20:03,520 --> 00:20:07,840
so are you

508
00:20:08,320 --> 00:20:10,720
okay so maybe a quick comment on all

509
00:20:10,720 --> 00:20:12,240
this i guess the first one

510
00:20:12,240 --> 00:20:15,280
is rather obvious um let's just

511
00:20:15,280 --> 00:20:17,520
do it and just the following two are the

512
00:20:17,520 --> 00:20:20,159
one maybe a bit more discussion

513
00:20:20,159 --> 00:20:24,400
um and on the on on the info block um

514
00:20:24,400 --> 00:20:27,280
yeah i mean as carson pointed out i mean

515
00:20:27,280 --> 00:20:28,480
it's um

516
00:20:28,480 --> 00:20:30,960
it's currently it's there you always

517
00:20:30,960 --> 00:20:32,080
need to have it it's a bit

518
00:20:32,080 --> 00:20:34,799
onerous uh when you're doing these

519
00:20:34,799 --> 00:20:36,320
models and then especially if it's full

520
00:20:36,320 --> 00:20:37,840
of dvds

521
00:20:37,840 --> 00:20:41,039
um handling those knowing when it when

522
00:20:41,039 --> 00:20:42,720
it actually is something

523
00:20:42,720 --> 00:20:44,480
you should be consuming and when it's

524
00:20:44,480 --> 00:20:47,120
not it seems to be that the reasonable

525
00:20:47,120 --> 00:20:48,400
thing to be is to have it

526
00:20:48,400 --> 00:20:51,440
optional and then when it is actually

527
00:20:51,440 --> 00:20:53,679
properly needed you know you can have

528
00:20:53,679 --> 00:20:54,640
your schema

529
00:20:54,640 --> 00:20:56,080
require it for example when you're

530
00:20:56,080 --> 00:20:57,919
contributing to the models to the

531
00:20:57,919 --> 00:21:00,960
to the world to be to be used uh so i

532
00:21:00,960 --> 00:21:02,480
think they're

533
00:21:02,480 --> 00:21:04,960
making it optional makes sense but i

534
00:21:04,960 --> 00:21:05,760
don't have a

535
00:21:05,760 --> 00:21:08,320
strong opinion on that and the scale

536
00:21:08,320 --> 00:21:09,200
mean max maybe

537
00:21:09,200 --> 00:21:13,200
it's good to discuss with the with the

538
00:21:14,840 --> 00:21:17,840
details

539
00:21:17,840 --> 00:21:20,240
so one observation is that there is an

540
00:21:20,240 --> 00:21:21,280
uh

541
00:21:21,280 --> 00:21:24,559
sdf linter that that we use

542
00:21:24,559 --> 00:21:27,919
to run the the playground through and so

543
00:21:27,919 --> 00:21:28,799
on

544
00:21:28,799 --> 00:21:31,360
and that would be a tool that actually

545
00:21:31,360 --> 00:21:33,120
makes this required

546
00:21:33,120 --> 00:21:34,960
because we don't want to have what is in

547
00:21:34,960 --> 00:21:36,320
the playground where we don't know the

548
00:21:36,320 --> 00:21:38,559
license or who made that uh

549
00:21:38,559 --> 00:21:41,600
which version it is so the the linter

550
00:21:41,600 --> 00:21:43,520
doesn't necessarily have to do exactly

551
00:21:43,520 --> 00:21:45,520
the same thing that the grammar

552
00:21:45,520 --> 00:21:48,880
does okay i see michael koster on the

553
00:21:48,880 --> 00:21:51,120
queue

554
00:21:56,840 --> 00:21:58,720
michael

555
00:21:58,720 --> 00:22:01,360
oh michael i'm unmuted okay but i'm

556
00:22:01,360 --> 00:22:02,559
still in the cube okay

557
00:22:02,559 --> 00:22:05,919
uh i can think of something there we go

558
00:22:05,919 --> 00:22:08,799
um so a couple of comments on the uh i

559
00:22:08,799 --> 00:22:09,440
mean i have more

560
00:22:09,440 --> 00:22:11,840
comments on the scale stuff but we'll

561
00:22:11,840 --> 00:22:12,960
get into that later

562
00:22:12,960 --> 00:22:16,880
um on the info block it seems like it

563
00:22:16,880 --> 00:22:17,200
might

564
00:22:17,200 --> 00:22:19,440
there's one useful feature that is a

565
00:22:19,440 --> 00:22:21,360
version which sort of advances with the

566
00:22:21,360 --> 00:22:24,000
date which is a pretty simple thing that

567
00:22:24,000 --> 00:22:25,919
might be useful in the tool but the main

568
00:22:25,919 --> 00:22:28,320
thing i wanted to point out was that

569
00:22:28,320 --> 00:22:31,280
during the early work in 1dm we wanted a

570
00:22:31,280 --> 00:22:32,080
way to

571
00:22:32,080 --> 00:22:34,640
track everybody's contribution as we

572
00:22:34,640 --> 00:22:35,120
merged

573
00:22:35,120 --> 00:22:37,600
models so the copyright would contain

574
00:22:37,600 --> 00:22:38,960
some sort of

575
00:22:38,960 --> 00:22:42,159
list of all the contributors and so

576
00:22:42,159 --> 00:22:44,240
there's a there's a bit of the process

577
00:22:44,240 --> 00:22:45,679
in the playground that we haven't really

578
00:22:45,679 --> 00:22:46,960
worked out about

579
00:22:46,960 --> 00:22:49,280
copyright tracking and and for the

580
00:22:49,280 --> 00:22:50,559
license but since it's

581
00:22:50,559 --> 00:22:53,840
gpl i mean so sorry since it's bsd

582
00:22:53,840 --> 00:22:57,280
three clause it's not super important

583
00:22:57,280 --> 00:23:00,240
um well i guess it is because that it

584
00:23:00,240 --> 00:23:02,400
says that copyrights would be tracked so

585
00:23:02,400 --> 00:23:04,880
there is a question about you know who

586
00:23:04,880 --> 00:23:06,960
owns the copyright of the merged model

587
00:23:06,960 --> 00:23:07,200
and

588
00:23:07,200 --> 00:23:09,440
and how that gets tracked through the

589
00:23:09,440 --> 00:23:11,039
one dm process

590
00:23:11,039 --> 00:23:13,360
but what we need extensive support in

591
00:23:13,360 --> 00:23:15,440
sdf for that or not

592
00:23:15,440 --> 00:23:17,360
it seems like still an optional info

593
00:23:17,360 --> 00:23:20,840
block doesn't really get in the way of

594
00:23:20,840 --> 00:23:22,880
that

595
00:23:22,880 --> 00:23:25,919
uh i um i think that's a good point

596
00:23:25,919 --> 00:23:29,840
um and i agree that maybe we don't

597
00:23:29,840 --> 00:23:32,799
i mean i think this is probably i guess

598
00:23:32,799 --> 00:23:34,400
the problem here is that if we keep it

599
00:23:34,400 --> 00:23:35,280
the way as this

600
00:23:35,280 --> 00:23:37,360
i i guess that there is not really spec

601
00:23:37,360 --> 00:23:39,679
support to actually do the kind of

602
00:23:39,679 --> 00:23:42,720
merging of copyrights and and merging of

603
00:23:42,720 --> 00:23:44,240
licenses and so on

604
00:23:44,240 --> 00:23:45,760
and how to actually process that and

605
00:23:45,760 --> 00:23:48,000
that is probably something that takes a

606
00:23:48,000 --> 00:23:50,000
bit of investigation to get that right

607
00:23:50,000 --> 00:23:53,120
to make it useful i mean

608
00:23:53,279 --> 00:23:56,480
and because probably one

609
00:23:56,480 --> 00:23:58,000
interesting thing here would of course

610
00:23:58,000 --> 00:24:01,520
be this kind of machine readable

611
00:24:01,520 --> 00:24:04,559
license and terms of use

612
00:24:04,559 --> 00:24:08,720
mechanism um

613
00:24:09,039 --> 00:24:12,320
but that that sounds like that requires

614
00:24:12,320 --> 00:24:16,840
a bit more work um actually

615
00:24:16,840 --> 00:24:21,279
uh so the question here is really

616
00:24:21,279 --> 00:24:25,279
do we i mean we can either

617
00:24:25,279 --> 00:24:27,760
we can either so if we keep take it from

618
00:24:27,760 --> 00:24:30,159
the top here right the first one is is

619
00:24:30,159 --> 00:24:31,679
reasonably simple the second one

620
00:24:31,679 --> 00:24:33,919
obviously has some aspects to it

621
00:24:33,919 --> 00:24:35,760
there was a reason why this was made

622
00:24:35,760 --> 00:24:37,919
mandatory from the starts

623
00:24:37,919 --> 00:24:40,880
uh but maybe for now it's not so doesn't

624
00:24:40,880 --> 00:24:42,640
really break anything

625
00:24:42,640 --> 00:24:47,840
um the third one is is

626
00:24:48,000 --> 00:24:51,279
technically more complicated but so it's

627
00:24:51,279 --> 00:24:52,080
more of a time

628
00:24:52,080 --> 00:24:54,559
but it's not not unsolvable but it takes

629
00:24:54,559 --> 00:24:55,520
more time to

630
00:24:55,520 --> 00:24:58,240
spec it out

631
00:24:59,440 --> 00:25:01,679
i um we can take the discussion now or i

632
00:25:01,679 --> 00:25:04,159
or i think i would rather say that we

633
00:25:04,159 --> 00:25:06,480
we postpone that discussion until sdf

634
00:25:06,480 --> 00:25:08,400
next and sort it out in the next major

635
00:25:08,400 --> 00:25:09,279
version

636
00:25:09,279 --> 00:25:12,400
since this is not needed right now um

637
00:25:12,400 --> 00:25:16,000
and then we get it right in sdf next

638
00:25:16,000 --> 00:25:18,240
um but that's my proposed way of

639
00:25:18,240 --> 00:25:19,440
handling this

640
00:25:19,440 --> 00:25:21,760
so so we can basically finish this sdf

641
00:25:21,760 --> 00:25:22,799
one one now

642
00:25:22,799 --> 00:25:24,880
wrap it up and have have something

643
00:25:24,880 --> 00:25:26,240
robust there because otherwise i think

644
00:25:26,240 --> 00:25:28,880
we'll be stuck in this

645
00:25:28,880 --> 00:25:31,200
cycle of finding problems and solving

646
00:25:31,200 --> 00:25:32,640
them and finding problem new problems

647
00:25:32,640 --> 00:25:34,240
and never get anything

648
00:25:34,240 --> 00:25:38,080
uh wrapped up uh but of course i'm open

649
00:25:38,080 --> 00:25:38,320
to

650
00:25:38,320 --> 00:25:43,840
two opinions here so um

651
00:25:50,559 --> 00:25:52,480
i'm just looking at the polar request

652
00:25:52,480 --> 00:25:54,159
itself and um

653
00:25:54,159 --> 00:25:56,480
it's rather sweet it just you know makes

654
00:25:56,480 --> 00:25:57,600
it optional

655
00:25:57,600 --> 00:25:59,679
and i think winter i think said it right

656
00:25:59,679 --> 00:26:01,520
although not a syntax error a warning

657
00:26:01,520 --> 00:26:02,880
should be given that this block is

658
00:26:02,880 --> 00:26:03,840
missing

659
00:26:03,840 --> 00:26:06,240
that sounds like i think what what what

660
00:26:06,240 --> 00:26:08,240
carson was saying about the lint versus

661
00:26:08,240 --> 00:26:10,960
the validity um

662
00:26:10,960 --> 00:26:13,760
so it sounds to me that the copyright

663
00:26:13,760 --> 00:26:15,440
issue is a bigger issue

664
00:26:15,440 --> 00:26:18,400
and that actually what we need is um

665
00:26:18,400 --> 00:26:20,080
some rules about combining

666
00:26:20,080 --> 00:26:23,279
infoblox if they are

667
00:26:23,279 --> 00:26:26,480
and present felt like sdf next to upper

668
00:26:26,480 --> 00:26:28,799
issue

669
00:26:30,159 --> 00:26:32,400
and actually it's a direct problem

670
00:26:32,400 --> 00:26:34,159
because when you get to this composition

671
00:26:34,159 --> 00:26:35,840
of objects into things

672
00:26:35,840 --> 00:26:40,320
there you have it right away so and

673
00:26:40,720 --> 00:26:43,039
i think that's a much bigger problem too

674
00:26:43,039 --> 00:26:45,600
i i i don't know but i mean i guess it's

675
00:26:45,600 --> 00:26:48,240
a bigger problem

676
00:26:51,520 --> 00:26:53,600
we're not making optional doesn't

677
00:26:53,600 --> 00:26:54,880
doesn't doesn't

678
00:26:54,880 --> 00:26:57,679
eliminate our how if it's present how do

679
00:26:57,679 --> 00:26:58,559
you merge

680
00:26:58,559 --> 00:27:00,960
merge it which i think part of the

681
00:27:00,960 --> 00:27:01,760
discussion

682
00:27:01,760 --> 00:27:05,120
was about um and so

683
00:27:05,120 --> 00:27:07,360
um whether it's in whether it's optional

684
00:27:07,360 --> 00:27:08,960
or not you still have to solve that as a

685
00:27:08,960 --> 00:27:10,240
separate problem and that's what i'm

686
00:27:10,240 --> 00:27:12,240
hearing is people are concerned

687
00:27:12,240 --> 00:27:14,240
that if it's optional that we would lose

688
00:27:14,240 --> 00:27:16,080
the copyright information and the

689
00:27:16,080 --> 00:27:18,480
contribute contributor information but

690
00:27:18,480 --> 00:27:21,120
if someone has put that info block there

691
00:27:21,120 --> 00:27:24,399
then it's not it's it's it's there

692
00:27:24,399 --> 00:27:26,159
we still have to kind of figure out how

693
00:27:26,159 --> 00:27:28,480
to annoy it so carson did you just post

694
00:27:28,480 --> 00:27:29,360
a new issue

695
00:27:29,360 --> 00:27:31,440
is that what you're you're 26 is about

696
00:27:31,440 --> 00:27:32,960
yeah so you just captured that that's

697
00:27:32,960 --> 00:27:35,840
wonderful thank you

698
00:27:43,360 --> 00:27:45,919
but assuming that we keep one and two as

699
00:27:45,919 --> 00:27:47,120
we do as

700
00:27:47,120 --> 00:27:49,840
as

701
00:27:51,520 --> 00:27:53,520
as we said here the question is do we

702
00:27:53,520 --> 00:27:56,550
want to add additional things on on

703
00:27:56,550 --> 00:27:58,480
[Music]

704
00:27:58,480 --> 00:28:01,120
the scale main and max do we want to do

705
00:28:01,120 --> 00:28:02,080
anything there

706
00:28:02,080 --> 00:28:05,679
in sdf one one now or do we want to

707
00:28:05,679 --> 00:28:07,840
i mean or do we rather want to wait

708
00:28:07,840 --> 00:28:10,640
we'll stand in sdf next

709
00:28:10,640 --> 00:28:13,039
all right

710
00:28:14,159 --> 00:28:16,640
yeah they got michael made a good point

711
00:28:16,640 --> 00:28:17,760
about the

712
00:28:17,760 --> 00:28:19,200
uh we would deal with the deal with

713
00:28:19,200 --> 00:28:21,279
merging the contents

714
00:28:21,279 --> 00:28:23,840
if they are there but maybe how we could

715
00:28:23,840 --> 00:28:24,640
look at it

716
00:28:24,640 --> 00:28:26,799
if it's optional now you have a way to

717
00:28:26,799 --> 00:28:28,480
indicate i don't have anything to say

718
00:28:28,480 --> 00:28:29,600
here

719
00:28:29,600 --> 00:28:31,440
but if it's required you don't have this

720
00:28:31,440 --> 00:28:33,520
mechanism you would have to put the dvds

721
00:28:33,520 --> 00:28:34,799
and then the code would have to figure

722
00:28:34,799 --> 00:28:36,960
out if that's that what should be there

723
00:28:36,960 --> 00:28:37,840
or not

724
00:28:37,840 --> 00:28:39,200
so in that sense it seems very

725
00:28:39,200 --> 00:28:41,200
reasonable to have it optional

726
00:28:41,200 --> 00:28:43,120
and if you have something useful to say

727
00:28:43,120 --> 00:28:44,320
say it if not

728
00:28:44,320 --> 00:28:46,799
leave it out

729
00:28:47,679 --> 00:28:49,840
um

730
00:28:52,960 --> 00:28:54,880
i don't know if either way you made it

731
00:28:54,880 --> 00:28:56,640
mandatory or optional

732
00:28:56,640 --> 00:29:00,240
if we should add something to the

733
00:29:00,240 --> 00:29:02,340
to the um

734
00:29:02,340 --> 00:29:04,080
[Music]

735
00:29:04,080 --> 00:29:06,240
to the specification text that this is

736
00:29:06,240 --> 00:29:08,080
currently not specified how you actually

737
00:29:08,080 --> 00:29:11,440
merge this and that will be sorted out

738
00:29:11,440 --> 00:29:16,559
so there are no rules yet um

739
00:29:17,440 --> 00:29:21,279
nothing merging at all so

740
00:29:21,279 --> 00:29:24,720
no exactly

741
00:29:24,720 --> 00:29:27,760
yeah michael sorry

742
00:29:27,760 --> 00:29:31,200
yeah um so i did want to point out that

743
00:29:31,200 --> 00:29:33,679
when we did have a few discussions about

744
00:29:33,679 --> 00:29:35,760
how the merging would be done

745
00:29:35,760 --> 00:29:38,480
and we didn't really this was um

746
00:29:38,480 --> 00:29:41,120
probably even maybe 2019

747
00:29:41,120 --> 00:29:43,600
because it was a face-to-face meeting

748
00:29:43,600 --> 00:29:45,279
and we never really

749
00:29:45,279 --> 00:29:47,600
uh came up with a pattern other than

750
00:29:47,600 --> 00:29:49,360
what we thought that when

751
00:29:49,360 --> 00:29:52,000
when a composite definition was created

752
00:29:52,000 --> 00:29:54,240
it would carry all of the copyrights and

753
00:29:54,240 --> 00:29:54,799
when a

754
00:29:54,799 --> 00:29:58,159
thing was created it could indicate

755
00:29:58,159 --> 00:29:58,559
which

756
00:29:58,559 --> 00:30:00,960
piece was going to which so it's not a

757
00:30:00,960 --> 00:30:03,600
simple answer at all and i think that

758
00:30:03,600 --> 00:30:05,919
the approach is correct and i agree with

759
00:30:05,919 --> 00:30:08,640
all of this that we don't really

760
00:30:08,640 --> 00:30:12,240
have to consider how it's done right now

761
00:30:12,240 --> 00:30:15,360
and i think to make it a sdf.next is

762
00:30:15,360 --> 00:30:16,559
fine

763
00:30:16,559 --> 00:30:21,039
and we we do have that more work to do

764
00:30:21,039 --> 00:30:24,480
and for now if you keep the copyright on

765
00:30:24,480 --> 00:30:25,679
an original

766
00:30:25,679 --> 00:30:27,919
source somewhere it can always be

767
00:30:27,919 --> 00:30:31,120
tracked back so we can have the tools be

768
00:30:31,120 --> 00:30:33,840
a little more loose about that and still

769
00:30:33,840 --> 00:30:34,559
have that

770
00:30:34,559 --> 00:30:36,559
original contribution especially if we

771
00:30:36,559 --> 00:30:38,640
have the contributor repos we can keep

772
00:30:38,640 --> 00:30:40,240
that copyright information

773
00:30:40,240 --> 00:30:43,120
and we can we can think about doing the

774
00:30:43,120 --> 00:30:44,799
tracking we haven't done it yet so we

775
00:30:44,799 --> 00:30:47,840
haven't made any mistakes

776
00:30:47,840 --> 00:30:49,200
and maybe there are more comments on

777
00:30:49,200 --> 00:30:51,279
this but i wanted to

778
00:30:51,279 --> 00:30:53,440
make a comment on the scale min and max

779
00:30:53,440 --> 00:30:54,559
first

780
00:30:54,559 --> 00:30:56,640
that uh models that use those will still

781
00:30:56,640 --> 00:30:58,559
validate as 1.0 which

782
00:30:58,559 --> 00:31:00,320
doesn't really mean they validate but it

783
00:31:00,320 --> 00:31:02,559
means that they have a way of being

784
00:31:02,559 --> 00:31:05,519
present without breaking things and

785
00:31:05,519 --> 00:31:06,799
still getting flagged as

786
00:31:06,799 --> 00:31:10,799
not being up to date they can also be

787
00:31:10,799 --> 00:31:14,159
experimented with as a protocol as a

788
00:31:14,159 --> 00:31:16,720
mapping file entry and we can talk a

789
00:31:16,720 --> 00:31:18,000
little bit more i have one slide

790
00:31:18,000 --> 00:31:21,440
about uh the scaling as mapping files so

791
00:31:21,440 --> 00:31:22,960
we can experiment with some of the

792
00:31:22,960 --> 00:31:24,480
patterns

793
00:31:24,480 --> 00:31:27,360
um having them in as extensions without

794
00:31:27,360 --> 00:31:27,760
as

795
00:31:27,760 --> 00:31:30,880
as you know custom extensions without

796
00:31:30,880 --> 00:31:33,120
having to

797
00:31:33,120 --> 00:31:34,960
you know change the validation because i

798
00:31:34,960 --> 00:31:36,640
think with custom extensions and

799
00:31:36,640 --> 00:31:38,559
one.next we're looking at things like

800
00:31:38,559 --> 00:31:39,679
having

801
00:31:39,679 --> 00:31:41,840
extension schemas that can validate just

802
00:31:41,840 --> 00:31:44,000
a piece of something that's an extension

803
00:31:44,000 --> 00:31:44,799
so if we do

804
00:31:44,799 --> 00:31:47,039
if we do some of that work this this

805
00:31:47,039 --> 00:31:49,120
experimentation with new features will

806
00:31:49,120 --> 00:31:50,720
get easier to do

807
00:31:50,720 --> 00:31:52,960
and maybe scaleman and max and the

808
00:31:52,960 --> 00:31:54,480
replacement for that

809
00:31:54,480 --> 00:32:01,840
can be our first uh test case

810
00:32:02,159 --> 00:32:06,480
yeah um

811
00:32:07,600 --> 00:32:10,959
so um i guess

812
00:32:11,200 --> 00:32:13,200
what we really need to have have have a

813
00:32:13,200 --> 00:32:14,640
disguise have a

814
00:32:14,640 --> 00:32:17,039
decision on here is if you want to do

815
00:32:17,039 --> 00:32:18,799
something before

816
00:32:18,799 --> 00:32:22,000
marking o4 with these changes

817
00:32:22,000 --> 00:32:26,000
as uh implementation draft

818
00:32:26,000 --> 00:32:29,360
and um on what basically

819
00:32:29,360 --> 00:32:31,360
we need to wrap up the call for

820
00:32:31,360 --> 00:32:33,039
consensus so there's a last call

821
00:32:33,039 --> 00:32:37,039
on this and what i

822
00:32:37,039 --> 00:32:41,279
hear is that while

823
00:32:41,279 --> 00:32:44,159
two and three here they are not um there

824
00:32:44,159 --> 00:32:45,279
are side effects

825
00:32:45,279 --> 00:32:48,480
by doing things and uh and

826
00:32:48,480 --> 00:32:51,279
lots of additional work is needed but

827
00:32:51,279 --> 00:32:51,840
maybe

828
00:32:51,840 --> 00:32:53,919
where we are now in this process it

829
00:32:53,919 --> 00:32:55,519
would work to

830
00:32:55,519 --> 00:32:59,600
to actually these changes um

831
00:32:59,600 --> 00:33:02,080
making info block optional and removing

832
00:33:02,080 --> 00:33:03,600
the scale max bin

833
00:33:03,600 --> 00:33:05,840
and that would not and then sort of get

834
00:33:05,840 --> 00:33:06,640
going at

835
00:33:06,640 --> 00:33:10,799
solving those problems in the next cycle

836
00:33:10,799 --> 00:33:16,000
is a good way forward um

837
00:33:16,080 --> 00:33:18,799
are there any

838
00:33:19,519 --> 00:33:22,720
objections to that are there any yeah

839
00:33:22,720 --> 00:33:26,559
we can do a poll of course um

840
00:33:26,799 --> 00:33:30,399
uh arif

841
00:33:31,519 --> 00:33:33,519
maybe one comment on the on the third

842
00:33:33,519 --> 00:33:34,720
one uh

843
00:33:34,720 --> 00:33:37,919
carson did you have more detailed slides

844
00:33:37,919 --> 00:33:38,480
coming

845
00:33:38,480 --> 00:33:41,679
on that aspect yes

846
00:33:41,679 --> 00:33:45,440
so maybe we could have that after

847
00:33:45,440 --> 00:33:48,480
the ball on that one after um

848
00:33:48,480 --> 00:33:50,640
that part and then do the one one and

849
00:33:50,640 --> 00:33:52,159
two i guess we don't have more

850
00:33:52,159 --> 00:33:53,440
more details because they are quite

851
00:33:53,440 --> 00:33:55,200
straightforward

852
00:33:55,200 --> 00:33:59,840
um do them as a simple poll okay

853
00:33:59,840 --> 00:34:02,000
okay then we'll do like this we will

854
00:34:02,000 --> 00:34:03,519
sort of at this point here

855
00:34:03,519 --> 00:34:05,760
say yeah one and two are ok no

856
00:34:05,760 --> 00:34:07,679
objections for those

857
00:34:07,679 --> 00:34:10,800
and then we will

858
00:34:12,000 --> 00:34:14,879
jump right to carson slides and scale

859
00:34:14,879 --> 00:34:16,239
mean max

860
00:34:16,239 --> 00:34:18,159
and go through them and after that

861
00:34:18,159 --> 00:34:19,679
directly we will

862
00:34:19,679 --> 00:34:22,159
jump back to this and make a decision go

863
00:34:22,159 --> 00:34:22,960
or no go

864
00:34:22,960 --> 00:34:27,040
as implementation draft

865
00:34:27,040 --> 00:34:35,839
are there any objections to that

866
00:34:37,199 --> 00:34:40,560
okay no objections or nothing

867
00:34:40,560 --> 00:34:45,440
good um can

868
00:34:47,119 --> 00:34:51,599
michael can you take us to um

869
00:34:51,599 --> 00:35:03,839
23 23.

870
00:35:05,119 --> 00:35:08,079
thank you this is uh a few slides that

871
00:35:08,079 --> 00:35:09,200
that actually

872
00:35:09,200 --> 00:35:12,160
describe what what we should be doing

873
00:35:12,160 --> 00:35:14,079
for one point next but of course they

874
00:35:14,079 --> 00:35:17,119
also contain information about 1.1

875
00:35:17,119 --> 00:35:20,160
um so basically um the the

876
00:35:20,160 --> 00:35:21,920
the important thing to keep in mind is

877
00:35:21,920 --> 00:35:24,480
that that sdf describes an information

878
00:35:24,480 --> 00:35:26,640
model so it's it's not

879
00:35:26,640 --> 00:35:30,320
meant to to give you a way to

880
00:35:30,320 --> 00:35:34,960
directly derive instances on the wire

881
00:35:34,960 --> 00:35:36,880
just from the information model you may

882
00:35:36,880 --> 00:35:39,119
have to add a mapping file or a protocol

883
00:35:39,119 --> 00:35:40,720
binding file or i think there are other

884
00:35:40,720 --> 00:35:42,480
words for these things

885
00:35:42,480 --> 00:35:45,119
um so that that's something that we want

886
00:35:45,119 --> 00:35:47,200
to understand how to do in one point

887
00:35:47,200 --> 00:35:48,000
next

888
00:35:48,000 --> 00:35:51,119
uh but sdf itself is is meant uh

889
00:35:51,119 --> 00:35:54,400
to to be the the converged combined

890
00:35:54,400 --> 00:35:55,680
information

891
00:35:55,680 --> 00:35:57,520
and different ecosystems or even

892
00:35:57,520 --> 00:35:59,200
different different implementations

893
00:35:59,200 --> 00:36:00,880
different instances

894
00:36:00,880 --> 00:36:02,240
may have different digital

895
00:36:02,240 --> 00:36:04,320
representations for the same

896
00:36:04,320 --> 00:36:06,000
information so the information model

897
00:36:06,000 --> 00:36:08,560
doesn't change but

898
00:36:08,560 --> 00:36:10,720
whether your temperature sensor goes to

899
00:36:10,720 --> 00:36:11,920
800 kevin

900
00:36:11,920 --> 00:36:15,920
or 1100 kevin maybe a difference

901
00:36:15,920 --> 00:36:19,119
from instance to instance um

902
00:36:19,119 --> 00:36:21,920
so the the the problem we we were having

903
00:36:21,920 --> 00:36:22,640
while we

904
00:36:22,640 --> 00:36:26,640
we discussed uh this uh during the last

905
00:36:26,640 --> 00:36:27,680
two weeks

906
00:36:27,680 --> 00:36:31,040
um was that uh there is kind of a

907
00:36:31,040 --> 00:36:33,040
perception all these jason schema all

908
00:36:33,040 --> 00:36:34,960
derived qualities

909
00:36:34,960 --> 00:36:37,599
describe the digital side so the actual

910
00:36:37,599 --> 00:36:40,640
interchange what's on the wire but

911
00:36:40,640 --> 00:36:43,040
that's actually not what we are doing we

912
00:36:43,040 --> 00:36:44,400
are borrowing those

913
00:36:44,400 --> 00:36:47,520
those qualities from json schema.org

914
00:36:47,520 --> 00:36:49,839
but they are not meant to describe the

915
00:36:49,839 --> 00:36:51,920
the actual underwire bits

916
00:36:51,920 --> 00:36:53,359
they are meant to describe the

917
00:36:53,359 --> 00:36:55,040
information model

918
00:36:55,040 --> 00:36:58,079
and that's generally a likely thing you

919
00:36:58,079 --> 00:37:00,400
will find that because there are

920
00:37:00,400 --> 00:37:03,680
a few good languages for describing

921
00:37:03,680 --> 00:37:05,280
information models that people

922
00:37:05,280 --> 00:37:08,640
are using ab using misusing

923
00:37:08,640 --> 00:37:11,040
uh data model uh specification

924
00:37:11,040 --> 00:37:12,160
techniques

925
00:37:12,160 --> 00:37:14,160
uh for information models and we are

926
00:37:14,160 --> 00:37:15,680
guilty of that too but

927
00:37:15,680 --> 00:37:17,200
i think it's not a problem as long as we

928
00:37:17,200 --> 00:37:19,200
stay conscious

929
00:37:19,200 --> 00:37:21,680
so um summary of this slide the the

930
00:37:21,680 --> 00:37:22,720
information model

931
00:37:22,720 --> 00:37:25,839
is about the physical side and the the

932
00:37:25,839 --> 00:37:26,320
actual

933
00:37:26,320 --> 00:37:30,160
quantities the the physics quantities

934
00:37:30,160 --> 00:37:32,480
and not about the the bits on the y next

935
00:37:32,480 --> 00:37:34,800
slide

936
00:37:34,960 --> 00:37:38,400
um so the when we add

937
00:37:38,400 --> 00:37:41,520
can you go to the next slide

938
00:37:43,520 --> 00:37:47,119
so when we add the scale minimum

939
00:37:47,119 --> 00:37:50,960
um side uh to the picture

940
00:37:50,960 --> 00:37:54,000
we get this really weird uh

941
00:37:54,000 --> 00:37:57,760
situation where the scale minimum pushes

942
00:37:57,760 --> 00:37:58,640
out

943
00:37:58,640 --> 00:38:00,960
minimum and maximum from the physical

944
00:38:00,960 --> 00:38:02,720
side to the digital

945
00:38:02,720 --> 00:38:06,560
uh side so either these things

946
00:38:06,560 --> 00:38:08,400
change their semantics based on the

947
00:38:08,400 --> 00:38:10,640
presence or the the absence

948
00:38:10,640 --> 00:38:15,200
um or yeah something is weird here

949
00:38:15,200 --> 00:38:19,680
and the sdf model really should be about

950
00:38:19,680 --> 00:38:22,400
the physical side i'm sorry if i'm

951
00:38:22,400 --> 00:38:23,680
repeating

952
00:38:23,680 --> 00:38:27,599
uh myself and the digital side should be

953
00:38:27,599 --> 00:38:30,960
described if it's really common so for

954
00:38:30,960 --> 00:38:33,440
instance if we had an

955
00:38:33,440 --> 00:38:37,680
sdf model for standard definition tv

956
00:38:37,680 --> 00:38:41,359
we could say the the scale minimum is

957
00:38:41,359 --> 00:38:44,320
excuse me the minimum is that the

958
00:38:44,320 --> 00:38:44,960
digital

959
00:38:44,960 --> 00:38:47,680
minimum is 16 and the digital maximum is

960
00:38:47,680 --> 00:38:48,560
239

961
00:38:48,560 --> 00:38:50,480
and and everybody would agree on that

962
00:38:50,480 --> 00:38:52,400
because that's a common characteristic

963
00:38:52,400 --> 00:38:56,480
of all senator definition tv

964
00:38:56,480 --> 00:39:00,079
formats but in in many cases that's not

965
00:39:00,079 --> 00:39:00,880
the case

966
00:39:00,880 --> 00:39:02,640
there is no single standard digital

967
00:39:02,640 --> 00:39:04,720
representation of of temperature

968
00:39:04,720 --> 00:39:06,720
uh reading so that that doesn't make

969
00:39:06,720 --> 00:39:08,560
sense on in the converged

970
00:39:08,560 --> 00:39:10,720
the model so normally we will leave the

971
00:39:10,720 --> 00:39:12,079
digital side

972
00:39:12,079 --> 00:39:14,880
uh to the mapping file to the protocol

973
00:39:14,880 --> 00:39:15,599
binding so

974
00:39:15,599 --> 00:39:18,640
this picture is is wrong it

975
00:39:18,640 --> 00:39:21,599
hurts when you start uh putting together

976
00:39:21,599 --> 00:39:22,720
mapping information

977
00:39:22,720 --> 00:39:25,920
and and uh information

978
00:39:25,920 --> 00:39:28,960
um from the conversion model

979
00:39:28,960 --> 00:39:32,640
next slide please so just to give an

980
00:39:32,640 --> 00:39:34,400
example if we have a temperature sensor

981
00:39:34,400 --> 00:39:36,640
that goes from minus 50 to

982
00:39:36,640 --> 00:39:39,839
plus 150 degrees celsius

983
00:39:39,839 --> 00:39:43,920
uh then maybe uh oh the text is wrong

984
00:39:43,920 --> 00:39:47,359
um so then maybe if the sensor actually

985
00:39:47,359 --> 00:39:48,960
has one more

986
00:39:48,960 --> 00:39:51,920
uh uh digital uh one more digit after

987
00:39:51,920 --> 00:39:52,320
the

988
00:39:52,320 --> 00:39:55,680
the floating point

989
00:39:55,680 --> 00:39:58,799
comma right

990
00:39:59,200 --> 00:40:01,200
it says centicare and then should should

991
00:40:01,200 --> 00:40:03,040
say deci carrots

992
00:40:03,040 --> 00:40:05,599
then the digital number might go from

993
00:40:05,599 --> 00:40:08,400
-500 to plus 1500

994
00:40:08,400 --> 00:40:10,480
or might be offset from that but this is

995
00:40:10,480 --> 00:40:12,400
just just the example

996
00:40:12,400 --> 00:40:15,440
um so in in an sdf specification for

997
00:40:15,440 --> 00:40:17,599
this you would set minimum and maximum

998
00:40:17,599 --> 00:40:18,000
to

999
00:40:18,000 --> 00:40:21,520
to minus 500 and plus 1500 because

1000
00:40:21,520 --> 00:40:23,359
that's what what people think these

1001
00:40:23,359 --> 00:40:25,359
jason schema org

1002
00:40:25,359 --> 00:40:27,599
qualities actually mean and you would

1003
00:40:27,599 --> 00:40:30,000
set scale minimum scale maximum to minus

1004
00:40:30,000 --> 00:40:32,560
50 and plus 150 with a unit

1005
00:40:32,560 --> 00:40:35,760
degree degree celsius

1006
00:40:35,760 --> 00:40:39,520
um so the the digital

1007
00:40:39,520 --> 00:40:42,720
numbers really should be supplied by the

1008
00:40:42,720 --> 00:40:43,680
mapping

1009
00:40:43,680 --> 00:40:47,680
info so you would uh yeah it's just

1010
00:40:47,680 --> 00:40:48,560
difficult to

1011
00:40:48,560 --> 00:40:52,000
to get all the the cases

1012
00:40:52,000 --> 00:40:54,079
right and really the question is which

1013
00:40:54,079 --> 00:40:56,560
side the digital or the physical side

1014
00:40:56,560 --> 00:40:59,599
gets the json schema org keywords

1015
00:40:59,599 --> 00:41:01,520
minimum and maximum

1016
00:41:01,520 --> 00:41:05,040
next slide so we looked a little bit

1017
00:41:05,040 --> 00:41:08,160
through the the playground and as i said

1018
00:41:08,160 --> 00:41:10,079
there is currently no scale minimum

1019
00:41:10,079 --> 00:41:11,440
scale maximum

1020
00:41:11,440 --> 00:41:14,560
um in there and people are

1021
00:41:14,560 --> 00:41:16,319
actually using minimum maximum for the

1022
00:41:16,319 --> 00:41:18,079
physical quantities

1023
00:41:18,079 --> 00:41:22,319
so in particular the ocf models clearly

1024
00:41:22,319 --> 00:41:25,680
are thinking about these as

1025
00:41:25,680 --> 00:41:28,319
uh describing the the physical

1026
00:41:28,319 --> 00:41:29,359
quantities

1027
00:41:29,359 --> 00:41:32,240
so we didn't complete the survey for all

1028
00:41:32,240 --> 00:41:34,480
200 something uh

1029
00:41:34,480 --> 00:41:37,599
models but the the conclusion from a

1030
00:41:37,599 --> 00:41:39,200
survey of the playground

1031
00:41:39,200 --> 00:41:42,000
uh was people are already using minimum

1032
00:41:42,000 --> 00:41:43,760
maximum for the physical side

1033
00:41:43,760 --> 00:41:46,160
so the the perception that they can be

1034
00:41:46,160 --> 00:41:48,000
on the digital side

1035
00:41:48,000 --> 00:41:51,440
actually is wrong there's one

1036
00:41:51,440 --> 00:41:54,560
minor issue here which is

1037
00:41:54,560 --> 00:41:58,400
that uh the json schema og stuff

1038
00:41:58,400 --> 00:42:00,400
probably wants to stay within the range

1039
00:42:00,400 --> 00:42:02,160
of things are that are

1040
00:42:02,160 --> 00:42:05,599
i json um

1041
00:42:05,599 --> 00:42:07,359
you don't have to take it this way but

1042
00:42:07,359 --> 00:42:09,839
people with people's implementations

1043
00:42:09,839 --> 00:42:13,119
uh uh will will want to do that

1044
00:42:13,119 --> 00:42:16,400
uh but uh actually actually 754 has been

1045
00:42:16,400 --> 00:42:18,480
designed so that that

1046
00:42:18,480 --> 00:42:20,640
uh for the physical quantities we care

1047
00:42:20,640 --> 00:42:22,640
about that's not a problem

1048
00:42:22,640 --> 00:42:25,520
so the ieee 754 has been done by

1049
00:42:25,520 --> 00:42:26,400
physicists and

1050
00:42:26,400 --> 00:42:29,200
they made sure that their quantities

1051
00:42:29,200 --> 00:42:32,160
actually can be described by a 64-bit uh

1052
00:42:32,160 --> 00:42:35,920
ieee 754 uh floating point

1053
00:42:35,920 --> 00:42:38,480
next slide carson just before we go to

1054
00:42:38,480 --> 00:42:40,960
the next slide so i think that the

1055
00:42:40,960 --> 00:42:44,240
adjacent schema or part has to do with

1056
00:42:44,240 --> 00:42:47,200
um for instance if you are trying to set

1057
00:42:47,200 --> 00:42:48,160
um

1058
00:42:48,160 --> 00:42:50,800
uh filters or other kind of constraints

1059
00:42:50,800 --> 00:42:52,720
you now have to set them on the

1060
00:42:52,720 --> 00:42:55,440
physical values rather than the digital

1061
00:42:55,440 --> 00:42:56,079
values

1062
00:42:56,079 --> 00:42:59,359
is that that the point

1063
00:42:59,359 --> 00:43:02,319
well the the the point is that people

1064
00:43:02,319 --> 00:43:04,480
have been using them for the physical

1065
00:43:04,480 --> 00:43:05,599
side

1066
00:43:05,599 --> 00:43:09,119
so that that's what we find in in models

1067
00:43:09,119 --> 00:43:11,280
so the the perception that they are

1068
00:43:11,280 --> 00:43:13,440
actually meant for the digital side

1069
00:43:13,440 --> 00:43:16,640
that only came in when we tried adding

1070
00:43:16,640 --> 00:43:18,720
scale minimum scale maximum because they

1071
00:43:18,720 --> 00:43:20,400
are on the physical side

1072
00:43:20,400 --> 00:43:22,960
so those gaming scale max are trying to

1073
00:43:22,960 --> 00:43:24,079
push out

1074
00:43:24,079 --> 00:43:27,280
minimum maximum from from their physical

1075
00:43:27,280 --> 00:43:29,359
position into the digital position and

1076
00:43:29,359 --> 00:43:31,200
that that's the dissonance that we have

1077
00:43:31,200 --> 00:43:32,400
here

1078
00:43:32,400 --> 00:43:36,240
right okay so yeah thank you

1079
00:43:36,240 --> 00:43:39,040
so um the the picture that i think we

1080
00:43:39,040 --> 00:43:41,200
should have for 1.1

1081
00:43:41,200 --> 00:43:44,480
um is having a big hole in in the

1082
00:43:44,480 --> 00:43:46,560
the part that might that's marked yellow

1083
00:43:46,560 --> 00:43:49,280
here or orange

1084
00:43:49,280 --> 00:43:52,480
and the the things that are defined in

1085
00:43:52,480 --> 00:43:52,800
in

1086
00:43:52,800 --> 00:43:56,480
sdf 1.1 are interpreted as

1087
00:43:56,480 --> 00:44:00,240
as being on the physical side

1088
00:44:00,240 --> 00:44:03,599
and we attack the whole

1089
00:44:03,599 --> 00:44:07,680
problem of digital mappings in one point

1090
00:44:07,680 --> 00:44:10,079
next maybe by adding digital minimum

1091
00:44:10,079 --> 00:44:11,520
digital maximum or

1092
00:44:11,520 --> 00:44:15,119
scale offset or both um we scale offset

1093
00:44:15,119 --> 00:44:16,520
are defined in

1094
00:44:16,520 --> 00:44:19,440
rfc8798

1095
00:44:19,440 --> 00:44:22,240
so sometimes the the one thing is the

1096
00:44:22,240 --> 00:44:23,760
right thing sometimes the other thing is

1097
00:44:23,760 --> 00:44:25,599
the right thing so probably we will

1098
00:44:25,599 --> 00:44:29,200
add both but we we can just uh cuss

1099
00:44:29,200 --> 00:44:31,119
this in in the development of one point

1100
00:44:31,119 --> 00:44:33,280
next

1101
00:44:33,280 --> 00:44:35,599
so that that's essentially my my summary

1102
00:44:35,599 --> 00:44:37,839
slide here and

1103
00:44:37,839 --> 00:44:40,880
this this makes clear what uh

1104
00:44:40,880 --> 00:44:42,880
we should do if you just jump quickly

1105
00:44:42,880 --> 00:44:44,560
through the next three slides

1106
00:44:44,560 --> 00:44:48,079
um i actually created some some slides

1107
00:44:48,079 --> 00:44:51,040
for what we have to do to do the other

1108
00:44:51,040 --> 00:44:53,599
thing and it's not something i want to

1109
00:44:53,599 --> 00:44:55,599
do before 1.1

1110
00:44:55,599 --> 00:45:00,000
and if you go back to

1111
00:45:00,000 --> 00:45:02,880
slide 27

1112
00:45:03,440 --> 00:45:05,920
so this is consistent this is the

1113
00:45:05,920 --> 00:45:07,520
described in sdf

1114
00:45:07,520 --> 00:45:10,640
today it's not really a change it's just

1115
00:45:10,640 --> 00:45:12,720
acknowledging that that pushing in

1116
00:45:12,720 --> 00:45:14,800
scheme in spam schemax

1117
00:45:14,800 --> 00:45:17,119
is creating problems that we don't have

1118
00:45:17,119 --> 00:45:18,000
to have

1119
00:45:18,000 --> 00:45:20,800
for 1.1

1120
00:45:22,810 --> 00:45:24,000
[Music]

1121
00:45:24,000 --> 00:45:27,839
okay thank you carson michael koster i

1122
00:45:27,839 --> 00:45:31,200
saw you had a bar on the queue there

1123
00:45:31,200 --> 00:45:34,000
thanks my my comment was that um in

1124
00:45:34,000 --> 00:45:35,680
thinking through this a little bit more

1125
00:45:35,680 --> 00:45:37,680
and looking at some of the examples

1126
00:45:37,680 --> 00:45:40,079
i think we have more discussion to do

1127
00:45:40,079 --> 00:45:41,040
but um

1128
00:45:41,040 --> 00:45:43,119
i think a hint a flavor of what i'm

1129
00:45:43,119 --> 00:45:44,160
thinking is

1130
00:45:44,160 --> 00:45:47,680
now um in sdf we have this

1131
00:45:47,680 --> 00:45:50,560
uh description of the physical quantity

1132
00:45:50,560 --> 00:45:51,839
so that's really scale

1133
00:45:51,839 --> 00:45:54,000
minimum and scale maximum i mean in an

1134
00:45:54,000 --> 00:45:56,079
ideal world i think what we'd have would

1135
00:45:56,079 --> 00:45:57,119
be

1136
00:45:57,119 --> 00:45:59,359
not not even confusing things again with

1137
00:45:59,359 --> 00:46:00,880
the json schema

1138
00:46:00,880 --> 00:46:02,960
because we we pretty much have a bit

1139
00:46:02,960 --> 00:46:04,160
different concept on

1140
00:46:04,160 --> 00:46:06,720
on both ends we're separating that the

1141
00:46:06,720 --> 00:46:08,160
number and in

1142
00:46:08,160 --> 00:46:11,920
an actual system we might have

1143
00:46:11,920 --> 00:46:16,079
the sdf file having let's just say

1144
00:46:16,079 --> 00:46:18,560
quantity minimum quantity maximum and

1145
00:46:18,560 --> 00:46:20,880
then the protocol binding might have a

1146
00:46:20,880 --> 00:46:22,319
data schema element

1147
00:46:22,319 --> 00:46:24,640
that would have json schema minimum and

1148
00:46:24,640 --> 00:46:26,720
maximum which would be digital minimum

1149
00:46:26,720 --> 00:46:29,040
and maximum but if i want to use it in a

1150
00:46:29,040 --> 00:46:31,119
jso validator i'm going to actually have

1151
00:46:31,119 --> 00:46:32,560
to feed it the string minimum and

1152
00:46:32,560 --> 00:46:33,760
maximum

1153
00:46:33,760 --> 00:46:35,839
so at some point it gets converted into

1154
00:46:35,839 --> 00:46:37,200
that

1155
00:46:37,200 --> 00:46:39,040
so anyway that's i don't really want to

1156
00:46:39,040 --> 00:46:40,240
i don't really have a

1157
00:46:40,240 --> 00:46:43,280
conclusion there it's just that maybe

1158
00:46:43,280 --> 00:46:46,720
even reusing jso for the physical is

1159
00:46:46,720 --> 00:46:49,200
um maybe we wouldn't really need to do

1160
00:46:49,200 --> 00:46:51,200
that and we can invent some new

1161
00:46:51,200 --> 00:46:53,839
terms for that but i think that's all uh

1162
00:46:53,839 --> 00:46:54,839
uh

1163
00:46:54,839 --> 00:46:57,839
sdf.next

1164
00:47:01,680 --> 00:47:05,839
okay thank you

1165
00:47:05,839 --> 00:47:11,839
yeah yeah i mean there's there is um

1166
00:47:17,440 --> 00:47:21,440
yeah i mean i i i still think that we

1167
00:47:21,440 --> 00:47:24,720
should do the would really like to have

1168
00:47:24,720 --> 00:47:27,200
sdf one one done right

1169
00:47:27,200 --> 00:47:30,319
and and carsten do you think that with

1170
00:47:30,319 --> 00:47:30,960
the change

1171
00:47:30,960 --> 00:47:33,200
you're proposing or when you and michael

1172
00:47:33,200 --> 00:47:34,319
propose

1173
00:47:34,319 --> 00:47:38,079
we are kind of um we can postpone

1174
00:47:38,079 --> 00:47:41,839
this problem on the sdf one uh next

1175
00:47:41,839 --> 00:47:43,359
and then everybody can be happy with

1176
00:47:43,359 --> 00:47:45,119
that

1177
00:47:45,119 --> 00:47:47,200
yeah so we are essentially not changing

1178
00:47:47,200 --> 00:47:49,680
the way people have been using these

1179
00:47:49,680 --> 00:47:51,760
things but we have gathered enough

1180
00:47:51,760 --> 00:47:53,280
information

1181
00:47:53,280 --> 00:47:54,960
where we want to take this in in the

1182
00:47:54,960 --> 00:47:57,520
next round

1183
00:47:59,440 --> 00:48:01,680
so

1184
00:48:02,559 --> 00:48:05,680
with that i suggest

1185
00:48:05,680 --> 00:48:07,960
should we make

1186
00:48:07,960 --> 00:48:10,720
[Music]

1187
00:48:10,720 --> 00:48:12,880
we can of course do a poll on this but

1188
00:48:12,880 --> 00:48:14,240
it seems like there has been no

1189
00:48:14,240 --> 00:48:15,599
objections so far

1190
00:48:15,599 --> 00:48:17,599
uh making this complex i don't think we

1191
00:48:17,599 --> 00:48:22,160
will get any substantial results um

1192
00:48:22,160 --> 00:48:25,280
or is there anyone who wants to

1193
00:48:25,280 --> 00:48:28,559
object to to just folding in

1194
00:48:28,559 --> 00:48:31,440
what kirsten originally proposed on

1195
00:48:31,440 --> 00:48:32,559
number three here

1196
00:48:32,559 --> 00:48:37,050
on on the scale max min and

1197
00:48:37,050 --> 00:48:39,040
[Music]

1198
00:48:39,040 --> 00:48:40,800
basically do these things there is some

1199
00:48:40,800 --> 00:48:43,740
bullets and then

1200
00:48:43,740 --> 00:48:44,960
[Music]

1201
00:48:44,960 --> 00:48:48,359
we can sort of with that wrap up

1202
00:48:48,359 --> 00:48:51,359
sdf-11

1203
00:48:52,000 --> 00:48:55,440
any objections to that

1204
00:48:56,240 --> 00:48:58,000
these are the final call for objections

1205
00:48:58,000 --> 00:49:00,800
for this so are there any objections

1206
00:49:00,800 --> 00:49:03,359
or need to discuss more please let me

1207
00:49:03,359 --> 00:49:05,520
know

1208
00:49:12,800 --> 00:49:16,880
okay good

1209
00:49:16,880 --> 00:49:20,480
then i think we are okay with the um

1210
00:49:20,480 --> 00:49:23,520
the three items here to to merge those

1211
00:49:23,520 --> 00:49:23,920
with

1212
00:49:23,920 --> 00:49:29,119
uh o3 publish o4 and then o4 will be the

1213
00:49:29,119 --> 00:49:31,510
implementation draft

1214
00:49:31,510 --> 00:49:34,819
[Music]

1215
00:49:35,520 --> 00:49:39,839
so that is the plan good

1216
00:49:39,839 --> 00:49:42,319
any final comments from anyone on this

1217
00:49:42,319 --> 00:49:44,000
because if not then we can move on with

1218
00:49:44,000 --> 00:49:45,119
this meeting

1219
00:49:45,119 --> 00:49:47,760
then we have an sdf one one uh very

1220
00:49:47,760 --> 00:49:50,559
close to being done

1221
00:49:52,960 --> 00:49:54,720
mileco needs to add a button where you

1222
00:49:54,720 --> 00:49:56,839
can make little hearts stream out like

1223
00:49:56,839 --> 00:49:58,110
on

1224
00:49:58,110 --> 00:50:00,800
[Laughter]

1225
00:50:00,800 --> 00:50:04,319
i was thinking that oh and we can un

1226
00:50:04,319 --> 00:50:05,760
under a github

1227
00:50:05,760 --> 00:50:08,319
comment github issue comment you can

1228
00:50:08,319 --> 00:50:09,040
make these

1229
00:50:09,040 --> 00:50:11,200
thumbs up and so on things and you

1230
00:50:11,200 --> 00:50:14,799
should be able to do this in midego

1231
00:50:15,119 --> 00:50:18,880
yeah click show friendly support button

1232
00:50:18,880 --> 00:50:21,680
i mean that's good

1233
00:50:23,359 --> 00:50:26,079
great thank you but then i think we are

1234
00:50:26,079 --> 00:50:27,119
done with this

1235
00:50:27,119 --> 00:50:30,800
um uh we have um

1236
00:50:30,800 --> 00:50:34,079
way forward for sdf one one and and we

1237
00:50:34,079 --> 00:50:35,839
are very close to wrapping it up that's

1238
00:50:35,839 --> 00:50:36,720
really good

1239
00:50:36,720 --> 00:50:38,720
when kirsten and michael when do you

1240
00:50:38,720 --> 00:50:40,880
think you can have a

1241
00:50:40,880 --> 00:50:44,000
04 under uh when you think we can

1242
00:50:44,000 --> 00:50:45,520
implement all these things

1243
00:50:45,520 --> 00:50:47,680
around dish well i think it will take

1244
00:50:47,680 --> 00:50:49,520
another hour or so

1245
00:50:49,520 --> 00:50:51,680
so i just merged the first two requests

1246
00:50:51,680 --> 00:50:53,440
merging the third one

1247
00:50:53,440 --> 00:50:55,920
and i probably will be distracted from

1248
00:50:55,920 --> 00:50:57,359
regenerating a version but

1249
00:50:57,359 --> 00:51:01,280
expect a dash of four in the next break

1250
00:51:01,280 --> 00:51:03,200
perfect thank you very much thank you

1251
00:51:03,200 --> 00:51:04,880
for doing all this

1252
00:51:04,880 --> 00:51:08,079
uh with that the next

1253
00:51:08,079 --> 00:51:11,200
uh thing for us is actually to discuss

1254
00:51:11,200 --> 00:51:15,119
where we go next uh wasn't there

1255
00:51:15,119 --> 00:51:17,440
um one thing on next we can take the

1256
00:51:17,440 --> 00:51:20,640
next entrance later wait

1257
00:51:20,839 --> 00:51:23,839
um yeah so uh

1258
00:51:23,839 --> 00:51:26,800
we as we said all the time here and we

1259
00:51:26,800 --> 00:51:29,119
said in the consensus call for one one

1260
00:51:29,119 --> 00:51:33,359
was that uh we definitely are looking to

1261
00:51:33,359 --> 00:51:35,520
add new features to

1262
00:51:35,520 --> 00:51:38,559
and sort of to make it really fully

1263
00:51:38,559 --> 00:51:39,359
baked when we

1264
00:51:39,359 --> 00:51:42,400
have a an rfc uh

1265
00:51:42,400 --> 00:51:45,760
in the not too far future and um as part

1266
00:51:45,760 --> 00:51:48,000
of that we have had discussions on what

1267
00:51:48,000 --> 00:51:48,960
new features

1268
00:51:48,960 --> 00:51:50,880
uh that would be relevant and what kind

1269
00:51:50,880 --> 00:51:53,200
of issues and i think we just came up

1270
00:51:53,200 --> 00:51:54,960
with this discussion on the info block

1271
00:51:54,960 --> 00:51:56,720
that is definitely something to include

1272
00:51:56,720 --> 00:51:57,520
and the

1273
00:51:57,520 --> 00:52:00,640
sdf max and so on uh it's a scale max

1274
00:52:00,640 --> 00:52:01,839
gallium scale mean

1275
00:52:01,839 --> 00:52:03,760
but in addition to that there were a

1276
00:52:03,760 --> 00:52:06,240
number of things that we had discussions

1277
00:52:06,240 --> 00:52:09,680
on uh last week in the um that have been

1278
00:52:09,680 --> 00:52:10,160
uh

1279
00:52:10,160 --> 00:52:12,720
cooking a bit in the background uh for

1280
00:52:12,720 --> 00:52:13,520
some time

1281
00:52:13,520 --> 00:52:16,559
and um so what we have here

1282
00:52:16,559 --> 00:52:19,200
uh that we go through today are

1283
00:52:19,200 --> 00:52:20,079
basically

1284
00:52:20,079 --> 00:52:23,200
um three topics that

1285
00:52:23,200 --> 00:52:26,800
should be probably be

1286
00:52:26,800 --> 00:52:31,280
included in a later version of sdf

1287
00:52:31,280 --> 00:52:33,440
uh clarification of properties actions

1288
00:52:33,440 --> 00:52:35,280
and events and michael will talk about

1289
00:52:35,280 --> 00:52:35,839
oh

1290
00:52:35,839 --> 00:52:38,720
sorry carson we'll talk about that uh we

1291
00:52:38,720 --> 00:52:39,920
will say if you

1292
00:52:39,920 --> 00:52:41,680
michael cluster will say if he was about

1293
00:52:41,680 --> 00:52:43,200
mapping files and then we have

1294
00:52:43,200 --> 00:52:45,280
a compact format which is another

1295
00:52:45,280 --> 00:52:47,920
representation of sdf

1296
00:52:47,920 --> 00:52:50,960
uh with that i think we can continue

1297
00:52:50,960 --> 00:52:54,720
we have over an hour left but maybe

1298
00:52:54,720 --> 00:52:56,319
i mean since we have a bunch of slides

1299
00:52:56,319 --> 00:52:59,359
um save some time at the end for

1300
00:52:59,359 --> 00:53:00,240
actually i think we should take

1301
00:53:00,240 --> 00:53:02,559
discussions after each topic for a

1302
00:53:02,559 --> 00:53:04,480
limited amount of time

1303
00:53:04,480 --> 00:53:07,520
uh so let's get going i think um and

1304
00:53:07,520 --> 00:53:09,599
then

1305
00:53:09,599 --> 00:53:12,240
uh maybe we should discuss the virtual

1306
00:53:12,240 --> 00:53:13,680
bin

1307
00:53:13,680 --> 00:53:15,599
actual the very end of our meeting here

1308
00:53:15,599 --> 00:53:18,000
so i will

1309
00:53:18,000 --> 00:53:20,079
yeah as we get close to the end we will

1310
00:53:20,079 --> 00:53:22,559
get back to

1311
00:53:22,559 --> 00:53:24,319
talking about when we will have our next

1312
00:53:24,319 --> 00:53:25,839
interview

1313
00:53:25,839 --> 00:53:29,359
uh so please next slide

1314
00:53:29,359 --> 00:53:32,800
and next slide and so here

1315
00:53:32,800 --> 00:53:36,079
carson please go ahead

1316
00:53:36,160 --> 00:53:39,200
right thank you um

1317
00:53:39,200 --> 00:53:42,319
so as as i said we had a lot of

1318
00:53:42,319 --> 00:53:45,839
discussions in in the last two weeks

1319
00:53:45,839 --> 00:53:49,040
starting from from the hackathon and

1320
00:53:49,040 --> 00:53:52,880
um i would like to go through

1321
00:53:52,880 --> 00:53:56,559
two issues here next slide please um

1322
00:53:56,559 --> 00:53:59,040
two areas of development these are not

1323
00:53:59,040 --> 00:54:00,880
issues these are just

1324
00:54:00,880 --> 00:54:03,520
things we need to keep in mind that we

1325
00:54:03,520 --> 00:54:05,520
need some active attention

1326
00:54:05,520 --> 00:54:08,319
uh on on them both in in the way that

1327
00:54:08,319 --> 00:54:09,119
that we

1328
00:54:09,119 --> 00:54:12,559
we interpret what we have in in 1.1

1329
00:54:12,559 --> 00:54:14,960
and in the way that we further develop

1330
00:54:14,960 --> 00:54:16,079
this in in

1331
00:54:16,079 --> 00:54:18,160
one point next so this is not about any

1332
00:54:18,160 --> 00:54:19,599
further text changes

1333
00:54:19,599 --> 00:54:22,480
uh this is about understanding uh what

1334
00:54:22,480 --> 00:54:23,680
we have

1335
00:54:23,680 --> 00:54:27,040
and and developing from from there

1336
00:54:27,040 --> 00:54:29,040
so we already talked about data items

1337
00:54:29,040 --> 00:54:30,160
versus physical

1338
00:54:30,160 --> 00:54:33,280
quantities i don't have to repeat that

1339
00:54:33,280 --> 00:54:35,440
so let me just talk about number one the

1340
00:54:35,440 --> 00:54:36,799
properties actions events

1341
00:54:36,799 --> 00:54:40,160
next slide please um so the

1342
00:54:40,160 --> 00:54:43,200
the summary information and it's

1343
00:54:43,200 --> 00:54:45,119
really the whole thing in one slide you

1344
00:54:45,119 --> 00:54:46,720
don't really need to know much more

1345
00:54:46,720 --> 00:54:47,839
about them

1346
00:54:47,839 --> 00:54:51,040
um is that that the property is is

1347
00:54:51,040 --> 00:54:54,319
an affordance that has

1348
00:54:54,319 --> 00:54:56,799
if writeable the ability to put in a

1349
00:54:56,799 --> 00:54:58,079
data value

1350
00:54:58,079 --> 00:55:01,040
and if readable and observable has the

1351
00:55:01,040 --> 00:55:03,119
ability to obtain to obtain

1352
00:55:03,119 --> 00:55:06,480
a data value and the the types

1353
00:55:06,480 --> 00:55:08,319
for putting in things and for for

1354
00:55:08,319 --> 00:55:10,000
pulling out things

1355
00:55:10,000 --> 00:55:13,119
um are the same

1356
00:55:13,119 --> 00:55:16,000
well at least right now they are i think

1357
00:55:16,000 --> 00:55:18,079
we all have experienced

1358
00:55:18,079 --> 00:55:21,119
the the situation where we actually

1359
00:55:21,119 --> 00:55:24,000
would have wanted to to have a different

1360
00:55:24,000 --> 00:55:25,440
type on a put

1361
00:55:25,440 --> 00:55:28,720
than on a get uh because

1362
00:55:28,720 --> 00:55:30,960
uh there is some information in the

1363
00:55:30,960 --> 00:55:32,160
structure

1364
00:55:32,160 --> 00:55:35,200
um that actually is only readable and

1365
00:55:35,200 --> 00:55:35,599
and

1366
00:55:35,599 --> 00:55:37,760
uh only parts are written and that's

1367
00:55:37,760 --> 00:55:39,119
maybe something we need to

1368
00:55:39,119 --> 00:55:41,920
look at in in the next version but uh

1369
00:55:41,920 --> 00:55:44,960
that's fundamentally what a property is

1370
00:55:44,960 --> 00:55:47,119
uh so how this reading and writing is

1371
00:55:47,119 --> 00:55:48,559
done whether that's done in a rest

1372
00:55:48,559 --> 00:55:49,200
protocol

1373
00:55:49,200 --> 00:55:51,599
or in a message queue and so on that's

1374
00:55:51,599 --> 00:55:52,480
not really the

1375
00:55:52,480 --> 00:55:54,319
the the interesting thing the

1376
00:55:54,319 --> 00:55:56,720
interesting thing is we have a state

1377
00:55:56,720 --> 00:55:59,440
that is associated with that a property

1378
00:55:59,440 --> 00:55:59,920
that

1379
00:55:59,920 --> 00:56:02,799
typically maps to a physical state in in

1380
00:56:02,799 --> 00:56:04,000
some form

1381
00:56:04,000 --> 00:56:06,720
and that that is writable and or

1382
00:56:06,720 --> 00:56:08,400
readable and we have these three bits

1383
00:56:08,400 --> 00:56:08,720
the

1384
00:56:08,720 --> 00:56:11,760
i call them rwo bits

1385
00:56:11,760 --> 00:56:14,240
that we can use to say what what exactly

1386
00:56:14,240 --> 00:56:16,400
we have here so there are seven

1387
00:56:16,400 --> 00:56:19,760
meaningful combinations of those

1388
00:56:19,760 --> 00:56:22,799
that's a property an action

1389
00:56:22,799 --> 00:56:26,079
is something quite different because it

1390
00:56:26,079 --> 00:56:28,240
really isn't about a state

1391
00:56:28,240 --> 00:56:31,280
it's something you can throw input data

1392
00:56:31,280 --> 00:56:34,400
at and then something happens on on the

1393
00:56:34,400 --> 00:56:35,839
physical side

1394
00:56:35,839 --> 00:56:38,640
and then the the the performance

1395
00:56:38,640 --> 00:56:39,440
generates an

1396
00:56:39,440 --> 00:56:43,280
output uh type so some people think

1397
00:56:43,280 --> 00:56:45,680
about this as an rpc that that's

1398
00:56:45,680 --> 00:56:47,599
certainly an abstraction that that comes

1399
00:56:47,599 --> 00:56:48,559
to mind

1400
00:56:48,559 --> 00:56:49,920
uh but i think it's a little bit

1401
00:56:49,920 --> 00:56:51,599
different from an rpc but

1402
00:56:51,599 --> 00:56:53,599
that's a detail we maybe don't have to

1403
00:56:53,599 --> 00:56:55,680
discuss uh today

1404
00:56:55,680 --> 00:56:58,799
but in in any case it's not a state

1405
00:56:58,799 --> 00:57:00,960
that that you for instance can cache in

1406
00:57:00,960 --> 00:57:02,640
in a proxy cache

1407
00:57:02,640 --> 00:57:05,680
or that that you you would want to would

1408
00:57:05,680 --> 00:57:07,119
want a broker

1409
00:57:07,119 --> 00:57:09,839
uh to supply as a last wish element or

1410
00:57:09,839 --> 00:57:11,359
something like that

1411
00:57:11,359 --> 00:57:14,480
it's really something you can do so

1412
00:57:14,480 --> 00:57:17,440
making a coffee is something that that's

1413
00:57:17,440 --> 00:57:19,760
my typical example for an action

1414
00:57:19,760 --> 00:57:23,040
so that that making a coffee

1415
00:57:23,040 --> 00:57:25,920
actually might create some state

1416
00:57:25,920 --> 00:57:27,119
temporarily

1417
00:57:27,119 --> 00:57:29,680
but after you have made the coffee the

1418
00:57:29,680 --> 00:57:32,319
the action is over it's no longer

1419
00:57:32,319 --> 00:57:35,920
uh something that that's in there

1420
00:57:35,920 --> 00:57:39,599
and the third thing we have is the event

1421
00:57:39,599 --> 00:57:41,119
and that's interesting because it's

1422
00:57:41,119 --> 00:57:42,880
something that that

1423
00:57:42,880 --> 00:57:46,000
puts out uh data

1424
00:57:46,000 --> 00:57:50,240
uh of a certain type and

1425
00:57:50,240 --> 00:57:52,880
it actually is not that much different

1426
00:57:52,880 --> 00:57:53,440
from a

1427
00:57:53,440 --> 00:57:56,559
property except that we we don't

1428
00:57:56,559 --> 00:58:00,319
say whether getting that object

1429
00:58:00,319 --> 00:58:03,359
needs to be solicited which would be

1430
00:58:03,359 --> 00:58:06,079
the readable part of a property or

1431
00:58:06,079 --> 00:58:06,720
actually

1432
00:58:06,720 --> 00:58:09,839
is autonomously decided by

1433
00:58:09,839 --> 00:58:12,880
uh the uh the thing uh just send

1434
00:58:12,880 --> 00:58:14,799
something which would be the observable

1435
00:58:14,799 --> 00:58:17,599
bit so that's just not defined about

1436
00:58:17,599 --> 00:58:19,359
events the only thing we have defined

1437
00:58:19,359 --> 00:58:20,319
about events

1438
00:58:20,319 --> 00:58:23,200
so far is that they throw some data at

1439
00:58:23,200 --> 00:58:24,400
you

1440
00:58:24,400 --> 00:58:26,000
and that's not different from from a

1441
00:58:26,000 --> 00:58:27,839
poverty um

1442
00:58:27,839 --> 00:58:30,880
so that's the the underlying observation

1443
00:58:30,880 --> 00:58:33,200
next slide

1444
00:58:33,200 --> 00:58:35,359
and the the problem that the industry

1445
00:58:35,359 --> 00:58:37,520
has is that there are very different

1446
00:58:37,520 --> 00:58:39,440
concepts that are typically meshed

1447
00:58:39,440 --> 00:58:40,799
together uh

1448
00:58:40,799 --> 00:58:43,839
under events so if if you

1449
00:58:43,839 --> 00:58:48,240
think about events in in the way xmpp or

1450
00:58:48,240 --> 00:58:51,200
mqtt or whatever uh would think about

1451
00:58:51,200 --> 00:58:52,319
messages

1452
00:58:52,319 --> 00:58:55,599
uh that's certainly one way

1453
00:58:55,599 --> 00:58:57,760
uh to think about it but but going a

1454
00:58:57,760 --> 00:58:59,839
step away from the protocol

1455
00:58:59,839 --> 00:59:03,200
if you look at the physical example of a

1456
00:59:03,200 --> 00:59:04,400
doorbell

1457
00:59:04,400 --> 00:59:07,119
that's actually uh the main affordance

1458
00:59:07,119 --> 00:59:10,160
of adobe is an event

1459
00:59:10,160 --> 00:59:13,280
so for instance you don't

1460
00:59:13,280 --> 00:59:15,760
change the state of the doorbell by

1461
00:59:15,760 --> 00:59:17,440
pressing it

1462
00:59:17,440 --> 00:59:20,799
but pressing it once or twice twice are

1463
00:59:20,799 --> 00:59:24,000
actually different so the the events are

1464
00:59:24,000 --> 00:59:26,559
countable it's not not just the the data

1465
00:59:26,559 --> 00:59:28,880
it's the the actual existence

1466
00:59:28,880 --> 00:59:31,520
of the event that contains part of the

1467
00:59:31,520 --> 00:59:33,520
uh information

1468
00:59:33,520 --> 00:59:36,480
um so that's one example and another

1469
00:59:36,480 --> 00:59:37,920
example for an event

1470
00:59:37,920 --> 00:59:40,720
that's not uh yeah that's a little bit

1471
00:59:40,720 --> 00:59:41,440
more on

1472
00:59:41,440 --> 00:59:44,160
on the business side but but it's still

1473
00:59:44,160 --> 00:59:44,960
uh

1474
00:59:44,960 --> 00:59:49,200
quite uh pertinent is a sale

1475
00:59:49,200 --> 00:59:51,839
um so sale is another event that comes

1476
00:59:51,839 --> 00:59:52,880
with data

1477
00:59:52,880 --> 00:59:55,040
for sale you want to know where to ship

1478
00:59:55,040 --> 00:59:56,559
that thing and and uh

1479
00:59:56,559 --> 00:59:59,760
how many of them and and so on but the

1480
00:59:59,760 --> 01:00:00,880
important

1481
01:00:00,880 --> 01:00:02,799
aspect about this event is that it must

1482
01:00:02,799 --> 01:00:04,240
not be lost

1483
01:00:04,240 --> 01:00:06,960
so some other properties if a

1484
01:00:06,960 --> 01:00:08,319
temperature sensor give you some

1485
01:00:08,319 --> 01:00:10,480
readings and and you are missing one

1486
01:00:10,480 --> 01:00:12,240
that's not a big problem if you get the

1487
01:00:12,240 --> 01:00:14,799
next one soon but a sale

1488
01:00:14,799 --> 01:00:18,640
is is important on its own and

1489
01:00:18,640 --> 01:00:20,960
it comes with data that are only about

1490
01:00:20,960 --> 01:00:22,960
that specific event so the next event

1491
01:00:22,960 --> 01:00:23,839
you get

1492
01:00:23,839 --> 01:00:26,000
is not going to repeat anything about

1493
01:00:26,000 --> 01:00:27,839
the previous sale it's it's just a

1494
01:00:27,839 --> 01:00:28,799
completely new

1495
01:00:28,799 --> 01:00:31,520
event so i think we should focus our

1496
01:00:31,520 --> 01:00:32,400
discussion on

1497
01:00:32,400 --> 01:00:35,839
on events on what i'm calling a genuine

1498
01:00:35,839 --> 01:00:38,559
uh event here and we probably have to to

1499
01:00:38,559 --> 01:00:40,799
evolve some terminology

1500
01:00:40,799 --> 01:00:45,040
um there's nothing wrong with with 1.1

1501
01:00:45,040 --> 01:00:47,200
as it is it just doesn't tell you what

1502
01:00:47,200 --> 01:00:48,480
kind of event

1503
01:00:48,480 --> 01:00:51,839
uh we expect to to describe

1504
01:00:51,839 --> 01:00:55,760
uh with the sdf event afford

1505
01:00:55,760 --> 01:00:59,280
next slide and and just to contrast

1506
01:00:59,280 --> 01:01:03,119
that um non-events

1507
01:01:03,119 --> 01:01:05,680
so so things that are really more on the

1508
01:01:05,680 --> 01:01:06,720
property side

1509
01:01:06,720 --> 01:01:09,520
uh are for instance a temperature sensor

1510
01:01:09,520 --> 01:01:11,119
with a threshold

1511
01:01:11,119 --> 01:01:14,640
alarm so the temperature sensor has a

1512
01:01:14,640 --> 01:01:16,319
current value and that can be red

1513
01:01:16,319 --> 01:01:19,599
and and it also has a notification

1514
01:01:19,599 --> 01:01:22,319
function so if a threshold is

1515
01:01:22,319 --> 01:01:25,440
crossed you get a notification and

1516
01:01:25,440 --> 01:01:27,520
that's exactly what the the

1517
01:01:27,520 --> 01:01:30,799
r and o bits um of a property

1518
01:01:30,799 --> 01:01:34,079
do so it's not an event in the sense of

1519
01:01:34,079 --> 01:01:34,319
an

1520
01:01:34,319 --> 01:01:36,319
sdf event it's certainly an event in the

1521
01:01:36,319 --> 01:01:38,000
sense of the english

1522
01:01:38,000 --> 01:01:42,079
language uh meaning off of event

1523
01:01:42,079 --> 01:01:44,160
now the the interesting thing where

1524
01:01:44,160 --> 01:01:45,920
where we have a crossover here

1525
01:01:45,920 --> 01:01:49,760
is that there are some uh properties

1526
01:01:49,760 --> 01:01:51,520
that actually need to have a history

1527
01:01:51,520 --> 01:01:53,520
about state changes

1528
01:01:53,520 --> 01:01:56,799
so you may have a legal obligation to

1529
01:01:56,799 --> 01:01:58,480
record

1530
01:01:58,480 --> 01:02:02,960
the the instances where the temperature

1531
01:02:02,960 --> 01:02:06,000
sensor crossed the threshered and we

1532
01:02:06,000 --> 01:02:07,440
need to model that

1533
01:02:07,440 --> 01:02:09,359
and that's really something that that we

1534
01:02:09,359 --> 01:02:11,119
should take up as

1535
01:02:11,119 --> 01:02:14,160
as a an item for the one.next

1536
01:02:14,160 --> 01:02:16,319
uh activity i think that that's a

1537
01:02:16,319 --> 01:02:17,200
problem that's

1538
01:02:17,200 --> 01:02:20,559
uh solved

1539
01:02:20,559 --> 01:02:23,359
very well in in no of the existing

1540
01:02:23,359 --> 01:02:25,039
environments and we might have a chance

1541
01:02:25,039 --> 01:02:25,839
to actually

1542
01:02:25,839 --> 01:02:29,760
uh model this uh properly

1543
01:02:29,760 --> 01:02:32,319
next slide

1544
01:02:33,760 --> 01:02:36,000
so with that i think we also have a

1545
01:02:36,000 --> 01:02:38,319
fresh look at the the sdf property and

1546
01:02:38,319 --> 01:02:39,839
and the observable

1547
01:02:39,839 --> 01:02:43,039
uh bit as i said we have three bits with

1548
01:02:43,039 --> 01:02:45,760
each property readable writer observable

1549
01:02:45,760 --> 01:02:48,799
and actually all default to true which

1550
01:02:48,799 --> 01:02:49,280
maybe

1551
01:02:49,280 --> 01:02:52,880
spec writers don't have in their minds

1552
01:02:52,880 --> 01:02:55,760
michael do you say something you're

1553
01:02:55,760 --> 01:02:58,240
muted

1554
01:02:58,319 --> 01:03:00,000
i have a child trying to communicate

1555
01:03:00,000 --> 01:03:04,079
with me i can't hear you

1556
01:03:06,480 --> 01:03:10,000
okay thank you um

1557
01:03:10,240 --> 01:03:12,880
um the the problem here is that some of

1558
01:03:12,880 --> 01:03:14,079
us are

1559
01:03:14,079 --> 01:03:17,359
pretty uh yeah

1560
01:03:17,359 --> 01:03:19,599
imprinted by co-app and when we read the

1561
01:03:19,599 --> 01:03:21,359
word word observe

1562
01:03:21,359 --> 01:03:23,200
we think about a get request with an

1563
01:03:23,200 --> 01:03:25,599
observe uh

1564
01:03:25,599 --> 01:03:27,680
option but that's not what is meant here

1565
01:03:27,680 --> 01:03:29,680
by observable

1566
01:03:29,680 --> 01:03:33,760
so the the observable bit does not imply

1567
01:03:33,760 --> 01:03:36,880
readable it just means that property

1568
01:03:36,880 --> 01:03:38,799
is is going to send you you

1569
01:03:38,799 --> 01:03:40,400
notifications

1570
01:03:40,400 --> 01:03:44,319
and yeah uh

1571
01:03:44,319 --> 01:03:48,000
the the the perception that that observe

1572
01:03:48,000 --> 01:03:50,079
implies readable is not what's in the

1573
01:03:50,079 --> 01:03:51,680
document so there's no need for a change

1574
01:03:51,680 --> 01:03:52,079
here

1575
01:03:52,079 --> 01:03:54,480
it's already in there but you have to

1576
01:03:54,480 --> 01:03:55,359
read it uh

1577
01:03:55,359 --> 01:03:58,799
properly so given that three these three

1578
01:03:58,799 --> 01:04:00,480
bits are independent

1579
01:04:00,480 --> 01:04:03,760
uh this means that actually a a property

1580
01:04:03,760 --> 01:04:06,480
that is dash dash o or or no read no

1581
01:04:06,480 --> 01:04:06,880
right

1582
01:04:06,880 --> 01:04:10,640
but observe is possible it's observable

1583
01:04:10,640 --> 01:04:12,480
but not readable and in the discussion

1584
01:04:12,480 --> 01:04:14,720
we have had the term notifiable

1585
01:04:14,720 --> 01:04:16,160
i don't know if we need another term

1586
01:04:16,160 --> 01:04:18,640
here or not let's find that out

1587
01:04:18,640 --> 01:04:20,799
but the point is that that dash dash 0

1588
01:04:20,799 --> 01:04:22,640
already has been part of sdf all the

1589
01:04:22,640 --> 01:04:23,520
time

1590
01:04:23,520 --> 01:04:26,319
we we just seem to have forgotten that a

1591
01:04:26,319 --> 01:04:28,160
little bit

1592
01:04:28,160 --> 01:04:31,359
so many of the pub sub

1593
01:04:31,359 --> 01:04:34,559
style uh affordances

1594
01:04:34,559 --> 01:04:37,599
actually are sdf properties

1595
01:04:37,599 --> 01:04:40,480
uh in in that sense so we can model this

1596
01:04:40,480 --> 01:04:41,039
today

1597
01:04:41,039 --> 01:04:43,599
next slide

1598
01:04:46,160 --> 01:04:49,359
yeah and and that means uh the the sdf

1599
01:04:49,359 --> 01:04:50,480
event

1600
01:04:50,480 --> 01:04:51,920
should not be used where we have

1601
01:04:51,920 --> 01:04:54,079
observed an observable

1602
01:04:54,079 --> 01:04:56,240
property and the one dot next work is

1603
01:04:56,240 --> 01:04:57,520
about preciousness

1604
01:04:57,520 --> 01:05:09,839
and securing issues overload issues

1605
01:05:16,240 --> 01:05:18,880
good there were some audio issues i

1606
01:05:18,880 --> 01:05:20,160
don't know if

1607
01:05:20,160 --> 01:05:22,160
can you have like 30 seconds back or

1608
01:05:22,160 --> 01:05:23,359
something

1609
01:05:23,359 --> 01:05:26,079
i think we lost you yeah we have some

1610
01:05:26,079 --> 01:05:27,760
interesting dos issues

1611
01:05:27,760 --> 01:05:31,839
right now here uh i'm running into those

1612
01:05:31,839 --> 01:05:34,799
about once a day

1613
01:05:34,799 --> 01:05:38,160
okay okay 30 seconds back can you go

1614
01:05:38,160 --> 01:05:40,879
back one slide

1615
01:05:41,920 --> 01:05:43,039
i think there were there was on this

1616
01:05:43,039 --> 01:05:44,559
slide so maybe this you can just go

1617
01:05:44,559 --> 01:05:45,839
through this again and then

1618
01:05:45,839 --> 01:05:47,839
okay no no no no no the previous one on

1619
01:05:47,839 --> 01:05:49,119
the air

1620
01:05:49,119 --> 01:05:52,960
go back on the event sdf event

1621
01:05:52,960 --> 01:05:55,839
yeah slide21

1622
01:05:57,359 --> 01:06:00,960
now we lost michael what

1623
01:06:02,640 --> 01:06:05,118
can you step

1624
01:06:11,119 --> 01:06:14,640
thanks thank you um yeah so

1625
01:06:14,640 --> 01:06:17,359
uh just this is essentially just a

1626
01:06:17,359 --> 01:06:19,200
repetition of what what i said

1627
01:06:19,200 --> 01:06:22,720
but but distilled uh to a program

1628
01:06:22,720 --> 01:06:25,760
so um given that

1629
01:06:25,760 --> 01:06:29,280
an event is essentially defined with the

1630
01:06:29,280 --> 01:06:32,960
same signature as an observable property

1631
01:06:32,960 --> 01:06:36,079
uh we should try to understand when an

1632
01:06:36,079 --> 01:06:37,760
event is a genuine event and

1633
01:06:37,760 --> 01:06:40,799
when it's an observer property and we

1634
01:06:40,799 --> 01:06:42,000
should not

1635
01:06:42,000 --> 01:06:45,280
uh describe events

1636
01:06:45,280 --> 01:06:48,480
i can share my slides if that helps

1637
01:06:48,480 --> 01:06:51,520
michael is um reloading so he will be

1638
01:06:51,520 --> 01:06:52,880
back in a second here so

1639
01:06:52,880 --> 01:06:56,079
okay yeah keep talking then yeah

1640
01:06:56,079 --> 01:07:00,160
so um the we have a program of work for

1641
01:07:00,160 --> 01:07:02,160
the wonder next cycle

1642
01:07:02,160 --> 01:07:04,880
where we are going to discuss this whole

1643
01:07:04,880 --> 01:07:06,720
aspect of preciousness

1644
01:07:06,720 --> 01:07:09,760
and and of cueing issues overload so not

1645
01:07:09,760 --> 01:07:11,440
all of that needs to be in the data

1646
01:07:11,440 --> 01:07:13,599
model but i think it would be good

1647
01:07:13,599 --> 01:07:16,240
to be able to identify in a data model

1648
01:07:16,240 --> 01:07:17,039
whether

1649
01:07:17,039 --> 01:07:20,319
events are kind of overtaken by new

1650
01:07:20,319 --> 01:07:21,280
events

1651
01:07:21,280 --> 01:07:24,079
or whether events really need to be

1652
01:07:24,079 --> 01:07:27,200
preserved one by one

1653
01:07:27,200 --> 01:07:32,078
we cannot currently model that no

1654
01:07:32,319 --> 01:07:34,880
next slide

1655
01:07:35,920 --> 01:07:40,400
so the the sdf action um actually

1656
01:07:40,400 --> 01:07:44,160
is looks fine maybe it looks fine

1657
01:07:44,160 --> 01:07:45,359
because we haven't done

1658
01:07:45,359 --> 01:07:48,319
a lot of pressure testing on it uh yet

1659
01:07:48,319 --> 01:07:50,160
so that that's also something we should

1660
01:07:50,160 --> 01:07:50,480
do

1661
01:07:50,480 --> 01:07:53,280
in in the next uh round and make sure

1662
01:07:53,280 --> 01:07:53,760
that

1663
01:07:53,760 --> 01:07:58,400
the sdf action is working well for us

1664
01:07:58,400 --> 01:08:02,400
so basically what's there i think works

1665
01:08:02,400 --> 01:08:05,039
i would be surprised if we would get a

1666
01:08:05,039 --> 01:08:07,119
significant

1667
01:08:07,119 --> 01:08:10,160
change there but we currently cannot

1668
01:08:10,160 --> 01:08:11,359
model

1669
01:08:11,359 --> 01:08:15,039
actions that actually spawn

1670
01:08:15,039 --> 01:08:18,080
new affordances

1671
01:08:18,319 --> 01:08:21,520
so when when you start making a coffee

1672
01:08:21,520 --> 01:08:24,238
um maybe you have an affordance to to

1673
01:08:24,238 --> 01:08:25,120
stop

1674
01:08:25,120 --> 01:08:28,719
making that coffee but it doesn't mean

1675
01:08:28,719 --> 01:08:30,158
that you you have to shut down the

1676
01:08:30,158 --> 01:08:31,439
machine or something that

1677
01:08:31,439 --> 01:08:33,439
just means stop making that coffee and

1678
01:08:33,439 --> 01:08:35,520
another guy who also wants to make a

1679
01:08:35,520 --> 01:08:37,120
coffee you still get to make their

1680
01:08:37,120 --> 01:08:38,238
coffee

1681
01:08:38,238 --> 01:08:41,520
so this is typically modeled by dynamic

1682
01:08:41,520 --> 01:08:44,080
affordances and you can actually see

1683
01:08:44,080 --> 01:08:48,080
an attempt to approach the issue of

1684
01:08:48,080 --> 01:08:50,839
dynamic references in the

1685
01:08:50,839 --> 01:08:53,359
acaf document

1686
01:08:53,359 --> 01:08:56,238
where we are discussing the permissions

1687
01:08:56,238 --> 01:08:57,198
on dynamic

1688
01:08:57,198 --> 01:08:59,679
affordances and i think that that might

1689
01:08:59,679 --> 01:09:01,279
be food for thought it's not solving our

1690
01:09:01,279 --> 01:09:03,120
problem here but it might be

1691
01:09:03,120 --> 01:09:05,279
food for thought how to handle these

1692
01:09:05,279 --> 01:09:06,479
dynamic

1693
01:09:06,479 --> 01:09:08,960
affordances but ignoring dynamic

1694
01:09:08,960 --> 01:09:10,000
references i think

1695
01:09:10,000 --> 01:09:13,120
no clarifications are currently required

1696
01:09:13,120 --> 01:09:16,238
and we are fine until we add

1697
01:09:16,238 --> 01:09:18,479
functionality here

1698
01:09:18,479 --> 01:09:21,679
can i ask you clarifying here so uh

1699
01:09:21,679 --> 01:09:24,158
example would be i asked the coffee

1700
01:09:24,158 --> 01:09:25,439
maker to make

1701
01:09:25,439 --> 01:09:28,080
start making me a coffee and to do that

1702
01:09:28,080 --> 01:09:30,399
it spawns an entire new espresso sprout

1703
01:09:30,399 --> 01:09:31,839
which has a whole bunch of

1704
01:09:31,839 --> 01:09:34,880
of observable attached to it

1705
01:09:34,880 --> 01:09:37,198
is that an example of a dynamic case

1706
01:09:37,198 --> 01:09:39,040
yeah so so you would get the

1707
01:09:39,040 --> 01:09:41,920
uh an sdf event that tells you about the

1708
01:09:41,920 --> 01:09:44,479
progress or an sdf property that talks

1709
01:09:44,479 --> 01:09:47,600
tells you about the the progress

1710
01:09:47,600 --> 01:09:50,799
um that progress property

1711
01:09:50,799 --> 01:09:53,600
goes away when you are done when my

1712
01:09:53,600 --> 01:09:54,640
coffee is done yeah

1713
01:09:54,640 --> 01:09:57,920
okay now the the example is not so great

1714
01:09:57,920 --> 01:10:00,719
actually because

1715
01:10:01,280 --> 01:10:03,840
in a real coffee machine you cannot

1716
01:10:03,840 --> 01:10:04,320
start

1717
01:10:04,320 --> 01:10:06,560
parallel instances of making coffee so i

1718
01:10:06,560 --> 01:10:08,719
probably have to come up with a new

1719
01:10:08,719 --> 01:10:11,760
uh example

1720
01:10:14,400 --> 01:10:16,560
the example we've seen is cancelable

1721
01:10:16,560 --> 01:10:17,520
actions

1722
01:10:17,520 --> 01:10:19,440
so suppose you start making a coffee you

1723
01:10:19,440 --> 01:10:20,960
want to cancel it you might have an

1724
01:10:20,960 --> 01:10:22,640
additional set of interactions on that

1725
01:10:22,640 --> 01:10:23,440
action

1726
01:10:23,440 --> 01:10:25,840
to cancel it and on some devices not a

1727
01:10:25,840 --> 01:10:26,800
coffee machine

1728
01:10:26,800 --> 01:10:28,239
you could have several parallel actions

1729
01:10:28,239 --> 01:10:29,920
going at once you need to figure out

1730
01:10:29,920 --> 01:10:31,679
which action you're talking about

1731
01:10:31,679 --> 01:10:32,880
so one thing we've played with is

1732
01:10:32,880 --> 01:10:34,960
returning a new you know thing

1733
01:10:34,960 --> 01:10:36,159
description in what

1734
01:10:36,159 --> 01:10:38,159
so you could imagine having a new sdf

1735
01:10:38,159 --> 01:10:39,760
description just for that

1736
01:10:39,760 --> 01:10:42,960
action um and then somehow you know

1737
01:10:42,960 --> 01:10:46,320
dealing with uh that it that way

1738
01:10:46,320 --> 01:10:49,519
there'd be an instance of it

1739
01:10:50,640 --> 01:10:53,199
yeah if you have an example of a machine

1740
01:10:53,199 --> 01:10:54,080
with

1741
01:10:54,080 --> 01:10:57,760
cancelable parallel actions i really

1742
01:10:57,760 --> 01:10:59,360
would like to learn about that so i can

1743
01:10:59,360 --> 01:11:03,199
replace my coffee machine example

1744
01:11:07,199 --> 01:11:13,839
next slide

1745
01:11:16,719 --> 01:11:19,760
yeah i'm done we heard that already okay

1746
01:11:19,760 --> 01:11:22,320
yep thank you very much kirsten let's

1747
01:11:22,320 --> 01:11:23,280
let's

1748
01:11:23,280 --> 01:11:25,520
stop here for a minute and and see if

1749
01:11:25,520 --> 01:11:27,280
there are any further questions on this

1750
01:11:27,280 --> 01:11:27,679
i think

1751
01:11:27,679 --> 01:11:30,400
uh this was an interesting uh sort of

1752
01:11:30,400 --> 01:11:31,760
exposition

1753
01:11:31,760 --> 01:11:33,920
as i gather from it i don't think there

1754
01:11:33,920 --> 01:11:35,040
is any

1755
01:11:35,040 --> 01:11:38,320
what we have today in sdf 1011

1756
01:11:38,320 --> 01:11:41,600
is is underspecified if anything uh

1757
01:11:41,600 --> 01:11:44,800
and not very sort of um feature-rich

1758
01:11:44,800 --> 01:11:47,280
functionality-wise but it's not broken

1759
01:11:47,280 --> 01:11:49,199
so we don't have to remove it right away

1760
01:11:49,199 --> 01:11:51,040
i think that would be the

1761
01:11:51,040 --> 01:11:52,560
key thing here if we know it's broken

1762
01:11:52,560 --> 01:11:54,880
from the start then we shouldn't have it

1763
01:11:54,880 --> 01:11:57,920
but i guess we can move on with this

1764
01:11:57,920 --> 01:12:01,040
and make these features richer

1765
01:12:01,040 --> 01:12:04,320
in the next next cycle

1766
01:12:05,360 --> 01:12:08,640
any other questions notes comments on

1767
01:12:08,640 --> 01:12:10,880
this

1768
01:12:15,440 --> 01:12:18,560
nope there were some

1769
01:12:18,560 --> 01:12:19,920
michael mccool i saw you made some

1770
01:12:19,920 --> 01:12:21,600
comments in the

1771
01:12:21,600 --> 01:12:24,320
in the chat but they were maybe covered

1772
01:12:24,320 --> 01:12:26,719
already

1773
01:12:29,040 --> 01:12:30,800
they asked about it was how describe

1774
01:12:30,800 --> 01:12:33,280
unsubscribe is payable for events

1775
01:12:33,280 --> 01:12:35,120
so we have a separate data model for

1776
01:12:35,120 --> 01:12:36,719
that in web thing

1777
01:12:36,719 --> 01:12:39,679
descriptions i i think the assumption

1778
01:12:39,679 --> 01:12:40,239
here is an

1779
01:12:40,239 --> 01:12:42,080
action will be used to manage

1780
01:12:42,080 --> 01:12:43,520
subscribing and unsubscribing is that

1781
01:12:43,520 --> 01:12:45,840
correct

1782
01:12:47,280 --> 01:12:50,320
carson okay

1783
01:12:50,320 --> 01:12:52,719
well right now we don't have anything

1784
01:12:52,719 --> 01:12:53,360
else so

1785
01:12:53,360 --> 01:12:56,960
we would use the action hammer but

1786
01:12:56,960 --> 01:12:58,800
actually maybe we want to invent a

1787
01:12:58,800 --> 01:13:01,760
screwdriver for that

1788
01:13:02,159 --> 01:13:05,760
michael koster

1789
01:13:05,760 --> 01:13:07,679
yeah i would probably have just said the

1790
01:13:07,679 --> 01:13:08,800
same thing uh

1791
01:13:08,800 --> 01:13:10,640
and adding that subscribing and

1792
01:13:10,640 --> 01:13:12,560
unsubscribing might

1793
01:13:12,560 --> 01:13:14,239
since they're not really part of the

1794
01:13:14,239 --> 01:13:16,159
application workflow

1795
01:13:16,159 --> 01:13:19,120
uh in terms of you know responses and

1796
01:13:19,120 --> 01:13:20,320
things like that

1797
01:13:20,320 --> 01:13:22,880
they might belong in a protocol binding

1798
01:13:22,880 --> 01:13:23,440
as well

1799
01:13:23,440 --> 01:13:25,199
so there's some i think there's some

1800
01:13:25,199 --> 01:13:28,799
interesting discussion around that

1801
01:13:30,000 --> 01:13:31,920
so basically maybe you have a quality of

1802
01:13:31,920 --> 01:13:34,000
being cancelable or something like that

1803
01:13:34,000 --> 01:13:37,199
and then you have um i mean you can cast

1804
01:13:37,199 --> 01:13:38,880
on a coffee machine but you can't cancel

1805
01:13:38,880 --> 01:13:39,199
a

1806
01:13:39,199 --> 01:13:40,640
if you fire the missile then you fire

1807
01:13:40,640 --> 01:13:42,400
the missile right

1808
01:13:42,400 --> 01:13:45,600
um so different actions can be maybe

1809
01:13:45,600 --> 01:13:47,120
that's done

1810
01:13:47,120 --> 01:13:50,000
the subscription is a thing that is is

1811
01:13:50,000 --> 01:13:51,520
really part of the mechanism

1812
01:13:51,520 --> 01:13:53,520
for for getting data so it's sort of

1813
01:13:53,520 --> 01:13:54,960
like canceling and observe

1814
01:13:54,960 --> 01:13:57,280
well you know we don't really provide

1815
01:13:57,280 --> 01:13:59,040
for that as part of the data model and

1816
01:13:59,040 --> 01:14:00,719
i think it's there's more discussion to

1817
01:14:00,719 --> 01:14:02,640
be had though i it's not a conclusion on

1818
01:14:02,640 --> 01:14:04,159
my part at all

1819
01:14:04,159 --> 01:14:07,199
no but good um

1820
01:14:07,199 --> 01:14:08,800
but thank you for this anyway any other

1821
01:14:08,800 --> 01:14:11,199
questions

1822
01:14:12,719 --> 01:14:15,679
if not i looking forward to see more

1823
01:14:15,679 --> 01:14:17,199
more of this developed during the next

1824
01:14:17,199 --> 01:14:18,480
cycle

1825
01:14:18,480 --> 01:14:21,520
here we move on then to next part

1826
01:14:21,520 --> 01:14:23,679
uh which is the mapping files i think

1827
01:14:23,679 --> 01:14:24,800
you need to move

1828
01:14:24,800 --> 01:14:28,640
like six seven slides ahead

1829
01:14:28,640 --> 01:14:31,520
after the yellow ones

1830
01:14:32,400 --> 01:14:36,719
here michael koster please go ahead

1831
01:14:36,719 --> 01:14:39,840
okay good please uh advance to the first

1832
01:14:39,840 --> 01:14:42,719
okay so the problem um we're trying to

1833
01:14:42,719 --> 01:14:43,920
solve here is that

1834
01:14:43,920 --> 01:14:46,400
well if sdf definitions are protocol

1835
01:14:46,400 --> 01:14:47,360
neutral

1836
01:14:47,360 --> 01:14:49,440
you know they we want to be able to map

1837
01:14:49,440 --> 01:14:51,280
them to different protocols and storage

1838
01:14:51,280 --> 01:14:52,159
schemes and

1839
01:14:52,159 --> 01:14:55,520
and what have you um you know so the

1840
01:14:55,520 --> 01:14:55,840
best

1841
01:14:55,840 --> 01:14:59,520
practice for in 1dm anyway is going to

1842
01:14:59,520 --> 01:15:00,880
be to

1843
01:15:00,880 --> 01:15:02,640
leave it up to the implementation to

1844
01:15:02,640 --> 01:15:05,280
decide a lot of things so these models

1845
01:15:05,280 --> 01:15:07,920
can be retargeted to different uh stacks

1846
01:15:07,920 --> 01:15:10,320
and what have you without

1847
01:15:10,320 --> 01:15:12,880
without overriding things or breaking

1848
01:15:12,880 --> 01:15:14,080
things

1849
01:15:14,080 --> 01:15:16,440
so you can have some sort of syntactic

1850
01:15:16,440 --> 01:15:18,000
interoperability

1851
01:15:18,000 --> 01:15:20,960
between elements that conform to the

1852
01:15:20,960 --> 01:15:23,120
same set of bindings and then semantic

1853
01:15:23,120 --> 01:15:24,080
interoperability

1854
01:15:24,080 --> 01:15:27,280
where you have a bridge or a uh some

1855
01:15:27,280 --> 01:15:28,480
kind of gateway

1856
01:15:28,480 --> 01:15:32,640
um or other kind of adaptation

1857
01:15:32,640 --> 01:15:35,679
across these ecosystems so mapping files

1858
01:15:35,679 --> 01:15:37,199
is kind of a catch-all term

1859
01:15:37,199 --> 01:15:41,520
for how we how we separate the protocol

1860
01:15:41,520 --> 01:15:43,040
independent parts from the

1861
01:15:43,040 --> 01:15:44,640
implementations

1862
01:15:44,640 --> 01:15:47,520
next slide please

1863
01:15:48,480 --> 01:15:51,360
so basically it's a mapping file itself

1864
01:15:51,360 --> 01:15:52,080
is external

1865
01:15:52,080 --> 01:15:55,920
information that augments the the model

1866
01:15:55,920 --> 01:15:58,480
essentially it's these are extensions to

1867
01:15:58,480 --> 01:15:59,440
sdf

1868
01:15:59,440 --> 01:16:03,199
or additional pieces of sdf that get

1869
01:16:03,199 --> 01:16:06,000
added on to further customize a model

1870
01:16:06,000 --> 01:16:08,080
so the kind of things we do our ad

1871
01:16:08,080 --> 01:16:10,239
quality is like defined minimum maximum

1872
01:16:10,239 --> 01:16:11,679
and multiple

1873
01:16:11,679 --> 01:16:14,719
uh we change abstract number to a type

1874
01:16:14,719 --> 01:16:16,560
number like we have say this has to be a

1875
01:16:16,560 --> 01:16:18,800
float for example

1876
01:16:18,800 --> 01:16:21,280
reserving space it turns out that you

1877
01:16:21,280 --> 01:16:23,600
know we have enough pack representations

1878
01:16:23,600 --> 01:16:25,120
is can that all be handled in the

1879
01:16:25,120 --> 01:16:27,520
binding or is that part of a data type

1880
01:16:27,520 --> 01:16:30,320
uh augmentation or constraint that we

1881
01:16:30,320 --> 01:16:33,199
need to add so that the application can

1882
01:16:33,199 --> 01:16:35,360
can unpack things at the application

1883
01:16:35,360 --> 01:16:36,719
layer and sometimes that's

1884
01:16:36,719 --> 01:16:38,320
what happens i found that out with

1885
01:16:38,320 --> 01:16:40,000
modbus for example

1886
01:16:40,000 --> 01:16:43,040
so we also want to be able to

1887
01:16:43,040 --> 01:16:45,920
have a big enum that defines all the fan

1888
01:16:45,920 --> 01:16:47,040
modes you might ever

1889
01:16:47,040 --> 01:16:49,520
want in a fan but this fan only has

1890
01:16:49,520 --> 01:16:51,040
three modes and so we need to

1891
01:16:51,040 --> 01:16:53,920
we have a way to say that defaults for

1892
01:16:53,920 --> 01:16:55,920
values constants for values that are

1893
01:16:55,920 --> 01:16:57,360
left open

1894
01:16:57,360 --> 01:16:59,520
new qualities like id codes that are

1895
01:16:59,520 --> 01:17:00,640
shorthand uh

1896
01:17:00,640 --> 01:17:03,840
in protocols to to reduce the amount of

1897
01:17:03,840 --> 01:17:04,640
space the

1898
01:17:04,640 --> 01:17:06,960
information takes up in the protocol

1899
01:17:06,960 --> 01:17:09,600
custom settings for things

1900
01:17:09,600 --> 01:17:11,600
new protocol binding or protocol binding

1901
01:17:11,600 --> 01:17:13,520
settings so what protocol does it use

1902
01:17:13,520 --> 01:17:14,800
and what

1903
01:17:14,800 --> 01:17:16,800
what parts of the protocol and how does

1904
01:17:16,800 --> 01:17:17,840
it use them

1905
01:17:17,840 --> 01:17:19,920
protocol bindings and then uh we might

1906
01:17:19,920 --> 01:17:21,920
want to override things and obviously

1907
01:17:21,920 --> 01:17:22,800
with

1908
01:17:22,800 --> 01:17:24,480
if you make your model saying these are

1909
01:17:24,480 --> 01:17:26,880
defaults you're allowing for overriding

1910
01:17:26,880 --> 01:17:28,719
in the future but also we might be able

1911
01:17:28,719 --> 01:17:30,560
to say um

1912
01:17:30,560 --> 01:17:32,320
you know this is an integer in the model

1913
01:17:32,320 --> 01:17:34,800
but i want to overwrite it to a float

1914
01:17:34,800 --> 01:17:35,760
some of these things hurt

1915
01:17:35,760 --> 01:17:37,760
interoperability so we have to be

1916
01:17:37,760 --> 01:17:39,600
careful about the overrides

1917
01:17:39,600 --> 01:17:41,440
and there are other things you could you

1918
01:17:41,440 --> 01:17:43,360
might want to do to models that aren't

1919
01:17:43,360 --> 01:17:44,400
really

1920
01:17:44,400 --> 01:17:45,679
considered here having to do with

1921
01:17:45,679 --> 01:17:47,440
composition and stuff that i'll

1922
01:17:47,440 --> 01:17:50,320
i'll talk about a little later next

1923
01:17:50,320 --> 01:17:52,960
slide please

1924
01:17:53,440 --> 01:17:56,159
so the processing model as i see it now

1925
01:17:56,159 --> 01:17:57,920
this is where we sort of get into what's

1926
01:17:57,920 --> 01:17:59,760
the proposal and what's sort of

1927
01:17:59,760 --> 01:18:02,159
being worked out is that there's mapping

1928
01:18:02,159 --> 01:18:03,280
information for each

1929
01:18:03,280 --> 01:18:06,480
sdf element so be it a thing an object

1930
01:18:06,480 --> 01:18:09,440
each event each action property data and

1931
01:18:09,440 --> 01:18:10,239
even each

1932
01:18:10,239 --> 01:18:14,159
each um category

1933
01:18:14,159 --> 01:18:17,440
instance in an enum each enum value

1934
01:18:17,440 --> 01:18:20,000
could have mapping so i have if i have

1935
01:18:20,000 --> 01:18:21,520
an enum for

1936
01:18:21,520 --> 01:18:24,719
you know up down and center i might make

1937
01:18:24,719 --> 01:18:26,719
those zero one and two and one ecosystem

1938
01:18:26,719 --> 01:18:28,640
and it might have strings in another so

1939
01:18:28,640 --> 01:18:30,960
um so those need to be mapped one of the

1940
01:18:30,960 --> 01:18:34,320
big sorry sdf choice

1941
01:18:34,320 --> 01:18:36,640
oh yeah we used to call it spf enum but

1942
01:18:36,640 --> 01:18:38,400
it's called sdf choice

1943
01:18:38,400 --> 01:18:41,520
um uh basically those mapping elements

1944
01:18:41,520 --> 01:18:43,679
should be processed as if the source

1945
01:18:43,679 --> 01:18:45,040
file had them

1946
01:18:45,040 --> 01:18:47,520
you know right there in line and in fact

1947
01:18:47,520 --> 01:18:49,600
uh some of the work i'm doing is sort of

1948
01:18:49,600 --> 01:18:50,480
but if you did

1949
01:18:50,480 --> 01:18:52,400
have them as inline extensions that you

1950
01:18:52,400 --> 01:18:54,000
could easily split out to mapping

1951
01:18:54,000 --> 01:18:57,600
files and compose back in

1952
01:18:57,840 --> 01:18:59,760
also i think a concept is that there

1953
01:18:59,760 --> 01:19:01,040
could be extension

1954
01:19:01,040 --> 01:19:03,760
schemas basically a validation of the

1955
01:19:03,760 --> 01:19:04,480
extension

1956
01:19:04,480 --> 01:19:06,640
as as an extension that gets validated

1957
01:19:06,640 --> 01:19:08,480
by a schema you provide and that might

1958
01:19:08,480 --> 01:19:10,400
be

1959
01:19:10,400 --> 01:19:12,159
what we build in as a mechanism for

1960
01:19:12,159 --> 01:19:13,920
defining extensions

1961
01:19:13,920 --> 01:19:15,440
it's really easy if you're putting in a

1962
01:19:15,440 --> 01:19:16,880
new block but if you're just adding

1963
01:19:16,880 --> 01:19:18,640
qualities it's harder to see how that

1964
01:19:18,640 --> 01:19:19,840
might work

1965
01:19:19,840 --> 01:19:22,159
but it seems like a reasonable direction

1966
01:19:22,159 --> 01:19:24,480
also the extension vocabularies and what

1967
01:19:24,480 --> 01:19:26,000
you do with extensions

1968
01:19:26,000 --> 01:19:27,760
and and in mapping files should be able

1969
01:19:27,760 --> 01:19:29,760
to use what we've already designed in

1970
01:19:29,760 --> 01:19:30,800
sdf so

1971
01:19:30,800 --> 01:19:34,080
sdf ref uh required

1972
01:19:34,080 --> 01:19:36,159
concepts like that they should be you

1973
01:19:36,159 --> 01:19:37,520
know for the most part be

1974
01:19:37,520 --> 01:19:40,640
uh sdf files also but with

1975
01:19:40,640 --> 01:19:45,280
with some other um other kinds of uh

1976
01:19:45,280 --> 01:19:48,239
behaviors but again this is sort of a

1977
01:19:48,239 --> 01:19:49,199
direction that

1978
01:19:49,199 --> 01:19:51,360
that looks promising but everything

1979
01:19:51,360 --> 01:19:52,480
isn't worked out

1980
01:19:52,480 --> 01:19:57,040
yet right next slide please

1981
01:19:58,159 --> 01:20:01,440
so the format of a mapping file is just

1982
01:20:01,440 --> 01:20:03,360
naively you could say well let's just

1983
01:20:03,360 --> 01:20:05,440
have a json pointer to each place you

1984
01:20:05,440 --> 01:20:05,920
want to

1985
01:20:05,920 --> 01:20:08,159
put something in as an extension and

1986
01:20:08,159 --> 01:20:09,199
then have the

1987
01:20:09,199 --> 01:20:12,239
extension described as an sdf type

1988
01:20:12,239 --> 01:20:16,880
object and so selectors

1989
01:20:16,880 --> 01:20:19,120
for places in the file you want to put

1990
01:20:19,120 --> 01:20:20,000
things and then

1991
01:20:20,000 --> 01:20:21,840
the values you want to put there

1992
01:20:21,840 --> 01:20:24,480
selectors currently are json pointer

1993
01:20:24,480 --> 01:20:27,440
um that we use so it should be the same

1994
01:20:27,440 --> 01:20:27,840
as

1995
01:20:27,840 --> 01:20:31,440
you use with sdf required or sdf ref for

1996
01:20:31,440 --> 01:20:32,239
that matter

1997
01:20:32,239 --> 01:20:34,239
um including the namespace so you should

1998
01:20:34,239 --> 01:20:35,920
be able to in your mapping files say

1999
01:20:35,920 --> 01:20:37,520
these are my namespaces and

2000
01:20:37,520 --> 01:20:40,639
and use the curie format for that

2001
01:20:40,639 --> 01:20:42,560
as an example if you wanted to take the

2002
01:20:42,560 --> 01:20:44,320
ipso sensor value and

2003
01:20:44,320 --> 01:20:48,080
target it to ipso which was was taken

2004
01:20:48,080 --> 01:20:49,120
out in the model

2005
01:20:49,120 --> 01:20:52,320
you would say uh this is an id 5700

2006
01:20:52,320 --> 01:20:54,880
and it's a float type and you might be

2007
01:20:54,880 --> 01:20:56,320
some more things you want to say about

2008
01:20:56,320 --> 01:20:57,440
it but

2009
01:20:57,440 --> 01:21:00,960
that's a simple example

2010
01:21:00,960 --> 01:21:02,639
so a mapping file and there might be

2011
01:21:02,639 --> 01:21:04,080
more than one mapping file there might

2012
01:21:04,080 --> 01:21:06,320
be one mapping file that adds ids and

2013
01:21:06,320 --> 01:21:08,080
another one that adds protocol bindings

2014
01:21:08,080 --> 01:21:09,920
and another one that

2015
01:21:09,920 --> 01:21:13,440
composes things so it might not be just

2016
01:21:13,440 --> 01:21:14,080
one mapping

2017
01:21:14,080 --> 01:21:17,360
file at a time also right next slide

2018
01:21:17,360 --> 01:21:19,600
please

2019
01:21:19,600 --> 01:21:21,199
so you know there are different ways to

2020
01:21:21,199 --> 01:21:22,639
do it obviously um

2021
01:21:22,639 --> 01:21:24,800
you could say that instead of a map it's

2022
01:21:24,800 --> 01:21:26,639
an array of objects where the selector

2023
01:21:26,639 --> 01:21:28,159
is an element in each object

2024
01:21:28,159 --> 01:21:29,760
and process them in array order and

2025
01:21:29,760 --> 01:21:31,520
there may be some advantages for doing

2026
01:21:31,520 --> 01:21:32,480
that

2027
01:21:32,480 --> 01:21:35,520
um i also looked at some uh

2028
01:21:35,520 --> 01:21:37,679
design patterns that were looked more

2029
01:21:37,679 --> 01:21:39,600
like json merge patch where you have

2030
01:21:39,600 --> 01:21:41,280
sort of a template

2031
01:21:41,280 --> 01:21:43,199
that sort of mirrors the structure of

2032
01:21:43,199 --> 01:21:44,960
the thing you're patching and and you

2033
01:21:44,960 --> 01:21:45,360
plug

2034
01:21:45,360 --> 01:21:47,199
things in like as if you were patching a

2035
01:21:47,199 --> 01:21:48,800
json and that's that's

2036
01:21:48,800 --> 01:21:52,080
um it sort of would work but

2037
01:21:52,080 --> 01:21:54,560
the there this piles look sort of

2038
01:21:54,560 --> 01:21:56,320
sparsely and spacey and

2039
01:21:56,320 --> 01:21:59,679
and indenty and it's

2040
01:21:59,679 --> 01:22:01,679
not really any easier to read than a

2041
01:22:01,679 --> 01:22:03,520
mapping file of the other form

2042
01:22:03,520 --> 01:22:06,000
but uh it's also a possibility also the

2043
01:22:06,000 --> 01:22:07,199
selectors could be

2044
01:22:07,199 --> 01:22:09,360
some other kind of thing like jsonpath

2045
01:22:09,360 --> 01:22:10,560
so you could say if

2046
01:22:10,560 --> 01:22:12,480
i don't really have a json pointer for

2047
01:22:12,480 --> 01:22:13,840
everything i want to build a mapping

2048
01:22:13,840 --> 01:22:15,600
file that's a little more generic and

2049
01:22:15,600 --> 01:22:16,480
and

2050
01:22:16,480 --> 01:22:20,159
you know adds adds things or collects

2051
01:22:20,159 --> 01:22:22,000
node sets from the

2052
01:22:22,000 --> 01:22:24,719
from the sdf file to annotate based on a

2053
01:22:24,719 --> 01:22:26,560
json path query so that could be

2054
01:22:26,560 --> 01:22:27,679
happening

2055
01:22:27,679 --> 01:22:30,880
also as i mentioned earlier beyond just

2056
01:22:30,880 --> 01:22:32,880
augmentation and overriding and adding

2057
01:22:32,880 --> 01:22:34,159
qualities there might be other

2058
01:22:34,159 --> 01:22:36,239
operations we want to do

2059
01:22:36,239 --> 01:22:38,800
i i haven't run across any specific

2060
01:22:38,800 --> 01:22:40,400
examples but

2061
01:22:40,400 --> 01:22:43,679
um people talk about things

2062
01:22:43,679 --> 01:22:46,480
next slide please

2063
01:22:46,880 --> 01:22:49,440
so um yeah one one alternative

2064
01:22:49,440 --> 01:22:50,800
implementation that i

2065
01:22:50,800 --> 01:22:54,000
have played with is using an sdf thing

2066
01:22:54,000 --> 01:22:56,080
as the mapping file so essentially what

2067
01:22:56,080 --> 01:22:58,719
this is is an sdf thing definition

2068
01:22:58,719 --> 01:23:01,120
that uses sdf ref to pull in a bunch of

2069
01:23:01,120 --> 01:23:03,760
objects and it also has the extensions

2070
01:23:03,760 --> 01:23:06,480
in line so i'm saying here's a thing

2071
01:23:06,480 --> 01:23:08,400
that has a voltage measurement and a

2072
01:23:08,400 --> 01:23:09,440
current measurement

2073
01:23:09,440 --> 01:23:11,760
and they use standard ipso objects and

2074
01:23:11,760 --> 01:23:14,080
the voltage measurement now has

2075
01:23:14,080 --> 01:23:16,639
some mapping file information that

2076
01:23:16,639 --> 01:23:18,840
defines data schemas and protocol

2077
01:23:18,840 --> 01:23:20,239
bindings

2078
01:23:20,239 --> 01:23:23,040
for for use in in the target so

2079
01:23:23,040 --> 01:23:24,159
essentially i want to

2080
01:23:24,159 --> 01:23:27,199
aggregate a bunch of objects and stuff

2081
01:23:27,199 --> 01:23:29,199
and i want to maybe define some new data

2082
01:23:29,199 --> 01:23:31,280
type constraints and new data elements

2083
01:23:31,280 --> 01:23:33,120
to use

2084
01:23:33,120 --> 01:23:35,120
to reuse and then i want to customize

2085
01:23:35,120 --> 01:23:37,520
everything and just say well here's my

2086
01:23:37,520 --> 01:23:39,440
here's my thing here's my power supply

2087
01:23:39,440 --> 01:23:41,120
it measures voltage and current and it

2088
01:23:41,120 --> 01:23:43,120
has some settings and it has some

2089
01:23:43,120 --> 01:23:46,400
alarm events and um

2090
01:23:46,400 --> 01:23:48,800
it's all described in one in one place

2091
01:23:48,800 --> 01:23:50,000
and that tends to

2092
01:23:50,000 --> 01:23:51,600
have worked out pretty good for for

2093
01:23:51,600 --> 01:23:52,960
small things at least and of course

2094
01:23:52,960 --> 01:23:54,320
larger things you

2095
01:23:54,320 --> 01:23:55,679
you might want to break them up still

2096
01:23:55,679 --> 01:23:57,360
into multiple files but

2097
01:23:57,360 --> 01:23:59,840
it looks like a good pattern a good

2098
01:23:59,840 --> 01:24:01,360
authoring format if you're just sitting

2099
01:24:01,360 --> 01:24:03,040
down and writing stuff and not just

2100
01:24:03,040 --> 01:24:04,960
machine generating everything this is

2101
01:24:04,960 --> 01:24:08,080
sort of how you might write

2102
01:24:08,639 --> 01:24:14,320
a template for for deployment of things

2103
01:24:14,320 --> 01:24:18,080
next slide please i think i just have a

2104
01:24:18,080 --> 01:24:19,040
couple of graphic

2105
01:24:19,040 --> 01:24:20,480
examples this is really what i was

2106
01:24:20,480 --> 01:24:22,880
talking about the example you uh

2107
01:24:22,880 --> 01:24:24,960
creates a web of things thing

2108
01:24:24,960 --> 01:24:26,639
description

2109
01:24:26,639 --> 01:24:28,880
it has an sdf thing that refers to a

2110
01:24:28,880 --> 01:24:30,000
bunch of objects and

2111
01:24:30,000 --> 01:24:33,600
also pulls in some of the the web of

2112
01:24:33,600 --> 01:24:34,880
things

2113
01:24:34,880 --> 01:24:38,000
data schema and what they call forms

2114
01:24:38,000 --> 01:24:39,840
which are the protocol binding

2115
01:24:39,840 --> 01:24:42,480
elements and so as this sdf thing has

2116
01:24:42,480 --> 01:24:44,639
the object references and the object

2117
01:24:44,639 --> 01:24:46,400
customization

2118
01:24:46,400 --> 01:24:48,639
and the protocol binding information and

2119
01:24:48,639 --> 01:24:52,000
the over the wire schemas

2120
01:24:52,000 --> 01:24:53,679
and that's can be used to sort of

2121
01:24:53,679 --> 01:24:55,440
automatically generate the

2122
01:24:55,440 --> 01:24:57,120
the thing description file for the you

2123
01:24:57,120 --> 01:24:58,800
just add the network address and

2124
01:24:58,800 --> 01:25:00,159
at that point and you have a thing

2125
01:25:00,159 --> 01:25:02,080
description um

2126
01:25:02,080 --> 01:25:05,600
there's juan carlos in the queue

2127
01:25:07,920 --> 01:25:11,520
question michael thanks and

2128
01:25:11,520 --> 01:25:13,440
i have a question i'm trying to to

2129
01:25:13,440 --> 01:25:14,800
figure out uh

2130
01:25:14,800 --> 01:25:18,080
from your talk um let's say that uh

2131
01:25:18,080 --> 01:25:19,920
i wanted to have the semantic definition

2132
01:25:19,920 --> 01:25:21,520
of binary data

2133
01:25:21,520 --> 01:25:24,560
types on the wire but for sensors

2134
01:25:24,560 --> 01:25:26,960
using a binary description let's say uh

2135
01:25:26,960 --> 01:25:27,840
five bits

2136
01:25:27,840 --> 01:25:30,080
for temperature and 11 bits four times

2137
01:25:30,080 --> 01:25:31,440
so so not buying

2138
01:25:31,440 --> 01:25:34,719
byte align but binary uh

2139
01:25:34,719 --> 01:25:38,320
random byte number of bits sorry uh

2140
01:25:38,320 --> 01:25:40,639
used for four different things how do

2141
01:25:40,639 --> 01:25:41,760
you

2142
01:25:41,760 --> 01:25:44,159
picture this this mapping being worked

2143
01:25:44,159 --> 01:25:45,600
out

2144
01:25:45,600 --> 01:25:48,639
for the types uh we have a few examples

2145
01:25:48,639 --> 01:25:51,120
of the raw models that do that and

2146
01:25:51,120 --> 01:25:53,520
essentially it's easy enough to say

2147
01:25:53,520 --> 01:25:55,440
a packed thing is sort of an array with

2148
01:25:55,440 --> 01:25:57,280
unique items and

2149
01:25:57,280 --> 01:25:59,440
and when you do that you can then size

2150
01:25:59,440 --> 01:26:00,480
each item

2151
01:26:00,480 --> 01:26:02,800
uh by using a numeric range or string

2152
01:26:02,800 --> 01:26:05,360
constraints so that they fit in the

2153
01:26:05,360 --> 01:26:08,480
in the uh in the elements you want to

2154
01:26:08,480 --> 01:26:09,760
pack them in

2155
01:26:09,760 --> 01:26:11,520
so that's probably the first thing that

2156
01:26:11,520 --> 01:26:13,440
needs to be done if this thing is for

2157
01:26:13,440 --> 01:26:14,080
packed

2158
01:26:14,080 --> 01:26:16,239
uh use then you might want to define it

2159
01:26:16,239 --> 01:26:17,679
as having a range of only

2160
01:26:17,679 --> 01:26:19,760
zero to three for example if you're

2161
01:26:19,760 --> 01:26:21,360
using two bits

2162
01:26:21,360 --> 01:26:24,320
so the the bare model is is uh already

2163
01:26:24,320 --> 01:26:25,199
covered

2164
01:26:25,199 --> 01:26:28,560
the way the mapping is done um is kind

2165
01:26:28,560 --> 01:26:29,520
of

2166
01:26:29,520 --> 01:26:32,239
up to the protocol that you're mapping

2167
01:26:32,239 --> 01:26:33,199
to so this is

2168
01:26:33,199 --> 01:26:35,040
this is really one of the challenges so

2169
01:26:35,040 --> 01:26:36,880
where we have this in

2170
01:26:36,880 --> 01:26:40,159
bluetooth now i think the example

2171
01:26:40,159 --> 01:26:44,800
um what we have is a

2172
01:26:44,800 --> 01:26:46,320
an additional quality i don't believe

2173
01:26:46,320 --> 01:26:48,320
it's in the vocabulary anymore because

2174
01:26:48,320 --> 01:26:49,120
we

2175
01:26:49,120 --> 01:26:50,800
we didn't really have it fully defined

2176
01:26:50,800 --> 01:26:53,679
but it is uh within bits

2177
01:26:53,679 --> 01:26:56,080
and so you can construct an array of

2178
01:26:56,080 --> 01:26:58,000
these items in the binding and you can

2179
01:26:58,000 --> 01:26:59,280
say the width and bits of

2180
01:26:59,280 --> 01:27:01,040
this one within bits is two this one

2181
01:27:01,040 --> 01:27:02,719
within bits is five

2182
01:27:02,719 --> 01:27:05,280
and this within bits is one and then you

2183
01:27:05,280 --> 01:27:07,199
can put them in an array and pretty much

2184
01:27:07,199 --> 01:27:08,639
describes the full

2185
01:27:08,639 --> 01:27:10,639
the full packing and i don't have an

2186
01:27:10,639 --> 01:27:11,840
example of

2187
01:27:11,840 --> 01:27:14,080
the array binding i don't think but

2188
01:27:14,080 --> 01:27:18,800
that's essentially the pattern

2189
01:27:18,800 --> 01:27:21,600
okay drain the original data so that it

2190
01:27:21,600 --> 01:27:22,639
fits in the

2191
01:27:22,639 --> 01:27:24,400
elements you're packing it into and then

2192
01:27:24,400 --> 01:27:25,679
you can define

2193
01:27:25,679 --> 01:27:27,840
the width of each element in in an array

2194
01:27:27,840 --> 01:27:28,800
in the in the

2195
01:27:28,800 --> 01:27:30,560
data schema part of the binding that

2196
01:27:30,560 --> 01:27:32,400
describes what goes on the wire

2197
01:27:32,400 --> 01:27:34,639
that way if you decide well this is just

2198
01:27:34,639 --> 01:27:36,960
i want to expose it as a json in my web

2199
01:27:36,960 --> 01:27:39,120
service and each one is just a

2200
01:27:39,120 --> 01:27:41,199
json number string or boolean then you

2201
01:27:41,199 --> 01:27:42,800
can always map it that way and

2202
01:27:42,800 --> 01:27:45,040
and and the system will know how to how

2203
01:27:45,040 --> 01:27:48,800
to repack it and unpack it

2204
01:27:49,760 --> 01:27:52,560
okay cool thank you

2205
01:27:58,239 --> 01:28:01,840
so next slide please i think we're about

2206
01:28:01,840 --> 01:28:04,560
done yeah next step so we have to figure

2207
01:28:04,560 --> 01:28:06,800
out how the extension schemas would work

2208
01:28:06,800 --> 01:28:08,320
and and how we actually create

2209
01:28:08,320 --> 01:28:10,480
extensions to sdfs that can still be

2210
01:28:10,480 --> 01:28:12,159
validated i think that's

2211
01:28:12,159 --> 01:28:15,280
a good a good direction to try to pursue

2212
01:28:15,280 --> 01:28:17,600
um if that makes sense we need to really

2213
01:28:17,600 --> 01:28:19,440
do some broad review and pressure test

2214
01:28:19,440 --> 01:28:20,560
of this so

2215
01:28:20,560 --> 01:28:22,000
where we've already done model

2216
01:28:22,000 --> 01:28:24,400
conversion we need to look at

2217
01:28:24,400 --> 01:28:27,679
uh where people would incorporate

2218
01:28:27,679 --> 01:28:29,840
instance bindings and mapping files and

2219
01:28:29,840 --> 01:28:30,960
these extensions

2220
01:28:30,960 --> 01:28:33,120
for you know what did the ocf ones look

2221
01:28:33,120 --> 01:28:34,800
like what are the zigbee ones look like

2222
01:28:34,800 --> 01:28:36,080
for example

2223
01:28:36,080 --> 01:28:38,080
and then we need to formalize the design

2224
01:28:38,080 --> 01:28:40,239
patterns once we sort of figure out

2225
01:28:40,239 --> 01:28:42,320
a set of things that we want to do and

2226
01:28:42,320 --> 01:28:43,440
then

2227
01:28:43,440 --> 01:28:45,600
um really for sdf next we could

2228
01:28:45,600 --> 01:28:46,880
introduce

2229
01:28:46,880 --> 01:28:48,639
a couple of concepts like these

2230
01:28:48,639 --> 01:28:51,040
extension schemas and maybe formats for

2231
01:28:51,040 --> 01:28:52,320
mapping files

2232
01:28:52,320 --> 01:28:55,840
and then maybe some processing model

2233
01:28:55,840 --> 01:28:58,239
definitions as well and it occurred to

2234
01:28:58,239 --> 01:28:59,840
me that at some point we might start

2235
01:28:59,840 --> 01:29:01,600
looking at making separate traps for

2236
01:29:01,600 --> 01:29:03,199
some of this stuff as well like we did

2237
01:29:03,199 --> 01:29:04,880
with coap i don't know how good

2238
01:29:04,880 --> 01:29:06,480
how well it really worked out with co-op

2239
01:29:06,480 --> 01:29:08,960
to have observed be a separate draft but

2240
01:29:08,960 --> 01:29:10,960
some of these like mapping files might

2241
01:29:10,960 --> 01:29:13,600
might be a separate draft um

2242
01:29:13,600 --> 01:29:15,120
just a question that occurred to me i

2243
01:29:15,120 --> 01:29:17,840
don't know if it's a good idea or not

2244
01:29:17,840 --> 01:29:20,400
right next slide i think we're about to

2245
01:29:20,400 --> 01:29:20,960
the end

2246
01:29:20,960 --> 01:29:23,679
yeah oh oh yeah so value scaling we

2247
01:29:23,679 --> 01:29:25,600
talked about this enough already but

2248
01:29:25,600 --> 01:29:29,040
my point on value scaling is uh probably

2249
01:29:29,040 --> 01:29:30,639
most of that is going to be done at one

2250
01:29:30,639 --> 01:29:32,320
time so carson and

2251
01:29:32,320 --> 01:29:34,239
you know we talked about layers and how

2252
01:29:34,239 --> 01:29:35,920
you might want some constraints

2253
01:29:35,920 --> 01:29:38,080
at one and then layer on more

2254
01:29:38,080 --> 01:29:39,520
constraints when you do another thing

2255
01:29:39,520 --> 01:29:40,239
but

2256
01:29:40,239 --> 01:29:42,880
for the value scaling it at least in my

2257
01:29:42,880 --> 01:29:44,880
examples it's worked out pretty well to

2258
01:29:44,880 --> 01:29:47,199
say well here's my basic model it has a

2259
01:29:47,199 --> 01:29:49,679
number that represents voltage grade

2260
01:29:49,679 --> 01:29:51,440
uh here's my protocol binding the

2261
01:29:51,440 --> 01:29:53,520
voltage is between 0 and 30 in

2262
01:29:53,520 --> 01:29:55,840
increments of 0.01 and it has a digital

2263
01:29:55,840 --> 01:29:57,440
representation of

2264
01:29:57,440 --> 01:30:00,480
of an integer between 0 and 3 000 and it

2265
01:30:00,480 --> 01:30:01,520
has a

2266
01:30:01,520 --> 01:30:04,400
you know a quantity representation of 0

2267
01:30:04,400 --> 01:30:04,880
to

2268
01:30:04,880 --> 01:30:08,239
30.00 and i can describe all of that in

2269
01:30:08,239 --> 01:30:10,239
the binding as an extension so we don't

2270
01:30:10,239 --> 01:30:10,960
really need

2271
01:30:10,960 --> 01:30:14,159
uh you know sdf uh to

2272
01:30:14,159 --> 01:30:16,239
to fix that right away but i think that

2273
01:30:16,239 --> 01:30:18,000
having common patterns for doing this

2274
01:30:18,000 --> 01:30:21,120
the value scaling is definitely a big

2275
01:30:21,120 --> 01:30:22,400
going to be a big deal for

2276
01:30:22,400 --> 01:30:25,280
interoperability

2277
01:30:25,360 --> 01:30:28,000
and that was all i had questions

2278
01:30:28,000 --> 01:30:30,400
comments

2279
01:30:31,280 --> 01:30:34,800
thank you michael also very interesting

2280
01:30:34,800 --> 01:30:35,760
stuff and i think

2281
01:30:35,760 --> 01:30:37,040
having worked with these translation

2282
01:30:37,040 --> 01:30:39,360
bits i think it's a

2283
01:30:39,360 --> 01:30:42,639
it's a good good um part to

2284
01:30:42,639 --> 01:30:45,440
try to align a bit on and work with

2285
01:30:45,440 --> 01:30:46,960
because there's a lot of hidden stuff

2286
01:30:46,960 --> 01:30:48,560
here that makes things

2287
01:30:48,560 --> 01:30:50,560
what sounds easy turns out to be pretty

2288
01:30:50,560 --> 01:30:52,880
complicated to map well but

2289
01:30:52,880 --> 01:30:57,280
very good um i uh

2290
01:30:57,280 --> 01:30:58,960
as we said in the chat i think it also

2291
01:30:58,960 --> 01:31:00,400
makes sense to have this as a separate

2292
01:31:00,400 --> 01:31:01,920
specification

2293
01:31:01,920 --> 01:31:06,880
from the sdf spec carson

2294
01:31:06,880 --> 01:31:09,920
yeah i think that this was a very good

2295
01:31:09,920 --> 01:31:13,440
talk and this really leads to

2296
01:31:13,440 --> 01:31:16,800
the the question when do we how do we

2297
01:31:16,800 --> 01:31:19,520
pursue this kind of work and i think

2298
01:31:19,520 --> 01:31:20,960
this would be a good time to actually

2299
01:31:20,960 --> 01:31:22,239
talk about the

2300
01:31:22,239 --> 01:31:24,639
next virtual interims because i i really

2301
01:31:24,639 --> 01:31:25,520
wouldn't want

2302
01:31:25,520 --> 01:31:29,840
this to sit by the wayside for another

2303
01:31:29,840 --> 01:31:30,320
month

2304
01:31:30,320 --> 01:31:35,440
before we start continuing uh work on it

2305
01:31:36,719 --> 01:31:39,840
yep i we can absolutely take that

2306
01:31:39,840 --> 01:31:41,440
discussion right now

2307
01:31:41,440 --> 01:31:43,520
we have half an hour left and i think

2308
01:31:43,520 --> 01:31:44,719
the compact stuff can

2309
01:31:44,719 --> 01:31:48,320
can can uh stick at the end um

2310
01:31:48,320 --> 01:31:51,600
so uh what i mean

2311
01:31:51,600 --> 01:31:53,040
one of the things here going into the

2312
01:31:53,040 --> 01:31:55,120
mapping files is that i think we need to

2313
01:31:55,120 --> 01:31:55,840
have

2314
01:31:55,840 --> 01:31:58,239
good understanding of the requirements

2315
01:31:58,239 --> 01:31:59,840
what the various ecosystems

2316
01:31:59,840 --> 01:32:02,000
want basically i mean you had example

2317
01:32:02,000 --> 01:32:02,880
with ipso here

2318
01:32:02,880 --> 01:32:06,080
and the mapping to numeric ids

2319
01:32:06,080 --> 01:32:08,320
uh we have router and the meeting here

2320
01:32:08,320 --> 01:32:09,600
as well so

2321
01:32:09,600 --> 01:32:12,159
mapping to ocf and so on but maybe it

2322
01:32:12,159 --> 01:32:14,320
would be really good to have

2323
01:32:14,320 --> 01:32:16,000
so that would say what what we define

2324
01:32:16,000 --> 01:32:18,400
here is actually maps well too

2325
01:32:18,400 --> 01:32:19,840
so maybe we should put together some

2326
01:32:19,840 --> 01:32:22,400
kind of i don't want to column use cases

2327
01:32:22,400 --> 01:32:23,199
but not

2328
01:32:23,199 --> 01:32:26,560
some kind of template

2329
01:32:26,560 --> 01:32:28,400
cases that we translate to the various

2330
01:32:28,400 --> 01:32:30,960
ecosystems that should work right

2331
01:32:30,960 --> 01:32:34,960
what makes it needed um

2332
01:32:36,480 --> 01:32:38,719
yeah yeah okay i saw your comment in the

2333
01:32:38,719 --> 01:32:41,840
chat question yes

2334
01:32:42,960 --> 01:32:45,120
for the for the final specification yes

2335
01:32:45,120 --> 01:32:47,120
but but for this work in progress i

2336
01:32:47,120 --> 01:32:48,320
think we can start

2337
01:32:48,320 --> 01:32:52,840
working right away right or what do you

2338
01:32:52,840 --> 01:32:55,840
mean

2339
01:32:59,199 --> 01:33:00,880
so to my mind there's there's three

2340
01:33:00,880 --> 01:33:03,440
things here that we need to figure out

2341
01:33:03,440 --> 01:33:06,639
um what what bit of fdf

2342
01:33:06,639 --> 01:33:10,000
next do we need to clarify before we can

2343
01:33:10,000 --> 01:33:10,719
get

2344
01:33:10,719 --> 01:33:14,480
we can deal with mappings um and

2345
01:33:14,480 --> 01:33:18,239
um what is the work to generate

2346
01:33:18,239 --> 01:33:21,280
to to build this

2347
01:33:21,440 --> 01:33:24,960
mapping specification um and

2348
01:33:24,960 --> 01:33:27,360
then what are the sample example

2349
01:33:27,360 --> 01:33:28,159
mappings

2350
01:33:28,159 --> 01:33:31,120
um there and it sounds like we need to

2351
01:33:31,120 --> 01:33:32,880
do some of this work before we can have

2352
01:33:32,880 --> 01:33:34,320
a virtual interim

2353
01:33:34,320 --> 01:33:36,960
to reasonably discuss it um but on the

2354
01:33:36,960 --> 01:33:38,159
other hand we we don't

2355
01:33:38,159 --> 01:33:39,520
we don't need to complete all of the

2356
01:33:39,520 --> 01:33:41,280
work we need to get there we need to get

2357
01:33:41,280 --> 01:33:42,480
some of the work

2358
01:33:42,480 --> 01:33:44,239
enough to a point where we can have a

2359
01:33:44,239 --> 01:33:45,760
conversation about it does that

2360
01:33:45,760 --> 01:33:48,239
sound right

2361
01:33:49,760 --> 01:33:52,080
yep

2362
01:33:53,040 --> 01:33:56,880
um yes i think so

2363
01:33:56,880 --> 01:33:59,360
michael cluster yeah yeah one quick

2364
01:33:59,360 --> 01:33:59,920
comment

2365
01:33:59,920 --> 01:34:03,600
um that in in my

2366
01:34:03,600 --> 01:34:06,480
work and examples using uh the web of

2367
01:34:06,480 --> 01:34:08,320
things thing description

2368
01:34:08,320 --> 01:34:10,719
it it could be as simple as just

2369
01:34:10,719 --> 01:34:11,440
providing

2370
01:34:11,440 --> 01:34:13,760
the data schema element and forms

2371
01:34:13,760 --> 01:34:15,600
element from thing description because

2372
01:34:15,600 --> 01:34:17,040
thing description already has a

2373
01:34:17,040 --> 01:34:19,360
well-structured protocol binding

2374
01:34:19,360 --> 01:34:21,840
so i kind of took the easy way out there

2375
01:34:21,840 --> 01:34:23,040
but also it's a good

2376
01:34:23,040 --> 01:34:26,880
good starting point for something like

2377
01:34:26,880 --> 01:34:30,159
ocf you probably want to be able to

2378
01:34:30,159 --> 01:34:32,800
introduce swagger files and point things

2379
01:34:32,800 --> 01:34:35,199
to you know open api files so

2380
01:34:35,199 --> 01:34:37,920
i think nicholas what you just said is

2381
01:34:37,920 --> 01:34:40,000
sorry but what michael just said is that

2382
01:34:40,000 --> 01:34:42,159
those three uh stages yeah we need to

2383
01:34:42,159 --> 01:34:43,119
figure out

2384
01:34:43,119 --> 01:34:45,040
what are the differences between you

2385
01:34:45,040 --> 01:34:46,800
know the different templates that we use

2386
01:34:46,800 --> 01:34:48,320
for the mapping and then

2387
01:34:48,320 --> 01:34:50,320
really what's the commonality what's the

2388
01:34:50,320 --> 01:34:52,000
is it is it really just an extension

2389
01:34:52,000 --> 01:34:53,520
mechanism that you can pass

2390
01:34:53,520 --> 01:34:56,080
arbitrary stuff through that we that we

2391
01:34:56,080 --> 01:34:58,239
don't really define in our own ontology

2392
01:34:58,239 --> 01:34:58,480
or

2393
01:34:58,480 --> 01:35:00,000
is there going to be some kind of common

2394
01:35:00,000 --> 01:35:01,920
ontology of things that work for all

2395
01:35:01,920 --> 01:35:03,520
protocol bindings and i don't think we

2396
01:35:03,520 --> 01:35:04,000
really

2397
01:35:04,000 --> 01:35:06,719
have a totally clear feeling about that

2398
01:35:06,719 --> 01:35:07,360
yet

2399
01:35:07,360 --> 01:35:09,360
but web of things each protocol binding

2400
01:35:09,360 --> 01:35:11,280
is a whole separate vocabulary with its

2401
01:35:11,280 --> 01:35:12,639
own ontology

2402
01:35:12,639 --> 01:35:14,560
and they're all already developing them

2403
01:35:14,560 --> 01:35:16,480
so again it's an easy way

2404
01:35:16,480 --> 01:35:18,320
it's an easy way out i don't know if

2405
01:35:18,320 --> 01:35:20,000
it's sufficient for everything but

2406
01:35:20,000 --> 01:35:21,360
there's some patterns there that are a

2407
01:35:21,360 --> 01:35:24,239
good starting point

2408
01:35:24,560 --> 01:35:27,679
so i i think we should start with

2409
01:35:27,679 --> 01:35:28,000
putting

2410
01:35:28,000 --> 01:35:31,040
together some reasonably simple examples

2411
01:35:31,040 --> 01:35:32,000
of moving from

2412
01:35:32,000 --> 01:35:34,719
i mean what is so so we don't need to

2413
01:35:34,719 --> 01:35:35,440
expand

2414
01:35:35,440 --> 01:35:39,199
um so we can basically use sdf11 as it

2415
01:35:39,199 --> 01:35:39,520
is

2416
01:35:39,520 --> 01:35:42,239
and don't have to do finish sdf next

2417
01:35:42,239 --> 01:35:43,040
before we

2418
01:35:43,040 --> 01:35:44,960
sort of find the last things but we so

2419
01:35:44,960 --> 01:35:46,800
simple example using gas properties for

2420
01:35:46,800 --> 01:35:48,000
instance

2421
01:35:48,000 --> 01:35:52,320
um and then try that out and then build

2422
01:35:52,320 --> 01:35:54,320
on that

2423
01:35:54,320 --> 01:35:55,920
so maybe actually doing some kind of

2424
01:35:55,920 --> 01:35:58,480
more hackathon-oriented meeting would be

2425
01:35:58,480 --> 01:36:02,718
make a lot of sense here uh

2426
01:36:03,440 --> 01:36:05,440
from the perspective of people try this

2427
01:36:05,440 --> 01:36:07,600
out and and and sort of can compare

2428
01:36:07,600 --> 01:36:08,159
notes

2429
01:36:08,159 --> 01:36:11,839
uh before you continue

2430
01:36:12,880 --> 01:36:15,280
yup

2431
01:36:16,080 --> 01:36:19,199
but um so then the question of becomes

2432
01:36:19,199 --> 01:36:24,159
that right how do we how do we um

2433
01:36:24,159 --> 01:36:26,799
should we just

2434
01:36:27,440 --> 01:36:29,280
because obviously the mapping files is

2435
01:36:29,280 --> 01:36:31,679
an er

2436
01:36:31,679 --> 01:36:34,000
to make sdf useful for your ecosystem

2437
01:36:34,000 --> 01:36:36,480
you really need to have this in place

2438
01:36:36,480 --> 01:36:39,920
so i guess we need to

2439
01:36:39,920 --> 01:36:42,639
uh we need to have a robust

2440
01:36:42,639 --> 01:36:45,520
understanding of them

2441
01:36:45,520 --> 01:36:48,480
um

2442
01:36:50,159 --> 01:36:52,239
should we start with should we should we

2443
01:36:52,239 --> 01:36:54,320
try to have a like an entry meeting

2444
01:36:54,320 --> 01:36:57,600
like a month from now or is that

2445
01:36:57,600 --> 01:37:00,639
in the middle of easter

2446
01:37:04,840 --> 01:37:07,840
uh

2447
01:37:13,280 --> 01:37:21,199
yeah um

2448
01:37:21,199 --> 01:37:24,000
week 15

2449
01:37:24,560 --> 01:37:27,920
that translates to uh

2450
01:37:27,920 --> 01:37:32,000
week of april 12th

2451
01:37:33,440 --> 01:37:35,839
uh

2452
01:37:37,920 --> 01:37:42,560
if you start your week on mondays uh

2453
01:37:42,560 --> 01:37:46,880
my week number's off i went by and

2454
01:37:46,880 --> 01:37:50,960
anyway uh so um

2455
01:37:50,960 --> 01:37:53,040
from what i heard carsten say that he

2456
01:37:53,040 --> 01:37:54,719
didn't want to leave it a month

2457
01:37:54,719 --> 01:37:58,960
and that is a month from now um

2458
01:37:58,960 --> 01:38:01,119
so so i thought that he was trying to go

2459
01:38:01,119 --> 01:38:02,159
for for

2460
01:38:02,159 --> 01:38:06,080
this week here if we come up with a

2461
01:38:06,080 --> 01:38:06,800
specific

2462
01:38:06,800 --> 01:38:10,400
program for what we actually want to get

2463
01:38:10,400 --> 01:38:12,960
done up to that interim meeting maybe

2464
01:38:12,960 --> 01:38:15,440
even with a little hackathon hall

2465
01:38:15,440 --> 01:38:18,560
call in between i think

2466
01:38:18,560 --> 01:38:31,840
mid april might be the right thing

2467
01:38:33,280 --> 01:38:35,679
so you're thinking this week karsten for

2468
01:38:35,679 --> 01:38:36,480
this goal

2469
01:38:36,480 --> 01:38:39,199
but you're thinking about something like

2470
01:38:39,199 --> 01:38:42,480
a call during this week

2471
01:38:42,960 --> 01:38:46,080
yes so the next week i'm not all right

2472
01:38:46,080 --> 01:38:46,400
so

2473
01:38:46,400 --> 01:38:48,639
let's let's put up a uh uh so you're

2474
01:38:48,639 --> 01:38:49,600
talking about like

2475
01:38:49,600 --> 01:38:52,159
two or three calls you know half hour

2476
01:38:52,159 --> 01:38:53,440
calls during that week is that what

2477
01:38:53,440 --> 01:38:54,960
you're talking about

2478
01:38:54,960 --> 01:38:57,920
what is that what you mean by don't know

2479
01:38:57,920 --> 01:38:58,960
if we need that

2480
01:38:58,960 --> 01:39:01,760
like not not long calls like like 20

2481
01:39:01,760 --> 01:39:02,800
minute long

2482
01:39:02,800 --> 01:39:05,840
things or something like this

2483
01:39:08,159 --> 01:39:10,560
now week 13 is a little bit uh difficult

2484
01:39:10,560 --> 01:39:11,440
because it has

2485
01:39:11,440 --> 01:39:16,799
the easter early days in it

2486
01:39:23,520 --> 01:39:25,679
well the easterly days begin on a

2487
01:39:25,679 --> 01:39:27,520
thursday

2488
01:39:27,520 --> 01:39:30,880
tuesday for you okay

2489
01:39:31,119 --> 01:39:33,840
nice it's not an official holiday but

2490
01:39:33,840 --> 01:39:35,119
it's

2491
01:39:35,119 --> 01:39:37,920
nobody shows up

2492
01:39:39,360 --> 01:39:42,400
but then the week the week the after

2493
01:39:42,400 --> 01:39:43,440
easter right

2494
01:39:43,440 --> 01:39:47,840
week 14. uh

2495
01:39:47,840 --> 01:39:49,440
sometimes in the middle of that week

2496
01:39:49,440 --> 01:39:54,560
perhaps to to uh

2497
01:39:54,560 --> 01:39:58,480
yeah maybe not the tenth but

2498
01:39:59,600 --> 01:40:02,159
the eighth let's let's do uh let's do

2499
01:40:02,159 --> 01:40:03,760
let's do a doodle for that right so

2500
01:40:03,760 --> 01:40:05,600
people can't they can't check it out

2501
01:40:05,600 --> 01:40:08,560
but we have directions okay yeah all

2502
01:40:08,560 --> 01:40:08,880
right

2503
01:40:08,880 --> 01:40:13,040
uh and then um

2504
01:40:13,040 --> 01:40:15,360
do we need to do so one of the good

2505
01:40:15,360 --> 01:40:16,159
things perhaps

2506
01:40:16,159 --> 01:40:18,880
is if if because michael koster you had

2507
01:40:18,880 --> 01:40:19,679
a lot of

2508
01:40:19,679 --> 01:40:21,440
sort of already thought a bit quite a

2509
01:40:21,440 --> 01:40:23,360
bit about this if you want to throw out

2510
01:40:23,360 --> 01:40:25,679
some kind of straw man proposal

2511
01:40:25,679 --> 01:40:27,920
or putting together what has been done

2512
01:40:27,920 --> 01:40:29,199
so far

2513
01:40:29,199 --> 01:40:32,719
um uh i mean get very rough

2514
01:40:32,719 --> 01:40:34,880
or we can or maybe take some dislikes or

2515
01:40:34,880 --> 01:40:36,880
something and then we can have that as a

2516
01:40:36,880 --> 01:40:38,239
starting point

2517
01:40:38,239 --> 01:40:39,920
for the further discussion yeah i can i

2518
01:40:39,920 --> 01:40:41,600
can wrap up what i've done

2519
01:40:41,600 --> 01:40:43,679
um i don't know if i'm ready to start an

2520
01:40:43,679 --> 01:40:45,520
internet draft yet but that's

2521
01:40:45,520 --> 01:40:47,280
when i thought about how i would wrap

2522
01:40:47,280 --> 01:40:49,119
this up that's when i thought about

2523
01:40:49,119 --> 01:40:51,280
an internet draft so if i get really

2524
01:40:51,280 --> 01:40:52,320
crazy but

2525
01:40:52,320 --> 01:40:55,040
i think yeah the next step would be to

2526
01:40:55,040 --> 01:40:56,800
sort of make a make a little bit more of

2527
01:40:56,800 --> 01:40:57,920
a document out of

2528
01:40:57,920 --> 01:40:59,600
what we have and also look at what other

2529
01:40:59,600 --> 01:41:01,199
people have done other folks have worked

2530
01:41:01,199 --> 01:41:03,040
on the mapping files and have

2531
01:41:03,040 --> 01:41:04,719
things to contribute that i have it

2532
01:41:04,719 --> 01:41:06,560
wasn't able to roll up into my

2533
01:41:06,560 --> 01:41:08,960
talk today but for uh for this i would

2534
01:41:08,960 --> 01:41:11,760
do that also

2535
01:41:11,920 --> 01:41:15,520
great thank you then we have

2536
01:41:15,520 --> 01:41:17,440
both the way forward on this and the way

2537
01:41:17,440 --> 01:41:19,360
forward on meeting time and we'll have

2538
01:41:19,360 --> 01:41:20,960
the topic for the next meeting

2539
01:41:20,960 --> 01:41:24,639
great and there will be doodle sent out

2540
01:41:24,639 --> 01:41:28,320
uh soon each uh regards to next week

2541
01:41:28,320 --> 01:41:30,840
in regards to this uh the upcoming

2542
01:41:30,840 --> 01:41:32,159
interim

2543
01:41:32,159 --> 01:41:36,159
great uh any other questions on this

2544
01:41:36,159 --> 01:41:37,760
we have now 20 minutes left to the

2545
01:41:37,760 --> 01:41:39,119
meeting we have only one at the end of

2546
01:41:39,119 --> 01:41:41,360
point left which is the compact format

2547
01:41:41,360 --> 01:41:43,760
but anything any final thoughts and

2548
01:41:43,760 --> 01:41:44,560
stuff on the

2549
01:41:44,560 --> 01:41:49,600
uh and the mapping if not then we uh

2550
01:41:49,600 --> 01:41:51,280
yeah there's a bit of discussion on on

2551
01:41:51,280 --> 01:41:54,960
the may on the chat there as well

2552
01:41:54,960 --> 01:41:58,639
ari yeah maybe

2553
01:41:58,639 --> 01:42:00,960
one interesting potential aspect for the

2554
01:42:00,960 --> 01:42:01,920
mapping that we haven't

2555
01:42:01,920 --> 01:42:04,480
really discussed yet is um being able to

2556
01:42:04,480 --> 01:42:05,440
express

2557
01:42:05,440 --> 01:42:07,840
more relationship between objects and

2558
01:42:07,840 --> 01:42:08,880
and things

2559
01:42:08,880 --> 01:42:10,080
so right now we have only the

2560
01:42:10,080 --> 01:42:11,520
hierarchical way of expressing that

2561
01:42:11,520 --> 01:42:13,280
object is part of the thing

2562
01:42:13,280 --> 01:42:14,800
but if you want to say hey how this is

2563
01:42:14,800 --> 01:42:16,560
how these two things or two objects

2564
01:42:16,560 --> 01:42:18,000
relate to each other

2565
01:42:18,000 --> 01:42:20,639
um that could also be something that we

2566
01:42:20,639 --> 01:42:22,080
could be experimenting in the in the

2567
01:42:22,080 --> 01:42:23,280
mapping file

2568
01:42:23,280 --> 01:42:26,159
so i guess it's just like kind of call

2569
01:42:26,159 --> 01:42:27,040
for

2570
01:42:27,040 --> 01:42:28,560
anyone interested in that topic and

2571
01:42:28,560 --> 01:42:30,880
having knowledge on how these things are

2572
01:42:30,880 --> 01:42:31,199
done

2573
01:42:31,199 --> 01:42:33,440
in perhaps other ecosystems would be

2574
01:42:33,440 --> 01:42:34,239
interesting to

2575
01:42:34,239 --> 01:42:37,040
exchange some notes

2576
01:42:37,840 --> 01:42:40,320
yeah very good point even though i is

2577
01:42:40,320 --> 01:42:42,159
that really a mapping file pro i think

2578
01:42:42,159 --> 01:42:45,199
that feels like a core sdf problem but

2579
01:42:45,199 --> 01:42:47,679
uh i mean obviously with the

2580
01:42:47,679 --> 01:42:49,280
implications of the mapping file but i

2581
01:42:49,280 --> 01:42:50,320
think that the

2582
01:42:50,320 --> 01:42:52,159
much of this happens in the in the core

2583
01:42:52,159 --> 01:42:53,920
bit

2584
01:42:53,920 --> 01:42:57,199
michael koster

2585
01:42:57,199 --> 01:42:59,360
i'm just going to kind of plus one and

2586
01:42:59,360 --> 01:43:00,480
say that

2587
01:43:00,480 --> 01:43:02,719
this idea of it's also has to do with

2588
01:43:02,719 --> 01:43:04,719
the consolidation so the thing model

2589
01:43:04,719 --> 01:43:06,800
that i did that pulls in objects

2590
01:43:06,800 --> 01:43:08,800
would benefit a lot from having similar

2591
01:43:08,800 --> 01:43:11,040
annotation that would tell you about

2592
01:43:11,040 --> 01:43:15,040
how these things work together

2593
01:43:22,000 --> 01:43:24,480
for the mapping it's in general some

2594
01:43:24,480 --> 01:43:25,840
mechanism whether in the

2595
01:43:25,840 --> 01:43:29,199
base sdf mapping file or a third way

2596
01:43:29,199 --> 01:43:31,679
of doing it i think it's an interesting

2597
01:43:31,679 --> 01:43:33,199
topic to look into

2598
01:43:33,199 --> 01:43:36,239
oh yeah yeah absolutely absolutely

2599
01:43:36,239 --> 01:43:37,840
yeah there were some pointers to

2600
01:43:37,840 --> 01:43:39,600
crosslinks call down links

2601
01:43:39,600 --> 01:43:42,800
and relationships and stuff so um uh

2602
01:43:42,800 --> 01:43:44,880
and i guess we can look at other

2603
01:43:44,880 --> 01:43:47,040
modeling languages and environments to

2604
01:43:47,040 --> 01:43:50,840
get even further even additional uh even

2605
01:43:50,840 --> 01:43:53,840
more stuff in that space

2606
01:43:53,840 --> 01:43:56,880
good uh let's uh do the final

2607
01:43:56,880 --> 01:43:59,280
uh presentation here for today carsten

2608
01:43:59,280 --> 01:44:01,040
on the sdf compact

2609
01:44:01,040 --> 01:44:03,280
please go ahead yeah thank you i wanted

2610
01:44:03,280 --> 01:44:05,040
to have this at the end because it's

2611
01:44:05,040 --> 01:44:07,520
really i mean it's more like the the

2612
01:44:07,520 --> 01:44:08,480
dinner talk

2613
01:44:08,480 --> 01:44:11,280
kind of thing um it's completely

2614
01:44:11,280 --> 01:44:12,639
optional it's not not

2615
01:44:12,639 --> 01:44:14,719
changing anything what we are doing it's

2616
01:44:14,719 --> 01:44:16,719
not adding semantics and so on

2617
01:44:16,719 --> 01:44:20,000
uh but it might still help us doing our

2618
01:44:20,000 --> 01:44:22,880
work next slide

2619
01:44:23,520 --> 01:44:27,040
so the the observation is that sdf has

2620
01:44:27,040 --> 01:44:28,639
been designed and optimized for

2621
01:44:28,639 --> 01:44:30,320
interchange between tools and

2622
01:44:30,320 --> 01:44:34,000
that's actually one of its main unique

2623
01:44:34,000 --> 01:44:37,360
selling propositions that

2624
01:44:37,360 --> 01:44:40,480
this is a language that helps

2625
01:44:40,480 --> 01:44:42,800
bringing different tools together and

2626
01:44:42,800 --> 01:44:44,239
that's certainly not something you want

2627
01:44:44,239 --> 01:44:46,400
to change at all

2628
01:44:46,400 --> 01:44:48,719
on the other hand uh humans do have to

2629
01:44:48,719 --> 01:44:50,560
work on on sdf models

2630
01:44:50,560 --> 01:44:54,000
too and uh a format that is optimized

2631
01:44:54,000 --> 01:44:54,880
for tools

2632
01:44:54,880 --> 01:44:57,440
cannot at the same time be optimized for

2633
01:44:57,440 --> 01:44:58,800
uh humans

2634
01:44:58,800 --> 01:45:00,400
and that of course is not a new thing

2635
01:45:00,400 --> 01:45:02,400
that that has happened before

2636
01:45:02,400 --> 01:45:05,840
and one example that is

2637
01:45:05,840 --> 01:45:08,880
pretty dearly to my heart um is

2638
01:45:08,880 --> 01:45:12,000
that when um xml

2639
01:45:12,000 --> 01:45:14,320
got got a reasonable schema language

2640
01:45:14,320 --> 01:45:15,119
after the

2641
01:45:15,119 --> 01:45:18,639
w3c schema disaster

2642
01:45:18,639 --> 01:45:22,080
that started as an xml based format

2643
01:45:22,080 --> 01:45:26,000
and yeah that was the obvious

2644
01:45:26,000 --> 01:45:29,600
way to do this because xml is about xml

2645
01:45:29,600 --> 01:45:31,840
so you should have an xml based format

2646
01:45:31,840 --> 01:45:35,440
describing xml but

2647
01:45:35,440 --> 01:45:38,639
people quickly found out that this

2648
01:45:38,639 --> 01:45:41,520
is possible but not what you actually

2649
01:45:41,520 --> 01:45:42,560
want

2650
01:45:42,560 --> 01:45:45,440
so james clark uh actually defined

2651
01:45:45,440 --> 01:45:46,560
something called relax

2652
01:45:46,560 --> 01:45:50,480
energy compact which was uh not designed

2653
01:45:50,480 --> 01:45:52,400
for interchange but but was designed for

2654
01:45:52,400 --> 01:45:54,080
the whiteboard

2655
01:45:54,080 --> 01:45:57,679
so it has less noise and more more focus

2656
01:45:57,679 --> 01:45:59,199
on on the substance

2657
01:45:59,199 --> 01:46:02,400
and that facilitates human interaction

2658
01:46:02,400 --> 01:46:05,280
um so given that james lark has shown us

2659
01:46:05,280 --> 01:46:06,639
how to do this

2660
01:46:06,639 --> 01:46:08,719
uh the question came up during the

2661
01:46:08,719 --> 01:46:10,800
hackathon is is there something maybe

2662
01:46:10,800 --> 01:46:12,480
that can be done

2663
01:46:12,480 --> 01:46:14,400
with sdf that points in the same

2664
01:46:14,400 --> 01:46:17,599
direction next slide

2665
01:46:18,639 --> 01:46:21,199
so i just grabbed the random sdf model

2666
01:46:21,199 --> 01:46:22,800
from the playground

2667
01:46:22,800 --> 01:46:26,080
that's actually a pretty simple model

2668
01:46:26,080 --> 01:46:27,760
because it essentially just

2669
01:46:27,760 --> 01:46:31,199
defines uh the the cycle

2670
01:46:31,199 --> 01:46:34,480
uh time uh actually the cycle

2671
01:46:34,480 --> 01:46:38,080
frequency um of uh pedal on on a

2672
01:46:38,080 --> 01:46:41,280
bike or something like that so that

2673
01:46:41,280 --> 01:46:44,080
it's measured in one per minute uh in

2674
01:46:44,080 --> 01:46:46,159
the cinema unit one per minute

2675
01:46:46,159 --> 01:46:49,199
um and it's not writable uh

2676
01:46:49,199 --> 01:46:51,600
and so on and there are some some

2677
01:46:51,600 --> 01:46:54,719
auxiliary properties here range and step

2678
01:46:54,719 --> 01:46:56,800
uh which are what you would expect

2679
01:46:56,800 --> 01:46:58,000
expect them

2680
01:46:58,000 --> 01:47:00,800
uh to be and only the the cadence is

2681
01:47:00,800 --> 01:47:02,880
actually required

2682
01:47:02,880 --> 01:47:06,400
um so um i think most of us now can read

2683
01:47:06,400 --> 01:47:07,119
this

2684
01:47:07,119 --> 01:47:10,000
well maybe uh it's a little bit small

2685
01:47:10,000 --> 01:47:10,320
for

2686
01:47:10,320 --> 01:47:13,440
for good eye it requires good eyesight

2687
01:47:13,440 --> 01:47:17,119
um but uh yeah so uh i just went ahead

2688
01:47:17,119 --> 01:47:18,639
and fantasized

2689
01:47:18,639 --> 01:47:21,199
how should the compact form of this

2690
01:47:21,199 --> 01:47:22,639
looks look like

2691
01:47:22,639 --> 01:47:25,440
and that's the next slide uh which will

2692
01:47:25,440 --> 01:47:26,480
be

2693
01:47:26,480 --> 01:47:28,480
uh familiar to people who wear the

2694
01:47:28,480 --> 01:47:29,679
hackathon

2695
01:47:29,679 --> 01:47:31,760
so this is this is exactly the same

2696
01:47:31,760 --> 01:47:33,119
information

2697
01:47:33,119 --> 01:47:36,320
as you can see it now really focuses on

2698
01:47:36,320 --> 01:47:37,840
the descriptions that

2699
01:47:37,840 --> 01:47:39,280
most of the lines are actually

2700
01:47:39,280 --> 01:47:41,040
description lines now

2701
01:47:41,040 --> 01:47:43,199
which is good because those descriptions

2702
01:47:43,199 --> 01:47:45,360
descriptions are pretty central

2703
01:47:45,360 --> 01:47:49,040
uh to the model but the the

2704
01:47:49,040 --> 01:47:52,239
most of the the actual hard

2705
01:47:52,239 --> 01:47:55,520
uh information is in the colored parts i

2706
01:47:55,520 --> 01:47:56,880
forgot to color the unit

2707
01:47:56,880 --> 01:47:58,960
the unit of course is also hard

2708
01:47:58,960 --> 01:48:00,400
information

2709
01:48:00,400 --> 01:48:02,239
so well we have an info block at the

2710
01:48:02,239 --> 01:48:04,400
start which we of course

2711
01:48:04,400 --> 01:48:08,480
want to have and then instead of having

2712
01:48:08,480 --> 01:48:11,199
sections sdf object and sdf property and

2713
01:48:11,199 --> 01:48:12,159
so on

2714
01:48:12,159 --> 01:48:15,760
we just put the the kind

2715
01:48:15,760 --> 01:48:18,320
that is there first so it's called

2716
01:48:18,320 --> 01:48:20,000
object

2717
01:48:20,000 --> 01:48:22,639
and then the name it's called and

2718
01:48:22,639 --> 01:48:24,639
actually in this case the sdf object and

2719
01:48:24,639 --> 01:48:25,760
the sdf

2720
01:48:25,760 --> 01:48:28,000
property have the same name which

2721
01:48:28,000 --> 01:48:28,880
happens a lot

2722
01:48:28,880 --> 01:48:31,360
um so that's not a problem it's just a

2723
01:48:31,360 --> 01:48:33,360
property of that

2724
01:48:33,360 --> 01:48:36,480
model so the the object

2725
01:48:36,480 --> 01:48:39,360
cadence has a description and it has

2726
01:48:39,360 --> 01:48:40,400
three properties

2727
01:48:40,400 --> 01:48:41,920
which belong to the object because they

2728
01:48:41,920 --> 01:48:43,920
are indented like this

2729
01:48:43,920 --> 01:48:47,840
and the properties actually have

2730
01:48:47,840 --> 01:48:50,800
uh some definitional content that is

2731
01:48:50,800 --> 01:48:51,679
essentially on

2732
01:48:51,679 --> 01:48:54,560
one line each uh because there actually

2733
01:48:54,560 --> 01:48:55,199
isn't

2734
01:48:55,199 --> 01:48:57,280
more there that's really all that there

2735
01:48:57,280 --> 01:48:58,719
is and

2736
01:48:58,719 --> 01:49:01,920
the cadence actually has a unit um as

2737
01:49:01,920 --> 01:49:03,600
well and i probably should have added

2738
01:49:03,600 --> 01:49:04,159
units

2739
01:49:04,159 --> 01:49:05,760
to the other things as well but i just

2740
01:49:05,760 --> 01:49:07,360
wanted to show that

2741
01:49:07,360 --> 01:49:11,679
um of course qualities that are not

2742
01:49:11,679 --> 01:49:14,880
in that shortcut form

2743
01:49:14,880 --> 01:49:18,080
can be added just as separate properties

2744
01:49:18,080 --> 01:49:20,239
so what does it say the property cadence

2745
01:49:20,239 --> 01:49:21,520
is r-o

2746
01:49:21,520 --> 01:49:23,920
so it's readable not writable but

2747
01:49:23,920 --> 01:49:25,199
observable

2748
01:49:25,199 --> 01:49:27,119
it has an exclamation mark which means

2749
01:49:27,119 --> 01:49:28,719
it's required

2750
01:49:28,719 --> 01:49:32,800
and the the data shape is

2751
01:49:32,800 --> 01:49:36,159
integer integer uh equal

2752
01:49:36,159 --> 01:49:39,119
or more than zero so it's a non-negative

2753
01:49:39,119 --> 01:49:40,719
integer

2754
01:49:40,719 --> 01:49:43,760
and the range is readable observable

2755
01:49:43,760 --> 01:49:46,400
but optional and if it's there it's an

2756
01:49:46,400 --> 01:49:48,159
array of two integers

2757
01:49:48,159 --> 01:49:51,760
and the property is optional again and

2758
01:49:51,760 --> 01:49:54,840
it's an integer so this is really the

2759
01:49:54,840 --> 01:49:56,080
substance

2760
01:49:56,080 --> 01:49:59,199
of this specification

2761
01:49:59,199 --> 01:50:02,159
and yeah we can you can add back all the

2762
01:50:02,159 --> 01:50:04,400
other things that that we want

2763
01:50:04,400 --> 01:50:08,000
uh but the the three aspects

2764
01:50:08,000 --> 01:50:11,199
um readable writeable observable

2765
01:50:11,199 --> 01:50:14,400
optionality and data shape actually all

2766
01:50:14,400 --> 01:50:15,679
fit on one line for

2767
01:50:15,679 --> 01:50:18,719
for practically all meaningful

2768
01:50:18,719 --> 01:50:21,920
uh modules so this is just an example

2769
01:50:21,920 --> 01:50:23,360
i'm not saying that

2770
01:50:23,360 --> 01:50:25,360
i i know how to do all the models in the

2771
01:50:25,360 --> 01:50:27,360
playground or even the the entirety of

2772
01:50:27,360 --> 01:50:28,239
sdf

2773
01:50:28,239 --> 01:50:32,639
so this is just a snapshot uh next slide

2774
01:50:32,639 --> 01:50:36,400
so the the design here really is to do

2775
01:50:36,400 --> 01:50:39,760
uh to be lazy um as good programmers

2776
01:50:39,760 --> 01:50:40,560
should be

2777
01:50:40,560 --> 01:50:43,520
so we let the yaml format do most of the

2778
01:50:43,520 --> 01:50:44,560
work

2779
01:50:44,560 --> 01:50:46,400
uh for those who don't know that yaml is

2780
01:50:46,400 --> 01:50:48,639
widely used as a humane form of

2781
01:50:48,639 --> 01:50:51,679
json but it goes beyond json so we are

2782
01:50:51,679 --> 01:50:52,320
not stuck

2783
01:50:52,320 --> 01:50:55,520
with jason's limitations uh it

2784
01:50:55,520 --> 01:50:59,199
uh but it's not just

2785
01:50:59,199 --> 01:51:01,040
translating the json to yaml that's not

2786
01:51:01,040 --> 01:51:03,920
enough but it also combines section

2787
01:51:03,920 --> 01:51:06,400
names and item names into this one label

2788
01:51:06,400 --> 01:51:09,920
object cadence or property cannons

2789
01:51:09,920 --> 01:51:12,880
we replace the noisy word description by

2790
01:51:12,880 --> 01:51:14,960
simply a colon

2791
01:51:14,960 --> 01:51:17,760
and we merge all this readable writeable

2792
01:51:17,760 --> 01:51:20,159
server optionality and data shape

2793
01:51:20,159 --> 01:51:23,199
information into one line

2794
01:51:23,199 --> 01:51:25,760
so that's all there is to the design and

2795
01:51:25,760 --> 01:51:26,320
and

2796
01:51:26,320 --> 01:51:28,880
so it was like like an hour of work to

2797
01:51:28,880 --> 01:51:30,639
actually get this coded

2798
01:51:30,639 --> 01:51:34,080
next slide so just just to highlight

2799
01:51:34,080 --> 01:51:37,920
the the places here uh that actually

2800
01:51:37,920 --> 01:51:41,360
are changes from from the the json to

2801
01:51:41,360 --> 01:51:42,320
yemel

2802
01:51:42,320 --> 01:51:45,360
uh result coming from the original

2803
01:51:45,360 --> 01:51:49,599
uh model so for me this works

2804
01:51:49,599 --> 01:51:51,679
and and it would be nice if if other

2805
01:51:51,679 --> 01:51:53,199
people were looking at this there was

2806
01:51:53,199 --> 01:51:54,400
some positive feedback during the

2807
01:51:54,400 --> 01:51:56,880
hackathon but of course i'm i'm

2808
01:51:56,880 --> 01:52:00,080
really interested to hear about other

2809
01:52:00,080 --> 01:52:03,360
feedback next slide and and my plan

2810
01:52:03,360 --> 01:52:05,840
is uh to actually complete the

2811
01:52:05,840 --> 01:52:07,360
implementation

2812
01:52:07,360 --> 01:52:10,159
uh verify it against the playground

2813
01:52:10,159 --> 01:52:12,480
modded model so we we actually know that

2814
01:52:12,480 --> 01:52:13,760
at round trips

2815
01:52:13,760 --> 01:52:16,639
on all the playground models which is i

2816
01:52:16,639 --> 01:52:17,119
think is

2817
01:52:17,119 --> 01:52:19,280
a very important property of a compact

2818
01:52:19,280 --> 01:52:20,239
form

2819
01:52:20,239 --> 01:52:22,560
and then publish the the tool i have

2820
01:52:22,560 --> 01:52:23,520
started

2821
01:52:23,520 --> 01:52:25,920
writing and and get other people to play

2822
01:52:25,920 --> 01:52:26,880
with it

2823
01:52:26,880 --> 01:52:30,560
as well so from from

2824
01:52:30,560 --> 01:52:32,239
the point of view of this working group

2825
01:52:32,239 --> 01:52:34,400
uh what i think we should do

2826
01:52:34,400 --> 01:52:36,639
once it's tried out a little bit more

2827
01:52:36,639 --> 01:52:39,199
and and we decide we like it

2828
01:52:39,199 --> 01:52:41,119
is this could be an informational

2829
01:52:41,119 --> 01:52:43,679
document that that goes along

2830
01:52:43,679 --> 01:52:46,480
with the sdf spec which is the the

2831
01:52:46,480 --> 01:52:49,280
normative the standard track

2832
01:52:49,280 --> 01:52:51,280
document so at some point we might want

2833
01:52:51,280 --> 01:52:53,760
to decide to adopt it as as a

2834
01:52:53,760 --> 01:52:56,159
a working group document but that's not

2835
01:52:56,159 --> 01:52:57,760
the

2836
01:52:57,760 --> 01:52:59,920
situation right now so i have an initial

2837
01:52:59,920 --> 01:53:01,360
draft out there but

2838
01:53:01,360 --> 01:53:04,560
i think significant work will be needed

2839
01:53:04,560 --> 01:53:07,599
before we can adopt it

2840
01:53:07,840 --> 01:53:11,360
so that's all i wanted to say

2841
01:53:11,599 --> 01:53:14,719
thank you carson any

2842
01:53:14,719 --> 01:53:17,840
comments question to this one

2843
01:53:17,840 --> 01:53:20,239
from me um so yeah i was like going to

2844
01:53:20,239 --> 01:53:22,159
like oh that looks like yaml and i guess

2845
01:53:22,159 --> 01:53:23,119
your next slide

2846
01:53:23,119 --> 01:53:24,960
answered my question it's mostly yaml

2847
01:53:24,960 --> 01:53:26,560
but it's not quite

2848
01:53:26,560 --> 01:53:28,960
is it your intention carsten that this

2849
01:53:28,960 --> 01:53:29,760
be uh

2850
01:53:29,760 --> 01:53:32,800
round trippable um from

2851
01:53:32,800 --> 01:53:36,800
okay that's really i want to know

2852
01:53:36,800 --> 01:53:39,920
yeah roundtrip ability has significant

2853
01:53:39,920 --> 01:53:41,840
disadvantages

2854
01:53:41,840 --> 01:53:44,000
but i think in this case it really

2855
01:53:44,000 --> 01:53:45,679
doesn't make sense to have a compact

2856
01:53:45,679 --> 01:53:48,880
form that is not round-trippable

2857
01:53:48,880 --> 01:53:51,679
so there will be some heuristics in in

2858
01:53:51,679 --> 01:53:52,480
the

2859
01:53:52,480 --> 01:53:55,760
tool that actually creates it so we will

2860
01:53:55,760 --> 01:53:57,199
have a

2861
01:53:57,199 --> 01:53:59,199
standardized way of interpreting the

2862
01:53:59,199 --> 01:54:00,639
file but the file

2863
01:54:00,639 --> 01:54:02,480
the the tool that creates it will have

2864
01:54:02,480 --> 01:54:04,000
some heuristics to

2865
01:54:04,000 --> 01:54:09,840
make a nice version of it

2866
01:54:10,880 --> 01:54:12,880
yeah yeah i i agree i think the run

2867
01:54:12,880 --> 01:54:14,800
tripability is a necessary feature here

2868
01:54:14,800 --> 01:54:15,119
but

2869
01:54:15,119 --> 01:54:18,000
um if that works out i think this is a

2870
01:54:18,000 --> 01:54:19,920
really cool thing or really useful thing

2871
01:54:19,920 --> 01:54:20,880
actually

2872
01:54:20,880 --> 01:54:22,800
before they can as exactly as you said

2873
01:54:22,800 --> 01:54:24,880
for the whiteboard

2874
01:54:24,880 --> 01:54:28,480
scenarios and so on

2875
01:54:31,679 --> 01:54:33,440
that makes it a lot easier to do things

2876
01:54:33,440 --> 01:54:34,719
with this

2877
01:54:34,719 --> 01:54:37,440
and also recently common in in our

2878
01:54:37,440 --> 01:54:40,239
industry to use this way

2879
01:54:40,239 --> 01:54:44,239
anyway any additional comments questions

2880
01:54:47,199 --> 01:54:49,119
the only risk as i mentioned is perhaps

2881
01:54:49,119 --> 01:54:51,599
that as as time progresses

2882
01:54:51,599 --> 01:54:53,920
this will overtake the json based format

2883
01:54:53,920 --> 01:54:55,040
as the

2884
01:54:55,040 --> 01:54:57,280
the um kind of sort of normative or the

2885
01:54:57,280 --> 01:54:58,880
uh the uh

2886
01:54:58,880 --> 01:55:01,679
what do you say for the adopted models

2887
01:55:01,679 --> 01:55:04,239
in one dm and so on as the

2888
01:55:04,239 --> 01:55:05,840
the golden standard of how you describe

2889
01:55:05,840 --> 01:55:07,360
things but

2890
01:55:07,360 --> 01:55:10,639
maybe that's not a big problem

2891
01:55:13,520 --> 01:55:16,560
okay any other comments

2892
01:55:16,560 --> 01:55:18,880
questions about the presentations we had

2893
01:55:18,880 --> 01:55:20,800
today

2894
01:55:20,800 --> 01:55:23,920
michael koster yeah just on

2895
01:55:23,920 --> 01:55:27,280
on sdfc there was the idea of

2896
01:55:27,280 --> 01:55:31,599
maybe building a a visual code or

2897
01:55:31,599 --> 01:55:34,000
or atom handler that worked sort of like

2898
01:55:34,000 --> 01:55:34,880
the way uh

2899
01:55:34,880 --> 01:55:37,679
the markdown or or ascii dock handlers

2900
01:55:37,679 --> 01:55:40,000
work so you'd have split windows and

2901
01:55:40,000 --> 01:55:41,920
if you wanted to actually see the json

2902
01:55:41,920 --> 01:55:43,760
you could look at it but if you if

2903
01:55:43,760 --> 01:55:45,840
people use that it would it wouldn't

2904
01:55:45,840 --> 01:55:48,239
really be much of an issue as to which

2905
01:55:48,239 --> 01:55:50,320
which was a canonical form because they

2906
01:55:50,320 --> 01:55:51,679
would they would always be

2907
01:55:51,679 --> 01:55:53,440
sort of parallel from the developer's

2908
01:55:53,440 --> 01:55:55,199
point of view you'd you could

2909
01:55:55,199 --> 01:55:57,360
you could something wasn't working you

2910
01:55:57,360 --> 01:55:58,239
could pull it in

2911
01:55:58,239 --> 01:56:01,040
and work on it in this dfc and then just

2912
01:56:01,040 --> 01:56:02,800
spit it back out to your tool chain that

2913
01:56:02,800 --> 01:56:04,320
would be the way i would want to use it

2914
01:56:04,320 --> 01:56:06,239
and i would definitely use it i played

2915
01:56:06,239 --> 01:56:07,599
around with some other

2916
01:56:07,599 --> 01:56:09,520
sort of text-based simple formats that

2917
01:56:09,520 --> 01:56:11,280
were not round-trippable and that was

2918
01:56:11,280 --> 01:56:14,719
really why it didn't work out so

2919
01:56:14,719 --> 01:56:17,599
this this is definitely uh an

2920
01:56:17,599 --> 01:56:20,560
interesting direction

2921
01:56:21,440 --> 01:56:24,639
all right the way just recommend the way

2922
01:56:24,639 --> 01:56:25,520
i use

2923
01:56:25,520 --> 01:56:28,560
things like that is when i open an

2924
01:56:28,560 --> 01:56:31,679
sd uh let's take an example that i

2925
01:56:31,679 --> 01:56:32,719
already do today

2926
01:56:32,719 --> 01:56:35,920
when i open the sibo file that get gets

2927
01:56:35,920 --> 01:56:38,080
automatically converted to yaml

2928
01:56:38,080 --> 01:56:40,159
so in the editor i see the yammer for

2929
01:56:40,159 --> 01:56:41,520
the zebra file and when i

2930
01:56:41,520 --> 01:56:43,360
write back that gemini file let's

2931
01:56:43,360 --> 01:56:45,360
convert it back to sieber

2932
01:56:45,360 --> 01:56:47,920
so it's for me sibo is a directly

2933
01:56:47,920 --> 01:56:49,040
editable format i

2934
01:56:49,040 --> 01:56:50,800
i don't see in human editor it's

2935
01:56:50,800 --> 01:56:52,480
actually binary

2936
01:56:52,480 --> 01:56:55,840
so i i will not see an sdf.json once

2937
01:56:55,840 --> 01:56:58,960
this is completed

2938
01:57:03,440 --> 01:57:06,000
yeah i also also grant this uh useful

2939
01:57:06,000 --> 01:57:07,199
thing to do especially for

2940
01:57:07,199 --> 01:57:09,599
you know editors human use but i think

2941
01:57:09,599 --> 01:57:10,400
that

2942
01:57:10,400 --> 01:57:12,560
normally format still definitely has a

2943
01:57:12,560 --> 01:57:14,320
clear role because that one has better

2944
01:57:14,320 --> 01:57:15,360
compatibility with

2945
01:57:15,360 --> 01:57:18,000
variety of different tools out there uh

2946
01:57:18,000 --> 01:57:19,440
actually it has been very

2947
01:57:19,440 --> 01:57:22,159
convenient to work with the json format

2948
01:57:22,159 --> 01:57:22,639
for

2949
01:57:22,639 --> 01:57:25,599
building a lot of the tooling uh on sdf

2950
01:57:25,599 --> 01:57:26,159
which might

2951
01:57:26,159 --> 01:57:29,280
might be harder with a yellow format

2952
01:57:29,280 --> 01:57:31,599
but in a sense if we look at the yaml

2953
01:57:31,599 --> 01:57:32,800
format just you know

2954
01:57:32,800 --> 01:57:34,880
as one ecosystem where we can translate

2955
01:57:34,880 --> 01:57:36,080
to and from

2956
01:57:36,080 --> 01:57:38,560
it actually fits nicely with the other

2957
01:57:38,560 --> 01:57:40,639
set of tools and and processes that we

2958
01:57:40,639 --> 01:57:41,760
are building here

2959
01:57:41,760 --> 01:57:43,599
so i think it's actually a good addition

2960
01:57:43,599 --> 01:57:46,159
to our our toolbox in that sense but

2961
01:57:46,159 --> 01:57:47,760
i i don't see a big risk of it

2962
01:57:47,760 --> 01:57:50,840
overtaking the normally format

2963
01:57:50,840 --> 01:57:53,599
um

2964
01:57:53,599 --> 01:57:55,280
one thing also perhaps to think about

2965
01:57:55,280 --> 01:57:57,520
better is is the um

2966
01:57:57,520 --> 01:58:01,440
this uh how we code what you say

2967
01:58:01,440 --> 01:58:04,159
the the special features so rewrite the

2968
01:58:04,159 --> 01:58:04,639
uh

2969
01:58:04,639 --> 01:58:09,280
observable and so on uh

2970
01:58:09,280 --> 01:58:12,000
and if i mean how how what what is coded

2971
01:58:12,000 --> 01:58:12,320
to

2972
01:58:12,320 --> 01:58:14,960
very very short form and what is still

2973
01:58:14,960 --> 01:58:16,159
still there

2974
01:58:16,159 --> 01:58:19,520
but um still i like this

2975
01:58:19,520 --> 01:58:23,360
anyway um any other final comments

2976
01:58:23,360 --> 01:58:24,719
questions on this

2977
01:58:24,719 --> 01:58:27,840
um so this is i guess this is a bit of a

2978
01:58:27,840 --> 01:58:29,599
i shouldn't say hobby project but still

2979
01:58:29,599 --> 01:58:31,360
very useful stuff but

2980
01:58:31,360 --> 01:58:33,199
maybe not the core focus of the group

2981
01:58:33,199 --> 01:58:35,679
but

2982
01:58:35,679 --> 01:58:38,880
please don't please keep working on it

2983
01:58:38,880 --> 01:58:43,360
anyway any final comments because now we

2984
01:58:43,360 --> 01:58:45,599
have two minutes left here

2985
01:58:45,599 --> 01:58:47,840
michael koster very brief comment in

2986
01:58:47,840 --> 01:58:49,440
that um

2987
01:58:49,440 --> 01:58:52,480
i think we it's time to

2988
01:58:52,480 --> 01:58:54,480
put all these tools in one place start

2989
01:58:54,480 --> 01:58:57,599
putting all these tools in one place so

2990
01:58:57,599 --> 01:58:59,199
everything can be collected there's

2991
01:58:59,199 --> 01:59:00,880
really a lot of it now and i

2992
01:59:00,880 --> 01:59:02,800
i'm not sure where that belongs but i

2993
01:59:02,800 --> 01:59:05,280
think as a a topic for between now and

2994
01:59:05,280 --> 01:59:06,000
the interim

2995
01:59:06,000 --> 01:59:09,280
where do we put tools and maybe just a

2996
01:59:09,280 --> 01:59:10,480
list of pointers is

2997
01:59:10,480 --> 01:59:13,119
really all it would take but um yeah

2998
01:59:13,119 --> 01:59:14,719
easy thing to do

2999
01:59:14,719 --> 01:59:17,199
we are allowed to include tools into our

3000
01:59:17,199 --> 01:59:17,760
uh

3001
01:59:17,760 --> 01:59:22,239
github organization i believe

3002
01:59:23,280 --> 01:59:24,800
but we can also have pointers in the

3003
01:59:24,800 --> 01:59:28,080
readme in the organization as well

3004
01:59:28,080 --> 01:59:29,920
we kind of had it on one dm but i think

3005
01:59:29,920 --> 01:59:33,760
it really belongs with sdf more

3006
01:59:33,920 --> 01:59:38,000
plus one yep well thank you everyone

3007
01:59:38,000 --> 01:59:40,880
get some coffee

3008
01:59:41,920 --> 01:59:44,480
or something

3009
01:59:45,199 --> 01:59:49,199
keep you awake yeah

3010
01:59:49,840 --> 01:59:51,199
yeah thank you everyone for staying

3011
01:59:51,199 --> 01:59:53,119
around and participating and

3012
01:59:53,119 --> 01:59:54,480
contributing today

3013
01:59:54,480 --> 01:59:57,440
and as we said there will be a call for

3014
01:59:57,440 --> 01:59:58,400
a doodle

3015
01:59:58,400 --> 02:00:01,199
there will be a doodle for uh uh an

3016
02:00:01,199 --> 02:00:03,360
interim in the near future

3017
02:00:03,360 --> 02:00:05,760
and uh with that i think we conclude for

3018
02:00:05,760 --> 02:00:06,400
today

3019
02:00:06,400 --> 02:00:09,679
on on the exactly

3020
02:00:09,679 --> 02:00:12,000
yeah thank you for the great time

3021
02:00:12,000 --> 02:00:13,920
management

3022
02:00:13,920 --> 02:00:16,239
thank you that was my plan completely

3023
02:00:16,239 --> 02:00:18,718
take care

3024
02:00:24,840 --> 02:00:27,840
cheers

3025
02:00:30,080 --> 02:00:32,159
you

