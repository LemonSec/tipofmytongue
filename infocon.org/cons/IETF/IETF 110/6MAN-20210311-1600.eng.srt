1
00:00:14,920 --> 00:00:17,920
okay

2
00:00:21,439 --> 00:00:23,439
well good morning or good afternoon

3
00:00:23,439 --> 00:00:25,119
wherever you are i don't know what the

4
00:00:25,119 --> 00:00:26,080
right

5
00:00:26,080 --> 00:00:29,279
solicitation is in utc but

6
00:00:29,279 --> 00:00:32,079
welcome to the second six man session

7
00:00:32,079 --> 00:00:34,880
i'm bob hinden this is only tron

8
00:00:34,880 --> 00:00:39,440
uh we are the co-chairs of six man

9
00:00:39,440 --> 00:00:42,160
next slide

10
00:00:43,360 --> 00:00:46,719
please note the note well we should all

11
00:00:46,719 --> 00:00:49,840
have this memorized by now

12
00:00:49,840 --> 00:00:53,120
next slide the usual administrivia

13
00:00:53,120 --> 00:00:56,160
thanks to barbara and xioping for

14
00:00:56,160 --> 00:00:59,280
taking minutes we're not doing

15
00:00:59,280 --> 00:01:02,000
a um

16
00:01:02,800 --> 00:01:05,920
formal jabber scribe if um

17
00:01:05,920 --> 00:01:08,240
we will watch the jabber if someone

18
00:01:08,240 --> 00:01:10,479
raises a question and they're not not in

19
00:01:10,479 --> 00:01:13,840
the room otherwise

20
00:01:14,080 --> 00:01:18,000
next slide so as we talked about earlier

21
00:01:18,000 --> 00:01:20,960
this session we're going to have now is

22
00:01:20,960 --> 00:01:21,840
sort of

23
00:01:21,840 --> 00:01:24,880
a structure around

24
00:01:24,880 --> 00:01:27,119
the way we normally do a working group

25
00:01:27,119 --> 00:01:28,240
session

26
00:01:28,240 --> 00:01:31,280
we're going to have document status

27
00:01:31,280 --> 00:01:33,360
a report from the spring compression

28
00:01:33,360 --> 00:01:36,240
design team

29
00:01:36,240 --> 00:01:40,400
working group drafts and two active

30
00:01:40,400 --> 00:01:44,479
or two active in individual drafts

31
00:01:44,479 --> 00:01:48,079
for today we have two hours

32
00:01:48,079 --> 00:01:50,798
next slide

33
00:01:51,600 --> 00:01:55,839
yeah and here's the agenda

34
00:01:56,320 --> 00:01:59,839
any agenda bashing

35
00:02:03,840 --> 00:02:07,439
and we will we will manage the time but

36
00:02:07,439 --> 00:02:11,200
we have about a 20 minute buffer so we

37
00:02:11,200 --> 00:02:14,720
if there's um good discussions we won't

38
00:02:14,720 --> 00:02:16,480
cut them off we'll try not to cut them

39
00:02:16,480 --> 00:02:18,879
off prematurely but still

40
00:02:18,879 --> 00:02:20,640
want to make sure everything all the

41
00:02:20,640 --> 00:02:23,920
presentations get time

42
00:02:23,920 --> 00:02:27,040
next slide so if there are no comments

43
00:02:27,040 --> 00:02:27,920
on the agenda

44
00:02:27,920 --> 00:02:30,160
let's uh quickly go through the document

45
00:02:30,160 --> 00:02:31,519
status

46
00:02:31,519 --> 00:02:33,200
since the last meeting we have published

47
00:02:33,200 --> 00:02:36,879
one rfc it's 8981 on the

48
00:02:36,879 --> 00:02:39,840
temporary address extensions the uh

49
00:02:39,840 --> 00:02:42,239
revision of 49.41

50
00:02:42,239 --> 00:02:44,160
we have two documents submitted to the

51
00:02:44,160 --> 00:02:47,680
isg it's the gratuitous navy discovery

52
00:02:47,680 --> 00:02:51,120
work and it's the segment routing oem

53
00:02:51,120 --> 00:02:55,440
document the gratuitous

54
00:02:55,440 --> 00:02:58,879
document is awaiting a new id from the

55
00:02:58,879 --> 00:02:59,440
author

56
00:02:59,440 --> 00:03:02,239
and for the oam document it's in last

57
00:03:02,239 --> 00:03:05,599
call requested state

58
00:03:05,599 --> 00:03:09,440
um the uh

59
00:03:09,440 --> 00:03:11,519
ipv6 application or the alternate

60
00:03:11,519 --> 00:03:12,480
marking method

61
00:03:12,480 --> 00:03:16,480
that's on the agenda for today it's

62
00:03:16,480 --> 00:03:17,840
just going through the last call

63
00:03:17,840 --> 00:03:19,920
comments and uh

64
00:03:19,920 --> 00:03:22,879
it's on the chairs to to do the write up

65
00:03:22,879 --> 00:03:26,000
and advance that document to the isg

66
00:03:26,000 --> 00:03:29,760
um the compact routing header document

67
00:03:29,760 --> 00:03:34,560
it's still awaiting the sr design team

68
00:03:34,560 --> 00:03:37,519
we have a talk on that just following

69
00:03:37,519 --> 00:03:38,799
now

70
00:03:38,799 --> 00:03:40,640
and we have two working group documents

71
00:03:40,640 --> 00:03:42,640
it's the minimum path empty hop i hope

72
00:03:42,640 --> 00:03:44,319
option that's not on the agenda for

73
00:03:44,319 --> 00:03:44,879
today

74
00:03:44,879 --> 00:03:47,760
and we have the uh improving the

75
00:03:47,760 --> 00:03:50,159
robustness of slack

76
00:03:50,159 --> 00:03:53,040
by fernando and that's on the agenda

77
00:03:53,040 --> 00:03:54,640
later

78
00:03:54,640 --> 00:03:57,280
any comments on document status before

79
00:03:57,280 --> 00:03:58,480
we move on to the

80
00:03:58,480 --> 00:04:01,599
sr design team talk

81
00:04:01,599 --> 00:04:06,080
no then

82
00:04:06,080 --> 00:04:15,840
please go ahead

83
00:04:20,560 --> 00:04:23,600
oh charles do you have me

84
00:04:23,600 --> 00:04:27,040
we can hear you please go ahead okay

85
00:04:27,040 --> 00:04:30,160
so uh this

86
00:04:30,160 --> 00:04:33,600
presentation give a basic

87
00:04:33,600 --> 00:04:37,919
report status report for the

88
00:04:37,919 --> 00:04:42,160
uh sr compression design team

89
00:04:42,160 --> 00:04:45,759
and currently we

90
00:04:45,759 --> 00:04:49,120
focused on two draft one

91
00:04:49,120 --> 00:04:52,720
is for the comprision requirement

92
00:04:52,720 --> 00:04:56,400
and the other for the compression

93
00:04:56,400 --> 00:04:57,360
analysis

94
00:04:57,360 --> 00:05:00,320
next page

95
00:05:01,039 --> 00:05:04,720
so uh for the

96
00:05:04,720 --> 00:05:08,320
requirement to draft i think

97
00:05:08,320 --> 00:05:11,919
we have uh almost uh

98
00:05:11,919 --> 00:05:15,199
finished this draft within the design

99
00:05:15,199 --> 00:05:16,400
team

100
00:05:16,400 --> 00:05:20,479
uh we posted a zero five revision

101
00:05:20,479 --> 00:05:24,160
and uh uh we hope

102
00:05:24,160 --> 00:05:27,440
uh six mind working group

103
00:05:27,440 --> 00:05:30,800
uh members can also review that

104
00:05:30,800 --> 00:05:34,000
and feedback your comments and the

105
00:05:34,000 --> 00:05:37,199
other draft

106
00:05:37,199 --> 00:05:42,400
is a analysis draft we just begin

107
00:05:42,400 --> 00:05:44,030
to

108
00:05:44,030 --> 00:05:45,520
[Music]

109
00:05:45,520 --> 00:05:49,120
discuss this draft and

110
00:05:49,120 --> 00:05:53,840
we post the 000 revision

111
00:05:53,840 --> 00:05:57,440
already but in this revision

112
00:05:57,440 --> 00:06:01,199
i think we just give some

113
00:06:01,199 --> 00:06:04,560
template and

114
00:06:04,560 --> 00:06:08,080
we have some proposed uh

115
00:06:08,080 --> 00:06:11,440
text for that draft

116
00:06:11,440 --> 00:06:15,840
but we've not have enough time to review

117
00:06:15,840 --> 00:06:16,319
that

118
00:06:16,319 --> 00:06:19,680
within design team so we did not

119
00:06:19,680 --> 00:06:23,680
post those proposals

120
00:06:23,680 --> 00:06:26,720
but we are confident

121
00:06:26,720 --> 00:06:31,360
that we can generate

122
00:06:31,360 --> 00:06:34,720
a full version of the analysis draft

123
00:06:34,720 --> 00:06:39,039
soon next page

124
00:06:39,919 --> 00:06:43,360
so this is a status for the

125
00:06:43,360 --> 00:06:46,400
requirement to draft as i

126
00:06:46,400 --> 00:06:50,400
just mentioned in the latest version

127
00:06:50,400 --> 00:06:54,160
we have included all the

128
00:06:54,160 --> 00:06:57,280
requirements we've received

129
00:06:57,280 --> 00:07:00,800
and the design team have

130
00:07:00,800 --> 00:07:03,840
gone through all of them

131
00:07:03,840 --> 00:07:07,759
till now only three of them with rough

132
00:07:07,759 --> 00:07:12,800
but not a universe

133
00:07:12,800 --> 00:07:16,080
concerns within design team now anyway

134
00:07:16,080 --> 00:07:19,280
we have a poster all of them

135
00:07:19,280 --> 00:07:22,319
this is three items we put it

136
00:07:22,319 --> 00:07:27,199
to appendix uh i think

137
00:07:27,680 --> 00:07:30,720
we if possible we would like

138
00:07:30,720 --> 00:07:34,400
to get more comments on

139
00:07:34,400 --> 00:07:38,880
them so compiled to revision 2

140
00:07:38,880 --> 00:07:43,039
uh the revision 5 move the three

141
00:07:43,039 --> 00:07:46,240
items from appendix to the

142
00:07:46,240 --> 00:07:51,440
main text which are the blue highlighted

143
00:07:51,440 --> 00:07:54,960
i think these three items are very

144
00:07:54,960 --> 00:07:58,080
important items they are

145
00:07:58,080 --> 00:08:02,720
srv6 based sr6 functionality

146
00:08:02,720 --> 00:08:06,160
so uh i think it's a big progress

147
00:08:06,160 --> 00:08:09,360
for the design team we can get agreement

148
00:08:09,360 --> 00:08:12,960
on those items

149
00:08:12,960 --> 00:08:16,879
and we also added none items

150
00:08:16,879 --> 00:08:20,240
new items with the rider

151
00:08:20,240 --> 00:08:23,919
highlighted text

152
00:08:23,919 --> 00:08:28,560
and those items

153
00:08:28,560 --> 00:08:31,680
covers address planning comprision

154
00:08:31,680 --> 00:08:33,519
libraries

155
00:08:33,519 --> 00:08:37,120
and as a domain protections

156
00:08:37,120 --> 00:08:40,240
security and something like that

157
00:08:40,240 --> 00:08:43,599
we think that has data

158
00:08:43,599 --> 00:08:47,200
our fundamental requirement for the

159
00:08:47,200 --> 00:08:50,880
compression solution so

160
00:08:50,880 --> 00:08:54,880
uh from

161
00:08:54,880 --> 00:08:57,839
the design team point of view we've

162
00:08:57,839 --> 00:08:58,560
almost

163
00:08:58,560 --> 00:09:01,359
finished the

164
00:09:02,399 --> 00:09:07,519
requirement draft next page

165
00:09:07,519 --> 00:09:10,640
so for the requirements drafts

166
00:09:10,640 --> 00:09:13,839
uh we hope to get more

167
00:09:13,839 --> 00:09:17,040
review and a comment

168
00:09:17,040 --> 00:09:20,320
from spring working group because

169
00:09:20,320 --> 00:09:24,160
this design team writes by spring

170
00:09:24,160 --> 00:09:28,080
working group at first and then

171
00:09:28,080 --> 00:09:31,120
as well as we also like six

172
00:09:31,120 --> 00:09:34,240
mind members

173
00:09:34,240 --> 00:09:37,440
can review that because there are some

174
00:09:37,440 --> 00:09:42,080
topics related to six mind work

175
00:09:42,080 --> 00:09:45,200
uh and if possible we would like to

176
00:09:45,200 --> 00:09:49,040
call for adoption as soon as possible

177
00:09:49,040 --> 00:09:52,480
that is the basic

178
00:09:56,800 --> 00:10:01,760
next step for this draft next page

179
00:10:02,800 --> 00:10:05,839
yeah this is a basic

180
00:10:05,839 --> 00:10:09,600
status for the analysis draft

181
00:10:09,600 --> 00:10:13,120
in this chapter currently i think the

182
00:10:13,120 --> 00:10:14,480
biggest uh

183
00:10:14,480 --> 00:10:18,320
progress for us is that we had

184
00:10:18,320 --> 00:10:20,880
we haven't

185
00:10:21,920 --> 00:10:26,079
decided to analyze uh the four

186
00:10:26,079 --> 00:10:29,680
uh proposals uh the

187
00:10:29,680 --> 00:10:32,800
this four proposal

188
00:10:32,800 --> 00:10:37,519
at least here one is the cc

189
00:10:37,519 --> 00:10:41,120
the other is crh and

190
00:10:41,120 --> 00:10:44,640
receipt and the uid

191
00:10:44,640 --> 00:10:48,320
i think this uh uh

192
00:10:48,320 --> 00:10:52,480
those four uh proposals

193
00:10:52,480 --> 00:10:55,839
give different uh angles

194
00:10:55,839 --> 00:10:59,519
uh mechanism uh i think they are

195
00:10:59,519 --> 00:11:03,040
all very useful

196
00:11:03,040 --> 00:11:08,399
in the for the ccd

197
00:11:10,560 --> 00:11:14,720
solution i think it it combined

198
00:11:14,720 --> 00:11:17,920
two drafts one is from a

199
00:11:17,920 --> 00:11:21,040
microseat team and

200
00:11:21,040 --> 00:11:24,079
the other is for the gcd

201
00:11:24,079 --> 00:11:28,640
it provided a very simple solution

202
00:11:28,640 --> 00:11:32,720
it doesn't need any srv6 data plan

203
00:11:32,720 --> 00:11:36,160
or control plan change and leverages the

204
00:11:36,160 --> 00:11:40,320
srv6 network programming model

205
00:11:40,320 --> 00:11:43,920
it provided two flavors the next

206
00:11:43,920 --> 00:11:47,760
sea seed flavor reflect the micro seed

207
00:11:47,760 --> 00:11:50,959
solution and the the replace cc the

208
00:11:50,959 --> 00:11:52,079
flavor

209
00:11:52,079 --> 00:11:57,120
reflect the g seed solution both

210
00:11:58,639 --> 00:12:01,680
framework and

211
00:12:01,680 --> 00:12:05,360
for the crh i think

212
00:12:05,360 --> 00:12:08,399
many people in six mind

213
00:12:08,399 --> 00:12:11,550
are very familiar with that

214
00:12:11,550 --> 00:12:12,880
[Music]

215
00:12:12,880 --> 00:12:16,160
the courses also give us some

216
00:12:16,160 --> 00:12:20,800
description uh the site that the crh

217
00:12:20,800 --> 00:12:23,839
defined the two new ipv6

218
00:12:23,839 --> 00:12:27,279
routine hiders cih16

219
00:12:27,279 --> 00:12:30,720
and the cih32

220
00:12:30,720 --> 00:12:33,839
and each uh see the map to

221
00:12:33,839 --> 00:12:37,440
a cih5 entry

222
00:12:37,440 --> 00:12:40,560
there is a new change to ipv6 forwarding

223
00:12:40,560 --> 00:12:41,600
plan

224
00:12:41,600 --> 00:12:44,720
all address model and adjust the

225
00:12:44,720 --> 00:12:47,920
minimum change to srv6

226
00:12:47,920 --> 00:12:52,720
control plan and for the visit

227
00:12:52,720 --> 00:12:57,120
it defines a side of a site of

228
00:12:57,120 --> 00:13:00,160
seed behaviors to access a

229
00:13:00,160 --> 00:13:05,120
smaller seat within the sr hider

230
00:13:05,120 --> 00:13:08,800
it generalized the srh

231
00:13:08,800 --> 00:13:12,079
for any size

232
00:13:12,079 --> 00:13:16,399
of seeds and the prefix

233
00:13:16,959 --> 00:13:20,000
it encodes only the visit in

234
00:13:20,000 --> 00:13:23,120
sih not any

235
00:13:23,120 --> 00:13:26,959
redundancy prefix so everything i also

236
00:13:26,959 --> 00:13:27,519
use

237
00:13:27,519 --> 00:13:30,720
regular 1

238
00:13:30,720 --> 00:13:34,000
28 bits seeds it

239
00:13:34,000 --> 00:13:37,600
doesn't require

240
00:13:37,600 --> 00:13:40,639
any srv6 control plan

241
00:13:40,639 --> 00:13:43,760
change and it also leverage

242
00:13:43,760 --> 00:13:48,079
the srv6 network programming model

243
00:13:48,079 --> 00:13:51,600
and the last one is uid

244
00:13:51,600 --> 00:13:54,959
it extends the srh

245
00:13:54,959 --> 00:13:58,880
to carry such as amperes labels

246
00:13:58,880 --> 00:14:02,000
or ipv6 addresses

247
00:14:02,000 --> 00:14:05,519
it's a give a basic mapping

248
00:14:05,519 --> 00:14:09,360
solution a comprised srv6

249
00:14:09,360 --> 00:14:12,800
segment list encoding in

250
00:14:12,800 --> 00:14:16,560
the sih it introduces

251
00:14:16,560 --> 00:14:19,760
uet flag to unify

252
00:14:19,760 --> 00:14:23,040
uh traditional srv6 seed and the

253
00:14:23,040 --> 00:14:27,279
unified seed for all the behaviors

254
00:14:27,279 --> 00:14:31,440
so it like leveraged the i76 network

255
00:14:31,440 --> 00:14:33,120
programming model

256
00:14:33,120 --> 00:14:36,320
with some new flavors

257
00:14:36,320 --> 00:14:39,839
so these are some basic

258
00:14:39,839 --> 00:14:42,880
information of those four

259
00:14:42,880 --> 00:14:47,040
different solutions

260
00:14:47,040 --> 00:14:50,399
i think they are all

261
00:14:50,399 --> 00:14:54,000
useful we will

262
00:14:54,000 --> 00:14:57,839
do some analysis against the current

263
00:14:57,839 --> 00:14:58,880
requirement

264
00:14:58,880 --> 00:15:02,320
draft because the requirement drops

265
00:15:02,320 --> 00:15:05,519
provided some magic

266
00:15:05,519 --> 00:15:08,800
so that we can based on this metric

267
00:15:08,800 --> 00:15:13,040
to compile those four different

268
00:15:13,040 --> 00:15:17,279
solutions uh this is a

269
00:15:17,279 --> 00:15:22,079
status of the analysis dropped next page

270
00:15:23,040 --> 00:15:26,079
so here are some completion plan

271
00:15:26,079 --> 00:15:29,519
for analysis so

272
00:15:29,519 --> 00:15:32,959
before the ietf meeting i think we have

273
00:15:32,959 --> 00:15:34,320
already done

274
00:15:34,320 --> 00:15:38,240
a lot of work and the

275
00:15:38,240 --> 00:15:41,839
next step we have a rough plan

276
00:15:41,839 --> 00:15:46,399
in the middle of april we will complete

277
00:15:46,399 --> 00:15:50,240
remaining analysis text

278
00:15:50,240 --> 00:15:53,519
proposal for

279
00:15:53,759 --> 00:15:58,160
the design team review because

280
00:15:58,160 --> 00:16:01,839
when the spring working group

281
00:16:01,839 --> 00:16:04,639
writes the design team they hope we can

282
00:16:04,639 --> 00:16:05,199
provide

283
00:16:05,199 --> 00:16:08,720
some concerns document

284
00:16:08,720 --> 00:16:11,839
to the working group so we will

285
00:16:11,839 --> 00:16:15,360
do the design team review and first

286
00:16:15,360 --> 00:16:19,440
and uh we hope to provide a preliminary

287
00:16:19,440 --> 00:16:22,480
version at the

288
00:16:22,480 --> 00:16:26,720
end of april so that

289
00:16:26,720 --> 00:16:30,320
the people in spring working group

290
00:16:30,320 --> 00:16:33,440
can review it and accommodate it

291
00:16:33,440 --> 00:16:36,480
and at a later may

292
00:16:36,480 --> 00:16:40,000
we hope to submit a new revision

293
00:16:40,000 --> 00:16:43,120
for itf spring working group

294
00:16:43,120 --> 00:16:45,199
and the six-month working group for

295
00:16:45,199 --> 00:16:47,600
review because

296
00:16:47,600 --> 00:16:50,800
the analysis draft included some

297
00:16:50,800 --> 00:16:53,920
solution which is from six

298
00:16:53,920 --> 00:16:57,600
mind a working group so we hope

299
00:16:57,600 --> 00:17:01,759
the review can be done

300
00:17:01,759 --> 00:17:05,839
in the both working group

301
00:17:06,319 --> 00:17:09,599
that that that's all for the

302
00:17:09,599 --> 00:17:12,720
report thank you any comments or

303
00:17:12,720 --> 00:17:15,280
questions

304
00:17:16,400 --> 00:17:19,039
thank you very much just uh jump to the

305
00:17:19,039 --> 00:17:21,760
queue we have a few minutes to

306
00:17:21,760 --> 00:17:26,480
discuss this if there is anyone

307
00:17:30,080 --> 00:17:32,640
this has also been discussed in uh in

308
00:17:32,640 --> 00:17:33,440
spring right

309
00:17:33,440 --> 00:17:37,600
okay andrew please go ahead

310
00:17:37,919 --> 00:17:40,720
yeah um i'm pretty much gonna repeat

311
00:17:40,720 --> 00:17:41,440
what i

312
00:17:41,440 --> 00:17:45,120
asked in spring um

313
00:17:45,120 --> 00:17:47,600
what is the next step for things like

314
00:17:47,600 --> 00:17:48,559
crh

315
00:17:48,559 --> 00:17:51,760
we have to now consider

316
00:17:51,760 --> 00:17:54,960
the fact that you now have drafts on

317
00:17:54,960 --> 00:17:56,559
this list

318
00:17:56,559 --> 00:18:01,520
that are actively shipping in code

319
00:18:01,520 --> 00:18:03,840
in production releases there are people

320
00:18:03,840 --> 00:18:05,039
developing

321
00:18:05,039 --> 00:18:07,440
on top of those on squatted code points

322
00:18:07,440 --> 00:18:09,919
because there's no other option

323
00:18:09,919 --> 00:18:12,960
and we're entering a phase where this

324
00:18:12,960 --> 00:18:14,000
has now been going

325
00:18:14,000 --> 00:18:18,160
on for so long that

326
00:18:18,160 --> 00:18:22,320
effectively the working group

327
00:18:22,320 --> 00:18:24,720
is no longer really getting any say in

328
00:18:24,720 --> 00:18:26,640
something that is being developed

329
00:18:26,640 --> 00:18:29,440
because it's it's becoming a fatal

330
00:18:29,440 --> 00:18:30,960
conflict

331
00:18:30,960 --> 00:18:34,799
this is leading and these delays

332
00:18:34,799 --> 00:18:38,799
are leading to the ietf sadly

333
00:18:38,799 --> 00:18:41,480
in my view contributing to a lack of

334
00:18:41,480 --> 00:18:44,000
standardization

335
00:18:44,000 --> 00:18:46,400
when products are being developed on top

336
00:18:46,400 --> 00:18:47,520
of code points

337
00:18:47,520 --> 00:18:50,160
that people are using and at the end of

338
00:18:50,160 --> 00:18:52,000
the day when those code points have to

339
00:18:52,000 --> 00:18:53,760
change because we can't get code points

340
00:18:53,760 --> 00:18:56,480
etc etc because of the delays

341
00:18:56,480 --> 00:18:58,160
that's not good for the industry that's

342
00:18:58,160 --> 00:18:59,919
not good for the operators

343
00:18:59,919 --> 00:19:02,080
the vendors might not mind but it's

344
00:19:02,080 --> 00:19:04,400
hurting the operators

345
00:19:04,400 --> 00:19:08,320
and i find it really really really sad

346
00:19:08,320 --> 00:19:10,320
the situation that we are in because we

347
00:19:10,320 --> 00:19:13,039
seem to be facing a war of attrition

348
00:19:13,039 --> 00:19:15,679
on on certain things and i'd like to

349
00:19:15,679 --> 00:19:18,000
know from the chairs

350
00:19:18,000 --> 00:19:21,120
and from the ads when are we going to

351
00:19:21,120 --> 00:19:22,880
proceed because this has now been

352
00:19:22,880 --> 00:19:26,640
dragging on for a lot longer than a year

353
00:19:26,640 --> 00:19:29,760
and i'm i'm getting

354
00:19:29,760 --> 00:19:31,679
very frustrated because i'm watching

355
00:19:31,679 --> 00:19:33,520
things that i'm actively developing

356
00:19:33,520 --> 00:19:36,160
knowing that i can't live without them

357
00:19:36,160 --> 00:19:37,760
that i'm gonna have to change them as a

358
00:19:37,760 --> 00:19:38,400
result

359
00:19:38,400 --> 00:19:40,559
so please can we get sponsors as to when

360
00:19:40,559 --> 00:19:44,480
things are actually going to proceed now

361
00:19:44,480 --> 00:19:47,520
yeah so uh chairs could i

362
00:19:47,520 --> 00:19:53,840
give a some response for yes please

363
00:19:56,000 --> 00:19:59,039
i think andrew asked

364
00:19:59,039 --> 00:20:02,880
the similar question in last spring

365
00:20:02,880 --> 00:20:07,120
meeting and for me i always ask

366
00:20:07,120 --> 00:20:11,440
myself one question why we come here

367
00:20:11,440 --> 00:20:15,679
for ietf meeting because we want to

368
00:20:15,679 --> 00:20:18,840
standardize the best

369
00:20:18,840 --> 00:20:22,000
solution all the proper solution

370
00:20:22,000 --> 00:20:25,600
for operators and the vendors

371
00:20:25,600 --> 00:20:28,880
and the here i think the analysis

372
00:20:28,880 --> 00:20:29,360
dropped

373
00:20:29,360 --> 00:20:33,200
here we list at a list of

374
00:20:33,200 --> 00:20:36,960
four different solutions in the

375
00:20:36,960 --> 00:20:40,159
from my point of view i don't

376
00:20:40,159 --> 00:20:49,840
know and the members

377
00:20:51,120 --> 00:20:54,640
i think we lost audio or is it just me

378
00:20:54,640 --> 00:20:57,280
nice he

379
00:21:00,080 --> 00:21:04,720
i think he's back or he's muted

380
00:21:04,799 --> 00:21:07,039
we chung i think we missed or lost you

381
00:21:07,039 --> 00:21:08,640
there for a second

382
00:21:08,640 --> 00:21:11,679
are you back with us all right so

383
00:21:11,679 --> 00:21:15,280
i i think it we

384
00:21:15,280 --> 00:21:19,120
here now we have not get

385
00:21:19,120 --> 00:21:22,400
the uh result

386
00:21:22,400 --> 00:21:25,679
which one is a proper one we don't want

387
00:21:25,679 --> 00:21:27,360
to repeat

388
00:21:27,360 --> 00:21:31,039
the work one by one

389
00:21:31,039 --> 00:21:35,039
and we don't want to uh split

390
00:21:35,039 --> 00:21:38,960
the uh the industry

391
00:21:38,960 --> 00:21:43,200
chain so i think the standardized

392
00:21:43,200 --> 00:21:47,280
uh something we need to take some time

393
00:21:47,280 --> 00:21:51,440
that is valuable so thank you

394
00:21:51,440 --> 00:21:55,280
thank you why don't we go to the next

395
00:21:55,280 --> 00:21:58,000
we have four other people in the queue

396
00:21:58,000 --> 00:22:00,559
so ron

397
00:22:02,000 --> 00:22:04,640
you can hear me

398
00:22:05,919 --> 00:22:08,320
um first i'd like to support what way

399
00:22:08,320 --> 00:22:08,960
ching said

400
00:22:08,960 --> 00:22:10,640
taking our time to get it right is

401
00:22:10,640 --> 00:22:12,880
important but i'd also like to support

402
00:22:12,880 --> 00:22:14,799
what andrew said

403
00:22:14,799 --> 00:22:16,720
there is shipping code behind each of

404
00:22:16,720 --> 00:22:18,720
them and

405
00:22:18,720 --> 00:22:20,799
squatting on good points is not a good

406
00:22:20,799 --> 00:22:22,000
thing

407
00:22:22,000 --> 00:22:24,320
early this year the chairs and i started

408
00:22:24,320 --> 00:22:28,000
talking about an rfc 7120

409
00:22:28,000 --> 00:22:31,440
early code point allocation and

410
00:22:31,440 --> 00:22:35,840
i believe that's gone to the 80s

411
00:22:37,440 --> 00:22:40,799
yes that's correct we're waiting on the

412
00:22:40,799 --> 00:22:42,000
ads

413
00:22:42,000 --> 00:22:44,400
um i've been sending musical reminders

414
00:22:44,400 --> 00:22:45,840
every week

415
00:22:45,840 --> 00:22:47,919
i hope everybody's enjoying the enjoyed

416
00:22:47,919 --> 00:22:49,919
them

417
00:22:49,919 --> 00:22:52,480
i don't know if our ad wants to respond

418
00:22:52,480 --> 00:22:53,039
to that

419
00:22:53,039 --> 00:22:56,720
uh or give a status on that uh

420
00:22:56,720 --> 00:23:00,320
eric yeah one thing i wanted to uh

421
00:23:00,320 --> 00:23:03,520
understand for

422
00:23:03,520 --> 00:23:06,840
the early allocation

423
00:23:06,840 --> 00:23:11,440
was the number of deployments so the

424
00:23:11,440 --> 00:23:12,960
could anybody speak to deployments that

425
00:23:12,960 --> 00:23:14,640
actually need to interoperate

426
00:23:14,640 --> 00:23:16,960
as opposed to within sort of one

427
00:23:16,960 --> 00:23:18,320
administrative domain

428
00:23:18,320 --> 00:23:20,880
uh or is there like a linux kernel

429
00:23:20,880 --> 00:23:22,000
development work that's going

430
00:23:22,000 --> 00:23:25,440
on that would need

431
00:23:25,760 --> 00:23:28,880
something a code point to then be

432
00:23:28,880 --> 00:23:31,919
tested for interoperability with with

433
00:23:31,919 --> 00:23:34,559
another implementation

434
00:23:34,559 --> 00:23:36,480
so andre do you want to jump ahead and

435
00:23:36,480 --> 00:23:39,440
and respond to that

436
00:23:39,440 --> 00:23:42,080
so at the moment there is the juniper

437
00:23:42,080 --> 00:23:44,400
implementation obviously

438
00:23:44,400 --> 00:23:48,880
there are at least six separate

439
00:23:48,880 --> 00:23:52,000
things that we are working on

440
00:23:52,000 --> 00:23:55,200
that are linux based

441
00:23:55,200 --> 00:23:58,640
um there is work that we are working on

442
00:23:58,640 --> 00:24:02,640
that is heavily dpdk-based

443
00:24:02,640 --> 00:24:05,360
um so there are a couple of things that

444
00:24:05,360 --> 00:24:05,840
are

445
00:24:05,840 --> 00:24:08,480
that we're working on with regards to

446
00:24:08,480 --> 00:24:08,880
this

447
00:24:08,880 --> 00:24:12,640
that um are currently being held back

448
00:24:12,640 --> 00:24:16,000
quite badly and and they are pretty

449
00:24:16,000 --> 00:24:17,520
critical on the continent

450
00:24:17,520 --> 00:24:19,440
on which i operate because this is

451
00:24:19,440 --> 00:24:22,799
something that we really mean

452
00:24:28,720 --> 00:24:31,120
understood the um the things that you're

453
00:24:31,120 --> 00:24:32,559
working on are

454
00:24:32,559 --> 00:24:36,000
um well they're the

455
00:24:36,000 --> 00:24:37,520
the intention is that they will not be

456
00:24:37,520 --> 00:24:38,880
they're not just experimental right

457
00:24:38,880 --> 00:24:39,760
they're

458
00:24:39,760 --> 00:24:43,360
you know if they were very much

459
00:24:43,360 --> 00:24:46,400
not not just experimental in fact

460
00:24:46,400 --> 00:24:49,039
within the next probably two or three

461
00:24:49,039 --> 00:24:49,919
weeks

462
00:24:49,919 --> 00:24:52,559
i plan to take certain things live in

463
00:24:52,559 --> 00:24:55,039
market

464
00:24:58,320 --> 00:25:01,840
that's good to know thank you

465
00:25:03,760 --> 00:25:05,440
everyone do you want to continue or were

466
00:25:05,440 --> 00:25:07,840
you done

467
00:25:13,440 --> 00:25:15,360
okay let's try to get through the we're

468
00:25:15,360 --> 00:25:17,440
sort of over time so let's

469
00:25:17,440 --> 00:25:21,360
we have uh i'll go next then there

470
00:25:21,360 --> 00:25:24,480
this is there yeah

471
00:25:24,480 --> 00:25:26,960
um so i just want to back up weight

472
00:25:26,960 --> 00:25:28,799
chang on those on those timelines i mean

473
00:25:28,799 --> 00:25:30,799
on february 11th i sat down and

474
00:25:30,799 --> 00:25:33,840
and reread a few of the proposals

475
00:25:33,840 --> 00:25:38,320
and came up with uh analysis

476
00:25:38,320 --> 00:25:40,640
that i posted to the design team and at

477
00:25:40,640 --> 00:25:42,480
the time the design team

478
00:25:42,480 --> 00:25:44,000
decided that we couldn't hit the

479
00:25:44,000 --> 00:25:45,840
february 22nd date

480
00:25:45,840 --> 00:25:48,320
uh for publication uh with internal

481
00:25:48,320 --> 00:25:49,679
review so

482
00:25:49,679 --> 00:25:53,520
we we delayed uh releasing that content

483
00:25:53,520 --> 00:25:56,080
but i think that mid april uh is very

484
00:25:56,080 --> 00:25:58,080
achievable for the design team once we

485
00:25:58,080 --> 00:26:00,000
once we get down to work and and once

486
00:26:00,000 --> 00:26:02,159
folks

487
00:26:02,159 --> 00:26:04,880
actually finish their finish the review

488
00:26:04,880 --> 00:26:07,360
of the analysis that's been sent out

489
00:26:07,360 --> 00:26:11,120
um and the second point i wanted to make

490
00:26:11,120 --> 00:26:12,000
with is

491
00:26:12,000 --> 00:26:15,360
i guess it's a question on that 71 20

492
00:26:15,360 --> 00:26:18,320
uh question so there's i guess there's

493
00:26:18,320 --> 00:26:19,200
the

494
00:26:19,200 --> 00:26:21,760
uh there's the implementation with with

495
00:26:21,760 --> 00:26:22,720
andrew

496
00:26:22,720 --> 00:26:25,840
um on his network but i in as part of

497
00:26:25,840 --> 00:26:27,760
that is

498
00:26:27,760 --> 00:26:29,440
do the authors expect there to be no

499
00:26:29,440 --> 00:26:30,799
further changes and

500
00:26:30,799 --> 00:26:32,320
that everything would be backward

501
00:26:32,320 --> 00:26:33,919
compatible

502
00:26:33,919 --> 00:26:36,840
with that uh with any code points

503
00:26:36,840 --> 00:26:39,279
assigned um

504
00:26:39,279 --> 00:26:43,039
i'm just curious on that point as well

505
00:26:43,279 --> 00:26:47,279
that's one of the criteria and uh yeah

506
00:26:47,279 --> 00:26:48,799
in the communication that i've received

507
00:26:48,799 --> 00:26:50,799
the yeah the author

508
00:26:50,799 --> 00:26:53,919
committed that the format was stable

509
00:26:53,919 --> 00:26:56,640
at this point and that it wouldn't need

510
00:26:56,640 --> 00:26:59,440
any changes going forward

511
00:26:59,440 --> 00:27:04,000
well okay this is is what

512
00:27:04,640 --> 00:27:07,200
uh baba nule we're told and what i was

513
00:27:07,200 --> 00:27:09,440
told

514
00:27:10,400 --> 00:27:12,340
do you have knowledge to the contrary

515
00:27:12,340 --> 00:27:13,679
[Music]

516
00:27:13,679 --> 00:27:16,240
i don't that okay with one

517
00:27:16,240 --> 00:27:17,279
implementation

518
00:27:17,279 --> 00:27:21,360
it was i guess it's surprising but

519
00:27:21,360 --> 00:27:24,960
okay okay let's go to the next

520
00:27:24,960 --> 00:27:28,000
um chingli

521
00:27:29,120 --> 00:27:31,039
he seem to have lost oli and hopefully

522
00:27:31,039 --> 00:27:32,960
he'll be back soon because he has all

523
00:27:32,960 --> 00:27:36,000
the slides loaded up

524
00:27:38,799 --> 00:27:42,159
so it would be better to wait till then

525
00:27:42,159 --> 00:27:45,919
and and i thought there are a lot

526
00:27:45,919 --> 00:27:49,360
majority modification in the cih draft

527
00:27:49,360 --> 00:27:51,840
so i'm not really sure it is natural

528
00:27:51,840 --> 00:27:53,200
right now or not

529
00:27:53,200 --> 00:27:56,000
because it introduced a lot of my psp

530
00:27:56,000 --> 00:27:59,039
flavor something like that intro drops

531
00:27:59,039 --> 00:28:03,200
so no idea yet

532
00:28:03,200 --> 00:28:08,320
it is premature maybe

533
00:28:11,919 --> 00:28:16,480
okay and

534
00:28:16,480 --> 00:28:18,080
i'm not trying to pronounce your name

535
00:28:18,080 --> 00:28:19,520
right

536
00:28:19,520 --> 00:28:23,600
see hebu who go ahead

537
00:28:27,679 --> 00:28:32,480
the ball from huawei i think seagate

538
00:28:32,480 --> 00:28:35,279
introduced srv6 native service

539
00:28:35,279 --> 00:28:36,720
foundation training

540
00:28:36,720 --> 00:28:40,159
and psp behaves in the last version

541
00:28:40,159 --> 00:28:43,600
i think this job has been changed a lot

542
00:28:43,600 --> 00:28:48,480
we need more time to reveal thanks

543
00:28:53,919 --> 00:28:59,840
and andrew did you anything else to add

544
00:29:02,080 --> 00:29:05,039
no i i think i've i've pretty much set

545
00:29:05,039 --> 00:29:06,240
my piece i mean

546
00:29:06,240 --> 00:29:09,279
just like i said i i don't want a

547
00:29:09,279 --> 00:29:12,240
situation where i

548
00:29:12,240 --> 00:29:15,600
end up with you know we have a

549
00:29:15,600 --> 00:29:19,200
bunch of requirements on the continent

550
00:29:19,200 --> 00:29:20,320
at the moment

551
00:29:20,320 --> 00:29:23,679
which we kind of started our development

552
00:29:23,679 --> 00:29:24,960
work because

553
00:29:24,960 --> 00:29:27,440
we kind of felt that we weren't getting

554
00:29:27,440 --> 00:29:28,320
a lot of work done

555
00:29:28,320 --> 00:29:30,159
on the continent prior the vendor is

556
00:29:30,159 --> 00:29:31,840
actually looking at the

557
00:29:31,840 --> 00:29:33,600
fairly unique requirements that we

558
00:29:33,600 --> 00:29:35,120
sometimes deal with

559
00:29:35,120 --> 00:29:38,159
in africa and i don't want to see

560
00:29:38,159 --> 00:29:39,919
a situation where i'm building on

561
00:29:39,919 --> 00:29:41,360
technologies

562
00:29:41,360 --> 00:29:44,240
and being forced to go one way outside

563
00:29:44,240 --> 00:29:46,000
of standards

564
00:29:46,000 --> 00:29:48,559
because of delays here that have now

565
00:29:48,559 --> 00:29:49,840
been going on when we

566
00:29:49,840 --> 00:29:51,600
first raised this i was there in

567
00:29:51,600 --> 00:29:53,840
montreal when we were asking for crh

568
00:29:53,840 --> 00:29:54,480
adoption

569
00:29:54,480 --> 00:29:58,000
in in spring etc etc

570
00:29:58,000 --> 00:30:01,279
and this has been way too long and it's

571
00:30:01,279 --> 00:30:09,840
actually really hurting now

572
00:30:15,520 --> 00:30:17,520
okay uh ron real quick and then we're

573
00:30:17,520 --> 00:30:22,080
gonna move on

574
00:30:22,080 --> 00:30:25,760
and ollie's laptop has crashed so i'm

575
00:30:25,760 --> 00:30:26,320
going to

576
00:30:26,320 --> 00:30:27,840
probably have to pick up presenting

577
00:30:27,840 --> 00:30:29,520
slides but

578
00:30:29,520 --> 00:30:31,840
regarding the stability of the draft the

579
00:30:31,840 --> 00:30:33,279
format of the

580
00:30:33,279 --> 00:30:35,919
extension header hasn't changed in i

581
00:30:35,919 --> 00:30:38,080
think about 18 months now

582
00:30:38,080 --> 00:30:41,120
a couple optional um elements were added

583
00:30:41,120 --> 00:30:43,120
to the crh fib

584
00:30:43,120 --> 00:30:45,440
mostly as a response to what was going

585
00:30:45,440 --> 00:30:46,320
on in this

586
00:30:46,320 --> 00:30:49,919
design team they're optional and

587
00:30:49,919 --> 00:30:51,200
because they're optional they don't

588
00:30:51,200 --> 00:30:54,080
present a backwards compatibility issue

589
00:30:54,080 --> 00:30:57,440
finally um an early allocation

590
00:30:57,440 --> 00:30:59,919
you know if if it turns out that this

591
00:30:59,919 --> 00:31:01,200
doesn't fly

592
00:31:01,200 --> 00:31:03,679
early allocations are taken back so the

593
00:31:03,679 --> 00:31:06,640
risk associated with an early allocation

594
00:31:06,640 --> 00:31:08,960
is minimal especially considering the

595
00:31:08,960 --> 00:31:11,760
fact we have 255

596
00:31:11,760 --> 00:31:15,679
um uh routing types to assign

597
00:31:15,679 --> 00:31:18,000
of those we've assigned only five or six

598
00:31:18,000 --> 00:31:19,840
in the last 25 years

599
00:31:19,840 --> 00:31:21,200
so i don't think there's any risk that

600
00:31:21,200 --> 00:31:22,720
we're going to run out of them risk of

601
00:31:22,720 --> 00:31:24,640
making this allocation

602
00:31:24,640 --> 00:31:27,200
is minimal and i question why the

603
00:31:27,200 --> 00:31:30,720
opposition to it is so strong

604
00:31:31,440 --> 00:31:34,320
but i think the whole purpose of uh

605
00:31:34,320 --> 00:31:35,120
allowing the

606
00:31:35,120 --> 00:31:39,360
spring design team to the time to do

607
00:31:39,360 --> 00:31:42,799
uh their review

608
00:31:42,799 --> 00:31:47,120
uh was was part of uh why the entire crh

609
00:31:47,120 --> 00:31:49,200
adoption call was

610
00:31:49,200 --> 00:31:52,960
essentially suspended um

611
00:31:52,960 --> 00:31:56,320
so if it were

612
00:31:56,320 --> 00:32:00,320
understood that code points for crh did

613
00:32:00,320 --> 00:32:00,640
not

614
00:32:00,640 --> 00:32:04,320
uh necessarily imply

615
00:32:04,320 --> 00:32:06,320
interference in in in the spring design

616
00:32:06,320 --> 00:32:08,320
teamwork

617
00:32:08,320 --> 00:32:10,879
then uh

618
00:32:11,360 --> 00:32:12,840
that i suppose that's that's one

619
00:32:12,840 --> 00:32:15,840
consideration

620
00:32:20,799 --> 00:32:24,080
yeah so for design team i think

621
00:32:24,080 --> 00:32:28,000
we will try our best

622
00:32:28,000 --> 00:32:31,200
to provide

623
00:32:31,200 --> 00:32:34,240
our analysis draft to

624
00:32:34,240 --> 00:32:37,679
the both working groups soon

625
00:32:37,679 --> 00:32:40,080
thank you

626
00:32:40,880 --> 00:32:45,200
good thank you ollie are you back

627
00:32:46,240 --> 00:32:48,960
i am just back let me just to get this

628
00:32:48,960 --> 00:32:50,799
screen cheer up again i hope you reached

629
00:32:50,799 --> 00:32:54,000
a conclusion in my absence

630
00:32:54,000 --> 00:32:55,919
uh no but we we got through all the

631
00:32:55,919 --> 00:32:58,159
speakers

632
00:32:58,159 --> 00:33:00,000
you can stream all the speakers oh on

633
00:33:00,000 --> 00:33:01,760
the microphone queue uh

634
00:33:01,760 --> 00:33:04,000
yes would it be nice if you got through

635
00:33:04,000 --> 00:33:06,720
all the speakers

636
00:33:08,640 --> 00:33:12,159
so then we're yeah can you share slides

637
00:33:12,159 --> 00:33:13,039
again

638
00:33:13,039 --> 00:33:15,279
yep

639
00:33:16,080 --> 00:33:18,880
yes i'm here can you hear me we can hear

640
00:33:18,880 --> 00:33:21,120
you

641
00:33:22,840 --> 00:33:25,840
okay

642
00:33:28,559 --> 00:33:32,159
please go ahead thank you uh as uh

643
00:33:32,159 --> 00:33:34,720
all i said before this is a recap about

644
00:33:34,720 --> 00:33:36,000
this drafter

645
00:33:36,000 --> 00:33:38,159
and the working group plus code in

646
00:33:38,159 --> 00:33:39,679
january

647
00:33:39,679 --> 00:33:42,000
uh yeah this is about the application of

648
00:33:42,000 --> 00:33:44,559
the alternate marketing meter to ipv6

649
00:33:44,559 --> 00:33:47,200
max fly

650
00:33:47,840 --> 00:33:52,320
uh yeah i will go through a few slides

651
00:33:52,320 --> 00:33:54,000
to summarize

652
00:33:54,000 --> 00:33:56,960
the main contents of the graph so this

653
00:33:56,960 --> 00:33:58,080
is

654
00:33:58,080 --> 00:34:01,679
this slide just gives a

655
00:34:01,679 --> 00:34:03,840
night level view of the alternate

656
00:34:03,840 --> 00:34:05,440
marking method so

657
00:34:05,440 --> 00:34:08,079
there are two reference documents rfc

658
00:34:08,079 --> 00:34:11,280
321 and therefore 88.89

659
00:34:11,280 --> 00:34:13,520
about the methodology the first one

660
00:34:13,520 --> 00:34:16,639
describes the base

661
00:34:16,639 --> 00:34:19,119
methodology that consists of that

662
00:34:19,119 --> 00:34:20,480
batching packets

663
00:34:20,480 --> 00:34:22,719
based on an interval for target class

664
00:34:22,719 --> 00:34:23,918
measurement

665
00:34:23,918 --> 00:34:26,879
and to select within a second flag a new

666
00:34:26,879 --> 00:34:30,159
set of market packets for delay

667
00:34:30,159 --> 00:34:32,560
the second document generalized the

668
00:34:32,560 --> 00:34:34,000
application for

669
00:34:34,000 --> 00:34:37,679
multiple unicast flows and allows the

670
00:34:37,679 --> 00:34:38,639
flexible

671
00:34:38,639 --> 00:34:41,040
approach for the monitoring in

672
00:34:41,040 --> 00:34:42,159
particular

673
00:34:42,159 --> 00:34:44,800
you can select different sub networks at

674
00:34:44,800 --> 00:34:46,560
a different level

675
00:34:46,560 --> 00:34:49,918
based on the needed level of detail for

676
00:34:49,918 --> 00:34:51,199
the monitor

677
00:34:51,199 --> 00:34:54,078
so next slide

678
00:34:56,480 --> 00:35:00,480
how to apply uh these two rfc in the

679
00:35:00,480 --> 00:35:04,079
ipv6 so the agreed way was to

680
00:35:04,079 --> 00:35:07,440
define a new option uh

681
00:35:07,440 --> 00:35:09,599
that can be encapsulated as of by up

682
00:35:09,599 --> 00:35:12,320
options or destination option other

683
00:35:12,320 --> 00:35:16,480
and you can see the details

684
00:35:16,480 --> 00:35:19,520
of this option it's a very simple one so

685
00:35:19,520 --> 00:35:23,200
the first three bits of the type field

686
00:35:23,200 --> 00:35:25,760
are all zero this is important because

687
00:35:25,760 --> 00:35:27,119
it means that

688
00:35:27,119 --> 00:35:29,280
you have to skip if you don't recognize

689
00:35:29,280 --> 00:35:30,960
and data the non-changing route

690
00:35:30,960 --> 00:35:34,880
according to rfc8200

691
00:35:34,880 --> 00:35:37,119
and the other important fields are about

692
00:35:37,119 --> 00:35:38,640
the two marking fields that

693
00:35:38,640 --> 00:35:42,560
are important for the application of

694
00:35:42,560 --> 00:35:43,680
alternate marking

695
00:35:43,680 --> 00:35:46,560
methods of course and the other one is

696
00:35:46,560 --> 00:35:48,400
about the flow monitor identification

697
00:35:48,400 --> 00:35:50,320
that is required for

698
00:35:50,320 --> 00:35:52,400
a specific reason that i'm going to

699
00:35:52,400 --> 00:35:54,480
explain in the next slide

700
00:35:54,480 --> 00:35:56,560
so it is important to say that only the

701
00:35:56,560 --> 00:35:59,920
source node writes these options

702
00:35:59,920 --> 00:36:02,720
and depending on what kind of

703
00:36:02,720 --> 00:36:03,599
measurement

704
00:36:03,599 --> 00:36:07,599
is of biopar and when the nodes on path

705
00:36:07,599 --> 00:36:09,599
or only the destination node

706
00:36:09,599 --> 00:36:13,760
will process the this option

707
00:36:13,760 --> 00:36:16,400
next slide

708
00:36:18,320 --> 00:36:21,520
this slide just explain why we need

709
00:36:21,520 --> 00:36:25,440
to define this unification

710
00:36:25,440 --> 00:36:28,240
this is required for some specific

711
00:36:28,240 --> 00:36:28,880
reason

712
00:36:28,880 --> 00:36:32,320
we it helps to reduce the per node

713
00:36:32,320 --> 00:36:33,680
configuration

714
00:36:33,680 --> 00:36:36,720
and also allow a flexible granularity

715
00:36:36,720 --> 00:36:39,760
for the flow definition it simplifies

716
00:36:39,760 --> 00:36:42,160
the counters handling

717
00:36:42,160 --> 00:36:45,760
and also it eases and simplified the

718
00:36:45,760 --> 00:36:48,400
export of that

719
00:36:48,400 --> 00:36:49,760
there were there was also some

720
00:36:49,760 --> 00:36:52,000
discussion about the disambiguation of

721
00:36:52,000 --> 00:36:52,400
this

722
00:36:52,400 --> 00:36:56,480
identification but in any case

723
00:36:56,480 --> 00:36:59,760
there are two options if a centralized

724
00:36:59,760 --> 00:37:00,960
controller

725
00:37:00,960 --> 00:37:03,839
can extract the nodes properly can

726
00:37:03,839 --> 00:37:05,839
guarantee of course the uniqueness of

727
00:37:05,839 --> 00:37:06,839
this

728
00:37:06,839 --> 00:37:09,520
identification why

729
00:37:09,520 --> 00:37:12,640
in case uh this identification is

730
00:37:12,640 --> 00:37:14,880
randomly generated by the source node

731
00:37:14,880 --> 00:37:17,040
there is a chance of collision

732
00:37:17,040 --> 00:37:20,000
but it depends of the application it can

733
00:37:20,000 --> 00:37:22,240
be enough to have a 50 percent of

734
00:37:22,240 --> 00:37:23,520
collision for

735
00:37:23,520 --> 00:37:26,560
1 000 to other clothes but if this is

736
00:37:26,560 --> 00:37:27,839
not enough

737
00:37:27,839 --> 00:37:31,520
to have more to to have more entropy uh

738
00:37:31,520 --> 00:37:34,079
the this identification can be combined

739
00:37:34,079 --> 00:37:34,960
with other

740
00:37:34,960 --> 00:37:36,720
flow information in the packet for

741
00:37:36,720 --> 00:37:38,800
example yes the addresses or the flow

742
00:37:38,800 --> 00:37:40,160
labels

743
00:37:40,160 --> 00:37:44,078
next slide please

744
00:37:45,280 --> 00:37:46,800
have you just recap about the

745
00:37:46,800 --> 00:37:49,359
alternatives uh also we change the

746
00:37:49,359 --> 00:37:49,920
little

747
00:37:49,920 --> 00:37:53,119
wording of this to to be aligned with

748
00:37:53,119 --> 00:37:54,480
the earthquake

749
00:37:54,480 --> 00:37:57,680
zero zero and thanks to brian for this

750
00:37:57,680 --> 00:37:58,720
suggestion so

751
00:37:58,720 --> 00:38:00,720
basically you you can have the

752
00:38:00,720 --> 00:38:01,920
destination option

753
00:38:01,920 --> 00:38:04,160
not preceding the routing header and in

754
00:38:04,160 --> 00:38:06,000
this case the measurement can be done

755
00:38:06,000 --> 00:38:07,200
only by the

756
00:38:07,200 --> 00:38:10,480
the node in this mission address or you

757
00:38:10,480 --> 00:38:11,760
can have help by up

758
00:38:11,760 --> 00:38:15,280
option and every router on the path

759
00:38:15,280 --> 00:38:18,320
can do the measurement of course if they

760
00:38:18,320 --> 00:38:21,680
support this feature uh

761
00:38:21,680 --> 00:38:24,640
otherwise destination options preceding

762
00:38:24,640 --> 00:38:26,320
the routing gather and in this case

763
00:38:26,320 --> 00:38:29,680
every destination node in the root list

764
00:38:29,680 --> 00:38:32,720
can do the measurement

765
00:38:32,720 --> 00:38:35,919
next slide please

766
00:38:37,440 --> 00:38:39,119
yeah this is just few words about the

767
00:38:39,119 --> 00:38:41,280
security consideration we also get some

768
00:38:41,280 --> 00:38:43,280
comments on that

769
00:38:43,280 --> 00:38:45,680
basically we classify the security

770
00:38:45,680 --> 00:38:46,960
concerns

771
00:38:46,960 --> 00:38:49,760
on the harm caused by the measurement

772
00:38:49,760 --> 00:38:51,760
because the alternate marking

773
00:38:51,760 --> 00:38:54,400
as you know implies some modification on

774
00:38:54,400 --> 00:38:56,400
the option either

775
00:38:56,400 --> 00:38:59,760
but of course this must be performed in

776
00:38:59,760 --> 00:39:01,680
a way that does not affect

777
00:39:01,680 --> 00:39:04,960
the quality of service

778
00:39:04,960 --> 00:39:07,119
and the second one is about to be harmed

779
00:39:07,119 --> 00:39:08,720
to the measurement

780
00:39:08,720 --> 00:39:12,079
because of course this measurement could

781
00:39:12,079 --> 00:39:13,359
be harmed by

782
00:39:13,359 --> 00:39:16,079
routers that can halters the marking of

783
00:39:16,079 --> 00:39:17,280
the pocket

784
00:39:17,280 --> 00:39:20,400
also by injecting artificial artificial

785
00:39:20,400 --> 00:39:21,760
traffic

786
00:39:21,760 --> 00:39:24,400
in any case the precondition and the

787
00:39:24,400 --> 00:39:26,800
strong precondition that is common for

788
00:39:26,800 --> 00:39:28,320
all these unpacked

789
00:39:28,320 --> 00:39:30,960
methodology is that it is applicable to

790
00:39:30,960 --> 00:39:33,920
a controlled domain

791
00:39:34,480 --> 00:39:37,680
in this under this hypothesis we can say

792
00:39:37,680 --> 00:39:38,640
that

793
00:39:38,640 --> 00:39:40,320
the network nodes are locally

794
00:39:40,320 --> 00:39:42,880
administered and this kind of attacks

795
00:39:42,880 --> 00:39:46,079
attacks can be avoided in addition

796
00:39:46,079 --> 00:39:49,200
an attacker cannot gain information from

797
00:39:49,200 --> 00:39:50,720
a single monitoring point

798
00:39:50,720 --> 00:39:53,040
because you need a synchronization

799
00:39:53,040 --> 00:39:54,480
between different

800
00:39:54,480 --> 00:39:57,440
monitoring point to to gain network

801
00:39:57,440 --> 00:39:59,359
performance information so this is

802
00:39:59,359 --> 00:40:03,359
also another aspect that is

803
00:40:03,359 --> 00:40:07,119
in favor of this methodology

804
00:40:07,119 --> 00:40:09,440
regarding the privacy concerns that are

805
00:40:09,440 --> 00:40:11,520
very limited because the limited

806
00:40:11,520 --> 00:40:12,720
marketing techniques

807
00:40:12,720 --> 00:40:15,760
is unlikely to increase the existing

808
00:40:15,760 --> 00:40:17,280
privacy risks

809
00:40:17,280 --> 00:40:21,119
and in addition it is applied to

810
00:40:21,119 --> 00:40:23,119
to the option either and without any

811
00:40:23,119 --> 00:40:25,040
release of use of that

812
00:40:25,040 --> 00:40:28,079
so next slide please

813
00:40:28,079 --> 00:40:30,240
yeah now finally we can go through the

814
00:40:30,240 --> 00:40:31,680
the main changes after

815
00:40:31,680 --> 00:40:35,839
the last call in particular

816
00:40:35,839 --> 00:40:39,200
the main input from brian about the

817
00:40:39,200 --> 00:40:41,800
classification about the hope

818
00:40:41,800 --> 00:40:43,520
bioprocessing

819
00:40:43,520 --> 00:40:46,560
we clarify within the draft that

820
00:40:46,560 --> 00:40:49,200
of course in theory the three high order

821
00:40:49,200 --> 00:40:49,760
bits

822
00:40:49,760 --> 00:40:52,640
are all zero zero and as i said this

823
00:40:52,640 --> 00:40:53,440
means that

824
00:40:53,440 --> 00:40:55,119
you can skip with the recognized and

825
00:40:55,119 --> 00:40:56,960
that one changing group

826
00:40:56,960 --> 00:41:00,480
according to the relevant document

827
00:41:00,480 --> 00:41:03,359
and rfc8200 also mentioned that the

828
00:41:03,359 --> 00:41:05,599
nodes only examine and process the

829
00:41:05,599 --> 00:41:06,160
object

830
00:41:06,160 --> 00:41:10,240
option if explicitly configured to do so

831
00:41:10,240 --> 00:41:12,240
anyway in practice the things may be

832
00:41:12,240 --> 00:41:14,240
different and we also highlighted in the

833
00:41:14,240 --> 00:41:15,280
graph that

834
00:41:15,280 --> 00:41:18,800
it can happen that packet

835
00:41:18,800 --> 00:41:21,040
can be forced into the low part but this

836
00:41:21,040 --> 00:41:23,200
is not under our control so

837
00:41:23,200 --> 00:41:27,280
it's it's up to the implementation

838
00:41:27,280 --> 00:41:29,520
the other comment was about the this is

839
00:41:29,520 --> 00:41:30,560
very good because

840
00:41:30,560 --> 00:41:33,839
we added a new subsection about

841
00:41:33,839 --> 00:41:36,160
the controller domain in order to better

842
00:41:36,160 --> 00:41:37,440
highlight

843
00:41:37,440 --> 00:41:40,240
um this point because this answered the

844
00:41:40,240 --> 00:41:41,119
question about

845
00:41:41,119 --> 00:41:44,400
the deployability of the methodology and

846
00:41:44,400 --> 00:41:46,560
we also added the cross reference to the

847
00:41:46,560 --> 00:41:50,160
rfs 87 8799

848
00:41:50,240 --> 00:41:52,319
the other point was about the rewarding

849
00:41:52,319 --> 00:41:54,400
of the alternatives that i have already

850
00:41:54,400 --> 00:41:56,400
described before

851
00:41:56,400 --> 00:42:01,280
and also brian suggests to to relax

852
00:42:01,280 --> 00:42:03,359
the condition about the uniqueness of

853
00:42:03,359 --> 00:42:05,440
flow monitor identification because

854
00:42:05,440 --> 00:42:08,240
it may not be a problem in most of the

855
00:42:08,240 --> 00:42:10,000
cases

856
00:42:10,000 --> 00:42:12,640
next slide

857
00:42:13,200 --> 00:42:16,160
yeah another input was about was from

858
00:42:16,160 --> 00:42:18,720
react mystic

859
00:42:18,720 --> 00:42:21,200
i also noticed that the alternate

860
00:42:21,200 --> 00:42:22,079
marking leads

861
00:42:22,079 --> 00:42:24,800
carried by the option adder may affect

862
00:42:24,800 --> 00:42:26,000
the pattern view

863
00:42:26,000 --> 00:42:29,040
of course this is this is true and we

864
00:42:29,040 --> 00:42:31,920
we also add a paragraph in the security

865
00:42:31,920 --> 00:42:32,960
considerations

866
00:42:32,960 --> 00:42:36,240
anyway we we must all

867
00:42:36,240 --> 00:42:38,560
it is important also to note that the

868
00:42:38,560 --> 00:42:40,160
relative small side

869
00:42:40,160 --> 00:42:43,440
so only 48 bit of this

870
00:42:43,440 --> 00:42:46,640
option um and it's together with this

871
00:42:46,640 --> 00:42:49,440
application to control a domain mitigate

872
00:42:49,440 --> 00:42:52,560
this issue also we got other

873
00:42:52,560 --> 00:42:55,680
uh editorial comments and changes by bob

874
00:42:55,680 --> 00:42:59,200
and dollar many thanks for that

875
00:42:59,200 --> 00:43:02,560
okay next slide please

876
00:43:03,359 --> 00:43:05,359
okay regarding the next steps okay with

877
00:43:05,359 --> 00:43:06,560
the last goal

878
00:43:06,560 --> 00:43:09,520
ended in january

879
00:43:09,599 --> 00:43:11,920
we have found a great way to apply this

880
00:43:11,920 --> 00:43:14,400
qrfc for physics of course questions and

881
00:43:14,400 --> 00:43:16,319
comments are what

882
00:43:16,319 --> 00:43:19,680
thank you for time

883
00:43:19,680 --> 00:43:21,599
so as i mentioned during the document

884
00:43:21,599 --> 00:43:22,880
status

885
00:43:22,880 --> 00:43:25,280
we were planning on the next step for

886
00:43:25,280 --> 00:43:26,240
this was to

887
00:43:26,240 --> 00:43:29,359
to to close the last call and do a

888
00:43:29,359 --> 00:43:31,920
write-up and advance it to the isg

889
00:43:31,920 --> 00:43:34,480
um is there anyone who have any comments

890
00:43:34,480 --> 00:43:36,560
now that we need to

891
00:43:36,560 --> 00:43:40,400
do prior to doing that please

892
00:43:40,400 --> 00:43:42,880
jump in to the queue otherwise we will

893
00:43:42,880 --> 00:43:55,839
proceed on that plan

894
00:43:58,400 --> 00:44:03,280
okay but not go on so fernando you're up

895
00:44:03,280 --> 00:44:09,599
okay thank you bye

896
00:44:09,599 --> 00:44:12,800
can you hear me we can

897
00:44:12,800 --> 00:44:16,800
okay cool um okay so i'm uh fernando

898
00:44:16,800 --> 00:44:19,119
and i will be presenting the document uh

899
00:44:19,119 --> 00:44:20,880
improving the robustness of

900
00:44:20,880 --> 00:44:23,520
slack to flash renumbering events next

901
00:44:23,520 --> 00:44:26,079
slide please

902
00:44:26,400 --> 00:44:28,400
so essentially what this document tries

903
00:44:28,400 --> 00:44:29,680
to do is to

904
00:44:29,680 --> 00:44:32,400
provide mitigations for the problem that

905
00:44:32,400 --> 00:44:33,119
is discussed

906
00:44:33,119 --> 00:44:37,200
in rfc 8978 which is uh what was

907
00:44:37,200 --> 00:44:39,520
published a couple of days ago uh it's

908
00:44:39,520 --> 00:44:41,200
the problem statement

909
00:44:41,200 --> 00:44:44,000
um you know at the time uh we have an

910
00:44:44,000 --> 00:44:45,359
individual submission

911
00:44:45,359 --> 00:44:48,480
that had like uh you know several kind

912
00:44:48,480 --> 00:44:49,119
of

913
00:44:49,119 --> 00:44:52,079
orthogonal mitigations for this problem

914
00:44:52,079 --> 00:44:54,720
so the decision at the time was to

915
00:44:54,720 --> 00:44:57,520
um before actually incorporating into

916
00:44:57,520 --> 00:44:59,520
the working group uh document

917
00:44:59,520 --> 00:45:02,400
those mitigations essentially you know

918
00:45:02,400 --> 00:45:02,960
discuss

919
00:45:02,960 --> 00:45:04,800
each of them in the working group and

920
00:45:04,800 --> 00:45:06,319
you know based on on

921
00:45:06,319 --> 00:45:08,880
on working group consensus uh decide

922
00:45:08,880 --> 00:45:09,920
whether or not

923
00:45:09,920 --> 00:45:12,560
to incorporate them into the working

924
00:45:12,560 --> 00:45:13,920
group document

925
00:45:13,920 --> 00:45:17,680
um we have made a lot of progress so far

926
00:45:17,680 --> 00:45:20,720
and there's only one item item that

927
00:45:20,720 --> 00:45:24,640
seems to be left that is the a mechanism

928
00:45:24,640 --> 00:45:27,440
uh to try to infer that there is a stale

929
00:45:27,440 --> 00:45:28,240
information

930
00:45:28,240 --> 00:45:31,040
based on incoming root advertisements

931
00:45:31,040 --> 00:45:32,000
okay

932
00:45:32,000 --> 00:45:34,480
next slide

933
00:45:35,839 --> 00:45:39,040
so um essentially the the individual

934
00:45:39,040 --> 00:45:40,480
version had like you know

935
00:45:40,480 --> 00:45:43,839
a proposed mechanism and what we have um

936
00:45:43,839 --> 00:45:46,960
and that you know uh that mechanism

937
00:45:46,960 --> 00:45:48,720
resulted quite a little quite a bit of

938
00:45:48,720 --> 00:45:51,040
of discussion and not everyone was happy

939
00:45:51,040 --> 00:45:52,000
with it

940
00:45:52,000 --> 00:45:55,119
so one thing that we did since then is

941
00:45:55,119 --> 00:45:58,079
um first of all try to stay take a step

942
00:45:58,079 --> 00:45:58,720
back

943
00:45:58,720 --> 00:46:01,200
and um you know think about you know how

944
00:46:01,200 --> 00:46:02,160
these uh

945
00:46:02,160 --> 00:46:04,720
mediation should work okay so

946
00:46:04,720 --> 00:46:06,640
essentially we can say that uh

947
00:46:06,640 --> 00:46:08,720
the mitigation for let's say getting rid

948
00:46:08,720 --> 00:46:11,680
of um state information has two parts

949
00:46:11,680 --> 00:46:13,760
uh part of it is the trigger like

950
00:46:13,760 --> 00:46:15,440
something that happens in the network

951
00:46:15,440 --> 00:46:15,760
that

952
00:46:15,760 --> 00:46:18,640
makes you think that um you know that

953
00:46:18,640 --> 00:46:20,800
might be an indication that uh there is

954
00:46:20,800 --> 00:46:23,040
information that has become stale

955
00:46:23,040 --> 00:46:25,040
and then there is the second part which

956
00:46:25,040 --> 00:46:27,040
is the actual check what do you do to

957
00:46:27,040 --> 00:46:28,160
actually check that

958
00:46:28,160 --> 00:46:30,319
uh that information has indeed become

959
00:46:30,319 --> 00:46:31,440
stale so

960
00:46:31,440 --> 00:46:33,359
the mitigation that we had initially

961
00:46:33,359 --> 00:46:35,040
didn't separate you know between these

962
00:46:35,040 --> 00:46:36,720
two parts and you know it was just

963
00:46:36,720 --> 00:46:39,119
you know the the mechanism uh proposed

964
00:46:39,119 --> 00:46:40,319
right away

965
00:46:40,319 --> 00:46:43,920
uh so we um kind of like we thought

966
00:46:43,920 --> 00:46:47,040
uh this idea um quite a bit um when it

967
00:46:47,040 --> 00:46:48,160
comes to the trigger

968
00:46:48,160 --> 00:46:51,359
that's probably the easy part okay so

969
00:46:51,359 --> 00:46:52,960
the obvious trigger you know for

970
00:46:52,960 --> 00:46:54,480
checking whether the information has

971
00:46:54,480 --> 00:46:56,640
become stale or not is the receipt

972
00:46:56,640 --> 00:46:59,680
of a router advertisement that contains

973
00:46:59,680 --> 00:47:00,800
missing information

974
00:47:00,800 --> 00:47:03,599
we are talking about bios in our case

975
00:47:03,599 --> 00:47:05,119
and then there's the question

976
00:47:05,119 --> 00:47:07,599
of you know what a host could possibly

977
00:47:07,599 --> 00:47:08,319
do to

978
00:47:08,319 --> 00:47:11,280
actually well check or double check if

979
00:47:11,280 --> 00:47:12,720
the information has indeed

980
00:47:12,720 --> 00:47:16,160
become stale so um here we have like uh

981
00:47:16,160 --> 00:47:25,839
you know three different

982
00:47:30,000 --> 00:47:32,960
right here so it's now you came back we

983
00:47:32,960 --> 00:47:34,960
lost about 20 seconds

984
00:47:34,960 --> 00:47:38,000
okay so uh uh long story

985
00:47:38,000 --> 00:47:40,960
short we have we uh reanalyzed the

986
00:47:40,960 --> 00:47:42,640
mediation that we had

987
00:47:42,640 --> 00:47:45,440
and uh what we did was separate it into

988
00:47:45,440 --> 00:47:46,240
two parts

989
00:47:46,240 --> 00:47:48,160
a trigger and the actual check the

990
00:47:48,160 --> 00:47:49,839
trigger is what will make the

991
00:47:49,839 --> 00:47:52,240
host say okay you should probably double

992
00:47:52,240 --> 00:47:53,520
check whether this information is a

993
00:47:53,520 --> 00:47:54,880
stale or not and the check is what you

994
00:47:54,880 --> 00:47:55,520
actually do

995
00:47:55,520 --> 00:47:58,319
to figure that out the obvious uh thing

996
00:47:58,319 --> 00:48:00,240
for the trigger is the receipt of

997
00:48:00,240 --> 00:48:03,359
of an array that is missing uh

998
00:48:03,359 --> 00:48:06,000
previous information in this case pios

999
00:48:06,000 --> 00:48:06,800
okay

1000
00:48:06,800 --> 00:48:08,559
now when it comes to the possible checks

1001
00:48:08,559 --> 00:48:10,559
there are like at least three different

1002
00:48:10,559 --> 00:48:11,280
options

1003
00:48:11,280 --> 00:48:12,960
uh the last one is the one that we you

1004
00:48:12,960 --> 00:48:15,200
know eventually uh you know uh

1005
00:48:15,200 --> 00:48:17,760
selected uh but i will mention the other

1006
00:48:17,760 --> 00:48:18,240
two

1007
00:48:18,240 --> 00:48:20,319
uh the other two options too because one

1008
00:48:20,319 --> 00:48:22,400
of them is the one that we had

1009
00:48:22,400 --> 00:48:24,960
the previous option that we had which is

1010
00:48:24,960 --> 00:48:26,400
the one that was in the individual

1011
00:48:26,400 --> 00:48:27,359
submission was

1012
00:48:27,359 --> 00:48:30,000
essentially that when you receive an

1013
00:48:30,000 --> 00:48:31,920
array that was missing a pio

1014
00:48:31,920 --> 00:48:33,839
essentially reduce the preferred

1015
00:48:33,839 --> 00:48:35,599
lifetime and the valid lifetime

1016
00:48:35,599 --> 00:48:38,960
and the idea was um what's simple

1017
00:48:38,960 --> 00:48:42,079
um you know you reduce the lifetimes and

1018
00:48:42,079 --> 00:48:43,680
if they were not stale

1019
00:48:43,680 --> 00:48:45,520
those timers would be refreshed and

1020
00:48:45,520 --> 00:48:47,119
that's it so you don't

1021
00:48:47,119 --> 00:48:49,119
actually you were not actually checking

1022
00:48:49,119 --> 00:48:50,800
whether the information was still or not

1023
00:48:50,800 --> 00:48:51,200
but

1024
00:48:51,200 --> 00:48:53,839
you you know reduce the lifetimes uh

1025
00:48:53,839 --> 00:48:55,520
like to small values for example they

1026
00:48:55,520 --> 00:48:57,440
prefer lifetime in the order of you know

1027
00:48:57,440 --> 00:48:58,000
a few

1028
00:48:58,000 --> 00:49:00,480
uh seconds okay or on the other let's

1029
00:49:00,480 --> 00:49:01,040
say

1030
00:49:01,040 --> 00:49:04,559
five ten twenty a minute but small value

1031
00:49:04,559 --> 00:49:07,520
and uh that is a valid lifetime to us to

1032
00:49:07,520 --> 00:49:08,559
a few minutes

1033
00:49:08,559 --> 00:49:10,559
now if they were not stale they would be

1034
00:49:10,559 --> 00:49:12,640
refreshed and that's it so the check was

1035
00:49:12,640 --> 00:49:13,839
kind of like implicit

1036
00:49:13,839 --> 00:49:16,880
okay there is another option uh

1037
00:49:16,880 --> 00:49:19,040
which is also kind of like an implicit

1038
00:49:19,040 --> 00:49:21,119
uh check which is to for example when

1039
00:49:21,119 --> 00:49:22,400
you receive an array

1040
00:49:22,400 --> 00:49:25,119
and it's missing information rather than

1041
00:49:25,119 --> 00:49:26,319
do like a more

1042
00:49:26,319 --> 00:49:29,680
aggressive i receive reduction of um

1043
00:49:29,680 --> 00:49:32,240
you know of the lifetimes for example

1044
00:49:32,240 --> 00:49:32,720
health

1045
00:49:32,720 --> 00:49:35,440
health these uh lifetime values so the

1046
00:49:35,440 --> 00:49:36,720
reduction won't be

1047
00:49:36,720 --> 00:49:39,680
uh that aggressive but you know you will

1048
00:49:39,680 --> 00:49:40,160
you know

1049
00:49:40,160 --> 00:49:42,720
eventually reduce like the uh this like

1050
00:49:42,720 --> 00:49:44,960
the the lifetime left exponentially

1051
00:49:44,960 --> 00:49:48,559
okay now what we finally uh

1052
00:49:48,559 --> 00:49:50,400
selected to do which is probably the

1053
00:49:50,400 --> 00:49:51,920
most conservative option

1054
00:49:51,920 --> 00:49:54,800
option is to do like an explicit check

1055
00:49:54,800 --> 00:49:56,240
so when you receive an

1056
00:49:56,240 --> 00:49:59,359
aid an array that is missing

1057
00:49:59,359 --> 00:50:01,520
information what you do is essentially

1058
00:50:01,520 --> 00:50:02,960
you schedule

1059
00:50:02,960 --> 00:50:05,520
uh that of sending a router solicitation

1060
00:50:05,520 --> 00:50:06,559
to the router

1061
00:50:06,559 --> 00:50:09,040
that sent you the information to double

1062
00:50:09,040 --> 00:50:11,040
check whether that information is

1063
00:50:11,040 --> 00:50:14,240
stale or not if you know while you have

1064
00:50:14,240 --> 00:50:16,079
scheduled the rs

1065
00:50:16,079 --> 00:50:18,480
you receive the information then that's

1066
00:50:18,480 --> 00:50:20,559
fine you don't even need to send the

1067
00:50:20,559 --> 00:50:21,280
arrays

1068
00:50:21,280 --> 00:50:24,000
because the information is there and in

1069
00:50:24,000 --> 00:50:26,079
the case that you schedule uh

1070
00:50:26,079 --> 00:50:28,160
that of sending a router solicitation

1071
00:50:28,160 --> 00:50:29,119
and in the meantime

1072
00:50:29,119 --> 00:50:31,280
you don't receive it then you will send

1073
00:50:31,280 --> 00:50:32,319
a unicast

1074
00:50:32,319 --> 00:50:35,359
router solicitation and uh what we

1075
00:50:35,359 --> 00:50:37,040
propose which is in the in this

1076
00:50:37,040 --> 00:50:39,760
in the next uh slide is that you can i

1077
00:50:39,760 --> 00:50:40,160
mean

1078
00:50:40,160 --> 00:50:43,119
i personally think that you know if you

1079
00:50:43,119 --> 00:50:43,520
check

1080
00:50:43,520 --> 00:50:47,280
with an rs once that should be more than

1081
00:50:47,280 --> 00:50:48,160
enough

1082
00:50:48,160 --> 00:50:50,640
but you know if folks uh want to be even

1083
00:50:50,640 --> 00:50:52,000
more conservative

1084
00:50:52,000 --> 00:50:54,480
you can actually you know do you'll send

1085
00:50:54,480 --> 00:50:55,520
our an arrays

1086
00:50:55,520 --> 00:50:58,079
like multiple times so you retry

1087
00:50:58,079 --> 00:50:59,040
multiple times

1088
00:50:59,040 --> 00:51:01,599
you pull the router multiple times to

1089
00:51:01,599 --> 00:51:02,319
see if

1090
00:51:02,319 --> 00:51:04,800
you know you uh if the ro the router

1091
00:51:04,800 --> 00:51:06,480
eventually sends you that information

1092
00:51:06,480 --> 00:51:10,559
that was missing uh next slide

1093
00:51:13,040 --> 00:51:15,440
so this is essentially what i just said

1094
00:51:15,440 --> 00:51:16,720
but you know with with

1095
00:51:16,720 --> 00:51:19,760
more detail um

1096
00:51:19,760 --> 00:51:22,319
so if you the concept is exactly the

1097
00:51:22,319 --> 00:51:23,839
same this is just getting into the

1098
00:51:23,839 --> 00:51:24,640
details

1099
00:51:24,640 --> 00:51:27,520
so the idea is that if uh we have a you

1100
00:51:27,520 --> 00:51:28,960
know a flag that is called root

1101
00:51:28,960 --> 00:51:31,760
refresh which you know if it's false it

1102
00:51:31,760 --> 00:51:33,119
means that you know it's like

1103
00:51:33,119 --> 00:51:35,200
normal behavior what we have right now

1104
00:51:35,200 --> 00:51:37,760
and if this flag is set to true that

1105
00:51:37,760 --> 00:51:38,720
means that we

1106
00:51:38,720 --> 00:51:41,280
are in the process of double checking

1107
00:51:41,280 --> 00:51:43,520
with that router whether the information

1108
00:51:43,520 --> 00:51:45,680
you know is fresh or not so if you

1109
00:51:45,680 --> 00:51:47,280
receive um

1110
00:51:47,280 --> 00:51:50,480
an array and you know you

1111
00:51:50,480 --> 00:51:52,640
you are not currently refreshing the

1112
00:51:52,640 --> 00:51:53,520
information

1113
00:51:53,520 --> 00:51:56,800
then you check the pios if any of them

1114
00:51:56,800 --> 00:51:58,720
is missing then that means that you have

1115
00:51:58,720 --> 00:52:00,880
to enter this router refresh

1116
00:52:00,880 --> 00:52:03,280
mode if you wish so what you do you

1117
00:52:03,280 --> 00:52:05,280
enter this you set this flag rotor

1118
00:52:05,280 --> 00:52:06,880
refresh to true

1119
00:52:06,880 --> 00:52:09,920
and then you mark what are the pios that

1120
00:52:09,920 --> 00:52:10,800
are missing

1121
00:52:10,800 --> 00:52:12,960
that is pios that you had received from

1122
00:52:12,960 --> 00:52:14,079
that router before

1123
00:52:14,079 --> 00:52:16,880
but that are missing in this packet and

1124
00:52:16,880 --> 00:52:18,000
the next thing that you do

1125
00:52:18,000 --> 00:52:20,000
is you set the timer you are scheduling

1126
00:52:20,000 --> 00:52:21,119
a timer so that

1127
00:52:21,119 --> 00:52:24,800
to schedule a router solicitation okay

1128
00:52:24,800 --> 00:52:28,559
now uh if you receive a

1129
00:52:28,559 --> 00:52:32,079
an array okay and uh you were

1130
00:52:32,079 --> 00:52:34,079
refreshing information the only thing

1131
00:52:34,079 --> 00:52:35,920
that rooted refresh was true the only

1132
00:52:35,920 --> 00:52:37,280
thing that you have to do is look at the

1133
00:52:37,280 --> 00:52:38,319
pios

1134
00:52:38,319 --> 00:52:40,319
and clear the ones that you just

1135
00:52:40,319 --> 00:52:41,920
received so you're keeping track of

1136
00:52:41,920 --> 00:52:43,920
which of which ones are missing

1137
00:52:43,920 --> 00:52:46,319
so if your refreshing information then

1138
00:52:46,319 --> 00:52:48,000
you check the bios the ones that you

1139
00:52:48,000 --> 00:52:48,720
have received

1140
00:52:48,720 --> 00:52:51,440
you clear them okay so that means that

1141
00:52:51,440 --> 00:52:52,240
those are fresh

1142
00:52:52,240 --> 00:52:54,720
still fresh now what happens if the

1143
00:52:54,720 --> 00:52:56,559
timer expires the timers that you have

1144
00:52:56,559 --> 00:52:58,319
set up before expires

1145
00:52:58,319 --> 00:53:01,119
well what you do is if all the pios have

1146
00:53:01,119 --> 00:53:02,160
been received

1147
00:53:02,160 --> 00:53:03,599
that means that essentially all the

1148
00:53:03,599 --> 00:53:05,200
information is fresh so

1149
00:53:05,200 --> 00:53:07,839
you just clear this wrote refresh flag

1150
00:53:07,839 --> 00:53:09,680
so you are refreshing information

1151
00:53:09,680 --> 00:53:11,599
but you have received everything that

1152
00:53:11,599 --> 00:53:12,800
you were meaning to receive

1153
00:53:12,800 --> 00:53:16,240
problem solved okay then you have

1154
00:53:16,240 --> 00:53:18,480
we have a secret option if you have

1155
00:53:18,480 --> 00:53:19,680
retransmitted

1156
00:53:19,680 --> 00:53:22,720
a router solicitation more than whatever

1157
00:53:22,720 --> 00:53:24,240
time whatever number of times the

1158
00:53:24,240 --> 00:53:24,960
working group

1159
00:53:24,960 --> 00:53:28,079
wants to do it could be once if you if

1160
00:53:28,079 --> 00:53:30,160
you know we agree that once is enough

1161
00:53:30,160 --> 00:53:32,079
but it could be 10 if that's what the

1162
00:53:32,079 --> 00:53:33,760
working group thinks is the most

1163
00:53:33,760 --> 00:53:34,960
conservative option

1164
00:53:34,960 --> 00:53:36,559
fine enough but if you have

1165
00:53:36,559 --> 00:53:38,800
retransmitted you know the arrays

1166
00:53:38,800 --> 00:53:41,559
that number of times then essentially

1167
00:53:41,559 --> 00:53:42,720
disassociate

1168
00:53:42,720 --> 00:53:45,520
those pios with a router that is you

1169
00:53:45,520 --> 00:53:46,160
have

1170
00:53:46,160 --> 00:53:48,240
checked with the router that means that

1171
00:53:48,240 --> 00:53:50,319
that information has become stale then

1172
00:53:50,319 --> 00:53:51,920
you have to get rid of it

1173
00:53:51,920 --> 00:53:54,400
now in the other case that is the timer

1174
00:53:54,400 --> 00:53:55,599
has expired

1175
00:53:55,599 --> 00:53:57,200
what you do is send the router

1176
00:53:57,200 --> 00:53:59,359
solicitation so the concept is quite

1177
00:53:59,359 --> 00:54:00,079
simple

1178
00:54:00,079 --> 00:54:02,319
you get an array that has missing pios

1179
00:54:02,319 --> 00:54:04,000
you schedule the timer if before the

1180
00:54:04,000 --> 00:54:04,960
timer expires

1181
00:54:04,960 --> 00:54:06,720
all the information has been received in

1182
00:54:06,720 --> 00:54:08,400
other are in other arrays

1183
00:54:08,400 --> 00:54:11,520
then problem solved otherwise you send

1184
00:54:11,520 --> 00:54:14,400
a number of times as many as necessary

1185
00:54:14,400 --> 00:54:16,319
unicast router solicitations to the

1186
00:54:16,319 --> 00:54:16,960
router

1187
00:54:16,960 --> 00:54:19,440
to double check whether that information

1188
00:54:19,440 --> 00:54:20,559
you know is there

1189
00:54:20,559 --> 00:54:22,880
if you have you know retransmitted the

1190
00:54:22,880 --> 00:54:24,000
rs and

1191
00:54:24,000 --> 00:54:26,079
sufficient number of times then you give

1192
00:54:26,079 --> 00:54:27,520
up and you remove that

1193
00:54:27,520 --> 00:54:31,200
information next slide

1194
00:54:33,040 --> 00:54:36,000
so uh comments this is not necessary so

1195
00:54:36,000 --> 00:54:37,119
i could have easily

1196
00:54:37,119 --> 00:54:40,480
you know you know remove this slide but

1197
00:54:40,480 --> 00:54:43,119
some things uh you know could be made

1198
00:54:43,119 --> 00:54:43,599
easier

1199
00:54:43,599 --> 00:54:46,960
like even simpler if all options

1200
00:54:46,960 --> 00:54:49,520
of the same type could be required to be

1201
00:54:49,520 --> 00:54:51,280
in the same ra packet

1202
00:54:51,280 --> 00:54:54,240
this is i i stress this like strongly

1203
00:54:54,240 --> 00:54:54,960
this is not

1204
00:54:54,960 --> 00:54:57,599
required for the mechanism that we just

1205
00:54:57,599 --> 00:54:58,240
discussed

1206
00:54:58,240 --> 00:54:59,839
okay i'm just saying that if we were to

1207
00:54:59,839 --> 00:55:01,520
do that if we were to

1208
00:55:01,520 --> 00:55:03,599
you know enforce this other requirement

1209
00:55:03,599 --> 00:55:05,280
things would be even simpler but this is

1210
00:55:05,280 --> 00:55:06,079
not required

1211
00:55:06,079 --> 00:55:08,720
okay so if we were to require all

1212
00:55:08,720 --> 00:55:10,160
options of the same type to be in the

1213
00:55:10,160 --> 00:55:11,839
same packet this could be even

1214
00:55:11,839 --> 00:55:14,079
simplified because you know right now

1215
00:55:14,079 --> 00:55:16,400
4861 essentially says that

1216
00:55:16,400 --> 00:55:19,119
you can you know split the information

1217
00:55:19,119 --> 00:55:19,520
among

1218
00:55:19,520 --> 00:55:22,880
any number of packets that you want even

1219
00:55:22,880 --> 00:55:24,640
options from the same time for example

1220
00:55:24,640 --> 00:55:26,559
you could have to send like say

1221
00:55:26,559 --> 00:55:29,760
10 pios and you can send each pio

1222
00:55:29,760 --> 00:55:33,119
in each pio in a different array

1223
00:55:33,119 --> 00:55:35,599
but again this is not required for this

1224
00:55:35,599 --> 00:55:37,359
mechanism to work

1225
00:55:37,359 --> 00:55:40,558
uh next one

1226
00:55:41,119 --> 00:55:43,920
so question is if uh there are any

1227
00:55:43,920 --> 00:55:46,079
comments or concerns about this

1228
00:55:46,079 --> 00:55:48,319
so the idea is that you know that what

1229
00:55:48,319 --> 00:55:49,680
was uh you know agreed

1230
00:55:49,680 --> 00:55:53,119
was that you know things would be um uh

1231
00:55:53,119 --> 00:55:55,119
discussed with a working group before we

1232
00:55:55,119 --> 00:55:56,559
would actually incorporate them

1233
00:55:56,559 --> 00:55:58,799
into the working group document so this

1234
00:55:58,799 --> 00:55:59,599
is this part

1235
00:55:59,599 --> 00:56:01,440
if uh there are comments or concerns

1236
00:56:01,440 --> 00:56:03,599
about this this mechanism that

1237
00:56:03,599 --> 00:56:06,559
um you know we have uh proposed and if

1238
00:56:06,559 --> 00:56:07,200
they're

1239
00:56:07,200 --> 00:56:10,480
if there are not uh we can you know send

1240
00:56:10,480 --> 00:56:10,880
the

1241
00:56:10,880 --> 00:56:13,119
detailed text to the mailing list uh

1242
00:56:13,119 --> 00:56:15,440
let's say for a you know final review

1243
00:56:15,440 --> 00:56:18,160
or another review before we incorporate

1244
00:56:18,160 --> 00:56:21,359
into the working group document

1245
00:56:24,480 --> 00:56:31,839
um comments

1246
00:56:41,359 --> 00:56:44,880
um so i think yeah we would like to see

1247
00:56:44,880 --> 00:56:48,079
more review of this what's proposed here

1248
00:56:48,079 --> 00:56:51,760
so if i'd like to so if we can solicit a

1249
00:56:51,760 --> 00:56:52,559
couple

1250
00:56:52,559 --> 00:56:54,720
some reviewers if you're interested in

1251
00:56:54,720 --> 00:56:58,079
doing this please contact the chairs i

1252
00:56:58,079 --> 00:56:59,839
think that'd be very helpful

1253
00:56:59,839 --> 00:57:01,760
because there are a bunch of changes to

1254
00:57:01,760 --> 00:57:03,520
a fairly basic

1255
00:57:03,520 --> 00:57:08,640
part of ipv6 perfect

1256
00:57:08,799 --> 00:57:11,680
good okay thank you fernando i think bob

1257
00:57:11,680 --> 00:57:12,319
you might

1258
00:57:12,319 --> 00:57:17,440
be uh might be the next one let me see

1259
00:57:17,440 --> 00:57:20,400
i think i might be

1260
00:57:22,720 --> 00:57:26,559
but in gory may um my co-author may

1261
00:57:26,559 --> 00:57:31,440
jump in i think he's online

1262
00:57:32,480 --> 00:57:35,599
yes so

1263
00:57:35,599 --> 00:57:39,200
if i get it wrong he'll correct me

1264
00:57:39,200 --> 00:57:41,839
so uh i'm going to talk about the draft

1265
00:57:41,839 --> 00:57:42,559
i wrote

1266
00:57:42,559 --> 00:57:46,160
um a while back for changing the way we

1267
00:57:46,160 --> 00:57:48,480
process hop i hop options

1268
00:57:48,480 --> 00:57:51,839
um i got the idea for doing this after

1269
00:57:51,839 --> 00:57:54,480
some discussions at the last ietf

1270
00:57:54,480 --> 00:57:54,960
meeting

1271
00:57:54,960 --> 00:57:58,079
and tried to write it all down

1272
00:57:58,079 --> 00:58:01,040
to see if it would make sense as usual

1273
00:58:01,040 --> 00:58:02,960
writing stuff down

1274
00:58:02,960 --> 00:58:05,359
causes you to try to flush out issues

1275
00:58:05,359 --> 00:58:06,079
and

1276
00:58:06,079 --> 00:58:07,680
it ended up a little bit different than

1277
00:58:07,680 --> 00:58:11,118
i thought so next slide

1278
00:58:12,799 --> 00:58:16,000
so i mean the underlying problem is that

1279
00:58:16,000 --> 00:58:16,720
hopper hop

1280
00:58:16,720 --> 00:58:18,559
options are not working end-to-end in

1281
00:58:18,559 --> 00:58:19,839
the internet

1282
00:58:19,839 --> 00:58:22,880
um you know it's

1283
00:58:22,880 --> 00:58:25,520
common that packets with hot pie options

1284
00:58:25,520 --> 00:58:27,040
get dropped

1285
00:58:27,040 --> 00:58:29,839
um i think based on the measurements

1286
00:58:29,839 --> 00:58:30,319
that

1287
00:58:30,319 --> 00:58:34,400
gory and anna did regarding the path mq

1288
00:58:34,400 --> 00:58:35,599
option

1289
00:58:35,599 --> 00:58:38,960
um i think we discovered that there are

1290
00:58:38,960 --> 00:58:40,079
some edge

1291
00:58:40,079 --> 00:58:43,200
routers you know the the isp that who

1292
00:58:43,200 --> 00:58:45,359
serves the actual customer

1293
00:58:45,359 --> 00:58:47,760
were just dropping these they didn't

1294
00:58:47,760 --> 00:58:48,839
want

1295
00:58:48,839 --> 00:58:52,319
um they didn't want packets to go to the

1296
00:58:52,319 --> 00:58:54,559
the slow path they didn't want to have

1297
00:58:54,559 --> 00:58:56,319
them interfere with

1298
00:58:56,319 --> 00:58:59,599
the operation of the router um

1299
00:58:59,599 --> 00:59:03,040
and so my conclusion was that you know

1300
00:59:03,040 --> 00:59:04,880
we need to do something different if we

1301
00:59:04,880 --> 00:59:07,119
expect hot pie up options to be useful

1302
00:59:07,119 --> 00:59:08,160
in the future

1303
00:59:08,160 --> 00:59:11,200
right now they're not very

1304
00:59:11,200 --> 00:59:14,400
um very useful and

1305
00:59:14,400 --> 00:59:16,319
this is an approach to try something

1306
00:59:16,319 --> 00:59:17,599
different i'm not

1307
00:59:17,599 --> 00:59:20,079
i think neither of us are sure this is

1308
00:59:20,079 --> 00:59:21,280
the perfect solution

1309
00:59:21,280 --> 00:59:24,559
but it wanted to entertain

1310
00:59:24,559 --> 00:59:26,799
thinking about this and how we might

1311
00:59:26,799 --> 00:59:28,319
make this better

1312
00:59:28,319 --> 00:59:32,079
so next slide

1313
00:59:32,079 --> 00:59:34,400
and so by the way so i'm gonna basically

1314
00:59:34,400 --> 00:59:36,480
the way the presentation is organized it

1315
00:59:36,480 --> 00:59:38,079
first basically talks about what's in

1316
00:59:38,079 --> 00:59:39,280
the draft

1317
00:59:39,280 --> 00:59:42,000
and then it has a section that goes

1318
00:59:42,000 --> 00:59:43,920
through the issues that were raised in

1319
00:59:43,920 --> 00:59:45,839
the mailing list discussion and i think

1320
00:59:45,839 --> 00:59:47,760
i captured them all but

1321
00:59:47,760 --> 00:59:51,599
um then we can um talk about

1322
00:59:51,599 --> 00:59:53,680
you know and then hopefully we will can

1323
00:59:53,680 --> 00:59:55,599
have a robust discussion

1324
00:59:55,599 --> 00:59:58,640
after that so the terminology i'm

1325
00:59:58,640 --> 01:00:01,280
using that we're using in the draft is

1326
01:00:01,280 --> 01:00:03,839
you know fast path and slow path

1327
01:00:03,839 --> 01:00:08,079
and fast path means hardware

1328
01:00:08,079 --> 01:00:10,240
forwarding network processor for any

1329
01:00:10,240 --> 01:00:11,200
asex

1330
01:00:11,200 --> 01:00:14,400
asic packet um

1331
01:00:14,400 --> 01:00:16,319
you know it's the way it's the usual

1332
01:00:16,319 --> 01:00:17,520
processing

1333
01:00:17,520 --> 01:00:20,079
in the router for most packets you know

1334
01:00:20,079 --> 01:00:22,160
it's how you get wire speed

1335
01:00:22,160 --> 01:00:24,160
it's also a lot of times called the

1336
01:00:24,160 --> 01:00:25,520
forwarding plane

1337
01:00:25,520 --> 01:00:28,000
and the slow path is you know where

1338
01:00:28,000 --> 01:00:29,280
packets that are

1339
01:00:29,280 --> 01:00:32,960
usually processed by the router go um

1340
01:00:32,960 --> 01:00:34,480
in a lot of cases it's software

1341
01:00:34,480 --> 01:00:37,839
processing um

1342
01:00:37,839 --> 01:00:39,599
you know so it's used for special

1343
01:00:39,599 --> 01:00:41,680
processing it's where routing protocols

1344
01:00:41,680 --> 01:00:42,000
go

1345
01:00:42,000 --> 01:00:43,920
and the like it's also called the

1346
01:00:43,920 --> 01:00:45,359
control plane so

1347
01:00:45,359 --> 01:00:47,760
you know we're using fast path and slow

1348
01:00:47,760 --> 01:00:48,720
path

1349
01:00:48,720 --> 01:00:50,960
in this draft but it you know i think

1350
01:00:50,960 --> 01:00:53,599
it's synonymous with forwarding

1351
01:00:53,599 --> 01:00:56,319
forwarding plane and control plane next

1352
01:00:56,319 --> 01:00:58,720
slide

1353
01:01:00,240 --> 01:01:04,240
so the you know in the first ipv6

1354
01:01:04,240 --> 01:01:06,240
specification

1355
01:01:06,240 --> 01:01:09,359
um it was required that you know

1356
01:01:09,359 --> 01:01:12,799
hop hop options be processed by

1357
01:01:12,799 --> 01:01:16,480
all nodes at that time it was not

1358
01:01:16,480 --> 01:01:19,200
feasible to do this at wire speed in

1359
01:01:19,200 --> 01:01:20,720
hardware

1360
01:01:20,720 --> 01:01:24,240
this was a while ago um

1361
01:01:24,240 --> 01:01:26,400
packets without buy options were sent to

1362
01:01:26,400 --> 01:01:27,359
the slow path

1363
01:01:27,359 --> 01:01:29,839
in fact one of them the router alert was

1364
01:01:29,839 --> 01:01:30,880
designed just

1365
01:01:30,880 --> 01:01:34,640
to tell the the router to go look

1366
01:01:34,640 --> 01:01:38,160
carefully in this packet but it was also

1367
01:01:38,160 --> 01:01:41,200
then observed that this mechanism could

1368
01:01:41,200 --> 01:01:43,280
be used as a denial of service attack

1369
01:01:43,280 --> 01:01:43,680
because

1370
01:01:43,680 --> 01:01:47,040
it allows you you know nodes

1371
01:01:47,040 --> 01:01:49,119
any hosts on the internet to send

1372
01:01:49,119 --> 01:01:51,040
packets that

1373
01:01:51,040 --> 01:01:53,119
you know caused the router to have to do

1374
01:01:53,119 --> 01:01:54,319
a lot more work

1375
01:01:54,319 --> 01:01:56,559
and i think this is a big issue as to

1376
01:01:56,559 --> 01:01:57,760
why

1377
01:01:57,760 --> 01:02:00,240
they get packets with halfway options

1378
01:02:00,240 --> 01:02:01,920
aren't processed

1379
01:02:01,920 --> 01:02:04,720
um and then i think that you know it's

1380
01:02:04,720 --> 01:02:05,520
made worse

1381
01:02:05,520 --> 01:02:09,200
that we allow multiple hop by up options

1382
01:02:09,200 --> 01:02:14,480
in in the option header next slide

1383
01:02:16,880 --> 01:02:19,599
um the current specification changed

1384
01:02:19,599 --> 01:02:21,920
this a little bit

1385
01:02:21,920 --> 01:02:23,680
you know it tried to document the

1386
01:02:23,680 --> 01:02:25,119
reality when we

1387
01:02:25,119 --> 01:02:29,359
published um the ipvp v6 specification

1388
01:02:29,359 --> 01:02:30,559
as a

1389
01:02:30,559 --> 01:02:32,720
ietf standard the last step in the

1390
01:02:32,720 --> 01:02:34,559
standards process

1391
01:02:34,559 --> 01:02:37,440
um and we basically changed it to only

1392
01:02:37,440 --> 01:02:38,079
require

1393
01:02:38,079 --> 01:02:40,079
processing if the router is configured

1394
01:02:40,079 --> 01:02:41,680
to do so

1395
01:02:41,680 --> 01:02:43,760
and and this basically matched what was

1396
01:02:43,760 --> 01:02:46,839
currently being done operationally

1397
01:02:46,839 --> 01:02:50,400
um and i also note

1398
01:02:50,400 --> 01:02:53,039
based on discussion that you know i

1399
01:02:53,039 --> 01:02:54,000
think

1400
01:02:54,000 --> 01:02:56,240
this is really only talking about

1401
01:02:56,240 --> 01:02:58,000
routers with specialized hardware

1402
01:02:58,000 --> 01:02:59,359
forwarding

1403
01:02:59,359 --> 01:03:03,119
um software only routers i think

1404
01:03:03,119 --> 01:03:05,440
don't have this issue but i think the

1405
01:03:05,440 --> 01:03:08,799
denial of service attack is still

1406
01:03:08,799 --> 01:03:12,000
an issue even in software

1407
01:03:12,000 --> 01:03:16,640
next slide um

1408
01:03:16,640 --> 01:03:19,280
and you know motivation again is hoping

1409
01:03:19,280 --> 01:03:20,880
hop options are not

1410
01:03:20,880 --> 01:03:23,680
practical currently to be used widely

1411
01:03:23,680 --> 01:03:25,680
it's common to drop

1412
01:03:25,680 --> 01:03:28,720
packets without by hub options i think

1413
01:03:28,720 --> 01:03:29,839
multiple options

1414
01:03:29,839 --> 01:03:33,680
make the problem worse and any mechanism

1415
01:03:33,680 --> 01:03:36,960
that you know that packets extent

1416
01:03:36,960 --> 01:03:39,520
that are sent externally to slo to slow

1417
01:03:39,520 --> 01:03:40,960
down

1418
01:03:40,960 --> 01:03:43,839
a router is can be exploited as a denial

1419
01:03:43,839 --> 01:03:45,440
of service attack

1420
01:03:45,440 --> 01:03:48,640
and the goal goal when i wrote this

1421
01:03:48,640 --> 01:03:53,200
was to redefine the procedures to make

1422
01:03:53,200 --> 01:03:56,240
alpe options more practical to use

1423
01:03:56,240 --> 01:03:57,119
because i think they

1424
01:03:57,119 --> 01:04:00,720
are they have a lot of good potential

1425
01:04:00,720 --> 01:04:04,640
but um you know right now it's

1426
01:04:04,640 --> 01:04:07,839
you know you can't use them consistently

1427
01:04:07,839 --> 01:04:10,000
across the internet

1428
01:04:10,000 --> 01:04:13,839
next slide

1429
01:04:14,079 --> 01:04:15,760
so yeah so i'm going to basically

1430
01:04:15,760 --> 01:04:17,760
summarize the draft

1431
01:04:17,760 --> 01:04:21,440
um so 8200

1432
01:04:21,440 --> 01:04:24,640
um is defined top pay options are

1433
01:04:24,640 --> 01:04:25,599
identified

1434
01:04:25,599 --> 01:04:27,839
by next header value of zero and they

1435
01:04:27,839 --> 01:04:28,640
must be the

1436
01:04:28,640 --> 01:04:32,640
first extension header in the packet

1437
01:04:32,640 --> 01:04:35,760
the change is one of the changes is only

1438
01:04:35,760 --> 01:04:37,359
to allow one hop-hop

1439
01:04:37,359 --> 01:04:41,520
option in the header and this

1440
01:04:41,520 --> 01:04:44,000
results in requiring that all hop i hope

1441
01:04:44,000 --> 01:04:45,920
options be eight octet aligns

1442
01:04:45,920 --> 01:04:49,359
because aligned because the way

1443
01:04:49,359 --> 01:04:52,799
the pop-up option header you know it has

1444
01:04:52,799 --> 01:04:53,359
to be

1445
01:04:53,359 --> 01:04:56,000
eight octet aligned and so if it was

1446
01:04:56,000 --> 01:04:57,920
shorter then you would need pads and i

1447
01:04:57,920 --> 01:04:59,839
was trying to avoid that

1448
01:04:59,839 --> 01:05:03,280
um as i'll talk about later it turns out

1449
01:05:03,280 --> 01:05:07,359
most currently defined hop-up options

1450
01:05:07,359 --> 01:05:09,599
are eight octet aligned

1451
01:05:09,599 --> 01:05:12,720
um and and as part of this

1452
01:05:12,720 --> 01:05:15,520
i'm saying that nodes must discard

1453
01:05:15,520 --> 01:05:16,960
packets with more than one

1454
01:05:16,960 --> 01:05:23,520
option next slide

1455
01:05:23,520 --> 01:05:26,000
and the other big change is basically if

1456
01:05:26,000 --> 01:05:27,680
you can't process

1457
01:05:27,680 --> 01:05:31,359
a hop by hop head option in

1458
01:05:31,359 --> 01:05:36,079
the fast path you um

1459
01:05:36,079 --> 01:05:38,319
you know or the processing must be done

1460
01:05:38,319 --> 01:05:40,079
in the fast path

1461
01:05:40,079 --> 01:05:42,720
and and then this is a change and it's a

1462
01:05:42,720 --> 01:05:44,960
significant change is that

1463
01:05:44,960 --> 01:05:47,440
saying here otherwise you just skip it

1464
01:05:47,440 --> 01:05:48,079
and this

1465
01:05:48,079 --> 01:05:51,359
this in itself i think is i

1466
01:05:51,359 --> 01:05:53,680
i think it will solve the dropping

1467
01:05:53,680 --> 01:05:54,480
problem

1468
01:05:54,480 --> 01:05:57,520
in that it they'll still get to the next

1469
01:05:57,520 --> 01:05:58,640
hop

1470
01:05:58,640 --> 01:06:01,200
but you know it's also means that you're

1471
01:06:01,200 --> 01:06:02,960
forwarding a packet with something you

1472
01:06:02,960 --> 01:06:04,160
don't know what's inside

1473
01:06:04,160 --> 01:06:07,680
it so it's so

1474
01:06:07,680 --> 01:06:11,440
i wanted to call that out um

1475
01:06:11,440 --> 01:06:15,200
another change is that section 4.2 and

1476
01:06:15,200 --> 01:06:18,240
rfc 8200 you know the

1477
01:06:18,240 --> 01:06:21,119
bits in the first bits in the type field

1478
01:06:21,119 --> 01:06:23,039
define what to do

1479
01:06:23,039 --> 01:06:25,280
um what to do with the option if it's

1480
01:06:25,280 --> 01:06:27,039
not recognized

1481
01:06:27,039 --> 01:06:30,319
and i'm basically changing it to 0

1482
01:06:30,319 --> 01:06:33,920
0 will mean skip this option continuing

1483
01:06:33,920 --> 01:06:36,079
processing

1484
01:06:36,079 --> 01:06:39,119
and then otherwise discard the packet

1485
01:06:39,119 --> 01:06:41,599
and the change here is to not no longer

1486
01:06:41,599 --> 01:06:42,720
require

1487
01:06:42,720 --> 01:06:45,280
the sending of icmp error messages which

1488
01:06:45,280 --> 01:06:46,240
i suspect

1489
01:06:46,240 --> 01:06:50,160
is problematic at full speed

1490
01:06:50,160 --> 01:06:52,799
next slide

1491
01:06:54,000 --> 01:06:56,960
and you know as i said 8200 allows to

1492
01:06:56,960 --> 01:06:57,599
control

1493
01:06:57,599 --> 01:06:59,440
hop i hop processing by local

1494
01:06:59,440 --> 01:07:01,200
configuration

1495
01:07:01,200 --> 01:07:04,000
and so i'm just suggesting that routers

1496
01:07:04,000 --> 01:07:06,160
maintain a lookup table based on option

1497
01:07:06,160 --> 01:07:06,960
type

1498
01:07:06,960 --> 01:07:11,359
so it would be very easy or quick to

1499
01:07:13,119 --> 01:07:15,200
to see if an option is supported in the

1500
01:07:15,200 --> 01:07:16,240
router

1501
01:07:16,240 --> 01:07:19,039
um and if not follow the what it says in

1502
01:07:19,039 --> 01:07:20,960
the bits in the option type field

1503
01:07:20,960 --> 01:07:24,799
whether to just drop it or to skip it

1504
01:07:24,799 --> 01:07:28,799
next slide

1505
01:07:28,799 --> 01:07:32,480
and so i went through um the existing

1506
01:07:32,480 --> 01:07:33,520
options

1507
01:07:33,520 --> 01:07:36,799
and this lists the options that are hop

1508
01:07:36,799 --> 01:07:39,440
options there are some other options

1509
01:07:39,440 --> 01:07:39,839
that

1510
01:07:39,839 --> 01:07:43,200
are either deprecated or our destination

1511
01:07:43,200 --> 01:07:43,920
options

1512
01:07:43,920 --> 01:07:46,640
destination header only options so i'm

1513
01:07:46,640 --> 01:07:48,319
not showing those

1514
01:07:48,319 --> 01:07:51,680
and i discovered that many of these are

1515
01:07:51,680 --> 01:07:54,799
eight octet aligned but there are

1516
01:07:54,799 --> 01:07:58,160
three that um are not

1517
01:07:58,160 --> 01:08:00,880
um and so these would either need to be

1518
01:08:00,880 --> 01:08:03,119
deprecated or modified

1519
01:08:03,119 --> 01:08:05,280
um one of them at least at the time i

1520
01:08:05,280 --> 01:08:08,480
wrote the draft is still

1521
01:08:08,480 --> 01:08:12,160
an id so it should be more possible

1522
01:08:12,160 --> 01:08:14,960
but it's the effect of this was not as

1523
01:08:14,960 --> 01:08:16,158
severe as i was

1524
01:08:16,158 --> 01:08:25,198
expecting next slide

1525
01:08:25,198 --> 01:08:28,560
and of course then any new hop-up

1526
01:08:28,560 --> 01:08:29,679
options defined

1527
01:08:29,679 --> 01:08:32,719
must have eight octet alignment um

1528
01:08:32,719 --> 01:08:35,600
it's probably also good to include when

1529
01:08:35,600 --> 01:08:37,520
they should be sent do they need to be

1530
01:08:37,520 --> 01:08:38,640
in all packets

1531
01:08:38,640 --> 01:08:41,198
can they be in occasional packets you

1532
01:08:41,198 --> 01:08:41,679
know

1533
01:08:41,679 --> 01:08:45,679
using the path mtu option as an example

1534
01:08:45,679 --> 01:08:47,759
that those are particularly not intended

1535
01:08:47,759 --> 01:08:49,920
to be in all packets because

1536
01:08:49,920 --> 01:08:51,759
in fact they only want to be in the

1537
01:08:51,759 --> 01:08:53,839
short packets not in the long packets

1538
01:08:53,839 --> 01:08:55,120
because otherwise

1539
01:08:55,120 --> 01:08:57,359
they they won't do what you want them to

1540
01:08:57,359 --> 01:08:58,319
get in

1541
01:08:58,319 --> 01:09:01,120
through the network end to end so i

1542
01:09:01,120 --> 01:09:03,359
think this needs to be specified in any

1543
01:09:03,359 --> 01:09:04,839
future hop by hop

1544
01:09:04,839 --> 01:09:08,880
options next slide

1545
01:09:09,920 --> 01:09:11,839
so i'm going to attempt to go through

1546
01:09:11,839 --> 01:09:15,600
the issues i have these in

1547
01:09:16,080 --> 01:09:18,880
these are issues largely raised on the

1548
01:09:18,880 --> 01:09:21,040
mailing list and

1549
01:09:21,040 --> 01:09:23,279
um and then some other things that's

1550
01:09:23,279 --> 01:09:24,799
come up in

1551
01:09:24,799 --> 01:09:28,479
offline discussion and there might well

1552
01:09:28,479 --> 01:09:30,640
be more

1553
01:09:30,640 --> 01:09:33,679
so and this is

1554
01:09:33,679 --> 01:09:35,520
loosely sorted in the order they

1555
01:09:35,520 --> 01:09:36,719
received

1556
01:09:36,719 --> 01:09:39,520
uh there was a request can we allow hot

1557
01:09:39,520 --> 01:09:40,640
buy options

1558
01:09:40,640 --> 01:09:44,000
elsewhere in the packet i wouldn't i

1559
01:09:44,000 --> 01:09:45,759
think that's not a good idea

1560
01:09:45,759 --> 01:09:47,279
i think it would make it harder to

1561
01:09:47,279 --> 01:09:48,880
process

1562
01:09:48,880 --> 01:09:52,640
i think the current ipv6 design of

1563
01:09:52,640 --> 01:09:55,440
making them always be the first one is

1564
01:09:55,440 --> 01:09:57,120
intended to make it easier you don't

1565
01:09:57,120 --> 01:09:59,440
have to look through the whole packet

1566
01:09:59,440 --> 01:10:01,360
in the fast path to see if there's any

1567
01:10:01,360 --> 01:10:02,800
there i think

1568
01:10:02,800 --> 01:10:04,480
i think that's a very good property i

1569
01:10:04,480 --> 01:10:07,678
don't think we want to lose that

1570
01:10:07,840 --> 01:10:11,120
next was reduces flexibility to have

1571
01:10:11,120 --> 01:10:13,600
only one hop i have option and fast path

1572
01:10:13,600 --> 01:10:14,840
only

1573
01:10:14,840 --> 01:10:18,000
um and it is true

1574
01:10:18,000 --> 01:10:20,640
it does reduce flexibility but you know

1575
01:10:20,640 --> 01:10:21,120
our

1576
01:10:21,120 --> 01:10:24,560
current amount of flexibility has made

1577
01:10:24,560 --> 01:10:27,520
this not be useful across the end to an

1578
01:10:27,520 --> 01:10:28,880
internet

1579
01:10:28,880 --> 01:10:32,159
um another you know issue is you know

1580
01:10:32,159 --> 01:10:34,640
restricting options isn't the right

1581
01:10:34,640 --> 01:10:36,239
approach

1582
01:10:36,239 --> 01:10:39,360
um and it's

1583
01:10:39,360 --> 01:10:42,000
you know it's it'd be nice if we didn't

1584
01:10:42,000 --> 01:10:44,560
have to do something in my opinion but

1585
01:10:44,560 --> 01:10:46,400
you know if we want to be able to use

1586
01:10:46,400 --> 01:10:48,159
these i think we need to do something

1587
01:10:48,159 --> 01:10:49,360
different

1588
01:10:49,360 --> 01:10:53,440
um and the next was

1589
01:10:53,440 --> 01:10:56,239
you know to require them to be processed

1590
01:10:56,239 --> 01:10:59,360
in the fast path was too restrictive

1591
01:10:59,360 --> 01:11:01,440
i mean we could the document could be

1592
01:11:01,440 --> 01:11:03,199
changed to make this a should

1593
01:11:03,199 --> 01:11:05,760
you know do it this way unless you have

1594
01:11:05,760 --> 01:11:07,600
a good reason not to i mean that

1595
01:11:07,600 --> 01:11:10,000
certainly also covers software

1596
01:11:10,000 --> 01:11:13,120
implementations but we do have the issue

1597
01:11:13,120 --> 01:11:16,400
about um you know if you do allow them

1598
01:11:16,400 --> 01:11:18,480
to go to the slow path

1599
01:11:18,480 --> 01:11:20,800
then how do you avoid this becoming used

1600
01:11:20,800 --> 01:11:22,560
as a denial of service attack

1601
01:11:22,560 --> 01:11:24,000
you know if you keep them in the fast

1602
01:11:24,000 --> 01:11:26,320
path and you only process the ones

1603
01:11:26,320 --> 01:11:29,520
that you are configured to do

1604
01:11:29,520 --> 01:11:31,600
then i think the router is pretty well

1605
01:11:31,600 --> 01:11:34,400
protected against

1606
01:11:34,400 --> 01:11:36,159
a denial of service attack because you

1607
01:11:36,159 --> 01:11:38,840
should be able to do that processing at

1608
01:11:38,840 --> 01:11:40,239
speed

1609
01:11:40,239 --> 01:11:42,959
next slide

1610
01:11:45,840 --> 01:11:48,159
there we go and so they were this this

1611
01:11:48,159 --> 01:11:49,840
was a very active

1612
01:11:49,840 --> 01:11:53,520
um topic in the email thread

1613
01:11:53,520 --> 01:11:56,239
and so these are sort of all pulled

1614
01:11:56,239 --> 01:11:57,679
together

1615
01:11:57,679 --> 01:12:01,120
um you know

1616
01:12:01,120 --> 01:12:03,840
you know but how many hop i hop options

1617
01:12:03,840 --> 01:12:04,960
are should be allowed

1618
01:12:04,960 --> 01:12:08,159
you know i'm proposing one um

1619
01:12:08,159 --> 01:12:12,320
and it is restrictive i agree

1620
01:12:12,320 --> 01:12:16,239
um but different hopper options could be

1621
01:12:16,239 --> 01:12:17,920
used in different packets you know

1622
01:12:17,920 --> 01:12:21,199
they don't all have to be in the same

1623
01:12:21,199 --> 01:12:23,120
ones don't need to be in every package

1624
01:12:23,120 --> 01:12:25,040
obviously it depends on the design

1625
01:12:25,040 --> 01:12:28,480
of the option you know the path mtu

1626
01:12:28,480 --> 01:12:29,280
option

1627
01:12:29,280 --> 01:12:31,120
is particularly designed to not be in

1628
01:12:31,120 --> 01:12:32,960
all packets

1629
01:12:32,960 --> 01:12:37,840
and i think that could be um

1630
01:12:37,920 --> 01:12:39,600
you know i i mean maybe a general

1631
01:12:39,600 --> 01:12:41,280
comment here is that

1632
01:12:41,280 --> 01:12:44,080
hop i hop options can be a very useful

1633
01:12:44,080 --> 01:12:45,920
and powerful mechanism

1634
01:12:45,920 --> 01:12:48,880
but if they're overused then it's sort

1635
01:12:48,880 --> 01:12:49,360
of

1636
01:12:49,360 --> 01:12:51,360
it sort of breaks the ability to use

1637
01:12:51,360 --> 01:12:52,880
them um

1638
01:12:52,880 --> 01:12:55,760
and so i think they need you know

1639
01:12:55,760 --> 01:12:57,440
thinking about this in the future i

1640
01:12:57,440 --> 01:12:59,360
think we need to be careful about what

1641
01:12:59,360 --> 01:13:02,320
we would define as hot by hop

1642
01:13:02,320 --> 01:13:05,360
um then there's the you know would

1643
01:13:05,360 --> 01:13:07,360
would a different limit be better as

1644
01:13:07,360 --> 01:13:09,280
opposed to any number

1645
01:13:09,280 --> 01:13:12,880
um could we have two three four etcetera

1646
01:13:12,880 --> 01:13:16,239
um and you know i sort of wonder how

1647
01:13:16,239 --> 01:13:17,600
much flexibility

1648
01:13:17,600 --> 01:13:19,760
do we need i mean we know that the

1649
01:13:19,760 --> 01:13:20,960
current mechanism

1650
01:13:20,960 --> 01:13:24,239
isn't working end-to-end in the internet

1651
01:13:24,239 --> 01:13:28,159
um you know right now

1652
01:13:28,159 --> 01:13:30,960
the host can send as many as they want

1653
01:13:30,960 --> 01:13:32,800
with what i'm proposing they would know

1654
01:13:32,800 --> 01:13:34,960
they could send one per packet that's

1655
01:13:34,960 --> 01:13:38,560
fairly easy to understand if it's a

1656
01:13:38,560 --> 01:13:40,239
different limit

1657
01:13:40,239 --> 01:13:42,718
then

1658
01:13:43,440 --> 01:13:45,760
then you have to have a way of the host

1659
01:13:45,760 --> 01:13:49,280
need to know how many to send

1660
01:13:49,280 --> 01:13:52,719
and in unless you

1661
01:13:52,719 --> 01:13:55,199
also have the requirement for a octet

1662
01:13:55,199 --> 01:13:56,719
alignment

1663
01:13:56,719 --> 01:14:00,000
that you you may

1664
01:14:00,000 --> 01:14:02,239
need to use the pad options which makes

1665
01:14:02,239 --> 01:14:04,159
it more complicated

1666
01:14:04,159 --> 01:14:06,159
and then the last one was if there's

1667
01:14:06,159 --> 01:14:07,679
more than one

1668
01:14:07,679 --> 01:14:10,960
um you know should this be

1669
01:14:10,960 --> 01:14:15,120
a global or a node limit and i think

1670
01:14:15,120 --> 01:14:18,719
it probably wants to be global um

1671
01:14:18,719 --> 01:14:20,400
you know hosts need to know what the

1672
01:14:20,400 --> 01:14:22,239
limits are um

1673
01:14:22,239 --> 01:14:25,600
you know because if you send

1674
01:14:25,600 --> 01:14:27,600
less than it's fine but if you send more

1675
01:14:27,600 --> 01:14:30,080
then the packet's going to be dropped

1676
01:14:30,080 --> 01:14:32,640
next slide

1677
01:14:34,000 --> 01:14:37,520
and then another set of issues um

1678
01:14:37,520 --> 01:14:39,920
you know is it better to keep icmp error

1679
01:14:39,920 --> 01:14:41,360
messages

1680
01:14:41,360 --> 01:14:45,199
um i'm you know i'm proposing to not do

1681
01:14:45,199 --> 01:14:45,760
that

1682
01:14:45,760 --> 01:14:48,320
you know i wonder how practical it is

1683
01:14:48,320 --> 01:14:50,239
you know is this

1684
01:14:50,239 --> 01:14:52,960
i mean i think routers have mechanisms

1685
01:14:52,960 --> 01:14:54,800
to limit the number they send but if

1686
01:14:54,800 --> 01:14:56,000
you're not

1687
01:14:56,000 --> 01:14:59,199
sending them consistently they may not

1688
01:14:59,199 --> 01:15:01,440
be getting back to the source

1689
01:15:01,440 --> 01:15:04,640
so the host the source can't take any

1690
01:15:04,640 --> 01:15:05,280
actions

1691
01:15:05,280 --> 01:15:07,679
i i think this is a sort of an open

1692
01:15:07,679 --> 01:15:08,880
question

1693
01:15:08,880 --> 01:15:10,719
um there was a question about

1694
01:15:10,719 --> 01:15:12,960
relationship to srh

1695
01:15:12,960 --> 01:15:16,080
um and but srh is a routing header does

1696
01:15:16,080 --> 01:15:16,880
not have

1697
01:15:16,880 --> 01:15:20,320
hop properties um it's processed by the

1698
01:15:20,320 --> 01:15:22,320
node identified in the destination

1699
01:15:22,320 --> 01:15:23,440
address of the packet

1700
01:15:23,440 --> 01:15:28,159
so the nodes in between that don't

1701
01:15:28,159 --> 01:15:31,120
shouldn't be looking at them um of

1702
01:15:31,120 --> 01:15:32,400
course any router

1703
01:15:32,400 --> 01:15:34,239
any node can look at anything if they

1704
01:15:34,239 --> 01:15:36,000
choose to

1705
01:15:36,000 --> 01:15:39,040
we don't we're not the protocol police

1706
01:15:39,040 --> 01:15:42,640
um will forwarding packets with unknown

1707
01:15:42,640 --> 01:15:45,520
hopper hop options work at the edge

1708
01:15:45,520 --> 01:15:47,679
uh i think that's a good question you

1709
01:15:47,679 --> 01:15:50,640
know right now we have examples of

1710
01:15:50,640 --> 01:15:54,239
you know isps at the edge

1711
01:15:54,239 --> 01:15:56,560
dropping packets with hot pipe options

1712
01:15:56,560 --> 01:15:58,159
with will they let them through

1713
01:15:58,159 --> 01:16:01,520
will firewalls and the like uh

1714
01:16:01,520 --> 01:16:04,080
allow top high options they don't

1715
01:16:04,080 --> 01:16:06,239
understand through

1716
01:16:06,239 --> 01:16:09,199
that's i think something we need to

1717
01:16:09,199 --> 01:16:11,199
understand better

1718
01:16:11,199 --> 01:16:13,760
um and then this general question is

1719
01:16:13,760 --> 01:16:15,440
operational deployment

1720
01:16:15,440 --> 01:16:17,280
possible you know this can require

1721
01:16:17,280 --> 01:16:18,719
changes in all

1722
01:16:18,719 --> 01:16:21,360
all nodes to be useful and i think

1723
01:16:21,360 --> 01:16:23,120
clearly this will take time

1724
01:16:23,120 --> 01:16:26,239
it can request and of course require

1725
01:16:26,239 --> 01:16:27,679
support from router vendors and

1726
01:16:27,679 --> 01:16:28,320
operators

1727
01:16:28,320 --> 01:16:31,520
you know vendors have to build this in

1728
01:16:31,520 --> 01:16:35,199
and operators have to decide it's useful

1729
01:16:35,199 --> 01:16:36,320
to allow it

1730
01:16:36,320 --> 01:16:39,040
to be used and again i think this comes

1731
01:16:39,040 --> 01:16:39,679
back to

1732
01:16:39,679 --> 01:16:42,880
are the hop by hop options that are

1733
01:16:42,880 --> 01:16:45,040
currently or will be defined

1734
01:16:45,040 --> 01:16:48,400
actually useful and that's

1735
01:16:48,400 --> 01:16:50,719
that's i think a harder problem to

1736
01:16:50,719 --> 01:16:52,320
grapple with

1737
01:16:52,320 --> 01:16:55,199
on next slide

1738
01:16:56,400 --> 01:16:59,360
and so um thanks for all the feedback

1739
01:16:59,360 --> 01:17:01,040
and editorial comments i

1740
01:17:01,040 --> 01:17:04,719
don't address the latter here

1741
01:17:05,920 --> 01:17:08,239
we clearly need to hear from router

1742
01:17:08,239 --> 01:17:10,640
vendors and operators about this

1743
01:17:10,640 --> 01:17:12,719
you know would they be willing to

1744
01:17:12,719 --> 01:17:15,120
support something like this

1745
01:17:15,120 --> 01:17:17,920
and enable it or just continue the

1746
01:17:17,920 --> 01:17:18,640
current

1747
01:17:18,640 --> 01:17:21,280
behavior and then the general question

1748
01:17:21,280 --> 01:17:21,920
is is this

1749
01:17:21,920 --> 01:17:25,440
is this document but particularly

1750
01:17:25,440 --> 01:17:26,960
does the working group want to work on

1751
01:17:26,960 --> 01:17:29,040
this um

1752
01:17:29,040 --> 01:17:32,400
so i think we have a microphone to you

1753
01:17:32,400 --> 01:17:33,840
already ron do you want to

1754
01:17:33,840 --> 01:17:37,280
go ahead yes

1755
01:17:37,280 --> 01:17:40,640
um if you look today you'll find

1756
01:17:40,640 --> 01:17:43,520
many drafts trying to repurpose bits in

1757
01:17:43,520 --> 01:17:46,000
the base ipv6 header

1758
01:17:46,000 --> 01:17:48,239
because what they really need is a hop

1759
01:17:48,239 --> 01:17:49,679
extension header

1760
01:17:49,679 --> 01:17:51,600
but you know they don't have one that

1761
01:17:51,600 --> 01:17:53,679
works so for that reason i think that

1762
01:17:53,679 --> 01:17:55,600
this draft is probably the most

1763
01:17:55,600 --> 01:17:58,239
important draft in six men today

1764
01:17:58,239 --> 01:18:00,320
and should probably go to the top of our

1765
01:18:00,320 --> 01:18:02,080
priority list

1766
01:18:02,080 --> 01:18:05,520
second comment is the draft isn't both

1767
01:18:05,520 --> 01:18:09,040
both important and difficult the reason

1768
01:18:09,040 --> 01:18:10,960
it's difficult

1769
01:18:10,960 --> 01:18:14,159
hbh as it is today is unimplementable

1770
01:18:14,159 --> 01:18:17,520
because the hph can be 2k long it can

1771
01:18:17,520 --> 01:18:21,040
carry a thousand different uh options in

1772
01:18:21,040 --> 01:18:21,280
it

1773
01:18:21,280 --> 01:18:24,480
obviously nobody can implement that so

1774
01:18:24,480 --> 01:18:26,480
you need to be able to you need to scale

1775
01:18:26,480 --> 01:18:29,679
it back but the question is how much

1776
01:18:29,679 --> 01:18:31,679
one problem is you need to be able to

1777
01:18:31,679 --> 01:18:32,800
predict the future

1778
01:18:32,800 --> 01:18:34,960
you need to be able to predict future

1779
01:18:34,960 --> 01:18:37,840
requirements we can't see the future

1780
01:18:37,840 --> 01:18:39,679
to make it worse we can't even see the

1781
01:18:39,679 --> 01:18:42,159
present we don't know

1782
01:18:42,159 --> 01:18:45,360
what a minimum acceptable

1783
01:18:45,360 --> 01:18:48,000
requirement would be what a good number

1784
01:18:48,000 --> 01:18:48,400
of

1785
01:18:48,400 --> 01:18:52,560
uh route pro a good number of forwarding

1786
01:18:52,560 --> 01:18:55,199
engines would be able to process we

1787
01:18:55,199 --> 01:18:56,239
don't know if

1788
01:18:56,239 --> 01:18:57,920
you know one two and three or three

1789
01:18:57,920 --> 01:19:00,400
options is right we don't know

1790
01:19:00,400 --> 01:19:03,440
quite what every every vendor uh

1791
01:19:03,440 --> 01:19:05,520
what what a reasonable minimal standard

1792
01:19:05,520 --> 01:19:07,199
would be but in any event

1793
01:19:07,199 --> 01:19:10,400
important work plea please

1794
01:19:10,400 --> 01:19:14,000
keep going excellent thank you ron

1795
01:19:14,000 --> 01:19:22,159
uh fernando you're next

1796
01:19:22,159 --> 01:19:25,600
can you hear me we can hear yeah oh

1797
01:19:25,600 --> 01:19:28,640
so i um so my comment is that um

1798
01:19:28,640 --> 01:19:31,600
you know as much as i would like uh to

1799
01:19:31,600 --> 01:19:33,440
see the situation with uh you know

1800
01:19:33,440 --> 01:19:36,080
extension headers improve

1801
01:19:36,080 --> 01:19:39,280
i'm uh i don't think that um

1802
01:19:39,280 --> 01:19:42,400
you know the specific proposal

1803
01:19:42,400 --> 01:19:45,679
of limiting the number of extension

1804
01:19:45,679 --> 01:19:46,800
headers or the

1805
01:19:46,800 --> 01:19:50,000
options within the extension headers

1806
01:19:50,000 --> 01:19:52,960
will help much

1807
01:19:53,040 --> 01:19:55,040
what i see from the work that we have

1808
01:19:55,040 --> 01:19:56,560
done in b6 ops

1809
01:19:56,560 --> 01:19:59,199
is that the biggest challenge is that

1810
01:19:59,199 --> 01:19:59,840
you know the

1811
01:19:59,840 --> 01:20:02,640
the ultimate length of the extension

1812
01:20:02,640 --> 01:20:05,360
header chain so it doesn't really matter

1813
01:20:05,360 --> 01:20:06,159
that much

1814
01:20:06,159 --> 01:20:08,159
how many options you have within the

1815
01:20:08,159 --> 01:20:10,560
header or how many headers you actually

1816
01:20:10,560 --> 01:20:11,199
have

1817
01:20:11,199 --> 01:20:13,280
but the point is at the end of the day

1818
01:20:13,280 --> 01:20:14,719
what's the length of the extension

1819
01:20:14,719 --> 01:20:15,360
header

1820
01:20:15,360 --> 01:20:18,239
you could have for example a single um

1821
01:20:18,239 --> 01:20:18,880
you know

1822
01:20:18,880 --> 01:20:22,080
a single uh hope i hope options heather

1823
01:20:22,080 --> 01:20:24,400
but which has a single option that is

1824
01:20:24,400 --> 01:20:25,280
quite long

1825
01:20:25,280 --> 01:20:28,239
and that would still be a problem so uh

1826
01:20:28,239 --> 01:20:30,080
if one wants to do

1827
01:20:30,080 --> 01:20:32,400
this kind of thing like you know let's

1828
01:20:32,400 --> 01:20:34,159
say limiting or constraining the

1829
01:20:34,159 --> 01:20:36,239
extension headers in a way

1830
01:20:36,239 --> 01:20:38,719
that you know might help them survive in

1831
01:20:38,719 --> 01:20:39,760
the internet

1832
01:20:39,760 --> 01:20:42,400
i think that the the goal or what one

1833
01:20:42,400 --> 01:20:44,159
should be targeting

1834
01:20:44,159 --> 01:20:46,960
is to target the extension header uh

1835
01:20:46,960 --> 01:20:49,360
chain length as opposed to the number of

1836
01:20:49,360 --> 01:20:51,840
um you know powers or the number of

1837
01:20:51,840 --> 01:20:52,800
options

1838
01:20:52,800 --> 01:20:56,480
uh you know within the header

1839
01:20:57,199 --> 01:21:00,400
okay thank you fernando uh ching li

1840
01:21:00,400 --> 01:21:03,120
please go ahead

1841
01:21:07,440 --> 01:21:10,560
monica and and fernando i

1842
01:21:10,560 --> 01:21:14,000
i do really think the extension the the

1843
01:21:14,000 --> 01:21:17,120
solution to address this issue hover hub

1844
01:21:17,120 --> 01:21:19,280
issue is really important but

1845
01:21:19,280 --> 01:21:23,600
it seems like if the uh the devices

1846
01:21:23,600 --> 01:21:26,239
will drop the package when it meets the

1847
01:21:26,239 --> 01:21:27,199
hover hub

1848
01:21:27,199 --> 01:21:30,639
header so this solution cannot work

1849
01:21:30,639 --> 01:21:34,080
as well so i don't see how this

1850
01:21:34,080 --> 01:21:37,440
mechanism can address the issue and also

1851
01:21:37,440 --> 01:21:38,719
i i agree with

1852
01:21:38,719 --> 01:21:41,760
ron bonika that we do not

1853
01:21:41,760 --> 01:21:44,159
know how many options we will need in

1854
01:21:44,159 --> 01:21:46,320
the future we cannot say that

1855
01:21:46,320 --> 01:21:50,400
in in right now so i'm not really sure

1856
01:21:50,400 --> 01:21:50,800
that

1857
01:21:50,800 --> 01:21:53,920
it is a good way to go but i would

1858
01:21:53,920 --> 01:21:57,360
suggest that if a operator

1859
01:21:57,360 --> 01:21:59,520
build their new network it would

1860
01:21:59,520 --> 01:22:00,639
possible to

1861
01:22:00,639 --> 01:22:04,000
like lease requirements that

1862
01:22:04,000 --> 01:22:06,400
every device should support hardware

1863
01:22:06,400 --> 01:22:07,360
processing

1864
01:22:07,360 --> 01:22:09,600
that will solve the address that's that

1865
01:22:09,600 --> 01:22:11,760
was not the issue i i think

1866
01:22:11,760 --> 01:22:16,000
yeah thank you thank you eric

1867
01:22:16,000 --> 01:22:20,639
please go ahead so

1868
01:22:20,639 --> 01:22:22,400
does he need a problem to be addressed

1869
01:22:22,400 --> 01:22:24,400
this hope i hope and not support it over

1870
01:22:24,400 --> 01:22:25,360
the internet

1871
01:22:25,360 --> 01:22:29,040
i guess it's mainly because originally

1872
01:22:29,040 --> 01:22:31,120
probios was a vector for dos so it was

1873
01:22:31,120 --> 01:22:33,040
shot and cut

1874
01:22:33,040 --> 01:22:36,400
at the edge but beside this i think even

1875
01:22:36,400 --> 01:22:38,639
if the program is solved hope bio

1876
01:22:38,639 --> 01:22:40,719
in over the internet over a multi-ass

1877
01:22:40,719 --> 01:22:42,080
system will

1878
01:22:42,080 --> 01:22:45,120
never be followed and executed right we

1879
01:22:45,120 --> 01:22:46,639
know that this sort of code points for

1880
01:22:46,639 --> 01:22:47,280
instance

1881
01:22:47,280 --> 01:22:49,120
are only applicable within one domain

1882
01:22:49,120 --> 01:22:51,040
they are completely ignored once

1883
01:22:51,040 --> 01:22:52,800
you leave your own domain and this will

1884
01:22:52,800 --> 01:22:54,800
be the same for hobbyhop

1885
01:22:54,800 --> 01:22:58,400
so the limitation of a single

1886
01:22:58,400 --> 01:23:00,320
option into the hobby of extension

1887
01:23:00,320 --> 01:23:02,719
header

1888
01:23:02,880 --> 01:23:05,280
will not change this anyway over the

1889
01:23:05,280 --> 01:23:06,000
internet

1890
01:23:06,000 --> 01:23:08,000
but will prevent innovation and

1891
01:23:08,000 --> 01:23:09,040
extension

1892
01:23:09,040 --> 01:23:11,679
within a single domain and that's why

1893
01:23:11,679 --> 01:23:13,360
honestly i do not like too much this

1894
01:23:13,360 --> 01:23:14,880
proposal

1895
01:23:14,880 --> 01:23:17,040
and then the last point putting a must

1896
01:23:17,040 --> 01:23:19,440
drop a hot biopic extension address

1897
01:23:19,440 --> 01:23:20,480
having more than

1898
01:23:20,480 --> 01:23:23,199
one option uh should most likely become

1899
01:23:23,199 --> 01:23:23,840
a shoot

1900
01:23:23,840 --> 01:23:27,120
or may uh because the mass is too strong

1901
01:23:27,120 --> 01:23:29,280
it force all the routers on the pass to

1902
01:23:29,280 --> 01:23:30,800
inspect or buy hop which is

1903
01:23:30,800 --> 01:23:34,400
in itself a kind of a dose anyway that

1904
01:23:34,400 --> 01:23:36,320
is a problem to be addressed so

1905
01:23:36,320 --> 01:23:38,800
but i don't have a solution here right

1906
01:23:38,800 --> 01:23:39,920
but i mean

1907
01:23:39,920 --> 01:23:43,360
the definition of hop by hop is that the

1908
01:23:43,360 --> 01:23:44,880
routers are supposed to look at the

1909
01:23:44,880 --> 01:23:46,080
option

1910
01:23:46,080 --> 01:23:49,840
i mean that is what it is

1911
01:23:50,800 --> 01:23:54,639
indeed thank you eric

1912
01:23:54,639 --> 01:23:58,159
g dong you are you're next

1913
01:23:59,920 --> 01:24:03,440
hi uh i agree with the other people that

1914
01:24:03,440 --> 01:24:06,239
this is a really important work and that

1915
01:24:06,239 --> 01:24:06,880
is a

1916
01:24:06,880 --> 01:24:10,880
hubba hub external header has been

1917
01:24:10,880 --> 01:24:13,360
designed for this hyper hub forwarding

1918
01:24:13,360 --> 01:24:14,239
and a lot of

1919
01:24:14,239 --> 01:24:15,920
features are requiring such kind of

1920
01:24:15,920 --> 01:24:18,480
functionality

1921
01:24:18,480 --> 01:24:21,760
well i understand that limiting the

1922
01:24:21,760 --> 01:24:25,199
into only one option may encourage the

1923
01:24:25,199 --> 01:24:27,360
implementation and help its deployment

1924
01:24:27,360 --> 01:24:30,559
in a larger network

1925
01:24:30,960 --> 01:24:33,920
is it possible to allow maybe a few more

1926
01:24:33,920 --> 01:24:34,960
options

1927
01:24:34,960 --> 01:24:37,440
in a limited domain this may also help

1928
01:24:37,440 --> 01:24:39,040
to

1929
01:24:39,040 --> 01:24:41,280
increase the flexibility in using this

1930
01:24:41,280 --> 01:24:42,719
external header

1931
01:24:42,719 --> 01:24:46,639
for wider applications yeah

1932
01:24:46,639 --> 01:24:49,679
okay thank you that's rush

1933
01:24:49,679 --> 01:24:52,880
please go ahead hey

1934
01:24:52,880 --> 01:24:55,840
um so uh bob like this is a really good

1935
01:24:55,840 --> 01:24:57,679
draft and i think the problem should be

1936
01:24:57,679 --> 01:24:59,040
explored for sure

1937
01:24:59,040 --> 01:25:01,040
and uh so this is something like i think

1938
01:25:01,040 --> 01:25:02,159
we've been trying to do

1939
01:25:02,159 --> 01:25:04,159
for like about 20 years now like if i

1940
01:25:04,159 --> 01:25:05,679
understand correctly right like you know

1941
01:25:05,679 --> 01:25:06,960
starting with uh

1942
01:25:06,960 --> 01:25:09,040
like i had a draft like i think in 2003

1943
01:25:09,040 --> 01:25:10,960
or so like looking at the same thing

1944
01:25:10,960 --> 01:25:13,040
uh i think the important thing bob right

1945
01:25:13,040 --> 01:25:14,239
which i think you are trying to nail

1946
01:25:14,239 --> 01:25:15,600
down correctly is like to

1947
01:25:15,600 --> 01:25:18,080
reduce the the barrier on routers to

1948
01:25:18,080 --> 01:25:19,520
look at the stuff right while trying to

1949
01:25:19,520 --> 01:25:20,000
limit

1950
01:25:20,000 --> 01:25:21,920
how much cycles they need to put in i

1951
01:25:21,920 --> 01:25:23,679
think that's the right direction to go

1952
01:25:23,679 --> 01:25:24,320
because like no

1953
01:25:24,320 --> 01:25:26,639
if we don't have some way of limiting uh

1954
01:25:26,639 --> 01:25:28,080
how much time a router is going to spend

1955
01:25:28,080 --> 01:25:29,520
on a packet like nothing is ever going

1956
01:25:29,520 --> 01:25:30,400
to happen so i think

1957
01:25:30,400 --> 01:25:32,000
as long as you can keep that envelope

1958
01:25:32,000 --> 01:25:34,080
down i think it's like a positive

1959
01:25:34,080 --> 01:25:35,760
move in there but and and going back to

1960
01:25:35,760 --> 01:25:37,679
eric's comment i'd like we don't know if

1961
01:25:37,679 --> 01:25:39,040
this is going to get

1962
01:25:39,040 --> 01:25:41,120
routers to widely implement this and

1963
01:25:41,120 --> 01:25:42,239
let's pack it through and

1964
01:25:42,239 --> 01:25:44,000
also the fernando's point but i think

1965
01:25:44,000 --> 01:25:45,440
this is worth trying for sure

1966
01:25:45,440 --> 01:25:50,000
thank you thank you thanks suresh

1967
01:25:50,639 --> 01:25:54,080
gion is is next please go ahead i hope i

1968
01:25:54,080 --> 01:25:55,920
said your name correctly there

1969
01:25:55,920 --> 01:25:59,040
yes uh hi this is guillaume with verizon

1970
01:25:59,040 --> 01:26:02,080
um yes so bob this is a

1971
01:26:02,080 --> 01:26:04,159
definitely a really important subject i

1972
01:26:04,159 --> 01:26:06,480
think i guess with a lot of other uh

1973
01:26:06,480 --> 01:26:08,800
applications wanting to be able to use h

1974
01:26:08,800 --> 01:26:10,639
take advantage of hph and

1975
01:26:10,639 --> 01:26:13,440
at this point uh hph is really not a

1976
01:26:13,440 --> 01:26:14,320
viable option

1977
01:26:14,320 --> 01:26:15,920
to be used really for any type of

1978
01:26:15,920 --> 01:26:17,679
application uh

1979
01:26:17,679 --> 01:26:19,600
the the problem is definitely um

1980
01:26:19,600 --> 01:26:21,920
multifaceted and

1981
01:26:21,920 --> 01:26:24,480
and many layers to it i think one of the

1982
01:26:24,480 --> 01:26:27,360
big big layers that i think

1983
01:26:27,360 --> 01:26:29,440
that was mentioned is i guess you know

1984
01:26:29,440 --> 01:26:30,480
the christmas tree

1985
01:26:30,480 --> 01:26:32,560
extension header so that's that is

1986
01:26:32,560 --> 01:26:34,239
something that you know

1987
01:26:34,239 --> 01:26:36,000
that's a difficult unit variable right

1988
01:26:36,000 --> 01:26:37,679
there uh the other

1989
01:26:37,679 --> 01:26:40,320
the other one that's also big is uh chip

1990
01:26:40,320 --> 01:26:41,679
manufacturers and

1991
01:26:41,679 --> 01:26:44,320
really the control you know of what the

1992
01:26:44,320 --> 01:26:45,840
vendors use you know whether you they

1993
01:26:45,840 --> 01:26:48,239
use fixed function a6 versus npus which

1994
01:26:48,239 --> 01:26:50,239
have better processing capabilities

1995
01:26:50,239 --> 01:26:51,840
and that that's a variable that's kind

1996
01:26:51,840 --> 01:26:53,520
of out of our control

1997
01:26:53,520 --> 01:26:55,120
and even the vendors you know they'll

1998
01:26:55,120 --> 01:26:56,880
pick one versus the other

1999
01:26:56,880 --> 01:26:59,440
and and then you run into issues so that

2000
01:26:59,440 --> 01:27:00,320
that's another

2001
01:27:00,320 --> 01:27:04,080
major variable um another issue that

2002
01:27:04,080 --> 01:27:05,040
exists is that

2003
01:27:05,040 --> 01:27:07,440
i guess getting the operators really to

2004
01:27:07,440 --> 01:27:08,159
uh

2005
01:27:08,159 --> 01:27:10,000
understand you know i guess because

2006
01:27:10,000 --> 01:27:11,440
they're they wanted they

2007
01:27:11,440 --> 01:27:12,880
had the understanding just the cash

2008
01:27:12,880 --> 01:27:14,719
separation of control and data plane and

2009
01:27:14,719 --> 01:27:16,000
just the fear

2010
01:27:16,000 --> 01:27:18,480
that the impact of the management plan

2011
01:27:18,480 --> 01:27:19,360
um even

2012
01:27:19,360 --> 01:27:21,120
even once we kind of get through it and

2013
01:27:21,120 --> 01:27:22,560
we're make progress

2014
01:27:22,560 --> 01:27:25,840
trying to change the the uh mindset

2015
01:27:25,840 --> 01:27:27,920
that uh that there could possibly be

2016
01:27:27,920 --> 01:27:29,040
impacting the drop

2017
01:27:29,040 --> 01:27:30,800
you know the kind of the standard is to

2018
01:27:30,800 --> 01:27:33,199
you know drop hbh due to worry of

2019
01:27:33,199 --> 01:27:35,120
impact of the managing plane so that

2020
01:27:35,120 --> 01:27:36,639
that's another difficult like

2021
01:27:36,639 --> 01:27:37,920
operational

2022
01:27:37,920 --> 01:27:41,679
caveat of how to make uh make hph

2023
01:27:41,679 --> 01:27:44,719
viable and another uh idea

2024
01:27:44,719 --> 01:27:47,120
which which is very you know closed a

2025
01:27:47,120 --> 01:27:48,800
vein versus public domain

2026
01:27:48,800 --> 01:27:50,639
and this is in the framework is if you

2027
01:27:50,639 --> 01:27:52,239
have a closed

2028
01:27:52,239 --> 01:27:55,280
closed domain where you're uh

2029
01:27:55,280 --> 01:27:56,880
just within your operator network but

2030
01:27:56,880 --> 01:27:58,400
you have like an underlay overlay and

2031
01:27:58,400 --> 01:28:00,000
there are many cases where

2032
01:28:00,000 --> 01:28:03,120
uh a service provider um core

2033
01:28:03,120 --> 01:28:04,960
network may may actually carry the

2034
01:28:04,960 --> 01:28:06,320
internet routing table either in the

2035
01:28:06,320 --> 01:28:07,360
global table

2036
01:28:07,360 --> 01:28:10,000
or in a vpn and this is in one of the

2037
01:28:10,000 --> 01:28:10,719
other

2038
01:28:10,719 --> 01:28:12,880
hph drafts that we we've reviewed on the

2039
01:28:12,880 --> 01:28:15,280
uh with on v6 ops

2040
01:28:15,280 --> 01:28:17,760
i'm related to this concept that is was

2041
01:28:17,760 --> 01:28:19,520
something that i'd added to that draft

2042
01:28:19,520 --> 01:28:20,639
but what it

2043
01:28:20,639 --> 01:28:22,480
rolls down to like if you if you do

2044
01:28:22,480 --> 01:28:24,719
separate it out and you have your global

2045
01:28:24,719 --> 01:28:27,120
your uh internet traffic carried in a

2046
01:28:27,120 --> 01:28:29,199
vpn your underlay is actually not

2047
01:28:29,199 --> 01:28:32,000
impacted by the uh by the by the flows

2048
01:28:32,000 --> 01:28:33,920
by the hp adoption because now it's in

2049
01:28:33,920 --> 01:28:35,199
the payload so that's

2050
01:28:35,199 --> 01:28:36,880
that's another caveat that exists so

2051
01:28:36,880 --> 01:28:39,199
operators are not as impacted if you are

2052
01:28:39,199 --> 01:28:41,520
carrying internet traffic and an mpls

2053
01:28:41,520 --> 01:28:43,120
and an overlay versus sitting in the

2054
01:28:43,120 --> 01:28:43,840
underlay

2055
01:28:43,840 --> 01:28:46,080
if you're actually sitting global table

2056
01:28:46,080 --> 01:28:47,760
now you're impacted your operator

2057
01:28:47,760 --> 01:28:49,840
internal network's impacted as well as

2058
01:28:49,840 --> 01:28:51,520
any appearing points are impacted you

2059
01:28:51,520 --> 01:28:53,760
know end to end you're impacted by hbh

2060
01:28:53,760 --> 01:28:54,400
options

2061
01:28:54,400 --> 01:28:57,440
so um that's that's another impact and

2062
01:28:57,440 --> 01:28:57,760
then

2063
01:28:57,760 --> 01:29:00,639
i think with what um what uh bob is

2064
01:29:00,639 --> 01:29:02,080
trying to do i guess limiting the a

2065
01:29:02,080 --> 01:29:04,080
speech processing by reducing the number

2066
01:29:04,080 --> 01:29:04,960
of uh

2067
01:29:04,960 --> 01:29:06,639
limiting number i mean i think that's a

2068
01:29:06,639 --> 01:29:08,080
definitely a uh

2069
01:29:08,080 --> 01:29:10,480
a valid attempt to try to help the

2070
01:29:10,480 --> 01:29:12,080
processing so we're not punting

2071
01:29:12,080 --> 01:29:13,040
everything to the

2072
01:29:13,040 --> 01:29:14,560
to the control plane and that helping

2073
01:29:14,560 --> 01:29:16,719
with that separation of control plane

2074
01:29:16,719 --> 01:29:18,159
and data plane so i mean i think that is

2075
01:29:18,159 --> 01:29:19,679
definitely helpful i think

2076
01:29:19,679 --> 01:29:21,760
fine-tuning and trying to figure out a

2077
01:29:21,760 --> 01:29:24,080
way to stop the cycle of

2078
01:29:24,080 --> 01:29:26,239
continuing down the road of dropping

2079
01:29:26,239 --> 01:29:28,239
operators dropping all hph

2080
01:29:28,239 --> 01:29:30,880
and trying to you know make a headway it

2081
01:29:30,880 --> 01:29:32,080
is it is a very

2082
01:29:32,080 --> 01:29:34,880
complex and multifaceted so definitely

2083
01:29:34,880 --> 01:29:36,400
but good work and i think i think it's

2084
01:29:36,400 --> 01:29:37,440
something that we really need to

2085
01:29:37,440 --> 01:29:38,239
continue

2086
01:29:38,239 --> 01:29:40,800
to figure out a solution for thank you

2087
01:29:40,800 --> 01:29:42,480
okay good thank you

2088
01:29:42,480 --> 01:29:46,559
thanks again uh changly you are next

2089
01:29:47,199 --> 01:29:50,639
i i think this issue is really important

2090
01:29:50,639 --> 01:29:51,120
and

2091
01:29:51,120 --> 01:29:54,239
we have a lot of notification uh uh

2092
01:29:54,239 --> 01:29:56,560
innovation uh based on hobby hub

2093
01:29:56,560 --> 01:29:57,600
extension header

2094
01:29:57,600 --> 01:30:00,800
so it it is worth to discuss the

2095
01:30:00,800 --> 01:30:03,440
solution and we do have uh like the new

2096
01:30:03,440 --> 01:30:05,520
hobby hub extension

2097
01:30:05,520 --> 01:30:08,639
draft something like this and i i heard

2098
01:30:08,639 --> 01:30:12,400
some other solutions so we can uh

2099
01:30:12,400 --> 01:30:15,120
like combine together to discuss how to

2100
01:30:15,120 --> 01:30:16,639
address this

2101
01:30:16,639 --> 01:30:20,159
issue yeah thank you thank you

2102
01:30:20,159 --> 01:30:22,638
igor

2103
01:30:27,199 --> 01:30:30,239
hi uh this is the

2104
01:30:30,239 --> 01:30:33,440
verizon media um one of the big issues

2105
01:30:33,440 --> 01:30:35,280
with extension

2106
01:30:35,280 --> 01:30:37,679
and especially hub by hop options is

2107
01:30:37,679 --> 01:30:40,000
that there's a lot of data center

2108
01:30:40,000 --> 01:30:42,560
class devices that are actually used out

2109
01:30:42,560 --> 01:30:43,840
on the internet

2110
01:30:43,840 --> 01:30:47,199
that are limited to let's say 120 byte

2111
01:30:47,199 --> 01:30:49,199
bars

2112
01:30:49,199 --> 01:30:51,520
so i think i'd like to echo what uh

2113
01:30:51,520 --> 01:30:53,199
fernanda said

2114
01:30:53,199 --> 01:30:56,400
and the size of the option is actually a

2115
01:30:56,400 --> 01:30:56,960
bigger

2116
01:30:56,960 --> 01:30:59,360
issue than the number of options and if

2117
01:30:59,360 --> 01:31:02,560
you're limited to only 120 byte bars

2118
01:31:02,560 --> 01:31:04,800
that doesn't leave a lot of room for hot

2119
01:31:04,800 --> 01:31:07,600
by hop options

2120
01:31:11,440 --> 01:31:14,719
okay but that i mean that is truly a

2121
01:31:14,719 --> 01:31:18,800
a number that will change over time

2122
01:31:22,400 --> 01:31:23,920
the number that will change over time

2123
01:31:23,920 --> 01:31:26,400
however that that number has been around

2124
01:31:26,400 --> 01:31:27,040
for

2125
01:31:27,040 --> 01:31:31,600
several years

2126
01:31:31,600 --> 01:31:33,600
okay well this would be good to hear

2127
01:31:33,600 --> 01:31:35,120
from the folks who make

2128
01:31:35,120 --> 01:31:39,760
this to um talk about that

2129
01:31:39,760 --> 01:31:42,840
not not probably right here but thank

2130
01:31:42,840 --> 01:31:45,520
you

2131
01:31:45,520 --> 01:31:49,120
thanks and uh mackerman

2132
01:31:49,120 --> 01:31:52,159
you are in the queue

2133
01:31:52,800 --> 01:31:59,840
feel free to state your full name

2134
01:32:06,719 --> 01:32:13,840
we cannot hear you

2135
01:32:20,300 --> 01:32:22,960
[Music]

2136
01:32:22,960 --> 01:32:27,840
yeah okay i think we'll we'll move on

2137
01:32:30,080 --> 01:32:33,120
so a lot of comments bob

2138
01:32:33,120 --> 01:32:38,000
i think it's uh it's perhaps not

2139
01:32:38,000 --> 01:32:40,080
ready to for an adoption call i think

2140
01:32:40,080 --> 01:32:41,440
we'll continue this on the on the

2141
01:32:41,440 --> 01:32:44,000
mailing list

2142
01:32:46,480 --> 01:32:48,719
you guys hear me now there you are

2143
01:32:48,719 --> 01:32:50,239
please go ahead

2144
01:32:50,239 --> 01:32:52,880
i'm i'm so sorry about that uh i just

2145
01:32:52,880 --> 01:32:53,760
want to say i'm with an

2146
01:32:53,760 --> 01:32:55,199
enterprise and a lot of us are not

2147
01:32:55,199 --> 01:32:57,600
deploying ipv6 because we think it lacks

2148
01:32:57,600 --> 01:32:59,360
some management and control and

2149
01:32:59,360 --> 01:33:01,199
other information that i think hop by

2150
01:33:01,199 --> 01:33:03,600
hop could provide very nicely so i

2151
01:33:03,600 --> 01:33:05,440
think this is really important work and

2152
01:33:05,440 --> 01:33:06,800
i hope it continues

2153
01:33:06,800 --> 01:33:09,360
i have a couple issues or questions

2154
01:33:09,360 --> 01:33:10,639
along the lines of what

2155
01:33:10,639 --> 01:33:14,080
both igor and fernando and eric said but

2156
01:33:14,080 --> 01:33:16,400
i think those can be worked out

2157
01:33:16,400 --> 01:33:18,320
so i really hope this continues and i

2158
01:33:18,320 --> 01:33:20,400
think it'll be real strong work

2159
01:33:20,400 --> 01:33:23,520
thank you bob thank you very much thank

2160
01:33:23,520 --> 01:33:23,840
you

2161
01:33:23,840 --> 01:33:26,880
and gauri you uh have the last word on

2162
01:33:26,880 --> 01:33:29,360
this topic

2163
01:33:32,960 --> 01:33:34,880
now i'm just going to say thanks bob for

2164
01:33:34,880 --> 01:33:36,080
presenting

2165
01:33:36,080 --> 01:33:38,719
and both authors were really serious

2166
01:33:38,719 --> 01:33:40,639
about taking inputs on this

2167
01:33:40,639 --> 01:33:43,520
we want this to work so um please talk

2168
01:33:43,520 --> 01:33:44,719
to us

2169
01:33:44,719 --> 01:33:48,400
and please adopt it next time around

2170
01:33:48,840 --> 01:33:51,120
please

2171
01:33:51,120 --> 01:33:54,639
excellent thank you gory and fernando i

2172
01:33:54,639 --> 01:33:55,600
think you have

2173
01:33:55,600 --> 01:33:59,920
uh the last presentation of the day

2174
01:33:59,920 --> 01:34:03,520
you step into the pink box there you go

2175
01:34:03,520 --> 01:34:07,040
can you hear me we can hear you good

2176
01:34:07,040 --> 01:34:10,239
um okay so uh this is me again uh

2177
01:34:10,239 --> 01:34:12,080
presenting the document on the scope of

2178
01:34:12,080 --> 01:34:14,800
unique local ipv6 unicast addresses

2179
01:34:14,800 --> 01:34:18,000
uh next slide please

2180
01:34:18,000 --> 01:34:20,000
uh before getting into the uh you know

2181
01:34:20,000 --> 01:34:22,000
into the topic itself uh let me

2182
01:34:22,000 --> 01:34:24,080
um discuss a little bit how you know

2183
01:34:24,080 --> 01:34:26,719
this i um you know how this issue came

2184
01:34:26,719 --> 01:34:27,280
up

2185
01:34:27,280 --> 01:34:30,400
um you know i was doing an ipv6 training

2186
01:34:30,400 --> 01:34:31,040
course

2187
01:34:31,040 --> 01:34:34,400
and i was essentially explaining the

2188
01:34:34,400 --> 01:34:35,440
ipv6

2189
01:34:35,440 --> 01:34:38,239
architecture and i had questions asked

2190
01:34:38,239 --> 01:34:40,480
about the scope of addresses

2191
01:34:40,480 --> 01:34:42,880
so i wasn't that sure so i checked the

2192
01:34:42,880 --> 01:34:44,880
specs regarding you know how the scope

2193
01:34:44,880 --> 01:34:45,840
was defined

2194
01:34:45,840 --> 01:34:48,400
uh in the you know scope addressing

2195
01:34:48,400 --> 01:34:50,000
architecture the ipv6 address in

2196
01:34:50,000 --> 01:34:52,560
architecture the uls specification

2197
01:34:52,560 --> 01:34:54,960
and then i found that there were

2198
01:34:54,960 --> 01:34:55,760
conflicting

2199
01:34:55,760 --> 01:34:58,800
uses of the definition of scope

2200
01:34:58,800 --> 01:35:01,360
so i said okay well it's not nice that

2201
01:35:01,360 --> 01:35:01,920
you know

2202
01:35:01,920 --> 01:35:05,280
uh you know if i wanted these folks to

2203
01:35:05,280 --> 01:35:07,440
if i wanted to refer these folks to the

2204
01:35:07,440 --> 01:35:08,800
you know actual architecture and

2205
01:35:08,800 --> 01:35:10,080
specifications

2206
01:35:10,080 --> 01:35:13,040
they find stuff that is conflicting so

2207
01:35:13,040 --> 01:35:14,080
that's uh how

2208
01:35:14,080 --> 01:35:16,800
i you know ended up rising this um you

2209
01:35:16,800 --> 01:35:19,199
know this topic in in six months

2210
01:35:19,199 --> 01:35:22,800
so um essentially we have like a

2211
01:35:22,800 --> 01:35:26,159
conflicting usage of scope in different

2212
01:35:26,159 --> 01:35:29,159
itf standards um you know there's uh

2213
01:35:29,159 --> 01:35:31,199
4007 which is the scope

2214
01:35:31,199 --> 01:35:34,400
aggression architecture there's uh 4291

2215
01:35:34,400 --> 01:35:35,679
which is the ipv6 addressing

2216
01:35:35,679 --> 01:35:37,199
architecture and then

2217
01:35:37,199 --> 01:35:40,719
we have um the specification for

2218
01:35:40,719 --> 01:35:43,760
ulas okay now if you wonder

2219
01:35:43,760 --> 01:35:46,400
uh okay why should i care about this or

2220
01:35:46,400 --> 01:35:48,159
should i care about this

2221
01:35:48,159 --> 01:35:52,159
um this is how i see it um

2222
01:35:52,159 --> 01:35:54,560
the let's say issue that we have is that

2223
01:35:54,560 --> 01:35:56,639
if you try to understand

2224
01:35:56,639 --> 01:35:59,119
the architecture from you know in this

2225
01:35:59,119 --> 01:35:59,840
respect

2226
01:35:59,840 --> 01:36:01,760
we are talking about the scope uh from

2227
01:36:01,760 --> 01:36:03,280
the current documents that we have

2228
01:36:03,280 --> 01:36:04,400
you know since they are you know

2229
01:36:04,400 --> 01:36:06,639
conflicting that's difficult

2230
01:36:06,639 --> 01:36:10,080
so uh you know among people uh you know

2231
01:36:10,080 --> 01:36:10,480
that

2232
01:36:10,480 --> 01:36:12,080
the people that you know devote a lot of

2233
01:36:12,080 --> 01:36:13,920
time to this you know well might be

2234
01:36:13,920 --> 01:36:15,840
conflicted by well we kind of like all

2235
01:36:15,840 --> 01:36:17,760
understand what we mean even if we don't

2236
01:36:17,760 --> 01:36:19,840
say it but you know from forks that

2237
01:36:19,840 --> 01:36:21,440
you'd like to refer to the specs

2238
01:36:21,440 --> 01:36:24,239
uh you have to explain well the

2239
01:36:24,239 --> 01:36:25,440
terminology is

2240
01:36:25,440 --> 01:36:28,960
not exactly very precise uh

2241
01:36:28,960 --> 01:36:31,199
if you wonder well is something breaking

2242
01:36:31,199 --> 01:36:33,280
as a result of this no certainly not i

2243
01:36:33,280 --> 01:36:35,360
mean this is mostly a definition

2244
01:36:35,360 --> 01:36:37,440
thing or an architectural thing and you

2245
01:36:37,440 --> 01:36:38,400
know certainly

2246
01:36:38,400 --> 01:36:40,639
definitions will not cause networks to

2247
01:36:40,639 --> 01:36:42,080
break so there's nothing that is

2248
01:36:42,080 --> 01:36:43,760
breaking as a result of this just to

2249
01:36:43,760 --> 01:36:45,280
make the point clear

2250
01:36:45,280 --> 01:36:47,760
now there are practical implications of

2251
01:36:47,760 --> 01:36:49,520
this and we will discuss one of them

2252
01:36:49,520 --> 01:36:51,440
because there are cases in which the

2253
01:36:51,440 --> 01:36:54,080
semantics of ipv6 addresses matter

2254
01:36:54,080 --> 01:36:56,880
and that's where definitions kick in and

2255
01:36:56,880 --> 01:36:57,360
if the

2256
01:36:57,360 --> 01:36:59,199
when we will see quite clearly that you

2257
01:36:59,199 --> 01:37:01,199
know when the definitions are not clear

2258
01:37:01,199 --> 01:37:03,760
you know there are will be issues there

2259
01:37:03,760 --> 01:37:04,400
uh

2260
01:37:04,400 --> 01:37:07,199
next slide uh do you want to take a

2261
01:37:07,199 --> 01:37:07,679
question

2262
01:37:07,679 --> 01:37:10,960
uh real quick yeah jumped into the queue

2263
01:37:10,960 --> 01:37:12,960
please go ahead jim

2264
01:37:12,960 --> 01:37:15,360
um hi fernando um just hopefully a

2265
01:37:15,360 --> 01:37:16,960
simple question what are the conflicts

2266
01:37:16,960 --> 01:37:18,400
you say there are conflicts in those

2267
01:37:18,400 --> 01:37:19,679
three rfcs but

2268
01:37:19,679 --> 01:37:21,119
i don't immediately know what those

2269
01:37:21,119 --> 01:37:22,800
conflicts are

2270
01:37:22,800 --> 01:37:25,360
it's in the next few slides so i i will

2271
01:37:25,360 --> 01:37:26,320
describe that like

2272
01:37:26,320 --> 01:37:29,679
clearly okay thank you sorry

2273
01:37:29,679 --> 01:37:32,080
and well so let's talk about the

2274
01:37:32,080 --> 01:37:33,199
definition of scope

2275
01:37:33,199 --> 01:37:36,719
so this is what we have in 4007 okay

2276
01:37:36,719 --> 01:37:39,440
uh scope is defined as the topological

2277
01:37:39,440 --> 01:37:39,920
span

2278
01:37:39,920 --> 01:37:42,719
where uh within which an address may be

2279
01:37:42,719 --> 01:37:44,000
used to uniquely

2280
01:37:44,000 --> 01:37:47,360
identify an interface okay uh that's the

2281
01:37:47,360 --> 01:37:48,239
scope

2282
01:37:48,239 --> 01:37:50,320
and global scope as a result of that

2283
01:37:50,320 --> 01:37:52,080
means that you know if an address has

2284
01:37:52,080 --> 01:37:52,880
global scope

2285
01:37:52,880 --> 01:37:55,760
it means that it uniquely identifies the

2286
01:37:55,760 --> 01:37:56,480
address

2287
01:37:56,480 --> 01:37:58,480
the interface sorry anywhere in the

2288
01:37:58,480 --> 01:37:59,920
internet okay

2289
01:37:59,920 --> 01:38:02,080
so a global address is supposed to

2290
01:38:02,080 --> 01:38:03,360
uniquely identify

2291
01:38:03,360 --> 01:38:05,920
an uh you know an interface anywhere on

2292
01:38:05,920 --> 01:38:07,360
the internet

2293
01:38:07,360 --> 01:38:10,239
urls we will go into detail later but

2294
01:38:10,239 --> 01:38:11,040
you know

2295
01:38:11,040 --> 01:38:12,800
from the very beginning you know

2296
01:38:12,800 --> 01:38:14,480
obviously ulas

2297
01:38:14,480 --> 01:38:16,400
don't conform to that why well because

2298
01:38:16,400 --> 01:38:18,320
you are randomizing the prefixes

2299
01:38:18,320 --> 01:38:20,159
and you know if we happen to have you

2300
01:38:20,159 --> 01:38:22,639
know like for some reason randomly we

2301
01:38:22,639 --> 01:38:23,119
ended

2302
01:38:23,119 --> 01:38:25,760
up selecting the same prefix obviously

2303
01:38:25,760 --> 01:38:27,520
the resulting addresses will not

2304
01:38:27,520 --> 01:38:30,639
uniquely identify an interface anywhere

2305
01:38:30,639 --> 01:38:32,560
in the internet

2306
01:38:32,560 --> 01:38:34,800
so that's you know first reason next

2307
01:38:34,800 --> 01:38:37,040
slide

2308
01:38:39,360 --> 01:38:40,880
then if you want to add a little bit

2309
01:38:40,880 --> 01:38:43,280
more to that this is the scope

2310
01:38:43,280 --> 01:38:46,560
definition uh uh

2311
01:38:46,560 --> 01:38:50,159
you know in uh 4193 which is the ura

2312
01:38:50,159 --> 01:38:53,280
specification so it says you know one

2313
01:38:53,280 --> 01:38:55,600
hand okay these prefixes are globally

2314
01:38:55,600 --> 01:38:56,800
unique

2315
01:38:56,800 --> 01:38:58,560
well we will see the next slide about

2316
01:38:58,560 --> 01:39:00,320
this later but you know

2317
01:39:00,320 --> 01:39:02,639
they cannot really be globally unique if

2318
01:39:02,639 --> 01:39:03,440
they are being

2319
01:39:03,440 --> 01:39:05,840
if they are being randomly generated in

2320
01:39:05,840 --> 01:39:07,440
an uncoordinated matter

2321
01:39:07,440 --> 01:39:10,400
that that's that's not possible but then

2322
01:39:10,400 --> 01:39:11,280
uh

2323
01:39:11,280 --> 01:39:12,639
you know if you continue with the same

2324
01:39:12,639 --> 01:39:14,480
definition they say their limitation is

2325
01:39:14,480 --> 01:39:16,639
in the rootability of the prefixes

2326
01:39:16,639 --> 01:39:19,679
which is limited to a site and any

2327
01:39:19,679 --> 01:39:20,400
explicit

2328
01:39:20,400 --> 01:39:22,639
you know wrote an agreement so in a

2329
01:39:22,639 --> 01:39:24,360
sense in you know in essence what the

2330
01:39:24,360 --> 01:39:26,639
specific definition is telling you is

2331
01:39:26,639 --> 01:39:28,400
that you know these addresses are

2332
01:39:28,400 --> 01:39:30,000
limited to a site which is

2333
01:39:30,000 --> 01:39:33,280
when they are meant to be employed now

2334
01:39:33,280 --> 01:39:35,840
next slide

2335
01:39:37,040 --> 01:39:39,440
now when uh discussing you know the

2336
01:39:39,440 --> 01:39:41,040
scope of ulas

2337
01:39:41,040 --> 01:39:42,880
uh normally people say oh no but that's

2338
01:39:42,880 --> 01:39:44,719
not correct if you look at the

2339
01:39:44,719 --> 01:39:48,520
you know the um the ula specification

2340
01:39:48,520 --> 01:39:50,159
4193

2341
01:39:50,159 --> 01:39:52,320
you will have the math there that well

2342
01:39:52,320 --> 01:39:54,639
okay it doesn't say that the addresses

2343
01:39:54,639 --> 01:39:56,880
are unique but it essentially tells you

2344
01:39:56,880 --> 01:39:58,639
that the probability of

2345
01:39:58,639 --> 01:40:01,520
collision is you know really low so low

2346
01:40:01,520 --> 01:40:03,119
that in practice you can claim that they

2347
01:40:03,119 --> 01:40:04,000
are unique

2348
01:40:04,000 --> 01:40:06,760
now if you really think about for what

2349
01:40:06,760 --> 01:40:08,000
4193 is

2350
01:40:08,000 --> 01:40:11,520
saying what it's really saying is if you

2351
01:40:11,520 --> 01:40:12,159
grab

2352
01:40:12,159 --> 01:40:15,840
a number a reduced number of ula based

2353
01:40:15,840 --> 01:40:19,040
networks and you interconnect them

2354
01:40:19,040 --> 01:40:21,040
then this is what the probability of

2355
01:40:21,040 --> 01:40:22,159
collision will be

2356
01:40:22,159 --> 01:40:24,400
so you connect only two networks that

2357
01:40:24,400 --> 01:40:26,239
you get you know blah blah blah

2358
01:40:26,239 --> 01:40:28,400
you connect 10 networks you get this

2359
01:40:28,400 --> 01:40:29,840
probability you connect

2360
01:40:29,840 --> 01:40:32,639
10 000 networks and you get this number

2361
01:40:32,639 --> 01:40:33,199
which is

2362
01:40:33,199 --> 01:40:35,679
still low you could say but based on the

2363
01:40:35,679 --> 01:40:37,040
definition that we have

2364
01:40:37,040 --> 01:40:39,119
from global scope which was in the

2365
01:40:39,119 --> 01:40:41,280
previous addresses

2366
01:40:41,280 --> 01:40:43,520
in order for ulas to really be global

2367
01:40:43,520 --> 01:40:44,400
scope

2368
01:40:44,400 --> 01:40:47,520
that means that all absolutely all of

2369
01:40:47,520 --> 01:40:48,320
the ula

2370
01:40:48,320 --> 01:40:50,880
networks when interconnected together

2371
01:40:50,880 --> 01:40:52,639
should have a small probability

2372
01:40:52,639 --> 01:40:53,760
collision

2373
01:40:53,760 --> 01:40:57,040
now if you compute the birthday paradox

2374
01:40:57,040 --> 01:40:59,520
about the math of interconnecting all

2375
01:40:59,520 --> 01:41:01,199
ula based networks

2376
01:41:01,199 --> 01:41:03,600
the number wouldn't be 10 000 of course

2377
01:41:03,600 --> 01:41:04,400
there's no

2378
01:41:04,400 --> 01:41:06,159
only ten thousand deployments in the

2379
01:41:06,159 --> 01:41:07,520
internet that would be i don't know

2380
01:41:07,520 --> 01:41:08,320
what's the number

2381
01:41:08,320 --> 01:41:10,159
10 million 100 million i don't know

2382
01:41:10,159 --> 01:41:12,080
what's the number now when you do the

2383
01:41:12,080 --> 01:41:14,000
when you compute the birthday paradox

2384
01:41:14,000 --> 01:41:15,280
for that number

2385
01:41:15,280 --> 01:41:17,600
then now the probability of collisions

2386
01:41:17,600 --> 01:41:19,360
becomes roughly one

2387
01:41:19,360 --> 01:41:21,280
so you are guaranteed that you will

2388
01:41:21,280 --> 01:41:22,560
actually have collisions

2389
01:41:22,560 --> 01:41:25,280
okay now based on the definition that we

2390
01:41:25,280 --> 01:41:26,159
had before

2391
01:41:26,159 --> 01:41:28,960
for for what's a global scope address

2392
01:41:28,960 --> 01:41:30,960
well then uls can obviously not be

2393
01:41:30,960 --> 01:41:32,400
global scope because

2394
01:41:32,400 --> 01:41:34,159
if you have almost certainty of

2395
01:41:34,159 --> 01:41:36,159
collisions then you cannot claim that

2396
01:41:36,159 --> 01:41:36,960
the ula

2397
01:41:36,960 --> 01:41:40,239
uniquely identifies an interface okay

2398
01:41:40,239 --> 01:41:42,799
next slide

2399
01:41:43,600 --> 01:41:46,159
now some practical implications because

2400
01:41:46,159 --> 01:41:48,159
you could say okay well the definition

2401
01:41:48,159 --> 01:41:48,880
is not really

2402
01:41:48,880 --> 01:41:52,000
precise well okay now

2403
01:41:52,000 --> 01:41:53,840
this is an interesting you know case

2404
01:41:53,840 --> 01:41:56,000
this was raised by you know brian so

2405
01:41:56,000 --> 01:41:58,080
credit goes for him to you know to to

2406
01:41:58,080 --> 01:41:59,600
spotting this one

2407
01:41:59,600 --> 01:42:02,400
there's a library in python we take with

2408
01:42:02,400 --> 01:42:03,199
processes

2409
01:42:03,199 --> 01:42:06,719
uh ipe addresses okay including them

2410
01:42:06,719 --> 01:42:10,639
it processes ipv6 services and

2411
01:42:10,639 --> 01:42:13,440
for each address object it has some

2412
01:42:13,440 --> 01:42:14,239
attributes

2413
01:42:14,239 --> 01:42:17,600
okay so if you know you set some address

2414
01:42:17,600 --> 01:42:18,960
and you know the id

2415
01:42:18,960 --> 01:42:20,719
the attributes would will be set

2416
01:42:20,719 --> 01:42:22,239
accordingly you can check for those

2417
01:42:22,239 --> 01:42:23,360
attributes

2418
01:42:23,360 --> 01:42:25,360
so there are two attributes which are

2419
01:42:25,360 --> 01:42:27,520
defined specified by the library as

2420
01:42:27,520 --> 01:42:28,239
follows

2421
01:42:28,239 --> 01:42:31,119
is private which is true if the address

2422
01:42:31,119 --> 01:42:32,080
is allocated for

2423
01:42:32,080 --> 01:42:35,040
private networks is global which is true

2424
01:42:35,040 --> 01:42:36,800
if the address is allocated for public

2425
01:42:36,800 --> 01:42:37,600
networks

2426
01:42:37,600 --> 01:42:40,560
and what happens if you have a ula well

2427
01:42:40,560 --> 01:42:41,040
private

2428
01:42:41,040 --> 01:42:45,600
is set to true global is set to false

2429
01:42:45,760 --> 01:42:47,920
now you might say okay well these guys

2430
01:42:47,920 --> 01:42:49,040
are wrong

2431
01:42:49,040 --> 01:42:51,760
that might be you know an option but

2432
01:42:51,760 --> 01:42:53,840
when you look at the actual definition

2433
01:42:53,840 --> 01:42:55,679
of you know the actual definition of

2434
01:42:55,679 --> 01:42:57,520
scope that you have

2435
01:42:57,520 --> 01:43:00,000
you cannot really blame them uh because

2436
01:43:00,000 --> 01:43:01,040
you know from

2437
01:43:01,040 --> 01:43:03,360
when it comes to the definition of scope

2438
01:43:03,360 --> 01:43:05,040
and global scope itself

2439
01:43:05,040 --> 01:43:07,360
you know ulas cannot be global you know

2440
01:43:07,360 --> 01:43:09,360
it doesn't utilize don't comply with the

2441
01:43:09,360 --> 01:43:10,639
definition of global

2442
01:43:10,639 --> 01:43:13,360
so here you have like a practical case

2443
01:43:13,360 --> 01:43:14,639
so is this library

2444
01:43:14,639 --> 01:43:17,600
right or wrong i'd say that you know

2445
01:43:17,600 --> 01:43:19,280
from a conceptual point of view they are

2446
01:43:19,280 --> 01:43:20,239
right

2447
01:43:20,239 --> 01:43:22,639
if you ask whether they are compliant

2448
01:43:22,639 --> 01:43:24,560
with the specifications i would say i

2449
01:43:24,560 --> 01:43:25,040
don't know

2450
01:43:25,040 --> 01:43:26,639
i mean there's a conflict in the

2451
01:43:26,639 --> 01:43:28,239
specification so

2452
01:43:28,239 --> 01:43:31,440
it they they my i think that they

2453
01:43:31,440 --> 01:43:34,880
comply with 4007 because this is

2454
01:43:34,880 --> 01:43:36,960
you know what i you interpret the scope

2455
01:43:36,960 --> 01:43:38,400
of your lace-to-be

2456
01:43:38,400 --> 01:43:40,679
but this doesn't comply with let's say

2457
01:43:40,679 --> 01:43:42,360
4291 because

2458
01:43:42,360 --> 01:43:45,520
4291 lists um

2459
01:43:45,520 --> 01:43:48,719
ulas as global addresses uh

2460
01:43:48,719 --> 01:43:51,199
so this is again practical case what do

2461
01:43:51,199 --> 01:43:52,400
you do in this case

2462
01:43:52,400 --> 01:43:55,040
like do you ask them to fix them and why

2463
01:43:55,040 --> 01:43:56,880
are they wrong are they right

2464
01:43:56,880 --> 01:43:58,800
so this is the case where you know the

2465
01:43:58,800 --> 01:44:00,800
semantics and the definitions

2466
01:44:00,800 --> 01:44:03,760
matter do matter but you know because of

2467
01:44:03,760 --> 01:44:04,159
the

2468
01:44:04,159 --> 01:44:07,440
conflicting specs that we have right now

2469
01:44:07,440 --> 01:44:08,880
you cannot really tell what this guy

2470
01:44:08,880 --> 01:44:10,880
should do with the library

2471
01:44:10,880 --> 01:44:13,760
uh and this is just one case so uh this

2472
01:44:13,760 --> 01:44:14,000
is

2473
01:44:14,000 --> 01:44:16,719
one case spotted by brian carpenter

2474
01:44:16,719 --> 01:44:18,639
there might be others okay

2475
01:44:18,639 --> 01:44:21,040
i don't think there are any but you know

2476
01:44:21,040 --> 01:44:21,840
you do have

2477
01:44:21,840 --> 01:44:25,280
also macros you know uh that you can

2478
01:44:25,280 --> 01:44:27,119
use in the you know when you when you

2479
01:44:27,119 --> 01:44:29,280
code in c to check some things as far as

2480
01:44:29,280 --> 01:44:31,199
remember there's no marker that'll check

2481
01:44:31,199 --> 01:44:32,960
for this but there might be

2482
01:44:32,960 --> 01:44:36,000
in the future and then again you need to

2483
01:44:36,000 --> 01:44:37,600
be able to tell you know what's global

2484
01:44:37,600 --> 01:44:39,119
and what's not

2485
01:44:39,119 --> 01:44:41,679
next slide

2486
01:44:42,960 --> 01:44:45,840
so this is what our document proposes

2487
01:44:45,840 --> 01:44:46,560
okay

2488
01:44:46,560 --> 01:44:48,480
uh so this is when you know first

2489
01:44:48,480 --> 01:44:50,639
version of the document this is what we

2490
01:44:50,639 --> 01:44:52,400
know what we propose to do essentially

2491
01:44:52,400 --> 01:44:53,679
what we said is

2492
01:44:53,679 --> 01:44:56,719
the easiest way to do it is to simply

2493
01:44:56,719 --> 01:44:59,600
you know update 4291 in the part that

2494
01:44:59,600 --> 01:45:00,320
says

2495
01:45:00,320 --> 01:45:03,040
just specify the ela prefix because

2496
01:45:03,040 --> 01:45:04,400
right now what you have is like

2497
01:45:04,400 --> 01:45:07,199
you have a lot of listed prefixes and

2498
01:45:07,199 --> 01:45:09,760
what 4291 says is that well

2499
01:45:09,760 --> 01:45:12,320
at least otherwise noted the addresses

2500
01:45:12,320 --> 01:45:13,360
are global scope

2501
01:45:13,360 --> 01:45:15,600
that's what they expect says and since

2502
01:45:15,600 --> 01:45:17,119
it doesn't you know have anything

2503
01:45:17,119 --> 01:45:19,280
special about the ula prefix by default

2504
01:45:19,280 --> 01:45:20,239
they're global

2505
01:45:20,239 --> 01:45:22,560
so what we say is that you know update

2506
01:45:22,560 --> 01:45:25,360
4291 in the sense that now you mark the

2507
01:45:25,360 --> 01:45:27,440
ula prefix as something else

2508
01:45:27,440 --> 01:45:29,040
what you want to call it i don't care

2509
01:45:29,040 --> 01:45:30,800
about the name could be private

2510
01:45:30,800 --> 01:45:33,199
addresses domain local addresses

2511
01:45:33,199 --> 01:45:35,040
whatever i mean for me the name doesn't

2512
01:45:35,040 --> 01:45:37,199
matter like no it's for the working

2513
01:45:37,199 --> 01:45:38,000
group to

2514
01:45:38,000 --> 01:45:41,119
to select that um then

2515
01:45:41,119 --> 01:45:45,600
uh you know since there is text in 4193

2516
01:45:45,600 --> 01:45:49,440
that essentially claims that ulas are um

2517
01:45:49,440 --> 01:45:52,000
are global scope this is the update that

2518
01:45:52,000 --> 01:45:53,840
would be necessary you know in in

2519
01:45:53,840 --> 01:45:57,360
the day for 42.91 is like a one-liner

2520
01:45:57,360 --> 01:45:59,440
when you have the list of prefixes you

2521
01:45:59,440 --> 01:46:01,840
just add the ula prefix and you say this

2522
01:46:01,840 --> 01:46:02,320
is

2523
01:46:02,320 --> 01:46:04,719
something else scope something else

2524
01:46:04,719 --> 01:46:05,440
address type

2525
01:46:05,440 --> 01:46:08,239
whatever whatever name you want to use

2526
01:46:08,239 --> 01:46:09,159
for

2527
01:46:09,159 --> 01:46:12,000
4193 there is a bar in which talks about

2528
01:46:12,000 --> 01:46:14,400
ulas being global scope so the fix is

2529
01:46:14,400 --> 01:46:15,040
simple

2530
01:46:15,040 --> 01:46:17,199
uh and is the text that we have here

2531
01:46:17,199 --> 01:46:19,199
essentially saying that whatever term

2532
01:46:19,199 --> 01:46:23,760
that we use to define the scope in 4291

2533
01:46:23,760 --> 01:46:25,440
we would reuse that term here for

2534
01:46:25,440 --> 01:46:27,199
example the scope of these addresses

2535
01:46:27,199 --> 01:46:29,600
is local and how do you find the score

2536
01:46:29,600 --> 01:46:31,600
well larger than link local and smaller

2537
01:46:31,600 --> 01:46:33,280
than global it's something in between

2538
01:46:33,280 --> 01:46:35,440
you don't really know where you know the

2539
01:46:35,440 --> 01:46:37,520
scope ends because you can't

2540
01:46:37,520 --> 01:46:40,560
you can't and the

2541
01:46:40,560 --> 01:46:43,119
all the other thing that is uh necessary

2542
01:46:43,119 --> 01:46:44,800
is that in the ayanna

2543
01:46:44,800 --> 01:46:47,119
ipv6 special special purpose address

2544
01:46:47,119 --> 01:46:47,920
registry

2545
01:46:47,920 --> 01:46:49,760
you know where you have like essentially

2546
01:46:49,760 --> 01:46:51,920
pointers to rfcs

2547
01:46:51,920 --> 01:46:53,920
uh you know that explain the different

2548
01:46:53,920 --> 01:46:55,679
others types essentially

2549
01:46:55,679 --> 01:46:58,560
have the entry that describes ula

2550
01:46:58,560 --> 01:46:59,360
utilize

2551
01:46:59,360 --> 01:47:08,320
pointing to this document uh next slide

2552
01:47:08,320 --> 01:47:10,639
so these are among the you know the

2553
01:47:10,639 --> 01:47:11,760
possible options

2554
01:47:11,760 --> 01:47:14,800
um first option is you know

2555
01:47:14,800 --> 01:47:16,960
adopt this document as a working group

2556
01:47:16,960 --> 01:47:18,080
item

2557
01:47:18,080 --> 01:47:21,760
in the hopes of working or trying to fix

2558
01:47:21,760 --> 01:47:24,480
you know the the the ambiguity for

2559
01:47:24,480 --> 01:47:26,639
example in the way that we are trying to

2560
01:47:26,639 --> 01:47:29,679
you know to fix it in our document

2561
01:47:29,679 --> 01:47:31,840
uh but there are other options i

2562
01:47:31,840 --> 01:47:33,440
obviously i have a preference for the

2563
01:47:33,440 --> 01:47:34,400
first one

2564
01:47:34,400 --> 01:47:36,159
another option would be okay okay if

2565
01:47:36,159 --> 01:47:38,000
there are conflicting definitions

2566
01:47:38,000 --> 01:47:40,159
like uh you could for example we could

2567
01:47:40,159 --> 01:47:41,520
for example do a

2568
01:47:41,520 --> 01:47:44,800
4007 bs uh there are other things to be

2569
01:47:44,800 --> 01:47:45,600
fixed there

2570
01:47:45,600 --> 01:47:47,440
and those have been you know discussed

2571
01:47:47,440 --> 01:47:48,880
on the mailing list

2572
01:47:48,880 --> 01:47:53,040
um but you know if you want to keep the

2573
01:47:53,040 --> 01:47:54,639
same definitions for

2574
01:47:54,639 --> 01:47:57,760
ulas like claim that ulas are

2575
01:47:57,760 --> 01:48:00,960
a global you know you'd end up

2576
01:48:00,960 --> 01:48:04,400
we would end up you know changing 4007

2577
01:48:04,400 --> 01:48:07,360
and we would you know come we will have

2578
01:48:07,360 --> 01:48:09,360
to come up with a definition of

2579
01:48:09,360 --> 01:48:12,080
uh global that i would say would be

2580
01:48:12,080 --> 01:48:13,840
quite interesting

2581
01:48:13,840 --> 01:48:17,040
so you know yeah i mean

2582
01:48:17,040 --> 01:48:18,800
you can change the definition but you

2583
01:48:18,800 --> 01:48:20,320
know i think that

2584
01:48:20,320 --> 01:48:22,639
not the only definition that would you

2585
01:48:22,639 --> 01:48:24,040
know fix this would be

2586
01:48:24,040 --> 01:48:26,239
counterintuitive to what you expect you

2587
01:48:26,239 --> 01:48:28,480
know global scope to mean

2588
01:48:28,480 --> 01:48:31,040
then obviously there's always the option

2589
01:48:31,040 --> 01:48:32,080
of do nothing

2590
01:48:32,080 --> 01:48:35,360
okay um i personally think that that's

2591
01:48:35,360 --> 01:48:36,080
not uh

2592
01:48:36,080 --> 01:48:38,880
you know attracted uh you know if this

2593
01:48:38,880 --> 01:48:41,280
was something that you know was like um

2594
01:48:41,280 --> 01:48:43,360
let's say conflicting definition in i

2595
01:48:43,360 --> 01:48:46,080
in ipv4 you might say okay well we are

2596
01:48:46,080 --> 01:48:48,000
supposed to you know get rid of you know

2597
01:48:48,000 --> 01:48:48,800
ipv4

2598
01:48:48,800 --> 01:48:50,880
well at least we have the hope for that

2599
01:48:50,880 --> 01:48:52,480
but um

2600
01:48:52,480 --> 01:48:55,199
but in the case of ipv6 i guess we all

2601
01:48:55,199 --> 01:48:55,920
expect

2602
01:48:55,920 --> 01:48:58,800
it to be around for quite some time so i

2603
01:48:58,800 --> 01:49:00,320
don't think that of you know

2604
01:49:00,320 --> 01:49:01,920
having something that is conflicted and

2605
01:49:01,920 --> 01:49:04,159
that you cannot really point people like

2606
01:49:04,159 --> 01:49:04,880
you cannot

2607
01:49:04,880 --> 01:49:07,280
refer people to to actually better

2608
01:49:07,280 --> 01:49:08,480
understand that the

2609
01:49:08,480 --> 01:49:10,639
the topic is like you know it's an you

2610
01:49:10,639 --> 01:49:12,239
know an acceptable way out

2611
01:49:12,239 --> 01:49:14,400
like i would have liked it in that case

2612
01:49:14,400 --> 01:49:16,320
where i had the discussion to point

2613
01:49:16,320 --> 01:49:18,960
to to tell people okay well go and read

2614
01:49:18,960 --> 01:49:19,360
this

2615
01:49:19,360 --> 01:49:21,199
this and this document and everything

2616
01:49:21,199 --> 01:49:23,840
will be clear now if i had done so

2617
01:49:23,840 --> 01:49:25,440
well they would have probably came up

2618
01:49:25,440 --> 01:49:27,679
with this like well what you

2619
01:49:27,679 --> 01:49:29,520
know told me to read doesn't make a lot

2620
01:49:29,520 --> 01:49:30,960
of sense so

2621
01:49:30,960 --> 01:49:34,960
this is for the working group to discuss

2622
01:49:40,639 --> 01:49:44,159
okay jen go ahead

2623
01:49:45,280 --> 01:49:49,440
hello hernandez i have a few comments

2624
01:49:49,440 --> 01:49:53,119
first of all i kind of still do not see

2625
01:49:53,119 --> 01:49:53,840
the

2626
01:49:53,840 --> 01:49:56,719
real problems there because i think what

2627
01:49:56,719 --> 01:49:58,159
we're talking about here

2628
01:49:58,159 --> 01:50:01,599
is a different way to interpret

2629
01:50:01,599 --> 01:50:04,320
a couple of rfc because i believe the

2630
01:50:04,320 --> 01:50:05,280
uas

2631
01:50:05,280 --> 01:50:08,159
are absolutely unique if they use

2632
01:50:08,159 --> 01:50:09,199
properties

2633
01:50:09,199 --> 01:50:12,320
the same way normal global addresses

2634
01:50:12,320 --> 01:50:14,719
are uniquely used properly because i see

2635
01:50:14,719 --> 01:50:16,080
people just using

2636
01:50:16,080 --> 01:50:18,080
random addresses assigned to other

2637
01:50:18,080 --> 01:50:19,199
companies and

2638
01:50:19,199 --> 01:50:21,599
you can imagine their network right in

2639
01:50:21,599 --> 01:50:23,840
this case we cannot call any address you

2640
01:50:23,840 --> 01:50:24,880
need because

2641
01:50:24,880 --> 01:50:27,040
it's actually could be an application if

2642
01:50:27,040 --> 01:50:27,920
someone

2643
01:50:27,920 --> 01:50:31,840
does the wrong thing right also i don't

2644
01:50:31,840 --> 01:50:35,520
ever expect to get 10 000 network fusion

2645
01:50:35,520 --> 01:50:38,320
uls interconnected right the

2646
01:50:38,320 --> 01:50:40,639
probability of being unique are rather

2647
01:50:40,639 --> 01:50:41,760
high

2648
01:50:41,760 --> 01:50:45,440
in the expected use case i don't think

2649
01:50:45,440 --> 01:50:46,960
it's a real problem

2650
01:50:46,960 --> 01:50:49,599
and again i do not think that existence

2651
01:50:49,599 --> 01:50:50,000
of

2652
01:50:50,000 --> 01:50:52,480
one library we probably could be fixed

2653
01:50:52,480 --> 01:50:54,159
and as discussed in the chat brian

2654
01:50:54,159 --> 01:50:55,840
actually has suggested

2655
01:50:55,840 --> 01:50:59,119
ways to fix it should be a reason to

2656
01:50:59,119 --> 01:51:01,520
do such a drastical change and now let's

2657
01:51:01,520 --> 01:51:02,880
explain why i think that

2658
01:51:02,880 --> 01:51:05,040
we shouldn't change the scope if we

2659
01:51:05,040 --> 01:51:06,320
change the scope

2660
01:51:06,320 --> 01:51:08,639
we will get a problem with scoped

2661
01:51:08,639 --> 01:51:09,920
address architecture

2662
01:51:09,920 --> 01:51:12,639
when i use my ula source to reach the

2663
01:51:12,639 --> 01:51:13,440
global

2664
01:51:13,440 --> 01:51:16,480
destination looks like i cannot because

2665
01:51:16,480 --> 01:51:19,760
the router is not supposed to forward it

2666
01:51:19,760 --> 01:51:22,639
because now the scope of the source

2667
01:51:22,639 --> 01:51:23,840
address

2668
01:51:23,840 --> 01:51:25,840
will be less than the scope of

2669
01:51:25,840 --> 01:51:27,520
destination and the packet will leave

2670
01:51:27,520 --> 01:51:29,040
the zone

2671
01:51:29,040 --> 01:51:31,280
so i and i suspect there are plenty of

2672
01:51:31,280 --> 01:51:34,080
use cases

2673
01:51:34,080 --> 01:51:37,760
people might use the ula source to read

2674
01:51:37,760 --> 01:51:39,520
global destinations i think it's a kind

2675
01:51:39,520 --> 01:51:41,280
of dangerous change you propose

2676
01:51:41,280 --> 01:51:44,800
yeah two

2677
01:51:44,800 --> 01:51:47,520
two comments uh about that like um i

2678
01:51:47,520 --> 01:51:48,000
obviously

2679
01:51:48,000 --> 01:51:50,080
i agree with you that you wouldn't end

2680
01:51:50,080 --> 01:51:52,320
up interconnecting more than 10 000

2681
01:51:52,320 --> 01:51:54,320
ula networks probably i would say that

2682
01:51:54,320 --> 01:51:55,599
you wouldn't you

2683
01:51:55,599 --> 01:51:57,520
you wouldn't even interconnect like a

2684
01:51:57,520 --> 01:51:59,440
hundred of them most likely okay not

2685
01:51:59,440 --> 01:52:01,199
even let alone ten thousand

2686
01:52:01,199 --> 01:52:02,960
what i'm saying is that what the

2687
01:52:02,960 --> 01:52:04,560
definition says

2688
01:52:04,560 --> 01:52:07,599
okay is that they still need to be if

2689
01:52:07,599 --> 01:52:08,800
it's global scope

2690
01:52:08,800 --> 01:52:11,040
global implies the whole internet then

2691
01:52:11,040 --> 01:52:12,480
if you connect them or not that's a

2692
01:52:12,480 --> 01:52:13,679
different question

2693
01:52:13,679 --> 01:52:14,960
i agree with you that you wouldn't

2694
01:52:14,960 --> 01:52:16,639
interconnect them but the definition

2695
01:52:16,639 --> 01:52:18,480
says that if you claim that something is

2696
01:52:18,480 --> 01:52:19,599
global scope

2697
01:52:19,599 --> 01:52:21,199
whether you interconnect them or not

2698
01:52:21,199 --> 01:52:22,800
that's a different issue you could block

2699
01:52:22,800 --> 01:52:23,760
them there's a lot of things that you

2700
01:52:23,760 --> 01:52:24,320
could do

2701
01:52:24,320 --> 01:52:27,040
but what the definition says is unique

2702
01:52:27,040 --> 01:52:28,080
internet-wide

2703
01:52:28,080 --> 01:52:30,159
for global scope that's one of that's in

2704
01:52:30,159 --> 01:52:31,679
one of the previous slide that i

2705
01:52:31,679 --> 01:52:32,320
discussed

2706
01:52:32,320 --> 01:52:35,199
it doesn't say global scope is unique in

2707
01:52:35,199 --> 01:52:37,040
the area where you decide to use it

2708
01:52:37,040 --> 01:52:37,440
that's

2709
01:52:37,440 --> 01:52:40,560
different so i agree with what you say

2710
01:52:40,560 --> 01:52:41,199
but what i'm

2711
01:52:41,199 --> 01:52:42,480
what i'm saying is that the formal

2712
01:52:42,480 --> 01:52:44,480
definition doesn't agree with what

2713
01:52:44,480 --> 01:52:45,119
you're saying

2714
01:52:45,119 --> 01:52:47,520
global implies the whole internet not

2715
01:52:47,520 --> 01:52:50,960
where you decide to use it

2716
01:52:52,400 --> 01:52:54,159
that's the formal definition of global

2717
01:52:54,159 --> 01:52:56,320
scope only can we go back a

2718
01:52:56,320 --> 01:52:59,280
few slides i think it's like why don't

2719
01:52:59,280 --> 01:52:59,679
we

2720
01:52:59,679 --> 01:53:03,199
yeah fernando why don't we get the other

2721
01:53:03,199 --> 01:53:06,880
people in the queue yeah please

2722
01:53:06,880 --> 01:53:11,040
fred yeah thanks for the presentation

2723
01:53:11,040 --> 01:53:12,320
fernando um

2724
01:53:12,320 --> 01:53:14,320
i just wanted to point out that in

2725
01:53:14,320 --> 01:53:15,840
addition to llas

2726
01:53:15,840 --> 01:53:19,760
ulas and guas we also have host identity

2727
01:53:19,760 --> 01:53:21,040
tags hits

2728
01:53:21,040 --> 01:53:24,639
from rsc 7401 and they are

2729
01:53:24,639 --> 01:53:27,119
more preferable than ulas in some cases

2730
01:53:27,119 --> 01:53:28,719
but less preferable

2731
01:53:28,719 --> 01:53:31,679
than a true gua in other cases can we

2732
01:53:31,679 --> 01:53:35,599
somehow fit that into the hierarchy

2733
01:53:35,760 --> 01:53:38,560
well definitely um you know i think it

2734
01:53:38,560 --> 01:53:39,440
was

2735
01:53:39,440 --> 01:53:42,000
david farmer that he also writes it not

2736
01:53:42,000 --> 01:53:43,679
just the case that you rise but even

2737
01:53:43,679 --> 01:53:44,719
other ones

2738
01:53:44,719 --> 01:53:47,119
so definitely yes there are other cases

2739
01:53:47,119 --> 01:53:48,320
so in this

2740
01:53:48,320 --> 01:53:50,159
this is the one that you know the the

2741
01:53:50,159 --> 01:53:51,599
one that you know popped up

2742
01:53:51,599 --> 01:53:53,920
the the issue but i do agree with you

2743
01:53:53,920 --> 01:53:56,320
that there are other cases that you know

2744
01:53:56,320 --> 01:54:00,000
most likely follow the same the same

2745
01:54:06,840 --> 01:54:09,840
principle

2746
01:54:09,920 --> 01:54:13,760
well i think you're muted or something

2747
01:54:15,040 --> 01:54:16,560
ah bob you're in the queue that was the

2748
01:54:16,560 --> 01:54:18,639
only thing i can do

2749
01:54:18,639 --> 01:54:22,320
all right so um thank you um

2750
01:54:22,320 --> 01:54:25,199
so i'm i'm one of the authors of the ula

2751
01:54:25,199 --> 01:54:26,159
spec

2752
01:54:26,159 --> 01:54:29,280
um so i'm speaking in that regard i

2753
01:54:29,280 --> 01:54:30,159
actually

2754
01:54:30,159 --> 01:54:32,560
don't agree with the with fernando's

2755
01:54:32,560 --> 01:54:34,239
proposal here i think

2756
01:54:34,239 --> 01:54:36,480
the spec is actually fairly clear about

2757
01:54:36,480 --> 01:54:38,800
the the level of uniqueness

2758
01:54:38,800 --> 01:54:41,199
and it's also very clear about the way

2759
01:54:41,199 --> 01:54:43,920
ulas are intended to be used and i'm not

2760
01:54:43,920 --> 01:54:45,360
hearing any kind of

2761
01:54:45,360 --> 01:54:48,320
operational problem that this is causing

2762
01:54:48,320 --> 01:54:49,040
i think this

2763
01:54:49,040 --> 01:54:52,639
is uh um i'm not sure if i want to use

2764
01:54:52,639 --> 01:54:53,199
the

2765
01:54:53,199 --> 01:54:56,400
an academic issue but i

2766
01:54:56,400 --> 01:55:00,719
don't think this is worth um the benefit

2767
01:55:00,719 --> 01:55:02,800
i think of changing anything here is

2768
01:55:02,800 --> 01:55:04,000
very small

2769
01:55:04,000 --> 01:55:06,719
and it potentially also does harm in

2770
01:55:06,719 --> 01:55:07,840
that it's

2771
01:55:07,840 --> 01:55:10,080
going to maybe cause more confusion than

2772
01:55:10,080 --> 01:55:12,400
there is now about this

2773
01:55:12,400 --> 01:55:15,040
and just to nitpick a little bit i think

2774
01:55:15,040 --> 01:55:15,920
the

2775
01:55:15,920 --> 01:55:18,960
the birthday para paradox

2776
01:55:18,960 --> 01:55:21,520
analysis isn't quite right because the

2777
01:55:21,520 --> 01:55:22,560
intention of like

2778
01:55:22,560 --> 01:55:24,320
when you you know the draft talk the

2779
01:55:24,320 --> 01:55:26,400
document the rfc talks about

2780
01:55:26,400 --> 01:55:30,159
how you might use this in vpns between

2781
01:55:30,159 --> 01:55:31,119
some number of

2782
01:55:31,119 --> 01:55:34,719
say enterprise sites and and to do that

2783
01:55:34,719 --> 01:55:36,560
you would

2784
01:55:36,560 --> 01:55:39,920
get your your isps to coordinate

2785
01:55:39,920 --> 01:55:42,000
advertising prefixes there was never

2786
01:55:42,000 --> 01:55:45,199
intent that the prefixes could be

2787
01:55:45,199 --> 01:55:49,679
would be routed globally everywhere like

2788
01:55:49,679 --> 01:55:52,960
rar based prefixes are so the chance of

2789
01:55:52,960 --> 01:55:53,760
a collision

2790
01:55:53,760 --> 01:55:57,280
is is practically

2791
01:55:57,280 --> 01:56:00,719
zero so i i'm not sure i'm not hearing

2792
01:56:00,719 --> 01:56:01,599
any kind of

2793
01:56:01,599 --> 01:56:04,719
problem that i i think is worth solving

2794
01:56:04,719 --> 01:56:09,119
thank you thank you um

2795
01:56:09,119 --> 01:56:12,639
yeah well okay go on finally here quick

2796
01:56:12,639 --> 01:56:15,360
see so the the comment is that um so

2797
01:56:15,360 --> 01:56:15,679
this

2798
01:56:15,679 --> 01:56:18,400
is the this slide is where we you know

2799
01:56:18,400 --> 01:56:19,280
they have the

2800
01:56:19,280 --> 01:56:21,840
the definitions that we are referring to

2801
01:56:21,840 --> 01:56:24,000
so i agree with that you say that okay

2802
01:56:24,000 --> 01:56:25,040
within the scope

2803
01:56:25,040 --> 01:56:27,679
or within the area not let's not stop

2804
01:56:27,679 --> 01:56:29,280
let's not say scope because that's a

2805
01:56:29,280 --> 01:56:31,840
formal definition if you say within the

2806
01:56:31,840 --> 01:56:34,239
area that i would end up using the ulas

2807
01:56:34,239 --> 01:56:35,599
they are going to be unique

2808
01:56:35,599 --> 01:56:38,320
agreed fully agree with that now the way

2809
01:56:38,320 --> 01:56:40,639
in which 4007 defines scope

2810
01:56:40,639 --> 01:56:43,040
is like this and global scope means the

2811
01:56:43,040 --> 01:56:44,239
whole internet

2812
01:56:44,239 --> 01:56:47,360
not where you decide to use them

2813
01:56:47,360 --> 01:56:49,040
that's what i'm referring to now if you

2814
01:56:49,040 --> 01:56:51,440
say okay this is uh you know

2815
01:56:51,440 --> 01:56:54,000
let's say an academic definition i mean

2816
01:56:54,000 --> 01:56:56,000
in a way yes but you know architecture

2817
01:56:56,000 --> 01:56:57,360
is academic if you want

2818
01:56:57,360 --> 01:56:59,199
you know doing an architectural document

2819
01:56:59,199 --> 01:57:01,360
is academic and then

2820
01:57:01,360 --> 01:57:03,840
there are implications like there's the

2821
01:57:03,840 --> 01:57:05,920
python library example that i mentioned

2822
01:57:05,920 --> 01:57:11,840
is it okay should them fix it and why

2823
01:57:14,800 --> 01:57:17,520
thanks fernando um mike you uh you have

2824
01:57:17,520 --> 01:57:19,599
the next and then we have uh

2825
01:57:19,599 --> 01:57:22,239
eric to end today um mike please go

2826
01:57:22,239 --> 01:57:23,280
ahead

2827
01:57:23,280 --> 01:57:25,119
okay thank you michael ackerman again

2828
01:57:25,119 --> 01:57:26,560
and again from the

2829
01:57:26,560 --> 01:57:29,920
enterprises perspective we're wrestling

2830
01:57:29,920 --> 01:57:32,400
with deploying of ipv6 now

2831
01:57:32,400 --> 01:57:34,480
one of our issues is what do we do for

2832
01:57:34,480 --> 01:57:36,239
situations where we currently use

2833
01:57:36,239 --> 01:57:39,199
1918 dresses for various reasons and we

2834
01:57:39,199 --> 01:57:39,840
think

2835
01:57:39,840 --> 01:57:41,360
that euless could be a good answer there

2836
01:57:41,360 --> 01:57:43,199
but quite frankly we don't understand

2837
01:57:43,199 --> 01:57:44,960
them and what the scope is and

2838
01:57:44,960 --> 01:57:46,800
like one of fernando's slides said we

2839
01:57:46,800 --> 01:57:48,560
come out somewhere between link local

2840
01:57:48,560 --> 01:57:49,040
and

2841
01:57:49,040 --> 01:57:51,520
the entire internet if this document

2842
01:57:51,520 --> 01:57:53,119
could lend clarity to that that would

2843
01:57:53,119 --> 01:57:55,119
help us out a lot in terms of getting

2844
01:57:55,119 --> 01:57:56,960
deployment

2845
01:57:56,960 --> 01:57:58,960
i'm afraid i'm in support but thank you

2846
01:57:58,960 --> 01:58:00,480
fernando

2847
01:58:00,480 --> 01:58:03,679
thank you okay eric

2848
01:58:03,679 --> 01:58:06,400
you have the last word for the sixth man

2849
01:58:06,400 --> 01:58:06,800
in

2850
01:58:06,800 --> 01:58:09,920
uh prague

2851
01:58:10,960 --> 01:58:13,199
a virtual frog uh yeah i just wanted to

2852
01:58:13,199 --> 01:58:14,159
say that the um

2853
01:58:14,159 --> 01:58:17,040
the python library goes back to i think

2854
01:58:17,040 --> 01:58:17,360
some

2855
01:58:17,360 --> 01:58:20,639
very early ip address library work uh

2856
01:58:20,639 --> 01:58:23,840
around 2008 or nine at google by various

2857
01:58:23,840 --> 01:58:24,800
folks

2858
01:58:24,800 --> 01:58:26,880
so it's pretty you know some of that

2859
01:58:26,880 --> 01:58:28,080
stuff's pretty old

2860
01:58:28,080 --> 01:58:30,960
uh and also um you know brian

2861
01:58:30,960 --> 01:58:32,400
carpenter's draft

2862
01:58:32,400 --> 01:58:35,440
uh about uh what does global mean

2863
01:58:35,440 --> 01:58:36,719
talks about some of this stuff but i

2864
01:58:36,719 --> 01:58:37,920
think you know the difference between

2865
01:58:37,920 --> 01:58:39,760
global addressing and global routing is

2866
01:58:39,760 --> 01:58:42,880
is a key realization and that ip address

2867
01:58:42,880 --> 01:58:44,000
library

2868
01:58:44,000 --> 01:58:46,960
uh did not uh at the time take any of

2869
01:58:46,960 --> 01:58:48,159
that into consideration

2870
01:58:48,159 --> 01:58:51,119
it was uh you know meant simply to try

2871
01:58:51,119 --> 01:58:51,760
to

2872
01:58:51,760 --> 01:58:53,760
disambiguate clearly global addresses

2873
01:58:53,760 --> 01:58:54,960
from other things

2874
01:58:54,960 --> 01:58:58,719
so and and also the the temptation to

2875
01:58:58,719 --> 01:59:02,960
try to map ulas onto rfc 1918 uh

2876
01:59:02,960 --> 01:59:04,639
may have been present and it's you know

2877
01:59:04,639 --> 01:59:06,719
that that mapping is imprecise

2878
01:59:06,719 --> 01:59:10,719
so uh just y'all for the record

2879
01:59:10,719 --> 01:59:13,440
i it's not that i'm suggesting that uh

2880
01:59:13,440 --> 01:59:15,599
you know the scope of ulas is mapped to

2881
01:59:15,599 --> 01:59:17,520
that of 1918

2882
01:59:17,520 --> 01:59:20,080
i'm just saying that based on this slide

2883
01:59:20,080 --> 01:59:21,599
that we have here

2884
01:59:21,599 --> 01:59:23,760
uh based on this definition you know it

2885
01:59:23,760 --> 01:59:25,679
cannot be claimed that your laser global

2886
01:59:25,679 --> 01:59:26,800
that that's it

2887
01:59:26,800 --> 01:59:28,719
what you know i think that the attack

2888
01:59:28,719 --> 01:59:30,000
has that is private

2889
01:59:30,000 --> 01:59:32,560
flag right and that's you know clearly

2890
01:59:32,560 --> 01:59:34,880
applicable to rfc 1918

2891
01:59:34,880 --> 01:59:38,239
um was probably extended because

2892
01:59:38,239 --> 01:59:39,599
that was the limit of the understanding

2893
01:59:39,599 --> 01:59:41,520
or that was the the most approximate

2894
01:59:41,520 --> 01:59:44,960
most proximal understanding at the time

2895
01:59:52,000 --> 01:59:54,639
okay thank you fernando i think we are

2896
01:59:54,639 --> 01:59:56,639
done with today's session

2897
01:59:56,639 --> 01:59:58,320
we'll continue on the mailing list i'm

2898
01:59:58,320 --> 02:00:00,800
sure um

2899
02:00:00,800 --> 02:00:03,280
who knows if we meet physically in the

2900
02:00:03,280 --> 02:00:03,840
summer

2901
02:00:03,840 --> 02:00:06,159
probably not but it's uh in san

2902
02:00:06,159 --> 02:00:09,519
francisco time zone i think

2903
02:00:10,000 --> 02:00:11,840
so thank you very much and we'll see you

2904
02:00:11,840 --> 02:00:13,119
on the mailing list

2905
02:00:13,119 --> 02:00:27,839
yes thank you all and see you thank you

