1
00:00:06,560 --> 00:00:07,359
all right

2
00:00:07,359 --> 00:00:10,800
it's 11 o'clock ac you ready to go

3
00:00:10,800 --> 00:00:13,759
i am ready do you want to say anything

4
00:00:13,759 --> 00:00:15,120
you want to introduce john and then i'll

5
00:00:15,120 --> 00:00:17,359
do the status

6
00:00:17,359 --> 00:00:19,680
yeah hi everybody well this is the lsr

7
00:00:19,680 --> 00:00:20,640
working group

8
00:00:20,640 --> 00:00:24,880
and uh uh this is christian hopps and

9
00:00:24,880 --> 00:00:28,320
ac is with me uh i don't know if alvaro

10
00:00:28,320 --> 00:00:28,720
is in

11
00:00:28,720 --> 00:00:30,880
but uh john is here and on wednesday

12
00:00:30,880 --> 00:00:33,120
he'll be our new ad

13
00:00:33,120 --> 00:00:36,800
um and we have a minute taker

14
00:00:36,800 --> 00:00:39,440
and john's said he can do the jabra

15
00:00:39,440 --> 00:00:40,719
scribe duties they're

16
00:00:40,719 --> 00:00:42,719
pretty minimal now with the virtual

17
00:00:42,719 --> 00:00:44,480
setup at least

18
00:00:44,480 --> 00:00:47,920
uh i think that's it

19
00:00:47,920 --> 00:00:51,039
we have a pretty full schedule um

20
00:00:51,039 --> 00:00:55,199
we don't have an agenda do we huh

21
00:00:55,199 --> 00:00:57,039
we don't have an agenda slide do we see

22
00:00:57,039 --> 00:00:58,960
i don't think no we don't i i didn't put

23
00:00:58,960 --> 00:01:00,640
that in there oh well

24
00:01:00,640 --> 00:01:05,840
you can see that in the kodi md um

25
00:01:09,040 --> 00:01:10,799
yeah i got it i got it up on a different

26
00:01:10,799 --> 00:01:13,200
screen i mean

27
00:01:13,200 --> 00:01:17,040
basically i will i'll share it hang on

28
00:01:17,040 --> 00:01:27,840
i can just share the cody the podium

29
00:01:28,960 --> 00:01:33,439
so mirrors and mirrors view

30
00:01:34,560 --> 00:01:38,720
so here's our agenda um

31
00:01:39,200 --> 00:01:42,320
does anybody have any uh bash bashing to

32
00:01:42,320 --> 00:01:43,680
do on this agenda

33
00:01:43,680 --> 00:01:46,560
any changes

34
00:01:47,680 --> 00:01:50,720
we did make a a slight change um

35
00:01:50,720 --> 00:01:52,320
i don't know if people noticed but we

36
00:01:52,320 --> 00:01:54,159
moved bandwidth constraints to the third

37
00:01:54,159 --> 00:01:56,479
slot

38
00:01:58,640 --> 00:02:03,520
instead of in between the vtn and lt

39
00:02:06,840 --> 00:02:08,720
bundles

40
00:02:08,720 --> 00:02:11,920
okay well okay i think we're ready to go

41
00:02:11,920 --> 00:02:13,040
so let me pull back the

42
00:02:13,040 --> 00:02:15,679
other slides

43
00:02:19,599 --> 00:02:22,400
i'm gonna go quick to try and only stop

44
00:02:22,400 --> 00:02:24,160
when there's notable things

45
00:02:24,160 --> 00:02:26,799
next slide

46
00:02:27,360 --> 00:02:29,920
here's the note well i think i'm sure

47
00:02:29,920 --> 00:02:30,959
you've seen it

48
00:02:30,959 --> 00:02:36,160
in other ietf meetings

49
00:02:36,160 --> 00:02:39,200
the gist of it is if you know about any

50
00:02:39,200 --> 00:02:41,760
ipr related to your participation in the

51
00:02:41,760 --> 00:02:43,840
ietf whether it be in a meeting mailing

52
00:02:43,840 --> 00:02:45,200
list or whatever

53
00:02:45,200 --> 00:02:50,160
you are obligated to disclose that ipr

54
00:02:50,160 --> 00:02:52,720
next slide

55
00:02:54,400 --> 00:02:56,480
we haven't had no we didn't have any

56
00:02:56,480 --> 00:02:57,760
rfcs published since

57
00:02:57,760 --> 00:03:01,120
the last meeting next slide

58
00:03:03,680 --> 00:03:05,920
oh i think i missed did you miss one no

59
00:03:05,920 --> 00:03:06,879
you didn't miss one

60
00:03:06,879 --> 00:03:08,560
oh the yang models yeah i tried i

61
00:03:08,560 --> 00:03:09,920
tracked down

62
00:03:09,920 --> 00:03:14,560
uh the yang models um

63
00:03:14,560 --> 00:03:16,560
thanks john for help out on the tunnel

64
00:03:16,560 --> 00:03:18,159
end cap and getting that through so

65
00:03:18,159 --> 00:03:18,800
we'll

66
00:03:18,800 --> 00:03:21,200
we'll we'll the the top draft the tunnel

67
00:03:21,200 --> 00:03:23,920
encapsulations router information draft

68
00:03:23,920 --> 00:03:26,159
will be published along with the tunnel

69
00:03:26,159 --> 00:03:27,519
encounters draft

70
00:03:27,519 --> 00:03:29,120
but on the yang models i tracked that

71
00:03:29,120 --> 00:03:31,440
down and

72
00:03:31,440 --> 00:03:33,760
it's a reference what's blocking us is a

73
00:03:33,760 --> 00:03:34,560
reference

74
00:03:34,560 --> 00:03:38,799
in bfd to the tease yang model

75
00:03:38,799 --> 00:03:40,879
now the teas yang model i wanted to see

76
00:03:40,879 --> 00:03:42,560
how much that brought in that always

77
00:03:42,560 --> 00:03:45,760
also brings in the rsvpte

78
00:03:45,760 --> 00:03:48,720
model so maybe if we can't resolve this

79
00:03:48,720 --> 00:03:51,280
we might ask the bf

80
00:03:51,280 --> 00:03:55,200
d people to separate the mpls module

81
00:03:55,200 --> 00:03:58,560
into a different draft because

82
00:03:58,560 --> 00:04:00,879
it has a number of modules in the in the

83
00:04:00,879 --> 00:04:02,000
model and

84
00:04:02,000 --> 00:04:03,680
that one could be in a different draft

85
00:04:03,680 --> 00:04:05,599
we'll see how long this draws out and

86
00:04:05,599 --> 00:04:07,120
we'll discuss this outside of this

87
00:04:07,120 --> 00:04:08,080
meeting

88
00:04:08,080 --> 00:04:14,480
uh next slide

89
00:04:14,480 --> 00:04:17,199
this hasn't changed i don't think

90
00:04:17,199 --> 00:04:20,238
anybody's really waiting for these that

91
00:04:20,238 --> 00:04:24,160
these uh drafts

92
00:04:24,160 --> 00:04:26,080
i know some people have implemented it

93
00:04:26,080 --> 00:04:27,600
but

94
00:04:27,600 --> 00:04:31,919
this entropy signaling next slide

95
00:04:33,199 --> 00:04:36,400
okay there's some notable things here

96
00:04:36,400 --> 00:04:40,240
first of all on the sr b6

97
00:04:40,240 --> 00:04:44,000
isis draft alvaro had comments

98
00:04:44,000 --> 00:04:47,360
and we need a revised id

99
00:04:47,360 --> 00:04:49,440
id so it'd be good if the offers could

100
00:04:49,440 --> 00:04:51,440
attend that

101
00:04:51,440 --> 00:04:53,840
um

102
00:04:54,840 --> 00:04:58,160
the rfc 5316

103
00:04:58,160 --> 00:05:00,320
bisque draft is just some protocol

104
00:05:00,320 --> 00:05:02,080
maintenance it went

105
00:05:02,080 --> 00:05:05,360
from working group uh document to last

106
00:05:05,360 --> 00:05:08,800
call rather quickly because it's just

107
00:05:08,800 --> 00:05:10,639
removing the restriction that you need

108
00:05:10,639 --> 00:05:12,080
that you can't

109
00:05:12,080 --> 00:05:15,360
use an ip6 only network

110
00:05:15,360 --> 00:05:19,919
and uh prefix originator

111
00:05:19,919 --> 00:05:22,479
i know who's got the pen in that we're

112
00:05:22,479 --> 00:05:23,919
we also gotta

113
00:05:23,919 --> 00:05:27,759
satisfy uh i mean have revised id

114
00:05:27,759 --> 00:05:31,360
for uh alvaro's comments

115
00:05:31,360 --> 00:05:34,479
the next slide

116
00:05:34,639 --> 00:05:36,800
uh i'll just throw out there quick the

117
00:05:36,800 --> 00:05:37,759
the

118
00:05:37,759 --> 00:05:41,840
the rfc 53 16 this is a dual

119
00:05:41,840 --> 00:05:44,160
working blast call but the primary

120
00:05:44,160 --> 00:05:45,360
comments are running in

121
00:05:45,360 --> 00:05:50,639
an artwork here all right thanks yup

122
00:05:50,639 --> 00:05:53,120
yes as always happens with a biz

123
00:05:53,120 --> 00:05:54,400
document

124
00:05:54,400 --> 00:05:57,039
you get comments outside of cleanup

125
00:05:57,039 --> 00:05:58,960
comments outside of uh

126
00:05:58,960 --> 00:06:02,639
what the document was uh rewritten

127
00:06:02,639 --> 00:06:06,080
to remedy and

128
00:06:06,080 --> 00:06:08,319
we're taking at least at least for the

129
00:06:08,319 --> 00:06:09,520
editorial ones

130
00:06:09,520 --> 00:06:11,199
the offers are taking care of those as

131
00:06:11,199 --> 00:06:13,440
well

132
00:06:14,560 --> 00:06:19,199
uh these ones were waiting for uh

133
00:06:19,199 --> 00:06:21,759
uh the first first one worst metric

134
00:06:21,759 --> 00:06:23,840
waiting for ad review

135
00:06:23,840 --> 00:06:26,080
uh flexible algorithm that's gonna be

136
00:06:26,080 --> 00:06:27,759
covered today we're

137
00:06:27,759 --> 00:06:30,000
we're gonna probably do another we're

138
00:06:30,000 --> 00:06:31,199
definitely gonna do another working

139
00:06:31,199 --> 00:06:32,639
group last call

140
00:06:32,639 --> 00:06:35,840
next slide

141
00:06:37,919 --> 00:06:40,240
okay these are the drafts that we

142
00:06:40,240 --> 00:06:42,080
believe ready are ready for working

143
00:06:42,080 --> 00:06:43,759
group last call

144
00:06:43,759 --> 00:06:46,880
a lot of yearing models

145
00:06:46,960 --> 00:06:50,479
the pce offers i'll take another look at

146
00:06:50,479 --> 00:06:51,919
that one see what i think about

147
00:06:51,919 --> 00:06:53,280
whether that's ready for congrats the

148
00:06:53,280 --> 00:07:02,639
last call next slide

149
00:07:02,639 --> 00:07:05,440
dynamic flooding uh this has been around

150
00:07:05,440 --> 00:07:07,280
for a while hasn't been any changes

151
00:07:07,280 --> 00:07:10,560
i know there's at least there's been a

152
00:07:10,560 --> 00:07:11,599
lot of discussion

153
00:07:11,599 --> 00:07:13,039
i think there's some implementations

154
00:07:13,039 --> 00:07:16,319
proceeding we could discuss

155
00:07:16,319 --> 00:07:20,960
be nice with offers uh would

156
00:07:20,960 --> 00:07:22,400
the offers can tell us when if they

157
00:07:22,400 --> 00:07:23,919
think it's ready for working group last

158
00:07:23,919 --> 00:07:25,120
call

159
00:07:25,120 --> 00:07:27,360
i know there are other documents that

160
00:07:27,360 --> 00:07:29,440
are dependent on this one

161
00:07:29,440 --> 00:07:32,160
and there are implementations so it's a

162
00:07:32,160 --> 00:07:33,840
high priority

163
00:07:33,840 --> 00:07:35,759
now the draft below is probably the

164
00:07:35,759 --> 00:07:38,319
highest uh priority

165
00:07:38,319 --> 00:07:40,560
uh the osp extensions for srv6 for a

166
00:07:40,560 --> 00:07:41,759
number of reasons

167
00:07:41,759 --> 00:07:44,240
number one

168
00:07:49,520 --> 00:07:50,960
[Music]

169
00:07:50,960 --> 00:07:53,840
very brave uh question can you hear me

170
00:07:53,840 --> 00:07:55,199
clearly

171
00:07:55,199 --> 00:07:58,800
yes yes uh i noticed that

172
00:07:58,800 --> 00:08:01,840
the status is noted as orders believe

173
00:08:01,840 --> 00:08:04,800
ready for working group last call uh it

174
00:08:04,800 --> 00:08:06,560
means that there is no working group

175
00:08:06,560 --> 00:08:07,680
consensus yet

176
00:08:07,680 --> 00:08:12,800
or it is ready

177
00:08:12,800 --> 00:08:16,319
well the consensus will be

178
00:08:16,319 --> 00:08:18,000
determined during the working group last

179
00:08:18,000 --> 00:08:20,960
call but the offers believe it

180
00:08:20,960 --> 00:08:22,879
it means it means it means either chris

181
00:08:22,879 --> 00:08:24,720
or i have to well chris probably because

182
00:08:24,720 --> 00:08:28,400
i'm an offer on a couple of those

183
00:08:29,039 --> 00:08:31,199
okay we would have to do the working at

184
00:08:31,199 --> 00:08:33,279
do the working group last call in the

185
00:08:33,279 --> 00:08:36,958
and ipr another ipr call

186
00:08:36,958 --> 00:08:39,599
okay i mean also throwing this throwing

187
00:08:39,599 --> 00:08:41,679
this slide up there is a way of

188
00:08:41,679 --> 00:08:44,000
letting people know that we're get you

189
00:08:44,000 --> 00:08:47,360
know the authors believe that right and

190
00:08:47,360 --> 00:08:49,279
if somebody believes it's not ready they

191
00:08:49,279 --> 00:08:54,640
can comment based on this

192
00:08:54,640 --> 00:08:57,600
okay tony is in the queue go ahead yeah

193
00:08:57,600 --> 00:08:58,399
i was just

194
00:08:58,399 --> 00:09:01,519
waiting for uh just

195
00:09:01,519 --> 00:09:04,399
status the flood reaction is implemented

196
00:09:04,399 --> 00:09:06,080
no interoperability

197
00:09:06,080 --> 00:09:09,839
has been done yet

198
00:09:11,680 --> 00:09:14,880
did you catch that i didn't i i think he

199
00:09:14,880 --> 00:09:15,680
said it that

200
00:09:15,680 --> 00:09:17,360
that they've implemented it is that

201
00:09:17,360 --> 00:09:19,279
right tony

202
00:09:19,279 --> 00:09:21,760
yeah i'm fighting here with an ipad

203
00:09:21,760 --> 00:09:22,640
microphone

204
00:09:22,640 --> 00:09:24,959
it's implemented no interoperability

205
00:09:24,959 --> 00:09:26,640
testing yet

206
00:09:26,640 --> 00:09:28,240
okay implemented but no on

207
00:09:28,240 --> 00:09:30,160
interoperability testing

208
00:09:30,160 --> 00:09:34,160
correct okay great

209
00:09:34,839 --> 00:09:37,440
thanks

210
00:09:37,440 --> 00:09:40,959
okay go to the next slide now this next

211
00:09:40,959 --> 00:09:42,320
one

212
00:09:42,320 --> 00:09:46,080
the ospf v3 extensions for srv6

213
00:09:46,080 --> 00:09:49,519
uh i think this hopefully we can get

214
00:09:49,519 --> 00:09:51,200
some priority on this because for one

215
00:09:51,200 --> 00:09:53,040
there's a normative reference to it

216
00:09:53,040 --> 00:09:56,080
in the flex algorithm draft

217
00:09:56,080 --> 00:09:59,680
and number two um

218
00:09:59,680 --> 00:10:02,240
alvaro when he did the isis he said okay

219
00:10:02,240 --> 00:10:03,600
where's the osvf

220
00:10:03,600 --> 00:10:08,079
and uh i it i agree it would be

221
00:10:08,079 --> 00:10:10,720
you know from a efficiency standpoint

222
00:10:10,720 --> 00:10:12,000
would be

223
00:10:12,000 --> 00:10:14,880
uh better to get them done simultaneous

224
00:10:14,880 --> 00:10:15,200
or

225
00:10:15,200 --> 00:10:17,120
at least close to one another so it's

226
00:10:17,120 --> 00:10:20,399
fresh in everybody's mind

227
00:10:21,760 --> 00:10:24,399
let's see i don't think there's anything

228
00:10:24,399 --> 00:10:24,880
else

229
00:10:24,880 --> 00:10:26,240
that we need to talk about on this one

230
00:10:26,240 --> 00:10:28,720
next one

231
00:10:29,360 --> 00:10:33,760
slide please

232
00:10:33,760 --> 00:10:35,360
yeah a lot of these are protocol

233
00:10:35,360 --> 00:10:37,120
maintenance the first two are protocol

234
00:10:37,120 --> 00:10:39,519
maintenance that are in isis and not in

235
00:10:39,519 --> 00:10:42,320
ospf i think there's higher priorities

236
00:10:42,320 --> 00:10:44,079
but

237
00:10:44,079 --> 00:10:48,160
we need to working group last call

238
00:10:48,640 --> 00:10:53,199
at when we can next slide

239
00:10:58,480 --> 00:11:01,600
okay we had a few new working group

240
00:11:01,600 --> 00:11:04,000
documents the second one ipflex tool and

241
00:11:04,000 --> 00:11:04,480
that

242
00:11:04,480 --> 00:11:08,000
algorithms generated a lot of discussion

243
00:11:08,000 --> 00:11:11,440
uh hopefully that'll proceed the tags

244
00:11:11,440 --> 00:11:13,680
draft sort this is somewhat of a

245
00:11:13,680 --> 00:11:16,640
protocol maintenance that we never had

246
00:11:16,640 --> 00:11:17,120
anything

247
00:11:17,120 --> 00:11:19,040
more than tags for external routes and

248
00:11:19,040 --> 00:11:20,160
ospf

249
00:11:20,160 --> 00:11:23,120
until we got to tlv based and this is

250
00:11:23,120 --> 00:11:23,839
going

251
00:11:23,839 --> 00:11:27,120
back and allowing tags for

252
00:11:27,120 --> 00:11:31,120
non-external routes just like we do for

253
00:11:31,120 --> 00:11:33,519
external routes in ospf just like we do

254
00:11:33,519 --> 00:11:36,000
for isis

255
00:11:36,000 --> 00:11:42,560
next slide

256
00:11:42,560 --> 00:11:45,440
these are adoption people people have

257
00:11:45,440 --> 00:11:47,440
requested adoption calls and we think

258
00:11:47,440 --> 00:11:49,360
it's reasonable

259
00:11:49,360 --> 00:11:52,639
uh at least somewhat reasonable we have

260
00:11:52,639 --> 00:11:54,880
uh

261
00:11:54,880 --> 00:11:58,720
uh the flooding speed i think we'll have

262
00:11:58,720 --> 00:12:00,320
more discussion on that in the next

263
00:12:00,320 --> 00:12:01,519
there's been actually been some

264
00:12:01,519 --> 00:12:03,040
discussion between the chairs and the

265
00:12:03,040 --> 00:12:04,240
office and

266
00:12:04,240 --> 00:12:08,560
i think uh there's work going on both

267
00:12:08,560 --> 00:12:11,600
for this one and the transmit

268
00:12:11,600 --> 00:12:14,880
based one there's uh testing work going

269
00:12:14,880 --> 00:12:15,600
on so i

270
00:12:15,600 --> 00:12:18,800
i imagine there'll be some i hope

271
00:12:18,800 --> 00:12:21,600
there'd be some discussion on that uh on

272
00:12:21,600 --> 00:12:23,200
the list and some

273
00:12:23,200 --> 00:12:27,040
uh new testing results as well

274
00:12:27,200 --> 00:12:29,279
i have a comment on this uh but chris

275
00:12:29,279 --> 00:12:32,720
bowers in the queue go ahead chris

276
00:12:32,720 --> 00:12:35,760
uh hi can you hear me okay yes

277
00:12:35,760 --> 00:12:37,839
okay uh could you go back a couple

278
00:12:37,839 --> 00:12:40,560
slides to the

279
00:12:40,560 --> 00:12:45,279
uh dense flooding and dense graphs

280
00:12:47,600 --> 00:12:52,160
uh yeah so i guess was alvaro suggesting

281
00:12:52,160 --> 00:12:55,920
that um so to the comment that

282
00:12:55,920 --> 00:12:59,600
that we should possibly add ospf

283
00:12:59,600 --> 00:13:03,040
extensions to the dense flooding

284
00:13:03,040 --> 00:13:05,440
uh or dynamic flooding and dense graphs

285
00:13:05,440 --> 00:13:06,399
i mean i

286
00:13:06,399 --> 00:13:10,399
i think you understand

287
00:13:10,399 --> 00:13:13,519
no okay he wanted he want

288
00:13:13,519 --> 00:13:15,680
he did the inside he did the review on

289
00:13:15,680 --> 00:13:18,839
the isis srv6 draft and he said where's

290
00:13:18,839 --> 00:13:20,160
ospf

291
00:13:20,160 --> 00:13:22,959
the second ball the second bullet yeah

292
00:13:22,959 --> 00:13:24,399
so if this has nothing

293
00:13:24,399 --> 00:13:26,160
to do with dense flooding other than it

294
00:13:26,160 --> 00:13:29,360
then it precedes it in the slide

295
00:13:29,360 --> 00:13:32,480
or follows okay got it

296
00:13:32,480 --> 00:13:35,519
yeah okay uh okay

297
00:13:35,519 --> 00:13:40,079
thank you welcome um

298
00:13:40,079 --> 00:13:42,079
where where where where are we gonna go

299
00:13:42,079 --> 00:13:43,680
okay uh yeah so

300
00:13:43,680 --> 00:13:46,240
we've been asked by uh bruno a while ago

301
00:13:46,240 --> 00:13:46,880
to

302
00:13:46,880 --> 00:13:48,399
maybe do an adoption on the flooding

303
00:13:48,399 --> 00:13:50,480
speed uh but there's a lot of testing

304
00:13:50,480 --> 00:13:52,160
and stuff going on and you know there's

305
00:13:52,160 --> 00:13:52,560
still

306
00:13:52,560 --> 00:13:54,160
sort of two drafts out there that are

307
00:13:54,160 --> 00:13:56,079
talking about

308
00:13:56,079 --> 00:13:58,079
uh you know the problem is trying to be

309
00:13:58,079 --> 00:13:59,440
solved here

310
00:13:59,440 --> 00:14:01,120
which is really kind of a flow control

311
00:14:01,120 --> 00:14:03,680
problem um

312
00:14:03,680 --> 00:14:07,279
and so uh you know so we're we feel

313
00:14:07,279 --> 00:14:09,440
it you know it makes sense to just the

314
00:14:09,440 --> 00:14:10,560
work's progressing

315
00:14:10,560 --> 00:14:13,839
right and there are different drafts

316
00:14:13,839 --> 00:14:15,839
so i don't know that we need to rush to

317
00:14:15,839 --> 00:14:18,000
adopt one of them

318
00:14:18,000 --> 00:14:20,240
or even both of them until we get more

319
00:14:20,240 --> 00:14:21,680
experience

320
00:14:21,680 --> 00:14:24,480
you know which is uh valuable and and

321
00:14:24,480 --> 00:14:25,360
happening

322
00:14:25,360 --> 00:14:26,880
so that's our that's our thinking on

323
00:14:26,880 --> 00:14:28,560
that one right now

324
00:14:28,560 --> 00:14:31,680
as a working group member i

325
00:14:31,680 --> 00:14:34,560
also think that it would be very cool

326
00:14:34,560 --> 00:14:36,240
since we are talking about flow control

327
00:14:36,240 --> 00:14:37,760
both of these solutions

328
00:14:37,760 --> 00:14:41,279
are trying to work within um

329
00:14:41,279 --> 00:14:42,720
they're trying to work within the

330
00:14:42,720 --> 00:14:45,600
mechanisms existing mechanisms in isis

331
00:14:45,600 --> 00:14:46,240
and some

332
00:14:46,240 --> 00:14:47,680
so there's been objections about you

333
00:14:47,680 --> 00:14:49,279
know tweaking values

334
00:14:49,279 --> 00:14:51,519
on the neighbor you know i'm just

335
00:14:51,519 --> 00:14:53,440
curious also if we're looking at this if

336
00:14:53,440 --> 00:14:56,240
anybody's going to think outside the box

337
00:14:56,240 --> 00:14:58,000
and you know what about just something

338
00:14:58,000 --> 00:14:59,440
totally new

339
00:14:59,440 --> 00:15:02,000
i mean yes somebody did suggest tcp

340
00:15:02,000 --> 00:15:03,760
earlier i think but

341
00:15:03,760 --> 00:15:05,440
uh you know there are this is a flow

342
00:15:05,440 --> 00:15:06,959
control is a well

343
00:15:06,959 --> 00:15:10,079
studied problem so that's just my

344
00:15:10,079 --> 00:15:12,800
two cents there

345
00:15:17,680 --> 00:15:18,880
yeah that sounds really that sounds

346
00:15:18,880 --> 00:15:20,720
reasonable i think as well

347
00:15:20,720 --> 00:15:22,480
i see we have one more in the queue here

348
00:15:22,480 --> 00:15:24,880
we have uh

349
00:15:24,880 --> 00:15:27,839
shusang

350
00:15:30,320 --> 00:15:33,440
one more question here i noticed that

351
00:15:33,440 --> 00:15:36,240
i have seen the young data model for

352
00:15:36,240 --> 00:15:37,120
ease and

353
00:15:37,120 --> 00:15:40,480
ospf as my six several times in the

354
00:15:40,480 --> 00:15:42,079
working group adoption called

355
00:15:42,079 --> 00:15:45,440
cube i'm just wondering

356
00:15:45,440 --> 00:15:48,720
when this will happen at the order of

357
00:15:48,720 --> 00:15:51,839
these two documents

358
00:15:53,519 --> 00:15:55,839
thanks

359
00:16:03,199 --> 00:16:07,120
yeah what was that draft that

360
00:16:07,120 --> 00:16:09,120
was it karidi that had the draft on it

361
00:16:09,120 --> 00:16:11,199
will happen

362
00:16:11,199 --> 00:16:15,920
next uh next ietf or next

363
00:16:15,920 --> 00:16:19,279
next i can't remember it'll i it's on

364
00:16:19,279 --> 00:16:21,199
the priority list of the adoption

365
00:16:21,199 --> 00:16:24,000
so it it's nearing the top of the list

366
00:16:24,000 --> 00:16:26,399
and it's not a controversial draft i

367
00:16:26,399 --> 00:16:27,120
don't think i

368
00:16:27,120 --> 00:16:29,279
i think we should i think we should

369
00:16:29,279 --> 00:16:37,839
adopt these as for protocol maintenance

370
00:16:42,639 --> 00:16:46,320
okay and this is just pointers to these

371
00:16:46,320 --> 00:16:48,720
these documents that are igp documents

372
00:16:48,720 --> 00:16:50,639
lsr documents that are on their working

373
00:16:50,639 --> 00:16:51,279
groups

374
00:16:51,279 --> 00:16:53,360
i pointed out the the second one the

375
00:16:53,360 --> 00:16:54,959
yang model for ms

376
00:16:54,959 --> 00:16:58,399
mpls msd because we moved that

377
00:16:58,399 --> 00:17:01,920
out of the sr yang and into

378
00:17:01,920 --> 00:17:04,880
a separate mpls document because msd is

379
00:17:04,880 --> 00:17:06,079
independent of

380
00:17:06,079 --> 00:17:09,520
sr and that's it let's go to the first

381
00:17:09,520 --> 00:17:13,599
i guess ying zing ying zhang ninjan

382
00:17:13,599 --> 00:17:18,480
i'll get it right do you want to alvaro

383
00:17:18,480 --> 00:17:21,439
yeah hey um hello thunder wrote andy uh

384
00:17:21,439 --> 00:17:22,959
just a quick thing before you go into

385
00:17:22,959 --> 00:17:23,760
the actual

386
00:17:23,760 --> 00:17:27,599
um work i want to

387
00:17:27,599 --> 00:17:31,679
welcome john scutter as the new ad for

388
00:17:31,679 --> 00:17:32,720
lsr

389
00:17:32,720 --> 00:17:34,640
i think uh all of you should probably

390
00:17:34,640 --> 00:17:36,080
know that he

391
00:17:36,080 --> 00:17:39,520
was just selected um a.d

392
00:17:39,520 --> 00:17:42,480
recently he's taken over this week um in

393
00:17:42,480 --> 00:17:43,760
fact i think we made it official that

394
00:17:43,760 --> 00:17:44,480
he's starting

395
00:17:44,480 --> 00:17:48,640
today as s80 um usually the transition

396
00:17:48,640 --> 00:17:50,160
happens on wednesday but you know we

397
00:17:50,160 --> 00:17:53,039
put up all the ids with with ad powers

398
00:17:53,039 --> 00:17:54,160
this week

399
00:17:54,160 --> 00:17:57,360
so john is starting today he's taking

400
00:17:57,360 --> 00:17:59,679
over for me as we reshuffled

401
00:17:59,679 --> 00:18:03,679
the the working groups a little bit

402
00:18:03,679 --> 00:18:05,919
i also want to say thank you to the

403
00:18:05,919 --> 00:18:06,880
working group because

404
00:18:06,880 --> 00:18:10,000
when i took over lsr was when we first

405
00:18:10,000 --> 00:18:13,679
merged isis and ospf

406
00:18:13,679 --> 00:18:16,080
and i think it has been working very

407
00:18:16,080 --> 00:18:17,039
well

408
00:18:17,039 --> 00:18:20,720
um ac had sent me a list the other day

409
00:18:20,720 --> 00:18:22,720
of uh that i don't have with me i

410
00:18:22,720 --> 00:18:24,720
thought you guys might project it here

411
00:18:24,720 --> 00:18:27,280
of all the things that have been done in

412
00:18:27,280 --> 00:18:28,320
the last

413
00:18:28,320 --> 00:18:31,679
i think about three or four years

414
00:18:31,679 --> 00:18:34,400
since lsr has existed and it is a lot of

415
00:18:34,400 --> 00:18:34,960
work

416
00:18:34,960 --> 00:18:38,080
um it is really good

417
00:18:38,080 --> 00:18:40,640
work for the chairs for your shepherding

418
00:18:40,640 --> 00:18:41,520
all this work

419
00:18:41,520 --> 00:18:43,840
it is great that uh to see the working

420
00:18:43,840 --> 00:18:45,280
group engaged

421
00:18:45,280 --> 00:18:47,919
and i think even better that we have

422
00:18:47,919 --> 00:18:48,960
been able to

423
00:18:48,960 --> 00:18:53,200
pull out um the two protocols working

424
00:18:53,200 --> 00:18:56,480
as not as one but but you know close

425
00:18:56,480 --> 00:18:58,080
close to each other and that we see

426
00:18:58,080 --> 00:19:00,080
things progressing in both of them

427
00:19:00,080 --> 00:19:03,039
um so thank you for that and uh welcome

428
00:19:03,039 --> 00:19:04,559
to john he's already doing a lot more

429
00:19:04,559 --> 00:19:06,000
than i did he's already the jabber

430
00:19:06,000 --> 00:19:06,880
scribe

431
00:19:06,880 --> 00:19:10,320
uh this is great thank you so much yeah

432
00:19:10,320 --> 00:19:12,400
alvaro and thank you very much for all

433
00:19:12,400 --> 00:19:15,120
the hard work over the years uh

434
00:19:15,120 --> 00:19:17,600
very in-depth reviews i i don't know how

435
00:19:17,600 --> 00:19:18,880
any av does it

436
00:19:18,880 --> 00:19:21,360
to be honest

437
00:19:22,799 --> 00:19:24,799
thanks chris thanks for the welcome and

438
00:19:24,799 --> 00:19:26,400
i don't know how any ad does it either

439
00:19:26,400 --> 00:19:29,679
but i guess i'm about to find out

440
00:19:33,679 --> 00:19:37,039
okay okay

441
00:19:37,120 --> 00:19:40,559
all right i'm sharing next

442
00:19:46,080 --> 00:19:48,000
this is one thing that's confusing that

443
00:19:48,000 --> 00:19:49,120
it shows up as you're

444
00:19:49,120 --> 00:19:51,280
you're muted but you can talk right

445
00:19:51,280 --> 00:19:52,559
engine

446
00:19:52,559 --> 00:19:55,600
yes i can talk okay hear me right

447
00:19:55,600 --> 00:20:00,080
yep okay so uh this is indian i'm going

448
00:20:00,080 --> 00:20:00,559
to

449
00:20:00,559 --> 00:20:03,360
present an update of ospf transport

450
00:20:03,360 --> 00:20:05,679
instance

451
00:20:05,679 --> 00:20:09,280
next slides please so

452
00:20:09,280 --> 00:20:12,559
what's ospf transport instance

453
00:20:12,559 --> 00:20:15,760
it's a separate ospf instance for

454
00:20:15,760 --> 00:20:19,120
non-routing information dissemination

455
00:20:19,120 --> 00:20:22,159
typical implementation may use lower

456
00:20:22,159 --> 00:20:24,240
priority every package

457
00:20:24,240 --> 00:20:28,400
so normal ospf routing instance gets

458
00:20:28,400 --> 00:20:30,880
better priority during package

459
00:20:30,880 --> 00:20:33,679
transmission and reception

460
00:20:33,679 --> 00:20:36,480
ospf transfer instance supports sparse

461
00:20:36,480 --> 00:20:37,360
topology

462
00:20:37,360 --> 00:20:40,719
with remote neighbor

463
00:20:41,120 --> 00:20:44,320
um that's just a memory refresh

464
00:20:44,320 --> 00:20:47,919
for what's uh ospf transport instance

465
00:20:47,919 --> 00:20:48,720
yeah

466
00:20:48,720 --> 00:20:51,520
so in this new version of the draft we

467
00:20:51,520 --> 00:20:52,240
added

468
00:20:52,240 --> 00:20:57,039
detailed encoding for ospf v2 we propose

469
00:20:57,039 --> 00:20:59,679
a new transport instance information

470
00:20:59,679 --> 00:21:02,159
opaque rsa

471
00:21:02,159 --> 00:21:05,600
this slide shows the package for might

472
00:21:05,600 --> 00:21:09,520
of this tii rsa

473
00:21:09,520 --> 00:21:12,880
depends on the application this new

474
00:21:12,880 --> 00:21:16,000
ti lac can be flooded at

475
00:21:16,000 --> 00:21:19,039
any scope levels link area

476
00:21:19,039 --> 00:21:22,000
or an as

477
00:21:23,919 --> 00:21:27,520
next slide please okay so

478
00:21:27,520 --> 00:21:31,440
for ospf v3

479
00:21:31,440 --> 00:21:34,559
transport instance information rsa is

480
00:21:34,559 --> 00:21:37,840
defined and shown in this slide

481
00:21:37,840 --> 00:21:41,360
same as ospf v2 the flooding scope

482
00:21:41,360 --> 00:21:44,559
is decided by applications it can be at

483
00:21:44,559 --> 00:21:47,600
link area or as level

484
00:21:47,600 --> 00:21:50,080
so the detail packet for might you can

485
00:21:50,080 --> 00:21:51,200
look at the draft

486
00:21:51,200 --> 00:21:55,280
oh it's basically just a new type of

487
00:21:55,280 --> 00:21:56,880
irsa

488
00:21:56,880 --> 00:22:00,000
so next slide please

489
00:22:00,000 --> 00:22:03,440
okay uh for both ospf v2 and v3

490
00:22:03,440 --> 00:22:06,480
we define a top level ti

491
00:22:06,480 --> 00:22:10,880
application trv so the application id

492
00:22:10,880 --> 00:22:15,200
used here is to uniquely identify

493
00:22:15,200 --> 00:22:18,720
an application it's the same as defined

494
00:22:18,720 --> 00:22:22,000
in rfc 6823 the

495
00:22:22,000 --> 00:22:26,559
issg info rfc

496
00:22:26,559 --> 00:22:29,280
so we already received comments from

497
00:22:29,280 --> 00:22:30,240
less

498
00:22:30,240 --> 00:22:33,360
about this application id registry

499
00:22:33,360 --> 00:22:36,400
and we will working with him on updating

500
00:22:36,400 --> 00:22:38,080
the registry make it

501
00:22:38,080 --> 00:22:42,159
icp instead of isis specific

502
00:22:42,159 --> 00:22:45,360
so we think this tlv with a defined

503
00:22:45,360 --> 00:22:48,720
iona application id will make

504
00:22:48,720 --> 00:22:52,039
ospf router application pops up

505
00:22:52,039 --> 00:22:56,080
implementations simpler

506
00:22:56,240 --> 00:22:58,640
then there are additional application

507
00:22:58,640 --> 00:23:01,039
specific sub-trees

508
00:23:01,039 --> 00:23:03,200
that can be used for additional

509
00:23:03,200 --> 00:23:04,320
information

510
00:23:04,320 --> 00:23:06,960
that the detail how those things are

511
00:23:06,960 --> 00:23:07,520
defined

512
00:23:07,520 --> 00:23:11,600
is beyond the scope of this document

513
00:23:11,600 --> 00:23:14,399
next slide please

514
00:23:14,720 --> 00:23:18,080
so this slide is a anna registry

515
00:23:18,080 --> 00:23:22,400
summary so for both ospf 2 v3 transport

516
00:23:22,400 --> 00:23:26,559
instance information rsa and the

517
00:23:26,559 --> 00:23:29,918
tre definitions

518
00:23:32,159 --> 00:23:34,480
so right now we only have this top level

519
00:23:34,480 --> 00:23:36,960
application tre defined

520
00:23:36,960 --> 00:23:39,200
how others are to be defined in the

521
00:23:39,200 --> 00:23:40,720
future

522
00:23:40,720 --> 00:23:43,600
next slide please

523
00:23:44,320 --> 00:23:47,520
next steps we'd like to click on the

524
00:23:47,520 --> 00:23:51,039
address comments and we'd like to

525
00:23:51,039 --> 00:23:54,400
request working group adoption

526
00:23:54,400 --> 00:23:58,320
that's all any questions

527
00:23:58,640 --> 00:24:03,360
linda yeah linda

528
00:24:03,360 --> 00:24:06,559
hello i have a question on your

529
00:24:06,559 --> 00:24:09,200
previous slide i think six or five you

530
00:24:09,200 --> 00:24:10,640
talk about the

531
00:24:10,640 --> 00:24:14,480
application id this one

532
00:24:14,480 --> 00:24:17,360
yeah this one so this application id is

533
00:24:17,360 --> 00:24:17,600
it

534
00:24:17,600 --> 00:24:20,080
end application or is a network

535
00:24:20,080 --> 00:24:22,879
application

536
00:24:23,520 --> 00:24:26,320
what do you mean and application online

537
00:24:26,320 --> 00:24:27,840
this application id

538
00:24:27,840 --> 00:24:31,360
right what is that what's ending

539
00:24:31,360 --> 00:24:34,000
it's an application that wants to use

540
00:24:34,000 --> 00:24:35,440
ospf transport

541
00:24:35,440 --> 00:24:38,480
instance to disseminate the application

542
00:24:38,480 --> 00:24:39,520
information

543
00:24:39,520 --> 00:24:42,000
we don't really care about exactly what

544
00:24:42,000 --> 00:24:43,039
the application

545
00:24:43,039 --> 00:24:46,799
is so does that mean if i have a

546
00:24:46,799 --> 00:24:48,720
specific application

547
00:24:48,720 --> 00:24:51,840
i'm attached to a router i want to

548
00:24:51,840 --> 00:24:54,240
add something into it i can create my

549
00:24:54,240 --> 00:24:57,279
own subtle to be attached

550
00:24:57,279 --> 00:25:01,679
yes how do i tell my attached router i

551
00:25:01,679 --> 00:25:02,320
need this

552
00:25:02,320 --> 00:25:05,120
information like am i just attached to

553
00:25:05,120 --> 00:25:08,400
is the prefix attached to a router

554
00:25:08,400 --> 00:25:11,919
iron scope yeah

555
00:25:11,919 --> 00:25:15,760
right yeah

556
00:25:15,760 --> 00:25:18,799
okay but just just to comment on this

557
00:25:18,799 --> 00:25:20,480
it's really meant for non-routing

558
00:25:20,480 --> 00:25:22,159
information to the transport

559
00:25:22,159 --> 00:25:25,279
instance so

560
00:25:25,279 --> 00:25:28,400
i i guess you could have you you i guess

561
00:25:28,400 --> 00:25:29,200
you could have

562
00:25:29,200 --> 00:25:30,880
you don't mean a prefix you mean an

563
00:25:30,880 --> 00:25:33,840
endpoint for an application i guess

564
00:25:33,840 --> 00:25:39,199
right yeah yes yeah yeah okay do that

565
00:25:41,679 --> 00:25:44,880
okay uma uh hi uh

566
00:25:44,880 --> 00:25:47,919
hi i say thanks can you hear me okay

567
00:25:47,919 --> 00:25:50,799
yes yes yeah yeah so uh i was looking

568
00:25:50,799 --> 00:25:52,080
into the draft and

569
00:25:52,080 --> 00:25:55,279
a possible use cases section uh mic use

570
00:25:55,279 --> 00:25:56,080
case is listed

571
00:25:56,080 --> 00:25:57,840
but you know i really couldn't

572
00:25:57,840 --> 00:26:00,400
understand how network resources can be

573
00:26:00,400 --> 00:26:02,400
given to 5g ue

574
00:26:02,400 --> 00:26:06,000
um so it's very unclear it's i i i don't

575
00:26:06,000 --> 00:26:08,320
see there's a possibility at all

576
00:26:08,320 --> 00:26:10,559
that need to be corrected frankly and

577
00:26:10,559 --> 00:26:11,679
the second thing is

578
00:26:11,679 --> 00:26:15,200
uh there are situations where the

579
00:26:15,200 --> 00:26:18,400
5g code nodes and you know on the

580
00:26:18,400 --> 00:26:21,840
pe can be together like in 4g cases se

581
00:26:21,840 --> 00:26:22,960
gateway

582
00:26:22,960 --> 00:26:26,000
in that case the resources you give the

583
00:26:26,000 --> 00:26:27,520
this network resource information you

584
00:26:27,520 --> 00:26:30,559
give will be useful to the

585
00:26:30,559 --> 00:26:34,640
rest of the network but not even the uh

586
00:26:34,640 --> 00:26:38,000
5g ransack actually frankly so it's far

587
00:26:38,000 --> 00:26:39,279
off to give to ue

588
00:26:39,279 --> 00:26:42,559
so please comment on this and you know

589
00:26:42,559 --> 00:26:45,200
possible are you addressing this to the

590
00:26:45,200 --> 00:26:45,679
5g

591
00:26:45,679 --> 00:26:48,640
presentation that comes later no for

592
00:26:48,640 --> 00:26:49,120
this

593
00:26:49,120 --> 00:26:51,279
for this draft it's one of the possible

594
00:26:51,279 --> 00:26:53,600
use cases it listed oh i see i think

595
00:26:53,600 --> 00:26:56,720
so this one ospf is going to

596
00:26:56,720 --> 00:26:59,200
uh disseminate the net routing

597
00:26:59,200 --> 00:26:59,919
information

598
00:26:59,919 --> 00:27:02,720
inside ospf network for sure right so

599
00:27:02,720 --> 00:27:03,919
for the file ck

600
00:27:03,919 --> 00:27:08,159
ceo how your upf interact with an opf

601
00:27:08,159 --> 00:27:11,760
uh with an ospf router um you can run a

602
00:27:11,760 --> 00:27:12,480
worldview

603
00:27:12,480 --> 00:27:15,600
um os virtual machine on your i mean

604
00:27:15,600 --> 00:27:16,640
like a

605
00:27:16,640 --> 00:27:20,000
docker process ospf process or

606
00:27:20,000 --> 00:27:22,880
something like that or use some other

607
00:27:22,880 --> 00:27:25,760
interface to interact with ospf that's

608
00:27:25,760 --> 00:27:29,360
uh out of scope of this document

609
00:27:29,360 --> 00:27:35,840
yeah we provide a little bit

610
00:27:40,480 --> 00:27:43,440
to the list thanks okay and worst case

611
00:27:43,440 --> 00:27:46,240
you just pulled the use cases

612
00:27:46,240 --> 00:27:47,600
did you want to say something before

613
00:27:47,600 --> 00:27:49,600
that

614
00:27:49,600 --> 00:27:52,880
okay tony

615
00:27:52,880 --> 00:27:56,559
hello yes

616
00:27:58,399 --> 00:28:01,840
hello so i'd like to register tony's

617
00:28:01,840 --> 00:28:04,640
standard objection number one

618
00:28:04,640 --> 00:28:07,679
routing protocols are not dump trucks we

619
00:28:07,679 --> 00:28:08,720
should not be putting

620
00:28:08,720 --> 00:28:10,080
other stuff into our link state

621
00:28:10,080 --> 00:28:12,880
databases if they don't need to be there

622
00:28:12,880 --> 00:28:16,399
and this mechanism is not necessary

623
00:28:16,399 --> 00:28:18,399
and is going to actually impede the

624
00:28:18,399 --> 00:28:20,080
stability and performance of the

625
00:28:20,080 --> 00:28:22,159
protocol

626
00:28:22,159 --> 00:28:24,480
uh that that's why we are using a

627
00:28:24,480 --> 00:28:25,200
transport

628
00:28:25,200 --> 00:28:28,799
instance this one is designed for

629
00:28:28,799 --> 00:28:30,000
non-routine information

630
00:28:30,000 --> 00:28:32,399
dissemination it doesn't do any job

631
00:28:32,399 --> 00:28:34,320
calculation

632
00:28:34,320 --> 00:28:36,960
and the basic routing protocol is still

633
00:28:36,960 --> 00:28:38,720
run in the bazel spf

634
00:28:38,720 --> 00:28:41,200
instance

635
00:28:42,240 --> 00:28:44,240
you should simply decide design a

636
00:28:44,240 --> 00:28:47,919
separate protocol for dealing with this

637
00:28:48,000 --> 00:28:50,480
so tony this is i don't do not like the

638
00:28:50,480 --> 00:28:53,520
gen app with the isis either

639
00:28:53,520 --> 00:28:56,840
yes this is not specific to it yeah

640
00:28:56,840 --> 00:28:59,840
right

641
00:29:00,000 --> 00:29:02,240
as a compromise that's why we choose to

642
00:29:02,240 --> 00:29:03,600
use a separate

643
00:29:03,600 --> 00:29:06,720
instance right

644
00:29:06,720 --> 00:29:09,760
yeah we i think i think this owes more

645
00:29:09,760 --> 00:29:11,760
time on the list

646
00:29:11,760 --> 00:29:14,960
but thanks

647
00:29:24,840 --> 00:29:27,200
eisen hello

648
00:29:27,200 --> 00:29:30,559
yes yes i can help yeah

649
00:29:30,559 --> 00:29:32,880
would you like to switch back to the

650
00:29:32,880 --> 00:29:36,240
slide the second slide

651
00:29:36,799 --> 00:29:40,720
second slide

652
00:29:40,720 --> 00:29:44,240
yeah uh here you you mentioned that uh

653
00:29:44,240 --> 00:29:47,520
using the ospf transport instance uh

654
00:29:47,520 --> 00:29:51,440
you can transfer information

655
00:29:51,440 --> 00:29:55,440
by the non-routine

656
00:30:02,880 --> 00:30:07,039
it is need also built

657
00:30:07,039 --> 00:30:09,840
different name given the neighbor ospf

658
00:30:09,840 --> 00:30:12,158
neighbor

659
00:30:13,679 --> 00:30:16,320
your different ospf neighbor from the

660
00:30:16,320 --> 00:30:17,360
from the normal

661
00:30:17,360 --> 00:30:20,559
normal spf business and what is what's

662
00:30:20,559 --> 00:30:22,880
the meaning of the remote ospf neighbor

663
00:30:22,880 --> 00:30:25,120
here

664
00:30:25,679 --> 00:30:28,559
i'm so sorry but we have to cover this

665
00:30:28,559 --> 00:30:29,760
we're out of time i think

666
00:30:29,760 --> 00:30:31,679
so can you bring this up on the list and

667
00:30:31,679 --> 00:30:33,120
everyone else in the queue on this as

668
00:30:33,120 --> 00:30:34,240
well

669
00:30:34,240 --> 00:30:36,159
so i'll just i'm saying quick so

670
00:30:36,159 --> 00:30:37,440
basically means the

671
00:30:37,440 --> 00:30:39,760
uh transfer instance can use a different

672
00:30:39,760 --> 00:30:41,440
topology from the

673
00:30:41,440 --> 00:30:44,880
base uh the routing process the routing

674
00:30:44,880 --> 00:30:46,960
instance

675
00:30:46,960 --> 00:30:48,960
that's it yeah and we'll answer more in

676
00:30:48,960 --> 00:30:51,840
the list

677
00:30:54,159 --> 00:30:58,320
okay managing windows here i think peter

678
00:30:58,320 --> 00:31:05,840
you're up with flex algo

679
00:31:10,720 --> 00:31:15,039
yeah uh can you guys hear me yes

680
00:31:15,039 --> 00:31:17,679
all right so it's patrick's channel here

681
00:31:17,679 --> 00:31:19,120
i'm going to go

682
00:31:19,120 --> 00:31:20,640
give you a quick update on the flex

683
00:31:20,640 --> 00:31:22,559
overdraft on behalf of

684
00:31:22,559 --> 00:31:26,799
all the crowders next slide please

685
00:31:29,919 --> 00:31:32,480
alright so a bit of a context uh the

686
00:31:32,480 --> 00:31:34,000
working group last call

687
00:31:34,000 --> 00:31:36,640
for this trust for this draft was done

688
00:31:36,640 --> 00:31:38,720
the publication was requested october

689
00:31:38,720 --> 00:31:40,320
last year

690
00:31:40,320 --> 00:31:42,720
we even have the routing directorate

691
00:31:42,720 --> 00:31:44,720
preview which is marked as a complete at

692
00:31:44,720 --> 00:31:46,159
the moment

693
00:31:46,159 --> 00:31:49,039
uh well the original the problem was

694
00:31:49,039 --> 00:31:51,200
that the original implementations were

695
00:31:51,200 --> 00:31:52,880
mostly isis now

696
00:31:52,880 --> 00:31:54,559
couple of vendors started to work on the

697
00:31:54,559 --> 00:31:56,559
ospf part and

698
00:31:56,559 --> 00:31:58,960
uh interestingly enough in about the

699
00:31:58,960 --> 00:32:01,120
same time i both discovered that there

700
00:32:01,120 --> 00:32:02,960
is a missing piece in the usb on the

701
00:32:02,960 --> 00:32:04,399
ospf side

702
00:32:04,399 --> 00:32:07,279
so what we would like to do here is we

703
00:32:07,279 --> 00:32:10,240
we added the missing pieces

704
00:32:10,240 --> 00:32:14,080
on the ospf side because otherwise the

705
00:32:14,080 --> 00:32:14,880
the basic

706
00:32:14,880 --> 00:32:17,600
spec would basically not be complete we

707
00:32:17,600 --> 00:32:19,039
were thinking about adding this

708
00:32:19,039 --> 00:32:20,399
maybe potentially to a different

709
00:32:20,399 --> 00:32:22,240
document but then we said well

710
00:32:22,240 --> 00:32:24,320
this is a basic stuff it belongs here so

711
00:32:24,320 --> 00:32:25,679
let's go back

712
00:32:25,679 --> 00:32:27,440
to the working group so we added these

713
00:32:27,440 --> 00:32:28,799
missing parts

714
00:32:28,799 --> 00:32:30,480
we would like to ask the working group

715
00:32:30,480 --> 00:32:32,720
to review and we can do another working

716
00:32:32,720 --> 00:32:33,679
blast call

717
00:32:33,679 --> 00:32:37,679
there is nothing changed from the

718
00:32:37,679 --> 00:32:41,440
perspective of the flex operation or

719
00:32:41,440 --> 00:32:43,600
anything this is just adding some some

720
00:32:43,600 --> 00:32:45,200
osp specific

721
00:32:45,200 --> 00:32:47,600
metric information which we have missed

722
00:32:47,600 --> 00:32:49,200
in the original text

723
00:32:49,200 --> 00:32:52,640
so next slide please

724
00:32:54,320 --> 00:32:57,039
so couple of things which uh has been

725
00:32:57,039 --> 00:32:58,559
added so first one

726
00:32:58,559 --> 00:33:01,760
in ospf we have bunch of metric

727
00:33:01,760 --> 00:33:03,679
types in terms of the external

728
00:33:03,679 --> 00:33:04,799
information

729
00:33:04,799 --> 00:33:08,640
so uh the external prefixes can have

730
00:33:08,640 --> 00:33:10,320
type one or type 2 metrics something

731
00:33:10,320 --> 00:33:12,399
which is specific to spf and when we

732
00:33:12,399 --> 00:33:13,440
define the flex

733
00:33:13,440 --> 00:33:16,320
algorithm prefix metrics of trv the

734
00:33:16,320 --> 00:33:18,799
subtle which is achieved the

735
00:33:18,799 --> 00:33:22,559
end-to-end inter area or intel domain

736
00:33:22,559 --> 00:33:26,000
optimality on the flex algo metric

737
00:33:26,000 --> 00:33:28,559
we added it but we didn't really think

738
00:33:28,559 --> 00:33:29,200
about the

739
00:33:29,200 --> 00:33:31,600
uh the type of a metric uh which is

740
00:33:31,600 --> 00:33:34,000
being supported in ospf so

741
00:33:34,000 --> 00:33:36,799
uh we what we did is we added another

742
00:33:36,799 --> 00:33:37,440
field

743
00:33:37,440 --> 00:33:40,720
one byte field which uh

744
00:33:40,720 --> 00:33:43,919
uh flag field basically uh recovered

745
00:33:43,919 --> 00:33:45,360
from the reserved field so

746
00:33:45,360 --> 00:33:48,240
there's no backward compatibility issue

747
00:33:48,240 --> 00:33:50,640
in terms of the tlb layout

748
00:33:50,640 --> 00:33:53,120
and when the bit is set that the metric

749
00:33:53,120 --> 00:33:54,480
type is two so this is

750
00:33:54,480 --> 00:33:56,880
basically the same functionality that

751
00:33:56,880 --> 00:33:59,600
the basic rfc specification

752
00:33:59,600 --> 00:34:01,279
mentions in the section that is

753
00:34:01,279 --> 00:34:04,240
mentioned here in the rfc 2c28

754
00:34:04,240 --> 00:34:06,559
so this applies strictly to ospf

755
00:34:06,559 --> 00:34:09,119
external nss external prefixes

756
00:34:09,119 --> 00:34:21,839
so that's one thing next slide please

757
00:34:22,079 --> 00:34:24,639
so i don't see any slides with them okay

758
00:34:24,639 --> 00:34:25,199
let's

759
00:34:25,199 --> 00:34:28,078
probably take one

760
00:34:31,440 --> 00:34:34,560
all right and the second a bit

761
00:34:34,560 --> 00:34:37,679
bigger piece is that again related to

762
00:34:37,679 --> 00:34:38,639
the prefix

763
00:34:38,639 --> 00:34:42,079
flex algo specific prefix metric

764
00:34:42,079 --> 00:34:44,560
uh when we define this again define

765
00:34:44,560 --> 00:34:46,879
everything properly for the prefixes but

766
00:34:46,879 --> 00:34:50,079
what we forgot is that in ospf

767
00:34:50,079 --> 00:34:53,119
inter area

768
00:34:53,359 --> 00:34:55,599
between the areas we also advertise the

769
00:34:55,599 --> 00:34:58,320
reachability of the asbr's

770
00:34:58,320 --> 00:35:01,520
and it's a type 4

771
00:35:01,520 --> 00:35:03,359
summary let's say as we call it in the

772
00:35:03,359 --> 00:35:05,040
ospf specification in

773
00:35:05,040 --> 00:35:08,240
skv2 and and we completely

774
00:35:08,240 --> 00:35:10,560
you know missed this part so now if you

775
00:35:10,560 --> 00:35:12,320
want to calculate the path to the

776
00:35:12,320 --> 00:35:14,240
external destination we need to

777
00:35:14,240 --> 00:35:17,440
first find out that the the best pass

778
00:35:17,440 --> 00:35:21,200
to the originating the sbrs and in ospf

779
00:35:21,200 --> 00:35:22,160
this is being

780
00:35:22,160 --> 00:35:24,720
this information is being you know sent

781
00:35:24,720 --> 00:35:26,400
between the areas

782
00:35:26,400 --> 00:35:28,880
so what we define is we needed to have a

783
00:35:28,880 --> 00:35:31,040
way for these

784
00:35:31,040 --> 00:35:34,079
summary advertisements

785
00:35:34,079 --> 00:35:36,240
to to provide a flex algo specific

786
00:35:36,240 --> 00:35:37,119
metric

787
00:35:37,119 --> 00:35:40,400
so what we defined for ospf v2

788
00:35:40,400 --> 00:35:42,280
we defined the extended inter area

789
00:35:42,280 --> 00:35:44,320
isbrlsa which is very

790
00:35:44,320 --> 00:35:46,240
similar to what we defined for the

791
00:35:46,240 --> 00:35:47,680
prefixes you know

792
00:35:47,680 --> 00:35:50,960
years back and has the same semantics as

793
00:35:50,960 --> 00:35:52,480
a type four summary let's say in the

794
00:35:52,480 --> 00:35:54,560
base of spf v2

795
00:35:54,560 --> 00:35:58,400
then we defined the tlv in this lsa

796
00:35:58,400 --> 00:36:00,880
which is being used to advertise the

797
00:36:00,880 --> 00:36:02,560
reflexology specific

798
00:36:02,560 --> 00:36:05,760
or well extended information about the

799
00:36:05,760 --> 00:36:10,160
the isbr and then we define that the

800
00:36:10,160 --> 00:36:11,599
subtle

801
00:36:11,599 --> 00:36:13,839
which advertises the flex august

802
00:36:13,839 --> 00:36:14,960
specific metric

803
00:36:14,960 --> 00:36:16,560
it can advertise to flex all the

804
00:36:16,560 --> 00:36:18,000
specific metric

805
00:36:18,000 --> 00:36:21,520
for the single isbr in multiple flex

806
00:36:21,520 --> 00:36:22,160
algos

807
00:36:22,160 --> 00:36:25,200
and this is being sent in two parent

808
00:36:25,200 --> 00:36:26,240
tlvs one

809
00:36:26,240 --> 00:36:28,000
is the one which is defined here the

810
00:36:28,000 --> 00:36:30,079
second one the extended inter area is

811
00:36:30,079 --> 00:36:31,280
vrtov

812
00:36:31,280 --> 00:36:34,960
or for ospv3 this tlv is also available

813
00:36:34,960 --> 00:36:37,280
in the usb receptor area

814
00:36:37,280 --> 00:36:40,000
uh intel area around router tlv which is

815
00:36:40,000 --> 00:36:43,920
defined in rfc 8362.

816
00:36:43,920 --> 00:36:46,800
next slide please

817
00:36:47,359 --> 00:36:49,760
and then basically the there has been

818
00:36:49,760 --> 00:36:51,200
some text added

819
00:36:51,200 --> 00:36:54,000
about processing and advertisements of

820
00:36:54,000 --> 00:36:54,640
this

821
00:36:54,640 --> 00:36:58,000
inter area asbr lsa

822
00:36:58,000 --> 00:37:00,880
and also the section 13.1 which is the

823
00:37:00,880 --> 00:37:01,920
inter area

824
00:37:01,920 --> 00:37:04,160
a multi-domain section has been extended

825
00:37:04,160 --> 00:37:06,240
with some text that talks about

826
00:37:06,240 --> 00:37:08,160
when to advertise this and how to

827
00:37:08,160 --> 00:37:10,879
process this

828
00:37:11,040 --> 00:37:14,400
okay next slide please

829
00:37:15,200 --> 00:37:18,000
uh and the last part obviously there are

830
00:37:18,000 --> 00:37:18,960
some

831
00:37:18,960 --> 00:37:20,880
allocations which are needed so we

832
00:37:20,880 --> 00:37:22,400
updated the intersection

833
00:37:22,400 --> 00:37:25,599
and once the working group kind of agree

834
00:37:25,599 --> 00:37:29,200
on this edit text we will

835
00:37:29,200 --> 00:37:31,200
ask the ana for the allocation for this

836
00:37:31,200 --> 00:37:36,560
new lsa tlv subtle

837
00:37:36,560 --> 00:37:39,920
right next slide please so again

838
00:37:39,920 --> 00:37:44,079
this was a mistake uh uh from our side

839
00:37:44,079 --> 00:37:48,079
uh you know we we somehow forgot the

840
00:37:48,079 --> 00:37:51,680
specific uh osbfps here so what i would

841
00:37:51,680 --> 00:37:53,599
like to do and we would like to do as a

842
00:37:53,599 --> 00:37:55,520
as a set of authors would like the

843
00:37:55,520 --> 00:37:56,720
working group to

844
00:37:56,720 --> 00:37:59,680
have a review of daily text and then we

845
00:37:59,680 --> 00:38:00,160
would go

846
00:38:00,160 --> 00:38:05,839
over the second last call

847
00:38:07,200 --> 00:38:09,440
okay again again has a question or

848
00:38:09,440 --> 00:38:11,839
comment

849
00:38:13,359 --> 00:38:19,839
go ahead again

850
00:38:26,079 --> 00:38:27,760
yeah can you hear me sorry about that i

851
00:38:27,760 --> 00:38:29,280
think i think i

852
00:38:29,280 --> 00:38:31,280
was in the queue for a previous uh

853
00:38:31,280 --> 00:38:32,960
previous slide so

854
00:38:32,960 --> 00:38:36,320
no comment thanks okay

855
00:38:36,320 --> 00:38:38,560
so did i hear correctly basically we had

856
00:38:38,560 --> 00:38:41,280
isis implementations that preceded ospf

857
00:38:41,280 --> 00:38:44,400
and when we got into the ospf afterwards

858
00:38:44,400 --> 00:38:47,200
basically uh showed this missing stuff

859
00:38:47,200 --> 00:38:47,760
yes

860
00:38:47,760 --> 00:38:51,200
yes that's what happened yeah yeah okay

861
00:38:51,200 --> 00:38:53,439
okay

862
00:38:54,480 --> 00:38:57,040
oh well

863
00:38:58,839 --> 00:39:00,720
um lot of time around 80. yeah so i just

864
00:39:00,720 --> 00:39:01,520
wanted to say that

865
00:39:01,520 --> 00:39:03,920
um i'm really glad that you guys caught

866
00:39:03,920 --> 00:39:05,200
that and uh

867
00:39:05,200 --> 00:39:07,680
not me because this was next in my uh

868
00:39:07,680 --> 00:39:08,560
queue

869
00:39:08,560 --> 00:39:10,960
so what i'm going to do is um since

870
00:39:10,960 --> 00:39:12,320
we're going to go for another

871
00:39:12,320 --> 00:39:14,720
last call and this seems to be a

872
00:39:14,720 --> 00:39:16,480
significant change

873
00:39:16,480 --> 00:39:19,119
is i'm going to bump the document back

874
00:39:19,119 --> 00:39:20,240
to the working group and then you can

875
00:39:20,240 --> 00:39:21,920
put it in javascript

876
00:39:21,920 --> 00:39:25,280
whatever this is done thanks sure okay

877
00:39:25,280 --> 00:39:26,839
thanks

878
00:39:26,839 --> 00:39:29,680
thanks

879
00:39:29,680 --> 00:39:32,319
okay great

880
00:39:33,280 --> 00:39:36,000
taking up time

881
00:39:36,400 --> 00:39:43,839
thanks peter

882
00:39:44,000 --> 00:39:57,839
okay we got william or bill

883
00:40:10,720 --> 00:40:14,480
hi everyone uh this is william plato

884
00:40:14,480 --> 00:40:17,359
so today we'll talk about the new draft

885
00:40:17,359 --> 00:40:19,760
for flex algo bandwidth constraints

886
00:40:19,760 --> 00:40:24,400
uh next slide please yeah

887
00:40:24,400 --> 00:40:26,560
so first we will talk about why a

888
00:40:26,560 --> 00:40:28,160
bandwidth-based flex server is

889
00:40:28,160 --> 00:40:31,280
useful and then we look at the

890
00:40:31,280 --> 00:40:32,319
additional

891
00:40:32,319 --> 00:40:34,000
fad constraints that will be needed to

892
00:40:34,000 --> 00:40:36,240
define this flux circle

893
00:40:36,240 --> 00:40:38,160
and then we look at some generic fat

894
00:40:38,160 --> 00:40:40,560
constraints which can be applied on

895
00:40:40,560 --> 00:40:44,400
on any flux algal and lastly we will get

896
00:40:44,400 --> 00:40:47,040
an automatic bandwidth metric derivation

897
00:40:47,040 --> 00:40:48,000
scheme

898
00:40:48,000 --> 00:40:51,760
where if a reflex algo can define the

899
00:40:51,760 --> 00:40:54,079
parameters

900
00:40:54,079 --> 00:40:56,640
and each partitioning node can compute

901
00:40:56,640 --> 00:40:57,599
or derive the

902
00:40:57,599 --> 00:41:01,920
bandwidth based metric automatically

903
00:41:01,920 --> 00:41:04,720
next slide please

904
00:41:05,440 --> 00:41:08,480
yeah so flex algo provides mechanisms to

905
00:41:08,480 --> 00:41:08,960
compute

906
00:41:08,960 --> 00:41:11,680
path based on various constraints so it

907
00:41:11,680 --> 00:41:12,480
is a very

908
00:41:12,480 --> 00:41:15,040
easy and efficient way where a single

909
00:41:15,040 --> 00:41:16,560
definition can dictate

910
00:41:16,560 --> 00:41:19,119
how the topology looks like and each

911
00:41:19,119 --> 00:41:20,000
node which agrees

912
00:41:20,000 --> 00:41:21,760
to that can participate and a

913
00:41:21,760 --> 00:41:23,440
participating node can

914
00:41:23,440 --> 00:41:26,560
look at the topology in the same manner

915
00:41:26,560 --> 00:41:29,680
and this draft introduces a few

916
00:41:29,680 --> 00:41:31,119
additional constraints

917
00:41:31,119 --> 00:41:33,040
and a new metric type to define a

918
00:41:33,040 --> 00:41:35,920
bandwidth based flex variable

919
00:41:35,920 --> 00:41:38,720
next slide please

920
00:41:42,400 --> 00:41:45,280
okay so for this flux i'll go we define

921
00:41:45,280 --> 00:41:47,119
a new metric type this graph defines a

922
00:41:47,119 --> 00:41:48,319
numeric type called

923
00:41:48,319 --> 00:41:51,680
bandwidth metric and so the first

924
00:41:51,680 --> 00:41:54,000
addition would be each link can

925
00:41:54,000 --> 00:41:56,240
advertise a bandwidth metric

926
00:41:56,240 --> 00:41:58,560
so which would be a sub sub tlv are the

927
00:41:58,560 --> 00:42:01,359
application specific link attributes

928
00:42:01,359 --> 00:42:04,400
this can typically be configured by

929
00:42:04,400 --> 00:42:06,560
per link by the network operator and it

930
00:42:06,560 --> 00:42:08,400
is most likely to remain

931
00:42:08,400 --> 00:42:11,040
static unless the operator wants to

932
00:42:11,040 --> 00:42:12,560
change it

933
00:42:12,560 --> 00:42:15,040
so when we floated this draft for review

934
00:42:15,040 --> 00:42:16,800
we received some feedback

935
00:42:16,800 --> 00:42:18,720
asking whether can we make this a

936
00:42:18,720 --> 00:42:20,000
generic metric

937
00:42:20,000 --> 00:42:23,040
so that uh in future if you want a

938
00:42:23,040 --> 00:42:24,720
flexilgo specific

939
00:42:24,720 --> 00:42:27,520
metric or if you have a new metric type

940
00:42:27,520 --> 00:42:28,480
coming up and

941
00:42:28,480 --> 00:42:31,599
if you want to reuse the same

942
00:42:31,599 --> 00:42:35,040
tlb for that so we are open to that idea

943
00:42:35,040 --> 00:42:37,760
we would like to listen to the feedback

944
00:42:37,760 --> 00:42:38,400
from the

945
00:42:38,400 --> 00:42:41,599
working group for that now for the

946
00:42:41,599 --> 00:42:43,440
bandwidth based flexor go

947
00:42:43,440 --> 00:42:46,800
we define a few additional constraints

948
00:42:46,800 --> 00:42:49,040
which defines the parameters to compute

949
00:42:49,040 --> 00:42:49,839
the automatic

950
00:42:49,839 --> 00:42:52,960
metric and this left also introduces a

951
00:42:52,960 --> 00:42:53,920
couple of

952
00:42:53,920 --> 00:42:55,760
additional constraints which can be used

953
00:42:55,760 --> 00:42:58,480
by any flexible

954
00:42:58,480 --> 00:43:01,280
next slide please

955
00:43:04,560 --> 00:43:06,400
yeah so we look at the first we look at

956
00:43:06,400 --> 00:43:08,000
the additional fat contents which are

957
00:43:08,000 --> 00:43:09,040
applicable for

958
00:43:09,040 --> 00:43:11,760
any flex algal the first one is is an

959
00:43:11,760 --> 00:43:12,319
exclude

960
00:43:12,319 --> 00:43:14,400
constraint called exclude minimum

961
00:43:14,400 --> 00:43:16,079
bandwidth constraint

962
00:43:16,079 --> 00:43:18,160
uh the name might be a bit confusing but

963
00:43:18,160 --> 00:43:19,680
the aim is that

964
00:43:19,680 --> 00:43:22,880
any link whose advertised maximum link

965
00:43:22,880 --> 00:43:23,599
bandwidth

966
00:43:23,599 --> 00:43:26,000
if it is lesser than this limit that is

967
00:43:26,000 --> 00:43:27,839
defined by this constraint

968
00:43:27,839 --> 00:43:29,920
those should be or just be excluded from

969
00:43:29,920 --> 00:43:32,079
the flex server

970
00:43:32,079 --> 00:43:35,440
um so this is useful in any flex argo

971
00:43:35,440 --> 00:43:35,839
where

972
00:43:35,839 --> 00:43:38,000
you want to say that this is

973
00:43:38,000 --> 00:43:39,119
particularly useful in a bandwidth

974
00:43:39,119 --> 00:43:40,400
basics algo where

975
00:43:40,400 --> 00:43:43,440
you want to exclude certain links which

976
00:43:43,440 --> 00:43:45,119
don't have the enough capacity that you

977
00:43:45,119 --> 00:43:46,720
that you want

978
00:43:46,720 --> 00:43:49,920
and the next constraint is an exclude

979
00:43:49,920 --> 00:43:52,960
maximum link delay constraint so

980
00:43:52,960 --> 00:43:58,000
in uh rfc 8570 dictates uh defines the

981
00:43:58,000 --> 00:44:00,400
unidirectional or min unidirectional

982
00:44:00,400 --> 00:44:01,440
link delay

983
00:44:01,440 --> 00:44:04,800
so this is based on that uh if any link

984
00:44:04,800 --> 00:44:06,880
whose advertised minimum unidirectional

985
00:44:06,880 --> 00:44:08,000
delay is

986
00:44:08,000 --> 00:44:11,280
greater than the delay specified by this

987
00:44:11,280 --> 00:44:12,480
constraint

988
00:44:12,480 --> 00:44:14,880
those links should be excluded from the

989
00:44:14,880 --> 00:44:16,000
flip server

990
00:44:16,000 --> 00:44:19,440
so this is mostly

991
00:44:19,440 --> 00:44:22,079
should be useful in flex argos which do

992
00:44:22,079 --> 00:44:23,040
not use

993
00:44:23,040 --> 00:44:26,400
link delay as the metric type so in any

994
00:44:26,400 --> 00:44:27,680
other flex server if you

995
00:44:27,680 --> 00:44:30,880
want to use this as a constraint

996
00:44:30,880 --> 00:44:33,040
to remove some things which are very bad

997
00:44:33,040 --> 00:44:35,520
so which has a very large delay

998
00:44:35,520 --> 00:44:39,119
uh this might be useful next slide

999
00:44:39,119 --> 00:44:42,079
so bill speaking of uh minimum bandwidth

1000
00:44:42,079 --> 00:44:42,480
your

1001
00:44:42,480 --> 00:44:45,040
your clipping your audio is clipping in

1002
00:44:45,040 --> 00:44:46,160
and out

1003
00:44:46,160 --> 00:44:48,319
uh could you turn off the your video

1004
00:44:48,319 --> 00:44:50,160
there's a way to turn your video off

1005
00:44:50,160 --> 00:44:53,280
maybe that'll help i

1006
00:44:53,280 --> 00:44:56,400
i think it's already off okay

1007
00:44:56,400 --> 00:44:58,160
no you're not displaying you're not

1008
00:44:58,160 --> 00:44:59,599
displaying video but

1009
00:44:59,599 --> 00:45:00,720
there's a way to turn it off on the

1010
00:45:00,720 --> 00:45:02,960
receive side but

1011
00:45:02,960 --> 00:45:05,359
anyway we can keep trying to go but just

1012
00:45:05,359 --> 00:45:06,160
letting you know

1013
00:45:06,160 --> 00:45:10,000
your audio is clicking okay okay

1014
00:45:10,000 --> 00:45:13,520
yeah can we go to the next minute

1015
00:45:13,520 --> 00:45:15,440
all right so now we go to the automatic

1016
00:45:15,440 --> 00:45:18,640
mat bandwidth metric calculations

1017
00:45:18,640 --> 00:45:21,920
so here the flexalgo can define

1018
00:45:21,920 --> 00:45:24,880
or advertise certain parameters which

1019
00:45:24,880 --> 00:45:26,720
each participating node

1020
00:45:26,720 --> 00:45:29,040
can look at and use them to derive the

1021
00:45:29,040 --> 00:45:30,240
bandwidth metric

1022
00:45:30,240 --> 00:45:32,079
so this is applicable only for the flux

1023
00:45:32,079 --> 00:45:34,720
servos whose metric type is bandwidth

1024
00:45:34,720 --> 00:45:35,280
metric

1025
00:45:35,280 --> 00:45:39,040
and uh this automatic metric calculation

1026
00:45:39,040 --> 00:45:41,200
will be done or should be done only on

1027
00:45:41,200 --> 00:45:42,880
the links which do not advertise the

1028
00:45:42,880 --> 00:45:43,440
bandwidth

1029
00:45:43,440 --> 00:45:46,960
metrics update so

1030
00:45:46,960 --> 00:45:48,640
the the entire aromatic bandwidth

1031
00:45:48,640 --> 00:45:50,000
symmetry calculations

1032
00:45:50,000 --> 00:45:53,280
are based on the maximum link bandwidth

1033
00:45:53,280 --> 00:45:56,319
already advertised per link so we define

1034
00:45:56,319 --> 00:45:56,880
two

1035
00:45:56,880 --> 00:45:59,599
modes of automatic bandwidth metric

1036
00:45:59,599 --> 00:46:00,720
calculations

1037
00:46:00,720 --> 00:46:02,480
one is called simple mode and the next

1038
00:46:02,480 --> 00:46:03,920
one is called interface group

1039
00:46:03,920 --> 00:46:06,240
mode we'll look that in detail in the

1040
00:46:06,240 --> 00:46:07,839
next slides

1041
00:46:07,839 --> 00:46:10,720
next slide please

1042
00:46:12,960 --> 00:46:17,119
all right so in the simple mode uh it's

1043
00:46:17,119 --> 00:46:19,440
probably useful for suitable for

1044
00:46:19,440 --> 00:46:20,160
deployments

1045
00:46:20,160 --> 00:46:23,200
using layer two bundles for for all the

1046
00:46:23,200 --> 00:46:24,319
parallel links

1047
00:46:24,319 --> 00:46:27,839
between two nodes um the maximum linked

1048
00:46:27,839 --> 00:46:30,880
android advertised per link is used to

1049
00:46:30,880 --> 00:46:33,520
derive the input metric

1050
00:46:33,520 --> 00:46:36,400
next slide please

1051
00:46:38,640 --> 00:46:41,680
right so in automatic bandwidth metric

1052
00:46:41,680 --> 00:46:42,000
uh

1053
00:46:42,000 --> 00:46:44,480
flex server has additional work

1054
00:46:44,480 --> 00:46:46,000
basically flex argo

1055
00:46:46,000 --> 00:46:48,240
will have to identify and group the

1056
00:46:48,240 --> 00:46:49,920
pattern links participating

1057
00:46:49,920 --> 00:46:52,640
in that flex level so look at the is

1058
00:46:52,640 --> 00:46:53,119
neighbor

1059
00:46:53,119 --> 00:46:55,040
the link advertisements and look at the

1060
00:46:55,040 --> 00:46:56,560
neighbors

1061
00:46:56,560 --> 00:46:59,040
and group the all the link attributes

1062
00:46:59,040 --> 00:47:01,280
which are pointing to the same neighbor

1063
00:47:01,280 --> 00:47:03,520
and then the sum of the maximum link

1064
00:47:03,520 --> 00:47:05,200
bandwidth advertised by each of those

1065
00:47:05,200 --> 00:47:06,960
parallel links is used to

1066
00:47:06,960 --> 00:47:09,440
derive the bandwidth metric applicable

1067
00:47:09,440 --> 00:47:10,000
for

1068
00:47:10,000 --> 00:47:13,040
all those links so the derived metric

1069
00:47:13,040 --> 00:47:15,280
is then assigned to each parallel link

1070
00:47:15,280 --> 00:47:16,560
so this is suitable

1071
00:47:16,560 --> 00:47:18,480
for deployments having parallel links

1072
00:47:18,480 --> 00:47:19,839
advertised in igp

1073
00:47:19,839 --> 00:47:21,839
where you don't necessarily have a layer

1074
00:47:21,839 --> 00:47:23,680
bundle

1075
00:47:23,680 --> 00:47:26,558
next slide please

1076
00:47:29,520 --> 00:47:33,440
right so so we have two methods as we

1077
00:47:33,440 --> 00:47:34,240
said the

1078
00:47:34,240 --> 00:47:37,119
simple mode and interface group mode and

1079
00:47:37,119 --> 00:47:38,720
now we look at how

1080
00:47:38,720 --> 00:47:41,280
uh two different types of methods to

1081
00:47:41,280 --> 00:47:41,839
derive

1082
00:47:41,839 --> 00:47:44,720
the automatic bandwidth metric so these

1083
00:47:44,720 --> 00:47:45,920
are again additional

1084
00:47:45,920 --> 00:47:49,359
uh parameters which dictates or defines

1085
00:47:49,359 --> 00:47:51,200
a different difference which a flux argo

1086
00:47:51,200 --> 00:47:52,720
defines to

1087
00:47:52,720 --> 00:47:55,760
compute the bandwidth metric so you have

1088
00:47:55,760 --> 00:47:57,359
two methods

1089
00:47:57,359 --> 00:47:59,680
a reference bandwidth based method and a

1090
00:47:59,680 --> 00:48:02,559
bandwidth threshold based method

1091
00:48:02,559 --> 00:48:07,839
next slide please

1092
00:48:08,240 --> 00:48:10,160
okay so in the reference bandwidth

1093
00:48:10,160 --> 00:48:11,599
method basically the

1094
00:48:11,599 --> 00:48:14,720
flexilgo defines a reference bandwidth

1095
00:48:14,720 --> 00:48:15,440
which

1096
00:48:15,440 --> 00:48:18,720
can be used by each

1097
00:48:18,720 --> 00:48:21,200
participating node to derive the

1098
00:48:21,200 --> 00:48:22,960
bandwidth metric

1099
00:48:22,960 --> 00:48:26,319
uh so this is done by advertising a

1100
00:48:26,319 --> 00:48:28,559
fad subtly called reference bandwidth

1101
00:48:28,559 --> 00:48:29,359
sub tv

1102
00:48:29,359 --> 00:48:32,079
it has a flag to indicate whether to use

1103
00:48:32,079 --> 00:48:32,800
the symbol or

1104
00:48:32,800 --> 00:48:35,680
interface group mode and it has the

1105
00:48:35,680 --> 00:48:37,119
reference bandwidth

1106
00:48:37,119 --> 00:48:39,440
which is useful to derive the metric and

1107
00:48:39,440 --> 00:48:42,000
it also has a round off bandwidth

1108
00:48:42,000 --> 00:48:44,720
so the round off bandit basically it

1109
00:48:44,720 --> 00:48:45,359
helps

1110
00:48:45,359 --> 00:48:47,680
to round off the link bandwidths by each

1111
00:48:47,680 --> 00:48:50,559
link into a multiple of that value

1112
00:48:50,559 --> 00:48:53,280
so that you have more uniform kind of

1113
00:48:53,280 --> 00:48:54,400
metric or

1114
00:48:54,400 --> 00:48:58,400
stepwise metrics uh across the topology

1115
00:48:58,400 --> 00:49:01,760
and the

1116
00:49:01,760 --> 00:49:04,720
algorithm of the formula to derive the

1117
00:49:04,720 --> 00:49:05,920
metric is

1118
00:49:05,920 --> 00:49:08,400
shown here so you define the reference

1119
00:49:08,400 --> 00:49:09,520
bandwidth

1120
00:49:09,520 --> 00:49:11,680
by the link bandwidth which is a

1121
00:49:11,680 --> 00:49:13,040
multiple of

1122
00:49:13,040 --> 00:49:16,319
round off bandwidth so as you can see as

1123
00:49:16,319 --> 00:49:18,319
the bandwidth increases the metric

1124
00:49:18,319 --> 00:49:20,640
decreases

1125
00:49:20,640 --> 00:49:23,359
next slide please

1126
00:49:24,880 --> 00:49:26,880
yeah so this is one of the examples

1127
00:49:26,880 --> 00:49:29,280
where the reference value is defined as

1128
00:49:29,280 --> 00:49:30,800
1 tbps

1129
00:49:30,800 --> 00:49:33,680
and you have a round off bandwidth of 20

1130
00:49:33,680 --> 00:49:35,040
gbps so

1131
00:49:35,040 --> 00:49:37,839
the benefit is that if the link

1132
00:49:37,839 --> 00:49:38,559
bandwidth

1133
00:49:38,559 --> 00:49:40,720
is somewhere in the range of 100 to 120

1134
00:49:40,720 --> 00:49:41,760
for example

1135
00:49:41,760 --> 00:49:45,040
the metric would be 10. so if the link

1136
00:49:45,040 --> 00:49:47,119
is an aggregate internet link or a later

1137
00:49:47,119 --> 00:49:49,440
bundle if there are member links going

1138
00:49:49,440 --> 00:49:50,319
down so

1139
00:49:50,319 --> 00:49:52,800
even if the bandwidth doesn't change by

1140
00:49:52,800 --> 00:49:53,599
much

1141
00:49:53,599 --> 00:49:58,160
the metric wouldn't change as well next

1142
00:49:58,160 --> 00:50:00,720
slide please

1143
00:50:02,800 --> 00:50:04,640
so this is the last method called the

1144
00:50:04,640 --> 00:50:06,400
bandwidth thresholds method

1145
00:50:06,400 --> 00:50:09,680
this is uh basically when

1146
00:50:09,680 --> 00:50:12,400
the the the reference bandwidth method

1147
00:50:12,400 --> 00:50:14,000
basically has a proportional or

1148
00:50:14,000 --> 00:50:17,200
inversely proportional metric where

1149
00:50:17,200 --> 00:50:20,000
the metric is almost directly inversely

1150
00:50:20,000 --> 00:50:21,200
proportional to the

1151
00:50:21,200 --> 00:50:24,079
reference bandwidth that is defined if

1152
00:50:24,079 --> 00:50:26,319
the operator wants to have a different

1153
00:50:26,319 --> 00:50:28,000
set of metrics for a different set of

1154
00:50:28,000 --> 00:50:29,040
range of

1155
00:50:29,040 --> 00:50:31,280
bandwidths you can have you can use this

1156
00:50:31,280 --> 00:50:32,079
method

1157
00:50:32,079 --> 00:50:35,040
so the bandwidth threshold subtle will

1158
00:50:35,040 --> 00:50:36,800
have a staircase model

1159
00:50:36,800 --> 00:50:39,599
where certain thresholds are defined and

1160
00:50:39,599 --> 00:50:41,839
the corresponding metric is defined

1161
00:50:41,839 --> 00:50:43,760
we can look at the example in the next

1162
00:50:43,760 --> 00:50:46,079
slide

1163
00:50:46,240 --> 00:50:48,960
please go to the next slide right so

1164
00:50:48,960 --> 00:50:50,720
here we have an example

1165
00:50:50,720 --> 00:50:53,839
where you defined

1166
00:50:53,839 --> 00:50:56,480
thresholds like you have the bandwidth

1167
00:50:56,480 --> 00:50:57,359
threshold 1

1168
00:50:57,359 --> 00:51:00,960
min as 5 gigabits which basically says

1169
00:51:00,960 --> 00:51:01,839
that anything

1170
00:51:01,839 --> 00:51:04,960
less than 5 g bandwidth

1171
00:51:04,960 --> 00:51:08,400
should be given the maximum metric

1172
00:51:08,400 --> 00:51:11,760
and any bandwidths which is any of the

1173
00:51:11,760 --> 00:51:13,359
linked bandwidths which is between

1174
00:51:13,359 --> 00:51:17,119
5 to 50 gbps gets a metric of 5000

1175
00:51:17,119 --> 00:51:19,520
and anything between 50 and 100 gets a

1176
00:51:19,520 --> 00:51:20,240
metric of

1177
00:51:20,240 --> 00:51:23,599
50 and anything similarly

1178
00:51:23,599 --> 00:51:27,119
between anything above 100 gbps gets

1179
00:51:27,119 --> 00:51:30,480
a metric of 25

1180
00:51:30,640 --> 00:51:33,440
next slide please

1181
00:51:34,400 --> 00:51:36,880
right so uh based on the review comments

1182
00:51:36,880 --> 00:51:38,559
we can we'd like to call for

1183
00:51:38,559 --> 00:51:43,520
working group adoption questions

1184
00:51:45,200 --> 00:51:48,480
hey uh this is ac uh more or less

1185
00:51:48,480 --> 00:51:49,119
speaking as

1186
00:51:49,119 --> 00:51:52,000
a working group member i think this is a

1187
00:51:52,000 --> 00:51:53,760
good example of how flex

1188
00:51:53,760 --> 00:51:56,319
algorithm can be used that you know this

1189
00:51:56,319 --> 00:51:56,960
this

1190
00:51:56,960 --> 00:51:59,280
new algorithm defined which is you know

1191
00:51:59,280 --> 00:52:00,720
with

1192
00:52:00,720 --> 00:52:03,440
different uh metrics and constraints i

1193
00:52:03,440 --> 00:52:05,040
think this is really really good

1194
00:52:05,040 --> 00:52:06,559
i had one more comment i noticed there's

1195
00:52:06,559 --> 00:52:08,960
a lot of you know whenever we

1196
00:52:08,960 --> 00:52:10,800
talk about delays and things there's

1197
00:52:10,800 --> 00:52:13,200
discussion on

1198
00:52:13,200 --> 00:52:15,280
the measurement of these things which is

1199
00:52:15,280 --> 00:52:17,359
kind of out of scope

1200
00:52:17,359 --> 00:52:19,920
i mean you should provide precisely

1201
00:52:19,920 --> 00:52:21,440
define it but how to measure it i don't

1202
00:52:21,440 --> 00:52:22,960
know that you need to but you

1203
00:52:22,960 --> 00:52:25,920
but it would be good to to provide

1204
00:52:25,920 --> 00:52:27,359
guidance

1205
00:52:27,359 --> 00:52:30,720
on how often it is and how frequently

1206
00:52:30,720 --> 00:52:32,240
it's updated

1207
00:52:32,240 --> 00:52:47,520
thanks so much

1208
00:52:47,520 --> 00:52:50,240
uh yes i had a question about so you

1209
00:52:50,240 --> 00:52:51,839
know from the uh list

1210
00:52:51,839 --> 00:52:54,640
i guess the discussion about the metric

1211
00:52:54,640 --> 00:52:55,280
um

1212
00:52:55,280 --> 00:52:59,119
so and and the use of uh

1213
00:52:59,119 --> 00:53:03,200
i guess real-time bandwidths uh to to uh

1214
00:53:03,200 --> 00:53:06,079
update i guess the um the metric that's

1215
00:53:06,079 --> 00:53:08,480
used in the fad calculation

1216
00:53:08,480 --> 00:53:12,839
uh and and static i guess versus dynamic

1217
00:53:12,839 --> 00:53:14,720
values

1218
00:53:14,720 --> 00:53:17,119
and i guess also the discussion related

1219
00:53:17,119 --> 00:53:18,319
to possibly

1220
00:53:18,319 --> 00:53:21,440
like instability uh with the metric

1221
00:53:21,440 --> 00:53:23,359
changing i guess that was one of the

1222
00:53:23,359 --> 00:53:24,800
concerns so

1223
00:53:24,800 --> 00:53:26,640
just wondering i guess let's say you

1224
00:53:26,640 --> 00:53:28,559
have thresholds that are set

1225
00:53:28,559 --> 00:53:31,200
up and based on that you can include or

1226
00:53:31,200 --> 00:53:32,640
you can exclude

1227
00:53:32,640 --> 00:53:35,599
uh different links similar to like like

1228
00:53:35,599 --> 00:53:36,160
a uh

1229
00:53:36,160 --> 00:53:39,440
like an rcpt exclude type function

1230
00:53:39,440 --> 00:53:42,240
which makes sense but i think they the

1231
00:53:42,240 --> 00:53:44,160
bigger question i guess related to

1232
00:53:44,160 --> 00:53:46,640
instability and maybe you can talk about

1233
00:53:46,640 --> 00:53:47,920
that just how

1234
00:53:47,920 --> 00:53:50,800
uh using these dynamic measurements i

1235
00:53:50,800 --> 00:53:51,520
guess to

1236
00:53:51,520 --> 00:53:54,960
to uh update the metric and how

1237
00:53:54,960 --> 00:53:57,359
how um that will not prevent you know

1238
00:53:57,359 --> 00:53:58,720
cause any type of uh

1239
00:53:58,720 --> 00:54:02,959
instability with the igp thank you

1240
00:54:03,040 --> 00:54:06,079
right now thanks yeah so the uh

1241
00:54:06,079 --> 00:54:08,640
exclude constraints which uh have been

1242
00:54:08,640 --> 00:54:10,400
introduced by this draft

1243
00:54:10,400 --> 00:54:12,319
we expect that the operators use them

1244
00:54:12,319 --> 00:54:14,559
with caution

1245
00:54:14,559 --> 00:54:17,280
so in most deployments when you want and

1246
00:54:17,280 --> 00:54:18,720
want to bring down a link

1247
00:54:18,720 --> 00:54:21,760
if the constraints are not met it is

1248
00:54:21,760 --> 00:54:22,720
very likely that

1249
00:54:22,720 --> 00:54:26,000
you have alternate paths available

1250
00:54:26,000 --> 00:54:29,760
so yeah so when you use that constraints

1251
00:54:29,760 --> 00:54:33,119
you have to define the

1252
00:54:33,119 --> 00:54:36,160
thresholds as well and make sure that

1253
00:54:36,160 --> 00:54:39,599
the topology is safe for that

1254
00:54:39,599 --> 00:54:41,680
one one more thing regarding bandwidth

1255
00:54:41,680 --> 00:54:42,960
is that the

1256
00:54:42,960 --> 00:54:45,520
bandwidth when you said dynamic

1257
00:54:45,520 --> 00:54:46,559
bandwidth it's

1258
00:54:46,559 --> 00:54:49,839
again the link bandwidth which changes

1259
00:54:49,839 --> 00:54:50,799
only when

1260
00:54:50,799 --> 00:54:54,160
member link can go down so we are

1261
00:54:54,160 --> 00:54:54,880
unfortunately

1262
00:54:54,880 --> 00:54:56,000
with one minute left in this

1263
00:54:56,000 --> 00:54:57,920
presentation uh um is next in the queue

1264
00:54:57,920 --> 00:54:59,040
i don't think we're gonna get through

1265
00:54:59,040 --> 00:55:00,400
everybody else

1266
00:55:00,400 --> 00:55:01,760
i don't know have any way to cut you

1267
00:55:01,760 --> 00:55:03,520
know to end the queue

1268
00:55:03,520 --> 00:55:05,839
in the interface so and i didn't want to

1269
00:55:05,839 --> 00:55:07,760
interrupt so go ahead uma

1270
00:55:07,760 --> 00:55:09,920
okay that's uh thanks thanks chris it's

1271
00:55:09,920 --> 00:55:11,200
very useful draft and

1272
00:55:11,200 --> 00:55:13,839
in some cases uh uh very useful but you

1273
00:55:13,839 --> 00:55:14,319
know

1274
00:55:14,319 --> 00:55:15,920
one thing i would like to see in this

1275
00:55:15,920 --> 00:55:17,359
draft is discussion about

1276
00:55:17,359 --> 00:55:19,599
the changing metrics what is the impact

1277
00:55:19,599 --> 00:55:20,640
of the uh

1278
00:55:20,640 --> 00:55:22,240
packet reordering right so not

1279
00:55:22,240 --> 00:55:24,319
everything really changing right so

1280
00:55:24,319 --> 00:55:27,759
if that is discussed that'll be good

1281
00:55:28,000 --> 00:55:35,839
okay go ahead g

1282
00:55:35,839 --> 00:55:38,319
the interesting topic and i've seen a

1283
00:55:38,319 --> 00:55:40,400
lot of discussion on the main list

1284
00:55:40,400 --> 00:55:42,960
i have maybe two comments the first one

1285
00:55:42,960 --> 00:55:44,000
is the

1286
00:55:44,000 --> 00:55:47,200
imaginative bandwidth metric uh

1287
00:55:47,200 --> 00:55:50,640
the new metric on the bandwidth

1288
00:55:50,640 --> 00:55:53,839
is it tightly coupled with flash algo

1289
00:55:53,839 --> 00:55:59,119
or it's just a generic new metric tle

1290
00:55:59,200 --> 00:56:02,079
right so the uh bandwidth metric uh

1291
00:56:02,079 --> 00:56:03,760
subtle which we have introduced in the

1292
00:56:03,760 --> 00:56:04,960
draft right now

1293
00:56:04,960 --> 00:56:07,520
it's uh generic it's applicable it can

1294
00:56:07,520 --> 00:56:09,920
be used by any application

1295
00:56:09,920 --> 00:56:13,520
as well yeah but is that

1296
00:56:13,520 --> 00:56:16,960
the case maybe it's a

1297
00:56:16,960 --> 00:56:19,359
better to clarify that this can be used

1298
00:56:19,359 --> 00:56:20,480
in

1299
00:56:20,480 --> 00:56:23,119
more general cases and the second one is

1300
00:56:23,119 --> 00:56:24,160
the latency and

1301
00:56:24,160 --> 00:56:27,440
bandwidth constraints uh i'm not sure

1302
00:56:27,440 --> 00:56:28,880
whether they can be treated in the

1303
00:56:28,880 --> 00:56:31,040
similar way because latency you need to

1304
00:56:31,040 --> 00:56:32,240
count

1305
00:56:32,240 --> 00:56:35,040
the accumulated latency for enter and

1306
00:56:35,040 --> 00:56:35,839
pass

1307
00:56:35,839 --> 00:56:38,799
if you just use a constraint as a

1308
00:56:38,799 --> 00:56:40,079
maximum latency

1309
00:56:40,079 --> 00:56:43,440
on a particular link is that really

1310
00:56:43,440 --> 00:56:45,280
what would be the use case for that kind

1311
00:56:45,280 --> 00:56:47,119
of constraint

1312
00:56:47,119 --> 00:56:49,359
right

1313
00:56:50,480 --> 00:56:53,839
right so as i said uh you if you want

1314
00:56:53,839 --> 00:56:57,119
a link delay based traffic you are most

1315
00:56:57,119 --> 00:56:58,640
likely to use

1316
00:56:58,640 --> 00:57:02,160
link delay as the metric type but in a

1317
00:57:02,160 --> 00:57:05,040
any other flexor goes if you want to

1318
00:57:05,040 --> 00:57:06,160
have define

1319
00:57:06,160 --> 00:57:08,559
very high link delay value where you

1320
00:57:08,559 --> 00:57:10,240
want to say that if a single link

1321
00:57:10,240 --> 00:57:12,319
is performing very badly you want to

1322
00:57:12,319 --> 00:57:13,440
exclude that link

1323
00:57:13,440 --> 00:57:16,559
uh from flex sergo so this constraint

1324
00:57:16,559 --> 00:57:17,200
can be used

1325
00:57:17,200 --> 00:57:19,520
in such cases so it's it's definitely

1326
00:57:19,520 --> 00:57:20,240
not inter

1327
00:57:20,240 --> 00:57:22,880
interrupt it's not interfering or

1328
00:57:22,880 --> 00:57:24,559
doesn't have a say in the metric

1329
00:57:24,559 --> 00:57:28,160
value it just is used to exclude

1330
00:57:28,160 --> 00:57:30,480
certain links so you don't just by

1331
00:57:30,480 --> 00:57:32,079
excluding you don't get a

1332
00:57:32,079 --> 00:57:33,680
very good link delay or the shortest

1333
00:57:33,680 --> 00:57:35,760
path based on link delay you just

1334
00:57:35,760 --> 00:57:39,280
can modify your topology or

1335
00:57:39,280 --> 00:57:41,200
remove certain prune certain links from

1336
00:57:41,200 --> 00:57:42,880
the topology

1337
00:57:42,880 --> 00:57:45,520
i hope i answered your question uh

1338
00:57:45,520 --> 00:57:47,599
shadow you go ahead and then i

1339
00:57:47,599 --> 00:57:50,720
i don't know we can't do whoever's last

1340
00:57:50,720 --> 00:57:52,480
yeah so i just wanted to provide

1341
00:57:52,480 --> 00:57:54,720
clarification regarding

1342
00:57:54,720 --> 00:57:59,520
the bandwidth exclude bandwidth

1343
00:57:59,520 --> 00:58:02,880
and exclude delay constraints

1344
00:58:02,880 --> 00:58:05,520
so it's basically a way of excluding

1345
00:58:05,520 --> 00:58:07,119
certain links

1346
00:58:07,119 --> 00:58:10,880
based on dynamic measurements so if the

1347
00:58:10,880 --> 00:58:12,960
measurement is static then we

1348
00:58:12,960 --> 00:58:16,000
really don't need to use come up with

1349
00:58:16,000 --> 00:58:17,839
new constraints because link colors can

1350
00:58:17,839 --> 00:58:18,640
already

1351
00:58:18,640 --> 00:58:21,680
you know do what what is required so

1352
00:58:21,680 --> 00:58:22,880
this is

1353
00:58:22,880 --> 00:58:26,960
specifically to improve uh you know

1354
00:58:26,960 --> 00:58:30,160
operations when these link bandwidths

1355
00:58:30,160 --> 00:58:32,079
are changing dynamically especially when

1356
00:58:32,079 --> 00:58:33,680
in case of l2 bundles

1357
00:58:33,680 --> 00:58:35,440
the bandwidth changes dynamically and

1358
00:58:35,440 --> 00:58:37,200
similarly when

1359
00:58:37,200 --> 00:58:40,559
dynamic delay measurement is used the

1360
00:58:40,559 --> 00:58:43,680
latency of the link changes dynamically

1361
00:58:43,680 --> 00:58:46,319
so with respect to actual measurements

1362
00:58:46,319 --> 00:58:48,559
and how often that is flooded

1363
00:58:48,559 --> 00:58:52,079
the delays are delays get flooded that

1364
00:58:52,079 --> 00:58:53,599
is kind of out of scope for this

1365
00:58:53,599 --> 00:58:54,640
document so

1366
00:58:54,640 --> 00:58:58,319
it's it's mainly saying um you know

1367
00:58:58,319 --> 00:59:00,079
providing an ability to advertise a

1368
00:59:00,079 --> 00:59:01,440
constraint that says

1369
00:59:01,440 --> 00:59:04,400
exclude a certain link which is having

1370
00:59:04,400 --> 00:59:05,440
uh

1371
00:59:05,440 --> 00:59:07,680
you know certain threshold uh delay

1372
00:59:07,680 --> 00:59:09,599
value so that's

1373
00:59:09,599 --> 00:59:11,599
that's pretty much it is doing so i just

1374
00:59:11,599 --> 00:59:12,960
wanted to clarify that

1375
00:59:12,960 --> 00:59:16,480
and yeah we will add the text about

1376
00:59:16,480 --> 00:59:18,720
the clarifications that william provided

1377
00:59:18,720 --> 00:59:20,319
on with respect to

1378
00:59:20,319 --> 00:59:24,799
like if the area partitions because of

1379
00:59:24,799 --> 00:59:27,040
um you know this dynamically changing

1380
00:59:27,040 --> 00:59:27,920
values

1381
00:59:27,920 --> 00:59:30,319
either bandwidth or delay and and what

1382
00:59:30,319 --> 00:59:32,559
operate how operators need to care

1383
00:59:32,559 --> 00:59:36,559
for that thank you thanks

1384
00:59:36,559 --> 00:59:39,280
okay up next who i don't remember who's

1385
00:59:39,280 --> 00:59:41,760
presenting

1386
00:59:44,720 --> 00:59:48,079
or or yeah yeah young jeans

1387
00:59:48,079 --> 00:59:51,040
his audio is on so he must be presenting

1388
00:59:51,040 --> 00:59:52,319
thank you

1389
00:59:52,319 --> 00:59:55,480
i'm team from time telecom my

1390
00:59:55,480 --> 00:59:58,559
presentation is using flex argo for

1391
00:59:58,559 --> 01:00:01,680
the routine based vtn the last meeting

1392
01:00:01,680 --> 01:00:02,559
we have

1393
01:00:02,559 --> 01:00:06,640
we did the uh presentation about

1394
01:00:06,640 --> 01:00:09,839
the first one the uh drafts through

1395
01:00:09,839 --> 01:00:13,520
rsi as it is srvtn flat argo

1396
01:00:13,520 --> 01:00:17,040
version one this time we did

1397
01:00:17,040 --> 01:00:20,079
we revised the draft

1398
01:00:20,079 --> 01:00:23,839
and did this presentation next step

1399
01:00:23,839 --> 01:00:26,160
please

1400
01:00:27,359 --> 01:00:30,480
let's look at the background rvt is a

1401
01:00:30,480 --> 01:00:33,359
virtual underlay network with a

1402
01:00:33,359 --> 01:00:34,559
customized

1403
01:00:34,559 --> 01:00:36,480
technology and a set of network

1404
01:00:36,480 --> 01:00:37,599
resources

1405
01:00:37,599 --> 01:00:40,720
which includes the in draft itft

1406
01:00:40,720 --> 01:00:43,760
enhanced vp as the underlay of

1407
01:00:43,760 --> 01:00:46,960
vpn plus services as

1408
01:00:46,960 --> 01:00:49,839
i saw based vt has described that in

1409
01:00:49,839 --> 01:00:50,319
draft

1410
01:00:50,319 --> 01:00:54,839
itf spring sr4 enhanced the vp

1411
01:00:54,839 --> 01:00:59,119
vpn this pro it provides the

1412
01:00:59,119 --> 01:01:02,160
mechanism and the procedures to build as

1413
01:01:02,160 --> 01:01:03,280
a beast vt

1414
01:01:03,280 --> 01:01:06,559
using resources and this resource where

1415
01:01:06,559 --> 01:01:09,680
a well aware thing

1416
01:01:09,680 --> 01:01:13,200
and in some scenarios each srv team

1417
01:01:13,200 --> 01:01:15,920
can be associated with a unique flight

1418
01:01:15,920 --> 01:01:17,520
argument

1419
01:01:17,520 --> 01:01:20,400
this document describes the flash argo

1420
01:01:20,400 --> 01:01:20,880
based

1421
01:01:20,880 --> 01:01:24,559
control plan control plan mechanism for

1422
01:01:24,559 --> 01:01:26,880
distributing the topology and the

1423
01:01:26,880 --> 01:01:28,960
resource information of isr

1424
01:01:28,960 --> 01:01:33,680
bts next for us please

1425
01:01:33,680 --> 01:01:37,440
next slide please let's look at the

1426
01:01:37,440 --> 01:01:38,720
vector

1427
01:01:38,720 --> 01:01:41,680
plus algorithm is developed at the

1428
01:01:41,680 --> 01:01:42,640
control plane

1429
01:01:42,640 --> 01:01:46,558
identifiers above routine

1430
01:01:47,040 --> 01:01:50,799
but in this part we used

1431
01:01:50,799 --> 01:01:53,680
flat argo to describe the topology

1432
01:01:53,680 --> 01:01:54,640
constraints

1433
01:01:54,640 --> 01:01:57,680
for rvtn and use ada's

1434
01:01:57,680 --> 01:02:01,599
sr to advise our algorithm specific

1435
01:02:01,599 --> 01:02:05,280
prefix is or as availa

1436
01:02:05,280 --> 01:02:08,640
a six locators

1437
01:02:08,960 --> 01:02:12,240
we extended easy r2

1438
01:02:12,240 --> 01:02:14,960
bundle to advise the te attributes

1439
01:02:14,960 --> 01:02:18,319
associated with vt

1440
01:02:18,319 --> 01:02:21,599
that is we use it is r2

1441
01:02:21,599 --> 01:02:25,280
r2 bundle to

1442
01:02:25,280 --> 01:02:28,720
oppose uh

1443
01:02:28,720 --> 01:02:33,359
to extend it for both virtual and

1444
01:02:33,359 --> 01:02:36,078
number links

1445
01:02:37,039 --> 01:02:40,400
in in this in in this in in this

1446
01:02:40,400 --> 01:02:44,160
uh this slide we can you can see that's

1447
01:02:44,160 --> 01:02:44,559
the

1448
01:02:44,559 --> 01:02:47,920
flag intake in this the membranes are

1449
01:02:47,920 --> 01:02:48,720
watching

1450
01:02:48,720 --> 01:02:52,400
that's their fit with the current

1451
01:02:52,400 --> 01:02:55,440
earth region fist each cv team is

1452
01:02:55,440 --> 01:02:58,559
associated with one water or

1453
01:02:58,559 --> 01:03:02,240
special bamboo link in the bundle

1454
01:03:02,240 --> 01:03:05,359
we use the main group that is

1455
01:03:05,359 --> 01:03:08,640
the color of two colored

1456
01:03:08,640 --> 01:03:13,039
car colors that carries the flower and

1457
01:03:13,039 --> 01:03:14,480
the membrane

1458
01:03:14,480 --> 01:03:17,440
the t attributes and the iso ac of the

1459
01:03:17,440 --> 01:03:19,520
membranes belong to the

1460
01:03:19,520 --> 01:03:24,079
victim next class please

1461
01:03:28,960 --> 01:03:33,119
that's the last meeting we present

1462
01:03:33,119 --> 01:03:37,520
uh version one this

1463
01:03:37,520 --> 01:03:42,480
this this time we opted in

1464
01:03:42,559 --> 01:03:45,760
we do some little

1465
01:03:45,760 --> 01:03:49,599
modified modification in its version

1466
01:03:49,599 --> 01:03:53,039
that is we we clarify the limited

1467
01:03:53,039 --> 01:03:55,760
limitations in the usage of atomic group

1468
01:03:55,760 --> 01:03:56,400
concepts

1469
01:03:56,400 --> 01:03:59,119
in flex argo definition where flex

1470
01:03:59,119 --> 01:03:59,920
algorith

1471
01:03:59,920 --> 01:04:03,839
is used to added identify rbt

1472
01:04:03,839 --> 01:04:06,960
each online include any admin group rule

1473
01:04:06,960 --> 01:04:07,440
can be

1474
01:04:07,440 --> 01:04:11,599
used and other these preferences about

1475
01:04:11,599 --> 01:04:12,960
the user of the v

1476
01:04:12,960 --> 01:04:17,359
flag we update the reference to that

1477
01:04:17,359 --> 01:04:23,119
itf spring sr for enhanced vp

1478
01:04:23,200 --> 01:04:26,559
and there are some tutorials

1479
01:04:26,559 --> 01:04:31,280
interesting next slides please

1480
01:04:31,280 --> 01:04:34,720
note that we

1481
01:04:34,720 --> 01:04:41,599
will we will

1482
01:04:41,599 --> 01:04:44,720
we would like to add to work group

1483
01:04:44,720 --> 01:04:48,000
what group adoption for this document

1484
01:04:48,000 --> 01:04:50,319
thanks

1485
01:04:53,599 --> 01:04:56,319
uh tarek

1486
01:04:57,280 --> 01:05:00,559
hi uh this is tariq from juniper um

1487
01:05:00,559 --> 01:05:03,280
my question is uh related to the use of

1488
01:05:03,280 --> 01:05:03,760
flex

1489
01:05:03,760 --> 01:05:07,440
algo to achieve what you're trying to do

1490
01:05:07,440 --> 01:05:10,640
as we know flex algo comes with overhead

1491
01:05:10,640 --> 01:05:13,599
of advertising the definition and then

1492
01:05:13,599 --> 01:05:16,240
knows consuming the definition

1493
01:05:16,240 --> 01:05:20,319
and uh and doing spf

1494
01:05:20,319 --> 01:05:24,640
uh with the respective algorithm

1495
01:05:25,680 --> 01:05:28,319
you will soon realize that you cannot do

1496
01:05:28,319 --> 01:05:30,400
as many flex algorithms as you would

1497
01:05:30,400 --> 01:05:32,400
want

1498
01:05:32,400 --> 01:05:35,440
is there any consideration about

1499
01:05:35,440 --> 01:05:37,039
the ceiling that you will be hitting

1500
01:05:37,039 --> 01:05:40,400
soon with this approach

1501
01:05:40,400 --> 01:05:51,839
yeah that's my question

1502
01:05:56,960 --> 01:05:59,440
i'm not sure if you heard my question i

1503
01:05:59,440 --> 01:06:01,119
it went silent well

1504
01:06:01,119 --> 01:06:04,079
yeah it i he's he's muted right now also

1505
01:06:04,079 --> 01:06:05,200
you're in the queue but you're

1506
01:06:05,200 --> 01:06:07,280
a as a co-author i believe right so you

1507
01:06:07,280 --> 01:06:09,200
can just unmute and answer

1508
01:06:09,200 --> 01:06:12,799
questions the answer that

1509
01:06:12,799 --> 01:06:15,680
uh i think uh regarding the scalability

1510
01:06:15,680 --> 01:06:18,000
in this draft there's a section about

1511
01:06:18,000 --> 01:06:20,480
the scalability considerations which

1512
01:06:20,480 --> 01:06:21,760
talks about the

1513
01:06:21,760 --> 01:06:25,839
possible limitations uh

1514
01:06:25,839 --> 01:06:28,160
using the flat circle id as the

1515
01:06:28,160 --> 01:06:29,119
identifier of the

1516
01:06:29,119 --> 01:06:33,839
vta in the control plane for

1517
01:06:33,839 --> 01:06:35,920
better scalability we also have other

1518
01:06:35,920 --> 01:06:37,760
drafts which

1519
01:06:37,760 --> 01:06:41,280
can support multiple vtns share the same

1520
01:06:41,280 --> 01:06:42,160
topology

1521
01:06:42,160 --> 01:06:44,559
and that one requires some more

1522
01:06:44,559 --> 01:06:46,240
extensions to the control plane

1523
01:06:46,240 --> 01:06:49,200
but maybe we can have some further

1524
01:06:49,200 --> 01:06:51,359
discussion about that topic

1525
01:06:51,359 --> 01:06:54,480
later yeah thanks g just

1526
01:06:54,480 --> 01:06:56,640
why do we care to standardize something

1527
01:06:56,640 --> 01:06:57,760
that we know

1528
01:06:57,760 --> 01:07:01,280
it's not scalable

1529
01:07:01,280 --> 01:07:03,280
yeah we have another draft about the

1530
01:07:03,280 --> 01:07:06,079
scalability considerations in teas

1531
01:07:06,079 --> 01:07:08,160
and because we can see different

1532
01:07:08,160 --> 01:07:09,760
scenarios can have different

1533
01:07:09,760 --> 01:07:12,880
requirements on the scalability and

1534
01:07:12,880 --> 01:07:16,400
we mean and each mechanism has this

1535
01:07:16,400 --> 01:07:19,599
pros and cons in terms of the complexity

1536
01:07:19,599 --> 01:07:22,880
the changes to the protocol and the

1537
01:07:22,880 --> 01:07:26,640
scalability is just one aspect of that

1538
01:07:26,640 --> 01:07:27,839
this seems like something that would be

1539
01:07:27,839 --> 01:07:29,760
good to discuss on the list i think

1540
01:07:29,760 --> 01:07:32,079
it goes to the heart you know the draft

1541
01:07:32,079 --> 01:07:34,480
before we start talking about adoption

1542
01:07:34,480 --> 01:07:37,760
um but uh yeah

1543
01:07:37,760 --> 01:07:40,839
so let's move to peter get two minutes

1544
01:07:40,839 --> 01:07:43,839
left

1545
01:07:45,039 --> 01:07:48,559
okay so i so what you seems to be

1546
01:07:48,559 --> 01:07:50,640
trying to achieve here is to advertise

1547
01:07:50,640 --> 01:07:53,280
the vtn specific information about the

1548
01:07:53,280 --> 01:07:55,119
link

1549
01:07:55,119 --> 01:07:57,200
uh you know i don't question the

1550
01:07:57,200 --> 01:07:58,720
approach that's probably a different

1551
01:07:58,720 --> 01:07:59,839
discussion

1552
01:07:59,839 --> 01:08:01,920
but the way you're trying to do this is

1553
01:08:01,920 --> 01:08:03,680
that you hijack the l2 bundle

1554
01:08:03,680 --> 01:08:05,280
advertisement

1555
01:08:05,280 --> 01:08:06,880
and you are trying to pretend that this

1556
01:08:06,880 --> 01:08:08,559
is some kind of a virtual connection

1557
01:08:08,559 --> 01:08:10,880
which is specific to the vtn

1558
01:08:10,880 --> 01:08:12,720
i'm not sure that's the right approach

1559
01:08:12,720 --> 01:08:15,039
and not and even the worst thing i see

1560
01:08:15,039 --> 01:08:15,920
is that

1561
01:08:15,920 --> 01:08:18,399
there is no direct information about the

1562
01:08:18,399 --> 01:08:20,319
vtn

1563
01:08:20,319 --> 01:08:23,120
for which you advertise this information

1564
01:08:23,120 --> 01:08:24,880
you have to specify

1565
01:08:24,880 --> 01:08:28,080
some specific admin groups that are

1566
01:08:28,080 --> 01:08:30,319
matching the flexible definition

1567
01:08:30,319 --> 01:08:32,960
to pair this type of information i don't

1568
01:08:32,960 --> 01:08:33,920
think that's the right

1569
01:08:33,920 --> 01:08:37,040
way of encoding the things this is a

1570
01:08:37,040 --> 01:08:38,719
very error prone

1571
01:08:38,719 --> 01:08:41,839
and i i would not prefer people doing

1572
01:08:41,839 --> 01:08:43,439
that i mean if you want to advertise a

1573
01:08:43,439 --> 01:08:45,279
beating specific stuff

1574
01:08:45,279 --> 01:08:47,759
define a bitching specific information

1575
01:08:47,759 --> 01:08:48,799
and put it there

1576
01:08:48,799 --> 01:08:50,719
and don't hijack the existing ones and

1577
01:08:50,719 --> 01:08:52,719
then map it via some you know

1578
01:08:52,719 --> 01:08:56,319
set by the value so that is my comment

1579
01:08:56,319 --> 01:08:57,600
here

1580
01:08:57,600 --> 01:09:00,000
so uh as a working group member i when i

1581
01:09:00,000 --> 01:09:01,759
read this draft when i saw the admin

1582
01:09:01,759 --> 01:09:03,759
color use i was hoping to see that this

1583
01:09:03,759 --> 01:09:04,960
was just going to be able to be

1584
01:09:04,960 --> 01:09:06,560
informational right

1585
01:09:06,560 --> 01:09:08,640
so when i see admin color being used a

1586
01:09:08,640 --> 01:09:09,839
lot of times it's

1587
01:09:09,839 --> 01:09:11,359
because we're going to reuse mechanisms

1588
01:09:11,359 --> 01:09:12,719
without having to do any normative

1589
01:09:12,719 --> 01:09:14,479
changes

1590
01:09:14,479 --> 01:09:16,880
anyway i can't read the name

1591
01:09:16,880 --> 01:09:18,158
unfortunately

1592
01:09:18,158 --> 01:09:21,439
it's z but it's too cut off in my

1593
01:09:21,439 --> 01:09:22,000
display

1594
01:09:22,000 --> 01:09:27,040
you can go ahead from the cube

1595
01:09:29,679 --> 01:09:33,679
you mean robin yeah i think so i

1596
01:09:33,679 --> 01:09:35,359
literally i only have two pixels of the

1597
01:09:35,359 --> 01:09:36,880
names displaying on my screen so it's

1598
01:09:36,880 --> 01:09:39,199
hard

1599
01:09:39,920 --> 01:09:49,279
go ahead robin

1600
01:09:49,279 --> 01:09:52,158
okay maybe it wasn't okay before robin

1601
01:09:52,158 --> 01:09:53,439
can talk i

1602
01:09:53,439 --> 01:09:57,120
can i briefly answer peter's comments

1603
01:09:57,120 --> 01:10:00,159
and the way we choose to reuse the admin

1604
01:10:00,159 --> 01:10:01,280
group and

1605
01:10:01,280 --> 01:10:05,440
to correlate with the flux algo id is

1606
01:10:05,440 --> 01:10:07,360
based on the existing flux organ

1607
01:10:07,360 --> 01:10:09,280
mechanism to correlate a link

1608
01:10:09,280 --> 01:10:11,360
with the flight cycle definition this is

1609
01:10:11,360 --> 01:10:14,239
to minimize the changes to the protocol

1610
01:10:14,239 --> 01:10:17,600
if we introduce a dedicated identifier

1611
01:10:17,600 --> 01:10:19,679
for atm that is another approach that

1612
01:10:19,679 --> 01:10:20,560
will

1613
01:10:20,560 --> 01:10:23,280
require more protocol extensions and we

1614
01:10:23,280 --> 01:10:24,080
can

1615
01:10:24,080 --> 01:10:26,000
we can also consider about that if

1616
01:10:26,000 --> 01:10:27,760
people think the flash algo base the

1617
01:10:27,760 --> 01:10:31,040
correlation is error prone

1618
01:10:31,040 --> 01:10:35,040
and that is what uh flat algo is defined

1619
01:10:35,040 --> 01:10:36,560
uh i definitely think this is good for

1620
01:10:36,560 --> 01:10:40,159
the list by the way i it's because

1621
01:10:40,159 --> 01:10:41,520
i think people might have opinions on

1622
01:10:41,520 --> 01:10:45,840
both sides

1623
01:10:47,120 --> 01:10:50,480
yes thank you uh next up is the l2

1624
01:10:50,480 --> 01:10:52,959
bundles

1625
01:10:55,760 --> 01:10:59,840
also with the normative bit

1626
01:11:04,320 --> 01:11:07,360
hi can you hear me yes

1627
01:11:07,360 --> 01:11:10,800
yes yes hello everyone i'm

1628
01:11:10,800 --> 01:11:14,320
from zte today i will talk about igp

1629
01:11:14,320 --> 01:11:17,760
flexible algorithm without bottles

1630
01:11:17,760 --> 01:11:20,480
next please

1631
01:11:23,280 --> 01:11:27,280
yes this is the motor reasons this draft

1632
01:11:27,280 --> 01:11:30,320
describes how to create flexago with lt

1633
01:11:30,320 --> 01:11:31,280
bundles

1634
01:11:31,280 --> 01:11:35,759
a scenario next please

1635
01:11:37,440 --> 01:11:40,000
this is for idp outbound member

1636
01:11:40,000 --> 01:11:42,719
extensions

1637
01:11:43,800 --> 01:11:45,040
rfc86668

1638
01:11:45,040 --> 01:11:48,239
defined tre25 for sas to

1639
01:11:48,239 --> 01:11:51,360
advertise the link attribute of

1640
01:11:51,360 --> 01:11:54,239
our two bundle members and missing that

1641
01:11:54,239 --> 01:11:56,560
the traditional administrative

1642
01:11:56,560 --> 01:11:59,320
groups of troa and extended

1643
01:11:59,320 --> 01:12:01,760
administrative groups of tree may

1644
01:12:01,760 --> 01:12:05,600
appear in trua 25 and may be shared by

1645
01:12:05,600 --> 01:12:09,600
multiple l2 bundle members if we want to

1646
01:12:09,600 --> 01:12:10,560
advertise

1647
01:12:10,560 --> 01:12:13,920
unique extended administrative total

1648
01:12:13,920 --> 01:12:14,640
group

1649
01:12:14,640 --> 01:12:17,840
values for each bundle a member we can

1650
01:12:17,840 --> 01:12:18,239
use

1651
01:12:18,239 --> 01:12:22,159
multiple l to bundle attribute crafters

1652
01:12:22,159 --> 01:12:24,640
which is specified a single bundle

1653
01:12:24,640 --> 01:12:25,760
members

1654
01:12:25,760 --> 01:12:29,440
uh no extensions is needed and the

1655
01:12:29,440 --> 01:12:33,679
uh lsr ospf bundles draft

1656
01:12:33,679 --> 01:12:36,400
also defined how to members attribute

1657
01:12:36,400 --> 01:12:38,480
subtree for ospf

1658
01:12:38,480 --> 01:12:42,560
or spf worsens 3 to advertise the link

1659
01:12:42,560 --> 01:12:43,280
attribute

1660
01:12:43,280 --> 01:12:46,480
of l2 bundle members and

1661
01:12:46,480 --> 01:12:49,920
mentioned that the traditional main

1662
01:12:49,920 --> 01:12:53,040
other main choice administrative group

1663
01:12:53,040 --> 01:12:54,320
sub troa

1664
01:12:54,320 --> 01:12:57,600
and extended and minus 20 group sub tier

1665
01:12:57,600 --> 01:12:58,320
way

1666
01:12:58,320 --> 01:13:02,080
uh may be content in our bundle members

1667
01:13:02,080 --> 01:13:02,800
attributes

1668
01:13:02,800 --> 01:13:06,320
of troy because there is l2 about no

1669
01:13:06,320 --> 01:13:08,640
member attribute subtrov

1670
01:13:08,640 --> 01:13:11,600
for l2 bundle member it is also a

1671
01:13:11,600 --> 01:13:12,719
sufficient

1672
01:13:12,719 --> 01:13:16,320
uh to construct flash aggro plan

1673
01:13:16,320 --> 01:13:19,840
to select how to uh link resource

1674
01:13:19,840 --> 01:13:22,960
um uh but uh

1675
01:13:22,960 --> 01:13:26,239
is this draft we only extend uh flash

1676
01:13:26,239 --> 01:13:26,960
argo

1677
01:13:26,960 --> 01:13:30,239
definition flags uh we obtained a new

1678
01:13:30,239 --> 01:13:31,040
flag

1679
01:13:31,040 --> 01:13:34,560
of is this a flight circle

1680
01:13:34,560 --> 01:13:38,080
definition of flight sub troy and the

1681
01:13:38,080 --> 01:13:42,719
ospf of uh id flight subtle away

1682
01:13:42,719 --> 01:13:46,719
to let each node to check out members

1683
01:13:46,719 --> 01:13:47,920
link resources

1684
01:13:47,920 --> 01:13:51,280
of interface bundle uh dual reflex

1685
01:13:51,280 --> 01:13:52,320
algorithm

1686
01:13:52,320 --> 01:13:55,360
uh past calculus uh next

1687
01:13:55,360 --> 01:13:57,679
please

1688
01:13:59,280 --> 01:14:02,239
uh history uh we some uh submit the

1689
01:14:02,239 --> 01:14:03,199
worst in zero

1690
01:14:03,199 --> 01:14:06,400
zero in december 2019

1691
01:14:06,400 --> 01:14:09,840
and uh the following updates were made

1692
01:14:09,840 --> 01:14:13,280
in washington zero uh what uh

1693
01:14:13,280 --> 01:14:15,840
the first days we remove out bundle

1694
01:14:15,840 --> 01:14:16,800
members

1695
01:14:16,800 --> 01:14:20,400
extended and minutes 20 group activities

1696
01:14:20,400 --> 01:14:22,719
at the second days we yield which we use

1697
01:14:22,719 --> 01:14:25,440
l2 boundary members attribute tre

1698
01:14:25,440 --> 01:14:28,480
subtly with traditional administrative

1699
01:14:28,480 --> 01:14:31,800
uh group sub-tree and extended

1700
01:14:31,800 --> 01:14:34,640
administrative groups of troa based on

1701
01:14:34,640 --> 01:14:36,400
this class on iosa

1702
01:14:36,400 --> 01:14:39,920
a minute and the washing

1703
01:14:39,920 --> 01:14:42,960
zero three and zero four

1704
01:14:42,960 --> 01:14:45,520
we add the flashlight go out to bundles

1705
01:14:45,520 --> 01:14:46,480
use cases

1706
01:14:46,480 --> 01:14:51,280
and add the uh fad flex expenses

1707
01:14:51,280 --> 01:14:54,880
in version zero five we add co

1708
01:14:54,880 --> 01:14:58,159
also yum ting from china telecom

1709
01:14:58,159 --> 01:15:01,600
and some more editorial uh

1710
01:15:01,600 --> 01:15:06,719
changes um next please as

1711
01:15:07,679 --> 01:15:11,120
uh comments welcome and this draft is

1712
01:15:11,120 --> 01:15:14,159
in stable state uh you

1713
01:15:14,159 --> 01:15:17,360
worship uh watching their raffle and

1714
01:15:17,360 --> 01:15:18,640
other authors

1715
01:15:18,640 --> 01:15:20,719
would like to ask for working group

1716
01:15:20,719 --> 01:15:22,000
adoptions

1717
01:15:22,000 --> 01:15:25,840
uh that's all thank you

1718
01:15:26,239 --> 01:15:28,559
peter

1719
01:15:31,280 --> 01:15:35,920
okay so my very basic comment here is

1720
01:15:35,920 --> 01:15:38,239
uh i mean as one of the co-authors of

1721
01:15:38,239 --> 01:15:41,199
the of the flex algo

1722
01:15:41,199 --> 01:15:45,760
specification we never attempt to use

1723
01:15:45,760 --> 01:15:51,360
l2 links in the flex algo calculations

1724
01:15:51,360 --> 01:15:54,480
uh i'm i'm basically asking what is this

1725
01:15:54,480 --> 01:15:55,600
something we want to do

1726
01:15:55,600 --> 01:15:57,679
i guess the right solution for this is

1727
01:15:57,679 --> 01:15:58,800
an uh

1728
01:15:58,800 --> 01:16:02,400
srte where the srte can use

1729
01:16:02,400 --> 01:16:04,080
all sorts of information to do the

1730
01:16:04,080 --> 01:16:06,480
constraint based spf

1731
01:16:06,480 --> 01:16:08,640
it is possible to do it inside the flex

1732
01:16:08,640 --> 01:16:11,199
holder i'm not saying it's impossible

1733
01:16:11,199 --> 01:16:14,560
i would try to keep the lb the flex algo

1734
01:16:14,560 --> 01:16:16,560
calculation

1735
01:16:16,560 --> 01:16:20,560
being l3 specific and not being used l2

1736
01:16:20,560 --> 01:16:21,840
information

1737
01:16:21,840 --> 01:16:24,080
so i guess the right solution for this

1738
01:16:24,080 --> 01:16:25,679
is the user

1739
01:16:25,679 --> 01:16:29,520
te not the flex model

1740
01:16:30,400 --> 01:16:33,600
um thank you peter thank you very much

1741
01:16:33,600 --> 01:16:37,280
thanks for your comments yes

1742
01:16:37,280 --> 01:16:40,320
you have seen some mails and we have

1743
01:16:40,320 --> 01:16:44,080
we have discussed it but i still think

1744
01:16:44,080 --> 01:16:47,360
uh the problem that

1745
01:16:47,360 --> 01:16:50,080
flash ago uses for outbundles needs to

1746
01:16:50,080 --> 01:16:52,400
be solved

1747
01:16:52,400 --> 01:16:56,080
in section 5 we described describes

1748
01:16:56,080 --> 01:16:58,960
the flight circle boundary use case and

1749
01:16:58,960 --> 01:17:00,400
examples

1750
01:17:00,400 --> 01:17:03,920
yes i think we can discuss it we hope to

1751
01:17:03,920 --> 01:17:04,239
get

1752
01:17:04,239 --> 01:17:06,880
more comments to solve this problem

1753
01:17:06,880 --> 01:17:09,120
together thank you

1754
01:17:09,120 --> 01:17:12,000
yeah it might be good if people um

1755
01:17:12,000 --> 01:17:13,440
there's already been some discussion on

1756
01:17:13,440 --> 01:17:14,320
the list but

1757
01:17:14,320 --> 01:17:16,880
if you have strong opinions about this

1758
01:17:16,880 --> 01:17:18,800
please post them on the list

1759
01:17:18,800 --> 01:17:22,080
all right good luck thank you thank you

1760
01:17:22,080 --> 01:17:31,840
thank you

1761
01:17:32,080 --> 01:17:35,120
igp adjacency sid advertisement

1762
01:17:35,120 --> 01:17:45,840
right yeah yep

1763
01:17:55,360 --> 01:17:58,719
yeah um

1764
01:17:58,719 --> 01:18:02,400
this is talk about uh algorithms related

1765
01:18:02,400 --> 01:18:05,920
idp as you see said advantage meant

1766
01:18:05,920 --> 01:18:08,719
next please

1767
01:18:11,120 --> 01:18:15,040
most recent uh algorithm identifier is

1768
01:18:15,040 --> 01:18:16,239
often included

1769
01:18:16,239 --> 01:18:19,920
as part of a prefix state advertisement

1770
01:18:19,920 --> 01:18:23,360
that may be not satisfy some scenarios

1771
01:18:23,360 --> 01:18:26,800
where multiple algorithms here the same

1772
01:18:26,800 --> 01:18:27,360
link

1773
01:18:27,360 --> 01:18:30,719
results this document complement

1774
01:18:30,719 --> 01:18:33,600
that the algorithm identifier can be

1775
01:18:33,600 --> 01:18:34,880
also included

1776
01:18:34,880 --> 01:18:38,640
as part of agency advertisement

1777
01:18:38,640 --> 01:18:41,040
the method introduced in this draft

1778
01:18:41,040 --> 01:18:43,199
enables the traffic of different flight

1779
01:18:43,199 --> 01:18:44,320
cycle plans

1780
01:18:44,320 --> 01:18:47,520
to be distinguished on the same link so

1781
01:18:47,520 --> 01:18:49,920
that this traffic can be applied with

1782
01:18:49,920 --> 01:18:50,480
different

1783
01:18:50,480 --> 01:18:54,080
queues police policy for algorithm

1784
01:18:54,080 --> 01:18:56,800
next please

1785
01:18:58,960 --> 01:19:03,040
obviously 8667 describes

1786
01:19:03,040 --> 01:19:06,080
the existences that need need to be

1787
01:19:06,080 --> 01:19:07,040
introduced

1788
01:19:07,040 --> 01:19:10,480
for the resulting operating on a mpi

1789
01:19:10,480 --> 01:19:11,440
state plan

1790
01:19:11,440 --> 01:19:14,239
at a defined agency said sub-tre

1791
01:19:14,239 --> 01:19:16,560
underlying agency sub-troa

1792
01:19:16,560 --> 01:19:19,600
according this draft defense defines

1793
01:19:19,600 --> 01:19:22,960
two new optional subtitle base

1794
01:19:22,960 --> 01:19:27,280
is this uh agency for algorithms of tree

1795
01:19:27,280 --> 01:19:31,120
and is this uh lan

1796
01:19:31,120 --> 01:19:34,840
at this adjacent seat for algorithms of

1797
01:19:34,840 --> 01:19:37,280
tree

1798
01:19:37,280 --> 01:19:40,320
this is the exists as

1799
01:19:40,320 --> 01:19:42,960
you see the algorithm subtlety has the

1800
01:19:42,960 --> 01:19:43,679
volume

1801
01:19:43,679 --> 01:19:46,960
format the algorithm field contains the

1802
01:19:46,960 --> 01:19:48,239
identifier of the

1803
01:19:48,239 --> 01:19:52,080
algorithm the router uses to apply

1804
01:19:52,080 --> 01:19:55,440
algorithms specific cues policy config

1805
01:19:55,440 --> 01:19:58,719
agency and the seed label

1806
01:19:58,719 --> 01:20:02,159
index and the weight fields refer to

1807
01:20:02,159 --> 01:20:05,679
the audiences it stopped your way

1808
01:20:05,679 --> 01:20:08,960
and the payload below is the format of

1809
01:20:08,960 --> 01:20:12,400
the live agency seat it it it also

1810
01:20:12,400 --> 01:20:15,440
extends a flat algorithm

1811
01:20:15,440 --> 01:20:20,320
field um next place

1812
01:20:20,960 --> 01:20:22,400
so can we uh if these are just

1813
01:20:22,400 --> 01:20:24,159
replications for the three protocols can

1814
01:20:24,159 --> 01:20:24,560
we go

1815
01:20:24,560 --> 01:20:28,880
past them are they the same tlb right

1816
01:20:28,880 --> 01:20:31,920
yes the system yeah next uh

1817
01:20:31,920 --> 01:20:34,800
we request review and feedback from

1818
01:20:34,800 --> 01:20:35,679
working group

1819
01:20:35,679 --> 01:20:38,639
that's all thank you

1820
01:20:39,040 --> 01:20:42,159
uh tony you're in the queue thank you

1821
01:20:42,159 --> 01:20:45,440
um so you know we already have ample

1822
01:20:45,440 --> 01:20:47,840
mechanisms within flex algo for

1823
01:20:47,840 --> 01:20:50,719
doing link assignment to an algorithm

1824
01:20:50,719 --> 01:20:53,199
such as administrative coloring

1825
01:20:53,199 --> 01:21:01,839
why do we need this

1826
01:21:02,400 --> 01:21:05,760
crickets ron you're with muted yeah

1827
01:21:05,760 --> 01:21:09,120
yeah uh yes uh

1828
01:21:09,120 --> 01:21:12,560
in the most recent house uh reduced

1829
01:21:12,560 --> 01:21:17,120
that algorithm identifier is often

1830
01:21:17,120 --> 01:21:20,159
uh included as part of a prefix seed

1831
01:21:20,159 --> 01:21:21,120
advantage but

1832
01:21:21,120 --> 01:21:23,760
not satisfied some scenarios where

1833
01:21:23,760 --> 01:21:26,840
multiple algorithms use the same link

1834
01:21:26,840 --> 01:21:30,239
resources so we extend

1835
01:21:30,239 --> 01:21:33,040
this draft

1836
01:21:35,040 --> 01:21:38,320
i'm not following you but okay

1837
01:21:39,600 --> 01:21:43,280
okay thank you well why don't you post

1838
01:21:43,280 --> 01:21:43,679
that

1839
01:21:43,679 --> 01:21:45,040
i mean if you don't mind uh why don't

1840
01:21:45,040 --> 01:21:46,800
you raise that a question again so i can

1841
01:21:46,800 --> 01:21:50,000
have more discussion tony

1842
01:21:52,239 --> 01:21:55,280
on the list i meant

1843
01:21:55,360 --> 01:21:57,839
okay

1844
01:22:10,719 --> 01:22:13,360
yeah just

1845
01:22:13,920 --> 01:22:17,520
getting better yeah

1846
01:22:17,520 --> 01:22:19,280
i'm sorry i might have cut people off

1847
01:22:19,280 --> 01:22:21,679
too in an effort to move it along

1848
01:22:21,679 --> 01:22:23,920
no it's okay we need to make up some

1849
01:22:23,920 --> 01:22:24,800
time yeah

1850
01:22:24,800 --> 01:22:27,920
tariq stark

1851
01:22:27,920 --> 01:22:32,320
um everybody um my name is tarek saad

1852
01:22:32,320 --> 01:22:35,440
and i'm going to talk to you about some

1853
01:22:35,440 --> 01:22:36,639
extensions

1854
01:22:36,639 --> 01:22:39,920
for segment routing uh sids

1855
01:22:39,920 --> 01:22:42,239
that are advertised in igp to associate

1856
01:22:42,239 --> 01:22:43,040
them with

1857
01:22:43,040 --> 01:22:46,080
slice aggregates this hopefully this is

1858
01:22:46,080 --> 01:22:47,440
going to be very quick

1859
01:22:47,440 --> 01:22:51,199
uh presentation um so please move to the

1860
01:22:51,199 --> 01:22:53,839
next slide

1861
01:22:55,040 --> 01:22:56,880
so i'll talk a little bit i'll give

1862
01:22:56,880 --> 01:22:58,719
pointers in fact about the overview

1863
01:22:58,719 --> 01:23:01,440
and then the encodings uh very quickly

1864
01:23:01,440 --> 01:23:01,920
and then

1865
01:23:01,920 --> 01:23:03,840
i'll mention the next steps the next

1866
01:23:03,840 --> 01:23:06,719
slide please

1867
01:23:06,719 --> 01:23:10,560
so in the first draft uh ns packet

1868
01:23:10,560 --> 01:23:13,440
uh we are introducing two new concepts

1869
01:23:13,440 --> 01:23:14,719
uh the the

1870
01:23:14,719 --> 01:23:16,880
a slice policy which is used in

1871
01:23:16,880 --> 01:23:18,239
instantiate

1872
01:23:18,239 --> 01:23:21,360
resources for a slice aggregate and a

1873
01:23:21,360 --> 01:23:22,719
slice aggregate

1874
01:23:22,719 --> 01:23:24,880
is a collection of packets that get the

1875
01:23:24,880 --> 01:23:26,719
same forwarding treatment

1876
01:23:26,719 --> 01:23:29,920
on a uh on a on a shared resource

1877
01:23:29,920 --> 01:23:33,040
uh this this draft will be presented

1878
01:23:33,040 --> 01:23:36,000
on tuesday in the tees working group in

1879
01:23:36,000 --> 01:23:38,800
case you want to follow that

1880
01:23:38,800 --> 01:23:42,000
the second draft is the scalable ns it's

1881
01:23:42,000 --> 01:23:44,239
it's a spring working group sorry it's a

1882
01:23:44,239 --> 01:23:45,520
spring draft

1883
01:23:45,520 --> 01:23:47,440
uh it will hopefully become a working

1884
01:23:47,440 --> 01:23:49,199
group draft um

1885
01:23:49,199 --> 01:23:52,400
but uh it's a it's proposing how do we

1886
01:23:52,400 --> 01:23:53,120
create

1887
01:23:53,120 --> 01:23:56,159
or instantiate these slice aggregates in

1888
01:23:56,159 --> 01:23:57,840
an sr network

1889
01:23:57,840 --> 01:24:01,040
um and one of the options proposed is to

1890
01:24:01,040 --> 01:24:02,080
allocate different

1891
01:24:02,080 --> 01:24:06,480
sets for the same topological element

1892
01:24:06,480 --> 01:24:10,560
and associate it with a slice aggregate

1893
01:24:10,560 --> 01:24:13,840
and again packets forwarded with that

1894
01:24:13,840 --> 01:24:16,400
a specific sid associated with the slice

1895
01:24:16,400 --> 01:24:17,360
aggregate

1896
01:24:17,360 --> 01:24:20,880
uh it gets the forwarding treatment

1897
01:24:20,880 --> 01:24:23,199
uh that was allocated or uh yeah

1898
01:24:23,199 --> 01:24:24,480
allocated for that

1899
01:24:24,480 --> 01:24:28,560
slice aggregate on uh on the path

1900
01:24:28,560 --> 01:24:31,600
next slide please so for this we

1901
01:24:31,600 --> 01:24:36,080
need to uh uh in an rfc 8667

1902
01:24:36,080 --> 01:24:39,840
uh uh the encodings for the sids

1903
01:24:39,840 --> 01:24:43,120
prefixed and jccc sets

1904
01:24:43,120 --> 01:24:46,560
are defined uh we need uh to carry a new

1905
01:24:46,560 --> 01:24:47,520
identifier

1906
01:24:47,520 --> 01:24:50,960
and and those uh um tlvs

1907
01:24:50,960 --> 01:24:53,280
for the prefix said and adjacency said

1908
01:24:53,280 --> 01:24:54,560
it's a 32-bit

1909
01:24:54,560 --> 01:24:57,920
uh identifier that we are proposing to

1910
01:24:57,920 --> 01:24:58,719
carry

1911
01:24:58,719 --> 01:25:02,480
in the advertisement and using this

1912
01:25:02,480 --> 01:25:06,320
we can advertise different indices

1913
01:25:06,320 --> 01:25:09,840
for the same prefix and then that will

1914
01:25:09,840 --> 01:25:12,239
result in srmpls to different labels

1915
01:25:12,239 --> 01:25:15,280
resolved in the srgb again the

1916
01:25:15,280 --> 01:25:16,480
forwarding treatment

1917
01:25:16,480 --> 01:25:19,520
is defined in the slice policy which is

1918
01:25:19,520 --> 01:25:20,400
outside the

1919
01:25:20,400 --> 01:25:24,159
igp extensions here those are defined in

1920
01:25:24,159 --> 01:25:26,880
the other draft

1921
01:25:26,880 --> 01:25:29,360
next slide please so this is similarly

1922
01:25:29,360 --> 01:25:30,080
for a uh

1923
01:25:30,080 --> 01:25:33,600
jcc said tlv we are proposing to add

1924
01:25:33,600 --> 01:25:36,000
this 32-bit identifier

1925
01:25:36,000 --> 01:25:39,360
and in this way we can associate

1926
01:25:39,360 --> 01:25:40,560
multiple

1927
01:25:40,560 --> 01:25:43,920
sids to the same adjacency for

1928
01:25:43,920 --> 01:25:47,440
different slice aggregates

1929
01:25:48,239 --> 01:25:50,639
next slide please thank you and next

1930
01:25:50,639 --> 01:25:54,960
year we are talking about the srv6

1931
01:25:55,360 --> 01:25:58,639
instantiations of sids and we

1932
01:25:58,639 --> 01:26:02,159
we specifically for the nsid

1933
01:26:02,159 --> 01:26:05,360
the base draft for srv6 igp as our v6

1934
01:26:05,360 --> 01:26:06,960
extensions talks about a

1935
01:26:06,960 --> 01:26:10,400
optional sub sub tlv and we using the

1936
01:26:10,400 --> 01:26:11,360
same we are

1937
01:26:11,360 --> 01:26:15,040
proposing a an optional sub sub tld

1938
01:26:15,040 --> 01:26:17,520
that carries this slice aggregate id

1939
01:26:17,520 --> 01:26:21,120
again it's a 32 bit identifier

1940
01:26:21,120 --> 01:26:23,520
so the objective a very high level is to

1941
01:26:23,520 --> 01:26:24,800
associate a sid

1942
01:26:24,800 --> 01:26:27,760
with a slice aggregate uh using this

1943
01:26:27,760 --> 01:26:29,760
32-bit identifier

1944
01:26:29,760 --> 01:26:32,400
and the specific treatment is defined

1945
01:26:32,400 --> 01:26:34,239
using a slice policy which is outside

1946
01:26:34,239 --> 01:26:36,000
the scope of this draft

1947
01:26:36,000 --> 01:26:38,159
and i think that's about it of what i

1948
01:26:38,159 --> 01:26:39,679
wanted to

1949
01:26:39,679 --> 01:26:42,480
technically present in terms of next

1950
01:26:42,480 --> 01:26:44,320
steps

1951
01:26:44,320 --> 01:26:46,719
this is the initial draft we welcome

1952
01:26:46,719 --> 01:26:49,120
review and comments

1953
01:26:49,120 --> 01:26:51,600
we did not define the ospf encodings in

1954
01:26:51,600 --> 01:26:52,159
this

1955
01:26:52,159 --> 01:26:54,159
version of the draft so subsequent

1956
01:26:54,159 --> 01:26:55,199
versions will

1957
01:26:55,199 --> 01:26:57,839
include that

1958
01:26:59,360 --> 01:27:05,839
and uh any questions you're welcome

1959
01:27:07,360 --> 01:27:09,040
i don't have any questions just as a

1960
01:27:09,040 --> 01:27:10,719
working group chair i

1961
01:27:10,719 --> 01:27:13,840
i i think that the whole

1962
01:27:13,840 --> 01:27:18,320
uh slice egg the slice slice

1963
01:27:18,320 --> 01:27:20,880
e would need to be adopted in keys first

1964
01:27:20,880 --> 01:27:22,800
right you're targeting that

1965
01:27:22,800 --> 01:27:25,199
and this concept and whether or not this

1966
01:27:25,199 --> 01:27:26,639
concept of a splice

1967
01:27:26,639 --> 01:27:29,920
aggregate is the right one to satisfy

1968
01:27:29,920 --> 01:27:32,560
the requirements that's uh before we

1969
01:27:32,560 --> 01:27:35,920
just jump to the encodings yeah

1970
01:27:35,920 --> 01:27:38,800
we definitely we are going to push for

1971
01:27:38,800 --> 01:27:40,719
adoption of the uh

1972
01:27:40,719 --> 01:27:43,280
the draft that we're presenting in teas

1973
01:27:43,280 --> 01:27:44,159
and uh

1974
01:27:44,159 --> 01:27:46,719
for the slice aggregate definition and

1975
01:27:46,719 --> 01:27:47,520
and uh

1976
01:27:47,520 --> 01:27:49,920
slice policy those we are going to work

1977
01:27:49,920 --> 01:27:51,360
with the

1978
01:27:51,360 --> 01:27:53,600
people driving the framework for slicing

1979
01:27:53,600 --> 01:27:54,639
and

1980
01:27:54,639 --> 01:27:58,840
try to include those terms in there as

1981
01:27:58,840 --> 01:28:00,480
well

1982
01:28:00,480 --> 01:28:03,679
peter so so

1983
01:28:03,679 --> 01:28:06,880
how many of these uh slice aggregates

1984
01:28:06,880 --> 01:28:08,080
are we talking about

1985
01:28:08,080 --> 01:28:09,440
because you just mentioned that flex

1986
01:28:09,440 --> 01:28:11,280
algae doesn't scale it's uh

1987
01:28:11,280 --> 01:28:13,840
if we wanted too many of the slices

1988
01:28:13,840 --> 01:28:15,199
which you know i tend to agree

1989
01:28:15,199 --> 01:28:17,520
it's not 400 of them so how many of

1990
01:28:17,520 --> 01:28:19,360
these slice aggregates are you expecting

1991
01:28:19,360 --> 01:28:21,520
to have

1992
01:28:21,520 --> 01:28:23,440
so that's a good question and i don't

1993
01:28:23,440 --> 01:28:25,840
claim to have the final answer on it but

1994
01:28:25,840 --> 01:28:27,600
we've heard from different customers

1995
01:28:27,600 --> 01:28:29,520
different requirements

1996
01:28:29,520 --> 01:28:31,679
we have to be realistic we're shooting

1997
01:28:31,679 --> 01:28:33,760
something in the

1998
01:28:33,760 --> 01:28:37,120
order of you know more order of hundreds

1999
01:28:37,120 --> 01:28:38,320
to a thousand

2000
01:28:38,320 --> 01:28:41,280
uh slice aggregates within the transport

2001
01:28:41,280 --> 01:28:42,560
network

2002
01:28:42,560 --> 01:28:44,480
uh the the point that we're the our

2003
01:28:44,480 --> 01:28:46,560
proposal we want to decouple

2004
01:28:46,560 --> 01:28:49,120
the computation as as you saw the you

2005
01:28:49,120 --> 01:28:51,040
know i did not mention any flex i'll go

2006
01:28:51,040 --> 01:28:51,360
uh

2007
01:28:51,360 --> 01:28:54,880
it's uh it's yeah

2008
01:28:54,880 --> 01:28:58,239
um it does not impact the uh

2009
01:28:58,239 --> 01:29:02,000
computation of the next hop by igp um

2010
01:29:02,000 --> 01:29:04,480
but i i don't have the final answer on

2011
01:29:04,480 --> 01:29:05,840
the number of

2012
01:29:05,840 --> 01:29:07,760
slice aggregates that will be present in

2013
01:29:07,760 --> 01:29:09,679
the network but we want to be

2014
01:29:09,679 --> 01:29:12,719
keep it up uh keep keep our options open

2015
01:29:12,719 --> 01:29:16,719
in terms of scalability well you're just

2016
01:29:16,719 --> 01:29:18,560
advertising hundreds or thousands of

2017
01:29:18,560 --> 01:29:20,080
these

2018
01:29:20,080 --> 01:29:23,679
yeah it could be

2019
01:29:23,679 --> 01:29:26,719
hundreds of uh uh

2020
01:29:26,719 --> 01:29:29,600
sisa ids so you'll have uh yeah that's

2021
01:29:29,600 --> 01:29:30,239
what not

2022
01:29:30,239 --> 01:29:33,280
uh prefix sids will be bigger than that

2023
01:29:33,280 --> 01:29:35,280
right

2024
01:29:35,280 --> 01:29:38,320
depends on the size of the network

2025
01:29:38,320 --> 01:29:41,600
yeah okay well i guess uh

2026
01:29:41,600 --> 01:29:43,360
you know we understand each other and

2027
01:29:43,360 --> 01:29:44,719
the concerns

2028
01:29:44,719 --> 01:29:46,400
just yeah yeah i just i i want to

2029
01:29:46,400 --> 01:29:48,320
complete it off but by mentioning that

2030
01:29:48,320 --> 01:29:48,880
the

2031
01:29:48,880 --> 01:29:51,760
proposal we have in spring has two

2032
01:29:51,760 --> 01:29:52,560
options one

2033
01:29:52,560 --> 01:29:56,400
does not dictate this um igp extension

2034
01:29:56,400 --> 01:29:56,639
at

2035
01:29:56,639 --> 01:29:59,679
all it's a data plane um you know we

2036
01:29:59,679 --> 01:30:01,760
carry the slice aggregate id in the

2037
01:30:01,760 --> 01:30:05,120
label stack for example or is

2038
01:30:05,120 --> 01:30:07,280
separately in the packet it's carried in

2039
01:30:07,280 --> 01:30:08,239
the packet

2040
01:30:08,239 --> 01:30:10,400
but people are you know there there are

2041
01:30:10,400 --> 01:30:12,320
implications obviously for hardware to

2042
01:30:12,320 --> 01:30:13,120
inspect this

2043
01:30:13,120 --> 01:30:16,080
uh specific extension for carrying in

2044
01:30:16,080 --> 01:30:17,199
the packet

2045
01:30:17,199 --> 01:30:19,840
for those we are proposing this type of

2046
01:30:19,840 --> 01:30:21,300
extension

2047
01:30:21,300 --> 01:30:23,120
[Music]

2048
01:30:23,120 --> 01:30:25,710
okay thanks do you have something quick

2049
01:30:25,710 --> 01:30:28,890
[Music]

2050
01:30:30,239 --> 01:30:33,280
the first is the draft you mentioned in

2051
01:30:33,280 --> 01:30:35,040
teas and spring

2052
01:30:35,040 --> 01:30:36,719
in my opinion there's some maybe some

2053
01:30:36,719 --> 01:30:38,400
conflict overlaps with

2054
01:30:38,400 --> 01:30:41,120
other existing work like enhanced vpns

2055
01:30:41,120 --> 01:30:41,760
surprise

2056
01:30:41,760 --> 01:30:44,159
that could need to be resolved and then

2057
01:30:44,159 --> 01:30:45,199
we can

2058
01:30:45,199 --> 01:30:49,839
talk about the igp extensions

2059
01:30:50,400 --> 01:30:52,320
uh yeah we're presenting in that is

2060
01:30:52,320 --> 01:30:53,840
working group g and

2061
01:30:53,840 --> 01:30:56,639
we definitely want to reach out to the

2062
01:30:56,639 --> 01:30:57,199
existing

2063
01:30:57,199 --> 01:31:00,880
uh you know if there's anything there

2064
01:31:00,880 --> 01:31:04,000
we're open to discussing it

2065
01:31:04,000 --> 01:31:06,560
okay and for the scalability we also

2066
01:31:06,560 --> 01:31:07,520
have a

2067
01:31:07,520 --> 01:31:10,239
drafting test talking about the

2068
01:31:10,239 --> 01:31:12,480
considerations in the control plane data

2069
01:31:12,480 --> 01:31:13,600
plane scalability

2070
01:31:13,600 --> 01:31:16,560
and optimizations we can also maybe talk

2071
01:31:16,560 --> 01:31:19,120
about that one

2072
01:31:20,800 --> 01:31:22,560
[Music]

2073
01:31:22,560 --> 01:31:26,560
okay um last comment uh so the question

2074
01:31:26,560 --> 01:31:28,480
is like you know i've said hundreds of

2075
01:31:28,480 --> 01:31:30,800
thousands of slice aggregates

2076
01:31:30,800 --> 01:31:32,639
uh why are we putting a little bit

2077
01:31:32,639 --> 01:31:34,080
identifier here

2078
01:31:34,080 --> 01:31:35,920
no sounds great i didn't mention hundred

2079
01:31:35,920 --> 01:31:38,800
thousand i said hundred to a thousand

2080
01:31:38,800 --> 01:31:40,719
yeah hundred two thousand but you put

2081
01:31:40,719 --> 01:31:43,760
32-bit essay id here

2082
01:31:43,760 --> 01:31:47,040
yeah in the 100 yeah less than a

2083
01:31:47,040 --> 01:31:49,360
thousand i mean

2084
01:31:49,360 --> 01:31:51,920
yes i got that i got that but uh then

2085
01:31:51,920 --> 01:31:53,040
what do you represent

2086
01:31:53,040 --> 01:31:56,480
the essay i did 32 bits

2087
01:31:56,800 --> 01:32:00,400
point but you know just think about it

2088
01:32:01,199 --> 01:32:03,360
yeah okay it's a good comment yeah we

2089
01:32:03,360 --> 01:32:04,560
will think about that

2090
01:32:04,560 --> 01:32:07,600
in fact uh yeah we're open to crunching

2091
01:32:07,600 --> 01:32:07,920
that

2092
01:32:07,920 --> 01:32:11,360
if uh if we uh if we need to

2093
01:32:11,360 --> 01:32:15,040
um i'll just say if that's the only

2094
01:32:15,040 --> 01:32:16,719
problem with this i don't think it would

2095
01:32:16,719 --> 01:32:17,120
be

2096
01:32:17,120 --> 01:32:20,320
a barrier no no no i'm just

2097
01:32:20,320 --> 01:32:27,840
all right we need to go linda

2098
01:32:33,440 --> 01:32:35,679
linda are you here are you here linda

2099
01:32:35,679 --> 01:32:36,719
yes she's

2100
01:32:36,719 --> 01:32:39,120
she's sending audio now can you hear me

2101
01:32:39,120 --> 01:32:40,000
now

2102
01:32:40,000 --> 01:32:43,440
yep hello yep

2103
01:32:43,440 --> 01:32:47,360
oh good good okay so um

2104
01:32:47,360 --> 01:32:50,800
here we want to present um the ospf

2105
01:32:50,800 --> 01:32:51,520
extension

2106
01:32:51,520 --> 01:32:54,719
for the 5g edge computing services

2107
01:32:54,719 --> 01:32:56,719
even though this is the first time we

2108
01:32:56,719 --> 01:32:58,000
present at this

2109
01:32:58,000 --> 01:33:01,600
uh our lsr group we have got quite a few

2110
01:33:01,600 --> 01:33:02,239
comments

2111
01:33:02,239 --> 01:33:04,560
and we have changed the draft according

2112
01:33:04,560 --> 01:33:05,520
to those two

2113
01:33:05,520 --> 01:33:09,840
addresses comments next slide please

2114
01:33:10,800 --> 01:33:13,120
okay so here is the some background of

2115
01:33:13,120 --> 01:33:14,560
5g edge computing

2116
01:33:14,560 --> 01:33:18,719
environment so there is a 5g core system

2117
01:33:18,719 --> 01:33:21,840
from the ue you come to the upf or

2118
01:33:21,840 --> 01:33:24,960
pdu session anchor and then there's a

2119
01:33:24,960 --> 01:33:28,080
router and then there's um

2120
01:33:28,080 --> 01:33:32,639
in 5g term is they called n6 interface

2121
01:33:32,639 --> 01:33:36,480
that's basically multiple local

2122
01:33:36,480 --> 01:33:39,600
data networks local data network

2123
01:33:39,600 --> 01:33:44,080
and for some sensitive services

2124
01:33:44,080 --> 01:33:46,880
mission critical services there will be

2125
01:33:46,880 --> 01:33:48,080
multiple

2126
01:33:48,080 --> 01:33:52,239
servers in the closed proximity

2127
01:33:52,239 --> 01:33:55,760
in the mini data center close to the

2128
01:33:55,760 --> 01:33:59,520
upf function close to the base station

2129
01:33:59,520 --> 01:34:02,239
there are many use cases for those

2130
01:34:02,239 --> 01:34:03,760
mission critical

2131
01:34:03,760 --> 01:34:07,040
applications and the

2132
01:34:07,040 --> 01:34:10,480
basic network assumption is all those

2133
01:34:10,480 --> 01:34:14,159
servers are attached to those routers

2134
01:34:14,159 --> 01:34:16,480
directly in the mini data center

2135
01:34:16,480 --> 01:34:19,600
the distance from those equals router to

2136
01:34:19,600 --> 01:34:22,880
the application server are very little

2137
01:34:22,880 --> 01:34:25,120
minimal they are co-located so we're not

2138
01:34:25,120 --> 01:34:28,080
considered in this

2139
01:34:28,080 --> 01:34:31,120
environment the dissident okay

2140
01:34:31,120 --> 01:34:33,920
next page please chris that chris has a

2141
01:34:33,920 --> 01:34:35,760
comment on this one

2142
01:34:35,760 --> 01:34:39,280
okay on your on your picture or question

2143
01:34:39,280 --> 01:34:41,760
okay you go back no i i'm actually just

2144
01:34:41,760 --> 01:34:43,440
in the queue for the end

2145
01:34:43,440 --> 01:34:47,040
oh okay okay sorry i should get back in

2146
01:34:47,040 --> 01:34:48,239
okay

2147
01:34:48,239 --> 01:34:51,280
okay so um let's continue on this page

2148
01:34:51,280 --> 01:34:53,520
more and more often anycast has been

2149
01:34:53,520 --> 01:34:54,719
used

2150
01:34:54,719 --> 01:34:57,280
for many applications um there are many

2151
01:34:57,280 --> 01:34:59,520
advantages of anycast

2152
01:34:59,520 --> 01:35:02,880
first for all is the anycast allow

2153
01:35:02,880 --> 01:35:06,000
basically leverage the network proximity

2154
01:35:06,000 --> 01:35:08,000
allow the traffic to be forwarded to the

2155
01:35:08,000 --> 01:35:09,840
optimal destination

2156
01:35:09,840 --> 01:35:13,119
um with network condition in mind

2157
01:35:13,119 --> 01:35:15,360
second eliminate the single point of

2158
01:35:15,360 --> 01:35:16,960
failure like you may have

2159
01:35:16,960 --> 01:35:20,239
application load balancer um if it just

2160
01:35:20,239 --> 01:35:23,040
if the network reachability to the load

2161
01:35:23,040 --> 01:35:24,400
balancer fail

2162
01:35:24,400 --> 01:35:27,520
or congested the traffic performance

2163
01:35:27,520 --> 01:35:30,719
services deteriorate with any cast

2164
01:35:30,719 --> 01:35:33,119
the network itself being able to

2165
01:35:33,119 --> 01:35:34,480
leverage the information

2166
01:35:34,480 --> 01:35:36,880
and be able to forward it to the optimal

2167
01:35:36,880 --> 01:35:38,080
destinations

2168
01:35:38,080 --> 01:35:40,320
uh it's truly the network help the

2169
01:35:40,320 --> 01:35:41,440
application

2170
01:35:41,440 --> 01:35:44,480
to perform better

2171
01:35:44,719 --> 01:35:47,760
and also avoid

2172
01:35:47,760 --> 01:35:51,280
some ue or client using the stealth

2173
01:35:51,280 --> 01:35:54,719
addresses in the cache instead of

2174
01:35:54,719 --> 01:35:58,800
a query dns for the refresh addresses

2175
01:35:58,800 --> 01:36:02,400
okay but they also have problems

2176
01:36:02,400 --> 01:36:05,920
um the problem with anycast in the 5gh

2177
01:36:05,920 --> 01:36:06,960
computing environment

2178
01:36:06,960 --> 01:36:10,000
is the routing distance to multiple

2179
01:36:10,000 --> 01:36:13,280
um edge servers are very small

2180
01:36:13,280 --> 01:36:16,480
and there could be um unbalanced

2181
01:36:16,480 --> 01:36:17,280
distribution

2182
01:36:17,280 --> 01:36:20,560
because of ue mobility moving from one

2183
01:36:20,560 --> 01:36:22,159
cell station to another

2184
01:36:22,159 --> 01:36:25,920
it could be many ues attached to one

2185
01:36:25,920 --> 01:36:29,280
cell tower or try to access the same

2186
01:36:29,280 --> 01:36:32,719
um uh server so you could cause the

2187
01:36:32,719 --> 01:36:33,760
problem of

2188
01:36:33,760 --> 01:36:36,400
one server being overly utilized and

2189
01:36:36,400 --> 01:36:38,400
others being underutilized

2190
01:36:38,400 --> 01:36:41,360
and there's also problems when new um

2191
01:36:41,360 --> 01:36:42,320
servers being

2192
01:36:42,320 --> 01:36:45,199
added removed all those can cause

2193
01:36:45,199 --> 01:36:46,159
problems

2194
01:36:46,159 --> 01:36:49,199
in this form any cash services

2195
01:36:49,199 --> 01:36:52,320
in the 5g h computing environment next

2196
01:36:52,320 --> 01:36:55,119
slide please

2197
01:36:55,920 --> 01:37:00,960
okay so um for the anycast in the 5g

2198
01:37:00,960 --> 01:37:03,360
edge computing environment to select

2199
01:37:03,360 --> 01:37:04,000
optimal

2200
01:37:04,000 --> 01:37:08,239
server optical anycast server

2201
01:37:08,239 --> 01:37:11,840
we kind of narrow it down to

2202
01:37:11,840 --> 01:37:14,560
selecting the egress router because the

2203
01:37:14,560 --> 01:37:15,520
distance from

2204
01:37:15,520 --> 01:37:18,080
e-waste router to the anycast server is

2205
01:37:18,080 --> 01:37:18,880
minimal

2206
01:37:18,880 --> 01:37:22,320
it's negligent so that from network

2207
01:37:22,320 --> 01:37:23,440
perspective

2208
01:37:23,440 --> 01:37:26,480
um the criteria is really uh

2209
01:37:26,480 --> 01:37:29,520
to uh finding the the matrix

2210
01:37:29,520 --> 01:37:33,280
like for example round trip time

2211
01:37:33,280 --> 01:37:37,280
to the egress router and on top of that

2212
01:37:37,280 --> 01:37:38,880
there will be other factors in

2213
01:37:38,880 --> 01:37:40,800
determining the

2214
01:37:40,800 --> 01:37:43,360
optimal egress router one is the

2215
01:37:43,360 --> 01:37:44,639
capacity

2216
01:37:44,639 --> 01:37:48,000
for example um at um

2217
01:37:48,000 --> 01:37:50,880
for the server anycast server attached

2218
01:37:50,880 --> 01:37:51,199
to

2219
01:37:51,199 --> 01:37:55,440
router r1 can be higher capacity than

2220
01:37:55,440 --> 01:37:55,840
the

2221
01:37:55,840 --> 01:37:58,400
anycast server attached to r2 simply

2222
01:37:58,400 --> 01:37:58,960
because

2223
01:37:58,960 --> 01:38:01,520
there's could be thousands or hundreds

2224
01:38:01,520 --> 01:38:02,239
of

2225
01:38:02,239 --> 01:38:06,239
servers attached behind a load balancer

2226
01:38:06,239 --> 01:38:08,960
from network perspective we only see the

2227
01:38:08,960 --> 01:38:11,360
network load balancer the front end

2228
01:38:11,360 --> 01:38:14,960
and so it is preferred to be able to

2229
01:38:14,960 --> 01:38:18,000
forward the traffic to a location

2230
01:38:18,000 --> 01:38:21,360
where the capacity is higher

2231
01:38:21,360 --> 01:38:23,840
second is the site preference the site

2232
01:38:23,840 --> 01:38:24,880
preference could be

2233
01:38:24,880 --> 01:38:28,080
that the network the bandwidth to

2234
01:38:28,080 --> 01:38:31,520
r1 or within r1 the mini data center

2235
01:38:31,520 --> 01:38:35,199
is much higher than r2 perspective

2236
01:38:35,199 --> 01:38:37,520
so all those factors need to be

2237
01:38:37,520 --> 01:38:38,480
considered

2238
01:38:38,480 --> 01:38:42,480
in selecting the optimal egress router

2239
01:38:42,480 --> 01:38:45,839
next page please

2240
01:38:46,400 --> 01:38:50,080
so um here we um want to show that in

2241
01:38:50,080 --> 01:38:51,520
the

2242
01:38:51,520 --> 01:38:55,520
lsr in ospf if all the egress routers

2243
01:38:55,520 --> 01:38:58,719
are from from same vendor or

2244
01:38:58,719 --> 01:39:01,040
from under the same management system

2245
01:39:01,040 --> 01:39:02,159
that they can have

2246
01:39:02,159 --> 01:39:05,199
the consistent algorithm to calculate

2247
01:39:05,199 --> 01:39:06,000
the

2248
01:39:06,000 --> 01:39:08,800
aggregated cost meaning the cost

2249
01:39:08,800 --> 01:39:09,679
including

2250
01:39:09,679 --> 01:39:12,800
the round-trip delay and the cat

2251
01:39:12,800 --> 01:39:15,920
the site capacity the site preference

2252
01:39:15,920 --> 01:39:18,320
they can be uh making it together a

2253
01:39:18,320 --> 01:39:19,679
consistent value

2254
01:39:19,679 --> 01:39:22,239
then there's nothing need to be changed

2255
01:39:22,239 --> 01:39:22,960
for the error

2256
01:39:22,960 --> 01:39:26,400
for the ospf we can use existing um

2257
01:39:26,400 --> 01:39:29,920
um that's subtle

2258
01:39:29,920 --> 01:39:33,199
existing encoding and be able to

2259
01:39:33,199 --> 01:39:37,520
um for ipv4 and ipv6 um

2260
01:39:37,520 --> 01:39:40,080
data frame right and network so we

2261
01:39:40,080 --> 01:39:40,880
basically

2262
01:39:40,880 --> 01:39:44,880
um in the ipv4 we just include the

2263
01:39:44,880 --> 01:39:48,560
encoded in the matrix field of the stop

2264
01:39:48,560 --> 01:39:51,679
stop link as lsa

2265
01:39:51,679 --> 01:39:57,119
for the ipv6 we can use this

2266
01:39:57,119 --> 01:40:00,239
this particular matrix field in the

2267
01:40:00,239 --> 01:40:02,400
intro area prefix sla

2268
01:40:02,400 --> 01:40:05,600
lsa to carry the aggregate cost

2269
01:40:05,600 --> 01:40:09,199
to the application server next page

2270
01:40:09,199 --> 01:40:10,000
please

2271
01:40:10,000 --> 01:40:12,560
uh we're running short on time is it is

2272
01:40:12,560 --> 01:40:13,760
are there going to be

2273
01:40:13,760 --> 01:40:17,199
a lot of tlvs can we skip forward

2274
01:40:17,199 --> 01:40:20,000
okay so just three more two more tlbs

2275
01:40:20,000 --> 01:40:21,760
well um

2276
01:40:21,760 --> 01:40:24,880
yeah two more okay so um but

2277
01:40:24,880 --> 01:40:28,239
for environment where that not the

2278
01:40:28,239 --> 01:40:30,560
not all egress router can have a

2279
01:40:30,560 --> 01:40:32,159
consistent

2280
01:40:32,159 --> 01:40:35,040
algorithm to calculate aggregate cost or

2281
01:40:35,040 --> 01:40:36,239
some environment

2282
01:40:36,239 --> 01:40:38,320
where some routers need more detailed

2283
01:40:38,320 --> 01:40:39,520
information

2284
01:40:39,520 --> 01:40:42,719
and then we need a special sub trv to

2285
01:40:42,719 --> 01:40:44,000
carry the information

2286
01:40:44,000 --> 01:40:46,719
which include load measurement capacity

2287
01:40:46,719 --> 01:40:48,639
index and site preference

2288
01:40:48,639 --> 01:40:52,080
and we this is based on the email um

2289
01:40:52,080 --> 01:40:54,639
middle is uh discussion that we're using

2290
01:40:54,639 --> 01:40:55,840
this

2291
01:40:55,840 --> 01:40:58,960
extended prefix opaque lsa

2292
01:40:58,960 --> 01:41:01,520
to carry those information um carry

2293
01:41:01,520 --> 01:41:02,880
those subjects

2294
01:41:02,880 --> 01:41:06,639
that's for ipv4 next page for ipv6 this

2295
01:41:06,639 --> 01:41:08,320
is the same

2296
01:41:08,320 --> 01:41:10,960
yeah this is the same but just using the

2297
01:41:10,960 --> 01:41:11,679
same

2298
01:41:11,679 --> 01:41:14,000
so they want some feedback from the

2299
01:41:14,000 --> 01:41:14,880
group um

2300
01:41:14,880 --> 01:41:18,000
on this proposal uh

2301
01:41:18,000 --> 01:41:19,920
so i put myself in first because i i

2302
01:41:19,920 --> 01:41:21,119
definitely looked through this

2303
01:41:21,119 --> 01:41:24,239
um there's a lot of phyllis

2304
01:41:24,239 --> 01:41:25,760
this is a working group member not as

2305
01:41:25,760 --> 01:41:27,920
chair but there's a lot of philosophy

2306
01:41:27,920 --> 01:41:29,360
going on here i don't have time to go

2307
01:41:29,360 --> 01:41:31,440
into but the

2308
01:41:31,440 --> 01:41:32,960
fundamentally it seems like what you're

2309
01:41:32,960 --> 01:41:35,199
trying to do is push

2310
01:41:35,199 --> 01:41:38,320
application load balancing into

2311
01:41:38,320 --> 01:41:41,840
and have routing do that job right

2312
01:41:41,840 --> 01:41:43,520
you're asking routing to do the

2313
01:41:43,520 --> 01:41:44,960
application load balancing that's a

2314
01:41:44,960 --> 01:41:45,520
pretty

2315
01:41:45,520 --> 01:41:48,800
big ask and a pretty big change

2316
01:41:48,800 --> 01:41:50,960
uh you're having to add this information

2317
01:41:50,960 --> 01:41:53,280
because any cast is there to solve this

2318
01:41:53,280 --> 01:41:54,880
sort of simple problem right i've got a

2319
01:41:54,880 --> 01:41:56,880
bunch of servers and i need to go there

2320
01:41:56,880 --> 01:41:59,119
um and anycast works for that but it

2321
01:41:59,119 --> 01:42:00,400
doesn't work for you because you want to

2322
01:42:00,400 --> 01:42:01,520
do a lot more with it

2323
01:42:01,520 --> 01:42:02,800
right and so you're having to add all

2324
01:42:02,800 --> 01:42:04,639
this stuff i think

2325
01:42:04,639 --> 01:42:06,400
you're going to get some pushback on the

2326
01:42:06,400 --> 01:42:08,560
whole idea because i don't think people

2327
01:42:08,560 --> 01:42:10,159
are going to be happy with trying to use

2328
01:42:10,159 --> 01:42:11,040
the routing

2329
01:42:11,040 --> 01:42:13,440
system as an application load balancer

2330
01:42:13,440 --> 01:42:15,520
you can do this in other ways

2331
01:42:15,520 --> 01:42:18,719
right that's my general comment

2332
01:42:18,719 --> 01:42:21,760
okay actually in a 3gbp there's a

2333
01:42:21,760 --> 01:42:24,719
project called edge computing over there

2334
01:42:24,719 --> 01:42:25,679
anycast

2335
01:42:25,679 --> 01:42:29,440
is proposed as a way to balance the

2336
01:42:29,440 --> 01:42:30,239
traffic

2337
01:42:30,239 --> 01:42:32,239
this is not try to replace the load

2338
01:42:32,239 --> 01:42:34,239
balancer load balancer still could be

2339
01:42:34,239 --> 01:42:34,800
there

2340
01:42:34,800 --> 01:42:36,800
in any of the mini data center when you

2341
01:42:36,800 --> 01:42:38,480
have multiple servers

2342
01:42:38,480 --> 01:42:40,480
or you have a load balancer application

2343
01:42:40,480 --> 01:42:43,119
load balancer among multiple locations

2344
01:42:43,119 --> 01:42:46,080
you could have a low balance application

2345
01:42:46,080 --> 01:42:47,600
layer load balancer there

2346
01:42:47,600 --> 01:42:50,000
this anycast is really for the

2347
01:42:50,000 --> 01:42:50,800
environment

2348
01:42:50,800 --> 01:42:52,960
where you have multiple load balancers

2349
01:42:52,960 --> 01:42:54,840
in the network not just

2350
01:42:54,840 --> 01:42:57,600
one understand but you're basically

2351
01:42:57,600 --> 01:42:59,280
saying i want to use any cast

2352
01:42:59,280 --> 01:43:01,440
but if i if but i don't want it to just

2353
01:43:01,440 --> 01:43:03,280
pick any cast based on routing

2354
01:43:03,280 --> 01:43:04,480
so i'm going to add all this extra

2355
01:43:04,480 --> 01:43:06,400
information right

2356
01:43:06,400 --> 01:43:08,239
so you're not happy with any cast you're

2357
01:43:08,239 --> 01:43:10,239
expanding the concept that's a big

2358
01:43:10,239 --> 01:43:12,639
thing right that's all i'm saying i'm

2359
01:43:12,639 --> 01:43:13,360
not saying

2360
01:43:13,360 --> 01:43:14,880
good or bad i'm just saying it's a big

2361
01:43:14,880 --> 01:43:16,880
ask i i don't want to be the only one

2362
01:43:16,880 --> 01:43:17,360
that talks

2363
01:43:17,360 --> 01:43:20,400
go ahead ac okay uh

2364
01:43:20,400 --> 01:43:22,239
i'm gonna take mine to the list i'm just

2365
01:43:22,239 --> 01:43:24,400
gonna say i'm happy that you i see

2366
01:43:24,400 --> 01:43:27,199
today you you you fixed the encodings in

2367
01:43:27,199 --> 01:43:28,080
the draft

2368
01:43:28,080 --> 01:43:29,679
because i that was going to be one of my

2369
01:43:29,679 --> 01:43:31,040
comments and i and i looked at the

2370
01:43:31,040 --> 01:43:32,080
latest version and

2371
01:43:32,080 --> 01:43:34,719
it matches your slides all right so i'll

2372
01:43:34,719 --> 01:43:35,920
put the i'll have the rest of the

2373
01:43:35,920 --> 01:43:36,840
comments the list

2374
01:43:36,840 --> 01:43:41,920
thanks thank you thank you linda

2375
01:43:49,679 --> 01:43:53,840
okay prefix unreachable

2376
01:43:57,840 --> 01:44:00,080
go ahead and start talking if you want

2377
01:44:00,080 --> 01:44:02,239
okay

2378
01:44:03,040 --> 01:44:05,520
hi um my name is gion mishra with

2379
01:44:05,520 --> 01:44:06,239
verizon

2380
01:44:06,239 --> 01:44:08,480
and i'd like to go over the draft prefix

2381
01:44:08,480 --> 01:44:11,199
unreachability announcement

2382
01:44:11,199 --> 01:44:13,759
next slide

2383
01:44:15,760 --> 01:44:18,960
there we go thank you

2384
01:44:18,960 --> 01:44:22,000
so uh we we went over this draft on the

2385
01:44:22,000 --> 01:44:22,960
last um

2386
01:44:22,960 --> 01:44:26,560
last ietf and uh from the feedback from

2387
01:44:26,560 --> 01:44:28,080
the work group as well uh

2388
01:44:28,080 --> 01:44:31,920
mailing list as well as uh the last ietf

2389
01:44:31,920 --> 01:44:34,400
we we've done a revamp on the draft and

2390
01:44:34,400 --> 01:44:36,239
really really hone again

2391
01:44:36,239 --> 01:44:39,440
on the issue um no that the

2392
01:44:39,440 --> 01:44:42,080
reuse case that uh this solution would

2393
01:44:42,080 --> 01:44:43,840
solve with this prefix and reachability

2394
01:44:43,840 --> 01:44:45,840
announcement and really cleaning up

2395
01:44:45,840 --> 01:44:48,639
you know all the other uh related thing

2396
01:44:48,639 --> 01:44:50,400
items within the draft so really just a

2397
01:44:50,400 --> 01:44:51,280
single

2398
01:44:51,280 --> 01:44:54,800
uh issue um problem and you know

2399
01:44:54,800 --> 01:44:56,400
with this motivation problem statement

2400
01:44:56,400 --> 01:44:57,840
and then a solution

2401
01:44:57,840 --> 01:44:59,840
kind of marrying the solution to that uh

2402
01:44:59,840 --> 01:45:01,440
problem statement

2403
01:45:01,440 --> 01:45:03,520
so with that so the motivation behind

2404
01:45:03,520 --> 01:45:05,600
this draft is it's based on

2405
01:45:05,600 --> 01:45:08,480
either a uh mpls exact match on a host

2406
01:45:08,480 --> 01:45:10,719
route effect binding or an srv6

2407
01:45:10,719 --> 01:45:14,080
bgp service overlay using traditional

2408
01:45:14,080 --> 01:45:15,360
unicast u-rib

2409
01:45:15,360 --> 01:45:18,400
longest prefix match in a scenario where

2410
01:45:18,400 --> 01:45:20,159
the igp domain

2411
01:45:20,159 --> 01:45:23,440
is carved up into multiple ospf areas or

2412
01:45:23,440 --> 01:45:24,239
isis

2413
01:45:24,239 --> 01:45:27,040
levels and summarization is unified so

2414
01:45:27,040 --> 01:45:28,320
that that's really

2415
01:45:28,320 --> 01:45:31,440
the key uh use case

2416
01:45:31,440 --> 01:45:34,239
um where we're honing in so in this use

2417
01:45:34,239 --> 01:45:35,119
case the

2418
01:45:35,119 --> 01:45:37,679
summarization of inner area routes are

2419
01:45:37,679 --> 01:45:40,159
propagated into the backbone area

2420
01:45:40,159 --> 01:45:42,800
for flood reduction and made up of

2421
01:45:42,800 --> 01:45:44,400
component prefixes and

2422
01:45:44,400 --> 01:45:46,000
in this use case we'll go over in a

2423
01:45:46,000 --> 01:45:47,520
further slide or

2424
01:45:47,520 --> 01:45:50,560
really the net bgp next hops um

2425
01:45:50,560 --> 01:45:53,119
that would that are being flooded um so

2426
01:45:53,119 --> 01:45:55,040
with this so with the summarization what

2427
01:45:55,040 --> 01:45:56,000
happens is

2428
01:45:56,000 --> 01:45:58,719
these components of the summary are now

2429
01:45:58,719 --> 01:46:00,719
are now masked and just sent as a

2430
01:46:00,719 --> 01:46:01,600
summary

2431
01:46:01,600 --> 01:46:04,880
um so what this uh feature does with

2432
01:46:04,880 --> 01:46:07,119
this prefix unreachability announcement

2433
01:46:07,119 --> 01:46:09,600
it it's it's these prefixes that we're

2434
01:46:09,600 --> 01:46:10,800
now able to track

2435
01:46:10,800 --> 01:46:13,440
and prevent a an outage or black hole

2436
01:46:13,440 --> 01:46:13,920
above

2437
01:46:13,920 --> 01:46:17,119
routes the dead end on navy are when a

2438
01:46:17,119 --> 01:46:19,920
failure occurs

2439
01:46:20,159 --> 01:46:22,638
next slide

2440
01:46:24,080 --> 01:46:26,719
so as i said uh we've we've completely

2441
01:46:26,719 --> 01:46:28,639
revamped the draft um if you haven't had

2442
01:46:28,639 --> 01:46:30,000
a chance to look at it we'll

2443
01:46:30,000 --> 01:46:31,840
we'll uh discuss more on the mailing

2444
01:46:31,840 --> 01:46:33,360
list following this

2445
01:46:33,360 --> 01:46:36,560
um atf call but the uh the updates

2446
01:46:36,560 --> 01:46:38,400
of the drafts is really just hunting on

2447
01:46:38,400 --> 01:46:40,159
this one use case

2448
01:46:40,159 --> 01:46:42,719
that's that's related to um

2449
01:46:42,719 --> 01:46:43,520
summarization

2450
01:46:43,520 --> 01:46:47,520
it's a bgp next top tracking of

2451
01:46:47,520 --> 01:46:51,600
vpn overview services next slide

2452
01:46:52,239 --> 01:46:54,480
so the scenario at a high level i think

2453
01:46:54,480 --> 01:46:56,719
of what would happen in this particular

2454
01:46:56,719 --> 01:46:58,639
use case so let's say you have uh you

2455
01:46:58,639 --> 01:46:59,760
have a router

2456
01:46:59,760 --> 01:47:02,560
r2 and r4 they're they're generating a

2457
01:47:02,560 --> 01:47:04,239
summary route so on the right side

2458
01:47:04,239 --> 01:47:05,840
within the area zero

2459
01:47:05,840 --> 01:47:07,679
um you're sending a summary over to area

2460
01:47:07,679 --> 01:47:09,119
zero area one

2461
01:47:09,119 --> 01:47:11,119
and then you have you have a vpn overlay

2462
01:47:11,119 --> 01:47:12,560
so you have uh

2463
01:47:12,560 --> 01:47:15,199
you have a uh vpn routes that are being

2464
01:47:15,199 --> 01:47:15,920
learned between

2465
01:47:15,920 --> 01:47:18,480
s2 and t2 s2 on the left and t2 on the

2466
01:47:18,480 --> 01:47:20,320
right

2467
01:47:20,320 --> 01:47:22,639
so when there's a failure that happens

2468
01:47:22,639 --> 01:47:23,440
uh

2469
01:47:23,440 --> 01:47:26,800
let's say a node failure so t2 goes down

2470
01:47:26,800 --> 01:47:28,960
um you still have a summary that's being

2471
01:47:28,960 --> 01:47:31,040
advertised from r2 and r4

2472
01:47:31,040 --> 01:47:34,480
uh back over to our r1 and r3

2473
01:47:34,480 --> 01:47:37,119
so when that lsp gets built across the

2474
01:47:37,119 --> 01:47:38,080
area

2475
01:47:38,080 --> 01:47:41,040
um it gets built it ends up dead ending

2476
01:47:41,040 --> 01:47:41,679
right on the

2477
01:47:41,679 --> 01:47:43,920
right on the abr on r2 and they're

2478
01:47:43,920 --> 01:47:44,719
basically back

2479
01:47:44,719 --> 01:47:46,800
back you're basically black hole black

2480
01:47:46,800 --> 01:47:48,960
hole in traffic going to t2

2481
01:47:48,960 --> 01:47:50,719
this the convergence doesn't happen the

2482
01:47:50,719 --> 01:47:52,000
fit the failover

2483
01:47:52,000 --> 01:47:55,199
because the the component prefixes that

2484
01:47:55,199 --> 01:47:56,880
that they're represented by that summary

2485
01:47:56,880 --> 01:47:58,400
address are not there

2486
01:47:58,400 --> 01:48:00,719
this this and so this feature related

2487
01:48:00,719 --> 01:48:01,840
summarization

2488
01:48:01,840 --> 01:48:05,760
with mpls it's related to rfc 5283

2489
01:48:05,760 --> 01:48:09,199
with the inter area ldp extension this

2490
01:48:09,199 --> 01:48:10,800
this same concept and we'll go through

2491
01:48:10,800 --> 01:48:12,960
it it actually applies as well to srv6

2492
01:48:12,960 --> 01:48:14,400
where you're doing longest prefix

2493
01:48:14,400 --> 01:48:15,360
matching

2494
01:48:15,360 --> 01:48:17,440
as well with it so with mpls with the

2495
01:48:17,440 --> 01:48:19,840
ldp rfc 5283

2496
01:48:19,840 --> 01:48:21,679
you you are you end up doing as long as

2497
01:48:21,679 --> 01:48:23,360
prefix match because you're creating a

2498
01:48:23,360 --> 01:48:24,080
summary but

2499
01:48:24,080 --> 01:48:27,280
but now with the component routes not

2500
01:48:27,280 --> 01:48:29,600
not uh without being present with the

2501
01:48:29,600 --> 01:48:30,320
summary

2502
01:48:30,320 --> 01:48:31,840
you're not able to track it and thus

2503
01:48:31,840 --> 01:48:33,360
you're you're just really black holding

2504
01:48:33,360 --> 01:48:35,280
right on that apr

2505
01:48:35,280 --> 01:48:37,759
next slide

2506
01:48:40,320 --> 01:48:42,800
so this slide shows a similar basically

2507
01:48:42,800 --> 01:48:45,040
a dead end that happens when the lsp

2508
01:48:45,040 --> 01:48:46,639
gets built so you have the same

2509
01:48:46,639 --> 01:48:48,320
similar failover that happens but it's a

2510
01:48:48,320 --> 01:48:50,000
link failure versus the node failure so

2511
01:48:50,000 --> 01:48:50,880
instead of

2512
01:48:50,880 --> 01:48:53,520
one now can we expand this one along

2513
01:48:53,520 --> 01:48:54,000
this is

2514
01:48:54,000 --> 01:48:56,000
pretty much the same use case from that

2515
01:48:56,000 --> 01:48:57,679
standpoint here's the same use case we

2516
01:48:57,679 --> 01:48:59,440
can go over to the next slide

2517
01:48:59,440 --> 01:49:03,920
thanks great so so upon receiving a

2518
01:49:03,920 --> 01:49:05,520
link or note failure with the pua

2519
01:49:05,520 --> 01:49:08,000
mechanism it uses a uh

2520
01:49:08,000 --> 01:49:11,199
isis ipv4 v6 a source router

2521
01:49:11,199 --> 01:49:15,119
id sub tlv described in rc779

2522
01:49:15,119 --> 01:49:17,760
or with lspf the prefix originator sub t

2523
01:49:17,760 --> 01:49:19,199
i'll be described in the

2524
01:49:19,199 --> 01:49:22,560
lsr ospf prefix originator

2525
01:49:22,560 --> 01:49:25,599
so with that it actually creates a uh

2526
01:49:25,599 --> 01:49:28,080
that it's advertised the uh the source

2527
01:49:28,080 --> 01:49:30,000
router sub tlb of where the

2528
01:49:30,000 --> 01:49:32,560
of the failure is advertised and flooded

2529
01:49:32,560 --> 01:49:33,840
through the domain using normal

2530
01:49:33,840 --> 01:49:35,760
so using standard ospf and isis

2531
01:49:35,760 --> 01:49:37,119
procedures vote

2532
01:49:37,119 --> 01:49:38,880
but now with the next with the

2533
01:49:38,880 --> 01:49:42,159
originator information set to null

2534
01:49:42,159 --> 01:49:44,638
next slide

2535
01:49:47,119 --> 01:49:48,639
so when there was a scenario with the

2536
01:49:48,639 --> 01:49:50,159
node one failure

2537
01:49:50,159 --> 01:49:52,480
um when the node within the area

2538
01:49:52,480 --> 01:49:54,000
receives a pua

2539
01:49:54,000 --> 01:49:56,800
message it plugs into all the aprs i

2540
01:49:56,800 --> 01:49:58,560
guess within within the area

2541
01:49:58,560 --> 01:50:00,719
and so that that triggers when that when

2542
01:50:00,719 --> 01:50:02,880
that when that when the uh

2543
01:50:02,880 --> 01:50:05,760
the failure happens the uh that type the

2544
01:50:05,760 --> 01:50:06,320
uh

2545
01:50:06,320 --> 01:50:08,560
the tlv is that has flooded through the

2546
01:50:08,560 --> 01:50:10,480
area and now with that next would be

2547
01:50:10,480 --> 01:50:11,760
next hop set to null

2548
01:50:11,760 --> 01:50:14,880
zero on the field linker node and that

2549
01:50:14,880 --> 01:50:15,760
triggers the

2550
01:50:15,760 --> 01:50:18,400
control plane to fail over from the

2551
01:50:18,400 --> 01:50:21,840
active lsb to the backup lsp

2552
01:50:21,840 --> 01:50:24,239
uh and the same same same situation with

2553
01:50:24,239 --> 01:50:26,320
the lincoln node failure it's exact same

2554
01:50:26,320 --> 01:50:28,639
failover now the lsp is able to rebuild

2555
01:50:28,639 --> 01:50:32,320
onto that backup path next slide

2556
01:50:35,840 --> 01:50:39,440
so as i had described um earlier so this

2557
01:50:39,440 --> 01:50:42,560
scenario so it's it's it's related to uh

2558
01:50:42,560 --> 01:50:43,599
the crux of it is

2559
01:50:43,599 --> 01:50:46,159
if and using um instead of having this

2560
01:50:46,159 --> 01:50:47,199
flood

2561
01:50:47,199 --> 01:50:49,840
all of your your loot backs or be your

2562
01:50:49,840 --> 01:50:51,599
bgp next half attribute like throughout

2563
01:50:51,599 --> 01:50:53,360
a domain especially where you're carved

2564
01:50:53,360 --> 01:50:54,800
up and you want to save

2565
01:50:54,800 --> 01:50:57,760
on your um on your control plane um and

2566
01:50:57,760 --> 01:50:59,920
you want to be able to use summarization

2567
01:50:59,920 --> 01:51:03,040
using let's say the rfc 5283 in the mpl

2568
01:51:03,040 --> 01:51:03,840
scenario

2569
01:51:03,840 --> 01:51:06,400
inter area extension and you want to

2570
01:51:06,400 --> 01:51:07,599
make that viable

2571
01:51:07,599 --> 01:51:10,320
or if you're in an srv6 scenario where

2572
01:51:10,320 --> 01:51:11,119
you're up

2573
01:51:11,119 --> 01:51:13,119
you still you want to do that as well

2574
01:51:13,119 --> 01:51:14,639
but you're still doing the longest

2575
01:51:14,639 --> 01:51:16,639
you're doing longest prefix match

2576
01:51:16,639 --> 01:51:18,400
um but you but you want to be able to

2577
01:51:18,400 --> 01:51:20,560
track those component prefixes

2578
01:51:20,560 --> 01:51:22,800
related to that next hop attribute where

2579
01:51:22,800 --> 01:51:24,719
that linker node failure happened and

2580
01:51:24,719 --> 01:51:25,440
now you've

2581
01:51:25,440 --> 01:51:28,000
got a um you're you've got a dead end

2582
01:51:28,000 --> 01:51:28,560
right on

2583
01:51:28,560 --> 01:51:29,599
right on the apr during the

2584
01:51:29,599 --> 01:51:32,000
summarization so with this solution it

2585
01:51:32,000 --> 01:51:34,480
basically provides that negative pua

2586
01:51:34,480 --> 01:51:37,520
that can get sent out uh to track that

2587
01:51:37,520 --> 01:51:38,960
next hop that's down

2588
01:51:38,960 --> 01:51:40,960
and and and force the control plane to

2589
01:51:40,960 --> 01:51:42,480
converge from the um

2590
01:51:42,480 --> 01:51:45,119
from that longest prefix match uh that

2591
01:51:45,119 --> 01:51:46,080
went down

2592
01:51:46,080 --> 01:51:48,400
now to this now to the backup path so

2593
01:51:48,400 --> 01:51:49,840
still forcing that immediate

2594
01:51:49,840 --> 01:51:54,480
control plane convergence next slide

2595
01:51:56,560 --> 01:51:58,560
so this slide is really describing the

2596
01:51:58,560 --> 01:51:59,920
scalability so

2597
01:51:59,920 --> 01:52:02,159
this is you're making this the being

2598
01:52:02,159 --> 01:52:03,040
able to

2599
01:52:03,040 --> 01:52:04,800
utilize summarization where you have

2600
01:52:04,800 --> 01:52:06,800
thousands of pes and imagine you're

2601
01:52:06,800 --> 01:52:07,599
flooding

2602
01:52:07,599 --> 01:52:09,840
your next top attribute uh throughout

2603
01:52:09,840 --> 01:52:10,800
the domain

2604
01:52:10,800 --> 01:52:12,800
um it's a eating up control plane

2605
01:52:12,800 --> 01:52:14,239
resources so now

2606
01:52:14,239 --> 01:52:16,560
with with this you you're able to really

2607
01:52:16,560 --> 01:52:17,840
take advantage of

2608
01:52:17,840 --> 01:52:19,760
summarization and you don't have to

2609
01:52:19,760 --> 01:52:21,440
flood your host routes throughout the

2610
01:52:21,440 --> 01:52:22,159
network

2611
01:52:22,159 --> 01:52:23,840
and now you can converge when those

2612
01:52:23,840 --> 01:52:25,440
component routes go away

2613
01:52:25,440 --> 01:52:27,199
now you have this negative pre-negative

2614
01:52:27,199 --> 01:52:28,719
advertisement that goes out

2615
01:52:28,719 --> 01:52:31,760
to track track the next hop

2616
01:52:31,760 --> 01:52:33,360
that has gone down from a link or node

2617
01:52:33,360 --> 01:52:35,280
failure and now you can converge onto

2618
01:52:35,280 --> 01:52:37,119
that backup lsp

2619
01:52:37,119 --> 01:52:39,598
next slide

2620
01:52:42,320 --> 01:52:44,560
so one of the considerations with the uh

2621
01:52:44,560 --> 01:52:46,159
pua feature

2622
01:52:46,159 --> 01:52:49,199
is a is a as a concept of a maximum

2623
01:52:49,199 --> 01:52:52,480
uh maximum we have to cut

2624
01:52:52,480 --> 01:52:54,320
off very soon because we have one more

2625
01:52:54,320 --> 01:52:56,000
presentation

2626
01:52:56,000 --> 01:52:58,719
go ahead go to the next slide thanks

2627
01:52:58,719 --> 01:53:00,400
okay

2628
01:53:00,400 --> 01:53:02,480
this is the final slide so i would like

2629
01:53:02,480 --> 01:53:04,159
to ask for comments from the work group

2630
01:53:04,159 --> 01:53:06,159
based on the updates of this draft

2631
01:53:06,159 --> 01:53:09,199
and ask for a work group adoption

2632
01:53:09,199 --> 01:53:12,000
thank you speaking of working group

2633
01:53:12,000 --> 01:53:13,520
member i have two comments i think i

2634
01:53:13,520 --> 01:53:14,880
made them last time too

2635
01:53:14,880 --> 01:53:16,560
but uh they're they haven't been they

2636
01:53:16,560 --> 01:53:18,960
weren't taken the first comment

2637
01:53:18,960 --> 01:53:22,639
is how do you know what holes you're

2638
01:53:22,639 --> 01:53:23,360
protecting

2639
01:53:23,360 --> 01:53:24,639
in the summary are you going to

2640
01:53:24,639 --> 01:53:28,320
configure those on the abrs

2641
01:53:29,599 --> 01:53:31,599
you how do you how do we know which

2642
01:53:31,599 --> 01:53:33,840
which

2643
01:53:34,480 --> 01:53:36,400
how do you know which how how do you

2644
01:53:36,400 --> 01:53:37,920
know which holes in the summary that

2645
01:53:37,920 --> 01:53:39,119
you're protecting are you going to

2646
01:53:39,119 --> 01:53:42,159
configure those on the avrs

2647
01:53:42,159 --> 01:53:44,719
so it would it would protect any so with

2648
01:53:44,719 --> 01:53:45,679
that um

2649
01:53:45,679 --> 01:53:48,239
the uh originator subtly as long as the

2650
01:53:48,239 --> 01:53:49,360
prefix is working

2651
01:53:49,360 --> 01:53:51,360
no no no you're not my question how do

2652
01:53:51,360 --> 01:53:54,159
you know apriori how do you know whether

2653
01:53:54,159 --> 01:53:55,119
or not

2654
01:53:55,119 --> 01:53:57,280
that you're missing say you say the abr

2655
01:53:57,280 --> 01:53:58,400
comes up how does he know

2656
01:53:58,400 --> 01:54:02,239
what he's missing if it's not configured

2657
01:54:03,280 --> 01:54:05,920
right so i so i i don't know if i'm

2658
01:54:05,920 --> 01:54:07,119
completely understanding your question

2659
01:54:07,119 --> 01:54:07,520
but i

2660
01:54:07,520 --> 01:54:10,239
if let's say if the prefix is missing

2661
01:54:10,239 --> 01:54:11,840
within the range

2662
01:54:11,840 --> 01:54:15,119
that that notification happens from

2663
01:54:15,119 --> 01:54:20,400
the um that's the uh the extra the um

2664
01:54:20,880 --> 01:54:23,040
you're

2665
01:54:28,159 --> 01:54:30,320
you're assuming that you know about the

2666
01:54:30,320 --> 01:54:32,159
prefix and then it goes away you're not

2667
01:54:32,159 --> 01:54:33,679
going to protect something that's going

2668
01:54:33,679 --> 01:54:34,960
away

2669
01:54:34,960 --> 01:54:37,440
uh that that you want to protect that

2670
01:54:37,440 --> 01:54:39,040
you don't know about

2671
01:54:39,040 --> 01:54:41,360
when you come up because it's stately

2672
01:54:41,360 --> 01:54:43,598
right

2673
01:54:44,159 --> 01:54:46,320
that's that's true so anything that you

2674
01:54:46,320 --> 01:54:48,080
know about i think it's something

2675
01:54:48,080 --> 01:54:51,119
we have to know about so it's somewhat

2676
01:54:51,119 --> 01:54:51,760
timing

2677
01:54:51,760 --> 01:54:53,520
it's somewhat timing based it's kind of

2678
01:54:53,520 --> 01:54:55,440
a it's kind of broken in that way

2679
01:54:55,440 --> 01:54:57,760
the other one i had that a question is

2680
01:54:57,760 --> 01:54:59,280
and i made this before is

2681
01:54:59,280 --> 01:55:01,520
the way you're encoding it if not

2682
01:55:01,520 --> 01:55:03,199
everybody in the main supports it you're

2683
01:55:03,199 --> 01:55:04,239
gonna actually

2684
01:55:04,239 --> 01:55:07,360
attract traffic towards the uh

2685
01:55:07,360 --> 01:55:09,440
black hole and the prefix originator is

2686
01:55:09,440 --> 01:55:11,840
just the wrong method for this

2687
01:55:11,840 --> 01:55:16,239
that's all all right okay

2688
01:55:16,239 --> 01:55:17,920
thanks we'll take it to the mailing list

2689
01:55:17,920 --> 01:55:19,440
on this on those comments appreciate the

2690
01:55:19,440 --> 01:55:21,040
comments thank you

2691
01:55:21,040 --> 01:55:23,440
thank you

2692
01:55:25,440 --> 01:55:28,480
i don't remember who's presenting this

2693
01:55:28,480 --> 01:55:30,400
is yali

2694
01:55:30,400 --> 01:55:33,280
please go you got five minutes sorry

2695
01:55:33,280 --> 01:55:33,760
okay

2696
01:55:33,760 --> 01:55:37,920
thank you thank you and uh let's see

2697
01:55:37,920 --> 01:55:42,159
yeah and i think the time limited so

2698
01:55:42,159 --> 01:55:44,320
do you meant to go to the third page

2699
01:55:44,320 --> 01:55:45,760
directly

2700
01:55:45,760 --> 01:55:48,239
same case talk about the motivation it

2701
01:55:48,239 --> 01:55:49,280
goes

2702
01:55:49,280 --> 01:55:53,040
sure yeah yeah yeah thank you and uh

2703
01:55:53,040 --> 01:55:55,679
first of all we can find that with with

2704
01:55:55,679 --> 01:55:58,480
the increasing use of the existing

2705
01:55:58,480 --> 01:56:01,679
uh to disseminate types of

2706
01:56:01,679 --> 01:56:05,360
application information much more burden

2707
01:56:05,360 --> 01:56:08,480
are generated in isis protocol

2708
01:56:08,480 --> 01:56:12,159
so in addition advertisements of

2709
01:56:12,159 --> 01:56:15,119
such additional information not directly

2710
01:56:15,119 --> 01:56:16,880
related to isis

2711
01:56:16,880 --> 01:56:20,480
uh may potentially impact the routing

2712
01:56:20,480 --> 01:56:23,840
uh coverage and the stability so

2713
01:56:23,840 --> 01:56:27,360
we found that and it lasting to be

2714
01:56:27,360 --> 01:56:30,000
named generation information is it fine

2715
01:56:30,000 --> 01:56:30,800
to just

2716
01:56:30,800 --> 01:56:34,080
disseminate application information

2717
01:56:34,080 --> 01:56:37,199
and but we found that

2718
01:56:37,199 --> 01:56:39,679
the advertisements of general general

2719
01:56:39,679 --> 01:56:41,520
information must

2720
01:56:41,520 --> 01:56:44,639
occur in the numeral instance

2721
01:56:44,639 --> 01:56:48,320
of the iss protocol hence we

2722
01:56:48,320 --> 01:56:51,840
uh hence we found their requirements

2723
01:56:51,840 --> 01:56:56,320
that in information carried in generic

2724
01:56:56,320 --> 01:56:59,840
information tv should be associated with

2725
01:56:59,840 --> 01:57:02,880
uh another information carried in

2726
01:57:02,880 --> 01:57:06,960
other iss instance so

2727
01:57:06,960 --> 01:57:10,719
in less draft we try to eliminate the

2728
01:57:10,719 --> 01:57:11,520
potential

2729
01:57:11,520 --> 01:57:14,639
impact on the routing uh

2730
01:57:14,639 --> 01:57:17,840
conver uh covered convergence and

2731
01:57:17,840 --> 01:57:20,880
stability uh as well as avoid

2732
01:57:20,880 --> 01:57:25,360
the association issue so we present

2733
01:57:25,360 --> 01:57:28,800
a uh i mean

2734
01:57:28,800 --> 01:57:31,920
an optional uh solution

2735
01:57:31,920 --> 01:57:34,960
to separate separate dissemination of

2736
01:57:34,960 --> 01:57:38,800
rotting topology and traffic

2737
01:57:38,800 --> 01:57:41,440
engineering information and other types

2738
01:57:41,440 --> 01:57:44,000
of application information

2739
01:57:44,000 --> 01:57:47,599
into multiple flooding process

2740
01:57:47,599 --> 01:57:50,960
using the zero instance of the isis

2741
01:57:50,960 --> 01:57:52,159
protocol

2742
01:57:52,159 --> 01:57:55,679
so i think this is a

2743
01:57:55,679 --> 01:57:58,320
just a state of light with extension to

2744
01:57:58,320 --> 01:57:59,280
the

2745
01:57:59,280 --> 01:58:03,040
iss update process

2746
01:58:03,199 --> 01:58:07,840
so uh i think that's just

2747
01:58:07,840 --> 01:58:12,000
why we we we uh try to clarify

2748
01:58:12,000 --> 01:58:15,760
it's important to uh propose because

2749
01:58:15,760 --> 01:58:18,880
it's private uh private and

2750
01:58:18,880 --> 01:58:21,840
optional uh solution to isolate the

2751
01:58:21,840 --> 01:58:23,760
effect of flooding

2752
01:58:23,760 --> 01:58:26,080
and the processing of non-doubting

2753
01:58:26,080 --> 01:58:26,800
information

2754
01:58:26,800 --> 01:58:30,000
on the uh on routing

2755
01:58:30,000 --> 01:58:33,280
stability and listen

2756
01:58:33,280 --> 01:58:37,360
listen uh less solution can minimize the

2757
01:58:37,360 --> 01:58:40,320
complexity of implementation and the

2758
01:58:40,320 --> 01:58:41,360
cost of

2759
01:58:41,360 --> 01:58:46,480
uh adjacency is maternity due to

2760
01:58:46,639 --> 01:58:49,760
less mechanism we share

2761
01:58:49,760 --> 01:58:53,599
a common agency and a single

2762
01:58:53,599 --> 01:58:58,880
link state database next slide please

2763
01:58:59,199 --> 01:59:03,280
so here we defined the multiple

2764
01:59:03,280 --> 01:59:07,760
flooding instance and we also specified

2765
01:59:07,760 --> 01:59:10,880
a new trv carried

2766
01:59:10,880 --> 01:59:15,360
identifier in each of layers

2767
01:59:15,360 --> 01:59:19,040
link states pdus and sequence number

2768
01:59:19,040 --> 01:59:20,320
videos

2769
01:59:20,320 --> 01:59:24,000
yeah next slide

2770
01:59:24,480 --> 01:59:28,000
so here we give an a simple example

2771
01:59:28,000 --> 01:59:31,360
here to clarify the update process

2772
01:59:31,360 --> 01:59:35,040
operation we have defined extension

2773
01:59:35,040 --> 01:59:39,280
in less draft and you can find that

2774
01:59:39,280 --> 01:59:42,320
and the level issues in the table means

2775
01:59:42,320 --> 01:59:44,400
that each level

2776
01:59:44,400 --> 01:59:48,400
link states pdu

2777
01:59:48,480 --> 01:59:51,440
carries flooding information and belongs

2778
01:59:51,440 --> 01:59:51,760
to

2779
01:59:51,760 --> 01:59:55,040
a specified mfi

2780
01:59:55,040 --> 01:59:59,119
and yes in each nfi

2781
01:59:59,119 --> 02:00:02,960
update parameters can be customized

2782
02:00:02,960 --> 02:00:05,920
in depending on the requirements on the

2783
02:00:05,920 --> 02:00:06,880
flooding rate

2784
02:00:06,880 --> 02:00:10,080
of different information

2785
02:00:10,080 --> 02:00:13,679
next page

2786
02:00:13,679 --> 02:00:17,040
thank you so here is the consideration

2787
02:00:17,040 --> 02:00:18,159
of the inter

2788
02:00:18,159 --> 02:00:21,920
operate ability and

2789
02:00:21,920 --> 02:00:26,159
i think the next page is more important

2790
02:00:26,159 --> 02:00:29,760
i think the time is limited uh

2791
02:00:29,760 --> 02:00:32,960
and yeah yeah here we have a conclusion

2792
02:00:32,960 --> 02:00:36,239
and come here reaching with the multi

2793
02:00:36,239 --> 02:00:40,239
uh instance and we think we have more

2794
02:00:40,239 --> 02:00:43,440
discussing in the meninist

2795
02:00:43,440 --> 02:00:46,639
between these two

2796
02:00:46,639 --> 02:00:50,480
draft but we need to point out

2797
02:00:50,480 --> 02:00:54,000
the multi flooding instance

2798
02:00:54,000 --> 02:00:57,280
is is

2799
02:00:57,280 --> 02:01:00,639
a different solution to isolate

2800
02:01:00,639 --> 02:01:04,719
the non-routing information flooding

2801
02:01:04,719 --> 02:01:07,920
and and we can see that this

2802
02:01:07,920 --> 02:01:11,599
it's different in in the aspects of the

2803
02:01:11,599 --> 02:01:12,880
number of

2804
02:01:12,880 --> 02:01:15,119
protocol instances the number of

2805
02:01:15,119 --> 02:01:15,920
adjacency

2806
02:01:15,920 --> 02:01:18,159
and the number of the link state

2807
02:01:18,159 --> 02:01:20,719
database

2808
02:01:20,840 --> 02:01:24,880
so we think this is a lightweight

2809
02:01:24,880 --> 02:01:28,400
solution to describe

2810
02:01:28,400 --> 02:01:32,480
describe the complexity of implement

2811
02:01:32,480 --> 02:01:35,760
and also minimize the cost

2812
02:01:35,760 --> 02:01:39,199
of the adjacency maintenance yeah

2813
02:01:39,199 --> 02:01:41,520
all right ellie i think we're we're we

2814
02:01:41,520 --> 02:01:42,560
hit the mark

2815
02:01:42,560 --> 02:01:44,560
so we're the last presentation so i

2816
02:01:44,560 --> 02:01:46,159
don't mind leaving it open for a little

2817
02:01:46,159 --> 02:01:48,000
bit but

2818
02:01:48,000 --> 02:01:50,800
just know that yeah yeah that's all i

2819
02:01:50,800 --> 02:01:53,840
think this is a lot to page

2820
02:01:53,840 --> 02:01:57,360
yeah so as i have more comments then the

2821
02:01:57,360 --> 02:01:59,199
questions are welcome

2822
02:01:59,199 --> 02:02:02,840
and we will refine the draft yeah thank

2823
02:02:02,840 --> 02:02:04,480
you

2824
02:02:04,480 --> 02:02:06,879
thank you

2825
02:02:08,560 --> 02:02:10,800
i i guess i'm the first one on the queue

2826
02:02:10,800 --> 02:02:11,760
uh

2827
02:02:11,760 --> 02:02:13,599
this is ac uh speaking as a working

2828
02:02:13,599 --> 02:02:16,080
group member i was just gonna say

2829
02:02:16,080 --> 02:02:17,920
you said it's easier to implement you've

2830
02:02:17,920 --> 02:02:20,639
implemented this

2831
02:02:22,159 --> 02:02:23,840
it decreases the complexity of

2832
02:02:23,840 --> 02:02:32,320
implementation have you implemented it

2833
02:02:32,320 --> 02:02:36,080
yali uh yeah hi essie

2834
02:02:36,080 --> 02:02:40,000
uh so sorry i missed on your

2835
02:02:40,000 --> 02:02:43,920
your question your slide said that this

2836
02:02:43,920 --> 02:02:45,599
reduces the complexity of the

2837
02:02:45,599 --> 02:02:49,679
implementation have you implemented this

2838
02:02:50,560 --> 02:02:53,840
oh this a

2839
02:02:53,840 --> 02:02:57,360
this is analysis result

2840
02:02:57,360 --> 02:03:00,800
between the multi and the multi-plotting

2841
02:03:00,800 --> 02:03:02,159
essence

2842
02:03:02,159 --> 02:03:06,639
and this is not the

2843
02:03:06,639 --> 02:03:10,400
conclusion of the implementation results

2844
02:03:10,400 --> 02:03:12,320
yeah i don't i mean i i would disagree

2845
02:03:12,320 --> 02:03:14,000
with that it's easier to implement

2846
02:03:14,000 --> 02:03:15,280
if you're actually going to get

2847
02:03:15,280 --> 02:03:17,119
separation but that's we can that can be

2848
02:03:17,119 --> 02:03:20,159
discussed on the list

2849
02:03:21,360 --> 02:03:24,800
okay well we ran only a little yes

2850
02:03:24,800 --> 02:03:27,440
go ahead oh yeah ac do you have

2851
02:03:27,440 --> 02:03:28,400
something to add i was just going to

2852
02:03:28,400 --> 02:03:30,159
wrap the meeting

2853
02:03:30,159 --> 02:03:32,239
yeah you can wrap it i i want to make a

2854
02:03:32,239 --> 02:03:33,360
point that

2855
02:03:33,360 --> 02:03:35,760
this this is probably the first lsr or

2856
02:03:35,760 --> 02:03:38,080
isis meeting where les has not made

2857
02:03:38,080 --> 02:03:43,840
a comment so

2858
02:03:44,320 --> 02:03:47,440
okay then uh well

2859
02:03:47,440 --> 02:03:49,199
i think we had some interesting stuff

2860
02:03:49,199 --> 02:03:50,880
come up it's too bad we don't have

2861
02:03:50,880 --> 02:03:52,400
you know the lounge or whatever to go to

2862
02:03:52,400 --> 02:03:54,480
i guess there's gather um

2863
02:03:54,480 --> 02:03:56,960
but in any case uh i'll see you guys on

2864
02:03:56,960 --> 02:03:57,760
the list well

2865
02:03:57,760 --> 02:04:00,480
we'll see you on the list and uh in

2866
02:04:00,480 --> 02:04:01,679
probably not in san francisco but

2867
02:04:01,679 --> 02:04:04,159
virtually

2868
02:04:06,079 --> 02:04:10,880
thanks thanks everyone

2869
02:04:10,880 --> 02:04:21,520
thank you

