1
00:00:07,359 --> 00:00:08,000
okay

2
00:00:08,000 --> 00:00:12,559
are you seeing the full screen at this

3
00:00:14,920 --> 00:00:16,079
point

4
00:00:16,079 --> 00:00:19,760
am not seeing my screen okay

5
00:00:19,760 --> 00:00:21,680
right now we're seeing the words a share

6
00:00:21,680 --> 00:00:23,680
screen screen share is being started

7
00:00:23,680 --> 00:00:27,199
good morning okay that's wonderful

8
00:00:27,199 --> 00:00:31,840
well that looks even worse

9
00:00:33,920 --> 00:00:38,320
does that mean it's going toward it or

10
00:00:40,320 --> 00:00:43,600
not no

11
00:00:43,600 --> 00:00:47,120
that doesn't okay this does that change

12
00:00:47,120 --> 00:00:50,160
it to full screen

13
00:00:50,320 --> 00:00:52,719
or not

14
00:00:54,160 --> 00:00:58,320
that's your flaws pardon do you see

15
00:00:58,320 --> 00:00:59,440
slides

16
00:00:59,440 --> 00:01:03,120
yes okay once i do that i can't see the

17
00:01:03,120 --> 00:01:03,600
rest

18
00:01:03,600 --> 00:01:07,199
but uh

19
00:01:07,439 --> 00:01:10,159
i will get to present slides it looks

20
00:01:10,159 --> 00:01:11,200
like

21
00:01:11,200 --> 00:01:14,720
okay i don't think

22
00:01:14,720 --> 00:01:17,040
data tracker allows me to get in and

23
00:01:17,040 --> 00:01:17,759
look at this

24
00:01:17,759 --> 00:01:20,240
twice

25
00:01:20,880 --> 00:01:27,759
i've got another machine

26
00:01:27,759 --> 00:01:32,240
is it the full screen setup jeff

27
00:01:32,320 --> 00:01:34,000
you have a slide being shirt in the

28
00:01:34,000 --> 00:01:36,320
middle of a larger window

29
00:01:36,320 --> 00:01:39,520
okay that's that's

30
00:01:39,520 --> 00:01:43,679
the uh um

31
00:01:45,520 --> 00:01:48,799
is that better or worse of course

32
00:01:48,799 --> 00:01:51,280
you've uh reduced the contract so in the

33
00:01:51,280 --> 00:01:52,880
upper left there's a view menu

34
00:01:52,880 --> 00:01:57,199
the view menu may have a option to

35
00:01:57,360 --> 00:01:59,350
have let's see

36
00:01:59,350 --> 00:02:01,920
[Music]

37
00:02:01,920 --> 00:02:05,360
fit with okay yeah

38
00:02:05,360 --> 00:02:07,600
no it doesn't really do it doesn't

39
00:02:07,600 --> 00:02:09,758
really help at all

40
00:02:09,758 --> 00:02:13,200
okay that's my best what you got there

41
00:02:13,200 --> 00:02:16,480
that seems adequate okay

42
00:02:16,480 --> 00:02:19,120
and we are at the top of the hour now

43
00:02:19,120 --> 00:02:21,440
yep

44
00:02:21,440 --> 00:02:23,640
so i'm not going to be able to see the

45
00:02:23,640 --> 00:02:25,200
participants

46
00:02:25,200 --> 00:02:28,480
monitor uh jeff it appears that

47
00:02:28,480 --> 00:02:30,560
the way that i can do this is roll the

48
00:02:30,560 --> 00:02:31,599
slides

49
00:02:31,599 --> 00:02:36,080
so you and care will probably need to do

50
00:02:36,080 --> 00:02:38,319
the

51
00:02:38,879 --> 00:02:42,160
remainder let's see if i can get in a

52
00:02:42,160 --> 00:02:51,840
second way

53
00:02:57,200 --> 00:02:58,800
so we're waiting get the slide stuff

54
00:02:58,800 --> 00:03:00,400
taken care of if anybody wants to run a

55
00:03:00,400 --> 00:03:01,440
quick microphone check

56
00:03:01,440 --> 00:03:05,840
that would be a good time now

57
00:03:06,159 --> 00:03:10,800
testing the mic philippe we can hear you

58
00:03:10,800 --> 00:03:14,159
thank you and i'm pretty sure i heard

59
00:03:14,159 --> 00:03:16,480
randy too

60
00:03:16,480 --> 00:03:19,680
oh i saw randy as well so how about this

61
00:03:19,680 --> 00:03:21,519
does this work

62
00:03:21,519 --> 00:03:25,440
alvaro you're good thanks

63
00:03:25,680 --> 00:03:27,120
and john you sound like you're talking

64
00:03:27,120 --> 00:03:33,840
to the room rather than to a headset

65
00:03:34,760 --> 00:03:38,049
[Music]

66
00:03:42,239 --> 00:03:47,840
a little quiet but we can hear you okay

67
00:03:54,850 --> 00:03:58,060
[Music]

68
00:04:18,478 --> 00:04:21,040
that should sound like a headset now

69
00:04:21,040 --> 00:04:29,840
that sounds great john

70
00:04:40,840 --> 00:04:43,840
uh

71
00:04:44,000 --> 00:04:45,600
and since we're waiting on zoo let me go

72
00:04:45,600 --> 00:04:47,360
and try to share my slides see if it's

73
00:04:47,360 --> 00:04:57,840
any better

74
00:05:22,320 --> 00:05:26,159
if you actually are still listening

75
00:05:31,520 --> 00:05:34,719
so your microphone is currently not

76
00:05:36,840 --> 00:05:39,840
active

77
00:05:40,479 --> 00:05:53,360
and see what's offline it says

78
00:05:53,360 --> 00:05:55,199
well it wouldn't be an ietf without some

79
00:05:55,199 --> 00:05:56,400
sort of technical problems first thing

80
00:05:56,400 --> 00:06:06,720
in the morning

81
00:06:06,720 --> 00:06:09,520
it's all part of the phone your video is

82
00:06:09,520 --> 00:06:12,000
now active

83
00:06:15,600 --> 00:06:16,880
and again since we're waiting on

84
00:06:16,880 --> 00:06:18,639
everybody to finish joining uh this is a

85
00:06:18,639 --> 00:06:19,759
good time if you want to run a quick

86
00:06:19,759 --> 00:06:35,840
microphone check for you to do so

87
00:06:37,199 --> 00:06:39,039
hey sue you seem to be back your

88
00:06:39,039 --> 00:06:42,159
microphone is currently a mute

89
00:06:43,919 --> 00:06:48,160
yeah i just muted it again thank you

90
00:06:48,160 --> 00:06:51,680
thank you folks so sue i'm able to

91
00:06:51,680 --> 00:06:52,720
display full size

92
00:06:52,720 --> 00:06:54,000
screen if you want me to run the slides

93
00:06:54,000 --> 00:06:56,479
i can do so

94
00:06:56,479 --> 00:06:59,919
okay why don't we go with that

95
00:06:59,919 --> 00:07:03,360
there's always fun with backup um my

96
00:07:03,360 --> 00:07:06,720
my problem was uh

97
00:07:06,720 --> 00:07:09,680
tried a second connection bad choice

98
00:07:09,680 --> 00:07:10,639
okay folks

99
00:07:10,639 --> 00:07:14,080
i will go with the slides did john get a

100
00:07:14,080 --> 00:07:16,479
chance to say hello

101
00:07:16,479 --> 00:07:20,560
for his last moment as idr chair

102
00:07:21,039 --> 00:07:24,560
okay as you well know go ahead with the

103
00:07:24,560 --> 00:07:31,520
next slide jeff

104
00:07:31,520 --> 00:07:34,639
you find that we have two new co-chairs

105
00:07:34,639 --> 00:07:34,960
jeff

106
00:07:34,960 --> 00:07:37,840
and care uh there's handsome pictures

107
00:07:37,840 --> 00:07:39,440
for both of those

108
00:07:39,440 --> 00:07:41,919
uh and alvaro wanted a few minutes so

109
00:07:41,919 --> 00:07:45,840
alvaro you're in the queue

110
00:07:59,120 --> 00:08:02,240
are you around alvaro

111
00:08:02,240 --> 00:08:05,360
oh sorry i was on uh double mute

112
00:08:05,360 --> 00:08:08,240
um good morning to everyone or actually

113
00:08:08,240 --> 00:08:09,599
good afternoon because we're

114
00:08:09,599 --> 00:08:13,120
supposed to be in prague this week um

115
00:08:13,120 --> 00:08:14,560
as sue said i want to also welcome the

116
00:08:14,560 --> 00:08:16,240
new co-chair some of you should know by

117
00:08:16,240 --> 00:08:18,960
now or know already by now that

118
00:08:18,960 --> 00:08:22,240
john has been selected as the new

119
00:08:22,240 --> 00:08:23,520
routing id

120
00:08:23,520 --> 00:08:25,680
even though he's still listed here in

121
00:08:25,680 --> 00:08:26,879
munich as

122
00:08:26,879 --> 00:08:30,160
idr chair his official function started

123
00:08:30,160 --> 00:08:33,200
yesterday as as

124
00:08:33,200 --> 00:08:35,360
ad the official turnover of course

125
00:08:35,360 --> 00:08:36,559
happens on wednesday

126
00:08:36,559 --> 00:08:39,679
so this is the last time that we're

127
00:08:39,679 --> 00:08:40,880
going to see him as

128
00:08:40,880 --> 00:08:43,760
our chair john i think you're all going

129
00:08:43,760 --> 00:08:44,320
to agree

130
00:08:44,320 --> 00:08:46,320
has done a great job over the last few

131
00:08:46,320 --> 00:08:48,399
years

132
00:08:48,399 --> 00:08:52,480
as idr chair he had some

133
00:08:52,480 --> 00:08:56,399
big choose to fill in he surpassed

134
00:08:56,399 --> 00:08:59,760
um any expectation that

135
00:08:59,760 --> 00:09:02,800
anyone ever had um and

136
00:09:02,800 --> 00:09:05,279
so much so that of course idr and bgp

137
00:09:05,279 --> 00:09:06,399
have grown

138
00:09:06,399 --> 00:09:09,440
so much uh with him and sue in charge of

139
00:09:09,440 --> 00:09:10,880
the working group

140
00:09:10,880 --> 00:09:12,320
we have four or five different working

141
00:09:12,320 --> 00:09:14,560
groups working on on bgp

142
00:09:14,560 --> 00:09:17,839
and uh now we decided to add two

143
00:09:17,839 --> 00:09:20,000
new chairs so that we can handle the

144
00:09:20,000 --> 00:09:20,959
amount of work

145
00:09:20,959 --> 00:09:24,160
idr is the busiest

146
00:09:24,160 --> 00:09:28,000
working group in the ietf uh that means

147
00:09:28,000 --> 00:09:29,040
it has the most

148
00:09:29,040 --> 00:09:32,160
number of drafts active and

149
00:09:32,160 --> 00:09:34,959
in all kinds of states there's a big

150
00:09:34,959 --> 00:09:36,560
list that you saw this week

151
00:09:36,560 --> 00:09:38,959
that is just a small part of what we're

152
00:09:38,959 --> 00:09:40,399
going to discuss this week

153
00:09:40,399 --> 00:09:43,519
um so i want to again thank john

154
00:09:43,519 --> 00:09:46,800
for all his work uh it is going to be

155
00:09:46,800 --> 00:09:48,720
a pleasure and an honor serving with him

156
00:09:48,720 --> 00:09:52,080
as area director

157
00:09:52,080 --> 00:09:54,720
and welcome both cair and jeff as the

158
00:09:54,720 --> 00:09:55,279
new

159
00:09:55,279 --> 00:09:58,560
co-chairs um just one last thing i have

160
00:09:58,560 --> 00:09:59,040
to

161
00:09:59,040 --> 00:10:01,600
unfortunately go on to a different

162
00:10:01,600 --> 00:10:02,240
meeting that

163
00:10:02,240 --> 00:10:04,240
i'm also responsible for where i'm the

164
00:10:04,240 --> 00:10:05,279
ad

165
00:10:05,279 --> 00:10:08,160
so john is going to fill in for me here

166
00:10:08,160 --> 00:10:09,360
uh he said his

167
00:10:09,360 --> 00:10:12,800
his duty started yesterday so thank you

168
00:10:12,800 --> 00:10:18,560
and welcome

169
00:10:18,560 --> 00:10:21,839
thanks very much um i won't say

170
00:10:21,839 --> 00:10:25,440
a whole lot except to say uh

171
00:10:25,440 --> 00:10:26,800
thank you for being such a great working

172
00:10:26,800 --> 00:10:28,480
group and

173
00:10:28,480 --> 00:10:31,600
to sue for being the best coach here i

174
00:10:31,600 --> 00:10:33,040
could possibly ask for it's been one of

175
00:10:33,040 --> 00:10:36,079
the highlights of my career

176
00:10:38,959 --> 00:10:41,680
so just in case you all have jeff if you

177
00:10:41,680 --> 00:10:42,959
go to the next slide

178
00:10:42,959 --> 00:10:46,000
just in case

179
00:10:46,000 --> 00:10:49,200
next slide jeff if you get next slide

180
00:10:49,200 --> 00:10:50,560
just in case you want to make

181
00:10:50,560 --> 00:10:55,200
something fun john uh uh

182
00:10:55,200 --> 00:10:58,640
the uh we're sending you off with a

183
00:10:58,640 --> 00:11:02,560
little idr gift which is for your tea

184
00:11:02,560 --> 00:11:04,720
or other beverages there'll be a

185
00:11:04,720 --> 00:11:05,600
high-tech

186
00:11:05,600 --> 00:11:08,800
coffee cup delivered to you but going

187
00:11:08,800 --> 00:11:10,399
for that

188
00:11:10,399 --> 00:11:12,959
to fit on the bottom of that cup it

189
00:11:12,959 --> 00:11:13,600
plugs in

190
00:11:13,600 --> 00:11:17,040
it's one of my husband's fun cups

191
00:11:17,040 --> 00:11:19,920
and the battery tells you when the cup

192
00:11:19,920 --> 00:11:20,320
will

193
00:11:20,320 --> 00:11:23,440
stop providing automatic heat we're

194
00:11:23,440 --> 00:11:25,839
going to make little cup caddies for

195
00:11:25,839 --> 00:11:26,959
john's cup

196
00:11:26,959 --> 00:11:29,440
so i've ordered a whole bunch and i have

197
00:11:29,440 --> 00:11:32,000
a friend who'll put little vinyl pieces

198
00:11:32,000 --> 00:11:33,920
so if you want to send

199
00:11:33,920 --> 00:11:36,000
a message otherwise john will get

200
00:11:36,000 --> 00:11:37,040
something

201
00:11:37,040 --> 00:11:39,760
inspiring for me such as thanks as being

202
00:11:39,760 --> 00:11:40,800
a co-chair

203
00:11:40,800 --> 00:11:44,800
or some of the rfcs that he's joyfully

204
00:11:44,800 --> 00:11:48,000
either written or provided shepherding

205
00:11:48,000 --> 00:11:48,399
for

206
00:11:48,399 --> 00:11:50,800
so if you have one just send me a note

207
00:11:50,800 --> 00:11:53,600
i'll put your message here

208
00:11:53,600 --> 00:11:56,480
and we just re just a way of sending

209
00:11:56,480 --> 00:11:58,079
john into his a.d

210
00:11:58,079 --> 00:12:01,120
uh sleepless nights with uh coffee and

211
00:12:01,120 --> 00:12:02,000
our

212
00:12:02,000 --> 00:12:05,360
uh concerns jefferson thank you thank

213
00:12:05,360 --> 00:12:07,040
you very much when i'm drinking my my

214
00:12:07,040 --> 00:12:08,079
third cup of coffee

215
00:12:08,079 --> 00:12:11,519
at least will be hot

216
00:12:11,519 --> 00:12:14,320
yes that's the point my husband likes it

217
00:12:14,320 --> 00:12:14,720
uh

218
00:12:14,720 --> 00:12:18,959
as he goes on so the notewell

219
00:12:18,959 --> 00:12:20,959
is something you should notice if you

220
00:12:20,959 --> 00:12:22,160
haven't read it

221
00:12:22,160 --> 00:12:24,480
take time to read it or go to the itf

222
00:12:24,480 --> 00:12:25,279
page

223
00:12:25,279 --> 00:12:28,079
next one and we should go with our first

224
00:12:28,079 --> 00:12:30,399
presenters as i'm still a few minutes

225
00:12:30,399 --> 00:12:34,639
late jeff you're the first presenter

226
00:12:36,079 --> 00:12:39,440
thank you sue

227
00:12:39,440 --> 00:12:41,920
so i'll try to actually keep things

228
00:12:41,920 --> 00:12:43,360
moving at a fair pace for the first two

229
00:12:43,360 --> 00:12:44,639
presentations

230
00:12:44,639 --> 00:12:46,560
uh so in this respect i am speaking as

231
00:12:46,560 --> 00:12:49,360
one of the members of the ietf

232
00:12:49,360 --> 00:12:51,920
idr you know php auto configuration

233
00:12:51,920 --> 00:12:52,880
design team

234
00:12:52,880 --> 00:12:55,760
uh is uh warned helpfully put in a slide

235
00:12:55,760 --> 00:12:58,240
view that's a long name

236
00:12:58,240 --> 00:13:01,040
so the design team was kicked off during

237
00:13:01,040 --> 00:13:02,639
ietf 106

238
00:13:02,639 --> 00:13:04,639
basically over breakfast to talk about

239
00:13:04,639 --> 00:13:05,839
what are we going to do about auto

240
00:13:05,839 --> 00:13:06,639
configuration

241
00:13:06,639 --> 00:13:09,040
you know for bgp the topic has been sort

242
00:13:09,040 --> 00:13:10,959
of a hot one in some circles

243
00:13:10,959 --> 00:13:12,800
specifically in the context of trying to

244
00:13:12,800 --> 00:13:14,560
actually make data center

245
00:13:14,560 --> 00:13:17,680
bgp a lot easier to run the working

246
00:13:17,680 --> 00:13:18,720
group was

247
00:13:18,720 --> 00:13:20,560
the design team was spun up in january

248
00:13:20,560 --> 00:13:21,839
2020 uh

249
00:13:21,839 --> 00:13:23,680
to put together the requirements in

250
00:13:23,680 --> 00:13:25,440
solution space this was partially in

251
00:13:25,440 --> 00:13:26,880
response to a number of

252
00:13:26,880 --> 00:13:29,839
drafts people had put out covering

253
00:13:29,839 --> 00:13:31,519
different aspects of uh

254
00:13:31,519 --> 00:13:33,600
auto configuration and the design team's

255
00:13:33,600 --> 00:13:35,040
charter is to figure out

256
00:13:35,040 --> 00:13:36,880
what do we actually you know need to do

257
00:13:36,880 --> 00:13:39,519
for the working group

258
00:13:39,519 --> 00:13:42,320
as sometimes happens in ietf work the

259
00:13:42,320 --> 00:13:43,199
work stalled

260
00:13:43,199 --> 00:13:45,680
and we kicked it off basically again

261
00:13:45,680 --> 00:13:46,480
fresh in

262
00:13:46,480 --> 00:13:49,600
january 2021 and we've been meeting at a

263
00:13:49,600 --> 00:13:50,399
good pace

264
00:13:50,399 --> 00:13:53,279
since that point uh it's worth

265
00:13:53,279 --> 00:13:53,839
mentioning

266
00:13:53,839 --> 00:13:56,079
that uh here's the current design team

267
00:13:56,079 --> 00:13:56,959
members

268
00:13:56,959 --> 00:13:59,199
and we all special thanks to randy bush

269
00:13:59,199 --> 00:14:00,959
for doing the initial work for putting

270
00:14:00,959 --> 00:14:02,240
together the you know

271
00:14:02,240 --> 00:14:04,160
core of the document that we have

272
00:14:04,160 --> 00:14:07,120
extended since then

273
00:14:07,199 --> 00:14:09,920
so the critical decision for the design

274
00:14:09,920 --> 00:14:10,959
team was to focus

275
00:14:10,959 --> 00:14:13,279
specifically on bgp auto configuration

276
00:14:13,279 --> 00:14:15,760
for data center purposes

277
00:14:15,760 --> 00:14:19,120
it was within our discussions of pgp

278
00:14:19,120 --> 00:14:21,600
auto configuration for other contexts

279
00:14:21,600 --> 00:14:23,440
you know not specifically to solve know

280
00:14:23,440 --> 00:14:24,639
that problem for

281
00:14:24,639 --> 00:14:26,320
other situations you know as an example

282
00:14:26,320 --> 00:14:28,079
for pec

283
00:14:28,079 --> 00:14:31,440
controllers or for

284
00:14:31,440 --> 00:14:34,320
asbrs or for talking to route reflectors

285
00:14:34,320 --> 00:14:35,600
but to make sure that

286
00:14:35,600 --> 00:14:37,440
if we're going to pick something that is

287
00:14:37,440 --> 00:14:39,760
useful for data center purposes

288
00:14:39,760 --> 00:14:42,000
if it's extensible for other purposes

289
00:14:42,000 --> 00:14:43,440
that can be done so

290
00:14:43,440 --> 00:14:45,680
and now our determinations largely match

291
00:14:45,680 --> 00:14:46,639
that

292
00:14:46,639 --> 00:14:49,600
for the most part the contents of auto

293
00:14:49,600 --> 00:14:51,440
configuration that the design team

294
00:14:51,440 --> 00:14:53,839
discussed is that we do need support for

295
00:14:53,839 --> 00:14:54,480
v4

296
00:14:54,480 --> 00:14:56,800
v6 potentially both potentially neither

297
00:14:56,800 --> 00:14:58,720
it depends on exactly how you uh

298
00:14:58,720 --> 00:15:01,040
want to do your bgp the example four

299
00:15:01,040 --> 00:15:02,000
over six except

300
00:15:02,000 --> 00:15:05,360
for et cetera we do need the support

301
00:15:05,360 --> 00:15:07,199
both appearing directly at the interface

302
00:15:07,199 --> 00:15:09,440
level and potentially for loopbacks

303
00:15:09,440 --> 00:15:10,959
there are for example

304
00:15:10,959 --> 00:15:14,000
ibgp clo fabric topologies that do pure

305
00:15:14,000 --> 00:15:14,800
overlook back

306
00:15:14,800 --> 00:15:16,800
and therefore need some help with

307
00:15:16,800 --> 00:15:18,399
bootstrapping forwarding now to get

308
00:15:18,399 --> 00:15:19,839
things up

309
00:15:19,839 --> 00:15:22,320
we need to pass around enough state

310
00:15:22,320 --> 00:15:23,120
inside of

311
00:15:23,120 --> 00:15:24,720
whatever the protocol is to help us

312
00:15:24,720 --> 00:15:26,560
figure out what the end points actually

313
00:15:26,560 --> 00:15:28,880
need to get a session up for bgp

314
00:15:28,880 --> 00:15:31,040
you know that only not only includes ip

315
00:15:31,040 --> 00:15:32,880
addresses but includes things you know

316
00:15:32,880 --> 00:15:34,880
along the lines of authentication or

317
00:15:34,880 --> 00:15:36,000
transport security

318
00:15:36,000 --> 00:15:39,600
like tcpao tcpmd5 ipsec

319
00:15:39,600 --> 00:15:42,800
uh things like gtsm are configuration

320
00:15:42,800 --> 00:15:44,000
parameters that are needed

321
00:15:44,000 --> 00:15:45,600
for tsp to come up appropriately for

322
00:15:45,600 --> 00:15:47,360
these things and for some

323
00:15:47,360 --> 00:15:49,199
implementations uh bfd

324
00:15:49,199 --> 00:15:52,000
configuration needs to be clear and set

325
00:15:52,000 --> 00:15:52,720
up before the

326
00:15:52,720 --> 00:15:56,399
session ends up being able to come up

327
00:15:56,399 --> 00:15:58,240
now obviously there's information that

328
00:15:58,240 --> 00:16:01,120
bgp also needs to carry around

329
00:16:01,120 --> 00:16:03,120
so it has things like the as number the

330
00:16:03,120 --> 00:16:06,000
affysafis

331
00:16:06,399 --> 00:16:08,079
clearly these things are present in the

332
00:16:08,079 --> 00:16:09,759
bgp open message

333
00:16:09,759 --> 00:16:12,000
the information really here is to decide

334
00:16:12,000 --> 00:16:13,759
do we want to open up a session

335
00:16:13,759 --> 00:16:16,320
and to some extent that also includes

336
00:16:16,320 --> 00:16:19,199
things like a device role

337
00:16:19,199 --> 00:16:21,600
device roles are intended to be hints

338
00:16:21,600 --> 00:16:23,600
for the selection process to

339
00:16:23,600 --> 00:16:25,680
allow a pgp speaker to decide do you

340
00:16:25,680 --> 00:16:28,320
want to appear at this thing

341
00:16:28,320 --> 00:16:31,839
in many cases for common situations

342
00:16:31,839 --> 00:16:32,959
we're trying to cover four

343
00:16:32,959 --> 00:16:35,279
data centers especially some of these

344
00:16:35,279 --> 00:16:37,040
roles will be well known

345
00:16:37,040 --> 00:16:38,880
so for example in your place in the

346
00:16:38,880 --> 00:16:41,120
topology if you are a leaf node and a

347
00:16:41,120 --> 00:16:42,880
three layer no clove fabric

348
00:16:42,880 --> 00:16:44,800
you only really want to talk to

349
00:16:44,800 --> 00:16:47,519
aggregation layers as an example

350
00:16:47,519 --> 00:16:50,000
so responding to auto configuration for

351
00:16:50,000 --> 00:16:51,600
another leaf or for the spine layer

352
00:16:51,600 --> 00:16:52,160
would be

353
00:16:52,160 --> 00:16:55,440
inappropriate and and that said well

354
00:16:55,440 --> 00:16:57,839
there are probably several well-defined

355
00:16:57,839 --> 00:17:00,399
uh roles that we can actually define

356
00:17:00,399 --> 00:17:02,399
the majority of these were likely to be

357
00:17:02,399 --> 00:17:04,319
set aside as private and to be allowed

358
00:17:04,319 --> 00:17:05,199
to be used in

359
00:17:05,199 --> 00:17:06,959
the machinery for an operator for their

360
00:17:06,959 --> 00:17:09,119
own purposes

361
00:17:09,119 --> 00:17:11,199
once we have enough information to

362
00:17:11,199 --> 00:17:12,640
decide do we want to

363
00:17:12,640 --> 00:17:15,119
appear at this thing bgp basically takes

364
00:17:15,119 --> 00:17:16,480
over now we have enough information to

365
00:17:16,480 --> 00:17:18,319
bootstrap the tcp session and

366
00:17:18,319 --> 00:17:21,439
we're ready to go one of the

367
00:17:21,439 --> 00:17:22,559
requirements that we did

368
00:17:22,559 --> 00:17:25,599
discuss is that some operators do not

369
00:17:25,599 --> 00:17:26,720
actually want

370
00:17:26,720 --> 00:17:29,840
bgp to bring up the session itself there

371
00:17:29,840 --> 00:17:33,200
is a desire for a validation mode where

372
00:17:33,200 --> 00:17:35,760
effectively the manual configuration if

373
00:17:35,760 --> 00:17:36,559
it was

374
00:17:36,559 --> 00:17:39,840
conflicting with the stuff dis by the

375
00:17:39,840 --> 00:17:41,440
discovery protocol

376
00:17:41,440 --> 00:17:45,039
you know the implementations capable of

377
00:17:45,039 --> 00:17:46,320
actually raising an alarm

378
00:17:46,320 --> 00:17:48,799
to the operator and they can decide what

379
00:17:48,799 --> 00:17:50,480
they want to do about that

380
00:17:50,480 --> 00:17:53,600
so this allows in many cases validation

381
00:17:53,600 --> 00:17:56,160
of no expectations versus configuration

382
00:17:56,160 --> 00:17:58,080
and just as importantly allows people to

383
00:17:58,080 --> 00:17:58,799
override

384
00:17:58,799 --> 00:18:00,480
auto configuration if it doesn't make

385
00:18:00,480 --> 00:18:02,799
sense

386
00:18:03,440 --> 00:18:05,440
one of the more extensive conversations

387
00:18:05,440 --> 00:18:06,559
which does

388
00:18:06,559 --> 00:18:09,039
impact what idr decides to do next in

389
00:18:09,039 --> 00:18:11,200
terms of selecting protocols

390
00:18:11,200 --> 00:18:13,360
is where does the protocol actually run

391
00:18:13,360 --> 00:18:15,440
layer two or layer three

392
00:18:15,440 --> 00:18:18,400
there are use cases for both of them a

393
00:18:18,400 --> 00:18:20,160
lot of our discussion was that

394
00:18:20,160 --> 00:18:22,080
layer three probably in some flavor

395
00:18:22,080 --> 00:18:24,000
multicast like you know the all routers

396
00:18:24,000 --> 00:18:26,400
multicast group as an example

397
00:18:26,400 --> 00:18:28,400
would probably suit the majority of use

398
00:18:28,400 --> 00:18:30,320
cases that we're looking at

399
00:18:30,320 --> 00:18:31,840
the challenge becomes when you're

400
00:18:31,840 --> 00:18:34,400
plugging into something that might be

401
00:18:34,400 --> 00:18:37,039
a switch-like device there's a good

402
00:18:37,039 --> 00:18:37,840
chance that

403
00:18:37,840 --> 00:18:41,280
you know your broadcast domain or

404
00:18:41,280 --> 00:18:42,799
multicast domain in this case is

405
00:18:42,799 --> 00:18:43,679
actually

406
00:18:43,679 --> 00:18:46,160
larger than you're expecting and

407
00:18:46,160 --> 00:18:47,840
sometimes the expectation is you really

408
00:18:47,840 --> 00:18:48,480
just want to

409
00:18:48,480 --> 00:18:49,919
peer at the thing that's on the other

410
00:18:49,919 --> 00:18:51,919
side of the port if you're doing

411
00:18:51,919 --> 00:18:53,679
something that resembles multicast or

412
00:18:53,679 --> 00:18:54,640
broadcast

413
00:18:54,640 --> 00:18:56,480
potentially that's uh much further

414
00:18:56,480 --> 00:18:57,919
across the fabric than you're really

415
00:18:57,919 --> 00:18:59,120
expecting

416
00:18:59,120 --> 00:19:01,280
so this does mean that uh there may be

417
00:19:01,280 --> 00:19:02,640
cases for restricted

418
00:19:02,640 --> 00:19:06,559
you know layer two unicast or multicast

419
00:19:06,960 --> 00:19:10,080
so we we published the draft i misnamed

420
00:19:10,080 --> 00:19:11,520
the draft as i mentioned on the mailing

421
00:19:11,520 --> 00:19:12,799
list

422
00:19:12,799 --> 00:19:15,840
and part of the next steps are

423
00:19:15,840 --> 00:19:17,200
have the working group review what the

424
00:19:17,200 --> 00:19:20,000
design teams come up with decide that

425
00:19:20,000 --> 00:19:21,760
this is actually what we wish to carry

426
00:19:21,760 --> 00:19:23,280
forward and

427
00:19:23,280 --> 00:19:24,720
we're looking for feedback on the

428
00:19:24,720 --> 00:19:26,320
contents

429
00:19:26,320 --> 00:19:28,480
uh once we've actually gone through an

430
00:19:28,480 --> 00:19:30,720
iterative cycle to figure out

431
00:19:30,720 --> 00:19:32,960
did we actually do our job correctly the

432
00:19:32,960 --> 00:19:34,000
job of idr

433
00:19:34,000 --> 00:19:36,240
is to discuss what the next steps are

434
00:19:36,240 --> 00:19:38,640
for actually uh either

435
00:19:38,640 --> 00:19:40,559
picking one of the existing uh proposed

436
00:19:40,559 --> 00:19:41,760
solutions

437
00:19:41,760 --> 00:19:43,760
and filling in the holes that the design

438
00:19:43,760 --> 00:19:45,520
team has identified

439
00:19:45,520 --> 00:19:47,440
uh alternatively you know we may decide

440
00:19:47,440 --> 00:19:48,799
that as a working group

441
00:19:48,799 --> 00:19:50,400
you know do we need something that is

442
00:19:50,400 --> 00:19:53,840
not in the proposals to date

443
00:19:55,039 --> 00:19:56,720
so we have a small amount of time for

444
00:19:56,720 --> 00:20:07,840
questions i've got us up a little bit

445
00:20:11,760 --> 00:20:14,640
so robin go ahead

446
00:20:17,280 --> 00:20:18,840
you'll need to click on the microphone

447
00:20:18,840 --> 00:20:21,840
icon

448
00:20:23,679 --> 00:20:27,200
hello jeff hi robin we can hear you

449
00:20:27,200 --> 00:20:30,240
okay jeff i thought the two questions

450
00:20:30,240 --> 00:20:32,799
one question is about this scenario you

451
00:20:32,799 --> 00:20:33,520
mean that

452
00:20:33,520 --> 00:20:36,799
this is the scenario for the bp auto

453
00:20:36,799 --> 00:20:38,240
configuration

454
00:20:38,240 --> 00:20:42,960
focus on the data center network is that

455
00:20:42,960 --> 00:20:46,640
is this a one or not

456
00:20:46,640 --> 00:20:48,480
that's the critical thing that we were

457
00:20:48,480 --> 00:20:49,840
doing our work for

458
00:20:49,840 --> 00:20:51,679
um it was our determination that we

459
00:20:51,679 --> 00:20:53,200
could probably support other

460
00:20:53,200 --> 00:20:55,840
non-data centers non-data center

461
00:20:55,840 --> 00:20:57,039
scenarios

462
00:20:57,039 --> 00:21:00,640
with the same machinery okay

463
00:21:00,640 --> 00:21:03,280
but uh even for the data center network

464
00:21:03,280 --> 00:21:04,960
you also have some the

465
00:21:04,960 --> 00:21:08,400
specific uh limitation or some of this

466
00:21:08,400 --> 00:21:11,760
constraint i mean that means

467
00:21:11,760 --> 00:21:15,679
that the spine level architecture

468
00:21:15,679 --> 00:21:18,880
data center network

469
00:21:19,039 --> 00:21:22,559
or maybe other data center network with

470
00:21:22,559 --> 00:21:23,280
different

471
00:21:23,280 --> 00:21:27,280
topology certainly the

472
00:21:27,280 --> 00:21:28,880
main scenario that we were thinking

473
00:21:28,880 --> 00:21:30,799
about was the standard clo fabric type

474
00:21:30,799 --> 00:21:31,600
topologies

475
00:21:31,600 --> 00:21:34,799
but uh in other type topologies such as

476
00:21:34,799 --> 00:21:36,400
butterfly etc

477
00:21:36,400 --> 00:21:39,679
you know it's our belief that the bgp

478
00:21:39,679 --> 00:21:41,440
state that needs to be passed drawn by

479
00:21:41,440 --> 00:21:42,720
the discovery protocol

480
00:21:42,720 --> 00:21:45,520
probably will be the same very likely

481
00:21:45,520 --> 00:21:45,840
the

482
00:21:45,840 --> 00:21:48,559
role information as to how you discover

483
00:21:48,559 --> 00:21:49,600
what your

484
00:21:49,600 --> 00:21:51,520
you know adjacent neighbors should be in

485
00:21:51,520 --> 00:21:52,720
the topology

486
00:21:52,720 --> 00:21:54,320
would potentially go in there and you

487
00:21:54,320 --> 00:21:56,000
know that's that's where the next steps

488
00:21:56,000 --> 00:21:56,480
are

489
00:21:56,480 --> 00:21:59,120
did we get the state necessary in the

490
00:21:59,120 --> 00:22:00,559
protocol correct

491
00:22:00,559 --> 00:22:02,080
and we have enough information to

492
00:22:02,080 --> 00:22:03,840
support the more general fashion

493
00:22:03,840 --> 00:22:07,760
discovery for various topologies okay

494
00:22:07,760 --> 00:22:10,320
my second question is about the layer 3

495
00:22:10,320 --> 00:22:11,520
and the layer 2.

496
00:22:11,520 --> 00:22:14,559
i'm a little confused about the switch

497
00:22:14,559 --> 00:22:18,080
fabric do you mean that the mac

498
00:22:18,080 --> 00:22:21,120
switch or the vlan switch

499
00:22:21,120 --> 00:22:23,520
is that

500
00:22:24,159 --> 00:22:28,000
is that the switch fabric

501
00:22:28,000 --> 00:22:30,480
well to pick an example uh a lot of

502
00:22:30,480 --> 00:22:31,840
layer three

503
00:22:31,840 --> 00:22:33,840
ports that you may plug into may be

504
00:22:33,840 --> 00:22:35,520
actually carrying uh information

505
00:22:35,520 --> 00:22:37,520
from one port to another across

506
00:22:37,520 --> 00:22:40,400
something like evpn as an example

507
00:22:40,400 --> 00:22:43,679
so since there is really many extra

508
00:22:43,679 --> 00:22:45,440
devices in the middle

509
00:22:45,440 --> 00:22:47,200
what is your trust level about ip

510
00:22:47,200 --> 00:22:50,400
multicast in those types of environments

511
00:22:50,400 --> 00:22:51,919
it's the experience of several people on

512
00:22:51,919 --> 00:22:54,400
the design team that multicast

513
00:22:54,400 --> 00:22:56,880
for ip across various types of switching

514
00:22:56,880 --> 00:22:57,679
technologies

515
00:22:57,679 --> 00:22:59,120
sometimes ends up being a little bit

516
00:22:59,120 --> 00:23:01,120
strange so we wanted to make sure that

517
00:23:01,120 --> 00:23:02,960
for circumstances that you want to talk

518
00:23:02,960 --> 00:23:05,120
to a known device that is

519
00:23:05,120 --> 00:23:06,320
directly on the other side of the port

520
00:23:06,320 --> 00:23:08,640
that a layer 2 option is present

521
00:23:08,640 --> 00:23:12,000
and we have two drafts that are

522
00:23:12,000 --> 00:23:13,039
discussed in the

523
00:23:13,039 --> 00:23:14,799
design team requirements that have been

524
00:23:14,799 --> 00:23:16,080
published that talk about layer two

525
00:23:16,080 --> 00:23:18,480
solutions

526
00:23:18,480 --> 00:23:22,720
okay okay thanks

527
00:23:22,720 --> 00:23:25,200
i should

528
00:23:27,280 --> 00:23:30,320
ask one question for the operation of

529
00:23:30,320 --> 00:23:30,880
the

530
00:23:30,880 --> 00:23:34,159
pdp auto configuration we must

531
00:23:34,159 --> 00:23:37,840
configure the peer charge information in

532
00:23:37,840 --> 00:23:39,120
other ones

533
00:23:39,120 --> 00:23:42,240
so so and

534
00:23:42,240 --> 00:23:46,480
and also the result of the each device

535
00:23:46,480 --> 00:23:49,440
so i think if all of cn is the help

536
00:23:49,440 --> 00:23:51,919
being configured

537
00:23:51,919 --> 00:23:55,840
the the the pdb configuration

538
00:23:55,840 --> 00:23:57,919
work the work for the pgp configuration

539
00:23:57,919 --> 00:23:59,919
is

540
00:23:59,919 --> 00:24:03,919
there is there is very little synthetic

541
00:24:03,919 --> 00:24:06,880
configuration so

542
00:24:06,960 --> 00:24:11,120
uh so your observation is correct

543
00:24:11,760 --> 00:24:14,400
um depending on what you're looking to

544
00:24:14,400 --> 00:24:17,120
use auto configuration for

545
00:24:17,120 --> 00:24:18,480
i'm sorry i get a little bit of feedback

546
00:24:18,480 --> 00:24:19,760
from your microphone as you know if you

547
00:24:19,760 --> 00:24:20,960
could do please

548
00:24:20,960 --> 00:24:23,760
um yeah when you when you're getting uh

549
00:24:23,760 --> 00:24:25,600
auto configuration being done it depends

550
00:24:25,600 --> 00:24:27,039
on what you're using auto configuration

551
00:24:27,039 --> 00:24:27,679
for

552
00:24:27,679 --> 00:24:30,159
uh in some cases people are looking to

553
00:24:30,159 --> 00:24:31,919
just avoid having to do ip address

554
00:24:31,919 --> 00:24:33,360
configuration is one of their

555
00:24:33,360 --> 00:24:36,799
use cases but in other use cases perhaps

556
00:24:36,799 --> 00:24:37,679
you actually have

557
00:24:37,679 --> 00:24:40,159
a device that you literally take out of

558
00:24:40,159 --> 00:24:41,039
a box

559
00:24:41,039 --> 00:24:42,799
it is expecting that it's going to be

560
00:24:42,799 --> 00:24:44,880
going into a bhp flow fabric

561
00:24:44,880 --> 00:24:47,520
and you plug a port into another device

562
00:24:47,520 --> 00:24:48,880
and it just automatically joins you know

563
00:24:48,880 --> 00:24:51,120
at the appropriate place in the topology

564
00:24:51,120 --> 00:24:53,600
so you're correct that you can use this

565
00:24:53,600 --> 00:24:54,559
for

566
00:24:54,559 --> 00:24:57,200
very lightweight just for avoiding ip

567
00:24:57,200 --> 00:24:58,960
address configuration and managing all

568
00:24:58,960 --> 00:25:00,640
the tcp properties

569
00:25:00,640 --> 00:25:02,720
all the way to devices coming out of the

570
00:25:02,720 --> 00:25:04,000
box that know exactly what they're

571
00:25:04,000 --> 00:25:06,480
supposed to do

572
00:25:06,799 --> 00:25:09,919
uh i i think if we uh if we uh

573
00:25:09,919 --> 00:25:13,200
if the auto configuration work account

574
00:25:13,200 --> 00:25:16,240
auto configure uh all religious

575
00:25:16,240 --> 00:25:17,840
information for example the

576
00:25:17,840 --> 00:25:20,640
the s number on the pure address and

577
00:25:20,640 --> 00:25:21,520
then i

578
00:25:21,520 --> 00:25:23,760
i think it kind of is the deployment of

579
00:25:23,760 --> 00:25:25,200
the pdp in the video

580
00:25:25,200 --> 00:25:28,480
data center if we either need to

581
00:25:28,480 --> 00:25:31,120
configure all these scenes then i think

582
00:25:31,120 --> 00:25:31,520
the

583
00:25:31,520 --> 00:25:34,799
most most part of work has been finished

584
00:25:34,799 --> 00:25:42,799
okay so the i joined your

585
00:25:42,799 --> 00:25:45,440
microphone cut off but uh to talk about

586
00:25:45,440 --> 00:25:46,000
why i think

587
00:25:46,000 --> 00:25:48,159
what you're heading towards is uh the

588
00:25:48,159 --> 00:25:49,520
design team

589
00:25:49,520 --> 00:25:51,600
document is not intended to address you

590
00:25:51,600 --> 00:25:52,720
know 100

591
00:25:52,720 --> 00:25:55,279
of the picture for configuring a device

592
00:25:55,279 --> 00:25:56,880
that speaks bgb

593
00:25:56,880 --> 00:25:59,679
so this is auto configuration for

594
00:25:59,679 --> 00:26:01,279
bringing up a session

595
00:26:01,279 --> 00:26:02,960
you're correct that if a device needs to

596
00:26:02,960 --> 00:26:04,720
learn its own properties things like

597
00:26:04,720 --> 00:26:07,919
as numbers etc

598
00:26:07,919 --> 00:26:09,520
that's a bigger piece of auto

599
00:26:09,520 --> 00:26:11,360
configuration for the device that may

600
00:26:11,360 --> 00:26:13,360
fall under other ztp type work zero

601
00:26:13,360 --> 00:26:15,279
touch provisioning

602
00:26:15,279 --> 00:26:19,440
yeah yeah okay i know thank you

603
00:26:19,919 --> 00:26:21,919
again i think we're actually out of time

604
00:26:21,919 --> 00:26:23,120
with you so

605
00:26:23,120 --> 00:26:26,239
what should be the last question

606
00:26:30,080 --> 00:26:32,960
hi can you hear me jeff we can hear you

607
00:26:32,960 --> 00:26:33,360
yeah

608
00:26:33,360 --> 00:26:37,279
so i just a question i guess um

609
00:26:37,279 --> 00:26:40,159
most vendors i get i guess um have some

610
00:26:40,159 --> 00:26:41,760
type of audit provisioning

611
00:26:41,760 --> 00:26:43,520
well not not necessarily provision

612
00:26:43,520 --> 00:26:46,080
provisioning but a zero touch uh

613
00:26:46,080 --> 00:26:48,480
programmability i guess built into their

614
00:26:48,480 --> 00:26:49,919
uh

615
00:26:49,919 --> 00:26:52,640
into their architecture so i'm guessing

616
00:26:52,640 --> 00:26:53,039
this

617
00:26:53,039 --> 00:26:54,559
this mechanism would be something that

618
00:26:54,559 --> 00:26:55,840
would play into that but it would be

619
00:26:55,840 --> 00:26:56,720
like uh

620
00:26:56,720 --> 00:26:58,320
something that you could put a box out

621
00:26:58,320 --> 00:27:00,400
and just uh be able to provision

622
00:27:00,400 --> 00:27:03,840
but work in conjunction with a banter

623
00:27:03,840 --> 00:27:05,279
you know particular vendors like built

624
00:27:05,279 --> 00:27:07,520
it i guess you know on a provisioning

625
00:27:07,520 --> 00:27:10,159
capability

626
00:27:10,159 --> 00:27:11,679
absolutely so you know one way to

627
00:27:11,679 --> 00:27:13,279
visualize this is that

628
00:27:13,279 --> 00:27:15,600
your ztp mechanism for bootstrapping the

629
00:27:15,600 --> 00:27:18,000
box programs things like as numbers what

630
00:27:18,000 --> 00:27:19,679
the role is supposed to be

631
00:27:19,679 --> 00:27:22,799
but uh in even in those environments uh

632
00:27:22,799 --> 00:27:24,559
you're expecting that you need to hear

633
00:27:24,559 --> 00:27:26,000
something from the other side of the

634
00:27:26,000 --> 00:27:27,840
wire to know what you're talking to is

635
00:27:27,840 --> 00:27:29,679
an acceptable device to peer with before

636
00:27:29,679 --> 00:27:32,000
you bring up your peering session

637
00:27:32,000 --> 00:27:34,320
gotcha so it's probably that first layer

638
00:27:34,320 --> 00:27:35,600
i guess that happens really that

639
00:27:35,600 --> 00:27:37,039
discovery layer which is probably the

640
00:27:37,039 --> 00:27:39,039
more complicated and the logic

641
00:27:39,039 --> 00:27:41,200
related to the discovery i guess that's

642
00:27:41,200 --> 00:27:42,799
that's the you know the key part of the

643
00:27:42,799 --> 00:27:44,799
audit provisioning how do you discover

644
00:27:44,799 --> 00:27:46,480
what what i should be and what my role

645
00:27:46,480 --> 00:27:48,080
is i guess and that's that's probably

646
00:27:48,080 --> 00:27:49,120
the biggest one

647
00:27:49,120 --> 00:27:50,799
once it discovers it and then it can

648
00:27:50,799 --> 00:27:52,399
actually go through the next layers

649
00:27:52,399 --> 00:27:54,000
so probably to help with that first

650
00:27:54,000 --> 00:27:55,679
layer the discovery layer

651
00:27:55,679 --> 00:27:58,960
of the um vendor auto provisioning i

652
00:27:58,960 --> 00:27:59,679
guess

653
00:27:59,679 --> 00:28:02,399
makes makes sense that makes sense and

654
00:28:02,399 --> 00:28:03,760
as you said i think this is probably

655
00:28:03,760 --> 00:28:05,600
first application of data center but

656
00:28:05,600 --> 00:28:07,039
there's no reason why

657
00:28:07,039 --> 00:28:08,399
you couldn't use this in really any

658
00:28:08,399 --> 00:28:10,640
application i would think

659
00:28:10,640 --> 00:28:14,559
uh that that is my personal hope at

660
00:28:14,840 --> 00:28:16,080
least

661
00:28:16,080 --> 00:28:18,240
all right very good thank you thank you

662
00:28:18,240 --> 00:28:19,440
again uh

663
00:28:19,440 --> 00:28:22,320
and what we are likely to do as a

664
00:28:22,320 --> 00:28:23,279
follow-up is

665
00:28:23,279 --> 00:28:25,919
depending on interest that we see on the

666
00:28:25,919 --> 00:28:27,679
mailing list and discussion

667
00:28:27,679 --> 00:28:29,440
uh the chairs have discussed that

668
00:28:29,440 --> 00:28:31,279
perhaps we will have a

669
00:28:31,279 --> 00:28:33,279
interim set aside for taking this work

670
00:28:33,279 --> 00:28:35,360
forward

671
00:28:35,360 --> 00:28:37,120
so and just looking ourselves continuing

672
00:28:37,120 --> 00:28:38,640
back on time i'm gonna move to the next

673
00:28:38,640 --> 00:28:41,200
presentation

674
00:28:41,200 --> 00:28:43,440
uh so this is moving us into the flow

675
00:28:43,440 --> 00:28:44,480
spec portion of uh

676
00:28:44,480 --> 00:28:46,640
you know today's presentation i'm taking

677
00:28:46,640 --> 00:28:48,080
the first one

678
00:28:48,080 --> 00:28:50,159
i'm going to be talking about some flow

679
00:28:50,159 --> 00:28:52,320
spec extensibility issues in general

680
00:28:52,320 --> 00:28:54,480
and a proposal maybe to address some of

681
00:28:54,480 --> 00:28:57,760
the deficiencies we have today

682
00:28:57,760 --> 00:29:00,960
so we've just gotten done a huge amount

683
00:29:00,960 --> 00:29:03,279
of work uh taking 5575

684
00:29:03,279 --> 00:29:06,720
to rfc 89 55. uh you know thank you to

685
00:29:06,720 --> 00:29:07,279
christoph

686
00:29:07,279 --> 00:29:09,840
uh for driving that perk you know this

687
00:29:09,840 --> 00:29:10,720
was

688
00:29:10,720 --> 00:29:12,720
kristoff's no first heavy piece of work

689
00:29:12,720 --> 00:29:14,399
in ietf as best i know

690
00:29:14,399 --> 00:29:16,240
and uh certainly took longer than i

691
00:29:16,240 --> 00:29:18,559
think he was expecting

692
00:29:18,559 --> 00:29:19,919
definitely thank him for the work that

693
00:29:19,919 --> 00:29:23,520
he's done on that piece

694
00:29:23,600 --> 00:29:26,799
the problem that we have is in spec

695
00:29:26,799 --> 00:29:28,799
based on the format we started with you

696
00:29:28,799 --> 00:29:30,559
know packet rules are serialized

697
00:29:30,559 --> 00:29:33,919
into bgp and lori the format that the

698
00:29:33,919 --> 00:29:35,520
the authors chose at the time was

699
00:29:35,520 --> 00:29:38,559
largely type value and for anything that

700
00:29:38,559 --> 00:29:38,960
was

701
00:29:38,960 --> 00:29:41,840
some flavor of variable linked list the

702
00:29:41,840 --> 00:29:42,480
length

703
00:29:42,480 --> 00:29:44,240
portion is implied rather than

704
00:29:44,240 --> 00:29:45,919
explicitly you know made known

705
00:29:45,919 --> 00:29:48,720
so the analogy is like just like mpls

706
00:29:48,720 --> 00:29:49,840
label stacks

707
00:29:49,840 --> 00:29:51,279
you don't know how long the label stack

708
00:29:51,279 --> 00:29:53,120
necessarily is you just know that it

709
00:29:53,120 --> 00:29:56,399
a stack bit with flow spec components in

710
00:29:56,399 --> 00:29:57,039
any case

711
00:29:57,039 --> 00:29:59,120
there's some flavor of end of list that

712
00:29:59,120 --> 00:30:00,399
you know for the

713
00:30:00,399 --> 00:30:03,360
operator this does have a negative

714
00:30:03,360 --> 00:30:05,360
consequence that you really

715
00:30:05,360 --> 00:30:07,600
can't safely parse floats back you know

716
00:30:07,600 --> 00:30:10,000
for an unknown component without

717
00:30:10,000 --> 00:30:11,919
you know having to take guesses of

718
00:30:11,919 --> 00:30:13,520
whether or not supporting this behavior

719
00:30:13,520 --> 00:30:14,399
or not

720
00:30:14,399 --> 00:30:15,760
so this means that we haven't been able

721
00:30:15,760 --> 00:30:18,240
to safely deploy

722
00:30:18,240 --> 00:30:21,279
new features because implementation

723
00:30:21,279 --> 00:30:22,720
simply no don't know what's going on

724
00:30:22,720 --> 00:30:24,159
there

725
00:30:24,159 --> 00:30:27,840
5575 did try to work from the standpoint

726
00:30:27,840 --> 00:30:29,760
that the information is opaque

727
00:30:29,760 --> 00:30:32,720
and in practice what has happened is

728
00:30:32,720 --> 00:30:34,080
pretty much no vendor

729
00:30:34,080 --> 00:30:36,399
implemented any sort of opaque behavior

730
00:30:36,399 --> 00:30:38,000
basically if you couldn't parse it

731
00:30:38,000 --> 00:30:42,080
you know the sessions were terminated

732
00:30:44,159 --> 00:30:45,679
the problem that we end up having from

733
00:30:45,679 --> 00:30:47,440
this is we have a lot of people that are

734
00:30:47,440 --> 00:30:48,399
looking to do

735
00:30:48,399 --> 00:30:50,399
new pieces of flowspec work now this is

736
00:30:50,399 --> 00:30:52,640
including l2vpn mvo3

737
00:30:52,640 --> 00:30:54,960
and there's i think on the order of four

738
00:30:54,960 --> 00:30:56,720
different extensions that

739
00:30:56,720 --> 00:30:58,720
are listed as being interested in

740
00:30:58,720 --> 00:31:00,080
extending flowspec that have not been

741
00:31:00,080 --> 00:31:02,720
adopted by dr at this point

742
00:31:02,720 --> 00:31:04,720
and the problem is we can't extend these

743
00:31:04,720 --> 00:31:06,880
things safely because of the new

744
00:31:06,880 --> 00:31:10,159
components are unknown

745
00:31:10,720 --> 00:31:14,480
we've started the work initially 2016

746
00:31:14,480 --> 00:31:16,840
for discussing what a flow spec v2 would

747
00:31:16,840 --> 00:31:20,320
be minimally the flow spec v2 would be

748
00:31:20,320 --> 00:31:24,480
you know a more strict format for tlvs

749
00:31:24,480 --> 00:31:25,840
which would allow us to actually work

750
00:31:25,840 --> 00:31:27,279
around this incremental deployment

751
00:31:27,279 --> 00:31:29,679
problem

752
00:31:30,240 --> 00:31:32,880
but flowspec v2 potentially went into

753
00:31:32,880 --> 00:31:34,000
much deeper work

754
00:31:34,000 --> 00:31:36,080
for example taking the implicit rule

755
00:31:36,080 --> 00:31:37,679
ordering out of the system and you know

756
00:31:37,679 --> 00:31:39,760
enabling use cases where explicit no

757
00:31:39,760 --> 00:31:42,640
reordering could happen so that's a

758
00:31:42,640 --> 00:31:44,080
potentially large piece of work

759
00:31:44,080 --> 00:31:45,679
and so i think we'll be discussing at

760
00:31:45,679 --> 00:31:48,720
some point uh how we carry that forward

761
00:31:48,720 --> 00:31:51,919
but meanwhile we're sort of stuck and

762
00:31:51,919 --> 00:31:53,919
you know what i have for the working

763
00:31:53,919 --> 00:31:56,240
group is a proposal

764
00:31:56,240 --> 00:31:58,080
that since with the current flowspec

765
00:31:58,080 --> 00:31:59,519
format we can't deal with

766
00:31:59,519 --> 00:32:02,399
unknown component types where a speaker

767
00:32:02,399 --> 00:32:03,760
can't actually announce a

768
00:32:03,760 --> 00:32:07,120
nlri that the receiver couldn't parse

769
00:32:07,120 --> 00:32:10,159
well the answer can be now the receiver

770
00:32:10,159 --> 00:32:12,640
uses some sort of capability to tell

771
00:32:12,640 --> 00:32:15,519
the sender what it's willing to deal

772
00:32:15,519 --> 00:32:16,880
with

773
00:32:16,880 --> 00:32:19,200
and that's an important distinction from

774
00:32:19,200 --> 00:32:20,640
you know what's willing to deal with

775
00:32:20,640 --> 00:32:20,960
from

776
00:32:20,960 --> 00:32:24,159
what it is willing able to understand

777
00:32:24,159 --> 00:32:27,840
we do also have use cases in the field

778
00:32:27,840 --> 00:32:30,159
where some device might want to speak

779
00:32:30,159 --> 00:32:31,440
flowspec

780
00:32:31,440 --> 00:32:33,440
but not all components can be supported

781
00:32:33,440 --> 00:32:35,600
as an example linux doesn't have in its

782
00:32:35,600 --> 00:32:36,640
ip tables

783
00:32:36,640 --> 00:32:39,120
a ability to deal with tscp is a match

784
00:32:39,120 --> 00:32:40,159
criteria

785
00:32:40,159 --> 00:32:41,679
maybe it doesn't want to receive rules

786
00:32:41,679 --> 00:32:44,640
that it can't deal with

787
00:32:45,200 --> 00:32:47,279
so in terms of how do you actually

788
00:32:47,279 --> 00:32:49,039
encode this type of behavior

789
00:32:49,039 --> 00:32:52,080
now the easy answer is a bit string

790
00:32:52,080 --> 00:32:53,519
so what you're seeing in front of you is

791
00:32:53,519 --> 00:32:55,600
now from the draft you know simple bit

792
00:32:55,600 --> 00:32:56,000
string

793
00:32:56,000 --> 00:32:58,799
you know uh currently uh bits 1 through

794
00:32:58,799 --> 00:32:59,440
14

795
00:32:59,440 --> 00:33:02,159
are actually supported for 5575 as a

796
00:33:02,159 --> 00:33:03,039
base and

797
00:33:03,039 --> 00:33:06,000
you know the v6 extension adds on uh no

798
00:33:06,000 --> 00:33:06,880
one additional bit

799
00:33:06,880 --> 00:33:08,840
sorry 1 through 13 and 14 comes from

800
00:33:08,840 --> 00:33:11,440
5575 for v6

801
00:33:11,440 --> 00:33:14,080
so in this case we're just showing a bit

802
00:33:14,080 --> 00:33:14,559
vector

803
00:33:14,559 --> 00:33:17,600
that you know all bits are being set i

804
00:33:17,600 --> 00:33:18,960
will highlight here that

805
00:33:18,960 --> 00:33:23,279
this is in itf bitlist order where the

806
00:33:23,279 --> 00:33:25,360
first bit is the leftmost one the first

807
00:33:25,360 --> 00:33:28,000
one is transmitted on the wire

808
00:33:28,000 --> 00:33:31,679
this is the norm for things like snmp

809
00:33:31,679 --> 00:33:33,600
that said other implementations are not

810
00:33:33,600 --> 00:33:35,200
fond of this format because

811
00:33:35,200 --> 00:33:37,279
they want to have it in machine order

812
00:33:37,279 --> 00:33:38,720
the problem we're going to have here is

813
00:33:38,720 --> 00:33:39,919
that uh being

814
00:33:39,919 --> 00:33:43,519
up to 255 bits

815
00:33:43,519 --> 00:33:44,640
it's never going to be something that

816
00:33:44,640 --> 00:33:46,720
will fit into a single machine word so

817
00:33:46,720 --> 00:33:47,919
i suspect this will be the main

818
00:33:47,919 --> 00:33:50,840
contentious point for you know this

819
00:33:50,840 --> 00:33:53,279
proposal um

820
00:33:53,279 --> 00:33:55,840
that said once you're willing to decide

821
00:33:55,840 --> 00:33:57,679
what the encoding looks like

822
00:33:57,679 --> 00:33:59,519
you know the main operational issue that

823
00:33:59,519 --> 00:34:01,519
has to be discussed for any proposal

824
00:34:01,519 --> 00:34:02,480
like this

825
00:34:02,480 --> 00:34:04,240
and we'll have this as part of v2 as

826
00:34:04,240 --> 00:34:05,679
well

827
00:34:05,679 --> 00:34:08,000
is that what this effectively becomes is

828
00:34:08,000 --> 00:34:09,440
a filtering mechanism

829
00:34:09,440 --> 00:34:12,719
where some flow spec routes

830
00:34:12,719 --> 00:34:14,320
do not get propagated because the

831
00:34:14,320 --> 00:34:17,199
speaker is not willing to accept them

832
00:34:17,199 --> 00:34:19,440
and since missing flow spec routes based

833
00:34:19,440 --> 00:34:21,760
on the ordering considerations

834
00:34:21,760 --> 00:34:24,320
if you have dependent rules where one

835
00:34:24,320 --> 00:34:26,239
rule expects another rule to be present

836
00:34:26,239 --> 00:34:27,760
in the system

837
00:34:27,760 --> 00:34:30,159
you can end up with unexpected you know

838
00:34:30,159 --> 00:34:31,679
filtering behaviors

839
00:34:31,679 --> 00:34:34,800
and the consequence of that is that you

840
00:34:34,800 --> 00:34:35,359
may be

841
00:34:35,359 --> 00:34:37,918
mis addressing things you may be sending

842
00:34:37,918 --> 00:34:39,280
them the wrong orders

843
00:34:39,280 --> 00:34:41,839
etc

844
00:34:42,399 --> 00:34:45,759
so that said

845
00:34:45,918 --> 00:34:48,399
this issue really does already exist

846
00:34:48,399 --> 00:34:49,359
versus

847
00:34:49,359 --> 00:34:51,040
any sort of filtering that you could do

848
00:34:51,040 --> 00:34:52,560
about flowspec today

849
00:34:52,560 --> 00:34:54,079
and it's something that operators do

850
00:34:54,079 --> 00:34:55,839
need to be aware of so

851
00:34:55,839 --> 00:34:57,200
this doesn't necessarily change the

852
00:34:57,200 --> 00:34:58,800
landscape but it does highlight

853
00:34:58,800 --> 00:35:01,680
something that's a known issue

854
00:35:01,680 --> 00:35:05,520
so in terms of what next uh

855
00:35:05,520 --> 00:35:07,839
some flavor of this type of feature you

856
00:35:07,839 --> 00:35:09,119
know being a very small bit of

857
00:35:09,119 --> 00:35:10,240
incremental work

858
00:35:10,240 --> 00:35:12,160
could allow you know all these flow spec

859
00:35:12,160 --> 00:35:13,599
features to be

860
00:35:13,599 --> 00:35:16,160
able to be deployed so the working group

861
00:35:16,160 --> 00:35:17,280
should consider

862
00:35:17,280 --> 00:35:19,040
doesn't want to maybe adopt this draft

863
00:35:19,040 --> 00:35:21,520
or maybe spin something very similar

864
00:35:21,520 --> 00:35:23,359
and clearly we do need to continue the

865
00:35:23,359 --> 00:35:26,240
55 75 as the 8955

866
00:35:26,240 --> 00:35:29,520
work in flow spec v2 and

867
00:35:29,520 --> 00:35:31,599
even in that case some mechanism like

868
00:35:31,599 --> 00:35:35,280
this may actually be a necessary thing

869
00:35:35,440 --> 00:35:39,440
i think we have time for a few brief

870
00:35:42,839 --> 00:35:45,839
questions

871
00:35:50,640 --> 00:35:52,880
donald you're up all right just real

872
00:35:52,880 --> 00:35:54,160
quick wanted to mention that actually

873
00:35:54,160 --> 00:35:57,599
the l2vpn and nvo3 have a different safy

874
00:35:57,599 --> 00:35:59,280
so you can there's no particular problem

875
00:35:59,280 --> 00:36:00,640
deploying them

876
00:36:00,640 --> 00:36:02,160
only when you're trying to extend within

877
00:36:02,160 --> 00:36:03,839
the same happy safety that you have a

878
00:36:03,839 --> 00:36:06,160
problem

879
00:36:06,400 --> 00:36:13,839
uh that is true

880
00:36:25,680 --> 00:36:28,880
okay uh i have two questions that uh the

881
00:36:28,880 --> 00:36:29,920
first one is

882
00:36:29,920 --> 00:36:33,839
what about for r if we do this

883
00:36:33,839 --> 00:36:37,520
uh one when we are done for some

884
00:36:37,520 --> 00:36:40,480
some capability so the road will not

885
00:36:40,480 --> 00:36:40,960
send

886
00:36:40,960 --> 00:36:44,079
to our land it will not reflect to

887
00:36:44,079 --> 00:36:47,280
other voters

888
00:36:47,359 --> 00:36:51,359
that is correct that is correct

889
00:36:51,359 --> 00:36:55,280
okay okay the second question is that uh

890
00:36:55,280 --> 00:36:59,200
uh because at first the rfc 5575

891
00:36:59,200 --> 00:37:01,760
defined the prefix with unknown

892
00:37:01,760 --> 00:37:02,560
component type

893
00:37:02,560 --> 00:37:05,760
we all will treat as uh unknown

894
00:37:05,760 --> 00:37:10,240
unknown prefix so in so in in that uh

895
00:37:10,240 --> 00:37:13,359
in that implementation uh if we

896
00:37:13,359 --> 00:37:17,119
i think it may not uh cause uh past

897
00:37:17,119 --> 00:37:19,359
error because if we find a component

898
00:37:19,359 --> 00:37:20,400
with uh

899
00:37:20,400 --> 00:37:22,880
we don't recognize so we may treat the

900
00:37:22,880 --> 00:37:24,079
whole prefix

901
00:37:24,079 --> 00:37:27,359
as a on supporter prefix

902
00:37:27,359 --> 00:37:30,079
so so i think it may not uh cause some

903
00:37:30,079 --> 00:37:31,040
error

904
00:37:31,040 --> 00:37:35,200
but i saw that the new rfc

905
00:37:35,200 --> 00:37:38,480
modify it and like to treat it

906
00:37:38,480 --> 00:37:42,880
as a more formed attribute

907
00:37:43,200 --> 00:37:44,880
that is correct the discussion that the

908
00:37:44,880 --> 00:37:46,680
working group had for doing

909
00:37:46,680 --> 00:37:50,079
89.55 was that since we can't

910
00:37:50,079 --> 00:37:52,480
partially analyze safely we can't tell

911
00:37:52,480 --> 00:37:53,280
if it's

912
00:37:53,280 --> 00:37:54,880
or not we can't tell if it's well-formed

913
00:37:54,880 --> 00:37:57,200
or not

914
00:38:02,839 --> 00:38:05,119
okay

915
00:38:05,119 --> 00:38:06,720
okay there being no further questions

916
00:38:06,720 --> 00:38:09,839
we're up to the next presentation

917
00:38:14,000 --> 00:38:17,040
all right can you hear me

918
00:38:17,040 --> 00:38:20,000
we can hear you awesome thanks dev um

919
00:38:20,000 --> 00:38:21,839
all right so i'm going to uh present

920
00:38:21,839 --> 00:38:24,960
uh the bgp flowspec uh payload match

921
00:38:24,960 --> 00:38:27,839
um which is basically a new flowspec

922
00:38:27,839 --> 00:38:29,200
component

923
00:38:29,200 --> 00:38:32,960
so moving on to the next slide

924
00:38:32,960 --> 00:38:34,880
all right so what are the background and

925
00:38:34,880 --> 00:38:37,280
motivation so so today we have uh

926
00:38:37,280 --> 00:38:40,560
bgp flowspec which is used for doing uh

927
00:38:40,560 --> 00:38:43,440
n-tuple filtering using layer 3 and

928
00:38:43,440 --> 00:38:44,320
layer 4

929
00:38:44,320 --> 00:38:47,359
header fields such as iprs or port

930
00:38:47,359 --> 00:38:48,480
number

931
00:38:48,480 --> 00:38:51,839
and we have had a recent

932
00:38:51,839 --> 00:38:53,920
advancement to ip routing for

933
00:38:53,920 --> 00:38:55,040
weddingplane

934
00:38:55,040 --> 00:38:58,240
which is allowing to match at an

935
00:38:58,240 --> 00:38:59,680
arbitrary location

936
00:38:59,680 --> 00:39:02,800
a given pattern so these particular

937
00:39:02,800 --> 00:39:03,839
capabilities

938
00:39:03,839 --> 00:39:07,280
can be particularly useful in ddos

939
00:39:07,280 --> 00:39:09,200
mitigation and especially a volumetric

940
00:39:09,200 --> 00:39:10,800
attack ddos

941
00:39:10,800 --> 00:39:13,440
mitigation so allowing to match a

942
00:39:13,440 --> 00:39:14,000
pattern

943
00:39:14,000 --> 00:39:17,520
in addition to the existing uh flow spec

944
00:39:17,520 --> 00:39:20,240
match criteria can be used for that so

945
00:39:20,240 --> 00:39:21,599
moving on to the next

946
00:39:21,599 --> 00:39:24,000
slide

947
00:39:25,599 --> 00:39:28,240
so uh this is an ip for a packet

948
00:39:28,240 --> 00:39:30,000
structure and this is just to illustrate

949
00:39:30,000 --> 00:39:31,680
what i was mentioning before

950
00:39:31,680 --> 00:39:35,599
um so this new flowspec component type

951
00:39:35,599 --> 00:39:39,040
uh will be uh allowing the operator to

952
00:39:39,040 --> 00:39:40,640
match

953
00:39:40,640 --> 00:39:43,359
a pattern within the ip header layer 3

954
00:39:43,359 --> 00:39:44,880
or layer 4 header

955
00:39:44,880 --> 00:39:47,520
or within the data payload of the packet

956
00:39:47,520 --> 00:39:48,880
itself

957
00:39:48,880 --> 00:39:50,800
so with this like i mentioned one of the

958
00:39:50,800 --> 00:39:52,320
main use case is really a

959
00:39:52,320 --> 00:39:55,359
ddos attack mitigation but it can also

960
00:39:55,359 --> 00:39:56,480
be used to

961
00:39:56,480 --> 00:39:59,760
match a pattern within a header field

962
00:39:59,760 --> 00:40:03,040
that uh within the ip or udp or tcp

963
00:40:03,040 --> 00:40:03,760
header

964
00:40:03,760 --> 00:40:06,480
that would uh not be supported in in

965
00:40:06,480 --> 00:40:07,280
flow spec

966
00:40:07,280 --> 00:40:10,079
today that's that's a possible other use

967
00:40:10,079 --> 00:40:11,280
case

968
00:40:11,280 --> 00:40:13,680
so the way we are defining this new

969
00:40:13,680 --> 00:40:15,040
match

970
00:40:15,040 --> 00:40:18,160
criteria um within the draft

971
00:40:18,160 --> 00:40:21,119
is using a traditional encoding so type

972
00:40:21,119 --> 00:40:22,640
length value

973
00:40:22,640 --> 00:40:24,960
with the value which is basically meant

974
00:40:24,960 --> 00:40:26,079
uh made of

975
00:40:26,079 --> 00:40:29,200
two parts which is the offset and the

976
00:40:29,200 --> 00:40:30,560
pattern itself

977
00:40:30,560 --> 00:40:33,520
so the offset is going to allow us to

978
00:40:33,520 --> 00:40:33,920
say

979
00:40:33,920 --> 00:40:36,160
where in the packet header or within the

980
00:40:36,160 --> 00:40:37,520
data we are trying to match

981
00:40:37,520 --> 00:40:39,280
and then the pattern is going to be what

982
00:40:39,280 --> 00:40:40,800
is the the value that we are trying to

983
00:40:40,800 --> 00:40:41,839
match on

984
00:40:41,839 --> 00:40:46,078
so moving on to the next slide

985
00:40:46,640 --> 00:40:48,800
right so we have the the offset the

986
00:40:48,800 --> 00:40:50,079
draft is defining

987
00:40:50,079 --> 00:40:52,720
uh two things which are for the offset

988
00:40:52,720 --> 00:40:54,640
the offset type and then the offset

989
00:40:54,640 --> 00:40:57,680
value so the offset type as uh at the

990
00:40:57,680 --> 00:40:58,319
moment

991
00:40:58,319 --> 00:41:01,920
three values zero one and two um this is

992
00:41:01,920 --> 00:41:05,119
a convenience for uh for the operator

993
00:41:05,119 --> 00:41:05,760
and for

994
00:41:05,760 --> 00:41:07,359
the ddos controller that may want to

995
00:41:07,359 --> 00:41:09,760
program forwarding

996
00:41:09,760 --> 00:41:13,040
rules and filtering rules um which is

997
00:41:13,040 --> 00:41:15,440
uh offset 0 is the start of the ip

998
00:41:15,440 --> 00:41:16,079
header

999
00:41:16,079 --> 00:41:19,040
offset type 1 is the start of the data

1000
00:41:19,040 --> 00:41:20,319
portion of the ip header

1001
00:41:20,319 --> 00:41:24,240
so meaning layer 4 and offset type

1002
00:41:24,240 --> 00:41:27,839
2 is the beginning of the tcp or udp

1003
00:41:27,839 --> 00:41:31,599
data and so this offset type is

1004
00:41:31,599 --> 00:41:33,760
only meant to know where the offset

1005
00:41:33,760 --> 00:41:35,760
value is going to be taken from

1006
00:41:35,760 --> 00:41:39,040
so i taken an example if you set an

1007
00:41:39,040 --> 00:41:39,920
offset type

1008
00:41:39,920 --> 00:41:43,040
0 so the layer 3 the ip header and an

1009
00:41:43,040 --> 00:41:44,480
offset value of 0

1010
00:41:44,480 --> 00:41:46,400
then it defines the very beginning of

1011
00:41:46,400 --> 00:41:48,640
the ip header

1012
00:41:48,640 --> 00:41:51,599
another example if you take the offset

1013
00:41:51,599 --> 00:41:53,280
type 2 which is

1014
00:41:53,280 --> 00:41:57,760
the data payload so tcp udp and an

1015
00:42:00,839 --> 00:42:03,200
offset

1016
00:42:03,200 --> 00:42:06,560
having a connection issue

1017
00:42:06,560 --> 00:42:09,040
we can hear you again okay i could see

1018
00:42:09,040 --> 00:42:10,720
uh reconnecting to the audio

1019
00:42:10,720 --> 00:42:14,319
okay um all right so uh another example

1020
00:42:14,319 --> 00:42:18,560
is offset type 2 for a payload tcp udp

1021
00:42:18,560 --> 00:42:21,760
and offset value 10 so we would define

1022
00:42:21,760 --> 00:42:25,599
an offset which is 10 bytes after the

1023
00:42:25,599 --> 00:42:29,200
beginning of the tcp or udp data

1024
00:42:29,200 --> 00:42:31,119
all right so this is only to define

1025
00:42:31,119 --> 00:42:32,560
where we are going to match that

1026
00:42:32,560 --> 00:42:34,240
particular pattern so moving on to the

1027
00:42:34,240 --> 00:42:36,799
next slide

1028
00:42:40,480 --> 00:42:42,400
okay so that's the pattern so the

1029
00:42:42,400 --> 00:42:43,680
pattern um

1030
00:42:43,680 --> 00:42:45,920
may come into a different form uh the

1031
00:42:45,920 --> 00:42:47,440
most uh common form

1032
00:42:47,440 --> 00:42:50,640
for uh iteration

1033
00:42:50,640 --> 00:42:54,319
router will be the bitmask match

1034
00:42:54,319 --> 00:42:57,200
which is going to match a set of bits

1035
00:42:57,200 --> 00:42:57,520
and

1036
00:42:57,520 --> 00:43:00,400
with a mask um and then the pattern type

1037
00:43:00,400 --> 00:43:00,960
uh which

1038
00:43:00,960 --> 00:43:02,480
which is pattern type zero and then

1039
00:43:02,480 --> 00:43:04,240
python type one or two

1040
00:43:04,240 --> 00:43:06,640
are for uh regular expression and this

1041
00:43:06,640 --> 00:43:07,359
would be

1042
00:43:07,359 --> 00:43:11,040
uh more dedicated for a software based

1043
00:43:11,040 --> 00:43:13,599
forwarding planes or appliances that

1044
00:43:13,599 --> 00:43:14,480
would apply

1045
00:43:14,480 --> 00:43:17,359
this type of filtering rule so if you're

1046
00:43:17,359 --> 00:43:17,760
looking

1047
00:43:17,760 --> 00:43:20,880
at a bitmask match

1048
00:43:20,880 --> 00:43:23,280
the most traditional one i would say

1049
00:43:23,280 --> 00:43:24,560
then you will have

1050
00:43:24,560 --> 00:43:26,720
two things which is the prefix and the

1051
00:43:26,720 --> 00:43:28,400
matte and the mask

1052
00:43:28,400 --> 00:43:31,359
the prefix is the bit string that we are

1053
00:43:31,359 --> 00:43:32,400
trying to match on

1054
00:43:32,400 --> 00:43:35,760
and we would end this with the mask

1055
00:43:35,760 --> 00:43:38,800
value so this allows to match uh

1056
00:43:38,800 --> 00:43:42,640
bytes or bits within within a particular

1057
00:43:42,640 --> 00:43:45,920
prefix pattern so moving on to the next

1058
00:43:45,920 --> 00:43:48,240
slide

1059
00:43:49,599 --> 00:43:52,400
all right so this is a practical example

1060
00:43:52,400 --> 00:43:54,560
so here you can see um

1061
00:43:54,560 --> 00:43:57,920
a udp ntp packet

1062
00:43:57,920 --> 00:44:00,960
and so assuming that the goal was to

1063
00:44:00,960 --> 00:44:04,640
match on the ntp request

1064
00:44:04,640 --> 00:44:07,040
code um that you can find that you can

1065
00:44:07,040 --> 00:44:08,640
see in in this packet

1066
00:44:08,640 --> 00:44:11,599
which is a value 42 here in decimal and

1067
00:44:11,599 --> 00:44:13,040
0x2a

1068
00:44:13,040 --> 00:44:17,920
so a possible flowspeculari would be to

1069
00:44:17,920 --> 00:44:21,200
send a component type 4 for the

1070
00:44:21,200 --> 00:44:25,280
ip protocol udp this is a ud packet

1071
00:44:25,280 --> 00:44:28,880
and then this new flow spec component

1072
00:44:28,880 --> 00:44:32,480
which is a type tbd um and

1073
00:44:32,480 --> 00:44:35,040
with the the criteria that are mentioned

1074
00:44:35,040 --> 00:44:36,240
here so

1075
00:44:36,240 --> 00:44:38,319
we will use an offset type 2 which is

1076
00:44:38,319 --> 00:44:40,160
for tcp or adp payload

1077
00:44:40,160 --> 00:44:43,200
an offset value of 3 which means 3 bytes

1078
00:44:43,200 --> 00:44:46,240
after the beginning of the tcp slash db

1079
00:44:46,240 --> 00:44:46,720
data

1080
00:44:46,720 --> 00:44:49,839
so in this case udp a pattern type

1081
00:44:49,839 --> 00:44:52,480
0 for a bitmask and then matching on

1082
00:44:52,480 --> 00:44:54,079
0x2a

1083
00:44:54,079 --> 00:44:56,079
as the value and the mask in this case

1084
00:44:56,079 --> 00:44:58,560
will be 0xff

1085
00:44:58,560 --> 00:45:00,800
so this was to to give a practical

1086
00:45:00,800 --> 00:45:02,160
example

1087
00:45:02,160 --> 00:45:05,920
um so we're on to the uh next slide um

1088
00:45:05,920 --> 00:45:08,880
all right so this was a this is this is

1089
00:45:08,880 --> 00:45:09,440
what i want

1090
00:45:09,440 --> 00:45:12,560
to present about this new um flowspec

1091
00:45:12,560 --> 00:45:13,359
component

1092
00:45:13,359 --> 00:45:16,960
and uh opening the um

1093
00:45:16,960 --> 00:45:20,000
discussion for comments and feedback

1094
00:45:20,000 --> 00:45:22,400
uh and depending on feedback um what i'm

1095
00:45:22,400 --> 00:45:23,440
wondering is if

1096
00:45:23,440 --> 00:45:26,800
there is a option to pre-register

1097
00:45:26,800 --> 00:45:30,839
new component types for early

1098
00:45:30,839 --> 00:45:33,839
implementation

1099
00:45:38,079 --> 00:45:39,839
okay i'm unable to track the uh the

1100
00:45:39,839 --> 00:45:41,440
queue at the moment sorry the

1101
00:45:41,440 --> 00:45:44,160
agenda time so uh sue please let us know

1102
00:45:44,160 --> 00:45:47,839
for still on schedule

1103
00:45:49,440 --> 00:45:52,800
schedule he has about uh

1104
00:45:52,800 --> 00:45:56,880
three to four minutes to discuss things

1105
00:45:56,880 --> 00:46:01,839
thank you hibo you're first in the queue

1106
00:46:04,560 --> 00:46:07,040
the first one is that i think this

1107
00:46:07,040 --> 00:46:08,720
common type may be used for

1108
00:46:08,720 --> 00:46:11,760
but i'm i'm about that

1109
00:46:11,760 --> 00:46:15,520
whether this component will make the

1110
00:46:15,520 --> 00:46:18,720
chips more flexible

1111
00:46:18,720 --> 00:46:24,240
more complex more complexable

1112
00:46:25,680 --> 00:46:30,560
another question is that okay

1113
00:46:30,560 --> 00:46:33,280
let me see first another question is

1114
00:46:33,280 --> 00:46:35,359
that

1115
00:46:35,359 --> 00:46:38,240
do we support multiple this new

1116
00:46:38,240 --> 00:46:39,440
component

1117
00:46:39,440 --> 00:46:42,960
composition i mean

1118
00:46:53,280 --> 00:46:56,079
described by one one this new component

1119
00:46:56,079 --> 00:46:57,200
can we use

1120
00:46:57,200 --> 00:47:00,400
tool but if we use two of this component

1121
00:47:00,400 --> 00:47:03,760
types i think now it may be

1122
00:47:03,760 --> 00:47:07,280
caused with some some reload

1123
00:47:07,280 --> 00:47:11,839
some software to pass error

1124
00:47:12,960 --> 00:47:15,200
so so at the moment so in the in the

1125
00:47:15,200 --> 00:47:17,439
graph

1126
00:47:18,400 --> 00:47:24,880
is it possible to turn off some echo

1127
00:47:24,880 --> 00:47:28,640
but yeah thank you yeah so

1128
00:47:28,640 --> 00:47:33,040
the draft defines a single

1129
00:47:34,160 --> 00:47:37,040
flexible match as a component per an li

1130
00:47:37,040 --> 00:47:38,000
but if the operator

1131
00:47:38,000 --> 00:47:39,839
wanted to match different ones then they

1132
00:47:39,839 --> 00:47:41,359
can

1133
00:47:41,359 --> 00:47:53,839
always send different nri message

1134
00:47:54,480 --> 00:47:56,480
i had to remove hibou from the mic queue

1135
00:47:56,480 --> 00:47:58,319
for the echo

1136
00:47:58,319 --> 00:48:07,839
robin would you take your question next

1137
00:48:13,440 --> 00:48:14,640
robin you need to add yourself to the

1138
00:48:14,640 --> 00:48:21,839
mic you

1139
00:48:25,920 --> 00:48:30,400
okay we'll move along bill sending audio

1140
00:48:31,760 --> 00:48:35,040
um i will covered a little of this and

1141
00:48:35,040 --> 00:48:36,880
asking you know will this increase the

1142
00:48:36,880 --> 00:48:38,400
complexity of of

1143
00:48:38,400 --> 00:48:40,079
systems i'm wondering what the benefit

1144
00:48:40,079 --> 00:48:41,520
is of having two different regular

1145
00:48:41,520 --> 00:48:42,559
expression

1146
00:48:42,559 --> 00:48:44,640
systems how will you choose which one to

1147
00:48:44,640 --> 00:48:46,400
use in which context

1148
00:48:46,400 --> 00:48:50,319
and will um will implementations have to

1149
00:48:50,319 --> 00:48:53,680
uh implement both

1150
00:48:54,559 --> 00:48:57,440
um so so for the regular expression uh

1151
00:48:57,440 --> 00:48:59,599
this was a suggestion for

1152
00:48:59,599 --> 00:49:03,200
a software-based um forwarding planes

1153
00:49:03,200 --> 00:49:03,520
and

1154
00:49:03,520 --> 00:49:07,359
appliances um so the driver there was

1155
00:49:07,359 --> 00:49:08,640
that apparently

1156
00:49:08,640 --> 00:49:12,160
um those uh devices today uh uses

1157
00:49:12,160 --> 00:49:15,359
either one of those two um as their most

1158
00:49:15,359 --> 00:49:16,400
common uh

1159
00:49:16,400 --> 00:49:19,599
um regular expression um but i would

1160
00:49:19,599 --> 00:49:20,640
have to get back to you

1161
00:49:20,640 --> 00:49:23,920
if you have further questions on this

1162
00:49:24,880 --> 00:49:28,720
this will be a a question and we must

1163
00:49:28,720 --> 00:49:30,000
cut the mic so

1164
00:49:30,000 --> 00:49:33,680
xiao you won't be able to add

1165
00:49:38,400 --> 00:49:41,520
uh kyle carmen

1166
00:49:41,520 --> 00:49:44,640
you can hear me robin okay

1167
00:49:44,640 --> 00:49:47,359
okay uh i think this is the interesting

1168
00:49:47,359 --> 00:49:48,319
uh

1169
00:49:48,319 --> 00:49:51,040
interesting solution you select use the

1170
00:49:51,040 --> 00:49:52,559
bdp to implement

1171
00:49:52,559 --> 00:49:56,079
p4 but i wonder if we

1172
00:49:56,079 --> 00:49:58,720
implemented like this one to match some

1173
00:49:58,720 --> 00:49:59,200
of this

1174
00:49:59,200 --> 00:50:02,720
the preload uh have you

1175
00:50:02,720 --> 00:50:06,559
taken into account the security issue

1176
00:50:06,559 --> 00:50:09,599
i mean that if there's the mismatch

1177
00:50:09,599 --> 00:50:13,280
they may cause some this the uh

1178
00:50:13,280 --> 00:50:17,680
this uh drop of the packet

1179
00:50:17,680 --> 00:50:21,119
with the area yeah yeah for sure so so

1180
00:50:21,119 --> 00:50:25,119
so in in like a a real deployment

1181
00:50:25,119 --> 00:50:27,920
um you would typically have um a ddos

1182
00:50:27,920 --> 00:50:28,880
controller and

1183
00:50:28,880 --> 00:50:31,119
an analytic platform and that analytic

1184
00:50:31,119 --> 00:50:32,800
platform would be the one that would

1185
00:50:32,800 --> 00:50:34,559
program the filtering rule and that

1186
00:50:34,559 --> 00:50:35,839
would be based on

1187
00:50:35,839 --> 00:50:38,240
what it sees from the traffic from from

1188
00:50:38,240 --> 00:50:39,440
the network right

1189
00:50:39,440 --> 00:50:42,480
so but but like like in any

1190
00:50:42,480 --> 00:50:45,200
uh filtering uh case there could be

1191
00:50:45,200 --> 00:50:45,920
cases of

1192
00:50:45,920 --> 00:50:48,319
uh false positive but the idea here is

1193
00:50:48,319 --> 00:50:49,839
to reduce false positive

1194
00:50:49,839 --> 00:50:52,400
compared to just uh doing layer three

1195
00:50:52,400 --> 00:50:55,839
and therefore

1196
00:50:56,400 --> 00:50:59,440
okay i think this maybe thing may need

1197
00:50:59,440 --> 00:51:02,480
more thinking okay just might

1198
00:51:02,480 --> 00:51:06,079
such as yeah good stuff for the mailing

1199
00:51:06,079 --> 00:51:06,559
list

1200
00:51:06,559 --> 00:51:07,839
so we're going to have to move on to the

1201
00:51:07,839 --> 00:51:11,520
next presentation thank you philippe

1202
00:51:12,000 --> 00:51:16,000
so next up i believe is uh yao lu

1203
00:51:17,839 --> 00:51:22,319
hi yummy we can hear you

1204
00:51:22,319 --> 00:51:25,599
okay i'm yolo from dte

1205
00:51:25,599 --> 00:51:29,359
my presentation is about egb extension

1206
00:51:29,359 --> 00:51:32,640
or srm keras entropy label position

1207
00:51:32,640 --> 00:51:37,760
next slide please

1208
00:51:37,760 --> 00:51:40,559
um entropy labels are used in the mpls

1209
00:51:40,559 --> 00:51:42,720
that are planned to provide entropy for

1210
00:51:42,720 --> 00:51:44,000
load balancing

1211
00:51:44,000 --> 00:51:47,280
and rfc 8662 proposes to use

1212
00:51:47,280 --> 00:51:50,880
entropy labels or empires networks

1213
00:51:50,880 --> 00:51:53,680
as described in this rfc determining the

1214
00:51:53,680 --> 00:51:55,280
past place for eoi

1215
00:51:55,280 --> 00:51:57,200
and your powers may not be an easy

1216
00:51:57,200 --> 00:51:58,319
decision

1217
00:51:58,319 --> 00:52:02,000
and multiple criteria may be considered

1218
00:52:02,000 --> 00:52:05,680
such as the eild and msd of the node

1219
00:52:05,680 --> 00:52:07,040
along the path

1220
00:52:07,040 --> 00:52:10,160
and elimination limitations like segment

1221
00:52:10,160 --> 00:52:10,960
type

1222
00:52:10,960 --> 00:52:15,119
or maxim maximizing number of lsrs that

1223
00:52:15,119 --> 00:52:18,000
we all balance may also be considered

1224
00:52:18,000 --> 00:52:18,559
and

1225
00:52:18,559 --> 00:52:21,359
an external controller can be used to

1226
00:52:21,359 --> 00:52:23,280
program the label step

1227
00:52:23,280 --> 00:52:26,000
next like this

1228
00:52:28,400 --> 00:52:30,880
and this figure shows an angel demand

1229
00:52:30,880 --> 00:52:33,440
scenario the end-to-end parts when node

1230
00:52:33,440 --> 00:52:34,720
a to node e

1231
00:52:34,720 --> 00:52:36,800
is calculated by a centralized

1232
00:52:36,800 --> 00:52:38,880
controller along this path

1233
00:52:38,880 --> 00:52:42,240
no balance is needed for example between

1234
00:52:42,240 --> 00:52:45,359
a b and c and cn cnx

1235
00:52:45,359 --> 00:52:49,599
and dne and here gives an example of the

1236
00:52:49,599 --> 00:52:50,480
label step

1237
00:52:50,480 --> 00:52:54,880
with actual labels and in this scenario

1238
00:52:54,880 --> 00:52:57,119
the ingress node is not aware of the

1239
00:52:57,119 --> 00:52:57,920
eoid

1240
00:52:57,920 --> 00:53:01,920
and msd info of the nodes in command 2.

1241
00:53:01,920 --> 00:53:04,319
so not they can decide the position of

1242
00:53:04,319 --> 00:53:05,040
the entry

1243
00:53:05,040 --> 00:53:07,839
labels and the controller can be used to

1244
00:53:07,839 --> 00:53:10,000
perform the computation of the entropy

1245
00:53:10,000 --> 00:53:11,359
label position

1246
00:53:11,359 --> 00:53:14,079
in the segment list of the paths and the

1247
00:53:14,079 --> 00:53:15,359
candidate paths with

1248
00:53:15,359 --> 00:53:17,839
entropy label position information can

1249
00:53:17,839 --> 00:53:20,079
be learned by the handheld node

1250
00:53:20,079 --> 00:53:23,280
via different mechanism such as pcp

1251
00:53:23,280 --> 00:53:26,839
or ptp and so this document proposes

1252
00:53:26,839 --> 00:53:28,800
extensions for bgp

1253
00:53:28,800 --> 00:53:31,760
to indicate the entropy label position

1254
00:53:31,760 --> 00:53:33,200
in the settlement list

1255
00:53:33,200 --> 00:53:35,440
when distributed as a policy candidate

1256
00:53:35,440 --> 00:53:38,480
passed using ptp

1257
00:53:38,480 --> 00:53:42,880
next like this

1258
00:53:42,880 --> 00:53:45,680
and this is the b2b extensions as a

1259
00:53:45,680 --> 00:53:46,640
policy

1260
00:53:46,640 --> 00:53:49,119
and the flag is introduced in the flag

1261
00:53:49,119 --> 00:53:50,160
field of the

1262
00:53:50,160 --> 00:53:53,440
segment of trv to indicate the presence

1263
00:53:53,440 --> 00:53:54,559
of

1264
00:53:54,559 --> 00:53:57,280
eri and er label pails which are

1265
00:53:57,280 --> 00:53:58,000
inserted

1266
00:53:58,000 --> 00:54:01,280
after this segment it is a bit uh

1267
00:54:01,280 --> 00:54:05,040
applicable to srmpr settlement types

1268
00:54:05,040 --> 00:54:07,680
and the ingress node who receives an

1269
00:54:07,680 --> 00:54:10,079
extra policy and arrives with the

1270
00:54:10,079 --> 00:54:12,720
segment list the sub to v the summary

1271
00:54:12,720 --> 00:54:14,079
sub crv contains

1272
00:54:14,079 --> 00:54:17,200
multiple segments of tvs for example

1273
00:54:17,200 --> 00:54:20,400
abcde and the e flag of b

1274
00:54:20,400 --> 00:54:23,839
and d are set it indicates that if load

1275
00:54:23,839 --> 00:54:25,040
balancing

1276
00:54:25,040 --> 00:54:28,319
and entropy labels is high required and

1277
00:54:28,319 --> 00:54:32,000
two eoi and ear poles should be inserted

1278
00:54:32,000 --> 00:54:35,839
into the label step respect

1279
00:54:35,839 --> 00:54:38,319
right after the label for b and the

1280
00:54:38,319 --> 00:54:39,760
label for e

1281
00:54:39,760 --> 00:54:43,280
and the value of the contribute labels

1282
00:54:43,280 --> 00:54:45,599
is supplemented by the ingress node

1283
00:54:45,599 --> 00:54:48,400
according to the load balance function

1284
00:54:48,400 --> 00:54:49,119
of the

1285
00:54:49,119 --> 00:54:52,240
appropriate keys exactly from the given

1286
00:54:52,240 --> 00:54:53,119
packet

1287
00:54:53,119 --> 00:54:55,440
and whether to insert the your post is

1288
00:54:55,440 --> 00:54:58,000
decided by the english note

1289
00:54:58,000 --> 00:55:01,760
and next like this

1290
00:55:02,720 --> 00:55:05,839
uh yeah a welcome feedbacks comments

1291
00:55:05,839 --> 00:55:21,839
that's all

1292
00:55:22,559 --> 00:55:24,880
hello

1293
00:55:27,200 --> 00:55:30,720
hello hello uh y'all

1294
00:55:30,720 --> 00:55:33,359
uh my my question is that one i think

1295
00:55:33,359 --> 00:55:33,760
that's

1296
00:55:33,760 --> 00:55:36,480
because you mentioned that the sr so i

1297
00:55:36,480 --> 00:55:37,359
wonder

1298
00:55:37,359 --> 00:55:40,480
why is it necessary to indicate

1299
00:55:40,480 --> 00:55:43,359
the position of the entropy label in

1300
00:55:43,359 --> 00:55:43,839
fact

1301
00:55:43,839 --> 00:55:46,079
several years we do this work we can

1302
00:55:46,079 --> 00:55:47,520
directly calculate

1303
00:55:47,520 --> 00:55:50,880
the entropy label in the controller

1304
00:55:50,880 --> 00:55:53,599
so when downloaded this is the segment

1305
00:55:53,599 --> 00:55:54,160
list

1306
00:55:54,160 --> 00:55:58,240
for the sr policy it can be directly to

1307
00:55:58,240 --> 00:56:01,680
insert the entry label to the

1308
00:56:01,680 --> 00:56:05,839
say the least i think that will be

1309
00:56:05,839 --> 00:56:08,880
i think that will be easy to implement

1310
00:56:08,880 --> 00:56:11,200
and also because you know that the

1311
00:56:11,200 --> 00:56:12,160
entropy label

1312
00:56:12,160 --> 00:56:15,680
can be calculated uh correctly for the

1313
00:56:15,680 --> 00:56:19,759
better load balance

1314
00:56:21,119 --> 00:56:24,480
oh you mean you mean that

1315
00:56:24,480 --> 00:56:27,040
the controller is responsible to

1316
00:56:27,040 --> 00:56:27,680
calculate

1317
00:56:27,680 --> 00:56:30,079
both the position and the value of the

1318
00:56:30,079 --> 00:56:32,400
entropy level right

1319
00:56:32,400 --> 00:56:34,640
yeah yeah yeah so i think that's a need

1320
00:56:34,640 --> 00:56:35,760
another tool

1321
00:56:35,760 --> 00:56:40,240
only to calculate the position yeah

1322
00:56:43,040 --> 00:56:46,160
uh um i see and in this draft

1323
00:56:46,160 --> 00:56:48,720
we prefer that to the controller uh just

1324
00:56:48,720 --> 00:56:49,760
calculation

1325
00:56:49,760 --> 00:56:53,280
and uh the ingress of the node kept its

1326
00:56:53,280 --> 00:56:55,119
function to inspect

1327
00:56:55,119 --> 00:56:58,400
the flow and uh the incas inverse node

1328
00:56:58,400 --> 00:57:01,440
is responsible to calculate the value

1329
00:57:01,440 --> 00:57:04,160
and the universal adjuster don't know

1330
00:57:04,160 --> 00:57:05,200
where to

1331
00:57:05,200 --> 00:57:09,359
put this entropy label but i can

1332
00:57:09,359 --> 00:57:12,640
if you can stand the draft i can i can

1333
00:57:12,640 --> 00:57:15,680
read it and compare and do some priority

1334
00:57:15,680 --> 00:57:18,720
classification more

1335
00:57:18,720 --> 00:57:27,839
okay okay

1336
00:57:31,599 --> 00:57:34,559
any further questions

1337
00:57:38,400 --> 00:57:41,359
okay thank you yeah we'll be moving to

1338
00:57:41,359 --> 00:57:44,240
the next presentation

1339
00:57:50,480 --> 00:57:53,359
you have the microphone yeah hi jeff can

1340
00:57:53,359 --> 00:57:55,280
you hear me

1341
00:57:55,280 --> 00:57:58,559
i can hear you okay

1342
00:57:58,559 --> 00:58:01,440
hello everyone this is jedo uh i'm going

1343
00:58:01,440 --> 00:58:01,760
to

1344
00:58:01,760 --> 00:58:04,880
give a presentation about uh bgprs

1345
00:58:04,880 --> 00:58:06,799
extensions for the second routine based

1346
00:58:06,799 --> 00:58:08,480
enhanced vpn

1347
00:58:08,480 --> 00:58:10,960
on behalf of the co-authors okay next

1348
00:58:10,960 --> 00:58:13,680
slide please

1349
00:58:16,400 --> 00:58:18,480
okay this is a little bit about the

1350
00:58:18,480 --> 00:58:19,760
background

1351
00:58:19,760 --> 00:58:22,559
the has vpn or vpn plus framework is

1352
00:58:22,559 --> 00:58:24,480
described in the

1353
00:58:24,480 --> 00:58:26,240
enhancement being draft in this working

1354
00:58:26,240 --> 00:58:28,000
group it provides a

1355
00:58:28,000 --> 00:58:29,359
layered architecture and the

1356
00:58:29,359 --> 00:58:31,599
technologies to provide enhanced vpn or

1357
00:58:31,599 --> 00:58:33,280
vpn plus services

1358
00:58:33,280 --> 00:58:35,839
and network slicing can be seen as a use

1359
00:58:35,839 --> 00:58:36,960
case of the weapon

1360
00:58:36,960 --> 00:58:40,880
plus service and for vaping plus service

1361
00:58:40,880 --> 00:58:44,000
it is enabled by integrating the overlay

1362
00:58:44,000 --> 00:58:44,799
vpns

1363
00:58:44,799 --> 00:58:48,000
and the underlaying vtns as shown in

1364
00:58:48,000 --> 00:58:49,920
this figure

1365
00:58:49,920 --> 00:58:52,160
multiple virtual underlay virtual

1366
00:58:52,160 --> 00:58:53,200
transport networks

1367
00:58:53,200 --> 00:58:55,359
and vtns can be created based on a

1368
00:58:55,359 --> 00:58:56,400
shared physical

1369
00:58:56,400 --> 00:58:59,119
infrastructure and each can be used as

1370
00:58:59,119 --> 00:59:00,480
underlay for one

1371
00:59:00,480 --> 00:59:04,160
a group of vpn overlays and together

1372
00:59:04,160 --> 00:59:07,040
the vpn overlay and the vtn can build

1373
00:59:07,040 --> 00:59:11,119
the vpn plus service to the customers

1374
00:59:11,280 --> 00:59:15,119
in the spring draft sr4 enhanced vpn

1375
00:59:15,119 --> 00:59:16,960
it describes the mechanism and

1376
00:59:16,960 --> 00:59:19,359
procedures to build the sr based return

1377
00:59:19,359 --> 00:59:22,559
using the resource aware segments

1378
00:59:22,559 --> 00:59:25,680
and for the igp extensions to distribute

1379
00:59:25,680 --> 00:59:28,720
distribute the srvt information

1380
00:59:28,720 --> 00:59:30,559
there are several drafts and the

1381
00:59:30,559 --> 00:59:31,920
discussion in our

1382
00:59:31,920 --> 00:59:34,799
sr areas our working group and both

1383
00:59:34,799 --> 00:59:36,799
multi-topology or flux algo can be

1384
00:59:36,799 --> 00:59:39,040
reused or combined

1385
00:59:39,040 --> 00:59:41,119
with necessary extensions for this

1386
00:59:41,119 --> 00:59:42,640
purpose

1387
00:59:42,640 --> 00:59:45,200
for this draft it defines a

1388
00:59:45,200 --> 00:59:46,000
corresponding

1389
00:59:46,000 --> 00:59:49,760
bgpls extensions so as this uh

1390
00:59:49,760 --> 00:59:52,799
srv information can be distributed

1391
00:59:52,799 --> 00:59:58,079
to a network controller okay next slide

1392
00:59:58,839 --> 01:00:01,839
please

1393
01:00:02,559 --> 01:00:05,760
okay this is uh the design principle

1394
01:00:05,760 --> 01:00:08,880
of this draft as showing this figure

1395
01:00:08,880 --> 01:00:11,920
or vtn may cover one or multiple areas

1396
01:00:11,920 --> 01:00:12,960
or domains

1397
01:00:12,960 --> 01:00:16,000
and also the inter domain links and

1398
01:00:16,000 --> 01:00:20,319
in each area of domain we can use

1399
01:00:20,319 --> 01:00:23,680
multi topology of las algo to advertise

1400
01:00:23,680 --> 01:00:27,200
the topology attributes of the hvtn

1401
01:00:27,200 --> 01:00:29,599
and in different domains then can use

1402
01:00:29,599 --> 01:00:30,880
the same or

1403
01:00:30,880 --> 01:00:34,000
different topology or algorithm ids for

1404
01:00:34,000 --> 01:00:35,599
the same vtn

1405
01:00:35,599 --> 01:00:38,960
and within each domain multiple vtns can

1406
01:00:38,960 --> 01:00:40,960
share the same topology or algorith

1407
01:00:40,960 --> 01:00:42,400
algorithm

1408
01:00:42,400 --> 01:00:46,000
so that we can provide a scalable more

1409
01:00:46,000 --> 01:00:49,040
scalable mechanism to support a large

1410
01:00:49,040 --> 01:00:49,520
number of

1411
01:00:49,520 --> 01:00:53,119
atns then for each link

1412
01:00:53,119 --> 01:00:55,200
including the intro domain and into

1413
01:00:55,200 --> 01:00:56,720
domain

1414
01:00:56,720 --> 01:00:59,760
l to bundle can be used to advertise the

1415
01:00:59,760 --> 01:01:00,400
link t

1416
01:01:00,400 --> 01:01:04,799
attributes associated with hvtn

1417
01:01:04,799 --> 01:01:10,000
okay next slide

1418
01:01:10,000 --> 01:01:14,000
here are the extensions to bgprs

1419
01:01:14,000 --> 01:01:16,079
uh basically there are three different

1420
01:01:16,079 --> 01:01:18,079
two new trvs defined

1421
01:01:18,079 --> 01:01:20,240
the first one is called vtn definition

1422
01:01:20,240 --> 01:01:22,000
toa it is used to

1423
01:01:22,000 --> 01:01:24,799
specify the association between the

1424
01:01:24,799 --> 01:01:25,920
topology id

1425
01:01:25,920 --> 01:01:29,119
algorithm id and the reading

1426
01:01:29,119 --> 01:01:31,680
and so that multiple vts could refer to

1427
01:01:31,680 --> 01:01:34,160
the same topology or algorithm id

1428
01:01:34,160 --> 01:01:37,040
so that they can share the topology

1429
01:01:37,040 --> 01:01:38,000
advertisement

1430
01:01:38,000 --> 01:01:41,440
and can share the topology computation

1431
01:01:41,440 --> 01:01:43,440
this tlv can also be extended for

1432
01:01:43,440 --> 01:01:46,000
further attributes

1433
01:01:46,000 --> 01:01:47,760
the second tl way is called written

1434
01:01:47,760 --> 01:01:51,200
idtlv it is used to identify

1435
01:01:51,200 --> 01:01:54,640
a set of vtns an intra-domain or

1436
01:01:54,640 --> 01:01:55,520
inter-domain

1437
01:01:55,520 --> 01:01:58,720
belongs to then the third one

1438
01:01:58,720 --> 01:02:01,119
is called link attribute flex tlv this

1439
01:02:01,119 --> 01:02:02,000
one is

1440
01:02:02,000 --> 01:02:05,039
correspond to the isis link attribute

1441
01:02:05,039 --> 01:02:06,240
subtlety

1442
01:02:06,240 --> 01:02:08,799
and in this

1443
01:02:14,160 --> 01:02:21,839
see we have lost microphone for you

1444
01:02:36,640 --> 01:02:39,119
the other co-authors able to continue on

1445
01:02:39,119 --> 01:02:42,000
with the slides

1446
01:02:47,280 --> 01:02:51,280
you don't hear me we can hear you again

1447
01:02:51,280 --> 01:02:55,280
okay yeah i got lost for a moment

1448
01:02:55,280 --> 01:02:58,319
so i think i finished the waiting idtlv

1449
01:02:58,319 --> 01:03:02,000
right right okay

1450
01:03:02,000 --> 01:03:03,680
for the third one is called link

1451
01:03:03,680 --> 01:03:05,200
attribute flux tle it

1452
01:03:05,200 --> 01:03:08,000
is used to uh advertise the link

1453
01:03:08,000 --> 01:03:10,160
attributes for a particular

1454
01:03:10,160 --> 01:03:12,960
uh link actually introducing or

1455
01:03:12,960 --> 01:03:14,240
interdomaining

1456
01:03:14,240 --> 01:03:17,280
we introduce a new flag v is to indicate

1457
01:03:17,280 --> 01:03:19,119
whether the link is a virtual link or a

1458
01:03:19,119 --> 01:03:20,240
physical link

1459
01:03:20,240 --> 01:03:23,759
okay next page

1460
01:03:26,079 --> 01:03:28,839
okay for the intro domain topology

1461
01:03:28,839 --> 01:03:30,400
advertisement

1462
01:03:30,400 --> 01:03:33,200
we have two options the first one is

1463
01:03:33,200 --> 01:03:35,039
based on the bgp rs

1464
01:03:35,039 --> 01:03:37,839
with multi topology so that we can use

1465
01:03:37,839 --> 01:03:38,160
the

1466
01:03:38,160 --> 01:03:41,680
mti dtlv in the bgprs analyze

1467
01:03:41,680 --> 01:03:44,559
to identify the link state information

1468
01:03:44,559 --> 01:03:45,280
of different

1469
01:03:45,280 --> 01:03:48,400
topologies we can also advertise the

1470
01:03:48,400 --> 01:03:52,240
topology specific iso impairs seeds

1471
01:03:52,240 --> 01:03:56,400
and the bgprs attribute for srv6

1472
01:03:56,400 --> 01:03:59,599
also the topology specific

1473
01:03:59,599 --> 01:04:02,400
i76 locators and cs can be advertised

1474
01:04:02,400 --> 01:04:04,400
based on the bgp rss every six

1475
01:04:04,400 --> 01:04:06,079
extensions

1476
01:04:06,079 --> 01:04:08,400
the second option is we can use bgprs

1477
01:04:08,400 --> 01:04:09,119
with

1478
01:04:09,119 --> 01:04:13,920
flux algo so we use a bgprs

1479
01:04:13,920 --> 01:04:17,039
flash algo definition to describe the

1480
01:04:17,039 --> 01:04:17,920
topological

1481
01:04:17,920 --> 01:04:21,039
constraints on a particular topology

1482
01:04:21,039 --> 01:04:23,359
and the algorithm-specific cs can be

1483
01:04:23,359 --> 01:04:26,480
carried in the bgpls attributes

1484
01:04:26,480 --> 01:04:30,319
for srv6 is similar srv6 locators and cs

1485
01:04:30,319 --> 01:04:31,359
can also be

1486
01:04:31,359 --> 01:04:34,400
algorithm specific these are

1487
01:04:34,400 --> 01:04:38,839
just two options they can be used in

1488
01:04:38,839 --> 01:04:42,079
a uh one or multiple

1489
01:04:42,079 --> 01:04:44,880
areas of domains which builds the

1490
01:04:44,880 --> 01:04:46,799
inter-domain vtn

1491
01:04:46,799 --> 01:04:49,119
and with either option the topology

1492
01:04:49,119 --> 01:04:51,359
information that the policy-specific

1493
01:04:51,359 --> 01:04:53,760
computation could be shared by multiple

1494
01:04:53,760 --> 01:04:54,480
vts

1495
01:04:54,480 --> 01:04:57,440
this is how we can improve the

1496
01:04:57,440 --> 01:04:59,359
scalability

1497
01:04:59,359 --> 01:05:02,319
okay next slide

1498
01:05:04,160 --> 01:05:06,160
this is about inter-domain topology

1499
01:05:06,160 --> 01:05:08,240
advertisement basically

1500
01:05:08,240 --> 01:05:11,119
it is based on you know the bgprs epe

1501
01:05:11,119 --> 01:05:13,440
with a new 18 idtl

1502
01:05:13,440 --> 01:05:15,680
to specify the retain specific

1503
01:05:15,680 --> 01:05:16,640
inter-domain

1504
01:05:16,640 --> 01:05:19,599
connectivity and based on the

1505
01:05:19,599 --> 01:05:21,359
granularity of the information you need

1506
01:05:21,359 --> 01:05:22,640
to describe

1507
01:05:22,640 --> 01:05:26,559
for the multi-domain vtn there are three

1508
01:05:26,559 --> 01:05:30,160
different medium-specific

1509
01:05:30,160 --> 01:05:34,240
b2p appearances like the bjp adjacencies

1510
01:05:34,240 --> 01:05:38,000
uh b2b peer knows it pgp recesses

1511
01:05:38,000 --> 01:05:40,720
can be advertised with the btn

1512
01:05:40,720 --> 01:05:41,760
identifier

1513
01:05:41,760 --> 01:05:45,599
tle to specify the

1514
01:05:45,599 --> 01:05:50,240
inter domain link for a specific return

1515
01:05:50,240 --> 01:05:53,598
okay next page

1516
01:05:55,599 --> 01:05:58,880
and for the vtn specific t attributes or

1517
01:05:58,880 --> 01:06:00,079
resource attributes

1518
01:06:00,079 --> 01:06:03,599
advertisement it is based on bgp pgprs

1519
01:06:03,599 --> 01:06:05,680
out bundle mechanism

1520
01:06:05,680 --> 01:06:09,599
and we can extend out bundle

1521
01:06:09,599 --> 01:06:13,039
to either a physical bundle or a

1522
01:06:13,039 --> 01:06:15,920
set of virtual member links on a on one

1523
01:06:15,920 --> 01:06:17,440
physical link

1524
01:06:17,440 --> 01:06:19,680
so that each virtual memory link can

1525
01:06:19,680 --> 01:06:21,520
have a separate set of t

1526
01:06:21,520 --> 01:06:24,319
attributes this is indicated by using

1527
01:06:24,319 --> 01:06:24,720
the v

1528
01:06:24,720 --> 01:06:28,480
flag and for each output member link

1529
01:06:28,480 --> 01:06:31,119
in idtl is used to identify the

1530
01:06:31,119 --> 01:06:33,760
associated waitings

1531
01:06:33,760 --> 01:06:36,000
and then the t attributes of the little

1532
01:06:36,000 --> 01:06:38,000
bundle member link will be used as the

1533
01:06:38,000 --> 01:06:40,000
link attributes in the constrained pass

1534
01:06:40,000 --> 01:06:40,720
computation

1535
01:06:40,720 --> 01:06:47,839
of the associated media okay next slide

1536
01:06:48,400 --> 01:06:50,640
something more is uh we need some

1537
01:06:50,640 --> 01:06:52,640
identifiers of this vtn

1538
01:06:52,640 --> 01:06:55,520
in the data plane it is used to steer

1539
01:06:55,520 --> 01:06:56,960
the package to

1540
01:06:56,960 --> 01:07:01,039
the set of resources allocated to a vtn

1541
01:07:01,039 --> 01:07:02,720
with different data planes we have

1542
01:07:02,720 --> 01:07:04,240
different tlvs

1543
01:07:04,240 --> 01:07:07,440
for smpls we have the tlvs for meeting

1544
01:07:07,440 --> 01:07:08,160
specific

1545
01:07:08,160 --> 01:07:11,680
prefixes and adjacencies for srv6

1546
01:07:11,680 --> 01:07:13,920
we introduced a new tlv for the vtin

1547
01:07:13,920 --> 01:07:14,720
specific

1548
01:07:14,720 --> 01:07:18,720
services locators the third option is uh

1549
01:07:18,720 --> 01:07:21,280
we may also have the a dedicated waiting

1550
01:07:21,280 --> 01:07:22,799
id in the data plane

1551
01:07:22,799 --> 01:07:25,520
so that we can save the overhead of

1552
01:07:25,520 --> 01:07:26,960
introducing new tlv

1553
01:07:26,960 --> 01:07:30,640
for carrying this vtn specific

1554
01:07:30,640 --> 01:07:34,000
data point identifier well this

1555
01:07:34,000 --> 01:07:35,839
requires some extensions to the data

1556
01:07:35,839 --> 01:07:37,280
plane encapsulation

1557
01:07:37,280 --> 01:07:38,960
and there are several options under

1558
01:07:38,960 --> 01:07:40,559
discussion in

1559
01:07:40,559 --> 01:07:43,839
other working groups

1560
01:07:44,559 --> 01:07:47,680
okay next slide

1561
01:07:48,640 --> 01:07:52,480
okay for this document uh

1562
01:07:52,480 --> 01:07:56,400
we know that the bgpls extensions may

1563
01:07:56,400 --> 01:07:59,520
need to align with igp extensions so

1564
01:07:59,520 --> 01:08:01,520
for at this current stage we need we

1565
01:08:01,520 --> 01:08:02,960
just need to just

1566
01:08:02,960 --> 01:08:06,079
like to solicit solicit feedbacks and

1567
01:08:06,079 --> 01:08:08,240
comments on this document so that we can

1568
01:08:08,240 --> 01:08:10,319
refine it accordingly

1569
01:08:10,319 --> 01:08:12,720
and to move along with the igp

1570
01:08:12,720 --> 01:08:15,279
extensions

1571
01:08:15,760 --> 01:08:25,839
thank you

1572
01:08:26,238 --> 01:08:29,759
do we have any questions

1573
01:08:36,960 --> 01:08:39,920
robin you have the queue

1574
01:08:42,000 --> 01:08:45,040
hello hi hi

1575
01:08:45,040 --> 01:08:48,560
uh joby okay so in fact for this

1576
01:08:48,560 --> 01:08:51,759
draft we would like to add one point

1577
01:08:51,759 --> 01:08:55,359
in fact when uh for the network slicing

1578
01:08:55,359 --> 01:08:55,759
work

1579
01:08:55,759 --> 01:08:58,799
the most important uh design

1580
01:08:58,799 --> 01:09:02,158
is the scalability uh we think

1581
01:09:02,158 --> 01:09:05,040
that here this is the introduce the bgp

1582
01:09:05,040 --> 01:09:07,279
links the extension

1583
01:09:07,279 --> 01:09:11,279
to report this network slice

1584
01:09:11,279 --> 01:09:13,279
information from the device to the

1585
01:09:13,279 --> 01:09:14,719
controller

1586
01:09:14,719 --> 01:09:16,880
but on the other hand because we know

1587
01:09:16,880 --> 01:09:18,319
that

1588
01:09:18,319 --> 01:09:21,520
in the network side we also need the idp

1589
01:09:21,520 --> 01:09:23,759
to advertise this the network

1590
01:09:23,759 --> 01:09:27,198
slice information but this uh

1591
01:09:27,198 --> 01:09:30,640
for the idp flooding there's a studio

1592
01:09:30,640 --> 01:09:32,319
has a challenge

1593
01:09:32,319 --> 01:09:35,839
so we propose the draft this is the pdp

1594
01:09:35,839 --> 01:09:39,359
spf extension to advertise this the

1595
01:09:39,359 --> 01:09:39,920
network

1596
01:09:39,920 --> 01:09:43,279
slice information uh here i just remind

1597
01:09:43,279 --> 01:09:45,920
you about this draft which also related

1598
01:09:45,920 --> 01:09:46,719
with the

1599
01:09:46,719 --> 01:09:49,839
pdp and also this the extension is

1600
01:09:49,839 --> 01:09:52,719
similar as the extension of the pdp link

1601
01:09:52,719 --> 01:09:53,600
state

1602
01:09:53,600 --> 01:09:56,880
so it's also to enhance this the

1603
01:09:56,880 --> 01:09:59,440
scalability of the network slicing

1604
01:09:59,440 --> 01:10:00,480
solution

1605
01:10:00,480 --> 01:10:04,718
okay that's my point to be added

1606
01:10:13,840 --> 01:10:17,840
any further questions

1607
01:10:24,640 --> 01:10:26,480
okay in that case we will proceed to the

1608
01:10:26,480 --> 01:10:28,960
next presentation

1609
01:10:28,960 --> 01:10:31,840
g for bringing us uh five um minutes

1610
01:10:31,840 --> 01:10:33,920
back

1611
01:10:33,920 --> 01:10:37,520
next president presenter kali raj

1612
01:10:37,520 --> 01:10:41,360
hi jeff hi we can hear you

1613
01:10:41,360 --> 01:10:44,480
okay good hi everyone uh i'm going to

1614
01:10:44,480 --> 01:10:47,280
uh present bgp class 4 transport planes

1615
01:10:47,280 --> 01:10:47,679
uh

1616
01:10:47,679 --> 01:10:50,960
again so last presentation was an idea

1617
01:10:50,960 --> 01:10:52,640
of 108 and this is the

1618
01:10:52,640 --> 01:10:56,560
next presentation let's try please

1619
01:10:57,120 --> 01:10:59,920
so basically legendary is uh it's a

1620
01:10:59,920 --> 01:11:01,600
short agenda so i'm going to recap the

1621
01:11:01,600 --> 01:11:02,640
bgbcd

1622
01:11:02,640 --> 01:11:06,080
uh problem statement solution advantages

1623
01:11:06,080 --> 01:11:08,560
and share some changes to the draft and

1624
01:11:08,560 --> 01:11:10,080
some tidbits learnings from the

1625
01:11:10,080 --> 01:11:12,239
implementation qualifications so far

1626
01:11:12,239 --> 01:11:14,480
and introduce the later drafts and next

1627
01:11:14,480 --> 01:11:17,919
steps next side please

1628
01:11:20,000 --> 01:11:23,040
so yeah the problem is simple so in any

1629
01:11:23,040 --> 01:11:25,520
network domain we may have intra as

1630
01:11:25,520 --> 01:11:28,159
tunnels with varying t characteristics

1631
01:11:28,159 --> 01:11:30,560
so these are like tunnels from different

1632
01:11:30,560 --> 01:11:31,760
transport protocols

1633
01:11:31,760 --> 01:11:34,880
and they can be tunnels to between those

1634
01:11:34,880 --> 01:11:36,480
multiple tunnels between the same set of

1635
01:11:36,480 --> 01:11:38,400
destinations and

1636
01:11:38,400 --> 01:11:41,679
they would have different uh

1637
01:11:41,679 --> 01:11:44,560
t characteristics and service routes may

1638
01:11:44,560 --> 01:11:46,080
want to put traffic on them

1639
01:11:46,080 --> 01:11:49,679
based on their needs and these tunnels

1640
01:11:49,679 --> 01:11:50,640
may be

1641
01:11:50,640 --> 01:11:52,880
may need to be extended into domain

1642
01:11:52,880 --> 01:11:54,000
while preserving the same

1643
01:11:54,000 --> 01:11:56,560
key characteristics end-to-end and such

1644
01:11:56,560 --> 01:11:58,719
a way that the service hours are able to

1645
01:11:58,719 --> 01:12:02,000
map traffic onto them

1646
01:12:02,159 --> 01:12:04,159
without worrying about whether it is an

1647
01:12:04,159 --> 01:12:06,000
intra-external or inter-installer the

1648
01:12:06,000 --> 01:12:08,320
mechanism works the same way

1649
01:12:08,320 --> 01:12:10,719
and and service out may also want to

1650
01:12:10,719 --> 01:12:11,520
have

1651
01:12:11,520 --> 01:12:13,520
an option to fall back to tunnels of a

1652
01:12:13,520 --> 01:12:14,960
different t characteristic

1653
01:12:14,960 --> 01:12:16,960
including best effort tunnels so the

1654
01:12:16,960 --> 01:12:19,360
problem was how to extend bgp to signal

1655
01:12:19,360 --> 01:12:20,719
this piece of information

1656
01:12:20,719 --> 01:12:23,920
and get the job done and it's best if

1657
01:12:23,920 --> 01:12:25,440
the

1658
01:12:25,440 --> 01:12:28,640
solution is agnostic of

1659
01:12:28,640 --> 01:12:30,560
protocols or components in the transport

1660
01:12:30,560 --> 01:12:32,239
layer or component the

1661
01:12:32,239 --> 01:12:34,560
service layer so that it works with any

1662
01:12:34,560 --> 01:12:35,360
set of these

1663
01:12:35,360 --> 01:12:38,000
protocol components in each layer next i

1664
01:12:38,000 --> 01:12:40,320
please

1665
01:12:42,880 --> 01:12:45,440
so the solution constructs in bgpct uh

1666
01:12:45,440 --> 01:12:46,400
basically we

1667
01:12:46,400 --> 01:12:49,600
just talked about the different tunnels

1668
01:12:49,600 --> 01:12:51,280
of different key characteristics so we

1669
01:12:51,280 --> 01:12:52,719
just have a transport class

1670
01:12:52,719 --> 01:12:55,360
construct which collects tunnels of the

1671
01:12:55,360 --> 01:12:56,560
similar characteristics

1672
01:12:56,560 --> 01:12:58,880
so it doesn't uh think about what type

1673
01:12:58,880 --> 01:12:59,920
of tunnel it is

1674
01:12:59,920 --> 01:13:02,640
or which end point it is going to adjust

1675
01:13:02,640 --> 01:13:04,000
the transport class

1676
01:13:04,000 --> 01:13:06,239
which is uh a type of terminal so

1677
01:13:06,239 --> 01:13:07,920
operators can classify the tunnels in

1678
01:13:07,920 --> 01:13:08,800
the network

1679
01:13:08,800 --> 01:13:10,719
to say these are like my gold tunnel

1680
01:13:10,719 --> 01:13:11,920
these are silver tunnels

1681
01:13:11,920 --> 01:13:13,280
and they have an identifier the

1682
01:13:13,280 --> 01:13:15,520
transport class also has a 32-bit color

1683
01:13:15,520 --> 01:13:19,199
that's an identifier and we use bgpct

1684
01:13:19,199 --> 01:13:20,080
there's a new

1685
01:13:20,080 --> 01:13:22,320
bjp address family which plays at the

1686
01:13:22,320 --> 01:13:23,600
transport layer

1687
01:13:23,600 --> 01:13:26,000
so when i say transport layer it just

1688
01:13:26,000 --> 01:13:27,040
means that it

1689
01:13:27,040 --> 01:13:30,640
carries prefixes which are used as

1690
01:13:30,640 --> 01:13:33,840
protocol next stops in bgp updates and

1691
01:13:33,840 --> 01:13:37,040
this is a safety 76 it's called class 4

1692
01:13:37,040 --> 01:13:37,840
transport

1693
01:13:37,840 --> 01:13:41,120
and it follows rfc 4364 procedures which

1694
01:13:41,120 --> 01:13:44,560
is basically bgp mps vpns

1695
01:13:44,560 --> 01:13:46,800
so this what it does is it just collects

1696
01:13:46,800 --> 01:13:47,600
the

1697
01:13:47,600 --> 01:13:49,679
uh tunnel endpoints the ingredients that

1698
01:13:49,679 --> 01:13:50,880
we have in the network

1699
01:13:50,880 --> 01:13:53,920
and disseminates across bgp speakers to

1700
01:13:53,920 --> 01:13:54,880
other domains

1701
01:13:54,880 --> 01:13:56,960
and collects them in transport trips for

1702
01:13:56,960 --> 01:13:58,400
that transport class

1703
01:13:58,400 --> 01:14:00,239
and so that service outs when they want

1704
01:14:00,239 --> 01:14:02,560
to uh resolve over

1705
01:14:02,560 --> 01:14:05,120
a certain transport class let's say gold

1706
01:14:05,120 --> 01:14:07,040
so they will just confine their uh

1707
01:14:07,040 --> 01:14:10,320
next stop uh selection from the trans

1708
01:14:10,320 --> 01:14:11,360
routes that are collected in the

1709
01:14:11,360 --> 01:14:14,080
transporter so it's as simple as that

1710
01:14:14,080 --> 01:14:16,159
and the english source collected in a

1711
01:14:16,159 --> 01:14:18,000
transport cluster advertising bgpct

1712
01:14:18,000 --> 01:14:19,440
family to other speakers

1713
01:14:19,440 --> 01:14:23,040
with the uh very familiar

1714
01:14:23,040 --> 01:14:25,840
um encoding like we use rd colon

1715
01:14:25,840 --> 01:14:28,320
terminal endpoint as the nlri and the

1716
01:14:28,320 --> 01:14:30,400
transport cluster target that identifies

1717
01:14:30,400 --> 01:14:30,880
that

1718
01:14:30,880 --> 01:14:33,040
it belongs to so this is just like a l3

1719
01:14:33,040 --> 01:14:34,239
vpn update

1720
01:14:34,239 --> 01:14:37,679
uh where we are just using rd to uh

1721
01:14:37,679 --> 01:14:39,679
as a distinguisher and we are using a

1722
01:14:39,679 --> 01:14:41,520
new type of target

1723
01:14:41,520 --> 01:14:43,040
and this is just so that we don't have

1724
01:14:43,040 --> 01:14:44,400
any collision with the service plane

1725
01:14:44,400 --> 01:14:46,320
route targets

1726
01:14:46,320 --> 01:14:48,960
and so bgpct extends these tunnels

1727
01:14:48,960 --> 01:14:50,560
across the domain boundaries

1728
01:14:50,560 --> 01:14:52,719
by doing the resolution confined to the

1729
01:14:52,719 --> 01:14:53,840
transport class

1730
01:14:53,840 --> 01:14:56,320
just like i explained and it follows the

1731
01:14:56,320 --> 01:14:57,840
option c style procedures

1732
01:14:57,840 --> 01:15:00,000
when the route bgb city route is

1733
01:15:00,000 --> 01:15:02,239
advertised across a bgp speaker with

1734
01:15:02,239 --> 01:15:03,360
next top shelf

1735
01:15:03,360 --> 01:15:06,560
it just creates a swap route with which

1736
01:15:06,560 --> 01:15:09,120
basically connects the two uh gold lsb's

1737
01:15:09,120 --> 01:15:10,800
in the two different domains and those

1738
01:15:10,800 --> 01:15:12,560
lsps could be belonging to different

1739
01:15:12,560 --> 01:15:14,239
transport protocols

1740
01:15:14,239 --> 01:15:17,840
and so it should be said that this

1741
01:15:17,840 --> 01:15:19,600
also works with in conjunction with

1742
01:15:19,600 --> 01:15:21,600
option a and option b scenarios

1743
01:15:21,600 --> 01:15:23,920
and and it also works with scenarios

1744
01:15:23,920 --> 01:15:25,360
where you have a single domain

1745
01:15:25,360 --> 01:15:27,840
and it has an abr in the middle so it's

1746
01:15:27,840 --> 01:15:30,080
like two reasons

1747
01:15:30,080 --> 01:15:32,320
and the service routes the way they uh

1748
01:15:32,320 --> 01:15:33,600
resolve over these

1749
01:15:33,600 --> 01:15:35,679
is using a consent called a resolution

1750
01:15:35,679 --> 01:15:37,199
scheme so the resolution scheme is

1751
01:15:37,199 --> 01:15:38,239
nothing but

1752
01:15:38,239 --> 01:15:40,719
uh it says you resolve over a certain

1753
01:15:40,719 --> 01:15:41,679
transport class

1754
01:15:41,679 --> 01:15:43,440
with an option to fall back to a best

1755
01:15:43,440 --> 01:15:45,120
effort or another transport class

1756
01:15:45,120 --> 01:15:46,719
and these resolution schemes are like

1757
01:15:46,719 --> 01:15:49,120
local constructs on a receiving box

1758
01:15:49,120 --> 01:15:52,880
and the way the egress router

1759
01:15:52,880 --> 01:15:55,280
or bgp route that is received on an

1760
01:15:55,280 --> 01:15:56,320
ingress router

1761
01:15:56,320 --> 01:15:58,320
communicates its resolution scheme

1762
01:15:58,320 --> 01:16:00,080
intended resolution scheme is using a

1763
01:16:00,080 --> 01:16:02,000
mapping community on the pgp route

1764
01:16:02,000 --> 01:16:03,840
so this mapping community can be any

1765
01:16:03,840 --> 01:16:05,360
community for that matter

1766
01:16:05,360 --> 01:16:07,520
for example the colorectal community

1767
01:16:07,520 --> 01:16:09,360
that is already widely in use

1768
01:16:09,360 --> 01:16:11,520
to map services so they can be used on

1769
01:16:11,520 --> 01:16:12,560
the service route

1770
01:16:12,560 --> 01:16:15,040
to say that please map over the color n

1771
01:16:15,040 --> 01:16:15,920
tunnels

1772
01:16:15,920 --> 01:16:17,760
with a fallback fall back on best of our

1773
01:16:17,760 --> 01:16:20,159
tunnels that's the default mode

1774
01:16:20,159 --> 01:16:22,400
and bgbct routes because they want to

1775
01:16:22,400 --> 01:16:23,760
confine to only

1776
01:16:23,760 --> 01:16:26,960
tunnels on that uh transport class

1777
01:16:26,960 --> 01:16:29,440
without having any fallback they the

1778
01:16:29,440 --> 01:16:31,120
transport route target is used

1779
01:16:31,120 --> 01:16:33,920
as a mapping community on those routes

1780
01:16:33,920 --> 01:16:35,280
and it resolves strictly over

1781
01:16:35,280 --> 01:16:39,360
the color internals and if users want uh

1782
01:16:39,360 --> 01:16:42,640
different uh resolution schemes

1783
01:16:42,640 --> 01:16:45,120
saying i want a primary path through

1784
01:16:45,120 --> 01:16:47,679
gold versus a backup path from silver

1785
01:16:47,679 --> 01:16:49,600
so those can be separate resolution

1786
01:16:49,600 --> 01:16:51,040
schemes that can be configured on the

1787
01:16:51,040 --> 01:16:52,159
box

1788
01:16:52,159 --> 01:16:54,879
next slide please

1789
01:16:57,199 --> 01:16:58,719
so this is just a p cap to show how

1790
01:16:58,719 --> 01:17:02,239
similar the update looks like just like

1791
01:17:02,239 --> 01:17:04,480
s3 vpn so we just have the route target

1792
01:17:04,480 --> 01:17:06,719
uh transport cluster target and instead

1793
01:17:06,719 --> 01:17:08,640
of 1 128 it is just

1794
01:17:08,640 --> 01:17:12,080
1 76 and it will be 276 for v6

1795
01:17:12,080 --> 01:17:14,880
and we have the article at the end point

1796
01:17:14,880 --> 01:17:17,840
next eye please

1797
01:17:20,480 --> 01:17:22,640
so this this picture just recaps uh

1798
01:17:22,640 --> 01:17:23,600
whatever we

1799
01:17:23,600 --> 01:17:25,920
uh just talked about so it just shows an

1800
01:17:25,920 --> 01:17:26,960
example two

1801
01:17:26,960 --> 01:17:30,000
asses the left side as2 is

1802
01:17:30,000 --> 01:17:33,040
strict into two domains and uh we have

1803
01:17:33,040 --> 01:17:34,800
the border nodes in this ass which are

1804
01:17:34,800 --> 01:17:35,679
like abr

1805
01:17:35,679 --> 01:17:39,440
and the asbrs so the bgbct routes they

1806
01:17:39,440 --> 01:17:41,760
can be either originated at be11

1807
01:17:41,760 --> 01:17:44,000
or they can be originated at asbr one

1808
01:17:44,000 --> 01:17:45,440
one

1809
01:17:45,440 --> 01:17:46,719
at asbr one one they will be

1810
01:17:46,719 --> 01:17:50,480
redistributing the rsvp or srte or flex

1811
01:17:50,480 --> 01:17:52,080
routes into bgbct

1812
01:17:52,080 --> 01:17:54,800
and they will create the swap routes at

1813
01:17:54,800 --> 01:17:56,159
asbr one one

1814
01:17:56,159 --> 01:17:58,719
and they will get further uh

1815
01:17:58,719 --> 01:18:00,960
redistributed by asbr-23

1816
01:18:00,960 --> 01:18:04,320
uh across to abr two two across to pe21

1817
01:18:04,320 --> 01:18:06,400
and at each of these border nodes where

1818
01:18:06,400 --> 01:18:08,000
it is doing the stop self it will just

1819
01:18:08,000 --> 01:18:08,640
emit the

1820
01:18:08,640 --> 01:18:11,199
mpls forwarding entries which connects

1821
01:18:11,199 --> 01:18:13,440
these lsps of the same color

1822
01:18:13,440 --> 01:18:15,840
and at be21 uh we can just map the

1823
01:18:15,840 --> 01:18:16,800
service routes

1824
01:18:16,800 --> 01:18:18,159
that are coming with the mapping

1825
01:18:18,159 --> 01:18:20,320
community of gold or bronze

1826
01:18:20,320 --> 01:18:22,320
to say that i want to map the service

1827
01:18:22,320 --> 01:18:23,360
traffic to the code

1828
01:18:23,360 --> 01:18:26,640
so end to end we get the

1829
01:18:26,640 --> 01:18:29,840
service traffic taking the gold lsb and

1830
01:18:29,840 --> 01:18:32,320
needless to say asbr one one could also

1831
01:18:32,320 --> 01:18:34,159
have service routes received which can

1832
01:18:34,159 --> 01:18:36,080
resolve over the same gold lsp

1833
01:18:36,080 --> 01:18:41,840
in the same way next time please

1834
01:18:43,679 --> 01:18:46,719
so i wanted to take a moment to

1835
01:18:46,719 --> 01:18:49,440
recap the advantages of using 4364

1836
01:18:49,440 --> 01:18:50,960
encoding

1837
01:18:50,960 --> 01:18:53,120
so we use the route distinct user to

1838
01:18:53,120 --> 01:18:54,880
allow the multiple distinguishing

1839
01:18:54,880 --> 01:18:56,320
between the multiple tunnels to the same

1840
01:18:56,320 --> 01:18:58,239
destination

1841
01:18:58,239 --> 01:19:00,560
so it avoids using multiple loopbacks to

1842
01:19:00,560 --> 01:19:01,280
the agrespe

1843
01:19:01,280 --> 01:19:04,239
primarily and it avoids path hiding when

1844
01:19:04,239 --> 01:19:05,760
press transiting through the

1845
01:19:05,760 --> 01:19:09,920
rrs or than asbr's

1846
01:19:09,920 --> 01:19:11,600
allows unambiguously identifying the

1847
01:19:11,600 --> 01:19:14,320
originating pe it's good for debugging

1848
01:19:14,320 --> 01:19:16,960
and it also supports tunnel endpoint

1849
01:19:16,960 --> 01:19:18,560
being in any cast address participating

1850
01:19:18,560 --> 01:19:20,880
in multiple domains for example

1851
01:19:20,880 --> 01:19:24,080
and it allows path selection

1852
01:19:24,080 --> 01:19:25,600
for the tunnel end point after stripping

1853
01:19:25,600 --> 01:19:27,840
the rd when necessary so this is helpful

1854
01:19:27,840 --> 01:19:29,280
for faster convergence

1855
01:19:29,280 --> 01:19:31,679
so basically rd is an identifier of

1856
01:19:31,679 --> 01:19:32,480
convenience

1857
01:19:32,480 --> 01:19:35,440
we can use it when needed to go through

1858
01:19:35,440 --> 01:19:36,320
rs

1859
01:19:36,320 --> 01:19:38,719
and avoid path hiding and we can strip

1860
01:19:38,719 --> 01:19:40,000
it when it is not needed

1861
01:19:40,000 --> 01:19:41,760
and it is preserved end to end so there

1862
01:19:41,760 --> 01:19:43,360
is no ambiguity there

1863
01:19:43,360 --> 01:19:46,800
and using the 4364 style route target to

1864
01:19:46,800 --> 01:19:48,880
propagate transport class so that allows

1865
01:19:48,880 --> 01:19:49,440
forming

1866
01:19:49,440 --> 01:19:51,199
venn diagrams of color domains as

1867
01:19:51,199 --> 01:19:52,880
desired um

1868
01:19:52,880 --> 01:19:55,040
it's it's basically directly maps to the

1869
01:19:55,040 --> 01:19:57,679
l3 vpn like uh vpns that we have

1870
01:19:57,679 --> 01:20:02,320
and we can have we can support different

1871
01:20:02,320 --> 01:20:03,920
models where you can you have core

1872
01:20:03,920 --> 01:20:05,920
networks having more fine-grained colors

1873
01:20:05,920 --> 01:20:07,440
and the access networks may not have

1874
01:20:07,440 --> 01:20:08,400
that many colors

1875
01:20:08,400 --> 01:20:10,719
so those can also be represented in this

1876
01:20:10,719 --> 01:20:12,000
model just by using

1877
01:20:12,000 --> 01:20:14,960
multiple route targets on a route uh or

1878
01:20:14,960 --> 01:20:15,679
a different

1879
01:20:15,679 --> 01:20:18,000
kind of the core domains having a

1880
01:20:18,000 --> 01:20:19,600
different target import and the access

1881
01:20:19,600 --> 01:20:20,880
domains having a different authority

1882
01:20:20,880 --> 01:20:21,520
input

1883
01:20:21,520 --> 01:20:23,199
and other creative use cases can't be

1884
01:20:23,199 --> 01:20:24,800
possible as we have seen with the

1885
01:20:24,800 --> 01:20:28,000
l3 vpn in general and treating color as

1886
01:20:28,000 --> 01:20:28,800
an

1887
01:20:28,800 --> 01:20:30,320
attribute that's an adjective rather

1888
01:20:30,320 --> 01:20:32,560
than part of the nlri it helps in cases

1889
01:20:32,560 --> 01:20:34,000
where domains have different numbering

1890
01:20:34,000 --> 01:20:35,280
of color values

1891
01:20:35,280 --> 01:20:36,719
attribute rewrites is easier than

1892
01:20:36,719 --> 01:20:38,400
rewriting and larry and there is no

1893
01:20:38,400 --> 01:20:39,199
ambiguity of

1894
01:20:39,199 --> 01:20:42,000
where is my color it's always as an

1895
01:20:42,000 --> 01:20:43,440
attribute

1896
01:20:43,440 --> 01:20:46,800
as part of the row target and

1897
01:20:46,800 --> 01:20:49,280
because of reusing 4364 we can also

1898
01:20:49,280 --> 01:20:51,600
reuse our target constraint procedures

1899
01:20:51,600 --> 01:20:54,719
to do on-demand next up and

1900
01:20:54,719 --> 01:20:57,920
they they there is uh there can be

1901
01:20:57,920 --> 01:21:00,880
a clean api between the service loads l3

1902
01:21:00,880 --> 01:21:03,199
vpn and the transport layer vgpct

1903
01:21:03,199 --> 01:21:04,880
because using service logs we could just

1904
01:21:04,880 --> 01:21:08,320
determine okay what transport class

1905
01:21:08,320 --> 01:21:10,719
routes we want and the access nodes can

1906
01:21:10,719 --> 01:21:12,719
just request an rtf for those transport

1907
01:21:12,719 --> 01:21:13,520
class routes

1908
01:21:13,520 --> 01:21:15,520
enabling them to receive only the pgpt

1909
01:21:15,520 --> 01:21:17,040
route that they need

1910
01:21:17,040 --> 01:21:19,920
and it basically reuses the time-tested

1911
01:21:19,920 --> 01:21:22,080
well-deployed vpn machinery

1912
01:21:22,080 --> 01:21:24,159
and that cut downs uh implementation

1913
01:21:24,159 --> 01:21:26,080
time testing time and improves real

1914
01:21:26,080 --> 01:21:29,120
reliability and i would also

1915
01:21:29,120 --> 01:21:32,639
i mean i'm a big fan of rfc 1925 and

1916
01:21:32,639 --> 01:21:35,199
one of the points that i like that is in

1917
01:21:35,199 --> 01:21:37,040
protocol design perfection has been

1918
01:21:37,040 --> 01:21:38,480
reached not when there is nothing left

1919
01:21:38,480 --> 01:21:39,120
to add

1920
01:21:39,120 --> 01:21:40,719
but and there's nothing left to take

1921
01:21:40,719 --> 01:21:42,719
away and

1922
01:21:42,719 --> 01:21:45,840
we felt that because 4364 perfectly

1923
01:21:45,840 --> 01:21:47,040
solves the problem there's nothing

1924
01:21:47,040 --> 01:21:48,639
required to be added really

1925
01:21:48,639 --> 01:21:50,080
so we just will use the same thing in a

1926
01:21:50,080 --> 01:21:51,679
different layer

1927
01:21:51,679 --> 01:21:57,040
next slide please

1928
01:21:57,040 --> 01:21:59,520
so these are the updates since ietf108

1929
01:21:59,520 --> 01:22:00,239
uh

1930
01:22:00,239 --> 01:22:02,159
so we just added some illustration with

1931
01:22:02,159 --> 01:22:03,360
a topology with

1932
01:22:03,360 --> 01:22:06,080
uh which helps understand the procedures

1933
01:22:06,080 --> 01:22:07,440
described before uh

1934
01:22:07,440 --> 01:22:09,600
in the previous sections added mpls om

1935
01:22:09,600 --> 01:22:10,480
section

1936
01:22:10,480 --> 01:22:13,199
and documented case updated and abs

1937
01:22:13,199 --> 01:22:15,199
doing next top self uh basically rs with

1938
01:22:15,199 --> 01:22:17,040
next upsell whenever there is uh they do

1939
01:22:17,040 --> 01:22:18,080
forwarding

1940
01:22:18,080 --> 01:22:20,800
this this problem can happen and uh it

1941
01:22:20,800 --> 01:22:22,320
found surprisingly it's not recorded

1942
01:22:22,320 --> 01:22:24,000
anywhere we just took the opportunity

1943
01:22:24,000 --> 01:22:26,560
to record it in this draft we will look

1944
01:22:26,560 --> 01:22:27,120
at it

1945
01:22:27,120 --> 01:22:29,920
in detail in the next two slides and we

1946
01:22:29,920 --> 01:22:31,760
added scaling consideration section

1947
01:22:31,760 --> 01:22:35,360
i recommend rfc8218212 as a default

1948
01:22:35,360 --> 01:22:37,520
behavior for city family which basically

1949
01:22:37,520 --> 01:22:38,480
says uh

1950
01:22:38,480 --> 01:22:40,960
don't export anything to be pgpos

1951
01:22:40,960 --> 01:22:43,440
without having an explicit export policy

1952
01:22:43,440 --> 01:22:45,520
and raw target filtering can be used for

1953
01:22:45,520 --> 01:22:47,199
vgpct to provide odn

1954
01:22:47,199 --> 01:22:48,960
and mdls namespaces this is a new

1955
01:22:48,960 --> 01:22:51,120
concept that can be applied not only to

1956
01:22:51,120 --> 01:22:53,280
cd but also to bgplu networks to deal

1957
01:22:53,280 --> 01:22:53,679
with

1958
01:22:53,679 --> 01:22:58,000
scaling and in seamless mpls networks

1959
01:22:58,000 --> 01:23:01,199
so there may be a presentation for this

1960
01:23:01,199 --> 01:23:02,000
topic

1961
01:23:02,000 --> 01:23:05,120
in best working group if time permits

1962
01:23:05,120 --> 01:23:07,199
and we also added the applicability

1963
01:23:07,199 --> 01:23:08,400
network slicing section

1964
01:23:08,400 --> 01:23:10,159
because it was brought to us notice that

1965
01:23:10,159 --> 01:23:11,840
the transport class uh

1966
01:23:11,840 --> 01:23:14,639
part of this uh solution it fits nicely

1967
01:23:14,639 --> 01:23:15,360
to the

1968
01:23:15,360 --> 01:23:17,199
uh it represents a topology slice part

1969
01:23:17,199 --> 01:23:18,880
of transport slice

1970
01:23:18,880 --> 01:23:20,880
so a transport slice in network slice is

1971
01:23:20,880 --> 01:23:22,159
a topology slice

1972
01:23:22,159 --> 01:23:24,560
added with some resources to it so the

1973
01:23:24,560 --> 01:23:25,360
time that

1974
01:23:25,360 --> 01:23:27,360
the transport class uh neatly provides a

1975
01:23:27,360 --> 01:23:29,040
topology slice that the service routes

1976
01:23:29,040 --> 01:23:30,480
can bind to

1977
01:23:30,480 --> 01:23:33,679
and uh since ietf108 we have also had

1978
01:23:33,679 --> 01:23:36,159
good discussions on the mailing list and

1979
01:23:36,159 --> 01:23:37,360
we

1980
01:23:37,360 --> 01:23:40,000
have uh we are very pleased to welcome

1981
01:23:40,000 --> 01:23:41,040
co-authors

1982
01:23:41,040 --> 01:23:46,320
from verizon cox alibaba google

1983
01:23:46,320 --> 01:23:48,480
thank you for your support and uh we

1984
01:23:48,480 --> 01:23:50,560
have working code

1985
01:23:50,560 --> 01:23:54,000
next time please and quick time check

1986
01:23:54,000 --> 01:23:56,960
less than two minutes okay so this is

1987
01:23:56,960 --> 01:23:58,080
just uh

1988
01:23:58,080 --> 01:24:02,320
uh i mean

1989
01:24:02,320 --> 01:24:05,199
case of redundant abs in a bgp network

1990
01:24:05,199 --> 01:24:06,800
where they're doing next top self

1991
01:24:06,800 --> 01:24:09,679
and they can be looped that's formed in

1992
01:24:09,679 --> 01:24:11,120
between them can you go to the next site

1993
01:24:11,120 --> 01:24:11,600
please

1994
01:24:11,600 --> 01:24:16,480
i'll just explain using the topology

1995
01:24:16,480 --> 01:24:18,320
so here we have redundant abrs which are

1996
01:24:18,320 --> 01:24:20,159
basically rs with next top self

1997
01:24:20,159 --> 01:24:23,120
and if you look at this picture abr 23

1998
01:24:23,120 --> 01:24:25,440
will be receiving the routes with abr 22

1999
01:24:25,440 --> 01:24:26,239
as the next stop

2000
01:24:26,239 --> 01:24:28,800
as well as the asbs as the next stop and

2001
01:24:28,800 --> 01:24:30,000
it may so happen that

2002
01:24:30,000 --> 01:24:32,880
because of igp metric abr 23 may choose

2003
01:24:32,880 --> 01:24:33,840
ebr22

2004
01:24:33,840 --> 01:24:36,719
as the best path and api 22 may do the

2005
01:24:36,719 --> 01:24:37,280
same

2006
01:24:37,280 --> 01:24:41,120
and there's another gacha with rr rfc

2007
01:24:41,120 --> 01:24:43,520
where it considers cluster list path

2008
01:24:43,520 --> 01:24:44,320
selection

2009
01:24:44,320 --> 01:24:46,960
after doctor id and that is also another

2010
01:24:46,960 --> 01:24:48,159
uh thing because

2011
01:24:48,159 --> 01:24:49,679
based on the router id it they may

2012
01:24:49,679 --> 01:24:51,679
select each other so

2013
01:24:51,679 --> 01:24:53,360
uh network planners have to carefully

2014
01:24:53,360 --> 01:24:55,199
select the igp metrics so make sure that

2015
01:24:55,199 --> 01:24:56,400
the abs select the

2016
01:24:56,400 --> 01:24:59,760
asbr instead of the pr abrs but with ct

2017
01:24:59,760 --> 01:25:02,159
we have even better alternative

2018
01:25:02,159 --> 01:25:03,199
deployment wise

2019
01:25:03,199 --> 01:25:05,040
if you don't provision the color tunnels

2020
01:25:05,040 --> 01:25:06,800
between abrs they will never select each

2021
01:25:06,800 --> 01:25:08,000
other as the

2022
01:25:08,000 --> 01:25:12,000
next stop so that avoids a traffic loop

2023
01:25:12,000 --> 01:25:14,639
that's just what i wanted to point out

2024
01:25:14,639 --> 01:25:17,199
exactly

2025
01:25:19,600 --> 01:25:21,520
okay so these are just the related wraps

2026
01:25:21,520 --> 01:25:23,040
so the first draft is uh

2027
01:25:23,040 --> 01:25:26,320
extending a piece up to carry a color

2028
01:25:26,320 --> 01:25:27,280
for rsvp

2029
01:25:27,280 --> 01:25:29,199
tunnels so i think we already have a

2030
01:25:29,199 --> 01:25:30,960
piece of graph for srt tunnels but this

2031
01:25:30,960 --> 01:25:32,880
is what this is doing for rsvp

2032
01:25:32,880 --> 01:25:35,280
so that it just completes the solution

2033
01:25:35,280 --> 01:25:36,400
and

2034
01:25:36,400 --> 01:25:38,400
seamless ssr use cases this is a draft

2035
01:25:38,400 --> 01:25:39,520
that's already existing you may be

2036
01:25:39,520 --> 01:25:40,000
familiar

2037
01:25:40,000 --> 01:25:42,000
with it it just explains the various use

2038
01:25:42,000 --> 01:25:44,400
cases possible using bgpct

2039
01:25:44,400 --> 01:25:46,400
and there is this draft that we are

2040
01:25:46,400 --> 01:25:47,840
working on to provide

2041
01:25:47,840 --> 01:25:50,800
and drop between srv6 and mpls and the

2042
01:25:50,800 --> 01:25:52,480
fps name spaces that we just talked

2043
01:25:52,480 --> 01:25:53,040
about

2044
01:25:53,040 --> 01:25:55,440
and the generic rtc is an extension to

2045
01:25:55,440 --> 01:25:56,639
target filtering

2046
01:25:56,639 --> 01:25:59,120
to make it uh work with the wider row

2047
01:25:59,120 --> 01:26:00,080
targets

2048
01:26:00,080 --> 01:26:02,480
so it's just the other draft that are

2049
01:26:02,480 --> 01:26:03,120
there

2050
01:26:03,120 --> 01:26:06,159
to complete the whole solution and i

2051
01:26:06,159 --> 01:26:08,080
think that's the end of my presentation

2052
01:26:08,080 --> 01:26:11,360
and uh on behalf of

2053
01:26:11,360 --> 01:26:14,239
others so i we feel that uh we are at a

2054
01:26:14,239 --> 01:26:15,920
stage where we can uh

2055
01:26:15,920 --> 01:26:18,000
request for the group adoption of this

2056
01:26:18,000 --> 01:26:18,960
draft

2057
01:26:18,960 --> 01:26:22,560
uh so we will make that request formally

2058
01:26:22,560 --> 01:26:25,679
to the chairs to consider it

2059
01:26:25,679 --> 01:26:28,719
i think i can take some questions

2060
01:26:28,719 --> 01:26:31,360
actually we are out of time slot sue

2061
01:26:31,360 --> 01:26:37,839
what time do we have available

2062
01:26:41,760 --> 01:26:44,239
in addition arjun you will need to be

2063
01:26:44,239 --> 01:26:45,840
ready to present

2064
01:26:45,840 --> 01:26:49,840
next we are lacking the

2065
01:26:49,840 --> 01:26:53,040
dj for the presentation

2066
01:26:53,040 --> 01:26:54,639
and so they're finding one of the

2067
01:26:54,639 --> 01:26:56,239
co-authors so

2068
01:26:56,239 --> 01:26:58,560
a few minutes would be good to give a

2069
01:26:58,560 --> 01:27:00,080
dune ready to

2070
01:27:00,080 --> 01:27:03,360
present next go ahead with the

2071
01:27:03,360 --> 01:27:05,040
discussion

2072
01:27:05,040 --> 01:27:08,880
okay first and q is so far

2073
01:27:10,960 --> 01:27:13,040
okay so that's that's the draft that's

2074
01:27:13,040 --> 01:27:14,239
we just mentioned there are

2075
01:27:14,239 --> 01:27:16,840
a couple of drafts and x in the

2076
01:27:16,840 --> 01:27:18,000
presentation

2077
01:27:18,000 --> 01:27:21,120
that is in the same area so

2078
01:27:21,120 --> 01:27:25,280
i think it's premature to adopt any work

2079
01:27:30,960 --> 01:27:32,639
okay if the fire has nothing further

2080
01:27:32,639 --> 01:27:34,639
stefan's next thank you

2081
01:27:34,639 --> 01:27:37,520
yeah stephanie kowski uh speaking as uh

2082
01:27:37,520 --> 01:27:38,400
uh

2083
01:27:38,400 --> 01:27:41,120
do you hear me does it work agreeing oh

2084
01:27:41,120 --> 01:27:42,000
okay good

2085
01:27:42,000 --> 01:27:44,400
uh yeah uh stefan kowski speaking as a

2086
01:27:44,400 --> 01:27:45,199
best

2087
01:27:45,199 --> 01:27:48,800
co-chair i think before adopting

2088
01:27:48,800 --> 01:27:51,440
the document which you should also

2089
01:27:51,440 --> 01:27:53,040
clarify to which

2090
01:27:53,040 --> 01:27:55,520
working group this document belongs

2091
01:27:55,520 --> 01:27:56,480
because there are

2092
01:27:56,480 --> 01:27:59,920
a lot of things that are related to

2093
01:27:59,920 --> 01:28:03,040
vpn semantics and so on and this is more

2094
01:28:03,040 --> 01:28:06,159
something which is related to uh to base

2095
01:28:06,159 --> 01:28:09,199
so we should also have a discussion on

2096
01:28:09,199 --> 01:28:12,320
between the shares on where this is um

2097
01:28:12,320 --> 01:28:14,239
what is a good home for for this work

2098
01:28:14,239 --> 01:28:15,520
whatever it is

2099
01:28:15,520 --> 01:28:17,360
this is a placeful transport document

2100
01:28:17,360 --> 01:28:18,960
but there are also

2101
01:28:18,960 --> 01:28:21,040
other documents that are related to the

2102
01:28:21,040 --> 01:28:28,000
same topic

2103
01:28:28,000 --> 01:28:29,679
okay stefan if you have nothing further

2104
01:28:29,679 --> 01:28:32,800
hi bo you're next in queue

2105
01:28:41,120 --> 01:28:44,639
hello hello okay

2106
01:28:44,639 --> 01:28:48,080
uh i have a question that uh uh

2107
01:28:48,080 --> 01:28:50,719
i think uh this uh this uh chapter

2108
01:28:50,719 --> 01:28:51,920
defined a new

2109
01:28:51,920 --> 01:28:56,000
uh survey uh this stuff you will use the

2110
01:28:56,000 --> 01:28:59,920
rd plus prefix and also as a key

2111
01:28:59,920 --> 01:29:02,159
and also use a transport class that can

2112
01:29:02,159 --> 01:29:03,040
community

2113
01:29:03,040 --> 01:29:06,719
so there are the this method include

2114
01:29:06,719 --> 01:29:10,480
import two or two new value

2115
01:29:10,480 --> 01:29:12,960
one is the id's and the other is the

2116
01:29:12,960 --> 01:29:14,000
transfer class

2117
01:29:14,000 --> 01:29:18,080
so i think uh it may cause the user to

2118
01:29:18,080 --> 01:29:22,880
plan plan the network more flexible so

2119
01:29:22,880 --> 01:29:25,120
so is it you is it suitable to use the

2120
01:29:25,120 --> 01:29:26,320
new value or

2121
01:29:26,320 --> 01:29:28,960
or otherwise we may use only one value

2122
01:29:28,960 --> 01:29:31,920
you know is enough

2123
01:29:32,159 --> 01:29:35,440
so the safety is a new uh to make it a

2124
01:29:35,440 --> 01:29:37,280
new fsafe so that it doesn't collide

2125
01:29:37,280 --> 01:29:38,719
with any other service families

2126
01:29:38,719 --> 01:29:42,000
so that's separate from uh the road

2127
01:29:42,000 --> 01:29:42,639
target

2128
01:29:42,639 --> 01:29:44,080
you type of road target that's a new

2129
01:29:44,080 --> 01:29:45,920
format of route target in fact

2130
01:29:45,920 --> 01:29:47,440
uh new format of external committee

2131
01:29:47,440 --> 01:29:49,520
that's transport class so

2132
01:29:49,520 --> 01:29:53,840
there are two different things

2133
01:29:55,199 --> 01:29:58,400
did i get your question right

2134
01:30:02,080 --> 01:30:04,719
kyle was taking himself out of the queue

2135
01:30:04,719 --> 01:30:07,840
she hurry you're next

2136
01:30:09,199 --> 01:30:12,639
i'm sorry actually uh apologies sue says

2137
01:30:12,639 --> 01:30:15,840
that we have to cut the line now

2138
01:30:16,000 --> 01:30:19,040
okay okay thank you

2139
01:30:19,040 --> 01:30:22,480
so obviously interesting stuff

2140
01:30:22,960 --> 01:30:26,080
go ahead we need to have

2141
01:30:26,080 --> 01:30:30,560
uh ajung go next on his presentation

2142
01:30:30,560 --> 01:30:34,800
the car presenter is running into

2143
01:30:34,800 --> 01:30:36,000
trouble

2144
01:30:36,000 --> 01:30:39,280
so assume could you

2145
01:30:39,280 --> 01:30:42,719
go next please uh this this is

2146
01:30:42,719 --> 01:30:46,159
jeffy only to go forward

2147
01:30:46,880 --> 01:30:50,159
okay thank you sure hi this is guillaume

2148
01:30:50,159 --> 01:30:52,639
with verizon and i will be presenting

2149
01:30:52,639 --> 01:30:53,600
the um

2150
01:30:53,600 --> 01:30:55,840
analysis of vpn routes controlled at a

2151
01:30:55,840 --> 01:30:57,600
shared vgp session

2152
01:30:57,600 --> 01:31:01,040
so this this is for the rdrf solution

2153
01:31:01,040 --> 01:31:03,600
i guess on the mailing list as was

2154
01:31:03,600 --> 01:31:04,639
discussed

2155
01:31:04,639 --> 01:31:08,400
to uh uh present and review the analysis

2156
01:31:08,400 --> 01:31:11,760
of filtering the vpn routes and

2157
01:31:11,760 --> 01:31:14,080
coming to any consensus before we move

2158
01:31:14,080 --> 01:31:16,320
on to the solution uh

2159
01:31:16,320 --> 01:31:18,880
next slide

2160
01:31:20,719 --> 01:31:23,440
so the motivation of this draft

2161
01:31:23,440 --> 01:31:24,960
describes a scenario

2162
01:31:24,960 --> 01:31:28,080
where we need to control vpn routes on a

2163
01:31:28,080 --> 01:31:30,239
shared session pgp session between the

2164
01:31:30,239 --> 01:31:31,760
pe and rr

2165
01:31:31,760 --> 01:31:35,280
um where we have where a flood of routes

2166
01:31:35,280 --> 01:31:38,239
um get advertised between the uh from a

2167
01:31:38,239 --> 01:31:39,760
source pe to a

2168
01:31:39,760 --> 01:31:43,280
downstream receiver pe um the goal is to

2169
01:31:43,280 --> 01:31:45,679
reach consensus on the problem analysis

2170
01:31:45,679 --> 01:31:47,040
and solution requirements

2171
01:31:47,040 --> 01:31:50,000
and then nostalgic based base for the uh

2172
01:31:50,000 --> 01:31:51,199
to forward

2173
01:31:51,199 --> 01:31:58,800
into the updated solution next slide

2174
01:31:58,800 --> 01:32:00,400
so we'll start with the simplest

2175
01:32:00,400 --> 01:32:02,400
scenario so this is uh intra

2176
01:32:02,400 --> 01:32:06,639
intra as so in the entry is scenario

2177
01:32:06,639 --> 01:32:09,600
we have a case a case one where we have

2178
01:32:09,600 --> 01:32:12,480
an art we have already allocated per vpn

2179
01:32:12,480 --> 01:32:15,760
uh slash pe so unique rd per pe

2180
01:32:15,760 --> 01:32:18,080
and only one rt is associated with such

2181
01:32:18,080 --> 01:32:19,360
vpn routes

2182
01:32:19,360 --> 01:32:22,560
um so in this case um the pe3 it sends

2183
01:32:22,560 --> 01:32:23,440
an excess

2184
01:32:23,440 --> 01:32:25,679
routes for v for vpn with the route

2185
01:32:25,679 --> 01:32:26,880
target of one so

2186
01:32:26,880 --> 01:32:30,560
so the the vpn the p3 source p

2187
01:32:30,560 --> 01:32:34,320
with vpn one uh rd3 is the offending

2188
01:32:34,320 --> 01:32:35,840
one that's sending the flutter routes

2189
01:32:35,840 --> 01:32:37,600
for rt1 and here

2190
01:32:37,600 --> 01:32:40,960
we only have one we have a pe one

2191
01:32:40,960 --> 01:32:43,120
in the top left hand corner that's

2192
01:32:43,120 --> 01:32:44,320
importing that rt

2193
01:32:44,320 --> 01:32:47,840
or that rt1 and being impacted by the um

2194
01:32:47,840 --> 01:32:49,920
fluttergrounds

2195
01:32:49,920 --> 01:32:52,800
the second use case is a scenario where

2196
01:32:52,800 --> 01:32:54,639
you have um

2197
01:32:54,639 --> 01:32:58,000
you have the unique rd per pe but then

2198
01:32:58,000 --> 01:32:59,440
you have multiple rt's

2199
01:32:59,440 --> 01:33:02,159
that are associated with vpn so this is

2200
01:33:02,159 --> 01:33:04,080
critical to take into account where

2201
01:33:04,080 --> 01:33:06,880
you have uh because there are multiple

2202
01:33:06,880 --> 01:33:09,040
rts that are being

2203
01:33:09,040 --> 01:33:11,040
that are associated with the vpn in this

2204
01:33:11,040 --> 01:33:13,840
case it's rt1 and rt2

2205
01:33:13,840 --> 01:33:18,639
both rt1 and rt2 are imported on pe 1

2206
01:33:18,639 --> 01:33:21,760
but vpn 1 is the one that's obviously

2207
01:33:21,760 --> 01:33:23,360
receiving the flood of the routes where

2208
01:33:23,360 --> 01:33:24,480
vpn 2

2209
01:33:24,480 --> 01:33:27,679
has rt-2 but it's not it's it's also

2210
01:33:27,679 --> 01:33:28,239
imported

2211
01:33:28,239 --> 01:33:31,280
imported into vpn 2 but it's not

2212
01:33:31,280 --> 01:33:33,840
being being flooded so that is something

2213
01:33:33,840 --> 01:33:35,600
to take into account in the

2214
01:33:35,600 --> 01:33:38,080
solution for the intra is as well as

2215
01:33:38,080 --> 01:33:39,679
this comes into play as well in the

2216
01:33:39,679 --> 01:33:42,800
enter a scenario

2217
01:33:43,040 --> 01:33:50,239
so next slide

2218
01:33:50,239 --> 01:33:52,880
in the interior scenario um the same

2219
01:33:52,880 --> 01:33:54,719
same situation exists where where you

2220
01:33:54,719 --> 01:33:55,840
have a single

2221
01:33:55,840 --> 01:33:59,360
a single rt for a particular vpn or

2222
01:33:59,360 --> 01:34:01,199
multiple rt's imported

2223
01:34:01,199 --> 01:34:04,239
um for a particular vpn um

2224
01:34:04,239 --> 01:34:06,639
so for the nra scenario options b a b

2225
01:34:06,639 --> 01:34:07,440
and c

2226
01:34:07,440 --> 01:34:09,600
yeah yeah we have a bgp session that's

2227
01:34:09,600 --> 01:34:11,080
shared between the asb

2228
01:34:11,080 --> 01:34:14,960
r1asbr2 the vpn ipv4 ipv6 session

2229
01:34:14,960 --> 01:34:18,159
between the sdrs um

2230
01:34:18,159 --> 01:34:21,199
and then between the pe and asbr you

2231
01:34:21,199 --> 01:34:22,320
have a

2232
01:34:22,320 --> 01:34:25,120
session so so the possibility exists

2233
01:34:25,120 --> 01:34:26,880
that you could have an excess of vpn

2234
01:34:26,880 --> 01:34:27,679
routes

2235
01:34:27,679 --> 01:34:30,719
advertised same way that we have with

2236
01:34:30,719 --> 01:34:34,000
indian tria scenario

2237
01:34:34,000 --> 01:34:36,000
so the overall route so the flood of

2238
01:34:36,000 --> 01:34:37,679
routes coming from the source p

2239
01:34:37,679 --> 01:34:40,000
from the as on the right pe three here

2240
01:34:40,000 --> 01:34:43,119
we have vpn one rd-331

2241
01:34:43,119 --> 01:34:45,920
is um sourcing the flood of routes um

2242
01:34:45,920 --> 01:34:46,800
and that

2243
01:34:46,800 --> 01:34:50,560
that vpn uh if it is being imported by

2244
01:34:50,560 --> 01:34:52,320
p1 the receiver p

2245
01:34:52,320 --> 01:34:55,600
which is being impacted um so in this

2246
01:34:55,600 --> 01:34:56,639
scenario

2247
01:34:56,639 --> 01:34:59,679
having a way to control the vpn routes

2248
01:34:59,679 --> 01:35:00,080
that are

2249
01:35:00,080 --> 01:35:03,119
originating uh from the source source

2250
01:35:03,119 --> 01:35:04,719
rd-31

2251
01:35:04,719 --> 01:35:07,199
that's flooding vpn one um in this

2252
01:35:07,199 --> 01:35:08,960
scenario as well there's also the

2253
01:35:08,960 --> 01:35:11,840
scenario where you have multiple rts

2254
01:35:11,840 --> 01:35:14,400
that are associated that are being um

2255
01:35:14,400 --> 01:35:17,760
imported on the on the um source pe um

2256
01:35:17,760 --> 01:35:20,800
but to take into account that only to

2257
01:35:20,800 --> 01:35:21,440
filter

2258
01:35:21,440 --> 01:35:24,800
only to uh filter the routes um between

2259
01:35:24,800 --> 01:35:26,560
the sbr and pe one

2260
01:35:26,560 --> 01:35:30,560
only if all the vpns are being impacted

2261
01:35:30,560 --> 01:35:33,520
on that p1

2262
01:35:33,840 --> 01:35:36,320
next slide

2263
01:35:41,600 --> 01:35:45,440
so so vpn routes up in this in this

2264
01:35:45,440 --> 01:35:47,119
scenario we have um

2265
01:35:47,119 --> 01:35:50,159
we have vpn routes that are being um we

2266
01:35:50,159 --> 01:35:50,480
have

2267
01:35:50,480 --> 01:35:53,440
the common lp to our session that's um

2268
01:35:53,440 --> 01:35:55,040
shared vpn vpnp

2269
01:35:55,040 --> 01:35:57,280
for ipv4 ipv6 routes that are being

2270
01:35:57,280 --> 01:35:58,159
advertised down

2271
01:35:58,159 --> 01:36:01,360
to the pe and we have um

2272
01:36:01,360 --> 01:36:04,159
a source pe that's advertising a flutter

2273
01:36:04,159 --> 01:36:05,760
balance

2274
01:36:05,760 --> 01:36:08,960
so the pe one that's being impacted

2275
01:36:08,960 --> 01:36:10,800
by the flood of routes from a from a

2276
01:36:10,800 --> 01:36:12,400
source p that's advertising for a

2277
01:36:12,400 --> 01:36:14,239
particular source rd

2278
01:36:14,239 --> 01:36:16,560
uh we need to the p should have the

2279
01:36:16,560 --> 01:36:17,840
capability of controlling that

2280
01:36:17,840 --> 01:36:20,480
distribution of vpn routes

2281
01:36:20,480 --> 01:36:23,679
with some type of mechanism but

2282
01:36:23,679 --> 01:36:26,880
the key here is only when when the um

2283
01:36:26,880 --> 01:36:31,199
the the uh vpn that that has a flood

2284
01:36:31,199 --> 01:36:34,320
is is associated with this is the impact

2285
01:36:34,320 --> 01:36:35,600
that's impacted

2286
01:36:35,600 --> 01:36:38,400
um that all vpn all vpns that are

2287
01:36:38,400 --> 01:36:40,800
associated with that rt are impacted

2288
01:36:40,800 --> 01:36:43,040
and that is the only time where the uh

2289
01:36:43,040 --> 01:36:44,880
routes would be filtered between the pe

2290
01:36:44,880 --> 01:36:45,840
and the rr

2291
01:36:45,840 --> 01:36:48,239
um if there's a single if if there is a

2292
01:36:48,239 --> 01:36:50,080
more than one vpn that exists

2293
01:36:50,080 --> 01:36:51,840
that are importing multiple that are

2294
01:36:51,840 --> 01:36:53,119
importing the same

2295
01:36:53,119 --> 01:36:56,000
route target um multiple you know in the

2296
01:36:56,000 --> 01:36:57,520
case where there's multiple rt's

2297
01:36:57,520 --> 01:36:59,119
associated with the vpn

2298
01:36:59,119 --> 01:37:00,800
um that is something we would take into

2299
01:37:00,800 --> 01:37:02,239
account and that's where

2300
01:37:02,239 --> 01:37:05,600
we would not send we would not um filter

2301
01:37:05,600 --> 01:37:08,639
the routes between the p and the rr next

2302
01:37:08,639 --> 01:37:10,960
slide

2303
01:37:15,199 --> 01:37:18,239
so solutions so potential solutions

2304
01:37:18,239 --> 01:37:19,520
would have to meet the following

2305
01:37:19,520 --> 01:37:21,760
requirements so the control messages on

2306
01:37:21,760 --> 01:37:22,639
the

2307
01:37:22,639 --> 01:37:24,480
for the specific vpn routes will be

2308
01:37:24,480 --> 01:37:28,159
triggered automatically upon

2309
01:37:28,480 --> 01:37:30,320
hitting an excess vpn route limit so the

2310
01:37:30,320 --> 01:37:31,679
maximum prefix limit

2311
01:37:31,679 --> 01:37:34,639
on the um on the vpn uh hitting a

2312
01:37:34,639 --> 01:37:35,760
certain threshold

2313
01:37:35,760 --> 01:37:38,239
and with that trigger there's there's

2314
01:37:38,239 --> 01:37:39,199
certain um

2315
01:37:39,199 --> 01:37:41,280
criteria for the control message to be

2316
01:37:41,280 --> 01:37:42,239
sent out

2317
01:37:42,239 --> 01:37:45,199
to uh to block the uh the source pe

2318
01:37:45,199 --> 01:37:46,159
that's flooding

2319
01:37:46,159 --> 01:37:49,199
uh for a particular rd so

2320
01:37:49,199 --> 01:37:51,840
at the pe layer when all the vrs on it

2321
01:37:51,840 --> 01:37:53,600
don't want to process it

2322
01:37:53,600 --> 01:37:55,600
uh the control message would simply sent

2323
01:37:55,600 --> 01:37:57,040
out at the pe layer

2324
01:37:57,040 --> 01:37:59,920
at the rr layer upstream when when all

2325
01:37:59,920 --> 01:38:01,920
of its vgp clients don't want to process

2326
01:38:01,920 --> 01:38:03,679
the um

2327
01:38:03,679 --> 01:38:06,480
the the flutter routes then the then the

2328
01:38:06,480 --> 01:38:07,199
uh

2329
01:38:07,199 --> 01:38:09,040
control message would be sent upstream

2330
01:38:09,040 --> 01:38:11,040
to to block the flood arounds

2331
01:38:11,040 --> 01:38:13,600
um and then at the asbr layer as well

2332
01:38:13,600 --> 01:38:16,159
when all of its downstream peers within

2333
01:38:16,159 --> 01:38:17,920
that as don't want to process the routes

2334
01:38:17,920 --> 01:38:18,960
then it would be sent

2335
01:38:18,960 --> 01:38:23,760
um interac to the other adjacent sbr

2336
01:38:23,760 --> 01:38:26,960
and then and then lastly if all if all

2337
01:38:26,960 --> 01:38:29,360
if all of the above you know don't want

2338
01:38:29,360 --> 01:38:31,840
to process the um

2339
01:38:31,840 --> 01:38:34,960
process the vpn routes that that the um

2340
01:38:34,960 --> 01:38:36,560
that the uh control message would be

2341
01:38:36,560 --> 01:38:38,239
sent upstream uh

2342
01:38:38,239 --> 01:38:40,159
so this this would be an automatic

2343
01:38:40,159 --> 01:38:42,320
control message that would be sent out

2344
01:38:42,320 --> 01:38:45,119
uh based on the trigger that happens uh

2345
01:38:45,119 --> 01:38:47,199
based on a maximum prefix or other type

2346
01:38:47,199 --> 01:38:49,040
trigger that would trigger it would send

2347
01:38:49,040 --> 01:38:51,040
the control message to step b

2348
01:38:51,040 --> 01:38:54,639
uh with a step c manual removal

2349
01:38:54,639 --> 01:38:56,880
of the control message just to prevent

2350
01:38:56,880 --> 01:38:59,280
any possible instability of flapping

2351
01:38:59,280 --> 01:39:04,559
um that could possibly occur next slide

2352
01:39:08,400 --> 01:39:11,679
so we'd like to get comments on

2353
01:39:11,679 --> 01:39:15,040
questions and comments related to um uh

2354
01:39:15,040 --> 01:39:17,119
the the problem statement and then and

2355
01:39:17,119 --> 01:39:19,360
then and then the goal is to uh

2356
01:39:19,360 --> 01:39:21,600
have a clear definition of the problem

2357
01:39:21,600 --> 01:39:23,280
and be able to move on to the solutions

2358
01:39:23,280 --> 01:39:24,320
and requirements

2359
01:39:24,320 --> 01:39:26,560
uh for the solution and start on

2360
01:39:26,560 --> 01:39:29,199
updating the solutions draft

2361
01:39:29,199 --> 01:39:32,560
next slide can

2362
01:39:32,560 --> 01:39:36,560
can sorry this is sue

2363
01:39:36,560 --> 01:39:39,040
i'd like to make sure we allow plenty of

2364
01:39:39,040 --> 01:39:40,239
time

2365
01:39:40,239 --> 01:39:44,000
for feedback on the problem statement

2366
01:39:44,000 --> 01:39:46,320
so if you're going to go into solutions

2367
01:39:46,320 --> 01:39:48,400
if you'd hold and make sure you get

2368
01:39:48,400 --> 01:39:51,679
comments from the working group sure

2369
01:39:51,679 --> 01:39:53,520
i'm sure thank you thank you thank you

2370
01:39:53,520 --> 01:39:55,360
sir that sounds good

2371
01:39:55,360 --> 01:39:58,800
so if anyone has any comments please

2372
01:39:58,800 --> 01:40:01,600
we can run through any any questions on

2373
01:40:01,600 --> 01:40:03,040
the um

2374
01:40:03,040 --> 01:40:09,840
on the problem statement

2375
01:40:18,880 --> 01:40:20,320
okay we have nothing in the queue

2376
01:40:20,320 --> 01:40:22,320
perhaps we could proceed

2377
01:40:22,320 --> 01:40:25,520
okay all right thank you so

2378
01:40:25,520 --> 01:40:27,119
potential solution potential and

2379
01:40:27,119 --> 01:40:29,280
proposed solution so once we receive the

2380
01:40:29,280 --> 01:40:30,000
consensus

2381
01:40:30,000 --> 01:40:32,000
consensus and we'll we'll take this to

2382
01:40:32,000 --> 01:40:33,520
the mailing list as well just to make

2383
01:40:33,520 --> 01:40:33,920
sure

2384
01:40:33,920 --> 01:40:36,159
you know everyone is in consensus on the

2385
01:40:36,159 --> 01:40:36,960
problem statement

2386
01:40:36,960 --> 01:40:39,040
and then we'll uh we'll move forward and

2387
01:40:39,040 --> 01:40:40,480
go on to the solution

2388
01:40:40,480 --> 01:40:43,199
up so now um we'll proceed to the next

2389
01:40:43,199 --> 01:40:43,920
slide

2390
01:40:43,920 --> 01:40:47,760
next slide all right

2391
01:40:47,760 --> 01:40:49,679
so as far as the solution starting with

2392
01:40:49,679 --> 01:40:53,199
the simplest uh intra-as scenario

2393
01:40:53,199 --> 01:40:56,719
so in this case number one um

2394
01:40:56,719 --> 01:40:58,880
so once so in this scenario we have a

2395
01:40:58,880 --> 01:40:59,760
source pe

2396
01:40:59,760 --> 01:41:03,920
p3 with a vpn one so there's a single

2397
01:41:03,920 --> 01:41:08,400
round target that's uh has has the um

2398
01:41:08,400 --> 01:41:09,920
that's sourcing the flood of routes

2399
01:41:09,920 --> 01:41:12,400
related to our rd rd31

2400
01:41:12,400 --> 01:41:15,679
and we have a receiver pe pe1

2401
01:41:15,679 --> 01:41:18,400
that's receiving the flood of routes or

2402
01:41:18,400 --> 01:41:19,040
rd

2403
01:41:19,040 --> 01:41:22,000
ferrari one one that's being impacted so

2404
01:41:22,000 --> 01:41:22,480
once

2405
01:41:22,480 --> 01:41:25,760
so here in this first case uh once p1

2406
01:41:25,760 --> 01:41:27,199
detects vpn one

2407
01:41:27,199 --> 01:41:30,080
the vr has overflown uh he has a few

2408
01:41:30,080 --> 01:41:31,360
checks that he goes through he will

2409
01:41:31,360 --> 01:41:33,280
check to see if the vpn routes

2410
01:41:33,280 --> 01:41:36,719
are that he has our rd31

2411
01:41:36,719 --> 01:41:38,320
that are that are causing the access

2412
01:41:38,320 --> 01:41:41,199
routes coming from from rt1 for rt1

2413
01:41:41,199 --> 01:41:43,679
that are being imported and then our rd

2414
01:41:43,679 --> 01:41:45,679
checks for the rd31

2415
01:41:45,679 --> 01:41:49,840
source of the um flutter routes

2416
01:41:49,840 --> 01:41:51,679
and then he ensures that no other no

2417
01:41:51,679 --> 01:41:53,679
other vrs are importing the vpn routes

2418
01:41:53,679 --> 01:41:55,280
for rt1

2419
01:41:55,280 --> 01:41:58,159
uh before before a um the mechanism for

2420
01:41:58,159 --> 01:42:01,839
the trigger connect can happen

2421
01:42:04,000 --> 01:42:06,719
so once once he's done that p once he's

2422
01:42:06,719 --> 01:42:08,480
determined that there's no other vrs

2423
01:42:08,480 --> 01:42:09,760
that are importing rt1

2424
01:42:09,760 --> 01:42:11,440
he'll trigger an rdrf message back

2425
01:42:11,440 --> 01:42:14,239
towards the rr so the rd field is set to

2426
01:42:14,239 --> 01:42:16,638
rdt

2427
01:42:21,199 --> 01:42:29,839
we have lost audio from you

2428
01:42:41,600 --> 01:42:44,639
okay um so let me just back up a little

2429
01:42:44,639 --> 01:42:45,440
bit so

2430
01:42:45,440 --> 01:42:48,719
pe one triggers an rd rf

2431
01:42:48,719 --> 01:42:52,159
message uh to a to our 2r1 with the rd

2432
01:42:52,159 --> 01:42:54,080
field set to rd31

2433
01:42:54,080 --> 01:42:56,800
um r1 withdraws and stops advertising

2434
01:42:56,800 --> 01:42:57,440
the message

2435
01:42:57,440 --> 01:43:00,000
uh advertising the pre access vpn routes

2436
01:43:00,000 --> 01:43:02,560
to pe one

2437
01:43:02,560 --> 01:43:05,920
uh so once once vpn service and p the pe

2438
01:43:05,920 --> 01:43:06,639
one

2439
01:43:06,639 --> 01:43:09,040
will will continue operate so all the

2440
01:43:09,040 --> 01:43:11,119
other vp all the other route targets are

2441
01:43:11,119 --> 01:43:12,480
not impacted it's just

2442
01:43:12,480 --> 01:43:15,520
it's just the rt1 and it's really in the

2443
01:43:15,520 --> 01:43:18,400
rd31 where the rdo rf has been filtered

2444
01:43:18,400 --> 01:43:21,760
on on the in the use case number one so

2445
01:43:21,760 --> 01:43:25,040
it the only only impact or is really

2446
01:43:25,040 --> 01:43:26,800
fixing it's resolving the problem with

2447
01:43:26,800 --> 01:43:28,560
the vpn one that's importing

2448
01:43:28,560 --> 01:43:31,280
the rd31 is the one that's filtered vpn

2449
01:43:31,280 --> 01:43:32,000
2

2450
01:43:32,000 --> 01:43:36,480
continues to receive the import of rt2

2451
01:43:37,760 --> 01:43:40,159
in the in the case on the right uh so

2452
01:43:40,159 --> 01:43:41,920
case use case number two

2453
01:43:41,920 --> 01:43:44,800
um on p1 we detect vpn one beat the vr

2454
01:43:44,800 --> 01:43:46,239
if it's overflown

2455
01:43:46,239 --> 01:43:49,440
um so this is for vpn one rd31

2456
01:43:49,440 --> 01:43:52,639
um rt1 is a source p on p3

2457
01:43:52,639 --> 01:43:55,679
so pd3 that's uh has

2458
01:43:55,679 --> 01:43:58,880
rdd rt1 uh sourcing

2459
01:43:58,880 --> 01:44:02,480
the flood of routes and in this case p1

2460
01:44:02,480 --> 01:44:06,400
he has the import of vpn vpn one

2461
01:44:06,400 --> 01:44:09,199
importing rt1 uh but in this case

2462
01:44:09,199 --> 01:44:10,400
there's two rts where

2463
01:44:10,400 --> 01:44:13,600
the rt1 and rt2 are being imported by

2464
01:44:13,600 --> 01:44:16,159
two different verbs vpn 1 and vpn 2.

2465
01:44:16,159 --> 01:44:19,440
epn1 is impacted but vpn 2 is not so in

2466
01:44:19,440 --> 01:44:20,480
this case

2467
01:44:20,480 --> 01:44:22,719
the pe one because of all all vpns

2468
01:44:22,719 --> 01:44:24,719
there's multiple vpns are importing the

2469
01:44:24,719 --> 01:44:25,600
rt

2470
01:44:25,600 --> 01:44:28,960
uh p1 would not send out an rd rf back

2471
01:44:28,960 --> 01:44:30,960
towards r1 so this is

2472
01:44:30,960 --> 01:44:32,960
a careful consideration in its local

2473
01:44:32,960 --> 01:44:34,159
configuration

2474
01:44:34,159 --> 01:44:37,600
as part of the specification that we

2475
01:44:37,600 --> 01:44:39,360
would only send the rdo rf

2476
01:44:39,360 --> 01:44:43,199
for all the vpns uh that are attached to

2477
01:44:43,199 --> 01:44:44,080
the pe

2478
01:44:44,080 --> 01:44:47,520
um or not or are importing

2479
01:44:47,520 --> 01:44:49,440
the uh that are importing the uh round

2480
01:44:49,440 --> 01:44:51,040
target

2481
01:44:51,040 --> 01:44:54,000
um that are being flooded so in this

2482
01:44:54,000 --> 01:44:55,840
case if because there's multiple

2483
01:44:55,840 --> 01:44:59,440
um rts are imported by multiple vpns but

2484
01:44:59,440 --> 01:45:01,760
the other vpns are not impacted we would

2485
01:45:01,760 --> 01:45:02,960
not send the um

2486
01:45:02,960 --> 01:45:06,159
rdrf up to the armor

2487
01:45:06,159 --> 01:45:09,440
next one uh so time check uh you've

2488
01:45:09,440 --> 01:45:11,040
exhausted your 15 minutes

2489
01:45:11,040 --> 01:45:14,320
uh could you try to wrap up sure

2490
01:45:14,320 --> 01:45:17,760
thank you okay

2491
01:45:17,760 --> 01:45:20,080
so this is this is the nras scenario so

2492
01:45:20,080 --> 01:45:21,679
if so in this scenario

2493
01:45:21,679 --> 01:45:23,679
uh we have the same consideration that

2494
01:45:23,679 --> 01:45:25,760
happens if the excess vpn routes are vpn

2495
01:45:25,760 --> 01:45:26,239
one or

2496
01:45:26,239 --> 01:45:29,679
two so in this case we have uh

2497
01:45:29,679 --> 01:45:33,119
vpn one um rd31 is the um

2498
01:45:33,119 --> 01:45:35,280
source rd that's being that's being

2499
01:45:35,280 --> 01:45:36,880
advertised that's being flooded over

2500
01:45:36,880 --> 01:45:37,280
from

2501
01:45:37,280 --> 01:45:39,360
um the as on the right to the as on the

2502
01:45:39,360 --> 01:45:42,719
left it's being imported by pe1

2503
01:45:42,719 --> 01:45:45,040
so so here in this case if there are no

2504
01:45:45,040 --> 01:45:46,800
other vpn

2505
01:45:46,800 --> 01:45:49,440
vpn to import the rt than the xfcc few

2506
01:45:49,440 --> 01:45:50,560
routes

2507
01:45:50,560 --> 01:45:55,040
the cad so p1 will trigger an rdrf

2508
01:45:55,040 --> 01:45:59,280
uh with the field set to rd31 or rd32

2509
01:45:59,280 --> 01:46:01,520
and it'll send it up to the sbr so as

2510
01:46:01,520 --> 01:46:03,040
long as there's no other

2511
01:46:03,040 --> 01:46:04,800
uh vpns that are input that are

2512
01:46:04,800 --> 01:46:07,600
importing that um that rt

2513
01:46:07,600 --> 01:46:11,199
or rt1 that's the impacted one

2514
01:46:11,199 --> 01:46:14,880
so when is when the asbr one receives

2515
01:46:14,880 --> 01:46:16,719
the such an rdrf message they'll check

2516
01:46:16,719 --> 01:46:18,639
if all its downstream peers

2517
01:46:18,639 --> 01:46:20,880
have sent the same message or and that

2518
01:46:20,880 --> 01:46:22,560
to process the vpn routes

2519
01:46:22,560 --> 01:46:24,880
uh with the access capability it'll send

2520
01:46:24,880 --> 01:46:26,080
it up it'll send

2521
01:46:26,080 --> 01:46:28,480
the message upstream to sbr2 so it'll

2522
01:46:28,480 --> 01:46:29,920
they'll do the check and make sure all

2523
01:46:29,920 --> 01:46:31,679
the downstream peers

2524
01:46:31,679 --> 01:46:34,239
um have sent an rdrf and then it would

2525
01:46:34,239 --> 01:46:35,679
send it send the um

2526
01:46:35,679 --> 01:46:38,800
rdrf upstream

2527
01:46:38,960 --> 01:46:42,000
so p1 and p2 is receives the rdrf

2528
01:46:42,000 --> 01:46:44,159
from both sets with the arduino set with

2529
01:46:44,159 --> 01:46:45,440
the field set to already three and then

2530
01:46:45,440 --> 01:46:48,400
the sbr one will send your url stream

2531
01:46:48,400 --> 01:46:51,920
yes i'm i'm really sorry we have to

2532
01:46:51,920 --> 01:46:55,040
um stop the presentation at this time in

2533
01:46:55,040 --> 01:46:57,840
order to give the next presenter

2534
01:46:57,840 --> 01:47:00,639
um a potential could you just wrap up

2535
01:47:00,639 --> 01:47:02,159
your slide please

2536
01:47:02,159 --> 01:47:08,320
yes sure

2537
01:47:08,320 --> 01:47:10,480
so i think at this point i think uh we

2538
01:47:10,480 --> 01:47:12,320
could we can take questions if anyone

2539
01:47:12,320 --> 01:47:13,679
has any questions or comments and then

2540
01:47:13,679 --> 01:47:15,040
we can take it to the uh

2541
01:47:15,040 --> 01:47:18,719
mailing list any any kind of questions

2542
01:47:18,719 --> 01:47:20,239
or comments on the uh

2543
01:47:20,239 --> 01:47:23,760
problem statement or the solution

2544
01:47:23,760 --> 01:47:25,440
i i think we're going to defer those uh

2545
01:47:25,440 --> 01:47:27,760
to mailing list or to chat

2546
01:47:27,760 --> 01:47:30,719
okay all right thank you thanks for the

2547
01:47:30,719 --> 01:47:33,199
presentation

2548
01:47:34,000 --> 01:47:36,000
i'm in the process of locating the next

2549
01:47:36,000 --> 01:47:37,119
presentation for our

2550
01:47:37,119 --> 01:47:39,519
authors

2551
01:47:43,119 --> 01:47:46,400
please add yourself to the speaking

2552
01:47:48,840 --> 01:47:50,000
queue

2553
01:47:50,000 --> 01:47:54,159
and it should be sadesh swadesh

2554
01:47:54,159 --> 01:47:57,920
are you ready to present instead of dj

2555
01:47:57,920 --> 01:48:01,040
yeah hi uh i will present yes

2556
01:48:01,040 --> 01:48:04,080
we can hear you please go ahead

2557
01:48:04,080 --> 01:48:07,119
yeah hi so this is a

2558
01:48:07,119 --> 01:48:09,119
this is about bgp colorway routing

2559
01:48:09,119 --> 01:48:10,480
problem statement

2560
01:48:10,480 --> 01:48:13,199
and these are the uh authors and the

2561
01:48:13,199 --> 01:48:14,880
co-authors that we are working

2562
01:48:14,880 --> 01:48:17,679
for this problem document can go to the

2563
01:48:17,679 --> 01:48:20,239
next slide

2564
01:48:20,480 --> 01:48:22,880
so bgp colorway routing is about

2565
01:48:22,880 --> 01:48:24,320
providing an

2566
01:48:24,320 --> 01:48:26,400
end to end intent aware path in the

2567
01:48:26,400 --> 01:48:28,639
multi-domain service provider network

2568
01:48:28,639 --> 01:48:30,560
and by intent what we mean is like low

2569
01:48:30,560 --> 01:48:33,119
latency or to avoid certain uh

2570
01:48:33,119 --> 01:48:36,400
link or even the

2571
01:48:36,400 --> 01:48:38,159
even avoiding certain domains that's a

2572
01:48:38,159 --> 01:48:40,080
what want to create an end to intent

2573
01:48:40,080 --> 01:48:41,440
aware parts

2574
01:48:41,440 --> 01:48:44,000
next slide

2575
01:48:45,280 --> 01:48:46,960
so there's a reminder for deployed

2576
01:48:46,960 --> 01:48:48,639
solution we know today there's a

2577
01:48:48,639 --> 01:48:51,920
srt based solution in which the which is

2578
01:48:51,920 --> 01:48:53,840
defined in the spring already with iit

2579
01:48:53,840 --> 01:48:55,360
of spring segment routing policy

2580
01:48:55,360 --> 01:48:56,159
document

2581
01:48:56,159 --> 01:48:59,440
it's mature widely deployed and it has

2582
01:48:59,440 --> 01:49:00,000
multiple

2583
01:49:00,000 --> 01:49:03,119
implementations and it it has a notion

2584
01:49:03,119 --> 01:49:04,960
of color to represent the intent

2585
01:49:04,960 --> 01:49:07,760
and in the bgp car solution we will just

2586
01:49:07,760 --> 01:49:09,520
extend that notion of color to represent

2587
01:49:09,520 --> 01:49:10,159
the intent

2588
01:49:10,159 --> 01:49:13,040
mentioned in the initial slide next

2589
01:49:13,040 --> 01:49:15,020
slide

2590
01:49:15,020 --> 01:49:17,199
[Music]

2591
01:49:17,199 --> 01:49:19,360
so the way it works today is existing

2592
01:49:19,360 --> 01:49:20,560
solution would be

2593
01:49:20,560 --> 01:49:22,639
we as we are showing in this picture we

2594
01:49:22,639 --> 01:49:24,480
have a e3 which is

2595
01:49:24,480 --> 01:49:26,480
which is advertising the vpn prefixes

2596
01:49:26,480 --> 01:49:28,320
through service rr to e1

2597
01:49:28,320 --> 01:49:31,520
and e1 and e3 are your ps and now

2598
01:49:31,520 --> 01:49:33,920
what is important is a vpn service that

2599
01:49:33,920 --> 01:49:35,119
means in this v

2600
01:49:35,119 --> 01:49:38,320
v is requesting a colored a color

2601
01:49:38,320 --> 01:49:40,080
service it wants to go over an intent

2602
01:49:40,080 --> 01:49:40,880
aware path

2603
01:49:40,880 --> 01:49:42,880
so the vpn service is colored with the

2604
01:49:42,880 --> 01:49:44,239
color blue and

2605
01:49:44,239 --> 01:49:46,719
it is done through today through a bgp

2606
01:49:46,719 --> 01:49:49,199
color extended community

2607
01:49:49,199 --> 01:49:51,040
to say i want to use the color aware

2608
01:49:51,040 --> 01:49:54,159
path next slide

2609
01:49:55,040 --> 01:49:56,719
so what happens is today we have a

2610
01:49:56,719 --> 01:49:58,480
automated steering for this purpose

2611
01:49:58,480 --> 01:50:00,719
so when e1 receives that color vpn

2612
01:50:00,719 --> 01:50:02,639
service from e3

2613
01:50:02,639 --> 01:50:05,440
even request srpc to compute the inter

2614
01:50:05,440 --> 01:50:07,760
domain path since e1 is not aware of how

2615
01:50:07,760 --> 01:50:09,760
reach e3 in the multi-domain network

2616
01:50:09,760 --> 01:50:14,320
srpc sends the sr policy back to e1

2617
01:50:14,320 --> 01:50:16,400
that that suffice that intent that could

2618
01:50:16,400 --> 01:50:18,480
be a low latency path or a wide certain

2619
01:50:18,480 --> 01:50:19,040
links

2620
01:50:19,040 --> 01:50:21,840
so this e3 comma c that means to reach

2621
01:50:21,840 --> 01:50:23,840
e3 a transport

2622
01:50:23,840 --> 01:50:26,800
with a certain intent is is is an intent

2623
01:50:26,800 --> 01:50:28,719
based path to towards e3 and that is

2624
01:50:28,719 --> 01:50:32,159
already provided today by srt mechanisms

2625
01:50:32,159 --> 01:50:34,330
next slide

2626
01:50:34,330 --> 01:50:36,080
[Music]

2627
01:50:36,080 --> 01:50:38,239
so automated steering evolution now we

2628
01:50:38,239 --> 01:50:40,080
want to provide same facility whatever

2629
01:50:40,080 --> 01:50:40,960
we are done

2630
01:50:40,960 --> 01:50:44,000
in the state of our today by via srpc

2631
01:50:44,000 --> 01:50:45,920
now we want to do through bgp

2632
01:50:45,920 --> 01:50:47,520
so what we want to do is we want to

2633
01:50:47,520 --> 01:50:49,280
advertise the reachability to

2634
01:50:49,280 --> 01:50:52,400
e3 with a certain intent and

2635
01:50:52,400 --> 01:50:55,199
that intent that intent provides the

2636
01:50:55,199 --> 01:50:56,080
using the

2637
01:50:56,080 --> 01:50:59,040
inter domain intents like flex algo sr

2638
01:50:59,040 --> 01:51:01,280
policy so we want to advertise the e3

2639
01:51:01,280 --> 01:51:07,840
reachability via

2640
01:51:16,640 --> 01:51:18,320
[Music]

2641
01:51:18,320 --> 01:51:20,239
so the focus of problem statement draft

2642
01:51:20,239 --> 01:51:22,400
is we wanted a clarity on the deployment

2643
01:51:22,400 --> 01:51:24,639
requirements we want to come

2644
01:51:24,639 --> 01:51:26,560
the solution should be compatible with

2645
01:51:26,560 --> 01:51:28,639
the existing sr policy

2646
01:51:28,639 --> 01:51:30,880
it just it just it should coexist with

2647
01:51:30,880 --> 01:51:32,880
the sr policy and the bgp color where

2648
01:51:32,880 --> 01:51:33,520
routing

2649
01:51:33,520 --> 01:51:35,679
should work coexist they should be

2650
01:51:35,679 --> 01:51:37,199
interworking off

2651
01:51:37,199 --> 01:51:38,800
between these two solutions because this

2652
01:51:38,800 --> 01:51:40,800
is a well deployed solutions to provide

2653
01:51:40,800 --> 01:51:42,159
intent aware path in

2654
01:51:42,159 --> 01:51:45,119
multi-domain network and we want to keep

2655
01:51:45,119 --> 01:51:46,320
the constrain uh

2656
01:51:46,320 --> 01:51:48,480
concept of color it's it's a it's a

2657
01:51:48,480 --> 01:51:49,679
built-in color which

2658
01:51:49,679 --> 01:51:51,599
which provides the automated steering

2659
01:51:51,599 --> 01:51:53,040
today

2660
01:51:53,040 --> 01:51:54,560
and the scope is not just about

2661
01:51:54,560 --> 01:51:56,239
transport the scope is about

2662
01:51:56,239 --> 01:51:58,400
also intent aware vpn layer because we

2663
01:51:58,400 --> 01:51:59,280
know a ce

2664
01:51:59,280 --> 01:52:01,920
may also want to go through a transport

2665
01:52:01,920 --> 01:52:02,480
network

2666
01:52:02,480 --> 01:52:05,040
which provides that intent not just a pe

2667
01:52:05,040 --> 01:52:07,440
and so we want to integrate with the nfv

2668
01:52:07,440 --> 01:52:10,320
so this solution like sr srt solution

2669
01:52:10,320 --> 01:52:12,159
already integrates with the nfv we can

2670
01:52:12,159 --> 01:52:13,520
put the segments of nv

2671
01:52:13,520 --> 01:52:15,679
this solution should try to provide that

2672
01:52:15,679 --> 01:52:18,560
intent away parts also

2673
01:52:18,560 --> 01:52:21,520
so the clarity on the scale requirement

2674
01:52:21,520 --> 01:52:23,119
and constraint what we are talking about

2675
01:52:23,119 --> 01:52:25,280
here is now advertising the transport

2676
01:52:25,280 --> 01:52:28,320
uh addresses the pe loopbacks with the

2677
01:52:28,320 --> 01:52:29,760
intent so the

2678
01:52:29,760 --> 01:52:31,679
today we just advertise the best effort

2679
01:52:31,679 --> 01:52:33,119
if you're trying to advertise the intent

2680
01:52:33,119 --> 01:52:34,159
with bgp

2681
01:52:34,159 --> 01:52:36,400
our scale will increase today there are

2682
01:52:36,400 --> 01:52:39,119
networks with 300 kps and if you have a

2683
01:52:39,119 --> 01:52:40,560
even five intents you're talking about

2684
01:52:40,560 --> 01:52:42,320
1.5 million prefixes so

2685
01:52:42,320 --> 01:52:44,320
it's more than the label space that is

2686
01:52:44,320 --> 01:52:45,920
available and also we have to think

2687
01:52:45,920 --> 01:52:46,560
about

2688
01:52:46,560 --> 01:52:48,400
the bgp control plane filtering for

2689
01:52:48,400 --> 01:52:50,320
transport for the convergence and for

2690
01:52:50,320 --> 01:52:52,960
other reasons as i mentioned in this and

2691
01:52:52,960 --> 01:52:53,440
the

2692
01:52:53,440 --> 01:52:55,520
problem statement document clearly lists

2693
01:52:55,520 --> 01:52:56,960
all these things and

2694
01:52:56,960 --> 01:52:59,199
it lists the intent use cases as well as

2695
01:52:59,199 --> 01:53:02,960
it lists these protocol requirements

2696
01:53:03,760 --> 01:53:04,590
next slide

2697
01:53:04,590 --> 01:53:07,360
[Music]

2698
01:53:07,360 --> 01:53:09,599
so we have for this problem statement we

2699
01:53:09,599 --> 01:53:10,960
have been collaborating with lead

2700
01:53:10,960 --> 01:53:11,760
operators

2701
01:53:11,760 --> 01:53:14,320
the vendors on the analysis and we would

2702
01:53:14,320 --> 01:53:16,000
like to acknowledge the contribution to

2703
01:53:16,000 --> 01:53:17,840
this stuff by many such

2704
01:53:17,840 --> 01:53:20,080
operators and the vendors and we

2705
01:53:20,080 --> 01:53:21,360
recognize the

2706
01:53:21,360 --> 01:53:23,599
prior work in this area which is

2707
01:53:23,599 --> 01:53:25,840
seamless sr and the class full transport

2708
01:53:25,840 --> 01:53:27,520
that is already presented

2709
01:53:27,520 --> 01:53:29,920
we have ongoing collaboration with the

2710
01:53:29,920 --> 01:53:32,159
seamless sr co-authors for the consensus

2711
01:53:32,159 --> 01:53:33,920
for the problem statement

2712
01:53:33,920 --> 01:53:35,840
we have reached out to them on in

2713
01:53:35,840 --> 01:53:37,199
november and december

2714
01:53:37,199 --> 01:53:40,000
we recognized the prior publication or

2715
01:53:40,000 --> 01:53:42,239
use cases

2716
01:53:42,239 --> 01:53:44,239
we we published a problem statement with

2717
01:53:44,239 --> 01:53:46,000
the analytical approach as i mentioned

2718
01:53:46,000 --> 01:53:47,760
or the reasons behind it the state of

2719
01:53:47,760 --> 01:53:49,840
art the notion of color which is central

2720
01:53:49,840 --> 01:53:52,800
to provide the intent and the looking at

2721
01:53:52,800 --> 01:53:55,199
the how the analytical analysis of all

2722
01:53:55,199 --> 01:53:56,960
the intents that's what the document is

2723
01:53:56,960 --> 01:53:58,000
all about

2724
01:53:58,000 --> 01:54:00,480
and we have a joint discussion going on

2725
01:54:00,480 --> 01:54:01,920
with the co-authors right now

2726
01:54:01,920 --> 01:54:03,280
and we are looking for eventual

2727
01:54:03,280 --> 01:54:05,280
partnership with the new set of

2728
01:54:05,280 --> 01:54:09,599
documents in this area

2729
01:54:09,599 --> 01:54:12,080
next slide

2730
01:54:12,880 --> 01:54:15,280
next step would be requesting the review

2731
01:54:15,280 --> 01:54:16,080
by the working

2732
01:54:16,080 --> 01:54:23,840
group of this problem statement document

2733
01:54:32,719 --> 01:54:36,000
questions from your first presentation

2734
01:54:36,000 --> 01:54:39,119
slidesh or is that the pause or are you

2735
01:54:39,119 --> 01:54:40,960
having connectivity problems no i am

2736
01:54:40,960 --> 01:54:42,239
fine so uh

2737
01:54:42,239 --> 01:54:43,599
i will move to the next slide which is

2738
01:54:43,599 --> 01:54:45,840
about the bgp actual bgp solution the

2739
01:54:45,840 --> 01:54:47,360
first one was a problem statement

2740
01:54:47,360 --> 01:54:50,560
so this is a bgp colorway routing

2741
01:54:50,560 --> 01:54:53,920
solution document we have published

2742
01:54:53,920 --> 01:54:57,280
so i this list the co-authors

2743
01:54:57,280 --> 01:54:58,470
you can go to the next slide

2744
01:54:58,470 --> 01:55:01,649
[Music]

2745
01:55:01,920 --> 01:55:04,239
yeah so since we just discussed in the

2746
01:55:04,239 --> 01:55:06,159
problem statement we have to advertise

2747
01:55:06,159 --> 01:55:06,800
the

2748
01:55:06,800 --> 01:55:09,199
reachability with the multiple intents

2749
01:55:09,199 --> 01:55:11,199
now to reach a certain pe

2750
01:55:11,199 --> 01:55:13,119
or the end point we need to advertise

2751
01:55:13,119 --> 01:55:14,320
the same prefix

2752
01:55:14,320 --> 01:55:16,560
with the different intents so we need a

2753
01:55:16,560 --> 01:55:18,560
ability so that means we need a new safi

2754
01:55:18,560 --> 01:55:19,520
in which we can

2755
01:55:19,520 --> 01:55:21,520
we need ability to signal the multiple

2756
01:55:21,520 --> 01:55:23,599
instances of the same prefixes

2757
01:55:23,599 --> 01:55:25,360
for each of the colors for each of the

2758
01:55:25,360 --> 01:55:26,960
intents the requirement

2759
01:55:26,960 --> 01:55:28,800
and the solution draft discusses the

2760
01:55:28,800 --> 01:55:30,960
following aspect the desired data model

2761
01:55:30,960 --> 01:55:32,560
because we know it's a new safi and we

2762
01:55:32,560 --> 01:55:33,920
have to advertise the

2763
01:55:33,920 --> 01:55:36,880
multiple instance of the prefix and what

2764
01:55:36,880 --> 01:55:38,159
we support is the multiple

2765
01:55:38,159 --> 01:55:40,560
encapsulations we have to support

2766
01:55:40,560 --> 01:55:43,119
mpls srv6 ip different types of

2767
01:55:43,119 --> 01:55:44,320
encapsulation

2768
01:55:44,320 --> 01:55:46,880
their signaling as well as validation so

2769
01:55:46,880 --> 01:55:48,560
we should also validate that the

2770
01:55:48,560 --> 01:55:50,000
encapsulation is programming the

2771
01:55:50,000 --> 01:55:52,080
hardware we have to also go

2772
01:55:52,080 --> 01:55:53,760
we also go into the aspect of route

2773
01:55:53,760 --> 01:55:55,679
resolution how to resolve these

2774
01:55:55,679 --> 01:55:58,000
bgp car routes over the intradomain

2775
01:55:58,000 --> 01:55:59,119
tunnels which

2776
01:55:59,119 --> 01:56:01,280
which would be which and the intent can

2777
01:56:01,280 --> 01:56:03,360
be provided by the sr policy

2778
01:56:03,360 --> 01:56:06,560
or through the igpfa or through even

2779
01:56:06,560 --> 01:56:09,280
it can be also supported by rsvpt or sr

2780
01:56:09,280 --> 01:56:10,159
mpls or

2781
01:56:10,159 --> 01:56:13,440
ldp for the fallback cases and also the

2782
01:56:13,440 --> 01:56:15,440
steering mechanism as we discussed the

2783
01:56:15,440 --> 01:56:17,040
steering the notion of color is central

2784
01:56:17,040 --> 01:56:18,800
for the steering of steering of the vpn

2785
01:56:18,800 --> 01:56:19,599
services

2786
01:56:19,599 --> 01:56:23,679
into these bgp color aware routes

2787
01:56:23,679 --> 01:56:26,960
also uh it has to be as we provide the

2788
01:56:26,960 --> 01:56:28,000
scale characterization

2789
01:56:28,000 --> 01:56:29,840
because we know for best effort we

2790
01:56:29,840 --> 01:56:31,599
advertise only a single bg prefix but

2791
01:56:31,599 --> 01:56:33,119
now with the intent we are

2792
01:56:33,119 --> 01:56:34,960
we are multiplying that number its

2793
01:56:34,960 --> 01:56:36,560
number of p's into number of

2794
01:56:36,560 --> 01:56:38,320
intents you provide in a network so the

2795
01:56:38,320 --> 01:56:40,159
scale characterization is very important

2796
01:56:40,159 --> 01:56:40,960
to see

2797
01:56:40,960 --> 01:56:43,440
this transport network can scale to the

2798
01:56:43,440 --> 01:56:44,639
requirement

2799
01:56:44,639 --> 01:56:46,480
and that brings the next next aspects

2800
01:56:46,480 --> 01:56:47,920
route filtering route filtering is to

2801
01:56:47,920 --> 01:56:48,880
make sure

2802
01:56:48,880 --> 01:56:51,599
uh i will go in that just to we filter

2803
01:56:51,599 --> 01:56:52,480
what we

2804
01:56:52,480 --> 01:56:55,040
what you are interested in the next

2805
01:56:55,040 --> 01:56:56,740
slide

2806
01:56:56,740 --> 01:56:59,119
[Music]

2807
01:56:59,119 --> 01:57:00,880
so the data model is we have to

2808
01:57:00,880 --> 01:57:03,119
advertise the pe ipv for loopback

2809
01:57:03,119 --> 01:57:05,280
or ipvc's loopback so that's the is in

2810
01:57:05,280 --> 01:57:06,320
the global space

2811
01:57:06,320 --> 01:57:08,320
that's the prefix in the data model

2812
01:57:08,320 --> 01:57:10,639
color as we discussed distinguishes

2813
01:57:10,639 --> 01:57:12,480
different instances of the prefix

2814
01:57:12,480 --> 01:57:15,840
and also it indicates the service or

2815
01:57:15,840 --> 01:57:18,000
intent associated with the route what

2816
01:57:18,000 --> 01:57:19,760
it's whether it's a low latency

2817
01:57:19,760 --> 01:57:22,320
prefix or it's a it's providing a

2818
01:57:22,320 --> 01:57:23,920
avoiding certain links or avoiding

2819
01:57:23,920 --> 01:57:25,119
certain domain so

2820
01:57:25,119 --> 01:57:27,360
that's the intent that color provides

2821
01:57:27,360 --> 01:57:29,840
the next stop bgp next stop is as usual

2822
01:57:29,840 --> 01:57:31,520
it provides the reachability

2823
01:57:31,520 --> 01:57:33,840
verification in the control plane

2824
01:57:33,840 --> 01:57:35,520
the encapsulation we have to support

2825
01:57:35,520 --> 01:57:37,440
different technologies that is

2826
01:57:37,440 --> 01:57:41,440
existing mpls srvcc or the ip

2827
01:57:41,440 --> 01:57:42,880
we should also support the multiple

2828
01:57:42,880 --> 01:57:44,639
encapsulations and reason is for

2829
01:57:44,639 --> 01:57:46,960
migrations and coexistence cases in the

2830
01:57:46,960 --> 01:57:48,719
same network

2831
01:57:48,719 --> 01:57:51,599
aigp again ai would be as we know it

2832
01:57:51,599 --> 01:57:52,960
accumulates the igp

2833
01:57:52,960 --> 01:57:54,880
as it as the bgp prefix standardized

2834
01:57:54,880 --> 01:57:56,080
it's the same

2835
01:57:56,080 --> 01:57:57,599
in this case we will try to accumulate

2836
01:57:57,599 --> 01:57:59,280
the intent specific metric

2837
01:57:59,280 --> 01:58:02,960
metric as the bgp route is advertised

2838
01:58:02,960 --> 01:58:06,880
by hub

2839
01:58:06,880 --> 01:58:09,840
next slide please

2840
01:58:11,119 --> 01:58:13,679
so the proposal for the car is the nlri

2841
01:58:13,679 --> 01:58:14,320
key is

2842
01:58:14,320 --> 01:58:17,760
e is our end point the pe loopback

2843
01:58:17,760 --> 01:58:19,599
address most likely in this case so it's

2844
01:58:19,599 --> 01:58:22,480
an ipv for an ip6 endpoint prefix

2845
01:58:22,480 --> 01:58:23,599
and we have to understand this is

2846
01:58:23,599 --> 01:58:26,400
network wide unique so e provides that

2847
01:58:26,400 --> 01:58:28,880
uniqueness and color is the ways to

2848
01:58:28,880 --> 01:58:30,320
advertise it and also the

2849
01:58:30,320 --> 01:58:34,639
intent as we discussed so color

2850
01:58:34,639 --> 01:58:36,480
color is consistent across the devices

2851
01:58:36,480 --> 01:58:38,000
within the color domain so that means

2852
01:58:38,000 --> 01:58:38,639
the color

2853
01:58:38,639 --> 01:58:40,960
mapping is in a domain is consistent all

2854
01:58:40,960 --> 01:58:42,639
the device understand a specific color

2855
01:58:42,639 --> 01:58:44,560
for specific intent

2856
01:58:44,560 --> 01:58:46,800
color is als it's also same conceptually

2857
01:58:46,800 --> 01:58:48,639
from the bgp color extended community

2858
01:58:48,639 --> 01:58:49,599
that is used

2859
01:58:49,599 --> 01:58:52,719
for that is used for steering purposes

2860
01:58:52,719 --> 01:58:54,400
when attached to the vpn routes it tells

2861
01:58:54,400 --> 01:58:55,840
to use this bgp

2862
01:58:55,840 --> 01:58:58,639
color of a route

2863
01:58:59,679 --> 01:59:02,880
and next is a prefix is unique is unique

2864
01:59:02,880 --> 01:59:04,560
in the inter domain transport network

2865
01:59:04,560 --> 01:59:05,599
example p

2866
01:59:05,599 --> 01:59:07,760
makes e comma c unique even if c is

2867
01:59:07,760 --> 01:59:09,599
local to a color domain so that means if

2868
01:59:09,599 --> 01:59:11,040
the color mapping changes

2869
01:59:11,040 --> 01:59:12,880
and if you advertise this nlri to a

2870
01:59:12,880 --> 01:59:14,880
different color to a different domain

2871
01:59:14,880 --> 01:59:15,599
where there's a

2872
01:59:15,599 --> 01:59:17,760
color mapping is not consistent then

2873
01:59:17,760 --> 01:59:18,960
also e comma c

2874
01:59:18,960 --> 01:59:22,639
makes it the nlr unique

2875
01:59:22,719 --> 01:59:24,040
next slide please

2876
01:59:24,040 --> 01:59:26,480
[Music]

2877
01:59:26,480 --> 01:59:29,280
so there's also a local color mapping

2878
01:59:29,280 --> 01:59:30,719
extended community introduced in a

2879
01:59:30,719 --> 01:59:31,119
trough

2880
01:59:31,119 --> 01:59:33,599
it's optional it's used only if we go

2881
01:59:33,599 --> 01:59:35,440
across the color domain boundary so if

2882
01:59:35,440 --> 01:59:35,760
you

2883
01:59:35,760 --> 01:59:37,280
if there is not a consistent mapping of

2884
01:59:37,280 --> 01:59:39,440
the color we will

2885
01:59:39,440 --> 01:59:41,840
we will attach this extended community

2886
01:59:41,840 --> 01:59:43,199
and that would be

2887
01:59:43,199 --> 01:59:46,000
a map locally in the domain into the

2888
01:59:46,000 --> 01:59:46,800
domain

2889
01:59:46,800 --> 01:59:50,000
understanding of that color so the

2890
01:59:50,000 --> 01:59:53,199
nlri does not get is not re written

2891
01:59:53,199 --> 01:59:55,599
at such inconsistent mapping of the

2892
01:59:55,599 --> 01:59:59,280
colors it's preserved end to end

2893
01:59:59,280 --> 02:00:01,130
next slide please

2894
02:00:01,130 --> 02:00:03,840
[Music]

2895
02:00:03,840 --> 02:00:05,520
so encapsulation it's very important

2896
02:00:05,520 --> 02:00:07,440
that since it's a new safety we are

2897
02:00:07,440 --> 02:00:08,800
adding we have to make sure we don't

2898
02:00:08,800 --> 02:00:10,239
take the

2899
02:00:10,239 --> 02:00:12,960
baggage of the pass so we don't want the

2900
02:00:12,960 --> 02:00:13,440
to be

2901
02:00:13,440 --> 02:00:15,040
our new safety be constrained by the

2902
02:00:15,040 --> 02:00:17,520
24-bit mpls that we have in today

2903
02:00:17,520 --> 02:00:19,840
uh in our different types whenever we

2904
02:00:19,840 --> 02:00:20,880
encaps the label

2905
02:00:20,880 --> 02:00:23,040
so it's an opportunity to have a more

2906
02:00:23,040 --> 02:00:24,080
cleaner design

2907
02:00:24,080 --> 02:00:26,320
also we have to make sure the uh the

2908
02:00:26,320 --> 02:00:28,320
nlri carries the variable part of the

2909
02:00:28,320 --> 02:00:29,760
encapsulation for the packing

2910
02:00:29,760 --> 02:00:32,320
efficiencies

2911
02:00:32,320 --> 02:00:35,440
and that's what is already in the in our

2912
02:00:35,440 --> 02:00:36,159
proposal

2913
02:00:36,159 --> 02:00:38,080
and also validate the data plane for the

2914
02:00:38,080 --> 02:00:39,760
encapsulation availability before we use

2915
02:00:39,760 --> 02:00:41,840
before we make a bgp best partition we

2916
02:00:41,840 --> 02:00:44,159
also may make sure that the since we

2917
02:00:44,159 --> 02:00:45,920
will like to support multiple

2918
02:00:45,920 --> 02:00:47,360
encapsulation you have to make sure

2919
02:00:47,360 --> 02:00:49,440
those encapsulations are programmed in

2920
02:00:49,440 --> 02:00:50,800
the forwarding before you make those

2921
02:00:50,800 --> 02:00:52,480
decisions

2922
02:00:52,480 --> 02:00:55,839
next slide

2923
02:00:56,400 --> 02:00:58,800
so scale considerations uh as discussed

2924
02:00:58,800 --> 02:00:59,760
uh

2925
02:00:59,760 --> 02:01:02,159
we are talking about bgp transport and

2926
02:01:02,159 --> 02:01:02,960
that transport

2927
02:01:02,960 --> 02:01:05,360
is now advertising the intent also which

2928
02:01:05,360 --> 02:01:06,239
can

2929
02:01:06,239 --> 02:01:08,159
it could be four to five intense or more

2930
02:01:08,159 --> 02:01:10,000
than that in a network so there's a

2931
02:01:10,000 --> 02:01:12,000
uh we have to make sure that our current

2932
02:01:12,000 --> 02:01:13,920
mpls uh limitation of

2933
02:01:13,920 --> 02:01:17,440
uh one million labels uh we can still

2934
02:01:17,440 --> 02:01:18,800
make the things work and for that we

2935
02:01:18,800 --> 02:01:19,520
need a higher

2936
02:01:19,520 --> 02:01:21,679
design and this what we'll make sure is

2937
02:01:21,679 --> 02:01:22,880
our core routers

2938
02:01:22,880 --> 02:01:25,599
that means uh uh uh something which is

2939
02:01:25,599 --> 02:01:26,239
in our

2940
02:01:26,239 --> 02:01:29,679
core or core doesn't learn all the pep

2941
02:01:29,679 --> 02:01:31,199
addresses they only learn

2942
02:01:31,199 --> 02:01:34,320
uh the addresses uh for

2943
02:01:34,320 --> 02:01:36,719
from the for of the border routers and

2944
02:01:36,719 --> 02:01:38,320
but that becomes that brings the

2945
02:01:38,320 --> 02:01:41,440
uh recursion as well as the data blink

2946
02:01:41,440 --> 02:01:43,760
complexity at the ps and vr so

2947
02:01:43,760 --> 02:01:46,400
those are discussed in the document and

2948
02:01:46,400 --> 02:01:47,679
the most important aspect is the

2949
02:01:47,679 --> 02:01:50,480
filtering because of the scale

2950
02:01:50,480 --> 02:01:52,880
as p as the ps learn the service route

2951
02:01:52,880 --> 02:01:54,320
we should make sure that pe

2952
02:01:54,320 --> 02:01:57,040
only get the intent of a bgp car routes

2953
02:01:57,040 --> 02:01:58,800
for which it is interested it only

2954
02:01:58,800 --> 02:01:59,920
learns the end points

2955
02:01:59,920 --> 02:02:02,639
and its intents for which the for which

2956
02:02:02,639 --> 02:02:04,320
the service are talking to each other

2957
02:02:04,320 --> 02:02:06,320
so that brings the filtering mechanism

2958
02:02:06,320 --> 02:02:08,239
that is introduced in this document that

2959
02:02:08,239 --> 02:02:10,800
we make sure we only learn the ps uh for

2960
02:02:10,800 --> 02:02:11,840
which the

2961
02:02:11,840 --> 02:02:14,320
pe or even ingress beer be a border

2962
02:02:14,320 --> 02:02:16,159
route has an interest so that in the pr

2963
02:02:16,159 --> 02:02:18,080
also doesn't have to scale to the

2964
02:02:18,080 --> 02:02:21,360
label skill required it only learns

2965
02:02:21,360 --> 02:02:23,199
what is the piece which is behind that

2966
02:02:23,199 --> 02:02:27,360
ingress pa br is interested in

2967
02:02:27,840 --> 02:02:33,840
next slide

2968
02:02:35,599 --> 02:02:38,880
so next uh so we want a working group to

2969
02:02:38,880 --> 02:02:43,440
review this document thank you

2970
02:02:45,520 --> 02:02:49,280
it's over time uh thank you for your

2971
02:02:49,280 --> 02:02:50,719
time

2972
02:02:50,719 --> 02:02:54,400
uh the authors may take questions but

2973
02:02:54,400 --> 02:02:57,840
pretty much within two or three minutes

2974
02:02:57,840 --> 02:03:00,510
it's going to be cut off so maybe

2975
02:03:00,510 --> 02:03:01,920
[Music]

2976
02:03:01,920 --> 02:03:04,639
jeff shall we cut the queue and and not

2977
02:03:04,639 --> 02:03:08,239
run into the end of the hour

2978
02:03:09,280 --> 02:03:11,360
uh so my suggestion is the official

2979
02:03:11,360 --> 02:03:14,320
meetings over at top of our um

2980
02:03:14,320 --> 02:03:16,320
we have basically a few minutes until

2981
02:03:16,320 --> 02:03:18,000
the meet echo service simply terminates

2982
02:03:18,000 --> 02:03:19,280
the session without warning

2983
02:03:19,280 --> 02:03:20,800
so if somebody wants to be brave enough

2984
02:03:20,800 --> 02:03:22,480
to ask a question and the chance of

2985
02:03:22,480 --> 02:03:23,679
being cut off

2986
02:03:23,679 --> 02:03:25,280
i would say go for it please please go

2987
02:03:25,280 --> 02:03:27,119
ahead okay

2988
02:03:27,119 --> 02:03:30,639
i think linda's in the queue

2989
02:03:35,040 --> 02:03:38,480
i have a question about um different

2990
02:03:38,480 --> 02:03:41,840
distance instance over i thought we

2991
02:03:41,840 --> 02:03:43,840
already have raw distinguisher

2992
02:03:43,840 --> 02:03:46,400
to distinguish different uh prefix so

2993
02:03:46,400 --> 02:03:47,679
what does that

2994
02:03:47,679 --> 02:03:49,760
different instance mean here in your

2995
02:03:49,760 --> 02:03:51,360
slides so today

2996
02:03:51,360 --> 02:03:53,119
today in the global in the transport

2997
02:03:53,119 --> 02:03:55,199
network there is no route distinguisher

2998
02:03:55,199 --> 02:03:57,360
this is something it's a new office

2999
02:03:57,360 --> 02:03:58,560
coffee we are introducing

3000
02:03:58,560 --> 02:04:00,719
oh we are still a distinguisher we are

3001
02:04:00,719 --> 02:04:01,920
thinking would be a color

3002
02:04:01,920 --> 02:04:03,840
as we know the notion of the color is

3003
02:04:03,840 --> 02:04:05,840
the is to carry the intent

3004
02:04:05,840 --> 02:04:08,719
from the from the past by srt mechanism

3005
02:04:08,719 --> 02:04:10,159
so we want to use the same notion of

3006
02:04:10,159 --> 02:04:10,639
color

3007
02:04:10,639 --> 02:04:13,040
to advertise the different ways to reach

3008
02:04:13,040 --> 02:04:14,880
a particular prefix in this case

3009
02:04:14,880 --> 02:04:17,840
a particular pe or a low back of it e so

3010
02:04:17,840 --> 02:04:19,440
color is the one we want to use as a

3011
02:04:19,440 --> 02:04:20,239
distinguisher

3012
02:04:20,239 --> 02:04:24,639
and e is the one which makes it globally

3013
02:04:24,639 --> 02:04:27,040
instead of route distribution what

3014
02:04:27,040 --> 02:04:28,560
you're saying

3015
02:04:28,560 --> 02:04:30,800
the colors to represent different ways

3016
02:04:30,800 --> 02:04:32,159
to reach the

3017
02:04:32,159 --> 02:04:35,599
same destination right same prefix

3018
02:04:35,599 --> 02:04:37,520
yes it's not like you have different

3019
02:04:37,520 --> 02:04:39,760
prefix like raw distinguisher you have

3020
02:04:39,760 --> 02:04:41,920
different prefix belonging to different

3021
02:04:41,920 --> 02:04:43,679
yes it's not a different yeah that's not

3022
02:04:43,679 --> 02:04:48,079
it yeah it's the same prefix yes

3023
02:04:48,480 --> 02:04:50,960
so in a way it's almost like the te you

3024
02:04:50,960 --> 02:04:52,159
have one different path

3025
02:04:52,159 --> 02:04:54,400
like different prefix you want specific

3026
02:04:54,400 --> 02:04:57,040
part isn't that same as the srt

3027
02:04:57,040 --> 02:04:59,280
same thing yes exactly it's a state of

3028
02:04:59,280 --> 02:05:00,159
art that's what we

3029
02:05:00,159 --> 02:05:02,320
want to it's it's a notion that is used

3030
02:05:02,320 --> 02:05:03,840
in the srt

3031
02:05:03,840 --> 02:05:06,239
today and we want to carry exactly the

3032
02:05:06,239 --> 02:05:08,000
same when we do a distributed cannon

3033
02:05:08,000 --> 02:05:09,520
through bp

3034
02:05:09,520 --> 02:05:13,119
because that's exactly the same idea

3035
02:05:15,119 --> 02:05:21,839
okay thank you

3036
02:05:25,679 --> 02:05:27,920
anybody else braved enough they kind of

3037
02:05:27,920 --> 02:05:35,840
risked the card off

3038
02:05:36,090 --> 02:05:39,350
[Music]

3039
02:05:40,079 --> 02:05:43,440
not i believe we are done up there's uh

3040
02:05:43,440 --> 02:05:45,920
one coming in kylie right she had the

3041
02:05:45,920 --> 02:05:46,639
mic

3042
02:05:46,639 --> 02:05:48,320
yeah i was just expanding on linda's

3043
02:05:48,320 --> 02:05:50,400
question i think she's trying to ask if

3044
02:05:50,400 --> 02:05:52,400
it's the same ssrt why do we need a new

3045
02:05:52,400 --> 02:05:55,199
new fsrp

3046
02:05:55,520 --> 02:05:59,920
but srt is for today is to talk to srpc

3047
02:05:59,920 --> 02:06:02,079
this is a bgp way of advertising the

3048
02:06:02,079 --> 02:06:05,040
intents so in bgp way but we still want

3049
02:06:05,040 --> 02:06:06,960
to keep the construct of color so that

3050
02:06:06,960 --> 02:06:08,800
all the mechanisms we have developed in

3051
02:06:08,800 --> 02:06:10,560
the past for the interworking

3052
02:06:10,560 --> 02:06:11,760
compatibility

3053
02:06:11,760 --> 02:06:13,920
everything works so we still want to

3054
02:06:13,920 --> 02:06:17,040
keep the notion central srt

3055
02:06:17,040 --> 02:06:18,320
so basically if you understand it right

3056
02:06:18,320 --> 02:06:20,079
srt is not extendable enough so that you

3057
02:06:20,079 --> 02:06:23,360
can work between pgp speakers

3058
02:06:23,360 --> 02:06:25,360
can you repeat that uh kali i didn't

3059
02:06:25,360 --> 02:06:27,679
follow

3060
02:06:28,480 --> 02:06:31,040
so uh are you saying that srt is not

3061
02:06:31,040 --> 02:06:32,000
extendable enough

3062
02:06:32,000 --> 02:06:34,000
that it can be reused between pgp

3063
02:06:34,000 --> 02:06:36,000
speakers it's only between a

3064
02:06:36,000 --> 02:06:37,520
controller and a speaker and we need a

3065
02:06:37,520 --> 02:06:39,840
new family between a bgp speakers

3066
02:06:39,840 --> 02:06:43,360
yes so there is no mechanism for the

3067
02:06:43,360 --> 02:06:46,000
srts with a pc way not through bgp

3068
02:06:46,000 --> 02:06:47,920
there is a sr policy which can be

3069
02:06:47,920 --> 02:06:49,679
downloaded it's a it's a policy that

3070
02:06:49,679 --> 02:06:50,639
download the header

3071
02:06:50,639 --> 02:06:52,560
in this case we want to advertise

3072
02:06:52,560 --> 02:06:53,920
distributed way uh

3073
02:06:53,920 --> 02:06:56,800
uh up at endpoint address uh through the

3074
02:06:56,800 --> 02:06:58,480
hop by hop mechanisms so

3075
02:06:58,480 --> 02:07:01,360
there's no such mechanisms today and as

3076
02:07:01,360 --> 02:07:02,719
we are talking about this pro as we saw

3077
02:07:02,719 --> 02:07:03,840
the problem statement

3078
02:07:03,840 --> 02:07:06,079
and the solution for it we we just want

3079
02:07:06,079 --> 02:07:07,760
to use the semantics about

3080
02:07:07,760 --> 02:07:09,920
ed point and the color as it was used by

3081
02:07:09,920 --> 02:07:10,960
srt so that

3082
02:07:10,960 --> 02:07:13,199
no notion remains exactly same as we

3083
02:07:13,199 --> 02:07:14,800
already discussed it's about

3084
02:07:14,800 --> 02:07:17,840
going over particular intent aware path

3085
02:07:17,840 --> 02:07:20,320
which was which today which is well

3086
02:07:20,320 --> 02:07:22,000
deployed it's exactly we want our

3087
02:07:22,000 --> 02:07:22,560
services

3088
02:07:22,560 --> 02:07:25,360
that steered exactly same way it just

3089
02:07:25,360 --> 02:07:26,800
now it's another

3090
02:07:26,800 --> 02:07:28,320
solution is using bgp card and they

3091
02:07:28,320 --> 02:07:30,639
should interwork and

3092
02:07:30,639 --> 02:07:41,840
should work together

3093
02:07:43,920 --> 02:07:46,079
i think it's important to analyze this

3094
02:07:46,079 --> 02:07:47,119
space uh

3095
02:07:47,119 --> 02:07:50,239
in its totality uh and see

3096
02:07:50,239 --> 02:07:53,679
how we better best address

3097
02:07:53,679 --> 02:07:57,599
that solution to the problem i think

3098
02:07:57,599 --> 02:07:59,760
that would be my recommendation is that

3099
02:07:59,760 --> 02:08:01,440
we would

3100
02:08:01,440 --> 02:08:03,360
look at the different aspects on what we

3101
02:08:03,360 --> 02:08:04,480
want to achieve

3102
02:08:04,480 --> 02:08:07,840
and then see how we best solve it given

3103
02:08:07,840 --> 02:08:09,520
the capabilities that we already have

3104
02:08:09,520 --> 02:08:11,280
developed so i think it's important that

3105
02:08:11,280 --> 02:08:12,159
we

3106
02:08:12,159 --> 02:08:13,760
i think i what i understood is that

3107
02:08:13,760 --> 02:08:15,360
there is already a discussion between

3108
02:08:15,360 --> 02:08:16,560
the different i the

3109
02:08:16,560 --> 02:08:20,079
people from the different proposals

3110
02:08:20,079 --> 02:08:20,800
because

3111
02:08:20,800 --> 02:08:22,639
there are a bit of competing proposal

3112
02:08:22,639 --> 02:08:24,320
that we work together and try to find

3113
02:08:24,320 --> 02:08:26,159
out the common ground uh

3114
02:08:26,159 --> 02:08:29,839
going forward i think that's important

3115
02:08:30,800 --> 02:08:37,840
yes sure yeah

3116
02:08:41,280 --> 02:08:44,000
i see nobody else in the queue and we

3117
02:08:44,000 --> 02:08:44,560
are

3118
02:08:44,560 --> 02:08:47,760
eight minutes after the hour

3119
02:08:49,599 --> 02:08:52,719
then start tomorrow uh

3120
02:08:52,719 --> 02:08:56,639
we have a session on wednesday

3121
02:08:57,520 --> 02:09:00,480
so we'll see you all on wednesday the

3122
02:09:00,480 --> 02:09:01,199
session

3123
02:09:01,199 --> 02:09:04,639
is and i'm outside of

3124
02:09:04,639 --> 02:09:08,400
my place just a minute

3125
02:09:09,280 --> 02:09:12,880
well go ahead uh we'll see you tomorrow

3126
02:09:12,880 --> 02:09:14,719
i believe we're at the second session

3127
02:09:14,719 --> 02:09:19,840
tomorrow thank you

3128
02:09:23,119 --> 02:09:25,760
here do you have a list of the of when

3129
02:09:25,760 --> 02:09:26,480
we're

3130
02:09:26,480 --> 02:09:30,000
uh at time tomorrow

3131
02:09:30,000 --> 02:09:33,840
i'm just not pulling it up real quick

3132
02:09:38,639 --> 02:09:40,960
what time is it care that we're that

3133
02:09:40,960 --> 02:09:47,599
we're on tomorrow

3134
02:09:47,599 --> 02:09:51,360
i believe uh uh we

3135
02:09:51,360 --> 02:09:55,360
have the same uh

3136
02:09:55,360 --> 02:10:01,839
same time i believe soon actually

3137
02:10:05,360 --> 02:10:08,320
that is correct thank you very much all

3138
02:10:08,320 --> 02:10:08,880
have

3139
02:10:08,880 --> 02:10:10,639
uh thank you for the excellent

3140
02:10:10,639 --> 02:10:13,280
discussions we'll see you tomorrow at 14

3141
02:10:13,280 --> 02:10:15,840
30.

3142
02:10:22,800 --> 02:10:25,920
i hope you have a good rest of the day

3143
02:10:25,920 --> 02:10:30,639
virtually uh on frog time

3144
02:10:35,199 --> 02:10:38,239
and so i i think the test instance for

3145
02:10:38,239 --> 02:10:40,320
meat echo might still be accessible if

3146
02:10:40,320 --> 02:10:40,800
you

3147
02:10:40,800 --> 02:10:42,400
look through your archives so we can

3148
02:10:42,400 --> 02:10:44,560
maybe see what it will take to get you

3149
02:10:44,560 --> 02:10:45,440
to full screen

3150
02:10:45,440 --> 02:10:49,759
display on top of your desktop

3151
02:10:55,040 --> 02:10:59,679
uh is is it just

3152
02:10:59,760 --> 02:11:03,679
at the general where do you go for

3153
02:11:03,679 --> 02:11:07,840
the test uh sequence

3154
02:11:07,840 --> 02:11:10,000
i i would have to check my uh mailing

3155
02:11:10,000 --> 02:11:11,199
list archives but

3156
02:11:11,199 --> 02:11:13,040
i think the mail was sent to the working

3157
02:11:13,040 --> 02:11:14,960
group chairs at some point uh prior to

3158
02:11:14,960 --> 02:11:15,920
the session

3159
02:11:15,920 --> 02:11:18,800
i'll find it then i've got my meet echo

3160
02:11:18,800 --> 02:11:21,040
let me save the mail list and then i'll

3161
02:11:21,040 --> 02:11:22,320
go

3162
02:11:22,320 --> 02:11:25,280
uh pop over there thanks they haven't

3163
02:11:25,280 --> 02:11:26,560
kicked this off yet so if they want to

3164
02:11:26,560 --> 02:11:27,679
if you want to just give it a try they

3165
02:11:27,679 --> 02:11:28,560
could maybe

3166
02:11:28,560 --> 02:11:31,360
give it a try let me see if i can share

3167
02:11:31,360 --> 02:11:32,400
my

3168
02:11:32,400 --> 02:11:36,079
screen i've got

3169
02:11:36,079 --> 02:11:39,760
a presentation let's see if we can

3170
02:11:39,760 --> 02:11:43,360
get to it i was

3171
02:11:46,239 --> 02:11:49,280
share screen yes i really want to share

3172
02:11:49,280 --> 02:11:53,119
my screen

3173
02:11:53,119 --> 02:11:55,119
i had the option to also share an

3174
02:11:55,119 --> 02:11:57,040
application rather than screen but i was

3175
02:11:57,040 --> 02:11:58,960
screen sharing

3176
02:11:58,960 --> 02:12:02,320
i have i tried the application sharing

3177
02:12:02,320 --> 02:12:06,320
and that didn't work okay

3178
02:12:06,320 --> 02:12:07,840
what do you think do you see the

3179
02:12:07,840 --> 02:12:09,840
application uh hold on we'll grab the

3180
02:12:09,840 --> 02:12:11,040
pdf

3181
02:12:11,040 --> 02:12:14,880
okay so now i'm actually seeing a word

3182
02:12:15,840 --> 02:12:18,560
the word was fine but the pdf didn't let

3183
02:12:18,560 --> 02:12:20,000
me see if i can stop

3184
02:12:20,000 --> 02:12:25,520
sharing and try sharing again with the

3185
02:12:25,520 --> 02:12:29,840
uh what are you using to display the pdf

3186
02:12:29,840 --> 02:12:33,199
i'm using uh acrobat

3187
02:12:33,199 --> 02:12:36,880
uh adobe acrobat pc which is why i

3188
02:12:36,880 --> 02:12:40,400
tried uh i was downloading that last

3189
02:12:40,400 --> 02:12:42,639
night

3190
02:12:42,639 --> 02:12:46,159
jeff were usually a preview i was using

3191
02:12:46,159 --> 02:12:48,079
preview on the mac but i was also using

3192
02:12:48,079 --> 02:12:49,199
full screen

3193
02:12:49,199 --> 02:12:52,560
yep i how how is now

3194
02:12:52,560 --> 02:12:55,920
do you see it now no full screen

3195
02:12:55,920 --> 02:12:58,960
no it's not even loading

3196
02:12:58,960 --> 02:13:02,239
oh that's really good let's try

3197
02:13:02,239 --> 02:13:05,280
let's try application window

3198
02:13:05,280 --> 02:13:09,199
nope not loading my entire screen

3199
02:13:09,199 --> 02:13:12,239
now i get the sort of windows yep

3200
02:13:12,239 --> 02:13:16,960
okay but now this is the window inside

3201
02:13:16,960 --> 02:13:21,520
yeah okay um

3202
02:13:21,520 --> 02:13:24,000
but sue for the next session um either

3203
02:13:24,000 --> 02:13:24,800
jeff or

3204
02:13:24,800 --> 02:13:26,800
me or one of us can always share the

3205
02:13:26,800 --> 02:13:28,239
screen if you want

3206
02:13:28,239 --> 02:13:31,440
okay that's why i set up the slides

3207
02:13:31,440 --> 02:13:34,719
the way i did i've got to resend you

3208
02:13:34,719 --> 02:13:37,119
i've got to re-merge the slides and send

3209
02:13:37,119 --> 02:13:39,040
it to you

3210
02:13:39,040 --> 02:13:42,480
i'm gonna go try to talk to the medical

3211
02:13:42,480 --> 02:13:44,560
guys and figure out why

3212
02:13:44,560 --> 02:13:48,079
i tried last time i used nuance

3213
02:13:48,079 --> 02:13:52,639
uh uh pdf shower but that

3214
02:13:52,639 --> 02:13:55,199
i i thought the acrobat would be more

3215
02:13:55,199 --> 02:13:58,800
commonly used so

3216
02:13:58,800 --> 02:14:01,920
so i don't know what happened

3217
02:14:03,280 --> 02:14:05,440
sorry i was gonna say i got a bail

3218
02:14:05,440 --> 02:14:07,679
unfortunately for the lspr meeting which

3219
02:14:07,679 --> 02:14:08,880
is next

3220
02:14:08,880 --> 02:14:12,000
yep talk to you later if you would plan

3221
02:14:12,000 --> 02:14:12,880
to share

3222
02:14:12,880 --> 02:14:15,520
your slides or jeff did it work well

3223
02:14:15,520 --> 02:14:18,560
sharing the slides for you

3224
02:14:18,560 --> 02:14:20,639
i had no problems sharing the slides i

3225
02:14:20,639 --> 02:14:21,920
have two displays

3226
02:14:21,920 --> 02:14:23,840
i was running one display with the

3227
02:14:23,840 --> 02:14:26,079
slideshare i was running the second uh

3228
02:14:26,079 --> 02:14:28,400
display right at the meet echo console

3229
02:14:28,400 --> 02:14:30,239
so i was able to see and manage the mic

3230
02:14:30,239 --> 02:14:31,440
queue

3231
02:14:31,440 --> 02:14:34,639
okay so that sounds good yeah jeff

3232
02:14:34,639 --> 02:14:36,880
if you want i can do it tomorrow or if

3233
02:14:36,880 --> 02:14:38,560
you want to do it again that's fine as

3234
02:14:38,560 --> 02:14:39,679
well you let me know

3235
02:14:39,679 --> 02:14:42,719
and i'm happy having you do it so why

3236
02:14:42,719 --> 02:14:44,000
don't we plan on you doing it tomorrow

3237
02:14:44,000 --> 02:14:44,320
okay

3238
02:14:44,320 --> 02:14:47,520
unless so we can figure it out okay uh

3239
02:14:47,520 --> 02:14:49,599
we'll plan on that i'll see i'll send

3240
02:14:49,599 --> 02:14:51,520
you out a new set of sites i'll be over

3241
02:14:51,520 --> 02:14:53,520
in lsr in just a moment

3242
02:14:53,520 --> 02:14:58,800
as i'm helping bye-bye see ya

3243
02:15:00,199 --> 02:15:03,199
later

