1
00:00:14,639 --> 00:00:16,880
all right according to the clock it's

2
00:00:16,880 --> 00:00:18,000
time

3
00:00:18,000 --> 00:00:21,119
so let's get started welcome to

4
00:00:21,119 --> 00:00:23,760
the gem map virtual meeting in prague

5
00:00:23,760 --> 00:00:24,800
except not

6
00:00:24,800 --> 00:00:28,160
and with random sleep

7
00:00:28,480 --> 00:00:30,800
as usual we we cover right at the start

8
00:00:30,800 --> 00:00:32,399
that we are covered under this note well

9
00:00:32,399 --> 00:00:34,079
we often just kind of skip through this

10
00:00:34,079 --> 00:00:36,800
because most of us are very used to it

11
00:00:36,800 --> 00:00:38,879
um it's easy if you search iatf

12
00:00:38,879 --> 00:00:40,320
noteworld to find a more readable

13
00:00:40,320 --> 00:00:41,360
version of this and

14
00:00:41,360 --> 00:00:43,520
what's on the screen here but mostly

15
00:00:43,520 --> 00:00:46,559
it's if you're aware of any patents then

16
00:00:46,559 --> 00:00:48,719
then you need to mention disclose them

17
00:00:48,719 --> 00:00:50,719
if you participate in discussion

18
00:00:50,719 --> 00:00:53,520
um these recordings may be made public

19
00:00:53,520 --> 00:00:54,800
and behave yourself

20
00:00:54,800 --> 00:00:58,480
be a good non-harassy

21
00:00:58,480 --> 00:01:01,600
code of conduct the following person

22
00:01:01,600 --> 00:01:03,920
this is the rough agenda that i put put

23
00:01:03,920 --> 00:01:05,280
together um

24
00:01:05,280 --> 00:01:06,720
i probably should put a disclaimer on

25
00:01:06,720 --> 00:01:08,240
these agendas when i put them together

26
00:01:08,240 --> 00:01:10,159
that we often don't spend exactly the

27
00:01:10,159 --> 00:01:12,000
time that's mentioned for each document

28
00:01:12,000 --> 00:01:13,760
we'll spend longer on some shorter on

29
00:01:13,760 --> 00:01:15,920
others so don't assume that you can

30
00:01:15,920 --> 00:01:17,600
show up exactly 70 minutes into the

31
00:01:17,600 --> 00:01:19,119
meeting and you'll be at exactly the

32
00:01:19,119 --> 00:01:20,159
thing that we

33
00:01:20,159 --> 00:01:22,240
say is going to be 70 minutes in but

34
00:01:22,240 --> 00:01:24,159
we'll try and stick to this order

35
00:01:24,159 --> 00:01:25,920
before we get started does anyone have

36
00:01:25,920 --> 00:01:28,080
anything you want to change on this

37
00:01:28,080 --> 00:01:30,880
any anything to add remove the whole

38
00:01:30,880 --> 00:01:33,600
agenda bash

39
00:01:36,560 --> 00:01:39,759
not seeing anything awesome um i guess

40
00:01:39,759 --> 00:01:41,200
let's get straight into i've divided it

41
00:01:41,200 --> 00:01:43,520
roughly up into three sections the

42
00:01:43,520 --> 00:01:45,840
calendars and related things calendars

43
00:01:45,840 --> 00:01:48,320
tasks and sharing all come under that

44
00:01:48,320 --> 00:01:50,640
no necessary need to stay in a

45
00:01:50,640 --> 00:01:52,079
particular order but this is what we

46
00:01:52,079 --> 00:01:52,880
have

47
00:01:52,880 --> 00:01:55,360
um then js contact and all the stuff

48
00:01:55,360 --> 00:01:56,399
related to that

49
00:01:56,399 --> 00:01:57,920
there's a couple of different drafts in

50
00:01:57,920 --> 00:01:59,920
there but i've just mentioned just one

51
00:01:59,920 --> 00:02:00,560
thing

52
00:02:00,560 --> 00:02:02,960
um and then blob is there with sieve

53
00:02:02,960 --> 00:02:03,759
because it's

54
00:02:03,759 --> 00:02:06,479
mostly set up for that but will also be

55
00:02:06,479 --> 00:02:08,080
used for other things and

56
00:02:08,080 --> 00:02:09,280
any other business i don't know if we'll

57
00:02:09,280 --> 00:02:11,680
use the full two hours um but let's get

58
00:02:11,680 --> 00:02:13,040
into it and see

59
00:02:13,040 --> 00:02:17,040
so first thing on the topics is the gmap

60
00:02:17,040 --> 00:02:20,400
calendars and these are the slides that

61
00:02:20,400 --> 00:02:22,160
i have

62
00:02:22,160 --> 00:02:24,879
go for it now

63
00:02:28,000 --> 00:02:31,760
hi uh yes so

64
00:02:31,760 --> 00:02:33,330
i think

65
00:02:33,330 --> 00:02:35,599
[Music]

66
00:02:35,599 --> 00:02:38,640
as as japan said would be gender well uh

67
00:02:38,640 --> 00:02:40,959
time stuff's not being quite right but j

68
00:02:40,959 --> 00:02:42,000
but for calendars

69
00:02:42,000 --> 00:02:46,959
uh so i've

70
00:02:47,200 --> 00:02:51,440
i think uh we had a discussion last time

71
00:02:51,440 --> 00:02:54,560
and um so there's been quite a few

72
00:02:54,560 --> 00:02:56,800
changes in the draft based on

73
00:02:56,800 --> 00:02:59,200
that uh so i thought i'd just give a

74
00:02:59,200 --> 00:03:00,400
quick summary of

75
00:03:00,400 --> 00:03:03,599
what those changes are um

76
00:03:03,599 --> 00:03:05,680
see if there's any things people discuss

77
00:03:05,680 --> 00:03:06,800
about that and then

78
00:03:06,800 --> 00:03:08,480
uh i think the main thing to talk about

79
00:03:08,480 --> 00:03:10,319
is really how the tasks

80
00:03:10,319 --> 00:03:14,239
relate to it um and um

81
00:03:14,239 --> 00:03:17,360
uh yeah so we'll get to that so if we go

82
00:03:17,360 --> 00:03:20,159
into the next slide

83
00:03:24,159 --> 00:03:26,239
uh so the main changes in the version

84
00:03:26,239 --> 00:03:27,920
five draft which is the new one since

85
00:03:27,920 --> 00:03:31,440
last meeting um is

86
00:03:31,440 --> 00:03:35,120
whether you act as yourself or as the

87
00:03:35,120 --> 00:03:37,599
person owns the calendar is is now the

88
00:03:37,599 --> 00:03:38,720
same for all calendars

89
00:03:38,720 --> 00:03:41,760
within a particular account um which

90
00:03:41,760 --> 00:03:42,959
just simplifies

91
00:03:42,959 --> 00:03:46,000
some things uh and

92
00:03:46,000 --> 00:03:50,239
the the uh set of identities of the the

93
00:03:50,239 --> 00:03:51,280
to determine

94
00:03:51,280 --> 00:03:54,720
who you you are um

95
00:03:54,720 --> 00:03:57,200
comes it is a proper data type rather

96
00:03:57,200 --> 00:03:58,080
than

97
00:03:58,080 --> 00:04:00,560
uh just being a random property on stuff

98
00:04:00,560 --> 00:04:01,360
so that

99
00:04:01,360 --> 00:04:05,200
they can just simplify things um

100
00:04:05,200 --> 00:04:08,560
and uh an event may belong to multiple

101
00:04:08,560 --> 00:04:10,000
calendars within an account

102
00:04:10,000 --> 00:04:11,599
although this is up up to the server the

103
00:04:11,599 --> 00:04:14,159
server can say uh as with bail that

104
00:04:14,159 --> 00:04:16,478
i only supported being in one if it was

105
00:04:16,478 --> 00:04:17,358
but

106
00:04:17,358 --> 00:04:20,639
um yes this is one of

107
00:04:20,639 --> 00:04:22,320
this is one of those ones we've talked

108
00:04:22,320 --> 00:04:24,400
about quite a bit um

109
00:04:24,400 --> 00:04:27,199
last time and it's kind of tricky

110
00:04:27,199 --> 00:04:28,960
because there are many systems that

111
00:04:28,960 --> 00:04:30,320
it's out there at the moment that do

112
00:04:30,320 --> 00:04:31,600
have it more than one and it does

113
00:04:31,600 --> 00:04:32,639
increase complexity

114
00:04:32,639 --> 00:04:35,040
but if we put it in there it's more

115
00:04:35,040 --> 00:04:36,320
consistent

116
00:04:36,320 --> 00:04:39,280
with the male spec and gives us kind of

117
00:04:39,280 --> 00:04:40,479
um

118
00:04:40,479 --> 00:04:42,000
the protocol the ability to support

119
00:04:42,000 --> 00:04:43,520
multiple even if we don't

120
00:04:43,520 --> 00:04:47,120
need it all the time because um

121
00:04:47,120 --> 00:04:48,960
the server can say i only i actually

122
00:04:48,960 --> 00:04:51,040
wanted to be in one at a time

123
00:04:51,040 --> 00:04:53,360
um and then the biggest thing is

124
00:04:53,360 --> 00:04:54,960
splitting sharing out to a separate spec

125
00:04:54,960 --> 00:04:57,759
because i realized that this was um

126
00:04:57,759 --> 00:04:59,360
actually quite generic and something

127
00:04:59,360 --> 00:05:00,880
that uh

128
00:05:00,880 --> 00:05:04,560
um we would want to use for various

129
00:05:04,560 --> 00:05:06,639
alpha for mail and for various other

130
00:05:06,639 --> 00:05:07,759
things as well

131
00:05:07,759 --> 00:05:12,240
um so the

132
00:05:12,400 --> 00:05:15,759
sharing spec defines um principles which

133
00:05:15,759 --> 00:05:16,320
is

134
00:05:16,320 --> 00:05:20,080
all the entities in um a shared system

135
00:05:20,080 --> 00:05:25,039
like individuals or groups or resources

136
00:05:25,039 --> 00:05:28,800
and kind of get sets up the framework

137
00:05:28,800 --> 00:05:30,479
for how you would then

138
00:05:30,479 --> 00:05:33,919
assign permissions to uh one of those

139
00:05:33,919 --> 00:05:38,080
entities to give permission

140
00:05:38,080 --> 00:05:41,840
for uh for for shared data access

141
00:05:41,840 --> 00:05:44,880
and also um the model where

142
00:05:44,880 --> 00:05:47,280
you have a permission system say you can

143
00:05:47,280 --> 00:05:48,240
access it

144
00:05:48,240 --> 00:05:50,720
and then the person that's had been

145
00:05:50,720 --> 00:05:51,520
shared with

146
00:05:51,520 --> 00:05:54,000
then gets to subscribe to that to say

147
00:05:54,000 --> 00:05:55,759
yes i actually want

148
00:05:55,759 --> 00:06:00,000
um to to access this one um

149
00:06:00,000 --> 00:06:01,840
uh which is basically what we were doing

150
00:06:01,840 --> 00:06:03,120
before but just yeah

151
00:06:03,120 --> 00:06:05,039
making it a separate spec so it's easily

152
00:06:05,039 --> 00:06:06,720
reusable

153
00:06:06,720 --> 00:06:09,120
as we'll see with the task stuff because

154
00:06:09,120 --> 00:06:10,639
the task will want to use all of that as

155
00:06:10,639 --> 00:06:11,039
well as

156
00:06:11,039 --> 00:06:14,960
calendars so if we

157
00:06:14,960 --> 00:06:18,800
uh just move on to the next slide

158
00:06:18,800 --> 00:06:20,800
if anyone has any questions or comments

159
00:06:20,800 --> 00:06:22,000
do jump in

160
00:06:22,000 --> 00:06:25,360
um so the next steps still big thing we

161
00:06:25,360 --> 00:06:26,560
need to save this last time is

162
00:06:26,560 --> 00:06:28,160
implementation experience but

163
00:06:28,160 --> 00:06:31,280
uh this time we are

164
00:06:31,280 --> 00:06:34,000
we're getting close to um actually

165
00:06:34,000 --> 00:06:34,479
having

166
00:06:34,479 --> 00:06:37,120
implemented all of this uh stuff i think

167
00:06:37,120 --> 00:06:37,840
and

168
00:06:37,840 --> 00:06:39,520
at least and having one set of

169
00:06:39,520 --> 00:06:41,360
experience to talk about uh by the next

170
00:06:41,360 --> 00:06:42,639
meeting i would hope

171
00:06:42,639 --> 00:06:45,919
we'll have some so we can um

172
00:06:45,919 --> 00:06:47,680
share any experiences there and

173
00:06:47,680 --> 00:06:49,360
obviously any find any problems that we

174
00:06:49,360 --> 00:06:50,560
run into and i hope

175
00:06:50,560 --> 00:06:53,759
we might see some others as well

176
00:06:54,080 --> 00:06:58,240
and then yes i think

177
00:06:58,800 --> 00:07:02,000
tasks is probably the best thing

178
00:07:02,000 --> 00:07:04,960
to discuss at this meeting uh we've had

179
00:07:04,960 --> 00:07:06,319
um

180
00:07:06,319 --> 00:07:09,520
uh uh

181
00:07:09,520 --> 00:07:11,199
people coming along saying that they're

182
00:07:11,199 --> 00:07:12,560
interested in that as well

183
00:07:12,560 --> 00:07:16,479
and um spec has been contributed and so

184
00:07:16,479 --> 00:07:17,599
i think that

185
00:07:17,599 --> 00:07:18,960
the biggest discussion is whether we

186
00:07:18,960 --> 00:07:20,319
should be merging that with calendar

187
00:07:20,319 --> 00:07:20,880
spec

188
00:07:20,880 --> 00:07:23,840
like kaladev does or keeping it separate

189
00:07:23,840 --> 00:07:25,759
um

190
00:07:25,759 --> 00:07:28,960
uh and how much

191
00:07:28,960 --> 00:07:32,160
there's that there's you know what

192
00:07:32,160 --> 00:07:33,199
what's cleaner what's

193
00:07:33,199 --> 00:07:37,759
easier um from that

194
00:07:40,479 --> 00:07:44,240
so i think uh john i don't know how you

195
00:07:44,240 --> 00:07:45,120
want to do this like

196
00:07:45,120 --> 00:07:47,280
yeah unless anyone has any particular

197
00:07:47,280 --> 00:07:48,960
calendar various things i think

198
00:07:48,960 --> 00:07:50,639
uh talking about tasks will be the best

199
00:07:50,639 --> 00:07:52,800
thing to do here is there a separate

200
00:07:52,800 --> 00:07:54,560
presentation or

201
00:07:54,560 --> 00:07:57,840
sure um we don't have slides for it but

202
00:07:57,840 --> 00:07:58,240
um

203
00:07:58,240 --> 00:08:02,560
we have people to talk so yeah

204
00:08:02,560 --> 00:08:06,319
let's go ahead with that question um

205
00:08:06,319 --> 00:08:10,080
so regarding the calendar events in

206
00:08:10,080 --> 00:08:10,960
multiple

207
00:08:10,960 --> 00:08:13,599
calendars um i was just wondering if we

208
00:08:13,599 --> 00:08:15,520
have already figured out the semantics

209
00:08:15,520 --> 00:08:16,080
of

210
00:08:16,080 --> 00:08:18,479
deleting or changing an event what it

211
00:08:18,479 --> 00:08:19,680
means for

212
00:08:19,680 --> 00:08:22,560
events in that are in multiple calendars

213
00:08:22,560 --> 00:08:22,879
so

214
00:08:22,879 --> 00:08:25,360
if you i guess changing an event would

215
00:08:25,360 --> 00:08:26,319
change it

216
00:08:26,319 --> 00:08:28,560
in all calendars where this event is

217
00:08:28,560 --> 00:08:29,840
located in

218
00:08:29,840 --> 00:08:33,120
um that's right yes you would delete it

219
00:08:33,120 --> 00:08:36,240
just from this calendar

220
00:08:36,559 --> 00:08:40,240
no i mean it's it would work exactly the

221
00:08:40,240 --> 00:08:41,120
same as mail

222
00:08:41,120 --> 00:08:43,039
so where you have multiple mailboxes

223
00:08:43,039 --> 00:08:44,240
signed so

224
00:08:44,240 --> 00:08:47,360
um yeah

225
00:08:47,360 --> 00:08:49,680
yeah okay so if you destroy the event

226
00:08:49,680 --> 00:08:50,880
you're destroying it everywhere

227
00:08:50,880 --> 00:08:52,800
um but you can update it to change which

228
00:08:52,800 --> 00:08:54,320
calendar it's in um

229
00:08:54,320 --> 00:08:56,480
adding or removing them um and there's

230
00:08:56,480 --> 00:08:58,080
only one and it's the same in all of

231
00:08:58,080 --> 00:09:00,480
them obviously it's one copy of the

232
00:09:00,480 --> 00:09:02,959
event they're more like labels okay yeah

233
00:09:02,959 --> 00:09:05,200
right makes absolute sense thank you

234
00:09:05,200 --> 00:09:07,760
yeah so so neil that would be true also

235
00:09:07,760 --> 00:09:08,640
true for a

236
00:09:08,640 --> 00:09:11,360
schedule a vendor task if if you receive

237
00:09:11,360 --> 00:09:11,920
an

238
00:09:11,920 --> 00:09:14,720
update from an attendee you basically

239
00:09:14,720 --> 00:09:16,000
make sure that you update all the

240
00:09:16,000 --> 00:09:16,880
various instances

241
00:09:16,880 --> 00:09:20,000
if you have multiple instances

242
00:09:20,080 --> 00:09:23,519
uh yes if

243
00:09:23,519 --> 00:09:27,519
if it's um yes with it within a single

244
00:09:27,519 --> 00:09:28,160
account

245
00:09:28,160 --> 00:09:31,360
so within particularly yes okay so it's

246
00:09:31,360 --> 00:09:32,160
going to behave

247
00:09:32,160 --> 00:09:37,839
similar to kel duff's

248
00:09:38,800 --> 00:09:41,200
it's in the door sorry i think you can

249
00:09:41,200 --> 00:09:44,160
just go cut off slightly

250
00:09:44,160 --> 00:09:45,760
similar kaldap i assume is what he was

251
00:09:45,760 --> 00:09:51,839
saying okay

252
00:09:51,839 --> 00:09:53,600
yeah my audio did get cut off there yeah

253
00:09:53,600 --> 00:09:54,959
so it's it's

254
00:09:54,959 --> 00:09:57,040
basically we're limiting the problem

255
00:09:57,040 --> 00:09:59,120
that kel dev scheduling had with

256
00:09:59,120 --> 00:10:01,360
things in multiple calendars as long as

257
00:10:01,360 --> 00:10:02,320
you find one of the

258
00:10:02,320 --> 00:10:04,480
instances you go ahead and update all of

259
00:10:04,480 --> 00:10:05,839
them with whatever

260
00:10:05,839 --> 00:10:06,959
changes have come back from the

261
00:10:06,959 --> 00:10:09,920
organizer of the attending

262
00:10:10,079 --> 00:10:12,880
yes i guess that's the one restriction

263
00:10:12,880 --> 00:10:14,800
yeah one restriction it adds i

264
00:10:14,800 --> 00:10:16,399
i don't know if i think this is audio

265
00:10:16,399 --> 00:10:18,160
section you can't have

266
00:10:18,160 --> 00:10:21,360
yes the same event but different in

267
00:10:21,360 --> 00:10:22,480
different calendars within the same

268
00:10:22,480 --> 00:10:24,240
account you can have it different within

269
00:10:24,240 --> 00:10:25,120
different accounts like

270
00:10:25,120 --> 00:10:27,279
people might have different versions of

271
00:10:27,279 --> 00:10:28,720
it or different permissions to view

272
00:10:28,720 --> 00:10:29,760
different bits with but

273
00:10:29,760 --> 00:10:31,440
within a single account which like you

274
00:10:31,440 --> 00:10:32,959
know one user's set of calendars

275
00:10:32,959 --> 00:10:36,719
there's a consistent view of that

276
00:10:37,760 --> 00:10:47,279
fair enough

277
00:10:47,279 --> 00:11:01,839
all right shall we move on to tasks then

278
00:11:04,959 --> 00:11:07,920
all right should just take over braun or

279
00:11:07,920 --> 00:11:09,040
yeah go for it

280
00:11:09,040 --> 00:11:12,560
all right um yeah so hello everybody um

281
00:11:12,560 --> 00:11:15,760
so um as neil already introduced

282
00:11:15,760 --> 00:11:19,600
um we came upon gemma calendars

283
00:11:19,600 --> 00:11:23,120
and found basically that something

284
00:11:23,120 --> 00:11:24,800
something similar would also be fine for

285
00:11:24,800 --> 00:11:27,040
tasks particularly due to the fact that

286
00:11:27,040 --> 00:11:28,880
related standards like

287
00:11:28,880 --> 00:11:31,839
calderf um actually already deal also

288
00:11:31,839 --> 00:11:33,760
with both of them and many tools

289
00:11:33,760 --> 00:11:36,560
um actually also do it handle in in a

290
00:11:36,560 --> 00:11:37,600
dual way

291
00:11:37,600 --> 00:11:40,560
so it's kind of natural in that sense to

292
00:11:40,560 --> 00:11:42,160
think about also having some

293
00:11:42,160 --> 00:11:45,519
gmap representation for tasks

294
00:11:45,519 --> 00:11:47,680
so what we did basically is we we

295
00:11:47,680 --> 00:11:49,360
drafted a very

296
00:11:49,360 --> 00:11:51,839
initial um or created a very initial

297
00:11:51,839 --> 00:11:53,839
draft you see the url here

298
00:11:53,839 --> 00:11:57,040
for this jmap for tasks

299
00:11:57,040 --> 00:12:00,399
um there is certainly a lot of stuff

300
00:12:00,399 --> 00:12:01,200
still open

301
00:12:01,200 --> 00:12:03,920
um not everything even mentioned here so

302
00:12:03,920 --> 00:12:04,399
um

303
00:12:04,399 --> 00:12:08,320
in contrast to um jmf4 calendars this is

304
00:12:08,320 --> 00:12:10,320
like you see the zero zero version of

305
00:12:10,320 --> 00:12:11,200
the draft

306
00:12:11,200 --> 00:12:13,279
so don't expect too much about it

307
00:12:13,279 --> 00:12:14,320
already

308
00:12:14,320 --> 00:12:17,839
um but um obviously this is a nice

309
00:12:17,839 --> 00:12:20,399
way here to to kick it off um also a

310
00:12:20,399 --> 00:12:21,839
little bit

311
00:12:21,839 --> 00:12:23,680
there was a little bit discussion on it

312
00:12:23,680 --> 00:12:25,519
also already on the mailing list so one

313
00:12:25,519 --> 00:12:27,680
thing that was some weeks ago already is

314
00:12:27,680 --> 00:12:29,600
a point about capabilities

315
00:12:29,600 --> 00:12:32,880
um which um which i think yogurt

316
00:12:32,880 --> 00:12:34,399
initially raised who was the main author

317
00:12:34,399 --> 00:12:35,920
but cannot be with us here today

318
00:12:35,920 --> 00:12:37,360
unfortunately

319
00:12:37,360 --> 00:12:40,639
and um one thing here i think which

320
00:12:40,639 --> 00:12:42,639
which should be differentiated a little

321
00:12:42,639 --> 00:12:44,560
bit and i think that goes also in the

322
00:12:44,560 --> 00:12:46,560
direction like neil raised if it would

323
00:12:46,560 --> 00:12:47,440
be

324
00:12:47,440 --> 00:12:50,639
an option to merge it into the um jmap

325
00:12:50,639 --> 00:12:54,000
calendar draft or keep it separate and

326
00:12:54,000 --> 00:12:56,240
what what our observation is a little

327
00:12:56,240 --> 00:12:58,000
bit even though both things

328
00:12:58,000 --> 00:13:00,320
are tightly related as i said also in

329
00:13:00,320 --> 00:13:01,600
calderf

330
00:13:01,600 --> 00:13:03,519
i think from an interoperability

331
00:13:03,519 --> 00:13:04,720
perspective

332
00:13:04,720 --> 00:13:06,320
there is a little bit of a difference so

333
00:13:06,320 --> 00:13:08,160
calendars i think

334
00:13:08,160 --> 00:13:10,880
by nature quite interoperable right now

335
00:13:10,880 --> 00:13:12,480
you know many calendar tools can work

336
00:13:12,480 --> 00:13:13,519
together

337
00:13:13,519 --> 00:13:15,120
um and also the data models for

338
00:13:15,120 --> 00:13:16,639
calendars are

339
00:13:16,639 --> 00:13:20,399
in a way quite you know

340
00:13:20,399 --> 00:13:22,720
similar between different tools but for

341
00:13:22,720 --> 00:13:24,320
for tasks we actually see more

342
00:13:24,320 --> 00:13:26,160
heterogeneity here

343
00:13:26,160 --> 00:13:27,680
if you for instance consider something

344
00:13:27,680 --> 00:13:29,920
like google task it's super limited i

345
00:13:29,920 --> 00:13:32,000
think it's just three or four properties

346
00:13:32,000 --> 00:13:35,920
you cannot do that much there and

347
00:13:35,920 --> 00:13:38,160
the more i would say extensive models

348
00:13:38,160 --> 00:13:40,720
like you also have in in calder

349
00:13:40,720 --> 00:13:43,440
or icalendar they do have for instance

350
00:13:43,440 --> 00:13:43,760
like

351
00:13:43,760 --> 00:13:47,440
attendees or assignees in that sense so

352
00:13:47,440 --> 00:13:49,519
people involved you have reminders these

353
00:13:49,519 --> 00:13:51,120
kind of things so many concepts which

354
00:13:51,120 --> 00:13:53,279
you also know from calendars

355
00:13:53,279 --> 00:13:56,079
um and obviously for jmap it makes sense

356
00:13:56,079 --> 00:13:58,719
in a way to

357
00:13:59,040 --> 00:14:01,760
keep them in i think because obviously

358
00:14:01,760 --> 00:14:03,600
tools will support them but we don't

359
00:14:03,600 --> 00:14:05,519
think every tool will do so

360
00:14:05,519 --> 00:14:07,519
and it's it's maybe also a question of

361
00:14:07,519 --> 00:14:09,279
philosophy here a little bit because we

362
00:14:09,279 --> 00:14:11,360
we see also jmap as an option

363
00:14:11,360 --> 00:14:13,600
for having some more interoperability

364
00:14:13,600 --> 00:14:15,519
and data portability between different

365
00:14:15,519 --> 00:14:17,440
kinds of tools

366
00:14:17,440 --> 00:14:19,360
and so it would be actually nice to have

367
00:14:19,360 --> 00:14:20,800
some kind of a mechanism

368
00:14:20,800 --> 00:14:23,600
in which tools that rather follow let's

369
00:14:23,600 --> 00:14:24,959
say

370
00:14:24,959 --> 00:14:28,320
slim approach to tasks have

371
00:14:28,320 --> 00:14:30,399
been being possible or able to support

372
00:14:30,399 --> 00:14:31,600
the standard

373
00:14:31,600 --> 00:14:33,920
but also tools which do support more

374
00:14:33,920 --> 00:14:35,680
advanced features like reminders

375
00:14:35,680 --> 00:14:38,480
and i think for that um something like

376
00:14:38,480 --> 00:14:40,880
more fine-grained capabilities

377
00:14:40,880 --> 00:14:43,120
would certainly make sense um i mean i

378
00:14:43,120 --> 00:14:44,480
see the point i think neither was it

379
00:14:44,480 --> 00:14:46,240
that raised it on the mailing list that

380
00:14:46,240 --> 00:14:47,760
obviously it also makes things

381
00:14:47,760 --> 00:14:50,959
more difficult for some um implementers

382
00:14:50,959 --> 00:14:51,920
of the standards

383
00:14:51,920 --> 00:14:55,680
and i think that's one important

384
00:14:55,680 --> 00:14:57,760
design decision or trade-off to discuss

385
00:14:57,760 --> 00:14:59,680
here like you know where's the

386
00:14:59,680 --> 00:15:01,920
sweet spot or what is what is like the

387
00:15:01,920 --> 00:15:03,920
um aspect we want to

388
00:15:03,920 --> 00:15:07,839
um put more focus on um

389
00:15:07,839 --> 00:15:10,320
yeah so i don't know if i should first

390
00:15:10,320 --> 00:15:12,240
skip through the points or if we want to

391
00:15:12,240 --> 00:15:14,800
uh if there's some feedback directly on

392
00:15:14,800 --> 00:15:18,639
that or some some opinion i don't know

393
00:15:19,279 --> 00:15:22,079
um otherwise what do you want to do bro

394
00:15:22,079 --> 00:15:23,519
yeah like this yeah

395
00:15:23,519 --> 00:15:24,959
feel free to just discuss i think we

396
00:15:24,959 --> 00:15:27,920
don't we don't need to yeah

397
00:15:27,920 --> 00:15:30,320
yeah it does those are a good something

398
00:15:30,320 --> 00:15:31,360
as

399
00:15:31,360 --> 00:15:34,399
sorry is it hands to you that's right

400
00:15:34,399 --> 00:15:38,240
yeah sorry um i think

401
00:15:38,240 --> 00:15:40,240
you you want to find that right balance

402
00:15:40,240 --> 00:15:42,000
you want you know

403
00:15:42,000 --> 00:15:44,480
enough capabilities to um support

404
00:15:44,480 --> 00:15:46,240
different use cases but not so many that

405
00:15:46,240 --> 00:15:47,680
becomes impossible to write a client

406
00:15:47,680 --> 00:15:49,120
because you just have a

407
00:15:49,120 --> 00:15:52,000
infinite combination of possible um

408
00:15:52,000 --> 00:15:53,279
server support to

409
00:15:53,279 --> 00:15:54,880
you know deal with uh which is a bit

410
00:15:54,880 --> 00:15:56,639
what we see with ibap with the different

411
00:15:56,639 --> 00:15:57,839
extensions and

412
00:15:57,839 --> 00:15:59,360
capabilities there and so people end up

413
00:15:59,360 --> 00:16:01,440
just using the very basic

414
00:16:01,440 --> 00:16:03,279
stuff that they can rely on everywhere

415
00:16:03,279 --> 00:16:04,480
um

416
00:16:04,480 --> 00:16:05,759
yeah and i agree this is more of an

417
00:16:05,759 --> 00:16:08,160
issue with with tasks and calendars

418
00:16:08,160 --> 00:16:09,839
probably um

419
00:16:09,839 --> 00:16:12,800
but i i think i think this probably is

420
00:16:12,800 --> 00:16:14,160
quite doable though as you say i think

421
00:16:14,160 --> 00:16:15,519
but you know there's some big ones that

422
00:16:15,519 --> 00:16:16,160
you can say

423
00:16:16,160 --> 00:16:18,720
you know can you assign people to a task

424
00:16:18,720 --> 00:16:19,600
that's yeah

425
00:16:19,600 --> 00:16:22,800
a pretty big one um and reminders and

426
00:16:22,800 --> 00:16:24,160
stuff so i i i think we could come up

427
00:16:24,160 --> 00:16:25,519
with set of capabilities

428
00:16:25,519 --> 00:16:28,160
um and and it doesn't really affect

429
00:16:28,160 --> 00:16:29,759
necessarily whether it's in a separate

430
00:16:29,759 --> 00:16:30,320
draft

431
00:16:30,320 --> 00:16:33,360
like it's a separate you know um spec to

432
00:16:33,360 --> 00:16:35,279
calendar smash because even if it was in

433
00:16:35,279 --> 00:16:36,560
the same spec it would definitely be

434
00:16:36,560 --> 00:16:37,040
behind

435
00:16:37,040 --> 00:16:39,360
a separate capability and that could

436
00:16:39,360 --> 00:16:40,160
have its own

437
00:16:40,160 --> 00:16:43,839
set of yeah um stuff like this uh

438
00:16:43,839 --> 00:16:47,680
separate to canada uh yeah

439
00:16:47,680 --> 00:16:49,680
but it's an important point because this

440
00:16:49,680 --> 00:16:50,720
is

441
00:16:50,720 --> 00:16:51,839
yeah one of the main things we're trying

442
00:16:51,839 --> 00:16:53,680
to work out here is where does task

443
00:16:53,680 --> 00:16:55,279
differ from calendars and how much does

444
00:16:55,279 --> 00:16:56,000
it differ

445
00:16:56,000 --> 00:16:59,839
i think and yeah

446
00:16:59,839 --> 00:17:02,800
this is one of those areas uh yeah from

447
00:17:02,800 --> 00:17:04,240
a practical standpoint

448
00:17:04,240 --> 00:17:06,079
what is the benefit of putting them both

449
00:17:06,079 --> 00:17:08,959
in the same document

450
00:17:10,400 --> 00:17:12,319
is there any it's just if there's a lot

451
00:17:12,319 --> 00:17:13,679
of copy-paste

452
00:17:13,679 --> 00:17:16,240
stuff i think really which there is at

453
00:17:16,240 --> 00:17:17,760
the moment but i think probably could be

454
00:17:17,760 --> 00:17:18,640
sorted more

455
00:17:18,640 --> 00:17:20,000
through editing without necessarily

456
00:17:20,000 --> 00:17:22,240
merging the documents um

457
00:17:22,240 --> 00:17:24,959
yeah uh like i i you know i definitely

458
00:17:24,959 --> 00:17:25,919
initially wanted them

459
00:17:25,919 --> 00:17:27,199
separate i kind of still think that

460
00:17:27,199 --> 00:17:29,440
would be cleaner um but

461
00:17:29,440 --> 00:17:32,400
i think we'll see a bit as we progress

462
00:17:32,400 --> 00:17:33,760
maybe one point for that i don't know

463
00:17:33,760 --> 00:17:34,559
what is your

464
00:17:34,559 --> 00:17:36,400
experience on this keeping it separate

465
00:17:36,400 --> 00:17:38,400
would also have some sort of benefit if

466
00:17:38,400 --> 00:17:39,760
if you would be a task

467
00:17:39,760 --> 00:17:42,080
only tool and you know you would like to

468
00:17:42,080 --> 00:17:43,200
adopt it

469
00:17:43,200 --> 00:17:45,760
you might be less scared by the overhead

470
00:17:45,760 --> 00:17:48,480
of absolutely

471
00:17:48,640 --> 00:17:50,640
yes i i i think that's a real thing that

472
00:17:50,640 --> 00:17:52,480
that's that's a good reason

473
00:17:52,480 --> 00:17:56,400
uh yeah okay

474
00:17:56,400 --> 00:17:57,600
all right same events if you're just

475
00:17:57,600 --> 00:17:59,360
doing calendaring it's like why is there

476
00:17:59,360 --> 00:18:01,840
task

477
00:18:02,640 --> 00:18:04,480
i mean in either way i think it's

478
00:18:04,480 --> 00:18:05,840
perfect because as you said i mean

479
00:18:05,840 --> 00:18:07,039
certainly there is some sort of an

480
00:18:07,039 --> 00:18:08,080
overlap and

481
00:18:08,080 --> 00:18:10,320
it's always not so nice to have uh you

482
00:18:10,320 --> 00:18:11,200
know to maintain

483
00:18:11,200 --> 00:18:14,320
reference and copy paste stuff so

484
00:18:14,320 --> 00:18:16,720
we might also see a little bit like how

485
00:18:16,720 --> 00:18:17,679
this evolves

486
00:18:17,679 --> 00:18:20,720
um in in uh one more version also i

487
00:18:20,720 --> 00:18:21,120
think

488
00:18:21,120 --> 00:18:22,880
one point for keeping it separate maybe

489
00:18:22,880 --> 00:18:25,440
is also the the current stage since

490
00:18:25,440 --> 00:18:27,840
um i think the jmf for calendars it's

491
00:18:27,840 --> 00:18:30,240
much more advanced already and this is

492
00:18:30,240 --> 00:18:32,799
in a way earlier even though might not

493
00:18:32,799 --> 00:18:33,280
be

494
00:18:33,280 --> 00:18:36,640
that complicated in the end but still um

495
00:18:36,640 --> 00:18:38,960
combining it in that way might uh you

496
00:18:38,960 --> 00:18:39,919
know

497
00:18:39,919 --> 00:18:41,840
make it slower for jme for calendars

498
00:18:41,840 --> 00:18:42,960
somehow also i don't know

499
00:18:42,960 --> 00:18:47,679
or complicated but yeah that's something

500
00:18:47,679 --> 00:18:50,160
um yeah okay and for the capabilities um

501
00:18:50,160 --> 00:18:51,039
i i would

502
00:18:51,039 --> 00:18:53,600
um yeah i would say as you said i think

503
00:18:53,600 --> 00:18:56,240
the things that come to my mind is maybe

504
00:18:56,240 --> 00:18:58,799
just three or four core things so like

505
00:18:58,799 --> 00:18:59,360
uh

506
00:18:59,360 --> 00:19:01,520
people are assignees attendees this kind

507
00:19:01,520 --> 00:19:02,799
of stuff um

508
00:19:02,799 --> 00:19:05,200
recurrences certainly so not many tools

509
00:19:05,200 --> 00:19:07,200
are supporting recurrences in tasks even

510
00:19:07,200 --> 00:19:09,679
though some do

511
00:19:09,679 --> 00:19:11,280
what else did i mention attachments

512
00:19:11,280 --> 00:19:13,039
certainly is one thing um

513
00:19:13,039 --> 00:19:15,440
which not every tool supports for tasks

514
00:19:15,440 --> 00:19:16,240
and i think

515
00:19:16,240 --> 00:19:19,120
that i think i had one more but i think

516
00:19:19,120 --> 00:19:20,640
i mentioned even one more already i

517
00:19:20,640 --> 00:19:21,600
think that reminds me

518
00:19:21,600 --> 00:19:24,640
of yeah reminders exactly notifications

519
00:19:24,640 --> 00:19:25,440
yeah

520
00:19:25,440 --> 00:19:27,760
um so so these are the core things which

521
00:19:27,760 --> 00:19:29,760
i'm aware of which you know

522
00:19:29,760 --> 00:19:32,640
are not the standard feature set in in a

523
00:19:32,640 --> 00:19:34,480
task system whereas they are in

524
00:19:34,480 --> 00:19:37,280
um in a calendar system and so it would

525
00:19:37,280 --> 00:19:38,880
be nice and i think it would just

526
00:19:38,880 --> 00:19:42,880
be doable for uh implementers to um

527
00:19:42,880 --> 00:19:44,640
i think it's not as complicated as in

528
00:19:44,640 --> 00:19:46,480
the imap case actually

529
00:19:46,480 --> 00:19:48,640
with all those features there i think

530
00:19:48,640 --> 00:19:50,640
are much more

531
00:19:50,640 --> 00:19:54,400
diverse yeah i think those are all

532
00:19:54,400 --> 00:19:54,880
easily

533
00:19:54,880 --> 00:19:56,880
um put buying capabilities so i think

534
00:19:56,880 --> 00:19:58,000
that that's okay

535
00:19:58,000 --> 00:20:00,559
i think the bigger question to me uh

536
00:20:00,559 --> 00:20:01,120
again

537
00:20:01,120 --> 00:20:02,400
how different this is between different

538
00:20:02,400 --> 00:20:03,679
task matches i haven't really done a

539
00:20:03,679 --> 00:20:04,960
survey or anything

540
00:20:04,960 --> 00:20:08,240
is um uh this kind of issue of

541
00:20:08,240 --> 00:20:09,919
how different is a task list from a

542
00:20:09,919 --> 00:20:11,600
calendar like so one of the main

543
00:20:11,600 --> 00:20:13,039
differences is

544
00:20:13,039 --> 00:20:15,440
at least in the to-do list i use it's

545
00:20:15,440 --> 00:20:16,799
there's a manual order

546
00:20:16,799 --> 00:20:19,120
for the set of to-do's in a list and you

547
00:20:19,120 --> 00:20:20,480
can drag and drop to rearrange them and

548
00:20:20,480 --> 00:20:20,960
stuff

549
00:20:20,960 --> 00:20:22,080
and so i think that's something you

550
00:20:22,080 --> 00:20:23,760
can't support whereas with events

551
00:20:23,760 --> 00:20:24,799
there's no

552
00:20:24,799 --> 00:20:27,200
ordering within the calendar other than

553
00:20:27,200 --> 00:20:28,320
by date or whatever

554
00:20:28,320 --> 00:20:32,240
other property you want to use

555
00:20:32,799 --> 00:20:34,000
that's actually a very good point

556
00:20:34,000 --> 00:20:35,840
actually uh there was one i was uh

557
00:20:35,840 --> 00:20:37,200
personally missing uh

558
00:20:37,200 --> 00:20:40,480
obviously so uh i didn't think about it

559
00:20:40,480 --> 00:20:43,120
um i i still need to look it up um it

560
00:20:43,120 --> 00:20:44,159
doesn't

561
00:20:44,159 --> 00:20:46,320
it it seems to make sense what you say

562
00:20:46,320 --> 00:20:47,280
but um

563
00:20:47,280 --> 00:20:49,600
and actually at least from the from the

564
00:20:49,600 --> 00:20:51,200
groupware system supporting tasks let's

565
00:20:51,200 --> 00:20:52,240
put it that way

566
00:20:52,240 --> 00:20:54,080
i'm not aware of any really using that

567
00:20:54,080 --> 00:20:56,159
so most just sort the

568
00:20:56,159 --> 00:20:58,480
tasks by date or status or something

569
00:20:58,480 --> 00:21:00,000
like that but i'm pretty sure you find

570
00:21:00,000 --> 00:21:01,840
something where the order makes some

571
00:21:01,840 --> 00:21:03,280
difference

572
00:21:03,280 --> 00:21:05,440
um maybe even it's google i i need to

573
00:21:05,440 --> 00:21:08,400
look it up i think

574
00:21:08,720 --> 00:21:10,400
i think it depends on the type of task

575
00:21:10,400 --> 00:21:11,679
list you're talking about too i

576
00:21:11,679 --> 00:21:13,600
typically have

577
00:21:13,600 --> 00:21:15,760
a long list of things with due dates and

578
00:21:15,760 --> 00:21:16,880
they're

579
00:21:16,880 --> 00:21:19,360
sorted by by due date by default yeah

580
00:21:19,360 --> 00:21:21,120
that's what i meant yeah

581
00:21:21,120 --> 00:21:22,480
but if it's just a you know if it's just

582
00:21:22,480 --> 00:21:23,679
a bunch of random things that you need

583
00:21:23,679 --> 00:21:24,720
to take care of and

584
00:21:24,720 --> 00:21:26,799
the timing of it doesn't matter then you

585
00:21:26,799 --> 00:21:28,400
may want to sort those

586
00:21:28,400 --> 00:21:31,280
you know however you prefer them sorting

587
00:21:31,280 --> 00:21:32,480
yeah i think you definitely need support

588
00:21:32,480 --> 00:21:33,039
for that

589
00:21:33,039 --> 00:21:35,120
i i agree it's it you know different

590
00:21:35,120 --> 00:21:36,240
mountain to do

591
00:21:36,240 --> 00:21:37,600
taskless managers have different

592
00:21:37,600 --> 00:21:39,360
approaches to this but that's

593
00:21:39,360 --> 00:21:40,480
kind of what's kind of the point earlier

594
00:21:40,480 --> 00:21:43,120
is there is more heterogeneity here um

595
00:21:43,120 --> 00:21:44,720
and so the interesting thing to me then

596
00:21:44,720 --> 00:21:46,880
is if they have a sort order

597
00:21:46,880 --> 00:21:48,799
doing a many to many mapping you know

598
00:21:48,799 --> 00:21:51,039
the whole thing

599
00:21:51,039 --> 00:21:54,080
you know makes less perhaps less sense

600
00:21:54,080 --> 00:21:55,200
that you've been with events i don't

601
00:21:55,200 --> 00:21:56,320
know

602
00:21:56,320 --> 00:21:58,720
kind of to do be in more than one to-do

603
00:21:58,720 --> 00:21:59,679
list

604
00:21:59,679 --> 00:22:02,480
um if it is you probably need multiple

605
00:22:02,480 --> 00:22:03,840
sort order properties as well because

606
00:22:03,840 --> 00:22:04,880
otherwise you can't

607
00:22:04,880 --> 00:22:06,400
you know you need to specify where it is

608
00:22:06,400 --> 00:22:09,120
in each of those lists um

609
00:22:09,120 --> 00:22:11,840
so yeah i don't know whether you want to

610
00:22:11,840 --> 00:22:12,640
make it

611
00:22:12,640 --> 00:22:14,159
but just one too many rather many too

612
00:22:14,159 --> 00:22:16,559
many mapping

613
00:22:16,559 --> 00:22:18,960
personally i would say first of all i

614
00:22:18,960 --> 00:22:20,159
would say the sort of thing

615
00:22:20,159 --> 00:22:22,799
sort of makes some sense and i agree

616
00:22:22,799 --> 00:22:23,280
with you

617
00:22:23,280 --> 00:22:26,080
it will be complicated in the situation

618
00:22:26,080 --> 00:22:28,159
of multiple task lists

619
00:22:28,159 --> 00:22:29,919
and it will make you crazy to support

620
00:22:29,919 --> 00:22:32,000
multiple thought orders for different

621
00:22:32,000 --> 00:22:33,679
task lists i'm not sure if this is

622
00:22:33,679 --> 00:22:34,960
really

623
00:22:34,960 --> 00:22:37,200
what somebody wants and especially since

624
00:22:37,200 --> 00:22:39,440
this multiple tasks is sort of motivated

625
00:22:39,440 --> 00:22:40,720
by this kind of label

626
00:22:40,720 --> 00:22:43,360
kind of stuff right and here actually in

627
00:22:43,360 --> 00:22:45,679
practice we are in a sort of

628
00:22:45,679 --> 00:22:49,440
um systems you know

629
00:22:49,440 --> 00:22:51,039
shuffling together the concept of a

630
00:22:51,039 --> 00:22:52,799
folder and a label like you have in

631
00:22:52,799 --> 00:22:54,720
gmail actually you see so in gmail you

632
00:22:54,720 --> 00:22:55,280
can

633
00:22:55,280 --> 00:22:56,640
you can actually effectively have a

634
00:22:56,640 --> 00:22:58,720
label in the gmail sense but if

635
00:22:58,720 --> 00:23:00,960
how google exposes it via imap it's a

636
00:23:00,960 --> 00:23:02,080
folder yeah

637
00:23:02,080 --> 00:23:04,720
so it already breaks in their own uh

638
00:23:04,720 --> 00:23:05,600
exposition

639
00:23:05,600 --> 00:23:07,440
within their own ui and how they do it

640
00:23:07,440 --> 00:23:09,679
on imap so you see this discrepancy a

641
00:23:09,679 --> 00:23:12,720
little bit between

642
00:23:12,720 --> 00:23:14,720
using folders as labels and labels as

643
00:23:14,720 --> 00:23:15,919
folders so

644
00:23:15,919 --> 00:23:17,440
i'm currently not aware if there's a

645
00:23:17,440 --> 00:23:19,360
category flag we

646
00:23:19,360 --> 00:23:22,320
inherit from the calendar for instance

647
00:23:22,320 --> 00:23:24,400
so that might already be sufficient to

648
00:23:24,400 --> 00:23:26,240
support something like this multiple

649
00:23:26,240 --> 00:23:26,960
list

650
00:23:26,960 --> 00:23:30,880
approach as a label kind of thing

651
00:23:31,840 --> 00:23:37,039
just mostly a ui and search uh

652
00:23:37,039 --> 00:23:39,520
feature no well you need to be able to

653
00:23:39,520 --> 00:23:41,200
store it somewhere because

654
00:23:41,200 --> 00:23:44,159
um you know if i have my tasks a b c i

655
00:23:44,159 --> 00:23:45,039
want to see them as

656
00:23:45,039 --> 00:23:48,080
a then b then c in both clients

657
00:23:48,080 --> 00:23:52,320
you know in fact more than one that

658
00:23:53,360 --> 00:23:54,799
agree with that but if you what if you

659
00:23:54,799 --> 00:23:56,080
want to see it in a different order on a

660
00:23:56,080 --> 00:23:57,039
different client

661
00:23:57,039 --> 00:23:58,880
i mean i just well the client could

662
00:23:58,880 --> 00:24:00,799
support that but i'm saying one of the

663
00:24:00,799 --> 00:24:01,360
options

664
00:24:01,360 --> 00:24:03,600
other than just sorting by like due date

665
00:24:03,600 --> 00:24:04,799
or whatever property i think one of the

666
00:24:04,799 --> 00:24:05,200
things

667
00:24:05,200 --> 00:24:08,880
that should be or shared

668
00:24:08,880 --> 00:24:10,400
or shared thoughtless where people want

669
00:24:10,400 --> 00:24:13,520
to see them in different orders

670
00:24:14,480 --> 00:24:17,440
it it's i mean it's really feels like

671
00:24:17,440 --> 00:24:19,840
extension

672
00:24:22,320 --> 00:24:23,760
have the same sort order between

673
00:24:23,760 --> 00:24:25,600
different clients and that feels like

674
00:24:25,600 --> 00:24:27,120
something that we should be supporting

675
00:24:27,120 --> 00:24:29,360
in the standard so that you can rely on

676
00:24:29,360 --> 00:24:30,159
it from

677
00:24:30,159 --> 00:24:32,159
any client that does sort you can you

678
00:24:32,159 --> 00:24:35,279
can see what their thought is

679
00:24:36,640 --> 00:24:38,960
this way if you want it sounds much more

680
00:24:38,960 --> 00:24:40,080
like a

681
00:24:40,080 --> 00:24:43,120
shared view of something than actually

682
00:24:43,120 --> 00:24:45,760
anything else that you i mean we that's

683
00:24:45,760 --> 00:24:47,200
sort of what i implement

684
00:24:47,200 --> 00:24:49,520
for some stuff we use is is you have an

685
00:24:49,520 --> 00:24:51,840
alias to it to a collection which has

686
00:24:51,840 --> 00:24:53,600
associated with it

687
00:24:53,600 --> 00:24:56,719
filtering and sorting

688
00:24:58,320 --> 00:25:00,080
the the thing is this is not like

689
00:25:00,080 --> 00:25:01,840
storing oh you should sort by this

690
00:25:01,840 --> 00:25:03,120
property

691
00:25:03,120 --> 00:25:06,400
you know by by date it it say

692
00:25:06,400 --> 00:25:09,039
is the ability for the user to um store

693
00:25:09,039 --> 00:25:09,760
for the server

694
00:25:09,760 --> 00:25:12,840
a manual order for stuff that makes

695
00:25:12,840 --> 00:25:15,840
sense

696
00:25:16,720 --> 00:25:19,120
i i think the point uh mike wanted to

697
00:25:19,120 --> 00:25:20,400
make is a little bit like

698
00:25:20,400 --> 00:25:22,720
if there should be a distinction yeah by

699
00:25:22,720 --> 00:25:24,400
client first of all where i would also

700
00:25:24,400 --> 00:25:25,360
disagree this is

701
00:25:25,360 --> 00:25:27,200
strictly required because i don't see

702
00:25:27,200 --> 00:25:29,919
really a use case for that

703
00:25:29,919 --> 00:25:32,960
or if there is one client to do it by

704
00:25:32,960 --> 00:25:33,919
themselves

705
00:25:33,919 --> 00:25:35,520
and the second point mike if i got you

706
00:25:35,520 --> 00:25:38,000
correctly is for a collaborative

707
00:25:38,000 --> 00:25:40,320
approach where i share a certain task

708
00:25:40,320 --> 00:25:42,400
list if there should be different

709
00:25:42,400 --> 00:25:44,080
thought orders possible for different

710
00:25:44,080 --> 00:25:46,720
uses is that what you meant right

711
00:25:46,720 --> 00:25:49,760
that's what i suspect yes yeah

712
00:25:49,760 --> 00:25:52,880
but and and my point on that would also

713
00:25:52,880 --> 00:25:54,559
be i think it's it would be maybe

714
00:25:54,559 --> 00:25:56,480
engineered a little bit over the top so

715
00:25:56,480 --> 00:25:58,080
i would assume if a team

716
00:25:58,080 --> 00:26:00,640
shares really a task list there is i

717
00:26:00,640 --> 00:26:01,360
mean if they

718
00:26:01,360 --> 00:26:03,760
decide to share the task as an artifact

719
00:26:03,760 --> 00:26:05,919
i think also the sorting is sort of an

720
00:26:05,919 --> 00:26:09,520
um you know

721
00:26:09,520 --> 00:26:12,960
designed order which the team shares

722
00:26:12,960 --> 00:26:15,120
so i i would be i think i would be

723
00:26:15,120 --> 00:26:17,039
rather confused in the team if i shared

724
00:26:17,039 --> 00:26:19,120
half this and everybody would maintain a

725
00:26:19,120 --> 00:26:21,360
separate order of it on the shared list

726
00:26:21,360 --> 00:26:24,159
i don't know yeah i agree with that

727
00:26:24,159 --> 00:26:24,799
personally

728
00:26:24,799 --> 00:26:28,240
yeah i i think i see where you're coming

729
00:26:28,240 --> 00:26:29,600
from mike i think you're you're thinking

730
00:26:29,600 --> 00:26:31,120
a little bit about the chat calendar

731
00:26:31,120 --> 00:26:34,000
um um issues here but i think it's a

732
00:26:34,000 --> 00:26:35,120
little bit different for

733
00:26:35,120 --> 00:26:37,520
for a private copy of an event i have

734
00:26:37,520 --> 00:26:39,279
and i want to maintain some some private

735
00:26:39,279 --> 00:26:41,200
state for that

736
00:26:41,200 --> 00:26:43,520
but typically i think if a team shares a

737
00:26:43,520 --> 00:26:46,159
task list i think

738
00:26:46,159 --> 00:26:48,000
this is more like a shared artifact

739
00:26:48,000 --> 00:26:50,840
where should be a common view on that

740
00:26:50,840 --> 00:26:53,440
artifact i think the difference here is

741
00:26:53,440 --> 00:26:55,520
within it for for a task the source

742
00:26:55,520 --> 00:26:56,640
order is actually kind of part of the

743
00:26:56,640 --> 00:26:57,120
data

744
00:26:57,120 --> 00:27:00,000
because it's quite a way for you for the

745
00:27:00,000 --> 00:27:00,960
user to ad hoc

746
00:27:00,960 --> 00:27:02,880
and say what order should these things

747
00:27:02,880 --> 00:27:04,320
be done in roughly probably

748
00:27:04,320 --> 00:27:05,840
because by manually dragging and

749
00:27:05,840 --> 00:27:07,840
dropping them whereas for

750
00:27:07,840 --> 00:27:09,840
the task list like calendar that would

751
00:27:09,840 --> 00:27:11,440
also have a sort order property

752
00:27:11,440 --> 00:27:13,039
just like for water should be in the

753
00:27:13,039 --> 00:27:14,559
sidebar and that might be per user

754
00:27:14,559 --> 00:27:15,520
because you might have a different set

755
00:27:15,520 --> 00:27:17,360
of task lists for different users and

756
00:27:17,360 --> 00:27:18,720
how you want them arranging your sidebar

757
00:27:18,720 --> 00:27:20,559
might be different but that's that's not

758
00:27:20,559 --> 00:27:23,840
part of the data well it is data but

759
00:27:23,840 --> 00:27:24,880
yeah i think there's actually a

760
00:27:24,880 --> 00:27:27,440
difference there

761
00:27:35,840 --> 00:27:37,360
document you don't have kodi md

762
00:27:37,360 --> 00:27:39,120
documents that multiple people can

763
00:27:39,120 --> 00:27:41,279
can order the lines in different ways

764
00:27:41,279 --> 00:27:42,399
they're a collaborative

765
00:27:42,399 --> 00:27:44,240
collaborative nobody's unique in

766
00:27:44,240 --> 00:27:45,760
collaborative work you might have a

767
00:27:45,760 --> 00:27:47,520
project manager who wants to see things

768
00:27:47,520 --> 00:27:49,840
in order of due date because the main

769
00:27:49,840 --> 00:27:51,760
main concern to them is that things get

770
00:27:51,760 --> 00:27:52,960
done on time

771
00:27:52,960 --> 00:27:54,480
you might also want to they can't either

772
00:27:54,480 --> 00:27:55,679
this is not stopping them from doing it

773
00:27:55,679 --> 00:27:56,080
yeah

774
00:27:56,080 --> 00:27:58,080
yeah right and you know but if you could

775
00:27:58,080 --> 00:27:59,120
if you if you can

776
00:27:59,120 --> 00:28:02,320
reorder stuff on the fly why not just

777
00:28:02,320 --> 00:28:04,559
add some persistence to set set what the

778
00:28:04,559 --> 00:28:06,000
orderings you want to see

779
00:28:06,000 --> 00:28:09,279
by default it you know well that's

780
00:28:09,279 --> 00:28:11,200
actually what we're suggesting mike that

781
00:28:11,200 --> 00:28:13,360
you're not not embedding it in the data

782
00:28:13,360 --> 00:28:14,480
so it's a fixed

783
00:28:14,480 --> 00:28:16,399
order it's just another well it's just

784
00:28:16,399 --> 00:28:18,880
another attribute added to the data

785
00:28:18,880 --> 00:28:21,360
how you yeah i mean that that's what it

786
00:28:21,360 --> 00:28:23,360
is it's an attribute that

787
00:28:23,360 --> 00:28:26,640
but but the basic the thing is it's

788
00:28:26,640 --> 00:28:28,240
there is no attribute you could sort by

789
00:28:28,240 --> 00:28:30,320
without adding this to say you know

790
00:28:30,320 --> 00:28:32,159
to allow this custom ordering that's the

791
00:28:32,159 --> 00:28:33,840
thing like you could have a separate

792
00:28:33,840 --> 00:28:35,360
property if you want to like to say

793
00:28:35,360 --> 00:28:37,760
like on the to-do list itself to say

794
00:28:37,760 --> 00:28:38,960
default sort

795
00:28:38,960 --> 00:28:41,120
by due date rather than buy the sort

796
00:28:41,120 --> 00:28:42,559
order property right but it's

797
00:28:42,559 --> 00:28:44,559
this is for if you if you're in your

798
00:28:44,559 --> 00:28:46,480
clients yours you've covered sort of

799
00:28:46,480 --> 00:28:46,960
drop down

800
00:28:46,960 --> 00:28:49,600
instead of sorting by due date you click

801
00:28:49,600 --> 00:28:50,000
sort

802
00:28:50,000 --> 00:28:51,520
manually and now you want to drag and

803
00:28:51,520 --> 00:28:53,279
drop them into some particular order

804
00:28:53,279 --> 00:28:56,080
just for you well not just yeah that

805
00:28:56,080 --> 00:28:57,039
makes sense to you

806
00:28:57,039 --> 00:28:59,039
and this is how we store that is by

807
00:28:59,039 --> 00:29:00,720
having a sort order property on the

808
00:29:00,720 --> 00:29:03,200
tasks themselves as well does that make

809
00:29:03,200 --> 00:29:04,720
more sense

810
00:29:04,720 --> 00:29:06,480
it's the name sort order causing

811
00:29:06,480 --> 00:29:08,240
confusion here

812
00:29:08,240 --> 00:29:09,760
perhaps yeah perhaps we should use

813
00:29:09,760 --> 00:29:11,200
different it's just because we have that

814
00:29:11,200 --> 00:29:12,559
concept already and it is kind of the

815
00:29:12,559 --> 00:29:12,880
same

816
00:29:12,880 --> 00:29:16,399
uh dave in the conversation i think if

817
00:29:16,399 --> 00:29:19,360
it doesn't get too crazy

818
00:29:19,360 --> 00:29:22,000
um so i apologize if i don't have enough

819
00:29:22,000 --> 00:29:23,200
context but

820
00:29:23,200 --> 00:29:24,960
the kind of discussion you're having is

821
00:29:24,960 --> 00:29:27,200
one i've heard many times before

822
00:29:27,200 --> 00:29:30,320
in different contexts the fear i have in

823
00:29:30,320 --> 00:29:31,760
what you're saying is not that it's all

824
00:29:31,760 --> 00:29:34,080
good stuff it is all good stuff

825
00:29:34,080 --> 00:29:35,760
the fear is that you're dictating

826
00:29:35,760 --> 00:29:38,000
underlying implementation choices

827
00:29:38,000 --> 00:29:40,240
that might be more expensive and more

828
00:29:40,240 --> 00:29:41,360
complicated

829
00:29:41,360 --> 00:29:44,720
uh than uh existing choices

830
00:29:44,720 --> 00:29:48,000
um the the the use of the folder

831
00:29:48,000 --> 00:29:49,200
construct as an

832
00:29:49,200 --> 00:29:52,080
actual storage model is really simple

833
00:29:52,080 --> 00:29:53,600
and extremely useful

834
00:29:53,600 --> 00:29:56,640
if the model laying on top of the access

835
00:29:56,640 --> 00:29:57,600
mechanism

836
00:29:57,600 --> 00:30:01,360
is one that says every query is a search

837
00:30:01,360 --> 00:30:03,440
which is what i think i'm hearing even

838
00:30:03,440 --> 00:30:05,360
though i don't think it's quite what you

839
00:30:05,360 --> 00:30:07,120
think you're saying

840
00:30:07,120 --> 00:30:09,039
then you've just altered the cost of

841
00:30:09,039 --> 00:30:12,320
using this by a lot

842
00:30:15,520 --> 00:30:18,960
yeah i think that's

843
00:30:18,960 --> 00:30:22,080
mainly to do with whether we have uh

844
00:30:22,080 --> 00:30:24,159
a one to many or many too many mapping

845
00:30:24,159 --> 00:30:27,520
for the dave to do this creating echo

846
00:30:27,520 --> 00:30:30,559
whoops oh just a second

847
00:30:31,360 --> 00:30:34,000
um if if a task can just be one to-do

848
00:30:34,000 --> 00:30:34,840
list

849
00:30:34,840 --> 00:30:37,600
uh well then it also it depends whether

850
00:30:37,600 --> 00:30:38,880
we want yet another kind of

851
00:30:38,880 --> 00:30:41,360
level of hierarchy as well over you know

852
00:30:41,360 --> 00:30:42,240
can

853
00:30:42,240 --> 00:30:44,880
does a to-do list get to create folders

854
00:30:44,880 --> 00:30:46,480
for those as well that kind of thing but

855
00:30:46,480 --> 00:30:50,240
i i

856
00:30:50,240 --> 00:30:51,840
i guess there is there is a bit of a

857
00:30:51,840 --> 00:30:55,120
query in terms of um

858
00:30:55,360 --> 00:30:59,200
how many how many tasks are in a list

859
00:30:59,200 --> 00:31:02,320
like do you if if we expect it always to

860
00:31:02,320 --> 00:31:03,440
be a

861
00:31:03,440 --> 00:31:06,000
you know not too high number you could

862
00:31:06,000 --> 00:31:07,760
say that the

863
00:31:07,760 --> 00:31:10,640
list itself is the unit of data and you

864
00:31:10,640 --> 00:31:12,399
fetch the whole list which is

865
00:31:12,399 --> 00:31:14,399
an array of tasks rather than querying

866
00:31:14,399 --> 00:31:16,640
the server for tasks and saying

867
00:31:16,640 --> 00:31:19,440
find me ones that match this list um

868
00:31:19,440 --> 00:31:21,200
which requires it to do some kind of

869
00:31:21,200 --> 00:31:23,360
filtering but i don't think the spec

870
00:31:23,360 --> 00:31:25,120
requires you to do

871
00:31:25,120 --> 00:31:27,360
i don't think spec with the current kind

872
00:31:27,360 --> 00:31:28,799
of approach is

873
00:31:28,799 --> 00:31:31,200
uh forces you not not to be able to use

874
00:31:31,200 --> 00:31:33,519
folders and stuff like you'd say i i

875
00:31:33,519 --> 00:31:35,600
um so i i don't think we straight into

876
00:31:35,600 --> 00:31:38,480
that but it's a good point

877
00:31:38,480 --> 00:31:40,720
having implemented some other gmap stuff

878
00:31:40,720 --> 00:31:42,080
um

879
00:31:42,080 --> 00:31:45,360
often what we've done is we detected a

880
00:31:45,360 --> 00:31:46,080
search

881
00:31:46,080 --> 00:31:48,799
is a in folder id this and no other

882
00:31:48,799 --> 00:31:49,600
conditions

883
00:31:49,600 --> 00:31:52,320
and convert that into a very cheap

884
00:31:52,320 --> 00:31:54,080
return the list of the folders

885
00:31:54,080 --> 00:31:56,480
um so it's more like an sql optimizer

886
00:31:56,480 --> 00:31:57,440
than

887
00:31:57,440 --> 00:32:00,960
a pure mapping to underlying behavior

888
00:32:00,960 --> 00:32:03,840
so you you can make those kinds of

889
00:32:03,840 --> 00:32:05,279
queries cheap even if they

890
00:32:05,279 --> 00:32:08,640
are expressed as a search braun

891
00:32:08,640 --> 00:32:11,519
you you brought up the um comparison

892
00:32:11,519 --> 00:32:13,519
with the code emd earlier

893
00:32:13,519 --> 00:32:16,640
i wonder if a better example for

894
00:32:16,640 --> 00:32:19,039
tasks here might be something like

895
00:32:19,039 --> 00:32:20,399
trello

896
00:32:20,399 --> 00:32:23,039
which would be you know kind of a you

897
00:32:23,039 --> 00:32:24,480
know do we want to provide the

898
00:32:24,480 --> 00:32:26,559
underlying capability for

899
00:32:26,559 --> 00:32:29,360
a very full-functioned shared task

900
00:32:29,360 --> 00:32:30,960
system

901
00:32:30,960 --> 00:32:33,200
and you know it's different from say

902
00:32:33,200 --> 00:32:36,799
just the reminders app on my mac

903
00:32:37,840 --> 00:32:40,559
i i think it probably should or at least

904
00:32:40,559 --> 00:32:41,440
we should

905
00:32:41,440 --> 00:32:43,600
survey kind of you know does it look

906
00:32:43,600 --> 00:32:44,640
like this

907
00:32:44,640 --> 00:32:46,640
data model would meet that use case if

908
00:32:46,640 --> 00:32:48,080
trello decided they wanted to support an

909
00:32:48,080 --> 00:32:48,720
open

910
00:32:48,720 --> 00:32:52,320
data you know access format next year

911
00:32:52,320 --> 00:32:55,279
kind of thing um and if it doesn't then

912
00:32:55,279 --> 00:32:56,799
we should at least discuss why it

913
00:32:56,799 --> 00:32:57,760
doesn't whether

914
00:32:57,760 --> 00:32:59,120
that we should make changes or whether

915
00:32:59,120 --> 00:33:01,760
we're happy with that

916
00:33:02,320 --> 00:33:04,880
so we it sounds sounds like a survey is

917
00:33:04,880 --> 00:33:07,279
an important next step here

918
00:33:07,279 --> 00:33:10,799
we already started yeah

919
00:33:10,799 --> 00:33:14,159
so we looked already a little sorry

920
00:33:14,159 --> 00:33:15,679
we looked already a little bit into it

921
00:33:15,679 --> 00:33:17,519
and i would also um

922
00:33:17,519 --> 00:33:19,600
from again data portability perspective

923
00:33:19,600 --> 00:33:20,559
we

924
00:33:20,559 --> 00:33:24,080
um try actually to to see if

925
00:33:24,080 --> 00:33:25,840
something like trello fits in here as

926
00:33:25,840 --> 00:33:28,320
well because what we've seen so far

927
00:33:28,320 --> 00:33:30,799
um we looked already into it it fits in

928
00:33:30,799 --> 00:33:32,720
already quite well so i think we cover a

929
00:33:32,720 --> 00:33:33,840
lot already

930
00:33:33,840 --> 00:33:36,320
we didn't dig into every detail yet and

931
00:33:36,320 --> 00:33:37,679
i think that will be very interesting

932
00:33:37,679 --> 00:33:38,880
for some of these points we just

933
00:33:38,880 --> 00:33:40,000
discussed

934
00:33:40,000 --> 00:33:41,840
um but the overall goal would actually

935
00:33:41,840 --> 00:33:44,480
if it's not you know totally

936
00:33:44,480 --> 00:33:46,960
stepping away from from the core task

937
00:33:46,960 --> 00:33:48,799
model here we should certainly

938
00:33:48,799 --> 00:33:51,279
try to make that compatible as well so

939
00:33:51,279 --> 00:33:52,559
it can be used

940
00:33:52,559 --> 00:33:53,760
as an exchange format or

941
00:33:53,760 --> 00:33:56,240
interoperability approach for those

942
00:33:56,240 --> 00:33:58,480
trello style kanban style systems as

943
00:33:58,480 --> 00:34:00,640
well

944
00:34:03,440 --> 00:34:06,159
um i don't actually know is there uh

945
00:34:06,159 --> 00:34:08,239
that's a kind of a meter question is is

946
00:34:08,239 --> 00:34:10,239
there a certain format to share such a

947
00:34:10,239 --> 00:34:11,679
kind of a comparison or something like

948
00:34:11,679 --> 00:34:12,639
that because it's

949
00:34:12,639 --> 00:34:15,918
certainly not part of the rsc as such um

950
00:34:15,918 --> 00:34:19,199
i know some time back i had a discussion

951
00:34:19,199 --> 00:34:21,359
with somebody who got very excited about

952
00:34:21,359 --> 00:34:23,440
um some of the features we were talking

953
00:34:23,440 --> 00:34:25,918
about with with the eye counter tasks

954
00:34:25,918 --> 00:34:28,960
and and his he had a job of

955
00:34:28,960 --> 00:34:30,320
transferring this gets to date

956
00:34:30,320 --> 00:34:32,239
availability because he he had the task

957
00:34:32,239 --> 00:34:34,560
of transporting um

958
00:34:34,560 --> 00:34:37,599
project management data from between

959
00:34:37,599 --> 00:34:40,159
different systems and the icon the data

960
00:34:40,159 --> 00:34:42,000
essentially is a perfect match

961
00:34:42,000 --> 00:34:44,960
what was missing is as any export and

962
00:34:44,960 --> 00:34:45,760
import

963
00:34:45,760 --> 00:34:49,359
tool on those on those uh applications

964
00:34:49,359 --> 00:34:51,679
they they tend to work in their own and

965
00:34:51,679 --> 00:34:53,359
because nobody's tried to force them

966
00:34:53,359 --> 00:34:54,079
into it they

967
00:34:54,079 --> 00:34:55,599
they produce their own data and they

968
00:34:55,599 --> 00:34:57,280
don't allow you to to

969
00:34:57,280 --> 00:35:00,160
transport it but it's a pretty much of a

970
00:35:00,160 --> 00:35:01,680
perfect match you know you've got people

971
00:35:01,680 --> 00:35:02,880
you assign stuff to

972
00:35:02,880 --> 00:35:04,800
you've got a lot of properties and so on

973
00:35:04,800 --> 00:35:06,480
and so forth so

974
00:35:06,480 --> 00:35:07,839
it would be a pity to lose that

975
00:35:07,839 --> 00:35:09,520
capability

976
00:35:09,520 --> 00:35:12,800
uh in in the in the in this world always

977
00:35:12,800 --> 00:35:14,320
i mean but base the first thing is

978
00:35:14,320 --> 00:35:16,160
obviously to get the data right

979
00:35:16,160 --> 00:35:17,680
and i think we're pretty close to that

980
00:35:17,680 --> 00:35:20,800
if we follow the i calendar model

981
00:35:20,800 --> 00:35:22,560
uh dave popped his hand back up so we

982
00:35:22,560 --> 00:35:24,240
should i think we're getting to the

983
00:35:24,240 --> 00:35:25,520
stage in this conversation where we

984
00:35:25,520 --> 00:35:26,000
should

985
00:35:26,000 --> 00:35:28,800
try and structure it a little bit more

986
00:35:28,800 --> 00:35:29,119
so

987
00:35:29,119 --> 00:35:31,359
so apologize for the uh audio problems i

988
00:35:31,359 --> 00:35:33,760
was having uh medico doesn't do

989
00:35:33,760 --> 00:35:36,079
uh echo suppression the way other

990
00:35:36,079 --> 00:35:36,960
systems do

991
00:35:36,960 --> 00:35:41,040
oh right there in the name yeah um

992
00:35:41,040 --> 00:35:44,720
um the echo does meet yes um so

993
00:35:44,720 --> 00:35:47,359
i i i think i can clarify what i'm

994
00:35:47,359 --> 00:35:48,800
thinking about the

995
00:35:48,800 --> 00:35:52,160
uh folder versus search um

996
00:35:52,160 --> 00:35:54,240
there there is a model that says uh

997
00:35:54,240 --> 00:35:55,520
everything is a search

998
00:35:55,520 --> 00:35:57,359
you can set a default and that becomes

999
00:35:57,359 --> 00:35:59,040
what you get if you don't say

1000
00:35:59,040 --> 00:36:02,720
some new search and that imposes a

1001
00:36:02,720 --> 00:36:04,880
potentially very substantial underlying

1002
00:36:04,880 --> 00:36:06,960
complexity on the implementation

1003
00:36:06,960 --> 00:36:09,599
there's a different approach which says

1004
00:36:09,599 --> 00:36:12,480
default uh

1005
00:36:12,480 --> 00:36:14,640
well start with default which says

1006
00:36:14,640 --> 00:36:16,000
however you want to give it to me give

1007
00:36:16,000 --> 00:36:17,520
it to me and that supports a folder

1008
00:36:17,520 --> 00:36:18,240
model

1009
00:36:18,240 --> 00:36:20,480
uh if if that's what the underlying

1010
00:36:20,480 --> 00:36:22,400
implementation wants to do

1011
00:36:22,400 --> 00:36:25,040
and then search is something separate

1012
00:36:25,040 --> 00:36:26,960
and then the way you can merge them

1013
00:36:26,960 --> 00:36:29,920
is by saying that uh you can go to set

1014
00:36:29,920 --> 00:36:31,839
the default to be a search

1015
00:36:31,839 --> 00:36:33,520
but the underlying implementation can

1016
00:36:33,520 --> 00:36:36,240
reject that effort

1017
00:36:36,240 --> 00:36:38,240
which is its way of saying no i've got

1018
00:36:38,240 --> 00:36:39,680
my way of doing things

1019
00:36:39,680 --> 00:36:41,440
that is not a search and you don't get

1020
00:36:41,440 --> 00:36:43,040
to change that

1021
00:36:43,040 --> 00:36:46,240
and that lets the the things

1022
00:36:46,240 --> 00:36:48,640
proceed with a potentially cheap

1023
00:36:48,640 --> 00:36:50,800
implementation that continues to work

1024
00:36:50,800 --> 00:36:52,800
within the model that you've got where

1025
00:36:52,800 --> 00:36:54,160
search is still available

1026
00:36:54,160 --> 00:36:56,000
but it doesn't alter the implementation

1027
00:36:56,000 --> 00:36:58,560
requirements

1028
00:36:59,599 --> 00:37:01,839
yeah i think i think in jmap the way

1029
00:37:01,839 --> 00:37:03,119
that works is

1030
00:37:03,119 --> 00:37:06,880
so the kind of api is consistent in that

1031
00:37:06,880 --> 00:37:08,800
it's all slash query which is kind of a

1032
00:37:08,800 --> 00:37:09,440
search

1033
00:37:09,440 --> 00:37:13,119
but we we could allow the server to

1034
00:37:13,119 --> 00:37:14,560
for example only support a search which

1035
00:37:14,560 --> 00:37:15,839
is really return everything in this

1036
00:37:15,839 --> 00:37:17,280
folder if that makes sense

1037
00:37:17,280 --> 00:37:19,680
so in that case this you know it's not

1038
00:37:19,680 --> 00:37:20,839
really a search

1039
00:37:20,839 --> 00:37:23,440
um anything else it can go as you're

1040
00:37:23,440 --> 00:37:24,880
saying i don't support that i only

1041
00:37:24,880 --> 00:37:26,000
support these simple

1042
00:37:26,000 --> 00:37:28,720
type of queries so the scope of the

1043
00:37:28,720 --> 00:37:30,320
search is a different issue i hadn't

1044
00:37:30,320 --> 00:37:31,680
been thinking about

1045
00:37:31,680 --> 00:37:35,040
um and and uh

1046
00:37:35,040 --> 00:37:38,720
i i i'm more concerned with uh i mean

1047
00:37:38,720 --> 00:37:41,040
gmail is is an environment where

1048
00:37:41,040 --> 00:37:42,400
everything is a search

1049
00:37:42,400 --> 00:37:44,720
no surprise that's who they are um but

1050
00:37:44,720 --> 00:37:45,760
that's not the way

1051
00:37:45,760 --> 00:37:48,480
an awful lot of email systems uh mua

1052
00:37:48,480 --> 00:37:49,520
environments are

1053
00:37:49,520 --> 00:37:52,880
designed and my concern is imposing the

1054
00:37:52,880 --> 00:37:54,079
gmail

1055
00:37:54,079 --> 00:37:56,960
activity which is which is great when

1056
00:37:56,960 --> 00:37:58,160
you like it

1057
00:37:58,160 --> 00:38:00,000
but not so great if you're trying to do

1058
00:38:00,000 --> 00:38:05,200
a more classic kind of implementation

1059
00:38:05,200 --> 00:38:07,599
i i think dave i would support actually

1060
00:38:07,599 --> 00:38:08,240
your

1061
00:38:08,240 --> 00:38:11,280
um claim on the on the

1062
00:38:11,280 --> 00:38:14,079
simple folder model here also due to a

1063
00:38:14,079 --> 00:38:15,599
little bit of a practical experience

1064
00:38:15,599 --> 00:38:16,320
because i think

1065
00:38:16,320 --> 00:38:19,280
typically in a task system um you won't

1066
00:38:19,280 --> 00:38:21,359
have as many items as you have in an

1067
00:38:21,359 --> 00:38:22,800
email folder or something like that

1068
00:38:22,800 --> 00:38:24,880
because in the end any task is do not i

1069
00:38:24,880 --> 00:38:26,160
can craft it and

1070
00:38:26,160 --> 00:38:29,200
uh it might be more than 10 i think

1071
00:38:29,200 --> 00:38:30,960
somebody mentioned before but it won't

1072
00:38:30,960 --> 00:38:32,880
be five thousand physically at least

1073
00:38:32,880 --> 00:38:35,440
uh i have not seen that in fact it can

1074
00:38:35,440 --> 00:38:36,800
be

1075
00:38:36,800 --> 00:38:39,680
like typically it won't be but yeah yeah

1076
00:38:39,680 --> 00:38:40,560
obviously but

1077
00:38:40,560 --> 00:38:42,800
i think in based on empirics i think

1078
00:38:42,800 --> 00:38:44,720
it's it's rather unusual

1079
00:38:44,720 --> 00:38:46,560
and i think the advantage of many of

1080
00:38:46,560 --> 00:38:48,000
those search based uh

1081
00:38:48,000 --> 00:38:50,400
approaches and actually jmap in a way

1082
00:38:50,400 --> 00:38:51,200
has some

1083
00:38:51,200 --> 00:38:53,359
um you know tendency towards that for

1084
00:38:53,359 --> 00:38:55,040
optimization of mobile clients

1085
00:38:55,040 --> 00:38:57,119
like to only transfer data which is like

1086
00:38:57,119 --> 00:38:59,119
really required in a certain

1087
00:38:59,119 --> 00:39:02,079
uh situation somehow yeah so i think

1088
00:39:02,079 --> 00:39:04,160
this is maybe a question to the you know

1089
00:39:04,160 --> 00:39:06,240
more godfathers of jmap here like what

1090
00:39:06,240 --> 00:39:06,800
is

1091
00:39:06,800 --> 00:39:08,960
do we want to preserve the jmf spirit on

1092
00:39:08,960 --> 00:39:11,680
that or would be fine actually to go

1093
00:39:11,680 --> 00:39:14,560
um which i would actually be fine with

1094
00:39:14,560 --> 00:39:16,320
to go with a more simple approach here

1095
00:39:16,320 --> 00:39:18,079
for the task to leave maybe something

1096
00:39:18,079 --> 00:39:20,400
like the sorting to the client

1097
00:39:20,400 --> 00:39:23,680
um even submitting all tasks for a

1098
00:39:23,680 --> 00:39:24,880
folder to the client

1099
00:39:24,880 --> 00:39:26,880
even if that might be more tasks than

1100
00:39:26,880 --> 00:39:28,320
the client want to

1101
00:39:28,320 --> 00:39:30,720
display at one point actually i also

1102
00:39:30,720 --> 00:39:33,119
don't see so much of a use case for just

1103
00:39:33,119 --> 00:39:36,560
querying a subset of the tasks um

1104
00:39:36,560 --> 00:39:38,320
because typically if i want to manage

1105
00:39:38,320 --> 00:39:40,560
tasks i want to see all tasks somehow i

1106
00:39:40,560 --> 00:39:42,079
don't want to have for

1107
00:39:42,079 --> 00:39:45,200
for a re-order or re-prioritization i

1108
00:39:45,200 --> 00:39:46,880
don't want to have actually the client

1109
00:39:46,880 --> 00:39:48,880
need to re-sync with the server probably

1110
00:39:48,880 --> 00:39:49,920
i don't know

1111
00:39:49,920 --> 00:39:51,680
why not i mean i think somebody who's

1112
00:39:51,680 --> 00:39:53,359
trying to do stuff

1113
00:39:53,359 --> 00:39:55,119
like what have i got to get finished

1114
00:39:55,119 --> 00:39:56,400
today what are

1115
00:39:56,400 --> 00:39:58,720
what are the top 10 easiest tasks to

1116
00:39:58,720 --> 00:39:59,520
deal with

1117
00:39:59,520 --> 00:40:01,359
one of the yeah and there's all sorts of

1118
00:40:01,359 --> 00:40:03,200
things you could imagine doing as a as a

1119
00:40:03,200 --> 00:40:04,079
quick search

1120
00:40:04,079 --> 00:40:07,280
and and on size of things i mean

1121
00:40:07,280 --> 00:40:09,440
there's a a mobile development system

1122
00:40:09,440 --> 00:40:11,200
which currently has some like 8 000

1123
00:40:11,200 --> 00:40:14,000
outstanding tickets on it

1124
00:40:14,000 --> 00:40:16,240
yeah what about an imac what about your

1125
00:40:16,240 --> 00:40:18,560
mail inbox when you have people with

1126
00:40:18,560 --> 00:40:21,359
multi-megabyte gigabyte indexes that's

1127
00:40:21,359 --> 00:40:22,319
one folder

1128
00:40:22,319 --> 00:40:26,079
so i think the size is not the issue um

1129
00:40:26,079 --> 00:40:28,800
we presumably we can we can we can deal

1130
00:40:28,800 --> 00:40:29,520
with that

1131
00:40:29,520 --> 00:40:31,920
but i don't think we should assume that

1132
00:40:31,920 --> 00:40:33,200
we're going to have

1133
00:40:33,200 --> 00:40:35,520
10 items or 20 items or 100 items we

1134
00:40:35,520 --> 00:40:37,200
could have thousands of them

1135
00:40:37,200 --> 00:40:38,960
yeah i just had a look at fast mouse

1136
00:40:38,960 --> 00:40:40,560
liquid planner if we were to export

1137
00:40:40,560 --> 00:40:42,079
everything from our internal

1138
00:40:42,079 --> 00:40:43,680
task tracking system including done

1139
00:40:43,680 --> 00:40:45,359
tasks because it still keeps them in

1140
00:40:45,359 --> 00:40:47,280
there so that you can see in the history

1141
00:40:47,280 --> 00:40:49,680
um there's 37 and a half thousand tasks

1142
00:40:49,680 --> 00:40:52,000
in there at the moment yeah i mean

1143
00:40:52,000 --> 00:40:54,560
scientists need to be able to feel it we

1144
00:40:54,560 --> 00:40:56,079
should just assume large

1145
00:40:56,079 --> 00:40:59,119
and uh yes and support small but it

1146
00:40:59,119 --> 00:41:01,280
that people do want to see filtered

1147
00:41:01,280 --> 00:41:02,160
views of

1148
00:41:02,160 --> 00:41:05,520
of stuff what's the stuff related to the

1149
00:41:05,520 --> 00:41:06,960
kernel what's the stuff related to this

1150
00:41:06,960 --> 00:41:09,359
particular device driver or whatever

1151
00:41:09,359 --> 00:41:13,280
and and the um even you know

1152
00:41:13,280 --> 00:41:15,119
what have i got to buy today when i go

1153
00:41:15,119 --> 00:41:17,200
out shopping

1154
00:41:17,200 --> 00:41:19,760
yeah i i i see ken's in the case i'll

1155
00:41:19,760 --> 00:41:22,079
have him talk first

1156
00:41:22,079 --> 00:41:23,200
yeah i'm going to take a little bit

1157
00:41:23,200 --> 00:41:24,720
different tactic i'm not going to take

1158
00:41:24,720 --> 00:41:25,680
sides on what

1159
00:41:25,680 --> 00:41:27,520
we should include or exclude at this

1160
00:41:27,520 --> 00:41:30,400
point my suggestion would be

1161
00:41:30,400 --> 00:41:32,079
let's get some running code with at

1162
00:41:32,079 --> 00:41:34,000
least some core features

1163
00:41:34,000 --> 00:41:35,680
before we start getting off in the weeds

1164
00:41:35,680 --> 00:41:37,680
in terms of what various

1165
00:41:37,680 --> 00:41:39,760
you know special features we may may

1166
00:41:39,760 --> 00:41:42,560
want or not want

1167
00:41:43,920 --> 00:41:45,119
right just might be yeah i mean i

1168
00:41:45,119 --> 00:41:47,359
actually i think this discussion

1169
00:41:47,359 --> 00:41:51,119
is really just down to again what uh

1170
00:41:51,119 --> 00:41:53,920
capabilities the servers are mandated to

1171
00:41:53,920 --> 00:41:54,960
support and which ones they can

1172
00:41:54,960 --> 00:41:56,400
optionally support for

1173
00:41:56,400 --> 00:41:59,520
um slash query the standard kind of call

1174
00:41:59,520 --> 00:42:02,240
for uh tasks that's really what it comes

1175
00:42:02,240 --> 00:42:03,280
down to um

1176
00:42:03,280 --> 00:42:05,680
and i'm sure we can find a solution like

1177
00:42:05,680 --> 00:42:07,040
we did with mail that

1178
00:42:07,040 --> 00:42:09,839
allows existing servers to support it

1179
00:42:09,839 --> 00:42:11,119
reasonably easily but also allows for

1180
00:42:11,119 --> 00:42:13,200
advanced capabilities if

1181
00:42:13,200 --> 00:42:16,560
yeah if they can are there some more

1182
00:42:16,560 --> 00:42:18,079
discussion points hiding off the bottom

1183
00:42:18,079 --> 00:42:20,560
of that screen there bro

1184
00:42:20,560 --> 00:42:23,920
no uh no it's just those two um

1185
00:42:23,920 --> 00:42:25,839
so i guess we we're pretty much coming

1186
00:42:25,839 --> 00:42:27,839
up at time for this

1187
00:42:27,839 --> 00:42:31,440
so um we probably should

1188
00:42:31,440 --> 00:42:32,720
i think there's two things we should do

1189
00:42:32,720 --> 00:42:34,319
a call for adoption for this document if

1190
00:42:34,319 --> 00:42:34,960
we think that

1191
00:42:34,960 --> 00:42:36,480
this is something we want to adopt into

1192
00:42:36,480 --> 00:42:37,520
the working group because we haven't

1193
00:42:37,520 --> 00:42:39,520
officially done that yet

1194
00:42:39,520 --> 00:42:41,359
um that would be done on the mailing

1195
00:42:41,359 --> 00:42:43,280
list but do we think that's something we

1196
00:42:43,280 --> 00:42:43,680
should be

1197
00:42:43,680 --> 00:42:48,960
going ahead with yeah i do guess

1198
00:42:49,119 --> 00:42:52,720
yeah i do cool well some we will we'll

1199
00:42:52,720 --> 00:42:54,000
do that then

1200
00:42:54,000 --> 00:42:57,520
um and so yeah the

1201
00:42:57,520 --> 00:42:58,960
question of whether a task can be in

1202
00:42:58,960 --> 00:43:00,480
multiple tasks i think a lot of these

1203
00:43:00,480 --> 00:43:01,839
questions come down to

1204
00:43:01,839 --> 00:43:05,040
surveying what's out there now um

1205
00:43:05,040 --> 00:43:07,040
so i think that's probably a good next

1206
00:43:07,040 --> 00:43:09,119
step is to

1207
00:43:09,119 --> 00:43:10,880
collect some examples of systems that we

1208
00:43:10,880 --> 00:43:12,319
want to support

1209
00:43:12,319 --> 00:43:16,240
and ideally even maybe talk to

1210
00:43:16,240 --> 00:43:18,319
people who work on those systems and get

1211
00:43:18,319 --> 00:43:19,280
an idea of what their

1212
00:43:19,280 --> 00:43:22,240
challenge points have been is there a

1213
00:43:22,240 --> 00:43:23,200
standard way of

1214
00:43:23,200 --> 00:43:27,760
doing that right emails

1215
00:43:27,760 --> 00:43:30,880
pretty much yeah

1216
00:43:30,880 --> 00:43:32,560
but but for instance if there's some

1217
00:43:32,560 --> 00:43:33,920
whatever itf

1218
00:43:33,920 --> 00:43:37,200
uh tool that says you uh give me

1219
00:43:37,200 --> 00:43:39,200
the trello representative in itf if

1220
00:43:39,200 --> 00:43:41,040
there is any or something like that

1221
00:43:41,040 --> 00:43:43,760
do you know unfortunately there is an

1222
00:43:43,760 --> 00:43:46,560
ietf liaisons page and it's got uh 1

1223
00:43:46,560 --> 00:43:50,000
600 lines in it going back to 1995

1224
00:43:50,000 --> 00:43:53,200
and it's it's unusable to figure out who

1225
00:43:53,200 --> 00:43:54,720
people are and they're generally

1226
00:43:54,720 --> 00:43:56,319
liaisons for the standards but he's not

1227
00:43:56,319 --> 00:43:58,319
with uh individual companies

1228
00:43:58,319 --> 00:44:01,520
okay but but if people have particular

1229
00:44:01,520 --> 00:44:04,000
contacts have friends at these places

1230
00:44:04,000 --> 00:44:05,920
you know please speak up and uh we'd

1231
00:44:05,920 --> 00:44:09,839
like to take advantage of that i'm sure

1232
00:44:22,960 --> 00:44:24,480
you're showing up in the queue did you

1233
00:44:24,480 --> 00:44:27,359
still want to say something

1234
00:44:30,800 --> 00:44:34,839
night that's you no no he's got all

1235
00:44:34,839 --> 00:44:36,800
right

1236
00:44:36,800 --> 00:44:39,839
so we didn't have

1237
00:44:40,319 --> 00:44:43,680
specific slides for jmap sharing did you

1238
00:44:43,680 --> 00:44:45,119
have anything to talk about on that for

1239
00:44:45,119 --> 00:44:47,200
now neil

1240
00:44:47,200 --> 00:44:49,200
ah not really i think it was just in my

1241
00:44:49,200 --> 00:44:51,040
earlier point about separating it out

1242
00:44:51,040 --> 00:44:54,000
um but that's really here is this the

1243
00:44:54,000 --> 00:44:55,599
same model as before it's just

1244
00:44:55,599 --> 00:44:57,200
in a separate document so you can easily

1245
00:44:57,200 --> 00:44:59,680
reference it

1246
00:45:00,560 --> 00:45:02,319
cool well it's it sort of parallels what

1247
00:45:02,319 --> 00:45:04,720
we did with what what's been done with

1248
00:45:04,720 --> 00:45:08,880
with uh dev sharing um

1249
00:45:08,880 --> 00:45:12,160
i mean we realized that it was really

1250
00:45:12,160 --> 00:45:15,359
distinct from calendars

1251
00:45:16,880 --> 00:45:19,839
alexa

1252
00:45:24,240 --> 00:45:28,720
yeah i i had a quick read today and uh

1253
00:45:28,720 --> 00:45:31,520
it looks reasonable i probably will send

1254
00:45:31,520 --> 00:45:34,720
some specific questions where

1255
00:45:34,720 --> 00:45:37,119
things might be unclear uh general

1256
00:45:37,119 --> 00:45:39,040
comments probably more examples would be

1257
00:45:39,040 --> 00:45:40,480
useful

1258
00:45:40,480 --> 00:45:42,800
yeah yeah all these specs definitely

1259
00:45:42,800 --> 00:45:44,160
more examples that's still

1260
00:45:44,160 --> 00:45:46,319
let's do this um once you've got

1261
00:45:46,319 --> 00:45:47,200
implementation

1262
00:45:47,200 --> 00:45:48,720
experience it's a lot easier to generate

1263
00:45:48,720 --> 00:45:50,079
examples because i can get them off the

1264
00:45:50,079 --> 00:45:51,599
wire which also means less like to make

1265
00:45:51,599 --> 00:45:52,960
mistakes which you do when you

1266
00:45:52,960 --> 00:46:01,839
kind of hand do examples

1267
00:46:03,200 --> 00:46:07,440
cool um moving right along then

1268
00:46:07,440 --> 00:46:10,480
whoop sorry

1269
00:46:11,200 --> 00:46:14,400
i can't click on it because it's ui

1270
00:46:14,400 --> 00:46:15,920
elements for controlling

1271
00:46:15,920 --> 00:46:19,200
all right js contact is next so

1272
00:46:19,200 --> 00:46:22,480
robert hello

1273
00:46:22,480 --> 00:46:25,839
um yeah jay's contact um

1274
00:46:25,839 --> 00:46:29,200
is is worked on by

1275
00:46:29,200 --> 00:46:32,319
mario lofreedo is also in the

1276
00:46:32,319 --> 00:46:35,440
uh in this meeting today and me um

1277
00:46:35,440 --> 00:46:43,440
so i i say let's start next slide please

1278
00:46:43,440 --> 00:46:46,960
okay so we updated both um rfc documents

1279
00:46:46,960 --> 00:46:50,000
um the first one defining um similar to

1280
00:46:50,000 --> 00:46:51,040
gs calendar

1281
00:46:51,040 --> 00:46:54,160
the um the data format uh the

1282
00:46:54,160 --> 00:46:56,480
other rfc defining the mapping between

1283
00:46:56,480 --> 00:46:58,400
the vcard data format and

1284
00:46:58,400 --> 00:47:00,540
js contact um

1285
00:47:00,540 --> 00:47:02,240
[Music]

1286
00:47:02,240 --> 00:47:05,440
we we took great care to cover

1287
00:47:05,440 --> 00:47:08,480
um the

1288
00:47:08,480 --> 00:47:12,079
the very majority of vcard properties um

1289
00:47:12,079 --> 00:47:14,960
that we and and you can see here the

1290
00:47:14,960 --> 00:47:17,040
rfcs that we uh took into

1291
00:47:17,040 --> 00:47:19,680
um took into account uh during mapping

1292
00:47:19,680 --> 00:47:20,880
if you

1293
00:47:20,880 --> 00:47:23,599
if you know of some other rfcs that are

1294
00:47:23,599 --> 00:47:24,000
that you

1295
00:47:24,000 --> 00:47:26,880
think are um are relevant and please let

1296
00:47:26,880 --> 00:47:29,359
us know

1297
00:47:29,599 --> 00:47:32,559
next slide please

1298
00:47:34,880 --> 00:47:38,240
we since last

1299
00:47:38,240 --> 00:47:40,960
so last chamber session we had a couple

1300
00:47:40,960 --> 00:47:41,280
of

1301
00:47:41,280 --> 00:47:43,280
points lingering on where we haven't

1302
00:47:43,280 --> 00:47:45,359
really made really up our minds and i

1303
00:47:45,359 --> 00:47:46,800
would like to discuss these

1304
00:47:46,800 --> 00:47:49,839
um now um in this

1305
00:47:49,839 --> 00:47:52,480
in this meeting so um there was the

1306
00:47:52,480 --> 00:47:55,520
ongoing task of identifying properties

1307
00:47:55,520 --> 00:47:58,640
in js contact which should be lists

1308
00:47:58,640 --> 00:48:02,000
versus sets as we use

1309
00:48:02,000 --> 00:48:05,280
in other in some other cmap object or

1310
00:48:05,280 --> 00:48:09,040
chamber element objects and

1311
00:48:09,040 --> 00:48:11,839
we we looked at the properties that we

1312
00:48:11,839 --> 00:48:12,400
have

1313
00:48:12,400 --> 00:48:14,720
which are multivated currently and we

1314
00:48:14,720 --> 00:48:16,800
try to separate them where we

1315
00:48:16,800 --> 00:48:19,920
think that the order of entries is

1316
00:48:19,920 --> 00:48:21,599
relevant versus whether or not

1317
00:48:21,599 --> 00:48:24,720
we only identify one where we are pretty

1318
00:48:24,720 --> 00:48:26,480
sure that the order is totally

1319
00:48:26,480 --> 00:48:30,000
irrelevant um which is categories um

1320
00:48:30,000 --> 00:48:33,280
we kept the other others currently as

1321
00:48:33,280 --> 00:48:36,640
list values um under the assumption

1322
00:48:36,640 --> 00:48:40,000
that that the order is relevant

1323
00:48:40,000 --> 00:48:43,119
for display across different

1324
00:48:43,119 --> 00:48:46,480
clients of the same data so we

1325
00:48:46,480 --> 00:48:48,960
that was our basic assumptions if client

1326
00:48:48,960 --> 00:48:50,240
implementers

1327
00:48:50,240 --> 00:48:53,520
uh are telling us now um

1328
00:48:53,520 --> 00:48:56,720
that this is really not relevant

1329
00:48:56,720 --> 00:48:59,280
um then i would say that the the the

1330
00:48:59,280 --> 00:49:00,559
whole this type

1331
00:49:00,559 --> 00:49:03,119
discussion can be decided pretty quickly

1332
00:49:03,119 --> 00:49:03,839
and we will

1333
00:49:03,839 --> 00:49:07,200
use sets where wherever it um it makes

1334
00:49:07,200 --> 00:49:08,000
more sense

1335
00:49:08,000 --> 00:49:09,680
so my question would be here at this

1336
00:49:09,680 --> 00:49:11,200
point um to

1337
00:49:11,200 --> 00:49:14,240
other implementers or do people using

1338
00:49:14,240 --> 00:49:15,839
contacts on

1339
00:49:15,839 --> 00:49:19,280
especially contact clients

1340
00:49:19,280 --> 00:49:22,079
would rather expect to have an inherent

1341
00:49:22,079 --> 00:49:22,720
order

1342
00:49:22,720 --> 00:49:25,280
across clients picking up again the

1343
00:49:25,280 --> 00:49:27,040
discussion that we had previously for

1344
00:49:27,040 --> 00:49:27,520
tasks

1345
00:49:27,520 --> 00:49:31,040
with the sort order property um

1346
00:49:31,040 --> 00:49:35,520
so um i

1347
00:49:36,480 --> 00:49:38,880
i'm pretty fine with both solutions i

1348
00:49:38,880 --> 00:49:40,480
think it's more relevant for

1349
00:49:40,480 --> 00:49:42,839
client implemented implementers in that

1350
00:49:42,839 --> 00:49:45,839
respect

1351
00:49:50,720 --> 00:49:54,000
yes good for neil

1352
00:49:55,440 --> 00:49:59,040
yeah it's i think probably the order is

1353
00:49:59,040 --> 00:50:00,160
important

1354
00:50:00,160 --> 00:50:03,839
um it's a really tricky one like

1355
00:50:03,839 --> 00:50:06,319
i i certainly think existing clients

1356
00:50:06,319 --> 00:50:07,760
obviously all do share stuff

1357
00:50:07,760 --> 00:50:10,559
in whatever on the other hand i don't

1358
00:50:10,559 --> 00:50:11,760
think they'll let you reorder them

1359
00:50:11,760 --> 00:50:12,720
particularly easily

1360
00:50:12,720 --> 00:50:16,079
um which is yeah

1361
00:50:16,079 --> 00:50:18,319
it's one of the things that is the order

1362
00:50:18,319 --> 00:50:20,160
just because that's what we currently do

1363
00:50:20,160 --> 00:50:24,559
or is actually an important attribute um

1364
00:50:24,559 --> 00:50:27,040
i'm not sure certainly the being patched

1365
00:50:27,040 --> 00:50:27,920
up with sets is

1366
00:50:27,920 --> 00:50:29,520
is nice and makes you less likely to

1367
00:50:29,520 --> 00:50:31,760
accidentally write data you

1368
00:50:31,760 --> 00:50:34,720
want it but um i'd probably lean

1369
00:50:34,720 --> 00:50:36,079
slightly towards leaving his list

1370
00:50:36,079 --> 00:50:39,599
but i don't feel too strongly from our

1371
00:50:39,599 --> 00:50:43,440
client right this is order

1372
00:50:43,440 --> 00:50:47,520
per attribute is it yes yes

1373
00:50:47,520 --> 00:50:50,160
yes say the order the phone numbers

1374
00:50:50,160 --> 00:50:51,359
correct yes

1375
00:50:51,359 --> 00:50:53,280
this would all be erased so they would

1376
00:50:53,280 --> 00:50:54,960
have an inherent order

1377
00:50:54,960 --> 00:50:58,240
in opposition to a set where each each

1378
00:50:58,240 --> 00:50:59,839
entry then has a sort order

1379
00:50:59,839 --> 00:51:03,280
property i'd be surprised if if

1380
00:51:03,280 --> 00:51:05,920
this is supported in any meaningful way

1381
00:51:05,920 --> 00:51:08,640
at the moment

1382
00:51:10,240 --> 00:51:12,559
if you add two phone numbers to a v card

1383
00:51:12,559 --> 00:51:14,079
like you say a home phone number and a

1384
00:51:14,079 --> 00:51:15,200
mobile phone number

1385
00:51:15,200 --> 00:51:17,280
i think if you you add the home first

1386
00:51:17,280 --> 00:51:18,800
then the mobile you'll see them in that

1387
00:51:18,800 --> 00:51:19,359
order

1388
00:51:19,359 --> 00:51:21,440
in the v card and because the clients

1389
00:51:21,440 --> 00:51:23,440
just generally mapped straight from that

1390
00:51:23,440 --> 00:51:26,720
in the same order the reason i i i'm a

1391
00:51:26,720 --> 00:51:27,280
little

1392
00:51:27,280 --> 00:51:30,880
dubious is that i know at least

1393
00:51:30,880 --> 00:51:34,240
ical for jay and his vcard

1394
00:51:34,240 --> 00:51:37,680
implementation just uses the underlying

1395
00:51:37,680 --> 00:51:40,720
uh types you know that java lists and

1396
00:51:40,720 --> 00:51:41,359
things

1397
00:51:41,359 --> 00:51:44,160
first so it'll pass it all into a list

1398
00:51:44,160 --> 00:51:45,599
and the order that you get

1399
00:51:45,599 --> 00:51:48,400
is is not necessarily the order that

1400
00:51:48,400 --> 00:51:48,720
they

1401
00:51:48,720 --> 00:51:50,400
they're parsed in depends on the

1402
00:51:50,400 --> 00:51:52,240
implementation of the list now i suspect

1403
00:51:52,240 --> 00:51:53,920
that other things are the same

1404
00:51:53,920 --> 00:51:56,880
unless you add properties to to force an

1405
00:51:56,880 --> 00:51:57,839
order or

1406
00:51:57,839 --> 00:52:01,839
or mandate that the the parsed order be

1407
00:52:01,839 --> 00:52:05,359
maintained implementations stand a

1408
00:52:05,359 --> 00:52:07,599
chance of losing that

1409
00:52:07,599 --> 00:52:09,680
so you make some other update to

1410
00:52:09,680 --> 00:52:11,680
something and then store it back and you

1411
00:52:11,680 --> 00:52:12,640
find

1412
00:52:12,640 --> 00:52:18,079
some properties will have changed order

1413
00:52:18,079 --> 00:52:21,200
i mean i ca ical specifically says i

1414
00:52:21,200 --> 00:52:21,599
think

1415
00:52:21,599 --> 00:52:23,920
somewhere in the thing that you know

1416
00:52:23,920 --> 00:52:26,800
order is not

1417
00:52:26,960 --> 00:52:30,000
defined anywhere

1418
00:52:30,720 --> 00:52:32,480
yeah that's basically the question

1419
00:52:32,480 --> 00:52:34,079
currently if

1420
00:52:34,079 --> 00:52:36,480
if clients are displaying vcard do they

1421
00:52:36,480 --> 00:52:37,920
typically tend to

1422
00:52:37,920 --> 00:52:40,319
display them in order of the i don't

1423
00:52:40,319 --> 00:52:42,319
know um

1424
00:52:42,319 --> 00:52:45,680
email property or whatever um and

1425
00:52:45,680 --> 00:52:47,680
so is it more important that we can

1426
00:52:47,680 --> 00:52:49,680
preserve this order or because it's how

1427
00:52:49,680 --> 00:52:50,720
it's currently done

1428
00:52:50,720 --> 00:52:53,839
or if you are saying if what you are i

1429
00:52:53,839 --> 00:52:55,040
think i'm saying that they

1430
00:52:55,040 --> 00:52:57,359
are ignoring order anyway i think that's

1431
00:52:57,359 --> 00:52:58,480
what i'm saying is that i think the

1432
00:52:58,480 --> 00:52:59,280
libraries

1433
00:52:59,280 --> 00:53:02,480
are not explicitly attempting to retain

1434
00:53:02,480 --> 00:53:03,200
order

1435
00:53:03,200 --> 00:53:06,400
so it it's likely that it will it it'll

1436
00:53:06,400 --> 00:53:06,800
change

1437
00:53:06,800 --> 00:53:08,480
i mean i guess some people are assuming

1438
00:53:08,480 --> 00:53:10,640
and maybe by chance it's sort of staying

1439
00:53:10,640 --> 00:53:11,839
that way but i don't think it's

1440
00:53:11,839 --> 00:53:16,558
explicitly specified anywhere

1441
00:53:19,920 --> 00:53:22,960
okay so that would that would speak i

1442
00:53:22,960 --> 00:53:24,640
mean we don't need to make the decision

1443
00:53:24,640 --> 00:53:25,440
now but

1444
00:53:25,440 --> 00:53:27,760
i hear that it might make more sense to

1445
00:53:27,760 --> 00:53:28,880
use sets with

1446
00:53:28,880 --> 00:53:32,000
some um artificial

1447
00:53:32,000 --> 00:53:34,400
identifier like we are doing in js

1448
00:53:34,400 --> 00:53:36,240
calendar for example

1449
00:53:36,240 --> 00:53:39,599
right yeah uh also

1450
00:53:39,599 --> 00:53:43,119
to mike's point i i don't think clients

1451
00:53:43,119 --> 00:53:45,599
preserve an entire sort order what i

1452
00:53:45,599 --> 00:53:46,480
have seen

1453
00:53:46,480 --> 00:53:48,800
is there's there's the pref parameter

1454
00:53:48,800 --> 00:53:51,119
that you can put on certain properties

1455
00:53:51,119 --> 00:53:52,559
and i think you know in the case of

1456
00:53:52,559 --> 00:53:54,559
emails or phone numbers your clients

1457
00:53:54,559 --> 00:53:55,920
will let you specify which is your

1458
00:53:55,920 --> 00:53:57,119
preferred

1459
00:53:57,119 --> 00:53:59,280
even though you could you could actually

1460
00:53:59,280 --> 00:54:00,800
specify an order

1461
00:54:00,800 --> 00:54:03,280
by by varying the the pref values i

1462
00:54:03,280 --> 00:54:03,839
think

1463
00:54:03,839 --> 00:54:05,520
a lot of clients just specify whichever

1464
00:54:05,520 --> 00:54:07,920
their top choice is and that one always

1465
00:54:07,920 --> 00:54:10,319
gets sorted to the top i don't know if

1466
00:54:10,319 --> 00:54:10,960
you can sort

1467
00:54:10,960 --> 00:54:13,040
all six oh yeah there is the pref thing

1468
00:54:13,040 --> 00:54:14,160
isn't there

1469
00:54:14,160 --> 00:54:18,000
um and which is

1470
00:54:18,000 --> 00:54:20,400
you could you could technically sort the

1471
00:54:20,400 --> 00:54:22,079
entire list just by using pref but i

1472
00:54:22,079 --> 00:54:23,359
don't think anybody does that i think

1473
00:54:23,359 --> 00:54:24,079
they just choose

1474
00:54:24,079 --> 00:54:27,760
one that that floats to the top

1475
00:54:28,640 --> 00:54:31,760
um mario i don't recall at this point um

1476
00:54:31,760 --> 00:54:35,119
i think we we keep the pref

1477
00:54:35,119 --> 00:54:37,680
um parameter in v card but uh at the top

1478
00:54:37,680 --> 00:54:39,200
of my head i don't um

1479
00:54:39,200 --> 00:54:41,280
know how we are exactly mapping it do

1480
00:54:41,280 --> 00:54:43,040
you know

1481
00:54:43,040 --> 00:54:46,079
no we are not keeping the

1482
00:54:46,079 --> 00:54:49,440
breath parameter we only

1483
00:54:49,440 --> 00:54:53,359
map the ref parameter as the boolean

1484
00:54:53,359 --> 00:54:58,078
is preferred or not oh

1485
00:54:58,319 --> 00:55:01,280
oh yeah version sorry we met the

1486
00:55:01,280 --> 00:55:04,000
information that

1487
00:55:04,000 --> 00:55:07,680
the item identified by the pref

1488
00:55:07,680 --> 00:55:08,400
parameter

1489
00:55:08,400 --> 00:55:13,440
equal one is the preferred one oh yeah

1490
00:55:13,680 --> 00:55:18,000
so yes the other are not preferred

1491
00:55:18,000 --> 00:55:21,839
all in the same way so

1492
00:55:23,280 --> 00:55:26,079
right so it's a numeric value in in v

1493
00:55:26,079 --> 00:55:27,440
card actually so it's

1494
00:55:27,440 --> 00:55:30,079
it's kind of kind of the sort other

1495
00:55:30,079 --> 00:55:30,720
property

1496
00:55:30,720 --> 00:55:34,240
anyway yeah yeah well it's a sort of a

1497
00:55:34,240 --> 00:55:37,359
i mean i i even if it wasn't treated as

1498
00:55:37,359 --> 00:55:38,400
fully as a sort

1499
00:55:38,400 --> 00:55:42,000
order i i see why you want um

1500
00:55:42,000 --> 00:55:44,480
the numeric because you know try this

1501
00:55:44,480 --> 00:55:46,480
phone number first and if that fails try

1502
00:55:46,480 --> 00:55:48,640
this one and then try that one

1503
00:55:48,640 --> 00:55:51,680
so i think that's probably what the the

1504
00:55:51,680 --> 00:55:52,799
point of the

1505
00:55:52,799 --> 00:55:55,839
the numeric thing is

1506
00:55:57,040 --> 00:55:59,680
yeah i mean i think that's i think we

1507
00:55:59,680 --> 00:56:02,720
can switch to that model um

1508
00:56:02,720 --> 00:56:05,680
i would be i'd be wary about removing

1509
00:56:05,680 --> 00:56:06,960
things like that which would

1510
00:56:06,960 --> 00:56:10,240
possibly have a a a use and

1511
00:56:10,240 --> 00:56:11,839
we just we just don't know if people are

1512
00:56:11,839 --> 00:56:13,520
making use of that

1513
00:56:13,520 --> 00:56:15,839
and and what you end up doing is is just

1514
00:56:15,839 --> 00:56:17,839
adding an incompatibility that

1515
00:56:17,839 --> 00:56:20,160
it probably isn't necessary to do so

1516
00:56:20,160 --> 00:56:20,880
okay

1517
00:56:20,880 --> 00:56:23,599
then i would say we will check for the

1518
00:56:23,599 --> 00:56:25,440
lists properties uh

1519
00:56:25,440 --> 00:56:28,000
which of them uh have a pref parameter

1520
00:56:28,000 --> 00:56:30,079
in vcard at this moment

1521
00:56:30,079 --> 00:56:33,280
um and for any which have not we can

1522
00:56:33,280 --> 00:56:34,480
then still decide

1523
00:56:34,480 --> 00:56:36,240
if we want to switch to the same model

1524
00:56:36,240 --> 00:56:39,118
or or not

1525
00:56:41,680 --> 00:56:44,960
yeah yeah that model sounds good

1526
00:56:44,960 --> 00:56:47,680
you can assign the prefer the breath

1527
00:56:47,680 --> 00:56:49,359
parameter

1528
00:56:49,359 --> 00:56:52,319
almost uh

1529
00:56:52,799 --> 00:56:59,359
all the elements so

1530
00:56:59,359 --> 00:57:03,839
and maybe

1531
00:57:04,079 --> 00:57:08,480
i have to check but probably all the

1532
00:57:08,480 --> 00:57:12,720
elements here this

1533
00:57:12,720 --> 00:57:16,799
shown as list can can be assigned a prep

1534
00:57:16,799 --> 00:57:19,440
parameter

1535
00:57:20,319 --> 00:57:24,079
a numeric parameter oh yes that's yes

1536
00:57:24,079 --> 00:57:26,160
that's what i think

1537
00:57:26,160 --> 00:57:27,680
using the same pattern for everything

1538
00:57:27,680 --> 00:57:30,319
makes sense and simplifies it for

1539
00:57:30,319 --> 00:57:31,839
client developers who are just working

1540
00:57:31,839 --> 00:57:33,760
in js contact world so

1541
00:57:33,760 --> 00:57:36,160
i quite like that the other thing that

1542
00:57:36,160 --> 00:57:38,480
exists

1543
00:57:39,599 --> 00:57:43,680
well that's not a multi-valued thing is

1544
00:57:43,680 --> 00:57:45,119
it

1545
00:57:45,119 --> 00:57:48,240
um preferred birthday is it the 28th of

1546
00:57:48,240 --> 00:57:51,520
february or the 1st of march

1547
00:57:52,000 --> 00:57:54,960
if you live in the middle there um i

1548
00:57:54,960 --> 00:57:56,559
have

1549
00:57:56,559 --> 00:57:59,839
seen in the wild cards that have

1550
00:57:59,839 --> 00:58:02,400
grouping constructs ahead of the the

1551
00:58:02,400 --> 00:58:03,760
keys

1552
00:58:03,760 --> 00:58:06,720
so that that allows you to group related

1553
00:58:06,720 --> 00:58:08,480
fields together

1554
00:58:08,480 --> 00:58:10,640
do we have support for that in here

1555
00:58:10,640 --> 00:58:12,079
because that that's also going to be

1556
00:58:12,079 --> 00:58:13,839
something that that gives us sorting of

1557
00:58:13,839 --> 00:58:15,680
some sort

1558
00:58:15,680 --> 00:58:17,680
i'll see if i can find some examples

1559
00:58:17,680 --> 00:58:23,839
yeah that would be great

1560
00:58:29,359 --> 00:58:32,000
to bronze point about making making this

1561
00:58:32,000 --> 00:58:33,200
a generic

1562
00:58:33,200 --> 00:58:36,319
construct i i agree with that because

1563
00:58:36,319 --> 00:58:38,960
i think vcard also lets you sort full

1564
00:58:38,960 --> 00:58:40,480
names and nicknames and other things

1565
00:58:40,480 --> 00:58:40,720
that

1566
00:58:40,720 --> 00:58:43,759
aren't currently on this list

1567
00:58:44,559 --> 00:58:48,160
yeah for so for for names uh and

1568
00:58:48,160 --> 00:58:51,839
and that we are kind of switching to a

1569
00:58:51,839 --> 00:58:53,520
to a different model but we can of

1570
00:58:53,520 --> 00:58:55,200
course um see

1571
00:58:55,200 --> 00:58:57,440
if and how to preserve preference there

1572
00:58:57,440 --> 00:58:58,799
but i agree that

1573
00:58:58,799 --> 00:59:00,799
for the general case we should have a

1574
00:59:00,799 --> 00:59:03,200
generic um

1575
00:59:03,200 --> 00:59:05,599
we should have the same approach now and

1576
00:59:05,599 --> 00:59:06,319
not

1577
00:59:06,319 --> 00:59:09,920
many for different object types

1578
00:59:10,400 --> 00:59:14,880
um all right

1579
00:59:14,880 --> 00:59:16,640
all right i just wanted to make one

1580
00:59:16,640 --> 00:59:18,000
short point here so first

1581
00:59:18,000 --> 00:59:19,839
of all from from my practical experience

1582
00:59:19,839 --> 00:59:21,200
so far i don't know

1583
00:59:21,200 --> 00:59:23,599
many tools or web uis of contacts that

1584
00:59:23,599 --> 00:59:24,960
really

1585
00:59:24,960 --> 00:59:26,559
preserve some sort of order what they

1586
00:59:26,559 --> 00:59:28,559
mainly do is they show the field fields

1587
00:59:28,559 --> 00:59:30,480
first for instance or they may prefer

1588
00:59:30,480 --> 00:59:32,799
the homework over other fields

1589
00:59:32,799 --> 00:59:35,200
like in addresses or something like that

1590
00:59:35,200 --> 00:59:36,160
um

1591
00:59:36,160 --> 00:59:38,000
i so that so i also don't think many

1592
00:59:38,000 --> 00:59:39,520
clients would actually use that

1593
00:59:39,520 --> 00:59:42,000
possibility of rearranging that stuff

1594
00:59:42,000 --> 00:59:44,559
also if many users would make the effort

1595
00:59:44,559 --> 00:59:46,640
of sorting email addresses in a large

1596
00:59:46,640 --> 00:59:47,599
extent

1597
00:59:47,599 --> 00:59:50,640
i sort of maybe doubt

1598
00:59:50,640 --> 00:59:52,640
and i see there is there's actually

1599
00:59:52,640 --> 00:59:54,160
three solutions here in the room right

1600
00:59:54,160 --> 00:59:55,200
now there is these

1601
00:59:55,200 --> 00:59:58,960
lists like here there is this numerical

1602
00:59:58,960 --> 01:00:00,079
thing somebody proposed

1603
01:00:00,079 --> 01:00:01,520
and there might be something like more

1604
01:00:01,520 --> 01:00:03,200
like a star or pref

1605
01:00:03,200 --> 01:00:05,520
approach where i can maybe individually

1606
01:00:05,520 --> 01:00:06,480
um

1607
01:00:06,480 --> 01:00:08,480
select one or two really favorites or

1608
01:00:08,480 --> 01:00:09,680
something like that

1609
01:00:09,680 --> 01:00:12,480
um i think one disadvantage of this list

1610
01:00:12,480 --> 01:00:14,000
like it is proposed here in a way

1611
01:00:14,000 --> 01:00:16,400
i think so somehow is that users might

1612
01:00:16,400 --> 01:00:18,400
be confused not to know if it's really

1613
01:00:18,400 --> 01:00:19,599
sorted

1614
01:00:19,599 --> 01:00:22,079
um because you know if if they just see

1615
01:00:22,079 --> 01:00:23,680
the list they might not remember if they

1616
01:00:23,680 --> 01:00:26,000
did that deliberately

1617
01:00:26,000 --> 01:00:28,160
maybe that as a point a little bit

1618
01:00:28,160 --> 01:00:29,200
cautioning against

1619
01:00:29,200 --> 01:00:32,400
um the way it's written here i'm also

1620
01:00:32,400 --> 01:00:34,640
not sure if the numerical approach

1621
01:00:34,640 --> 01:00:37,920
of really having an you know a dedicated

1622
01:00:37,920 --> 01:00:39,040
number for each

1623
01:00:39,040 --> 01:00:42,000
uh sorted thing is a way to go because

1624
01:00:42,000 --> 01:00:43,359
as i said i doubt a little bit that

1625
01:00:43,359 --> 01:00:44,960
people will make that effort for five

1626
01:00:44,960 --> 01:00:46,400
email addresses

1627
01:00:46,400 --> 01:00:48,960
to really assign a dedicated priority

1628
01:00:48,960 --> 01:00:50,480
for each of them so i think in terms of

1629
01:00:50,480 --> 01:00:52,319
usability at least my heart would be

1630
01:00:52,319 --> 01:00:53,200
probably for a

1631
01:00:53,200 --> 01:00:55,359
very simple favorite or star approach in

1632
01:00:55,359 --> 01:00:56,880
a way where i can select your favorite

1633
01:00:56,880 --> 01:00:58,559
one but

1634
01:00:58,559 --> 01:01:03,040
yeah that's just my point here

1635
01:01:03,040 --> 01:01:06,160
yeah i mean a numeric id would just be

1636
01:01:06,160 --> 01:01:09,680
a super super set solution of the

1637
01:01:09,680 --> 01:01:11,599
favorites right you can assign

1638
01:01:11,599 --> 01:01:13,440
the same numeric id for your favorites

1639
01:01:13,440 --> 01:01:14,880
but yeah

1640
01:01:14,880 --> 01:01:16,000
i think that's why you don't want to

1641
01:01:16,000 --> 01:01:18,640
over engineer it it's not it's not i

1642
01:01:18,640 --> 01:01:19,280
mean i don't know

1643
01:01:19,280 --> 01:01:21,599
what the the point i think of the

1644
01:01:21,599 --> 01:01:22,559
preference is not

1645
01:01:22,559 --> 01:01:25,599
to for for a viewer to nominate their

1646
01:01:25,599 --> 01:01:26,400
favorite

1647
01:01:26,400 --> 01:01:29,280
it's for the it's for the person who's

1648
01:01:29,280 --> 01:01:30,559
been referred to

1649
01:01:30,559 --> 01:01:32,799
to specify ways in which they may be

1650
01:01:32,799 --> 01:01:34,000
contacted and to

1651
01:01:34,000 --> 01:01:37,200
prioritize them is is more about what

1652
01:01:37,200 --> 01:01:38,000
we're talking about so

1653
01:01:38,000 --> 01:01:40,640
when you have multiple emails you might

1654
01:01:40,640 --> 01:01:42,079
well want to order them

1655
01:01:42,079 --> 01:01:44,799
as the one you should use this one for

1656
01:01:44,799 --> 01:01:45,280
uh

1657
01:01:45,280 --> 01:01:47,359
for contact i mean if that fails fall

1658
01:01:47,359 --> 01:01:48,960
back this other one

1659
01:01:48,960 --> 01:01:50,720
so i think that there is a point in the

1660
01:01:50,720 --> 01:01:52,319
ordering but it's not just a matter of

1661
01:01:52,319 --> 01:01:53,920
convenience or which is your favorite

1662
01:01:53,920 --> 01:01:55,760
one to use

1663
01:01:55,760 --> 01:01:57,920
but is that really the case mike like i

1664
01:01:57,920 --> 01:01:59,760
mean for organizations like would there

1665
01:01:59,760 --> 01:02:00,799
be

1666
01:02:00,799 --> 01:02:02,799
would i use that to define which

1667
01:02:02,799 --> 01:02:04,400
organization

1668
01:02:04,400 --> 01:02:06,480
what would it mean in that sense and i

1669
01:02:06,480 --> 01:02:07,839
mean even for email addresses you

1670
01:02:07,839 --> 01:02:08,880
typically

1671
01:02:08,880 --> 01:02:11,599
you have like work home or something and

1672
01:02:11,599 --> 01:02:13,599
the person that wants to contact you

1673
01:02:13,599 --> 01:02:16,880
decides on on her own if if there is a

1674
01:02:16,880 --> 01:02:17,440
work

1675
01:02:17,440 --> 01:02:21,359
uh contacts or a whole it's a home

1676
01:02:21,359 --> 01:02:22,480
purpose

1677
01:02:22,480 --> 01:02:24,240
and you rather seldomly will use

1678
01:02:24,240 --> 01:02:25,920
multiple work addresses

1679
01:02:25,920 --> 01:02:29,359
email addresses in your uh uh

1680
01:02:29,359 --> 01:02:30,799
they're they're all good points the

1681
01:02:30,799 --> 01:02:32,240
problem i have with this kind of

1682
01:02:32,240 --> 01:02:33,359
discussion is

1683
01:02:33,359 --> 01:02:34,880
there have been years and years of

1684
01:02:34,880 --> 01:02:36,640
discussion on on

1685
01:02:36,640 --> 01:02:39,520
creating a vcard and this stuff has been

1686
01:02:39,520 --> 01:02:40,720
hashed out by

1687
01:02:40,720 --> 01:02:43,359
by people in hours and hours and hours

1688
01:02:43,359 --> 01:02:44,720
of discussion

1689
01:02:44,720 --> 01:02:46,720
we can we can simply put that aside and

1690
01:02:46,720 --> 01:02:48,400
say we don't think there's a use for it

1691
01:02:48,400 --> 01:02:49,839
but on the other hand at the time they

1692
01:02:49,839 --> 01:02:51,440
thought there was and perhaps there

1693
01:02:51,440 --> 01:02:52,160
still is

1694
01:02:52,160 --> 01:02:54,319
i don't i don't object to trying to trim

1695
01:02:54,319 --> 01:02:56,000
the thing down if you want to but on the

1696
01:02:56,000 --> 01:02:56,720
other hand

1697
01:02:56,720 --> 01:02:58,480
simply discarding stuff because you at

1698
01:02:58,480 --> 01:03:01,119
the moment you can't see a need for it

1699
01:03:01,119 --> 01:03:02,480
opens yourself the possibility of

1700
01:03:02,480 --> 01:03:04,559
finding field implemented it with those

1701
01:03:04,559 --> 01:03:05,760
features in

1702
01:03:05,760 --> 01:03:06,960
and now you can't now you're not

1703
01:03:06,960 --> 01:03:09,440
supporting them i i would say

1704
01:03:09,440 --> 01:03:11,119
yeah i would certainly agree with your

1705
01:03:11,119 --> 01:03:12,880
point mike on on

1706
01:03:12,880 --> 01:03:14,319
putting some effort on competit

1707
01:03:14,319 --> 01:03:16,000
compatibility with which

1708
01:03:16,000 --> 01:03:19,039
with what is already the nv card because

1709
01:03:19,039 --> 01:03:21,520
there is a lot of stuff in the wild so

1710
01:03:21,520 --> 01:03:23,119
certainly

1711
01:03:23,119 --> 01:03:26,000
that's the point and that's i i think

1712
01:03:26,000 --> 01:03:27,920
the the cost of implementation is pretty

1713
01:03:27,920 --> 01:03:28,880
low

1714
01:03:28,880 --> 01:03:31,200
we we can spend our time filtering this

1715
01:03:31,200 --> 01:03:32,400
stuff out until you're starting whether

1716
01:03:32,400 --> 01:03:33,440
it's good or not but

1717
01:03:33,440 --> 01:03:35,520
i i think we should more or less say

1718
01:03:35,520 --> 01:03:37,119
let's just do it because it's already

1719
01:03:37,119 --> 01:03:38,880
there

1720
01:03:38,880 --> 01:03:40,480
the other thing with that is that we can

1721
01:03:40,480 --> 01:03:41,920
then use that

1722
01:03:41,920 --> 01:03:43,599
for things where there is more need for

1723
01:03:43,599 --> 01:03:45,440
ordering if we run into them later

1724
01:03:45,440 --> 01:03:46,960
we've got a standard method that works

1725
01:03:46,960 --> 01:03:48,960
across everything and a simple client

1726
01:03:48,960 --> 01:03:51,119
can just treat any value there as being

1727
01:03:51,119 --> 01:03:52,960
preference and sort it to the top and

1728
01:03:52,960 --> 01:03:59,839
and not actually care

1729
01:04:02,240 --> 01:04:05,520
okay quickly to follow on mike's point

1730
01:04:05,520 --> 01:04:08,720
um i agree with what he said but

1731
01:04:08,720 --> 01:04:10,319
if we are going to remove things we may

1732
01:04:10,319 --> 01:04:12,400
want to consider

1733
01:04:12,400 --> 01:04:15,039
try to come up with the reasons why

1734
01:04:15,039 --> 01:04:16,559
vcard 4 wasn't

1735
01:04:16,559 --> 01:04:19,599
as widely adopted as as three was it

1736
01:04:19,599 --> 01:04:21,359
because the stuff that was added before

1737
01:04:21,359 --> 01:04:22,640
wasn't useful

1738
01:04:22,640 --> 01:04:24,400
or was it laziness or was there some

1739
01:04:24,400 --> 01:04:26,400
other reason and that might

1740
01:04:26,400 --> 01:04:29,520
help inform us as to what may be able to

1741
01:04:29,520 --> 01:04:30,880
be trimmed out

1742
01:04:30,880 --> 01:04:34,400
of the current d-card specs

1743
01:04:36,640 --> 01:04:40,160
card 4 trimmed anything it actually

1744
01:04:40,160 --> 01:04:44,000
added quite a bit of stuff and and

1745
01:04:44,000 --> 01:04:46,799
and it the reason for vcard 4 is

1746
01:04:46,799 --> 01:04:49,119
actually well documented because

1747
01:04:49,119 --> 01:04:52,400
years ago in in car connect we had a

1748
01:04:52,400 --> 01:04:54,799
workshop and there are a whole bunch of

1749
01:04:54,799 --> 01:04:56,079
bullet points on

1750
01:04:56,079 --> 01:04:59,359
um why we needed to a new version of

1751
01:04:59,359 --> 01:05:00,480
vcard

1752
01:05:00,480 --> 01:05:03,119
and unfortunately all those bullet

1753
01:05:03,119 --> 01:05:04,000
points

1754
01:05:04,000 --> 01:05:07,280
still apply um

1755
01:05:07,280 --> 01:05:10,480
you know the inadequate sort ordering

1756
01:05:10,480 --> 01:05:12,240
names coming out in the wrong order not

1757
01:05:12,240 --> 01:05:13,680
being able to determine things were the

1758
01:05:13,680 --> 01:05:14,720
right way around

1759
01:05:14,720 --> 01:05:17,039
uh uid is missing so you got

1760
01:05:17,039 --> 01:05:18,799
duplications and all the rest of it

1761
01:05:18,799 --> 01:05:21,839
so vcard four's a better model to follow

1762
01:05:21,839 --> 01:05:23,440
because it tried to address

1763
01:05:23,440 --> 01:05:26,240
a lot of known deficiencies as to why

1764
01:05:26,240 --> 01:05:27,839
nobody did it

1765
01:05:27,839 --> 01:05:31,280
it's i they the best reason that i've

1766
01:05:31,280 --> 01:05:31,760
heard

1767
01:05:31,760 --> 01:05:35,280
is stated is that vcard 4 didn't provide

1768
01:05:35,280 --> 01:05:36,000
enough

1769
01:05:36,000 --> 01:05:39,200
enough value to justify the the

1770
01:05:39,200 --> 01:05:43,038
time and effort of moving forward

1771
01:05:43,920 --> 01:05:46,160
people found workarounds like adding you

1772
01:05:46,160 --> 01:05:48,799
know like apple adds a next property

1773
01:05:48,799 --> 01:05:52,480
uid and uses that and for most the

1774
01:05:52,480 --> 01:05:55,680
cases it works fine but

1775
01:05:55,680 --> 01:05:59,280
i gotta say vcard three in practice is

1776
01:05:59,280 --> 01:06:01,280
pretty much of a disaster if you try and

1777
01:06:01,280 --> 01:06:05,440
move data around okay yeah so you you

1778
01:06:05,440 --> 01:06:07,280
you answer my question right so if vcard

1779
01:06:07,280 --> 01:06:09,440
4 is the better model let's follow that

1780
01:06:09,440 --> 01:06:11,680
i think i think it is it's just inertia

1781
01:06:11,680 --> 01:06:13,920
and this is the opportunity to actually

1782
01:06:13,920 --> 01:06:16,839
get ourselves to a better data model

1783
01:06:16,839 --> 01:06:19,839
um yes so

1784
01:06:19,839 --> 01:06:22,640
for the specific topic in question for

1785
01:06:22,640 --> 01:06:23,039
for

1786
01:06:23,039 --> 01:06:25,839
list types versus sets um i i very much

1787
01:06:25,839 --> 01:06:26,960
hear

1788
01:06:26,960 --> 01:06:30,160
that uh we will switch to a couple

1789
01:06:30,160 --> 01:06:32,559
a couple of these properties to sets um

1790
01:06:32,559 --> 01:06:34,480
and using a numeric

1791
01:06:34,480 --> 01:06:37,200
preference or however we might call it

1792
01:06:37,200 --> 01:06:37,920
um

1793
01:06:37,920 --> 01:06:42,480
firstly because it allows us to um

1794
01:06:42,480 --> 01:06:45,280
to be compatible with the vcord pref

1795
01:06:45,280 --> 01:06:46,160
parameter

1796
01:06:46,160 --> 01:06:48,319
and also because it's the most versatile

1797
01:06:48,319 --> 01:06:49,680
and

1798
01:06:49,680 --> 01:06:52,160
doesn't really make things that much

1799
01:06:52,160 --> 01:06:53,680
more difficult than

1800
01:06:53,680 --> 01:06:57,359
a simple favorite approach

1801
01:06:59,280 --> 01:07:03,520
good um i'd say let's switch to the next

1802
01:07:03,520 --> 01:07:04,480
slide um

1803
01:07:04,480 --> 01:07:06,640
because i think we will explain some

1804
01:07:06,640 --> 01:07:07,920
questions just before we go on were

1805
01:07:07,920 --> 01:07:09,680
there any strong objections to that

1806
01:07:09,680 --> 01:07:13,280
okay i i didn't there was a bunch of

1807
01:07:13,280 --> 01:07:14,319
discussion on that

1808
01:07:14,319 --> 01:07:18,480
um hans york in particular do you have

1809
01:07:18,720 --> 01:07:20,559
do you want to want to say that you

1810
01:07:20,559 --> 01:07:22,480
disagree with that or are you happy with

1811
01:07:22,480 --> 01:07:23,520
it

1812
01:07:23,520 --> 01:07:27,599
no no i'm happy i i was just making some

1813
01:07:27,599 --> 01:07:30,319
you know remarks cool all right thank

1814
01:07:30,319 --> 01:07:30,960
you

1815
01:07:30,960 --> 01:07:33,680
let's keep going

1816
01:07:36,559 --> 01:07:42,960
okay so next slide please

1817
01:07:42,960 --> 01:07:44,180
okay so um

1818
01:07:44,180 --> 01:07:46,160
[Music]

1819
01:07:46,160 --> 01:07:48,240
names and addresses but especially

1820
01:07:48,240 --> 01:07:50,240
addresses um

1821
01:07:50,240 --> 01:07:53,680
so for for names we already um

1822
01:07:53,680 --> 01:07:56,799
previously um decided that we are

1823
01:07:56,799 --> 01:08:00,000
that instead of having a a complex

1824
01:08:00,000 --> 01:08:00,640
object

1825
01:08:00,640 --> 01:08:03,280
that has fields like first name surname

1826
01:08:03,280 --> 01:08:04,000
whatever

1827
01:08:04,000 --> 01:08:07,119
uh we'll switch to a we switch to a more

1828
01:08:07,119 --> 01:08:10,319
generic approach which is

1829
01:08:10,319 --> 01:08:13,359
where a name is basically defined by

1830
01:08:13,359 --> 01:08:16,719
a list of tag tag values

1831
01:08:16,719 --> 01:08:19,198
so a tag would be personal name and its

1832
01:08:19,198 --> 01:08:21,439
value would be

1833
01:08:21,439 --> 01:08:25,279
robert um uh we did that

1834
01:08:25,279 --> 01:08:29,040
mainly because we saw that there are uh

1835
01:08:29,040 --> 01:08:32,319
that names are

1836
01:08:32,319 --> 01:08:35,839
very much different between cultures um

1837
01:08:35,839 --> 01:08:39,679
and this approach allows to

1838
01:08:39,679 --> 01:08:42,560
to express hopefully the the majority of

1839
01:08:42,560 --> 01:08:42,960
them

1840
01:08:42,960 --> 01:08:44,799
in a more meaningful way than it's

1841
01:08:44,799 --> 01:08:46,080
currently done

1842
01:08:46,080 --> 01:08:49,600
um and it also allows to still generate

1843
01:08:49,600 --> 01:08:50,080
a

1844
01:08:50,080 --> 01:08:53,120
complete name by

1845
01:08:53,120 --> 01:08:56,719
generating a string out of the value of

1846
01:08:56,719 --> 01:08:57,040
the

1847
01:08:57,040 --> 01:09:00,399
of these tag name components in order

1848
01:09:00,399 --> 01:09:03,359
um in addition to that we still have a

1849
01:09:03,359 --> 01:09:05,600
full name property

1850
01:09:05,600 --> 01:09:08,479
which is a localized string that's both

1851
01:09:08,479 --> 01:09:09,040
because

1852
01:09:09,040 --> 01:09:12,158
we we we have v cards which

1853
01:09:12,158 --> 01:09:14,158
do not have an n property so a

1854
01:09:14,158 --> 01:09:15,759
structured name at all

1855
01:09:15,759 --> 01:09:19,198
and only an fn property so we so we want

1856
01:09:19,198 --> 01:09:20,719
to preserve that

1857
01:09:20,719 --> 01:09:22,640
um but the other thing and that's why

1858
01:09:22,640 --> 01:09:24,479
it's a low clustering is that we want to

1859
01:09:24,479 --> 01:09:26,799
have a full name which allows to

1860
01:09:26,799 --> 01:09:30,238
express the name in in in the locality

1861
01:09:30,238 --> 01:09:31,279
of the

1862
01:09:31,279 --> 01:09:34,238
uh of the contact or probably even

1863
01:09:34,238 --> 01:09:35,198
several

1864
01:09:35,198 --> 01:09:37,580
several ways um

1865
01:09:37,580 --> 01:09:39,279
[Music]

1866
01:09:39,279 --> 01:09:41,679
so that's for name and i think we

1867
01:09:41,679 --> 01:09:43,439
already had the decision here but of

1868
01:09:43,439 --> 01:09:45,520
course if there are

1869
01:09:45,520 --> 01:09:47,359
thoughts or objections to that now

1870
01:09:47,359 --> 01:09:48,799
please let me know

1871
01:09:48,799 --> 01:09:51,839
um but the the other

1872
01:09:51,839 --> 01:09:55,120
um the other

1873
01:09:55,120 --> 01:09:57,520
the other object are addresses and there

1874
01:09:57,520 --> 01:09:58,640
we had them

1875
01:09:58,640 --> 01:10:00,960
push back the decision how to express

1876
01:10:00,960 --> 01:10:01,679
them

1877
01:10:01,679 --> 01:10:03,600
using a complex type or was a detect

1878
01:10:03,600 --> 01:10:05,120
value approach for a long time

1879
01:10:05,120 --> 01:10:08,159
um i still would say we still haven't a

1880
01:10:08,159 --> 01:10:09,199
hundred percent

1881
01:10:09,199 --> 01:10:12,239
um decided yet but at the moment

1882
01:10:12,239 --> 01:10:15,440
um we think that a complex type for an

1883
01:10:15,440 --> 01:10:17,520
address that more speaks for a complex

1884
01:10:17,520 --> 01:10:19,120
type of an address

1885
01:10:19,120 --> 01:10:22,239
so um why is that um we think that

1886
01:10:22,239 --> 01:10:23,199
addresses

1887
01:10:23,199 --> 01:10:26,400
are um

1888
01:10:26,400 --> 01:10:28,560
that for addresses we want to enforce

1889
01:10:28,560 --> 01:10:29,520
more structure

1890
01:10:29,520 --> 01:10:32,800
because we assume that um that

1891
01:10:32,800 --> 01:10:35,120
it's it's that the clients and

1892
01:10:35,120 --> 01:10:36,080
applications

1893
01:10:36,080 --> 01:10:38,800
will ex more we'll expect more structure

1894
01:10:38,800 --> 01:10:40,800
there than foreign name

1895
01:10:40,800 --> 01:10:44,560
um and so

1896
01:10:44,560 --> 01:10:47,199
in either case either you if you use the

1897
01:10:47,199 --> 01:10:49,679
tags or if we use properties like we do

1898
01:10:49,679 --> 01:10:50,159
now

1899
01:10:50,159 --> 01:10:53,120
we want to make sure that we capture all

1900
01:10:53,120 --> 01:10:55,360
different components that can make up an

1901
01:10:55,360 --> 01:10:57,920
address um and for that we of course

1902
01:10:57,920 --> 01:10:59,120
looked at e-card

1903
01:10:59,120 --> 01:11:02,480
but but we also looked at um at

1904
01:11:02,480 --> 01:11:06,000
apis uh of um major

1905
01:11:06,000 --> 01:11:10,000
major um uh commercial internet players

1906
01:11:10,000 --> 01:11:13,360
be that google microsoft or baidu um and

1907
01:11:13,360 --> 01:11:14,719
we came to

1908
01:11:14,719 --> 01:11:16,880
to the conclusion that um the current

1909
01:11:16,880 --> 01:11:18,080
model

1910
01:11:18,080 --> 01:11:20,640
seems to capture it captures at least

1911
01:11:20,640 --> 01:11:21,920
all the properties that they are

1912
01:11:21,920 --> 01:11:23,840
returning for addresses

1913
01:11:23,840 --> 01:11:27,520
now i i

1914
01:11:27,520 --> 01:11:31,280
i i came to this also with the thought

1915
01:11:31,280 --> 01:11:33,920
that many addresses addresses on this

1916
01:11:33,920 --> 01:11:35,679
world cannot be expressed

1917
01:11:35,679 --> 01:11:39,040
um with that scheme

1918
01:11:39,040 --> 01:11:41,520
but and and i also hear people saying

1919
01:11:41,520 --> 01:11:42,480
that and i'm not

1920
01:11:42,480 --> 01:11:44,320
necessarily doubting it but i've never

1921
01:11:44,320 --> 01:11:46,080
seen an example for that

1922
01:11:46,080 --> 01:11:48,560
so i think what we are lacking here is

1923
01:11:48,560 --> 01:11:49,920
is expertise

1924
01:11:49,920 --> 01:11:52,480
um so first of all it would be great for

1925
01:11:52,480 --> 01:11:53,280
example

1926
01:11:53,280 --> 01:11:56,560
mike um if if we could contact our

1927
01:11:56,560 --> 01:12:00,400
contact at cal connect um at dhl

1928
01:12:00,400 --> 01:12:03,360
who might bring more expertise into that

1929
01:12:03,360 --> 01:12:04,080
um

1930
01:12:04,080 --> 01:12:06,800
but also of course probably people here

1931
01:12:06,800 --> 01:12:08,000
in this session have

1932
01:12:08,000 --> 01:12:11,040
have more um experiences with

1933
01:12:11,040 --> 01:12:12,880
addresses that cannot be expressed in

1934
01:12:12,880 --> 01:12:14,719
the current model

1935
01:12:14,719 --> 01:12:18,080
uh yeah i mean that the person that um

1936
01:12:18,080 --> 01:12:22,800
to raise i mean that's essentially um

1937
01:12:22,800 --> 01:12:24,880
they've been the motivation for the iso

1938
01:12:24,880 --> 01:12:26,000
work on on this

1939
01:12:26,000 --> 01:12:30,080
is that it the v card representation

1940
01:12:30,080 --> 01:12:33,120
just doesn't work for many areas

1941
01:12:33,120 --> 01:12:34,800
that's correct i wanted to mention that

1942
01:12:34,800 --> 01:12:37,199
so we know there is uh work in iso on

1943
01:12:37,199 --> 01:12:37,600
that

1944
01:12:37,600 --> 01:12:39,520
um and i look forward to their

1945
01:12:39,520 --> 01:12:42,159
presentation at cali connect next month

1946
01:12:42,159 --> 01:12:45,360
um i looked at their approach um

1947
01:12:45,360 --> 01:12:49,120
and um it the way i understand it they

1948
01:12:49,120 --> 01:12:50,480
are

1949
01:12:50,480 --> 01:12:54,640
they are defining profiles um

1950
01:12:54,640 --> 01:12:58,239
and address profiles and each profile

1951
01:12:58,239 --> 01:12:58,800
can have

1952
01:12:58,800 --> 01:13:01,580
different um fields

1953
01:13:01,580 --> 01:13:03,120
[Music]

1954
01:13:03,120 --> 01:13:06,640
but i wonder if that would be

1955
01:13:06,640 --> 01:13:09,760
over complicate uh js contact so if you

1956
01:13:09,760 --> 01:13:10,640
would require

1957
01:13:10,640 --> 01:13:14,000
implementers to um to implement these

1958
01:13:14,000 --> 01:13:15,440
profiles

1959
01:13:15,440 --> 01:13:18,000
most likely as i understand being

1960
01:13:18,000 --> 01:13:20,239
defined in some profile registry

1961
01:13:20,239 --> 01:13:23,920
um i wonder um

1962
01:13:23,920 --> 01:13:25,760
i wonder if that's not too complex and

1963
01:13:25,760 --> 01:13:27,440
it rather scares away

1964
01:13:27,440 --> 01:13:30,800
people from using that format if i also

1965
01:13:30,800 --> 01:13:32,000
don't know if that iso standard

1966
01:13:32,000 --> 01:13:34,560
will be open um so i don't i don't have

1967
01:13:34,560 --> 01:13:36,480
enough information if we should just

1968
01:13:36,480 --> 01:13:39,440
take what they are doing because it's um

1969
01:13:39,440 --> 01:13:40,560
um

1970
01:13:40,560 --> 01:13:42,719
because i don't have enough well that

1971
01:13:42,719 --> 01:13:43,600
was part of

1972
01:13:43,600 --> 01:13:46,800
the the motivation behind

1973
01:13:46,800 --> 01:13:49,199
getting a liaison relationship with with

1974
01:13:49,199 --> 01:13:49,840
iso

1975
01:13:49,840 --> 01:13:52,000
that that we can as calcutta we can

1976
01:13:52,000 --> 01:13:53,600
publish these

1977
01:13:53,600 --> 01:13:56,400
uh these as calconet standards which

1978
01:13:56,400 --> 01:13:57,840
would be free and open

1979
01:13:57,840 --> 01:14:02,400
to use but the the the issue i think is

1980
01:14:02,400 --> 01:14:06,480
um that essentially this this lack of

1981
01:14:06,480 --> 01:14:09,360
uh usability of the addresses makes v

1982
01:14:09,360 --> 01:14:10,640
cards

1983
01:14:10,640 --> 01:14:14,239
unusable in certain certain areas and

1984
01:14:14,239 --> 01:14:17,440
a large in large areas so it just

1985
01:14:17,440 --> 01:14:20,719
seems a pity to to embed that

1986
01:14:20,719 --> 01:14:24,560
in in the in in a specification

1987
01:14:24,560 --> 01:14:27,040
i mean vcard 4 was supposed to address

1988
01:14:27,040 --> 01:14:28,400
some of

1989
01:14:28,400 --> 01:14:32,960
the issues but it again it's a very

1990
01:14:33,760 --> 01:14:36,880
western oriented european usa

1991
01:14:36,880 --> 01:14:39,440
oriented thoughts on how to structure

1992
01:14:39,440 --> 01:14:40,400
addresses

1993
01:14:40,400 --> 01:14:42,880
and and it simply doesn't apply in many

1994
01:14:42,880 --> 01:14:45,280
areas

1995
01:14:45,840 --> 01:14:48,880
so yeah i mean i also i also heard this

1996
01:14:48,880 --> 01:14:52,000
i mean wikipedia wikipedia not

1997
01:14:52,000 --> 01:14:54,000
necessarily always is a great source but

1998
01:14:54,000 --> 01:14:54,400
um

1999
01:14:54,400 --> 01:14:57,679
um as far as i understand from there and

2000
01:14:57,679 --> 01:15:00,239
also the universal postal um

2001
01:15:00,239 --> 01:15:04,080
uh um blob that they include um

2002
01:15:04,080 --> 01:15:07,280
there um it seems to me

2003
01:15:07,280 --> 01:15:10,080
and i'm i'm a diligent in that area that

2004
01:15:10,080 --> 01:15:11,920
that it that's not necessarily the case

2005
01:15:11,920 --> 01:15:12,239
that

2006
01:15:12,239 --> 01:15:15,199
that many addresses can't be expressed

2007
01:15:15,199 --> 01:15:16,960
internationally

2008
01:15:16,960 --> 01:15:18,880
so it would be really great to see to

2009
01:15:18,880 --> 01:15:20,239
have concrete

2010
01:15:20,239 --> 01:15:23,840
um either examples or at least

2011
01:15:23,840 --> 01:15:26,560
more concrete hints on what isn't

2012
01:15:26,560 --> 01:15:27,679
covered currently

2013
01:15:27,679 --> 01:15:30,320
okay let me try and contact you i'll try

2014
01:15:30,320 --> 01:15:31,440
and contact the dhl

2015
01:15:31,440 --> 01:15:33,360
person because they as they were

2016
01:15:33,360 --> 01:15:34,560
motivated enough

2017
01:15:34,560 --> 01:15:37,360
to to rejoin calcnet because of the

2018
01:15:37,360 --> 01:15:38,880
liaison relationship but

2019
01:15:38,880 --> 01:15:41,360
what was driving them was this this

2020
01:15:41,360 --> 01:15:43,199
problem with addresses

2021
01:15:43,199 --> 01:15:45,679
so um i'll see if i can contact them and

2022
01:15:45,679 --> 01:15:47,360
find out what it was

2023
01:15:47,360 --> 01:15:49,199
specifically that they they had as a

2024
01:15:49,199 --> 01:15:51,360
problem but it's significant enough that

2025
01:15:51,360 --> 01:15:52,480
they they

2026
01:15:52,480 --> 01:15:55,679
they rejoin yeah cool

2027
01:15:55,679 --> 01:15:58,800
so um then i would um then i

2028
01:15:58,800 --> 01:16:02,080
look forward to this um to this

2029
01:16:02,080 --> 01:16:04,480
and also probably we can talk with them

2030
01:16:04,480 --> 01:16:05,199
at next

2031
01:16:05,199 --> 01:16:08,880
connector uh yeah if we can get them to

2032
01:16:08,880 --> 01:16:11,679
yeah we'll try

2033
01:16:16,080 --> 01:16:18,159
great thanks no i'm just putting myself

2034
01:16:18,159 --> 01:16:20,400
back in i realized of my video and sound

2035
01:16:20,400 --> 01:16:22,320
got turned off when i

2036
01:16:22,320 --> 01:16:24,480
got reset by the system so i thought i

2037
01:16:24,480 --> 01:16:27,440
should pop back in here so that i

2038
01:16:27,440 --> 01:16:31,199
can more easily respond quickly

2039
01:16:31,360 --> 01:16:35,839
okay um

2040
01:16:35,920 --> 01:16:39,120
so i would say for addresses um

2041
01:16:39,120 --> 01:16:42,000
i don't think we're yet at the point

2042
01:16:42,000 --> 01:16:45,520
where to make a hard decision on um

2043
01:16:45,520 --> 01:16:47,520
on how to do how to define them in shame

2044
01:16:47,520 --> 01:16:49,600
up in cheers contacts

2045
01:16:49,600 --> 01:16:53,199
um but i think

2046
01:16:53,199 --> 01:16:55,199
we won't ever be able to do that if we

2047
01:16:55,199 --> 01:16:56,560
don't really

2048
01:16:56,560 --> 01:17:01,360
um if don't really get the experts

2049
01:17:01,360 --> 01:17:05,120
at the table so at the moment i i hear

2050
01:17:05,120 --> 01:17:06,159
that

2051
01:17:06,159 --> 01:17:08,080
it seems to me that the people who are

2052
01:17:08,080 --> 01:17:09,199
currently um

2053
01:17:09,199 --> 01:17:11,199
interested in this draft or are not

2054
01:17:11,199 --> 01:17:12,960
necessarily the ones who also have the

2055
01:17:12,960 --> 01:17:14,640
expertise of really

2056
01:17:14,640 --> 01:17:17,360
um of of really defining the the

2057
01:17:17,360 --> 01:17:18,320
international

2058
01:17:18,320 --> 01:17:20,239
gaps that we see with the current

2059
01:17:20,239 --> 01:17:21,600
address scheme

2060
01:17:21,600 --> 01:17:23,440
so yeah i guess the next step is to

2061
01:17:23,440 --> 01:17:24,800
identify who can

2062
01:17:24,800 --> 01:17:27,840
who can tell us more

2063
01:17:28,080 --> 01:17:31,840
um other thoughts on this

2064
01:17:32,080 --> 01:17:34,239
i feel from jabba that that ken agrees

2065
01:17:34,239 --> 01:17:35,120
that we should

2066
01:17:35,120 --> 01:17:38,719
try and get expertise um to this

2067
01:17:38,719 --> 01:17:40,880
so thanks mike for volunteering to find

2068
01:17:40,880 --> 01:17:42,840
the contact

2069
01:17:42,840 --> 01:17:45,840
um

2070
01:17:46,560 --> 01:17:48,080
and we are we happy with the name

2071
01:17:48,080 --> 01:17:50,320
component we kind of skipped over that

2072
01:17:50,320 --> 01:17:54,880
in this but did anyone want to speak to

2073
01:17:56,840 --> 01:17:59,199
that

2074
01:17:59,199 --> 01:18:02,080
uh i think uh just just briefly my

2075
01:18:02,080 --> 01:18:03,120
recollection of

2076
01:18:03,120 --> 01:18:06,960
of how um the v card four was

2077
01:18:06,960 --> 01:18:09,760
was supposed to be uh with so one of the

2078
01:18:09,760 --> 01:18:13,040
one of the um one of the properties

2079
01:18:13,040 --> 01:18:16,640
was a name order

2080
01:18:16,640 --> 01:18:19,040
i think where you could specify what

2081
01:18:19,040 --> 01:18:20,400
components

2082
01:18:20,400 --> 01:18:22,640
how to order the components the name oh

2083
01:18:22,640 --> 01:18:24,080
i think it was called it was a sort

2084
01:18:24,080 --> 01:18:24,880
order

2085
01:18:24,880 --> 01:18:27,840
property or something like kind and and

2086
01:18:27,840 --> 01:18:28,159
i

2087
01:18:28,159 --> 01:18:31,520
and what that one one of the problems

2088
01:18:31,520 --> 01:18:31,920
with

2089
01:18:31,920 --> 01:18:36,320
with with vcard 3 and previous was that

2090
01:18:36,320 --> 01:18:38,400
applications would choose to sort the

2091
01:18:38,400 --> 01:18:40,080
data in all sorts of different

2092
01:18:40,080 --> 01:18:41,760
ways they'd try and break the name up

2093
01:18:41,760 --> 01:18:43,520
and then sort either on the last name or

2094
01:18:43,520 --> 01:18:45,600
the first name or whatever

2095
01:18:45,600 --> 01:18:48,080
and people couldn't find stuff so i

2096
01:18:48,080 --> 01:18:49,520
believe that there was a sort order

2097
01:18:49,520 --> 01:18:51,040
property added which basically

2098
01:18:51,040 --> 01:18:54,400
lists the the name elements

2099
01:18:54,400 --> 01:18:57,440
in order so you can have a consistent

2100
01:18:57,440 --> 01:19:00,239
sort do we have something of that kind

2101
01:19:00,239 --> 01:19:01,679
well that's what this array is

2102
01:19:01,679 --> 01:19:04,000
that the point is that the array lists

2103
01:19:04,000 --> 01:19:05,360
them in order

2104
01:19:05,360 --> 01:19:07,360
no the component i think the problem

2105
01:19:07,360 --> 01:19:09,280
with names is that they can be displayed

2106
01:19:09,280 --> 01:19:11,040
in one order and sorted in a different

2107
01:19:11,040 --> 01:19:12,400
order

2108
01:19:12,400 --> 01:19:14,559
so

2109
01:19:16,560 --> 01:19:20,400
yes yeah so the the sort the sort order

2110
01:19:20,400 --> 01:19:23,120
thing simply lists the names of the

2111
01:19:23,120 --> 01:19:24,719
components that you sort by

2112
01:19:24,719 --> 01:19:27,600
and in the order by which you sort them

2113
01:19:27,600 --> 01:19:28,159
so

2114
01:19:28,159 --> 01:19:30,159
that and and the point there of course

2115
01:19:30,159 --> 01:19:31,360
is which

2116
01:19:31,360 --> 01:19:33,840
is the specific the name that matters

2117
01:19:33,840 --> 01:19:34,800
when you sort

2118
01:19:34,800 --> 01:19:38,239
and it def depends on culture it's not a

2119
01:19:38,239 --> 01:19:40,560
thing you can derive from you know do

2120
01:19:40,560 --> 01:19:41,920
you sort by the family names you

2121
01:19:41,920 --> 01:19:45,600
saw by the personal name um

2122
01:19:45,600 --> 01:19:48,960
so that's that was in v card four as a

2123
01:19:48,960 --> 01:19:52,560
um as an attempt to resolve

2124
01:19:52,560 --> 01:19:56,320
known issues with with um

2125
01:19:56,320 --> 01:19:59,440
with these things and and that sort of

2126
01:19:59,440 --> 01:20:00,880
was also trying to resolve some of the

2127
01:20:00,880 --> 01:20:02,480
issues over um

2128
01:20:02,480 --> 01:20:05,840
merging of of cards is is how do you

2129
01:20:05,840 --> 01:20:07,120
identify two as being

2130
01:20:07,120 --> 01:20:10,159
well a uid works if you give you two

2131
01:20:10,159 --> 01:20:11,679
identical cards but

2132
01:20:11,679 --> 01:20:13,199
what if you've got two cards that refer

2133
01:20:13,199 --> 01:20:15,920
to the same person but the names are

2134
01:20:15,920 --> 01:20:19,840
ordered differently for some reason

2135
01:20:21,250 --> 01:20:22,719
[Music]

2136
01:20:22,719 --> 01:20:25,920
yeah i'm just looking looking this up in

2137
01:20:25,920 --> 01:20:29,440
the in the v-cut draft

2138
01:20:29,440 --> 01:20:32,480
and yeah so it's it's sorting

2139
01:20:32,480 --> 01:20:36,080
multiple names um as you mean and um

2140
01:20:36,080 --> 01:20:40,000
yeah we're checking how we are

2141
01:20:40,320 --> 01:20:44,239
okay so actually i see that we only

2142
01:20:44,239 --> 01:20:47,280
the name in our current model is a

2143
01:20:47,280 --> 01:20:50,080
single valued property so we wouldn't

2144
01:20:50,080 --> 01:20:51,199
even allow for

2145
01:20:51,199 --> 01:20:56,320
multiple names so probably

2146
01:20:56,719 --> 01:21:00,239
probably we should change that anyway

2147
01:21:00,239 --> 01:21:03,120
um so this this isn't um multiple names

2148
01:21:03,120 --> 01:21:05,040
within a single card this is

2149
01:21:05,040 --> 01:21:06,480
you've got a hundred addresses and you

2150
01:21:06,480 --> 01:21:08,159
want to display them in a sorted order

2151
01:21:08,159 --> 01:21:09,040
sorted by

2152
01:21:09,040 --> 01:21:11,440
name and is that sorted by surname is it

2153
01:21:11,440 --> 01:21:13,120
sort of by first name

2154
01:21:13,120 --> 01:21:14,960
uh where alphabetically what's the

2155
01:21:14,960 --> 01:21:16,800
collation order that they sought with

2156
01:21:16,800 --> 01:21:18,960
yeah um that's that's the interesting

2157
01:21:18,960 --> 01:21:21,199
challenge here

2158
01:21:21,199 --> 01:21:23,360
the the yeah the the property is an

2159
01:21:23,360 --> 01:21:24,400
order by

2160
01:21:24,400 --> 01:21:27,199
card so you sp when you create the card

2161
01:21:27,199 --> 01:21:28,560
you specify

2162
01:21:28,560 --> 01:21:31,520
what's the what is the sort order for

2163
01:21:31,520 --> 01:21:32,159
the

2164
01:21:32,159 --> 01:21:33,920
which components how do you order the

2165
01:21:33,920 --> 01:21:37,120
components when you're sorting

2166
01:21:37,120 --> 01:21:38,960
yeah so you can have multiple end

2167
01:21:38,960 --> 01:21:40,719
properties in the e-card and you can

2168
01:21:40,719 --> 01:21:42,000
define a sword order for

2169
01:21:42,000 --> 01:21:44,400
these end properties with this no no no

2170
01:21:44,400 --> 01:21:45,040
it's it's

2171
01:21:45,040 --> 01:21:47,600
it's it's what you specify is which is

2172
01:21:47,600 --> 01:21:48,159
the

2173
01:21:48,159 --> 01:21:51,040
most important component of the name and

2174
01:21:51,040 --> 01:21:51,920
then

2175
01:21:51,920 --> 01:21:53,520
you're ordering the components so you

2176
01:21:53,520 --> 01:21:55,440
when you're sorting across cards

2177
01:21:55,440 --> 01:21:59,120
you you want to sort them consistently

2178
01:21:59,120 --> 01:22:02,400
uh on a name so it it's not you can't

2179
01:22:02,400 --> 01:22:03,679
simply

2180
01:22:03,679 --> 01:22:07,679
um so this is this is does bron gondwana

2181
01:22:07,679 --> 01:22:10,080
sort before mike douglas or not and the

2182
01:22:10,080 --> 01:22:11,440
answer depends whether you're sorting by

2183
01:22:11,440 --> 01:22:13,040
first name or surname

2184
01:22:13,040 --> 01:22:15,920
yeah well that's a client property

2185
01:22:15,920 --> 01:22:18,400
normally not some using code in there

2186
01:22:18,400 --> 01:22:20,719
i know you can switch our client sort by

2187
01:22:20,719 --> 01:22:22,239
first name or last name

2188
01:22:22,239 --> 01:22:25,678
no it's it's

2189
01:22:26,560 --> 01:22:28,560
that's that's the the problem is is this

2190
01:22:28,560 --> 01:22:30,080
assumption that first name

2191
01:22:30,080 --> 01:22:32,719
last name has some significance as a as

2192
01:22:32,719 --> 01:22:33,760
it doesn't

2193
01:22:33,760 --> 01:22:35,199
because yeah that's why we have the

2194
01:22:35,199 --> 01:22:36,960
tagged version here because

2195
01:22:36,960 --> 01:22:38,560
yes they may not be in that order so

2196
01:22:38,560 --> 01:22:40,159
this lets you put them in order like in

2197
01:22:40,159 --> 01:22:41,520
cultures where the

2198
01:22:41,520 --> 01:22:43,520
family name comes first if you like uh

2199
01:22:43,520 --> 01:22:44,719
um but

2200
01:22:44,719 --> 01:22:46,159
you can still tag them this is a family

2201
01:22:46,159 --> 01:22:48,239
name not their personal name and so sort

2202
01:22:48,239 --> 01:22:49,199
by the correct thing

2203
01:22:49,199 --> 01:22:51,600
i think basically i think i'm saying is

2204
01:22:51,600 --> 01:22:52,719
this this system

2205
01:22:52,719 --> 01:22:54,400
is designed to solve this problem are

2206
01:22:54,400 --> 01:22:56,080
there any changes you're

2207
01:22:56,080 --> 01:22:58,080
proposing here or are you do you

2208
01:22:58,080 --> 01:23:00,400
actually agree with that i'm

2209
01:23:00,400 --> 01:23:04,080
not seeing how it solves the problem

2210
01:23:04,960 --> 01:23:09,120
well because so if his cultureware was

2211
01:23:09,120 --> 01:23:09,600
like

2212
01:23:09,600 --> 01:23:11,520
you wrote your name stefan act robert

2213
01:23:11,520 --> 01:23:13,360
then either would be in that order in

2214
01:23:13,360 --> 01:23:14,639
the name component array

2215
01:23:14,639 --> 01:23:16,639
but you'd still tag that steppen act was

2216
01:23:16,639 --> 01:23:18,840
the surname and robert was the personal

2217
01:23:18,840 --> 01:23:20,639
name

2218
01:23:20,639 --> 01:23:22,880
yes this is also my understanding and

2219
01:23:22,880 --> 01:23:24,960
mike i understand that this sort s

2220
01:23:24,960 --> 01:23:27,040
parameter and v card

2221
01:23:27,040 --> 01:23:31,199
allows you to define the order of the

2222
01:23:31,199 --> 01:23:34,400
parameters to take into account um and

2223
01:23:34,400 --> 01:23:35,760
um

2224
01:23:35,760 --> 01:23:37,199
if we want to preserve that then we

2225
01:23:37,199 --> 01:23:39,199
would need to have some

2226
01:23:39,199 --> 01:23:43,360
multi-valued sword order

2227
01:23:43,360 --> 01:23:45,440
property yeah we need something more

2228
01:23:45,440 --> 01:23:46,800
than what's just listed there's name

2229
01:23:46,800 --> 01:23:48,719
component because otherwise

2230
01:23:48,719 --> 01:23:50,960
mr would sort all together and anyone

2231
01:23:50,960 --> 01:23:52,480
with a different prefix would sort

2232
01:23:52,480 --> 01:23:53,120
differently

2233
01:23:53,120 --> 01:23:55,120
if we were just taking those fields as

2234
01:23:55,120 --> 01:23:56,159
as in this slide

2235
01:23:56,159 --> 01:23:58,560
in order and calling that your thought

2236
01:23:58,560 --> 01:23:59,600
um so

2237
01:23:59,600 --> 01:24:02,159
we certainly need something it's not

2238
01:24:02,159 --> 01:24:02,880
about

2239
01:24:02,880 --> 01:24:05,520
that though it's it's you would sort by

2240
01:24:05,520 --> 01:24:07,040
like personal and then this lets you

2241
01:24:07,040 --> 01:24:08,560
extract which of these names is personal

2242
01:24:08,560 --> 01:24:09,440
to then do your

2243
01:24:09,440 --> 01:24:12,719
sort order which enhance it

2244
01:24:12,719 --> 01:24:14,639
i think i think we definitely need some

2245
01:24:14,639 --> 01:24:16,159
examples of

2246
01:24:16,159 --> 01:24:19,360
how interfaces sought um and and how

2247
01:24:19,360 --> 01:24:21,280
this stuff was designed to be used

2248
01:24:21,280 --> 01:24:22,960
because i i think

2249
01:24:22,960 --> 01:24:24,320
that mike's right that there's more to

2250
01:24:24,320 --> 01:24:26,159
this than just you sort by personal or

2251
01:24:26,159 --> 01:24:29,199
you sort by surname

2252
01:24:29,520 --> 01:24:31,280
there there girls had some examples on

2253
01:24:31,280 --> 01:24:33,519
the list

2254
01:24:38,719 --> 01:24:40,880
okay any other comments on names or

2255
01:24:40,880 --> 01:24:45,199
addresses at this point

2256
01:24:45,199 --> 01:24:47,678
they're hard

2257
01:24:50,960 --> 01:24:54,960
great so then next slide please

2258
01:24:56,800 --> 01:25:00,719
okay groups um so in the previous draft

2259
01:25:00,719 --> 01:25:04,560
we had a very simple um object called

2260
01:25:04,560 --> 01:25:06,800
contact group i think or card group or

2261
01:25:06,800 --> 01:25:09,040
whatever uh which basically had a name

2262
01:25:09,040 --> 01:25:11,679
and at least and a list type property

2263
01:25:11,679 --> 01:25:13,120
which defined the

2264
01:25:13,120 --> 01:25:15,520
the uids that are members of this group

2265
01:25:15,520 --> 01:25:16,880
um

2266
01:25:16,880 --> 01:25:18,800
then we came to realize that the in

2267
01:25:18,800 --> 01:25:20,960
vcard this is actually

2268
01:25:20,960 --> 01:25:25,440
um done by having a

2269
01:25:25,440 --> 01:25:28,400
kind equals group uh property in the v

2270
01:25:28,400 --> 01:25:29,360
chord

2271
01:25:29,360 --> 01:25:33,120
um and that basically meant that the

2272
01:25:33,120 --> 01:25:35,280
v card with kind equals group can have

2273
01:25:35,280 --> 01:25:37,920
any other record property too so

2274
01:25:37,920 --> 01:25:41,679
um we came to realize um if we want to

2275
01:25:41,679 --> 01:25:44,639
if we want to map clearly from vcard to

2276
01:25:44,639 --> 01:25:44,960
uh

2277
01:25:44,960 --> 01:25:47,920
js contact then um we'd be throwing away

2278
01:25:47,920 --> 01:25:49,360
lots of information

2279
01:25:49,360 --> 01:25:52,560
uh for mapping these to a group so

2280
01:25:52,560 --> 01:25:55,440
um we changed it in the current draft to

2281
01:25:55,440 --> 01:25:56,960
um

2282
01:25:56,960 --> 01:26:00,239
defining uh js card group to be

2283
01:26:00,239 --> 01:26:04,239
kind of uh allow me the term subclass of

2284
01:26:04,239 --> 01:26:05,120
the

2285
01:26:05,120 --> 01:26:08,960
uh of a js card so basically it has an

2286
01:26:08,960 --> 01:26:11,760
a new property members um and it

2287
01:26:11,760 --> 01:26:13,840
requires the kind property of

2288
01:26:13,840 --> 01:26:16,880
the of the inherited property so to say

2289
01:26:16,880 --> 01:26:20,320
as group um so this

2290
01:26:20,320 --> 01:26:22,719
this does away with all the issue of

2291
01:26:22,719 --> 01:26:23,520
throwing away

2292
01:26:23,520 --> 01:26:26,159
too much information for group records

2293
01:26:26,159 --> 01:26:27,440
um

2294
01:26:27,440 --> 01:26:29,600
but of course it comes with the cost so

2295
01:26:29,600 --> 01:26:31,120
first of all um

2296
01:26:31,120 --> 01:26:34,880
we now have we now have nested groups um

2297
01:26:34,880 --> 01:26:38,880
and since we are since these groups

2298
01:26:38,880 --> 01:26:41,920
are are nested together by uads

2299
01:26:41,920 --> 01:26:43,840
we need to check for circular groups for

2300
01:26:43,840 --> 01:26:45,199
example

2301
01:26:45,199 --> 01:26:48,879
um and

2302
01:26:49,199 --> 01:26:52,080
and we also need to enforce that the js

2303
01:26:52,080 --> 01:26:53,600
card groups and the

2304
01:26:53,600 --> 01:26:56,320
chase cards so basically the leaf

2305
01:26:56,320 --> 01:26:57,360
objects and the

2306
01:26:57,360 --> 01:27:00,800
and the group objects share the same uid

2307
01:27:00,800 --> 01:27:02,080
name space

2308
01:27:02,080 --> 01:27:03,760
um so at this point we might wonder if

2309
01:27:03,760 --> 01:27:05,360
we even need a gs card group if it's

2310
01:27:05,360 --> 01:27:05,679
just

2311
01:27:05,679 --> 01:27:08,719
a js card um that can be grouped or not

2312
01:27:08,719 --> 01:27:12,480
um there again i wonder first

2313
01:27:12,480 --> 01:27:15,679
um for applications if it

2314
01:27:15,679 --> 01:27:19,040
makes sense to have a

2315
01:27:19,040 --> 01:27:21,520
to have a distinct type of groups and if

2316
01:27:21,520 --> 01:27:23,440
it makes sense for these groups to

2317
01:27:23,440 --> 01:27:25,520
basically have all the properties of the

2318
01:27:25,520 --> 01:27:27,360
regular contact

2319
01:27:27,360 --> 01:27:31,120
um and any way cards

2320
01:27:31,120 --> 01:27:33,760
with the kind equals group exist in the

2321
01:27:33,760 --> 01:27:35,280
wild that have all these additional

2322
01:27:35,280 --> 01:27:36,880
properties on them

2323
01:27:36,880 --> 01:27:39,920
because theoretically they could but

2324
01:27:39,920 --> 01:27:41,920
i certainly haven't ever seen a group

2325
01:27:41,920 --> 01:27:44,400
that has anything more than a name

2326
01:27:44,400 --> 01:27:47,280
and a list of remember your ids yeah

2327
01:27:47,280 --> 01:27:48,800
that's what i'm uncertain about

2328
01:27:48,800 --> 01:27:51,199
uh i also don't know any but it doesn't

2329
01:27:51,199 --> 01:27:52,239
has to mean

2330
01:27:52,239 --> 01:27:55,280
that probably some some services are

2331
01:27:55,280 --> 01:27:56,800
using them and i just haven't seen

2332
01:27:56,800 --> 01:27:59,120
it so this does feel like massive

2333
01:27:59,120 --> 01:28:01,760
overkill and

2334
01:28:01,760 --> 01:28:04,239
a bit of a pain i definitely prefer the

2335
01:28:04,239 --> 01:28:05,280
earlier option

2336
01:28:05,280 --> 01:28:07,519
but

2337
01:28:12,080 --> 01:28:14,880
yeah i'd be tempted to have a call and

2338
01:28:14,880 --> 01:28:15,440
see if

2339
01:28:15,440 --> 01:28:17,760
anyone is using those facilities and if

2340
01:28:17,760 --> 01:28:19,920
not uh define a group that doesn't

2341
01:28:19,920 --> 01:28:21,920
include those and if you need something

2342
01:28:21,920 --> 01:28:23,280
fancier then

2343
01:28:23,280 --> 01:28:25,520
and maybe there's properties that make

2344
01:28:25,520 --> 01:28:26,719
sense to have in a group but i don't

2345
01:28:26,719 --> 01:28:29,920
think a full card on a group makes sense

2346
01:28:29,920 --> 01:28:31,920
that's an unknowable thing isn't it

2347
01:28:31,920 --> 01:28:33,360
we're never gonna we can't

2348
01:28:33,360 --> 01:28:36,000
know if anybody's not using this no but

2349
01:28:36,000 --> 01:28:38,159
we can define something and say use this

2350
01:28:38,159 --> 01:28:39,520
and if everyone uses it

2351
01:28:39,520 --> 01:28:41,760
then happy days and there's a clear

2352
01:28:41,760 --> 01:28:43,120
mapping between

2353
01:28:43,120 --> 01:28:44,560
cards that don't have these additional

2354
01:28:44,560 --> 01:28:46,800
properties and this and cards that do

2355
01:28:46,800 --> 01:28:48,239
have these additional properties if

2356
01:28:48,239 --> 01:28:50,480
if they get if they hit one of these

2357
01:28:50,480 --> 01:28:51,920
translation systems then

2358
01:28:51,920 --> 01:28:53,760
then they will pop up and say hey we

2359
01:28:53,760 --> 01:28:56,000
need this um but

2360
01:28:56,000 --> 01:28:58,800
allowing all the things that were

2361
01:28:58,800 --> 01:29:00,639
accidental side effects of it not being

2362
01:29:00,639 --> 01:29:02,400
locked down enough before just because

2363
01:29:02,400 --> 01:29:04,080
someone might possibly be using them

2364
01:29:04,080 --> 01:29:05,440
somewhere in the wild who's

2365
01:29:05,440 --> 01:29:08,239
has never spoken up or never shown up in

2366
01:29:08,239 --> 01:29:10,400
any data that anyone's seen

2367
01:29:10,400 --> 01:29:11,920
i think this is a fair case for saying

2368
01:29:11,920 --> 01:29:13,840
there's a subset that's very commonly

2369
01:29:13,840 --> 01:29:15,360
used and we should define that as an

2370
01:29:15,360 --> 01:29:16,400
easy to use object

2371
01:29:16,400 --> 01:29:19,440
that people will use

2372
01:29:22,639 --> 01:29:24,719
yeah especially because you know this is

2373
01:29:24,719 --> 01:29:25,840
quite an important object for

2374
01:29:25,840 --> 01:29:27,199
interoperability to prefer

2375
01:29:27,199 --> 01:29:30,239
a data export import i think and

2376
01:29:30,239 --> 01:29:34,159
you want it to be easy to use not just

2377
01:29:34,159 --> 01:29:36,840
that's horrible and i'm never gonna do

2378
01:29:36,840 --> 01:29:39,840
it

2379
01:29:43,920 --> 01:29:46,639
yeah okay so it basically boils down to

2380
01:29:46,639 --> 01:29:47,360
the

2381
01:29:47,360 --> 01:29:50,639
same thing as for addresses so we don't

2382
01:29:50,639 --> 01:29:51,360
really know

2383
01:29:51,360 --> 01:29:55,360
if we are um making it hard for

2384
01:29:55,360 --> 01:29:56,800
some people who would be interested in

2385
01:29:56,800 --> 01:29:59,199
respect to to use it um

2386
01:29:59,199 --> 01:30:01,199
but again i also don't have a good idea

2387
01:30:01,199 --> 01:30:04,080
how how can can come to a consensus

2388
01:30:04,080 --> 01:30:08,320
rather other than asking on the list

2389
01:30:08,639 --> 01:30:10,560
we can address this next can connect

2390
01:30:10,560 --> 01:30:12,000
probably there are uh

2391
01:30:12,000 --> 01:30:15,440
um more people um

2392
01:30:15,440 --> 01:30:17,040
there is the record group there so

2393
01:30:17,040 --> 01:30:19,120
probably they they have

2394
01:30:19,120 --> 01:30:23,440
uh they know more about this

2395
01:30:23,440 --> 01:30:25,440
yeah this i mean i think this is much

2396
01:30:25,440 --> 01:30:27,280
less so than addresses addresses are

2397
01:30:27,280 --> 01:30:28,639
trying to

2398
01:30:28,639 --> 01:30:30,080
map something in the real world that

2399
01:30:30,080 --> 01:30:31,600
exists whereas this is just trying to

2400
01:30:31,600 --> 01:30:33,040
map something in the protocol that

2401
01:30:33,040 --> 01:30:34,159
exists

2402
01:30:34,159 --> 01:30:36,960
um yeah it's not like we're trying to

2403
01:30:36,960 --> 01:30:37,679
represent

2404
01:30:37,679 --> 01:30:41,120
anything outside just this

2405
01:30:41,120 --> 01:30:43,120
no it's it's really just about making

2406
01:30:43,120 --> 01:30:45,600
sure that we are not making

2407
01:30:45,600 --> 01:30:48,480
people unhappy who would be interested

2408
01:30:48,480 --> 01:30:48,719
in

2409
01:30:48,719 --> 01:30:51,600
in in this rfc but come to the

2410
01:30:51,600 --> 01:30:54,159
conclusion they can't use it because

2411
01:30:54,159 --> 01:30:56,800
we are lacking expressivity so but um

2412
01:30:56,800 --> 01:30:57,600
yeah let's

2413
01:30:57,600 --> 01:31:00,719
um yeah i think having a different

2414
01:31:00,719 --> 01:31:02,480
js group object which can always be

2415
01:31:02,480 --> 01:31:04,239
extended later we could do another spec

2416
01:31:04,239 --> 01:31:05,920
that extends it and adds new properties

2417
01:31:05,920 --> 01:31:06,560
to it

2418
01:31:06,560 --> 01:31:10,239
if necessary okay good so basically it

2419
01:31:10,239 --> 01:31:11,360
means

2420
01:31:11,360 --> 01:31:17,040
we revert back to what we had before

2421
01:31:17,040 --> 01:31:18,639
um does anyone want to speak against

2422
01:31:18,639 --> 01:31:20,080
that suggestion

2423
01:31:20,080 --> 01:31:24,080
actually one one thing though is um

2424
01:31:24,560 --> 01:31:28,400
if we revert it back to before

2425
01:31:28,400 --> 01:31:31,120
let me just check if we already allowed

2426
01:31:31,120 --> 01:31:32,020
for

2427
01:31:32,020 --> 01:31:33,760
[Music]

2428
01:31:33,760 --> 01:31:36,639
multi-leveled

2429
01:31:37,840 --> 01:31:40,000
structures so that we allowed to have a

2430
01:31:40,000 --> 01:31:41,199
group to have

2431
01:31:41,199 --> 01:31:45,120
more groups i think that could

2432
01:31:45,120 --> 01:31:49,599
that could still be relevant

2433
01:31:53,600 --> 01:31:56,560
just check here

2434
01:31:57,679 --> 01:32:00,719
group cards

2435
01:32:00,719 --> 01:32:02,560
yeah because in in the previous

2436
01:32:02,560 --> 01:32:05,760
definition a js card group could only

2437
01:32:05,760 --> 01:32:09,040
um could only have cards as members

2438
01:32:09,040 --> 01:32:11,120
um but we might want to allow this to

2439
01:32:11,120 --> 01:32:12,400
have cards

2440
01:32:12,400 --> 01:32:15,760
or card groups so that you can basically

2441
01:32:15,760 --> 01:32:18,320
expand a tree of groups and contacts i

2442
01:32:18,320 --> 01:32:20,080
could imagine this being useful

2443
01:32:20,080 --> 01:32:23,600
for example for um mailing

2444
01:32:23,600 --> 01:32:25,920
um i don't know if mailing list is the

2445
01:32:25,920 --> 01:32:27,679
right name but i saw and for example

2446
01:32:27,679 --> 01:32:28,400
some

2447
01:32:28,400 --> 01:32:30,480
in microsoft productivity tools i think

2448
01:32:30,480 --> 01:32:31,520
they have these

2449
01:32:31,520 --> 01:32:35,120
multi-leveled um uh mailing lists change

2450
01:32:35,120 --> 01:32:35,600
i think

2451
01:32:35,600 --> 01:32:37,440
i don't know the name they're using for

2452
01:32:37,440 --> 01:32:41,839
that yeah

2453
01:32:41,920 --> 01:32:43,679
okay so there is consensus that we want

2454
01:32:43,679 --> 01:32:45,040
to have this

2455
01:32:45,040 --> 01:32:48,080
um that we want to either

2456
01:32:48,080 --> 01:32:50,560
other groups i don't know that we've

2457
01:32:50,560 --> 01:32:51,920
we've discussed that yet

2458
01:32:51,920 --> 01:32:55,120
um did anyone else want to speak on this

2459
01:32:55,120 --> 01:32:58,880
area yeah it would be cool

2460
01:33:01,360 --> 01:33:02,239
there's a couple of people with

2461
01:33:02,239 --> 01:33:04,800
microphones on but not saying anything

2462
01:33:04,800 --> 01:33:08,000
i just what do we have examples of

2463
01:33:08,000 --> 01:33:10,239
nested groups in the world

2464
01:33:10,239 --> 01:33:12,560
that's my use case i i know about but

2465
01:33:12,560 --> 01:33:14,480
i'm not saying it doesn't exist

2466
01:33:14,480 --> 01:33:16,000
yeah it's been it's been a while that

2467
01:33:16,000 --> 01:33:18,159
i've actually used it but i um

2468
01:33:18,159 --> 01:33:19,920
i think for example in microsoft

2469
01:33:19,920 --> 01:33:22,080
environments or on exchange service you

2470
01:33:22,080 --> 01:33:23,440
have these

2471
01:33:23,440 --> 01:33:25,679
organizations tend to organize their

2472
01:33:25,679 --> 01:33:27,920
departments and groups but those are the

2473
01:33:27,920 --> 01:33:30,800
sub departments yeah that makes sense

2474
01:33:30,800 --> 01:33:32,000
yeah yeah

2475
01:33:32,000 --> 01:33:37,600
cool all right

2476
01:33:37,600 --> 01:33:39,840
cool

2477
01:33:41,120 --> 01:33:43,440
okay all right so that sounds like a

2478
01:33:43,440 --> 01:33:45,759
plan

2479
01:33:46,000 --> 01:33:48,400
okay so if there are no other points or

2480
01:33:48,400 --> 01:33:50,800
groups at this moment we can switch to

2481
01:33:50,800 --> 01:33:53,280
the next slide

2482
01:33:53,280 --> 01:33:57,040
yeah um so i was wondering if

2483
01:33:57,040 --> 01:33:59,360
other people at this stage are already

2484
01:33:59,360 --> 01:34:00,080
interested

2485
01:34:00,080 --> 01:34:03,199
in implementing um more implementations

2486
01:34:03,199 --> 01:34:06,880
the earlier the better so uh if you do

2487
01:34:06,880 --> 01:34:10,239
please uh please contact uh

2488
01:34:10,239 --> 01:34:13,760
mario and me or just say now

2489
01:34:13,760 --> 01:34:16,880
um and of course we'd appreciate any

2490
01:34:16,880 --> 01:34:18,159
more feedback

2491
01:34:18,159 --> 01:34:20,800
on the draft i'd say better wait until

2492
01:34:20,800 --> 01:34:21,760
we've updated

2493
01:34:21,760 --> 01:34:25,679
draft with today's decisions

2494
01:34:25,679 --> 01:34:27,280
need to thank you for your thorough

2495
01:34:27,280 --> 01:34:30,320
feedback before this session

2496
01:34:30,320 --> 01:34:31,920
two of the points that we haven't

2497
01:34:31,920 --> 01:34:33,360
discussed uh

2498
01:34:33,360 --> 01:34:36,320
of your feedback in this uh at this um

2499
01:34:36,320 --> 01:34:37,199
meeting yet

2500
01:34:37,199 --> 01:34:41,119
now is um the roles property um

2501
01:34:41,119 --> 01:34:43,199
where you were basically saying that you

2502
01:34:43,199 --> 01:34:44,480
don't understand the

2503
01:34:44,480 --> 01:34:47,119
purpose of it and um looking at it did i

2504
01:34:47,119 --> 01:34:48,639
now agree

2505
01:34:48,639 --> 01:34:51,119
it's basically a mapping from the v code

2506
01:34:51,119 --> 01:34:52,639
road property

2507
01:34:52,639 --> 01:34:55,679
um and i understand that there it

2508
01:34:55,679 --> 01:34:58,800
what its purpose is to

2509
01:34:58,800 --> 01:35:01,840
define roles from a specific set

2510
01:35:01,840 --> 01:35:05,360
of uh organizational

2511
01:35:05,360 --> 01:35:08,800
roles defined in the x um

2512
01:35:08,800 --> 01:35:12,320
x 520

2513
01:35:12,320 --> 01:35:15,920
iso standard i i really don't know if

2514
01:35:15,920 --> 01:35:17,440
that's

2515
01:35:17,440 --> 01:35:19,520
it for this property i really don't know

2516
01:35:19,520 --> 01:35:20,880
if it's stick red event or

2517
01:35:20,880 --> 01:35:23,520
and if we if we should restrict it to

2518
01:35:23,520 --> 01:35:24,560
the same values

2519
01:35:24,560 --> 01:35:27,280
probably chopped title is enough uh mike

2520
01:35:27,280 --> 01:35:28,560
you're in the queue

2521
01:35:28,560 --> 01:35:30,239
i was just going to say i was playing

2522
01:35:30,239 --> 01:35:31,840
out with the contacts app

2523
01:35:31,840 --> 01:35:34,239
while uh talking there you can add

2524
01:35:34,239 --> 01:35:37,040
groups to groups

2525
01:35:38,159 --> 01:35:40,320
which contact you are talking about only

2526
01:35:40,320 --> 01:35:41,600
on the mac

2527
01:35:41,600 --> 01:35:44,960
oh yeah okay um and

2528
01:35:44,960 --> 01:35:47,760
um yeah so for roles um i can imagine

2529
01:35:47,760 --> 01:35:48,400
that we are

2530
01:35:48,400 --> 01:35:50,800
um that we are removing that property we

2531
01:35:50,800 --> 01:35:51,840
will ask

2532
01:35:51,840 --> 01:35:54,960
for that and and the other thing is the

2533
01:35:54,960 --> 01:35:56,719
resource type but we i don't think we

2534
01:35:56,719 --> 01:35:58,320
need to discuss that now i'll

2535
01:35:58,320 --> 01:36:01,600
send something on the list okay so

2536
01:36:01,600 --> 01:36:02,239
that's um

2537
01:36:02,239 --> 01:36:04,880
that's it uh mario uh do you have any

2538
01:36:04,880 --> 01:36:05,840
other

2539
01:36:05,840 --> 01:36:08,320
comments

2540
01:36:09,040 --> 01:36:12,880
not on my side

2541
01:36:15,840 --> 01:36:19,440
all right thanks everyone um next up

2542
01:36:19,440 --> 01:36:21,280
blob just very quickly i have done

2543
01:36:21,280 --> 01:36:23,119
nothing on it since last time i haven't

2544
01:36:23,119 --> 01:36:24,239
even updated the fast mail

2545
01:36:24,239 --> 01:36:25,360
implementation

2546
01:36:25,360 --> 01:36:28,880
to match this spec my apologies

2547
01:36:28,880 --> 01:36:31,119
does anyone have any comments or

2548
01:36:31,119 --> 01:36:33,920
feedback on it

2549
01:36:34,080 --> 01:36:39,840
before i go and do the next draft

2550
01:36:39,920 --> 01:36:43,040
um i mean i do i don't it's not worth

2551
01:36:43,040 --> 01:36:44,560
spending much time on

2552
01:36:44,560 --> 01:36:46,400
right now though i don't think it is

2553
01:36:46,400 --> 01:36:47,840
obviously pretty rough at the moment

2554
01:36:47,840 --> 01:36:49,360
like there's no description of

2555
01:36:49,360 --> 01:36:51,440
what a lot of the stuff means like you

2556
01:36:51,440 --> 01:36:53,280
can probably guess pretty accurately

2557
01:36:53,280 --> 01:36:54,400
from the names but

2558
01:36:54,400 --> 01:36:56,400
you know like what data as basics for

2559
01:36:56,400 --> 01:36:58,480
data aztecs actually do

2560
01:36:58,480 --> 01:37:00,000
you know would need to be specified

2561
01:37:00,000 --> 01:37:03,920
welcome just yes that

2562
01:37:04,840 --> 01:37:06,320
um

2563
01:37:06,320 --> 01:37:09,600
yeah it's this is it's been vague places

2564
01:37:09,600 --> 01:37:11,520
it's probably the main thing but uh yeah

2565
01:37:11,520 --> 01:37:13,520
i don't know

2566
01:37:13,520 --> 01:37:17,199
let's work on that when we're both awake

2567
01:37:17,760 --> 01:37:21,440
cool all right and then sieve

2568
01:37:21,440 --> 01:37:25,599
can slides are here

2569
01:37:28,159 --> 01:37:31,199
all right um a couple opening remarks um

2570
01:37:31,199 --> 01:37:32,719
robert and i did not coordinate our

2571
01:37:32,719 --> 01:37:34,960
shirts in case anybody's

2572
01:37:34,960 --> 01:37:38,320
interested secondly everything in this

2573
01:37:38,320 --> 01:37:39,840
current draft is implemented in the

2574
01:37:39,840 --> 01:37:41,679
cyrus gmap server

2575
01:37:41,679 --> 01:37:43,920
and everything other than the test

2576
01:37:43,920 --> 01:37:45,119
method is currently running in

2577
01:37:45,119 --> 01:37:47,360
production at fast mail

2578
01:37:47,360 --> 01:37:49,280
and we've effectively shut down our

2579
01:37:49,280 --> 01:37:50,719
managed civ

2580
01:37:50,719 --> 01:37:52,800
stack internally so it's a viable

2581
01:37:52,800 --> 01:37:54,159
alternative to manage civ

2582
01:37:54,159 --> 01:38:02,800
in that respect uh first slide please

2583
01:38:02,800 --> 01:38:06,080
so changes since we last met um

2584
01:38:06,080 --> 01:38:08,000
i've reverted back to using only blob

2585
01:38:08,000 --> 01:38:11,040
ids for specifying the strip content

2586
01:38:11,040 --> 01:38:14,239
in set validate and test um this is

2587
01:38:14,239 --> 01:38:17,440
goes back to looking more like the

2588
01:38:17,440 --> 01:38:21,199
the core j-map methods

2589
01:38:21,679 --> 01:38:24,239
in absence of the blob set method which

2590
01:38:24,239 --> 01:38:25,840
is in bronze draft

2591
01:38:25,840 --> 01:38:28,800
it still requires you to do a separate

2592
01:38:28,800 --> 01:38:30,719
round trip with an upload

2593
01:38:30,719 --> 01:38:32,239
before you can actually run one of these

2594
01:38:32,239 --> 01:38:34,080
methods but with blob set everything can

2595
01:38:34,080 --> 01:38:36,719
be done in one round trip

2596
01:38:36,719 --> 01:38:38,800
um i also added the rate limit and

2597
01:38:38,800 --> 01:38:40,080
request to large

2598
01:38:40,080 --> 01:38:43,280
errors as possible responses for test

2599
01:38:43,280 --> 01:38:44,719
method

2600
01:38:44,719 --> 01:38:47,679
which was discussed last time and i also

2601
01:38:47,679 --> 01:38:48,960
added a new section

2602
01:38:48,960 --> 01:38:51,440
discussing the compatibility with the

2603
01:38:51,440 --> 01:38:53,280
vacation response

2604
01:38:53,280 --> 01:38:56,560
object type in the email spec

2605
01:38:56,560 --> 01:38:58,800
basically as i outlined it i think this

2606
01:38:58,800 --> 01:38:59,600
is fairly

2607
01:38:59,600 --> 01:39:01,199
non-controversial but if anybody has any

2608
01:39:01,199 --> 01:39:03,440
other opinions please let me know

2609
01:39:03,440 --> 01:39:05,040
basically stated that you can fetch the

2610
01:39:05,040 --> 01:39:07,199
vacation response with a get

2611
01:39:07,199 --> 01:39:09,520
you can activate it or deactivate it

2612
01:39:09,520 --> 01:39:10,480
with set

2613
01:39:10,480 --> 01:39:13,040
using the unsuccess activate script

2614
01:39:13,040 --> 01:39:14,000
argument

2615
01:39:14,000 --> 01:39:16,960
and you cannot update or destroy this

2616
01:39:16,960 --> 01:39:18,080
with set

2617
01:39:18,080 --> 01:39:20,080
the reason for the last item is vacation

2618
01:39:20,080 --> 01:39:22,159
response is specified to be a singleton

2619
01:39:22,159 --> 01:39:23,280
type object

2620
01:39:23,280 --> 01:39:25,840
so it's either it's always there it's

2621
01:39:25,840 --> 01:39:27,040
just

2622
01:39:27,040 --> 01:39:30,000
a matter of whether it's active or not

2623
01:39:30,000 --> 01:39:30,960
any opinions

2624
01:39:30,960 --> 01:39:34,080
on any of those three

2625
01:39:34,080 --> 01:39:41,840
items with regards to vacation response

2626
01:39:43,199 --> 01:39:46,320
hearing none we'll move on

2627
01:39:48,239 --> 01:39:51,280
okay uh one other change that um we

2628
01:39:51,280 --> 01:39:53,280
didn't discuss last time but i found was

2629
01:39:53,280 --> 01:39:57,199
was kind of lacking the the past draft

2630
01:39:57,199 --> 01:40:00,159
did some hand waving in terms of how the

2631
01:40:00,159 --> 01:40:02,639
names for positional arguments

2632
01:40:02,639 --> 01:40:05,760
would be generated um it basically said

2633
01:40:05,760 --> 01:40:08,719
you pull them from the the syntax or

2634
01:40:08,719 --> 01:40:10,080
usage

2635
01:40:10,080 --> 01:40:13,119
portion of the relevant spec and i did

2636
01:40:13,119 --> 01:40:14,159
some research and

2637
01:40:14,159 --> 01:40:17,760
each one of the civ extension drafts

2638
01:40:17,760 --> 01:40:20,639
tends to outline their arguments

2639
01:40:20,639 --> 01:40:21,760
slightly different

2640
01:40:21,760 --> 01:40:23,920
so it seemed like it was better off to

2641
01:40:23,920 --> 01:40:24,960
have a

2642
01:40:24,960 --> 01:40:27,520
more concrete way of of specifying these

2643
01:40:27,520 --> 01:40:28,159
so

2644
01:40:28,159 --> 01:40:31,440
what i did was i removed the positional

2645
01:40:31,440 --> 01:40:32,800
arguments from

2646
01:40:32,800 --> 01:40:35,600
the hash of arguments and put them into

2647
01:40:35,600 --> 01:40:37,360
their own separate array

2648
01:40:37,360 --> 01:40:40,400
obviously in order of um

2649
01:40:40,400 --> 01:40:42,639
the required position for the further

2650
01:40:42,639 --> 01:40:43,679
spec

2651
01:40:43,679 --> 01:40:46,400
so on the next slide there's an example

2652
01:40:46,400 --> 01:40:48,560
of what this looks like

2653
01:40:48,560 --> 01:40:51,679
as currently implemented in cyrus

2654
01:40:51,679 --> 01:40:55,360
um i'll defer to the json

2655
01:40:55,360 --> 01:40:58,159
experts as to whether or not this is

2656
01:40:58,159 --> 01:40:59,280
json enough

2657
01:40:59,280 --> 01:41:01,280
on the second the next slide after this

2658
01:41:01,280 --> 01:41:02,960
i have a

2659
01:41:02,960 --> 01:41:06,480
another possible um structure

2660
01:41:06,480 --> 01:41:09,840
for how this response would look i don't

2661
01:41:09,840 --> 01:41:12,880
care either way um it's pretty much

2662
01:41:12,880 --> 01:41:15,199
syntactic sugar as far as i'm concerned

2663
01:41:15,199 --> 01:41:19,839
any strong opinions one way or the other

2664
01:41:34,239 --> 01:41:37,919
can you go back to the previous one

2665
01:41:41,199 --> 01:41:43,520
so this slide here looks a lot like what

2666
01:41:43,520 --> 01:41:44,800
you see with

2667
01:41:44,800 --> 01:41:47,600
the array of method calls it's an array

2668
01:41:47,600 --> 01:41:50,159
of mixed elements type thing

2669
01:41:50,159 --> 01:41:53,199
yes yeah but a fix

2670
01:41:53,199 --> 01:41:56,320
it's a tuple really it's it's three yes

2671
01:41:56,320 --> 01:41:56,719
uh

2672
01:41:56,719 --> 01:41:57,840
it's always going to be three and

2673
01:41:57,840 --> 01:41:58,800
they're always going to be at the same

2674
01:41:58,800 --> 01:42:00,080
time within that it's just that there's

2675
01:42:00,080 --> 01:42:02,480
no separate people typing

2676
01:42:02,480 --> 01:42:05,759
json so yeah

2677
01:42:08,480 --> 01:42:11,199
yeah second might be more verbose but

2678
01:42:11,199 --> 01:42:12,560
might be slightly

2679
01:42:12,560 --> 01:42:15,600
easier to can certainly take it to the

2680
01:42:15,600 --> 01:42:16,800
list we don't necessarily have to have

2681
01:42:16,800 --> 01:42:17,679
an understanding

2682
01:42:17,679 --> 01:42:21,119
yeah yeah

2683
01:42:24,080 --> 01:42:26,800
okay yeah we'll take that the list next

2684
01:42:26,800 --> 01:42:29,840
slide please

2685
01:42:32,159 --> 01:42:34,159
so one thing we did discuss last time

2686
01:42:34,159 --> 01:42:36,080
and i forgot to put in this draft was we

2687
01:42:36,080 --> 01:42:37,440
had discussed

2688
01:42:37,440 --> 01:42:40,880
whether we want a is included or some

2689
01:42:40,880 --> 01:42:41,679
other such name

2690
01:42:41,679 --> 01:42:45,280
property on the subscript object itself

2691
01:42:45,280 --> 01:42:48,719
that can be filtered upon um so the user

2692
01:42:48,719 --> 01:42:49,760
could determine that

2693
01:42:49,760 --> 01:42:51,119
you know they have a script that's being

2694
01:42:51,119 --> 01:42:53,199
included someplace else and you don't

2695
01:42:53,199 --> 01:42:54,560
want to delete it

2696
01:42:54,560 --> 01:42:57,040
or you know whatever other the use cases

2697
01:42:57,040 --> 01:42:59,520
could possibly be i don't know lexi

2698
01:42:59,520 --> 01:43:00,960
you were one of the few people i think

2699
01:43:00,960 --> 01:43:02,719
that said this would be useful do you

2700
01:43:02,719 --> 01:43:03,520
still

2701
01:43:03,520 --> 01:43:05,119
feel that way do we want to keep this do

2702
01:43:05,119 --> 01:43:06,880
we have you changed your mind in any way

2703
01:43:06,880 --> 01:43:09,199
shape or

2704
01:43:09,600 --> 01:43:12,080
i form about it this since last time to

2705
01:43:12,080 --> 01:43:12,719
be honest

2706
01:43:12,719 --> 01:43:15,040
um

2707
01:43:17,119 --> 01:43:18,880
it seems useful and i haven't given much

2708
01:43:18,880 --> 01:43:20,719
thought into how difficult it is to

2709
01:43:20,719 --> 01:43:23,920
implement i don't think it would be um

2710
01:43:23,920 --> 01:43:24,639
so it

2711
01:43:24,639 --> 01:43:27,440
feels useful i can certainly add it yeah

2712
01:43:27,440 --> 01:43:29,440
try and if it's too much pain then we'll

2713
01:43:29,440 --> 01:43:31,119
discuss

2714
01:43:31,119 --> 01:43:34,159
okay uh one thing that i forgot i'm

2715
01:43:34,159 --> 01:43:35,679
sorry

2716
01:43:35,679 --> 01:43:39,920
yeah that's it okay uh one other

2717
01:43:39,920 --> 01:43:41,920
uh item i didn't i failed to put on this

2718
01:43:41,920 --> 01:43:44,239
this um this slide

2719
01:43:44,239 --> 01:43:47,280
regarding the test method you currently

2720
01:43:47,280 --> 01:43:50,000
can specify an array of email ids

2721
01:43:50,000 --> 01:43:52,080
so that the same script can be run

2722
01:43:52,080 --> 01:43:54,080
against each one of these emails

2723
01:43:54,080 --> 01:43:56,880
um i've given some thought about how

2724
01:43:56,880 --> 01:43:57,360
best

2725
01:43:57,360 --> 01:43:59,920
to handle some of the various extensions

2726
01:43:59,920 --> 01:44:00,960
for instance

2727
01:44:00,960 --> 01:44:04,320
vacation the test

2728
01:44:04,320 --> 01:44:06,320
request right now you can specify

2729
01:44:06,320 --> 01:44:07,440
whether or not

2730
01:44:07,440 --> 01:44:10,560
the sender has been replied to

2731
01:44:10,560 --> 01:44:13,760
previously um we don't do anything

2732
01:44:13,760 --> 01:44:14,560
similar for

2733
01:44:14,560 --> 01:44:16,480
let's say a duplicate test so my

2734
01:44:16,480 --> 01:44:18,000
thinking was given that we've got the

2735
01:44:18,000 --> 01:44:19,440
array

2736
01:44:19,440 --> 01:44:23,760
should the state be maintained between

2737
01:44:23,760 --> 01:44:26,400
the emails as they get run so for

2738
01:44:26,400 --> 01:44:27,600
instance

2739
01:44:27,600 --> 01:44:29,520
you you have any incoming email that

2740
01:44:29,520 --> 01:44:31,280
you're going to test against from

2741
01:44:31,280 --> 01:44:34,080
user foo the first time they'll get a

2742
01:44:34,080 --> 01:44:35,360
vacation response

2743
01:44:35,360 --> 01:44:38,480
if you send another test email

2744
01:44:38,480 --> 01:44:40,480
from the same user they won't get it the

2745
01:44:40,480 --> 01:44:42,639
second time

2746
01:44:42,639 --> 01:44:45,360
or similarly with the duplicate test if

2747
01:44:45,360 --> 01:44:46,800
you send the same email twice the second

2748
01:44:46,800 --> 01:44:47,520
one will be

2749
01:44:47,520 --> 01:44:50,960
essentially you know dropping the floor

2750
01:44:50,960 --> 01:44:52,960
the one question that i did have here

2751
01:44:52,960 --> 01:44:54,239
was would we have to

2752
01:44:54,239 --> 01:44:57,679
specify basically a

2753
01:44:57,679 --> 01:44:59,440
the client could specify a synthesized

2754
01:44:59,440 --> 01:45:00,880
receive date

2755
01:45:00,880 --> 01:45:03,760
for the various emails so the server

2756
01:45:03,760 --> 01:45:07,040
would know how to properly handle them

2757
01:45:10,320 --> 01:45:13,679
any any thoughts on something like this

2758
01:45:13,679 --> 01:45:14,080
or

2759
01:45:14,080 --> 01:45:16,159
you know flip side is we could just drop

2760
01:45:16,159 --> 01:45:17,920
the whole array idea on the floor and

2761
01:45:17,920 --> 01:45:19,920
only do one at a time

2762
01:45:19,920 --> 01:45:21,440
i agree for dropping the whole array

2763
01:45:21,440 --> 01:45:22,880
idea on the floor and just doing one at

2764
01:45:22,880 --> 01:45:24,000
a time you can always

2765
01:45:24,000 --> 01:45:25,600
specify multiple of these things in a

2766
01:45:25,600 --> 01:45:27,440
single jmap stands or a separate method

2767
01:45:27,440 --> 01:45:28,840
calls

2768
01:45:28,840 --> 01:45:32,560
correct so um was there ray

2769
01:45:32,560 --> 01:45:35,040
uh a reason to be able to carry over

2770
01:45:35,040 --> 01:45:37,040
state or was it just a

2771
01:45:37,040 --> 01:45:40,960
kind of useful side effect

2772
01:45:40,960 --> 01:45:42,639
useful side effect the original intent

2773
01:45:42,639 --> 01:45:44,000
was run the same script against

2774
01:45:44,000 --> 01:45:47,040
a bunch of emails

2775
01:45:53,679 --> 01:45:55,360
i can see running script against

2776
01:45:55,360 --> 01:45:58,080
multiple emails but i don't see a much

2777
01:45:58,080 --> 01:46:00,639
reason to run it against multiple

2778
01:46:00,639 --> 01:46:02,560
multiple email messages as opposed to

2779
01:46:02,560 --> 01:46:07,280
did you is it like different uh

2780
01:46:07,280 --> 01:46:11,040
senders basically yeah it's basically

2781
01:46:11,040 --> 01:46:12,639
you've you've got one script that you

2782
01:46:12,639 --> 01:46:13,920
that you want to see what the behavior

2783
01:46:13,920 --> 01:46:15,280
is going to look like and you grab a

2784
01:46:15,280 --> 01:46:16,159
bunch of

2785
01:46:16,159 --> 01:46:18,719
a bunch of uh email blob ids from from

2786
01:46:18,719 --> 01:46:20,239
your inbox let's say

2787
01:46:20,239 --> 01:46:21,920
and say run this script against all

2788
01:46:21,920 --> 01:46:23,679
these emails and tell me what's going to

2789
01:46:23,679 --> 01:46:25,280
happen

2790
01:46:25,280 --> 01:46:26,719
actually the one argument in favor of

2791
01:46:26,719 --> 01:46:28,320
having the email ids

2792
01:46:28,320 --> 01:46:29,760
for that is that you can use back

2793
01:46:29,760 --> 01:46:33,199
references from a query

2794
01:46:33,440 --> 01:46:35,040
rather than having to construct the

2795
01:46:35,040 --> 01:46:36,800
individual commands

2796
01:46:36,800 --> 01:46:38,320
so you could do a query and then back

2797
01:46:38,320 --> 01:46:40,000
reference the resulting ids

2798
01:46:40,000 --> 01:46:43,440
and pass that straight into sieve test

2799
01:46:43,440 --> 01:46:44,880
that would be quite nice

2800
01:46:44,880 --> 01:46:46,080
yeah i hadn't thought about that that's

2801
01:46:46,080 --> 01:46:48,560
a good point i can marginally see a

2802
01:46:48,560 --> 01:46:50,800
reason to have multiple

2803
01:46:50,800 --> 01:46:52,719
to run against multiple email messages

2804
01:46:52,719 --> 01:46:54,480
but then you cannot carry over state

2805
01:46:54,480 --> 01:46:57,760
because that's not what zip does

2806
01:46:57,760 --> 01:47:00,639
okay so we're sounds like alternatively

2807
01:47:00,639 --> 01:47:01,280
you are just

2808
01:47:01,280 --> 01:47:04,480
basically uh sort of now

2809
01:47:04,480 --> 01:47:06,080
so you're not even completely

2810
01:47:06,080 --> 01:47:07,520
implementing a virtual email

2811
01:47:07,520 --> 01:47:11,520
server that has its own internal state

2812
01:47:11,520 --> 01:47:14,000
yeah okay so yeah we'll sound check

2813
01:47:14,000 --> 01:47:14,880
we'll leave the array

2814
01:47:14,880 --> 01:47:16,880
we'll leave the array we'll forget about

2815
01:47:16,880 --> 01:47:18,960
the maintaining state id

2816
01:47:18,960 --> 01:47:21,040
um so for a vacation test you still have

2817
01:47:21,040 --> 01:47:22,320
to specify

2818
01:47:22,320 --> 01:47:24,960
in the in the request itself whether the

2819
01:47:24,960 --> 01:47:27,199
particular recipient has been

2820
01:47:27,199 --> 01:47:31,040
or when a particular sender has received

2821
01:47:31,040 --> 01:47:34,080
last received a vacation response

2822
01:47:34,080 --> 01:47:36,560
do we want to do anything similar for

2823
01:47:36,560 --> 01:47:38,159
duplicate tests

2824
01:47:38,159 --> 01:47:40,480
or any other extensions that i can't

2825
01:47:40,480 --> 01:47:43,519
think of off the top of my head

2826
01:47:44,320 --> 01:47:46,159
uh if you're doing it for one you might

2827
01:47:46,159 --> 01:47:47,360
as well do it for all

2828
01:47:47,360 --> 01:47:50,960
if it's not too much pain okay i'll

2829
01:47:50,960 --> 01:47:52,639
i'll go through the list of available

2830
01:47:52,639 --> 01:47:54,639
sift tests and see

2831
01:47:54,639 --> 01:47:56,639
what other metadata we might need to

2832
01:47:56,639 --> 01:48:00,320
populate in the in the request

2833
01:48:00,880 --> 01:48:05,119
okay if there's nothing further um

2834
01:48:05,119 --> 01:48:07,920
i am done

2835
01:48:08,320 --> 01:48:11,360
great thanks for the feedback

2836
01:48:17,600 --> 01:48:19,920
and i believe we're now up to milestone

2837
01:48:19,920 --> 01:48:22,000
review

2838
01:48:22,000 --> 01:48:25,760
uh here's our milestones

2839
01:48:28,400 --> 01:48:32,960
so we've got some new things in here

2840
01:48:32,960 --> 01:48:37,199
let me just take some notes on it

2841
01:48:39,840 --> 01:48:42,239
adopt document for creating blobs i

2842
01:48:42,239 --> 01:48:43,600
don't even remember whether we did a

2843
01:48:43,600 --> 01:48:45,760
call for adoption on that i think we did

2844
01:48:45,760 --> 01:48:49,520
so um that should hopefully

2845
01:48:49,520 --> 01:48:54,239
happen now ish april 2021

2846
01:48:54,239 --> 01:48:57,280
um civ we should be that's already been

2847
01:48:57,280 --> 01:49:00,480
submitted yeah so i should actually

2848
01:49:00,480 --> 01:49:04,880
mark that as done or has it

2849
01:49:04,880 --> 01:49:06,719
no that's that's submitted to isg which

2850
01:49:06,719 --> 01:49:07,920
is not

2851
01:49:07,920 --> 01:49:10,880
oh yeah sorry yep okay so see if when do

2852
01:49:10,880 --> 01:49:14,159
you think we'll get that done by

2853
01:49:14,159 --> 01:49:15,440
i don't think there's anything other

2854
01:49:15,440 --> 01:49:18,560
than test that itself that needs work so

2855
01:49:18,560 --> 01:49:21,280
i would like to think you know june time

2856
01:49:21,280 --> 01:49:22,800
frame should give us plenty of time to

2857
01:49:22,800 --> 01:49:24,560
work on that

2858
01:49:24,560 --> 01:49:26,800
cool so do a working group last call

2859
01:49:26,800 --> 01:49:28,000
after the next

2860
01:49:28,000 --> 01:49:32,080
document and and working group last call

2861
01:49:32,080 --> 01:49:34,320
for that too right

2862
01:49:34,320 --> 01:49:37,520
before it goes to iesg yes

2863
01:49:37,520 --> 01:49:40,080
yes yep so that's why i'm giving through

2864
01:49:40,080 --> 01:49:41,599
until june for that means we can do the

2865
01:49:41,599 --> 01:49:43,040
working group last call hopefully in

2866
01:49:43,040 --> 01:49:44,080
april

2867
01:49:44,080 --> 01:49:45,520
i would expect i would expect maybe a

2868
01:49:45,520 --> 01:49:47,760
two or three draft churn

2869
01:49:47,760 --> 01:49:51,599
on test until we get what we want

2870
01:49:52,639 --> 01:49:56,800
cool uh address books

2871
01:49:56,800 --> 01:49:58,480
we haven't done a document for jam up

2872
01:49:58,480 --> 01:50:01,760
address books yet um

2873
01:50:01,760 --> 01:50:05,440
neil or robert different from content

2874
01:50:06,080 --> 01:50:08,639
uh contacts is the format address books

2875
01:50:08,639 --> 01:50:09,119
is the

2876
01:50:09,119 --> 01:50:11,599
the gmap server to client way of

2877
01:50:11,599 --> 01:50:14,560
shipping those contacts around

2878
01:50:14,560 --> 01:50:18,560
it thanks yeah i just wanted to see that

2879
01:50:18,880 --> 01:50:20,800
uh so do we have an idea when we might

2880
01:50:20,800 --> 01:50:25,679
adopt a document for that

2881
01:50:25,679 --> 01:50:28,400
do we want to wait until we have the js

2882
01:50:28,400 --> 01:50:29,360
contact

2883
01:50:29,360 --> 01:50:31,679
done a bit more first i don't know yeah

2884
01:50:31,679 --> 01:50:32,960
i think so

2885
01:50:32,960 --> 01:50:35,920
um so should we bump that out to maybe

2886
01:50:35,920 --> 01:50:37,199
like september

2887
01:50:37,199 --> 01:50:41,919
october what do you mean

2888
01:50:43,199 --> 01:50:47,040
the address books japan

2889
01:50:47,920 --> 01:50:52,480
sounds like

2890
01:50:52,480 --> 01:50:54,639
i'm going to say august must be let's be

2891
01:50:54,639 --> 01:50:56,560
uh optimistic

2892
01:50:56,560 --> 01:50:59,040
all right uh jam at blobs obviously

2893
01:50:59,040 --> 01:51:00,880
that's that's gonna

2894
01:51:00,880 --> 01:51:02,880
have to wait because it's january there

2895
01:51:02,880 --> 01:51:04,840
so

2896
01:51:04,840 --> 01:51:07,280
um i'll say

2897
01:51:07,280 --> 01:51:10,480
april and then july

2898
01:51:12,880 --> 01:51:16,080
submit jmf calendars

2899
01:51:16,080 --> 01:51:21,840
what do we what do we think for that

2900
01:51:22,880 --> 01:51:27,599
hopefully after next itf august

2901
01:51:27,599 --> 01:51:30,880
yeah well hopefully yeah

2902
01:51:30,880 --> 01:51:36,880
cool uh gem up quotas

2903
01:51:37,360 --> 01:51:38,719
we didn't even look at that drafts

2904
01:51:38,719 --> 01:51:41,280
expired i think i don't

2905
01:51:41,280 --> 01:51:42,560
unless i was looking at the wrong thing

2906
01:51:42,560 --> 01:51:43,840
i don't think it's been updated in a

2907
01:51:43,840 --> 01:51:45,280
while

2908
01:51:45,280 --> 01:51:48,480
right yeah

2909
01:51:48,480 --> 01:51:50,480
all right i'll follow up um with the

2910
01:51:50,480 --> 01:51:52,880
authors on that

2911
01:51:52,880 --> 01:51:57,199
s mime alexi

2912
01:51:57,520 --> 01:52:00,800
right so let's do x mime signature i

2913
01:52:00,800 --> 01:52:01,360
think

2914
01:52:01,360 --> 01:52:03,760
it expired but that i think it can be

2915
01:52:03,760 --> 01:52:05,119
sent to asg

2916
01:52:05,119 --> 01:52:08,239
by june

2917
01:52:08,400 --> 01:52:10,400
i'll just revive it and then you can do

2918
01:52:10,400 --> 01:52:11,599
last call ah

2919
01:52:11,599 --> 01:52:14,840
the other one um i can pull something by

2920
01:52:14,840 --> 01:52:17,840
august

2921
01:52:18,320 --> 01:52:21,119
july maybe

2922
01:52:21,360 --> 01:52:23,679
yep

2923
01:52:26,880 --> 01:52:31,119
cool that's the adopt yep

2924
01:52:31,119 --> 01:52:34,159
and then uh submit js contact what do we

2925
01:52:34,159 --> 01:52:36,159
think we're for that

2926
01:52:36,159 --> 01:52:40,800
uh after next itf i'd say

2927
01:52:40,800 --> 01:52:44,480
cool so make that

2928
01:52:44,480 --> 01:52:47,199
august as well which just makes sense

2929
01:52:47,199 --> 01:52:48,800
that we submit it and then we adopt

2930
01:52:48,800 --> 01:52:53,679
address books at the same time um

2931
01:52:54,000 --> 01:52:56,639
informational guidance document that's

2932
01:52:56,639 --> 01:52:57,760
still

2933
01:52:57,760 --> 01:52:59,599
in the future so we'll see how we get to

2934
01:52:59,599 --> 01:53:02,000
for that

2935
01:53:02,480 --> 01:53:06,239
um in terms of new milestones to add to

2936
01:53:06,239 --> 01:53:08,400
this

2937
01:53:08,480 --> 01:53:12,400
we need to adopt tasks and

2938
01:53:12,400 --> 01:53:16,080
i'd say we can get that done in april

2939
01:53:16,080 --> 01:53:18,960
2021 because it's just a matter of doing

2940
01:53:18,960 --> 01:53:22,000
a call for adoption

2941
01:53:22,719 --> 01:53:26,639
after that do we have anything else from

2942
01:53:26,639 --> 01:53:28,560
today that that people want to add to

2943
01:53:28,560 --> 01:53:30,719
this

2944
01:53:33,520 --> 01:53:35,280
well not not really to add to it but

2945
01:53:35,280 --> 01:53:37,520
just some late breaking news that

2946
01:53:37,520 --> 01:53:40,400
mdn just went to off 48 state during our

2947
01:53:40,400 --> 01:53:41,840
meeting here so

2948
01:53:41,840 --> 01:53:45,119
that's progress awesome

2949
01:53:45,119 --> 01:53:49,119
nice thank you

2950
01:53:49,840 --> 01:53:52,480
then i think that is all the things i

2951
01:53:52,480 --> 01:53:53,199
put

2952
01:53:53,199 --> 01:53:54,719
adopt the sharing document as well

2953
01:53:54,719 --> 01:53:56,159
because that's something we agreed to do

2954
01:53:56,159 --> 01:53:57,760
during this so that will also be april

2955
01:53:57,760 --> 01:54:00,400
2021

2956
01:54:03,679 --> 01:54:06,960
and that is all i can see looking back

2957
01:54:06,960 --> 01:54:10,159
through our notes from today

2958
01:54:11,679 --> 01:54:13,840
does anybody have any other business

2959
01:54:13,840 --> 01:54:15,599
apart from this

2960
01:54:15,599 --> 01:54:18,400
that is the final item for our last five

2961
01:54:18,400 --> 01:54:19,360
minutes here

2962
01:54:19,360 --> 01:54:23,839
look not that one this one

2963
01:54:28,159 --> 01:54:30,560
all right some of the material that came

2964
01:54:30,560 --> 01:54:31,760
up today will be discussed

2965
01:54:31,760 --> 01:54:34,239
during the cal connect meeting which is

2966
01:54:34,239 --> 01:54:35,199
in the second week of

2967
01:54:35,199 --> 01:54:38,800
april so it's a month from now um

2968
01:54:38,800 --> 01:54:42,159
so i there's a plan to do an intro

2969
01:54:42,159 --> 01:54:43,360
meeting for calex

2970
01:54:43,360 --> 01:54:44,719
probably already during that i don't

2971
01:54:44,719 --> 01:54:46,480
know if we want to also do an interview

2972
01:54:46,480 --> 01:54:48,400
meeting for jmap or do a combined

2973
01:54:48,400 --> 01:54:51,839
interim meeting

2974
01:54:52,719 --> 01:54:55,360
any any opinions or comments on any of

2975
01:54:55,360 --> 01:54:57,519
that

2976
01:55:03,040 --> 01:55:04,880
probably the only other person not i'm

2977
01:55:04,880 --> 01:55:07,920
going to call connect

2978
01:55:07,920 --> 01:55:10,639
so yeah i'm probably one of the few

2979
01:55:10,639 --> 01:55:13,360
people who doesn't go to cal connect

2980
01:55:13,360 --> 01:55:16,080
so you want to do a combined one as long

2981
01:55:16,080 --> 01:55:17,360
as that's okay with

2982
01:55:17,360 --> 01:55:20,960
you know yep cal connect's quite happy

2983
01:55:20,960 --> 01:55:22,239
for us to put in

2984
01:55:22,239 --> 01:55:25,040
interim calls for itf meetings into the

2985
01:55:25,040 --> 01:55:25,679
schedule

2986
01:55:25,679 --> 01:55:27,199
and have calculated people show up as

2987
01:55:27,199 --> 01:55:28,960
well

2988
01:55:28,960 --> 01:55:31,440
can if it's just limited to calendars

2989
01:55:31,440 --> 01:55:33,360
and contacts i think that makes sense

2990
01:55:33,360 --> 01:55:35,280
obviously the other stuff we're doing

2991
01:55:35,280 --> 01:55:37,280
here doesn't really fit in the context

2992
01:55:37,280 --> 01:55:38,719
of cal connect

2993
01:55:38,719 --> 01:55:40,400
yeah yeah we would obviously just

2994
01:55:40,400 --> 01:55:42,080
discuss the topics that that have

2995
01:55:42,080 --> 01:55:43,280
crossover interest

2996
01:55:43,280 --> 01:55:47,840
in that interim meeting

2997
01:55:48,480 --> 01:55:50,159
cool i i suspect we'll just do one

2998
01:55:50,159 --> 01:55:52,320
interim meeting and advertise it to

2999
01:55:52,320 --> 01:55:55,280
to both working groups and say come

3000
01:55:55,280 --> 01:55:56,000
along

3001
01:55:56,000 --> 01:55:57,520
and topics that are in both these

3002
01:55:57,520 --> 01:56:01,840
working groups will be discussed

3003
01:56:03,199 --> 01:56:05,599
all right well thanks everybody that

3004
01:56:05,599 --> 01:56:06,320
that's

3005
01:56:06,320 --> 01:56:09,040
everything we had to discuss today

3006
01:56:09,040 --> 01:56:11,440
robert

3007
01:56:12,480 --> 01:56:15,920
i was just preparing to say goodbye

3008
01:56:15,920 --> 01:56:19,599
sorry all right yeah cool no worries all

3009
01:56:19,599 --> 01:56:20,320
right

3010
01:56:20,320 --> 01:56:23,040
goodbye everybody thanks for joining us

3011
01:56:23,040 --> 01:56:23,840
at whatever

3012
01:56:23,840 --> 01:56:26,960
crazy times you had thanks jim did you

3013
01:56:26,960 --> 01:56:28,560
have anything else jim by the way before

3014
01:56:28,560 --> 01:56:29,599
we we're done

3015
01:56:29,599 --> 01:56:33,040
uh no i don't um a couple action items

3016
01:56:33,040 --> 01:56:33,599
here but

3017
01:56:33,599 --> 01:56:36,080
uh sure uh that i think that'll take

3018
01:56:36,080 --> 01:56:37,760
care of it

3019
01:56:37,760 --> 01:56:41,599
cool awesome thank you all right

3020
01:56:41,599 --> 01:56:43,599
cheers everybody see you all right

3021
01:56:43,599 --> 01:56:56,080
thanks everyone

3022
01:56:56,080 --> 01:56:58,159
you

