1
00:00:10,960 --> 00:00:14,160
good morning everyone

2
00:00:14,160 --> 00:00:17,199
this is the spring session for first

3
00:00:17,199 --> 00:00:21,520
spring session for ietf 110

4
00:00:21,840 --> 00:00:24,119
welcome we will try to move

5
00:00:24,119 --> 00:00:26,480
expeditiously

6
00:00:26,480 --> 00:00:29,439
um i'm actually going to change the

7
00:00:29,439 --> 00:00:31,119
procedure on my co-chairs for a minute

8
00:00:31,119 --> 00:00:32,719
because i've just discovered no it's

9
00:00:32,719 --> 00:00:33,600
working

10
00:00:33,600 --> 00:00:36,320
i just thought i couldn't see the slides

11
00:00:36,320 --> 00:00:37,280
um

12
00:00:37,280 --> 00:00:40,640
we're going to kick off now

13
00:00:40,640 --> 00:00:42,840
with notewell and the chair's

14
00:00:42,840 --> 00:00:45,120
introduction and then we'll look forward

15
00:00:45,120 --> 00:00:47,200
to the various presentations we will try

16
00:00:47,200 --> 00:00:48,000
to keep things

17
00:00:48,000 --> 00:00:51,920
moving along we are very tight on time

18
00:00:51,920 --> 00:00:57,120
even having compressed some things

19
00:00:57,199 --> 00:01:00,559
so with that uh we need the next slide

20
00:01:00,559 --> 00:01:01,199
on the

21
00:01:01,199 --> 00:01:03,440
chair slides and a reminder to everyone

22
00:01:03,440 --> 00:01:05,519
that when you are presenting

23
00:01:05,519 --> 00:01:09,439
we need to see you need to tell us when

24
00:01:09,439 --> 00:01:13,839
a flip to your next slide

25
00:01:14,640 --> 00:01:17,439
joel just as jim just quick one it's

26
00:01:17,439 --> 00:01:18,960
difficult for me to see can you see the

27
00:01:18,960 --> 00:01:20,720
slides okay are they uh

28
00:01:20,720 --> 00:01:23,040
covered on the screen correctly they're

29
00:01:23,040 --> 00:01:24,720
they're on the screen we can see the

30
00:01:24,720 --> 00:01:26,720
slides and a little bit of the sidebar

31
00:01:26,720 --> 00:01:28,000
next to it

32
00:01:28,000 --> 00:01:31,119
but unless somebody complains this form

33
00:01:31,119 --> 00:01:33,200
should be fine for people

34
00:01:33,200 --> 00:01:35,920
okay as you can see this is the note

35
00:01:35,920 --> 00:01:37,280
well i want to just

36
00:01:37,280 --> 00:01:39,040
leave it up here for a moment since this

37
00:01:39,040 --> 00:01:42,880
is the first session of the ietf 110

38
00:01:42,880 --> 00:01:46,399
notewell is important it makes a big

39
00:01:46,399 --> 00:01:49,280
difference please pay attention to it

40
00:01:49,280 --> 00:01:50,560
please abide by it

41
00:01:50,560 --> 00:01:53,600
you have to but please and

42
00:01:53,600 --> 00:01:57,520
thank you okay next slide jim

43
00:02:00,960 --> 00:02:04,880
this is our agenda for today

44
00:02:04,880 --> 00:02:08,639
as you can see it is very tight

45
00:02:08,639 --> 00:02:11,840
we'll we're starting with the status

46
00:02:11,840 --> 00:02:14,080
presentation i'm doing right now and i'm

47
00:02:14,080 --> 00:02:15,920
trying to pick up the pace on that so

48
00:02:15,920 --> 00:02:18,160
that we get a few minutes back

49
00:02:18,160 --> 00:02:20,400
we're going to then get presentations

50
00:02:20,400 --> 00:02:21,200
from the

51
00:02:21,200 --> 00:02:23,599
spring compression design team we've

52
00:02:23,599 --> 00:02:26,239
allocated them 30 minutes total

53
00:02:26,239 --> 00:02:28,640
first half to go over the current state

54
00:02:28,640 --> 00:02:30,319
of the requirements draft which they

55
00:02:30,319 --> 00:02:32,080
seem to think is almost done

56
00:02:32,080 --> 00:02:35,360
which is great thank you finally

57
00:02:35,360 --> 00:02:37,280
and then to talk about where they're

58
00:02:37,280 --> 00:02:39,040
going with the analysis draft which at

59
00:02:39,040 --> 00:02:41,440
the moment is just a framework

60
00:02:41,440 --> 00:02:42,959
we'll then be talking about the

61
00:02:42,959 --> 00:02:45,120
alternative marking method

62
00:02:45,120 --> 00:02:48,400
from giuseppe zafar will be presenting

63
00:02:48,400 --> 00:02:50,000
about the oam

64
00:02:50,000 --> 00:02:53,280
for service programming and then

65
00:02:53,280 --> 00:02:56,319
how you will be presenting about the nc2

66
00:02:56,319 --> 00:02:59,680
oam measurement following that we have

67
00:02:59,680 --> 00:03:02,800
two presentations from rakesh

68
00:03:02,800 --> 00:03:05,920
while they are on individual drafts

69
00:03:05,920 --> 00:03:07,920
this is getting very close to being

70
00:03:07,920 --> 00:03:10,159
adopted so rakesh if you need more than

71
00:03:10,159 --> 00:03:11,040
five minutes

72
00:03:11,040 --> 00:03:14,879
for each we'll deal with it i mean we

73
00:03:14,879 --> 00:03:16,720
we're short of time in the rest of the

74
00:03:16,720 --> 00:03:18,159
session but

75
00:03:18,159 --> 00:03:19,680
it's important you get the time to

76
00:03:19,680 --> 00:03:21,760
present and in particular

77
00:03:21,760 --> 00:03:23,840
if you use your and that's all that's

78
00:03:23,840 --> 00:03:25,760
barely any time to present you use your

79
00:03:25,760 --> 00:03:26,640
time

80
00:03:26,640 --> 00:03:28,799
and we hope there's some discussion

81
00:03:28,799 --> 00:03:31,360
because discussion is the point

82
00:03:31,360 --> 00:03:33,440
we then have an individual presentation

83
00:03:33,440 --> 00:03:34,799
from yakov stein

84
00:03:34,799 --> 00:03:37,280
on routing time sensitive segment

85
00:03:37,280 --> 00:03:39,680
routing time sensitive networking

86
00:03:39,680 --> 00:03:43,440
interesting idea new i hope we have the

87
00:03:43,440 --> 00:03:44,400
time for it

88
00:03:44,400 --> 00:03:46,560
and then the yang data model for bgp

89
00:03:46,560 --> 00:03:48,000
segment routing

90
00:03:48,000 --> 00:03:50,400
that'll be today let's hope we can get

91
00:03:50,400 --> 00:03:51,440
through it all

92
00:03:51,440 --> 00:03:54,159
next slide

93
00:03:55,920 --> 00:03:57,519
the minutes are collaborative there's

94
00:03:57,519 --> 00:03:59,280
the kodi md pointer

95
00:03:59,280 --> 00:04:02,080
our secretary is primarily responsible

96
00:04:02,080 --> 00:04:02,640
but would

97
00:04:02,640 --> 00:04:04,959
she would very much appreciate any help

98
00:04:04,959 --> 00:04:07,920
that folks are willing to give

99
00:04:07,920 --> 00:04:10,159
raise your hand to get in the queue if

100
00:04:10,159 --> 00:04:11,599
you're presenter you don't need to raise

101
00:04:11,599 --> 00:04:12,720
your head we'll tell you to start

102
00:04:12,720 --> 00:04:14,239
presenting and you'll tell us when to

103
00:04:14,239 --> 00:04:16,238
page slides but everybody else

104
00:04:16,238 --> 00:04:18,000
raise your hand to put in the queue will

105
00:04:18,000 --> 00:04:20,560
tell you when to when you can talk

106
00:04:20,560 --> 00:04:23,040
when you can talk unmute yourself you

107
00:04:23,040 --> 00:04:25,199
can speak we won't be unmuting you

108
00:04:25,199 --> 00:04:27,759
you can unmute yourself please remember

109
00:04:27,759 --> 00:04:30,320
to mute yourself when we're done

110
00:04:30,320 --> 00:04:32,320
we'll go through and it do so if we have

111
00:04:32,320 --> 00:04:34,720
to but it works much better if everybody

112
00:04:34,720 --> 00:04:37,120
mutes themselves

113
00:04:37,120 --> 00:04:39,840
this is being recorded this is the ietf

114
00:04:39,840 --> 00:04:42,240
110 we are recording all sessions so

115
00:04:42,240 --> 00:04:44,639
that other people can see them later

116
00:04:44,639 --> 00:04:46,400
it is also as is obvious from your

117
00:04:46,400 --> 00:04:49,440
participation being streamed so

118
00:04:49,440 --> 00:04:54,639
it's all being sent thank you next slide

119
00:04:55,680 --> 00:04:57,520
leonard did you want to say something

120
00:04:57,520 --> 00:04:59,120
right away

121
00:04:59,120 --> 00:05:02,400
thank you um we have some new working

122
00:05:02,400 --> 00:05:03,680
group documents that have been

123
00:05:03,680 --> 00:05:06,880
adopted uh for the vtn

124
00:05:06,880 --> 00:05:08,960
draft which while it needs some work

125
00:05:08,960 --> 00:05:11,360
it's now a working group document it's

126
00:05:11,360 --> 00:05:13,280
the working group to decide how it moves

127
00:05:13,280 --> 00:05:15,680
forward my thanks to the authors for all

128
00:05:15,680 --> 00:05:17,199
the work they've done so far and

129
00:05:17,199 --> 00:05:20,400
are continuing to do and the ihf spring

130
00:05:20,400 --> 00:05:22,400
srv6 path segment

131
00:05:22,400 --> 00:05:25,199
which has been adopted after some delay

132
00:05:25,199 --> 00:05:27,600
thank you

133
00:05:27,600 --> 00:05:30,880
next con next slide we have

134
00:05:30,880 --> 00:05:33,039
the adoption calls on the two gandhi

135
00:05:33,039 --> 00:05:34,479
drafts

136
00:05:34,479 --> 00:05:37,840
rajiv's drafts going on there was enough

137
00:05:37,840 --> 00:05:39,440
support to adopt them

138
00:05:39,440 --> 00:05:41,919
if these were just spring drafts we

139
00:05:41,919 --> 00:05:43,039
would have said

140
00:05:43,039 --> 00:05:46,479
adopted however these very much

141
00:05:46,479 --> 00:05:48,320
overlapped with ippm and the core

142
00:05:48,320 --> 00:05:50,560
material is an ippm and they're still

143
00:05:50,560 --> 00:05:52,240
working out exactly what's going to

144
00:05:52,240 --> 00:05:53,680
happen

145
00:05:53,680 --> 00:05:56,240
we will not adopt until ippm has figured

146
00:05:56,240 --> 00:05:57,919
out what has happened

147
00:05:57,919 --> 00:06:00,000
unless that what happens is a

148
00:06:00,000 --> 00:06:01,919
significant change of content

149
00:06:01,919 --> 00:06:04,240
we will not need another adoption call

150
00:06:04,240 --> 00:06:06,080
we will be using we will stick with the

151
00:06:06,080 --> 00:06:08,000
existing adoption call

152
00:06:08,000 --> 00:06:11,039
and just adopt what is appropriate when

153
00:06:11,039 --> 00:06:14,639
when ippm has determined the path

154
00:06:14,639 --> 00:06:15,759
forward

155
00:06:15,759 --> 00:06:17,280
and that's part of why we're having

156
00:06:17,280 --> 00:06:18,880
rajiv present today

157
00:06:18,880 --> 00:06:21,520
because this stuff is something based on

158
00:06:21,520 --> 00:06:23,520
this is extremely likely to be adopted

159
00:06:23,520 --> 00:06:24,880
by the working group and we want the

160
00:06:24,880 --> 00:06:26,319
working group to know what it's working

161
00:06:26,319 --> 00:06:27,440
on

162
00:06:27,440 --> 00:06:30,160
next slide

163
00:06:30,800 --> 00:06:34,720
spring nshsr is in working group last

164
00:06:34,720 --> 00:06:35,360
call

165
00:06:35,360 --> 00:06:37,759
bruno is running this last call because

166
00:06:37,759 --> 00:06:39,039
jim and i

167
00:06:39,039 --> 00:06:40,639
were co-authors i think right now i'm a

168
00:06:40,639 --> 00:06:42,319
contributor but

169
00:06:42,319 --> 00:06:43,840
we're not going to make the call on it

170
00:06:43,840 --> 00:06:46,479
because it's our document

171
00:06:46,479 --> 00:06:50,080
uh there wasn't enough review folks

172
00:06:50,080 --> 00:06:53,440
we need your review please take a look

173
00:06:53,440 --> 00:06:54,319
at it

174
00:06:54,319 --> 00:06:56,160
get the back to the working group list

175
00:06:56,160 --> 00:06:58,240
if you like it if you dislike it if you

176
00:06:58,240 --> 00:07:00,080
think it needs improvements

177
00:07:00,080 --> 00:07:02,160
whatever but substantive comment would

178
00:07:02,160 --> 00:07:04,319
be really appreciated

179
00:07:04,319 --> 00:07:07,280
so that brulo can appropriately call

180
00:07:07,280 --> 00:07:09,840
what the outcome of the last call is

181
00:07:09,840 --> 00:07:13,679
thank you next slide

182
00:07:14,720 --> 00:07:19,120
two rfcs got approved by the isg

183
00:07:19,120 --> 00:07:21,280
one has been published i was the

184
00:07:21,280 --> 00:07:22,240
shepherd on both

185
00:07:22,240 --> 00:07:25,440
i'm the shepherd on both of these 8986

186
00:07:25,440 --> 00:07:27,919
on the network programming

187
00:07:27,919 --> 00:07:31,120
my thanks to the authors this was

188
00:07:31,120 --> 00:07:33,440
a very long slog there were a lot of

189
00:07:33,440 --> 00:07:36,160
interesting and messy issues in the past

190
00:07:36,160 --> 00:07:38,080
there were a number of interesting

191
00:07:38,080 --> 00:07:40,160
discussions with the iesg while i was

192
00:07:40,160 --> 00:07:41,520
shepherding this

193
00:07:41,520 --> 00:07:42,960
the authors were really good about

194
00:07:42,960 --> 00:07:44,720
addressing the issues

195
00:07:44,720 --> 00:07:47,039
and then working with the rfc editor to

196
00:07:47,039 --> 00:07:48,080
get it done

197
00:07:48,080 --> 00:07:51,680
it is done thank you the yang data model

198
00:07:51,680 --> 00:07:53,360
was approved by the iesg

199
00:07:53,360 --> 00:07:56,560
it is now in front of the rfc editor i

200
00:07:56,560 --> 00:07:56,960
pre

201
00:07:56,960 --> 00:07:59,840
given how responsive the editors were

202
00:07:59,840 --> 00:08:01,520
during the iesg approval

203
00:08:01,520 --> 00:08:03,440
i expect again we will see a smooth

204
00:08:03,440 --> 00:08:05,680
sailing with the rfc editor

205
00:08:05,680 --> 00:08:08,960
but i can't promise anything but we hope

206
00:08:08,960 --> 00:08:10,639
to have it out soon

207
00:08:10,639 --> 00:08:12,800
thanks to the work group thanks to

208
00:08:12,800 --> 00:08:14,319
thanks to the authors and thanks to the

209
00:08:14,319 --> 00:08:15,840
working group for all your support on

210
00:08:15,840 --> 00:08:17,520
these documents

211
00:08:17,520 --> 00:08:21,199
next slide and that's the end of this

212
00:08:21,199 --> 00:08:23,280
presentation jim let's move to the next

213
00:08:23,280 --> 00:08:26,159
one and uh

214
00:08:29,759 --> 00:08:34,080
waiting you're up

215
00:08:34,240 --> 00:08:37,440
thank you hello

216
00:08:37,440 --> 00:08:41,760
cheers me yes we can thank you

217
00:08:41,760 --> 00:08:45,120
okay could i start

218
00:08:46,080 --> 00:08:48,399
you are up just tell jim when to page to

219
00:08:48,399 --> 00:08:50,480
the next slide

220
00:08:50,480 --> 00:08:53,680
yeah so this is a return i will present

221
00:08:53,680 --> 00:08:54,800
to the slides

222
00:08:54,800 --> 00:08:58,080
on behalf of the design team

223
00:08:58,080 --> 00:09:00,959
next page

224
00:09:02,480 --> 00:09:05,040
so here we list the two main tasks

225
00:09:05,040 --> 00:09:06,320
running in design team

226
00:09:06,320 --> 00:09:09,680
one is the requirement to draft and

227
00:09:09,680 --> 00:09:12,480
the other is analysis dropped the

228
00:09:12,480 --> 00:09:14,480
progress of the both draft

229
00:09:14,480 --> 00:09:18,080
is so far so good we almost

230
00:09:18,080 --> 00:09:20,839
finished the work of the requirement

231
00:09:20,839 --> 00:09:23,680
draft and the posted

232
00:09:23,680 --> 00:09:27,600
zero five attribution and we've started

233
00:09:27,600 --> 00:09:30,720
uh discussing the analysis draft

234
00:09:30,720 --> 00:09:33,839
and the poster the zero zero revision we

235
00:09:33,839 --> 00:09:34,560
will take

236
00:09:34,560 --> 00:09:38,240
two slots to go through the both of them

237
00:09:38,240 --> 00:09:40,880
let's go to requirement drop-down first

238
00:09:40,880 --> 00:09:41,279
next

239
00:09:41,279 --> 00:09:43,600
page

240
00:09:45,200 --> 00:09:51,839
oh so this is analysis dropped right

241
00:09:52,800 --> 00:09:56,000
so no problem let's go through the

242
00:09:56,000 --> 00:09:59,040
analysis structure and first

243
00:09:59,040 --> 00:10:02,240
so this draft

244
00:10:02,320 --> 00:10:05,920
will provide uh some analysis of

245
00:10:05,920 --> 00:10:09,360
proposed approaches to comprising

246
00:10:09,360 --> 00:10:12,320
segment routing information for use of

247
00:10:12,320 --> 00:10:13,839
ipv6

248
00:10:13,839 --> 00:10:16,720
uh here is a brief introduction of the

249
00:10:16,720 --> 00:10:18,880
analysis dropped

250
00:10:18,880 --> 00:10:22,800
the analysis draft effect

251
00:10:22,800 --> 00:10:26,000
based on the basic input

252
00:10:26,000 --> 00:10:29,760
from the requirement draft

253
00:10:29,760 --> 00:10:34,000
about one month ago we

254
00:10:34,000 --> 00:10:37,279
solicited the proposals in spring

255
00:10:37,279 --> 00:10:38,480
working group

256
00:10:38,480 --> 00:10:42,240
and six mile working group for two weeks

257
00:10:42,240 --> 00:10:47,839
finally we decided to analyze the

258
00:11:08,399 --> 00:11:15,519
we seem to have lost your audio

259
00:11:15,519 --> 00:11:17,519
yeah while we're at it joel have i got

260
00:11:17,519 --> 00:11:19,040
the wrong slides here because

261
00:11:19,040 --> 00:11:20,959
uh he's going through the analysis which

262
00:11:20,959 --> 00:11:22,320
uh that's what you're showing the

263
00:11:22,320 --> 00:11:23,839
analysis slides jim

264
00:11:23,839 --> 00:11:25,360
but we can't hear watching all of a

265
00:11:25,360 --> 00:11:29,839
sudden no

266
00:11:35,600 --> 00:11:37,600
okay seems to dropped off do we want to

267
00:11:37,600 --> 00:11:40,839
uh do we want to jump to

268
00:11:40,839 --> 00:11:43,600
um

269
00:11:43,600 --> 00:11:46,399
he's just coming back

270
00:11:49,600 --> 00:11:52,160
can you yeah sorry we lost you there

271
00:11:52,160 --> 00:11:54,000
waiting but uh let me interrupt for a

272
00:11:54,000 --> 00:11:54,639
second

273
00:11:54,639 --> 00:11:58,240
would you prefer me to jump to the um

274
00:11:58,240 --> 00:12:00,240
requirement slides and then do the

275
00:12:00,240 --> 00:12:01,839
analysis or are you happy to continue

276
00:12:01,839 --> 00:12:03,600
with the analysis it seems

277
00:12:03,600 --> 00:12:05,360
i pulled up the wrong slides here so i

278
00:12:05,360 --> 00:12:06,639
can jump to the other ones pretty

279
00:12:06,639 --> 00:12:08,959
quickly

280
00:12:08,959 --> 00:12:11,519
no problem let's go through the analysis

281
00:12:11,519 --> 00:12:12,079
draft

282
00:12:12,079 --> 00:12:15,120
directly no problem i think okay all

283
00:12:15,120 --> 00:12:17,040
right so we're on the introduction slide

284
00:12:17,040 --> 00:12:18,880
so please go ahead

285
00:12:18,880 --> 00:12:21,680
yeah so this page gives some uh

286
00:12:21,680 --> 00:12:24,079
introduction of the analysis draft and

287
00:12:24,079 --> 00:12:25,519
uh

288
00:12:25,519 --> 00:12:28,320
i think we finally decided to analyze

289
00:12:28,320 --> 00:12:29,519
the following

290
00:12:29,519 --> 00:12:33,519
four proposals the first one is sysad

291
00:12:33,519 --> 00:12:37,279
i think which is a combination of the

292
00:12:37,279 --> 00:12:40,320
uh gc than the micro state

293
00:12:40,320 --> 00:12:44,480
and the second one is the eyes i think

294
00:12:44,480 --> 00:12:47,680
everyone knows that draft and the third

295
00:12:47,680 --> 00:12:48,480
one

296
00:12:48,480 --> 00:12:52,000
is visit it defines the site of

297
00:12:52,000 --> 00:12:55,040
the seed behaviors to uh

298
00:12:55,040 --> 00:12:57,680
access a similar uh seat within the

299
00:12:57,680 --> 00:12:58,720
assad

300
00:12:58,720 --> 00:13:02,240
hider and the third one is uid

301
00:13:02,240 --> 00:13:05,760
uh and uh i think it it

302
00:13:05,760 --> 00:13:08,880
extends the srh to carry

303
00:13:08,880 --> 00:13:12,880
such as amperes labels or ipv6 addresses

304
00:13:12,880 --> 00:13:16,320
next page so the following

305
00:13:16,320 --> 00:13:18,399
next four pages are provided by

306
00:13:18,399 --> 00:13:19,600
co-authors of those

307
00:13:19,600 --> 00:13:23,279
proposals respectively and

308
00:13:23,279 --> 00:13:28,079
this page is for the sysad which

309
00:13:28,079 --> 00:13:32,160
don't need any sr6 data plan

310
00:13:32,160 --> 00:13:34,720
or control plan change and the library

311
00:13:34,720 --> 00:13:36,959
to the srv6 network program

312
00:13:36,959 --> 00:13:40,320
model it provides two flavors

313
00:13:40,320 --> 00:13:43,199
uh let's see see the flavor reflect the

314
00:13:43,199 --> 00:13:44,480
micro seed

315
00:13:44,480 --> 00:13:48,560
and the replace cc the flavor reflector

316
00:13:48,560 --> 00:13:50,959
g68 both of them are in the same

317
00:13:50,959 --> 00:13:52,000
framework

318
00:13:52,000 --> 00:13:54,639
next page

319
00:13:55,440 --> 00:13:57,199
yeah this picture is a brief

320
00:13:57,199 --> 00:13:59,600
introduction for crh

321
00:13:59,600 --> 00:14:02,639
see how you should define the two new

322
00:14:02,639 --> 00:14:04,000
ipv6

323
00:14:04,000 --> 00:14:08,560
routing hydra cih16 and the cih

324
00:14:08,560 --> 00:14:11,760
32 and each side maps to

325
00:14:11,760 --> 00:14:15,680
a cih fiber entry there is no change

326
00:14:15,680 --> 00:14:18,800
to ipv6 for the plan or

327
00:14:18,800 --> 00:14:21,839
addressing model and just a minimal

328
00:14:21,839 --> 00:14:22,639
change to

329
00:14:22,639 --> 00:14:27,519
assab6 control plan next page

330
00:14:28,320 --> 00:14:31,519
is this page give a brief introduction

331
00:14:31,519 --> 00:14:32,399
for visit

332
00:14:32,399 --> 00:14:36,160
i think a visit is a very interesting

333
00:14:36,160 --> 00:14:39,199
solution it generates the

334
00:14:39,199 --> 00:14:42,320
uh the ici for any size of

335
00:14:42,320 --> 00:14:45,440
seeds and the prefix and

336
00:14:45,440 --> 00:14:49,600
it builds on a common srv6 locator

337
00:14:49,600 --> 00:14:54,160
prefix one seat

338
00:14:54,160 --> 00:14:58,160
is a combined prefix and said

339
00:14:58,160 --> 00:15:01,760
include encode only the visit

340
00:15:01,760 --> 00:15:04,720
in sih

341
00:15:05,360 --> 00:15:09,600
i think it everything else

342
00:15:09,600 --> 00:15:13,800
using the regular 20

343
00:15:13,800 --> 00:15:15,540
128-bit set

344
00:15:15,540 --> 00:15:17,120
[Music]

345
00:15:17,120 --> 00:15:19,519
can be

346
00:15:20,480 --> 00:15:23,680
used as a similar

347
00:15:23,680 --> 00:15:27,440
solution it does not require any srb6

348
00:15:27,440 --> 00:15:30,720
into plant change and it also leverages

349
00:15:30,720 --> 00:15:31,199
the

350
00:15:31,199 --> 00:15:36,880
srv6 network programming model next page

351
00:15:37,600 --> 00:15:40,720
this page has a brief introduction for

352
00:15:40,720 --> 00:15:44,240
uid it's a comprised

353
00:15:44,240 --> 00:15:48,720
srb6 solution

354
00:15:49,279 --> 00:15:55,839
it introduces

355
00:15:57,199 --> 00:15:59,440
did we just lose weight we just lost

356
00:15:59,440 --> 00:16:09,839
weight ching again

357
00:16:11,120 --> 00:16:13,680
you're back

358
00:16:20,839 --> 00:16:23,839
hello

359
00:16:25,040 --> 00:16:29,360
it hello it used the

360
00:16:29,360 --> 00:16:33,079
the uet flag to unify the traditional

361
00:16:33,079 --> 00:16:36,320
i768 and a

362
00:16:36,320 --> 00:16:39,920
unified seed following behavior

363
00:16:39,920 --> 00:16:43,440
such as a different

364
00:16:43,440 --> 00:16:47,120
code can represent ipv6

365
00:16:47,120 --> 00:16:51,040
address npr sleep or ipv4

366
00:16:51,040 --> 00:16:54,160
address so

367
00:16:54,160 --> 00:16:56,800
next page

368
00:16:58,240 --> 00:17:00,880
so the network is is so bad so sorry

369
00:17:00,880 --> 00:17:01,519
maybe

370
00:17:01,519 --> 00:17:05,310
you lost me just now next page

371
00:17:05,310 --> 00:17:08,899
[Music]

372
00:17:09,520 --> 00:17:12,959
hello charles can you hear me yes we can

373
00:17:12,959 --> 00:17:13,839
hear you

374
00:17:13,839 --> 00:17:17,678
we can hear you and i'm on i'm

375
00:17:29,440 --> 00:17:33,280
this page it gave up

376
00:17:33,280 --> 00:17:36,559
i understand yeah this page give basic

377
00:17:36,559 --> 00:17:40,640
uh scenarios uh we hope analyze

378
00:17:40,640 --> 00:17:44,480
each solution based on this um

379
00:17:44,480 --> 00:17:47,840
figure it consisting of

380
00:17:47,840 --> 00:17:52,160
three sub domains uh and

381
00:17:52,160 --> 00:17:56,559
we will use this to

382
00:17:56,559 --> 00:17:59,679
analyze such as the height size

383
00:17:59,679 --> 00:18:02,720
the forwarding efficiency and the state

384
00:18:02,720 --> 00:18:07,039
efficiency okay next page

385
00:18:09,679 --> 00:18:11,919
so

386
00:18:13,120 --> 00:18:16,240
this maybe you you have a

387
00:18:16,240 --> 00:18:19,919
page up so next page gives us some

388
00:18:19,919 --> 00:18:23,360
uh progress of this draft

389
00:18:23,360 --> 00:18:26,880
and uh we started this draft from

390
00:18:26,880 --> 00:18:30,400
february and uh

391
00:18:30,400 --> 00:18:34,160
now we have a submit

392
00:18:36,160 --> 00:18:39,360
through zero zero version which

393
00:18:39,360 --> 00:18:42,640
is a template for instruction and

394
00:18:42,640 --> 00:18:46,240
the format

395
00:18:46,240 --> 00:18:49,520
and we hope to

396
00:18:50,640 --> 00:18:54,320
start the work on this draft

397
00:18:54,320 --> 00:18:58,000
after itf meeting and maybe

398
00:18:58,000 --> 00:19:01,520
in the middle of april uh we hope to

399
00:19:01,520 --> 00:19:02,720
complete

400
00:19:02,720 --> 00:19:05,919
the remaining endless text proposal

401
00:19:05,919 --> 00:19:09,600
for design team review

402
00:19:09,600 --> 00:19:13,760
and at the later april we hope to

403
00:19:13,760 --> 00:19:16,880
post a preliminary

404
00:19:16,880 --> 00:19:20,400
version to working group and

405
00:19:20,400 --> 00:19:23,679
at the late of may we hope

406
00:19:23,679 --> 00:19:27,679
to uh submit a new revision

407
00:19:27,679 --> 00:19:30,799
for spring review uh

408
00:19:30,799 --> 00:19:33,360
so that is a rough plan and i hope we

409
00:19:33,360 --> 00:19:34,000
can

410
00:19:34,000 --> 00:19:38,080
catch up with uh the progress

411
00:19:38,080 --> 00:19:41,760
uh we uh promised

412
00:19:41,760 --> 00:19:44,880
so that that's all thank you i

413
00:19:44,880 --> 00:19:48,080
i think it uh could i finish

414
00:19:48,080 --> 00:19:51,440
the next uh slides uh presentation

415
00:19:51,440 --> 00:19:54,799
and then let's go to some

416
00:19:54,799 --> 00:19:57,120
comments or questions yeah that makes

417
00:19:57,120 --> 00:19:58,960
sense wait uh waiting and i've got the

418
00:19:58,960 --> 00:20:01,919
slides showing now

419
00:20:03,600 --> 00:20:07,679
okay so this one is the

420
00:20:07,679 --> 00:20:12,080
requirement draft and

421
00:20:12,080 --> 00:20:15,600
i think here

422
00:20:15,600 --> 00:20:21,360
next page

423
00:20:21,360 --> 00:20:24,400
i did not see any change so uh

424
00:20:24,400 --> 00:20:27,039
i suppose

425
00:20:27,679 --> 00:20:30,960
we we are seeing the second page

426
00:20:30,960 --> 00:20:34,960
so wait waiting it's jim here so

427
00:20:34,960 --> 00:20:36,640
there's obviously a delay on your end

428
00:20:36,640 --> 00:20:38,320
just assume that when you say that

429
00:20:38,320 --> 00:20:40,240
uh change the slide i've already done it

430
00:20:40,240 --> 00:20:41,520
and people can see it

431
00:20:41,520 --> 00:20:44,320
and just continue

432
00:20:46,240 --> 00:20:50,000
okay so uh yeah

433
00:20:50,000 --> 00:20:53,520
this page uh i think uh

434
00:20:53,520 --> 00:20:56,799
we have we have already

435
00:20:56,799 --> 00:21:01,760
uh upload the the zero fiber revision

436
00:21:01,760 --> 00:21:04,960
and i think it

437
00:21:04,960 --> 00:21:08,559
we hope to present

438
00:21:08,559 --> 00:21:11,919
the slides based on the latest

439
00:21:11,919 --> 00:21:17,840
version so next page

440
00:21:19,200 --> 00:21:24,000
and here is the latest

441
00:21:24,320 --> 00:21:27,280
here is the latest status of the

442
00:21:27,280 --> 00:21:28,000
requirements

443
00:21:28,000 --> 00:21:32,159
draft in the zero five division

444
00:21:32,159 --> 00:21:35,360
we have included all the requirements

445
00:21:35,360 --> 00:21:39,360
we've received and the design team have

446
00:21:39,360 --> 00:21:42,559
gone through all of them and

447
00:21:42,559 --> 00:21:45,760
now only three of them with a rough but

448
00:21:45,760 --> 00:21:49,679
not you need numerous

449
00:21:49,679 --> 00:21:53,120
concerns uh within design team

450
00:21:53,120 --> 00:21:56,480
so i think we almost finished

451
00:21:56,480 --> 00:21:59,840
uh the requirements draft

452
00:21:59,840 --> 00:22:04,080
in design team we hope a working group

453
00:22:04,080 --> 00:22:08,799
can review it and feedback

454
00:22:08,799 --> 00:22:12,080
the comments so

455
00:22:12,080 --> 00:22:15,440
compared to the revision due

456
00:22:15,440 --> 00:22:18,559
this version moves three items

457
00:22:18,559 --> 00:22:20,880
uh i think that is the important items

458
00:22:20,880 --> 00:22:22,960
from appendix to the

459
00:22:22,960 --> 00:22:26,400
main text which are blue

460
00:22:26,400 --> 00:22:29,919
highlighted and we also

461
00:22:29,919 --> 00:22:35,200
added nine items with rider

462
00:22:38,840 --> 00:22:41,840
highlighted

463
00:22:45,919 --> 00:22:49,360
we take a quick

464
00:22:49,360 --> 00:22:55,200
look at the next page

465
00:22:55,200 --> 00:22:58,559
uh so uh next

466
00:22:58,559 --> 00:23:01,600
several page we will talk about the

467
00:23:01,600 --> 00:23:02,240
items

468
00:23:02,240 --> 00:23:05,760
with consonants in

469
00:23:05,760 --> 00:23:09,840
design team next page

470
00:23:12,480 --> 00:23:15,919
yeah so according to

471
00:23:15,919 --> 00:23:20,840
the comments in itf

472
00:23:20,840 --> 00:23:23,760
109 we clarified

473
00:23:23,760 --> 00:23:26,960
the goals of the design team uh

474
00:23:26,960 --> 00:23:29,520
i think the first one is to identify

475
00:23:29,520 --> 00:23:30,400
solutions

476
00:23:30,400 --> 00:23:35,039
to srv6 succeed proposals

477
00:23:35,760 --> 00:23:39,520
two sr over ipv6 seed list

478
00:23:39,520 --> 00:23:43,120
comprision that are based on the sr6

479
00:23:43,120 --> 00:23:47,039
standard and the second one is

480
00:23:47,039 --> 00:23:50,159
to consider proposals that are not based

481
00:23:50,159 --> 00:23:51,679
on

482
00:23:51,679 --> 00:23:56,400
the srv6 data plan and the control plan

483
00:23:56,400 --> 00:24:00,000
as such this

484
00:24:00,000 --> 00:24:03,440
document includes the requirements to

485
00:24:03,440 --> 00:24:06,720
evaluate whether the compression

486
00:24:06,720 --> 00:24:09,919
proposal provides all the functionality

487
00:24:09,919 --> 00:24:10,159
of

488
00:24:10,159 --> 00:24:12,960
i-76

489
00:24:14,159 --> 00:24:19,840
so i did not the next page

490
00:24:20,000 --> 00:24:23,760
yeah so this page is for srv6 based

491
00:24:23,760 --> 00:24:27,679
i think we were presented in last iatf

492
00:24:27,679 --> 00:24:28,640
meeting we just

493
00:24:28,640 --> 00:24:31,919
move it to the main text and we get

494
00:24:31,919 --> 00:24:33,440
agreed

495
00:24:33,440 --> 00:24:36,320
agreement on this point i think that is

496
00:24:36,320 --> 00:24:37,679
a basic part

497
00:24:37,679 --> 00:24:47,840
next page

498
00:24:54,240 --> 00:24:57,840
go ahead waiting heterogeneous said

499
00:24:57,840 --> 00:25:01,360
yeah this is uh also

500
00:25:01,360 --> 00:25:05,520
from appendix to the main text

501
00:25:05,520 --> 00:25:09,039
we will review that last meeting

502
00:25:09,039 --> 00:25:11,679
next page

503
00:25:12,080 --> 00:25:17,279
so this one is a new one it's um

504
00:25:17,279 --> 00:25:21,440
give some requirement

505
00:25:21,440 --> 00:25:25,120
that the mechanism

506
00:25:25,120 --> 00:25:28,240
must not cause the loss of

507
00:25:28,240 --> 00:25:31,600
non-routing information when delivering

508
00:25:31,600 --> 00:25:34,720
a packet from assa ingress node

509
00:25:34,720 --> 00:25:38,080
to the egress as a node

510
00:25:38,080 --> 00:25:42,480
in the next page

511
00:25:42,480 --> 00:25:46,480
yeah this page is for the addressing

512
00:25:46,480 --> 00:25:51,440
planning so uh network operators

513
00:25:51,440 --> 00:25:57,840
require addressing planning flexibility

514
00:26:08,840 --> 00:26:11,840
so

515
00:26:20,960 --> 00:26:24,080
deployment by using

516
00:26:24,080 --> 00:26:29,600
gua from a different address block

517
00:26:30,080 --> 00:26:33,840
so this is for advancing

518
00:26:33,840 --> 00:26:38,799
planning next page

519
00:26:38,799 --> 00:26:43,679
yeah for the comprision levels

520
00:26:44,080 --> 00:26:47,840
the compression proposal should be able

521
00:26:47,840 --> 00:26:48,640
to

522
00:26:48,640 --> 00:26:51,679
support multiple levels of compression

523
00:26:51,679 --> 00:26:54,640
i think that is a basic requirement next

524
00:26:54,640 --> 00:26:56,960
page

525
00:27:05,279 --> 00:27:08,559
so this is for the ps

526
00:27:08,559 --> 00:27:11,760
or bcp compliance i think this

527
00:27:11,760 --> 00:27:14,960
is a very common

528
00:27:15,600 --> 00:27:18,320
requirement

529
00:27:19,279 --> 00:27:22,880
we hope if there it does not

530
00:27:22,880 --> 00:27:26,640
comply with any pis or pcp

531
00:27:26,640 --> 00:27:30,080
uh it should cause to

532
00:27:30,080 --> 00:27:33,279
update the related document i think it

533
00:27:33,279 --> 00:27:34,240
definitely

534
00:27:34,240 --> 00:27:37,360
so next page

535
00:27:41,039 --> 00:27:44,559
yeah here is some security mechanism

536
00:27:44,559 --> 00:27:47,760
so the compression solution should be

537
00:27:47,760 --> 00:27:48,480
able to

538
00:27:48,480 --> 00:27:51,600
address a security issue

539
00:27:51,600 --> 00:27:56,000
that introduces

540
00:27:56,000 --> 00:28:00,640
using existing security mechanisms

541
00:28:00,640 --> 00:28:03,840
i think it's obvious requirement

542
00:28:03,840 --> 00:28:04,710
next page

543
00:28:04,710 --> 00:28:07,039
[Music]

544
00:28:07,039 --> 00:28:10,080
so this page is about assad domain

545
00:28:10,080 --> 00:28:11,600
protection

546
00:28:11,600 --> 00:28:16,720
uh some operators arise this requirement

547
00:28:16,720 --> 00:28:20,880
the compression solution must not

548
00:28:20,880 --> 00:28:24,159
require nodes outside

549
00:28:24,159 --> 00:28:27,760
the sr domain to know the state value

550
00:28:27,760 --> 00:28:31,360
within the assignment so it

551
00:28:31,360 --> 00:28:34,720
must provide the ability to block

552
00:28:34,720 --> 00:28:38,399
nodes outside and assign domain

553
00:28:38,399 --> 00:28:42,480
from accessing seats so

554
00:28:42,480 --> 00:28:45,840
next page

555
00:28:47,200 --> 00:28:51,600
yeah following three requirements

556
00:28:51,600 --> 00:28:54,720
with a rough but not

557
00:28:54,720 --> 00:28:57,760
you need numerous concepts

558
00:28:57,760 --> 00:29:01,120
within design team and we hope to get

559
00:29:01,120 --> 00:29:06,479
feedback in working group next page

560
00:29:06,799 --> 00:29:11,520
uh sorry here maybe the title is

561
00:29:11,520 --> 00:29:14,720
wrong it should be ipv6 based

562
00:29:14,720 --> 00:29:18,640
it's a typo so this requirement

563
00:29:18,640 --> 00:29:22,159
require every node

564
00:29:22,159 --> 00:29:25,760
along the package delivery path to be

565
00:29:25,760 --> 00:29:29,360
ipv6 capable

566
00:29:29,360 --> 00:29:32,799
it must not require any nodes

567
00:29:32,799 --> 00:29:35,360
along the packet of ordering paths to

568
00:29:35,360 --> 00:29:37,840
support any other forwarding plan

569
00:29:37,840 --> 00:29:42,159
such as ipv6 or amperes

570
00:29:42,159 --> 00:29:46,960
something like that next page

571
00:29:48,960 --> 00:29:52,000
yeah this one is about

572
00:29:52,000 --> 00:29:55,279
0.2 multipoint in fact the design team

573
00:29:55,279 --> 00:29:58,640
sent a email to working group

574
00:29:58,640 --> 00:30:02,320
to ask for

575
00:30:02,320 --> 00:30:07,200
some feedback so this one

576
00:30:07,360 --> 00:30:11,279
this item uh give a requirement that

577
00:30:11,279 --> 00:30:15,039
the compression mechanism should

578
00:30:15,039 --> 00:30:19,440
support p2mp sr pass

579
00:30:19,440 --> 00:30:22,799
and in

580
00:30:22,799 --> 00:30:25,440
design team we have not got the

581
00:30:25,440 --> 00:30:26,640
agreement on that

582
00:30:26,640 --> 00:30:31,039
but most of members

583
00:30:31,039 --> 00:30:35,039
think it's reasonable next page

584
00:30:35,279 --> 00:30:40,080
next page is about the possibility

585
00:30:40,080 --> 00:30:43,520
this requirement

586
00:30:43,919 --> 00:30:51,840
hope the compression mechanism must be

587
00:31:03,519 --> 00:31:06,960
that comprise the seed list must be

588
00:31:06,960 --> 00:31:10,960
able to decode the active

589
00:31:10,960 --> 00:31:15,039
and the next segment

590
00:31:15,039 --> 00:31:19,039
passing information may be

591
00:31:19,039 --> 00:31:22,000
conveyed in either the forwarding or

592
00:31:22,000 --> 00:31:23,600
control plan

593
00:31:23,600 --> 00:31:27,600
so i think this is also a very important

594
00:31:27,600 --> 00:31:33,410
requirement so next page

595
00:31:33,410 --> 00:31:37,049
[Music]

596
00:31:37,760 --> 00:31:40,960
yeah uh

597
00:31:40,960 --> 00:31:43,360
so let's just take questions we're we're

598
00:31:43,360 --> 00:31:44,720
out of time and this is

599
00:31:44,720 --> 00:31:47,120
this is just a final so let's just

600
00:31:47,120 --> 00:31:49,360
questions or comments

601
00:31:49,360 --> 00:31:51,200
please raise your hand put yourself in

602
00:31:51,200 --> 00:31:55,440
the queue we'll recognize you quickly

603
00:31:55,679 --> 00:32:01,840
yeah go ahead

604
00:32:03,840 --> 00:32:07,840
okay you can ask your question

605
00:32:08,000 --> 00:32:11,679
please unmute yourself and you cannot

606
00:32:12,840 --> 00:32:15,600
speak

607
00:32:15,600 --> 00:32:19,360
this is from marcus can you hear me yes

608
00:32:19,360 --> 00:32:21,919
super i was in and out of the

609
00:32:21,919 --> 00:32:23,200
presentations uh

610
00:32:23,200 --> 00:32:26,399
during the analysis proposal um

611
00:32:26,399 --> 00:32:29,360
and the question is specifically on the

612
00:32:29,360 --> 00:32:30,799
analysis draft

613
00:32:30,799 --> 00:32:34,159
i've noticed uh on the mailing list

614
00:32:34,159 --> 00:32:37,519
that uh there was an analysis for

615
00:32:37,519 --> 00:32:40,640
set of proposals

616
00:32:40,640 --> 00:32:43,760
that was done earlier however the

617
00:32:43,760 --> 00:32:45,919
comparative analysis has not been

618
00:32:45,919 --> 00:32:48,559
released in the draft is there a

619
00:32:48,559 --> 00:32:50,080
specific reason or

620
00:32:50,080 --> 00:32:53,840
will that happen anytime soon

621
00:32:55,039 --> 00:32:57,519
yeah yeah so thank you for the question

622
00:32:57,519 --> 00:32:59,919
question

623
00:33:00,480 --> 00:33:03,760
uh i think about one month ago

624
00:33:03,760 --> 00:33:07,039
we sent a

625
00:33:07,039 --> 00:33:10,320
email to a spring working group and a

626
00:33:10,320 --> 00:33:11,679
six-month

627
00:33:11,679 --> 00:33:14,720
group to call for the

628
00:33:14,720 --> 00:33:17,840
candidate proposals and

629
00:33:17,840 --> 00:33:23,120
we did not get some more feedback

630
00:33:23,120 --> 00:33:26,320
for the proposals

631
00:33:26,320 --> 00:33:29,919
and these four proposals uh

632
00:33:29,919 --> 00:33:33,279
are provided by the members

633
00:33:33,279 --> 00:33:37,600
in the working group so this moment

634
00:33:37,600 --> 00:33:40,640
we hope to analyze

635
00:33:40,640 --> 00:33:44,720
those four proposals

636
00:33:44,720 --> 00:33:47,760
in the analysis draft

637
00:33:47,760 --> 00:33:50,720
if in the future there are some more

638
00:33:50,720 --> 00:33:51,600
proposals

639
00:33:51,600 --> 00:33:55,200
i think we need to see how we

640
00:33:55,200 --> 00:33:58,799
can handle it but uh if

641
00:33:58,799 --> 00:34:01,919
we will set some deadline

642
00:34:01,919 --> 00:34:05,600
for the candidate propose i think that

643
00:34:05,600 --> 00:34:07,919
deadline is uh

644
00:34:07,919 --> 00:34:11,359
february uh 12th so

645
00:34:11,359 --> 00:34:14,560
this revision we hope just analyze

646
00:34:14,560 --> 00:34:17,599
these four thank you

647
00:34:17,599 --> 00:34:21,839
okay andrew go ahead

648
00:34:23,040 --> 00:34:27,119
yeah um so i've got a simple question

649
00:34:27,119 --> 00:34:28,719
and this is more aimed at

650
00:34:28,719 --> 00:34:32,320
chairs and the 80s

651
00:34:32,320 --> 00:34:35,199
we're now sitting more than a year into

652
00:34:35,199 --> 00:34:36,879
world a year into this process

653
00:34:36,879 --> 00:34:40,000
with further delays in the meantime

654
00:34:40,000 --> 00:34:42,079
multiple of the solutions that are being

655
00:34:42,079 --> 00:34:43,599
talked about here are shipping

656
00:34:43,599 --> 00:34:46,320
in active code on spotted code points

657
00:34:46,320 --> 00:34:47,440
etc

658
00:34:47,440 --> 00:34:50,320
and the development is continuing so

659
00:34:50,320 --> 00:34:51,918
what i want to know

660
00:34:51,918 --> 00:34:55,119
is what is the actual way forward when

661
00:34:55,119 --> 00:34:57,040
are we going to get some clarity because

662
00:34:57,040 --> 00:34:59,920
the longer this drags on we know that

663
00:34:59,920 --> 00:35:01,440
these things are going to appear in

664
00:35:01,440 --> 00:35:03,040
routers whether we like it or not

665
00:35:03,040 --> 00:35:04,560
they're developed they're out there

666
00:35:04,560 --> 00:35:05,839
they're shipping

667
00:35:05,839 --> 00:35:07,680
they're sitting on squatted code points

668
00:35:07,680 --> 00:35:09,920
at the moment but if we go

669
00:35:09,920 --> 00:35:12,400
and continue a process that is going to

670
00:35:12,400 --> 00:35:13,599
take another year

671
00:35:13,599 --> 00:35:16,000
and another year and another year we're

672
00:35:16,000 --> 00:35:17,760
going to be sitting in a situation where

673
00:35:17,760 --> 00:35:19,680
sooner or later if these things ever do

674
00:35:19,680 --> 00:35:22,079
become rfcs the code points change

675
00:35:22,079 --> 00:35:24,079
that's bad for the consumer that's bad

676
00:35:24,079 --> 00:35:25,599
for the industry that's bad for the

677
00:35:25,599 --> 00:35:26,960
operators

678
00:35:26,960 --> 00:35:30,079
so my question is this is all well and

679
00:35:30,079 --> 00:35:31,280
good

680
00:35:31,280 --> 00:35:34,160
but and i've said it before this stuff

681
00:35:34,160 --> 00:35:35,760
is going to continue with or without

682
00:35:35,760 --> 00:35:38,240
so what is the process from here where

683
00:35:38,240 --> 00:35:40,079
do we go from here when

684
00:35:40,079 --> 00:35:42,079
nobody's stopping development and now

685
00:35:42,079 --> 00:35:43,760
we've got stuff that because of the

686
00:35:43,760 --> 00:35:45,280
delays and because of the war of

687
00:35:45,280 --> 00:35:46,320
attrition

688
00:35:46,320 --> 00:35:49,200
is actually now shipping so where to

689
00:35:49,200 --> 00:35:51,680
from here

690
00:35:55,280 --> 00:35:57,920
the chairs are aware of the time it's

691
00:35:57,920 --> 00:35:59,680
taking and we are talking

692
00:35:59,680 --> 00:36:02,079
about ways to make things expeditiously

693
00:36:02,079 --> 00:36:04,400
but the best thing we can do is

694
00:36:04,400 --> 00:36:06,000
we hope the design team will move

695
00:36:06,000 --> 00:36:07,520
expeditiously and

696
00:36:07,520 --> 00:36:09,440
meanwhile code points aren't under our

697
00:36:09,440 --> 00:36:10,880
purview at all

698
00:36:10,880 --> 00:36:12,880
six men for example is perfectly free to

699
00:36:12,880 --> 00:36:15,200
allocate crh a code point right now as

700
00:36:15,200 --> 00:36:16,960
far as we're concerned we have no say in

701
00:36:16,960 --> 00:36:18,500
that

702
00:36:18,500 --> 00:36:22,480
[Music]

703
00:36:22,480 --> 00:36:24,720
okay i don't think there's more we can

704
00:36:24,720 --> 00:36:25,520
say right now

705
00:36:25,520 --> 00:36:28,320
the the chairs do hear your point we are

706
00:36:28,320 --> 00:36:29,280
not ignoring it

707
00:36:29,280 --> 00:36:32,079
thank you andrew

708
00:36:32,640 --> 00:36:40,800
go ahead

709
00:36:40,800 --> 00:36:43,760
hi can you hear me yes we can hear you

710
00:36:43,760 --> 00:36:45,040
go ahead

711
00:36:45,040 --> 00:36:47,440
okay thank you uh thank you rachel for

712
00:36:47,440 --> 00:36:48,720
your presentation

713
00:36:48,720 --> 00:36:52,160
it's not about the presentation

714
00:36:52,160 --> 00:36:54,720
content is about to draft because i just

715
00:36:54,720 --> 00:36:57,680
go through the analysis draft i

716
00:36:57,680 --> 00:37:00,320
notice there are a lot of empty tables

717
00:37:00,320 --> 00:37:01,280
in the documents

718
00:37:01,280 --> 00:37:04,240
so i'm a little confused what is the

719
00:37:04,240 --> 00:37:05,920
progress of this document

720
00:37:05,920 --> 00:37:09,119
and why these tables are still empty

721
00:37:09,119 --> 00:37:13,920
thank you i'm gonna save him some time

722
00:37:13,920 --> 00:37:15,760
that's because they said explicitly yeah

723
00:37:15,760 --> 00:37:17,359
thank you very much

724
00:37:17,359 --> 00:37:20,800
question i i think

725
00:37:20,800 --> 00:37:23,839
the progress is that we have a

726
00:37:23,839 --> 00:37:26,400
uh provider the template for the

727
00:37:26,400 --> 00:37:27,680
analysis draft

728
00:37:27,680 --> 00:37:31,040
and we have decided to use the

729
00:37:31,040 --> 00:37:34,000
uh to analyze the four different

730
00:37:34,000 --> 00:37:34,800
proposals

731
00:37:34,800 --> 00:37:37,839
i think that is a big progress of course

732
00:37:37,839 --> 00:37:40,640
based on those uh

733
00:37:40,640 --> 00:37:44,560
tables uh which now

734
00:37:44,560 --> 00:37:47,839
is are black but we will

735
00:37:47,839 --> 00:37:52,720
fill in those tables soon so

736
00:37:53,040 --> 00:37:56,079
i think you are confident to deliver

737
00:37:56,079 --> 00:38:01,200
a full uh version of the draft

738
00:38:01,200 --> 00:38:05,839
on the later may so thank you

739
00:38:06,079 --> 00:38:09,040
okay boris let this is the last question

740
00:38:09,040 --> 00:38:12,079
i'm cutting the line so boris

741
00:38:12,079 --> 00:38:15,280
hi hi thank you so very short question

742
00:38:15,280 --> 00:38:18,320
about a personability requirement but

743
00:38:18,320 --> 00:38:19,839
different vendors

744
00:38:19,839 --> 00:38:22,720
use different chips so how it could be

745
00:38:22,720 --> 00:38:32,320
formalized in some unified way

746
00:38:32,320 --> 00:38:35,890
i think here we want to uh

747
00:38:35,890 --> 00:38:37,040
[Music]

748
00:38:37,040 --> 00:38:40,400
some a basic requirement that is

749
00:38:40,400 --> 00:38:44,880
uh doesn't uh related to

750
00:38:44,880 --> 00:38:48,079
some detailed implementation

751
00:38:48,079 --> 00:38:51,200
that just gave a basic

752
00:38:51,200 --> 00:38:54,720
functionality requirement so the

753
00:38:54,720 --> 00:38:58,880
possibility here means through the

754
00:38:58,880 --> 00:39:02,880
folding layer or control plane

755
00:39:02,880 --> 00:39:06,960
the packet can be passed

756
00:39:06,960 --> 00:39:10,480
no matter what mechanism you use

757
00:39:10,480 --> 00:39:13,920
thank you okay thank you we need to move

758
00:39:13,920 --> 00:39:14,640
along now

759
00:39:14,640 --> 00:39:17,599
giuseppe you're up as you can see jim

760
00:39:17,599 --> 00:39:20,400
has your front slide up

761
00:39:20,400 --> 00:39:23,200
hello everybody can you hear me okay

762
00:39:23,200 --> 00:39:25,040
thank you yes

763
00:39:25,040 --> 00:39:29,520
yes we can hear you okay

764
00:39:29,520 --> 00:39:31,680
this is a new document on the

765
00:39:31,680 --> 00:39:33,680
application of alternate marking

766
00:39:33,680 --> 00:39:38,720
for segment reading vi for next slide

767
00:39:39,119 --> 00:39:40,960
just a few words about the alternate

768
00:39:40,960 --> 00:39:42,720
marking method for

769
00:39:42,720 --> 00:39:44,800
whom is not familiar with this

770
00:39:44,800 --> 00:39:46,720
methodology so it's a passive

771
00:39:46,720 --> 00:39:48,480
performance measurement technique that

772
00:39:48,480 --> 00:39:49,760
allows

773
00:39:49,760 --> 00:39:51,440
packet cross delay and delay variation

774
00:39:51,440 --> 00:39:52,880
measurement there are

775
00:39:52,880 --> 00:39:55,040
two reference documents for this

776
00:39:55,040 --> 00:39:56,680
technique that are

777
00:39:56,680 --> 00:40:00,240
rfc8321 and lfc889

778
00:40:00,240 --> 00:40:03,680
so the methods basically consist of

779
00:40:03,680 --> 00:40:06,240
batching packet based on time interval

780
00:40:06,240 --> 00:40:08,000
to measure the loss

781
00:40:08,000 --> 00:40:11,359
while you can use the second bit uh to

782
00:40:11,359 --> 00:40:14,319
select some new set of market packets

783
00:40:14,319 --> 00:40:17,599
for delay measurement so

784
00:40:17,599 --> 00:40:20,079
yeah it basically use two bits to

785
00:40:20,079 --> 00:40:20,800
measure

786
00:40:20,800 --> 00:40:22,960
loss and delay and delay variation so

787
00:40:22,960 --> 00:40:25,839
next flight

788
00:40:26,480 --> 00:40:30,240
yeah regarding the srv6 application uh

789
00:40:30,240 --> 00:40:32,880
this is the main scope of this draft so

790
00:40:32,880 --> 00:40:34,960
for ipv6 we already have

791
00:40:34,960 --> 00:40:38,480
a document in standard track that

792
00:40:38,480 --> 00:40:40,720
has been published in six months that

793
00:40:40,720 --> 00:40:41,839
defined

794
00:40:41,839 --> 00:40:44,319
new option adders bottle by op and

795
00:40:44,319 --> 00:40:45,680
destination

796
00:40:45,680 --> 00:40:49,280
option to encode these marking bits

797
00:40:49,280 --> 00:40:53,280
uh in ipv6 in the pv6 data plane

798
00:40:53,280 --> 00:40:57,359
regarding srv6 as you know

799
00:40:57,359 --> 00:40:59,760
as in general for fpv6 bottom by op and

800
00:40:59,760 --> 00:41:01,200
definition option

801
00:41:01,200 --> 00:41:04,079
can be used when the srv6 server is

802
00:41:04,079 --> 00:41:04,560
present

803
00:41:04,560 --> 00:41:07,520
if this is valid in general for any

804
00:41:07,520 --> 00:41:08,720
routing gather

805
00:41:08,720 --> 00:41:11,680
and in particular if we are using

806
00:41:11,680 --> 00:41:13,839
destination options before the routing

807
00:41:13,839 --> 00:41:15,839
gathers

808
00:41:15,839 --> 00:41:18,560
the option is processed by each

809
00:41:18,560 --> 00:41:21,440
destination and routely so

810
00:41:21,440 --> 00:41:24,240
by each destination and by each segment

811
00:41:24,240 --> 00:41:26,160
id

812
00:41:26,160 --> 00:41:29,440
so we already have a way to implement

813
00:41:29,440 --> 00:41:31,920
the alternate marking for srv6 by using

814
00:41:31,920 --> 00:41:33,680
the destination option before

815
00:41:33,680 --> 00:41:36,160
the routing gather but this document

816
00:41:36,160 --> 00:41:37,440
times to

817
00:41:37,440 --> 00:41:41,040
let's say discuss and define a new

818
00:41:41,040 --> 00:41:44,240
new ssh tlv in which we can encode the

819
00:41:44,240 --> 00:41:46,720
alternate marketing data

820
00:41:46,720 --> 00:41:49,680
and in this regard we we would like to

821
00:41:49,680 --> 00:41:51,200
hear the feedback from

822
00:41:51,200 --> 00:41:53,680
the spring working group in order to

823
00:41:53,680 --> 00:41:54,560
discuss

824
00:41:54,560 --> 00:41:56,800
if this is convenient to do that or we

825
00:41:56,800 --> 00:41:57,680
can use

826
00:41:57,680 --> 00:42:01,040
the destination option together with the

827
00:42:01,040 --> 00:42:05,200
segment routing gather maybe for srv6 it

828
00:42:05,200 --> 00:42:07,040
may be preferred use of

829
00:42:07,040 --> 00:42:10,160
srhd lv but for

830
00:42:10,160 --> 00:42:12,480
fpv6 data plane in general of course all

831
00:42:12,480 --> 00:42:14,160
by op and destination option are the

832
00:42:14,160 --> 00:42:15,760
best choice

833
00:42:15,760 --> 00:42:18,480
next like

834
00:42:19,760 --> 00:42:21,920
the yeah the alternate marking data

835
00:42:21,920 --> 00:42:24,240
fields is the same that we have already

836
00:42:24,240 --> 00:42:25,520
defined in the

837
00:42:25,520 --> 00:42:28,960
ipv6 extension adder

838
00:42:28,960 --> 00:42:31,760
so we have to beat the loss and delay

839
00:42:31,760 --> 00:42:32,160
beat

840
00:42:32,160 --> 00:42:35,119
in the tlv and the flow monitoring

841
00:42:35,119 --> 00:42:36,400
identification

842
00:42:36,400 --> 00:42:38,880
that i will explain in the next slide

843
00:42:38,880 --> 00:42:40,160
it's important to say

844
00:42:40,160 --> 00:42:43,839
that this

845
00:42:43,839 --> 00:42:47,440
tlv is set by the south the source know

846
00:42:47,440 --> 00:42:49,599
that

847
00:42:49,599 --> 00:42:53,200
the data do not change in root and

848
00:42:53,200 --> 00:42:55,040
the nodes that are not capable of

849
00:42:55,040 --> 00:42:56,960
supporting this dlv

850
00:42:56,960 --> 00:43:01,760
can simply near it next

851
00:43:02,220 --> 00:43:04,240
[Music]

852
00:43:04,240 --> 00:43:08,400
yeah this slide explains why we need

853
00:43:08,400 --> 00:43:11,040
this identification field together with

854
00:43:11,040 --> 00:43:13,920
the two marking leads

855
00:43:13,920 --> 00:43:16,400
this is due to implementation reason

856
00:43:16,400 --> 00:43:17,280
because

857
00:43:17,280 --> 00:43:19,760
the use of flow monitoring

858
00:43:19,760 --> 00:43:20,960
identification

859
00:43:20,960 --> 00:43:24,240
helps to reduce the configuration from

860
00:43:24,240 --> 00:43:26,960
for each node and also allow a flexible

861
00:43:26,960 --> 00:43:27,839
granularity

862
00:43:27,839 --> 00:43:31,040
in terms of flow definition it simplify

863
00:43:31,040 --> 00:43:33,119
also the counters handling

864
00:43:33,119 --> 00:43:35,520
and the data export so these are

865
00:43:35,520 --> 00:43:37,280
important reason why

866
00:43:37,280 --> 00:43:40,640
we can use this 20 bit flow monitoring

867
00:43:40,640 --> 00:43:43,598
identification

868
00:43:44,160 --> 00:43:46,240
we already had some discussion in six

869
00:43:46,240 --> 00:43:47,680
months about

870
00:43:47,680 --> 00:43:53,040
the the flow monitor identification that

871
00:43:53,280 --> 00:43:55,440
there is also a chance of collision

872
00:43:55,440 --> 00:43:56,720
because

873
00:43:56,720 --> 00:43:59,760
uh if it is set server randomly

874
00:43:59,760 --> 00:44:02,240
by the source node there is a 50 chance

875
00:44:02,240 --> 00:44:03,960
of collision for just

876
00:44:03,960 --> 00:44:07,119
1200 flows so so in some cases this can

877
00:44:07,119 --> 00:44:08,480
be a problem

878
00:44:08,480 --> 00:44:11,599
but if this is not enough you can

879
00:44:11,599 --> 00:44:14,000
increase the entropy by tagging with an

880
00:44:14,000 --> 00:44:15,760
additional flow information

881
00:44:15,760 --> 00:44:17,839
otherwise in case of the centralized

882
00:44:17,839 --> 00:44:19,599
controller

883
00:44:19,599 --> 00:44:21,440
the controller can set the flow monitor

884
00:44:21,440 --> 00:44:23,280
ready and then can consider

885
00:44:23,280 --> 00:44:25,359
all these aspects and instruct the nodes

886
00:44:25,359 --> 00:44:27,440
properly in order to

887
00:44:27,440 --> 00:44:30,319
avoid and to avoid this ambiguity and to

888
00:44:30,319 --> 00:44:32,079
guarantee the uniqueness

889
00:44:32,079 --> 00:44:34,839
of the flow monitor identification so

890
00:44:34,839 --> 00:44:37,839
next

891
00:44:39,599 --> 00:44:43,040
yeah some word about how to use the

892
00:44:43,040 --> 00:44:46,800
this tlv as i said the ingress node

893
00:44:46,800 --> 00:44:50,480
it is capable to support the the atmark

894
00:44:50,480 --> 00:44:51,839
tlv

895
00:44:51,839 --> 00:44:55,440
can set and uh bought the flow monitor

896
00:44:55,440 --> 00:44:56,400
identification

897
00:44:56,400 --> 00:44:59,599
and the lost flag and d flag according

898
00:44:59,599 --> 00:45:02,400
to the ultimate marking operation

899
00:45:02,400 --> 00:45:05,760
the intermediate sr node and degrees

900
00:45:05,760 --> 00:45:07,760
node

901
00:45:07,760 --> 00:45:12,160
if are capable to process this dlv

902
00:45:12,160 --> 00:45:17,520
can simply read the bits and apply the

903
00:45:17,520 --> 00:45:20,960
alternate marking operations

904
00:45:20,960 --> 00:45:23,280
while if an intermediate node or ingress

905
00:45:23,280 --> 00:45:25,520
nodes are not capable of processing the

906
00:45:25,520 --> 00:45:27,680
automatic mass itself we can simply know

907
00:45:27,680 --> 00:45:30,480
it it is worth noting that this is not

908
00:45:30,480 --> 00:45:32,880
an issue because

909
00:45:32,880 --> 00:45:36,079
if a node is not capable to support this

910
00:45:36,079 --> 00:45:37,599
dlv

911
00:45:37,599 --> 00:45:42,000
the measurement can be done and

912
00:45:42,079 --> 00:45:44,319
can be done only for the supporting

913
00:45:44,319 --> 00:45:46,160
nodes that know that

914
00:45:46,160 --> 00:45:48,880
not support this tlb is just out of the

915
00:45:48,880 --> 00:45:49,920
measurement

916
00:45:49,920 --> 00:45:52,240
next

917
00:45:53,680 --> 00:45:57,119
okay yeah this is a

918
00:45:57,119 --> 00:46:00,720
straightforward way to apply the rfc8321

919
00:46:00,720 --> 00:46:04,799
and 8889 to srv6

920
00:46:05,359 --> 00:46:07,440
we welcome questions and comments from

921
00:46:07,440 --> 00:46:10,319
this graph and

922
00:46:13,119 --> 00:46:17,760
thank you okay any questions

923
00:46:17,760 --> 00:46:19,599
if i don't see it one promptly we're

924
00:46:19,599 --> 00:46:21,119
going to move along because we are short

925
00:46:21,119 --> 00:46:23,440
of time thank you giuseppe

926
00:46:23,440 --> 00:46:25,839
okay

927
00:46:27,680 --> 00:46:30,960
jim you're you're flipping through dex

928
00:46:30,960 --> 00:46:34,480
i believe it was uh

929
00:46:36,079 --> 00:46:39,520
we need the oam for service programming

930
00:46:39,520 --> 00:46:43,839
right now so far

931
00:46:45,839 --> 00:46:47,280
you're on the queue you may unmute

932
00:46:47,280 --> 00:46:49,200
yourself so far

933
00:46:49,200 --> 00:46:52,480
and you're and you can start send me

934
00:46:52,480 --> 00:46:56,240
myself can you hear me yes go ahead

935
00:46:56,240 --> 00:46:58,319
excellent excellent so i'm going to

936
00:46:58,319 --> 00:46:59,359
present uh

937
00:46:59,359 --> 00:47:02,720
srv6 uh or sr

938
00:47:02,720 --> 00:47:05,520
service programming unm draft on behalf

939
00:47:05,520 --> 00:47:06,640
of my co-authors

940
00:47:06,640 --> 00:47:11,839
next slide please

941
00:47:12,240 --> 00:47:16,000
so this is a problem statement for the

942
00:47:16,000 --> 00:47:19,359
service programming and associated o m

943
00:47:19,359 --> 00:47:22,720
now for srv sr service programming

944
00:47:22,720 --> 00:47:26,240
so here a sit for the service

945
00:47:26,240 --> 00:47:27,920
programming

946
00:47:27,920 --> 00:47:30,640
is bound maybe bound to a network

947
00:47:30,640 --> 00:47:32,160
function

948
00:47:32,160 --> 00:47:34,800
acid is just another network function

949
00:47:34,800 --> 00:47:35,920
sit within

950
00:47:35,920 --> 00:47:37,839
which is bound to a network function is

951
00:47:37,839 --> 00:47:40,400
just another type of segment

952
00:47:40,400 --> 00:47:43,440
there could be two different type of sr

953
00:47:43,440 --> 00:47:45,040
service segments

954
00:47:45,040 --> 00:47:48,240
node number two as shown on this page

955
00:47:48,240 --> 00:47:52,400
in this figure on left uh is a type

956
00:47:52,400 --> 00:47:53,119
which is

957
00:47:53,119 --> 00:47:55,920
sr aware service it is a service that is

958
00:47:55,920 --> 00:47:57,920
able to process

959
00:47:57,920 --> 00:48:03,119
sr packets let's say for instance srh

960
00:48:03,119 --> 00:48:06,079
and it's aware of srv6 endpoint

961
00:48:06,079 --> 00:48:07,520
processing

962
00:48:07,520 --> 00:48:09,200
and the pseudo code that is defined in

963
00:48:09,200 --> 00:48:13,359
the base srv6 service programming craft

964
00:48:13,359 --> 00:48:16,640
then we have like node number three

965
00:48:16,640 --> 00:48:20,160
which are sr unaware services sr unaware

966
00:48:20,160 --> 00:48:20,880
services

967
00:48:20,880 --> 00:48:24,079
are services that are instantiated on

968
00:48:24,079 --> 00:48:27,200
a router or host which is connected to a

969
00:48:27,200 --> 00:48:28,160
service

970
00:48:28,160 --> 00:48:31,520
node where it

971
00:48:31,520 --> 00:48:35,440
hides or removes srh before sending it

972
00:48:35,440 --> 00:48:39,040
to the service and it it works

973
00:48:39,040 --> 00:48:42,000
or it performs sr v6 functionality on

974
00:48:42,000 --> 00:48:44,559
behalf of the service

975
00:48:44,559 --> 00:48:46,160
another important point to see is that

976
00:48:46,160 --> 00:48:47,599
the sr

977
00:48:47,599 --> 00:48:50,640
service segments are fully integrated

978
00:48:50,640 --> 00:48:51,760
with

979
00:48:51,760 --> 00:48:54,880
vpn services or te services

980
00:48:54,880 --> 00:48:57,920
so when we talk about o m one m needs to

981
00:48:57,920 --> 00:48:58,960
incorporate

982
00:48:58,960 --> 00:49:01,200
all of these comments uh all of these

983
00:49:01,200 --> 00:49:02,000
functionality

984
00:49:02,000 --> 00:49:05,280
that sr service programming

985
00:49:05,280 --> 00:49:08,319
offers in the next set of slides we're

986
00:49:08,319 --> 00:49:09,440
going to go over

987
00:49:09,440 --> 00:49:12,800
that next slide please

988
00:49:12,880 --> 00:49:17,119
so we're going to basically

989
00:49:17,119 --> 00:49:20,640
do two types of a walk or an m walk

990
00:49:20,640 --> 00:49:26,000
one is when the uut is node number one

991
00:49:26,000 --> 00:49:29,119
and we are trying to

992
00:49:29,119 --> 00:49:32,640
ping an sr aware service

993
00:49:32,640 --> 00:49:35,680
on node number two

994
00:49:36,240 --> 00:49:39,280
we call it function one or uh

995
00:49:39,280 --> 00:49:41,119
it goes to node number two so let's call

996
00:49:41,119 --> 00:49:43,119
it function one for simplicity

997
00:49:43,119 --> 00:49:46,559
um and

998
00:49:46,559 --> 00:49:49,359
the second function that we are going to

999
00:49:49,359 --> 00:49:49,760
do

1000
00:49:49,760 --> 00:49:52,640
o m functionality is on sr unaware

1001
00:49:52,640 --> 00:49:53,839
service which is

1002
00:49:53,839 --> 00:49:57,119
host which is node number three uh and

1003
00:49:57,119 --> 00:49:58,400
so it's function two

1004
00:49:58,400 --> 00:50:01,040
and then we're gonna do an example where

1005
00:50:01,040 --> 00:50:01,599
we

1006
00:50:01,599 --> 00:50:05,920
take an integrated vpn uh with te

1007
00:50:05,920 --> 00:50:09,520
uh and we're gonna uh do a walk on o

1008
00:50:09,520 --> 00:50:12,640
m functionality to a vpn sid

1009
00:50:12,640 --> 00:50:15,920
via our city list with that let's move

1010
00:50:15,920 --> 00:50:16,319
on

1011
00:50:16,319 --> 00:50:19,760
the next slide please so in this slide

1012
00:50:19,760 --> 00:50:22,960
we are at node number one which is a uut

1013
00:50:22,960 --> 00:50:26,319
and this is an example of a ping

1014
00:50:26,319 --> 00:50:29,920
to node number two which is an sr aware

1015
00:50:29,920 --> 00:50:33,599
service since this service is sr aware

1016
00:50:33,599 --> 00:50:34,079
it

1017
00:50:34,079 --> 00:50:37,760
it process the packet as per

1018
00:50:37,760 --> 00:50:41,960
rfc 8986 section

1019
00:50:41,960 --> 00:50:45,040
4.1.1 in that rfc say that

1020
00:50:45,040 --> 00:50:47,440
if upper layer header processing is

1021
00:50:47,440 --> 00:50:48,400
allowed

1022
00:50:48,400 --> 00:50:50,400
process the upper layer header in this

1023
00:50:50,400 --> 00:50:52,839
case a pair header could be udp or

1024
00:50:52,839 --> 00:50:56,160
icmp and the node 2 will process that

1025
00:50:56,160 --> 00:50:59,839
and will send the response to the ping

1026
00:50:59,839 --> 00:51:03,280
message and that is

1027
00:51:03,280 --> 00:51:07,520
the case for pinging an sr aware service

1028
00:51:07,520 --> 00:51:11,359
where the services ultimate segment

1029
00:51:11,359 --> 00:51:14,078
next slide please

1030
00:51:16,000 --> 00:51:19,599
now let's take a look at how sr

1031
00:51:19,599 --> 00:51:22,880
aware service behave when it

1032
00:51:22,880 --> 00:51:26,880
acts as a transit segment

1033
00:51:27,599 --> 00:51:30,800
because some of the o n payload may not

1034
00:51:30,800 --> 00:51:33,520
be processed by the service or may be

1035
00:51:33,520 --> 00:51:35,760
dropped by the service so

1036
00:51:35,760 --> 00:51:38,880
sr aware service should escape

1037
00:51:38,880 --> 00:51:42,160
applying unm payload towards from the

1038
00:51:42,160 --> 00:51:43,839
service but it

1039
00:51:43,839 --> 00:51:46,720
should implement the end functionality

1040
00:51:46,720 --> 00:51:49,119
so that the packet can be sent

1041
00:51:49,119 --> 00:51:51,200
to the following segment endpoint so in

1042
00:51:51,200 --> 00:51:52,640
this example

1043
00:51:52,640 --> 00:51:54,720
node number two which is a transit sr

1044
00:51:54,720 --> 00:51:55,680
aware service

1045
00:51:55,680 --> 00:51:58,400
skip the application of the service but

1046
00:51:58,400 --> 00:51:58,960
but

1047
00:51:58,960 --> 00:52:00,480
implement the n functionality and the

1048
00:52:00,480 --> 00:52:02,400
packet send the packet out towards node

1049
00:52:02,400 --> 00:52:05,280
number three

1050
00:52:05,280 --> 00:52:08,240
next slide please

1051
00:52:09,520 --> 00:52:12,720
now we are still we are here we are

1052
00:52:12,720 --> 00:52:16,839
pinging the service which is

1053
00:52:16,839 --> 00:52:18,960
instantiated

1054
00:52:18,960 --> 00:52:22,800
at three and the ultimate segment

1055
00:52:22,800 --> 00:52:26,160
is sr unaware

1056
00:52:26,160 --> 00:52:28,160
we just in the previous slide we took

1057
00:52:28,160 --> 00:52:29,359
the same example but

1058
00:52:29,359 --> 00:52:31,680
we went to the transit node where sr

1059
00:52:31,680 --> 00:52:33,440
aware service was transit and we said

1060
00:52:33,440 --> 00:52:35,520
that it's going to skip the

1061
00:52:35,520 --> 00:52:38,480
processing of the service and it's going

1062
00:52:38,480 --> 00:52:39,520
to forward the packet

1063
00:52:39,520 --> 00:52:43,280
towards the next next endpoint

1064
00:52:43,280 --> 00:52:46,000
now that end point is node number three

1065
00:52:46,000 --> 00:52:48,880
so node number three received the packet

1066
00:52:48,880 --> 00:52:52,319
with ips a v6 ds set to its local

1067
00:52:52,319 --> 00:52:55,920
service set with icmp

1068
00:52:55,920 --> 00:53:01,040
or udp payload as the next header the

1069
00:53:01,040 --> 00:53:04,240
sr service programming draft has

1070
00:53:04,240 --> 00:53:07,920
pseudocode to handle that if the next

1071
00:53:07,920 --> 00:53:08,559
and in this

1072
00:53:08,559 --> 00:53:11,200
example we're going to assume that the

1073
00:53:11,200 --> 00:53:12,160
sid

1074
00:53:12,160 --> 00:53:15,440
that is being pinged is a srv's

1075
00:53:15,440 --> 00:53:19,119
static proxy see and

1076
00:53:19,119 --> 00:53:22,800
since the upper layer header

1077
00:53:22,800 --> 00:53:24,880
for that city are expected by v6 in this

1078
00:53:24,880 --> 00:53:27,040
case the upper layer header is icmp or

1079
00:53:27,040 --> 00:53:28,160
udp

1080
00:53:28,160 --> 00:53:31,599
so then the service processes

1081
00:53:31,599 --> 00:53:35,640
the upper layer header as per rfc

1082
00:53:35,640 --> 00:53:38,720
8986 section 1.1.1 which is

1083
00:53:38,720 --> 00:53:41,280
if if the apollo had had header

1084
00:53:41,280 --> 00:53:43,680
processing is

1085
00:53:43,680 --> 00:53:47,280
allowed by local configuration then it

1086
00:53:47,280 --> 00:53:49,119
processes and responds to the ping

1087
00:53:49,119 --> 00:53:51,520
message

1088
00:53:52,240 --> 00:53:55,359
next slide please now

1089
00:53:55,359 --> 00:53:58,400
we're going to take an example where an

1090
00:53:58,400 --> 00:54:02,400
sr unaware service

1091
00:54:02,400 --> 00:54:05,839
is a transit to a ping packet or o

1092
00:54:05,839 --> 00:54:09,760
m packet payload in this example

1093
00:54:09,760 --> 00:54:13,280
we took the example where we are pinging

1094
00:54:13,280 --> 00:54:17,760
a vpn sid advertised by node number four

1095
00:54:17,760 --> 00:54:20,960
so four colon dt6

1096
00:54:20,960 --> 00:54:26,079
via service segment f1 and f2

1097
00:54:26,079 --> 00:54:28,160
hosted by node number two and node

1098
00:54:28,160 --> 00:54:31,839
number three respectively

1099
00:54:32,720 --> 00:54:35,520
when the packet we we went over transit

1100
00:54:35,520 --> 00:54:36,400
functionality

1101
00:54:36,400 --> 00:54:39,760
for the sr aware service earlier

1102
00:54:39,760 --> 00:54:42,799
now we are zooming into transit

1103
00:54:42,799 --> 00:54:44,000
functionality for sr

1104
00:54:44,000 --> 00:54:45,599
unaware service which is node number

1105
00:54:45,599 --> 00:54:48,000
three in this case

1106
00:54:48,000 --> 00:54:51,520
so node number three again there is this

1107
00:54:51,520 --> 00:54:53,520
is this is a snippet from the pseudocode

1108
00:54:53,520 --> 00:54:57,839
from the sr service programming that

1109
00:54:57,839 --> 00:55:01,359
node number three will skip the

1110
00:55:01,359 --> 00:55:05,200
application of the service function

1111
00:55:05,200 --> 00:55:08,000
and we resubmit the packet for ipv6

1112
00:55:08,000 --> 00:55:09,680
transmission which means that it

1113
00:55:09,680 --> 00:55:12,880
implements the end functionality

1114
00:55:12,880 --> 00:55:15,839
so the packet is then sent towards node

1115
00:55:15,839 --> 00:55:16,559
number four

1116
00:55:16,559 --> 00:55:20,559
as shown on the figure on the right

1117
00:55:20,559 --> 00:55:24,000
next slide please so basically

1118
00:55:24,000 --> 00:55:26,960
what we covered is transit and end

1119
00:55:26,960 --> 00:55:28,400
functionality

1120
00:55:28,400 --> 00:55:32,079
when ping to a sid

1121
00:55:32,079 --> 00:55:34,880
which is a service we covered transit

1122
00:55:34,880 --> 00:55:35,839
functionality

1123
00:55:35,839 --> 00:55:39,040
and and we covered the t uh how this

1124
00:55:39,040 --> 00:55:40,880
work in all these cases

1125
00:55:40,880 --> 00:55:43,040
now we would like to request working

1126
00:55:43,040 --> 00:55:44,000
group

1127
00:55:44,000 --> 00:55:46,079
review and we would like the working

1128
00:55:46,079 --> 00:55:48,079
group to adopt the document

1129
00:55:48,079 --> 00:55:50,000
are there any questions really good to

1130
00:55:50,000 --> 00:55:52,720
see comments and questions

1131
00:55:52,720 --> 00:55:55,680
questions please

1132
00:55:59,200 --> 00:56:00,880
not seeing any questions we're going to

1133
00:56:00,880 --> 00:56:02,559
move on to iom

1134
00:56:02,559 --> 00:56:05,599
how you you'll be up as soon as jim can

1135
00:56:05,599 --> 00:56:07,760
get the slides up

1136
00:56:07,760 --> 00:56:12,720
thank you thank you thank you savannah

1137
00:56:14,480 --> 00:56:18,799
hello can you hear me hello yes we can

1138
00:56:18,799 --> 00:56:22,240
and your cover slide is up right now

1139
00:56:22,240 --> 00:56:25,280
yes okay yeah i'm going to talk about uh

1140
00:56:25,280 --> 00:56:28,319
a method to support in c2 measurement in

1141
00:56:28,319 --> 00:56:29,440
srv6

1142
00:56:29,440 --> 00:56:32,319
next slide please

1143
00:56:33,680 --> 00:56:35,920
so a little bit background so first we

1144
00:56:35,920 --> 00:56:37,200
have several uh

1145
00:56:37,200 --> 00:56:40,040
proposal working group documents about

1146
00:56:40,040 --> 00:56:41,520
srv6oam

1147
00:56:41,520 --> 00:56:44,880
for example the the first one uh srv6

1148
00:56:44,880 --> 00:56:48,640
oem it outlines to use old flag and

1149
00:56:48,640 --> 00:56:52,160
supporting some other om means

1150
00:56:52,160 --> 00:56:55,359
and we all know there are some other

1151
00:56:55,359 --> 00:56:59,200
uh standards about active approaches

1152
00:56:59,200 --> 00:57:03,119
which are also applicable for srv6

1153
00:57:03,119 --> 00:57:06,640
oem but here we are talking about

1154
00:57:06,640 --> 00:57:09,760
particularly about the in-c2 oem

1155
00:57:09,760 --> 00:57:13,040
uh measurement yes or v6 here

1156
00:57:13,040 --> 00:57:16,559
uh we uh actually is about

1157
00:57:16,559 --> 00:57:20,079
to support in c2om uh there are

1158
00:57:20,079 --> 00:57:23,359
already several existing proposals to

1159
00:57:23,359 --> 00:57:27,680
uh include to support iom in srv6

1160
00:57:27,680 --> 00:57:30,960
uh liked for example to encapsulate in

1161
00:57:30,960 --> 00:57:34,559
to the srhtoe but the

1162
00:57:34,559 --> 00:57:37,760
issue here is that it would introduce a

1163
00:57:37,760 --> 00:57:38,240
big

1164
00:57:38,240 --> 00:57:40,960
size overhead which will cause mtu

1165
00:57:40,960 --> 00:57:42,160
concerns

1166
00:57:42,160 --> 00:57:45,520
and also uh it makes the processing more

1167
00:57:45,520 --> 00:57:47,040
complicated and

1168
00:57:47,040 --> 00:57:49,599
may introduce some forwarding delay and

1169
00:57:49,599 --> 00:57:50,160
the

1170
00:57:50,160 --> 00:57:53,520
accuracy so

1171
00:57:53,520 --> 00:57:56,880
there's some issue about it also we all

1172
00:57:56,880 --> 00:57:57,440
know that

1173
00:57:57,440 --> 00:58:01,680
due to the constraints of the rfc 8200

1174
00:58:01,680 --> 00:58:04,000
um there are some difficult uh

1175
00:58:04,000 --> 00:58:05,280
difficulty to

1176
00:58:05,280 --> 00:58:08,240
encapsulate iom header in other

1177
00:58:08,240 --> 00:58:09,680
locations of the

1178
00:58:09,680 --> 00:58:14,399
ipv6 header next slides

1179
00:58:15,359 --> 00:58:18,240
so here we have the observations that

1180
00:58:18,240 --> 00:58:18,559
for

1181
00:58:18,559 --> 00:58:21,680
srv6 the forwarding behavior is solely

1182
00:58:21,680 --> 00:58:24,559
determined by the srh only

1183
00:58:24,559 --> 00:58:27,359
and as long as two packets have the

1184
00:58:27,359 --> 00:58:28,079
having the

1185
00:58:28,079 --> 00:58:31,440
same srh they will have the same

1186
00:58:31,440 --> 00:58:34,720
phoneme behavior so consequently

1187
00:58:34,720 --> 00:58:37,040
we can actually build an artificial

1188
00:58:37,040 --> 00:58:38,319
package to

1189
00:58:38,319 --> 00:58:41,920
collect iom data for other user packets

1190
00:58:41,920 --> 00:58:44,559
as long as they actually share the same

1191
00:58:44,559 --> 00:58:46,160
srh

1192
00:58:46,160 --> 00:58:49,920
and so this artificial package we call

1193
00:58:49,920 --> 00:58:50,240
that

1194
00:58:50,240 --> 00:58:53,200
probing package this will not have the

1195
00:58:53,200 --> 00:58:54,160
encapsulation

1196
00:58:54,160 --> 00:58:56,960
issues because it doesn't have any user

1197
00:58:56,960 --> 00:58:58,079
payload

1198
00:58:58,079 --> 00:59:01,760
and also we can allow the slow pass

1199
00:59:01,760 --> 00:59:03,040
processing for this

1200
00:59:03,040 --> 00:59:06,319
artificial package so that

1201
00:59:06,319 --> 00:59:10,079
it doesn't consume the the folding parts

1202
00:59:10,079 --> 00:59:13,119
resource or doesn't have the performance

1203
00:59:13,119 --> 00:59:14,400
concerns there

1204
00:59:14,400 --> 00:59:19,200
and also you can see by using this uh

1205
00:59:19,200 --> 00:59:22,000
pro packet is actually can be considered

1206
00:59:22,000 --> 00:59:22,240
an

1207
00:59:22,240 --> 00:59:24,799
active method but it achieved the

1208
00:59:24,799 --> 00:59:28,079
in-situ measurement effect as well

1209
00:59:28,079 --> 00:59:30,720
next slice

1210
00:59:31,440 --> 00:59:34,880
so the proposal is uh very simple and

1211
00:59:34,880 --> 00:59:38,480
we can claim a bit a flag a bit from the

1212
00:59:38,480 --> 00:59:42,079
srh flag field uh we call that t

1213
00:59:42,079 --> 00:59:45,599
flag so use that to indicate

1214
00:59:45,599 --> 00:59:49,200
this is a dedicated srv6 pro

1215
00:59:49,200 --> 00:59:52,720
package and follow the srh is a

1216
00:59:52,720 --> 00:59:56,240
utp uh udp uh header

1217
00:59:56,240 --> 00:59:58,559
uh the destination port of the udp

1218
00:59:58,559 --> 01:00:00,960
header is used to code

1219
01:00:00,960 --> 01:00:03,839
what type of iom options is in the

1220
01:00:03,839 --> 01:00:05,359
payload

1221
01:00:05,359 --> 01:00:10,078
so this is a scheme next slides

1222
01:00:10,960 --> 01:00:14,480
uh about operation uh the so the first

1223
01:00:14,480 --> 01:00:15,359
node of the

1224
01:00:15,359 --> 01:00:19,119
sr path will generate the proper packet

1225
01:00:19,119 --> 01:00:22,480
so if we intend to monitor some active

1226
01:00:22,480 --> 01:00:24,079
user flows we will

1227
01:00:24,079 --> 01:00:28,000
copy the srh from those those flows

1228
01:00:28,000 --> 01:00:32,160
and generate this uh pro packet

1229
01:00:32,160 --> 01:00:35,359
then uh at each sr node on the path

1230
01:00:35,359 --> 01:00:38,000
um if uh the node is capable of

1231
01:00:38,000 --> 01:00:39,520
processing the tps

1232
01:00:39,520 --> 01:00:42,559
then uh then it will process

1233
01:00:42,559 --> 01:00:44,720
a proper package and otherwise it just

1234
01:00:44,720 --> 01:00:47,680
simply forward it

1235
01:00:47,680 --> 01:00:50,799
and the last node of the sr parts will

1236
01:00:50,799 --> 01:00:54,240
need to terminate that pro package and

1237
01:00:54,240 --> 01:00:58,240
exports iom data to some collectors

1238
01:00:58,240 --> 01:01:01,599
um as i just mentioned uh

1239
01:01:01,599 --> 01:01:03,680
actually we can support wireless

1240
01:01:03,680 --> 01:01:05,520
different iom options

1241
01:01:05,520 --> 01:01:10,480
um using the same method we simply use a

1242
01:01:10,480 --> 01:01:12,799
different udp port number to

1243
01:01:12,799 --> 01:01:14,960
differentiate them

1244
01:01:14,960 --> 01:01:17,520
next slides

1245
01:01:18,559 --> 01:01:21,440
uh it's this this scheme not only

1246
01:01:21,440 --> 01:01:22,880
supports

1247
01:01:22,880 --> 01:01:27,680
iom for srv6 by avoiding several of the

1248
01:01:27,680 --> 01:01:30,960
encapsulation drawbacks it can also

1249
01:01:30,960 --> 01:01:31,599
support

1250
01:01:31,599 --> 01:01:34,640
many other different applications the

1251
01:01:34,640 --> 01:01:36,000
first one is we can

1252
01:01:36,000 --> 01:01:39,440
use this as a active method to

1253
01:01:39,440 --> 01:01:41,760
measure the alternate alternative parts

1254
01:01:41,760 --> 01:01:43,520
for traffic engineering

1255
01:01:43,520 --> 01:01:46,480
uh if we have a multiple candidate paths

1256
01:01:46,480 --> 01:01:47,440
to the same

1257
01:01:47,440 --> 01:01:51,359
destination why is active but other

1258
01:01:51,359 --> 01:01:54,160
stand by so we can actually actively

1259
01:01:54,160 --> 01:01:55,119
monitor them

1260
01:01:55,119 --> 01:01:57,920
so to uh guess their real-time

1261
01:01:57,920 --> 01:01:59,599
performance

1262
01:01:59,599 --> 01:02:03,200
uh the next one is a actually very easy

1263
01:02:03,200 --> 01:02:05,440
to support the round-trip environment

1264
01:02:05,440 --> 01:02:06,160
with this

1265
01:02:06,160 --> 01:02:09,599
we can simply setting the last

1266
01:02:09,599 --> 01:02:11,760
segment node to be the same as the first

1267
01:02:11,760 --> 01:02:14,559
one so the packet will be automatically

1268
01:02:14,559 --> 01:02:17,200
routed back to the south so we can get

1269
01:02:17,200 --> 01:02:18,160
the

1270
01:02:18,160 --> 01:02:21,839
launching time also uh there's a mecha

1271
01:02:21,839 --> 01:02:23,920
algorithm to actually calculate

1272
01:02:23,920 --> 01:02:25,920
calculators a few number of

1273
01:02:25,920 --> 01:02:28,880
passes that can cover all the nodes in

1274
01:02:28,880 --> 01:02:29,920
the network

1275
01:02:29,920 --> 01:02:33,039
so then we can just plan this path to

1276
01:02:33,039 --> 01:02:35,599
collect the data then we can gain the

1277
01:02:35,599 --> 01:02:36,960
global visibility

1278
01:02:36,960 --> 01:02:40,000
on all the segments notes

1279
01:02:40,000 --> 01:02:42,640
next slides

1280
01:02:43,839 --> 01:02:47,599
so the advantage of this scheme is that

1281
01:02:47,599 --> 01:02:48,160
it's a

1282
01:02:48,160 --> 01:02:50,400
very simple and there's no need for

1283
01:02:50,400 --> 01:02:51,839
control plane and

1284
01:02:51,839 --> 01:02:55,119
a protocol for that and it also

1285
01:02:55,119 --> 01:02:58,960
only rely on the existing sr semantics

1286
01:02:58,960 --> 01:03:02,000
and it supports multiple useful

1287
01:03:02,000 --> 01:03:05,760
applications so this is the first time

1288
01:03:05,760 --> 01:03:08,480
present uh presents this idea and we

1289
01:03:08,480 --> 01:03:09,280
like to hear

1290
01:03:09,280 --> 01:03:11,039
more comments and suggestions from the

1291
01:03:11,039 --> 01:03:12,480
working group and

1292
01:03:12,480 --> 01:03:14,559
welcome for any collaboration

1293
01:03:14,559 --> 01:03:16,720
contribution for that

1294
01:03:16,720 --> 01:03:20,000
that's it thank you okay

1295
01:03:20,000 --> 01:03:24,000
greg you had a question go ahead

1296
01:03:24,079 --> 01:03:27,119
so um if i understand correctly what you

1297
01:03:27,119 --> 01:03:27,920
introduce

1298
01:03:27,920 --> 01:03:30,960
with this uh t flag uh

1299
01:03:30,960 --> 01:03:34,079
it's like um at the end of the

1300
01:03:34,079 --> 01:03:38,559
segment it's a like bump in the wire

1301
01:03:38,559 --> 01:03:41,760
because you uh

1302
01:03:41,760 --> 01:03:45,440
want their fast path uh

1303
01:03:45,440 --> 01:03:48,880
to punt it uh to their slower path

1304
01:03:48,880 --> 01:03:51,440
processing

1305
01:03:51,440 --> 01:03:54,720
uh it's not necessary or you can

1306
01:03:54,720 --> 01:03:57,119
still do that in fastpass i just

1307
01:03:57,119 --> 01:03:58,000
mentioned

1308
01:03:58,000 --> 01:04:02,319
it's possible to do that in slow pass

1309
01:04:05,520 --> 01:04:07,680
okay so but this is a bump in the wire

1310
01:04:07,680 --> 01:04:10,240
so you still

1311
01:04:10,240 --> 01:04:12,799
do something different from the uh plain

1312
01:04:12,799 --> 01:04:15,200
forwarding on the packet

1313
01:04:15,200 --> 01:04:18,480
right is it because uh that will be a

1314
01:04:18,480 --> 01:04:21,680
dedicated pro package it's a only

1315
01:04:21,680 --> 01:04:25,280
process on that is to uh parse the

1316
01:04:25,280 --> 01:04:28,160
udp ports then understand which kind of

1317
01:04:28,160 --> 01:04:29,200
payloads you need

1318
01:04:29,200 --> 01:04:32,319
and then extract data

1319
01:04:32,319 --> 01:04:34,960
uh require data to the iom header so

1320
01:04:34,960 --> 01:04:35,599
that's a

1321
01:04:35,599 --> 01:04:37,599
processing is different from the normal

1322
01:04:37,599 --> 01:04:39,440
user traffic

1323
01:04:39,440 --> 01:04:43,119
right so thus um

1324
01:04:43,119 --> 01:04:46,400
it does create additional computational

1325
01:04:46,400 --> 01:04:47,520
load

1326
01:04:47,520 --> 01:04:51,280
and might affect their forwarding of the

1327
01:04:51,280 --> 01:04:52,960
user data

1328
01:04:52,960 --> 01:04:56,720
and thus it seems to become

1329
01:04:56,720 --> 01:05:00,000
an attack vector

1330
01:05:00,000 --> 01:05:02,640
yeah i i don't i'm not sure if you

1331
01:05:02,640 --> 01:05:04,000
actually support

1332
01:05:04,000 --> 01:05:06,559
to encapsulate iom directly in user

1333
01:05:06,559 --> 01:05:08,319
traffic you will do

1334
01:05:08,319 --> 01:05:10,640
the same thing but it's on the user

1335
01:05:10,640 --> 01:05:11,520
traffic you

1336
01:05:11,520 --> 01:05:14,319
will essentially delay the user traffic

1337
01:05:14,319 --> 01:05:14,960
to

1338
01:05:14,960 --> 01:05:18,000
uh to support this actual processing but

1339
01:05:18,000 --> 01:05:18,960
here we

1340
01:05:18,960 --> 01:05:21,599
can separate those two process so

1341
01:05:21,599 --> 01:05:23,039
without delaying the

1342
01:05:23,039 --> 01:05:25,839
user traffic

1343
01:05:26,160 --> 01:05:29,359
um well that kind of lost me because

1344
01:05:29,359 --> 01:05:30,000
you're saying

1345
01:05:30,000 --> 01:05:32,160
you separated processing at the same

1346
01:05:32,160 --> 01:05:33,599
time you're saying that

1347
01:05:33,599 --> 01:05:37,359
you're processing uh in the fast uh

1348
01:05:37,359 --> 01:05:41,038
forwarding uh pipeline

1349
01:05:42,559 --> 01:05:44,799
right so okay so let's let's take it to

1350
01:05:44,799 --> 01:05:47,520
the i probably let's take it to the uh

1351
01:05:47,520 --> 01:05:53,038
list thank you okay any other questions

1352
01:05:55,200 --> 01:05:58,799
okay rakesh you're up

1353
01:05:59,599 --> 01:06:05,440
i think

1354
01:06:05,440 --> 01:06:08,960
or did i did i just skip one

1355
01:06:08,960 --> 01:06:13,760
yeah no we did that yes rakesh you're up

1356
01:06:15,119 --> 01:06:18,079
go ahead and uh you need to be

1357
01:06:18,079 --> 01:06:20,000
expeditious we did not give you as much

1358
01:06:20,000 --> 01:06:20,480
time as

1359
01:06:20,480 --> 01:06:23,359
we would would have liked to rakesh are

1360
01:06:23,359 --> 01:06:25,839
you here

1361
01:06:29,839 --> 01:06:32,799
um i'm afraid he is busy in different

1362
01:06:32,799 --> 01:06:34,640
group

1363
01:06:34,640 --> 01:06:40,720
well yaakov you want to go now

1364
01:06:41,119 --> 01:06:44,960
okay with me okay kim bring up yakov's

1365
01:06:44,960 --> 01:06:47,839
slide let's go

1366
01:06:50,400 --> 01:06:52,640
not that one there you go okay hi

1367
01:06:52,640 --> 01:06:53,760
everyone yes

1368
01:06:53,760 --> 01:06:57,039
uh yeah this is some new work um

1369
01:06:57,039 --> 01:07:00,960
i'm emphasizing on this uh presentation

1370
01:07:00,960 --> 01:07:03,440
the segment routing portion of this uh

1371
01:07:03,440 --> 01:07:05,760
someone who is interested more in the

1372
01:07:05,760 --> 01:07:07,920
delay sensitive portion can come to the

1373
01:07:07,920 --> 01:07:09,280
uh talk i'm going to be

1374
01:07:09,280 --> 01:07:14,240
giving indepnet next slide please so

1375
01:07:14,240 --> 01:07:16,160
what is the problem the problem is time

1376
01:07:16,160 --> 01:07:18,160
sensitive flows that is

1377
01:07:18,160 --> 01:07:22,480
uh packets that have to get in a uh

1378
01:07:22,480 --> 01:07:25,839
expeditious way to their destination

1379
01:07:25,839 --> 01:07:27,440
with a minimal delay and i'm talking

1380
01:07:27,440 --> 01:07:28,880
about really minimal delay

1381
01:07:28,880 --> 01:07:31,039
i'm talking about things which are more

1382
01:07:31,039 --> 01:07:33,119
sensitive to time

1383
01:07:33,119 --> 01:07:34,319
than some of the stuff they're talking

1384
01:07:34,319 --> 01:07:36,799
about in debt net

1385
01:07:36,799 --> 01:07:39,119
however i want to compare myself to what

1386
01:07:39,119 --> 01:07:40,720
detonate is doing just before we get

1387
01:07:40,720 --> 01:07:41,599
into the

1388
01:07:41,599 --> 01:07:45,359
segment routing aspects um there are

1389
01:07:45,359 --> 01:07:47,839
many mechanisms that have been proposed

1390
01:07:47,839 --> 01:07:49,200
most of them fall

1391
01:07:49,200 --> 01:07:51,280
on one of the bullets that i've

1392
01:07:51,280 --> 01:07:52,799
mentioned here for instance

1393
01:07:52,799 --> 01:07:55,920
it'll be very difficult to optimize them

1394
01:07:55,920 --> 01:07:59,280
they don't scale well they they have to

1395
01:07:59,280 --> 01:08:00,000
be

1396
01:08:00,000 --> 01:08:01,440
if you want to optimize them they have

1397
01:08:01,440 --> 01:08:03,200
to be figured out ahead of time

1398
01:08:03,200 --> 01:08:05,440
uh what it's called offline optimization

1399
01:08:05,440 --> 01:08:06,640
if you want to add a new flow you have

1400
01:08:06,640 --> 01:08:09,119
to re-optimize the whole system

1401
01:08:09,119 --> 01:08:10,480
et cetera et cetera et cetera there's

1402
01:08:10,480 --> 01:08:11,920
all sorts of reasons that there are

1403
01:08:11,920 --> 01:08:12,880
problems with the

1404
01:08:12,880 --> 01:08:15,039
existing mechanisms and i want to

1405
01:08:15,039 --> 01:08:16,960
propose a different mechanism

1406
01:08:16,960 --> 01:08:19,198
uh but from from the point of view of

1407
01:08:19,198 --> 01:08:20,399
this draft on

1408
01:08:20,399 --> 01:08:23,439
proposing is the uh outside portion that

1409
01:08:23,439 --> 01:08:25,439
is what has to be done with the packet

1410
01:08:25,439 --> 01:08:27,120
rather than actually explain how it has

1411
01:08:27,120 --> 01:08:28,799
to be optimized then the

1412
01:08:28,799 --> 01:08:30,479
simulation results and all those will be

1413
01:08:30,479 --> 01:08:32,080
reported elsewhere

1414
01:08:32,080 --> 01:08:34,319
so the main idea is i'm going to insert

1415
01:08:34,319 --> 01:08:35,120
a stack

1416
01:08:35,120 --> 01:08:38,080
data structure into the packet similar

1417
01:08:38,080 --> 01:08:39,759
to what is done in segment routing with

1418
01:08:39,759 --> 01:08:41,600
different information but it can be

1419
01:08:41,600 --> 01:08:43,839
integrated with second routing next

1420
01:08:43,839 --> 01:08:46,640
slide please

1421
01:08:46,799 --> 01:08:48,560
okay so what i'm assuming is we have

1422
01:08:48,560 --> 01:08:50,080
some kind of router

1423
01:08:50,080 --> 01:08:52,399
uh i'm talking about the router uh from

1424
01:08:52,399 --> 01:08:53,198
the point of view

1425
01:08:53,198 --> 01:08:55,679
of having two functionalities number one

1426
01:08:55,679 --> 01:08:57,198
it does forwarding

1427
01:08:57,198 --> 01:08:59,839
that is decides which output port a

1428
01:08:59,839 --> 01:09:00,799
packet has to

1429
01:09:00,799 --> 01:09:03,759
reach and which uh uh i'll call it a

1430
01:09:03,759 --> 01:09:05,359
queue for now

1431
01:09:05,359 --> 01:09:08,640
for that uh for that output port uh

1432
01:09:08,640 --> 01:09:10,799
the packet has to be put into and i have

1433
01:09:10,799 --> 01:09:13,040
the scheduling logic the scheduler

1434
01:09:13,040 --> 01:09:15,198
and the scheduler decides in a simple

1435
01:09:15,198 --> 01:09:17,279
case which queue using strict priority

1436
01:09:17,279 --> 01:09:19,359
or a wfq or something of that sort

1437
01:09:19,359 --> 01:09:22,560
or in the detonate for a way uh what it

1438
01:09:22,560 --> 01:09:23,279
does is it

1439
01:09:23,279 --> 01:09:26,560
it does some kind of uh computation of

1440
01:09:26,560 --> 01:09:29,920
uh when a packet has to uh

1441
01:09:29,920 --> 01:09:32,399
exit the router and tries to make sure

1442
01:09:32,399 --> 01:09:32,960
that the

1443
01:09:32,960 --> 01:09:36,399
pocket indeed is forwarded in time

1444
01:09:36,399 --> 01:09:37,839
so if you think about things from the

1445
01:09:37,839 --> 01:09:39,920
point of view of forwarding

1446
01:09:39,920 --> 01:09:42,560
and scheduling without segment routing

1447
01:09:42,560 --> 01:09:43,759
and tsn

1448
01:09:43,759 --> 01:09:46,080
what forwarding does it decides which

1449
01:09:46,080 --> 01:09:47,520
output port to use

1450
01:09:47,520 --> 01:09:49,920
and scheduling decides which packet of

1451
01:09:49,920 --> 01:09:51,359
all those which are waiting for that

1452
01:09:51,359 --> 01:09:52,880
output

1453
01:09:52,880 --> 01:09:55,600
port should be transmitted while with

1454
01:09:55,600 --> 01:09:57,040
segment routing and tsn

1455
01:09:57,040 --> 01:09:59,120
you can think of it as forwarding

1456
01:09:59,120 --> 01:10:01,120
decides where to send the packet

1457
01:10:01,120 --> 01:10:03,120
and scheduling decides when to send the

1458
01:10:03,120 --> 01:10:05,199
packet and that's an important thing

1459
01:10:05,199 --> 01:10:06,239
which we'll talk about

1460
01:10:06,239 --> 01:10:10,480
in two slides i think next slide please

1461
01:10:10,640 --> 01:10:12,960
so what can be done without putting a

1462
01:10:12,960 --> 01:10:14,000
stack into

1463
01:10:14,000 --> 01:10:16,080
the packet there are several mechanisms

1464
01:10:16,080 --> 01:10:17,760
which have been thought of before

1465
01:10:17,760 --> 01:10:19,199
there's something called longus in

1466
01:10:19,199 --> 01:10:20,880
system which inserts a

1467
01:10:20,880 --> 01:10:24,159
single time into the packet the time

1468
01:10:24,159 --> 01:10:25,199
that the packet

1469
01:10:25,199 --> 01:10:28,239
was uh born that is when it's injected

1470
01:10:28,239 --> 01:10:30,159
into the network and

1471
01:10:30,159 --> 01:10:32,719
allows uh the routers along the way to

1472
01:10:32,719 --> 01:10:35,120
prioritize the packets according to

1473
01:10:35,120 --> 01:10:37,040
birth time in other words the earlier

1474
01:10:37,040 --> 01:10:39,520
you put into the system the idea is that

1475
01:10:39,520 --> 01:10:40,719
you've been waiting around for a long

1476
01:10:40,719 --> 01:10:41,600
time

1477
01:10:41,600 --> 01:10:44,480
uh so we will try sending you before

1478
01:10:44,480 --> 01:10:46,239
packets that enter the system that is

1479
01:10:46,239 --> 01:10:47,280
the network

1480
01:10:47,280 --> 01:10:49,840
later now this is obviously sub-optimal

1481
01:10:49,840 --> 01:10:51,280
because you might have an

1482
01:10:51,280 --> 01:10:52,880
early packet a packet that was put into

1483
01:10:52,880 --> 01:10:55,040
the network but with a very loose delay

1484
01:10:55,040 --> 01:10:55,760
budget

1485
01:10:55,760 --> 01:10:58,400
as compared to one would come in later

1486
01:10:58,400 --> 01:11:00,800
but has a very tight budget

1487
01:11:00,800 --> 01:11:02,719
another mechanism which is frequently

1488
01:11:02,719 --> 01:11:04,560
used is called edf

1489
01:11:04,560 --> 01:11:05,920
some of you might remember this from the

1490
01:11:05,920 --> 01:11:08,480
atm world earliest deadline first you

1491
01:11:08,480 --> 01:11:10,320
put once again a single time

1492
01:11:10,320 --> 01:11:12,560
into the packet and this packet is the

1493
01:11:12,560 --> 01:11:14,560
packet's deadline the overall deadline

1494
01:11:14,560 --> 01:11:16,480
when it's supposed to exit the network

1495
01:11:16,480 --> 01:11:18,320
and you prioritize according to that but

1496
01:11:18,320 --> 01:11:20,000
that's not optimal either

1497
01:11:20,000 --> 01:11:22,159
because at each router along the way

1498
01:11:22,159 --> 01:11:23,760
none the non-egress

1499
01:11:23,760 --> 01:11:26,000
router every route along the way uh has

1500
01:11:26,000 --> 01:11:27,360
a single number and

1501
01:11:27,360 --> 01:11:30,800
cannot tell how much further after

1502
01:11:30,800 --> 01:11:32,800
it leaves this particular router the

1503
01:11:32,800 --> 01:11:33,920
packet has to

1504
01:11:33,920 --> 01:11:37,760
uh go so a router which is close to the

1505
01:11:37,760 --> 01:11:38,400
beginning

1506
01:11:38,400 --> 01:11:41,199
of the path really doesn't have very

1507
01:11:41,199 --> 01:11:42,640
much information to work on

1508
01:11:42,640 --> 01:11:45,679
next slide so the proposal

1509
01:11:45,679 --> 01:11:49,520
is uh to add a stack that is a stack of

1510
01:11:49,520 --> 01:11:52,640
local deadlines uh which we can optimize

1511
01:11:52,640 --> 01:11:55,120
in other words we're going to calculate

1512
01:11:55,120 --> 01:11:56,239
when a packet

1513
01:11:56,239 --> 01:11:59,360
should leave each particular router

1514
01:11:59,360 --> 01:12:01,440
and each router pops the top of its

1515
01:12:01,440 --> 01:12:02,800
stack

1516
01:12:02,800 --> 01:12:05,360
does some kind of scheduling which can

1517
01:12:05,360 --> 01:12:07,440
be earliest deadline first or just in

1518
01:12:07,440 --> 01:12:08,159
time

1519
01:12:08,159 --> 01:12:10,560
or something i call pedf it doesn't

1520
01:12:10,560 --> 01:12:11,760
really matter but does

1521
01:12:11,760 --> 01:12:13,600
something in order to prioritize that

1522
01:12:13,600 --> 01:12:15,600
packet in order to make make sure

1523
01:12:15,600 --> 01:12:17,760
that the packet exits the router by the

1524
01:12:17,760 --> 01:12:19,920
local deadline

1525
01:12:19,920 --> 01:12:22,239
as a matter of fact if you want to do

1526
01:12:22,239 --> 01:12:24,719
something funny you can do a rather

1527
01:12:24,719 --> 01:12:27,199
convoluted method which involves

1528
01:12:27,199 --> 01:12:28,320
quantizing

1529
01:12:28,320 --> 01:12:31,840
which will actually reproduce 802.1 qbv

1530
01:12:31,840 --> 01:12:34,640
which is the gold standard in the tsn

1531
01:12:34,640 --> 01:12:36,480
world that everyone says oh this gives

1532
01:12:36,480 --> 01:12:37,520
absolute

1533
01:12:37,520 --> 01:12:39,440
bounds so you could even do that but you

1534
01:12:39,440 --> 01:12:40,960
can certainly do better things which are

1535
01:12:40,960 --> 01:12:41,840
more logical

1536
01:12:41,840 --> 01:12:45,199
and perhaps better than that yes

1537
01:12:45,199 --> 01:12:47,440
i should note that the router is more

1538
01:12:47,440 --> 01:12:49,840
complex than a typical router that is

1539
01:12:49,840 --> 01:12:50,960
instead of having

1540
01:12:50,960 --> 01:12:54,000
fifo cues for each of the

1541
01:12:54,000 --> 01:12:57,360
priorities for the output port

1542
01:12:57,360 --> 01:12:58,640
it has to have something more

1543
01:12:58,640 --> 01:13:01,760
complicated but however i think it's

1544
01:13:01,760 --> 01:13:04,239
less complicated than what qbv does with

1545
01:13:04,239 --> 01:13:05,679
these time schedule gates that it

1546
01:13:05,679 --> 01:13:06,960
defines

1547
01:13:06,960 --> 01:13:09,120
uh and i should note that i said already

1548
01:13:09,120 --> 01:13:10,719
mentioned that there are several ways of

1549
01:13:10,719 --> 01:13:12,640
computing the local deadlines

1550
01:13:12,640 --> 01:13:15,760
uh i give in the draft srts and draft a

1551
01:13:15,760 --> 01:13:17,199
specific one

1552
01:13:17,199 --> 01:13:19,040
but there are many ones that which have

1553
01:13:19,040 --> 01:13:20,800
been discussed in the literature

1554
01:13:20,800 --> 01:13:23,360
next slide

1555
01:13:25,280 --> 01:13:27,280
i don't see the next slide here we go so

1556
01:13:27,280 --> 01:13:29,920
what is srtsn up to now been talking

1557
01:13:29,920 --> 01:13:31,040
about stack

1558
01:13:31,040 --> 01:13:33,520
well the idea basically is if i'm

1559
01:13:33,520 --> 01:13:36,159
already adding a stack

1560
01:13:36,159 --> 01:13:39,840
um to the packet why not add the segment

1561
01:13:39,840 --> 01:13:41,280
routing stack as well

1562
01:13:41,280 --> 01:13:43,440
in which case what i'm doing is i'm

1563
01:13:43,440 --> 01:13:45,600
adding into the packet headers

1564
01:13:45,600 --> 01:13:48,080
a stack of entries one for each router

1565
01:13:48,080 --> 01:13:49,679
to be traversed

1566
01:13:49,679 --> 01:13:52,719
each entry having two sub entries one a

1567
01:13:52,719 --> 01:13:56,080
forwarding uh instruction that is where

1568
01:13:56,080 --> 01:13:57,040
to send the packet

1569
01:13:57,040 --> 01:13:58,840
which i'll use a segment routing

1570
01:13:58,840 --> 01:14:00,400
instruction

1571
01:14:00,400 --> 01:14:02,400
and one which has in scheduling

1572
01:14:02,400 --> 01:14:03,600
instruction

1573
01:14:03,600 --> 01:14:05,280
that is the local deadline that i was

1574
01:14:05,280 --> 01:14:06,800
talking about before

1575
01:14:06,800 --> 01:14:09,920
so uh basically uh what we have here is

1576
01:14:09,920 --> 01:14:10,640
a stack

1577
01:14:10,640 --> 01:14:12,719
of entries each of which has a

1578
01:14:12,719 --> 01:14:14,960
forwarding and scheduling portion

1579
01:14:14,960 --> 01:14:17,760
uh each uh router along the way looks at

1580
01:14:17,760 --> 01:14:18,800
the top of stack

1581
01:14:18,800 --> 01:14:21,920
uh knows where to forward by when

1582
01:14:21,920 --> 01:14:24,640
to forward and then pops that with that

1583
01:14:24,640 --> 01:14:25,280
entry

1584
01:14:25,280 --> 01:14:27,760
and the next router of course uh gets

1585
01:14:27,760 --> 01:14:28,960
the uh

1586
01:14:28,960 --> 01:14:30,719
the packet with one less entry and looks

1587
01:14:30,719 --> 01:14:32,560
at top of stack and recurses until

1588
01:14:32,560 --> 01:14:33,920
there's no more left

1589
01:14:33,920 --> 01:14:36,719
now since i'm talking about a death net

1590
01:14:36,719 --> 01:14:38,800
or tsn kind of scenario

1591
01:14:38,800 --> 01:14:42,000
all of these routers are synced in time

1592
01:14:42,000 --> 01:14:43,920
so all these deadlines are directly

1593
01:14:43,920 --> 01:14:45,679
comparable i should i actually could

1594
01:14:45,679 --> 01:14:46,320
have said that

1595
01:14:46,320 --> 01:14:47,760
in the previous slide but i just wanted

1596
01:14:47,760 --> 01:14:50,239
to edit here uh and of course there may

1597
01:14:50,239 --> 01:14:51,040
be

1598
01:14:51,040 --> 01:14:53,440
other packets in the network which are

1599
01:14:53,440 --> 01:14:54,719
not time sensitive

1600
01:14:54,719 --> 01:14:56,800
which are a lower priority and there can

1601
01:14:56,800 --> 01:14:58,560
even be several priorities of time

1602
01:14:58,560 --> 01:14:59,840
sensitive packets

1603
01:14:59,840 --> 01:15:01,920
and i have a mechanism for taking care

1604
01:15:01,920 --> 01:15:05,360
of all of those using this srtsn stack

1605
01:15:05,360 --> 01:15:08,000
next slide

1606
01:15:09,120 --> 01:15:11,520
um this is just uh for those people who

1607
01:15:11,520 --> 01:15:13,360
like the word network programming i'm

1608
01:15:13,360 --> 01:15:15,199
giving my own interpretation here

1609
01:15:15,199 --> 01:15:16,560
but if you think about it what is the

1610
01:15:16,560 --> 01:15:18,320
point of network programming it's to do

1611
01:15:18,320 --> 01:15:18,800
something

1612
01:15:18,800 --> 01:15:21,520
like sdn that is to be able to

1613
01:15:21,520 --> 01:15:22,960
programmatically set up

1614
01:15:22,960 --> 01:15:26,239
your paths in the network but doing it

1615
01:15:26,239 --> 01:15:28,320
using the package itself so we can still

1616
01:15:28,320 --> 01:15:30,400
maintain this idea of the packet

1617
01:15:30,400 --> 01:15:32,159
finding its way through the network

1618
01:15:32,159 --> 01:15:34,159
rather have to configure a lot

1619
01:15:34,159 --> 01:15:36,080
so if you think about this a progression

1620
01:15:36,080 --> 01:15:37,679
where the simplest

1621
01:15:37,679 --> 01:15:39,440
and inadequate kind of network

1622
01:15:39,440 --> 01:15:41,760
programming is to simply have a single

1623
01:15:41,760 --> 01:15:43,840
destination address in the packet but

1624
01:15:43,840 --> 01:15:45,280
that's only next top

1625
01:15:45,280 --> 01:15:48,239
forwarding segment routing um actually

1626
01:15:48,239 --> 01:15:50,640
it does a bit of network programming

1627
01:15:50,640 --> 01:15:53,040
but only for the forwarding portion of

1628
01:15:53,040 --> 01:15:53,679
the router

1629
01:15:53,679 --> 01:15:56,800
not the scheduling and srtsn uh does

1630
01:15:56,800 --> 01:15:58,640
both forwarding and scheduling

1631
01:15:58,640 --> 01:16:01,440
network programming um and i put a note

1632
01:16:01,440 --> 01:16:03,120
here i don't take too much time that

1633
01:16:03,120 --> 01:16:04,400
there are obviously other things that

1634
01:16:04,400 --> 01:16:05,280
routers can do

1635
01:16:05,280 --> 01:16:07,280
like rate limiting and things of that

1636
01:16:07,280 --> 01:16:08,320
sort

1637
01:16:08,320 --> 01:16:11,199
however anything which is not per router

1638
01:16:11,199 --> 01:16:11,760
per

1639
01:16:11,760 --> 01:16:14,800
packet either being just per router but

1640
01:16:14,800 --> 01:16:16,080
doesn't really care

1641
01:16:16,080 --> 01:16:17,679
it's the same for the whole flow or

1642
01:16:17,679 --> 01:16:20,400
something can be taken care of either

1643
01:16:20,400 --> 01:16:22,480
by configuration or a single number in

1644
01:16:22,480 --> 01:16:23,920
the packet rather than having to use the

1645
01:16:23,920 --> 01:16:24,640
stack

1646
01:16:24,640 --> 01:16:27,520
so i'm i'm emphasizing the forwarding

1647
01:16:27,520 --> 01:16:28,880
and scheduling behavior

1648
01:16:28,880 --> 01:16:34,719
next slide please

1649
01:16:34,719 --> 01:16:37,040
here's a simple example just to show you

1650
01:16:37,040 --> 01:16:39,440
how this thing is going to work

1651
01:16:39,440 --> 01:16:41,760
uh i'm showing this example to so you

1652
01:16:41,760 --> 01:16:43,280
understand a little bit how it

1653
01:16:43,280 --> 01:16:45,920
this is just a a one way of setting

1654
01:16:45,920 --> 01:16:47,040
deadlines

1655
01:16:47,040 --> 01:16:49,600
uh but basically what we have here is a

1656
01:16:49,600 --> 01:16:51,280
packet which is leaving a host that has

1657
01:16:51,280 --> 01:16:52,719
to reach a host

1658
01:16:52,719 --> 01:16:56,320
at the other end after 200 microseconds

1659
01:16:56,320 --> 01:16:58,719
and there are four routers in between

1660
01:16:58,719 --> 01:16:59,840
these routers

1661
01:16:59,840 --> 01:17:02,400
um are the first one and the last one

1662
01:17:02,400 --> 01:17:04,239
are connected with wireless links with a

1663
01:17:04,239 --> 01:17:05,440
certain known delay

1664
01:17:05,440 --> 01:17:07,760
and yes we have to know the delays to at

1665
01:17:07,760 --> 01:17:10,080
least some accuracy between the routers

1666
01:17:10,080 --> 01:17:12,000
and i'm assuming someone does either

1667
01:17:12,000 --> 01:17:14,000
some kind of time domain reflectometry

1668
01:17:14,000 --> 01:17:15,679
or very least

1669
01:17:15,679 --> 01:17:19,120
a oem delay one-way delay measurement

1670
01:17:19,120 --> 01:17:21,600
um and you can set it up so that each

1671
01:17:21,600 --> 01:17:23,040
router

1672
01:17:23,040 --> 01:17:25,360
knows when the packet has to leave it

1673
01:17:25,360 --> 01:17:27,040
and you can look at the draft to

1674
01:17:27,040 --> 01:17:28,800
understand how i do that

1675
01:17:28,800 --> 01:17:31,840
and does a uh a calculation by

1676
01:17:31,840 --> 01:17:34,640
if you look at the uh packet uh uh

1677
01:17:34,640 --> 01:17:35,440
coming in

1678
01:17:35,440 --> 01:17:37,520
it doesn't have this header in the next

1679
01:17:37,520 --> 01:17:39,600
segment the ingress router put this

1680
01:17:39,600 --> 01:17:41,840
header on and you can see the uh

1681
01:17:41,840 --> 01:17:43,920
the header sitting in there it has three

1682
01:17:43,920 --> 01:17:45,520
entries the beginning then two entries

1683
01:17:45,520 --> 01:17:46,560
then one entry

1684
01:17:46,560 --> 01:17:48,640
each entry gives the forwarding

1685
01:17:48,640 --> 01:17:49,600
information

1686
01:17:49,600 --> 01:17:51,600
then i have a semicolon and then the

1687
01:17:51,600 --> 01:17:53,520
scheduling information

1688
01:17:53,520 --> 01:17:56,320
um and the schedules you can see above

1689
01:17:56,320 --> 01:17:56,960
uh just

1690
01:17:56,960 --> 01:17:58,480
so you understand how to map these

1691
01:17:58,480 --> 01:18:00,320
things uh obviously since you're using

1692
01:18:00,320 --> 01:18:02,480
segment routing the ingress router adds

1693
01:18:02,480 --> 01:18:02,960
this

1694
01:18:02,960 --> 01:18:05,120
therefore actually the segment uh the

1695
01:18:05,120 --> 01:18:06,000
the tap

1696
01:18:06,000 --> 01:18:08,560
uh of the stock when it first is entered

1697
01:18:08,560 --> 01:18:09,840
is for the second router

1698
01:18:09,840 --> 01:18:11,440
if we wanted to use something more

1699
01:18:11,440 --> 01:18:13,280
similar to source routing

1700
01:18:13,280 --> 01:18:15,679
um we could only uh we could we could

1701
01:18:15,679 --> 01:18:17,440
have one more when it comes in

1702
01:18:17,440 --> 01:18:19,120
and the host would do that but in that

1703
01:18:19,120 --> 01:18:20,719
case the host would have to be synced up

1704
01:18:20,719 --> 01:18:21,920
in time as well

1705
01:18:21,920 --> 01:18:23,520
which would make it a little bit

1706
01:18:23,520 --> 01:18:27,840
complicated next slide

1707
01:18:30,320 --> 01:18:32,080
okay there's one thing i wanted to

1708
01:18:32,080 --> 01:18:33,920
mention because it was on the list

1709
01:18:33,920 --> 01:18:36,239
and that is uh we had just now a talk

1710
01:18:36,239 --> 01:18:37,280
about the

1711
01:18:37,280 --> 01:18:38,640
a moment ago about compression of

1712
01:18:38,640 --> 01:18:41,120
headers uh i do discuss

1713
01:18:41,120 --> 01:18:43,520
um on the list and i'm going to have in

1714
01:18:43,520 --> 01:18:46,080
in the next uh version of the draft

1715
01:18:46,080 --> 01:18:48,640
um why it doesn't really take a lot of

1716
01:18:48,640 --> 01:18:49,520
room for this

1717
01:18:49,520 --> 01:18:52,080
stack uh i decided not to talk about

1718
01:18:52,080 --> 01:18:54,159
this in spring because uh segment

1719
01:18:54,159 --> 01:18:56,320
routing people are used to this in that

1720
01:18:56,320 --> 01:18:57,679
net i will discuss this

1721
01:18:57,679 --> 01:18:59,600
so what am i asking for from this

1722
01:18:59,600 --> 01:19:01,040
working group since

1723
01:19:01,040 --> 01:19:03,760
this uh draft talks about both segment

1724
01:19:03,760 --> 01:19:04,560
routing and

1725
01:19:04,560 --> 01:19:08,000
time sensitivity it's not sure uh it's

1726
01:19:08,000 --> 01:19:09,280
not so clear where

1727
01:19:09,280 --> 01:19:11,280
this uh should be discussed whether in

1728
01:19:11,280 --> 01:19:12,719
spring or indefinite

1729
01:19:12,719 --> 01:19:14,560
and since we're going to be discussing

1730
01:19:14,560 --> 01:19:16,560
how to optimize all this there's also

1731
01:19:16,560 --> 01:19:19,760
pce kind of aspects so

1732
01:19:19,760 --> 01:19:22,400
i'd like to simply ask is there interest

1733
01:19:22,400 --> 01:19:23,199
in pursuing

1734
01:19:23,199 --> 01:19:25,920
this work in this working group and i

1735
01:19:25,920 --> 01:19:27,040
would like to request

1736
01:19:27,040 --> 01:19:30,560
the chairs of spring.net and perhaps pce

1737
01:19:30,560 --> 01:19:32,800
and i've been pointed towards raw as

1738
01:19:32,800 --> 01:19:34,159
well to discuss

1739
01:19:34,159 --> 01:19:36,159
or to coordinate between them where this

1740
01:19:36,159 --> 01:19:38,239
work should progress if at all

1741
01:19:38,239 --> 01:19:39,440
if you don't think it's a good idea

1742
01:19:39,440 --> 01:19:41,760
that's also completely valid

1743
01:19:41,760 --> 01:19:45,520
uh and i'll turn it back to the chairs

1744
01:19:45,520 --> 01:19:47,600
thank you yakov we'll take questions

1745
01:19:47,600 --> 01:19:49,679
just in terms of expressing interest

1746
01:19:49,679 --> 01:19:51,360
we're not going to conduct a poll right

1747
01:19:51,360 --> 01:19:52,000
now

1748
01:19:52,000 --> 01:19:53,840
the best way to show interest is engage

1749
01:19:53,840 --> 01:19:55,760
in discussion with yakov on the

1750
01:19:55,760 --> 01:19:59,199
on the spring list about the topic gaian

1751
01:19:59,199 --> 01:20:01,839
your question

1752
01:20:03,199 --> 01:20:07,360
can you hear me yes we can okay

1753
01:20:07,360 --> 01:20:10,880
how does the draft update the

1754
01:20:10,880 --> 01:20:15,520
srv6 programming draft or does it update

1755
01:20:16,080 --> 01:20:19,120
um i'm sorry i have to say that i'm

1756
01:20:19,120 --> 01:20:20,960
not sure exactly what that draft

1757
01:20:20,960 --> 01:20:22,159
involves

1758
01:20:22,159 --> 01:20:25,760
uh this was uh this draft uh i added the

1759
01:20:25,760 --> 01:20:26,159
name

1760
01:20:26,159 --> 01:20:27,760
segment routing simply because of the

1761
01:20:27,760 --> 01:20:29,440
stack issues um

1762
01:20:29,440 --> 01:20:32,400
i'm not necessarily actually using

1763
01:20:32,400 --> 01:20:33,679
segment routing

1764
01:20:33,679 --> 01:20:36,000
techniques as a matter of fact the

1765
01:20:36,000 --> 01:20:38,159
mechanism i originally proposed

1766
01:20:38,159 --> 01:20:40,719
um uses indexes rather than full

1767
01:20:40,719 --> 01:20:41,840
addresses

1768
01:20:41,840 --> 01:20:44,639
uh but i certainly am willing to learn

1769
01:20:44,639 --> 01:20:46,000
more about

1770
01:20:46,000 --> 01:20:47,679
the the segment routing aspects and see

1771
01:20:47,679 --> 01:20:51,360
how this could be integrated better

1772
01:20:51,360 --> 01:20:54,480
okay thank you

1773
01:20:54,480 --> 01:21:00,719
new song

1774
01:21:00,719 --> 01:21:03,679
i'm happy to see similar ideas raised

1775
01:21:03,679 --> 01:21:06,480
again because about two years ago

1776
01:21:06,480 --> 01:21:09,600
we have um a similar document about this

1777
01:21:09,600 --> 01:21:10,719
topic

1778
01:21:10,719 --> 01:21:13,520
we use segment to indicate expects

1779
01:21:13,520 --> 01:21:14,440
expect

1780
01:21:14,440 --> 01:21:17,600
expectation time of a packet

1781
01:21:17,600 --> 01:21:20,639
to go output of a router

1782
01:21:20,639 --> 01:21:24,480
and with the explicit path

1783
01:21:24,480 --> 01:21:27,600
so i think it's a good idea and

1784
01:21:27,600 --> 01:21:30,719
i'm interested in this still but

1785
01:21:30,719 --> 01:21:33,120
i have to say the most difficult part

1786
01:21:33,120 --> 01:21:34,800
about this idea is about

1787
01:21:34,800 --> 01:21:37,840
them it is tied

1788
01:21:37,840 --> 01:21:41,520
to the killing management mechanisms in

1789
01:21:41,520 --> 01:21:42,320
the router

1790
01:21:42,320 --> 01:21:45,600
as you have mentioned just like a edf

1791
01:21:45,600 --> 01:21:49,280
or qbv or something like this

1792
01:21:49,280 --> 01:21:52,719
so i think this

1793
01:21:52,719 --> 01:21:55,600
topic should be discussed more

1794
01:21:55,600 --> 01:21:57,360
especially than

1795
01:21:57,360 --> 01:22:00,719
the relationship of the protocol

1796
01:22:00,719 --> 01:22:03,199
just as segment routing and the the

1797
01:22:03,199 --> 01:22:04,639
hardware mechanisms

1798
01:22:04,639 --> 01:22:07,840
in the router thanks

1799
01:22:07,840 --> 01:22:10,239
okay um he addressed that really quickly

1800
01:22:10,239 --> 01:22:11,440
um

1801
01:22:11,440 --> 01:22:13,840
the this draft talks about the mechanism

1802
01:22:13,840 --> 01:22:15,199
of using a stack

1803
01:22:15,199 --> 01:22:16,880
uh and unifying it with the segment

1804
01:22:16,880 --> 01:22:19,199
routing stack but the stack of deadlines

1805
01:22:19,199 --> 01:22:22,320
uh it doesn't discuss very much uh

1806
01:22:22,320 --> 01:22:24,400
the precise mechanisms and how they have

1807
01:22:24,400 --> 01:22:25,440
to be built

1808
01:22:25,440 --> 01:22:28,719
i'm not even sure that that is a an ietf

1809
01:22:28,719 --> 01:22:31,600
subject uh but i'd be uh more than happy

1810
01:22:31,600 --> 01:22:31,920
to

1811
01:22:31,920 --> 01:22:34,480
talk about that and uh maybe that would

1812
01:22:34,480 --> 01:22:35,040
be a

1813
01:22:35,040 --> 01:22:38,400
the subject for a different draft

1814
01:22:38,400 --> 01:22:41,199
okay thank you yakov and thank you for

1815
01:22:41,199 --> 01:22:42,719
being prompted oh

1816
01:22:42,719 --> 01:22:46,239
yeah and uh we'll now move on to the

1817
01:22:46,239 --> 01:22:48,239
presentations we skipped and

1818
01:22:48,239 --> 01:22:49,840
we actually have enough time for the

1819
01:22:49,840 --> 01:22:51,600
presentations we have

1820
01:22:51,600 --> 01:22:53,360
my thanks to the other speakers for

1821
01:22:53,360 --> 01:22:54,639
being prompt

1822
01:22:54,639 --> 01:22:57,120
rakesh you've got 10 minutes for each of

1823
01:22:57,120 --> 01:22:58,960
your two talks not the five minutes we

1824
01:22:58,960 --> 01:23:01,679
said in the agenda

1825
01:23:01,679 --> 01:23:04,880
thank you joel um sorry i was presenting

1826
01:23:04,880 --> 01:23:09,120
in mpls and apologies for being late

1827
01:23:09,840 --> 01:23:12,560
hi my name is rakesh gandhi presenting

1828
01:23:12,560 --> 01:23:14,880
the srpm

1829
01:23:14,880 --> 01:23:19,280
drafts on behalf of the authors listed

1830
01:23:19,280 --> 01:23:22,080
next slide please

1831
01:23:22,320 --> 01:23:24,719
so the agenda is uh we will look at the

1832
01:23:24,719 --> 01:23:25,679
requirement

1833
01:23:25,679 --> 01:23:28,239
and the scope of the draft summary of

1834
01:23:28,239 --> 01:23:32,080
the procedures and the next steps

1835
01:23:32,080 --> 01:23:35,920
next slide please so the requirements uh

1836
01:23:35,920 --> 01:23:38,080
in-band performance delay and loss

1837
01:23:38,080 --> 01:23:39,199
measurement

1838
01:23:39,199 --> 01:23:43,840
for links as well as um end-to-end

1839
01:23:43,840 --> 01:23:46,880
sr paths p2p and p2mp

1840
01:23:46,880 --> 01:23:50,000
links can be physical virtual lag

1841
01:23:50,000 --> 01:23:53,280
or lag members applicable to both

1842
01:23:53,280 --> 01:23:58,080
srm pls as well as srv6 data planes

1843
01:23:58,080 --> 01:24:00,639
there are three modes one way to win

1844
01:24:00,639 --> 01:24:01,360
round trip

1845
01:24:01,360 --> 01:24:04,159
delay and as well as a packet loss

1846
01:24:04,159 --> 01:24:05,120
metrics

1847
01:24:05,120 --> 01:24:08,320
computation the goal is

1848
01:24:08,320 --> 01:24:11,360
with the spirit of segment routing

1849
01:24:11,360 --> 01:24:14,159
where the state is in the packet like to

1850
01:24:14,159 --> 01:24:14,800
avoid

1851
01:24:14,800 --> 01:24:17,120
maintaining each test essence on session

1852
01:24:17,120 --> 01:24:18,719
reflector

1853
01:24:18,719 --> 01:24:20,880
avoid control protocol for signaling

1854
01:24:20,880 --> 01:24:23,679
dynamic parameters

1855
01:24:23,679 --> 01:24:26,719
the scope of this draft is a simple

1856
01:24:26,719 --> 01:24:31,040
t-bump this is a new rfc in ippm

1857
01:24:31,040 --> 01:24:34,560
working group rfc 8762 as well as a

1858
01:24:34,560 --> 01:24:35,199
stamp

1859
01:24:35,199 --> 01:24:38,960
tlv extensions uh rfc 8972 was just

1860
01:24:38,960 --> 01:24:39,840
became rfc

1861
01:24:39,840 --> 01:24:43,280
last month um and we have

1862
01:24:43,280 --> 01:24:47,280
uh sr specific um extensions for the

1863
01:24:47,280 --> 01:24:48,320
stamp

1864
01:24:48,320 --> 01:24:51,520
in ippm working group so this draft

1865
01:24:51,520 --> 01:24:54,960
depends on the ippm um

1866
01:24:54,960 --> 01:24:58,320
drop for sr extensions and next slide

1867
01:24:58,320 --> 01:25:00,559
please

1868
01:25:01,600 --> 01:25:04,400
so uh we had the uh working up adoption

1869
01:25:04,400 --> 01:25:04,960
poll as

1870
01:25:04,960 --> 01:25:08,000
and we received a number of uh

1871
01:25:08,000 --> 01:25:11,440
review comments uh many um thanks to

1872
01:25:11,440 --> 01:25:14,800
everyone uh you provided comments uh so

1873
01:25:14,800 --> 01:25:15,120
we

1874
01:25:15,120 --> 01:25:18,159
we have a new version um

1875
01:25:18,159 --> 01:25:20,800
uh with uh following updates uh so draft

1876
01:25:20,800 --> 01:25:21,679
status uh

1877
01:25:21,679 --> 01:25:25,440
is informational um the terminology

1878
01:25:25,440 --> 01:25:28,000
is updated to align with stamp

1879
01:25:28,000 --> 01:25:30,239
terminology

1880
01:25:30,239 --> 01:25:32,239
there is a section added for the

1881
01:25:32,239 --> 01:25:34,880
synthetic packet loss

1882
01:25:34,880 --> 01:25:38,800
which is uh as defined in stem

1883
01:25:38,800 --> 01:25:41,360
there was uh discussions on the uh

1884
01:25:41,360 --> 01:25:42,239
standalone

1885
01:25:42,239 --> 01:25:45,280
uh direct loss measurement messages so

1886
01:25:45,280 --> 01:25:48,000
they have they are moved to a different

1887
01:25:48,000 --> 01:25:49,440
uh draft

1888
01:25:49,440 --> 01:25:52,480
uh it's a standalone draft in ippm

1889
01:25:52,480 --> 01:25:54,400
working group

1890
01:25:54,400 --> 01:25:58,960
and untied with with sr

1891
01:25:58,960 --> 01:26:02,320
there was comment on ipv6 udp

1892
01:26:02,320 --> 01:26:05,600
test packet with zero checksum so we

1893
01:26:05,600 --> 01:26:07,520
have removed that text

1894
01:26:07,520 --> 01:26:10,719
in this version we can work with working

1895
01:26:10,719 --> 01:26:11,600
group

1896
01:26:11,600 --> 01:26:14,800
on on the appropriate text to add that

1897
01:26:14,800 --> 01:26:18,560
and some various editorial changes

1898
01:26:18,560 --> 01:26:21,520
to address the review comments uh we

1899
01:26:21,520 --> 01:26:23,600
don't believe there are any open items

1900
01:26:23,600 --> 01:26:25,120
at this point

1901
01:26:25,120 --> 01:26:28,320
um next slide please

1902
01:26:29,120 --> 01:26:31,920
uh just to summarize uh uh the simple

1903
01:26:31,920 --> 01:26:32,960
theorem

1904
01:26:32,960 --> 01:26:36,000
uh the uh the procedures for

1905
01:26:36,000 --> 01:26:39,120
sr um so there is a

1906
01:26:39,120 --> 01:26:41,280
young data model that defines uh the

1907
01:26:41,280 --> 01:26:42,320
provisioning

1908
01:26:42,320 --> 01:26:45,600
aspects of it uh there are some sr

1909
01:26:45,600 --> 01:26:49,120
expect aspects of some examples that

1910
01:26:49,120 --> 01:26:51,520
there is a udp destination port defined

1911
01:26:51,520 --> 01:26:53,120
with authentication

1912
01:26:53,120 --> 01:26:55,840
mode key there is a delay measurement

1913
01:26:55,840 --> 01:26:56,239
mode

1914
01:26:56,239 --> 01:26:58,960
one way two way or round trip which

1915
01:26:58,960 --> 01:27:00,960
timestamp format we want to use or the

1916
01:27:00,960 --> 01:27:02,960
packet loss if it's a

1917
01:27:02,960 --> 01:27:06,560
synthetic or direct loss so this is just

1918
01:27:06,560 --> 01:27:07,760
some examples of

1919
01:27:07,760 --> 01:27:10,719
the the poisoning aspects of it and next

1920
01:27:10,719 --> 01:27:19,840
like this

1921
01:27:28,560 --> 01:27:30,960
connection dropped i'm back do i go to

1922
01:27:30,960 --> 01:27:32,000
the next slide which slide

1923
01:27:32,000 --> 01:27:35,520
you do he wanted the next slide

1924
01:27:35,520 --> 01:27:38,880
okay same deck next slide

1925
01:27:38,880 --> 01:27:43,070
you're not sharing your screen hang on

1926
01:27:43,070 --> 01:27:45,120
[Music]

1927
01:27:45,120 --> 01:27:47,840
there

1928
01:27:53,920 --> 01:27:58,480
and now you're sharing your there we are

1929
01:27:58,480 --> 01:28:02,080
got it yeah go ahead

1930
01:28:02,080 --> 01:28:05,920
cash yeah so um this is an example uh

1931
01:28:05,920 --> 01:28:07,280
packet for um

1932
01:28:07,280 --> 01:28:10,320
uh test packet for links

1933
01:28:10,320 --> 01:28:13,280
um it's a it's using the destination udp

1934
01:28:13,280 --> 01:28:15,199
board that's uh

1935
01:28:15,199 --> 01:28:19,360
i can figure it sorry you're lost again

1936
01:28:22,880 --> 01:28:25,920
jim you lost the deck

1937
01:28:25,920 --> 01:28:28,159
you switched what you were presenting

1938
01:28:28,159 --> 01:28:30,400
there

1939
01:28:32,960 --> 01:28:36,239
uh yes um so uh again

1940
01:28:36,239 --> 01:28:38,880
that it's a user configure the udp

1941
01:28:38,880 --> 01:28:40,560
destination port uh

1942
01:28:40,560 --> 01:28:44,000
iptl set to one and applicable to

1943
01:28:44,000 --> 01:28:47,760
various links next slide please

1944
01:28:49,679 --> 01:28:53,280
the test packet for the srm pls nsrv6

1945
01:28:53,280 --> 01:28:55,120
policy for srm pls

1946
01:28:55,120 --> 01:28:57,280
is carrying the mpls label stack for

1947
01:28:57,280 --> 01:28:58,639
srv6 carrying the

1948
01:28:58,639 --> 01:29:01,760
srv6 um segment list and

1949
01:29:01,760 --> 01:29:05,840
also srh for it there is upper layer

1950
01:29:05,840 --> 01:29:07,280
processing defined in network

1951
01:29:07,280 --> 01:29:10,560
programming for the udp header that's

1952
01:29:10,560 --> 01:29:12,960
carried

1953
01:29:13,040 --> 01:29:16,719
the iptl is set to 255 there is a color

1954
01:29:16,719 --> 01:29:17,360
only

1955
01:29:17,360 --> 01:29:20,560
destination steering in this case ipv4

1956
01:29:20,560 --> 01:29:23,120
destination address is set to 127

1957
01:29:23,120 --> 01:29:26,639
address and ipv6 also

1958
01:29:26,639 --> 01:29:29,679
corresponding back address

1959
01:29:29,679 --> 01:29:33,600
as well next slide please

1960
01:29:35,440 --> 01:29:38,800
for p2mp the test packet is sent with

1961
01:29:38,800 --> 01:29:40,880
127 address for the

1962
01:29:40,880 --> 01:29:45,600
p2mp mpls with iptl set to one

1963
01:29:45,600 --> 01:29:48,480
and the three seat as an example of the

1964
01:29:48,480 --> 01:29:50,000
policy

1965
01:29:50,000 --> 01:29:53,840
next slide please

1966
01:29:54,239 --> 01:29:56,480
and the reflector test packet uses the

1967
01:29:56,480 --> 01:29:58,400
information from the received aspect

1968
01:29:58,400 --> 01:29:59,440
test packet

1969
01:29:59,440 --> 01:30:02,400
and next slide please

1970
01:30:03,440 --> 01:30:05,440
so this is where some of the extensions

1971
01:30:05,440 --> 01:30:06,560
in ippm

1972
01:30:06,560 --> 01:30:09,440
come into the picture uh so this is uh

1973
01:30:09,440 --> 01:30:11,840
for the in-band

1974
01:30:11,840 --> 01:30:14,639
measurements uh so for one-way delay

1975
01:30:14,639 --> 01:30:16,400
measurement is the existing uh

1976
01:30:16,400 --> 01:30:20,400
stamp mode in two-way um

1977
01:30:20,400 --> 01:30:22,800
for links uh there is a subtle we

1978
01:30:22,800 --> 01:30:23,840
defined

1979
01:30:23,840 --> 01:30:26,159
uh to send the in-band reply and for

1980
01:30:26,159 --> 01:30:27,679
end-to-end sr path

1981
01:30:27,679 --> 01:30:30,080
uh the subtle segment list of dlv is

1982
01:30:30,080 --> 01:30:31,120
defined uh

1983
01:30:31,120 --> 01:30:35,199
for the in-band written path

1984
01:30:35,199 --> 01:30:37,920
and for the round trip measurement the

1985
01:30:37,920 --> 01:30:38,960
packet carries

1986
01:30:38,960 --> 01:30:42,000
both the forward and reverse direction

1987
01:30:42,000 --> 01:30:46,840
part in the header itself next slide

1988
01:30:46,840 --> 01:30:48,400
please

1989
01:30:48,400 --> 01:30:51,440
so to handle the ecmp uh uh there is a

1990
01:30:51,440 --> 01:30:52,159
sweeping

1991
01:30:52,159 --> 01:30:55,440
mechanisms uh for ipv4 uh

1992
01:30:55,440 --> 01:30:59,520
is a 127 address for ipv6 is the

1993
01:30:59,520 --> 01:31:02,639
flow label for ipv4 s

1994
01:31:02,639 --> 01:31:06,239
127 address is used um in order to avoid

1995
01:31:06,239 --> 01:31:06,639
the

1996
01:31:06,639 --> 01:31:08,719
false positive there is also a

1997
01:31:08,719 --> 01:31:10,719
destination node address tlv

1998
01:31:10,719 --> 01:31:12,800
to identify the actual node address so

1999
01:31:12,800 --> 01:31:13,840
when we get reply

2000
01:31:13,840 --> 01:31:16,159
we know it's coming from the right

2001
01:31:16,159 --> 01:31:17,520
intended

2002
01:31:17,520 --> 01:31:22,400
destination next slide please

2003
01:31:23,360 --> 01:31:27,199
so various pm metrics

2004
01:31:27,199 --> 01:31:30,880
are used the minimum delay maximum delay

2005
01:31:30,880 --> 01:31:32,800
average and delay variance uh and

2006
01:31:32,800 --> 01:31:35,920
also uh for loss uh there is a synthetic

2007
01:31:35,920 --> 01:31:37,040
packet loss uh

2008
01:31:37,040 --> 01:31:38,400
there is direct measurement packet

2009
01:31:38,400 --> 01:31:40,960
counters using the tlv that's defined in

2010
01:31:40,960 --> 01:31:42,320
stem

2011
01:31:42,320 --> 01:31:44,320
and the session the status succeeded or

2012
01:31:44,320 --> 01:31:46,080
failed uh to know the measurement is

2013
01:31:46,080 --> 01:31:47,280
active

2014
01:31:47,280 --> 01:31:52,159
uh also defined in the in the draft

2015
01:31:52,159 --> 01:31:55,120
and next slide please

2016
01:31:55,760 --> 01:31:57,840
so welcome your comments and suggestions

2017
01:31:57,840 --> 01:31:58,880
um and

2018
01:31:58,880 --> 01:32:01,360
we are requesting working group adoption

2019
01:32:01,360 --> 01:32:03,440
i think we could uh look at the next set

2020
01:32:03,440 --> 01:32:07,120
of slides in ippm uh just to um

2021
01:32:07,120 --> 01:32:09,120
i'd like diane's been waiting to ask a

2022
01:32:09,120 --> 01:32:10,560
question so i'd like to let him get his

2023
01:32:10,560 --> 01:32:12,880
question and then you can go on

2024
01:32:12,880 --> 01:32:16,159
okay diane go ahead hi yes can you hear

2025
01:32:16,159 --> 01:32:17,280
me

2026
01:32:17,280 --> 01:32:20,880
yes yes okay um hi brocco

2027
01:32:20,880 --> 01:32:23,280
this draft is uh discussed fairly

2028
01:32:23,280 --> 01:32:25,199
extensively on

2029
01:32:25,199 --> 01:32:28,560
on these spring work group um so i had a

2030
01:32:28,560 --> 01:32:30,480
question i i see this the draft was

2031
01:32:30,480 --> 01:32:32,320
updated from standards track to

2032
01:32:32,320 --> 01:32:33,600
informational

2033
01:32:33,600 --> 01:32:36,880
um so that that's good i think i think

2034
01:32:36,880 --> 01:32:38,639
one of the key points was that i think

2035
01:32:38,639 --> 01:32:40,080
this drafted seemed like it's

2036
01:32:40,080 --> 01:32:42,639
mostly procedural of how do you stamp

2037
01:32:42,639 --> 01:32:43,600
and triumph with

2038
01:32:43,600 --> 01:32:46,880
segment routing um were all the other

2039
01:32:46,880 --> 01:32:48,719
update there was quite extensive uh

2040
01:32:48,719 --> 01:32:51,360
number of comments i think by uh myself

2041
01:32:51,360 --> 01:32:52,320
and uh

2042
01:32:52,320 --> 01:32:54,719
greg mursky were some of those other

2043
01:32:54,719 --> 01:32:56,080
comments updated

2044
01:32:56,080 --> 01:33:00,880
in the version 5 yes

2045
01:33:02,239 --> 01:33:04,639
and thanks again for your review

2046
01:33:04,639 --> 01:33:06,239
comments

2047
01:33:06,239 --> 01:33:08,960
so we have addressed your comments uh

2048
01:33:08,960 --> 01:33:10,320
please um

2049
01:33:10,320 --> 01:33:12,719
in in both uh there are two drafts one

2050
01:33:12,719 --> 01:33:13,520
is in there

2051
01:33:13,520 --> 01:33:16,080
well actually there were four drops uh

2052
01:33:16,080 --> 01:33:17,280
simple t-wamp

2053
01:33:17,280 --> 01:33:20,800
um as well as for the t-wamp light

2054
01:33:20,800 --> 01:33:24,000
so um many comments were on

2055
01:33:24,000 --> 01:33:27,440
on the t1 lite drops so

2056
01:33:27,440 --> 01:33:29,760
there were four drops today we are only

2057
01:33:29,760 --> 01:33:31,520
talking about the two drops

2058
01:33:31,520 --> 01:33:34,840
simple t1 in spring and simple t1 in

2059
01:33:34,840 --> 01:33:37,840
ippm

2060
01:33:37,840 --> 01:33:41,440
okay all right thank you thank you

2061
01:33:41,440 --> 01:33:44,400
thanks again okay now we'll go to the

2062
01:33:44,400 --> 01:33:45,280
next stack

2063
01:33:45,280 --> 01:33:49,199
go ahead so uh

2064
01:33:49,199 --> 01:33:52,400
since uh this draft in ippm uh is a

2065
01:33:52,400 --> 01:33:54,960
normative reference for the spring drop

2066
01:33:54,960 --> 01:33:58,000
defines the extensions that spring

2067
01:33:58,000 --> 01:34:02,000
needs uh and very specific to sr

2068
01:34:02,000 --> 01:34:04,880
we will go over those extensions and

2069
01:34:04,880 --> 01:34:07,600
next slide please

2070
01:34:08,159 --> 01:34:10,159
so agenda is to look at the requirements

2071
01:34:10,159 --> 01:34:12,000
and scope uh the summary of the

2072
01:34:12,000 --> 01:34:15,040
extensions and next steps

2073
01:34:15,040 --> 01:34:17,600
so uh uh same requirement in band

2074
01:34:17,600 --> 01:34:19,600
performance measurement for links and sr

2075
01:34:19,600 --> 01:34:20,480
paths

2076
01:34:20,480 --> 01:34:24,000
uh goal is to avoid this uh maintaining

2077
01:34:24,000 --> 01:34:24,320
its

2078
01:34:24,320 --> 01:34:26,000
test session on reflector and the

2079
01:34:26,000 --> 01:34:27,520
control plane signaling

2080
01:34:27,520 --> 01:34:30,960
and the scope is the stamp extensions

2081
01:34:30,960 --> 01:34:34,080
8762 and 89.72

2082
01:34:34,080 --> 01:34:36,880
next slide please

2083
01:34:38,239 --> 01:34:41,280
so uh again that again and greg

2084
01:34:41,280 --> 01:34:43,360
and many people uh who contributed to

2085
01:34:43,360 --> 01:34:44,560
the review

2086
01:34:44,560 --> 01:34:48,400
many thanks we have updated uh um

2087
01:34:48,400 --> 01:34:50,320
the draft to address the comments uh

2088
01:34:50,320 --> 01:34:52,159
align the terminology

2089
01:34:52,159 --> 01:34:55,199
the direct measurement messages uh are

2090
01:34:55,199 --> 01:34:57,119
moved to a new draft

2091
01:34:57,119 --> 01:34:59,600
uh it's a standalone draft not tied to

2092
01:34:59,600 --> 01:35:00,159
sr

2093
01:35:00,159 --> 01:35:01,920
based on the feedback from the working

2094
01:35:01,920 --> 01:35:03,520
group

2095
01:35:03,520 --> 01:35:06,560
and it can have its own

2096
01:35:06,560 --> 01:35:09,920
life cycle move the control code to

2097
01:35:09,920 --> 01:35:12,239
return path dlv

2098
01:35:12,239 --> 01:35:14,719
and various editorials changes as

2099
01:35:14,719 --> 01:35:16,400
suggested in the reviews

2100
01:35:16,400 --> 01:35:19,119
next slide please

2101
01:35:20,400 --> 01:35:22,800
uh so one tl for the destination node

2102
01:35:22,800 --> 01:35:23,600
address uh

2103
01:35:23,600 --> 01:35:27,920
as we mentioned uh when we doing 127

2104
01:35:27,920 --> 01:35:31,040
address base

2105
01:35:31,040 --> 01:35:34,239
probing we need to identify the actual

2106
01:35:34,239 --> 01:35:35,920
destination node to avoid false

2107
01:35:35,920 --> 01:35:37,280
positives so there is a tl

2108
01:35:37,280 --> 01:35:40,840
that carries the address next slide

2109
01:35:40,840 --> 01:35:43,840
please

2110
01:35:44,239 --> 01:35:46,000
uh there is a return path tail we

2111
01:35:46,000 --> 01:35:47,600
defined for the in-bend

2112
01:35:47,600 --> 01:35:50,960
measurement for uh two-way modes uh

2113
01:35:50,960 --> 01:35:54,080
it has a control code um and defines

2114
01:35:54,080 --> 01:35:57,199
a need to send the replying ban

2115
01:35:57,199 --> 01:36:00,880
or no reply also written address or the

2116
01:36:00,880 --> 01:36:05,040
srm pls label stack or srv6

2117
01:36:05,040 --> 01:36:09,119
segment list or binding seed information

2118
01:36:09,119 --> 01:36:11,839
next slide please

2119
01:36:13,600 --> 01:36:16,400
so this discusses the usage of it there

2120
01:36:16,400 --> 01:36:18,480
were some comments on um

2121
01:36:18,480 --> 01:36:20,560
we had extensions but it wasn't clear

2122
01:36:20,560 --> 01:36:22,400
how how are they being used

2123
01:36:22,400 --> 01:36:26,000
as the drop was split into two drops

2124
01:36:26,000 --> 01:36:28,400
uh so this defines that control core is

2125
01:36:28,400 --> 01:36:29,679
being used for the link delay

2126
01:36:29,679 --> 01:36:30,320
measurement

2127
01:36:30,320 --> 01:36:34,400
where um uh the there is the reflector

2128
01:36:34,400 --> 01:36:36,880
uh look at it and it will send reply

2129
01:36:36,880 --> 01:36:38,639
invent on the same link where the

2130
01:36:38,639 --> 01:36:41,520
test packet is received next slide

2131
01:36:41,520 --> 01:36:43,760
please

2132
01:36:45,440 --> 01:36:48,560
the return address is again if we want

2133
01:36:48,560 --> 01:36:49,199
to

2134
01:36:49,199 --> 01:36:51,520
send the reply to a different

2135
01:36:51,520 --> 01:36:52,560
destination address

2136
01:36:52,560 --> 01:36:55,199
in the sender address there is a return

2137
01:36:55,199 --> 01:36:57,440
address also defined

2138
01:36:57,440 --> 01:37:02,480
in the draft next slide

2139
01:37:03,040 --> 01:37:06,560
there is a return path segment list tlvs

2140
01:37:06,560 --> 01:37:09,199
uh for srm pls and srv6 uh

2141
01:37:09,199 --> 01:37:12,960
and the binding uh seed as well um

2142
01:37:12,960 --> 01:37:15,040
so for sr uh paths are computed

2143
01:37:15,040 --> 01:37:16,560
dynamically and uh

2144
01:37:16,560 --> 01:37:20,800
topology can change um and the goal is

2145
01:37:20,800 --> 01:37:24,560
as mentioned avoid the dynamic um

2146
01:37:24,560 --> 01:37:26,719
signaling and maintaining the states on

2147
01:37:26,719 --> 01:37:28,719
the reflector could be tens of thousands

2148
01:37:28,719 --> 01:37:29,360
of

2149
01:37:29,360 --> 01:37:32,239
assassins so the written path

2150
01:37:32,239 --> 01:37:34,000
information is carried in the packet

2151
01:37:34,000 --> 01:37:35,520
itself

2152
01:37:35,520 --> 01:37:40,719
by the sender the next slide please

2153
01:37:42,320 --> 01:37:44,960
so uh we are requesting uh the working

2154
01:37:44,960 --> 01:37:45,840
group adoption

2155
01:37:45,840 --> 01:37:49,280
in the ippm working group for this one

2156
01:37:49,280 --> 01:37:51,600
we are presenting this draft as well in

2157
01:37:51,600 --> 01:37:52,800
ippm

2158
01:37:52,800 --> 01:37:56,000
session on friday welcome your comments

2159
01:37:56,000 --> 01:37:57,920
and suggestions and again many thanks to

2160
01:37:57,920 --> 01:38:02,080
all the reviewers who provided comments

2161
01:38:02,080 --> 01:38:04,080
you rakesh are there any questions on

2162
01:38:04,080 --> 01:38:08,159
either of rakesh's two presentations

2163
01:38:11,280 --> 01:38:14,840
okay then thank you very much

2164
01:38:14,840 --> 01:38:17,440
krishna i believe you're here for the

2165
01:38:17,440 --> 01:38:20,000
yang presentation

2166
01:38:20,000 --> 01:38:22,880
joel there is one more draft uh on the

2167
01:38:22,880 --> 01:38:23,760
there is one

2168
01:38:23,760 --> 01:38:27,119
lioness oh

2169
01:38:27,119 --> 01:38:30,719
yeah sorry

2170
01:38:30,719 --> 01:38:34,239
um i just brought it up

2171
01:38:34,239 --> 01:38:36,320
okay that wasn't on the copy of the

2172
01:38:36,320 --> 01:38:37,600
agenda i was looking at

2173
01:38:37,600 --> 01:38:40,719
let's take it quickly

2174
01:38:40,719 --> 01:38:44,239
it is there

2175
01:38:44,239 --> 01:38:47,760
okay go ahead thanks john

2176
01:38:47,760 --> 01:38:50,239
thanks sir

2177
01:38:52,719 --> 01:38:55,119
hi everyone my name is rakesh gandhi

2178
01:38:55,119 --> 01:38:55,920
presenting

2179
01:38:55,920 --> 01:38:58,480
enhanced plm performance and liveness

2180
01:38:58,480 --> 01:39:00,159
monitoring and segment routing draft on

2181
01:39:00,159 --> 01:39:01,679
behalf of the authors

2182
01:39:01,679 --> 01:39:06,000
listed next slide please

2183
01:39:06,400 --> 01:39:08,560
so agenda is we look at the requirements

2184
01:39:08,560 --> 01:39:10,800
and scope the history of the draft and

2185
01:39:10,800 --> 01:39:11,679
updates

2186
01:39:11,679 --> 01:39:14,719
and the review of various

2187
01:39:14,719 --> 01:39:17,040
procedures and next steps and next slide

2188
01:39:17,040 --> 01:39:19,280
please

2189
01:39:21,199 --> 01:39:23,840
so requirements is again in-band

2190
01:39:23,840 --> 01:39:25,199
performance

2191
01:39:25,199 --> 01:39:27,280
by this time liveness monitoring in sr

2192
01:39:27,280 --> 01:39:29,760
networks four and two nsr parts

2193
01:39:29,760 --> 01:39:32,560
applicable to srm pls and srv6 data

2194
01:39:32,560 --> 01:39:33,600
planes

2195
01:39:33,600 --> 01:39:36,480
um and running a single protocol to

2196
01:39:36,480 --> 01:39:37,520
simplify

2197
01:39:37,520 --> 01:39:39,920
implementations and reduce development

2198
01:39:39,920 --> 01:39:41,520
cost

2199
01:39:41,520 --> 01:39:44,400
also for operators simplify the

2200
01:39:44,400 --> 01:39:46,080
deployment and they reduce the

2201
01:39:46,080 --> 01:39:49,360
operational complexity in the network

2202
01:39:49,360 --> 01:39:52,159
uh goal is to a new session reflector

2203
01:39:52,159 --> 01:39:53,360
dependency

2204
01:39:53,360 --> 01:39:57,280
again the state is in the packet for sr

2205
01:39:57,280 --> 01:39:59,840
so the session reflector is not aware of

2206
01:39:59,840 --> 01:40:01,520
the protocol

2207
01:40:01,520 --> 01:40:05,760
uh and also like to have very high uh

2208
01:40:05,760 --> 01:40:09,040
scale and the faster detection interval

2209
01:40:09,040 --> 01:40:11,199
uh so the scope of this draft is the

2210
01:40:11,199 --> 01:40:14,080
simple theorem stamp rfc 8762

2211
01:40:14,080 --> 01:40:17,600
base um implementations um

2212
01:40:17,600 --> 01:40:20,159
the the same packet format to leverage

2213
01:40:20,159 --> 01:40:22,639
the time stem fields

2214
01:40:22,639 --> 01:40:26,639
at the same locations in the packets

2215
01:40:26,639 --> 01:40:29,760
next slide please

2216
01:40:30,639 --> 01:40:33,760
so this draft is a year old we had

2217
01:40:33,760 --> 01:40:34,719
presented the

2218
01:40:34,719 --> 01:40:39,119
the initial version in spring a year ago

2219
01:40:39,119 --> 01:40:42,960
and also was presented in mpls um

2220
01:40:42,960 --> 01:40:45,600
working group and we have made the

2221
01:40:45,600 --> 01:40:46,320
updates

2222
01:40:46,320 --> 01:40:51,360
we'll look at the next slide please

2223
01:40:51,360 --> 01:40:53,679
so we have updated terminology to align

2224
01:40:53,679 --> 01:40:55,840
with uh stamp

2225
01:40:55,840 --> 01:40:58,400
terminology we have added authentication

2226
01:40:58,400 --> 01:41:00,000
mode

2227
01:41:00,000 --> 01:41:02,000
there is a capability node capability

2228
01:41:02,000 --> 01:41:04,159
added for the srv6

2229
01:41:04,159 --> 01:41:06,400
also added synthetic packet loss updated

2230
01:41:06,400 --> 01:41:08,159
ions sections as well as various

2231
01:41:08,159 --> 01:41:10,560
editorial changes

2232
01:41:10,560 --> 01:41:12,400
now we don't believe there are any open

2233
01:41:12,400 --> 01:41:15,119
items at this point

2234
01:41:15,119 --> 01:41:19,199
next slide please

2235
01:41:19,199 --> 01:41:22,080
so a loopback mode is defined for sr

2236
01:41:22,080 --> 01:41:22,800
policy

2237
01:41:22,800 --> 01:41:25,119
as uh test packet carrying the forward

2238
01:41:25,119 --> 01:41:27,119
and reverse um

2239
01:41:27,119 --> 01:41:30,239
uh path uh in case of

2240
01:41:30,239 --> 01:41:33,760
sr policy segment list is um for each

2241
01:41:33,760 --> 01:41:35,840
segment list of the sr policy a test

2242
01:41:35,840 --> 01:41:38,159
packet is sent with the segment list

2243
01:41:38,159 --> 01:41:41,520
uh reflected just forwards the packet

2244
01:41:41,520 --> 01:41:44,880
is not aware of any monitoring happening

2245
01:41:44,880 --> 01:41:47,199
you can measure round trip delay as two

2246
01:41:47,199 --> 01:41:48,400
time stamps on the

2247
01:41:48,400 --> 01:41:54,080
sender side next slide please

2248
01:41:55,199 --> 01:41:57,360
and when with the look back mode when

2249
01:41:57,360 --> 01:42:00,080
it's used for network programming

2250
01:42:00,080 --> 01:42:02,719
the reflector not only just forwards the

2251
01:42:02,719 --> 01:42:05,119
packet but also timestamps the packet

2252
01:42:05,119 --> 01:42:08,159
and reply comes back to r1

2253
01:42:08,159 --> 01:42:10,719
so idea here is that this happens in the

2254
01:42:10,719 --> 01:42:11,920
first part

2255
01:42:11,920 --> 01:42:15,040
and you you you're getting not just

2256
01:42:15,040 --> 01:42:17,520
lightness monitoring but also the delay

2257
01:42:17,520 --> 01:42:19,280
values uh because uh

2258
01:42:19,280 --> 01:42:22,050
reflector that's the timestamp um

2259
01:42:22,050 --> 01:42:24,320
[Music]

2260
01:42:24,320 --> 01:42:26,320
so it says yeah this is a combined uh

2261
01:42:26,320 --> 01:42:28,159
liveness and delay

2262
01:42:28,159 --> 01:42:32,400
in fast path next slide please

2263
01:42:33,040 --> 01:42:36,239
so a similar provisioning model as srpm

2264
01:42:36,239 --> 01:42:40,159
uh defining the which look back mode

2265
01:42:40,159 --> 01:42:43,520
the the what time stem label to use to

2266
01:42:43,520 --> 01:42:47,119
enable the network programming um

2267
01:42:47,119 --> 01:42:50,639
packet format and various thresholds for

2268
01:42:50,639 --> 01:42:56,320
the metrics and next like this so the

2269
01:42:56,320 --> 01:42:58,159
example test packet formats uh

2270
01:42:58,159 --> 01:43:00,560
they are very similar to stamp to take

2271
01:43:00,560 --> 01:43:02,400
advantage of the hardware implementation

2272
01:43:02,400 --> 01:43:05,040
of stamp with the same timestamps

2273
01:43:05,040 --> 01:43:08,239
um and the well-known timestamp offsets

2274
01:43:08,239 --> 01:43:09,600
uh for example

2275
01:43:09,600 --> 01:43:11,440
it's a byte offset 16 for

2276
01:43:11,440 --> 01:43:13,840
unauthenticated and 32 for authenticated

2277
01:43:13,840 --> 01:43:15,119
packets

2278
01:43:15,119 --> 01:43:18,080
and next slide please

2279
01:43:19,119 --> 01:43:21,360
so in case of srm pls there is a

2280
01:43:21,360 --> 01:43:23,119
timestamp label carried

2281
01:43:23,119 --> 01:43:24,960
by the packet that this is what tells

2282
01:43:24,960 --> 01:43:26,960
the reflector to add the timestamp in

2283
01:43:26,960 --> 01:43:27,440
the

2284
01:43:27,440 --> 01:43:32,638
in the this packet next like this

2285
01:43:32,719 --> 01:43:35,199
so this is an example with the timestamp

2286
01:43:35,199 --> 01:43:37,280
label

2287
01:43:37,280 --> 01:43:39,600
uh when the the reflector sees it it

2288
01:43:39,600 --> 01:43:41,520
adds the timestamp two and it forwards

2289
01:43:41,520 --> 01:43:43,440
the packet in fast path which there is

2290
01:43:43,440 --> 01:43:43,760
no

2291
01:43:43,760 --> 01:43:47,679
no package pointed next slide please

2292
01:43:48,480 --> 01:43:51,199
same thing with srv6 uh in this case uh

2293
01:43:51,199 --> 01:43:52,960
there is a endpoint

2294
01:43:52,960 --> 01:43:56,880
behavior defined for the srv6 for this

2295
01:43:56,880 --> 01:43:59,600
next slide please

2296
01:44:01,360 --> 01:44:03,280
so there are various performance metric

2297
01:44:03,280 --> 01:44:05,280
notifications uh there is a liveness

2298
01:44:05,280 --> 01:44:06,320
success uh

2299
01:44:06,320 --> 01:44:08,480
um as soon as the packet comes back uh

2300
01:44:08,480 --> 01:44:09,440
your css

2301
01:44:09,440 --> 01:44:12,239
is up uh when consecutive end number

2302
01:44:12,239 --> 01:44:14,719
packets drop then session is down

2303
01:44:14,719 --> 01:44:16,800
uh there is a synthetic packet loss

2304
01:44:16,800 --> 01:44:18,080
defined when

2305
01:44:18,080 --> 01:44:20,400
x number of packets not received out of

2306
01:44:20,400 --> 01:44:21,520
y

2307
01:44:21,520 --> 01:44:24,960
uh there is a delay matrix notified when

2308
01:44:24,960 --> 01:44:27,520
uh some m number of packets exceed the

2309
01:44:27,520 --> 01:44:28,480
delay

2310
01:44:28,480 --> 01:44:31,119
uh so these are all provisional um

2311
01:44:31,119 --> 01:44:32,480
parameters

2312
01:44:32,480 --> 01:44:36,879
and examples the next slide please

2313
01:44:37,199 --> 01:44:39,119
so welcome your comments and suggestions

2314
01:44:39,119 --> 01:44:40,400
and uh we are

2315
01:44:40,400 --> 01:44:42,480
requesting spring working of adoption

2316
01:44:42,480 --> 01:44:43,920
for this job

2317
01:44:43,920 --> 01:44:47,679
thank you any questions

2318
01:44:47,679 --> 01:44:50,880
for presenter

2319
01:44:50,880 --> 01:44:54,000
for rakesh on this

2320
01:44:55,520 --> 01:44:57,440
not seeing any questions thank you

2321
01:44:57,440 --> 01:44:58,960
rakesh

2322
01:44:58,960 --> 01:45:02,960
discussion on the list krishna are you

2323
01:45:02,960 --> 01:45:05,280
here

2324
01:45:08,239 --> 01:45:09,840
if you're here you need to unmute

2325
01:45:09,840 --> 01:45:12,239
yourself

2326
01:45:12,639 --> 01:45:17,840
i thought i saw you on the list

2327
01:45:18,800 --> 01:45:20,960
comran i guess you'll thank you for

2328
01:45:20,960 --> 01:45:22,719
offering

2329
01:45:22,719 --> 01:45:25,840
to help you can start

2330
01:45:25,840 --> 01:45:28,560
yeah can you guys hear me okay yes we

2331
01:45:28,560 --> 01:45:29,760
can

2332
01:45:29,760 --> 01:45:31,600
okay i think krishna is here and he's

2333
01:45:31,600 --> 01:45:33,280
gonna probably just join

2334
01:45:33,280 --> 01:45:35,440
so he's gonna take over uh some part of

2335
01:45:35,440 --> 01:45:36,719
this so

2336
01:45:36,719 --> 01:45:38,719
in the interest of time i'll start and

2337
01:45:38,719 --> 01:45:40,400
provide a quick context

2338
01:45:40,400 --> 01:45:43,159
uh so this is for uh presentation for

2339
01:45:43,159 --> 01:45:45,199
bgpsrt policy yang

2340
01:45:45,199 --> 01:45:48,000
operational model as you can see the the

2341
01:45:48,000 --> 01:45:50,000
the title is operational model

2342
01:45:50,000 --> 01:45:52,239
uh our goal is to go to configuration as

2343
01:45:52,239 --> 01:45:54,800
well but current revision is

2344
01:45:54,800 --> 01:45:56,719
limited to operation model and i'll

2345
01:45:56,719 --> 01:45:58,080
provide uh provide a reason

2346
01:45:58,080 --> 01:46:01,280
uh in in few minutes so in this model

2347
01:46:01,280 --> 01:46:02,000
basically

2348
01:46:02,000 --> 01:46:04,960
uh these slide sets have actually two

2349
01:46:04,960 --> 01:46:06,400
slides which would have cut and test in

2350
01:46:06,400 --> 01:46:07,040
the wrong set

2351
01:46:07,040 --> 01:46:09,520
so i'll talk to uh mostly verbally and

2352
01:46:09,520 --> 01:46:10,159
then

2353
01:46:10,159 --> 01:46:13,199
ask uh ask jim to go to slide

2354
01:46:13,199 --> 01:46:15,040
five and krishna takes over so let me

2355
01:46:15,040 --> 01:46:16,560
provide you a little bit of context

2356
01:46:16,560 --> 01:46:19,760
so originally we uh we submitted bgpsr

2357
01:46:19,760 --> 01:46:22,480
yank draft uh many ips ago as a single

2358
01:46:22,480 --> 01:46:23,199
draft

2359
01:46:23,199 --> 01:46:25,040
that covered that was like a catch all

2360
01:46:25,040 --> 01:46:26,400
draft that covered

2361
01:46:26,400 --> 01:46:30,239
bgpsr aspect in general bgps rte

2362
01:46:30,239 --> 01:46:33,440
as well as uh sr v6 pgp now

2363
01:46:33,440 --> 01:46:35,600
uh based on some input internal input

2364
01:46:35,600 --> 01:46:37,199
and another input

2365
01:46:37,199 --> 01:46:38,560
we realize that we need to break this

2366
01:46:38,560 --> 01:46:40,719
into multiple document so

2367
01:46:40,719 --> 01:46:42,880
we offshooted three document out of this

2368
01:46:42,880 --> 01:46:44,080
one we called

2369
01:46:44,080 --> 01:46:46,960
spring bgp when we called bgpsr other we

2370
01:46:46,960 --> 01:46:48,239
call bgpsrt

2371
01:46:48,239 --> 01:46:49,760
and the third one in the best of our

2372
01:46:49,760 --> 01:46:51,920
services services so this document

2373
01:46:51,920 --> 01:46:54,880
specific document on the agenda right

2374
01:46:54,880 --> 01:46:56,000
now is idea

2375
01:46:56,000 --> 01:46:59,280
idr bgp srt a yank draft

2376
01:46:59,280 --> 01:47:01,440
so this draft uh you can go to next

2377
01:47:01,440 --> 01:47:03,040
slide

2378
01:47:03,040 --> 01:47:06,239
again so this draft

2379
01:47:06,239 --> 01:47:08,880
heavily depends on two uh you know two

2380
01:47:08,880 --> 01:47:11,119
uh two drops from idea and spring

2381
01:47:11,119 --> 01:47:14,320
uh one is of course bgp srt in idr

2382
01:47:14,320 --> 01:47:17,119
and other is a spring sr policy uh

2383
01:47:17,119 --> 01:47:18,639
architecture draft

2384
01:47:18,639 --> 01:47:20,639
on top of this it's not listed here but

2385
01:47:20,639 --> 01:47:23,440
it also indirectly depends on

2386
01:47:23,440 --> 01:47:26,080
i uh spring segment routing policy yank

2387
01:47:26,080 --> 01:47:26,719
draft

2388
01:47:26,719 --> 01:47:29,520
uh which stops is itself is evolving and

2389
01:47:29,520 --> 01:47:30,639
one you know once

2390
01:47:30,639 --> 01:47:32,239
once it goes to a good shape we will

2391
01:47:32,239 --> 01:47:34,320
align our drought with with uh

2392
01:47:34,320 --> 01:47:38,480
with itf uh spring sr policy top as well

2393
01:47:38,480 --> 01:47:41,280
uh in our draft currently uh we augment

2394
01:47:41,280 --> 01:47:42,639
base bgb model

2395
01:47:42,639 --> 01:47:45,920
and draft is nmda compatible uh

2396
01:47:45,920 --> 01:47:48,159
as just to remind again it's right now

2397
01:47:48,159 --> 01:47:49,679
state only but we will add the

2398
01:47:49,679 --> 01:47:50,400
provisioning

2399
01:47:50,400 --> 01:47:54,000
in the later revisions uh and

2400
01:47:54,000 --> 01:47:56,560
and with that i think i'll let krishna

2401
01:47:56,560 --> 01:47:57,360
take over

2402
01:47:57,360 --> 01:48:00,880
and you can go to slide slide five

2403
01:48:00,880 --> 01:48:02,320
what we are covering in this draft is

2404
01:48:02,320 --> 01:48:04,000
actually two things uh before i hand

2405
01:48:04,000 --> 01:48:05,040
over to krishna

2406
01:48:05,040 --> 01:48:08,080
one is bgp signal sr policy aspect

2407
01:48:08,080 --> 01:48:10,480
and other aspect is the optical steering

2408
01:48:10,480 --> 01:48:12,239
and with that i'll let krishna take your

2409
01:48:12,239 --> 01:48:14,000
uh sites onward

2410
01:48:14,000 --> 01:48:16,400
okay thanks cameron uh can you can you

2411
01:48:16,400 --> 01:48:17,040
hear me

2412
01:48:17,040 --> 01:48:19,440
uh everyone yes we can hear you yeah

2413
01:48:19,440 --> 01:48:21,440
okay sorry i was on mute earlier

2414
01:48:21,440 --> 01:48:23,840
okay thanks cameron so i'll take over

2415
01:48:23,840 --> 01:48:24,480
from here

2416
01:48:24,480 --> 01:48:27,600
so uh this draft is primarily

2417
01:48:27,600 --> 01:48:32,960
um defining the ang modeling for

2418
01:48:32,960 --> 01:48:36,159
for the sr policy uh

2419
01:48:36,159 --> 01:48:38,400
dynamic sr policy that's on demand next

2420
01:48:38,400 --> 01:48:39,920
top sr policy

2421
01:48:39,920 --> 01:48:43,040
and the static sr policy so in the

2422
01:48:43,040 --> 01:48:45,600
dynamic sr policy there is a

2423
01:48:45,600 --> 01:48:49,280
template which defines

2424
01:48:49,280 --> 01:48:51,199
what are the authorized colors and what

2425
01:48:51,199 --> 01:48:53,360
is the color associated with it

2426
01:48:53,360 --> 01:48:57,360
and based on which

2427
01:48:57,360 --> 01:49:00,480
bgp can initiate a a

2428
01:49:00,480 --> 01:49:03,520
sr policy and use that as a forwarding

2429
01:49:03,520 --> 01:49:04,880
path when programming

2430
01:49:04,880 --> 01:49:08,400
the route into the field so the

2431
01:49:08,400 --> 01:49:11,760
the relevant configurations required

2432
01:49:11,760 --> 01:49:14,080
for this creating a top layer a template

2433
01:49:14,080 --> 01:49:14,960
or

2434
01:49:14,960 --> 01:49:17,679
the that's the end modeling for that is

2435
01:49:17,679 --> 01:49:18,239
defined

2436
01:49:18,239 --> 01:49:21,520
in this draft which is uh the on

2437
01:49:21,520 --> 01:49:24,480
the authorized color what is the color

2438
01:49:24,480 --> 01:49:25,199
value

2439
01:49:25,199 --> 01:49:29,119
it's an unsigning 32 value

2440
01:49:29,119 --> 01:49:31,280
and the policy state when that policy

2441
01:49:31,280 --> 01:49:32,560
gets created

2442
01:49:32,560 --> 01:49:34,719
the state the policy would have a state

2443
01:49:34,719 --> 01:49:35,920
where

2444
01:49:35,920 --> 01:49:38,560
the policy is associated with an ip

2445
01:49:38,560 --> 01:49:39,280
address

2446
01:49:39,280 --> 01:49:42,800
that is the end point

2447
01:49:42,800 --> 01:49:46,239
uh the policy state and the binding seal

2448
01:49:46,239 --> 01:49:48,320
associated with that policy

2449
01:49:48,320 --> 01:49:50,480
and whether the steering is enabled

2450
01:49:50,480 --> 01:49:51,679
disabled and

2451
01:49:51,679 --> 01:49:53,360
any left counts associated with the

2452
01:49:53,360 --> 01:49:54,960
policy

2453
01:49:54,960 --> 01:49:58,080
we can move to the next slide

2454
01:49:59,840 --> 01:50:03,040
so uh when uh in

2455
01:50:03,040 --> 01:50:05,040
when the bgp initiates this as our

2456
01:50:05,040 --> 01:50:06,159
policy uh

2457
01:50:06,159 --> 01:50:09,360
we pgp associates uh

2458
01:50:09,360 --> 01:50:12,480
that policy with the routing path for

2459
01:50:12,480 --> 01:50:13,440
the bgp

2460
01:50:13,440 --> 01:50:18,480
route path and the existing bgp

2461
01:50:18,480 --> 01:50:21,840
route path will be enhanced or augmented

2462
01:50:21,840 --> 01:50:24,880
with additional information in addition

2463
01:50:24,880 --> 01:50:25,920
to the

2464
01:50:25,920 --> 01:50:28,880
the existing bgp out path information

2465
01:50:28,880 --> 01:50:30,000
like the next hop

2466
01:50:30,000 --> 01:50:32,000
and others a new information of

2467
01:50:32,000 --> 01:50:33,199
information would be

2468
01:50:33,199 --> 01:50:35,760
associated with the bgp route path that

2469
01:50:35,760 --> 01:50:36,639
would be

2470
01:50:36,639 --> 01:50:39,760
the associated color the

2471
01:50:39,760 --> 01:50:42,239
associated binding seed with the trout

2472
01:50:42,239 --> 01:50:43,360
path and

2473
01:50:43,360 --> 01:50:46,400
this particular draft defines the ang

2474
01:50:46,400 --> 01:50:47,199
modeling for

2475
01:50:47,199 --> 01:50:49,599
the for this additional information that

2476
01:50:49,599 --> 01:50:51,840
becomes part of the routing bgp routing

2477
01:50:51,840 --> 01:50:53,360
path

2478
01:50:53,360 --> 01:50:57,199
once the sr policies is defined for the

2479
01:50:57,199 --> 01:50:58,719
bgp

2480
01:50:58,719 --> 01:51:03,280
so as part of this and we'll have

2481
01:51:03,360 --> 01:51:06,400
rank modeling to enhance the bgp route

2482
01:51:06,400 --> 01:51:09,679
path with and the color

2483
01:51:09,679 --> 01:51:13,040
end point binding shade and

2484
01:51:13,040 --> 01:51:14,960
those would be defined in the hang

2485
01:51:14,960 --> 01:51:18,800
modeling you can move to the next slide

2486
01:51:19,440 --> 01:51:21,920
that was the on-demand next hop and

2487
01:51:21,920 --> 01:51:22,880
modeling for that

2488
01:51:22,880 --> 01:51:27,840
and the two the two types of sr per the

2489
01:51:28,239 --> 01:51:30,080
there's our policies one is the dynamic

2490
01:51:30,080 --> 01:51:31,760
on demand next top which we just

2491
01:51:31,760 --> 01:51:33,520
went over and the other one is a static

2492
01:51:33,520 --> 01:51:36,000
as our policy so this particular

2493
01:51:36,000 --> 01:51:37,920
slide is talking about and modeling for

2494
01:51:37,920 --> 01:51:40,480
the static customer policy which is

2495
01:51:40,480 --> 01:51:43,440
uh the bgp pushed sr policies from

2496
01:51:43,440 --> 01:51:45,280
controller into the

2497
01:51:45,280 --> 01:51:47,040
into the bgp through a bgp address

2498
01:51:47,040 --> 01:51:49,520
family so

2499
01:51:49,520 --> 01:51:52,400
in this case bgp would be the one which

2500
01:51:52,400 --> 01:51:53,440
is pushing the

2501
01:51:53,440 --> 01:51:56,239
policies in from the control from the

2502
01:51:56,239 --> 01:51:57,599
controller into the

2503
01:51:57,599 --> 01:52:01,199
bgp router and the

2504
01:52:01,199 --> 01:52:03,679
the uh these are this particular slide

2505
01:52:03,679 --> 01:52:05,760
talks about the information

2506
01:52:05,760 --> 01:52:08,080
that's the poll and the part of the sr

2507
01:52:08,080 --> 01:52:08,960
policy that's

2508
01:52:08,960 --> 01:52:11,599
pushed into the bgp as part of the

2509
01:52:11,599 --> 01:52:13,199
static sr policy

2510
01:52:13,199 --> 01:52:17,119
and the information that's pushed in

2511
01:52:17,119 --> 01:52:19,760
into the policy are the distinguisher

2512
01:52:19,760 --> 01:52:20,480
the color

2513
01:52:20,480 --> 01:52:23,280
endpoint preference so all the required

2514
01:52:23,280 --> 01:52:25,119
information is being

2515
01:52:25,119 --> 01:52:26,719
defined the hand modeling has been

2516
01:52:26,719 --> 01:52:28,400
defined in this

2517
01:52:28,400 --> 01:52:30,320
in the draft and they have been detailed

2518
01:52:30,320 --> 01:52:31,920
in this slide

2519
01:52:31,920 --> 01:52:35,040
you can move to the next slide

2520
01:52:35,840 --> 01:52:37,520
uh this is a continuation of the slide

2521
01:52:37,520 --> 01:52:39,599
where the um

2522
01:52:39,599 --> 01:52:42,639
the sr policy uh since it's a

2523
01:52:42,639 --> 01:52:44,719
is a controller push tesla policy into

2524
01:52:44,719 --> 01:52:47,199
bgp so controller itself gives all the

2525
01:52:47,199 --> 01:52:48,320
required

2526
01:52:48,320 --> 01:52:51,440
uh segment information that is mpls

2527
01:52:51,440 --> 01:52:53,520
labels or the srv seats

2528
01:52:53,520 --> 01:52:57,920
which for which form the forwarding path

2529
01:52:57,920 --> 01:52:58,719
and

2530
01:52:58,719 --> 01:53:01,119
so that information is being defined as

2531
01:53:01,119 --> 01:53:01,920
part of

2532
01:53:01,920 --> 01:53:03,679
this draft and their detail in this

2533
01:53:03,679 --> 01:53:04,960
slide

2534
01:53:04,960 --> 01:53:08,080
we can go to the next slide

2535
01:53:09,440 --> 01:53:13,119
yeah so since the uh

2536
01:53:13,119 --> 01:53:16,400
the forwarding part when

2537
01:53:16,400 --> 01:53:18,880
the sr forwarding part could be either

2538
01:53:18,880 --> 01:53:20,880
mpls or srv6 or

2539
01:53:20,880 --> 01:53:24,239
ipv4 nodes itself so this particular

2540
01:53:24,239 --> 01:53:26,800
draft defines all the required all the

2541
01:53:26,800 --> 01:53:27,920
relevant

2542
01:53:27,920 --> 01:53:30,000
uh segment types and this is the

2543
01:53:30,000 --> 01:53:31,840
continuation of the earliest slide so we

2544
01:53:31,840 --> 01:53:32,239
can

2545
01:53:32,239 --> 01:53:35,598
we can move to the next slide

2546
01:53:36,320 --> 01:53:38,719
yeah so this is also confirmation of the

2547
01:53:38,719 --> 01:53:40,320
alias slide we can move to the next

2548
01:53:40,320 --> 01:53:42,639
slide

2549
01:53:43,199 --> 01:53:44,719
i think that's pretty much it as part of

2550
01:53:44,719 --> 01:53:46,480
this draft and

2551
01:53:46,480 --> 01:53:49,599
we have few modifications to do so we

2552
01:53:49,599 --> 01:53:50,719
are not yet

2553
01:53:50,719 --> 01:53:54,080
actually asking for adoption

2554
01:53:54,080 --> 01:53:57,199
we are we want inputs and feedback from

2555
01:53:57,199 --> 01:54:00,719
from the uh readers or the on the call

2556
01:54:00,719 --> 01:54:05,119
thank you so much thank you krishna

2557
01:54:05,119 --> 01:54:08,880
any questions for krishna or cameron

2558
01:54:08,880 --> 01:54:11,520
on the yang model operational material

2559
01:54:11,520 --> 01:54:14,560
they just presented

2560
01:54:14,639 --> 01:54:16,639
obviously we will there's a whole series

2561
01:54:16,639 --> 01:54:18,480
of steps we'll go through there refining

2562
01:54:18,480 --> 01:54:19,119
it

2563
01:54:19,119 --> 01:54:21,040
we'll go through adoption we'll need

2564
01:54:21,040 --> 01:54:23,119
yang doctors review all of the usual

2565
01:54:23,119 --> 01:54:24,719
things but

2566
01:54:24,719 --> 01:54:26,960
just for now any ques i hear no

2567
01:54:26,960 --> 01:54:28,480
questions or comments

2568
01:54:28,480 --> 01:54:31,599
okay we have six minutes left so i'll

2569
01:54:31,599 --> 01:54:33,360
throw the floor open

2570
01:54:33,360 --> 01:54:37,839
if there are any

2571
01:54:40,080 --> 01:54:42,880
does anybody have any uh questions or

2572
01:54:42,880 --> 01:54:43,840
comments

2573
01:54:43,840 --> 01:54:46,880
about any aspects of today's session if

2574
01:54:46,880 --> 01:54:48,880
not i'll give you five minutes of your

2575
01:54:48,880 --> 01:54:51,840
day back

2576
01:54:54,480 --> 01:54:58,239
not seeing any hands on the queue

2577
01:54:58,239 --> 01:55:01,119
so thank you folks for your time we'll

2578
01:55:01,119 --> 01:55:02,400
see you on thursday

2579
01:55:02,400 --> 01:55:06,639
same time say equivalent channel

2580
01:55:06,639 --> 01:55:09,119
thank you

2581
01:55:09,840 --> 01:55:19,040
thank you

