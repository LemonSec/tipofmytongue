1
00:00:32,479 --> 00:00:33,760
can't hear you

2
00:00:33,760 --> 00:00:45,839
richard i at least don't hear your audio

3
00:00:52,480 --> 00:00:54,320
how about now that looks better see

4
00:00:54,320 --> 00:00:55,920
little audio level indicators

5
00:00:55,920 --> 00:00:59,840
audible for folks

6
00:01:10,840 --> 00:01:13,840
yes

7
00:01:33,119 --> 00:01:35,680
good afternoon or good morning richard

8
00:01:35,680 --> 00:01:38,479
just wanted a sound check so

9
00:01:38,479 --> 00:01:40,159
good morning good afternoon i think

10
00:01:40,159 --> 00:01:41,520
morning from well

11
00:01:41,520 --> 00:01:43,600
at least for everyone in the u.s can you

12
00:01:43,600 --> 00:01:46,479
hear me richard or no

13
00:01:51,759 --> 00:01:55,280
i can hear you kathleen

14
00:01:55,280 --> 00:01:57,680
thank you

15
00:02:00,320 --> 00:02:02,000
all right well maybe we switch how we're

16
00:02:02,000 --> 00:02:09,840
gonna run this

17
00:02:11,280 --> 00:02:14,160
yeah i guess we can get started and when

18
00:02:14,160 --> 00:02:15,360
richard

19
00:02:15,360 --> 00:02:17,760
manages to solve his problems with the

20
00:02:17,760 --> 00:02:18,800
audio we can

21
00:02:18,800 --> 00:02:23,840
uh let him take the reins

22
00:02:23,920 --> 00:02:26,400
oh okay one more blessed with the

23
00:02:26,400 --> 00:02:28,160
cameras

24
00:02:28,160 --> 00:02:30,959
this time could you say something so i

25
00:02:30,959 --> 00:02:32,400
can confirm that

26
00:02:32,400 --> 00:02:36,480
check mic check wow i think my audio is

27
00:02:36,480 --> 00:02:37,120
working in

28
00:02:37,120 --> 00:02:39,920
um whatever not full duplex is half

29
00:02:39,920 --> 00:02:40,560
duplex

30
00:02:40,560 --> 00:02:43,519
i can only listen when i'm not speaking

31
00:02:43,519 --> 00:02:44,800
anyhow

32
00:02:44,800 --> 00:02:46,400
yeah if you could i get the session

33
00:02:46,400 --> 00:02:47,680
started i'll continue to fiddle with

34
00:02:47,680 --> 00:02:49,599
this and see if i can get it patched up

35
00:02:49,599 --> 00:02:52,400
no worries so yeah as i was saying uh

36
00:02:52,400 --> 00:02:54,560
new chair so hello everyone uh

37
00:02:54,560 --> 00:02:56,720
let's you know let richard's always

38
00:02:56,720 --> 00:02:59,280
problems we can stop the session

39
00:02:59,280 --> 00:03:02,080
so this is sec dispatch uh next slide

40
00:03:02,080 --> 00:03:03,040
i'm sure

41
00:03:03,040 --> 00:03:04,800
by thursday you're familiar with the

42
00:03:04,800 --> 00:03:07,519
note well but if you're not

43
00:03:07,519 --> 00:03:11,040
please read through this uh let's give

44
00:03:11,040 --> 00:03:11,840
it a minute

45
00:03:11,840 --> 00:03:14,560
uh hopefully you're familiar with all

46
00:03:14,560 --> 00:03:15,280
this

47
00:03:15,280 --> 00:03:19,840
by now

48
00:03:20,000 --> 00:03:22,480
okay yeah so this is online meeting and

49
00:03:22,480 --> 00:03:24,159
you are you are being recorded

50
00:03:24,159 --> 00:03:27,680
this will show up on youtube later so uh

51
00:03:27,680 --> 00:03:33,840
hope that's fine with you uh next slide

52
00:03:35,040 --> 00:03:37,519
so here here are some relevant links so

53
00:03:37,519 --> 00:03:39,760
hopefully hopefully

54
00:03:39,760 --> 00:03:42,239
you are joined into the meeting with

55
00:03:42,239 --> 00:03:45,599
meet echo we are taking notes in kodi md

56
00:03:45,599 --> 00:03:48,959
the slides are posted in data tracker

57
00:03:48,959 --> 00:03:50,640
and this working group is about

58
00:03:50,640 --> 00:03:52,319
dispatching items and

59
00:03:52,319 --> 00:03:55,200
not really adopting drafts so when you

60
00:03:55,200 --> 00:03:56,799
do give feedback

61
00:03:56,799 --> 00:04:00,080
try to also give feedback on on the fact

62
00:04:00,080 --> 00:04:02,080
how to dispatch this work item whether

63
00:04:02,080 --> 00:04:04,080
it should be adopted or whether there

64
00:04:04,080 --> 00:04:06,000
should be a new working group

65
00:04:06,000 --> 00:04:15,840
and so on next slide

66
00:04:15,920 --> 00:04:18,160
yeah i i guess this slide kind of

67
00:04:18,160 --> 00:04:19,759
emphasizes that so

68
00:04:19,759 --> 00:04:23,040
uh it recommends the next steps and does

69
00:04:23,040 --> 00:04:24,560
not adopt drafts so

70
00:04:24,560 --> 00:04:26,720
there are several possibilities it can

71
00:04:26,720 --> 00:04:28,560
go to some existing working group or

72
00:04:28,560 --> 00:04:30,240
start a new working group or then you

73
00:04:30,240 --> 00:04:32,479
can untwist the ids into

74
00:04:32,479 --> 00:04:34,880
sponsoring documents if you feel that's

75
00:04:34,880 --> 00:04:35,919
the appropriate

76
00:04:35,919 --> 00:04:39,919
step and there's always the possibility

77
00:04:39,919 --> 00:04:41,600
where you think that ietf should not

78
00:04:41,600 --> 00:04:42,240
work on

79
00:04:42,240 --> 00:04:44,080
on this topic because it is completely

80
00:04:44,080 --> 00:04:45,759
out of scope

81
00:04:45,759 --> 00:04:49,120
uh all right next slide

82
00:04:51,120 --> 00:04:54,000
oh uh thanks to francesca who has

83
00:04:54,000 --> 00:04:55,360
prepared this so

84
00:04:55,360 --> 00:04:57,280
hopefully you're familiar with these

85
00:04:57,280 --> 00:04:58,880
buttons by now but

86
00:04:58,880 --> 00:05:02,960
if not you know this hand is to join the

87
00:05:02,960 --> 00:05:05,360
queue and you can unmute yourself

88
00:05:05,360 --> 00:05:07,440
and show your video and hopefully you

89
00:05:07,440 --> 00:05:09,360
won't need to share your screen

90
00:05:09,360 --> 00:05:12,800
but we might run some polls later so

91
00:05:12,800 --> 00:05:14,320
hopefully you know how to raise your

92
00:05:14,320 --> 00:05:17,520
hands by now

93
00:05:17,520 --> 00:05:21,520
next slide so this is our agenda

94
00:05:21,520 --> 00:05:24,479
uh i guess we are still on on time with

95
00:05:24,479 --> 00:05:26,320
the administrative is still 10 minutes

96
00:05:26,320 --> 00:05:27,759
does anyone want to bash

97
00:05:27,759 --> 00:05:30,639
the agenda is there some new items that

98
00:05:30,639 --> 00:05:39,840
should be there

99
00:05:40,479 --> 00:05:43,680
francesco thank you yeah i just wanted

100
00:05:43,680 --> 00:05:44,560
to say that

101
00:05:44,560 --> 00:05:47,280
yeah just highlight uh the fact that

102
00:05:47,280 --> 00:05:48,479
this is my last

103
00:05:48,479 --> 00:05:51,919
uh meeting as satisfactor so i want to

104
00:05:51,919 --> 00:05:52,400
thank

105
00:05:52,400 --> 00:05:55,680
everybody um and i want to thank mohit

106
00:05:55,680 --> 00:05:57,520
for coming in and taking

107
00:05:57,520 --> 00:05:59,280
the the job and i'm sure he will do

108
00:05:59,280 --> 00:06:00,960
great i don't know if

109
00:06:00,960 --> 00:06:04,479
if our ads want to say something

110
00:06:04,479 --> 00:06:06,479
francesca you jumped the gun there i i

111
00:06:06,479 --> 00:06:07,600
was going to wait until

112
00:06:07,600 --> 00:06:11,039
uh finish the chair slides

113
00:06:11,039 --> 00:06:13,199
thank you for your service as a sec

114
00:06:13,199 --> 00:06:14,960
dispatch co-chair and welcome

115
00:06:14,960 --> 00:06:17,759
moget to the to the crowd um we are a

116
00:06:17,759 --> 00:06:19,360
bit unique at the moment and having

117
00:06:19,360 --> 00:06:21,840
four co-chairs as an ad pointed out to

118
00:06:21,840 --> 00:06:23,120
be impact channel

119
00:06:23,120 --> 00:06:25,440
um i promise we are going to be reducing

120
00:06:25,440 --> 00:06:26,560
that number imminently

121
00:06:26,560 --> 00:06:29,120
um but i think we're tremendously

122
00:06:29,120 --> 00:06:30,720
thankful to francesca for

123
00:06:30,720 --> 00:06:33,520
um for your help here and looking

124
00:06:33,520 --> 00:06:34,800
forward to having working with movie

125
00:06:34,800 --> 00:06:37,280
going forward

126
00:06:37,360 --> 00:06:39,600
i also want to thank francesca too she

127
00:06:39,600 --> 00:06:41,680
did a lot of the heavy lifting for

128
00:06:41,680 --> 00:06:43,840
uh for us for the last few meetings it's

129
00:06:43,840 --> 00:06:45,919
really very much appreciated

130
00:06:45,919 --> 00:06:48,319
and uh wish you the best of luck as you

131
00:06:48,319 --> 00:06:50,759
become an ad

132
00:06:50,759 --> 00:06:54,560
congratulations likewise i wanted to

133
00:06:54,560 --> 00:06:55,199
repeat that

134
00:06:55,199 --> 00:06:56,960
francesca you know thank you for all

135
00:06:56,960 --> 00:06:58,639
your help with sex dispatch and i look

136
00:06:58,639 --> 00:06:59,280
forward to

137
00:06:59,280 --> 00:07:01,680
being with you on the isg and uh welcome

138
00:07:01,680 --> 00:07:03,280
to mohit thank you so much for kind of

139
00:07:03,280 --> 00:07:04,240
stepping up for

140
00:07:04,240 --> 00:07:08,319
one of our more diverse working groups

141
00:07:08,400 --> 00:07:10,319
oh and i guess i have to warn you that

142
00:07:10,319 --> 00:07:12,080
uh being appointed to the iesg is

143
00:07:12,080 --> 00:07:12,800
apparently

144
00:07:12,800 --> 00:07:15,520
an occupational hazard of being sick

145
00:07:15,520 --> 00:07:16,960
dispatch co-chair so i

146
00:07:16,960 --> 00:07:18,080
look forward to your standing for that

147
00:07:18,080 --> 00:07:20,719
next time around

148
00:07:20,960 --> 00:07:23,680
well uh i have big shoes to fill uh so

149
00:07:23,680 --> 00:07:25,440
thank you francesca as you can see

150
00:07:25,440 --> 00:07:27,280
she still prepared the slides and she's

151
00:07:27,280 --> 00:07:28,960
still sharing the

152
00:07:28,960 --> 00:07:32,240
slides from her her laptop so

153
00:07:32,240 --> 00:07:33,759
yeah she has been doing a lot of the

154
00:07:33,759 --> 00:07:35,680
heavy lifting even for this meeting so

155
00:07:35,680 --> 00:07:37,120
thanks a lot and uh

156
00:07:37,120 --> 00:07:40,720
good luck with the isg

157
00:07:40,720 --> 00:07:43,599
thank you thank you richard uh you can

158
00:07:43,599 --> 00:07:44,960
take the reins so

159
00:07:44,960 --> 00:07:48,240
i'll stay quiet all right i think we're

160
00:07:48,240 --> 00:07:49,280
uh

161
00:07:49,280 --> 00:07:50,879
starting into our agenda now is i think

162
00:07:50,879 --> 00:07:52,240
this is the last of the chair slides

163
00:07:52,240 --> 00:07:54,800
there one more of these

164
00:07:54,800 --> 00:07:57,599
i think this is less i think my only job

165
00:07:57,599 --> 00:08:00,878
here is to hand it over to martin

166
00:08:02,879 --> 00:08:05,120
you want to state the rules of of how we

167
00:08:05,120 --> 00:08:06,479
run through oh

168
00:08:06,479 --> 00:08:08,960
all right did we sorry i'd forgotten do

169
00:08:08,960 --> 00:08:09,520
we have that

170
00:08:09,520 --> 00:08:11,199
uh in the remainder just a reminder

171
00:08:11,199 --> 00:08:13,280
folks that this is dispatch this is not

172
00:08:13,280 --> 00:08:15,280
a working working group

173
00:08:15,280 --> 00:08:17,280
and so we are focused on those dispatch

174
00:08:17,280 --> 00:08:18,720
outcomes what should we do with this

175
00:08:18,720 --> 00:08:19,520
work

176
00:08:19,520 --> 00:08:22,319
should we send it to an existing working

177
00:08:22,319 --> 00:08:22,800
group

178
00:08:22,800 --> 00:08:25,520
start up another working group recommend

179
00:08:25,520 --> 00:08:27,199
to the ads they d sponsor it

180
00:08:27,199 --> 00:08:29,520
or tell it to go away we're not gonna do

181
00:08:29,520 --> 00:08:30,879
any work on this so

182
00:08:30,879 --> 00:08:31,840
as you're listening to these

183
00:08:31,840 --> 00:08:33,599
presentations uh please keep those

184
00:08:33,599 --> 00:08:34,719
outcomes in mind because that's the

185
00:08:34,719 --> 00:08:36,320
discussion we're gonna have

186
00:08:36,320 --> 00:08:39,120
uh when the presentations are done and

187
00:08:39,120 --> 00:08:40,880
try and come to a conclusion as to what

188
00:08:40,880 --> 00:08:42,799
we should do with this work

189
00:08:42,799 --> 00:08:45,760
so with that martin please take it on

190
00:08:45,760 --> 00:08:47,040
thanks richard

191
00:08:47,040 --> 00:08:49,680
um so yes i will give an overview of

192
00:08:49,680 --> 00:08:50,640
what this is

193
00:08:50,640 --> 00:08:52,399
i think there's been a bit of discussion

194
00:08:52,399 --> 00:08:54,720
about that and some some confusion

195
00:08:54,720 --> 00:08:56,480
uh we do have an updated version of the

196
00:08:56,480 --> 00:08:58,080
draft i i think

197
00:08:58,080 --> 00:08:59,519
that has addressed some of those things

198
00:08:59,519 --> 00:09:01,680
since uh the discussion but

199
00:09:01,680 --> 00:09:03,120
i'll make sure that everyone understands

200
00:09:03,120 --> 00:09:04,160
the same thing can we go to the next

201
00:09:04,160 --> 00:09:08,080
slide please

202
00:09:08,080 --> 00:09:11,360
right so um what this is is

203
00:09:11,360 --> 00:09:14,480
uh oh i use system and method here uh

204
00:09:14,480 --> 00:09:17,920
for making unlinkable http requests

205
00:09:17,920 --> 00:09:19,440
and one of the things we're trying to

206
00:09:19,440 --> 00:09:23,040
get to is um

207
00:09:23,040 --> 00:09:26,240
a system whereby uh servers that gather

208
00:09:26,240 --> 00:09:27,839
information about requests aren't able

209
00:09:27,839 --> 00:09:28,399
to do

210
00:09:28,399 --> 00:09:31,120
things to build profiles of the people

211
00:09:31,120 --> 00:09:32,880
making those requests

212
00:09:32,880 --> 00:09:36,800
and use that for reasons

213
00:09:36,800 --> 00:09:39,920
um so there's two parts to this uh

214
00:09:39,920 --> 00:09:42,959
we have a proxy that hides all of the

215
00:09:42,959 --> 00:09:44,080
source addressing and

216
00:09:44,080 --> 00:09:46,560
the the request information that we

217
00:09:46,560 --> 00:09:48,720
don't want the server to see

218
00:09:48,720 --> 00:09:51,600
and an additional layer of encryption to

219
00:09:51,600 --> 00:09:53,200
ensure that that proxy doesn't get to

220
00:09:53,200 --> 00:09:53,920
see

221
00:09:53,920 --> 00:09:56,000
the contents of requests and responses

222
00:09:56,000 --> 00:09:57,519
which kind of

223
00:09:57,519 --> 00:09:59,680
most sensitive information that uh that

224
00:09:59,680 --> 00:10:00,560
there is

225
00:10:00,560 --> 00:10:03,600
so it's all about it uh

226
00:10:03,600 --> 00:10:06,560
information separation a simple mixnet

227
00:10:06,560 --> 00:10:09,199
next please

228
00:10:12,160 --> 00:10:15,279
so how this works uh it's pretty simple

229
00:10:15,279 --> 00:10:17,440
uh the server publishes an hpk

230
00:10:17,440 --> 00:10:19,120
configuration

231
00:10:19,120 --> 00:10:20,720
the client makes a fresh context for

232
00:10:20,720 --> 00:10:23,440
every request encapsulates it sends it

233
00:10:23,440 --> 00:10:24,399
via the proxy

234
00:10:24,399 --> 00:10:28,880
the server unbundles that information

235
00:10:28,880 --> 00:10:31,600
gets the request and processes it uh

236
00:10:31,600 --> 00:10:33,360
encapsulates a response

237
00:10:33,360 --> 00:10:36,399
using the context and um some

238
00:10:36,399 --> 00:10:38,240
does some computations based on the

239
00:10:38,240 --> 00:10:40,160
context and we have to use hpk

240
00:10:40,160 --> 00:10:43,120
exporters to get the keying material but

241
00:10:43,120 --> 00:10:43,440
the

242
00:10:43,440 --> 00:10:44,959
the response is encapsulated and sent

243
00:10:44,959 --> 00:10:46,880
back via the proxy the

244
00:10:46,880 --> 00:10:49,440
client can then remove that extra layer

245
00:10:49,440 --> 00:10:52,480
of protection to get its response

246
00:10:52,480 --> 00:10:56,399
in and out next slide please

247
00:10:58,320 --> 00:11:01,519
so uh why you would want to do this

248
00:11:01,519 --> 00:11:04,320
so there are a lot of contexts in which

249
00:11:04,320 --> 00:11:04,880
there's

250
00:11:04,880 --> 00:11:08,480
uh information contained in requests

251
00:11:08,480 --> 00:11:11,600
that if linked together in a in a series

252
00:11:11,600 --> 00:11:12,720
might provide the server with

253
00:11:12,720 --> 00:11:14,640
information that

254
00:11:14,640 --> 00:11:17,760
maybe clients don't want them to have a

255
00:11:17,760 --> 00:11:19,760
big discussion that we've had

256
00:11:19,760 --> 00:11:22,800
in the dns groups

257
00:11:22,800 --> 00:11:25,600
has been about oblivious dns and

258
00:11:25,600 --> 00:11:26,480
obviously

259
00:11:26,480 --> 00:11:29,360
the name here is a nod to the original

260
00:11:29,360 --> 00:11:31,200
name that was given to the oblivious dns

261
00:11:31,200 --> 00:11:32,000
system

262
00:11:32,000 --> 00:11:36,079
uh this is largely based on that work

263
00:11:36,079 --> 00:11:40,560
the main use case here that we imagine

264
00:11:40,560 --> 00:11:42,160
would be something where we make dns

265
00:11:42,160 --> 00:11:44,880
queries using something like do

266
00:11:44,880 --> 00:11:47,200
and you can use this to encapsulate

267
00:11:47,200 --> 00:11:48,399
those queries

268
00:11:48,399 --> 00:11:51,200
and protect the sequence of queries that

269
00:11:51,200 --> 00:11:52,079
you make

270
00:11:52,079 --> 00:11:55,440
and telemetry queries and what's unique

271
00:11:55,440 --> 00:11:56,399
about these ones

272
00:11:56,399 --> 00:11:58,160
uh sorry i should expand i know in

273
00:11:58,160 --> 00:11:59,839
telemetry submission for for something

274
00:11:59,839 --> 00:12:00,560
like this

275
00:12:00,560 --> 00:12:04,000
we maintain in in firefox

276
00:12:04,000 --> 00:12:06,959
uh a telemetry system where we would

277
00:12:06,959 --> 00:12:08,399
like to know information about what

278
00:12:08,399 --> 00:12:09,920
people's clients are doing but we don't

279
00:12:09,920 --> 00:12:11,600
really want to connect that information

280
00:12:11,600 --> 00:12:12,079
with

281
00:12:12,079 --> 00:12:15,680
the people there's nothing um

282
00:12:15,680 --> 00:12:17,760
nothing really that we gain from having

283
00:12:17,760 --> 00:12:19,040
that except for

284
00:12:19,040 --> 00:12:21,200
access to what is essentially toxic

285
00:12:21,200 --> 00:12:22,320
information so

286
00:12:22,320 --> 00:12:23,440
we've been looking to do things like

287
00:12:23,440 --> 00:12:25,839
that for telemetry and what's also

288
00:12:25,839 --> 00:12:27,120
unique about these

289
00:12:27,120 --> 00:12:30,399
is that uh there is no real need to

290
00:12:30,399 --> 00:12:32,160
carry information from one request to

291
00:12:32,160 --> 00:12:32,800
the next

292
00:12:32,800 --> 00:12:37,040
in series there is value however in

293
00:12:37,040 --> 00:12:40,079
breaking them into discrete units

294
00:12:40,079 --> 00:12:42,320
the advantages of something like this is

295
00:12:42,320 --> 00:12:43,519
that it has less

296
00:12:43,519 --> 00:12:44,880
overhead than some of the alternatives

297
00:12:44,880 --> 00:12:46,720
that we have available to us

298
00:12:46,720 --> 00:12:50,000
so um if we look at doing regular http

299
00:12:50,000 --> 00:12:50,560
proxy

300
00:12:50,560 --> 00:12:53,200
there's no protocol changes in order to

301
00:12:53,200 --> 00:12:55,279
get something like that working

302
00:12:55,279 --> 00:12:56,639
but it requires that you make a new

303
00:12:56,639 --> 00:12:58,399
connection for every single request by

304
00:12:58,399 --> 00:12:59,680
the proxy so you have a connection to

305
00:12:59,680 --> 00:13:00,639
the proxy

306
00:13:00,639 --> 00:13:02,639
and then you make a new request for

307
00:13:02,639 --> 00:13:04,000
every

308
00:13:04,000 --> 00:13:05,600
new connection for every request to the

309
00:13:05,600 --> 00:13:07,279
server that you make that has a lot of

310
00:13:07,279 --> 00:13:08,000
overhead

311
00:13:08,000 --> 00:13:11,440
and round trips in particular

312
00:13:12,399 --> 00:13:16,079
tor again is much more stronger stronger

313
00:13:16,079 --> 00:13:18,480
you can do that same sort of thing as

314
00:13:18,480 --> 00:13:20,720
with a proxy except that now you've got

315
00:13:20,720 --> 00:13:23,120
the the full multi-layer mix net

316
00:13:23,120 --> 00:13:24,160
involved

317
00:13:24,160 --> 00:13:26,880
um and that's much much higher overheads

318
00:13:26,880 --> 00:13:28,959
in terms of latency

319
00:13:28,959 --> 00:13:31,760
and also cryptographic and whatnot and

320
00:13:31,760 --> 00:13:32,959
then there's

321
00:13:32,959 --> 00:13:34,720
systems like preo which work for

322
00:13:34,720 --> 00:13:36,399
telemetry submissions

323
00:13:36,399 --> 00:13:40,560
where you can make

324
00:13:40,639 --> 00:13:43,760
information about the uh what's going on

325
00:13:43,760 --> 00:13:44,800
available to

326
00:13:44,800 --> 00:13:48,079
to people in an aggregated fashion but

327
00:13:48,079 --> 00:13:51,279
you can don't get any um

328
00:13:51,279 --> 00:13:54,560
responsiveness and things like that so

329
00:13:54,560 --> 00:13:56,800
the advantages of of something like this

330
00:13:56,800 --> 00:13:58,800
is that you get much greater performance

331
00:13:58,800 --> 00:14:00,839
in terms of latency over a system like

332
00:14:00,839 --> 00:14:02,320
priya

333
00:14:02,320 --> 00:14:04,880
next place

334
00:14:08,560 --> 00:14:12,480
all right so why not

335
00:14:12,480 --> 00:14:14,480
there's plenty of reasons why this

336
00:14:14,480 --> 00:14:16,000
doesn't really work for all

337
00:14:16,000 --> 00:14:19,199
sorts of use cases um this is not

338
00:14:19,199 --> 00:14:21,680
general purpose http in the sense that

339
00:14:21,680 --> 00:14:22,320
you don't

340
00:14:22,320 --> 00:14:25,360
carry state because between requests and

341
00:14:25,360 --> 00:14:26,880
that means cookies

342
00:14:26,880 --> 00:14:29,040
on one hand which some people might go

343
00:14:29,040 --> 00:14:30,560
yes that's a great thing

344
00:14:30,560 --> 00:14:32,320
but it also means that you can't do

345
00:14:32,320 --> 00:14:34,160
things like follow links

346
00:14:34,160 --> 00:14:36,320
because links carry state between

347
00:14:36,320 --> 00:14:37,360
requests

348
00:14:37,360 --> 00:14:40,480
and so the general pattern of uh use of

349
00:14:40,480 --> 00:14:41,360
http for

350
00:14:41,360 --> 00:14:43,040
things like web browsing doesn't really

351
00:14:43,040 --> 00:14:45,120
apply in this case

352
00:14:45,120 --> 00:14:46,880
it's also a lot more expensive to make

353
00:14:46,880 --> 00:14:48,800
requests this way

354
00:14:48,800 --> 00:14:52,880
and um if you don't have any basis for

355
00:14:52,880 --> 00:14:53,600
trust in the

356
00:14:53,600 --> 00:14:55,199
in the parties that are involved in this

357
00:14:55,199 --> 00:14:56,959
one so in particular

358
00:14:56,959 --> 00:14:58,959
if you can't arrange a situation where a

359
00:14:58,959 --> 00:15:00,639
server trusts a proxy

360
00:15:00,639 --> 00:15:02,639
or the user trusts the proxy to the

361
00:15:02,639 --> 00:15:04,399
extent that they need to be trusted

362
00:15:04,399 --> 00:15:05,839
then then this doesn't work and that's

363
00:15:05,839 --> 00:15:07,760
where you might want to go to things

364
00:15:07,760 --> 00:15:11,040
like tor where those

365
00:15:11,040 --> 00:15:12,399
those requirements for trust are much

366
00:15:12,399 --> 00:15:14,320
much much lower

367
00:15:14,320 --> 00:15:16,880
next please

368
00:15:20,639 --> 00:15:23,120
so uh if we look at the performance

369
00:15:23,120 --> 00:15:24,320
characteristics of this

370
00:15:24,320 --> 00:15:26,160
when we compare it to the very simple

371
00:15:26,160 --> 00:15:28,000
scenario that's most like this

372
00:15:28,000 --> 00:15:30,079
which is the one request per connection

373
00:15:30,079 --> 00:15:31,360
through a proxy

374
00:15:31,360 --> 00:15:35,040
uh it seems it's quite favorable if you

375
00:15:35,040 --> 00:15:37,519
if you look at the uh the overheads

376
00:15:37,519 --> 00:15:38,399
involved

377
00:15:38,399 --> 00:15:41,279
and so when when we look at this we say

378
00:15:41,279 --> 00:15:41,759
that

379
00:15:41,759 --> 00:15:45,040
we're trading some of the uh security

380
00:15:45,040 --> 00:15:46,399
advantages perhaps

381
00:15:46,399 --> 00:15:49,839
for performance uh so there are some

382
00:15:49,839 --> 00:15:51,600
replay protection things that are not

383
00:15:51,600 --> 00:15:52,959
quite as good in this system

384
00:15:52,959 --> 00:15:54,959
and post-compromise security is not as

385
00:15:54,959 --> 00:15:56,320
great but

386
00:15:56,320 --> 00:15:58,399
you can do things like reduce the number

387
00:15:58,399 --> 00:16:00,399
of cryptographic operations that are

388
00:16:00,399 --> 00:16:01,440
involved

389
00:16:01,440 --> 00:16:04,560
and probably the killer one for us is

390
00:16:04,560 --> 00:16:06,079
that you reduce the number of round

391
00:16:06,079 --> 00:16:07,759
trips involved

392
00:16:07,759 --> 00:16:10,240
there's also some bite level savings in

393
00:16:10,240 --> 00:16:11,199
terms of

394
00:16:11,199 --> 00:16:14,000
making sure that requests uh are much

395
00:16:14,000 --> 00:16:15,199
much smaller

396
00:16:15,199 --> 00:16:17,040
i put some numbers here but those are

397
00:16:17,040 --> 00:16:18,959
absolute minimums there's a bunch of

398
00:16:18,959 --> 00:16:20,480
extra wrapping that's involved

399
00:16:20,480 --> 00:16:22,320
that probably pushes that up quite a lot

400
00:16:22,320 --> 00:16:23,920
more

401
00:16:23,920 --> 00:16:26,560
next please

402
00:16:31,360 --> 00:16:33,199
so yes i mentioned the trust thing

403
00:16:33,199 --> 00:16:34,480
before the

404
00:16:34,480 --> 00:16:37,519
idea here is that there is a limited

405
00:16:37,519 --> 00:16:38,639
amount of trust

406
00:16:38,639 --> 00:16:41,360
in in the system that's required uh the

407
00:16:41,360 --> 00:16:43,360
proxy has to be trusted by the client

408
00:16:43,360 --> 00:16:45,680
not to link their identity to the server

409
00:16:45,680 --> 00:16:48,079
and the server has to trust the proxy

410
00:16:48,079 --> 00:16:52,000
not to use it abuse its position to

411
00:16:52,000 --> 00:16:54,000
create denial of service attacks and

412
00:16:54,000 --> 00:16:56,320
overload

413
00:16:56,320 --> 00:16:57,440
there's a bunch of things that you might

414
00:16:57,440 --> 00:16:59,519
need to do in order to to

415
00:16:59,519 --> 00:17:02,639
get better traffic analysis resistance

416
00:17:02,639 --> 00:17:05,359
and um the nature of the system is that

417
00:17:05,359 --> 00:17:06,480
replay attacks

418
00:17:06,480 --> 00:17:11,119
are possible if the proxy wishes to

419
00:17:11,119 --> 00:17:13,599
to act in a in a bad fashion so there's

420
00:17:13,599 --> 00:17:14,640
either a requirement

421
00:17:14,640 --> 00:17:18,000
for uh trust or a

422
00:17:18,000 --> 00:17:20,319
set of protections you put in place to

423
00:17:20,319 --> 00:17:22,240
ensure that replay attacks aren't

424
00:17:22,240 --> 00:17:24,799
possible and we can we can reuse some of

425
00:17:24,799 --> 00:17:26,319
the anti-replay

426
00:17:26,319 --> 00:17:28,799
mechanisms that we've used for zero rtt

427
00:17:28,799 --> 00:17:30,320
in in tls

428
00:17:30,320 --> 00:17:35,678
but not all of those and also

429
00:17:35,840 --> 00:17:38,559
probably the worst one is that if the

430
00:17:38,559 --> 00:17:40,320
server keys which are static

431
00:17:40,320 --> 00:17:42,960
are compromised uh all of the messages

432
00:17:42,960 --> 00:17:43,520
can be

433
00:17:43,520 --> 00:17:46,640
read if the proxy makes those those

434
00:17:46,640 --> 00:17:48,160
messages available to

435
00:17:48,160 --> 00:17:51,840
to an attacker it does require again

436
00:17:51,840 --> 00:17:52,799
that

437
00:17:52,799 --> 00:17:54,960
i guess the trust in the trust level in

438
00:17:54,960 --> 00:17:56,160
the proxy that

439
00:17:56,160 --> 00:17:58,840
is is somewhat higher than than the

440
00:17:58,840 --> 00:18:02,480
baseline next place

441
00:18:05,520 --> 00:18:07,679
uh in order to make this work we could

442
00:18:07,679 --> 00:18:09,360
probably get this working

443
00:18:09,360 --> 00:18:11,520
by reusing the existing definition for

444
00:18:11,520 --> 00:18:13,679
message

445
00:18:13,679 --> 00:18:16,799
um as a number of reasons why

446
00:18:16,799 --> 00:18:20,400
that would be awkward it has

447
00:18:20,400 --> 00:18:22,960
some fairly difficult implementation

448
00:18:22,960 --> 00:18:24,400
characteristics

449
00:18:24,400 --> 00:18:27,760
including some awkward stateful

450
00:18:27,760 --> 00:18:28,720
characteristics

451
00:18:28,720 --> 00:18:30,720
uh you have to understand the request in

452
00:18:30,720 --> 00:18:32,240
order to make sense of the response in a

453
00:18:32,240 --> 00:18:33,600
lot of cases

454
00:18:33,600 --> 00:18:36,799
uh so as part of this we've got a short

455
00:18:36,799 --> 00:18:38,640
draft that describes a simple binary

456
00:18:38,640 --> 00:18:40,960
encoding for http messages that

457
00:18:40,960 --> 00:18:44,160
allows you to make those reasonably

458
00:18:44,160 --> 00:18:44,960
efficiently

459
00:18:44,960 --> 00:18:46,400
it doesn't do any of the fancy features

460
00:18:46,400 --> 00:18:48,320
that http 3 does

461
00:18:48,320 --> 00:18:49,600
uh doesn't do header compression and

462
00:18:49,600 --> 00:18:51,360
various other things like that

463
00:18:51,360 --> 00:18:53,679
and the only flexibility is to allow for

464
00:18:53,679 --> 00:18:55,280
streaming processing which is a common

465
00:18:55,280 --> 00:18:56,160
use case in

466
00:18:56,160 --> 00:18:59,280
a lot of these things but even that's

467
00:18:59,280 --> 00:19:04,720
negotiable next please

468
00:19:06,080 --> 00:19:09,440
i think yes

469
00:19:09,440 --> 00:19:11,039
this is the question that we're here to

470
00:19:11,039 --> 00:19:12,559
here to ask now

471
00:19:12,559 --> 00:19:14,720
uh there's a relatively small and

472
00:19:14,720 --> 00:19:16,240
largely self-contained

473
00:19:16,240 --> 00:19:18,320
uh specification there there's a couple

474
00:19:18,320 --> 00:19:19,840
of opportunities that we have

475
00:19:19,840 --> 00:19:22,000
for doing things like discovery of the

476
00:19:22,000 --> 00:19:24,080
various actors involved and and

477
00:19:24,080 --> 00:19:26,799
advertising formats and whatnot but the

478
00:19:26,799 --> 00:19:28,640
the core of the specification is

479
00:19:28,640 --> 00:19:31,520
isn't really that much it took not very

480
00:19:31,520 --> 00:19:32,799
long to implement

481
00:19:32,799 --> 00:19:35,840
as chris and i will both attest we have

482
00:19:35,840 --> 00:19:38,240
implementations they interoperate

483
00:19:38,240 --> 00:19:40,559
uh there's a test client server that

484
00:19:40,559 --> 00:19:42,080
people will play with if they

485
00:19:42,080 --> 00:19:45,120
so choose so the question would be

486
00:19:45,120 --> 00:19:46,960
is there interest in doing the work is

487
00:19:46,960 --> 00:19:49,120
there enough people willing to do the

488
00:19:49,120 --> 00:19:49,679
work

489
00:19:49,679 --> 00:19:52,880
and where do you think it'd be best

490
00:19:52,880 --> 00:19:56,000
to do the work i've got some ideas i'm

491
00:19:56,000 --> 00:19:57,760
suggesting here a working group but

492
00:19:57,760 --> 00:20:00,880
um the question for the group

493
00:20:00,880 --> 00:20:03,360
will be to answer that question based on

494
00:20:03,360 --> 00:20:06,880
their on your own

495
00:20:06,880 --> 00:20:10,720
yeah okay so have a listen run through

496
00:20:10,720 --> 00:20:12,960
uh with rich first and try to keep your

497
00:20:12,960 --> 00:20:14,320
questions brief

498
00:20:14,320 --> 00:20:17,600
just in the interest of keeping to time

499
00:20:17,600 --> 00:20:21,440
sure nice haircut martin i'm jealous

500
00:20:21,440 --> 00:20:25,360
um how does this relate rich sol zakamae

501
00:20:25,360 --> 00:20:29,120
um have you looked at the the chrome

502
00:20:29,120 --> 00:20:32,240
anonymous prefetch stuff

503
00:20:32,240 --> 00:20:34,320
i'll post a link in the in the chat and

504
00:20:34,320 --> 00:20:36,000
i want yeah yeah

505
00:20:36,000 --> 00:20:40,240
if it's this this does relate to that

506
00:20:40,320 --> 00:20:42,080
yeah thanks richard there's a there's a

507
00:20:42,080 --> 00:20:43,280
bunch of things in this space that do

508
00:20:43,280 --> 00:20:43,840
relate

509
00:20:43,840 --> 00:20:47,200
to the um to this general area of work

510
00:20:47,200 --> 00:20:49,840
whereby you have the ability to fetch

511
00:20:49,840 --> 00:20:51,919
things

512
00:20:51,919 --> 00:20:54,640
more or less anonymously and this does

513
00:20:54,640 --> 00:20:55,679
give you some of that

514
00:20:55,679 --> 00:20:58,559
that ability uh it doesn't this doesn't

515
00:20:58,559 --> 00:20:59,039
have

516
00:20:59,039 --> 00:21:01,120
necessarily the right set of guarantees

517
00:21:01,120 --> 00:21:02,400
for that work

518
00:21:02,400 --> 00:21:04,159
uh because of the unlinkability

519
00:21:04,159 --> 00:21:05,520
properties that we have here

520
00:21:05,520 --> 00:21:07,120
it's not particularly well suited to

521
00:21:07,120 --> 00:21:08,799
doing things like uh

522
00:21:08,799 --> 00:21:11,520
stateful prefetching things particularly

523
00:21:11,520 --> 00:21:14,000
when you think about

524
00:21:14,000 --> 00:21:15,760
prefetching an entire web page which

525
00:21:15,760 --> 00:21:17,120
might include include multiple

526
00:21:17,120 --> 00:21:20,640
requests multiple resources so

527
00:21:20,640 --> 00:21:23,679
i do think it is adjacent but not

528
00:21:23,679 --> 00:21:26,480
entirely the same

529
00:21:29,600 --> 00:21:33,039
uh i think it's diving now cool

530
00:21:33,039 --> 00:21:35,919
thanks um thanks for the presentation

531
00:21:35,919 --> 00:21:36,480
martin

532
00:21:36,480 --> 00:21:38,960
i think this is a really cool tool i

533
00:21:38,960 --> 00:21:41,039
think it complements nicely a lot of the

534
00:21:41,039 --> 00:21:42,640
other tools we're building in mask in

535
00:21:42,640 --> 00:21:44,240
other places at the atf i think this

536
00:21:44,240 --> 00:21:44,799
fits a

537
00:21:44,799 --> 00:21:47,600
different use case which is great so i

538
00:21:47,600 --> 00:21:49,120
would be very much in favor of

539
00:21:49,120 --> 00:21:52,480
us working on this like at the atf and

540
00:21:52,480 --> 00:21:54,880
i think your proposal of a short-lived

541
00:21:54,880 --> 00:21:56,080
small specific

542
00:21:56,080 --> 00:21:58,480
well narrowly focused working group is

543
00:21:58,480 --> 00:22:00,080
the right one so i would advocate for

544
00:22:00,080 --> 00:22:13,120
that as well

545
00:22:13,120 --> 00:22:14,720
i was waiting for kathleen to introduce

546
00:22:14,720 --> 00:22:15,840
the next person in the queue and then i

547
00:22:15,840 --> 00:22:17,679
realized it was me

548
00:22:17,679 --> 00:22:20,960
um so i think

549
00:22:20,960 --> 00:22:23,440
i have a couple of concerns about this

550
00:22:23,440 --> 00:22:24,159
um mainly

551
00:22:24,159 --> 00:22:25,679
i'd like to understand better sort of

552
00:22:25,679 --> 00:22:27,679
concerns um one

553
00:22:27,679 --> 00:22:30,480
is this distinction between applications

554
00:22:30,480 --> 00:22:31,600
of http

555
00:22:31,600 --> 00:22:33,120
that for which this makes sense and

556
00:22:33,120 --> 00:22:34,559
which is it for which it doesn't make

557
00:22:34,559 --> 00:22:35,039
sense

558
00:22:35,039 --> 00:22:37,440
um which you seem to draw there i wonder

559
00:22:37,440 --> 00:22:38,080
if there's

560
00:22:38,080 --> 00:22:41,360
how sharply we can draw that line um

561
00:22:41,360 --> 00:22:43,520
and the other concern i have is that

562
00:22:43,520 --> 00:22:45,280
there seems to be kind of

563
00:22:45,280 --> 00:22:47,760
a collection of intermediation

564
00:22:47,760 --> 00:22:48,559
strategies

565
00:22:48,559 --> 00:22:51,200
being adopted around ietf nowadays and

566
00:22:51,200 --> 00:22:53,280
it seems like it would be good to

567
00:22:53,280 --> 00:22:55,679
do a little bit of work to collate those

568
00:22:55,679 --> 00:22:56,559
and understand

569
00:22:56,559 --> 00:22:58,559
what's good where so like i would

570
00:22:58,559 --> 00:22:59,840
contrast you there's this there's the

571
00:22:59,840 --> 00:23:01,760
oblivious dns stuff there's the

572
00:23:01,760 --> 00:23:03,280
i understand some work being done on

573
00:23:03,280 --> 00:23:04,720
multi-layered masks so you can tunnel

574
00:23:04,720 --> 00:23:05,280
mask

575
00:23:05,280 --> 00:23:08,320
total quick uh tunnels uh you know

576
00:23:08,320 --> 00:23:11,360
stacked quick tunnels so i mean and then

577
00:23:11,360 --> 00:23:12,000
of course

578
00:23:12,000 --> 00:23:13,840
there's all the legacy of tor work and

579
00:23:13,840 --> 00:23:15,679
the protocols they've got there so

580
00:23:15,679 --> 00:23:17,200
it seems like some degree of

581
00:23:17,200 --> 00:23:19,200
housekeeping would be useful and having

582
00:23:19,200 --> 00:23:20,840
in terms of having an understandable

583
00:23:20,840 --> 00:23:22,799
comprehensible uh tool set

584
00:23:22,799 --> 00:23:27,200
for folks yeah absolutely so i think

585
00:23:27,200 --> 00:23:29,039
yeah i think to your first point the the

586
00:23:29,039 --> 00:23:30,240
distinction between

587
00:23:30,240 --> 00:23:33,440
um sort of the continuous use of http

588
00:23:33,440 --> 00:23:34,159
with with

589
00:23:34,159 --> 00:23:36,880
uh context the representation

590
00:23:36,880 --> 00:23:39,039
representational state transfer

591
00:23:39,039 --> 00:23:41,760
or cookies or whatever whatever you have

592
00:23:41,760 --> 00:23:43,440
um

593
00:23:43,440 --> 00:23:46,080
the highfalutin version or the thing

594
00:23:46,080 --> 00:23:48,879
that everyone uses

595
00:23:49,039 --> 00:23:50,960
is is very different from this and this

596
00:23:50,960 --> 00:23:53,360
imagines it imagines a more atomic

597
00:23:53,360 --> 00:23:56,400
style of interaction uh which

598
00:23:56,400 --> 00:23:58,720
is well suited to things like the dns

599
00:23:58,720 --> 00:23:59,840
case or the

600
00:23:59,840 --> 00:24:01,279
telemetry submission the question i'm

601
00:24:01,279 --> 00:24:03,520
wondering is like is there a technical

602
00:24:03,520 --> 00:24:06,640
like clearly defined line one could draw

603
00:24:06,640 --> 00:24:08,720
um to like put a bounding box around

604
00:24:08,720 --> 00:24:10,960
this and say it's safe

605
00:24:10,960 --> 00:24:13,679
yeah and so um that's what i was

606
00:24:13,679 --> 00:24:14,799
thinking that the

607
00:24:14,799 --> 00:24:17,919
um when it comes down to to this general

608
00:24:17,919 --> 00:24:19,840
strategy of intermediation

609
00:24:19,840 --> 00:24:22,880
for this i i i think we're we're kind of

610
00:24:22,880 --> 00:24:24,880
reaching the point now where

611
00:24:24,880 --> 00:24:26,080
we're using this individual

612
00:24:26,080 --> 00:24:28,240
intermediation strategy for privacy

613
00:24:28,240 --> 00:24:29,039
purposes

614
00:24:29,039 --> 00:24:30,880
for a number of different purposes and

615
00:24:30,880 --> 00:24:32,159
having

616
00:24:32,159 --> 00:24:34,799
the the spread in the toolkit is

617
00:24:34,799 --> 00:24:36,559
starting to become necessary

618
00:24:36,559 --> 00:24:38,720
uh i do think that you're right in

619
00:24:38,720 --> 00:24:40,799
identifying the pattern

620
00:24:40,799 --> 00:24:44,720
and being deliberate about our choices

621
00:24:44,720 --> 00:24:46,000
in selecting from this

622
00:24:46,000 --> 00:24:49,360
space but um

623
00:24:49,360 --> 00:24:51,360
i think this is an underserved point in

624
00:24:51,360 --> 00:24:52,880
that space at the moment

625
00:24:52,880 --> 00:24:54,320
and so we're seeing this with the

626
00:24:54,320 --> 00:24:56,320
oblivious dns and the oblivious doe and

627
00:24:56,320 --> 00:24:57,120
things like that

628
00:24:57,120 --> 00:24:58,880
one of the things i was trying to do was

629
00:24:58,880 --> 00:25:01,039
find something that was generic

630
00:25:01,039 --> 00:25:03,440
that would be able to be applied uh

631
00:25:03,440 --> 00:25:04,720
across a number of different things

632
00:25:04,720 --> 00:25:05,440
rather than

633
00:25:05,440 --> 00:25:07,919
look for the point solutions that we've

634
00:25:07,919 --> 00:25:09,120
had in the

635
00:25:09,120 --> 00:25:12,720
the case of uh tommy's oblivious

636
00:25:12,720 --> 00:25:16,000
dns or oblivious doe proposal

637
00:25:16,000 --> 00:25:18,000
um i i think that's that's something

638
00:25:18,000 --> 00:25:19,440
that

639
00:25:19,440 --> 00:25:21,600
i was uncomfortable with for the reasons

640
00:25:21,600 --> 00:25:23,120
that you stated you know

641
00:25:23,120 --> 00:25:25,760
thanks and finally i'd just like to uh

642
00:25:25,760 --> 00:25:27,440
read in some comments that i got from

643
00:25:27,440 --> 00:25:29,520
matthew finkel the tour projects on back

644
00:25:29,520 --> 00:25:30,400
channel he says

645
00:25:30,400 --> 00:25:32,880
that um he is generally supportive uh

646
00:25:32,880 --> 00:25:34,720
tor might not use it directly but it

647
00:25:34,720 --> 00:25:35,679
could um

648
00:25:35,679 --> 00:25:37,360
be something they could leverage to

649
00:25:37,360 --> 00:25:38,799
reduce some of their constraints may be

650
00:25:38,799 --> 00:25:40,480
allowed to get get away with one less op

651
00:25:40,480 --> 00:25:42,799
less latency etc so

652
00:25:42,799 --> 00:25:44,159
some support there for doing the work

653
00:25:44,159 --> 00:25:45,840
from the tour project

654
00:25:45,840 --> 00:25:49,120
great that's surprising but

655
00:25:49,120 --> 00:25:53,279
good i will yield the floor to tommy

656
00:25:55,679 --> 00:25:57,600
all right thanks for uh presenting this

657
00:25:57,600 --> 00:25:59,520
so i'm i'm definitely supportive of this

658
00:25:59,520 --> 00:25:59,919
i think

659
00:25:59,919 --> 00:26:01,840
of the options having short-lived

660
00:26:01,840 --> 00:26:02,960
working group

661
00:26:02,960 --> 00:26:04,880
i think is the right solution there's

662
00:26:04,880 --> 00:26:08,400
enough conversation to have around this

663
00:26:08,400 --> 00:26:11,440
i also uh appreciate um what richard was

664
00:26:11,440 --> 00:26:13,440
saying about

665
00:26:13,440 --> 00:26:14,799
kind of pointing us to like the other

666
00:26:14,799 --> 00:26:16,480
solutions and how do we rationalize that

667
00:26:16,480 --> 00:26:18,240
i i agree that this is kind of one of

668
00:26:18,240 --> 00:26:20,000
the tools in the toolbox

669
00:26:20,000 --> 00:26:23,440
that we can use um and

670
00:26:23,440 --> 00:26:25,279
i think having a working group for this

671
00:26:25,279 --> 00:26:26,880
would complement well

672
00:26:26,880 --> 00:26:28,480
the work that's going on in mass because

673
00:26:28,480 --> 00:26:30,480
i essentially see the mask

674
00:26:30,480 --> 00:26:32,880
proxying as ways improving the ways we

675
00:26:32,880 --> 00:26:35,440
have more stateful long-lived

676
00:26:35,440 --> 00:26:37,039
proxy connections for privacy and this

677
00:26:37,039 --> 00:26:38,559
is

678
00:26:38,559 --> 00:26:41,279
this solution covers all of the less

679
00:26:41,279 --> 00:26:42,720
stateful things that are more just

680
00:26:42,720 --> 00:26:44,159
transactional

681
00:26:44,159 --> 00:26:45,440
one-off and so if you put those two

682
00:26:45,440 --> 00:26:46,880
together i think you have a relatively

683
00:26:46,880 --> 00:26:47,919
complete

684
00:26:47,919 --> 00:26:50,400
toolbox and i would actually hope that

685
00:26:50,400 --> 00:26:51,760
the um

686
00:26:51,760 --> 00:26:53,520
in deployments the actual nodes that are

687
00:26:53,520 --> 00:26:55,760
proxies support both

688
00:26:55,760 --> 00:26:57,760
that essentially a proxy would have some

689
00:26:57,760 --> 00:26:59,360
connections that it's doing

690
00:26:59,360 --> 00:27:01,200
connect connect udp for long-lived

691
00:27:01,200 --> 00:27:02,559
things that the client wants

692
00:27:02,559 --> 00:27:04,559
and everything else that's transactional

693
00:27:04,559 --> 00:27:06,000
like dns

694
00:27:06,000 --> 00:27:08,640
and stats reporting goes through an oh

695
00:27:08,640 --> 00:27:09,919
http

696
00:27:09,919 --> 00:27:12,880
solution so i don't know where that kind

697
00:27:12,880 --> 00:27:14,799
of architectural rationalization of

698
00:27:14,799 --> 00:27:16,960
how we put all pieces together lives if

699
00:27:16,960 --> 00:27:18,080
we need to

700
00:27:18,080 --> 00:27:20,720
really specify that but having a group

701
00:27:20,720 --> 00:27:22,159
to look at this particular building

702
00:27:22,159 --> 00:27:25,039
block would be really good

703
00:27:30,880 --> 00:27:32,880
okay so i don't think that was quite a

704
00:27:32,880 --> 00:27:34,559
question but a helpful statement

705
00:27:34,559 --> 00:27:37,279
um daniel

706
00:27:40,480 --> 00:27:44,880
yeah hi so can you hear me

707
00:27:44,880 --> 00:27:48,399
yes oh yeah okay um so i was wondering

708
00:27:48,399 --> 00:27:49,520
so

709
00:27:49,520 --> 00:27:53,120
if we have the proxy and the end server

710
00:27:53,120 --> 00:27:56,880
i'm just wondering in in your scenarios

711
00:27:56,880 --> 00:28:00,799
are they managed by the same entity or

712
00:28:01,120 --> 00:28:02,880
are they managed by different uh

713
00:28:02,880 --> 00:28:05,600
independent entities

714
00:28:05,600 --> 00:28:08,880
yeah so um presumably the client and

715
00:28:08,880 --> 00:28:10,080
server are operated

716
00:28:10,080 --> 00:28:13,360
by different entities uh and the the

717
00:28:13,360 --> 00:28:14,480
proxy has to be

718
00:28:14,480 --> 00:28:16,559
from from the client's perspective a

719
00:28:16,559 --> 00:28:17,600
different entity of the

720
00:28:17,600 --> 00:28:21,279
entity to the server primarily because

721
00:28:21,279 --> 00:28:22,640
they have to trust that one won't be

722
00:28:22,640 --> 00:28:24,480
passing information to the other

723
00:28:24,480 --> 00:28:27,520
and usually

724
00:28:27,520 --> 00:28:29,360
find that the best way to achieve that

725
00:28:29,360 --> 00:28:30,720
is to make sure that they have some sort

726
00:28:30,720 --> 00:28:31,679
of incentive

727
00:28:31,679 --> 00:28:34,000
uh aligned in that in that way and being

728
00:28:34,000 --> 00:28:35,440
a different organization is usually the

729
00:28:35,440 --> 00:28:36,799
best way to do that

730
00:28:36,799 --> 00:28:39,600
there's discussion of this in the draft

731
00:28:39,600 --> 00:28:40,000
okay

732
00:28:40,000 --> 00:28:42,399
but in your deployment is it the isp for

733
00:28:42,399 --> 00:28:43,200
example

734
00:28:43,200 --> 00:28:46,640
that is deploying the proxy or

735
00:28:46,880 --> 00:28:50,080
uh so in

736
00:28:50,080 --> 00:28:52,480
the trial we're doing with a related

737
00:28:52,480 --> 00:28:53,600
thing

738
00:28:53,600 --> 00:28:56,080
um which is for the dns thing there are

739
00:28:56,080 --> 00:28:56,880
independent

740
00:28:56,880 --> 00:28:59,919
uh people not the isp

741
00:28:59,919 --> 00:29:03,200
um but uh it certainly could be i

742
00:29:03,200 --> 00:29:05,200
imagine but there uh there's an

743
00:29:05,200 --> 00:29:06,240
independent

744
00:29:06,240 --> 00:29:10,000
uh party running the proxy

745
00:29:10,000 --> 00:29:12,799
completely independent of of either us

746
00:29:12,799 --> 00:29:13,279
or

747
00:29:13,279 --> 00:29:17,279
the the server operator okay right

748
00:29:17,279 --> 00:29:22,159
thank you okay and now ecker

749
00:29:22,159 --> 00:29:23,919
there's a presentation martin um i don't

750
00:29:23,919 --> 00:29:25,200
think it may be surprised here i'm in

751
00:29:25,200 --> 00:29:26,159
favor of this

752
00:29:26,159 --> 00:29:28,000
um anything i haven't encrypted anything

753
00:29:28,000 --> 00:29:29,360
people know i love that

754
00:29:29,360 --> 00:29:32,399
um the um uh i think a short-lived

755
00:29:32,399 --> 00:29:33,679
working group is the right answer um i

756
00:29:33,679 --> 00:29:34,559
know there's some questions about the

757
00:29:34,559 --> 00:29:36,000
relationship between this and odo

758
00:29:36,000 --> 00:29:39,279
um you know i think um just to mentioned

759
00:29:39,279 --> 00:29:41,039
was in the chat i think it's a clear

760
00:29:41,039 --> 00:29:42,799
generalization of odo um

761
00:29:42,799 --> 00:29:45,520
uh what you know whether um uh i think

762
00:29:45,520 --> 00:29:46,880
eventually we do

763
00:29:46,880 --> 00:29:49,919
you know odell will be a ohtp um there's

764
00:29:49,919 --> 00:29:51,360
right here from talking like tommy

765
00:29:51,360 --> 00:29:53,440
and uh and chris and others so um you

766
00:29:53,440 --> 00:29:54,799
know the question you know we have to

767
00:29:54,799 --> 00:29:55,919
resolve would be you know

768
00:29:55,919 --> 00:29:57,440
odor perceiving parallels experimental

769
00:29:57,440 --> 00:29:58,799
or just weight on this and that would

770
00:29:58,799 --> 00:30:00,320
depend on how how long without

771
00:30:00,320 --> 00:30:01,520
that would take to get this done but i

772
00:30:01,520 --> 00:30:02,880
think i don't there's not a there's not

773
00:30:02,880 --> 00:30:04,159
a conflict i think every 20 companies

774
00:30:04,159 --> 00:30:05,919
working together

775
00:30:05,919 --> 00:30:09,039
yeah uh my intent was certainly that

776
00:30:09,039 --> 00:30:09,520
this

777
00:30:09,520 --> 00:30:12,080
be used for odo but if it's if it turns

778
00:30:12,080 --> 00:30:12,880
out that

779
00:30:12,880 --> 00:30:15,600
we can't make that work or something

780
00:30:15,600 --> 00:30:17,279
happens that that means that we need to

781
00:30:17,279 --> 00:30:18,640
move faster on that then

782
00:30:18,640 --> 00:30:23,840
obviously we can work that out

783
00:30:24,000 --> 00:30:27,440
and christy payne

784
00:30:27,440 --> 00:30:29,919
hi thank you um yeah so i just wanted to

785
00:30:29,919 --> 00:30:31,919
touch on some of the replay attacks and

786
00:30:31,919 --> 00:30:33,360
the sort of security model that you're

787
00:30:33,360 --> 00:30:34,080
operating

788
00:30:34,080 --> 00:30:35,679
on in here and and you've already

789
00:30:35,679 --> 00:30:37,200
mentioned that you have to put a lot of

790
00:30:37,200 --> 00:30:38,399
trust in the proxy

791
00:30:38,399 --> 00:30:40,640
that you expect the clients who need to

792
00:30:40,640 --> 00:30:42,000
really put quite a bit of trust in the

793
00:30:42,000 --> 00:30:42,880
proxy

794
00:30:42,880 --> 00:30:44,720
um a couple of questions in the

795
00:30:44,720 --> 00:30:47,039
specification it mentions that um

796
00:30:47,039 --> 00:30:49,360
like co-location of the request resource

797
00:30:49,360 --> 00:30:50,880
and the target resource like

798
00:30:50,880 --> 00:30:53,520
simplifies kind of interactions and but

799
00:30:53,520 --> 00:30:55,760
to have to like what extent do you

800
00:30:55,760 --> 00:30:57,360
technically mitigate this kind of

801
00:30:57,360 --> 00:30:58,960
independence from the server and to what

802
00:30:58,960 --> 00:31:00,399
extent are you expecting it to be done

803
00:31:00,399 --> 00:31:01,440
on like a

804
00:31:01,440 --> 00:31:03,600
out of technical scope so you're just

805
00:31:03,600 --> 00:31:04,799
hoping that the client

806
00:31:04,799 --> 00:31:07,360
designates the proxy in like a policy

807
00:31:07,360 --> 00:31:09,279
way rather than a technical

808
00:31:09,279 --> 00:31:12,720
sense of trust right yeah so that's

809
00:31:12,720 --> 00:31:14,399
that's a good question so

810
00:31:14,399 --> 00:31:17,200
um the draft actually specifies four

811
00:31:17,200 --> 00:31:18,880
different functions

812
00:31:18,880 --> 00:31:20,799
but um imagines that two of those

813
00:31:20,799 --> 00:31:22,240
functions the the

814
00:31:22,240 --> 00:31:25,519
target resource and the the uh

815
00:31:25,519 --> 00:31:27,440
thing that's removing the encryption

816
00:31:27,440 --> 00:31:29,360
which is the request resource

817
00:31:29,360 --> 00:31:31,519
are actually operated by the same entity

818
00:31:31,519 --> 00:31:32,960
in a lot of cases

819
00:31:32,960 --> 00:31:36,000
and and so um it's the it's the

820
00:31:36,000 --> 00:31:38,240
interaction between the the server

821
00:31:38,240 --> 00:31:40,159
operator and the proxy operator that

822
00:31:40,159 --> 00:31:42,559
that are most interesting to the client

823
00:31:42,559 --> 00:31:43,919
and those are the ones that need to be

824
00:31:43,919 --> 00:31:44,880
separate entities

825
00:31:44,880 --> 00:31:47,679
so when i say server i mean the those

826
00:31:47,679 --> 00:31:48,720
two things that are

827
00:31:48,720 --> 00:31:51,840
together in the same place

828
00:31:53,039 --> 00:31:54,799
when you say a lot of trust i don't

829
00:31:54,799 --> 00:31:56,640
think this is a lot of trust

830
00:31:56,640 --> 00:31:59,120
but it does require some of some degree

831
00:31:59,120 --> 00:32:00,159
of trust

832
00:32:00,159 --> 00:32:04,399
and so um what we had imagined

833
00:32:04,399 --> 00:32:06,960
um is a range of things whether that be

834
00:32:06,960 --> 00:32:08,240
contractual

835
00:32:08,240 --> 00:32:11,760
um and so enforced by some system

836
00:32:11,760 --> 00:32:14,240
but there's also the possibility to have

837
00:32:14,240 --> 00:32:14,880
audits

838
00:32:14,880 --> 00:32:17,200
or any other sort of system in place to

839
00:32:17,200 --> 00:32:18,080
ensure that

840
00:32:18,080 --> 00:32:21,519
the the proxy maintains the the level of

841
00:32:21,519 --> 00:32:22,559
trust that we

842
00:32:22,559 --> 00:32:25,440
uh we require of it which is mostly that

843
00:32:25,440 --> 00:32:27,519
it doesn't pass client information

844
00:32:27,519 --> 00:32:29,440
or information about client identity

845
00:32:29,440 --> 00:32:33,039
specifically to the server

846
00:32:33,679 --> 00:32:35,279
yeah i guess when i say a lot of trust

847
00:32:35,279 --> 00:32:37,200
is just you mentioned um like the need

848
00:32:37,200 --> 00:32:38,159
to avoid

849
00:32:38,159 --> 00:32:39,919
like if the proxy abuses its position

850
00:32:39,919 --> 00:32:41,440
you can end up with overload you can

851
00:32:41,440 --> 00:32:43,360
have replay attacks if the proxy chooses

852
00:32:43,360 --> 00:32:44,799
to act in a bad fashion

853
00:32:44,799 --> 00:32:46,880
and so it would be helpful to know if

854
00:32:46,880 --> 00:32:48,240
you plan to like have a technical

855
00:32:48,240 --> 00:32:51,120
mitigation for that or if the trust is

856
00:32:51,120 --> 00:32:54,159
kind of yeah out of scope and it's just

857
00:32:54,159 --> 00:32:55,200
going to be determined

858
00:32:55,200 --> 00:32:58,480
policy basis yeah so um

859
00:32:58,480 --> 00:33:00,559
you mentioned a number of things um the

860
00:33:00,559 --> 00:33:02,799
overload stuff is something we're

861
00:33:02,799 --> 00:33:05,919
um continuing to to work on um

862
00:33:05,919 --> 00:33:07,919
but ultimately it it's likely to come

863
00:33:07,919 --> 00:33:09,120
down to those sorts of technical

864
00:33:09,120 --> 00:33:10,080
non-technical

865
00:33:10,080 --> 00:33:13,120
constraints in my opinion at least

866
00:33:13,120 --> 00:33:16,880
others may differ the replay stuff does

867
00:33:16,880 --> 00:33:17,440
have

868
00:33:17,440 --> 00:33:19,279
technical mitigations but that's going

869
00:33:19,279 --> 00:33:21,360
to depend on the application

870
00:33:21,360 --> 00:33:24,320
building those as a generic toolkit i

871
00:33:24,320 --> 00:33:25,600
don't think we can provide anything

872
00:33:25,600 --> 00:33:27,360
generic

873
00:33:27,360 --> 00:33:30,479
we can only provide hooks

874
00:33:31,840 --> 00:33:34,880
and i see echoes there

875
00:33:34,880 --> 00:33:36,559
yeah so i think it's probably worth like

876
00:33:36,559 --> 00:33:38,799
just like trying to frame this question

877
00:33:38,799 --> 00:33:40,080
how much you trust the proxy a little

878
00:33:40,080 --> 00:33:40,399
bit

879
00:33:40,399 --> 00:33:42,960
um so i think there probably are and the

880
00:33:42,960 --> 00:33:44,320
first thing they recognize is that

881
00:33:44,320 --> 00:33:45,919
in many cases this is a replacement for

882
00:33:45,919 --> 00:33:47,919
existing situations where the client

883
00:33:47,919 --> 00:33:49,440
would connect directly to the server so

884
00:33:49,440 --> 00:33:51,600
in the case of like of like odo right

885
00:33:51,600 --> 00:33:52,799
the climate is behind the desert

886
00:33:52,799 --> 00:33:54,480
ordinarily and so like from the client's

887
00:33:54,480 --> 00:33:55,279
perspective

888
00:33:55,279 --> 00:33:57,679
like anything is like so even the pro

889
00:33:57,679 --> 00:33:59,760
the prostate fat situation is no worse

890
00:33:59,760 --> 00:34:02,960
than if um that than if then

891
00:34:02,960 --> 00:34:05,679
this had been deployed um so now now

892
00:34:05,679 --> 00:34:06,000
certainly

893
00:34:06,000 --> 00:34:07,600
that once you have this in place there

894
00:34:07,600 --> 00:34:09,599
will be situations in which

895
00:34:09,599 --> 00:34:11,119
um you know you might want to use it

896
00:34:11,119 --> 00:34:12,800
that you weren't prepared to do

897
00:34:12,800 --> 00:34:14,000
anything at all in that case in that

898
00:34:14,000 --> 00:34:15,199
case you of course have to try to proxy

899
00:34:15,199 --> 00:34:17,119
in the and the server not to collaborate

900
00:34:17,119 --> 00:34:20,320
um the um uh i think

901
00:34:20,320 --> 00:34:22,639
the the the emergency questions are what

902
00:34:22,639 --> 00:34:24,639
the situation is referred to the server

903
00:34:24,639 --> 00:34:26,719
and what it has to expect from the proxy

904
00:34:26,719 --> 00:34:27,760
um the

905
00:34:27,760 --> 00:34:30,079
um uh you know the ng replay stuff

906
00:34:30,079 --> 00:34:31,520
obviously is an issue note the interview

907
00:34:31,520 --> 00:34:32,719
there's a not nation on the client the

908
00:34:32,719 --> 00:34:34,079
client has built into replay it's only

909
00:34:34,079 --> 00:34:35,679
the server which is right where we play

910
00:34:35,679 --> 00:34:36,719
this is like think about this like

911
00:34:36,719 --> 00:34:38,719
tls0tt or like sending s5 messages

912
00:34:38,719 --> 00:34:39,280
around

913
00:34:39,280 --> 00:34:43,199
um so um so the questions are partly

914
00:34:43,199 --> 00:34:43,520
like

915
00:34:43,520 --> 00:34:47,359
uh you know this question of um uh of

916
00:34:47,359 --> 00:34:49,040
replay um there's questions about

917
00:34:49,040 --> 00:34:50,480
overload um

918
00:34:50,480 --> 00:34:51,760
and i think that you know that the

919
00:34:51,760 --> 00:34:53,280
reason that overloads an issue is not

920
00:34:53,280 --> 00:34:55,199
because the proxy has superpowers but

921
00:34:55,199 --> 00:34:56,560
because the ordinary anti-dos

922
00:34:56,560 --> 00:34:58,079
mitigations that the server would apply

923
00:34:58,079 --> 00:34:59,599
which look at like ipad reputation won't

924
00:34:59,599 --> 00:35:00,480
work properly because everything else

925
00:35:00,480 --> 00:35:01,599
that comes from the proxy

926
00:35:01,599 --> 00:35:03,359
so um there are mechanisms for

927
00:35:03,359 --> 00:35:04,720
preventing that but yes typically it's

928
00:35:04,720 --> 00:35:06,560
assumed that the proxy isn't dosing you

929
00:35:06,560 --> 00:35:08,160
um if the process is drossing you

930
00:35:08,160 --> 00:35:10,079
basically have like one giant handle you

931
00:35:10,079 --> 00:35:11,280
can turn where you're like i don't i

932
00:35:11,280 --> 00:35:12,240
don't want the price to connect to me

933
00:35:12,240 --> 00:35:12,800
anymore

934
00:35:12,800 --> 00:35:14,240
um and so the proxy is a strong

935
00:35:14,240 --> 00:35:15,680
incentive that's not cheat here because

936
00:35:15,680 --> 00:35:17,440
the proxy does cheat and what happens is

937
00:35:17,440 --> 00:35:18,800
all the people behind them get get

938
00:35:18,800 --> 00:35:21,599
cut off um so i i don't think you know

939
00:35:21,599 --> 00:35:22,240
um

940
00:35:22,240 --> 00:35:24,880
um i i don't think that's like uh

941
00:35:24,880 --> 00:35:26,560
something i'm too worried operationally

942
00:35:26,560 --> 00:35:27,200
um

943
00:35:27,200 --> 00:35:28,560
the um i know that unless there's a

944
00:35:28,560 --> 00:35:30,320
bunch of chat here about the um

945
00:35:30,320 --> 00:35:31,200
about like are we you know

946
00:35:31,200 --> 00:35:33,040
reconstructing tour um i think actually

947
00:35:33,040 --> 00:35:34,640
when we get started here at mixmaster

948
00:35:34,640 --> 00:35:35,599
more than tour

949
00:35:35,599 --> 00:35:37,119
um so i'm typically there are two

950
00:35:37,119 --> 00:35:38,320
anonymity kind of things there's like

951
00:35:38,320 --> 00:35:39,839
like high latency mixed networks and

952
00:35:39,839 --> 00:35:41,040
there's like things like tour

953
00:35:41,040 --> 00:35:43,520
um i think um mass the mass tunneling is

954
00:35:43,520 --> 00:35:44,640
actually more like tor

955
00:35:44,640 --> 00:35:47,119
um i i i also will be in favor of like

956
00:35:47,119 --> 00:35:47,839
trying to like

957
00:35:47,839 --> 00:35:49,119
have several enemy networks for

958
00:35:49,119 --> 00:35:50,960
different latency um you know

959
00:35:50,960 --> 00:35:53,200
points um but i think that like this is

960
00:35:53,200 --> 00:35:54,560
i don't think that like if we wanted to

961
00:35:54,560 --> 00:35:56,160
take tour on at some point this would

962
00:35:56,160 --> 00:35:59,839
not get in the way of that

963
00:36:02,480 --> 00:36:05,040
jonathan

964
00:36:06,720 --> 00:36:08,480
um yeah so we must have the queue after

965
00:36:08,480 --> 00:36:09,920
jonathan

966
00:36:09,920 --> 00:36:12,800
just done your the uh point about the

967
00:36:12,800 --> 00:36:13,839
replay attacks

968
00:36:13,839 --> 00:36:16,400
it seems like if i'm understanding this

969
00:36:16,400 --> 00:36:17,599
properly

970
00:36:17,599 --> 00:36:19,760
cases like dns replay attacks are not a

971
00:36:19,760 --> 00:36:21,280
consideration because they're important

972
00:36:21,280 --> 00:36:23,440
requests anyway is that true or am i

973
00:36:23,440 --> 00:36:24,800
missing something so it could be that

974
00:36:24,800 --> 00:36:26,240
your solution to replay taxes for this

975
00:36:26,240 --> 00:36:28,720
case because i don't care

976
00:36:28,720 --> 00:36:30,160
that is going to be the case for a lot

977
00:36:30,160 --> 00:36:31,839
of these scenarios so

978
00:36:31,839 --> 00:36:33,760
um if you imagine this is simple

979
00:36:33,760 --> 00:36:35,520
information retrieval which is what dns

980
00:36:35,520 --> 00:36:36,079
is

981
00:36:36,079 --> 00:36:38,960
then um your response might well be i i

982
00:36:38,960 --> 00:36:40,240
don't care

983
00:36:40,240 --> 00:36:41,680
it's a little more interesting when it

984
00:36:41,680 --> 00:36:43,200
comes to things like telemetry

985
00:36:43,200 --> 00:36:44,560
submission you have to have a

986
00:36:44,560 --> 00:36:48,160
structure in place to to ensure that

987
00:36:48,160 --> 00:36:50,560
a replay doesn't result in multiple uh

988
00:36:50,560 --> 00:36:51,680
submissions

989
00:36:51,680 --> 00:36:53,520
but those are relatively straightforward

990
00:36:53,520 --> 00:36:54,720
to to build

991
00:36:54,720 --> 00:36:58,000
but for things like that it does

992
00:36:58,000 --> 00:37:00,160
sort of limit what you can do with the

993
00:37:00,160 --> 00:37:02,960
mechanism though

994
00:37:05,599 --> 00:37:09,119
right thank you so the chat has been

995
00:37:09,119 --> 00:37:10,880
very active it seems like there's quite

996
00:37:10,880 --> 00:37:12,800
a bit of support for this to move

997
00:37:12,800 --> 00:37:13,359
forward

998
00:37:13,359 --> 00:37:16,400
as a short-lived and and

999
00:37:16,400 --> 00:37:18,079
yes there's lots of comments on on

1000
00:37:18,079 --> 00:37:20,480
short-lived working groups in the ietf

1001
00:37:20,480 --> 00:37:22,720
let's assume a short-lived working group

1002
00:37:22,720 --> 00:37:24,720
and the home would be determined by the

1003
00:37:24,720 --> 00:37:26,160
ads

1004
00:37:26,160 --> 00:37:27,359
because there will have to be some

1005
00:37:27,359 --> 00:37:30,560
coordination between second and art

1006
00:37:30,560 --> 00:37:32,320
i'm just going to run a quick poll to

1007
00:37:32,320 --> 00:37:37,839
see if anyone's opposed

1008
00:37:43,839 --> 00:37:46,880
this will give you a minute

1009
00:37:49,599 --> 00:37:53,359
is is is ray's hand opposed

1010
00:37:53,359 --> 00:37:55,200
yes ray's hand is supposed this is very

1011
00:37:55,200 --> 00:37:56,560
confusingly worded

1012
00:37:56,560 --> 00:37:59,119
i recommend all polls in the positive

1013
00:37:59,119 --> 00:38:00,640
sense

1014
00:38:00,640 --> 00:38:03,520
because i raised hand because i was i

1015
00:38:03,520 --> 00:38:05,200
had started doing it in the positive and

1016
00:38:05,200 --> 00:38:05,680
then

1017
00:38:05,680 --> 00:38:07,520
the chairs behind the scenes said let's

1018
00:38:07,520 --> 00:38:10,960
just see if there's opposition

1019
00:38:12,400 --> 00:38:14,800
because it seems pretty unanimous all

1020
00:38:14,800 --> 00:38:19,839
right so

1021
00:38:21,040 --> 00:38:22,400
i'll let this run just a little bit

1022
00:38:22,400 --> 00:38:24,800
longer while that's running

1023
00:38:24,800 --> 00:38:29,839
um well i suppose i'd like to hear what

1024
00:38:29,839 --> 00:38:31,280
i'd be happy if they if they're up for

1025
00:38:31,280 --> 00:38:32,960
talking about it i'd be happy to hear

1026
00:38:32,960 --> 00:38:35,200
why

1027
00:38:38,160 --> 00:38:40,480
okay so it seems there are two people

1028
00:38:40,480 --> 00:38:41,359
opposed

1029
00:38:41,359 --> 00:38:44,800
i will end the poll and then i

1030
00:38:44,800 --> 00:38:48,160
agree it would be good to hear

1031
00:38:50,160 --> 00:38:52,800
so we do have someone in queue kirsty go

1032
00:38:52,800 --> 00:38:54,160
ahead

1033
00:38:54,160 --> 00:38:55,359
thanks yeah i'm just waiting to be

1034
00:38:55,359 --> 00:38:57,760
invited um yeah i was just wondering if

1035
00:38:57,760 --> 00:38:59,119
it's short-lived working group but that

1036
00:38:59,119 --> 00:39:00,480
would come with a buff

1037
00:39:00,480 --> 00:39:02,640
of like deciding what's in and out scope

1038
00:39:02,640 --> 00:39:03,839
for the group i

1039
00:39:03,839 --> 00:39:05,200
personally don't feel like i have a good

1040
00:39:05,200 --> 00:39:06,880
enough sense of

1041
00:39:06,880 --> 00:39:09,520
it like how yeah how much is in and out

1042
00:39:09,520 --> 00:39:10,480
of scope for this

1043
00:39:10,480 --> 00:39:12,800
problem um if it is a really tightly

1044
00:39:12,800 --> 00:39:14,720
scoped we're not going to talk about

1045
00:39:14,720 --> 00:39:16,480
discovery of proxies or anything like

1046
00:39:16,480 --> 00:39:17,440
that and it's just

1047
00:39:17,440 --> 00:39:19,760
standardizing the protocol rather than

1048
00:39:19,760 --> 00:39:21,119
any of that other stuff

1049
00:39:21,119 --> 00:39:24,480
so it's just a question um if that's

1050
00:39:24,480 --> 00:39:26,000
included in support for a

1051
00:39:26,000 --> 00:39:27,200
short-lived working group but it would

1052
00:39:27,200 --> 00:39:29,280
be like a discussion about charter and

1053
00:39:29,280 --> 00:39:31,119
scope

1054
00:39:31,119 --> 00:39:33,440
yeah i think what i had in mind was the

1055
00:39:33,440 --> 00:39:34,720
tight scope that martin had

1056
00:39:34,720 --> 00:39:36,400
on his last slide just focusing on the

1057
00:39:36,400 --> 00:39:38,000
protocol as opposed to all the discovery

1058
00:39:38,000 --> 00:39:39,440
aspects and how you would instantiate

1059
00:39:39,440 --> 00:39:40,400
this

1060
00:39:40,400 --> 00:39:42,320
um and i was thinking we would workshop

1061
00:39:42,320 --> 00:39:43,599
the charter on the second dispatch

1062
00:39:43,599 --> 00:39:44,960
mailing list to give people a chance to

1063
00:39:44,960 --> 00:39:46,240
comment on that before we

1064
00:39:46,240 --> 00:39:47,760
uh final send out for last call and

1065
00:39:47,760 --> 00:39:50,560
finalization um i would also throw in as

1066
00:39:50,560 --> 00:39:52,240
a scoping question

1067
00:39:52,240 --> 00:39:53,839
whether we might want to include a

1068
00:39:53,839 --> 00:39:55,680
deliverable um

1069
00:39:55,680 --> 00:39:57,839
some sort of like systematization uh

1070
00:39:57,839 --> 00:39:58,960
documents i'm

1071
00:39:58,960 --> 00:40:00,079
talking about some of these security

1072
00:40:00,079 --> 00:40:01,599
properties you know what happens

1073
00:40:01,599 --> 00:40:02,800
depending on your selection how does

1074
00:40:02,800 --> 00:40:03,119
this

1075
00:40:03,119 --> 00:40:04,880
you know what how does this relate to

1076
00:40:04,880 --> 00:40:06,560
other um

1077
00:40:06,560 --> 00:40:08,079
intermediation protocols things like

1078
00:40:08,079 --> 00:40:10,240
that but that's not at all clear that

1079
00:40:10,240 --> 00:40:11,920
belongs in scope um so i'm happy to

1080
00:40:11,920 --> 00:40:14,640
debate that on the mailing list

1081
00:40:14,640 --> 00:40:16,640
okay yeah thanks for the clarification i

1082
00:40:16,640 --> 00:40:18,480
think that sounds like a good suggestion

1083
00:40:18,480 --> 00:40:19,200
to me

1084
00:40:19,200 --> 00:40:21,520
thanks

1085
00:40:22,400 --> 00:40:26,800
thank you any other concerns with that

1086
00:40:26,800 --> 00:40:28,880
outcome

1087
00:40:28,880 --> 00:40:31,599
hi so i'm just jumping on to confirm

1088
00:40:31,599 --> 00:40:32,000
that

1089
00:40:32,000 --> 00:40:33,520
ben and i have caught the action we're

1090
00:40:33,520 --> 00:40:35,040
going to coordinate with the

1091
00:40:35,040 --> 00:40:37,280
other areas to figure out what the right

1092
00:40:37,280 --> 00:40:38,640
formula is to mix

1093
00:40:38,640 --> 00:40:40,880
what area with what responsible id with

1094
00:40:40,880 --> 00:40:42,240
what composition of the working group

1095
00:40:42,240 --> 00:40:44,000
shares to make sure we get the right

1096
00:40:44,000 --> 00:40:45,920
cross area oversight

1097
00:40:45,920 --> 00:40:47,119
because i think that's absolutely kind

1098
00:40:47,119 --> 00:40:48,400
of the right thing to do and we saw a

1099
00:40:48,400 --> 00:40:50,160
lot of discussion about that in the chat

1100
00:40:50,160 --> 00:40:53,839
thank you

1101
00:40:57,040 --> 00:40:59,920
all right thanks everyone for your input

1102
00:40:59,920 --> 00:41:01,359
i think we can consider that one

1103
00:41:01,359 --> 00:41:02,880
dispatched and thank you martin for the

1104
00:41:02,880 --> 00:41:05,440
presentation

1105
00:41:05,680 --> 00:41:08,400
so with that i think we are done with

1106
00:41:08,400 --> 00:41:08,800
our

1107
00:41:08,800 --> 00:41:11,839
first uh topic of the meeting and we are

1108
00:41:11,839 --> 00:41:12,560
on to

1109
00:41:12,560 --> 00:41:14,640
uh your own talking about a common

1110
00:41:14,640 --> 00:41:17,520
ciphertext format

1111
00:41:17,680 --> 00:41:21,440
thank you excellent i do assume

1112
00:41:21,440 --> 00:41:24,160
you can hear me

1113
00:41:27,040 --> 00:41:30,319
yes thank you go ahead

1114
00:41:30,319 --> 00:41:33,839
okay uh so i'm iron chef this is joint

1115
00:41:33,839 --> 00:41:36,240
work with uh glebka salman and

1116
00:41:36,240 --> 00:41:40,319
joshner and this is a proposal

1117
00:41:40,319 --> 00:41:44,560
for a generic ciphertext

1118
00:41:44,560 --> 00:41:48,720
metadata format and

1119
00:41:48,720 --> 00:41:51,920
if you remember anything out of this is

1120
00:41:51,920 --> 00:41:53,680
that we're talking about

1121
00:41:53,680 --> 00:41:57,359
a data encrypted address

1122
00:41:57,359 --> 00:41:59,920
so we're not talking about data on the

1123
00:41:59,920 --> 00:42:00,480
wire

1124
00:42:00,480 --> 00:42:04,880
unlike most encryption work in the ietf

1125
00:42:04,880 --> 00:42:08,319
we're talking about encryption address

1126
00:42:08,319 --> 00:42:10,960
next slide

1127
00:42:14,240 --> 00:42:18,479
thank you so

1128
00:42:18,640 --> 00:42:21,920
documents that define encryption

1129
00:42:21,920 --> 00:42:26,079
or ciphers or algorithms often define

1130
00:42:26,079 --> 00:42:29,200
the format of the output that's

1131
00:42:29,200 --> 00:42:32,640
clear and simple but that's

1132
00:42:32,640 --> 00:42:36,160
the bare minimum it's not what you need

1133
00:42:36,160 --> 00:42:36,640
if

1134
00:42:36,640 --> 00:42:40,160
if you are to manage uh

1135
00:42:40,160 --> 00:42:43,839
huge amounts of ciphertext so stored

1136
00:42:43,839 --> 00:42:45,359
addressed

1137
00:42:45,359 --> 00:42:48,800
basically all over your data stores

1138
00:42:48,800 --> 00:42:53,599
stored in databases stored in data lakes

1139
00:42:54,319 --> 00:42:58,000
stored in the data mods and

1140
00:42:58,000 --> 00:43:01,280
all sorts of of places where people

1141
00:43:01,280 --> 00:43:05,839
keep data including sensitive data

1142
00:43:05,839 --> 00:43:08,960
um in the the point

1143
00:43:08,960 --> 00:43:13,119
to remember is that

1144
00:43:13,119 --> 00:43:17,119
we actually have three personas

1145
00:43:17,119 --> 00:43:20,000
not just whoever creates and encrypts

1146
00:43:20,000 --> 00:43:20,960
the data

1147
00:43:20,960 --> 00:43:23,920
and whoever decrypts the data that's

1148
00:43:23,920 --> 00:43:25,119
clear

1149
00:43:25,119 --> 00:43:27,839
but we also have a third persona which

1150
00:43:27,839 --> 00:43:29,200
is a data

1151
00:43:29,200 --> 00:43:32,640
a suite of data governance tools

1152
00:43:32,640 --> 00:43:35,839
people who manage data at scale need to

1153
00:43:35,839 --> 00:43:39,680
need to have tools for that um

1154
00:43:39,680 --> 00:43:42,720
and they will go into details

1155
00:43:42,720 --> 00:43:46,160
in the next slide um

1156
00:43:46,160 --> 00:43:49,520
but to enable er

1157
00:43:49,520 --> 00:43:52,880
to manage encrypted data

1158
00:43:52,880 --> 00:43:56,720
we will need uh to define ciphertext

1159
00:43:56,720 --> 00:43:58,000
metadata

1160
00:43:58,000 --> 00:44:01,920
that can be handled by multiple tools

1161
00:44:01,920 --> 00:44:06,160
and so the basic thing you need is

1162
00:44:06,160 --> 00:44:09,599
a key identity and probably a key

1163
00:44:09,599 --> 00:44:11,040
version

1164
00:44:11,040 --> 00:44:14,240
just so that you can go back and decrypt

1165
00:44:14,240 --> 00:44:16,879
the data

1166
00:44:16,960 --> 00:44:21,119
but this needs to be extensible

1167
00:44:21,119 --> 00:44:23,359
people people have different

1168
00:44:23,359 --> 00:44:25,040
requirements

1169
00:44:25,040 --> 00:44:29,119
when encrypting data at scale people

1170
00:44:29,119 --> 00:44:33,040
for example apply key wrapping

1171
00:44:33,040 --> 00:44:36,560
and key derivation and those require

1172
00:44:36,560 --> 00:44:38,800
additional information that's often

1173
00:44:38,800 --> 00:44:39,599
stored

1174
00:44:39,599 --> 00:44:42,640
with a ciphertext so all of that

1175
00:44:42,640 --> 00:44:45,760
accumulates all of that needs to be

1176
00:44:45,760 --> 00:44:49,839
uh interoperable

1177
00:44:49,839 --> 00:44:52,480
all of that needs to be efficient

1178
00:44:52,480 --> 00:44:54,160
because we are talking

1179
00:44:54,160 --> 00:44:57,200
large amounts of data um

1180
00:44:57,200 --> 00:45:01,599
so even though storage is cheap nowadays

1181
00:45:01,599 --> 00:45:05,119
this gets this becomes uh

1182
00:45:05,119 --> 00:45:09,040
expensive as it accumulates

1183
00:45:09,040 --> 00:45:12,240
and what we need to enable

1184
00:45:12,240 --> 00:45:15,440
is both detection and attribution

1185
00:45:15,440 --> 00:45:19,440
of ciphertext and on the next slide

1186
00:45:19,440 --> 00:45:22,480
please i will explain what we mean by

1187
00:45:22,480 --> 00:45:23,359
detection

1188
00:45:23,359 --> 00:45:26,400
and attribution

1189
00:45:26,480 --> 00:45:30,240
so typically when you manage

1190
00:45:30,240 --> 00:45:33,520
such amounts of data you need to

1191
00:45:33,520 --> 00:45:37,839
scan the data regularly

1192
00:45:38,800 --> 00:45:42,000
people classify the data

1193
00:45:42,000 --> 00:45:43,960
big enterprises often have

1194
00:45:43,960 --> 00:45:45,200
classification

1195
00:45:45,200 --> 00:45:48,400
schemes what is more sensitive what is

1196
00:45:48,400 --> 00:45:49,920
less sensitive

1197
00:45:49,920 --> 00:45:53,640
and they want to find out if

1198
00:45:53,640 --> 00:45:58,240
misclassified data is making its way

1199
00:45:58,240 --> 00:46:01,599
to to data stores where it doesn't

1200
00:46:01,599 --> 00:46:03,040
belong

1201
00:46:03,040 --> 00:46:07,359
um people want to look at data

1202
00:46:07,359 --> 00:46:10,400
and check for data quality

1203
00:46:10,400 --> 00:46:14,319
so whether data is in line with

1204
00:46:14,319 --> 00:46:18,400
internal data models

1205
00:46:18,400 --> 00:46:21,839
or just using the right formats

1206
00:46:21,839 --> 00:46:23,839
that are used across across the

1207
00:46:23,839 --> 00:46:26,560
enterprise

1208
00:46:26,839 --> 00:46:28,720
and

1209
00:46:28,720 --> 00:46:32,960
often it's it's really important uh

1210
00:46:32,960 --> 00:46:36,800
specifically to detect pii

1211
00:46:36,800 --> 00:46:40,640
so oh personally identifiable

1212
00:46:40,640 --> 00:46:41,599
information

1213
00:46:41,599 --> 00:46:46,160
so sensitive data

1214
00:46:46,640 --> 00:46:49,760
now when you scan

1215
00:46:49,760 --> 00:46:52,960
data at a very large scale and a

1216
00:46:52,960 --> 00:46:55,760
large percentage or a significant

1217
00:46:55,760 --> 00:46:57,359
percentage

1218
00:46:57,359 --> 00:47:01,760
is encrypted the basic requirement

1219
00:47:01,760 --> 00:47:05,040
is that you can

1220
00:47:06,640 --> 00:47:10,720
with a high probability detect

1221
00:47:10,720 --> 00:47:14,000
what is what is encrypted so you need to

1222
00:47:14,000 --> 00:47:15,359
have a format

1223
00:47:15,359 --> 00:47:18,400
that can be recognized across

1224
00:47:18,400 --> 00:47:22,800
the enterprise or across the data store

1225
00:47:22,800 --> 00:47:25,839
so that you know

1226
00:47:26,160 --> 00:47:30,640
what data is encrypted and then

1227
00:47:30,640 --> 00:47:33,920
you you want to have the next step

1228
00:47:33,920 --> 00:47:37,119
uh so uh like

1229
00:47:37,119 --> 00:47:39,200
which key management system is

1230
00:47:39,200 --> 00:47:41,440
responsible for this data

1231
00:47:41,440 --> 00:47:45,119
or perhaps what uh what specific key

1232
00:47:45,119 --> 00:47:49,520
has been used for this data to go

1233
00:47:49,520 --> 00:47:52,880
so so that if the data needs to be

1234
00:47:52,880 --> 00:47:56,240
uh decrypted it can be acted

1235
00:47:56,240 --> 00:47:59,440
upon but

1236
00:47:59,440 --> 00:48:03,119
even before decryption

1237
00:48:03,200 --> 00:48:06,880
the the the two requirements

1238
00:48:06,880 --> 00:48:10,559
are to detect and identify encrypted

1239
00:48:10,559 --> 00:48:11,599
data

1240
00:48:11,599 --> 00:48:15,359
and to attribute data back to who

1241
00:48:15,359 --> 00:48:19,599
owns it so that again

1242
00:48:19,599 --> 00:48:25,359
if data access needs to be granted

1243
00:48:25,440 --> 00:48:28,720
the the person who is looking or the

1244
00:48:28,720 --> 00:48:29,119
tool

1245
00:48:29,119 --> 00:48:33,200
that's looking at the data can know

1246
00:48:33,200 --> 00:48:36,400
who owns the data and who is responsible

1247
00:48:36,400 --> 00:48:37,440
to grant

1248
00:48:37,440 --> 00:48:40,480
access into the encrypted data

1249
00:48:40,480 --> 00:48:43,119
next slide

1250
00:48:45,520 --> 00:48:47,920
so we started with this set of

1251
00:48:47,920 --> 00:48:49,520
requirements

1252
00:48:49,520 --> 00:48:54,559
and ended up with a rather simple

1253
00:48:54,559 --> 00:48:57,920
header format that

1254
00:48:57,920 --> 00:49:02,400
we proposed to use for for ciphertext

1255
00:49:02,400 --> 00:49:05,520
and it consists of a very short

1256
00:49:05,520 --> 00:49:09,359
two by two octet uh fixed header

1257
00:49:09,359 --> 00:49:12,400
uh followed by a variable length

1258
00:49:12,400 --> 00:49:15,440
uh additional header that's expressed as

1259
00:49:15,440 --> 00:49:16,319
sibo

1260
00:49:16,319 --> 00:49:20,240
we started off with generic tlv

1261
00:49:20,240 --> 00:49:22,720
then we got the feedback that instead of

1262
00:49:22,720 --> 00:49:24,319
reinventing tlv

1263
00:49:24,319 --> 00:49:27,280
and various ways of optimizing and

1264
00:49:27,280 --> 00:49:29,200
improving until we

1265
00:49:29,200 --> 00:49:32,559
why not just use sibo and obviously

1266
00:49:32,559 --> 00:49:33,119
that's

1267
00:49:33,119 --> 00:49:36,160
the right thing to do

1268
00:49:36,240 --> 00:49:40,160
so the current version zero one

1269
00:49:40,160 --> 00:49:43,520
uses sibo and

1270
00:49:43,520 --> 00:49:46,880
on the next slide uh

1271
00:49:46,880 --> 00:49:50,559
some some more details of what this

1272
00:49:50,559 --> 00:49:54,720
sibo is so next slide please

1273
00:49:55,680 --> 00:50:00,240
uh we are using the the cddl

1274
00:50:00,240 --> 00:50:02,960
definition language but never mind the

1275
00:50:02,960 --> 00:50:04,880
language itself

1276
00:50:04,880 --> 00:50:07,119
i think even if you're not familiar with

1277
00:50:07,119 --> 00:50:08,240
cddl it's

1278
00:50:08,240 --> 00:50:10,960
it's quite clear what we have here so we

1279
00:50:10,960 --> 00:50:12,640
have two

1280
00:50:12,640 --> 00:50:16,960
uh data items that are mandatory

1281
00:50:16,960 --> 00:50:20,000
the key provider and the key id one is a

1282
00:50:20,000 --> 00:50:23,839
an unsigned integer one is a byte string

1283
00:50:23,839 --> 00:50:27,520
and this is followed by a collection

1284
00:50:27,520 --> 00:50:30,720
of uh of

1285
00:50:30,720 --> 00:50:33,599
other either integer or byte string

1286
00:50:33,599 --> 00:50:36,240
attributes

1287
00:50:37,200 --> 00:50:41,119
the two the two mandatory fields

1288
00:50:41,119 --> 00:50:42,640
obviously the most

1289
00:50:42,640 --> 00:50:46,160
important uh what what

1290
00:50:46,160 --> 00:50:49,040
is the key management system that owns

1291
00:50:49,040 --> 00:50:49,680
the key

1292
00:50:49,680 --> 00:50:53,040
or who should they go to ask for more

1293
00:50:53,040 --> 00:50:54,000
details

1294
00:50:54,000 --> 00:50:57,280
about this piece of data and then a key

1295
00:50:57,280 --> 00:50:58,559
identity

1296
00:50:58,559 --> 00:51:01,520
that you can hand over to this key

1297
00:51:01,520 --> 00:51:03,280
management system

1298
00:51:03,280 --> 00:51:06,400
and it will do its thing

1299
00:51:06,400 --> 00:51:09,839
and then additional details that you

1300
00:51:09,839 --> 00:51:11,599
might want to have

1301
00:51:11,599 --> 00:51:15,200
is a key version number uh which is the

1302
00:51:15,200 --> 00:51:16,400
simplest way to

1303
00:51:16,400 --> 00:51:19,520
to enable key rotation uh

1304
00:51:19,520 --> 00:51:23,599
on on data addressed auxiliary data

1305
00:51:23,599 --> 00:51:25,440
that you can use for either key

1306
00:51:25,440 --> 00:51:26,720
derivation

1307
00:51:26,720 --> 00:51:30,480
or key wrapping and three

1308
00:51:30,480 --> 00:51:33,920
fields that are useful when

1309
00:51:33,920 --> 00:51:38,319
when you when you're doing aead

1310
00:51:38,319 --> 00:51:42,160
for for the data trust um

1311
00:51:42,160 --> 00:51:45,520
so so again the the format

1312
00:51:45,520 --> 00:51:48,640
is two octets followed by

1313
00:51:48,640 --> 00:51:51,920
a very simple tlv structure

1314
00:51:51,920 --> 00:51:58,160
simple yet flexible and also extensible

1315
00:51:58,640 --> 00:52:02,720
and the reason why

1316
00:52:02,960 --> 00:52:06,359
this actually needs to be

1317
00:52:06,359 --> 00:52:09,839
standardized if it was clear

1318
00:52:09,839 --> 00:52:13,040
is that um often

1319
00:52:13,040 --> 00:52:16,000
large enterprises use key management

1320
00:52:16,000 --> 00:52:16,960
coming from

1321
00:52:16,960 --> 00:52:19,839
different windows different cloud cloud

1322
00:52:19,839 --> 00:52:21,520
providers

1323
00:52:21,520 --> 00:52:24,800
um and then the different encryption

1324
00:52:24,800 --> 00:52:26,720
libraries coming from

1325
00:52:26,720 --> 00:52:30,880
here and there and the more we can have

1326
00:52:30,880 --> 00:52:32,960
it standardized

1327
00:52:32,960 --> 00:52:36,240
the more we can streamline

1328
00:52:36,240 --> 00:52:40,160
management of a very diverse and

1329
00:52:40,160 --> 00:52:43,440
and complicated data stores

1330
00:52:43,440 --> 00:52:47,839
and next slide

1331
00:52:49,359 --> 00:52:53,599
so speaking of implementations

1332
00:52:53,599 --> 00:52:56,800
my own company into it implements a

1333
00:52:56,800 --> 00:53:00,559
similar format

1334
00:53:00,559 --> 00:53:04,640
internally and not specifically the one

1335
00:53:04,640 --> 00:53:05,599
we

1336
00:53:05,599 --> 00:53:08,880
we specify here uh but

1337
00:53:08,880 --> 00:53:12,160
a similar one and where we have been

1338
00:53:12,160 --> 00:53:13,920
using it

1339
00:53:13,920 --> 00:53:18,800
for very very significant amounts

1340
00:53:18,800 --> 00:53:22,480
of data across the enterprise and then

1341
00:53:22,480 --> 00:53:27,119
just two examples of cloud providers

1342
00:53:27,119 --> 00:53:30,960
that define their own encryption

1343
00:53:30,960 --> 00:53:34,160
or ciphertext formats uh amazon web

1344
00:53:34,160 --> 00:53:36,240
services and google

1345
00:53:36,240 --> 00:53:39,760
each defining its own format that's

1346
00:53:39,760 --> 00:53:43,440
somewhat similar if you squint to this

1347
00:53:43,440 --> 00:53:46,400
to this format but obviously not

1348
00:53:46,400 --> 00:53:48,480
interoperable

1349
00:53:48,480 --> 00:53:52,319
and so i think that that shows that

1350
00:53:52,319 --> 00:53:56,400
the need exists and i suggest that

1351
00:53:56,400 --> 00:54:00,720
that we take it on um

1352
00:54:00,720 --> 00:54:03,839
and so what we would like to see

1353
00:54:03,839 --> 00:54:08,240
is a very narrow scoped a working group

1354
00:54:08,240 --> 00:54:11,280
to take on this work uh

1355
00:54:11,280 --> 00:54:14,640
working uh very specifically on the

1356
00:54:14,640 --> 00:54:16,720
format

1357
00:54:16,720 --> 00:54:20,640
and nothing else and

1358
00:54:20,640 --> 00:54:25,839
that's it i'll take questions

1359
00:54:28,960 --> 00:54:33,040
all right watson some lad cloudflare

1360
00:54:33,040 --> 00:54:36,799
this seems like a uh xccd 997

1361
00:54:36,799 --> 00:54:38,880
issue if all these incompatible formats

1362
00:54:38,880 --> 00:54:40,400
and i are saying okay let's make one

1363
00:54:40,400 --> 00:54:42,559
format to unify them all

1364
00:54:42,559 --> 00:54:45,280
that does a bunch of things for each one

1365
00:54:45,280 --> 00:54:47,040
why isn't that just going to lead to

1366
00:54:47,040 --> 00:54:49,680
okay there's another format and it's

1367
00:54:49,680 --> 00:54:51,040
incompatible with all the others and

1368
00:54:51,040 --> 00:54:54,240
people haven't switched to it

1369
00:54:54,559 --> 00:54:57,119
it could just just like any other

1370
00:54:57,119 --> 00:54:58,240
standard

1371
00:54:58,240 --> 00:55:00,640
of course

1372
00:55:02,000 --> 00:55:03,839
if it's good enough if it's useful

1373
00:55:03,839 --> 00:55:05,200
enough

1374
00:55:05,200 --> 00:55:08,799
hopefully it will be taken on

1375
00:55:14,240 --> 00:55:18,400
okay so so i'm also

1376
00:55:18,400 --> 00:55:21,599
confused it seems to me we have like

1377
00:55:21,599 --> 00:55:24,720
already formats that like allow you to

1378
00:55:24,720 --> 00:55:26,400
encrypt things with fixed keys

1379
00:55:26,400 --> 00:55:27,839
and allow you to have identities for

1380
00:55:27,839 --> 00:55:29,520
those keys and describe the

1381
00:55:29,520 --> 00:55:31,520
algorithms like cos a is one such one as

1382
00:55:31,520 --> 00:55:34,079
is jose as for that since the cms

1383
00:55:34,079 --> 00:55:36,559
so like i don't i guess i don't quite

1384
00:55:36,559 --> 00:55:37,359
understand what

1385
00:55:37,359 --> 00:55:39,920
like like what are we bringing to the

1386
00:55:39,920 --> 00:55:43,119
party here what does it bring the party

1387
00:55:43,200 --> 00:55:49,839
so both codes and and certainly cms

1388
00:55:51,839 --> 00:55:55,200
are aimed at a different use case

1389
00:55:55,200 --> 00:55:58,640
here we put a very strong

1390
00:55:58,640 --> 00:56:02,319
focus on on efficiency

1391
00:56:02,319 --> 00:56:06,400
for data at rest where each piece of

1392
00:56:06,400 --> 00:56:07,040
data

1393
00:56:07,040 --> 00:56:10,960
needs to be handled separately

1394
00:56:10,960 --> 00:56:15,920
and so every byte counts

1395
00:56:15,920 --> 00:56:19,520
i don't think this is uh true to this

1396
00:56:19,520 --> 00:56:20,720
extent

1397
00:56:20,720 --> 00:56:24,000
uh focus

1398
00:56:24,640 --> 00:56:27,839
because i was was envisioned or

1399
00:56:27,839 --> 00:56:31,680
is envisioned as a solution

1400
00:56:31,680 --> 00:56:35,200
for for data and transit and

1401
00:56:35,200 --> 00:56:38,559
has a different uh

1402
00:56:38,559 --> 00:56:40,559
different require a different set of

1403
00:56:40,559 --> 00:56:43,040
requirements

1404
00:56:43,040 --> 00:56:44,240
okay well then i think the place to

1405
00:56:44,240 --> 00:56:45,839
start would be not with a proposal but

1406
00:56:45,839 --> 00:56:48,079
with an enumeration of the requirements

1407
00:56:48,079 --> 00:56:50,160
and how and how busy conclusions don't

1408
00:56:50,160 --> 00:56:52,240
meet them but i will say that like

1409
00:56:52,240 --> 00:56:54,880
when i hear like things are too big um

1410
00:56:54,880 --> 00:56:56,559
i'm automatically suspicious

1411
00:56:56,559 --> 00:56:58,720
until i see some very strong um evidence

1412
00:56:58,720 --> 00:57:00,160
that life i think is what the overhead

1413
00:57:00,160 --> 00:57:01,440
we're talking is really too big

1414
00:57:01,440 --> 00:57:03,599
your average like you know when things

1415
00:57:03,599 --> 00:57:05,040
are encrypted like that off tags out a

1416
00:57:05,040 --> 00:57:05,920
lot of data

1417
00:57:05,920 --> 00:57:08,240
and a lot of space that that nonsense a

1418
00:57:08,240 --> 00:57:09,280
lot of space

1419
00:57:09,280 --> 00:57:12,400
like as a practical matter like you know

1420
00:57:12,400 --> 00:57:15,119
um i i'm not persuaded that the the

1421
00:57:15,119 --> 00:57:15,839
overhead of co

1422
00:57:15,839 --> 00:57:16,880
because you're wrapping is going to be

1423
00:57:16,880 --> 00:57:19,119
too big um so

1424
00:57:19,119 --> 00:57:20,960
um until i saw that i would not be in

1425
00:57:20,960 --> 00:57:22,319
favor of this um

1426
00:57:22,319 --> 00:57:26,960
more strictly um on a central question

1427
00:57:26,960 --> 00:57:29,359
does something bind this header to the

1428
00:57:29,359 --> 00:57:31,599
content

1429
00:57:31,599 --> 00:57:34,000
so that's a very good question our

1430
00:57:34,000 --> 00:57:35,200
current thinking

1431
00:57:35,200 --> 00:57:39,440
is no but

1432
00:57:39,440 --> 00:57:42,640
we leave it open and this is something

1433
00:57:42,640 --> 00:57:43,200
that the

1434
00:57:43,200 --> 00:57:45,599
working group will need to decide on

1435
00:57:45,599 --> 00:57:46,400
whether it's

1436
00:57:46,400 --> 00:57:49,440
mandatory whether it's per data item

1437
00:57:49,440 --> 00:57:52,480
and so on right well this seems like a

1438
00:57:52,480 --> 00:57:54,240
great opportunity to re to remake all

1439
00:57:54,240 --> 00:57:55,599
the errors that people

1440
00:57:55,599 --> 00:57:58,559
made with previous formats um so anyway

1441
00:57:58,559 --> 00:57:58,960
um

1442
00:57:58,960 --> 00:58:01,040
this is a the dispatch question special

1443
00:58:01,040 --> 00:58:02,400
question um i don't think we should do

1444
00:58:02,400 --> 00:58:08,799
this so i've said a lot more evidence

1445
00:58:08,799 --> 00:58:11,839
uh this is daniel gilmore um with the

1446
00:58:11,839 --> 00:58:12,720
aclu

1447
00:58:12,720 --> 00:58:14,559
also co-chair of the open pgp working

1448
00:58:14,559 --> 00:58:16,640
group just wanted to add to the list of

1449
00:58:16,640 --> 00:58:18,079
uh standards that this seems to

1450
00:58:18,079 --> 00:58:19,680
potentially duplicate which includes

1451
00:58:19,680 --> 00:58:20,960
open pgp

1452
00:58:20,960 --> 00:58:24,000
which is actually designed for data at

1453
00:58:24,000 --> 00:58:24,400
rest

1454
00:58:24,400 --> 00:58:27,440
not just data in transit um so again the

1455
00:58:27,440 --> 00:58:29,839
the gap analysis would be useful if this

1456
00:58:29,839 --> 00:58:31,359
is actually doing proposed work i also

1457
00:58:31,359 --> 00:58:32,720
want to put a bit of a challenge

1458
00:58:32,720 --> 00:58:34,880
to one of the proposed justifications

1459
00:58:34,880 --> 00:58:35,839
here

1460
00:58:35,839 --> 00:58:37,839
the claim that we need to tag data that

1461
00:58:37,839 --> 00:58:38,960
is pii

1462
00:58:38,960 --> 00:58:42,079
versus not pii i find that dubious i

1463
00:58:42,079 --> 00:58:43,760
think the whole term pii is actually

1464
00:58:43,760 --> 00:58:44,880
pretty dubious because

1465
00:58:44,880 --> 00:58:47,839
information is personally identifiable

1466
00:58:47,839 --> 00:58:49,440
in combination with other pieces of

1467
00:58:49,440 --> 00:58:50,319
information

1468
00:58:50,319 --> 00:58:51,599
and that's incredibly difficult to

1469
00:58:51,599 --> 00:58:54,160
determine even when you have clear text

1470
00:58:54,160 --> 00:58:55,839
i don't think that a simple flag on the

1471
00:58:55,839 --> 00:58:57,280
outside of a ciphertext packet is

1472
00:58:57,280 --> 00:58:59,040
sufficient to be able to track that sort

1473
00:58:59,040 --> 00:59:00,640
of thing

1474
00:59:00,640 --> 00:59:04,640
and so i'm also similar to ecker before

1475
00:59:04,640 --> 00:59:06,400
very dubious about the usefulness of

1476
00:59:06,400 --> 00:59:08,000
this work um and its ability to

1477
00:59:08,000 --> 00:59:09,520
accomplish the stated goals

1478
00:59:09,520 --> 00:59:12,400
so i would move towards not um putting

1479
00:59:12,400 --> 00:59:13,920
this into the itf unless we have a much

1480
00:59:13,920 --> 00:59:14,960
clearer understanding of what it's

1481
00:59:14,960 --> 00:59:16,000
trying to do and how it's going to

1482
00:59:16,000 --> 00:59:17,680
actually do it

1483
00:59:17,680 --> 00:59:21,359
so so to clarify i wasn't proposing to

1484
00:59:21,359 --> 00:59:24,400
tag information as pii

1485
00:59:24,400 --> 00:59:28,000
i was just giving it as yet another

1486
00:59:28,000 --> 00:59:30,720
reason why people are continuously

1487
00:59:30,720 --> 00:59:32,000
scanning data

1488
00:59:32,000 --> 00:59:35,200
at a very large scale and therefore data

1489
00:59:35,200 --> 00:59:36,640
needs to be

1490
00:59:36,640 --> 00:59:40,079
encrypted data needs to be detectable

1491
00:59:40,079 --> 00:59:43,599
and attributable so but i think

1492
00:59:43,599 --> 00:59:45,920
i think that's not quite clear from your

1493
00:59:45,920 --> 00:59:48,000
presentation it seemed to suggest that

1494
00:59:48,000 --> 00:59:49,839
because people want to know what data is

1495
00:59:49,839 --> 00:59:51,119
pii or not

1496
00:59:51,119 --> 00:59:53,200
they want to be able to index the data

1497
00:59:53,200 --> 00:59:54,880
which in turn actually creates more

1498
00:59:54,880 --> 00:59:56,720
additional trails of identifiable

1499
00:59:56,720 --> 00:59:59,119
information

1500
00:59:59,119 --> 01:00:00,400
it seems a little bit like you are

1501
01:00:00,400 --> 01:00:02,319
reintroducing the problem that it claims

1502
01:00:02,319 --> 01:00:04,160
to solve if the goal is protecting from

1503
01:00:04,160 --> 01:00:05,839
person identifiable data um

1504
01:00:05,839 --> 01:00:07,280
being leaked in certain places right

1505
01:00:07,280 --> 01:00:08,880
you're basically adding pii to the

1506
01:00:08,880 --> 01:00:11,359
outside of the packet

1507
01:00:11,359 --> 01:00:14,640
yeah uh so again no

1508
01:00:14,640 --> 01:00:18,079
i'm not proposing to tag pii

1509
01:00:18,079 --> 01:00:21,839
or to add pii on the outside of the

1510
01:00:21,839 --> 01:00:24,559
of the encrypted data please don't call

1511
01:00:24,559 --> 01:00:26,480
it a packet it is not

1512
01:00:26,480 --> 01:00:29,839
um and but i mean

1513
01:00:29,839 --> 01:00:33,359
a a complete discussion of why people

1514
01:00:33,359 --> 01:00:34,960
are scanning data

1515
01:00:34,960 --> 01:00:38,559
and what it's useful for uh is very

1516
01:00:38,559 --> 01:00:39,359
interesting

1517
01:00:39,359 --> 01:00:43,200
but it's very much outstep outside

1518
01:00:43,200 --> 01:00:45,440
of the scope of this discussion or in

1519
01:00:45,440 --> 01:00:47,040
fact the scope of the

1520
01:00:47,040 --> 01:00:57,040
of the proposal

1521
01:00:57,040 --> 01:01:00,400
hi uh davidskenazi um

1522
01:01:00,400 --> 01:01:02,319
first i want to slightly echo what

1523
01:01:02,319 --> 01:01:03,520
people have

1524
01:01:03,520 --> 01:01:08,000
said before um and but additionally

1525
01:01:08,000 --> 01:01:10,000
it sounds like the problem that you want

1526
01:01:10,000 --> 01:01:11,200
to solve has

1527
01:01:11,200 --> 01:01:13,599
already been solved before uh there

1528
01:01:13,599 --> 01:01:15,760
appear to be open source projects that

1529
01:01:15,760 --> 01:01:18,960
have solved this to some extent and

1530
01:01:18,960 --> 01:01:22,480
i'm not seeing what the role of the itf

1531
01:01:22,480 --> 01:01:24,799
is here like this isn't a networking

1532
01:01:24,799 --> 01:01:27,200
protocol this is a file format

1533
01:01:27,200 --> 01:01:30,400
and i'm not seeing folks

1534
01:01:30,400 --> 01:01:31,839
like who already have let's say their

1535
01:01:31,839 --> 01:01:33,839
own formats lining up to

1536
01:01:33,839 --> 01:01:37,119
say we need something new so unless we

1537
01:01:37,119 --> 01:01:38,000
really have proof

1538
01:01:38,000 --> 01:01:39,839
that there is interest from the

1539
01:01:39,839 --> 01:01:42,240
community here and additionally proof

1540
01:01:42,240 --> 01:01:43,599
that

1541
01:01:43,599 --> 01:01:45,680
this fits into the charter of the itf

1542
01:01:45,680 --> 01:01:47,440
which i'm not seeing

1543
01:01:47,440 --> 01:01:49,200
i don't think we should move forward

1544
01:01:49,200 --> 01:01:51,200
with this i would love to see

1545
01:01:51,200 --> 01:01:55,200
those points elaborated on first

1546
01:01:55,839 --> 01:01:59,839
yeah so just regarding scope

1547
01:01:59,839 --> 01:02:02,640
idea of idf has been doing a lot of work

1548
01:02:02,640 --> 01:02:04,240
that's not directly

1549
01:02:04,240 --> 01:02:07,680
network related i don't think we can

1550
01:02:07,680 --> 01:02:10,880
we can say that json is network related

1551
01:02:10,880 --> 01:02:14,559
unless we screened very very hard

1552
01:02:14,559 --> 01:02:21,839
so yeah

1553
01:02:29,520 --> 01:02:33,280
phil uh yeah i was gonna

1554
01:02:33,280 --> 01:02:36,720
say almost more of the same

1555
01:02:36,720 --> 01:02:39,920
uh a constant anti-pattern that i see in

1556
01:02:39,920 --> 01:02:41,760
standards development

1557
01:02:41,760 --> 01:02:46,079
is people say there are six of those

1558
01:02:46,079 --> 01:02:48,000
let's standardize them and create a

1559
01:02:48,000 --> 01:02:50,240
seventh

1560
01:02:50,240 --> 01:02:53,839
another anti-pattern is and we want to

1561
01:02:53,839 --> 01:02:54,480
focus

1562
01:02:54,480 --> 01:02:59,280
on just this set of concerns

1563
01:02:59,280 --> 01:03:01,520
and i think that that's that that's the

1564
01:03:01,520 --> 01:03:02,960
anti-pattern i'm seeing there the

1565
01:03:02,960 --> 01:03:05,039
combination of those two

1566
01:03:05,039 --> 01:03:08,880
in that this is a very point solution

1567
01:03:08,880 --> 01:03:11,440
to the problem of encryption and i don't

1568
01:03:11,440 --> 01:03:13,520
think that it can

1569
01:03:13,520 --> 01:03:17,200
hope to meet more meet a wide range of

1570
01:03:17,200 --> 01:03:18,960
stuff you know we've got things like

1571
01:03:18,960 --> 01:03:20,559
pks7

1572
01:03:20,559 --> 01:03:23,520
that address a wider the problem in the

1573
01:03:23,520 --> 01:03:24,079
large

1574
01:03:24,079 --> 01:03:27,280
already and i don't see

1575
01:03:27,280 --> 01:03:30,319
how adding another solution that

1576
01:03:30,319 --> 01:03:34,720
only addresses one particular

1577
01:03:34,720 --> 01:03:38,640
niche set of requirements where you want

1578
01:03:38,640 --> 01:03:42,240
it is relevant and in the days when i've

1579
01:03:42,240 --> 01:03:44,799
got 90 terabytes of disks sitting next

1580
01:03:44,799 --> 01:03:46,000
to me

1581
01:03:46,000 --> 01:03:50,000
uh i'm getting really uh skeptical about

1582
01:03:50,000 --> 01:03:51,280
arguments of

1583
01:03:51,280 --> 01:03:54,480
we've got to scrape ever compress every

1584
01:03:54,480 --> 01:03:55,280
bite

1585
01:03:55,280 --> 01:03:58,240
and therefore we need a new standard i

1586
01:03:58,240 --> 01:04:00,640
mean like

1587
01:04:00,640 --> 01:04:02,880
i cannot believe that in the time it

1588
01:04:02,880 --> 01:04:05,039
takes this specification

1589
01:04:05,039 --> 01:04:08,720
to come out that you won't have a disk

1590
01:04:08,720 --> 01:04:09,599
drive

1591
01:04:09,599 --> 01:04:13,200
that can can hold a kilobyte for every

1592
01:04:13,200 --> 01:04:14,079
person

1593
01:04:14,079 --> 01:04:17,599
on the population of the planet so

1594
01:04:17,599 --> 01:04:19,200
i i really just don't get those

1595
01:04:19,200 --> 01:04:22,400
arguments at all sorry

1596
01:04:22,400 --> 01:04:40,880
i'm cool thank you for wat

1597
01:04:40,880 --> 01:04:45,520
uh outcomes the deliverables of the

1598
01:04:45,520 --> 01:04:50,960
itf are not addressing uh this problem

1599
01:04:50,960 --> 01:04:54,960
yeah but i'm

1600
01:04:55,680 --> 01:04:58,720
of whether itf has a spec i mean like

1601
01:04:58,720 --> 01:05:02,079
i don't use cose in my work i never read

1602
01:05:02,079 --> 01:05:03,280
the cosy spec

1603
01:05:03,280 --> 01:05:06,319
because it doesn't address my problems

1604
01:05:06,319 --> 01:05:08,319
i've got a different set of problems and

1605
01:05:08,319 --> 01:05:10,000
it is easier for me

1606
01:05:10,000 --> 01:05:13,280
to generate a new specification that

1607
01:05:13,280 --> 01:05:14,960
actually meets my needs

1608
01:05:14,960 --> 01:05:17,039
than to reuse and i don't see an

1609
01:05:17,039 --> 01:05:20,400
advantage of getting of the reuse

1610
01:05:20,400 --> 01:05:22,720
so this is a specification that if you

1611
01:05:22,720 --> 01:05:24,079
put it in place

1612
01:05:24,079 --> 01:05:27,359
it only becomes an obstacle to my work

1613
01:05:27,359 --> 01:05:27,839
because

1614
01:05:27,839 --> 01:05:30,640
i have to explain to people why i'm not

1615
01:05:30,640 --> 01:05:32,000
going to be doing it

1616
01:05:32,000 --> 01:05:35,039
and the reason is because it's answering

1617
01:05:35,039 --> 01:05:36,240
a set of requirements

1618
01:05:36,240 --> 01:05:41,359
that don't apply to my stuff at all

1619
01:05:43,200 --> 01:05:46,240
this is kathleen without a chair hat on

1620
01:05:46,240 --> 01:05:49,520
um i am curious to hear more on the use

1621
01:05:49,520 --> 01:05:50,240
cases

1622
01:05:50,240 --> 01:05:52,960
just thinking you know i recently left

1623
01:05:52,960 --> 01:05:53,359
dell

1624
01:05:53,359 --> 01:05:56,240
emc and was there a long time so you

1625
01:05:56,240 --> 01:05:57,599
know seeing that there

1626
01:05:57,599 --> 01:06:00,079
is someone from dell on there we have

1627
01:06:00,079 --> 01:06:01,760
someone from aws

1628
01:06:01,760 --> 01:06:03,200
who are thinking about these problems

1629
01:06:03,200 --> 01:06:06,079
i'd want to know is this working towards

1630
01:06:06,079 --> 01:06:08,559
some multi-cloud type solution for

1631
01:06:08,559 --> 01:06:10,559
compatibility

1632
01:06:10,559 --> 01:06:12,160
you know how might this be used in the

1633
01:06:12,160 --> 01:06:14,319
long term is it going to help customers

1634
01:06:14,319 --> 01:06:14,960
who

1635
01:06:14,960 --> 01:06:17,680
do have multi-cloud deployment so that

1636
01:06:17,680 --> 01:06:19,920
they have some consistency like

1637
01:06:19,920 --> 01:06:22,640
you know what what's the use case in the

1638
01:06:22,640 --> 01:06:23,680
end game and just

1639
01:06:23,680 --> 01:06:27,200
um more descriptions along that so

1640
01:06:27,200 --> 01:06:30,160
maybe a mailing list

1641
01:06:30,880 --> 01:06:33,200
will the multi-cloud is absolutely

1642
01:06:33,200 --> 01:06:35,119
something we have in mind

1643
01:06:35,119 --> 01:06:38,559
i think long-term enterprises will be

1644
01:06:38,559 --> 01:06:41,680
on multi-cloud and will need such

1645
01:06:41,680 --> 01:06:44,960
solutions to be able to manage this

1646
01:06:44,960 --> 01:06:47,280
big mess of data coming from different

1647
01:06:47,280 --> 01:06:49,920
directions

1648
01:06:50,559 --> 01:06:53,200
that's helpful

1649
01:06:59,359 --> 01:07:01,119
all right i think we have trained the

1650
01:07:01,119 --> 01:07:02,480
queue um

1651
01:07:02,480 --> 01:07:04,000
so looking at the discussion here and

1652
01:07:04,000 --> 01:07:05,520
the discussion on java it sounds like

1653
01:07:05,520 --> 01:07:06,400
folks

1654
01:07:06,400 --> 01:07:07,680
uh i think we need a little bit more

1655
01:07:07,680 --> 01:07:09,280
precision on the requirements and

1656
01:07:09,280 --> 01:07:11,359
especially kind of gap analysis

1657
01:07:11,359 --> 01:07:13,760
uh these are the the current solutions

1658
01:07:13,760 --> 01:07:14,799
that are out there

1659
01:07:14,799 --> 01:07:17,520
things like cose in particular um so i

1660
01:07:17,520 --> 01:07:17,920
think

1661
01:07:17,920 --> 01:07:20,799
the the this uh my proposed dispatch

1662
01:07:20,799 --> 01:07:21,680
outcome here the

1663
01:07:21,680 --> 01:07:24,480
um kind of no no concrete action um

1664
01:07:24,480 --> 01:07:26,319
further discussion needed i think we can

1665
01:07:26,319 --> 01:07:27,359
have that discussion either on the

1666
01:07:27,359 --> 01:07:28,319
dispatch list

1667
01:07:28,319 --> 01:07:29,920
or a new mailing list so folks won't

1668
01:07:29,920 --> 01:07:32,000
have a focused menu for this

1669
01:07:32,000 --> 01:07:35,039
um does that sound about right to people

1670
01:07:35,039 --> 01:07:35,920
open the floor for

1671
01:07:35,920 --> 01:07:39,200
feedback on that that outcome

1672
01:07:39,680 --> 01:07:41,440
so i think the spirit of this process is

1673
01:07:41,440 --> 01:07:43,520
that we should specify what

1674
01:07:43,520 --> 01:07:45,359
we what would be required roughly

1675
01:07:45,359 --> 01:07:46,559
speaking for that for

1676
01:07:46,559 --> 01:07:49,280
to proceed beyond the mailing list and i

1677
01:07:49,280 --> 01:07:50,799
think what we heard was

1678
01:07:50,799 --> 01:07:52,799
like a real gap analysis of why the

1679
01:07:52,799 --> 01:07:54,000
translation is going to do it

1680
01:07:54,000 --> 01:07:55,839
and some evidence that there are people

1681
01:07:55,839 --> 01:07:59,119
who would actually apply this technology

1682
01:07:59,119 --> 01:08:00,160
i think those are the right questions

1683
01:08:00,160 --> 01:08:02,480
here or the right deliverables for this

1684
01:08:02,480 --> 01:08:04,880
discussion

1685
01:08:06,640 --> 01:08:09,119
all right thank you all right thanks for

1686
01:08:09,119 --> 01:08:09,920
the presentation you're

1687
01:08:09,920 --> 01:08:13,280
on all right

1688
01:08:13,280 --> 01:08:16,000
now we are on to our third topic uh

1689
01:08:16,000 --> 01:08:16,399
which

1690
01:08:16,399 --> 01:08:18,880
is rich sol to talk about usage of

1691
01:08:18,880 --> 01:08:20,080
subject alt name

1692
01:08:20,080 --> 01:08:25,839
in certificates

1693
01:08:27,520 --> 01:08:31,120
rich i don't think you are audible

1694
01:08:31,679 --> 01:08:34,319
i'm getting video from you but not audio

1695
01:08:34,319 --> 01:08:39,839
hopefully it's not my problem this time

1696
01:08:42,080 --> 01:08:46,479
no it's not i can't hear you reach

1697
01:08:50,839 --> 01:08:53,839
either

1698
01:09:06,238 --> 01:09:09,439
sorry about that thank you

1699
01:09:09,439 --> 01:09:12,560
very well all right go ahead so

1700
01:09:12,560 --> 01:09:14,799
uh no slides you can look at the text or

1701
01:09:14,799 --> 01:09:16,799
the dinosaur behind my head

1702
01:09:16,799 --> 01:09:20,238
um rfc 6125

1703
01:09:20,238 --> 01:09:23,759
is 10 plus years old at the time it said

1704
01:09:23,759 --> 01:09:25,920
oh we shouldn't use the

1705
01:09:25,920 --> 01:09:29,359
common name field to identify

1706
01:09:29,359 --> 01:09:32,719
um you know servers anymore

1707
01:09:32,719 --> 01:09:34,880
um the industry has moved forward nobody

1708
01:09:34,880 --> 01:09:36,799
really uses the common name

1709
01:09:36,799 --> 01:09:38,479
except they have to because nobody has

1710
01:09:38,479 --> 01:09:41,120
said don't use the common name

1711
01:09:41,120 --> 01:09:44,238
um comment in the uh

1712
01:09:44,238 --> 01:09:45,679
chat there says should this have been

1713
01:09:45,679 --> 01:09:47,279
called cn die die die

1714
01:09:47,279 --> 01:09:49,839
yeah but

1715
01:09:50,399 --> 01:09:53,839
die die die should die die die so

1716
01:09:53,839 --> 01:09:56,560
the joke's got jokes played out so

1717
01:09:56,560 --> 01:09:57,600
anyhow

1718
01:09:57,600 --> 01:10:00,719
6125 was a d standard

1719
01:10:00,719 --> 01:10:03,120
a.d sponsored i don't care where this

1720
01:10:03,120 --> 01:10:05,040
goes i would rather not

1721
01:10:05,040 --> 01:10:06,480
i saw some discussion on the mailing

1722
01:10:06,480 --> 01:10:08,239
list about increasing you know

1723
01:10:08,239 --> 01:10:11,760
doing more um but i'd rather keep this

1724
01:10:11,760 --> 01:10:17,360
pretty simple

1725
01:10:17,360 --> 01:10:19,839
that's it

1726
01:10:20,480 --> 01:10:24,400
all right okay comments

1727
01:10:26,000 --> 01:10:29,040
uh hi rich hey i'm sorry i'm getting an

1728
01:10:29,040 --> 01:10:30,320
echo i think

1729
01:10:30,320 --> 01:10:32,400
through i don't know i don't know who uh

1730
01:10:32,400 --> 01:10:33,760
now i'm not um

1731
01:10:33,760 --> 01:10:36,480
so i apologize for not having read this

1732
01:10:36,480 --> 01:10:36,800
uh

1733
01:10:36,800 --> 01:10:38,560
draft but i could you speak a little bit

1734
01:10:38,560 --> 01:10:40,719
to how this applies to non-tls uses of

1735
01:10:40,719 --> 01:10:42,000
x-509

1736
01:10:42,000 --> 01:10:44,159
in particular s mine where i believe the

1737
01:10:44,159 --> 01:10:45,440
common name is typically used to

1738
01:10:45,440 --> 01:10:46,719
identify the person's

1739
01:10:46,719 --> 01:10:50,159
uh natural name

1740
01:10:50,719 --> 01:10:54,480
or um i think as with 6125 it only talks

1741
01:10:54,480 --> 01:10:54,960
about

1742
01:10:54,960 --> 01:10:57,600
tls use that'd be great to put that in

1743
01:10:57,600 --> 01:10:58,960
the abstract

1744
01:10:58,960 --> 01:11:02,480
okay thanks

1745
01:11:07,920 --> 01:11:10,640
hello my name is

1746
01:11:11,440 --> 01:11:15,280
well i think this draft uh

1747
01:11:15,280 --> 01:11:18,719
uh can be worked on in utah

1748
01:11:18,719 --> 01:11:21,600
but i agree with dkg that some

1749
01:11:21,600 --> 01:11:24,239
qualification is needed in the text

1750
01:11:24,239 --> 01:11:27,520
that the draft is taken about to less

1751
01:11:27,520 --> 01:11:29,520
because currently tls is not mentioned

1752
01:11:29,520 --> 01:11:31,679
at all in the draft except for

1753
01:11:31,679 --> 01:11:35,280
reference to rfc 6125

1754
01:11:35,280 --> 01:11:38,560
and when i first read it

1755
01:11:38,560 --> 01:11:40,480
my first impression was that it's very

1756
01:11:40,480 --> 01:11:42,719
generic approaches it can be

1757
01:11:42,719 --> 01:11:45,840
uh gets rid of uh common name

1758
01:11:45,840 --> 01:11:48,400
uh from distinguished name and

1759
01:11:48,400 --> 01:11:49,360
certificate

1760
01:11:49,360 --> 01:11:51,760
it can be applied for a arbitrary

1761
01:11:51,760 --> 01:11:54,500
security protocol like

1762
01:11:54,500 --> 01:11:56,400
[Music]

1763
01:11:56,400 --> 01:11:59,679
so if you clarify that uh

1764
01:11:59,679 --> 01:12:03,280
you are talking only about ls

1765
01:12:03,280 --> 01:12:06,400
explicitly i think that uh utah looking

1766
01:12:06,400 --> 01:12:06,880
group

1767
01:12:06,880 --> 01:12:10,880
is a suitable home

1768
01:12:14,080 --> 01:12:17,040
um sure i mean i just assume that you

1769
01:12:17,040 --> 01:12:18,719
know when you post a draft people read

1770
01:12:18,719 --> 01:12:21,520
the draft and what it updates

1771
01:12:21,520 --> 01:12:23,760
so but anyhow yes putting use the sand

1772
01:12:23,760 --> 01:12:26,080
field for tls authentication and putting

1773
01:12:26,080 --> 01:12:27,360
it in the abstract sure

1774
01:12:27,360 --> 01:12:29,920
absolutely

1775
01:12:35,120 --> 01:12:38,239
oh it's me yeah i was gonna i really

1776
01:12:38,239 --> 01:12:38,800
like this

1777
01:12:38,800 --> 01:12:41,280
i think that we should do it uh i think

1778
01:12:41,280 --> 01:12:42,640
it could probably be done as ad

1779
01:12:42,640 --> 01:12:43,679
sponsored

1780
01:12:43,679 --> 01:12:46,800
uh you probably need to sync up with cab

1781
01:12:46,800 --> 01:12:48,239
forum

1782
01:12:48,239 --> 01:12:51,600
uh the existing specs

1783
01:12:51,600 --> 01:12:55,040
the the the cab forum ev and i suspect

1784
01:12:55,040 --> 01:12:56,159
the dv

1785
01:12:56,159 --> 01:12:59,440
uh guidelines uh already say that you

1786
01:12:59,440 --> 01:13:01,520
shouldn't be populating the uh

1787
01:13:01,520 --> 01:13:04,239
cn field you should only be doing a

1788
01:13:04,239 --> 01:13:06,400
subject alt name at this point

1789
01:13:06,400 --> 01:13:09,520
and i think that we uh obsoleted it uh

1790
01:13:09,520 --> 01:13:12,640
back in 97 so

1791
01:13:12,640 --> 01:13:14,159
i think it's highly unlikely that

1792
01:13:14,159 --> 01:13:16,239
there's anything out there

1793
01:13:16,239 --> 01:13:18,960
in tls land certainly certainly nothing

1794
01:13:18,960 --> 01:13:20,159
that's a browser

1795
01:13:20,159 --> 01:13:22,640
that is using this capability and

1796
01:13:22,640 --> 01:13:24,560
anything that is is probably using a set

1797
01:13:24,560 --> 01:13:25,360
of cert

1798
01:13:25,360 --> 01:13:28,159
of routes that is just so old that it's

1799
01:13:28,159 --> 01:13:28,960
not

1800
01:13:28,960 --> 01:13:31,520
necessary to consider it either you know

1801
01:13:31,520 --> 01:13:34,800
most of the roots are expired

1802
01:13:34,800 --> 01:13:38,080
so i i i think yeah um

1803
01:13:38,080 --> 01:13:41,120
i think i well i ryan sleevy read it

1804
01:13:41,120 --> 01:13:45,120
and i took him as the cab form rep

1805
01:13:45,120 --> 01:13:47,920
so they're they're fine with it at least

1806
01:13:47,920 --> 01:13:49,040
unofficially but yes

1807
01:13:49,040 --> 01:13:51,199
we'll i'll have someone forward it to

1808
01:13:51,199 --> 01:13:53,280
their mailing list

1809
01:13:53,280 --> 01:13:55,360
well yeah it's also a question of the

1810
01:13:55,360 --> 01:13:58,080
kit we need the cab forum to then say

1811
01:13:58,080 --> 01:14:00,640
be consistent with this new rfc that's

1812
01:14:00,640 --> 01:14:01,679
come out

1813
01:14:01,679 --> 01:14:03,840
because they've actually got the power

1814
01:14:03,840 --> 01:14:06,960
to stop every ca from doing this stuff

1815
01:14:06,960 --> 01:14:08,880
right um yeah ryan has said he'll do

1816
01:14:08,880 --> 01:14:10,000
that

1817
01:14:10,000 --> 01:14:15,840
right bring that forward

1818
01:14:20,239 --> 01:14:23,760
bob okay

1819
01:14:23,760 --> 01:14:27,280
i kind of like this draft but

1820
01:14:27,280 --> 01:14:30,719
in practicality using subject alt name

1821
01:14:30,719 --> 01:14:33,920
with open ssl is at least was

1822
01:14:33,920 --> 01:14:37,600
extremely hard um on the command line

1823
01:14:37,600 --> 01:14:38,159
for

1824
01:14:38,159 --> 01:14:40,080
rich you know what i i did some years

1825
01:14:40,080 --> 01:14:42,239
ago when i worked on this my drafts

1826
01:14:42,239 --> 01:14:45,199
what it took to to use this maybe as we

1827
01:14:45,199 --> 01:14:47,040
push back to the open sale people

1828
01:14:47,040 --> 01:14:50,000
to make it easier to make certs that

1829
01:14:50,000 --> 01:14:50,640
have

1830
01:14:50,640 --> 01:14:52,800
subsequent name and don't have common

1831
01:14:52,800 --> 01:14:54,880
name because

1832
01:14:54,880 --> 01:14:57,440
yes there are products which do this but

1833
01:14:57,440 --> 01:14:59,280
trying to use the opus

1834
01:14:59,280 --> 01:15:04,159
open ssl toolkit command line

1835
01:15:05,040 --> 01:15:07,440
it was hard and i think it still is hard

1836
01:15:07,440 --> 01:15:09,040
what is there anything we should be

1837
01:15:09,040 --> 01:15:11,600
doing about this

1838
01:15:11,600 --> 01:15:14,640
uh it was hard it isn't there is a i

1839
01:15:14,640 --> 01:15:16,560
forget what the command line flag is but

1840
01:15:16,560 --> 01:15:19,280
you can just specify the sand field

1841
01:15:19,280 --> 01:15:22,000
on there and some of the docks could be

1842
01:15:22,000 --> 01:15:23,120
updated

1843
01:15:23,120 --> 01:15:26,159
um okay dkg i'm no longer part of the

1844
01:15:26,159 --> 01:15:27,440
openssl

1845
01:15:27,440 --> 01:15:29,440
team and soon to be no longer part of

1846
01:15:29,440 --> 01:15:30,640
the project

1847
01:15:30,640 --> 01:15:32,880
i will go back to my draft and i'll give

1848
01:15:32,880 --> 01:15:34,960
i'll give some things and try to see

1849
01:15:34,960 --> 01:15:36,400
what has been updated and see if i can

1850
01:15:36,400 --> 01:15:38,080
do things better than i did when i

1851
01:15:38,080 --> 01:15:40,000
created that draft uh what not two years

1852
01:15:40,000 --> 01:15:42,239
ago

1853
01:15:42,640 --> 01:15:44,719
yeah i remember looking at it then and i

1854
01:15:44,719 --> 01:15:46,320
would certainly probably do a pull

1855
01:15:46,320 --> 01:15:47,120
request to

1856
01:15:47,120 --> 01:15:50,840
enforce this you know when it gets

1857
01:15:50,840 --> 01:15:52,719
published

1858
01:15:52,719 --> 01:15:54,400
two before it gets published so let's

1859
01:15:54,400 --> 01:15:58,000
have it working before it gets published

1860
01:15:59,360 --> 01:16:07,839
thank you

1861
01:16:12,080 --> 01:16:14,719
irish

1862
01:16:18,159 --> 01:16:21,600
i like this document but uh i

1863
01:16:21,600 --> 01:16:25,040
am not sure that uh the lack of

1864
01:16:25,040 --> 01:16:26,080
reference to

1865
01:16:26,080 --> 01:16:28,000
current uh c browser forum

1866
01:16:28,000 --> 01:16:29,280
recommendation

1867
01:16:29,280 --> 01:16:32,560
is reasonable uh as far as i

1868
01:16:32,560 --> 01:16:36,239
remember it's a car it's a currently the

1869
01:16:36,239 --> 01:16:39,440
current practice of c browser forum and

1870
01:16:39,440 --> 01:16:42,719
i think this reference could be useful

1871
01:16:42,719 --> 01:16:45,120
thank you

1872
01:16:47,040 --> 01:16:49,280
yeah that's a good idea i just didn't

1873
01:16:49,280 --> 01:16:51,360
have the time to look up what the

1874
01:16:51,360 --> 01:16:53,760
reference would be but yes if you know

1875
01:16:53,760 --> 01:16:54,640
if you have one

1876
01:16:54,640 --> 01:16:56,640
you know let me to mail me otherwise

1877
01:16:56,640 --> 01:16:58,640
i'll dig it up

1878
01:16:58,640 --> 01:17:02,880
uh i don't it's good

1879
01:17:02,880 --> 01:17:04,960
i don't remember the exact reference but

1880
01:17:04,960 --> 01:17:06,159
it's definitely present

1881
01:17:06,159 --> 01:17:08,480
thank you

1882
01:17:10,320 --> 01:17:14,640
watson hi what's not cloudflare i like

1883
01:17:14,640 --> 01:17:16,000
this draft i think some of the knits

1884
01:17:16,000 --> 01:17:17,199
that people are raising in chat

1885
01:17:17,199 --> 01:17:19,280
stuff that we can just kick over to uta

1886
01:17:19,280 --> 01:17:21,040
along with this draft i think that

1887
01:17:21,040 --> 01:17:22,960
second and it shouldn't be too hard to

1888
01:17:22,960 --> 01:17:24,640
get this out pretty quickly it's

1889
01:17:24,640 --> 01:17:27,760
already in pretty good shape

1890
01:17:29,440 --> 01:17:30,719
thanks and i think my comments are going

1891
01:17:30,719 --> 01:17:32,560
to be along the same lines i think this

1892
01:17:32,560 --> 01:17:34,159
this makes a lot of sense in the context

1893
01:17:34,159 --> 01:17:36,159
of the tls pki web pki

1894
01:17:36,159 --> 01:17:38,800
um it might not make sense in other pkis

1895
01:17:38,800 --> 01:17:41,040
like dkg pointed out so i think

1896
01:17:41,040 --> 01:17:43,199
uh kicking this back to utah makes a lot

1897
01:17:43,199 --> 01:17:45,440
of sense

1898
01:17:45,440 --> 01:17:49,679
ckg just wanted to voice support for

1899
01:17:49,679 --> 01:17:51,199
putting it in uta since i

1900
01:17:51,199 --> 01:17:52,719
just put that in the chat i want to say

1901
01:17:52,719 --> 01:17:55,199
it out loud and i also wanted to clarify

1902
01:17:55,199 --> 01:17:56,640
there's been a little bit of discussion

1903
01:17:56,640 --> 01:17:57,920
here as though this is somehow

1904
01:17:57,920 --> 01:17:59,920
constraining the cas

1905
01:17:59,920 --> 01:18:01,760
and it doesn't look to me like it is it

1906
01:18:01,760 --> 01:18:03,920
is constraining the verifiers

1907
01:18:03,920 --> 01:18:05,440
um and i don't think we should get that

1908
01:18:05,440 --> 01:18:06,880
we should let ourselves get mixed up by

1909
01:18:06,880 --> 01:18:08,080
that what we're saying is when you're

1910
01:18:08,080 --> 01:18:10,880
verifying don't look at this thing

1911
01:18:10,880 --> 01:18:12,159
and obviously that will have a

1912
01:18:12,159 --> 01:18:14,400
downstream impact on what the cas do

1913
01:18:14,400 --> 01:18:15,679
uh but i think it should be very clear

1914
01:18:15,679 --> 01:18:16,719
that we are talking about how the

1915
01:18:16,719 --> 01:18:18,159
verification stack works

1916
01:18:18,159 --> 01:18:20,880
not the issuance stack so i think there

1917
01:18:20,880 --> 01:18:21,280
actually

1918
01:18:21,280 --> 01:18:23,120
is a provision in the document that

1919
01:18:23,120 --> 01:18:24,560
constrains cas

1920
01:18:24,560 --> 01:18:26,480
um that's certainly something that the

1921
01:18:26,480 --> 01:18:27,840
working group could could

1922
01:18:27,840 --> 01:18:32,480
iterate on yeah um the working community

1923
01:18:32,480 --> 01:18:35,600
dkg is right it's about verification

1924
01:18:35,600 --> 01:18:37,040
um and there's like a paragraph that

1925
01:18:37,040 --> 01:18:39,040
says and if the ca needs to do it

1926
01:18:39,040 --> 01:18:41,920
puts a cn feel don't make it look like a

1927
01:18:41,920 --> 01:18:42,560
name

1928
01:18:42,560 --> 01:18:44,480
don't make it look like a dns name but

1929
01:18:44,480 --> 01:18:46,560
sure

1930
01:18:46,560 --> 01:18:50,560
i mean we've been backwardly compatibly

1931
01:18:50,560 --> 01:18:51,679
doing

1932
01:18:51,679 --> 01:18:55,360
cn and equivalent sand fields

1933
01:18:55,360 --> 01:18:58,559
for 10 years

1934
01:18:59,679 --> 01:19:03,440
so let's just stop

1935
01:19:03,440 --> 01:19:04,800
all right i'll miss anything last year

1936
01:19:04,800 --> 01:19:06,719
last comments here

1937
01:19:06,719 --> 01:19:09,920
yeah i i agree with the uda place and uh

1938
01:19:09,920 --> 01:19:13,199
ricky if you can uh post a link to the

1939
01:19:13,199 --> 01:19:13,840
document

1940
01:19:13,840 --> 01:19:16,000
about how to do the configuration before

1941
01:19:16,000 --> 01:19:16,960
ssl if it's

1942
01:19:16,960 --> 01:19:20,159
uh not so easily definable

1943
01:19:20,159 --> 01:19:23,199
um that would be really helpful because

1944
01:19:23,199 --> 01:19:25,199
the guys i've been working with have

1945
01:19:25,199 --> 01:19:26,719
been struggling with this as well in the

1946
01:19:26,719 --> 01:19:28,960
ied context for

1947
01:19:28,960 --> 01:19:32,000
device certificates

1948
01:19:35,199 --> 01:19:37,520
yeah it's probably only in the latest

1949
01:19:37,520 --> 01:19:38,719
master or one one

1950
01:19:38,719 --> 01:19:41,040
one but i'll take a look and post it to

1951
01:19:41,040 --> 01:19:44,400
this mailing list i guess honest

1952
01:19:46,560 --> 01:19:49,199
all right so we're through our queue it

1953
01:19:49,199 --> 01:19:50,400
sounds like we've got pretty good

1954
01:19:50,400 --> 01:19:51,120
agreements

1955
01:19:51,120 --> 01:19:54,719
here to shift this back to uh uta

1956
01:19:54,719 --> 01:19:58,320
utah however we pronounce it um

1957
01:19:58,320 --> 01:19:59,360
so we'll consider that to be the

1958
01:19:59,360 --> 01:20:01,520
dispatch outcome um last last call for

1959
01:20:01,520 --> 01:20:05,199
objections to that

1960
01:20:05,199 --> 01:20:07,199
all right seeing no one leaping to the

1961
01:20:07,199 --> 01:20:08,960
mic uh

1962
01:20:08,960 --> 01:20:10,719
let it be so decided thanks for the

1963
01:20:10,719 --> 01:20:12,080
presentation rich

1964
01:20:12,080 --> 01:20:15,920
sure now do i this does uta then do a

1965
01:20:15,920 --> 01:20:18,400
call for adoption or do i just post it

1966
01:20:18,400 --> 01:20:20,480
there or how does that work i'll speak

1967
01:20:20,480 --> 01:20:23,678
to the chairs i guess

1968
01:20:24,639 --> 01:20:26,000
i mean the working group chairs are

1969
01:20:26,000 --> 01:20:28,000
online you might want to just talk with

1970
01:20:28,000 --> 01:20:29,360
them about how to do that and

1971
01:20:29,360 --> 01:20:34,000
how to accept that dispatch result okay

1972
01:20:34,239 --> 01:20:36,000
and i see some advice in the chat great

1973
01:20:36,000 --> 01:20:38,239
thank you

1974
01:20:38,239 --> 01:20:41,280
thank you all right is uh

1975
01:20:41,280 --> 01:20:43,040
russ helsley here i think he's our last

1976
01:20:43,040 --> 01:20:47,840
topic for the day

1977
01:21:03,120 --> 01:21:06,400
hi thank you this is some joint work

1978
01:21:06,400 --> 01:21:07,840
that i did with

1979
01:21:07,840 --> 01:21:14,320
carl wallace next slide

1980
01:21:14,320 --> 01:21:17,360
the um ers

1981
01:21:17,360 --> 01:21:22,880
or evidence record syntax is in rfc 4998

1982
01:21:22,880 --> 01:21:25,280
it was produced by the ltans working

1983
01:21:25,280 --> 01:21:27,920
group a long time ago

1984
01:21:27,920 --> 01:21:32,000
it includes two asn1 modules one using

1985
01:21:32,000 --> 01:21:35,600
an old syntax from 1988 and other from

1986
01:21:35,600 --> 01:21:37,520
the

1987
01:21:37,520 --> 01:21:39,600
newer syntax that is the one that is

1988
01:21:39,600 --> 01:21:41,199
still being

1989
01:21:41,199 --> 01:21:46,080
maintained and enhanced in the itu

1990
01:21:46,400 --> 01:21:49,120
this document provides an alternate asn

1991
01:21:49,120 --> 01:21:50,239
1 module that

1992
01:21:50,239 --> 01:21:52,800
follows the conventions that were

1993
01:21:52,800 --> 01:21:54,840
established by jim shad

1994
01:21:54,840 --> 01:21:58,320
in rfc 5 9 11

1995
01:21:58,320 --> 01:22:01,519
and 5 9 12.

1996
01:22:02,000 --> 01:22:04,880
next slide please

1997
01:22:08,800 --> 01:22:13,440
in addition um ltans produced rfc

1998
01:22:13,440 --> 01:22:16,639
uh 5276

1999
01:22:16,639 --> 01:22:19,520
and in that rfc they only provided one

2000
01:22:19,520 --> 01:22:20,400
asn

2001
01:22:20,400 --> 01:22:24,719
one module that used the older syntax

2002
01:22:24,719 --> 01:22:27,920
so this document provides one that is

2003
01:22:27,920 --> 01:22:28,639
using the

2004
01:22:28,639 --> 01:22:31,840
newer syntax as well as following the

2005
01:22:31,840 --> 01:22:34,560
conventions

2006
01:22:36,840 --> 01:22:39,840
from

2007
01:22:50,960 --> 01:22:54,080
so uh glad me to go put that auto

2008
01:22:54,080 --> 01:22:55,280
reconnected uh

2009
01:22:55,280 --> 01:22:58,320
i was like oh no now what okay i'm back

2010
01:22:58,320 --> 01:23:01,440
um also provides these two

2011
01:23:01,440 --> 01:23:04,560
uh follows those conventions from

2012
01:23:04,560 --> 01:23:07,760
uh jim shodd's rfcs

2013
01:23:07,760 --> 01:23:13,040
59 11 59 12. next slide

2014
01:23:16,320 --> 01:23:20,719
so these new modules

2015
01:23:20,719 --> 01:23:25,120
basically the original ones had imports

2016
01:23:25,120 --> 01:23:27,280
that included definitions from some

2017
01:23:27,280 --> 01:23:30,960
places that are difficult to find

2018
01:23:30,960 --> 01:23:34,239
these alternate modules

2019
01:23:34,239 --> 01:23:37,840
import everything from modules that are

2020
01:23:37,840 --> 01:23:39,679
in rfcs

2021
01:23:39,679 --> 01:23:43,600
and they are

2022
01:23:43,600 --> 01:23:46,000
bit for bit compatible with what comes

2023
01:23:46,000 --> 01:23:47,199
out

2024
01:23:47,199 --> 01:23:51,120
with the ones that are in the rfcs

2025
01:23:51,120 --> 01:23:54,159
and these we propose would be

2026
01:23:54,159 --> 01:23:57,760
informative so that the ones

2027
01:23:57,760 --> 01:24:00,840
in the original specifications remain

2028
01:24:00,840 --> 01:24:02,239
normative

2029
01:24:02,239 --> 01:24:04,799
next slide

2030
01:24:09,280 --> 01:24:12,480
so implementers have found

2031
01:24:12,480 --> 01:24:17,679
59 11 15 9 very useful

2032
01:24:17,679 --> 01:24:19,840
we're just trying to bring forward those

2033
01:24:19,840 --> 01:24:21,120
same things

2034
01:24:21,120 --> 01:24:23,920
that implementers have found useful uh

2035
01:24:23,920 --> 01:24:26,800
to the ers specification as well

2036
01:24:26,800 --> 01:24:31,440
in my last slide

2037
01:24:31,440 --> 01:24:34,560
and so we just recommend that

2038
01:24:34,560 --> 01:24:38,239
these become informational rc's and

2039
01:24:38,239 --> 01:24:41,040
since it's one document we just thought

2040
01:24:41,040 --> 01:24:42,239
the easiest thing to do

2041
01:24:42,239 --> 01:24:45,360
is have it 80 sponsored and i'd like to

2042
01:24:45,360 --> 01:24:48,239
hear what people think

2043
01:24:50,320 --> 01:24:55,280
any comments from the floor no

2044
01:24:56,320 --> 01:24:59,840
i think we should do it

2045
01:25:00,159 --> 01:25:03,120
now philly disappeared too quickly like

2046
01:25:03,120 --> 01:25:04,159
what what's uh

2047
01:25:04,159 --> 01:25:05,520
how do you think we should do it we have

2048
01:25:05,520 --> 01:25:08,080
a working group 80 sponsor what

2049
01:25:08,080 --> 01:25:12,000
i think it should be 80 sponsored um

2050
01:25:12,000 --> 01:25:15,920
i mean like this is cleanup stuff

2051
01:25:15,920 --> 01:25:19,120
um from from what

2052
01:25:19,120 --> 01:25:20,880
from what i gather we're not expanding

2053
01:25:20,880 --> 01:25:22,719
semantics or whatever

2054
01:25:22,719 --> 01:25:24,960
we're it's a clarification of the

2055
01:25:24,960 --> 01:25:27,679
documentation

2056
01:25:27,679 --> 01:25:30,960
so thanks uh i i i think it's the sort

2057
01:25:30,960 --> 01:25:32,159
of thing that

2058
01:25:32,159 --> 01:25:35,440
you know informational is fine ad

2059
01:25:35,440 --> 01:25:41,440
sponsored this is what it's for

2060
01:25:41,440 --> 01:25:42,719
and for what it's worth that was my

2061
01:25:42,719 --> 01:25:43,760
analysis as well this is a

2062
01:25:43,760 --> 01:25:45,360
straightforward piece of work

2063
01:25:45,360 --> 01:25:46,560
um it doesn't need a whole lot of

2064
01:25:46,560 --> 01:25:48,239
technical broad review um so it made

2065
01:25:48,239 --> 01:25:50,080
sense as 80 sponsored for a minute as

2066
01:25:50,080 --> 01:25:54,239
a.d you have to come in here

2067
01:25:54,239 --> 01:25:56,880
not so familiar with the ers ecosystem

2068
01:25:56,880 --> 01:25:58,560
could you give me a better sense of

2069
01:25:58,560 --> 01:26:00,880
what we're using it for now and a little

2070
01:26:00,880 --> 01:26:02,000
bit of a sense of

2071
01:26:02,000 --> 01:26:05,280
the implementers we're helping sure

2072
01:26:05,280 --> 01:26:09,440
uh so i um

2073
01:26:09,440 --> 01:26:11,440
have been making open source

2074
01:26:11,440 --> 01:26:13,440
contributions to the pi

2075
01:26:13,440 --> 01:26:17,280
asn 1 module library and so i

2076
01:26:17,280 --> 01:26:20,000
this was one of the specifications that

2077
01:26:20,000 --> 01:26:21,600
was missing and i found

2078
01:26:21,600 --> 01:26:23,679
i had to do this in order to implement

2079
01:26:23,679 --> 01:26:25,199
that

2080
01:26:25,199 --> 01:26:28,239
that's how this happened

2081
01:26:28,239 --> 01:26:31,600
and i found some other

2082
01:26:31,600 --> 01:26:34,080
implementations in github that i was

2083
01:26:34,080 --> 01:26:36,239
able to pull test data from

2084
01:26:36,239 --> 01:26:38,480
so i'm pretty sure that the bits on the

2085
01:26:38,480 --> 01:26:39,679
wire are

2086
01:26:39,679 --> 01:26:42,400
line up and so i don't know who else

2087
01:26:42,400 --> 01:26:42,880
would be

2088
01:26:42,880 --> 01:26:51,840
using it but that's how this happened

2089
01:26:55,280 --> 01:26:58,639
jonathan jonathan

2090
01:26:58,639 --> 01:27:00,400
oh yeah just so i look at my questions

2091
01:27:00,400 --> 01:27:01,840
this only changes

2092
01:27:01,840 --> 01:27:03,360
the definition of it not the bits and

2093
01:27:03,360 --> 01:27:05,040
the wire remain unchanged

2094
01:27:05,040 --> 01:27:07,920
that is correct that makes it a lot

2095
01:27:07,920 --> 01:27:08,560
easier to

2096
01:27:08,560 --> 01:27:12,719
you know go with it and yes

2097
01:27:15,679 --> 01:27:18,719
yes i was careful to make no uh

2098
01:27:18,719 --> 01:27:22,480
semantic or syntactic uh changes to

2099
01:27:22,480 --> 01:27:25,440
the bits on the wire

2100
01:27:28,000 --> 01:27:29,199
so it seems to me like it would be good

2101
01:27:29,199 --> 01:27:30,960
if we could have someone review to

2102
01:27:30,960 --> 01:27:32,239
verify that's the case

2103
01:27:32,239 --> 01:27:35,280
uh sometime during last call but doesn't

2104
01:27:35,280 --> 01:27:35,760
exactly

2105
01:27:35,760 --> 01:27:38,800
much more than last call for that

2106
01:27:38,800 --> 01:27:40,080
all right unless there are further

2107
01:27:40,080 --> 01:27:41,920
comments or objections this course of

2108
01:27:41,920 --> 01:27:42,560
action i think

2109
01:27:42,560 --> 01:27:46,639
um we'll declare uh a recommendation for

2110
01:27:46,639 --> 01:27:48,159
80 sponsorship

2111
01:27:48,159 --> 01:27:50,880
uh as our dispatch outcome here anyone

2112
01:27:50,880 --> 01:27:52,480
want to jump to the mic and

2113
01:27:52,480 --> 01:27:55,678
raise their hands in that position

2114
01:27:56,320 --> 01:27:58,840
all right thanks for your time thank you

2115
01:27:58,840 --> 01:28:00,159
russ

2116
01:28:00,159 --> 01:28:02,239
roman yeah and i wanted to follow up on

2117
01:28:02,239 --> 01:28:03,600
that ben and i have kind of talked about

2118
01:28:03,600 --> 01:28:05,040
it and i've looked at the draft

2119
01:28:05,040 --> 01:28:08,320
uh i'll i'll pick it up

2120
01:28:08,320 --> 01:28:11,520
all right thank you that brings

2121
01:28:11,520 --> 01:28:14,560
us to our aob time we have almost

2122
01:28:14,560 --> 01:28:16,159
precisely as much

2123
01:28:16,159 --> 01:28:20,560
even a bit more than we had predicted um

2124
01:28:20,560 --> 01:28:24,320
are there any other uh any other aobs

2125
01:28:24,320 --> 01:28:27,520
that folks would like to

2126
01:28:27,520 --> 01:28:30,560
bring up for this meeting

2127
01:28:34,639 --> 01:28:37,280
hearing none uh we will go ahead and

2128
01:28:37,280 --> 01:28:38,320
proceed to the

2129
01:28:38,320 --> 01:28:42,000
uh chairs sum up um

2130
01:28:42,000 --> 01:28:43,520
let me try and do this from memory and

2131
01:28:43,520 --> 01:28:45,280
someone can correct me if they've got

2132
01:28:45,280 --> 01:28:46,320
better notes

2133
01:28:46,320 --> 01:28:48,880
so for oblivious http uh i think we

2134
01:28:48,880 --> 01:28:49,520
agreed

2135
01:28:49,520 --> 01:28:51,360
to spin up a small working group for

2136
01:28:51,360 --> 01:28:52,719
that and the

2137
01:28:52,719 --> 01:28:54,560
uh charter will be workshopped on insect

2138
01:28:54,560 --> 01:28:56,159
dispatch mailing list and we'll figure

2139
01:28:56,159 --> 01:28:59,599
out what the precise scope is there

2140
01:28:59,679 --> 01:29:03,520
kick that over to the 80s for last call

2141
01:29:03,520 --> 01:29:06,320
for its review cycles and whatnot for

2142
01:29:06,320 --> 01:29:07,679
the ciphertext format the

2143
01:29:07,679 --> 01:29:09,040
decision there was that it needed some

2144
01:29:09,040 --> 01:29:10,239
more discussion to clarify the

2145
01:29:10,239 --> 01:29:11,360
requirements

2146
01:29:11,360 --> 01:29:13,360
uh views of the existing formats and to

2147
01:29:13,360 --> 01:29:15,760
clarify who the the constituency is that

2148
01:29:15,760 --> 01:29:16,560
um

2149
01:29:16,560 --> 01:29:18,239
for whom this matters and then make sure

2150
01:29:18,239 --> 01:29:20,159
it would get some uptake

2151
01:29:20,159 --> 01:29:22,560
um so more uh discussion on the second

2152
01:29:22,560 --> 01:29:24,719
specialist

2153
01:29:24,719 --> 01:29:26,960
i think we set the new main list for

2154
01:29:26,960 --> 01:29:28,239
this okay

2155
01:29:28,239 --> 01:29:30,320
new mailing list um so yeah please

2156
01:29:30,320 --> 01:29:32,719
contact the ids for your mailing list

2157
01:29:32,719 --> 01:29:34,800
yeah um on the use of sand that got

2158
01:29:34,800 --> 01:29:36,320
dispatched back to uta

2159
01:29:36,320 --> 01:29:39,280
that was an easy one and finally the asn

2160
01:29:39,280 --> 01:29:40,159
1 module

2161
01:29:40,159 --> 01:29:43,920
is going to be 80 sponsored by roman

2162
01:29:43,920 --> 01:29:46,239
there's our outcomes good job being

2163
01:29:46,239 --> 01:29:49,120
decisional folks

2164
01:29:49,120 --> 01:29:51,440
and with that i think we're at the end

2165
01:29:51,440 --> 01:29:53,360
thank you for your time thank you

2166
01:29:53,360 --> 01:29:55,199
yes and thanks again francesca and

2167
01:29:55,199 --> 01:29:57,199
welcome to it

2168
01:29:57,199 --> 01:29:59,360
thank you thanks our minute takers as

2169
01:29:59,360 --> 01:30:00,320
well

2170
01:30:00,320 --> 01:30:03,600
yes thank you so much have a good rest

2171
01:30:03,600 --> 01:30:04,880
of the day

2172
01:30:04,880 --> 01:30:12,560
bye everyone bye

