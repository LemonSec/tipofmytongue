1
00:00:28,080 --> 00:00:30,959
maybe twice with me

2
00:00:42,840 --> 00:00:44,719
oh

3
00:00:44,719 --> 00:00:47,680
and here we go even better there was

4
00:00:47,680 --> 00:00:48,960
something to this

5
00:00:48,960 --> 00:00:52,480
hello everyone welcome to the first

6
00:00:52,480 --> 00:00:54,239
meeting of the freshly minted iot

7
00:00:54,239 --> 00:00:59,680
operations working group at itf-110

8
00:00:59,680 --> 00:01:02,559
alexa and i will be trying to be your

9
00:01:02,559 --> 00:01:03,280
useful

10
00:01:03,280 --> 00:01:06,320
co-chairs here in this space and we have

11
00:01:06,320 --> 00:01:07,520
a very packed

12
00:01:07,520 --> 00:01:10,720
agenda for today so let me

13
00:01:10,720 --> 00:01:13,040
quickly run through the chair slide here

14
00:01:13,040 --> 00:01:13,920
uh which

15
00:01:13,920 --> 00:01:16,240
probably the most important part is the

16
00:01:16,240 --> 00:01:17,280
note value so

17
00:01:17,280 --> 00:01:19,200
as this is going to be a place where

18
00:01:19,200 --> 00:01:21,600
even new attendees might flock to

19
00:01:21,600 --> 00:01:23,520
it's important to highlight that there

20
00:01:23,520 --> 00:01:25,840
is a node value that's

21
00:01:25,840 --> 00:01:28,560
all your questions about ipr so follow

22
00:01:28,560 --> 00:01:30,000
these links if you're not

23
00:01:30,000 --> 00:01:32,479
aware of that it's also google and the

24
00:01:32,479 --> 00:01:34,240
iitv website

25
00:01:34,240 --> 00:01:36,640
uh if you're not familiar with this

26
00:01:36,640 --> 00:01:38,799
please do get familiar and also

27
00:01:38,799 --> 00:01:40,400
the sessions being recorded everything

28
00:01:40,400 --> 00:01:41,920
you say here will be

29
00:01:41,920 --> 00:01:45,439
part of this uh ietf and

30
00:01:45,439 --> 00:01:47,360
yeah again there are some interesting

31
00:01:47,360 --> 00:01:48,799
things please uh

32
00:01:48,799 --> 00:01:50,720
we have to get some notepad takers and

33
00:01:50,720 --> 00:01:52,799
alexa we'll do this in a second

34
00:01:52,799 --> 00:01:55,200
this is the agenda we are quite packed

35
00:01:55,200 --> 00:01:57,119
we hoped for more open mic

36
00:01:57,119 --> 00:01:59,920
actually but uh i'm running through this

37
00:01:59,920 --> 00:02:00,960
quickly because

38
00:02:00,960 --> 00:02:03,200
i can spoiler that we are intending to

39
00:02:03,200 --> 00:02:04,399
do a

40
00:02:04,399 --> 00:02:08,000
virtual interim very very short term

41
00:02:08,000 --> 00:02:10,800
next to this meeting here and therefore

42
00:02:10,800 --> 00:02:12,879
uh today you will basically

43
00:02:12,879 --> 00:02:16,319
get an um insight in what topics are

44
00:02:16,319 --> 00:02:17,680
interesting in this space

45
00:02:17,680 --> 00:02:19,760
and uh then we can have a discussion on

46
00:02:19,760 --> 00:02:23,840
that so alex say please

47
00:02:25,599 --> 00:02:28,560
do they know takers

48
00:02:30,080 --> 00:02:32,879
yes apologies yeah yes any volunteers

49
00:02:32,879 --> 00:02:33,840
for the scribe

50
00:02:33,840 --> 00:02:39,680
in the go dmd please

51
00:02:42,239 --> 00:02:44,720
i can

52
00:02:48,840 --> 00:02:53,040
okay thank you

53
00:02:59,040 --> 00:03:02,959
okay moving on to the first presentation

54
00:03:02,959 --> 00:03:04,800
and i'm sorry that i have to switch this

55
00:03:04,800 --> 00:03:06,640
here i think i have to restart sharing

56
00:03:06,640 --> 00:03:08,400
because there are multiple

57
00:03:08,400 --> 00:03:19,040
pdfc on my system today

58
00:03:19,040 --> 00:03:22,800
huh this is warren and

59
00:03:22,800 --> 00:03:25,200
um i up first if so i can present that

60
00:03:25,200 --> 00:03:26,640
way you do okay

61
00:03:26,640 --> 00:03:33,839
okay let me present us to share screen

62
00:03:34,080 --> 00:03:35,920
somebody has to click the button to

63
00:03:35,920 --> 00:03:38,720
grant me access

64
00:03:38,720 --> 00:03:42,400
yes a chrome tab

65
00:03:42,400 --> 00:03:44,879
charter interpretation there we go

66
00:03:44,879 --> 00:03:46,000
hopefully that's

67
00:03:46,000 --> 00:03:49,360
sharing correctly so hi everyone

68
00:03:49,360 --> 00:03:52,159
um as hank said we are fairly low on

69
00:03:52,159 --> 00:03:53,519
time so i'm going to go through this

70
00:03:53,519 --> 00:03:54,959
really quickly

71
00:03:54,959 --> 00:03:56,799
but i want to give people a quick

72
00:03:56,799 --> 00:03:59,280
introduction to the iot ops charter

73
00:03:59,280 --> 00:04:01,120
because this is somewhat of an unusual

74
00:04:01,120 --> 00:04:03,599
working group

75
00:04:03,599 --> 00:04:07,200
so this is the iot ops charter

76
00:04:07,200 --> 00:04:09,680
wow that didn't work there we go it's

77
00:04:09,680 --> 00:04:11,040
really long isn't it

78
00:04:11,040 --> 00:04:14,080
it has many many words in it here are

79
00:04:14,080 --> 00:04:16,399
some of them

80
00:04:16,399 --> 00:04:19,600
so the iot apps working group is charted

81
00:04:19,600 --> 00:04:21,519
for the discussion of operational issues

82
00:04:21,519 --> 00:04:24,639
related to iot devices

83
00:04:24,639 --> 00:04:26,639
for a long time it's been really clear

84
00:04:26,639 --> 00:04:28,000
to us in the ietf

85
00:04:28,000 --> 00:04:31,600
that we need some sort of iot related

86
00:04:31,600 --> 00:04:32,880
working group

87
00:04:32,880 --> 00:04:35,040
um there's a huge amount of work that

88
00:04:35,040 --> 00:04:37,600
could be considered iot related

89
00:04:37,600 --> 00:04:39,520
you know this is done in ace anima core

90
00:04:39,520 --> 00:04:41,360
drop roll lpwan

91
00:04:41,360 --> 00:04:45,680
etc but there isn't really a

92
00:04:45,680 --> 00:04:49,120
sort of overarching architecture

93
00:04:49,120 --> 00:04:52,160
um we've got all these building blocks

94
00:04:52,160 --> 00:04:53,520
but there isn't really anything that

95
00:04:53,520 --> 00:04:55,759
says if you take all of these building

96
00:04:55,759 --> 00:04:56,320
blocks

97
00:04:56,320 --> 00:04:58,960
and you want to actually build an iot

98
00:04:58,960 --> 00:04:59,919
thing

99
00:04:59,919 --> 00:05:03,120
this is how you do it um

100
00:05:03,120 --> 00:05:06,400
and so for the past many years six or

101
00:05:06,400 --> 00:05:07,520
seven at least

102
00:05:07,520 --> 00:05:08,720
we've been talking about actually

103
00:05:08,720 --> 00:05:10,960
chartering something but we kept running

104
00:05:10,960 --> 00:05:12,479
into the problem of

105
00:05:12,479 --> 00:05:14,800
we're not quite sure what area should go

106
00:05:14,800 --> 00:05:16,960
in we're not quite sure how to limit the

107
00:05:16,960 --> 00:05:18,320
scope

108
00:05:18,320 --> 00:05:20,639
um we're not quite sure how to make it

109
00:05:20,639 --> 00:05:22,800
actually all work

110
00:05:22,800 --> 00:05:25,199
um and this ended up the perfect being

111
00:05:25,199 --> 00:05:26,639
the enemy the good

112
00:05:26,639 --> 00:05:28,080
we couldn't actually get anything

113
00:05:28,080 --> 00:05:29,840
charted because we kept running into

114
00:05:29,840 --> 00:05:31,680
these issues

115
00:05:31,680 --> 00:05:35,120
so um after a while we decided that

116
00:05:35,120 --> 00:05:38,639
we should just do something and so this

117
00:05:38,639 --> 00:05:41,759
is the sort of initial first iot ops

118
00:05:41,759 --> 00:05:45,759
working group um

119
00:05:45,919 --> 00:05:48,720
because of the problem of defining the

120
00:05:48,720 --> 00:05:49,919
scope

121
00:05:49,919 --> 00:05:51,759
and the problem of figuring out where

122
00:05:51,759 --> 00:05:54,080
exactly the work is going

123
00:05:54,080 --> 00:05:57,280
we are trying something new this is

124
00:05:57,280 --> 00:05:58,000
going to be

125
00:05:58,000 --> 00:06:01,360
a new concept in the ietf and it's a

126
00:06:01,360 --> 00:06:03,600
discussion group

127
00:06:03,600 --> 00:06:06,960
the idea is instead of being a normal

128
00:06:06,960 --> 00:06:08,560
style working group

129
00:06:08,560 --> 00:06:10,639
this is going to be a venue where people

130
00:06:10,639 --> 00:06:12,319
can come together and say

131
00:06:12,319 --> 00:06:13,680
you know i took a little bit of stuff

132
00:06:13,680 --> 00:06:15,759
from ace i took some stuff from

133
00:06:15,759 --> 00:06:19,120
lp1 i took some some stuff from suit

134
00:06:19,120 --> 00:06:21,680
and i mixed it all together and it

135
00:06:21,680 --> 00:06:23,120
almost works

136
00:06:23,120 --> 00:06:24,560
except that i can't figure out how to

137
00:06:24,560 --> 00:06:27,199
make this last little bit work

138
00:06:27,199 --> 00:06:31,199
um or you know i have gone through

139
00:06:31,199 --> 00:06:34,319
and i have built and deployed my iot

140
00:06:34,319 --> 00:06:35,680
architecture

141
00:06:35,680 --> 00:06:37,520
but when i went to actually deploy it i

142
00:06:37,520 --> 00:06:39,280
realized i had a million devices that

143
00:06:39,280 --> 00:06:40,560
are deployed now

144
00:06:40,560 --> 00:06:43,120
and the actual operational aspects of

145
00:06:43,120 --> 00:06:44,000
managing the

146
00:06:44,000 --> 00:06:47,440
this number of devices are really hard

147
00:06:47,440 --> 00:06:50,479
or something similar

148
00:06:50,479 --> 00:06:55,120
so um as i said this is a new style of

149
00:06:55,120 --> 00:06:56,319
working group

150
00:06:56,319 --> 00:06:59,759
um it's for discussion and for people to

151
00:06:59,759 --> 00:07:00,080
share

152
00:07:00,080 --> 00:07:02,960
information but it's not likely to do

153
00:07:02,960 --> 00:07:04,880
that much actual document creation

154
00:07:04,880 --> 00:07:06,560
itself

155
00:07:06,560 --> 00:07:08,400
the working group can do things like

156
00:07:08,400 --> 00:07:10,960
publish operational practices

157
00:07:10,960 --> 00:07:12,800
and it can do things like document

158
00:07:12,800 --> 00:07:14,160
requirements

159
00:07:14,160 --> 00:07:16,800
so for example if people try and

160
00:07:16,800 --> 00:07:18,720
implement things using

161
00:07:18,720 --> 00:07:20,639
you know protocol x developed in the

162
00:07:20,639 --> 00:07:22,479
ietf and protocol y developed in the

163
00:07:22,479 --> 00:07:23,919
ietf

164
00:07:23,919 --> 00:07:26,080
and when we try and put them together we

165
00:07:26,080 --> 00:07:27,599
realize what we're missing

166
00:07:27,599 --> 00:07:29,280
is something really important which is

167
00:07:29,280 --> 00:07:31,120
said

168
00:07:31,120 --> 00:07:33,440
we can document these sorts of

169
00:07:33,440 --> 00:07:34,880
requirements

170
00:07:34,880 --> 00:07:38,720
and explain what the missing bits are

171
00:07:38,720 --> 00:07:41,199
this working group is not very likely to

172
00:07:41,199 --> 00:07:42,400
actually

173
00:07:42,400 --> 00:07:46,479
create protocol said um

174
00:07:46,479 --> 00:07:48,800
instead what will happen is we will most

175
00:07:48,800 --> 00:07:49,520
likely say

176
00:07:49,520 --> 00:07:52,319
that's best developed in existing

177
00:07:52,319 --> 00:07:53,840
working group

178
00:07:53,840 --> 00:07:56,160
or potentially you know there is no

179
00:07:56,160 --> 00:07:56,960
working group

180
00:07:56,960 --> 00:08:01,039
that is exactly perfect for this work

181
00:08:01,039 --> 00:08:03,120
and so we might end up chartering new

182
00:08:03,120 --> 00:08:05,520
working groups either in the ops area

183
00:08:05,520 --> 00:08:08,639
or in other areas

184
00:08:09,919 --> 00:08:11,680
the other thing that this working group

185
00:08:11,680 --> 00:08:13,919
is likely to be good for

186
00:08:13,919 --> 00:08:17,120
is newcomers to the ietf people who have

187
00:08:17,120 --> 00:08:19,199
already started developing an iot

188
00:08:19,199 --> 00:08:20,639
ecosystem

189
00:08:20,639 --> 00:08:22,800
um are going to come along and say the

190
00:08:22,800 --> 00:08:25,039
ietf has all of this work

191
00:08:25,039 --> 00:08:27,120
i don't really know where my particular

192
00:08:27,120 --> 00:08:28,800
section fits in

193
00:08:28,800 --> 00:08:31,120
or you know are you already working on

194
00:08:31,120 --> 00:08:32,880
this particular set of protocols or

195
00:08:32,880 --> 00:08:33,839
problems

196
00:08:33,839 --> 00:08:36,000
and so iot ops is supposed to be a

197
00:08:36,000 --> 00:08:38,240
friendly helpful way to introduce people

198
00:08:38,240 --> 00:08:39,039
to

199
00:08:39,039 --> 00:08:42,080
to our work and where it's happening

200
00:08:42,080 --> 00:08:45,120
um as i've mentioned a number of times

201
00:08:45,120 --> 00:08:45,600
now

202
00:08:45,600 --> 00:08:47,920
this is a new concept a new style of

203
00:08:47,920 --> 00:08:50,080
working group in the ietf

204
00:08:50,080 --> 00:08:53,120
and it was as you've probably realized

205
00:08:53,120 --> 00:08:55,600
very difficult to get charted it took us

206
00:08:55,600 --> 00:08:57,760
a long time to try and actually get

207
00:08:57,760 --> 00:09:00,399
get the charter created and a fair bit

208
00:09:00,399 --> 00:09:02,240
of that is because it doesn't really fit

209
00:09:02,240 --> 00:09:04,720
into our existing structure

210
00:09:04,720 --> 00:09:07,920
so what we're asking is about one year

211
00:09:07,920 --> 00:09:09,760
after chartering

212
00:09:09,760 --> 00:09:11,600
we're going to ask the chairs in

213
00:09:11,600 --> 00:09:13,839
collaboration with the working group

214
00:09:13,839 --> 00:09:16,399
to prepare a report for the iesg and

215
00:09:16,399 --> 00:09:18,640
ietf as a whole

216
00:09:18,640 --> 00:09:20,480
explaining what the working group has

217
00:09:20,480 --> 00:09:22,240
managed to accomplish

218
00:09:22,240 --> 00:09:26,959
but also how this idea of a

219
00:09:26,959 --> 00:09:29,600
discussion style working group works

220
00:09:29,600 --> 00:09:30,800
does this work well

221
00:09:30,800 --> 00:09:32,560
is it worth us having more discussion

222
00:09:32,560 --> 00:09:34,480
groups in

223
00:09:34,480 --> 00:09:37,680
other areas or on other topics

224
00:09:37,680 --> 00:09:39,839
um rob and i obviously believe that this

225
00:09:39,839 --> 00:09:42,480
is a good concept and will work well

226
00:09:42,480 --> 00:09:44,800
a way to build architectures from our

227
00:09:44,800 --> 00:09:46,160
building blocks

228
00:09:46,160 --> 00:09:50,000
but that's still open to

229
00:09:50,000 --> 00:09:54,800
open proof so um

230
00:09:54,800 --> 00:09:57,040
as i mentioned the chair said keep this

231
00:09:57,040 --> 00:09:57,839
really short

232
00:09:57,839 --> 00:10:01,519
so i'm keeping it really short um

233
00:10:01,519 --> 00:10:04,240
questions for myself and or rob many of

234
00:10:04,240 --> 00:10:06,399
them we're likely to have to do

235
00:10:06,399 --> 00:10:09,519
offline but

236
00:10:10,000 --> 00:10:12,959
you're underscore so just speak yeah a

237
00:10:12,959 --> 00:10:14,320
thank you very much

238
00:10:14,320 --> 00:10:17,519
b i would suggest to the chairs to query

239
00:10:17,519 --> 00:10:18,000
feedback

240
00:10:18,000 --> 00:10:20,959
about the usefulness of the group you

241
00:10:20,959 --> 00:10:21,760
know

242
00:10:21,760 --> 00:10:23,600
already you know this week and every

243
00:10:23,600 --> 00:10:25,519
other other time we meet because that

244
00:10:25,519 --> 00:10:27,040
makes it a lot easier

245
00:10:27,040 --> 00:10:29,760
to track its success because they'll

246
00:10:29,760 --> 00:10:31,519
typically be in each of the meeting

247
00:10:31,519 --> 00:10:32,320
different

248
00:10:32,320 --> 00:10:34,800
participants so just to make all these

249
00:10:34,800 --> 00:10:36,079
knucklehead folks

250
00:10:36,079 --> 00:10:38,880
in administrative happy about you know

251
00:10:38,880 --> 00:10:40,959
that this group is very useful which i

252
00:10:40,959 --> 00:10:41,279
do

253
00:10:41,279 --> 00:10:44,000
completely agree with thirdly to the

254
00:10:44,000 --> 00:10:44,720
point so i

255
00:10:44,720 --> 00:10:47,120
think that requirements already is

256
00:10:47,120 --> 00:10:48,079
fairly

257
00:10:48,079 --> 00:10:50,800
far down the path of knowing how to

258
00:10:50,800 --> 00:10:51,360
solve

259
00:10:51,360 --> 00:10:53,040
things right so i would very much hope

260
00:10:53,040 --> 00:10:55,839
that something like problem statements

261
00:10:55,839 --> 00:10:57,760
you know looking at use cases and how

262
00:10:57,760 --> 00:10:59,600
they don't work well

263
00:10:59,600 --> 00:11:01,360
you know as a discussion startup would

264
00:11:01,360 --> 00:11:02,720
also be within scope

265
00:11:02,720 --> 00:11:05,519
and that's a question

266
00:11:06,720 --> 00:11:09,279
yep yeah maybe maybe requirements wasn't

267
00:11:09,279 --> 00:11:11,200
quite perfect sort of gap analysis

268
00:11:11,200 --> 00:11:13,360
and similar might have been a better set

269
00:11:13,360 --> 00:11:14,720
of words but yeah you're right

270
00:11:14,720 --> 00:11:18,000
requirements is too far down

271
00:11:24,399 --> 00:11:26,839
uh good morning good afternoon good

272
00:11:26,839 --> 00:11:28,240
evening um

273
00:11:28,240 --> 00:11:30,079
thanks for taking my comment and thank

274
00:11:30,079 --> 00:11:32,560
you uh warren for setting this group up

275
00:11:32,560 --> 00:11:34,959
um and for alexi for you for for

276
00:11:34,959 --> 00:11:36,240
supporting it and

277
00:11:36,240 --> 00:11:38,959
a special thanks to hank for agreeing to

278
00:11:38,959 --> 00:11:41,120
take on this task which really is rather

279
00:11:41,120 --> 00:11:42,959
amorphous as you pointed out

280
00:11:42,959 --> 00:11:45,440
just been a struggle um i was just going

281
00:11:45,440 --> 00:11:46,399
to answer

282
00:11:46,399 --> 00:11:48,880
a little bit to to tour this on that

283
00:11:48,880 --> 00:11:49,519
point

284
00:11:49,519 --> 00:11:52,320
which is watch this space because i

285
00:11:52,320 --> 00:11:54,320
actually have a contribution towards the

286
00:11:54,320 --> 00:11:55,040
end which

287
00:11:55,040 --> 00:11:57,920
i think goes to exactly what warren is

288
00:11:57,920 --> 00:11:59,680
is looking for

289
00:11:59,680 --> 00:12:02,320
um it's it's not trying to solve a

290
00:12:02,320 --> 00:12:03,839
particular problem

291
00:12:03,839 --> 00:12:05,120
at this point in time it's just

292
00:12:05,120 --> 00:12:07,920
highlighting a problem um in terms of

293
00:12:07,920 --> 00:12:10,639
a potential architectural component in

294
00:12:10,639 --> 00:12:12,720
the picture that's missing in onboarding

295
00:12:12,720 --> 00:12:13,920
but i i don't want to get into the

296
00:12:13,920 --> 00:12:15,760
presentation i'll just say watch this

297
00:12:15,760 --> 00:12:17,600
space and if we don't have time for it

298
00:12:17,600 --> 00:12:24,880
go read the draft

299
00:12:24,880 --> 00:12:27,120
excellent well i think i managed to keep

300
00:12:27,120 --> 00:12:29,120
it just under 10 minutes

301
00:12:29,120 --> 00:12:31,839
did want to just mention that 99 of this

302
00:12:31,839 --> 00:12:33,440
was actually rob pushing

303
00:12:33,440 --> 00:12:37,120
and me sort of following along and so

304
00:12:37,120 --> 00:12:38,639
he's actually the one who deserves the

305
00:12:38,639 --> 00:12:40,880
thanks and

306
00:12:40,880 --> 00:12:43,760
back to you all yeah we have to cut the

307
00:12:43,760 --> 00:12:45,120
queue unfortunately

308
00:12:45,120 --> 00:12:47,839
um to keep in time but we can again

309
00:12:47,839 --> 00:12:48,800
there will be a

310
00:12:48,800 --> 00:12:50,959
in the near future and interim here i

311
00:12:50,959 --> 00:12:52,480
will now

312
00:12:52,480 --> 00:12:55,760
share the slides

313
00:12:55,760 --> 00:12:59,680
for the first presentation

314
00:13:00,000 --> 00:13:03,600
which are not these slides but

315
00:13:03,600 --> 00:13:07,839
this one is this visible

316
00:13:08,160 --> 00:13:11,680
light with mtm is that shared now

317
00:13:13,279 --> 00:13:16,000
i i can't see it i only see your gender

318
00:13:16,000 --> 00:13:17,120
slide

319
00:13:17,120 --> 00:13:20,160
okay then it does not change so um done

320
00:13:20,160 --> 00:13:25,040
alexa well i can also present

321
00:13:25,040 --> 00:13:28,560
oh that is a blast thank you

322
00:13:28,560 --> 00:13:30,240
i'm still trying to figuring out how

323
00:13:30,240 --> 00:13:35,839
mid-echo prioritize my tabs

324
00:13:40,639 --> 00:13:43,040
sorry for the can you can you see my

325
00:13:43,040 --> 00:13:45,439
skin

326
00:13:45,519 --> 00:13:48,880
okay excellent thank you yeah my name is

327
00:13:48,880 --> 00:13:49,839
hannes travinik

328
00:13:49,839 --> 00:13:52,399
and i briefly wanted to talk about the

329
00:13:52,399 --> 00:13:53,519
work done in the

330
00:13:53,519 --> 00:13:56,560
oma of mobile alliance on the

331
00:13:56,560 --> 00:13:59,120
lightweight m2m lightweight machine to

332
00:13:59,120 --> 00:14:00,839
machine protocol for iot device

333
00:14:00,839 --> 00:14:02,320
management

334
00:14:02,320 --> 00:14:05,279
give you a brief overview very quickly

335
00:14:05,279 --> 00:14:07,040
only

336
00:14:07,040 --> 00:14:09,760
so if you open the specifications which

337
00:14:09,760 --> 00:14:11,120
are publicly available and

338
00:14:11,120 --> 00:14:14,160
at the end of the slide deck

339
00:14:14,160 --> 00:14:17,600
listed as links you will see that the

340
00:14:17,600 --> 00:14:19,199
architecture

341
00:14:19,199 --> 00:14:24,160
um here shown in this yellow bubble

342
00:14:24,160 --> 00:14:26,399
consists of a of a lightweight m2m

343
00:14:26,399 --> 00:14:27,440
client

344
00:14:27,440 --> 00:14:30,160
which resides in an iot device which

345
00:14:30,160 --> 00:14:31,279
then talks to

346
00:14:31,279 --> 00:14:34,480
two types of servers a bootstrap

347
00:14:34,480 --> 00:14:36,560
server which is a fancy name for key

348
00:14:36,560 --> 00:14:38,079
distribution server

349
00:14:38,079 --> 00:14:40,639
and a lightweight mdm server which does

350
00:14:40,639 --> 00:14:43,839
the rest of the iot device management

351
00:14:43,839 --> 00:14:44,959
but there's also

352
00:14:44,959 --> 00:14:47,760
obviously happening um something outside

353
00:14:47,760 --> 00:14:48,399
that

354
00:14:48,399 --> 00:14:51,040
yellow box which is the interaction with

355
00:14:51,040 --> 00:14:53,519
some application servers or apps or

356
00:14:53,519 --> 00:14:56,399
who knows what and those are typically

357
00:14:56,399 --> 00:14:58,480
in deployments also found of course

358
00:14:58,480 --> 00:15:01,920
but are not covered in the specification

359
00:15:01,920 --> 00:15:03,600
itself they're actually other standards

360
00:15:03,600 --> 00:15:06,160
organizations doing that type of work

361
00:15:06,160 --> 00:15:08,079
also not uh shown here which i would

362
00:15:08,079 --> 00:15:09,600
like to point out given

363
00:15:09,600 --> 00:15:12,800
some of the prior working the idf is um

364
00:15:12,800 --> 00:15:16,240
any type of provisioning of credentials

365
00:15:16,240 --> 00:15:17,040
for

366
00:15:17,040 --> 00:15:18,560
or distribution of credentials for

367
00:15:18,560 --> 00:15:21,199
network access uh because there are

368
00:15:21,199 --> 00:15:23,199
lots of different radio technologies out

369
00:15:23,199 --> 00:15:25,120
there and they often have their own

370
00:15:25,120 --> 00:15:28,000
scheme um so this is really about

371
00:15:28,000 --> 00:15:29,440
distributing

372
00:15:29,440 --> 00:15:31,199
sort of or configuring honesty your

373
00:15:31,199 --> 00:15:32,800
slides are not advancing

374
00:15:32,800 --> 00:15:36,000
okay but can you see now

375
00:15:36,480 --> 00:15:38,240
you can just see the title slide a

376
00:15:38,240 --> 00:15:40,320
powerpoint window and you've gone full

377
00:15:40,320 --> 00:15:43,440
screen on it which is a different window

378
00:15:43,440 --> 00:15:47,040
does it work now

379
00:15:48,560 --> 00:15:51,759
yes okay i'll just stay with this

380
00:15:51,759 --> 00:15:55,120
i hope you can still see um so this is

381
00:15:55,120 --> 00:15:55,600
the

382
00:15:55,600 --> 00:15:57,440
and for sorry uh this is the slide deck

383
00:15:57,440 --> 00:15:59,199
i was just a slight i was just showing

384
00:15:59,199 --> 00:16:00,880
with the architecture

385
00:16:00,880 --> 00:16:04,160
um and

386
00:16:04,160 --> 00:16:07,360
to describe these um so the problem what

387
00:16:07,360 --> 00:16:09,680
is being described is a protocol

388
00:16:09,680 --> 00:16:12,560
and there are different interfaces and

389
00:16:12,560 --> 00:16:14,160
the one that is relevant to

390
00:16:14,160 --> 00:16:17,680
the discussion here on bootstrapping or

391
00:16:17,680 --> 00:16:19,600
the key distribution

392
00:16:19,600 --> 00:16:23,040
or security particular is the so-called

393
00:16:23,040 --> 00:16:24,399
bootstrap interface

394
00:16:24,399 --> 00:16:27,040
which works between the client and the

395
00:16:27,040 --> 00:16:28,800
bootstrap server

396
00:16:28,800 --> 00:16:32,240
and it provisions credentials

397
00:16:32,240 --> 00:16:34,079
configuration informations about what

398
00:16:34,079 --> 00:16:35,759
server detectors

399
00:16:35,759 --> 00:16:38,160
and and details of that configuration

400
00:16:38,160 --> 00:16:39,600
communication interaction

401
00:16:39,600 --> 00:16:42,240
and also access control lists um there

402
00:16:42,240 --> 00:16:45,279
are also other interfaces which are

403
00:16:45,279 --> 00:16:47,519
equally important than actually the main

404
00:16:47,519 --> 00:16:48,639
purpose of of

405
00:16:48,639 --> 00:16:52,320
doing the device management uh but

406
00:16:52,320 --> 00:16:55,440
they are less security relevant i would

407
00:16:55,440 --> 00:16:57,839
argue

408
00:16:58,079 --> 00:17:01,519
um when you when we look at the

409
00:17:01,519 --> 00:17:05,280
protocol stack and this is a a figure

410
00:17:05,280 --> 00:17:06,959
of the stack of the latest version of

411
00:17:06,959 --> 00:17:09,919
the lightweight m2m specification

412
00:17:09,919 --> 00:17:12,079
um mentioning that there are in the

413
00:17:12,079 --> 00:17:13,760
meanwhile various different versions

414
00:17:13,760 --> 00:17:15,119
published

415
00:17:15,119 --> 00:17:17,119
you can see that first of all there are

416
00:17:17,119 --> 00:17:19,919
lots of iudf protocols being used here

417
00:17:19,919 --> 00:17:22,319
but also that the lightweight m2m

418
00:17:22,319 --> 00:17:23,199
messaging

419
00:17:23,199 --> 00:17:25,839
which is on the top runs over different

420
00:17:25,839 --> 00:17:26,640
transports

421
00:17:26,640 --> 00:17:29,919
um and can thereby then daily to

422
00:17:29,919 --> 00:17:30,799
specific

423
00:17:30,799 --> 00:17:34,160
usage environment so mbiod is different

424
00:17:34,160 --> 00:17:34,799
than

425
00:17:34,799 --> 00:17:38,320
let's say wi-fi deployment and

426
00:17:38,320 --> 00:17:41,520
mqtt is different than co-op and likely

427
00:17:41,520 --> 00:17:42,080
m2m

428
00:17:42,080 --> 00:17:45,120
doesn't care that much in general about

429
00:17:45,120 --> 00:17:46,480
what's really done

430
00:17:46,480 --> 00:17:48,080
under the hood but of course as a

431
00:17:48,080 --> 00:17:50,000
specification developer

432
00:17:50,000 --> 00:17:52,400
you need to describe those in addition

433
00:17:52,400 --> 00:17:53,520
to what is

434
00:17:53,520 --> 00:17:55,200
shown in this diagram there are lots of

435
00:17:55,200 --> 00:17:57,440
other idf specifications being used and

436
00:17:57,440 --> 00:17:58,400
i listed

437
00:17:58,400 --> 00:18:00,960
some of them in the on the bottom of the

438
00:18:00,960 --> 00:18:02,000
of the slide um

439
00:18:02,000 --> 00:18:03,840
of course many of the co-op extensions

440
00:18:03,840 --> 00:18:05,880
but also security

441
00:18:05,880 --> 00:18:08,720
specifications um and sort of the

442
00:18:08,720 --> 00:18:09,440
encoding

443
00:18:09,440 --> 00:18:12,160
mechanisms that the idf has been working

444
00:18:12,160 --> 00:18:13,280
on

445
00:18:13,280 --> 00:18:17,200
like sibor cinema etc

446
00:18:17,280 --> 00:18:20,799
when it comes to the security aspects

447
00:18:20,799 --> 00:18:23,200
one important piece is sort of this what

448
00:18:23,200 --> 00:18:24,720
the specification refers as

449
00:18:24,720 --> 00:18:26,400
bootstrapping

450
00:18:26,400 --> 00:18:28,960
or some people call it enrollment um key

451
00:18:28,960 --> 00:18:29,919
distribution

452
00:18:29,919 --> 00:18:32,960
um you name it is that

453
00:18:32,960 --> 00:18:35,600
a device the lightweight m2m client in

454
00:18:35,600 --> 00:18:36,240
the iep

455
00:18:36,240 --> 00:18:39,679
device uh needs to talk to the server

456
00:18:39,679 --> 00:18:42,080
side the lightweight m2m server and

457
00:18:42,080 --> 00:18:44,880
in order to do so securely either using

458
00:18:44,880 --> 00:18:45,440
dls

459
00:18:45,440 --> 00:18:50,480
dtls um oscore or a combination of those

460
00:18:50,480 --> 00:18:54,880
sort of osco on top of dls or dtls

461
00:18:54,880 --> 00:18:58,000
it needs to have the credentials it

462
00:18:58,000 --> 00:18:59,679
needs to have the configuration it needs

463
00:18:59,679 --> 00:19:02,559
to potentially have access control lists

464
00:19:02,559 --> 00:19:04,720
and there's obviously the question of

465
00:19:04,720 --> 00:19:06,240
where this comes from

466
00:19:06,240 --> 00:19:08,400
and one possibility is to provision this

467
00:19:08,400 --> 00:19:09,840
straight into the device during

468
00:19:09,840 --> 00:19:11,360
manufacturing

469
00:19:11,360 --> 00:19:14,320
but this is um less practical because

470
00:19:14,320 --> 00:19:16,000
you already need to know a lot of that

471
00:19:16,000 --> 00:19:17,600
information up front

472
00:19:17,600 --> 00:19:21,440
and so to make this process simpler

473
00:19:21,440 --> 00:19:24,640
this bootstrapping mechanism was

474
00:19:24,640 --> 00:19:25,919
introduced

475
00:19:25,919 --> 00:19:29,679
which um allows the bootstrap server to

476
00:19:29,679 --> 00:19:31,520
send this information to the lightweight

477
00:19:31,520 --> 00:19:33,039
m2m client

478
00:19:33,039 --> 00:19:35,039
so that it can then talk to these

479
00:19:35,039 --> 00:19:36,320
different

480
00:19:36,320 --> 00:19:39,840
servers and to send sensor data and

481
00:19:39,840 --> 00:19:43,120
who knows what um to those servers

482
00:19:43,120 --> 00:19:46,160
that's what we call bootstrapping

483
00:19:46,160 --> 00:19:48,240
there are different forms obviously from

484
00:19:48,240 --> 00:19:50,160
a security point of view

485
00:19:50,160 --> 00:19:51,919
and i believe the most important ones

486
00:19:51,919 --> 00:19:54,720
are uh whether the keys are generated

487
00:19:54,720 --> 00:19:56,320
on the server side or whether they are

488
00:19:56,320 --> 00:19:58,320
generated on the client side

489
00:19:58,320 --> 00:20:01,440
and the specification supports both

490
00:20:01,440 --> 00:20:03,280
also with different types of credentials

491
00:20:03,280 --> 00:20:06,000
um symmetric keys raw public keys and

492
00:20:06,000 --> 00:20:07,440
certificates

493
00:20:07,440 --> 00:20:10,880
and my favorite uh obviously is

494
00:20:10,880 --> 00:20:13,760
to generate the keys on the device side

495
00:20:13,760 --> 00:20:14,640
and to never

496
00:20:14,640 --> 00:20:16,960
have the private key leave the device

497
00:20:16,960 --> 00:20:18,159
and this is accomplished

498
00:20:18,159 --> 00:20:20,000
um using the enrollment of a secure

499
00:20:20,000 --> 00:20:22,000
transport specification

500
00:20:22,000 --> 00:20:26,480
which as you know is an um idf document

501
00:20:26,480 --> 00:20:29,200
there's a um a flow in there which sort

502
00:20:29,200 --> 00:20:31,039
of details one of those exchanges

503
00:20:31,039 --> 00:20:33,760
graphically but i will skip it in for

504
00:20:33,760 --> 00:20:36,240
the benefit of time

505
00:20:36,240 --> 00:20:38,240
uh and instead would like to talk about

506
00:20:38,240 --> 00:20:40,720
the data model which i think is also

507
00:20:40,720 --> 00:20:43,360
very important for getting this whole

508
00:20:43,360 --> 00:20:44,480
thing work

509
00:20:44,480 --> 00:20:46,240
and this relates to another recently

510
00:20:46,240 --> 00:20:48,000
created idf working group

511
00:20:48,000 --> 00:20:52,080
the asdf group um to which some of our

512
00:20:52,080 --> 00:20:54,480
members contributed to or still

513
00:20:54,480 --> 00:20:56,720
contributing to

514
00:20:56,720 --> 00:20:58,880
which is the data model because you need

515
00:20:58,880 --> 00:20:59,760
to have a way

516
00:20:59,760 --> 00:21:01,520
when you provision information to a

517
00:21:01,520 --> 00:21:03,120
device you need to have a

518
00:21:03,120 --> 00:21:05,440
notion of what are you provisioning and

519
00:21:05,440 --> 00:21:07,919
how does this whole hierarchy look like

520
00:21:07,919 --> 00:21:10,720
and the data model like with the m2m

521
00:21:10,720 --> 00:21:12,320
users is very simple

522
00:21:12,320 --> 00:21:13,760
and it's actually shown on the first

523
00:21:13,760 --> 00:21:16,640
line where you access um

524
00:21:16,640 --> 00:21:20,080
objects and resources in a sort of like

525
00:21:20,080 --> 00:21:23,760
uh sort of restful style and so a device

526
00:21:23,760 --> 00:21:25,280
can have multiple objects and

527
00:21:25,280 --> 00:21:29,440
objects have resources which contain um

528
00:21:29,440 --> 00:21:32,799
parameters essentially and there are

529
00:21:32,799 --> 00:21:35,679
um a several of them are specified in

530
00:21:35,679 --> 00:21:37,360
the lightweight m2m specification which

531
00:21:37,360 --> 00:21:39,440
are shown on the screen

532
00:21:39,440 --> 00:21:41,520
um the most important one for this

533
00:21:41,520 --> 00:21:43,679
discussion is probably the security

534
00:21:43,679 --> 00:21:46,080
object which contains all these

535
00:21:46,080 --> 00:21:47,440
different um

536
00:21:47,440 --> 00:21:49,919
keys and and parameters that are being

537
00:21:49,919 --> 00:21:50,880
provisioned

538
00:21:50,880 --> 00:21:52,799
but also that the others are obviously

539
00:21:52,799 --> 00:21:53,919
important as well

540
00:21:53,919 --> 00:21:55,600
knowing which server you should be

541
00:21:55,600 --> 00:21:57,760
talking to who is allowed to access

542
00:21:57,760 --> 00:22:00,400
certain information etc

543
00:22:00,400 --> 00:22:02,960
and if you go to one of the links at the

544
00:22:02,960 --> 00:22:04,240
end of the slide deck

545
00:22:04,240 --> 00:22:06,000
you will see that there's a registry

546
00:22:06,000 --> 00:22:07,919
with several hundred objects being

547
00:22:07,919 --> 00:22:08,960
registered

548
00:22:08,960 --> 00:22:12,000
doing all sorts of things from um from a

549
00:22:12,000 --> 00:22:13,600
water meter to

550
00:22:13,600 --> 00:22:18,799
a gas meter street lighting everything

551
00:22:19,120 --> 00:22:22,880
um this work has been around for a

552
00:22:22,880 --> 00:22:24,880
little while already so

553
00:22:24,880 --> 00:22:27,520
there the ninth test fest took place and

554
00:22:27,520 --> 00:22:28,960
the next one will be in two weeks

555
00:22:28,960 --> 00:22:31,760
um there at best fest we have counted

556
00:22:31,760 --> 00:22:34,000
more than 40 implementations

557
00:22:34,000 --> 00:22:36,480
and you can implement and run this and

558
00:22:36,480 --> 00:22:37,520
deploy it

559
00:22:37,520 --> 00:22:40,720
on a very small device

560
00:22:40,720 --> 00:22:43,600
so 64 kilobyte flash 16 kilobyte of ram

561
00:22:43,600 --> 00:22:44,559
isa

562
00:22:44,559 --> 00:22:47,280
is a possible scenario for full-blown uh

563
00:22:47,280 --> 00:22:49,200
implementation

564
00:22:49,200 --> 00:22:52,240
um as i mentioned uh is around for a

565
00:22:52,240 --> 00:22:54,159
little while and still working progress

566
00:22:54,159 --> 00:22:56,480
um with new versions and adding new

567
00:22:56,480 --> 00:22:57,440
features

568
00:22:57,440 --> 00:23:00,720
so seven years um of development time

569
00:23:00,720 --> 00:23:03,520
and we have a quite active developer

570
00:23:03,520 --> 00:23:05,679
community so there's a public github

571
00:23:05,679 --> 00:23:07,280
repository

572
00:23:07,280 --> 00:23:09,360
where developers can discuss and raise

573
00:23:09,360 --> 00:23:11,280
issues

574
00:23:11,280 --> 00:23:13,600
there's also a list of popular open

575
00:23:13,600 --> 00:23:15,520
source implementations that we

576
00:23:15,520 --> 00:23:19,200
collected uh and put here on this wiki

577
00:23:19,200 --> 00:23:21,840
um and here's the link to this github

578
00:23:21,840 --> 00:23:23,520
repository that i mentioned a

579
00:23:23,520 --> 00:23:27,200
second ago if you care about looking

580
00:23:27,200 --> 00:23:29,760
at the specifications here are the

581
00:23:29,760 --> 00:23:32,159
different versions version one

582
00:23:32,159 --> 00:23:35,520
um sort of 1.0 1.1.2 is the latest one

583
00:23:35,520 --> 00:23:37,919
which was published end of last year

584
00:23:37,919 --> 00:23:41,120
and um there are all sorts of additional

585
00:23:41,120 --> 00:23:41,919
documents

586
00:23:41,919 --> 00:23:43,919
extra features that were published on

587
00:23:43,919 --> 00:23:46,240
the site which you can find on on the

588
00:23:46,240 --> 00:23:48,559
other link and the last link is um

589
00:23:48,559 --> 00:23:51,840
do the object repository which really

590
00:23:51,840 --> 00:23:53,200
make the

591
00:23:53,200 --> 00:23:56,000
whole thing complete because um you need

592
00:23:56,000 --> 00:23:57,520
to have a description of the sensors

593
00:23:57,520 --> 00:23:59,279
actuators configuration information and

594
00:23:59,279 --> 00:24:00,000
so on

595
00:24:00,000 --> 00:24:01,600
so to manage your device always

596
00:24:01,600 --> 00:24:03,360
life-cycling

597
00:24:03,360 --> 00:24:06,720
and that's all i have um and

598
00:24:06,720 --> 00:24:08,320
if you are interested in any of the

599
00:24:08,320 --> 00:24:10,480
details and

600
00:24:10,480 --> 00:24:12,559
get lost in the specifications just drop

601
00:24:12,559 --> 00:24:14,400
me an email

602
00:24:14,400 --> 00:24:18,000
thank you

603
00:24:18,000 --> 00:24:21,760
do we have time for a quick question yes

604
00:24:21,760 --> 00:24:24,240
uh so very briefly harness thanks for

605
00:24:24,240 --> 00:24:26,080
this i have been reading this specs

606
00:24:26,080 --> 00:24:26,720
myself

607
00:24:26,720 --> 00:24:29,679
trying to summarize the bootstrapping my

608
00:24:29,679 --> 00:24:31,039
question is not

609
00:24:31,039 --> 00:24:33,520
related to bootstrapping but to the

610
00:24:33,520 --> 00:24:34,320
concept of

611
00:24:34,320 --> 00:24:37,840
acls or the access control lists

612
00:24:37,840 --> 00:24:41,440
uh is there any anything that the oma

613
00:24:41,440 --> 00:24:44,480
specs have to say about

614
00:24:44,480 --> 00:24:47,520
like the work done in ace or oauth

615
00:24:47,520 --> 00:24:51,200
or is that like then uh completely

616
00:24:51,200 --> 00:24:54,000
left out and or and if like is there

617
00:24:54,000 --> 00:24:57,679
some relation to the acs

618
00:24:58,000 --> 00:25:01,600
um yeah and so the the relationship

619
00:25:01,600 --> 00:25:04,640
and so all was our in ace um

620
00:25:04,640 --> 00:25:07,919
would be a dynamic model for managing

621
00:25:07,919 --> 00:25:10,559
uh access to iot devices i'm typically

622
00:25:10,559 --> 00:25:12,000
involving also humans

623
00:25:12,000 --> 00:25:14,480
unlike users let's say a technician

624
00:25:14,480 --> 00:25:17,760
trying to access a device

625
00:25:18,000 --> 00:25:20,480
and that's something that the

626
00:25:20,480 --> 00:25:23,120
lightweight m2m specification didn't do

627
00:25:23,120 --> 00:25:25,919
um partially knowing that there is this

628
00:25:25,919 --> 00:25:28,480
working the idf on on this specific

629
00:25:28,480 --> 00:25:31,679
case and so there is not much uh

630
00:25:31,679 --> 00:25:33,600
overlapping overlap in that regard so

631
00:25:33,600 --> 00:25:35,520
the lightweight m2m specification

632
00:25:35,520 --> 00:25:37,760
doesn't talk about

633
00:25:37,760 --> 00:25:40,400
permissions of users and and sort of

634
00:25:40,400 --> 00:25:42,159
more complicated scenarios that

635
00:25:42,159 --> 00:25:45,279
uh that are addressed by

636
00:25:45,279 --> 00:25:48,240
by lightweight m2m

637
00:25:52,080 --> 00:25:56,240
yeah there's a mistake in this uh

638
00:25:56,240 --> 00:25:59,039
on this page so that like the m2m 102

639
00:25:59,039 --> 00:26:00,799
was published in november

640
00:26:00,799 --> 00:26:04,640
2020 not 2003 not 2002 that would be

641
00:26:04,640 --> 00:26:07,600
going back in time

642
00:26:08,080 --> 00:26:11,120
thanks hannes um thank you uh

643
00:26:11,120 --> 00:26:14,400
a lot um so so the interesting to this

644
00:26:14,400 --> 00:26:16,400
would be of course to see uh what do you

645
00:26:16,400 --> 00:26:17,039
want to

646
00:26:17,039 --> 00:26:19,279
have what you would see here

647
00:26:19,279 --> 00:26:21,760
incorporated as ongoing work

648
00:26:21,760 --> 00:26:23,120
for this working group so maybe we can

649
00:26:23,120 --> 00:26:25,200
take this offline and we can discuss a

650
00:26:25,200 --> 00:26:25,919
little bit

651
00:26:25,919 --> 00:26:30,000
how this feeds i get um

652
00:26:30,000 --> 00:26:33,440
so so from uh for us in general

653
00:26:33,440 --> 00:26:36,080
it has been extremely important to

654
00:26:36,080 --> 00:26:37,200
maintain

655
00:26:37,200 --> 00:26:40,240
a sort of a lively exchange with the

656
00:26:40,240 --> 00:26:42,320
iedf community because we have so many

657
00:26:42,320 --> 00:26:45,360
dependencies on idf specifications

658
00:26:45,360 --> 00:26:48,720
and so there's um we would appreciate a

659
00:26:48,720 --> 00:26:49,600
better

660
00:26:49,600 --> 00:26:52,000
flow of information back and forth

661
00:26:52,000 --> 00:26:54,240
between the groups and also

662
00:26:54,240 --> 00:26:57,039
understanding better how some of the

663
00:26:57,039 --> 00:26:59,760
specifications evolve

664
00:26:59,760 --> 00:27:03,679
so that we can properly make use of them

665
00:27:04,320 --> 00:27:07,039
thanks anis and uh i think that's a good

666
00:27:07,039 --> 00:27:07,840
segue to

667
00:27:07,840 --> 00:27:11,039
joffrey hi sophie hi it's your flaw

668
00:27:11,039 --> 00:27:13,919
okay thank you um so this is jeff cooper

669
00:27:13,919 --> 00:27:14,559
and uh

670
00:27:14,559 --> 00:27:16,960
i'm here from intel corporation but also

671
00:27:16,960 --> 00:27:18,159
from the

672
00:27:18,159 --> 00:27:20,799
uh the the fido organization phyto

673
00:27:20,799 --> 00:27:21,760
alliance

674
00:27:21,760 --> 00:27:23,440
um and i wanted to talk about fido

675
00:27:23,440 --> 00:27:24,880
device on board

676
00:27:24,880 --> 00:27:28,159
um so fido device on board let's see if

677
00:27:28,159 --> 00:27:28,559
i can

678
00:27:28,559 --> 00:27:31,840
uh figure out how to there we go

679
00:27:31,840 --> 00:27:35,039
okay so um the fido alliance uh

680
00:27:35,039 --> 00:27:36,880
about a year and a half ago we got

681
00:27:36,880 --> 00:27:38,320
together and decided to set up

682
00:27:38,320 --> 00:27:41,360
uh an internet org a uh an iot

683
00:27:41,360 --> 00:27:43,520
organization and you can see that we

684
00:27:43,520 --> 00:27:45,200
brought in sort of an interesting group

685
00:27:45,200 --> 00:27:47,279
of people which had a lot of csps a lot

686
00:27:47,279 --> 00:27:49,039
of chip companies

687
00:27:49,039 --> 00:27:51,840
we developed requirements we figured out

688
00:27:51,840 --> 00:27:52,880
that we wanted to

689
00:27:52,880 --> 00:27:55,120
fast track the development so we would

690
00:27:55,120 --> 00:27:55,919
pick one

691
00:27:55,919 --> 00:27:58,960
target we chose sdo secure device

692
00:27:58,960 --> 00:28:00,399
onboard from intel

693
00:28:00,399 --> 00:28:02,480
uh let me see if i think i don't need

694
00:28:02,480 --> 00:28:04,240
the video anymore so

695
00:28:04,240 --> 00:28:06,799
uh so we decided we would choose secure

696
00:28:06,799 --> 00:28:07,919
device on board

697
00:28:07,919 --> 00:28:10,320
we allowed for some modifications of it

698
00:28:10,320 --> 00:28:13,919
taking in some newer protocols cbor etc

699
00:28:13,919 --> 00:28:16,080
and we got to a review draft and you can

700
00:28:16,080 --> 00:28:17,840
see some of some characters

701
00:28:17,840 --> 00:28:19,760
for example hanu who just spoke i'm

702
00:28:19,760 --> 00:28:21,520
sorry hannes who just spoke

703
00:28:21,520 --> 00:28:24,559
um uh and we have a

704
00:28:24,559 --> 00:28:27,039
url and you can take a look at it uh and

705
00:28:27,039 --> 00:28:28,720
we're actually getting fairly close to

706
00:28:28,720 --> 00:28:29,039
uh

707
00:28:29,039 --> 00:28:32,640
to a a

708
00:28:32,880 --> 00:28:36,320
draft standard release of this protocol

709
00:28:36,320 --> 00:28:39,840
and see if i can still

710
00:28:39,840 --> 00:28:42,159
move forward and in addition to that we

711
00:28:42,159 --> 00:28:44,000
have an lf edge project which

712
00:28:44,000 --> 00:28:45,840
happens to still be called secure device

713
00:28:45,840 --> 00:28:48,000
onboard and eventually it'll change its

714
00:28:48,000 --> 00:28:48,399
name

715
00:28:48,399 --> 00:28:49,760
which is actually working on

716
00:28:49,760 --> 00:28:51,840
implementations of the this

717
00:28:51,840 --> 00:28:55,200
protocol and if you go to their um

718
00:28:55,200 --> 00:28:56,960
their github you'll actually be able to

719
00:28:56,960 --> 00:28:59,679
see first implementations

720
00:28:59,679 --> 00:29:02,159
based on the review draft um and you'll

721
00:29:02,159 --> 00:29:04,000
be able to go and and

722
00:29:04,000 --> 00:29:05,600
and take download them and implement

723
00:29:05,600 --> 00:29:07,760
them and try them out and there are full

724
00:29:07,760 --> 00:29:09,120
implementations of the

725
00:29:09,120 --> 00:29:11,120
protocol that are that are underway and

726
00:29:11,120 --> 00:29:12,720
will be available

727
00:29:12,720 --> 00:29:16,159
relatively soon in a few months so what

728
00:29:16,159 --> 00:29:19,679
is it um so we had this um this thing

729
00:29:19,679 --> 00:29:22,559
that we said well iot is slowing down

730
00:29:22,559 --> 00:29:24,320
because we're not getting the devices

731
00:29:24,320 --> 00:29:26,960
onboarded fast enough so what if we just

732
00:29:26,960 --> 00:29:28,960
pay attention to onboarding so whereas

733
00:29:28,960 --> 00:29:31,039
hanus was talking about

734
00:29:31,039 --> 00:29:34,880
an entire data model and a management of

735
00:29:34,880 --> 00:29:36,000
iot

736
00:29:36,000 --> 00:29:37,919
we're talking about the very first few

737
00:29:37,919 --> 00:29:39,919
seconds of the device from the box

738
00:29:39,919 --> 00:29:40,799
opening up

739
00:29:40,799 --> 00:29:42,799
to getting the device on board in full

740
00:29:42,799 --> 00:29:45,039
service and we wanted that to be the

741
00:29:45,039 --> 00:29:47,279
customer value prop that you drop zip

742
00:29:47,279 --> 00:29:48,240
the device

743
00:29:48,240 --> 00:29:50,640
to one location that you press

744
00:29:50,640 --> 00:29:52,399
essentially one button to power up and

745
00:29:52,399 --> 00:29:53,360
connect

746
00:29:53,360 --> 00:29:56,640
um and i'm glossing over the network uh

747
00:29:56,640 --> 00:29:58,720
and then the device is on board and

748
00:29:58,720 --> 00:30:00,480
everything about that device that needs

749
00:30:00,480 --> 00:30:01,200
to be

750
00:30:01,200 --> 00:30:04,720
done all of the the applications

751
00:30:04,720 --> 00:30:07,039
all of the sensor connection connectors

752
00:30:07,039 --> 00:30:08,000
all of the

753
00:30:08,000 --> 00:30:09,919
trust models everything is set up and

754
00:30:09,919 --> 00:30:11,520
the device is in service

755
00:30:11,520 --> 00:30:14,320
right away and so that's what we mean by

756
00:30:14,320 --> 00:30:16,000
by saying we're going to try to solve

757
00:30:16,000 --> 00:30:17,360
the problem of onboarding

758
00:30:17,360 --> 00:30:18,880
we want it to be fast scalable and

759
00:30:18,880 --> 00:30:20,880
secure and we want it to be

760
00:30:20,880 --> 00:30:22,720
device provisioning onboarding and

761
00:30:22,720 --> 00:30:24,799
activation and you can do a cross

762
00:30:24,799 --> 00:30:26,240
product of those things and

763
00:30:26,240 --> 00:30:29,279
figure out how they all fit together so

764
00:30:29,279 --> 00:30:31,279
there's a concept that we came in

765
00:30:31,279 --> 00:30:33,679
up with which was a late binding concept

766
00:30:33,679 --> 00:30:37,760
i think that's a really important piece

767
00:30:37,760 --> 00:30:41,679
and that's the one that i wanted to talk

768
00:30:41,679 --> 00:30:43,360
a little bit about here

769
00:30:43,360 --> 00:30:45,679
so if you think about the thing that

770
00:30:45,679 --> 00:30:46,480
slows down

771
00:30:46,480 --> 00:30:50,080
iot in this onboarding process

772
00:30:50,080 --> 00:30:52,720
it's that you have manufacturers who are

773
00:30:52,720 --> 00:30:54,559
doing this build to order

774
00:30:54,559 --> 00:30:56,320
kind of mechanism kind of like the old

775
00:30:56,320 --> 00:30:58,000
days um

776
00:30:58,000 --> 00:31:01,279
did i am i not okay

777
00:31:01,279 --> 00:31:04,960
reconnecting screen share

778
00:31:04,960 --> 00:31:08,000
okay you have manufacturers who are in

779
00:31:08,000 --> 00:31:08,640
this old

780
00:31:08,640 --> 00:31:10,240
old fashioned build to order kind of

781
00:31:10,240 --> 00:31:11,760
mechanism because

782
00:31:11,760 --> 00:31:14,399
we have the same device going out for

783
00:31:14,399 --> 00:31:16,480
different ecosystems of iot

784
00:31:16,480 --> 00:31:17,760
[Music]

785
00:31:17,760 --> 00:31:19,039
different customers have different

786
00:31:19,039 --> 00:31:20,880
ecosystems if you know in the days when

787
00:31:20,880 --> 00:31:22,480
you were allowed to walk into best buy

788
00:31:22,480 --> 00:31:23,600
in the united states

789
00:31:23,600 --> 00:31:25,039
you would walk into best buy and you

790
00:31:25,039 --> 00:31:26,640
would see three different

791
00:31:26,640 --> 00:31:29,120
tables one for people who do um you know

792
00:31:29,120 --> 00:31:30,720
one kind of iot vendor

793
00:31:30,720 --> 00:31:33,279
would do another kind of iot vendor and

794
00:31:33,279 --> 00:31:34,960
you have to choose which table you buy

795
00:31:34,960 --> 00:31:36,480
your devices from but they could be the

796
00:31:36,480 --> 00:31:37,840
same devices

797
00:31:37,840 --> 00:31:39,840
um so what we want to do is we want to

798
00:31:39,840 --> 00:31:41,039
have a build a plan

799
00:31:41,039 --> 00:31:42,799
so we want to be able to make a single

800
00:31:42,799 --> 00:31:45,200
sku and when the devices get on board

801
00:31:45,200 --> 00:31:47,440
at the end of the supply chain we want

802
00:31:47,440 --> 00:31:48,960
to figure out which

803
00:31:48,960 --> 00:31:51,360
iot platform they're going to go on to

804
00:31:51,360 --> 00:31:52,880
we want to figure out what needs to

805
00:31:52,880 --> 00:31:54,960
change in the device to make that iot

806
00:31:54,960 --> 00:31:56,159
platform happen

807
00:31:56,159 --> 00:31:58,799
we need to download all the credentials

808
00:31:58,799 --> 00:32:00,080
and perhaps activate

809
00:32:00,080 --> 00:32:02,640
software to make that work and that

810
00:32:02,640 --> 00:32:04,480
that's what uh late binding is and

811
00:32:04,480 --> 00:32:06,480
that's that's what fido device onboard

812
00:32:06,480 --> 00:32:09,039
does for you

813
00:32:10,320 --> 00:32:12,240
so let me talk a little bit about how it

814
00:32:12,240 --> 00:32:14,880
goes we don't have a lot of time

815
00:32:14,880 --> 00:32:17,440
so there's a credentials put in in the

816
00:32:17,440 --> 00:32:18,480
in the

817
00:32:18,480 --> 00:32:21,120
manufacturing period process uh the

818
00:32:21,120 --> 00:32:23,200
device is put into a box and is sent

819
00:32:23,200 --> 00:32:26,559
to its drop ship location and the goal

820
00:32:26,559 --> 00:32:27,919
is that you don't have to open up the

821
00:32:27,919 --> 00:32:29,039
box again so

822
00:32:29,039 --> 00:32:30,559
the fact that it's a closed box is

823
00:32:30,559 --> 00:32:32,799
important right and closed until

824
00:32:32,799 --> 00:32:35,440
you're ready to power it on the um

825
00:32:35,440 --> 00:32:36,159
there's a

826
00:32:36,159 --> 00:32:37,919
data structure that's created called the

827
00:32:37,919 --> 00:32:39,200
ownership voucher

828
00:32:39,200 --> 00:32:41,120
and this date this thing is sent along

829
00:32:41,120 --> 00:32:44,239
through the supply chain

830
00:32:46,159 --> 00:32:48,880
sorry guys frogging my throat um there

831
00:32:48,880 --> 00:32:51,039
it sent along through the supply chain

832
00:32:51,039 --> 00:32:54,159
to the uh that the target i'm saying

833
00:32:54,159 --> 00:32:55,760
cloud but it works in a closed network

834
00:32:55,760 --> 00:32:56,159
so

835
00:32:56,159 --> 00:32:58,000
you know it's the iot system the device

836
00:32:58,000 --> 00:33:00,240
management system the iot platform

837
00:33:00,240 --> 00:33:03,440
it's it's sent along to the target where

838
00:33:03,440 --> 00:33:06,159
you're going to manage the device from

839
00:33:06,159 --> 00:33:06,799
and then

840
00:33:06,799 --> 00:33:09,360
the device is now ready to be turned on

841
00:33:09,360 --> 00:33:10,159
the target

842
00:33:10,159 --> 00:33:12,080
cloud that the device has this problem

843
00:33:12,080 --> 00:33:13,360
the device needs to know

844
00:33:13,360 --> 00:33:15,279
because we're doing late binding it

845
00:33:15,279 --> 00:33:16,559
doesn't actually know who's going to

846
00:33:16,559 --> 00:33:17,600
onboard it

847
00:33:17,600 --> 00:33:20,159
so what it has is it has this middleman

848
00:33:20,159 --> 00:33:21,919
here a rendezvous service

849
00:33:21,919 --> 00:33:23,760
rendezvous service works very similar to

850
00:33:23,760 --> 00:33:25,440
dns and i'll tell you

851
00:33:25,440 --> 00:33:26,880
if we get a chance i'll tell you why we

852
00:33:26,880 --> 00:33:29,360
didn't do dns but this is an application

853
00:33:29,360 --> 00:33:30,159
server

854
00:33:30,159 --> 00:33:32,720
when the target cloud gets the

855
00:33:32,720 --> 00:33:34,320
credentials for the device

856
00:33:34,320 --> 00:33:36,480
it registers its ip address with the

857
00:33:36,480 --> 00:33:37,760
rendezvous service

858
00:33:37,760 --> 00:33:39,519
the device has the same rendezvous

859
00:33:39,519 --> 00:33:42,000
service information

860
00:33:42,000 --> 00:33:43,760
configured in it goes to the rendezvous

861
00:33:43,760 --> 00:33:46,000
service and gets the ip address of the

862
00:33:46,000 --> 00:33:47,360
target cloud so that's

863
00:33:47,360 --> 00:33:50,640
that's who is going to be my my manager

864
00:33:50,640 --> 00:33:52,399
and then how they're going to manage me

865
00:33:52,399 --> 00:33:53,919
how they're going to authenticate that's

866
00:33:53,919 --> 00:33:54,799
all done

867
00:33:54,799 --> 00:33:57,600
over this uh this last piece and the way

868
00:33:57,600 --> 00:33:59,519
that works is that the ownership voucher

869
00:33:59,519 --> 00:34:00,720
itself is used

870
00:34:00,720 --> 00:34:02,640
to authenticate the target cloud so

871
00:34:02,640 --> 00:34:04,720
there's a there's a new object

872
00:34:04,720 --> 00:34:07,200
added into the chain here which makes it

873
00:34:07,200 --> 00:34:08,399
possible to

874
00:34:08,399 --> 00:34:10,560
late bind the identity of the target

875
00:34:10,560 --> 00:34:12,639
cloud and the device authenticates in a

876
00:34:12,639 --> 00:34:14,320
more conventional way using its device

877
00:34:14,320 --> 00:34:15,280
certificate

878
00:34:15,280 --> 00:34:17,839
so then you do two-way provisioning now

879
00:34:17,839 --> 00:34:19,440
the important thing is that we're not

880
00:34:19,440 --> 00:34:20,239
done yet

881
00:34:20,239 --> 00:34:21,918
the important thing is that you need now

882
00:34:21,918 --> 00:34:23,679
you need to go into a mode

883
00:34:23,679 --> 00:34:25,520
where you can provision all of those

884
00:34:25,520 --> 00:34:27,040
things that you would like to have the

885
00:34:27,040 --> 00:34:28,000
device

886
00:34:28,000 --> 00:34:30,079
do and so there's a there's a data model

887
00:34:30,079 --> 00:34:31,280
that comes up here

888
00:34:31,280 --> 00:34:32,879
that's sort of a general purpose data

889
00:34:32,879 --> 00:34:34,960
model that allows you to do

890
00:34:34,960 --> 00:34:38,000
additional provisioning on top of

891
00:34:38,000 --> 00:34:41,199
uh this this connection that you set up

892
00:34:41,199 --> 00:34:43,199
and you could do for example you could

893
00:34:43,199 --> 00:34:45,440
at that point adopt a data model similar

894
00:34:45,440 --> 00:34:47,599
similar to what hanas was doing and send

895
00:34:47,599 --> 00:34:48,719
those objects down

896
00:34:48,719 --> 00:34:50,079
if that's what you want to do with the

897
00:34:50,079 --> 00:34:51,839
device or if you had a more

898
00:34:51,839 --> 00:34:54,079
general purpose device you might send

899
00:34:54,079 --> 00:34:55,040
down a capsule

900
00:34:55,040 --> 00:34:57,920
and send down a script and you you have

901
00:34:57,920 --> 00:34:59,839
a lot of flexibility and you can then

902
00:34:59,839 --> 00:35:01,599
attach the device to as many truss

903
00:35:01,599 --> 00:35:02,720
routes as you need

904
00:35:02,720 --> 00:35:04,960
you can do csrs you can do whatever you

905
00:35:04,960 --> 00:35:06,560
need to do to turn on the device so

906
00:35:06,560 --> 00:35:07,359
there's a

907
00:35:07,359 --> 00:35:09,599
mini little uh language that you can use

908
00:35:09,599 --> 00:35:11,280
to to actually communicate with the

909
00:35:11,280 --> 00:35:12,720
device back and forth

910
00:35:12,720 --> 00:35:14,800
until you've got the device in the in

911
00:35:14,800 --> 00:35:16,320
its final state

912
00:35:16,320 --> 00:35:18,960
and and then at that point you you

913
00:35:18,960 --> 00:35:20,240
complete the protocol

914
00:35:20,240 --> 00:35:21,839
and the device goes to doing what it

915
00:35:21,839 --> 00:35:23,440
would always have done if you had done a

916
00:35:23,440 --> 00:35:24,000
manual

917
00:35:24,000 --> 00:35:26,640
onboarding process and all of this stuff

918
00:35:26,640 --> 00:35:27,440
that i showed you

919
00:35:27,440 --> 00:35:29,839
goes to sleep and it only appears if you

920
00:35:29,839 --> 00:35:31,440
ever need to use it again

921
00:35:31,440 --> 00:35:33,599
and that that's the story of of this

922
00:35:33,599 --> 00:35:35,440
onboarding so i wanted to sort of

923
00:35:35,440 --> 00:35:37,280
emphasize a little bit you know what can

924
00:35:37,280 --> 00:35:38,000
you do with

925
00:35:38,000 --> 00:35:41,119
it you can set up all these things right

926
00:35:41,119 --> 00:35:42,880
you can set up multiple credentials you

927
00:35:42,880 --> 00:35:44,000
can set up credentials

928
00:35:44,000 --> 00:35:46,720
inside of a t you can set up application

929
00:35:46,720 --> 00:35:47,760
credentials

930
00:35:47,760 --> 00:35:50,240
you can download hardening for the os

931
00:35:50,240 --> 00:35:52,000
and for the firewall etc

932
00:35:52,000 --> 00:35:54,400
you can set up other iot devices you can

933
00:35:54,400 --> 00:35:56,320
use this as a server to set up

934
00:35:56,320 --> 00:35:59,200
to run fdo on other devices and you can

935
00:35:59,200 --> 00:35:59,760
do that

936
00:35:59,760 --> 00:36:02,079
in over the internet you can do it over

937
00:36:02,079 --> 00:36:03,440
the intranet and you can do it over

938
00:36:03,440 --> 00:36:05,440
closed network

939
00:36:05,440 --> 00:36:07,040
so that's the story i wanted to tell you

940
00:36:07,040 --> 00:36:09,599
today this is something that's coming to

941
00:36:09,599 --> 00:36:12,320
um to a github near you you're welcome

942
00:36:12,320 --> 00:36:12,960
to use it

943
00:36:12,960 --> 00:36:15,760
um you're welcome to to come and

944
00:36:15,760 --> 00:36:17,839
participate with us in it and i'm happy

945
00:36:17,839 --> 00:36:18,160
to

946
00:36:18,160 --> 00:36:27,839
answer questions

947
00:36:30,480 --> 00:36:34,720
any questions so as a chair of course

948
00:36:34,720 --> 00:36:36,960
hi jeff um i could again ask the

949
00:36:36,960 --> 00:36:38,720
question

950
00:36:38,720 --> 00:36:41,839
i i feel that there is a lot of uh uh

951
00:36:41,839 --> 00:36:44,400
um overlap in the general direction here

952
00:36:44,400 --> 00:36:45,040
and also

953
00:36:45,040 --> 00:36:47,119
a lot of discrepancy in the details how

954
00:36:47,119 --> 00:36:48,079
do you uh

955
00:36:48,079 --> 00:36:50,240
see this for example with you when you

956
00:36:50,240 --> 00:36:52,079
take into account harnesses presentation

957
00:36:52,079 --> 00:36:53,200
beforehand

958
00:36:53,200 --> 00:36:56,560
um how this uh requires alignment and

959
00:36:56,560 --> 00:36:57,359
how do you

960
00:36:57,359 --> 00:37:00,480
expect to find some uh some support

961
00:37:00,480 --> 00:37:02,880
here in this space so so we thought

962
00:37:02,880 --> 00:37:04,960
about whether we should stop early

963
00:37:04,960 --> 00:37:07,040
and and basically in other words we

964
00:37:07,040 --> 00:37:08,400
should stop early in the protocol and

965
00:37:08,400 --> 00:37:09,119
say well

966
00:37:09,119 --> 00:37:11,359
at this point you know if you're if

967
00:37:11,359 --> 00:37:14,240
you're lwm2m or your azure or your

968
00:37:14,240 --> 00:37:17,280
um some other csp you will have

969
00:37:17,280 --> 00:37:18,800
protocols that know how to do all these

970
00:37:18,800 --> 00:37:20,160
things so why don't you just do what you

971
00:37:20,160 --> 00:37:21,040
need to do

972
00:37:21,040 --> 00:37:22,560
and we felt there was an impedance

973
00:37:22,560 --> 00:37:24,800
matching step that was missing

974
00:37:24,800 --> 00:37:26,960
and the problem is that if you actually

975
00:37:26,960 --> 00:37:27,920
want to say

976
00:37:27,920 --> 00:37:29,440
that you have a device and it's going to

977
00:37:29,440 --> 00:37:31,200
go to any cloud

978
00:37:31,200 --> 00:37:34,079
you any any any device manager you need

979
00:37:34,079 --> 00:37:35,839
to have some place where you can do a

980
00:37:35,839 --> 00:37:36,720
little bit of

981
00:37:36,720 --> 00:37:39,760
massaging of the device so the way we

982
00:37:39,760 --> 00:37:42,000
do it is the minimum you would do for

983
00:37:42,000 --> 00:37:43,839
example is you could use the

984
00:37:43,839 --> 00:37:47,280
the onboarding of of fdo

985
00:37:47,280 --> 00:37:49,760
to to hook into the onboarding that you

986
00:37:49,760 --> 00:37:51,200
used for your

987
00:37:51,200 --> 00:37:53,920
device your solution specific mechanism

988
00:37:53,920 --> 00:37:55,440
so for example one of the things we have

989
00:37:55,440 --> 00:37:57,200
done is we have

990
00:37:57,200 --> 00:38:00,160
provisioned used the fdo onboarding to

991
00:38:00,160 --> 00:38:01,119
provision

992
00:38:01,119 --> 00:38:04,640
lightweight mtm credentials

993
00:38:04,640 --> 00:38:06,640
and then reduce the previous case and

994
00:38:06,640 --> 00:38:08,320
then on the other hand if you wanted to

995
00:38:08,320 --> 00:38:09,680
take a bear machine

996
00:38:09,680 --> 00:38:11,599
and put a very lightweight operating

997
00:38:11,599 --> 00:38:13,280
operating environment on it

998
00:38:13,280 --> 00:38:14,880
we've actually used it to install the

999
00:38:14,880 --> 00:38:17,040
entire operating system to bring up a

1000
00:38:17,040 --> 00:38:18,079
container environment

1001
00:38:18,079 --> 00:38:20,720
and to run an application so we wanted

1002
00:38:20,720 --> 00:38:22,560
to give people the opportunity to say

1003
00:38:22,560 --> 00:38:23,839
well when you arrive

1004
00:38:23,839 --> 00:38:26,560
at the destination the destination has

1005
00:38:26,560 --> 00:38:27,599
the ability to

1006
00:38:27,599 --> 00:38:29,839
tailor the device this is actually what

1007
00:38:29,839 --> 00:38:31,359
we mean by late binding

1008
00:38:31,359 --> 00:38:33,839
and we think this this this ability to

1009
00:38:33,839 --> 00:38:35,599
do as little or as much as you want to

1010
00:38:35,599 --> 00:38:36,079
do

1011
00:38:36,079 --> 00:38:38,240
at that point is actually necessary but

1012
00:38:38,240 --> 00:38:39,920
we are not trying to manage the device

1013
00:38:39,920 --> 00:38:40,400
from this

1014
00:38:40,400 --> 00:38:42,000
in other words if you if you have a

1015
00:38:42,000 --> 00:38:43,440
strong device management system

1016
00:38:43,440 --> 00:38:45,599
do less in this phase if you have less

1017
00:38:45,599 --> 00:38:47,680
of a device management system

1018
00:38:47,680 --> 00:38:49,599
or you need more of accommodation in the

1019
00:38:49,599 --> 00:38:51,520
device before you start then do more in

1020
00:38:51,520 --> 00:38:53,440
this space

1021
00:38:53,440 --> 00:38:56,000
yeah i see there's an agile but but

1022
00:38:56,000 --> 00:38:58,000
somehow deterministic still path forward

1023
00:38:58,000 --> 00:38:58,560
here

1024
00:38:58,560 --> 00:39:00,800
when your device hits the uh premises

1025
00:39:00,800 --> 00:39:02,320
the cpa premise basically

1026
00:39:02,320 --> 00:39:06,400
okay that's all right alexa um ash

1027
00:39:06,400 --> 00:39:07,920
we have a time for a couple of more

1028
00:39:07,920 --> 00:39:11,280
questions ash please

1029
00:39:11,280 --> 00:39:14,480
hi thanks um so i have a quick question

1030
00:39:14,480 --> 00:39:17,040
about the rendezvous service and you

1031
00:39:17,040 --> 00:39:18,800
mentioned that you specifically didn't

1032
00:39:18,800 --> 00:39:21,119
choose dns for that and i'm curious

1033
00:39:21,119 --> 00:39:22,960
um about sort of the design decisions

1034
00:39:22,960 --> 00:39:24,800
that put you there

1035
00:39:24,800 --> 00:39:27,040
so uh so it's been one of those those

1036
00:39:27,040 --> 00:39:28,720
things that we've had to sort of think

1037
00:39:28,720 --> 00:39:29,440
about over the

1038
00:39:29,440 --> 00:39:32,640
over the years on this um so the the

1039
00:39:32,640 --> 00:39:34,480
problem that we had is that that in a

1040
00:39:34,480 --> 00:39:35,839
lot of organizations

1041
00:39:35,839 --> 00:39:38,560
the the owner um remember we're thinking

1042
00:39:38,560 --> 00:39:40,160
about different kinds of networks right

1043
00:39:40,160 --> 00:39:41,200
so we're thinking about

1044
00:39:41,200 --> 00:39:43,920
say corporate networks and internet and

1045
00:39:43,920 --> 00:39:45,119
closed networks

1046
00:39:45,119 --> 00:39:48,480
often the the entity that is

1047
00:39:48,480 --> 00:39:50,800
managing the iot is not the entity

1048
00:39:50,800 --> 00:39:52,880
that's managing the dns

1049
00:39:52,880 --> 00:39:55,760
and we have this situation where you

1050
00:39:55,760 --> 00:39:56,000
have

1051
00:39:56,000 --> 00:39:57,839
a server that's receiving a credential

1052
00:39:57,839 --> 00:40:00,079
and it needs to register itself and

1053
00:40:00,079 --> 00:40:03,599
with some kind of a lookup service and

1054
00:40:03,599 --> 00:40:05,440
in a lot of organizations that's a big

1055
00:40:05,440 --> 00:40:06,800
problem and

1056
00:40:06,800 --> 00:40:09,280
so we said well it's actually easy in

1057
00:40:09,280 --> 00:40:11,200
organizations for an iot

1058
00:40:11,200 --> 00:40:13,680
organization to bring up an application

1059
00:40:13,680 --> 00:40:15,200
server that's what they do

1060
00:40:15,200 --> 00:40:16,880
so if we put it in the information in an

1061
00:40:16,880 --> 00:40:18,480
application server we figured out that

1062
00:40:18,480 --> 00:40:20,319
we can make it happen automatically

1063
00:40:20,319 --> 00:40:22,640
and reasonably so one of the things that

1064
00:40:22,640 --> 00:40:24,480
the fido alliance did is they did

1065
00:40:24,480 --> 00:40:25,440
actually put in a

1066
00:40:25,440 --> 00:40:29,119
uh a breakout mechanism so if you have a

1067
00:40:29,119 --> 00:40:30,480
if you already have some kind of a

1068
00:40:30,480 --> 00:40:32,480
lookout mechanism you could you could

1069
00:40:32,480 --> 00:40:34,480
use that instead of the rendezvous but

1070
00:40:34,480 --> 00:40:35,599
the rendezvous

1071
00:40:35,599 --> 00:40:38,160
service is the is the primary mechanism

1072
00:40:38,160 --> 00:40:38,640
and it's

1073
00:40:38,640 --> 00:40:40,960
it's not a big it's not a big server

1074
00:40:40,960 --> 00:40:42,880
it's a little server

1075
00:40:42,880 --> 00:40:46,880
okay cool thanks

1076
00:40:48,400 --> 00:40:53,839
very quickly then

1077
00:40:55,599 --> 00:40:58,720
yeah thanks uh dan harkins uh can you

1078
00:40:58,720 --> 00:41:00,400
tell me you said that ownership voucher

1079
00:41:00,400 --> 00:41:02,319
is a data structure what's what's in

1080
00:41:02,319 --> 00:41:03,440
this

1081
00:41:03,440 --> 00:41:04,800
data structure i guess there's probably

1082
00:41:04,800 --> 00:41:07,839
a cert and maybe an identifier of the

1083
00:41:07,839 --> 00:41:09,839
rendezvous service what what what else

1084
00:41:09,839 --> 00:41:12,960
is does the manufacturer have to

1085
00:41:12,960 --> 00:41:16,079
uh so the manufacturers

1086
00:41:16,079 --> 00:41:18,480
sure so there's a manufacturer

1087
00:41:18,480 --> 00:41:20,160
certificate information

1088
00:41:20,160 --> 00:41:22,720
uh manufacturer's key there's there's a

1089
00:41:22,720 --> 00:41:24,000
device key in there

1090
00:41:24,000 --> 00:41:26,480
so you can authenticate the device and

1091
00:41:26,480 --> 00:41:27,200
then um

1092
00:41:27,200 --> 00:41:28,640
basically what's happening is as the

1093
00:41:28,640 --> 00:41:30,960
device moves through as the

1094
00:41:30,960 --> 00:41:32,160
ownership voucher moves through the

1095
00:41:32,160 --> 00:41:34,319
supply chain you can build up a chain of

1096
00:41:34,319 --> 00:41:35,440
signatures

1097
00:41:35,440 --> 00:41:38,480
that shows a ledger of of where the

1098
00:41:38,480 --> 00:41:41,520
device has been um and and you can use

1099
00:41:41,520 --> 00:41:43,280
that ledger to show that you're

1100
00:41:43,280 --> 00:41:44,960
that you're actually the guy at the end

1101
00:41:44,960 --> 00:41:46,720
of the chain and you got the last

1102
00:41:46,720 --> 00:41:49,200
piece of it so it's it's a new kind of a

1103
00:41:49,200 --> 00:41:51,119
tracking data structure

1104
00:41:51,119 --> 00:41:54,400
if you had say a a reliable supply chain

1105
00:41:54,400 --> 00:41:55,760
you probably would already have this

1106
00:41:55,760 --> 00:41:56,880
kind of mechanism

1107
00:41:56,880 --> 00:41:58,480
since the world doesn't have reliable

1108
00:41:58,480 --> 00:42:00,160
supply chains yet we wanted to have a

1109
00:42:00,160 --> 00:42:00,960
mechanism

1110
00:42:00,960 --> 00:42:02,640
that could run through a conventional

1111
00:42:02,640 --> 00:42:04,800
supply chain with minimal

1112
00:42:04,800 --> 00:42:08,079
types of verification say all the way

1113
00:42:08,079 --> 00:42:09,280
down to say

1114
00:42:09,280 --> 00:42:13,359
a telephone level of reading reading out

1115
00:42:13,359 --> 00:42:16,079
information about a key so that's that's

1116
00:42:16,079 --> 00:42:17,440
what it is and there's information in

1117
00:42:17,440 --> 00:42:19,280
this presentation so please go ahead and

1118
00:42:19,280 --> 00:42:20,800
look at the extra slides okay

1119
00:42:20,800 --> 00:42:23,599
yeah thank you very much

1120
00:42:27,680 --> 00:42:29,680
i can figure out how to stop presenting

1121
00:42:29,680 --> 00:42:32,960
i will be happy to do so

1122
00:42:34,400 --> 00:42:37,760
there we go so next up is

1123
00:42:37,760 --> 00:42:40,160
elliot do you want to share your slides

1124
00:42:40,160 --> 00:42:42,079
yourself

1125
00:42:42,079 --> 00:42:45,839
and that's a yes

1126
00:42:49,680 --> 00:42:52,160
i thought

1127
00:42:52,720 --> 00:42:56,079
ah there they are it's your flaw

1128
00:42:56,079 --> 00:42:59,280
but you're not uh i appreciate it uh

1129
00:42:59,280 --> 00:43:02,720
again i think um this um let me just get

1130
00:43:02,720 --> 00:43:03,680
to the start

1131
00:43:03,680 --> 00:43:05,760
uh i just i was just having some deep

1132
00:43:05,760 --> 00:43:07,440
thoughts um in the architecture and i've

1133
00:43:07,440 --> 00:43:08,720
been thinking about this problem for a

1134
00:43:08,720 --> 00:43:09,119
while

1135
00:43:09,119 --> 00:43:12,400
as uh both jeff and dan know um

1136
00:43:12,400 --> 00:43:14,800
and of course hannah so we're all we're

1137
00:43:14,800 --> 00:43:15,839
all well familiar

1138
00:43:15,839 --> 00:43:18,240
with each other um you know we we have

1139
00:43:18,240 --> 00:43:19,440
this sort of general

1140
00:43:19,440 --> 00:43:22,160
question that we we hang out with we all

1141
00:43:22,160 --> 00:43:24,079
answered slightly differently

1142
00:43:24,079 --> 00:43:25,680
um i'm going to talk about the tale of

1143
00:43:25,680 --> 00:43:27,680
two protocols in this context

1144
00:43:27,680 --> 00:43:30,240
um i'm not trying to favor one over the

1145
00:43:30,240 --> 00:43:31,440
other i'm just saying that there are

1146
00:43:31,440 --> 00:43:31,760
some

1147
00:43:31,760 --> 00:43:34,640
some some challenges that that we face

1148
00:43:34,640 --> 00:43:35,680
uh and they

1149
00:43:35,680 --> 00:43:36,800
they're they're slightly different

1150
00:43:36,800 --> 00:43:38,160
challenges but there are some

1151
00:43:38,160 --> 00:43:40,319
architectural components that uh

1152
00:43:40,319 --> 00:43:43,680
that i just wanted to note um any other

1153
00:43:43,680 --> 00:43:45,680
questions you know how does the device

1154
00:43:45,680 --> 00:43:47,119
know it should trust a particular

1155
00:43:47,119 --> 00:43:48,800
network and how does network know what

1156
00:43:48,800 --> 00:43:50,720
particular devices authorize

1157
00:43:50,720 --> 00:43:52,800
um two different protocols try to answer

1158
00:43:52,800 --> 00:43:54,079
this question in two different ways

1159
00:43:54,079 --> 00:43:57,280
dpp and brewski and um if i were to take

1160
00:43:57,280 --> 00:43:58,160
a stick to it

1161
00:43:58,160 --> 00:44:01,520
and and you know just whack it just so

1162
00:44:01,520 --> 00:44:04,160
i'm pretty sure i could get fdo in the

1163
00:44:04,160 --> 00:44:04,880
same bucket

1164
00:44:04,880 --> 00:44:08,240
i'm not quite sure about lwm to m if i

1165
00:44:08,240 --> 00:44:08,480
can

1166
00:44:08,480 --> 00:44:11,920
if i could do that uh but um

1167
00:44:11,920 --> 00:44:13,520
you know just a as a bit of a review

1168
00:44:13,520 --> 00:44:14,640
because i think a lot of people on a

1169
00:44:14,640 --> 00:44:15,680
call know

1170
00:44:15,680 --> 00:44:17,920
these protocols dpp is the device uh

1171
00:44:17,920 --> 00:44:19,599
provisioning protocol the wi-fi alliance

1172
00:44:19,599 --> 00:44:20,319
did

1173
00:44:20,319 --> 00:44:22,560
dan was intimately involved in that um a

1174
00:44:22,560 --> 00:44:24,160
lot of other people were too the basic

1175
00:44:24,160 --> 00:44:24,720
concept

1176
00:44:24,720 --> 00:44:27,599
is uh you know you have a a public key

1177
00:44:27,599 --> 00:44:30,480
that is associated to a private key

1178
00:44:30,480 --> 00:44:33,440
uh the public key appears um say in the

1179
00:44:33,440 --> 00:44:34,000
box

1180
00:44:34,000 --> 00:44:36,560
uh you have a device that scans the box

1181
00:44:36,560 --> 00:44:38,480
uh it scans the the public key and then

1182
00:44:38,480 --> 00:44:39,440
it does a

1183
00:44:39,440 --> 00:44:41,280
little bit of a diffie-hellman proof

1184
00:44:41,280 --> 00:44:43,200
that says um you know hey i've got you

1185
00:44:43,200 --> 00:44:43,839
know

1186
00:44:43,839 --> 00:44:45,839
i've got your public key and you know

1187
00:44:45,839 --> 00:44:47,760
and here's my proof and this guy says

1188
00:44:47,760 --> 00:44:49,280
well i've got the private key here's my

1189
00:44:49,280 --> 00:44:50,640
proof and the next step

1190
00:44:50,640 --> 00:44:53,680
is a configuration phase based on that

1191
00:44:53,680 --> 00:44:56,400
and uh then this guy gives this guy what

1192
00:44:56,400 --> 00:44:59,200
it needs to stop to this guy

1193
00:44:59,200 --> 00:45:02,319
the version of that that

1194
00:45:02,319 --> 00:45:03,680
we have from brewski is slightly

1195
00:45:03,680 --> 00:45:05,760
different it works with a voucher

1196
00:45:05,760 --> 00:45:07,520
the voucher gets passed through it says

1197
00:45:07,520 --> 00:45:08,880
well here you know can i

1198
00:45:08,880 --> 00:45:11,520
can i please talk to uh this network

1199
00:45:11,520 --> 00:45:12,079
it's gonna

1200
00:45:12,079 --> 00:45:14,640
this guy is gonna ask this guy um if

1201
00:45:14,640 --> 00:45:15,359
this guy

1202
00:45:15,359 --> 00:45:17,440
can all can authorize this guy to talk

1203
00:45:17,440 --> 00:45:19,200
to this guy this is essentially

1204
00:45:19,200 --> 00:45:21,920
what brewski says i mean it does so with

1205
00:45:21,920 --> 00:45:23,040
a voucher

1206
00:45:23,040 --> 00:45:26,240
um and so you know you have this flow

1207
00:45:26,240 --> 00:45:27,920
and the voucher bits get filled out what

1208
00:45:27,920 --> 00:45:29,760
you get in this guy

1209
00:45:29,760 --> 00:45:32,960
is a a trust anchor which this guy can

1210
00:45:32,960 --> 00:45:35,440
then use to do things like est

1211
00:45:35,440 --> 00:45:38,000
um we have a couple of scaling problems

1212
00:45:38,000 --> 00:45:38,480
uh

1213
00:45:38,480 --> 00:45:39,920
throughout throughout all this which is

1214
00:45:39,920 --> 00:45:41,839
one of which in the brewski context

1215
00:45:41,839 --> 00:45:45,359
how does this registrar know uh and

1216
00:45:45,359 --> 00:45:47,680
the the various uh enterprises right

1217
00:45:47,680 --> 00:45:49,599
because there are gazillions of them

1218
00:45:49,599 --> 00:45:52,240
and conversely you know how how does

1219
00:45:52,240 --> 00:45:53,440
this enterprise how does this

1220
00:45:53,440 --> 00:45:55,040
manufacturer know that this

1221
00:45:55,040 --> 00:45:57,440
that this enterprise uh is there is the

1222
00:45:57,440 --> 00:46:00,560
one that actually bought the product um

1223
00:46:00,560 --> 00:46:03,760
so i just a little bit of a by way of a

1224
00:46:03,760 --> 00:46:05,440
comparison right what i'm aiming for

1225
00:46:05,440 --> 00:46:06,319
here is zero

1226
00:46:06,319 --> 00:46:10,000
step provisioning dpp on its own using a

1227
00:46:10,000 --> 00:46:11,040
qr code

1228
00:46:11,040 --> 00:46:12,960
provides a sort of nice one-step

1229
00:46:12,960 --> 00:46:14,640
provisioning mechanism

1230
00:46:14,640 --> 00:46:18,000
you can get to zero step right i think

1231
00:46:18,000 --> 00:46:19,359
uh but you know it's a little bit of

1232
00:46:19,359 --> 00:46:21,040
challenge as to how to do that

1233
00:46:21,040 --> 00:46:23,920
right it's a question to be answered um

1234
00:46:23,920 --> 00:46:25,280
and it can work with or without

1235
00:46:25,280 --> 00:46:27,520
uh internet connectivity in the moment

1236
00:46:27,520 --> 00:46:28,480
in fact

1237
00:46:28,480 --> 00:46:31,359
forever uh which is which is a really

1238
00:46:31,359 --> 00:46:32,720
nice property

1239
00:46:32,720 --> 00:46:36,160
um it has uh it doesn't really have a

1240
00:46:36,160 --> 00:46:36,880
concept of

1241
00:46:36,880 --> 00:46:39,599
ownership per se it has a concept of

1242
00:46:39,599 --> 00:46:40,480
possession

1243
00:46:40,480 --> 00:46:43,359
which is you know real really nice too

1244
00:46:43,359 --> 00:46:44,800
uh because it means if you just reset

1245
00:46:44,800 --> 00:46:45,680
the device you

1246
00:46:45,680 --> 00:46:47,760
created a change of ownership uh that

1247
00:46:47,760 --> 00:46:48,880
that's sort of nice so

1248
00:46:48,880 --> 00:46:51,760
you know in the brewski sense um you

1249
00:46:51,760 --> 00:46:53,119
know on the other hand this thing can be

1250
00:46:53,119 --> 00:46:53,760
zero

1251
00:46:53,760 --> 00:46:56,079
step provisioning if you filled in all

1252
00:46:56,079 --> 00:46:57,200
the gaps

1253
00:46:57,200 --> 00:47:00,400
in terms of understanding um

1254
00:47:00,400 --> 00:47:02,400
you know who the customer is and the

1255
00:47:02,400 --> 00:47:04,800
associated registrar is with it

1256
00:47:04,800 --> 00:47:07,760
um the uh it requires internet

1257
00:47:07,760 --> 00:47:09,520
connectivity at least

1258
00:47:09,520 --> 00:47:11,280
in in in the use case that was

1259
00:47:11,280 --> 00:47:12,720
envisioned though

1260
00:47:12,720 --> 00:47:14,240
um there have been some thoughts about

1261
00:47:14,240 --> 00:47:16,000
how to relax that

1262
00:47:16,000 --> 00:47:18,240
um if you look inside a brewski voucher

1263
00:47:18,240 --> 00:47:20,000
has this notion of a nonce

1264
00:47:20,000 --> 00:47:22,559
right and that that nonce is if it's

1265
00:47:22,559 --> 00:47:24,240
filled in there then then you have to

1266
00:47:24,240 --> 00:47:24,960
have

1267
00:47:24,960 --> 00:47:28,079
a uh an interactive exchange if if it's

1268
00:47:28,079 --> 00:47:28,880
not then

1269
00:47:28,880 --> 00:47:32,160
then you don't um and this question here

1270
00:47:32,160 --> 00:47:33,520
was left empty

1271
00:47:33,520 --> 00:47:37,440
by the um by the specification right how

1272
00:47:37,440 --> 00:47:38,480
how is it you

1273
00:47:38,480 --> 00:47:40,640
that that you uh i mean there's this

1274
00:47:40,640 --> 00:47:42,160
notion of a proxy

1275
00:47:42,160 --> 00:47:46,079
uh uh registrar box a a proxy voucher

1276
00:47:46,079 --> 00:47:47,040
request

1277
00:47:47,040 --> 00:47:48,960
but uh how can we get more formal in

1278
00:47:48,960 --> 00:47:50,800
terms of associating this register with

1279
00:47:50,800 --> 00:47:52,000
this customer

1280
00:47:52,000 --> 00:47:55,200
right and then uh how do you how do you

1281
00:47:55,200 --> 00:47:57,119
manage to onboard the device without uh

1282
00:47:57,119 --> 00:47:58,720
immediate internet access you know how

1283
00:47:58,720 --> 00:48:00,079
do we get around that that

1284
00:48:00,079 --> 00:48:03,680
that nuns problem so my last slide

1285
00:48:03,680 --> 00:48:07,040
okay um you know the 83 66 voucher and

1286
00:48:07,040 --> 00:48:09,200
the dpp key are actually much closer

1287
00:48:09,200 --> 00:48:12,480
in in in style if we think about zero

1288
00:48:12,480 --> 00:48:12,960
touch

1289
00:48:12,960 --> 00:48:16,800
then uh um then one might first appear

1290
00:48:16,800 --> 00:48:19,359
there there seems to me that there is a

1291
00:48:19,359 --> 00:48:21,599
missing architectural element though

1292
00:48:21,599 --> 00:48:24,319
um which is this introduction that that

1293
00:48:24,319 --> 00:48:25,760
needs to occur

1294
00:48:25,760 --> 00:48:27,760
between the device that's going to hold

1295
00:48:27,760 --> 00:48:28,880
the keys

1296
00:48:28,880 --> 00:48:31,599
in the dpp case you might think of that

1297
00:48:31,599 --> 00:48:32,640
device

1298
00:48:32,640 --> 00:48:35,599
as this guy here or an agent for that

1299
00:48:35,599 --> 00:48:36,240
guy

1300
00:48:36,240 --> 00:48:37,920
you know in a big enterprise you're

1301
00:48:37,920 --> 00:48:39,920
probably not going to have every ap

1302
00:48:39,920 --> 00:48:43,839
try and manage all keys right um

1303
00:48:43,839 --> 00:48:45,280
or and you're not going to have some guy

1304
00:48:45,280 --> 00:48:46,960
just trying to onboard each device you

1305
00:48:46,960 --> 00:48:47,280
know

1306
00:48:47,280 --> 00:48:48,240
with an app there's going to be

1307
00:48:48,240 --> 00:48:50,720
something more uh there

1308
00:48:50,720 --> 00:48:53,440
right so you have something that akins

1309
00:48:53,440 --> 00:48:54,559
to some sort of

1310
00:48:54,559 --> 00:48:57,920
aaa function that also is speaking um

1311
00:48:57,920 --> 00:49:00,000
you know the dpp protocol and the dpp

1312
00:49:00,000 --> 00:49:01,280
standard allows for that well that looks

1313
00:49:01,280 --> 00:49:03,040
an awful lot like a registrar as things

1314
00:49:03,040 --> 00:49:04,480
begin to grow

1315
00:49:04,480 --> 00:49:07,040
right and the question then for me is

1316
00:49:07,040 --> 00:49:08,960
quite simply this

1317
00:49:08,960 --> 00:49:11,119
how do we make this general introduction

1318
00:49:11,119 --> 00:49:12,960
between these manufacturers

1319
00:49:12,960 --> 00:49:15,839
and these registrars now federations do

1320
00:49:15,839 --> 00:49:17,040
this nicely

1321
00:49:17,040 --> 00:49:20,160
right which is nice um

1322
00:49:20,160 --> 00:49:21,440
but it's also nice that these

1323
00:49:21,440 --> 00:49:23,760
federations be optional

1324
00:49:23,760 --> 00:49:26,319
right um that is to say one of the

1325
00:49:26,319 --> 00:49:27,839
challenges i think we see with

1326
00:49:27,839 --> 00:49:30,000
with brewski is that you have this a lot

1327
00:49:30,000 --> 00:49:31,040
of mechanism here

1328
00:49:31,040 --> 00:49:34,079
to and from the manufacturer um i see a

1329
00:49:34,079 --> 00:49:35,280
lot of that mechanism in

1330
00:49:35,280 --> 00:49:38,559
fdo as well it has its pluses and it has

1331
00:49:38,559 --> 00:49:39,520
its minuses

1332
00:49:39,520 --> 00:49:41,440
and if i were to add fdl to this mix i'd

1333
00:49:41,440 --> 00:49:43,280
say one of the nice things about fdo

1334
00:49:43,280 --> 00:49:45,280
is that essentially you get a nice sort

1335
00:49:45,280 --> 00:49:47,280
of you know you know where this thing

1336
00:49:47,280 --> 00:49:48,319
has been

1337
00:49:48,319 --> 00:49:51,520
uh a certificate um but the open

1338
00:49:51,520 --> 00:49:53,200
question here right is

1339
00:49:53,200 --> 00:49:55,920
how might we go about establishing the

1340
00:49:55,920 --> 00:49:57,520
trusted introduction between

1341
00:49:57,520 --> 00:49:59,920
all these guys just these guys not the

1342
00:49:59,920 --> 00:50:01,359
devices themselves

1343
00:50:01,359 --> 00:50:03,920
these guys right the enterprises right

1344
00:50:03,920 --> 00:50:05,839
maybe even consumers too if we want to

1345
00:50:05,839 --> 00:50:07,040
stretch that but as

1346
00:50:07,040 --> 00:50:08,559
i have enterprise on the brain that's

1347
00:50:08,559 --> 00:50:10,880
what i filled out here um and these guys

1348
00:50:10,880 --> 00:50:12,240
the manufacturers

1349
00:50:12,240 --> 00:50:13,839
and so that's the open question that i

1350
00:50:13,839 --> 00:50:17,200
have uh it's a problem statement

1351
00:50:17,200 --> 00:50:19,040
i'm not going to answer it today but i

1352
00:50:19,040 --> 00:50:20,720
think it's a problem worth solving

1353
00:50:20,720 --> 00:50:22,160
and i am going to work on solving it a

1354
00:50:22,160 --> 00:50:25,440
little bit and i'm not particularly

1355
00:50:25,440 --> 00:50:27,359
fussed about which of these onboarding

1356
00:50:27,359 --> 00:50:29,359
mechanisms um

1357
00:50:29,359 --> 00:50:31,359
we solve it for first so long as we can

1358
00:50:31,359 --> 00:50:32,559
have a little bit of

1359
00:50:32,559 --> 00:50:35,760
of choice in the process because these

1360
00:50:35,760 --> 00:50:37,119
guys are going to implement whatever

1361
00:50:37,119 --> 00:50:38,640
these eyes are going to implement and as

1362
00:50:38,640 --> 00:50:40,720
long as we have some notion of

1363
00:50:40,720 --> 00:50:41,760
consistency

1364
00:50:41,760 --> 00:50:45,359
in um in this federation element or

1365
00:50:45,359 --> 00:50:46,480
whatever it is in terms of how

1366
00:50:46,480 --> 00:50:47,599
information gets

1367
00:50:47,599 --> 00:50:50,160
uh propagated and introduced if we have

1368
00:50:50,160 --> 00:50:51,040
the right model

1369
00:50:51,040 --> 00:50:52,640
then we can we can implement a couple of

1370
00:50:52,640 --> 00:50:54,720
these things including perhaps even

1371
00:50:54,720 --> 00:50:56,640
fdo and that's something we might want

1372
00:50:56,640 --> 00:50:58,640
to talk to the fido alliance people

1373
00:50:58,640 --> 00:51:00,640
specifically jeff and others about

1374
00:51:00,640 --> 00:51:02,480
if if this makes sense for them too and

1375
00:51:02,480 --> 00:51:04,079
maybe hannah's has thoughts in terms of

1376
00:51:04,079 --> 00:51:05,280
lwm to m

1377
00:51:05,280 --> 00:51:06,640
in this context and of course what i'm

1378
00:51:06,640 --> 00:51:08,800
talking about here is network onboarding

1379
00:51:08,800 --> 00:51:10,400
i'm not really talking about application

1380
00:51:10,400 --> 00:51:11,520
level onboarding

1381
00:51:11,520 --> 00:51:12,480
so how do you get the thing on the

1382
00:51:12,480 --> 00:51:14,559
network and i'll stop there

1383
00:51:14,559 --> 00:51:16,720
questions comments or should i just

1384
00:51:16,720 --> 00:51:19,520
leave it to the next guy

1385
00:51:19,520 --> 00:51:23,839
so this is

1386
00:51:23,920 --> 00:51:26,559
um i can say that i'm a huge fan of

1387
00:51:26,559 --> 00:51:28,319
problem statements and i think it's very

1388
00:51:28,319 --> 00:51:29,839
spot-on to the charter

1389
00:51:29,839 --> 00:51:31,359
so thank you a lot for that i think

1390
00:51:31,359 --> 00:51:33,040
fleshing that out in and

1391
00:51:33,040 --> 00:51:36,240
document would be a very good first step

1392
00:51:36,240 --> 00:51:38,400
so are there any other questions on

1393
00:51:38,400 --> 00:51:39,599
elliots or comments

1394
00:51:39,599 --> 00:51:43,520
on elliot's item and

1395
00:51:43,520 --> 00:51:46,720
jeff is recording i think yep one yeah

1396
00:51:46,720 --> 00:51:47,760
yeah i uh

1397
00:51:47,760 --> 00:51:51,119
um i was thinking that one of the things

1398
00:51:51,119 --> 00:51:53,200
asked you i agree that you do have to

1399
00:51:53,200 --> 00:51:54,559
get um

1400
00:51:54,559 --> 00:51:56,960
through this like and one of the ways

1401
00:51:56,960 --> 00:51:58,480
that's going to be challenging is that

1402
00:51:58,480 --> 00:52:00,240
the supply chain is so enormous

1403
00:52:00,240 --> 00:52:02,240
um so one of the ways to think about

1404
00:52:02,240 --> 00:52:04,480
that is think about what objects could

1405
00:52:04,480 --> 00:52:05,760
be secured

1406
00:52:05,760 --> 00:52:08,640
going into a group of companies that

1407
00:52:08,640 --> 00:52:09,680
that have a

1408
00:52:09,680 --> 00:52:13,040
single um agreement for shipping

1409
00:52:13,040 --> 00:52:14,800
devices shipping objects in the supply

1410
00:52:14,800 --> 00:52:16,800
chain and then how you would get

1411
00:52:16,800 --> 00:52:18,960
an object out of that and into the next

1412
00:52:18,960 --> 00:52:20,800
one so i'm thinking that

1413
00:52:20,800 --> 00:52:22,720
we can put together a few cooperating

1414
00:52:22,720 --> 00:52:24,480
companies and then

1415
00:52:24,480 --> 00:52:26,240
get objects into them get objects out of

1416
00:52:26,240 --> 00:52:27,599
them and then

1417
00:52:27,599 --> 00:52:29,119
go to the next group and the next group

1418
00:52:29,119 --> 00:52:31,040
in the next group so that may be a way

1419
00:52:31,040 --> 00:52:33,760
to think of the problem

1420
00:52:33,760 --> 00:52:35,839
very good thank you i'll be in touch

1421
00:52:35,839 --> 00:52:37,200
with you to ask about that a little bit

1422
00:52:37,200 --> 00:52:39,359
more

1423
00:52:41,040 --> 00:52:44,240
and thanks for the time uh hank

1424
00:52:44,240 --> 00:52:46,319
yeah and thank you for presenting um

1425
00:52:46,319 --> 00:52:48,160
michael are you commenting or sharing

1426
00:52:48,160 --> 00:52:51,279
for your presentation

1427
00:52:52,720 --> 00:52:55,520
then it's your flaw

1428
00:52:55,839 --> 00:53:00,079
yes i want to share that

1429
00:53:00,079 --> 00:53:03,520
i i will i will comment that the 8366

1430
00:53:03,520 --> 00:53:05,359
voucher we really wanted to

1431
00:53:05,359 --> 00:53:08,559
to be much more sdo like

1432
00:53:08,559 --> 00:53:12,559
in its supply chain integration

1433
00:53:12,559 --> 00:53:15,359
and in 2014 when we started on it it was

1434
00:53:15,359 --> 00:53:16,000
clear that

1435
00:53:16,000 --> 00:53:18,319
no one was ready and i think that's

1436
00:53:18,319 --> 00:53:19,520
still the case

1437
00:53:19,520 --> 00:53:22,640
um so i'd be excited to be proven wrong

1438
00:53:22,640 --> 00:53:25,440
um so in doing some of uh this

1439
00:53:25,440 --> 00:53:27,359
onboarding work um

1440
00:53:27,359 --> 00:53:29,599
one of the problems that one runs into

1441
00:53:29,599 --> 00:53:30,400
is uh

1442
00:53:30,400 --> 00:53:33,680
how do you get um initially device

1443
00:53:33,680 --> 00:53:35,280
identifiers into

1444
00:53:35,280 --> 00:53:37,040
uh devices and one project i've been

1445
00:53:37,040 --> 00:53:38,720
involved in is doing this for home

1446
00:53:38,720 --> 00:53:40,839
routers

1447
00:53:40,839 --> 00:53:44,160
and click

1448
00:53:44,160 --> 00:53:47,520
just a minute oh okay

1449
00:53:47,520 --> 00:53:49,920
so um you know insert the mirai story

1450
00:53:49,920 --> 00:53:51,359
that's actually coming up to five years

1451
00:53:51,359 --> 00:53:52,240
ago it's kind of

1452
00:53:52,240 --> 00:53:54,640
weird that that's so long ago um but i'm

1453
00:53:54,640 --> 00:53:55,359
involved in

1454
00:53:55,359 --> 00:53:58,880
in dealing with how do we do um

1455
00:53:58,880 --> 00:54:01,920
uh security specifically mud stuff for

1456
00:54:01,920 --> 00:54:03,119
instance on

1457
00:54:03,119 --> 00:54:05,359
uh home routers and how do we onboard

1458
00:54:05,359 --> 00:54:06,720
home routers so that they stay

1459
00:54:06,720 --> 00:54:09,680
secure uh the whole admin admin password

1460
00:54:09,680 --> 00:54:11,040
is simply not good enough

1461
00:54:11,040 --> 00:54:12,960
um and making people change it is a

1462
00:54:12,960 --> 00:54:14,240
great thing but

1463
00:54:14,240 --> 00:54:16,079
then you just wind up with the problem

1464
00:54:16,079 --> 00:54:18,400
of they now have a strong password which

1465
00:54:18,400 --> 00:54:20,960
some malware on their home network um

1466
00:54:20,960 --> 00:54:22,400
can hijack

1467
00:54:22,400 --> 00:54:25,359
um and if you think that's hard to do

1468
00:54:25,359 --> 00:54:26,400
the answer is that

1469
00:54:26,400 --> 00:54:29,680
arp spoofing of 192.168.1.1 is trivial

1470
00:54:29,680 --> 00:54:31,359
and there's a number of

1471
00:54:31,359 --> 00:54:33,599
second router products that offer some

1472
00:54:33,599 --> 00:54:34,960
kind of additional security that

1473
00:54:34,960 --> 00:54:37,359
intentionally exploit that to get

1474
00:54:37,359 --> 00:54:40,960
into the data path um

1475
00:54:40,960 --> 00:54:43,920
and you know that's just there so even

1476
00:54:43,920 --> 00:54:44,480
if you

1477
00:54:44,480 --> 00:54:47,200
uh say i'm gonna put a better password

1478
00:54:47,200 --> 00:54:47,839
uh

1479
00:54:47,839 --> 00:54:49,520
you still have the problem that you need

1480
00:54:49,520 --> 00:54:52,640
to enable https somehow

1481
00:54:52,640 --> 00:54:55,839
oh why can't i just page down

1482
00:54:55,839 --> 00:54:59,040
there we go um so you wind up with these

1483
00:54:59,040 --> 00:54:59,839
two prop

1484
00:54:59,839 --> 00:55:02,640
uh environments for talking to for

1485
00:55:02,640 --> 00:55:04,400
instance your home router

1486
00:55:04,400 --> 00:55:07,200
but also to pretty much any other uh iot

1487
00:55:07,200 --> 00:55:08,880
device in your home network that you

1488
00:55:08,880 --> 00:55:11,200
have purchased off the the thing

1489
00:55:11,200 --> 00:55:14,640
um and one is that you wind up they're

1490
00:55:14,640 --> 00:55:15,359
implicitly

1491
00:55:15,359 --> 00:55:17,920
insecure it's http and you're just done

1492
00:55:17,920 --> 00:55:20,160
but apparently the web page loads

1493
00:55:20,160 --> 00:55:22,640
um or it's explicitly insecure and you

1494
00:55:22,640 --> 00:55:24,160
have to click through these things which

1495
00:55:24,160 --> 00:55:25,599
to the most extent the browser

1496
00:55:25,599 --> 00:55:27,280
manufacturers would like to remove these

1497
00:55:27,280 --> 00:55:29,520
screens completely if they could

1498
00:55:29,520 --> 00:55:31,359
um and the last thing we really really

1499
00:55:31,359 --> 00:55:33,760
want to do is train any of the users to

1500
00:55:33,760 --> 00:55:35,280
actually be good at getting through

1501
00:55:35,280 --> 00:55:36,480
these screens

1502
00:55:36,480 --> 00:55:39,119
um that's really the the goal is that

1503
00:55:39,119 --> 00:55:40,720
they never ever see them

1504
00:55:40,720 --> 00:55:42,960
so the question is how can we put a real

1505
00:55:42,960 --> 00:55:44,960
certificate in there

1506
00:55:44,960 --> 00:55:47,599
and so we came up with this mechanism

1507
00:55:47,599 --> 00:55:48,799
and what it is is that

1508
00:55:48,799 --> 00:55:50,799
before the device leaves the factory in

1509
00:55:50,799 --> 00:55:53,280
effect uh we want to boot it up and we

1510
00:55:53,280 --> 00:55:55,760
want to do provisioning step

1511
00:55:55,760 --> 00:55:58,960
and this process involves essentially

1512
00:55:58,960 --> 00:55:59,920
finding a

1513
00:55:59,920 --> 00:56:02,319
provisioning server over an ipv6 link

1514
00:56:02,319 --> 00:56:04,240
local address that avoids us having to

1515
00:56:04,240 --> 00:56:04,880
run

1516
00:56:04,880 --> 00:56:06,960
dhcp and a whole bunch of stuff but also

1517
00:56:06,960 --> 00:56:08,400
really make sure that

1518
00:56:08,400 --> 00:56:10,240
the device is really the device that's

1519
00:56:10,240 --> 00:56:11,599
on the table

1520
00:56:11,599 --> 00:56:14,480
there and eliminates some other other

1521
00:56:14,480 --> 00:56:15,359
security and

1522
00:56:15,359 --> 00:56:18,640
other issues and then we do what is

1523
00:56:18,640 --> 00:56:19,680
essentially an

1524
00:56:19,680 --> 00:56:22,480
est enrollment except we can't use est

1525
00:56:22,480 --> 00:56:24,079
literally because we need a whole bunch

1526
00:56:24,079 --> 00:56:26,000
of other data that doesn't fit into a

1527
00:56:26,000 --> 00:56:27,760
csr for instance

1528
00:56:27,760 --> 00:56:30,000
um and in this case what we do is we

1529
00:56:30,000 --> 00:56:31,920
exploit the fact that home routers

1530
00:56:31,920 --> 00:56:35,040
um will generate an ipv6 link

1531
00:56:35,040 --> 00:56:37,920
uh excuse me ula address which is a

1532
00:56:37,920 --> 00:56:40,480
relatively unique ipv6 address

1533
00:56:40,480 --> 00:56:42,440
um and we give them a name if then the

1534
00:56:42,440 --> 00:56:44,079
manufacturers uh

1535
00:56:44,079 --> 00:56:48,079
dns zone um and we do a a let's encrypt

1536
00:56:48,079 --> 00:56:50,319
enrollment and we with a dns-01

1537
00:56:50,319 --> 00:56:52,880
challenge uh to dns and then we return

1538
00:56:52,880 --> 00:56:55,599
the resulting certificate to the device

1539
00:56:55,599 --> 00:56:58,000
um there's writing code for this um in

1540
00:56:58,000 --> 00:56:59,520
fact i believe i'm speaking to you

1541
00:56:59,520 --> 00:57:01,280
through a router that was onboarded this

1542
00:57:01,280 --> 00:57:02,160
way

1543
00:57:02,160 --> 00:57:05,200
um and the the certificate winds up in

1544
00:57:05,200 --> 00:57:06,720
the router and you can talk to it that

1545
00:57:06,720 --> 00:57:07,920
way

1546
00:57:07,920 --> 00:57:11,440
so what happens uh so then then we do

1547
00:57:11,440 --> 00:57:11,839
something

1548
00:57:11,839 --> 00:57:13,839
interesting we populate the public dns

1549
00:57:13,839 --> 00:57:15,359
the manufacturer with this

1550
00:57:15,359 --> 00:57:18,400
ula address in this case this is fdd4

1551
00:57:18,400 --> 00:57:21,359
you see that address colon colon one um

1552
00:57:21,359 --> 00:57:21,839
and

1553
00:57:21,839 --> 00:57:23,680
we give it that name and so this means

1554
00:57:23,680 --> 00:57:25,440
that now there is a name that is

1555
00:57:25,440 --> 00:57:26,720
attached to the

1556
00:57:26,720 --> 00:57:28,480
an ip address which is attached to the

1557
00:57:28,480 --> 00:57:30,480
name that is in the certificate

1558
00:57:30,480 --> 00:57:32,480
and when i pull up my browser and i

1559
00:57:32,480 --> 00:57:34,000
point my browser at this

1560
00:57:34,000 --> 00:57:37,280
at this uh router by name

1561
00:57:37,280 --> 00:57:39,280
i have connectivity to it and i load the

1562
00:57:39,280 --> 00:57:40,319
certificate and

1563
00:57:40,319 --> 00:57:42,880
uh lo and behold uh i have a secure

1564
00:57:42,880 --> 00:57:44,480
connection

1565
00:57:44,480 --> 00:57:46,640
uh so that's this this slide and this is

1566
00:57:46,640 --> 00:57:47,839
what happens um

1567
00:57:47,839 --> 00:57:49,280
so we have had a little bit of

1568
00:57:49,280 --> 00:57:51,040
challenges with this um

1569
00:57:51,040 --> 00:57:53,520
there and it turns out that for instance

1570
00:57:53,520 --> 00:57:54,720
what if you're not on

1571
00:57:54,720 --> 00:57:56,400
on the internet when you get connected

1572
00:57:56,400 --> 00:57:58,240
well the answer is most of the home

1573
00:57:58,240 --> 00:57:59,119
routers

1574
00:57:59,119 --> 00:58:01,760
will answer dns requests for names they

1575
00:58:01,760 --> 00:58:03,520
find in etc hosts

1576
00:58:03,520 --> 00:58:05,839
and so you need to populate that as well

1577
00:58:05,839 --> 00:58:07,520
into there and then you have a solution

1578
00:58:07,520 --> 00:58:08,960
where you actually connect

1579
00:58:08,960 --> 00:58:12,000
and it works uh without a problem on

1580
00:58:12,000 --> 00:58:14,240
friday uh ted lemon will be talking

1581
00:58:14,240 --> 00:58:16,319
about stub networks and this actually

1582
00:58:16,319 --> 00:58:18,079
can work very well for

1583
00:58:18,079 --> 00:58:20,079
devices connected by stub networks as

1584
00:58:20,079 --> 00:58:21,760
well the key thing

1585
00:58:21,760 --> 00:58:23,920
is that you have to have that ula that

1586
00:58:23,920 --> 00:58:25,760
you control

1587
00:58:25,760 --> 00:58:27,520
and you have to be able to put it

1588
00:58:27,520 --> 00:58:29,520
uniquely into a name

1589
00:58:29,520 --> 00:58:32,559
that you control there are some issues

1590
00:58:32,559 --> 00:58:34,640
the major one is with a let's encrypt

1591
00:58:34,640 --> 00:58:36,799
certificate is that it expires after 90

1592
00:58:36,799 --> 00:58:38,799
days and so if you put your devices

1593
00:58:38,799 --> 00:58:40,480
from the manufacturing plant and you put

1594
00:58:40,480 --> 00:58:41,760
them in a warehouse and they sit there

1595
00:58:41,760 --> 00:58:43,280
for more than 90 days

1596
00:58:43,280 --> 00:58:44,960
then when they come out they have an

1597
00:58:44,960 --> 00:58:46,319
expired certificate

1598
00:58:46,319 --> 00:58:48,799
so we need to do something about that

1599
00:58:48,799 --> 00:58:51,119
and exactly what that what that is

1600
00:58:51,119 --> 00:58:53,680
is unclear um if we could just assume

1601
00:58:53,680 --> 00:58:55,440
that there was internet connectivity for

1602
00:58:55,440 --> 00:58:56,880
the device when they turn on then we

1603
00:58:56,880 --> 00:58:58,319
could simply talk to the provisioning

1604
00:58:58,319 --> 00:59:00,160
server again and essentially wind up

1605
00:59:00,160 --> 00:59:01,119
with a renewed

1606
00:59:01,119 --> 00:59:03,440
a new new certificate using the old

1607
00:59:03,440 --> 00:59:05,359
certificate as proof

1608
00:59:05,359 --> 00:59:08,799
of of possession of that private key

1609
00:59:08,799 --> 00:59:10,640
um but what if the device needs human

1610
00:59:10,640 --> 00:59:12,480
intervention to get online for instance

1611
00:59:12,480 --> 00:59:14,880
many home routers in a dsl kind of space

1612
00:59:14,880 --> 00:59:17,119
need a pppoe username password to

1613
00:59:17,119 --> 00:59:20,319
be connected so um

1614
00:59:20,319 --> 00:59:22,079
that has a cause as a chicken and egg

1615
00:59:22,079 --> 00:59:23,520
situation you need to log into the

1616
00:59:23,520 --> 00:59:25,119
device to provide that and you need the

1617
00:59:25,119 --> 00:59:26,480
certificate to be able to log in and

1618
00:59:26,480 --> 00:59:28,240
what are you going to do

1619
00:59:28,240 --> 00:59:30,319
if you are an isp and you're doing this

1620
00:59:30,319 --> 00:59:31,599
and you're deploying things then

1621
00:59:31,599 --> 00:59:32,720
you can do you can actually

1622
00:59:32,720 --> 00:59:34,480
pre-provision some of those username

1623
00:59:34,480 --> 00:59:36,000
passwords so the device can actually get

1624
00:59:36,000 --> 00:59:36,960
online

1625
00:59:36,960 --> 00:59:40,240
and can do things now the reason we

1626
00:59:40,240 --> 00:59:41,599
don't use a private ca

1627
00:59:41,599 --> 00:59:43,599
is that we want it to be accessible from

1628
00:59:43,599 --> 00:59:45,440
the browser and that would not be

1629
00:59:45,440 --> 00:59:46,079
accessible

1630
00:59:46,079 --> 00:59:48,240
if it was a private ca so the typical

1631
00:59:48,240 --> 00:59:49,920
situation that happens in for instance

1632
00:59:49,920 --> 00:59:50,640
with

1633
00:59:50,640 --> 00:59:53,040
uh cable modems which all have idev ids

1634
00:59:53,040 --> 00:59:54,240
uh built in

1635
00:59:54,240 --> 00:59:55,920
is that those are not connected to the

1636
00:59:55,920 --> 00:59:57,920
public web pki and you can't manage them

1637
00:59:57,920 --> 00:59:58,960
directly with uh

1638
00:59:58,960 --> 01:00:02,240
with your browser the second problem we

1639
01:00:02,240 --> 01:00:03,760
had

1640
01:00:03,760 --> 01:00:06,880
was that we discovered that quite a

1641
01:00:06,880 --> 01:00:08,079
number of systems

1642
01:00:08,079 --> 01:00:11,359
are unwilling to do ipv6 dns lookups or

1643
01:00:11,359 --> 01:00:12,319
communications

1644
01:00:12,319 --> 01:00:14,720
if they can't detect that ipv6 is live

1645
01:00:14,720 --> 01:00:16,319
so if you have a scenario where you

1646
01:00:16,319 --> 01:00:18,160
don't have internet connectivity or you

1647
01:00:18,160 --> 01:00:21,200
aren't allowed to do it yet then

1648
01:00:21,200 --> 01:00:23,599
um these devices will say there's no

1649
01:00:23,599 --> 01:00:25,200
such name

1650
01:00:25,200 --> 01:00:28,079
even though you do a dig or other you

1651
01:00:28,079 --> 01:00:29,760
know command line type things

1652
01:00:29,760 --> 01:00:32,799
and sure and hold though that's there

1653
01:00:32,799 --> 01:00:35,040
but these systems essentially uh refuse

1654
01:00:35,040 --> 01:00:36,720
to do ipv6

1655
01:00:36,720 --> 01:00:38,400
uh if they think that there isn't any

1656
01:00:38,400 --> 01:00:40,640
good ipv6 and this is i think a

1657
01:00:40,640 --> 01:00:44,400
existential challenge to using ipv6 and

1658
01:00:44,400 --> 01:00:45,760
ulas

1659
01:00:45,760 --> 01:00:48,880
in the in the world um we've seen this

1660
01:00:48,880 --> 01:00:50,559
with a number of browsers and a number

1661
01:00:50,559 --> 01:00:52,720
of systems but it's predominant with

1662
01:00:52,720 --> 01:00:54,240
chrome

1663
01:00:54,240 --> 01:00:56,559
but we believe we've also seen it at

1664
01:00:56,559 --> 01:00:59,280
times with the edge browser but it's

1665
01:00:59,280 --> 01:01:02,160
unclear and unconfirmed we have worked

1666
01:01:02,160 --> 01:01:04,240
around this by essentially putting a v4

1667
01:01:04,240 --> 01:01:06,480
address and the etc hosts on the

1668
01:01:06,480 --> 01:01:07,920
on the device and then everything

1669
01:01:07,920 --> 01:01:10,079
happens over v4 um

1670
01:01:10,079 --> 01:01:12,559
and that's kind of an icky hack but it

1671
01:01:12,559 --> 01:01:13,920
did work

1672
01:01:13,920 --> 01:01:17,440
um so um this is a uh

1673
01:01:17,440 --> 01:01:18,799
there's some additional work that needs

1674
01:01:18,799 --> 01:01:20,480
to happen i'd love to have some more

1675
01:01:20,480 --> 01:01:22,400
co-authors and there's some overlap and

1676
01:01:22,400 --> 01:01:23,920
some discussion that we might have as to

1677
01:01:23,920 --> 01:01:26,160
how this relates to danish

1678
01:01:26,160 --> 01:01:28,480
because we are using dns but we aren't

1679
01:01:28,480 --> 01:01:30,000
really putting the certificate in the

1680
01:01:30,000 --> 01:01:31,599
dns

1681
01:01:31,599 --> 01:01:33,760
but that's a potential uh additional

1682
01:01:33,760 --> 01:01:35,200
thing but it wouldn't be very useful if

1683
01:01:35,200 --> 01:01:36,880
browsers wouldn't support it

1684
01:01:36,880 --> 01:01:38,720
that's all i had to say about this and i

1685
01:01:38,720 --> 01:01:41,359
one minute over

1686
01:01:41,440 --> 01:01:43,359
yeah only one minute over thank you uh

1687
01:01:43,359 --> 01:01:45,280
michael for throwing out a tangible

1688
01:01:45,280 --> 01:01:47,200
problem here i think people are actually

1689
01:01:47,200 --> 01:01:48,880
interesting the chat indicates

1690
01:01:48,880 --> 01:01:52,160
already interest so uh thank you for for

1691
01:01:52,160 --> 01:01:52,559
that

1692
01:01:52,559 --> 01:01:55,119
um i'm very sorry that we are basically

1693
01:01:55,119 --> 01:01:55,760
already at the

1694
01:01:55,760 --> 01:01:57,440
bottom of the hour and the session's

1695
01:01:57,440 --> 01:01:58,960
officially over

1696
01:01:58,960 --> 01:02:01,839
but yet i would like to ask to maybe if

1697
01:02:01,839 --> 01:02:03,760
people can attend this room for a few

1698
01:02:03,760 --> 01:02:04,720
more minutes

1699
01:02:04,720 --> 01:02:08,559
we can throw out and ask which is about

1700
01:02:08,559 --> 01:02:12,319
you would you like to attend a near time

1701
01:02:12,319 --> 01:02:14,720
happening virtual interim to which

1702
01:02:14,720 --> 01:02:15,760
actually will provide

1703
01:02:15,760 --> 01:02:18,720
more floor podium from open mic and

1704
01:02:18,720 --> 01:02:19,680
discussion

1705
01:02:19,680 --> 01:02:21,839
and and picks up on the items discussed

1706
01:02:21,839 --> 01:02:23,760
here maybe some of the gaps maybe some

1707
01:02:23,760 --> 01:02:25,520
of the things you thought would be here

1708
01:02:25,520 --> 01:02:26,960
that are not or

1709
01:02:26,960 --> 01:02:30,480
some some uh uh first ones on the items

1710
01:02:30,480 --> 01:02:31,920
actually here right now

1711
01:02:31,920 --> 01:02:33,680
so um so what i would do would like to

1712
01:02:33,680 --> 01:02:35,359
do is to to issue a

1713
01:02:35,359 --> 01:02:37,920
a uh raised hand thingy here that we

1714
01:02:37,920 --> 01:02:39,280
have in this tool

1715
01:02:39,280 --> 01:02:40,960
and and if you raise your hand it's

1716
01:02:40,960 --> 01:02:42,640
basically two hums at once

1717
01:02:42,640 --> 01:02:44,640
so if you raise your hand that's the

1718
01:02:44,640 --> 01:02:46,559
first hand you are basically humming for

1719
01:02:46,559 --> 01:02:48,240
yeah i'd like to do that

1720
01:02:48,240 --> 01:02:50,000
and if you do not raise your hand

1721
01:02:50,000 --> 01:02:51,599
actively that's an option

1722
01:02:51,599 --> 01:02:53,039
i think it's a weird option but still

1723
01:02:53,039 --> 01:02:54,240
it's there so we're using that as a

1724
01:02:54,240 --> 01:02:55,119
second time

1725
01:02:55,119 --> 01:02:58,559
in one question um to basically now you

1726
01:02:58,559 --> 01:03:00,480
really don't want to see something like

1727
01:03:00,480 --> 01:03:02,319
uh very early on a virtual intro to make

1728
01:03:02,319 --> 01:03:04,240
time for that so i will start that

1729
01:03:04,240 --> 01:03:06,640
right now and i would be very happy if

1730
01:03:06,640 --> 01:03:07,280
you all

1731
01:03:07,280 --> 01:03:17,280
raise or not race actually your hand

1732
01:03:17,280 --> 01:03:18,799
so we're talking about like and the

1733
01:03:18,799 --> 01:03:20,799
question says that uh spreads it out

1734
01:03:20,799 --> 01:03:21,440
like

1735
01:03:21,440 --> 01:03:24,160
four weeks or something uh in the future

1736
01:03:24,160 --> 01:03:25,280
and why we do the

1737
01:03:25,280 --> 01:03:28,079
uh when we do that uh paul uh there are

1738
01:03:28,079 --> 01:03:29,440
people on the mic and we can

1739
01:03:29,440 --> 01:03:34,000
paralyze this as itf wants to do eric

1740
01:03:36,720 --> 01:03:38,640
oh sorry maybe this is me not knowing

1741
01:03:38,640 --> 01:03:40,000
how to operate things but yeah

1742
01:03:40,000 --> 01:03:42,720
oh okay but but but i was actually going

1743
01:03:42,720 --> 01:03:44,079
to make a comment earlier but i think

1744
01:03:44,079 --> 01:03:45,440
we're out of time so i can do the

1745
01:03:45,440 --> 01:03:46,559
mailing list

1746
01:03:46,559 --> 01:03:49,760
okay thank you a lot but again

1747
01:03:49,760 --> 01:03:51,359
parallelization while we wait for

1748
01:03:51,359 --> 01:03:53,280
votes coming in i will give a little

1749
01:03:53,280 --> 01:03:56,839
more like that 10 seconds still to this

1750
01:03:56,839 --> 01:03:59,839
thing

1751
01:04:00,640 --> 01:04:02,799
and quick spoiler the results are kind

1752
01:04:02,799 --> 01:04:05,359
of obvious

1753
01:04:08,000 --> 01:04:09,839
oh i think you also see the intermediate

1754
01:04:09,839 --> 01:04:11,680
results right

1755
01:04:11,680 --> 01:04:14,879
oh there's one good

1756
01:04:15,680 --> 01:04:18,799
this proves this is a real poll

1757
01:04:18,799 --> 01:04:21,920
and here you go so yeah we will issue a

1758
01:04:21,920 --> 01:04:26,079
corresponding proposal to the list

1759
01:04:26,079 --> 01:04:27,920
alex and i will come up with a date that

1760
01:04:27,920 --> 01:04:29,680
seems to be suitable and then you can

1761
01:04:29,680 --> 01:04:31,760
tell us why it's not or agree

1762
01:04:31,760 --> 01:04:33,680
thanks all for attending and again we

1763
01:04:33,680 --> 01:04:35,599
will provide you with more mic time next

1764
01:04:35,599 --> 01:04:37,440
time

1765
01:04:37,440 --> 01:04:40,559
and hope to get this started have a nice

1766
01:04:40,559 --> 01:04:42,960
itf

1767
01:04:42,960 --> 01:04:45,599
not in prague

1768
01:04:49,039 --> 01:04:55,839
thank you

1769
01:05:01,440 --> 01:05:03,520
you

