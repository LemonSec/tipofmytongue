1
00:00:14,920 --> 00:00:17,920
so

2
00:00:21,520 --> 00:00:25,199
well i have that it's time for us to

3
00:00:25,199 --> 00:00:26,960
start

4
00:00:26,960 --> 00:00:30,080
so we should do that

5
00:00:30,080 --> 00:00:32,880
since we have uh don't have that many

6
00:00:32,880 --> 00:00:33,920
presentations but

7
00:00:33,920 --> 00:00:36,480
i think there have a fair amount uh in

8
00:00:36,480 --> 00:00:37,920
them

9
00:00:37,920 --> 00:00:40,239
uh

10
00:00:41,440 --> 00:00:45,839
let's see here so

11
00:00:48,000 --> 00:00:52,480
oops uh this is the babel working group

12
00:00:52,480 --> 00:00:54,960
uh donald eastlake with future way uh

13
00:00:54,960 --> 00:00:56,160
russ white uh

14
00:00:56,160 --> 00:00:58,960
jennifer is our co-chair and martin

15
00:00:58,960 --> 00:01:00,559
vigorous our ad

16
00:01:00,559 --> 00:01:03,120
on the line here so this is the note

17
00:01:03,120 --> 00:01:04,319
well people have probably seen this

18
00:01:04,319 --> 00:01:05,920
before but basically if you're

19
00:01:05,920 --> 00:01:08,720
uh contribute something to the ietf and

20
00:01:08,720 --> 00:01:09,439
you're

21
00:01:09,439 --> 00:01:11,360
aware of uh intellectual property like

22
00:01:11,360 --> 00:01:12,720
patent rights in what you're

23
00:01:12,720 --> 00:01:14,159
contributing uh

24
00:01:14,159 --> 00:01:17,360
in any form or venue including speaking

25
00:01:17,360 --> 00:01:18,080
or

26
00:01:18,080 --> 00:01:21,520
presidenting uh then you need to declare

27
00:01:21,520 --> 00:01:23,759
that

28
00:01:23,840 --> 00:01:26,000
uh it's a little reminder i give that

29
00:01:26,000 --> 00:01:27,040
people should

30
00:01:27,040 --> 00:01:30,720
review documents uh and uh

31
00:01:30,720 --> 00:01:34,000
it will improve the quality if you do so

32
00:01:34,000 --> 00:01:37,439
so here's the agenda we currently have

33
00:01:37,439 --> 00:01:40,159
uh barbara stark has volunteered to take

34
00:01:40,159 --> 00:01:40,479
uh

35
00:01:40,479 --> 00:01:43,439
notes uh this is only when she's not

36
00:01:43,439 --> 00:01:44,960
speaking so she has one point of the

37
00:01:44,960 --> 00:01:46,799
presentations

38
00:01:46,799 --> 00:01:49,439
um it'd be good to have a jabra scribe i

39
00:01:49,439 --> 00:01:51,360
can monitor it to some extent i don't

40
00:01:51,360 --> 00:01:54,399
know how much activity they'll be on it

41
00:01:54,399 --> 00:01:56,880
this is the agenda shown here basically

42
00:01:56,880 --> 00:01:58,240
some presentation of working group

43
00:01:58,240 --> 00:02:00,799
status and the milestone status

44
00:02:00,799 --> 00:02:04,320
and uh so i have some suggestions for

45
00:02:04,320 --> 00:02:06,079
some additional milestones

46
00:02:06,079 --> 00:02:09,598
and uh they will uh i guess

47
00:02:09,598 --> 00:02:15,200
source specific an ipv4 reviews

48
00:02:15,200 --> 00:02:17,680
uh barbara's going to talk about the

49
00:02:17,680 --> 00:02:19,760
fable information model

50
00:02:19,760 --> 00:02:22,400
and like i said last couple remaining

51
00:02:22,400 --> 00:02:24,160
open questions there

52
00:02:24,160 --> 00:02:27,680
and i have a presentation on um

53
00:02:27,680 --> 00:02:30,800
babel as a routing protocol for uh i

54
00:02:30,800 --> 00:02:32,560
triple eight or two eleven mesh it's

55
00:02:32,560 --> 00:02:34,560
wi-fi mesh

56
00:02:34,560 --> 00:02:37,280
there any suggestions for additions or

57
00:02:37,280 --> 00:02:38,959
deletions or

58
00:02:38,959 --> 00:02:42,879
changes to this agenda

59
00:02:46,959 --> 00:02:50,000
hearing none i guess we will go ahead on

60
00:02:50,000 --> 00:02:55,280
the basis of this agenda then uh

61
00:02:55,680 --> 00:02:59,519
so status we have published the

62
00:02:59,519 --> 00:03:03,360
set of four rfcs uh the applicability

63
00:03:03,360 --> 00:03:04,000
the

64
00:03:04,000 --> 00:03:07,360
base routing protocol um

65
00:03:07,360 --> 00:03:10,640
the two security rfc's uh

66
00:03:10,640 --> 00:03:13,680
mac authentication and uh uh

67
00:03:13,680 --> 00:03:18,239
datagram dtls

68
00:03:18,239 --> 00:03:22,000
for available security

69
00:03:22,000 --> 00:03:26,239
so uh there are two graphs that are

70
00:03:26,239 --> 00:03:29,680
uh through the iesg child chat

71
00:03:29,680 --> 00:03:32,879
but uh need to

72
00:03:32,879 --> 00:03:35,519
let's see uh you want to say something

73
00:03:35,519 --> 00:03:38,239
dave go ahead

74
00:03:40,560 --> 00:03:44,560
i alright so it is 6 a.m here in san

75
00:03:44,560 --> 00:03:45,360
francisco

76
00:03:45,360 --> 00:03:47,519
so i'm only on coffee but i just wanted

77
00:03:47,519 --> 00:03:49,040
to take a moment and

78
00:03:49,040 --> 00:03:50,879
cheers everyone in the working group for

79
00:03:50,879 --> 00:03:53,040
publishing these documents

80
00:03:53,040 --> 00:03:55,920
it was a ton of work and a lot of

81
00:03:55,920 --> 00:03:57,439
arguing with uh

82
00:03:57,439 --> 00:03:59,360
people in positions of power but we we

83
00:03:59,360 --> 00:04:00,799
got there so i want to

84
00:04:00,799 --> 00:04:02,720
in particular congratulate julius for

85
00:04:02,720 --> 00:04:04,239
making this happen and everyone else

86
00:04:04,239 --> 00:04:05,120
involved

87
00:04:05,120 --> 00:04:08,300
cheers i think that's appropriate

88
00:04:08,300 --> 00:04:11,369
[Music]

89
00:04:15,920 --> 00:04:19,040
speech speech speech

90
00:04:19,040 --> 00:04:22,560
okay i don't know i think julius may

91
00:04:22,560 --> 00:04:23,919
talk about this during his presentation

92
00:04:23,919 --> 00:04:29,840
i don't know

93
00:04:34,639 --> 00:04:38,400
uh oh okay now i'll

94
00:04:38,400 --> 00:04:42,560
i'll go ahead thanks for that good

95
00:04:42,560 --> 00:04:46,080
note things to note um

96
00:04:47,120 --> 00:04:50,000
so for seating on the status there's two

97
00:04:50,000 --> 00:04:50,800
drafts through

98
00:04:50,800 --> 00:04:53,520
i usually discuss with icsd tell chat

99
00:04:53,520 --> 00:04:54,479
which discusses

100
00:04:54,479 --> 00:04:56,960
being resolved the information model

101
00:04:56,960 --> 00:04:58,240
which barbara's going to talk about

102
00:04:58,240 --> 00:05:00,880
and uh source specific which uh julius

103
00:05:00,880 --> 00:05:01,360
is going to

104
00:05:01,360 --> 00:05:04,720
mention in his slides uh there's a

105
00:05:04,720 --> 00:05:06,479
publication request for the yang model

106
00:05:06,479 --> 00:05:07,039
which is

107
00:05:07,039 --> 00:05:08,960
that i think it's been the idea is to

108
00:05:08,960 --> 00:05:11,440
get the information model nailed down

109
00:05:11,440 --> 00:05:15,759
yang model is uh kind of based on that

110
00:05:15,759 --> 00:05:17,680
draft in the working group we have the

111
00:05:17,680 --> 00:05:19,520
v4 via v6

112
00:05:19,520 --> 00:05:22,400
uh julius will also talk about there is

113
00:05:22,400 --> 00:05:22,720
a

114
00:05:22,720 --> 00:05:25,039
one expired horton group draft on the

115
00:05:25,039 --> 00:05:27,120
rtt extension which there's significant

116
00:05:27,120 --> 00:05:28,400
interest in but

117
00:05:28,400 --> 00:05:32,320
uh in terms of uh using it or something

118
00:05:32,320 --> 00:05:33,039
but uh

119
00:05:33,039 --> 00:05:36,479
there's uh nothing none to revive that

120
00:05:36,479 --> 00:05:38,639
draft specifically

121
00:05:38,639 --> 00:05:40,720
and in home that there's uh the babel

122
00:05:40,720 --> 00:05:42,160
profile which is uh still

123
00:05:42,160 --> 00:05:44,000
in the rfc editor's queue basically

124
00:05:44,000 --> 00:05:46,560
pending uh source specific

125
00:05:46,560 --> 00:05:48,160
it was dependent on the routing protocol

126
00:05:48,160 --> 00:05:49,919
at source specific and

127
00:05:49,919 --> 00:05:51,759
there wasn't any other draft really

128
00:05:51,759 --> 00:05:54,400
presented related to babel was the

129
00:05:54,400 --> 00:05:57,440
um beer extensions was suggested

130
00:05:57,440 --> 00:06:01,280
which is not currently being pursued it

131
00:06:01,280 --> 00:06:03,758
would appear

132
00:06:05,600 --> 00:06:09,919
uh so we've actually completed

133
00:06:09,919 --> 00:06:11,440
all of the milestones that were

134
00:06:11,440 --> 00:06:15,120
originally set for this working group

135
00:06:15,120 --> 00:06:17,919
these typically involved adoption of a

136
00:06:17,919 --> 00:06:20,000
graft or submission

137
00:06:20,000 --> 00:06:23,280
to the iesg for variously for

138
00:06:23,280 --> 00:06:25,759
informational or proposed standard

139
00:06:25,759 --> 00:06:29,120
so i think it's we should really

140
00:06:29,120 --> 00:06:30,720
think more about adding some additional

141
00:06:30,720 --> 00:06:32,319
milestones

142
00:06:32,319 --> 00:06:35,919
into the future and i actually have

143
00:06:35,919 --> 00:06:39,600
three suggestions uh i think

144
00:06:39,600 --> 00:06:43,600
the v4 via v6s is pretty well along and

145
00:06:43,600 --> 00:06:45,039
we should be able to submit that pretty

146
00:06:45,039 --> 00:06:46,840
soon

147
00:06:46,840 --> 00:06:49,680
um there's uh

148
00:06:49,680 --> 00:06:52,560
these suggested milestones and dates uh

149
00:06:52,560 --> 00:06:54,479
adoption of uh

150
00:06:54,479 --> 00:06:56,000
multicast wraps seemed like a good thing

151
00:06:56,000 --> 00:06:59,599
and i have some ideas on that one can be

152
00:06:59,599 --> 00:07:00,800
discussed on the there's no

153
00:07:00,800 --> 00:07:02,080
presentations on that today but we

154
00:07:02,080 --> 00:07:04,000
discussed on the mailing list and

155
00:07:04,000 --> 00:07:07,520
i can mention how 802.11 mesh does it

156
00:07:07,520 --> 00:07:11,360
and uh if we're going to do this uh 211

157
00:07:11,360 --> 00:07:13,520
uh the vehicle freighter 211 mesh we

158
00:07:13,520 --> 00:07:14,479
probably need to

159
00:07:14,479 --> 00:07:16,800
send a liaison to 8 or 2 11 to ask their

160
00:07:16,800 --> 00:07:18,479
permission i talk about that

161
00:07:18,479 --> 00:07:22,160
in my slides uh anybody have any

162
00:07:22,160 --> 00:07:26,800
particular comments on this

163
00:07:29,520 --> 00:07:31,919
these possible milestones uh they say

164
00:07:31,919 --> 00:07:32,800
they'll probably

165
00:07:32,800 --> 00:07:36,560
come up in in later presentations so

166
00:07:36,560 --> 00:07:41,360
uh they'll look good to me

167
00:07:41,360 --> 00:07:44,880
yeah well you all look good to me

168
00:07:48,800 --> 00:07:52,160
okay let's see here uh

169
00:07:52,160 --> 00:07:59,840
so i will

170
00:08:10,840 --> 00:08:12,080
uh

171
00:08:12,080 --> 00:08:14,400
all right

172
00:08:17,680 --> 00:08:20,000
so julius if you'd like to go ahead and

173
00:08:20,000 --> 00:08:22,000
i can drive this line

174
00:08:22,000 --> 00:08:25,440
so hello i'm doing this i think i've

175
00:08:25,440 --> 00:08:27,759
met most of the people here hello to

176
00:08:27,759 --> 00:08:29,039
everyone

177
00:08:29,039 --> 00:08:30,720
and i'm going to tell you just a few

178
00:08:30,720 --> 00:08:32,399
words about south specific

179
00:08:32,399 --> 00:08:35,839
and most of my talk is about v4 via v6

180
00:08:35,839 --> 00:08:41,839
next please uh just a sec here

181
00:08:43,360 --> 00:08:47,040
i'm sorry for the date it's a copy page

182
00:08:47,040 --> 00:08:48,000
that went

183
00:08:48,000 --> 00:08:50,240
wrong

184
00:08:53,040 --> 00:08:56,720
okay so okay so as ben said we've

185
00:08:56,720 --> 00:08:59,680
managed to publish four documents

186
00:08:59,680 --> 00:09:02,480
so from my point of view the most

187
00:09:02,480 --> 00:09:03,279
important is

188
00:09:03,279 --> 00:09:06,320
eight nine six six which is

189
00:09:06,320 --> 00:09:07,760
the revived version of the base

190
00:09:07,760 --> 00:09:09,519
specification

191
00:09:09,519 --> 00:09:12,320
if you want to know who changed 6126

192
00:09:12,320 --> 00:09:14,000
there is an appendix that describes the

193
00:09:14,000 --> 00:09:14,800
changes

194
00:09:14,800 --> 00:09:16,560
so the protocol is not strictly

195
00:09:16,560 --> 00:09:18,560
compatible with 6126

196
00:09:18,560 --> 00:09:21,440
but it is very easy to adapt for

197
00:09:21,440 --> 00:09:23,200
compatibility

198
00:09:23,200 --> 00:09:26,560
um the documents are not

199
00:09:26,560 --> 00:09:28,880
exactly fortunate in particular there

200
00:09:28,880 --> 00:09:30,800
are two shoots that are impossible to

201
00:09:30,800 --> 00:09:31,600
implement

202
00:09:31,600 --> 00:09:34,160
they were requested by the isg so i'm

203
00:09:34,160 --> 00:09:36,000
not i don't want to give the impression

204
00:09:36,000 --> 00:09:38,480
that they behave badly most of their

205
00:09:38,480 --> 00:09:40,640
numbers were extremely helpful cut quite

206
00:09:40,640 --> 00:09:41,839
a few titles

207
00:09:41,839 --> 00:09:43,440
and fix the documents they didn't catch

208
00:09:43,440 --> 00:09:45,279
all of them by the way we had to make a

209
00:09:45,279 --> 00:09:47,120
last-minute technical change to mac

210
00:09:47,120 --> 00:09:49,279
authentication in os48

211
00:09:49,279 --> 00:09:51,519
but they were pretty helpful with i

212
00:09:51,519 --> 00:09:53,440
would say two exceptions and since i

213
00:09:53,440 --> 00:09:55,760
don't believe in protecting the ability

214
00:09:55,760 --> 00:09:58,800
to mention their names

215
00:10:01,440 --> 00:10:04,480
and so they

216
00:10:04,480 --> 00:10:07,279
said that we need to solve problems that

217
00:10:07,279 --> 00:10:09,680
nobody knows how to solve

218
00:10:09,680 --> 00:10:11,920
i tried arguing that nobody knows how to

219
00:10:11,920 --> 00:10:13,600
solve and ask in the bible working order

220
00:10:13,600 --> 00:10:14,959
to solve them

221
00:10:14,959 --> 00:10:18,079
is too much so the result is that there

222
00:10:18,079 --> 00:10:19,760
are too short in the document

223
00:10:19,760 --> 00:10:22,079
that quite simply nobody in the world

224
00:10:22,079 --> 00:10:23,440
knows how to implement

225
00:10:23,440 --> 00:10:25,120
they should manage to keep them at the

226
00:10:25,120 --> 00:10:28,000
ship level so there's another problem

227
00:10:28,000 --> 00:10:30,800
okay it was documented 17 years ago when

228
00:10:30,800 --> 00:10:33,279
i see 37.74

229
00:10:33,279 --> 00:10:35,839
obviously nothing has been done to solve

230
00:10:35,839 --> 00:10:37,680
it perhaps some people are interested in

231
00:10:37,680 --> 00:10:38,560
keeping it

232
00:10:38,560 --> 00:10:40,000
and we have a number of honorable

233
00:10:40,000 --> 00:10:41,920
documents so there's information

234
00:10:41,920 --> 00:10:45,600
in yank which barbara is going to speak

235
00:10:45,600 --> 00:10:46,399
about

236
00:10:46,399 --> 00:10:49,760
they're so specific and v4 via v6

237
00:10:49,760 --> 00:10:52,320
that i'm going to speak about now and

238
00:10:52,320 --> 00:10:54,000
two documents that we're probably not

239
00:10:54,000 --> 00:10:54,640
going to

240
00:10:54,640 --> 00:10:57,920
publish as rfcs which are diversity one

241
00:10:57,920 --> 00:10:59,680
that i forgot to put on this slide which

242
00:10:59,680 --> 00:11:00,959
is rtt

243
00:11:00,959 --> 00:11:04,240
diversity is probably not useful i have

244
00:11:04,240 --> 00:11:04,640
never

245
00:11:04,640 --> 00:11:06,399
managed to build an experiment that

246
00:11:06,399 --> 00:11:07,760
showed that diversity

247
00:11:07,760 --> 00:11:10,720
is useful so it sounds like something

248
00:11:10,720 --> 00:11:12,079
that's a very good idea

249
00:11:12,079 --> 00:11:14,560
but doesn't help much and rtt is

250
00:11:14,560 --> 00:11:16,160
extremely useful it's deployed in

251
00:11:16,160 --> 00:11:17,920
production but we don't understand why

252
00:11:17,920 --> 00:11:18,880
it works

253
00:11:18,880 --> 00:11:21,760
it's not supposed to work as well as it

254
00:11:21,760 --> 00:11:23,839
does so more research is necessary we're

255
00:11:23,839 --> 00:11:26,240
not ready to publish it as an rfc

256
00:11:26,240 --> 00:11:28,480
perhaps an experimental but i don't know

257
00:11:28,480 --> 00:11:31,120
if it's worth it

258
00:11:40,800 --> 00:11:43,120
okay so just a few words about source

259
00:11:43,120 --> 00:11:45,440
specifics so source specific is a very

260
00:11:45,440 --> 00:11:47,600
useful extension to babel it allows for

261
00:11:47,600 --> 00:11:49,760
a cheap form of multi-homing

262
00:11:49,760 --> 00:11:52,160
it was implemented by myself in machu

263
00:11:52,160 --> 00:11:55,120
buche back in 2014

264
00:11:55,120 --> 00:11:58,959
and we published it as an equality

265
00:11:58,959 --> 00:12:01,880
conference and if networking back in

266
00:12:01,880 --> 00:12:03,920
2015.

267
00:12:03,920 --> 00:12:07,839
now the draft we wrote a draft at the

268
00:12:07,839 --> 00:12:10,480
same time as we read the paper

269
00:12:10,480 --> 00:12:12,000
now that we are done with the base

270
00:12:12,000 --> 00:12:13,519
specification we've

271
00:12:13,519 --> 00:12:17,200
submitted the drive to isg and the iog

272
00:12:17,200 --> 00:12:17,839
was

273
00:12:17,839 --> 00:12:20,639
fairly friendly and i would say too much

274
00:12:20,639 --> 00:12:21,040
so

275
00:12:21,040 --> 00:12:23,440
because i've lifted the document after

276
00:12:23,440 --> 00:12:25,360
it came back from the asg i read it

277
00:12:25,360 --> 00:12:26,639
carefully again

278
00:12:26,639 --> 00:12:28,240
and i have found that it's technically

279
00:12:28,240 --> 00:12:30,320
correct i haven't found any mistakes in

280
00:12:30,320 --> 00:12:31,760
the document that it's technically

281
00:12:31,760 --> 00:12:33,440
complete it contains

282
00:12:33,440 --> 00:12:35,519
all the required data but it is

283
00:12:35,519 --> 00:12:36,959
perfectly illegible

284
00:12:36,959 --> 00:12:39,360
the problem is that you cannot read it

285
00:12:39,360 --> 00:12:40,880
contains all the information but you

286
00:12:40,880 --> 00:12:41,839
need to read

287
00:12:41,839 --> 00:12:45,839
the 2015 paper in order to understand

288
00:12:45,839 --> 00:12:46,800
the draft

289
00:12:46,800 --> 00:12:48,320
so i have decided that it's not

290
00:12:48,320 --> 00:12:49,760
worthwhile trying to address the

291
00:12:49,760 --> 00:12:51,760
individual isg comments

292
00:12:51,760 --> 00:12:54,560
but what needs to be done is to rewrite

293
00:12:54,560 --> 00:12:55,360
it

294
00:12:55,360 --> 00:12:57,680
so that it can be made legible it should

295
00:12:57,680 --> 00:12:59,120
not be too difficult because the

296
00:12:59,120 --> 00:13:00,880
technical content is there

297
00:13:00,880 --> 00:13:03,360
make it into a legible document and

298
00:13:03,360 --> 00:13:04,560
resubmit

299
00:13:04,560 --> 00:13:07,680
so that is one of my main priorities

300
00:13:07,680 --> 00:13:08,720
right now

301
00:13:08,720 --> 00:13:12,880
next please okay v4

302
00:13:12,880 --> 00:13:16,720
via v6 so that's

303
00:13:16,720 --> 00:13:19,920
something that we implemented this sub

304
00:13:19,920 --> 00:13:21,920
last summer

305
00:13:21,920 --> 00:13:25,120
uh together with stills industrial

306
00:13:25,120 --> 00:13:28,399
so the idea of v4 via b6

307
00:13:28,399 --> 00:13:31,440
is that you don't need

308
00:13:31,440 --> 00:13:35,200
ipv4 addresses inside the network

309
00:13:35,200 --> 00:13:38,320
so here i have two ipv4 and house a and

310
00:13:38,320 --> 00:13:39,199
zeb

311
00:13:39,199 --> 00:13:42,240
they have ipv4 addresses labeled amz and

312
00:13:42,240 --> 00:13:43,279
red

313
00:13:43,279 --> 00:13:46,240
and they have ipv6 addresses labeled

314
00:13:46,240 --> 00:13:48,720
alpha and on again green

315
00:13:48,720 --> 00:13:52,000
and the idea of v4 via v6

316
00:13:52,000 --> 00:13:54,800
is to avoid having to configure ipv4

317
00:13:54,800 --> 00:13:55,760
addresses

318
00:13:55,760 --> 00:13:58,480
inside the network in fact if you think

319
00:13:58,480 --> 00:13:58,880
about

320
00:13:58,880 --> 00:14:02,240
it the ipv4 addresses of routers

321
00:14:02,240 --> 00:14:04,079
inside the network never appear on the

322
00:14:04,079 --> 00:14:06,959
wire the packet goes from a to zeb

323
00:14:06,959 --> 00:14:08,959
and the addresses of the intermediate

324
00:14:08,959 --> 00:14:10,240
router don't appear

325
00:14:10,240 --> 00:14:12,720
the only reason for which we need ipv4

326
00:14:12,720 --> 00:14:14,240
addresses on the routers

327
00:14:14,240 --> 00:14:17,360
is in order to hack to determine mac

328
00:14:17,360 --> 00:14:19,040
addresses using art

329
00:14:19,040 --> 00:14:21,519
so the idea here is that you replace our

330
00:14:21,519 --> 00:14:23,760
plasma ipv6 neighboring discovery

331
00:14:23,760 --> 00:14:25,360
and everything works you have new

332
00:14:25,360 --> 00:14:27,519
encapsulation you have native ipv4

333
00:14:27,519 --> 00:14:29,959
packets and you don't need to configure

334
00:14:29,959 --> 00:14:34,880
ipv4 inside the network next please

335
00:14:37,760 --> 00:14:40,959
so what you do is that you configure an

336
00:14:40,959 --> 00:14:42,079
ipv6

337
00:14:42,079 --> 00:14:45,839
bubble network and plan ipv4 router

338
00:14:45,839 --> 00:14:47,519
works out of the box you don't need to

339
00:14:47,519 --> 00:14:48,560
configure

340
00:14:48,560 --> 00:14:50,560
intermediate routers you don't have any

341
00:14:50,560 --> 00:14:52,560
encapsulation you have no translation

342
00:14:52,560 --> 00:14:54,560
you don't have any of the bad features

343
00:14:54,560 --> 00:14:56,079
this looks completely mentioned

344
00:14:56,079 --> 00:14:58,000
so some people might argue why are you

345
00:14:58,000 --> 00:15:00,079
still working on a pv4

346
00:15:00,079 --> 00:15:02,079
and the reason for that is that we think

347
00:15:02,079 --> 00:15:03,600
that uh

348
00:15:03,600 --> 00:15:05,839
doing something like that encourages

349
00:15:05,839 --> 00:15:06,800
paradoxically

350
00:15:06,800 --> 00:15:10,079
ipv4 to ipv6 translation transition

351
00:15:10,079 --> 00:15:13,440
so right now there is no good reason

352
00:15:13,440 --> 00:15:17,120
to uh build an ipv6 network the users

353
00:15:17,120 --> 00:15:17,920
are requesting

354
00:15:17,920 --> 00:15:21,040
ipv4 because they want to access their

355
00:15:21,040 --> 00:15:21,519
favorite

356
00:15:21,519 --> 00:15:25,199
ipv4 websites so if you build an ipv4

357
00:15:25,199 --> 00:15:26,320
network

358
00:15:26,320 --> 00:15:28,000
your users are happy if you build an

359
00:15:28,000 --> 00:15:29,440
ipv6 network they're

360
00:15:29,440 --> 00:15:31,680
unhappy and here what happens is that

361
00:15:31,680 --> 00:15:34,160
just by building an ipv6 network

362
00:15:34,160 --> 00:15:36,720
you get ipv4 for free so suddenly it

363
00:15:36,720 --> 00:15:38,399
becomes worthwhile to build

364
00:15:38,399 --> 00:15:43,199
an ipv6 network next please

365
00:15:43,440 --> 00:15:46,240
and so it was implemented by twofield in

366
00:15:46,240 --> 00:15:47,440
this in

367
00:15:47,440 --> 00:15:50,959
during last spring it

368
00:15:50,959 --> 00:15:54,079
had some testing i would say not enough

369
00:15:54,079 --> 00:15:56,000
but it was difficult to supervise still

370
00:15:56,000 --> 00:15:56,720
feel

371
00:15:56,720 --> 00:15:59,839
uh in lockdown and

372
00:15:59,839 --> 00:16:01,839
it was presented to the battle working

373
00:16:01,839 --> 00:16:03,680
route as v4 in

374
00:16:03,680 --> 00:16:06,880
v6 and here there was another invention

375
00:16:06,880 --> 00:16:10,079
by margaret cullen who i'm

376
00:16:10,079 --> 00:16:12,959
very grateful for is she here

377
00:16:12,959 --> 00:16:15,199
unfortunately i don't see her

378
00:16:15,199 --> 00:16:19,279
so first of all she said the main e4 and

379
00:16:19,279 --> 00:16:20,560
v6

380
00:16:20,560 --> 00:16:22,560
implies that there is encapsulation

381
00:16:22,560 --> 00:16:23,600
going on

382
00:16:23,600 --> 00:16:27,920
which is when we relate it to v4 via v6

383
00:16:27,920 --> 00:16:29,839
and she noticed that there is a big

384
00:16:29,839 --> 00:16:31,440
technical issue

385
00:16:31,440 --> 00:16:37,839
it breaks icmp next please

386
00:16:37,839 --> 00:16:40,959
okay so my

387
00:16:40,959 --> 00:16:43,360
understanding with icnp is that

388
00:16:43,360 --> 00:16:46,320
initially it was a separate

389
00:16:46,320 --> 00:16:49,519
protocol from ip that icmp will use for

390
00:16:49,519 --> 00:16:51,040
debugging networks

391
00:16:51,040 --> 00:16:54,079
for fault isolation uh it was not

392
00:16:54,079 --> 00:16:56,160
required by the protocols themselves

393
00:16:56,160 --> 00:16:57,920
and then something happened people

394
00:16:57,920 --> 00:16:59,199
decided that

395
00:16:59,199 --> 00:17:01,279
network layer fragmentation is a bad

396
00:17:01,279 --> 00:17:02,480
idea

397
00:17:02,480 --> 00:17:05,599
and they started using icmp packet to

398
00:17:05,599 --> 00:17:06,559
bid messages

399
00:17:06,559 --> 00:17:07,839
they're called something different in

400
00:17:07,839 --> 00:17:09,919
ipv4 in ipv4 they're

401
00:17:09,919 --> 00:17:12,400
called fragmentation needed messages

402
00:17:12,400 --> 00:17:13,760
from the network

403
00:17:13,760 --> 00:17:17,119
is part of tcp itself

404
00:17:17,119 --> 00:17:20,319
so what happens here on this picture i

405
00:17:20,319 --> 00:17:21,839
have

406
00:17:21,839 --> 00:17:24,640
a end host on the left and then host on

407
00:17:24,640 --> 00:17:25,359
the right

408
00:17:25,359 --> 00:17:28,000
and the end host on the left is sending

409
00:17:28,000 --> 00:17:29,120
data to them

410
00:17:29,120 --> 00:17:31,760
host on the right okay those are the big

411
00:17:31,760 --> 00:17:33,679
packets labeled data

412
00:17:33,679 --> 00:17:35,039
and at the same time there is a

413
00:17:35,039 --> 00:17:37,520
different path that goes from the host

414
00:17:37,520 --> 00:17:39,840
on the right to the host on the left

415
00:17:39,840 --> 00:17:43,679
that sends x okay and these two paths

416
00:17:43,679 --> 00:17:46,720
are essential if either of those two

417
00:17:46,720 --> 00:17:49,039
paths breaks your tcp connection

418
00:17:49,039 --> 00:17:52,400
is going to break what um

419
00:17:52,400 --> 00:17:55,520
pmg discovery does is that it creates

420
00:17:55,520 --> 00:17:58,640
a third path in the network that's the

421
00:17:58,640 --> 00:18:00,960
path that i've labeled icmp with the

422
00:18:00,960 --> 00:18:02,720
small red packets

423
00:18:02,720 --> 00:18:05,760
and this path doesn't share fate with

424
00:18:05,760 --> 00:18:06,559
the others

425
00:18:06,559 --> 00:18:09,919
so if the data path breaks your tcp

426
00:18:09,919 --> 00:18:10,720
connection

427
00:18:10,720 --> 00:18:13,760
breaks as expected if ack

428
00:18:13,760 --> 00:18:16,400
path breaks you don't get any ex so your

429
00:18:16,400 --> 00:18:18,559
tcp connection is going to time out

430
00:18:18,559 --> 00:18:21,120
on the other hand if the icmp pass

431
00:18:21,120 --> 00:18:22,720
breaks and there is no reason why it

432
00:18:22,720 --> 00:18:24,559
should coincide with either of the two

433
00:18:24,559 --> 00:18:26,000
other paths

434
00:18:26,000 --> 00:18:30,000
then the icmp fragmentation required

435
00:18:30,000 --> 00:18:30,880
packets

436
00:18:30,880 --> 00:18:34,160
are going to fail to reach the sending

437
00:18:34,160 --> 00:18:34,880
host

438
00:18:34,880 --> 00:18:37,039
and you're going to have mysterious

439
00:18:37,039 --> 00:18:38,880
failures where some things work

440
00:18:38,880 --> 00:18:41,520
and then get stuck so the problem here

441
00:18:41,520 --> 00:18:43,679
is that you have no fate sharing

442
00:18:43,679 --> 00:18:46,960
between the data between on the one hand

443
00:18:46,960 --> 00:18:48,400
the date and act pass

444
00:18:48,400 --> 00:18:51,280
and on the other hand the icmp path so

445
00:18:51,280 --> 00:18:52,640
this protocol breaks

446
00:18:52,640 --> 00:18:56,080
the main properties of

447
00:18:56,080 --> 00:18:58,640
it breaks the main properties of the

448
00:18:58,640 --> 00:19:01,520
end-to-end principle

449
00:19:04,480 --> 00:19:08,320
so okay i've already said that

450
00:19:08,320 --> 00:19:12,000
next please okay

451
00:19:12,000 --> 00:19:15,520
so what is the problem well with

452
00:19:15,520 --> 00:19:19,440
v4 via v6 we've broken the third path

453
00:19:19,440 --> 00:19:21,280
so the third pass starts at the router

454
00:19:21,280 --> 00:19:22,880
that is inside the network

455
00:19:22,880 --> 00:19:25,520
and was referred via v6 this router no

456
00:19:25,520 --> 00:19:27,520
longer has an ipv4 address

457
00:19:27,520 --> 00:19:30,000
and an ipv4 address is required in order

458
00:19:30,000 --> 00:19:30,720
to send

459
00:19:30,720 --> 00:19:33,280
an icmp packet so i've given that quite

460
00:19:33,280 --> 00:19:35,760
a bit of thought over the last months

461
00:19:35,760 --> 00:19:38,960
so possible solutions include one

462
00:19:38,960 --> 00:19:41,200
requiring that every router have an ipv4

463
00:19:41,200 --> 00:19:42,640
address

464
00:19:42,640 --> 00:19:44,880
two cheating by having a single ipv4

465
00:19:44,880 --> 00:19:46,000
address for all

466
00:19:46,000 --> 00:19:49,120
routers defining the way to say i need

467
00:19:49,120 --> 00:19:53,039
to send icmpv4 without ipv4 addresses

468
00:19:53,039 --> 00:19:54,880
or do the right thing and give up on

469
00:19:54,880 --> 00:19:58,160
icmp next please

470
00:19:59,760 --> 00:20:02,000
so solution one put the liking for

471
00:20:02,000 --> 00:20:04,240
address on each router

472
00:20:04,240 --> 00:20:08,159
so the address need not be assigned

473
00:20:08,159 --> 00:20:10,320
to every single interface you just need

474
00:20:10,320 --> 00:20:13,280
one ipv4 address to send your icmp

475
00:20:13,280 --> 00:20:16,000
that's what the weak host model says is

476
00:20:16,000 --> 00:20:17,760
that you can borrow an address

477
00:20:17,760 --> 00:20:19,760
so in practice there are two ways of

478
00:20:19,760 --> 00:20:20,960
configuring that

479
00:20:20,960 --> 00:20:22,880
there's the cisco style address where

480
00:20:22,880 --> 00:20:23,490
you put the

481
00:20:23,490 --> 00:20:24,559
[Music]

482
00:20:24,559 --> 00:20:27,120
address on the logback interface and the

483
00:20:27,120 --> 00:20:28,720
linux file configuration

484
00:20:28,720 --> 00:20:32,080
in which you put the address on any one

485
00:20:32,080 --> 00:20:33,440
of your interfaces

486
00:20:33,440 --> 00:20:35,520
and when we want to send an icmp packet

487
00:20:35,520 --> 00:20:37,440
you borrow the address from another

488
00:20:37,440 --> 00:20:38,799
interface

489
00:20:38,799 --> 00:20:42,720
so i feel that doing that sort of misses

490
00:20:42,720 --> 00:20:44,640
the point of v4 via b6

491
00:20:44,640 --> 00:20:46,799
because suddenly you require manual

492
00:20:46,799 --> 00:20:48,880
operator configuration you cannot just

493
00:20:48,880 --> 00:20:50,320
build all of your routers

494
00:20:50,320 --> 00:20:52,640
configure them with ipv6 put them in

495
00:20:52,640 --> 00:20:54,880
your network and have everything work

496
00:20:54,880 --> 00:20:56,640
it's still less bad than you would have

497
00:20:56,640 --> 00:20:58,240
otherwise because you have only one

498
00:20:58,240 --> 00:20:59,360
address per router and

499
00:20:59,360 --> 00:21:02,799
one address per interface so

500
00:21:02,799 --> 00:21:05,120
dormant has suggested that berman says

501
00:21:05,120 --> 00:21:06,960
that he's not sure that he's the one who

502
00:21:06,960 --> 00:21:08,960
suggested it originally so i'm giving

503
00:21:08,960 --> 00:21:12,240
credit to donald here that this ipv4

504
00:21:12,240 --> 00:21:14,320
address could be drawn randomly

505
00:21:14,320 --> 00:21:16,400
that you can just auto generate let's

506
00:21:16,400 --> 00:21:18,880
use the zero count procedures

507
00:21:18,880 --> 00:21:22,799
um to do that perhaps i don't know

508
00:21:22,799 --> 00:21:27,679
next slide please okay david

509
00:21:28,799 --> 00:21:32,159
uh just on the xeroconf addresses

510
00:21:32,159 --> 00:21:34,960
uh i think you're referring to i forget

511
00:21:34,960 --> 00:21:36,480
the rfc number for

512
00:21:36,480 --> 00:21:40,240
ipv4 link local the

513
00:21:40,240 --> 00:21:42,080
oh wait i was gonna say those aren't

514
00:21:42,080 --> 00:21:43,280
routable

515
00:21:43,280 --> 00:21:45,360
multiple hops but as a source address

516
00:21:45,360 --> 00:21:46,960
they might be i

517
00:21:46,960 --> 00:21:48,559
i have to go double check that because

518
00:21:48,559 --> 00:21:49,679
you definitely can't use it as a

519
00:21:49,679 --> 00:21:51,520
destination across routers but force

520
00:21:51,520 --> 00:21:54,159
might be okay

521
00:21:54,159 --> 00:21:57,760
anyway you could use the same procedure

522
00:21:57,760 --> 00:22:00,799
with a different prefix

523
00:22:01,360 --> 00:22:06,479
you could use 192 168 whatever

524
00:22:17,280 --> 00:22:19,440
yeah i'll i'll double check and i can

525
00:22:19,440 --> 00:22:21,039
always ask stewart who wrote that

526
00:22:21,039 --> 00:22:22,720
all right uh i think they're okay to

527
00:22:22,720 --> 00:22:24,000
source yeah i think they're okay with

528
00:22:24,000 --> 00:22:27,840
source addresses as i don't know

529
00:22:32,320 --> 00:22:36,000
okay so

530
00:22:36,559 --> 00:22:39,600
am i saturated is my audio wrong

531
00:22:39,600 --> 00:22:43,360
sorry for that is my audio better now

532
00:22:43,360 --> 00:22:46,880
yes yeah okay um

533
00:22:46,880 --> 00:22:50,080
okay so the second solution and i don't

534
00:22:50,080 --> 00:22:52,159
remember whether it was me or david who

535
00:22:52,159 --> 00:22:53,520
suggested that

536
00:22:53,520 --> 00:22:56,799
is to do the same thing but use just one

537
00:22:56,799 --> 00:22:59,760
address so pick your favorite address

538
00:22:59,760 --> 00:23:01,919
say

539
00:23:02,360 --> 00:23:04,240
10.42.42.42

540
00:23:04,240 --> 00:23:06,559
and put it on the loopback interface of

541
00:23:06,559 --> 00:23:08,960
all routers

542
00:23:08,960 --> 00:23:11,679
this sounds horrible but actually the

543
00:23:11,679 --> 00:23:14,240
address is only used as the source

544
00:23:14,240 --> 00:23:17,360
of icmp packets so either you have

545
00:23:17,360 --> 00:23:18,880
special handling in the os

546
00:23:18,880 --> 00:23:22,960
or you firewall it away and you're only

547
00:23:22,960 --> 00:23:24,799
allowing it as the source address of

548
00:23:24,799 --> 00:23:26,240
icmp packets

549
00:23:26,240 --> 00:23:27,760
so suddenly you have no per router

550
00:23:27,760 --> 00:23:29,760
configuration you have just the static

551
00:23:29,760 --> 00:23:30,799
configuration

552
00:23:30,799 --> 00:23:34,960
of the one ipv4 address used for icmp

553
00:23:34,960 --> 00:23:37,440
suddenly your icmp when you do a trace

554
00:23:37,440 --> 00:23:39,919
route all the routers have the same ipv4

555
00:23:39,919 --> 00:23:40,720
address

556
00:23:40,720 --> 00:23:44,640
so debugging is made more difficult

557
00:23:44,640 --> 00:23:46,880
okay we have no experience i have no

558
00:23:46,880 --> 00:23:48,480
experience with doing that so it's not

559
00:23:48,480 --> 00:23:50,960
clear to me whether this fake address

560
00:23:50,960 --> 00:23:55,360
should be reserved okay as is suggested

561
00:23:55,360 --> 00:23:58,480
by uh d who's d

562
00:23:58,480 --> 00:24:02,000
um that's you okay as suggested by

563
00:24:02,000 --> 00:24:02,880
donald for

564
00:24:02,880 --> 00:24:06,840
the dummy ipv4 address in rfc

565
00:24:06,840 --> 00:24:09,360
7600 which i haven't read yet it's a big

566
00:24:09,360 --> 00:24:10,799
rfc

567
00:24:10,799 --> 00:24:15,279
um and it's a shared address

568
00:24:15,279 --> 00:24:17,279
now shared addresses are used in two

569
00:24:17,279 --> 00:24:20,240
cases usually reusing ipv4 addresses

570
00:24:20,240 --> 00:24:23,520
when using that or for using anycast

571
00:24:23,520 --> 00:24:25,760
but this is neither of the two we're not

572
00:24:25,760 --> 00:24:26,640
doing that

573
00:24:26,640 --> 00:24:29,200
we're not using any anycast because

574
00:24:29,200 --> 00:24:32,080
we're using it as a source address i

575
00:24:32,080 --> 00:24:33,679
don't know how much experience there is

576
00:24:33,679 --> 00:24:34,960
with this kind of things

577
00:24:34,960 --> 00:24:37,520
next please

578
00:24:38,159 --> 00:24:40,960
okay so the other solution would be to

579
00:24:40,960 --> 00:24:42,480
define an icmp

580
00:24:42,480 --> 00:24:46,400
format of icmpb4 via v6

581
00:24:46,400 --> 00:24:48,960
that allows sending an icmp v4 packet

582
00:24:48,960 --> 00:24:51,120
without having an ipv4 address

583
00:24:51,120 --> 00:24:53,520
i feel that it compounds the problem

584
00:24:53,520 --> 00:24:55,200
that i outlined earlier this

585
00:24:55,200 --> 00:24:58,000
third part problem that the lack of fate

586
00:24:58,000 --> 00:24:58,799
sharing

587
00:24:58,799 --> 00:25:00,559
here is going to be even worse because

588
00:25:00,559 --> 00:25:03,200
you're going to be mixing ipv4 and ipv6

589
00:25:03,200 --> 00:25:04,960
and anyway i feel that it's out of scope

590
00:25:04,960 --> 00:25:06,240
for this working group

591
00:25:06,240 --> 00:25:09,679
next please and finally there is what i

592
00:25:09,679 --> 00:25:11,279
consider as being the right

593
00:25:11,279 --> 00:25:15,120
solution is that icmpv4

594
00:25:15,120 --> 00:25:18,240
icmp should not be used as part of the

595
00:25:18,240 --> 00:25:18,880
protocol

596
00:25:18,880 --> 00:25:22,400
icmp should be reserved as a debugging

597
00:25:22,400 --> 00:25:24,880
and fault isolation protocol and tcp

598
00:25:24,880 --> 00:25:26,799
should not be relying for it

599
00:25:26,799 --> 00:25:29,919
so there are some solutions that use

600
00:25:29,919 --> 00:25:32,080
that for example there is an rfc called

601
00:25:32,080 --> 00:25:35,120
packetization layer path mtu discovery

602
00:25:35,120 --> 00:25:37,279
which uses implicit signals from the

603
00:25:37,279 --> 00:25:38,480
network ex

604
00:25:38,480 --> 00:25:41,360
instead of the explicit icmp signals in

605
00:25:41,360 --> 00:25:43,600
order to do pmtu discovery

606
00:25:43,600 --> 00:25:45,600
i would prefer something more explicit

607
00:25:45,600 --> 00:25:46,960
perhaps something

608
00:25:46,960 --> 00:25:49,760
that is inspired by ecn that does

609
00:25:49,760 --> 00:25:51,120
explicit signaling

610
00:25:51,120 --> 00:25:53,279
while following the data path and

611
00:25:53,279 --> 00:25:54,640
avoiding introducing

612
00:25:54,640 --> 00:25:57,120
a third path so i think that's an

613
00:25:57,120 --> 00:25:58,080
interesting

614
00:25:58,080 --> 00:26:00,880
direction for research but it seems to

615
00:26:00,880 --> 00:26:02,159
me like it's out of scope

616
00:26:02,159 --> 00:26:06,000
for this working group next please

617
00:26:06,320 --> 00:26:08,320
so i've been thinking about what to put

618
00:26:08,320 --> 00:26:10,720
in the draft and what

619
00:26:10,720 --> 00:26:14,799
i'm tempted to do right now

620
00:26:14,799 --> 00:26:18,400
is to say that every ipv4 router

621
00:26:18,400 --> 00:26:22,400
must have at least one ipv4 address

622
00:26:22,400 --> 00:26:24,799
because giving up on icmp v4 does not

623
00:26:24,799 --> 00:26:25,760
seem like a good

624
00:26:25,760 --> 00:26:28,159
like a reasonable option in the long in

625
00:26:28,159 --> 00:26:30,159
the short term

626
00:26:30,159 --> 00:26:32,720
and saying that sharing a single address

627
00:26:32,720 --> 00:26:33,919
between routers

628
00:26:33,919 --> 00:26:36,799
is something that we'd really like to do

629
00:26:36,799 --> 00:26:37,279
but

630
00:26:37,279 --> 00:26:39,679
we don't have enough enough experience

631
00:26:39,679 --> 00:26:40,720
to recommend it

632
00:26:40,720 --> 00:26:42,880
and use you know some weasel word and

633
00:26:42,880 --> 00:26:45,200
like more experimentation is needed

634
00:26:45,200 --> 00:26:47,200
i feel that's okay because we're aiming

635
00:26:47,200 --> 00:26:49,520
this for an experimental rfc

636
00:26:49,520 --> 00:26:52,880
and as to icmp v4 via v6 or

637
00:26:52,880 --> 00:26:55,840
to avoiding icmpl together only mention

638
00:26:55,840 --> 00:26:57,200
it is passing

639
00:26:57,200 --> 00:26:59,600
in part of the discussion and i would

640
00:26:59,600 --> 00:27:01,279
like to hear the opinions of the working

641
00:27:01,279 --> 00:27:04,159
group on this subject

642
00:27:05,440 --> 00:27:07,840
dude

643
00:27:09,039 --> 00:27:13,679
so i i'm gonna propose something that

644
00:27:13,679 --> 00:27:14,880
might be heresy

645
00:27:14,880 --> 00:27:19,440
so you know feel free to yell it um

646
00:27:19,440 --> 00:27:23,279
it is possible to send an ipv4 packet

647
00:27:23,279 --> 00:27:26,640
without having an ipv4 address in theory

648
00:27:26,640 --> 00:27:28,480
you're not supposed to do that

649
00:27:28,480 --> 00:27:30,399
um but at the end of the day you're just

650
00:27:30,399 --> 00:27:32,000
sending bits on a wire

651
00:27:32,000 --> 00:27:35,440
uh so what i'm saying is um

652
00:27:35,440 --> 00:27:38,960
what i might my proposal i guess is

653
00:27:38,960 --> 00:27:43,200
these routers should support icmp v4

654
00:27:43,200 --> 00:27:45,520
and should be sending these pack sorry

655
00:27:45,520 --> 00:27:47,520
must support ipv4 it must send these

656
00:27:47,520 --> 00:27:49,360
packets for things to work

657
00:27:49,360 --> 00:27:53,440
um saying must have an address

658
00:27:53,440 --> 00:27:56,080
like if all they have special case codes

659
00:27:56,080 --> 00:27:57,520
to send out this icd

660
00:27:57,520 --> 00:28:00,159
icmpb4 packet where they use the dummy

661
00:28:00,159 --> 00:28:02,320
address as the source

662
00:28:02,320 --> 00:28:04,799
they don't technically have the address

663
00:28:04,799 --> 00:28:06,399
on the interface

664
00:28:06,399 --> 00:28:09,919
um i guess that i'm kind of totally into

665
00:28:09,919 --> 00:28:10,880
semantics here

666
00:28:10,880 --> 00:28:14,399
uh but i just wanted to ask if there was

667
00:28:14,399 --> 00:28:17,120
a decision

668
00:28:17,120 --> 00:28:19,600
perhaps we should describe the behavior

669
00:28:19,600 --> 00:28:21,120
rather than thinking about the data

670
00:28:21,120 --> 00:28:22,559
structures

671
00:28:22,559 --> 00:28:24,480
so i'm thinking about assigning the

672
00:28:24,480 --> 00:28:25,679
address

673
00:28:25,679 --> 00:28:28,000
but the requirement is actually that

674
00:28:28,000 --> 00:28:30,000
every ipv4 router must be

675
00:28:30,000 --> 00:28:33,120
able to send out an icmp packet and it

676
00:28:33,120 --> 00:28:34,559
needs something to put in the source

677
00:28:34,559 --> 00:28:35,120
field

678
00:28:35,120 --> 00:28:38,559
of that packet yeah and that way i

679
00:28:38,559 --> 00:28:39,919
totally agree with you that more

680
00:28:39,919 --> 00:28:42,000
experimentation is needed to figure out

681
00:28:42,000 --> 00:28:45,120
what goes in there um but saying like

682
00:28:45,120 --> 00:28:46,960
you need the ability to send it

683
00:28:46,960 --> 00:28:49,120
with something in there sounds like good

684
00:28:49,120 --> 00:28:58,080
enough for this document in my opinion

685
00:28:58,080 --> 00:29:01,840
okay barbara

686
00:29:10,559 --> 00:29:12,640
you need to also unmute the microphone

687
00:29:12,640 --> 00:29:15,919
barbara you just opened the camera

688
00:29:19,600 --> 00:29:21,760
yeah i just wanted to mention that the

689
00:29:21,760 --> 00:29:24,000
rfc 3927

690
00:29:24,000 --> 00:29:27,919
um the dynamic configured um auto ip

691
00:29:27,919 --> 00:29:30,480
addresses those are those 169 addresses

692
00:29:30,480 --> 00:29:31,840
those are pretty

693
00:29:31,840 --> 00:29:34,880
um well universally

694
00:29:34,880 --> 00:29:37,120
already supported in most operating

695
00:29:37,120 --> 00:29:38,640
systems well

696
00:29:38,640 --> 00:29:40,799
universal at most yeah um but i know

697
00:29:40,799 --> 00:29:41,679
it's in linux

698
00:29:41,679 --> 00:29:43,760
and i know it's in microsoft and i'm

699
00:29:43,760 --> 00:29:45,840
guessing it's probably in the apples

700
00:29:45,840 --> 00:29:48,880
so you know that should already be there

701
00:29:48,880 --> 00:29:55,840
and be easy to experiment with

702
00:29:55,919 --> 00:30:00,480
okay so i'd like to answer the comment

703
00:30:00,480 --> 00:30:01,520
of ross

704
00:30:01,520 --> 00:30:06,799
russ if you do if you do rpf

705
00:30:06,799 --> 00:30:09,919
checks you break babel you need to

706
00:30:09,919 --> 00:30:10,640
disable

707
00:30:10,640 --> 00:30:13,200
rpf babel does not guarantee symmetric

708
00:30:13,200 --> 00:30:14,799
routing

709
00:30:14,799 --> 00:30:16,720
and so with rpf you're going to run in

710
00:30:16,720 --> 00:30:23,840
trouble just for the data traffic

711
00:30:24,320 --> 00:30:26,240
okay well we can talk about this on the

712
00:30:26,240 --> 00:30:27,679
list and do experiments and things i

713
00:30:27,679 --> 00:30:28,799
think we need to

714
00:30:28,799 --> 00:30:30,720
move on to the next presentation by

715
00:30:30,720 --> 00:30:36,160
barbara so thanks very much tools

716
00:30:36,160 --> 00:30:39,349
[Music]

717
00:30:40,080 --> 00:30:42,320
oh then i guess i don't need to keep

718
00:30:42,320 --> 00:30:44,000
trying to mute myself

719
00:30:44,000 --> 00:30:51,840
i don't know that's true

720
00:30:53,360 --> 00:31:05,840
there you go

721
00:31:06,559 --> 00:31:09,519
you can go ahead barbara

722
00:31:12,720 --> 00:31:14,799
you seem to maybe you've been

723
00:31:14,799 --> 00:31:16,880
disconnected

724
00:31:16,880 --> 00:31:20,480
uh i'm back

725
00:31:20,480 --> 00:31:23,519
um i'm not gonna

726
00:31:23,519 --> 00:31:25,760
share my video because my laptop is

727
00:31:25,760 --> 00:31:27,200
underpowered and apparently that's

728
00:31:27,200 --> 00:31:28,480
causing me issues

729
00:31:28,480 --> 00:31:31,840
okay so yeah there's just one

730
00:31:31,840 --> 00:31:33,840
thing remaining with the information

731
00:31:33,840 --> 00:31:35,679
model that's still a discuss

732
00:31:35,679 --> 00:31:38,799
next slide thanks um

733
00:31:38,799 --> 00:31:41,440
and uh

734
00:31:42,720 --> 00:31:46,000
are you

735
00:31:46,000 --> 00:31:48,240
can you uh forward it to the next slide

736
00:31:48,240 --> 00:31:49,919
oh sorry

737
00:31:49,919 --> 00:31:53,360
sorry yeah no uh

738
00:31:53,360 --> 00:31:56,479
okay um

739
00:31:57,200 --> 00:32:00,640
okay so uh and i sent an email about

740
00:32:00,640 --> 00:32:01,039
this

741
00:32:01,039 --> 00:32:04,799
and thank you toki for his response that

742
00:32:04,799 --> 00:32:06,480
clarified things a little more as to the

743
00:32:06,480 --> 00:32:07,679
current state

744
00:32:07,679 --> 00:32:10,880
but there's still discussion about what

745
00:32:10,880 --> 00:32:11,600
sort

746
00:32:11,600 --> 00:32:14,799
of restrictions if any

747
00:32:14,799 --> 00:32:18,559
should be placed on the

748
00:32:18,559 --> 00:32:22,000
mac key values and you know this is one

749
00:32:22,000 --> 00:32:23,200
that we run

750
00:32:23,200 --> 00:32:26,399
round on twice

751
00:32:26,799 --> 00:32:29,679
and right now we've got this statement

752
00:32:29,679 --> 00:32:31,919
about

753
00:32:31,919 --> 00:32:35,200
being between zero and the block size of

754
00:32:35,200 --> 00:32:36,480
the underlying hash

755
00:32:36,480 --> 00:32:39,580
um and so

756
00:32:39,580 --> 00:32:40,720
[Music]

757
00:32:40,720 --> 00:32:44,559
let's move on to the next slide

758
00:32:45,039 --> 00:32:49,600
and so what uh ben katic was

759
00:32:49,600 --> 00:32:52,159
pointing out so i i mentioned to him

760
00:32:52,159 --> 00:32:53,679
some of the discussion about how you

761
00:32:53,679 --> 00:32:55,919
know ospf and rfc 20

762
00:32:55,919 --> 00:32:58,559
104 differed on how to calculate the

763
00:32:58,559 --> 00:33:00,159
cryptographic key from the long

764
00:33:00,159 --> 00:33:01,919
authentication key

765
00:33:01,919 --> 00:33:05,200
and what was considered long um

766
00:33:05,200 --> 00:33:07,919
but ben said that in fact you know we

767
00:33:07,919 --> 00:33:08,480
what

768
00:33:08,480 --> 00:33:10,480
the language we have won't solve it

769
00:33:10,480 --> 00:33:11,679
because i guess

770
00:33:11,679 --> 00:33:16,720
uh the block size is bigger than the

771
00:33:16,720 --> 00:33:20,320
l size and so e anyway

772
00:33:20,320 --> 00:33:24,000
um or maybe it's the other way around i

773
00:33:24,000 --> 00:33:25,600
get so confused

774
00:33:25,600 --> 00:33:29,360
and so that it won't work

775
00:33:29,360 --> 00:33:31,039
and there was also discussion about

776
00:33:31,039 --> 00:33:33,440
conversion of ascii input

777
00:33:33,440 --> 00:33:35,360
but i think we're fine on the ascii

778
00:33:35,360 --> 00:33:37,279
input

779
00:33:37,279 --> 00:33:41,200
so if we go to the next slide

780
00:33:44,399 --> 00:33:47,600
um i think we're fine with just sending

781
00:33:47,600 --> 00:33:48,640
the binary

782
00:33:48,640 --> 00:33:52,960
um and so that's not a problem um

783
00:33:52,960 --> 00:33:55,679
but i think it is maybe concerning that

784
00:33:55,679 --> 00:33:57,600
if

785
00:33:57,600 --> 00:34:00,159
the the requirement we have isn't going

786
00:34:00,159 --> 00:34:01,919
to avoid the problem

787
00:34:01,919 --> 00:34:05,120
that i think was envisioned then it's

788
00:34:05,120 --> 00:34:07,840
probably not the right requirement

789
00:34:07,840 --> 00:34:10,960
um and so i guess

790
00:34:10,960 --> 00:34:14,000
you know my question is what is the

791
00:34:14,000 --> 00:34:16,159
right requirement and i think we're fine

792
00:34:16,159 --> 00:34:18,079
actually on the blake

793
00:34:18,079 --> 00:34:21,440
um 2s with the 32 limit because blake

794
00:34:21,440 --> 00:34:24,639
very nicely didn't bother trying to

795
00:34:24,639 --> 00:34:28,159
create some weird algorithm

796
00:34:28,159 --> 00:34:30,719
for rehashing long things so that you

797
00:34:30,719 --> 00:34:31,599
end up with

798
00:34:31,599 --> 00:34:34,879
the right size cryptographic key

799
00:34:34,879 --> 00:34:37,520
and so you know for blake i think we're

800
00:34:37,520 --> 00:34:38,159
fine

801
00:34:38,159 --> 00:34:41,839
restricting it to the 32

802
00:34:41,839 --> 00:34:45,119
um octets but uh on the uh

803
00:34:45,119 --> 00:34:48,159
h max shaw 256

804
00:34:48,159 --> 00:34:51,440
i'm kind of curious what others think

805
00:34:51,440 --> 00:35:02,480
so let me open it up what do y'all think

806
00:35:02,480 --> 00:35:05,839
help me out here please

807
00:35:11,200 --> 00:35:13,759
it's a mess

808
00:35:14,800 --> 00:35:17,920
that's not helpful so

809
00:35:17,920 --> 00:35:21,359
the situation is that

810
00:35:21,359 --> 00:35:24,960
keys have the block size

811
00:35:24,960 --> 00:35:26,960
people are getting confused between the

812
00:35:26,960 --> 00:35:28,079
block size

813
00:35:28,079 --> 00:35:31,119
and the digest size so keys naturally if

814
00:35:31,119 --> 00:35:32,480
i'm getting it right i'm not a

815
00:35:32,480 --> 00:35:34,720
cryptographer i'm trying to summarize

816
00:35:34,720 --> 00:35:36,960
keys have the natural size of keys is

817
00:35:36,960 --> 00:35:38,240
the block size

818
00:35:38,240 --> 00:35:40,240
and there are two things that happen one

819
00:35:40,240 --> 00:35:41,520
is that

820
00:35:41,520 --> 00:35:43,359
people tend to confuse block size and

821
00:35:43,359 --> 00:35:44,880
digest size

822
00:35:44,880 --> 00:35:46,640
and the other thing that happens is that

823
00:35:46,640 --> 00:35:48,160
people tend to

824
00:35:48,160 --> 00:35:50,640
want the user-friendly feature of having

825
00:35:50,640 --> 00:35:51,599
arbitrary size

826
00:35:51,599 --> 00:35:54,160
keys and they develop ad-hoc hashing

827
00:35:54,160 --> 00:35:56,839
mechanisms

828
00:35:56,839 --> 00:35:59,839
right have i summarized the situation

829
00:35:59,839 --> 00:36:02,720
correctly barbara

830
00:36:03,040 --> 00:36:06,640
i don't know i'm also not an expert

831
00:36:06,640 --> 00:36:08,960
i mean

832
00:36:10,800 --> 00:36:12,880
he should understand these things so i

833
00:36:12,880 --> 00:36:15,839
can't imagine he's getting confused but

834
00:36:15,839 --> 00:36:19,760
yet so my opinion here

835
00:36:19,760 --> 00:36:25,440
is no hashing in the informational model

836
00:36:25,440 --> 00:36:28,000
have fixed size keys even if it's not

837
00:36:28,000 --> 00:36:29,200
user friendly

838
00:36:29,200 --> 00:36:31,680
and say the keys should be coming from

839
00:36:31,680 --> 00:36:33,760
something like pbkdf2

840
00:36:33,760 --> 00:36:36,320
or script or whatsoever there are not

841
00:36:36,320 --> 00:36:37,760
user readable

842
00:36:37,760 --> 00:36:39,599
entities there is no reason to make them

843
00:36:39,599 --> 00:36:42,560
arbitrary size

844
00:36:44,000 --> 00:36:45,599
so can this be the right size for the

845
00:36:45,599 --> 00:36:47,680
algorithm exactly

846
00:36:47,680 --> 00:36:50,000
and now we need to make it sure that was

847
00:36:50,000 --> 00:36:51,200
the bug we had

848
00:36:51,200 --> 00:36:54,960
in hmac we got it wrong antonio saved us

849
00:36:54,960 --> 00:36:57,680
in hmac we keep getting confused between

850
00:36:57,680 --> 00:36:59,839
we non-cryptographer people

851
00:36:59,839 --> 00:37:01,760
that keep getting confused between the

852
00:37:01,760 --> 00:37:04,160
block size and the digest size and we

853
00:37:04,160 --> 00:37:07,359
must make sure that we get it right

854
00:37:07,359 --> 00:37:09,920
so i think that i would get even more

855
00:37:09,920 --> 00:37:10,640
pushback

856
00:37:10,640 --> 00:37:13,839
you know given what ben has been saying

857
00:37:13,839 --> 00:37:16,560
um primarily from the perspective so

858
00:37:16,560 --> 00:37:17,920
personally i view this

859
00:37:17,920 --> 00:37:21,040
as a system you know that you know

860
00:37:21,040 --> 00:37:22,960
you've got the management system and

861
00:37:22,960 --> 00:37:24,560
you've got all these routers

862
00:37:24,560 --> 00:37:27,839
and the whole thing is a system

863
00:37:28,000 --> 00:37:31,040
i lost you all joe

864
00:37:31,200 --> 00:37:34,400
i lost you yeah

865
00:37:34,400 --> 00:37:36,400
she'll probably be back and i'm gonna

866
00:37:36,400 --> 00:37:38,720
automatically reconnect says she's

867
00:37:38,720 --> 00:37:42,000
shown us offline right now but okay wait

868
00:37:42,000 --> 00:37:44,640
wait a sec

869
00:37:47,119 --> 00:37:51,839
here we go no no no

870
00:38:02,839 --> 00:38:05,839
uh

871
00:38:11,760 --> 00:38:14,240
i try this again i'm guessing i got

872
00:38:14,240 --> 00:38:14,960
dropped

873
00:38:14,960 --> 00:38:20,320
and i nothing i said was heard

874
00:38:20,320 --> 00:38:22,400
uh you were rough for a while but you're

875
00:38:22,400 --> 00:38:23,920
back now and everything

876
00:38:23,920 --> 00:38:27,839
okay so um i

877
00:38:27,839 --> 00:38:30,079
i think that ben is going to have an

878
00:38:30,079 --> 00:38:32,160
even greater problem with what julius

879
00:38:32,160 --> 00:38:33,680
suggested

880
00:38:33,680 --> 00:38:36,720
um primarily because ben doesn't

881
00:38:36,720 --> 00:38:41,200
see this as a system

882
00:38:41,200 --> 00:38:45,280
that is you know the the management

883
00:38:45,280 --> 00:38:47,839
system and and all of these routers all

884
00:38:47,839 --> 00:38:48,400
together

885
00:38:48,400 --> 00:38:51,760
form in a system as a whole um he rather

886
00:38:51,760 --> 00:38:52,400
thinks of

887
00:38:52,400 --> 00:38:55,920
the implementation of the

888
00:38:55,920 --> 00:39:00,000
of the mac as being standalone somehow

889
00:39:00,000 --> 00:39:03,680
and that it needs to be uh

890
00:39:03,680 --> 00:39:06,400
self-sufficient or something um i'm

891
00:39:06,400 --> 00:39:08,160
putting words in his mouth but

892
00:39:08,160 --> 00:39:11,200
uh so he he thinks that nothing should

893
00:39:11,200 --> 00:39:11,360
be

894
00:39:11,360 --> 00:39:12,839
[Music]

895
00:39:12,839 --> 00:39:15,680
um processing things before it

896
00:39:15,680 --> 00:39:18,560
gets to there and that the the

897
00:39:18,560 --> 00:39:20,079
implementation of the mac

898
00:39:20,079 --> 00:39:22,000
should be responsible for doing

899
00:39:22,000 --> 00:39:24,560
everything um which i think is a really

900
00:39:24,560 --> 00:39:26,400
odd thing because i do this as an

901
00:39:26,400 --> 00:39:28,320
entire system and i don't care where in

902
00:39:28,320 --> 00:39:30,560
the system certain processing happens

903
00:39:30,560 --> 00:39:32,400
and i think you know julius has made

904
00:39:32,400 --> 00:39:34,000
good points as to why

905
00:39:34,000 --> 00:39:35,839
you want a lot of the processing to

906
00:39:35,839 --> 00:39:37,760
happen in a centralized place

907
00:39:37,760 --> 00:39:40,880
and then push out sort of the

908
00:39:40,880 --> 00:39:43,520
processed and what you're proposing is

909
00:39:43,520 --> 00:39:45,920
push out the actual cryptographic

910
00:39:45,920 --> 00:39:49,200
key to all of the endpoints

911
00:39:49,200 --> 00:39:50,800
that's actually what i've written in an

912
00:39:50,800 --> 00:39:52,720
rfc

913
00:39:52,720 --> 00:39:54,960
i'm not just proposing it i've actually

914
00:39:54,960 --> 00:39:56,720
now i can say that i've written it

915
00:39:56,720 --> 00:39:59,760
in rfc wait we tried so

916
00:39:59,760 --> 00:40:03,119
so i thought the that the uh the mac

917
00:40:03,119 --> 00:40:06,000
rfc the babble mac um didn't say

918
00:40:06,000 --> 00:40:07,200
anything

919
00:40:07,200 --> 00:40:10,800
yes it does in the security

920
00:40:10,800 --> 00:40:12,800
considerations part

921
00:40:12,800 --> 00:40:16,800
so here it is it's 8967

922
00:40:16,800 --> 00:40:20,160
you need to get used to the new numbers

923
00:40:20,160 --> 00:40:25,839
security considerations

924
00:40:27,690 --> 00:40:32,329
[Music]

925
00:40:34,800 --> 00:40:35,760
oh if i can just say anything for a

926
00:40:35,760 --> 00:40:37,920
second if you're doing an information

927
00:40:37,920 --> 00:40:39,040
model i don't see why the information

928
00:40:39,040 --> 00:40:41,119
model can't just say this is the

929
00:40:41,119 --> 00:40:45,119
binary key i mean you know well

930
00:40:45,119 --> 00:40:48,319
it's the recommended input okay eight

931
00:40:48,319 --> 00:40:48,960
nine six

932
00:40:48,960 --> 00:40:51,280
seven i cannot find it right now but we

933
00:40:51,280 --> 00:40:52,560
say at one point

934
00:40:52,560 --> 00:40:55,040
that the recommended input is a random

935
00:40:55,040 --> 00:40:55,680
key

936
00:40:55,680 --> 00:40:58,560
and that if user-readable passphrases

937
00:40:58,560 --> 00:40:59,760
are necessary

938
00:40:59,760 --> 00:41:01,839
they should be processed on a central

939
00:41:01,839 --> 00:41:04,400
host and only the resulting hashed keys

940
00:41:04,400 --> 00:41:06,960
should be distributed

941
00:41:06,960 --> 00:41:10,480
okay so i would feel it's reasonable for

942
00:41:10,480 --> 00:41:12,480
the information model to follow the

943
00:41:12,480 --> 00:41:15,760
recommendations of eight nine six seven

944
00:41:15,760 --> 00:41:17,440
that seems reasonable this is the

945
00:41:17,440 --> 00:41:19,040
approved standard

946
00:41:19,040 --> 00:41:19,950
track rfc

947
00:41:19,950 --> 00:41:25,040
[Laughter]

948
00:41:25,040 --> 00:41:27,520
okay uh and it says in that case only

949
00:41:27,520 --> 00:41:29,359
the derived key should be communicated

950
00:41:29,359 --> 00:41:31,200
to the routers the original path trace

951
00:41:31,200 --> 00:41:32,480
itself should be

952
00:41:32,480 --> 00:41:35,040
kept on the host used to perform the key

953
00:41:35,040 --> 00:41:35,839
generation

954
00:41:35,839 --> 00:41:38,240
eg and administrator secure laptop

955
00:41:38,240 --> 00:41:39,200
computer

956
00:41:39,200 --> 00:41:41,599
so that's section seven the one two

957
00:41:41,599 --> 00:41:43,200
three four

958
00:41:43,200 --> 00:41:46,560
fifth paragraph of the security conver

959
00:41:46,560 --> 00:41:49,839
section seven

960
00:41:51,920 --> 00:41:53,240
paragraph five

961
00:41:53,240 --> 00:41:56,529
[Music]

962
00:42:00,839 --> 00:42:02,480
oh

963
00:42:02,480 --> 00:42:04,400
barbara are you okay with so it's trying

964
00:42:04,400 --> 00:42:05,359
to go with that and we'll see what

965
00:42:05,359 --> 00:42:06,720
happens

966
00:42:06,720 --> 00:42:10,480
well let me let me ask um so we've also

967
00:42:10,480 --> 00:42:13,599
been using uh the information

968
00:42:13,599 --> 00:42:16,800
model as a guide for

969
00:42:16,800 --> 00:42:20,560
user interface input

970
00:42:20,560 --> 00:42:23,760
which would not be centralized

971
00:42:23,760 --> 00:42:25,360
so do we want to

972
00:42:25,360 --> 00:42:27,280
[Music]

973
00:42:27,280 --> 00:42:30,319
well i would expect the user to

974
00:42:30,319 --> 00:42:33,920
generate a key and then to do a copy

975
00:42:33,920 --> 00:42:34,400
paste

976
00:42:34,400 --> 00:42:37,760
of the key into a web interface

977
00:42:37,760 --> 00:42:44,319
for example

978
00:42:44,319 --> 00:42:45,839
and which paragraph did you say by the

979
00:42:45,839 --> 00:42:47,599
way i finally brought it up five it's in

980
00:42:47,599 --> 00:42:49,520
the chat

981
00:42:49,520 --> 00:42:53,599
oh section seven fifth paragraph

982
00:42:53,599 --> 00:42:57,280
okay um yeah i would be fine with that

983
00:42:57,280 --> 00:42:59,280
now i am going to have to go do battle

984
00:42:59,280 --> 00:43:00,560
with ben again

985
00:43:00,560 --> 00:43:04,880
but i think uh it's an easier battle for

986
00:43:04,880 --> 00:43:05,359
me

987
00:43:05,359 --> 00:43:08,720
because i you know

988
00:43:08,720 --> 00:43:13,200
my expertise is

989
00:43:13,200 --> 00:43:16,640
sorry to interrupt i pulled up the uh

990
00:43:16,640 --> 00:43:20,560
isg evaluation record here and

991
00:43:20,560 --> 00:43:23,040
so first off ben has already removed his

992
00:43:23,040 --> 00:43:24,319
discuss

993
00:43:24,319 --> 00:43:27,359
so no need to battle we are

994
00:43:27,359 --> 00:43:28,960
in the clear like the document has

995
00:43:28,960 --> 00:43:31,040
enough positions to pass

996
00:43:31,040 --> 00:43:34,079
second thing ben said

997
00:43:34,079 --> 00:43:37,760
uh all he wants is he finds it weird

998
00:43:37,760 --> 00:43:39,280
that the information model has a

999
00:43:39,280 --> 00:43:41,760
restriction and he'd be happy with the

1000
00:43:41,760 --> 00:43:43,680
information model just referencing the

1001
00:43:43,680 --> 00:43:45,280
other document which is exactly what we

1002
00:43:45,280 --> 00:43:46,079
were saying here

1003
00:43:46,079 --> 00:43:48,560
how about we just do that and we're done

1004
00:43:48,560 --> 00:43:51,359
oh there's no battle yeah

1005
00:43:51,359 --> 00:43:54,000
right um martin wants to speak so why

1006
00:43:54,000 --> 00:43:55,760
don't we go with martin here

1007
00:43:55,760 --> 00:43:59,040
rad yeah uh just a clarification about

1008
00:43:59,040 --> 00:44:02,160
the status of the draft in the iesg

1009
00:44:02,160 --> 00:44:05,520
um that document uh

1010
00:44:05,520 --> 00:44:08,079
the the number of ballots that document

1011
00:44:08,079 --> 00:44:10,240
has

1012
00:44:10,240 --> 00:44:13,839
will drop below the bar in

1013
00:44:13,839 --> 00:44:17,839
at the end of the week because of ads

1014
00:44:17,839 --> 00:44:21,040
living so what i

1015
00:44:21,040 --> 00:44:23,680
what i wanted to do is to get that

1016
00:44:23,680 --> 00:44:25,440
document through

1017
00:44:25,440 --> 00:44:28,880
before the ietf

1018
00:44:28,880 --> 00:44:32,880
and in order to help that

1019
00:44:33,920 --> 00:44:37,839
ben has removed his uh his discus

1020
00:44:37,839 --> 00:44:41,359
so that i can approve but

1021
00:44:41,359 --> 00:44:43,599
realistically the disgust is not

1022
00:44:43,599 --> 00:44:45,760
completely

1023
00:44:45,760 --> 00:44:48,240
addressed

1024
00:44:48,800 --> 00:44:52,160
so i could improve uh and make sure the

1025
00:44:52,160 --> 00:44:53,839
document goes through

1026
00:44:53,839 --> 00:44:57,599
but uh the problem is not fully resolved

1027
00:44:57,599 --> 00:45:01,040
or we wait uh for the

1028
00:45:01,040 --> 00:45:04,240
for the problem to be fully resolved but

1029
00:45:04,240 --> 00:45:05,839
that will likely bring us

1030
00:45:05,839 --> 00:45:09,960
after the ietf and i will need to

1031
00:45:09,960 --> 00:45:11,440
[Music]

1032
00:45:11,440 --> 00:45:14,880
at least run after a couple of new ages

1033
00:45:14,880 --> 00:45:15,920
to get

1034
00:45:15,920 --> 00:45:19,920
the number of required ballots

1035
00:45:19,920 --> 00:45:23,200
so martin would you be open and i think

1036
00:45:23,200 --> 00:45:24,480
that's what you're saying

1037
00:45:24,480 --> 00:45:26,960
but would you be open to approving the

1038
00:45:26,960 --> 00:45:27,920
document

1039
00:45:27,920 --> 00:45:32,560
today if barbara promises to address

1040
00:45:32,560 --> 00:45:33,119
this

1041
00:45:33,119 --> 00:45:35,599
uh in the coming week that way we really

1042
00:45:35,599 --> 00:45:37,599
reduce the process overhead i think that

1043
00:45:37,599 --> 00:45:38,319
would really

1044
00:45:38,319 --> 00:45:40,079
be worth in terms of saving everyone's

1045
00:45:40,079 --> 00:45:41,440
time

1046
00:45:41,440 --> 00:45:46,000
yeah so i had made the promise to ben

1047
00:45:46,000 --> 00:45:49,599
that i wouldn't approve before

1048
00:45:49,599 --> 00:45:51,680
the problem the discuss is effectively

1049
00:45:51,680 --> 00:45:52,640
resolved

1050
00:45:52,640 --> 00:45:57,119
so i would have to break my promise but

1051
00:45:57,119 --> 00:45:59,839
i can i can have a chat with ben a rapid

1052
00:45:59,839 --> 00:46:00,400
chat

1053
00:46:00,400 --> 00:46:03,599
to make sure that me approving doesn't

1054
00:46:03,599 --> 00:46:05,200
hurt his feelings

1055
00:46:05,200 --> 00:46:07,760
and he's okay to continue the discussion

1056
00:46:07,760 --> 00:46:10,720
even if the document is approved

1057
00:46:10,720 --> 00:46:15,839
or i have another

1058
00:46:16,640 --> 00:46:18,720
i was just gonna say yeah it it's my

1059
00:46:18,720 --> 00:46:20,640
understanding that i needed to get this

1060
00:46:20,640 --> 00:46:23,359
um you know ironed out with ben and so

1061
00:46:23,359 --> 00:46:26,000
that's my intention

1062
00:46:26,000 --> 00:46:28,560
so okay another proposal could be

1063
00:46:28,560 --> 00:46:30,240
barbara you just remove that

1064
00:46:30,240 --> 00:46:31,119
recommendation

1065
00:46:31,119 --> 00:46:32,800
because removing text is always easier

1066
00:46:32,800 --> 00:46:34,640
than adding text like you do that today

1067
00:46:34,640 --> 00:46:37,599
you submit a new version of the draft

1068
00:46:37,599 --> 00:46:40,160
and then tomorrow martin can approve it

1069
00:46:40,160 --> 00:46:40,800
and that way

1070
00:46:40,800 --> 00:46:43,040
ben's happy martin's happy the working

1071
00:46:43,040 --> 00:46:44,400
group is happy

1072
00:46:44,400 --> 00:46:48,480
we're all happy we can have more drinks

1073
00:46:49,359 --> 00:46:51,200
how does that sound i think i think

1074
00:46:51,200 --> 00:46:52,480
that's problematic

1075
00:46:52,480 --> 00:46:55,599
um i think that

1076
00:46:55,599 --> 00:46:57,119
i there there needs to be some

1077
00:46:57,119 --> 00:46:58,800
restriction on the input

1078
00:46:58,800 --> 00:47:02,560
because it it's too loosey-goosey

1079
00:47:02,560 --> 00:47:04,960
as it currently is and that's going to

1080
00:47:04,960 --> 00:47:05,920
lead to um

1081
00:47:05,920 --> 00:47:11,839
configuration issues and problems

1082
00:47:17,760 --> 00:47:21,200
can you summarize what ben wants

1083
00:47:22,319 --> 00:47:25,359
and let's see if it's acceptable

1084
00:47:25,359 --> 00:47:27,200
let's try to be productive here and see

1085
00:47:27,200 --> 00:47:29,040
whether we cringe or whether we

1086
00:47:29,040 --> 00:47:38,000
accept if whether we find it acceptable

1087
00:47:38,000 --> 00:47:41,920
i i just comment into the chat in case

1088
00:47:41,920 --> 00:47:44,559
that's helpful

1089
00:47:46,559 --> 00:47:49,440
okay so i think my audio is reconnected

1090
00:47:49,440 --> 00:47:50,839
again

1091
00:47:50,839 --> 00:47:53,440
yes so i

1092
00:47:53,440 --> 00:47:56,240
i'm i'll iron this out with ben today

1093
00:47:56,240 --> 00:47:57,440
i'll try and

1094
00:47:57,440 --> 00:47:59,599
uh up you know now that i've got more

1095
00:47:59,599 --> 00:48:01,920
information and better information

1096
00:48:01,920 --> 00:48:04,480
um i think i have a path forward that i

1097
00:48:04,480 --> 00:48:06,400
can work with ben because he also said

1098
00:48:06,400 --> 00:48:08,079
that some of what he wanted was if you

1099
00:48:08,079 --> 00:48:09,760
have justification for the

1100
00:48:09,760 --> 00:48:12,000
recommendations you can provide that

1101
00:48:12,000 --> 00:48:13,839
and that'll make it easier but right now

1102
00:48:13,839 --> 00:48:15,520
it's not understood why there are

1103
00:48:15,520 --> 00:48:16,640
restrictions

1104
00:48:16,640 --> 00:48:18,880
and so i think i can come up with maybe

1105
00:48:18,880 --> 00:48:20,079
some text about

1106
00:48:20,079 --> 00:48:22,000
why there are restrictions and what the

1107
00:48:22,000 --> 00:48:23,839
restrictions are and i can point

1108
00:48:23,839 --> 00:48:28,160
to the rfc um 8967

1109
00:48:28,160 --> 00:48:30,720
to help me with that so i think i work

1110
00:48:30,720 --> 00:48:32,480
it out

1111
00:48:32,480 --> 00:48:36,400
the key size for sha 256

1112
00:48:36,400 --> 00:48:40,240
is at most 64 bytes

1113
00:48:40,240 --> 00:48:42,319
if you have something longer you need to

1114
00:48:42,319 --> 00:48:45,200
hash it first

1115
00:48:47,040 --> 00:48:49,280
i think it's very device but we can work

1116
00:48:49,280 --> 00:48:51,599
this out

1117
00:48:51,920 --> 00:48:55,359
so i don't understand ben's comment here

1118
00:48:55,359 --> 00:48:58,160
well maybe we should take the rest of

1119
00:48:58,160 --> 00:48:59,920
this offline

1120
00:48:59,920 --> 00:49:03,760
yeah well there was the ospf um ospf

1121
00:49:03,760 --> 00:49:06,880
said you only needed to have your uh key

1122
00:49:06,880 --> 00:49:07,520
of length

1123
00:49:07,520 --> 00:49:10,800
l which was the 32 and so that's where

1124
00:49:10,800 --> 00:49:13,520
the ospf was causing issues because some

1125
00:49:13,520 --> 00:49:14,000
of

1126
00:49:14,000 --> 00:49:15,599
you know the code was trying to

1127
00:49:15,599 --> 00:49:17,280
reference ospf

1128
00:49:17,280 --> 00:49:20,000
and those were the closed issues okay so

1129
00:49:20,000 --> 00:49:21,119
i'll

1130
00:49:21,119 --> 00:49:22,960
i think i've got some information i'll

1131
00:49:22,960 --> 00:49:25,599
try and get it

1132
00:49:26,240 --> 00:49:27,839
okay do you want to say anything about

1133
00:49:27,839 --> 00:49:31,359
the last slide you have here

1134
00:49:31,359 --> 00:49:45,839
those are the closed issues yeah okay

1135
00:49:50,960 --> 00:49:59,839
uh that would be this one

1136
00:50:05,440 --> 00:50:07,760
okay so i'm going to go through this

1137
00:50:07,760 --> 00:50:09,280
presentation pretty quickly

1138
00:50:09,280 --> 00:50:11,280
uh you can examine the slides at your

1139
00:50:11,280 --> 00:50:12,559
leisure and have

1140
00:50:12,559 --> 00:50:16,720
less time than i'd planned so uh

1141
00:50:16,720 --> 00:50:18,720
i chaired the 80 to 11 mesh task group

1142
00:50:18,720 --> 00:50:21,040
for part of its existence

1143
00:50:21,040 --> 00:50:22,319
uh but i probably don't remember

1144
00:50:22,319 --> 00:50:23,760
everything because it was a while ago

1145
00:50:23,760 --> 00:50:26,160
the 80211 standard is pretty big you can

1146
00:50:26,160 --> 00:50:27,760
download it yourself and peruse

1147
00:50:27,760 --> 00:50:31,599
all 4 377 pages of the 2020 version if

1148
00:50:31,599 --> 00:50:32,720
you wish

1149
00:50:32,720 --> 00:50:35,440
um and i'm speaking entirely for myself

1150
00:50:35,440 --> 00:50:37,599
personally here

1151
00:50:37,599 --> 00:50:40,000
so uh talk a little bit about the

1152
00:50:40,000 --> 00:50:42,640
background innovator 211 and mesh

1153
00:50:42,640 --> 00:50:44,160
uh a fair amount of information about

1154
00:50:44,160 --> 00:50:45,839
existing wi-fi mesh you can sort of see

1155
00:50:45,839 --> 00:50:46,640
how

1156
00:50:46,640 --> 00:50:48,800
it's a big framework that they will

1157
00:50:48,800 --> 00:50:51,119
produce protocol can fit into

1158
00:50:51,119 --> 00:50:54,480
and a little bit about process and stuff

1159
00:50:54,480 --> 00:50:58,079
so uh babel does very well at handling

1160
00:50:58,079 --> 00:51:00,000
networks with links that have unstable

1161
00:51:00,000 --> 00:51:01,680
metrics like radio links

1162
00:51:01,680 --> 00:51:04,720
and that's what an wi-fi mesh is so

1163
00:51:04,720 --> 00:51:07,280
it seems only natural to consider using

1164
00:51:07,280 --> 00:51:10,240
the babel routing for wi-fi mesh

1165
00:51:10,240 --> 00:51:12,319
so you get a lot of stuff with fuse

1166
00:51:12,319 --> 00:51:14,160
wi-fi you know there's lots about

1167
00:51:14,160 --> 00:51:16,400
adjusting and negotiating data rates and

1168
00:51:16,400 --> 00:51:17,920
for advanced versions it can do beam

1169
00:51:17,920 --> 00:51:20,160
forming it can switch between different

1170
00:51:20,160 --> 00:51:21,520
channels it knows about different

1171
00:51:21,520 --> 00:51:22,640
spectrum different

1172
00:51:22,640 --> 00:51:24,720
nations and stuff and although the

1173
00:51:24,720 --> 00:51:26,880
normal frequencies used are

1174
00:51:26,880 --> 00:51:30,800
uh license exempt and unlicensed

1175
00:51:30,800 --> 00:51:33,599
there are wi-fi there are frequencies

1176
00:51:33,599 --> 00:51:35,359
you can use wi-fi protocols in that have

1177
00:51:35,359 --> 00:51:37,200
various licensing regimes

1178
00:51:37,200 --> 00:51:39,359
that's all in the standard it has lots

1179
00:51:39,359 --> 00:51:41,040
of things to do with aggregation so you

1180
00:51:41,040 --> 00:51:42,800
can get really high data rates because

1181
00:51:42,800 --> 00:51:44,559
inquiring the channel wearing the air

1182
00:51:44,559 --> 00:51:47,440
interface is considered expensive so

1183
00:51:47,440 --> 00:51:49,359
if you're doing a high bit rate then

1184
00:51:49,359 --> 00:51:50,800
once you acquire it you want to pump a

1185
00:51:50,800 --> 00:51:52,480
whole bunch of bits through

1186
00:51:52,480 --> 00:51:54,559
on the other hand there can be very slow

1187
00:51:54,559 --> 00:51:56,079
noisy channels and things like that

1188
00:51:56,079 --> 00:51:58,079
and you don't want to send things for

1189
00:51:58,079 --> 00:51:59,599
too long because you'll get

1190
00:51:59,599 --> 00:52:01,520
errors and so there's fragmentation

1191
00:52:01,520 --> 00:52:03,040
features it

1192
00:52:03,040 --> 00:52:05,599
improved reliability it has a link level

1193
00:52:05,599 --> 00:52:06,240
uh

1194
00:52:06,240 --> 00:52:07,200
one-half acknowledgement and

1195
00:52:07,200 --> 00:52:09,839
re-transmission and has like uh

1196
00:52:09,839 --> 00:52:11,280
counters and things to avoid getting

1197
00:52:11,280 --> 00:52:13,040
duplicates due to that

1198
00:52:13,040 --> 00:52:15,200
you can defeat that if you want uh turn

1199
00:52:15,200 --> 00:52:17,520
off turn a bit on the header

1200
00:52:17,520 --> 00:52:21,040
um it has the the security the

1201
00:52:21,040 --> 00:52:22,640
encryption and authentication it has

1202
00:52:22,640 --> 00:52:24,559
is essentially uh almost always built

1203
00:52:24,559 --> 00:52:26,000
into the hardware firmware and the

1204
00:52:26,000 --> 00:52:26,800
chipsets

1205
00:52:26,800 --> 00:52:28,960
because everybody assumes that

1206
00:52:28,960 --> 00:52:30,480
everybody's almost everybody's always

1207
00:52:30,480 --> 00:52:31,119
going to want to

1208
00:52:31,119 --> 00:52:34,160
secure their their radio links so it

1209
00:52:34,160 --> 00:52:34,720
doesn't

1210
00:52:34,720 --> 00:52:36,160
you know you have to set up the keys but

1211
00:52:36,160 --> 00:52:37,839
it doesn't cost you anything in terms of

1212
00:52:37,839 --> 00:52:39,040
data rate or anything to

1213
00:52:39,040 --> 00:52:41,200
to use encryption and since there's

1214
00:52:41,200 --> 00:52:42,079
billions

1215
00:52:42,079 --> 00:52:43,760
uh literally billions of chipsets

1216
00:52:43,760 --> 00:52:45,599
shipped annually

1217
00:52:45,599 --> 00:52:48,640
the cost of making the protocol more

1218
00:52:48,640 --> 00:52:50,400
sophisticated and putting in these fancy

1219
00:52:50,400 --> 00:52:50,960
features

1220
00:52:50,960 --> 00:52:53,200
can be amortized over a huge number of

1221
00:52:53,200 --> 00:52:54,319
chips

1222
00:52:54,319 --> 00:52:56,720
and experience that the goal for wi-fi

1223
00:52:56,720 --> 00:52:58,960
was always 100 meters for its range

1224
00:52:58,960 --> 00:53:01,280
so it's 10 meters for bluetooth and

1225
00:53:01,280 --> 00:53:03,359
lastly 80211 believes in a

1226
00:53:03,359 --> 00:53:05,680
single unified complex header rather

1227
00:53:05,680 --> 00:53:07,440
than trying to sort of nest headers

1228
00:53:07,440 --> 00:53:10,240
it just puts more stuff and flags and

1229
00:53:10,240 --> 00:53:11,200
options in this

1230
00:53:11,200 --> 00:53:12,960
this one unified header which is kind of

1231
00:53:12,960 --> 00:53:15,680
an interesting approach

1232
00:53:15,680 --> 00:53:17,839
so 8011 mesh was originally designed

1233
00:53:17,839 --> 00:53:20,079
just to provide wireless backhaul for

1234
00:53:20,079 --> 00:53:23,200
access points here's the schedule

1235
00:53:23,200 --> 00:53:25,280
it's all been rolled into the current

1236
00:53:25,280 --> 00:53:26,720
standard there's a list

1237
00:53:26,720 --> 00:53:28,240
of some implementations i don't know if

1238
00:53:28,240 --> 00:53:30,640
it's complete in wikipedia

1239
00:53:30,640 --> 00:53:32,480
so here's a typical bunch of access

1240
00:53:32,480 --> 00:53:33,839
points and stations

1241
00:53:33,839 --> 00:53:36,880
for um an 80211

1242
00:53:36,880 --> 00:53:38,400
extended service that it's called

1243
00:53:38,400 --> 00:53:40,000
technically and as you see

1244
00:53:40,000 --> 00:53:41,680
you know i said ssid server-side

1245
00:53:41,680 --> 00:53:44,000
identifier which identifies this

1246
00:53:44,000 --> 00:53:45,760
and the idea with the original version

1247
00:53:45,760 --> 00:53:47,440
of mesh was just to be able to

1248
00:53:47,440 --> 00:53:49,280
have mesh links between the access

1249
00:53:49,280 --> 00:53:51,760
points and have access points that were

1250
00:53:51,760 --> 00:53:54,960
uh not connected to the

1251
00:53:54,960 --> 00:53:58,079
uh with their wireless infrastructure

1252
00:53:58,079 --> 00:54:01,760
so uh about 80211 mesh

1253
00:54:01,760 --> 00:54:03,359
there's the links are obviously appear

1254
00:54:03,359 --> 00:54:05,839
to appear uh every mesh station in our

1255
00:54:05,839 --> 00:54:08,079
native 211 mesh has a profile

1256
00:54:08,079 --> 00:54:10,400
and they don't appear unless the profile

1257
00:54:10,400 --> 00:54:12,400
is the same includes a mesh id

1258
00:54:12,400 --> 00:54:14,559
a path selection protocol identifier a

1259
00:54:14,559 --> 00:54:16,559
path selection metric identifier

1260
00:54:16,559 --> 00:54:18,240
and congestion synchronization and

1261
00:54:18,240 --> 00:54:20,240
authentication protocols and

1262
00:54:20,240 --> 00:54:21,680
if you have authentication turned on

1263
00:54:21,680 --> 00:54:23,119
that they won't appear until they've

1264
00:54:23,119 --> 00:54:24,000
authenticated each

1265
00:54:24,000 --> 00:54:26,319
other to a pair of stations that are

1266
00:54:26,319 --> 00:54:28,000
trying to cure

1267
00:54:28,000 --> 00:54:29,280
they discover each other through the

1268
00:54:29,280 --> 00:54:30,880
beacons the data column stations

1269
00:54:30,880 --> 00:54:32,559
normally transmit or you can also do

1270
00:54:32,559 --> 00:54:34,640
probe requests and probe responses

1271
00:54:34,640 --> 00:54:36,079
the beacons and the probe responses

1272
00:54:36,079 --> 00:54:38,079
contain a mesh configuration

1273
00:54:38,079 --> 00:54:40,400
which includes the isolation protocol

1274
00:54:40,400 --> 00:54:41,119
and the

1275
00:54:41,119 --> 00:54:44,160
fast election metric and you can put ff

1276
00:54:44,160 --> 00:54:45,359
there and then you need to include

1277
00:54:45,359 --> 00:54:47,280
another information element that gives

1278
00:54:47,280 --> 00:54:47,839
the

1279
00:54:47,839 --> 00:54:50,960
vendor identified by an oui and a

1280
00:54:50,960 --> 00:54:54,079
particular vendor information so the

1281
00:54:54,079 --> 00:54:55,760
ssid is not used

1282
00:54:55,760 --> 00:54:57,760
there's always an ssid field there which

1283
00:54:57,760 --> 00:54:59,520
is set to the wildcard value i think

1284
00:54:59,520 --> 00:55:02,000
it's just a single asterisk

1285
00:55:02,000 --> 00:55:05,440
but there is a mesh id element which is

1286
00:55:05,440 --> 00:55:08,160
the same as ssid ssids are almost always

1287
00:55:08,160 --> 00:55:08,880
readable

1288
00:55:08,880 --> 00:55:11,280
but in fact technically it's just a 0 to

1289
00:55:11,280 --> 00:55:12,240
32

1290
00:55:12,240 --> 00:55:16,000
octet binary string i don't know how

1291
00:55:16,000 --> 00:55:18,319
you know 8 or 2 11 user interfaces work

1292
00:55:18,319 --> 00:55:19,520
very well if you make it use the

1293
00:55:19,520 --> 00:55:20,880
unprintable uh

1294
00:55:20,880 --> 00:55:24,240
ssid but that's what it is

1295
00:55:24,240 --> 00:55:27,280
um so interval of mesh from an external

1296
00:55:27,280 --> 00:55:28,319
point of view it looks like it's a

1297
00:55:28,319 --> 00:55:30,880
single multi-access link

1298
00:55:30,880 --> 00:55:33,920
it's there's a bunch of concepts i don't

1299
00:55:33,920 --> 00:55:35,119
want to go into all the details of

1300
00:55:35,119 --> 00:55:36,799
including the mesh gates and portals and

1301
00:55:36,799 --> 00:55:38,480
distribution system but generally

1302
00:55:38,480 --> 00:55:39,920
you can hook to the outside world of

1303
00:55:39,920 --> 00:55:41,680
course

1304
00:55:41,680 --> 00:55:43,119
and you can have a mesh point which is

1305
00:55:43,119 --> 00:55:45,280
also an access point

1306
00:55:45,280 --> 00:55:48,480
and you can a particular device in one

1307
00:55:48,480 --> 00:55:50,559
box can obviously be an access point and

1308
00:55:50,559 --> 00:55:52,400
or mesh

1309
00:55:52,400 --> 00:55:54,880
station under mesh gate and portal all

1310
00:55:54,880 --> 00:55:57,359
co-located

1311
00:55:57,359 --> 00:56:00,559
so you can have a mesh uh tool of mesh

1312
00:56:00,559 --> 00:56:02,240
in the middle and they have it

1313
00:56:02,240 --> 00:56:04,799
used to connect two wired local area

1314
00:56:04,799 --> 00:56:08,160
networks for example like this

1315
00:56:08,160 --> 00:56:12,799
so in 8 11 mesh it's an 802 thing 802 is

1316
00:56:12,799 --> 00:56:15,040
you know mac kind of place so its

1317
00:56:15,040 --> 00:56:17,040
routing is based on mac addresses

1318
00:56:17,040 --> 00:56:19,839
and in the most general form a data

1319
00:56:19,839 --> 00:56:22,079
frame unicast data unicast frame in the

1320
00:56:22,079 --> 00:56:23,200
80211 mesh

1321
00:56:23,200 --> 00:56:25,520
has six mac addresses in the header i

1322
00:56:25,520 --> 00:56:26,480
told you it has

1323
00:56:26,480 --> 00:56:29,040
a unified complex header there's the

1324
00:56:29,040 --> 00:56:30,240
transmitter and receiver

1325
00:56:30,240 --> 00:56:32,880
and the radio link there's the uh mesh

1326
00:56:32,880 --> 00:56:34,319
source and mesh destination and that

1327
00:56:34,319 --> 00:56:35,440
might be it if it was

1328
00:56:35,440 --> 00:56:37,520
coming from a node in the mesh to a node

1329
00:56:37,520 --> 00:56:39,119
in the mesh but it was coming from

1330
00:56:39,119 --> 00:56:41,280
from outside the mesh and destined

1331
00:56:41,280 --> 00:56:42,240
outside the mesh

1332
00:56:42,240 --> 00:56:43,839
and you also have the original source

1333
00:56:43,839 --> 00:56:45,359
and the final destination

1334
00:56:45,359 --> 00:56:47,520
mac address of course these could be uh

1335
00:56:47,520 --> 00:56:49,359
like ip routers that were

1336
00:56:49,359 --> 00:56:50,880
you know just right outside the mesh or

1337
00:56:50,880 --> 00:56:52,400
something like that

1338
00:56:52,400 --> 00:56:56,160
uh they have a ttl and they have a

1339
00:56:56,160 --> 00:56:58,559
four octet mesh sequence number so

1340
00:56:58,559 --> 00:56:59,280
duplicates

1341
00:56:59,280 --> 00:57:01,520
uh of the same mesh source and sequence

1342
00:57:01,520 --> 00:57:02,400
number are dropped

1343
00:57:02,400 --> 00:57:04,640
so basically the way you multicast and

1344
00:57:04,640 --> 00:57:06,400
broadcast works in eight or to 11 meshes

1345
00:57:06,400 --> 00:57:07,359
it just sort of

1346
00:57:07,359 --> 00:57:10,720
uh floods it and uh the much mesh

1347
00:57:10,720 --> 00:57:12,480
stations are required to keep a cache of

1348
00:57:12,480 --> 00:57:13,920
recently seen

1349
00:57:13,920 --> 00:57:15,359
mesh sources and sequence numbers and

1350
00:57:15,359 --> 00:57:16,960
drop duplicates

1351
00:57:16,960 --> 00:57:20,720
so the default path selection

1352
00:57:20,720 --> 00:57:23,359
is this hybrid wireless mesh protocol it

1353
00:57:23,359 --> 00:57:24,559
has an a

1354
00:57:24,559 --> 00:57:26,319
on demand ad hoc mode which is very

1355
00:57:26,319 --> 00:57:28,319
similar to aodv

1356
00:57:28,319 --> 00:57:30,880
uh it doesn't actually reference rfc 30

1357
00:57:30,880 --> 00:57:32,480
well it there's a reference but

1358
00:57:32,480 --> 00:57:35,280
you don't need to look at rfc 3561 the

1359
00:57:35,280 --> 00:57:37,920
specification in the 80211 standard is

1360
00:57:37,920 --> 00:57:39,119
entirely complete

1361
00:57:39,119 --> 00:57:40,640
you can fully implement it without

1362
00:57:40,640 --> 00:57:42,960
looking at the rfc but it is based on

1363
00:57:42,960 --> 00:57:43,599
the

1364
00:57:43,599 --> 00:57:46,160
our uh the idea of the rfc there's also

1365
00:57:46,160 --> 00:57:48,319
a tree building mode if you declare a

1366
00:57:48,319 --> 00:57:48,960
route

1367
00:57:48,960 --> 00:57:51,040
or more than one route you can build a

1368
00:57:51,040 --> 00:57:53,119
tree so you can have things like you can

1369
00:57:53,119 --> 00:57:55,760
always get a packet from a frame from

1370
00:57:55,760 --> 00:57:57,119
one station to another

1371
00:57:57,119 --> 00:57:58,640
by going up to the free route and back

1372
00:57:58,640 --> 00:58:00,640
down again uh even if they're in

1373
00:58:00,640 --> 00:58:02,079
different branches or maybe

1374
00:58:02,079 --> 00:58:03,839
a smaller portion of the tree but you

1375
00:58:03,839 --> 00:58:05,440
can start doing that and then you can

1376
00:58:05,440 --> 00:58:06,240
use the

1377
00:58:06,240 --> 00:58:09,440
uh on ad ad-hoc on-demand uh stuff to

1378
00:58:09,440 --> 00:58:10,720
try to find a more

1379
00:58:10,720 --> 00:58:12,799
uh efficient direct route between the

1380
00:58:12,799 --> 00:58:15,520
two stations

1381
00:58:15,680 --> 00:58:18,160
there is a metric uh this is the default

1382
00:58:18,160 --> 00:58:19,440
metric used

1383
00:58:19,440 --> 00:58:22,799
and actually these two the metric and uh

1384
00:58:22,799 --> 00:58:24,559
routing protocol give here are the only

1385
00:58:24,559 --> 00:58:26,319
ones that actually specified in the 8 to

1386
00:58:26,319 --> 00:58:27,839
11 standard

1387
00:58:27,839 --> 00:58:29,680
it's called the air time metric and you

1388
00:58:29,680 --> 00:58:31,280
basically it's the overhead

1389
00:58:31,280 --> 00:58:35,359
plus the the the number of bits in your

1390
00:58:35,359 --> 00:58:36,960
test frame which they recommend you

1391
00:58:36,960 --> 00:58:39,760
you calculate this using a one uh k

1392
00:58:39,760 --> 00:58:40,240
octet

1393
00:58:40,240 --> 00:58:42,720
frame uh the data rate and the error

1394
00:58:42,720 --> 00:58:43,280
rate

1395
00:58:43,280 --> 00:58:45,440
so if i have a fifty percent error rate

1396
00:58:45,440 --> 00:58:47,359
you assume it takes twice as long as it

1397
00:58:47,359 --> 00:58:49,520
is the average you'd have to

1398
00:58:49,520 --> 00:58:52,559
retransmit it and that

1399
00:58:52,559 --> 00:58:54,319
enough to cause it to take twice as much

1400
00:58:54,319 --> 00:58:55,920
time so

1401
00:58:55,920 --> 00:58:59,040
um if you ever have to do a presentation

1402
00:58:59,040 --> 00:59:00,559
to 8 or 211

1403
00:59:00,559 --> 00:59:02,160
as a hint it's good to include an

1404
00:59:02,160 --> 00:59:04,559
equation in your presentation 80 to 11

1405
00:59:04,559 --> 00:59:07,119
likes equations so

1406
00:59:07,119 --> 00:59:10,160
there's one so

1407
00:59:10,160 --> 00:59:13,200
there's some other stuff about it uh the

1408
00:59:13,200 --> 00:59:15,280
811 quality of service features are

1409
00:59:15,280 --> 00:59:16,640
theoretically optional which

1410
00:59:16,640 --> 00:59:19,680
they basically allow higher priority

1411
00:59:19,680 --> 00:59:22,559
data packets to uh be given preference

1412
00:59:22,559 --> 00:59:23,599
in acquiring

1413
00:59:23,599 --> 00:59:26,000
a radio channel uh it's all there's a

1414
00:59:26,000 --> 00:59:26,720
whole bunch of

1415
00:59:26,720 --> 00:59:30,960
really detailed timing uh controls that

1416
00:59:30,960 --> 00:59:33,680
um the aircloth mesh has its own power

1417
00:59:33,680 --> 00:59:35,280
save stuff you can have

1418
00:59:35,280 --> 00:59:38,319
uh a purine can be inactive light sleep

1419
00:59:38,319 --> 00:59:39,680
or deep sleep modes

1420
00:59:39,680 --> 00:59:41,200
it turns out every time they put it adds

1421
00:59:41,200 --> 00:59:43,040
a new major feature to 811 they have

1422
00:59:43,040 --> 00:59:44,720
their own ideas on how to

1423
00:59:44,720 --> 00:59:46,640
improve battery life and do power save

1424
00:59:46,640 --> 00:59:48,799
and stuff obviously this is only if they

1425
00:59:48,799 --> 00:59:51,839
sufficiently low level of traffic it's

1426
00:59:51,839 --> 00:59:53,599
got a be conclusion avoidance feature to

1427
00:59:53,599 --> 00:59:54,640
avoid uh

1428
00:59:54,640 --> 00:59:56,480
collisions due to hidden nodes where one

1429
00:59:56,480 --> 00:59:58,640
node can't see another for some reason

1430
00:59:58,640 --> 01:00:01,359
congestion avoidance uh you can have a

1431
01:00:01,359 --> 01:00:02,799
channel switching they can switch the

1432
01:00:02,799 --> 01:00:03,680
whole mesh from

1433
01:00:03,680 --> 01:00:05,520
one radio channel to another so it's in

1434
01:00:05,520 --> 01:00:07,040
the way rush is defined it's

1435
01:00:07,040 --> 01:00:10,720
kind of uh assumes a single radio

1436
01:00:10,720 --> 01:00:12,000
crustation which isn't really an

1437
01:00:12,000 --> 01:00:14,240
effective way of doing mesh

1438
01:00:14,240 --> 01:00:16,160
but really people extend that and almost

1439
01:00:16,160 --> 01:00:18,240
always have multiple radios

1440
01:00:18,240 --> 01:00:20,720
and even emergency services support for

1441
01:00:20,720 --> 01:00:23,119
certain applications in certain areas

1442
01:00:23,119 --> 01:00:24,880
somebody might attempt to be making a

1443
01:00:24,880 --> 01:00:26,559
voice call to

1444
01:00:26,559 --> 01:00:29,040
emergency number uh you have to allow

1445
01:00:29,040 --> 01:00:29,680
them

1446
01:00:29,680 --> 01:00:32,720
uh to do that legally uh

1447
01:00:32,720 --> 01:00:36,000
so you know when you do a appearing open

1448
01:00:36,000 --> 01:00:37,920
you can say i need the emergency service

1449
01:00:37,920 --> 01:00:38,799
and he can

1450
01:00:38,799 --> 01:00:40,799
has to let you in but it may restrict

1451
01:00:40,799 --> 01:00:42,000
your bandwidth and only route you

1452
01:00:42,000 --> 01:00:45,760
to a emergency service access point so

1453
01:00:45,760 --> 01:00:48,319
uh i'm gonna run a little over here from

1454
01:00:48,319 --> 01:00:50,079
this it's not a problem with people

1455
01:00:50,079 --> 01:00:52,720
so we could specify uh bail routing as a

1456
01:00:52,720 --> 01:00:54,960
211 mesh pass selection protocol

1457
01:00:54,960 --> 01:00:58,160
and you probably need to add a

1458
01:00:58,160 --> 01:00:59,839
babble address encoding for mac

1459
01:00:59,839 --> 01:01:01,760
addresses to do that

1460
01:01:01,760 --> 01:01:05,440
and all additionally uh we could specify

1461
01:01:05,440 --> 01:01:08,960
the 802.11

1462
01:01:09,040 --> 01:01:12,079
mesh f811 metric uh based on

1463
01:01:12,079 --> 01:01:15,839
etx for example and uh i think i only

1464
01:01:15,839 --> 01:01:18,000
have one more slide here yeah

1465
01:01:18,000 --> 01:01:20,799
yeah so i'll just give this a julius so

1466
01:01:20,799 --> 01:01:21,599
uh

1467
01:01:21,599 --> 01:01:23,440
although influence is clearly designed

1468
01:01:23,440 --> 01:01:26,000
to be extensible in this fashion

1469
01:01:26,000 --> 01:01:27,760
and you can even vendors can extend it

1470
01:01:27,760 --> 01:01:29,839
without even talking to 80211 by using

1471
01:01:29,839 --> 01:01:30,799
their

1472
01:01:30,799 --> 01:01:32,720
using the vendor extension feature

1473
01:01:32,720 --> 01:01:34,559
nevertheless experience indicates to me

1474
01:01:34,559 --> 01:01:37,119
that the iesg and ietf will want

1475
01:01:37,119 --> 01:01:39,599
a explicit liaison from 80 to 11 saying

1476
01:01:39,599 --> 01:01:41,200
it's fine for us to do this

1477
01:01:41,200 --> 01:01:43,680
i don't believe that will be hard to get

1478
01:01:43,680 --> 01:01:44,319
and in fact

1479
01:01:44,319 --> 01:01:45,680
having that might be useful because it's

1480
01:01:45,680 --> 01:01:47,599
possible although theoretically we only

1481
01:01:47,599 --> 01:01:48,400
need a

1482
01:01:48,400 --> 01:01:50,079
fast selection protocol identifier and

1483
01:01:50,079 --> 01:01:51,440
possibly a pass selection metric

1484
01:01:51,440 --> 01:01:52,240
identifier

1485
01:01:52,240 --> 01:01:55,760
we might want other uh uh

1486
01:01:55,760 --> 01:01:57,200
other numbers from there equivalent to

1487
01:01:57,200 --> 01:01:59,280
viana there the 80211 working group has

1488
01:01:59,280 --> 01:02:01,520
one equivalent and it's possible there

1489
01:02:01,520 --> 01:02:03,280
might need to be a

1490
01:02:03,280 --> 01:02:06,319
a mesh any charter update uh for this as

1491
01:02:06,319 --> 01:02:07,039
uh

1492
01:02:07,039 --> 01:02:09,440
so uh julia's here first on the list go

1493
01:02:09,440 --> 01:02:11,599
ahead

1494
01:02:12,480 --> 01:02:16,000
yes so i have two points so

1495
01:02:16,000 --> 01:02:19,440
first there is

1496
01:02:19,440 --> 01:02:22,079
a lot of the complexity in bible is due

1497
01:02:22,079 --> 01:02:23,920
to the requirement

1498
01:02:23,920 --> 01:02:27,599
of having the same ip address at

1499
01:02:27,599 --> 01:02:30,240
two places that don't have synchronized

1500
01:02:30,240 --> 01:02:32,240
sequence numbers

1501
01:02:32,240 --> 01:02:34,319
okay so think about the default route

1502
01:02:34,319 --> 01:02:36,400
you can announce a default route

1503
01:02:36,400 --> 01:02:39,680
at two points in a barbell network

1504
01:02:39,680 --> 01:02:41,359
and the two routers that announce the

1505
01:02:41,359 --> 01:02:43,359
default route don't need to have

1506
01:02:43,359 --> 01:02:46,079
synchronized sequence numbers

1507
01:02:46,079 --> 01:02:48,880
now if you're working at player 2 you no

1508
01:02:48,880 --> 01:02:50,799
longer have this problem

1509
01:02:50,799 --> 01:02:52,319
because a different mac address you

1510
01:02:52,319 --> 01:02:54,960
announce at only one place in your mesh

1511
01:02:54,960 --> 01:02:58,720
right uh it means that a lot of

1512
01:02:58,720 --> 01:03:00,000
you would think you would hope so but

1513
01:03:00,000 --> 01:03:01,760
you could have you can have uh

1514
01:03:01,760 --> 01:03:03,119
in the real world of course you can

1515
01:03:03,119 --> 01:03:04,880
always have more than one device that

1516
01:03:04,880 --> 01:03:06,079
claims to have the same macro

1517
01:03:06,079 --> 01:03:08,799
yeah yeah but that's not normal that's

1518
01:03:08,799 --> 01:03:09,280
not

1519
01:03:09,280 --> 01:03:12,880
the normal behavior while in the case of

1520
01:03:12,880 --> 01:03:15,039
a 90 network having the same ip

1521
01:03:15,039 --> 01:03:17,680
at ip prefix announced at two places is

1522
01:03:17,680 --> 01:03:18,960
completely natural

1523
01:03:18,960 --> 01:03:20,880
and we don't want to have synchronized

1524
01:03:20,880 --> 01:03:22,720
sequence numbers sequence numbers are

1525
01:03:22,720 --> 01:03:24,720
not clocks they are not synchronized

1526
01:03:24,720 --> 01:03:27,760
so if you do babble at layer two then

1527
01:03:27,760 --> 01:03:28,400
becomes

1528
01:03:28,400 --> 01:03:31,839
much simpler

1529
01:03:32,319 --> 01:03:34,799
so that leads to the point that if you

1530
01:03:34,799 --> 01:03:36,720
do babel at layer 2 you don't want to

1531
01:03:36,720 --> 01:03:37,680
use babel

1532
01:03:37,680 --> 01:03:41,119
you want to use the simplified protocol

1533
01:03:41,119 --> 01:03:43,359
that no longer needs to carry router ids

1534
01:03:43,359 --> 01:03:44,960
so the distinction between ip

1535
01:03:44,960 --> 01:03:47,200
prefix and router id is due exactly to

1536
01:03:47,200 --> 01:03:48,319
this problem

1537
01:03:48,319 --> 01:03:50,559
but once you're working with mac

1538
01:03:50,559 --> 01:03:51,359
addresses

1539
01:03:51,359 --> 01:03:53,039
you can give up on the router ids and

1540
01:03:53,039 --> 01:03:54,720
you have the mac addresses both as the

1541
01:03:54,720 --> 01:03:55,440
prefix

1542
01:03:55,440 --> 01:03:58,240
both of the destination of traffic and

1543
01:03:58,240 --> 01:04:01,038
the router id

1544
01:04:01,280 --> 01:04:04,559
the second point i'd like to make

1545
01:04:04,559 --> 01:04:08,960
is that when 11s was originally defined

1546
01:04:08,960 --> 01:04:10,640
i haven't looked at 11s in

1547
01:04:10,640 --> 01:04:13,440
ages but when i looked at it many years

1548
01:04:13,440 --> 01:04:14,319
ago

1549
01:04:14,319 --> 01:04:17,200
it actually had two rooting protocols

1550
01:04:17,200 --> 01:04:18,160
one of which was a

1551
01:04:18,160 --> 01:04:21,200
supplement yes the other was

1552
01:04:21,200 --> 01:04:22,880
the other was kind of a link status kind

1553
01:04:22,880 --> 01:04:24,559
of thing uh

1554
01:04:24,559 --> 01:04:27,760
olsr i think and it basically there's

1555
01:04:27,760 --> 01:04:28,799
tremendous pressure

1556
01:04:28,799 --> 01:04:32,079
in nato's eleven uh well in ieee working

1557
01:04:32,079 --> 01:04:34,720
802 working groups to simplify things

1558
01:04:34,720 --> 01:04:36,319
and basically although a lot of work was

1559
01:04:36,319 --> 01:04:38,079
put into specifying that

1560
01:04:38,079 --> 01:04:41,359
uh it was uh removed

1561
01:04:41,359 --> 01:04:44,640
so the final version has only hwmp uh

1562
01:04:44,640 --> 01:04:46,720
okay so i had the impression that the

1563
01:04:46,720 --> 01:04:48,480
rlsr based

1564
01:04:48,480 --> 01:04:51,839
routing protocol nobody ever implemented

1565
01:04:51,839 --> 01:04:53,520
i believe that's well there may have

1566
01:04:53,520 --> 01:04:55,200
been some experimental but

1567
01:04:55,200 --> 01:04:57,280
there's certainly nobody ever you never

1568
01:04:57,280 --> 01:04:58,799
got out of a laboratory

1569
01:04:58,799 --> 01:05:01,039
so why do you think that an optional

1570
01:05:01,039 --> 01:05:02,480
battle-based protocol

1571
01:05:02,480 --> 01:05:04,960
wouldn't suffer the same fate well i

1572
01:05:04,960 --> 01:05:06,079
think babel would be

1573
01:05:06,079 --> 01:05:09,359
uh could easily be better than hwmp

1574
01:05:09,359 --> 01:05:12,880
so uh

1575
01:05:13,039 --> 01:05:14,319
yeah i don't know do you really believe

1576
01:05:14,319 --> 01:05:16,319
that there's only one ecological niche

1577
01:05:16,319 --> 01:05:17,039
or something

1578
01:05:17,039 --> 01:05:19,920
i i think that the the level the uh you

1579
01:05:19,920 --> 01:05:22,799
know basically a uh

1580
01:05:22,799 --> 01:05:25,200
distance vector uh with the additional

1581
01:05:25,200 --> 01:05:26,079
features uh

1582
01:05:26,079 --> 01:05:30,079
bevel has to avoid uh problems with the

1583
01:05:30,079 --> 01:05:32,079
naive this distance vector is uh would

1584
01:05:32,079 --> 01:05:33,680
be a good option for

1585
01:05:33,680 --> 01:05:37,280
uh 80211 mesh so i think that babel is

1586
01:05:37,280 --> 01:05:38,880
better than no lsr

1587
01:05:38,880 --> 01:05:40,559
for a simple reason is that when i

1588
01:05:40,559 --> 01:05:42,640
designed bible i knew that i saw so i

1589
01:05:42,640 --> 01:05:44,240
could learn from them

1590
01:05:44,240 --> 01:05:47,510
yes and but

1591
01:05:47,510 --> 01:05:48,720
[Music]

1592
01:05:48,720 --> 01:05:52,240
the question is is there actually a

1593
01:05:52,240 --> 01:05:54,160
market demand for another routine

1594
01:05:54,160 --> 01:05:57,359
protocol in 11s

1595
01:05:59,359 --> 01:06:01,520
i don't see the argument that would lead

1596
01:06:01,520 --> 01:06:03,980
the 11s community

1597
01:06:03,980 --> 01:06:05,359
[Music]

1598
01:06:05,359 --> 01:06:07,920
it's a question i'm not sure there's a

1599
01:06:07,920 --> 01:06:09,599
single unified community i think it's a

1600
01:06:09,599 --> 01:06:10,319
little diverse

1601
01:06:10,319 --> 01:06:12,319
so we unfortunately work overtime at

1602
01:06:12,319 --> 01:06:13,680
this point

1603
01:06:13,680 --> 01:06:16,960
so uh good day go ahead

1604
01:06:16,960 --> 01:06:19,440
a very short question related to what

1605
01:06:19,440 --> 01:06:20,799
julius was asking

1606
01:06:20,799 --> 01:06:23,359
um i think in this working group we've

1607
01:06:23,359 --> 01:06:24,319
had a

1608
01:06:24,319 --> 01:06:26,480
implementation first mindset which has

1609
01:06:26,480 --> 01:06:28,480
been incredibly successful

1610
01:06:28,480 --> 01:06:32,640
um do you have people lined up who would

1611
01:06:32,640 --> 01:06:34,720
be implementing less

1612
01:06:34,720 --> 01:06:37,920
uh not right now but i i i don't i'm not

1613
01:06:37,920 --> 01:06:42,000
proposing i don't think a particularly

1614
01:06:42,000 --> 01:06:44,480
rapid timeline on this i'm kind of

1615
01:06:44,480 --> 01:06:45,680
thinking that

1616
01:06:45,680 --> 01:06:49,119
we would maybe issue a liaison to 802

1617
01:06:49,119 --> 01:06:52,480
from the next ietf meeting if we think

1618
01:06:52,480 --> 01:06:54,160
between now and then we've satisfied

1619
01:06:54,160 --> 01:06:55,839
ourselves that that's a useful

1620
01:06:55,839 --> 01:06:59,440
thing to go ahead and take that step so

1621
01:06:59,440 --> 01:07:01,119
uh i just wanted to give people

1622
01:07:01,119 --> 01:07:02,640
background so they think about it

1623
01:07:02,640 --> 01:07:06,240
and i think we can work on uh finding uh

1624
01:07:06,240 --> 01:07:07,520
people who would implement it and so

1625
01:07:07,520 --> 01:07:09,359
forth cool

1626
01:07:09,359 --> 01:07:12,559
thanks yeah my my general take is

1627
01:07:12,559 --> 01:07:14,240
extending a liaison to tell people like

1628
01:07:14,240 --> 01:07:15,520
hey we have this option if you're

1629
01:07:15,520 --> 01:07:16,000
interested

1630
01:07:16,000 --> 01:07:19,119
sounds good but my personal opinion

1631
01:07:19,119 --> 01:07:19,920
would be

1632
01:07:19,920 --> 01:07:22,640
that we shouldn't recharter to take this

1633
01:07:22,640 --> 01:07:23,280
work on

1634
01:07:23,280 --> 01:07:25,359
unless we have specific implementers on

1635
01:07:25,359 --> 01:07:27,680
board first

1636
01:07:27,680 --> 01:07:31,280
okay uh

1637
01:07:31,280 --> 01:07:33,440
any other comments on this or anything

1638
01:07:33,440 --> 01:07:34,799
else

1639
01:07:34,799 --> 01:07:37,920
uh since we're substantially over time

1640
01:07:37,920 --> 01:07:41,599
uh thanks people who stayed and uh

1641
01:07:41,599 --> 01:07:44,880
i see you on the mailing list and uh at

1642
01:07:44,880 --> 01:07:47,280
the next ietu

1643
01:07:47,280 --> 01:07:53,440
uh bye everyone good to see you

1644
01:08:03,440 --> 01:08:05,520
you

