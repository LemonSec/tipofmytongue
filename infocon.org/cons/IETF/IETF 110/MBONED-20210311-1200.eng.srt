1
00:00:04,880 --> 00:00:05,600
but i would be

2
00:00:05,600 --> 00:00:08,480
interested in taking notes for the stuff

3
00:00:08,480 --> 00:00:11,519
that's not everyone it's not yours

4
00:00:11,519 --> 00:00:14,719
and hey look the topic has been set to

5
00:00:14,719 --> 00:00:18,560
mbundy iatf106

6
00:00:19,199 --> 00:00:22,240
is that is that just me in the chat back

7
00:00:22,240 --> 00:00:23,359
to the future

8
00:00:23,359 --> 00:00:26,800
oh if only that's what it says

9
00:00:26,800 --> 00:00:28,720
those are heady days

10
00:00:28,720 --> 00:00:31,279
yeah these heady days these are heavy

11
00:00:31,279 --> 00:00:33,040
days too man

12
00:00:33,040 --> 00:00:36,399
it's uh we used to see each other

13
00:00:36,399 --> 00:00:39,360
yeah um we used to be in a room ah

14
00:00:39,360 --> 00:00:41,360
that's true we used to see each other

15
00:00:41,360 --> 00:00:44,879
yes i forgot about that um

16
00:00:44,879 --> 00:00:47,360
yeah yeah i i can certainly contribute

17
00:00:47,360 --> 00:00:48,480
uh i would need

18
00:00:48,480 --> 00:00:52,000
help of course for um

19
00:00:52,160 --> 00:00:55,920
uh you know for for the parts where i'm

20
00:00:55,920 --> 00:00:56,840
talking

21
00:00:56,840 --> 00:01:01,520
um i'll cover that great

22
00:01:01,520 --> 00:01:04,799
but yeah i'm happy to to help here

23
00:01:04,799 --> 00:01:08,560
um i guess i will paste in the agenda

24
00:01:08,560 --> 00:01:13,840
thanks jake sure

25
00:01:17,759 --> 00:01:20,799
ah come on man

26
00:01:21,200 --> 00:01:27,840
i can't

27
00:01:36,079 --> 00:01:38,840
all right looks like folks are trickling

28
00:01:38,840 --> 00:01:41,280
in

29
00:01:41,280 --> 00:01:43,360
so so greg and jake i'm sure everybody's

30
00:01:43,360 --> 00:01:44,640
wondering did you

31
00:01:44,640 --> 00:01:48,159
did you get up or did you stay up

32
00:01:48,479 --> 00:01:51,680
well i got it i went i got up too yeah

33
00:01:51,680 --> 00:01:54,640
last week i started on uh trying to be

34
00:01:54,640 --> 00:01:55,040
proud

35
00:01:55,040 --> 00:01:57,759
i mean this isn't real prague time this

36
00:01:57,759 --> 00:01:58,399
is like

37
00:01:58,399 --> 00:02:01,200
uh this is like be nice to east coast

38
00:02:01,200 --> 00:02:02,320
prog time right

39
00:02:02,320 --> 00:02:04,240
which is actually which is actually

40
00:02:04,240 --> 00:02:06,320
really helpful uh

41
00:02:06,320 --> 00:02:11,120
for us on the west coast as well um

42
00:02:11,120 --> 00:02:12,720
at least in my opinion like it's way

43
00:02:12,720 --> 00:02:14,560
better to get up at three than it is to

44
00:02:14,560 --> 00:02:15,920
get up at

45
00:02:15,920 --> 00:02:19,200
you know 11 30.

46
00:02:19,200 --> 00:02:22,160
and uh but yeah i've been doing it all

47
00:02:22,160 --> 00:02:23,040
week because

48
00:02:23,040 --> 00:02:24,959
it just works better that way i think

49
00:02:24,959 --> 00:02:26,640
we're and it's not any worse than

50
00:02:26,640 --> 00:02:30,238
traveling we're at pride lunch time

51
00:02:30,800 --> 00:02:33,840
yeah which is fine

52
00:02:33,840 --> 00:02:35,920
ish as long as you're not in the wrong

53
00:02:35,920 --> 00:02:37,120
you know i mean unless you're in

54
00:02:37,120 --> 00:02:38,560
australia i guess but

55
00:02:38,560 --> 00:02:41,680
fine for a week or

56
00:02:41,680 --> 00:02:44,480
or lots of places yeah i mean it's it's

57
00:02:44,480 --> 00:02:47,040
gotta suck for somebody right

58
00:02:47,040 --> 00:02:48,879
it sucks a little for me it could be

59
00:02:48,879 --> 00:02:51,840
worse

60
00:02:54,560 --> 00:02:56,640
it would be nice if they integrated like

61
00:02:56,640 --> 00:02:58,319
hey when you're speaking it could be at

62
00:02:58,319 --> 00:02:59,200
the same time

63
00:02:59,200 --> 00:03:03,280
but can't have everything i guess

64
00:03:03,680 --> 00:03:06,800
we got the next one right

65
00:03:07,840 --> 00:03:11,440
i think the next one's in san francisco

66
00:03:11,440 --> 00:03:14,000
san francisco yeah that'll be an easy

67
00:03:14,000 --> 00:03:15,599
trip

68
00:03:15,599 --> 00:03:19,120
for you from california

69
00:03:19,120 --> 00:03:22,159
yeah all right greg uh do you think

70
00:03:22,159 --> 00:03:23,840
we're ready to start looks like we've

71
00:03:23,840 --> 00:03:26,000
got a

72
00:03:26,000 --> 00:03:28,159
decent number of folks online ready

73
00:03:28,159 --> 00:03:29,680
enough yeah absolutely we got to get

74
00:03:29,680 --> 00:03:30,159
rolling

75
00:03:30,159 --> 00:03:31,920
they didn't shut us down on tuesday

76
00:03:31,920 --> 00:03:33,200
though uh we

77
00:03:33,200 --> 00:03:34,799
were about 15 minutes over and we

78
00:03:34,799 --> 00:03:36,159
continued to roll it was great they

79
00:03:36,159 --> 00:03:37,840
didn't suddenly chop us off but

80
00:03:37,840 --> 00:03:40,080
i don't want to push resources let's

81
00:03:40,080 --> 00:03:40,959
let's not uh

82
00:03:40,959 --> 00:03:43,360
shoot for that actually since we've got

83
00:03:43,360 --> 00:03:44,959
lorenzo who's in charge of everything so

84
00:03:44,959 --> 00:03:46,159
we can do whatever

85
00:03:46,159 --> 00:03:47,200
i think i'm pretty sure we can do

86
00:03:47,200 --> 00:03:49,280
whatever we want

87
00:03:49,280 --> 00:03:51,760
um he's in charge of everything he's

88
00:03:51,760 --> 00:03:52,319
there

89
00:03:52,319 --> 00:03:55,599
can i get more coffee yeah well

90
00:03:55,599 --> 00:03:57,680
let's let not my colleagues hear that

91
00:03:57,680 --> 00:03:58,799
because they may

92
00:03:58,799 --> 00:04:00,319
they may disagree about that don't worry

93
00:04:00,319 --> 00:04:03,190
nobody's listening to it

94
00:04:03,190 --> 00:04:05,200
[Laughter]

95
00:04:05,200 --> 00:04:07,920
all right so uh why don't we get started

96
00:04:07,920 --> 00:04:09,360
here

97
00:04:09,360 --> 00:04:15,840
uh hold on here

98
00:04:16,399 --> 00:04:21,199
okay welcome to ietf

99
00:04:21,199 --> 00:04:24,639
110 and bone d

100
00:04:25,040 --> 00:04:27,680
uh you can all i assume see the note

101
00:04:27,680 --> 00:04:29,199
well

102
00:04:29,199 --> 00:04:33,040
please do note it well um

103
00:04:33,040 --> 00:04:36,000
very important stuff and i'm sure you've

104
00:04:36,000 --> 00:04:37,120
seen it

105
00:04:37,120 --> 00:04:39,440
multiple times this week should be the

106
00:04:39,440 --> 00:04:40,960
same

107
00:04:40,960 --> 00:04:44,639
all right here's our agenda um

108
00:04:44,639 --> 00:04:48,960
mike's gonna provide some updates um

109
00:04:48,960 --> 00:04:54,160
and um one of embundi's charters

110
00:04:54,160 --> 00:04:58,000
is charter items is to receive reports

111
00:04:58,000 --> 00:05:00,479
um deployment reports from folks who are

112
00:05:00,479 --> 00:05:02,160
really using multicast

113
00:05:02,160 --> 00:05:05,840
um really excited to have uh oriole from

114
00:05:05,840 --> 00:05:07,680
umetsat talk about

115
00:05:07,680 --> 00:05:10,080
their use of multicast and they are a

116
00:05:10,080 --> 00:05:11,280
true classic

117
00:05:11,280 --> 00:05:16,160
m-bone application they are using

118
00:05:16,160 --> 00:05:19,360
multicast over the

119
00:05:19,360 --> 00:05:22,720
rna networks and delivering

120
00:05:22,720 --> 00:05:25,919
their content natively to customers

121
00:05:25,919 --> 00:05:26,639
across

122
00:05:26,639 --> 00:05:29,120
to their customers across true inner

123
00:05:29,120 --> 00:05:29,680
domain

124
00:05:29,680 --> 00:05:32,560
multicast routing both ssm um they had

125
00:05:32,560 --> 00:05:34,560
done asm in the past not sure about now

126
00:05:34,560 --> 00:05:35,440
but uh

127
00:05:35,440 --> 00:05:36,800
lots of interesting stuff that he's

128
00:05:36,800 --> 00:05:39,039
going to talk about and

129
00:05:39,039 --> 00:05:40,639
it's an application of many of the

130
00:05:40,639 --> 00:05:42,400
things we've discussed

131
00:05:42,400 --> 00:05:45,919
over the years so

132
00:05:45,919 --> 00:05:48,080
so lenny uh your slides are not

133
00:05:48,080 --> 00:05:49,840
advancing

134
00:05:49,840 --> 00:05:52,400
you maybe have the wrong screen showing

135
00:05:52,400 --> 00:05:53,120
or something

136
00:05:53,120 --> 00:05:56,479
agenda there you go that's better yeah

137
00:05:56,479 --> 00:05:58,560
now i see it all right maybe i just need

138
00:05:58,560 --> 00:06:02,160
to not go in the presentation mode

139
00:06:02,160 --> 00:06:05,120
um yeah if you're using presentation

140
00:06:05,120 --> 00:06:06,000
mode in some

141
00:06:06,000 --> 00:06:08,960
cases it becomes a different window that

142
00:06:08,960 --> 00:06:10,880
the browser is not able to capture so

143
00:06:10,880 --> 00:06:12,080
it's still capturing the

144
00:06:12,080 --> 00:06:14,639
domain content instead so it varies from

145
00:06:14,639 --> 00:06:16,479
browser to browser so it's hard to

146
00:06:16,479 --> 00:06:17,840
to figure out that if you remain with

147
00:06:17,840 --> 00:06:20,000
this view you're probably okay

148
00:06:20,000 --> 00:06:21,440
all right and hopefully everybody can

149
00:06:21,440 --> 00:06:24,000
just squint and see this okay

150
00:06:24,000 --> 00:06:27,120
uh we won't be here for long um the next

151
00:06:27,120 --> 00:06:29,680
up uh jake's gonna talk about his uh

152
00:06:29,680 --> 00:06:31,039
four drafts

153
00:06:31,039 --> 00:06:33,600
uh and then uh lorenzo is going to talk

154
00:06:33,600 --> 00:06:34,560
about how

155
00:06:34,560 --> 00:06:38,240
meat echo uses multicast

156
00:06:38,240 --> 00:06:40,800
comments on the agenda bashing

157
00:06:40,800 --> 00:06:42,560
opportunities

158
00:06:42,560 --> 00:06:47,600
thoughts okay

159
00:06:47,600 --> 00:06:51,440
moving on moving right along

160
00:06:52,639 --> 00:06:54,800
all right in terms of um the status of

161
00:06:54,800 --> 00:06:56,319
the active working group drafts

162
00:06:56,319 --> 00:06:59,520
um uh the

163
00:06:59,520 --> 00:07:02,720
multicast problems the wi-fi problems uh

164
00:07:02,720 --> 00:07:03,520
draft

165
00:07:03,520 --> 00:07:05,919
uh problem statement draft has been

166
00:07:05,919 --> 00:07:06,800
revised

167
00:07:06,800 --> 00:07:09,280
uh to address the iesg comments mike's

168
00:07:09,280 --> 00:07:10,560
gonna provide

169
00:07:10,560 --> 00:07:14,000
the latest update on that the yang

170
00:07:14,000 --> 00:07:17,759
models draft uh sandy anything

171
00:07:17,759 --> 00:07:19,919
to say about that one you presented that

172
00:07:19,919 --> 00:07:21,919
um in 109.

173
00:07:21,919 --> 00:07:25,198
uh any updates on that

174
00:07:26,880 --> 00:07:31,520
no here we go sandy

175
00:07:31,520 --> 00:07:34,719
if i remember yeah

176
00:07:36,880 --> 00:07:40,560
we hear you sandy can you tell me

177
00:07:41,280 --> 00:07:44,720
okay if i remember right

178
00:07:44,720 --> 00:07:47,199
dick said that he will review the

179
00:07:47,199 --> 00:07:47,919
yamamoto

180
00:07:47,919 --> 00:07:51,680
right jake

181
00:07:51,759 --> 00:07:54,879
i'm waiting for your review

182
00:07:54,879 --> 00:07:58,160
ah um sorry about that uh i will

183
00:07:58,160 --> 00:08:01,520
uh i will get right on that then um

184
00:08:01,520 --> 00:08:05,280
thank you for uh i i must have dropped

185
00:08:05,280 --> 00:08:06,080
that sorry

186
00:08:06,080 --> 00:08:09,520
uh i i will i will

187
00:08:09,520 --> 00:08:11,360
look for that and make sure you get it

188
00:08:11,360 --> 00:08:14,639
uh by the next week

189
00:08:14,639 --> 00:08:16,960
and anybody else i appreciate anyone

190
00:08:16,960 --> 00:08:17,759
else who wants to

191
00:08:17,759 --> 00:08:19,840
to review as well i'm sure sandy you

192
00:08:19,840 --> 00:08:20,960
would

193
00:08:20,960 --> 00:08:27,120
appreciate uh other reviews as well

194
00:08:27,120 --> 00:08:29,599
um we have the uh multicast to the

195
00:08:29,599 --> 00:08:30,560
browser drafts

196
00:08:30,560 --> 00:08:33,919
um two of them were sent to uh

197
00:08:33,919 --> 00:08:38,080
yang dr um early review

198
00:08:38,080 --> 00:08:42,479
uh which is misspelled

199
00:08:42,479 --> 00:08:45,279
there there we go

200
00:08:46,640 --> 00:08:49,760
misspelled poorly um

201
00:08:49,760 --> 00:08:52,800
the seaback and dorms draft were uh

202
00:08:52,800 --> 00:08:58,160
sent to the yang doctors um

203
00:08:58,320 --> 00:09:01,519
and jake is oh uh the the

204
00:09:01,519 --> 00:09:04,640
uh the nat draft uh has been adopted

205
00:09:04,640 --> 00:09:07,040
since uh 109

206
00:09:07,040 --> 00:09:10,320
and josh uh and jake is going to

207
00:09:10,320 --> 00:09:11,839
provide updates on all four of those

208
00:09:11,839 --> 00:09:13,360
today

209
00:09:13,360 --> 00:09:16,000
um and mike is gonna uh mike or one of

210
00:09:16,000 --> 00:09:18,000
his co-authors will talk about

211
00:09:18,000 --> 00:09:21,279
the telemetry draft uh other drafts

212
00:09:21,279 --> 00:09:22,800
there was the um

213
00:09:22,800 --> 00:09:26,000
redundant ingress failover draft um that

214
00:09:26,000 --> 00:09:28,080
was presented in 109

215
00:09:28,080 --> 00:09:31,440
uh informationally um haven't seen

216
00:09:31,440 --> 00:09:34,240
uh looking for comments at the time um i

217
00:09:34,240 --> 00:09:35,120
haven't seen

218
00:09:35,120 --> 00:09:38,320
any updates or anything from that

219
00:09:38,320 --> 00:09:41,200
since um

220
00:09:42,320 --> 00:09:45,519
and anything else anyone wants to cover

221
00:09:45,519 --> 00:09:48,800
talk about if not

222
00:09:48,800 --> 00:09:52,399
i think we can go to

223
00:09:52,959 --> 00:09:58,640
mike i'm gonna bring up your slides

224
00:09:59,170 --> 00:10:02,079
[Music]

225
00:10:02,079 --> 00:10:05,839
thank you sir

226
00:10:11,279 --> 00:10:15,680
okay can you see the slide

227
00:10:16,480 --> 00:10:19,839
yeah can you hear me okay yes

228
00:10:20,079 --> 00:10:23,040
all right very good

229
00:10:23,200 --> 00:10:26,720
so this draft uh and warren

230
00:10:26,720 --> 00:10:28,560
can feel the pain as well but we've been

231
00:10:28,560 --> 00:10:30,000
working on this for a

232
00:10:30,000 --> 00:10:34,800
long long time and we received a

233
00:10:35,279 --> 00:10:39,519
daunting amount of comments um discusses

234
00:10:39,519 --> 00:10:43,279
during iesj review and we've been slowly

235
00:10:43,279 --> 00:10:45,040
picking away at them at first we just

236
00:10:45,040 --> 00:10:47,839
kind of just ignored them

237
00:10:47,839 --> 00:10:50,160
because we had a lot more better things

238
00:10:50,160 --> 00:10:51,680
to do and we're just kind of over the

239
00:10:51,680 --> 00:10:52,480
draft but

240
00:10:52,480 --> 00:10:55,200
um we are still picking away at them if

241
00:10:55,200 --> 00:11:01,839
you go to the next slide

242
00:11:02,320 --> 00:11:06,560
you'll see the document history um

243
00:11:06,720 --> 00:11:09,360
in just the last few months anyway and

244
00:11:09,360 --> 00:11:09,839
so

245
00:11:09,839 --> 00:11:13,360
what we've done is uh so alyssa

246
00:11:13,360 --> 00:11:16,800
is the first one who made a quite a list

247
00:11:16,800 --> 00:11:17,120
of

248
00:11:17,120 --> 00:11:20,240
of comments uh and just

249
00:11:20,240 --> 00:11:23,440
in in total it's just a it's just a lot

250
00:11:23,440 --> 00:11:23,920
of work

251
00:11:23,920 --> 00:11:26,640
just editing and adding explanations of

252
00:11:26,640 --> 00:11:28,640
different things and so we submitted a

253
00:11:28,640 --> 00:11:30,399
new draft after

254
00:11:30,399 --> 00:11:32,320
her comments and her discuss was then

255
00:11:32,320 --> 00:11:33,920
cleared

256
00:11:33,920 --> 00:11:37,519
we did the same with romans comments

257
00:11:37,519 --> 00:11:40,720
and submitted a new draft

258
00:11:40,720 --> 00:11:44,079
which is the one we have now he cleared

259
00:11:44,079 --> 00:11:47,279
his discus and so

260
00:11:47,279 --> 00:11:49,519
what we have now is one remaining

261
00:11:49,519 --> 00:11:50,320
discuss

262
00:11:50,320 --> 00:11:57,839
on the next slide i think it shows

263
00:12:00,320 --> 00:12:04,240
no we'll get to that one but um

264
00:12:08,839 --> 00:12:09,840
which

265
00:12:09,840 --> 00:12:11,040
[Music]

266
00:12:11,040 --> 00:12:14,880
okay slide one two three

267
00:12:15,279 --> 00:12:17,120
yeah just stay on three then that's

268
00:12:17,120 --> 00:12:18,639
perfect yeah this just gives you an

269
00:12:18,639 --> 00:12:20,320
example of some of the editing

270
00:12:20,320 --> 00:12:23,360
um that was needed because

271
00:12:23,360 --> 00:12:25,120
with all the comments people say why is

272
00:12:25,120 --> 00:12:27,600
it taking you so long well there's just

273
00:12:27,600 --> 00:12:29,600
a lot of comments like and that just

274
00:12:29,600 --> 00:12:31,440
take time to address and recreating

275
00:12:31,440 --> 00:12:34,720
paragraphs and um one of them was

276
00:12:34,720 --> 00:12:36,880
you know it appears that you're using

277
00:12:36,880 --> 00:12:39,680
recommend using arp sponge

278
00:12:39,680 --> 00:12:42,560
and so providing some general caution

279
00:12:42,560 --> 00:12:44,240
about

280
00:12:44,240 --> 00:12:47,120
our poisoning and false advertising and

281
00:12:47,120 --> 00:12:48,320
so then we just

282
00:12:48,320 --> 00:12:51,440
recreated that

283
00:12:51,440 --> 00:12:54,079
and kid gave an explanation about it and

284
00:12:54,079 --> 00:12:55,200
had to look up

285
00:12:55,200 --> 00:12:57,200
arp sponge and all that and try to make

286
00:12:57,200 --> 00:12:58,800
a reasonable

287
00:12:58,800 --> 00:13:01,920
discussion about it um

288
00:13:01,920 --> 00:13:05,360
and then just on and on ago so just

289
00:13:05,360 --> 00:13:06,800
this is what we're doing and it the

290
00:13:06,800 --> 00:13:08,800
process is slow but it is working and i

291
00:13:08,800 --> 00:13:09,120
would

292
00:13:09,120 --> 00:13:13,519
anticipate that we will

293
00:13:13,519 --> 00:13:16,320
be done and really done with this strap

294
00:13:16,320 --> 00:13:18,000
by next ietf

295
00:13:18,000 --> 00:13:21,200
um assuming that uh the remaining

296
00:13:21,200 --> 00:13:22,800
discusses are addressed if you go to the

297
00:13:22,800 --> 00:13:25,760
next slide let's

298
00:13:25,839 --> 00:13:28,480
yeah okay so benjamin's these are the

299
00:13:28,480 --> 00:13:29,279
remaining

300
00:13:29,279 --> 00:13:32,240
uh he's the last one who made um a list

301
00:13:32,240 --> 00:13:35,040
of comments and there's pages of them

302
00:13:35,040 --> 00:13:38,959
and so um we will address those

303
00:13:38,959 --> 00:13:42,240
and submit a new draft in the next

304
00:13:42,240 --> 00:13:45,360
few weeks and then if he clears them

305
00:13:45,360 --> 00:13:48,959
which he probably will then we

306
00:13:48,959 --> 00:13:50,959
hopefully are done there are several

307
00:13:50,959 --> 00:13:53,600
other people who made comments

308
00:13:53,600 --> 00:13:57,040
during the uh review

309
00:13:57,040 --> 00:14:02,480
but yeah if you go to the last slide

310
00:14:02,480 --> 00:14:05,519
uh but we should be good to publish

311
00:14:05,519 --> 00:14:08,240
uh once that last discuss is cleared so

312
00:14:08,240 --> 00:14:09,600
um it is a good

313
00:14:09,600 --> 00:14:11,360
you know unbiased but it is a good

314
00:14:11,360 --> 00:14:13,760
document that just discusses

315
00:14:13,760 --> 00:14:17,839
issues in multicast in a

316
00:14:17,839 --> 00:14:21,040
wi-fi environment and

317
00:14:21,040 --> 00:14:22,880
there have been comments to add

318
00:14:22,880 --> 00:14:24,480
additional things to it

319
00:14:24,480 --> 00:14:25,680
because there's always some good points

320
00:14:25,680 --> 00:14:28,000
and we've added a lot of them but now

321
00:14:28,000 --> 00:14:29,440
we're not adding anything else to it

322
00:14:29,440 --> 00:14:30,959
we're just trying to finish it up and be

323
00:14:30,959 --> 00:14:33,119
done

324
00:14:33,600 --> 00:14:37,120
any questions about any of that

325
00:14:42,800 --> 00:14:46,079
all right mike uh

326
00:14:46,079 --> 00:14:48,399
moving right along do you wanna do the

327
00:14:48,399 --> 00:14:50,720
telemetry

328
00:14:50,720 --> 00:14:58,160
are you sure learning with that yeah i

329
00:14:58,160 --> 00:14:59,600
don't see any of my other

330
00:14:59,600 --> 00:15:04,240
co-authors online so it's me it appears

331
00:15:05,279 --> 00:15:09,600
all right let's bring that one up

332
00:15:10,800 --> 00:15:13,839
hold on a second

333
00:15:37,000 --> 00:15:41,839
screen will be

334
00:16:06,839 --> 00:16:09,839
sometimes

335
00:16:11,360 --> 00:16:22,639
this one no not that

336
00:16:22,639 --> 00:16:26,000
okay about this one

337
00:16:26,560 --> 00:16:31,439
okay maybe this will work better um

338
00:16:33,680 --> 00:16:35,920
like while i'm furiously clicking around

339
00:16:35,920 --> 00:16:37,360
here why don't you uh

340
00:16:37,360 --> 00:16:39,199
begin to start talking about this

341
00:16:39,199 --> 00:16:41,759
drawing yeah yeah i'll get there

342
00:16:41,759 --> 00:16:44,079
sure yeah there's not a ton to be said

343
00:16:44,079 --> 00:16:45,199
about it um

344
00:16:45,199 --> 00:16:47,279
anyway i do see how you on the line as

345
00:16:47,279 --> 00:16:49,360
well so one of my co-authors is here

346
00:16:49,360 --> 00:16:50,959
we're

347
00:16:50,959 --> 00:16:52,480
sharing in the morning pain with all of

348
00:16:52,480 --> 00:16:54,720
you thank you how you so

349
00:16:54,720 --> 00:16:56,079
chime in if there's anything you want to

350
00:16:56,079 --> 00:16:58,480
add but so this draft was recently

351
00:16:58,480 --> 00:16:59,440
adopted

352
00:16:59,440 --> 00:17:02,639
by mbondi working group it's

353
00:17:02,639 --> 00:17:05,679
uh we added a few authors as well who

354
00:17:05,679 --> 00:17:06,640
are very interested

355
00:17:06,640 --> 00:17:09,760
in working on this topic

356
00:17:09,760 --> 00:17:13,760
and anxious to contribute

357
00:17:13,760 --> 00:17:20,480
we do highlight a variety of telemetry

358
00:17:21,039 --> 00:17:25,199
solutions in the draft and

359
00:17:25,199 --> 00:17:27,599
describe the problem i think probably

360
00:17:27,599 --> 00:17:28,400
what we'll do

361
00:17:28,400 --> 00:17:33,200
is there is a fair amount of interest in

362
00:17:33,200 --> 00:17:35,840
uh increasingly interest which is good

363
00:17:35,840 --> 00:17:36,880
in oam

364
00:17:36,880 --> 00:17:39,360
related topics so we'll probably make

365
00:17:39,360 --> 00:17:40,559
that more robust

366
00:17:40,559 --> 00:17:42,720
in the document just kind of describing

367
00:17:42,720 --> 00:17:43,600
that

368
00:17:43,600 --> 00:17:46,799
better if it gets too big we'll

369
00:17:46,799 --> 00:17:49,200
propose spitting it off into its own oam

370
00:17:49,200 --> 00:17:51,280
draft perhaps

371
00:17:51,280 --> 00:17:53,360
in just more of a multicast story and

372
00:17:53,360 --> 00:17:55,039
type of a draft

373
00:17:55,039 --> 00:17:57,760
but uh

374
00:17:58,240 --> 00:17:59,679
i am looking forward to working on this

375
00:17:59,679 --> 00:18:01,360
draft because it is a it is a

376
00:18:01,360 --> 00:18:04,480
a good topic if you go to the next slide

377
00:18:04,480 --> 00:18:06,080
we'll probably just fly through some of

378
00:18:06,080 --> 00:18:07,919
these slides so this is is um

379
00:18:07,919 --> 00:18:10,080
is can you see this slide clearly or is

380
00:18:10,080 --> 00:18:14,000
it good it looks a little

381
00:18:14,000 --> 00:18:15,600
enough but it does uh there's some

382
00:18:15,600 --> 00:18:17,679
artifacts on little squares in the upper

383
00:18:17,679 --> 00:18:18,480
right hand side

384
00:18:18,480 --> 00:18:20,320
but it's fine i can see all the words in

385
00:18:20,320 --> 00:18:21,919
it yeah there you go moving it around

386
00:18:21,919 --> 00:18:23,919
helps a little bit

387
00:18:23,919 --> 00:18:26,880
um keep doing whatever you got to do

388
00:18:26,880 --> 00:18:27,440
that's fine

389
00:18:27,440 --> 00:18:28,960
to try to make look good for future

390
00:18:28,960 --> 00:18:30,640
presentations but

391
00:18:30,640 --> 00:18:32,880
uh so multicast traffic monitoring is

392
00:18:32,880 --> 00:18:34,880
important just like as it is with

393
00:18:34,880 --> 00:18:36,480
unicast

394
00:18:36,480 --> 00:18:37,760
it's important to reconstruct and

395
00:18:37,760 --> 00:18:39,600
visualize that multicast tree

396
00:18:39,600 --> 00:18:42,000
um for performance monitoring and

397
00:18:42,000 --> 00:18:43,840
troubleshooting

398
00:18:43,840 --> 00:18:46,400
and there are some techniques that can

399
00:18:46,400 --> 00:18:47,120
be used

400
00:18:47,120 --> 00:18:50,320
for multicast and that's those

401
00:18:50,320 --> 00:18:53,679
techniques for unicast are

402
00:18:53,679 --> 00:18:55,600
being developed in ippm working group it

403
00:18:55,600 --> 00:18:57,280
was agreed to work on the multicast

404
00:18:57,280 --> 00:18:59,918
pieces here

405
00:19:00,480 --> 00:19:02,799
they do have flaws for multicast the

406
00:19:02,799 --> 00:19:04,480
current on path techniques and so there

407
00:19:04,480 --> 00:19:05,520
are some

408
00:19:05,520 --> 00:19:08,240
solutions that are discussed maybe some

409
00:19:08,240 --> 00:19:09,520
new ones that will

410
00:19:09,520 --> 00:19:12,160
perhaps introduce to the draft as well

411
00:19:12,160 --> 00:19:13,440
to get some idea

412
00:19:13,440 --> 00:19:16,799
um but the whole

413
00:19:16,799 --> 00:19:19,919
the goal is to um to allow the original

414
00:19:19,919 --> 00:19:21,039
multicast tree to be

415
00:19:21,039 --> 00:19:22,480
correctly reconstructed without

416
00:19:22,480 --> 00:19:24,160
unnecessary unnecessary

417
00:19:24,160 --> 00:19:27,840
replication of the telemetry information

418
00:19:27,840 --> 00:19:30,399
next slide

419
00:19:37,200 --> 00:19:39,200
so there are a couple different

420
00:19:39,200 --> 00:19:40,240
solutions that

421
00:19:40,240 --> 00:19:43,360
we have there's a per post card per hot

422
00:19:43,360 --> 00:19:46,080
postcard and a per section postcard

423
00:19:46,080 --> 00:19:50,720
um which are both enhancements um

424
00:19:50,720 --> 00:19:53,840
the per postcard is

425
00:19:53,840 --> 00:19:57,840
um a branch node um

426
00:19:57,840 --> 00:20:00,880
replicates the packets and each branch

427
00:20:00,880 --> 00:20:02,559
node adds a branch identifier to the

428
00:20:02,559 --> 00:20:04,799
instruction header

429
00:20:04,799 --> 00:20:07,679
uh the next go to then go to the next

430
00:20:07,679 --> 00:20:10,000
slide

431
00:20:16,799 --> 00:20:19,120
so per section per section postcard it's

432
00:20:19,120 --> 00:20:20,480
uh

433
00:20:20,480 --> 00:20:23,280
um it's a postcard is it's and that's

434
00:20:23,280 --> 00:20:24,720
what it's called in the fppm working

435
00:20:24,720 --> 00:20:25,280
group it's the

436
00:20:25,280 --> 00:20:26,880
postcard is set that each section's

437
00:20:26,880 --> 00:20:29,600
endnode and the postcard contains data

438
00:20:29,600 --> 00:20:31,840
for the entire section

439
00:20:31,840 --> 00:20:35,280
um and those postcards can be easily

440
00:20:35,280 --> 00:20:36,080
stitched together

441
00:20:36,080 --> 00:20:38,799
there's no need to modify the existing

442
00:20:38,799 --> 00:20:40,159
iom

443
00:20:40,159 --> 00:20:49,840
header format next slide

444
00:20:51,200 --> 00:20:54,080
so as i mentioned at the beginning um

445
00:20:54,080 --> 00:20:55,840
perhaps we will add more of an oem

446
00:20:55,840 --> 00:20:57,520
overview at the start

447
00:20:57,520 --> 00:21:03,679
we'll develop the sections um

448
00:21:03,679 --> 00:21:05,200
i'm seeing a variety of things here but

449
00:21:05,200 --> 00:21:07,760
i think that's basically what we're

450
00:21:07,760 --> 00:21:09,360
the point we wanted to make is that

451
00:21:09,360 --> 00:21:11,520
anything else you wanted to add

452
00:21:11,520 --> 00:21:14,720
value to what we plan to do

453
00:21:14,720 --> 00:21:18,240
in the future for this draft

454
00:21:26,720 --> 00:21:30,240
i suppose not so uh yeah

455
00:21:30,240 --> 00:21:32,799
any questions

456
00:21:43,440 --> 00:21:45,120
just kind of as a general comment and

457
00:21:45,120 --> 00:21:46,960
wendy and i kind of

458
00:21:46,960 --> 00:21:50,799
swap some emails back and forth but um

459
00:21:50,799 --> 00:21:54,320
there are some newer applications

460
00:21:54,320 --> 00:21:57,919
for multicats that are in my opinion

461
00:21:57,919 --> 00:21:58,720
making

462
00:21:58,720 --> 00:22:02,720
multicast more and more relevant um

463
00:22:02,720 --> 00:22:04,559
including live streaming which is taking

464
00:22:04,559 --> 00:22:05,840
off and

465
00:22:05,840 --> 00:22:08,960
um it's not all about sports anymore

466
00:22:08,960 --> 00:22:12,960
and it's even live sports and so i think

467
00:22:12,960 --> 00:22:15,600
of these oem related techniques as

468
00:22:15,600 --> 00:22:17,919
multicast

469
00:22:17,919 --> 00:22:20,320
is projected to take more and more of

470
00:22:20,320 --> 00:22:21,679
network

471
00:22:21,679 --> 00:22:24,840
bandwidth will become even more

472
00:22:24,840 --> 00:22:26,720
important

473
00:22:26,720 --> 00:22:28,400
and in fact as a side note it may be

474
00:22:28,400 --> 00:22:30,320
helpful to

475
00:22:30,320 --> 00:22:32,320
for mbondi to have maybe a new draft

476
00:22:32,320 --> 00:22:35,520
that kind of talks about some of those

477
00:22:35,919 --> 00:22:38,840
new relevant techniques that's using

478
00:22:38,840 --> 00:22:41,360
multicast

479
00:22:41,360 --> 00:22:44,479
jake i see you in the queue

480
00:22:50,640 --> 00:22:54,159
jake you're

481
00:22:54,159 --> 00:22:58,400
free to speak sorry yes

482
00:22:58,400 --> 00:23:01,600
all right all right good uh so

483
00:23:01,600 --> 00:23:05,520
yeah just a quick question about uh the

484
00:23:05,520 --> 00:23:09,280
is there um

485
00:23:09,280 --> 00:23:11,600
i i skimmed the draft but i there there

486
00:23:11,600 --> 00:23:13,200
was some detail like are you addressing

487
00:23:13,200 --> 00:23:14,000
the sort of

488
00:23:14,000 --> 00:23:17,600
uh scalability issues of

489
00:23:17,600 --> 00:23:20,880
the analysis of the oem uh

490
00:23:20,880 --> 00:23:24,960
telemetry across a multicast network or

491
00:23:24,960 --> 00:23:26,960
as part of the draft or is that sort of

492
00:23:26,960 --> 00:23:29,280
the to the apps

493
00:23:29,280 --> 00:23:32,559
that's left to the apps yeah we're

494
00:23:32,559 --> 00:23:35,760
we're addressing the efficient

495
00:23:35,760 --> 00:23:39,120
sending of telemetry data to wherever

496
00:23:39,120 --> 00:23:41,919
you want that to be sent

497
00:23:41,919 --> 00:23:45,520
okay that um okay

498
00:23:45,520 --> 00:23:48,080
so uh there's not like recommendations

499
00:23:48,080 --> 00:23:48,799
you think

500
00:23:48,799 --> 00:23:50,720
need to go in there that's like already

501
00:23:50,720 --> 00:23:53,360
sort of reasonably well covered by the

502
00:23:53,360 --> 00:23:56,960
by the apps um yeah you know that's a

503
00:23:56,960 --> 00:23:59,840
great point maybe uh we probably should

504
00:23:59,840 --> 00:24:01,360
add

505
00:24:01,360 --> 00:24:02,640
because i'm not even familiar with some

506
00:24:02,640 --> 00:24:05,200
of those apps so that would be a good uh

507
00:24:05,200 --> 00:24:08,240
thing to look into of

508
00:24:08,240 --> 00:24:10,880
all right and just yeah yeah just

509
00:24:10,880 --> 00:24:11,679
wondering

510
00:24:11,679 --> 00:24:13,760
you know it seems kind of maybe useful

511
00:24:13,760 --> 00:24:16,400
in theory i just

512
00:24:16,400 --> 00:24:18,640
i'm not quite sure what to do yeah all

513
00:24:18,640 --> 00:24:20,080
right thanks well we'll find out just

514
00:24:20,080 --> 00:24:20,400
kidding

515
00:24:20,400 --> 00:24:23,200
find out the comment yeah we'll put

516
00:24:23,200 --> 00:24:24,320
something in in that

517
00:24:24,320 --> 00:24:28,480
in the draft i think that's good thanks

518
00:24:28,640 --> 00:24:30,240
great thanks mike and and just a little

519
00:24:30,240 --> 00:24:32,400
bit background i forgot to mention

520
00:24:32,400 --> 00:24:35,840
um this draft was uh adopted

521
00:24:35,840 --> 00:24:37,760
it's so this was presented in 109 in

522
00:24:37,760 --> 00:24:39,679
both mbondi

523
00:24:39,679 --> 00:24:43,679
and pim uh previously had been adopted

524
00:24:43,679 --> 00:24:46,960
or had been presented in ippm

525
00:24:46,960 --> 00:24:48,720
and there was i think you like you

526
00:24:48,720 --> 00:24:50,080
started at ipp

527
00:24:50,080 --> 00:24:53,520
ippm um they were busy

528
00:24:53,520 --> 00:24:56,559
not interested uh and then uh presented

529
00:24:56,559 --> 00:24:57,279
in pim and

530
00:24:57,279 --> 00:25:00,240
and then bondi last time and it was

531
00:25:00,240 --> 00:25:02,480
decided that mbondi

532
00:25:02,480 --> 00:25:04,559
with the operational aspects of this uh

533
00:25:04,559 --> 00:25:07,919
draft seemed like a better fit so

534
00:25:07,919 --> 00:25:09,919
that's how we we ended up with it and it

535
00:25:09,919 --> 00:25:11,279
was adopted

536
00:25:11,279 --> 00:25:15,840
with fairly strong consensus so

537
00:25:17,520 --> 00:25:21,279
all right moving right along um

538
00:25:21,279 --> 00:25:24,320
i believe who's

539
00:25:24,320 --> 00:25:29,840
up next uh jake are you next

540
00:25:30,400 --> 00:25:34,480
oriole oriole is up so

541
00:25:34,480 --> 00:25:37,679
oh good morning or good afternoon um

542
00:25:37,679 --> 00:25:40,400
hold on one second while i bring up your

543
00:25:40,400 --> 00:25:43,840
slides here

544
00:25:45,440 --> 00:25:47,600
i'm located in europe so i'm fully awake

545
00:25:47,600 --> 00:25:49,840
but this time yeah

546
00:25:49,840 --> 00:25:53,120
a little less so here in the us it could

547
00:25:53,120 --> 00:25:55,520
explain my

548
00:25:55,520 --> 00:25:59,520
challenges in clicking things here

549
00:26:06,480 --> 00:26:09,120
no west coast sympathy for east coasters

550
00:26:09,120 --> 00:26:11,840
yeah

551
00:26:14,400 --> 00:26:25,840
all right and here coming up here

552
00:26:26,400 --> 00:26:29,600
here we go okay

553
00:26:30,799 --> 00:26:34,320
so hello everybody

554
00:26:34,320 --> 00:26:36,720
my name is oriol espanol and i work as a

555
00:26:36,720 --> 00:26:39,200
umedcast system engineer for umezad

556
00:26:39,200 --> 00:26:41,279
i'm actually very excited to be here

557
00:26:41,279 --> 00:26:42,400
today and share

558
00:26:42,400 --> 00:26:45,760
some details of our services with you

559
00:26:45,760 --> 00:26:48,240
just as a background short story why

560
00:26:48,240 --> 00:26:50,159
we're here today apparently and i didn't

561
00:26:50,159 --> 00:26:51,120
know this before

562
00:26:51,120 --> 00:26:54,159
um is one of the top three contributors

563
00:26:54,159 --> 00:26:57,120
of multicast traffic on the mbom with

564
00:26:57,120 --> 00:27:00,240
our umed cast terrestrial service

565
00:27:00,240 --> 00:27:02,400
i understand that i understand that some

566
00:27:02,400 --> 00:27:03,840
of you thought it would be interesting

567
00:27:03,840 --> 00:27:05,679
to know more about our case

568
00:27:05,679 --> 00:27:09,039
so leonard made this possible thanks to

569
00:27:09,039 --> 00:27:11,679
common contact that we have engine so

570
00:27:11,679 --> 00:27:12,880
thank you leonard for

571
00:27:12,880 --> 00:27:16,320
making this possible okay

572
00:27:16,320 --> 00:27:19,679
so next slide so the plan is

573
00:27:19,679 --> 00:27:22,240
that we have a short presentation on who

574
00:27:22,240 --> 00:27:24,080
we are and what we do

575
00:27:24,080 --> 00:27:26,559
uh quick system overview on our

576
00:27:26,559 --> 00:27:28,240
satellite and terrestrial services

577
00:27:28,240 --> 00:27:30,080
follow up by the details about uh

578
00:27:30,080 --> 00:27:31,520
terrestrial service

579
00:27:31,520 --> 00:27:34,240
which i presume is the most interesting

580
00:27:34,240 --> 00:27:35,279
part to you

581
00:27:35,279 --> 00:27:38,240
i have around 15 slides in total to

582
00:27:38,240 --> 00:27:39,120
present

583
00:27:39,120 --> 00:27:41,200
but feel free to ask me any questions

584
00:27:41,200 --> 00:27:42,640
during the presentation if something's

585
00:27:42,640 --> 00:27:43,279
not clear

586
00:27:43,279 --> 00:27:45,279
or you won't you want more details about

587
00:27:45,279 --> 00:27:46,399
that

588
00:27:46,399 --> 00:27:50,320
so next slide please

589
00:27:50,880 --> 00:27:54,080
so who who we are and what we do umitat

590
00:27:54,080 --> 00:27:54,880
stands for

591
00:27:54,880 --> 00:27:56,480
european organization for the

592
00:27:56,480 --> 00:27:58,320
exploitation of meteorological

593
00:27:58,320 --> 00:27:59,440
satellites

594
00:27:59,440 --> 00:28:01,600
and we are a public sector organization

595
00:28:01,600 --> 00:28:02,720
with currently

596
00:28:02,720 --> 00:28:05,840
30 funding european member states

597
00:28:05,840 --> 00:28:08,559
our mission is to maintain and exploit

598
00:28:08,559 --> 00:28:09,440
the european

599
00:28:09,440 --> 00:28:11,600
meteorological satellites that means

600
00:28:11,600 --> 00:28:13,760
that umassat is responsible for the

601
00:28:13,760 --> 00:28:14,320
launch

602
00:28:14,320 --> 00:28:16,880
and operation of the satellites and

603
00:28:16,880 --> 00:28:19,120
especially relevant for us today

604
00:28:19,120 --> 00:28:21,039
delivering satellite data to the end

605
00:28:21,039 --> 00:28:23,200
users

606
00:28:23,200 --> 00:28:26,000
the end users use this data for weather

607
00:28:26,000 --> 00:28:26,799
prediction

608
00:28:26,799 --> 00:28:29,840
and global monitoring of climate change

609
00:28:29,840 --> 00:28:31,600
climate change and weather prediction is

610
00:28:31,600 --> 00:28:34,080
a common global interest and um has

611
00:28:34,080 --> 00:28:36,000
established cooperation with partners

612
00:28:36,000 --> 00:28:37,440
from other countries such as

613
00:28:37,440 --> 00:28:40,080
china india japan russia south korea and

614
00:28:40,080 --> 00:28:42,000
the united states

615
00:28:42,000 --> 00:28:44,159
typically this collaboration includes

616
00:28:44,159 --> 00:28:45,279
some sort of

617
00:28:45,279 --> 00:28:48,320
exchange of data our

618
00:28:48,320 --> 00:28:50,799
users are metrological services of our

619
00:28:50,799 --> 00:28:52,080
member states

620
00:28:52,080 --> 00:28:54,880
research institutions universities but

621
00:28:54,880 --> 00:28:55,279
also

622
00:28:55,279 --> 00:28:57,840
private users and commercial users and

623
00:28:57,840 --> 00:29:00,080
of course our bilateral partners from

624
00:29:00,080 --> 00:29:00,480
the

625
00:29:00,480 --> 00:29:03,760
countries mentioned before

626
00:29:04,399 --> 00:29:06,640
our users are mainly located in europe

627
00:29:06,640 --> 00:29:08,320
and that is basically

628
00:29:08,320 --> 00:29:11,440
inside the footprint of our satellite

629
00:29:11,440 --> 00:29:14,159
service but also more and more around

630
00:29:14,159 --> 00:29:15,039
the world

631
00:29:15,039 --> 00:29:18,640
and we reach these users thanks to our

632
00:29:18,640 --> 00:29:23,679
terrestrial service so next slide please

633
00:29:25,360 --> 00:29:27,279
these slides present a system overview

634
00:29:27,279 --> 00:29:29,679
of the umedkas which is umidsat's push

635
00:29:29,679 --> 00:29:31,039
service

636
00:29:31,039 --> 00:29:33,919
that delivers environmental data in near

637
00:29:33,919 --> 00:29:35,039
real time to

638
00:29:35,039 --> 00:29:38,080
its registered users the data delivery

639
00:29:38,080 --> 00:29:40,159
is implemented as an ip multi-class

640
00:29:40,159 --> 00:29:43,039
one-to-many dissemination system with a

641
00:29:43,039 --> 00:29:45,200
single transmission from the server and

642
00:29:45,200 --> 00:29:46,880
guaranteed timeliness distribution to

643
00:29:46,880 --> 00:29:49,279
the end users reception stations

644
00:29:49,279 --> 00:29:51,520
therefore it allows the end users to

645
00:29:51,520 --> 00:29:53,679
receive the data

646
00:29:53,679 --> 00:29:56,159
on the reception station shortly after

647
00:29:56,159 --> 00:29:58,240
umitzat makes it available

648
00:29:58,240 --> 00:30:00,480
on the left side you see the data

649
00:30:00,480 --> 00:30:02,080
acquisition process

650
00:30:02,080 --> 00:30:04,080
directly from the satellites operated by

651
00:30:04,080 --> 00:30:05,360
umezad and

652
00:30:05,360 --> 00:30:07,200
into the ground into the ground station

653
00:30:07,200 --> 00:30:10,000
and into um headquarters in armstrong

654
00:30:10,000 --> 00:30:13,279
germany from there is sent out

655
00:30:13,279 --> 00:30:16,399
via ip multicast to our satellite and

656
00:30:16,399 --> 00:30:18,480
terrestrial services

657
00:30:18,480 --> 00:30:20,880
on the top side uh this is the humid

658
00:30:20,880 --> 00:30:22,320
cast satellite service

659
00:30:22,320 --> 00:30:24,080
for this service the multicast is

660
00:30:24,080 --> 00:30:26,000
transferred via dedicated link from

661
00:30:26,000 --> 00:30:28,240
yumasa to the abilene facility

662
00:30:28,240 --> 00:30:30,640
there the multicast is encoded into a

663
00:30:30,640 --> 00:30:32,720
dvd signal and transmitted to

664
00:30:32,720 --> 00:30:34,640
geostationary communication satellites

665
00:30:34,640 --> 00:30:36,159
for broadcast to

666
00:30:36,159 --> 00:30:38,799
user reception stations its reception

667
00:30:38,799 --> 00:30:41,039
station decodes the signal and recreates

668
00:30:41,039 --> 00:30:41,840
the original

669
00:30:41,840 --> 00:30:44,240
multicast stream in the middle you see

670
00:30:44,240 --> 00:30:46,000
humid cast terrestrial over jian

671
00:30:46,000 --> 00:30:47,840
this is an evolution of the humid cast

672
00:30:47,840 --> 00:30:49,200
satellite system

673
00:30:49,200 --> 00:30:51,279
however instead of using commercial

674
00:30:51,279 --> 00:30:52,960
satellites for dissemination to the

675
00:30:52,960 --> 00:30:53,760
users

676
00:30:53,760 --> 00:30:55,760
the terrestrial service relies on the

677
00:30:55,760 --> 00:30:58,080
network infrastructure provided by gm

678
00:30:58,080 --> 00:31:01,760
across europe the service relies on

679
00:31:01,760 --> 00:31:04,399
all native multicasts however in order

680
00:31:04,399 --> 00:31:04,880
to

681
00:31:04,880 --> 00:31:06,200
overcome islands of

682
00:31:06,200 --> 00:31:08,000
non-multicast-enabled networks

683
00:31:08,000 --> 00:31:10,799
gn also provides the option to use gre

684
00:31:10,799 --> 00:31:11,840
tunnels

685
00:31:11,840 --> 00:31:13,679
directly to the reception stations of

686
00:31:13,679 --> 00:31:15,600
the end users these are manually

687
00:31:15,600 --> 00:31:16,880
activated on demand

688
00:31:16,880 --> 00:31:19,679
when a temporal loss of multicast is

689
00:31:19,679 --> 00:31:21,679
detected

690
00:31:21,679 --> 00:31:23,039
at the bottom you see humid cast

691
00:31:23,039 --> 00:31:25,039
terrestrial over internet service

692
00:31:25,039 --> 00:31:27,600
this is a further evolution of the the

693
00:31:27,600 --> 00:31:28,720
terrestrial system

694
00:31:28,720 --> 00:31:30,799
however instead of using the gm network

695
00:31:30,799 --> 00:31:33,679
this service relies on the internet

696
00:31:33,679 --> 00:31:36,720
commercial service provider operates the

697
00:31:36,720 --> 00:31:39,919
l2tp ipsec tunnels for it for us

698
00:31:39,919 --> 00:31:42,080
which encapsulates the multicast traffic

699
00:31:42,080 --> 00:31:45,760
from umsat and sends it to the end user

700
00:31:45,760 --> 00:31:48,080
one added benefit of this setup is that

701
00:31:48,080 --> 00:31:49,519
it's not traversal without

702
00:31:49,519 --> 00:31:51,200
requiring a reconfiguration of the end

703
00:31:51,200 --> 00:31:52,799
users firewalls

704
00:31:52,799 --> 00:31:54,799
um a key takeaway from this slide is

705
00:31:54,799 --> 00:31:56,399
that we have only one source of

706
00:31:56,399 --> 00:31:57,760
multicast traffic

707
00:31:57,760 --> 00:31:59,840
we have however different groups other

708
00:31:59,840 --> 00:32:00,960
different group addresses for the

709
00:32:00,960 --> 00:32:02,640
satellite and terrestrial service

710
00:32:02,640 --> 00:32:04,480
the motivation for this is that these

711
00:32:04,480 --> 00:32:07,360
groups require different

712
00:32:07,360 --> 00:32:09,600
reliability configurations so we prefer

713
00:32:09,600 --> 00:32:10,640
to split them

714
00:32:10,640 --> 00:32:12,320
however this being multicast we could

715
00:32:12,320 --> 00:32:13,919
have the same groups for the satellite

716
00:32:13,919 --> 00:32:16,799
and restore services as well

717
00:32:16,799 --> 00:32:19,918
next slide please

718
00:32:20,240 --> 00:32:23,440
so again this slide represents

719
00:32:23,440 --> 00:32:25,440
the segregation of the two terrestrial

720
00:32:25,440 --> 00:32:26,720
streams

721
00:32:26,720 --> 00:32:28,880
and and the motivation why this is

722
00:32:28,880 --> 00:32:30,640
needed uh on one side

723
00:32:30,640 --> 00:32:33,279
we we have the the native multicast

724
00:32:33,279 --> 00:32:35,039
service provided by gian

725
00:32:35,039 --> 00:32:38,159
this is the most cost effective solution

726
00:32:38,159 --> 00:32:41,039
hence the default and and prefer

727
00:32:41,039 --> 00:32:42,880
transport layer

728
00:32:42,880 --> 00:32:44,640
then on top of that gn also provides

729
00:32:44,640 --> 00:32:46,720
these on-demand gre tunnels to

730
00:32:46,720 --> 00:32:49,360
to overcome these islands of non-enabled

731
00:32:49,360 --> 00:32:50,480
multicast

732
00:32:50,480 --> 00:32:53,279
and typically when the user is connected

733
00:32:53,279 --> 00:32:53,919
to an

734
00:32:53,919 --> 00:32:56,240
enron that does not support native

735
00:32:56,240 --> 00:32:57,840
multicast

736
00:32:57,840 --> 00:33:00,480
however we run into what we call the the

737
00:33:00,480 --> 00:33:03,760
eligibility problems that is that

738
00:33:03,760 --> 00:33:06,000
the user either the user is not eligible

739
00:33:06,000 --> 00:33:07,600
to to connect to the entrant maybe

740
00:33:07,600 --> 00:33:08,399
because

741
00:33:08,399 --> 00:33:11,840
the users to not belong to a

742
00:33:11,840 --> 00:33:13,440
representative institution

743
00:33:13,440 --> 00:33:16,080
for instance or radio and second you

744
00:33:16,080 --> 00:33:16,880
must set

745
00:33:16,880 --> 00:33:19,279
data might not be eligible circulating

746
00:33:19,279 --> 00:33:20,880
in the end because the enron

747
00:33:20,880 --> 00:33:23,640
considers this data of

748
00:33:23,640 --> 00:33:26,320
non-non-researched nature

749
00:33:26,320 --> 00:33:29,600
uh because um needs to guarantee access

750
00:33:29,600 --> 00:33:30,240
to

751
00:33:30,240 --> 00:33:33,200
uh to its data to to all national member

752
00:33:33,200 --> 00:33:34,240
states

753
00:33:34,240 --> 00:33:37,039
uh the internet lack of of the human

754
00:33:37,039 --> 00:33:38,000
thruster services was

755
00:33:38,000 --> 00:33:41,360
developed which then uses this l2tp

756
00:33:41,360 --> 00:33:43,200
ipsec encapsulation to deliver the

757
00:33:43,200 --> 00:33:45,919
multicast traffic because as we know the

758
00:33:45,919 --> 00:33:50,640
internet is not multicast capable

759
00:33:50,640 --> 00:33:54,720
um yeah so next slide please

760
00:33:54,880 --> 00:33:57,760
so how how is humid uh this is how is

761
00:33:57,760 --> 00:34:00,320
this um service implemented

762
00:34:00,320 --> 00:34:03,519
so um is a near real-time dissemination

763
00:34:03,519 --> 00:34:04,000
system

764
00:34:04,000 --> 00:34:06,960
based in ib multicast push with

765
00:34:06,960 --> 00:34:07,760
guaranteed

766
00:34:07,760 --> 00:34:10,800
timeliness delivery we distribute our

767
00:34:10,800 --> 00:34:11,440
data

768
00:34:11,440 --> 00:34:14,800
as files and they have like a sort

769
00:34:14,800 --> 00:34:16,159
expiration date

770
00:34:16,159 --> 00:34:19,199
so to speak that means that all data not

771
00:34:19,199 --> 00:34:20,719
distributed within timeliness

772
00:34:20,719 --> 00:34:22,560
is not that interesting for the users

773
00:34:22,560 --> 00:34:23,918
anymore

774
00:34:23,918 --> 00:34:26,480
we do not distribute any video it's just

775
00:34:26,480 --> 00:34:27,839
files

776
00:34:27,839 --> 00:34:31,199
plain files with with satellite data

777
00:34:31,199 --> 00:34:34,639
the this multicast system is based in

778
00:34:34,639 --> 00:34:36,639
in telecast server and and client

779
00:34:36,639 --> 00:34:38,079
software packages

780
00:34:38,079 --> 00:34:41,119
which are provided by by uh sd

781
00:34:41,119 --> 00:34:43,119
engineering by a private company

782
00:34:43,119 --> 00:34:44,879
this software is distributed as

783
00:34:44,879 --> 00:34:47,599
commercial of the shelf

784
00:34:47,599 --> 00:34:49,520
it has been implemented following the

785
00:34:49,520 --> 00:34:52,879
mtp so standard which is based in an

786
00:34:52,879 --> 00:34:58,399
ietf internet draft from november 1997.

787
00:34:58,560 --> 00:35:01,599
because of uh because of this underlying

788
00:35:01,599 --> 00:35:03,040
multicast technology

789
00:35:03,040 --> 00:35:06,079
our output stream is is highly scalable

790
00:35:06,079 --> 00:35:08,160
with the number of users and volumes of

791
00:35:08,160 --> 00:35:09,440
data and

792
00:35:09,440 --> 00:35:11,440
it provides you with side with a sequel

793
00:35:11,440 --> 00:35:14,320
secure way to deliver data to its users

794
00:35:14,320 --> 00:35:17,119
we can target target data delivery to

795
00:35:17,119 --> 00:35:19,760
specific users or groups of users

796
00:35:19,760 --> 00:35:21,920
moreover we we can we can do that

797
00:35:21,920 --> 00:35:24,240
ensuring that our data policy

798
00:35:24,240 --> 00:35:27,680
is is respected we can handle any file

799
00:35:27,680 --> 00:35:31,839
format and size so we can disseminate a

800
00:35:31,839 --> 00:35:32,480
broad

801
00:35:32,480 --> 00:35:35,680
range of products the

802
00:35:35,680 --> 00:35:38,000
the terrestrial service is considered

803
00:35:38,000 --> 00:35:39,599
now complementary

804
00:35:39,599 --> 00:35:41,920
and backup service to the to the main

805
00:35:41,920 --> 00:35:44,480
satellite dissemination system which has

806
00:35:44,480 --> 00:35:48,079
a guaranteed sla

807
00:35:48,230 --> 00:35:49,440
[Music]

808
00:35:49,440 --> 00:35:53,040
next slide please the

809
00:35:53,040 --> 00:35:54,880
telecast this software delivers the

810
00:35:54,880 --> 00:35:56,400
multicast as

811
00:35:56,400 --> 00:35:58,320
single source multicast and the join

812
00:35:58,320 --> 00:36:00,240
messages are

813
00:36:00,240 --> 00:36:03,359
bi igmp v3

814
00:36:03,359 --> 00:36:05,760
as such the sender does not necessarily

815
00:36:05,760 --> 00:36:07,920
need to be aware of who these receiver

816
00:36:07,920 --> 00:36:09,040
receivers are

817
00:36:09,040 --> 00:36:12,480
and how many there are however telecast

818
00:36:12,480 --> 00:36:13,119
implements

819
00:36:13,119 --> 00:36:15,440
three different and complementary

820
00:36:15,440 --> 00:36:17,520
reliability mechanisms

821
00:36:17,520 --> 00:36:20,720
and for two of those the recipients need

822
00:36:20,720 --> 00:36:23,200
to communicate with the sender

823
00:36:23,200 --> 00:36:26,720
so these three reliability

824
00:36:26,720 --> 00:36:29,200
mechanisms are fake forward error

825
00:36:29,200 --> 00:36:30,160
correction

826
00:36:30,160 --> 00:36:33,520
uh knack negative acknowledgement and

827
00:36:33,520 --> 00:36:36,960
ack acknowledgement so first

828
00:36:36,960 --> 00:36:40,640
the fact is this is performed on the fly

829
00:36:40,640 --> 00:36:40,960
and

830
00:36:40,960 --> 00:36:44,320
does not trigger uh retransmission

831
00:36:44,320 --> 00:36:47,119
on our operational platform this is

832
00:36:47,119 --> 00:36:49,359
currently configured at a 10

833
00:36:49,359 --> 00:36:53,040
10 percent effect um then we have

834
00:36:53,040 --> 00:36:56,079
second the next which are generated

835
00:36:56,079 --> 00:36:59,280
when a client detects loss packets

836
00:36:59,280 --> 00:37:02,480
in that case a negative acknowledgement

837
00:37:02,480 --> 00:37:06,320
is sent upstream to the source which

838
00:37:06,320 --> 00:37:08,079
retransmits the loss packets via

839
00:37:08,079 --> 00:37:10,320
multicast to all subscribed

840
00:37:10,320 --> 00:37:13,599
recipients the the knacks are sent back

841
00:37:13,599 --> 00:37:17,520
to the source using unicas udp

842
00:37:17,520 --> 00:37:20,560
then we have the acts which

843
00:37:20,560 --> 00:37:23,440
are generated after the file

844
00:37:23,440 --> 00:37:25,440
transmission is over

845
00:37:25,440 --> 00:37:28,160
then those recipients that still have

846
00:37:28,160 --> 00:37:30,079
loss packets from the nominal

847
00:37:30,079 --> 00:37:31,280
transmission

848
00:37:31,280 --> 00:37:34,720
and and and the max report

849
00:37:34,720 --> 00:37:36,960
their status to the server which then

850
00:37:36,960 --> 00:37:39,440
initiates a new multicast transmission

851
00:37:39,440 --> 00:37:42,160
that includes all the missing packets

852
00:37:42,160 --> 00:37:43,280
reported by

853
00:37:43,280 --> 00:37:45,280
all the recipients or only those

854
00:37:45,280 --> 00:37:47,040
recipients that have

855
00:37:47,040 --> 00:37:49,280
incomplete files list them to listen to

856
00:37:49,280 --> 00:37:51,839
this new transmission

857
00:37:51,839 --> 00:37:55,440
together the next and the x are what we

858
00:37:55,440 --> 00:37:56,079
call

859
00:37:56,079 --> 00:37:59,119
the feedback channel

860
00:37:59,119 --> 00:38:01,119
and then going back to the notion of

861
00:38:01,119 --> 00:38:03,359
timeliness

862
00:38:03,359 --> 00:38:06,240
i would like to know that the knacks

863
00:38:06,240 --> 00:38:06,960
trigger

864
00:38:06,960 --> 00:38:10,000
immediate transmissions and

865
00:38:10,000 --> 00:38:12,800
do not significantly impact the overall

866
00:38:12,800 --> 00:38:13,839
timeliness of

867
00:38:13,839 --> 00:38:16,079
of the deliberate files on the other

868
00:38:16,079 --> 00:38:18,079
hand the retransmissions

869
00:38:18,079 --> 00:38:20,240
triggered by the arc messages introduce

870
00:38:20,240 --> 00:38:22,560
a delay on the file delivery

871
00:38:22,560 --> 00:38:25,280
and also produce files delivered to the

872
00:38:25,280 --> 00:38:26,320
end user

873
00:38:26,320 --> 00:38:31,040
out of order so what what can we recover

874
00:38:31,040 --> 00:38:32,880
from these loss packets with this

875
00:38:32,880 --> 00:38:34,480
reliability mechanisms

876
00:38:34,480 --> 00:38:37,599
so our testing shows that random packet

877
00:38:37,599 --> 00:38:40,000
loss below five percent uh is fully

878
00:38:40,000 --> 00:38:42,320
recovered by fec alone without

879
00:38:42,320 --> 00:38:45,520
any retransmissions that

880
00:38:45,520 --> 00:38:47,599
interruptions of less than 400

881
00:38:47,599 --> 00:38:49,599
milliseconds are fully recovered by

882
00:38:49,599 --> 00:38:52,079
effect alone without retransmissions

883
00:38:52,079 --> 00:38:55,760
that interruptions of less than

884
00:38:55,760 --> 00:38:58,800
one two seconds are fully recovered by

885
00:38:58,800 --> 00:39:02,320
knack and fec working together and

886
00:39:02,320 --> 00:39:04,320
interruptions of more than two seconds

887
00:39:04,320 --> 00:39:05,599
can

888
00:39:05,599 --> 00:39:08,079
can be recovered by ack but they

889
00:39:08,079 --> 00:39:09,520
introduce a delay

890
00:39:09,520 --> 00:39:13,359
in the file delivery now with the

891
00:39:13,359 --> 00:39:14,960
with the increase of number of

892
00:39:14,960 --> 00:39:17,359
recipients we can have

893
00:39:17,359 --> 00:39:19,920
uh the case where one or several

894
00:39:19,920 --> 00:39:20,720
recipients

895
00:39:20,720 --> 00:39:23,440
with low quality links impact the

896
00:39:23,440 --> 00:39:25,280
nominal transmission

897
00:39:25,280 --> 00:39:27,440
to the rest of the participants this is

898
00:39:27,440 --> 00:39:29,520
what we call the crying baby

899
00:39:29,520 --> 00:39:32,720
and that is a user constantly

900
00:39:32,720 --> 00:39:35,599
asking for rent transmissions and in

901
00:39:35,599 --> 00:39:37,040
order to prevent that

902
00:39:37,040 --> 00:39:40,160
from impacting all users the

903
00:39:40,160 --> 00:39:42,240
telecast software has several

904
00:39:42,240 --> 00:39:43,599
countermeasures in place

905
00:39:43,599 --> 00:39:45,359
for each of those mechanisms for

906
00:39:45,359 --> 00:39:46,960
instance for for the knack

907
00:39:46,960 --> 00:39:49,200
there is a configurable maximum

908
00:39:49,200 --> 00:39:50,160
bandwidth

909
00:39:50,160 --> 00:39:52,320
a percentage of the total available

910
00:39:52,320 --> 00:39:53,359
bandwidth that

911
00:39:53,359 --> 00:39:55,760
can be used for transmissions so the

912
00:39:55,760 --> 00:39:56,480
nominal

913
00:39:56,480 --> 00:39:59,520
transmission is always guaranteed

914
00:39:59,520 --> 00:40:02,560
this is currently set at 50 for our

915
00:40:02,560 --> 00:40:03,440
operational

916
00:40:03,440 --> 00:40:07,040
settings for then

917
00:40:07,040 --> 00:40:09,760
for for the x there is a configurable

918
00:40:09,760 --> 00:40:10,720
minimum

919
00:40:10,720 --> 00:40:13,520
that the recipient must have received of

920
00:40:13,520 --> 00:40:15,119
the send file in order to

921
00:40:15,119 --> 00:40:16,880
to trigger a transmission this is

922
00:40:16,880 --> 00:40:19,760
currently set at 40 percent of

923
00:40:19,760 --> 00:40:21,440
in our operational platform that means

924
00:40:21,440 --> 00:40:23,839
that users

925
00:40:23,839 --> 00:40:27,440
end users that receive less of uh 40

926
00:40:27,440 --> 00:40:30,960
of the file uh are discarded for

927
00:40:30,960 --> 00:40:34,000
uh for the transmissions these

928
00:40:34,000 --> 00:40:38,000
settings are based on uh trial and error

929
00:40:38,000 --> 00:40:41,200
tuning on the platform so

930
00:40:41,200 --> 00:40:43,440
some more additional relevant settings

931
00:40:43,440 --> 00:40:44,640
of our operational

932
00:40:44,640 --> 00:40:47,359
uh implementation is this time to lift

933
00:40:47,359 --> 00:40:47,839
that is

934
00:40:47,839 --> 00:40:52,480
currently set at 60 64. and the mtu size

935
00:40:52,480 --> 00:40:56,079
at 1400 so that is below the

936
00:40:56,079 --> 00:40:59,359
1500 so that the same multicast stream

937
00:40:59,359 --> 00:41:00,800
that

938
00:41:00,800 --> 00:41:02,319
then it's the same native multicast

939
00:41:02,319 --> 00:41:03,520
stream that we send out can be

940
00:41:03,520 --> 00:41:05,119
encapsulated into the

941
00:41:05,119 --> 00:41:06,800
gre tunnels as well so it's the same

942
00:41:06,800 --> 00:41:08,960
stream

943
00:41:08,960 --> 00:41:12,000
okay um yeah next slide please um just a

944
00:41:12,000 --> 00:41:15,760
quick question did you did you

945
00:41:15,760 --> 00:41:18,480
develop this internally in-house or

946
00:41:18,480 --> 00:41:19,520
using

947
00:41:19,520 --> 00:41:22,960
off the shelf or some other type of

948
00:41:22,960 --> 00:41:26,560
open source okay

949
00:41:27,599 --> 00:41:30,880
yeah uh now good question um so this is

950
00:41:30,880 --> 00:41:33,359
a commercial of the shelf this is cots

951
00:41:33,359 --> 00:41:34,000
uh

952
00:41:34,000 --> 00:41:37,440
and is um it's kind of kind of a

953
00:41:37,440 --> 00:41:41,280
very uh kind of old or yeah

954
00:41:41,280 --> 00:41:45,280
an old implementation uh maybe it's from

955
00:41:45,280 --> 00:41:48,720
10 15 years ago and but it's still being

956
00:41:48,720 --> 00:41:49,839
used operationally

957
00:41:49,839 --> 00:41:53,200
by the the company that uh produced this

958
00:41:53,200 --> 00:41:56,240
initially and they use it mainly for

959
00:41:56,240 --> 00:41:59,520
satellite communications um they don't

960
00:41:59,520 --> 00:42:02,160
offer it anymore to

961
00:42:02,160 --> 00:42:07,119
to to businesses

962
00:42:07,119 --> 00:42:08,960
however they still use it for their own

963
00:42:08,960 --> 00:42:10,880
operations so we are one of their

964
00:42:10,880 --> 00:42:14,640
last users that do not rely on the

965
00:42:14,640 --> 00:42:17,040
actual on their actual hardware

966
00:42:17,040 --> 00:42:20,240
that we use this uh software

967
00:42:20,240 --> 00:42:23,839
uh just uh standing alone

968
00:42:23,839 --> 00:42:26,720
with no hardware uh with no without

969
00:42:26,720 --> 00:42:28,839
their hardware

970
00:42:28,839 --> 00:42:32,160
right okay

971
00:42:32,160 --> 00:42:35,920
yep ah thanks so uh

972
00:42:35,920 --> 00:42:39,760
g and acts as the sole network

973
00:42:39,760 --> 00:42:41,599
as a network service provider an

974
00:42:41,599 --> 00:42:43,040
interface point for us

975
00:42:43,040 --> 00:42:45,440
with the rest of the the national

976
00:42:45,440 --> 00:42:47,599
research and educational networks

977
00:42:47,599 --> 00:42:50,720
and gm provides the backbone network

978
00:42:50,720 --> 00:42:52,400
topology for the european

979
00:42:52,400 --> 00:42:55,520
region but also collaborates with

980
00:42:55,520 --> 00:42:58,960
other entrance to provide

981
00:42:58,960 --> 00:43:02,400
global connectivity to to the users

982
00:43:02,400 --> 00:43:05,359
uh therefore we rely on gm to grant us

983
00:43:05,359 --> 00:43:07,119
access to end users called

984
00:43:07,119 --> 00:43:09,440
worldwide yeah and this is this is what

985
00:43:09,440 --> 00:43:11,040
this map shows

986
00:43:11,040 --> 00:43:14,079
all the connections that gn gives us

987
00:43:14,079 --> 00:43:15,920
especially especially relevant

988
00:43:15,920 --> 00:43:17,440
for your case probably with the internet

989
00:43:17,440 --> 00:43:19,359
too

990
00:43:19,359 --> 00:43:24,000
okay next slide please

991
00:43:24,000 --> 00:43:26,960
so these slides present colored in in

992
00:43:26,960 --> 00:43:29,200
dark blue all the countries countries

993
00:43:29,200 --> 00:43:29,920
where

994
00:43:29,920 --> 00:43:31,920
there are unit cast terrestrial stations

995
00:43:31,920 --> 00:43:34,640
operating and receiving our traffic

996
00:43:34,640 --> 00:43:36,720
um so that you see that the terrestrial

997
00:43:36,720 --> 00:43:38,079
service provides

998
00:43:38,079 --> 00:43:41,599
access to users outside the unit

999
00:43:41,599 --> 00:43:44,560
outside the satellite footprint which is

1000
00:43:44,560 --> 00:43:45,200
over

1001
00:43:45,200 --> 00:43:48,319
over europe mainly

1002
00:43:48,319 --> 00:43:50,240
and especially relevant to the unborn

1003
00:43:50,240 --> 00:43:52,160
working group is probably the university

1004
00:43:52,160 --> 00:43:54,319
of wisconsin madison

1005
00:43:54,319 --> 00:43:56,160
because thanks to this user that the

1006
00:43:56,160 --> 00:43:58,079
native multicast flows through the

1007
00:43:58,079 --> 00:44:00,720
internet 2 and the emblem

1008
00:44:00,720 --> 00:44:03,119
there is another user in the usa that

1009
00:44:03,119 --> 00:44:04,640
receives our traffic this is

1010
00:44:04,640 --> 00:44:08,480
noah starr then however

1011
00:44:08,480 --> 00:44:11,280
they receive it uh via gre tunnel and

1012
00:44:11,280 --> 00:44:12,720
the reason for that is

1013
00:44:12,720 --> 00:44:15,920
that some institutional users

1014
00:44:15,920 --> 00:44:18,000
do not like multicast traffic flowing

1015
00:44:18,000 --> 00:44:19,920
into their system so they prefer

1016
00:44:19,920 --> 00:44:24,800
the the good old known tcp

1017
00:44:24,800 --> 00:44:28,640
all right next slide please

1018
00:44:31,440 --> 00:44:34,160
okay so this is this is an example on

1019
00:44:34,160 --> 00:44:34,880
how we

1020
00:44:34,880 --> 00:44:36,480
calculate the availability of the

1021
00:44:36,480 --> 00:44:39,200
service for each individual user of

1022
00:44:39,200 --> 00:44:42,000
the terrestrial service in particular

1023
00:44:42,000 --> 00:44:43,920
this corresponds to

1024
00:44:43,920 --> 00:44:47,119
last february this is what we call

1025
00:44:47,119 --> 00:44:48,960
end-to-end end-to-end file based

1026
00:44:48,960 --> 00:44:50,319
monitoring basically

1027
00:44:50,319 --> 00:44:53,680
we compare for each station what files

1028
00:44:53,680 --> 00:44:55,520
it should have received against the

1029
00:44:55,520 --> 00:44:57,920
actual files it received

1030
00:44:57,920 --> 00:45:00,480
and then we compute the the percentage

1031
00:45:00,480 --> 00:45:02,000
so the color coding

1032
00:45:02,000 --> 00:45:04,640
is has been inherited from from the sla

1033
00:45:04,640 --> 00:45:06,800
that we have for the satellite service

1034
00:45:06,800 --> 00:45:11,200
where file availability below 99.5

1035
00:45:11,200 --> 00:45:14,400
percent is not acceptable

1036
00:45:14,400 --> 00:45:16,720
so these computations are based on on

1037
00:45:16,720 --> 00:45:18,000
the act packets

1038
00:45:18,000 --> 00:45:20,880
from the feedback channel and and in our

1039
00:45:20,880 --> 00:45:22,480
experience the

1040
00:45:22,480 --> 00:45:25,280
common reasons for achieving achieving

1041
00:45:25,280 --> 00:45:26,880
lower availability are

1042
00:45:26,880 --> 00:45:29,040
so network bottlenecks and and

1043
00:45:29,040 --> 00:45:31,280
congestion some countries have

1044
00:45:31,280 --> 00:45:33,359
very good links like within europe to

1045
00:45:33,359 --> 00:45:35,280
japan or the us

1046
00:45:35,280 --> 00:45:37,599
however in other countries the networks

1047
00:45:37,599 --> 00:45:39,359
are not so good

1048
00:45:39,359 --> 00:45:42,880
uh also due to insufficient last mile

1049
00:45:42,880 --> 00:45:45,440
bandwidth and this is typically the end

1050
00:45:45,440 --> 00:45:47,119
user subscribing to

1051
00:45:47,119 --> 00:45:50,240
more data than than they can actually

1052
00:45:50,240 --> 00:45:52,319
receive

1053
00:45:52,319 --> 00:45:54,240
then related to the previous point we

1054
00:45:54,240 --> 00:45:55,920
have observed that tcp

1055
00:45:55,920 --> 00:45:58,319
traffic tends to push out multicast

1056
00:45:58,319 --> 00:45:59,119
traffic

1057
00:45:59,119 --> 00:46:03,280
on links where bandwidth is scarce

1058
00:46:03,440 --> 00:46:06,079
and firewall updates also combined with

1059
00:46:06,079 --> 00:46:08,000
troubleshooting difficulties

1060
00:46:08,000 --> 00:46:11,599
also lead to lower availability measured

1061
00:46:11,599 --> 00:46:14,720
all right next slide please or oriole

1062
00:46:14,720 --> 00:46:16,800
the the um the feedback channel is that

1063
00:46:16,800 --> 00:46:20,240
unicast or is that multicast

1064
00:46:20,240 --> 00:46:23,920
that that is unique uh tcp unicast

1065
00:46:23,920 --> 00:46:26,720
is there any issues with scale in terms

1066
00:46:26,720 --> 00:46:27,520
of if you had

1067
00:46:27,520 --> 00:46:29,599
you know zillions and zillions of

1068
00:46:29,599 --> 00:46:30,800
receivers

1069
00:46:30,800 --> 00:46:34,240
would that be a challenge or so we

1070
00:46:34,240 --> 00:46:36,960
so we we have uh two feedback channels

1071
00:46:36,960 --> 00:46:38,880
we have the negative acknowledgement

1072
00:46:38,880 --> 00:46:42,240
which is uh udp

1073
00:46:42,240 --> 00:46:45,119
unicast udp and then we have the

1074
00:46:45,119 --> 00:46:46,480
acknowledgement which is

1075
00:46:46,480 --> 00:46:50,160
tcpip unicast

1076
00:46:50,160 --> 00:46:54,480
the the knack is more scalable

1077
00:46:54,640 --> 00:46:56,640
however you can still have like a knack

1078
00:46:56,640 --> 00:46:57,680
implosion if you like

1079
00:46:57,680 --> 00:47:00,960
um but we have measures

1080
00:47:00,960 --> 00:47:04,160
in place to i think if you go to a

1081
00:47:04,160 --> 00:47:06,000
previous slide

1082
00:47:06,000 --> 00:47:07,680
we have we have measures in place to

1083
00:47:07,680 --> 00:47:09,520
prevent that from impacting the other

1084
00:47:09,520 --> 00:47:10,160
users

1085
00:47:10,160 --> 00:47:13,599
that is uh this one that that is

1086
00:47:13,599 --> 00:47:16,960
so you see uh these three um history

1087
00:47:16,960 --> 00:47:20,160
method that the nag and the act

1088
00:47:20,160 --> 00:47:23,280
so the return channel udp unicast or tcp

1089
00:47:23,280 --> 00:47:24,640
unicas

1090
00:47:24,640 --> 00:47:28,480
for the nag we have a limit of 50

1091
00:47:28,480 --> 00:47:31,200
that is from the nominal from the

1092
00:47:31,200 --> 00:47:33,440
available bandwidth that we have

1093
00:47:33,440 --> 00:47:36,800
50 must be nominal

1094
00:47:36,800 --> 00:47:40,640
uh multicast and there are the other 50

1095
00:47:40,640 --> 00:47:42,880
can be used for to address

1096
00:47:42,880 --> 00:47:43,839
retransmissions

1097
00:47:43,839 --> 00:47:47,599
so we are always sure

1098
00:47:47,599 --> 00:47:50,960
that the the end users that have a good

1099
00:47:50,960 --> 00:47:52,480
link

1100
00:47:52,480 --> 00:47:55,280
will be able to receive will be not will

1101
00:47:55,280 --> 00:47:56,319
not be impacted

1102
00:47:56,319 --> 00:47:59,040
by uh

1103
00:47:59,599 --> 00:48:03,760
end users that have a a low quality link

1104
00:48:03,760 --> 00:48:06,319
and that are generating a lot of uh

1105
00:48:06,319 --> 00:48:09,520
of negative acknowledgements

1106
00:48:09,520 --> 00:48:12,720
but uh at the at the numbers that we're

1107
00:48:12,720 --> 00:48:14,000
managing at the moment

1108
00:48:14,000 --> 00:48:17,119
we obviously they are still small so

1109
00:48:17,119 --> 00:48:20,160
we don't see that as of an issue for the

1110
00:48:20,160 --> 00:48:20,720
moment

1111
00:48:20,720 --> 00:48:23,839
okay i

1112
00:48:23,839 --> 00:48:28,000
think we were slide 12 yeah that one

1113
00:48:28,000 --> 00:48:31,200
uh so yeah so

1114
00:48:31,200 --> 00:48:33,839
satellite industry has very long cycles

1115
00:48:33,839 --> 00:48:35,760
so we can predict fairly well

1116
00:48:35,760 --> 00:48:38,160
what our bandwidth needs will be in the

1117
00:48:38,160 --> 00:48:39,359
future

1118
00:48:39,359 --> 00:48:41,280
this slide presents the future bank with

1119
00:48:41,280 --> 00:48:44,160
needs for satellite and terrestrial

1120
00:48:44,160 --> 00:48:46,400
for terrestrial you see it goes from the

1121
00:48:46,400 --> 00:48:49,359
current 400 megabits to a peak of almost

1122
00:48:49,359 --> 00:48:50,960
one gigawatt per second by the end of

1123
00:48:50,960 --> 00:48:52,400
2025

1124
00:48:52,400 --> 00:48:56,000
then it it it stands around 800 megabits

1125
00:48:56,000 --> 00:48:59,040
um yeah the steep increase between

1126
00:48:59,040 --> 00:49:02,319
years 2023 24 and 25 are

1127
00:49:02,319 --> 00:49:04,800
due to introducing new missions and new

1128
00:49:04,800 --> 00:49:06,240
satellites

1129
00:49:06,240 --> 00:49:09,359
the satellite bandwidth needs are lower

1130
00:49:09,359 --> 00:49:10,880
motivation is that the satellite

1131
00:49:10,880 --> 00:49:13,680
capacity is much more expensive than the

1132
00:49:13,680 --> 00:49:15,280
terrestrial bandwidth

1133
00:49:15,280 --> 00:49:17,839
and then that is by an order of

1134
00:49:17,839 --> 00:49:19,280
magnitude

1135
00:49:19,280 --> 00:49:22,000
therefore um has strategically decided

1136
00:49:22,000 --> 00:49:22,880
to send

1137
00:49:22,880 --> 00:49:24,880
via satellite only what we call

1138
00:49:24,880 --> 00:49:26,400
essential data

1139
00:49:26,400 --> 00:49:29,359
that is the data needed for most of our

1140
00:49:29,359 --> 00:49:30,079
users

1141
00:49:30,079 --> 00:49:32,400
and that corresponds to the data from

1142
00:49:32,400 --> 00:49:33,920
the geostationary

1143
00:49:33,920 --> 00:49:35,920
geostationary satellites on the other

1144
00:49:35,920 --> 00:49:38,000
hand the terrestrial service has

1145
00:49:38,000 --> 00:49:41,200
all data from unit cell all right

1146
00:49:41,200 --> 00:49:45,839
so next slide please

1147
00:49:49,599 --> 00:49:53,359
thank you so we are currently analyzing

1148
00:49:53,359 --> 00:49:55,839
the use of amt to complement our

1149
00:49:55,839 --> 00:49:59,200
terrestrial service for instance i see

1150
00:49:59,200 --> 00:50:01,200
the potential of this technology to

1151
00:50:01,200 --> 00:50:02,559
provide access to

1152
00:50:02,559 --> 00:50:05,520
our data to private and commercial users

1153
00:50:05,520 --> 00:50:06,319
that have no

1154
00:50:06,319 --> 00:50:09,119
access to the entrance we are still at

1155
00:50:09,119 --> 00:50:10,720
the very early stage

1156
00:50:10,720 --> 00:50:13,280
we have done some testing with the amt

1157
00:50:13,280 --> 00:50:14,640
gateway

1158
00:50:14,640 --> 00:50:17,200
implementation from from from this from

1159
00:50:17,200 --> 00:50:18,240
this link from

1160
00:50:18,240 --> 00:50:21,359
github i understand mike collin is one

1161
00:50:21,359 --> 00:50:23,599
of the main contributors of this solver

1162
00:50:23,599 --> 00:50:25,599
so many thanks for that really

1163
00:50:25,599 --> 00:50:27,359
appreciate it

1164
00:50:27,359 --> 00:50:29,920
basically it worked out of the box for

1165
00:50:29,920 --> 00:50:32,000
us

1166
00:50:32,160 --> 00:50:36,000
we created a simple 13 line script

1167
00:50:36,000 --> 00:50:37,760
to set up the interface and connect it

1168
00:50:37,760 --> 00:50:39,520
to the amt relay source

1169
00:50:39,520 --> 00:50:42,640
of m2i cast

1170
00:50:42,720 --> 00:50:45,599
after that the telecast client was was

1171
00:50:45,599 --> 00:50:46,720
ready to receive the

1172
00:50:46,720 --> 00:50:48,559
complete terrestrial stream via

1173
00:50:48,559 --> 00:50:50,480
internet2

1174
00:50:50,480 --> 00:50:53,839
the internet to relays in usa

1175
00:50:53,839 --> 00:50:57,359
and we had very good

1176
00:50:57,359 --> 00:51:01,040
results this is uh this this is based in

1177
00:51:01,040 --> 00:51:03,440
a 400 megabits per second

1178
00:51:03,440 --> 00:51:05,359
internet connection in germany so

1179
00:51:05,359 --> 00:51:07,200
basically the data

1180
00:51:07,200 --> 00:51:08,590
the data was going from

1181
00:51:08,590 --> 00:51:10,559
[Music]

1182
00:51:10,559 --> 00:51:14,160
from darmstadt via multicast to

1183
00:51:14,160 --> 00:51:17,440
internet2 and then via the

1184
00:51:17,440 --> 00:51:21,520
relay back to germany and

1185
00:51:21,520 --> 00:51:24,800
we do we did uh several tests so when

1186
00:51:24,800 --> 00:51:28,160
no written no no feedback channel uh

1187
00:51:28,160 --> 00:51:30,160
and with a bandwidth of around 100

1188
00:51:30,160 --> 00:51:31,480
megabit stream uh

1189
00:51:31,480 --> 00:51:34,839
0.6 packets uh

1190
00:51:34,839 --> 00:51:37,200
0.6

1191
00:51:37,200 --> 00:51:38,480
[Music]

1192
00:51:38,480 --> 00:51:41,920
of the packets were uh were lost uh

1193
00:51:41,920 --> 00:51:44,160
after the even after the fact however

1194
00:51:44,160 --> 00:51:45,680
that has a dramatic

1195
00:51:45,680 --> 00:51:48,720
uh impact in the number of uh

1196
00:51:48,720 --> 00:51:51,760
lost files yeah because if we lose just

1197
00:51:51,760 --> 00:51:53,839
a few bytes of one of the files and we

1198
00:51:53,839 --> 00:51:55,520
are not able to recover them then the

1199
00:51:55,520 --> 00:51:59,520
the the file is considered uh corrupted

1200
00:51:59,520 --> 00:52:03,680
um and uh and discarded therefore just a

1201
00:52:03,680 --> 00:52:04,079
few

1202
00:52:04,079 --> 00:52:08,720
a few lost packets have have a very

1203
00:52:08,720 --> 00:52:11,520
very big impact so however the results

1204
00:52:11,520 --> 00:52:12,640
the results look

1205
00:52:12,640 --> 00:52:15,760
very different when the negative

1206
00:52:15,760 --> 00:52:16,480
acknowledgement

1207
00:52:16,480 --> 00:52:19,760
channel is enabled then for

1208
00:52:19,760 --> 00:52:23,359
90 megabits per second bandwidth

1209
00:52:23,359 --> 00:52:25,920
and for a period of two hours that we

1210
00:52:25,920 --> 00:52:28,000
did our testing there were no loss

1211
00:52:28,000 --> 00:52:28,720
packets at

1212
00:52:28,720 --> 00:52:32,240
all and 100 files a hundred percent

1213
00:52:32,240 --> 00:52:35,680
of the files were were received um

1214
00:52:35,680 --> 00:52:37,520
so these are very very very very good

1215
00:52:37,520 --> 00:52:39,440
results uh we also

1216
00:52:39,440 --> 00:52:42,160
tested reception at full stream of uh

1217
00:52:42,160 --> 00:52:43,839
300 megabits per second

1218
00:52:43,839 --> 00:52:47,119
and it was possible uh however we just

1219
00:52:47,119 --> 00:52:49,040
stopped the test immediately we just did

1220
00:52:49,040 --> 00:52:50,319
it for a few minutes and then stopped

1221
00:52:50,319 --> 00:52:51,040
just to not

1222
00:52:51,040 --> 00:52:56,160
cause any problems to anybody

1223
00:52:57,359 --> 00:53:00,960
so next slide please sure and uh yeah

1224
00:53:00,960 --> 00:53:02,720
by the way for those uh interested yeah

1225
00:53:02,720 --> 00:53:04,079
that's uh jake's

1226
00:53:04,079 --> 00:53:07,200
jake was the uh owner of this github

1227
00:53:07,200 --> 00:53:10,000
repo um jake holland and there's a

1228
00:53:10,000 --> 00:53:11,200
question from stig

1229
00:53:11,200 --> 00:53:13,280
about is this service freely available

1230
00:53:13,280 --> 00:53:14,960
to private end users

1231
00:53:14,960 --> 00:53:20,319
with amt um without the feedback channel

1232
00:53:20,640 --> 00:53:22,800
or was this just testing um did you try

1233
00:53:22,800 --> 00:53:24,079
it out once

1234
00:53:24,079 --> 00:53:28,079
this was uh this this was testing

1235
00:53:28,079 --> 00:53:31,280
um it it

1236
00:53:31,280 --> 00:53:32,880
obviously it is available to private

1237
00:53:32,880 --> 00:53:35,280
users via amt yes it is

1238
00:53:35,280 --> 00:53:37,359
however we still do not support that

1239
00:53:37,359 --> 00:53:38,960
operationally

1240
00:53:38,960 --> 00:53:42,079
meaning that the user a user can

1241
00:53:42,079 --> 00:53:43,440
implement that on their own

1242
00:53:43,440 --> 00:53:47,200
but we cannot guarantee the service

1243
00:53:47,200 --> 00:53:51,200
and as we do for the other

1244
00:53:51,200 --> 00:53:53,839
for for for the other implementations

1245
00:53:53,839 --> 00:53:54,640
via

1246
00:53:54,640 --> 00:53:58,640
native multicast vign and so on and

1247
00:53:58,640 --> 00:54:00,480
yeah at the moment we're working

1248
00:54:00,480 --> 00:54:02,319
together with with jin

1249
00:54:02,319 --> 00:54:06,079
to see if we can enable the

1250
00:54:06,079 --> 00:54:10,240
amt gateways on the uh

1251
00:54:10,240 --> 00:54:12,400
and on the border on the border routers

1252
00:54:12,400 --> 00:54:14,000
of the network because they

1253
00:54:14,000 --> 00:54:17,200
also have uh juniper equipment so they

1254
00:54:17,200 --> 00:54:17,839
could

1255
00:54:17,839 --> 00:54:20,880
potentially enable that if they see

1256
00:54:20,880 --> 00:54:22,640
but but first we so we're working with

1257
00:54:22,640 --> 00:54:24,240
them to see if this has

1258
00:54:24,240 --> 00:54:28,240
if this can have uh um

1259
00:54:28,240 --> 00:54:31,520
some um some effect on their network or

1260
00:54:31,520 --> 00:54:33,200
not so we're still in the

1261
00:54:33,200 --> 00:54:34,640
in the lab working on the lab if you

1262
00:54:34,640 --> 00:54:36,640
like uh

1263
00:54:36,640 --> 00:54:40,720
okay so this um just uh

1264
00:54:40,720 --> 00:54:44,558
uh time check five five minutes earlier

1265
00:54:44,960 --> 00:54:48,079
oh sorry i'm almost over yes um okay so

1266
00:54:48,079 --> 00:54:48,480
this

1267
00:54:48,480 --> 00:54:51,520
this is uh so we run this amt

1268
00:54:51,520 --> 00:54:53,839
on our wanted distro and you see the

1269
00:54:53,839 --> 00:54:55,839
this is the test capture of the

1270
00:54:55,839 --> 00:54:57,920
traffic received so a next slide please

1271
00:54:57,920 --> 00:55:00,960
and this is the last one

1272
00:55:02,079 --> 00:55:04,799
basically a recap of uh the predicted

1273
00:55:04,799 --> 00:55:06,400
ways so we have uh

1274
00:55:06,400 --> 00:55:08,880
one-to-many distribution one single

1275
00:55:08,880 --> 00:55:09,440
source

1276
00:55:09,440 --> 00:55:11,280
which is highly scalable with the number

1277
00:55:11,280 --> 00:55:13,040
of digital data

1278
00:55:13,040 --> 00:55:16,400
uh our cost model shows that this is

1279
00:55:16,400 --> 00:55:20,079
solution is cost effective for above

1280
00:55:20,079 --> 00:55:22,559
10 users we have at the moment 4 000

1281
00:55:22,559 --> 00:55:23,280
users

1282
00:55:23,280 --> 00:55:25,920
of the netcast satellite service so in

1283
00:55:25,920 --> 00:55:27,680
the future

1284
00:55:27,680 --> 00:55:29,920
we might be migrating many of those

1285
00:55:29,920 --> 00:55:33,119
users from satellite terrestrial

1286
00:55:33,119 --> 00:55:36,400
high availability uh yes

1287
00:55:36,400 --> 00:55:40,079
but only if uh pro protocol reliability

1288
00:55:40,079 --> 00:55:41,760
is implemented yeah if this feedback

1289
00:55:41,760 --> 00:55:43,280
channel is enabled

1290
00:55:43,280 --> 00:55:46,400
um work coverage versus satellite

1291
00:55:46,400 --> 00:55:48,079
footprint only

1292
00:55:48,079 --> 00:55:50,480
and we can handle any type of file

1293
00:55:50,480 --> 00:55:52,720
format and size

1294
00:55:52,720 --> 00:55:56,240
however i must say so

1295
00:55:56,240 --> 00:55:58,000
obviously for this to work it requires a

1296
00:55:58,000 --> 00:55:59,839
multicast enabled network infrastructure

1297
00:55:59,839 --> 00:56:02,079
and we know internet is not yet

1298
00:56:02,079 --> 00:56:03,359
multicast ready

1299
00:56:03,359 --> 00:56:06,480
it requires expertise in network setup

1300
00:56:06,480 --> 00:56:09,839
it's not straightforward for somebody

1301
00:56:09,839 --> 00:56:10,480
who has

1302
00:56:10,480 --> 00:56:12,880
not much experience with this and there

1303
00:56:12,880 --> 00:56:13,760
is also some

1304
00:56:13,760 --> 00:56:16,960
end user resistance to enable native

1305
00:56:16,960 --> 00:56:19,599
multicast on the network

1306
00:56:19,599 --> 00:56:21,280
and as already mentioned there is a risk

1307
00:56:21,280 --> 00:56:22,799
of of course impact

1308
00:56:22,799 --> 00:56:26,480
that is if if this is not properly

1309
00:56:26,480 --> 00:56:27,040
handled

1310
00:56:27,040 --> 00:56:29,040
users with bad quality links can impact

1311
00:56:29,040 --> 00:56:30,880
the availability and timeliness of

1312
00:56:30,880 --> 00:56:32,960
nominal transmission

1313
00:56:32,960 --> 00:56:36,480
and yes the next slide which is just

1314
00:56:36,480 --> 00:56:39,359
questions and answers

1315
00:56:42,960 --> 00:56:44,640
i have a question uh do you use any kind

1316
00:56:44,640 --> 00:56:46,400
of uh access control

1317
00:56:46,400 --> 00:56:50,720
um encryption anything like that

1318
00:56:50,720 --> 00:56:54,000
yeah uh so we yes that's a very

1319
00:56:54,000 --> 00:56:57,440
good question so we uh we need

1320
00:56:57,440 --> 00:56:59,440
to have a strong authentication and

1321
00:56:59,440 --> 00:57:00,720
encryption for for

1322
00:57:00,720 --> 00:57:04,319
uh various reasons first to enforce the

1323
00:57:04,319 --> 00:57:04,880
data

1324
00:57:04,880 --> 00:57:08,079
policy that is only those users those

1325
00:57:08,079 --> 00:57:08,960
users

1326
00:57:08,960 --> 00:57:11,440
registered and allowed to receive our

1327
00:57:11,440 --> 00:57:13,200
data can actually do so

1328
00:57:13,200 --> 00:57:16,160
then there is also the data what we call

1329
00:57:16,160 --> 00:57:16,640
the

1330
00:57:16,640 --> 00:57:19,920
uh data denial service for uh certain

1331
00:57:19,920 --> 00:57:23,119
streams for instance all the uh for

1332
00:57:23,119 --> 00:57:27,119
for some some instruments that is when

1333
00:57:27,119 --> 00:57:30,480
certain data need to be made available

1334
00:57:30,480 --> 00:57:32,640
only to a subset of users for instance

1335
00:57:32,640 --> 00:57:36,000
in case of conflict or war

1336
00:57:36,000 --> 00:57:39,119
and yes we do have authentication

1337
00:57:39,119 --> 00:57:42,319
and encryption this is based on usb

1338
00:57:42,319 --> 00:57:46,000
uh token in combination with uh username

1339
00:57:46,000 --> 00:57:48,480
and password so this is a two key factor

1340
00:57:48,480 --> 00:57:49,359
system

1341
00:57:49,359 --> 00:57:53,200
um we distribute these usb tokens to the

1342
00:57:53,200 --> 00:57:54,079
end users

1343
00:57:54,079 --> 00:57:57,440
and they can only unencrypt our data

1344
00:57:57,440 --> 00:58:00,640
if the eq is blocked plugged in and

1345
00:58:00,640 --> 00:58:04,000
and configured so basically

1346
00:58:04,000 --> 00:58:07,280
we have two types of streams if you like

1347
00:58:07,280 --> 00:58:08,960
so first stream is is the

1348
00:58:08,960 --> 00:58:11,920
what we call the announcement channel

1349
00:58:11,920 --> 00:58:13,359
this is unencrypted

1350
00:58:13,359 --> 00:58:16,240
um and that means that any user can

1351
00:58:16,240 --> 00:58:16,720
listen

1352
00:58:16,720 --> 00:58:18,960
can listen to this channel this channel

1353
00:58:18,960 --> 00:58:20,079
however contains

1354
00:58:20,079 --> 00:58:22,960
all the information on on the data

1355
00:58:22,960 --> 00:58:23,680
channels

1356
00:58:23,680 --> 00:58:25,839
at what time did they start what files

1357
00:58:25,839 --> 00:58:29,119
they contain and so on and so forth

1358
00:58:29,119 --> 00:58:32,160
and then these data channels themselves

1359
00:58:32,160 --> 00:58:35,280
are encrypted and only users with

1360
00:58:35,280 --> 00:58:37,839
with a functioning you can all encrypt

1361
00:58:37,839 --> 00:58:40,319
that data

1362
00:58:44,400 --> 00:58:47,920
jake uh yeah

1363
00:58:47,920 --> 00:58:51,359
follow up on that this is jake um

1364
00:58:51,359 --> 00:58:54,799
the uh uh is that like

1365
00:58:54,799 --> 00:58:57,920
uh once the file is completely

1366
00:58:57,920 --> 00:58:59,599
downloaded then you can only

1367
00:58:59,599 --> 00:59:03,359
unencrypt it uh when you're holding the

1368
00:59:03,359 --> 00:59:05,599
if you have the right key or is that uh

1369
00:59:05,599 --> 00:59:06,480
sort of

1370
00:59:06,480 --> 00:59:08,319
like as you're going you're able to get

1371
00:59:08,319 --> 00:59:10,000
the bits and pieces

1372
00:59:10,000 --> 00:59:12,559
that's correct uh so first the file is

1373
00:59:12,559 --> 00:59:14,160
completely downloaded

1374
00:59:14,160 --> 00:59:17,520
and then it checks for the existence and

1375
00:59:17,520 --> 00:59:20,640
of these eku of this dongle

1376
00:59:20,640 --> 00:59:22,880
and then if that is granted then the

1377
00:59:22,880 --> 00:59:24,559
file is encrypted

1378
00:59:24,559 --> 00:59:27,119
great thank you

1379
00:59:28,160 --> 00:59:33,839
oreo can you um

1380
00:59:38,480 --> 00:59:41,119
um yeah thanks i just wanted to ask um

1381
00:59:41,119 --> 00:59:42,160
you mentioned obviously

1382
00:59:42,160 --> 00:59:43,760
with joan from the under ends you can

1383
00:59:43,760 --> 00:59:46,400
run natively the n sites or it can be

1384
00:59:46,400 --> 00:59:48,640
tunneled is the case for tunneling

1385
00:59:48,640 --> 00:59:49,680
usually at the end

1386
00:59:49,680 --> 00:59:51,440
site does not support multicast rather

1387
00:59:51,440 --> 00:59:52,640
than the neon rings and chart because i

1388
00:59:52,640 --> 00:59:54,720
think most enrons in jail to

1389
00:59:54,720 --> 00:59:56,480
support multicast natively just like

1390
00:59:56,480 --> 00:59:59,200
they support v6 natively for example

1391
00:59:59,200 --> 01:00:00,880
is it usually the end site rather than

1392
01:00:00,880 --> 01:00:02,960
the end range just for clarity

1393
01:00:02,960 --> 01:00:06,370
uh typically is the enrons

1394
01:00:06,370 --> 01:00:07,680
[Music]

1395
01:00:07,680 --> 01:00:11,200
yes but however i must say that

1396
01:00:11,200 --> 01:00:13,599
gian is doing an excellent work on that

1397
01:00:13,599 --> 01:00:14,480
so whenever

1398
01:00:14,480 --> 01:00:17,040
we detect that or we have an end user

1399
01:00:17,040 --> 01:00:18,799
located on an end run that is not

1400
01:00:18,799 --> 01:00:20,640
multicast enabled

1401
01:00:20,640 --> 01:00:23,920
then they do their best to support them

1402
01:00:23,920 --> 01:00:25,760
and help them enable it and eventually

1403
01:00:25,760 --> 01:00:27,040
it takes some time

1404
01:00:27,040 --> 01:00:30,240
so we use the these gre tunnels to just

1405
01:00:30,240 --> 01:00:31,599
to bridge the gap

1406
01:00:31,599 --> 01:00:34,079
uh that might take from you know a few

1407
01:00:34,079 --> 01:00:35,440
weeks to a few months

1408
01:00:35,440 --> 01:00:38,000
on until that end and then start

1409
01:00:38,000 --> 01:00:38,799
supporting

1410
01:00:38,799 --> 01:00:42,000
uh multicast natively so it's

1411
01:00:42,000 --> 01:00:45,520
uh okay yeah i mean i i'm

1412
01:00:45,520 --> 01:00:47,520
i believe in the in the uk example with

1413
01:00:47,520 --> 01:00:48,880
the ecwmf

1414
01:00:48,880 --> 01:00:51,920
sorry ec mwf and

1415
01:00:51,920 --> 01:00:53,839
the met office that it's those sites

1416
01:00:53,839 --> 01:00:56,079
that don't have multicast that means it

1417
01:00:56,079 --> 01:00:58,079
needs to be terminal whereas the uk

1418
01:00:58,079 --> 01:01:00,640
and rn janet does support multicast i

1419
01:01:00,640 --> 01:01:02,160
just wonder whether that's common across

1420
01:01:02,160 --> 01:01:03,040
europe or

1421
01:01:03,040 --> 01:01:06,319
or not that's because it varies from

1422
01:01:06,319 --> 01:01:07,440
country to country

1423
01:01:07,440 --> 01:01:10,000
that's why we have like a portfolio of

1424
01:01:10,000 --> 01:01:10,960
services

1425
01:01:10,960 --> 01:01:14,000
because uh our mission is to make

1426
01:01:14,000 --> 01:01:16,480
the you want to get the content there

1427
01:01:16,480 --> 01:01:17,200
don't you

1428
01:01:17,200 --> 01:01:19,680
exactly we need to get there you just

1429
01:01:19,680 --> 01:01:21,040
want to make sure that

1430
01:01:21,040 --> 01:01:23,760
capability is there exactly however we

1431
01:01:23,760 --> 01:01:24,400
always

1432
01:01:24,400 --> 01:01:27,440
try to um

1433
01:01:27,440 --> 01:01:29,040
we encourage the users to use native

1434
01:01:29,040 --> 01:01:31,599
multicast because we understand that for

1435
01:01:31,599 --> 01:01:33,680
instance one study is enabled in a

1436
01:01:33,680 --> 01:01:34,240
country

1437
01:01:34,240 --> 01:01:37,280
for instance the case of i know

1438
01:01:37,280 --> 01:01:38,960
any new countries that doesn't have

1439
01:01:38,960 --> 01:01:41,119
native multicast we have one user there

1440
01:01:41,119 --> 01:01:44,000
and once once native multicast is

1441
01:01:44,000 --> 01:01:45,040
supported then

1442
01:01:45,040 --> 01:01:46,640
it doesn't matter how many users we have

1443
01:01:46,640 --> 01:01:48,079
there yeah and uh

1444
01:01:48,079 --> 01:01:50,079
it will be just uh black and play if you

1445
01:01:50,079 --> 01:01:51,760
like

1446
01:01:51,760 --> 01:01:53,040
so it's the first one it takes a little

1447
01:01:53,040 --> 01:01:55,280
bit longer

1448
01:01:55,280 --> 01:01:57,200
right thanks yeah i'm involved with the

1449
01:01:57,200 --> 01:01:58,640
germ project and the uk

1450
01:01:58,640 --> 01:02:00,160
and i've sent you a message with my

1451
01:02:00,160 --> 01:02:01,680
email address if you want to follow up

1452
01:02:01,680 --> 01:02:02,240
on my video

1453
01:02:02,240 --> 01:02:04,000
okay thank you oh yes yes yes i said no

1454
01:02:04,000 --> 01:02:05,599
thank you thank you

1455
01:02:05,599 --> 01:02:07,839
jake

1456
01:02:09,839 --> 01:02:13,119
uh yeah the um approximately how many

1457
01:02:13,119 --> 01:02:14,400
end users do you have

1458
01:02:14,400 --> 01:02:18,079
if you can show that yes um so um

1459
01:02:18,079 --> 01:02:20,640
satellite this is the first service that

1460
01:02:20,640 --> 01:02:22,400
that we started with multicast it

1461
01:02:22,400 --> 01:02:24,480
started like 15 years ago

1462
01:02:24,480 --> 01:02:28,240
and we have at the moment 4 500 users

1463
01:02:28,240 --> 01:02:31,839
then for the terrestrial service

1464
01:02:31,839 --> 01:02:35,440
native multicast we have between

1465
01:02:35,440 --> 01:02:39,200
around 25 users and with a combination

1466
01:02:39,200 --> 01:02:40,559
of all the rest

1467
01:02:40,559 --> 01:02:44,640
of gre tunnels and

1468
01:02:44,640 --> 01:02:49,039
l2p ipsec we have 10 more users

1469
01:02:49,039 --> 01:02:53,119
however we we're in the in kind of a

1470
01:02:53,119 --> 01:02:56,720
transition phase where we know

1471
01:02:56,720 --> 01:03:00,000
that most of our data in the future will

1472
01:03:00,000 --> 01:03:02,480
only be available uh through the

1473
01:03:02,480 --> 01:03:03,520
terrestrial links

1474
01:03:03,520 --> 01:03:05,920
and mainly through the native multicast

1475
01:03:05,920 --> 01:03:06,640
so we are

1476
01:03:06,640 --> 01:03:09,599
encouraging now our users to start

1477
01:03:09,599 --> 01:03:12,000
migrating or setting up their stations

1478
01:03:12,000 --> 01:03:13,520
via the terrestrial links

1479
01:03:13,520 --> 01:03:16,720
via via native multicast

1480
01:03:16,720 --> 01:03:20,400
okay thank you and oriole um

1481
01:03:20,400 --> 01:03:22,400
what about cdn what about you doing this

1482
01:03:22,400 --> 01:03:23,520
plain old unicast

1483
01:03:23,520 --> 01:03:26,160
um have have you know how much is

1484
01:03:26,160 --> 01:03:29,280
multicast would you say

1485
01:03:29,280 --> 01:03:31,359
can you articulate you know how much

1486
01:03:31,359 --> 01:03:33,200
more efficient the efficiency gains you

1487
01:03:33,200 --> 01:03:35,359
get from multicast over say just doing

1488
01:03:35,359 --> 01:03:38,400
unicast or cdns um okay

1489
01:03:38,400 --> 01:03:42,839
yeah um how uh our data is

1490
01:03:42,839 --> 01:03:45,119
um it's very dynamic

1491
01:03:45,119 --> 01:03:48,319
we only we only send the data file once

1492
01:03:48,319 --> 01:03:50,799
uh and after a certain period of time it

1493
01:03:50,799 --> 01:03:52,240
has expired has no

1494
01:03:52,240 --> 01:03:55,359
no much more no more value to our users

1495
01:03:55,359 --> 01:03:57,839
therefore the concept with this with the

1496
01:03:57,839 --> 01:03:58,720
cdn

1497
01:03:58,720 --> 01:04:01,839
um i don't see it really applicable to

1498
01:04:01,839 --> 01:04:03,280
our case

1499
01:04:03,280 --> 01:04:05,599
because i understand that it makes sense

1500
01:04:05,599 --> 01:04:06,720
for the cdns

1501
01:04:06,720 --> 01:04:09,280
for the data this data replication to

1502
01:04:09,280 --> 01:04:09,760
stay

1503
01:04:09,760 --> 01:04:12,000
on those for longer periods of time like

1504
01:04:12,000 --> 01:04:12,960
if you like like

1505
01:04:12,960 --> 01:04:16,400
netflix for instance um but for our case

1506
01:04:16,400 --> 01:04:17,359
i don't see it

1507
01:04:17,359 --> 01:04:20,880
and besides um i don't

1508
01:04:20,880 --> 01:04:24,480
know the cost of of multicast

1509
01:04:24,480 --> 01:04:27,119
native because our terrestrial link is

1510
01:04:27,119 --> 01:04:28,160
so low

1511
01:04:28,160 --> 01:04:30,240
compared to the alternatives that i

1512
01:04:30,240 --> 01:04:31,760
think that from the cost per

1513
01:04:31,760 --> 01:04:34,720
perspective i don't think it will make

1514
01:04:34,720 --> 01:04:35,920
um

1515
01:04:35,920 --> 01:04:41,039
sense either that's my

1516
01:04:41,039 --> 01:04:44,160
um so we maybe i can share a little more

1517
01:04:44,160 --> 01:04:45,760
on the cost

1518
01:04:45,760 --> 01:04:49,359
side so we have done some evaluations

1519
01:04:49,359 --> 01:04:50,160
internally

1520
01:04:50,160 --> 01:04:53,200
and we see you know

1521
01:04:53,200 --> 01:04:55,119
obviously i'm i'm stating something that

1522
01:04:55,119 --> 01:04:56,880
you know already that the cost of native

1523
01:04:56,880 --> 01:04:58,000
multicast

1524
01:04:58,000 --> 01:05:00,480
is the fixed cost regardless of how many

1525
01:05:00,480 --> 01:05:02,319
users you have

1526
01:05:02,319 --> 01:05:04,480
we see that already for humid cast

1527
01:05:04,480 --> 01:05:06,160
satellite

1528
01:05:06,160 --> 01:05:09,920
however the um the bandwidth the

1529
01:05:09,920 --> 01:05:11,520
satellite capacity

1530
01:05:11,520 --> 01:05:14,799
is very expensive uh that's why we're

1531
01:05:14,799 --> 01:05:15,680
migrating to

1532
01:05:15,680 --> 01:05:18,960
similar concept uh of disseminating via

1533
01:05:18,960 --> 01:05:20,839
multicast but over terrestrial links

1534
01:05:20,839 --> 01:05:22,079
with

1535
01:05:22,079 --> 01:05:25,359
it has this also this fixed cost

1536
01:05:25,359 --> 01:05:28,640
regardless of the number of users and

1537
01:05:28,640 --> 01:05:29,280
it's

1538
01:05:29,280 --> 01:05:32,559
probably it's around uh

1539
01:05:32,559 --> 01:05:35,039
one magnitude one order of magnitude

1540
01:05:35,039 --> 01:05:35,760
less

1541
01:05:35,760 --> 01:05:38,160
so it's quite uh cost efficient yeah

1542
01:05:38,160 --> 01:05:39,680
great

1543
01:05:39,680 --> 01:05:41,760
yes well we have to move on to our next

1544
01:05:41,760 --> 01:05:42,799
uh freezo

1545
01:05:42,799 --> 01:05:45,920
but um uh this this was great uh

1546
01:05:45,920 --> 01:05:47,920
i think you you you're putting together

1547
01:05:47,920 --> 01:05:48,960
pretty much you know

1548
01:05:48,960 --> 01:05:51,839
every bit of multicast uh between access

1549
01:05:51,839 --> 01:05:53,520
control encryption

1550
01:05:53,520 --> 01:05:57,200
um reliability um

1551
01:05:57,200 --> 01:06:01,359
and and uh inner domain ssm

1552
01:06:01,359 --> 01:06:04,480
that's it's great to see amt it's great

1553
01:06:04,480 --> 01:06:05,039
to see

1554
01:06:05,039 --> 01:06:07,599
a lot of the tools developed here in

1555
01:06:07,599 --> 01:06:09,920
action

1556
01:06:10,000 --> 01:06:12,160
yeah actually actually this amt

1557
01:06:12,160 --> 01:06:14,319
technology it looks very very promising

1558
01:06:14,319 --> 01:06:15,200
for our

1559
01:06:15,200 --> 01:06:17,680
for our case and we are looking forward

1560
01:06:17,680 --> 01:06:18,240
to

1561
01:06:18,240 --> 01:06:21,520
to test to test that more extensively

1562
01:06:21,520 --> 01:06:24,480
so maybe i'll get back to some of you

1563
01:06:24,480 --> 01:06:25,920
for some support at some point

1564
01:06:25,920 --> 01:06:27,680
i'll if you don't mind i'll share my

1565
01:06:27,680 --> 01:06:29,039
also my contacts in

1566
01:06:29,039 --> 01:06:31,839
in the chat and you can please contact

1567
01:06:31,839 --> 01:06:35,359
me if you have any further questions

1568
01:06:35,839 --> 01:06:40,880
great thank you thank you

1569
01:06:42,400 --> 01:06:46,400
all right jake uh

1570
01:06:46,400 --> 01:06:48,559
oh that was very cool good to hear

1571
01:06:48,559 --> 01:06:51,039
you're getting 100 megabits out of

1572
01:06:51,039 --> 01:06:54,079
the amt um yeah

1573
01:06:54,079 --> 01:06:55,680
i i don't think i've run it that fast

1574
01:06:55,680 --> 01:06:57,440
yet

1575
01:06:57,440 --> 01:06:59,760
and it wasn't just me by the way i think

1576
01:06:59,760 --> 01:07:01,280
i put it up in its current

1577
01:07:01,280 --> 01:07:02,960
sort of location and cleaned it up a bit

1578
01:07:02,960 --> 01:07:04,400
but this was uh

1579
01:07:04,400 --> 01:07:06,720
this working group actually did the bulk

1580
01:07:06,720 --> 01:07:08,079
of the work and i just sort of

1581
01:07:08,079 --> 01:07:11,520
um got it got it running again so uh

1582
01:07:11,520 --> 01:07:14,559
and that was all before my time so yeah

1583
01:07:14,559 --> 01:07:18,079
um right i think i will uh

1584
01:07:18,079 --> 01:07:20,559
by my account we are about 17 minutes

1585
01:07:20,559 --> 01:07:21,520
behind

1586
01:07:21,520 --> 01:07:23,520
i think and so i'm going to try and be

1587
01:07:23,520 --> 01:07:24,880
really fast because i really want to

1588
01:07:24,880 --> 01:07:26,960
hear lorenzo's presentation yeah so

1589
01:07:26,960 --> 01:07:29,200
jake you have told uh can you can you

1590
01:07:29,200 --> 01:07:30,960
take it to the bottom of the hour

1591
01:07:30,960 --> 01:07:34,640
uh 5 30 your time

1592
01:07:34,640 --> 01:07:37,680
23 minutes i i will try to be done by

1593
01:07:37,680 --> 01:07:39,039
then yeah

1594
01:07:39,039 --> 01:07:42,640
um all right so uh

1595
01:07:42,640 --> 01:07:45,760
yeah i'm jake i'm uh

1596
01:07:45,760 --> 01:07:48,079
working on these four drafts uh mostly

1597
01:07:48,079 --> 01:07:49,359
what i'm really working on

1598
01:07:49,359 --> 01:07:51,119
is trying to make the deployment more

1599
01:07:51,119 --> 01:07:52,720
plausible uh

1600
01:07:52,720 --> 01:07:56,480
and these drafts are are more like a uh

1601
01:07:56,480 --> 01:07:59,839
a step that helps me do that um but

1602
01:07:59,839 --> 01:08:02,720
uh but i i i do want them to happen so

1603
01:08:02,720 --> 01:08:04,240
um

1604
01:08:04,240 --> 01:08:07,599
yeah next slide please uh did i

1605
01:08:07,599 --> 01:08:10,880
did i get you the outline in time

1606
01:08:10,880 --> 01:08:13,119
is it there no okay so i sent some

1607
01:08:13,119 --> 01:08:14,960
updated slides they had an outline

1608
01:08:14,960 --> 01:08:16,158
i think there's four things i'm going to

1609
01:08:16,158 --> 01:08:19,120
cover the trial status the um

1610
01:08:19,120 --> 01:08:22,839
uh the

1611
01:08:22,839 --> 01:08:26,080
uh a brief overview of the

1612
01:08:26,080 --> 01:08:28,640
the benefits we're seeing in our benefit

1613
01:08:28,640 --> 01:08:29,359
analysis

1614
01:08:29,359 --> 01:08:32,399
uh modeling um the status of the

1615
01:08:32,399 --> 01:08:34,000
implementations we have ongoing

1616
01:08:34,000 --> 01:08:38,080
and uh some the updates uh

1617
01:08:38,080 --> 01:08:40,640
on the docs and their sort of current

1618
01:08:40,640 --> 01:08:42,080
status and and the next steps we're

1619
01:08:42,080 --> 01:08:43,198
looking at

1620
01:08:43,198 --> 01:08:45,520
um so the the first thing is the trial

1621
01:08:45,520 --> 01:08:48,000
status um

1622
01:08:48,000 --> 01:08:51,759
so the we've uh hooked up with six isps

1623
01:08:51,759 --> 01:08:52,960
that are

1624
01:08:52,960 --> 01:08:55,279
working with our ingest platform uh that

1625
01:08:55,279 --> 01:08:57,120
includes the amt gateway

1626
01:08:57,120 --> 01:09:00,640
and the dryad based sort of

1627
01:09:00,640 --> 01:09:05,198
look up to drive it based on a

1628
01:09:05,198 --> 01:09:08,080
a presented about that before um so i'm

1629
01:09:08,080 --> 01:09:09,520
not gonna go over it now

1630
01:09:09,520 --> 01:09:13,040
uh the traffic we're running we have a

1631
01:09:13,040 --> 01:09:14,479
couple different pieces there's

1632
01:09:14,479 --> 01:09:17,279
um so we've got some of our own test

1633
01:09:17,279 --> 01:09:18,719
traffic but we also have some

1634
01:09:18,719 --> 01:09:21,759
uh production traffic from uh several

1635
01:09:21,759 --> 01:09:23,279
different content providers

1636
01:09:23,279 --> 01:09:26,880
um that are uh

1637
01:09:26,880 --> 01:09:28,238
i think i think they're customers of

1638
01:09:28,238 --> 01:09:30,000
ours i assume um

1639
01:09:30,000 --> 01:09:35,120
and they're uh uh geo located with the

1640
01:09:35,120 --> 01:09:37,520
relevant isps to sort of prove out the

1641
01:09:37,520 --> 01:09:39,679
the notion of distributing some of the

1642
01:09:39,679 --> 01:09:41,839
local content with multicast

1643
01:09:41,839 --> 01:09:45,439
uh ingested sort of in the over-the-top

1644
01:09:45,439 --> 01:09:47,040
uh method into the isps and then

1645
01:09:47,040 --> 01:09:49,279
distributed within the isps

1646
01:09:49,279 --> 01:09:52,719
um virgin media uh you know shout out to

1647
01:09:52,719 --> 01:09:56,159
um loba and neil and harry thanks

1648
01:09:56,159 --> 01:09:58,560
for the feedback uh the other partners

1649
01:09:58,560 --> 01:10:00,000
we've got have not yet given

1650
01:10:00,000 --> 01:10:01,199
permission to use their name so we're

1651
01:10:01,199 --> 01:10:04,239
respecting that um

1652
01:10:04,239 --> 01:10:06,640
uh most of the trials are still uh

1653
01:10:06,640 --> 01:10:08,080
active and people are still

1654
01:10:08,080 --> 01:10:11,199
uh messing with the uh with the setups a

1655
01:10:11,199 --> 01:10:13,040
few of them have not yet started so the

1656
01:10:13,040 --> 01:10:15,199
six only refers to the ones that uh that

1657
01:10:15,199 --> 01:10:16,159
we've got

1658
01:10:16,159 --> 01:10:19,199
actually some level of work has

1659
01:10:19,199 --> 01:10:21,760
actually begun in those isps um there

1660
01:10:21,760 --> 01:10:23,040
are more on the way

1661
01:10:23,040 --> 01:10:24,960
and and more welcome we're actually

1662
01:10:24,960 --> 01:10:26,480
looking at trying to sort of

1663
01:10:26,480 --> 01:10:29,920
make the the trial artifacts more public

1664
01:10:29,920 --> 01:10:30,960
and let people

1665
01:10:30,960 --> 01:10:33,040
stand it up and try things on their own

1666
01:10:33,040 --> 01:10:35,120
as our as our next step uh so next slide

1667
01:10:35,120 --> 01:10:36,480
please

1668
01:10:36,480 --> 01:10:38,400
and uh jake did you say you had newer

1669
01:10:38,400 --> 01:10:40,080
slides i'm sorry i might not have i

1670
01:10:40,080 --> 01:10:42,159
might have missed those

1671
01:10:42,159 --> 01:10:44,320
uh it was just one thing with the with

1672
01:10:44,320 --> 01:10:45,679
the outline i sent it like 10 minutes

1673
01:10:45,679 --> 01:10:46,239
before i

1674
01:10:46,239 --> 01:10:49,600
started so sorry my bad um

1675
01:10:49,600 --> 01:10:51,760
and uh just realizing i had left out the

1676
01:10:51,760 --> 01:10:53,120
outline um

1677
01:10:53,120 --> 01:10:55,679
so there's a few key insights we've

1678
01:10:55,679 --> 01:10:57,120
gotten from the trials

1679
01:10:57,120 --> 01:11:00,560
um one is that uh

1680
01:11:00,560 --> 01:11:01,920
consistently some of the feedback we're

1681
01:11:01,920 --> 01:11:04,080
getting from usps and this includes

1682
01:11:04,080 --> 01:11:05,440
uh not just the ones that have

1683
01:11:05,440 --> 01:11:06,880
participated in the trials but some that

1684
01:11:06,880 --> 01:11:08,480
we've talked to that are have not

1685
01:11:08,480 --> 01:11:09,199
participated

1686
01:11:09,199 --> 01:11:12,560
yet or that don't uh

1687
01:11:12,560 --> 01:11:15,840
you know don't believe us yet

1688
01:11:15,840 --> 01:11:19,760
um the uh game downloads are a big

1689
01:11:19,760 --> 01:11:22,080
part of why they're interested uh right

1690
01:11:22,080 --> 01:11:23,679
now this is a

1691
01:11:23,679 --> 01:11:25,120
one of the key pain points that people

1692
01:11:25,120 --> 01:11:27,440
are experiencing um so it's not just

1693
01:11:27,440 --> 01:11:28,960
about delivering video and real-time

1694
01:11:28,960 --> 01:11:30,080
stuff it's also about

1695
01:11:30,080 --> 01:11:33,280
uh just getting a better job done

1696
01:11:33,280 --> 01:11:36,800
on the you know the peak offloads

1697
01:11:36,800 --> 01:11:39,600
another is that mnat it maybe i

1698
01:11:39,600 --> 01:11:40,080
shouldn't say

1699
01:11:40,080 --> 01:11:42,640
m not but rather the problems that mnat

1700
01:11:42,640 --> 01:11:44,159
can work around

1701
01:11:44,159 --> 01:11:47,040
uh were more prevalent than we expected

1702
01:11:47,040 --> 01:11:48,239
um

1703
01:11:48,239 --> 01:11:51,760
of the of the six that have started uh

1704
01:11:51,760 --> 01:11:54,880
one of them has like proven it out

1705
01:11:54,880 --> 01:11:55,760
without

1706
01:11:55,760 --> 01:11:58,960
needing any mnat uh

1707
01:11:58,960 --> 01:12:01,199
two of them we didn't think we were

1708
01:12:01,199 --> 01:12:03,040
going to need m-nap but it turned out we

1709
01:12:03,040 --> 01:12:03,520
did

1710
01:12:03,520 --> 01:12:07,040
and it was a good thing that we had a a

1711
01:12:07,040 --> 01:12:10,239
build sort of almost running by then and

1712
01:12:10,239 --> 01:12:13,440
um the fourth one uh

1713
01:12:13,440 --> 01:12:14,960
we knew from the front that we were

1714
01:12:14,960 --> 01:12:17,679
going to need mnat um

1715
01:12:17,679 --> 01:12:19,920
and then there's two that uh we haven't

1716
01:12:19,920 --> 01:12:20,719
we haven't yet

1717
01:12:20,719 --> 01:12:22,800
gotten them working yet so we aren't

1718
01:12:22,800 --> 01:12:24,159
totally sure yet whether it's going to

1719
01:12:24,159 --> 01:12:25,920
be necessary or not but

1720
01:12:25,920 --> 01:12:28,000
uh this was i mean it's a small sample

1721
01:12:28,000 --> 01:12:29,679
size but it's

1722
01:12:29,679 --> 01:12:34,000
uh relatively high like some of the um

1723
01:12:34,000 --> 01:12:37,920
the issues it encountered i i think uh

1724
01:12:37,920 --> 01:12:39,280
there might be one more i need to add to

1725
01:12:39,280 --> 01:12:41,440
the motivation section of the i'm not

1726
01:12:41,440 --> 01:12:42,159
draft but

1727
01:12:42,159 --> 01:12:45,760
um uh mostly they're in line with the

1728
01:12:45,760 --> 01:12:47,199
things we've seen there

1729
01:12:47,199 --> 01:12:50,480
uh it was basically like

1730
01:12:50,480 --> 01:12:54,159
uh their tv service was only using uh

1731
01:12:54,159 --> 01:12:57,199
asm and so their home gateways

1732
01:12:57,199 --> 01:13:00,960
did support multicast but only igmp v2

1733
01:13:00,960 --> 01:13:02,800
and although they think they can upgrade

1734
01:13:02,800 --> 01:13:04,480
that with the firmware at some point and

1735
01:13:04,480 --> 01:13:05,440
they do sort of

1736
01:13:05,440 --> 01:13:07,840
manage the home gateways it's going to

1737
01:13:07,840 --> 01:13:09,360
that's a whole update cycle that's going

1738
01:13:09,360 --> 01:13:10,640
to take a while and they were able to

1739
01:13:10,640 --> 01:13:11,600
proceed

1740
01:13:11,600 --> 01:13:13,600
by using mnat all the way south of the

1741
01:13:13,600 --> 01:13:15,199
home gateway

1742
01:13:15,199 --> 01:13:18,480
with the egress so we're looking into

1743
01:13:18,480 --> 01:13:20,320
uh i'll get to that in the in the

1744
01:13:20,320 --> 01:13:22,640
browser update um

1745
01:13:22,640 --> 01:13:26,719
uh but the overall uh answer is that

1746
01:13:26,719 --> 01:13:29,760
we are it's looking like cautious

1747
01:13:29,760 --> 01:13:31,600
optimism is about the right

1748
01:13:31,600 --> 01:13:33,840
way to look at this um we haven't hit

1749
01:13:33,840 --> 01:13:35,120
any stoppers

1750
01:13:35,120 --> 01:13:37,840
yet uh and we're we're thinking that

1751
01:13:37,840 --> 01:13:38,719
this is uh

1752
01:13:38,719 --> 01:13:40,800
this is going to be plausible and pretty

1753
01:13:40,800 --> 01:13:42,400
good based on the sort of feedback that

1754
01:13:42,400 --> 01:13:43,520
we're getting

1755
01:13:43,520 --> 01:13:47,040
um so yeah good um it is pretty slow

1756
01:13:47,040 --> 01:13:48,719
right now the implementations are

1757
01:13:48,719 --> 01:13:51,679
are a bit crappy uh of the prototype

1758
01:13:51,679 --> 01:13:52,400
stuff so

1759
01:13:52,400 --> 01:13:55,360
um that's gonna that might impact the

1760
01:13:55,360 --> 01:13:56,480
drafts also so

1761
01:13:56,480 --> 01:13:59,520
uh yeah next slide

1762
01:13:59,520 --> 01:14:03,120
uh and i think we're into

1763
01:14:03,120 --> 01:14:05,679
uh the uh yeah the benefit analysis i'll

1764
01:14:05,679 --> 01:14:08,159
be real quick on this um

1765
01:14:08,159 --> 01:14:11,440
so the the

1766
01:14:11,760 --> 01:14:13,600
this is a work in progress and i just

1767
01:14:13,600 --> 01:14:15,120
wanted to give a quick preview but

1768
01:14:15,120 --> 01:14:18,000
the the basic idea is there's a bunch of

1769
01:14:18,000 --> 01:14:19,199
the traffic that we're

1770
01:14:19,199 --> 01:14:20,800
actually sending according to our logs

1771
01:14:20,800 --> 01:14:22,400
and our stats of whatever

1772
01:14:22,400 --> 01:14:25,199
um so this is a snapshot of like one isp

1773
01:14:25,199 --> 01:14:26,320
on one normal day

1774
01:14:26,320 --> 01:14:29,199
so nothing special here um there's a

1775
01:14:29,199 --> 01:14:30,560
bunch of the traffic that we haven't

1776
01:14:30,560 --> 01:14:31,600
like

1777
01:14:31,600 --> 01:14:33,600
managed to pin down like how would we

1778
01:14:33,600 --> 01:14:34,960
multicast it or not

1779
01:14:34,960 --> 01:14:37,760
and uh it's less that we think it's not

1780
01:14:37,760 --> 01:14:39,600
multicastable then that

1781
01:14:39,600 --> 01:14:42,000
um there's details of of doing the log

1782
01:14:42,000 --> 01:14:44,080
analysis that we haven't got to yet

1783
01:14:44,080 --> 01:14:46,159
uh so although we think that some of it

1784
01:14:46,159 --> 01:14:47,199
will remain

1785
01:14:47,199 --> 01:14:50,080
um as probably not multicastable in a

1786
01:14:50,080 --> 01:14:51,199
broader sense

1787
01:14:51,199 --> 01:14:55,040
uh it's not quite as big as what that

1788
01:14:55,040 --> 01:14:56,080
blue represents but

1789
01:14:56,080 --> 01:14:58,480
um the green part is the part that we

1790
01:14:58,480 --> 01:15:00,080
have analyzed and the dark green part is

1791
01:15:00,080 --> 01:15:01,760
the part we think we can chop off based

1792
01:15:01,760 --> 01:15:03,040
on what we've got

1793
01:15:03,040 --> 01:15:05,120
um so if you go to the next slide that

1794
01:15:05,120 --> 01:15:06,159
brings into the

1795
01:15:06,159 --> 01:15:11,520
uh the green bit there

1796
01:15:11,520 --> 01:15:13,840
and we're from this part with

1797
01:15:13,840 --> 01:15:15,040
conservative estimates we're seeing

1798
01:15:15,040 --> 01:15:15,520
about

1799
01:15:15,520 --> 01:15:17,920
uh we think that an eight percent of the

1800
01:15:17,920 --> 01:15:20,400
total traffic into the isp

1801
01:15:20,400 --> 01:15:22,400
uh is a lower bound on what we think we

1802
01:15:22,400 --> 01:15:23,600
can offload and we think it's going to

1803
01:15:23,600 --> 01:15:24,000
get better

1804
01:15:24,000 --> 01:15:25,600
as we go forward so this is part of why

1805
01:15:25,600 --> 01:15:27,520
we think it's as we get sort of

1806
01:15:27,520 --> 01:15:29,760
more of this analysis done so this is

1807
01:15:29,760 --> 01:15:30,880
part of why we think it's

1808
01:15:30,880 --> 01:15:33,520
um it's going to be feasible here uh and

1809
01:15:33,520 --> 01:15:35,199
we're seeing a sort of long tail effect

1810
01:15:35,199 --> 01:15:36,080
where um

1811
01:15:36,080 --> 01:15:39,199
you know the the these colors here are

1812
01:15:39,199 --> 01:15:40,960
uh are different levels and they're

1813
01:15:40,960 --> 01:15:42,560
they're in the top

1814
01:15:42,560 --> 01:15:45,040
left of the chart there it's like that

1815
01:15:45,040 --> 01:15:46,159
first uh

1816
01:15:46,159 --> 01:15:48,880
block is if you just had one object that

1817
01:15:48,880 --> 01:15:50,320
was being multicasted

1818
01:15:50,320 --> 01:15:51,600
then that's how much you'd be able to

1819
01:15:51,600 --> 01:15:53,280
offload of the traffic if you take the

1820
01:15:53,280 --> 01:15:55,040
top object that we think we can

1821
01:15:55,040 --> 01:15:56,719
if you take another five objects and

1822
01:15:56,719 --> 01:15:58,080
that's the next block and then it goes

1823
01:15:58,080 --> 01:15:59,840
to 10 and then 20 and 50

1824
01:15:59,840 --> 01:16:00,719
you can see there's sort of a

1825
01:16:00,719 --> 01:16:03,760
diminishing return um but again

1826
01:16:03,760 --> 01:16:05,840
those numbers should get somewhat bigger

1827
01:16:05,840 --> 01:16:07,280
when we get uh

1828
01:16:07,280 --> 01:16:10,400
when we get access to more objects in

1829
01:16:10,400 --> 01:16:12,000
there so this is the sort of

1830
01:16:12,000 --> 01:16:13,360
direction we're going with how we're

1831
01:16:13,360 --> 01:16:15,120
looking at the analysis and

1832
01:16:15,120 --> 01:16:16,560
what we're hoping to achieve and it's

1833
01:16:16,560 --> 01:16:18,320
it's mostly about shaving off the peak

1834
01:16:18,320 --> 01:16:19,280
is the

1835
01:16:19,280 --> 01:16:22,320
is the big um

1836
01:16:22,320 --> 01:16:24,560
driver for the isp so that's where we're

1837
01:16:24,560 --> 01:16:26,080
looking to sort of capture the most

1838
01:16:26,080 --> 01:16:27,679
value on that

1839
01:16:27,679 --> 01:16:29,120
side of it and this is also an important

1840
01:16:29,120 --> 01:16:31,440
consideration on our side although

1841
01:16:31,440 --> 01:16:32,880
we're not sure that this style of

1842
01:16:32,880 --> 01:16:34,640
modeling really captures the whole thing

1843
01:16:34,640 --> 01:16:37,600
because um it's based it's based only on

1844
01:16:37,600 --> 01:16:39,199
what we're actually doing today

1845
01:16:39,199 --> 01:16:42,159
not covering necessarily all the uh

1846
01:16:42,159 --> 01:16:42,880
potential

1847
01:16:42,880 --> 01:16:45,040
improvements as we shift more things to

1848
01:16:45,040 --> 01:16:46,640
be able to use this so

1849
01:16:46,640 --> 01:16:50,000
um so looking at this as a lower bound

1850
01:16:50,000 --> 01:16:51,440
on what we think we can achieve

1851
01:16:51,440 --> 01:16:54,480
is is uh it's a good start but there's a

1852
01:16:54,480 --> 01:16:55,199
lot more to do

1853
01:16:55,199 --> 01:16:57,280
on this so don't take it as as any kind

1854
01:16:57,280 --> 01:16:58,480
of final

1855
01:16:58,480 --> 01:17:01,120
um yeah next slide unless there's any

1856
01:17:01,120 --> 01:17:02,480
hang on jake i had a question for the

1857
01:17:02,480 --> 01:17:03,199
slide

1858
01:17:03,199 --> 01:17:04,960
right this is greg can we go back to the

1859
01:17:04,960 --> 01:17:06,640
previous line

1860
01:17:06,640 --> 01:17:08,320
so i can talk when it comes up there we

1861
01:17:08,320 --> 01:17:10,239
go is this based on

1862
01:17:10,239 --> 01:17:11,920
just uh download traffic or you're

1863
01:17:11,920 --> 01:17:13,280
looking at your entire traffic profile

1864
01:17:13,280 --> 01:17:14,840
that could be

1865
01:17:14,840 --> 01:17:17,679
offloaded uh so the

1866
01:17:17,679 --> 01:17:19,760
blue chart in the one before that is

1867
01:17:19,760 --> 01:17:20,800
based on the entire

1868
01:17:20,800 --> 01:17:22,640
traffic profile of everything we sent

1869
01:17:22,640 --> 01:17:24,080
into the isp okay

1870
01:17:24,080 --> 01:17:27,760
um grand total and and uh which is

1871
01:17:27,760 --> 01:17:30,880
uh and that that only counts

1872
01:17:30,880 --> 01:17:33,679
download um i mean there might be some

1873
01:17:33,679 --> 01:17:35,120
amount of traffic that that

1874
01:17:35,120 --> 01:17:37,440
is involved in receiving some upload

1875
01:17:37,440 --> 01:17:38,159
something but

1876
01:17:38,159 --> 01:17:40,719
uh uh but i mean specifically file

1877
01:17:40,719 --> 01:17:42,239
download like game updates and stuff

1878
01:17:42,239 --> 01:17:44,000
like that not necessarily live content

1879
01:17:44,000 --> 01:17:47,360
of any kind oh this part i

1880
01:17:47,360 --> 01:17:49,520
think um so on some of the analyses

1881
01:17:49,520 --> 01:17:50,400
we've done

1882
01:17:50,400 --> 01:17:52,480
uh we're trying to get to where we

1883
01:17:52,480 --> 01:17:53,840
merged them and it's not quite done yet

1884
01:17:53,840 --> 01:17:55,280
i think this one covers

1885
01:17:55,280 --> 01:17:57,280
mostly things that we think would be

1886
01:17:57,280 --> 01:17:59,280
achievable game downloads

1887
01:17:59,280 --> 01:18:01,280
um i'm not sure whether we got any live

1888
01:18:01,280 --> 01:18:03,360
content in this one or not

1889
01:18:03,360 --> 01:18:05,840
the live ones are more interesting uh so

1890
01:18:05,840 --> 01:18:06,640
far we've seen

1891
01:18:06,640 --> 01:18:08,800
on the big peak days with a with a

1892
01:18:08,800 --> 01:18:10,480
popular sporting event

1893
01:18:10,480 --> 01:18:14,080
um right and so uh yeah

1894
01:18:14,080 --> 01:18:15,760
uh that is not one of these days and

1895
01:18:15,760 --> 01:18:17,360
that's not part of this analysis this is

1896
01:18:17,360 --> 01:18:18,640
more like just

1897
01:18:18,640 --> 01:18:20,960
um this is like a normal tuesday where

1898
01:18:20,960 --> 01:18:22,640
there's some game documents or something

1899
01:18:22,640 --> 01:18:24,480
that was my next question this was just

1900
01:18:24,480 --> 01:18:26,560
like a typical day as opposed to like

1901
01:18:26,560 --> 01:18:27,120
you know some

1902
01:18:27,120 --> 01:18:28,400
mother's day event where you get

1903
01:18:28,400 --> 01:18:30,320
hammered right now the mother's day

1904
01:18:30,320 --> 01:18:31,920
events we know it's going to be

1905
01:18:31,920 --> 01:18:35,040
a lot bigger um we and again

1906
01:18:35,040 --> 01:18:36,640
this analysis is not quite complete

1907
01:18:36,640 --> 01:18:38,000
actually are clusters having trouble

1908
01:18:38,000 --> 01:18:39,520
which is why i don't have more of these

1909
01:18:39,520 --> 01:18:40,719
charts but

1910
01:18:40,719 --> 01:18:43,760
yeah the next one i'm hoping will have

1911
01:18:43,760 --> 01:18:44,400
some more

1912
01:18:44,400 --> 01:18:46,400
interesting numbers i just wanted to

1913
01:18:46,400 --> 01:18:48,080
give a quick snapshot of what we've got

1914
01:18:48,080 --> 01:18:48,960
here and

1915
01:18:48,960 --> 01:18:51,199
actually and showed that even even a

1916
01:18:51,199 --> 01:18:52,320
very uh

1917
01:18:52,320 --> 01:18:55,520
sort of pessimistic view of this

1918
01:18:55,520 --> 01:18:58,560
is uh it's hard to say that that it's

1919
01:18:58,560 --> 01:18:59,120
not

1920
01:18:59,120 --> 01:19:03,040
going to be profitable um so

1921
01:19:03,040 --> 01:19:04,880
we're we really do want to look into how

1922
01:19:04,880 --> 01:19:06,480
to make that happen

1923
01:19:06,480 --> 01:19:10,000
um yeah next slide

1924
01:19:14,239 --> 01:19:17,600
right so the uh chromium upstream is

1925
01:19:17,600 --> 01:19:19,440
currently stalled and kind of in

1926
01:19:19,440 --> 01:19:22,879
negotiations we're trying to get

1927
01:19:23,199 --> 01:19:26,000
through process hurdles and and kind of

1928
01:19:26,000 --> 01:19:27,840
get the security review we need

1929
01:19:27,840 --> 01:19:31,440
to be able to check the the early stuff

1930
01:19:31,440 --> 01:19:33,360
in so that we don't have to carry the

1931
01:19:33,360 --> 01:19:35,360
fork that kind of fell through so we're

1932
01:19:35,360 --> 01:19:37,440
gonna plan to carry a fork until we can

1933
01:19:37,440 --> 01:19:38,480
sort it out and we'll be

1934
01:19:38,480 --> 01:19:41,520
uh releasing or at least building

1935
01:19:41,520 --> 01:19:43,040
regular updates i think we'll be

1936
01:19:43,040 --> 01:19:44,080
releasing them

1937
01:19:44,080 --> 01:19:46,159
uh that's the intent to just put up a

1938
01:19:46,159 --> 01:19:47,920
binary that we'd built automatically

1939
01:19:47,920 --> 01:19:50,480
uh with the regular dev updates plus uh

1940
01:19:50,480 --> 01:19:52,560
plus one from the stable i think

1941
01:19:52,560 --> 01:19:55,840
um and that's uh so that's ongoing

1942
01:19:55,840 --> 01:19:58,000
uh we'll try to get it sorted out we

1943
01:19:58,000 --> 01:19:59,679
would still like to get into chromium

1944
01:19:59,679 --> 01:20:03,199
um if we had more public web developer

1945
01:20:03,199 --> 01:20:04,239
support

1946
01:20:04,239 --> 01:20:05,600
that would be helpful so if you know

1947
01:20:05,600 --> 01:20:08,080
anybody who wants this stuff

1948
01:20:08,080 --> 01:20:11,679
in the as a web api

1949
01:20:11,679 --> 01:20:13,440
then you know get them to speak up i was

1950
01:20:13,440 --> 01:20:15,280
able to cite several

1951
01:20:15,280 --> 01:20:17,679
people who had contributed such

1952
01:20:17,679 --> 01:20:19,440
statements so thanks to those that that

1953
01:20:19,440 --> 01:20:20,960
included morton peterson

1954
01:20:20,960 --> 01:20:24,320
uh martin peterson's comment about it um

1955
01:20:24,320 --> 01:20:27,440
uh guyan mishra's comment about the way

1956
01:20:27,440 --> 01:20:28,800
verizon's using stuff

1957
01:20:28,800 --> 01:20:32,000
and uh and the bbc's

1958
01:20:32,000 --> 01:20:33,760
uh hackathon from some time ago where

1959
01:20:33,760 --> 01:20:35,040
they did

1960
01:20:35,040 --> 01:20:36,960
they did a multicast video to the

1961
01:20:36,960 --> 01:20:39,760
browser uh demo but it required using

1962
01:20:39,760 --> 01:20:40,960
websockets

1963
01:20:40,960 --> 01:20:42,880
unicast to a local gateway that actually

1964
01:20:42,880 --> 01:20:44,800
did the multicast received which

1965
01:20:44,800 --> 01:20:48,320
um i'm i i assume that they would have

1966
01:20:48,320 --> 01:20:50,960
preferred to have a browser api

1967
01:20:50,960 --> 01:20:54,400
um so the other thing is that

1968
01:20:54,400 --> 01:20:57,600
uh we think ambi is more important to

1969
01:20:57,600 --> 01:20:58,159
the

1970
01:20:58,159 --> 01:21:00,560
end user particularly the browser the

1971
01:21:00,560 --> 01:21:01,840
ambi being the uh

1972
01:21:01,840 --> 01:21:04,320
the authentication spec that is uh

1973
01:21:04,320 --> 01:21:05,199
that's in our

1974
01:21:05,199 --> 01:21:09,360
the asymmetric authentication um

1975
01:21:09,360 --> 01:21:13,199
right yes um and uh

1976
01:21:13,199 --> 01:21:15,280
uh but we think we're gonna put the

1977
01:21:15,280 --> 01:21:16,400
m-net egress

1978
01:21:16,400 --> 01:21:20,320
uh um

1979
01:21:20,800 --> 01:21:24,080
behavior into the browser uh api before

1980
01:21:24,080 --> 01:21:25,920
we'll get the envy in there because

1981
01:21:25,920 --> 01:21:29,600
um it's the way we're doing it now

1982
01:21:29,600 --> 01:21:32,480
for the m not egress is sort of

1983
01:21:32,480 --> 01:21:34,639
emulating an operating system embedded

1984
01:21:34,639 --> 01:21:36,480
uh version of the egress so that you

1985
01:21:36,480 --> 01:21:38,400
don't have to have a separate box

1986
01:21:38,400 --> 01:21:39,840
south of the home gateway where the

1987
01:21:39,840 --> 01:21:42,000
where some of the problems are

1988
01:21:42,000 --> 01:21:43,920
so it's like running in the receiver as

1989
01:21:43,920 --> 01:21:45,520
an external thing

1990
01:21:45,520 --> 01:21:49,360
and that thing is is

1991
01:21:49,679 --> 01:21:54,239
kind of a problem so

1992
01:21:54,639 --> 01:21:56,480
if it's if it's embedded in the browser

1993
01:21:56,480 --> 01:21:57,840
api then uh

1994
01:21:57,840 --> 01:21:59,840
it should be able to receive the the

1995
01:21:59,840 --> 01:22:01,920
added version of the

1996
01:22:01,920 --> 01:22:05,280
uh of the traffic authenticate it as

1997
01:22:05,280 --> 01:22:07,280
though it was global and pass it to the

1998
01:22:07,280 --> 01:22:09,120
web api that only everyone had to know

1999
01:22:09,120 --> 01:22:10,480
about the global stuff so that's what

2000
01:22:10,480 --> 01:22:11,600
we're trying to put in

2001
01:22:11,600 --> 01:22:13,920
first it's also easier to do and can

2002
01:22:13,920 --> 01:22:15,679
help us with some of the prerequisites

2003
01:22:15,679 --> 01:22:16,880
that we're going to need for ambi as

2004
01:22:16,880 --> 01:22:17,600
well

2005
01:22:17,600 --> 01:22:24,560
so um yeah uh next slide please

2006
01:22:24,560 --> 01:22:27,440
uh the m-net implementation um it's

2007
01:22:27,440 --> 01:22:27,920
running

2008
01:22:27,920 --> 01:22:31,520
it's not great um it's uh

2009
01:22:31,520 --> 01:22:34,400
it's polling right now um and and we

2010
01:22:34,400 --> 01:22:35,600
might have to look at

2011
01:22:35,600 --> 01:22:38,000
at this also plus the dorms we might

2012
01:22:38,000 --> 01:22:38,639
have to look at

2013
01:22:38,639 --> 01:22:41,600
updating the specs to support a long

2014
01:22:41,600 --> 01:22:42,719
pole

2015
01:22:42,719 --> 01:22:46,639
uh sort of path for receiving updates um

2016
01:22:46,639 --> 01:22:49,840
because it's uh

2017
01:22:49,840 --> 01:22:52,000
like the jet conf implementation for

2018
01:22:52,000 --> 01:22:53,600
rest comp doesn't have

2019
01:22:53,600 --> 01:22:57,040
um the push easily built in

2020
01:22:57,040 --> 01:22:58,960
i'm not sure if we can make it happen

2021
01:22:58,960 --> 01:23:00,639
and so i'm looking into how to

2022
01:23:00,639 --> 01:23:04,480
how to do that um

2023
01:23:04,639 --> 01:23:06,800
but that that'll be ongoing uh the

2024
01:23:06,800 --> 01:23:08,239
slowness is because

2025
01:23:08,239 --> 01:23:10,239
uh because it's doing like a 10 second

2026
01:23:10,239 --> 01:23:12,159
pull and we're gonna have to do

2027
01:23:12,159 --> 01:23:14,639
a little better than that probably well

2028
01:23:14,639 --> 01:23:16,000
we might have to do a little better than

2029
01:23:16,000 --> 01:23:17,600
that like for our purposes this is

2030
01:23:17,600 --> 01:23:19,120
actually kind of okay because we run

2031
01:23:19,120 --> 01:23:21,280
with unicast for a while

2032
01:23:21,280 --> 01:23:23,440
and then like once the multicast starts

2033
01:23:23,440 --> 01:23:24,960
working we just start using it but i'm

2034
01:23:24,960 --> 01:23:26,480
not sure that'll really be okay for

2035
01:23:26,480 --> 01:23:27,840
everybody that wants to do multicast

2036
01:23:27,840 --> 01:23:28,480
development

2037
01:23:28,480 --> 01:23:32,480
in the web browser um

2038
01:23:32,480 --> 01:23:34,400
anyway and that is is running in three

2039
01:23:34,400 --> 01:23:35,840
of our trial partner labs

2040
01:23:35,840 --> 01:23:40,239
uh and uh using it we've got ip6 support

2041
01:23:40,239 --> 01:23:42,560
but only so far for local sg assignments

2042
01:23:42,560 --> 01:23:44,320
not yet for global sgs

2043
01:23:44,320 --> 01:23:46,080
uh that's basically because one of our

2044
01:23:46,080 --> 01:23:48,880
trial partners needed that and um

2045
01:23:48,880 --> 01:23:50,880
we haven't needed it yet for the global

2046
01:23:50,880 --> 01:23:52,400
sg but we would like to get that in

2047
01:23:52,400 --> 01:23:53,280
there too

2048
01:23:53,280 --> 01:23:56,400
uh yeah next slide please

2049
01:23:58,719 --> 01:24:01,840
the ingest platform implementation

2050
01:24:01,840 --> 01:24:03,600
cleaned up a bit and componentized some

2051
01:24:03,600 --> 01:24:05,120
of the pieces so um

2052
01:24:05,120 --> 01:24:06,719
i'd be happy to get into more details

2053
01:24:06,719 --> 01:24:08,159
with anybody who wants to know more

2054
01:24:08,159 --> 01:24:09,199
about that but the

2055
01:24:09,199 --> 01:24:12,080
ingest platform is sort of key to the uh

2056
01:24:12,080 --> 01:24:13,520
making it easy for

2057
01:24:13,520 --> 01:24:17,120
isps to um to perform the actual ingest

2058
01:24:17,120 --> 01:24:18,880
of traffic from outside and

2059
01:24:18,880 --> 01:24:20,880
and redistribute it as native multicast

2060
01:24:20,880 --> 01:24:22,080
inside

2061
01:24:22,080 --> 01:24:25,679
um so yeah but we also added a see back

2062
01:24:25,679 --> 01:24:26,800
thing i think i sent something in the

2063
01:24:26,800 --> 01:24:28,080
list about it too

2064
01:24:28,080 --> 01:24:30,560
um anybody who wants to discuss it i'd

2065
01:24:30,560 --> 01:24:32,080
be very happy to get some discussion on

2066
01:24:32,080 --> 01:24:32,880
the list

2067
01:24:32,880 --> 01:24:35,440
um but yeah i'll i'll actually talk

2068
01:24:35,440 --> 01:24:37,360
about the uh

2069
01:24:37,360 --> 01:24:41,599
docs a little more here so yeah go ahead

2070
01:24:42,840 --> 01:24:44,080
next

2071
01:24:44,080 --> 01:24:46,400
right so uh dorms and see back early

2072
01:24:46,400 --> 01:24:47,520
review

2073
01:24:47,520 --> 01:24:49,679
request sent um i'm hoping to get some

2074
01:24:49,679 --> 01:24:50,880
good feedback there

2075
01:24:50,880 --> 01:24:54,159
uh i might there was

2076
01:24:54,159 --> 01:24:57,920
a couple updates to see back um and

2077
01:24:57,920 --> 01:25:00,639
there's a couple updates we probably

2078
01:25:00,639 --> 01:25:04,239
are going to want to make uh also um

2079
01:25:04,239 --> 01:25:06,239
the priority concept i'm not sure is

2080
01:25:06,239 --> 01:25:13,839
really good the way

2081
01:25:21,600 --> 01:25:23,520
reconnecting audio can you guys hear me

2082
01:25:23,520 --> 01:25:25,199
again

2083
01:25:25,199 --> 01:25:26,960
yes i can hear you it said there was an

2084
01:25:26,960 --> 01:25:28,719
error did i cut out cut out for about

2085
01:25:28,719 --> 01:25:29,280
yeah you

2086
01:25:29,280 --> 01:25:32,560
come out for a bit you're back now okay

2087
01:25:32,560 --> 01:25:36,560
uh all right so the uh um

2088
01:25:36,719 --> 01:25:39,360
uh right dorms and see back uh earlier

2089
01:25:39,360 --> 01:25:40,320
view the

2090
01:25:40,320 --> 01:25:42,960
um see back i think needs a couple

2091
01:25:42,960 --> 01:25:43,440
updates

2092
01:25:43,440 --> 01:25:45,440
on the on the sort of circuit breaker

2093
01:25:45,440 --> 01:25:46,480
behavior

2094
01:25:46,480 --> 01:25:50,320
um and dorms actually i don't think i

2095
01:25:50,320 --> 01:25:51,600
put it on this side but i

2096
01:25:51,600 --> 01:25:54,480
i think i also need to to make sure that

2097
01:25:54,480 --> 01:25:54,960
the

2098
01:25:54,960 --> 01:25:56,880
push update is going to be feasible

2099
01:25:56,880 --> 01:25:58,480
somehow

2100
01:25:58,480 --> 01:26:00,719
and there's a chance that we'll need a

2101
01:26:00,719 --> 01:26:01,840
an update to the spec

2102
01:26:01,840 --> 01:26:04,719
as well so um so i think we're going to

2103
01:26:04,719 --> 01:26:06,000
do some experiments on that

2104
01:26:06,000 --> 01:26:08,960
and and see if i can get uh something

2105
01:26:08,960 --> 01:26:09,760
working

2106
01:26:09,760 --> 01:26:12,880
but um right now it's uh anything that's

2107
01:26:12,880 --> 01:26:14,719
using it is just polling

2108
01:26:14,719 --> 01:26:18,400
um so uh

2109
01:26:18,400 --> 01:26:20,400
it i'm not sure how that that'll be

2110
01:26:20,400 --> 01:26:22,000
enough especially with regard

2111
01:26:22,000 --> 01:26:25,199
to um speed of updates

2112
01:26:25,199 --> 01:26:27,360
as we go forward it could be done as a

2113
01:26:27,360 --> 01:26:28,880
later rev so

2114
01:26:28,880 --> 01:26:30,719
if we need to then then i could get the

2115
01:26:30,719 --> 01:26:32,639
dock pushed earlier than that but

2116
01:26:32,639 --> 01:26:36,000
um uh yeah uh i'm not

2117
01:26:36,000 --> 01:26:37,520
i'm not sure it's quite good enough as

2118
01:26:37,520 --> 01:26:39,760
it stands it could use more review and

2119
01:26:39,760 --> 01:26:40,880
engagement from people

2120
01:26:40,880 --> 01:26:44,000
messing with it um uh feedback about it

2121
01:26:44,000 --> 01:26:45,920
but um

2122
01:26:45,920 --> 01:26:47,440
anyway i'm working on these but they've

2123
01:26:47,440 --> 01:26:49,440
taken a backseat to to the work with the

2124
01:26:49,440 --> 01:26:50,800
isps

2125
01:26:50,800 --> 01:26:53,840
and trying to get this uh deploy bowl

2126
01:26:53,840 --> 01:26:58,320
and and maybe even deployed in places uh

2127
01:26:58,320 --> 01:27:00,719
so i i feel like the progress has looked

2128
01:27:00,719 --> 01:27:02,000
slow on these docks but

2129
01:27:02,000 --> 01:27:03,920
um but there's a lot of behind the

2130
01:27:03,920 --> 01:27:05,280
scenes stuff happening

2131
01:27:05,280 --> 01:27:07,199
uh so yeah next slide please jake in

2132
01:27:07,199 --> 01:27:08,320
terms of review

2133
01:27:08,320 --> 01:27:10,800
uh you know with four drafts which would

2134
01:27:10,800 --> 01:27:11,600
you say is

2135
01:27:11,600 --> 01:27:13,040
you know if people were to prioritize

2136
01:27:13,040 --> 01:27:14,800
which one should they you know help with

2137
01:27:14,800 --> 01:27:15,440
review

2138
01:27:15,440 --> 01:27:16,960
which which docs would you say are

2139
01:27:16,960 --> 01:27:18,560
mostly

2140
01:27:18,560 --> 01:27:20,239
important or are they all equally like

2141
01:27:20,239 --> 01:27:23,199
would i actually equally important

2142
01:27:23,199 --> 01:27:26,239
yeah um so what i actually care

2143
01:27:26,239 --> 01:27:28,080
the most about is whether it's uh really

2144
01:27:28,080 --> 01:27:30,080
going to work so what i'd love to see is

2145
01:27:30,080 --> 01:27:32,159
more people experimenting

2146
01:27:32,159 --> 01:27:34,159
with the actual implementation and

2147
01:27:34,159 --> 01:27:35,440
seeing if there's

2148
01:27:35,440 --> 01:27:39,040
um and it's it's really like if there's

2149
01:27:39,040 --> 01:27:40,800
parts of the implementation that won't

2150
01:27:40,800 --> 01:27:42,239
be adequate for people

2151
01:27:42,239 --> 01:27:46,080
then that's where i'd like to see um uh

2152
01:27:46,080 --> 01:27:47,440
there's things we can fix in the

2153
01:27:47,440 --> 01:27:49,360
implementation then

2154
01:27:49,360 --> 01:27:50,880
great fix them in the implementation but

2155
01:27:50,880 --> 01:27:52,400
if it requires a spec change that's the

2156
01:27:52,400 --> 01:27:53,760
part that i'm worried about like

2157
01:27:53,760 --> 01:27:55,679
if we make this rfc and then it's like

2158
01:27:55,679 --> 01:27:57,040
not quite good enough

2159
01:27:57,040 --> 01:27:59,600
um then you know either we have to rev

2160
01:27:59,600 --> 01:28:00,239
it

2161
01:28:00,239 --> 01:28:03,280
or like it makes it a little more noisy

2162
01:28:03,280 --> 01:28:05,600
i feel like and and less likely to

2163
01:28:05,600 --> 01:28:06,560
succeed

2164
01:28:06,560 --> 01:28:09,840
so um the the biggest problems i see

2165
01:28:09,840 --> 01:28:10,719
right now

2166
01:28:10,719 --> 01:28:14,000
are the sort of slowness of the update

2167
01:28:14,000 --> 01:28:17,360
of changes um and

2168
01:28:17,360 --> 01:28:19,840
so i'm curious like how much do people

2169
01:28:19,840 --> 01:28:21,360
care and

2170
01:28:21,360 --> 01:28:24,560
uh how bad is it and like what

2171
01:28:24,560 --> 01:28:26,840
what sort of join time do you need to

2172
01:28:26,840 --> 01:28:28,639
succeed

2173
01:28:28,639 --> 01:28:30,000
i'm not sure join time is the only

2174
01:28:30,000 --> 01:28:31,920
consideration there but um

2175
01:28:31,920 --> 01:28:33,840
but it's probably one of the big ones

2176
01:28:33,840 --> 01:28:36,000
and then also things like see back like

2177
01:28:36,000 --> 01:28:38,480
how variable is your maximum bit rate

2178
01:28:38,480 --> 01:28:39,120
and can you

2179
01:28:39,120 --> 01:28:41,040
like put a cap on the maximum bit rate

2180
01:28:41,040 --> 01:28:43,040
and handle it like is this actually

2181
01:28:43,040 --> 01:28:43,760
going to work for

2182
01:28:43,760 --> 01:28:46,320
other people who need to use it um these

2183
01:28:46,320 --> 01:28:47,920
kinds of questions i think are

2184
01:28:47,920 --> 01:28:51,040
are uh are where i have the most

2185
01:28:51,040 --> 01:28:52,480
concerns right now um

2186
01:28:52,480 --> 01:28:54,320
i'm you know like i'm making them work

2187
01:28:54,320 --> 01:28:55,520
for me that's great

2188
01:28:55,520 --> 01:28:59,920
you guys want to send it through okay

2189
01:28:59,920 --> 01:29:02,320
but i'm not sure it will really meet my

2190
01:29:02,320 --> 01:29:03,679
needs if if it

2191
01:29:03,679 --> 01:29:05,679
uh if it sort of gets adopted and turns

2192
01:29:05,679 --> 01:29:07,679
into a spec but more people don't use it

2193
01:29:07,679 --> 01:29:08,560
than just me

2194
01:29:08,560 --> 01:29:10,320
right so i think it needs to actually be

2195
01:29:10,320 --> 01:29:12,320
usable for more people not just

2196
01:29:12,320 --> 01:29:16,320
like look usable right um

2197
01:29:16,320 --> 01:29:19,840
right so uh

2198
01:29:19,840 --> 01:29:22,880
did that answer your question

2199
01:29:23,280 --> 01:29:27,360
uh and yes uh one minute left so next

2200
01:29:27,360 --> 01:29:27,840
steps

2201
01:29:27,840 --> 01:29:30,400
i want to take the trials public make it

2202
01:29:30,400 --> 01:29:31,920
so that people can sort of self-serve

2203
01:29:31,920 --> 01:29:33,280
and set it up and have all the pieces

2204
01:29:33,280 --> 01:29:34,000
they need to

2205
01:29:34,000 --> 01:29:36,480
to run things including the browser

2206
01:29:36,480 --> 01:29:38,080
testing and a video stream

2207
01:29:38,080 --> 01:29:42,639
to use it with um i'd like to uh

2208
01:29:42,639 --> 01:29:45,199
uh in you know supporting people who are

2209
01:29:45,199 --> 01:29:46,239
trying to do it

2210
01:29:46,239 --> 01:29:48,000
uh maybe make a little community with a

2211
01:29:48,000 --> 01:29:50,080
mailing list and a website or something

2212
01:29:50,080 --> 01:29:53,199
um anybody who wants to join me in in

2213
01:29:53,199 --> 01:29:54,320
trying to make that work

2214
01:29:54,320 --> 01:29:57,280
uh please reach out i'd like i love to

2215
01:29:57,280 --> 01:29:58,800
talk about it i don't think this needs

2216
01:29:58,800 --> 01:29:59,280
to be

2217
01:29:59,280 --> 01:30:02,400
a sort of aqua my internal effort only

2218
01:30:02,400 --> 01:30:05,679
um and uh i i also

2219
01:30:05,679 --> 01:30:08,000
would like to try doing native delivery

2220
01:30:08,000 --> 01:30:10,320
um on i2 where they have

2221
01:30:10,320 --> 01:30:13,440
i2 and also uh giant that like i2 is the

2222
01:30:13,440 --> 01:30:14,800
only one i knew about but

2223
01:30:14,800 --> 01:30:17,600
if gian is also doing native multicast

2224
01:30:17,600 --> 01:30:18,080
then

2225
01:30:18,080 --> 01:30:20,000
yeah let's let's get a an ingest

2226
01:30:20,000 --> 01:30:21,280
platform set up and

2227
01:30:21,280 --> 01:30:24,000
and running in there and see if we can

2228
01:30:24,000 --> 01:30:25,760
um

2229
01:30:25,760 --> 01:30:27,520
uh get the traffic delivered to those

2230
01:30:27,520 --> 01:30:29,920
who can who can receive it natively

2231
01:30:29,920 --> 01:30:32,960
um other contacts uh i think would

2232
01:30:32,960 --> 01:30:34,400
would also be great like we're trying to

2233
01:30:34,400 --> 01:30:36,239
sort of widen these trials and i think

2234
01:30:36,239 --> 01:30:37,120
uh

2235
01:30:37,120 --> 01:30:38,400
any place that's willing to forward

2236
01:30:38,400 --> 01:30:40,480
native multicast is a good candidate to

2237
01:30:40,480 --> 01:30:43,760
to talk about it with um and

2238
01:30:43,760 --> 01:30:46,719
i want to get the uh the file delivery

2239
01:30:46,719 --> 01:30:47,280
sort of

2240
01:30:47,280 --> 01:30:50,400
better done one idea i've got is to

2241
01:30:50,400 --> 01:30:54,080
to try extending apt the the ubuntu

2242
01:30:54,080 --> 01:30:56,960
uh package delivery system like if we

2243
01:30:56,960 --> 01:30:57,360
can

2244
01:30:57,360 --> 01:30:59,120
make it so that that's sort of auto

2245
01:30:59,120 --> 01:31:01,280
updating with with the most popular

2246
01:31:01,280 --> 01:31:03,040
downloaded downloads and packages

2247
01:31:03,040 --> 01:31:04,960
and they're available over multicast and

2248
01:31:04,960 --> 01:31:06,320
maybe trying to do it

2249
01:31:06,320 --> 01:31:08,239
um that might be a really interesting

2250
01:31:08,239 --> 01:31:09,760
path to sort of

2251
01:31:09,760 --> 01:31:11,440
get some useful traffic that doesn't

2252
01:31:11,440 --> 01:31:13,040
have to be gated on

2253
01:31:13,040 --> 01:31:16,480
on a company buying in um

2254
01:31:16,480 --> 01:31:19,360
so i'm i'm gonna see if i can do any

2255
01:31:19,360 --> 01:31:20,320
looking into that

2256
01:31:20,320 --> 01:31:23,040
um and and see sort of what hurdles i

2257
01:31:23,040 --> 01:31:24,960
run into like right now the

2258
01:31:24,960 --> 01:31:27,280
the like raptor implementation there's

2259
01:31:27,280 --> 01:31:29,120
some distribution limits on it so i need

2260
01:31:29,120 --> 01:31:30,320
to sort of

2261
01:31:30,320 --> 01:31:32,239
figure out what i can do to solve that

2262
01:31:32,239 --> 01:31:34,080
um

2263
01:31:34,080 --> 01:31:37,120
but uh i would like to get to make sure

2264
01:31:37,120 --> 01:31:38,960
that the file

2265
01:31:38,960 --> 01:31:41,120
download use case actually works because

2266
01:31:41,120 --> 01:31:42,840
that's one of the big drivers for the

2267
01:31:42,840 --> 01:31:44,480
isps um

2268
01:31:44,480 --> 01:31:45,920
and the other thing is to engage some

2269
01:31:45,920 --> 01:31:48,080
big game delivery partners because

2270
01:31:48,080 --> 01:31:50,960
because that also is uh we're talking to

2271
01:31:50,960 --> 01:31:51,600
them but

2272
01:31:51,600 --> 01:31:53,920
um we don't have we're not as far along

2273
01:31:53,920 --> 01:31:55,600
as i'd like to be on that

2274
01:31:55,600 --> 01:31:57,760
uh and we either got to get into

2275
01:31:57,760 --> 01:31:58,880
chromium or or

2276
01:31:58,880 --> 01:32:00,000
start doing this work in a different

2277
01:32:00,000 --> 01:32:01,840
browser we had some interest in doing

2278
01:32:01,840 --> 01:32:02,719
things in rust

2279
01:32:02,719 --> 01:32:05,520
from a couple of uh of student

2280
01:32:05,520 --> 01:32:06,560
researchers

2281
01:32:06,560 --> 01:32:10,000
so um actually i would love to end up

2282
01:32:10,000 --> 01:32:13,520
doing it in both and in more browsers um

2283
01:32:13,520 --> 01:32:16,719
but you know chromium is sort of the uh

2284
01:32:16,719 --> 01:32:18,800
more widely distributed one so far so i

2285
01:32:18,800 --> 01:32:20,080
was starting there but

2286
01:32:20,080 --> 01:32:23,360
i'm not too hung up on it so if we can't

2287
01:32:23,360 --> 01:32:24,080
get

2288
01:32:24,080 --> 01:32:25,679
into the upstream on that then we might

2289
01:32:25,679 --> 01:32:27,280
want to look into somewhere else

2290
01:32:27,280 --> 01:32:29,040
um but i'm still hopeful that we'll get

2291
01:32:29,040 --> 01:32:31,120
into everywhere ultimately

2292
01:32:31,120 --> 01:32:34,239
um yeah and i'd like to get dorms but i

2293
01:32:34,239 --> 01:32:35,840
want to make sure that push updates are

2294
01:32:35,840 --> 01:32:36,639
feasible

2295
01:32:36,639 --> 01:32:39,600
i think dorms is the closest uh to done

2296
01:32:39,600 --> 01:32:41,120
in terms of the spec

2297
01:32:41,120 --> 01:32:44,400
um but see back is

2298
01:32:44,400 --> 01:32:46,239
probably not too far behind but i think

2299
01:32:46,239 --> 01:32:47,520
needs a little more work on the

2300
01:32:47,520 --> 01:32:50,080
on the circuit breaker behavior part uh

2301
01:32:50,080 --> 01:32:51,280
and um

2302
01:32:51,280 --> 01:32:52,800
my biggest concern on dorms is really

2303
01:32:52,800 --> 01:32:55,280
just the push updates

2304
01:32:55,280 --> 01:32:57,840
so i think that's all i've got uh any

2305
01:32:57,840 --> 01:32:59,360
questions

2306
01:32:59,360 --> 01:33:01,840
i'm sorry i'm two minutes late yeah can

2307
01:33:01,840 --> 01:33:03,040
i throw just a couple at you

2308
01:33:03,040 --> 01:33:05,440
quick jake uh you mentioned this in beer

2309
01:33:05,440 --> 01:33:08,800
a bit about working with web uh rtc or

2310
01:33:08,800 --> 01:33:10,480
you know webrc

2311
01:33:10,480 --> 01:33:13,760
and uh i was wondering if is it um is

2312
01:33:13,760 --> 01:33:15,120
the expectation that they would just be

2313
01:33:15,120 --> 01:33:17,679
able to use the browser plugin

2314
01:33:17,679 --> 01:33:20,800
or do you think there's actually so uh

2315
01:33:20,800 --> 01:33:24,239
webrc being the um the

2316
01:33:24,239 --> 01:33:28,480
congestion control uh strategy

2317
01:33:28,480 --> 01:33:30,400
recommended by flute i'm not sure

2318
01:33:30,400 --> 01:33:32,159
everybody's familiar with right

2319
01:33:32,159 --> 01:33:34,880
um so webrtc is a different thing from

2320
01:33:34,880 --> 01:33:36,159
webrc

2321
01:33:36,159 --> 01:33:39,520
yeah so the flute spec requires the use

2322
01:33:39,520 --> 01:33:40,480
of webrc

2323
01:33:40,480 --> 01:33:42,480
and it's the it's only experimental but

2324
01:33:42,480 --> 01:33:45,199
it's required to implement

2325
01:33:45,199 --> 01:33:48,960
a part of flute as written

2326
01:33:48,960 --> 01:33:50,719
and i'm not sure it's actually good

2327
01:33:50,719 --> 01:33:52,239
enough it's like kind of a weird

2328
01:33:52,239 --> 01:33:53,760
waveform equation based

2329
01:33:53,760 --> 01:33:56,880
uh receiver driven congestion

2330
01:33:56,880 --> 01:34:00,560
control or something um and the uh

2331
01:34:00,560 --> 01:34:02,800
that doesn't match the actual pattern

2332
01:34:02,800 --> 01:34:04,000
traffics of

2333
01:34:04,000 --> 01:34:05,760
the the the actual traffic pattern of

2334
01:34:05,760 --> 01:34:07,199
anybody who's sending multicast that i

2335
01:34:07,199 --> 01:34:08,880
know of including ourselves

2336
01:34:08,880 --> 01:34:11,280
um this sort of uh idea that you can

2337
01:34:11,280 --> 01:34:13,199
send at a rate and then have it

2338
01:34:13,199 --> 01:34:15,760
have it decay and then by decaying

2339
01:34:15,760 --> 01:34:16,320
you're gonna

2340
01:34:16,320 --> 01:34:19,760
use your going delay to determine

2341
01:34:19,760 --> 01:34:21,840
what the congestion rate is i don't

2342
01:34:21,840 --> 01:34:23,440
think it actually works and nobody who's

2343
01:34:23,440 --> 01:34:25,600
using multicast seems to be doing it

2344
01:34:25,600 --> 01:34:29,679
so i think it might need an update

2345
01:34:29,679 --> 01:34:32,719
if it's to be a sort of fully

2346
01:34:32,719 --> 01:34:36,800
rfc compliant uh thing and the

2347
01:34:36,800 --> 01:34:39,120
and that is is in some sense important

2348
01:34:39,120 --> 01:34:41,199
because the raptor ipr

2349
01:34:41,199 --> 01:34:43,920
restrictions are tied to fully full rfc

2350
01:34:43,920 --> 01:34:45,840
compliance

2351
01:34:45,840 --> 01:34:49,040
so yeah i've been looking at that

2352
01:34:49,040 --> 01:34:54,080
a little bit second question was

2353
01:34:54,080 --> 01:34:55,840
are there any builds for browsers to

2354
01:34:55,840 --> 01:34:57,280
support this that can run

2355
01:34:57,280 --> 01:35:01,840
on like a big screen stick or a roku

2356
01:35:03,280 --> 01:35:06,560
uh i don't have one i just have the

2357
01:35:06,560 --> 01:35:07,440
chromium

2358
01:35:07,440 --> 01:35:11,679
uh i have the old chromium built for mac

2359
01:35:11,679 --> 01:35:13,520
i would like to do that working too and

2360
01:35:13,520 --> 01:35:15,440
the the dead

2361
01:35:15,440 --> 01:35:19,360
for ubuntu uh or the binaries for any

2362
01:35:19,360 --> 01:35:20,560
linux i think

2363
01:35:20,560 --> 01:35:23,679
um yeah if you if you want i'd be happy

2364
01:35:23,679 --> 01:35:24,880
to give you the source

2365
01:35:24,880 --> 01:35:27,360
it's uh it's right there i'd be happy to

2366
01:35:27,360 --> 01:35:28,800
help you get it running

2367
01:35:28,800 --> 01:35:30,560
uh all right if you have the target that

2368
01:35:30,560 --> 01:35:32,080
you're interested in sure

2369
01:35:32,080 --> 01:35:34,320
thanks

2370
01:35:37,280 --> 01:35:40,320
and thanks jake uh and um

2371
01:35:40,320 --> 01:35:42,159
in terms of your you know question about

2372
01:35:42,159 --> 01:35:43,760
uh and uh

2373
01:35:43,760 --> 01:35:45,600
you know other multicast enabled

2374
01:35:45,600 --> 01:35:47,679
networks i bet that tim

2375
01:35:47,679 --> 01:35:49,600
shown would probably be the expert in

2376
01:35:49,600 --> 01:35:50,960
this group on

2377
01:35:50,960 --> 01:35:54,080
um the rens and uh he could probably

2378
01:35:54,080 --> 01:35:55,040
direct you uh

2379
01:35:55,040 --> 01:35:57,440
i'll volunteer him as probably the one

2380
01:35:57,440 --> 01:35:58,960
who could give you the best guidance

2381
01:35:58,960 --> 01:36:01,119
as to who else is out there that is

2382
01:36:01,119 --> 01:36:02,960
multicast enabled

2383
01:36:02,960 --> 01:36:05,520
yeah i will pay you tim if you're if

2384
01:36:05,520 --> 01:36:06,400
you're willing to

2385
01:36:06,400 --> 01:36:11,839
all right what are you volunteering with

2386
01:36:13,760 --> 01:36:16,880
yeah and

2387
01:36:16,880 --> 01:36:18,639
and who are the the multicast enabled

2388
01:36:18,639 --> 01:36:20,880
networks out there specific you know

2389
01:36:20,880 --> 01:36:24,400
it's mostly the wrens and the enrons

2390
01:36:24,400 --> 01:36:25,760
and you probably know that better than

2391
01:36:25,760 --> 01:36:28,159
anybody yeah at least within the

2392
01:36:28,159 --> 01:36:29,470
european union

2393
01:36:29,470 --> 01:36:31,520
[Music]

2394
01:36:31,520 --> 01:36:33,040
also yeah we're looking to start sending

2395
01:36:33,040 --> 01:36:34,880
traffic to um

2396
01:36:34,880 --> 01:36:38,320
more public people and so we'd like to

2397
01:36:38,320 --> 01:36:40,000
we'd like to hook up with those who are

2398
01:36:40,000 --> 01:36:42,960
doing it and and start getting traffic

2399
01:36:42,960 --> 01:36:46,000
enabled in there um so i'll reach out to

2400
01:36:46,000 --> 01:36:48,639
you and and thanks for

2401
01:36:48,639 --> 01:36:50,239
yeah it's fantastic i mean the general

2402
01:36:50,239 --> 01:36:52,320
problem with multicast when we look

2403
01:36:52,320 --> 01:36:54,000
there is just no evidence of multicast

2404
01:36:54,000 --> 01:36:56,000
being run across our enabled backbone

2405
01:36:56,000 --> 01:36:56,960
it's

2406
01:36:56,960 --> 01:36:58,639
a lack of content is the main thing at

2407
01:36:58,639 --> 01:37:00,880
the moment that means people are

2408
01:37:00,880 --> 01:37:03,679
currently interested

2409
01:37:04,320 --> 01:37:07,920
yeah um we we are uh trying to

2410
01:37:07,920 --> 01:37:09,199
get to the point where we can spin up

2411
01:37:09,199 --> 01:37:13,119
some production traffic uh we're not

2412
01:37:13,119 --> 01:37:15,040
right now it's uh it's still a bit uh

2413
01:37:15,040 --> 01:37:16,159
sort of r d-ish

2414
01:37:16,159 --> 01:37:18,080
and we're not in a position to be doing

2415
01:37:18,080 --> 01:37:20,800
like slas so our customers are a little

2416
01:37:20,800 --> 01:37:22,960
um like they're not necessarily

2417
01:37:22,960 --> 01:37:24,000
unwilling

2418
01:37:24,000 --> 01:37:25,520
but they don't want to be relying on it

2419
01:37:25,520 --> 01:37:27,679
um this kind of thing

2420
01:37:27,679 --> 01:37:31,360
so uh but yeah we'd we'd love to get

2421
01:37:31,360 --> 01:37:33,440
some people using it especially i think

2422
01:37:33,440 --> 01:37:34,639
in the research community it would be a

2423
01:37:34,639 --> 01:37:35,679
really good fit

2424
01:37:35,679 --> 01:37:38,880
um and and so like traffic that they're

2425
01:37:38,880 --> 01:37:39,840
trying to get

2426
01:37:39,840 --> 01:37:42,000
uh and when they're connected on these

2427
01:37:42,000 --> 01:37:43,360
nrn networks

2428
01:37:43,360 --> 01:37:46,800
um if they if if it was easy for them

2429
01:37:46,800 --> 01:37:49,920
for example with an apt uh

2430
01:37:49,920 --> 01:37:53,119
update um and maybe if there was some uh

2431
01:37:53,119 --> 01:37:54,800
some content that was interesting for

2432
01:37:54,800 --> 01:37:57,440
them to to put into a browser readable

2433
01:37:57,440 --> 01:37:58,320
thing

2434
01:37:58,320 --> 01:38:00,719
uh it seems like that's a good place to

2435
01:38:00,719 --> 01:38:03,199
start to get some real traffic going

2436
01:38:03,199 --> 01:38:06,239
um but yeah we i think we're in the

2437
01:38:06,239 --> 01:38:07,199
place where like the

2438
01:38:07,199 --> 01:38:10,400
proof of concepts look pretty okay

2439
01:38:10,400 --> 01:38:12,159
and we'd like to start doing some sort

2440
01:38:12,159 --> 01:38:14,159
of low end production stuff

2441
01:38:14,159 --> 01:38:17,839
that nobody cares about too much

2442
01:38:19,600 --> 01:38:21,920
so we're gonna have to uh move cut off

2443
01:38:21,920 --> 01:38:23,199
but um

2444
01:38:23,199 --> 01:38:25,199
uh thanks jake and uh everybody please

2445
01:38:25,199 --> 01:38:27,440
do reach out to him and uh

2446
01:38:27,440 --> 01:38:29,280
review of the drafts would be most

2447
01:38:29,280 --> 01:38:31,119
helpful

2448
01:38:31,119 --> 01:38:33,760
so with that lorenzo you're up uh and

2449
01:38:33,760 --> 01:38:34,880
you can take us home

2450
01:38:34,880 --> 01:38:36,880
um you have until the rest of the end of

2451
01:38:36,880 --> 01:38:38,320
the meeting and

2452
01:38:38,320 --> 01:38:39,760
since you're kind of in charge of need

2453
01:38:39,760 --> 01:38:41,520
echo i'm sure you could

2454
01:38:41,520 --> 01:38:43,600
buy us even extra time so you have as

2455
01:38:43,600 --> 01:38:45,119
much time as you're willing to give us

2456
01:38:45,119 --> 01:38:46,800
i'll do my best don't worry uh by the

2457
01:38:46,800 --> 01:38:48,560
way is it okay if i share these lights

2458
01:38:48,560 --> 01:38:51,119
myself because i may have to

2459
01:38:51,119 --> 01:38:52,560
you're more than likely to be looking

2460
01:38:52,560 --> 01:38:59,840
for okay thanks yes

2461
01:39:00,000 --> 01:39:01,280
okay you should be able to see the

2462
01:39:01,280 --> 01:39:04,400
domain slider now right

2463
01:39:04,560 --> 01:39:07,920
yes i do okay so uh

2464
01:39:07,920 --> 01:39:09,119
first of all thanks for for the

2465
01:39:09,119 --> 01:39:10,960
opportunity it's a really it's a real

2466
01:39:10,960 --> 01:39:12,159
honor for me to

2467
01:39:12,159 --> 01:39:14,800
to be here especially to to speak to to

2468
01:39:14,800 --> 01:39:16,400
such skilled people in

2469
01:39:16,400 --> 01:39:18,880
in a technology that i'm admittedly less

2470
01:39:18,880 --> 01:39:20,239
knowledgeable about so

2471
01:39:20,239 --> 01:39:22,080
i'll try to explain a bit how we

2472
01:39:22,080 --> 01:39:25,040
actually use or try to use multicast

2473
01:39:25,040 --> 01:39:26,800
in our own deployments especially for

2474
01:39:26,800 --> 01:39:28,239
the purpose of scaling

2475
01:39:28,239 --> 01:39:30,480
webrtc deployments and as you'll see

2476
01:39:30,480 --> 01:39:32,320
during the presentation this will mostly

2477
01:39:32,320 --> 01:39:34,159
cover how we do this

2478
01:39:34,159 --> 01:39:36,960
uh basically in an intro domain so from

2479
01:39:36,960 --> 01:39:38,880
a server-side perspective on how to

2480
01:39:38,880 --> 01:39:40,560
scale things that we then use

2481
01:39:40,560 --> 01:39:43,520
unicast for and so it may be possibly a

2482
01:39:43,520 --> 01:39:45,280
bit boring for you but hopefully you'll

2483
01:39:45,280 --> 01:39:47,199
find some some interesting things

2484
01:39:47,199 --> 01:39:49,440
in there as well uh towards the end of

2485
01:39:49,440 --> 01:39:50,639
the presentation

2486
01:39:50,639 --> 01:39:53,040
and before i can actually explain how we

2487
01:39:53,040 --> 01:39:54,400
do that i

2488
01:39:54,400 --> 01:39:58,080
i first have to to introduce the um

2489
01:39:58,080 --> 01:40:00,239
the janus webrtc server but basically

2490
01:40:00,239 --> 01:40:01,199
janus is

2491
01:40:01,199 --> 01:40:03,199
a component that that i brought a few

2492
01:40:03,199 --> 01:40:05,360
years ago for for our own purposes and

2493
01:40:05,360 --> 01:40:07,679
is an open source webrtc server which we

2494
01:40:07,679 --> 01:40:08,800
conceived

2495
01:40:08,800 --> 01:40:11,679
as general purpose meaning that it can

2496
01:40:11,679 --> 01:40:13,360
be extended to do

2497
01:40:13,360 --> 01:40:15,119
several different things and i'll cover

2498
01:40:15,119 --> 01:40:17,119
some of these things later on in this

2499
01:40:17,119 --> 01:40:18,639
presentation as well

2500
01:40:18,639 --> 01:40:20,800
and basically this open source component

2501
01:40:20,800 --> 01:40:21,840
is what we build

2502
01:40:21,840 --> 01:40:23,760
everything upon so even this

2503
01:40:23,760 --> 01:40:25,199
conversation that we are having right

2504
01:40:25,199 --> 01:40:27,360
now is actually being powered by janus

2505
01:40:27,360 --> 01:40:29,280
right now so all of the audio video

2506
01:40:29,280 --> 01:40:30,960
slide stream that you are seeing are

2507
01:40:30,960 --> 01:40:32,800
coming and going through journals right

2508
01:40:32,800 --> 01:40:33,280
now

2509
01:40:33,280 --> 01:40:34,800
and these are a few links if you want to

2510
01:40:34,800 --> 01:40:36,880
experiment with it yourself a bit after

2511
01:40:36,880 --> 01:40:38,159
this presentation

2512
01:40:38,159 --> 01:40:40,159
and just to give you a bit uh the idea

2513
01:40:40,159 --> 01:40:42,480
of the different bricks that we use to

2514
01:40:42,480 --> 01:40:43,119
then

2515
01:40:43,119 --> 01:40:45,440
make all of this possible i mentioned

2516
01:40:45,440 --> 01:40:47,199
modularity and modularity means that we

2517
01:40:47,199 --> 01:40:48,880
have different plugins that can actually

2518
01:40:48,880 --> 01:40:50,560
do different things so for instance we

2519
01:40:50,560 --> 01:40:51,280
have

2520
01:40:51,280 --> 01:40:53,040
the audiobridge plugin that is basically

2521
01:40:53,040 --> 01:40:56,000
an audio mixer that allows us to receive

2522
01:40:56,000 --> 01:40:58,080
multiple audio contributions mix them

2523
01:40:58,080 --> 01:40:59,199
all together and then

2524
01:40:59,199 --> 01:41:01,280
send a mix back to each of the active

2525
01:41:01,280 --> 01:41:02,960
participants and so

2526
01:41:02,960 --> 01:41:05,119
basically your your traditional audio

2527
01:41:05,119 --> 01:41:07,440
conference but webrtc compliant if you

2528
01:41:07,440 --> 01:41:08,159
will

2529
01:41:08,159 --> 01:41:09,760
and we have a different approach for

2530
01:41:09,760 --> 01:41:11,600
video typically instead where you can

2531
01:41:11,600 --> 01:41:12,080
use

2532
01:41:12,080 --> 01:41:14,239
the video room plugin which is what is

2533
01:41:14,239 --> 01:41:16,400
typically called in the webrtc lingo and

2534
01:41:16,400 --> 01:41:18,800
sfus selective forwarding unit

2535
01:41:18,800 --> 01:41:21,040
and in this case video is not mixed each

2536
01:41:21,040 --> 01:41:23,199
video is separate from the other and so

2537
01:41:23,199 --> 01:41:24,960
in this case for instance you see

2538
01:41:24,960 --> 01:41:26,719
the video coming from my webcam and you

2539
01:41:26,719 --> 01:41:28,639
see these slides those are two different

2540
01:41:28,639 --> 01:41:32,239
streams that are being injected

2541
01:41:32,320 --> 01:41:34,320
and are then distributed as separate

2542
01:41:34,320 --> 01:41:36,320
broadcasts to the other participants and

2543
01:41:36,320 --> 01:41:36,719
that's

2544
01:41:36,719 --> 01:41:39,520
that's true as well uh anytime more

2545
01:41:39,520 --> 01:41:40,239
people

2546
01:41:40,239 --> 01:41:41,679
get the wrong video and start

2547
01:41:41,679 --> 01:41:43,440
interacting with each other and so on

2548
01:41:43,440 --> 01:41:44,960
and so forth

2549
01:41:44,960 --> 01:41:46,960
and then we have a third important

2550
01:41:46,960 --> 01:41:48,560
plugin possibly the most important

2551
01:41:48,560 --> 01:41:50,000
plugin for the purpose of this very

2552
01:41:50,000 --> 01:41:51,679
presentation which is

2553
01:41:51,679 --> 01:41:54,159
the streaming plugin which in a nutshell

2554
01:41:54,159 --> 01:41:56,199
acts as a very simple

2555
01:41:56,199 --> 01:41:59,119
rebroadcaster of plain rtp streams and

2556
01:41:59,119 --> 01:41:59,600
so

2557
01:41:59,600 --> 01:42:00,719
i don't know how many are you are

2558
01:42:00,719 --> 01:42:03,119
familiar with rtp uh in the first

2559
01:42:03,119 --> 01:42:05,119
in the first place so i of course i

2560
01:42:05,119 --> 01:42:06,639
won't delve too much into details of

2561
01:42:06,639 --> 01:42:08,400
this and you don't really need to be

2562
01:42:08,400 --> 01:42:10,400
that familiar with it but just to

2563
01:42:10,400 --> 01:42:12,880
to give you an idea rtp is the protocol

2564
01:42:12,880 --> 01:42:14,000
that is used to

2565
01:42:14,000 --> 01:42:16,159
transport in real time audio and video

2566
01:42:16,159 --> 01:42:18,400
frames over the internet and it's at the

2567
01:42:18,400 --> 01:42:20,159
very basis of webrtc

2568
01:42:20,159 --> 01:42:22,560
as a technology and so basically you can

2569
01:42:22,560 --> 01:42:23,600
see

2570
01:42:23,600 --> 01:42:26,320
a stream of rtp packets being a stream

2571
01:42:26,320 --> 01:42:26,800
of

2572
01:42:26,800 --> 01:42:28,960
packetized audio and video frames that

2573
01:42:28,960 --> 01:42:30,080
are then

2574
01:42:30,080 --> 01:42:31,840
distributed over the internet and in

2575
01:42:31,840 --> 01:42:33,679
this case the streaming plugin makes it

2576
01:42:33,679 --> 01:42:35,199
very easy to receive

2577
01:42:35,199 --> 01:42:37,840
a plain artist rtp stream and then turn

2578
01:42:37,840 --> 01:42:39,679
this into a broadcast that multiple

2579
01:42:39,679 --> 01:42:41,040
people can receive

2580
01:42:41,040 --> 01:42:42,800
and this is actually quite an

2581
01:42:42,800 --> 01:42:45,440
interesting functionality because

2582
01:42:45,440 --> 01:42:47,840
rtp is at the basis of webrtc but it's

2583
01:42:47,840 --> 01:42:48,960
also at the basis of

2584
01:42:48,960 --> 01:42:51,119
several other technologies as well and

2585
01:42:51,119 --> 01:42:53,199
there are many components that may not

2586
01:42:53,199 --> 01:42:53,600
know

2587
01:42:53,600 --> 01:42:55,440
much or may not be compliant at all with

2588
01:42:55,440 --> 01:42:57,679
webrtc like for instance ffmpeg or

2589
01:42:57,679 --> 01:42:58,400
partly g

2590
01:42:58,400 --> 01:43:00,960
streamer or vlc or whatever that can

2591
01:43:00,960 --> 01:43:02,159
actually generate

2592
01:43:02,159 --> 01:43:04,320
rtp streams that can be consumed in

2593
01:43:04,320 --> 01:43:05,520
different ways

2594
01:43:05,520 --> 01:43:07,360
which means that if we have ways to

2595
01:43:07,360 --> 01:43:08,560
generate a plain okay

2596
01:43:08,560 --> 01:43:10,400
stream and get it to janus then we can

2597
01:43:10,400 --> 01:43:13,040
make it available via webrtc to

2598
01:43:13,040 --> 01:43:15,440
two one or one hundred or one thousand

2599
01:43:15,440 --> 01:43:17,199
participants via webrtc

2600
01:43:17,199 --> 01:43:19,440
just by doing uh this this simple trick

2601
01:43:19,440 --> 01:43:21,040
so using the streaming plugin

2602
01:43:21,040 --> 01:43:23,119
and i'll exactly explain later this is

2603
01:43:23,119 --> 01:43:24,880
actually one of the key

2604
01:43:24,880 --> 01:43:26,320
blocks that actually makes it all

2605
01:43:26,320 --> 01:43:28,080
possible and one of the key components

2606
01:43:28,080 --> 01:43:30,159
that is also important for the

2607
01:43:30,159 --> 01:43:32,239
multicast aspect that i'll go in in the

2608
01:43:32,239 --> 01:43:33,520
minutes

2609
01:43:33,520 --> 01:43:35,040
before going there i just wanted to

2610
01:43:35,040 --> 01:43:36,880
spend a few words on how we did itf

2611
01:43:36,880 --> 01:43:39,600
meetings before the pandemic started so

2612
01:43:39,600 --> 01:43:42,480
as you may remember we whenever you went

2613
01:43:42,480 --> 01:43:42,800
uh

2614
01:43:42,800 --> 01:43:45,920
in a in a room uh wherever the itf venue

2615
01:43:45,920 --> 01:43:46,560
was you

2616
01:43:46,560 --> 01:43:48,639
you saw that we had a camera placed

2617
01:43:48,639 --> 01:43:51,199
somewhere that we were duplicating the

2618
01:43:51,199 --> 01:43:53,360
the beamer feed and so on and so forth

2619
01:43:53,360 --> 01:43:55,760
and we were doing this so that we had

2620
01:43:55,760 --> 01:43:58,320
uh basically a small raspberry pi in the

2621
01:43:58,320 --> 01:44:00,000
room that would capture both of these

2622
01:44:00,000 --> 01:44:02,080
sources the camera in the room focused

2623
01:44:02,080 --> 01:44:02,719
on the chair

2624
01:44:02,719 --> 01:44:05,440
on the speaker and the video being

2625
01:44:05,440 --> 01:44:06,000
duplicated

2626
01:44:06,000 --> 01:44:07,920
from the projector would capture these

2627
01:44:07,920 --> 01:44:10,320
and then we'll broadcast this via plain

2628
01:44:10,320 --> 01:44:12,480
rtp to a generous instance and

2629
01:44:12,480 --> 01:44:13,679
in this case you can see how the

2630
01:44:13,679 --> 01:44:15,760
streaming plugin becomes an important

2631
01:44:15,760 --> 01:44:18,080
component here because we are taking

2632
01:44:18,080 --> 01:44:19,840
basically something that knows nothing

2633
01:44:19,840 --> 01:44:21,440
about webrtc like this

2634
01:44:21,440 --> 01:44:24,320
uh static camera and this uh video and

2635
01:44:24,320 --> 01:44:24,719
this

2636
01:44:24,719 --> 01:44:26,719
projector splitter and then we are

2637
01:44:26,719 --> 01:44:27,760
sending this

2638
01:44:27,760 --> 01:44:30,560
video via rtp to janus and then we are

2639
01:44:30,560 --> 01:44:32,639
turning this into a webrtc broadcast

2640
01:44:32,639 --> 01:44:33,679
which means that

2641
01:44:33,679 --> 01:44:35,679
remote participants would then see the

2642
01:44:35,679 --> 01:44:37,119
chairs in the video would see these

2643
01:44:37,119 --> 01:44:38,639
slides and so on

2644
01:44:38,639 --> 01:44:40,880
pretty much transparently so they didn't

2645
01:44:40,880 --> 01:44:42,400
really need to know that the source of

2646
01:44:42,400 --> 01:44:44,400
those components were not rtc

2647
01:44:44,400 --> 01:44:47,280
uh rtp and we're actually using

2648
01:44:47,280 --> 01:44:48,400
multicast

2649
01:44:48,400 --> 01:44:50,639
a lot in this specific context because

2650
01:44:50,639 --> 01:44:51,600
in this case

2651
01:44:51,600 --> 01:44:53,199
and it's clear from this other picture

2652
01:44:53,199 --> 01:44:55,440
probably basically the

2653
01:44:55,440 --> 01:44:57,760
the rtp address that we were using to

2654
01:44:57,760 --> 01:44:59,679
broadcast these rtp streams too was

2655
01:44:59,679 --> 01:45:01,520
actually a multicast address so we're

2656
01:45:01,520 --> 01:45:02,159
not

2657
01:45:02,159 --> 01:45:04,239
sending a unicast stream to the janus

2658
01:45:04,239 --> 01:45:06,560
instances and we were using multicast

2659
01:45:06,560 --> 01:45:08,000
here for a few different reasons and

2660
01:45:08,000 --> 01:45:09,679
first of all we could because

2661
01:45:09,679 --> 01:45:11,760
in the itf venue we had our own

2662
01:45:11,760 --> 01:45:14,880
dedicated villain dedicated for

2663
01:45:14,880 --> 01:45:17,360
behind the curtains streaming and this

2664
01:45:17,360 --> 01:45:19,040
made it easier for us to basically

2665
01:45:19,040 --> 01:45:20,480
distribute the media to different

2666
01:45:20,480 --> 01:45:22,960
servers and this was not only important

2667
01:45:22,960 --> 01:45:24,400
to make it available to different

2668
01:45:24,400 --> 01:45:26,000
generous instances which

2669
01:45:26,000 --> 01:45:28,080
which i'll explain in a few slides but

2670
01:45:28,080 --> 01:45:29,920
also because it made it much easier to

2671
01:45:29,920 --> 01:45:32,080
also make the same stream available

2672
01:45:32,080 --> 01:45:34,400
to entirely different components and

2673
01:45:34,400 --> 01:45:36,159
this was important for instance when

2674
01:45:36,159 --> 01:45:38,159
at the moment we had to start supporting

2675
01:45:38,159 --> 01:45:39,840
youtube streaming as well so

2676
01:45:39,840 --> 01:45:42,400
just make a simple example for the

2677
01:45:42,400 --> 01:45:44,639
plenary we have we give the usual access

2678
01:45:44,639 --> 01:45:46,239
that you see right now as well but we

2679
01:45:46,239 --> 01:45:48,880
also allow people to watch the plenary

2680
01:45:48,880 --> 01:45:50,719
via youtube as well and in order to make

2681
01:45:50,719 --> 01:45:52,560
this possible we had of course to to

2682
01:45:52,560 --> 01:45:53,360
make

2683
01:45:53,360 --> 01:45:55,199
these streams available not only to

2684
01:45:55,199 --> 01:45:57,280
janus but also to another component that

2685
01:45:57,280 --> 01:45:58,080
could then

2686
01:45:58,080 --> 01:46:00,080
act as the video mixer that would then

2687
01:46:00,080 --> 01:46:02,080
broadcast the video to youtube

2688
01:46:02,080 --> 01:46:04,560
uh eventually and i'll spend a few words

2689
01:46:04,560 --> 01:46:05,520
on this as well

2690
01:46:05,520 --> 01:46:08,159
later but very very basically this would

2691
01:46:08,159 --> 01:46:10,000
allow us to only send

2692
01:46:10,000 --> 01:46:12,159
the stream once to a to a specific

2693
01:46:12,159 --> 01:46:13,679
multicast address group

2694
01:46:13,679 --> 01:46:15,840
and then different components interested

2695
01:46:15,840 --> 01:46:18,000
in the video feeds from those specific

2696
01:46:18,000 --> 01:46:19,360
cameras could then

2697
01:46:19,360 --> 01:46:21,199
basically just subscribe to the group

2698
01:46:21,199 --> 01:46:22,960
that they were interested in and so it

2699
01:46:22,960 --> 01:46:23,840
made

2700
01:46:23,840 --> 01:46:25,920
the whole process of orchestration and

2701
01:46:25,920 --> 01:46:27,600
management of the different resources

2702
01:46:27,600 --> 01:46:29,199
that we had much easier in

2703
01:46:29,199 --> 01:46:32,080
in this context and of course i mean

2704
01:46:32,080 --> 01:46:33,760
this worked and we were quite happy with

2705
01:46:33,760 --> 01:46:34,400
this but

2706
01:46:34,400 --> 01:46:36,480
then as you all know i mean pandemic

2707
01:46:36,480 --> 01:46:37,520
hits and then

2708
01:46:37,520 --> 01:46:39,440
we had to stop meeting in person which

2709
01:46:39,440 --> 01:46:41,600
meant that we had to find a way to

2710
01:46:41,600 --> 01:46:43,920
basically bring the the conversation

2711
01:46:43,920 --> 01:46:45,920
that we are having in a hybrid approach

2712
01:46:45,920 --> 01:46:47,920
completely virtual instead which was the

2713
01:46:47,920 --> 01:46:49,840
the main topic of a presentation that i

2714
01:46:49,840 --> 01:46:52,800
did in the most working group

2715
01:46:52,800 --> 01:46:54,800
at the last itf and here is the link to

2716
01:46:54,800 --> 01:46:56,400
the to the full video if you will if you

2717
01:46:56,400 --> 01:46:58,560
want to hear a bit more about it

2718
01:46:58,560 --> 01:47:00,400
i'll give a very quick recap of what was

2719
01:47:00,400 --> 01:47:01,679
there just to give you the

2720
01:47:01,679 --> 01:47:03,920
the important uh the important bits that

2721
01:47:03,920 --> 01:47:05,199
are

2722
01:47:05,199 --> 01:47:06,880
needed in order to figure out the way

2723
01:47:06,880 --> 01:47:09,360
that we use that we can use multicast in

2724
01:47:09,360 --> 01:47:11,199
this context

2725
01:47:11,199 --> 01:47:13,600
first of all uh i'm bringing the audio

2726
01:47:13,600 --> 01:47:15,119
bridge here again by

2727
01:47:15,119 --> 01:47:16,320
audio bridge if you remember from

2728
01:47:16,320 --> 01:47:18,159
episodes ago is the component that can

2729
01:47:18,159 --> 01:47:19,040
act as a

2730
01:47:19,040 --> 01:47:21,280
audio mixer for the different streams

2731
01:47:21,280 --> 01:47:22,159
and an interesting

2732
01:47:22,159 --> 01:47:24,480
uh feature that we added to this study

2733
01:47:24,480 --> 01:47:26,400
was the ability to basically

2734
01:47:26,400 --> 01:47:29,199
uh forward externally the current mix

2735
01:47:29,199 --> 01:47:31,360
that was being generated in a room

2736
01:47:31,360 --> 01:47:33,679
via plane rtp to a separate component

2737
01:47:33,679 --> 01:47:35,280
and we'll see in a minute why this is

2738
01:47:35,280 --> 01:47:36,159
important

2739
01:47:36,159 --> 01:47:38,159
and same thing for the video room so if

2740
01:47:38,159 --> 01:47:40,400
we have if i am sending my own video

2741
01:47:40,400 --> 01:47:42,239
stream to a janus instance so that other

2742
01:47:42,239 --> 01:47:44,080
participants for instance you

2743
01:47:44,080 --> 01:47:46,000
can receive it in a browser at the same

2744
01:47:46,000 --> 01:47:47,920
time i can also instruct the genes

2745
01:47:47,920 --> 01:47:49,679
instance to relay this

2746
01:47:49,679 --> 01:47:52,080
my video feed as a plain rtp stream to a

2747
01:47:52,080 --> 01:47:53,840
different address instead so that it can

2748
01:47:53,840 --> 01:47:54,400
be

2749
01:47:54,400 --> 01:47:57,520
used or consumed in different ways and

2750
01:47:57,520 --> 01:47:59,199
if you remember the streaming plugin

2751
01:47:59,199 --> 01:48:01,199
that i that i introduced before

2752
01:48:01,199 --> 01:48:03,840
these two different abilities to relay

2753
01:48:03,840 --> 01:48:04,880
rtp streams

2754
01:48:04,880 --> 01:48:06,639
actually provides all the bricks that

2755
01:48:06,639 --> 01:48:08,800
are needed to to implement some sort of

2756
01:48:08,800 --> 01:48:10,960
a webrtc cdn if you will

2757
01:48:10,960 --> 01:48:13,440
which was called soleil in in my phd

2758
01:48:13,440 --> 01:48:14,880
theses which because it was the main

2759
01:48:14,880 --> 01:48:16,719
topic of my phd at the time and you can

2760
01:48:16,719 --> 01:48:18,639
also find the link

2761
01:48:18,639 --> 01:48:20,960
here if you're interested in inhabiting

2762
01:48:20,960 --> 01:48:22,080
having a look at that

2763
01:48:22,080 --> 01:48:23,920
and more specifically this concept of

2764
01:48:23,920 --> 01:48:26,239
webrtc at the end that we had in mind

2765
01:48:26,239 --> 01:48:28,800
assumed that webrtc was actually needed

2766
01:48:28,800 --> 01:48:29,840
only at the edges

2767
01:48:29,840 --> 01:48:33,600
so you actually only need webrtc

2768
01:48:33,600 --> 01:48:35,280
to receive the video from the

2769
01:48:35,280 --> 01:48:37,040
participant in this case me from a

2770
01:48:37,040 --> 01:48:38,719
browser for instance but then how you

2771
01:48:38,719 --> 01:48:40,400
distribute this video

2772
01:48:40,400 --> 01:48:42,320
internally on your own network how you

2773
01:48:42,320 --> 01:48:44,719
found out is completely and entirely up

2774
01:48:44,719 --> 01:48:45,280
to you and

2775
01:48:45,280 --> 01:48:47,360
using features like the rtp forwarding

2776
01:48:47,360 --> 01:48:48,560
that i just described

2777
01:48:48,560 --> 01:48:50,800
makes it very easy to then use

2778
01:48:50,800 --> 01:48:51,920
components that are

2779
01:48:51,920 --> 01:48:54,480
completely webrtc unaware for the job or

2780
01:48:54,480 --> 01:48:56,560
even multicast networks as we'll see

2781
01:48:56,560 --> 01:48:59,199
in a second the only important aspect is

2782
01:48:59,199 --> 01:49:00,639
of course that if you still want to use

2783
01:49:00,639 --> 01:49:02,880
webrtc for the distribution part you

2784
01:49:02,880 --> 01:49:05,040
still need to have webrtc at the edge

2785
01:49:05,040 --> 01:49:06,080
node somewhere

2786
01:49:06,080 --> 01:49:08,159
so that this single stream that i'm

2787
01:49:08,159 --> 01:49:09,119
injecting

2788
01:49:09,119 --> 01:49:11,040
actually eventually reaches multiple

2789
01:49:11,040 --> 01:49:12,800
channels instances that are able to

2790
01:49:12,800 --> 01:49:14,719
serve much more users than

2791
01:49:14,719 --> 01:49:16,960
this single node would be able to and

2792
01:49:16,960 --> 01:49:18,800
then in this case they can all serve

2793
01:49:18,800 --> 01:49:20,960
their own independent users and

2794
01:49:20,960 --> 01:49:23,360
of course i'm i'm using different colors

2795
01:49:23,360 --> 01:49:25,119
here meaning that i could actually

2796
01:49:25,119 --> 01:49:25,760
inject

2797
01:49:25,760 --> 01:49:27,599
different streams rather than just one

2798
01:49:27,599 --> 01:49:29,119
using the same

2799
01:49:29,119 --> 01:49:31,040
distribution technology that i have at

2800
01:49:31,040 --> 01:49:32,960
my disposal

2801
01:49:32,960 --> 01:49:35,119
and so used within the context of the

2802
01:49:35,119 --> 01:49:36,239
itf for instance

2803
01:49:36,239 --> 01:49:38,639
how we are using it here it works pretty

2804
01:49:38,639 --> 01:49:40,080
much like this so

2805
01:49:40,080 --> 01:49:42,080
for the audio part as i was mentioning

2806
01:49:42,080 --> 01:49:44,000
all the audio streams are actually mixed

2807
01:49:44,000 --> 01:49:46,239
in these uh in this platform and so it

2808
01:49:46,239 --> 01:49:47,040
means that

2809
01:49:47,040 --> 01:49:48,880
the active participants are actually

2810
01:49:48,880 --> 01:49:50,800
contributing to the audio bridge plug-in

2811
01:49:50,800 --> 01:49:52,480
so they are being mixed

2812
01:49:52,480 --> 01:49:55,840
and then this mix is made available via

2813
01:49:55,840 --> 01:49:57,920
plain rtp stream to the streaming plugin

2814
01:49:57,920 --> 01:49:59,360
and this streaming plugin is then able

2815
01:49:59,360 --> 01:50:00,320
to broadcast

2816
01:50:00,320 --> 01:50:03,520
it to to many more users and if we

2817
01:50:03,520 --> 01:50:05,280
assume that we actually

2818
01:50:05,280 --> 01:50:08,639
can relay this mix to multiple streaming

2819
01:50:08,639 --> 01:50:10,960
instances at the same time via plain rtp

2820
01:50:10,960 --> 01:50:12,639
it means that we are basically

2821
01:50:12,639 --> 01:50:15,360
implementing a bare bone version of this

2822
01:50:15,360 --> 01:50:17,119
of that distribution tree that you that

2823
01:50:17,119 --> 01:50:19,599
we've seen in the previous slide

2824
01:50:19,599 --> 01:50:21,679
and we can make the same considerations

2825
01:50:21,679 --> 01:50:23,360
also for video with the difference of

2826
01:50:23,360 --> 01:50:25,360
course as i was anticipating that video

2827
01:50:25,360 --> 01:50:26,159
is not mixed

2828
01:50:26,159 --> 01:50:28,719
so you need to do the same approach for

2829
01:50:28,719 --> 01:50:30,400
each video that is injected in the

2830
01:50:30,400 --> 01:50:32,239
platform so basically treating each

2831
01:50:32,239 --> 01:50:34,639
video stream as a separate broadcast

2832
01:50:34,639 --> 01:50:36,639
which means that again we can just rtp

2833
01:50:36,639 --> 01:50:38,960
forward this stream two different uh

2834
01:50:38,960 --> 01:50:39,440
generous

2835
01:50:39,440 --> 01:50:41,360
instances and streaming instances to

2836
01:50:41,360 --> 01:50:42,719
basically fan out

2837
01:50:42,719 --> 01:50:45,040
and serve more users that we could with

2838
01:50:45,040 --> 01:50:45,920
with a single

2839
01:50:45,920 --> 01:50:48,400
instance and of course these these

2840
01:50:48,400 --> 01:50:50,080
slides basically summarizes how you can

2841
01:50:50,080 --> 01:50:50,880
do this

2842
01:50:50,880 --> 01:50:53,520
with two different videos being injected

2843
01:50:53,520 --> 01:50:55,840
at the same time which may be

2844
01:50:55,840 --> 01:50:58,239
using different ingestion points so

2845
01:50:58,239 --> 01:51:00,320
different video room instances for

2846
01:51:00,320 --> 01:51:02,080
for actually receiving the media but

2847
01:51:02,080 --> 01:51:04,320
then eventually they both feed

2848
01:51:04,320 --> 01:51:05,760
all the streaming instances that you

2849
01:51:05,760 --> 01:51:07,360
have available so that your whole

2850
01:51:07,360 --> 01:51:09,360
audience is able to receive

2851
01:51:09,360 --> 01:51:11,280
both of those video streams no matter

2852
01:51:11,280 --> 01:51:13,040
where they are connected to this is

2853
01:51:13,040 --> 01:51:15,520
this is at the very basis of this webrtc

2854
01:51:15,520 --> 01:51:17,360
ccdn kind of approach

2855
01:51:17,360 --> 01:51:19,599
which means that putting it together for

2856
01:51:19,599 --> 01:51:21,520
the virtual events this is how it works

2857
01:51:21,520 --> 01:51:22,800
in a nutshell for the

2858
01:51:22,800 --> 01:51:25,440
for itf meetings in this case we have a

2859
01:51:25,440 --> 01:51:26,000
single

2860
01:51:26,000 --> 01:51:28,159
mixer audio mixer that is a reference

2861
01:51:28,159 --> 01:51:30,000
point for each of the rooms that we are

2862
01:51:30,000 --> 01:51:31,840
that we are having here for instance in

2863
01:51:31,840 --> 01:51:34,000
this unbone session we have a dedicated

2864
01:51:34,000 --> 01:51:36,639
with a mixer for that and then the video

2865
01:51:36,639 --> 01:51:38,639
streams are injected via one or more

2866
01:51:38,639 --> 01:51:40,320
video room instances instead so that

2867
01:51:40,320 --> 01:51:42,000
they are then made available via

2868
01:51:42,000 --> 01:51:44,159
streaming plugin to everybody so

2869
01:51:44,159 --> 01:51:45,760
all of you right now are passive

2870
01:51:45,760 --> 01:51:47,280
attendees which means that you are all

2871
01:51:47,280 --> 01:51:48,960
receiving the video streams that i'm

2872
01:51:48,960 --> 01:51:50,880
ingesting via a streaming plugin

2873
01:51:50,880 --> 01:51:51,840
actually

2874
01:51:51,840 --> 01:51:53,760
and this is how it currently works for

2875
01:51:53,760 --> 01:51:55,520
all itf meetings and

2876
01:51:55,520 --> 01:51:57,679
one of the things that could actually be

2877
01:51:57,679 --> 01:51:58,560
done and

2878
01:51:58,560 --> 01:52:00,159
and i was incorrect in saying that we

2879
01:52:00,159 --> 01:52:02,080
were doing it already in mops

2880
01:52:02,080 --> 01:52:04,000
i was already chastised by my colleagues

2881
01:52:04,000 --> 01:52:05,360
for for that error

2882
01:52:05,360 --> 01:52:08,320
is something like this which means that

2883
01:52:08,320 --> 01:52:09,920
this is something that we can do

2884
01:52:09,920 --> 01:52:12,320
meaning that since the main purpose is

2885
01:52:12,320 --> 01:52:13,679
being able to fund out

2886
01:52:13,679 --> 01:52:16,000
the the media that an audio bridge and

2887
01:52:16,000 --> 01:52:18,400
video room plugin are handling to

2888
01:52:18,400 --> 01:52:20,880
multiple streaming instances we can do

2889
01:52:20,880 --> 01:52:21,520
this via

2890
01:52:21,520 --> 01:52:23,360
unicast as i've showed in the in the

2891
01:52:23,360 --> 01:52:24,880
previous slide but we could actually

2892
01:52:24,880 --> 01:52:26,480
take advantage of multicast for the

2893
01:52:26,480 --> 01:52:28,239
purpose instead which means that

2894
01:52:28,239 --> 01:52:29,840
both the audio bridge and the video room

2895
01:52:29,840 --> 01:52:32,000
could send to a dedicated multicast

2896
01:52:32,000 --> 01:52:32,880
address to

2897
01:52:32,880 --> 01:52:34,880
that that is basically associated to a

2898
01:52:34,880 --> 01:52:36,239
specific resource

2899
01:52:36,239 --> 01:52:37,920
and then each streaming plugin instance

2900
01:52:37,920 --> 01:52:39,840
can just consume the resource they are

2901
01:52:39,840 --> 01:52:41,040
interested into

2902
01:52:41,040 --> 01:52:42,320
which means that even from an

2903
01:52:42,320 --> 01:52:44,159
orchestration perspective not just

2904
01:52:44,159 --> 01:52:46,159
in terms of network usages this would be

2905
01:52:46,159 --> 01:52:47,760
a great advantage in terms of

2906
01:52:47,760 --> 01:52:49,520
of costs and resources because it means

2907
01:52:49,520 --> 01:52:52,159
that if i need a new streaming plug-in

2908
01:52:52,159 --> 01:52:53,679
instance because i'm

2909
01:52:53,679 --> 01:52:56,400
i need more more distribution points to

2910
01:52:56,400 --> 01:52:57,679
serve more users

2911
01:52:57,679 --> 01:52:59,679
i can just phone a new instance and have

2912
01:52:59,679 --> 01:53:01,599
them point to the existing multicast

2913
01:53:01,599 --> 01:53:02,639
resources and

2914
01:53:02,639 --> 01:53:04,000
they will pull the resources

2915
01:53:04,000 --> 01:53:05,760
automatically without me

2916
01:53:05,760 --> 01:53:07,440
needing to make the audio bridge and

2917
01:53:07,440 --> 01:53:09,440
video room plugins

2918
01:53:09,440 --> 01:53:11,760
aware of the fact that i need to unicast

2919
01:53:11,760 --> 01:53:14,000
this stream to a new component

2920
01:53:14,000 --> 01:53:15,440
and this is something that we can

2921
01:53:15,440 --> 01:53:18,000
actually do and we have done in

2922
01:53:18,000 --> 01:53:20,000
in our lab for a few times but we cannot

2923
01:53:20,000 --> 01:53:21,760
do right now

2924
01:53:21,760 --> 01:53:24,320
due to uh to the cloud infrastructures

2925
01:53:24,320 --> 01:53:25,760
that we have available so for instance

2926
01:53:25,760 --> 01:53:27,599
last time we used azure right now we are

2927
01:53:27,599 --> 01:53:28,080
using

2928
01:53:28,080 --> 01:53:30,719
google cloud engine but even if we use

2929
01:53:30,719 --> 01:53:31,679
aws

2930
01:53:31,679 --> 01:53:34,000
none of them have a native multicast

2931
01:53:34,000 --> 01:53:34,880
support so

2932
01:53:34,880 --> 01:53:36,560
there are some of our customers that are

2933
01:53:36,560 --> 01:53:38,159
able to do something like this using

2934
01:53:38,159 --> 01:53:40,080
components like weave and kubernetes

2935
01:53:40,080 --> 01:53:42,639
and something like this but uh since we

2936
01:53:42,639 --> 01:53:44,159
use docker a lot

2937
01:53:44,159 --> 01:53:46,719
in using our own technology we haven't

2938
01:53:46,719 --> 01:53:48,080
investigated that

2939
01:53:48,080 --> 01:53:50,159
that part yet but it's definitely

2940
01:53:50,159 --> 01:53:51,599
something that we want to

2941
01:53:51,599 --> 01:53:53,119
investigate more in the future because

2942
01:53:53,119 --> 01:53:55,199
we want to take advantage of that

2943
01:53:55,199 --> 01:53:57,199
and something that i should point out

2944
01:53:57,199 --> 01:53:58,639
though is that if you have

2945
01:53:58,639 --> 01:54:01,599
uh um if your own data center or data

2946
01:54:01,599 --> 01:54:03,760
distribution network is multicast aware

2947
01:54:03,760 --> 01:54:05,199
this is something that you can

2948
01:54:05,199 --> 01:54:06,880
indeed do and in fact we do have

2949
01:54:06,880 --> 01:54:08,480
customers that are

2950
01:54:08,480 --> 01:54:11,679
involved in the webrtc broadcasting

2951
01:54:11,679 --> 01:54:13,840
uh services that are actually using

2952
01:54:13,840 --> 01:54:15,199
something like this and are actually

2953
01:54:15,199 --> 01:54:16,960
pushing it even further so rather than

2954
01:54:16,960 --> 01:54:18,000
doing just

2955
01:54:18,000 --> 01:54:19,760
something like this where they have

2956
01:54:19,760 --> 01:54:21,520
ingestion point using multicast to

2957
01:54:21,520 --> 01:54:22,080
distribute

2958
01:54:22,080 --> 01:54:23,679
multiple streaming instances they are

2959
01:54:23,679 --> 01:54:25,760
also doing the same

2960
01:54:25,760 --> 01:54:27,920
with multiple data centers involved so

2961
01:54:27,920 --> 01:54:30,320
let's say that you have

2962
01:54:30,320 --> 01:54:32,239
this kind of setup that we've just seen

2963
01:54:32,239 --> 01:54:34,159
on one of your data centers if you want

2964
01:54:34,159 --> 01:54:36,159
to take advantage of another data center

2965
01:54:36,159 --> 01:54:37,679
that you have to also

2966
01:54:37,679 --> 01:54:39,760
increase the amount of audience that you

2967
01:54:39,760 --> 01:54:41,360
can support you can do something like

2968
01:54:41,360 --> 01:54:43,040
this where you basically have

2969
01:54:43,040 --> 01:54:45,280
possibly the two data centers that are

2970
01:54:45,280 --> 01:54:47,199
not connected via multicast

2971
01:54:47,199 --> 01:54:49,199
network but are only available to a

2972
01:54:49,199 --> 01:54:50,639
unicast network instead you

2973
01:54:50,639 --> 01:54:52,800
have them you have some sort of a bridge

2974
01:54:52,800 --> 01:54:54,080
in the middle so

2975
01:54:54,080 --> 01:54:56,159
in this specific context these customers

2976
01:54:56,159 --> 01:54:57,520
that that we know are of

2977
01:54:57,520 --> 01:55:00,480
are not using amt as of yet even though

2978
01:55:00,480 --> 01:55:02,480
i think that amt may actually be a

2979
01:55:02,480 --> 01:55:03,199
perfect

2980
01:55:03,199 --> 01:55:05,440
use case for these for these in this

2981
01:55:05,440 --> 01:55:06,719
context because the main

2982
01:55:06,719 --> 01:55:09,119
purpose here is to make sure that a

2983
01:55:09,119 --> 01:55:10,960
multicast resource is available on one

2984
01:55:10,960 --> 01:55:12,719
data center is made available on a

2985
01:55:12,719 --> 01:55:14,639
multicast network on another data center

2986
01:55:14,639 --> 01:55:16,480
so that it can be distributed to even

2987
01:55:16,480 --> 01:55:17,360
more

2988
01:55:17,360 --> 01:55:19,520
streaming instances so this is something

2989
01:55:19,520 --> 01:55:20,800
that is actually done

2990
01:55:20,800 --> 01:55:22,960
in production right now by a few by a

2991
01:55:22,960 --> 01:55:24,000
few companies

2992
01:55:24,000 --> 01:55:26,400
assuming of course that again your data

2993
01:55:26,400 --> 01:55:27,040
centers

2994
01:55:27,040 --> 01:55:29,520
have support for these multicast

2995
01:55:29,520 --> 01:55:31,360
functionality

2996
01:55:31,360 --> 01:55:32,639
and one question that you may ask

2997
01:55:32,639 --> 01:55:34,960
yourself is why are we not using

2998
01:55:34,960 --> 01:55:36,400
multicast everywhere especially

2999
01:55:36,400 --> 01:55:38,480
considering that i mentioned

3000
01:55:38,480 --> 01:55:40,320
broadcast a lot in this presentation so

3001
01:55:40,320 --> 01:55:41,760
for instance i i

3002
01:55:41,760 --> 01:55:43,520
explain how the video streams are

3003
01:55:43,520 --> 01:55:45,920
basically can be treated as individual

3004
01:55:45,920 --> 01:55:47,840
broadcasts that are then

3005
01:55:47,840 --> 01:55:50,480
tied together as a conversation at an

3006
01:55:50,480 --> 01:55:51,840
application layer

3007
01:55:51,840 --> 01:55:54,000
and the main reason is that we basically

3008
01:55:54,000 --> 01:55:55,679
went for webrtc from the

3009
01:55:55,679 --> 01:55:57,360
from the very start which was of course

3010
01:55:57,360 --> 01:55:58,880
the obvious choice to make an

3011
01:55:58,880 --> 01:56:01,280
interactive platform for communication

3012
01:56:01,280 --> 01:56:02,000
it's what

3013
01:56:02,000 --> 01:56:04,639
everybody uses today it's very simple to

3014
01:56:04,639 --> 01:56:06,239
use and is available in all browsers

3015
01:56:06,239 --> 01:56:07,840
which means that everybody can just open

3016
01:56:07,840 --> 01:56:09,760
their browser and participate it means a

3017
01:56:09,760 --> 01:56:11,679
very low barrier to entry no need to

3018
01:56:11,679 --> 01:56:12,719
install

3019
01:56:12,719 --> 01:56:14,400
custom applications or anything like

3020
01:56:14,400 --> 01:56:16,000
this for instance and and of course

3021
01:56:16,000 --> 01:56:17,760
unfortunately multicast is not

3022
01:56:17,760 --> 01:56:19,599
currently available to to all

3023
01:56:19,599 --> 01:56:21,760
participants which would be

3024
01:56:21,760 --> 01:56:24,159
an additional impediment in this case

3025
01:56:24,159 --> 01:56:26,480
and webrtc itself as a technology

3026
01:56:26,480 --> 01:56:28,639
doesn't support multicast itself mostly

3027
01:56:28,639 --> 01:56:29,520
because it was

3028
01:56:29,520 --> 01:56:31,360
natively conceived as a peer-to-peer

3029
01:56:31,360 --> 01:56:32,880
technology and

3030
01:56:32,880 --> 01:56:35,199
one of the major impediments is the fact

3031
01:56:35,199 --> 01:56:36,639
that as part of this peer-to-peer

3032
01:56:36,639 --> 01:56:39,040
communication there is also a dedicated

3033
01:56:39,040 --> 01:56:39,840
peer-to-peer

3034
01:56:39,840 --> 01:56:42,080
uh secure connection establishment via

3035
01:56:42,080 --> 01:56:43,920
dtls which means that

3036
01:56:43,920 --> 01:56:45,599
each peer connection each connection

3037
01:56:45,599 --> 01:56:47,840
that you have established with the peer

3038
01:56:47,840 --> 01:56:50,320
be it another user or a server

3039
01:56:50,320 --> 01:56:51,920
you're actually creating an ad doc

3040
01:56:51,920 --> 01:56:54,000
cryptographic context which can

3041
01:56:54,000 --> 01:56:56,000
not be shared among multiple recipients

3042
01:56:56,000 --> 01:56:57,280
in this case so

3043
01:56:57,280 --> 01:56:59,679
as a technology itself webrtc is

3044
01:56:59,679 --> 01:57:02,960
currently not suited for multicast usage

3045
01:57:02,960 --> 01:57:05,760
even though uh webrtc among the

3046
01:57:05,760 --> 01:57:07,760
technologies that webrtc makes use of

3047
01:57:07,760 --> 01:57:11,199
there is also a bit of multicast because

3048
01:57:11,199 --> 01:57:14,000
due to a few privacy considerations

3049
01:57:14,000 --> 01:57:14,880
issues

3050
01:57:14,880 --> 01:57:16,800
there is actually the usage of multicast

3051
01:57:16,800 --> 01:57:19,040
dns to advertise

3052
01:57:19,040 --> 01:57:21,199
candidates in the sdp that are being

3053
01:57:21,199 --> 01:57:22,719
exchanged so

3054
01:57:22,719 --> 01:57:24,480
there is a bit of multicast in there but

3055
01:57:24,480 --> 01:57:25,520
this is just for connection

3056
01:57:25,520 --> 01:57:27,520
establishment not for actual multimedia

3057
01:57:27,520 --> 01:57:28,639
delivery

3058
01:57:28,639 --> 01:57:31,199
even though i guess that some multicast

3059
01:57:31,199 --> 01:57:33,280
would actually be leveraged more from

3060
01:57:33,280 --> 01:57:35,360
a broadcasting perspective and

3061
01:57:35,360 --> 01:57:37,199
especially with possibly with the usage

3062
01:57:37,199 --> 01:57:39,360
of amt as i was saying before

3063
01:57:39,360 --> 01:57:42,000
and the basic example here would be uh

3064
01:57:42,000 --> 01:57:43,040
broadcasting

3065
01:57:43,040 --> 01:57:45,840
as we intended in a more broad sense so

3066
01:57:45,840 --> 01:57:47,360
i was mentioning before how you can

3067
01:57:47,360 --> 01:57:48,320
actually make some

3068
01:57:48,320 --> 01:57:51,040
working groups available via youtube as

3069
01:57:51,040 --> 01:57:51,520
well

3070
01:57:51,520 --> 01:57:52,880
and i was making the example of the

3071
01:57:52,880 --> 01:57:54,639
plenary for instance and

3072
01:57:54,639 --> 01:57:56,400
it works pretty much this way so you

3073
01:57:56,400 --> 01:57:58,159
have multiple participants interacting

3074
01:57:58,159 --> 01:57:59,520
with each other that if you are

3075
01:57:59,520 --> 01:58:01,440
connected to the meteco interface you

3076
01:58:01,440 --> 01:58:02,320
see

3077
01:58:02,320 --> 01:58:04,239
as as you are supposed to see so with

3078
01:58:04,239 --> 01:58:05,520
the different streams appearing and

3079
01:58:05,520 --> 01:58:07,599
disappearing as different streams

3080
01:58:07,599 --> 01:58:10,159
but we also have a separate component a

3081
01:58:10,159 --> 01:58:12,159
mixer slash broadcaster that is

3082
01:58:12,159 --> 01:58:14,080
receiving in real time all of the feeds

3083
01:58:14,080 --> 01:58:14,639
that are

3084
01:58:14,639 --> 01:58:16,719
being contributed to the room is

3085
01:58:16,719 --> 01:58:19,040
composing them into a single audio video

3086
01:58:19,040 --> 01:58:20,000
feed and is then

3087
01:58:20,000 --> 01:58:23,119
publishing it via typically rtmp

3088
01:58:23,119 --> 01:58:25,599
to a cdn so that it can be broadcasted

3089
01:58:25,599 --> 01:58:27,360
some somehow and in this case for

3090
01:58:27,360 --> 01:58:29,440
instance so that it can be visible via

3091
01:58:29,440 --> 01:58:32,320
youtube which means that one possible

3092
01:58:32,320 --> 01:58:34,000
evolution here might be to

3093
01:58:34,000 --> 01:58:36,560
to actually take advantage of amt for

3094
01:58:36,560 --> 01:58:38,159
the purpose here so the moment that we

3095
01:58:38,159 --> 01:58:40,239
have a stream that we can broadcast and

3096
01:58:40,239 --> 01:58:41,119
distribute in

3097
01:58:41,119 --> 01:58:43,520
uh in real time even even though there

3098
01:58:43,520 --> 01:58:45,599
may be a bit of latency involved

3099
01:58:45,599 --> 01:58:47,840
these broadcasts may be available may be

3100
01:58:47,840 --> 01:58:49,679
made available to an amt relay for

3101
01:58:49,679 --> 01:58:51,440
instance so that it can be consumed by

3102
01:58:51,440 --> 01:58:52,000
multiple

3103
01:58:52,000 --> 01:58:54,719
multicast recipients somehow and right

3104
01:58:54,719 --> 01:58:55,920
now this is mostly

3105
01:58:55,920 --> 01:58:58,480
let's say thinking out loud kind of

3106
01:58:58,480 --> 01:59:00,800
slides we don't really have anything

3107
01:59:00,800 --> 01:59:02,560
done in this context but it's something

3108
01:59:02,560 --> 01:59:04,080
that we are thinking about doing in the

3109
01:59:04,080 --> 01:59:04,560
future

3110
01:59:04,560 --> 01:59:07,360
sooner or later and just one uh one last

3111
01:59:07,360 --> 01:59:08,719
slide just to

3112
01:59:08,719 --> 01:59:11,520
to to tie into the presentation that

3113
01:59:11,520 --> 01:59:12,480
that oriole was

3114
01:59:12,480 --> 01:59:14,639
making before there is actually some

3115
01:59:14,639 --> 01:59:16,320
interesting efforts being done within

3116
01:59:16,320 --> 01:59:18,320
the university of naples so

3117
01:59:18,320 --> 01:59:20,000
you may not know that mitech was a

3118
01:59:20,000 --> 01:59:21,760
company was actually born as a

3119
01:59:21,760 --> 01:59:23,440
academic spin-off for the university of

3120
01:59:23,440 --> 01:59:25,360
naples we all got our

3121
01:59:25,360 --> 01:59:27,520
master thesis and phd there and we still

3122
01:59:27,520 --> 01:59:29,280
have some connections with university

3123
01:59:29,280 --> 01:59:31,520
and for instance simon romano who is

3124
01:59:31,520 --> 01:59:33,440
part of meteco but is also a professor

3125
01:59:33,440 --> 01:59:35,280
at university university of naples

3126
01:59:35,280 --> 01:59:37,360
is acts as a tie-in for these kind of

3127
01:59:37,360 --> 01:59:39,040
activities and one of the activities

3128
01:59:39,040 --> 01:59:41,040
that we've done there is actually

3129
01:59:41,040 --> 01:59:43,440
a project called shine so we contributed

3130
01:59:43,440 --> 01:59:45,280
a bit to this aspect as well mostly

3131
01:59:45,280 --> 01:59:47,280
because shine allowed you to do

3132
01:59:47,280 --> 01:59:49,280
pretty much something like i described

3133
01:59:49,280 --> 01:59:50,880
so far in terms of

3134
01:59:50,880 --> 01:59:54,080
the uh the fan out distribution using an

3135
01:59:54,080 --> 01:59:55,040
architecture as

3136
01:59:55,040 --> 01:59:57,679
ssla basically a tree-based distribution

3137
01:59:57,679 --> 01:59:59,040
but then using

3138
01:59:59,040 --> 02:00:01,280
satellites for and multicast networks in

3139
02:00:01,280 --> 02:00:03,360
order to to expand the distribution even

3140
02:00:03,360 --> 02:00:04,080
further

3141
02:00:04,080 --> 02:00:05,599
and i mean if you have any question on

3142
02:00:05,599 --> 02:00:08,320
this specifically simon can probably be

3143
02:00:08,320 --> 02:00:10,000
much more responsive than me on this

3144
02:00:10,000 --> 02:00:11,760
context but i just thought i'd i'd

3145
02:00:11,760 --> 02:00:14,000
contribute some uh information on this

3146
02:00:14,000 --> 02:00:15,920
as well especially in case it may be of

3147
02:00:15,920 --> 02:00:16,400
interest

3148
02:00:16,400 --> 02:00:19,679
to to you all and i hope i i made it in

3149
02:00:19,679 --> 02:00:20,880
time so

3150
02:00:20,880 --> 02:00:22,800
i hope there will be some some time for

3151
02:00:22,800 --> 02:00:25,199
questions so if you have any

3152
02:00:25,199 --> 02:00:27,040
i hope i didn't speak too fast as i

3153
02:00:27,040 --> 02:00:28,239
usually do and

3154
02:00:28,239 --> 02:00:29,440
i hope that you'll learn some

3155
02:00:29,440 --> 02:00:32,960
interesting questions from me thanks

3156
02:00:33,599 --> 02:00:36,400
sure jake you're up

3157
02:00:37,199 --> 02:00:39,679
uh yeah hi thanks lauren so that was uh

3158
02:00:39,679 --> 02:00:40,400
that was great

3159
02:00:40,400 --> 02:00:43,520
um would you be interested in

3160
02:00:43,520 --> 02:00:46,960
uh like what do you think of porting the

3161
02:00:46,960 --> 02:00:49,360
uh i forget which which piece it was

3162
02:00:49,360 --> 02:00:50,400
called but um

3163
02:00:50,400 --> 02:00:54,480
there's uh so instead of using webrtc

3164
02:00:54,480 --> 02:00:57,520
trying uh trying the

3165
02:00:57,520 --> 02:01:01,280
uh browser api to receive multicast

3166
02:01:01,280 --> 02:01:04,480
uh and then feeding the the rtp into

3167
02:01:04,480 --> 02:01:07,599
i think you can do it in the uh um what

3168
02:01:07,599 --> 02:01:08,960
do we call it the s

3169
02:01:08,960 --> 02:01:12,639
s sre the um

3170
02:01:12,639 --> 02:01:15,840
the media no uh there's like browser

3171
02:01:15,840 --> 02:01:16,960
apis to

3172
02:01:16,960 --> 02:01:19,199
to actually display the media right are

3173
02:01:19,199 --> 02:01:21,280
you you're familiar with these like

3174
02:01:21,280 --> 02:01:24,639
uh have you looked into uh according to

3175
02:01:24,639 --> 02:01:29,840
uh webassembly

3176
02:01:29,840 --> 02:01:32,000
yeah this is something that we we are

3177
02:01:32,000 --> 02:01:34,080
starting to think of also because it's

3178
02:01:34,080 --> 02:01:37,119
uh it's probably going to be uh what was

3179
02:01:37,119 --> 02:01:39,199
what some time ago was called the webrtc

3180
02:01:39,199 --> 02:01:41,360
nv so the new version of webrtc where

3181
02:01:41,360 --> 02:01:42,080
they

3182
02:01:42,080 --> 02:01:44,639
uh they are trying to learn learn about

3183
02:01:44,639 --> 02:01:46,320
the mistakes that about

3184
02:01:46,320 --> 02:01:48,560
uh from webrtc first version and try to

3185
02:01:48,560 --> 02:01:50,080
improve in the next one and so

3186
02:01:50,080 --> 02:01:52,800
one of the ideas uh was basically to try

3187
02:01:52,800 --> 02:01:54,639
and possibly use quick for instance

3188
02:01:54,639 --> 02:01:56,400
rather than use rtp and anything like

3189
02:01:56,400 --> 02:01:58,400
this to then transport

3190
02:01:58,400 --> 02:02:00,400
media in different ways over quick and

3191
02:02:00,400 --> 02:02:01,840
then as you said

3192
02:02:01,840 --> 02:02:04,080
use webassembly to both encode streams

3193
02:02:04,080 --> 02:02:05,280
and decode streams on

3194
02:02:05,280 --> 02:02:08,400
on the way back and forth uh we haven't

3195
02:02:08,400 --> 02:02:10,719
done this yet even though there are some

3196
02:02:10,719 --> 02:02:12,080
some people already working in this

3197
02:02:12,080 --> 02:02:13,679
direction so for instance if you take

3198
02:02:13,679 --> 02:02:14,080
the

3199
02:02:14,080 --> 02:02:16,239
zoom web client for instance it's it's

3200
02:02:16,239 --> 02:02:18,960
webrtc only in uh

3201
02:02:18,960 --> 02:02:21,360
in in in quotes because they actually

3202
02:02:21,360 --> 02:02:23,280
don't use webrtc much

3203
02:02:23,280 --> 02:02:25,360
at all so they actually only use the

3204
02:02:25,360 --> 02:02:27,520
apis to capture media and then encode

3205
02:02:27,520 --> 02:02:29,119
stuff themselves in the browser using

3206
02:02:29,119 --> 02:02:31,119
webassembly and exchange stuff on their

3207
02:02:31,119 --> 02:02:31,520
own

3208
02:02:31,520 --> 02:02:34,239
rather than doing webrtc in this case

3209
02:02:34,239 --> 02:02:35,920
for us it would be a bit more complex

3210
02:02:35,920 --> 02:02:36,800
than that because

3211
02:02:36,800 --> 02:02:39,440
uh it's not just a matter of packetizing

3212
02:02:39,440 --> 02:02:40,560
and so on but

3213
02:02:40,560 --> 02:02:42,639
we would lose a lot that the browser

3214
02:02:42,639 --> 02:02:44,480
gives us natively for the moment so

3215
02:02:44,480 --> 02:02:45,440
right now

3216
02:02:45,440 --> 02:02:47,360
all we need to ask the browser to do is

3217
02:02:47,360 --> 02:02:49,599
basically ask you for permission to

3218
02:02:49,599 --> 02:02:50,159
access

3219
02:02:50,159 --> 02:02:52,400
your your microphone and webcam and then

3220
02:02:52,400 --> 02:02:53,599
once you do that

3221
02:02:53,599 --> 02:02:55,360
it's the browser itself that actually

3222
02:02:55,360 --> 02:02:57,119
does captures the component

3223
02:02:57,119 --> 02:03:00,000
does the encoding in at a much much

3224
02:03:00,000 --> 02:03:01,760
lower level it is not accessible to

3225
02:03:01,760 --> 02:03:02,880
javascript and

3226
02:03:02,880 --> 02:03:04,800
takes care of distributing the streams

3227
02:03:04,800 --> 02:03:06,560
back and forth and takes care also

3228
02:03:06,560 --> 02:03:08,880
the feedback mechanisms involved in

3229
02:03:08,880 --> 02:03:10,719
terms of bandwidth estimation

3230
02:03:10,719 --> 02:03:12,239
negative acknowledgements and all of

3231
02:03:12,239 --> 02:03:13,760
these kind of things and this is

3232
02:03:13,760 --> 02:03:15,440
something that is very powerful and is

3233
02:03:15,440 --> 02:03:16,719
done

3234
02:03:16,719 --> 02:03:18,880
not at the javascript level for sure so

3235
02:03:18,880 --> 02:03:20,000
it's something that is done

3236
02:03:20,000 --> 02:03:22,000
at a much more much lower level and

3237
02:03:22,000 --> 02:03:23,679
basically frees us from

3238
02:03:23,679 --> 02:03:25,199
many of the complexities that are

3239
02:03:25,199 --> 02:03:27,040
involved here of course some of those

3240
02:03:27,040 --> 02:03:28,639
complexities we have to take care at

3241
02:03:28,639 --> 02:03:30,400
this server level in order to take care

3242
02:03:30,400 --> 02:03:31,199
of the

3243
02:03:31,199 --> 02:03:32,880
of the feedback involved and these sort

3244
02:03:32,880 --> 02:03:34,320
of things but from a client-side

3245
02:03:34,320 --> 02:03:36,239
perspective it's much lighter

3246
02:03:36,239 --> 02:03:38,239
the moment you start using webassembly

3247
02:03:38,239 --> 02:03:39,679
it means that you need to

3248
02:03:39,679 --> 02:03:42,560
worry about encoding stuff yourself

3249
02:03:42,560 --> 02:03:43,520
which

3250
02:03:43,520 --> 02:03:45,760
the more streams you encode the the

3251
02:03:45,760 --> 02:03:47,920
higher the the cpu usage uh

3252
02:03:47,920 --> 02:03:50,400
will be and no more how optimized robust

3253
02:03:50,400 --> 02:03:51,440
simply is it will

3254
02:03:51,440 --> 02:03:53,440
probably still be a bit heavier than it

3255
02:03:53,440 --> 02:03:54,960
currently is by

3256
02:03:54,960 --> 02:03:56,639
done at the c plus plus level by the

3257
02:03:56,639 --> 02:03:58,800
browser itself and same thing for the

3258
02:03:58,800 --> 02:04:00,560
decoding part so

3259
02:04:00,560 --> 02:04:03,760
it it is possible in practice for the

3260
02:04:03,760 --> 02:04:05,440
moment i think it's a bit premature

3261
02:04:05,440 --> 02:04:06,000
because

3262
02:04:06,000 --> 02:04:09,520
uh just because of the the usage of

3263
02:04:09,520 --> 02:04:11,119
resources that may be involved that

3264
02:04:11,119 --> 02:04:12,719
we're actually a bit due to high but

3265
02:04:12,719 --> 02:04:14,079
this is something that we definitely

3266
02:04:14,079 --> 02:04:15,440
want to keep track of

3267
02:04:15,440 --> 02:04:16,960
and for instance i was interested in

3268
02:04:16,960 --> 02:04:18,719
your presentation before just to take

3269
02:04:18,719 --> 02:04:20,480
to see what we could do in using

3270
02:04:20,480 --> 02:04:22,320
multicast directly from the browser to

3271
02:04:22,320 --> 02:04:22,960
see if

3272
02:04:22,960 --> 02:04:25,040
there could be some step that we could

3273
02:04:25,040 --> 02:04:26,079
do in order to

3274
02:04:26,079 --> 02:04:28,239
to avoid webrtc in some cases and use

3275
02:04:28,239 --> 02:04:30,159
multicast for the purpose instead

3276
02:04:30,159 --> 02:04:32,400
which may be useful for instance even in

3277
02:04:32,400 --> 02:04:34,400
just in the context of

3278
02:04:34,400 --> 02:04:37,040
just attending a an event for instance

3279
02:04:37,040 --> 02:04:38,639
in this case there's no

3280
02:04:38,639 --> 02:04:40,400
uh there's no encoding involved the

3281
02:04:40,400 --> 02:04:42,159
coding may be more much more likely

3282
02:04:42,159 --> 02:04:44,320
in this case receiving a broadcast would

3283
02:04:44,320 --> 02:04:45,920
be much easier to

3284
02:04:45,920 --> 02:04:49,119
to do and easier to perform but yeah

3285
02:04:49,119 --> 02:04:52,480
in a very long story short and it's

3286
02:04:52,480 --> 02:04:53,199
something that we

3287
02:04:53,199 --> 02:04:55,679
would like to do but uh we haven't any

3288
02:04:55,679 --> 02:04:57,360
immediate plan to do so we are following

3289
02:04:57,360 --> 02:04:59,040
the evolution of these standards in this

3290
02:04:59,040 --> 02:05:01,599
in this sense okay so your clients don't

3291
02:05:01,599 --> 02:05:02,239
do any

3292
02:05:02,239 --> 02:05:04,400
uh you don't have a client that's not a

3293
02:05:04,400 --> 02:05:07,520
webrtc then that sort of yeah because

3294
02:05:07,520 --> 02:05:09,520
yeah because everything goes through

3295
02:05:09,520 --> 02:05:11,920
through janus in our case and janus is a

3296
02:05:11,920 --> 02:05:14,400
webrtc component so what we definitely

3297
02:05:14,400 --> 02:05:16,480
want to do is as soon as quick becomes

3298
02:05:16,480 --> 02:05:18,000
one of the alternatives to to

3299
02:05:18,000 --> 02:05:20,480
communicate via webrtc we want to

3300
02:05:20,480 --> 02:05:23,040
to start using that as well for for

3301
02:05:23,040 --> 02:05:24,639
multicast it's a bit more complex than

3302
02:05:24,639 --> 02:05:25,520
that which is why

3303
02:05:25,520 --> 02:05:27,840
for instance i mentioned this this

3304
02:05:27,840 --> 02:05:29,760
potential idea over here so this may be

3305
02:05:29,760 --> 02:05:31,920
a first step that we could take in order

3306
02:05:31,920 --> 02:05:32,560
to

3307
02:05:32,560 --> 02:05:34,400
familiarize with the technology and see

3308
02:05:34,400 --> 02:05:36,320
if we can take advantage of multicast

3309
02:05:36,320 --> 02:05:37,360
also for

3310
02:05:37,360 --> 02:05:39,840
just plain broadcasting which is still

3311
02:05:39,840 --> 02:05:40,639
the

3312
02:05:40,639 --> 02:05:43,840
a very common use case i mean the itf is

3313
02:05:43,840 --> 02:05:46,639
is a bit more of a different use case

3314
02:05:46,639 --> 02:05:48,480
when compared to other events that are

3315
02:05:48,480 --> 02:05:50,800
much more one-to-many oriented the itf

3316
02:05:50,800 --> 02:05:51,920
is much more

3317
02:05:51,920 --> 02:05:53,920
cooperative and collaborative and so

3318
02:05:53,920 --> 02:05:55,840
much more interactive in this sense

3319
02:05:55,840 --> 02:05:57,440
in scenarios where we're more interested

3320
02:05:57,440 --> 02:05:59,360
in broadcasting than actually

3321
02:05:59,360 --> 02:06:01,119
active participation it's something that

3322
02:06:01,119 --> 02:06:02,800
we want to start investigating a bit

3323
02:06:02,800 --> 02:06:03,760
more

3324
02:06:03,760 --> 02:06:06,960
yeah all right thank you

3325
02:06:07,360 --> 02:06:09,760
lorenzo for for this model what uh what

3326
02:06:09,760 --> 02:06:11,199
what would you say are the gaps because

3327
02:06:11,199 --> 02:06:12,719
this i mean this seems like this is

3328
02:06:12,719 --> 02:06:17,040
exactly what amt was built for you

3329
02:06:23,040 --> 02:06:24,960
first of all uh i would have to

3330
02:06:24,960 --> 02:06:26,560
familiarize myself a bit more with the

3331
02:06:26,560 --> 02:06:28,400
technology because i've heard i've read

3332
02:06:28,400 --> 02:06:30,560
about a bit about it but i'm admittedly

3333
02:06:30,560 --> 02:06:30,960
not

3334
02:06:30,960 --> 02:06:32,079
not that much knowledgeable

3335
02:06:32,079 --> 02:06:33,840
knowledgeable about it so i want to

3336
02:06:33,840 --> 02:06:35,119
study a bit more about how the

3337
02:06:35,119 --> 02:06:36,960
technology works especially within the

3338
02:06:36,960 --> 02:06:38,320
context of

3339
02:06:38,320 --> 02:06:39,920
live distribution so not just

3340
02:06:39,920 --> 02:06:41,440
distribution of static files or

3341
02:06:41,440 --> 02:06:42,960
something like this so what can be done

3342
02:06:42,960 --> 02:06:44,079
for the purpose

3343
02:06:44,079 --> 02:06:45,920
i know that for instance i think it was

3344
02:06:45,920 --> 02:06:47,440
you that were involved in

3345
02:06:47,440 --> 02:06:49,679
integrating this support in vlc as well

3346
02:06:49,679 --> 02:06:51,280
so that might be

3347
02:06:51,280 --> 02:06:53,679
an interesting uh an interesting thing

3348
02:06:53,679 --> 02:06:55,040
to to look into

3349
02:06:55,040 --> 02:06:58,960
especially for the uh for the um

3350
02:06:58,960 --> 02:07:00,800
for the attendees perspective so how

3351
02:07:00,800 --> 02:07:02,560
they can actually consume a stream that

3352
02:07:02,560 --> 02:07:04,400
we are introducing that way

3353
02:07:04,400 --> 02:07:06,560
in general it's a matter of figuring out

3354
02:07:06,560 --> 02:07:08,159
how media should be encoded and

3355
02:07:08,159 --> 02:07:10,079
packetized in order to distribute it

3356
02:07:10,079 --> 02:07:11,360
somehow and

3357
02:07:11,360 --> 02:07:13,199
what can be done in order to minimize

3358
02:07:13,199 --> 02:07:15,119
the impact on the recipient's site so

3359
02:07:15,119 --> 02:07:16,880
that they can reuse existing tools

3360
02:07:16,880 --> 02:07:17,840
rather than writing

3361
02:07:17,840 --> 02:07:21,199
other tools for that as well

3362
02:07:22,400 --> 02:07:24,560
great and i just uh i just added into

3363
02:07:24,560 --> 02:07:26,560
the comments um

3364
02:07:26,560 --> 02:07:28,239
uh look for a little more information

3365
02:07:28,239 --> 02:07:30,639
about that vlc port and how we're using

3366
02:07:30,639 --> 02:07:32,320
it in the multicast menu

3367
02:07:32,320 --> 02:07:34,480
it's a you know it's it's a good primer

3368
02:07:34,480 --> 02:07:35,599
to see

3369
02:07:35,599 --> 02:07:38,000
you know all the pieces in place um that

3370
02:07:38,000 --> 02:07:40,239
multicast menu basically lists

3371
02:07:40,239 --> 02:07:42,239
all the active multicast streams on the

3372
02:07:42,239 --> 02:07:43,520
mbone uh

3373
02:07:43,520 --> 02:07:46,079
and you can just click on a minute it'll

3374
02:07:46,079 --> 02:07:46,800
launch

3375
02:07:46,800 --> 02:07:49,520
vlc if you have the correct vlc um the

3376
02:07:49,520 --> 02:07:50,960
latest version of vlc

3377
02:07:50,960 --> 02:07:53,040
it'll run amt capable and you'll be able

3378
02:07:53,040 --> 02:07:54,000
to watch

3379
02:07:54,000 --> 02:07:56,400
over amt now thanks that's very helpful

3380
02:07:56,400 --> 02:07:57,920
because i just need some

3381
02:07:57,920 --> 02:08:00,320
we just need some reference to to know

3382
02:08:00,320 --> 02:08:02,079
what we should basically

3383
02:08:02,079 --> 02:08:04,079
construct in order to make it compliant

3384
02:08:04,079 --> 02:08:06,000
with what is what is out there so

3385
02:08:06,000 --> 02:08:08,159
basically to reply to your point what's

3386
02:08:08,159 --> 02:08:09,920
missing is we need to do some

3387
02:08:09,920 --> 02:08:13,040
homework basically that's it and and

3388
02:08:13,040 --> 02:08:13,679
i'll say

3389
02:08:13,679 --> 02:08:15,760
this that the multicast menu we're we're

3390
02:08:15,760 --> 02:08:17,760
looking for way more content so uh

3391
02:08:17,760 --> 02:08:19,280
if you've got test streams if you've got

3392
02:08:19,280 --> 02:08:21,520
real streams even better uh we'd be

3393
02:08:21,520 --> 02:08:22,800
happy to uh

3394
02:08:22,800 --> 02:08:26,239
to add them to that so okay

3395
02:08:26,239 --> 02:08:29,119
content is king

3396
02:08:31,840 --> 02:08:37,840
any other questions for lorenzo

3397
02:08:38,400 --> 02:08:40,719
all right so i guess if that's all uh

3398
02:08:40,719 --> 02:08:43,440
like to say uh thanks everybody for uh

3399
02:08:43,440 --> 02:08:45,599
for joining especially those uh on the

3400
02:08:45,599 --> 02:08:46,639
west coast of

3401
02:08:46,639 --> 02:08:48,800
north america who had to wake up

3402
02:08:48,800 --> 02:08:50,159
extremely early

3403
02:08:50,159 --> 02:08:54,159
uh for this um and uh look forward to

3404
02:08:54,159 --> 02:08:55,760
hopefully seeing everyone in person

3405
02:08:55,760 --> 02:08:56,719
maybe

3406
02:08:56,719 --> 02:08:59,840
uh at 1 11 we can only hope

3407
02:08:59,840 --> 02:09:02,639
but uh we'll see otherwise we'll see in

3408
02:09:02,639 --> 02:09:05,360
a couple months

3409
02:09:05,360 --> 02:09:19,839
thanks everyone

3410
02:09:58,840 --> 02:10:01,840
so

3411
02:10:27,599 --> 02:10:29,679
i

