1
00:01:09,600 --> 00:01:12,799
all right

2
00:01:12,799 --> 00:01:15,439
welcome to ippm everyone um can people

3
00:01:15,439 --> 00:01:18,240
see the slides

4
00:01:22,080 --> 00:01:27,840
we have a yes all right

5
00:01:37,439 --> 00:01:40,320
so am i not presenting the uh during the

6
00:01:40,320 --> 00:01:41,759
loop loopback decks

7
00:01:41,759 --> 00:01:44,320
period you are i do have your slides in

8
00:01:44,320 --> 00:01:45,040
there

9
00:01:45,040 --> 00:01:47,680
okay all right thanks i'll bring that up

10
00:01:47,680 --> 00:01:48,320
surely

11
00:01:48,320 --> 00:01:52,159
all right so welcome everyone

12
00:01:52,159 --> 00:01:54,880
i'm tommy ian is co-chairing with me you

13
00:01:54,880 --> 00:01:56,560
just saw martin

14
00:01:56,560 --> 00:02:02,640
r-a-d uh this is the note well

15
00:02:02,640 --> 00:02:04,960
if you have not seen it before please do

16
00:02:04,960 --> 00:02:06,320
take a look this is

17
00:02:06,320 --> 00:02:08,878
the um kind of the terms under which you

18
00:02:08,878 --> 00:02:11,200
participate in the ietf

19
00:02:11,200 --> 00:02:12,480
if you've been here before you should be

20
00:02:12,480 --> 00:02:15,440
very familiar with this

21
00:02:17,440 --> 00:02:21,440
so we are currently here in medeco

22
00:02:21,440 --> 00:02:24,000
we do have the jabber which is available

23
00:02:24,000 --> 00:02:25,200
in the chat

24
00:02:25,200 --> 00:02:28,480
section of your window we have notes

25
00:02:28,480 --> 00:02:31,280
that you can also access and we do need

26
00:02:31,280 --> 00:02:33,040
a note taker on the kodi md

27
00:02:33,040 --> 00:02:36,800
today and for reference

28
00:02:36,800 --> 00:02:38,800
today's agenda is primarily going to be

29
00:02:38,800 --> 00:02:40,800
about the iom

30
00:02:40,800 --> 00:02:42,239
work so it'd be great to have someone

31
00:02:42,239 --> 00:02:44,560
who's not

32
00:02:44,560 --> 00:02:47,599
going to be super active in uh

33
00:02:47,599 --> 00:02:50,480
presenting to be able to help take notes

34
00:02:50,480 --> 00:02:54,160
on that could we get a volunteer please

35
00:02:54,160 --> 00:02:55,840
i'll leave that before we can move on

36
00:02:55,840 --> 00:02:57,519
and i've already filled out the agenda

37
00:02:57,519 --> 00:03:04,239
on that page

38
00:03:04,239 --> 00:03:06,879
volunteers

39
00:03:17,200 --> 00:03:32,799
put it in the chat as well

40
00:03:32,799 --> 00:03:34,319
all right we're gonna need someone to

41
00:03:34,319 --> 00:03:36,080
help step up

42
00:03:36,080 --> 00:03:38,480
okay so thank you so much very much

43
00:03:38,480 --> 00:03:41,120
appreciated

44
00:03:41,120 --> 00:03:44,400
we can move on all right so

45
00:03:44,400 --> 00:03:47,599
we have two different

46
00:03:47,599 --> 00:03:50,239
two different meetings this week we have

47
00:03:50,239 --> 00:03:51,599
a one hour meeting right now

48
00:03:51,599 --> 00:03:54,560
and then we have a longer meeting on

49
00:03:54,560 --> 00:03:56,000
friday

50
00:03:56,000 --> 00:03:59,439
today we want to go through just the iom

51
00:03:59,439 --> 00:04:01,599
topics that we have we're going to start

52
00:04:01,599 --> 00:04:02,959
out with some very brief

53
00:04:02,959 --> 00:04:06,480
updates um for some of the

54
00:04:06,480 --> 00:04:08,080
existing working group documents that

55
00:04:08,080 --> 00:04:10,959
are further along

56
00:04:11,599 --> 00:04:13,439
as well as frank will tell us about some

57
00:04:13,439 --> 00:04:15,439
deployment work and then we have

58
00:04:15,439 --> 00:04:19,199
two long sections that we've allocated

59
00:04:19,199 --> 00:04:21,120
to talk about

60
00:04:21,120 --> 00:04:23,520
kind of particular issues that we want

61
00:04:23,520 --> 00:04:24,800
to get to

62
00:04:24,800 --> 00:04:27,840
one being integrity of iom data that

63
00:04:27,840 --> 00:04:28,400
came up

64
00:04:28,400 --> 00:04:31,919
during iesg review

65
00:04:31,919 --> 00:04:37,599
as well as discussing some of the

66
00:04:37,680 --> 00:04:39,520
attacks and concerns around loopback and

67
00:04:39,520 --> 00:04:42,080
direct export

68
00:04:42,080 --> 00:04:45,040
we will um as we discuss have some

69
00:04:45,040 --> 00:04:45,600
thoughts

70
00:04:45,600 --> 00:04:49,280
from martin there um

71
00:04:49,280 --> 00:04:50,800
about some of the concerns he has and

72
00:04:50,800 --> 00:04:52,320
we're going to actually

73
00:04:52,320 --> 00:04:54,240
start out with those before we get to

74
00:04:54,240 --> 00:04:56,240
the rest of the presentation on loopback

75
00:04:56,240 --> 00:04:58,800
and direct export

76
00:04:58,800 --> 00:05:02,160
okay any bashing of that

77
00:05:02,720 --> 00:05:11,440
should we launch right in

78
00:05:11,440 --> 00:05:15,360
okey-dokey let's start out

79
00:05:15,360 --> 00:05:20,560
with the v6 options update

80
00:05:23,360 --> 00:05:27,120
okay can you hear me i can

81
00:05:27,120 --> 00:05:32,240
okay excellent because the tool tells me

82
00:05:32,240 --> 00:05:34,160
are you speaking it seems we're not

83
00:05:34,160 --> 00:05:35,919
detecting your audio okay

84
00:05:35,919 --> 00:05:38,560
um excellent so um this is an update on

85
00:05:38,560 --> 00:05:39,440
the

86
00:05:39,440 --> 00:05:42,400
the o5 version of the v6 options draft

87
00:05:42,400 --> 00:05:44,880
next slide

88
00:05:47,520 --> 00:05:50,560
so the key changes are really

89
00:05:50,560 --> 00:05:53,199
apart from editorial updates i try to go

90
00:05:53,199 --> 00:05:54,400
and

91
00:05:54,400 --> 00:05:56,080
align the nomenclature between the data

92
00:05:56,080 --> 00:05:58,800
draft and the v6 options draft

93
00:05:58,800 --> 00:06:03,840
um there is one node and that came from

94
00:06:03,840 --> 00:06:06,160
the implementation effort uh that justin

95
00:06:06,160 --> 00:06:07,039
yerman

96
00:06:07,039 --> 00:06:08,560
is driving right now for the linux

97
00:06:08,560 --> 00:06:11,280
kernel eset really would be helpful if

98
00:06:11,280 --> 00:06:13,120
we just put a note like we put in other

99
00:06:13,120 --> 00:06:15,039
drafts as well that

100
00:06:15,039 --> 00:06:16,560
obviously the container that we

101
00:06:16,560 --> 00:06:18,319
encapsulate ium in

102
00:06:18,319 --> 00:06:20,880
or iom data fields in is restricting the

103
00:06:20,880 --> 00:06:21,440
size

104
00:06:21,440 --> 00:06:23,520
of what can't be in an option type and

105
00:06:23,520 --> 00:06:27,600
in the case of v6 that's 255 octets

106
00:06:27,600 --> 00:06:30,160
so i think that is a node that is in

107
00:06:30,160 --> 00:06:30,720
there now

108
00:06:30,720 --> 00:06:33,199
and the other thing is that so far the

109
00:06:33,199 --> 00:06:34,960
the draft didn't really cover direct

110
00:06:34,960 --> 00:06:35,840
export

111
00:06:35,840 --> 00:06:37,759
given that direct export is progressing

112
00:06:37,759 --> 00:06:38,880
nicely

113
00:06:38,880 --> 00:06:42,639
uh we also asked or we we included

114
00:06:42,639 --> 00:06:44,800
uh the the need for an option type

115
00:06:44,800 --> 00:06:47,840
allocation for

116
00:06:47,840 --> 00:06:50,960
direct export so i think those are the

117
00:06:50,960 --> 00:06:54,160
the meaty or beefy additions to

118
00:06:54,160 --> 00:06:55,680
the individual draft there's one thing

119
00:06:55,680 --> 00:06:58,000
that i forgot uh tommy and sorry for

120
00:06:58,000 --> 00:07:00,319
that if you flip to the next slide

121
00:07:00,319 --> 00:07:02,960
i forgot to clean up the author list uh

122
00:07:02,960 --> 00:07:04,720
per your suggestion i'm gonna go and do

123
00:07:04,720 --> 00:07:06,560
that in the next revision

124
00:07:06,560 --> 00:07:10,080
uh so that's really like an oversight

125
00:07:10,080 --> 00:07:13,680
sorry for that um maybe i didn't want to

126
00:07:13,680 --> 00:07:14,560
go and stick uh

127
00:07:14,560 --> 00:07:17,039
touch this thing with a mentally 10 foot

128
00:07:17,039 --> 00:07:17,759
stick but

129
00:07:17,759 --> 00:07:20,479
well i'm going to go do it that's fine

130
00:07:20,479 --> 00:07:20,880
now

131
00:07:20,880 --> 00:07:23,199
i think we got some notes from the isg

132
00:07:23,199 --> 00:07:24,400
about like hey

133
00:07:24,400 --> 00:07:26,319
you're going to want to reduce this list

134
00:07:26,319 --> 00:07:27,599
but thank you yeah

135
00:07:27,599 --> 00:07:28,800
we're going to go and clean that up i

136
00:07:28,800 --> 00:07:30,639
think you you came up with a suggestion

137
00:07:30,639 --> 00:07:31,440
on the mailing list

138
00:07:31,440 --> 00:07:33,199
on how to go and progress on that and

139
00:07:33,199 --> 00:07:34,560
we're going to go do very much like what

140
00:07:34,560 --> 00:07:35,039
we've done

141
00:07:35,039 --> 00:07:37,599
with the other drafts uh so with this

142
00:07:37,599 --> 00:07:39,599
like well the others are minor

143
00:07:39,599 --> 00:07:42,880
um and uh we're carrying along i'm not

144
00:07:42,880 --> 00:07:43,599
sure whether

145
00:07:43,599 --> 00:07:44,800
at some point we want to go and do a

146
00:07:44,800 --> 00:07:46,400
last call on the document or whether we

147
00:07:46,400 --> 00:07:47,599
want to go and keep it hangar for a

148
00:07:47,599 --> 00:07:48,879
while

149
00:07:48,879 --> 00:07:50,639
uh because i think we for sure need to

150
00:07:50,639 --> 00:07:53,120
go and get um

151
00:07:53,120 --> 00:07:55,599
six man to also um go look at it right

152
00:07:55,599 --> 00:07:57,039
uh so like we've done

153
00:07:57,039 --> 00:07:59,599
in the past right so if we can go and

154
00:07:59,599 --> 00:08:00,319
get the review

155
00:08:00,319 --> 00:08:02,080
working at some point that we're

156
00:08:02,080 --> 00:08:04,319
starting to re-rope in the six-man

157
00:08:04,319 --> 00:08:04,960
people

158
00:08:04,960 --> 00:08:08,400
i think that would be helpful okay

159
00:08:08,400 --> 00:08:13,840
um you mentioned

160
00:08:14,240 --> 00:08:16,160
so some of the changes that would

161
00:08:16,160 --> 00:08:18,800
account for things in direct export um

162
00:08:18,800 --> 00:08:20,479
i don't imagine that there would be any

163
00:08:20,479 --> 00:08:22,240
kind of dependency

164
00:08:22,240 --> 00:08:25,599
there right um as far as

165
00:08:25,599 --> 00:08:28,560
like dependency in what form there's no

166
00:08:28,560 --> 00:08:28,960
like

167
00:08:28,960 --> 00:08:32,159
normative references over there oh no

168
00:08:32,159 --> 00:08:34,080
no so um i think this and the other

169
00:08:34,080 --> 00:08:35,839
thing that i think you were helping with

170
00:08:35,839 --> 00:08:38,958
um and that this again what justin um

171
00:08:38,958 --> 00:08:40,640
put out on the mailing list is that we

172
00:08:40,640 --> 00:08:41,679
are going to go and

173
00:08:41,679 --> 00:08:44,720
hopefully extend the early allocation so

174
00:08:44,720 --> 00:08:45,839
that

175
00:08:45,839 --> 00:08:47,600
the the ongoing implementations are not

176
00:08:47,600 --> 00:08:50,320
really impacted

177
00:08:50,399 --> 00:08:54,240
all right thank you uh we have for you

178
00:08:54,240 --> 00:08:54,640
in

179
00:08:54,640 --> 00:08:57,760
the queue hi

180
00:08:57,760 --> 00:09:00,160
frank this is how you from future week

181
00:09:00,160 --> 00:09:00,880
uh this

182
00:09:00,880 --> 00:09:03,680
this note in this slide but i remember

183
00:09:03,680 --> 00:09:04,720
uh

184
00:09:04,720 --> 00:09:08,160
in the draft you mentioned to use

185
00:09:08,160 --> 00:09:11,200
ip9p encapsulation to support

186
00:09:11,200 --> 00:09:14,880
including outside om but my concern is

187
00:09:14,880 --> 00:09:16,959
that if you use this approach

188
00:09:16,959 --> 00:09:20,240
it's actually changed the original

189
00:09:20,240 --> 00:09:22,640
purpose of the iom which is used to

190
00:09:22,640 --> 00:09:24,080
monitor the

191
00:09:24,080 --> 00:09:26,800
original user flows because you now you

192
00:09:26,800 --> 00:09:28,640
basically put it into a tunnel

193
00:09:28,640 --> 00:09:32,240
and the voting behavior will be changed

194
00:09:32,240 --> 00:09:37,839
so how do you address that

195
00:09:39,360 --> 00:09:41,360
well so and we had that discussion

196
00:09:41,360 --> 00:09:43,200
before right

197
00:09:43,200 --> 00:09:45,200
the approach is that as an operator if

198
00:09:45,200 --> 00:09:46,240
you

199
00:09:46,240 --> 00:09:49,519
do use iom with the need of double end

200
00:09:49,519 --> 00:09:51,279
cap here

201
00:09:51,279 --> 00:09:54,160
you have to go and make sure that you

202
00:09:54,160 --> 00:09:55,680
engineer your network in accordance

203
00:09:55,680 --> 00:09:56,480
right so that you

204
00:09:56,480 --> 00:09:58,080
your flows don't really start to go and

205
00:09:58,080 --> 00:09:59,600
follow a different path

206
00:09:59,600 --> 00:10:01,040
or it will only apply to those

207
00:10:01,040 --> 00:10:03,360
situations where the flows will continue

208
00:10:03,360 --> 00:10:04,800
to be forwarded along the same path

209
00:10:04,800 --> 00:10:05,680
otherwise

210
00:10:05,680 --> 00:10:08,079
yeah to your point there is no no

211
00:10:08,079 --> 00:10:09,519
benefit from from

212
00:10:09,519 --> 00:10:12,399
from using iom in that context if you

213
00:10:12,399 --> 00:10:14,000
feel like we want to go and have that

214
00:10:14,000 --> 00:10:17,200
as a particular kind of node or

215
00:10:17,200 --> 00:10:19,120
um additional statement in the draft i

216
00:10:19,120 --> 00:10:21,360
think we can go on at that

217
00:10:21,360 --> 00:10:24,320
i think it's one of the downsides of the

218
00:10:24,320 --> 00:10:27,279
safe method ie double encapsulation

219
00:10:27,279 --> 00:10:29,680
uh so everything comes with the

220
00:10:29,680 --> 00:10:31,200
trade-off right everything comes for the

221
00:10:31,200 --> 00:10:33,839
cost

222
00:10:36,399 --> 00:10:38,320
all right thank you um i think we're out

223
00:10:38,320 --> 00:10:40,640
of time for this update

224
00:10:40,640 --> 00:10:42,240
and then we want to hear a five minute

225
00:10:42,240 --> 00:10:45,440
update on the yang

226
00:10:58,320 --> 00:11:01,920
yes we can okay thank you very much

227
00:11:01,920 --> 00:11:04,959
hello everyone from huawei and this is

228
00:11:04,959 --> 00:11:07,760
about the young data model for i1

229
00:11:07,760 --> 00:11:11,120
it was recently adopted by this working

230
00:11:11,120 --> 00:11:11,760
group

231
00:11:11,760 --> 00:11:15,839
thanks next

232
00:11:18,399 --> 00:11:21,519
thanks to richard

233
00:11:21,519 --> 00:11:23,839
miki for the valuable comments during

234
00:11:23,839 --> 00:11:25,519
the adoption call

235
00:11:25,519 --> 00:11:27,760
and in this version there are several

236
00:11:27,760 --> 00:11:30,160
major changes based on the comments in

237
00:11:30,160 --> 00:11:30,560
the

238
00:11:30,560 --> 00:11:36,000
list firstly as requested we add

239
00:11:36,000 --> 00:11:39,040
operational container ioi ion

240
00:11:39,040 --> 00:11:42,480
info for assistant data like

241
00:11:42,480 --> 00:11:45,440
units and timestamp this is right now

242
00:11:45,440 --> 00:11:46,320
empty

243
00:11:46,320 --> 00:11:50,639
for for the argument there was a

244
00:11:50,639 --> 00:11:53,120
proposed example on timestamp

245
00:11:53,120 --> 00:11:54,160
description

246
00:11:54,160 --> 00:11:57,200
but i read the iron data draft and i

247
00:11:57,200 --> 00:11:59,839
think there is no need for additional

248
00:11:59,839 --> 00:12:00,560
information

249
00:12:00,560 --> 00:12:04,560
on um timestamp we can discuss this

250
00:12:04,560 --> 00:12:07,760
in detail in the list on this

251
00:12:07,760 --> 00:12:10,880
and i plan to consider

252
00:12:10,880 --> 00:12:14,399
buffer occupancy next

253
00:12:14,399 --> 00:12:17,519
step but i would appreciate more

254
00:12:17,519 --> 00:12:19,120
suggestions on

255
00:12:19,120 --> 00:12:23,680
specific information informational data

256
00:12:23,680 --> 00:12:26,959
and secondly the previously

257
00:12:26,959 --> 00:12:30,639
the draft associated acl

258
00:12:30,639 --> 00:12:34,079
with each profile there was a finding

259
00:12:34,079 --> 00:12:37,440
that's the ordered list

260
00:12:37,440 --> 00:12:40,639
only extend within each sale so if

261
00:12:40,639 --> 00:12:44,079
two asa is matched the implementation

262
00:12:44,079 --> 00:12:45,600
does not know

263
00:12:45,600 --> 00:12:49,440
um which sae in which sale to use

264
00:12:49,440 --> 00:12:52,639
um to solve this i associated

265
00:12:52,639 --> 00:12:56,079
ac instead of acl with each profile

266
00:12:56,079 --> 00:12:59,360
in this version and as suggested i've

267
00:12:59,360 --> 00:13:01,120
added

268
00:13:01,120 --> 00:13:05,360
text in the document say i want actions

269
00:13:05,360 --> 00:13:08,560
be driven by the accepted packet when

270
00:13:08,560 --> 00:13:10,079
the matched sae

271
00:13:10,079 --> 00:13:13,279
forwarding action is accepted

272
00:13:13,279 --> 00:13:17,839
there's another way but i did not think

273
00:13:17,839 --> 00:13:21,279
i did not argument augment ace actions

274
00:13:21,279 --> 00:13:24,720
because there might be different kind of

275
00:13:24,720 --> 00:13:28,160
filters acl is just the one as

276
00:13:28,160 --> 00:13:31,600
the roof proposed flows back could be

277
00:13:31,600 --> 00:13:32,880
another one

278
00:13:32,880 --> 00:13:36,480
i believe existing

279
00:13:36,480 --> 00:13:39,920
structure is more flexible

280
00:13:39,920 --> 00:13:43,279
and third i removed the

281
00:13:43,279 --> 00:13:47,199
action transit as i suggested

282
00:13:47,199 --> 00:13:49,920
because right now there is no use case

283
00:13:49,920 --> 00:13:52,560
for the transit node

284
00:13:52,560 --> 00:13:56,320
configuration and fourthly

285
00:13:56,320 --> 00:13:59,040
there was a suggestion in the list to

286
00:13:59,040 --> 00:13:59,600
support

287
00:13:59,600 --> 00:14:02,639
interface filter that means for example

288
00:14:02,639 --> 00:14:04,160
the egress node

289
00:14:04,160 --> 00:14:07,360
we can do the encapsulating operation on

290
00:14:07,360 --> 00:14:08,880
all the traffic

291
00:14:08,880 --> 00:14:12,079
on one or multiple interfaces

292
00:14:12,079 --> 00:14:15,120
i looked into the acl model used

293
00:14:15,120 --> 00:14:18,240
in this draft and found

294
00:14:18,240 --> 00:14:20,639
that the interface filter has already

295
00:14:20,639 --> 00:14:22,000
been supported

296
00:14:22,000 --> 00:14:24,800
so i did not do the additional argument

297
00:14:24,800 --> 00:14:26,399
for the interface filter

298
00:14:26,399 --> 00:14:30,399
we can still use sal filter for the

299
00:14:30,399 --> 00:14:33,680
proposed use case

300
00:14:34,480 --> 00:14:37,600
and that's all for the updates

301
00:14:37,600 --> 00:14:40,560
and next

302
00:14:42,880 --> 00:14:47,120
and here is the overview

303
00:14:47,120 --> 00:14:50,639
so just one quick commentary um

304
00:14:50,639 --> 00:14:54,079
i think we want to be able to go quick

305
00:14:54,079 --> 00:14:57,920
so we can skip to the to the end of the

306
00:14:57,920 --> 00:15:00,560
side stack

307
00:15:01,519 --> 00:15:05,279
to the end yeah

308
00:15:05,279 --> 00:15:08,880
and next step um we need the input

309
00:15:08,880 --> 00:15:12,959
for the iomu4 and we will

310
00:15:12,959 --> 00:15:16,800
add examples on the young model usage

311
00:15:16,800 --> 00:15:19,920
and more comments are welcome

312
00:15:19,920 --> 00:15:22,240
thanks

313
00:15:23,839 --> 00:15:26,720
all right do you have any comments on

314
00:15:26,720 --> 00:15:29,120
this one

315
00:15:36,720 --> 00:15:41,839
all right thank you so much

316
00:15:46,160 --> 00:15:48,959
all right frank you wanna come back give

317
00:15:48,959 --> 00:15:49,360
us

318
00:15:49,360 --> 00:15:53,040
an update yeah if i'm back

319
00:15:53,040 --> 00:15:56,639
am i yeah okay

320
00:15:56,639 --> 00:16:00,240
so this is a a brief kind of heads up to

321
00:16:00,240 --> 00:16:04,000
ippm on a draft that originally started

322
00:16:04,000 --> 00:16:06,880
in ops awg it's called irm deployment

323
00:16:06,880 --> 00:16:09,839
next slide

324
00:16:13,759 --> 00:16:16,959
so the scope of that document is is

325
00:16:16,959 --> 00:16:20,560
to really tie all the various iom

326
00:16:20,560 --> 00:16:22,720
related documents that are out there

327
00:16:22,720 --> 00:16:23,920
together

328
00:16:23,920 --> 00:16:26,399
into something that could become say a

329
00:16:26,399 --> 00:16:28,639
bcp or the likes

330
00:16:28,639 --> 00:16:31,920
so everything around data fields yang

331
00:16:31,920 --> 00:16:33,360
operations

332
00:16:33,360 --> 00:16:36,480
export the various encapsulations so

333
00:16:36,480 --> 00:16:37,600
that we have

334
00:16:37,600 --> 00:16:40,800
one document that

335
00:16:40,959 --> 00:16:44,720
frames what iom is really to an outside

336
00:16:44,720 --> 00:16:46,399
reader that might be a little lost in

337
00:16:46,399 --> 00:16:48,320
all these various documents

338
00:16:48,320 --> 00:16:50,240
and we started that if we flip to the

339
00:16:50,240 --> 00:16:52,079
next slide

340
00:16:52,079 --> 00:16:55,519
um a while ago in ops awg

341
00:16:55,519 --> 00:16:59,279
and created a document that

342
00:16:59,279 --> 00:17:03,040
basically explains iom deployments

343
00:17:03,040 --> 00:17:05,839
what are domains what are nodes what are

344
00:17:05,839 --> 00:17:07,679
the different types of iom

345
00:17:07,679 --> 00:17:10,480
with the associated references to the

346
00:17:10,480 --> 00:17:11,359
documents

347
00:17:11,359 --> 00:17:13,280
it has a section on manageability there

348
00:17:13,280 --> 00:17:15,119
is a section on security considerations

349
00:17:15,119 --> 00:17:17,039
that were continued to grow

350
00:17:17,039 --> 00:17:19,280
um it talks about why data export is

351
00:17:19,280 --> 00:17:21,280
useful it has a little bit of a

352
00:17:21,280 --> 00:17:24,240
framing um i don't want to go and call

353
00:17:24,240 --> 00:17:25,919
it architecture but how the various

354
00:17:25,919 --> 00:17:27,439
things fit together like

355
00:17:27,439 --> 00:17:29,919
end cap decap transit nodes and maybe a

356
00:17:29,919 --> 00:17:31,039
controller

357
00:17:31,039 --> 00:17:33,360
to go and make sure that information is

358
00:17:33,360 --> 00:17:34,480
gathered

359
00:17:34,480 --> 00:17:37,039
and then we have stuff like on how

360
00:17:37,039 --> 00:17:40,160
namespaces are used how layering is used

361
00:17:40,160 --> 00:17:43,039
um and how the different modes are used

362
00:17:43,039 --> 00:17:44,559
and references to the various

363
00:17:44,559 --> 00:17:46,240
encapsulations so that we have this as a

364
00:17:46,240 --> 00:17:47,120
bit of a

365
00:17:47,120 --> 00:17:49,200
document that ties it all together for

366
00:17:49,200 --> 00:17:50,240
people that want to use

367
00:17:50,240 --> 00:17:53,360
iom instead of implement iom

368
00:17:53,360 --> 00:18:00,799
and if you flip to the next slide

369
00:18:00,799 --> 00:18:04,559
so we started this in in in uh ops a wg

370
00:18:04,559 --> 00:18:05,520
but given that

371
00:18:05,520 --> 00:18:07,360
everything is now really centered around

372
00:18:07,360 --> 00:18:08,559
ippm

373
00:18:08,559 --> 00:18:10,559
uh with regards to ium and i think

374
00:18:10,559 --> 00:18:11,840
thanks for having a

375
00:18:11,840 --> 00:18:14,960
a dedicated iom session even now i love

376
00:18:14,960 --> 00:18:16,640
that

377
00:18:16,640 --> 00:18:18,480
i think it's it's a natural place to go

378
00:18:18,480 --> 00:18:20,320
and progress that work in

379
00:18:20,320 --> 00:18:23,360
in ippm rather than up say wg because

380
00:18:23,360 --> 00:18:25,600
all the people that care are here um

381
00:18:25,600 --> 00:18:27,760
there is another piece that

382
00:18:27,760 --> 00:18:29,120
and this this document is about to

383
00:18:29,120 --> 00:18:31,039
expire i need to go and put in

384
00:18:31,039 --> 00:18:35,120
um some additional work for

385
00:18:35,120 --> 00:18:37,360
the security section that sean actually

386
00:18:37,360 --> 00:18:38,880
uh was recommending

387
00:18:38,880 --> 00:18:42,240
and along with his review uh he also

388
00:18:42,240 --> 00:18:44,400
and this is why it's also here uh

389
00:18:44,400 --> 00:18:46,640
recommended uh to put in a reference and

390
00:18:46,640 --> 00:18:48,080
it's there in

391
00:18:48,080 --> 00:18:52,160
the uh dash 12 revision of the data

392
00:18:52,160 --> 00:18:53,120
draft

393
00:18:53,120 --> 00:18:54,799
uh to this particular deployment

394
00:18:54,799 --> 00:18:56,320
document because

395
00:18:56,320 --> 00:18:58,880
some of the contacts that we have in in

396
00:18:58,880 --> 00:19:00,320
the data draft about

397
00:19:00,320 --> 00:19:02,559
say the security section is like yeah

398
00:19:02,559 --> 00:19:04,000
you list a couple of threads but why

399
00:19:04,000 --> 00:19:05,520
does anybody care

400
00:19:05,520 --> 00:19:07,280
and i think the reason why you care is

401
00:19:07,280 --> 00:19:08,960
in the deployment draft

402
00:19:08,960 --> 00:19:10,480
so we have an informational reference

403
00:19:10,480 --> 00:19:12,080
there so another

404
00:19:12,080 --> 00:19:14,240
piece where where i believe like it

405
00:19:14,240 --> 00:19:15,520
belongs into ippm

406
00:19:15,520 --> 00:19:18,160
and from my perspective i think at some

407
00:19:18,160 --> 00:19:19,200
point we want to go and make it a

408
00:19:19,200 --> 00:19:24,400
working group document

409
00:19:24,400 --> 00:19:27,679
has this been um

410
00:19:27,679 --> 00:19:28,960
when was the last time we it was

411
00:19:28,960 --> 00:19:31,840
discussed in offside wg

412
00:19:31,840 --> 00:19:35,120
and i think that's two meetings back or

413
00:19:35,120 --> 00:19:37,679
so i think it was sometime 2020.

414
00:19:37,679 --> 00:19:39,280
okay i think it wasn't last life meeting

415
00:19:39,280 --> 00:19:41,200
i need to go look it up

416
00:19:41,200 --> 00:19:45,280
sure um and do you know

417
00:19:45,280 --> 00:19:46,320
if you have a sense of kind of the

418
00:19:46,320 --> 00:19:48,640
sentiment there of

419
00:19:48,640 --> 00:19:50,240
if they think the work should be done

420
00:19:50,240 --> 00:19:53,360
there or here

421
00:19:53,360 --> 00:19:56,000
i think what we've gotten from uh those

422
00:19:56,000 --> 00:19:57,760
discussions is that most people that

423
00:19:57,760 --> 00:20:00,080
commented anyway were people that had

424
00:20:00,080 --> 00:20:01,919
well the stake in iom

425
00:20:01,919 --> 00:20:04,880
and came from ippm so yeah we can have

426
00:20:04,880 --> 00:20:06,640
that conversation formally with the

427
00:20:06,640 --> 00:20:07,760
chairs

428
00:20:07,760 --> 00:20:10,960
uh but um you know originally we did it

429
00:20:10,960 --> 00:20:14,480
there because it was deployment focused

430
00:20:14,480 --> 00:20:18,159
um here um i think we were focused more

431
00:20:18,159 --> 00:20:19,679
on the spec but maybe we can go and

432
00:20:19,679 --> 00:20:20,000
groom

433
00:20:20,000 --> 00:20:22,640
everything okay yeah i think you'd be

434
00:20:22,640 --> 00:20:24,159
good to

435
00:20:24,159 --> 00:20:25,760
have some discussions with them i don't

436
00:20:25,760 --> 00:20:27,520
mind where it lives to be honest but

437
00:20:27,520 --> 00:20:28,799
um given that we have a direct

438
00:20:28,799 --> 00:20:31,360
relationship with the data draft

439
00:20:31,360 --> 00:20:33,039
might be useful to have it here i think

440
00:20:33,039 --> 00:20:35,840
we have rob yeah i see right

441
00:20:35,840 --> 00:20:39,440
uh yes uh so with an ops awg

442
00:20:39,440 --> 00:20:41,520
ad hat on uh it makes sense for the

443
00:20:41,520 --> 00:20:42,559
document to be here i think

444
00:20:42,559 --> 00:20:44,240
that this is a to like a better home if

445
00:20:44,240 --> 00:20:45,600
this is where all the iom stuff's been

446
00:20:45,600 --> 00:20:46,640
discussed

447
00:20:46,640 --> 00:20:49,039
then i would prefer being here but

448
00:20:49,039 --> 00:20:52,000
that's just my opinion

449
00:20:52,000 --> 00:20:54,960
all right thank you

450
00:20:59,679 --> 00:21:03,840
all right sounds good yeah so um

451
00:21:04,159 --> 00:21:05,919
i guess were you planning on revving

452
00:21:05,919 --> 00:21:07,600
that document again you said and then

453
00:21:07,600 --> 00:21:09,840
yeah i'm gonna go rev it anyway um i'm

454
00:21:09,840 --> 00:21:11,919
gonna go very soon

455
00:21:11,919 --> 00:21:14,720
probably last week and um then yeah we

456
00:21:14,720 --> 00:21:15,600
can go and decide we'll

457
00:21:15,600 --> 00:21:18,960
go with it that sounds good

458
00:21:18,960 --> 00:21:22,559
all right thank you

459
00:21:22,559 --> 00:21:26,000
great and next we are going to get

460
00:21:26,000 --> 00:21:30,000
into integrity all right so this is a

461
00:21:30,000 --> 00:21:32,000
bit of a longer thing

462
00:21:32,000 --> 00:21:36,559
so next slide

463
00:21:38,080 --> 00:21:40,240
so we probably remember the discussion

464
00:21:40,240 --> 00:21:41,200
that happened on the

465
00:21:41,200 --> 00:21:44,400
on the mailing list historically

466
00:21:44,400 --> 00:21:47,679
uh ium has been built around the

467
00:21:47,679 --> 00:21:48,799
assumption

468
00:21:48,799 --> 00:21:51,600
that this is for a dedicated trusted

469
00:21:51,600 --> 00:21:52,640
domain

470
00:21:52,640 --> 00:21:55,280
and as such um there has been very

471
00:21:55,280 --> 00:21:55,919
little

472
00:21:55,919 --> 00:21:58,799
focus on ensuring that nobody's going to

473
00:21:58,799 --> 00:22:00,880
go and mess around with the data that

474
00:22:00,880 --> 00:22:02,080
iom

475
00:22:02,080 --> 00:22:05,600
capable nodes would go and put in and

476
00:22:05,600 --> 00:22:06,960
well the discussions that we had

477
00:22:06,960 --> 00:22:09,200
recently revealed that people might

478
00:22:09,200 --> 00:22:12,480
have an appetite for using iom otherwise

479
00:22:12,480 --> 00:22:12,880
the

480
00:22:12,880 --> 00:22:14,240
the discussion would have wouldn't have

481
00:22:14,240 --> 00:22:16,960
been there in areas where

482
00:22:16,960 --> 00:22:19,120
there might be concerns that nodes

483
00:22:19,120 --> 00:22:20,640
indeed go

484
00:22:20,640 --> 00:22:24,960
and um fitted around with the ium data

485
00:22:24,960 --> 00:22:27,760
as it's progressing through the network

486
00:22:27,760 --> 00:22:29,280
uh so we might need a

487
00:22:29,280 --> 00:22:32,799
an integrity solution um that is not

488
00:22:32,799 --> 00:22:34,400
really a simple discussion because

489
00:22:34,400 --> 00:22:36,159
whatever you do

490
00:22:36,159 --> 00:22:38,080
to achieve that it's going to go incur

491
00:22:38,080 --> 00:22:39,600
cost right

492
00:22:39,600 --> 00:22:42,080
so whenever we go and create whatever

493
00:22:42,080 --> 00:22:44,400
type of hashes over the fields

494
00:22:44,400 --> 00:22:46,640
um and put these hashes in it's not only

495
00:22:46,640 --> 00:22:47,760
going to

496
00:22:47,760 --> 00:22:49,679
consume space but it's also going to go

497
00:22:49,679 --> 00:22:52,400
and incur significant operational

498
00:22:52,400 --> 00:22:54,799
i.e compute costs on a per hot basis so

499
00:22:54,799 --> 00:22:56,640
i think that's something to keep in mind

500
00:22:56,640 --> 00:22:58,799
but people want it so let's see what we

501
00:22:58,799 --> 00:23:00,559
have as options

502
00:23:00,559 --> 00:23:03,120
next slide

503
00:23:04,720 --> 00:23:08,000
so what do we go and consider as in

504
00:23:08,000 --> 00:23:10,159
scope for the threats that we want to go

505
00:23:10,159 --> 00:23:12,400
and look at

506
00:23:12,400 --> 00:23:15,520
for integrity protection um it's

507
00:23:15,520 --> 00:23:18,480
like the modification of the data fields

508
00:23:18,480 --> 00:23:19,280
it's

509
00:23:19,280 --> 00:23:22,960
the modification of option type headers

510
00:23:22,960 --> 00:23:26,320
it's injection of data fields injection

511
00:23:26,320 --> 00:23:28,320
of option types headers

512
00:23:28,320 --> 00:23:30,880
and even potentially like replay

513
00:23:30,880 --> 00:23:31,840
problems

514
00:23:31,840 --> 00:23:33,520
that can go and occur if somebody uses

515
00:23:33,520 --> 00:23:35,200
an old header with a new data packet and

516
00:23:35,200 --> 00:23:37,360
the likes i think all of that

517
00:23:37,360 --> 00:23:39,200
whether we have all the options you know

518
00:23:39,200 --> 00:23:41,039
all everything covered with all the

519
00:23:41,039 --> 00:23:41,520
options

520
00:23:41,520 --> 00:23:42,960
or methods so we're going to go and talk

521
00:23:42,960 --> 00:23:44,720
i think we can go and look at that in

522
00:23:44,720 --> 00:23:47,039
a later phase but i think that's really

523
00:23:47,039 --> 00:23:48,400
what we wanted to go and have as the

524
00:23:48,400 --> 00:23:50,559
original scope of the document

525
00:23:50,559 --> 00:23:52,080
we're not really trying to go and tackle

526
00:23:52,080 --> 00:23:54,559
this any type of

527
00:23:54,559 --> 00:23:56,159
things that are related to the

528
00:23:56,159 --> 00:23:58,000
management side of things the exporting

529
00:23:58,000 --> 00:23:59,360
side or

530
00:23:59,360 --> 00:24:02,880
people well treating

531
00:24:02,880 --> 00:24:05,840
delay as against something that would um

532
00:24:05,840 --> 00:24:07,039
change

533
00:24:07,039 --> 00:24:10,159
um the integrity of the operation it's

534
00:24:10,159 --> 00:24:11,520
not really changing

535
00:24:11,520 --> 00:24:13,440
the integrity of the packet but it's

536
00:24:13,440 --> 00:24:15,120
changing the integrity of the delay uh

537
00:24:15,120 --> 00:24:16,400
the operation if you would go and put

538
00:24:16,400 --> 00:24:17,279
delay in and

539
00:24:17,279 --> 00:24:20,320
we consider that out of scope for now

540
00:24:20,320 --> 00:24:23,279
um so next slide

541
00:24:25,279 --> 00:24:29,679
so we have basically created a

542
00:24:29,679 --> 00:24:31,840
set of ideas that we came up with based

543
00:24:31,840 --> 00:24:33,360
on the request from the working group of

544
00:24:33,360 --> 00:24:35,440
what could be done

545
00:24:35,440 --> 00:24:38,799
and this

546
00:24:38,799 --> 00:24:40,559
what could be done as a set of five

547
00:24:40,559 --> 00:24:42,960
methods and these five methods take

548
00:24:42,960 --> 00:24:46,159
a couple of assumptions and

549
00:24:46,159 --> 00:24:47,679
we're not really spelling it out for

550
00:24:47,679 --> 00:24:50,240
every single option type for now

551
00:24:50,240 --> 00:24:52,000
because we just thought like um let's go

552
00:24:52,000 --> 00:24:54,640
and create a set of ideas first and then

553
00:24:54,640 --> 00:24:56,880
we can go discuss

554
00:24:56,880 --> 00:24:59,840
so we use the trace option type as the

555
00:24:59,840 --> 00:25:00,480
one that

556
00:25:00,480 --> 00:25:03,760
i think has well the biggest impact

557
00:25:03,760 --> 00:25:04,880
across

558
00:25:04,880 --> 00:25:07,760
and it could easily be applied to e2e or

559
00:25:07,760 --> 00:25:08,960
direct export

560
00:25:08,960 --> 00:25:10,559
if it works for trace it will work for

561
00:25:10,559 --> 00:25:12,480
the other ones if it doesn't really work

562
00:25:12,480 --> 00:25:13,200
for

563
00:25:13,200 --> 00:25:15,440
for trice it might still work for e2e as

564
00:25:15,440 --> 00:25:16,320
we have it with

565
00:25:16,320 --> 00:25:18,320
now one of the methods method five later

566
00:25:18,320 --> 00:25:20,559
on um the basic idea

567
00:25:20,559 --> 00:25:22,480
is always like and i already said that

568
00:25:22,480 --> 00:25:24,000
in the very beginning

569
00:25:24,000 --> 00:25:27,520
about the additional load that we add

570
00:25:27,520 --> 00:25:30,960
it's always like we add some signed

571
00:25:30,960 --> 00:25:36,080
field of a hash of the node data

572
00:25:36,080 --> 00:25:38,400
to the packet so we're adding a

573
00:25:38,400 --> 00:25:39,200
signature

574
00:25:39,200 --> 00:25:42,320
over what has already been in there and

575
00:25:42,320 --> 00:25:44,000
we're piggybacking on top and all the

576
00:25:44,000 --> 00:25:44,720
methods

577
00:25:44,720 --> 00:25:48,640
will will use some of that base method

578
00:25:48,640 --> 00:25:51,039
uh one way or the other so the setup

579
00:25:51,039 --> 00:25:52,640
that we assume is

580
00:25:52,640 --> 00:25:55,840
classic end cap dcap and transit notes

581
00:25:55,840 --> 00:25:57,440
in addition to that we'll have a

582
00:25:57,440 --> 00:25:59,600
validator node which we assume is

583
00:25:59,600 --> 00:26:01,279
typically the dcap node but

584
00:26:01,279 --> 00:26:04,159
it's a dedicated function which verifies

585
00:26:04,159 --> 00:26:06,000
that the integrity of the iom data fees

586
00:26:06,000 --> 00:26:07,039
is indeed

587
00:26:07,039 --> 00:26:10,320
met and that validator would go and then

588
00:26:10,320 --> 00:26:11,840
probably post the results to some

589
00:26:11,840 --> 00:26:13,600
network management station

590
00:26:13,600 --> 00:26:16,080
plus you need to have a magnificent

591
00:26:16,080 --> 00:26:17,760
station or a controller in place

592
00:26:17,760 --> 00:26:20,559
that handles key distribution um so all

593
00:26:20,559 --> 00:26:22,080
of these things need to be

594
00:26:22,080 --> 00:26:23,919
figured out as we would design a

595
00:26:23,919 --> 00:26:25,520
solution

596
00:26:25,520 --> 00:26:27,840
in detail but i think that's the base

597
00:26:27,840 --> 00:26:29,440
setup that we assume

598
00:26:29,440 --> 00:26:32,640
if you go to the next slide

599
00:26:33,919 --> 00:26:36,159
so five methods first one is with

600
00:26:36,159 --> 00:26:37,600
asymmetric keys

601
00:26:37,600 --> 00:26:39,039
and they're kind of piggybacking and

602
00:26:39,039 --> 00:26:40,320
building on top of each other and trying

603
00:26:40,320 --> 00:26:40,720
to

604
00:26:40,720 --> 00:26:42,080
optimize the problems that we had with

605
00:26:42,080 --> 00:26:43,919
the earlier one

606
00:26:43,919 --> 00:26:45,600
first one is with asymmetric keys the

607
00:26:45,600 --> 00:26:49,279
second one is with symmetric keys

608
00:26:49,279 --> 00:26:51,840
the third one is space optimized with

609
00:26:51,840 --> 00:26:53,200
symmetric keys

610
00:26:53,200 --> 00:26:56,320
the fourth one is

611
00:26:56,480 --> 00:26:59,520
using post quantum methods

612
00:26:59,520 --> 00:27:02,480
to go and make symmetric keyh management

613
00:27:02,480 --> 00:27:04,480
a little better and easier

614
00:27:04,480 --> 00:27:07,840
and the fifth one is not applicable to

615
00:27:07,840 --> 00:27:09,679
everything especially not applicable to

616
00:27:09,679 --> 00:27:12,240
trace but it could be low hanging fruit

617
00:27:12,240 --> 00:27:14,320
for just protecting

618
00:27:14,320 --> 00:27:18,320
um iom

619
00:27:18,320 --> 00:27:20,559
for those option types that carry

620
00:27:20,559 --> 00:27:22,159
immutable fields

621
00:27:22,159 --> 00:27:25,279
um where we're not really having any um

622
00:27:25,279 --> 00:27:27,840
intermediate node like a transit node uh

623
00:27:27,840 --> 00:27:28,799
fiddle around with

624
00:27:28,799 --> 00:27:32,000
the traffic at all ie e2e or

625
00:27:32,000 --> 00:27:34,000
direct export would be examples of that

626
00:27:34,000 --> 00:27:35,360
where we can leverage

627
00:27:35,360 --> 00:27:37,919
the ip authentication header so let's go

628
00:27:37,919 --> 00:27:39,039
and go through the

629
00:27:39,039 --> 00:27:42,159
the methods really quick um so method

630
00:27:42,159 --> 00:27:42,640
one

631
00:27:42,640 --> 00:27:46,240
is that each node

632
00:27:46,240 --> 00:27:49,520
creates a key here um shares the public

633
00:27:49,520 --> 00:27:51,360
key for the validator

634
00:27:51,360 --> 00:27:53,919
um and the network management controller

635
00:27:53,919 --> 00:27:54,399
and

636
00:27:54,399 --> 00:27:57,600
then what we're going to go do is we're

637
00:27:57,600 --> 00:28:00,480
going to go and create

638
00:28:00,480 --> 00:28:03,679
where we're adding a node sign field to

639
00:28:03,679 --> 00:28:05,840
every single hop

640
00:28:05,840 --> 00:28:09,840
that we're adding node data for and

641
00:28:09,840 --> 00:28:14,000
that node sign then includes a signature

642
00:28:14,000 --> 00:28:17,039
using the private key as well

643
00:28:17,039 --> 00:28:19,520
over a hash of the the node data of that

644
00:28:19,520 --> 00:28:20,799
particular element

645
00:28:20,799 --> 00:28:23,440
and the earlier signature so that we're

646
00:28:23,440 --> 00:28:25,919
linking signatures to each other

647
00:28:25,919 --> 00:28:28,320
um the starting node would start with

648
00:28:28,320 --> 00:28:30,080
some seed

649
00:28:30,080 --> 00:28:31,679
and the hash of the node data of the

650
00:28:31,679 --> 00:28:33,279
first node so that we're having some

651
00:28:33,279 --> 00:28:35,120
anchor point

652
00:28:35,120 --> 00:28:36,960
and the validator would need to go

653
00:28:36,960 --> 00:28:40,159
through the the procedure and kind of

654
00:28:40,159 --> 00:28:42,880
itself in order to validate that things

655
00:28:42,880 --> 00:28:44,240
are in order

656
00:28:44,240 --> 00:28:47,440
uh what this does is um depending on

657
00:28:47,440 --> 00:28:50,559
what we're using as uh

658
00:28:50,559 --> 00:28:53,360
as a method we're adding something like

659
00:28:53,360 --> 00:28:56,399
32 bytes per hop

660
00:28:56,399 --> 00:28:59,440
for that particular signature right um

661
00:28:59,440 --> 00:29:03,919
we can go and do the very same thing

662
00:29:04,159 --> 00:29:07,600
method two we flip to the next slide

663
00:29:07,600 --> 00:29:09,520
uh we could use a very similar method

664
00:29:09,520 --> 00:29:11,360
with symmetric keys

665
00:29:11,360 --> 00:29:14,480
just a different algorithm but the logic

666
00:29:14,480 --> 00:29:15,200
would be

667
00:29:15,200 --> 00:29:17,760
still the same involves that that

668
00:29:17,760 --> 00:29:20,320
somebody would go and distributes the

669
00:29:20,320 --> 00:29:23,279
uh the search the the the secrets the

670
00:29:23,279 --> 00:29:24,320
symmetric keys

671
00:29:24,320 --> 00:29:25,840
to the individual nodes and the

672
00:29:25,840 --> 00:29:27,760
validators up front

673
00:29:27,760 --> 00:29:29,679
if you do that on a per packet basis you

674
00:29:29,679 --> 00:29:31,039
need a key per

675
00:29:31,039 --> 00:29:34,640
per packet obviously and again similar

676
00:29:34,640 --> 00:29:36,240
here depending on the method that we're

677
00:29:36,240 --> 00:29:37,760
using and we have a couple of

678
00:29:37,760 --> 00:29:40,240
examples mentioned it's somewhere

679
00:29:40,240 --> 00:29:42,640
between 16 or 32 bytes

680
00:29:42,640 --> 00:29:45,120
per hop that we're adding all of this is

681
00:29:45,120 --> 00:29:46,799
quite heavy

682
00:29:46,799 --> 00:29:50,240
so if we go to method three um

683
00:29:50,240 --> 00:29:53,120
rather than having a signature on a per

684
00:29:53,120 --> 00:29:54,000
hop basis at

685
00:29:54,000 --> 00:29:58,080
it we can have the trace signature in

686
00:29:58,080 --> 00:30:00,799
the header of the iom option type and

687
00:30:00,799 --> 00:30:03,279
the example here is for the trace

688
00:30:03,279 --> 00:30:05,440
option type we would have a try

689
00:30:05,440 --> 00:30:06,799
signature there

690
00:30:06,799 --> 00:30:10,159
like 32 bytes would be added once and um

691
00:30:10,159 --> 00:30:11,760
all we would do then if we go to the

692
00:30:11,760 --> 00:30:14,880
next slide on a hot by hot basis

693
00:30:14,880 --> 00:30:18,159
is we are updating

694
00:30:18,159 --> 00:30:22,240
that particular trace signature um

695
00:30:22,240 --> 00:30:23,919
with the hash of no data list so that

696
00:30:23,919 --> 00:30:25,360
we're always adding on top of our

697
00:30:25,360 --> 00:30:27,120
piggybacking on top of the symmetric key

698
00:30:27,120 --> 00:30:28,880
and the validator would need to go and

699
00:30:28,880 --> 00:30:30,799
do the exact same operation on

700
00:30:30,799 --> 00:30:32,240
validation and see

701
00:30:32,240 --> 00:30:37,440
whether he would arrive at the very same

702
00:30:37,440 --> 00:30:40,640
signature key in there as it was

703
00:30:40,640 --> 00:30:43,679
was received so quite of of an

704
00:30:43,679 --> 00:30:45,520
operational

705
00:30:45,520 --> 00:30:46,799
coordination effort between the

706
00:30:46,799 --> 00:30:48,799
individual nodes

707
00:30:48,799 --> 00:30:51,919
and um it would be still required that

708
00:30:51,919 --> 00:30:53,919
we're sharing upfront on a per packet

709
00:30:53,919 --> 00:30:56,080
basis all the symmetric keys

710
00:30:56,080 --> 00:30:57,679
if we want to go and use a keeper packet

711
00:30:57,679 --> 00:30:58,960
i think which is something that we would

712
00:30:58,960 --> 00:31:00,080
recommend right

713
00:31:00,080 --> 00:31:02,000
um if you want to make that a little

714
00:31:02,000 --> 00:31:03,679
simpler we could use

715
00:31:03,679 --> 00:31:07,039
methods that uh the the guys there's

716
00:31:07,039 --> 00:31:08,880
other efforts in the itf as we all know

717
00:31:08,880 --> 00:31:09,760
if we go to

718
00:31:09,760 --> 00:31:12,640
the next slide with method four um we

719
00:31:12,640 --> 00:31:14,080
could use a method

720
00:31:14,080 --> 00:31:16,960
of loan from the the post quantum

721
00:31:16,960 --> 00:31:18,399
pre-shared

722
00:31:18,399 --> 00:31:20,880
key distribution post quantum user

723
00:31:20,880 --> 00:31:22,480
symmetric keys

724
00:31:22,480 --> 00:31:25,600
and their idea is to go and uh rather

725
00:31:25,600 --> 00:31:26,240
than

726
00:31:26,240 --> 00:31:28,880
share all the keys up front you come up

727
00:31:28,880 --> 00:31:32,559
with a local key generation service

728
00:31:32,559 --> 00:31:36,640
that would be able to go and create keys

729
00:31:36,640 --> 00:31:38,960
based on the same seed

730
00:31:38,960 --> 00:31:41,760
in two locations the same way so that

731
00:31:41,760 --> 00:31:43,200
based on

732
00:31:43,200 --> 00:31:45,519
a particular key and the key id you can

733
00:31:45,519 --> 00:31:47,600
go and re-retrieve exactly what kind of

734
00:31:47,600 --> 00:31:48,720
key you're having

735
00:31:48,720 --> 00:31:50,640
because the two machineries on both ends

736
00:31:50,640 --> 00:31:53,039
work exactly the same way

737
00:31:53,039 --> 00:31:55,279
so if you flip to the next slide it

738
00:31:55,279 --> 00:31:56,080
articulates at

739
00:31:56,080 --> 00:31:58,799
a high level so first thing is what you

740
00:31:58,799 --> 00:32:01,679
need to go and do is you need to go and

741
00:32:01,679 --> 00:32:04,799
exchange in a secure way the seed that

742
00:32:04,799 --> 00:32:06,640
both ends are gonna go use ie

743
00:32:06,640 --> 00:32:09,279
the validator and the individual node

744
00:32:09,279 --> 00:32:11,039
and once you've done that

745
00:32:11,039 --> 00:32:13,919
then these guys can go and use their

746
00:32:13,919 --> 00:32:16,320
local key generation machinery

747
00:32:16,320 --> 00:32:19,200
to go and create the keys locally that

748
00:32:19,200 --> 00:32:20,880
they want to go and use so that the the

749
00:32:20,880 --> 00:32:22,559
key distribution nightmare

750
00:32:22,559 --> 00:32:24,559
is a little bit reduced and all you what

751
00:32:24,559 --> 00:32:26,000
you need to go and then do is you need

752
00:32:26,000 --> 00:32:27,840
to go and carry the key id along with

753
00:32:27,840 --> 00:32:29,440
the packet

754
00:32:29,440 --> 00:32:31,200
so that you're using the right symmetric

755
00:32:31,200 --> 00:32:33,120
key

756
00:32:33,120 --> 00:32:34,799
that you're supposed to use for a

757
00:32:34,799 --> 00:32:37,600
particular packet

758
00:32:37,600 --> 00:32:40,640
so that's i think the way to go and at

759
00:32:40,640 --> 00:32:41,760
least

760
00:32:41,760 --> 00:32:43,919
make it operationally a little easier

761
00:32:43,919 --> 00:32:45,440
the fifth method

762
00:32:45,440 --> 00:32:47,279
and thanks tommy for already slipping

763
00:32:47,279 --> 00:32:49,840
flipping forward is is something that uh

764
00:32:49,840 --> 00:32:51,760
could be entirely attributed as an idea

765
00:32:51,760 --> 00:32:53,360
to uh greg mursky

766
00:32:53,360 --> 00:32:55,440
and the design team when we um when we

767
00:32:55,440 --> 00:32:57,679
are when we discussed um the integrity

768
00:32:57,679 --> 00:32:58,559
draft

769
00:32:58,559 --> 00:33:01,440
the the zero zero version he said why

770
00:33:01,440 --> 00:33:03,760
why don't we just use what we have

771
00:33:03,760 --> 00:33:05,840
and well we all appreciated that idea

772
00:33:05,840 --> 00:33:08,320
yes yeah we have the the um

773
00:33:08,320 --> 00:33:10,960
the ip authentication header and the

774
00:33:10,960 --> 00:33:12,399
authentication header we can go and

775
00:33:12,399 --> 00:33:14,159
basically tell like

776
00:33:14,159 --> 00:33:16,880
what method what types of or what range

777
00:33:16,880 --> 00:33:17,840
of the packet

778
00:33:17,840 --> 00:33:19,760
do you actually want to go and um see

779
00:33:19,760 --> 00:33:22,559
covered uh so that could obviously cover

780
00:33:22,559 --> 00:33:23,440
the

781
00:33:23,440 --> 00:33:28,080
the um the the dv6 options so we can go

782
00:33:28,080 --> 00:33:30,000
and include it and use it

783
00:33:30,000 --> 00:33:33,519
but we can obviously only use it if

784
00:33:33,519 --> 00:33:35,440
no notes in between want to go and

785
00:33:35,440 --> 00:33:37,120
change it between

786
00:33:37,120 --> 00:33:40,799
the well end points of uh the security

787
00:33:40,799 --> 00:33:41,360
authentic

788
00:33:41,360 --> 00:33:43,760
uh association so if we go to the next

789
00:33:43,760 --> 00:33:44,880
slide

790
00:33:44,880 --> 00:33:46,720
then there is a little bit of a quick

791
00:33:46,720 --> 00:33:49,360
overview

792
00:33:49,600 --> 00:33:52,320
that it applies to those option types in

793
00:33:52,320 --> 00:33:54,000
iom that are

794
00:33:54,000 --> 00:33:57,679
immutable on root um so e2e and direct

795
00:33:57,679 --> 00:33:58,720
export

796
00:33:58,720 --> 00:34:01,120
if we assume that indirect export like

797
00:34:01,120 --> 00:34:03,600
we make sure that the secrets are indeed

798
00:34:03,600 --> 00:34:04,880
distributed to all the individual

799
00:34:04,880 --> 00:34:06,799
transit notes that need to go and

800
00:34:06,799 --> 00:34:09,119
extract the information but the dex

801
00:34:09,119 --> 00:34:10,800
header itself itself doesn't really

802
00:34:10,800 --> 00:34:12,639
change so we can use it

803
00:34:12,639 --> 00:34:14,639
but for anything that would go and want

804
00:34:14,639 --> 00:34:16,320
to go and insert information

805
00:34:16,320 --> 00:34:19,520
in flight into the packet then well it

806
00:34:19,520 --> 00:34:21,280
obviously doesn't really apply because

807
00:34:21,280 --> 00:34:24,000
um unless we want to go and create

808
00:34:24,000 --> 00:34:25,760
tunnels with every single one

809
00:34:25,760 --> 00:34:27,918
on the planet uh which i don't think is

810
00:34:27,918 --> 00:34:29,040
really feasible

811
00:34:29,040 --> 00:34:32,399
um so it's like um only applicable to

812
00:34:32,399 --> 00:34:34,639
to um those option types that are

813
00:34:34,639 --> 00:34:36,399
immutable but it might be at least the

814
00:34:36,399 --> 00:34:38,480
starting point and maybe we arrive at

815
00:34:38,480 --> 00:34:41,520
at the conclusion that we

816
00:34:41,520 --> 00:34:43,280
we are good with just protecting that

817
00:34:43,280 --> 00:34:44,960
particular thing i think it all depends

818
00:34:44,960 --> 00:34:46,239
on the use cases that people have in

819
00:34:46,239 --> 00:34:46,800
mind

820
00:34:46,800 --> 00:34:49,520
from a priority perspective so if we go

821
00:34:49,520 --> 00:34:50,239
to the

822
00:34:50,239 --> 00:34:52,239
the last slide i think that's the final

823
00:34:52,239 --> 00:34:53,359
one

824
00:34:53,359 --> 00:34:56,719
um it's really like along the lines of

825
00:34:56,719 --> 00:34:58,240
what i just said i think we need to go

826
00:34:58,240 --> 00:35:00,400
and understand what what concerns people

827
00:35:00,400 --> 00:35:01,440
have

828
00:35:01,440 --> 00:35:03,359
what do we want to go and protect to

829
00:35:03,359 --> 00:35:05,200
what level do we want to go and protect

830
00:35:05,200 --> 00:35:05,760
it

831
00:35:05,760 --> 00:35:07,520
uh what burden do we want to go and take

832
00:35:07,520 --> 00:35:09,760
on and does it really need to go and

833
00:35:09,760 --> 00:35:10,160
cover

834
00:35:10,160 --> 00:35:12,320
all option types is it okay to go and

835
00:35:12,320 --> 00:35:14,480
maybe just carry a subsection

836
00:35:14,480 --> 00:35:18,000
of a subset of the option types um

837
00:35:18,000 --> 00:35:20,079
and um i'm also interested in seeing

838
00:35:20,079 --> 00:35:21,520
whether we can go and get more help on

839
00:35:21,520 --> 00:35:23,920
this this overall thing because it's

840
00:35:23,920 --> 00:35:27,440
this is by no means trivial thank you

841
00:35:27,440 --> 00:35:30,000
thank you all right we have martin in

842
00:35:30,000 --> 00:35:32,240
king

843
00:35:34,800 --> 00:35:38,240
i find thanks for for writing this draft

844
00:35:38,240 --> 00:35:41,040
on short notice it's very thoroughly

845
00:35:41,040 --> 00:35:41,760
thought through

846
00:35:41,760 --> 00:35:45,119
i was wondering why you didn't um have a

847
00:35:45,119 --> 00:35:45,920
variant of

848
00:35:45,920 --> 00:35:49,440
option three that used asymmetric keys

849
00:35:49,440 --> 00:35:52,240
um i mean it's obviously part of the

850
00:35:52,240 --> 00:35:53,599
truth table although it's one of the

851
00:35:53,599 --> 00:35:54,960
permutations of all the sort of

852
00:35:54,960 --> 00:35:56,400
variables you have was there some reason

853
00:35:56,400 --> 00:35:58,320
you ruled that out or

854
00:35:58,320 --> 00:36:01,040
or what

855
00:36:02,400 --> 00:36:04,640
i think i didn't really fully catch you

856
00:36:04,640 --> 00:36:07,119
um so you wanted a variant of

857
00:36:07,119 --> 00:36:10,000
which option sorry so option so you have

858
00:36:10,000 --> 00:36:10,800
you have the

859
00:36:10,800 --> 00:36:14,640
um you know one signature per hop

860
00:36:14,640 --> 00:36:16,000
version and there's an asymmetric

861
00:36:16,000 --> 00:36:17,680
version of symmetric version

862
00:36:17,680 --> 00:36:20,560
but when you have a single signature for

863
00:36:20,560 --> 00:36:22,079
the entire path

864
00:36:22,079 --> 00:36:24,240
you know cumulative signature you only

865
00:36:24,240 --> 00:36:25,280
have a

866
00:36:25,280 --> 00:36:28,160
a symmetric keying option and and i

867
00:36:28,160 --> 00:36:29,680
wondered if that was just an oversight

868
00:36:29,680 --> 00:36:31,359
or there was some consciousness behind

869
00:36:31,359 --> 00:36:32,079
that

870
00:36:32,079 --> 00:36:34,560
no we can add that as another method if

871
00:36:34,560 --> 00:36:36,640
you want to

872
00:36:36,640 --> 00:36:37,760
do you believe we should go and add um

873
00:36:37,760 --> 00:36:40,480
that i

874
00:36:40,480 --> 00:36:43,440
honestly haven't um i don't have a real

875
00:36:43,440 --> 00:36:44,720
strong opinion about

876
00:36:44,720 --> 00:36:47,520
which way we should go uh well let me

877
00:36:47,520 --> 00:36:48,800
rephrase that so i

878
00:36:48,800 --> 00:36:52,000
i do not see any advantages to having

879
00:36:52,000 --> 00:36:53,359
all the additional overhead of one

880
00:36:53,359 --> 00:36:55,119
signature per hop

881
00:36:55,119 --> 00:36:58,480
um which is i mean maybe there's some

882
00:36:58,480 --> 00:36:59,119
that that

883
00:36:59,119 --> 00:37:01,680
i don't see and and my following

884
00:37:01,680 --> 00:37:03,200
question is gonna be can you articulate

885
00:37:03,200 --> 00:37:03,680
like

886
00:37:03,680 --> 00:37:05,440
actually should the draft discuss more

887
00:37:05,440 --> 00:37:06,800
pros and cons or they're just a matter

888
00:37:06,800 --> 00:37:08,079
of overhead

889
00:37:08,079 --> 00:37:11,520
um and uh but like if

890
00:37:11,520 --> 00:37:13,040
if my instincts are correct and there's

891
00:37:13,040 --> 00:37:15,200
no point in having a

892
00:37:15,200 --> 00:37:17,520
one signature per hop thing then i would

893
00:37:17,520 --> 00:37:18,960
like to have the asymmetric symmetric

894
00:37:18,960 --> 00:37:19,839
discussion

895
00:37:19,839 --> 00:37:22,640
i'd like to eliminate those options and

896
00:37:22,640 --> 00:37:24,160
and have the symmetric asymmetric

897
00:37:24,160 --> 00:37:25,839
discussion second

898
00:37:25,839 --> 00:37:27,920
uh in the context of the single

899
00:37:27,920 --> 00:37:30,480
signature

900
00:37:30,720 --> 00:37:33,040
yeah so i think definitely we can all

901
00:37:33,040 --> 00:37:34,640
add that option

902
00:37:34,640 --> 00:37:37,359
and um i would also agree that more of a

903
00:37:37,359 --> 00:37:39,200
discussion of the various approaches

904
00:37:39,200 --> 00:37:42,160
and also how well they apply to the the

905
00:37:42,160 --> 00:37:44,160
set of requirements that we we laid out

906
00:37:44,160 --> 00:37:45,440
at the very beginning

907
00:37:45,440 --> 00:37:48,480
um i think all of this could be done um

908
00:37:48,480 --> 00:37:50,720
but um to your earlier point it's been

909
00:37:50,720 --> 00:37:53,200
put together relatively quickly

910
00:37:53,200 --> 00:37:55,839
um based on your request and tommy's

911
00:37:55,839 --> 00:37:56,480
request

912
00:37:56,480 --> 00:37:58,240
so that we at least have something to go

913
00:37:58,240 --> 00:38:01,839
and start a discussion with

914
00:38:01,839 --> 00:38:06,160
so more wic yes needs to happen

915
00:38:11,920 --> 00:38:14,240
all right

916
00:38:15,280 --> 00:38:18,320
yeah so the concern i have that

917
00:38:18,320 --> 00:38:21,680
this proposal will introduce um more

918
00:38:21,680 --> 00:38:24,960
overhead to the iom message already uh

919
00:38:24,960 --> 00:38:28,000
very large and also we all know that

920
00:38:28,000 --> 00:38:30,960
this kind of security protection is a

921
00:38:30,960 --> 00:38:33,119
computer intensive then

922
00:38:33,119 --> 00:38:36,480
it will add a lot more processing

923
00:38:36,480 --> 00:38:40,880
um requirement to the fastpass so

924
00:38:40,880 --> 00:38:44,400
um so in my opinion why not just

925
00:38:44,400 --> 00:38:47,760
you know if if uh there's no such

926
00:38:47,760 --> 00:38:49,440
requirement you use this uh

927
00:38:49,440 --> 00:38:52,640
iom um trees option um

928
00:38:52,640 --> 00:38:56,240
but on the other hand uh in case we do

929
00:38:56,240 --> 00:38:56,560
need

930
00:38:56,560 --> 00:38:59,359
some protections we'll find the uh

931
00:38:59,359 --> 00:39:00,640
direct export

932
00:39:00,640 --> 00:39:03,920
mode or the uh hybrid uh to

933
00:39:03,920 --> 00:39:07,920
uh to uh to pass uh

934
00:39:07,920 --> 00:39:11,200
method both are immune to this this kind

935
00:39:11,200 --> 00:39:12,400
of attack because

936
00:39:12,400 --> 00:39:15,520
they will send the data independently

937
00:39:15,520 --> 00:39:18,320
and which can afford the slow pass

938
00:39:18,320 --> 00:39:19,839
processing

939
00:39:19,839 --> 00:39:22,480
so in that case it's easy to apply this

940
00:39:22,480 --> 00:39:29,839
kind of protection

941
00:39:34,240 --> 00:39:36,959
okay thank you

942
00:39:37,920 --> 00:39:40,839
any other comments people's thoughts on

943
00:39:40,839 --> 00:39:42,000
which

944
00:39:42,000 --> 00:39:45,040
directions they prefer

945
00:39:52,640 --> 00:39:54,160
sorry i'll just jump there's no cues

946
00:39:54,160 --> 00:39:56,079
i'll just save time

947
00:39:56,079 --> 00:40:00,240
uh so i'm sorry in my in my giant um

948
00:40:00,240 --> 00:40:02,320
cloud of comments and questions uh

949
00:40:02,320 --> 00:40:03,760
there's actually something i would like

950
00:40:03,760 --> 00:40:04,079
to

951
00:40:04,079 --> 00:40:06,079
get your opinion on so do you see any

952
00:40:06,079 --> 00:40:08,079
advantages in the

953
00:40:08,079 --> 00:40:12,240
per hop um uh signature

954
00:40:12,240 --> 00:40:14,160
like the options one and two and with

955
00:40:14,160 --> 00:40:15,599
the additional i mean obviously the

956
00:40:15,599 --> 00:40:16,800
overhead cost is a

957
00:40:16,800 --> 00:40:18,640
drawback is there some reason that you

958
00:40:18,640 --> 00:40:22,839
would advocate that we keep those in

959
00:40:22,839 --> 00:40:25,839
play

960
00:40:33,119 --> 00:40:36,560
if that's frank not from me no

961
00:40:36,560 --> 00:40:38,240
i think we put this together in an

962
00:40:38,240 --> 00:40:40,640
iterative way as you see right

963
00:40:40,640 --> 00:40:44,319
um where we try to go and say well

964
00:40:44,319 --> 00:40:46,960
first one really rough then a little bit

965
00:40:46,960 --> 00:40:49,119
more optimized

966
00:40:49,119 --> 00:40:52,400
further optimized so i i personally

967
00:40:52,400 --> 00:40:53,599
don't see one but maybe

968
00:40:53,599 --> 00:40:56,079
somebody else sees one i don't know so

969
00:40:56,079 --> 00:40:57,440
we just wanted to go and put everything

970
00:40:57,440 --> 00:40:59,040
on the table

971
00:40:59,040 --> 00:41:02,880
makes sense um so

972
00:41:02,880 --> 00:41:06,400
just jumping in

973
00:41:06,400 --> 00:41:10,160
cue myself um looking through these

974
00:41:10,160 --> 00:41:13,359
yeah it seems that one and two they're

975
00:41:13,359 --> 00:41:13,920
not

976
00:41:13,920 --> 00:41:17,280
practical given the overhead

977
00:41:17,359 --> 00:41:21,839
i i have some concerns about

978
00:41:22,079 --> 00:41:26,000
uh four given just kind of the

979
00:41:26,000 --> 00:41:30,079
uh it has a higher level of

980
00:41:30,079 --> 00:41:34,000
cryptographic complexity going on um

981
00:41:34,000 --> 00:41:36,240
you just kind of it seems like it raises

982
00:41:36,240 --> 00:41:39,040
the bar for

983
00:41:40,079 --> 00:41:43,119
the work and would be using

984
00:41:45,920 --> 00:41:49,200
things that would need a lot more review

985
00:41:49,200 --> 00:41:52,400
to push out there and

986
00:41:52,400 --> 00:41:57,280
using ipsec ah

987
00:41:57,839 --> 00:41:59,599
i i think does have some significant

988
00:41:59,599 --> 00:42:01,839
drawbacks that you bring up

989
00:42:01,839 --> 00:42:04,800
already of not being able to be

990
00:42:04,800 --> 00:42:06,480
applicable to everything

991
00:42:06,480 --> 00:42:11,040
um i wonder to what degree

992
00:42:11,040 --> 00:42:14,079
can we use

993
00:42:15,920 --> 00:42:18,079
essentially try to riff off of option

994
00:42:18,079 --> 00:42:21,839
three and kind of learn things from

995
00:42:21,839 --> 00:42:25,599
ah um consider a variant that

996
00:42:25,599 --> 00:42:29,200
is um asymmetric key

997
00:42:29,200 --> 00:42:31,599
it seems like the main issue with option

998
00:42:31,599 --> 00:42:32,800
three

999
00:42:32,800 --> 00:42:34,560
was just that you wanted to have a

1000
00:42:34,560 --> 00:42:35,920
unique

1001
00:42:35,920 --> 00:42:39,280
a new key per packet going through um

1002
00:42:39,280 --> 00:42:45,119
what's the primary reason there

1003
00:42:45,119 --> 00:42:46,720
well if you want to go and protect on a

1004
00:42:46,720 --> 00:42:48,800
per packet basis you need to protect on

1005
00:42:48,800 --> 00:42:52,079
the per packet basis right

1006
00:42:53,280 --> 00:42:56,480
we can go and relax where

1007
00:42:56,480 --> 00:42:57,839
i guess maybe i missed in your

1008
00:42:57,839 --> 00:42:59,599
assumptions where do we need the

1009
00:42:59,599 --> 00:43:01,839
per

1010
00:43:03,440 --> 00:43:06,560
a separate separate validator per packet

1011
00:43:06,560 --> 00:43:08,240
as opposed to having

1012
00:43:08,240 --> 00:43:10,480
the ability for one validator to

1013
00:43:10,480 --> 00:43:13,839
validate all packets on the path

1014
00:43:14,880 --> 00:43:17,359
yeah so i we can relax that as i said

1015
00:43:17,359 --> 00:43:18,560
right so if we are

1016
00:43:18,560 --> 00:43:21,760
if this is less of a concern uh we can

1017
00:43:21,760 --> 00:43:23,839
say what we're using the same key for a

1018
00:43:23,839 --> 00:43:26,560
period of time

1019
00:43:26,560 --> 00:43:30,079
instead of or a set of packets instead

1020
00:43:30,079 --> 00:43:31,839
of on a per packet basis

1021
00:43:31,839 --> 00:43:34,079
so that we are removing a little bit of

1022
00:43:34,079 --> 00:43:35,920
the nightmare to go and

1023
00:43:35,920 --> 00:43:39,359
distribute well millions of keys yeah

1024
00:43:39,359 --> 00:43:39,920
that doesn't

1025
00:43:39,920 --> 00:43:42,880
yeah that's practical to distribute yeah

1026
00:43:42,880 --> 00:43:44,560
but i think this is goodness but because

1027
00:43:44,560 --> 00:43:46,240
i think what we try to go and do is

1028
00:43:46,240 --> 00:43:48,319
we're trying to go and get some sense of

1029
00:43:48,319 --> 00:43:49,440
direction here

1030
00:43:49,440 --> 00:43:50,960
and then that's exactly i think the

1031
00:43:50,960 --> 00:43:52,480
discussion that we were hoping for that

1032
00:43:52,480 --> 00:43:54,000
people say well yeah well

1033
00:43:54,000 --> 00:43:55,520
look more into this one and we're happy

1034
00:43:55,520 --> 00:43:57,280
to go and uh

1035
00:43:57,280 --> 00:43:58,800
relax some of our thinking and saying

1036
00:43:58,800 --> 00:44:00,480
well we don't need to be that stringent

1037
00:44:00,480 --> 00:44:02,560
that we want to go and

1038
00:44:02,560 --> 00:44:05,760
verify that every single packet is

1039
00:44:05,760 --> 00:44:07,599
treated by itself but we're

1040
00:44:07,599 --> 00:44:11,119
grouping things up and to uh maybe

1041
00:44:11,119 --> 00:44:12,880
do it for a thousand packets or a

1042
00:44:12,880 --> 00:44:14,720
hundred thousand packets or

1043
00:44:14,720 --> 00:44:17,119
re-key every ten minutes or whatever and

1044
00:44:17,119 --> 00:44:18,560
then right and

1045
00:44:18,560 --> 00:44:21,440
work accordingly right so i guess my

1046
00:44:21,440 --> 00:44:23,040
suggestion would be let's go off of

1047
00:44:23,040 --> 00:44:24,400
option three

1048
00:44:24,400 --> 00:44:25,680
you know thinking of the fact that we're

1049
00:44:25,680 --> 00:44:28,000
bringing ah into this

1050
00:44:28,000 --> 00:44:31,119
when you're doing ipsec esp or ah

1051
00:44:31,119 --> 00:44:33,280
essays you have a symmetric key that

1052
00:44:33,280 --> 00:44:34,960
you've negotiated that you use for a set

1053
00:44:34,960 --> 00:44:36,160
of packets

1054
00:44:36,160 --> 00:44:37,680
and then you re-key after a period of

1055
00:44:37,680 --> 00:44:39,520
time so even if we're not

1056
00:44:39,520 --> 00:44:42,720
technically using ah if that wasn't good

1057
00:44:42,720 --> 00:44:43,920
enough for that solution

1058
00:44:43,920 --> 00:44:45,920
why not kind of use that cadence of

1059
00:44:45,920 --> 00:44:47,680
keying

1060
00:44:47,680 --> 00:44:49,359
all right um greg is in the queue as

1061
00:44:49,359 --> 00:44:51,359
well

1062
00:44:51,359 --> 00:44:54,319
speak up actually um it's very good

1063
00:44:54,319 --> 00:44:55,280
point about

1064
00:44:55,280 --> 00:44:58,560
uh their computational impact and

1065
00:44:58,560 --> 00:45:01,200
uh that reminds me of what we have found

1066
00:45:01,200 --> 00:45:01,599
in

1067
00:45:01,599 --> 00:45:05,680
uh dfd which

1068
00:45:05,680 --> 00:45:08,240
support authentication mode but in a

1069
00:45:08,240 --> 00:45:09,599
location mode then

1070
00:45:09,599 --> 00:45:12,480
each and every packet is authenticated

1071
00:45:12,480 --> 00:45:12,880
so

1072
00:45:12,880 --> 00:45:17,359
what we discovered is that

1073
00:45:17,359 --> 00:45:19,920
it's very challenging especially in a

1074
00:45:19,920 --> 00:45:21,440
high rate

1075
00:45:21,440 --> 00:45:25,680
um monitoring like um

1076
00:45:25,680 --> 00:45:29,520
sub 100 milliseconds uh interval

1077
00:45:29,520 --> 00:45:32,640
and uh what's uh more efficient is to

1078
00:45:32,640 --> 00:45:33,119
have an

1079
00:45:33,119 --> 00:45:36,160
optional authentication which

1080
00:45:36,160 --> 00:45:39,359
uh can be requested so uh

1081
00:45:39,359 --> 00:45:42,000
the rate of the authentication would be

1082
00:45:42,000 --> 00:45:43,760
operator choice

1083
00:45:43,760 --> 00:45:47,359
but being able to

1084
00:45:47,359 --> 00:45:51,280
indicate that uh in this particular

1085
00:45:51,280 --> 00:45:52,160
transaction

1086
00:45:52,160 --> 00:45:55,200
in this particular packet that uh

1087
00:45:55,200 --> 00:45:58,640
iem data has to be authenticated

1088
00:45:58,640 --> 00:46:01,440
or encrypted i think that might be a

1089
00:46:01,440 --> 00:46:01,920
good

1090
00:46:01,920 --> 00:46:04,480
direction

1091
00:46:05,200 --> 00:46:06,640
yeah that sounds like a useful knob to

1092
00:46:06,640 --> 00:46:08,240
have i i do think

1093
00:46:08,240 --> 00:46:10,640
there seems to be you know a couple

1094
00:46:10,640 --> 00:46:12,560
different dimensions here though

1095
00:46:12,560 --> 00:46:15,599
there's is every

1096
00:46:15,599 --> 00:46:17,839
does every packet have an integrity

1097
00:46:17,839 --> 00:46:19,599
signature on it

1098
00:46:19,599 --> 00:46:24,000
and then separately are you using

1099
00:46:24,000 --> 00:46:27,680
are you reusing keys for

1100
00:46:27,680 --> 00:46:29,440
that domain for a period of time or does

1101
00:46:29,440 --> 00:46:32,319
each packet that's integrity protected

1102
00:46:32,319 --> 00:46:35,760
also need a separate key which

1103
00:46:35,760 --> 00:46:38,880
that seems like a undo burden

1104
00:46:38,880 --> 00:46:42,079
even if we decided to

1105
00:46:42,800 --> 00:46:46,160
protect every single packet

1106
00:46:51,520 --> 00:46:56,560
so frank do you have useful things

1107
00:46:56,560 --> 00:46:58,960
to kind of take another step through

1108
00:46:58,960 --> 00:47:00,160
this

1109
00:47:00,160 --> 00:47:02,000
i mean we'll need more list discussion

1110
00:47:02,000 --> 00:47:04,240
i'm sure but um

1111
00:47:04,240 --> 00:47:06,720
yeah so should we already narrow down to

1112
00:47:06,720 --> 00:47:07,520
just

1113
00:47:07,520 --> 00:47:09,760
method three as for what you're

1114
00:47:09,760 --> 00:47:11,440
suggesting or do you want to go and keep

1115
00:47:11,440 --> 00:47:12,800
that and

1116
00:47:12,800 --> 00:47:16,400
we will just go and remove the

1117
00:47:17,680 --> 00:47:21,119
per up overhead thing from one end and

1118
00:47:21,119 --> 00:47:23,920
then expand a little bit on yeah go and

1119
00:47:23,920 --> 00:47:25,920
play around with how how often we would

1120
00:47:25,920 --> 00:47:27,359
re-key

1121
00:47:27,359 --> 00:47:30,240
um and then at also a method like what

1122
00:47:30,240 --> 00:47:32,880
what greg was saying one out of n

1123
00:47:32,880 --> 00:47:36,000
um yeah and whatever um so that we

1124
00:47:36,000 --> 00:47:38,400
i think that's all kind of dovetails

1125
00:47:38,400 --> 00:47:40,640
with what what martin was saying as well

1126
00:47:40,640 --> 00:47:42,800
yes um that uh we want to have more

1127
00:47:42,800 --> 00:47:44,400
discussion on

1128
00:47:44,400 --> 00:47:47,440
the trade-offs of the various things um

1129
00:47:47,440 --> 00:47:49,280
so should we already narrow things down

1130
00:47:49,280 --> 00:47:49,920
or

1131
00:47:49,920 --> 00:47:53,280
do we repeat it for now or let's have

1132
00:47:53,280 --> 00:47:54,800
this next

1133
00:47:54,800 --> 00:47:57,680
step kind of look at these flavors of

1134
00:47:57,680 --> 00:47:59,119
option three so like

1135
00:47:59,119 --> 00:48:00,960
you know so there's option three as you

1136
00:48:00,960 --> 00:48:02,480
presented it there's what martin

1137
00:48:02,480 --> 00:48:04,079
suggested of can we do

1138
00:48:04,079 --> 00:48:06,240
asymmetric keys on three and what are

1139
00:48:06,240 --> 00:48:08,559
the trade-offs there

1140
00:48:08,559 --> 00:48:10,079
you can have kind of what i was saying

1141
00:48:10,079 --> 00:48:11,680
of

1142
00:48:11,680 --> 00:48:14,480
you know can we reuse keys for a longer

1143
00:48:14,480 --> 00:48:16,480
period of time and then re-key

1144
00:48:16,480 --> 00:48:18,800
more like what ipsec does and then also

1145
00:48:18,800 --> 00:48:20,000
bring in what grego is saying

1146
00:48:20,000 --> 00:48:23,440
of you know is there a marking that

1147
00:48:23,440 --> 00:48:26,000
indicates whether or not we require a

1148
00:48:26,000 --> 00:48:34,960
signature on a given packet

1149
00:48:34,960 --> 00:48:37,040
yeah can be done is there anybody who's

1150
00:48:37,040 --> 00:48:38,400
interested in

1151
00:48:38,400 --> 00:48:40,400
helping with this if somebody is

1152
00:48:40,400 --> 00:48:43,920
interested go and shoot me an email

1153
00:48:45,200 --> 00:48:48,720
sounds good thank you

1154
00:48:48,720 --> 00:48:51,119
all right i think we should move on to

1155
00:48:51,119 --> 00:48:53,920
our next topic

1156
00:48:56,800 --> 00:48:58,559
yes and martin commented that we should

1157
00:48:58,559 --> 00:49:00,160
probably have

1158
00:49:00,160 --> 00:49:01,760
the protocol should be a standard

1159
00:49:01,760 --> 00:49:02,880
although the current draft is

1160
00:49:02,880 --> 00:49:03,599
informational

1161
00:49:03,599 --> 00:49:05,040
and i think that's appropriate for its

1162
00:49:05,040 --> 00:49:07,119
exploratory nature yeah

1163
00:49:07,119 --> 00:49:10,559
alrighty so next

1164
00:49:10,559 --> 00:49:11,920
um we want to talk about loopback and

1165
00:49:11,920 --> 00:49:13,599
direct export and

1166
00:49:13,599 --> 00:49:15,760
actually i'd like first martin to

1167
00:49:15,760 --> 00:49:17,280
quickly run through

1168
00:49:17,280 --> 00:49:20,400
some of the concerns he had

1169
00:49:20,400 --> 00:49:22,000
he had made some slides for this and

1170
00:49:22,000 --> 00:49:24,880
then we'll have a discussion that tall

1171
00:49:24,880 --> 00:49:25,839
can lead about

1172
00:49:25,839 --> 00:49:29,200
so we'll probably need to present the uh

1173
00:49:29,200 --> 00:49:31,520
the draft slides on the next session

1174
00:49:31,520 --> 00:49:32,240
right

1175
00:49:32,240 --> 00:49:35,280
yeah we we can let

1176
00:49:35,280 --> 00:49:37,280
the conversation bleed over as necessary

1177
00:49:37,280 --> 00:49:38,400
yeah okay

1178
00:49:38,400 --> 00:49:41,839
sure yeah i mean i would i would hope to

1179
00:49:41,839 --> 00:49:43,200
have a little discussion about what i'm

1180
00:49:43,200 --> 00:49:44,640
presenting here and so we'll see how

1181
00:49:44,640 --> 00:49:45,359
that goes

1182
00:49:45,359 --> 00:49:49,040
um all right so uh just to

1183
00:49:49,040 --> 00:49:51,760
remind people um so the and by the way

1184
00:49:51,760 --> 00:49:53,760
uh obviously i'm an expert on these so

1185
00:49:53,760 --> 00:49:55,040
please like raise your hand if i'm

1186
00:49:55,040 --> 00:49:56,880
telling you lies here about what

1187
00:49:56,880 --> 00:49:59,839
happens here but but um loopback uh

1188
00:49:59,839 --> 00:50:00,640
essentially

1189
00:50:00,640 --> 00:50:02,559
you know as with another iom flow the

1190
00:50:02,559 --> 00:50:03,920
traffic user traffic goes from

1191
00:50:03,920 --> 00:50:05,920
encapsulated decapsulating node and

1192
00:50:05,920 --> 00:50:08,480
loopback each one of those transit nodes

1193
00:50:08,480 --> 00:50:09,119
sends

1194
00:50:09,119 --> 00:50:11,440
its telemetry back to the encapsulating

1195
00:50:11,440 --> 00:50:12,319
node uh

1196
00:50:12,319 --> 00:50:14,559
in the pa in the reverse path and then

1197
00:50:14,559 --> 00:50:16,000
dax is the same idea but instead of

1198
00:50:16,000 --> 00:50:17,760
going in capturing mode it goes some

1199
00:50:17,760 --> 00:50:20,800
you know some some other storage

1200
00:50:20,800 --> 00:50:24,079
uh uh facility that's arbitrarily

1201
00:50:24,079 --> 00:50:28,400
located somewhere else next slide

1202
00:50:28,880 --> 00:50:32,000
so ever since i started showing up to to

1203
00:50:32,000 --> 00:50:34,079
ippm like there's been some grumbling

1204
00:50:34,079 --> 00:50:35,920
about this i know that brian back with

1205
00:50:35,920 --> 00:50:37,119
his chair

1206
00:50:37,119 --> 00:50:38,640
miranda back when she was 80 and i think

1207
00:50:38,640 --> 00:50:40,000
they're both at map rg right now

1208
00:50:40,000 --> 00:50:41,760
unfortunately but um

1209
00:50:41,760 --> 00:50:44,000
there's been a general concern that when

1210
00:50:44,000 --> 00:50:44,800
you have one

1211
00:50:44,800 --> 00:50:47,680
traffic bracket that you get n control

1212
00:50:47,680 --> 00:50:50,400
packets as a result and you know

1213
00:50:50,400 --> 00:50:52,079
elsewhere in itf we spend a lot of time

1214
00:50:52,079 --> 00:50:53,920
worrying about amplification where uh

1215
00:50:53,920 --> 00:50:55,680
you know one packet leads to

1216
00:50:55,680 --> 00:50:58,160
gobs of packets and there's been some

1217
00:50:58,160 --> 00:50:59,280
and there have been some

1218
00:50:59,280 --> 00:51:02,800
things that we've added to um

1219
00:51:02,800 --> 00:51:04,720
uh security conservative kind of the

1220
00:51:04,720 --> 00:51:06,480
drill we do here at itf is like somebody

1221
00:51:06,480 --> 00:51:08,079
raises concern we add some text to

1222
00:51:08,079 --> 00:51:09,760
security considerations and we check it

1223
00:51:09,760 --> 00:51:10,960
we move on

1224
00:51:10,960 --> 00:51:13,520
next slide

1225
00:51:16,880 --> 00:51:19,359
there we go okay so i i i was thinking

1226
00:51:19,359 --> 00:51:20,720
about this and i sent some of the list a

1227
00:51:20,720 --> 00:51:21,520
few months ago

1228
00:51:21,520 --> 00:51:24,000
and and like the one to end situation is

1229
00:51:24,000 --> 00:51:24,960
not great but

1230
00:51:24,960 --> 00:51:27,680
in fact there are fairly opaque uh

1231
00:51:27,680 --> 00:51:29,359
coordinate cases that are much worse

1232
00:51:29,359 --> 00:51:30,640
the worst one is deck so i'm going to

1233
00:51:30,640 --> 00:51:33,119
cut straight the punch line here so um

1234
00:51:33,119 --> 00:51:35,040
i am running a domain that has that's

1235
00:51:35,040 --> 00:51:36,720
and hops across

1236
00:51:36,720 --> 00:51:39,680
uh and i use dex to export that data to

1237
00:51:39,680 --> 00:51:42,079
my cloud provider next

1238
00:51:42,079 --> 00:51:46,000
slide um and that happens to be through

1239
00:51:46,000 --> 00:51:47,680
tommy's domain to get to that cloud

1240
00:51:47,680 --> 00:51:49,920
provider and unbeknownst to me uh

1241
00:51:49,920 --> 00:51:53,839
tommy's also running dex next slide

1242
00:51:54,160 --> 00:51:55,680
and he's exporting to a different cloud

1243
00:51:55,680 --> 00:51:57,520
provider that happens to be

1244
00:51:57,520 --> 00:51:59,839
uh reachable from my domain this is a

1245
00:51:59,839 --> 00:52:00,880
completely arbitrary you know as a

1246
00:52:00,880 --> 00:52:02,000
customer i'm picking whatever cloud

1247
00:52:02,000 --> 00:52:03,359
provider i want

1248
00:52:03,359 --> 00:52:05,760
and so there are end met so each user

1249
00:52:05,760 --> 00:52:06,480
packet

1250
00:52:06,480 --> 00:52:08,160
in my domain generating in control

1251
00:52:08,160 --> 00:52:09,680
packets which in turn generates

1252
00:52:09,680 --> 00:52:11,520
end times and control packets from

1253
00:52:11,520 --> 00:52:12,720
tommy's domain

1254
00:52:12,720 --> 00:52:15,230
and next slide and this um

1255
00:52:15,230 --> 00:52:17,520
[Music]

1256
00:52:17,520 --> 00:52:20,160
keeps keep clicking until you see more

1257
00:52:20,160 --> 00:52:21,520
and it's not a factor it's just an

1258
00:52:21,520 --> 00:52:23,359
exclamation point um

1259
00:52:23,359 --> 00:52:25,520
but it keeps like this keeps going so a

1260
00:52:25,520 --> 00:52:26,720
single packet creates an

1261
00:52:26,720 --> 00:52:29,520
infinite ping pong of exponentially

1262
00:52:29,520 --> 00:52:30,559
increasing flights

1263
00:52:30,559 --> 00:52:33,200
or control packets this is obviously

1264
00:52:33,200 --> 00:52:34,880
completely unsatisfactory

1265
00:52:34,880 --> 00:52:38,319
next slide um uh okay and then for

1266
00:52:38,319 --> 00:52:39,280
loopback it's

1267
00:52:39,280 --> 00:52:42,720
it's not as bad um because there's some

1268
00:52:42,720 --> 00:52:44,400
limitations on

1269
00:52:44,400 --> 00:52:47,040
on because essentially so so the problem

1270
00:52:47,040 --> 00:52:48,720
here which is not as severe

1271
00:52:48,720 --> 00:52:50,960
is that if as if there is a loopback

1272
00:52:50,960 --> 00:52:52,160
going on

1273
00:52:52,160 --> 00:52:54,000
so you're tunneled over some other

1274
00:52:54,000 --> 00:52:56,000
network and the underlay network also

1275
00:52:56,000 --> 00:52:57,599
was running loopback

1276
00:52:57,599 --> 00:53:00,720
then there is some um

1277
00:53:00,720 --> 00:53:03,920
like there's some that that

1278
00:53:03,920 --> 00:53:06,160
you not only have n n packets being each

1279
00:53:06,160 --> 00:53:08,079
of the n packets

1280
00:53:08,079 --> 00:53:09,920
up to n of the packets that i am

1281
00:53:09,920 --> 00:53:11,599
generating in my domain

1282
00:53:11,599 --> 00:53:15,760
generates uh m times n control packets

1283
00:53:15,760 --> 00:53:18,160
uh in the in the underlay uh and you

1284
00:53:18,160 --> 00:53:19,200
know you could do turtles all the way

1285
00:53:19,200 --> 00:53:20,640
down after some sort of limit if you

1286
00:53:20,640 --> 00:53:22,079
have two tunnels on top of the tunnel

1287
00:53:22,079 --> 00:53:23,680
tunnels this could be some sort of like

1288
00:53:23,680 --> 00:53:25,440
a high degree polynomial

1289
00:53:25,440 --> 00:53:27,680
but but in prac but you know in practice

1290
00:53:27,680 --> 00:53:28,960
you're talking about probably an order

1291
00:53:28,960 --> 00:53:30,400
of n squared sort of

1292
00:53:30,400 --> 00:53:33,520
thing in a in a typical very bad case

1293
00:53:33,520 --> 00:53:36,000
um so again not as severe because of

1294
00:53:36,000 --> 00:53:37,280
some of the restrictions on where these

1295
00:53:37,280 --> 00:53:37,760
packets

1296
00:53:37,760 --> 00:53:39,520
control packets go these telemetry

1297
00:53:39,520 --> 00:53:43,839
packets next slide

1298
00:53:44,640 --> 00:53:48,000
so uh this i think if you understand the

1299
00:53:48,000 --> 00:53:49,599
grumbles that we originally had from the

1300
00:53:49,599 --> 00:53:50,800
one to end relationship i think you

1301
00:53:50,800 --> 00:53:52,079
should be more grumbling now

1302
00:53:52,079 --> 00:53:56,960
next slide

1303
00:53:56,960 --> 00:54:00,160
so um you know like again the the

1304
00:54:00,160 --> 00:54:01,200
standard

1305
00:54:01,200 --> 00:54:03,040
thing to do here is just add more text

1306
00:54:03,040 --> 00:54:05,520
consider security considerations

1307
00:54:05,520 --> 00:54:07,599
um i will note this is not like a

1308
00:54:07,599 --> 00:54:09,440
detectable situation until

1309
00:54:09,440 --> 00:54:12,000
your traffic blows up because you're

1310
00:54:12,000 --> 00:54:14,160
just these completely

1311
00:54:14,160 --> 00:54:15,839
orthogonal network architectures that

1312
00:54:15,839 --> 00:54:17,920
are causing these problems rate limiting

1313
00:54:17,920 --> 00:54:19,200
is not

1314
00:54:19,200 --> 00:54:20,559
great limited i think is what is in the

1315
00:54:20,559 --> 00:54:23,280
text right now it's not sufficient

1316
00:54:23,280 --> 00:54:25,040
when a single user packet creates an

1317
00:54:25,040 --> 00:54:26,559
infinite stream

1318
00:54:26,559 --> 00:54:29,119
of rate limited traffic that's not

1319
00:54:29,119 --> 00:54:30,480
satisfactory

1320
00:54:30,480 --> 00:54:33,680
uh i guess one thing we can do is change

1321
00:54:33,680 --> 00:54:35,359
the probability bounds if you're using

1322
00:54:35,359 --> 00:54:36,640
dex or something if

1323
00:54:36,640 --> 00:54:38,559
if there are n hops and the probability

1324
00:54:38,559 --> 00:54:40,000
of sending a dex factor is less than one

1325
00:54:40,000 --> 00:54:40,799
over n

1326
00:54:40,799 --> 00:54:43,200
then at least this dot that's this goes

1327
00:54:43,200 --> 00:54:45,440
to zero over time rather than

1328
00:54:45,440 --> 00:54:47,839
expanding infinitely uh we could we

1329
00:54:47,839 --> 00:54:48,480
could make

1330
00:54:48,480 --> 00:54:50,400
do something this restrict the student

1331
00:54:50,400 --> 00:54:52,000
remain more strongly you could run this

1332
00:54:52,000 --> 00:54:53,680
over not overlays in the case of

1333
00:54:53,680 --> 00:54:55,119
loopback

1334
00:54:55,119 --> 00:54:57,839
or you could restrict the location of

1335
00:54:57,839 --> 00:54:58,640
the storage

1336
00:54:58,640 --> 00:55:01,520
uh a little more tightly than we have or

1337
00:55:01,520 --> 00:55:03,200
like the other thing is to really

1338
00:55:03,200 --> 00:55:05,119
you know go rethink what we're doing

1339
00:55:05,119 --> 00:55:06,319
here um

1340
00:55:06,319 --> 00:55:08,000
you know these these concerns have

1341
00:55:08,000 --> 00:55:09,839
already existed certainly in the cert

1342
00:55:09,839 --> 00:55:11,200
in the current case i wouldn't approve

1343
00:55:11,200 --> 00:55:13,440
this as an ad maybe we could massage

1344
00:55:13,440 --> 00:55:14,880
this but like really like what are we

1345
00:55:14,880 --> 00:55:15,520
doing here

1346
00:55:15,520 --> 00:55:18,079
is this a good mechanism to use or do we

1347
00:55:18,079 --> 00:55:19,440
really need to really

1348
00:55:19,440 --> 00:55:21,359
go back to the drawing board on on this

1349
00:55:21,359 --> 00:55:23,359
whole idea i mean i would hate for the

1350
00:55:23,359 --> 00:55:24,640
group to spend a lot of time working on

1351
00:55:24,640 --> 00:55:25,839
this just never really come up with

1352
00:55:25,839 --> 00:55:27,280
something that's acceptable

1353
00:55:27,280 --> 00:55:29,119
and at this point i'm not convinced

1354
00:55:29,119 --> 00:55:30,960
maybe but i just i would like to

1355
00:55:30,960 --> 00:55:32,480
have people may come out of their silos

1356
00:55:32,480 --> 00:55:35,520
a little bit and and comment on

1357
00:55:35,520 --> 00:55:40,000
this overall problem because it's it's

1358
00:55:40,000 --> 00:55:42,000
it's bad and like it's worse than we

1359
00:55:42,000 --> 00:55:44,000
thought and and like maybe

1360
00:55:44,000 --> 00:55:47,280
it's even worse than i think um

1361
00:55:47,280 --> 00:55:48,480
so we have five minutes so i'm going to

1362
00:55:48,480 --> 00:55:50,799
shut up now and let people talk

1363
00:55:50,799 --> 00:55:53,839
all right okay

1364
00:55:55,680 --> 00:55:59,280
um martin thank you for uh analysis

1365
00:55:59,280 --> 00:56:02,799
and presenting it in uh so clear visual

1366
00:56:02,799 --> 00:56:05,760
things you know again picture is worth a

1367
00:56:05,760 --> 00:56:06,960
thousand words

1368
00:56:06,960 --> 00:56:10,799
um if you have a concern

1369
00:56:10,799 --> 00:56:14,319
about direct expert traversing

1370
00:56:14,319 --> 00:56:17,839
through another domain

1371
00:56:17,920 --> 00:56:20,000
um my understanding and that that's

1372
00:56:20,000 --> 00:56:22,079
again that's my understanding i'm not an

1373
00:56:22,079 --> 00:56:24,079
offer of this proposal

1374
00:56:24,079 --> 00:56:27,359
that indirect expert it uses some

1375
00:56:27,359 --> 00:56:30,319
transport which is not

1376
00:56:30,319 --> 00:56:33,359
marked as iem data so

1377
00:56:33,359 --> 00:56:37,119
it should not have iem marking

1378
00:56:37,119 --> 00:56:40,400
and in my understanding of the proposal

1379
00:56:40,400 --> 00:56:42,160
a direct export

1380
00:56:42,160 --> 00:56:45,200
should not trigger their

1381
00:56:45,200 --> 00:56:48,880
cascading effect so it's just

1382
00:56:48,880 --> 00:56:52,400
like udp it could be some uh

1383
00:56:52,400 --> 00:56:55,760
transport might be even use well-known

1384
00:56:55,760 --> 00:56:58,559
port or used on other encapsulation

1385
00:56:58,559 --> 00:57:02,319
but definitely not to be uh iem

1386
00:57:02,319 --> 00:57:05,520
marked and not collect im data

1387
00:57:05,520 --> 00:57:09,520
on the way to their um

1388
00:57:09,920 --> 00:57:13,599
data lake uh so

1389
00:57:13,599 --> 00:57:15,760
i think in my model here my traffic

1390
00:57:15,760 --> 00:57:17,680
going through tommy's domain is just use

1391
00:57:17,680 --> 00:57:19,520
traffic as far as time is concerned so

1392
00:57:19,520 --> 00:57:21,040
it would be marked and encapsulated it

1393
00:57:21,040 --> 00:57:23,040
would modify the encapsulating node to

1394
00:57:23,040 --> 00:57:25,200
be

1395
00:57:25,440 --> 00:57:27,359
iom data but i'll let someone more

1396
00:57:27,359 --> 00:57:29,599
knowledgeable answer that question

1397
00:57:29,599 --> 00:57:32,799
yeah okay thank you

1398
00:57:33,440 --> 00:57:36,160
all right tall

1399
00:57:38,480 --> 00:57:41,359
thanks martin for raising this issue uh

1400
00:57:41,359 --> 00:57:43,280
so first of all i agree with the

1401
00:57:43,280 --> 00:57:46,640
the importance of these scenarios and

1402
00:57:46,640 --> 00:57:49,280
we actually in the drafts we are already

1403
00:57:49,280 --> 00:57:51,920
describing these scenarios very briefly

1404
00:57:51,920 --> 00:57:54,319
but at this point uh like you're saying

1405
00:57:54,319 --> 00:57:56,160
we still need to think about suggestions

1406
00:57:56,160 --> 00:57:57,760
for how to solve them

1407
00:57:57,760 --> 00:58:00,720
um and actually i think the situation is

1408
00:58:00,720 --> 00:58:02,000
a bit worse than what you're

1409
00:58:02,000 --> 00:58:05,280
uh describing it because actually it's

1410
00:58:05,280 --> 00:58:08,000
not limited just to direct exporting

1411
00:58:08,000 --> 00:58:09,599
if you think back about what we're

1412
00:58:09,599 --> 00:58:11,520
starting from we're not

1413
00:58:11,520 --> 00:58:14,640
inventing exporting right exporting is

1414
00:58:14,640 --> 00:58:16,240
something that already exists in other

1415
00:58:16,240 --> 00:58:17,440
protocols

1416
00:58:17,440 --> 00:58:21,119
exists in nikefix psamp

1417
00:58:21,119 --> 00:58:24,640
is a working group that 10 years ago

1418
00:58:24,640 --> 00:58:26,799
defined how packet sampling

1419
00:58:26,799 --> 00:58:29,680
can work and they already described some

1420
00:58:29,680 --> 00:58:31,760
of these threats

1421
00:58:31,760 --> 00:58:34,880
and they didn't resolve them and ipfix

1422
00:58:34,880 --> 00:58:36,000
actually also

1423
00:58:36,000 --> 00:58:39,440
defines a flow selection but doesn't

1424
00:58:39,440 --> 00:58:43,359
necessarily solve these problems so um

1425
00:58:43,359 --> 00:58:45,200
i think if we're trying to solve these

1426
00:58:45,200 --> 00:58:47,440
problems we may need to think of a bit

1427
00:58:47,440 --> 00:58:49,440
of a bigger scope

1428
00:58:49,440 --> 00:58:53,440
not necessarily limited to ippm

1429
00:58:53,440 --> 00:58:55,680
because the same problem actually exists

1430
00:58:55,680 --> 00:58:56,480
for

1431
00:58:56,480 --> 00:58:59,040
other contexts in which you're doing

1432
00:58:59,040 --> 00:59:02,558
exporting to an external

1433
00:59:02,839 --> 00:59:05,839
entity

1434
00:59:06,960 --> 00:59:10,160
thank you for that context um you know

1435
00:59:10,160 --> 00:59:11,520
i'm only aware of the draft that i'm

1436
00:59:11,520 --> 00:59:13,760
responsible for is ap so

1437
00:59:13,760 --> 00:59:15,520
uh yeah maybe there's some other broken

1438
00:59:15,520 --> 00:59:19,440
things in ietf for sure um

1439
00:59:19,440 --> 00:59:20,640
so whatever we could do to figure out

1440
00:59:20,640 --> 00:59:23,520
this problem would be good

1441
00:59:23,599 --> 00:59:27,359
one question i guess for

1442
00:59:27,359 --> 00:59:32,400
martin and also for tall um do we think

1443
00:59:32,400 --> 00:59:33,440
it would be

1444
00:59:33,440 --> 00:59:36,799
possible to solve this

1445
00:59:36,799 --> 00:59:39,520
just by saying

1446
00:59:39,920 --> 00:59:41,839
we we can batch kind of the exporting to

1447
00:59:41,839 --> 00:59:43,599
say you know i i don't know

1448
00:59:43,599 --> 00:59:45,359
to what degree the use cases for direct

1449
00:59:45,359 --> 00:59:47,680
exporting require

1450
00:59:47,680 --> 00:59:50,799
that export to happen in you know

1451
00:59:50,799 --> 00:59:53,359
near real time on a per packet basis but

1452
00:59:53,359 --> 00:59:54,960
a lot of the amplification goes away if

1453
00:59:54,960 --> 00:59:56,079
you essentially have

1454
00:59:56,079 --> 00:59:59,359
a digest of here's

1455
00:59:59,359 --> 01:00:01,599
here's the stuff i need to export but i

1456
01:00:01,599 --> 01:00:03,200
only send it once i have a hundred

1457
01:00:03,200 --> 01:00:04,319
things to export

1458
01:00:04,319 --> 01:00:07,359
or you know at some cadence and then you

1459
01:00:07,359 --> 01:00:07,920
essentially

1460
01:00:07,920 --> 01:00:10,880
never blow up it's always just i only

1461
01:00:10,880 --> 01:00:12,480
export what i received over this time

1462
01:00:12,480 --> 01:00:15,359
period or something

1463
01:00:15,359 --> 01:00:17,599
and then it's a deterministic number of

1464
01:00:17,599 --> 01:00:19,599
times you send something

1465
01:00:19,599 --> 01:00:22,640
would that be acceptable to

1466
01:00:22,640 --> 01:00:24,240
both kind of people who want to use this

1467
01:00:24,240 --> 01:00:26,839
as well as the people who are seeing

1468
01:00:26,839 --> 01:00:29,839
problems

1469
01:00:33,520 --> 01:00:36,559
you can also think about it

1470
01:00:40,400 --> 01:00:42,559
ah yes and miriam is commenting that

1471
01:00:42,559 --> 01:00:44,559
with ipfix you do time-based exports or

1472
01:00:44,559 --> 01:00:45,839
at the end of the flow

1473
01:00:45,839 --> 01:00:49,839
um yeah well there's a couple of drafts

1474
01:00:49,839 --> 01:00:50,160
that

1475
01:00:50,160 --> 01:00:52,559
define various methods of uh doing

1476
01:00:52,559 --> 01:00:53,440
sampling they

1477
01:00:53,440 --> 01:00:55,920
may be based on time based on one event

1478
01:00:55,920 --> 01:00:58,640
packets and also based on hash

1479
01:00:58,640 --> 01:01:00,559
and once you're doing hash based

1480
01:01:00,559 --> 01:01:01,839
sampling

1481
01:01:01,839 --> 01:01:03,599
you get back to the same problem where

1482
01:01:03,599 --> 01:01:05,440
you may have a

1483
01:01:05,440 --> 01:01:08,559
short notice entity which manipulates

1484
01:01:08,559 --> 01:01:09,280
the

1485
01:01:09,280 --> 01:01:10,720
hash in a way that causes all the

1486
01:01:10,720 --> 01:01:13,119
packets to be sampled

1487
01:01:13,119 --> 01:01:15,520
okay that would be a weakness of just

1488
01:01:15,520 --> 01:01:17,839
hash sampling

1489
01:01:17,839 --> 01:01:19,760
that's an example but probably we can

1490
01:01:19,760 --> 01:01:21,920
find other

1491
01:01:21,920 --> 01:01:25,760
other ways to do that

1492
01:01:25,760 --> 01:01:28,880
i'd like to comment that you usually uh

1493
01:01:28,880 --> 01:01:31,839
we will never allow all the traffic to

1494
01:01:31,839 --> 01:01:32,880
be

1495
01:01:32,880 --> 01:01:36,799
you know to to to trigger the this uh

1496
01:01:36,799 --> 01:01:40,160
dx data collection um we usually

1497
01:01:40,160 --> 01:01:43,680
need to have some kind of acl to filter

1498
01:01:43,680 --> 01:01:44,160
the

1499
01:01:44,160 --> 01:01:47,119
only subset of traffic so if you are

1500
01:01:47,119 --> 01:01:47,839
careful

1501
01:01:47,839 --> 01:01:52,160
and we can uh avoid to resample the

1502
01:01:52,160 --> 01:01:55,520
uh the the the actually export

1503
01:01:55,520 --> 01:01:58,960
data packet so then uh we can

1504
01:01:58,960 --> 01:02:02,480
avoid such kind of problem but this is

1505
01:02:02,480 --> 01:02:07,039
one possible way to handle that

1506
01:02:07,039 --> 01:02:09,680
yeah i think although to martin's point

1507
01:02:09,680 --> 01:02:11,200
it needs to be very

1508
01:02:11,200 --> 01:02:13,599
explicit and coordination within one

1509
01:02:13,599 --> 01:02:15,440
domain may not be sufficient

1510
01:02:15,440 --> 01:02:19,200
i think you need some uh

1511
01:02:19,200 --> 01:02:22,640
deterministic bounds on how often you're

1512
01:02:22,640 --> 01:02:24,160
sending something that are not

1513
01:02:24,160 --> 01:02:25,359
that's not going to be correctly related

1514
01:02:25,359 --> 01:02:27,440
to the packets coming in all right we

1515
01:02:27,440 --> 01:02:29,359
are pretty much out of time

1516
01:02:29,359 --> 01:02:32,480
um we will spill over the conversation

1517
01:02:32,480 --> 01:02:33,760
frank you were in queue did you want to

1518
01:02:33,760 --> 01:02:36,160
just have one last word and then we will

1519
01:02:36,160 --> 01:02:39,760
talk again on friday yeah that sounds

1520
01:02:39,760 --> 01:02:40,559
good um

1521
01:02:40,559 --> 01:02:42,240
i just wanted to go see whether there's

1522
01:02:42,240 --> 01:02:44,480
a recommendation because martin said

1523
01:02:44,480 --> 01:02:46,240
should we fundamentally rethink or

1524
01:02:46,240 --> 01:02:48,400
should we go and

1525
01:02:48,400 --> 01:02:50,000
try to go and massage the security

1526
01:02:50,000 --> 01:02:51,440
considerations which is

1527
01:02:51,440 --> 01:02:53,520
i think what we're leaning towards right

1528
01:02:53,520 --> 01:02:54,640
that we're saying okay

1529
01:02:54,640 --> 01:02:57,760
um do it in a single domain only

1530
01:02:57,760 --> 01:03:01,280
um do it at a regular cadence uh do it

1531
01:03:01,280 --> 01:03:03,119
in an aggregated way i think we can go

1532
01:03:03,119 --> 01:03:04,559
and put all these things in that have

1533
01:03:04,559 --> 01:03:07,280
been put in in other places like psamp

1534
01:03:07,280 --> 01:03:10,160
or ipfix and just refer to these earlier

1535
01:03:10,160 --> 01:03:11,760
methods do we want to go and go down

1536
01:03:11,760 --> 01:03:12,799
that way

1537
01:03:12,799 --> 01:03:14,480
i have a load of sympathy because people

1538
01:03:14,480 --> 01:03:16,160
use it that way right now right rather

1539
01:03:16,160 --> 01:03:18,640
than saying

1540
01:03:19,280 --> 01:03:20,960
out of all these iom options i think

1541
01:03:20,960 --> 01:03:22,319
it's the easiest one to implement in

1542
01:03:22,319 --> 01:03:24,160
hardware

1543
01:03:24,160 --> 01:03:27,599
um and so if we just go and

1544
01:03:27,599 --> 01:03:29,200
remove it off the table for now just

1545
01:03:29,200 --> 01:03:30,799
because of that particular concern i

1546
01:03:30,799 --> 01:03:34,400
think we're doing ourselves a disservice

1547
01:03:37,760 --> 01:03:40,799
right it does seem that

1548
01:03:40,799 --> 01:03:45,200
the technical wire encoding of the

1549
01:03:45,200 --> 01:03:46,400
option

1550
01:03:46,400 --> 01:03:49,440
that part probably seems fine it's what

1551
01:03:49,440 --> 01:03:51,359
we need to think really hard about is

1552
01:03:51,359 --> 01:03:53,119
what we're actually doing in response to

1553
01:03:53,119 --> 01:03:54,640
receiving the option and

1554
01:03:54,640 --> 01:03:58,799
putting guardrails there all right um

1555
01:03:58,799 --> 01:04:03,039
i think we're out of time craig can you

1556
01:04:03,039 --> 01:04:05,520
send your thoughts to the chat or the

1557
01:04:05,520 --> 01:04:06,319
list

1558
01:04:06,319 --> 01:04:09,200
and then you will group back again on

1559
01:04:09,200 --> 01:04:10,160
friday

1560
01:04:10,160 --> 01:04:12,319
it's yeah the list is a good idea thank

1561
01:04:12,319 --> 01:04:14,160
you okay thank you

1562
01:04:14,160 --> 01:04:16,240
all right thanks everyone for your time

1563
01:04:16,240 --> 01:04:19,760
have a good rest of your itf week

1564
01:04:19,760 --> 01:04:27,839
see you friday

