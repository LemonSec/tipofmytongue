1
00:02:07,920 --> 00:02:09,038
hey jeff is here

2
00:02:09,038 --> 00:02:10,318
you might want to do an audio check as

3
00:02:10,318 --> 00:02:12,799
well jeff

4
00:02:14,160 --> 00:02:18,160
audio check can you hear me

5
00:02:18,160 --> 00:02:20,480
that's theoretically this has video as

6
00:02:20,480 --> 00:02:24,560
well although i don't see any video

7
00:02:27,360 --> 00:02:29,920
you have a nice pair of see your video

8
00:02:29,920 --> 00:02:32,239
either

9
00:02:32,239 --> 00:02:34,160
that's probably a good thing considering

10
00:02:34,160 --> 00:02:36,319
this

11
00:02:37,920 --> 00:02:40,160
in fact i think i'm going to turn off

12
00:02:40,160 --> 00:02:42,879
video because

13
00:02:43,200 --> 00:02:44,879
i'm only going to be black no matter

14
00:02:44,879 --> 00:02:47,040
what

15
00:02:47,040 --> 00:02:48,640
well none of us have had a good haircut

16
00:02:48,640 --> 00:02:50,170
in a year right so you know

17
00:02:50,170 --> 00:02:53,840
[Laughter]

18
00:02:53,840 --> 00:02:55,599
so you know you just don't have a lot

19
00:02:55,599 --> 00:02:58,560
longer than a year

20
00:03:00,000 --> 00:03:02,480
how long have we known each other a good

21
00:03:02,480 --> 00:03:04,800
point i've never had a good haircut

22
00:03:04,800 --> 00:03:33,840
that's my head's fault hmm

23
00:03:40,159 --> 00:03:43,200
well maybe i should share a title slide

24
00:03:43,200 --> 00:03:47,440
that would be exciting wouldn't it

25
00:03:47,440 --> 00:04:01,840
that seems wise

26
00:04:12,840 --> 00:04:15,840
yay

27
00:04:26,840 --> 00:04:29,840
uh

28
00:04:31,600 --> 00:04:33,440
so it looks like people are starting to

29
00:04:33,440 --> 00:04:35,199
join increasingly fast

30
00:04:35,199 --> 00:04:37,440
quickly well i guess we should give it a

31
00:04:37,440 --> 00:04:39,840
few minutes for everybody to

32
00:04:39,840 --> 00:04:43,759
sign in where all the buttons are etc

33
00:04:43,759 --> 00:04:45,759
although i will note we do have a full

34
00:04:45,759 --> 00:04:47,520
agenda so maybe not

35
00:04:47,520 --> 00:04:49,919
too long

36
00:04:51,440 --> 00:04:55,440
uh well you tell me when to start

37
00:04:55,440 --> 00:04:56,720
i'm not taking that kind of

38
00:04:56,720 --> 00:04:59,600
responsibility

39
00:05:00,400 --> 00:05:02,160
yeah i guess let's give it to about

40
00:05:02,160 --> 00:05:03,919
three or four minutes after the hour

41
00:05:03,919 --> 00:05:11,840
and then

42
00:05:23,360 --> 00:05:25,039
yes while we're waiting for people to

43
00:05:25,039 --> 00:05:26,400
join

44
00:05:26,400 --> 00:05:28,639
um i will just note that this is the

45
00:05:28,639 --> 00:05:29,520
second part

46
00:05:29,520 --> 00:05:33,120
in the technology deep dives in the dns

47
00:05:33,120 --> 00:05:36,880
the first part happened at ietf

48
00:05:36,880 --> 00:05:40,000
108 and the video is

49
00:05:40,000 --> 00:05:43,120
online on youtube and i believe is also

50
00:05:43,120 --> 00:05:43,840
linked to

51
00:05:43,840 --> 00:05:47,520
from the ietf website um somewhere

52
00:05:47,520 --> 00:05:49,600
i realized that was not the most useful

53
00:05:49,600 --> 00:05:50,880
update ever

54
00:05:50,880 --> 00:05:52,240
but if you look around you should be

55
00:05:52,240 --> 00:05:53,919
able to find it

56
00:05:53,919 --> 00:05:56,479
otherwise email me or i will try and

57
00:05:56,479 --> 00:05:57,039
remember

58
00:05:57,039 --> 00:06:00,880
to put a update somewhere

59
00:06:00,880 --> 00:06:04,000
i think the invite to this or

60
00:06:04,000 --> 00:06:06,960
agenda also has a link to last week's or

61
00:06:06,960 --> 00:06:08,880
sorry last time's recording

62
00:06:08,880 --> 00:06:10,960
and it's probably useful if you're not

63
00:06:10,960 --> 00:06:13,360
particularly familiar with the dns to

64
00:06:13,360 --> 00:06:17,039
go and read that or watch that and

65
00:06:17,039 --> 00:06:20,000
um i will also note this kind of builds

66
00:06:20,000 --> 00:06:20,479
on that

67
00:06:20,479 --> 00:06:22,639
and also explains that a lot of what we

68
00:06:22,639 --> 00:06:23,680
told you last time

69
00:06:23,680 --> 00:06:35,840
we were actually lying about

70
00:06:40,000 --> 00:06:43,360
i don't think the camera works

71
00:06:43,759 --> 00:06:46,880
that's a scary photo

72
00:06:46,880 --> 00:06:51,360
just your camera is working now jeff

73
00:06:51,360 --> 00:06:54,639
my camera is working

74
00:06:55,039 --> 00:06:56,560
but you know like i said it's really

75
00:06:56,560 --> 00:06:59,199
dark out there and you know

76
00:06:59,199 --> 00:07:02,720
i could go all shadowy yeah it's

77
00:07:02,720 --> 00:07:04,400
it's working but it's not working well

78
00:07:04,400 --> 00:07:05,680
because you're much more handsome in

79
00:07:05,680 --> 00:07:07,680
person

80
00:07:07,680 --> 00:07:10,720
warren you're just too kind i am i am

81
00:07:10,720 --> 00:07:13,039
it's because usually i give you abuse so

82
00:07:13,039 --> 00:07:14,080
i forget seeing

83
00:07:14,080 --> 00:07:15,360
lots of people watching i should be

84
00:07:15,360 --> 00:07:18,160
polite for once

85
00:07:19,280 --> 00:07:21,280
time is of the essence look welcome

86
00:07:21,280 --> 00:07:23,360
everybody and for those in the asia

87
00:07:23,360 --> 00:07:26,319
pacific area particularly those in japan

88
00:07:26,319 --> 00:07:28,080
i feel your pain

89
00:07:28,080 --> 00:07:30,479
um here on the east coast of australia

90
00:07:30,479 --> 00:07:32,960
it is you know a civilized 4 a.m

91
00:07:32,960 --> 00:07:35,440
in parts further west from me it's not

92
00:07:35,440 --> 00:07:36,560
it's worse

93
00:07:36,560 --> 00:07:39,840
um for the next hour and a half we're

94
00:07:39,840 --> 00:07:41,120
going to be talking

95
00:07:41,120 --> 00:07:43,759
dns it's when too much dns is barely

96
00:07:43,759 --> 00:07:44,639
enough

97
00:07:44,639 --> 00:07:47,680
and this is the second part of these

98
00:07:47,680 --> 00:07:49,280
deep dive sessions so

99
00:07:49,280 --> 00:07:52,160
we're going to dive a little bit deeper

100
00:07:52,160 --> 00:07:53,599
and have a look at some of the

101
00:07:53,599 --> 00:07:56,960
underlying issues inside the dns

102
00:07:56,960 --> 00:08:00,000
looking at the concepts of of

103
00:08:00,000 --> 00:08:02,960
names which i will cover and and what

104
00:08:02,960 --> 00:08:03,680
they mean

105
00:08:03,680 --> 00:08:07,199
in the context of the dns looking at

106
00:08:07,199 --> 00:08:09,440
some of the sort of security issues that

107
00:08:09,440 --> 00:08:11,280
come up with the way in which we use

108
00:08:11,280 --> 00:08:13,520
names which wes is going to cover

109
00:08:13,520 --> 00:08:16,319
and cover some of the um more prevalent

110
00:08:16,319 --> 00:08:16,879
myths

111
00:08:16,879 --> 00:08:20,639
fantasies and misconceptions that um

112
00:08:20,639 --> 00:08:24,160
that sit within the dns and and see what

113
00:08:24,160 --> 00:08:26,080
else we can uncover so we have 90

114
00:08:26,080 --> 00:08:27,759
minutes which is a comfortable amount of

115
00:08:27,759 --> 00:08:28,800
time

116
00:08:28,800 --> 00:08:32,559
um what i would like to do is sort of

117
00:08:32,559 --> 00:08:33,760
channel through pretty

118
00:08:33,760 --> 00:08:36,000
pretty quickly and then take a small

119
00:08:36,000 --> 00:08:38,159
number of questions and hand to where's

120
00:08:38,159 --> 00:08:40,399
but we have reserved around about 30

121
00:08:40,399 --> 00:08:41,519
minutes at the end

122
00:08:41,519 --> 00:08:43,760
possibly longer to actually wander

123
00:08:43,760 --> 00:08:45,519
through um

124
00:08:45,519 --> 00:08:47,920
your questions and and our feeble

125
00:08:47,920 --> 00:08:49,200
attempts at trying to

126
00:08:49,200 --> 00:08:51,680
provide answers or maybe you can provide

127
00:08:51,680 --> 00:08:53,279
the answers and we'll just provide the

128
00:08:53,279 --> 00:08:56,000
questions which i personally prefer

129
00:08:56,000 --> 00:08:57,200
because it's going to take about that

130
00:08:57,200 --> 00:08:59,040
long for my brain to boot up

131
00:08:59,040 --> 00:09:01,440
and don't forget i haven't had coffee

132
00:09:01,440 --> 00:09:02,240
yet

133
00:09:02,240 --> 00:09:06,800
um so with that said uh let's start

134
00:09:06,800 --> 00:09:10,240
the usual um read this carefully

135
00:09:10,240 --> 00:09:13,600
note it well you have two seconds

136
00:09:13,600 --> 00:09:17,279
done um let's start

137
00:09:17,279 --> 00:09:21,120
by thinking about what a name is and

138
00:09:21,120 --> 00:09:23,200
wasn't it shakespeare romeo and juliet

139
00:09:23,200 --> 00:09:25,040
what's in a name a rose by any other

140
00:09:25,040 --> 00:09:26,720
something or rather my memory is now

141
00:09:26,720 --> 00:09:27,440
gone

142
00:09:27,440 --> 00:09:30,560
um a name

143
00:09:30,560 --> 00:09:34,320
we use it as as kind of a human-based

144
00:09:34,320 --> 00:09:35,519
token

145
00:09:35,519 --> 00:09:38,959
an alias for what we would call an

146
00:09:38,959 --> 00:09:40,000
address

147
00:09:40,000 --> 00:09:41,680
an address is something an endpoint

148
00:09:41,680 --> 00:09:44,320
destination that an ip network uses to

149
00:09:44,320 --> 00:09:45,760
relay a packet

150
00:09:45,760 --> 00:09:48,800
and so all we're doing with the name

151
00:09:48,800 --> 00:09:51,200
in this kind of destination based packet

152
00:09:51,200 --> 00:09:52,560
forwarding network

153
00:09:52,560 --> 00:09:55,760
is providing an alias for an ip address

154
00:09:55,760 --> 00:09:58,480
now we're not talking about why you

155
00:09:58,480 --> 00:10:00,080
wanted to send a packet there

156
00:10:00,080 --> 00:10:02,399
it's just the name of an ip address the

157
00:10:02,399 --> 00:10:04,000
name of a host

158
00:10:04,000 --> 00:10:05,839
in fact to be perfectly frank the name

159
00:10:05,839 --> 00:10:07,839
of an interface on a host

160
00:10:07,839 --> 00:10:10,240
and it's up to something else the

161
00:10:10,240 --> 00:10:13,120
transport protocol port address normally

162
00:10:13,120 --> 00:10:17,040
to effectively select what the services

163
00:10:17,040 --> 00:10:18,480
that you're trying to get to on that

164
00:10:18,480 --> 00:10:22,000
host the name itself

165
00:10:22,000 --> 00:10:23,519
well i actually said the name of the

166
00:10:23,519 --> 00:10:25,839
platform not the particular service but

167
00:10:25,839 --> 00:10:28,000
to be brutally honest that's not quite

168
00:10:28,000 --> 00:10:29,040
correct

169
00:10:29,040 --> 00:10:31,440
it's the name of the ip address of the

170
00:10:31,440 --> 00:10:33,519
interface of the platform

171
00:10:33,519 --> 00:10:35,920
not the name of the service but in any

172
00:10:35,920 --> 00:10:38,240
case it's not a service name

173
00:10:38,240 --> 00:10:41,440
and the intention was this is human use

174
00:10:41,440 --> 00:10:42,720
this is about

175
00:10:42,720 --> 00:10:45,200
things that you and i use as people

176
00:10:45,200 --> 00:10:45,760
talking

177
00:10:45,760 --> 00:10:48,800
you know a natural language it wasn't an

178
00:10:48,800 --> 00:10:52,160
artifact of the network when the packet

179
00:10:52,160 --> 00:10:55,600
the ip packet heads to its destination

180
00:10:55,600 --> 00:10:58,079
the ip part of the packet never mind

181
00:10:58,079 --> 00:10:59,680
transport and application

182
00:10:59,680 --> 00:11:02,880
does not have any use of a name all that

183
00:11:02,880 --> 00:11:04,240
you find there is those

184
00:11:04,240 --> 00:11:07,519
v4 32 bits v6 128-bit source and

185
00:11:07,519 --> 00:11:09,279
destination ip addresses

186
00:11:09,279 --> 00:11:11,360
there are no names there we are not

187
00:11:11,360 --> 00:11:14,480
routing names in this architecture

188
00:11:14,480 --> 00:11:18,079
so they were intended

189
00:11:18,079 --> 00:11:20,399
at least and i'm going back about 40 or

190
00:11:20,399 --> 00:11:22,480
50 years

191
00:11:22,480 --> 00:11:25,040
it was so much more useful if the same

192
00:11:25,040 --> 00:11:26,480
host had the same name

193
00:11:26,480 --> 00:11:29,839
irrespective of the protocol so

194
00:11:29,839 --> 00:11:33,760
if you're going to use uh uucp

195
00:11:33,760 --> 00:11:36,320
or unit mail you know that kind of issue

196
00:11:36,320 --> 00:11:37,839
if you're going to use

197
00:11:37,839 --> 00:11:40,720
ip mount if you're going to use any

198
00:11:40,720 --> 00:11:41,200
other

199
00:11:41,200 --> 00:11:44,640
form of protocol family it's very useful

200
00:11:44,640 --> 00:11:46,959
if the name is constant

201
00:11:46,959 --> 00:11:49,360
i'm going to go to the host called fred

202
00:11:49,360 --> 00:11:51,279
almost irrespective of what protocol i'm

203
00:11:51,279 --> 00:11:52,560
going to use

204
00:11:52,560 --> 00:11:56,000
so to make that work you actually

205
00:11:56,000 --> 00:11:59,040
had to have these host names specified

206
00:11:59,040 --> 00:12:01,519
as the lowest common denominator

207
00:12:01,519 --> 00:12:03,920
across all of these protocol specific in

208
00:12:03,920 --> 00:12:06,399
application specific limitations

209
00:12:06,399 --> 00:12:10,000
and so host names took a much smaller

210
00:12:10,000 --> 00:12:12,079
character repertoire than actually is

211
00:12:12,079 --> 00:12:14,480
possible inside dns labels

212
00:12:14,480 --> 00:12:17,120
uh which joao is going to explore in

213
00:12:17,120 --> 00:12:19,120
incredible detail later on

214
00:12:19,120 --> 00:12:20,959
and just to illustrate this i've

215
00:12:20,959 --> 00:12:22,720
actually jumped joe house name into

216
00:12:22,720 --> 00:12:23,680
unicode

217
00:12:23,680 --> 00:12:26,720
to sort of point out that even in our

218
00:12:26,720 --> 00:12:28,560
human use

219
00:12:28,560 --> 00:12:30,399
what we think is a character repertoire

220
00:12:30,399 --> 00:12:32,320
varies language by language so there's

221
00:12:32,320 --> 00:12:34,160
some very subtle distinctions going on

222
00:12:34,160 --> 00:12:34,959
here

223
00:12:34,959 --> 00:12:38,320
around the names of hosts and the names

224
00:12:38,320 --> 00:12:39,519
of labels

225
00:12:39,519 --> 00:12:41,360
and the rules for hosts are of course

226
00:12:41,360 --> 00:12:43,040
much more constrained and the answer is

227
00:12:43,040 --> 00:12:43,440
why

228
00:12:43,440 --> 00:12:46,079
it's nothing to do with the dns per se

229
00:12:46,079 --> 00:12:47,760
the dns in that area

230
00:12:47,760 --> 00:12:50,800
quite frankly doesn't care and doesn't

231
00:12:50,800 --> 00:12:53,519
make that distinction in and of itself

232
00:12:53,519 --> 00:12:56,720
it's more about mapping protocols

233
00:12:56,720 --> 00:13:00,399
and names into applications

234
00:13:00,399 --> 00:13:03,440
so let's talk a little bit about

235
00:13:03,440 --> 00:13:06,720
the resource record now

236
00:13:06,720 --> 00:13:09,360
the original naming model was based on a

237
00:13:09,360 --> 00:13:10,959
thing that we always came to call

238
00:13:10,959 --> 00:13:14,560
host.txt uh it was a very very simple

239
00:13:14,560 --> 00:13:15,519
entry

240
00:13:15,519 --> 00:13:18,480
um it was a text file with one mapping

241
00:13:18,480 --> 00:13:19,040
per

242
00:13:19,040 --> 00:13:23,120
name per entry and it had an ip address

243
00:13:23,120 --> 00:13:26,800
a space and then a set of names

244
00:13:26,800 --> 00:13:30,320
that were aliases for that ip address

245
00:13:30,320 --> 00:13:33,440
and so when you said what's the name of

246
00:13:33,440 --> 00:13:34,399
jeff

247
00:13:34,399 --> 00:13:37,200
you'd look down host.txt and find a name

248
00:13:37,200 --> 00:13:37,680
match

249
00:13:37,680 --> 00:13:40,160
a line that had jeff and you'd find the

250
00:13:40,160 --> 00:13:42,079
corresponding rp address and send it

251
00:13:42,079 --> 00:13:43,279
back

252
00:13:43,279 --> 00:13:44,959
there are one or more ip addresses

253
00:13:44,959 --> 00:13:47,120
listed in those entries

254
00:13:47,120 --> 00:13:48,880
i'm not sure about the order it's been

255
00:13:48,880 --> 00:13:51,120
so long since i've ever had to use

256
00:13:51,120 --> 00:13:53,839
host.text most machines still have an

257
00:13:53,839 --> 00:13:55,760
echo a ghost of that file

258
00:13:55,760 --> 00:13:58,160
sitting somewhere inside the file system

259
00:13:58,160 --> 00:13:59,680
and it's a common form

260
00:13:59,680 --> 00:14:02,880
of of

261
00:14:02,880 --> 00:14:05,440
malware to go and make some evil entries

262
00:14:05,440 --> 00:14:06,560
there because it normally takes

263
00:14:06,560 --> 00:14:08,560
precedence over the dns

264
00:14:08,560 --> 00:14:10,240
uh we shall probably should have got rid

265
00:14:10,240 --> 00:14:11,839
of it

266
00:14:11,839 --> 00:14:15,279
host.text is client-centric so

267
00:14:15,279 --> 00:14:16,959
you could have a host dot text that

268
00:14:16,959 --> 00:14:18,959
calls the ip address you know one two

269
00:14:18,959 --> 00:14:19,839
three four

270
00:14:19,839 --> 00:14:21,920
uh fred and i could call it jeff and

271
00:14:21,920 --> 00:14:24,079
joao could call it bob and no one would

272
00:14:24,079 --> 00:14:25,600
care

273
00:14:25,600 --> 00:14:28,320
because while we're referring to the

274
00:14:28,320 --> 00:14:29,600
different hosts with different

275
00:14:29,600 --> 00:14:31,920
the same host with different names the

276
00:14:31,920 --> 00:14:33,839
dns doesn't sorry that the host didn't

277
00:14:33,839 --> 00:14:35,279
care and actually your applications

278
00:14:35,279 --> 00:14:37,199
didn't care

279
00:14:37,199 --> 00:14:39,440
however when we turned into a

280
00:14:39,440 --> 00:14:41,760
distributed database

281
00:14:41,760 --> 00:14:43,600
all of a sudden the name became unique

282
00:14:43,600 --> 00:14:44,959
because we're all sharing

283
00:14:44,959 --> 00:14:46,720
one database we don't have different

284
00:14:46,720 --> 00:14:48,639
hosts.txt per se

285
00:14:48,639 --> 00:14:51,360
we're all working in one database but

286
00:14:51,360 --> 00:14:52,959
the database itself

287
00:14:52,959 --> 00:14:55,760
was distributed it wasn't just oh

288
00:14:55,760 --> 00:14:58,320
host.txt exists on a server over there

289
00:14:58,320 --> 00:15:00,240
there is going to melt

290
00:15:00,240 --> 00:15:02,480
we distributed it so everyone ran a

291
00:15:02,480 --> 00:15:04,399
little bit of this database

292
00:15:04,399 --> 00:15:07,199
but in a distributed database you need

293
00:15:07,199 --> 00:15:07,839
mapping

294
00:15:07,839 --> 00:15:10,639
records to say i don't know anything

295
00:15:10,639 --> 00:15:12,079
about this name

296
00:15:12,079 --> 00:15:14,800
the person the thing the host that knows

297
00:15:14,800 --> 00:15:15,680
about this name

298
00:15:15,680 --> 00:15:19,199
is over there and so i'm authoritative

299
00:15:19,199 --> 00:15:20,959
for a bundle of names

300
00:15:20,959 --> 00:15:23,519
and all these other folk hosts our

301
00:15:23,519 --> 00:15:24,639
authority for other

302
00:15:24,639 --> 00:15:28,160
bundles of names so we added two more

303
00:15:28,160 --> 00:15:29,440
records into this

304
00:15:29,440 --> 00:15:32,480
distributed database we had the my name

305
00:15:32,480 --> 00:15:34,800
to ip address mapping

306
00:15:34,800 --> 00:15:36,880
originally called an a record a for

307
00:15:36,880 --> 00:15:38,240
address

308
00:15:38,240 --> 00:15:40,959
we also had sewer records start of

309
00:15:40,959 --> 00:15:42,079
authority

310
00:15:42,079 --> 00:15:43,920
that was if you will all the names in

311
00:15:43,920 --> 00:15:46,399
this bundle that are related

312
00:15:46,399 --> 00:15:48,320
have the common set of properties these

313
00:15:48,320 --> 00:15:49,600
are the properties

314
00:15:49,600 --> 00:15:52,399
the zone administration contact expiry

315
00:15:52,399 --> 00:15:54,320
timers time to live and so on

316
00:15:54,320 --> 00:15:57,440
if it's not specified use this value

317
00:15:57,440 --> 00:16:00,160
and the names that i don't know about

318
00:16:00,160 --> 00:16:00,560
which

319
00:16:00,560 --> 00:16:04,079
are child names in a hierarchical system

320
00:16:04,079 --> 00:16:06,959
well you can find them over there where

321
00:16:06,959 --> 00:16:07,600
there

322
00:16:07,600 --> 00:16:10,160
is a name server record the name of the

323
00:16:10,160 --> 00:16:11,120
host

324
00:16:11,120 --> 00:16:14,079
serving those names so we added two more

325
00:16:14,079 --> 00:16:15,360
resource records so

326
00:16:15,360 --> 00:16:20,839
an ms but how do you disambiguate

327
00:16:20,839 --> 00:16:22,720
services

328
00:16:22,720 --> 00:16:25,920
excuse me um because

329
00:16:25,920 --> 00:16:27,839
you might want to have different

330
00:16:27,839 --> 00:16:30,880
services connected to the same host

331
00:16:30,880 --> 00:16:33,759
and you might want to explicitly label

332
00:16:33,759 --> 00:16:34,720
them

333
00:16:34,720 --> 00:16:37,360
so we started making that an attribute

334
00:16:37,360 --> 00:16:38,800
of the name itself

335
00:16:38,800 --> 00:16:41,839
so rather than saying query example.com

336
00:16:41,839 --> 00:16:44,320
and get an address and attach to port 80

337
00:16:44,320 --> 00:16:45,120
at the time

338
00:16:45,120 --> 00:16:46,480
because you know we're banging the rocks

339
00:16:46,480 --> 00:16:48,480
together then we actually said

340
00:16:48,480 --> 00:16:51,440
no you want to go to dub dub dub and so

341
00:16:51,440 --> 00:16:53,680
now it's sort of built in braces

342
00:16:53,680 --> 00:16:56,560
it's an alias the dub dub dumb for

343
00:16:56,560 --> 00:16:57,600
giving a name

344
00:16:57,600 --> 00:17:00,560
that you subsequently go to port 80 on

345
00:17:00,560 --> 00:17:01,440
and so you

346
00:17:01,440 --> 00:17:05,079
can distinguish that from ftp.exam

347
00:17:05,079 --> 00:17:07,599
mx.example.com and blah blah blah where

348
00:17:07,599 --> 00:17:09,359
you're actually putting the service name

349
00:17:09,359 --> 00:17:11,520
on the left hand side as part of the

350
00:17:11,520 --> 00:17:12,640
query name

351
00:17:12,640 --> 00:17:15,359
so this allows you to specify a set of

352
00:17:15,359 --> 00:17:16,959
hosts

353
00:17:16,959 --> 00:17:19,919
different hosts that supported the

354
00:17:19,919 --> 00:17:21,199
services that had a

355
00:17:21,199 --> 00:17:23,919
common name and all of a sudden you're

356
00:17:23,919 --> 00:17:24,720
creating this

357
00:17:24,720 --> 00:17:27,199
extra bundle of semantics about that

358
00:17:27,199 --> 00:17:28,240
name

359
00:17:28,240 --> 00:17:32,000
because now www.example.com can be a

360
00:17:32,000 --> 00:17:35,360
separate machine providing a service in

361
00:17:35,360 --> 00:17:36,960
the name of

362
00:17:36,960 --> 00:17:39,840
this supposed host example.com and you

363
00:17:39,840 --> 00:17:42,000
can have a number of these things with

364
00:17:42,000 --> 00:17:43,679
different services

365
00:17:43,679 --> 00:17:46,160
all mapping to different ip addresses

366
00:17:46,160 --> 00:17:48,400
supporting a host service for the common

367
00:17:48,400 --> 00:17:49,520
name

368
00:17:49,520 --> 00:17:53,039
so all of a sudden i've got

369
00:17:53,039 --> 00:17:55,000
greater capacity i've got service

370
00:17:55,000 --> 00:17:57,120
disambiguation

371
00:17:57,120 --> 00:17:59,520
but why don't i make the dns work harder

372
00:17:59,520 --> 00:18:01,200
well obviously why not

373
00:18:01,200 --> 00:18:04,880
because i can so why don't i include the

374
00:18:04,880 --> 00:18:07,280
name in the protocol exchange itself

375
00:18:07,280 --> 00:18:10,559
hi host i want i've got a transaction

376
00:18:10,559 --> 00:18:12,280
for

377
00:18:12,280 --> 00:18:15,280
www.example.com says the application

378
00:18:15,280 --> 00:18:16,799
now the first one to do that was

379
00:18:16,799 --> 00:18:19,200
actually electronic mail

380
00:18:19,200 --> 00:18:21,840
because one of the early needs was to

381
00:18:21,840 --> 00:18:22,320
provide

382
00:18:22,320 --> 00:18:25,200
mail when the host was down so we had

383
00:18:25,200 --> 00:18:27,440
secondary mx servers

384
00:18:27,440 --> 00:18:29,760
that uh basically provided a mail

385
00:18:29,760 --> 00:18:32,160
service for a host that wasn't there

386
00:18:32,160 --> 00:18:34,240
because don't forget in the days before

387
00:18:34,240 --> 00:18:35,919
gmail if anyone's still old and

388
00:18:35,919 --> 00:18:37,520
anyone's still old enough to remember

389
00:18:37,520 --> 00:18:39,840
that in the news before gmail

390
00:18:39,840 --> 00:18:41,840
a lot of us ran our own mail hosts their

391
00:18:41,840 --> 00:18:43,360
own send mail

392
00:18:43,360 --> 00:18:45,760
and maybe we were on dial-up remember

393
00:18:45,760 --> 00:18:46,400
that

394
00:18:46,400 --> 00:18:48,320
and so all of a sudden when you weren't

395
00:18:48,320 --> 00:18:49,440
there

396
00:18:49,440 --> 00:18:51,200
you didn't want to back the mail up at

397
00:18:51,200 --> 00:18:53,520
the center you actually wanted to back

398
00:18:53,520 --> 00:18:55,120
the mail up at a relay host

399
00:18:55,120 --> 00:18:59,440
closer to you and so adding mx records

400
00:18:59,440 --> 00:19:02,559
allowed you to create those relay hosts

401
00:19:02,559 --> 00:19:04,320
and the issue was that when i connected

402
00:19:04,320 --> 00:19:07,600
to a machine that was my mail server

403
00:19:07,600 --> 00:19:10,880
in the application itself

404
00:19:10,880 --> 00:19:13,440
i would be able to say i want to send

405
00:19:13,440 --> 00:19:14,240
mail to

406
00:19:14,240 --> 00:19:17,200
and you specify the name of the server

407
00:19:17,200 --> 00:19:18,720
in the application

408
00:19:18,720 --> 00:19:21,280
so service names actually started to

409
00:19:21,280 --> 00:19:22,400
migrate into

410
00:19:22,400 --> 00:19:25,840
application attributes

411
00:19:26,400 --> 00:19:28,720
um so they're abstractions weren't they

412
00:19:28,720 --> 00:19:30,480
they allowed orchestration of multiple

413
00:19:30,480 --> 00:19:31,840
servers

414
00:19:31,840 --> 00:19:35,120
now some of these we loaded through

415
00:19:35,120 --> 00:19:38,240
the dns itself so the common service

416
00:19:38,240 --> 00:19:40,320
name which is no longer a host name

417
00:19:40,320 --> 00:19:43,679
then had a variety of attributes

418
00:19:43,679 --> 00:19:45,919
through different resource records ns

419
00:19:45,919 --> 00:19:48,559
records mx records and such

420
00:19:48,559 --> 00:19:50,640
but then we thought well actually what

421
00:19:50,640 --> 00:19:52,160
i'd like to do

422
00:19:52,160 --> 00:19:55,840
is move the service for a host

423
00:19:55,840 --> 00:19:59,360
to a different name and we invented

424
00:19:59,360 --> 00:20:02,320
the alias record the canonical name

425
00:20:02,320 --> 00:20:04,400
record or the cname record

426
00:20:04,400 --> 00:20:06,480
whereas most of these service names are

427
00:20:06,480 --> 00:20:07,600
implicit the a

428
00:20:07,600 --> 00:20:09,440
and quad a records which give you ip

429
00:20:09,440 --> 00:20:11,360
addresses simply says

430
00:20:11,360 --> 00:20:13,520
the service delivery host is mapped

431
00:20:13,520 --> 00:20:16,799
against this service name

432
00:20:16,799 --> 00:20:19,360
so this allows us to sort of think about

433
00:20:19,360 --> 00:20:20,000
what a name

434
00:20:20,000 --> 00:20:23,520
is now it started off

435
00:20:23,520 --> 00:20:26,880
by effectively taking the idea of the

436
00:20:26,880 --> 00:20:28,880
name of a host

437
00:20:28,880 --> 00:20:30,559
a computer the interface of that

438
00:20:30,559 --> 00:20:33,200
computer and actually abstracting that

439
00:20:33,200 --> 00:20:35,440
to a university visible service point

440
00:20:35,440 --> 00:20:36,960
identifier

441
00:20:36,960 --> 00:20:40,720
it's the name of a service not a host

442
00:20:40,720 --> 00:20:42,799
but we've also used a whole bunch of

443
00:20:42,799 --> 00:20:44,880
other names

444
00:20:44,880 --> 00:20:47,520
there are a whole set probably

445
00:20:47,520 --> 00:20:49,760
outnumbering human names these days of

446
00:20:49,760 --> 00:20:51,360
transient labels

447
00:20:51,360 --> 00:20:53,679
um dynamically generated names of

448
00:20:53,679 --> 00:20:55,679
various forms and sorts

449
00:20:55,679 --> 00:20:58,000
where it's just a temporal name here's a

450
00:20:58,000 --> 00:20:59,760
token here's a machine over there that

451
00:20:59,760 --> 00:21:00,840
for the next 10

452
00:21:00,840 --> 00:21:03,760
15 micro seconds

453
00:21:03,760 --> 00:21:05,200
might well serve as a point of

454
00:21:05,200 --> 00:21:08,000
rendezvous with what you're trying to do

455
00:21:08,000 --> 00:21:10,080
ns records the name is a bridging point

456
00:21:10,080 --> 00:21:12,640
to glue together the dns database

457
00:21:12,640 --> 00:21:14,400
or oddly enough you can think of the

458
00:21:14,400 --> 00:21:17,120
name as a piece of microcode

459
00:21:17,120 --> 00:21:18,880
and think of both recursive and

460
00:21:18,880 --> 00:21:21,039
authoritative servers

461
00:21:21,039 --> 00:21:24,159
as microcode interpreters

462
00:21:24,159 --> 00:21:27,440
and so the name directs

463
00:21:27,440 --> 00:21:30,480
the server to do certain things

464
00:21:30,480 --> 00:21:34,480
now in theory it's a database lookup key

465
00:21:34,480 --> 00:21:38,000
and in theory this is a database lookup

466
00:21:38,000 --> 00:21:40,400
but quite frankly using various dns

467
00:21:40,400 --> 00:21:41,840
libraries even today

468
00:21:41,840 --> 00:21:45,280
you can create dynamic labels that cause

469
00:21:45,280 --> 00:21:46,960
particular actions on the name of the

470
00:21:46,960 --> 00:21:48,320
server because

471
00:21:48,320 --> 00:21:51,679
it's microcode it's just name is code

472
00:21:51,679 --> 00:21:53,600
so a name is actually all of that and

473
00:21:53,600 --> 00:21:56,480
more just to add to the confusion

474
00:21:56,480 --> 00:21:58,799
and so how do we then do service

475
00:21:58,799 --> 00:22:00,240
identification

476
00:22:00,240 --> 00:22:02,080
and i suppose the observation is that

477
00:22:02,080 --> 00:22:03,360
every time we've looked at this and

478
00:22:03,360 --> 00:22:05,520
we've looked at this a lot of times

479
00:22:05,520 --> 00:22:07,760
we propose a new generic mechanism that

480
00:22:07,760 --> 00:22:09,600
can be used with any application

481
00:22:09,600 --> 00:22:13,280
wonderful but each time we invent this

482
00:22:13,280 --> 00:22:16,080
one application uses that and we move on

483
00:22:16,080 --> 00:22:18,320
so every application uses a

484
00:22:18,320 --> 00:22:21,360
unique quite specific but generic

485
00:22:21,360 --> 00:22:24,799
uh dns solution as to how to do this so

486
00:22:24,799 --> 00:22:28,960
when we map names to services we can

487
00:22:28,960 --> 00:22:30,640
place the information in the value part

488
00:22:30,640 --> 00:22:32,400
of this key value store

489
00:22:32,400 --> 00:22:35,039
and you know the service the svc record

490
00:22:35,039 --> 00:22:36,559
is a classic example

491
00:22:36,559 --> 00:22:38,000
of trying to place rendezvous

492
00:22:38,000 --> 00:22:40,000
information in the right hand side

493
00:22:40,000 --> 00:22:43,520
of the dns in the resolution side or

494
00:22:43,520 --> 00:22:44,960
we can play with the left hand side the

495
00:22:44,960 --> 00:22:47,520
query name and we can use the dns to go

496
00:22:47,520 --> 00:22:49,520
you meant to go to food.example.com the

497
00:22:49,520 --> 00:22:51,760
services bar.example.com

498
00:22:51,760 --> 00:22:54,480
in other words map the service name

499
00:22:54,480 --> 00:22:57,280
through the left hand side

500
00:22:57,280 --> 00:22:59,600
or we can modify the query type itself

501
00:22:59,600 --> 00:23:01,280
to have different application

502
00:23:01,280 --> 00:23:03,919
data and actually don't query for an a

503
00:23:03,919 --> 00:23:05,840
or a quad a record query for

504
00:23:05,840 --> 00:23:10,080
one of these so the first time we found

505
00:23:10,080 --> 00:23:12,480
one of these i'm not sure what was in

506
00:23:12,480 --> 00:23:14,720
the head of the folk who designed it

507
00:23:14,720 --> 00:23:18,159
but in the people who came subsequently

508
00:23:18,159 --> 00:23:21,360
this was the texas chainsaw massacre of

509
00:23:21,360 --> 00:23:24,480
text records the universal thing

510
00:23:24,480 --> 00:23:28,000
because text records is just that it's

511
00:23:28,000 --> 00:23:30,640
text it's ascii strings i can put

512
00:23:30,640 --> 00:23:31,760
anything there

513
00:23:31,760 --> 00:23:35,440
i can hash anything there i could

514
00:23:35,440 --> 00:23:37,919
stuff most things in there and lots of

515
00:23:37,919 --> 00:23:39,440
people have seen this

516
00:23:39,440 --> 00:23:42,559
because the text record itself is just

517
00:23:42,559 --> 00:23:45,520
a string of data a value and if the

518
00:23:45,520 --> 00:23:46,720
application says

519
00:23:46,720 --> 00:23:48,960
structure the value would say field one

520
00:23:48,960 --> 00:23:51,039
equals value one field two equals value

521
00:23:51,039 --> 00:23:52,880
two just put that in a text record

522
00:23:52,880 --> 00:23:55,919
that's fine the problem is of course

523
00:23:55,919 --> 00:23:56,559
that

524
00:23:56,559 --> 00:24:00,480
if everyone used text records then

525
00:24:00,480 --> 00:24:02,799
excuse me you have to make sex records

526
00:24:02,799 --> 00:24:04,320
which are the union of all these

527
00:24:04,320 --> 00:24:05,200
applications

528
00:24:05,200 --> 00:24:07,360
and disambiguating which text record is

529
00:24:07,360 --> 00:24:08,799
meant for which application

530
00:24:08,799 --> 00:24:11,919
can be an enormous problem but you know

531
00:24:11,919 --> 00:24:13,760
if the thought is no matter what you

532
00:24:13,760 --> 00:24:16,000
want to do you can do it in the dns

533
00:24:16,000 --> 00:24:18,799
then the next thought is no matter what

534
00:24:18,799 --> 00:24:20,480
you thought you wanted to do

535
00:24:20,480 --> 00:24:22,880
use a text record because you know you

536
00:24:22,880 --> 00:24:24,159
can get away with it

537
00:24:24,159 --> 00:24:26,000
text records are just the universal

538
00:24:26,000 --> 00:24:27,679
garbage bin of the dns

539
00:24:27,679 --> 00:24:29,600
and for a good reason they're completely

540
00:24:29,600 --> 00:24:30,960
unstructured

541
00:24:30,960 --> 00:24:32,559
now there were some various attempts to

542
00:24:32,559 --> 00:24:34,320
do this and and the first time

543
00:24:34,320 --> 00:24:36,960
we sort of did this in a structured way

544
00:24:36,960 --> 00:24:39,360
we thought we would actually give a name

545
00:24:39,360 --> 00:24:41,840
to a structure of a text record and this

546
00:24:41,840 --> 00:24:44,000
was the sender policy framework for mail

547
00:24:44,000 --> 00:24:47,360
we call them spf records in truth

548
00:24:47,360 --> 00:24:49,840
they're just text records with a

549
00:24:49,840 --> 00:24:51,919
particular structure

550
00:24:51,919 --> 00:24:54,320
and you see this attempt to be generic

551
00:24:54,320 --> 00:24:56,159
i'm sorry to be specific in a generic

552
00:24:56,159 --> 00:24:57,039
solution

553
00:24:57,039 --> 00:24:59,360
so the first part of this you actually

554
00:24:59,360 --> 00:25:00,159
have the

555
00:25:00,159 --> 00:25:04,480
vehicles spf 1 and then a bunch of

556
00:25:04,480 --> 00:25:08,480
fields and values interestingly

557
00:25:08,480 --> 00:25:11,600
the the recommended syntax is use an

558
00:25:11,600 --> 00:25:12,320
equal sign

559
00:25:12,320 --> 00:25:15,440
first but then use colons because you

560
00:25:15,440 --> 00:25:17,360
know consistency is great

561
00:25:17,360 --> 00:25:20,640
um what i also like in spf to actually

562
00:25:20,640 --> 00:25:22,640
really make this incredibly evil

563
00:25:22,640 --> 00:25:25,440
uh is the include function uh which

564
00:25:25,440 --> 00:25:27,760
basically says

565
00:25:27,760 --> 00:25:31,039
go and include all this data and what i

566
00:25:31,039 --> 00:25:32,960
didn't do is include

567
00:25:32,960 --> 00:25:34,880
example.com because as soon as you

568
00:25:34,880 --> 00:25:36,960
actually start to do domain names

569
00:25:36,960 --> 00:25:39,520
in the value side of a resource record

570
00:25:39,520 --> 00:25:41,200
as soon as you do that

571
00:25:41,200 --> 00:25:44,880
you admit the potential to create loops

572
00:25:44,880 --> 00:25:47,919
inside resolution of names inside

573
00:25:47,919 --> 00:25:50,720
finding a value and the spf was actually

574
00:25:50,720 --> 00:25:52,240
one of the first as well

575
00:25:52,240 --> 00:25:54,880
that not only used the text record in a

576
00:25:54,880 --> 00:25:56,159
structured way

577
00:25:56,159 --> 00:25:59,919
but also used loops in a well

578
00:25:59,919 --> 00:26:03,679
used loops in a whatever way

579
00:26:03,840 --> 00:26:05,279
earlier than that though and as an

580
00:26:05,279 --> 00:26:07,840
example of doing it probably a little

581
00:26:07,840 --> 00:26:11,440
bit better was the mx record where here

582
00:26:11,440 --> 00:26:14,559
the information you want to give is

583
00:26:14,559 --> 00:26:16,480
actually structured by the name of the

584
00:26:16,480 --> 00:26:17,919
resource record so

585
00:26:17,919 --> 00:26:19,600
instead of just querying for a text

586
00:26:19,600 --> 00:26:21,120
record you actually query for a

587
00:26:21,120 --> 00:26:22,480
particular structure record

588
00:26:22,480 --> 00:26:25,039
mx and yes there are names on the right

589
00:26:25,039 --> 00:26:26,480
hand side

590
00:26:26,480 --> 00:26:29,120
but the way they disambiguated and

591
00:26:29,120 --> 00:26:30,799
stopped looping

592
00:26:30,799 --> 00:26:32,480
was that the names on the right hand

593
00:26:32,480 --> 00:26:33,840
side are not

594
00:26:33,840 --> 00:26:37,919
mx records themselves to query the value

595
00:26:37,919 --> 00:26:40,320
of example.org for an mx

596
00:26:40,320 --> 00:26:43,640
you get back in this example

597
00:26:43,640 --> 00:26:45,440
smtp.example.org

598
00:26:45,440 --> 00:26:48,640
but what you don't do is query smtp

599
00:26:48,640 --> 00:26:50,559
example.org for an mx you're not trying

600
00:26:50,559 --> 00:26:51,600
to resolve that

601
00:26:51,600 --> 00:26:54,960
you're trying to actually find its ip

602
00:26:54,960 --> 00:26:56,159
address

603
00:26:56,159 --> 00:26:58,640
and so the mx record doesn't loop on

604
00:26:58,640 --> 00:27:00,799
mx's which is probably a really really

605
00:27:00,799 --> 00:27:02,400
really good thing

606
00:27:02,400 --> 00:27:04,559
and so here is an example where you're

607
00:27:04,559 --> 00:27:06,159
trying to say that

608
00:27:06,159 --> 00:27:08,960
if i'm going to send mail to example.org

609
00:27:08,960 --> 00:27:11,039
i'm going to send it over to

610
00:27:11,039 --> 00:27:15,120
the name smtp1 whereas i'm going to send

611
00:27:15,120 --> 00:27:15,919
mail to

612
00:27:15,919 --> 00:27:19,120
sorry if i'm going to send mail to

613
00:27:19,279 --> 00:27:21,600
i'd go to www.example.org if i'm going

614
00:27:21,600 --> 00:27:23,520
to send mail to example.org

615
00:27:23,520 --> 00:27:26,880
different name i said mail elsewhere

616
00:27:26,880 --> 00:27:28,880
and that's certainly possible in mx

617
00:27:28,880 --> 00:27:30,880
records

618
00:27:30,880 --> 00:27:33,679
c names and d names i always thought

619
00:27:33,679 --> 00:27:34,159
were

620
00:27:34,159 --> 00:27:37,200
bizarre this

621
00:27:37,200 --> 00:27:40,080
is actually creating aliases in the

622
00:27:40,080 --> 00:27:41,600
resolution

623
00:27:41,600 --> 00:27:45,200
of names not in the name space itself

624
00:27:45,200 --> 00:27:47,120
it's it's in the resolution

625
00:27:47,120 --> 00:27:49,039
so you have two perfectly normal trees

626
00:27:49,039 --> 00:27:50,159
here in this example

627
00:27:50,159 --> 00:27:52,960
which we borrowed from slide 37 of last

628
00:27:52,960 --> 00:27:55,120
time if you were listening carefully

629
00:27:55,120 --> 00:27:58,159
there'll be a test later

630
00:27:58,159 --> 00:28:00,840
cnames and d names are relatively

631
00:28:00,840 --> 00:28:02,000
similar

632
00:28:02,000 --> 00:28:06,159
except that c names

633
00:28:06,159 --> 00:28:09,360
stop at that name and resume

634
00:28:09,360 --> 00:28:12,559
over there so it's a canonical name for

635
00:28:12,559 --> 00:28:13,039
a

636
00:28:13,039 --> 00:28:16,240
terminal name there is nothing

637
00:28:16,240 --> 00:28:19,679
below a c name no matter what

638
00:28:19,679 --> 00:28:21,679
so when you get to a c name record

639
00:28:21,679 --> 00:28:23,600
that's it

640
00:28:23,600 --> 00:28:27,120
whereas in a d name you resume

641
00:28:27,120 --> 00:28:30,159
name resolution at the point below the d

642
00:28:30,159 --> 00:28:33,760
name target so the d name

643
00:28:33,760 --> 00:28:36,880
is aliases for i said zones or at least

644
00:28:36,880 --> 00:28:38,880
the slide last weeks at last time said

645
00:28:38,880 --> 00:28:39,919
zones

646
00:28:39,919 --> 00:28:42,640
no it's actually aliases for the entire

647
00:28:42,640 --> 00:28:44,720
sub tree

648
00:28:44,720 --> 00:28:46,640
so anything below a d name on the left

649
00:28:46,640 --> 00:28:48,159
hand side isn't reachable

650
00:28:48,159 --> 00:28:51,440
nothing there but the on the

651
00:28:51,440 --> 00:28:53,919
left hand side on the right bit sorry on

652
00:28:53,919 --> 00:28:55,600
below on the right hand side i'm still

653
00:28:55,600 --> 00:28:56,880
tired

654
00:28:56,880 --> 00:29:00,640
the d name exposes the entire sub tree

655
00:29:00,640 --> 00:29:04,159
in a c name that's it both on the left

656
00:29:04,159 --> 00:29:05,440
and the right hand side

657
00:29:05,440 --> 00:29:09,120
there is nothing they exist alone

658
00:29:09,120 --> 00:29:10,880
they can't be at the apex there's

659
00:29:10,880 --> 00:29:13,760
nothing below it they are terminal names

660
00:29:13,760 --> 00:29:15,440
i suppose that's the distinction between

661
00:29:15,440 --> 00:29:16,880
a c name and a d name

662
00:29:16,880 --> 00:29:18,880
a d name is an alias higher up in the

663
00:29:18,880 --> 00:29:20,640
tree or potentially so

664
00:29:20,640 --> 00:29:23,760
a c name is it is an alias

665
00:29:23,760 --> 00:29:26,240
for terminal labels there is nothing

666
00:29:26,240 --> 00:29:28,159
below them

667
00:29:28,159 --> 00:29:31,919
even so names on the right hand side

668
00:29:31,919 --> 00:29:35,120
are a problem and certainly here are

669
00:29:35,120 --> 00:29:37,760
some some simple examples to

670
00:29:37,760 --> 00:29:39,440
basically illustrate the fact that dog

671
00:29:39,440 --> 00:29:41,520
and cat can be seen am to each other

672
00:29:41,520 --> 00:29:44,559
and the only way of stopping this is for

673
00:29:44,559 --> 00:29:46,399
the resolver to say look enough is

674
00:29:46,399 --> 00:29:47,039
enough

675
00:29:47,039 --> 00:29:50,159
stop stop giving me a hard time

676
00:29:50,159 --> 00:29:52,559
because while it might be easy to detect

677
00:29:52,559 --> 00:29:53,760
a loop of two

678
00:29:53,760 --> 00:29:56,159
it's incredibly challenging to detect a

679
00:29:56,159 --> 00:29:57,520
loop of a hundred

680
00:29:57,520 --> 00:30:00,399
say and there are two problems with

681
00:30:00,399 --> 00:30:01,919
these kinds of loops

682
00:30:01,919 --> 00:30:04,159
the resolver might well make cache

683
00:30:04,159 --> 00:30:05,919
entries for every single entry and just

684
00:30:05,919 --> 00:30:07,679
keep on flicking over again and again

685
00:30:07,679 --> 00:30:08,559
and again

686
00:30:08,559 --> 00:30:10,080
and of course it takes an awfully long

687
00:30:10,080 --> 00:30:12,640
time for the poor old resolver to figure

688
00:30:12,640 --> 00:30:14,399
out that it's inside a loop

689
00:30:14,399 --> 00:30:16,080
and so this is one case where the

690
00:30:16,080 --> 00:30:17,600
structure of the name

691
00:30:17,600 --> 00:30:20,320
space itself can cause problems as soon

692
00:30:20,320 --> 00:30:22,000
as a triggering query

693
00:30:22,000 --> 00:30:26,080
exercises that looping structure

694
00:30:26,559 --> 00:30:30,080
but you know we can do more

695
00:30:30,080 --> 00:30:31,760
and it's hard to say whether the nafta

696
00:30:31,760 --> 00:30:33,279
was just fashionable

697
00:30:33,279 --> 00:30:36,000
or a demonic invention of incredible

698
00:30:36,000 --> 00:30:37,120
evilness

699
00:30:37,120 --> 00:30:39,679
but it was certainly cute um what

700
00:30:39,679 --> 00:30:41,279
happens if we take a text value

701
00:30:41,279 --> 00:30:43,039
and throw it into a regular expression

702
00:30:43,039 --> 00:30:44,640
parser and

703
00:30:44,640 --> 00:30:47,279
inside the dns actually put that regular

704
00:30:47,279 --> 00:30:48,480
expression

705
00:30:48,480 --> 00:30:51,279
and i've taken this example uh from the

706
00:30:51,279 --> 00:30:53,679
documentation but let me assure you

707
00:30:53,679 --> 00:30:55,919
these are regular expressions and there

708
00:30:55,919 --> 00:30:58,559
is more than enough rope

709
00:30:58,559 --> 00:31:01,039
more than enough rope to do anything you

710
00:31:01,039 --> 00:31:02,799
want

711
00:31:02,799 --> 00:31:05,440
the challenge is to do the towers of

712
00:31:05,440 --> 00:31:06,559
hanoi

713
00:31:06,559 --> 00:31:10,240
in napta records go forth um

714
00:31:10,240 --> 00:31:11,760
it's hard to sort of talk about this in

715
00:31:11,760 --> 00:31:13,919
much detail but what it's saying is

716
00:31:13,919 --> 00:31:15,360
if you look up a nafta you get a

717
00:31:15,360 --> 00:31:17,440
priority and you get

718
00:31:17,440 --> 00:31:19,679
effectively an application directive and

719
00:31:19,679 --> 00:31:21,039
then you get this weird thing if you're

720
00:31:21,039 --> 00:31:21,840
saying

721
00:31:21,840 --> 00:31:24,640
take the application string you thought

722
00:31:24,640 --> 00:31:26,480
you were looking for

723
00:31:26,480 --> 00:31:29,760
and substitute the following

724
00:31:29,760 --> 00:31:32,720
so here's one that was borrowed for that

725
00:31:32,720 --> 00:31:34,960
early attempt

726
00:31:34,960 --> 00:31:38,559
to borrow telephone numbers into the dns

727
00:31:38,559 --> 00:31:40,240
enum which we thought at the time was

728
00:31:40,240 --> 00:31:42,159
incredibly clever and the

729
00:31:42,159 --> 00:31:44,720
generic solution we had was take a

730
00:31:44,720 --> 00:31:46,720
reverse telephone number

731
00:31:46,720 --> 00:31:49,440
plus seven one seven oh five five five

732
00:31:49,440 --> 00:31:50,080
one

733
00:31:50,080 --> 00:31:53,440
two one two and translate it

734
00:31:53,440 --> 00:31:56,799
using only the dns into

735
00:31:56,799 --> 00:31:59,760
a sip call to an alias called

736
00:31:59,760 --> 00:32:00,960
information

737
00:32:00,960 --> 00:32:04,399
from the server tele2 in sweden

738
00:32:04,399 --> 00:32:08,320
okay i wonder if anyone used it

739
00:32:08,320 --> 00:32:09,760
maybe they did at the time i think it's

740
00:32:09,760 --> 00:32:11,919
fallen largely into disuse

741
00:32:11,919 --> 00:32:14,960
uh it really did get and push the dns an

742
00:32:14,960 --> 00:32:16,559
awfully long way

743
00:32:16,559 --> 00:32:19,600
so generically what's going on well

744
00:32:19,600 --> 00:32:22,080
you can put loops in the dns in all

745
00:32:22,080 --> 00:32:23,200
kinds of places

746
00:32:23,200 --> 00:32:25,840
in all kinds of ways you can actually

747
00:32:25,840 --> 00:32:27,840
put loops outside of the dns database

748
00:32:27,840 --> 00:32:29,039
structure and put it in the name

749
00:32:29,039 --> 00:32:30,559
referencing structure

750
00:32:30,559 --> 00:32:32,080
so in essence what we're doing at this

751
00:32:32,080 --> 00:32:34,240
particular point is doing forwarder

752
00:32:34,240 --> 00:32:35,120
clauses

753
00:32:35,120 --> 00:32:37,039
hey i can't do anything go and speak to

754
00:32:37,039 --> 00:32:39,120
x and x says i can't do anything here's

755
00:32:39,120 --> 00:32:40,159
a forward statement

756
00:32:40,159 --> 00:32:43,039
go and speak to y and y says i can't do

757
00:32:43,039 --> 00:32:44,880
anything go and speak to

758
00:32:44,880 --> 00:32:48,000
x and all of a sudden you have

759
00:32:48,000 --> 00:32:51,519
loops inside the forwarding chains of

760
00:32:51,519 --> 00:32:52,960
trying to resolve

761
00:32:52,960 --> 00:32:55,600
but the more common form of loop is

762
00:32:55,600 --> 00:32:58,399
actually in in the dns data itself

763
00:32:58,399 --> 00:33:01,679
um and you can certainly do ns record

764
00:33:01,679 --> 00:33:02,480
loops

765
00:33:02,480 --> 00:33:06,159
quite easily uh normally the parent zone

766
00:33:06,159 --> 00:33:07,919
contains the glue records of the name

767
00:33:07,919 --> 00:33:10,640
servers but what if you don't the name

768
00:33:10,640 --> 00:33:12,720
server from my domain

769
00:33:12,720 --> 00:33:16,240
is dog.com go figure

770
00:33:16,240 --> 00:33:20,000
and in dog it says well that's cool

771
00:33:20,000 --> 00:33:22,399
but the name server for my name is cat

772
00:33:22,399 --> 00:33:23,360
but i'm not going to tell you it's

773
00:33:23,360 --> 00:33:24,159
address

774
00:33:24,159 --> 00:33:26,880
and cat says hey the name server for my

775
00:33:26,880 --> 00:33:27,360
name

776
00:33:27,360 --> 00:33:30,480
is over in dog all of a sudden

777
00:33:30,480 --> 00:33:34,000
you've got loops inside the ns structure

778
00:33:34,000 --> 00:33:36,080
and again if not handled sensibly by the

779
00:33:36,080 --> 00:33:37,840
resolver you can follow that loop

780
00:33:37,840 --> 00:33:38,720
forever

781
00:33:38,720 --> 00:33:40,799
and so some ways resolvers have to make

782
00:33:40,799 --> 00:33:42,080
sure that they're not

783
00:33:42,080 --> 00:33:44,880
re-tracking over resolution tasks when

784
00:33:44,880 --> 00:33:46,159
they're trying to figure out

785
00:33:46,159 --> 00:33:50,000
the names of name servers and equally

786
00:33:50,000 --> 00:33:52,720
c names d names and naptas can loop like

787
00:33:52,720 --> 00:33:56,159
crazy because it's simple

788
00:33:56,399 --> 00:33:58,159
now we get onto the last part of this

789
00:33:58,159 --> 00:34:00,000
and actually look at now trying to make

790
00:34:00,000 --> 00:34:01,360
the dns

791
00:34:01,360 --> 00:34:04,320
offload a whole bunch of application

792
00:34:04,320 --> 00:34:05,679
level data

793
00:34:05,679 --> 00:34:08,000
and simply load this into the dns and

794
00:34:08,000 --> 00:34:09,280
make the dns

795
00:34:09,280 --> 00:34:12,480
not an alias for a name but a service

796
00:34:12,480 --> 00:34:15,839
rendezvous mechanism so here what you're

797
00:34:15,839 --> 00:34:17,440
trying to say is

798
00:34:17,440 --> 00:34:21,520
i want to connect to sip

799
00:34:21,520 --> 00:34:24,719
the sip port using tcp of example.com

800
00:34:24,719 --> 00:34:26,159
you've been quite specific about your

801
00:34:26,159 --> 00:34:27,440
intention

802
00:34:27,440 --> 00:34:30,719
and in the service record you can use

803
00:34:30,719 --> 00:34:33,199
leading underscores which in host names

804
00:34:33,199 --> 00:34:34,960
is a no-no

805
00:34:34,960 --> 00:34:37,199
host names don't allow underscores and

806
00:34:37,199 --> 00:34:39,119
certainly not leading underscores

807
00:34:39,119 --> 00:34:42,399
so underscore sip underscore tcp talks

808
00:34:42,399 --> 00:34:43,918
about a service record

809
00:34:43,918 --> 00:34:48,399
which is in particular meant to be used

810
00:34:48,399 --> 00:34:52,239
for the sip port on a tcp connection

811
00:34:52,239 --> 00:34:55,520
to the named host and here

812
00:34:55,520 --> 00:34:58,640
is the service that actually provides

813
00:34:58,640 --> 00:34:59,760
that service

814
00:34:59,760 --> 00:35:02,960
for example.com go and speak

815
00:35:02,960 --> 00:35:05,599
using that port and that protocol to

816
00:35:05,599 --> 00:35:07,440
someone else

817
00:35:07,440 --> 00:35:10,240
and so it's a subtle form of alias where

818
00:35:10,240 --> 00:35:12,560
it's not the name that is aliased

819
00:35:12,560 --> 00:35:15,640
the service is aliased so i can take

820
00:35:15,640 --> 00:35:17,359
example.com

821
00:35:17,359 --> 00:35:19,280
and i can alias my sip service to

822
00:35:19,280 --> 00:35:22,240
someone in theory i could alias my http

823
00:35:22,240 --> 00:35:23,760
service to someone else i could

824
00:35:23,760 --> 00:35:25,760
use my dane service to someone and i

825
00:35:25,760 --> 00:35:27,440
could alias

826
00:35:27,440 --> 00:35:30,480
the name to a whole bunch of other names

827
00:35:30,480 --> 00:35:33,440
simply by service protocol and port

828
00:35:33,440 --> 00:35:35,520
while having the common name

829
00:35:35,520 --> 00:35:38,240
simply as you will the guiding point so

830
00:35:38,240 --> 00:35:40,320
the right hand side host now

831
00:35:40,320 --> 00:35:42,240
is the canonical name but unlike a c

832
00:35:42,240 --> 00:35:43,440
name or a d name

833
00:35:43,440 --> 00:35:45,359
no matter what you're trying to do look

834
00:35:45,359 --> 00:35:46,560
there

835
00:35:46,560 --> 00:35:49,200
this is if you're trying to use sip on

836
00:35:49,200 --> 00:35:50,160
tcp

837
00:35:50,160 --> 00:35:52,000
look there if you're trying to do

838
00:35:52,000 --> 00:35:53,359
anything else

839
00:35:53,359 --> 00:35:55,680
i don't know i'm not the record to talk

840
00:35:55,680 --> 00:35:56,880
about everything else

841
00:35:56,880 --> 00:36:00,000
so it's quite a specific record um

842
00:36:00,000 --> 00:36:02,160
but oddly enough every generic solution

843
00:36:02,160 --> 00:36:03,839
is never generic enough

844
00:36:03,839 --> 00:36:06,160
and when we looked at c names and we

845
00:36:06,160 --> 00:36:08,320
couldn't do an alias at the root

846
00:36:08,320 --> 00:36:10,560
because the apex sorry because you can't

847
00:36:10,560 --> 00:36:13,040
alias at the apex folk wanted to do that

848
00:36:13,040 --> 00:36:16,079
but i want to do this so we experimented

849
00:36:16,079 --> 00:36:18,160
around with various permutations of what

850
00:36:18,160 --> 00:36:18,800
i would call

851
00:36:18,800 --> 00:36:21,520
a name and a name was an alias that

852
00:36:21,520 --> 00:36:22,160
included

853
00:36:22,160 --> 00:36:25,760
aliasing at the apex um

854
00:36:25,760 --> 00:36:27,839
there were alternatives for service

855
00:36:27,839 --> 00:36:29,760
records alt servers

856
00:36:29,760 --> 00:36:32,000
and then when we looked at encrypted snr

857
00:36:32,000 --> 00:36:34,240
we wanted to put the keys somewhere and

858
00:36:34,240 --> 00:36:37,920
these are all attributes of a rendezvous

859
00:36:37,920 --> 00:36:40,720
trying to get to somewhere and so what

860
00:36:40,720 --> 00:36:42,800
if we try and make this generic

861
00:36:42,800 --> 00:36:45,280
and take all of these things and put it

862
00:36:45,280 --> 00:36:48,320
in a generic service form which became

863
00:36:48,320 --> 00:36:51,520
service b and service b

864
00:36:51,520 --> 00:36:53,599
looks a little bit like a structured

865
00:36:53,599 --> 00:36:54,880
text record again

866
00:36:54,880 --> 00:36:58,400
yay come back spf where now we've got

867
00:36:58,400 --> 00:37:01,760
two forms of a service record this port

868
00:37:01,760 --> 00:37:05,280
this protocol this host has an alias

869
00:37:05,280 --> 00:37:06,000
form

870
00:37:06,000 --> 00:37:10,079
to somewhere else just this port in this

871
00:37:10,079 --> 00:37:11,040
protocol

872
00:37:11,040 --> 00:37:14,560
and somewhere else now has

873
00:37:14,560 --> 00:37:17,280
a whole bunch of attributes that talk

874
00:37:17,280 --> 00:37:19,280
about the application level protocol

875
00:37:19,280 --> 00:37:19,760
name

876
00:37:19,760 --> 00:37:21,680
the port name the keys name the this

877
00:37:21,680 --> 00:37:23,680
name so all of a sudden

878
00:37:23,680 --> 00:37:27,119
you can say that flu.foo colon api

879
00:37:27,119 --> 00:37:28,720
example.com

880
00:37:28,720 --> 00:37:31,920
and this port 8443 is alias to use

881
00:37:31,920 --> 00:37:34,560
an application level protocol called bar

882
00:37:34,560 --> 00:37:36,400
and service endpoints offered on this

883
00:37:36,400 --> 00:37:37,040
host

884
00:37:37,040 --> 00:37:40,000
using this port etc and so now oddly

885
00:37:40,000 --> 00:37:40,640
enough

886
00:37:40,640 --> 00:37:42,880
all of the work that you would do

887
00:37:42,880 --> 00:37:44,079
somewhere else

888
00:37:44,079 --> 00:37:46,800
at the application level in redirections

889
00:37:46,800 --> 00:37:47,920
and other forms

890
00:37:47,920 --> 00:37:50,880
you can now do in the dns generic

891
00:37:50,880 --> 00:37:51,839
solution

892
00:37:51,839 --> 00:37:53,680
and of course it's only used in one

893
00:37:53,680 --> 00:37:55,200
particular context

894
00:37:55,200 --> 00:37:57,839
so you might just go there and this is

895
00:37:57,839 --> 00:38:00,320
service b for https which is currently

896
00:38:00,320 --> 00:38:01,920
being standardized or if

897
00:38:01,920 --> 00:38:04,079
it isn't already and it's the equivalent

898
00:38:04,079 --> 00:38:07,040
of service b for the https scheme

899
00:38:07,040 --> 00:38:08,880
and and now you get the full

900
00:38:08,880 --> 00:38:10,800
appreciation

901
00:38:10,800 --> 00:38:14,160
of what's going on here because if in

902
00:38:14,160 --> 00:38:16,880
first use you find an http header that

903
00:38:16,880 --> 00:38:19,359
had this record

904
00:38:19,359 --> 00:38:21,359
that there's an alt service field in the

905
00:38:21,359 --> 00:38:23,119
data that says

906
00:38:23,119 --> 00:38:25,359
well you've come to me but in future go

907
00:38:25,359 --> 00:38:26,880
to there

908
00:38:26,880 --> 00:38:29,359
you can eliminate that completely by

909
00:38:29,359 --> 00:38:31,359
simply saying in the dns

910
00:38:31,359 --> 00:38:34,240
if you wanted to go there you should go

911
00:38:34,240 --> 00:38:35,440
over here

912
00:38:35,440 --> 00:38:38,240
and have a whole bunch of aliases and so

913
00:38:38,240 --> 00:38:40,079
what we're doing now is actually making

914
00:38:40,079 --> 00:38:41,359
the dns

915
00:38:41,359 --> 00:38:44,720
not just map host names to

916
00:38:44,720 --> 00:38:47,839
host addresses we're now mapping

917
00:38:47,839 --> 00:38:50,880
your immediate intentions

918
00:38:50,880 --> 00:38:53,440
i want to use https to go to this

919
00:38:53,440 --> 00:38:54,960
service name

920
00:38:54,960 --> 00:38:57,680
this is my immediate intention into the

921
00:38:57,680 --> 00:38:59,359
dns telling you

922
00:38:59,359 --> 00:39:01,359
exactly what those service rendezvous

923
00:39:01,359 --> 00:39:02,800
mechanisms should be

924
00:39:02,800 --> 00:39:05,760
what protocols to use what ports to use

925
00:39:05,760 --> 00:39:07,440
what attributes you're going to use at

926
00:39:07,440 --> 00:39:08,800
the application level

927
00:39:08,800 --> 00:39:10,720
in order to make that connection work

928
00:39:10,720 --> 00:39:12,880
why do we do this

929
00:39:12,880 --> 00:39:15,200
because it's faster because all of a

930
00:39:15,200 --> 00:39:17,359
sudden i'm getting rid of that first

931
00:39:17,359 --> 00:39:18,960
look i'm getting rid of redirection to

932
00:39:18,960 --> 00:39:20,240
the application level

933
00:39:20,240 --> 00:39:22,640
by pushing stuff into the dns the theory

934
00:39:22,640 --> 00:39:23,920
goes

935
00:39:23,920 --> 00:39:26,400
and it's not always true that the dns

936
00:39:26,400 --> 00:39:28,400
can give you that rendezvous information

937
00:39:28,400 --> 00:39:32,160
much much faster but in some ways

938
00:39:32,160 --> 00:39:34,000
this is not the best of things and this

939
00:39:34,000 --> 00:39:35,599
is my lead i think into where wes

940
00:39:35,599 --> 00:39:37,359
is going to be i've used more than

941
00:39:37,359 --> 00:39:39,200
enough time i'm four minutes over

942
00:39:39,200 --> 00:39:41,920
dns is not secure and anything that is

943
00:39:41,920 --> 00:39:42,880
promiscuous

944
00:39:42,880 --> 00:39:45,040
and to dns is promiscuous no matter how

945
00:39:45,040 --> 00:39:46,160
we try

946
00:39:46,160 --> 00:39:48,960
is not completely private some

947
00:39:48,960 --> 00:39:50,000
information

948
00:39:50,000 --> 00:39:51,920
is always going to have to be public

949
00:39:51,920 --> 00:39:54,480
because this is public rendezvous

950
00:39:54,480 --> 00:39:57,119
and to what extent if now we're saying i

951
00:39:57,119 --> 00:39:57,760
just want

952
00:39:57,760 --> 00:40:01,359
not just the the ip address of a host

953
00:40:01,359 --> 00:40:04,560
but i intend to connect to pharmdafa.org

954
00:40:04,560 --> 00:40:06,000
or some other evil name but more than

955
00:40:06,000 --> 00:40:06,560
that

956
00:40:06,560 --> 00:40:09,280
i intend to use this protocol and this

957
00:40:09,280 --> 00:40:10,800
port i intend

958
00:40:10,800 --> 00:40:13,760
to do the following and the dns goes

959
00:40:13,760 --> 00:40:14,800
absolutely

960
00:40:14,800 --> 00:40:17,119
here's how you do it but there's a

961
00:40:17,119 --> 00:40:19,200
trade-off now because now i'm telling a

962
00:40:19,200 --> 00:40:21,440
whole lot more to the dns

963
00:40:21,440 --> 00:40:23,680
about what i'm about to do in the next

964
00:40:23,680 --> 00:40:24,960
microsecond

965
00:40:24,960 --> 00:40:28,319
and maybe that's not a really good thing

966
00:40:28,319 --> 00:40:31,119
so wes is going to explain why that not

967
00:40:31,119 --> 00:40:33,040
be the best of ideas

968
00:40:33,040 --> 00:40:38,880
thank you all right thank you jeff um

969
00:40:38,880 --> 00:40:42,560
yes so the dns is not secure the dns

970
00:40:42,560 --> 00:40:45,280
was not secure would be the other way to

971
00:40:45,280 --> 00:40:46,240
possibly do it

972
00:40:46,240 --> 00:40:49,920
let me share my slides and so i'm going

973
00:40:49,920 --> 00:40:51,599
to talk for the next half an hour about

974
00:40:51,599 --> 00:40:53,200
dns security and i'm wes hardiker from

975
00:40:53,200 --> 00:40:55,280
the information sciences institute

976
00:40:55,280 --> 00:40:57,839
and this is the uh 30 minute overview of

977
00:40:57,839 --> 00:40:58,480
dns

978
00:40:58,480 --> 00:41:01,280
security however uh first i want to

979
00:41:01,280 --> 00:41:01,680
touch

980
00:41:01,680 --> 00:41:03,359
on something i did last time so this is

981
00:41:03,359 --> 00:41:05,520
actually my wild card slide from

982
00:41:05,520 --> 00:41:08,000
the dns deep dive number one and there's

983
00:41:08,000 --> 00:41:09,280
a mistake on it and

984
00:41:09,280 --> 00:41:11,119
this was the last slide i created and

985
00:41:11,119 --> 00:41:12,720
you know what happens when you create

986
00:41:12,720 --> 00:41:13,680
the very last thing

987
00:41:13,680 --> 00:41:15,119
always has the most mistakes because it

988
00:41:15,119 --> 00:41:17,440
gets the last review at least review

989
00:41:17,440 --> 00:41:19,200
so it actually occurred with this top

990
00:41:19,200 --> 00:41:20,960
record down here where i had said at the

991
00:41:20,960 --> 00:41:21,359
time

992
00:41:21,359 --> 00:41:24,640
that host1.example.commx matched the

993
00:41:24,640 --> 00:41:25,760
wildcard

994
00:41:25,760 --> 00:41:28,319
it does not uh it actually should not

995
00:41:28,319 --> 00:41:30,720
match and it should return no error

996
00:41:30,720 --> 00:41:32,880
but the text up above we actually should

997
00:41:32,880 --> 00:41:34,400
have called this out as well it matches

998
00:41:34,400 --> 00:41:36,400
any label that doesn't already exist but

999
00:41:36,400 --> 00:41:38,000
that label did exist

1000
00:41:38,000 --> 00:41:40,640
down here in the actual example records

1001
00:41:40,640 --> 00:41:41,280
so

1002
00:41:41,280 --> 00:41:43,040
uh thanks very much to andre for uh

1003
00:41:43,040 --> 00:41:44,560
catching that and pointing it out to me

1004
00:41:44,560 --> 00:41:46,240
and so that's the errata and then

1005
00:41:46,240 --> 00:41:48,240
now we'll actually dive into dns

1006
00:41:48,240 --> 00:41:49,330
security

1007
00:41:49,330 --> 00:41:50,480
[Music]

1008
00:41:50,480 --> 00:41:51,760
we're going to start by looking at sort

1009
00:41:51,760 --> 00:41:53,839
of the attack surfaces where can dns be

1010
00:41:53,839 --> 00:41:55,520
attacked and like you know most other

1011
00:41:55,520 --> 00:41:57,119
protocols that started in the internet

1012
00:41:57,119 --> 00:41:58,400
they weren't secure in the beginning

1013
00:41:58,400 --> 00:41:59,599
because everybody believed that the

1014
00:41:59,599 --> 00:42:01,040
network should be trusted

1015
00:42:01,040 --> 00:42:03,760
that's certainly no longer the case i'm

1016
00:42:03,760 --> 00:42:05,280
stealing a slide from russ mundy who

1017
00:42:05,280 --> 00:42:06,640
has talked about this at icann meetings

1018
00:42:06,640 --> 00:42:08,480
a number of other places to talk about

1019
00:42:08,480 --> 00:42:10,400
how the dns actually is put together

1020
00:42:10,400 --> 00:42:12,720
from a registration point of view

1021
00:42:12,720 --> 00:42:14,640
so you know maybe some zone content

1022
00:42:14,640 --> 00:42:16,000
wants to start and you have you have

1023
00:42:16,000 --> 00:42:17,280
this great new domain it's called

1024
00:42:17,280 --> 00:42:19,359
iutf.org and i need to register it

1025
00:42:19,359 --> 00:42:20,160
somewhere

1026
00:42:20,160 --> 00:42:22,160
so you go through some registrar in

1027
00:42:22,160 --> 00:42:23,839
order to actually attach it to the dns

1028
00:42:23,839 --> 00:42:25,760
tree attach your specific section to the

1029
00:42:25,760 --> 00:42:26,800
dns tree

1030
00:42:26,800 --> 00:42:29,839
the ietf uses network solutions and then

1031
00:42:29,839 --> 00:42:30,640
it's hosted

1032
00:42:30,640 --> 00:42:33,839
in a registry like par happens to run

1033
00:42:33,839 --> 00:42:37,200
dot org and that is actually how your

1034
00:42:37,200 --> 00:42:39,040
particular name servers get linked into

1035
00:42:39,040 --> 00:42:40,400
the whole tree and in fact

1036
00:42:40,400 --> 00:42:44,640
in fact the ietf.org uses ns0.ems

1037
00:42:44,640 --> 00:42:46,160
as one of their name servers i'm only

1038
00:42:46,160 --> 00:42:49,119
listing one and resolvers can then query

1039
00:42:49,119 --> 00:42:49,760
that

1040
00:42:49,760 --> 00:42:52,079
that includes isps and you know the quad

1041
00:42:52,079 --> 00:42:53,680
public resolvers and open

1042
00:42:53,680 --> 00:42:55,839
dns and some of the other resolvers and

1043
00:42:55,839 --> 00:42:57,280
then finally the data gets all the way

1044
00:42:57,280 --> 00:42:58,480
back down to dns

1045
00:42:58,480 --> 00:43:00,960
users and applications the important

1046
00:43:00,960 --> 00:43:01,839
thing to note that

1047
00:43:01,839 --> 00:43:03,200
most of what i'm going to be talking

1048
00:43:03,200 --> 00:43:04,880
about today is over

1049
00:43:04,880 --> 00:43:06,800
on the right hand side i have one next

1050
00:43:06,800 --> 00:43:08,400
slide on the registration area but we're

1051
00:43:08,400 --> 00:43:10,000
not going to touch that too much

1052
00:43:10,000 --> 00:43:11,760
we're going to talk a lot more about the

1053
00:43:11,760 --> 00:43:13,760
right-hand side the important thing to

1054
00:43:13,760 --> 00:43:15,040
note of course is that

1055
00:43:15,040 --> 00:43:17,520
evil people can do stuff to pretty much

1056
00:43:17,520 --> 00:43:19,920
anywhere in the entire tree so do be

1057
00:43:19,920 --> 00:43:22,000
aware of that

1058
00:43:22,000 --> 00:43:23,599
so if we talk about the registration

1059
00:43:23,599 --> 00:43:24,960
side there are sources of you know

1060
00:43:24,960 --> 00:43:26,000
insecurity all throughout

1061
00:43:26,000 --> 00:43:27,760
the dns and the question you know you

1062
00:43:27,760 --> 00:43:29,599
should ask is what is the best way i

1063
00:43:29,599 --> 00:43:31,760
could get data into the dns itself right

1064
00:43:31,760 --> 00:43:34,160
if you really want to uh populate the

1065
00:43:34,160 --> 00:43:35,359
dns tree with

1066
00:43:35,359 --> 00:43:36,800
bad information you should actually do

1067
00:43:36,800 --> 00:43:38,400
it during the publication side

1068
00:43:38,400 --> 00:43:39,920
and there are you know well-known

1069
00:43:39,920 --> 00:43:41,920
mechanisms for doing so a lot of which

1070
00:43:41,920 --> 00:43:43,200
include social engineering on the

1071
00:43:43,200 --> 00:43:44,560
publication side

1072
00:43:44,560 --> 00:43:46,720
on both registry and the registrar and

1073
00:43:46,720 --> 00:43:49,440
then you can also attack the zone itself

1074
00:43:49,440 --> 00:43:50,960
none of the security protocols i'm about

1075
00:43:50,960 --> 00:43:52,720
to talk about help at all

1076
00:43:52,720 --> 00:43:54,400
if you don't have your source of your

1077
00:43:54,400 --> 00:43:56,240
data you know secured in the first place

1078
00:43:56,240 --> 00:43:57,839
so somebody can take over

1079
00:43:57,839 --> 00:43:59,280
where your data is coming from then the

1080
00:43:59,280 --> 00:44:01,440
dns securities mechanisms are not going

1081
00:44:01,440 --> 00:44:03,440
to help you at all

1082
00:44:03,440 --> 00:44:05,599
on the publication and consumption side

1083
00:44:05,599 --> 00:44:07,359
there's a number of ways

1084
00:44:07,359 --> 00:44:08,720
that things can be attacked so we're

1085
00:44:08,720 --> 00:44:10,560
going to talk about uh cash poisoning is

1086
00:44:10,560 --> 00:44:12,960
sort of one of the oldest and

1087
00:44:12,960 --> 00:44:15,599
not quite as relevant these days but uh

1088
00:44:15,599 --> 00:44:17,359
that the gain of security mechanisms

1089
00:44:17,359 --> 00:44:18,240
were

1090
00:44:18,240 --> 00:44:20,480
trying to fix we'll also talk about ddos

1091
00:44:20,480 --> 00:44:21,280
attacks and

1092
00:44:21,280 --> 00:44:22,720
you know what happens there jeff already

1093
00:44:22,720 --> 00:44:23,920
talked about loops so i'm not going to

1094
00:44:23,920 --> 00:44:25,680
go into them in my slides

1095
00:44:25,680 --> 00:44:26,960
and then we're going to talk about

1096
00:44:26,960 --> 00:44:28,800
privacy because queries can be seen by

1097
00:44:28,800 --> 00:44:30,720
both resolvers and authoritative servers

1098
00:44:30,720 --> 00:44:32,560
as jeff indicated sort of at the end of

1099
00:44:32,560 --> 00:44:34,800
his talk and then finally we'll talk a

1100
00:44:34,800 --> 00:44:36,079
little bit about dennis abuse and

1101
00:44:36,079 --> 00:44:36,800
deception

1102
00:44:36,800 --> 00:44:38,240
and you know the interesting things are

1103
00:44:38,240 --> 00:44:39,520
what happens when there's typos

1104
00:44:39,520 --> 00:44:41,440
registered in the domains that

1105
00:44:41,440 --> 00:44:43,680
aren't you know from the domain itself

1106
00:44:43,680 --> 00:44:45,760
or internationalization and other font

1107
00:44:45,760 --> 00:44:47,440
related issues and joao is going to talk

1108
00:44:47,440 --> 00:44:47,920
about that

1109
00:44:47,920 --> 00:44:50,800
after i'm done so a little bit of

1110
00:44:50,800 --> 00:44:52,240
architecture refresher i'm sure

1111
00:44:52,240 --> 00:44:54,400
most people remember this that a when

1112
00:44:54,400 --> 00:44:55,920
you know i some

1113
00:44:55,920 --> 00:44:59,040
example.com is queried for a record that

1114
00:44:59,040 --> 00:45:00,240
the resolver you know

1115
00:45:00,240 --> 00:45:02,720
near you be it an isp or be it in a

1116
00:45:02,720 --> 00:45:04,079
nearby box or whatever

1117
00:45:04,079 --> 00:45:06,640
ends up needing to talk to most of the

1118
00:45:06,640 --> 00:45:07,200
tree

1119
00:45:07,200 --> 00:45:09,040
it'll start by talking to the root which

1120
00:45:09,040 --> 00:45:10,319
then it finds dot com

1121
00:45:10,319 --> 00:45:12,319
and then it finds example.com and then

1122
00:45:12,319 --> 00:45:15,440
finally that's able to return www

1123
00:45:15,440 --> 00:45:18,079
so what is cash poisoning so remember

1124
00:45:18,079 --> 00:45:19,440
that resolvers actually cache

1125
00:45:19,440 --> 00:45:20,400
information for

1126
00:45:20,400 --> 00:45:23,280
a a period of time that is subject to

1127
00:45:23,280 --> 00:45:24,640
the data itself

1128
00:45:24,640 --> 00:45:27,359
a maximum period of time and what

1129
00:45:27,359 --> 00:45:28,000
happens is

1130
00:45:28,000 --> 00:45:30,720
your laptop may query the resolver and

1131
00:45:30,720 --> 00:45:32,319
the resolver is going to

1132
00:45:32,319 --> 00:45:34,000
maybe it has the root and comcast and

1133
00:45:34,000 --> 00:45:35,520
it's going to send its query

1134
00:45:35,520 --> 00:45:38,880
immediately to www.example.com note

1135
00:45:38,880 --> 00:45:42,240
that www.example.com or the example.com

1136
00:45:42,240 --> 00:45:44,160
authoritative server is probably really

1137
00:45:44,160 --> 00:45:45,359
far away

1138
00:45:45,359 --> 00:45:48,160
so if the resolver is getting an answer

1139
00:45:48,160 --> 00:45:49,680
first from somebody really

1140
00:45:49,680 --> 00:45:52,720
nearby that is giving it a false answer

1141
00:45:52,720 --> 00:45:54,400
then the resolver may believe that

1142
00:45:54,400 --> 00:45:56,319
answer so in this case

1143
00:45:56,319 --> 00:45:58,160
you know the resolver answers but it's

1144
00:45:58,160 --> 00:46:00,240
before the authoritative server could

1145
00:46:00,240 --> 00:46:01,280
possibly have answered

1146
00:46:01,280 --> 00:46:03,119
and so the the thing about dns is that

1147
00:46:03,119 --> 00:46:04,319
the first answer wins

1148
00:46:04,319 --> 00:46:06,720
period so you may get more multiple

1149
00:46:06,720 --> 00:46:07,520
answers

1150
00:46:07,520 --> 00:46:10,240
the ietf has long talked about you know

1151
00:46:10,240 --> 00:46:12,000
you have to expect duplicate packets and

1152
00:46:12,000 --> 00:46:12,800
stuff and

1153
00:46:12,800 --> 00:46:14,319
duplicate answers and you should pick

1154
00:46:14,319 --> 00:46:16,240
the first well

1155
00:46:16,240 --> 00:46:19,200
that works if uh that that works really

1156
00:46:19,200 --> 00:46:21,200
well for attackers if you don't aren't

1157
00:46:21,200 --> 00:46:23,040
able to check the data

1158
00:46:23,040 --> 00:46:25,280
so one of the earliest cache poisoning

1159
00:46:25,280 --> 00:46:26,720
attacks the things that actually made

1160
00:46:26,720 --> 00:46:27,280
cash point

1161
00:46:27,280 --> 00:46:29,520
impossible was just to include extra

1162
00:46:29,520 --> 00:46:31,200
data in the additional section so at the

1163
00:46:31,200 --> 00:46:32,800
end of the dns packet not only does it

1164
00:46:32,800 --> 00:46:33,280
give you

1165
00:46:33,280 --> 00:46:34,960
information about the question you asked

1166
00:46:34,960 --> 00:46:37,359
about at the top but at the bottom

1167
00:46:37,359 --> 00:46:38,720
in the additional section there's also

1168
00:46:38,720 --> 00:46:41,119
other records and in early resolvers

1169
00:46:41,119 --> 00:46:42,480
would actually just trust anything that

1170
00:46:42,480 --> 00:46:44,560
was there so you could include

1171
00:46:44,560 --> 00:46:46,560
records that were totally unrelated to

1172
00:46:46,560 --> 00:46:48,000
the question and the resolver would

1173
00:46:48,000 --> 00:46:49,839
cache it and keep it

1174
00:46:49,839 --> 00:46:51,440
uh the other thing that happens is in

1175
00:46:51,440 --> 00:46:53,359
protocol attacks you can actually

1176
00:46:53,359 --> 00:46:55,200
sometimes just flood the dns resolver

1177
00:46:55,200 --> 00:46:56,720
with response packets and hope that they

1178
00:46:56,720 --> 00:46:57,680
accept them

1179
00:46:57,680 --> 00:46:59,520
if you're actually you know on the wire

1180
00:46:59,520 --> 00:47:00,960
if you're a man in the middle attack or

1181
00:47:00,960 --> 00:47:02,319
a person in the middle of attack

1182
00:47:02,319 --> 00:47:03,839
then you can actually possibly see the

1183
00:47:03,839 --> 00:47:05,680
values otherwise you end up having to

1184
00:47:05,680 --> 00:47:06,800
guess you know the ap

1185
00:47:06,800 --> 00:47:09,359
address the protocol values uh the names

1186
00:47:09,359 --> 00:47:10,800
the source addresses and things like

1187
00:47:10,800 --> 00:47:11,119
that

1188
00:47:11,119 --> 00:47:13,040
maybe you can see some of them you can

1189
00:47:13,040 --> 00:47:14,720
pick popular names to try and flood the

1190
00:47:14,720 --> 00:47:15,359
most

1191
00:47:15,359 --> 00:47:17,119
and actually that was a very valid form

1192
00:47:17,119 --> 00:47:19,040
of attack and it actually did work

1193
00:47:19,040 --> 00:47:20,480
and the best part about it from a

1194
00:47:20,480 --> 00:47:22,000
hacker's point of view is that the

1195
00:47:22,000 --> 00:47:23,280
answer is cashed

1196
00:47:23,280 --> 00:47:25,839
for the ttl chosen by the attacker

1197
00:47:25,839 --> 00:47:26,720
remember the

1198
00:47:26,720 --> 00:47:29,119
the the attacker is actually returning

1199
00:47:29,119 --> 00:47:30,720
the entire dns record

1200
00:47:30,720 --> 00:47:32,640
that includes the time to live value and

1201
00:47:32,640 --> 00:47:34,720
how long something should be cashed for

1202
00:47:34,720 --> 00:47:36,559
so it's very common to see very large

1203
00:47:36,559 --> 00:47:40,000
ttl values in cash poisoning attacks

1204
00:47:40,000 --> 00:47:42,079
so how do we combat this well the early

1205
00:47:42,079 --> 00:47:43,359
mechanisms were

1206
00:47:43,359 --> 00:47:45,200
let's just ignore non-authoritative

1207
00:47:45,200 --> 00:47:46,880
answers right so if you don't you don't

1208
00:47:46,880 --> 00:47:48,960
accept data from questions you didn't

1209
00:47:48,960 --> 00:47:49,599
ask

1210
00:47:49,599 --> 00:47:50,800
and there's some changing and stuff that

1211
00:47:50,800 --> 00:47:52,559
has to be taken into account too but

1212
00:47:52,559 --> 00:47:53,680
generally

1213
00:47:53,680 --> 00:47:56,160
you shouldn't accept stuff that's below

1214
00:47:56,160 --> 00:47:57,760
not not authoritative for

1215
00:47:57,760 --> 00:47:59,599
the where you asked and note that

1216
00:47:59,599 --> 00:48:01,760
parents do have to supply glue address

1217
00:48:01,760 --> 00:48:04,319
records uh for in zone child name

1218
00:48:04,319 --> 00:48:06,319
servers i did talk about that in part

1219
00:48:06,319 --> 00:48:07,839
one you should go watch that if you're

1220
00:48:07,839 --> 00:48:09,760
interested more in about that subject

1221
00:48:09,760 --> 00:48:11,200
but resolvers should also check that the

1222
00:48:11,200 --> 00:48:13,760
ip address and the udp source port is

1223
00:48:13,760 --> 00:48:14,319
correct

1224
00:48:14,319 --> 00:48:17,119
and that the dns id field is correct and

1225
00:48:17,119 --> 00:48:18,800
senders should make it really hard for

1226
00:48:18,800 --> 00:48:20,000
these to guess so that that

1227
00:48:20,000 --> 00:48:21,839
flooding takes you know a whole lot of

1228
00:48:21,839 --> 00:48:23,599
random attempts and not just being able

1229
00:48:23,599 --> 00:48:25,440
to predict the next value that might be

1230
00:48:25,440 --> 00:48:26,000
sent

1231
00:48:26,000 --> 00:48:27,520
so you should randomize your source port

1232
00:48:27,520 --> 00:48:29,280
number and you should randomize the id

1233
00:48:29,280 --> 00:48:30,880
field in the dns and that gives you

1234
00:48:30,880 --> 00:48:32,559
about 32 bits of randomness

1235
00:48:32,559 --> 00:48:34,240
but that's still not cryptographically

1236
00:48:34,240 --> 00:48:36,160
strong and it doesn't work for onpath

1237
00:48:36,160 --> 00:48:37,920
attackers either that can see

1238
00:48:37,920 --> 00:48:40,480
and copy the requests in the first place

1239
00:48:40,480 --> 00:48:42,319
so the real question is you know can we

1240
00:48:42,319 --> 00:48:43,119
fix it

1241
00:48:43,119 --> 00:48:44,960
and i hope i got at least that song

1242
00:48:44,960 --> 00:48:47,760
stuck in a number of people's heads

1243
00:48:47,760 --> 00:48:49,839
well we can and there's uh some data

1244
00:48:49,839 --> 00:48:51,040
protection mechanisms

1245
00:48:51,040 --> 00:48:52,960
uh so there's two different types really

1246
00:48:52,960 --> 00:48:55,119
there's object security of how do we

1247
00:48:55,119 --> 00:48:55,680
actually

1248
00:48:55,680 --> 00:48:58,960
validate an object versus path security

1249
00:48:58,960 --> 00:49:00,319
which is you know how do you actually

1250
00:49:00,319 --> 00:49:02,079
validate the path you got it over was

1251
00:49:02,079 --> 00:49:03,680
secure and there are two different forms

1252
00:49:03,680 --> 00:49:04,880
of protection

1253
00:49:04,880 --> 00:49:07,200
so object security is done by dnsec in

1254
00:49:07,200 --> 00:49:08,720
the dns and it adds cryptographic

1255
00:49:08,720 --> 00:49:10,640
signatures and all the records

1256
00:49:10,640 --> 00:49:13,040
it's signed at or near the data's origin

1257
00:49:13,040 --> 00:49:14,880
and then once it's been signed it really

1258
00:49:14,880 --> 00:49:16,319
doesn't matter how you get there it's

1259
00:49:16,319 --> 00:49:17,680
verifiable in the middle of all the

1260
00:49:17,680 --> 00:49:19,520
transactions it's very fireball at the

1261
00:49:19,520 --> 00:49:20,160
end

1262
00:49:20,160 --> 00:49:21,839
but it only provides integrity

1263
00:49:21,839 --> 00:49:23,520
production it does not provide

1264
00:49:23,520 --> 00:49:26,400
any privacy detection those records are

1265
00:49:26,400 --> 00:49:27,599
queried all over the

1266
00:49:27,599 --> 00:49:32,160
dns tree and various parties can see it

1267
00:49:32,160 --> 00:49:33,440
path security on the other hand which

1268
00:49:33,440 --> 00:49:35,119
has become a very hot topic lately for

1269
00:49:35,119 --> 00:49:37,440
dns over tls and dns over https for

1270
00:49:37,440 --> 00:49:39,280
example and possibly even dnf's over

1271
00:49:39,280 --> 00:49:40,720
quick at some point

1272
00:49:40,720 --> 00:49:43,839
tunnels the ansel's answers between two

1273
00:49:43,839 --> 00:49:45,280
points and it does this with both

1274
00:49:45,280 --> 00:49:46,480
integrity protection

1275
00:49:46,480 --> 00:49:49,599
and encryption but it offers uh you know

1276
00:49:49,599 --> 00:49:51,200
point-to-point protection only

1277
00:49:51,200 --> 00:49:54,480
so it verifies who you got it from but

1278
00:49:54,480 --> 00:49:56,480
not actually what it is so it doesn't

1279
00:49:56,480 --> 00:49:58,160
it's not able to verify that the data on

1280
00:49:58,160 --> 00:49:58,880
the other end

1281
00:49:58,880 --> 00:50:02,640
is actually correct so what is going on

1282
00:50:02,640 --> 00:50:03,599
here well they have

1283
00:50:03,599 --> 00:50:05,599
two very different complementary

1284
00:50:05,599 --> 00:50:08,079
properties object and path security

1285
00:50:08,079 --> 00:50:10,559
so which are you going to pick you have

1286
00:50:10,559 --> 00:50:12,160
to pick one or the other right

1287
00:50:12,160 --> 00:50:14,720
no you actually don't object and pass

1288
00:50:14,720 --> 00:50:15,440
security work

1289
00:50:15,440 --> 00:50:17,119
very well together and you'll find that

1290
00:50:17,119 --> 00:50:19,520
many uh endpoints of

1291
00:50:19,520 --> 00:50:22,319
of path-based approaches like public

1292
00:50:22,319 --> 00:50:23,920
resolvers are actually doing dns sect

1293
00:50:23,920 --> 00:50:24,880
validation

1294
00:50:24,880 --> 00:50:26,160
so that they can prove that the object

1295
00:50:26,160 --> 00:50:28,400
they tried to validate was secure before

1296
00:50:28,400 --> 00:50:29,839
tunneling it over to you

1297
00:50:29,839 --> 00:50:31,440
so there's nothing wrong with putting a

1298
00:50:31,440 --> 00:50:34,000
locked box in a tunnel

1299
00:50:34,000 --> 00:50:37,040
so a brief recap of dns security

1300
00:50:37,040 --> 00:50:38,319
technologies that exist

1301
00:50:38,319 --> 00:50:40,800
to date uh the object security like i've

1302
00:50:40,800 --> 00:50:42,800
been talking about is dnsec

1303
00:50:42,800 --> 00:50:44,400
and it is you know records that were

1304
00:50:44,400 --> 00:50:45,839
assigned by the authoritative source or

1305
00:50:45,839 --> 00:50:46,800
somewhere near it

1306
00:50:46,800 --> 00:50:48,319
and it's talked about in a number of

1307
00:50:48,319 --> 00:50:51,599
rfcs including 43 is the most recent one

1308
00:50:51,599 --> 00:50:52,559
that is

1309
00:50:52,559 --> 00:50:55,599
at least a current standard the

1310
00:50:55,599 --> 00:50:57,440
path security on the other hand there's

1311
00:50:57,440 --> 00:50:59,040
a number of options to pick from there's

1312
00:50:59,040 --> 00:51:00,400
dns over tls

1313
00:51:00,400 --> 00:51:03,200
there's dns over dtls which is the udp

1314
00:51:03,200 --> 00:51:04,559
version of tls

1315
00:51:04,559 --> 00:51:07,760
there's dns over https there's oblivious

1316
00:51:07,760 --> 00:51:09,839
dns over https which is being talked

1317
00:51:09,839 --> 00:51:11,520
about in the dinosaur working group sort

1318
00:51:11,520 --> 00:51:13,119
of right now and actually

1319
00:51:13,119 --> 00:51:16,559
i think it might be in the uh security

1320
00:51:16,559 --> 00:51:19,520
um dispatch group uh this this coming

1321
00:51:19,520 --> 00:51:20,480
ietf so you might

1322
00:51:20,480 --> 00:51:22,240
consider attending to that if i got the

1323
00:51:22,240 --> 00:51:24,400
schedule right and then there is

1324
00:51:24,400 --> 00:51:27,200
a dns over dns using shared keys so tcig

1325
00:51:27,200 --> 00:51:28,720
is actually a very old protocol there's

1326
00:51:28,720 --> 00:51:30,319
a recent update to that document hence

1327
00:51:30,319 --> 00:51:30,880
the large

1328
00:51:30,880 --> 00:51:32,880
rfc number but it's actually one of the

1329
00:51:32,880 --> 00:51:34,480
older ways to do

1330
00:51:34,480 --> 00:51:37,680
dns secured dns using shared keys and

1331
00:51:37,680 --> 00:51:39,599
dns curve was another technology that

1332
00:51:39,599 --> 00:51:41,280
was proposed at one point uh which is

1333
00:51:41,280 --> 00:51:42,640
another point-to-point encryption

1334
00:51:42,640 --> 00:51:44,319
authentication mechanism using elliptic

1335
00:51:44,319 --> 00:51:44,960
curve

1336
00:51:44,960 --> 00:51:46,800
and that's still used and deployed in a

1337
00:51:46,800 --> 00:51:48,559
few places around on the internet as

1338
00:51:48,559 --> 00:51:50,079
well but it's not standardized within

1339
00:51:50,079 --> 00:51:52,240
the ietf

1340
00:51:52,240 --> 00:51:55,119
so the thing to note about all of this

1341
00:51:55,119 --> 00:51:56,559
is that there are various

1342
00:51:56,559 --> 00:51:58,640
areas of all of these transactions that

1343
00:51:58,640 --> 00:51:59,680
need to be secured

1344
00:51:59,680 --> 00:52:03,680
right so the path-based mechanisms like

1345
00:52:03,680 --> 00:52:06,559
doe dot and dodt and any of the other

1346
00:52:06,559 --> 00:52:08,800
ones authenticates and encrypts the user

1347
00:52:08,800 --> 00:52:10,800
to the resolver's protocol traffic

1348
00:52:10,800 --> 00:52:13,920
is on the left hand side of that

1349
00:52:13,920 --> 00:52:15,680
dnsec on the other hand is really

1350
00:52:15,680 --> 00:52:17,119
designed to

1351
00:52:17,119 --> 00:52:20,400
to prove that the right hand data set

1352
00:52:20,400 --> 00:52:22,079
has not been modified anywhere from the

1353
00:52:22,079 --> 00:52:23,839
root all the way down to the answers you

1354
00:52:23,839 --> 00:52:25,200
actually need

1355
00:52:25,200 --> 00:52:27,920
now can these protocols be used in the

1356
00:52:27,920 --> 00:52:29,440
opposite you know can you do pass

1357
00:52:29,440 --> 00:52:31,119
security on the right yes but it's not

1358
00:52:31,119 --> 00:52:33,359
being done can you dmd in a sec on the

1359
00:52:33,359 --> 00:52:33,920
left

1360
00:52:33,920 --> 00:52:36,400
yes uh it's not being done as much there

1361
00:52:36,400 --> 00:52:38,559
are some instances of dnsec occurring on

1362
00:52:38,559 --> 00:52:40,559
the left-hand side but not as much

1363
00:52:40,559 --> 00:52:42,240
it can be used in both places but it

1364
00:52:42,240 --> 00:52:44,319
typically isn't so again

1365
00:52:44,319 --> 00:52:46,160
this is the reason that they pair really

1366
00:52:46,160 --> 00:52:48,079
well

1367
00:52:48,079 --> 00:52:50,079
so the nice thing about dnssec is that

1368
00:52:50,079 --> 00:52:51,359
it secures uh

1369
00:52:51,359 --> 00:52:53,200
records no matter where they are right

1370
00:52:53,200 --> 00:52:54,800
so if there was a record that was

1371
00:52:54,800 --> 00:52:56,720
created in example.com

1372
00:52:56,720 --> 00:52:59,200
and it propagates up to you know various

1373
00:52:59,200 --> 00:53:00,640
dns resolvers

1374
00:53:00,640 --> 00:53:03,119
in isps or even in cloud infrastructure

1375
00:53:03,119 --> 00:53:04,400
and if you get all the way to your home

1376
00:53:04,400 --> 00:53:05,119
router

1377
00:53:05,119 --> 00:53:07,040
and then possibly all the way even into

1378
00:53:07,040 --> 00:53:08,960
your local infrastructure

1379
00:53:08,960 --> 00:53:10,319
if you're especially for running mail

1380
00:53:10,319 --> 00:53:11,680
servers it's much more common to run

1381
00:53:11,680 --> 00:53:13,040
something very local

1382
00:53:13,040 --> 00:53:15,599
and then it doesn't really matter right

1383
00:53:15,599 --> 00:53:17,520
that locked box is verifiable no matter

1384
00:53:17,520 --> 00:53:19,200
where it came from including over

1385
00:53:19,200 --> 00:53:21,359
a swallow you know carrying a coconut

1386
00:53:21,359 --> 00:53:22,960
and possibly a locked box of dns

1387
00:53:22,960 --> 00:53:24,240
information as well

1388
00:53:24,240 --> 00:53:27,119
or the atf rfc on communicating over

1389
00:53:27,119 --> 00:53:29,760
avian carrier

1390
00:53:29,760 --> 00:53:32,880
so how does it work uh the dns sec

1391
00:53:32,880 --> 00:53:35,119
is a hierarchical signing mechanism

1392
00:53:35,119 --> 00:53:37,119
where there's public private key pairs

1393
00:53:37,119 --> 00:53:39,520
created at various points along the tree

1394
00:53:39,520 --> 00:53:42,240
uh the resolver typically only has the

1395
00:53:42,240 --> 00:53:44,319
one key possibly a couple of keys just

1396
00:53:44,319 --> 00:53:46,160
to be their trust anchor of where that

1397
00:53:46,160 --> 00:53:47,680
they accept stuff from

1398
00:53:47,680 --> 00:53:51,119
that is signed and they do this by

1399
00:53:51,119 --> 00:53:53,040
checking all of the records from the

1400
00:53:53,040 --> 00:53:54,800
chaining on down so

1401
00:53:54,800 --> 00:53:58,000
the root zone signs with its dns key the

1402
00:53:58,000 --> 00:54:01,520
uh the ds record of com so a ds record

1403
00:54:01,520 --> 00:54:05,040
is just a pointer to coms key which then

1404
00:54:05,040 --> 00:54:08,559
also has a ds record for example.com

1405
00:54:08,559 --> 00:54:10,880
and a signature on that note that this

1406
00:54:10,880 --> 00:54:12,640
is a very high level presentation so

1407
00:54:12,640 --> 00:54:13,920
there are many other things that we

1408
00:54:13,920 --> 00:54:15,839
could talk about that i'm leaving out

1409
00:54:15,839 --> 00:54:18,000
but basically by following this chain

1410
00:54:18,000 --> 00:54:18,960
all the way down

1411
00:54:18,960 --> 00:54:22,160
a resolver is able to provably

1412
00:54:22,160 --> 00:54:24,319
identify that records have never been

1413
00:54:24,319 --> 00:54:25,599
tampered with

1414
00:54:25,599 --> 00:54:28,640
since they were created by the original

1415
00:54:28,640 --> 00:54:29,839
owner regardless of whether it was

1416
00:54:29,839 --> 00:54:32,160
example.com or com or the root for

1417
00:54:32,160 --> 00:54:32,880
example

1418
00:54:32,880 --> 00:54:34,559
and the nice thing about it is that all

1419
00:54:34,559 --> 00:54:36,160
of the records within those zones are

1420
00:54:36,160 --> 00:54:37,440
then protected

1421
00:54:37,440 --> 00:54:40,160
uh if they're included so you can put

1422
00:54:40,160 --> 00:54:41,920
other records like all the text records

1423
00:54:41,920 --> 00:54:42,400
that

1424
00:54:42,400 --> 00:54:44,079
jeff just talked about for example are

1425
00:54:44,079 --> 00:54:45,520
all equally as well

1426
00:54:45,520 --> 00:54:49,520
validatable so the resolver in the end

1427
00:54:49,520 --> 00:54:50,720
after it is

1428
00:54:50,720 --> 00:54:53,280
said hey all of this is great uh client

1429
00:54:53,280 --> 00:54:55,119
here you go here's the answer and i'm

1430
00:54:55,119 --> 00:54:56,799
going to set the ad bit

1431
00:54:56,799 --> 00:54:59,359
80 is equal to 1 means that i checked it

1432
00:54:59,359 --> 00:55:01,280
it is secure dnsec has validated the

1433
00:55:01,280 --> 00:55:01,920
whole tree

1434
00:55:01,920 --> 00:55:04,559
you're good to go except that this

1435
00:55:04,559 --> 00:55:06,960
message typically isn't sent securely so

1436
00:55:06,960 --> 00:55:08,799
remember that the resolver talking to

1437
00:55:08,799 --> 00:55:09,359
the end

1438
00:55:09,359 --> 00:55:11,920
system is typically not secure which is

1439
00:55:11,920 --> 00:55:12,880
why

1440
00:55:12,880 --> 00:55:15,200
uh some path security actually makes a

1441
00:55:15,200 --> 00:55:18,160
great thing to pair with object security

1442
00:55:18,160 --> 00:55:20,160
so going to back to the high level

1443
00:55:20,160 --> 00:55:21,680
overview um

1444
00:55:21,680 --> 00:55:23,280
object security provides end-to-end

1445
00:55:23,280 --> 00:55:25,520
integrity production it

1446
00:55:25,520 --> 00:55:27,680
works everywhere it is a distributed

1447
00:55:27,680 --> 00:55:29,359
trust model with minimal configuration

1448
00:55:29,359 --> 00:55:31,440
typically you only have one trust anchor

1449
00:55:31,440 --> 00:55:33,119
but it doesn't provide any privacy

1450
00:55:33,119 --> 00:55:35,040
protection whatsoever and it typically

1451
00:55:35,040 --> 00:55:36,880
is not deployed all the way to the end

1452
00:55:36,880 --> 00:55:38,880
user which is typically referred to as

1453
00:55:38,880 --> 00:55:41,839
the last mile problem path security on

1454
00:55:41,839 --> 00:55:43,040
the other hand provides privacy

1455
00:55:43,040 --> 00:55:44,480
protection and point-to-point integrity

1456
00:55:44,480 --> 00:55:46,240
protection which is fantastic

1457
00:55:46,240 --> 00:55:47,920
but it doesn't verify that the data

1458
00:55:47,920 --> 00:55:50,079
actually came from the original origin

1459
00:55:50,079 --> 00:55:51,440
it only verifies that

1460
00:55:51,440 --> 00:55:53,359
that hop that you're communicating over

1461
00:55:53,359 --> 00:55:54,880
and for so true security

1462
00:55:54,880 --> 00:55:56,720
it also requires that every link be

1463
00:55:56,720 --> 00:55:58,880
protected and trusted right so if data

1464
00:55:58,880 --> 00:56:00,400
is being transferred between three or

1465
00:56:00,400 --> 00:56:00,799
four

1466
00:56:00,799 --> 00:56:03,440
entities on the on the internet you'd

1467
00:56:03,440 --> 00:56:04,960
better be able to trust them all and

1468
00:56:04,960 --> 00:56:06,240
you're actually not the one typically

1469
00:56:06,240 --> 00:56:07,599
querying them so

1470
00:56:07,599 --> 00:56:09,920
uh but it does very much solve the last

1471
00:56:09,920 --> 00:56:12,079
mile problem and solve some privacy

1472
00:56:12,079 --> 00:56:15,280
issues as well so path security and

1473
00:56:15,280 --> 00:56:17,359
obscurity are really stronger when used

1474
00:56:17,359 --> 00:56:17,839
together

1475
00:56:17,839 --> 00:56:20,319
object security protects the data object

1476
00:56:20,319 --> 00:56:22,640
security ties the data to its source

1477
00:56:22,640 --> 00:56:24,480
path security you know fixes that last

1478
00:56:24,480 --> 00:56:26,319
mile problem all the way to the end user

1479
00:56:26,319 --> 00:56:28,160
and it provides encryption protecting

1480
00:56:28,160 --> 00:56:31,680
clients from on paths eavesdropping

1481
00:56:31,680 --> 00:56:33,119
so we're going to switch a little bit

1482
00:56:33,119 --> 00:56:35,520
now into other ways that the dns

1483
00:56:35,520 --> 00:56:38,400
has security issues and you know some

1484
00:56:38,400 --> 00:56:40,000
solutions around them

1485
00:56:40,000 --> 00:56:42,640
because the dns you know is primarily a

1486
00:56:42,640 --> 00:56:44,160
spoofable udp

1487
00:56:44,160 --> 00:56:47,200
protocol based design in order to

1488
00:56:47,200 --> 00:56:49,839
keep things low although tcp is used as

1489
00:56:49,839 --> 00:56:50,559
well

1490
00:56:50,559 --> 00:56:53,040
most dns responses are larger than their

1491
00:56:53,040 --> 00:56:53,680
request

1492
00:56:53,680 --> 00:56:55,920
and thus it's a great source of

1493
00:56:55,920 --> 00:56:57,280
reflection attacks

1494
00:56:57,280 --> 00:56:59,680
so if the entire world is sending a

1495
00:56:59,680 --> 00:57:01,040
whole bunch of resolvers

1496
00:57:01,040 --> 00:57:03,760
you know udp packets that are spoofed

1497
00:57:03,760 --> 00:57:05,119
containing the source address of the

1498
00:57:05,119 --> 00:57:07,280
victim well all of those responses are

1499
00:57:07,280 --> 00:57:08,400
going to end up at the victim

1500
00:57:08,400 --> 00:57:09,680
unfortunately

1501
00:57:09,680 --> 00:57:12,319
and so this was a bigger problem back in

1502
00:57:12,319 --> 00:57:13,440
the day but it's still

1503
00:57:13,440 --> 00:57:16,000
a problem today and one of the reasons

1504
00:57:16,000 --> 00:57:16,559
that it

1505
00:57:16,559 --> 00:57:18,400
is we'll get to actually the solution to

1506
00:57:18,400 --> 00:57:19,520
that in a minute let me talk about the

1507
00:57:19,520 --> 00:57:21,359
other side of the ddos targets

1508
00:57:21,359 --> 00:57:23,920
so because nearly all internet

1509
00:57:23,920 --> 00:57:25,440
communication actually starts with dns

1510
00:57:25,440 --> 00:57:26,000
lookups

1511
00:57:26,000 --> 00:57:28,400
it itself is often a ddos target and i'm

1512
00:57:28,400 --> 00:57:30,000
sure many of you have

1513
00:57:30,000 --> 00:57:32,079
have seen some of the uh highlights in

1514
00:57:32,079 --> 00:57:33,760
the past number of years especially the

1515
00:57:33,760 --> 00:57:35,599
the dine out of january years ago that

1516
00:57:35,599 --> 00:57:36,960
you know knocked out a good portion of

1517
00:57:36,960 --> 00:57:38,960
major websites across the u.s

1518
00:57:38,960 --> 00:57:40,640
because it was the target of a ddos

1519
00:57:40,640 --> 00:57:42,799
attack

1520
00:57:42,799 --> 00:57:45,839
so to battle oh i'm missing an l there

1521
00:57:45,839 --> 00:57:47,680
to battle aggressive clients

1522
00:57:47,680 --> 00:57:49,200
uh one thing that has been done a lot

1523
00:57:49,200 --> 00:57:50,559
lately is deploying something called

1524
00:57:50,559 --> 00:57:51,920
response rate limiting

1525
00:57:51,920 --> 00:57:53,839
and it really is saying hey client

1526
00:57:53,839 --> 00:57:55,280
you've asked a whole lot of the

1527
00:57:55,280 --> 00:57:56,319
questions you know in

1528
00:57:56,319 --> 00:57:58,559
in the past 10 minutes uh and in fact

1529
00:57:58,559 --> 00:57:59,839
they've really all been the same

1530
00:57:59,839 --> 00:58:00,880
question

1531
00:58:00,880 --> 00:58:02,799
i'm not going to answer you anymore i'm

1532
00:58:02,799 --> 00:58:04,079
going to punish you and i'm going to

1533
00:58:04,079 --> 00:58:04,480
give you

1534
00:58:04,480 --> 00:58:06,480
only partial answers or no answers but

1535
00:58:06,480 --> 00:58:08,319
i'm going to set the truncation bit

1536
00:58:08,319 --> 00:58:10,480
which means that you should come back

1537
00:58:10,480 --> 00:58:11,680
over tcp please

1538
00:58:11,680 --> 00:58:13,680
or implement dns cookies either one of

1539
00:58:13,680 --> 00:58:15,680
those as a solution and that proves that

1540
00:58:15,680 --> 00:58:17,440
you have end-to-end communication and so

1541
00:58:17,440 --> 00:58:19,839
udp spoofing no longer works

1542
00:58:19,839 --> 00:58:22,319
this helps prevent overwhelmed udp

1543
00:58:22,319 --> 00:58:23,920
spoofing requests and is

1544
00:58:23,920 --> 00:58:26,000
very commonly deployed these days in

1545
00:58:26,000 --> 00:58:27,040
multiple

1546
00:58:27,040 --> 00:58:29,040
implementations of dns authoritative

1547
00:58:29,040 --> 00:58:31,040
servers it's interestingly not

1548
00:58:31,040 --> 00:58:32,559
standardized yet so there's actually

1549
00:58:32,559 --> 00:58:33,280
some

1550
00:58:33,280 --> 00:58:34,960
variations in how it's actually deployed

1551
00:58:34,960 --> 00:58:36,400
and configured but it's very widely

1552
00:58:36,400 --> 00:58:37,920
implemented and very widely deployed at

1553
00:58:37,920 --> 00:58:40,319
this point

1554
00:58:40,960 --> 00:58:43,920
to battle dns outages you should

1555
00:58:43,920 --> 00:58:45,359
optimize your caches

1556
00:58:45,359 --> 00:58:46,480
because there's been a number of

1557
00:58:46,480 --> 00:58:48,240
research recent research studies that

1558
00:58:48,240 --> 00:58:49,200
have shown

1559
00:58:49,200 --> 00:58:51,440
that if you are on a network and you

1560
00:58:51,440 --> 00:58:53,200
don't want to be affected by dos attacks

1561
00:58:53,200 --> 00:58:54,960
there's a few things that you can do

1562
00:58:54,960 --> 00:58:58,240
one latest rfc is been published called

1563
00:58:58,240 --> 00:59:00,559
serv stale that basically says

1564
00:59:00,559 --> 00:59:02,960
if you fail to get an answer to a

1565
00:59:02,960 --> 00:59:04,160
question that you've asked

1566
00:59:04,160 --> 00:59:06,079
it's okay to use an old one at least for

1567
00:59:06,079 --> 00:59:07,760
a while uh so

1568
00:59:07,760 --> 00:59:10,160
that's you know helps protect your local

1569
00:59:10,160 --> 00:59:12,000
infrastructure from outages

1570
00:59:12,000 --> 00:59:14,079
and then if you can also run a copy of

1571
00:59:14,079 --> 00:59:15,599
the root zone on your local

1572
00:59:15,599 --> 00:59:18,720
resolver which is rfc 86 8606 and i have

1573
00:59:18,720 --> 00:59:21,040
a local root project at isi

1574
00:59:21,040 --> 00:59:22,480
that actually allows you to mirror and

1575
00:59:22,480 --> 00:59:23,839
simply mirror a whole bunch of other

1576
00:59:23,839 --> 00:59:25,200
zones as well

1577
00:59:25,200 --> 00:59:27,599
there's also insect aggressive caching

1578
00:59:27,599 --> 00:59:29,520
this is actually highly beneficial

1579
00:59:29,520 --> 00:59:31,680
to prevent validating resolvers from

1580
00:59:31,680 --> 00:59:33,200
asking questions that they know that

1581
00:59:33,200 --> 00:59:34,799
there isn't an answer for

1582
00:59:34,799 --> 00:59:36,319
one thing i'm not getting into today

1583
00:59:36,319 --> 00:59:38,000
about dnssec is how you can

1584
00:59:38,000 --> 00:59:41,359
provably know that there isn't a name

1585
00:59:41,359 --> 00:59:43,920
within a zone based on some of the

1586
00:59:43,920 --> 00:59:45,359
additional records the insect record

1587
00:59:45,359 --> 00:59:46,000
that i'm not talking

1588
00:59:46,000 --> 00:59:48,720
about today but it reduces traffic loads

1589
00:59:48,720 --> 00:59:52,399
to authoritative servers by quite a bit

1590
00:59:52,960 --> 00:59:56,160
now uh the one thing to note is i gave

1591
00:59:56,160 --> 00:59:56,960
you a

1592
00:59:56,960 --> 00:59:59,760
short overview about all of the

1593
00:59:59,760 --> 01:00:00,559
potential

1594
01:00:00,559 --> 01:00:03,359
security topics at a very high level

1595
01:00:03,359 --> 01:00:04,960
each one of the topics that i covered

1596
01:00:04,960 --> 01:00:06,640
including dough including dnfsec

1597
01:00:06,640 --> 01:00:08,720
including pass security and everything

1598
01:00:08,720 --> 01:00:11,040
could take an entire 30-minute segment

1599
01:00:11,040 --> 01:00:13,760
on its own to dive deeply into it

1600
01:00:13,760 --> 01:00:15,920
so we didn't we didn't go into

1601
01:00:15,920 --> 01:00:17,359
everything that's related to dns

1602
01:00:17,359 --> 01:00:18,559
security but

1603
01:00:18,559 --> 01:00:20,559
we these are potential topics for future

1604
01:00:20,559 --> 01:00:21,920
talks if people want to hear about them

1605
01:00:21,920 --> 01:00:22,960
or you can look up

1606
01:00:22,960 --> 01:00:24,640
look them up on on the internet for

1607
01:00:24,640 --> 01:00:25,920
other sources of people that have talked

1608
01:00:25,920 --> 01:00:26,720
about them

1609
01:00:26,720 --> 01:00:28,720
um but you know for just to pick a

1610
01:00:28,720 --> 01:00:30,160
couple of example ones

1611
01:00:30,160 --> 01:00:32,160
uh you can have multiple sources of

1612
01:00:32,160 --> 01:00:34,000
trust anchors for example so

1613
01:00:34,000 --> 01:00:36,400
i talked about the root of the dns sec

1614
01:00:36,400 --> 01:00:38,559
key having its uh the dnsec

1615
01:00:38,559 --> 01:00:40,000
having it you know a single trust anchor

1616
01:00:40,000 --> 01:00:41,520
at the root but there are enterprises

1617
01:00:41,520 --> 01:00:42,160
that actually

1618
01:00:42,160 --> 01:00:43,599
also have a trust anchor for their local

1619
01:00:43,599 --> 01:00:45,920
enterprise uh nsec3 is a pr

1620
01:00:45,920 --> 01:00:49,520
is a slightly more privacy protecting on

1621
01:00:49,520 --> 01:00:51,440
the zone owner's side of way to prove

1622
01:00:51,440 --> 01:00:53,119
that something doesn't exist

1623
01:00:53,119 --> 01:00:56,160
uh there's many ways of doing bootstrap

1624
01:00:56,160 --> 01:00:56,880
security

1625
01:00:56,880 --> 01:00:58,720
that's becoming more and more popular

1626
01:00:58,720 --> 01:01:01,520
like dane pgp keys ssh fingerprints and

1627
01:01:01,520 --> 01:01:02,960
things like that all of a sudden become

1628
01:01:02,960 --> 01:01:04,720
much much more

1629
01:01:04,720 --> 01:01:06,319
secure when you're actually signing them

1630
01:01:06,319 --> 01:01:08,799
with the nsx i didn't talk about how

1631
01:01:08,799 --> 01:01:11,119
dnsec you can actually know when you're

1632
01:01:11,119 --> 01:01:13,520
falling into an insecure zone for

1633
01:01:13,520 --> 01:01:14,240
example

1634
01:01:14,240 --> 01:01:16,880
so dnsec actually does a great job of

1635
01:01:16,880 --> 01:01:17,599
knowing

1636
01:01:17,599 --> 01:01:19,520
letting you know that you are in the

1637
01:01:19,520 --> 01:01:21,359
secure portion of the dns versus the

1638
01:01:21,359 --> 01:01:23,520
insecure portion of the dns

1639
01:01:23,520 --> 01:01:25,040
anyway there's a bunch of other topics

1640
01:01:25,040 --> 01:01:26,160
i'm not going to talk about i talked a

1641
01:01:26,160 --> 01:01:27,760
little bit about q name minimization

1642
01:01:27,760 --> 01:01:28,799
last time

1643
01:01:28,799 --> 01:01:30,480
um there's algorithms strengths and

1644
01:01:30,480 --> 01:01:31,599
rollovers which are actually really

1645
01:01:31,599 --> 01:01:33,119
being talked about right now how do you

1646
01:01:33,119 --> 01:01:34,799
deal with cryptographic changeovers when

1647
01:01:34,799 --> 01:01:35,760
algorithms will get

1648
01:01:35,760 --> 01:01:38,079
get weeks jeff talked about query loops

1649
01:01:38,079 --> 01:01:38,960
earlier

1650
01:01:38,960 --> 01:01:41,040
um then there's even unauthoritative

1651
01:01:41,040 --> 01:01:43,119
servers the servers that you know answer

1652
01:01:43,119 --> 01:01:45,680
for incorrectly do you know helps fix

1653
01:01:45,680 --> 01:01:47,119
that at least

1654
01:01:47,119 --> 01:01:48,400
and then you know one of the biggest

1655
01:01:48,400 --> 01:01:49,760
ones out there is i'm sure you've all

1656
01:01:49,760 --> 01:01:51,520
been in a hotel or been in a coffee shop

1657
01:01:51,520 --> 01:01:53,119
that you have dns intercepting middle

1658
01:01:53,119 --> 01:01:54,720
boxes that

1659
01:01:54,720 --> 01:01:56,400
refuse to give you the answers you want

1660
01:01:56,400 --> 01:01:58,079
because maybe it's you're behind a

1661
01:01:58,079 --> 01:01:59,760
paywall or something like that

1662
01:01:59,760 --> 01:02:01,520
and you know what sort of things there's

1663
01:02:01,520 --> 01:02:03,760
actually rfcs about that as well as

1664
01:02:03,760 --> 01:02:06,160
dnsec can help in that case and there's

1665
01:02:06,160 --> 01:02:07,440
a bunch of other things

1666
01:02:07,440 --> 01:02:09,200
related to dns second particular about

1667
01:02:09,200 --> 01:02:10,720
white lies and black lives which i won't

1668
01:02:10,720 --> 01:02:13,200
go into as well as minimal signing

1669
01:02:13,200 --> 01:02:15,280
and there's many new things in working

1670
01:02:15,280 --> 01:02:16,640
group states that are that are not

1671
01:02:16,640 --> 01:02:18,160
included in these slides yet except for

1672
01:02:18,160 --> 01:02:19,200
a couple like

1673
01:02:19,200 --> 01:02:22,079
oblivious dns over https that are still

1674
01:02:22,079 --> 01:02:23,359
being worked on

1675
01:02:23,359 --> 01:02:25,440
so with that i'm going to turn it over

1676
01:02:25,440 --> 01:02:27,119
to joao who is going to talk

1677
01:02:27,119 --> 01:02:30,160
about myths in the dns and

1678
01:02:30,160 --> 01:02:34,000
some wonderful misconceptions and give

1679
01:02:34,000 --> 01:02:35,039
you new answers

1680
01:02:35,039 --> 01:02:39,280
right joao i'll try i'll try thanks wes

1681
01:02:39,280 --> 01:02:41,839
let me start by seeing if i can share

1682
01:02:41,839 --> 01:02:44,400
the screen

1683
01:02:45,599 --> 01:02:49,839
can you all hear me by the way

1684
01:02:51,680 --> 01:02:54,880
yep okay good

1685
01:02:54,880 --> 01:02:58,319
and all that's left is selecting the

1686
01:02:58,319 --> 01:02:58,880
slides

1687
01:02:58,880 --> 01:03:01,280
okay so this last this last part this

1688
01:03:01,280 --> 01:03:03,119
last half hour so

1689
01:03:03,119 --> 01:03:06,240
is a a collection of loose ends uh

1690
01:03:06,240 --> 01:03:08,799
but that people come up with frequently

1691
01:03:08,799 --> 01:03:09,760
so we decided

1692
01:03:09,760 --> 01:03:11,520
maybe it's a good idea to look do a

1693
01:03:11,520 --> 01:03:12,799
quick review of

1694
01:03:12,799 --> 01:03:15,520
common misconceptions about the dns or

1695
01:03:15,520 --> 01:03:17,119
things people think work one way but

1696
01:03:17,119 --> 01:03:18,960
actually work a different way

1697
01:03:18,960 --> 01:03:23,039
so let's go also as i see that

1698
01:03:23,039 --> 01:03:25,119
a lot of the people actually watching

1699
01:03:25,119 --> 01:03:27,440
this live are dns experts

1700
01:03:27,440 --> 01:03:30,880
feel free to add a complement or correct

1701
01:03:30,880 --> 01:03:34,400
at the end in case i got something wrong

1702
01:03:34,400 --> 01:03:37,440
so one of the usual things you see

1703
01:03:37,440 --> 01:03:40,559
even at the idf is that when people want

1704
01:03:40,559 --> 01:03:41,119
to have

1705
01:03:41,119 --> 01:03:42,559
a solution for a problem of

1706
01:03:42,559 --> 01:03:45,200
disseminating information

1707
01:03:45,200 --> 01:03:48,400
in a way that's helpful siri

1708
01:03:48,400 --> 01:03:51,359
um that is accessible to everyone in the

1709
01:03:51,359 --> 01:03:52,000
internet

1710
01:03:52,000 --> 01:03:56,160
um and this distribution is

1711
01:03:56,160 --> 01:03:58,559
propagating history the way uh it's

1712
01:03:58,559 --> 01:04:00,319
often the case that they look to the dns

1713
01:04:00,319 --> 01:04:02,240
as the solution to other problems

1714
01:04:02,240 --> 01:04:04,400
uh dns after all is a success story and

1715
01:04:04,400 --> 01:04:06,079
so it also carries with it

1716
01:04:06,079 --> 01:04:09,280
the burden of that success one of the

1717
01:04:09,280 --> 01:04:10,799
problems that people have

1718
01:04:10,799 --> 01:04:13,039
uh in implementing that solution i mean

1719
01:04:13,039 --> 01:04:14,400
after all the dns is there

1720
01:04:14,400 --> 01:04:17,280
to be used so everyone is welcome to use

1721
01:04:17,280 --> 01:04:18,640
it to their best uh

1722
01:04:18,640 --> 01:04:21,680
advantage however it

1723
01:04:21,680 --> 01:04:23,520
should be realized that better ways and

1724
01:04:23,520 --> 01:04:26,880
worse ways of doing this one of the ones

1725
01:04:26,880 --> 01:04:29,599
that has traditionally been abused as

1726
01:04:29,599 --> 01:04:31,440
jeff mentioned briefly earlier

1727
01:04:31,440 --> 01:04:36,079
is the abuse of the text record

1728
01:04:36,079 --> 01:04:39,200
and i realized that there is a an rsc

1729
01:04:39,200 --> 01:04:39,520
from

1730
01:04:39,520 --> 01:04:43,599
1993 rc1464 that actually defines how

1731
01:04:43,599 --> 01:04:46,240
you should dump stuff on the tax record

1732
01:04:46,240 --> 01:04:47,839
if you want to do that to solve your

1733
01:04:47,839 --> 01:04:49,359
more immediate problems

1734
01:04:49,359 --> 01:04:53,359
it's still a bad idea and the problem is

1735
01:04:53,359 --> 01:04:55,520
the dns defines not only resource

1736
01:04:55,520 --> 01:04:57,359
records but also the idea of resource

1737
01:04:57,359 --> 01:04:57,839
record

1738
01:04:57,839 --> 01:05:01,280
sets and those are all the records of

1739
01:05:01,280 --> 01:05:02,880
the same type that are present at a

1740
01:05:02,880 --> 01:05:03,680
given name

1741
01:05:03,680 --> 01:05:05,920
and the dns also defines those to be

1742
01:05:05,920 --> 01:05:07,599
indivisible

1743
01:05:07,599 --> 01:05:10,880
so if you ask for a text record at the

1744
01:05:10,880 --> 01:05:11,680
given name

1745
01:05:11,680 --> 01:05:14,079
you the dns server is obliged to give

1746
01:05:14,079 --> 01:05:15,039
you all of them

1747
01:05:15,039 --> 01:05:17,440
even if you don't want it so if you are

1748
01:05:17,440 --> 01:05:19,119
the first one that uses a given

1749
01:05:19,119 --> 01:05:21,440
text recorder to solve your problem

1750
01:05:21,440 --> 01:05:22,240
you're probably

1751
01:05:22,240 --> 01:05:24,880
okay with it but some people other

1752
01:05:24,880 --> 01:05:26,240
people will see that

1753
01:05:26,240 --> 01:05:28,960
and will try to use the same and then

1754
01:05:28,960 --> 01:05:30,559
after a little while you won't be the

1755
01:05:30,559 --> 01:05:32,240
only one using that

1756
01:05:32,240 --> 01:05:33,839
and then the problem comes and to

1757
01:05:33,839 --> 01:05:35,599
illustrate these i'm just

1758
01:05:35,599 --> 01:05:37,520
using this example that's now on screen

1759
01:05:37,520 --> 01:05:39,280
not to pick on google or anything like

1760
01:05:39,280 --> 01:05:40,160
that

1761
01:05:40,160 --> 01:05:43,200
but that is actually the result of a dns

1762
01:05:43,200 --> 01:05:44,400
query

1763
01:05:44,400 --> 01:05:47,200
you can do it live now and you will see

1764
01:05:47,200 --> 01:05:48,960
and as you can see there are

1765
01:05:48,960 --> 01:05:51,119
five text records and four different

1766
01:05:51,119 --> 01:05:52,000
usages

1767
01:05:52,000 --> 01:05:54,240
for that if you query for the text

1768
01:05:54,240 --> 01:05:55,359
records at that

1769
01:05:55,359 --> 01:05:58,400
name you necessarily get all of them and

1770
01:05:58,400 --> 01:06:00,160
then you have to start parsing the ones

1771
01:06:00,160 --> 01:06:01,200
that you want

1772
01:06:01,200 --> 01:06:02,720
from the ones that you don't want to

1773
01:06:02,720 --> 01:06:05,200
select and proceed

1774
01:06:05,200 --> 01:06:06,559
and as you see there are the most

1775
01:06:06,559 --> 01:06:08,240
diverse uses uh

1776
01:06:08,240 --> 01:06:11,359
made being made of these records so okay

1777
01:06:11,359 --> 01:06:12,880
so if that's not the best way

1778
01:06:12,880 --> 01:06:16,079
what is the best way well we the current

1779
01:06:16,079 --> 01:06:17,520
thinking is that you should just get

1780
01:06:17,520 --> 01:06:18,640
another type the

1781
01:06:18,640 --> 01:06:22,720
our type code space is big

1782
01:06:22,720 --> 01:06:25,760
we are not filling it up at any

1783
01:06:25,760 --> 01:06:27,760
rate that will put in danger the

1784
01:06:27,760 --> 01:06:29,599
exhaustion of that space

1785
01:06:29,599 --> 01:06:33,119
so just go ahead and try to get one

1786
01:06:33,119 --> 01:06:35,359
uh it is not hard there has been a myth

1787
01:06:35,359 --> 01:06:36,799
that is going to be hard

1788
01:06:36,799 --> 01:06:38,960
because uh this would mean you have to

1789
01:06:38,960 --> 01:06:40,319
write rfc

1790
01:06:40,319 --> 01:06:42,000
go through the motion of the working

1791
01:06:42,000 --> 01:06:44,720
group back and forth comments and so on

1792
01:06:44,720 --> 01:06:47,680
and it takes very long time and then it

1793
01:06:47,680 --> 01:06:48,880
has to be implemented

1794
01:06:48,880 --> 01:06:53,119
well actually no there is a

1795
01:06:53,119 --> 01:06:56,640
a fast path to get a new

1796
01:06:56,640 --> 01:06:59,680
rr type and you all have to do

1797
01:06:59,680 --> 01:07:02,880
is basically if as long as you don't

1798
01:07:02,880 --> 01:07:06,000
ex demand that the name servers the dns

1799
01:07:06,000 --> 01:07:07,039
servers that are delivering the

1800
01:07:07,039 --> 01:07:08,400
information have to do special

1801
01:07:08,400 --> 01:07:09,520
processing

1802
01:07:09,520 --> 01:07:12,799
they just do a standard lookup

1803
01:07:12,799 --> 01:07:16,240
in a database for to fetch a value for a

1804
01:07:16,240 --> 01:07:17,440
key

1805
01:07:17,440 --> 01:07:19,520
and so you just have to define what the

1806
01:07:19,520 --> 01:07:21,119
format of that record is

1807
01:07:21,119 --> 01:07:23,359
in a clear spec in an internet graph and

1808
01:07:23,359 --> 01:07:24,799
then you submit it to

1809
01:07:24,799 --> 01:07:27,039
the a panel of experts there's a

1810
01:07:27,039 --> 01:07:28,880
standing panel waiting for you

1811
01:07:28,880 --> 01:07:30,960
to send in the requests your requests

1812
01:07:30,960 --> 01:07:32,640
and they'll review it and come back to

1813
01:07:32,640 --> 01:07:32,960
you

1814
01:07:32,960 --> 01:07:35,119
with comments or approval in a fairly

1815
01:07:35,119 --> 01:07:36,640
short amount of time so that's

1816
01:07:36,640 --> 01:07:38,000
definitely the best way of getting

1817
01:07:38,000 --> 01:07:39,039
things done

1818
01:07:39,039 --> 01:07:42,160
for your application

1819
01:07:42,160 --> 01:07:45,119
uh sometimes people also get confused

1820
01:07:45,119 --> 01:07:45,760
about

1821
01:07:45,760 --> 01:07:48,240
separating the name spaces and one way

1822
01:07:48,240 --> 01:07:49,280
of doing that

1823
01:07:49,280 --> 01:07:52,559
would be for instance inventing your own

1824
01:07:52,559 --> 01:07:54,160
top level domain

1825
01:07:54,160 --> 01:07:57,280
or buying it um either of those options

1826
01:07:57,280 --> 01:07:58,880
is not good they are hard

1827
01:07:58,880 --> 01:08:00,559
they are expensive they are pointless

1828
01:08:00,559 --> 01:08:01,839
and they cause more problem than it's

1829
01:08:01,839 --> 01:08:03,680
worth

1830
01:08:03,680 --> 01:08:06,000
um well i just jumped ahead of myself i

1831
01:08:06,000 --> 01:08:07,039
will say that

1832
01:08:07,039 --> 01:08:09,760
so don't get a ldld uh if you get a

1833
01:08:09,760 --> 01:08:11,280
proper internet one you

1834
01:08:11,280 --> 01:08:12,640
have to go through the whole icon

1835
01:08:12,640 --> 01:08:14,400
process and it's expensive it's very

1836
01:08:14,400 --> 01:08:16,000
hard it involves layers

1837
01:08:16,000 --> 01:08:19,120
it takes a long time longer than you

1838
01:08:19,120 --> 01:08:21,600
might even imagine it was possible

1839
01:08:21,600 --> 01:08:23,359
and and it's probably also not the

1840
01:08:23,359 --> 01:08:25,359
solution to your problems so

1841
01:08:25,359 --> 01:08:28,640
um not a good idea if you make

1842
01:08:28,640 --> 01:08:31,759
up your own tld which uh people have

1843
01:08:31,759 --> 01:08:33,600
been known to do in the past

1844
01:08:33,600 --> 01:08:35,439
then the problems are of the sort you

1845
01:08:35,439 --> 01:08:37,359
don't have the approval process to take

1846
01:08:37,359 --> 01:08:38,158
care of

1847
01:08:38,158 --> 01:08:40,640
but most likely down the road at some

1848
01:08:40,640 --> 01:08:43,120
point you'll have clashes in namespace

1849
01:08:43,120 --> 01:08:46,799
because if you mix your

1850
01:08:46,799 --> 01:08:49,279
own newly created namespace with the

1851
01:08:49,279 --> 01:08:50,319
internet's

1852
01:08:50,319 --> 01:08:52,719
shared namespace at some point things

1853
01:08:52,719 --> 01:08:53,439
are going to get

1854
01:08:53,439 --> 01:08:56,000
hairy there will be clashes there will

1855
01:08:56,000 --> 01:08:57,359
be in definition of

1856
01:08:57,359 --> 01:08:59,040
which namespace you have to address to

1857
01:08:59,040 --> 01:09:00,560
get the information you want

1858
01:09:00,560 --> 01:09:02,238
and it's generally not a good idea a

1859
01:09:02,238 --> 01:09:04,719
network is only good as

1860
01:09:04,719 --> 01:09:07,839
its cohesion as the participation of

1861
01:09:07,839 --> 01:09:10,479
everyone if you split the naming space

1862
01:09:10,479 --> 01:09:11,600
of the internet you are actually

1863
01:09:11,600 --> 01:09:12,640
splitting the internet

1864
01:09:12,640 --> 01:09:15,359
and then you have instead of one big

1865
01:09:15,359 --> 01:09:18,560
network you have two smaller networks

1866
01:09:18,560 --> 01:09:21,759
and each of them has less value

1867
01:09:21,759 --> 01:09:24,960
now um jeff alluded to these and

1868
01:09:24,960 --> 01:09:26,799
whether names are for humans or not what

1869
01:09:26,799 --> 01:09:29,679
is the purpose of names

1870
01:09:29,679 --> 01:09:31,679
well in the beginning everyone was kind

1871
01:09:31,679 --> 01:09:33,359
of happy with ascii

1872
01:09:33,359 --> 01:09:34,960
with just identifying machines and

1873
01:09:34,960 --> 01:09:37,439
phones as jeff described things got more

1874
01:09:37,439 --> 01:09:38,799
complicated with time

1875
01:09:38,799 --> 01:09:40,719
and obviously one of the things that

1876
01:09:40,719 --> 01:09:42,399
humans want is to speak their own

1877
01:09:42,399 --> 01:09:44,560
language and write in their own language

1878
01:09:44,560 --> 01:09:49,040
and that wasn't possible in the dns um

1879
01:09:49,040 --> 01:09:52,238
there were attempts at trying to define

1880
01:09:52,238 --> 01:09:56,239
dns labels that would be able to encode

1881
01:09:57,199 --> 01:09:59,360
unicode characters but it didn't quite

1882
01:09:59,360 --> 01:10:01,280
work out

1883
01:10:01,280 --> 01:10:03,440
actually in fact the problem is not with

1884
01:10:03,440 --> 01:10:05,600
the dns itself the nes itself would be

1885
01:10:05,600 --> 01:10:06,239
happy

1886
01:10:06,239 --> 01:10:09,440
with uh uh any sort of a

1887
01:10:09,440 --> 01:10:12,719
stream of 8b values that it was given

1888
01:10:12,719 --> 01:10:14,320
but the implementations and the

1889
01:10:14,320 --> 01:10:17,280
applications that make use of dns

1890
01:10:17,280 --> 01:10:19,600
started interpreting things in a way

1891
01:10:19,600 --> 01:10:20,800
that

1892
01:10:20,800 --> 01:10:24,400
implied the use of ascii soon after the

1893
01:10:24,400 --> 01:10:24,960
usage

1894
01:10:24,960 --> 01:10:27,679
for instance it was implied that

1895
01:10:27,679 --> 01:10:29,280
capitalization of a name

1896
01:10:29,280 --> 01:10:31,520
should not be taken into account for uh

1897
01:10:31,520 --> 01:10:32,960
comparisons

1898
01:10:32,960 --> 01:10:35,120
and that you should only expect a

1899
01:10:35,120 --> 01:10:36,640
certain number of characters and that

1900
01:10:36,640 --> 01:10:37,280
kind of

1901
01:10:37,280 --> 01:10:38,960
even though the protocol itself allowed

1902
01:10:38,960 --> 01:10:40,960
for uh 8-bit clean

1903
01:10:40,960 --> 01:10:42,560
labels in the practice all the

1904
01:10:42,560 --> 01:10:44,480
implementations and applications that

1905
01:10:44,480 --> 01:10:45,760
made use of it

1906
01:10:45,760 --> 01:10:49,120
stop that being a possibility

1907
01:10:49,120 --> 01:10:51,440
so we still wanted to write in our own

1908
01:10:51,440 --> 01:10:52,159
languages

1909
01:10:52,159 --> 01:10:54,960
and the ietf came up with the idea of

1910
01:10:54,960 --> 01:10:57,520
idea internationalized domain names

1911
01:10:57,520 --> 01:11:00,239
what this does is define a way of

1912
01:11:00,239 --> 01:11:01,440
encoding unique

1913
01:11:01,440 --> 01:11:04,320
unicode characters for many scripts in a

1914
01:11:04,320 --> 01:11:07,600
dns compatible ascii representation

1915
01:11:07,600 --> 01:11:11,600
it does work but

1916
01:11:11,600 --> 01:11:13,760
while it solves the problem it creates

1917
01:11:13,760 --> 01:11:14,800
new ones as

1918
01:11:14,800 --> 01:11:16,560
is often the case with many things

1919
01:11:16,560 --> 01:11:18,719
humans do

1920
01:11:18,719 --> 01:11:21,600
one of the problems is that several

1921
01:11:21,600 --> 01:11:22,719
characters

1922
01:11:22,719 --> 01:11:25,520
in different scripts actually look the

1923
01:11:25,520 --> 01:11:26,000
same

1924
01:11:26,000 --> 01:11:27,600
to the human eye when they are

1925
01:11:27,600 --> 01:11:30,239
represented by a web browser on screen

1926
01:11:30,239 --> 01:11:31,920
for instance or any other application

1927
01:11:31,920 --> 01:11:34,159
that makes a visual representation

1928
01:11:34,159 --> 01:11:36,159
some of them don't look the same but are

1929
01:11:36,159 --> 01:11:38,239
remarkably close to each other

1930
01:11:38,239 --> 01:11:40,080
and for instance i'm putting the case

1931
01:11:40,080 --> 01:11:41,600
there of the

1932
01:11:41,600 --> 01:11:43,840
latin eye which has a dot on it and the

1933
01:11:43,840 --> 01:11:46,320
turkish eye without the dot

1934
01:11:46,320 --> 01:11:50,080
i think the letter is actually called ha

1935
01:11:50,239 --> 01:11:53,120
which you think is easy to spot but if

1936
01:11:53,120 --> 01:11:54,800
you have a long text

1937
01:11:54,800 --> 01:11:56,560
it's probably not that easy so this

1938
01:11:56,560 --> 01:11:58,159
creates problems because

1939
01:11:58,159 --> 01:12:00,640
bad people are bound to be using this

1940
01:12:00,640 --> 01:12:01,840
against

1941
01:12:01,840 --> 01:12:04,719
good people innocent people in internet

1942
01:12:04,719 --> 01:12:05,120
so

1943
01:12:05,120 --> 01:12:07,280
as an example of the representation i'm

1944
01:12:07,280 --> 01:12:08,400
putting these up there

1945
01:12:08,400 --> 01:12:11,600
um there's three domain names

1946
01:12:11,600 --> 01:12:13,920
um probably something familiar to

1947
01:12:13,920 --> 01:12:15,840
everyone

1948
01:12:15,840 --> 01:12:17,840
i dare you to click on any of them see

1949
01:12:17,840 --> 01:12:19,520
where you go

1950
01:12:19,520 --> 01:12:21,920
and that would illustrate the problem we

1951
01:12:21,920 --> 01:12:22,800
are talking about

1952
01:12:22,800 --> 01:12:26,640
um there's a website to generate the

1953
01:12:26,640 --> 01:12:29,840
names with homoglyphs and

1954
01:12:29,840 --> 01:12:31,520
characters that be in the screen to be

1955
01:12:31,520 --> 01:12:32,880
something else to see

1956
01:12:32,880 --> 01:12:35,840
this is the same as the ones you want to

1957
01:12:35,840 --> 01:12:36,640
represent but

1958
01:12:36,640 --> 01:12:38,480
actually represent it differently and

1959
01:12:38,480 --> 01:12:39,920
this is a sort of problem

1960
01:12:39,920 --> 01:12:42,960
which relates to west's

1961
01:12:42,960 --> 01:12:46,640
problems on security

1962
01:12:46,640 --> 01:12:48,800
so again what are the valid characters

1963
01:12:48,800 --> 01:12:50,080
on dns well the dns

1964
01:12:50,080 --> 01:12:52,000
has itself as i said doesn't actually

1965
01:12:52,000 --> 01:12:53,440
place a restriction on

1966
01:12:53,440 --> 01:12:54,880
what car is going to use the only

1967
01:12:54,880 --> 01:12:58,000
restriction that dns plays on names

1968
01:12:58,000 --> 01:13:01,040
is about size each label can have up to

1969
01:13:01,040 --> 01:13:02,960
63 bytes and altogether

1970
01:13:02,960 --> 01:13:04,800
a name made of several labels can have

1971
01:13:04,800 --> 01:13:06,800
up to 355 bytes

1972
01:13:06,800 --> 01:13:08,080
it's almost like they wrote this in

1973
01:13:08,080 --> 01:13:12,000
pascal um

1974
01:13:12,000 --> 01:13:14,640
but applications do place restrictions

1975
01:13:14,640 --> 01:13:15,600
some of them

1976
01:13:15,600 --> 01:13:17,600
are applications or common uses that

1977
01:13:17,600 --> 01:13:18,880
were already

1978
01:13:18,880 --> 01:13:20,719
inherited by the dns because they were

1979
01:13:20,719 --> 01:13:22,719
exist in existence before the dns came

1980
01:13:22,719 --> 01:13:23,679
into place

1981
01:13:23,679 --> 01:13:25,840
and one of those was the host name

1982
01:13:25,840 --> 01:13:26,719
restriction that

1983
01:13:26,719 --> 01:13:29,199
jeff also mentioned also the

1984
01:13:29,199 --> 01:13:30,000
restrictions

1985
01:13:30,000 --> 01:13:33,040
have our conventions have been evolved

1986
01:13:33,040 --> 01:13:35,120
with the time soon after the dns

1987
01:13:35,120 --> 01:13:37,280
was defined and the concept of a host

1988
01:13:37,280 --> 01:13:38,640
name was defined with stone's

1989
01:13:38,640 --> 01:13:40,080
restrictions

1990
01:13:40,080 --> 01:13:43,199
it was altered because in the beginning

1991
01:13:43,199 --> 01:13:44,880
you weren't allowed to have domain names

1992
01:13:44,880 --> 01:13:46,719
that started with or the main labels

1993
01:13:46,719 --> 01:13:48,719
that were started with a number

1994
01:13:48,719 --> 01:13:50,800
and there used to be this famous company

1995
01:13:50,800 --> 01:13:52,320
called freecom that had a problem with

1996
01:13:52,320 --> 01:13:52,960
that

1997
01:13:52,960 --> 01:13:55,600
so we changed the rules uh still for

1998
01:13:55,600 --> 01:13:56,640
instance today

1999
01:13:56,640 --> 01:14:00,080
uh and this illustrates the uh

2000
01:14:00,080 --> 01:14:01,440
principle that you should be liberal

2001
01:14:01,440 --> 01:14:04,800
with what it said things like 4011 411.

2002
01:14:04,800 --> 01:14:07,040
um exist and work even though the

2003
01:14:07,040 --> 01:14:08,560
standards say that the

2004
01:14:08,560 --> 01:14:10,400
a label should have at least one letter

2005
01:14:10,400 --> 01:14:12,320
something that is not a number you can

2006
01:14:12,320 --> 01:14:14,080
should not be able to have labels that

2007
01:14:14,080 --> 01:14:15,920
are only numbers but there you go

2008
01:14:15,920 --> 01:14:19,120
they exist and they work

2009
01:14:21,840 --> 01:14:25,679
so how do we represent these idn's as i

2010
01:14:25,679 --> 01:14:26,239
mentioned

2011
01:14:26,239 --> 01:14:28,960
it's an ascii compatible representation

2012
01:14:28,960 --> 01:14:29,600
there's an

2013
01:14:29,600 --> 01:14:32,080
encoding called punycode that's how we

2014
01:14:32,080 --> 01:14:34,090
represent these names

2015
01:14:34,090 --> 01:14:35,840
[Music]

2016
01:14:35,840 --> 01:14:38,159
you see an example there at the left

2017
01:14:38,159 --> 01:14:39,520
side you see the representation that the

2018
01:14:39,520 --> 01:14:40,880
dns actually stores

2019
01:14:40,880 --> 01:14:42,480
and delivers to the application but on

2020
01:14:42,480 --> 01:14:44,080
the right side is what the application

2021
01:14:44,080 --> 01:14:45,679
represents and you can find very

2022
01:14:45,679 --> 01:14:47,199
interesting examples

2023
01:14:47,199 --> 01:14:50,199
uh for instance in that

2024
01:14:50,199 --> 01:14:51,600
example.several.example.com

2025
01:14:51,600 --> 01:14:53,600
it's not clear to anyone just by looking

2026
01:14:53,600 --> 01:14:55,360
at it where the actual dot is where the

2027
01:14:55,360 --> 01:14:56,880
label begins where the

2028
01:14:56,880 --> 01:15:00,880
label ends and that poses problems

2029
01:15:01,280 --> 01:15:03,199
and it's it's kind of a hard problem to

2030
01:15:03,199 --> 01:15:06,080
solve to be honest

2031
01:15:06,080 --> 01:15:08,080
so a lot of these problems from the fact

2032
01:15:08,080 --> 01:15:09,679
that people are more and more thinking

2033
01:15:09,679 --> 01:15:11,760
about the dns as if it was a search

2034
01:15:11,760 --> 01:15:13,040
engine and by god

2035
01:15:13,040 --> 01:15:14,719
it is not a search engine if you want

2036
01:15:14,719 --> 01:15:16,800
the search engine go to google bing

2037
01:15:16,800 --> 01:15:18,480
whatever you like your preference might

2038
01:15:18,480 --> 01:15:20,960
be but the dns is

2039
01:15:20,960 --> 01:15:25,520
is not that so just an aside

2040
01:15:25,520 --> 01:15:28,960
okay another thing people often

2041
01:15:28,960 --> 01:15:30,960
stumble upon in the dns when they use

2042
01:15:30,960 --> 01:15:32,800
the dns um

2043
01:15:32,800 --> 01:15:35,520
is an asterisk a valid label or is it

2044
01:15:35,520 --> 01:15:37,840
something else

2045
01:15:37,840 --> 01:15:40,320
well it is a valid label but its meaning

2046
01:15:40,320 --> 01:15:41,840
depends on where it appears and how it

2047
01:15:41,840 --> 01:15:43,920
appears

2048
01:15:43,920 --> 01:15:48,320
if it's used in a query

2049
01:15:48,320 --> 01:15:52,640
um it might be a wildcard

2050
01:15:52,640 --> 01:15:55,920
not exactly a traditional label uh

2051
01:15:55,920 --> 01:15:57,840
however it's only a wild card if it's a

2052
01:15:57,840 --> 01:15:59,920
play only if it appears by

2053
01:15:59,920 --> 01:16:02,159
itself it's the only character in that

2054
01:16:02,159 --> 01:16:04,640
level and it's the leftmost label

2055
01:16:04,640 --> 01:16:07,679
in any other place or combination

2056
01:16:07,679 --> 01:16:09,920
it stops being a wild card so don't

2057
01:16:09,920 --> 01:16:11,199
think about parallel

2058
01:16:11,199 --> 01:16:13,120
regular expressions that's not what this

2059
01:16:13,120 --> 01:16:15,440
is about it's just a one

2060
01:16:15,440 --> 01:16:17,440
instance of a wild card and it only

2061
01:16:17,440 --> 01:16:19,440
works as such when it appears in

2062
01:16:19,440 --> 01:16:21,920
in the star currencies you cannot

2063
01:16:21,920 --> 01:16:22,719
combine

2064
01:16:22,719 --> 01:16:25,760
a star to mean all the names beginning

2065
01:16:25,760 --> 01:16:28,159
with a

2066
01:16:28,640 --> 01:16:32,000
if it is stored in a zone

2067
01:16:32,000 --> 01:16:34,960
it's it's uh it can be just the

2068
01:16:34,960 --> 01:16:35,840
characteristics

2069
01:16:35,840 --> 01:16:37,600
just like if it appears anywhere else in

2070
01:16:37,600 --> 01:16:39,440
the in the query and asterisk

2071
01:16:39,440 --> 01:16:41,440
again is is a valid name in the domain

2072
01:16:41,440 --> 01:16:43,199
name because the dns doesn't place the

2073
01:16:43,199 --> 01:16:44,320
restrictions

2074
01:16:44,320 --> 01:16:47,280
in the names it can store so you might

2075
01:16:47,280 --> 01:16:49,600
as well uh end up with a name that's

2076
01:16:49,600 --> 01:16:53,040
that that's just the last risk

2077
01:16:53,040 --> 01:16:55,120
uh there is also a distinction that

2078
01:16:55,120 --> 01:16:56,080
people fall for

2079
01:16:56,080 --> 01:16:59,199
uh uh in this in this uh

2080
01:16:59,199 --> 01:17:02,800
when using dns wildcards because

2081
01:17:02,800 --> 01:17:05,920
often you use the dns to lead to

2082
01:17:05,920 --> 01:17:07,280
websites and

2083
01:17:07,280 --> 01:17:08,960
websites are secured with certificates

2084
01:17:08,960 --> 01:17:12,080
that allow wildcards

2085
01:17:12,080 --> 01:17:15,600
a leftmost label in dns can match any

2086
01:17:15,600 --> 01:17:17,760
number of labels down deep into the tree

2087
01:17:17,760 --> 01:17:18,960
to its left

2088
01:17:18,960 --> 01:17:22,239
but the certificate as uh to be used in

2089
01:17:22,239 --> 01:17:24,239
x509 certificate we use on a website

2090
01:17:24,239 --> 01:17:26,640
only allows one level of depth which is

2091
01:17:26,640 --> 01:17:27,679
a good thing

2092
01:17:27,679 --> 01:17:29,440
but you have to keep in mind that uh

2093
01:17:29,440 --> 01:17:32,000
difference you cannot just

2094
01:17:32,000 --> 01:17:35,199
expect to get a wildcard certificate

2095
01:17:35,199 --> 01:17:38,239
for all uh all the names in a tree and a

2096
01:17:38,239 --> 01:17:39,840
sub tree under a given name

2097
01:17:39,840 --> 01:17:43,040
so just one limited one level

2098
01:17:43,040 --> 01:17:46,400
so to illustrate how the dns wildcards

2099
01:17:46,400 --> 01:17:46,960
exist

2100
01:17:46,960 --> 01:17:50,320
um i've created an example

2101
01:17:50,320 --> 01:17:54,400
zone under example.com um

2102
01:17:54,400 --> 01:17:56,719
with those four text records and there's

2103
01:17:56,719 --> 01:17:58,480
a bunch of uh

2104
01:17:58,480 --> 01:18:00,640
queries that are issued towards that

2105
01:18:00,640 --> 01:18:02,000
name and

2106
01:18:02,000 --> 01:18:04,239
it will be the exercise for the reader

2107
01:18:04,239 --> 01:18:05,120
to figure out

2108
01:18:05,120 --> 01:18:07,600
what is the response that you would

2109
01:18:07,600 --> 01:18:09,440
you'd get

2110
01:18:09,440 --> 01:18:12,960
so here is the solution just to pervert

2111
01:18:12,960 --> 01:18:13,280
it

2112
01:18:13,280 --> 01:18:15,280
and the first one of course matches

2113
01:18:15,280 --> 01:18:17,440
exactly

2114
01:18:17,440 --> 01:18:19,360
the second one see those examples you

2115
01:18:19,360 --> 01:18:21,120
see doesn't exist in there there's no

2116
01:18:21,120 --> 01:18:21,760
label

2117
01:18:21,760 --> 01:18:23,199
that name doesn't exist in the zone

2118
01:18:23,199 --> 01:18:25,679
above so it gets matched by the wildcard

2119
01:18:25,679 --> 01:18:28,800
the first record in the zone

2120
01:18:28,800 --> 01:18:31,120
so those asking for the wildcard itself

2121
01:18:31,120 --> 01:18:31,920
you get

2122
01:18:31,920 --> 01:18:35,600
the result pack um however if you ask

2123
01:18:35,600 --> 01:18:38,560
for a dotstar.example.com

2124
01:18:38,560 --> 01:18:40,960
you don't no longer get the the wildcard

2125
01:18:40,960 --> 01:18:42,880
response you get that exact match

2126
01:18:42,880 --> 01:18:45,520
because it exists

2127
01:18:45,520 --> 01:18:47,360
and you can see that the wildcat is not

2128
01:18:47,360 --> 01:18:48,719
the one matching because if you

2129
01:18:48,719 --> 01:18:51,679
turn a star to b star which does not

2130
01:18:51,679 --> 01:18:53,199
exist in the zone above

2131
01:18:53,199 --> 01:18:54,880
and is not matched by the wild card as

2132
01:18:54,880 --> 01:18:57,679
defined before you get an x domain

2133
01:18:57,679 --> 01:18:59,679
so hopefully that clarifies wildcards a

2134
01:18:59,679 --> 01:19:00,880
little bit the

2135
01:19:00,880 --> 01:19:03,440
subject was uh confusing enough for even

2136
01:19:03,440 --> 01:19:04,880
the people who spend their lives in the

2137
01:19:04,880 --> 01:19:05,920
dns

2138
01:19:05,920 --> 01:19:07,840
that 20 years after the creation of the

2139
01:19:07,840 --> 01:19:10,239
dns the definition of the iss

2140
01:19:10,239 --> 01:19:12,400
someone had to someone at lewis had to

2141
01:19:12,400 --> 01:19:14,480
write an rfc to define what wild has

2142
01:19:14,480 --> 01:19:16,639
meant

2143
01:19:18,239 --> 01:19:21,600
so when you get no data from a response

2144
01:19:21,600 --> 01:19:23,840
from a query in a response what does

2145
01:19:23,840 --> 01:19:24,640
that mean

2146
01:19:24,640 --> 01:19:27,600
um well coming several things uh depends

2147
01:19:27,600 --> 01:19:28,239
on what

2148
01:19:28,239 --> 01:19:31,199
the no data response coming back at you

2149
01:19:31,199 --> 01:19:32,000
uh

2150
01:19:32,000 --> 01:19:36,080
contains as information uh it can have

2151
01:19:36,080 --> 01:19:38,960
a given a response code r code three for

2152
01:19:38,960 --> 01:19:39,760
instance

2153
01:19:39,760 --> 01:19:42,640
uh which means nx domain um which

2154
01:19:42,640 --> 01:19:43,920
translates to that

2155
01:19:43,920 --> 01:19:45,840
domain name you asked me about doesn't

2156
01:19:45,840 --> 01:19:47,360
exist nor does anything

2157
01:19:47,360 --> 01:19:49,920
below it it's the end of the tree

2158
01:19:49,920 --> 01:19:51,040
there's nothing here

2159
01:19:51,040 --> 01:19:52,640
or is there that nor does the tree

2160
01:19:52,640 --> 01:19:55,120
continue in that direction so

2161
01:19:55,120 --> 01:19:58,800
try something else uh there's a response

2162
01:19:58,800 --> 01:19:59,360
type that

2163
01:19:59,360 --> 01:20:02,480
people in the u.s call no data which is

2164
01:20:02,480 --> 01:20:04,000
actually a little bit ambiguous because

2165
01:20:04,000 --> 01:20:06,159
it's not defined with that name anywhere

2166
01:20:06,159 --> 01:20:08,480
um it's the combination of the fact that

2167
01:20:08,480 --> 01:20:09,840
you get a response

2168
01:20:09,840 --> 01:20:12,080
with our code zero which means there

2169
01:20:12,080 --> 01:20:13,280
wasn't an error

2170
01:20:13,280 --> 01:20:15,840
and yet there is no data in the answer

2171
01:20:15,840 --> 01:20:17,360
section

2172
01:20:17,360 --> 01:20:19,120
so if there is no error how come i asked

2173
01:20:19,120 --> 01:20:21,040
the question i got still got no data

2174
01:20:21,040 --> 01:20:22,960
what's going on here

2175
01:20:22,960 --> 01:20:25,440
well it can be both the two things one

2176
01:20:25,440 --> 01:20:27,280
is that you ask for a type of data that

2177
01:20:27,280 --> 01:20:28,159
i don't have

2178
01:20:28,159 --> 01:20:30,080
infrared information for if you ask me

2179
01:20:30,080 --> 01:20:32,560
for the idea of ipv4 address for a

2180
01:20:32,560 --> 01:20:35,040
name but they only have an ipv6 address

2181
01:20:35,040 --> 01:20:35,600
for instance

2182
01:20:35,600 --> 01:20:38,719
um well i cannot have uh i give you an

2183
01:20:38,719 --> 01:20:40,239
answer with data but that doesn't mean

2184
01:20:40,239 --> 01:20:41,920
the name doesn't exist and there is any

2185
01:20:41,920 --> 01:20:45,040
deposit type of information there so

2186
01:20:45,040 --> 01:20:48,719
you just be careful what you ask for um

2187
01:20:48,719 --> 01:20:51,840
the second is what has been called an

2188
01:20:51,840 --> 01:20:52,880
empty non-thermal

2189
01:20:52,880 --> 01:20:55,120
um it might be the zone for example in

2190
01:20:55,120 --> 01:20:56,320
the zone example

2191
01:20:56,320 --> 01:20:58,679
dot com that you have example

2192
01:20:58,679 --> 01:21:00,639
a.b.example.com come as a value record

2193
01:21:00,639 --> 01:21:01,520
in that zone

2194
01:21:01,520 --> 01:21:05,600
but b dot example dot com doesn't exist

2195
01:21:05,600 --> 01:21:08,719
uh so if you ask for b dot example dot

2196
01:21:08,719 --> 01:21:09,360
com

2197
01:21:09,360 --> 01:21:11,679
what you get is an empty no error

2198
01:21:11,679 --> 01:21:12,480
response

2199
01:21:12,480 --> 01:21:15,040
meaning that i know nothing about that

2200
01:21:15,040 --> 01:21:15,600
name

2201
01:21:15,600 --> 01:21:17,920
but there's actually stuff that is a

2202
01:21:17,920 --> 01:21:19,280
subdomain of this name

2203
01:21:19,280 --> 01:21:22,320
in the same zone by the way

2204
01:21:22,320 --> 01:21:24,400
and then there are other errors like

2205
01:21:24,400 --> 01:21:28,800
surface and so on

2206
01:21:28,800 --> 01:21:30,400
uh this is a little bit of a further

2207
01:21:30,400 --> 01:21:33,040
explanation of what an empty non-thermal

2208
01:21:33,040 --> 01:21:36,239
an end not in the tolkien way but in the

2209
01:21:36,239 --> 01:21:37,040
dns way

2210
01:21:37,040 --> 01:21:39,120
is you can refer to it back i already

2211
01:21:39,120 --> 01:21:40,639
explained it

2212
01:21:40,639 --> 01:21:42,800
so c names have already been mentioned

2213
01:21:42,800 --> 01:21:44,800
and why we always mention them because

2214
01:21:44,800 --> 01:21:46,639
they are source of confusion

2215
01:21:46,639 --> 01:21:48,880
what the cname stands for is a canonical

2216
01:21:48,880 --> 01:21:51,040
name you ask for a name and that

2217
01:21:51,040 --> 01:21:53,199
response to that tells you that the name

2218
01:21:53,199 --> 01:21:54,159
you asked for

2219
01:21:54,159 --> 01:21:57,600
is actually this other name over there

2220
01:21:57,600 --> 01:21:59,600
and because you cannot be here and there

2221
01:21:59,600 --> 01:22:01,040
at the same time

2222
01:22:01,040 --> 01:22:03,280
uh because what you are telling in a

2223
01:22:03,280 --> 01:22:04,719
response is that i'm not

2224
01:22:04,719 --> 01:22:07,120
the name you wanted you go look

2225
01:22:07,120 --> 01:22:08,639
somewhere else

2226
01:22:08,639 --> 01:22:11,840
you cannot have then um information of

2227
01:22:11,840 --> 01:22:14,320
any other type associated to the name

2228
01:22:14,320 --> 01:22:16,400
that's a

2229
01:22:16,400 --> 01:22:18,719
source of the cname because that would

2230
01:22:18,719 --> 01:22:20,400
immediately introduce two sources of

2231
01:22:20,400 --> 01:22:21,199
truth

2232
01:22:21,199 --> 01:22:23,520
into the system and you won't be able to

2233
01:22:23,520 --> 01:22:25,360
really know which one was the correct

2234
01:22:25,360 --> 01:22:26,560
one

2235
01:22:26,560 --> 01:22:29,360
as a consequence of that zones apex

2236
01:22:29,360 --> 01:22:30,880
which is where the

2237
01:22:30,880 --> 01:22:34,000
start of authority for the name is uh as

2238
01:22:34,000 --> 01:22:36,639
well as the name servers for that zone

2239
01:22:36,639 --> 01:22:39,760
are defined cannot have a c name because

2240
01:22:39,760 --> 01:22:41,199
it would imply that there is more

2241
01:22:41,199 --> 01:22:43,440
information at the same level as a c

2242
01:22:43,440 --> 01:22:44,480
name and that

2243
01:22:44,480 --> 01:22:46,719
again creates trouble it's not allowed

2244
01:22:46,719 --> 01:22:48,800
by the current definition of

2245
01:22:48,800 --> 01:22:51,840
the dns however that doesn't prevent

2246
01:22:51,840 --> 01:22:53,920
people from saying and thanks to the

2247
01:22:53,920 --> 01:22:56,239
how liberal the internet is in what

2248
01:22:56,239 --> 01:22:58,000
things it's willing to accept

2249
01:22:58,000 --> 01:22:59,280
some people actually abuse this

2250
01:22:59,280 --> 01:23:03,280
mechanism and mostly get away with it

2251
01:23:03,280 --> 01:23:05,440
the itf is not defining a proper way of

2252
01:23:05,440 --> 01:23:08,799
dealing with this use case

2253
01:23:09,199 --> 01:23:12,560
so if this is a good

2254
01:23:12,560 --> 01:23:15,199
successful worldwide distributed

2255
01:23:15,199 --> 01:23:15,920
database

2256
01:23:15,920 --> 01:23:19,199
surely all the servers that

2257
01:23:19,199 --> 01:23:22,000
authority for a given a given set of

2258
01:23:22,000 --> 01:23:24,239
data will have the same information

2259
01:23:24,239 --> 01:23:26,880
well yes and no the dns was never meant

2260
01:23:26,880 --> 01:23:27,440
to be

2261
01:23:27,440 --> 01:23:30,800
strictly coherent it is actually what is

2262
01:23:30,800 --> 01:23:33,360
defined as the loosely coherent

2263
01:23:33,360 --> 01:23:35,360
there is one source of truth as in any

2264
01:23:35,360 --> 01:23:37,440
well a decent

2265
01:23:37,440 --> 01:23:40,800
database protocol and that's called

2266
01:23:40,800 --> 01:23:42,400
usually a master server or primary

2267
01:23:42,400 --> 01:23:44,000
server which is

2268
01:23:44,000 --> 01:23:46,080
helped in its function by a set of

2269
01:23:46,080 --> 01:23:48,960
secondary or slave servers slaves out

2270
01:23:48,960 --> 01:23:53,199
out of use now we call them secondaries

2271
01:23:54,000 --> 01:23:56,880
that will reflect what the what the

2272
01:23:56,880 --> 01:23:59,040
primary service

2273
01:23:59,040 --> 01:24:00,719
tells them is the new information that

2274
01:24:00,719 --> 01:24:02,719
might take a little bit of time to catch

2275
01:24:02,719 --> 01:24:03,040
up

2276
01:24:03,040 --> 01:24:05,280
so in that sense there is a loose

2277
01:24:05,280 --> 01:24:06,560
coherence

2278
01:24:06,560 --> 01:24:08,560
which will catch up if the system will

2279
01:24:08,560 --> 01:24:11,199
usually catch up catches up with itself

2280
01:24:11,199 --> 01:24:13,280
as time goes by short amount of time

2281
01:24:13,280 --> 01:24:14,840
usually

2282
01:24:14,840 --> 01:24:17,520
um there is however

2283
01:24:17,520 --> 01:24:19,920
the fact that uh as was mentioned

2284
01:24:19,920 --> 01:24:20,560
earlier

2285
01:24:20,560 --> 01:24:22,159
there are recursive servers that cache

2286
01:24:22,159 --> 01:24:23,760
information and that information is

2287
01:24:23,760 --> 01:24:24,719
cached for

2288
01:24:24,719 --> 01:24:27,600
a given amount of time if the source of

2289
01:24:27,600 --> 01:24:29,120
the data changes that data in the

2290
01:24:29,120 --> 01:24:30,480
meantime

2291
01:24:30,480 --> 01:24:32,400
that recursive server that caching

2292
01:24:32,400 --> 01:24:34,800
server will contain steel data for the

2293
01:24:34,800 --> 01:24:36,080
duration of the ttl

2294
01:24:36,080 --> 01:24:38,719
so that's one way where things can be a

2295
01:24:38,719 --> 01:24:40,000
little bit of sync

2296
01:24:40,000 --> 01:24:42,800
it's again self-correcting with time

2297
01:24:42,800 --> 01:24:44,719
however the last uh

2298
01:24:44,719 --> 01:24:46,800
fashion the latest fashion internet is

2299
01:24:46,800 --> 01:24:48,239
that people play tricks

2300
01:24:48,239 --> 01:24:50,880
with how to serve what information is

2301
01:24:50,880 --> 01:24:52,400
served

2302
01:24:52,400 --> 01:24:55,520
um people will answer differently even

2303
01:24:55,520 --> 01:24:57,600
with different ip addresses for a given

2304
01:24:57,600 --> 01:24:59,840
name depending on where you are and how

2305
01:24:59,840 --> 01:25:01,040
you reach them

2306
01:25:01,040 --> 01:25:05,280
uh either by looking at your ip address

2307
01:25:05,280 --> 01:25:08,080
uh and saying okay if your ipr is

2308
01:25:08,080 --> 01:25:10,960
according to my local databases from

2309
01:25:10,960 --> 01:25:13,040
north america so i will give you an

2310
01:25:13,040 --> 01:25:14,800
address for you for you to connect to

2311
01:25:14,800 --> 01:25:16,560
that's located in north america

2312
01:25:16,560 --> 01:25:19,840
why is a uh your user that is uh

2313
01:25:19,840 --> 01:25:22,639
asking from europe will probably get an

2314
01:25:22,639 --> 01:25:23,679
ip address that

2315
01:25:23,679 --> 01:25:26,239
points to server in europe that's fancy

2316
01:25:26,239 --> 01:25:26,719
using

2317
01:25:26,719 --> 01:25:29,280
it's transparent most people are okay

2318
01:25:29,280 --> 01:25:30,639
with it these days because

2319
01:25:30,639 --> 01:25:33,440
everyone tries to do it but it can lead

2320
01:25:33,440 --> 01:25:36,239
to interesting debugging problems

2321
01:25:36,239 --> 01:25:40,239
we chose to publish an informational irc

2322
01:25:40,239 --> 01:25:43,120
in how to make these a little better uh

2323
01:25:43,120 --> 01:25:44,080
which was uh

2324
01:25:44,080 --> 01:25:47,600
an attempt called uh edns client subnet

2325
01:25:47,600 --> 01:25:49,760
which is some sort of signaling

2326
01:25:49,760 --> 01:25:54,159
of where the client that's behind me is

2327
01:25:54,159 --> 01:25:55,520
located so that i

2328
01:25:55,520 --> 01:25:58,400
i'm asking he in the client's behalf

2329
01:25:58,400 --> 01:26:00,159
give me information that's pertinent

2330
01:26:00,159 --> 01:26:03,520
to the client uh in exchange

2331
01:26:03,520 --> 01:26:06,639
you get uh told by you got filled

2332
01:26:06,639 --> 01:26:08,960
information about where the user is and

2333
01:26:08,960 --> 01:26:12,320
this can be exceedingly uh granular so

2334
01:26:12,320 --> 01:26:14,320
you might be exposing exactly who the

2335
01:26:14,320 --> 01:26:16,799
user is

2336
01:26:18,480 --> 01:26:21,360
um we have had in the last few years a

2337
01:26:21,360 --> 01:26:22,960
couple of flag days

2338
01:26:22,960 --> 01:26:24,320
in the bns

2339
01:26:24,320 --> 01:26:26,560
[Music]

2340
01:26:26,560 --> 01:26:29,360
they are mostly not really flag days as

2341
01:26:29,360 --> 01:26:29,840
they

2342
01:26:29,840 --> 01:26:32,880
we people tend to think about flag days

2343
01:26:32,880 --> 01:26:35,840
but they are dates somewhere people

2344
01:26:35,840 --> 01:26:36,800
agree that they'll

2345
01:26:36,800 --> 01:26:38,239
change the behaviors in their

2346
01:26:38,239 --> 01:26:40,239
implementations or on operations

2347
01:26:40,239 --> 01:26:42,880
um in operations it's nearly impossible

2348
01:26:42,880 --> 01:26:44,320
to actually have a

2349
01:26:44,320 --> 01:26:47,440
a flag day that's effective so it's

2350
01:26:47,440 --> 01:26:49,120
mainly a communications tool

2351
01:26:49,120 --> 01:26:52,239
these days the dns is implemented in

2352
01:26:52,239 --> 01:26:54,560
millions probably of hosts around the

2353
01:26:54,560 --> 01:26:56,320
world and

2354
01:26:56,320 --> 01:26:59,199
even if you only look at servers you see

2355
01:26:59,199 --> 01:26:59,600
it's

2356
01:26:59,600 --> 01:27:01,360
unwise and realistic to expect that the

2357
01:27:01,360 --> 01:27:02,880
whole deploy base would switch in a

2358
01:27:02,880 --> 01:27:05,040
given day just because you asked them to

2359
01:27:05,040 --> 01:27:07,520
that's not how things work anymore uh so

2360
01:27:07,520 --> 01:27:08,080
it's more

2361
01:27:08,080 --> 01:27:09,920
more than anything a communication day

2362
01:27:09,920 --> 01:27:12,000
uh to make uh people aware of changes

2363
01:27:12,000 --> 01:27:12,639
that

2364
01:27:12,639 --> 01:27:15,360
are desired and agreed to in the dns but

2365
01:27:15,360 --> 01:27:16,639
they don't come into effect

2366
01:27:16,639 --> 01:27:20,000
as a usual flag they would

2367
01:27:20,000 --> 01:27:22,800
a little bit of a myth is that ctes the

2368
01:27:22,800 --> 01:27:23,679
routers the

2369
01:27:23,679 --> 01:27:25,679
things that you have at the edge of your

2370
01:27:25,679 --> 01:27:27,679
home network office network enterprise

2371
01:27:27,679 --> 01:27:28,480
network

2372
01:27:28,480 --> 01:27:31,600
work well as the interest resolver well

2373
01:27:31,600 --> 01:27:33,760
misconceptions here there are several

2374
01:27:33,760 --> 01:27:36,239
one of them the most typical is that

2375
01:27:36,239 --> 01:27:38,960
cpes are actually not running usually

2376
01:27:38,960 --> 01:27:39,679
resolvers

2377
01:27:39,679 --> 01:27:42,080
they are running forwarders what is a

2378
01:27:42,080 --> 01:27:43,600
forward there is something

2379
01:27:43,600 --> 01:27:45,360
piece of software has a small little

2380
01:27:45,360 --> 01:27:47,280
cache locally

2381
01:27:47,280 --> 01:27:48,960
trying to help you to get further and

2382
01:27:48,960 --> 01:27:50,719
for future answers quicker

2383
01:27:50,719 --> 01:27:53,520
uh but it actually uh just furthers your

2384
01:27:53,520 --> 01:27:54,960
forwards your question to

2385
01:27:54,960 --> 01:27:57,679
a proper recursive resolver that does

2386
01:27:57,679 --> 01:27:58,960
all the heavy lifting

2387
01:27:58,960 --> 01:28:02,560
on your behalf so that's the first one

2388
01:28:02,560 --> 01:28:04,960
uh and then there have been ideas of uh

2389
01:28:04,960 --> 01:28:06,960
or opinions or recommendations of

2390
01:28:06,960 --> 01:28:08,960
whether it's good or bad to have

2391
01:28:08,960 --> 01:28:11,920
a local recursive resolver in your cp if

2392
01:28:11,920 --> 01:28:13,360
you are allowed to or

2393
01:28:13,360 --> 01:28:15,679
or if you are inclined to tinkle in one

2394
01:28:15,679 --> 01:28:16,639
and there are both

2395
01:28:16,639 --> 01:28:18,719
good things and bad things about these

2396
01:28:18,719 --> 01:28:20,719
i'll skip this because i'm

2397
01:28:20,719 --> 01:28:22,400
going to run off the time but the slide

2398
01:28:22,400 --> 01:28:25,280
is there for reference

2399
01:28:25,600 --> 01:28:28,960
uh not me if you turn on cdns sec

2400
01:28:28,960 --> 01:28:31,040
everything in the dns becomes too slow

2401
01:28:31,040 --> 01:28:33,120
um well too slow for what

2402
01:28:33,120 --> 01:28:36,560
and for whom um which is

2403
01:28:36,560 --> 01:28:39,120
um always a qualification you have to

2404
01:28:39,120 --> 01:28:42,080
make when you make a statement like that

2405
01:28:42,080 --> 01:28:43,920
so it is true that if you make any

2406
01:28:43,920 --> 01:28:46,080
operation that you were not doing before

2407
01:28:46,080 --> 01:28:46,719
it will take

2408
01:28:46,719 --> 01:28:49,840
additional time to do that operation

2409
01:28:49,840 --> 01:28:52,080
that's true here and anywhere else you

2410
01:28:52,080 --> 01:28:53,360
do

2411
01:28:53,360 --> 01:28:57,120
but actually the dns has a feature

2412
01:28:57,120 --> 01:29:00,480
that might reverse these in some cases

2413
01:29:00,480 --> 01:29:03,360
when the nssec was defined it was

2414
01:29:03,360 --> 01:29:05,440
decided that not only would it

2415
01:29:05,440 --> 01:29:07,360
sign that a piece of information that

2416
01:29:07,360 --> 01:29:08,960
exists

2417
01:29:08,960 --> 01:29:12,880
uh will be attested to by a signature

2418
01:29:12,880 --> 01:29:15,440
uh it was also decided that the nsx

2419
01:29:15,440 --> 01:29:16,960
would have to prove

2420
01:29:16,960 --> 01:29:19,840
that when a name does not exist um it

2421
01:29:19,840 --> 01:29:20,800
can be proved

2422
01:29:20,800 --> 01:29:24,080
uh cryptography as well and this was

2423
01:29:24,080 --> 01:29:27,280
implementing by creating a gap

2424
01:29:27,280 --> 01:29:31,120
record the next secure nsec record

2425
01:29:31,120 --> 01:29:35,040
which says in between two existing names

2426
01:29:35,040 --> 01:29:37,280
in this interval between you names that

2427
01:29:37,280 --> 01:29:38,960
i know exist in the zone

2428
01:29:38,960 --> 01:29:41,760
there is nothing so f and you can sign

2429
01:29:41,760 --> 01:29:42,800
that because now

2430
01:29:42,800 --> 01:29:45,440
the absence of information has become

2431
01:29:45,440 --> 01:29:47,360
information that exists

2432
01:29:47,360 --> 01:29:50,239
and it can be signed now if you were to

2433
01:29:50,239 --> 01:29:51,920
ask a name server for something that

2434
01:29:51,920 --> 01:29:52,800
doesn't exist

2435
01:29:52,800 --> 01:29:55,360
and it falls in one of these gaps that

2436
01:29:55,360 --> 01:29:56,320
has been

2437
01:29:56,320 --> 01:29:59,520
documented and proved proven to to

2438
01:29:59,520 --> 01:30:03,120
to exist you can use that

2439
01:30:03,120 --> 01:30:06,159
previous answer as a as a as a way to

2440
01:30:06,159 --> 01:30:07,280
shortcut the lookup

2441
01:30:07,280 --> 01:30:09,520
and say well this domain doesn't exist

2442
01:30:09,520 --> 01:30:11,920
either because it falls in the gap

2443
01:30:11,920 --> 01:30:14,480
identified by this nsx record which i

2444
01:30:14,480 --> 01:30:15,360
have proof of

2445
01:30:15,360 --> 01:30:18,320
being true so it can become it can

2446
01:30:18,320 --> 01:30:20,320
accelerate

2447
01:30:20,320 --> 01:30:23,040
dns lookups for the domains that do not

2448
01:30:23,040 --> 01:30:23,920
exist

2449
01:30:23,920 --> 01:30:25,840
also because the lookups for names do

2450
01:30:25,840 --> 01:30:28,159
not that do not exist actually take

2451
01:30:28,159 --> 01:30:30,480
longer than any other lookup in the dns

2452
01:30:30,480 --> 01:30:32,159
because the dns will always try very

2453
01:30:32,159 --> 01:30:32,800
hard

2454
01:30:32,800 --> 01:30:34,320
to find the information you were asking

2455
01:30:34,320 --> 01:30:36,559
about

2456
01:30:37,360 --> 01:30:39,760
so if you still experience problems with

2457
01:30:39,760 --> 01:30:41,120
dns

2458
01:30:41,120 --> 01:30:43,600
then a slowness when the nsx is enabled

2459
01:30:43,600 --> 01:30:46,239
maybe your problem lies elsewhere

2460
01:30:46,239 --> 01:30:48,480
one of the things that happens when you

2461
01:30:48,480 --> 01:30:49,840
carry more information

2462
01:30:49,840 --> 01:30:52,960
in in the dns message which the nsx

2463
01:30:52,960 --> 01:30:53,760
always

2464
01:30:53,760 --> 01:30:56,400
implies is that uh sometimes those

2465
01:30:56,400 --> 01:30:57,199
packets

2466
01:30:57,199 --> 01:30:59,360
turn out to be very big sometimes they

2467
01:30:59,360 --> 01:31:01,280
are so exceedingly big that they don't

2468
01:31:01,280 --> 01:31:04,400
fall fit in a single udp packet and that

2469
01:31:04,400 --> 01:31:06,400
packet becomes fragmented

2470
01:31:06,400 --> 01:31:09,199
now some networks take exception to the

2471
01:31:09,199 --> 01:31:09,760
handling

2472
01:31:09,760 --> 01:31:12,880
of fragmented udp packets and if they

2473
01:31:12,880 --> 01:31:13,600
drop that

2474
01:31:13,600 --> 01:31:15,840
and they don't have or don't enable the

2475
01:31:15,840 --> 01:31:17,760
fallback magazines that the dns

2476
01:31:17,760 --> 01:31:21,679
dns has from the beginning like use tcp

2477
01:31:21,679 --> 01:31:23,840
then you might have a big problem in

2478
01:31:23,840 --> 01:31:24,719
your hands

2479
01:31:24,719 --> 01:31:26,400
but the problem is not necessarily with

2480
01:31:26,400 --> 01:31:28,880
dns but rather with the network and that

2481
01:31:28,880 --> 01:31:31,840
the network management

2482
01:31:32,080 --> 01:31:33,760
other other things that may happen is

2483
01:31:33,760 --> 01:31:36,080
that needle boxes well they are not

2484
01:31:36,080 --> 01:31:38,719
always up to date or are not implemented

2485
01:31:38,719 --> 01:31:40,080
by people

2486
01:31:40,080 --> 01:31:42,159
that knew what they're doing at the time

2487
01:31:42,159 --> 01:31:43,120
they did it and

2488
01:31:43,120 --> 01:31:47,120
dns being qualities at the

2489
01:31:47,120 --> 01:31:49,280
at the root of everything you usually do

2490
01:31:49,280 --> 01:31:50,960
on the internet is

2491
01:31:50,960 --> 01:31:52,880
always seemed like the neglected child

2492
01:31:52,880 --> 01:31:54,960
of all the protocols you wanted to go to

2493
01:31:54,960 --> 01:31:56,800
your website you wanted to fetch a file

2494
01:31:56,800 --> 01:31:58,239
you wanted to send the mail

2495
01:31:58,239 --> 01:32:01,360
you wanted to know about the time um

2496
01:32:01,360 --> 01:32:04,159
while the ns second level dns enables

2497
01:32:04,159 --> 01:32:04,800
all those

2498
01:32:04,800 --> 01:32:08,000
uh applications uh

2499
01:32:08,000 --> 01:32:10,400
it stays it does so in the background so

2500
01:32:10,400 --> 01:32:12,400
most people are not aware of it

2501
01:32:12,400 --> 01:32:14,639
and it just also happens to be a very

2502
01:32:14,639 --> 01:32:15,840
stable

2503
01:32:15,840 --> 01:32:18,480
protocol and operation so it kind of

2504
01:32:18,480 --> 01:32:19,120
fades

2505
01:32:19,120 --> 01:32:20,639
in the background and most people don't

2506
01:32:20,639 --> 01:32:23,840
think about it and then

2507
01:32:24,159 --> 01:32:27,280
stuff happens as i mentioned before

2508
01:32:27,280 --> 01:32:30,560
tcp and dns has been a thing since it's

2509
01:32:30,560 --> 01:32:33,520
uh since dns began since the original

2510
01:32:33,520 --> 01:32:34,400
times

2511
01:32:34,400 --> 01:32:38,080
its tcp in the dns is always used for

2512
01:32:38,080 --> 01:32:39,520
some of operations like

2513
01:32:39,520 --> 01:32:40,800
zone transfers because they involve

2514
01:32:40,800 --> 01:32:42,320
massive amounts of information being

2515
01:32:42,320 --> 01:32:43,280
translated

2516
01:32:43,280 --> 01:32:45,360
transferred from one place to the other

2517
01:32:45,360 --> 01:32:46,320
but it

2518
01:32:46,320 --> 01:32:48,560
should always be available as well for

2519
01:32:48,560 --> 01:32:49,600
um

2520
01:32:49,600 --> 01:32:51,600
a standard fallback amazing mechanism

2521
01:32:51,600 --> 01:32:52,800
when udp

2522
01:32:52,800 --> 01:32:55,679
has issues and we at 18 has published

2523
01:32:55,679 --> 01:32:57,760
several papers on

2524
01:32:57,760 --> 01:33:00,320
how many people are affected in today's

2525
01:33:00,320 --> 01:33:01,199
internet

2526
01:33:01,199 --> 01:33:04,320
by issues like udp non-handling

2527
01:33:04,320 --> 01:33:08,320
mishandling also it can be that clients

2528
01:33:08,320 --> 01:33:09,679
choose to use

2529
01:33:09,679 --> 01:33:13,040
tcp right away without by using trying

2530
01:33:13,040 --> 01:33:16,000
uh or attempting udp as a first step

2531
01:33:16,000 --> 01:33:16,400
that

2532
01:33:16,400 --> 01:33:19,840
is allowed by the protocol if you use

2533
01:33:19,840 --> 01:33:20,560
tcp

2534
01:33:20,560 --> 01:33:22,800
if when you use tcp the only thing you

2535
01:33:22,800 --> 01:33:24,480
have to keep in mind is that the

2536
01:33:24,480 --> 01:33:25,120
protocol

2537
01:33:25,120 --> 01:33:26,800
and the state that is kept in the

2538
01:33:26,800 --> 01:33:29,280
servers that serve tcp

2539
01:33:29,280 --> 01:33:32,320
is a little bit different than

2540
01:33:32,320 --> 01:33:35,840
the usage of eub but the myth

2541
01:33:35,840 --> 01:33:38,320
that this cannot be used is easily

2542
01:33:38,320 --> 01:33:40,480
defeated by if you look at any standard

2543
01:33:40,480 --> 01:33:41,360
a big

2544
01:33:41,360 --> 01:33:44,719
web farm that always uses tcp

2545
01:33:44,719 --> 01:33:46,719
so it's totally if you do a google you

2546
01:33:46,719 --> 01:33:48,480
just need to be a pro you just do

2547
01:33:48,480 --> 01:33:52,000
care about what you're doing your craft

2548
01:33:52,000 --> 01:33:56,239
and to end uh we thought we had

2549
01:33:56,239 --> 01:33:59,520
a question here there is a dns query

2550
01:33:59,520 --> 01:34:01,040
type that stands for

2551
01:34:01,040 --> 01:34:04,080
any we type 255

2552
01:34:04,080 --> 01:34:07,120
also used in the old ones

2553
01:34:07,120 --> 01:34:10,560
or broadcast kind of thing

2554
01:34:10,560 --> 01:34:12,239
the official name for it in the standard

2555
01:34:12,239 --> 01:34:14,719
is star and no one uses that

2556
01:34:14,719 --> 01:34:17,280
name for it because we already have

2557
01:34:17,280 --> 01:34:18,080
trouble enough

2558
01:34:18,080 --> 01:34:21,360
with the other star the wildcard one

2559
01:34:21,360 --> 01:34:22,880
we don't need to introduce any more

2560
01:34:22,880 --> 01:34:24,960
confusion so we call it

2561
01:34:24,960 --> 01:34:28,560
any now even so

2562
01:34:28,560 --> 01:34:32,719
since the beginning any was defined as

2563
01:34:32,719 --> 01:34:35,679
not to be all but really any anything

2564
01:34:35,679 --> 01:34:36,239
you have

2565
01:34:36,239 --> 01:34:39,120
about this name or given you all you

2566
01:34:39,120 --> 01:34:39,600
have

2567
01:34:39,600 --> 01:34:43,280
about this name this might not be

2568
01:34:43,280 --> 01:34:47,199
all there is about that name in the dns

2569
01:34:47,199 --> 01:34:50,000
for instance if you ask a caching server

2570
01:34:50,000 --> 01:34:50,960
that has

2571
01:34:50,960 --> 01:34:52,880
some records regarding that name because

2572
01:34:52,880 --> 01:34:54,400
it was asked about

2573
01:34:54,400 --> 01:34:56,639
an a record an ms record relating to

2574
01:34:56,639 --> 01:34:58,400
that name earlier on

2575
01:34:58,400 --> 01:35:01,199
and you ask it give me anything you have

2576
01:35:01,199 --> 01:35:02,639
it will give you

2577
01:35:02,639 --> 01:35:05,360
all that it has in its cache it doesn't

2578
01:35:05,360 --> 01:35:07,119
mean that it will give you

2579
01:35:07,119 --> 01:35:08,880
everything that the authoritative server

2580
01:35:08,880 --> 01:35:11,199
have on that so you have to be careful

2581
01:35:11,199 --> 01:35:12,639
uh particularly because this is a

2582
01:35:12,639 --> 01:35:14,719
debugging query

2583
01:35:14,719 --> 01:35:16,719
that if you you know what you are

2584
01:35:16,719 --> 01:35:19,119
debugging and that information

2585
01:35:19,119 --> 01:35:22,719
you are getting might be partial

2586
01:35:22,719 --> 01:35:25,040
and i think that is the last of the

2587
01:35:25,040 --> 01:35:27,360
myths we wanted to address in this thing

2588
01:35:27,360 --> 01:35:30,239
because he had 30 minutes to go on it

2589
01:35:30,239 --> 01:35:31,040
and now

2590
01:35:31,040 --> 01:35:36,080
it's time for questions comments

2591
01:35:36,080 --> 01:35:39,280
insults if you must

2592
01:35:39,280 --> 01:35:44,480
and i hope my co-chairs co-speakers will

2593
01:35:44,480 --> 01:35:47,360
still be around and able to join me

2594
01:35:47,360 --> 01:35:49,520
around

2595
01:35:49,520 --> 01:35:57,840
let me just stop the sharing

2596
01:35:58,400 --> 01:36:03,040
[Music]

2597
01:36:03,040 --> 01:36:04,800
thanks jeff i think uh i'm sorry not

2598
01:36:04,800 --> 01:36:06,239
jeff thanks you are i think

2599
01:36:06,239 --> 01:36:09,360
you know the the any all problem is

2600
01:36:09,360 --> 01:36:11,600
is definitely one of the myths that most

2601
01:36:11,600 --> 01:36:12,560
people don't

2602
01:36:12,560 --> 01:36:15,679
know yeah uh if anybody attending the

2603
01:36:15,679 --> 01:36:16,560
atf

2604
01:36:16,560 --> 01:36:20,400
crowd wants to ask questions or

2605
01:36:20,400 --> 01:36:23,360
yell at us please raise your hand and we

2606
01:36:23,360 --> 01:36:24,880
will

2607
01:36:24,880 --> 01:36:26,480
maybe that was all perfect and we have

2608
01:36:26,480 --> 01:36:28,080
no questions

2609
01:36:28,080 --> 01:36:38,159
is that okay i'll be a first

2610
01:36:38,159 --> 01:36:42,320
um did we put everyone to sleep

2611
01:36:42,880 --> 01:36:46,639
warren oops go ahead

2612
01:36:46,639 --> 01:36:49,199
warren so you mentioned that the any

2613
01:36:49,199 --> 01:36:51,520
query causes a lot of confusion

2614
01:36:51,520 --> 01:36:53,280
i think there's been some talk about

2615
01:36:53,280 --> 01:36:55,040
deprecating it what do you think of that

2616
01:36:55,040 --> 01:36:55,920
as an idea

2617
01:36:55,920 --> 01:36:57,360
like do you think it causes more harm

2618
01:36:57,360 --> 01:36:59,440
than good um or not

2619
01:36:59,440 --> 01:37:03,920
or what um well i like it i use it

2620
01:37:03,920 --> 01:37:06,239
when i need to debug but i know what i'm

2621
01:37:06,239 --> 01:37:08,639
going what i should be expecting from it

2622
01:37:08,639 --> 01:37:13,360
um for the general public perhaps

2623
01:37:13,360 --> 01:37:16,480
uh it is misleading so some people are

2624
01:37:16,480 --> 01:37:18,719
already choosing to

2625
01:37:18,719 --> 01:37:21,040
not implement implemented there it's one

2626
01:37:21,040 --> 01:37:22,000
of the valid

2627
01:37:22,000 --> 01:37:23,760
response codes that you can get from the

2628
01:37:23,760 --> 01:37:25,600
dns and it's a

2629
01:37:25,600 --> 01:37:28,880
it's a valid choice um so by all means

2630
01:37:28,880 --> 01:37:30,159
go ahead and do it you don't have to

2631
01:37:30,159 --> 01:37:32,080
implement things you don't like

2632
01:37:32,080 --> 01:37:35,360
uh to be dns compliant um

2633
01:37:35,360 --> 01:37:37,520
i wouldn't deprecate it i think it still

2634
01:37:37,520 --> 01:37:38,639
has

2635
01:37:38,639 --> 01:37:42,000
the occasional useful purpose

2636
01:37:42,000 --> 01:37:44,080
what what might that purpose be joao

2637
01:37:44,080 --> 01:37:46,320
because in some ways

2638
01:37:46,320 --> 01:37:49,360
you know i i fail to actually understand

2639
01:37:49,360 --> 01:37:53,280
when an any query does something

2640
01:37:53,280 --> 01:37:55,520
that you couldn't do with other queries

2641
01:37:55,520 --> 01:37:56,719
does the name exist

2642
01:37:56,719 --> 01:37:59,760
well you just need to ask even any other

2643
01:37:59,760 --> 01:38:02,560
resource type including

2644
01:38:02,560 --> 01:38:05,280
the name exists you can use it directly

2645
01:38:05,280 --> 01:38:07,360
at the recursive server to find out if

2646
01:38:07,360 --> 01:38:09,760
the recursive server is

2647
01:38:09,760 --> 01:38:11,920
dropping certain records on the floor

2648
01:38:11,920 --> 01:38:13,760
because it doesn't like them

2649
01:38:13,760 --> 01:38:15,119
if you know that the record is in the

2650
01:38:15,119 --> 01:38:17,760
zone and you ask

2651
01:38:17,760 --> 01:38:19,440
ask the recursive server for it you get

2652
01:38:19,440 --> 01:38:20,880
back no answer

2653
01:38:20,880 --> 01:38:22,880
you can try to trigger this and see

2654
01:38:22,880 --> 01:38:23,920
whether uh

2655
01:38:23,920 --> 01:38:26,639
where the name is disappearing in the in

2656
01:38:26,639 --> 01:38:28,320
the resolution process

2657
01:38:28,320 --> 01:38:31,440
you can you can see if

2658
01:38:31,440 --> 01:38:33,440
it only got partial information which

2659
01:38:33,440 --> 01:38:35,280
might be a pointer to a

2660
01:38:35,280 --> 01:38:37,679
misconfiguration somewhere it is useful

2661
01:38:37,679 --> 01:38:38,400
it's not

2662
01:38:38,400 --> 01:38:42,320
a solval thing but it has its use cases

2663
01:38:42,320 --> 01:38:43,840
but it's a debugging tool it's not

2664
01:38:43,840 --> 01:38:45,760
something you should use as uh

2665
01:38:45,760 --> 01:38:48,639
i'll shortcut my lookup time because i

2666
01:38:48,639 --> 01:38:50,880
want to have both the app e4 and ipv6

2667
01:38:50,880 --> 01:38:51,600
addresses

2668
01:38:51,600 --> 01:38:54,880
so please give me any that's not the way

2669
01:38:54,880 --> 01:38:56,480
it's meant to use and you might be

2670
01:38:56,480 --> 01:39:00,400
surprised by the answers you get or not

2671
01:39:04,639 --> 01:39:07,840
i know that there are reports of real

2672
01:39:07,840 --> 01:39:09,440
queries that are happening not just

2673
01:39:09,440 --> 01:39:10,880
those that are trying to get all the

2674
01:39:10,880 --> 01:39:12,400
data they can that there's some

2675
01:39:12,400 --> 01:39:13,600
applications

2676
01:39:13,600 --> 01:39:15,520
i think there was a mail server that

2677
01:39:15,520 --> 01:39:16,960
that was by defaulting

2678
01:39:16,960 --> 01:39:19,280
querying for any and in order to get

2679
01:39:19,280 --> 01:39:21,119
back data about mxs and stuff so turning

2680
01:39:21,119 --> 01:39:22,320
it entirely off

2681
01:39:22,320 --> 01:39:27,840
is potentially unsafe yeah

2682
01:39:38,880 --> 01:39:42,159
all right is there any uh robert go

2683
01:39:42,159 --> 01:39:44,320
ahead

2684
01:39:44,880 --> 01:39:46,719
can i come through are you hearing me

2685
01:39:46,719 --> 01:39:48,320
yep yep

2686
01:39:48,320 --> 01:39:50,960
so quick question um do you think the

2687
01:39:50,960 --> 01:39:51,920
dns

2688
01:39:51,920 --> 01:39:55,119
has a gracefully over its

2689
01:39:55,119 --> 01:39:58,080
20 years you're saying

2690
01:39:58,800 --> 01:40:01,440
it hasn't worked right has it aged

2691
01:40:01,440 --> 01:40:03,360
gracefully in terms of a protocol do you

2692
01:40:03,360 --> 01:40:05,440
feel that it's still

2693
01:40:05,440 --> 01:40:09,840
good for it or has it has it outgrown

2694
01:40:09,840 --> 01:40:12,800
its initial roots

2695
01:40:13,199 --> 01:40:14,880
so that that has been so widely

2696
01:40:14,880 --> 01:40:16,800
discussed and when you get something as

2697
01:40:16,800 --> 01:40:19,360
entrenched as the dns you know uh the

2698
01:40:19,360 --> 01:40:21,600
thought of doing dns version 2 is the

2699
01:40:21,600 --> 01:40:23,119
phrase that has been kicked around for

2700
01:40:23,119 --> 01:40:24,639
20 years as well

2701
01:40:24,639 --> 01:40:26,880
uh you know should it ever be replaced

2702
01:40:26,880 --> 01:40:29,280
and reconsidered with something new

2703
01:40:29,280 --> 01:40:32,560
um you get huge issues with trying to

2704
01:40:32,560 --> 01:40:34,239
uh you know to update that much

2705
01:40:34,239 --> 01:40:36,159
infrastructure i think it is it is

2706
01:40:36,159 --> 01:40:37,119
scaled

2707
01:40:37,119 --> 01:40:39,360
amazingly well i think that if we were

2708
01:40:39,360 --> 01:40:40,800
going to redesign it today

2709
01:40:40,800 --> 01:40:42,880
you know we would certainly change some

2710
01:40:42,880 --> 01:40:43,840
things

2711
01:40:43,840 --> 01:40:46,960
uh there are you know one of the biggest

2712
01:40:46,960 --> 01:40:48,800
desires that people have right now is

2713
01:40:48,800 --> 01:40:50,800
can i and i talked about this last time

2714
01:40:50,800 --> 01:40:52,560
can we put more than one question in a

2715
01:40:52,560 --> 01:40:53,440
packet

2716
01:40:53,440 --> 01:40:56,560
and you can't and and the the the

2717
01:40:56,560 --> 01:40:59,760
issues around that are you know that the

2718
01:40:59,760 --> 01:41:01,600
resolver would have to wait for multiple

2719
01:41:01,600 --> 01:41:02,719
answers and try and figure out how to

2720
01:41:02,719 --> 01:41:03,760
answer all the questions and what

2721
01:41:03,760 --> 01:41:04,880
happens when you have multiple errors

2722
01:41:04,880 --> 01:41:06,560
and all those types of problems

2723
01:41:06,560 --> 01:41:08,719
exist which is why you shouldn't put

2724
01:41:08,719 --> 01:41:10,400
more than one question in a packet

2725
01:41:10,400 --> 01:41:13,199
even though there's a myth uh that you

2726
01:41:13,199 --> 01:41:15,199
that you can that the reality is you

2727
01:41:15,199 --> 01:41:16,320
can't because no implementation to

2728
01:41:16,320 --> 01:41:18,159
support it for good reasons

2729
01:41:18,159 --> 01:41:19,360
that being said i think if we were

2730
01:41:19,360 --> 01:41:21,280
redesigning it today the fact that

2731
01:41:21,280 --> 01:41:23,040
so many things are being asked for you

2732
01:41:23,040 --> 01:41:24,560
know jeff talked about the

2733
01:41:24,560 --> 01:41:27,360
https record and we're talking about the

2734
01:41:27,360 --> 01:41:29,360
a record and the quad a record and you

2735
01:41:29,360 --> 01:41:30,480
know i mean how many different things

2736
01:41:30,480 --> 01:41:31,840
can you query for you actually want

2737
01:41:31,840 --> 01:41:34,719
answers for all at once

2738
01:41:34,719 --> 01:41:37,520
well i think it has been quite well i

2739
01:41:37,520 --> 01:41:39,199
mean it has been extended

2740
01:41:39,199 --> 01:41:42,159
uh beyond whatever you want to imagine

2741
01:41:42,159 --> 01:41:43,920
with crutches

2742
01:41:43,920 --> 01:41:46,719
even but it's still fulfilling a lot of

2743
01:41:46,719 --> 01:41:48,000
the purpose it was meant to

2744
01:41:48,000 --> 01:41:51,840
fill um defining an entirely new

2745
01:41:51,840 --> 01:41:52,480
protocol

2746
01:41:52,480 --> 01:41:55,040
to replace dns is going to be extremely

2747
01:41:55,040 --> 01:41:55,920
hard because

2748
01:41:55,920 --> 01:41:57,840
why would anyone put things in a

2749
01:41:57,840 --> 01:41:58,960
protocol that

2750
01:41:58,960 --> 01:42:01,440
is mostly volume information at the

2751
01:42:01,440 --> 01:42:03,520
beginning

2752
01:42:03,520 --> 01:42:05,199
if i wanted to be provocative i would

2753
01:42:05,199 --> 01:42:06,800
say that actually we have

2754
01:42:06,800 --> 01:42:10,000
sort of an opportunity to do a new

2755
01:42:10,000 --> 01:42:13,199
dns dns new generation

2756
01:42:13,199 --> 01:42:16,560
by abusing perhaps

2757
01:42:16,560 --> 01:42:19,280
this thing called dough because it

2758
01:42:19,280 --> 01:42:21,040
allows a lot of flexibility and

2759
01:42:21,040 --> 01:42:22,800
extension there

2760
01:42:22,800 --> 01:42:25,360
while still retaining backwards

2761
01:42:25,360 --> 01:42:28,400
compatibility if he wants to

2762
01:42:28,400 --> 01:42:30,719
but that's a discussion to have amongst

2763
01:42:30,719 --> 01:42:34,000
all of the idf i guess

2764
01:42:34,080 --> 01:42:36,800
you know i disagree and actually think

2765
01:42:36,800 --> 01:42:38,159
that the cracks are

2766
01:42:38,159 --> 01:42:39,600
are showing and they're pretty

2767
01:42:39,600 --> 01:42:41,760
fundamental

2768
01:42:41,760 --> 01:42:44,480
the original specification of the dns

2769
01:42:44,480 --> 01:42:45,199
was

2770
01:42:45,199 --> 01:42:48,480
as a predominant udp protocol

2771
01:42:48,480 --> 01:42:51,760
so predominant was that the maximum

2772
01:42:51,760 --> 01:42:54,239
payload size in a dns packet was meant

2773
01:42:54,239 --> 01:42:54,880
to be in

2774
01:42:54,880 --> 01:42:58,320
udp 512 bytes and

2775
01:42:58,320 --> 01:43:01,280
for simple here's a domain name give me

2776
01:43:01,280 --> 01:43:03,199
an ip address

2777
01:43:03,199 --> 01:43:06,320
you know there was no reason conceivably

2778
01:43:06,320 --> 01:43:08,480
that you ever needed to go more than

2779
01:43:08,480 --> 01:43:12,239
512 bytes and large packets in the dns

2780
01:43:12,239 --> 01:43:15,360
were kind of odd and an exception

2781
01:43:15,360 --> 01:43:17,920
at the same time let me remind you the

2782
01:43:17,920 --> 01:43:19,600
maximum packet

2783
01:43:19,600 --> 01:43:23,360
that a v4 compliant host had to accept

2784
01:43:23,360 --> 01:43:27,280
was a maximum of 576 octets

2785
01:43:27,280 --> 01:43:30,480
and a host was quite able to drop 577

2786
01:43:30,480 --> 01:43:32,480
octet incoming id packets

2787
01:43:32,480 --> 01:43:35,760
so we designed the dns to sort of sit

2788
01:43:35,760 --> 01:43:37,679
within this small size

2789
01:43:37,679 --> 01:43:40,719
and large packets were the exception

2790
01:43:40,719 --> 01:43:43,679
the way you got a large dns response

2791
01:43:43,679 --> 01:43:45,600
through was you sent a small response

2792
01:43:45,600 --> 01:43:47,520
with the trunk eight bit set

2793
01:43:47,520 --> 01:43:49,440
which was triggering the client to go to

2794
01:43:49,440 --> 01:43:50,639
tcp

2795
01:43:50,639 --> 01:43:52,400
and you've just wasted one round trip

2796
01:43:52,400 --> 01:43:54,480
time and so

2797
01:43:54,480 --> 01:43:56,639
these days when we talk about dns sec

2798
01:43:56,639 --> 01:43:58,320
when we talk about service records when

2799
01:43:58,320 --> 01:43:59,520
we talk about

2800
01:43:59,520 --> 01:44:02,159
large text records and we sort of get

2801
01:44:02,159 --> 01:44:03,040
the view

2802
01:44:03,040 --> 01:44:05,040
that you know you can put anything in

2803
01:44:05,040 --> 01:44:06,560
the dns

2804
01:44:06,560 --> 01:44:08,560
you can but then you stress out the

2805
01:44:08,560 --> 01:44:10,560
transport protocol problem

2806
01:44:10,560 --> 01:44:13,199
and the issue is that a whole lot of

2807
01:44:13,199 --> 01:44:15,040
folk particularly clients

2808
01:44:15,040 --> 01:44:18,159
lie like crazy in the dns

2809
01:44:18,159 --> 01:44:21,920
sure i can handle 4096 octet udp

2810
01:44:21,920 --> 01:44:25,760
fragmented back at trains wrong

2811
01:44:25,760 --> 01:44:27,600
send them one of those and it goes huh

2812
01:44:27,600 --> 01:44:28,960
huh what happened

2813
01:44:28,960 --> 01:44:32,880
you know and so this whole area of

2814
01:44:32,880 --> 01:44:36,000
the sort of mutated transport in the dns

2815
01:44:36,000 --> 01:44:36,480
where

2816
01:44:36,480 --> 01:44:39,920
udp is prime tcp is backup

2817
01:44:39,920 --> 01:44:43,119
has worked badly now

2818
01:44:43,119 --> 01:44:45,360
we then go well okay let's just go all

2819
01:44:45,360 --> 01:44:47,199
the way and use

2820
01:44:47,199 --> 01:44:52,239
dot dns over tls or dns over https

2821
01:44:52,239 --> 01:44:54,800
and even if you think about it dns over

2822
01:44:54,800 --> 01:44:56,080
https 3

2823
01:44:56,080 --> 01:44:59,280
or quick is just a mutated tcp

2824
01:44:59,280 --> 01:45:01,440
it's just taken up one level in the

2825
01:45:01,440 --> 01:45:02,639
transport layer

2826
01:45:02,639 --> 01:45:05,600
but you have in essence the same sets of

2827
01:45:05,600 --> 01:45:06,480
problems

2828
01:45:06,480 --> 01:45:09,600
now we point to the web and say it is

2829
01:45:09,600 --> 01:45:11,199
possible to create

2830
01:45:11,199 --> 01:45:14,480
totally massive http based service

2831
01:45:14,480 --> 01:45:15,440
infrastructure

2832
01:45:15,440 --> 01:45:19,040
and that's true totally true

2833
01:45:19,040 --> 01:45:22,400
but we built a massive udp-based system

2834
01:45:22,400 --> 01:45:25,280
with tcp is the exception and there is

2835
01:45:25,280 --> 01:45:27,520
an awful lot of money required

2836
01:45:27,520 --> 01:45:30,719
to actually make the dns work over tcp

2837
01:45:30,719 --> 01:45:33,199
in all cases because throughputs and

2838
01:45:33,199 --> 01:45:35,760
servers etc don't actually work

2839
01:45:35,760 --> 01:45:39,440
now put that to one point one side

2840
01:45:39,440 --> 01:45:40,800
and then let's look at the dns

2841
01:45:40,800 --> 01:45:42,960
resolution economy

2842
01:45:42,960 --> 01:45:48,480
who pays to get dns answers provided

2843
01:45:48,719 --> 01:45:51,760
well it's not me i'm just the user

2844
01:45:51,760 --> 01:45:53,760
and so when you say we have to forklift

2845
01:45:53,760 --> 01:45:56,480
the entire dns resolution infrastructure

2846
01:45:56,480 --> 01:45:59,119
up to cope with tcp because that's not

2847
01:45:59,119 --> 01:46:00,320
where we started

2848
01:46:00,320 --> 01:46:01,920
you immediately open up this massive

2849
01:46:01,920 --> 01:46:03,840
economic issue well who's going to pay

2850
01:46:03,840 --> 01:46:04,800
for that

2851
01:46:04,800 --> 01:46:07,520
you know i want my dns to be free that's

2852
01:46:07,520 --> 01:46:08,480
what it is all about

2853
01:46:08,480 --> 01:46:11,040
no one pays to have names resolved at

2854
01:46:11,040 --> 01:46:11,600
the

2855
01:46:11,600 --> 01:46:14,400
query the client side so we're kind of

2856
01:46:14,400 --> 01:46:16,400
between a rock and a hard place

2857
01:46:16,400 --> 01:46:19,199
that while udp is difficult to make

2858
01:46:19,199 --> 01:46:20,080
secure

2859
01:46:20,080 --> 01:46:22,880
it has enormous troubles with privacy

2860
01:46:22,880 --> 01:46:25,040
the effort to add encryption is largely

2861
01:46:25,040 --> 01:46:27,119
a failure in udp

2862
01:46:27,119 --> 01:46:28,719
and we kind of look at this and go what

2863
01:46:28,719 --> 01:46:30,719
we really need to move on with that

2864
01:46:30,719 --> 01:46:32,080
transport protocol

2865
01:46:32,080 --> 01:46:36,880
this whole udp thing is a 1980s concept

2866
01:46:36,880 --> 01:46:39,280
but the whole problem is adhere to their

2867
01:46:39,280 --> 01:46:40,239
problem

2868
01:46:40,239 --> 01:46:41,920
and the dns is kind of stuck in

2869
01:46:41,920 --> 01:46:43,520
nostalgia because it's cheap

2870
01:46:43,520 --> 01:46:46,320
it's easy and that's what we all do and

2871
01:46:46,320 --> 01:46:48,560
trying to get us into some

2872
01:46:48,560 --> 01:46:50,639
if we real tcp based flow control

2873
01:46:50,639 --> 01:46:52,000
algorithm whether it's quick

2874
01:46:52,000 --> 01:46:53,760
or tcp it's the same thing in terms of

2875
01:46:53,760 --> 01:46:55,760
cost that's what's causing us

2876
01:46:55,760 --> 01:46:58,960
absolute heartache and i'm not sure i

2877
01:46:58,960 --> 01:47:00,880
see a clear resolution of that

2878
01:47:00,880 --> 01:47:04,639
but i do see i do see a clear desire on

2879
01:47:04,639 --> 01:47:06,880
the part of many applications

2880
01:47:06,880 --> 01:47:09,199
to actually push a huge amount of

2881
01:47:09,199 --> 01:47:11,679
rendezvous information into the dns

2882
01:47:11,679 --> 01:47:14,800
it's fast it can be made relatively

2883
01:47:14,800 --> 01:47:17,119
secure particularly with dnsec

2884
01:47:17,119 --> 01:47:19,520
you can trust it and quite frankly if we

2885
01:47:19,520 --> 01:47:21,040
actually made the responses

2886
01:47:21,040 --> 01:47:24,080
even bigger and i'm referring to dns

2887
01:47:24,080 --> 01:47:24,400
sect

2888
01:47:24,400 --> 01:47:26,960
chaining which i think is brilliant you

2889
01:47:26,960 --> 01:47:28,800
actually can make validation work in a

2890
01:47:28,800 --> 01:47:30,320
single round trip time

2891
01:47:30,320 --> 01:47:33,119
this is fantastic but you're carrying a

2892
01:47:33,119 --> 01:47:33,920
large

2893
01:47:33,920 --> 01:47:36,639
you know carry a load of information

2894
01:47:36,639 --> 01:47:38,480
sitting inside these sessions

2895
01:47:38,480 --> 01:47:40,480
will the network handle it yeah sure

2896
01:47:40,480 --> 01:47:42,480
this is tiny stuff

2897
01:47:42,480 --> 01:47:45,360
will the dns infrastructure handle it

2898
01:47:45,360 --> 01:47:47,199
well we built that for udp

2899
01:47:47,199 --> 01:47:50,480
so we're trying to put 21st century

2900
01:47:50,480 --> 01:47:53,840
payloads into 20th century

2901
01:47:53,840 --> 01:47:55,920
infrastructure and that's where we're

2902
01:47:55,920 --> 01:47:57,600
kind of the cracks are

2903
01:47:57,600 --> 01:48:00,320
really showing robert and i think the

2904
01:48:00,320 --> 01:48:02,239
answers are as much economic as they are

2905
01:48:02,239 --> 01:48:03,360
practical

2906
01:48:03,360 --> 01:48:05,520
um we're just not quite sure how to get

2907
01:48:05,520 --> 01:48:07,600
there

2908
01:48:07,600 --> 01:48:09,920
thank you very much um and also i should

2909
01:48:09,920 --> 01:48:11,199
say thank you to all three of you for

2910
01:48:11,199 --> 01:48:11,600
your

2911
01:48:11,600 --> 01:48:13,840
um your talks very very interesting so

2912
01:48:13,840 --> 01:48:14,880
thank you

2913
01:48:14,880 --> 01:48:17,520
thanks robert i'm certainly glad you

2914
01:48:17,520 --> 01:48:18,159
enjoyed him

2915
01:48:18,159 --> 01:48:20,000
anybody else want to ask a question

2916
01:48:20,000 --> 01:48:21,520
there's a question in the chat window

2917
01:48:21,520 --> 01:48:22,159
where's

2918
01:48:22,159 --> 01:48:24,320
um it's actually i think joel q mount

2919
01:48:24,320 --> 01:48:26,080
used any

2920
01:48:26,080 --> 01:48:27,520
actually it's more of an observation

2921
01:48:27,520 --> 01:48:29,440
really yeah yeah

2922
01:48:29,440 --> 01:48:30,560
that's actually the one that i was

2923
01:48:30,560 --> 01:48:33,840
thinking of yeah

2924
01:48:34,960 --> 01:48:36,320
there's a question of how widely it's

2925
01:48:36,320 --> 01:48:38,800
deployed i know uh in the infrastructure

2926
01:48:38,800 --> 01:48:40,960
i run i certainly see any still pop

2927
01:48:40,960 --> 01:48:43,440
around quite a bit and it's unclear

2928
01:48:43,440 --> 01:48:47,840
if it's a needed any or if it's a

2929
01:48:47,840 --> 01:48:51,119
or an abuse of any and there's it's very

2930
01:48:51,119 --> 01:48:53,599
hard to tell

2931
01:48:56,239 --> 01:48:59,360
i believe cloudflare's systems don't

2932
01:48:59,360 --> 01:49:00,960
support any weren't they one of the ones

2933
01:49:00,960 --> 01:49:02,800
that returned

2934
01:49:02,800 --> 01:49:06,239
not implemented here well this again was

2935
01:49:06,239 --> 01:49:06,719
this

2936
01:49:06,719 --> 01:49:09,280
issue about pushing pushing the dns into

2937
01:49:09,280 --> 01:49:11,360
content distribution networks

2938
01:49:11,360 --> 01:49:13,440
and it was sort of seen as why do i have

2939
01:49:13,440 --> 01:49:15,280
to push the entire elephant

2940
01:49:15,280 --> 01:49:17,360
you know out to the front edge of all

2941
01:49:17,360 --> 01:49:18,800
parts of my network

2942
01:49:18,800 --> 01:49:20,560
when all you're asking for is a query

2943
01:49:20,560 --> 01:49:22,159
relating to a toenail

2944
01:49:22,159 --> 01:49:24,320
you know i really don't want to push the

2945
01:49:24,320 --> 01:49:26,719
rest of this craft onward and outward

2946
01:49:26,719 --> 01:49:28,880
i'll just push basically cache-based

2947
01:49:28,880 --> 01:49:31,199
answers and just a fragment of the dns

2948
01:49:31,199 --> 01:49:33,199
if everyone asks for a quad a that's all

2949
01:49:33,199 --> 01:49:34,480
i'll serve at the edge

2950
01:49:34,480 --> 01:49:37,920
oh you ask for any if i want to be quick

2951
01:49:37,920 --> 01:49:41,040
i'll just say here's an answer the name

2952
01:49:41,040 --> 01:49:42,080
exists

2953
01:49:42,080 --> 01:49:44,080
the rest of the stuff is not immediately

2954
01:49:44,080 --> 01:49:46,000
available to the front end

2955
01:49:46,000 --> 01:49:49,199
shim that answers dns it's back in some

2956
01:49:49,199 --> 01:49:50,960
database that quite frankly i don't have

2957
01:49:50,960 --> 01:49:53,040
the time to look up

2958
01:49:53,040 --> 01:49:55,760
and i can see that as the way we try and

2959
01:49:55,760 --> 01:49:58,000
make the dns go faster because

2960
01:49:58,000 --> 01:49:59,520
you know the other pressure that's on

2961
01:49:59,520 --> 01:50:01,280
the dns is

2962
01:50:01,280 --> 01:50:05,280
it's too slow and no matter what we do

2963
01:50:05,280 --> 01:50:07,840
someone somewhere i predict will always

2964
01:50:07,840 --> 01:50:08,480
say

2965
01:50:08,480 --> 01:50:12,159
it's too slow and you know it's almost

2966
01:50:12,159 --> 01:50:14,000
the impossible target but that's that's

2967
01:50:14,000 --> 01:50:15,760
i think the other reason why

2968
01:50:15,760 --> 01:50:18,800
any which requires if you're going to go

2969
01:50:18,800 --> 01:50:20,960
instead of any all give me everything

2970
01:50:20,960 --> 01:50:22,320
you know the answer is well

2971
01:50:22,320 --> 01:50:24,560
this might take a while and we're just

2972
01:50:24,560 --> 01:50:27,119
not patient enough

2973
01:50:27,119 --> 01:50:28,960
so we need response times and negative

2974
01:50:28,960 --> 01:50:30,880
milliseconds yes

2975
01:50:30,880 --> 01:50:34,719
yes dns over tachyons i think is where

2976
01:50:34,719 --> 01:50:37,199
we're heading

2977
01:50:37,599 --> 01:50:40,400
predictive dns just like when you type

2978
01:50:40,400 --> 01:50:41,760
in the google search bar

2979
01:50:41,760 --> 01:50:44,960
yeah it comes up at you with what might

2980
01:50:44,960 --> 01:50:48,000
be the the question you wanted

2981
01:50:48,000 --> 01:50:50,800
some idea applied what do the two of you

2982
01:50:50,800 --> 01:50:52,800
think about pre-provisioning dns

2983
01:50:52,800 --> 01:50:54,719
over https will you actually get

2984
01:50:54,719 --> 01:50:57,040
server-side push then

2985
01:50:57,040 --> 01:50:59,119
well i've been i've been pushing for for

2986
01:50:59,119 --> 01:51:01,679
pushes you know using dns signed data

2987
01:51:01,679 --> 01:51:03,119
for forever right

2988
01:51:03,119 --> 01:51:04,560
so the whole thing that i had the whole

2989
01:51:04,560 --> 01:51:06,960
slide on you know don't accept stuff

2990
01:51:06,960 --> 01:51:08,159
from authoritative and

2991
01:51:08,159 --> 01:51:10,320
uh you know authoritative name servers

2992
01:51:10,320 --> 01:51:11,920
for which you didn't ask questions

2993
01:51:11,920 --> 01:51:14,239
that's moot in the case of dns sec right

2994
01:51:14,239 --> 01:51:15,599
you can you can actually return

2995
01:51:15,599 --> 01:51:17,360
other data and so there's been

2996
01:51:17,360 --> 01:51:19,199
discussions of should we start accepting

2997
01:51:19,199 --> 01:51:20,080
stuff

2998
01:51:20,080 --> 01:51:23,119
if you know that if if you're talking to

2999
01:51:23,119 --> 01:51:23,840
some

3000
01:51:23,840 --> 01:51:25,520
name server that actually knows what you

3001
01:51:25,520 --> 01:51:27,520
want why not

3002
01:51:27,520 --> 01:51:30,159
absolutely sure but in the absence of

3003
01:51:30,159 --> 01:51:32,400
the ns sect this would be a queen to

3004
01:51:32,400 --> 01:51:34,480
the earlier cache poisoning attacks that

3005
01:51:34,480 --> 01:51:36,480
you mentioned in your only it only works

3006
01:51:36,480 --> 01:51:38,159
if the inner sec is enabled so that's

3007
01:51:38,159 --> 01:51:39,679
the only time you should

3008
01:51:39,679 --> 01:51:42,320
you know if you get this gigantic

3009
01:51:42,320 --> 01:51:43,440
response back

3010
01:51:43,440 --> 01:51:45,360
you know ideally over tcp and it

3011
01:51:45,360 --> 01:51:46,480
contains an

3012
01:51:46,480 --> 01:51:50,080
entire zone's data right uh here's

3013
01:51:50,080 --> 01:51:50,480
here's

3014
01:51:50,480 --> 01:51:52,719
the resolver believes that it it has the

3015
01:51:52,719 --> 01:51:55,280
top 100 domain seen by this isp for the

3016
01:51:55,280 --> 01:51:55,679
past

3017
01:51:55,679 --> 01:51:57,199
hour i'm going to give it to you all so

3018
01:51:57,199 --> 01:51:59,040
that you can be oh look it's a negative

3019
01:51:59,040 --> 01:52:01,360
millisecond answer

3020
01:52:01,360 --> 01:52:04,559
but it should be verifiable

3021
01:52:08,080 --> 01:52:09,840
on the other hand things like though as

3022
01:52:09,840 --> 01:52:11,280
i mentioned

3023
01:52:11,280 --> 01:52:14,239
if you look at using dough as a way to

3024
01:52:14,239 --> 01:52:16,719
get to the ns as an api

3025
01:52:16,719 --> 01:52:18,400
might be possible to introduce

3026
01:52:18,400 --> 01:52:21,119
versioning and then

3027
01:52:21,119 --> 01:52:24,559
the sky's the limit

3028
01:52:24,960 --> 01:52:27,520
robert go ahead i have another question

3029
01:52:27,520 --> 01:52:28,639
for you it's probably for you

3030
01:52:28,639 --> 01:52:31,199
always um so you mentioned effectively

3031
01:52:31,199 --> 01:52:34,000
the split in terms of security between

3032
01:52:34,000 --> 01:52:36,880
uh securing the path to is it the local

3033
01:52:36,880 --> 01:52:37,440
resolver

3034
01:52:37,440 --> 01:52:40,080
local custom resolver versus securing

3035
01:52:40,080 --> 01:52:41,280
using dns sec

3036
01:52:41,280 --> 01:52:43,840
upwards for the records you seem to

3037
01:52:43,840 --> 01:52:44,639
suggest

3038
01:52:44,639 --> 01:52:46,800
that you don't need to take dnsec all

3039
01:52:46,800 --> 01:52:48,159
the way down to the

3040
01:52:48,159 --> 01:52:50,480
end host is that is that a correct

3041
01:52:50,480 --> 01:52:51,520
interpretation

3042
01:52:51,520 --> 01:52:55,360
or that is not a correct interpretation

3043
01:52:55,360 --> 01:52:58,080
of my belief

3044
01:52:58,080 --> 01:52:59,520
that being said there's a lot of people

3045
01:52:59,520 --> 01:53:01,599
that don't think that your

3046
01:53:01,599 --> 01:53:04,560
personal phone laptop whatever needs to

3047
01:53:04,560 --> 01:53:06,719
do dns tech validation on it because

3048
01:53:06,719 --> 01:53:07,119
you're

3049
01:53:07,119 --> 01:53:10,400
your resolver is doing it my personal

3050
01:53:10,400 --> 01:53:12,560
belief and i've both won and lost this

3051
01:53:12,560 --> 01:53:14,080
battle in multiple places

3052
01:53:14,080 --> 01:53:16,880
is that if you are using the dns sec

3053
01:53:16,880 --> 01:53:17,440
signed

3054
01:53:17,440 --> 01:53:20,800
data to store critical data that you are

3055
01:53:20,800 --> 01:53:23,040
bootstrapping security off of

3056
01:53:23,040 --> 01:53:25,760
right and dane is a good example of that

3057
01:53:25,760 --> 01:53:28,320
pgp keys are a good example of that ssh

3058
01:53:28,320 --> 01:53:30,480
fingerprints are a good example of that

3059
01:53:30,480 --> 01:53:33,040
i don't trust my resolvers a d bit equal

3060
01:53:33,040 --> 01:53:35,119
to one in order to ensure

3061
01:53:35,119 --> 01:53:36,880
that i am accepting that data and it's

3062
01:53:36,880 --> 01:53:39,360
valid so my belief is there's no reason

3063
01:53:39,360 --> 01:53:40,480
why we can't do

3064
01:53:40,480 --> 01:53:42,960
validation on individual devices they're

3065
01:53:42,960 --> 01:53:44,880
certainly fast enough these days that's

3066
01:53:44,880 --> 01:53:46,159
not a problem

3067
01:53:46,159 --> 01:53:48,159
and it allows you greater respect with

3068
01:53:48,159 --> 01:53:50,159
respect to being able to bootstrap

3069
01:53:50,159 --> 01:53:52,320
security related data that is already

3070
01:53:52,320 --> 01:53:55,440
encoded in the dns

3071
01:53:55,440 --> 01:53:57,599
well i do remember and it's an ongoing

3072
01:53:57,599 --> 01:53:58,800
debate about

3073
01:53:58,800 --> 01:54:02,000
dane why haven't we got

3074
01:54:02,000 --> 01:54:04,560
pkix keys sitting inside the dns and

3075
01:54:04,560 --> 01:54:06,239
getting rid of the

3076
01:54:06,239 --> 01:54:08,719
twisted and potentially corrupted

3077
01:54:08,719 --> 01:54:10,880
version of all of those cas in in the

3078
01:54:10,880 --> 01:54:12,480
web pki

3079
01:54:12,480 --> 01:54:15,280
and the response from the browser folk

3080
01:54:15,280 --> 01:54:16,320
has been

3081
01:54:16,320 --> 01:54:19,040
you know when i talked about time it

3082
01:54:19,040 --> 01:54:20,719
really is an issue

3083
01:54:20,719 --> 01:54:24,480
and that while dane can feasibly do this

3084
01:54:24,480 --> 01:54:26,159
one of the issues not all of them but

3085
01:54:26,159 --> 01:54:27,760
one of the issues is

3086
01:54:27,760 --> 01:54:30,320
that doubt the incline level performing

3087
01:54:30,320 --> 01:54:31,280
validation

3088
01:54:31,280 --> 01:54:33,840
you know on your own takes an extended

3089
01:54:33,840 --> 01:54:35,599
amount of time i've got to basically

3090
01:54:35,599 --> 01:54:36,239
query

3091
01:54:36,239 --> 01:54:38,880
backwards up the chain and get back all

3092
01:54:38,880 --> 01:54:40,239
of those dns key

3093
01:54:40,239 --> 01:54:43,840
and ds records and and so that's also

3094
01:54:43,840 --> 01:54:45,199
this push that says

3095
01:54:45,199 --> 01:54:47,040
if you really want to do this and robert

3096
01:54:47,040 --> 01:54:48,639
you can experiment with this and add

3097
01:54:48,639 --> 01:54:50,000
your own

3098
01:54:50,000 --> 01:54:53,199
stub dns sec validator and

3099
01:54:53,199 --> 01:54:54,480
i think you should because it's

3100
01:54:54,480 --> 01:54:56,480
certainly a learning experience

3101
01:54:56,480 --> 01:54:59,520
as to how long it can take in terms of

3102
01:54:59,520 --> 01:55:00,639
elapsed time

3103
01:55:00,639 --> 01:55:03,360
to actually perform this validation and

3104
01:55:03,360 --> 01:55:04,880
and that's the issue

3105
01:55:04,880 --> 01:55:08,320
that while the resolver which normally

3106
01:55:08,320 --> 01:55:09,679
is handling a lot of queries

3107
01:55:09,679 --> 01:55:12,719
caches this stuff up and the validation

3108
01:55:12,719 --> 01:55:14,480
the validated answers are stored in the

3109
01:55:14,480 --> 01:55:15,520
case

3110
01:55:15,520 --> 01:55:17,599
down at the end user client level

3111
01:55:17,599 --> 01:55:18,880
there's nowhere near that

3112
01:55:18,880 --> 01:55:21,520
intensive activity level that loads the

3113
01:55:21,520 --> 01:55:24,000
case efficiently you're not combining

3114
01:55:24,000 --> 01:55:26,159
strengths from other players you're back

3115
01:55:26,159 --> 01:55:27,520
on your own again

3116
01:55:27,520 --> 01:55:30,400
and because of that the time penalty is

3117
01:55:30,400 --> 01:55:32,239
well i think for most users would agree

3118
01:55:32,239 --> 01:55:34,560
the time penalty is excessive

3119
01:55:34,560 --> 01:55:36,880
and various efforts have been made to

3120
01:55:36,880 --> 01:55:38,560
try and get around that

3121
01:55:38,560 --> 01:55:40,880
and the most successful i've seen is dns

3122
01:55:40,880 --> 01:55:41,920
sect chaining

3123
01:55:41,920 --> 01:55:45,199
where you push the burden of work back

3124
01:55:45,199 --> 01:55:46,000
onto the zone

3125
01:55:46,000 --> 01:55:49,199
publisher who as well as publishing

3126
01:55:49,199 --> 01:55:51,520
this is my rr records this is a

3127
01:55:51,520 --> 01:55:52,480
signature

3128
01:55:52,480 --> 01:55:55,440
they actually publish a combined record

3129
01:55:55,440 --> 01:55:57,280
a dns set chain record

3130
01:55:57,280 --> 01:55:58,719
which is the answers to all the

3131
01:55:58,719 --> 01:56:00,560
validation questions you ever were going

3132
01:56:00,560 --> 01:56:02,159
to ask about me

3133
01:56:02,159 --> 01:56:05,360
and again because it's dns sec that's

3134
01:56:05,360 --> 01:56:06,320
okay

3135
01:56:06,320 --> 01:56:08,080
because you don't have to believe it you

3136
01:56:08,080 --> 01:56:10,080
can use the answers to validate

3137
01:56:10,080 --> 01:56:13,599
what's going on now that means

3138
01:56:13,599 --> 01:56:16,960
huge answers that means pushing huge

3139
01:56:16,960 --> 01:56:18,400
answers in tcp

3140
01:56:18,400 --> 01:56:21,119
out into stubs and while that link

3141
01:56:21,119 --> 01:56:23,440
between recursives and authoritatives

3142
01:56:23,440 --> 01:56:26,880
is relatively robust and handles large

3143
01:56:26,880 --> 01:56:28,159
packets

3144
01:56:28,159 --> 01:56:31,599
and tcp adequately i wouldn't say well

3145
01:56:31,599 --> 01:56:32,719
but adequately

3146
01:56:32,719 --> 01:56:34,480
the real problem is out there in stub

3147
01:56:34,480 --> 01:56:36,159
land where

3148
01:56:36,159 --> 01:56:39,040
the amount of cheap crap that people buy

3149
01:56:39,040 --> 01:56:40,080
you know

3150
01:56:40,080 --> 01:56:41,920
there's an awful lot numbering in the

3151
01:56:41,920 --> 01:56:44,239
billions it's not even clear

3152
01:56:44,239 --> 01:56:46,719
how easily tcp gets out there or

3153
01:56:46,719 --> 01:56:48,239
fragmented udp

3154
01:56:48,239 --> 01:56:50,639
so while it's really good to say clients

3155
01:56:50,639 --> 01:56:52,480
in mobile phones should do validation

3156
01:56:52,480 --> 01:56:54,239
and we think we can do that

3157
01:56:54,239 --> 01:56:56,960
the implication is wow we need to push

3158
01:56:56,960 --> 01:56:59,760
large dns responses out to these things

3159
01:56:59,760 --> 01:57:03,119
gee that's an issue so that's why this

3160
01:57:03,119 --> 01:57:04,239
becomes a vexed

3161
01:57:04,239 --> 01:57:07,760
problem that a good dnsx system should

3162
01:57:07,760 --> 01:57:09,760
go all the way to the edge

3163
01:57:09,760 --> 01:57:12,159
we really don't understand how

3164
01:57:12,159 --> 01:57:13,440
logistically

3165
01:57:13,440 --> 01:57:14,880
that can be done within the bounds of

3166
01:57:14,880 --> 01:57:16,560
current infrastructure so that's kind of

3167
01:57:16,560 --> 01:57:18,000
the tough question

3168
01:57:18,000 --> 01:57:19,599
do you remember one thing when it comes

3169
01:57:19,599 --> 01:57:22,239
to validation and slowness

3170
01:57:22,239 --> 01:57:23,920
it's only slow the first time if you

3171
01:57:23,920 --> 01:57:25,520
have a three hundred and

3172
01:57:25,520 --> 01:57:27,199
three thousand six hundred millisecond

3173
01:57:27,199 --> 01:57:30,560
uh sorry 300 600 second you know ttl

3174
01:57:30,560 --> 01:57:32,560
then you only have to do it once an hour

3175
01:57:32,560 --> 01:57:33,599
uh but let's ask

3176
01:57:33,599 --> 01:57:35,760
monica in the chat window actually asked

3177
01:57:35,760 --> 01:57:37,360
a question which is how prevalent is

3178
01:57:37,360 --> 01:57:38,560
edns

3179
01:57:38,560 --> 01:57:42,080
client subnet and how my screen saver

3180
01:57:42,080 --> 01:57:43,199
kicked on right then

3181
01:57:43,199 --> 01:57:46,239
and how privacy sensitive is it and uh

3182
01:57:46,239 --> 01:57:48,480
has the data protection crowd detected

3183
01:57:48,480 --> 01:57:49,520
it already

3184
01:57:49,520 --> 01:57:51,199
so jeff do you actually have

3185
01:57:51,199 --> 01:57:52,239
measurements or one of you have

3186
01:57:52,239 --> 01:57:54,480
measurements

3187
01:57:54,480 --> 01:57:56,480
this is a really difficult question

3188
01:57:56,480 --> 01:57:58,080
monica because

3189
01:57:58,080 --> 01:58:01,360
the folk who could answer view that the

3190
01:58:01,360 --> 01:58:04,000
data that they get is so sensitive

3191
01:58:04,000 --> 01:58:05,119
they're not going to answer your

3192
01:58:05,119 --> 01:58:07,920
question and it's kind of

3193
01:58:07,920 --> 01:58:11,440
the problem is acute certainly

3194
01:58:11,440 --> 01:58:14,400
as we've observed in the analysis around

3195
01:58:14,400 --> 01:58:17,119
initiatives like oblivious dns

3196
01:58:17,119 --> 01:58:20,239
the combination of who you are

3197
01:58:20,239 --> 01:58:23,199
and the name you're querying for is

3198
01:58:23,199 --> 01:58:25,440
extraordinarily valuable

3199
01:58:25,440 --> 01:58:28,719
it exposes what people are doing

3200
01:58:28,719 --> 01:58:32,480
absolutely and so in that respect

3201
01:58:32,480 --> 01:58:34,480
this is a problem because when you think

3202
01:58:34,480 --> 01:58:36,800
about the dns the query never has the

3203
01:58:36,800 --> 01:58:38,480
query err

3204
01:58:38,480 --> 01:58:40,719
the query er is the source ip address of

3205
01:58:40,719 --> 01:58:41,920
the packet

3206
01:58:41,920 --> 01:58:46,320
so when i query for pottery.net

3207
01:58:46,320 --> 01:58:49,119
i go through a recursive resolver the

3208
01:58:49,119 --> 01:58:51,440
recursive resolver knows about me

3209
01:58:51,440 --> 01:58:53,040
but if it's not in the case at that

3210
01:58:53,040 --> 01:58:55,520
point the recursive resolver goes to the

3211
01:58:55,520 --> 01:58:57,280
authority if the authority there has no

3212
01:58:57,280 --> 01:58:57,920
idea jeff

3213
01:58:57,920 --> 01:59:00,320
is asking all it knows is the recursive

3214
01:59:00,320 --> 01:59:01,040
is asking

3215
01:59:01,040 --> 01:59:04,719
on behalf of i don't know now edna zero

3216
01:59:04,719 --> 01:59:05,520
says no no

3217
01:59:05,520 --> 01:59:08,560
jeff's asking it's jeff and you go

3218
01:59:08,560 --> 01:59:10,560
oh but we've obscured it this is a slash

3219
01:59:10,560 --> 01:59:13,440
24 subnet

3220
01:59:13,440 --> 01:59:15,920
unless when someone configures it to do

3221
01:59:15,920 --> 01:59:17,360
a slash 32

3222
01:59:17,360 --> 01:59:21,280
oops which happens or in the case of v6

3223
01:59:21,280 --> 01:59:23,199
you know what's the right subnet size to

3224
01:59:23,199 --> 01:59:25,599
obscure me

3225
01:59:25,599 --> 01:59:28,159
it's an extraordinarily difficult

3226
01:59:28,159 --> 01:59:29,199
problem

3227
01:59:29,199 --> 01:59:33,040
and as a data leak it's humongously bad

3228
01:59:33,040 --> 01:59:35,920
on the other side the issue of content

3229
01:59:35,920 --> 01:59:38,000
distribution networks we've seen already

3230
01:59:38,000 --> 01:59:39,760
with the service record

3231
01:59:39,760 --> 01:59:42,159
that realistically folk don't want to

3232
01:59:42,159 --> 01:59:43,119
spend the time

3233
01:59:43,119 --> 01:59:45,679
customizing the response and steering

3234
01:59:45,679 --> 01:59:47,119
you to the closest

3235
01:59:47,119 --> 01:59:49,679
entry point in their cdn through the

3236
01:59:49,679 --> 01:59:51,280
application

3237
01:59:51,280 --> 01:59:54,239
to cut the time and throw the problem to

3238
01:59:54,239 --> 01:59:55,040
someone else

3239
01:59:55,040 --> 01:59:57,119
put it in the dns to give the right

3240
01:59:57,119 --> 01:59:58,239
answer i

3241
01:59:58,239 --> 02:00:02,400
need an idea of the end user's location

3242
02:00:02,400 --> 02:00:05,520
the problem is addresses the location

3243
02:00:05,520 --> 02:00:08,400
and identity and to say i just wanted to

3244
02:00:08,400 --> 02:00:09,840
know where you are i didn't want to know

3245
02:00:09,840 --> 02:00:11,360
who you are

3246
02:00:11,360 --> 02:00:13,679
our ip address infrastructure says no no

3247
02:00:13,679 --> 02:00:14,719
no no

3248
02:00:14,719 --> 02:00:17,520
can't do that as soon as you get to know

3249
02:00:17,520 --> 02:00:19,920
that address even at a prefix level

3250
02:00:19,920 --> 02:00:22,280
it's pretty clear who you are and

3251
02:00:22,280 --> 02:00:24,080
disambiguating that

3252
02:00:24,080 --> 02:00:26,480
is nigh on impossible in the current ip

3253
02:00:26,480 --> 02:00:28,080
address infrastructure

3254
02:00:28,080 --> 02:00:30,320
so you know one person's problem is

3255
02:00:30,320 --> 02:00:32,080
another person's nightmare moniker

3256
02:00:32,080 --> 02:00:34,639
and uh yes it's incredibly sensitive

3257
02:00:34,639 --> 02:00:35,440
data

3258
02:00:35,440 --> 02:00:39,360
and if i could answer your question

3259
02:00:39,360 --> 02:00:40,800
that would mean we're treating that data

3260
02:00:40,800 --> 02:00:43,199
badly the fact that

3261
02:00:43,199 --> 02:00:46,239
i can't answer it in a generic way i

3262
02:00:46,239 --> 02:00:47,520
can't give you data

3263
02:00:47,520 --> 02:00:49,520
is i suppose some slight reassurance

3264
02:00:49,520 --> 02:00:51,360
that the folk who are privy

3265
02:00:51,360 --> 02:00:54,800
inside that resolution power do not make

3266
02:00:54,800 --> 02:00:55,520
a habit

3267
02:00:55,520 --> 02:00:58,400
of publishing what they know and and

3268
02:00:58,400 --> 02:01:00,159
that's about as good as it gets i think

3269
02:01:00,159 --> 02:01:02,560
in today's world right now with this

3270
02:01:02,560 --> 02:01:05,360
i agree with the caveats on the rfc and

3271
02:01:05,360 --> 02:01:06,880
there were a lot

3272
02:01:06,880 --> 02:01:09,280
and the caveats as i recall basically

3273
02:01:09,280 --> 02:01:10,480
said

3274
02:01:10,480 --> 02:01:12,400
we're going to publish this because

3275
02:01:12,400 --> 02:01:14,800
interoperability is good

3276
02:01:14,800 --> 02:01:16,239
we're not publishing it because it's the

3277
02:01:16,239 --> 02:01:17,920
best way of doing this

3278
02:01:17,920 --> 02:01:19,679
we don't know what the best way is but

3279
02:01:19,679 --> 02:01:22,239
we think this leaks like a sieve and i

3280
02:01:22,239 --> 02:01:23,760
agree with that analysis

3281
02:01:23,760 --> 02:01:25,840
it leaks like a shiv there really should

3282
02:01:25,840 --> 02:01:27,440
be a better way of doing this

3283
02:01:27,440 --> 02:01:30,239
but we don't know what it is if you

3284
02:01:30,239 --> 02:01:33,119
really want to go down this path

3285
02:01:33,119 --> 02:01:36,239
the other path is don't expose any

3286
02:01:36,239 --> 02:01:38,320
information at all

3287
02:01:38,320 --> 02:01:42,000
oblivious dns hides that combination

3288
02:01:42,000 --> 02:01:44,480
no one not even a recursive resolver

3289
02:01:44,480 --> 02:01:46,719
gets to know who's asking what

3290
02:01:46,719 --> 02:01:48,960
because you deliberately obscure it and

3291
02:01:48,960 --> 02:01:50,480
so that's his tension

3292
02:01:50,480 --> 02:01:52,880
that the application folk want to assume

3293
02:01:52,880 --> 02:01:54,000
that the dns

3294
02:01:54,000 --> 02:01:56,639
tells all it racks on everyone all of

3295
02:01:56,639 --> 02:01:58,719
the time

3296
02:01:58,719 --> 02:02:01,599
over on the other side dns and privacy

3297
02:02:01,599 --> 02:02:03,280
which is a big thing in today's world

3298
02:02:03,280 --> 02:02:04,320
the answer is

3299
02:02:04,320 --> 02:02:06,560
we're ratting on no one and we're making

3300
02:02:06,560 --> 02:02:07,760
sure that no one

3301
02:02:07,760 --> 02:02:11,040
not even recursive resolvers are privy

3302
02:02:11,040 --> 02:02:12,000
to

3303
02:02:12,000 --> 02:02:16,000
the profiling of what users do and

3304
02:02:16,000 --> 02:02:17,760
you know we get as much security as

3305
02:02:17,760 --> 02:02:19,679
we're prepared to wait for

3306
02:02:19,679 --> 02:02:22,080
and we're prepared to pay for and as

3307
02:02:22,080 --> 02:02:23,920
long as the assumption is the user is

3308
02:02:23,920 --> 02:02:25,280
incredibly impatient

3309
02:02:25,280 --> 02:02:27,440
and waits for nothing security is

3310
02:02:27,440 --> 02:02:29,280
sitting there going oh my god how do we

3311
02:02:29,280 --> 02:02:30,320
do this

3312
02:02:30,320 --> 02:02:32,320
yet still provide an incredibly fast

3313
02:02:32,320 --> 02:02:34,800
sort of responsiveness and feel

3314
02:02:34,800 --> 02:02:37,119
and i don't understand how to resolve

3315
02:02:37,119 --> 02:02:39,040
that tension

3316
02:02:39,040 --> 02:02:40,639
a lot of i think what we've been talking

3317
02:02:40,639 --> 02:02:42,159
about in the last 15 minutes has been

3318
02:02:42,159 --> 02:02:44,560
the tension around three pillars right

3319
02:02:44,560 --> 02:02:48,159
you have uh security with respect to

3320
02:02:48,159 --> 02:02:50,320
integrity you have security with respect

3321
02:02:50,320 --> 02:02:51,440
to privacy

3322
02:02:51,440 --> 02:02:53,679
and you have speed of response you

3323
02:02:53,679 --> 02:02:55,920
cannot optimize for all three at once

3324
02:02:55,920 --> 02:02:57,440
and things like ecs

3325
02:02:57,440 --> 02:02:59,520
and don't do validation because i need

3326
02:02:59,520 --> 02:03:01,280
to show the webpage faster

3327
02:03:01,280 --> 02:03:03,520
is an indication that it matters you

3328
02:03:03,520 --> 02:03:05,440
know more to

3329
02:03:05,440 --> 02:03:07,199
to get speed over those other two and

3330
02:03:07,199 --> 02:03:08,800
unfortunately users don't have the

3331
02:03:08,800 --> 02:03:09,760
ability to

3332
02:03:09,760 --> 02:03:11,679
actually select what they prefer and

3333
02:03:11,679 --> 02:03:13,440
also users typically don't have the

3334
02:03:13,440 --> 02:03:15,520
the understanding to be able to select

3335
02:03:15,520 --> 02:03:18,480
what they would prefer

3336
02:03:20,400 --> 02:03:23,280
although although our efforts to empower

3337
02:03:23,280 --> 02:03:24,400
users

3338
02:03:24,400 --> 02:03:26,480
have always been in some ways thwarted

3339
02:03:26,480 --> 02:03:28,000
by the fact that almost no one

3340
02:03:28,000 --> 02:03:30,239
fiddles with the buttons and

3341
02:03:30,239 --> 02:03:32,239
increasingly the application folk have

3342
02:03:32,239 --> 02:03:32,800
become

3343
02:03:32,800 --> 02:03:35,679
impatient with that and are now arming

3344
02:03:35,679 --> 02:03:37,840
the application with presets

3345
02:03:37,840 --> 02:03:39,840
you only need to look at the mozilla

3346
02:03:39,840 --> 02:03:41,599
firefox decisions

3347
02:03:41,599 --> 02:03:43,679
about their use of dough in certain

3348
02:03:43,679 --> 02:03:44,719
markets

3349
02:03:44,719 --> 02:03:46,800
to sort of sense this level of

3350
02:03:46,800 --> 02:03:48,320
impatience

3351
02:03:48,320 --> 02:03:50,639
that saying users have a choice they can

3352
02:03:50,639 --> 02:03:53,280
go into settings and do xxx

3353
02:03:53,280 --> 02:03:55,280
is kind of speaking to the one in a

3354
02:03:55,280 --> 02:03:57,520
thousand folk who might do that

3355
02:03:57,520 --> 02:03:59,119
if you really want to move the dial for

3356
02:03:59,119 --> 02:04:01,440
everyone the application folk i think at

3357
02:04:01,440 --> 02:04:03,520
large now got to the point of going

3358
02:04:03,520 --> 02:04:06,239
i'm not waiting i'm going to arm the

3359
02:04:06,239 --> 02:04:07,360
application

3360
02:04:07,360 --> 02:04:10,000
with the necessary behavior patterns

3361
02:04:10,000 --> 02:04:10,880
sure

3362
02:04:10,880 --> 02:04:13,760
you can reverse but the default settings

3363
02:04:13,760 --> 02:04:16,000
the decisions the applications making

3364
02:04:16,000 --> 02:04:18,639
so increasingly these days users don't

3365
02:04:18,639 --> 02:04:19,360
get

3366
02:04:19,360 --> 02:04:21,440
if you will a say in this because

3367
02:04:21,440 --> 02:04:23,199
there's no expectation users will

3368
02:04:23,199 --> 02:04:24,000
exercise that

3369
02:04:24,000 --> 02:04:26,800
right applications not platforms but

3370
02:04:26,800 --> 02:04:28,000
applications

3371
02:04:28,000 --> 02:04:30,079
are now making these default choices you

3372
02:04:30,079 --> 02:04:33,440
know welcome to the new world

3373
02:04:33,440 --> 02:04:36,480
that's just a reflection of normal user

3374
02:04:36,480 --> 02:04:37,520
behavior i mean

3375
02:04:37,520 --> 02:04:38,800
you only care about security with

3376
02:04:38,800 --> 02:04:41,199
something bad happens to you

3377
02:04:41,199 --> 02:04:45,280
and in the meantime large e-commerce

3378
02:04:45,280 --> 02:04:48,480
platforms are showing have data that a

3379
02:04:48,480 --> 02:04:50,159
few milliseconds of

3380
02:04:50,159 --> 02:04:53,040
delay in any of the transactions causes

3381
02:04:53,040 --> 02:04:54,239
a measurable

3382
02:04:54,239 --> 02:04:57,599
loss of close in those transactions

3383
02:04:57,599 --> 02:04:59,360
right

3384
02:04:59,360 --> 02:05:03,599
so i mean you only shout for the police

3385
02:05:03,599 --> 02:05:05,360
when you're bugged

3386
02:05:05,360 --> 02:05:06,960
in the meantime you don't want them near

3387
02:05:06,960 --> 02:05:09,119
you

3388
02:05:10,639 --> 02:05:12,719
all right well it looks like we are now

3389
02:05:12,719 --> 02:05:13,679
at the top of the

3390
02:05:13,679 --> 02:05:15,119
hour i don't know if warren wants to

3391
02:05:15,119 --> 02:05:18,000
come back in and close us out or not but

3392
02:05:18,000 --> 02:05:20,079
thank you for everybody that listened to

3393
02:05:20,079 --> 02:05:21,440
us today and

3394
02:05:21,440 --> 02:05:23,920
um if if we spoke too quick or you

3395
02:05:23,920 --> 02:05:25,520
missed something it'll be on youtube i'm

3396
02:05:25,520 --> 02:05:27,119
pretty positive if it's i know it's

3397
02:05:27,119 --> 02:05:27,840
already

3398
02:05:27,840 --> 02:05:29,119
been broadcast there whether it's

3399
02:05:29,119 --> 02:05:30,639
archive they're in the same place i'm

3400
02:05:30,639 --> 02:05:33,199
not sure but

3401
02:05:33,280 --> 02:05:34,880
now thank you all too for coming

3402
02:05:34,880 --> 02:05:36,560
hopefully it's been useful

3403
02:05:36,560 --> 02:05:39,760
thank you all yep thank you everybody

3404
02:05:39,760 --> 02:05:41,679
everyone and yes it will be archived and

3405
02:05:41,679 --> 02:05:43,760
will be will be on youtube i believe

3406
02:05:43,760 --> 02:05:45,920
that greg will also post it on the ietf

3407
02:05:45,920 --> 02:05:47,599
website for a link to it

3408
02:05:47,599 --> 02:05:50,239
so people can find it there and thank

3409
02:05:50,239 --> 02:05:52,000
you very much to all of the presenters i

3410
02:05:52,000 --> 02:05:53,280
know it was a huge amount of work

3411
02:05:53,280 --> 02:05:54,400
getting organized

3412
02:05:54,400 --> 02:05:57,360
but i think people really enjoyed it

3413
02:05:57,360 --> 02:05:57,920
enjoy

3414
02:05:57,920 --> 02:06:00,960
not prague next week

3415
02:06:01,280 --> 02:06:05,119
sob thanks bye all one of my favorite

3416
02:06:05,119 --> 02:06:08,000
places to go to in how well

3417
02:06:08,000 --> 02:06:17,840
sub sail

3418
02:06:43,840 --> 02:06:45,920
you

