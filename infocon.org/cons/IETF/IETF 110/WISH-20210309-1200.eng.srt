1
00:01:44,240 --> 00:01:46,079
good morning good evening good afternoon

2
00:01:46,079 --> 00:01:48,320
hey folks i think we're going to wait a

3
00:01:48,320 --> 00:01:49,840
couple more minutes before we get

4
00:01:49,840 --> 00:01:51,280
started so

5
00:01:51,280 --> 00:01:52,560
i don't know we'll give it two more and

6
00:01:52,560 --> 00:01:55,840
see what happens

7
00:02:55,519 --> 00:02:57,599
okay i think we can we can start right

8
00:02:57,599 --> 00:03:00,080
now so thank you everyone for joining

9
00:03:00,080 --> 00:03:01,200
the first uh

10
00:03:01,200 --> 00:03:03,920
wish working group meeting unfortunately

11
00:03:03,920 --> 00:03:04,640
it's online

12
00:03:04,640 --> 00:03:07,360
but that should be addressed uh in

13
00:03:07,360 --> 00:03:08,239
future

14
00:03:08,239 --> 00:03:11,519
meetings so um

15
00:03:11,519 --> 00:03:13,599
sean can you go to the next slide please

16
00:03:13,599 --> 00:03:17,359
first we're gonna start with uh

17
00:03:17,519 --> 00:03:20,319
with the agenda um we're gonna start

18
00:03:20,319 --> 00:03:21,200
with the normal

19
00:03:21,200 --> 00:03:24,159
administration the usual ietf policies

20
00:03:24,159 --> 00:03:25,519
are in effect

21
00:03:25,519 --> 00:03:28,400
uh you agree that you follow the ietf

22
00:03:28,400 --> 00:03:30,080
processing policy

23
00:03:30,080 --> 00:03:32,400
if you for example aware that any ietf

24
00:03:32,400 --> 00:03:34,159
contribution is covered by patent or

25
00:03:34,159 --> 00:03:35,680
patent application that are owned and

26
00:03:35,680 --> 00:03:37,440
controlled by you or your sponsor

27
00:03:37,440 --> 00:03:38,959
you must disclose that fact or not

28
00:03:38,959 --> 00:03:40,959
participate in the discussion

29
00:03:40,959 --> 00:03:42,799
as a participant or an attendee to any

30
00:03:42,799 --> 00:03:44,560
ietf activity you acknowledge that

31
00:03:44,560 --> 00:03:46,239
written audio and video and photographic

32
00:03:46,239 --> 00:03:48,720
records of meetings may be made public

33
00:03:48,720 --> 00:03:50,480
personal information that you provide to

34
00:03:50,480 --> 00:03:52,400
the ietf will be handled in accordance

35
00:03:52,400 --> 00:03:54,640
with the ietf privacy statement

36
00:03:54,640 --> 00:03:56,560
as participant or attendee you also

37
00:03:56,560 --> 00:03:58,840
agree to work respectfully with other

38
00:03:58,840 --> 00:04:00,000
participants

39
00:04:00,000 --> 00:04:01,680
please contact the ombuds team if you

40
00:04:01,680 --> 00:04:04,159
have any question or concern about that

41
00:04:04,159 --> 00:04:06,000
definitive information in the documents

42
00:04:06,000 --> 00:04:08,159
listed below any other itf pcps for

43
00:04:08,159 --> 00:04:09,680
advice please talk to

44
00:04:09,680 --> 00:04:12,000
the working group chairs shown on myself

45
00:04:12,000 --> 00:04:13,120
or

46
00:04:13,120 --> 00:04:17,760
ads all right next slide

47
00:04:18,160 --> 00:04:21,199
so welcome again um we had

48
00:04:21,199 --> 00:04:24,080
uh made on the on the mailing mr request

49
00:04:24,080 --> 00:04:24,560
for

50
00:04:24,560 --> 00:04:28,000
uh javascribe and not taker

51
00:04:28,000 --> 00:04:31,600
did we had any volunteer shen

52
00:04:31,600 --> 00:04:34,080
i didn't see any but you might have are

53
00:04:34,080 --> 00:04:35,040
aware

54
00:04:35,040 --> 00:04:37,440
i i did not so we can't proceed until we

55
00:04:37,440 --> 00:04:42,320
find those two people

56
00:04:42,320 --> 00:04:46,240
so we would be kind enough to volunteer

57
00:04:46,240 --> 00:04:49,600
before we volunteer someone

58
00:04:54,840 --> 00:04:57,840
time

59
00:04:57,840 --> 00:05:02,479
oh so we have someone in the queue and

60
00:05:02,479 --> 00:05:04,720
we have two people in the queue sean do

61
00:05:04,720 --> 00:05:06,800
you know to handle the queue

62
00:05:06,800 --> 00:05:09,520
or people can just go ahead and speak

63
00:05:09,520 --> 00:05:11,360
team do you want to speak

64
00:05:11,360 --> 00:05:14,160
yeah um okay that's good uh yeah now i

65
00:05:14,160 --> 00:05:15,759
can take notes if somebody tells me

66
00:05:15,759 --> 00:05:18,560
where to take notes

67
00:05:19,440 --> 00:05:23,039
i was looking for that link right now

68
00:05:23,039 --> 00:05:24,720
do you have a note-taking tool which

69
00:05:24,720 --> 00:05:26,400
should be the top

70
00:05:26,400 --> 00:05:29,520
the fourth okay yeah yeah um

71
00:05:29,520 --> 00:05:32,320
so if i open that in another window i'll

72
00:05:32,320 --> 00:05:33,680
drop it in the chat right

73
00:05:33,680 --> 00:05:36,320
oh that's the wrong thing okay i have

74
00:05:36,320 --> 00:05:37,039
something

75
00:05:37,039 --> 00:05:40,160
cody mid yep that sounds great okay

76
00:05:40,160 --> 00:05:43,840
cool all right attempt that yeah

77
00:05:43,840 --> 00:05:47,680
fantastic thank you very much mike

78
00:05:47,680 --> 00:05:53,520
you wanted you to say something

79
00:05:53,520 --> 00:05:56,560
i like um there we go

80
00:05:56,560 --> 00:05:59,759
oh yeah i can act as a jet prescribe

81
00:05:59,759 --> 00:06:03,520
fantastic so we have about two two slots

82
00:06:03,520 --> 00:06:06,720
filled and we can proceed

83
00:06:06,720 --> 00:06:09,039
uh there will be no blue shield mitico

84
00:06:09,039 --> 00:06:09,759
is uh

85
00:06:09,759 --> 00:06:11,759
taking care of that automatically for us

86
00:06:11,759 --> 00:06:13,120
thank you

87
00:06:13,120 --> 00:06:16,639
um and um i will let shan start maybe on

88
00:06:16,639 --> 00:06:18,080
the on the status

89
00:06:18,080 --> 00:06:20,639
well what's in on autoscope and the

90
00:06:20,639 --> 00:06:21,120
action

91
00:06:21,120 --> 00:06:23,680
taken from the the chartered discussion

92
00:06:23,680 --> 00:06:26,080
itself

93
00:06:27,199 --> 00:06:29,120
yeah hi you'll note that the insert

94
00:06:29,120 --> 00:06:30,880
graphic here i wasn't witty enough when

95
00:06:30,880 --> 00:06:32,319
i was making these slides account with a

96
00:06:32,319 --> 00:06:32,800
cute

97
00:06:32,800 --> 00:06:34,720
wish graphic to put on the right so next

98
00:06:34,720 --> 00:06:36,240
time we'll get on that

99
00:06:36,240 --> 00:06:38,080
um more importantly what's in and out of

100
00:06:38,080 --> 00:06:39,759
scope um

101
00:06:39,759 --> 00:06:42,319
basically this is a kind of a narrow

102
00:06:42,319 --> 00:06:44,000
narrowly scoped working group and

103
00:06:44,000 --> 00:06:45,600
there's only a couple of things that we

104
00:06:45,600 --> 00:06:47,440
are chartered to do

105
00:06:47,440 --> 00:06:49,919
something that's simple extensible https

106
00:06:49,919 --> 00:06:50,720
based

107
00:06:50,720 --> 00:06:53,280
um and it's a signaling protocol but the

108
00:06:53,280 --> 00:06:56,639
plan is to establish a one-way webrtc

109
00:06:56,639 --> 00:06:58,880
session between broadcasting tools and

110
00:06:58,880 --> 00:07:00,960
real-time media broadcast network

111
00:07:00,960 --> 00:07:02,400
and that's about it we're going to try

112
00:07:02,400 --> 00:07:04,560
to stay very tightly focused

113
00:07:04,560 --> 00:07:07,120
we we're not trying to you know change

114
00:07:07,120 --> 00:07:07,840
sdp

115
00:07:07,840 --> 00:07:09,919
we're not trying to you know change

116
00:07:09,919 --> 00:07:11,759
https or any of that other stuff we're

117
00:07:11,759 --> 00:07:13,440
trying to stay on point with this

118
00:07:13,440 --> 00:07:15,520
so when we have um anything that we're

119
00:07:15,520 --> 00:07:16,960
going to adopt or work on we're going to

120
00:07:16,960 --> 00:07:18,160
try to make sure that we stay within

121
00:07:18,160 --> 00:07:18,880
scope

122
00:07:18,880 --> 00:07:20,720
i know that some of you want to make

123
00:07:20,720 --> 00:07:22,240
sure that stays the case so i'm hoping

124
00:07:22,240 --> 00:07:23,280
that you will help

125
00:07:23,280 --> 00:07:24,720
you'll help us do that and that that's

126
00:07:24,720 --> 00:07:27,199
kind of the simple plan

127
00:07:27,199 --> 00:07:31,360
and hopefully we can stick to it

128
00:07:31,360 --> 00:07:34,960
um and then from dispatch the basic idea

129
00:07:34,960 --> 00:07:36,400
was that uh

130
00:07:36,400 --> 00:07:39,120
i think this is right yeah then we need

131
00:07:39,120 --> 00:07:40,560
um some extensibility

132
00:07:40,560 --> 00:07:42,000
is something that jonathan lennox has

133
00:07:42,000 --> 00:07:44,400
highlighted during the work in progress

134
00:07:44,400 --> 00:07:48,000
discussions at dispatch 109

135
00:07:50,479 --> 00:07:54,960
and then we can hand it over to sergio

136
00:07:55,840 --> 00:07:56,879
unless he would like to add anything

137
00:07:56,879 --> 00:07:58,960
alex um

138
00:07:58,960 --> 00:08:00,479
no no i think i think that's pretty

139
00:08:00,479 --> 00:08:02,560
clear maybe i want to add for the people

140
00:08:02,560 --> 00:08:04,319
that are not familiar with the etf that

141
00:08:04,319 --> 00:08:05,919
if there are some stuff that would like

142
00:08:05,919 --> 00:08:06,720
to do

143
00:08:06,720 --> 00:08:09,520
that is not in the skop um there is the

144
00:08:09,520 --> 00:08:12,000
rtc web group that is still open

145
00:08:12,000 --> 00:08:13,919
and there is the dispatch group that is

146
00:08:13,919 --> 00:08:15,440
here to welcome any new

147
00:08:15,440 --> 00:08:19,599
request or for for work like this so

148
00:08:19,599 --> 00:08:20,960
it's not because it's not happening in

149
00:08:20,960 --> 00:08:22,479
this group that it cannot happen but

150
00:08:22,479 --> 00:08:23,599
we're going to

151
00:08:23,599 --> 00:08:26,560
help people in that happen to go in the

152
00:08:26,560 --> 00:08:30,080
right direction and in the right group

153
00:08:31,120 --> 00:08:34,399
without further ado sergio

154
00:08:34,399 --> 00:08:37,200
yep and what i was going to pres what i

155
00:08:37,200 --> 00:08:39,120
am going to present is just the same

156
00:08:39,120 --> 00:08:40,159
slides that i

157
00:08:40,159 --> 00:08:42,399
presented in in this patch when we

158
00:08:42,399 --> 00:08:44,000
decided to create the

159
00:08:44,000 --> 00:08:46,240
or the working group so it is just a

160
00:08:46,240 --> 00:08:48,720
reminder of what was proposed

161
00:08:48,720 --> 00:08:51,279
and also just as a starting point for

162
00:08:51,279 --> 00:08:52,839
the discussion so please not

163
00:08:52,839 --> 00:08:55,839
necessarily

164
00:08:59,760 --> 00:09:02,720
yeah we have a problem right now when

165
00:09:02,720 --> 00:09:04,320
using webrtc for

166
00:09:04,320 --> 00:09:08,240
for real-time streaming and that uh

167
00:09:08,240 --> 00:09:11,279
currently there are

168
00:09:11,279 --> 00:09:14,560
modern signal improv products

169
00:09:14,560 --> 00:09:16,000
i think that it is we acknowledge that

170
00:09:16,000 --> 00:09:18,399
webrtc is the best media transfer for

171
00:09:18,399 --> 00:09:20,720
real-time streaming i mean it's the the

172
00:09:20,720 --> 00:09:21,760
best

173
00:09:21,760 --> 00:09:25,120
the best one for

174
00:09:25,120 --> 00:09:28,560
low end to end and delay

175
00:09:28,560 --> 00:09:31,839
so while there are other protocols that

176
00:09:31,839 --> 00:09:33,200
are

177
00:09:33,200 --> 00:09:36,720
suitable for or are used today for ngs

178
00:09:36,720 --> 00:09:40,000
they cannot be used for webrt

179
00:09:40,000 --> 00:09:43,360
with webrtc and and

180
00:09:43,360 --> 00:09:46,320
that's cause that you either have to add

181
00:09:46,320 --> 00:09:47,680
protocol translation that

182
00:09:47,680 --> 00:09:50,640
add the delays or you have to do trash

183
00:09:50,640 --> 00:09:52,320
coding because you don't share

184
00:09:52,320 --> 00:09:54,320
common codes for example in rtmp you

185
00:09:54,320 --> 00:09:55,440
will have to do

186
00:09:55,440 --> 00:09:58,560
transcoding between aac and opus

187
00:09:58,560 --> 00:10:01,600
and also you lose

188
00:10:01,600 --> 00:10:04,320
most of the features from webrtc and

189
00:10:04,320 --> 00:10:05,360
when

190
00:10:05,360 --> 00:10:08,320
and also one thing that most of us want

191
00:10:08,320 --> 00:10:09,920
to have is that it is also

192
00:10:09,920 --> 00:10:11,360
a working on browser so currently the

193
00:10:11,360 --> 00:10:13,680
only one and there is no

194
00:10:13,680 --> 00:10:18,720
standard protocol that allows us to

195
00:10:18,720 --> 00:10:21,760
to do that today the only

196
00:10:21,760 --> 00:10:25,200
closer things could be xmbp ships or

197
00:10:25,200 --> 00:10:29,200
dsp but while

198
00:10:29,200 --> 00:10:31,519
they are not really shoot for this use

199
00:10:31,519 --> 00:10:32,640
case

200
00:10:32,640 --> 00:10:35,839
so next slide please

201
00:10:36,560 --> 00:10:41,439
so the requirements is what yeah

202
00:10:42,959 --> 00:10:44,240
can i ask a question just about the

203
00:10:44,240 --> 00:10:47,279
previous slide yep

204
00:10:47,279 --> 00:10:51,360
so um every one of the large shipping

205
00:10:51,360 --> 00:10:53,360
systems i've seen

206
00:10:53,360 --> 00:10:56,800
delivers video at very different bit

207
00:10:56,800 --> 00:10:59,200
rates to very different users

208
00:10:59,200 --> 00:11:01,519
and because of that they end up

209
00:11:01,519 --> 00:11:02,480
transcoding

210
00:11:02,480 --> 00:11:04,959
um extensively on the server saw on the

211
00:11:04,959 --> 00:11:06,640
media distribution side before they

212
00:11:06,640 --> 00:11:09,839
distribute so

213
00:11:09,839 --> 00:11:11,200
are you going to try and are going to

214
00:11:11,200 --> 00:11:12,560
try and support that or avoid that like

215
00:11:12,560 --> 00:11:14,320
i mean the two options are

216
00:11:14,320 --> 00:11:17,040
are um if you're trying to avoid that

217
00:11:17,040 --> 00:11:18,560
which eye cream has latency problems

218
00:11:18,560 --> 00:11:19,760
like you pointed out

219
00:11:19,760 --> 00:11:21,200
um then it means the client needs to

220
00:11:21,200 --> 00:11:22,640
deliver all the bandwidths which is

221
00:11:22,640 --> 00:11:25,040
often very hard to do on the uplink

222
00:11:25,040 --> 00:11:27,600
um and the model for these large teams

223
00:11:27,600 --> 00:11:28,480
just they all tr

224
00:11:28,480 --> 00:11:29,920
every single one of them i'm aware of

225
00:11:29,920 --> 00:11:31,760
today transcodes um

226
00:11:31,760 --> 00:11:33,839
so i i'm asked i'm trying to get whether

227
00:11:33,839 --> 00:11:35,200
our requirement is to be able to deliver

228
00:11:35,200 --> 00:11:37,519
multiple bandwidths up and not transcode

229
00:11:37,519 --> 00:11:39,120
or whether we're going to assume

230
00:11:39,120 --> 00:11:40,480
transcoding will be happening i think

231
00:11:40,480 --> 00:11:42,000
that that's a pretty big architectural

232
00:11:42,000 --> 00:11:42,560
discussion

233
00:11:42,560 --> 00:11:47,680
like decision point of what we do so um

234
00:11:47,680 --> 00:11:48,959
maybe we don't need to resolve it right

235
00:11:48,959 --> 00:11:50,480
now or anything but i think that that

236
00:11:50,480 --> 00:11:52,000
requirement might be a little bit more

237
00:11:52,000 --> 00:11:53,120
complicated i mean you have thoughts on

238
00:11:53,120 --> 00:11:54,639
that

239
00:11:54,639 --> 00:11:58,399
i think that my thoughts say is that

240
00:11:58,399 --> 00:12:01,519
and we are not going to forbid to

241
00:12:01,519 --> 00:12:03,680
do transcoding on the server side i mean

242
00:12:03,680 --> 00:12:05,279
because it's something that you can

243
00:12:05,279 --> 00:12:06,399
always do

244
00:12:06,399 --> 00:12:09,040
but what we have to to allow is to

245
00:12:09,040 --> 00:12:10,800
support to avoid

246
00:12:10,800 --> 00:12:14,000
by using similar gas or sbc

247
00:12:14,000 --> 00:12:17,040
so as both are supported in webrtc

248
00:12:17,040 --> 00:12:19,760
i think that we just can use simulcast

249
00:12:19,760 --> 00:12:21,279
and sbc to support that

250
00:12:21,279 --> 00:12:23,920
for example we are right now using it in

251
00:12:23,920 --> 00:12:26,880
in our cdn and without any issue

252
00:12:26,880 --> 00:12:30,000
so but i'm not sure if it is a

253
00:12:30,000 --> 00:12:31,600
what would that i mean that makes sense

254
00:12:31,600 --> 00:12:33,680
it's very interesting i just think

255
00:12:33,680 --> 00:12:36,399
maybe we should nail to make that

256
00:12:36,399 --> 00:12:37,200
requirement

257
00:12:37,200 --> 00:12:40,399
there's that you know then with uh with

258
00:12:40,399 --> 00:12:41,440
my individual

259
00:12:41,440 --> 00:12:44,560
hat on um i think the scope is for

260
00:12:44,560 --> 00:12:46,959
signaling protocol i don't think we

261
00:12:46,959 --> 00:12:48,320
assume anything

262
00:12:48,320 --> 00:12:50,320
on what happened with the media whether

263
00:12:50,320 --> 00:12:51,440
the trans the

264
00:12:51,440 --> 00:12:53,839
it's similar castle svc at the source or

265
00:12:53,839 --> 00:12:55,360
transcoding letter

266
00:12:55,360 --> 00:12:58,000
i think the telescope you know even if

267
00:12:58,000 --> 00:12:58,720
it's listed

268
00:12:58,720 --> 00:13:01,040
here as one of the reason why you want a

269
00:13:01,040 --> 00:13:01,760
signaling

270
00:13:01,760 --> 00:13:03,760
so you don't have two different protocol

271
00:13:03,760 --> 00:13:06,000
that would force you into transcoding

272
00:13:06,000 --> 00:13:07,519
the scope of the document is the

273
00:13:07,519 --> 00:13:09,839
signaling protocol we don't speak about

274
00:13:09,839 --> 00:13:11,920
media so much

275
00:13:11,920 --> 00:13:13,519
sure but you just said the requirement

276
00:13:13,519 --> 00:13:15,360
is the signaling support simulcast and

277
00:13:15,360 --> 00:13:17,600
multicast or simulcast and svc

278
00:13:17,600 --> 00:13:19,360
to my knowledge there is not yet

279
00:13:19,360 --> 00:13:20,880
actually an ietf

280
00:13:20,880 --> 00:13:22,320
specification for that that fully does

281
00:13:22,320 --> 00:13:23,519
that i agree i think that's the right

282
00:13:23,519 --> 00:13:24,399
requirement

283
00:13:24,399 --> 00:13:26,480
i'm just saying you know like that this

284
00:13:26,480 --> 00:13:28,720
that there's a very specific requirement

285
00:13:28,720 --> 00:13:29,920
you have in mind and i'm not sure

286
00:13:29,920 --> 00:13:31,279
everyone has the same requirement in

287
00:13:31,279 --> 00:13:32,720
mind

288
00:13:32,720 --> 00:13:34,240
you might want to you might want to be

289
00:13:34,240 --> 00:13:36,720
clear that your requirement is for

290
00:13:36,720 --> 00:13:39,120
uh signaling that you know you're that

291
00:13:39,120 --> 00:13:41,279
this has to support simulcast and

292
00:13:41,279 --> 00:13:44,079
scalable codecs

293
00:13:47,199 --> 00:13:49,760
but simultaneous vc is already supported

294
00:13:49,760 --> 00:13:52,160
both in webrtc and signaling with scp

295
00:13:52,160 --> 00:13:55,600
or ferrancia uh-huh and which itf spec

296
00:13:55,600 --> 00:13:57,760
do they both implement

297
00:13:57,760 --> 00:14:01,680
i don't know but exactly my statement

298
00:14:01,680 --> 00:14:02,959
wasn't that people don't do this

299
00:14:02,959 --> 00:14:04,079
thousands of different people do this

300
00:14:04,079 --> 00:14:04,800
different ways

301
00:14:04,800 --> 00:14:06,720
well my statement was is itf does not

302
00:14:06,720 --> 00:14:08,160
have an agreement on that yet

303
00:14:08,160 --> 00:14:11,839
so just keep that in mind

304
00:14:14,839 --> 00:14:17,279
okay

305
00:14:17,279 --> 00:14:20,320
so necessary i think harold jumped in

306
00:14:20,320 --> 00:14:21,279
they kept you yeah

307
00:14:21,279 --> 00:14:23,199
yeah i wrote there's a question harold

308
00:14:23,199 --> 00:14:24,800
uh if it's related to

309
00:14:24,800 --> 00:14:26,560
to the threat kevin started do you want

310
00:14:26,560 --> 00:14:28,240
to go ahead

311
00:14:28,240 --> 00:14:30,560
i just wanted to point out that we just

312
00:14:30,560 --> 00:14:33,519
published a bunch of rscs that

313
00:14:33,519 --> 00:14:35,680
lay out simulcast in some details for

314
00:14:35,680 --> 00:14:36,880
svc

315
00:14:36,880 --> 00:14:39,279
not so much but for simulcast we got it

316
00:14:39,279 --> 00:14:41,600
covered

317
00:14:42,639 --> 00:14:45,440
i think uh i think we can continue this

318
00:14:45,440 --> 00:14:47,040
discussion on the mailing list but i

319
00:14:47,040 --> 00:14:48,800
think callan has a point

320
00:14:48,800 --> 00:14:50,399
um and i think there's a lot of things

321
00:14:50,399 --> 00:14:53,120
that came out for from cluster 238

322
00:14:53,120 --> 00:14:55,040
not very long ago it may be a good time

323
00:14:55,040 --> 00:14:56,480
to to clarify

324
00:14:56,480 --> 00:14:58,240
i think it's a good clarification point

325
00:14:58,240 --> 00:15:00,560
i will take it as an action item to

326
00:15:00,560 --> 00:15:04,319
relay it on the list after the meeting

327
00:15:05,519 --> 00:15:12,079
would that would that satisfy you colin

328
00:15:12,079 --> 00:15:13,839
oh oh for sure yeah yeah no look i don't

329
00:15:13,839 --> 00:15:15,440
i'm not i'm just

330
00:15:15,440 --> 00:15:19,519
uh my my the only point i i sort of

331
00:15:19,519 --> 00:15:21,199
stopped us on the requirements is

332
00:15:21,199 --> 00:15:22,800
i think we actually have agreement on

333
00:15:22,800 --> 00:15:24,399
what the architecture is in much more

334
00:15:24,399 --> 00:15:26,160
detail than these requirements are that

335
00:15:26,160 --> 00:15:27,600
yeah you know like if we all agree on

336
00:15:27,600 --> 00:15:28,880
this point that like we're going to

337
00:15:28,880 --> 00:15:30,399
avoid transcoding and we're going to do

338
00:15:30,399 --> 00:15:32,000
that by using simulcast or scalable

339
00:15:32,000 --> 00:15:33,360
video codecs

340
00:15:33,360 --> 00:15:34,800
that's a huge move forward in nailing

341
00:15:34,800 --> 00:15:36,000
down what we need to do in this working

342
00:15:36,000 --> 00:15:37,600
group and really narrows the solution

343
00:15:37,600 --> 00:15:39,040
space and i suspect it's

344
00:15:39,040 --> 00:15:42,160
clearly what you're thinking um without

345
00:15:42,160 --> 00:15:44,720
thinking um you know i'm trying to like

346
00:15:44,720 --> 00:15:46,240
write down requirements that help narrow

347
00:15:46,240 --> 00:15:47,600
down the solution space we need to

348
00:15:47,600 --> 00:15:49,040
explore so we can get to a solution

349
00:15:49,040 --> 00:15:51,360
faster

350
00:15:52,839 --> 00:15:55,040
right

351
00:15:55,040 --> 00:15:56,880
i'm sorry harold you're still in in the

352
00:15:56,880 --> 00:16:00,160
list and then we have them

353
00:16:01,519 --> 00:16:03,440
so harold is not in the list and now we

354
00:16:03,440 --> 00:16:09,600
have adam

355
00:16:09,600 --> 00:16:11,680
you should be able to go ahead and grab

356
00:16:11,680 --> 00:16:14,079
the mic

357
00:16:17,279 --> 00:16:23,839
we can see you but

358
00:16:24,320 --> 00:16:27,600
here you go thank you um i don't want to

359
00:16:27,600 --> 00:16:28,160
over

360
00:16:28,160 --> 00:16:31,040
over rotate on this particular issue um

361
00:16:31,040 --> 00:16:31,519
i

362
00:16:31,519 --> 00:16:33,839
it's we almost sounded like we landed on

363
00:16:33,839 --> 00:16:36,079
a spot where like simulcast and svc

364
00:16:36,079 --> 00:16:39,519
was mandatory and ingest and i i

365
00:16:39,519 --> 00:16:40,880
don't think that's necessarily what we

366
00:16:40,880 --> 00:16:42,560
want in this case

367
00:16:42,560 --> 00:16:44,160
um although i do agree this is probably

368
00:16:44,160 --> 00:16:45,839
something that we need to nail down

369
00:16:45,839 --> 00:16:47,519
in this back so taking it on as a

370
00:16:47,519 --> 00:16:50,160
requirement to like clarify this

371
00:16:50,160 --> 00:16:52,079
is good but i i don't want to come out

372
00:16:52,079 --> 00:16:53,519
of this thing that we've like chosen a

373
00:16:53,519 --> 00:16:56,320
specific direction

374
00:16:57,360 --> 00:16:59,920
noted for clarification on the mailing

375
00:16:59,920 --> 00:17:02,160
list

376
00:17:02,480 --> 00:17:06,400
okay so this was the the original

377
00:17:06,400 --> 00:17:10,000
requirements because uh and some of them

378
00:17:10,000 --> 00:17:11,839
has been already challenged

379
00:17:11,839 --> 00:17:15,520
so and change it so and that the first

380
00:17:15,520 --> 00:17:16,400
one that

381
00:17:16,400 --> 00:17:18,799
it has to be easy to use as for example

382
00:17:18,799 --> 00:17:20,959
as ccs we have

383
00:17:20,959 --> 00:17:23,839
as our tmp is able to use it with just a

384
00:17:23,839 --> 00:17:24,160
new

385
00:17:24,160 --> 00:17:27,839
uh your url and

386
00:17:27,839 --> 00:17:29,360
we only need to support unity

387
00:17:29,360 --> 00:17:32,160
directional flows it was also required

388
00:17:32,160 --> 00:17:35,039
asked asked why what was the use case

389
00:17:35,039 --> 00:17:35,760
that the usc

390
00:17:35,760 --> 00:17:39,200
is as an encoder publishing to a server

391
00:17:39,200 --> 00:17:40,720
so one of the original assumption is

392
00:17:40,720 --> 00:17:42,559
that the server was assumed to be

393
00:17:42,559 --> 00:17:44,080
publicly retractable

394
00:17:44,080 --> 00:17:47,120
for the encoder or the broadcaster but

395
00:17:47,120 --> 00:17:50,640
adam has and another people

396
00:17:50,640 --> 00:17:52,480
thinks that it is would be also good to

397
00:17:52,480 --> 00:17:54,720
to support having the media service

398
00:17:54,720 --> 00:17:55,679
behind and not

399
00:17:55,679 --> 00:17:58,320
environments without and by supporting

400
00:17:58,320 --> 00:17:59,600
the

401
00:17:59,600 --> 00:18:02,160
i say candidates and it should be

402
00:18:02,160 --> 00:18:04,080
something easy to support so

403
00:18:04,080 --> 00:18:06,640
i just leave it here but it will

404
00:18:06,640 --> 00:18:07,600
probably change

405
00:18:07,600 --> 00:18:10,880
and there is no really needs for support

406
00:18:10,880 --> 00:18:13,600
for renegotiation but also again

407
00:18:13,600 --> 00:18:16,080
people think that maybe ice restarts

408
00:18:16,080 --> 00:18:16,799
should be

409
00:18:16,799 --> 00:18:20,160
supported it has to be compatible with

410
00:18:20,160 --> 00:18:22,320
webrtc and rtc web aspects so

411
00:18:22,320 --> 00:18:24,400
for example with regards to simulcas on

412
00:18:24,400 --> 00:18:26,240
sbc we have to

413
00:18:26,240 --> 00:18:27,679
implement what they support and we

414
00:18:27,679 --> 00:18:29,360
cannot create new

415
00:18:29,360 --> 00:18:31,679
new specs for that must support

416
00:18:31,679 --> 00:18:32,640
authentication

417
00:18:32,640 --> 00:18:35,679
and should be both be

418
00:18:35,679 --> 00:18:38,000
able to implement it in browsers and in

419
00:18:38,000 --> 00:18:39,840
native encoders

420
00:18:39,840 --> 00:18:43,120
and the idea is to lower the the

421
00:18:43,120 --> 00:18:44,880
the requirement and the implementation

422
00:18:44,880 --> 00:18:46,799
costs for supported embossing however

423
00:18:46,799 --> 00:18:48,880
encoders and requested

424
00:18:48,880 --> 00:18:51,400
by supporting the less amount of

425
00:18:51,400 --> 00:18:53,120
generalities that

426
00:18:53,120 --> 00:18:56,559
would make it hard to implement and

427
00:18:56,559 --> 00:18:59,120
interoperate because the idea is that

428
00:18:59,120 --> 00:19:02,240
um the there is a broad

429
00:19:02,240 --> 00:19:04,380
the range of encoders and um

430
00:19:04,380 --> 00:19:06,160
[Music]

431
00:19:06,160 --> 00:19:07,440
both hardware and software that are

432
00:19:07,440 --> 00:19:10,080
available so we will have to to limit

433
00:19:10,080 --> 00:19:11,600
the

434
00:19:11,600 --> 00:19:14,080
the all the intervality tests that we

435
00:19:14,080 --> 00:19:15,600
have to do to make it work

436
00:19:15,600 --> 00:19:17,360
to between all the encoders and all the

437
00:19:17,360 --> 00:19:19,760
servers and the last one is that

438
00:19:19,760 --> 00:19:21,919
it has to support load balances and

439
00:19:21,919 --> 00:19:24,160
redirection that it is needed to support

440
00:19:24,160 --> 00:19:28,240
or to reach a large stage in incidents

441
00:19:28,240 --> 00:19:31,679
so next slide piece

442
00:19:33,280 --> 00:19:39,840
there is someone in the queue

443
00:19:44,960 --> 00:19:48,160
we can hear you now

444
00:19:48,160 --> 00:19:50,559
it's coming yep okay so i would just

445
00:19:50,559 --> 00:19:51,440
like to mention

446
00:19:51,440 --> 00:19:54,960
about ice restarts so i have some

447
00:19:54,960 --> 00:19:56,080
experience with

448
00:19:56,080 --> 00:19:59,200
university networks in europe and

449
00:19:59,200 --> 00:20:01,600
our experience with university network

450
00:20:01,600 --> 00:20:03,600
was that ice restarts are absolutely

451
00:20:03,600 --> 00:20:05,360
necessary because the maps

452
00:20:05,360 --> 00:20:07,200
change your ports quite to change your

453
00:20:07,200 --> 00:20:09,440
ip addresses or your parts

454
00:20:09,440 --> 00:20:12,080
so i really think that ice restarts

455
00:20:12,080 --> 00:20:15,520
should be one of the requirements

456
00:20:15,520 --> 00:20:17,360
um i i think there is a discussion a

457
00:20:17,360 --> 00:20:19,679
little bit later on on the ice part as

458
00:20:19,679 --> 00:20:20,720
well by adam

459
00:20:20,720 --> 00:20:22,799
i'm going i'm not in your point julius

460
00:20:22,799 --> 00:20:25,120
and if there is no discussion today

461
00:20:25,120 --> 00:20:26,480
we're going to bring it to the mailing

462
00:20:26,480 --> 00:20:27,520
list anyway

463
00:20:27,520 --> 00:20:28,960
to make sure that this point is

464
00:20:28,960 --> 00:20:31,039
discussed by everybody and give it

465
00:20:31,039 --> 00:20:34,960
given time

466
00:20:34,960 --> 00:20:38,080
okay so the idea of the original idea

467
00:20:38,080 --> 00:20:38,799
was to

468
00:20:38,799 --> 00:20:43,200
just make an a simple http post

469
00:20:43,200 --> 00:20:47,200
url and that it is

470
00:20:47,280 --> 00:20:50,159
that it is a the url of the web endpoint

471
00:20:50,159 --> 00:20:50,880
and to do

472
00:20:50,880 --> 00:20:54,240
an sdp offer answer in the post request

473
00:20:54,240 --> 00:20:57,760
that will allow us to set up i say

474
00:20:57,760 --> 00:21:00,960
and then the data list and rtp

475
00:21:00,960 --> 00:21:05,200
so originally we i was proposing that a

476
00:21:05,200 --> 00:21:07,440
ice contest fresnel was used for the

477
00:21:07,440 --> 00:21:09,120
disconnection

478
00:21:09,120 --> 00:21:11,520
and also details are down to to to

479
00:21:11,520 --> 00:21:12,480
signal

480
00:21:12,480 --> 00:21:17,840
the normal disconnection from the

481
00:21:23,919 --> 00:21:25,600
most people and other people think that

482
00:21:25,600 --> 00:21:27,760
it would be good to have

483
00:21:27,760 --> 00:21:30,960
more um more commands to be able to

484
00:21:30,960 --> 00:21:31,600
terminate

485
00:21:31,600 --> 00:21:34,320
the session explicitly because a dtls

486
00:21:34,320 --> 00:21:34,880
can be

487
00:21:34,880 --> 00:21:38,159
lost on and not to have to wait for the

488
00:21:38,159 --> 00:21:39,120
ice disconnect

489
00:21:39,120 --> 00:21:41,280
this time out before being able to

490
00:21:41,280 --> 00:21:43,520
terminate the session

491
00:21:43,520 --> 00:21:45,600
and the after his authentication onto

492
00:21:45,600 --> 00:21:47,600
the decision is done by via

493
00:21:47,600 --> 00:21:50,640
a standard http header request

494
00:21:50,640 --> 00:21:54,320
both then and i was proposing to use the

495
00:21:54,320 --> 00:21:55,039
authentic

496
00:21:55,039 --> 00:21:58,159
authorization header but in

497
00:21:58,159 --> 00:22:00,000
some people think that it would be also

498
00:22:00,000 --> 00:22:01,360
good to to have

499
00:22:01,360 --> 00:22:03,280
digest authentication via username and

500
00:22:03,280 --> 00:22:04,640
password but as long

501
00:22:04,640 --> 00:22:08,320
as it is supported by http i think that

502
00:22:08,320 --> 00:22:12,400
we can support both and we

503
00:22:12,400 --> 00:22:14,720
also this will also support redirections

504
00:22:14,720 --> 00:22:16,080
and load balancing by

505
00:22:16,080 --> 00:22:19,520
just the returning and the different

506
00:22:19,520 --> 00:22:21,440
redirection response from there with

507
00:22:21,440 --> 00:22:23,280
pinpoint 8.2

508
00:22:23,280 --> 00:22:27,200
and to you could have a url for a

509
00:22:27,200 --> 00:22:30,960
a for an entry point and this would

510
00:22:30,960 --> 00:22:33,600
ready i will be able to redirect you to

511
00:22:33,600 --> 00:22:35,520
to the final we paint point

512
00:22:35,520 --> 00:22:40,799
yes adam the

513
00:22:40,799 --> 00:22:44,559
discussion around sorry

514
00:22:44,559 --> 00:22:46,720
go i just want to make sure the

515
00:22:46,720 --> 00:22:48,240
discussion around

516
00:22:48,240 --> 00:22:49,760
the different authentication methods i

517
00:22:49,760 --> 00:22:50,960
think i may have been the one who

518
00:22:50,960 --> 00:22:52,480
initiated that

519
00:22:52,480 --> 00:22:54,000
and after looking at it a little bit

520
00:22:54,000 --> 00:22:55,919
more i don't think we have that

521
00:22:55,919 --> 00:22:57,039
requirement anymore

522
00:22:57,039 --> 00:22:59,039
so i just wanted to throw this out there

523
00:22:59,039 --> 00:23:00,400
to see if anyone else

524
00:23:00,400 --> 00:23:03,760
um had thoughts on that if it was

525
00:23:03,760 --> 00:23:05,600
just us then i think we can probably

526
00:23:05,600 --> 00:23:07,440
retract that as a requirement

527
00:23:07,440 --> 00:23:09,200
so adam do you have that in your slide

528
00:23:09,200 --> 00:23:12,559
for discussion later or not

529
00:23:14,720 --> 00:23:16,799
no i didn't address this directly i just

530
00:23:16,799 --> 00:23:18,080
i when i put my

531
00:23:18,080 --> 00:23:19,919
my list of things that i thought we

532
00:23:19,919 --> 00:23:21,120
needed to

533
00:23:21,120 --> 00:23:24,880
to add to the spec i just left this out

534
00:23:24,880 --> 00:23:26,880
okay so we have 40 minutes at the end of

535
00:23:26,880 --> 00:23:29,039
the agenda that is not taken by anybody

536
00:23:29,039 --> 00:23:30,720
i know authentication is something that

537
00:23:30,720 --> 00:23:32,400
a lot of people want to speak about what

538
00:23:32,400 --> 00:23:33,840
about i

539
00:23:33,840 --> 00:23:36,720
we keep that for specific discussion

540
00:23:36,720 --> 00:23:37,840
after your slice

541
00:23:37,840 --> 00:23:40,720
and lorenzo slide does that work that

542
00:23:40,720 --> 00:23:43,039
sounds good thanks

543
00:23:43,039 --> 00:23:45,200
canon i see you taking a slot in in the

544
00:23:45,200 --> 00:23:46,720
queue

545
00:23:46,720 --> 00:23:48,480
that if it's about authentication do you

546
00:23:48,480 --> 00:23:50,559
want to delay it until

547
00:23:50,559 --> 00:23:53,200
a little bit later in the meeting uh no

548
00:23:53,200 --> 00:23:55,360
it's a question about ice do we i

549
00:23:55,360 --> 00:23:56,799
do we have a good space later in the

550
00:23:56,799 --> 00:23:59,120
meeting to discuss just our overall view

551
00:23:59,120 --> 00:24:00,960
like like ice and requirements when we

552
00:24:00,960 --> 00:24:02,400
might do better or worse here like i i'm

553
00:24:02,400 --> 00:24:03,919
perfectly happy just got to the better

554
00:24:03,919 --> 00:24:06,240
we have we have a full 40 minutes at the

555
00:24:06,240 --> 00:24:07,840
end for things that are not in

556
00:24:07,840 --> 00:24:10,720
in the agenda already so if you think

557
00:24:10,720 --> 00:24:12,159
it's going to be along this

558
00:24:12,159 --> 00:24:15,520
discussion like whether we

559
00:24:15,520 --> 00:24:17,520
why we really think we need ice and what

560
00:24:17,520 --> 00:24:19,360
our alternatives are for for that

561
00:24:19,360 --> 00:24:21,600
that area because or or what what are

562
00:24:21,600 --> 00:24:23,039
the restrictions on how we'll use ice

563
00:24:23,039 --> 00:24:24,320
something in that space because right

564
00:24:24,320 --> 00:24:25,760
now ice is one of the largest failure

565
00:24:25,760 --> 00:24:26,960
points of webrtc

566
00:24:26,960 --> 00:24:28,159
and i think that we could make it much

567
00:24:28,159 --> 00:24:30,000
better at the second point

568
00:24:30,000 --> 00:24:32,240
well i can already respond at the chair

569
00:24:32,240 --> 00:24:34,240
right we want to be back what compatible

570
00:24:34,240 --> 00:24:35,919
with we're about to see and webrtc

571
00:24:35,919 --> 00:24:38,320
mandate ice to a certain extent so we

572
00:24:38,320 --> 00:24:39,919
won't be able to completely

573
00:24:39,919 --> 00:24:41,919
remove it in a way that will not be

574
00:24:41,919 --> 00:24:44,080
compliant but the discussion

575
00:24:44,080 --> 00:24:46,480
between do we support ice light or full

576
00:24:46,480 --> 00:24:48,400
eyes or trickle eyes and things like

577
00:24:48,400 --> 00:24:49,120
that

578
00:24:49,120 --> 00:24:51,520
is in the scope so what i propose is i

579
00:24:51,520 --> 00:24:53,360
put a second point after authentication

580
00:24:53,360 --> 00:24:54,640
in that 40 minutes

581
00:24:54,640 --> 00:24:56,880
uh period at the end of the of the

582
00:24:56,880 --> 00:24:58,400
meeting

583
00:24:58,400 --> 00:25:02,400
for a longer decision okay

584
00:25:02,400 --> 00:25:06,080
all right look just a minute

585
00:25:06,080 --> 00:25:07,600
you just said something is wrong too you

586
00:25:07,600 --> 00:25:08,880
said we have to be fully backwards

587
00:25:08,880 --> 00:25:10,640
compatible with rtc that is not in our

588
00:25:10,640 --> 00:25:11,919
charter and it's not true

589
00:25:11,919 --> 00:25:13,600
i mean i don't i agree with you

590
00:25:13,600 --> 00:25:14,799
obviously we do need to do things but

591
00:25:14,799 --> 00:25:16,320
what you just said is not actually

592
00:25:16,320 --> 00:25:20,880
true right uh i i believe it is i can

593
00:25:20,880 --> 00:25:23,039
see let's just be really clear like

594
00:25:23,039 --> 00:25:24,400
full-blown srpd

595
00:25:24,400 --> 00:25:25,679
and simulcast which you've already

596
00:25:25,679 --> 00:25:27,279
required this morning is not part of

597
00:25:27,279 --> 00:25:29,360
webrtc 1.0 fully and you're probably not

598
00:25:29,360 --> 00:25:30,799
going to do it exactly that way right

599
00:25:30,799 --> 00:25:31,120
like

600
00:25:31,120 --> 00:25:34,559
i just i don't i don't i'll go re-read

601
00:25:34,559 --> 00:25:35,600
the charter but i don't think that was

602
00:25:35,600 --> 00:25:38,080
quite right

603
00:25:39,360 --> 00:25:43,199
let's revisit that okay

604
00:25:43,760 --> 00:25:45,279
exactly what you said about ice is great

605
00:25:45,279 --> 00:25:46,320
let's have some time to discuss that

606
00:25:46,320 --> 00:25:49,120
later that sounds good

607
00:25:49,520 --> 00:25:51,200
okay we have people in the in the queue

608
00:25:51,200 --> 00:25:54,559
let's let's flush the queue

609
00:25:54,840 --> 00:25:57,840
adam

610
00:25:59,760 --> 00:26:02,880
um so i i did want to address um

611
00:26:02,880 --> 00:26:05,919
the both the charter issue and the the

612
00:26:05,919 --> 00:26:07,600
notion of of

613
00:26:07,600 --> 00:26:10,400
what constitutes webrtc here the the

614
00:26:10,400 --> 00:26:11,360
charter does say we're

615
00:26:11,360 --> 00:26:14,480
going to use webrtc as a basis

616
00:26:14,480 --> 00:26:17,520
and right now if you read through even

617
00:26:17,520 --> 00:26:19,360
the base specifications ice is

618
00:26:19,360 --> 00:26:20,400
absolutely

619
00:26:20,400 --> 00:26:23,840
a requirement for getting things set up

620
00:26:23,840 --> 00:26:25,679
you can add on optionalities things like

621
00:26:25,679 --> 00:26:28,159
the simulcast

622
00:26:28,159 --> 00:26:31,679
but the i don't think the discussion of

623
00:26:31,679 --> 00:26:33,200
whether we're going to use ice is in

624
00:26:33,200 --> 00:26:35,760
scope here

625
00:26:37,120 --> 00:26:42,480
okay that this has to be what webrtc 1.0

626
00:26:42,480 --> 00:26:43,840
is is the only thing we can use and

627
00:26:43,840 --> 00:26:45,200
that's it and there's no change of that

628
00:26:45,200 --> 00:26:46,720
there's not that's in the charter right

629
00:26:46,720 --> 00:26:48,320
that's that's my only thing

630
00:26:48,320 --> 00:26:50,640
i the the thing that that was actually

631
00:26:50,640 --> 00:26:51,679
raised of like

632
00:26:51,679 --> 00:26:54,480
hey it's ice light single ips all those

633
00:26:54,480 --> 00:26:56,320
things is exactly the discussion

634
00:26:56,320 --> 00:26:57,919
like i'm not this was not a discussion

635
00:26:57,919 --> 00:26:59,679
i'm trying to kill ice the discussion

636
00:26:59,679 --> 00:27:01,679
can we talk about how we use ice

637
00:27:01,679 --> 00:27:07,120
to dramatically you want to

638
00:27:11,200 --> 00:27:13,360
you want more clarity and accuracy on

639
00:27:13,360 --> 00:27:16,479
that is that correct colin

640
00:27:17,120 --> 00:27:18,720
this has already had taken more time

641
00:27:18,720 --> 00:27:20,320
than is worth i'm just saying

642
00:27:20,320 --> 00:27:22,640
let's not start with you that there are

643
00:27:22,640 --> 00:27:23,440
no extensions

644
00:27:23,440 --> 00:27:25,520
possible to webrtc in this work because

645
00:27:25,520 --> 00:27:27,039
we're not going to manage to do it that

646
00:27:27,039 --> 00:27:27,679
way like

647
00:27:27,679 --> 00:27:29,360
like that's very unlikely than what we

648
00:27:29,360 --> 00:27:30,799
want to do

649
00:27:30,799 --> 00:27:32,000
right we're not looking for extensions

650
00:27:32,000 --> 00:27:33,760
here we're just looking for no emissions

651
00:27:33,760 --> 00:27:34,000
right

652
00:27:34,000 --> 00:27:36,880
that's you're asking to omit what is

653
00:27:36,880 --> 00:27:39,120
fundamentally a core feature of webrtc

654
00:27:39,120 --> 00:27:41,120
session startup i did not ask to remove

655
00:27:41,120 --> 00:27:43,360
ice i discussed

656
00:27:43,360 --> 00:27:45,919
time to discuss ice right and what i

657
00:27:45,919 --> 00:27:47,279
want to discuss is

658
00:27:47,279 --> 00:27:50,399
exactly all the things alex rightfully

659
00:27:50,399 --> 00:27:51,760
raised of like hey

660
00:27:51,760 --> 00:27:54,000
can we assume that the far end has a

661
00:27:54,000 --> 00:27:56,080
public ip address for example

662
00:27:56,080 --> 00:27:58,159
could we you know that dramatically

663
00:27:58,159 --> 00:27:59,440
changes

664
00:27:59,440 --> 00:28:02,080
what you need to do to do ice and no i

665
00:28:02,080 --> 00:28:03,840
do not believe that this work should

666
00:28:03,840 --> 00:28:05,679
require that the end point on the full

667
00:28:05,679 --> 00:28:06,080
side

668
00:28:06,080 --> 00:28:08,320
implements full-blown ice necessarily

669
00:28:08,320 --> 00:28:10,000
okay i understand the web browsers will

670
00:28:10,000 --> 00:28:11,440
do that but they're not the only thing

671
00:28:11,440 --> 00:28:12,559
in the world in fact they're

672
00:28:12,559 --> 00:28:14,320
the least likely thing to be streaming

673
00:28:14,320 --> 00:28:16,159
media activity of these things they're

674
00:28:16,159 --> 00:28:17,760
generally done by apps

675
00:28:17,760 --> 00:28:20,000
right i don't think there is a big

676
00:28:20,000 --> 00:28:20,960
disagreement

677
00:28:20,960 --> 00:28:22,240
actually let's let's keep it for a

678
00:28:22,240 --> 00:28:25,440
little bit later harold

679
00:28:25,440 --> 00:28:28,960
yeah to if it interoperates with

680
00:28:28,960 --> 00:28:30,000
browsers

681
00:28:30,000 --> 00:28:32,320
it's might be a success if it's not

682
00:28:32,320 --> 00:28:34,720
interoperating with browsers it might it

683
00:28:34,720 --> 00:28:37,840
will probably be a failure so

684
00:28:37,840 --> 00:28:40,480
interoperate with browsers yes be a

685
00:28:40,480 --> 00:28:43,279
browser no

686
00:28:43,440 --> 00:28:48,080
okay that's fine julius

687
00:28:51,120 --> 00:28:52,799
so i would like a clarification about

688
00:28:52,799 --> 00:28:54,159
the charter

689
00:28:54,159 --> 00:28:57,760
so uh are we as humans here that

690
00:28:57,760 --> 00:29:00,399
everything so the stock uh seems to

691
00:29:00,399 --> 00:29:01,279
imply that

692
00:29:01,279 --> 00:29:03,760
signaling goes over some sort of restful

693
00:29:03,760 --> 00:29:04,720
interface

694
00:29:04,720 --> 00:29:07,520
or perhaps something that resembles sip

695
00:29:07,520 --> 00:29:09,440
and i have the impression that much of

696
00:29:09,440 --> 00:29:10,559
the webrtc

697
00:29:10,559 --> 00:29:12,720
client server community has standardized

698
00:29:12,720 --> 00:29:14,320
on using websockets

699
00:29:14,320 --> 00:29:16,880
our website is signaling over websockets

700
00:29:16,880 --> 00:29:18,799
something that has already been decided

701
00:29:18,799 --> 00:29:19,760
to be out

702
00:29:19,760 --> 00:29:21,200
or it's something that is still under

703
00:29:21,200 --> 00:29:22,799
consideration

704
00:29:22,799 --> 00:29:25,200
so white uh julius shem can you go back

705
00:29:25,200 --> 00:29:29,120
to the to the sculpture slide please

706
00:29:35,200 --> 00:29:38,880
so the scope of the of the charter is a

707
00:29:38,880 --> 00:29:40,240
signaling protocol

708
00:29:40,240 --> 00:29:43,039
it's one way with most of the time the

709
00:29:43,039 --> 00:29:45,440
destination not being a browser so it

710
00:29:45,440 --> 00:29:46,960
fits what uh

711
00:29:46,960 --> 00:29:49,440
harold comment was addressing it's

712
00:29:49,440 --> 00:29:51,039
webrtc based

713
00:29:51,039 --> 00:29:53,440
right so that means we need to use jset

714
00:29:53,440 --> 00:29:54,559
for example

715
00:29:54,559 --> 00:29:56,880
so in all the specifications we have an

716
00:29:56,880 --> 00:29:58,640
ietf for jsat

717
00:29:58,640 --> 00:30:00,399
there is no specification for the

718
00:30:00,399 --> 00:30:02,399
signaling transport protocol

719
00:30:02,399 --> 00:30:04,640
jsp is the signaling format and the

720
00:30:04,640 --> 00:30:07,360
handshake and sdp operator yeah

721
00:30:07,360 --> 00:30:10,720
and so until today everybody could use

722
00:30:10,720 --> 00:30:12,679
whatever they wanted and that included

723
00:30:12,679 --> 00:30:14,240
xmppc

724
00:30:14,240 --> 00:30:16,080
websocket whatever you want but it was

725
00:30:16,080 --> 00:30:18,240
not standardized so the idea here

726
00:30:18,240 --> 00:30:21,200
of the of the scope of this group is to

727
00:30:21,200 --> 00:30:24,000
say in the specific

728
00:30:24,000 --> 00:30:27,279
use case of a one-way webrtc base

729
00:30:27,279 --> 00:30:28,000
between

730
00:30:28,000 --> 00:30:30,720
something and a network right and a

731
00:30:30,720 --> 00:30:31,600
platform

732
00:30:31,600 --> 00:30:34,320
uh where we can make some assumption

733
00:30:34,320 --> 00:30:34,880
about

734
00:30:34,880 --> 00:30:38,960
an ip we're gonna define an http based

735
00:30:38,960 --> 00:30:41,760
simple signaling protocol so this

736
00:30:41,760 --> 00:30:44,559
excludes websockets right

737
00:30:44,559 --> 00:30:47,039
yes okay websocket here is not

738
00:30:47,039 --> 00:30:49,120
considered as being part of the http

739
00:30:49,120 --> 00:30:50,000
stack when you say

740
00:30:50,000 --> 00:30:52,240
http you're speaking about get post and

741
00:30:52,240 --> 00:30:54,640
traditional http

742
00:30:54,640 --> 00:30:57,039
uh that's my understanding of the

743
00:30:57,039 --> 00:30:58,000
charter yes

744
00:30:58,000 --> 00:31:05,840
okay thank you

745
00:31:07,120 --> 00:31:10,960
so i just wanted to address um so julius

746
00:31:10,960 --> 00:31:13,840
you are correct that the like when

747
00:31:13,840 --> 00:31:14,960
you're talking about regular web

748
00:31:14,960 --> 00:31:16,320
applications talking to themselves

749
00:31:16,320 --> 00:31:17,760
internally

750
00:31:17,760 --> 00:31:20,000
that websockets is fairly popular here

751
00:31:20,000 --> 00:31:21,840
as a practical matter for

752
00:31:21,840 --> 00:31:25,440
the proprietary clients that have been

753
00:31:25,440 --> 00:31:27,200
put out in this space in active

754
00:31:27,200 --> 00:31:29,440
production by and large they're using

755
00:31:29,440 --> 00:31:31,120
restful interfaces

756
00:31:31,120 --> 00:31:33,760
so in terms of what fits best with the

757
00:31:33,760 --> 00:31:35,679
currently deployed architectures

758
00:31:35,679 --> 00:31:47,840
the rest is probably a better fit

759
00:31:52,799 --> 00:31:55,120
okay last one and i will let sergio

760
00:31:55,120 --> 00:31:56,159
finish his slide

761
00:31:56,159 --> 00:31:58,159
to to stay on time we have four more

762
00:31:58,159 --> 00:32:01,840
minutes mike

763
00:32:03,360 --> 00:32:06,559
i want to respond to that

764
00:32:06,640 --> 00:32:09,679
i think that the idea that we should

765
00:32:09,679 --> 00:32:11,120
consider web sockets

766
00:32:11,120 --> 00:32:15,120
is worth at least a little bit more

767
00:32:15,120 --> 00:32:18,559
consideration um so far the discussion

768
00:32:18,559 --> 00:32:20,240
on the list has seemed to be about

769
00:32:20,240 --> 00:32:23,679
uh simplifying the implementation on the

770
00:32:23,679 --> 00:32:25,279
encoder side

771
00:32:25,279 --> 00:32:28,320
uh and keeping that kind of minimal but

772
00:32:28,320 --> 00:32:30,240
if you're already implementing

773
00:32:30,240 --> 00:32:33,519
um all these other things for the media

774
00:32:33,519 --> 00:32:34,880
flow

775
00:32:34,880 --> 00:32:38,080
you already have much more complexity

776
00:32:38,080 --> 00:32:38,720
than

777
00:32:38,720 --> 00:32:42,799
websockets brings to the table so

778
00:32:42,799 --> 00:32:44,559
the benefit would be that we don't have

779
00:32:44,559 --> 00:32:46,799
to invent new semantics

780
00:32:46,799 --> 00:32:49,919
um to layer on top of

781
00:32:49,919 --> 00:32:53,200
um http semantics going back and forth

782
00:32:53,200 --> 00:32:53,679
so

783
00:32:53,679 --> 00:32:55,279
some of the things that we've discussed

784
00:32:55,279 --> 00:32:57,279
about commands

785
00:32:57,279 --> 00:33:00,640
and you know how to

786
00:33:00,640 --> 00:33:03,360
manage the session you know using a

787
00:33:03,360 --> 00:33:04,159
heartbeat

788
00:33:04,159 --> 00:33:07,039
as a chance to you know respond or send

789
00:33:07,039 --> 00:33:10,640
a message from the server to the client

790
00:33:10,960 --> 00:33:13,120
that is all simplified by using kind of

791
00:33:13,120 --> 00:33:15,039
the existing

792
00:33:15,039 --> 00:33:19,039
de facto websockets approach um

793
00:33:19,039 --> 00:33:22,480
so i think that we should be

794
00:33:22,480 --> 00:33:24,880
at least carefully consider um our

795
00:33:24,880 --> 00:33:25,600
reasons

796
00:33:25,600 --> 00:33:28,480
for uh ruling that out and maybe

797
00:33:28,480 --> 00:33:31,279
articulate them

798
00:33:34,240 --> 00:33:38,640
no dude

799
00:33:38,640 --> 00:33:40,640
so here you want to finish your original

800
00:33:40,640 --> 00:33:44,080
slides from this patch

801
00:33:45,279 --> 00:33:48,720
yeah yeah and though i was

802
00:33:48,720 --> 00:33:50,320
going to recommend that i agree with

803
00:33:50,320 --> 00:33:52,320
mike that um

804
00:33:52,320 --> 00:33:54,799
i think that resist is good and if we

805
00:33:54,799 --> 00:33:55,519
keep

806
00:33:55,519 --> 00:33:58,640
and dreams like simple requests but if

807
00:33:58,640 --> 00:34:00,960
we start to introduce lone polling and

808
00:34:00,960 --> 00:34:03,360
things like that i also will be more

809
00:34:03,360 --> 00:34:04,320
likely to

810
00:34:04,320 --> 00:34:07,679
go move to our socket into the api that

811
00:34:07,679 --> 00:34:09,520
that introduced propelling but i think

812
00:34:09,520 --> 00:34:11,119
that adam will

813
00:34:11,119 --> 00:34:13,359
talk about this in his slide so we can

814
00:34:13,359 --> 00:34:16,560
keep the discussion for later

815
00:34:18,480 --> 00:34:20,639
and i think that it was the the last one

816
00:34:20,639 --> 00:34:23,839
my my last slide

817
00:34:23,839 --> 00:34:27,359
great thank you sergio and we were a

818
00:34:27,359 --> 00:34:29,359
little bit ahead then in a long ietf

819
00:34:29,359 --> 00:34:30,399
tradition we

820
00:34:30,399 --> 00:34:36,079
we ate all the time we had gained

821
00:34:36,079 --> 00:34:39,119
next would be um adam

822
00:34:39,119 --> 00:34:41,119
there will be a a lot of interesting

823
00:34:41,119 --> 00:34:42,960
content so let's get ready for

824
00:34:42,960 --> 00:34:43,839
discussion

825
00:34:43,839 --> 00:34:46,639
it's supposedly 20 minutes uh but i'm

826
00:34:46,639 --> 00:34:49,520
going to put a 30 minute counter

827
00:34:49,520 --> 00:34:52,000
uh just in the spirit of controlling the

828
00:34:52,000 --> 00:34:54,320
time

829
00:34:56,960 --> 00:34:59,920
all right thanks sean can you have the

830
00:34:59,920 --> 00:35:00,880
the slide on

831
00:35:00,880 --> 00:35:04,000
on screen fighting with mythical

832
00:35:04,000 --> 00:35:09,280
i hope so here we go alright cool

833
00:35:14,079 --> 00:35:15,760
all right so i'm coming through right

834
00:35:15,760 --> 00:35:17,119
you can hear me

835
00:35:17,119 --> 00:35:20,640
yes all right perfect so

836
00:35:20,640 --> 00:35:23,440
um i sat down and looked through uh what

837
00:35:23,440 --> 00:35:25,920
the things were that i believe we need

838
00:35:25,920 --> 00:35:27,839
um for this kind of an in-depth protocol

839
00:35:27,839 --> 00:35:29,119
and compared it against what we had in

840
00:35:29,119 --> 00:35:31,359
in the initial proposal

841
00:35:31,359 --> 00:35:34,320
and came up with a handful of things um

842
00:35:34,320 --> 00:35:35,760
in combination with the comments that

843
00:35:35,760 --> 00:35:37,359
were made during dispatch

844
00:35:37,359 --> 00:35:40,000
that i think we would want to add uh to

845
00:35:40,000 --> 00:35:40,720
the wish

846
00:35:40,720 --> 00:35:45,280
um the well to whip the whip proposal

847
00:35:45,280 --> 00:35:48,480
um and this is kind of the list of

848
00:35:48,480 --> 00:35:51,680
areas for conversation um the first and

849
00:35:51,680 --> 00:35:53,200
this came up in dispatch was

850
00:35:53,200 --> 00:35:55,280
uh the desire to have some sort of

851
00:35:55,280 --> 00:35:56,960
session management and specifically a

852
00:35:56,960 --> 00:35:57,599
way

853
00:35:57,599 --> 00:36:00,880
to signal termination of a session

854
00:36:00,880 --> 00:36:03,920
the need for extensibility

855
00:36:03,920 --> 00:36:08,320
was put out there as well as

856
00:36:08,320 --> 00:36:12,160
the sorry and on top of that some of the

857
00:36:12,160 --> 00:36:13,920
stuff that we've realized that we needed

858
00:36:13,920 --> 00:36:16,960
from a signaling layer is the ability to

859
00:36:16,960 --> 00:36:17,760
have heart beating

860
00:36:17,760 --> 00:36:20,800
to determine um at a signaling layer

861
00:36:20,800 --> 00:36:21,280
whether

862
00:36:21,280 --> 00:36:22,720
a session was still alive and this is

863
00:36:22,720 --> 00:36:24,400
kind of based on a separation of

864
00:36:24,400 --> 00:36:25,440
concerns where you have

865
00:36:25,440 --> 00:36:27,359
signaling on one layer media on a

866
00:36:27,359 --> 00:36:29,280
different and and a signaling protocol

867
00:36:29,280 --> 00:36:30,720
in the network itself that talks between

868
00:36:30,720 --> 00:36:31,839
them which is a fairly common way to

869
00:36:31,839 --> 00:36:33,200
decompose these sorts of things for

870
00:36:33,200 --> 00:36:35,599
scalability

871
00:36:35,599 --> 00:36:38,160
we also would ideally want the ability

872
00:36:38,160 --> 00:36:40,240
to have two-way communication largely

873
00:36:40,240 --> 00:36:41,920
casting back the ability to have

874
00:36:41,920 --> 00:36:45,200
termination initiated by the network

875
00:36:45,200 --> 00:36:47,680
but possibly other network operations in

876
00:36:47,680 --> 00:36:50,320
the future as well

877
00:36:50,320 --> 00:36:53,440
we ideally would have ice management and

878
00:36:53,440 --> 00:36:55,440
then julius touched on this also where

879
00:36:55,440 --> 00:36:56,880
there are sometimes cases where we're

880
00:36:56,880 --> 00:36:58,560
going to need to be able to do

881
00:36:58,560 --> 00:37:01,200
restarts and sometimes you're going to

882
00:37:01,200 --> 00:37:02,320
want to do trickling now we're going to

883
00:37:02,320 --> 00:37:03,839
touch on this when we get to the

884
00:37:03,839 --> 00:37:06,560
i have some slides specifically on why

885
00:37:06,560 --> 00:37:07,520
we might need

886
00:37:07,520 --> 00:37:09,599
more ice operations than is immediately

887
00:37:09,599 --> 00:37:10,960
obvious

888
00:37:10,960 --> 00:37:15,520
and we also um probably need to have

889
00:37:15,520 --> 00:37:18,560
either a specific specification of which

890
00:37:18,560 --> 00:37:20,079
media types and how many are going to be

891
00:37:20,079 --> 00:37:20,720
sent

892
00:37:20,720 --> 00:37:24,800
or a means of of negotiating that

893
00:37:24,800 --> 00:37:26,560
and i'll touch on all of these in future

894
00:37:26,560 --> 00:37:27,760
slides so go ahead and go to the next

895
00:37:27,760 --> 00:37:29,920
one

896
00:37:33,040 --> 00:37:35,839
i want to highlight some of the

897
00:37:35,839 --> 00:37:37,280
constraints that we've basically taken

898
00:37:37,280 --> 00:37:37,760
on

899
00:37:37,760 --> 00:37:39,520
with our charter when we agreed to use

900
00:37:39,520 --> 00:37:41,760
http as our basis

901
00:37:41,760 --> 00:37:42,960
there are a couple of best current

902
00:37:42,960 --> 00:37:45,119
practice documents out there

903
00:37:45,119 --> 00:37:46,960
the first of which is bcp-36 that talks

904
00:37:46,960 --> 00:37:48,720
about how applications can use http as a

905
00:37:48,720 --> 00:37:50,880
substrate and the other one is bcp 190

906
00:37:50,880 --> 00:37:51,760
which talks about

907
00:37:51,760 --> 00:37:54,800
how applications can use http urls

908
00:37:54,800 --> 00:37:56,880
and i bring these up mostly because when

909
00:37:56,880 --> 00:37:57,920
i was going through

910
00:37:57,920 --> 00:38:00,400
ways that one might solve for these

911
00:38:00,400 --> 00:38:02,079
requirements

912
00:38:02,079 --> 00:38:05,440
there were some kind of easy and obvious

913
00:38:05,440 --> 00:38:06,400
solutions

914
00:38:06,400 --> 00:38:09,280
that ran aground some of the constraints

915
00:38:09,280 --> 00:38:11,440
that are put on us by these documents

916
00:38:11,440 --> 00:38:14,320
um so the most notable restrictions that

917
00:38:14,320 --> 00:38:15,599
we probably need to keep in mind as we

918
00:38:15,599 --> 00:38:16,160
turn over

919
00:38:16,160 --> 00:38:18,960
various solutions in our head is that we

920
00:38:18,960 --> 00:38:20,000
can't

921
00:38:20,000 --> 00:38:22,240
define any new hd methods headers or

922
00:38:22,240 --> 00:38:24,079
responses unless they have some impact

923
00:38:24,079 --> 00:38:26,640
on http processing itself

924
00:38:26,640 --> 00:38:29,359
um so that means that we can't put some

925
00:38:29,359 --> 00:38:31,240
sort of like

926
00:38:31,240 --> 00:38:32,960
wish-operation header field that

927
00:38:32,960 --> 00:38:34,800
indicates what we're trying to do

928
00:38:34,800 --> 00:38:38,079
um we have to use any existing methods

929
00:38:38,079 --> 00:38:39,280
that we use to mean

930
00:38:39,280 --> 00:38:42,480
what hd http defines them to mean

931
00:38:42,480 --> 00:38:45,119
um so we this is why for example we

932
00:38:45,119 --> 00:38:46,160
don't want to use

933
00:38:46,160 --> 00:38:48,480
options to mean ping because options has

934
00:38:48,480 --> 00:38:49,599
a specific

935
00:38:49,599 --> 00:38:53,280
meaning and it's not that um

936
00:38:53,280 --> 00:38:55,760
and then finally we can't define rules

937
00:38:55,760 --> 00:38:57,760
for building http urls we can't like

938
00:38:57,760 --> 00:38:59,520
send a base path and then say and then

939
00:38:59,520 --> 00:39:00,079
you add

940
00:39:00,079 --> 00:39:01,920
these things onto the end of it in this

941
00:39:01,920 --> 00:39:04,880
in this formulaic way

942
00:39:04,880 --> 00:39:08,560
so next slide

943
00:39:13,040 --> 00:39:16,560
okay so the first thing um that

944
00:39:16,560 --> 00:39:18,320
we probably want to nail down is how we

945
00:39:18,320 --> 00:39:19,839
want to do uh

946
00:39:19,839 --> 00:39:21,359
session management in general this is

947
00:39:21,359 --> 00:39:22,960
kind of a

948
00:39:22,960 --> 00:39:25,040
sort of the base how does the protocol

949
00:39:25,040 --> 00:39:26,839
work

950
00:39:26,839 --> 00:39:29,520
um one of the there were a couple of

951
00:39:29,520 --> 00:39:30,560
options that are basically bending

952
00:39:30,560 --> 00:39:31,760
around the mailing list

953
00:39:31,760 --> 00:39:35,280
um the first and this is very similar to

954
00:39:35,280 --> 00:39:35,760
the

955
00:39:35,760 --> 00:39:37,760
uh the current proposal is where you

956
00:39:37,760 --> 00:39:39,680
would send a post operation

957
00:39:39,680 --> 00:39:42,160
to a url that represents sort of a

958
00:39:42,160 --> 00:39:44,000
session creation endpoint

959
00:39:44,000 --> 00:39:45,839
and then get back a 201 created response

960
00:39:45,839 --> 00:39:47,359
with location header field

961
00:39:47,359 --> 00:39:49,920
that points to a newly created resource

962
00:39:49,920 --> 00:39:53,200
and that resource represents the session

963
00:39:53,200 --> 00:39:55,440
and then in terms of when you tear that

964
00:39:55,440 --> 00:39:56,800
down what you could do is

965
00:39:56,800 --> 00:39:59,280
you could send an http delete that means

966
00:39:59,280 --> 00:40:00,480
delete this resource that's a very good

967
00:40:00,480 --> 00:40:01,760
semantic match

968
00:40:01,760 --> 00:40:04,240
um or we could have basically session

969
00:40:04,240 --> 00:40:05,599
termination

970
00:40:05,599 --> 00:40:08,880
by whatever means we do

971
00:40:08,880 --> 00:40:10,880
other operations for a certain level of

972
00:40:10,880 --> 00:40:13,119
consistency

973
00:40:13,119 --> 00:40:16,319
the second approach here would be to

974
00:40:16,319 --> 00:40:17,520
send a post

975
00:40:17,520 --> 00:40:20,079
to that session creation url and get an

976
00:40:20,079 --> 00:40:21,280
ok back

977
00:40:21,280 --> 00:40:24,800
where the the body contains

978
00:40:24,800 --> 00:40:28,079
in some way a list of urls that

979
00:40:28,079 --> 00:40:30,160
tells you how to perform the various

980
00:40:30,160 --> 00:40:32,000
operations that the server itself

981
00:40:32,000 --> 00:40:33,280
supports

982
00:40:33,280 --> 00:40:36,160
um and one of the things that's kind of

983
00:40:36,160 --> 00:40:36,960
nice about

984
00:40:36,960 --> 00:40:40,800
this approach is that while the

985
00:40:40,800 --> 00:40:43,040
post 201 just the way that http has

986
00:40:43,040 --> 00:40:44,319
defined that

987
00:40:44,319 --> 00:40:46,480
can't contain a body in the answer so

988
00:40:46,480 --> 00:40:47,760
you can't do anything

989
00:40:47,760 --> 00:40:50,240
else really if you were to use just a

990
00:40:50,240 --> 00:40:52,640
post 200 exchange you could send an

991
00:40:52,640 --> 00:40:53,680
offer in that post

992
00:40:53,680 --> 00:40:56,000
and get an answer in the okay and

993
00:40:56,000 --> 00:40:57,599
basically save a round trip of time as

994
00:40:57,599 --> 00:40:57,920
you're

995
00:40:57,920 --> 00:41:00,880
setting up one of these sessions so i

996
00:41:00,880 --> 00:41:02,160
want to pause here

997
00:41:02,160 --> 00:41:06,400
and see like what the feel of folks here

998
00:41:06,400 --> 00:41:06,800
is

999
00:41:06,800 --> 00:41:09,200
around which of these basically three

1000
00:41:09,200 --> 00:41:21,839
paths we might want to take forward

1001
00:41:25,520 --> 00:41:27,040
and i'm leaving to the tears to call on

1002
00:41:27,040 --> 00:41:29,200
folks yeah colin you can go out if you

1003
00:41:29,200 --> 00:41:30,400
want first and then

1004
00:41:30,400 --> 00:41:35,680
the author

1005
00:41:35,680 --> 00:41:37,440
adam it just seemed like we've got a lot

1006
00:41:37,440 --> 00:41:39,760
of experience with doing rest api

1007
00:41:39,760 --> 00:41:41,680
to send an offer answer up there's lots

1008
00:41:41,680 --> 00:41:43,280
of languages for defining

1009
00:41:43,280 --> 00:41:45,839
i mean you know various api description

1010
00:41:45,839 --> 00:41:47,520
languages that are supported by api

1011
00:41:47,520 --> 00:41:50,079
gateways and all those things and

1012
00:41:50,079 --> 00:41:51,680
i just think that we would probably want

1013
00:41:51,680 --> 00:41:53,680
to go with a very common practice way of

1014
00:41:53,680 --> 00:41:54,560
doing this

1015
00:41:54,560 --> 00:41:56,400
i do think doing an offer answer and

1016
00:41:56,400 --> 00:41:57,839
round round trip

1017
00:41:57,839 --> 00:42:01,359
should be one of our requirements

1018
00:42:01,359 --> 00:42:03,440
i don't really agree with your statement

1019
00:42:03,440 --> 00:42:05,359
that

1020
00:42:05,359 --> 00:42:08,400
urls are often built in rest apis by

1021
00:42:08,400 --> 00:42:10,720
extending a certain by knowing the

1022
00:42:10,720 --> 00:42:12,560
parameters that come after some base

1023
00:42:12,560 --> 00:42:13,359
origin

1024
00:42:13,359 --> 00:42:16,319
url um so i think no i wasn't saying

1025
00:42:16,319 --> 00:42:17,200
that was common

1026
00:42:17,200 --> 00:42:18,560
i was saying that that is an approach

1027
00:42:18,560 --> 00:42:19,839
that presents itself that we can't

1028
00:42:19,839 --> 00:42:22,240
pursue

1029
00:42:22,480 --> 00:42:24,800
that's just i think 190 says we can't do

1030
00:42:24,800 --> 00:42:27,760
because bcp 190 says we cannot do that

1031
00:42:27,760 --> 00:42:30,079
i i don't i think if i think martin on

1032
00:42:30,079 --> 00:42:32,400
him have discussed extensively bcp 990

1033
00:42:32,400 --> 00:42:32,880
doesn't

1034
00:42:32,880 --> 00:42:34,960
says that and either way i don't care i

1035
00:42:34,960 --> 00:42:37,119
think we should do this the way

1036
00:42:37,119 --> 00:42:39,200
apis are largely done on the internet

1037
00:42:39,200 --> 00:42:41,280
today regardless of whether

1038
00:42:41,280 --> 00:42:43,280
bcp 190 says whatever i think we should

1039
00:42:43,280 --> 00:42:46,160
do what works well

1040
00:42:47,280 --> 00:42:49,599
i mean any reason not to do that right i

1041
00:42:49,599 --> 00:42:50,800
mean like like look

1042
00:42:50,800 --> 00:42:52,400
it's like it's like you know how every

1043
00:42:52,400 --> 00:42:53,839
api works on the web today very well

1044
00:42:53,839 --> 00:42:54,880
better than i do

1045
00:42:54,880 --> 00:42:58,800
um so so can i enjoy

1046
00:42:58,800 --> 00:43:00,160
do i understand correctly and

1047
00:43:00,160 --> 00:43:03,440
volunteering to propose something

1048
00:43:03,440 --> 00:43:05,440
sure i will be happy to send you a a

1049
00:43:05,440 --> 00:43:07,520
blueprint or a swagger definition of

1050
00:43:07,520 --> 00:43:09,520
that which will be like about five lines

1051
00:43:09,520 --> 00:43:10,800
and like that's actually what i think

1052
00:43:10,800 --> 00:43:12,319
our spec for this whole

1053
00:43:12,319 --> 00:43:13,680
working group should more or less be

1054
00:43:13,680 --> 00:43:15,839
right like an ietf just manages to wrap

1055
00:43:15,839 --> 00:43:16,319
itself

1056
00:43:16,319 --> 00:43:19,520
into into tangles of of

1057
00:43:19,520 --> 00:43:21,359
not doing what works well on the web

1058
00:43:21,359 --> 00:43:22,560
like let's do something simple and

1059
00:43:22,560 --> 00:43:24,160
pragmatic and is proven to work well

1060
00:43:24,160 --> 00:43:26,240
today we all know how to do this

1061
00:43:26,240 --> 00:43:28,240
well to be clear the notion of sending

1062
00:43:28,240 --> 00:43:30,240
back a map from operations to urls is

1063
00:43:30,240 --> 00:43:32,240
that that's not uncommon either

1064
00:43:32,240 --> 00:43:34,800
right that is something that is fairly

1065
00:43:34,800 --> 00:43:35,599
well exercised

1066
00:43:35,599 --> 00:43:37,359
it's gratuitous complexity and

1067
00:43:37,359 --> 00:43:39,440
gratuitous extra round trips

1068
00:43:39,440 --> 00:43:42,640
it has no value of any form

1069
00:43:42,640 --> 00:43:45,200
i proposed

1070
00:43:46,000 --> 00:43:49,520
in the spirit of time and the absence of

1071
00:43:49,520 --> 00:43:53,359
uh distribution and statistics of apis

1072
00:43:53,359 --> 00:43:57,760
across the entire web sergio

1073
00:43:57,760 --> 00:44:00,319
yeah i think that obviously i have a

1074
00:44:00,319 --> 00:44:01,280
favorite for

1075
00:44:01,280 --> 00:44:03,359
between these options but i think that

1076
00:44:03,359 --> 00:44:05,520
it will also depends

1077
00:44:05,520 --> 00:44:07,920
uh which options do we want to add to

1078
00:44:07,920 --> 00:44:08,960
the basic

1079
00:44:08,960 --> 00:44:10,880
negotiation because if we don't want

1080
00:44:10,880 --> 00:44:13,520
what we do

1081
00:44:14,880 --> 00:44:17,200
but we need to do our operation then we

1082
00:44:17,200 --> 00:44:18,240
will have to

1083
00:44:18,240 --> 00:44:23,839
to do more contact with

1084
00:44:32,240 --> 00:44:34,319
how we do the other operation this one

1085
00:44:34,319 --> 00:44:37,520
will be natural

1086
00:44:37,520 --> 00:44:39,040
okay so you would like to see the least

1087
00:44:39,040 --> 00:44:40,960
of all the operation before you decide

1088
00:44:40,960 --> 00:44:42,240
how to do

1089
00:44:42,240 --> 00:44:44,000
yeah i mean because probably probably

1090
00:44:44,000 --> 00:44:45,599
the one that i choose is not the best

1091
00:44:45,599 --> 00:44:46,160
one

1092
00:44:46,160 --> 00:44:51,760
if we if we decide to do a lot of things

1093
00:44:51,760 --> 00:44:54,720
okay timothy

1094
00:44:59,359 --> 00:45:03,040
yeah so i think this

1095
00:45:03,040 --> 00:45:05,040
may i kind of agree with sergio and i

1096
00:45:05,040 --> 00:45:06,240
think it may also

1097
00:45:06,240 --> 00:45:09,599
hang on how load balancing looks i think

1098
00:45:09,599 --> 00:45:10,800
these two options are

1099
00:45:10,800 --> 00:45:12,640
different for the different load

1100
00:45:12,640 --> 00:45:14,560
balancing techniques

1101
00:45:14,560 --> 00:45:17,440
um if somebody could stick well yeah

1102
00:45:17,440 --> 00:45:18,319
okay cool

1103
00:45:18,319 --> 00:45:22,160
i'll try and note myself there

1104
00:45:27,440 --> 00:45:30,079
okay back to you i don't know all right

1105
00:45:30,079 --> 00:45:31,119
so it sounds like we're gonna circle

1106
00:45:31,119 --> 00:45:32,240
back to this then

1107
00:45:32,240 --> 00:45:35,680
um next slide

1108
00:45:37,359 --> 00:45:39,760
um right so actually i covered these

1109
00:45:39,760 --> 00:45:41,440
just orally let's go ahead and go

1110
00:45:41,440 --> 00:45:43,040
forward

1111
00:45:43,040 --> 00:45:46,480
um so i also wanted to add a slide since

1112
00:45:46,480 --> 00:45:47,920
it sort of came up on the list

1113
00:45:47,920 --> 00:45:50,079
uh i don't think we're quite to the

1114
00:45:50,079 --> 00:45:51,119
point that we want to

1115
00:45:51,119 --> 00:45:52,560
have a discussion around session

1116
00:45:52,560 --> 00:45:55,280
management syntax until we have

1117
00:45:55,280 --> 00:45:57,920
an agreement in principle about uh which

1118
00:45:57,920 --> 00:45:59,200
session management approach we're going

1119
00:45:59,200 --> 00:46:00,319
to use here

1120
00:46:00,319 --> 00:46:03,279
so next slide

1121
00:46:09,359 --> 00:46:12,800
so the uh the next topic here

1122
00:46:12,800 --> 00:46:15,359
is is how we're going to have

1123
00:46:15,359 --> 00:46:18,240
extensibility in general and there are

1124
00:46:18,240 --> 00:46:19,599
a couple of different dimensions for

1125
00:46:19,599 --> 00:46:21,599
extensibility um

1126
00:46:21,599 --> 00:46:24,240
the what i would oppose is that we have

1127
00:46:24,240 --> 00:46:24,800
the

1128
00:46:24,800 --> 00:46:27,599
the wish document here defining a core

1129
00:46:27,599 --> 00:46:28,800
set of functions that clients and

1130
00:46:28,800 --> 00:46:29,359
servers

1131
00:46:29,359 --> 00:46:32,319
need to implement um and that just in

1132
00:46:32,319 --> 00:46:33,760
principle

1133
00:46:33,760 --> 00:46:36,960
implementing these base functions needs

1134
00:46:36,960 --> 00:46:38,640
to always be sufficient to initiate a

1135
00:46:38,640 --> 00:46:40,720
broadcast

1136
00:46:40,720 --> 00:46:42,480
and that we want on top of that

1137
00:46:42,480 --> 00:46:44,079
extension points for adding new

1138
00:46:44,079 --> 00:46:46,400
operations to enhance functionality

1139
00:46:46,400 --> 00:46:48,720
and as a separate concern extension

1140
00:46:48,720 --> 00:46:50,640
points for adding new parameters

1141
00:46:50,640 --> 00:46:54,319
uh to existing operations um

1142
00:46:54,319 --> 00:46:56,000
and the the way that we're going to

1143
00:46:56,000 --> 00:46:57,839
achieve interoperability with this sort

1144
00:46:57,839 --> 00:46:58,960
of scheme would be that

1145
00:46:58,960 --> 00:47:00,400
the clients and servers can always

1146
00:47:00,400 --> 00:47:03,200
ignore unknown or unsupported operations

1147
00:47:03,200 --> 00:47:05,520
uh while still functioning correctly the

1148
00:47:05,520 --> 00:47:06,800
analogy that i think i put out on the

1149
00:47:06,800 --> 00:47:07,760
mailing list here

1150
00:47:07,760 --> 00:47:11,119
is um one with the way the sip works

1151
00:47:11,119 --> 00:47:13,839
which is that for example a base sip

1152
00:47:13,839 --> 00:47:14,720
terminal

1153
00:47:14,720 --> 00:47:18,000
can dial into a conference bridge and

1154
00:47:18,000 --> 00:47:19,760
have things work just fine for the

1155
00:47:19,760 --> 00:47:20,240
person

1156
00:47:20,240 --> 00:47:22,000
dialing in they're going to miss out on

1157
00:47:22,000 --> 00:47:23,680
enhanced uh

1158
00:47:23,680 --> 00:47:25,839
conference related functionality and

1159
00:47:25,839 --> 00:47:27,680
then we have other things we've added on

1160
00:47:27,680 --> 00:47:28,480
to sip

1161
00:47:28,480 --> 00:47:31,040
that allows the participant to like do

1162
00:47:31,040 --> 00:47:32,000
floor control

1163
00:47:32,000 --> 00:47:33,440
and to see who's in the conference and

1164
00:47:33,440 --> 00:47:34,720
that sort of thing but those aren't

1165
00:47:34,720 --> 00:47:36,240
necessary to participate

1166
00:47:36,240 --> 00:47:38,079
they're just enhancements so the

1167
00:47:38,079 --> 00:47:39,839
proposal here is that any sort of thing

1168
00:47:39,839 --> 00:47:41,839
that we would ever add on to wish

1169
00:47:41,839 --> 00:47:44,559
as an extension would be just that not

1170
00:47:44,559 --> 00:47:45,520
necessary

1171
00:47:45,520 --> 00:47:47,920
to participate but something that would

1172
00:47:47,920 --> 00:47:49,200
make the experience

1173
00:47:49,200 --> 00:47:53,839
enhanced in some way

1174
00:47:55,680 --> 00:47:58,079
and again i'm looking to see if anyone's

1175
00:47:58,079 --> 00:47:59,040
in the queue

1176
00:47:59,040 --> 00:48:01,440
i don't see anyone so i'm going to go on

1177
00:48:01,440 --> 00:48:02,960
go ahead

1178
00:48:02,960 --> 00:48:06,160
no nobody in the queue thanks

1179
00:48:06,160 --> 00:48:09,359
um i mentioned this up at the top uh

1180
00:48:09,359 --> 00:48:10,720
around heart beating

1181
00:48:10,720 --> 00:48:13,760
um there are certain decompositions of

1182
00:48:13,760 --> 00:48:14,800
networks that

1183
00:48:14,800 --> 00:48:17,520
makes it easier and cleaner and less

1184
00:48:17,520 --> 00:48:19,119
resource intensive

1185
00:48:19,119 --> 00:48:21,760
if you've separated concerns between a

1186
00:48:21,760 --> 00:48:22,800
signaling plane

1187
00:48:22,800 --> 00:48:26,000
and a media plane and then are able to

1188
00:48:26,000 --> 00:48:27,599
determine liveness

1189
00:48:27,599 --> 00:48:29,200
independently at the signaling plane of

1190
00:48:29,200 --> 00:48:30,960
the media plane so

1191
00:48:30,960 --> 00:48:32,480
one of the things that we propose is

1192
00:48:32,480 --> 00:48:34,240
that we would have a simple heart

1193
00:48:34,240 --> 00:48:35,839
meeting mechanism

1194
00:48:35,839 --> 00:48:37,680
just whatever thing we use for

1195
00:48:37,680 --> 00:48:39,359
operations would include heartbeat as an

1196
00:48:39,359 --> 00:48:40,880
operation

1197
00:48:40,880 --> 00:48:42,960
and that the client would be expected to

1198
00:48:42,960 --> 00:48:45,359
perform just a very simple you know

1199
00:48:45,359 --> 00:48:48,240
as small as possible operation against

1200
00:48:48,240 --> 00:48:49,760
the session endpoint

1201
00:48:49,760 --> 00:48:52,240
um and there are some things we want to

1202
00:48:52,240 --> 00:48:53,200
nail down here

1203
00:48:53,200 --> 00:48:56,079
like how we determine what the period

1204
00:48:56,079 --> 00:48:57,599
for heartbeats are

1205
00:48:57,599 --> 00:49:00,079
like we could have a hard-coded thing or

1206
00:49:00,079 --> 00:49:01,280
we could have something where the the

1207
00:49:01,280 --> 00:49:02,000
server indicates

1208
00:49:02,000 --> 00:49:03,440
the client which heartbeat interval it

1209
00:49:03,440 --> 00:49:05,760
expects um or even a negotiation

1210
00:49:05,760 --> 00:49:06,800
although that seems to be getting a

1211
00:49:06,800 --> 00:49:08,640
little bit too baroque

1212
00:49:08,640 --> 00:49:11,599
so uh let's go to thecube we have two

1213
00:49:11,599 --> 00:49:13,920
people in the queue sergio and team

1214
00:49:13,920 --> 00:49:17,200
sergio yeah regarding herbits

1215
00:49:17,200 --> 00:49:19,680
yes first thing is that that this only

1216
00:49:19,680 --> 00:49:20,319
makes sense

1217
00:49:20,319 --> 00:49:23,119
you have a different or different

1218
00:49:23,119 --> 00:49:24,800
company for the signal in front of the

1219
00:49:24,800 --> 00:49:25,599
media server

1220
00:49:25,599 --> 00:49:29,680
you have all in the same

1221
00:49:42,839 --> 00:49:46,800
the the signaling is

1222
00:49:46,800 --> 00:49:49,040
is disrupted but the media is flowing

1223
00:49:49,040 --> 00:49:50,319
perfectly

1224
00:49:50,319 --> 00:49:52,640
because you have different different

1225
00:49:52,640 --> 00:49:55,279
paths and

1226
00:49:55,520 --> 00:49:57,520
i don't i don't i'm not sure if it is

1227
00:49:57,520 --> 00:49:58,720
something that i want to

1228
00:49:58,720 --> 00:50:02,240
implement i mean it's this uh

1229
00:50:02,240 --> 00:50:03,920
because we are having a situation in

1230
00:50:03,920 --> 00:50:05,440
which we are terminating sessions

1231
00:50:05,440 --> 00:50:07,520
because because the signaling path is

1232
00:50:07,520 --> 00:50:08,640
not working properly

1233
00:50:08,640 --> 00:50:10,559
properly but the media is perfect and we

1234
00:50:10,559 --> 00:50:12,240
are in the tearing down

1235
00:50:12,240 --> 00:50:15,280
the media session when it was not

1236
00:50:15,280 --> 00:50:19,200
uh it should have not been teared down

1237
00:50:20,960 --> 00:50:24,400
um i'm going to wait wait uh adam

1238
00:50:24,400 --> 00:50:27,359
um there was an uh there was mike before

1239
00:50:27,359 --> 00:50:28,079
that say

1240
00:50:28,079 --> 00:50:29,760
uh if we have if we want to have an

1241
00:50:29,760 --> 00:50:31,920
airbeat and so on then why not going to

1242
00:50:31,920 --> 00:50:32,960
websocket

1243
00:50:32,960 --> 00:50:35,440
so that bears two questions one what

1244
00:50:35,440 --> 00:50:37,119
what is the the use case what is the

1245
00:50:37,119 --> 00:50:38,640
necessity of a heartbeat

1246
00:50:38,640 --> 00:50:41,839
uh exactly and two if wouldn't be

1247
00:50:41,839 --> 00:50:44,480
websocket then better in in that case

1248
00:50:44,480 --> 00:50:46,960
before we go to to timothy uh

1249
00:50:46,960 --> 00:50:49,440
in the queue

1250
00:50:52,640 --> 00:50:54,240
so i'm sorry you had a question there

1251
00:50:54,240 --> 00:50:56,559
who are you addressing it to alex

1252
00:50:56,559 --> 00:50:59,119
i was speaking to you adam and i was uh

1253
00:50:59,119 --> 00:51:00,000
referring

1254
00:51:00,000 --> 00:51:02,160
the question that mike asked before

1255
00:51:02,160 --> 00:51:04,800
about websocket saying that for example

1256
00:51:04,800 --> 00:51:07,599
if we had to use an herbit then we might

1257
00:51:07,599 --> 00:51:08,000
as well

1258
00:51:08,000 --> 00:51:09,760
use web socket for example because that

1259
00:51:09,760 --> 00:51:11,280
would be bundled among

1260
00:51:11,280 --> 00:51:13,119
other things right and and that beard

1261
00:51:13,119 --> 00:51:16,160
the question do we really need on herbit

1262
00:51:16,160 --> 00:51:18,400
and if we do then should we consider

1263
00:51:18,400 --> 00:51:20,400
websocket

1264
00:51:20,400 --> 00:51:23,920
right um so i have to admit the notion

1265
00:51:23,920 --> 00:51:25,839
of using web sockets along this hadn't

1266
00:51:25,839 --> 00:51:26,960
really occurred to me before so i'm

1267
00:51:26,960 --> 00:51:28,079
going to have to cross that

1268
00:51:28,079 --> 00:51:30,400
process that a bit before i put forth uh

1269
00:51:30,400 --> 00:51:31,599
an opinion

1270
00:51:31,599 --> 00:51:33,599
um in terms of heart beating being

1271
00:51:33,599 --> 00:51:34,800
sufficient to push us

1272
00:51:34,800 --> 00:51:37,760
over that threshold probably not but i

1273
00:51:37,760 --> 00:51:38,319
can see

1274
00:51:38,319 --> 00:51:41,040
between heart beating and the ability to

1275
00:51:41,040 --> 00:51:41,839
send

1276
00:51:41,839 --> 00:51:44,400
operations from the server we might get

1277
00:51:44,400 --> 00:51:45,359
there it might make

1278
00:51:45,359 --> 00:51:48,559
for a bit of a stronger point in terms

1279
00:51:48,559 --> 00:51:50,960
of needing heart beating at the

1280
00:51:50,960 --> 00:51:52,400
signaling layer

1281
00:51:52,400 --> 00:51:55,040
again there are certain architectures

1282
00:51:55,040 --> 00:51:55,520
where

1283
00:51:55,520 --> 00:51:58,160
the design makes this something that is

1284
00:51:58,160 --> 00:51:59,280
far

1285
00:51:59,280 --> 00:52:02,960
easier to deal with if depending upon

1286
00:52:02,960 --> 00:52:04,720
what sort of control structure you have

1287
00:52:04,720 --> 00:52:06,720
between a signaling plane and a media

1288
00:52:06,720 --> 00:52:09,040
plane

1289
00:52:09,040 --> 00:52:10,480
such that i don't want to end up with a

1290
00:52:10,480 --> 00:52:12,480
situation you have to have

1291
00:52:12,480 --> 00:52:14,240
operations necessarily initiated from

1292
00:52:14,240 --> 00:52:16,000
the media plane to say to the signaling

1293
00:52:16,000 --> 00:52:16,880
plane hey

1294
00:52:16,880 --> 00:52:20,400
this session has gone away um it's not

1295
00:52:20,400 --> 00:52:21,839
necessarily an absolutely hard

1296
00:52:21,839 --> 00:52:22,720
requirement

1297
00:52:22,720 --> 00:52:26,240
it just makes things a little

1298
00:52:26,240 --> 00:52:29,440
odd um when you have something coming

1299
00:52:29,440 --> 00:52:30,800
basically from a

1300
00:52:30,800 --> 00:52:32,720
controlled plane to the controlling

1301
00:52:32,720 --> 00:52:34,480
plane um

1302
00:52:34,480 --> 00:52:36,240
to let it know the session has been torn

1303
00:52:36,240 --> 00:52:38,400
down as i mean as a matter of practice

1304
00:52:38,400 --> 00:52:39,520
obviously when you have things

1305
00:52:39,520 --> 00:52:41,599
exceptional

1306
00:52:41,599 --> 00:52:45,440
you're gonna need that sort of operation

1307
00:52:45,440 --> 00:52:49,359
okay thank you team

1308
00:52:49,839 --> 00:52:52,000
yeah i mean i think uh you have to think

1309
00:52:52,000 --> 00:52:53,440
about what the failure modes are that

1310
00:52:53,440 --> 00:52:54,960
the heartbeat's trying to protect you

1311
00:52:54,960 --> 00:52:56,160
against and and

1312
00:52:56,160 --> 00:52:59,280
the webrtc experience is that like

1313
00:52:59,280 --> 00:53:01,040
people really just do shut their

1314
00:53:01,040 --> 00:53:03,119
browsers um

1315
00:53:03,119 --> 00:53:05,440
and like you want to catch that in

1316
00:53:05,440 --> 00:53:06,880
whatever your quickest way

1317
00:53:06,880 --> 00:53:09,440
is and and i'm not convinced that a

1318
00:53:09,440 --> 00:53:10,559
heartbeat

1319
00:53:10,559 --> 00:53:13,599
and certainly a websocket layer is going

1320
00:53:13,599 --> 00:53:14,960
to do what you want

1321
00:53:14,960 --> 00:53:16,880
it doesn't tie closely enough to the

1322
00:53:16,880 --> 00:53:18,079
media to be useful

1323
00:53:18,079 --> 00:53:20,240
in my view but i i mean probably

1324
00:53:20,240 --> 00:53:23,040
exceptional on that

1325
00:53:24,960 --> 00:53:29,119
thank you judges

1326
00:53:29,119 --> 00:53:32,319
so um i'd like to argue in favor of

1327
00:53:32,319 --> 00:53:33,839
heartbeats

1328
00:53:33,839 --> 00:53:36,800
so coming back to the academic use case

1329
00:53:36,800 --> 00:53:38,720
there is this common situation in which

1330
00:53:38,720 --> 00:53:40,839
you have 100 students waiting for a

1331
00:53:40,839 --> 00:53:42,800
lecture and the students

1332
00:53:42,800 --> 00:53:45,359
want to have positive confirmation at

1333
00:53:45,359 --> 00:53:46,160
the beginning

1334
00:53:46,160 --> 00:53:48,079
of the lecture that their connection is

1335
00:53:48,079 --> 00:53:50,480
working fine so if they somehow get

1336
00:53:50,480 --> 00:53:52,160
kicked out from the network

1337
00:53:52,160 --> 00:53:54,160
they need to be notified of that in a

1338
00:53:54,160 --> 00:53:56,240
timely manner even if no media

1339
00:53:56,240 --> 00:53:58,720
is flowing yet on the other hand the

1340
00:53:58,720 --> 00:54:00,480
lecturer wants to know

1341
00:54:00,480 --> 00:54:02,319
if say half of the students in your

1342
00:54:02,319 --> 00:54:04,960
lecture theater suddenly got kicked out

1343
00:54:04,960 --> 00:54:08,160
some time notification of sessions

1344
00:54:08,160 --> 00:54:09,119
dropping

1345
00:54:09,119 --> 00:54:10,720
is something that we have found to be

1346
00:54:10,720 --> 00:54:12,560
extremely useful

1347
00:54:12,560 --> 00:54:15,690
[Music]

1348
00:54:19,040 --> 00:54:21,599
sergio

1349
00:54:22,839 --> 00:54:25,280
yeah just talking about her bits not

1350
00:54:25,280 --> 00:54:27,040
about bullying because if we have long

1351
00:54:27,040 --> 00:54:27,760
pulling we

1352
00:54:27,760 --> 00:54:31,920
probably need hair bits anyway but

1353
00:54:32,640 --> 00:54:36,480
we need to implement a media timeout

1354
00:54:36,480 --> 00:54:39,520
from the media so i don't know why we

1355
00:54:39,520 --> 00:54:41,280
need

1356
00:54:41,280 --> 00:54:44,079
to do this twice in the signaling plane

1357
00:54:44,079 --> 00:54:44,960
and

1358
00:54:44,960 --> 00:54:46,400
in the media server because the media

1359
00:54:46,400 --> 00:54:48,319
server already has to do ice content

1360
00:54:48,319 --> 00:54:51,760
fresnos that will time out this noise

1361
00:54:51,760 --> 00:54:53,760
received so you have to take that into

1362
00:54:53,760 --> 00:54:55,200
account

1363
00:54:55,200 --> 00:54:58,640
and i don't see what extra value has

1364
00:54:58,640 --> 00:55:01,359
the this hair bit to the signaling plane

1365
00:55:01,359 --> 00:55:04,480
provide over the media her bit because

1366
00:55:04,480 --> 00:55:07,760
if the ice is same because for example

1367
00:55:07,760 --> 00:55:08,240
like

1368
00:55:08,240 --> 00:55:12,400
whatever happens to your encoder and

1369
00:55:12,400 --> 00:55:15,280
and the media is is is has stopped

1370
00:55:15,280 --> 00:55:16,480
flowing on the ice

1371
00:55:16,480 --> 00:55:20,160
is of completely well you are getting

1372
00:55:20,160 --> 00:55:21,760
her bits for the signaling plane but

1373
00:55:21,760 --> 00:55:24,559
then the media is not flowing and

1374
00:55:24,559 --> 00:55:26,880
you have to you must handle this

1375
00:55:26,880 --> 00:55:27,760
situation so

1376
00:55:27,760 --> 00:55:30,799
you already need to support that i know

1377
00:55:30,799 --> 00:55:32,000
sure exactly what

1378
00:55:32,000 --> 00:55:34,799
uh does the the herbitore the signaling

1379
00:55:34,799 --> 00:55:36,799
plane provides over the media

1380
00:55:36,799 --> 00:55:40,160
the habit

1381
00:55:42,079 --> 00:55:43,680
and there is the second problem you

1382
00:55:43,680 --> 00:55:45,359
mentioned before that you had in

1383
00:55:45,359 --> 00:55:46,559
production where

1384
00:55:46,559 --> 00:55:48,480
the signaling plane was separated from

1385
00:55:48,480 --> 00:55:49,760
the media plane

1386
00:55:49,760 --> 00:55:52,319
the signaling routing will be down but

1387
00:55:52,319 --> 00:55:54,160
the media would be flowing

1388
00:55:54,160 --> 00:55:56,559
and if we had a herbit on the on the

1389
00:55:56,559 --> 00:55:57,760
signaling plane would

1390
00:55:57,760 --> 00:56:00,799
would be breaking down a media station

1391
00:56:00,799 --> 00:56:02,799
that is actually working

1392
00:56:02,799 --> 00:56:05,119
um did i take the note correctly from

1393
00:56:05,119 --> 00:56:06,480
your previous comment

1394
00:56:06,480 --> 00:56:10,000
yeah yeah that's exactly the case so

1395
00:56:10,000 --> 00:56:11,680
the i mean your network can decide

1396
00:56:11,680 --> 00:56:12,880
whether it's going to tear the session

1397
00:56:12,880 --> 00:56:13,599
down

1398
00:56:13,599 --> 00:56:16,480
on the failure of a heartbeat right or

1399
00:56:16,480 --> 00:56:18,079
are you concerned that the client will

1400
00:56:18,079 --> 00:56:19,200
be heartbeating somehow

1401
00:56:19,200 --> 00:56:21,040
lose the ability to contact the server

1402
00:56:21,040 --> 00:56:22,319
and then tear down the media session as

1403
00:56:22,319 --> 00:56:23,920
a consequence

1404
00:56:23,920 --> 00:56:28,319
both okay

1405
00:56:29,680 --> 00:56:31,440
i mean because we have we have got

1406
00:56:31,440 --> 00:56:34,160
problems with nginx being overflowed and

1407
00:56:34,160 --> 00:56:37,280
hair bits and just

1408
00:56:37,280 --> 00:56:40,880
stop for several one minutes something

1409
00:56:40,880 --> 00:56:41,760
like that then

1410
00:56:41,760 --> 00:56:43,920
all the media all the media stations

1411
00:56:43,920 --> 00:56:45,599
were dropped because we have a heart

1412
00:56:45,599 --> 00:56:47,040
rate in the in the signal and plane but

1413
00:56:47,040 --> 00:56:48,880
the media was perfect so we have all the

1414
00:56:48,880 --> 00:56:50,640
sessions tear down because

1415
00:56:50,640 --> 00:56:52,720
that problem in the nginx that was not

1416
00:56:52,720 --> 00:56:55,040
even the media plane

1417
00:56:55,040 --> 00:56:57,119
okay so basically you're putting forth

1418
00:56:57,119 --> 00:56:58,720
uh a requirement that

1419
00:56:58,720 --> 00:57:00,640
the session should be able to survive a

1420
00:57:00,640 --> 00:57:02,319
failure of the signaling

1421
00:57:02,319 --> 00:57:05,280
channel okay that if that's the case we

1422
00:57:05,280 --> 00:57:07,040
should probably document that um

1423
00:57:07,040 --> 00:57:09,440
as a as a constraint on the on the

1424
00:57:09,440 --> 00:57:10,480
solution

1425
00:57:10,480 --> 00:57:13,200
yeah i mean in my original play in my

1426
00:57:13,200 --> 00:57:15,119
original proposal i didn't have a signal

1427
00:57:15,119 --> 00:57:15,760
in

1428
00:57:15,760 --> 00:57:17,920
session established so i didn't have to

1429
00:57:17,920 --> 00:57:19,839
to handle that use case but

1430
00:57:19,839 --> 00:57:22,880
i think that all right well sergio what

1431
00:57:22,880 --> 00:57:25,119
is saying is you want to explicitly

1432
00:57:25,119 --> 00:57:27,359
write it down as one of the requirements

1433
00:57:27,359 --> 00:57:29,839
while it was in implicitly a feature of

1434
00:57:29,839 --> 00:57:32,240
your proposed solution before

1435
00:57:32,240 --> 00:57:35,119
yeah nowhere you have written i would

1436
00:57:35,119 --> 00:57:37,119
love this the signaling session

1437
00:57:37,119 --> 00:57:40,400
to survive in case uh in case it's

1438
00:57:40,400 --> 00:57:42,400
broken and the media is still flowing

1439
00:57:42,400 --> 00:57:44,640
right

1440
00:57:46,640 --> 00:57:47,760
right now i just want a services

1441
00:57:47,760 --> 00:57:48,960
requirement so that we can make certain

1442
00:57:48,960 --> 00:57:50,160
that we have

1443
00:57:50,160 --> 00:57:54,160
a conversation around it um

1444
00:57:54,160 --> 00:57:56,079
could somebody restate that requirement

1445
00:57:56,079 --> 00:57:57,200
because i'm i'm

1446
00:57:57,200 --> 00:58:00,240
like got slightly lost in my notes so in

1447
00:58:00,240 --> 00:58:01,359
my own it would be

1448
00:58:01,359 --> 00:58:04,640
yeah yeah go ahead at them

1449
00:58:04,640 --> 00:58:06,880
the requirement would be that the media

1450
00:58:06,880 --> 00:58:09,040
session can survive

1451
00:58:09,040 --> 00:58:23,839
a failure of the signaling layer

1452
00:58:30,160 --> 00:58:31,920
you know i i think that part of what's

1453
00:58:31,920 --> 00:58:33,520
causing the confusion here is maybe this

1454
00:58:33,520 --> 00:58:34,400
would

1455
00:58:34,400 --> 00:58:36,559
we're talking about a specific mechanism

1456
00:58:36,559 --> 00:58:38,000
to support a signaling channel

1457
00:58:38,000 --> 00:58:40,240
but i think some of us are not 100 clear

1458
00:58:40,240 --> 00:58:41,760
on what the signaling channel is used

1459
00:58:41,760 --> 00:58:42,160
for

1460
00:58:42,160 --> 00:58:44,960
after this initial setup of of the call

1461
00:58:44,960 --> 00:58:45,680
i mean even the

1462
00:58:45,680 --> 00:58:48,079
the buy or what like maybe that's we

1463
00:58:48,079 --> 00:58:49,440
just got our ordering a little bit wrong

1464
00:58:49,440 --> 00:58:51,040
here of that if we

1465
00:58:51,040 --> 00:58:54,400
looked at you know why do we need a

1466
00:58:54,400 --> 00:58:56,000
a signaling buy could we just use a

1467
00:58:56,000 --> 00:58:57,760
media one what are the other signaling

1468
00:58:57,760 --> 00:58:59,359
mechanisms that we need

1469
00:58:59,359 --> 00:59:01,440
let me call it mid-call for a lack of a

1470
00:59:01,440 --> 00:59:02,559
better word i know that's not the right

1471
00:59:02,559 --> 00:59:03,599
way to phrase it but

1472
00:59:03,599 --> 00:59:06,880
you know what i mean by it um

1473
00:59:06,880 --> 00:59:08,240
once we understood what we were trying

1474
00:59:08,240 --> 00:59:09,599
to use it for then i think we would

1475
00:59:09,599 --> 00:59:10,880
understand what reliability

1476
00:59:10,880 --> 00:59:12,720
characteristics we needed of it better

1477
00:59:12,720 --> 00:59:14,799
and then we could discuss how a

1478
00:59:14,799 --> 00:59:16,559
heartbeat mechanism may or may not be

1479
00:59:16,559 --> 00:59:17,280
needed to

1480
00:59:17,280 --> 00:59:19,119
meet those reliability characteristics

1481
00:59:19,119 --> 00:59:21,119
does that make sense it's just a way of

1482
00:59:21,119 --> 00:59:23,119
thinking about it

1483
00:59:23,119 --> 00:59:24,880
that's fair and we get to some of the

1484
00:59:24,880 --> 00:59:26,319
operations here i think in one or two

1485
00:59:26,319 --> 00:59:28,079
slides the one thing that i want to hold

1486
00:59:28,079 --> 00:59:28,799
out

1487
00:59:28,799 --> 00:59:32,000
as something to be aware of is because

1488
00:59:32,000 --> 00:59:34,960
we might want to have new operations in

1489
00:59:34,960 --> 00:59:35,599
the future

1490
00:59:35,599 --> 00:59:36,960
casting back the extensibility

1491
00:59:36,960 --> 00:59:39,440
discussion uh we have to consider this

1492
00:59:39,440 --> 00:59:41,040
an initial set and not a closed

1493
00:59:41,040 --> 00:59:44,319
set right

1494
00:59:45,359 --> 00:59:47,839
yeah totally

1495
00:59:50,000 --> 00:59:52,720
okay seeing the queue empty i guess we

1496
00:59:52,720 --> 00:59:55,118
go on

1497
00:59:55,440 --> 00:59:58,559
um so yeah i guess it was it was two

1498
00:59:58,559 --> 00:59:59,599
slides in the future we're going to talk

1499
00:59:59,599 --> 01:00:01,280
about specific operations but the

1500
01:00:01,280 --> 01:00:03,839
in terms of two-way communications uh we

1501
01:00:03,839 --> 01:00:04,400
do

1502
01:00:04,400 --> 01:00:06,000
minimally want the ability for the

1503
01:00:06,000 --> 01:00:07,599
server to

1504
01:00:07,599 --> 01:00:10,400
terminate a session um and i suppose if

1505
01:00:10,400 --> 01:00:11,599
we're going to the

1506
01:00:11,599 --> 01:00:15,440
the prospect of using

1507
01:00:15,440 --> 01:00:17,680
media level heartbeats then we can use

1508
01:00:17,680 --> 01:00:20,000
media level termination for this i

1509
01:00:20,000 --> 01:00:22,400
still have some pretty strong

1510
01:00:22,400 --> 01:00:24,880
reservations about that approach

1511
01:00:24,880 --> 01:00:26,559
but if we assume that we're using

1512
01:00:26,559 --> 01:00:28,000
signaling for

1513
01:00:28,000 --> 01:00:31,440
session control here then

1514
01:00:31,440 --> 01:00:33,839
we want to be able to terminate a

1515
01:00:33,839 --> 01:00:35,200
session

1516
01:00:35,200 --> 01:00:38,240
from the server back to the client

1517
01:00:38,240 --> 01:00:40,240
and there are a couple approaches that

1518
01:00:40,240 --> 01:00:41,520
we could do here the one is

1519
01:00:41,520 --> 01:00:44,559
um sending server to client operations

1520
01:00:44,559 --> 01:00:45,839
in heartbeat responses

1521
01:00:45,839 --> 01:00:47,599
now we're assuming under that that we

1522
01:00:47,599 --> 01:00:50,079
would have heartbeats in the first place

1523
01:00:50,079 --> 01:00:51,440
um and there are a couple of different

1524
01:00:51,440 --> 01:00:53,280
ways that we could do this one would be

1525
01:00:53,280 --> 01:00:54,960
to have the server wait for a heartbeat

1526
01:00:54,960 --> 01:00:56,000
and if we have a relatively

1527
01:00:56,000 --> 01:00:57,839
frequent heartbeat cadence then this

1528
01:00:57,839 --> 01:00:59,440
isn't that big of a deal in terms of

1529
01:00:59,440 --> 01:01:00,319
having to have the

1530
01:01:00,319 --> 01:01:02,319
server have to wait up to again if we

1531
01:01:02,319 --> 01:01:03,680
use say 15 seconds as

1532
01:01:03,680 --> 01:01:06,880
a straw man here wait up to 15 seconds

1533
01:01:06,880 --> 01:01:08,160
to be able to send an operation to the

1534
01:01:08,160 --> 01:01:09,200
client that's not

1535
01:01:09,200 --> 01:01:11,920
terrible um and the other approach that

1536
01:01:11,920 --> 01:01:12,799
we discussed

1537
01:01:12,799 --> 01:01:14,960
briefly on the list is having some kind

1538
01:01:14,960 --> 01:01:16,480
of uh long pull

1539
01:01:16,480 --> 01:01:18,400
for the heartbeats where the the client

1540
01:01:18,400 --> 01:01:20,799
would send a heartbeat and then wait

1541
01:01:20,799 --> 01:01:25,839
uh on

1542
01:01:36,880 --> 01:01:39,760
just lost adam's audio uh which makes

1543
01:01:39,760 --> 01:01:41,359
note taking tricky

1544
01:01:41,359 --> 01:01:42,799
yeah i think he's on his way back down

1545
01:01:42,799 --> 01:01:44,160
we can see your lips moving at him but

1546
01:01:44,160 --> 01:01:52,079
we can't hear you

1547
01:01:52,079 --> 01:01:55,280
there we go am i back on

1548
01:01:56,160 --> 01:01:58,480
yes can you hear me sean okay good yeah

1549
01:01:58,480 --> 01:02:00,160
meat echo just told me that disconnected

1550
01:02:00,160 --> 01:02:01,599
reconnected my audio

1551
01:02:01,599 --> 01:02:04,839
i apologize where was i when that cut

1552
01:02:04,839 --> 01:02:07,760
out

1553
01:02:07,760 --> 01:02:09,520
don't worry the slides were gone from

1554
01:02:09,520 --> 01:02:12,160
the chair as well so

1555
01:02:12,160 --> 01:02:16,799
you're good we're had just explained

1556
01:02:16,799 --> 01:02:18,480
you were just you'd set the words long

1557
01:02:18,480 --> 01:02:19,760
pole and you were just sort of

1558
01:02:19,760 --> 01:02:20,799
explaining these

1559
01:02:20,799 --> 01:02:24,400
various approaches is where we lost you

1560
01:02:24,400 --> 01:02:26,400
okay good um so i got i got through most

1561
01:02:26,400 --> 01:02:27,760
of that then the other approach would be

1562
01:02:27,760 --> 01:02:28,559
to have

1563
01:02:28,559 --> 01:02:30,079
effectively a long pole where the

1564
01:02:30,079 --> 01:02:32,559
heartbeat transaction would

1565
01:02:32,559 --> 01:02:34,240
pend basically for the duration of the

1566
01:02:34,240 --> 01:02:35,760
heartbeat and then the server would

1567
01:02:35,760 --> 01:02:38,000
respond with you know either a 200 to

1568
01:02:38,000 --> 01:02:39,119
the heartbeat and the

1569
01:02:39,119 --> 01:02:40,319
says the client would turn around and

1570
01:02:40,319 --> 01:02:42,799
initiate another one right away um or if

1571
01:02:42,799 --> 01:02:44,559
the server wanted to send an operation

1572
01:02:44,559 --> 01:02:45,359
it could

1573
01:02:45,359 --> 01:02:47,760
send that that response earlier in the

1574
01:02:47,760 --> 01:02:49,839
cycle so as to get the operation of the

1575
01:02:49,839 --> 01:02:50,480
client

1576
01:02:50,480 --> 01:02:53,280
as soon as possible the other approach

1577
01:02:53,280 --> 01:02:53,920
um

1578
01:02:53,920 --> 01:02:57,200
and this sort of ties back to what uh

1579
01:02:57,200 --> 01:03:00,160
mike was saying is that we could have a

1580
01:03:00,160 --> 01:03:01,760
persistent channel setup like a

1581
01:03:01,760 --> 01:03:03,359
websocket or a data channel or something

1582
01:03:03,359 --> 01:03:04,720
that we could send these

1583
01:03:04,720 --> 01:03:07,760
operations back to the client on

1584
01:03:07,760 --> 01:03:11,440
and i know we should have a queue now

1585
01:03:12,880 --> 01:03:17,839
yes we do the usual suspect column

1586
01:03:20,799 --> 01:03:23,280
i i i mean i think it's sort of been

1587
01:03:23,280 --> 01:03:25,280
mentioned by other people but i i don't

1588
01:03:25,280 --> 01:03:27,119
if we need these types of things i think

1589
01:03:27,119 --> 01:03:28,799
that like if we need

1590
01:03:28,799 --> 01:03:30,799
mid-call signaling initiated from the

1591
01:03:30,799 --> 01:03:32,319
server to

1592
01:03:32,319 --> 01:03:35,359
the client or or notification of things

1593
01:03:35,359 --> 01:03:37,119
it's very unlikely that a 15-second

1594
01:03:37,119 --> 01:03:38,559
delay is going to be okay from an

1595
01:03:38,559 --> 01:03:40,079
extensibility model to the type of stuff

1596
01:03:40,079 --> 01:03:41,039
you'd want to do that

1597
01:03:41,039 --> 01:03:43,440
i'm not sure we need it at all but like

1598
01:03:43,440 --> 01:03:45,440
really this looks like

1599
01:03:45,440 --> 01:03:47,200
i this looks like one of the hackiest

1600
01:03:47,200 --> 01:03:49,039
worst ways to do notifications to

1601
01:03:49,039 --> 01:03:50,559
clients i can imagine i think we should

1602
01:03:50,559 --> 01:03:51,920
use something architectural a little

1603
01:03:51,920 --> 01:03:53,440
cleaner if we decide there's a need for

1604
01:03:53,440 --> 01:03:54,240
this

1605
01:03:54,240 --> 01:03:55,680
and like we don't need to discuss it

1606
01:03:55,680 --> 01:03:57,440
just their file like like hey

1607
01:03:57,440 --> 01:03:59,520
opinions vary whatever but i think as we

1608
01:03:59,520 --> 01:04:01,280
come clear what we need it's

1609
01:04:01,280 --> 01:04:05,280
fair to do it and i mean data channel

1610
01:04:05,280 --> 01:04:06,960
um i mean it seems like we have lots of

1611
01:04:06,960 --> 01:04:08,559
options available i mean

1612
01:04:08,559 --> 01:04:09,839
seems like there's better ways to skin

1613
01:04:09,839 --> 01:04:11,680
this cap but we're discussing about the

1614
01:04:11,680 --> 01:04:12,000
exact

1615
01:04:12,000 --> 01:04:13,520
details of how to move the bits on the

1616
01:04:13,520 --> 01:04:15,119
wire when really we should be discussing

1617
01:04:15,119 --> 01:04:16,640
the semantics of what information we

1618
01:04:16,640 --> 01:04:18,319
need to flow between the

1619
01:04:18,319 --> 01:04:21,200
the server and the client

1620
01:04:21,839 --> 01:04:23,920
okay so that's just that's an ordering

1621
01:04:23,920 --> 01:04:26,240
comment effectively there

1622
01:04:26,240 --> 01:04:27,680
okay so we can we can return to this

1623
01:04:27,680 --> 01:04:29,359
then after we have a better uh

1624
01:04:29,359 --> 01:04:31,039
better notion of exactly what it is that

1625
01:04:31,039 --> 01:04:32,880
we want to accomplish

1626
01:04:32,880 --> 01:04:38,319
um we have mike in the queue

1627
01:04:38,319 --> 01:04:42,799
oh mike i just wanted to kind of echo

1628
01:04:42,799 --> 01:04:45,760
comment that i i think uh we have some

1629
01:04:45,760 --> 01:04:47,200
semantics questions

1630
01:04:47,200 --> 01:04:50,000
to grapple with um before we get into

1631
01:04:50,000 --> 01:04:50,880
the

1632
01:04:50,880 --> 01:04:54,720
implementation details of bits on wire

1633
01:04:54,720 --> 01:04:56,079
you know kind of outlining the

1634
01:04:56,079 --> 01:04:57,680
participants and some of these different

1635
01:04:57,680 --> 01:05:00,960
constraints that we've talked about

1636
01:05:00,960 --> 01:05:04,480
it may be worth kind of surveying the

1637
01:05:04,480 --> 01:05:05,599
status quo

1638
01:05:05,599 --> 01:05:09,440
of you know what does a browser-based

1639
01:05:09,440 --> 01:05:12,960
uh ingest session look like today

1640
01:05:12,960 --> 01:05:16,319
um and then how do we envision you know

1641
01:05:16,319 --> 01:05:19,960
the participants of a

1642
01:05:19,960 --> 01:05:23,359
non-browser-based session having

1643
01:05:23,359 --> 01:05:27,359
different constraints

1644
01:05:28,160 --> 01:05:30,559
and that would necessitate changes from

1645
01:05:30,559 --> 01:05:36,160
you know what's done today

1646
01:05:36,160 --> 01:05:37,359
so do you want to comment on what those

1647
01:05:37,359 --> 01:05:40,078
constraints might be

1648
01:05:41,200 --> 01:05:44,559
i mean sorry i may have lost my army uh

1649
01:05:44,559 --> 01:05:46,799
i guess uh one of the big ones is you

1650
01:05:46,799 --> 01:05:47,839
know

1651
01:05:47,839 --> 01:05:51,119
why not websockets right like

1652
01:05:51,119 --> 01:05:52,799
you know it's come up before i let you

1653
01:05:52,799 --> 01:05:55,039
know we think we can

1654
01:05:55,039 --> 01:05:57,200
you know get away from this complexity

1655
01:05:57,200 --> 01:05:58,160
but if

1656
01:05:58,160 --> 01:06:01,359
if we have um need for

1657
01:06:01,359 --> 01:06:03,760
session management and this two-way

1658
01:06:03,760 --> 01:06:05,680
communication

1659
01:06:05,680 --> 01:06:07,039
we're gonna want some kind of persistent

1660
01:06:07,039 --> 01:06:09,599
channel um

1661
01:06:09,599 --> 01:06:12,319
so i think there's i guess there's two

1662
01:06:12,319 --> 01:06:13,119
things then

1663
01:06:13,119 --> 01:06:15,760
um you know one would be you know new

1664
01:06:15,760 --> 01:06:16,720
constraints

1665
01:06:16,720 --> 01:06:18,880
that come from this different

1666
01:06:18,880 --> 01:06:20,240
environment um

1667
01:06:20,240 --> 01:06:22,240
which is you know encoders that are are

1668
01:06:22,240 --> 01:06:24,640
not browser based

1669
01:06:24,640 --> 01:06:28,240
and two would be um

1670
01:06:28,240 --> 01:06:31,520
assumptions that we could make about

1671
01:06:31,520 --> 01:06:32,640
this context

1672
01:06:32,640 --> 01:06:36,480
where we can uh cull some complexity

1673
01:06:36,480 --> 01:06:39,359
uh so things like you know trimming down

1674
01:06:39,359 --> 01:06:40,799
what we need ice to do

1675
01:06:40,799 --> 01:06:43,599
if we can assume that the server side

1676
01:06:43,599 --> 01:06:45,119
has public ip

1677
01:06:45,119 --> 01:06:47,280
i think we can also you know say similar

1678
01:06:47,280 --> 01:06:48,960
things like if we assume that an encoder

1679
01:06:48,960 --> 01:06:49,520
is

1680
01:06:49,520 --> 01:06:53,039
only doing this uh you know

1681
01:06:53,039 --> 01:06:55,920
we may be able to remove some complexity

1682
01:06:55,920 --> 01:06:57,119
there so

1683
01:06:57,119 --> 01:06:59,760
but i think that's maybe the level of

1684
01:06:59,760 --> 01:07:01,440
the discussion that we need to have

1685
01:07:01,440 --> 01:07:05,280
before we get into websockets or data

1686
01:07:05,280 --> 01:07:06,240
channels or

1687
01:07:06,240 --> 01:07:09,119
you know long polling or whatever

1688
01:07:09,119 --> 01:07:11,839
actually makes sense

1689
01:07:11,839 --> 01:07:15,839
okay all right

1690
01:07:18,319 --> 01:07:22,559
tim yeah i think we need to think about

1691
01:07:22,559 --> 01:07:24,319
who the audience is for this

1692
01:07:24,319 --> 01:07:27,200
um like one of the things that isn't in

1693
01:07:27,200 --> 01:07:28,880
the charter and maybe should be is the

1694
01:07:28,880 --> 01:07:30,160
explicit goal from my

1695
01:07:30,160 --> 01:07:32,400
point of view is that like somebody

1696
01:07:32,400 --> 01:07:34,400
who's uh who is

1697
01:07:34,400 --> 01:07:37,119
building a web service at the moment

1698
01:07:37,119 --> 01:07:37,599
that is

1699
01:07:37,599 --> 01:07:41,119
happily using like rtmp should be happy

1700
01:07:41,119 --> 01:07:42,880
to pick this up and shouldn't get the oh

1701
01:07:42,880 --> 01:07:45,359
god it's webrtc i don't want to touch it

1702
01:07:45,359 --> 01:07:48,480
feeling and and you can like frown at

1703
01:07:48,480 --> 01:07:50,000
that but it's a real perception you'll

1704
01:07:50,000 --> 01:07:50,960
get from

1705
01:07:50,960 --> 01:07:53,440
a ton of web developers so the less

1706
01:07:53,440 --> 01:07:55,599
likely what you see this looks the more

1707
01:07:55,599 --> 01:07:57,520
likely they will sign up for it

1708
01:07:57,520 --> 01:07:59,440
and i think it's kind of hard to put

1709
01:07:59,440 --> 01:08:00,640
that in the charter but

1710
01:08:00,640 --> 01:08:04,078
i really think that should be a goal

1711
01:08:08,839 --> 01:08:10,079
here

1712
01:08:10,079 --> 01:08:12,160
can can you put back the the charter

1713
01:08:12,160 --> 01:08:14,079
slice

1714
01:08:14,079 --> 01:08:24,080
the scope

1715
01:08:24,080 --> 01:08:26,560
so the scope of the working group is a

1716
01:08:26,560 --> 01:08:30,080
signaling protocol for webrtc based

1717
01:08:30,080 --> 01:08:33,120
audio visualization right so and

1718
01:08:33,120 --> 01:08:34,880
we said at the beginning with shan we do

1719
01:08:34,880 --> 01:08:36,880
not want to reinvent without this here

1720
01:08:36,880 --> 01:08:38,158
to strip it down so we

1721
01:08:38,158 --> 01:08:41,520
can make a good point we might want to

1722
01:08:41,520 --> 01:08:44,319
go into the webrtc spec and define it we

1723
01:08:44,319 --> 01:08:45,679
better what we want

1724
01:08:45,679 --> 01:08:47,520
but one of the things we absolutely do

1725
01:08:47,520 --> 01:08:49,279
not want is

1726
01:08:49,279 --> 01:08:51,600
to challenge eyes to challenge accept to

1727
01:08:51,600 --> 01:08:53,839
challenge sdp offer answer as a way to

1728
01:08:53,839 --> 01:08:56,238
negotiate the media type and the encoder

1729
01:08:56,238 --> 01:08:57,198
and the decoder

1730
01:08:57,198 --> 01:08:59,359
and things like that otherwise we go

1731
01:08:59,359 --> 01:09:00,399
down

1732
01:09:00,399 --> 01:09:02,158
that way about you see we want to be

1733
01:09:02,158 --> 01:09:04,238
able to navigate between

1734
01:09:04,238 --> 01:09:06,799
possibly the optionality of webrtc like

1735
01:09:06,799 --> 01:09:07,759
we have a different

1736
01:09:07,759 --> 01:09:11,040
uh ietf document for the non-browser

1737
01:09:11,040 --> 01:09:14,640
for the gateway that explains all ice is

1738
01:09:14,640 --> 01:09:15,198
different

1739
01:09:15,198 --> 01:09:17,520
in that case for the implementation so i

1740
01:09:17,520 --> 01:09:18,479
think we

1741
01:09:18,479 --> 01:09:20,399
we all agree that we need to go a little

1742
01:09:20,399 --> 01:09:22,719
bit deeper in into what we mean

1743
01:09:22,719 --> 01:09:25,520
but big fundamental change to to to the

1744
01:09:25,520 --> 01:09:27,920
core of webrtc will definitely not be in

1745
01:09:27,920 --> 01:09:28,799
scope

1746
01:09:28,799 --> 01:09:32,799
explicitly sorry if if i gave that

1747
01:09:32,799 --> 01:09:34,158
impression that wasn't what i meant

1748
01:09:34,158 --> 01:09:36,158
it is obviously going to be web otc

1749
01:09:36,158 --> 01:09:37,920
based and i don't want

1750
01:09:37,920 --> 01:09:39,759
to say anything different there but what

1751
01:09:39,759 --> 01:09:41,679
i do want to say is that

1752
01:09:41,679 --> 01:09:45,359
a web developer who picks it up

1753
01:09:45,359 --> 01:09:47,439
shouldn't be smacked in the face with a

1754
01:09:47,439 --> 01:09:49,759
huge ton of webrtc-ness

1755
01:09:49,759 --> 01:09:51,839
um and there's a distinction there so

1756
01:09:51,839 --> 01:09:53,520
that the more we can

1757
01:09:53,520 --> 01:09:55,920
cover up the webrtcness and the more we

1758
01:09:55,920 --> 01:09:57,520
can make it invisible

1759
01:09:57,520 --> 01:10:00,640
the more adoption we'll get and i think

1760
01:10:00,640 --> 01:10:01,120
that's

1761
01:10:01,120 --> 01:10:03,199
that's that's that's what i'm trying to

1762
01:10:03,199 --> 01:10:06,159
say there's a goal there

1763
01:10:06,239 --> 01:10:08,159
can you make that concrete like how

1764
01:10:08,159 --> 01:10:09,760
would that bear on our decision-making

1765
01:10:09,760 --> 01:10:12,400
process here

1766
01:10:13,679 --> 01:10:18,320
um so i think the moment you have a

1767
01:10:18,320 --> 01:10:21,600
side channel that can do uh

1768
01:10:21,600 --> 01:10:24,080
stuff then you've strayed away from the

1769
01:10:24,080 --> 01:10:25,920
rtmp model where

1770
01:10:25,920 --> 01:10:28,239
like you set it up and it keeps running

1771
01:10:28,239 --> 01:10:30,080
and it so if the side channel is the

1772
01:10:30,080 --> 01:10:31,920
signaling channel is required

1773
01:10:31,920 --> 01:10:34,080
then you've strayed away from the rtmp

1774
01:10:34,080 --> 01:10:37,040
layer you look at rtsp and rtmp and

1775
01:10:37,040 --> 01:10:37,840
things like that

1776
01:10:37,840 --> 01:10:39,760
you set it up you fire it up and once

1777
01:10:39,760 --> 01:10:41,120
it's going it goes

1778
01:10:41,120 --> 01:10:44,320
or it dies but that's like there's no

1779
01:10:44,320 --> 01:10:45,679
there's not a great day lost that

1780
01:10:45,679 --> 01:10:48,159
happens and and i think

1781
01:10:48,159 --> 01:10:50,719
sticking with that model would be make

1782
01:10:50,719 --> 01:10:53,679
people's life easier

1783
01:10:54,239 --> 01:10:59,839
okay thanks

1784
01:10:59,920 --> 01:11:03,679
search using the queue as well sorry i i

1785
01:11:03,679 --> 01:11:04,719
agree with him in that

1786
01:11:04,719 --> 01:11:07,280
that we should not over engineer things

1787
01:11:07,280 --> 01:11:07,760
i mean

1788
01:11:07,760 --> 01:11:11,360
we are idf and we like to do that but

1789
01:11:11,360 --> 01:11:14,400
i think that people is happy

1790
01:11:14,400 --> 01:11:17,600
implementing rtmp and the functionality

1791
01:11:17,600 --> 01:11:19,679
that rtmp is

1792
01:11:19,679 --> 01:11:23,040
is very limited and

1793
01:11:23,040 --> 01:11:25,600
i've struggled to think that we should

1794
01:11:25,600 --> 01:11:27,360
implement much more than what our tmp

1795
01:11:27,360 --> 01:11:28,159
does

1796
01:11:28,159 --> 01:11:30,159
to cover the same use case that they are

1797
01:11:30,159 --> 01:11:31,760
doing i mean if we can't

1798
01:11:31,760 --> 01:11:33,760
at things that that most complexity in

1799
01:11:33,760 --> 01:11:35,199
add value

1800
01:11:35,199 --> 01:11:37,920
we should definitely go for it but i'm

1801
01:11:37,920 --> 01:11:39,120
reluctant to implement

1802
01:11:39,120 --> 01:11:42,400
stuff that it is not really proven to be

1803
01:11:42,400 --> 01:11:45,840
a mass because it's feature that we add

1804
01:11:45,840 --> 01:11:48,159
even after optional to the spec is going

1805
01:11:48,159 --> 01:11:50,000
to be less likely that it is going to be

1806
01:11:50,000 --> 01:11:55,840
implemented for example in ffp mp

1807
01:12:06,840 --> 01:12:09,440
mike

1808
01:12:09,440 --> 01:12:12,480
mike you're in your queue

1809
01:12:12,480 --> 01:12:16,320
yes uh so i think um

1810
01:12:16,320 --> 01:12:18,560
i think what timothy is trying to

1811
01:12:18,560 --> 01:12:19,360
articulate

1812
01:12:19,360 --> 01:12:22,800
is um rtmp not necessarily as

1813
01:12:22,800 --> 01:12:25,679
a complete set of functionality that we

1814
01:12:25,679 --> 01:12:26,880
need to emulate here

1815
01:12:26,880 --> 01:12:30,159
but more as an example of the type of

1816
01:12:30,159 --> 01:12:30,880
use case

1817
01:12:30,880 --> 01:12:33,440
that we're going to be attempting to

1818
01:12:33,440 --> 01:12:35,600
translate onto

1819
01:12:35,600 --> 01:12:38,800
webrtc because uh

1820
01:12:38,800 --> 01:12:41,040
we have some some benefits from using

1821
01:12:41,040 --> 01:12:42,239
webrtc

1822
01:12:42,239 --> 01:12:46,960
rather than rtmp um and so

1823
01:12:46,960 --> 01:12:49,040
if we can kind of like articulate like

1824
01:12:49,040 --> 01:12:50,560
today for example

1825
01:12:50,560 --> 01:12:53,760
um you know we do webrtc

1826
01:12:53,760 --> 01:12:58,880
broadcast um out to end users

1827
01:12:58,880 --> 01:13:02,000
but the majority of our ingest

1828
01:13:02,000 --> 01:13:06,159
is rtmp um and so we have

1829
01:13:06,159 --> 01:13:09,199
you know overhead from the all the the

1830
01:13:09,199 --> 01:13:10,800
transcoding associated with

1831
01:13:10,800 --> 01:13:14,080
you know taking in rtmp and um

1832
01:13:14,080 --> 01:13:18,320
you know outputting over webrtc

1833
01:13:18,320 --> 01:13:21,440
in cases where we can

1834
01:13:21,440 --> 01:13:24,880
run webrtc natively and end

1835
01:13:24,880 --> 01:13:28,880
everything's a lot cleaner but

1836
01:13:28,880 --> 01:13:32,400
we can't just point ffmpeg at you know

1837
01:13:32,400 --> 01:13:35,360
our injust and say do a bart you know do

1838
01:13:35,360 --> 01:13:36,239
webrtc

1839
01:13:36,239 --> 01:13:39,679
here's your webrtc uri uh

1840
01:13:39,679 --> 01:13:41,760
you know it's a lot simpler for rtmp you

1841
01:13:41,760 --> 01:13:43,199
know on on the

1842
01:13:43,199 --> 01:13:47,120
the encoder side um and i so i think

1843
01:13:47,120 --> 01:13:50,000
what we want to do is stay focused on

1844
01:13:50,000 --> 01:13:50,880
that use case

1845
01:13:50,880 --> 01:13:53,440
and say you know we want to kind of

1846
01:13:53,440 --> 01:13:54,480
basically work

1847
01:13:54,480 --> 01:13:56,159
you know the way that you can just point

1848
01:13:56,159 --> 01:13:58,719
ffmpeg or whatever your encoder is

1849
01:13:58,719 --> 01:14:01,760
at an rtmp endpoint and go

1850
01:14:01,760 --> 01:14:03,120
we want to be able to do that with

1851
01:14:03,120 --> 01:14:06,239
webrtc and not have to require

1852
01:14:06,239 --> 01:14:08,640
getting a whole browser involved just to

1853
01:14:08,640 --> 01:14:09,360
send

1854
01:14:09,360 --> 01:14:15,839
uh av content

1855
01:14:18,080 --> 01:14:20,400
julius you're next in the queue and

1856
01:14:20,400 --> 01:14:22,159
first i'm sorry i'd like to ask you a

1857
01:14:22,159 --> 01:14:26,400
clarification you spoke about your

1858
01:14:26,800 --> 01:14:29,199
academic teaching use case before but

1859
01:14:29,199 --> 01:14:31,120
this is a video conferencing use case

1860
01:14:31,120 --> 01:14:34,480
right this is a many too many

1861
01:14:36,239 --> 01:14:38,480
and

1862
01:14:40,400 --> 01:14:43,839
we don't we're not hearing you yet

1863
01:14:44,159 --> 01:14:47,600
i was thinking about your case which is

1864
01:14:47,600 --> 01:14:52,000
uh one person speaking to 120 students

1865
01:14:52,000 --> 01:14:55,199
and students asking questions usually in

1866
01:14:55,199 --> 01:14:56,719
written form

1867
01:14:56,719 --> 01:14:58,640
which is what we have been doing during

1868
01:14:58,640 --> 01:15:00,159
covered lockdowns

1869
01:15:00,159 --> 01:15:02,400
okay so that's media one way and you

1870
01:15:02,400 --> 01:15:05,360
have a feedback loop through chat

1871
01:15:05,360 --> 01:15:08,719
somewhere in between okay fair enough

1872
01:15:08,719 --> 01:15:11,040
you want to share your screen you said

1873
01:15:11,040 --> 01:15:12,800
no i wanted to uh sorry

1874
01:15:12,800 --> 01:15:16,320
no that's a mistake um i wanted to ask

1875
01:15:16,320 --> 01:15:17,520
one question

1876
01:15:17,520 --> 01:15:21,199
um which is uh

1877
01:15:21,199 --> 01:15:23,600
so i i'm starting to understand sergio's

1878
01:15:23,600 --> 01:15:25,760
point about simplifying the protocol and

1879
01:15:25,760 --> 01:15:27,600
not having a control channel or

1880
01:15:27,600 --> 01:15:28,880
minimizing it

1881
01:15:28,880 --> 01:15:31,040
i'm slowly starting to understand that

1882
01:15:31,040 --> 01:15:33,520
one thing that's not i'm not expecting

1883
01:15:33,520 --> 01:15:35,840
an answer now but that's something

1884
01:15:35,840 --> 01:15:38,640
we should think about if we reduce the

1885
01:15:38,640 --> 01:15:39,760
protocol

1886
01:15:39,760 --> 01:15:42,560
in the way that search just seems to

1887
01:15:42,560 --> 01:15:44,400
envision i'm not sure i'm getting it

1888
01:15:44,400 --> 01:15:45,440
quite yet but

1889
01:15:45,440 --> 01:15:47,920
in that way we need to think what's the

1890
01:15:47,920 --> 01:15:51,679
added value with respect to impact dash

1891
01:15:51,679 --> 01:15:53,679
dash works very well it does

1892
01:15:53,679 --> 01:15:55,440
broadcasting

1893
01:15:55,440 --> 01:15:58,239
and so if we are doing this you know

1894
01:15:58,239 --> 01:16:00,400
shoot and go just streaming the media

1895
01:16:00,400 --> 01:16:02,800
without the control channel does there

1896
01:16:02,800 --> 01:16:03,440
remain

1897
01:16:03,440 --> 01:16:05,280
anything we can do much better than

1898
01:16:05,280 --> 01:16:07,280
compact dash

1899
01:16:07,280 --> 01:16:10,400
well the signaling will be

1900
01:16:10,400 --> 01:16:13,520
maybe similar but the the media stack

1901
01:16:13,520 --> 01:16:16,000
will be completely different

1902
01:16:16,000 --> 01:16:18,400
right so mpeg dash doesn't have any

1903
01:16:18,400 --> 01:16:20,719
feedback mechanism doesn't have all the

1904
01:16:20,719 --> 01:16:24,080
rtcp control and and so on that

1905
01:16:24,080 --> 01:16:26,560
that rtp and we're about to see us so

1906
01:16:26,560 --> 01:16:27,760
there are there are quite some

1907
01:16:27,760 --> 01:16:28,800
difference at the

1908
01:16:28,800 --> 01:16:30,800
media protocol level here we're only

1909
01:16:30,800 --> 01:16:34,960
speaking about the signaling right

1910
01:16:34,960 --> 01:16:37,679
so the question is is a webrtc base

1911
01:16:37,679 --> 01:16:39,520
stack

1912
01:16:39,520 --> 01:16:41,760
does it bring any added value with

1913
01:16:41,760 --> 01:16:43,760
respect to mpeg-dash

1914
01:16:43,760 --> 01:16:46,400
if we no longer have i3 starts if we no

1915
01:16:46,400 --> 01:16:49,520
longer have session control and so on

1916
01:16:49,520 --> 01:16:52,480
i'm not saying it doesn't i know my gut

1917
01:16:52,480 --> 01:16:54,000
feeling is yes but there will be a lot

1918
01:16:54,000 --> 01:16:54,239
of

1919
01:16:54,239 --> 01:16:56,400
opinion i propose we ask that question

1920
01:16:56,400 --> 01:16:58,800
on the mailing list

1921
01:16:58,800 --> 01:17:01,840
so everybody can configure and i think

1922
01:17:01,840 --> 01:17:02,640
that

1923
01:17:02,640 --> 01:17:06,080
is that okay with you choose

1924
01:17:12,250 --> 01:17:13,679
[Applause]

1925
01:17:13,679 --> 01:17:16,159
i just wanted to respond directly to the

1926
01:17:16,159 --> 01:17:17,120
question why not

1927
01:17:17,120 --> 01:17:20,719
um mpeg dash and it's for us it's simply

1928
01:17:20,719 --> 01:17:21,600
latency

1929
01:17:21,600 --> 01:17:25,120
um you know mpeg-dash or hls are good

1930
01:17:25,120 --> 01:17:25,679
options

1931
01:17:25,679 --> 01:17:28,719
for relatively low latency but there are

1932
01:17:28,719 --> 01:17:30,480
use cases that require

1933
01:17:30,480 --> 01:17:32,960
lower latency than that and that's where

1934
01:17:32,960 --> 01:17:34,159
we require something like

1935
01:17:34,159 --> 01:17:45,839
either rtmp or webrtc

1936
01:17:56,960 --> 01:17:58,400
i think he may have just left himself in

1937
01:17:58,400 --> 01:18:00,080
the queue by accident

1938
01:18:00,080 --> 01:18:03,920
all right yep okay

1939
01:18:03,920 --> 01:18:08,159
all right so

1940
01:18:08,159 --> 01:18:13,839
let's go on to the next slide then

1941
01:18:16,960 --> 01:18:19,199
okay so ice management and this is

1942
01:18:19,199 --> 01:18:20,560
probably going to have some

1943
01:18:20,560 --> 01:18:23,520
some lively conversation around it so

1944
01:18:23,520 --> 01:18:24,480
one of

1945
01:18:24,480 --> 01:18:28,560
the things that i have a concern around

1946
01:18:28,560 --> 01:18:31,040
is that it's possible that we could

1947
01:18:31,040 --> 01:18:32,560
reach a future state

1948
01:18:32,560 --> 01:18:35,760
where ipv6 clients are going to require

1949
01:18:35,760 --> 01:18:38,880
even ingest gateways to be behind gnats

1950
01:18:38,880 --> 01:18:42,159
if we don't end up with pretty much

1951
01:18:42,159 --> 01:18:45,199
universal ipv6 deployment before we have

1952
01:18:45,199 --> 01:18:47,920
address exhaustion sufficient to impact

1953
01:18:47,920 --> 01:18:50,960
um like server

1954
01:18:50,960 --> 01:18:53,280
deployments right so it's easy to

1955
01:18:53,280 --> 01:18:54,320
imagine that you have

1956
01:18:54,320 --> 01:18:57,360
um sort of a first contact point a

1957
01:18:57,360 --> 01:18:59,120
signaling contact point

1958
01:18:59,120 --> 01:19:01,120
that has a public ip address and then a

1959
01:19:01,120 --> 01:19:02,159
large bank

1960
01:19:02,159 --> 01:19:05,199
of uh like a scalable cdn behind that

1961
01:19:05,199 --> 01:19:09,040
that is actually behind that's um

1962
01:19:09,040 --> 01:19:11,360
and if you ever end up in that situation

1963
01:19:11,360 --> 01:19:13,199
we do need to have the ability

1964
01:19:13,199 --> 01:19:15,040
either with a base protocol or with some

1965
01:19:15,040 --> 01:19:16,480
set of extensions

1966
01:19:16,480 --> 01:19:19,760
to have the ability to have like a full

1967
01:19:19,760 --> 01:19:21,040
ice implementation

1968
01:19:21,040 --> 01:19:24,719
with trickle and with restarts um

1969
01:19:24,719 --> 01:19:26,560
now with a sufficiently rich extension

1970
01:19:26,560 --> 01:19:28,080
mechanism this isn't really an issue but

1971
01:19:28,080 --> 01:19:29,760
it does kind of violate the principle

1972
01:19:29,760 --> 01:19:30,080
that

1973
01:19:30,080 --> 01:19:32,640
that i mentioned at the top of my

1974
01:19:32,640 --> 01:19:34,400
discussion which is that we do want the

1975
01:19:34,400 --> 01:19:36,239
base protocol to always be sufficient

1976
01:19:36,239 --> 01:19:39,920
to start up a session in terms of the

1977
01:19:39,920 --> 01:19:41,760
additional complexity that introduces

1978
01:19:41,760 --> 01:19:44,400
as long as we have like operations that

1979
01:19:44,400 --> 01:19:45,199
we can send

1980
01:19:45,199 --> 01:19:47,760
inside a session this is pretty minimal

1981
01:19:47,760 --> 01:19:49,600
because ice and trickle ice are already

1982
01:19:49,600 --> 01:19:51,199
part of jsep

1983
01:19:51,199 --> 01:19:53,520
so assuming that people haven't like

1984
01:19:53,520 --> 01:19:55,120
gone off and implemented webrtc from the

1985
01:19:55,120 --> 01:19:56,719
ground up and are using like one of the

1986
01:19:56,719 --> 01:19:57,760
available libraries

1987
01:19:57,760 --> 01:19:59,120
this is already going to be included

1988
01:19:59,120 --> 01:20:00,880
right trickle ice and ice restart are

1989
01:20:00,880 --> 01:20:01,920
going to be part of

1990
01:20:01,920 --> 01:20:03,920
what's in the webrtc stack that you take

1991
01:20:03,920 --> 01:20:06,239
on and from that perspective adding them

1992
01:20:06,239 --> 01:20:07,920
to whip isn't going to be particularly

1993
01:20:07,920 --> 01:20:10,320
complex

1994
01:20:10,320 --> 01:20:11,920
that said because it's not really

1995
01:20:11,920 --> 01:20:13,520
necessary right now i'm

1996
01:20:13,520 --> 01:20:15,360
personally kind of on the bubble that's

1997
01:20:15,360 --> 01:20:16,719
why this is something that we need as

1998
01:20:16,719 --> 01:20:18,000
base functionality or something

1999
01:20:18,000 --> 01:20:20,960
we can simply leave for the ability of

2000
01:20:20,960 --> 01:20:22,560
future extensions

2001
01:20:22,560 --> 01:20:27,679
um so let's go to the queue come in

2002
01:20:29,679 --> 01:20:32,719
so um this is one of those areas

2003
01:20:32,719 --> 01:20:34,560
i think we've had a lot of like the the

2004
01:20:34,560 --> 01:20:36,239
internet is littered with like jokes

2005
01:20:36,239 --> 01:20:38,159
about like you trying to use webrtc then

2006
01:20:38,159 --> 01:20:39,600
you find out you need a turn server you

2007
01:20:39,600 --> 01:20:40,880
can't find a turn server and then you

2008
01:20:40,880 --> 01:20:42,560
give up and go do something else

2009
01:20:42,560 --> 01:20:43,840
i mean like this has been one of the

2010
01:20:43,840 --> 01:20:45,760
really hard points for people to

2011
01:20:45,760 --> 01:20:49,199
deal with so let's talk about the case

2012
01:20:49,199 --> 01:20:51,120
where i have a bunch of server where i

2013
01:20:51,120 --> 01:20:52,960
don't have a lot of ipv4 addresses for

2014
01:20:52,960 --> 01:20:54,639
my servers but i have some

2015
01:20:54,639 --> 01:20:57,920
and uh aws is natting me isn't adding my

2016
01:20:57,920 --> 01:20:58,560
servers

2017
01:20:58,560 --> 01:21:01,920
behind on the server side okay the way

2018
01:21:01,920 --> 01:21:02,800
that's done

2019
01:21:02,800 --> 01:21:05,520
is there still will be a port allocated

2020
01:21:05,520 --> 01:21:06,320
and ip

2021
01:21:06,320 --> 01:21:07,840
to the load balancer and then the load

2022
01:21:07,840 --> 01:21:09,840
balancer will span that out to multiple

2023
01:21:09,840 --> 01:21:10,800
machine

2024
01:21:10,800 --> 01:21:14,080
but i will know my ip and port that is

2025
01:21:14,080 --> 01:21:15,600
the thing i advertise

2026
01:21:15,600 --> 01:21:17,760
um i'll know that ahead of time on the

2027
01:21:17,760 --> 01:21:19,520
server side even if i am being added

2028
01:21:19,520 --> 01:21:21,760
with v4 addresses on the server side

2029
01:21:21,760 --> 01:21:24,320
um i'll know it will be the type it'll

2030
01:21:24,320 --> 01:21:26,000
be a full cone style on that it will be

2031
01:21:26,000 --> 01:21:26,239
uh

2032
01:21:26,239 --> 01:21:28,000
you know things to be able to come in

2033
01:21:28,000 --> 01:21:29,760
there um

2034
01:21:29,760 --> 01:21:31,040
clearly the clients will be behind

2035
01:21:31,040 --> 01:21:33,840
that's all the time but it seems like

2036
01:21:33,840 --> 01:21:36,480
if we mandate that the server must be

2037
01:21:36,480 --> 01:21:38,639
able to advertise an ip address and port

2038
01:21:38,639 --> 01:21:40,480
that it's publicly reachable at or

2039
01:21:40,480 --> 01:21:42,480
one of its nodes in its cluster is

2040
01:21:42,480 --> 01:21:44,719
publicly reachable app

2041
01:21:44,719 --> 01:21:47,360
um and you know first of all the server

2042
01:21:47,360 --> 01:21:48,400
would only have to

2043
01:21:48,400 --> 01:21:50,960
implement ice light which dramatically

2044
01:21:50,960 --> 01:21:52,480
improves the performance and speed of

2045
01:21:52,480 --> 01:21:56,080
the high of the high speed servers

2046
01:21:56,080 --> 01:21:58,159
we could get to a place where it was

2047
01:21:58,159 --> 01:22:00,000
really easy for the clients to know in a

2048
01:22:00,000 --> 01:22:00,639
round trip

2049
01:22:00,639 --> 01:22:02,239
that we could say something like you're

2050
01:22:02,239 --> 01:22:05,520
doing ice but the client

2051
01:22:05,520 --> 01:22:07,520
never provides anything other than its

2052
01:22:07,520 --> 01:22:10,080
reflexive candidate

2053
01:22:10,080 --> 01:22:13,199
and if that goes up in the offer

2054
01:22:13,199 --> 01:22:15,600
and then coming down in the answer comes

2055
01:22:15,600 --> 01:22:17,360
the cert the servers thing and you don't

2056
01:22:17,360 --> 01:22:18,960
need trickle eyes you know in a single

2057
01:22:18,960 --> 01:22:19,920
round trip

2058
01:22:19,920 --> 01:22:21,520
you can fill your offers and answers

2059
01:22:21,520 --> 01:22:23,440
with the actual ips in use

2060
01:22:23,440 --> 01:22:24,639
you don't have to deal with any of the

2061
01:22:24,639 --> 01:22:27,520
trickle things um you don't have to deal

2062
01:22:27,520 --> 01:22:29,679
you will never need a turn server you

2063
01:22:29,679 --> 01:22:31,360
will um you know we could

2064
01:22:31,360 --> 01:22:33,600
very much pair this down to something

2065
01:22:33,600 --> 01:22:34,400
that's

2066
01:22:34,400 --> 01:22:36,719
not only easier to write and deploy and

2067
01:22:36,719 --> 01:22:38,080
is is still

2068
01:22:38,080 --> 01:22:40,560
sort of nice it's still doing valid ice

2069
01:22:40,560 --> 01:22:43,040
but it's also much easier to debug

2070
01:22:43,040 --> 01:22:44,639
and that's really my main concern is the

2071
01:22:44,639 --> 01:22:46,080
much easier to debug apart because

2072
01:22:46,080 --> 01:22:48,639
that's one of the things where ice goes

2073
01:22:48,639 --> 01:22:52,080
very sideways um i mean do you see any

2074
01:22:52,080 --> 01:22:52,960
problems with

2075
01:22:52,960 --> 01:22:55,199
i mean does that was does that vision of

2076
01:22:55,199 --> 01:22:56,639
constraining it in that way

2077
01:22:56,639 --> 01:22:58,000
limit anything that you're talking about

2078
01:22:58,000 --> 01:23:00,239
here or would that work

2079
01:23:00,239 --> 01:23:04,400
um so let me answer that after i ask

2080
01:23:04,400 --> 01:23:05,679
well maybe clarification and ask a

2081
01:23:05,679 --> 01:23:08,639
question um so the clarification is that

2082
01:23:08,639 --> 01:23:10,320
if we were to go down this path it

2083
01:23:10,320 --> 01:23:12,239
wouldn't necessitate

2084
01:23:12,239 --> 01:23:14,400
that servers do anything other than ice

2085
01:23:14,400 --> 01:23:15,600
light unless they end up in an

2086
01:23:15,600 --> 01:23:16,880
architecture that requires them to do

2087
01:23:16,880 --> 01:23:17,840
something more complex

2088
01:23:17,840 --> 01:23:21,199
right so this this this still allows

2089
01:23:21,199 --> 01:23:23,040
servers to do isolite when their

2090
01:23:23,040 --> 01:23:26,320
deployment supports it

2091
01:23:26,320 --> 01:23:28,400
right what i'm saying is that the wish

2092
01:23:28,400 --> 01:23:30,080
protocol could say

2093
01:23:30,080 --> 01:23:33,280
that all the that the offer answers that

2094
01:23:33,280 --> 01:23:35,199
you know we didn't have to

2095
01:23:35,199 --> 01:23:38,320
basically um the wish in

2096
01:23:38,320 --> 01:23:40,159
the wish servers needed to be deployed

2097
01:23:40,159 --> 01:23:41,760
in the type environment where ice light

2098
01:23:41,760 --> 01:23:42,719
was possible

2099
01:23:42,719 --> 01:23:44,239
and that greatly simplified the number

2100
01:23:44,239 --> 01:23:45,760
of round trips of signaling we needed

2101
01:23:45,760 --> 01:23:48,639
needed to do to start up something

2102
01:23:48,639 --> 01:23:51,920
perhaps um we might use much faster

2103
01:23:51,920 --> 01:23:52,719
timeouts

2104
01:23:52,719 --> 01:23:54,639
we might have much speedier setup than

2105
01:23:54,639 --> 01:23:55,920
current than you would do if you did

2106
01:23:55,920 --> 01:23:57,280
full blown ice there's all kinds of

2107
01:23:57,280 --> 01:23:59,199
advantages of this

2108
01:23:59,199 --> 01:24:02,400
okay so that last part i'm not quite

2109
01:24:02,400 --> 01:24:04,400
happy with because i want us to be able

2110
01:24:04,400 --> 01:24:06,400
to do this from browsers still

2111
01:24:06,400 --> 01:24:08,239
right so things that are baked into

2112
01:24:08,239 --> 01:24:10,080
browsers in terms of timing are going to

2113
01:24:10,080 --> 01:24:11,600
still be there

2114
01:24:11,600 --> 01:24:14,159
sorry no what what improves your speed

2115
01:24:14,159 --> 01:24:16,000
in ice is having less possibilities to

2116
01:24:16,000 --> 01:24:17,679
test i wasn't talking about changing the

2117
01:24:17,679 --> 01:24:19,280
time route the timers and the current

2118
01:24:19,280 --> 01:24:20,000
ice

2119
01:24:20,000 --> 01:24:22,080
it code other browsers i miss phrase

2120
01:24:22,080 --> 01:24:23,679
that that's yeah

2121
01:24:23,679 --> 01:24:25,120
right and that gets to the question that

2122
01:24:25,120 --> 01:24:27,679
i had which means you're only going to

2123
01:24:27,679 --> 01:24:27,920
have

2124
01:24:27,920 --> 01:24:29,679
one from the other side and it's going

2125
01:24:29,679 --> 01:24:31,280
to work like that's it

2126
01:24:31,280 --> 01:24:35,920
right so what is that one candidate

2127
01:24:35,920 --> 01:24:37,679
what is the client going to send in that

2128
01:24:37,679 --> 01:24:39,520
case that's what i'm you said something

2129
01:24:39,520 --> 01:24:41,280
you went a little fast past and the

2130
01:24:41,280 --> 01:24:43,040
client will send only that one candidate

2131
01:24:43,040 --> 01:24:44,880
which candidate are you talking about

2132
01:24:44,880 --> 01:24:46,719
it's reflexive candidate so it will do

2133
01:24:46,719 --> 01:24:47,199
stun

2134
01:24:47,199 --> 01:24:49,120
it will find its public id address all

2135
01:24:49,120 --> 01:24:50,639
right then only that

2136
01:24:50,639 --> 01:24:52,480
and it will send that in the offer not

2137
01:24:52,480 --> 01:24:54,560
send it later it will get that before it

2138
01:24:54,560 --> 01:24:55,440
sends the offer

2139
01:24:55,440 --> 01:24:57,600
send it and then it'll get back the

2140
01:24:57,600 --> 01:24:58,719
answer and the answer

2141
01:24:58,719 --> 01:25:01,199
because anything else will not result in

2142
01:25:01,199 --> 01:25:02,480
media starting any soon

2143
01:25:02,480 --> 01:25:03,760
right you're not going to get media

2144
01:25:03,760 --> 01:25:05,760
until you have that address um

2145
01:25:05,760 --> 01:25:08,080
right and sending an initial one allows

2146
01:25:08,080 --> 01:25:08,880
it to even be

2147
01:25:08,880 --> 01:25:10,639
primed so that the first packet come

2148
01:25:10,639 --> 01:25:12,400
from the server arrives like it just

2149
01:25:12,400 --> 01:25:15,120
it ends up in an incredibly simple flow

2150
01:25:15,120 --> 01:25:16,800
simple to debug

2151
01:25:16,800 --> 01:25:18,560
you know exactly how the packets are all

2152
01:25:18,560 --> 01:25:20,239
going to flow every single time

2153
01:25:20,239 --> 01:25:23,600
and it i'm not saying it from the client

2154
01:25:23,600 --> 01:25:25,520
point of view it is doing 100

2155
01:25:25,520 --> 01:25:28,960
ice it's just from how we use ice at the

2156
01:25:28,960 --> 01:25:29,920
offer answer

2157
01:25:29,920 --> 01:25:32,560
and trickling stuff it's all the same

2158
01:25:32,560 --> 01:25:34,000
and i haven't touched restart i want to

2159
01:25:34,000 --> 01:25:35,440
talk about restart when we get to that

2160
01:25:35,440 --> 01:25:37,280
but

2161
01:25:37,280 --> 01:25:39,360
we have four people in the list so i'm

2162
01:25:39,360 --> 01:25:41,360
going to go through the queue but

2163
01:25:41,360 --> 01:25:43,120
i'm not closing that subject so you will

2164
01:25:43,120 --> 01:25:44,960
have an opportunity to come back

2165
01:25:44,960 --> 01:25:48,480
i'm worried about a client that would be

2166
01:25:48,480 --> 01:25:51,120
in a bank or in a network where the the

2167
01:25:51,120 --> 01:25:52,800
reflex candidates

2168
01:25:52,800 --> 01:25:55,120
are impossible and we still need a turn

2169
01:25:55,120 --> 01:25:56,800
server i i don't think we're going to be

2170
01:25:56,800 --> 01:25:58,639
able to buy that bullet on the sending

2171
01:25:58,639 --> 01:26:00,719
side on the client side but

2172
01:26:00,719 --> 01:26:04,080
we can have that discussion understand

2173
01:26:04,080 --> 01:26:05,440
the use cases they can pick it up that

2174
01:26:05,440 --> 01:26:07,679
doesn't make sense to me say that again

2175
01:26:07,679 --> 01:26:10,719
um there are some it's a wishes in one

2176
01:26:10,719 --> 01:26:12,480
way right whip is the one way

2177
01:26:12,480 --> 01:26:15,600
and so on the on on the sender side um

2178
01:26:15,600 --> 01:26:17,920
it could be within a bank or within a

2179
01:26:17,920 --> 01:26:19,040
network that

2180
01:26:19,040 --> 01:26:21,920
that doesn't that requires a turn to

2181
01:26:21,920 --> 01:26:24,320
actually go out and traverse the net

2182
01:26:24,320 --> 01:26:26,320
you know restricted not restricted

2183
01:26:26,320 --> 01:26:28,000
firewall restricted port

2184
01:26:28,000 --> 01:26:31,440
need to go over tc tcp 343

2185
01:26:31,440 --> 01:26:34,560
so well i mean a restricted nat or

2186
01:26:34,560 --> 01:26:36,320
restricted firewall would not require

2187
01:26:36,320 --> 01:26:38,239
turn in this use case with the server ip

2188
01:26:38,239 --> 01:26:39,679
address is public look

2189
01:26:39,679 --> 01:26:42,320
if it can't reach this like this server

2190
01:26:42,320 --> 01:26:43,679
address that's public it's not going to

2191
01:26:43,679 --> 01:26:45,199
be able to reach the turn server either

2192
01:26:45,199 --> 01:26:45,600
so

2193
01:26:45,600 --> 01:26:46,960
turn does not help in the case you're

2194
01:26:46,960 --> 01:26:49,120
describing

2195
01:26:49,120 --> 01:26:51,840
okay let's go to team in in the queue

2196
01:26:51,840 --> 01:26:54,080
okay

2197
01:26:54,719 --> 01:26:57,520
i was i was interested in that as well i

2198
01:26:57,520 --> 01:26:57,840
think

2199
01:26:57,840 --> 01:27:00,560
turn tls is a question do we do we have

2200
01:27:00,560 --> 01:27:02,719
use cases which will require the support

2201
01:27:02,719 --> 01:27:04,080
turn tls

2202
01:27:04,080 --> 01:27:07,760
um and i think that the benefits that

2203
01:27:07,760 --> 01:27:09,440
we're talking about here over

2204
01:27:09,440 --> 01:27:13,120
rtmp and and and peg dash and the other

2205
01:27:13,120 --> 01:27:16,480
ingest mechanisms are like massively

2206
01:27:16,480 --> 01:27:18,400
degraded by the fact that you you're

2207
01:27:18,400 --> 01:27:20,400
going to layer it over tcp and

2208
01:27:20,400 --> 01:27:23,520
tls and so i'm kind of

2209
01:27:23,520 --> 01:27:25,440
of the view that anyone who's doing this

2210
01:27:25,440 --> 01:27:28,239
over turn tls is already lost

2211
01:27:28,239 --> 01:27:30,239
now i i've got no implementation

2212
01:27:30,239 --> 01:27:31,840
experience of that so i can't tell if

2213
01:27:31,840 --> 01:27:32,960
that's true

2214
01:27:32,960 --> 01:27:36,320
but that's my instinct so uh

2215
01:27:36,320 --> 01:27:38,400
that and and i think the other aspect is

2216
01:27:38,400 --> 01:27:40,480
i think cullen is largely right with

2217
01:27:40,480 --> 01:27:41,679
this that

2218
01:27:41,679 --> 01:27:44,000
icelite will do everything we want and

2219
01:27:44,000 --> 01:27:45,040
it will make the thing

2220
01:27:45,040 --> 01:27:48,080
quicker and and there's i see no need

2221
01:27:48,080 --> 01:27:49,280
for trickle

2222
01:27:49,280 --> 01:27:51,600
um i can't see a use case where trickle

2223
01:27:51,600 --> 01:27:52,960
is useful

2224
01:27:52,960 --> 01:27:58,080
uh i may be wrong but i can't think of

2225
01:27:58,840 --> 01:28:00,159
one

2226
01:28:00,159 --> 01:28:01,280
okay that that's fair and just to

2227
01:28:01,280 --> 01:28:02,880
respond to the question that colin asked

2228
01:28:02,880 --> 01:28:03,440
during his

2229
01:28:03,440 --> 01:28:06,239
his comments um i might have to think

2230
01:28:06,239 --> 01:28:07,199
about it a little bit more

2231
01:28:07,199 --> 01:28:10,400
but i the description sounds pretty

2232
01:28:10,400 --> 01:28:11,760
persuasive

2233
01:28:11,760 --> 01:28:14,480
that trickle ice may be something we

2234
01:28:14,480 --> 01:28:15,120
don't

2235
01:28:15,120 --> 01:28:18,719
need in the grand scheme of things

2236
01:28:18,719 --> 01:28:23,199
okay we have a very big queue jonathan

2237
01:28:26,719 --> 01:28:29,760
um yeah so um just actually going

2238
01:28:29,760 --> 01:28:31,679
um even a little bit beyond pollen if

2239
01:28:31,679 --> 01:28:33,600
you can assume that

2240
01:28:33,600 --> 01:28:36,800
the uh river is if you reach we don't

2241
01:28:36,800 --> 01:28:38,560
even need the productive address you can

2242
01:28:38,560 --> 01:28:40,400
just put you know your

2243
01:28:40,400 --> 01:28:42,639
post address or a dummy address the

2244
01:28:42,639 --> 01:28:45,040
server gets the

2245
01:28:45,040 --> 01:28:47,360
client's address as pure reflexive you

2246
01:28:47,360 --> 01:28:48,800
don't need any standard turn servers at

2247
01:28:48,800 --> 01:28:49,199
all

2248
01:28:49,199 --> 01:28:52,000
uh the only case is the previous

2249
01:28:52,000 --> 01:28:53,199
discussion if you do

2250
01:28:53,199 --> 01:28:54,639
need to worry about case if your udp is

2251
01:28:54,639 --> 01:28:56,080
blocked entirely then yes you need to

2252
01:28:56,080 --> 01:28:56,960
worry about

2253
01:28:56,960 --> 01:28:59,679
getting some tcp based probably turn

2254
01:28:59,679 --> 01:29:00,400
server or

2255
01:29:00,400 --> 01:29:02,480
candidate which com which adds

2256
01:29:02,480 --> 01:29:03,840
complexity

2257
01:29:03,840 --> 01:29:07,120
uh which is annoying but um

2258
01:29:07,120 --> 01:29:09,120
if we want to say no we assume udp is

2259
01:29:09,120 --> 01:29:10,719
reasonable for this to work

2260
01:29:10,719 --> 01:29:14,560
then you can just you know

2261
01:29:14,560 --> 01:29:16,960
the ice i i simplifies it in a lot

2262
01:29:16,960 --> 01:29:17,840
basically the client

2263
01:29:17,840 --> 01:29:19,440
that's particularly the client logic

2264
01:29:19,440 --> 01:29:21,280
simplifies a lot it doesn't really need

2265
01:29:21,280 --> 01:29:25,840
to do much at all

2266
01:29:26,320 --> 01:29:29,599
thank you buke

2267
01:29:30,960 --> 01:29:34,000
oh hi uh luke from twitch um

2268
01:29:34,000 --> 01:29:36,560
just wanted to say that agree yeah you

2269
01:29:36,560 --> 01:29:37,040
don't

2270
01:29:37,040 --> 01:29:40,320
need uh ice trickle um the idea here is

2271
01:29:40,320 --> 01:29:41,520
that this neighborhood has a nat

2272
01:29:41,520 --> 01:29:43,760
as a slide point but it's really a load

2273
01:29:43,760 --> 01:29:46,159
balancer

2274
01:29:46,159 --> 01:29:48,320
um so long as it has a public ip address

2275
01:29:48,320 --> 01:29:49,760
and port

2276
01:29:49,760 --> 01:29:52,960
it appears address uh

2277
01:29:52,960 --> 01:29:56,239
via the ip source uh

2278
01:29:56,239 --> 01:30:00,400
um source port and ip address so um

2279
01:30:00,400 --> 01:30:02,080
yeah it's something that it's it's

2280
01:30:02,080 --> 01:30:03,280
something that we've been struggling

2281
01:30:03,280 --> 01:30:04,400
with too it's just like

2282
01:30:04,400 --> 01:30:06,639
how how do you want a long-lived

2283
01:30:06,639 --> 01:30:07,520
connection or not

2284
01:30:07,520 --> 01:30:10,320
uh do you need it um and but in the case

2285
01:30:10,320 --> 01:30:11,280
of ice trickle

2286
01:30:11,280 --> 01:30:14,159
um if you just have a public ip address

2287
01:30:14,159 --> 01:30:14,880
and port

2288
01:30:14,880 --> 01:30:18,159
you really don't need this um it'd be

2289
01:30:18,159 --> 01:30:20,880
nice if you could try to combine turn

2290
01:30:20,880 --> 01:30:23,360
with your existing tcp connection you

2291
01:30:23,360 --> 01:30:25,840
just made to initiate the connection but

2292
01:30:25,840 --> 01:30:29,040
i don't have any ideas there

2293
01:30:31,840 --> 01:30:33,679
um jonathan you're still in the in the

2294
01:30:33,679 --> 01:30:35,840
list but i'm going to remove you

2295
01:30:35,840 --> 01:30:38,159
you can have you on the back if you need

2296
01:30:38,159 --> 01:30:40,960
kalin you're next

2297
01:30:43,120 --> 01:30:46,639
so uh i wanted to talk about restart or

2298
01:30:46,639 --> 01:30:47,120
whatever

2299
01:30:47,120 --> 01:30:50,960
i mean we we had the the use case adam

2300
01:30:50,960 --> 01:30:52,960
you know illustrated just a few minutes

2301
01:30:52,960 --> 01:30:54,159
ago where something went wrong and he

2302
01:30:54,159 --> 01:30:55,840
had to rejoin his media

2303
01:30:55,840 --> 01:30:57,440
i think we have lots of places where

2304
01:30:57,440 --> 01:30:58,880
clients need to

2305
01:30:58,880 --> 01:31:02,159
redo media sometimes it's uh somebody

2306
01:31:02,159 --> 01:31:02,560
just

2307
01:31:02,560 --> 01:31:04,239
switched wi-fi networks or they went

2308
01:31:04,239 --> 01:31:06,480
from cellular to wi-fi or something

2309
01:31:06,480 --> 01:31:08,800
and i know that that's been a hit on the

2310
01:31:08,800 --> 01:31:10,719
environment but if we could have

2311
01:31:10,719 --> 01:31:13,199
pretty rapid recovery like less than two

2312
01:31:13,199 --> 01:31:14,080
seconds

2313
01:31:14,080 --> 01:31:16,400
of the media when the client's ip

2314
01:31:16,400 --> 01:31:17,199
address

2315
01:31:17,199 --> 01:31:20,239
possibly changed or redid something um i

2316
01:31:20,239 --> 01:31:21,520
was going to argue that that would be a

2317
01:31:21,520 --> 01:31:22,719
good thing

2318
01:31:22,719 --> 01:31:24,800
um however i think jonathan lennon's

2319
01:31:24,800 --> 01:31:26,560
comment from like a second ago

2320
01:31:26,560 --> 01:31:27,840
sort of highlights that like we're going

2321
01:31:27,840 --> 01:31:29,920
to get that for free it's no big deal um

2322
01:31:29,920 --> 01:31:31,199
actually the client will just

2323
01:31:31,199 --> 01:31:33,280
reconnect the same address because the

2324
01:31:33,280 --> 01:31:35,199
public ip and port of the server won't

2325
01:31:35,199 --> 01:31:36,480
have changed

2326
01:31:36,480 --> 01:31:38,080
but where it's coming from from the

2327
01:31:38,080 --> 01:31:39,600
client might change anyway i think we

2328
01:31:39,600 --> 01:31:40,880
should talk a little bit about that

2329
01:31:40,880 --> 01:31:43,120
like how we can have rapid reconnective

2330
01:31:43,120 --> 01:31:45,120
media type thing would be a good thing

2331
01:31:45,120 --> 01:31:45,440
and i

2332
01:31:45,440 --> 01:31:46,960
sort of assumed that ice restart would

2333
01:31:46,960 --> 01:31:48,719
be sort of part of that but maybe it's

2334
01:31:48,719 --> 01:31:50,880
not

2335
01:31:51,840 --> 01:31:54,159
so guys i'm just going to interject here

2336
01:31:54,159 --> 01:31:55,120
for one minute

2337
01:31:55,120 --> 01:31:58,400
we have 30 minutes left i understand

2338
01:31:58,400 --> 01:32:00,400
adam you still want to speak about media

2339
01:32:00,400 --> 01:32:02,480
type and then after we have five minutes

2340
01:32:02,480 --> 01:32:03,760
for lorenzo

2341
01:32:03,760 --> 01:32:06,000
and we have two extra points uh

2342
01:32:06,000 --> 01:32:07,040
authentication

2343
01:32:07,040 --> 01:32:09,199
and ice ice we we're speaking right now

2344
01:32:09,199 --> 01:32:10,639
so we okay but

2345
01:32:10,639 --> 01:32:13,040
uh we have uh 20 minutes of discussion

2346
01:32:13,040 --> 01:32:14,639
left

2347
01:32:14,639 --> 01:32:16,239
right i don't expect the media type

2348
01:32:16,239 --> 01:32:17,920
conversation is going to take very long

2349
01:32:17,920 --> 01:32:19,520
that it was more a matter of flagging it

2350
01:32:19,520 --> 01:32:21,520
for people's attention um

2351
01:32:21,520 --> 01:32:24,080
i could be wrong but that's i think this

2352
01:32:24,080 --> 01:32:25,199
is probably something that's really

2353
01:32:25,199 --> 01:32:27,440
important to nail down

2354
01:32:27,440 --> 01:32:30,159
because whether we need to do ice talk

2355
01:32:30,159 --> 01:32:31,440
and this this speaks a lot to whether we

2356
01:32:31,440 --> 01:32:33,040
need some sort of session construct

2357
01:32:33,040 --> 01:32:35,280
right

2358
01:32:37,199 --> 01:32:41,600
do it

2359
01:32:41,600 --> 01:32:43,040
so you wanted to speak about ice

2360
01:32:43,040 --> 01:32:46,960
restarting in response to callan or

2361
01:32:47,360 --> 01:32:50,400
talking about lorenzo uh

2362
01:32:50,400 --> 01:32:54,239
lorenzo is in the queue yes

2363
01:32:54,239 --> 01:32:56,159
sorry about that yeah so first of all so

2364
01:32:56,159 --> 01:32:57,440
don't worry about my five minutes

2365
01:32:57,440 --> 01:32:59,120
because they're probably going to be 15

2366
01:32:59,120 --> 01:33:01,120
or 30 seconds i really it was just some

2367
01:33:01,120 --> 01:33:03,120
comments on adam's presentation so it's

2368
01:33:03,120 --> 01:33:04,480
not really going to take that long

2369
01:33:04,480 --> 01:33:06,159
but i just wanted to add some notes

2370
01:33:06,159 --> 01:33:08,239
about the trickle itself which i agree

2371
01:33:08,239 --> 01:33:09,679
is not really needed because

2372
01:33:09,679 --> 01:33:11,199
as we've seen also in the early

2373
01:33:11,199 --> 01:33:13,280
prototypes we reflexive can

2374
01:33:13,280 --> 01:33:15,280
can do the job as soon as as long as you

2375
01:33:15,280 --> 01:33:17,120
have a publicly reachable address

2376
01:33:17,120 --> 01:33:18,639
address for the server so there's no

2377
01:33:18,639 --> 01:33:21,520
problem there i still think it's it's a

2378
01:33:21,520 --> 01:33:23,600
nice feature to have especially if it's

2379
01:33:23,600 --> 01:33:25,520
let's say optional and if you actually

2380
01:33:25,520 --> 01:33:27,280
really want to to convey this

2381
01:33:27,280 --> 01:33:29,280
information you can somehow

2382
01:33:29,280 --> 01:33:32,719
and mostly for uh reasons that i would

2383
01:33:32,719 --> 01:33:33,920
say are

2384
01:33:33,920 --> 01:33:35,600
let's say figuring out some ambiguities

2385
01:33:35,600 --> 01:33:37,040
from a service side

2386
01:33:37,040 --> 01:33:38,639
side of things because if all you see

2387
01:33:38,639 --> 01:33:40,480
are pre-reflexive addresses

2388
01:33:40,480 --> 01:33:42,639
you lose the the view or the perspective

2389
01:33:42,639 --> 01:33:44,560
of where that pre-reflexive address is

2390
01:33:44,560 --> 01:33:45,840
actually coming from because for

2391
01:33:45,840 --> 01:33:47,520
instance your clients may actually

2392
01:33:47,520 --> 01:33:48,239
making you

2393
01:33:48,239 --> 01:33:50,239
be making use of a turn server even if

2394
01:33:50,239 --> 01:33:52,159
it's not advertising the trickle can

2395
01:33:52,159 --> 01:33:54,239
the candidate be a trickle but it may

2396
01:33:54,239 --> 01:33:56,239
still be reaching your service via

2397
01:33:56,239 --> 01:33:58,480
pre-reflexive that way so for instance

2398
01:33:58,480 --> 01:33:58,960
so

2399
01:33:58,960 --> 01:34:00,880
even though there are let's say some

2400
01:34:00,880 --> 01:34:02,639
hacky ways to figure out where the

2401
01:34:02,639 --> 01:34:04,639
the candidate came from from a service

2402
01:34:04,639 --> 01:34:06,400
perspective you may still be interested

2403
01:34:06,400 --> 01:34:07,120
in some

2404
01:34:07,120 --> 01:34:09,280
let's say statistics in how your users

2405
01:34:09,280 --> 01:34:10,880
are connecting to the services so how

2406
01:34:10,880 --> 01:34:12,480
many ended up using turn

2407
01:34:12,480 --> 01:34:14,400
for one reason or another how many are

2408
01:34:14,400 --> 01:34:16,719
using server reflexive on any host or

2409
01:34:16,719 --> 01:34:17,840
this kind of things so

2410
01:34:17,840 --> 01:34:19,760
not not something that i personally need

2411
01:34:19,760 --> 01:34:21,760
but something that some services may

2412
01:34:21,760 --> 01:34:23,840
actually have some benefit from so

2413
01:34:23,840 --> 01:34:25,679
this is something that i do believe is

2414
01:34:25,679 --> 01:34:27,199
something that trickle may

2415
01:34:27,199 --> 01:34:33,760
may convey one way or the other

2416
01:34:33,760 --> 01:34:37,199
okay turn up then

2417
01:34:40,400 --> 01:34:43,440
um yeah so i think um we

2418
01:34:43,440 --> 01:34:46,480
on the sort of generalized the

2419
01:34:46,480 --> 01:34:48,480
ice restart question i think we need

2420
01:34:48,480 --> 01:34:50,480
some um

2421
01:34:50,480 --> 01:34:53,280
story and you know a good answer for the

2422
01:34:53,280 --> 01:34:54,480
various high ability

2423
01:34:54,480 --> 01:34:56,960
high availability cases both uh you know

2424
01:34:56,960 --> 01:34:59,840
client failover and a server failover

2425
01:34:59,840 --> 01:35:01,600
ice restart might be part of that or we

2426
01:35:01,600 --> 01:35:02,960
might discover that

2427
01:35:02,960 --> 01:35:04,239
mechanism we need for that for

2428
01:35:04,239 --> 01:35:05,679
re-establishing whatever the signaling

2429
01:35:05,679 --> 01:35:07,280
or recession or whatever

2430
01:35:07,280 --> 01:35:10,880
um is sufficient for this new

2431
01:35:10,880 --> 01:35:12,320
mail over there and i think we should

2432
01:35:12,320 --> 01:35:14,400
sort of understand the whole story there

2433
01:35:14,400 --> 01:35:17,440
before we decide that i just restarted

2434
01:35:17,440 --> 01:35:22,320
this general um restart problem

2435
01:35:24,480 --> 01:35:26,000
so are you envisioning that we might

2436
01:35:26,000 --> 01:35:27,600
just like restart the entire session

2437
01:35:27,600 --> 01:35:28,080
instead

2438
01:35:28,080 --> 01:35:31,199
i i didn't quite follow that um

2439
01:35:31,199 --> 01:35:34,159
sorry i was i was re i'm muting myself

2440
01:35:34,159 --> 01:35:34,639
which

2441
01:35:34,639 --> 01:35:36,960
level unfortunately you know and but

2442
01:35:36,960 --> 01:35:38,639
medical cuts off your audio so say that

2443
01:35:38,639 --> 01:35:40,239
again

2444
01:35:40,239 --> 01:35:41,920
oh sorry no i was trying to figure out

2445
01:35:41,920 --> 01:35:44,159
um

2446
01:35:44,159 --> 01:35:47,119
when you're talking about the

2447
01:35:47,119 --> 01:35:49,119
potentially not needing ice restarts to

2448
01:35:49,119 --> 01:35:50,639
handle failure cases what

2449
01:35:50,639 --> 01:35:52,480
alternatives did you have in mind yeah

2450
01:35:52,480 --> 01:35:54,239
just just you know

2451
01:35:54,239 --> 01:35:55,679
basically redoing the you know if we

2452
01:35:55,679 --> 01:35:57,360
could if the signaling setup is fast

2453
01:35:57,360 --> 01:35:58,560
enough yes just doing

2454
01:35:58,560 --> 01:36:00,239
the whole process again from start with

2455
01:36:00,239 --> 01:36:02,239
some you know additional signaling

2456
01:36:02,239 --> 01:36:03,440
saying yeah this is a continuation of

2457
01:36:03,440 --> 01:36:05,679
this previous thing we were doing

2458
01:36:05,679 --> 01:36:07,520
okay so that would necessitate the

2459
01:36:07,520 --> 01:36:09,840
ability to point to like a previous

2460
01:36:09,840 --> 01:36:11,119
instance right because we're basically

2461
01:36:11,119 --> 01:36:13,040
we're going to an end point and creating

2462
01:36:13,040 --> 01:36:13,920
a session

2463
01:36:13,920 --> 01:36:16,800
of sorts creating a thing right creating

2464
01:36:16,800 --> 01:36:18,719
a broadcast by the way to think about it

2465
01:36:18,719 --> 01:36:20,800
and so we'd have to say this thing that

2466
01:36:20,800 --> 01:36:22,639
i'm setting up is that broadcast not a

2467
01:36:22,639 --> 01:36:24,159
new broadcast

2468
01:36:24,159 --> 01:36:27,759
yeah okay

2469
01:36:28,159 --> 01:36:30,400
team

2470
01:36:32,239 --> 01:36:35,840
so so that speaks to doing the 201

2471
01:36:35,840 --> 01:36:37,520
because what you get back from the 201

2472
01:36:37,520 --> 01:36:40,159
is the resource which you could then

2473
01:36:40,159 --> 01:36:44,080
talk to again um so you've got it you've

2474
01:36:44,080 --> 01:36:45,840
got a reconnection point so you don't

2475
01:36:45,840 --> 01:36:46,320
have to go

2476
01:36:46,320 --> 01:36:48,480
necessarily through the whole process

2477
01:36:48,480 --> 01:36:50,320
you maybe we don't need to reallocate

2478
01:36:50,320 --> 01:36:52,320
some resources on the server side

2479
01:36:52,320 --> 01:36:55,679
because you're going back to a

2480
01:36:55,679 --> 01:36:59,360
resource that you haven't yet deleted

2481
01:37:00,239 --> 01:37:02,159
right or it could be any other resource

2482
01:37:02,159 --> 01:37:03,600
you communicated during that initial

2483
01:37:03,600 --> 01:37:04,800
contact right

2484
01:37:04,800 --> 01:37:06,000
i mean what you've described is

2485
01:37:06,000 --> 01:37:07,920
compatible with i think everything we've

2486
01:37:07,920 --> 01:37:12,560
discussed so far right

2487
01:37:12,560 --> 01:37:14,800
okay

2488
01:37:16,480 --> 01:37:20,159
the queue is now empty

2489
01:37:20,159 --> 01:37:22,880
okay so uh i assume we'll circle back

2490
01:37:22,880 --> 01:37:24,639
this at the end um if there

2491
01:37:24,639 --> 01:37:26,239
is more conversation to be had but i

2492
01:37:26,239 --> 01:37:28,639
guess for now go on to the next slide

2493
01:37:28,639 --> 01:37:31,360
um wait wait wait so julius you were the

2494
01:37:31,360 --> 01:37:32,239
other one

2495
01:37:32,239 --> 01:37:35,520
um stressing the need for um

2496
01:37:35,520 --> 01:37:38,719
ice restart do you want to state your

2497
01:37:38,719 --> 01:37:41,199
use case again

2498
01:37:41,199 --> 01:37:43,679
as jonathan was was asking for for the

2499
01:37:43,679 --> 01:37:45,280
story in the use case

2500
01:37:45,280 --> 01:37:48,159
okay so the use case i'm speaking about

2501
01:37:48,159 --> 01:37:50,080
is you're giving a lecture to 100

2502
01:37:50,080 --> 01:37:51,199
students

2503
01:37:51,199 --> 01:37:53,840
and you wouldn't imagine how bad the

2504
01:37:53,840 --> 01:37:54,880
networks are

2505
01:37:54,880 --> 01:37:57,520
if you have 100 students you can afford

2506
01:37:57,520 --> 01:37:59,440
three or four people

2507
01:37:59,440 --> 01:38:01,600
not being able to follow your lecture if

2508
01:38:01,600 --> 01:38:03,520
20 people don't follow your lecture you

2509
01:38:03,520 --> 01:38:04,639
have a problem

2510
01:38:04,639 --> 01:38:06,639
and now most of the students are some

2511
01:38:06,639 --> 01:38:08,320
students are on you know ordinary home

2512
01:38:08,320 --> 01:38:09,280
networks

2513
01:38:09,280 --> 01:38:12,239
that are not are connected over 4g and

2514
01:38:12,239 --> 01:38:14,639
you guys all know what the 4g operators

2515
01:38:14,639 --> 01:38:15,280
do

2516
01:38:15,280 --> 01:38:18,239
some are on university networks and you

2517
01:38:18,239 --> 01:38:20,239
people don't know what the university

2518
01:38:20,239 --> 01:38:22,239
system administrators do but everything

2519
01:38:22,239 --> 01:38:23,360
is firewalled

2520
01:38:23,360 --> 01:38:25,360
and everything is extremely unstable

2521
01:38:25,360 --> 01:38:28,320
i've seen sessions going over five ip

2522
01:38:28,320 --> 01:38:29,280
addresses

2523
01:38:29,280 --> 01:38:31,520
where the websocket was staying

2524
01:38:31,520 --> 01:38:32,400
connected

2525
01:38:32,400 --> 01:38:35,440
so the net implementations are

2526
01:38:35,440 --> 01:38:37,760
absolutely frightening and in this

2527
01:38:37,760 --> 01:38:38,639
situation

2528
01:38:38,639 --> 01:38:42,840
you want to have a robust enough

2529
01:38:42,840 --> 01:38:45,760
um robust enough session that your

2530
01:38:45,760 --> 01:38:47,920
lecture doesn't get interrupted

2531
01:38:47,920 --> 01:38:50,880
in practice we have found that two

2532
01:38:50,880 --> 01:38:52,719
things are essential it's falling back

2533
01:38:52,719 --> 01:38:54,800
to tcp

2534
01:38:54,800 --> 01:38:57,280
okay and you need to very carefully

2535
01:38:57,280 --> 01:38:58,320
choose your

2536
01:38:58,320 --> 01:39:01,679
your server-side tcp port so

2537
01:39:01,679 --> 01:39:03,280
in practice we have found that what

2538
01:39:03,280 --> 01:39:06,239
works well is using the openvpn

2539
01:39:06,239 --> 01:39:09,360
port for the cisco vpn ports

2540
01:39:09,360 --> 01:39:11,679
and the other thing that is essential is

2541
01:39:11,679 --> 01:39:12,480
that when

2542
01:39:12,480 --> 01:39:15,840
a net has a hiccup

2543
01:39:15,840 --> 01:39:18,560
you need to restart ice so restarting

2544
01:39:18,560 --> 01:39:19,440
the whole session

2545
01:39:19,440 --> 01:39:21,840
if it takes two seconds is okay if it

2546
01:39:21,840 --> 01:39:24,159
takes 20 seconds it's not okay

2547
01:39:24,159 --> 01:39:27,199
okay ice restarts work beautifully when

2548
01:39:27,199 --> 01:39:29,520
the net has a hit

2549
01:39:29,520 --> 01:39:32,719
does that make sense right so if i

2550
01:39:32,719 --> 01:39:33,520
understand

2551
01:39:33,520 --> 01:39:36,159
um you don't really care if it's ice

2552
01:39:36,159 --> 01:39:36,880
restart

2553
01:39:36,880 --> 01:39:39,520
as long as there is almost continuity in

2554
01:39:39,520 --> 01:39:40,000
in

2555
01:39:40,000 --> 01:39:42,400
in the flow so if the mechanism the

2556
01:39:42,400 --> 01:39:44,800
actual mechanism is irrelevant

2557
01:39:44,800 --> 01:39:46,880
right okay that's that's an important

2558
01:39:46,880 --> 01:39:48,239
point i think

2559
01:39:48,239 --> 01:39:50,000
uh moving forward when when we have

2560
01:39:50,000 --> 01:39:52,960
benchmark of implementation

2561
01:39:52,960 --> 01:39:54,480
right so for the notes i want i want to

2562
01:39:54,480 --> 01:39:56,000
flag that as another requirement that

2563
01:39:56,000 --> 01:39:57,440
we're going to want to document

2564
01:39:57,440 --> 01:40:00,879
as as part of our solution

2565
01:40:01,119 --> 01:40:05,199
yeah that makes sense thank you jesus

2566
01:40:05,199 --> 01:40:07,520
and by the way the bad university

2567
01:40:07,520 --> 01:40:09,119
network you speak about it's it's the

2568
01:40:09,119 --> 01:40:09,520
french

2569
01:40:09,520 --> 01:40:12,719
university network right

2570
01:40:13,360 --> 01:40:15,760
i suspect that probably you are trying

2571
01:40:15,760 --> 01:40:19,119
to get me into trouble here

2572
01:40:19,119 --> 01:40:22,400
i'm just making sure which which it uh

2573
01:40:22,400 --> 01:40:25,519
guy i need to go to

2574
01:40:26,320 --> 01:40:29,440
so uh okay i'll just say a few words uh

2575
01:40:29,440 --> 01:40:31,600
most of the university networks were set

2576
01:40:31,600 --> 01:40:33,600
up in the 1990s

2577
01:40:33,600 --> 01:40:35,679
by people who had to deal with windows

2578
01:40:35,679 --> 01:40:37,679
95

2579
01:40:37,679 --> 01:40:40,560
and it's always easy to firewall the

2580
01:40:40,560 --> 01:40:41,679
network

2581
01:40:41,679 --> 01:40:43,600
but then the political issues with

2582
01:40:43,600 --> 01:40:45,440
getting it unfired

2583
01:40:45,440 --> 01:40:48,960
25 years later on next to impossible

2584
01:40:48,960 --> 01:40:52,239
okay so the networks the student

2585
01:40:52,239 --> 01:40:54,400
networks the undergraduate networks

2586
01:40:54,400 --> 01:40:57,199
tend to be badly firewalled and you need

2587
01:40:57,199 --> 01:40:58,639
to very carefully find

2588
01:40:58,639 --> 01:41:00,320
what are the ways to actually get

2589
01:41:00,320 --> 01:41:04,159
traffic into the internet from them

2590
01:41:04,159 --> 01:41:05,840
okay and i'm not going to give you any

2591
01:41:05,840 --> 01:41:08,639
names i'm sorry

2592
01:41:08,639 --> 01:41:12,159
all right what happens at the ietf stays

2593
01:41:12,159 --> 01:41:13,360
at the ietf

2594
01:41:13,360 --> 01:41:17,280
fair um

2595
01:41:18,560 --> 01:41:20,239
all right yep as i say the last thing

2596
01:41:20,239 --> 01:41:21,840
that i wanted to hit on

2597
01:41:21,840 --> 01:41:23,679
because it wasn't really uh touched on

2598
01:41:23,679 --> 01:41:26,080
at all in the initial proposal

2599
01:41:26,080 --> 01:41:29,440
was we want to have some agreement on

2600
01:41:29,440 --> 01:41:32,960
what stream ordinality to expect

2601
01:41:32,960 --> 01:41:34,480
so i think there was kind of an

2602
01:41:34,480 --> 01:41:36,880
assumption that any session that we set

2603
01:41:36,880 --> 01:41:38,159
up is going to have

2604
01:41:38,159 --> 01:41:40,320
zero or one video streams zero or one

2605
01:41:40,320 --> 01:41:41,520
audio streams

2606
01:41:41,520 --> 01:41:43,440
and then uh no application streams

2607
01:41:43,440 --> 01:41:45,760
unless we have some additional

2608
01:41:45,760 --> 01:41:47,920
like extensions that we use to negotiate

2609
01:41:47,920 --> 01:41:49,520
those in the future

2610
01:41:49,520 --> 01:41:52,880
um like i said it's

2611
01:41:52,880 --> 01:41:55,119
so it's a matter of we want to document

2612
01:41:55,119 --> 01:41:56,480
this but before we write something down

2613
01:41:56,480 --> 01:41:57,600
i want to make certain that there are

2614
01:41:57,600 --> 01:41:57,920
not

2615
01:41:57,920 --> 01:41:59,440
objections to the prospect that any

2616
01:41:59,440 --> 01:42:01,199
given session is going to have

2617
01:42:01,199 --> 01:42:03,360
like i said zero one video zero one

2618
01:42:03,360 --> 01:42:04,639
audio

2619
01:42:04,639 --> 01:42:07,679
i see sergio in the queue

2620
01:42:07,679 --> 01:42:09,520
um yeah if you don't add them i'm going

2621
01:42:09,520 --> 01:42:10,719
to let's search you

2622
01:42:10,719 --> 01:42:15,040
take the mic yeah okay

2623
01:42:17,530 --> 01:42:21,119
[Laughter]

2624
01:42:21,119 --> 01:42:22,239
if there was discussion around this

2625
01:42:22,239 --> 01:42:23,760
specific point before we moved on to the

2626
01:42:23,760 --> 01:42:24,560
next

2627
01:42:24,560 --> 01:42:27,520
i i think that there is a use case that

2628
01:42:27,520 --> 01:42:30,000
we have found is for example having

2629
01:42:30,000 --> 01:42:32,320
multiple audio tracks for different

2630
01:42:32,320 --> 01:42:34,719
languages

2631
01:42:34,719 --> 01:42:37,840
so this is a use case that we

2632
01:42:37,840 --> 01:42:42,800
may need to support is like a

2633
01:42:42,800 --> 01:42:45,119
at the end it would be only one track

2634
01:42:45,119 --> 01:42:46,719
that they will be the one that will be

2635
01:42:46,719 --> 01:42:47,520
selected but

2636
01:42:47,520 --> 01:42:49,600
having different options to for having

2637
01:42:49,600 --> 01:42:52,000
an input i mean i don't know exactly

2638
01:42:52,000 --> 01:42:53,840
how this could be supported i think that

2639
01:42:53,840 --> 01:42:56,239
maybe sdp has a

2640
01:42:56,239 --> 01:42:57,840
language option or something like that

2641
01:42:57,840 --> 01:42:59,280
but maybe it's a

2642
01:42:59,280 --> 01:43:02,159
use case that we may consider yeah there

2643
01:43:02,159 --> 01:43:03,440
are definitely language tags for that

2644
01:43:03,440 --> 01:43:04,560
kind of thing and if that's a

2645
01:43:04,560 --> 01:43:06,000
requirement we can work it out

2646
01:43:06,000 --> 01:43:07,679
but what i heard at the end there was

2647
01:43:07,679 --> 01:43:10,000
that after the negotiation completed

2648
01:43:10,000 --> 01:43:11,600
there would still be only one audio

2649
01:43:11,600 --> 01:43:12,880
stream you're just performing some sort

2650
01:43:12,880 --> 01:43:14,400
of negotiation in the middle

2651
01:43:14,400 --> 01:43:16,000
to determine which audio stream the

2652
01:43:16,000 --> 01:43:18,639
client elects to send is that accurate

2653
01:43:18,639 --> 01:43:21,360
yeah well in my use cases would be that

2654
01:43:21,360 --> 01:43:22,840
they collect the

2655
01:43:22,840 --> 01:43:26,560
the the the encoder will not renegotiate

2656
01:43:26,560 --> 01:43:28,320
and will send all the languages at the

2657
01:43:28,320 --> 01:43:30,320
at the beginning so the server will

2658
01:43:30,320 --> 01:43:32,159
allow the clients to choose which one

2659
01:43:32,159 --> 01:43:33,440
but it is not

2660
01:43:33,440 --> 01:43:35,280
uh it's not something that it is dynamic

2661
01:43:35,280 --> 01:43:36,480
it will for example they will

2662
01:43:36,480 --> 01:43:39,119
send one film in spanish and english and

2663
01:43:39,119 --> 01:43:40,000
whatever

2664
01:43:40,000 --> 01:43:42,320
and then the the client had choose which

2665
01:43:42,320 --> 01:43:44,239
is the language that he wants to

2666
01:43:44,239 --> 01:43:47,119
to view the the film or the stream or

2667
01:43:47,119 --> 01:43:47,920
whatever

2668
01:43:47,920 --> 01:43:50,880
but it is not i'm sorry when you say

2669
01:43:50,880 --> 01:43:52,480
client you're talking about the watching

2670
01:43:52,480 --> 01:43:54,080
client not the broadcasting client

2671
01:43:54,080 --> 01:43:57,280
yeah that's why i got lost okay

2672
01:43:57,280 --> 01:43:59,199
so you would still have the broadcasting

2673
01:43:59,199 --> 01:44:00,880
client would have multiple audio tracks

2674
01:44:00,880 --> 01:44:02,639
that it's inputting into the network

2675
01:44:02,639 --> 01:44:05,920
yeah okay um but it will not be

2676
01:44:05,920 --> 01:44:07,440
negotiated or they will just

2677
01:44:07,440 --> 01:44:08,960
send everything and then the client will

2678
01:44:08,960 --> 01:44:11,360
choose the watching client will choose

2679
01:44:11,360 --> 01:44:15,040
which language he wants to listen to

2680
01:44:15,040 --> 01:44:17,280
and is this something do you expect to

2681
01:44:17,280 --> 01:44:18,800
have negotiated between the client like

2682
01:44:18,800 --> 01:44:20,080
how would the client know that the

2683
01:44:20,080 --> 01:44:22,080
network is prepared to receive this kind

2684
01:44:22,080 --> 01:44:23,040
of

2685
01:44:23,040 --> 01:44:26,639
input that's uh

2686
01:44:26,639 --> 01:44:29,840
i would say that it will

2687
01:44:29,840 --> 01:44:32,960
and send it in the offer and the server

2688
01:44:32,960 --> 01:44:34,000
will if he does

2689
01:44:34,000 --> 01:44:36,480
it it will just attach all the tracks

2690
01:44:36,480 --> 01:44:39,679
and if not he will just choose one

2691
01:44:39,679 --> 01:44:41,199
okay all right so we probably want to

2692
01:44:41,199 --> 01:44:43,040
work through what the scenarios are here

2693
01:44:43,040 --> 01:44:44,719
it seems like an eminently reasonable

2694
01:44:44,719 --> 01:44:47,040
requirement it's again

2695
01:44:47,040 --> 01:44:48,400
for the notes let's go ahead and collect

2696
01:44:48,400 --> 01:44:50,239
that as a potential requirement on the

2697
01:44:50,239 --> 01:44:50,880
solution

2698
01:44:50,880 --> 01:44:53,040
so we can make sure that there are three

2699
01:44:53,040 --> 01:44:55,040
other people in in the cube but

2700
01:44:55,040 --> 01:44:57,199
in in the context of my understanding is

2701
01:44:57,199 --> 01:44:59,119
there any reason

2702
01:44:59,119 --> 01:45:02,159
why you would divert from 8860 the

2703
01:45:02,159 --> 01:45:04,480
multiple media type per station or or

2704
01:45:04,480 --> 01:45:06,320
the latest uh

2705
01:45:06,320 --> 01:45:09,760
uh rfc that touch on the subject any

2706
01:45:09,760 --> 01:45:11,199
reason you would you would like to do

2707
01:45:11,199 --> 01:45:12,800
something different than where about tc

2708
01:45:12,800 --> 01:45:14,239
is doing

2709
01:45:14,239 --> 01:45:16,400
i know the question of like what to put

2710
01:45:16,400 --> 01:45:17,679
in the stp if you want to do this sort

2711
01:45:17,679 --> 01:45:18,239
of thing

2712
01:45:18,239 --> 01:45:21,520
is is pretty straightforward but like if

2713
01:45:21,520 --> 01:45:22,400
you look at what

2714
01:45:22,400 --> 01:45:24,639
the whole like what base webrtc says i

2715
01:45:24,639 --> 01:45:26,400
could send 12 audio streams and

2716
01:45:26,400 --> 01:45:28,880
and two dozen video streams and that

2717
01:45:28,880 --> 01:45:30,639
would be well within spec

2718
01:45:30,639 --> 01:45:32,080
but it's probably not something we want

2719
01:45:32,080 --> 01:45:34,719
to engineer just a typical broadcast

2720
01:45:34,719 --> 01:45:36,000
ingest protocol

2721
01:45:36,000 --> 01:45:38,480
to support right there's some sort of

2722
01:45:38,480 --> 01:45:40,320
application agreement of what you want

2723
01:45:40,320 --> 01:45:41,679
to do

2724
01:45:41,679 --> 01:45:43,280
and that's that's what i'm hoping we can

2725
01:45:43,280 --> 01:45:44,719
go ahead and put some constraints on

2726
01:45:44,719 --> 01:45:46,960
here

2727
01:45:48,320 --> 01:45:52,480
okay team thank you

2728
01:45:53,600 --> 01:45:57,760
yes so i think the constraints

2729
01:45:57,760 --> 01:45:59,600
on this and the rules here should be

2730
01:45:59,600 --> 01:46:01,199
external to wish

2731
01:46:01,199 --> 01:46:04,639
like if if your

2732
01:46:04,639 --> 01:46:07,920
your media encoder wants to send

2733
01:46:07,920 --> 01:46:12,400
like 3d video and multiphonic stereo and

2734
01:46:12,400 --> 01:46:15,360
and he's using seven webrtc tracks to do

2735
01:46:15,360 --> 01:46:16,159
that

2736
01:46:16,159 --> 01:46:18,239
that's fine it's not wish's problem to

2737
01:46:18,239 --> 01:46:19,600
understand that it's an

2738
01:46:19,600 --> 01:46:23,199
it's a private uh not private but it's a

2739
01:46:23,199 --> 01:46:27,199
that's a statement between the ingest

2740
01:46:27,199 --> 01:46:30,639
engine and the the the

2741
01:46:30,639 --> 01:46:33,040
encoder that's generating this this

2742
01:46:33,040 --> 01:46:33,760
traffic

2743
01:46:33,760 --> 01:46:35,360
and wish doesn't have anything to do

2744
01:46:35,360 --> 01:46:37,360
with it that's not wish's problem

2745
01:46:37,360 --> 01:46:39,520
so we we shouldn't need to know in my

2746
01:46:39,520 --> 01:46:41,840
view

2747
01:46:43,360 --> 01:46:47,360
thank you harold and the

2748
01:46:47,360 --> 01:46:51,360
easy example is

2749
01:46:51,360 --> 01:46:54,800
talking health slides agree completely

2750
01:46:54,800 --> 01:46:56,400
with tim

2751
01:46:56,400 --> 01:46:59,600
the client should ask for what he wants

2752
01:46:59,600 --> 01:47:02,960
the server should just uh zero

2753
01:47:02,960 --> 01:47:06,320
just reject the the the media section

2754
01:47:06,320 --> 01:47:07,280
setup

2755
01:47:07,280 --> 01:47:10,320
it doesn't support none of which is

2756
01:47:10,320 --> 01:47:12,719
business

2757
01:47:15,600 --> 01:47:22,719
okay mike

2758
01:47:22,719 --> 01:47:24,880
yeah i was just gonna relay a comment

2759
01:47:24,880 --> 01:47:26,159
from uh julius

2760
01:47:26,159 --> 01:47:29,360
uh and i missed exactly what he was

2761
01:47:29,360 --> 01:47:30,639
responding to but

2762
01:47:30,639 --> 01:47:33,199
the comment was uh you stream video plus

2763
01:47:33,199 --> 01:47:33,760
audio

2764
01:47:33,760 --> 01:47:38,560
plus slides plus virtual blackboard

2765
01:47:40,639 --> 01:47:42,320
that's a that's a good statement is

2766
01:47:42,320 --> 01:47:45,679
there a question to go with it

2767
01:47:46,239 --> 01:47:49,600
okay so uh

2768
01:47:49,600 --> 01:47:50,960
you were making the point that there was

2769
01:47:50,960 --> 01:47:54,000
just one video plus audio session being

2770
01:47:54,000 --> 01:47:55,520
streamed

2771
01:47:55,520 --> 01:47:57,119
i think that the requirement of

2772
01:47:57,119 --> 01:47:58,800
streaming your face

2773
01:47:58,800 --> 01:48:02,400
plus slide plus a virtual but blackboard

2774
01:48:02,400 --> 01:48:07,519
is fairly common i understand

2775
01:48:08,560 --> 01:48:11,600
the consensus in webrtc so far was that

2776
01:48:11,600 --> 01:48:14,159
as far as webrtc is concerned i know

2777
01:48:14,159 --> 01:48:15,440
three things

2778
01:48:15,440 --> 01:48:18,560
i know video audio and data right

2779
01:48:18,560 --> 01:48:19,840
whether your video

2780
01:48:19,840 --> 01:48:23,199
is your webcam or another source

2781
01:48:23,199 --> 01:48:26,960
or a slide or 360.

2782
01:48:26,960 --> 01:48:28,719
it's at the application level so i'm

2783
01:48:28,719 --> 01:48:31,280
going to let you put a label here

2784
01:48:31,280 --> 01:48:33,520
so you can recognize which one is which

2785
01:48:33,520 --> 01:48:36,159
but as far as webrtc as dp offer answer

2786
01:48:36,159 --> 01:48:37,520
and gsap is concerned

2787
01:48:37,520 --> 01:48:39,520
i i don't want to know that difference

2788
01:48:39,520 --> 01:48:41,280
okay so there was a misunderstanding

2789
01:48:41,280 --> 01:48:43,440
what i was worried about was limiting to

2790
01:48:43,440 --> 01:48:44,960
just one video

2791
01:48:44,960 --> 01:48:47,040
which would force you to remix video

2792
01:48:47,040 --> 01:48:48,639
with the server

2793
01:48:48,639 --> 01:48:51,360
no as as adam said there is no i didn't

2794
01:48:51,360 --> 01:48:53,950
understand the point of that

2795
01:48:53,950 --> 01:48:56,560
[Music]

2796
01:48:56,560 --> 01:48:59,440
since 8108 since now we have new rfc

2797
01:48:59,440 --> 01:49:00,880
number i'm trying to get uh

2798
01:49:00,880 --> 01:49:02,880
to to remember them eight one zero eight

2799
01:49:02,880 --> 01:49:05,440
is multiple rtp stream per session

2800
01:49:05,440 --> 01:49:07,760
you can have as many video as many audio

2801
01:49:07,760 --> 01:49:08,880
as many data

2802
01:49:08,880 --> 01:49:12,639
but you'll be needed to do three times

2803
01:49:12,960 --> 01:49:15,599
okay so but julius raises a really good

2804
01:49:15,599 --> 01:49:16,400
point here

2805
01:49:16,400 --> 01:49:17,920
which is for example if we're bringing

2806
01:49:17,920 --> 01:49:19,840
in multiple video streams

2807
01:49:19,840 --> 01:49:21,840
then if we have any hope of basic

2808
01:49:21,840 --> 01:49:23,520
interoperability we need to have

2809
01:49:23,520 --> 01:49:26,639
some means of the ingest network knowing

2810
01:49:26,639 --> 01:49:27,760
which one is which

2811
01:49:27,760 --> 01:49:30,320
right so if i create a broadcast client

2812
01:49:30,320 --> 01:49:30,800
that

2813
01:49:30,800 --> 01:49:33,679
is doing you know here's my here's my

2814
01:49:33,679 --> 01:49:34,400
headshot

2815
01:49:34,400 --> 01:49:37,760
here's my uh whiteboard or here's my

2816
01:49:37,760 --> 01:49:39,520
video game or you know whatever it is

2817
01:49:39,520 --> 01:49:40,719
that you're choosing to put as your

2818
01:49:40,719 --> 01:49:41,840
second stream

2819
01:49:41,840 --> 01:49:43,520
then the index network has to know which

2820
01:49:43,520 --> 01:49:45,760
is which uh and that i mean that that's

2821
01:49:45,760 --> 01:49:47,599
fundamental interoperability that's not

2822
01:49:47,599 --> 01:49:49,199
something we can just say you know

2823
01:49:49,199 --> 01:49:50,639
it's up to the two of them because then

2824
01:49:50,639 --> 01:49:52,320
it's like you're you're back to having

2825
01:49:52,320 --> 01:49:53,760
bespoke clients for

2826
01:49:53,760 --> 01:49:57,040
for every network so that you can

2827
01:49:57,040 --> 01:50:00,320
like signal which stream means what

2828
01:50:00,320 --> 01:50:02,159
and that's kind of why i put this here

2829
01:50:02,159 --> 01:50:04,800
if we want to have that ability

2830
01:50:04,800 --> 01:50:07,119
then we're going to have to specify it

2831
01:50:07,119 --> 01:50:08,800
uh leave it for an extension

2832
01:50:08,800 --> 01:50:11,360
or uh miss out on a huge chunk of

2833
01:50:11,360 --> 01:50:12,560
interoperability

2834
01:50:12,560 --> 01:50:15,599
or decide like rtmp to have

2835
01:50:15,599 --> 01:50:18,800
one vish signaling channel per

2836
01:50:18,800 --> 01:50:20,960
per session and leave it to the

2837
01:50:20,960 --> 01:50:22,639
application and the

2838
01:50:22,639 --> 01:50:24,560
and the infrastructure to decide which

2839
01:50:24,560 --> 01:50:26,719
is which

2840
01:50:26,719 --> 01:50:28,400
well so i mean you've reduced it to a

2841
01:50:28,400 --> 01:50:30,000
previously unsolved problem there right

2842
01:50:30,000 --> 01:50:32,080
we still need some way

2843
01:50:32,080 --> 01:50:35,520
for the tools and the networks to

2844
01:50:35,520 --> 01:50:37,679
understand what each stream is under

2845
01:50:37,679 --> 01:50:38,800
those circumstances

2846
01:50:38,800 --> 01:50:40,560
and i'm okay tackling that if we think

2847
01:50:40,560 --> 01:50:42,800
that's a requirement

2848
01:50:42,800 --> 01:50:44,480
alternately if we have a sufficiently

2849
01:50:44,480 --> 01:50:46,000
extensible

2850
01:50:46,000 --> 01:50:49,679
like session based setup here we can add

2851
01:50:49,679 --> 01:50:51,440
this as a future extension

2852
01:50:51,440 --> 01:50:52,960
and i think that's probably a reasonable

2853
01:50:52,960 --> 01:50:55,679
approach as well

2854
01:50:56,080 --> 01:50:57,599
in the spirit of time i will go through

2855
01:50:57,599 --> 01:50:59,520
the queue so i have luke sergio and

2856
01:50:59,520 --> 01:51:00,080
callum

2857
01:51:00,080 --> 01:51:01,920
and since we have only 10 minutes left

2858
01:51:01,920 --> 01:51:03,679
i'm gonna cut the cue there

2859
01:51:03,679 --> 01:51:06,000
and we're gonna do a small wrap up so

2860
01:51:06,000 --> 01:51:08,320
luke

2861
01:51:08,639 --> 01:51:10,960
hi i just wanted to pitch as well a

2862
01:51:10,960 --> 01:51:12,239
possible little stream

2863
01:51:12,239 --> 01:51:15,360
um a timed metadata

2864
01:51:15,360 --> 01:51:17,520
like the idea is that you can send data

2865
01:51:17,520 --> 01:51:19,040
that relates to the stream

2866
01:51:19,040 --> 01:51:21,040
um but it's not necessarily audio of

2867
01:51:21,040 --> 01:51:22,560
video uh in

2868
01:51:22,560 --> 01:51:25,920
rtmp world today we do it with id3 tags

2869
01:51:25,920 --> 01:51:28,800
and whatnot but it may also be a case to

2870
01:51:28,800 --> 01:51:31,119
just have this dedicated like

2871
01:51:31,119 --> 01:51:32,719
data channel stream or something to say

2872
01:51:32,719 --> 01:51:34,480
this is this is this is data that

2873
01:51:34,480 --> 01:51:35,760
persists to the

2874
01:51:35,760 --> 01:51:38,960
these time stamps um and that would be

2875
01:51:38,960 --> 01:51:40,639
something that would be

2876
01:51:40,639 --> 01:51:42,820
yeah you'd want to be customizable based

2877
01:51:42,820 --> 01:51:46,019
[Music]

2878
01:51:46,840 --> 01:51:48,239
on

2879
01:51:48,239 --> 01:51:51,520
okay sergio

2880
01:51:51,520 --> 01:51:54,719
yep yes regarding the stream ordinality

2881
01:51:54,719 --> 01:51:57,199
i think that the both cases that we have

2882
01:51:57,199 --> 01:51:58,719
been presented so far that it is the

2883
01:51:58,719 --> 01:52:00,000
multi-language and the

2884
01:52:00,000 --> 01:52:02,639
different slides and things like that

2885
01:52:02,639 --> 01:52:04,560
can be implemented with this

2886
01:52:04,560 --> 01:52:06,960
some saps attribute that already assists

2887
01:52:06,960 --> 01:52:09,119
so we consider that

2888
01:52:09,119 --> 01:52:12,000
the we want to support it we may be able

2889
01:52:12,000 --> 01:52:14,159
to do that with resisting access and not

2890
01:52:14,159 --> 01:52:17,839
have to implement anything new

2891
01:52:27,599 --> 01:52:30,159
so i i just think that that we need to

2892
01:52:30,159 --> 01:52:30,639
make this

2893
01:52:30,639 --> 01:52:32,400
well like let's just say we added some

2894
01:52:32,400 --> 01:52:35,119
tags to the sdp that allowed you to tag

2895
01:52:35,119 --> 01:52:36,960
uh an audio stream with a language or

2896
01:52:36,960 --> 01:52:38,880
maybe it's already there or a video

2897
01:52:38,880 --> 01:52:39,679
stream

2898
01:52:39,679 --> 01:52:41,599
or an audio stream with like you know

2899
01:52:41,599 --> 01:52:43,280
this is slot like a couple common

2900
01:52:43,280 --> 01:52:45,920
well-known tags like slides whiteboards

2901
01:52:45,920 --> 01:52:49,199
uh presenter uh you know perhaps a few

2902
01:52:49,199 --> 01:52:50,400
others i mean i think that's

2903
01:52:50,400 --> 01:52:52,080
that's absolutely mandatory for

2904
01:52:52,080 --> 01:52:53,679
interoperability particularly with

2905
01:52:53,679 --> 01:52:55,119
non-web clients i think it's one of the

2906
01:52:55,119 --> 01:52:56,719
things we've had huge mistakes before

2907
01:52:56,719 --> 01:52:59,760
like there's no really i mean

2908
01:52:59,760 --> 01:53:00,960
there's been whole working groups that

2909
01:53:00,960 --> 01:53:02,320
were trying to figure out whether which

2910
01:53:02,320 --> 01:53:03,920
screen was which video stream was the

2911
01:53:03,920 --> 01:53:05,440
right and which one was the left and

2912
01:53:05,440 --> 01:53:06,480
just saying this is

2913
01:53:06,480 --> 01:53:08,480
up to the application doesn't make any

2914
01:53:08,480 --> 01:53:09,679
sense because

2915
01:53:09,679 --> 01:53:11,199
you want to stream stuff up from a

2916
01:53:11,199 --> 01:53:13,280
client that wasn't necessarily made by

2917
01:53:13,280 --> 01:53:14,880
the same person as the media servers

2918
01:53:14,880 --> 01:53:16,560
that's the whole point of why rtmp is

2919
01:53:16,560 --> 01:53:17,920
successful i think that we really need

2920
01:53:17,920 --> 01:53:19,679
to take this on as a requirement as a

2921
01:53:19,679 --> 01:53:20,960
way to

2922
01:53:20,960 --> 01:53:24,159
be able to map video streams to semantic

2923
01:53:24,159 --> 01:53:24,800
slots

2924
01:53:24,800 --> 01:53:27,520
in some cases that's that's just my much

2925
01:53:27,520 --> 01:53:30,080
is inside

2926
01:53:36,800 --> 01:53:40,719
i do think we need to speak

2927
01:53:40,719 --> 01:53:43,199
to address the question of are we making

2928
01:53:43,199 --> 01:53:44,719
a service or are we making

2929
01:53:44,719 --> 01:53:48,320
making a component if we're

2930
01:53:48,320 --> 01:53:50,639
making a component this is strictly out

2931
01:53:50,639 --> 01:53:51,840
of scope

2932
01:53:51,840 --> 01:53:53,840
if we're making a service this is

2933
01:53:53,840 --> 01:53:56,080
strictly in scope

2934
01:53:56,080 --> 01:53:58,960
which are we

2935
01:54:06,480 --> 01:54:11,280
good question adam

2936
01:54:12,719 --> 01:54:14,239
world's characterization there i think

2937
01:54:14,239 --> 01:54:16,880
we are making a service right the fact

2938
01:54:16,880 --> 01:54:19,119
that we've constrained this to be

2939
01:54:19,119 --> 01:54:21,599
a broadcast network ingest really points

2940
01:54:21,599 --> 01:54:22,719
to it being

2941
01:54:22,719 --> 01:54:26,080
a service definition um so i think

2942
01:54:26,080 --> 01:54:27,520
we need to nail it down i mostly got in

2943
01:54:27,520 --> 01:54:29,199
the queue to basically say that

2944
01:54:29,199 --> 01:54:31,599
cullen did a very good job of explaining

2945
01:54:31,599 --> 01:54:33,199
my concerns in a way that i

2946
01:54:33,199 --> 01:54:35,440
i apparently wasn't as good at so just a

2947
01:54:35,440 --> 01:54:38,719
huge plus one to what he said

2948
01:54:41,520 --> 01:54:46,080
all right we have a few minutes left

2949
01:54:46,080 --> 01:54:48,880
we didn't we didn't speak about

2950
01:54:48,880 --> 01:54:50,480
authentication at all

2951
01:54:50,480 --> 01:54:52,800
this is a matter i will put back on the

2952
01:54:52,800 --> 01:54:53,679
on the list

2953
01:54:53,679 --> 01:54:56,400
for uh full discussion if there are

2954
01:54:56,400 --> 01:54:57,920
people that want to discuss it on the

2955
01:54:57,920 --> 01:54:58,800
list

2956
01:54:58,800 --> 01:55:02,400
for if there is any people new to ietf

2957
01:55:02,400 --> 01:55:04,719
most of the final decisions are taken on

2958
01:55:04,719 --> 01:55:05,760
the list

2959
01:55:05,760 --> 01:55:08,159
uh even if we make any vote or anything

2960
01:55:08,159 --> 01:55:09,119
during the meeting

2961
01:55:09,119 --> 01:55:11,679
so uh please join the list and

2962
01:55:11,679 --> 01:55:12,960
participate into

2963
01:55:12,960 --> 01:55:15,440
into the discussion uh moving forward

2964
01:55:15,440 --> 01:55:16,880
this is just the beginning

2965
01:55:16,880 --> 01:55:19,360
i can see there is a lot of points maybe

2966
01:55:19,360 --> 01:55:21,040
half of the point we discussed today

2967
01:55:21,040 --> 01:55:22,679
that require

2968
01:55:22,679 --> 01:55:25,360
clarification i believe the documents

2969
01:55:25,360 --> 01:55:27,920
are going to be greatly enhanced

2970
01:55:27,920 --> 01:55:30,320
between now and and the next meeting in

2971
01:55:30,320 --> 01:55:32,719
in san francisco or virtual from

2972
01:55:32,719 --> 01:55:35,440
supposedly san francisco

2973
01:55:35,440 --> 01:55:37,760
and i will try to send you the notes and

2974
01:55:37,760 --> 01:55:40,400
the different points with

2975
01:55:40,400 --> 01:55:44,879
with sean uh in in the week to come

2976
01:55:45,199 --> 01:55:48,239
so unless there is any big item that

2977
01:55:48,239 --> 01:55:49,280
people would like to

2978
01:55:49,280 --> 01:55:51,520
to speak about now i will give you back

2979
01:55:51,520 --> 01:55:52,560
five minutes

2980
01:55:52,560 --> 01:55:54,159
to have an extra five minute on the

2981
01:55:54,159 --> 01:55:56,480
break

2982
01:55:56,880 --> 01:55:58,880
so i have a question which is how do i

2983
01:55:58,880 --> 01:56:00,080
save these notes

2984
01:56:00,080 --> 01:56:03,199
where do i save them too

2985
01:56:06,639 --> 01:56:08,880
yeah if you did it in kodi md they

2986
01:56:08,880 --> 01:56:10,800
should just stay there

2987
01:56:10,800 --> 01:56:13,199
okay so if i just close this window they

2988
01:56:13,199 --> 01:56:15,679
won't just vanish forever

2989
01:56:15,679 --> 01:56:18,800
lorenzo lorenzo can you can you

2990
01:56:18,800 --> 01:56:23,040
validate the yeah well cody md is not

2991
01:56:23,040 --> 01:56:25,440
very bad

2992
01:56:25,599 --> 01:56:27,920
but yeah i'm opening the decoding the

2993
01:56:27,920 --> 01:56:29,920
tool right now and i see i do seem to

2994
01:56:29,920 --> 01:56:33,440
i do see it in notes so no worries

2995
01:56:33,440 --> 01:56:35,199
so that's why that's persistent

2996
01:56:35,199 --> 01:56:37,520
somewhere interesting

2997
01:56:37,520 --> 01:56:41,199
yes okay cool i'm off the hook then

2998
01:56:41,199 --> 01:56:43,119
yeah it's awesome actually thanks and

2999
01:56:43,119 --> 01:56:44,480
other people can review them to see if

3000
01:56:44,480 --> 01:56:46,000
they were mischaracterized or fill in

3001
01:56:46,000 --> 01:56:47,440
their names or whatever

3002
01:56:47,440 --> 01:56:49,119
um that tim missed him thank you very

3003
01:56:49,119 --> 01:56:51,119
much and also thank you

3004
01:56:51,119 --> 01:56:52,800
feel free to correct all the spelling

3005
01:56:52,800 --> 01:56:55,280
errors which are littered through that

3006
01:56:55,280 --> 01:56:57,040
yeah the important part is that we got

3007
01:56:57,040 --> 01:56:58,560
any decisions that got made

3008
01:56:58,560 --> 01:57:00,639
um and again i think thanks to mike who

3009
01:57:00,639 --> 01:57:02,000
did the jabber scribe

3010
01:57:02,000 --> 01:57:03,280
somebody at the jabber scrub i

3011
01:57:03,280 --> 01:57:05,040
appreciate that um

3012
01:57:05,040 --> 01:57:11,840
and uh we'll see y'all on the list

3013
01:57:22,840 --> 01:57:25,840
okay

