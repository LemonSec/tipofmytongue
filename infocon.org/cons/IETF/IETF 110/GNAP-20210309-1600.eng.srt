1
00:00:30,640 --> 00:00:34,480
top of the hour according to my cloak

2
00:00:38,000 --> 00:00:42,239
let's take one more minute and we can

3
00:00:42,840 --> 00:00:45,840
start

4
00:01:41,280 --> 00:01:46,799
all right time to go so welcome everyone

5
00:01:47,360 --> 00:01:51,920
we are leaf and iron well i'm iran

6
00:01:51,920 --> 00:01:55,600
and i'm here and

7
00:01:55,600 --> 00:01:58,960
we're at the nap working group

8
00:01:58,960 --> 00:02:02,798
um and

9
00:02:02,960 --> 00:02:07,439
let's go the note 12 applies to this

10
00:02:07,439 --> 00:02:08,399
meeting

11
00:02:08,399 --> 00:02:11,599
so if you if you're new to the itf or

12
00:02:11,599 --> 00:02:15,120
haven't read these materials yet please

13
00:02:15,120 --> 00:02:18,560
take some time go through them

14
00:02:18,560 --> 00:02:22,239
and understand the the implications

15
00:02:22,239 --> 00:02:25,760
especially ipr implications

16
00:02:25,760 --> 00:02:28,800
of whatever's being

17
00:02:28,800 --> 00:02:32,160
said at the meeting

18
00:02:33,760 --> 00:02:36,800
um a few

19
00:02:36,800 --> 00:02:40,400
tips or requests uh please stay muted

20
00:02:40,400 --> 00:02:42,480
unless you're speaking

21
00:02:42,480 --> 00:02:46,480
um we are not

22
00:02:46,480 --> 00:02:50,640
on other ventures and speakers

23
00:02:50,640 --> 00:02:54,319
uh we're not on video if

24
00:02:54,319 --> 00:02:58,080
you present please say go on video

25
00:02:58,080 --> 00:03:01,120
if you're asking a question you might

26
00:03:01,120 --> 00:03:01,840
want to

27
00:03:01,840 --> 00:03:05,840
to go on video your call

28
00:03:06,000 --> 00:03:08,959
there are no blue sheets those are

29
00:03:08,959 --> 00:03:11,519
generated automatically

30
00:03:11,519 --> 00:03:14,720
and i believe this is

31
00:03:14,720 --> 00:03:18,080
this yeah there's a participant

32
00:03:18,080 --> 00:03:21,120
guide if you you're new to me taco

33
00:03:21,120 --> 00:03:25,599
i think it's a good idea to take a look

34
00:03:25,920 --> 00:03:29,040
uh no blue sheets we do

35
00:03:29,040 --> 00:03:32,400
need a minute taker and as

36
00:03:32,400 --> 00:03:35,360
we said before we started it's a great

37
00:03:35,360 --> 00:03:36,560
opportunity

38
00:03:36,560 --> 00:03:39,680
for someone who's new to the group

39
00:03:39,680 --> 00:03:43,599
to get involved and to get to know

40
00:03:43,599 --> 00:03:46,239
the people to ask people for their names

41
00:03:46,239 --> 00:03:47,680
to clarify

42
00:03:47,680 --> 00:03:51,599
points and so on and we need a minute

43
00:03:51,599 --> 00:03:52,400
taker

44
00:03:52,400 --> 00:03:57,280
please let us know if you can do it

45
00:03:57,280 --> 00:04:01,840
and i'll stop at this

46
00:04:03,040 --> 00:04:05,599
anybody

47
00:04:07,120 --> 00:04:09,200
i see swedes in the group and i can i

48
00:04:09,200 --> 00:04:11,120
will start calling on you because you

49
00:04:11,120 --> 00:04:12,159
know me

50
00:04:12,159 --> 00:04:16,319
if somebody else doesn't volunteer so

51
00:04:27,280 --> 00:04:32,559
diego ulla

52
00:04:40,840 --> 00:04:42,880
stevo

53
00:04:42,880 --> 00:04:45,360
it's kind of critical to have someone

54
00:04:45,360 --> 00:04:46,320
take minutes

55
00:04:46,320 --> 00:04:50,000
otherwise we simply cannot have

56
00:04:50,080 --> 00:04:53,759
a reasonable meeting uh i have seen

57
00:04:53,759 --> 00:04:56,639
i may have heard my name but i'm afraid

58
00:04:56,639 --> 00:04:58,320
that they will have to leave

59
00:04:58,320 --> 00:05:00,800
before the end of the meeting so i'm

60
00:05:00,800 --> 00:05:02,400
sorry about that next time

61
00:05:02,400 --> 00:05:05,520
live i promise all right thank you i'll

62
00:05:05,520 --> 00:05:06,720
hold you to that

63
00:05:06,720 --> 00:05:09,759
um and ulea said that he won't be able

64
00:05:09,759 --> 00:05:10,000
to

65
00:05:10,000 --> 00:05:14,080
stay either so any anyone else

66
00:05:14,080 --> 00:05:17,919
um um i can try taking notes christina

67
00:05:17,919 --> 00:05:18,320
here

68
00:05:18,320 --> 00:05:24,000
but i mean thank you thank you christina

69
00:05:34,240 --> 00:05:36,720
and please ask people don't hesitate to

70
00:05:36,720 --> 00:05:38,639
ask people for their names

71
00:05:38,639 --> 00:05:43,039
or if there's a point you didn't catch

72
00:05:43,039 --> 00:05:48,719
just ask thank you awesome thank you

73
00:05:49,199 --> 00:05:52,240
please speak up by resign by raising

74
00:05:52,240 --> 00:05:55,120
or please q to speak up by raising your

75
00:05:55,120 --> 00:05:55,840
hand

76
00:05:55,840 --> 00:05:59,199
in the application the agenda for today

77
00:05:59,199 --> 00:06:02,400
is almost exclusively about the core

78
00:06:02,400 --> 00:06:05,120
protocol and will be led by the

79
00:06:05,120 --> 00:06:07,280
editorial team

80
00:06:07,280 --> 00:06:10,240
at the very end of the meeting we will

81
00:06:10,240 --> 00:06:10,880
discuss

82
00:06:10,880 --> 00:06:14,800
next steps uh the knee prepared

83
00:06:14,800 --> 00:06:17,840
is some additional material we will get

84
00:06:17,840 --> 00:06:18,160
to

85
00:06:18,160 --> 00:06:22,560
that only if time allows and

86
00:06:22,560 --> 00:06:26,240
well depending on on how we go with the

87
00:06:26,240 --> 00:06:29,280
with the main topic topics for

88
00:06:29,280 --> 00:06:30,479
discussion

89
00:06:30,479 --> 00:06:33,199
and after the meeting everybody is

90
00:06:33,199 --> 00:06:34,880
welcome to

91
00:06:34,880 --> 00:06:38,560
meet at the gather room number eight

92
00:06:38,560 --> 00:06:41,840
uh where we can speak more informally

93
00:06:41,840 --> 00:06:47,120
about the protocol and where we're going

94
00:06:47,120 --> 00:06:51,360
and with that i'll pass it to

95
00:06:51,360 --> 00:06:54,160
is it aaron

96
00:07:00,160 --> 00:07:03,520
am i starting this oh yeah

97
00:07:03,520 --> 00:07:05,039
i don't remember what our first slide is

98
00:07:05,039 --> 00:07:07,360
actually

99
00:07:13,039 --> 00:07:14,800
are the uh are the chairs sharing the

100
00:07:14,800 --> 00:07:16,400
slides or are

101
00:07:16,400 --> 00:07:20,080
we going to the editors put all of our

102
00:07:20,080 --> 00:07:21,840
slides into one deck that one deck that

103
00:07:21,840 --> 00:07:23,199
we sent along

104
00:07:23,199 --> 00:07:28,479
yeah so yes please share the slides

105
00:07:29,280 --> 00:07:31,599
aaron do you want to do that or okay

106
00:07:31,599 --> 00:07:33,759
cool

107
00:07:34,639 --> 00:07:36,560
all those handed over to you when we

108
00:07:36,560 --> 00:07:39,199
switch over

109
00:07:40,720 --> 00:07:44,319
just go ahead we can do that of course

110
00:07:44,319 --> 00:07:46,240
but i think it's more efficient if

111
00:07:46,240 --> 00:07:49,120
if iran does

112
00:07:50,240 --> 00:07:59,840
sure sorry one second

113
00:08:09,039 --> 00:08:13,840
there we go yep

114
00:08:16,160 --> 00:08:18,080
all right hi i'm aaron parecki for the

115
00:08:18,080 --> 00:08:20,480
note takers um

116
00:08:20,480 --> 00:08:21,840
[Music]

117
00:08:21,840 --> 00:08:24,879
rough agenda of what the

118
00:08:24,879 --> 00:08:28,080
editors have yeah that's the wrong slide

119
00:08:28,080 --> 00:08:30,000
deck that's from the last interim

120
00:08:30,000 --> 00:08:32,639
oh my gosh

121
00:08:33,440 --> 00:08:36,958
thank you they all look the same

122
00:08:36,958 --> 00:08:38,958
they all look the same and time is going

123
00:08:38,958 --> 00:08:40,159
very quickly

124
00:08:40,159 --> 00:08:43,360
that's the other problem here

125
00:08:48,399 --> 00:08:55,839
i was like surely it's still february

126
00:08:58,080 --> 00:09:00,080
um justin i don't think they have it do

127
00:09:00,080 --> 00:09:02,160
you have it handy

128
00:09:02,160 --> 00:09:05,279
yeah i'll do i'll do it i

129
00:09:05,279 --> 00:09:06,560
am not sure why it's not showing up in

130
00:09:06,560 --> 00:09:10,079
my google list slide

131
00:09:15,680 --> 00:09:18,959
sorry just making sure i'm

132
00:09:19,360 --> 00:09:22,959
sharing my screen all right so just

133
00:09:22,959 --> 00:09:24,959
let me know when to advertise yes that's

134
00:09:24,959 --> 00:09:26,720
good

135
00:09:26,720 --> 00:09:29,839
and it's the right slides

136
00:09:31,839 --> 00:09:37,839
that's uh very helpful thank you

137
00:09:39,200 --> 00:09:44,240
right so um yeah the agenda

138
00:09:46,160 --> 00:09:50,160
is that looking it yeah it doesn't look

139
00:09:50,160 --> 00:09:53,279
yeah it's funny for me too

140
00:09:53,279 --> 00:09:56,720
it's got like yeah from windows

141
00:09:56,720 --> 00:10:01,519
can you can you unshare and reshare

142
00:10:01,600 --> 00:10:03,600
it's presentation mode in this for some

143
00:10:03,600 --> 00:10:04,880
reason

144
00:10:04,880 --> 00:10:07,680
let me try that again

145
00:10:10,240 --> 00:10:13,279
can you share just the one window

146
00:10:13,279 --> 00:10:16,800
yeah i'll try that this is why i don't

147
00:10:16,800 --> 00:10:19,600
i don't usually like being the uh the

148
00:10:19,600 --> 00:10:20,320
one to

149
00:10:20,320 --> 00:10:22,480
do if you just send me that link i can

150
00:10:22,480 --> 00:10:23,839
call it up to

151
00:10:23,839 --> 00:10:28,079
yeah i'll i'll send it over on slack

152
00:10:28,079 --> 00:10:33,279
give me a sec um

153
00:10:33,279 --> 00:10:37,680
all right so there we go

154
00:10:41,200 --> 00:10:44,839
on okay let's see if that works any

155
00:10:44,839 --> 00:10:46,640
better

156
00:10:46,640 --> 00:10:48,399
oh yeah there we go that seems to be

157
00:10:48,399 --> 00:10:51,519
worse looks better just go with this

158
00:10:51,519 --> 00:10:54,240
all right perfect

159
00:10:56,320 --> 00:10:58,480
so yeah the rough agenda of what the

160
00:10:58,480 --> 00:11:00,160
editors have in mind for

161
00:11:00,160 --> 00:11:03,279
topics to cover today um i'm going to

162
00:11:03,279 --> 00:11:04,880
start with the

163
00:11:04,880 --> 00:11:08,079
update to the core uh docs

164
00:11:08,079 --> 00:11:10,360
talking about what we have changed since

165
00:11:10,360 --> 00:11:12,640
ietf109

166
00:11:12,640 --> 00:11:15,200
some of that has been covered already in

167
00:11:15,200 --> 00:11:16,800
the interim meetings but i'm

168
00:11:16,800 --> 00:11:18,079
we are assuming that not everybody was

169
00:11:18,079 --> 00:11:20,000
at all of those

170
00:11:20,000 --> 00:11:23,040
so we will recap those as well

171
00:11:23,040 --> 00:11:26,079
um we talk about the sort of uh overview

172
00:11:26,079 --> 00:11:28,000
of what we think the next

173
00:11:28,000 --> 00:11:30,880
larger topics will be for discussion and

174
00:11:30,880 --> 00:11:32,000
for future work

175
00:11:32,000 --> 00:11:34,000
and then as a couple of specific topics

176
00:11:34,000 --> 00:11:35,040
to discuss

177
00:11:35,040 --> 00:11:38,240
um which um

178
00:11:38,240 --> 00:11:40,720
the others will chime in on and cover so

179
00:11:40,720 --> 00:11:42,640
subject identifiers and

180
00:11:42,640 --> 00:11:46,320
on-device use cases

181
00:11:46,320 --> 00:11:50,160
um ssi things like that

182
00:11:50,480 --> 00:11:53,760
all right so next slide

183
00:11:53,760 --> 00:11:56,160
differences since ietf109 we have

184
00:11:56,160 --> 00:11:57,920
everything linked handily in this

185
00:11:57,920 --> 00:12:01,519
slide deck so um

186
00:12:01,519 --> 00:12:04,320
the the slide deck i believe you can

187
00:12:04,320 --> 00:12:05,360
download from the

188
00:12:05,360 --> 00:12:07,440
meeting materials if you are curious and

189
00:12:07,440 --> 00:12:10,720
then all those links are clickable

190
00:12:10,720 --> 00:12:14,000
so we have um published

191
00:12:14,000 --> 00:12:17,120
two uh two incremental drafts of four's

192
00:12:17,120 --> 00:12:18,240
the current draft

193
00:12:18,240 --> 00:12:20,800
and this is the full diff but we're

194
00:12:20,800 --> 00:12:21,920
gonna break this down

195
00:12:21,920 --> 00:12:25,360
um go ahead to the next slide

196
00:12:25,360 --> 00:12:26,880
uh everything that we have been working

197
00:12:26,880 --> 00:12:28,880
on in the draft is

198
00:12:28,880 --> 00:12:32,240
captured in github so that includes

199
00:12:32,240 --> 00:12:34,079
the discussions about what's been going

200
00:12:34,079 --> 00:12:35,760
on the um

201
00:12:35,760 --> 00:12:38,399
uh some you know justifications and and

202
00:12:38,399 --> 00:12:40,880
thoughts going into those threads

203
00:12:40,880 --> 00:12:42,399
everything is captured as issues and

204
00:12:42,399 --> 00:12:43,680
then created as pull requests to

205
00:12:43,680 --> 00:12:45,040
actually change the document

206
00:12:45,040 --> 00:12:47,519
so you can click on that link which

207
00:12:47,519 --> 00:12:48,240
looks at

208
00:12:48,240 --> 00:12:50,839
all of the poll requests that have been

209
00:12:50,839 --> 00:12:52,000
merged

210
00:12:52,000 --> 00:12:54,160
that are the diffs of between the two

211
00:12:54,160 --> 00:12:55,600
documents

212
00:12:55,600 --> 00:12:58,560
25 pull requests in total um and there's

213
00:12:58,560 --> 00:13:00,240
a lot of good stuff

214
00:13:00,240 --> 00:13:06,480
in there so go into the next slide

215
00:13:06,480 --> 00:13:08,560
functional changes so these numbers are

216
00:13:08,560 --> 00:13:10,000
issue numbers on github

217
00:13:10,000 --> 00:13:12,000
and again if you're curious about some

218
00:13:12,000 --> 00:13:13,519
of the details about these changes you

219
00:13:13,519 --> 00:13:14,959
can click on those or

220
00:13:14,959 --> 00:13:18,079
find the issue number on the github repo

221
00:13:18,079 --> 00:13:21,279
to um look at the

222
00:13:21,279 --> 00:13:23,200
sort of problem summary which is usually

223
00:13:23,200 --> 00:13:24,720
how the issue starts and then

224
00:13:24,720 --> 00:13:28,399
there'll be a discussion about um how

225
00:13:28,399 --> 00:13:30,079
you know how everybody thought best to

226
00:13:30,079 --> 00:13:32,839
resolve that particular issue

227
00:13:32,839 --> 00:13:35,839
so starting at the top there was a there

228
00:13:35,839 --> 00:13:37,040
was previously oh

229
00:13:37,040 --> 00:13:39,360
another option for sort of kicking off

230
00:13:39,360 --> 00:13:41,440
the flow which was to use a short url

231
00:13:41,440 --> 00:13:43,360
instead of a

232
00:13:43,360 --> 00:13:46,399
long or regular url uh that kind of

233
00:13:46,399 --> 00:13:48,399
overlapped too much with

234
00:13:48,399 --> 00:13:52,160
the regular url redirect slash the uh

235
00:13:52,160 --> 00:13:55,440
sort of qr code device style redirect

236
00:13:55,440 --> 00:13:57,360
and we thought it wasn't needed so that

237
00:13:57,360 --> 00:13:58,480
is now dropped

238
00:13:58,480 --> 00:14:00,399
um a lot of you'll you'll sort of see

239
00:14:00,399 --> 00:14:02,240
this theme here throughout

240
00:14:02,240 --> 00:14:04,320
these changes which is a lot of what

241
00:14:04,320 --> 00:14:05,920
we're trying to do is simplify simplify

242
00:14:05,920 --> 00:14:07,440
some of that so trying to reduce the

243
00:14:07,440 --> 00:14:09,120
number of optional pieces

244
00:14:09,120 --> 00:14:12,480
to make it just so that it is less

245
00:14:12,480 --> 00:14:15,760
less normative text less

246
00:14:15,760 --> 00:14:17,760
optional pieces so that there's more

247
00:14:17,760 --> 00:14:20,320
chance of actually having something

248
00:14:20,320 --> 00:14:23,360
functional and interoperable

249
00:14:23,360 --> 00:14:26,560
um the next one 140 that is we

250
00:14:26,560 --> 00:14:29,600
we dropped the section in the spec that

251
00:14:29,600 --> 00:14:31,680
talked about how to request open any

252
00:14:31,680 --> 00:14:33,440
connect claims

253
00:14:33,440 --> 00:14:35,760
we thought that was sort of stepping too

254
00:14:35,760 --> 00:14:37,040
far out of the realm of

255
00:14:37,040 --> 00:14:40,240
the core goals of of gnap and

256
00:14:40,240 --> 00:14:43,279
i thought it'd be best left to

257
00:14:43,279 --> 00:14:45,519
specify that so that you know something

258
00:14:45,519 --> 00:14:47,040
like openid connect can actually specify

259
00:14:47,040 --> 00:14:48,079
that on top of

260
00:14:48,079 --> 00:14:50,240
an app instead of the other way around

261
00:14:50,240 --> 00:14:51,519
basically we thought there was

262
00:14:51,519 --> 00:14:53,760
too many ways we could mess that up if

263
00:14:53,760 --> 00:14:55,279
we put it into the core and it wouldn't

264
00:14:55,279 --> 00:14:57,199
actually capture the real intent of or

265
00:14:57,199 --> 00:14:59,040
the real goals of

266
00:14:59,040 --> 00:15:03,360
opening connect going in this direction

267
00:15:03,839 --> 00:15:07,120
uh 129 67 so that is

268
00:15:07,120 --> 00:15:10,160
um the continuation request is when the

269
00:15:10,160 --> 00:15:11,120
client is

270
00:15:11,120 --> 00:15:14,320
you know continuing to ask for progress

271
00:15:14,320 --> 00:15:14,959
updates on

272
00:15:14,959 --> 00:15:18,560
on the the grant there were again two

273
00:15:18,560 --> 00:15:20,079
different ways to handle it

274
00:15:20,079 --> 00:15:21,680
now there is one way it is using access

275
00:15:21,680 --> 00:15:26,399
tokens to make that request

276
00:15:26,399 --> 00:15:27,839
okay change access token requests and

277
00:15:27,839 --> 00:15:29,680
response there's a whole bunch of issues

278
00:15:29,680 --> 00:15:31,440
linked there that was kind of a

279
00:15:31,440 --> 00:15:34,880
large syntactical change and

280
00:15:34,880 --> 00:15:36,959
uh we have some slides talking about

281
00:15:36,959 --> 00:15:38,320
those in a minute but

282
00:15:38,320 --> 00:15:40,560
basically there's a large syntax change

283
00:15:40,560 --> 00:15:41,519
talking about

284
00:15:41,519 --> 00:15:44,320
how um

285
00:15:44,720 --> 00:15:46,240
how the requests and the response are

286
00:15:46,240 --> 00:15:48,560
formatted again to bring

287
00:15:48,560 --> 00:15:52,320
simplicity and consistency to the spec

288
00:15:52,320 --> 00:15:55,279
uh 152 that key information that was

289
00:15:55,279 --> 00:15:56,880
essentially just refactoring the spec

290
00:15:56,880 --> 00:15:57,519
itself not

291
00:15:57,519 --> 00:15:59,920
any functional changes but it is moving

292
00:15:59,920 --> 00:16:01,680
the whole in section that talks about

293
00:16:01,680 --> 00:16:02,480
how to present

294
00:16:02,480 --> 00:16:05,600
keys and how key proofing works and

295
00:16:05,600 --> 00:16:07,040
there still are several different

296
00:16:07,040 --> 00:16:09,680
options for that within the spec

297
00:16:09,680 --> 00:16:11,680
but that whole section is now like

298
00:16:11,680 --> 00:16:13,440
broken out into a specific section

299
00:16:13,440 --> 00:16:14,959
because it's referenced now by many

300
00:16:14,959 --> 00:16:15,680
different places

301
00:16:15,680 --> 00:16:18,239
in the spec

302
00:16:19,360 --> 00:16:22,240
122 163 grouping interaction modes so

303
00:16:22,240 --> 00:16:24,160
interaction modes are the different ways

304
00:16:24,160 --> 00:16:26,959
that a client can say it can interact

305
00:16:26,959 --> 00:16:28,720
with the user it can it can tell the

306
00:16:28,720 --> 00:16:30,480
server hey i can redirect the user in a

307
00:16:30,480 --> 00:16:31,440
browser or

308
00:16:31,440 --> 00:16:34,320
i can show them a code on a screen i can

309
00:16:34,320 --> 00:16:36,000
be redirected to or i cannot be

310
00:16:36,000 --> 00:16:37,279
redirected to

311
00:16:37,279 --> 00:16:38,399
things like that those are all the

312
00:16:38,399 --> 00:16:40,320
different modes um

313
00:16:40,320 --> 00:16:43,519
those are now grouped and labeled

314
00:16:43,519 --> 00:16:45,279
more explicitly so that hopefully just

315
00:16:45,279 --> 00:16:47,519
by looking at json syntax

316
00:16:47,519 --> 00:16:50,160
you have a better idea of what each of

317
00:16:50,160 --> 00:16:52,160
those pieces is actually meant to do

318
00:16:52,160 --> 00:16:54,880
and don't have to go and look it up

319
00:16:54,880 --> 00:16:57,360
hopefully

320
00:16:57,680 --> 00:17:00,320
uh lastly dropped reading the grant and

321
00:17:00,320 --> 00:17:01,360
token

322
00:17:01,360 --> 00:17:05,520
again this was in the in the theme of

323
00:17:05,520 --> 00:17:07,919
uh in the theme of trying to simplify

324
00:17:07,919 --> 00:17:08,720
and

325
00:17:08,720 --> 00:17:12,720
remove optional things nobody seemed to

326
00:17:12,720 --> 00:17:15,359
uh care about having uh this option

327
00:17:15,359 --> 00:17:17,119
available and this was previously a way

328
00:17:17,119 --> 00:17:19,199
to sort of have the client

329
00:17:19,199 --> 00:17:21,679
query the server to ask about tokens and

330
00:17:21,679 --> 00:17:23,280
ask about progress reports and things

331
00:17:23,280 --> 00:17:25,039
like that but without any concrete use

332
00:17:25,039 --> 00:17:27,039
cases or concrete needs

333
00:17:27,039 --> 00:17:29,280
it's just generally better to not have

334
00:17:29,280 --> 00:17:30,880
those options in there so there's less

335
00:17:30,880 --> 00:17:32,559
stuff to even worry about in the first

336
00:17:32,559 --> 00:17:34,799
place

337
00:17:34,799 --> 00:17:38,000
okay so next slide

338
00:17:38,000 --> 00:17:41,360
um this is an example of the new

339
00:17:41,360 --> 00:17:44,640
syntax for requesting an access token

340
00:17:44,640 --> 00:17:47,840
so you'll see there's um

341
00:17:47,840 --> 00:17:50,559
this sort of container access token the

342
00:17:50,559 --> 00:17:51,600
little yellow border

343
00:17:51,600 --> 00:17:54,240
on the outside and that is now meant to

344
00:17:54,240 --> 00:17:55,600
say hey the client is asking for an

345
00:17:55,600 --> 00:17:56,640
access token

346
00:17:56,640 --> 00:17:58,799
and then within that are the different

347
00:17:58,799 --> 00:18:01,039
aspects of the request

348
00:18:01,039 --> 00:18:02,960
one of those aspects is called access

349
00:18:02,960 --> 00:18:04,640
that is a new name for it

350
00:18:04,640 --> 00:18:07,280
and that talks about it's a it's a it's

351
00:18:07,280 --> 00:18:07,679
a

352
00:18:07,679 --> 00:18:09,520
full object that talks about the

353
00:18:09,520 --> 00:18:10,799
different kinds of things it's actually

354
00:18:10,799 --> 00:18:11,840
asking for

355
00:18:11,840 --> 00:18:15,280
so that that might be

356
00:18:15,280 --> 00:18:18,320
excuse me uh that might be asking for

357
00:18:18,320 --> 00:18:19,760
specific actions which

358
00:18:19,760 --> 00:18:21,520
kind of roughly correspond to oauth

359
00:18:21,520 --> 00:18:22,799
scopes

360
00:18:22,799 --> 00:18:24,080
you might be asking for access to

361
00:18:24,080 --> 00:18:25,760
particular apis at specific locations

362
00:18:25,760 --> 00:18:27,520
those are those urls

363
00:18:27,520 --> 00:18:29,440
um you can throw in data types in there

364
00:18:29,440 --> 00:18:31,120
as well so those are all now grouped

365
00:18:31,120 --> 00:18:35,039
there um those don't have to be rich

366
00:18:35,039 --> 00:18:35,600
objects

367
00:18:35,600 --> 00:18:37,039
they can also it can also just be a

368
00:18:37,039 --> 00:18:38,799
string so the simple case is that

369
00:18:38,799 --> 00:18:40,720
one that's called reference or labeled

370
00:18:40,720 --> 00:18:42,320
reference where it's just read

371
00:18:42,320 --> 00:18:43,520
so the idea is that that would

372
00:18:43,520 --> 00:18:45,440
correspond to some sort of rich

373
00:18:45,440 --> 00:18:46,880
thing on the server side on the

374
00:18:46,880 --> 00:18:48,559
authorization server

375
00:18:48,559 --> 00:18:50,720
that isn't necessarily described in

376
00:18:50,720 --> 00:18:52,160
detail by the client

377
00:18:52,160 --> 00:18:53,600
so again we're trying to make it so that

378
00:18:53,600 --> 00:18:55,360
the simple cases work simply but you do

379
00:18:55,360 --> 00:18:56,720
have more flexibility to

380
00:18:56,720 --> 00:19:00,320
be more specific if you need to

381
00:19:00,880 --> 00:19:03,200
and then flags and labels are again

382
00:19:03,200 --> 00:19:04,240
other aspects of

383
00:19:04,240 --> 00:19:07,760
the request so flags are broken out

384
00:19:07,760 --> 00:19:09,360
instead of i think we used to have it as

385
00:19:09,360 --> 00:19:12,320
boolean values but now the presence of

386
00:19:12,320 --> 00:19:12,799
the

387
00:19:12,799 --> 00:19:15,760
of the string there indicates that it is

388
00:19:15,760 --> 00:19:17,039
part of the request

389
00:19:17,039 --> 00:19:18,880
um those are again things the client is

390
00:19:18,880 --> 00:19:20,720
requesting and then label as if the

391
00:19:20,720 --> 00:19:22,160
client is asking for

392
00:19:22,160 --> 00:19:23,280
it's really only useful to clients

393
00:19:23,280 --> 00:19:25,280
asking for more than one access token

394
00:19:25,280 --> 00:19:26,960
it's asking the server to label that

395
00:19:26,960 --> 00:19:29,360
token with that label when it returns

396
00:19:29,360 --> 00:19:32,000
the multiple tokens

397
00:19:32,000 --> 00:19:34,240
so again this is i believe everything in

398
00:19:34,240 --> 00:19:36,320
this was previously in the spec as far

399
00:19:36,320 --> 00:19:38,240
as the functionality goes

400
00:19:38,240 --> 00:19:41,120
the syntax is new and it's meant to be

401
00:19:41,120 --> 00:19:42,720
hopefully a little bit clearer about how

402
00:19:42,720 --> 00:19:44,000
things are grouped and how to

403
00:19:44,000 --> 00:19:47,760
how to find and look these things up

404
00:19:47,919 --> 00:19:52,320
uh next slide

405
00:19:52,320 --> 00:19:55,919
so same idea here this is actually only

406
00:19:55,919 --> 00:19:56,799
slightly different

407
00:19:56,799 --> 00:19:58,880
than the previous syntax but this is how

408
00:19:58,880 --> 00:20:00,559
this is the part where the client tells

409
00:20:00,559 --> 00:20:01,840
the authorization server

410
00:20:01,840 --> 00:20:05,440
how it can interact with the user so

411
00:20:05,440 --> 00:20:06,799
there's two parts to the interaction

412
00:20:06,799 --> 00:20:08,559
with the user there's how the client can

413
00:20:08,559 --> 00:20:10,880
start the interaction and how the client

414
00:20:10,880 --> 00:20:12,400
can finish the interaction

415
00:20:12,400 --> 00:20:15,200
so the start would be i can redirect the

416
00:20:15,200 --> 00:20:16,880
user's browser because i'm interacting

417
00:20:16,880 --> 00:20:18,720
with the user in a browser already

418
00:20:18,720 --> 00:20:21,520
or it could be that it's more like a

419
00:20:21,520 --> 00:20:23,520
browserless device or like a

420
00:20:23,520 --> 00:20:25,679
a smart tv where it doesn't have a

421
00:20:25,679 --> 00:20:26,960
browser it doesn't have the ability to

422
00:20:26,960 --> 00:20:28,159
interact with the user that way but it

423
00:20:28,159 --> 00:20:29,760
can show them a code

424
00:20:29,760 --> 00:20:31,039
like a user code where they can type it

425
00:20:31,039 --> 00:20:32,960
in on a separate device so those are the

426
00:20:32,960 --> 00:20:33,679
two different

427
00:20:33,679 --> 00:20:35,919
modes in this example of how a client

428
00:20:35,919 --> 00:20:37,760
can start the interaction

429
00:20:37,760 --> 00:20:38,960
and how the client can finish the

430
00:20:38,960 --> 00:20:41,360
interaction um if the client has the

431
00:20:41,360 --> 00:20:43,360
ability to be redirected back to

432
00:20:43,360 --> 00:20:44,720
from the authorization server then

433
00:20:44,720 --> 00:20:46,880
that's uh method redirect

434
00:20:46,880 --> 00:20:48,640
there's also a method i believe it's

435
00:20:48,640 --> 00:20:50,240
called uh

436
00:20:50,240 --> 00:20:51,440
now i'm blind now i'm creating the name

437
00:20:51,440 --> 00:20:54,640
of it um

438
00:20:54,960 --> 00:20:56,799
doesn't matter push that's what it is um

439
00:20:56,799 --> 00:20:58,400
method push where

440
00:20:58,400 --> 00:21:00,640
if the client has the ability to receive

441
00:21:00,640 --> 00:21:02,400
a post request directly so that would be

442
00:21:02,400 --> 00:21:03,760
something that's like on a server rather

443
00:21:03,760 --> 00:21:05,360
than on a mobile phone

444
00:21:05,360 --> 00:21:08,320
um that's another option as well or it

445
00:21:08,320 --> 00:21:09,679
could omit this because it doesn't have

446
00:21:09,679 --> 00:21:10,240
a way to

447
00:21:10,240 --> 00:21:12,880
to handle a redirect or any sort of

448
00:21:12,880 --> 00:21:14,159
response back from the server in which

449
00:21:14,159 --> 00:21:16,480
case it would fall back to polling

450
00:21:16,480 --> 00:21:19,039
but the idea is that it is these are now

451
00:21:19,039 --> 00:21:20,640
grouped into the start and finish so

452
00:21:20,640 --> 00:21:22,000
that it's more clear

453
00:21:22,000 --> 00:21:23,520
what the request is actually

454
00:21:23,520 --> 00:21:25,039
representing and then that

455
00:21:25,039 --> 00:21:26,559
hints at the bottom there's only one

456
00:21:26,559 --> 00:21:28,640
defined which is the locales

457
00:21:28,640 --> 00:21:30,640
of the the client can suggest to the

458
00:21:30,640 --> 00:21:32,159
authorization server

459
00:21:32,159 --> 00:21:34,799
um but that that is meant to be there

460
00:21:34,799 --> 00:21:36,159
for other kinds of

461
00:21:36,159 --> 00:21:38,320
hints as well from the client that's

462
00:21:38,320 --> 00:21:39,840
kind of the client requesting that the

463
00:21:39,840 --> 00:21:41,760
server behave a certain way

464
00:21:41,760 --> 00:21:43,520
obviously it can't enforce that but it

465
00:21:43,520 --> 00:21:46,480
is a request from the client

466
00:21:46,480 --> 00:21:47,919
so the grouping is the main new thing

467
00:21:47,919 --> 00:21:49,360
and this again these functions were

468
00:21:49,360 --> 00:21:51,360
already there before

469
00:21:51,360 --> 00:21:54,400
uh okay next and uh

470
00:21:54,400 --> 00:21:58,080
last slide for me editorial changes um

471
00:21:58,080 --> 00:21:58,559
there's a

472
00:21:58,559 --> 00:22:00,640
we did a whole bunch of this stuff and

473
00:22:00,640 --> 00:22:02,720
um again these aren't super critical i'm

474
00:22:02,720 --> 00:22:03,840
not gonna spend too much time on

475
00:22:03,840 --> 00:22:06,240
the details but the idea of the

476
00:22:06,240 --> 00:22:07,200
editorial changes

477
00:22:07,200 --> 00:22:09,280
is it's just stuff that we thought read

478
00:22:09,280 --> 00:22:10,240
better in the spec

479
00:22:10,240 --> 00:22:14,559
and um this is you know fixing typos

480
00:22:14,559 --> 00:22:16,480
clarifying language it's not changing

481
00:22:16,480 --> 00:22:18,159
any functionality or any syntax or

482
00:22:18,159 --> 00:22:19,200
anything like that so

483
00:22:19,200 --> 00:22:22,480
did a handful of that and um there's a

484
00:22:22,480 --> 00:22:24,000
couple of

485
00:22:24,000 --> 00:22:27,520
um actually new uh fixes

486
00:22:27,520 --> 00:22:29,840
since o4 pending thanks to some other

487
00:22:29,840 --> 00:22:31,520
contributors as well

488
00:22:31,520 --> 00:22:34,080
so thank you for all of that work on on

489
00:22:34,080 --> 00:22:35,679
github

490
00:22:35,679 --> 00:22:40,080
uh and with that

491
00:22:40,080 --> 00:22:42,640
to discussion items and i believe this

492
00:22:42,640 --> 00:22:44,400
is

493
00:22:44,400 --> 00:22:48,640
justin yeah i think i'm broadcasting now

494
00:22:48,640 --> 00:22:51,200
okay and uh i i will say before we move

495
00:22:51,200 --> 00:22:52,640
on um

496
00:22:52,640 --> 00:22:55,840
on that last one a big thanks to fabian

497
00:22:55,840 --> 00:22:57,679
for taking the lead on the terminology

498
00:22:57,679 --> 00:22:58,559
discussion

499
00:22:58,559 --> 00:23:00,480
there was a even though it kind of

500
00:23:00,480 --> 00:23:01,679
counts as editorial

501
00:23:01,679 --> 00:23:03,440
uh because it's not changing the

502
00:23:03,440 --> 00:23:06,000
technical stuff naming stuff is hard

503
00:23:06,000 --> 00:23:08,640
and uh he did a lot a lot of really good

504
00:23:08,640 --> 00:23:10,559
work to uh to move that forward so

505
00:23:10,559 --> 00:23:11,440
thanks for that

506
00:23:11,440 --> 00:23:16,159
um all right so uh

507
00:23:16,240 --> 00:23:18,720
we did a lot of work since the last ietf

508
00:23:18,720 --> 00:23:20,080
and so the question now

509
00:23:20,080 --> 00:23:23,520
is what are we working on next right um

510
00:23:23,520 --> 00:23:25,840
so today we're going to talk about two

511
00:23:25,840 --> 00:23:26,559
things

512
00:23:26,559 --> 00:23:28,720
in detail uh fabian's going to be

513
00:23:28,720 --> 00:23:29,919
discussing uh

514
00:23:29,919 --> 00:23:31,840
subject identifiers and you know

515
00:23:31,840 --> 00:23:33,039
identifying users

516
00:23:33,039 --> 00:23:34,960
and different use cases that tie into

517
00:23:34,960 --> 00:23:37,120
that and i'm going to be uh spending

518
00:23:37,120 --> 00:23:38,480
some time talking about

519
00:23:38,480 --> 00:23:41,840
these on-device use cases um

520
00:23:41,840 --> 00:23:43,679
and the fallout from that in some of the

521
00:23:43,679 --> 00:23:45,200
interim calls we had

522
00:23:45,200 --> 00:23:46,480
a lot of discussions about

523
00:23:46,480 --> 00:23:47,840
self-sovereign identity and how that

524
00:23:47,840 --> 00:23:49,679
could relate into the knapp world

525
00:23:49,679 --> 00:23:52,240
and so i'll be talking about that a

526
00:23:52,240 --> 00:23:53,120
little bit later on

527
00:23:53,120 --> 00:23:54,720
but there's two other issues that i

528
00:23:54,720 --> 00:23:56,960
wanted to touch on really quick here

529
00:23:56,960 --> 00:23:58,640
uh we're not planning on getting in

530
00:23:58,640 --> 00:24:01,039
depth in either of these on this call

531
00:24:01,039 --> 00:24:03,440
but the editors have identified all of

532
00:24:03,440 --> 00:24:04,159
these areas

533
00:24:04,159 --> 00:24:07,600
as things that we're going to try and

534
00:24:07,600 --> 00:24:08,640
prioritize

535
00:24:08,640 --> 00:24:10,799
between now and the next ietf meeting

536
00:24:10,799 --> 00:24:12,720
for work on this specification

537
00:24:12,720 --> 00:24:14,320
other things obviously will come up

538
00:24:14,320 --> 00:24:15,840
other discussions that happen the

539
00:24:15,840 --> 00:24:17,039
working group will happen

540
00:24:17,039 --> 00:24:18,799
but this is at least where we're looking

541
00:24:18,799 --> 00:24:20,799
to start um

542
00:24:20,799 --> 00:24:23,919
ahead of ietf 111

543
00:24:23,919 --> 00:24:25,279
so first off there are a lot of

544
00:24:25,279 --> 00:24:27,679
questions about how we handle key

545
00:24:27,679 --> 00:24:29,360
presentation and message signing in the

546
00:24:29,360 --> 00:24:31,120
draft

547
00:24:31,120 --> 00:24:33,760
and uh there are some changes happening

548
00:24:33,760 --> 00:24:34,799
outside

549
00:24:34,799 --> 00:24:37,279
of the ganap working group that we're

550
00:24:37,279 --> 00:24:38,799
going to be benefiting from

551
00:24:38,799 --> 00:24:41,120
first off the http message signature

552
00:24:41,120 --> 00:24:43,679
draft is progressing in the http working

553
00:24:43,679 --> 00:24:44,400
group

554
00:24:44,400 --> 00:24:47,360
it was a little bit stuck for a bit uh

555
00:24:47,360 --> 00:24:47,760
and

556
00:24:47,760 --> 00:24:50,720
um trying to help get that unstuck

557
00:24:50,720 --> 00:24:52,000
because i think that's going to be

558
00:24:52,000 --> 00:24:52,880
useful for a

559
00:24:52,880 --> 00:24:54,720
wide variety of things not just for us

560
00:24:54,720 --> 00:24:56,640
here in canap

561
00:24:56,640 --> 00:24:59,679
also thanks to some implementation

562
00:24:59,679 --> 00:25:01,440
experience from um

563
00:25:01,440 --> 00:25:04,159
aaron and myself we've got some ideas

564
00:25:04,159 --> 00:25:05,840
and some feedback from

565
00:25:05,840 --> 00:25:07,520
some some other folks posting in the

566
00:25:07,520 --> 00:25:09,279
issue tracker

567
00:25:09,279 --> 00:25:10,880
we've got some ideas on how we might be

568
00:25:10,880 --> 00:25:13,120
able to change how we're using the jose

569
00:25:13,120 --> 00:25:15,200
based signature mechanisms to make them

570
00:25:15,200 --> 00:25:18,320
a little less awkward in practice and

571
00:25:18,320 --> 00:25:20,640
this this goes to show that um you know

572
00:25:20,640 --> 00:25:22,640
getting multiple engineers to implement

573
00:25:22,640 --> 00:25:24,640
something and see where they disagree

574
00:25:24,640 --> 00:25:26,880
that's where you can uh you can really

575
00:25:26,880 --> 00:25:28,080
figure out where the standard

576
00:25:28,080 --> 00:25:32,000
needs to uh need some uh work um

577
00:25:32,000 --> 00:25:33,679
i also wanted to point folks in the

578
00:25:33,679 --> 00:25:35,600
group there that there is another group

579
00:25:35,600 --> 00:25:37,039
the fappy working group over in the

580
00:25:37,039 --> 00:25:38,720
openid foundation is working on a

581
00:25:38,720 --> 00:25:41,120
profile of oauth's depop signature

582
00:25:41,120 --> 00:25:43,200
mechanism that turns out to be very

583
00:25:43,200 --> 00:25:44,799
similar to what we have in the core

584
00:25:44,799 --> 00:25:46,400
document right now

585
00:25:46,400 --> 00:25:48,640
so we're going to be tracking and

586
00:25:48,640 --> 00:25:50,000
coordinating with that

587
00:25:50,000 --> 00:25:53,120
as best as we can and uh but that leads

588
00:25:53,120 --> 00:25:54,840
us to the big question

589
00:25:54,840 --> 00:25:57,760
of which of these

590
00:25:57,760 --> 00:26:00,640
methods are going to survive into the

591
00:26:00,640 --> 00:26:01,919
core document

592
00:26:01,919 --> 00:26:05,760
going forward which if any are going to

593
00:26:05,760 --> 00:26:06,080
be

594
00:26:06,080 --> 00:26:09,279
mandatory to implement and what are the

595
00:26:09,279 --> 00:26:11,760
failure states of the corner cases if a

596
00:26:11,760 --> 00:26:13,120
client can only do one thing and a

597
00:26:13,120 --> 00:26:13,600
server

598
00:26:13,600 --> 00:26:15,520
supports another thing how do they talk

599
00:26:15,520 --> 00:26:17,039
and how do we signal

600
00:26:17,039 --> 00:26:20,480
uh those things um we we don't have that

601
00:26:20,480 --> 00:26:22,320
all decided right now

602
00:26:22,320 --> 00:26:25,520
and that's going to be another big

603
00:26:25,520 --> 00:26:28,080
effort uh in align with what aaron was

604
00:26:28,080 --> 00:26:28,880
saying

605
00:26:28,880 --> 00:26:32,400
um in terms of simplifying the things

606
00:26:32,400 --> 00:26:32,960
that are there

607
00:26:32,960 --> 00:26:35,919
in order to make it um easier to

608
00:26:35,919 --> 00:26:36,559
implement

609
00:26:36,559 --> 00:26:39,840
easier to understand

610
00:26:39,840 --> 00:26:41,520
another big discussion that we need to

611
00:26:41,520 --> 00:26:43,360
have as a working group is managing key

612
00:26:43,360 --> 00:26:44,480
rotations

613
00:26:44,480 --> 00:26:46,640
we've got a bunch of different things

614
00:26:46,640 --> 00:26:47,760
that use keys

615
00:26:47,760 --> 00:26:49,840
all throughout this protocol it's really

616
00:26:49,840 --> 00:26:51,120
kind of

617
00:26:51,120 --> 00:26:52,799
built into the fabric of the protocol

618
00:26:52,799 --> 00:26:54,400
itself but

619
00:26:54,400 --> 00:26:56,799
we need to figure out how we're going to

620
00:26:56,799 --> 00:26:58,080
manage these different

621
00:26:58,080 --> 00:27:02,240
states of rotating these keys

622
00:27:02,240 --> 00:27:04,159
what does it mean for a client to rotate

623
00:27:04,159 --> 00:27:06,000
a key does that mean that all of the

624
00:27:06,000 --> 00:27:07,600
access tokens that have been issued to

625
00:27:07,600 --> 00:27:09,360
that client do they use a new key

626
00:27:09,360 --> 00:27:12,240
or the old key are do we allow an as to

627
00:27:12,240 --> 00:27:13,120
separate those

628
00:27:13,120 --> 00:27:15,919
do we require an as to separate those

629
00:27:15,919 --> 00:27:17,520
there's a lot of questions about how to

630
00:27:17,520 --> 00:27:18,240
do that

631
00:27:18,240 --> 00:27:22,240
um and uh in a way that's predictable

632
00:27:22,240 --> 00:27:26,159
uh because this is uh deep in the um

633
00:27:26,159 --> 00:27:28,320
security model of the protocol itself

634
00:27:28,320 --> 00:27:30,399
it's very very important

635
00:27:30,399 --> 00:27:33,039
that uh this be predictable for all of

636
00:27:33,039 --> 00:27:34,720
the parties involved

637
00:27:34,720 --> 00:27:38,080
and on top of that

638
00:27:38,080 --> 00:27:41,360
um then there's the

639
00:27:41,360 --> 00:27:43,919
the question of just how do we from a

640
00:27:43,919 --> 00:27:44,960
mechanical level

641
00:27:44,960 --> 00:27:48,799
allow different parties to rotate keys

642
00:27:48,799 --> 00:27:51,279
in these different circumstances um

643
00:27:51,279 --> 00:27:52,640
these are discussions that

644
00:27:52,640 --> 00:27:55,279
uh that we need to have and some some of

645
00:27:55,279 --> 00:27:56,159
the things that

646
00:27:56,159 --> 00:27:59,120
we hope to be able to uh tackle within

647
00:27:59,120 --> 00:27:59,760
the next

648
00:27:59,760 --> 00:28:03,520
um few months uh but now i'm going to

649
00:28:03,520 --> 00:28:06,720
hand it over to fabienne to talk about

650
00:28:06,720 --> 00:28:09,600
one of the big areas uh that we're going

651
00:28:09,600 --> 00:28:10,240
to

652
00:28:10,240 --> 00:28:12,080
try and tackle and that is that of

653
00:28:12,080 --> 00:28:13,919
subject identifiers so fabian just let

654
00:28:13,919 --> 00:28:16,159
me know when you want the next slide yes

655
00:28:16,159 --> 00:28:19,039
that's fine that's fine

656
00:28:19,279 --> 00:28:23,279
um so yes it's a discussion item

657
00:28:23,279 --> 00:28:25,279
so here again it's it's a bit different

658
00:28:25,279 --> 00:28:27,039
from the previous items that aaron has

659
00:28:27,039 --> 00:28:28,240
shown

660
00:28:28,240 --> 00:28:30,000
we're already going to discuss a few

661
00:28:30,000 --> 00:28:31,360
issues um

662
00:28:31,360 --> 00:28:33,679
and try to see how we can fix that and

663
00:28:33,679 --> 00:28:34,640
the objective

664
00:28:34,640 --> 00:28:37,120
in the end will be to provide a pull

665
00:28:37,120 --> 00:28:37,760
request

666
00:28:37,760 --> 00:28:42,399
in the next coming weeks next slide

667
00:28:42,840 --> 00:28:44,960
please

668
00:28:44,960 --> 00:28:48,159
um so the way we decided it would be a

669
00:28:48,159 --> 00:28:49,120
good subject to

670
00:28:49,120 --> 00:28:52,080
cover is because we looked at the list

671
00:28:52,080 --> 00:28:53,600
of open issues

672
00:28:53,600 --> 00:28:55,600
and basically we've got a lot that

673
00:28:55,600 --> 00:28:57,360
actually correspond to that subject so

674
00:28:57,360 --> 00:28:58,880
it's either

675
00:28:58,880 --> 00:29:01,440
subject identifiers by themselves or as

676
00:29:01,440 --> 00:29:02,159
sessions

677
00:29:02,159 --> 00:29:04,240
which are related also to the to the

678
00:29:04,240 --> 00:29:05,760
subject

679
00:29:05,760 --> 00:29:13,840
as well so yeah next slide please

680
00:29:22,799 --> 00:29:24,880
oh looks like we may have lost fabienne

681
00:29:24,880 --> 00:29:27,760
or at least he lost video

682
00:29:27,760 --> 00:29:31,440
yeah okay yep you're back

683
00:29:31,440 --> 00:29:34,159
so the first pr that we can discuss is

684
00:29:34,159 --> 00:29:35,919
in padding match status

685
00:29:35,919 --> 00:29:38,880
it's subject types so it's 184 and thank

686
00:29:38,880 --> 00:29:41,120
you andrew for submitting that

687
00:29:41,120 --> 00:29:44,240
so it's it's good also to to say that

688
00:29:44,240 --> 00:29:46,320
you can actually participate actively

689
00:29:46,320 --> 00:29:48,880
and in in such a case we actually

690
00:29:48,880 --> 00:29:50,000
reviewed

691
00:29:50,000 --> 00:29:53,440
the proposal and we actually accepted it

692
00:29:53,440 --> 00:29:55,679
and everyone can actually follow that on

693
00:29:55,679 --> 00:29:56,720
github

694
00:29:56,720 --> 00:29:59,440
so here this specific issue covers

695
00:29:59,440 --> 00:30:01,120
subject types

696
00:30:01,120 --> 00:30:03,600
so the idea is when you make a request

697
00:30:03,600 --> 00:30:05,440
you actually

698
00:30:05,440 --> 00:30:08,480
can request for for instance as a sub or

699
00:30:08,480 --> 00:30:09,360
the email or

700
00:30:09,360 --> 00:30:12,080
whatever type you choose and so what we

701
00:30:12,080 --> 00:30:13,760
want to do is to actually support the

702
00:30:13,760 --> 00:30:15,919
list of types which will be supported

703
00:30:15,919 --> 00:30:16,480
and that's

704
00:30:16,480 --> 00:30:20,000
actually in section 9 of the draft where

705
00:30:20,000 --> 00:30:21,200
you have discovery

706
00:30:21,200 --> 00:30:23,200
and you can actually get the list from

707
00:30:23,200 --> 00:30:24,480
the server

708
00:30:24,480 --> 00:30:27,520
so that's uh in the request and then

709
00:30:27,520 --> 00:30:29,600
in the response you get the list that

710
00:30:29,600 --> 00:30:31,120
you expect

711
00:30:31,120 --> 00:30:33,200
so just to summarize a bit how it works

712
00:30:33,200 --> 00:30:35,279
uh today in the drafts you've got

713
00:30:35,279 --> 00:30:37,840
a user part which is really what the

714
00:30:37,840 --> 00:30:39,440
client tells

715
00:30:39,440 --> 00:30:41,200
about the current user what you know

716
00:30:41,200 --> 00:30:43,440
from from from a fact

717
00:30:43,440 --> 00:30:45,520
on the client side so it's really more

718
00:30:45,520 --> 00:30:46,559
kind of a hint

719
00:30:46,559 --> 00:30:49,760
to the authorization server then you've

720
00:30:49,760 --> 00:30:50,080
got

721
00:30:50,080 --> 00:30:52,159
the request where you actually can

722
00:30:52,159 --> 00:30:53,200
request

723
00:30:53,200 --> 00:30:56,159
some some information about the user and

724
00:30:56,159 --> 00:30:58,080
the authorization server will actually

725
00:30:58,080 --> 00:30:58,880
respond

726
00:30:58,880 --> 00:31:02,799
using the response.subject

727
00:31:02,840 --> 00:31:05,200
json structure

728
00:31:05,200 --> 00:31:07,039
and you can actually get a lot of

729
00:31:07,039 --> 00:31:09,919
information from that

730
00:31:09,919 --> 00:31:13,760
so next slide please

731
00:31:15,120 --> 00:31:18,240
so one of the other issues we had is

732
00:31:18,240 --> 00:31:20,720
so we have two issues related to emails

733
00:31:20,720 --> 00:31:23,840
so there are 16 and 42

734
00:31:23,840 --> 00:31:26,480
and basically these two issues relate to

735
00:31:26,480 --> 00:31:28,320
the same idea that

736
00:31:28,320 --> 00:31:32,000
maybe email is not the best um

737
00:31:32,000 --> 00:31:35,519
way to actually describe

738
00:31:35,519 --> 00:31:37,760
the subject identifier at least it's not

739
00:31:37,760 --> 00:31:38,960
the one we want to

740
00:31:38,960 --> 00:31:42,320
encourage in in most cases

741
00:31:42,320 --> 00:31:44,240
for different reasons the first one is

742
00:31:44,240 --> 00:31:46,080
that we don't have really

743
00:31:46,080 --> 00:31:49,039
a good way to make it unique we don't

744
00:31:49,039 --> 00:31:50,000
have any

745
00:31:50,000 --> 00:31:52,640
information on the actual policy and

746
00:31:52,640 --> 00:31:54,159
also we don't really want to

747
00:31:54,159 --> 00:31:58,240
to tie that to delivery method so

748
00:31:58,240 --> 00:32:00,240
we need to think about other ways to

749
00:32:00,240 --> 00:32:02,720
actually write that it's not critical as

750
00:32:02,720 --> 00:32:03,120
it's

751
00:32:03,120 --> 00:32:06,000
only examples but at least try to find a

752
00:32:06,000 --> 00:32:07,919
way to

753
00:32:07,919 --> 00:32:11,120
help people use a method which is a bit

754
00:32:11,120 --> 00:32:12,960
more secure

755
00:32:12,960 --> 00:32:16,320
so just as a summary for people that um

756
00:32:16,320 --> 00:32:19,120
that haven't looked at the the draft

757
00:32:19,120 --> 00:32:19,919
recently

758
00:32:19,919 --> 00:32:22,880
uh the sec event is a draft uh it's not

759
00:32:22,880 --> 00:32:23,360
yet

760
00:32:23,360 --> 00:32:26,960
uh something that has been published as

761
00:32:26,960 --> 00:32:28,640
an official rfc

762
00:32:28,640 --> 00:32:30,960
but you do have a lot of interesting

763
00:32:30,960 --> 00:32:32,399
things and there's a new version

764
00:32:32,399 --> 00:32:34,559
which has just been published and so

765
00:32:34,559 --> 00:32:36,720
you've got accounts email phone

766
00:32:36,720 --> 00:32:39,120
issuer and you've got also aliases as

767
00:32:39,120 --> 00:32:40,000
well

768
00:32:40,000 --> 00:32:43,039
what i would propose is uh also to cover

769
00:32:43,039 --> 00:32:46,240
uh what i called es reference or as a

770
00:32:46,240 --> 00:32:48,320
reference it depends if it's specific to

771
00:32:48,320 --> 00:32:49,519
gnapp or if it's

772
00:32:49,519 --> 00:32:52,960
something generic for the second event

773
00:32:52,960 --> 00:32:54,880
working group

774
00:32:54,880 --> 00:32:56,880
and that would be a kind of opaque

775
00:32:56,880 --> 00:32:57,919
reference

776
00:32:57,919 --> 00:33:01,279
uh to the actual user and it would be

777
00:33:01,279 --> 00:33:02,640
something that

778
00:33:02,640 --> 00:33:05,200
the authorization server would would

779
00:33:05,200 --> 00:33:07,360
drive

780
00:33:07,360 --> 00:33:11,840
the next slide please

781
00:33:12,720 --> 00:33:18,010
um we also have uh quite a few

782
00:33:18,010 --> 00:33:19,200
[Music]

783
00:33:19,200 --> 00:33:21,919
discussions on the actual scope of the

784
00:33:21,919 --> 00:33:24,000
subject identifiers

785
00:33:24,000 --> 00:33:26,240
so the question mostly is about whether

786
00:33:26,240 --> 00:33:28,000
it's global or whether it's

787
00:33:28,000 --> 00:33:30,640
it's a local identifier and i know that

788
00:33:30,640 --> 00:33:32,159
denis for instance has some

789
00:33:32,159 --> 00:33:34,399
more ideas some more granular ideas on

790
00:33:34,399 --> 00:33:36,639
that

791
00:33:37,039 --> 00:33:39,120
here what we would propose is to

792
00:33:39,120 --> 00:33:40,799
actually take that

793
00:33:40,799 --> 00:33:43,440
from the definition that was accepted by

794
00:33:43,440 --> 00:33:44,480
the working group

795
00:33:44,480 --> 00:33:46,880
and it's said that it's basically a

796
00:33:46,880 --> 00:33:47,679
statement

797
00:33:47,679 --> 00:33:50,720
asserted locally by an is about a

798
00:33:50,720 --> 00:33:51,679
subject

799
00:33:51,679 --> 00:33:53,600
so here what we're saying is we're not

800
00:33:53,600 --> 00:33:55,200
going to cover global

801
00:33:55,200 --> 00:33:57,440
unique identifiers anyway we don't

802
00:33:57,440 --> 00:33:59,039
really think it's something that could

803
00:33:59,039 --> 00:34:00,720
be enforced by gnab

804
00:34:00,720 --> 00:34:02,399
we don't think it's the role of that to

805
00:34:02,399 --> 00:34:04,799
do that and even if we

806
00:34:04,799 --> 00:34:08,079
found a way to generate a global unique

807
00:34:08,079 --> 00:34:10,159
identifier how do you

808
00:34:10,159 --> 00:34:13,280
make people use it in practice also

809
00:34:13,280 --> 00:34:14,800
you've got a lot of privacy

810
00:34:14,800 --> 00:34:16,159
considerations

811
00:34:16,159 --> 00:34:20,000
that could hinder such a global unique

812
00:34:20,000 --> 00:34:21,040
method

813
00:34:21,040 --> 00:34:23,918
so basically the idea is it's more to go

814
00:34:23,918 --> 00:34:24,480
around

815
00:34:24,480 --> 00:34:26,800
something that's unique to the

816
00:34:26,800 --> 00:34:28,399
authorization server

817
00:34:28,399 --> 00:34:30,560
so we can actually identify and then we

818
00:34:30,560 --> 00:34:32,399
can correlate users

819
00:34:32,399 --> 00:34:34,719
that are actually identified by the

820
00:34:34,719 --> 00:34:36,079
authorization server

821
00:34:36,079 --> 00:34:39,679
but it's not a global system per se

822
00:34:39,679 --> 00:34:42,320
and then of course we can uh decide in

823
00:34:42,320 --> 00:34:42,719
more

824
00:34:42,719 --> 00:34:44,639
granular ways what we want to do with

825
00:34:44,639 --> 00:34:48,399
that but that's for a later discussion

826
00:34:48,399 --> 00:34:50,639
we also had some discussions um

827
00:34:50,639 --> 00:34:52,399
especially related to some work that's

828
00:34:52,399 --> 00:34:54,239
going on in the open ide

829
00:34:54,239 --> 00:34:58,800
community so that's issue 171

830
00:34:58,800 --> 00:35:01,440
the idea is that in open id you've got

831
00:35:01,440 --> 00:35:03,440
some discussions on how to

832
00:35:03,440 --> 00:35:06,560
make the identifiers portable from one

833
00:35:06,560 --> 00:35:08,960
implementation to another or from

834
00:35:08,960 --> 00:35:12,079
open id connect to deeds and so on

835
00:35:12,079 --> 00:35:14,480
um and so there are there are basically

836
00:35:14,480 --> 00:35:15,119
two ways

837
00:35:15,119 --> 00:35:17,280
we could support that the first one is

838
00:35:17,280 --> 00:35:18,480
through

839
00:35:18,480 --> 00:35:21,200
sec event aliases which are already

840
00:35:21,200 --> 00:35:23,440
existing in the spec

841
00:35:23,440 --> 00:35:26,240
and then it's related to the subject

842
00:35:26,240 --> 00:35:26,880
types

843
00:35:26,880 --> 00:35:30,079
that we discussed a bit earlier

844
00:35:30,079 --> 00:35:32,880
we also have assertions which are

845
00:35:32,880 --> 00:35:34,240
described into the

846
00:35:34,240 --> 00:35:38,800
map draft and then it's assertion types

847
00:35:38,800 --> 00:35:42,480
which are related to that information so

848
00:35:42,480 --> 00:35:45,119
the reason why we can cover uh

849
00:35:45,119 --> 00:35:46,000
portability

850
00:35:46,000 --> 00:35:47,680
thanks to that is because you've got a

851
00:35:47,680 --> 00:35:49,119
list of options

852
00:35:49,119 --> 00:35:51,040
so either a list of fallacies or a list

853
00:35:51,040 --> 00:35:52,960
of assertions related to the same

854
00:35:52,960 --> 00:35:54,000
identity

855
00:35:54,000 --> 00:35:56,800
and so you can actually get from one

856
00:35:56,800 --> 00:36:00,079
system of identifiers to the next

857
00:36:00,079 --> 00:36:02,560
and that's what you've got listed into

858
00:36:02,560 --> 00:36:03,760
the

859
00:36:03,760 --> 00:36:07,200
into the issue 171 and you can

860
00:36:07,200 --> 00:36:10,640
read the the draft of the specification

861
00:36:10,640 --> 00:36:13,440
for that it's interesting

862
00:36:13,440 --> 00:36:15,040
the question however is whether

863
00:36:15,040 --> 00:36:16,880
portability is really in the scope of

864
00:36:16,880 --> 00:36:18,560
what we want to do it seems a bit more

865
00:36:18,560 --> 00:36:20,079
transactional like

866
00:36:20,079 --> 00:36:23,119
going from an open id connect provider

867
00:36:23,119 --> 00:36:25,760
to a search of an identity type of

868
00:36:25,760 --> 00:36:27,040
presentation

869
00:36:27,040 --> 00:36:31,680
but anyway what we can do is

870
00:36:31,680 --> 00:36:34,160
is support interpretability between

871
00:36:34,160 --> 00:36:35,760
various identity systems

872
00:36:35,760 --> 00:36:38,480
and so we are agnostic to whether it's

873
00:36:38,480 --> 00:36:40,320
open id connect or

874
00:36:40,320 --> 00:36:43,119
some other type of identity system but

875
00:36:43,119 --> 00:36:45,920
we need to actually support what exists

876
00:36:45,920 --> 00:36:48,560
and so that's what kidnap i think can

877
00:36:48,560 --> 00:36:50,000
can bring

878
00:36:50,000 --> 00:36:51,920
and the current structure actually helps

879
00:36:51,920 --> 00:36:53,599
for that

880
00:36:53,599 --> 00:36:57,119
so next slide please

881
00:37:00,880 --> 00:37:03,280
so the next issue is related to the

882
00:37:03,280 --> 00:37:04,800
opaque reference

883
00:37:04,800 --> 00:37:08,240
so it's used for several things actually

884
00:37:08,240 --> 00:37:11,040
in in the specification it's used uh

885
00:37:11,040 --> 00:37:13,200
because in some cases you might want to

886
00:37:13,200 --> 00:37:14,079
actually

887
00:37:14,079 --> 00:37:16,720
have some identifier that you can use on

888
00:37:16,720 --> 00:37:17,599
repeated

889
00:37:17,599 --> 00:37:20,400
interactions through the authorization

890
00:37:20,400 --> 00:37:21,040
server

891
00:37:21,040 --> 00:37:22,480
or it could be used because it's

892
00:37:22,480 --> 00:37:24,400
actually something a bit like in

893
00:37:24,400 --> 00:37:27,040
in yuma today where you actually start

894
00:37:27,040 --> 00:37:28,720
from some other system

895
00:37:28,720 --> 00:37:32,079
and so you can actually refer to to that

896
00:37:32,079 --> 00:37:34,960
to that subject

897
00:37:35,760 --> 00:37:38,320
and here we have several options the one

898
00:37:38,320 --> 00:37:40,480
that's currently in the spec is what i

899
00:37:40,480 --> 00:37:41,760
call option two

900
00:37:41,760 --> 00:37:45,040
um basically what we have is a is a

901
00:37:45,040 --> 00:37:47,520
it's not called as reference it's called

902
00:37:47,520 --> 00:37:49,440
a bit differently but the idea would be

903
00:37:49,440 --> 00:37:51,040
to actually have

904
00:37:51,040 --> 00:37:53,440
an opaque reference or a string which

905
00:37:53,440 --> 00:37:54,400
looks random

906
00:37:54,400 --> 00:37:57,599
and that's actually referring to the

907
00:37:57,599 --> 00:38:00,960
current transaction

908
00:38:01,520 --> 00:38:04,160
a question that arises here is do we

909
00:38:04,160 --> 00:38:05,280
want to

910
00:38:05,280 --> 00:38:08,079
make it only local to the authorization

911
00:38:08,079 --> 00:38:08,560
server

912
00:38:08,560 --> 00:38:10,400
basically considering there's only one

913
00:38:10,400 --> 00:38:12,320
single authorization server although we

914
00:38:12,320 --> 00:38:12,880
want to

915
00:38:12,880 --> 00:38:15,839
to deal with uh with that information a

916
00:38:15,839 --> 00:38:16,960
bit like

917
00:38:16,960 --> 00:38:19,839
what we have in ess sub where you've got

918
00:38:19,839 --> 00:38:22,240
basically the server and then you've got

919
00:38:22,240 --> 00:38:24,880
the subject identifier which are set

920
00:38:24,880 --> 00:38:26,560
right so you could have actually a list

921
00:38:26,560 --> 00:38:27,520
of gnap

922
00:38:27,520 --> 00:38:30,400
authorization servers potentially and

923
00:38:30,400 --> 00:38:32,320
then you've got option one

924
00:38:32,320 --> 00:38:34,880
which is more as an extension to sec

925
00:38:34,880 --> 00:38:36,320
events

926
00:38:36,320 --> 00:38:39,040
and here what we say by extension is

927
00:38:39,040 --> 00:38:41,440
that because we would use a subject type

928
00:38:41,440 --> 00:38:43,520
and we would extend the subject type

929
00:38:43,520 --> 00:38:44,880
with a new

930
00:38:44,880 --> 00:38:48,240
label basically so i called it asref but

931
00:38:48,240 --> 00:38:49,040
it could be

932
00:38:49,040 --> 00:38:52,000
any other label so it's just a

933
00:38:52,000 --> 00:38:53,359
suggestion here

934
00:38:53,359 --> 00:38:56,079
and here the good thing if we do that is

935
00:38:56,079 --> 00:38:56,560
that

936
00:38:56,560 --> 00:39:00,160
we actually can just reuse the subject

937
00:39:00,160 --> 00:39:03,680
identifier types and use the additional

938
00:39:03,680 --> 00:39:05,359
types in the registry so that's

939
00:39:05,359 --> 00:39:06,240
something that's

940
00:39:06,240 --> 00:39:09,040
uh the sec event working group has been

941
00:39:09,040 --> 00:39:10,000
providing

942
00:39:10,000 --> 00:39:12,480
it's just never been used yet so we need

943
00:39:12,480 --> 00:39:13,440
to

944
00:39:13,440 --> 00:39:16,880
to actually make it

945
00:39:16,880 --> 00:39:19,920
practical in in to to be used within

946
00:39:19,920 --> 00:39:24,880
app so just like you have email or

947
00:39:24,880 --> 00:39:27,520
like you have account you would have is

948
00:39:27,520 --> 00:39:28,400
reference

949
00:39:28,400 --> 00:39:30,400
for instance or whatever name we choose

950
00:39:30,400 --> 00:39:31,760
to use

951
00:39:31,760 --> 00:39:35,200
which would really refer to the

952
00:39:35,200 --> 00:39:38,240
internal value that's used as a

953
00:39:38,240 --> 00:39:39,359
reference for

954
00:39:39,359 --> 00:39:42,480
folk map

955
00:39:42,480 --> 00:39:47,440
um next slide please

956
00:39:50,640 --> 00:39:53,760
another item which is currently

957
00:39:53,760 --> 00:39:55,680
discussed into the issues is the

958
00:39:55,680 --> 00:39:57,359
assertions

959
00:39:57,359 --> 00:40:00,720
so we do have a subject identifier and

960
00:40:00,720 --> 00:40:02,560
next to that we've got some assertions

961
00:40:02,560 --> 00:40:04,560
the typical use case that we have in the

962
00:40:04,560 --> 00:40:05,440
draft today

963
00:40:05,440 --> 00:40:08,400
is open id

964
00:40:08,880 --> 00:40:12,400
token so id tokens that you have here on

965
00:40:12,400 --> 00:40:15,359
on the right hand side of the screen so

966
00:40:15,359 --> 00:40:17,119
you've got an example

967
00:40:17,119 --> 00:40:19,119
today it's only one value you've got

968
00:40:19,119 --> 00:40:20,400
only one assertion

969
00:40:20,400 --> 00:40:24,240
and the question from issue 43 was

970
00:40:24,240 --> 00:40:26,800
do we want to support several assertions

971
00:40:26,800 --> 00:40:27,760
like an array

972
00:40:27,760 --> 00:40:31,839
or is it enough as just one single value

973
00:40:31,839 --> 00:40:34,079
so what i would propose is actually that

974
00:40:34,079 --> 00:40:36,240
it's very useful to have

975
00:40:36,240 --> 00:40:39,839
potentially several values here um

976
00:40:39,839 --> 00:40:42,720
and so i would propose an array instead

977
00:40:42,720 --> 00:40:43,599
of of just

978
00:40:43,599 --> 00:40:48,319
a single value

979
00:40:48,480 --> 00:40:52,079
also we have issue 41 and that relates

980
00:40:52,079 --> 00:40:52,480
to

981
00:40:52,480 --> 00:40:54,079
what kind of a sessions we want to

982
00:40:54,079 --> 00:40:56,079
support so today in the specification

983
00:40:56,079 --> 00:40:58,240
it's written that you've got id token

984
00:40:58,240 --> 00:41:00,800
that you got summary to and that you

985
00:41:00,800 --> 00:41:02,319
could get an extension

986
00:41:02,319 --> 00:41:04,880
registry the question is how that

987
00:41:04,880 --> 00:41:07,520
registry would work

988
00:41:07,520 --> 00:41:09,040
that's something we've been discussing a

989
00:41:09,040 --> 00:41:10,880
few times already but

990
00:41:10,880 --> 00:41:13,599
we don't have any example actually what

991
00:41:13,599 --> 00:41:15,359
i would suggest is that we

992
00:41:15,359 --> 00:41:18,079
keep id token it's obviously a use case

993
00:41:18,079 --> 00:41:20,560
that we'll need

994
00:41:20,560 --> 00:41:22,560
i suggest also that we look at a few

995
00:41:22,560 --> 00:41:23,760
other cases

996
00:41:23,760 --> 00:41:27,599
like uh w gw k

997
00:41:27,599 --> 00:41:30,319
thumb prints deeds and verifiable

998
00:41:30,319 --> 00:41:32,160
credentials which can have

999
00:41:32,160 --> 00:41:34,570
some additional values here um

1000
00:41:34,570 --> 00:41:36,319
[Music]

1001
00:41:36,319 --> 00:41:39,119
so either as identity tokens or as

1002
00:41:39,119 --> 00:41:41,200
verifiable credentials

1003
00:41:41,200 --> 00:41:44,160
and we had the discussion on the issue

1004
00:41:44,160 --> 00:41:44,960
related to

1005
00:41:44,960 --> 00:41:48,800
some elve two and the idea would be

1006
00:41:48,800 --> 00:41:50,720
maybe to actually remove it from the

1007
00:41:50,720 --> 00:41:53,920
core due to xml security

1008
00:41:53,920 --> 00:41:57,119
the rest is basically json based and

1009
00:41:57,119 --> 00:41:58,079
here we would have to

1010
00:41:58,079 --> 00:42:02,880
deal with something on top of that

1011
00:42:02,880 --> 00:42:05,119
and the question is related also to

1012
00:42:05,119 --> 00:42:06,960
whether we could use that as an

1013
00:42:06,960 --> 00:42:07,839
extension

1014
00:42:07,839 --> 00:42:09,599
i think it would make sense for

1015
00:42:09,599 --> 00:42:11,599
compatibility reasons because you've got

1016
00:42:11,599 --> 00:42:13,440
a lot of systems that are based on some

1017
00:42:13,440 --> 00:42:14,960
other sessions

1018
00:42:14,960 --> 00:42:19,599
but it's a good case for an extension

1019
00:42:19,920 --> 00:42:23,599
next slide please

1020
00:42:23,839 --> 00:42:26,720
um so this uh basically also asks

1021
00:42:26,720 --> 00:42:27,440
whether

1022
00:42:27,440 --> 00:42:30,800
we support additional types via

1023
00:42:30,800 --> 00:42:34,720
subject identifiers or via assertions

1024
00:42:34,720 --> 00:42:38,079
for instance here for deeds and for gwk

1025
00:42:38,079 --> 00:42:39,520
thumbprints

1026
00:42:39,520 --> 00:42:42,560
i basically had in mind that it could be

1027
00:42:42,560 --> 00:42:44,720
either one or the other

1028
00:42:44,720 --> 00:42:47,119
but then when you look at id token it

1029
00:42:47,119 --> 00:42:49,200
makes sense to actually put that

1030
00:42:49,200 --> 00:42:52,480
into an assertion and so it would be

1031
00:42:52,480 --> 00:42:54,319
just the same for deeds and for other

1032
00:42:54,319 --> 00:42:56,160
types of systems so the idea would be

1033
00:42:56,160 --> 00:42:57,040
that you have

1034
00:42:57,040 --> 00:43:00,240
an identifier and alongside this

1035
00:43:00,240 --> 00:43:02,560
identifier would have assertions

1036
00:43:02,560 --> 00:43:04,960
that could prove some identity or that

1037
00:43:04,960 --> 00:43:06,400
could prove some facts

1038
00:43:06,400 --> 00:43:09,760
on on that identity

1039
00:43:10,000 --> 00:43:13,359
one question which also is important is

1040
00:43:13,359 --> 00:43:15,280
whether there's a security issue in

1041
00:43:15,280 --> 00:43:17,280
having a mapping between the subject

1042
00:43:17,280 --> 00:43:19,599
identifiers and their sessions

1043
00:43:19,599 --> 00:43:22,240
it's also the it's again the case for

1044
00:43:22,240 --> 00:43:23,920
the email

1045
00:43:23,920 --> 00:43:26,079
and so you do create a kind of

1046
00:43:26,079 --> 00:43:29,200
association between a weak identifier

1047
00:43:29,200 --> 00:43:31,440
like the email and the stronger identity

1048
00:43:31,440 --> 00:43:33,680
assertions like an id token

1049
00:43:33,680 --> 00:43:36,000
and this of course is a bit less the

1050
00:43:36,000 --> 00:43:38,000
case is you've got uh if you've got on

1051
00:43:38,000 --> 00:43:40,400
low back reference and

1052
00:43:40,400 --> 00:43:42,640
the stronger identity assertion because

1053
00:43:42,640 --> 00:43:45,119
this opaca session is related only to

1054
00:43:45,119 --> 00:43:47,040
the authorization server

1055
00:43:47,040 --> 00:43:49,839
and it's also something where in some

1056
00:43:49,839 --> 00:43:52,079
cases we could use

1057
00:43:52,079 --> 00:43:54,800
more advanced types like verifiable

1058
00:43:54,800 --> 00:43:57,839
credentials for instance

1059
00:43:57,839 --> 00:44:00,640
next slide

1060
00:44:04,400 --> 00:44:08,319
thank you dustin um so this brings us to

1061
00:44:08,319 --> 00:44:11,599
um the remaining issues and

1062
00:44:11,599 --> 00:44:15,119
they all go around the same question

1063
00:44:15,119 --> 00:44:18,000
uh so resource owners versus end users

1064
00:44:18,000 --> 00:44:19,040
and that's something we've been

1065
00:44:19,040 --> 00:44:20,880
discussing quite a lot in the mailing

1066
00:44:20,880 --> 00:44:22,880
list and that's something we've been

1067
00:44:22,880 --> 00:44:23,760
discussing

1068
00:44:23,760 --> 00:44:27,040
also in many cases in during the interim

1069
00:44:27,040 --> 00:44:28,560
meetings

1070
00:44:28,560 --> 00:44:33,520
and so we've got issue for instance 197

1071
00:44:33,520 --> 00:44:35,920
and we see that in the text today we've

1072
00:44:35,920 --> 00:44:37,760
got identifying the user

1073
00:44:37,760 --> 00:44:40,400
returning user information so again that

1074
00:44:40,400 --> 00:44:43,520
relates to request.user and that request

1075
00:44:43,520 --> 00:44:46,240
and that request to user that user is

1076
00:44:46,240 --> 00:44:47,440
actually something that you

1077
00:44:47,440 --> 00:44:50,560
that you bring but it also

1078
00:44:50,560 --> 00:44:54,079
always get back to the what's the role

1079
00:44:54,079 --> 00:44:56,319
of that user

1080
00:44:56,319 --> 00:44:58,319
that's something we tried also to

1081
00:44:58,319 --> 00:45:00,960
clarify during the terminology work

1082
00:45:00,960 --> 00:45:03,280
but here what you look at what's written

1083
00:45:03,280 --> 00:45:05,119
in in the current spec

1084
00:45:05,119 --> 00:45:07,119
so you've got for instance this text in

1085
00:45:07,119 --> 00:45:09,359
section 2.4

1086
00:45:09,359 --> 00:45:11,599
if the identified end user doesn't match

1087
00:45:11,599 --> 00:45:13,520
the resource owner present at the

1088
00:45:13,520 --> 00:45:15,119
authorization server during an

1089
00:45:15,119 --> 00:45:16,319
interaction step

1090
00:45:16,319 --> 00:45:18,640
the authorization server should reject

1091
00:45:18,640 --> 00:45:20,480
the request with an error

1092
00:45:20,480 --> 00:45:22,480
so it's big it basically means that the

1093
00:45:22,480 --> 00:45:24,880
only case we're covering right now

1094
00:45:24,880 --> 00:45:27,040
in details and i think it's correctly

1095
00:45:27,040 --> 00:45:29,040
covered

1096
00:45:29,040 --> 00:45:32,240
is really the case where both match

1097
00:45:32,240 --> 00:45:34,160
so you've got the user which is equal to

1098
00:45:34,160 --> 00:45:35,920
the resource owner which is equal to the

1099
00:45:35,920 --> 00:45:37,920
end user

1100
00:45:37,920 --> 00:45:40,480
and if we want to get a bit further for

1101
00:45:40,480 --> 00:45:41,760
the other cases

1102
00:45:41,760 --> 00:45:44,400
we need to have an in-depth discussion

1103
00:45:44,400 --> 00:45:46,160
about the difference between the two

1104
00:45:46,160 --> 00:45:48,480
and how we identify in which world where

1105
00:45:48,480 --> 00:45:50,800
we're we are working

1106
00:45:50,800 --> 00:45:52,560
i just want to point out that for the

1107
00:45:52,560 --> 00:45:54,560
next slides it's a bit different from

1108
00:45:54,560 --> 00:45:56,079
the previous items

1109
00:45:56,079 --> 00:45:58,079
here i'm just presenting my personal

1110
00:45:58,079 --> 00:45:59,280
thoughts on that and

1111
00:45:59,280 --> 00:46:02,000
there's really no discussion that has

1112
00:46:02,000 --> 00:46:02,800
been going on

1113
00:46:02,800 --> 00:46:07,200
in in in the github repository just yet

1114
00:46:07,200 --> 00:46:10,480
so next slide please

1115
00:46:11,200 --> 00:46:14,319
so what exists today is in the oauth

1116
00:46:14,319 --> 00:46:16,000
world you've got

1117
00:46:16,000 --> 00:46:19,280
basically the assumption that

1118
00:46:19,280 --> 00:46:22,400
basically the resource owner is the same

1119
00:46:22,400 --> 00:46:23,280
as the end user

1120
00:46:23,280 --> 00:46:26,480
in most cases and in uma 2

1121
00:46:26,480 --> 00:46:28,319
you basically consider that they're

1122
00:46:28,319 --> 00:46:31,520
different so we've got a few

1123
00:46:31,520 --> 00:46:34,400
very detailed use cases from

1124
00:46:34,400 --> 00:46:37,040
participants in the group

1125
00:46:37,040 --> 00:46:40,000
and that they're very detailed but the

1126
00:46:40,000 --> 00:46:41,359
problem today is

1127
00:46:41,359 --> 00:46:43,680
we've got a fragmented ecosystem and

1128
00:46:43,680 --> 00:46:45,280
each time we've got a new interaction

1129
00:46:45,280 --> 00:46:46,000
like

1130
00:46:46,000 --> 00:46:48,319
sea balance and so on we've got to think

1131
00:46:48,319 --> 00:46:51,440
again from scratch

1132
00:46:51,760 --> 00:46:54,480
and what we want to do also with gnap is

1133
00:46:54,480 --> 00:46:56,400
try to solve this issue too

1134
00:46:56,400 --> 00:46:58,880
and especially in the specification

1135
00:46:58,880 --> 00:47:00,160
we've got some diagrams

1136
00:47:00,160 --> 00:47:02,560
uh at the beginning of the document so

1137
00:47:02,560 --> 00:47:04,640
we've got 1.4.3

1138
00:47:04,640 --> 00:47:07,280
which is really a synchronous consent

1139
00:47:07,280 --> 00:47:08,480
and what we mean by that

1140
00:47:08,480 --> 00:47:10,319
is we're going to reach out to some

1141
00:47:10,319 --> 00:47:13,440
remote resource owners at some point

1142
00:47:13,440 --> 00:47:16,640
we've got also sequence diagram 1.4.4

1143
00:47:16,640 --> 00:47:18,160
and here it's software only

1144
00:47:18,160 --> 00:47:20,000
authorization what

1145
00:47:20,000 --> 00:47:22,880
in my own balance i call automated rule

1146
00:47:22,880 --> 00:47:24,079
engine

1147
00:47:24,079 --> 00:47:26,960
um and the problem is section four which

1148
00:47:26,960 --> 00:47:27,440
is about

1149
00:47:27,440 --> 00:47:30,119
interaction only covers sequences uh

1150
00:47:30,119 --> 00:47:33,040
1.4.1 and 1.4.2 which

1151
00:47:33,040 --> 00:47:35,280
also are the one that aaron actually

1152
00:47:35,280 --> 00:47:36,480
described earlier

1153
00:47:36,480 --> 00:47:38,079
so that's the user interface

1154
00:47:38,079 --> 00:47:39,520
interactions

1155
00:47:39,520 --> 00:47:42,559
so either but they are redirect or via a

1156
00:47:42,559 --> 00:47:42,960
map

1157
00:47:42,960 --> 00:47:47,359
or in some cases very push-based

1158
00:47:47,359 --> 00:47:51,040
interaction so it's

1159
00:47:51,040 --> 00:47:54,240
it's pretty innovative already but um

1160
00:47:54,240 --> 00:47:56,800
we don't really cover the case where we

1161
00:47:56,800 --> 00:47:57,680
need to

1162
00:47:57,680 --> 00:47:59,839
do something where the end user is a bit

1163
00:47:59,839 --> 00:48:00,720
different from

1164
00:48:00,720 --> 00:48:02,240
what is different from the resource

1165
00:48:02,240 --> 00:48:03,839
owner

1166
00:48:03,839 --> 00:48:07,839
so next slide

1167
00:48:10,640 --> 00:48:13,599
so here what we want to try at least as

1168
00:48:13,599 --> 00:48:16,160
an idea

1169
00:48:16,319 --> 00:48:19,440
is is to actually try to know when

1170
00:48:19,440 --> 00:48:21,599
the resource owner is the same as the

1171
00:48:21,599 --> 00:48:23,520
end user or not

1172
00:48:23,520 --> 00:48:26,480
so in of2 or human2 what we've seen is

1173
00:48:26,480 --> 00:48:27,040
that

1174
00:48:27,040 --> 00:48:31,359
it's basically out coded in the protocol

1175
00:48:31,359 --> 00:48:33,440
what we want to have in mind also is

1176
00:48:33,440 --> 00:48:35,680
that ultimately it's the decision of

1177
00:48:35,680 --> 00:48:38,960
the authorization server it's something

1178
00:48:38,960 --> 00:48:40,880
that it should validate it should make

1179
00:48:40,880 --> 00:48:41,920
sure that

1180
00:48:41,920 --> 00:48:44,400
is the one that's responsible for that

1181
00:48:44,400 --> 00:48:46,640
choice

1182
00:48:46,640 --> 00:48:50,240
and in many cases at least for complex

1183
00:48:50,240 --> 00:48:51,520
applications

1184
00:48:51,520 --> 00:48:53,680
the only way to know for sure is when

1185
00:48:53,680 --> 00:48:55,240
you've completed the user's

1186
00:48:55,240 --> 00:48:58,240
authentication

1187
00:48:58,240 --> 00:49:01,680
you don't always know ahead of time

1188
00:49:01,680 --> 00:49:05,200
so the limits to what we can do

1189
00:49:05,200 --> 00:49:07,119
but there's also opportunities because

1190
00:49:07,119 --> 00:49:08,599
you can have repeat

1191
00:49:08,599 --> 00:49:11,920
interactions and things like that

1192
00:49:11,920 --> 00:49:13,359
and there's also the question on how

1193
00:49:13,359 --> 00:49:16,160
much we want to expose to the client

1194
00:49:16,160 --> 00:49:18,160
for instance if we're using a specific

1195
00:49:18,160 --> 00:49:21,280
secret password to actually

1196
00:49:21,280 --> 00:49:23,839
be able to become a resource owner then

1197
00:49:23,839 --> 00:49:24,480
probably

1198
00:49:24,480 --> 00:49:26,800
the authorization server shouldn't

1199
00:49:26,800 --> 00:49:28,960
actually convey that to the client

1200
00:49:28,960 --> 00:49:32,319
in any way but still

1201
00:49:32,319 --> 00:49:35,680
if we look at the sequences 1.4 point x

1202
00:49:35,680 --> 00:49:38,640
we can actually see that there's way

1203
00:49:38,640 --> 00:49:40,880
that we can actually put some hints

1204
00:49:40,880 --> 00:49:42,880
just like we actually do today with

1205
00:49:42,880 --> 00:49:44,800
request.use

1206
00:49:44,800 --> 00:49:48,400
maybe it's it's something that we could

1207
00:49:48,400 --> 00:49:53,520
try out a bit further so next slides

1208
00:49:56,240 --> 00:49:58,559
so the intuition is basically that the

1209
00:49:58,559 --> 00:50:00,480
end user generally knows whether it's

1210
00:50:00,480 --> 00:50:02,559
his data or someone else's

1211
00:50:02,559 --> 00:50:04,160
that's really the difference between the

1212
00:50:04,160 --> 00:50:05,920
two cases

1213
00:50:05,920 --> 00:50:08,640
and the client in many cases will

1214
00:50:08,640 --> 00:50:10,240
actually implement that

1215
00:50:10,240 --> 00:50:13,440
logic uh ahead of time you know that uh

1216
00:50:13,440 --> 00:50:15,200
if you need to do some banking

1217
00:50:15,200 --> 00:50:16,960
application you're going to aggregate

1218
00:50:16,960 --> 00:50:17,520
some

1219
00:50:17,520 --> 00:50:20,400
some accounts and you know that if you

1220
00:50:20,400 --> 00:50:20,880
need

1221
00:50:20,880 --> 00:50:22,960
your doctor and you need to access to

1222
00:50:22,960 --> 00:50:24,880
some patient data

1223
00:50:24,880 --> 00:50:27,359
you're going to ask for them to to

1224
00:50:27,359 --> 00:50:28,079
access to

1225
00:50:28,079 --> 00:50:32,559
to the data so one way to solve

1226
00:50:32,559 --> 00:50:35,359
that part would be to actually have an

1227
00:50:35,359 --> 00:50:37,040
optional principle

1228
00:50:37,040 --> 00:50:39,119
what i call the structure principle and

1229
00:50:39,119 --> 00:50:40,559
it's really a hint for the

1230
00:50:40,559 --> 00:50:42,880
authorization to determine who the

1231
00:50:42,880 --> 00:50:45,839
resource owner is

1232
00:50:45,900 --> 00:50:47,440
[Music]

1233
00:50:47,440 --> 00:50:50,880
and so next slide please

1234
00:50:50,880 --> 00:50:55,440
we'll see what it would look like

1235
00:50:55,440 --> 00:50:58,160
so for instance here i've got a subject

1236
00:50:58,160 --> 00:50:59,040
structured so

1237
00:50:59,040 --> 00:51:01,040
exactly the same as what we had earlier

1238
00:51:01,040 --> 00:51:03,040
we still have the subject types so

1239
00:51:03,040 --> 00:51:03,520
that's

1240
00:51:03,520 --> 00:51:06,559
what i'll ask to the

1241
00:51:06,559 --> 00:51:09,280
to the authorization server and here i

1242
00:51:09,280 --> 00:51:10,800
introduced the irs

1243
00:51:10,800 --> 00:51:14,000
ref reference i could ask also some

1244
00:51:14,000 --> 00:51:15,520
assertions

1245
00:51:15,520 --> 00:51:18,640
and actually i described what i called

1246
00:51:18,640 --> 00:51:19,200
ins

1247
00:51:19,200 --> 00:51:21,280
which are optional so you don't have to

1248
00:51:21,280 --> 00:51:24,400
provide them but you can in the request

1249
00:51:24,400 --> 00:51:27,359
and i described actually the part in two

1250
00:51:27,359 --> 00:51:27,760
in

1251
00:51:27,760 --> 00:51:30,000
in two sections the first one is self

1252
00:51:30,000 --> 00:51:31,119
and that's what i

1253
00:51:31,119 --> 00:51:34,240
actually described as the equivalent of

1254
00:51:34,240 --> 00:51:37,440
what we have today as a request.user

1255
00:51:37,440 --> 00:51:39,599
self is just used here to clarify that

1256
00:51:39,599 --> 00:51:40,559
it's not

1257
00:51:40,559 --> 00:51:42,880
meant as a role a user is a bit

1258
00:51:42,880 --> 00:51:44,319
ambiguous

1259
00:51:44,319 --> 00:51:46,000
so it's just to clarify but the rest of

1260
00:51:46,000 --> 00:51:47,839
the structure is exactly the same

1261
00:51:47,839 --> 00:51:49,920
and then you would have principle and

1262
00:51:49,920 --> 00:51:52,400
principle is here to actually

1263
00:51:52,400 --> 00:51:56,319
provide additional hints when it's not

1264
00:51:56,319 --> 00:51:58,079
when the user is actually not the

1265
00:51:58,079 --> 00:52:00,720
resource owner

1266
00:52:00,720 --> 00:52:04,079
of course all of that is just a well a

1267
00:52:04,079 --> 00:52:06,319
suggestion to the authorization server

1268
00:52:06,319 --> 00:52:07,440
just to help him

1269
00:52:07,440 --> 00:52:09,680
make the right decision but then we've

1270
00:52:09,680 --> 00:52:11,440
got issue 49

1271
00:52:11,440 --> 00:52:13,280
which is probably the most difficult to

1272
00:52:13,280 --> 00:52:14,559
solve

1273
00:52:14,559 --> 00:52:16,400
and it's something we've got in many

1274
00:52:16,400 --> 00:52:18,000
places already in

1275
00:52:18,000 --> 00:52:20,079
in the issues is whether it's a shoot or

1276
00:52:20,079 --> 00:52:21,599
it's a whether it's a

1277
00:52:21,599 --> 00:52:24,880
must but at least you've got the idea

1278
00:52:24,880 --> 00:52:25,839
that the int

1279
00:52:25,839 --> 00:52:28,960
is only something that's going to try to

1280
00:52:28,960 --> 00:52:29,760
help

1281
00:52:29,760 --> 00:52:32,160
but the authorization server is the one

1282
00:52:32,160 --> 00:52:32,800
that makes

1283
00:52:32,800 --> 00:52:37,839
the decision next slide please

1284
00:52:40,079 --> 00:52:43,040
so if we look at the practical sequence

1285
00:52:43,040 --> 00:52:45,280
so 1.4.3

1286
00:52:45,280 --> 00:52:48,800
um i imagine one case which would be a

1287
00:52:48,800 --> 00:52:51,040
parental control app and you've got a

1288
00:52:51,040 --> 00:52:52,079
child that's

1289
00:52:52,079 --> 00:52:54,319
actually going to ask for approval of

1290
00:52:54,319 --> 00:52:56,880
his dad so obviously

1291
00:52:56,880 --> 00:53:01,200
the end user is a child and the remote

1292
00:53:01,200 --> 00:53:04,800
resource owner is is that in that case

1293
00:53:04,800 --> 00:53:07,200
um so you've got principle and the way i

1294
00:53:07,200 --> 00:53:08,480
described it is

1295
00:53:08,480 --> 00:53:12,640
async because it's sequence 1.4.3 is

1296
00:53:12,640 --> 00:53:14,960
actually describing the seconds diagram

1297
00:53:14,960 --> 00:53:15,599
as

1298
00:53:15,599 --> 00:53:18,319
as asynchronous then you've got resource

1299
00:53:18,319 --> 00:53:21,040
owner and the resource owner

1300
00:53:21,040 --> 00:53:24,079
would be a subject also and here

1301
00:53:24,079 --> 00:53:26,079
you've got an assertion and within that

1302
00:53:26,079 --> 00:53:27,200
accession

1303
00:53:27,200 --> 00:53:30,000
i didn't put the entire stuff because

1304
00:53:30,000 --> 00:53:32,079
it's limited in space but it would be

1305
00:53:32,079 --> 00:53:36,559
a decentralized identifier for instance

1306
00:53:36,559 --> 00:53:38,880
in that case

1307
00:53:38,880 --> 00:53:40,480
of course you've got many questions on

1308
00:53:40,480 --> 00:53:42,079
how do you know it's a legitimate

1309
00:53:42,079 --> 00:53:45,280
deed and so on but we can probably deal

1310
00:53:45,280 --> 00:53:45,920
with that

1311
00:53:45,920 --> 00:53:48,319
and it's in any case that's a question

1312
00:53:48,319 --> 00:53:49,599
we would have

1313
00:53:49,599 --> 00:53:52,079
as soon as you've got some remote

1314
00:53:52,079 --> 00:53:54,880
connections to make

1315
00:53:54,880 --> 00:53:57,599
so that's the first way to well that's

1316
00:53:57,599 --> 00:53:59,359
the first sequence we can deal with

1317
00:53:59,359 --> 00:54:02,240
so remote owners here and on the next

1318
00:54:02,240 --> 00:54:02,960
slide

1319
00:54:02,960 --> 00:54:05,880
uh we've got the proposal for sequence

1320
00:54:05,880 --> 00:54:07,520
1.4.4

1321
00:54:07,520 --> 00:54:10,800
so here you've got the automated rule

1322
00:54:10,800 --> 00:54:12,880
so the use case is the child wants to

1323
00:54:12,880 --> 00:54:14,319
watch a thing

1324
00:54:14,319 --> 00:54:18,640
but maybe it's too young so usually

1325
00:54:18,640 --> 00:54:20,640
the way that you could implement that is

1326
00:54:20,640 --> 00:54:22,559
so in the self structure

1327
00:54:22,559 --> 00:54:25,040
you've got an assertion like you've got

1328
00:54:25,040 --> 00:54:27,359
a verifiable credential on the date of

1329
00:54:27,359 --> 00:54:29,040
birth or you've got a zero knowledge

1330
00:54:29,040 --> 00:54:30,880
proof on the age

1331
00:54:30,880 --> 00:54:34,880
um and then in the principle structure

1332
00:54:34,880 --> 00:54:39,119
you would just say that it's automated

1333
00:54:39,119 --> 00:54:41,520
so it's not async asynchronous here it's

1334
00:54:41,520 --> 00:54:43,359
just an automated rule running on the

1335
00:54:43,359 --> 00:54:45,119
authorization server

1336
00:54:45,119 --> 00:54:48,400
and we say true to activate

1337
00:54:48,400 --> 00:54:50,960
the automated rule so the client would

1338
00:54:50,960 --> 00:54:53,920
actually uh

1339
00:54:53,920 --> 00:54:56,480
say that to the authorization server

1340
00:54:56,480 --> 00:54:57,040
please

1341
00:54:57,040 --> 00:55:00,880
check the automated rule to actually

1342
00:55:00,880 --> 00:55:05,280
accept or deny the access to the theme

1343
00:55:05,280 --> 00:55:08,559
so next slide please

1344
00:55:12,000 --> 00:55:15,680
um the idea also is to actually make it

1345
00:55:15,680 --> 00:55:16,720
composable

1346
00:55:16,720 --> 00:55:18,799
so a sign could fail so that's one of

1347
00:55:18,799 --> 00:55:20,720
the big issue with uh

1348
00:55:20,720 --> 00:55:22,960
trying to reach out to remote resource

1349
00:55:22,960 --> 00:55:23,839
owners

1350
00:55:23,839 --> 00:55:26,160
so he could be unavailable so the dad

1351
00:55:26,160 --> 00:55:26,880
could be

1352
00:55:26,880 --> 00:55:30,559
doing something else and or he couldn't

1353
00:55:30,559 --> 00:55:31,280
respond

1354
00:55:31,280 --> 00:55:33,180
quickly enough or maybe he's doing

1355
00:55:33,180 --> 00:55:34,480
[Music]

1356
00:55:34,480 --> 00:55:37,520
some other work or whatever and on the

1357
00:55:37,520 --> 00:55:38,400
other case

1358
00:55:38,400 --> 00:55:40,480
uh if you are using an automated rule

1359
00:55:40,480 --> 00:55:42,000
ending it could be limiting

1360
00:55:42,000 --> 00:55:44,240
maybe the child wants to request special

1361
00:55:44,240 --> 00:55:45,200
permission

1362
00:55:45,200 --> 00:55:48,559
uh okay i'm not of age but

1363
00:55:48,559 --> 00:55:50,880
you know i've been nice so maybe i

1364
00:55:50,880 --> 00:55:52,160
should actually

1365
00:55:52,160 --> 00:55:55,200
be able to try some fallback uh

1366
00:55:55,200 --> 00:55:58,079
so here i i in the slide i've put none

1367
00:55:58,079 --> 00:55:59,760
but you could try

1368
00:55:59,760 --> 00:56:02,960
to actually

1369
00:56:02,960 --> 00:56:06,960
reach out to the dad or whatever

1370
00:56:07,119 --> 00:56:09,839
so the idea is it could be composable if

1371
00:56:09,839 --> 00:56:11,520
we do that

1372
00:56:11,520 --> 00:56:14,000
and on the next slide we could actually

1373
00:56:14,000 --> 00:56:15,200
even

1374
00:56:15,200 --> 00:56:17,839
potentially reach out to multiple

1375
00:56:17,839 --> 00:56:18,960
resource owners

1376
00:56:18,960 --> 00:56:21,119
which is something we don't really see

1377
00:56:21,119 --> 00:56:23,280
as a typical use case

1378
00:56:23,280 --> 00:56:25,520
because it's a bit limited but we could

1379
00:56:25,520 --> 00:56:27,200
imagine inference on that child would

1380
00:56:27,200 --> 00:56:28,240
actually reach out to

1381
00:56:28,240 --> 00:56:31,680
that but maybe marvin is nicer and so we

1382
00:56:31,680 --> 00:56:33,680
would want to actually reach out also to

1383
00:56:33,680 --> 00:56:34,880
them

1384
00:56:34,880 --> 00:56:38,960
but in in general in the general case

1385
00:56:38,960 --> 00:56:41,119
what we'd like to do is to be able to

1386
00:56:41,119 --> 00:56:42,559
actually manage

1387
00:56:42,559 --> 00:56:45,040
potentially resources which are which

1388
00:56:45,040 --> 00:56:47,200
are shared between multiple parties

1389
00:56:47,200 --> 00:56:49,520
and so that's what we could do here of

1390
00:56:49,520 --> 00:56:50,559
course we need to

1391
00:56:50,559 --> 00:56:52,480
keep it simple so i imagine something

1392
00:56:52,480 --> 00:56:53,680
like quickest or

1393
00:56:53,680 --> 00:56:56,799
quorum of course if if you've got only

1394
00:56:56,799 --> 00:56:57,119
one

1395
00:56:57,119 --> 00:57:00,559
arrow it would be ignored

1396
00:57:00,559 --> 00:57:03,839
but then if you've got multiple resource

1397
00:57:03,839 --> 00:57:04,400
owners

1398
00:57:04,400 --> 00:57:06,319
who share the decision you need to

1399
00:57:06,319 --> 00:57:08,720
decide how the decision would

1400
00:57:08,720 --> 00:57:11,280
would be so maybe it's going a bit too

1401
00:57:11,280 --> 00:57:13,839
far i don't know if it's

1402
00:57:13,839 --> 00:57:15,839
something we want to do but at least

1403
00:57:15,839 --> 00:57:18,240
it's we can imagine that it could be

1404
00:57:18,240 --> 00:57:23,279
it could be something next slide please

1405
00:57:25,280 --> 00:57:29,520
so um the exercise is interesting

1406
00:57:29,520 --> 00:57:30,079
because

1407
00:57:30,079 --> 00:57:33,359
uh it shows that in here in yellow

1408
00:57:33,359 --> 00:57:34,319
you've got subject

1409
00:57:34,319 --> 00:57:37,280
ins which is a new structure to actually

1410
00:57:37,280 --> 00:57:38,559
provide some ahead

1411
00:57:38,559 --> 00:57:41,920
of time int to the authorization server

1412
00:57:41,920 --> 00:57:43,359
so the idea is you've got the self

1413
00:57:43,359 --> 00:57:45,119
structure or the user structure in the

1414
00:57:45,119 --> 00:57:46,240
current

1415
00:57:46,240 --> 00:57:49,200
version you would add a principal

1416
00:57:49,200 --> 00:57:50,000
description

1417
00:57:50,000 --> 00:57:53,760
which is optional also and automate it

1418
00:57:53,760 --> 00:57:56,079
is an internal structure within the

1419
00:57:56,079 --> 00:57:57,760
principal structure which is also

1420
00:57:57,760 --> 00:57:59,200
optional and based on that

1421
00:57:59,200 --> 00:58:02,240
it would be a kind of help for

1422
00:58:02,240 --> 00:58:04,400
the authorization server to determine

1423
00:58:04,400 --> 00:58:06,880
what to do

1424
00:58:07,040 --> 00:58:10,480
and so depending on the values you take

1425
00:58:10,480 --> 00:58:12,319
it would actually bring you to the

1426
00:58:12,319 --> 00:58:14,559
different sequences so today the only

1427
00:58:14,559 --> 00:58:15,760
two that we cover

1428
00:58:15,760 --> 00:58:19,040
as are on the top and side of the

1429
00:58:19,040 --> 00:58:22,240
right hand side of the of the screen

1430
00:58:22,240 --> 00:58:23,880
here so sequence

1431
00:58:23,880 --> 00:58:27,359
1.4.1 on sequence 1.4.2 and both

1432
00:58:27,359 --> 00:58:29,200
basically correspond to the case where

1433
00:58:29,200 --> 00:58:30,559
you've got a

1434
00:58:30,559 --> 00:58:34,160
user interface that's used and

1435
00:58:34,160 --> 00:58:36,400
basically you send the end user to this

1436
00:58:36,400 --> 00:58:38,319
interface because is also the resource

1437
00:58:38,319 --> 00:58:39,920
owner

1438
00:58:39,920 --> 00:58:41,920
and the two cases at the bottom of the

1439
00:58:41,920 --> 00:58:43,119
screen in blue

1440
00:58:43,119 --> 00:58:46,240
are the two additional seconds diagram

1441
00:58:46,240 --> 00:58:48,000
that are actually in the draft today

1442
00:58:48,000 --> 00:58:52,640
but aren't three uh in in detail

1443
00:58:52,640 --> 00:58:56,480
and especially in section four and

1444
00:58:56,480 --> 00:58:58,799
the fact that we have uh did in the

1445
00:58:58,799 --> 00:59:00,720
example allowed to

1446
00:59:00,720 --> 00:59:03,119
imagine something like a deep cam engine

1447
00:59:03,119 --> 00:59:04,960
to actually communicate

1448
00:59:04,960 --> 00:59:08,720
and we'll see that in the next slide

1449
00:59:10,480 --> 00:59:12,880
so did cam could be used as a delivery

1450
00:59:12,880 --> 00:59:14,319
method in that case

1451
00:59:14,319 --> 00:59:15,760
the assumption would be that the

1452
00:59:15,760 --> 00:59:18,640
authorization has its own deed

1453
00:59:18,640 --> 00:59:20,640
and that's additional complexity to be

1454
00:59:20,640 --> 00:59:23,119
honest because you need to manage it

1455
00:59:23,119 --> 00:59:26,160
as well but then if you do that you've

1456
00:59:26,160 --> 00:59:26,799
got

1457
00:59:26,799 --> 00:59:28,880
did come that can be used for remote

1458
00:59:28,880 --> 00:59:30,000
interactions

1459
00:59:30,000 --> 00:59:32,680
so that's obviously useful for case

1460
00:59:32,680 --> 00:59:34,720
1.4.3

1461
00:59:34,720 --> 00:59:37,839
um and i would still consider that

1462
00:59:37,839 --> 00:59:40,960
the client has to know the deeds we

1463
00:59:40,960 --> 00:59:43,520
wouldn't have some kind of

1464
00:59:43,520 --> 00:59:45,599
automatic discovery of deeds or whatever

1465
00:59:45,599 --> 00:59:47,680
i think it's completely out of scope

1466
00:59:47,680 --> 00:59:50,960
but if we do that we've got an easier

1467
00:59:50,960 --> 00:59:53,440
integration with self-serving identity

1468
00:59:53,440 --> 00:59:55,440
and it's also something more importantly

1469
00:59:55,440 --> 00:59:56,480
for gnabs that

1470
00:59:56,480 --> 00:59:59,599
lose asynchronous patterns to reach

1471
00:59:59,599 --> 01:00:02,960
remote on us and

1472
01:00:02,960 --> 01:00:05,920
for sequence 1.4.4 so it's a rule engine

1473
01:00:05,920 --> 01:00:07,599
so it could be technically within the

1474
01:00:07,599 --> 01:00:08,880
authorization server

1475
01:00:08,880 --> 01:00:12,559
but if we use ditcam as a generic engine

1476
01:00:12,559 --> 01:00:14,240
it could be interesting more as a

1477
01:00:14,240 --> 01:00:16,079
message verse to decouple the actual

1478
01:00:16,079 --> 01:00:17,520
logic

1479
01:00:17,520 --> 01:00:21,200
from the policy engine

1480
01:00:21,200 --> 01:00:23,359
so here it's more it's not mandatory at

1481
01:00:23,359 --> 01:00:25,119
all it's something we could do or we

1482
01:00:25,119 --> 01:00:25,839
could

1483
01:00:25,839 --> 01:00:27,920
decide that it's not something we want

1484
01:00:27,920 --> 01:00:29,359
to to go for

1485
01:00:29,359 --> 01:00:32,720
but actually it's it's something that

1486
01:00:32,720 --> 01:00:36,640
could be used as a technical framework

1487
01:00:36,640 --> 01:00:39,760
um just to get back also on terminology

1488
01:00:39,760 --> 01:00:40,640
so 1

1489
01:00:40,640 --> 01:00:44,319
97 and 19 198

1490
01:00:44,319 --> 01:00:47,520
are related to that so it's dennis that

1491
01:00:47,520 --> 01:00:48,160
has asked

1492
01:00:48,160 --> 01:00:50,160
this question and that's interesting

1493
01:00:50,160 --> 01:00:51,359
because he was saying that

1494
01:00:51,359 --> 01:00:56,480
subject is is something where

1495
01:00:56,480 --> 01:00:59,200
it's mostly human which is true but here

1496
01:00:59,200 --> 01:01:01,280
we see that in some cases the subject

1497
01:01:01,280 --> 01:01:02,319
will actually be

1498
01:01:02,319 --> 01:01:06,160
a machine that could be a rule ending

1499
01:01:06,160 --> 01:01:08,640
from from a company or it could be some

1500
01:01:08,640 --> 01:01:09,680
other

1501
01:01:09,680 --> 01:01:14,000
device from a remote owner

1502
01:01:14,160 --> 01:01:17,680
next slide please

1503
01:01:19,359 --> 01:01:22,319
and so here we get back to a kind of

1504
01:01:22,319 --> 01:01:24,000
extension proposal to what

1505
01:01:24,000 --> 01:01:26,559
aaron has been showing at the beginning

1506
01:01:26,559 --> 01:01:27,200
of

1507
01:01:27,200 --> 01:01:29,680
the slides of the session so it's the

1508
01:01:29,680 --> 01:01:32,160
same interact

1509
01:01:32,160 --> 01:01:34,559
description that we had it's just that

1510
01:01:34,559 --> 01:01:35,839
here in the start

1511
01:01:35,839 --> 01:01:38,640
value actually i did did come so that's

1512
01:01:38,640 --> 01:01:39,920
actually something that was already

1513
01:01:39,920 --> 01:01:40,799
discussed in

1514
01:01:40,799 --> 01:01:44,400
xyz back in the time we would have to

1515
01:01:44,400 --> 01:01:45,680
find a way to finish

1516
01:01:45,680 --> 01:01:47,920
uh the interaction as well to notify the

1517
01:01:47,920 --> 01:01:50,079
client back

1518
01:01:50,079 --> 01:01:53,440
and here it's another example for ins so

1519
01:01:53,440 --> 01:01:56,000
we saw that we had some user interface

1520
01:01:56,000 --> 01:01:57,920
ins but here it would be a timeout

1521
01:01:57,920 --> 01:01:59,520
which would be meaningful for async

1522
01:01:59,520 --> 01:02:01,200
request

1523
01:02:01,200 --> 01:02:03,920
um i just put 10 minutes here but we

1524
01:02:03,920 --> 01:02:05,200
would need to define the format

1525
01:02:05,200 --> 01:02:07,440
obviously

1526
01:02:07,440 --> 01:02:09,599
so we could use either did come or did

1527
01:02:09,599 --> 01:02:11,520
come query

1528
01:02:11,520 --> 01:02:13,839
but the idea is it would be an

1529
01:02:13,839 --> 01:02:14,640
additional

1530
01:02:14,640 --> 01:02:16,720
transport mechanism to actually reach

1531
01:02:16,720 --> 01:02:19,039
out to

1532
01:02:19,039 --> 01:02:21,920
either remote owners or maybe even

1533
01:02:21,920 --> 01:02:23,920
automated rule engines

1534
01:02:23,920 --> 01:02:26,880
next slide please

1535
01:02:30,400 --> 01:02:33,440
so in terms of benefits on downside

1536
01:02:33,440 --> 01:02:35,359
so what i've tried to imagine is how we

1537
01:02:35,359 --> 01:02:37,280
could actually carry out some real

1538
01:02:37,280 --> 01:02:38,400
identification

1539
01:02:38,400 --> 01:02:42,079
um it doesn't at all remove the need

1540
01:02:42,079 --> 01:02:43,920
for runtime evaluation by the

1541
01:02:43,920 --> 01:02:45,680
authorization server actually i would

1542
01:02:45,680 --> 01:02:48,880
even suggest it in increases that that

1543
01:02:48,880 --> 01:02:50,400
requirement

1544
01:02:50,400 --> 01:02:52,240
uh because the authorization server

1545
01:02:52,240 --> 01:02:53,920
ultimately is the one that actually

1546
01:02:53,920 --> 01:02:54,640
decides

1547
01:02:54,640 --> 01:02:57,839
uh about what's going on

1548
01:02:57,839 --> 01:02:59,520
so even if you've got hints from the

1549
01:02:59,520 --> 01:03:01,920
client uh it's something that you need

1550
01:03:01,920 --> 01:03:02,799
to

1551
01:03:02,799 --> 01:03:05,599
to validate

1552
01:03:06,000 --> 01:03:08,799
that said it does provide the dynamic

1553
01:03:08,799 --> 01:03:10,880
configuration of all sequences

1554
01:03:10,880 --> 01:03:12,880
and so far we didn't have that in the

1555
01:03:12,880 --> 01:03:14,160
spec

1556
01:03:14,160 --> 01:03:16,240
you've got a syntax which is just a

1557
01:03:16,240 --> 01:03:17,680
proposition but it's

1558
01:03:17,680 --> 01:03:20,160
uh at least i try to make it as light

1559
01:03:20,160 --> 01:03:22,319
and composable as possible to mix also

1560
01:03:22,319 --> 01:03:23,359
synchronous and

1561
01:03:23,359 --> 01:03:26,400
asynchronous types of interactions

1562
01:03:26,400 --> 01:03:28,720
um it also clarifies when you've got a

1563
01:03:28,720 --> 01:03:31,280
web user interface and when you don't

1564
01:03:31,280 --> 01:03:33,039
so for instance with did come you could

1565
01:03:33,039 --> 01:03:35,200
have any kind of

1566
01:03:35,200 --> 01:03:37,359
client that's actually compatible with

1567
01:03:37,359 --> 01:03:38,319
the

1568
01:03:38,319 --> 01:03:40,960
with the messaging infrastructure and

1569
01:03:40,960 --> 01:03:43,280
also

1570
01:03:43,440 --> 01:03:45,839
are trying to having a hint uh that

1571
01:03:45,839 --> 01:03:47,119
actually includes

1572
01:03:47,119 --> 01:03:49,160
the what we currently have as a

1573
01:03:49,160 --> 01:03:50,640
request.user

1574
01:03:50,640 --> 01:03:53,680
it's actually clarifying whose

1575
01:03:53,680 --> 01:03:56,079
concern so that's entirely embedded

1576
01:03:56,079 --> 01:03:58,640
within the subject structure now

1577
01:03:58,640 --> 01:04:01,680
you can actually cover the interaction

1578
01:04:01,680 --> 01:04:04,079
within the interact structure and the

1579
01:04:04,079 --> 01:04:07,920
what is really related to the client

1580
01:04:07,920 --> 01:04:09,440
and of course we've got a lot of

1581
01:04:09,440 --> 01:04:11,760
security and privacy configurations i

1582
01:04:11,760 --> 01:04:12,160
don't

1583
01:04:12,160 --> 01:04:14,559
pretend to have solved that right now

1584
01:04:14,559 --> 01:04:16,000
and anyway should unless

1585
01:04:16,000 --> 01:04:18,880
again is is kind of an issue so we'll

1586
01:04:18,880 --> 01:04:19,520
have to do

1587
01:04:19,520 --> 01:04:23,280
that next slide please

1588
01:04:23,280 --> 01:04:27,839
and i think it's the last one

1589
01:04:28,559 --> 01:04:31,039
so just a word to say that all your

1590
01:04:31,039 --> 01:04:32,000
feedbacks and

1591
01:04:32,000 --> 01:04:35,119
comments on suggestions and

1592
01:04:35,119 --> 01:04:38,240
text proposals will be very welcome

1593
01:04:38,240 --> 01:04:40,240
so here today the goal was to actually

1594
01:04:40,240 --> 01:04:42,880
try to reflect a bit on what we have as

1595
01:04:42,880 --> 01:04:44,319
issues

1596
01:04:44,319 --> 01:04:47,280
and propose a few ideas uh you've got

1597
01:04:47,280 --> 01:04:48,640
here a summary of my

1598
01:04:48,640 --> 01:04:50,000
personal preference it's just a

1599
01:04:50,000 --> 01:04:53,359
suggestion again it's not as an editor

1600
01:04:53,359 --> 01:04:57,359
it's just to try to generate some ideas

1601
01:04:57,359 --> 01:05:00,880
and you've got the kind of summary

1602
01:05:00,880 --> 01:05:04,000
compared to what we said today the only

1603
01:05:04,000 --> 01:05:06,160
difference with the slides

1604
01:05:06,160 --> 01:05:08,880
that's also a personal preference here

1605
01:05:08,880 --> 01:05:09,440
is that

1606
01:05:09,440 --> 01:05:12,720
uh due to one of the previous comments i

1607
01:05:12,720 --> 01:05:14,319
had

1608
01:05:14,319 --> 01:05:18,000
on whether lincoln's

1609
01:05:18,000 --> 01:05:20,240
subject identifiers on a session would

1610
01:05:20,240 --> 01:05:22,480
be potentially a security issue is to

1611
01:05:22,480 --> 01:05:24,079
try to

1612
01:05:24,079 --> 01:05:26,880
determine whether we should have it as a

1613
01:05:26,880 --> 01:05:29,119
main structure or whether it's only in

1614
01:05:29,119 --> 01:05:29,760
the int

1615
01:05:29,760 --> 01:05:32,559
part that we actually support sec events

1616
01:05:32,559 --> 01:05:33,839
so that's something we

1617
01:05:33,839 --> 01:05:36,079
should discuss i think also with the

1618
01:05:36,079 --> 01:05:39,280
working group related to sec events

1619
01:05:39,280 --> 01:05:41,119
but at least we've got a good starting

1620
01:05:41,119 --> 01:05:43,680
point so i'll

1621
01:05:43,680 --> 01:05:47,680
i'll stop here i may be i'm just on time

1622
01:05:47,680 --> 01:05:51,839
but um yeah thank you very much

1623
01:05:56,319 --> 01:05:59,760
we um the editor's budget questions here

1624
01:05:59,760 --> 01:06:00,960
so

1625
01:06:00,960 --> 01:06:04,319
yeah so so before we continue let's

1626
01:06:04,319 --> 01:06:08,079
let's have blocks of if possible

1627
01:06:08,079 --> 01:06:12,559
shorter blocks of presentation

1628
01:06:12,720 --> 01:06:16,160
and put more emphasis on discussion i'll

1629
01:06:16,160 --> 01:06:18,000
start with the note

1630
01:06:18,000 --> 01:06:22,160
um i'm also coach of sec event

1631
01:06:22,160 --> 01:06:26,079
and there was as as you noted

1632
01:06:26,079 --> 01:06:28,880
there was a new version of the subject

1633
01:06:28,880 --> 01:06:29,680
80

1634
01:06:29,680 --> 01:06:33,039
draft just published today i

1635
01:06:33,039 --> 01:06:36,880
think i i don't have an acknowledgement

1636
01:06:36,880 --> 01:06:37,680
from the

1637
01:06:37,680 --> 01:06:40,480
authors yet but i think they will want

1638
01:06:40,480 --> 01:06:41,599
to move it

1639
01:06:41,599 --> 01:06:44,799
to working group last call so if there

1640
01:06:44,799 --> 01:06:45,680
are

1641
01:06:45,680 --> 01:06:48,400
important changes that we want in that

1642
01:06:48,400 --> 01:06:49,440
draft

1643
01:06:49,440 --> 01:06:51,520
i think this is a great time to do it

1644
01:06:51,520 --> 01:06:55,039
before now and the next ietf

1645
01:06:55,039 --> 01:06:58,400
instead of

1646
01:06:58,799 --> 01:07:02,400
trying to register additional tags

1647
01:07:02,400 --> 01:07:05,599
after the fact where we still don't have

1648
01:07:05,599 --> 01:07:07,280
a process for it

1649
01:07:07,280 --> 01:07:10,240
and it will be more difficult to to get

1650
01:07:10,240 --> 01:07:11,520
it aligned

1651
01:07:11,520 --> 01:07:15,760
uh with the architectural thinking of

1652
01:07:15,760 --> 01:07:16,880
the second

1653
01:07:16,880 --> 01:07:19,920
working group so

1654
01:07:19,920 --> 01:07:22,640
let's present it to sec event as soon as

1655
01:07:22,640 --> 01:07:24,640
we can

1656
01:07:24,640 --> 01:07:29,839
yes yes that's the idea

1657
01:07:45,760 --> 01:07:48,079
other questions or comments there was

1658
01:07:48,079 --> 01:07:50,240
some discussion on the chat

1659
01:07:50,240 --> 01:07:57,839
during fabian's presentation

1660
01:08:14,319 --> 01:08:17,920
otherwise let's move forward

1661
01:08:20,960 --> 01:08:25,279
okay um let's see here

1662
01:08:25,279 --> 01:08:28,399
all right uh next topic this

1663
01:08:28,399 --> 01:08:31,759
uh has been brought up around um

1664
01:08:31,759 --> 01:08:36,158
a lot and that's um how do we deal with

1665
01:08:36,158 --> 01:08:39,040
uh self-sovereign identity and sort of

1666
01:08:39,040 --> 01:08:40,960
these new architectures that

1667
01:08:40,960 --> 01:08:45,120
um are growing up kind of

1668
01:08:45,120 --> 01:08:48,238
outside of the oauth world really um

1669
01:08:48,238 --> 01:08:51,279
and so for some context

1670
01:08:51,279 --> 01:08:53,040
i've been doing some work with the did

1671
01:08:53,040 --> 01:08:54,319
working group

1672
01:08:54,319 --> 01:08:56,158
decentralized identifiers working group

1673
01:08:56,158 --> 01:08:59,600
in um in the w3c for the last year or so

1674
01:08:59,600 --> 01:09:02,880
uh year or two um i've

1675
01:09:02,880 --> 01:09:05,359
been following the work with selfish

1676
01:09:05,359 --> 01:09:07,600
europe's over in the open id foundation

1677
01:09:07,600 --> 01:09:09,198
which is looking to use

1678
01:09:09,198 --> 01:09:11,839
that type of stuff around an oauth 2 and

1679
01:09:11,839 --> 01:09:12,799
openid connect

1680
01:09:12,799 --> 01:09:16,960
structure and there seems to be a

1681
01:09:16,960 --> 01:09:20,238
really um a

1682
01:09:20,238 --> 01:09:22,719
really big desire from kind of the wider

1683
01:09:22,719 --> 01:09:23,759
internet community

1684
01:09:23,759 --> 01:09:27,359
to be able to use gnap

1685
01:09:27,359 --> 01:09:30,960
in um in these kinds of spaces where

1686
01:09:30,960 --> 01:09:32,319
oauth 2

1687
01:09:32,319 --> 01:09:35,439
has shown that it's it's not a great fit

1688
01:09:35,439 --> 01:09:37,839
um so you can make it fit and the the

1689
01:09:37,839 --> 01:09:38,960
psyop work is

1690
01:09:38,960 --> 01:09:43,120
is showing how to do that but um

1691
01:09:43,120 --> 01:09:45,839
one of the interesting consequences is

1692
01:09:45,839 --> 01:09:46,399
that

1693
01:09:46,399 --> 01:09:49,520
uh psyop makes use of the

1694
01:09:49,520 --> 01:09:51,679
hybrid uh flow which is of course based

1695
01:09:51,679 --> 01:09:53,520
on the implicit flow

1696
01:09:53,520 --> 01:09:55,440
uh from oauth 2 which has now been

1697
01:09:55,440 --> 01:09:56,719
deprecated

1698
01:09:56,719 --> 01:10:00,840
in oauth 2.1 and so

1699
01:10:00,840 --> 01:10:03,199
um what you have

1700
01:10:03,199 --> 01:10:06,800
are right now are kind of hacks built on

1701
01:10:06,800 --> 01:10:09,120
hacks built on hacks built on hacks

1702
01:10:09,120 --> 01:10:12,800
because we're using systems in ways that

1703
01:10:12,800 --> 01:10:15,920
we didn't dream of a decade ago

1704
01:10:15,920 --> 01:10:17,520
and using new technologies that weren't

1705
01:10:17,520 --> 01:10:18,960
available a decade ago

1706
01:10:18,960 --> 01:10:21,040
so with gnapp i really believe we've got

1707
01:10:21,040 --> 01:10:23,520
an opportunity to

1708
01:10:23,520 --> 01:10:28,239
take a better stab at this and

1709
01:10:28,239 --> 01:10:29,679
but i think it's going to be really

1710
01:10:29,679 --> 01:10:31,679
really important uh

1711
01:10:31,679 --> 01:10:32,880
first to get this right i think it's

1712
01:10:32,880 --> 01:10:35,679
going to be really important for us to

1713
01:10:35,679 --> 01:10:37,679
look at the the architecture and

1714
01:10:37,679 --> 01:10:39,120
interconnections of all of these

1715
01:10:39,120 --> 01:10:40,320
different things

1716
01:10:40,320 --> 01:10:43,440
uh the right way so

1717
01:10:43,440 --> 01:10:45,760
traditionally this has been talked about

1718
01:10:45,760 --> 01:10:47,600
as the bring your own authorization

1719
01:10:47,600 --> 01:10:48,480
server

1720
01:10:48,480 --> 01:10:52,239
uh problem and uh the kind of naive way

1721
01:10:52,239 --> 01:10:53,199
to do this

1722
01:10:53,199 --> 01:10:55,199
is to say okay so the authorization

1723
01:10:55,199 --> 01:10:57,679
server is a

1724
01:10:57,679 --> 01:10:59,280
function of your device something that

1725
01:10:59,280 --> 01:11:01,199
you carry with you and

1726
01:11:01,199 --> 01:11:04,719
it's uh it issues the access tokens if

1727
01:11:04,719 --> 01:11:07,520
um it authenticates the user great we've

1728
01:11:07,520 --> 01:11:08,960
got ways to do that

1729
01:11:08,960 --> 01:11:11,760
it has a means of doing

1730
01:11:11,760 --> 01:11:13,760
cryptographically verifiable items and

1731
01:11:13,760 --> 01:11:15,280
things like that

1732
01:11:15,280 --> 01:11:18,080
it can even potentially issue things to

1733
01:11:18,080 --> 01:11:20,159
client application

1734
01:11:20,159 --> 01:11:21,679
one of the where one of the places where

1735
01:11:21,679 --> 01:11:23,199
this really breaks down though

1736
01:11:23,199 --> 01:11:26,480
is how does the resource server know how

1737
01:11:26,480 --> 01:11:30,159
and when to trust uh these

1738
01:11:30,159 --> 01:11:33,440
access tokens that are being issued

1739
01:11:33,440 --> 01:11:36,640
on some user's device right

1740
01:11:36,640 --> 01:11:38,800
like what recourse does it have and in

1741
01:11:38,800 --> 01:11:40,320
order for that

1742
01:11:40,320 --> 01:11:41,840
boundary to work you really have to

1743
01:11:41,840 --> 01:11:44,480
start defining things like

1744
01:11:44,480 --> 01:11:47,440
uh non-opaque structured tokens and

1745
01:11:47,440 --> 01:11:49,520
requiring those in order to be able to

1746
01:11:49,520 --> 01:11:50,960
convey information across these

1747
01:11:50,960 --> 01:11:53,199
boundaries in a trustful manner

1748
01:11:53,199 --> 01:11:55,920
now it seems even more obvious when

1749
01:11:55,920 --> 01:11:58,800
you're talking about the case where

1750
01:11:58,800 --> 01:12:02,400
the client and the auth server are both

1751
01:12:02,400 --> 01:12:04,239
under the user's control on the user's

1752
01:12:04,239 --> 01:12:05,679
device

1753
01:12:05,679 --> 01:12:07,920
and we found that in the oauth world

1754
01:12:07,920 --> 01:12:08,960
even trusting

1755
01:12:08,960 --> 01:12:12,159
a new untrusted client is a hard enough

1756
01:12:12,159 --> 01:12:13,360
proposition

1757
01:12:13,360 --> 01:12:15,440
with oauth's client ids and all of this

1758
01:12:15,440 --> 01:12:16,560
other stuff

1759
01:12:16,560 --> 01:12:19,600
that um you know this

1760
01:12:19,600 --> 01:12:22,000
this pattern of just doing everything on

1761
01:12:22,000 --> 01:12:23,679
the user's device

1762
01:12:23,679 --> 01:12:27,280
it seems to it seems to make sense

1763
01:12:27,280 --> 01:12:30,000
from sort of a naive point of view but

1764
01:12:30,000 --> 01:12:31,679
there are a lot of problems when you

1765
01:12:31,679 --> 01:12:33,040
actually

1766
01:12:33,040 --> 01:12:36,000
drill down into doing this and we're

1767
01:12:36,000 --> 01:12:37,679
seeing this a lot with the psyop work

1768
01:12:37,679 --> 01:12:40,880
it's like you know how do you discover

1769
01:12:40,880 --> 01:12:43,520
an authorization server that's not

1770
01:12:43,520 --> 01:12:45,600
reachable from http

1771
01:12:45,600 --> 01:12:48,159
right so if you've got a client that's

1772
01:12:48,159 --> 01:12:49,360
not on the device

1773
01:12:49,360 --> 01:12:50,800
but you still want the user to be able

1774
01:12:50,800 --> 01:12:52,880
to authenticate it how do you do that

1775
01:12:52,880 --> 01:12:54,800
how does the rs get introduced to this

1776
01:12:54,800 --> 01:12:56,640
how does the rs trust this

1777
01:12:56,640 --> 01:12:59,679
there's a lot of problems that arise

1778
01:12:59,679 --> 01:13:02,480
from this pattern

1779
01:13:02,840 --> 01:13:06,480
and uh oh yeah i've

1780
01:13:06,480 --> 01:13:08,080
covered all of that text already with my

1781
01:13:08,080 --> 01:13:10,800
ramblings okay um

1782
01:13:10,800 --> 01:13:12,960
so

1783
01:13:13,920 --> 01:13:17,120
what really ends up happening

1784
01:13:17,120 --> 01:13:19,840
when you bring your own auth server in

1785
01:13:19,840 --> 01:13:21,040
practice

1786
01:13:21,040 --> 01:13:24,080
and we see this in oauth 2 deployments

1787
01:13:24,080 --> 01:13:27,440
all the time today uh is that you've got

1788
01:13:27,440 --> 01:13:29,199
you end up people building out kind of a

1789
01:13:29,199 --> 01:13:31,440
proxy authorization server

1790
01:13:31,440 --> 01:13:33,920
so the actual authorization server or

1791
01:13:33,920 --> 01:13:36,000
actual resource server is somewhere

1792
01:13:36,000 --> 01:13:38,800
internal and whatever you present to

1793
01:13:38,800 --> 01:13:41,120
this proxy as be it an api

1794
01:13:41,120 --> 01:13:43,440
gateway or some other thing ends up

1795
01:13:43,440 --> 01:13:45,600
being translated to something

1796
01:13:45,600 --> 01:13:47,840
internal for the actual resource servers

1797
01:13:47,840 --> 01:13:48,719
to consume

1798
01:13:48,719 --> 01:13:50,320
this is a well-known pattern it's well

1799
01:13:50,320 --> 01:13:51,840
understood and

1800
01:13:51,840 --> 01:13:54,080
it's going to keep happening like people

1801
01:13:54,080 --> 01:13:55,360
keep using this

1802
01:13:55,360 --> 01:13:57,840
but now really we've just shifted the

1803
01:13:57,840 --> 01:13:58,840
problem

1804
01:13:58,840 --> 01:14:01,760
of you know trusting what

1805
01:14:01,760 --> 01:14:05,040
uh what comes in from the user uh

1806
01:14:05,040 --> 01:14:08,880
away from the actual downstream resource

1807
01:14:08,880 --> 01:14:10,480
server to a component whose job is

1808
01:14:10,480 --> 01:14:12,719
dedicated to doing that

1809
01:14:12,719 --> 01:14:16,880
so what i want to ask is

1810
01:14:16,880 --> 01:14:19,760
do we are we actually in this case are

1811
01:14:19,760 --> 01:14:22,000
we actually even talking about

1812
01:14:22,000 --> 01:14:23,440
the user bringing their own

1813
01:14:23,440 --> 01:14:25,760
authorization server anymore

1814
01:14:25,760 --> 01:14:28,800
or are they bringing something else

1815
01:14:28,800 --> 01:14:32,400
so if we look at the authorization

1816
01:14:32,400 --> 01:14:33,199
server

1817
01:14:33,199 --> 01:14:37,440
most fundamentally as a token factory

1818
01:14:37,440 --> 01:14:39,840
so this this is the thing that gathers a

1819
01:14:39,840 --> 01:14:42,159
whole bunch of information about who's

1820
01:14:42,159 --> 01:14:44,000
making the request who's authorizing the

1821
01:14:44,000 --> 01:14:45,760
request and all of this

1822
01:14:45,760 --> 01:14:48,320
and its job is to issue an access token

1823
01:14:48,320 --> 01:14:49,360
that can be used

1824
01:14:49,360 --> 01:14:51,840
at the elements that it's protecting

1825
01:14:51,840 --> 01:14:52,880
resource servers

1826
01:14:52,880 --> 01:14:56,080
that are downstream this is completely

1827
01:14:56,080 --> 01:14:56,960
in line with

1828
01:14:56,960 --> 01:14:58,960
what oauth 2 defines this is completely

1829
01:14:58,960 --> 01:15:01,760
in line with what app is defined so far

1830
01:15:01,760 --> 01:15:04,239
but what i want to push back on is this

1831
01:15:04,239 --> 01:15:04,880
uh

1832
01:15:04,880 --> 01:15:07,600
sort of implied notion that the

1833
01:15:07,600 --> 01:15:09,679
authorization server has to have the

1834
01:15:09,679 --> 01:15:11,679
user login to it and the user

1835
01:15:11,679 --> 01:15:14,159
interact with it directly in order to

1836
01:15:14,159 --> 01:15:16,320
fulfill these claims

1837
01:15:16,320 --> 01:15:18,960
because what we're seeing with all of

1838
01:15:18,960 --> 01:15:19,360
this

1839
01:15:19,360 --> 01:15:21,600
technology with verifiable credentials

1840
01:15:21,600 --> 01:15:22,800
dids and whatnot

1841
01:15:22,800 --> 01:15:25,360
is a new way to identify users in a new

1842
01:15:25,360 --> 01:15:27,120
way for users to present

1843
01:15:27,120 --> 01:15:31,920
verifiable information to a third party

1844
01:15:31,920 --> 01:15:35,440
and that third party i am contending

1845
01:15:35,440 --> 01:15:37,280
can be the authorization server can be

1846
01:15:37,280 --> 01:15:39,520
the genap authorization server

1847
01:15:39,520 --> 01:15:41,280
so the way that this pattern works is

1848
01:15:41,280 --> 01:15:42,880
that uh

1849
01:15:42,880 --> 01:15:45,520
when the client instance starts its

1850
01:15:45,520 --> 01:15:47,440
negotiation with the authorization

1851
01:15:47,440 --> 01:15:48,719
server

1852
01:15:48,719 --> 01:15:51,440
like fabian showed in his proposed

1853
01:15:51,440 --> 01:15:52,000
syntax

1854
01:15:52,000 --> 01:15:55,440
one of the things that it can say is hey

1855
01:15:55,440 --> 01:15:57,600
i know how to present a bunch of

1856
01:15:57,600 --> 01:16:00,640
verifiable credentials from the user

1857
01:16:00,640 --> 01:16:02,400
uh i can get you in touch with their

1858
01:16:02,400 --> 01:16:04,480
digital wallet through didcommer any

1859
01:16:04,480 --> 01:16:05,120
other

1860
01:16:05,120 --> 01:16:08,159
kind of mechanism that you like i can

1861
01:16:08,159 --> 01:16:10,239
facilitate that connection

1862
01:16:10,239 --> 01:16:13,360
so um

1863
01:16:13,360 --> 01:16:14,960
so you know if you want to interact with

1864
01:16:14,960 --> 01:16:17,360
the user that way do that

1865
01:16:17,360 --> 01:16:20,080
so in this way we can facilitate the

1866
01:16:20,080 --> 01:16:20,640
pattern

1867
01:16:20,640 --> 01:16:23,840
of the user interacting

1868
01:16:23,840 --> 01:16:26,480
not with the authorization server but

1869
01:16:26,480 --> 01:16:27,520
with a separate

1870
01:16:27,520 --> 01:16:30,159
party might be a device on their wallet

1871
01:16:30,159 --> 01:16:31,440
it might be a different web service

1872
01:16:31,440 --> 01:16:34,000
entirely as long as the as has a way

1873
01:16:34,000 --> 01:16:37,199
to make those connections and

1874
01:16:37,199 --> 01:16:40,159
it's doesn't have to be up to gnap to

1875
01:16:40,159 --> 01:16:41,040
define

1876
01:16:41,040 --> 01:16:42,640
all of the ways those connections can be

1877
01:16:42,640 --> 01:16:45,199
made very importantly

1878
01:16:45,199 --> 01:16:47,760
so can app can solve the common use case

1879
01:16:47,760 --> 01:16:48,400
of oh

1880
01:16:48,400 --> 01:16:50,480
i just need to get the user in front of

1881
01:16:50,480 --> 01:16:52,400
a web page at the as

1882
01:16:52,400 --> 01:16:54,159
we've got ways to do that oauth showed

1883
01:16:54,159 --> 01:16:56,400
us how valuable that is and that's

1884
01:16:56,400 --> 01:16:57,600
wonderful

1885
01:16:57,600 --> 01:16:59,440
but for the cases where the user's not

1886
01:16:59,440 --> 01:17:02,320
doing that we shouldn't be pretending

1887
01:17:02,320 --> 01:17:04,159
that that's what we're doing and that's

1888
01:17:04,159 --> 01:17:05,280
fundamentally that's what the

1889
01:17:05,280 --> 01:17:06,880
self-issued op work

1890
01:17:06,880 --> 01:17:10,080
from openid connect does it pretends

1891
01:17:10,080 --> 01:17:13,120
that you're doing a redirect based

1892
01:17:13,120 --> 01:17:15,120
web-based type of thing where

1893
01:17:15,120 --> 01:17:16,480
fundamentally you're

1894
01:17:16,480 --> 01:17:20,000
really doing something else and so

1895
01:17:20,000 --> 01:17:23,760
uh what i'm proposing is that we

1896
01:17:23,760 --> 01:17:27,040
shift our um

1897
01:17:27,040 --> 01:17:29,199
terminology a bit and shift how we're

1898
01:17:29,199 --> 01:17:30,640
approaching

1899
01:17:30,640 --> 01:17:33,280
what each of these components does in a

1900
01:17:33,280 --> 01:17:35,040
way that will facilitate

1901
01:17:35,040 --> 01:17:39,199
this more general type of thing

1902
01:17:39,199 --> 01:17:41,120
and the best part about this if you ask

1903
01:17:41,120 --> 01:17:42,480
me is that

1904
01:17:42,480 --> 01:17:45,600
we're not even inventing this like

1905
01:17:45,600 --> 01:17:47,760
this has been around this pattern has

1906
01:17:47,760 --> 01:17:49,920
been around for ages

1907
01:17:49,920 --> 01:17:53,600
if you go to any of the cloud-based

1908
01:17:53,600 --> 01:17:56,239
oauth providers out there right now they

1909
01:17:56,239 --> 01:17:58,080
have mechanisms for a

1910
01:17:58,080 --> 01:18:00,159
federated login to the authorization

1911
01:18:00,159 --> 01:18:01,520
server so there's no

1912
01:18:01,520 --> 01:18:03,920
account at the as that the user is

1913
01:18:03,920 --> 01:18:05,120
authenticating to and

1914
01:18:05,120 --> 01:18:07,360
in some cases the user is not even

1915
01:18:07,360 --> 01:18:08,320
providing

1916
01:18:08,320 --> 01:18:10,560
interaction and can and consent it's

1917
01:18:10,560 --> 01:18:12,880
just the as is being told

1918
01:18:12,880 --> 01:18:15,280
through an assertion that this is the

1919
01:18:15,280 --> 01:18:16,400
user that is here

1920
01:18:16,400 --> 01:18:18,880
right now you'll trust me because you've

1921
01:18:18,880 --> 01:18:21,040
been configured to trust me

1922
01:18:21,040 --> 01:18:23,920
and you can validate this and then the

1923
01:18:23,920 --> 01:18:26,080
as takes that information and says

1924
01:18:26,080 --> 01:18:28,560
okay well that means that i can issue a

1925
01:18:28,560 --> 01:18:30,480
token

1926
01:18:30,480 --> 01:18:34,159
the problem comes from the fact that

1927
01:18:34,159 --> 01:18:37,280
if you look at how the oauth 2 core is

1928
01:18:37,280 --> 01:18:38,880
written and therefore how

1929
01:18:38,880 --> 01:18:40,880
a lot of the assumptions that have kind

1930
01:18:40,880 --> 01:18:42,880
of gone into the start of gnap are

1931
01:18:42,880 --> 01:18:44,159
written

1932
01:18:44,159 --> 01:18:46,719
we we kind of don't admit that this is a

1933
01:18:46,719 --> 01:18:48,000
possibility

1934
01:18:48,000 --> 01:18:50,320
like a lot of the assumptions are about

1935
01:18:50,320 --> 01:18:51,679
and you look at the diagrams a lot of

1936
01:18:51,679 --> 01:18:52,159
the stuff

1937
01:18:52,159 --> 01:18:54,480
in there is about oh now you redirect

1938
01:18:54,480 --> 01:18:56,400
the user over here now you present a

1939
01:18:56,400 --> 01:18:58,239
code to the user now you know you do

1940
01:18:58,239 --> 01:18:58,880
these

1941
01:18:58,880 --> 01:19:01,120
bits and pieces to move uh to move the

1942
01:19:01,120 --> 01:19:03,040
steps along

1943
01:19:03,040 --> 01:19:05,199
and i think that we've got a really

1944
01:19:05,199 --> 01:19:06,880
fantastic opportunity

1945
01:19:06,880 --> 01:19:10,320
to codify what we're doing

1946
01:19:10,320 --> 01:19:14,560
um with the as here in ganap

1947
01:19:14,560 --> 01:19:16,400
we no longer have to assume that the

1948
01:19:16,400 --> 01:19:18,480
user logs in and interacts there we no

1949
01:19:18,480 --> 01:19:19,040
longer

1950
01:19:19,040 --> 01:19:23,040
have to assume that um

1951
01:19:23,040 --> 01:19:26,640
that the user is

1952
01:19:26,640 --> 01:19:28,719
that what the user is bringing is their

1953
01:19:28,719 --> 01:19:31,040
own access token or their own

1954
01:19:31,040 --> 01:19:34,239
um their own authorization server or

1955
01:19:34,239 --> 01:19:35,920
anything like that which has always been

1956
01:19:35,920 --> 01:19:36,400
a hard

1957
01:19:36,400 --> 01:19:39,360
sell but instead we can by shifting this

1958
01:19:39,360 --> 01:19:40,080
we can say that

1959
01:19:40,080 --> 01:19:42,159
all right we are allowing the user to

1960
01:19:42,159 --> 01:19:43,679
bring things

1961
01:19:43,679 --> 01:19:46,000
to this component which is the

1962
01:19:46,000 --> 01:19:48,000
authorization server

1963
01:19:48,000 --> 01:19:50,800
but it's no longer the uh all-seeing

1964
01:19:50,800 --> 01:19:52,800
almighty all-powerful

1965
01:19:52,800 --> 01:19:54,880
component that it had previously been

1966
01:19:54,880 --> 01:19:56,800
assumed to be

1967
01:19:56,800 --> 01:19:59,120
and this gives us as fabian was just

1968
01:19:59,120 --> 01:20:00,080
showing some

1969
01:20:00,080 --> 01:20:03,040
really important extension points for

1970
01:20:03,040 --> 01:20:04,880
talking about who the user is who the

1971
01:20:04,880 --> 01:20:05,360
resource

1972
01:20:05,360 --> 01:20:08,320
owner is how we can interact with them

1973
01:20:08,320 --> 01:20:10,000
you know gnapp can provide

1974
01:20:10,000 --> 01:20:13,679
all of that structure in order to

1975
01:20:13,679 --> 01:20:16,960
facilitate this style of approach

1976
01:20:16,960 --> 01:20:18,960
much much better than we ever had

1977
01:20:18,960 --> 01:20:20,960
previously

1978
01:20:20,960 --> 01:20:25,040
um oh and this uh

1979
01:20:25,040 --> 01:20:27,840
this also can allow us to start to talk

1980
01:20:27,840 --> 01:20:29,040
about

1981
01:20:29,040 --> 01:20:32,159
the asynchronous and sort of

1982
01:20:32,159 --> 01:20:34,560
separate user and resource owner use

1983
01:20:34,560 --> 01:20:35,760
cases

1984
01:20:35,760 --> 01:20:38,239
that fabian was just talking about and

1985
01:20:38,239 --> 01:20:39,360
that user managed

1986
01:20:39,360 --> 01:20:42,159
access really brought to the forefront

1987
01:20:42,159 --> 01:20:42,719
uh

1988
01:20:42,719 --> 01:20:44,239
where the person that's making the

1989
01:20:44,239 --> 01:20:45,679
request and the person that's

1990
01:20:45,679 --> 01:20:47,120
authorizing the request

1991
01:20:47,120 --> 01:20:48,719
are not the same they're not the same

1992
01:20:48,719 --> 01:20:50,880
entity but with knapp

1993
01:20:50,880 --> 01:20:54,159
uh we have a way to start the process

1994
01:20:54,159 --> 01:20:55,920
that says that like this is what i'm

1995
01:20:55,920 --> 01:20:57,280
asking for this is

1996
01:20:57,280 --> 01:20:59,360
as far as i know who's allowed to say

1997
01:20:59,360 --> 01:21:00,639
yes

1998
01:21:00,639 --> 01:21:03,520
and in the cases where it is the same

1999
01:21:03,520 --> 01:21:04,239
user

2000
01:21:04,239 --> 01:21:06,480
we can do all of that direct interaction

2001
01:21:06,480 --> 01:21:08,400
and everything will work just

2002
01:21:08,400 --> 01:21:10,320
just like it does in sort of the

2003
01:21:10,320 --> 01:21:12,320
canonical oauth use cases

2004
01:21:12,320 --> 01:21:15,360
but in the more advanced use cases we've

2005
01:21:15,360 --> 01:21:17,600
got a way to reach people we've got a

2006
01:21:17,600 --> 01:21:20,400
way to negotiate that this is a way to

2007
01:21:20,400 --> 01:21:23,760
uh to send this communication

2008
01:21:23,760 --> 01:21:27,440
across the wire and across even non-http

2009
01:21:27,440 --> 01:21:28,560
protocols

2010
01:21:28,560 --> 01:21:30,320
uh when we're when we're talking to

2011
01:21:30,320 --> 01:21:32,880
different entities

2012
01:21:32,880 --> 01:21:36,000
so fundamentally i don't think that this

2013
01:21:36,000 --> 01:21:40,000
uh that this is really going to change

2014
01:21:40,000 --> 01:21:42,239
how this protocol works and it certainly

2015
01:21:42,239 --> 01:21:43,199
isn't

2016
01:21:43,199 --> 01:21:47,520
a big jump from what people are already

2017
01:21:47,520 --> 01:21:51,280
doing today in sort of weird proprietary

2018
01:21:51,280 --> 01:21:52,080
add-ons

2019
01:21:52,080 --> 01:21:55,120
to uh to oauth 2. but

2020
01:21:55,120 --> 01:21:58,560
i think that shifting how we talk about

2021
01:21:58,560 --> 01:21:59,280
it

2022
01:21:59,280 --> 01:22:00,800
is going to be really important to

2023
01:22:00,800 --> 01:22:02,600
making sure that we can frame our

2024
01:22:02,600 --> 01:22:04,480
conversations

2025
01:22:04,480 --> 01:22:07,840
uh in how we address these use cases

2026
01:22:07,840 --> 01:22:10,320
because i've seen a lot of problems on

2027
01:22:10,320 --> 01:22:12,480
the list

2028
01:22:12,480 --> 01:22:16,159
in people applying

2029
01:22:16,159 --> 01:22:19,440
uh terms from the oauth world

2030
01:22:19,440 --> 01:22:23,600
and from the knapp world in ways that

2031
01:22:23,600 --> 01:22:26,159
really go outside of what each of these

2032
01:22:26,159 --> 01:22:28,000
different roles

2033
01:22:28,000 --> 01:22:30,080
does what each of these different roles

2034
01:22:30,080 --> 01:22:32,480
is capable of

2035
01:22:32,480 --> 01:22:36,480
so yes you may want to gather claims

2036
01:22:36,480 --> 01:22:38,480
on an entity that is not the

2037
01:22:38,480 --> 01:22:39,920
authorization server you may want to

2038
01:22:39,920 --> 01:22:41,920
gather consent on something that is not

2039
01:22:41,920 --> 01:22:43,520
the authorization server

2040
01:22:43,520 --> 01:22:45,040
but the authorization server still needs

2041
01:22:45,040 --> 01:22:47,040
to be told that that consent

2042
01:22:47,040 --> 01:22:48,560
has happened so that it can issue a

2043
01:22:48,560 --> 01:22:51,440
token we should be able to do that

2044
01:22:51,440 --> 01:22:53,840
and we can do that but we can't start

2045
01:22:53,840 --> 01:22:55,120
saying things like oh

2046
01:22:55,120 --> 01:22:58,800
it's the client that gathers the consent

2047
01:22:58,800 --> 01:23:01,440
right or it's the resource server that

2048
01:23:01,440 --> 01:23:02,800
interacts with

2049
01:23:02,800 --> 01:23:06,560
the resource owner to define consent

2050
01:23:06,560 --> 01:23:09,600
because those roles don't

2051
01:23:09,600 --> 01:23:11,040
do those things we need to be very

2052
01:23:11,040 --> 01:23:13,600
careful about how we're talking about

2053
01:23:13,600 --> 01:23:15,280
these different roles and how they're

2054
01:23:15,280 --> 01:23:17,840
fulfilled

2055
01:23:19,199 --> 01:23:21,840
so from an editor's perspective i think

2056
01:23:21,840 --> 01:23:22,400
that

2057
01:23:22,400 --> 01:23:25,840
um we can continue

2058
01:23:25,840 --> 01:23:28,239
this uh conversation about sort of the

2059
01:23:28,239 --> 01:23:30,480
terminology and defining the roles

2060
01:23:30,480 --> 01:23:32,480
uh that fabian has started i think that

2061
01:23:32,480 --> 01:23:34,400
we will end up addressing a

2062
01:23:34,400 --> 01:23:37,920
lot of the currently open issues

2063
01:23:37,920 --> 01:23:40,960
um in terms of how we do

2064
01:23:40,960 --> 01:23:43,120
these different use cases that people

2065
01:23:43,120 --> 01:23:45,920
want to use gnap for

2066
01:23:45,920 --> 01:23:49,360
but in a way that's not inconsistent

2067
01:23:49,360 --> 01:23:51,600
with the other use cases that we know

2068
01:23:51,600 --> 01:23:53,679
people want to do which is to say

2069
01:23:53,679 --> 01:23:55,440
all of the oauth 2 and open id connect

2070
01:23:55,440 --> 01:23:56,719
stuff that is

2071
01:23:56,719 --> 01:24:00,239
really well known and understood today

2072
01:24:00,239 --> 01:24:04,159
um and that's all i had for presentation

2073
01:24:04,159 --> 01:24:07,360
uh i was i'm expecting this might uh

2074
01:24:07,360 --> 01:24:08,400
generate some

2075
01:24:08,400 --> 01:24:11,440
conversation here

2076
01:24:13,040 --> 01:24:17,840
because it has on the list so far

2077
01:24:20,800 --> 01:24:23,600
anybody in the queue well i see your

2078
01:24:23,600 --> 01:24:25,600
uranus put himself in the queue so

2079
01:24:25,600 --> 01:24:30,400
go right ahead yeah so that's off

2080
01:24:31,120 --> 01:24:34,080
a comment about terminology and maybe

2081
01:24:34,080 --> 01:24:36,320
it's a little bigger than that

2082
01:24:36,320 --> 01:24:40,159
when you call the eas token factory i

2083
01:24:40,159 --> 01:24:41,280
think

2084
01:24:41,280 --> 01:24:44,480
you may be putting the the

2085
01:24:44,480 --> 01:24:48,560
emphasis on on the output rather than

2086
01:24:48,560 --> 01:24:49,840
the behavior

2087
01:24:49,840 --> 01:24:51,990
and my question is

2088
01:24:51,990 --> 01:24:54,880
[Music]

2089
01:24:54,880 --> 01:24:58,239
is it even an is if it doesn't enforce a

2090
01:24:58,239 --> 01:24:59,600
policy

2091
01:24:59,600 --> 01:25:02,719
so i would say an ais is something that

2092
01:25:02,719 --> 01:25:05,920
both enforces a policy and

2093
01:25:05,920 --> 01:25:09,679
generates a token that there is

2094
01:25:09,679 --> 01:25:12,719
that the sum total of this

2095
01:25:12,719 --> 01:25:15,520
evaluation

2096
01:25:16,480 --> 01:25:19,600
yeah so um uh so

2097
01:25:19,600 --> 01:25:22,560
speaking responding as as an individual

2098
01:25:22,560 --> 01:25:23,600
i

2099
01:25:23,600 --> 01:25:26,639
agree with that that the as's job

2100
01:25:26,639 --> 01:25:29,920
is to enforce the policy that includes

2101
01:25:29,920 --> 01:25:31,600
taking in all of the inputs

2102
01:25:31,600 --> 01:25:35,040
in order to generate the correct outputs

2103
01:25:35,040 --> 01:25:39,120
right and um so what i'm trying to

2104
01:25:39,120 --> 01:25:42,639
present here is the fact that

2105
01:25:42,639 --> 01:25:45,920
a lot of those inputs can be managed in

2106
01:25:45,920 --> 01:25:47,440
sort of

2107
01:25:47,440 --> 01:25:50,480
ways beyond just the traditional get the

2108
01:25:50,480 --> 01:25:51,600
user to show up

2109
01:25:51,600 --> 01:25:55,760
at the as web webpage and push a button

2110
01:25:55,760 --> 01:25:57,440
that that we tend to think about in the

2111
01:25:57,440 --> 01:25:58,960
oauth world right

2112
01:25:58,960 --> 01:26:00,880
so yeah i totally agree there's policy

2113
01:26:00,880 --> 01:26:02,960
under that sometimes though like if we

2114
01:26:02,960 --> 01:26:03,679
look at the

2115
01:26:03,679 --> 01:26:07,600
um if i go back to the to the

2116
01:26:07,600 --> 01:26:10,159
sort of cloud login thing thing

2117
01:26:10,159 --> 01:26:12,400
sometimes the policy at the as

2118
01:26:12,400 --> 01:26:17,360
is somebody logged in from this domain

2119
01:26:17,360 --> 01:26:20,239
and the client is known you know it's a

2120
01:26:20,239 --> 01:26:22,400
known client id

2121
01:26:22,400 --> 01:26:24,400
so spit out a token that is the sum

2122
01:26:24,400 --> 01:26:26,320
total of the policy

2123
01:26:26,320 --> 01:26:29,360
and um and i mean

2124
01:26:29,360 --> 01:26:31,120
in some asses some that i have

2125
01:26:31,120 --> 01:26:33,920
personally worked on the policy is

2126
01:26:33,920 --> 01:26:35,600
spit out a token with whatever

2127
01:26:35,600 --> 01:26:36,960
parameters

2128
01:26:36,960 --> 01:26:39,199
you know this this other external piece

2129
01:26:39,199 --> 01:26:41,920
of software told me to do

2130
01:26:41,920 --> 01:26:44,960
right uh so yeah i agree but

2131
01:26:44,960 --> 01:26:47,280
uh that policy doesn't necessarily have

2132
01:26:47,280 --> 01:26:48,000
to fit

2133
01:26:48,000 --> 01:26:51,280
the um the model

2134
01:26:51,280 --> 01:26:53,920
of you know what user is present what

2135
01:26:53,920 --> 01:26:54,800
user

2136
01:26:54,800 --> 01:26:57,040
clicked a button and they are logged in

2137
01:26:57,040 --> 01:26:58,480
and we have an account and all of that

2138
01:26:58,480 --> 01:26:59,679
kind of stuff

2139
01:26:59,679 --> 01:27:01,679
yeah that that's the part i was pushing

2140
01:27:01,679 --> 01:27:02,800
back on not

2141
01:27:02,800 --> 01:27:06,719
not policy in general okay thank you

2142
01:27:06,719 --> 01:27:10,639
thank you though aaron

2143
01:27:11,199 --> 01:27:12,560
i don't think i have anything to add at

2144
01:27:12,560 --> 01:27:14,239
this point justin pretty much summarized

2145
01:27:14,239 --> 01:27:14,719
it but

2146
01:27:14,719 --> 01:27:18,000
yeah i was just gonna echo that

2147
01:27:18,000 --> 01:27:20,880
the policy doesn't have to be this user

2148
01:27:20,880 --> 01:27:22,159
is pre-known

2149
01:27:22,159 --> 01:27:23,840
already and we know about what they're

2150
01:27:23,840 --> 01:27:25,760
allowed to do the policy might be

2151
01:27:25,760 --> 01:27:28,239
this user exists in some external system

2152
01:27:28,239 --> 01:27:31,120
and i'm trusting that external system

2153
01:27:31,120 --> 01:27:32,960
to go ahead and make the token to just

2154
01:27:32,960 --> 01:27:34,639
go ahead and make the token now

2155
01:27:34,639 --> 01:27:36,159
and yeah we do see that with social

2156
01:27:36,159 --> 01:27:39,040
login a lot where an as might accept

2157
01:27:39,040 --> 01:27:42,239
twitter users regardless of who they are

2158
01:27:42,239 --> 01:27:44,560
and this would just be an extension of

2159
01:27:44,560 --> 01:27:45,440
that idea to

2160
01:27:45,440 --> 01:27:48,239
trusting a particular type of on-device

2161
01:27:48,239 --> 01:27:48,719
wallet

2162
01:27:48,719 --> 01:27:53,360
or something like that yeah

2163
01:27:53,360 --> 01:27:56,239
and so speaking as an editor the big

2164
01:27:56,239 --> 01:27:57,679
question before the group

2165
01:27:57,679 --> 01:28:01,199
is how do we facilitate all of that

2166
01:28:01,199 --> 01:28:03,520
in the protocol in a way that doesn't

2167
01:28:03,520 --> 01:28:04,719
make it

2168
01:28:04,719 --> 01:28:07,040
ridiculously convoluted especially for

2169
01:28:07,040 --> 01:28:08,400
the other simple cases

2170
01:28:08,400 --> 01:28:10,639
that we know exist because we're still

2171
01:28:10,639 --> 01:28:12,480
going to have two websites talking to

2172
01:28:12,480 --> 01:28:13,520
each other

2173
01:28:13,520 --> 01:28:16,159
with http redirects like that's not

2174
01:28:16,159 --> 01:28:16,800
going away

2175
01:28:16,800 --> 01:28:19,280
anytime soon and if we drop that on the

2176
01:28:19,280 --> 01:28:20,960
floor we would be doing the community a

2177
01:28:20,960 --> 01:28:24,000
huge disservice

2178
01:28:25,520 --> 01:28:27,760
so somebody else was was in the queue i

2179
01:28:27,760 --> 01:28:30,639
think they dequeued

2180
01:28:30,719 --> 01:28:33,840
but oh yeah that's right then um

2181
01:28:33,840 --> 01:28:36,800
christina you're up

2182
01:28:38,960 --> 01:28:40,960
i had a question related to what justin

2183
01:28:40,960 --> 01:28:42,320
just mentioned um

2184
01:28:42,320 --> 01:28:45,280
having worked on selfish edup in general

2185
01:28:45,280 --> 01:28:46,400
i agree with

2186
01:28:46,400 --> 01:28:49,600
um just as comments um

2187
01:28:49,600 --> 01:28:52,159
but as you know the salvation of pima

2188
01:28:52,159 --> 01:28:53,920
was quite different as you pointed out

2189
01:28:53,920 --> 01:28:54,960
was sort of

2190
01:28:54,960 --> 01:28:58,000
you know the rest of oauth flows and you

2191
01:28:58,000 --> 01:28:58,480
know

2192
01:28:58,480 --> 01:29:01,840
it uses hybrid slash implicit flows so

2193
01:29:01,840 --> 01:29:03,679
um is the point of this discussion to

2194
01:29:03,679 --> 01:29:05,520
figure out the saturn scope for gnab

2195
01:29:05,520 --> 01:29:06,480
discussion too

2196
01:29:06,480 --> 01:29:09,760
or is that already in scope for nap

2197
01:29:09,760 --> 01:29:11,600
like are you trying are you trying to

2198
01:29:11,600 --> 01:29:13,840
incorporate that i'm kind of you know

2199
01:29:13,840 --> 01:29:16,800
like how this is a cross point and you

2200
01:29:16,800 --> 01:29:17,360
know what

2201
01:29:17,360 --> 01:29:20,400
what's the goal here so

2202
01:29:20,400 --> 01:29:24,639
um if i can restate is the question

2203
01:29:24,639 --> 01:29:29,600
um is selfish udop in scope

2204
01:29:29,600 --> 01:29:32,320
is that what you're saying

2205
01:29:32,800 --> 01:29:37,199
well yeah um in essence yeah um

2206
01:29:37,199 --> 01:29:40,320
so speaking as an

2207
01:29:40,320 --> 01:29:45,120
individual um i think that

2208
01:29:45,120 --> 01:29:48,239
the goals uh

2209
01:29:48,239 --> 01:29:51,440
or the desired outcomes of self-issued

2210
01:29:51,440 --> 01:29:52,400
op

2211
01:29:52,400 --> 01:29:55,600
ought to be in scope for gnat and that's

2212
01:29:55,600 --> 01:29:56,960
that's driving a lot of what i'm

2213
01:29:56,960 --> 01:29:59,199
proposing for you know this

2214
01:29:59,199 --> 01:30:02,080
this sort of slight shift in thinking

2215
01:30:02,080 --> 01:30:02,800
and

2216
01:30:02,800 --> 01:30:06,719
addressing terminology here um

2217
01:30:06,719 --> 01:30:09,600
i personally do not think that it makes

2218
01:30:09,600 --> 01:30:11,199
sense to have

2219
01:30:11,199 --> 01:30:14,320
the either the actual technology or

2220
01:30:14,320 --> 01:30:17,440
even the model

2221
01:30:17,440 --> 01:30:20,480
of uh selfish udop

2222
01:30:20,480 --> 01:30:24,560
um as part of ganap

2223
01:30:24,560 --> 01:30:28,560
right so um from a technology standpoint

2224
01:30:28,560 --> 01:30:31,920
it's it's it relies on

2225
01:30:31,920 --> 01:30:34,400
starting with a redirect and that was

2226
01:30:34,400 --> 01:30:36,159
one of the first things we threw out

2227
01:30:36,159 --> 01:30:39,120
from oauth 2. you know the fact that

2228
01:30:39,120 --> 01:30:40,320
every

2229
01:30:40,320 --> 01:30:43,360
type of request starts the same way

2230
01:30:43,360 --> 01:30:44,800
incan app is a really

2231
01:30:44,800 --> 01:30:49,440
important is a really deeply important

2232
01:30:49,440 --> 01:30:52,800
uh architecture decision

2233
01:30:52,800 --> 01:30:57,120
um and it drastically simplifies

2234
01:30:57,120 --> 01:30:58,800
how to work across all of these

2235
01:30:58,800 --> 01:31:00,880
different very complex

2236
01:31:00,880 --> 01:31:04,159
um use cases one of the biggest problems

2237
01:31:04,159 --> 01:31:06,400
that i've seen in the field with oauth 2

2238
01:31:06,400 --> 01:31:10,320
is you have to choose your grant type

2239
01:31:10,320 --> 01:31:13,520
ahead of time and that makes a lot of

2240
01:31:13,520 --> 01:31:15,040
assumptions about

2241
01:31:15,040 --> 01:31:17,920
sort of who's there who can say okay and

2242
01:31:17,920 --> 01:31:19,760
what you can do next

2243
01:31:19,760 --> 01:31:22,320
um and in oauth there's there's no way

2244
01:31:22,320 --> 01:31:24,480
to switch to a different grant type you

2245
01:31:24,480 --> 01:31:26,239
just have to kind of throw that out and

2246
01:31:26,239 --> 01:31:28,639
start something new and in the wild

2247
01:31:28,639 --> 01:31:30,080
we've seen this take the

2248
01:31:30,080 --> 01:31:33,679
um take the shape of

2249
01:31:33,679 --> 01:31:37,120
for example starting with an

2250
01:31:37,120 --> 01:31:39,360
assertion-based flow and then when that

2251
01:31:39,360 --> 01:31:40,159
fails

2252
01:31:40,159 --> 01:31:44,480
do one of the interactive flows

2253
01:31:44,480 --> 01:31:47,120
with the structure in gnapp though

2254
01:31:47,120 --> 01:31:49,520
because it's meant to be negotiated over

2255
01:31:49,520 --> 01:31:50,639
time

2256
01:31:50,639 --> 01:31:53,920
um you can present the assertion

2257
01:31:53,920 --> 01:31:56,880
and also say this is how i can interact

2258
01:31:56,880 --> 01:31:58,239
and also say

2259
01:31:58,239 --> 01:32:00,320
by the way i can you know here's the

2260
01:32:00,320 --> 01:32:01,840
user's wallet address if you want to go

2261
01:32:01,840 --> 01:32:03,199
talk to them

2262
01:32:03,199 --> 01:32:06,159
um you can present all of that uh to the

2263
01:32:06,159 --> 01:32:08,480
as at once and then the as gets to

2264
01:32:08,480 --> 01:32:09,360
decide

2265
01:32:09,360 --> 01:32:11,840
which of those pieces that it needs

2266
01:32:11,840 --> 01:32:13,199
right and then to yarn's point like

2267
01:32:13,199 --> 01:32:13,920
that's

2268
01:32:13,920 --> 01:32:15,520
that is the policy that's where the

2269
01:32:15,520 --> 01:32:17,199
policy comes into play

2270
01:32:17,199 --> 01:32:19,120
uh because the as needs to decide you

2271
01:32:19,120 --> 01:32:20,800
know which of those bits it needs to act

2272
01:32:20,800 --> 01:32:22,080
on depending on

2273
01:32:22,080 --> 01:32:24,159
what it is you're asking for or you're

2274
01:32:24,159 --> 01:32:25,920
asking for information about the current

2275
01:32:25,920 --> 01:32:27,600
user are you asking for information

2276
01:32:27,600 --> 01:32:29,600
about how to get to an api

2277
01:32:29,600 --> 01:32:32,400
you know what have you so yeah from my

2278
01:32:32,400 --> 01:32:34,239
from my individual perspective i think

2279
01:32:34,239 --> 01:32:35,040
that the goal

2280
01:32:35,040 --> 01:32:37,679
of allowing the user to bring identity

2281
01:32:37,679 --> 01:32:40,239
claims and facilitate that through

2282
01:32:40,239 --> 01:32:42,800
this protocol totally makes sense and we

2283
01:32:42,800 --> 01:32:44,719
should totally embrace that

2284
01:32:44,719 --> 01:32:47,600
um the goal of having the user carry the

2285
01:32:47,600 --> 01:32:48,960
complete authorization

2286
01:32:48,960 --> 01:32:51,760
server with them to generate identity

2287
01:32:51,760 --> 01:32:53,520
claims to their client

2288
01:32:53,520 --> 01:32:55,840
i don't

2289
01:33:07,120 --> 01:33:09,280
with us but especially because if you

2290
01:33:09,280 --> 01:33:10,400
look at

2291
01:33:10,400 --> 01:33:13,440
um psyop end to end um

2292
01:33:13,440 --> 01:33:16,560
it can actually always start with an

2293
01:33:16,560 --> 01:33:17,679
http call

2294
01:33:17,679 --> 01:33:19,760
the whole psyop discovery and the big

2295
01:33:19,760 --> 01:33:21,199
debate that's happening

2296
01:33:21,199 --> 01:33:23,040
in that group right now with what to do

2297
01:33:23,040 --> 01:33:24,639
with the self issue dot me

2298
01:33:24,639 --> 01:33:28,080
urls and how that relates to the issuer

2299
01:33:28,080 --> 01:33:31,120
um you know uh

2300
01:33:31,120 --> 01:33:34,639
if you count that as the first step

2301
01:33:34,639 --> 01:33:36,719
we're not actually doing that something

2302
01:33:36,719 --> 01:33:37,679
that's that

2303
01:33:37,679 --> 01:33:39,440
different here it's just we're

2304
01:33:39,440 --> 01:33:40,800
facilitating it

2305
01:33:40,800 --> 01:33:42,719
in a way that's consistent with how we

2306
01:33:42,719 --> 01:33:43,920
facilitate

2307
01:33:43,920 --> 01:33:47,120
other types of uh of

2308
01:33:47,120 --> 01:33:51,840
protocol interactions

2309
01:34:00,159 --> 01:34:05,839
right now so um

2310
01:34:07,199 --> 01:34:11,120
okay thanks tina sounds like it

2311
01:34:11,440 --> 01:34:14,639
okay um so yeah from an editor's

2312
01:34:14,639 --> 01:34:15,360
perspective

2313
01:34:15,360 --> 01:34:18,000
i don't know if this means we need to

2314
01:34:18,000 --> 01:34:19,840
would probably means we need to change

2315
01:34:19,840 --> 01:34:22,800
a lot of the framing language in the um

2316
01:34:22,800 --> 01:34:23,440
in the spec

2317
01:34:23,440 --> 01:34:27,120
i think a lot of fabienne's um

2318
01:34:27,120 --> 01:34:29,840
subject identifier discussion is going

2319
01:34:29,840 --> 01:34:31,679
to push things in a similar direction

2320
01:34:31,679 --> 01:34:32,239
that's

2321
01:34:32,239 --> 01:34:33,600
this is the reason why we thought that

2322
01:34:33,600 --> 01:34:35,679
these were these were two things that uh

2323
01:34:35,679 --> 01:34:37,840
that the group should be tackling now

2324
01:34:37,840 --> 01:34:40,880
um because these are going to change how

2325
01:34:40,880 --> 01:34:41,360
we

2326
01:34:41,360 --> 01:34:44,080
frame sort of the a lot of the rest of

2327
01:34:44,080 --> 01:34:47,840
the stuff that we're solving here

2328
01:34:50,560 --> 01:34:52,800
and uh that's all we have for the chair

2329
01:34:52,800 --> 01:34:55,280
uh sorry for the editor presentations

2330
01:34:55,280 --> 01:34:58,400
uh we wanted to leave some time at the

2331
01:34:58,400 --> 01:34:59,840
end for open discussion and stuff like

2332
01:34:59,840 --> 01:35:02,480
that is needed

2333
01:35:09,679 --> 01:35:15,360
you need to turn on your microphone

2334
01:35:15,360 --> 01:35:20,159
process level on ssi i don't recall

2335
01:35:23,520 --> 01:35:26,639
an email to the list

2336
01:35:26,639 --> 01:35:30,880
with your proposal did i miss something

2337
01:35:30,880 --> 01:35:33,920
or otherwise i think we do need to to

2338
01:35:33,920 --> 01:35:35,520
have it very clear

2339
01:35:35,520 --> 01:35:38,080
on the list before you move forward with

2340
01:35:38,080 --> 01:35:39,040
a

2341
01:35:39,040 --> 01:35:42,960
a big rehaul

2342
01:35:42,960 --> 01:35:47,040
yeah so i sent a message to the list

2343
01:35:47,040 --> 01:35:50,080
uh the subject line is integrating a

2344
01:35:50,080 --> 01:35:53,520
map as with wallets and ssi uh so that

2345
01:35:53,520 --> 01:35:57,119
started on february 17th

2346
01:35:57,119 --> 01:36:01,840
um the last uh discussion point was

2347
01:36:01,840 --> 01:36:04,960
on february 25th okay so

2348
01:36:04,960 --> 01:36:10,639
that was a long thread yeah so i could

2349
01:36:10,639 --> 01:36:11,360
uh so

2350
01:36:11,360 --> 01:36:13,679
i can send a note to summarize kind of

2351
01:36:13,679 --> 01:36:14,719
this position

2352
01:36:14,719 --> 01:36:16,480
and so what i what i wrote up today was

2353
01:36:16,480 --> 01:36:18,080
influenced by a lot of what people were

2354
01:36:18,080 --> 01:36:19,199
saying there

2355
01:36:19,199 --> 01:36:22,320
and there seemed to be a lot of i i

2356
01:36:22,320 --> 01:36:24,480
noticed a lot of frustration and trying

2357
01:36:24,480 --> 01:36:26,159
to

2358
01:36:26,159 --> 01:36:28,880
get people to talk about the same the

2359
01:36:28,880 --> 01:36:29,600
same things

2360
01:36:29,600 --> 01:36:32,639
using the same words right

2361
01:36:32,639 --> 01:36:36,320
um which is always hard and um

2362
01:36:36,320 --> 01:36:39,679
so in any event um i can

2363
01:36:39,679 --> 01:36:41,920
write up a summary of the position that

2364
01:36:41,920 --> 01:36:42,880
i've

2365
01:36:42,880 --> 01:36:44,960
sort of put today and drop that on the

2366
01:36:44,960 --> 01:36:46,239
list uh if

2367
01:36:46,239 --> 01:36:50,239
if you would like that sounds very good

2368
01:36:50,239 --> 01:36:53,040
all right um i'm assuming fabian should

2369
01:36:53,040 --> 01:36:54,239
probably

2370
01:36:54,239 --> 01:36:56,639
uh do the same he's actually got other

2371
01:36:56,639 --> 01:36:58,159
um

2372
01:36:58,159 --> 01:36:59,440
other write-ups that he's already

2373
01:36:59,440 --> 01:37:02,719
started uh for that

2374
01:37:04,800 --> 01:37:07,679
yes uh of course uh well this the

2375
01:37:07,679 --> 01:37:10,080
subject identifier discussion is uh

2376
01:37:10,080 --> 01:37:12,080
so there's really two parts there's a

2377
01:37:12,080 --> 01:37:13,520
part that's

2378
01:37:13,520 --> 01:37:15,520
quite clear because it's basically the

2379
01:37:15,520 --> 01:37:17,840
git of issues and we just need to take

2380
01:37:17,840 --> 01:37:18,719
that down and

2381
01:37:18,719 --> 01:37:22,480
the resource owner versus subject uh

2382
01:37:22,480 --> 01:37:24,480
well versus end user is is really more

2383
01:37:24,480 --> 01:37:26,000
prospective so it's

2384
01:37:26,000 --> 01:37:27,679
something that i can summarize but it's

2385
01:37:27,679 --> 01:37:29,760
very well it's really open to this

2386
01:37:29,760 --> 01:37:31,040
question it's

2387
01:37:31,040 --> 01:37:33,040
really something that we need to cover

2388
01:37:33,040 --> 01:37:34,800
in the next

2389
01:37:34,800 --> 01:37:49,840
next weeks and months

2390
01:37:52,960 --> 01:37:55,280
okay looks like roman agrees with that

2391
01:37:55,280 --> 01:37:56,080
stuff as well

2392
01:37:56,080 --> 01:37:59,280
so uh fabi and i will uh will

2393
01:37:59,280 --> 01:38:01,600
each do that with these two main topics

2394
01:38:01,600 --> 01:38:02,560
and

2395
01:38:02,560 --> 01:38:06,800
hopefully we will also you know um

2396
01:38:06,800 --> 01:38:09,440
start uh when there's bandwidth we'll

2397
01:38:09,440 --> 01:38:11,040
we'll start the discussions on the

2398
01:38:11,040 --> 01:38:13,280
the key rotation and signing bits as

2399
01:38:13,280 --> 01:38:17,360
well hopefully during this period

2400
01:38:17,360 --> 01:38:18,480
and anything else that comes up

2401
01:38:18,480 --> 01:38:31,839
obviously everything's always on fire

2402
01:38:36,560 --> 01:38:38,320
okay aaron should we get back to our

2403
01:38:38,320 --> 01:38:40,799
agenda

2404
01:38:42,480 --> 01:38:47,440
yeah uh so unless uh

2405
01:38:47,600 --> 01:38:50,320
we could summarize uh talk about next

2406
01:38:50,320 --> 01:38:51,040
steps

2407
01:38:51,040 --> 01:38:53,679
but i don't think there's too much of

2408
01:38:53,679 --> 01:38:54,239
that

2409
01:38:54,239 --> 01:38:57,360
or we could actually use the next uh 20

2410
01:38:57,360 --> 01:38:58,880
minutes

2411
01:38:58,880 --> 01:39:02,800
for for the need to present his slides

2412
01:39:02,800 --> 01:39:05,600
i suggest we start with next steps so

2413
01:39:05,600 --> 01:39:07,520
that we are clear on the main

2414
01:39:07,520 --> 01:39:10,239
topics here

2415
01:39:11,679 --> 01:39:15,679
so uh justin fabian will post to the

2416
01:39:15,679 --> 01:39:16,800
list

2417
01:39:16,800 --> 01:39:20,560
uh the the big issues the proposed

2418
01:39:20,560 --> 01:39:23,199
resolution of the big issues

2419
01:39:23,199 --> 01:39:27,360
that we discussed and

2420
01:39:27,360 --> 01:39:30,480
i think we so we've had two

2421
01:39:30,480 --> 01:39:34,320
interim meetings uh since the last

2422
01:39:34,320 --> 01:39:37,520
full itf if that

2423
01:39:37,520 --> 01:39:40,960
works for the for the group and for the

2424
01:39:40,960 --> 01:39:42,239
editors

2425
01:39:42,239 --> 01:39:44,960
i would suggest that that we keep this

2426
01:39:44,960 --> 01:39:47,600
cadence

2427
01:39:48,960 --> 01:39:52,560
yes no comments

2428
01:39:53,360 --> 01:39:56,320
okay thank you

2429
01:40:01,920 --> 01:40:09,840
anything else as far as next steps sleep

2430
01:40:23,440 --> 01:40:26,719
not seeing any opposition against

2431
01:40:26,719 --> 01:40:29,600
to continuing interims i guess at the

2432
01:40:29,600 --> 01:40:37,840
pace that the uh the editorial

2433
01:40:39,840 --> 01:40:44,159
yes sorry if your mic is

2434
01:40:44,639 --> 01:40:51,840
not great

2435
01:41:04,400 --> 01:41:07,840
all right so we have

2436
01:41:07,840 --> 01:41:11,679
another 19 minutes so

2437
01:41:12,080 --> 01:41:14,480
denis

2438
01:41:15,760 --> 01:41:19,280
i will unless you prefer to i will show

2439
01:41:19,280 --> 01:41:32,320
your slides

2440
01:41:32,320 --> 01:41:47,840
in a second

2441
01:41:55,440 --> 01:41:59,679
yes okay can you hear me

2442
01:41:59,679 --> 01:42:03,440
yes yeah very good so these slides

2443
01:42:03,440 --> 01:42:05,679
are available on the server and they

2444
01:42:05,679 --> 01:42:06,560
were available

2445
01:42:06,560 --> 01:42:09,440
today before they begin so let us start

2446
01:42:09,440 --> 01:42:15,040
by the first real slide

2447
01:42:15,040 --> 01:42:18,239
well i took uh the component of the

2448
01:42:18,239 --> 01:42:18,960
model

2449
01:42:18,960 --> 01:42:22,320
and i discovered something which is not

2450
01:42:22,320 --> 01:42:24,560
very difficult to discover that it was

2451
01:42:24,560 --> 01:42:25,600
three component

2452
01:42:25,600 --> 01:42:29,280
a client and the server and the resource

2453
01:42:29,280 --> 01:42:30,800
server

2454
01:42:30,800 --> 01:42:32,800
what is very important in the client

2455
01:42:32,800 --> 01:42:33,920
definition

2456
01:42:33,920 --> 01:42:37,040
is that it is possible

2457
01:42:37,040 --> 01:42:41,199
that the client of course operated by an

2458
01:42:41,199 --> 01:42:42,239
end user

2459
01:42:42,239 --> 01:42:45,760
consumes resources from one or several

2460
01:42:45,760 --> 01:42:49,520
rss but possibly requiring privileges

2461
01:42:49,520 --> 01:42:52,400
from one or several authorization

2462
01:42:52,400 --> 01:42:53,520
servers

2463
01:42:53,520 --> 01:42:56,639
the plural is very important so in the

2464
01:42:56,639 --> 01:42:57,600
general model

2465
01:42:57,600 --> 01:43:00,719
there is not one authorization server

2466
01:43:00,719 --> 01:43:02,639
but there are several authorization

2467
01:43:02,639 --> 01:43:04,960
server and a single

2468
01:43:04,960 --> 01:43:08,480
resource server can have relationship

2469
01:43:08,480 --> 01:43:11,520
with several authorization server

2470
01:43:11,520 --> 01:43:13,920
or more clearly he has no relationship

2471
01:43:13,920 --> 01:43:14,560
but he can

2472
01:43:14,560 --> 01:43:18,960
trust more than one authorism server

2473
01:43:18,960 --> 01:43:21,119
what is important in the definition of

2474
01:43:21,119 --> 01:43:23,119
authorization server

2475
01:43:23,119 --> 01:43:26,480
is that it grants privileges

2476
01:43:26,480 --> 01:43:28,800
and it's very important to understand

2477
01:43:28,800 --> 01:43:30,560
that a privileges can be

2478
01:43:30,560 --> 01:43:34,320
either an attribute or a right

2479
01:43:34,320 --> 01:43:38,960
and with these two terms there are

2480
01:43:38,960 --> 01:43:42,000
clearly two models behind that when you

2481
01:43:42,000 --> 01:43:42,560
consider

2482
01:43:42,560 --> 01:43:45,679
attributes you are going to have access

2483
01:43:45,679 --> 01:43:47,119
control list

2484
01:43:47,119 --> 01:43:49,280
and when you consider rights you are

2485
01:43:49,280 --> 01:43:50,400
going to have

2486
01:43:50,400 --> 01:43:53,520
what is called usually capacities

2487
01:43:53,520 --> 01:43:55,360
so the model should be able to

2488
01:43:55,360 --> 01:43:57,199
accommodate both

2489
01:43:57,199 --> 01:44:00,639
attributes and capacities

2490
01:44:00,639 --> 01:44:03,360
access controllers and capacities now

2491
01:44:03,360 --> 01:44:04,800
when you look at the definition of the

2492
01:44:04,800 --> 01:44:06,880
resource server

2493
01:44:06,880 --> 01:44:09,119
i have problem with the definition

2494
01:44:09,119 --> 01:44:10,560
because you only speak

2495
01:44:10,560 --> 01:44:13,760
on protected resources and speak about a

2496
01:44:13,760 --> 01:44:15,520
valid access token

2497
01:44:15,520 --> 01:44:17,920
what is valid access token is it a gnab

2498
01:44:17,920 --> 01:44:18,880
token

2499
01:44:18,880 --> 01:44:22,880
or token a cookie's token i don't know

2500
01:44:22,880 --> 01:44:25,760
if i look at the iso definition there is

2501
01:44:25,760 --> 01:44:28,239
no concept of protected resource

2502
01:44:28,239 --> 01:44:30,560
it's simply an access to an object which

2503
01:44:30,560 --> 01:44:31,600
is controlled

2504
01:44:31,600 --> 01:44:34,480
by the resource server so i would

2505
01:44:34,480 --> 01:44:35,199
propose

2506
01:44:35,199 --> 01:44:37,760
a definition that is slightly different

2507
01:44:37,760 --> 01:44:40,400
it's a server that provides operations

2508
01:44:40,400 --> 01:44:43,600
to objects referenced by specific client

2509
01:44:43,600 --> 01:44:45,199
requests

2510
01:44:45,199 --> 01:44:47,920
it means that this resource can be

2511
01:44:47,920 --> 01:44:49,360
protected by

2512
01:44:49,360 --> 01:44:52,560
let us say an authentication mechanism

2513
01:44:52,560 --> 01:44:55,679
by other means of protection and of

2514
01:44:55,679 --> 01:44:56,239
course

2515
01:44:56,239 --> 01:45:00,080
can be protected using gnab tokens

2516
01:45:00,080 --> 01:45:02,800
now what another concept which is not in

2517
01:45:02,800 --> 01:45:03,679
the document

2518
01:45:03,679 --> 01:45:06,400
but i think it is important to add is

2519
01:45:06,400 --> 01:45:07,119
the concept

2520
01:45:07,119 --> 01:45:10,719
of service an api reality

2521
01:45:10,719 --> 01:45:12,719
is an abstraction layer for accessing

2522
01:45:12,719 --> 01:45:14,000
the service

2523
01:45:14,000 --> 01:45:17,280
which must be fulfilled by a set of

2524
01:45:17,280 --> 01:45:20,560
resource servers and it's important that

2525
01:45:20,560 --> 01:45:24,320
a resource servers may publish

2526
01:45:24,320 --> 01:45:27,360
to which kind of service it applies

2527
01:45:27,360 --> 01:45:30,320
so that in the not just token you can

2528
01:45:30,320 --> 01:45:31,119
target

2529
01:45:31,119 --> 01:45:34,320
maybe the token to the first rs but then

2530
01:45:34,320 --> 01:45:36,080
you know that this token can be

2531
01:45:36,080 --> 01:45:36,880
forwarded

2532
01:45:36,880 --> 01:45:40,000
to a service to which this resource

2533
01:45:40,000 --> 01:45:41,920
service

2534
01:45:41,920 --> 01:45:46,320
provides next slide

2535
01:45:50,480 --> 01:45:53,840
now i have problem with the current

2536
01:45:53,840 --> 01:45:54,960
document

2537
01:45:54,960 --> 01:45:57,840
because we have a model but the truss

2538
01:45:57,840 --> 01:45:59,199
relationship are left

2539
01:45:59,199 --> 01:46:03,199
undefined so i look at the oauth model

2540
01:46:03,199 --> 01:46:04,560
first

2541
01:46:04,560 --> 01:46:05,760
and i look about the problem of

2542
01:46:05,760 --> 01:46:08,560
scalability in oauth

2543
01:46:08,560 --> 01:46:11,040
the token format is defined between the

2544
01:46:11,040 --> 01:46:12,000
rs

2545
01:46:12,000 --> 01:46:16,159
and an as using out of one means

2546
01:46:16,159 --> 01:46:19,199
hence you must have a relationship

2547
01:46:19,199 --> 01:46:22,960
between every rs and every as

2548
01:46:22,960 --> 01:46:26,159
this is typically not scalable

2549
01:46:26,159 --> 01:46:28,719
what i would like to be to have in glab

2550
01:46:28,719 --> 01:46:30,639
is something scalable

2551
01:46:30,639 --> 01:46:32,960
the access token format should be

2552
01:46:32,960 --> 01:46:33,840
advertised

2553
01:46:33,840 --> 01:46:36,960
using some protocol by both the rs and

2554
01:46:36,960 --> 01:46:38,320
the as

2555
01:46:38,320 --> 01:46:41,440
example using discovery mechanism so

2556
01:46:41,440 --> 01:46:43,840
that the common format may be discovered

2557
01:46:43,840 --> 01:46:47,840
and or negotiated if you have discovery

2558
01:46:47,840 --> 01:46:50,800
mechanism for the as it can disclose

2559
01:46:50,800 --> 01:46:52,800
which token format it supports

2560
01:46:52,800 --> 01:46:56,239
and the same for the rs now

2561
01:46:56,239 --> 01:46:59,280
in terms of trash relationship

2562
01:46:59,280 --> 01:47:02,639
so it is an important point the rs

2563
01:47:02,639 --> 01:47:06,480
trust a set of authorization servers

2564
01:47:06,480 --> 01:47:09,920
for some set of privileges which may be

2565
01:47:09,920 --> 01:47:12,639
rights and or attributes that are

2566
01:47:12,639 --> 01:47:13,280
contained

2567
01:47:13,280 --> 01:47:16,560
into an access token from one of more

2568
01:47:16,560 --> 01:47:19,520
the trusted authorization servers

2569
01:47:19,520 --> 01:47:22,480
with such relationship don't need to

2570
01:47:22,480 --> 01:47:22,800
have

2571
01:47:22,800 --> 01:47:25,600
a prior relationship between every as

2572
01:47:25,600 --> 01:47:25,920
and

2573
01:47:25,920 --> 01:47:29,199
rs simply the rs needs to

2574
01:47:29,199 --> 01:47:32,719
to tell which is it is trusting

2575
01:47:32,719 --> 01:47:34,639
so this is very important because it

2576
01:47:34,639 --> 01:47:36,560
allows a large scalability

2577
01:47:36,560 --> 01:47:40,480
and it allows also in probability

2578
01:47:40,480 --> 01:47:43,440
however in case an as delivers

2579
01:47:43,440 --> 01:47:44,880
capabilities on some

2580
01:47:44,880 --> 01:47:47,920
object on behalf of a resource owner

2581
01:47:47,920 --> 01:47:50,480
the rs needs to have some apprenticeship

2582
01:47:50,480 --> 01:47:51,840
with the ro

2583
01:47:51,840 --> 01:47:55,119
but not the rs so what i believe

2584
01:47:55,119 --> 01:47:55,840
important

2585
01:47:55,840 --> 01:47:59,199
is to clarify the translation to clarify

2586
01:47:59,199 --> 01:48:01,360
to define the relationship

2587
01:48:01,360 --> 01:48:06,400
in the model the current draft next one

2588
01:48:07,840 --> 01:48:10,880
now i'm going to

2589
01:48:10,880 --> 01:48:14,000
go and look at what is really a resource

2590
01:48:14,000 --> 01:48:17,360
owner and in my presentation i focus

2591
01:48:17,360 --> 01:48:20,400
on the case where the resource owner

2592
01:48:20,400 --> 01:48:24,080
is not the subject

2593
01:48:24,080 --> 01:48:27,199
basically the end user

2594
01:48:27,199 --> 01:48:29,280
i look at the definition of the resource

2595
01:48:29,280 --> 01:48:30,560
owner and

2596
01:48:30,560 --> 01:48:33,040
accept stuff by subject which can

2597
01:48:33,040 --> 01:48:34,000
discuss that

2598
01:48:34,000 --> 01:48:36,880
it is an entity that may grant or deny

2599
01:48:36,880 --> 01:48:37,840
operation

2600
01:48:37,840 --> 01:48:41,760
on resources it has authority upon

2601
01:48:41,760 --> 01:48:45,119
the resource owner may act on the as

2602
01:48:45,119 --> 01:48:48,639
side and it may also act on the rs

2603
01:48:48,639 --> 01:48:52,000
side if you go to the

2604
01:48:52,000 --> 01:48:55,040
framework the access control framework

2605
01:48:55,040 --> 01:48:57,440
that it is an iso document which is very

2606
01:48:57,440 --> 01:48:58,800
old

2607
01:48:58,800 --> 01:49:01,119
and you have an access enforcement

2608
01:49:01,119 --> 01:49:02,159
function

2609
01:49:02,159 --> 01:49:05,280
and an access decision function the

2610
01:49:05,280 --> 01:49:06,000
access

2611
01:49:06,000 --> 01:49:10,000
enforcement function is done by the rs

2612
01:49:10,000 --> 01:49:12,960
but the access decision function can be

2613
01:49:12,960 --> 01:49:14,159
administered by

2614
01:49:14,159 --> 01:49:17,599
one or more resource owners

2615
01:49:17,599 --> 01:49:20,880
the access control rules that are

2616
01:49:20,880 --> 01:49:23,920
used by the rs will be based on

2617
01:49:23,920 --> 01:49:27,360
access control list and or

2618
01:49:27,360 --> 01:49:30,639
would be capability based

2619
01:49:30,639 --> 01:49:33,599
the roman and restoring the rs in that

2620
01:49:33,599 --> 01:49:35,280
case may be a process

2621
01:49:35,280 --> 01:49:38,159
a human being or a device in the iot

2622
01:49:38,159 --> 01:49:40,159
case

2623
01:49:40,159 --> 01:49:43,520
now for each method requested by a

2624
01:49:43,520 --> 01:49:45,360
client on an object

2625
01:49:45,360 --> 01:49:48,159
the rules from the ro indicates which

2626
01:49:48,159 --> 01:49:50,400
method may be granted

2627
01:49:50,400 --> 01:49:52,560
some rules may allow the use of some

2628
01:49:52,560 --> 01:49:53,599
methods

2629
01:49:53,599 --> 01:49:55,360
without the need to prevent an access

2630
01:49:55,360 --> 01:49:58,159
token it may be a public access

2631
01:49:58,159 --> 01:49:59,679
or an access protected by an

2632
01:49:59,679 --> 01:50:01,520
authentication mechanism

2633
01:50:01,520 --> 01:50:03,840
and of course while some other rules may

2634
01:50:03,840 --> 01:50:04,560
require

2635
01:50:04,560 --> 01:50:07,840
one or more access token from one or

2636
01:50:07,840 --> 01:50:08,159
more

2637
01:50:08,159 --> 01:50:12,159
authorization servers in the last case

2638
01:50:12,159 --> 01:50:15,199
there is a combination of authorization

2639
01:50:15,199 --> 01:50:18,239
servers url using o

2640
01:50:18,239 --> 01:50:22,320
and n operators and when these rules are

2641
01:50:22,320 --> 01:50:24,960
based on access control list they

2642
01:50:24,960 --> 01:50:25,760
indicate

2643
01:50:25,760 --> 01:50:28,080
which attribute types and attribute

2644
01:50:28,080 --> 01:50:29,040
values

2645
01:50:29,040 --> 01:50:32,800
issued by that rs must be presented

2646
01:50:32,800 --> 01:50:35,840
to be able to use a method on the object

2647
01:50:35,840 --> 01:50:38,239
and when it is capability the indication

2648
01:50:38,239 --> 01:50:39,280
with method

2649
01:50:39,280 --> 01:50:42,480
issued by that rs must be presented to

2650
01:50:42,480 --> 01:50:42,880
use

2651
01:50:42,880 --> 01:50:48,000
a method to the object next slide

2652
01:50:49,280 --> 01:50:51,679
now let us focus only on the case when

2653
01:50:51,679 --> 01:50:53,920
the access control rules are capability

2654
01:50:53,920 --> 01:50:55,040
based

2655
01:50:55,040 --> 01:50:58,639
in that case crs must cooperate with ro

2656
01:50:58,639 --> 01:51:00,560
able to deliver capabilities on the

2657
01:51:00,560 --> 01:51:02,320
object of the rs

2658
01:51:02,320 --> 01:51:05,760
under his control in that case the arrow

2659
01:51:05,760 --> 01:51:07,280
may be either a process

2660
01:51:07,280 --> 01:51:10,639
or a human being so you see that

2661
01:51:10,639 --> 01:51:13,760
the ro in one case may be process human

2662
01:51:13,760 --> 01:51:14,159
being

2663
01:51:14,159 --> 01:51:16,480
in other case maybe process human being

2664
01:51:16,480 --> 01:51:17,679
or iot

2665
01:51:17,679 --> 01:51:21,440
so it's not exactly the same

2666
01:51:21,440 --> 01:51:23,840
what is very important is when there is

2667
01:51:23,840 --> 01:51:24,800
a ro

2668
01:51:24,800 --> 01:51:27,679
associated with a s that delivers a

2669
01:51:27,679 --> 01:51:29,440
capability on a resource

2670
01:51:29,440 --> 01:51:32,560
under the control of rs that capability

2671
01:51:32,560 --> 01:51:32,800
is

2672
01:51:32,800 --> 01:51:36,159
analyzed and filtered by the access

2673
01:51:36,159 --> 01:51:36,719
decision

2674
01:51:36,719 --> 01:51:40,719
function on the resource server side

2675
01:51:40,719 --> 01:51:44,000
and then it can filter which method

2676
01:51:44,000 --> 01:51:46,000
delivered by a given authorization

2677
01:51:46,000 --> 01:51:48,560
service can be accepted

2678
01:51:48,560 --> 01:51:52,239
it means you have two arrows one on the

2679
01:51:52,239 --> 01:51:54,880
rs side and you may have an optional

2680
01:51:54,880 --> 01:51:55,840
arrow

2681
01:51:55,840 --> 01:52:00,840
on the authorization server side next

2682
01:52:00,840 --> 01:52:02,719
slide

2683
01:52:02,719 --> 01:52:05,199
now there is an illustration and you

2684
01:52:05,199 --> 01:52:07,360
have five steps in this figure

2685
01:52:07,360 --> 01:52:10,639
well this is the the different component

2686
01:52:10,639 --> 01:52:13,920
you have the client different automation

2687
01:52:13,920 --> 01:52:14,800
servers

2688
01:52:14,800 --> 01:52:19,119
and rs so first step is

2689
01:52:19,440 --> 01:52:22,800
the client makes a call to the rs the

2690
01:52:22,800 --> 01:52:26,560
next step c rs respond

2691
01:52:26,560 --> 01:52:30,000
and fine and then the client ask

2692
01:52:30,000 --> 01:52:33,040
an access token to the as

2693
01:52:33,040 --> 01:52:35,519
next step

2694
01:52:36,480 --> 01:52:38,960
if there is a ro involved because

2695
01:52:38,960 --> 01:52:41,520
capability is being used

2696
01:52:41,520 --> 01:52:45,360
then it may issue capabilities um

2697
01:52:45,360 --> 01:52:48,480
for that client for the end user in fact

2698
01:52:48,480 --> 01:52:51,440
and final step

2699
01:52:52,800 --> 01:52:55,760
when the token is forwarded to the rs

2700
01:52:55,760 --> 01:52:58,560
you see now the rs at the acronym

2701
01:52:58,560 --> 01:53:01,760
aef it is the accent enforcement

2702
01:53:01,760 --> 01:53:02,639
function

2703
01:53:02,639 --> 01:53:05,520
and final step

2704
01:53:06,239 --> 01:53:08,480
you see that the ro is an access

2705
01:53:08,480 --> 01:53:10,840
decision function

2706
01:53:10,840 --> 01:53:13,599
and that are all exist

2707
01:53:13,599 --> 01:53:16,159
in both cases whether access control

2708
01:53:16,159 --> 01:53:20,400
lists or capabilities are being used

2709
01:53:20,800 --> 01:53:23,040
and it fits well with the definitions

2710
01:53:23,040 --> 01:53:24,159
that have written

2711
01:53:24,159 --> 01:53:27,440
at the bottom of the slide fits well

2712
01:53:27,440 --> 01:53:29,599
because it's a subject it's an entity i

2713
01:53:29,599 --> 01:53:31,360
will not say subject it's an entity that

2714
01:53:31,360 --> 01:53:33,199
may grant or deny operation

2715
01:53:33,199 --> 01:53:36,719
on resources it has authority upon

2716
01:53:36,719 --> 01:53:40,960
so there are two kinds of basically ro

2717
01:53:40,960 --> 01:53:42,800
now maybe it would be better to use two

2718
01:53:42,800 --> 01:53:44,320
terms but at the moment

2719
01:53:44,320 --> 01:53:47,760
the terminal g fits to the two

2720
01:53:47,760 --> 01:53:54,239
arrow shown on the figure next step

2721
01:53:54,239 --> 01:53:57,599
now you maybe some

2722
01:53:57,599 --> 01:54:00,080
people in the work group know already

2723
01:54:00,080 --> 01:54:03,440
that i am very concerned with privacy

2724
01:54:03,440 --> 01:54:06,480
and i have done some design using

2725
01:54:06,480 --> 01:54:09,040
privacy by design which means that

2726
01:54:09,040 --> 01:54:11,119
you identify the primary appointment

2727
01:54:11,119 --> 01:54:12,400
first once

2728
01:54:12,400 --> 01:54:14,719
you have the model component and once

2729
01:54:14,719 --> 01:54:16,800
you have the trust relationship

2730
01:54:16,800 --> 01:54:18,880
since we have no trust relationship it's

2731
01:54:18,880 --> 01:54:19,840
impossible

2732
01:54:19,840 --> 01:54:23,520
to do a privacy by design at the moment

2733
01:54:23,520 --> 01:54:25,520
and then you must do that before you

2734
01:54:25,520 --> 01:54:27,199
define the protocol

2735
01:54:27,199 --> 01:54:29,599
because then you define protocols in

2736
01:54:29,599 --> 01:54:31,199
order to fulfill

2737
01:54:31,199 --> 01:54:34,800
the trust relationship and the privacy

2738
01:54:34,800 --> 01:54:37,199
requirement you have identified

2739
01:54:37,199 --> 01:54:40,400
section 14 privacy consideration simply

2740
01:54:40,400 --> 01:54:41,040
states

2741
01:54:41,040 --> 01:54:43,119
three lines and and the following

2742
01:54:43,119 --> 01:54:44,080
sentence

2743
01:54:44,080 --> 01:54:46,159
there are a lot of privacy consideration

2744
01:54:46,159 --> 01:54:48,239
to add

2745
01:54:48,239 --> 01:54:50,719
my belief is that section should to be

2746
01:54:50,719 --> 01:54:51,440
filled

2747
01:54:51,440 --> 01:54:54,159
before doing all the design of the

2748
01:54:54,159 --> 01:54:55,280
protocol

2749
01:54:55,280 --> 01:54:58,400
because privacy after design is usually

2750
01:54:58,400 --> 01:55:00,960
unable to address privacy consideration

2751
01:55:00,960 --> 01:55:03,040
which has not been considered before the

2752
01:55:03,040 --> 01:55:05,040
design of the protocol

2753
01:55:05,040 --> 01:55:06,960
and i will focus on two important

2754
01:55:06,960 --> 01:55:08,719
privacy considerations

2755
01:55:08,719 --> 01:55:12,400
user choice and consent and user notice

2756
01:55:12,400 --> 01:55:14,960
next slide

2757
01:55:15,599 --> 01:55:18,000
in the current draft user consent is

2758
01:55:18,000 --> 01:55:19,679
only considered to take place

2759
01:55:19,679 --> 01:55:23,199
at a single authorization service

2760
01:55:23,199 --> 01:55:26,080
however as soon as the rs is trusting

2761
01:55:26,080 --> 01:55:27,440
more than one rs

2762
01:55:27,440 --> 01:55:29,920
the end user must be able to make a

2763
01:55:29,920 --> 01:55:30,960
place

2764
01:55:30,960 --> 01:55:33,440
the choice of one or more automation

2765
01:55:33,440 --> 01:55:34,320
servers

2766
01:55:34,320 --> 01:55:37,440
before contenting any as

2767
01:55:37,440 --> 01:55:40,320
so this must be some choice face before

2768
01:55:40,320 --> 01:55:42,320
a contact to an as

2769
01:55:42,320 --> 01:55:44,639
furthermore the end user must be able to

2770
01:55:44,639 --> 01:55:47,840
be of the reason of the rational

2771
01:55:47,840 --> 01:55:50,560
for for for which reason each privileges

2772
01:55:50,560 --> 01:55:52,719
is requested by the rs

2773
01:55:52,719 --> 01:55:55,760
before requesting an access token

2774
01:55:55,760 --> 01:55:58,000
and this whole step is called user

2775
01:55:58,000 --> 01:55:59,280
notice

2776
01:55:59,280 --> 01:56:01,599
and every end user should be able to

2777
01:56:01,599 --> 01:56:03,199
agree about the rights

2778
01:56:03,199 --> 01:56:05,760
and all the attribute types and value he

2779
01:56:05,760 --> 01:56:07,040
accepts to be placed

2780
01:56:07,040 --> 01:56:10,239
into the nexus token these two steps

2781
01:56:10,239 --> 01:56:12,800
are currently unsupported and missing in

2782
01:56:12,800 --> 01:56:15,440
the draft and they are pretty important

2783
01:56:15,440 --> 01:56:17,040
in order to address privacy

2784
01:56:17,040 --> 01:56:18,480
considerations

2785
01:56:18,480 --> 01:56:21,040
next slide

2786
01:56:22,400 --> 01:56:26,639
now this is uh rather important

2787
01:56:26,639 --> 01:56:29,520
an end end-user identifier which may be

2788
01:56:29,520 --> 01:56:31,280
present in an access token

2789
01:56:31,280 --> 01:56:33,679
may be of four types it may be a

2790
01:56:33,679 --> 01:56:36,000
globally unique identifier

2791
01:56:36,000 --> 01:56:38,400
it may be ratifier locally unique to the

2792
01:56:38,400 --> 01:56:39,520
as

2793
01:56:39,520 --> 01:56:42,000
it may be an addifier unique for a pair

2794
01:56:42,000 --> 01:56:44,239
of as and rs

2795
01:56:44,239 --> 01:56:46,639
or it may be a temporary identifier for

2796
01:56:46,639 --> 01:56:49,679
single access or for a single session

2797
01:56:49,679 --> 01:56:51,679
what is important to explore the

2798
01:56:51,679 --> 01:56:53,280
consequences

2799
01:56:53,280 --> 01:56:56,560
when you look at the privacy property

2800
01:56:56,560 --> 01:56:59,520
and one security property one privacy

2801
01:56:59,520 --> 01:57:00,560
property

2802
01:57:00,560 --> 01:57:03,679
for example that is met if you use fido

2803
01:57:03,679 --> 01:57:07,040
first identity online its resource

2804
01:57:07,040 --> 01:57:07,920
servers

2805
01:57:07,920 --> 01:57:09,760
should not be able to link their user

2806
01:57:09,760 --> 01:57:12,159
accounts by using the content of the

2807
01:57:12,159 --> 01:57:13,520
access token

2808
01:57:13,520 --> 01:57:15,840
they receive from the same rs or from

2809
01:57:15,840 --> 01:57:17,840
different rs

2810
01:57:17,840 --> 01:57:20,080
and once of the property two

2811
01:57:20,080 --> 01:57:21,040
collaborating

2812
01:57:21,040 --> 01:57:22,960
clients should not be able to

2813
01:57:22,960 --> 01:57:24,080
anonymously use

2814
01:57:24,080 --> 01:57:26,480
access token of the other client on the

2815
01:57:26,480 --> 01:57:28,080
same rs

2816
01:57:28,080 --> 01:57:30,000
for example if you could believe that

2817
01:57:30,000 --> 01:57:31,920
you have an access token that say

2818
01:57:31,920 --> 01:57:34,800
i am older than 18 well there should be

2819
01:57:34,800 --> 01:57:35,679
some way

2820
01:57:35,679 --> 01:57:38,080
to be able to detect that something is

2821
01:57:38,080 --> 01:57:38,800
wrong

2822
01:57:38,800 --> 01:57:42,639
if one client sends a token to the other

2823
01:57:42,639 --> 01:57:44,239
it means that the token should contain

2824
01:57:44,239 --> 01:57:47,919
something else next slide

2825
01:57:49,199 --> 01:57:52,719
now i have addressed the implication

2826
01:57:52,719 --> 01:57:56,960
of what are the differences when using

2827
01:57:56,960 --> 01:57:59,920
the four and even five tabs when you're

2828
01:57:59,920 --> 01:58:02,239
no user identifier at all in an access

2829
01:58:02,239 --> 01:58:03,520
token

2830
01:58:03,520 --> 01:58:06,159
if you look at the privacy property if

2831
01:58:06,159 --> 01:58:07,040
you use

2832
01:58:07,040 --> 01:58:10,880
a global unique identifier

2833
01:58:10,880 --> 01:58:14,719
well obviously as soon as two rs

2834
01:58:14,719 --> 01:58:17,119
user receives that they can link the

2835
01:58:17,119 --> 01:58:18,480
account

2836
01:58:18,480 --> 01:58:22,239
it is the same if the is using the same

2837
01:58:22,239 --> 01:58:25,440
identifier for all the rs so you don't

2838
01:58:25,440 --> 01:58:26,960
need this property

2839
01:58:26,960 --> 01:58:28,880
what is more important is to look at the

2840
01:58:28,880 --> 01:58:30,560
search for choice

2841
01:58:30,560 --> 01:58:33,360
a unique end user identifier for every

2842
01:58:33,360 --> 01:58:34,800
as pair

2843
01:58:34,800 --> 01:58:36,639
then you can meet it's of course for the

2844
01:58:36,639 --> 01:58:38,639
two last you can make them too

2845
01:58:38,639 --> 01:58:41,199
now for the security property if you

2846
01:58:41,199 --> 01:58:41,760
include

2847
01:58:41,760 --> 01:58:44,400
a globally unique identifier into an

2848
01:58:44,400 --> 01:58:45,920
access token

2849
01:58:45,920 --> 01:58:48,159
then you may know that this access token

2850
01:58:48,159 --> 01:58:49,520
is for that person

2851
01:58:49,520 --> 01:58:52,639
and not for that other person so if you

2852
01:58:52,639 --> 01:58:54,480
think you have the capabilities that say

2853
01:58:54,480 --> 01:58:57,040
you are over 18 well you are able to

2854
01:58:57,040 --> 01:58:58,080
detect that estimate

2855
01:58:58,080 --> 01:59:00,159
there is something wrong and the

2856
01:59:00,159 --> 01:59:01,440
consequences

2857
01:59:01,440 --> 01:59:04,560
is the following if an access token that

2858
01:59:04,560 --> 01:59:05,599
only contains

2859
01:59:05,599 --> 01:59:08,880
where or no capability is sent client

2860
01:59:08,880 --> 01:59:10,080
corporation attack

2861
01:59:10,080 --> 01:59:13,920
will succeed however in order to defeat

2862
01:59:13,920 --> 01:59:14,400
that

2863
01:59:14,400 --> 01:59:17,040
attack the access token must also

2864
01:59:17,040 --> 01:59:17,840
contain

2865
01:59:17,840 --> 01:59:20,719
attack one two or three and user

2866
01:59:20,719 --> 01:59:23,280
amplifier

2867
01:59:23,280 --> 01:59:26,320
so this is a major implication

2868
01:59:26,320 --> 01:59:29,760
and any uh time check we have one minute

2869
01:59:29,760 --> 01:59:30,000
to

2870
01:59:30,000 --> 01:59:33,599
go so we'd better wrap up

2871
01:59:34,719 --> 01:59:38,880
so the next next slide

2872
01:59:41,440 --> 01:59:44,719
so this is a summary of what you can

2873
01:59:44,719 --> 01:59:47,280
figure out when you use aqua only or

2874
01:59:47,280 --> 01:59:50,400
when you use capabilities only

2875
01:59:50,400 --> 01:59:53,360
and the final one which is which is a

2876
01:59:53,360 --> 01:59:56,080
slide 12.

2877
01:59:56,719 --> 01:59:59,360
i will look at the document subject

2878
01:59:59,360 --> 02:00:02,560
identifier for security event tokens

2879
02:00:02,560 --> 02:00:05,920
which define a sub id claim and

2880
02:00:05,920 --> 02:00:09,040
i sent that slide yesterday to yaron and

2881
02:00:09,040 --> 02:00:10,800
i said that a liaison would need to be

2882
02:00:10,800 --> 02:00:12,800
established what he said you can

2883
02:00:12,800 --> 02:00:16,159
ask directly and i did that and i made a

2884
02:00:16,159 --> 02:00:17,760
proposal today

2885
02:00:17,760 --> 02:00:21,040
to the two editors

2886
02:00:21,040 --> 02:00:23,679
of the working group to be able to

2887
02:00:23,679 --> 02:00:24,800
accommodate

2888
02:00:24,800 --> 02:00:28,080
the five types of notifiers that i've

2889
02:00:28,080 --> 02:00:28,880
explained

2890
02:00:28,880 --> 02:00:33,280
today that's it

2891
02:00:33,440 --> 02:00:36,000
all right all right uh i'm gonna have to

2892
02:00:36,000 --> 02:00:38,480
i'm gonna have to end there

2893
02:00:38,480 --> 02:00:41,440
danny um so i i think you know you

2894
02:00:41,440 --> 02:00:43,119
presented this to the editors and i

2895
02:00:43,119 --> 02:00:44,480
think maybe submit

2896
02:00:44,480 --> 02:00:47,520
the uh summary to the mailing list i'm

2897
02:00:47,520 --> 02:00:48,719
pretty sure we get

2898
02:00:48,719 --> 02:00:51,599
cut off at the top of the hour at least

2899
02:00:51,599 --> 02:00:53,599
very shortly after that so

2900
02:00:53,599 --> 02:00:56,800
um you know i this was um

2901
02:00:56,800 --> 02:00:58,560
very interesting denny and uh we'll

2902
02:00:58,560 --> 02:01:00,159
we'll see you know what the working

2903
02:01:00,159 --> 02:01:02,080
group does with this once it

2904
02:01:02,080 --> 02:01:04,639
hits the mailing list um you're on any

2905
02:01:04,639 --> 02:01:09,840
final words

2906
02:01:16,239 --> 02:01:18,880
nothing from me thank you everyone for

2907
02:01:18,880 --> 02:01:21,360
the presentations and thank you for

2908
02:01:21,360 --> 02:01:23,199
being so involved

2909
02:01:23,199 --> 02:01:27,440
in moving this protocol forward

2910
02:01:29,760 --> 02:01:32,159
and this is it for now see you at the

2911
02:01:32,159 --> 02:01:34,320
next interim

2912
02:01:34,320 --> 02:01:37,520
see you all bye

2913
02:01:37,520 --> 02:01:51,840
bye-bye you bye-bye

