1
00:00:29,599 --> 00:00:31,840
this

2
00:01:06,159 --> 00:01:07,280
all right everyone let's go and get

3
00:01:07,280 --> 00:01:09,520
started greetings

4
00:01:09,520 --> 00:01:11,600
i know it's morning for some afternoon

5
00:01:11,600 --> 00:01:13,920
for others and

6
00:01:13,920 --> 00:01:17,600
grueling late night for a few people

7
00:01:17,600 --> 00:01:19,520
this is the deprived session for ietf

8
00:01:19,520 --> 00:01:22,000
110

9
00:01:22,560 --> 00:01:26,320
your glorious host for the day or myself

10
00:01:26,320 --> 00:01:27,200
brian and

11
00:01:27,200 --> 00:01:30,159
my sidekick tim

12
00:01:30,240 --> 00:01:34,159
so first thing we want to do is do a

13
00:01:34,159 --> 00:01:37,840
quick check on on all the logistics uh

14
00:01:37,840 --> 00:01:40,720
you know eric is our our continuing area

15
00:01:40,720 --> 00:01:42,320
director so he gets to keep an eye on us

16
00:01:42,320 --> 00:01:43,920
for another couple of years

17
00:01:43,920 --> 00:01:47,040
um probably much to his chagrin jabber

18
00:01:47,040 --> 00:01:48,640
room if you're not actually following

19
00:01:48,640 --> 00:01:50,000
along in

20
00:01:50,000 --> 00:01:52,840
uh in meat echo is is deepprive at

21
00:01:52,840 --> 00:01:55,840
ietf.jabra.org

22
00:01:56,159 --> 00:01:57,920
the only thing i would ask for for a

23
00:01:57,920 --> 00:01:59,680
jabber scribe today is is if there are

24
00:01:59,680 --> 00:02:01,520
people who are actually following along

25
00:02:01,520 --> 00:02:04,880
just in jabber with without audio if

26
00:02:04,880 --> 00:02:07,600
if there was somebody willing to to to

27
00:02:07,600 --> 00:02:09,280
channel any mic comments that they want

28
00:02:09,280 --> 00:02:11,360
to make

29
00:02:11,360 --> 00:02:12,640
tim will try and keep an eye on the

30
00:02:12,640 --> 00:02:14,720
jabber room just to double check but if

31
00:02:14,720 --> 00:02:16,480
there are people who are willing to to

32
00:02:16,480 --> 00:02:19,360
do that relay that would appreciate it

33
00:02:19,360 --> 00:02:21,120
and the minutes are going to be kept in

34
00:02:21,120 --> 00:02:22,959
the um in the code emd site

35
00:02:22,959 --> 00:02:25,200
so the link is there tim is going to

36
00:02:25,200 --> 00:02:27,200
keep track of the major action items

37
00:02:27,200 --> 00:02:28,720
uh if people want to follow along in the

38
00:02:28,720 --> 00:02:30,640
minutes and and correct uh whatever

39
00:02:30,640 --> 00:02:32,160
typing errors he has because i'm not

40
00:02:32,160 --> 00:02:33,760
sure if he got his

41
00:02:33,760 --> 00:02:35,360
requisite level of caffeine yet for the

42
00:02:35,360 --> 00:02:37,840
day

43
00:02:40,239 --> 00:02:43,040
before we get too far along uh the the

44
00:02:43,040 --> 00:02:44,879
inglorious notewell

45
00:02:44,879 --> 00:02:46,879
just remember that you know these are

46
00:02:46,879 --> 00:02:48,560
the rules that you agreed to when you

47
00:02:48,560 --> 00:02:50,160
signed up for the meeting and

48
00:02:50,160 --> 00:02:53,360
are participating in the ietf

49
00:02:53,360 --> 00:02:54,800
i will i will state that some of the

50
00:02:54,800 --> 00:02:56,640
bcps at the bottom there are probably

51
00:02:56,640 --> 00:02:58,000
the best material you could read

52
00:02:58,000 --> 00:03:04,000
if you are having problems with insomnia

53
00:03:04,000 --> 00:03:06,720
uh agenda we'll do a quick check to see

54
00:03:06,720 --> 00:03:07,920
if there are any updates that we want to

55
00:03:07,920 --> 00:03:08,319
make

56
00:03:08,319 --> 00:03:11,440
uh before beforehand uh blue sheets uh

57
00:03:11,440 --> 00:03:12,319
will be collected

58
00:03:12,319 --> 00:03:15,519
automatically via meet echo

59
00:03:15,519 --> 00:03:17,920
uh we'll start with some updates of

60
00:03:17,920 --> 00:03:20,159
older current work

61
00:03:20,159 --> 00:03:21,599
move into some of the current working

62
00:03:21,599 --> 00:03:23,360
group business and new working group

63
00:03:23,360 --> 00:03:24,239
business

64
00:03:24,239 --> 00:03:25,840
and you'll notice that we did not keep

65
00:03:25,840 --> 00:03:27,519
them completely separate

66
00:03:27,519 --> 00:03:29,120
because we wanted to intermix a couple

67
00:03:29,120 --> 00:03:32,000
of presentations to keep them adjacent

68
00:03:32,000 --> 00:03:36,080
to one another for for coherency's sake

69
00:03:39,519 --> 00:03:40,879
information on the on the materials that

70
00:03:40,879 --> 00:03:43,440
we're working on are in the data tracker

71
00:03:43,440 --> 00:03:45,120
if you have the materials downloaded you

72
00:03:45,120 --> 00:03:46,560
can simply click on the link and it'll

73
00:03:46,560 --> 00:03:48,319
take you to the magical location for

74
00:03:48,319 --> 00:03:50,319
deprive

75
00:03:50,319 --> 00:03:53,599
the one thing that uh i'll bring

76
00:03:53,599 --> 00:03:56,720
up as a part of keeping track of

77
00:03:56,720 --> 00:03:59,200
of what the working group is doing we

78
00:03:59,200 --> 00:04:00,560
did get

79
00:04:00,560 --> 00:04:05,120
a revision of 76 26 biz

80
00:04:05,120 --> 00:04:07,840
tightened down it was not able to get

81
00:04:07,840 --> 00:04:08,640
submitted

82
00:04:08,640 --> 00:04:10,640
for official publication but we do have

83
00:04:10,640 --> 00:04:12,080
a link sent to

84
00:04:12,080 --> 00:04:14,640
alissa who is the the sole discuss

85
00:04:14,640 --> 00:04:16,160
holder on that so we're we're hoping

86
00:04:16,160 --> 00:04:18,000
she'll be able to review it and

87
00:04:18,000 --> 00:04:19,440
agree that the changes that we made

88
00:04:19,440 --> 00:04:22,479
address her concerns

89
00:04:23,919 --> 00:04:28,639
so within the um uh the next couple of

90
00:04:28,639 --> 00:04:30,160
hours we're going to

91
00:04:30,160 --> 00:04:33,520
talk about dns over quick and um

92
00:04:33,520 --> 00:04:35,680
and we'll talk about oblivious dns over

93
00:04:35,680 --> 00:04:36,639
https

94
00:04:36,639 --> 00:04:39,040
as the kind of the first block of of

95
00:04:39,040 --> 00:04:41,199
time for the meeting

96
00:04:41,199 --> 00:04:44,400
and then the the second uh second hour

97
00:04:44,400 --> 00:04:46,160
of the meeting will will be

98
00:04:46,160 --> 00:04:48,080
more towards discussing the the more

99
00:04:48,080 --> 00:04:49,919
general dns authoritative encryption

100
00:04:49,919 --> 00:04:51,759
discussion so this will include

101
00:04:51,759 --> 00:04:53,680
uh the document that we just recently

102
00:04:53,680 --> 00:04:56,000
adopted that uh paul and peter have been

103
00:04:56,000 --> 00:04:59,440
been uh authoring and then we also have

104
00:04:59,440 --> 00:05:02,560
a new document that that ecker

105
00:05:02,560 --> 00:05:04,080
and a few other people have put together

106
00:05:04,080 --> 00:05:06,000
that they wanted to

107
00:05:06,000 --> 00:05:09,520
compare against the the

108
00:05:09,520 --> 00:05:12,560
pollen and peter's draft so those are

109
00:05:12,560 --> 00:05:14,240
our four discussion topics for the for

110
00:05:14,240 --> 00:05:14,880
the day

111
00:05:14,880 --> 00:05:17,360
uh anybody have any updates changes

112
00:05:17,360 --> 00:05:19,600
modifications they'd like to make

113
00:05:19,600 --> 00:05:20,720
and i think this would be the point

114
00:05:20,720 --> 00:05:23,199
where i'd like to poke scott hollenbeck

115
00:05:23,199 --> 00:05:24,960
if he's online to raise the question

116
00:05:24,960 --> 00:05:26,160
that he had for us

117
00:05:26,160 --> 00:05:39,840
in the in email

118
00:05:42,720 --> 00:05:44,720
scott this is paul hoffman i believe you

119
00:05:44,720 --> 00:05:45,919
can just like

120
00:05:45,919 --> 00:05:52,479
yourself and talk

121
00:05:52,479 --> 00:05:54,479
okay um brian this is scott holland back

122
00:05:54,479 --> 00:05:55,840
sorry i tried to enter the queue in

123
00:05:55,840 --> 00:05:56,400
there but

124
00:05:56,400 --> 00:05:58,000
didn't see anyone get recognized anyway

125
00:05:58,000 --> 00:05:59,520
so just a quick question

126
00:05:59,520 --> 00:06:01,600
if we're going to be talking about the

127
00:06:01,600 --> 00:06:03,280
solution

128
00:06:03,280 --> 00:06:04,560
and that's what i'll call the two that

129
00:06:04,560 --> 00:06:06,720
are up here on the slide could we also

130
00:06:06,720 --> 00:06:08,720
have a quick update on where things are

131
00:06:08,720 --> 00:06:11,759
with the requirements

132
00:06:12,000 --> 00:06:14,960
sure so one of the one of the things

133
00:06:14,960 --> 00:06:15,680
that

134
00:06:15,680 --> 00:06:18,880
that we noted during ietf 109

135
00:06:18,880 --> 00:06:21,039
was um there seemed to be some

136
00:06:21,039 --> 00:06:22,160
discrepancies in

137
00:06:22,160 --> 00:06:24,160
in some of the the statements that were

138
00:06:24,160 --> 00:06:26,800
in the um in the requirements document

139
00:06:26,800 --> 00:06:30,000
and for the most part the authors

140
00:06:30,000 --> 00:06:31,759
you know were trying to incorporate

141
00:06:31,759 --> 00:06:33,840
things that they thought were important

142
00:06:33,840 --> 00:06:34,880
and they weren't getting a whole lot of

143
00:06:34,880 --> 00:06:36,319
feedback from the working group

144
00:06:36,319 --> 00:06:39,600
as best i could tell i would encourage

145
00:06:39,600 --> 00:06:40,560
people who have

146
00:06:40,560 --> 00:06:42,400
topics they would like to make sure get

147
00:06:42,400 --> 00:06:43,840
addressed within the

148
00:06:43,840 --> 00:06:45,520
requirements document bring those up on

149
00:06:45,520 --> 00:06:47,360
the mailing list and we can actually

150
00:06:47,360 --> 00:06:49,520
have that discussion because i know that

151
00:06:49,520 --> 00:06:51,599
there are

152
00:06:51,599 --> 00:06:53,360
there are going to be needs for those

153
00:06:53,360 --> 00:06:54,720
requirements in order for us to do

154
00:06:54,720 --> 00:06:56,400
anything useful with these two documents

155
00:06:56,400 --> 00:06:57,440
that are sitting on the uh

156
00:06:57,440 --> 00:07:01,120
on the agenda list right now so um

157
00:07:01,120 --> 00:07:04,080
i believe um benno as one of the

158
00:07:04,080 --> 00:07:05,759
co-authors of the requirements document

159
00:07:05,759 --> 00:07:07,199
did chime in that he was going to have

160
00:07:07,199 --> 00:07:09,039
time to work on this

161
00:07:09,039 --> 00:07:12,800
um i hope that there are

162
00:07:12,800 --> 00:07:14,160
discussions on the mailing list that

163
00:07:14,160 --> 00:07:16,560
actually help iron out that document

164
00:07:16,560 --> 00:07:18,880
because i like i agree with you scott i

165
00:07:18,880 --> 00:07:20,160
don't i don't think that there's are

166
00:07:20,160 --> 00:07:21,759
ways that we can make a

167
00:07:21,759 --> 00:07:24,479
definitive statement as to which one of

168
00:07:24,479 --> 00:07:26,240
these if either of them

169
00:07:26,240 --> 00:07:27,759
are going to solve the problem that

170
00:07:27,759 --> 00:07:31,840
we're trying to address here

171
00:07:32,160 --> 00:07:33,520
benno did you want to say anything from

172
00:07:33,520 --> 00:07:37,039
the from the co-author side

173
00:07:38,720 --> 00:07:41,500
yeah okay thank you um

174
00:07:41,500 --> 00:07:43,199
[Music]

175
00:07:43,199 --> 00:07:46,000
well yes and no i i i want to chime in

176
00:07:46,000 --> 00:07:46,479
indeed

177
00:07:46,479 --> 00:07:49,919
so i'm i'm more than happy to work with

178
00:07:49,919 --> 00:07:51,360
the working group

179
00:07:51,360 --> 00:07:55,680
on this requirements document um

180
00:07:55,680 --> 00:07:58,240
and indeed incorporates the recent

181
00:07:58,240 --> 00:07:59,199
discussion or the

182
00:07:59,199 --> 00:08:01,919
discussion that itf 109 and on the

183
00:08:01,919 --> 00:08:03,280
mailing list

184
00:08:03,280 --> 00:08:06,479
but also indeed so for

185
00:08:06,479 --> 00:08:09,919
i think um

186
00:08:09,919 --> 00:08:12,240
one step back i also would like to hear

187
00:08:12,240 --> 00:08:14,000
from the working group how useful this

188
00:08:14,000 --> 00:08:15,360
document is indeed

189
00:08:15,360 --> 00:08:18,800
so i'm happy to work and spend time on

190
00:08:18,800 --> 00:08:19,199
this

191
00:08:19,199 --> 00:08:22,560
but also i know scott and some others

192
00:08:22,560 --> 00:08:25,680
really value this document as it gives

193
00:08:25,680 --> 00:08:28,000
direction but also as cuts remarks well

194
00:08:28,000 --> 00:08:28,800
if this

195
00:08:28,800 --> 00:08:31,680
document is not being updated and other

196
00:08:31,680 --> 00:08:33,679
drafts are being developed so what's

197
00:08:33,679 --> 00:08:35,360
what's the use of this draft of the

198
00:08:35,360 --> 00:08:37,599
requirements draft

199
00:08:37,599 --> 00:08:40,000
and if the working group at large agrees

200
00:08:40,000 --> 00:08:40,640
that

201
00:08:40,640 --> 00:08:43,519
this is very useful also in making

202
00:08:43,519 --> 00:08:44,640
progress and

203
00:08:44,640 --> 00:08:46,720
give direction to the to other work

204
00:08:46,720 --> 00:08:48,080
items i'm

205
00:08:48,080 --> 00:08:50,560
really more than happy to work on this

206
00:08:50,560 --> 00:08:51,600
but it's it's

207
00:08:51,600 --> 00:08:54,560
i would like to step one to make one

208
00:08:54,560 --> 00:08:57,839
step back and ask the working group

209
00:08:57,839 --> 00:08:59,839
is this useful document do we want to

210
00:08:59,839 --> 00:09:00,959
have this document i

211
00:09:00,959 --> 00:09:03,279
know that the chairs like this document

212
00:09:03,279 --> 00:09:05,040
i know that some individuals

213
00:09:05,040 --> 00:09:07,279
including myself want i think is a

214
00:09:07,279 --> 00:09:09,839
useful document

215
00:09:10,160 --> 00:09:12,959
but um yeah what's what's the working

216
00:09:12,959 --> 00:09:14,080
group

217
00:09:14,080 --> 00:09:17,440
at large thinking about this document

218
00:09:17,440 --> 00:09:19,279
yeah that's a that's a good point but

219
00:09:19,279 --> 00:09:21,200
we're not expecting the authors to

220
00:09:21,200 --> 00:09:22,880
to to do this lift on their own because

221
00:09:22,880 --> 00:09:24,800
that's that's not going to accomplish

222
00:09:24,800 --> 00:09:25,839
what we need here

223
00:09:25,839 --> 00:09:28,640
yeah so um what i'll do is i'll ask tim

224
00:09:28,640 --> 00:09:30,800
to actually put an action item on

225
00:09:30,800 --> 00:09:33,360
on our list for the chairs to actually

226
00:09:33,360 --> 00:09:36,720
solicit the mailing the mailing list to

227
00:09:36,720 --> 00:09:39,519
raise any points or comments that they

228
00:09:39,519 --> 00:09:41,360
have on the current instantiation

229
00:09:41,360 --> 00:09:42,959
requirements documents so that we can

230
00:09:42,959 --> 00:09:47,040
we can come up with a set of concrete

231
00:09:47,600 --> 00:09:50,160
recommendations for the for the authors

232
00:09:50,160 --> 00:09:50,800
yeah

233
00:09:50,800 --> 00:09:53,120
okay thanks yeah i see a lot of plus one

234
00:09:53,120 --> 00:09:54,080
on the on that

235
00:09:54,080 --> 00:09:57,920
on the jabra so that's good thank you

236
00:09:57,920 --> 00:10:01,440
cool thanks ben and

237
00:10:01,440 --> 00:10:02,880
thanks scott for bringing this up

238
00:10:02,880 --> 00:10:04,399
because you know that is a document that

239
00:10:04,399 --> 00:10:05,680
we need to um

240
00:10:05,680 --> 00:10:08,480
we need to keep um moving in order for

241
00:10:08,480 --> 00:10:09,680
us to understand what it is we're trying

242
00:10:09,680 --> 00:10:11,040
to do yeah

243
00:10:11,040 --> 00:10:13,839
yeah thank you

244
00:10:15,200 --> 00:10:18,640
all right any any other comments or

245
00:10:18,640 --> 00:10:20,399
suggestions changes for the agenda

246
00:10:20,399 --> 00:10:21,680
before we get started

247
00:10:21,680 --> 00:10:23,200
looks like you have paul and peter in

248
00:10:23,200 --> 00:10:25,600
the queue

249
00:10:26,240 --> 00:10:29,360
so paul do you want to start sure

250
00:10:29,360 --> 00:10:32,560
um just two things one is i wanted to

251
00:10:32,560 --> 00:10:36,160
emphasize something um brian you said

252
00:10:36,160 --> 00:10:36,959
that we need

253
00:10:36,959 --> 00:10:39,279
the requirements document to know which

254
00:10:39,279 --> 00:10:40,959
problem we're working on

255
00:10:40,959 --> 00:10:43,279
it's really clear that there are at

256
00:10:43,279 --> 00:10:45,600
least two problems that we're working on

257
00:10:45,600 --> 00:10:47,440
and one of the issues with the current

258
00:10:47,440 --> 00:10:49,519
version of the requirements document is

259
00:10:49,519 --> 00:10:52,320
it's trying to shoehorn things into one

260
00:10:52,320 --> 00:10:54,959
um and but but i think from the mailing

261
00:10:54,959 --> 00:10:55,360
list

262
00:10:55,360 --> 00:10:56,959
very clear some people care about

263
00:10:56,959 --> 00:10:58,560
opportunistic some people care about

264
00:10:58,560 --> 00:11:00,560
fully authenticated so

265
00:11:00,560 --> 00:11:03,600
as long as the requirements document

266
00:11:03,600 --> 00:11:05,920
can cover more than one that would be

267
00:11:05,920 --> 00:11:07,680
great and quite frankly i think it would

268
00:11:07,680 --> 00:11:09,440
be lovely if we had the requirements

269
00:11:09,440 --> 00:11:11,600
document we could then

270
00:11:11,600 --> 00:11:13,680
if if there's one or multiple documents

271
00:11:13,680 --> 00:11:15,279
that are solution documents

272
00:11:15,279 --> 00:11:18,000
they don't have to cover what is the use

273
00:11:18,000 --> 00:11:19,120
case they can point

274
00:11:19,120 --> 00:11:23,519
to the use case document thank you

275
00:11:23,519 --> 00:11:29,839
thanks paul

276
00:11:30,560 --> 00:11:32,640
hi this is peter um as i mentioned to

277
00:11:32,640 --> 00:11:35,360
berno maybe privately a long time ago

278
00:11:35,360 --> 00:11:37,760
to me a requirement document is not

279
00:11:37,760 --> 00:11:39,519
necessarily a full list

280
00:11:39,519 --> 00:11:42,079
of requirements that all have to be met

281
00:11:42,079 --> 00:11:44,560
but it definitely is a list of things to

282
00:11:44,560 --> 00:11:47,839
judge a solution by and this

283
00:11:47,839 --> 00:11:50,639
fits in with what paul said there

284
00:11:50,639 --> 00:11:51,440
there's a lot

285
00:11:51,440 --> 00:11:53,279
in the solution space we probably have

286
00:11:53,279 --> 00:11:56,720
to distinct but somewhat overlapping

287
00:11:56,720 --> 00:11:59,680
problems and solutions going with those

288
00:11:59,680 --> 00:12:01,680
so maybe requirements is too strong a

289
00:12:01,680 --> 00:12:02,880
word

290
00:12:02,880 --> 00:12:05,279
but regardless of what you call it i do

291
00:12:05,279 --> 00:12:06,000
like having

292
00:12:06,000 --> 00:12:09,600
such documents thanks thank you peter

293
00:12:09,600 --> 00:12:12,639
yeah i agree that that

294
00:12:12,800 --> 00:12:14,639
you know it's you know the requirements

295
00:12:14,639 --> 00:12:16,560
documents are kind of the

296
00:12:16,560 --> 00:12:18,079
you know the common terminology for

297
00:12:18,079 --> 00:12:20,079
things like that but um there are other

298
00:12:20,079 --> 00:12:21,440
ways of thinking about what we list in

299
00:12:21,440 --> 00:12:22,560
those documents so

300
00:12:22,560 --> 00:12:24,720
you know i think this is is an important

301
00:12:24,720 --> 00:12:25,920
discussion point for the

302
00:12:25,920 --> 00:12:28,000
for the mailing list and we need to make

303
00:12:28,000 --> 00:12:29,200
sure that that

304
00:12:29,200 --> 00:12:31,120
that we're all in agreement on on what's

305
00:12:31,120 --> 00:12:33,600
going in there

306
00:12:37,680 --> 00:12:40,079
okay if there are no other comments on

307
00:12:40,079 --> 00:12:41,040
that

308
00:12:41,040 --> 00:12:44,079
then i believe sarah is up to talk about

309
00:12:44,079 --> 00:12:46,638
dns

310
00:12:50,839 --> 00:12:53,360
quick

311
00:12:53,360 --> 00:12:57,040
okay just checking your audio again yeah

312
00:13:00,320 --> 00:13:04,959
do that yeah

313
00:13:04,959 --> 00:13:06,240
i suppose you want to go back to slide

314
00:13:06,240 --> 00:13:08,959
one for some reason

315
00:13:08,959 --> 00:13:12,079
yeah okay all right

316
00:13:12,079 --> 00:13:15,200
all your sarah okay thank you so this

317
00:13:15,200 --> 00:13:18,240
is an update on the status of the dns

318
00:13:18,240 --> 00:13:20,720
over quick specification next slide

319
00:13:20,720 --> 00:13:23,040
please

320
00:13:23,200 --> 00:13:25,839
um so a little bit potted history i was

321
00:13:25,839 --> 00:13:26,959
quite surprised when i looked at the

322
00:13:26,959 --> 00:13:28,320
data tracker that it's now

323
00:13:28,320 --> 00:13:30,720
four years since we first proposed uh

324
00:13:30,720 --> 00:13:32,320
dns over quick

325
00:13:32,320 --> 00:13:33,760
at that time the draft actually went

326
00:13:33,760 --> 00:13:35,920
into the quick working group

327
00:13:35,920 --> 00:13:38,560
um there was some interest at that time

328
00:13:38,560 --> 00:13:40,000
a couple of years later there was a bit

329
00:13:40,000 --> 00:13:41,519
of work in the hackathon

330
00:13:41,519 --> 00:13:44,000
and this time last year the draft was

331
00:13:44,000 --> 00:13:46,000
actually moved into deprived and then

332
00:13:46,000 --> 00:13:51,760
adopted in april 2020 next slide please

333
00:13:53,279 --> 00:13:56,399
so more recently there was a

334
00:13:56,399 --> 00:13:58,720
presentation at the last ietf

335
00:13:58,720 --> 00:14:01,680
on the status of the draft and coming

336
00:14:01,680 --> 00:14:02,720
out of that i

337
00:14:02,720 --> 00:14:04,639
think it's fair to say that there was

338
00:14:04,639 --> 00:14:07,199
still some uncertainty on the exact

339
00:14:07,199 --> 00:14:07,839
direction

340
00:14:07,839 --> 00:14:09,440
that the working group wanted to take

341
00:14:09,440 --> 00:14:12,079
this draft in the original version was

342
00:14:12,079 --> 00:14:12,880
specified

343
00:14:12,880 --> 00:14:15,040
only for stub to recursive there were

344
00:14:15,040 --> 00:14:16,800
some questions around is it still needed

345
00:14:16,800 --> 00:14:17,680
given that we have

346
00:14:17,680 --> 00:14:20,000
two protocols standardized for that path

347
00:14:20,000 --> 00:14:22,720
and questions around its performance

348
00:14:22,720 --> 00:14:26,240
we were also asked to consider extending

349
00:14:26,240 --> 00:14:27,199
the draft

350
00:14:27,199 --> 00:14:28,880
um we were asked to think what it would

351
00:14:28,880 --> 00:14:31,279
take to extend it to cover recursive to

352
00:14:31,279 --> 00:14:32,079
authoritative

353
00:14:32,079 --> 00:14:35,279
and in particular xfr and the latest

354
00:14:35,279 --> 00:14:37,040
version of the draft begins to

355
00:14:37,040 --> 00:14:40,320
talk about that a month after that

356
00:14:40,320 --> 00:14:41,279
presentation

357
00:14:41,279 --> 00:14:44,079
ad guard actually launched the first dns

358
00:14:44,079 --> 00:14:45,839
over quick resolver service which has

359
00:14:45,839 --> 00:14:47,040
been running since then and they've

360
00:14:47,040 --> 00:14:47,440
given

361
00:14:47,440 --> 00:14:50,880
some presentations on on that service

362
00:14:50,880 --> 00:14:53,920
um two related

363
00:14:53,920 --> 00:14:57,199
developments last month one is that the

364
00:14:57,199 --> 00:14:59,199
core documents describing the quick

365
00:14:59,199 --> 00:15:00,800
protocol are now in the rsc editor

366
00:15:00,800 --> 00:15:02,079
queues that's going to be published very

367
00:15:02,079 --> 00:15:03,279
soon

368
00:15:03,279 --> 00:15:05,760
and last month the zopdraft also passed

369
00:15:05,760 --> 00:15:07,040
working group last call

370
00:15:07,040 --> 00:15:08,880
so we now have a specification for

371
00:15:08,880 --> 00:15:12,399
encrypted zone transfers on the way

372
00:15:12,399 --> 00:15:15,360
next slide please

373
00:15:18,320 --> 00:15:21,120
so we did a update to the draft last

374
00:15:21,120 --> 00:15:21,680
month

375
00:15:21,680 --> 00:15:24,079
and there were four main changes to the

376
00:15:24,079 --> 00:15:25,760
draft content

377
00:15:25,760 --> 00:15:27,040
the first one was that we had an

378
00:15:27,040 --> 00:15:28,959
implementation section and i've got a

379
00:15:28,959 --> 00:15:30,800
slide on that shortly

380
00:15:30,800 --> 00:15:33,199
the second was that we added an appendix

381
00:15:33,199 --> 00:15:35,279
trying to address the xfl question again

382
00:15:35,279 --> 00:15:37,440
i've got a slide on that

383
00:15:37,440 --> 00:15:39,839
um one other thing that happened after

384
00:15:39,839 --> 00:15:41,920
some discussions with paul hoffman was

385
00:15:41,920 --> 00:15:44,240
that um the very early versions of the

386
00:15:44,240 --> 00:15:46,000
draft had suggested using

387
00:15:46,000 --> 00:15:47,920
port 784 for experimental

388
00:15:47,920 --> 00:15:49,360
implementations

389
00:15:49,360 --> 00:15:52,480
but we now think it makes more sense to

390
00:15:52,480 --> 00:15:55,880
go ahead with a port request for port

391
00:15:55,880 --> 00:16:00,480
8853 which is available so it would be

392
00:16:00,480 --> 00:16:03,040
good to get some feedback on what the

393
00:16:03,040 --> 00:16:04,000
group thinks about that

394
00:16:04,000 --> 00:16:07,120
i think that possibly given some of the

395
00:16:07,120 --> 00:16:08,000
discussions it

396
00:16:08,000 --> 00:16:09,759
might be a little bit early to move

397
00:16:09,759 --> 00:16:11,199
ahead with that but it's

398
00:16:11,199 --> 00:16:14,399
it's a proposal for the future um and

399
00:16:14,399 --> 00:16:16,240
there are some minor updates related to

400
00:16:16,240 --> 00:16:18,160
transport parameters based on some

401
00:16:18,160 --> 00:16:23,759
interop work next slide please

402
00:16:23,759 --> 00:16:26,800
okay so this is a quick summary

403
00:16:26,800 --> 00:16:29,680
of the current implementation status

404
00:16:29,680 --> 00:16:31,680
we've got several implementations

405
00:16:31,680 --> 00:16:34,000
um the first four of these here came

406
00:16:34,000 --> 00:16:36,320
from the ad guard folks who have

407
00:16:36,320 --> 00:16:38,160
wonderfully open sourced all their

408
00:16:38,160 --> 00:16:40,240
implementations that they're using

409
00:16:40,240 --> 00:16:43,600
for their stub to recursive service

410
00:16:43,600 --> 00:16:45,600
so summer and go they've got some c plus

411
00:16:45,600 --> 00:16:47,040
plus libraries

412
00:16:47,040 --> 00:16:48,839
there's a couple of basic

413
00:16:48,839 --> 00:16:50,160
implementations

414
00:16:50,160 --> 00:16:52,480
and there's also an experimental

415
00:16:52,480 --> 00:16:54,480
implementation of flame thrower so we do

416
00:16:54,480 --> 00:16:56,480
have a few code bases that we can play

417
00:16:56,480 --> 00:16:57,839
with

418
00:16:57,839 --> 00:17:00,639
next slide please

419
00:17:03,440 --> 00:17:06,240
what we don't have yet to my knowledge

420
00:17:06,240 --> 00:17:06,959
is

421
00:17:06,959 --> 00:17:10,400
any um rigorous performance measurements

422
00:17:10,400 --> 00:17:10,720
of

423
00:17:10,720 --> 00:17:12,640
quick compared to other encrypted

424
00:17:12,640 --> 00:17:14,480
protocols

425
00:17:14,480 --> 00:17:17,280
one thing i will say is that the

426
00:17:17,280 --> 00:17:19,119
presentations that the ad guard folks

427
00:17:19,119 --> 00:17:20,240
have done

428
00:17:20,240 --> 00:17:22,799
um they've said that they're finding it

429
00:17:22,799 --> 00:17:23,839
performing

430
00:17:23,839 --> 00:17:26,000
just as well as other encrypted

431
00:17:26,000 --> 00:17:27,599
protocols they they support the full

432
00:17:27,599 --> 00:17:28,400
range

433
00:17:28,400 --> 00:17:30,720
and in fact they argue that they think

434
00:17:30,720 --> 00:17:32,160
it's coping better in mobile

435
00:17:32,160 --> 00:17:33,760
environments which they have a large

436
00:17:33,760 --> 00:17:35,280
user base in

437
00:17:35,280 --> 00:17:36,400
and that's all the reasons that you

438
00:17:36,400 --> 00:17:37,840
would expect with quick because of the

439
00:17:37,840 --> 00:17:38,799
characteristics

440
00:17:38,799 --> 00:17:44,320
of the protocol next slide please

441
00:17:44,840 --> 00:17:48,320
um so to move on to the question of what

442
00:17:48,320 --> 00:17:50,000
we would need to do to support recursive

443
00:17:50,000 --> 00:17:51,679
to authoritative

444
00:17:51,679 --> 00:17:55,840
um we think that in terms of discovery

445
00:17:55,840 --> 00:17:59,760
doc and dot are analogous in the sense

446
00:17:59,760 --> 00:18:00,000
that

447
00:18:00,000 --> 00:18:01,919
both can have dedicated ports and they

448
00:18:01,919 --> 00:18:03,919
both use the same authentication model

449
00:18:03,919 --> 00:18:05,360
so it's not a lot of

450
00:18:05,360 --> 00:18:10,000
difference there next slide please

451
00:18:11,039 --> 00:18:13,200
the picture gets more interesting when

452
00:18:13,200 --> 00:18:14,080
you

453
00:18:14,080 --> 00:18:15,679
look at what the current mapping is and

454
00:18:15,679 --> 00:18:17,360
then you think about trying to support

455
00:18:17,360 --> 00:18:21,039
xfr um the current mapping that's

456
00:18:21,039 --> 00:18:21,760
proposed

457
00:18:21,760 --> 00:18:24,400
is incredibly simple it's it's very

458
00:18:24,400 --> 00:18:24,960
clean

459
00:18:24,960 --> 00:18:27,440
and all it does is map a single dns

460
00:18:27,440 --> 00:18:28,480
query response

461
00:18:28,480 --> 00:18:31,919
pair to a single quick string so each

462
00:18:31,919 --> 00:18:33,200
end immediately

463
00:18:33,200 --> 00:18:35,600
closes the stream after sending a single

464
00:18:35,600 --> 00:18:36,480
message

465
00:18:36,480 --> 00:18:39,360
and that means the content of the stream

466
00:18:39,360 --> 00:18:40,400
is is udp

467
00:18:40,400 --> 00:18:44,160
like a minor difference is that in quick

468
00:18:44,160 --> 00:18:46,080
the query id is zero because we can use

469
00:18:46,080 --> 00:18:47,200
the stream id to

470
00:18:47,200 --> 00:18:49,760
identify the message instead but we have

471
00:18:49,760 --> 00:18:50,559
no

472
00:18:50,559 --> 00:18:52,880
two byte length field in the current

473
00:18:52,880 --> 00:18:54,080
mapping

474
00:18:54,080 --> 00:18:56,320
but of course xfiles can have multiple

475
00:18:56,320 --> 00:18:57,120
responses

476
00:18:57,120 --> 00:18:59,360
so this would need to be modified to

477
00:18:59,360 --> 00:19:00,720
support xfr

478
00:19:00,720 --> 00:19:03,679
next slide please

479
00:19:04,640 --> 00:19:07,679
so the o2 version of the draft has an

480
00:19:07,679 --> 00:19:08,960
appendix

481
00:19:08,960 --> 00:19:12,880
where we have a initial proposal for one

482
00:19:12,880 --> 00:19:14,480
way we could update the mapping to

483
00:19:14,480 --> 00:19:16,720
support it

484
00:19:16,720 --> 00:19:19,039
and there are two changes that proposed

485
00:19:19,039 --> 00:19:20,480
for this solution

486
00:19:20,480 --> 00:19:24,480
one is to prepend all the dns messages

487
00:19:24,480 --> 00:19:25,520
with a

488
00:19:25,520 --> 00:19:28,720
two-byte field length and second is that

489
00:19:28,720 --> 00:19:29,679
we

490
00:19:29,679 --> 00:19:31,520
relax the mapping so that we allow

491
00:19:31,520 --> 00:19:33,760
multiple responses on a single stream

492
00:19:33,760 --> 00:19:36,880
so that xfr can work so in practice this

493
00:19:36,880 --> 00:19:37,679
means

494
00:19:37,679 --> 00:19:40,799
making the stream content in doc

495
00:19:40,799 --> 00:19:44,720
more like a tcp connection

496
00:19:44,720 --> 00:19:46,640
now the pros obviously this will allow

497
00:19:46,640 --> 00:19:48,720
us to support xfr

498
00:19:48,720 --> 00:19:52,000
and also because doc has an alpn

499
00:19:52,000 --> 00:19:54,640
and all existing experimental

500
00:19:54,640 --> 00:19:56,400
implementations should be using that

501
00:19:56,400 --> 00:19:57,600
alpn

502
00:19:57,600 --> 00:20:00,000
augmented with a draft version we can

503
00:20:00,000 --> 00:20:03,039
cope with a change in the mapping

504
00:20:03,039 --> 00:20:05,600
the cons are that it complicates the

505
00:20:05,600 --> 00:20:06,640
mapping from that

506
00:20:06,640 --> 00:20:09,039
very simple clean one uh there's a small

507
00:20:09,039 --> 00:20:10,320
overhead introduced

508
00:20:10,320 --> 00:20:12,080
and we have a few new error conditions

509
00:20:12,080 --> 00:20:13,440
that we need to handle

510
00:20:13,440 --> 00:20:16,480
particularly at the client end but other

511
00:20:16,480 --> 00:20:18,480
otherwise it's a relatively

512
00:20:18,480 --> 00:20:20,000
straightforward revision if we go

513
00:20:20,000 --> 00:20:24,559
down this road next slide please

514
00:20:24,640 --> 00:20:26,480
now of course this isn't the only way to

515
00:20:26,480 --> 00:20:29,120
do it there are some other possibilities

516
00:20:29,120 --> 00:20:32,400
ranging in complexity

517
00:20:32,400 --> 00:20:34,640
and if the working group decides it does

518
00:20:34,640 --> 00:20:36,400
want xr support obviously we can

519
00:20:36,400 --> 00:20:37,280
enumerate them

520
00:20:37,280 --> 00:20:40,240
um and evaluate each and decide where we

521
00:20:40,240 --> 00:20:41,440
want to go

522
00:20:41,440 --> 00:20:43,679
um so that's this is something that

523
00:20:43,679 --> 00:20:44,960
we're going to need input

524
00:20:44,960 --> 00:20:47,360
in from input on on the work from the

525
00:20:47,360 --> 00:20:49,440
working group

526
00:20:49,440 --> 00:20:52,320
next slide please

527
00:20:52,960 --> 00:20:55,520
so at this point i think there are three

528
00:20:55,520 --> 00:20:56,480
main questions

529
00:20:56,480 --> 00:20:59,919
to put to the working group

530
00:20:59,919 --> 00:21:03,440
one is that we now have implementation

531
00:21:03,440 --> 00:21:05,200
and operational progress with this

532
00:21:05,200 --> 00:21:06,799
specification at least in the stub to

533
00:21:06,799 --> 00:21:08,400
recursive space

534
00:21:08,400 --> 00:21:12,240
so are there any reservations about

535
00:21:12,240 --> 00:21:13,280
moving forward

536
00:21:13,280 --> 00:21:16,159
with the specification people still

537
00:21:16,159 --> 00:21:18,240
think more performance data is needed

538
00:21:18,240 --> 00:21:19,679
or shall we move forward with the

539
00:21:19,679 --> 00:21:21,600
specification in the hope that that

540
00:21:21,600 --> 00:21:25,679
and enables more experimentation

541
00:21:25,679 --> 00:21:28,559
the second is probably a bigger question

542
00:21:28,559 --> 00:21:30,400
about the exact scope of this

543
00:21:30,400 --> 00:21:33,200
should we do stuff to recursive

544
00:21:33,200 --> 00:21:36,400
recursive to authoritative or both

545
00:21:36,400 --> 00:21:39,360
and if we do both how if should we

546
00:21:39,360 --> 00:21:39,840
handle

547
00:21:39,840 --> 00:21:43,039
xfr support so that's where we are at

548
00:21:43,039 --> 00:21:43,679
the moment

549
00:21:43,679 --> 00:21:45,679
so i would appeal for people to have a

550
00:21:45,679 --> 00:21:47,520
look at the draft and

551
00:21:47,520 --> 00:21:49,440
review it uh and hopefully i can get

552
00:21:49,440 --> 00:21:51,520
some input from the group today as well

553
00:21:51,520 --> 00:21:52,159
on

554
00:21:52,159 --> 00:21:55,360
current thinking uh that's everything uh

555
00:21:55,360 --> 00:21:56,000
if we could

556
00:21:56,000 --> 00:21:59,840
open up to questions that'd be great

557
00:22:03,440 --> 00:22:06,880
thanks sarah john

558
00:22:06,880 --> 00:22:09,600
hello sarah thank you i read the

559
00:22:09,600 --> 00:22:11,200
document it looks really nice

560
00:22:11,200 --> 00:22:13,280
and i would like to comment on whether

561
00:22:13,280 --> 00:22:16,880
on the xfrp's or xmrp's in particular

562
00:22:16,880 --> 00:22:19,520
uh i think i think it'd be really really

563
00:22:19,520 --> 00:22:19,919
nice

564
00:22:19,919 --> 00:22:23,200
if uh this draft covered like everything

565
00:22:23,200 --> 00:22:24,799
that we need to encode in the protocol

566
00:22:24,799 --> 00:22:25,440
now

567
00:22:25,440 --> 00:22:28,320
i don't know if we should like cover

568
00:22:28,320 --> 00:22:29,840
like especially use cases between

569
00:22:29,840 --> 00:22:31,200
different types of servers like stop

570
00:22:31,200 --> 00:22:33,200
records if accuracy alterative

571
00:22:33,200 --> 00:22:34,559
but i think it would be nice if the

572
00:22:34,559 --> 00:22:36,559
protocol itself could encode anything we

573
00:22:36,559 --> 00:22:37,760
need now and i think

574
00:22:37,760 --> 00:22:40,680
xfr is one of the things that we need

575
00:22:40,680 --> 00:22:42,880
[Music]

576
00:22:42,880 --> 00:22:44,799
you mentioned that the problem is with

577
00:22:44,799 --> 00:22:46,799
the multiple messages

578
00:22:46,799 --> 00:22:48,480
that my discipline might return for

579
00:22:48,480 --> 00:22:50,000
transfers um

580
00:22:50,000 --> 00:22:51,360
i'm actually wondering if this is a

581
00:22:51,360 --> 00:22:53,440
problem or i'm actually wondering

582
00:22:53,440 --> 00:22:54,320
whether

583
00:22:54,320 --> 00:22:57,520
uh if the server used uh dns or quake

584
00:22:57,520 --> 00:23:00,400
um for transfer uh whether it actually

585
00:23:00,400 --> 00:23:01,600
needs to send the

586
00:23:01,600 --> 00:23:03,919
multiple answers because the limitations

587
00:23:03,919 --> 00:23:04,880
come from uh

588
00:23:04,880 --> 00:23:08,000
from dcb because we said that on tcp we

589
00:23:08,000 --> 00:23:10,080
need some framing so we added this

590
00:23:10,080 --> 00:23:12,000
to by prefix so we are limited to a

591
00:23:12,000 --> 00:23:13,120
message that has

592
00:23:13,120 --> 00:23:16,400
65k but for quake we have a

593
00:23:16,400 --> 00:23:18,400
different signaling we can use the

594
00:23:18,400 --> 00:23:19,679
stream fan

595
00:23:19,679 --> 00:23:22,640
uh so we can essentially send much

596
00:23:22,640 --> 00:23:23,440
larger

597
00:23:23,440 --> 00:23:26,880
response uh for xfr so maybe

598
00:23:26,880 --> 00:23:29,039
we could make it work with like this

599
00:23:29,039 --> 00:23:30,480
simple approach where you have one one

600
00:23:30,480 --> 00:23:32,159
stream that is used for single

601
00:23:32,159 --> 00:23:35,120
query and single response um on the

602
00:23:35,120 --> 00:23:36,640
other hand i've been thinking about

603
00:23:36,640 --> 00:23:40,159
uh use cases like proxies because

604
00:23:40,159 --> 00:23:42,000
uh if we change this then then the

605
00:23:42,000 --> 00:23:43,679
proxies wouldn't work uh we would have

606
00:23:43,679 --> 00:23:44,400
to

607
00:23:44,400 --> 00:23:47,360
yeah so i'm just just asking whether you

608
00:23:47,360 --> 00:23:49,760
have considered this alternative or

609
00:23:49,760 --> 00:23:51,760
because yeah i don't i don't like the

610
00:23:51,760 --> 00:23:53,120
65k limit

611
00:23:53,120 --> 00:23:54,960
and the question is whether we should

612
00:23:54,960 --> 00:23:58,080
like keep it here in in quick as well

613
00:23:58,080 --> 00:24:00,080
uh yeah so it's a really good point so

614
00:24:00,080 --> 00:24:01,120
in the very

615
00:24:01,120 --> 00:24:03,760
early versions of the draft we uh

616
00:24:03,760 --> 00:24:05,360
included that limit but it was pointed

617
00:24:05,360 --> 00:24:06,559
out to us that

618
00:24:06,559 --> 00:24:08,080
the same thing happened with dough which

619
00:24:08,080 --> 00:24:09,440
was that in principle it could have

620
00:24:09,440 --> 00:24:10,640
supported much longer

621
00:24:10,640 --> 00:24:13,360
larger packet sizes but that again was

622
00:24:13,360 --> 00:24:15,919
limited to the 65k limit for exactly the

623
00:24:15,919 --> 00:24:17,760
reason you mentioned which is proxying

624
00:24:17,760 --> 00:24:19,440
and compatibility

625
00:24:19,440 --> 00:24:22,799
uh with with other transports so

626
00:24:22,799 --> 00:24:25,279
we updated i think it was the o1 version

627
00:24:25,279 --> 00:24:26,799
included a limit on

628
00:24:26,799 --> 00:24:29,520
packet size um i mean of course we can

629
00:24:29,520 --> 00:24:30,480
revisit this

630
00:24:30,480 --> 00:24:34,320
but in in some senses i think we'd be re

631
00:24:34,320 --> 00:24:35,840
hashing the argument that happened in

632
00:24:35,840 --> 00:24:38,159
dough and i expect we would come back to

633
00:24:38,159 --> 00:24:39,679
the same conclusion that

634
00:24:39,679 --> 00:24:42,159
it solves a lot of problems to keep that

635
00:24:42,159 --> 00:24:43,760
limit

636
00:24:43,760 --> 00:24:46,240
okay okay thank you yeah in that case i

637
00:24:46,240 --> 00:24:47,200
just suggest

638
00:24:47,200 --> 00:24:50,000
using this uh like proposed to buy

639
00:24:50,000 --> 00:24:51,039
prefix

640
00:24:51,039 --> 00:24:52,880
and i suggest to do it now so that we

641
00:24:52,880 --> 00:24:55,039
don't have to

642
00:24:55,039 --> 00:24:56,799
handle the incompatibilities with all

643
00:24:56,799 --> 00:24:59,120
clients thank you uh good work

644
00:24:59,120 --> 00:25:00,960
yeah and i agree sorry i didn't mention

645
00:25:00,960 --> 00:25:02,640
it in the talk but proxy and compa you

646
00:25:02,640 --> 00:25:04,000
know compatibility with other protocols

647
00:25:04,000 --> 00:25:06,000
is another good reason why

648
00:25:06,000 --> 00:25:08,159
the current proposal we have would be

649
00:25:08,159 --> 00:25:11,279
quite a natural solution

650
00:25:11,600 --> 00:25:15,840
thanks john uh ben schwartz

651
00:25:16,000 --> 00:25:19,440
hi ben schwartz uh i

652
00:25:19,440 --> 00:25:22,559
i wanted to uh put in a

653
00:25:22,559 --> 00:25:25,760
in a a vote for port 853

654
00:25:25,760 --> 00:25:28,960
udp you know i

655
00:25:28,960 --> 00:25:32,000
we the the dns over dtls draft

656
00:25:32,000 --> 00:25:36,480
is experimental it is

657
00:25:36,480 --> 00:25:40,480
minimally deployed uh and quicken dtls

658
00:25:40,480 --> 00:25:42,320
are as i understand it fully

659
00:25:42,320 --> 00:25:45,600
demuxable there quick was designed

660
00:25:45,600 --> 00:25:48,640
to be able to share a port with dtls

661
00:25:48,640 --> 00:25:52,480
so i think that

662
00:25:52,480 --> 00:25:55,760
we should we should aim to have the

663
00:25:55,760 --> 00:25:56,960
final

664
00:25:56,960 --> 00:25:58,559
port number when we have a standardized

665
00:25:58,559 --> 00:26:02,158
protocol b853

666
00:26:02,320 --> 00:26:04,960
so that was a conversation that was had

667
00:26:04,960 --> 00:26:06,720
off list

668
00:26:06,720 --> 00:26:09,360
and others can probably speak to the

669
00:26:09,360 --> 00:26:10,960
details of the port allocation

670
00:26:10,960 --> 00:26:13,919
process better than i can but part of

671
00:26:13,919 --> 00:26:15,919
the concern was that that would make it

672
00:26:15,919 --> 00:26:17,039
a longer process

673
00:26:17,039 --> 00:26:18,640
if we had to go through that set of

674
00:26:18,640 --> 00:26:21,279
arguments as opposed to

675
00:26:21,279 --> 00:26:23,360
just requesting a dedicated port for

676
00:26:23,360 --> 00:26:24,400
quick

677
00:26:24,400 --> 00:26:27,600
and that ultimately it didn't

678
00:26:27,600 --> 00:26:31,039
make um a huge amount of deployment

679
00:26:31,039 --> 00:26:34,480
difference that if port 853 was blocked

680
00:26:34,480 --> 00:26:37,120
port 8853 might well be blocked but

681
00:26:37,120 --> 00:26:39,360
um it i mean it's something we've

682
00:26:39,360 --> 00:26:40,480
considered so

683
00:26:40,480 --> 00:26:42,159
yep i would be interested to hear what

684
00:26:42,159 --> 00:26:43,440
other people think about that as a

685
00:26:43,440 --> 00:26:46,000
proposal

686
00:26:48,880 --> 00:26:50,240
so sarah i think that's probably a good

687
00:26:50,240 --> 00:26:51,840
discussion point for the mailing list

688
00:26:51,840 --> 00:26:52,400
because

689
00:26:52,400 --> 00:26:53,919
my guess is is that we're going to get

690
00:26:53,919 --> 00:26:55,600
all sorts of different views and

691
00:26:55,600 --> 00:26:56,720
opinions on that

692
00:26:56,720 --> 00:26:58,799
so we'll make a note to discuss that on

693
00:26:58,799 --> 00:26:59,840
the mailing list

694
00:26:59,840 --> 00:27:02,240
thank you

695
00:27:04,080 --> 00:27:07,520
jim reed thanks

696
00:27:07,520 --> 00:27:09,600
sarah i'm a little bit uncomfortable

697
00:27:09,600 --> 00:27:11,440
this idea about the idea of a

698
00:27:11,440 --> 00:27:13,520
pre-painting a bite counts in the

699
00:27:13,520 --> 00:27:15,279
packets that smells a little bit too

700
00:27:15,279 --> 00:27:17,760
much of a layering violation to me

701
00:27:17,760 --> 00:27:20,799
and i'm wondering maybe the best thing

702
00:27:20,799 --> 00:27:23,440
to do here is to

703
00:27:23,440 --> 00:27:25,200
to advance the document more quickly is

704
00:27:25,200 --> 00:27:27,279
just to draw a ring around the ex of our

705
00:27:27,279 --> 00:27:28,799
staff and say

706
00:27:28,799 --> 00:27:30,399
this is still to be worked on and we'll

707
00:27:30,399 --> 00:27:31,919
deal with that later

708
00:27:31,919 --> 00:27:33,760
and just get on with the cool job of

709
00:27:33,760 --> 00:27:35,360
getting a basic

710
00:27:35,360 --> 00:27:38,080
protocol spec which deals with the most

711
00:27:38,080 --> 00:27:40,240
common query response type stuff

712
00:27:40,240 --> 00:27:42,720
and just simply pack the extra first off

713
00:27:42,720 --> 00:27:46,000
for further discussion later

714
00:27:46,559 --> 00:27:49,600
okay so thanks jim um i mean it

715
00:27:49,600 --> 00:27:52,799
it does mean that if you do have

716
00:27:52,799 --> 00:27:55,039
proxies uh translating from other

717
00:27:55,039 --> 00:27:56,559
protocols you do have to then have a

718
00:27:56,559 --> 00:27:58,640
special case for xfr

719
00:27:58,640 --> 00:28:01,360
um which just if we are talking about

720
00:28:01,360 --> 00:28:03,120
applying this to recursive authority it

721
00:28:03,120 --> 00:28:04,399
feels like a bit of a

722
00:28:04,399 --> 00:28:07,840
a walt um yeah i appreciate the idea

723
00:28:07,840 --> 00:28:08,320
that

724
00:28:08,320 --> 00:28:11,360
uh simpler is is better um

725
00:28:11,360 --> 00:28:13,440
but then if we had to modify the

726
00:28:13,440 --> 00:28:14,480
protocol

727
00:28:14,480 --> 00:28:16,240
later to be able to handle something

728
00:28:16,240 --> 00:28:18,799
different we'd probably have to define

729
00:28:18,799 --> 00:28:20,559
it as a different protocol with a

730
00:28:20,559 --> 00:28:22,799
different alpn

731
00:28:22,799 --> 00:28:24,559
so that was why we wanted to fully

732
00:28:24,559 --> 00:28:26,159
assess uh

733
00:28:26,159 --> 00:28:29,279
if we could support it within the

734
00:28:29,279 --> 00:28:30,159
current one

735
00:28:30,159 --> 00:28:33,279
um and and in fact it's just a sense of

736
00:28:33,279 --> 00:28:36,480
that the two by length is just uh

737
00:28:36,480 --> 00:28:38,240
framing the answers within the stream

738
00:28:38,240 --> 00:28:39,679
content which is an honor

739
00:28:39,679 --> 00:28:44,399
by stream so um it's

740
00:28:44,399 --> 00:28:47,360
really just providing additional

741
00:28:47,360 --> 00:28:49,520
compatibility with the existing protocol

742
00:28:49,520 --> 00:28:51,760
um but yeah these are the discussions

743
00:28:51,760 --> 00:28:53,760
that we we need to have about

744
00:28:53,760 --> 00:28:55,520
which direction to take so thank you for

745
00:28:55,520 --> 00:28:59,840
that okay thanks sir

746
00:29:00,880 --> 00:29:05,679
uh watson some lad from cloudflare

747
00:29:05,679 --> 00:29:08,640
uh so my one question i read the draft

748
00:29:08,640 --> 00:29:11,120
and i couldn't really figure out

749
00:29:11,120 --> 00:29:13,440
why this is preferable or what is

750
00:29:13,440 --> 00:29:15,679
advantages and disadvantages are

751
00:29:15,679 --> 00:29:18,799
to doing dns over http

752
00:29:18,799 --> 00:29:21,039
3 it might be useful to have a short

753
00:29:21,039 --> 00:29:22,559
section in the draft

754
00:29:22,559 --> 00:29:26,320
explaining that right yes so

755
00:29:26,320 --> 00:29:27,760
um i think there was a little bit of

756
00:29:27,760 --> 00:29:29,840
discussion about this in the

757
00:29:29,840 --> 00:29:32,799
presentation at the last itf and the

758
00:29:32,799 --> 00:29:33,520
argument is

759
00:29:33,520 --> 00:29:35,520
that particularly for one of the

760
00:29:35,520 --> 00:29:37,279
arguments is particularly for recursive

761
00:29:37,279 --> 00:29:39,039
to authoritative you're then packaging

762
00:29:39,039 --> 00:29:40,640
the whole http

763
00:29:40,640 --> 00:29:43,840
layer around your dns queries when i

764
00:29:43,840 --> 00:29:46,720
i think what we heard at that meeting is

765
00:29:46,720 --> 00:29:47,520
that most

766
00:29:47,520 --> 00:29:49,919
recursive and authoritative implementers

767
00:29:49,919 --> 00:29:52,159
see that as an unnecessary overhead

768
00:29:52,159 --> 00:29:55,360
on that path in particular and would

769
00:29:55,360 --> 00:29:55,760
much

770
00:29:55,760 --> 00:29:59,039
rather have the cleaner lighter pure

771
00:29:59,039 --> 00:30:00,799
quick mapping that's proposed in this

772
00:30:00,799 --> 00:30:02,240
draft

773
00:30:02,240 --> 00:30:05,840
but again if other people have

774
00:30:05,840 --> 00:30:07,600
have other recollections for that please

775
00:30:07,600 --> 00:30:10,080
speak up

776
00:30:18,320 --> 00:30:22,000
right david

777
00:30:22,000 --> 00:30:25,039
hi uh good morning uh oh happy to take

778
00:30:25,039 --> 00:30:26,320
you to the list but i wanted to make a

779
00:30:26,320 --> 00:30:27,440
very short point

780
00:30:27,440 --> 00:30:30,960
about the port number uh

781
00:30:30,960 --> 00:30:34,159
we did um some so sorry i used to be the

782
00:30:34,159 --> 00:30:36,080
uh tech lead for quick and chrome

783
00:30:36,080 --> 00:30:38,880
uh when we did some experiments uh there

784
00:30:38,880 --> 00:30:40,000
a while back

785
00:30:40,000 --> 00:30:42,559
uh not all udp ports are created equal

786
00:30:42,559 --> 00:30:44,240
and getting over the internet

787
00:30:44,240 --> 00:30:47,039
so i might suggest uh like actually just

788
00:30:47,039 --> 00:30:49,200
going and using 443

789
00:30:49,200 --> 00:30:52,720
quick uh demultiplexes by lpn so that

790
00:30:52,720 --> 00:30:54,480
that would allow you even if you wanted

791
00:30:54,480 --> 00:30:56,399
to share both services on the same port

792
00:30:56,399 --> 00:30:57,679
it would just work

793
00:30:57,679 --> 00:31:01,279
i totally get your point about um

794
00:31:01,279 --> 00:31:03,200
you know fighting an uphill battle with

795
00:31:03,200 --> 00:31:04,720
with purists

796
00:31:04,720 --> 00:31:06,720
but uh this might be the best deployment

797
00:31:06,720 --> 00:31:08,720
strategy just without

798
00:31:08,720 --> 00:31:10,559
okay that's an interesting point thank

799
00:31:10,559 --> 00:31:14,399
you yeah we'll take that board

800
00:31:17,120 --> 00:31:18,799
all right any other questions for uh

801
00:31:18,799 --> 00:31:22,158
sarah on dns over quick

802
00:31:25,279 --> 00:31:26,399
all right so i think we have a couple of

803
00:31:26,399 --> 00:31:27,600
discussion points for the for the

804
00:31:27,600 --> 00:31:29,200
mailing list to try and

805
00:31:29,200 --> 00:31:30,960
iron out the the details of what we want

806
00:31:30,960 --> 00:31:32,240
in the draft

807
00:31:32,240 --> 00:31:33,919
so we'll make sure that we get some

808
00:31:33,919 --> 00:31:35,840
discussions started on the mailing list

809
00:31:35,840 --> 00:31:36,399
once the

810
00:31:36,399 --> 00:31:39,279
once the meeting is over thanks sarah

811
00:31:39,279 --> 00:31:42,000
thank you very much everyone

812
00:31:42,000 --> 00:31:44,840
all right next on the agenda is

813
00:31:44,840 --> 00:31:47,120
oblivious

814
00:31:47,120 --> 00:31:50,158
are you presenting chris

815
00:32:06,320 --> 00:32:08,799
awesome thank you um all right good

816
00:32:08,799 --> 00:32:09,600
morning everyone

817
00:32:09,600 --> 00:32:12,640
um here to talk about oblivious dns over

818
00:32:12,640 --> 00:32:13,760
https

819
00:32:13,760 --> 00:32:15,760
this is something we talked about in

820
00:32:15,760 --> 00:32:17,600
this group i think

821
00:32:17,600 --> 00:32:20,880
back in singapore and there's been a lot

822
00:32:20,880 --> 00:32:21,840
of work

823
00:32:21,840 --> 00:32:23,600
uh both on the specification side and

824
00:32:23,600 --> 00:32:25,039
the implementation and deployment side

825
00:32:25,039 --> 00:32:26,640
and so we wanted to bring an update to

826
00:32:26,640 --> 00:32:27,679
the group

827
00:32:27,679 --> 00:32:30,000
remind folks what this was and talk

828
00:32:30,000 --> 00:32:31,440
about next steps

829
00:32:31,440 --> 00:32:34,240
next slide please

830
00:32:36,320 --> 00:32:38,640
so at a very high level the pitch is

831
00:32:38,640 --> 00:32:40,559
quite simply that obvious still

832
00:32:40,559 --> 00:32:43,760
or dns hps

833
00:32:43,760 --> 00:32:46,240
it's a protocol to proxy though queries

834
00:32:46,240 --> 00:32:47,919
between a client and a resolver

835
00:32:47,919 --> 00:32:50,720
such that uh the resolver in this

836
00:32:50,720 --> 00:32:53,440
particular case only sees the queries

837
00:32:53,440 --> 00:32:56,000
and the proxy only sees the client and

838
00:32:56,000 --> 00:32:56,640
the target

839
00:32:56,640 --> 00:33:00,159
and is not able to link the two together

840
00:33:00,159 --> 00:33:02,960
next slide please

841
00:33:05,760 --> 00:33:07,760
to actually use the protocol the client

842
00:33:07,760 --> 00:33:09,120
requires sort of very minimal

843
00:33:09,120 --> 00:33:10,960
information on the first of which is the

844
00:33:10,960 --> 00:33:13,600
name and public key of a target resolver

845
00:33:13,600 --> 00:33:17,440
um like quad one for example

846
00:33:17,440 --> 00:33:20,080
the second is the address of a proxy

847
00:33:20,080 --> 00:33:20,960
that's willing to

848
00:33:20,960 --> 00:33:24,159
actually support the protocol

849
00:33:24,159 --> 00:33:26,720
um the the sort of minimal privacy

850
00:33:26,720 --> 00:33:27,919
assumption that we're making here is

851
00:33:27,919 --> 00:33:28,480
that the

852
00:33:28,480 --> 00:33:31,919
proxies and targets do not collude um

853
00:33:31,919 --> 00:33:33,760
and noting right now that there's no

854
00:33:33,760 --> 00:33:35,279
technical measure mechanism for

855
00:33:35,279 --> 00:33:36,720
enforcing that other than like checking

856
00:33:36,720 --> 00:33:37,440
certs and

857
00:33:37,440 --> 00:33:38,880
seeing that they're not you know the

858
00:33:38,880 --> 00:33:40,960
same entity organization

859
00:33:40,960 --> 00:33:44,559
um but uh that's just sort of part for

860
00:33:44,559 --> 00:33:46,480
the course here

861
00:33:46,480 --> 00:33:48,000
and as i was saying earlier the privacy

862
00:33:48,000 --> 00:33:50,240
goal is quite simply just to

863
00:33:50,240 --> 00:33:52,080
ensure that only one party in this whole

864
00:33:52,080 --> 00:33:53,600
entire system that is the client stub

865
00:33:53,600 --> 00:33:54,320
resolver

866
00:33:54,320 --> 00:33:57,120
has access to both uh the the contents

867
00:33:57,120 --> 00:33:58,480
of a query and response

868
00:33:58,480 --> 00:34:01,200
uh or the plaintext dns messages and the

869
00:34:01,200 --> 00:34:02,240
ip address

870
00:34:02,240 --> 00:34:05,039
um and no other party be at the target

871
00:34:05,039 --> 00:34:06,799
or the proxy is able to link these two

872
00:34:06,799 --> 00:34:08,639
together

873
00:34:08,639 --> 00:34:11,359
next slide please

874
00:34:11,918 --> 00:34:14,960
so the protocol um works roughly

875
00:34:14,960 --> 00:34:19,040
as follows there are more or less three

876
00:34:19,040 --> 00:34:21,679
or there are more uh three or more

877
00:34:21,679 --> 00:34:23,359
entities in the system there is a

878
00:34:23,359 --> 00:34:25,679
a stub resolver there is a proxy there

879
00:34:25,679 --> 00:34:26,639
is a target

880
00:34:26,639 --> 00:34:28,000
and then upstream there's the rest of

881
00:34:28,000 --> 00:34:30,239
the dns or we're just referring to this

882
00:34:30,239 --> 00:34:32,639
as a sort of resolver

883
00:34:32,639 --> 00:34:35,199
and most often um at least based on uh

884
00:34:35,199 --> 00:34:36,639
performance considerations and

885
00:34:36,639 --> 00:34:37,199
performance

886
00:34:37,199 --> 00:34:39,760
results art experiments that we've done

887
00:34:39,760 --> 00:34:41,440
um it's best if the target and resolve

888
00:34:41,440 --> 00:34:43,440
are sort of co-located one

889
00:34:43,440 --> 00:34:45,119
like right next to each other or the

890
00:34:45,119 --> 00:34:48,159
target is itself a recursive resolver

891
00:34:48,159 --> 00:34:49,599
but we've split them out here just to

892
00:34:49,599 --> 00:34:52,079
illustrate that how odo is sort of

893
00:34:52,079 --> 00:34:56,639
built on top of dough next slide please

894
00:34:56,639 --> 00:34:59,119
so the very first step is the client

895
00:34:59,119 --> 00:35:00,240
stub

896
00:35:00,240 --> 00:35:02,000
somehow discovering the target public

897
00:35:02,000 --> 00:35:03,839
key um

898
00:35:03,839 --> 00:35:06,800
there are there is a a mechanism in the

899
00:35:06,800 --> 00:35:08,320
draft to actually put the

900
00:35:08,320 --> 00:35:10,960
key in an hp service record right now um

901
00:35:10,960 --> 00:35:12,640
but this is not mandatory

902
00:35:12,640 --> 00:35:14,480
um and i'll i'll touch on this a little

903
00:35:14,480 --> 00:35:15,839
bit later there are other discovery

904
00:35:15,839 --> 00:35:17,359
mechanisms possible in fact we've

905
00:35:17,359 --> 00:35:19,119
implemented another one

906
00:35:19,119 --> 00:35:23,680
in production as well next slide please

907
00:35:26,400 --> 00:35:28,640
stub and then proxy then establish sort

908
00:35:28,640 --> 00:35:31,040
of persistent hps connections

909
00:35:31,040 --> 00:35:33,280
between each other so this stuff would

910
00:35:33,280 --> 00:35:34,400
connect to the proxy

911
00:35:34,400 --> 00:35:36,240
and then proxy would in theory have a

912
00:35:36,240 --> 00:35:38,640
persistent connection to the target

913
00:35:38,640 --> 00:35:42,240
next slide please and then through

914
00:35:42,240 --> 00:35:44,400
that persistent hps connection it sends

915
00:35:44,400 --> 00:35:47,119
a public key encrypted query

916
00:35:47,119 --> 00:35:49,599
uh from the stub to the target such that

917
00:35:49,599 --> 00:35:51,119
the target can decrypt it

918
00:35:51,119 --> 00:35:54,079
using its private key uh recover a query

919
00:35:54,079 --> 00:35:55,680
and then send it upstream to its

920
00:35:55,680 --> 00:35:57,119
resolver to be

921
00:35:57,119 --> 00:36:01,359
answered next slide please

922
00:36:01,680 --> 00:36:03,280
and then the response flows back

923
00:36:03,280 --> 00:36:05,520
naturally um from the resolver

924
00:36:05,520 --> 00:36:07,760
to the target where it's encapsulated

925
00:36:07,760 --> 00:36:09,280
again with another layer of

926
00:36:09,280 --> 00:36:11,119
sort of application encryption and sent

927
00:36:11,119 --> 00:36:13,440
over the these https connections

928
00:36:13,440 --> 00:36:16,800
through the proxy back to the stub

929
00:36:16,800 --> 00:36:19,520
next slide please

930
00:36:20,480 --> 00:36:23,119
um so there's obviously a number of

931
00:36:23,119 --> 00:36:24,480
different ways we could go about

932
00:36:24,480 --> 00:36:26,560
building this sort of uh system

933
00:36:26,560 --> 00:36:28,880
uh that achieves this unlinkability goal

934
00:36:28,880 --> 00:36:30,240
um the first of which is

935
00:36:30,240 --> 00:36:31,599
you know simply using connection to

936
00:36:31,599 --> 00:36:35,119
oriented proxies like connector socks

937
00:36:35,119 --> 00:36:37,119
the the trade-off here or the the

938
00:36:37,119 --> 00:36:38,320
difference here is that oda was

939
00:36:38,320 --> 00:36:39,839
specifically designed such that every

940
00:36:39,839 --> 00:36:42,480
single query is unlinkable

941
00:36:42,480 --> 00:36:44,640
so a target upon receiving two

942
00:36:44,640 --> 00:36:46,320
consecutive queries can't tell that they

943
00:36:46,320 --> 00:36:48,480
came from the same client

944
00:36:48,480 --> 00:36:50,400
unless i mean the proxy could do

945
00:36:50,400 --> 00:36:52,480
something very silly and that is to say

946
00:36:52,480 --> 00:36:54,720
open up a fresh https connection for

947
00:36:54,720 --> 00:36:56,079
each query

948
00:36:56,079 --> 00:36:58,240
but again for performance and deployment

949
00:36:58,240 --> 00:36:59,920
reasons we assume that to not be the

950
00:36:59,920 --> 00:37:01,680
case that proxies would do same sensible

951
00:37:01,680 --> 00:37:03,839
things

952
00:37:03,839 --> 00:37:05,440
so if you were to use a connection or

953
00:37:05,440 --> 00:37:07,599
your proxy and do end to end https

954
00:37:07,599 --> 00:37:08,000
between

955
00:37:08,000 --> 00:37:10,800
the stub and the target in this case you

956
00:37:10,800 --> 00:37:12,240
would either have to pay that

957
00:37:12,240 --> 00:37:14,800
connection setup time for each query if

958
00:37:14,800 --> 00:37:16,480
you wanted unlinkability

959
00:37:16,480 --> 00:37:19,680
or you'd have to permit some sort of

960
00:37:19,680 --> 00:37:22,000
bounded link ability which is sort of

961
00:37:22,000 --> 00:37:22,880
the approach that

962
00:37:22,880 --> 00:37:27,200
um uh tor i guess dns over tor uses in

963
00:37:27,200 --> 00:37:27,599
that

964
00:37:27,599 --> 00:37:28,960
circuits are established for a short

965
00:37:28,960 --> 00:37:31,119
amount of time you can send queries over

966
00:37:31,119 --> 00:37:31,680
them

967
00:37:31,680 --> 00:37:33,839
for a short amount of time um and then

968
00:37:33,839 --> 00:37:35,119
the circus turned down and then you want

969
00:37:35,119 --> 00:37:36,880
to spin up

970
00:37:36,880 --> 00:37:38,560
and get you the same properties but

971
00:37:38,560 --> 00:37:40,160
again you're trading off link ability

972
00:37:40,160 --> 00:37:42,319
for

973
00:37:42,560 --> 00:37:45,520
performance reasons um and then tor

974
00:37:45,520 --> 00:37:47,040
would of course work here as well it's

975
00:37:47,040 --> 00:37:48,560
kind of in the same bucket as connecting

976
00:37:48,560 --> 00:37:50,160
sox pro keys in sec in fact there's a

977
00:37:50,160 --> 00:37:52,320
presentation in ndss this year um at the

978
00:37:52,320 --> 00:37:54,160
dns privacy workshop describing

979
00:37:54,160 --> 00:37:56,880
sort of someone's experience running dns

980
00:37:56,880 --> 00:37:58,800
over tour for a long time

981
00:37:58,800 --> 00:38:02,160
uh over the course of um several months

982
00:38:02,160 --> 00:38:03,839
i believe

983
00:38:03,839 --> 00:38:06,800
and basically the conclusion was it's

984
00:38:06,800 --> 00:38:08,160
not that bad

985
00:38:08,160 --> 00:38:10,079
um however tor is sort of a very

986
00:38:10,079 --> 00:38:12,320
heavyweight solution for this particular

987
00:38:12,320 --> 00:38:15,440
uh for this particular uh i guess

988
00:38:15,440 --> 00:38:16,560
problem we have here

989
00:38:16,560 --> 00:38:19,280
particularly requires multiple hops it

990
00:38:19,280 --> 00:38:20,880
does a bunch of things to mitigate

991
00:38:20,880 --> 00:38:21,920
traffic analysis

992
00:38:21,920 --> 00:38:25,200
on uh on top of

993
00:38:25,200 --> 00:38:29,200
just regular proxying and encrypting

994
00:38:29,200 --> 00:38:32,720
um and it for that

995
00:38:32,720 --> 00:38:34,800
particular reason it's not sure we're

996
00:38:34,800 --> 00:38:36,320
not sure that it's the best fit here

997
00:38:36,320 --> 00:38:38,960
um also the tour is now sort of widely

998
00:38:38,960 --> 00:38:39,599
deployed in

999
00:38:39,599 --> 00:38:41,920
you know most most user agents and in

1000
00:38:41,920 --> 00:38:43,040
most servers

1001
00:38:43,040 --> 00:38:47,359
um uh there's also oblivious http uh in

1002
00:38:47,359 --> 00:38:49,040
fact uh martin thompson will be speaking

1003
00:38:49,040 --> 00:38:49,839
about this at

1004
00:38:49,839 --> 00:38:51,440
dispatch later in the week so i'd

1005
00:38:51,440 --> 00:38:53,440
encourage you to check that out um

1006
00:38:53,440 --> 00:38:56,000
and uh it should be not surprising that

1007
00:38:56,000 --> 00:38:57,680
there is a strong overlap between

1008
00:38:57,680 --> 00:38:59,599
oblivious hdp and odo

1009
00:38:59,599 --> 00:39:03,359
and in fact that's very intentional um

1010
00:39:03,359 --> 00:39:05,440
oblivious http is sort of the successor

1011
00:39:05,440 --> 00:39:06,640
to odo

1012
00:39:06,640 --> 00:39:10,240
sort of v2 to the v1 um

1013
00:39:10,240 --> 00:39:14,079
but odo is in its current state um

1014
00:39:14,079 --> 00:39:16,640
something that is um will be considered

1015
00:39:16,640 --> 00:39:18,240
to be fairly well refined

1016
00:39:18,240 --> 00:39:22,640
um analyzed um and uh shipping

1017
00:39:22,640 --> 00:39:25,839
um and so while certain aspects of

1018
00:39:25,839 --> 00:39:28,960
generalizing a generalized ohttp

1019
00:39:28,960 --> 00:39:31,440
protocol are sorted out in particular

1020
00:39:31,440 --> 00:39:32,640
you know concerns around

1021
00:39:32,640 --> 00:39:35,520
this proxy supporting ohtp and becoming

1022
00:39:35,520 --> 00:39:38,079
sort of an open proxy

1023
00:39:38,079 --> 00:39:41,680
we think uh odo is a perfectly good

1024
00:39:41,680 --> 00:39:43,760
candidate for a v1 in which we can

1025
00:39:43,760 --> 00:39:45,680
experiment with

1026
00:39:45,680 --> 00:39:49,680
used to sort of build the system

1027
00:39:49,680 --> 00:39:51,119
assess its capabilities and its

1028
00:39:51,119 --> 00:39:53,200
performance and then when ready

1029
00:39:53,200 --> 00:39:55,200
shift over to something like ohttp when

1030
00:39:55,200 --> 00:39:58,480
the protocol is more stable

1031
00:39:58,480 --> 00:40:01,280
next slide please

1032
00:40:02,000 --> 00:40:04,720
so there are obviously a number of

1033
00:40:04,720 --> 00:40:06,079
deployment questions that will likely

1034
00:40:06,079 --> 00:40:07,280
come to mind

1035
00:40:07,280 --> 00:40:09,440
if you're if you've read this draft or

1036
00:40:09,440 --> 00:40:10,960
if you've um

1037
00:40:10,960 --> 00:40:12,480
or if you're been thinking about this

1038
00:40:12,480 --> 00:40:14,560
for a while um the first of which is

1039
00:40:14,560 --> 00:40:17,200
uh undoubtedly key discovery uh as i was

1040
00:40:17,200 --> 00:40:18,400
alluding to earlier

1041
00:40:18,400 --> 00:40:20,240
and i think this will vary most likely

1042
00:40:20,240 --> 00:40:22,000
uh by deployment scenario

1043
00:40:22,000 --> 00:40:25,440
um so the the aft as i said has a

1044
00:40:25,440 --> 00:40:27,440
current uh mechanism for

1045
00:40:27,440 --> 00:40:30,400
uh you know packaging up all the

1046
00:40:30,400 --> 00:40:32,079
configuration and public key information

1047
00:40:32,079 --> 00:40:32,400
that

1048
00:40:32,400 --> 00:40:34,960
a stub resolver might use and it

1049
00:40:34,960 --> 00:40:36,720
specifies a way to shove that in the dns

1050
00:40:36,720 --> 00:40:38,640
because that's our uh i guess that's

1051
00:40:38,640 --> 00:40:41,520
the answer to most things these days um

1052
00:40:41,520 --> 00:40:42,000
but

1053
00:40:42,000 --> 00:40:44,640
uh we also in our production endpoint we

1054
00:40:44,640 --> 00:40:45,119
also

1055
00:40:45,119 --> 00:40:48,400
um package up and advertise this

1056
00:40:48,400 --> 00:40:49,040
information

1057
00:40:49,040 --> 00:40:52,240
in a well-known http endpoint um

1058
00:40:52,240 --> 00:40:54,640
and given sort of that's likely the

1059
00:40:54,640 --> 00:40:56,960
direction that ohdp will go as well

1060
00:40:56,960 --> 00:41:00,000
um very well might be

1061
00:41:00,000 --> 00:41:01,680
that's that's sort of the what becomes

1062
00:41:01,680 --> 00:41:03,680
the de facto mechanism here

1063
00:41:03,680 --> 00:41:06,000
um all that is to say that uh key

1064
00:41:06,000 --> 00:41:07,520
discovery in particular is

1065
00:41:07,520 --> 00:41:09,839
definitely out of scope um similar to

1066
00:41:09,839 --> 00:41:10,560
how like

1067
00:41:10,560 --> 00:41:12,800
discovery of you know doe resolvers is

1068
00:41:12,800 --> 00:41:14,319
out of scope for dough

1069
00:41:14,319 --> 00:41:17,119
um uh what we're describing in the draft

1070
00:41:17,119 --> 00:41:17,440
is

1071
00:41:17,440 --> 00:41:21,040
just sort of the the the the packaging

1072
00:41:21,040 --> 00:41:21,760
information

1073
00:41:21,760 --> 00:41:25,760
uh for this configuration uh material

1074
00:41:25,760 --> 00:41:27,280
um the second important question that

1075
00:41:27,280 --> 00:41:28,400
might be on your mind is who will

1076
00:41:28,400 --> 00:41:29,359
actually proxy

1077
00:41:29,359 --> 00:41:32,160
um so in our deployment um we partnered

1078
00:41:32,160 --> 00:41:33,680
with equinix

1079
00:41:33,680 --> 00:41:36,480
to offer up uh proxy services

1080
00:41:36,480 --> 00:41:38,400
specifically for odo

1081
00:41:38,400 --> 00:41:40,640
for user agents that are interested in

1082
00:41:40,640 --> 00:41:42,160
and we expect this to sort of be the

1083
00:41:42,160 --> 00:41:42,880
pattern

1084
00:41:42,880 --> 00:41:46,079
um of the deployment pattern for uh

1085
00:41:46,079 --> 00:41:48,480
protocols of this type where we have

1086
00:41:48,480 --> 00:41:49,839
good samaritans

1087
00:41:49,839 --> 00:41:51,760
or just entities acting on the behalf of

1088
00:41:51,760 --> 00:41:54,079
clients um proxying for

1089
00:41:54,079 --> 00:41:55,839
well-known targets that support the

1090
00:41:55,839 --> 00:41:57,280
protocol or

1091
00:41:57,280 --> 00:41:59,119
proxying two targets that they can

1092
00:41:59,119 --> 00:42:02,880
verify support the protocol

1093
00:42:02,880 --> 00:42:04,480
and the last of which is this uh this

1094
00:42:04,480 --> 00:42:07,200
notion of non-collusion

1095
00:42:07,200 --> 00:42:09,119
as i said there's no technical mechanism

1096
00:42:09,119 --> 00:42:10,480
in place to ensure that this doesn't

1097
00:42:10,480 --> 00:42:11,440
happen

1098
00:42:11,440 --> 00:42:14,480
um in fact that's very much sort of out

1099
00:42:14,480 --> 00:42:15,440
of

1100
00:42:15,440 --> 00:42:18,640
the the point of obdo is to sort of put

1101
00:42:18,640 --> 00:42:21,200
technical barriers in place such that

1102
00:42:21,200 --> 00:42:22,560
people can enforce

1103
00:42:22,560 --> 00:42:25,520
whatever sort of policy they want in

1104
00:42:25,520 --> 00:42:26,400
terms of

1105
00:42:26,400 --> 00:42:28,880
uh you know which proxy they're going to

1106
00:42:28,880 --> 00:42:30,319
talk to which uh

1107
00:42:30,319 --> 00:42:32,079
target they're going to speak to through

1108
00:42:32,079 --> 00:42:33,440
that proxy

1109
00:42:33,440 --> 00:42:35,680
um and to make it sort of difficult for

1110
00:42:35,680 --> 00:42:36,640
uh

1111
00:42:36,640 --> 00:42:39,839
entities to to to do this link ability

1112
00:42:39,839 --> 00:42:44,400
um that i was alluding to earlier um

1113
00:42:44,400 --> 00:42:47,839
um but of course this non-collusion is

1114
00:42:47,839 --> 00:42:48,400
sort of

1115
00:42:48,400 --> 00:42:51,200
uh necessary and of course required for

1116
00:42:51,200 --> 00:42:52,400
the privacy guarantees that we're

1117
00:42:52,400 --> 00:42:54,160
talking about here

1118
00:42:54,160 --> 00:42:56,799
next slide please

1119
00:42:57,599 --> 00:42:59,599
um so just to give you an update on the

1120
00:42:59,599 --> 00:43:02,000
status um this is used in production

1121
00:43:02,000 --> 00:43:05,760
um we have uh the target support uh

1122
00:43:05,760 --> 00:43:08,079
at cloudflare's edge right now there are

1123
00:43:08,079 --> 00:43:08,960
a number of different

1124
00:43:08,960 --> 00:43:11,040
uh client libraries and uh proxy

1125
00:43:11,040 --> 00:43:12,400
implementations available

1126
00:43:12,400 --> 00:43:15,520
um these are uh i mean people are dog

1127
00:43:15,520 --> 00:43:16,960
foodiness right now

1128
00:43:16,960 --> 00:43:19,599
uh it is uh the proxy is running and

1129
00:43:19,599 --> 00:43:21,520
we're actively using it

1130
00:43:21,520 --> 00:43:24,079
we're trying to uh i mean we're standing

1131
00:43:24,079 --> 00:43:25,920
up this infrastructure

1132
00:43:25,920 --> 00:43:28,240
first and foremost to sort of uh do

1133
00:43:28,240 --> 00:43:29,119
these performance

1134
00:43:29,119 --> 00:43:31,119
uh tests to see you know what is the

1135
00:43:31,119 --> 00:43:33,520
actual user experience impact

1136
00:43:33,520 --> 00:43:35,119
uh in terms of this sort of proxying

1137
00:43:35,119 --> 00:43:36,800
protocol um

1138
00:43:36,800 --> 00:43:39,440
we have some preliminary data that was

1139
00:43:39,440 --> 00:43:41,359
uh published at ndss this

1140
00:43:41,359 --> 00:43:43,839
this year um or discussed in andy says

1141
00:43:43,839 --> 00:43:44,800
this year

1142
00:43:44,800 --> 00:43:47,359
um that that shows uh without getting

1143
00:43:47,359 --> 00:43:48,960
into the details that you know page load

1144
00:43:48,960 --> 00:43:51,280
time and response latency are not

1145
00:43:51,280 --> 00:43:52,400
quote i should have quotes around

1146
00:43:52,400 --> 00:43:56,480
significantly but significantly impacted

1147
00:43:56,960 --> 00:43:59,599
and i say quotes because there's a lot

1148
00:43:59,599 --> 00:44:01,280
of there's a lot of variables in terms

1149
00:44:01,280 --> 00:44:02,960
of you know where the proxy exists on

1150
00:44:02,960 --> 00:44:04,319
the path between the client and the

1151
00:44:04,319 --> 00:44:05,040
target

1152
00:44:05,040 --> 00:44:07,440
whether or not connections are reused uh

1153
00:44:07,440 --> 00:44:10,240
appropriately and connections are full

1154
00:44:10,240 --> 00:44:12,000
so there's there's a lot of room for

1155
00:44:12,000 --> 00:44:13,359
improvement on the results that are

1156
00:44:13,359 --> 00:44:13,760
there

1157
00:44:13,760 --> 00:44:16,480
um and so we're continuing or we're

1158
00:44:16,480 --> 00:44:18,400
continuing to

1159
00:44:18,400 --> 00:44:19,920
we're committed to continuing our

1160
00:44:19,920 --> 00:44:22,480
experiments with still resolvers

1161
00:44:22,480 --> 00:44:25,839
to get more data to do

1162
00:44:25,839 --> 00:44:28,000
more performance analysis to make sure

1163
00:44:28,000 --> 00:44:29,440
that this is something that's

1164
00:44:29,440 --> 00:44:32,880
sort of livable on um i'd also like to

1165
00:44:32,880 --> 00:44:34,000
state that

1166
00:44:34,000 --> 00:44:36,640
thanks to jonathan hoyland we have uh

1167
00:44:36,640 --> 00:44:38,720
backing format analysis in tamron too

1168
00:44:38,720 --> 00:44:40,160
just give us confidence that this is

1169
00:44:40,160 --> 00:44:42,000
something safe to do right now

1170
00:44:42,000 --> 00:44:45,440
um as it's currently specced next slide

1171
00:44:45,440 --> 00:44:47,680
please

1172
00:44:48,240 --> 00:44:50,640
so the the question for the group is um

1173
00:44:50,640 --> 00:44:51,599
uh

1174
00:44:51,599 --> 00:44:54,480
given that there is a sort of a interest

1175
00:44:54,480 --> 00:44:54,880
in

1176
00:44:54,880 --> 00:44:58,640
in in this month i i i'm obviously a

1177
00:44:58,640 --> 00:45:00,000
little bit biased here um

1178
00:45:00,000 --> 00:45:01,760
there appears to be interest in this

1179
00:45:01,760 --> 00:45:03,440
particular protocol people are investing

1180
00:45:03,440 --> 00:45:04,160
in it

1181
00:45:04,160 --> 00:45:07,680
um it's it's shipping um

1182
00:45:07,680 --> 00:45:09,280
the question for the group is is there

1183
00:45:09,280 --> 00:45:11,200
interesting to document us as

1184
00:45:11,200 --> 00:45:14,880
an experimental v1 as

1185
00:45:14,880 --> 00:45:18,400
something that we can deploy live on

1186
00:45:18,400 --> 00:45:21,040
um and get confidence in uh before we

1187
00:45:21,040 --> 00:45:21,760
move to

1188
00:45:21,760 --> 00:45:24,800
some future v2 uh be it based on oh gdp

1189
00:45:24,800 --> 00:45:25,200
or

1190
00:45:25,200 --> 00:45:30,000
or whatever and with that i will

1191
00:45:30,839 --> 00:45:34,560
um pause for questions

1192
00:45:39,359 --> 00:45:43,200
um just noting you may hear some like

1193
00:45:43,200 --> 00:45:45,359
snoring in the background it's a small

1194
00:45:45,359 --> 00:45:47,839
tiny dog

1195
00:45:49,040 --> 00:45:52,079
go ahead paul so

1196
00:45:52,079 --> 00:45:53,680
thank you chris actually especially for

1197
00:45:53,680 --> 00:45:55,599
that last comment i was going to

1198
00:45:55,599 --> 00:45:58,000
actually ask on the chat is anyone else

1199
00:45:58,000 --> 00:45:59,119
hearing that so

1200
00:45:59,119 --> 00:46:01,040
congratulations for your dog it's four

1201
00:46:01,040 --> 00:46:02,800
in the morning um

1202
00:46:02,800 --> 00:46:04,640
so i think this is a reasonable

1203
00:46:04,640 --> 00:46:06,880
experiment but i don't think it's worth

1204
00:46:06,880 --> 00:46:08,480
bringing having the working group

1205
00:46:08,480 --> 00:46:10,319
working on it because as you said

1206
00:46:10,319 --> 00:46:12,319
you've already got you know it deployed

1207
00:46:12,319 --> 00:46:14,000
we know that there's a v2 that might be

1208
00:46:14,000 --> 00:46:16,079
more generalized and such like that

1209
00:46:16,079 --> 00:46:17,680
i think this would be perfectly

1210
00:46:17,680 --> 00:46:19,520
reasonable straight to take straight to

1211
00:46:19,520 --> 00:46:21,119
the independent submissions editor

1212
00:46:21,119 --> 00:46:23,599
as in we thought about it there was some

1213
00:46:23,599 --> 00:46:24,480
discussion

1214
00:46:24,480 --> 00:46:26,560
it's clearly not crazy we've actually

1215
00:46:26,560 --> 00:46:28,000
got some

1216
00:46:28,000 --> 00:46:29,599
proof that it's a reasonable security

1217
00:46:29,599 --> 00:46:31,520
concept um

1218
00:46:31,520 --> 00:46:33,920
the other reason why i'm i think i would

1219
00:46:33,920 --> 00:46:35,920
be hesitant to take it to this working

1220
00:46:35,920 --> 00:46:36,319
group

1221
00:46:36,319 --> 00:46:39,520
is i still and chris you've heard me ask

1222
00:46:39,520 --> 00:46:40,800
this many times

1223
00:46:40,800 --> 00:46:44,240
i don't know how many users will

1224
00:46:44,240 --> 00:46:45,839
actually understand

1225
00:46:45,839 --> 00:46:47,839
the advantage of you know like i don't

1226
00:46:47,839 --> 00:46:49,760
know how many users there are who say

1227
00:46:49,760 --> 00:46:52,480
i don't trust my immediate upstream to

1228
00:46:52,480 --> 00:46:52,800
not

1229
00:46:52,800 --> 00:46:55,200
collude with the upstream beyond them

1230
00:46:55,200 --> 00:46:57,200
particularly when the best performance

1231
00:46:57,200 --> 00:46:58,240
is when the two of them

1232
00:46:58,240 --> 00:47:00,960
are the same organization um i think

1233
00:47:00,960 --> 00:47:02,480
that'll get answered better

1234
00:47:02,480 --> 00:47:05,280
from the the general http this working

1235
00:47:05,280 --> 00:47:06,319
group work

1236
00:47:06,319 --> 00:47:08,880
and so i would say don't bring it up in

1237
00:47:08,880 --> 00:47:10,319
the working group but get it published

1238
00:47:10,319 --> 00:47:11,920
so that people can take a look at it and

1239
00:47:11,920 --> 00:47:12,880
bang on it

1240
00:47:12,880 --> 00:47:15,200
thanks

1241
00:47:15,920 --> 00:47:20,640
um i agree that uh explaining to users

1242
00:47:20,640 --> 00:47:23,280
what one of the privacy benefits here is

1243
00:47:23,280 --> 00:47:24,640
tricky um

1244
00:47:24,640 --> 00:47:26,720
and i i hope that we don't have to go to

1245
00:47:26,720 --> 00:47:28,480
sort of technical details here because

1246
00:47:28,480 --> 00:47:32,400
um even as experts i guess

1247
00:47:32,400 --> 00:47:36,079
sometimes it's hard to reason about so

1248
00:47:37,280 --> 00:47:41,839
yeah thanks uh eric

1249
00:47:42,880 --> 00:47:44,720
yeah just comment on that last point

1250
00:47:44,720 --> 00:47:46,400
about explaining to users i

1251
00:47:46,400 --> 00:47:47,920
i don't expect this to be something that

1252
00:47:47,920 --> 00:47:49,359
can easily explain to users either but

1253
00:47:49,359 --> 00:47:49,920
we can get

1254
00:47:49,920 --> 00:47:52,400
good benefit out of this if the browser

1255
00:47:52,400 --> 00:47:54,640
is implemented we can do things without

1256
00:47:54,640 --> 00:47:56,079
the users having to understand anything

1257
00:47:56,079 --> 00:47:57,839
at all similar to how we do go auto

1258
00:47:57,839 --> 00:47:59,200
upgrade today

1259
00:47:59,200 --> 00:48:02,319
just so i i like this proposal just my

1260
00:48:02,319 --> 00:48:03,680
one concern is

1261
00:48:03,680 --> 00:48:05,119
similar to a lot of people chat just the

1262
00:48:05,119 --> 00:48:07,280
all upcoming alternatives and such it

1263
00:48:07,280 --> 00:48:08,160
seems like

1264
00:48:08,160 --> 00:48:09,839
if this just is just a temporary thing

1265
00:48:09,839 --> 00:48:12,559
before new stuff like oblivious hps is

1266
00:48:12,559 --> 00:48:14,800
very likely to take over then

1267
00:48:14,800 --> 00:48:16,000
this doesn't seem like something that

1268
00:48:16,000 --> 00:48:18,160
should be a full-fledged adopted

1269
00:48:18,160 --> 00:48:21,680
standard track rfc

1270
00:48:21,680 --> 00:48:24,880
yes definitely not standard

1271
00:48:24,880 --> 00:48:27,119
yeah let's do this right now but it's

1272
00:48:27,119 --> 00:48:28,640
the alternative it's getting me

1273
00:48:28,640 --> 00:48:31,359
scared maybe this isn't time to do

1274
00:48:31,359 --> 00:48:32,960
anything other than just an experimental

1275
00:48:32,960 --> 00:48:34,000
just try to get some stuff

1276
00:48:34,000 --> 00:48:38,160
in the meantime well this works for now

1277
00:48:38,240 --> 00:48:39,920
yeah sorry i i didn't mean to cut you

1278
00:48:39,920 --> 00:48:41,520
off um there's a lag

1279
00:48:41,520 --> 00:48:44,160
yes totally agree um we are not

1280
00:48:44,160 --> 00:48:45,440
interested in making this proposed

1281
00:48:45,440 --> 00:48:47,359
standard given that there's something

1282
00:48:47,359 --> 00:48:50,240
uh slated to be better oh dp in the

1283
00:48:50,240 --> 00:48:51,200
future but

1284
00:48:51,200 --> 00:48:53,040
um there is a use case for this right

1285
00:48:53,040 --> 00:48:55,520
now um we are actively shipping this

1286
00:48:55,520 --> 00:48:56,160
right now

1287
00:48:56,160 --> 00:48:58,720
and we want to actively experiment with

1288
00:48:58,720 --> 00:48:59,440
it so

1289
00:48:59,440 --> 00:49:01,760
um experimental is is great from my

1290
00:49:01,760 --> 00:49:02,640
perspective

1291
00:49:02,640 --> 00:49:05,760
um so i'd be happy with that

1292
00:49:05,760 --> 00:49:11,040
okay yeah sounds good thanks eric tommy

1293
00:49:12,160 --> 00:49:16,400
all right hello can you hear me

1294
00:49:16,400 --> 00:49:20,480
good hello can you hear me yes we can

1295
00:49:20,480 --> 00:49:23,599
all right sounds good um

1296
00:49:23,599 --> 00:49:26,160
yeah so just to kind of echo what's been

1297
00:49:26,160 --> 00:49:27,119
said i think

1298
00:49:27,119 --> 00:49:28,480
experimental is the completely

1299
00:49:28,480 --> 00:49:31,200
appropriate thing for this um

1300
00:49:31,200 --> 00:49:33,280
if the working group doesn't want it i

1301
00:49:33,280 --> 00:49:35,200
think then

1302
00:49:35,200 --> 00:49:36,880
it would make most sense for it to just

1303
00:49:36,880 --> 00:49:38,640
kind of go directly to

1304
00:49:38,640 --> 00:49:41,599
independent submission or maybe sponsor

1305
00:49:41,599 --> 00:49:44,000
something to be experimental like that

1306
00:49:44,000 --> 00:49:47,839
um however i would as an author

1307
00:49:47,839 --> 00:49:51,440
express that i would prefer to see it

1308
00:49:51,440 --> 00:49:54,319
adopted as a fairly you know quick

1309
00:49:54,319 --> 00:49:55,920
processing

1310
00:49:55,920 --> 00:49:57,520
thing for this working group just to

1311
00:49:57,520 --> 00:49:59,839
have the opportunity for

1312
00:49:59,839 --> 00:50:02,319
the working group to have the reviews to

1313
00:50:02,319 --> 00:50:04,880
give input on some of the text

1314
00:50:04,880 --> 00:50:07,839
um particularly around any language that

1315
00:50:07,839 --> 00:50:10,319
we can improve for dns considerations

1316
00:50:10,319 --> 00:50:11,920
considerations into the architecture

1317
00:50:11,920 --> 00:50:13,520
since if we view this as

1318
00:50:13,520 --> 00:50:16,240
a step towards something that's going to

1319
00:50:16,240 --> 00:50:17,599
be

1320
00:50:17,599 --> 00:50:21,760
um generalized with oblivious http

1321
00:50:21,760 --> 00:50:23,920
and used for dns in the future having

1322
00:50:23,920 --> 00:50:25,280
the thought and consideration of the

1323
00:50:25,280 --> 00:50:26,400
group

1324
00:50:26,400 --> 00:50:29,040
on how kind of best to think about this

1325
00:50:29,040 --> 00:50:29,920
area

1326
00:50:29,920 --> 00:50:33,040
i think would improve the document um

1327
00:50:33,040 --> 00:50:35,119
so if people would like to do it that'd

1328
00:50:35,119 --> 00:50:36,400
be great

1329
00:50:36,400 --> 00:50:39,119
um i'll also speak as an implementer

1330
00:50:39,119 --> 00:50:40,880
that

1331
00:50:40,880 --> 00:50:44,160
we are planning on having support for

1332
00:50:44,160 --> 00:50:44,880
this

1333
00:50:44,880 --> 00:50:47,760
at some point from the apple side and

1334
00:50:47,760 --> 00:50:49,119
that would be able to reach a lot of

1335
00:50:49,119 --> 00:50:49,760
users

1336
00:50:49,760 --> 00:50:53,200
and you know it can be done in ways that

1337
00:50:53,200 --> 00:50:54,640
don't require them to have a deep

1338
00:50:54,640 --> 00:50:56,160
understanding

1339
00:50:56,160 --> 00:50:58,319
of the trade-offs here but still provide

1340
00:50:58,319 --> 00:50:59,359
a benefit

1341
00:50:59,359 --> 00:51:02,800
to them in their privacy overall so

1342
00:51:02,800 --> 00:51:06,160
yeah i think you could go either way

1343
00:51:06,160 --> 00:51:07,359
experimental is definitely the right

1344
00:51:07,359 --> 00:51:08,880
thing and

1345
00:51:08,880 --> 00:51:10,800
i would ask the chairs maybe if we could

1346
00:51:10,800 --> 00:51:12,559
get some type of

1347
00:51:12,559 --> 00:51:15,119
pull on just interest on the best way to

1348
00:51:15,119 --> 00:51:17,920
go forward with this

1349
00:51:18,960 --> 00:51:22,160
thanks tommy yeah so so just a quick

1350
00:51:22,160 --> 00:51:23,839
response to that tommy i mean we can

1351
00:51:23,839 --> 00:51:27,760
we can either do a um

1352
00:51:27,760 --> 00:51:31,200
we can either do a poll now or

1353
00:51:31,200 --> 00:51:33,119
we can just repeat the poll again on the

1354
00:51:33,119 --> 00:51:34,400
mailing list so that everyone can

1355
00:51:34,400 --> 00:51:35,119
participate

1356
00:51:35,119 --> 00:51:38,640
so um you know my suggestion unless

1357
00:51:38,640 --> 00:51:39,920
people really want to do a poll right

1358
00:51:39,920 --> 00:51:41,520
now is is we'll we'll make an action

1359
00:51:41,520 --> 00:51:42,160
item to

1360
00:51:42,160 --> 00:51:44,559
to pull the working group on adoption

1361
00:51:44,559 --> 00:51:46,160
and we'll we'll

1362
00:51:46,160 --> 00:51:49,280
elaborate on the on on the three primary

1363
00:51:49,280 --> 00:51:50,000
options

1364
00:51:50,000 --> 00:51:51,599
assuming that experimental is what

1365
00:51:51,599 --> 00:51:53,040
everybody agrees to

1366
00:51:53,040 --> 00:51:54,319
then it's either the working group

1367
00:51:54,319 --> 00:51:57,040
adopts it uh independent stream

1368
00:51:57,040 --> 00:52:00,720
or ad sponsored and that the third one

1369
00:52:00,720 --> 00:52:02,000
will require us to have a

1370
00:52:02,000 --> 00:52:04,559
a chat with our our area director to see

1371
00:52:04,559 --> 00:52:06,000
if that's something that he's

1372
00:52:06,000 --> 00:52:09,280
interested or willing to see so brian we

1373
00:52:09,280 --> 00:52:10,880
could use the show of hands tool that

1374
00:52:10,880 --> 00:52:11,920
seems to

1375
00:52:11,920 --> 00:52:13,920
even even eric negron said it works

1376
00:52:13,920 --> 00:52:16,079
pretty well i can fire one up here real

1377
00:52:16,079 --> 00:52:19,359
quick if you want oh go ahead

1378
00:52:19,359 --> 00:52:21,839
okay with the toys why do you do that i

1379
00:52:21,839 --> 00:52:22,480
just

1380
00:52:22,480 --> 00:52:25,839
reply to a comment uh in the chat um

1381
00:52:25,839 --> 00:52:28,800
which was that uh discovery is going to

1382
00:52:28,800 --> 00:52:31,119
take a long time to sort out

1383
00:52:31,119 --> 00:52:33,440
and i definitely agree which is why it

1384
00:52:33,440 --> 00:52:35,119
is distinctly out of scope for this

1385
00:52:35,119 --> 00:52:36,640
particular document

1386
00:52:36,640 --> 00:52:38,559
we are not trying to solve the discovery

1387
00:52:38,559 --> 00:52:39,920
problem here um

1388
00:52:39,920 --> 00:52:41,359
that is something that specific

1389
00:52:41,359 --> 00:52:43,359
deployments of this problem can solve

1390
00:52:43,359 --> 00:52:46,720
um future specifications we can solve um

1391
00:52:46,720 --> 00:52:50,640
but it's definitely not for this

1392
00:52:54,880 --> 00:52:57,520
yep thanks and i always have the opinion

1393
00:52:57,520 --> 00:52:58,960
we could adopt something and then decide

1394
00:52:58,960 --> 00:53:00,800
never to like do anything with it we can

1395
00:53:00,800 --> 00:53:02,559
noodle on it for a bit and realize it's

1396
00:53:02,559 --> 00:53:03,920
not you know

1397
00:53:03,920 --> 00:53:07,200
um but some people feel that's a

1398
00:53:07,200 --> 00:53:08,480
that's burning a lot of working group

1399
00:53:08,480 --> 00:53:11,280
time so i i think the opposite right i

1400
00:53:11,280 --> 00:53:12,720
think sometimes you get folks really

1401
00:53:12,720 --> 00:53:13,920
thinking about stuff like this you come

1402
00:53:13,920 --> 00:53:14,400
up with a

1403
00:53:14,400 --> 00:53:15,280
bunch of different you know

1404
00:53:15,280 --> 00:53:18,960
possibilities so

1405
00:53:22,720 --> 00:53:24,240
while we're um rolling the while we're

1406
00:53:24,240 --> 00:53:29,839
rolling the poll um

1407
00:53:31,280 --> 00:53:34,559
uh acura's comment i am stuck in our rfc

1408
00:53:34,559 --> 00:53:36,640
dep ended up for now but i'll just say

1409
00:53:36,640 --> 00:53:39,119
what i think about odo versus ohtp which

1410
00:53:39,119 --> 00:53:40,480
is i like what's on the slide but

1411
00:53:40,480 --> 00:53:42,079
hopefully i'd like to see emerge i guess

1412
00:53:42,079 --> 00:53:43,760
we have odo as experimental in case

1413
00:53:43,760 --> 00:53:44,800
there is no merge

1414
00:53:44,800 --> 00:53:46,480
as we expect odo to eventually be

1415
00:53:46,480 --> 00:53:48,079
replaced there's a bunch of plus ones in

1416
00:53:48,079 --> 00:53:51,680
the chat too experimental

1417
00:53:53,680 --> 00:53:58,640
thanks watson uh ben thanks watson

1418
00:54:00,480 --> 00:54:04,000
hi ben schwartz i uh i said earlier that

1419
00:54:04,000 --> 00:54:04,240
i

1420
00:54:04,240 --> 00:54:06,800
i supported adoption but i just heard a

1421
00:54:06,800 --> 00:54:08,319
sort of

1422
00:54:08,319 --> 00:54:11,599
change in the the

1423
00:54:11,599 --> 00:54:13,280
the context of the discussion with the

1424
00:54:13,280 --> 00:54:14,800
the authors you know

1425
00:54:14,800 --> 00:54:16,000
noting that there's substantial

1426
00:54:16,000 --> 00:54:17,520
deployment already i think that actually

1427
00:54:17,520 --> 00:54:18,559
suggests

1428
00:54:18,559 --> 00:54:21,680
that maybe this isn't really a great fit

1429
00:54:21,680 --> 00:54:23,040
for adoption

1430
00:54:23,040 --> 00:54:26,160
because uh you know i think adoption by

1431
00:54:26,160 --> 00:54:27,520
the working group

1432
00:54:27,520 --> 00:54:29,359
really means change control passes to

1433
00:54:29,359 --> 00:54:30,880
the working group and and we would need

1434
00:54:30,880 --> 00:54:31,599
to think

1435
00:54:31,599 --> 00:54:32,960
you know i think it would be it would be

1436
00:54:32,960 --> 00:54:34,640
right and reasonable for the for the

1437
00:54:34,640 --> 00:54:35,920
working group to

1438
00:54:35,920 --> 00:54:38,480
take a step back and try to figure out

1439
00:54:38,480 --> 00:54:40,079
what is really the right

1440
00:54:40,079 --> 00:54:43,119
long-term solution here what is the

1441
00:54:43,119 --> 00:54:47,119
um you know what is the

1442
00:54:47,359 --> 00:54:48,960
what is the integration here with

1443
00:54:48,960 --> 00:54:50,839
multiple protocol discovery how does

1444
00:54:50,839 --> 00:54:52,160
this

1445
00:54:52,160 --> 00:54:55,200
work in a in a world where there's dns

1446
00:54:55,200 --> 00:54:56,319
over quick

1447
00:54:56,319 --> 00:54:59,440
in in play

1448
00:54:59,680 --> 00:55:02,160
uh you know what is how does this fit

1449
00:55:02,160 --> 00:55:04,720
into the broader dns architecture

1450
00:55:04,720 --> 00:55:07,119
so uh you know i think this would i

1451
00:55:07,119 --> 00:55:08,319
would be most interested in

1452
00:55:08,319 --> 00:55:10,000
in the working group taking this on you

1453
00:55:10,000 --> 00:55:11,359
know as a

1454
00:55:11,359 --> 00:55:15,680
sort of to to design a version two

1455
00:55:15,680 --> 00:55:19,040
and let this version go out um

1456
00:55:19,040 --> 00:55:20,640
you know basically as is from the

1457
00:55:20,640 --> 00:55:23,040
authors

1458
00:55:23,599 --> 00:55:25,280
so i definitely agree those are things

1459
00:55:25,280 --> 00:55:26,319
we need to sort through and that's

1460
00:55:26,319 --> 00:55:27,359
specifically why

1461
00:55:27,359 --> 00:55:30,400
i think adoption uh as experimental

1462
00:55:30,400 --> 00:55:32,559
in this working group is perhaps the

1463
00:55:32,559 --> 00:55:33,440
right move here

1464
00:55:33,440 --> 00:55:36,400
so that we can work through those issues

1465
00:55:36,400 --> 00:55:37,599
um i i don't know

1466
00:55:37,599 --> 00:55:40,079
that means i i don't think it means that

1467
00:55:40,079 --> 00:55:42,480
we need to be like focusing on v2

1468
00:55:42,480 --> 00:55:45,680
um the point of this exercise as i see

1469
00:55:45,680 --> 00:55:46,319
it is to

1470
00:55:46,319 --> 00:55:48,720
make sure that we we sort of work out

1471
00:55:48,720 --> 00:55:49,599
all the kinks

1472
00:55:49,599 --> 00:55:52,079
uh for this initial v1 for this

1473
00:55:52,079 --> 00:55:54,400
experiment such that when v2 is ready

1474
00:55:54,400 --> 00:55:57,040
um we will have a much easier time uh

1475
00:55:57,040 --> 00:55:58,799
getting that out the door

1476
00:55:58,799 --> 00:56:01,040
but that's right it sounds to me like

1477
00:56:01,040 --> 00:56:02,319
you're you know

1478
00:56:02,319 --> 00:56:03,839
like basically it's too late for

1479
00:56:03,839 --> 00:56:05,760
compatibility breaking changes

1480
00:56:05,760 --> 00:56:08,799
in the specification

1481
00:56:09,760 --> 00:56:12,880
uh and and that suggests to me that

1482
00:56:12,880 --> 00:56:15,839
that this should probably just go get an

1483
00:56:15,839 --> 00:56:16,720
rfc number

1484
00:56:16,720 --> 00:56:20,240
and and they should just move ahead and

1485
00:56:20,240 --> 00:56:22,559
it's and we shouldn't try to mess with

1486
00:56:22,559 --> 00:56:24,960
it here basically

1487
00:56:24,960 --> 00:56:27,920
so uh to be clear um we are totally open

1488
00:56:27,920 --> 00:56:29,440
to handing over change control for this

1489
00:56:29,440 --> 00:56:31,040
particular document um

1490
00:56:31,040 --> 00:56:32,240
should that be what's in the best

1491
00:56:32,240 --> 00:56:34,319
interest of the document um we're not

1492
00:56:34,319 --> 00:56:36,000
like just seeking an rfc number right

1493
00:56:36,000 --> 00:56:37,520
here we're trying to figure out what is

1494
00:56:37,520 --> 00:56:38,240
uh

1495
00:56:38,240 --> 00:56:40,559
um the right way to shape this protocol

1496
00:56:40,559 --> 00:56:42,720
such that uh it is deployable and people

1497
00:56:42,720 --> 00:56:45,680
can live on it and

1498
00:56:45,680 --> 00:56:48,160
so i'm not sure i see an issue in that

1499
00:56:48,160 --> 00:56:51,040
particular respect but

1500
00:56:51,040 --> 00:56:52,799
there's more people in the cuba maybe

1501
00:56:52,799 --> 00:56:54,720
and maybe tommy or david want to

1502
00:56:54,720 --> 00:56:58,640
specifically speak to that point

1503
00:56:58,640 --> 00:57:01,440
so actually chris i want to jump in from

1504
00:57:01,440 --> 00:57:02,880
the chair perspective and i think

1505
00:57:02,880 --> 00:57:04,480
there's a little subtlety in what ben is

1506
00:57:04,480 --> 00:57:05,839
saying there

1507
00:57:05,839 --> 00:57:08,319
is the question is is given given the

1508
00:57:08,319 --> 00:57:10,960
amount of deployment that you have

1509
00:57:10,960 --> 00:57:13,280
do you want a document that reflects the

1510
00:57:13,280 --> 00:57:15,680
current deployment

1511
00:57:15,680 --> 00:57:17,760
or do you want a document that that is

1512
00:57:17,760 --> 00:57:18,720
going to be potentially

1513
00:57:18,720 --> 00:57:21,200
changed that doesn't reflect the current

1514
00:57:21,200 --> 00:57:23,759
deployment

1515
00:57:25,599 --> 00:57:28,640
we expect the document to change um and

1516
00:57:28,640 --> 00:57:30,799
and that's the whole purpose of this uh

1517
00:57:30,799 --> 00:57:32,240
i we are

1518
00:57:32,240 --> 00:57:36,079
by no means uh you know

1519
00:57:36,079 --> 00:57:37,920
uh rigid with respect to what's

1520
00:57:37,920 --> 00:57:39,839
currently in the dock

1521
00:57:39,839 --> 00:57:41,440
be it on the protocol details crypto

1522
00:57:41,440 --> 00:57:43,839
details what have you um

1523
00:57:43,839 --> 00:57:48,160
so yeah i hope that

1524
00:57:48,160 --> 00:57:55,440
is clear okay ted

1525
00:57:55,440 --> 00:57:57,920
uh thanks uh the point i got on cue to

1526
00:57:57,920 --> 00:57:59,359
to make a while back was

1527
00:57:59,359 --> 00:58:01,359
actually on the caching semantics and

1528
00:58:01,359 --> 00:58:02,880
what the experiment is going to tell you

1529
00:58:02,880 --> 00:58:04,319
it sounds like there's a great deal of

1530
00:58:04,319 --> 00:58:06,640
interest from the proponents of the

1531
00:58:06,640 --> 00:58:07,680
document

1532
00:58:07,680 --> 00:58:10,799
to use this experiment uh to to work out

1533
00:58:10,799 --> 00:58:11,680
what

1534
00:58:11,680 --> 00:58:13,359
uh the relationship is of this work to

1535
00:58:13,359 --> 00:58:14,960
the rest of kind of the

1536
00:58:14,960 --> 00:58:16,559
the way the dns works and i think that's

1537
00:58:16,559 --> 00:58:18,000
very valuable and i supported an

1538
00:58:18,000 --> 00:58:19,599
experimental on that behalf

1539
00:58:19,599 --> 00:58:21,359
i want to be a little bit cautious

1540
00:58:21,359 --> 00:58:23,839
though in drawing any conclusions

1541
00:58:23,839 --> 00:58:26,559
about what that experiment means for a

1542
00:58:26,559 --> 00:58:28,799
broader use of oblivious http

1543
00:58:28,799 --> 00:58:30,880
in particular because the way caches

1544
00:58:30,880 --> 00:58:31,839
work

1545
00:58:31,839 --> 00:58:34,319
is sometimes subtly and sometimes not so

1546
00:58:34,319 --> 00:58:36,160
subtly different between the way dns

1547
00:58:36,160 --> 00:58:37,280
caches work and

1548
00:58:37,280 --> 00:58:40,480
and http caches work and i think

1549
00:58:40,480 --> 00:58:43,680
one of the concerns i would have is

1550
00:58:43,680 --> 00:58:47,200
uh us presuming that success in

1551
00:58:47,200 --> 00:58:50,319
a protocol design for the more limited

1552
00:58:50,319 --> 00:58:52,960
uh set of mime types and the the dns

1553
00:58:52,960 --> 00:58:53,599
caching

1554
00:58:53,599 --> 00:58:57,040
mechanism was necessarily

1555
00:58:57,040 --> 00:59:00,240
a harbinger of a good result in the http

1556
00:59:00,240 --> 00:59:00,880
side

1557
00:59:00,880 --> 00:59:03,520
so i i definitely support this going

1558
00:59:03,520 --> 00:59:04,000
forward

1559
00:59:04,000 --> 00:59:07,599
and i do want us to be a little bit

1560
00:59:07,599 --> 00:59:09,520
cautious though in in thinking about

1561
00:59:09,520 --> 00:59:11,040
what the results of the experiment

1562
00:59:11,040 --> 00:59:13,359
would mean because i think there is a

1563
00:59:13,359 --> 00:59:14,799
strong chance that you will end up with

1564
00:59:14,799 --> 00:59:16,160
an oblivious doe

1565
00:59:16,160 --> 00:59:19,280
that is divergent from oblivious http

1566
00:59:19,280 --> 00:59:21,680
um because of the different caching

1567
00:59:21,680 --> 00:59:23,359
semantics and in particular some of the

1568
00:59:23,359 --> 00:59:23,920
risks

1569
00:59:23,920 --> 00:59:26,160
involving the relationships among

1570
00:59:26,160 --> 00:59:27,200
different caches

1571
00:59:27,200 --> 00:59:30,839
in in the two different uh arenas

1572
00:59:30,839 --> 00:59:33,760
thanks thanks that's a

1573
00:59:33,760 --> 00:59:36,640
that's a great point um uh there are

1574
00:59:36,640 --> 00:59:38,400
subtle differences between this and oh

1575
00:59:38,400 --> 00:59:39,040
gttp

1576
00:59:39,040 --> 00:59:40,640
such that we couldn't just lift the

1577
00:59:40,640 --> 00:59:43,440
results that we get from obdo to ohutp

1578
00:59:43,440 --> 00:59:44,640
and call it a win

1579
00:59:44,640 --> 00:59:46,079
um we certainly have to be careful and

1580
00:59:46,079 --> 00:59:47,680
mindful in how in terms of how we do the

1581
00:59:47,680 --> 00:59:48,400
migration

1582
00:59:48,400 --> 00:59:52,799
um but our hope is that we can

1583
00:59:52,799 --> 00:59:55,599
use odo and track it alongside ohgp as

1584
00:59:55,599 --> 00:59:57,040
close as we can such that

1585
00:59:57,040 --> 00:59:58,640
the divergence and delta between these

1586
00:59:58,640 --> 01:00:00,720
two protocols is very minimal

1587
01:00:00,720 --> 01:00:04,160
and um it's not the delta is not due to

1588
01:00:04,160 --> 01:00:09,040
any like like a security or

1589
01:00:09,040 --> 01:00:11,200
crypto or whatever changes it's more

1590
01:00:11,200 --> 01:00:13,119
about like the differences between the

1591
01:00:13,119 --> 01:00:15,520
sort of underlying technologies like dns

1592
01:00:15,520 --> 01:00:16,720
versus http

1593
01:00:16,720 --> 01:00:21,439
um tommy

1594
01:00:22,559 --> 01:00:26,240
all right um yeah so first i think

1595
01:00:26,240 --> 01:00:29,200
ted for that point i think that's very

1596
01:00:29,200 --> 01:00:32,319
true and i think that

1597
01:00:32,559 --> 01:00:35,040
difference of scope is precisely why i

1598
01:00:35,040 --> 01:00:36,559
think it's interesting to

1599
01:00:36,559 --> 01:00:40,400
pursue the odo

1600
01:00:40,400 --> 01:00:42,559
experiment on its own now because that

1601
01:00:42,559 --> 01:00:43,680
scope is

1602
01:00:43,680 --> 01:00:46,000
i think more tractable um in the short

1603
01:00:46,000 --> 01:00:47,040
term

1604
01:00:47,040 --> 01:00:50,880
to the overall point of change control

1605
01:00:50,880 --> 01:00:54,079
um that was being brought up earlier

1606
01:00:54,079 --> 01:00:57,280
by ben and paul

1607
01:00:57,280 --> 01:00:58,960
i do want to make it very very clear

1608
01:00:58,960 --> 01:01:00,960
that

1609
01:01:00,960 --> 01:01:03,760
you know if it's adopted deprived as the

1610
01:01:03,760 --> 01:01:04,880
working group would of course have

1611
01:01:04,880 --> 01:01:06,640
complete change control

1612
01:01:06,640 --> 01:01:09,359
over the document over the protocol the

1613
01:01:09,359 --> 01:01:11,359
document is

1614
01:01:11,359 --> 01:01:14,880
already designed to be versioned

1615
01:01:14,880 --> 01:01:17,599
when we've been doing deployments

1616
01:01:17,599 --> 01:01:18,799
already

1617
01:01:18,799 --> 01:01:20,880
it essentially has a draft aligned

1618
01:01:20,880 --> 01:01:22,400
version number

1619
01:01:22,400 --> 01:01:24,880
this is very much taken from the

1620
01:01:24,880 --> 01:01:26,720
experience in quick

1621
01:01:26,720 --> 01:01:29,839
so i think you know that's a model in

1622
01:01:29,839 --> 01:01:31,119
which you saw that you know

1623
01:01:31,119 --> 01:01:32,960
quick has seen you know a lot of

1624
01:01:32,960 --> 01:01:34,960
deployment prior

1625
01:01:34,960 --> 01:01:38,400
to it being an rfc and

1626
01:01:38,400 --> 01:01:41,920
while i do strongly want to express that

1627
01:01:41,920 --> 01:01:45,200
you know we will be using this as an

1628
01:01:45,200 --> 01:01:45,839
experiment

1629
01:01:45,839 --> 01:01:49,040
and doing a deployment um it's also one

1630
01:01:49,040 --> 01:01:50,559
that's versioned and we would try to

1631
01:01:50,559 --> 01:01:53,280
keep it up to date and in line with

1632
01:01:53,280 --> 01:01:54,640
whatever the working group

1633
01:01:54,640 --> 01:01:56,240
wants if the working group was working

1634
01:01:56,240 --> 01:01:57,839
on this

1635
01:01:57,839 --> 01:02:00,319
so i don't think that should be anything

1636
01:02:00,319 --> 01:02:01,359
that

1637
01:02:01,359 --> 01:02:04,720
blocks us and um

1638
01:02:04,720 --> 01:02:07,359
yeah the authors would be very happy to

1639
01:02:07,359 --> 01:02:08,480
have

1640
01:02:08,480 --> 01:02:11,440
the beneficial input of the group on

1641
01:02:11,440 --> 01:02:14,319
improving the document

1642
01:02:14,880 --> 01:02:20,720
yeah thanks david

1643
01:02:20,720 --> 01:02:22,319
thanks sorry waiting for the microphone

1644
01:02:22,319 --> 01:02:25,440
to kick in so yeah davidskenazi

1645
01:02:25,440 --> 01:02:27,680
in this case my relationship to this is

1646
01:02:27,680 --> 01:02:29,760
uh my job for the last two years

1647
01:02:29,760 --> 01:02:32,799
has been making google quick

1648
01:02:32,799 --> 01:02:36,960
be itf quick and if we had said when we

1649
01:02:36,960 --> 01:02:38,400
started that effort

1650
01:02:38,400 --> 01:02:40,319
oh no no we can't bring this to the atf

1651
01:02:40,319 --> 01:02:42,240
because it's already deployed

1652
01:02:42,240 --> 01:02:45,440
we wouldn't have quick and i think

1653
01:02:45,440 --> 01:02:47,280
quick is a great thing for the internet

1654
01:02:47,280 --> 01:02:49,599
and the atf has brought great things to

1655
01:02:49,599 --> 01:02:50,079
quick

1656
01:02:50,079 --> 01:02:53,039
so not to believe the point and repeat

1657
01:02:53,039 --> 01:02:54,400
what tommy has said

1658
01:02:54,400 --> 01:02:56,960
we should do the exact same thing here

1659
01:02:56,960 --> 01:02:59,039
the fact that this is deployed

1660
01:02:59,039 --> 01:03:01,520
is a huge argument in favor of making

1661
01:03:01,520 --> 01:03:03,039
this happen at the ietf

1662
01:03:03,039 --> 01:03:06,160
not against we discussed running code

1663
01:03:06,160 --> 01:03:09,440
at this sdo and so i'm fully supportive

1664
01:03:09,440 --> 01:03:10,960
of moving this forward

1665
01:03:10,960 --> 01:03:12,400
even if we want to make it just

1666
01:03:12,400 --> 01:03:14,960
experimental at first or what have you

1667
01:03:14,960 --> 01:03:16,400
but the fact that there are deployments

1668
01:03:16,400 --> 01:03:18,640
is an argument to do this work

1669
01:03:18,640 --> 01:03:22,078
not to push back on

1670
01:03:23,119 --> 01:03:26,240
thanks david eric

1671
01:03:26,480 --> 01:03:29,039
yeah just a point i just thought of in

1672
01:03:29,039 --> 01:03:30,799
favor of why we want to have

1673
01:03:30,799 --> 01:03:34,240
oblivious doe be a thing even if h o htp

1674
01:03:34,240 --> 01:03:36,960
is potentially coming up soon it's

1675
01:03:36,960 --> 01:03:37,760
entirely

1676
01:03:37,760 --> 01:03:39,039
not necessarily likely but entirely

1677
01:03:39,039 --> 01:03:40,640
plausible to me that we could easily

1678
01:03:40,640 --> 01:03:41,680
have

1679
01:03:41,680 --> 01:03:44,559
we could easily find the proxy ecosystem

1680
01:03:44,559 --> 01:03:45,119
developed

1681
01:03:45,119 --> 01:03:47,119
for dns but not necessarily for the

1682
01:03:47,119 --> 01:03:48,319
general solution we

1683
01:03:48,319 --> 01:03:51,039
it seems to me that dns is a specific

1684
01:03:51,039 --> 01:03:53,520
case where the web is used to having

1685
01:03:53,520 --> 01:03:56,880
good samaritans servers show up and

1686
01:03:56,880 --> 01:04:00,000
be there without any necessarily direct

1687
01:04:00,000 --> 01:04:02,880
income potential and we could easily

1688
01:04:02,880 --> 01:04:04,400
find an ecosystem where

1689
01:04:04,400 --> 01:04:06,640
everyone who runs wants to run a public

1690
01:04:06,640 --> 01:04:08,960
odo resolver also runs a proxy to point

1691
01:04:08,960 --> 01:04:10,720
on the other public auto resolvers

1692
01:04:10,720 --> 01:04:11,760
versus

1693
01:04:11,760 --> 01:04:13,359
we could easily find ourselves five

1694
01:04:13,359 --> 01:04:15,599
years down the line that

1695
01:04:15,599 --> 01:04:19,039
no one wants to run ohps or proxies at

1696
01:04:19,039 --> 01:04:20,400
scale but we have

1697
01:04:20,400 --> 01:04:22,880
odo proxies at scale and we'll be very

1698
01:04:22,880 --> 01:04:25,599
happy we have odo as a possibility while

1699
01:04:25,599 --> 01:04:27,039
we still are trying to figure out how to

1700
01:04:27,039 --> 01:04:31,119
make the ecosystem exist for oh2p

1701
01:04:33,359 --> 01:04:36,720
yeah good point sir thank you

1702
01:04:36,880 --> 01:04:40,079
all right um thanks chris so just as a

1703
01:04:40,079 --> 01:04:40,960
note

1704
01:04:40,960 --> 01:04:43,839
uh the poll showed 25 people interested

1705
01:04:43,839 --> 01:04:44,799
in adoption

1706
01:04:44,799 --> 01:04:48,000
and 13 not interested in adoption

1707
01:04:48,000 --> 01:04:49,760
uh we'll ask the same question on the

1708
01:04:49,760 --> 01:04:51,920
mailing list so that we can get

1709
01:04:51,920 --> 01:04:54,319
more participation from from other other

1710
01:04:54,319 --> 01:04:55,839
people who may not be able to be in

1711
01:04:55,839 --> 01:04:57,599
today's session

1712
01:04:57,599 --> 01:04:59,200
so we'll we'll make that as an action

1713
01:04:59,200 --> 01:05:00,640
item for the chairs to

1714
01:05:00,640 --> 01:05:04,319
to solicit input from the working group

1715
01:05:04,319 --> 01:05:06,559
all right moving on uh we have peter

1716
01:05:06,559 --> 01:05:08,400
talking about

1717
01:05:08,400 --> 01:05:13,359
the opportunistic a dot work

1718
01:05:13,520 --> 01:05:16,880
yes hello can you

1719
01:05:16,880 --> 01:05:21,520
bring up the slides i am

1720
01:05:21,760 --> 01:05:26,720
in the process i see that

1721
01:05:34,559 --> 01:05:37,280
all yours peter all right can you hear

1722
01:05:37,280 --> 01:05:39,359
me well

1723
01:05:39,359 --> 01:05:42,799
yes we can all right um so my name is

1724
01:05:42,799 --> 01:05:44,480
peter van dyke i have been working with

1725
01:05:44,480 --> 01:05:46,000
paul hoffman

1726
01:05:46,000 --> 01:05:49,280
on a draft to basically solve the

1727
01:05:49,280 --> 01:05:51,200
working group charter's problems

1728
01:05:51,200 --> 01:05:54,480
or this part of them um

1729
01:05:54,480 --> 01:05:57,200
next slide please

1730
01:05:58,319 --> 01:06:00,799
just a reminder this is an adopted draft

1731
01:06:00,799 --> 01:06:01,440
although

1732
01:06:01,440 --> 01:06:03,839
a lot of changes have happened but if

1733
01:06:03,839 --> 01:06:06,799
you want other changes we will make them

1734
01:06:06,799 --> 01:06:09,440
next slide

1735
01:06:09,839 --> 01:06:11,760
the terminology slide is just for people

1736
01:06:11,760 --> 01:06:15,440
reading this later so we can skip that

1737
01:06:16,480 --> 01:06:19,359
next slide yeah thank you um so the

1738
01:06:19,359 --> 01:06:20,480
basic principle

1739
01:06:20,480 --> 01:06:22,640
of the this draft that has been

1740
01:06:22,640 --> 01:06:25,039
unchanged over various revisions

1741
01:06:25,039 --> 01:06:28,319
is the unauthenticated case uh if we

1742
01:06:28,319 --> 01:06:30,559
assume a resolver with an empty cache

1743
01:06:30,559 --> 01:06:34,799
it gets a query for say www.example.com

1744
01:06:34,799 --> 01:06:37,520
it goes to the root it goes to dot com

1745
01:06:37,520 --> 01:06:39,039
eventually it will learn the name

1746
01:06:39,039 --> 01:06:42,400
service for example.com

1747
01:06:42,400 --> 01:06:44,880
this resolver having no knowledge of the

1748
01:06:44,880 --> 01:06:47,039
availability of dot or any other

1749
01:06:47,039 --> 01:06:48,400
encrypted transport

1750
01:06:48,400 --> 01:06:50,960
for these authoritatives will ask this

1751
01:06:50,960 --> 01:06:51,520
question

1752
01:06:51,520 --> 01:06:55,839
over plain classic dns over port 53.

1753
01:06:55,839 --> 01:06:57,839
the resolver gets the answer from the

1754
01:06:57,839 --> 01:06:59,359
name servers it sends it

1755
01:06:59,359 --> 01:07:01,599
sends the answer to the clients to the

1756
01:07:01,599 --> 01:07:03,680
client and the client is now no longer

1757
01:07:03,680 --> 01:07:06,799
waiting so any magic happens

1758
01:07:06,799 --> 01:07:09,599
outside of the brief instant where the

1759
01:07:09,599 --> 01:07:12,160
client is waiting for an answer

1760
01:07:12,160 --> 01:07:14,559
now that the resolver is done responding

1761
01:07:14,559 --> 01:07:15,440
to the client

1762
01:07:15,440 --> 01:07:18,160
it goes out and learns whether these

1763
01:07:18,160 --> 01:07:20,400
name servers support dlt

1764
01:07:20,400 --> 01:07:22,480
the mechanism by which it learns this i

1765
01:07:22,480 --> 01:07:24,000
will cover later

1766
01:07:24,000 --> 01:07:26,839
the resolver then remembers that ns1 and

1767
01:07:26,839 --> 01:07:29,599
ns2.example.com support dot

1768
01:07:29,599 --> 01:07:31,200
then at some point another client might

1769
01:07:31,200 --> 01:07:34,079
come along ask for mail.example.com

1770
01:07:34,079 --> 01:07:36,400
and the resolver now still remembering

1771
01:07:36,400 --> 01:07:38,559
that dft is available

1772
01:07:38,559 --> 01:07:40,880
will do this query over the encrypted

1773
01:07:40,880 --> 01:07:42,319
transport

1774
01:07:42,319 --> 01:07:44,880
next slide

1775
01:07:45,920 --> 01:07:48,240
so a brief history of this draft the

1776
01:07:48,240 --> 01:07:50,079
first version

1777
01:07:50,079 --> 01:07:52,799
published by paul tried to do full

1778
01:07:52,799 --> 01:07:54,559
opportunistic as

1779
01:07:54,559 --> 01:07:58,160
described in 7435

1780
01:07:58,160 --> 01:08:02,319
um it's also at the mechanism

1781
01:08:02,319 --> 01:08:04,880
where the discovery happened after a

1782
01:08:04,880 --> 01:08:06,480
client was handled

1783
01:08:06,480 --> 01:08:08,799
discovery mechanism in that version of

1784
01:08:08,799 --> 01:08:10,079
draft was probing

1785
01:08:10,079 --> 01:08:13,920
the dft port being 853 or perhaps

1786
01:08:13,920 --> 01:08:16,479
another port if we decide that's

1787
01:08:16,479 --> 01:08:18,960
recursive to out dot we'll use a

1788
01:08:18,960 --> 01:08:22,319
different port and stop to recursive

1789
01:08:22,319 --> 01:08:24,640
uh that we then found out that the

1790
01:08:24,640 --> 01:08:26,000
working group

1791
01:08:26,000 --> 01:08:27,920
also had interest in a fully

1792
01:08:27,920 --> 01:08:29,600
authenticated

1793
01:08:29,600 --> 01:08:32,158
protocol for encrypted transport from

1794
01:08:32,158 --> 01:08:33,920
recursive to outs

1795
01:08:33,920 --> 01:08:36,399
so in the second version we added a

1796
01:08:36,399 --> 01:08:37,120
skeleton

1797
01:08:37,120 --> 01:08:39,040
of fully authenticated operation this

1798
01:08:39,040 --> 01:08:41,520
was definitely not fully worked out

1799
01:08:41,520 --> 01:08:45,040
but the point of this was to allow

1800
01:08:45,040 --> 01:08:46,880
unauthenticated opportunistic or

1801
01:08:46,880 --> 01:08:48,640
whatever you would call it to be

1802
01:08:48,640 --> 01:08:51,600
compatible interoperable with some fully

1803
01:08:51,600 --> 01:08:53,600
authenticated

1804
01:08:53,600 --> 01:08:56,960
defined protocol we switched to tlsa

1805
01:08:56,960 --> 01:08:57,520
here

1806
01:08:57,520 --> 01:09:00,960
because this avoids adding another cache

1807
01:09:00,960 --> 01:09:01,359
to

1808
01:09:01,359 --> 01:09:03,359
to the resolvers which the first version

1809
01:09:03,359 --> 01:09:06,640
called transport cache and the beauty of

1810
01:09:06,640 --> 01:09:08,560
using some dns records

1811
01:09:08,560 --> 01:09:11,600
for the discovery is that dns resolvers

1812
01:09:11,600 --> 01:09:13,198
generally already have

1813
01:09:13,198 --> 01:09:16,799
a record cache then shortly after we

1814
01:09:16,799 --> 01:09:17,759
publish this

1815
01:09:17,759 --> 01:09:20,719
the the draft from ecker and other

1816
01:09:20,719 --> 01:09:22,319
authors appeared

1817
01:09:22,319 --> 01:09:25,040
which uses svcb as a discovery magazine

1818
01:09:25,040 --> 01:09:26,319
mechanism

1819
01:09:26,319 --> 01:09:28,880
which means these two drafts now overlap

1820
01:09:28,880 --> 01:09:30,880
in some places conflicts

1821
01:09:30,880 --> 01:09:34,319
in some places and i suspect the next

1822
01:09:34,319 --> 01:09:36,158
version of our draft will be

1823
01:09:36,158 --> 01:09:39,198
shorter than the seconds but we will get

1824
01:09:39,198 --> 01:09:39,839
to that

1825
01:09:39,839 --> 01:09:43,040
next slide uh

1826
01:09:43,040 --> 01:09:45,120
just to put everybody on the same page

1827
01:09:45,120 --> 01:09:46,799
i'll be going through some

1828
01:09:46,799 --> 01:09:49,679
comparisons between the two drafts the

1829
01:09:49,679 --> 01:09:52,479
first two lines here are about my meme

1830
01:09:52,479 --> 01:09:56,000
my pulse drafts and a docs is the

1831
01:09:56,000 --> 01:09:57,840
draft that ecker will be presenting

1832
01:09:57,840 --> 01:10:00,320
after this so we use tlsa on dns name

1833
01:10:00,320 --> 01:10:01,760
for discovery

1834
01:10:01,760 --> 01:10:05,199
addox uses svcb on the ns name or

1835
01:10:05,199 --> 01:10:06,880
perhaps in the additional section from

1836
01:10:06,880 --> 01:10:07,600
the parent

1837
01:10:07,600 --> 01:10:10,480
if it turns out parents can and will

1838
01:10:10,480 --> 01:10:12,719
cooperate in that

1839
01:10:12,719 --> 01:10:16,800
we feel that we could change to svcb

1840
01:10:16,800 --> 01:10:19,840
to be compatible with the authenticated

1841
01:10:19,840 --> 01:10:20,640
draft

1842
01:10:20,640 --> 01:10:23,199
next slide

1843
01:10:25,199 --> 01:10:29,280
tlsa is very suitable for dot and doq

1844
01:10:29,280 --> 01:10:31,199
i think sarah mentioned something

1845
01:10:31,199 --> 01:10:33,280
similar in her presentation earlier as

1846
01:10:33,280 --> 01:10:34,480
well

1847
01:10:34,480 --> 01:10:37,600
but tlsa is not suitable for doh

1848
01:10:37,600 --> 01:10:40,800
the a docs draft that uses svcb

1849
01:10:40,800 --> 01:10:42,480
would make all three transports

1850
01:10:42,480 --> 01:10:45,040
supported and that is another reason it

1851
01:10:45,040 --> 01:10:47,120
might make sense for us to also change

1852
01:10:47,120 --> 01:10:49,040
to svcp

1853
01:10:49,040 --> 01:10:51,600
next slide

1854
01:10:52,800 --> 01:10:55,360
as for authentication we define two

1855
01:10:55,360 --> 01:10:55,840
modes

1856
01:10:55,840 --> 01:10:58,960
in the current draft for the undertaken

1857
01:10:58,960 --> 01:11:02,320
authenticated mode the tlsa or svcb is

1858
01:11:02,320 --> 01:11:05,600
just a signal there is no authentication

1859
01:11:05,600 --> 01:11:08,719
for the authenticated skeleton protocol

1860
01:11:08,719 --> 01:11:10,000
we defined

1861
01:11:10,000 --> 01:11:12,080
the tlsa from service discovery would

1862
01:11:12,080 --> 01:11:14,159
currently cover that

1863
01:11:14,159 --> 01:11:16,640
and for the adults draft if we read it

1864
01:11:16,640 --> 01:11:17,679
correctly and i'm sure

1865
01:11:17,679 --> 01:11:20,080
ecker will do a better story on that

1866
01:11:20,080 --> 01:11:22,560
after this than i can right now

1867
01:11:22,560 --> 01:11:25,760
the authentication might be web pki tlsa

1868
01:11:25,760 --> 01:11:26,400
from

1869
01:11:26,400 --> 01:11:29,519
from a second request

1870
01:11:30,000 --> 01:11:34,320
tlsa chained in the tls handshake

1871
01:11:34,320 --> 01:11:40,000
etc next slide

1872
01:11:40,000 --> 01:11:41,360
here we get to the interesting

1873
01:11:41,360 --> 01:11:43,760
differences um

1874
01:11:43,760 --> 01:11:45,920
this title is written very specifically

1875
01:11:45,920 --> 01:11:47,280
the resolution

1876
01:11:47,280 --> 01:11:50,960
if no service is found in the cache

1877
01:11:50,960 --> 01:11:52,640
so as i mentioned earlier when

1878
01:11:52,640 --> 01:11:54,480
describing the protocol

1879
01:11:54,480 --> 01:11:57,600
from an empty cache

1880
01:11:57,600 --> 01:12:00,080
the unout case would just use classic

1881
01:12:00,080 --> 01:12:02,159
dns over 53

1882
01:12:02,159 --> 01:12:05,360
then later go figure out if tls or

1883
01:12:05,360 --> 01:12:09,040
the oq whatever is available at all

1884
01:12:09,040 --> 01:12:10,880
for the authenticated case of course you

1885
01:12:10,880 --> 01:12:12,159
need to do that look up

1886
01:12:12,159 --> 01:12:14,320
first while the client is waiting and

1887
01:12:14,320 --> 01:12:16,400
the a doc's draft which is i think

1888
01:12:16,400 --> 01:12:18,400
authenticated obviously also needs a

1889
01:12:18,400 --> 01:12:20,159
lookup first

1890
01:12:20,159 --> 01:12:23,839
next slide

1891
01:12:24,800 --> 01:12:28,080
now assuming that things are in cash

1892
01:12:28,080 --> 01:12:30,800
either from previous from a previous

1893
01:12:30,800 --> 01:12:32,080
attempt or

1894
01:12:32,080 --> 01:12:34,880
because the lookup has been done before

1895
01:12:34,880 --> 01:12:35,520
the client

1896
01:12:35,520 --> 01:12:38,480
even can get can even get results in the

1897
01:12:38,480 --> 01:12:39,760
authenticated case

1898
01:12:39,760 --> 01:12:42,159
we try every encrypted transport to

1899
01:12:42,159 --> 01:12:43,440
every server

1900
01:12:43,440 --> 01:12:46,239
if all of that fails again we go back to

1901
01:12:46,239 --> 01:12:48,000
do 53

1902
01:12:48,000 --> 01:12:51,600
for our authenticated case if

1903
01:12:51,600 --> 01:12:54,719
encrypted transport is available but we

1904
01:12:54,719 --> 01:12:55,920
cannot make it work

1905
01:12:55,920 --> 01:12:59,199
we fail the adox draft says you should

1906
01:12:59,199 --> 01:13:00,239
try all

1907
01:13:00,239 --> 01:13:03,760
and currently is a bit open on the

1908
01:13:03,760 --> 01:13:07,199
handling of the full error condition

1909
01:13:07,199 --> 01:13:10,080
next slide please

1910
01:13:12,960 --> 01:13:15,760
now if you can connect but you cannot

1911
01:13:15,760 --> 01:13:17,040
authenticate

1912
01:13:17,040 --> 01:13:18,800
then the unauthenticated case just

1913
01:13:18,800 --> 01:13:20,239
ignores the failure and

1914
01:13:20,239 --> 01:13:23,280
might get encrypted transport that has

1915
01:13:23,280 --> 01:13:25,440
not been verified but is still

1916
01:13:25,440 --> 01:13:28,480
safe to passive attackers etc uh

1917
01:13:28,480 --> 01:13:30,800
the authenticated case in the adopts

1918
01:13:30,800 --> 01:13:31,679
case

1919
01:13:31,679 --> 01:13:35,280
of course fill the connection then and

1920
01:13:35,280 --> 01:13:38,239
here it is clear that's the first two

1921
01:13:38,239 --> 01:13:39,040
items being

1922
01:13:39,040 --> 01:13:41,120
being in our draft and it's the third

1923
01:13:41,120 --> 01:13:43,360
item being in the a doc draft

1924
01:13:43,360 --> 01:13:46,080
is a weird split so maybe our

1925
01:13:46,080 --> 01:13:48,159
authenticated case should go away or

1926
01:13:48,159 --> 01:13:49,040
move into the

1927
01:13:49,040 --> 01:13:54,719
adopts draft next slide please

1928
01:13:57,040 --> 01:13:59,360
so to recap our document started as

1929
01:13:59,360 --> 01:14:00,880
opportunistic

1930
01:14:00,880 --> 01:14:04,239
then we added at least some room for

1931
01:14:04,239 --> 01:14:06,400
combining or being synchronized with an

1932
01:14:06,400 --> 01:14:08,560
authenticated case

1933
01:14:08,560 --> 01:14:10,480
when there was no other document doing

1934
01:14:10,480 --> 01:14:13,120
that now that the a docs draft is under

1935
01:14:13,120 --> 01:14:15,280
active consideration

1936
01:14:15,280 --> 01:14:17,120
we think it would make sense if we

1937
01:14:17,120 --> 01:14:18,800
remove all authentication

1938
01:14:18,800 --> 01:14:21,120
from this document while keeping the

1939
01:14:21,120 --> 01:14:23,760
discovery mechanism in

1940
01:14:23,760 --> 01:14:25,360
although we've probably switched from

1941
01:14:25,360 --> 01:14:29,520
tlsa to svcp for that

1942
01:14:29,520 --> 01:14:32,960
and depending on how things play out

1943
01:14:32,960 --> 01:14:36,000
in publication it might make sense to

1944
01:14:36,000 --> 01:14:38,640
move discovery into a third document

1945
01:14:38,640 --> 01:14:41,520
that would then come before both the

1946
01:14:41,520 --> 01:14:42,960
unauthenticated and the

1947
01:14:42,960 --> 01:14:46,320
authenticated document that is all i

1948
01:14:46,320 --> 01:14:46,719
have

1949
01:14:46,719 --> 01:14:48,880
and i agreed with the chairs that ecker

1950
01:14:48,880 --> 01:14:50,560
would present now first

1951
01:14:50,560 --> 01:14:52,880
and we can do all questions after that

1952
01:14:52,880 --> 01:14:56,480
thank you

1953
01:14:56,480 --> 01:14:59,040
thanks peter

1954
01:15:07,120 --> 01:15:09,199
all right okay you're saying this line

1955
01:15:09,199 --> 01:15:11,839
it's great

1956
01:15:16,800 --> 01:15:20,960
uh there you go perfect

1957
01:15:20,960 --> 01:15:23,120
um so i'll just yell next slides already

1958
01:15:23,120 --> 01:15:24,080
um so

1959
01:15:24,080 --> 01:15:26,400
that thanks thanks for that overview um

1960
01:15:26,400 --> 01:15:27,600
uh peter

1961
01:15:27,600 --> 01:15:30,719
um uh so um as you said this

1962
01:15:30,719 --> 01:15:32,480
that came in a little late um uh

1963
01:15:32,480 --> 01:15:34,080
hilariously the draft is actually called

1964
01:15:34,080 --> 01:15:35,440
draft for squirrel d private's the

1965
01:15:35,440 --> 01:15:37,120
latest because uh when the secretary had

1966
01:15:37,120 --> 01:15:38,000
hoisted it out of the

1967
01:15:38,000 --> 01:15:39,760
repository they didn't substitute latest

1968
01:15:39,760 --> 01:15:41,679
with zero zero but there we are

1969
01:15:41,679 --> 01:15:44,239
um so um in some future version of what

1970
01:15:44,239 --> 01:15:44,880
we only

1971
01:15:44,880 --> 01:15:47,440
will not have latest on the end um uh

1972
01:15:47,440 --> 01:15:48,159
but thank you

1973
01:15:48,159 --> 01:15:49,199
for the secretary for doing and thanks

1974
01:15:49,199 --> 01:15:51,440
for eric for approving that um so

1975
01:15:51,440 --> 01:15:53,520
um uh there's always been a bunch of

1976
01:15:53,520 --> 01:15:54,480
discussion about

1977
01:15:54,480 --> 01:15:57,040
uh about how you would do this and so we

1978
01:15:57,040 --> 01:15:58,159
try to take a crack at it

1979
01:15:58,159 --> 01:16:02,159
using service b next slide um

1980
01:16:02,159 --> 01:16:04,640
and um okay so um i'll actually want to

1981
01:16:04,640 --> 01:16:06,159
take a step back um

1982
01:16:06,159 --> 01:16:09,760
from uh uh the uh the question mechanism

1983
01:16:09,760 --> 01:16:10,880
and talk about threat model first

1984
01:16:10,880 --> 01:16:11,840
because i think it's helpful to think

1985
01:16:11,840 --> 01:16:12,239
about

1986
01:16:12,239 --> 01:16:13,600
a lot of discussion has gone back and

1987
01:16:13,600 --> 01:16:15,600
forth but i think has um

1988
01:16:15,600 --> 01:16:17,120
you know left us in kind of a confusing

1989
01:16:17,120 --> 01:16:19,440
situation um about what can and cannot

1990
01:16:19,440 --> 01:16:20,960
be done so i want to talk first about

1991
01:16:20,960 --> 01:16:22,159
like what we're trying to accomplish and

1992
01:16:22,159 --> 01:16:23,280
then what the constraints are

1993
01:16:23,280 --> 01:16:25,600
that i see are and those kind of apply i

1994
01:16:25,600 --> 01:16:27,040
think regardless of whether exactly what

1995
01:16:27,040 --> 01:16:28,320
you know how you spell

1996
01:16:28,320 --> 01:16:30,960
indications so um you know there are

1997
01:16:30,960 --> 01:16:32,239
three threat models we talked about i

1998
01:16:32,239 --> 01:16:32,560
think

1999
01:16:32,560 --> 01:16:36,239
um uh one is um uh you know the classic

2000
01:16:36,239 --> 01:16:37,840
352 threat model um

2001
01:16:37,840 --> 01:16:40,159
where the attacker controls is on path

2002
01:16:40,159 --> 01:16:41,360
and um

2003
01:16:41,360 --> 01:16:44,080
um uh an active attacker on path between

2004
01:16:44,080 --> 01:16:45,600
the recursive and all the authoritatives

2005
01:16:45,600 --> 01:16:47,199
um you know this is like often the

2006
01:16:47,199 --> 01:16:48,320
critical calls that don't live yeah

2007
01:16:48,320 --> 01:16:48,960
attacker

2008
01:16:48,960 --> 01:16:51,199
um then we have a passive attacker on

2009
01:16:51,199 --> 01:16:53,120
pathfinder curse of all authoritatives

2010
01:16:53,120 --> 01:16:55,040
and then we have some edge case um where

2011
01:16:55,040 --> 01:16:56,239
the password hacker is on top of the

2012
01:16:56,239 --> 01:16:57,760
recursive and some authoritatives

2013
01:16:57,760 --> 01:16:59,280
um so that's probably worth considering

2014
01:16:59,280 --> 01:17:00,800
but i'm not considering it here

2015
01:17:00,800 --> 01:17:03,280
um so i'm assuming that the the attacker

2016
01:17:03,280 --> 01:17:04,800
at minimum can see all the traffic

2017
01:17:04,800 --> 01:17:05,840
coming out of the recursive

2018
01:17:05,840 --> 01:17:08,239
um and and um and maybe can tamper with

2019
01:17:08,239 --> 01:17:09,120
it um

2020
01:17:09,120 --> 01:17:10,640
and that becomes relevant shortly when

2021
01:17:10,640 --> 01:17:12,719
we think about um uh uh what works or

2022
01:17:12,719 --> 01:17:13,920
what doesn't work

2023
01:17:13,920 --> 01:17:16,880
um um also um before i move the next

2024
01:17:16,880 --> 01:17:18,560
slide i want to point out that like

2025
01:17:18,560 --> 01:17:19,679
we're gonna we're in a bit of a funny

2026
01:17:19,679 --> 01:17:21,840
state here where um and we'll see as we

2027
01:17:21,840 --> 01:17:23,199
get the dns sec where

2028
01:17:23,199 --> 01:17:25,920
uh you know where we're tls is providing

2029
01:17:25,920 --> 01:17:26,480
we're

2030
01:17:26,480 --> 01:17:28,239
although dns is the ultimate backstop

2031
01:17:28,239 --> 01:17:29,520
for integrity um

2032
01:17:29,520 --> 01:17:32,400
integrity and authentic and on data

2033
01:17:32,400 --> 01:17:33,600
origin authentication

2034
01:17:33,600 --> 01:17:35,679
um are intertwined with confidentiality

2035
01:17:35,679 --> 01:17:36,719
and sort of annoying way

2036
01:17:36,719 --> 01:17:38,320
um that will make our lives harder next

2037
01:17:38,320 --> 01:17:40,559
slide

2038
01:17:43,120 --> 01:17:44,239
so i think the first question we have to

2039
01:17:44,239 --> 01:17:46,320
ask is what needs to be encrypted um

2040
01:17:46,320 --> 01:17:48,480
and um and i think this is obvious but i

2041
01:17:48,480 --> 01:17:50,000
want to like just hammer it home

2042
01:17:50,000 --> 01:17:51,600
um generally need to encrypt the traffic

2043
01:17:51,600 --> 01:17:53,280
of both the parent and the child

2044
01:17:53,280 --> 01:17:56,400
and the reason for that is that um the

2045
01:17:56,400 --> 01:17:58,480
sort of common case is effectively that

2046
01:17:58,480 --> 01:17:59,600
you're resolving

2047
01:17:59,600 --> 01:18:02,800
like example.com right um and

2048
01:18:02,800 --> 01:18:06,159
so um uh so um

2049
01:18:06,159 --> 01:18:07,440
you know if i go to the if i go to dot

2050
01:18:07,440 --> 01:18:09,280
com and i ask for example.com

2051
01:18:09,280 --> 01:18:11,040
well that that query reveals asking for

2052
01:18:11,040 --> 01:18:12,520
example.com and then i go to

2053
01:18:12,520 --> 01:18:13,679
ns.server.example

2054
01:18:13,679 --> 01:18:15,440
even if it's not run by example.com it's

2055
01:18:15,440 --> 01:18:17,199
run by somebody else that also works

2056
01:18:17,199 --> 01:18:18,640
with the querysample.com

2057
01:18:18,640 --> 01:18:20,159
um and so both these need to be

2058
01:18:20,159 --> 01:18:21,600
encrypted or you don't get any real

2059
01:18:21,600 --> 01:18:22,159
value

2060
01:18:22,159 --> 01:18:24,320
um and like there are there's edge cases

2061
01:18:24,320 --> 01:18:25,360
that's not true um

2062
01:18:25,360 --> 01:18:26,320
you know we're asking for like

2063
01:18:26,320 --> 01:18:28,480
x.example.com where like x is like you

2064
01:18:28,480 --> 01:18:28,960
know

2065
01:18:28,960 --> 01:18:32,400
not just uh you know where we're where x

2066
01:18:32,400 --> 01:18:34,480
is uh part of some large anonymity set

2067
01:18:34,480 --> 01:18:36,560
uh it's not like www

2068
01:18:36,560 --> 01:18:38,080
but um basically we know when

2069
01:18:38,080 --> 01:18:40,159
example.com only has

2070
01:18:40,159 --> 01:18:42,640
uh you know only only has like two like

2071
01:18:42,640 --> 01:18:43,440
children under it

2072
01:18:43,440 --> 01:18:46,159
um male and wwe like or worse yet it's

2073
01:18:46,159 --> 01:18:47,520
just example.com you're not getting very

2074
01:18:47,520 --> 01:18:48,239
much value

2075
01:18:48,239 --> 01:18:50,400
um out of um only encrypting the second

2076
01:18:50,400 --> 01:18:51,280
query or the

2077
01:18:51,280 --> 01:18:53,280
to the the real authoritative if you

2078
01:18:53,280 --> 01:18:55,120
don't also encrypt the create the parent

2079
01:18:55,120 --> 01:18:57,760
so um so i think that that's like a

2080
01:18:57,760 --> 01:18:59,199
really important insight to have because

2081
01:18:59,199 --> 01:19:00,080
it means that some of the things you

2082
01:19:00,080 --> 01:19:00,400
might

2083
01:19:00,400 --> 01:19:01,679
naturally think you want to try will not

2084
01:19:01,679 --> 01:19:03,199
work properly or will not get you the

2085
01:19:03,199 --> 01:19:04,239
value you're trying to get

2086
01:19:04,239 --> 01:19:07,520
um um i hear people um i i did see there

2087
01:19:07,520 --> 01:19:08,080
was asking

2088
01:19:08,080 --> 01:19:10,400
for uh um uh uh questions at the end but

2089
01:19:10,400 --> 01:19:11,440
if anybody's like strong disagreement

2090
01:19:11,440 --> 01:19:12,320
with something i'm saying

2091
01:19:12,320 --> 01:19:13,760
like i think it's like actively wrong i

2092
01:19:13,760 --> 01:19:15,840
suppose just dumb like please do pipe up

2093
01:19:15,840 --> 01:19:16,560
because like

2094
01:19:16,560 --> 01:19:18,239
it's important to get these things clear

2095
01:19:18,239 --> 01:19:20,239
um and like and everything i'm gonna say

2096
01:19:20,239 --> 01:19:22,159
proceeds from this basic analysis

2097
01:19:22,159 --> 01:19:26,159
next slide so okay so the basic idea

2098
01:19:26,159 --> 01:19:26,960
here um

2099
01:19:26,960 --> 01:19:28,800
um as peter suggested is to use service

2100
01:19:28,800 --> 01:19:30,239
speed um so

2101
01:19:30,239 --> 01:19:32,719
um uh http is also saying we've been

2102
01:19:32,719 --> 01:19:33,600
working generally

2103
01:19:33,600 --> 01:19:36,159
um so um so the key idea is the

2104
01:19:36,159 --> 01:19:38,080
authoritative has an svcb record

2105
01:19:38,080 --> 01:19:39,760
um and the sgt parker indicates two

2106
01:19:39,760 --> 01:19:41,840
things one it supports encryption

2107
01:19:41,840 --> 01:19:43,679
and two what protocols um you'd like to

2108
01:19:43,679 --> 01:19:45,840
support um it actually may serve on

2109
01:19:45,840 --> 01:19:46,719
three things

2110
01:19:46,719 --> 01:19:50,000
um uh it may also serve um which

2111
01:19:50,000 --> 01:19:52,159
form authentications you expect to um

2112
01:19:52,159 --> 01:19:53,840
authenticate with but we can um

2113
01:19:53,840 --> 01:19:56,320
do that in a minute um uh i probably

2114
01:19:56,320 --> 01:19:57,840
should highlight this point um

2115
01:19:57,840 --> 01:19:59,760
i think for uh for operational reasons

2116
01:19:59,760 --> 01:20:01,040
it probably generally you're gonna want

2117
01:20:01,040 --> 01:20:02,480
it served by the parent initial data but

2118
01:20:02,480 --> 01:20:03,840
we can get to exactly when this needed

2119
01:20:03,840 --> 01:20:04,800
whether it's not in a minute

2120
01:20:04,800 --> 01:20:05,760
um but that's definitely part of the

2121
01:20:05,760 --> 01:20:08,320
concept here um so once you have this

2122
01:20:08,320 --> 01:20:09,360
vcb in hand

2123
01:20:09,360 --> 01:20:10,639
you're you connect to the indicated

2124
01:20:10,639 --> 01:20:11,760
server with whatever the negative

2125
01:20:11,760 --> 01:20:12,639
protocol is

2126
01:20:12,639 --> 01:20:15,120
um and you authenticate um as i put it

2127
01:20:15,120 --> 01:20:16,400
here in the usual fashion

2128
01:20:16,400 --> 01:20:18,000
um namely this is not take a position on

2129
01:20:18,000 --> 01:20:19,360
how you authenticate um though again

2130
01:20:19,360 --> 01:20:20,159
i'll get that later

2131
01:20:20,159 --> 01:20:23,280
um if you um you you if you can't

2132
01:20:23,280 --> 01:20:24,639
once you've gone through like all the

2133
01:20:24,639 --> 01:20:25,840
different options of like all the

2134
01:20:25,840 --> 01:20:26,880
different name servers all different

2135
01:20:26,880 --> 01:20:27,920
protocols you support

2136
01:20:27,920 --> 01:20:30,480
um then you hard fail uh when you can't

2137
01:20:30,480 --> 01:20:31,920
negotiate um uh

2138
01:20:31,920 --> 01:20:34,159
uh if the others work hard fail um there

2139
01:20:34,159 --> 01:20:35,199
is i think um

2140
01:20:35,199 --> 01:20:36,480
one special case which i'll get to in a

2141
01:20:36,480 --> 01:20:38,400
minute um where you might fall back

2142
01:20:38,400 --> 01:20:41,760
um uh uh roughly that case is that

2143
01:20:41,760 --> 01:20:43,360
none of the authentication mechanisms

2144
01:20:43,360 --> 01:20:45,440
that the the server

2145
01:20:45,440 --> 01:20:48,320
claims the support you support um next

2146
01:20:48,320 --> 01:20:50,639
slide

2147
01:20:50,719 --> 01:20:52,719
so um here's like the same diagram

2148
01:20:52,719 --> 01:20:54,159
except like with you know

2149
01:20:54,159 --> 01:20:56,320
um me not bothering to color things in

2150
01:20:56,320 --> 01:20:57,920
um uh you know

2151
01:20:57,920 --> 01:21:00,960
um that they're tls um and indicating

2152
01:21:00,960 --> 01:21:02,639
this uh glue record being sent

2153
01:21:02,639 --> 01:21:04,800
um so like this glue we're gonna like a

2154
01:21:04,800 --> 01:21:05,920
real point of contention so i'm gonna

2155
01:21:05,920 --> 01:21:06,320
get to

2156
01:21:06,320 --> 01:21:07,360
i get that in a second but i think

2157
01:21:07,360 --> 01:21:08,400
there's like important reasons why you

2158
01:21:08,400 --> 01:21:09,679
probably need it um

2159
01:21:09,679 --> 01:21:15,840
next slide

2160
01:21:16,080 --> 01:21:19,199
okay so right so so what if you can't so

2161
01:21:19,199 --> 01:21:19,679
some people

2162
01:21:19,679 --> 01:21:21,280
the real suggestion that you can't use

2163
01:21:21,280 --> 01:21:23,360
um the glue in the digital data

2164
01:21:23,360 --> 01:21:27,600
um so um uh

2165
01:21:27,600 --> 01:21:29,600
basically um so the fallback in case you

2166
01:21:29,600 --> 01:21:31,199
don't have glue is the recursive

2167
01:21:31,199 --> 01:21:32,800
can connect to the nominal authoritative

2168
01:21:32,800 --> 01:21:34,239
namely we would receive an ns record

2169
01:21:34,239 --> 01:21:37,280
and ask for sc f svcb um

2170
01:21:37,280 --> 01:21:39,440
um given that you have no indicate in a

2171
01:21:39,440 --> 01:21:40,880
naive case you have no indication that

2172
01:21:40,880 --> 01:21:42,320
the nominal authoritative

2173
01:21:42,320 --> 01:21:46,320
um has um uh um

2174
01:21:46,320 --> 01:21:49,600
um uh has um

2175
01:21:49,600 --> 01:21:51,920
uh you know supports tls and so you're

2176
01:21:51,920 --> 01:21:53,520
gonna do it over 253 at best you're

2177
01:21:53,520 --> 01:21:55,120
gonna opportunistically because again we

2178
01:21:55,120 --> 01:21:56,400
have this we have this with this uh you

2179
01:21:56,400 --> 01:21:58,400
know we have this uh chicken egg problem

2180
01:21:58,400 --> 01:22:00,080
where i i only have the ns record i

2181
01:22:00,080 --> 01:22:01,920
don't know i don't know the server that

2182
01:22:01,920 --> 01:22:03,199
i'm gonna support connection with tls

2183
01:22:03,199 --> 01:22:04,320
actually supports tls

2184
01:22:04,320 --> 01:22:06,639
um so like this only like really works

2185
01:22:06,639 --> 01:22:08,080
properly in two cases

2186
01:22:08,080 --> 01:22:11,360
um uh or in one actually i guess in one

2187
01:22:11,360 --> 01:22:12,800
case that has two requirements

2188
01:22:12,800 --> 01:22:14,880
one of which i didn't lay out um first

2189
01:22:14,880 --> 01:22:16,320
um it only works if the authoritative

2190
01:22:16,320 --> 01:22:17,600
zone is dns signed

2191
01:22:17,600 --> 01:22:20,880
the sx signed because otherwise um then

2192
01:22:20,880 --> 01:22:22,480
whatever information you receive about

2193
01:22:22,480 --> 01:22:23,920
like whether it supports this pcb it's

2194
01:22:23,920 --> 01:22:25,440
just like lies basically and you have an

2195
01:22:25,440 --> 01:22:26,159
active attacker

2196
01:22:26,159 --> 01:22:29,120
on on the pipeline it also only works um

2197
01:22:29,120 --> 01:22:30,159
like really well

2198
01:22:30,159 --> 01:22:33,440
um if uh um

2199
01:22:33,440 --> 01:22:36,719
if there's um if it's in if

2200
01:22:36,719 --> 01:22:39,840
it's a

2201
01:22:39,840 --> 01:22:41,440
if it's a zone which doesn't like not

2202
01:22:41,440 --> 01:22:42,719
responsible think itself because

2203
01:22:42,719 --> 01:22:43,360
otherwise

2204
01:22:43,360 --> 01:22:45,760
um uh other otherwise you're asking for

2205
01:22:45,760 --> 01:22:46,639
the so if

2206
01:22:46,639 --> 01:22:49,000
if you know if example.com is served by

2207
01:22:49,000 --> 01:22:50,159
ns.example.com

2208
01:22:50,159 --> 01:22:51,280
then when you connect with that for

2209
01:22:51,280 --> 01:22:52,560
example.com you're just kind of like a

2210
01:22:52,560 --> 01:22:54,000
hulk you've already asked for it and you

2211
01:22:54,000 --> 01:22:55,360
didn't use tls so it's kind of like game

2212
01:22:55,360 --> 01:22:56,000
over

2213
01:22:56,000 --> 01:22:59,280
um so um uh so so

2214
01:22:59,280 --> 01:23:00,639
again i think so i think this is only

2215
01:23:00,639 --> 01:23:01,840
the glue is actually pretty important if

2216
01:23:01,840 --> 01:23:02,960
we want to get wide deployment given

2217
01:23:02,960 --> 01:23:03,920
that we don't have anything like

2218
01:23:03,920 --> 01:23:05,440
universal dns to deployment

2219
01:23:05,440 --> 01:23:09,520
um yes paul

2220
01:23:09,520 --> 01:23:12,239
oh now my

2221
01:23:15,600 --> 01:23:21,840
i can't make you live

2222
01:23:25,679 --> 01:23:27,920
paul

2223
01:23:28,880 --> 01:23:30,000
okay i guess i'm going to move on i'm

2224
01:23:30,000 --> 01:23:32,840
gonna pause that behind you on a pole or

2225
01:23:32,840 --> 01:23:34,400
bend

2226
01:23:34,400 --> 01:23:37,120
hi uh so i think there's even another

2227
01:23:37,120 --> 01:23:37,920
reason

2228
01:23:37,920 --> 01:23:40,880
uh that makes this insecure which is

2229
01:23:40,880 --> 01:23:41,360
that

2230
01:23:41,360 --> 01:23:44,560
uh the the ns the name that you are

2231
01:23:44,560 --> 01:23:45,520
connecting to

2232
01:23:45,520 --> 01:23:48,639
even if it uh is the nsx signed

2233
01:23:48,639 --> 01:23:51,440
and has a service b record could be the

2234
01:23:51,440 --> 01:23:52,639
attacker

2235
01:23:52,639 --> 01:23:54,400
because you didn't get it over an

2236
01:23:54,400 --> 01:23:56,239
authoritative channel even if the parent

2237
01:23:56,239 --> 01:23:57,360
is signed

2238
01:23:57,360 --> 01:23:59,040
because the parent can't sign the glue

2239
01:23:59,040 --> 01:24:00,400
records right right

2240
01:24:00,400 --> 01:24:02,159
exactly right so the the child assigned

2241
01:24:02,159 --> 01:24:03,199
the glue records but you've already

2242
01:24:03,199 --> 01:24:05,120
asked for the child

2243
01:24:05,120 --> 01:24:07,040
uh right even if it's out of baileywick

2244
01:24:07,040 --> 01:24:08,400
there's there's just no

2245
01:24:08,400 --> 01:24:10,800
anyway uh i think there's one more

2246
01:24:10,800 --> 01:24:11,440
reason why

2247
01:24:11,440 --> 01:24:14,560
why this doesn't work okay so

2248
01:24:14,560 --> 01:24:16,639
um paul if you ever forgot how to get

2249
01:24:16,639 --> 01:24:17,760
water bowl um

2250
01:24:17,760 --> 01:24:20,960
i'll shut up i don't let you talk um

2251
01:24:20,960 --> 01:24:24,159
okay next slide please oh sorry sorry

2252
01:24:24,159 --> 01:24:25,679
can you back for a second um

2253
01:24:25,679 --> 01:24:28,719
uh back back one slide uh

2254
01:24:28,719 --> 01:24:30,320
um i will note there's one special case

2255
01:24:30,320 --> 01:24:32,400
which is um paul i think observed an

2256
01:24:32,400 --> 01:24:33,600
email that people aren't going to want

2257
01:24:33,600 --> 01:24:34,480
to serve sc

2258
01:24:34,480 --> 01:24:37,679
fcc in blue in glue um um however um

2259
01:24:37,679 --> 01:24:38,960
currently the root zone actually for

2260
01:24:38,960 --> 01:24:41,280
busy serving as as vcb

2261
01:24:41,280 --> 01:24:44,239
um at all um but like there's a like as

2262
01:24:44,239 --> 01:24:45,679
a temporary fix where you like basically

2263
01:24:45,679 --> 01:24:47,199
pre-configure the recursives or the tls

2264
01:24:47,199 --> 01:24:49,280
status for all the tld authoritatives um

2265
01:24:49,280 --> 01:24:49,600
which

2266
01:24:49,600 --> 01:24:50,719
aren't like an enormous number it's not

2267
01:24:50,719 --> 01:24:52,719
amazing but it's like possible um you

2268
01:24:52,719 --> 01:24:53,679
certainly wouldn't want it for the next

2269
01:24:53,679 --> 01:24:54,639
level ones

2270
01:24:54,639 --> 01:24:58,000
uh next slide um

2271
01:24:58,000 --> 01:25:00,080
so like i want to hit on this like i

2272
01:25:00,080 --> 01:25:01,520
think ben was just saying this like

2273
01:25:01,520 --> 01:25:02,880
aren't you trusting the parent and the

2274
01:25:02,880 --> 01:25:04,560
answer is absolutely just apparent

2275
01:25:04,560 --> 01:25:06,480
um and the re and this is the part where

2276
01:25:06,480 --> 01:25:08,159
like tls is actually writing integrity

2277
01:25:08,159 --> 01:25:08,639
and

2278
01:25:08,639 --> 01:25:11,120
and data identification and not just um

2279
01:25:11,120 --> 01:25:12,239
um

2280
01:25:12,239 --> 01:25:15,440
and not just um uh um

2281
01:25:15,440 --> 01:25:19,280
uh uh and and not just uh

2282
01:25:19,280 --> 01:25:22,000
uh confidentiality and the reason is ben

2283
01:25:22,000 --> 01:25:23,280
just said you need to get the ns record

2284
01:25:23,280 --> 01:25:24,480
for the child otherwise you like have to

2285
01:25:24,480 --> 01:25:26,239
worry about like the hacker lying to you

2286
01:25:26,239 --> 01:25:28,239
um so i'll finish this i'll finish

2287
01:25:28,239 --> 01:25:29,840
talking in this slide paul and then go

2288
01:25:29,840 --> 01:25:31,920
out of your way um so like dns does help

2289
01:25:31,920 --> 01:25:33,440
here in the sense that like

2290
01:25:33,440 --> 01:25:35,040
um that even though the ns represents

2291
01:25:35,040 --> 01:25:36,159
the parents that are unsigned by the

2292
01:25:36,159 --> 01:25:36,639
time

2293
01:25:36,639 --> 01:25:38,560
um when you catch the child you can tell

2294
01:25:38,560 --> 01:25:40,080
like that you were just lied to but at

2295
01:25:40,080 --> 01:25:41,040
that point you've already connected the

2296
01:25:41,040 --> 01:25:42,239
server and found out that the ns records

2297
01:25:42,239 --> 01:25:43,600
are like bad but you've already sent

2298
01:25:43,600 --> 01:25:44,239
stuff over

2299
01:25:44,239 --> 01:25:46,320
so um um and of course you've also

2300
01:25:46,320 --> 01:25:47,679
already revealed what you're trying to

2301
01:25:47,679 --> 01:25:49,040
do to the parents or the parents lying

2302
01:25:49,040 --> 01:25:50,000
you're kind of in real trouble

2303
01:25:50,000 --> 01:25:51,760
um so basically the bottom line is like

2304
01:25:51,760 --> 01:25:52,639
you need to trust the parent and the

2305
01:25:52,639 --> 01:25:53,920
child together or like the things you

2306
01:25:53,920 --> 01:25:54,960
just came over

2307
01:25:54,960 --> 01:25:58,560
uh paul okay so so we

2308
01:25:58,560 --> 01:26:02,000
came here now yes yeah okay great sorry

2309
01:26:02,000 --> 01:26:05,360
um so it's not about like

2310
01:26:05,360 --> 01:26:07,440
people not wanting to serve as vcb

2311
01:26:07,440 --> 01:26:08,880
records at the parent right it's just

2312
01:26:08,880 --> 01:26:10,719
the infrastructure we have currently has

2313
01:26:10,719 --> 01:26:12,400
absolutely no support of

2314
01:26:12,400 --> 01:26:14,560
of sending those via ebp and other

2315
01:26:14,560 --> 01:26:16,560
mechanisms from the child to the parent

2316
01:26:16,560 --> 01:26:19,040
and it's really hard to get new records

2317
01:26:19,040 --> 01:26:20,880
into this system you know we're still

2318
01:26:20,880 --> 01:26:22,400
trying with things like

2319
01:26:22,400 --> 01:26:25,040
cds and c dns key to work around that

2320
01:26:25,040 --> 01:26:26,719
system to get records there

2321
01:26:26,719 --> 01:26:29,280
so there's absolutely no way svcd will

2322
01:26:29,280 --> 01:26:31,120
ever have a realistic chance of being

2323
01:26:31,120 --> 01:26:31,600
there

2324
01:26:31,600 --> 01:26:34,159
at the parent like it's not my thing

2325
01:26:34,159 --> 01:26:35,920
it's not like some people don't like it

2326
01:26:35,920 --> 01:26:36,480
it's just

2327
01:26:36,480 --> 01:26:39,360
the reality of the the operation of dns

2328
01:26:39,360 --> 01:26:39,840
and and

2329
01:26:39,840 --> 01:26:42,320
registry system so that's that's one

2330
01:26:42,320 --> 01:26:42,880
thing

2331
01:26:42,880 --> 01:26:45,840
so then i totally agree you can do svcb

2332
01:26:45,840 --> 01:26:47,440
um at the child

2333
01:26:47,440 --> 01:26:51,040
um and um and and for

2334
01:26:51,040 --> 01:26:52,560
for those name servers that are in

2335
01:26:52,560 --> 01:26:54,639
baileywick you just have no chance of of

2336
01:26:54,639 --> 01:26:56,159
keeping your privacy and

2337
01:26:56,159 --> 01:26:57,520
a lot of the privacy is based on the

2338
01:26:57,520 --> 01:26:59,360
fact that your name server

2339
01:26:59,360 --> 01:27:01,840
that you're resolving uh initially you

2340
01:27:01,840 --> 01:27:03,040
know doesn't leak

2341
01:27:03,040 --> 01:27:05,199
enough data and then subsequent domains

2342
01:27:05,199 --> 01:27:06,719
you know the thousands or millions of

2343
01:27:06,719 --> 01:27:08,480
domain hosted on that name server

2344
01:27:08,480 --> 01:27:11,360
you can prevent from leaking um if you

2345
01:27:11,360 --> 01:27:12,639
trust the connection you have to the

2346
01:27:12,639 --> 01:27:14,960
parent

2347
01:27:15,199 --> 01:27:16,800
thank you um so like i have no

2348
01:27:16,800 --> 01:27:18,560
particular brief for svcb versus

2349
01:27:18,560 --> 01:27:19,360
anything else

2350
01:27:19,360 --> 01:27:21,360
um i think my fundamental thesis is

2351
01:27:21,360 --> 01:27:22,960
something i think the point of the point

2352
01:27:22,960 --> 01:27:24,159
of this light of arguments is that

2353
01:27:24,159 --> 01:27:25,360
something has to go in the parentheses

2354
01:27:25,360 --> 01:27:26,560
it's not gonna work very well

2355
01:27:26,560 --> 01:27:27,920
and so if there's some other thing we

2356
01:27:27,920 --> 01:27:29,440
can shoot horn with a parent i've got no

2357
01:27:29,440 --> 01:27:30,000
like you know

2358
01:27:30,000 --> 01:27:32,719
if it's like svc being coded encoded in

2359
01:27:32,719 --> 01:27:34,320
an s record like i got no particular

2360
01:27:34,320 --> 01:27:35,120
brief for that

2361
01:27:35,120 --> 01:27:36,560
um but i don't i don't i don't believe

2362
01:27:36,560 --> 01:27:37,920
this will successfully start something

2363
01:27:37,920 --> 01:27:39,040
in the paragraph um

2364
01:27:39,040 --> 01:27:41,520
if you want like so i i i wrote to the

2365
01:27:41,520 --> 01:27:43,280
list like if you there's only very few

2366
01:27:43,280 --> 01:27:44,560
options you have if you want to encode

2367
01:27:44,560 --> 01:27:46,000
something at the parent right you either

2368
01:27:46,000 --> 01:27:48,239
encode it with the dns key flex but then

2369
01:27:48,239 --> 01:27:49,600
you need dns sec

2370
01:27:49,600 --> 01:27:51,760
and then gets encoded in the ds record

2371
01:27:51,760 --> 01:27:53,440
or you're going to encode it into the

2372
01:27:53,440 --> 01:27:54,480
name server

2373
01:27:54,480 --> 01:27:56,800
name like you know the dns curve style

2374
01:27:56,800 --> 01:27:57,920
from the past

2375
01:27:57,920 --> 01:27:59,920
um and then you you're gonna have the

2376
01:27:59,920 --> 01:28:01,440
question of whether you're going to put

2377
01:28:01,440 --> 01:28:01,920
a pin

2378
01:28:01,920 --> 01:28:03,199
in or not for this or are you going to

2379
01:28:03,199 --> 01:28:04,960
put the public key in or not and you

2380
01:28:04,960 --> 01:28:05,280
know

2381
01:28:05,280 --> 01:28:07,280
we can discuss that further on the list

2382
01:28:07,280 --> 01:28:09,360
i think

2383
01:28:09,360 --> 01:28:10,960
sure i'm perhaps less fatalistic about

2384
01:28:10,960 --> 01:28:12,960
people's willingness to like to solve

2385
01:28:12,960 --> 01:28:14,159
technical problems about putting this in

2386
01:28:14,159 --> 01:28:16,879
the parent but okay

2387
01:28:19,199 --> 01:28:22,159
uh jonathan

2388
01:28:23,440 --> 01:28:27,199
yeah can y'all hear me um so i i think i

2389
01:28:27,199 --> 01:28:28,400
i've seen this in the chat too but i

2390
01:28:28,400 --> 01:28:30,880
also i i don't like this idea of

2391
01:28:30,880 --> 01:28:32,719
we can never do anything new in the

2392
01:28:32,719 --> 01:28:33,920
parent because

2393
01:28:33,920 --> 01:28:35,920
that's gonna strongly limit us and

2394
01:28:35,920 --> 01:28:36,960
result in

2395
01:28:36,960 --> 01:28:38,800
hacks where we're abusing record types

2396
01:28:38,800 --> 01:28:40,400
for things they're never intended for

2397
01:28:40,400 --> 01:28:42,400
if it really is the case that that the

2398
01:28:42,400 --> 01:28:45,440
you know registry ecosystem today is so

2399
01:28:45,440 --> 01:28:48,320
uh you know so frozen that we can't ever

2400
01:28:48,320 --> 01:28:49,840
do things like this

2401
01:28:49,840 --> 01:28:52,480
then let's say that let's go into dns op

2402
01:28:52,480 --> 01:28:53,760
or something and say okay we're never

2403
01:28:53,760 --> 01:28:54,880
adding anything new to the parent

2404
01:28:54,880 --> 01:28:56,000
everything new has to

2405
01:28:56,000 --> 01:28:57,280
you know have to work with the child

2406
01:28:57,280 --> 01:28:59,120
because i i just don't see a path

2407
01:28:59,120 --> 01:29:00,239
forward we all agree the parent is the

2408
01:29:00,239 --> 01:29:02,159
right place for it and then

2409
01:29:02,159 --> 01:29:03,520
you know we say but we can never change

2410
01:29:03,520 --> 01:29:05,360
the parent so we've got to find a way to

2411
01:29:05,360 --> 01:29:06,880
get past that and if that means that

2412
01:29:06,880 --> 01:29:07,840
there's

2413
01:29:07,840 --> 01:29:10,639
uh you know some a number of interim

2414
01:29:10,639 --> 01:29:12,639
methods until we get what we want in the

2415
01:29:12,639 --> 01:29:13,760
parent that's great

2416
01:29:13,760 --> 01:29:17,040
that's fine uh but you know i to me this

2417
01:29:17,040 --> 01:29:18,239
idea that we can never change the parent

2418
01:29:18,239 --> 01:29:19,440
is just a non-starter for

2419
01:29:19,440 --> 01:29:22,080
for any of this

2420
01:29:23,360 --> 01:29:25,839
jim

2421
01:29:27,679 --> 01:29:29,040
yeah we can consider things with the

2422
01:29:29,040 --> 01:29:30,320
problems around provisioning at the

2423
01:29:30,320 --> 01:29:31,040
parents

2424
01:29:31,040 --> 01:29:33,520
that's one set of issues but the idea we

2425
01:29:33,520 --> 01:29:35,120
stick more information the parent will

2426
01:29:35,120 --> 01:29:38,239
complicate the zone cut semantics and

2427
01:29:38,239 --> 01:29:40,000
we've already been very badly burned out

2428
01:29:40,000 --> 01:29:42,800
in the itf with dynastic developed

2429
01:29:42,800 --> 01:29:45,360
deployment so we need to think very very

2430
01:29:45,360 --> 01:29:47,120
carefully not just about

2431
01:29:47,120 --> 01:29:49,040
the provisioning concerns but also about

2432
01:29:49,040 --> 01:29:50,960
the implementation concepts

2433
01:29:50,960 --> 01:29:52,880
for resolving operate for for people

2434
01:29:52,880 --> 01:29:54,960
writing resolvers

2435
01:29:54,960 --> 01:29:57,040
thank you thank you okay i'm going to

2436
01:29:57,040 --> 01:29:58,000
move on i think

2437
01:29:58,000 --> 01:30:01,920
um uh someone easy mute

2438
01:30:02,080 --> 01:30:07,360
um okay so next slide please

2439
01:30:07,360 --> 01:30:10,320
okay so um uh the second contentious

2440
01:30:10,320 --> 01:30:11,199
point was how you authenticate the

2441
01:30:11,199 --> 01:30:12,239
resolver um

2442
01:30:12,239 --> 01:30:13,920
as you see i'm somewhat dodging this by

2443
01:30:13,920 --> 01:30:15,920
saying the usual way um

2444
01:30:15,920 --> 01:30:18,800
um uh you know but my basic thesis is we

2445
01:30:18,800 --> 01:30:20,080
shouldn't take a position on this

2446
01:30:20,080 --> 01:30:22,320
um so um you have the ns record in your

2447
01:30:22,320 --> 01:30:24,080
hand um and hence you have the name

2448
01:30:24,080 --> 01:30:26,080
or maybe an ip address um and so you

2449
01:30:26,080 --> 01:30:27,760
have um and you and so we have

2450
01:30:27,760 --> 01:30:28,719
conventional choices for how you

2451
01:30:28,719 --> 01:30:30,000
authenticate people once you have their

2452
01:30:30,000 --> 01:30:31,360
name and use tls

2453
01:30:31,360 --> 01:30:34,000
um um we have a web pki and we have date

2454
01:30:34,000 --> 01:30:34,480
um

2455
01:30:34,480 --> 01:30:36,480
and obviously for dane um to avoid the

2456
01:30:36,480 --> 01:30:37,600
security concerns you're gonna want the

2457
01:30:37,600 --> 01:30:38,960
tls extension but we have a tails

2458
01:30:38,960 --> 01:30:39,520
extension

2459
01:30:39,520 --> 01:30:43,199
um i think in the iseq um so um

2460
01:30:43,199 --> 01:30:45,600
um uh i i know there's contention about

2461
01:30:45,600 --> 01:30:46,960
about exactly how that should be done

2462
01:30:46,960 --> 01:30:48,080
but like it exists

2463
01:30:48,080 --> 01:30:51,520
um so uh um uh so i think like

2464
01:30:51,520 --> 01:30:54,320
uh i'd be kind of sad if we were i think

2465
01:30:54,320 --> 01:30:54,639
it's

2466
01:30:54,639 --> 01:30:56,480
a mistake to try to like um you know

2467
01:30:56,480 --> 01:30:58,080
nail down this too early um i think

2468
01:30:58,080 --> 01:30:59,120
there's an organization made

2469
01:30:59,120 --> 01:31:00,400
i know i've seen the arguments for and

2470
01:31:00,400 --> 01:31:02,480
against both web pki and and dane

2471
01:31:02,480 --> 01:31:04,080
um and i don't want to recapitulate them

2472
01:31:04,080 --> 01:31:05,280
here but i think like let's let the

2473
01:31:05,280 --> 01:31:06,159
market sort that out

2474
01:31:06,159 --> 01:31:09,199
um so uh one important point here is

2475
01:31:09,199 --> 01:31:12,320
that um or what happens if um

2476
01:31:12,320 --> 01:31:15,040
if like i try to connect to you and i

2477
01:31:15,040 --> 01:31:16,639
i'm i'm more cursive and i only sport my

2478
01:31:16,639 --> 01:31:17,280
pki

2479
01:31:17,280 --> 01:31:18,880
and your result and you're authoritative

2480
01:31:18,880 --> 01:31:20,400
you only support date and that looks

2481
01:31:20,400 --> 01:31:20,960
like a

2482
01:31:20,960 --> 01:31:21,840
misconception there's no way to

2483
01:31:21,840 --> 01:31:24,560
authenticate that so um um and so

2484
01:31:24,560 --> 01:31:27,199
we don't know and so and so um i don't

2485
01:31:27,199 --> 01:31:28,560
want a heart fail because like actually

2486
01:31:28,560 --> 01:31:29,520
it's really cool

2487
01:31:29,520 --> 01:31:30,880
um but i don't want to fall back because

2488
01:31:30,880 --> 01:31:32,480
otherwise we have an attack problem um

2489
01:31:32,480 --> 01:31:33,520
so i think we need some way for the

2490
01:31:33,520 --> 01:31:34,719
authoritative to indicate what

2491
01:31:34,719 --> 01:31:37,280
credentials it has um uh and the idea

2492
01:31:37,280 --> 01:31:38,000
would be

2493
01:31:38,000 --> 01:31:39,840
that um you know the authoritative would

2494
01:31:39,840 --> 01:31:41,040
say look i support

2495
01:31:41,040 --> 01:31:43,520
what pki and the if the if the recursive

2496
01:31:43,520 --> 01:31:44,400
only supports

2497
01:31:44,400 --> 01:31:46,080
then um then you don't treat that as a

2498
01:31:46,080 --> 01:31:47,840
heart fail um and i think uh robert

2499
01:31:47,840 --> 01:31:49,440
evans suggested that what you do is you

2500
01:31:49,440 --> 01:31:50,639
under those circumstances those

2501
01:31:50,639 --> 01:31:52,320
circumstances only then you fall back to

2502
01:31:52,320 --> 01:31:53,679
opportunistic um because you might as

2503
01:31:53,679 --> 01:31:55,199
well do tls and you just don't follow

2504
01:31:55,199 --> 01:31:57,040
the search but the point being a secure

2505
01:31:57,040 --> 01:31:59,040
indicator that you can trust that says

2506
01:31:59,040 --> 01:32:00,080
you were never going to validate this

2507
01:32:00,080 --> 01:32:01,520
sir as opposed to just like discovered

2508
01:32:01,520 --> 01:32:02,719
accidentally you couldn't validate the

2509
01:32:02,719 --> 01:32:03,360
cert

2510
01:32:03,360 --> 01:32:07,360
um uh next claim

2511
01:32:08,719 --> 01:32:10,639
um right sorry i forgot the slide here

2512
01:32:10,639 --> 01:32:13,840
here new

2513
01:32:14,000 --> 01:32:15,520
this is also potentially useful for like

2514
01:32:15,520 --> 01:32:18,239
retrieving um this vcb and ns records

2515
01:32:18,239 --> 01:32:22,638
um uh from the child next

2516
01:32:25,120 --> 01:32:27,199
right so i mean like and the bottom

2517
01:32:27,199 --> 01:32:28,639
weight of the reason about this is it's

2518
01:32:28,639 --> 01:32:29,840
like tls all the way down

2519
01:32:29,840 --> 01:32:33,199
right um so like um

2520
01:32:33,199 --> 01:32:36,239
uh you know th this this works if

2521
01:32:36,239 --> 01:32:38,960
um the certificate like is good and um

2522
01:32:38,960 --> 01:32:40,239
you have some some

2523
01:32:40,239 --> 01:32:42,000
strong way to get to you know some

2524
01:32:42,000 --> 01:32:43,440
reasonable way to understand what the ns

2525
01:32:43,440 --> 01:32:44,320
records look like

2526
01:32:44,320 --> 01:32:46,880
either because you got them from a tails

2527
01:32:46,880 --> 01:32:47,920
connection initially or because they

2528
01:32:47,920 --> 01:32:49,280
were somehow dns signed

2529
01:32:49,280 --> 01:32:51,440
and like again do you have some reason

2530
01:32:51,440 --> 01:32:52,560
why we trust svc

2531
01:32:52,560 --> 01:32:55,040
records um and so as long as you like

2532
01:32:55,040 --> 01:32:55,760
basically

2533
01:32:55,760 --> 01:32:57,280
um you know start with start with

2534
01:32:57,280 --> 01:32:59,120
something secure then you can continue

2535
01:32:59,120 --> 01:33:00,000
walking down

2536
01:33:00,000 --> 01:33:01,600
the t the changes in tls where there's

2537
01:33:01,600 --> 01:33:03,040
things you're dna second method or not

2538
01:33:03,040 --> 01:33:04,560
so the question is how you start with

2539
01:33:04,560 --> 01:33:06,400
things that are secure um

2540
01:33:06,400 --> 01:33:07,840
and so like there really are like two

2541
01:33:07,840 --> 01:33:09,679
main options um one is

2542
01:33:09,679 --> 01:33:11,199
you have some sort of um thing you've

2543
01:33:11,199 --> 01:33:13,679
retrieved over um over j53

2544
01:33:13,679 --> 01:33:15,520
uh three main options one or different

2545
01:33:15,520 --> 01:33:17,360
three anybody has a dns sec

2546
01:33:17,360 --> 01:33:19,520
um one of which um you retrieved over

2547
01:33:19,520 --> 01:33:20,639
tls um

2548
01:33:20,639 --> 01:33:23,280
and so you're trusting tls um um whether

2549
01:33:23,280 --> 01:33:24,719
or not there's dns sect and the third is

2550
01:33:24,719 --> 01:33:26,320
something is manually configured and i

2551
01:33:26,320 --> 01:33:27,120
imagine we're gonna need some

2552
01:33:27,120 --> 01:33:28,400
combination of each of these three

2553
01:33:28,400 --> 01:33:30,159
um but the point is once you get into

2554
01:33:30,159 --> 01:33:32,080
some secure loop um then you're good to

2555
01:33:32,080 --> 01:33:32,480
go

2556
01:33:32,480 --> 01:33:34,639
um and so obviously like you know um at

2557
01:33:34,639 --> 01:33:36,159
the very top um you know things are

2558
01:33:36,159 --> 01:33:37,199
getting manually configured whether

2559
01:33:37,199 --> 01:33:38,960
there's dns sect or tls but then as you

2560
01:33:38,960 --> 01:33:40,000
start moving down you can

2561
01:33:40,000 --> 01:33:41,600
once you get into a secure zone your

2562
01:33:41,600 --> 01:33:43,280
security as you continue downward

2563
01:33:43,280 --> 01:33:46,880
um next slide

2564
01:33:49,600 --> 01:33:52,320
right um so i guess next steps um so i

2565
01:33:52,320 --> 01:33:53,040
think you know

2566
01:33:53,040 --> 01:33:55,920
peter kind of keep this up um um uh you

2567
01:33:55,920 --> 01:33:56,320
know

2568
01:33:56,320 --> 01:33:58,560
um we think this is an interesting way

2569
01:33:58,560 --> 01:33:59,920
to proceed um we've been interested in

2570
01:33:59,920 --> 01:34:01,040
seeing the working group um

2571
01:34:01,040 --> 01:34:03,600
take it up in some fashion um uh with

2572
01:34:03,600 --> 01:34:04,960
the document mechanics to be determined

2573
01:34:04,960 --> 01:34:06,000
i think by the chairs

2574
01:34:06,000 --> 01:34:08,880
um um i think it's been floated um that

2575
01:34:08,880 --> 01:34:09,520
um there's some

2576
01:34:09,520 --> 01:34:10,639
interesting ideas from anna's tooth you

2577
01:34:10,639 --> 01:34:12,320
might try to pull in um as i said i

2578
01:34:12,320 --> 01:34:13,360
think you know um

2579
01:34:13,360 --> 01:34:15,440
if you had to ask my co-authors may want

2580
01:34:15,440 --> 01:34:16,560
to speak for themselves

2581
01:34:16,560 --> 01:34:18,400
but um if you had to ask what i think

2582
01:34:18,400 --> 01:34:19,840
the important points here are

2583
01:34:19,840 --> 01:34:23,199
um i think it's first of all um you know

2584
01:34:23,199 --> 01:34:25,040
understanding uh where the indicators

2585
01:34:25,040 --> 01:34:26,480
have to be and understand how to read

2586
01:34:26,480 --> 01:34:27,360
about security

2587
01:34:27,360 --> 01:34:29,280
um and understanding how to think about

2588
01:34:29,280 --> 01:34:31,120
like um

2589
01:34:31,120 --> 01:34:32,639
what uh you know what what you're trying

2590
01:34:32,639 --> 01:34:34,639
to say from the from in these records

2591
01:34:34,639 --> 01:34:35,199
about

2592
01:34:35,199 --> 01:34:36,880
what i want what i want the recursive to

2593
01:34:36,880 --> 01:34:38,880
do and what kind of authentication i

2594
01:34:38,880 --> 01:34:39,360
support

2595
01:34:39,360 --> 01:34:40,960
um and i think like the exact mechanics

2596
01:34:40,960 --> 01:34:42,800
of like what how it's spelled i don't

2597
01:34:42,800 --> 01:34:43,920
actually care very much about it

2598
01:34:43,920 --> 01:34:45,920
i don't think of my collaborators i know

2599
01:34:45,920 --> 01:34:47,440
i'm had a lot to do with svcb so i

2600
01:34:47,440 --> 01:34:48,880
imagine they think svcb is the right

2601
01:34:48,880 --> 01:34:50,239
answer but if it does not be the right

2602
01:34:50,239 --> 01:34:51,280
answer i don't think it's going to like

2603
01:34:51,280 --> 01:34:53,520
make us cry um but i think that the the

2604
01:34:53,520 --> 01:34:54,560
key point is that the data flow

2605
01:34:54,560 --> 01:34:55,360
architecture

2606
01:34:55,360 --> 01:35:01,839
is important um so i'm done now

2607
01:35:03,520 --> 01:35:06,480
oh i'm sorry i'm not uh i'm not done ha

2608
01:35:06,480 --> 01:35:07,760
um let me just finish what i was going

2609
01:35:07,760 --> 01:35:08,159
to say

2610
01:35:08,159 --> 01:35:09,440
um so i think there are three

2611
01:35:09,440 --> 01:35:11,280
contentious issues here um there's dean

2612
01:35:11,280 --> 01:35:13,679
versus web pki this dot versus doe issue

2613
01:35:13,679 --> 01:35:14,000
um

2614
01:35:14,000 --> 01:35:16,400
and our position on both is like what is

2615
01:35:16,400 --> 01:35:18,159
why take a position um you know we have

2616
01:35:18,159 --> 01:35:18,639
plenty of

2617
01:35:18,639 --> 01:35:20,239
ways to indicate this um let the market

2618
01:35:20,239 --> 01:35:22,000
sort it out um i think it would probably

2619
01:35:22,000 --> 01:35:22,560
be better

2620
01:35:22,560 --> 01:35:24,239
if we knew for the answer for one of

2621
01:35:24,239 --> 01:35:26,320
them was like like definitely better

2622
01:35:26,320 --> 01:35:28,400
like we we choose but like there's no

2623
01:35:28,400 --> 01:35:29,679
particular reason to given that we have

2624
01:35:29,679 --> 01:35:30,719
ways to indicate both and we can

2625
01:35:30,719 --> 01:35:32,480
negotiate them

2626
01:35:32,480 --> 01:35:36,639
now i'm done thanks eric

2627
01:35:36,639 --> 01:35:38,560
all right so i think what we want to do

2628
01:35:38,560 --> 01:35:39,920
now is

2629
01:35:39,920 --> 01:35:43,760
is we've got roughly 20

2630
01:35:43,760 --> 01:35:47,520
25 minutes uh and and what what tim and

2631
01:35:47,520 --> 01:35:48,239
i would like

2632
01:35:48,239 --> 01:35:51,119
to see is discussions over both of these

2633
01:35:51,119 --> 01:35:51,679
drafts

2634
01:35:51,679 --> 01:35:54,719
and how they relate to what what the

2635
01:35:54,719 --> 01:35:56,320
working group wants to do and how we

2636
01:35:56,320 --> 01:35:57,920
want to go forward so

2637
01:35:57,920 --> 01:35:59,199
um with that i'm going to open the queue

2638
01:35:59,199 --> 01:36:01,040
up uh first up is

2639
01:36:01,040 --> 01:36:04,719
kirsty payne hi thank you

2640
01:36:04,719 --> 01:36:06,159
um yeah it's just some clarifying

2641
01:36:06,159 --> 01:36:07,920
questions actually on the presentation i

2642
01:36:07,920 --> 01:36:08,480
just saw

2643
01:36:08,480 --> 01:36:11,040
so um could you just go back a couple of

2644
01:36:11,040 --> 01:36:12,480
slides

2645
01:36:12,480 --> 01:36:14,080
i think it's called like how security

2646
01:36:14,080 --> 01:36:15,600
works or something

2647
01:36:15,600 --> 01:36:18,880
is the title of the slide

2648
01:36:19,920 --> 01:36:23,360
thank you uh yeah so i just want to like

2649
01:36:23,360 --> 01:36:24,960
kind of clarify here you've got a couple

2650
01:36:24,960 --> 01:36:26,639
of things where like the connection is

2651
01:36:26,639 --> 01:36:27,440
secure if

2652
01:36:27,440 --> 01:36:29,280
something's okay it's like sent over tls

2653
01:36:29,280 --> 01:36:30,800
or signed by dnsec

2654
01:36:30,800 --> 01:36:32,000
and just to make clear that those

2655
01:36:32,000 --> 01:36:33,600
provide different security properties

2656
01:36:33,600 --> 01:36:34,719
obviously so i wouldn't want to like

2657
01:36:34,719 --> 01:36:36,320
bundle them in together

2658
01:36:36,320 --> 01:36:38,960
um and then just going right back to i

2659
01:36:38,960 --> 01:36:40,560
think maybe like one of the first slides

2660
01:36:40,560 --> 01:36:42,560
you talked about the threat model

2661
01:36:42,560 --> 01:36:45,360
um and talking about how you would

2662
01:36:45,360 --> 01:36:46,000
include

2663
01:36:46,000 --> 01:36:47,600
certain groups of attackers but not

2664
01:36:47,600 --> 01:36:49,119
others i think you said

2665
01:36:49,119 --> 01:36:50,800
considering a passive attacker between

2666
01:36:50,800 --> 01:36:52,639
recursive and some authoritatives is

2667
01:36:52,639 --> 01:36:54,560
worth considering but not here

2668
01:36:54,560 --> 01:36:56,719
so i guess just a question like how do

2669
01:36:56,719 --> 01:36:58,080
you make that value judgment

2670
01:36:58,080 --> 01:36:59,520
what is the threat model that you're

2671
01:36:59,520 --> 01:37:01,360
working to and how or like where would

2672
01:37:01,360 --> 01:37:02,400
you consider that

2673
01:37:02,400 --> 01:37:04,639
if not here and what security do you

2674
01:37:04,639 --> 01:37:06,480
lose by not considering that

2675
01:37:06,480 --> 01:37:08,400
that attacker so just a couple of

2676
01:37:08,400 --> 01:37:09,840
questions really about the security and

2677
01:37:09,840 --> 01:37:10,719
the threat model

2678
01:37:10,719 --> 01:37:13,199
thanks sure um so it made taking the

2679
01:37:13,199 --> 01:37:14,080
second first

2680
01:37:14,080 --> 01:37:16,320
um so that's a that that attacker is a

2681
01:37:16,320 --> 01:37:17,199
strictly weaker

2682
01:37:17,199 --> 01:37:18,159
attacker of the attacker we're

2683
01:37:18,159 --> 01:37:20,000
considering um so i think what you're

2684
01:37:20,000 --> 01:37:21,600
losing is there might be some things

2685
01:37:21,600 --> 01:37:23,119
which work against that attacker but not

2686
01:37:23,119 --> 01:37:23,760
others

2687
01:37:23,760 --> 01:37:26,000
um so as a concrete example um like i

2688
01:37:26,000 --> 01:37:27,040
argued that you needed

2689
01:37:27,040 --> 01:37:29,199
to um that you needed to have security

2690
01:37:29,199 --> 01:37:30,320
between both the

2691
01:37:30,320 --> 01:37:31,600
the recursive and the parent and the

2692
01:37:31,600 --> 01:37:33,440
recursive of the child but um

2693
01:37:33,440 --> 01:37:36,000
if for some reason the attacker could

2694
01:37:36,000 --> 01:37:37,119
not interfere with your connection

2695
01:37:37,119 --> 01:37:38,159
between the between the cursor and the

2696
01:37:38,159 --> 01:37:39,679
parent and was not on path for that

2697
01:37:39,679 --> 01:37:42,400
but was requested it was was on path

2698
01:37:42,400 --> 01:37:43,760
between the records of the child then

2699
01:37:43,760 --> 01:37:44,719
you like wouldn't need to lost

2700
01:37:44,719 --> 01:37:45,600
connection with your cursive from the

2701
01:37:45,600 --> 01:37:46,480
parent because

2702
01:37:46,480 --> 01:37:49,040
they'd be off path um so um but i think

2703
01:37:49,040 --> 01:37:50,239
like trying to figure out who has who's

2704
01:37:50,239 --> 01:37:51,440
that situation is like super hard to

2705
01:37:51,440 --> 01:37:52,400
reason about so i just don't think it's

2706
01:37:52,400 --> 01:37:53,040
worth it

2707
01:37:53,040 --> 01:37:56,239
um the um um you're absolutely right um

2708
01:37:56,239 --> 01:37:59,520
that uh that dnsk and tls are providing

2709
01:37:59,520 --> 01:37:59,920
different

2710
01:37:59,920 --> 01:38:02,960
different values here um uh uh

2711
01:38:02,960 --> 01:38:04,880
you know um this is what i was saying

2712
01:38:04,880 --> 01:38:06,000
earlier about the sort of confusion

2713
01:38:06,000 --> 01:38:06,800
about like

2714
01:38:06,800 --> 01:38:08,560
exactly we're trying to achieve um but

2715
01:38:08,560 --> 01:38:10,080
for the pr um so

2716
01:38:10,080 --> 01:38:11,760
um i'm not primarily interested in this

2717
01:38:11,760 --> 01:38:13,280
discussion about providing

2718
01:38:13,280 --> 01:38:15,679
um integrity for like any records other

2719
01:38:15,679 --> 01:38:17,520
than or data or justification for any

2720
01:38:17,520 --> 01:38:18,480
records other

2721
01:38:18,480 --> 01:38:20,800
than the n the ones required to like to

2722
01:38:20,800 --> 01:38:21,840
get tls going

2723
01:38:21,840 --> 01:38:23,520
um so i assume that the properties you

2724
01:38:23,520 --> 01:38:24,719
get whatever properties you get and

2725
01:38:24,719 --> 01:38:26,719
dnsec is providing or not providing

2726
01:38:26,719 --> 01:38:28,400
security for all the records but for the

2727
01:38:28,400 --> 01:38:30,080
purposes of um

2728
01:38:30,080 --> 01:38:31,679
of authenticating the ns record and the

2729
01:38:31,679 --> 01:38:33,119
svcb then

2730
01:38:33,119 --> 01:38:35,360
like tls and nsl and dns are like

2731
01:38:35,360 --> 01:38:38,719
roughly equivalent in this set in this

2732
01:38:42,840 --> 01:38:44,960
setting

2733
01:38:44,960 --> 01:38:48,320
okay few points uh one i said this in

2734
01:38:48,320 --> 01:38:48,719
chat

2735
01:38:48,719 --> 01:38:50,880
i think we uh this is really about the

2736
01:38:50,880 --> 01:38:52,719
first draft uh

2737
01:38:52,719 --> 01:38:56,320
in the of the two what's missing from

2738
01:38:56,320 --> 01:38:58,000
that draft in my view and what we

2739
01:38:58,000 --> 01:39:01,040
we had in the previous iteration was a

2740
01:39:01,040 --> 01:39:02,880
way for authoritative servers to get

2741
01:39:02,880 --> 01:39:03,280
some

2742
01:39:03,280 --> 01:39:06,800
traffic on a new protocol without

2743
01:39:06,800 --> 01:39:09,679
guaranteeing that that protocol has

2744
01:39:09,679 --> 01:39:10,400
uptime

2745
01:39:10,400 --> 01:39:13,679
that's the full off time of the service

2746
01:39:13,679 --> 01:39:16,480
the current draft as i understand it

2747
01:39:16,480 --> 01:39:17,199
makes the

2748
01:39:17,199 --> 01:39:19,360
choice between uh authenticated and

2749
01:39:19,360 --> 01:39:21,520
unauthenticated a choice of the resolver

2750
01:39:21,520 --> 01:39:23,360
which means that there's no safe way for

2751
01:39:23,360 --> 01:39:24,639
an authoritative

2752
01:39:24,639 --> 01:39:28,800
to deploy a a new protocol

2753
01:39:28,800 --> 01:39:30,880
in public get it get some traffic on it

2754
01:39:30,880 --> 01:39:32,639
get it tested

2755
01:39:32,639 --> 01:39:37,679
before they they give it their full sla

2756
01:39:37,840 --> 01:39:41,040
uh okay point two requirements drafting

2757
01:39:41,040 --> 01:39:42,239
is really hard i think

2758
01:39:42,239 --> 01:39:44,480
this this discussion really points to

2759
01:39:44,480 --> 01:39:46,159
the difficulty of formulating a

2760
01:39:46,159 --> 01:39:47,679
requirements draft that

2761
01:39:47,679 --> 01:39:50,239
that gets to what we need for example we

2762
01:39:50,239 --> 01:39:50,880
need to

2763
01:39:50,880 --> 01:39:52,239
do we need to figure out is it a

2764
01:39:52,239 --> 01:39:54,159
requirement not to require

2765
01:39:54,159 --> 01:39:57,280
changes to the epp specifications

2766
01:39:57,280 --> 01:40:01,360
and icann registry agreements and all of

2767
01:40:01,360 --> 01:40:02,880
that stuff

2768
01:40:02,880 --> 01:40:06,960
i think that's a real puzzle

2769
01:40:06,960 --> 01:40:10,159
and the third point is

2770
01:40:10,159 --> 01:40:12,960
i think there is a path forward here

2771
01:40:12,960 --> 01:40:13,440
that

2772
01:40:13,440 --> 01:40:15,920
that sort of blends a lot of the ideas

2773
01:40:15,920 --> 01:40:16,960
that have been coming

2774
01:40:16,960 --> 01:40:20,800
in uh roughly i think it looks like

2775
01:40:20,800 --> 01:40:23,760
we use some kind of ds hack to encode

2776
01:40:23,760 --> 01:40:24,880
just a flag

2777
01:40:24,880 --> 01:40:27,840
that says this child is is playing this

2778
01:40:27,840 --> 01:40:28,800
new game

2779
01:40:28,800 --> 01:40:32,480
um you know go ask go ask the child

2780
01:40:32,480 --> 01:40:35,600
for the for an svcb record to find out

2781
01:40:35,600 --> 01:40:38,560
what you're supposed to do

2782
01:40:39,040 --> 01:40:42,320
and that's

2783
01:40:42,320 --> 01:40:45,520
that's opt in it costs latency but only

2784
01:40:45,520 --> 01:40:47,520
for the zones that opt in to play the

2785
01:40:47,520 --> 01:40:49,040
game

2786
01:40:49,040 --> 01:40:52,080
uh and then eventually we get out of

2787
01:40:52,080 --> 01:40:53,920
that extra latency

2788
01:40:53,920 --> 01:40:56,960
by uh by

2789
01:40:56,960 --> 01:41:00,320
putting svcb records in the parent and

2790
01:41:00,320 --> 01:41:03,360
uh having the parents also do tls

2791
01:41:03,360 --> 01:41:07,760
or um in the case of the root zone md

2792
01:41:07,760 --> 01:41:11,280
zone digest uh that also

2793
01:41:11,280 --> 01:41:13,840
only works for out of bail eq name

2794
01:41:13,840 --> 01:41:15,760
servers but i think that that sort of

2795
01:41:15,760 --> 01:41:18,159
lays out a roadmap where we can people

2796
01:41:18,159 --> 01:41:20,159
can start getting protected

2797
01:41:20,159 --> 01:41:23,199
now or soon and in the

2798
01:41:23,199 --> 01:41:26,239
very long term we can remove the

2799
01:41:26,239 --> 01:41:27,600
performance cost to make that more

2800
01:41:27,600 --> 01:41:30,080
attractive

2801
01:41:31,199 --> 01:41:32,560
all right thanks ben um i believe

2802
01:41:32,560 --> 01:41:34,239
peter's in the queue to respond to your

2803
01:41:34,239 --> 01:41:35,679
first point

2804
01:41:35,679 --> 01:41:38,320
uh actually this is paul um i've been

2805
01:41:38,320 --> 01:41:39,520
chatting in the back so

2806
01:41:39,520 --> 01:41:43,119
i'll take it uh so ben thank you uh

2807
01:41:43,119 --> 01:41:46,239
uh yes we on on your first point we

2808
01:41:46,239 --> 01:41:47,040
totally

2809
01:41:47,040 --> 01:41:48,639
missed that and of course it should be

2810
01:41:48,639 --> 01:41:50,320
added um

2811
01:41:50,320 --> 01:41:53,199
the the ability to do this incrementally

2812
01:41:53,199 --> 01:41:53,679
is

2813
01:41:53,679 --> 01:41:57,440
hugely important um and so yeah

2814
01:41:57,440 --> 01:41:59,520
and again we're in the very early stage

2815
01:41:59,520 --> 01:42:01,440
please don't think that if we didn't

2816
01:42:01,440 --> 01:42:02,880
include something is because it's not

2817
01:42:02,880 --> 01:42:04,560
important it certainly is

2818
01:42:04,560 --> 01:42:08,560
um on the general point

2819
01:42:08,560 --> 01:42:11,440
of adding records to the additional

2820
01:42:11,440 --> 01:42:12,800
section and the parent

2821
01:42:12,800 --> 01:42:15,040
i think that that's going to be a real

2822
01:42:15,040 --> 01:42:16,000
issue

2823
01:42:16,000 --> 01:42:19,280
and we on the opportunistic side

2824
01:42:19,280 --> 01:42:21,119
don't really care how it comes out we're

2825
01:42:21,119 --> 01:42:22,719
happy to follow whatever the working

2826
01:42:22,719 --> 01:42:23,920
group does on that

2827
01:42:23,920 --> 01:42:27,360
whether and it may be as ben just said

2828
01:42:27,360 --> 01:42:29,440
we don't do it at all we do it as a ds

2829
01:42:29,440 --> 01:42:31,679
or whatever but to be clear

2830
01:42:31,679 --> 01:42:35,199
um doing anything adding anything

2831
01:42:35,199 --> 01:42:37,920
to the you know the additional section

2832
01:42:37,920 --> 01:42:39,119
takes not only

2833
01:42:39,119 --> 01:42:40,639
unfortunately contracts and stuff like

2834
01:42:40,639 --> 01:42:42,719
that it also takes updated software a

2835
01:42:42,719 --> 01:42:45,280
lot a lot of authoritative software

2836
01:42:45,280 --> 01:42:48,719
isn't prepared to add willy-nilly to the

2837
01:42:48,719 --> 01:42:50,000
additional section

2838
01:42:50,000 --> 01:42:52,560
um but having said that i said this in

2839
01:42:52,560 --> 01:42:53,360
the chat

2840
01:42:53,360 --> 01:42:56,080
i i believe if that's the way we want to

2841
01:42:56,080 --> 01:42:57,760
go we should go that way we shouldn't go

2842
01:42:57,760 --> 01:42:59,040
like oh it's impossible

2843
01:42:59,040 --> 01:43:01,520
this will never happen um i think

2844
01:43:01,520 --> 01:43:02,239
getting

2845
01:43:02,239 --> 01:43:04,560
this kind of encryption is important

2846
01:43:04,560 --> 01:43:07,119
regardless of if it takes a while

2847
01:43:07,119 --> 01:43:10,480
and giving up now is silly and on that

2848
01:43:10,480 --> 01:43:13,600
last point is um just to be clear what

2849
01:43:13,600 --> 01:43:14,320
peter said

2850
01:43:14,320 --> 01:43:17,520
in the second slide is since we do have

2851
01:43:17,520 --> 01:43:20,159
one working group document now

2852
01:43:20,159 --> 01:43:24,000
where we we slammed one idea of fully

2853
01:43:24,000 --> 01:43:26,719
authenticated in and now ecker has a

2854
01:43:26,719 --> 01:43:27,280
much

2855
01:43:27,280 --> 01:43:30,800
you know much more full explanation

2856
01:43:30,800 --> 01:43:33,199
including a use case um we're totally

2857
01:43:33,199 --> 01:43:35,440
happy to split it out again and i

2858
01:43:35,440 --> 01:43:37,679
i would you know it's up to the chairs

2859
01:43:37,679 --> 01:43:39,119
but my recommendation

2860
01:43:39,119 --> 01:43:41,280
to the working group is that we actually

2861
01:43:41,280 --> 01:43:42,320
work on these two

2862
01:43:42,320 --> 01:43:45,360
in parallel and not jam them into

2863
01:43:45,360 --> 01:43:49,280
um one document even though

2864
01:43:49,280 --> 01:43:52,080
it would be easier for implementers if

2865
01:43:52,080 --> 01:43:54,080
we only had one document i it looks to

2866
01:43:54,080 --> 01:43:55,440
me like the two documents are going to

2867
01:43:55,440 --> 01:43:57,199
move at different speeds

2868
01:43:57,199 --> 01:43:59,520
so however the working group wants to go

2869
01:43:59,520 --> 01:44:01,119
on that that's just fine

2870
01:44:01,119 --> 01:44:03,440
thanks

2871
01:44:05,280 --> 01:44:21,840
thanks paul uh daniel

2872
01:44:32,840 --> 01:44:35,840
dkj

2873
01:44:47,360 --> 01:44:48,880
if you're talking we can't hear you

2874
01:44:48,880 --> 01:44:51,280
there you go here we go sorry about that

2875
01:44:51,280 --> 01:44:53,119
that's probably too bad can you can you

2876
01:44:53,119 --> 01:44:55,040
hear me now apologies

2877
01:44:55,040 --> 01:44:58,159
yes we can i wanted to follow up on

2878
01:44:58,159 --> 01:45:02,000
uh uh what then and um

2879
01:45:02,000 --> 01:45:03,679
paul we're talking about about how we

2880
01:45:03,679 --> 01:45:05,520
get to the deployment phase

2881
01:45:05,520 --> 01:45:08,159
if it's if the signaling is a hard fail

2882
01:45:08,159 --> 01:45:08,880
um

2883
01:45:08,880 --> 01:45:12,159
that's a problem um uh

2884
01:45:12,159 --> 01:45:14,320
this requires more thinking about how

2885
01:45:14,320 --> 01:45:15,440
like what

2886
01:45:15,440 --> 01:45:18,159
what if if signaling is not a boolean i

2887
01:45:18,159 --> 01:45:19,280
don't believe it should be

2888
01:45:19,280 --> 01:45:20,880
because it because people will be scared

2889
01:45:20,880 --> 01:45:22,560
to deploy it then

2890
01:45:22,560 --> 01:45:24,159
it we're going to need to think clearly

2891
01:45:24,159 --> 01:45:27,119
about what that intermediate state is

2892
01:45:27,119 --> 01:45:28,880
in other systems it's often a report

2893
01:45:28,880 --> 01:45:30,400
only state

2894
01:45:30,400 --> 01:45:31,760
but then that requires a reporting

2895
01:45:31,760 --> 01:45:34,400
format and a reporting mechanism

2896
01:45:34,400 --> 01:45:36,800
so people can learn uh you know when

2897
01:45:36,800 --> 01:45:38,320
there have been failures and figure out

2898
01:45:38,320 --> 01:45:38,960
what the

2899
01:45:38,960 --> 01:45:41,040
what the failures are we see this in mta

2900
01:45:41,040 --> 01:45:42,840
sts and a bunch of other

2901
01:45:42,840 --> 01:45:46,320
situations so

2902
01:45:46,320 --> 01:45:47,920
we've kind of glossed over that in these

2903
01:45:47,920 --> 01:45:49,520
two pieces i actually think it's a

2904
01:45:49,520 --> 01:45:51,679
significant amount of engineering work

2905
01:45:51,679 --> 01:45:52,960
and i want to make sure that we keep

2906
01:45:52,960 --> 01:45:55,119
that on the table because if we don't

2907
01:45:55,119 --> 01:45:57,760
offer an intermediate option between no

2908
01:45:57,760 --> 01:46:00,639
signaling and signaling means hard fail

2909
01:46:00,639 --> 01:46:12,880
i can't imagine anyone turning it on

2910
01:46:12,880 --> 01:46:17,360
all right thanks uh next up is kunit

2911
01:46:17,679 --> 01:46:21,520
hi can you hear me yes we can

2912
01:46:21,520 --> 01:46:24,880
hi this is puneet here from google

2913
01:46:24,880 --> 01:46:27,119
speaking more from the google public dns

2914
01:46:27,119 --> 01:46:28,080
position

2915
01:46:28,080 --> 01:46:30,239
so i agree with dkg i was going to make

2916
01:46:30,239 --> 01:46:31,360
the point that

2917
01:46:31,360 --> 01:46:35,679
we do need the transitional support for

2918
01:46:35,679 --> 01:46:37,760
resolvers to be able to move from doing

2919
01:46:37,760 --> 01:46:38,800
no

2920
01:46:38,800 --> 01:46:42,880
auth dot to uh doing partial or dot

2921
01:46:42,880 --> 01:46:45,119
right opportunistic or however we define

2922
01:46:45,119 --> 01:46:45,840
it

2923
01:46:45,840 --> 01:46:49,119
and one of the things as i listen to the

2924
01:46:49,119 --> 01:46:50,719
presentations i think

2925
01:46:50,719 --> 01:46:53,280
i don't see much of a conflict between

2926
01:46:53,280 --> 01:46:54,239
the

2927
01:46:54,239 --> 01:46:57,440
first document and the one that ekr

2928
01:46:57,440 --> 01:46:58,320
presented

2929
01:46:58,320 --> 01:47:00,880
i see the one which ekr presented as

2930
01:47:00,880 --> 01:47:03,280
more defining the signaling protocol and

2931
01:47:03,280 --> 01:47:04,880
how you get there like all the

2932
01:47:04,880 --> 01:47:06,239
information needed to do

2933
01:47:06,239 --> 01:47:09,199
secure transport while the first one is

2934
01:47:09,199 --> 01:47:10,719
more focused on the

2935
01:47:10,719 --> 01:47:12,880
recursive so i think if we look at it

2936
01:47:12,880 --> 01:47:14,080
that way i don't see

2937
01:47:14,080 --> 01:47:17,199
overlaps there the

2938
01:47:17,199 --> 01:47:19,040
paul and peter van dyke's document

2939
01:47:19,040 --> 01:47:21,199
should really

2940
01:47:21,199 --> 01:47:25,600
lay out the the user profiles or the

2941
01:47:25,600 --> 01:47:27,760
authentication profiles one

2942
01:47:27,760 --> 01:47:29,600
a recursive resolver could use to

2943
01:47:29,600 --> 01:47:31,119
connect and

2944
01:47:31,119 --> 01:47:37,839
uh yeah that's that's all right now

2945
01:47:41,119 --> 01:47:45,600
all right thank you uh robert evans

2946
01:47:45,600 --> 01:47:48,560
hi this is robert evans uh i'm the i'm

2947
01:47:48,560 --> 01:47:50,239
from google and i'm the tech lead of

2948
01:47:50,239 --> 01:47:52,400
google cloud dns so here on behalf of

2949
01:47:52,400 --> 01:47:54,239
the authoritative server

2950
01:47:54,239 --> 01:47:57,199
uh interest the the a doc proposal that

2951
01:47:57,199 --> 01:47:58,880
eric is working on is very interesting

2952
01:47:58,880 --> 01:47:59,360
to me

2953
01:47:59,360 --> 01:48:02,560
and our i have

2954
01:48:02,560 --> 01:48:03,920
been focusing primarily on the

2955
01:48:03,920 --> 01:48:05,679
authenticated case and i wanted to point

2956
01:48:05,679 --> 01:48:06,480
out that

2957
01:48:06,480 --> 01:48:09,600
the idea is for there to be a number of

2958
01:48:09,600 --> 01:48:11,040
paths to security

2959
01:48:11,040 --> 01:48:14,320
the incremental adoption of svcb based

2960
01:48:14,320 --> 01:48:18,800
tls negotiation provides a road security

2961
01:48:18,800 --> 01:48:22,080
and as as uh

2962
01:48:22,080 --> 01:48:23,679
if if the elements if we go back to the

2963
01:48:23,679 --> 01:48:25,679
slide that had the uh the security

2964
01:48:25,679 --> 01:48:26,800
there's three points there that are

2965
01:48:26,800 --> 01:48:27,920
important which is that

2966
01:48:27,920 --> 01:48:31,280
if the if the tls certificate checks out

2967
01:48:31,280 --> 01:48:34,000
and the ns record set is validatable and

2968
01:48:34,000 --> 01:48:36,480
you have a secure signal of sdcb

2969
01:48:36,480 --> 01:48:38,400
then that makes a secure connection how

2970
01:48:38,400 --> 01:48:39,760
we get to achieving

2971
01:48:39,760 --> 01:48:42,400
all three of those elements could vary

2972
01:48:42,400 --> 01:48:43,600
it could begin with

2973
01:48:43,600 --> 01:48:45,840
a ds signal in the parent or it could

2974
01:48:45,840 --> 01:48:49,440
begin with doing a do53 query for svcp

2975
01:48:49,440 --> 01:48:53,119
et cetera et cetera et cetera over time

2976
01:48:53,119 --> 01:48:55,600
as more elements are adopted or future

2977
01:48:55,600 --> 01:48:56,159
drafts

2978
01:48:56,159 --> 01:48:59,840
provide for paths like a ds record that

2979
01:48:59,840 --> 01:49:01,280
has a specific format

2980
01:49:01,280 --> 01:49:03,600
or a parent svcd with all the

2981
01:49:03,600 --> 01:49:04,960
appropriate proposals

2982
01:49:04,960 --> 01:49:07,119
adopted by the right folks then the

2983
01:49:07,119 --> 01:49:08,639
security increases

2984
01:49:08,639 --> 01:49:11,520
um so the last point i want to make is

2985
01:49:11,520 --> 01:49:12,400
we can have

2986
01:49:12,400 --> 01:49:15,520
fully secure from an integrity point of

2987
01:49:15,520 --> 01:49:16,400
view

2988
01:49:16,400 --> 01:49:19,440
sjcp negotiated tls connections today

2989
01:49:19,440 --> 01:49:22,080
without parents as long as there is dnsx

2990
01:49:22,080 --> 01:49:22,800
signatures

2991
01:49:22,800 --> 01:49:26,080
for the nsr set and the svcb are set

2992
01:49:26,080 --> 01:49:29,840
at the name server zone

2993
01:49:32,880 --> 01:49:36,320
thanks robert jim

2994
01:49:36,320 --> 01:49:39,199
thanks brian i'm a little bit concerned

2995
01:49:39,199 --> 01:49:40,719
of the discussion we've been having over

2996
01:49:40,719 --> 01:49:42,320
the last few minutes

2997
01:49:42,320 --> 01:49:44,880
we seem to be looking more at solutions

2998
01:49:44,880 --> 01:49:46,320
and i think that might be a little bit

2999
01:49:46,320 --> 01:49:48,239
premature because

3000
01:49:48,239 --> 01:49:50,320
i'm not sure we've had a proper

3001
01:49:50,320 --> 01:49:51,840
discussion of the risk and threat

3002
01:49:51,840 --> 01:49:52,960
analysis

3003
01:49:52,960 --> 01:49:54,560
and have we got a clear understanding of

3004
01:49:54,560 --> 01:49:56,880
the threat models and what needs to be

3005
01:49:56,880 --> 01:49:57,840
done about them

3006
01:49:57,840 --> 01:49:59,760
before we start talking about solutions

3007
01:49:59,760 --> 01:50:01,040
i think we might be jumping ahead of

3008
01:50:01,040 --> 01:50:03,920
ourselves here a little bit

3009
01:50:06,400 --> 01:50:08,480
thanks jim and and i believe that's

3010
01:50:08,480 --> 01:50:10,320
going to play into some of the

3011
01:50:10,320 --> 01:50:11,679
discussions that we have on the mailing

3012
01:50:11,679 --> 01:50:13,119
list about the

3013
01:50:13,119 --> 01:50:14,480
you know the quote-unquote requirements

3014
01:50:14,480 --> 01:50:16,080
document and and does it need to have

3015
01:50:16,080 --> 01:50:17,199
some kind of

3016
01:50:17,199 --> 01:50:19,920
of threat analysis to back up the the

3017
01:50:19,920 --> 01:50:22,400
rationale for the items we put in there

3018
01:50:22,400 --> 01:50:23,679
brian i mean i think some of the stuff

3019
01:50:23,679 --> 01:50:25,280
that sunday e dot operational

3020
01:50:25,280 --> 01:50:27,119
considerations draft

3021
01:50:27,119 --> 01:50:28,480
isn't really all that well aligned with

3022
01:50:28,480 --> 01:50:31,598
what we've been discussing today

3023
01:50:33,280 --> 01:50:37,440
okay uh paul

3024
01:50:37,440 --> 01:50:39,679
uh hi just since a couple people in the

3025
01:50:39,679 --> 01:50:40,719
last couple of

3026
01:50:40,719 --> 01:50:42,719
my comments have said we might need some

3027
01:50:42,719 --> 01:50:44,159
way of reporting

3028
01:50:44,159 --> 01:50:46,960
especially like if if a authoritative

3029
01:50:46,960 --> 01:50:49,040
server somehow is a signal saying

3030
01:50:49,040 --> 01:50:51,199
i do this and then they actually don't i

3031
01:50:51,199 --> 01:50:52,480
just pasted a

3032
01:50:52,480 --> 01:50:55,599
link in the chat for a draft that will

3033
01:50:55,599 --> 01:50:56,239
be

3034
01:50:56,239 --> 01:50:59,280
being presented at dns op um i guess

3035
01:50:59,280 --> 01:51:00,880
that's two days from now

3036
01:51:00,880 --> 01:51:05,199
um that's not yet adopted by dns off but

3037
01:51:05,199 --> 01:51:07,679
um i think it will be of interest this

3038
01:51:07,679 --> 01:51:09,360
specifically is for

3039
01:51:09,360 --> 01:51:11,679
general reporting from recursive to

3040
01:51:11,679 --> 01:51:13,760
authoritative and even though

3041
01:51:13,760 --> 01:51:16,560
the use case in that document is mostly

3042
01:51:16,560 --> 01:51:17,040
about

3043
01:51:17,040 --> 01:51:19,040
dns sec failures it certainly could be

3044
01:51:19,040 --> 01:51:20,159
used here as well

3045
01:51:20,159 --> 01:51:22,159
so i'm not as concerned about a

3046
01:51:22,159 --> 01:51:23,520
reporting mechanism

3047
01:51:23,520 --> 01:51:25,440
and i'm not i'm certainly not concerned

3048
01:51:25,440 --> 01:51:27,119
that we would need our own reporting

3049
01:51:27,119 --> 01:51:27,920
mechanism

3050
01:51:27,920 --> 01:51:29,840
i think a generalized reporting net

3051
01:51:29,840 --> 01:51:30,960
mechanism

3052
01:51:30,960 --> 01:51:33,199
uh should be assumed once we work on it

3053
01:51:33,199 --> 01:51:36,239
a bit thanks

3054
01:51:37,199 --> 01:51:40,879
thanks paul chris

3055
01:51:41,360 --> 01:51:42,960
uh yeah thanks i just wanted to follow

3056
01:51:42,960 --> 01:51:44,880
up on jim's comment and say

3057
01:51:44,880 --> 01:51:46,800
yes totally agree that it's important to

3058
01:51:46,800 --> 01:51:48,159
nail down the threat model and make sure

3059
01:51:48,159 --> 01:51:50,080
that we're solving the right problems

3060
01:51:50,080 --> 01:51:52,239
um and as an authoritative server we're

3061
01:51:52,239 --> 01:51:53,599
interested in like figuring out what the

3062
01:51:53,599 --> 01:51:54,880
threat model is

3063
01:51:54,880 --> 01:51:57,199
in particular and also sort of figuring

3064
01:51:57,199 --> 01:51:58,960
out what are viable solutions within

3065
01:51:58,960 --> 01:52:01,760
that front model

3066
01:52:01,760 --> 01:52:04,080
do not care whether or not it's svcb or

3067
01:52:04,080 --> 01:52:04,960
whatever

3068
01:52:04,960 --> 01:52:07,280
um as eric was saying during the

3069
01:52:07,280 --> 01:52:08,320
presentation

3070
01:52:08,320 --> 01:52:09,840
um we just want to see this problem

3071
01:52:09,840 --> 01:52:12,159
solved

3072
01:52:13,599 --> 01:52:17,520
hi chris eric

3073
01:52:17,520 --> 01:52:19,520
i mean i i i certainly agree that's

3074
01:52:19,520 --> 01:52:20,800
important to understand the threat model

3075
01:52:20,800 --> 01:52:21,920
on the requirements which is why i

3076
01:52:21,920 --> 01:52:23,360
started without my presentation

3077
01:52:23,360 --> 01:52:26,400
um we tried to lay that out um in

3078
01:52:26,400 --> 01:52:29,360
our document um at the beginning um

3079
01:52:29,360 --> 01:52:29,679
which

3080
01:52:29,679 --> 01:52:31,520
is not to say we did so successfully um

3081
01:52:31,520 --> 01:52:32,880
i guess i'd be interested in seeing

3082
01:52:32,880 --> 01:52:36,000
um you know uh uh in

3083
01:52:36,000 --> 01:52:37,840
in some form which is again up to the

3084
01:52:37,840 --> 01:52:39,040
discussion that shares

3085
01:52:39,040 --> 01:52:40,960
um you know some way to workshop that to

3086
01:52:40,960 --> 01:52:42,000
get the point we have agreement that we

3087
01:52:42,000 --> 01:52:43,360
have the right threat model um and if

3088
01:52:43,360 --> 01:52:43,599
our

3089
01:52:43,599 --> 01:52:44,719
our test could be helpful there that

3090
01:52:44,719 --> 01:52:47,119
would be of course great

3091
01:52:47,119 --> 01:52:49,760
um um so i guess i guess i guess my

3092
01:52:49,760 --> 01:52:51,440
question is i don't know

3093
01:52:51,440 --> 01:52:53,040
i personally am not quite sure what else

3094
01:52:53,040 --> 01:52:54,960
needs to be done on threat model um

3095
01:52:54,960 --> 01:52:58,000
uh so uh um someone else to weigh in i'd

3096
01:52:58,000 --> 01:53:00,159
be great

3097
01:53:00,159 --> 01:53:03,440
so it's just just from my own uh

3098
01:53:03,440 --> 01:53:05,199
opinion eric you know i just want to

3099
01:53:05,199 --> 01:53:06,400
make sure that the other people in the

3100
01:53:06,400 --> 01:53:07,760
working group

3101
01:53:07,760 --> 01:53:11,119
agree on the model that you laid out

3102
01:53:11,119 --> 01:53:13,280
and and if not you know what

3103
01:53:13,280 --> 01:53:14,719
modification do they expect

3104
01:53:14,719 --> 01:53:17,679
or or want to see

3105
01:53:19,679 --> 01:53:24,800
yes definitely all right

3106
01:53:24,960 --> 01:53:28,639
ben ben schwartz i

3107
01:53:28,639 --> 01:53:30,960
i agree with the threat model on ecker's

3108
01:53:30,960 --> 01:53:31,840
first slide

3109
01:53:31,840 --> 01:53:35,360
uh i do think that we should be clear

3110
01:53:35,360 --> 01:53:36,320
that our

3111
01:53:36,320 --> 01:53:39,119
our aspiration is to solve the the whole

3112
01:53:39,119 --> 01:53:40,080
thing

3113
01:53:40,080 --> 01:53:43,760
and that we are going to produce

3114
01:53:43,760 --> 01:53:46,639
some solutions that solve um only part

3115
01:53:46,639 --> 01:53:47,679
of it

3116
01:53:47,679 --> 01:53:49,920
uh the essentially matching matching the

3117
01:53:49,920 --> 01:53:51,679
weaker threat models that ecker

3118
01:53:51,679 --> 01:53:55,840
also mentioned

3119
01:53:57,760 --> 01:54:00,960
thanks ben all right

3120
01:54:00,960 --> 01:54:04,000
i don't see anybody else in the queue

3121
01:54:04,000 --> 01:54:06,239
so i'm going to ask tim to run through

3122
01:54:06,239 --> 01:54:07,119
the

3123
01:54:07,119 --> 01:54:08,639
the action items that he's been able to

3124
01:54:08,639 --> 01:54:11,119
recover from them from the meeting and

3125
01:54:11,119 --> 01:54:13,040
maybe you can get some corrections on

3126
01:54:13,040 --> 01:54:14,480
these if people see anything that's

3127
01:54:14,480 --> 01:54:15,760
missing

3128
01:54:15,760 --> 01:54:18,400
yeah sorry thanks thanks brian um the

3129
01:54:18,400 --> 01:54:20,560
three that i had was um

3130
01:54:20,560 --> 01:54:22,560
recommendations for the authors on the

3131
01:54:22,560 --> 01:54:24,080
requirements document

3132
01:54:24,080 --> 01:54:27,119
um via scott um

3133
01:54:27,119 --> 01:54:30,639
more interest in the oblivious http work

3134
01:54:30,639 --> 01:54:32,400
um with the working group on adopting or

3135
01:54:32,400 --> 01:54:33,599
not i think we're gonna take some of

3136
01:54:33,599 --> 01:54:34,960
that to the mailing list

3137
01:54:34,960 --> 01:54:38,239
and work with the um peter and paul

3138
01:54:38,239 --> 01:54:42,320
on facilitating new edits for their um

3139
01:54:42,320 --> 01:54:45,679
opportunistic draft i don't think i

3140
01:54:45,679 --> 01:54:47,040
think that's everything if i miss

3141
01:54:47,040 --> 01:54:49,119
something please

3142
01:54:49,119 --> 01:54:51,440
yo

3143
01:54:52,800 --> 01:54:56,239
uh paul paul paul's ready to yell i

3144
01:54:56,239 --> 01:54:58,080
i prefer not to yell there's somebody

3145
01:54:58,080 --> 01:54:59,440
sleeping in the other room it's still

3146
01:54:59,440 --> 01:55:01,199
before six o'clock here

3147
01:55:01,199 --> 01:55:04,560
um i think a question for

3148
01:55:04,560 --> 01:55:07,280
a next step is where do the requirements

3149
01:55:07,280 --> 01:55:08,639
get specified so

3150
01:55:08,639 --> 01:55:10,719
tim you had that as as you know like we

3151
01:55:10,719 --> 01:55:12,880
need to work on the requirements draft

3152
01:55:12,880 --> 01:55:16,960
but um it could either be

3153
01:55:16,960 --> 01:55:20,800
that there is the unauthenticated draft

3154
01:55:20,800 --> 01:55:22,880
talking about its requirements and the

3155
01:55:22,880 --> 01:55:24,880
fully authenticated draft talking about

3156
01:55:24,880 --> 01:55:25,520
it

3157
01:55:25,520 --> 01:55:28,000
or they go into their into the

3158
01:55:28,000 --> 01:55:29,440
requirements document

3159
01:55:29,440 --> 01:55:32,000
the worst possible case is that we that

3160
01:55:32,000 --> 01:55:34,400
there's three documents talking about

3161
01:55:34,400 --> 01:55:37,520
um requirements yes agreed so

3162
01:55:37,520 --> 01:55:39,440
the chair should figure that one out as

3163
01:55:39,440 --> 01:55:41,119
to where it goes uh

3164
01:55:41,119 --> 01:55:43,760
i'll speak for peter here we're happy to

3165
01:55:43,760 --> 01:55:45,440
throw our requirements over to the

3166
01:55:45,440 --> 01:55:46,000
requirements

3167
01:55:46,000 --> 01:55:48,400
document as long as that document's

3168
01:55:48,400 --> 01:55:49,760
going to get worked on which

3169
01:55:49,760 --> 01:55:52,400
it hasn't been lately on the other hand

3170
01:55:52,400 --> 01:55:54,239
i think that it would be better to have

3171
01:55:54,239 --> 01:55:54,560
them

3172
01:55:54,560 --> 01:55:57,280
in that document you know next to the

3173
01:55:57,280 --> 01:56:00,560
fully authenticated ones

3174
01:56:00,560 --> 01:56:02,320
yes i think it's good to put it all in

3175
01:56:02,320 --> 01:56:04,800
one place we brian and i weren't sure if

3176
01:56:04,800 --> 01:56:05,840
like even if we did

3177
01:56:05,840 --> 01:56:07,280
a lot of work in the requirements

3178
01:56:07,280 --> 01:56:09,199
document it would ever get published

3179
01:56:09,199 --> 01:56:10,480
rather than just be a working group

3180
01:56:10,480 --> 01:56:12,400
document right um

3181
01:56:12,400 --> 01:56:14,239
so that was still something we were sort

3182
01:56:14,239 --> 01:56:15,920
of chewing on but i agree with you on

3183
01:56:15,920 --> 01:56:17,199
your points there so that's something we

3184
01:56:17,199 --> 01:56:18,560
will have to take back

3185
01:56:18,560 --> 01:56:19,840
but mostly what we're trying to do is

3186
01:56:19,840 --> 01:56:21,840
get more feedback from the working group

3187
01:56:21,840 --> 01:56:24,320
um per scott's note on helping them try

3188
01:56:24,320 --> 01:56:29,840
to figure out where to go with that

3189
01:56:33,679 --> 01:56:35,440
and the queue vanished the queue

3190
01:56:35,440 --> 01:56:37,840
vanished any other

3191
01:56:37,840 --> 01:56:39,520
comments on on tim's list of action

3192
01:56:39,520 --> 01:56:41,679
items i think the one thing that i was

3193
01:56:41,679 --> 01:56:42,000
curious

3194
01:56:42,000 --> 01:56:44,800
about maybe eric's going to talk in is

3195
01:56:44,800 --> 01:56:45,119
uh

3196
01:56:45,119 --> 01:56:46,960
adopting the document that he talked

3197
01:56:46,960 --> 01:56:48,400
about today is that

3198
01:56:48,400 --> 01:56:51,440
what you're asking eric um i mean i mean

3199
01:56:51,440 --> 01:56:53,440
i'd be fine with that um i'm also fine

3200
01:56:53,440 --> 01:56:55,760
with i'm also fine with like

3201
01:56:55,760 --> 01:56:57,920
not nothing right away though um i guess

3202
01:56:57,920 --> 01:56:59,920
i like to understand i guess

3203
01:56:59,920 --> 01:57:02,080
more importantly like you know more

3204
01:57:02,080 --> 01:57:03,280
importantly than exactly what documents

3205
01:57:03,280 --> 01:57:04,400
get adopted let's understand how we're

3206
01:57:04,400 --> 01:57:05,440
going to move forward

3207
01:57:05,440 --> 01:57:06,880
and in particular like i don't want to

3208
01:57:06,880 --> 01:57:08,159
spend like the next like nine years

3209
01:57:08,159 --> 01:57:09,760
workshopping requirements i want to like

3210
01:57:09,760 --> 01:57:10,880
get solutions

3211
01:57:10,880 --> 01:57:12,960
and um so i'd like to understand what we

3212
01:57:12,960 --> 01:57:14,480
need to do in order to get the solutions

3213
01:57:14,480 --> 01:57:16,480
and then um and and then what documents

3214
01:57:16,480 --> 01:57:17,840
we're going to use to start with those

3215
01:57:17,840 --> 01:57:20,639
and so if people think that like i guess

3216
01:57:20,639 --> 01:57:21,760
what i would say is if people think the

3217
01:57:21,760 --> 01:57:22,480
requirements

3218
01:57:22,480 --> 01:57:24,320
like laid out in our document are like

3219
01:57:24,320 --> 01:57:26,080
roughly suitable and that the solution

3220
01:57:26,080 --> 01:57:26,800
is like

3221
01:57:26,800 --> 01:57:28,639
in vaguely the right shape then like we

3222
01:57:28,639 --> 01:57:29,840
should probably adopt that and go

3223
01:57:29,840 --> 01:57:30,320
forward

3224
01:57:30,320 --> 01:57:32,000
um and if they if they think that those

3225
01:57:32,000 --> 01:57:33,360
are wrong they're likely to understand

3226
01:57:33,360 --> 01:57:33,760
what

3227
01:57:33,760 --> 01:57:37,360
what would be right um

3228
01:57:37,360 --> 01:57:40,400
yeah yes and i think i don't want to

3229
01:57:40,400 --> 01:57:41,840
workshop requirements forever either i

3230
01:57:41,840 --> 01:57:42,960
think that's a very good point i don't

3231
01:57:42,960 --> 01:57:44,800
think the working group does either but

3232
01:57:44,800 --> 01:57:53,840
um so thank you

3233
01:57:56,480 --> 01:57:58,639
all right so do we have any other last

3234
01:57:58,639 --> 01:57:59,760
minute comments

3235
01:57:59,760 --> 01:58:02,080
in the two minutes and three seconds

3236
01:58:02,080 --> 01:58:07,840
that we have

3237
01:58:11,280 --> 01:58:13,199
okay so what um tim and i will do we'll

3238
01:58:13,199 --> 01:58:15,280
go back we'll have some discussions um

3239
01:58:15,280 --> 01:58:17,360
on on what what how to drive those

3240
01:58:17,360 --> 01:58:18,560
requirements

3241
01:58:18,560 --> 01:58:20,480
discussions within the working group and

3242
01:58:20,480 --> 01:58:22,000
we'll get the other action items kicked

3243
01:58:22,000 --> 01:58:23,360
off

3244
01:58:23,360 --> 01:58:24,880
if there are no other comments we'll

3245
01:58:24,880 --> 01:58:27,520
give you a little bit over a minute back

3246
01:58:27,520 --> 01:58:28,800
so that you can prep for your next

3247
01:58:28,800 --> 01:58:30,719
session

3248
01:58:30,719 --> 01:58:32,560
thanks all for participating and enjoy

3249
01:58:32,560 --> 01:58:34,000
the rest of your week

3250
01:58:34,000 --> 01:58:49,840
yep thank you guys thank you all

3251
02:01:13,840 --> 02:01:15,920
you

