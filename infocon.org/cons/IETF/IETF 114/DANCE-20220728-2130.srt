1
00:00:24,800 --> 00:00:26,000
all right

2
00:00:26,000 --> 00:00:28,240
uh welcome to dane authentication for

3
00:00:28,240 --> 00:00:30,000
network clients everywhere otherwise

4
00:00:30,000 --> 00:00:32,000
known as dance

5
00:00:32,000 --> 00:00:34,160
i'm wes redeker one of the chairs joey

6
00:00:34,160 --> 00:00:36,719
unfortunately can't make it this time

7
00:00:36,719 --> 00:00:38,640
and just so you know she's done a

8
00:00:38,640 --> 00:00:40,800
ridiculous amount of work she does more

9
00:00:40,800 --> 00:00:41,840
than i do

10
00:00:41,840 --> 00:00:43,200
i let her push all the buttons because

11
00:00:43,200 --> 00:00:45,360
she's fairly new to cheering and uh is

12
00:00:45,360 --> 00:00:47,920
just taken on with enthusiasm so

13
00:00:47,920 --> 00:00:50,160
i miss her greatly and she's awesome

14
00:00:50,160 --> 00:00:52,160
um

15
00:00:52,160 --> 00:00:55,520
back in ietf 87 way back in berlin i

16
00:00:55,520 --> 00:00:57,680
walked by this infrastructure this is

17
00:00:57,680 --> 00:00:59,440
like in scaffolding right outside the

18
00:00:59,440 --> 00:01:01,440
ietf hotel room and for those in the

19
00:01:01,440 --> 00:01:02,800
back that can't read it the little

20
00:01:02,800 --> 00:01:04,479
yellow you know

21
00:01:04,479 --> 00:01:06,320
banners around this construction says

22
00:01:06,320 --> 00:01:07,760
time to dance

23
00:01:07,760 --> 00:01:09,119
i thought it was like the weirdest thing

24
00:01:09,119 --> 00:01:10,560
i had ever seen so i took a picture of

25
00:01:10,560 --> 00:01:12,400
it and this is a picture of it i didn't

26
00:01:12,400 --> 00:01:14,080
even realize until you know two or three

27
00:01:14,080 --> 00:01:16,400
iatfs that

28
00:01:16,400 --> 00:01:18,320
for this one it had to go on a slide

29
00:01:18,320 --> 00:01:20,320
right and clearly

30
00:01:20,320 --> 00:01:23,280
since back in etf 87 i have been

31
00:01:23,280 --> 00:01:25,600
destined to you know chair this working

32
00:01:25,600 --> 00:01:28,320
group is sort of my takeaway for it

33
00:01:28,320 --> 00:01:29,920
um

34
00:01:29,920 --> 00:01:31,439
people love it and it was a horrible

35
00:01:31,439 --> 00:01:33,040
shot to take there was no good angle to

36
00:01:33,040 --> 00:01:36,799
take it out but i did the best i could

37
00:01:37,439 --> 00:01:39,360
so uh the note well

38
00:01:39,360 --> 00:01:41,119
you have heard about this many times

39
00:01:41,119 --> 00:01:42,240
this week you're going to hear about it

40
00:01:42,240 --> 00:01:44,640
again because it's important

41
00:01:44,640 --> 00:01:46,240
make sure that you understand there are

42
00:01:46,240 --> 00:01:48,159
you know legal ramifications for

43
00:01:48,159 --> 00:01:49,759
participating especially under your

44
00:01:49,759 --> 00:01:52,720
sponsor at ihfs especially with respect

45
00:01:52,720 --> 00:01:54,240
to patents and disclosures and things

46
00:01:54,240 --> 00:01:56,399
like that i'm not a lawyer so that's my

47
00:01:56,399 --> 00:01:57,920
10 second summary of something you

48
00:01:57,920 --> 00:02:00,880
should have your lawyers look at

49
00:02:00,880 --> 00:02:02,960
there's a lot of information about the

50
00:02:02,960 --> 00:02:05,040
notewells stuff in particular you know

51
00:02:05,040 --> 00:02:07,119
we have bcps on the internet standards

52
00:02:07,119 --> 00:02:08,800
process and how it works

53
00:02:08,800 --> 00:02:10,160
the working group process and how it

54
00:02:10,160 --> 00:02:12,080
works the anti-harassment procedures the

55
00:02:12,080 --> 00:02:13,599
code of conduct the copyright and

56
00:02:13,599 --> 00:02:15,520
patents and participation

57
00:02:15,520 --> 00:02:19,040
as well as our privacy policy

58
00:02:19,120 --> 00:02:21,840
the code of conduct guidelines uh are

59
00:02:21,840 --> 00:02:25,440
specified in rfc 7154

60
00:02:25,440 --> 00:02:27,360
and they're important and let's treat

61
00:02:27,360 --> 00:02:28,720
everybody with respect i think this

62
00:02:28,720 --> 00:02:30,480
group generally has done that because we

63
00:02:30,480 --> 00:02:32,160
dance and play along nicely with each

64
00:02:32,160 --> 00:02:32,959
other

65
00:02:32,959 --> 00:02:35,440
speak slowly and limit the use of slang

66
00:02:35,440 --> 00:02:36,640
disrupt

67
00:02:36,640 --> 00:02:38,560
dispute don't disrupt ideas that was

68
00:02:38,560 --> 00:02:39,599
horrible

69
00:02:39,599 --> 00:02:42,000
dispute ideas by using reasoned argument

70
00:02:42,000 --> 00:02:43,040
and not

71
00:02:43,040 --> 00:02:44,720
other type of slang

72
00:02:44,720 --> 00:02:46,319
use your best engineering judgment for

73
00:02:46,319 --> 00:02:47,920
the whole internet and then contribute

74
00:02:47,920 --> 00:02:50,480
to the work of the ietf uh i'll remind

75
00:02:50,480 --> 00:02:51,599
you i actually thought that there was a

76
00:02:51,599 --> 00:02:53,760
mask on this but there isn't the ietf

77
00:02:53,760 --> 00:02:55,680
does have a masking policy uh we should

78
00:02:55,680 --> 00:02:57,360
all be wearing masks at all time and

79
00:02:57,360 --> 00:02:59,840
working in ietf controlled areas which

80
00:02:59,840 --> 00:03:00,640
are

81
00:03:00,640 --> 00:03:02,400
venues like this

82
00:03:02,400 --> 00:03:03,680
and it's one of the reasons that our

83
00:03:03,680 --> 00:03:05,840
coveted transmission rate is so low this

84
00:03:05,840 --> 00:03:07,920
iutf and um i hope to go home without

85
00:03:07,920 --> 00:03:10,400
code and i hope you do too

86
00:03:10,400 --> 00:03:11,680
this is the information for the dance

87
00:03:11,680 --> 00:03:13,440
working group um

88
00:03:13,440 --> 00:03:15,840
there is uh you know there are the

89
00:03:15,840 --> 00:03:17,680
normal information there's a purpose or

90
00:03:17,680 --> 00:03:18,800
mailing list

91
00:03:18,800 --> 00:03:21,040
how to subscribe to it and then we have

92
00:03:21,040 --> 00:03:23,040
three working group documents that top

93
00:03:23,040 --> 00:03:25,120
one um actually there is a zero zero

94
00:03:25,120 --> 00:03:26,720
draft and because my mail server is down

95
00:03:26,720 --> 00:03:27,920
i haven't been able to click on the

96
00:03:27,920 --> 00:03:29,760
stupid email link in order to approve it

97
00:03:29,760 --> 00:03:30,959
but it's actually there and it's in the

98
00:03:30,959 --> 00:03:32,560
queue waiting for me

99
00:03:32,560 --> 00:03:34,480
to click on it so we have three actual

100
00:03:34,480 --> 00:03:36,640
official working group documents the

101
00:03:36,640 --> 00:03:37,840
biggest one being the architecture

102
00:03:37,840 --> 00:03:40,239
document

103
00:03:40,480 --> 00:03:42,640
this meeting is being recorded i think

104
00:03:42,640 --> 00:03:44,640
everybody knows that at this point it'll

105
00:03:44,640 --> 00:03:45,599
be

106
00:03:45,599 --> 00:03:47,840
live on it'll be on youtube later uh

107
00:03:47,840 --> 00:03:49,840
when you participate please do scan the

108
00:03:49,840 --> 00:03:52,400
qr code with your phone or click on the

109
00:03:52,400 --> 00:03:55,760
link either on your laptop or in um

110
00:03:55,760 --> 00:03:57,360
or on your phone

111
00:03:57,360 --> 00:03:59,360
version of the agenda it's important for

112
00:03:59,360 --> 00:04:01,200
a participation count so even if you're

113
00:04:01,200 --> 00:04:02,959
not planning on speaking please click on

114
00:04:02,959 --> 00:04:04,799
it it's also where all the fun chatting

115
00:04:04,799 --> 00:04:06,400
is going which i'm not watching because

116
00:04:06,400 --> 00:04:07,840
there's only one chair so if anybody

117
00:04:07,840 --> 00:04:09,840
else notices stuff

118
00:04:09,840 --> 00:04:11,439
please let me know

119
00:04:11,439 --> 00:04:13,120
for

120
00:04:13,120 --> 00:04:15,360
today's agenda uh we just went through

121
00:04:15,360 --> 00:04:16,959
the chairs introduction that was most of

122
00:04:16,959 --> 00:04:19,600
it um tim has agreed to take notes i'm

123
00:04:19,600 --> 00:04:21,440
sure tim would really really love it if

124
00:04:21,440 --> 00:04:22,800
somebody else would watch the notes and

125
00:04:22,800 --> 00:04:24,720
type when he's not because it's a tiring

126
00:04:24,720 --> 00:04:26,000
job

127
00:04:26,000 --> 00:04:28,560
um there's a note there's a note taking

128
00:04:28,560 --> 00:04:31,520
link in the agenda as well um there

129
00:04:31,520 --> 00:04:33,120
isn't a discussion about the call for

130
00:04:33,120 --> 00:04:34,639
adoption results you can ignore that

131
00:04:34,639 --> 00:04:37,040
because we've already adopted everything

132
00:04:37,040 --> 00:04:38,080
um

133
00:04:38,080 --> 00:04:40,479
the working group activity is still

134
00:04:40,479 --> 00:04:42,560
kind of comes in small spurts but but

135
00:04:42,560 --> 00:04:44,720
we're actually getting stuff done anyway

136
00:04:44,720 --> 00:04:46,880
uh we'll have a short discussion about

137
00:04:46,880 --> 00:04:48,639
the current work items about those three

138
00:04:48,639 --> 00:04:50,800
documents in particular and then we have

139
00:04:50,800 --> 00:04:53,040
two interesting dance use cases um one

140
00:04:53,040 --> 00:04:55,040
jacques latour is going to talk about

141
00:04:55,040 --> 00:04:57,040
one from sierra and bob moskowitz is

142
00:04:57,040 --> 00:04:58,639
going to talk about drip and how dance

143
00:04:58,639 --> 00:05:01,280
might help in those cases

144
00:05:01,280 --> 00:05:04,160
but we will start with

145
00:05:04,160 --> 00:05:05,759
the architecture document actually did

146
00:05:05,759 --> 00:05:08,560
conclude in may and actually has been

147
00:05:08,560 --> 00:05:10,880
since the last ietf and so

148
00:05:10,880 --> 00:05:12,160
there was a three-week call it was

149
00:05:12,160 --> 00:05:14,720
clearly um had good support so we did

150
00:05:14,720 --> 00:05:16,479
adopt it and as i said the zero zero was

151
00:05:16,479 --> 00:05:18,639
coming out shortly

152
00:05:18,639 --> 00:05:20,639
uh this is all of the mail that's gone

153
00:05:20,639 --> 00:05:21,840
through you can see it's actually ticked

154
00:05:21,840 --> 00:05:22,960
up a little bit in the last couple of

155
00:05:22,960 --> 00:05:25,199
months so good job everybody nice way to

156
00:05:25,199 --> 00:05:26,400
dance

157
00:05:26,400 --> 00:05:28,560
but more is always better this is still

158
00:05:28,560 --> 00:05:30,560
a fairly low volume working group

159
00:05:30,560 --> 00:05:31,280
but

160
00:05:31,280 --> 00:05:32,720
i think a lot of it is there's not much

161
00:05:32,720 --> 00:05:35,600
contention in the documents

162
00:05:35,600 --> 00:05:36,800
uh with that

163
00:05:36,800 --> 00:05:39,759
i'm going to turn it over to uh i think

164
00:05:39,759 --> 00:05:43,120
schumann is going to lead the slides

165
00:05:43,120 --> 00:05:46,000
right and we'll pull your slides up

166
00:05:46,000 --> 00:05:49,800
you want to control them yourself

167
00:05:53,039 --> 00:05:55,199
uh you can use your phone if you ask me

168
00:05:55,199 --> 00:05:56,880
i am not set up to do that so i'm just

169
00:05:56,880 --> 00:05:58,319
going to ask you to advance them you

170
00:05:58,319 --> 00:05:59,360
just click on the little button on your

171
00:05:59,360 --> 00:06:01,440
phone it's actually quite easy

172
00:06:01,440 --> 00:06:04,319
um okay good good afternoon folks i'm

173
00:06:04,319 --> 00:06:06,560
going to give a quick update on the

174
00:06:06,560 --> 00:06:08,240
status of the dane

175
00:06:08,240 --> 00:06:10,720
core protocol documents

176
00:06:10,720 --> 00:06:13,520
uh next slide yes

177
00:06:13,520 --> 00:06:15,600
which are the following so the first one

178
00:06:15,600 --> 00:06:17,120
is the dane

179
00:06:17,120 --> 00:06:18,960
protocol that's the dane

180
00:06:18,960 --> 00:06:21,199
tls client authentication

181
00:06:21,199 --> 00:06:23,520
document and the second one describes

182
00:06:23,520 --> 00:06:26,080
the tls extension used by the protocol

183
00:06:26,080 --> 00:06:27,280
for

184
00:06:27,280 --> 00:06:29,280
signaling the use

185
00:06:29,280 --> 00:06:31,120
of this mechanism

186
00:06:31,120 --> 00:06:33,360
and optionally

187
00:06:33,360 --> 00:06:36,880
to convey the domain name of the client

188
00:06:36,880 --> 00:06:39,440
in situations where that's necessary

189
00:06:39,440 --> 00:06:42,160
the um you know the main example is if

190
00:06:42,160 --> 00:06:44,319
you using raw public key authentication

191
00:06:44,319 --> 00:06:46,560
so

192
00:06:47,199 --> 00:06:48,960
so i think these

193
00:06:48,960 --> 00:06:52,240
protocols are largely done or maybe even

194
00:06:52,240 --> 00:06:54,240
done at this point but

195
00:06:54,240 --> 00:06:56,000
i did want to highlight

196
00:06:56,000 --> 00:06:59,280
one aspect of the protocol

197
00:06:59,280 --> 00:07:00,400
because

198
00:07:00,400 --> 00:07:02,319
it took a couple of implementers

199
00:07:02,319 --> 00:07:04,479
slightly by surprise when they found out

200
00:07:04,479 --> 00:07:05,919
i found out that there are some

201
00:07:05,919 --> 00:07:07,680
differences

202
00:07:07,680 --> 00:07:09,840
in where the protocol the new protocol

203
00:07:09,840 --> 00:07:12,720
elements are placed in tls

204
00:07:12,720 --> 00:07:15,599
1.2 versus 1.3

205
00:07:15,599 --> 00:07:17,840
so

206
00:07:18,000 --> 00:07:20,800
next slide please

207
00:07:20,800 --> 00:07:22,960
so in 1.2 we really don't have any

208
00:07:22,960 --> 00:07:24,960
choice but to place them in the client

209
00:07:24,960 --> 00:07:27,919
hello in the server hello where they are

210
00:07:27,919 --> 00:07:29,440
unencrypted that's the only thing that

211
00:07:29,440 --> 00:07:30,639
can happen in that version of the

212
00:07:30,639 --> 00:07:31,759
protocol

213
00:07:31,759 --> 00:07:32,960
and uh

214
00:07:32,960 --> 00:07:34,800
as you might expect there was some

215
00:07:34,800 --> 00:07:37,120
pushback from security and privacy folks

216
00:07:37,120 --> 00:07:38,960
about that so we

217
00:07:38,960 --> 00:07:42,560
addressed that in the tls 1.3 version of

218
00:07:42,560 --> 00:07:45,840
the protocol next slide

219
00:07:45,919 --> 00:07:49,120
by uh moving the extensions into the

220
00:07:49,120 --> 00:07:51,520
certificate request and the certificate

221
00:07:51,520 --> 00:07:53,840
message on the server and client side

222
00:07:53,840 --> 00:07:55,360
respectively

223
00:07:55,360 --> 00:07:57,840
whereas if you know the protocol those

224
00:07:57,840 --> 00:08:00,319
things are encrypted

225
00:08:00,319 --> 00:08:01,199
uh

226
00:08:01,199 --> 00:08:03,280
one other thing you might have noticed

227
00:08:03,280 --> 00:08:06,080
is the ordering has changed so in tls

228
00:08:06,080 --> 00:08:07,520
1.2

229
00:08:07,520 --> 00:08:09,199
the client

230
00:08:09,199 --> 00:08:11,360
sent the extension first in its first

231
00:08:11,360 --> 00:08:12,879
flight client hello

232
00:08:12,879 --> 00:08:16,720
whereas in tls 1.3 we have to send it

233
00:08:16,720 --> 00:08:19,039
from the server side first because that

234
00:08:19,039 --> 00:08:21,440
is required by the protocol

235
00:08:21,440 --> 00:08:23,360
uh the client id extension and the

236
00:08:23,360 --> 00:08:24,800
certificate message

237
00:08:24,800 --> 00:08:26,240
can't appear unless there's a

238
00:08:26,240 --> 00:08:27,840
corresponding

239
00:08:27,840 --> 00:08:29,039
uh

240
00:08:29,039 --> 00:08:30,479
advertisement of that extension the

241
00:08:30,479 --> 00:08:32,399
certificate request message

242
00:08:32,399 --> 00:08:34,399
and i see a couple of people are queuing

243
00:08:34,399 --> 00:08:35,839
up for

244
00:08:35,839 --> 00:08:38,080
comments so maybe i'll do them now yeah

245
00:08:38,080 --> 00:08:40,959
might as well take them now

246
00:08:43,519 --> 00:08:46,320
uh sure i attempted to address this

247
00:08:46,320 --> 00:08:48,320
topic actually at the end of the utah

248
00:08:48,320 --> 00:08:51,519
session by asking where

249
00:08:51,519 --> 00:08:55,519
i might be able to define a new tls

250
00:08:55,519 --> 00:08:57,519
extension yet another one

251
00:08:57,519 --> 00:09:00,240
that would ask the server to solicit a

252
00:09:00,240 --> 00:09:02,959
client certificate yeah in this diagram

253
00:09:02,959 --> 00:09:05,360
the server you know statically solicits

254
00:09:05,360 --> 00:09:07,040
one but there are various applications

255
00:09:07,040 --> 00:09:09,839
where that's not the case

256
00:09:09,839 --> 00:09:13,120
and so even in tls 1.3

257
00:09:13,120 --> 00:09:15,680
we could define an extension with no no

258
00:09:15,680 --> 00:09:18,000
privacy payload at all it just says

259
00:09:18,000 --> 00:09:20,640
please solicit my certificate

260
00:09:20,640 --> 00:09:23,040
and that might address this issue

261
00:09:23,040 --> 00:09:24,640
the only question is which working group

262
00:09:24,640 --> 00:09:26,160
does that go into

263
00:09:26,160 --> 00:09:29,519
uh uta this one or tls

264
00:09:29,519 --> 00:09:32,399
i don't know or care but somebody should

265
00:09:32,399 --> 00:09:35,040
have an answer perhaps paul will tell us

266
00:09:35,040 --> 00:09:36,800
where that goes

267
00:09:36,800 --> 00:09:38,080
is there any reason it couldn't go into

268
00:09:38,080 --> 00:09:40,480
this one or defining other things it

269
00:09:40,480 --> 00:09:41,839
could perhaps go into this one if

270
00:09:41,839 --> 00:09:44,080
there's no like you know uh

271
00:09:44,080 --> 00:09:46,480
territoriality where tls will say no no

272
00:09:46,480 --> 00:09:48,720
no we want to define it i don't know you

273
00:09:48,720 --> 00:09:50,959
can still send extensions unencrypted

274
00:09:50,959 --> 00:09:52,560
and client hello right so you could

275
00:09:52,560 --> 00:09:55,279
stick some right if it has no content

276
00:09:55,279 --> 00:09:57,040
other than just the number of the

277
00:09:57,040 --> 00:09:59,279
extension i doubt anybody will find that

278
00:09:59,279 --> 00:10:01,200
to be a privacy issue unless somebody

279
00:10:01,200 --> 00:10:02,839
here has a thought about

280
00:10:02,839 --> 00:10:04,959
that i'm sure we can find somewhere

281
00:10:04,959 --> 00:10:07,920
that's a privacy issue

282
00:10:09,519 --> 00:10:10,880
i'm sure we could find somewhere it's a

283
00:10:10,880 --> 00:10:12,460
privacy issue

284
00:10:12,460 --> 00:10:16,000
[Laughter]

285
00:10:16,000 --> 00:10:17,519
that wasn't what i got up here to say i

286
00:10:17,519 --> 00:10:19,279
i'm interested in the previous slide if

287
00:10:19,279 --> 00:10:21,839
you if you can show that one yeah

288
00:10:21,839 --> 00:10:22,720
no

289
00:10:22,720 --> 00:10:24,160
i'm going to ask the standard question

290
00:10:24,160 --> 00:10:26,399
here which is um

291
00:10:26,399 --> 00:10:29,279
why support a defunct protocol

292
00:10:29,279 --> 00:10:30,959
why support it at all is that what your

293
00:10:30,959 --> 00:10:33,200
question is yeah uh yeah that's a good

294
00:10:33,200 --> 00:10:36,079
question so i think uh one of the ways

295
00:10:36,079 --> 00:10:38,399
we addressed that uh

296
00:10:38,399 --> 00:10:40,959
the first security and privacy objection

297
00:10:40,959 --> 00:10:42,880
was by saying that

298
00:10:42,880 --> 00:10:44,560
the dance protocols is probably going to

299
00:10:44,560 --> 00:10:47,040
be greenfield applications so maybe

300
00:10:47,040 --> 00:10:49,200
everything will roll out with tls 1.3

301
00:10:49,200 --> 00:10:51,760
and we don't have to care about tls 1.2

302
00:10:51,760 --> 00:10:53,360
i think there was some discussion where

303
00:10:53,360 --> 00:10:54,560
people

304
00:10:54,560 --> 00:10:56,720
made the case that

305
00:10:56,720 --> 00:10:58,560
there could be legacy applications that

306
00:10:58,560 --> 00:11:01,040
we may want to retrofit with this

307
00:11:01,040 --> 00:11:02,800
i don't have a strong opinion about this

308
00:11:02,800 --> 00:11:05,040
but others should speak up uh on that

309
00:11:05,040 --> 00:11:06,959
topic yeah so there's a couple of other

310
00:11:06,959 --> 00:11:09,040
things that i didn't see in the draft

311
00:11:09,040 --> 00:11:11,440
that probably do need some consideration

312
00:11:11,440 --> 00:11:13,440
here in relation to this privacy issue

313
00:11:13,440 --> 00:11:14,959
that you have essentially what you what

314
00:11:14,959 --> 00:11:17,519
you have here is the ts12 client

315
00:11:17,519 --> 00:11:19,519
for some classes of servers that it

316
00:11:19,519 --> 00:11:21,360
talks to essentially just publishes to

317
00:11:21,360 --> 00:11:22,240
the world

318
00:11:22,240 --> 00:11:24,959
it's its identity and and

319
00:11:24,959 --> 00:11:27,200
the um of the stuff

320
00:11:27,200 --> 00:11:29,519
it does but i mean in tls 1.2 they're

321
00:11:29,519 --> 00:11:30,800
going to do it anyway if you're using

322
00:11:30,800 --> 00:11:31,680
client

323
00:11:31,680 --> 00:11:34,720
no certificate i think isn't this

324
00:11:34,720 --> 00:11:36,160
and that that was the next bit that i

325
00:11:36,160 --> 00:11:37,279
was going to get to is that there are a

326
00:11:37,279 --> 00:11:38,800
number of ways in which you can avoid

327
00:11:38,800 --> 00:11:41,519
having that happen in ts 1.2 you do have

328
00:11:41,519 --> 00:11:43,519
the option to do a renegotiation now

329
00:11:43,519 --> 00:11:45,120
that's kind of frowned on the food and

330
00:11:45,120 --> 00:11:47,600
whatnot but it does give you um

331
00:11:47,600 --> 00:11:49,600
confidentiality for the for the client

332
00:11:49,600 --> 00:11:51,839
authentication pieces and that is a very

333
00:11:51,839 --> 00:11:54,160
common technique that's used for people

334
00:11:54,160 --> 00:11:56,240
who are doing client authentication

335
00:11:56,240 --> 00:11:58,000
particularly in those contexts where it

336
00:11:58,000 --> 00:12:01,040
is potentially sensitive information

337
00:12:01,040 --> 00:12:02,320
right

338
00:12:02,320 --> 00:12:04,880
the other one to consider here also

339
00:12:04,880 --> 00:12:08,399
regarding victor's point is um we have

340
00:12:08,399 --> 00:12:10,320
post handshake authentication into ls

341
00:12:10,320 --> 00:12:13,200
1.3 we also have uh exported

342
00:12:13,200 --> 00:12:15,600
authenticators which both give you an

343
00:12:15,600 --> 00:12:16,880
option to

344
00:12:16,880 --> 00:12:18,959
provide information about client

345
00:12:18,959 --> 00:12:20,079
identity

346
00:12:20,079 --> 00:12:21,279
outside

347
00:12:21,279 --> 00:12:22,800
outside of the context of the handshake

348
00:12:22,800 --> 00:12:24,480
so you can have something at the

349
00:12:24,480 --> 00:12:26,320
application layer that that says i need

350
00:12:26,320 --> 00:12:27,760
this information and then you can sort

351
00:12:27,760 --> 00:12:29,680
of bootstrap into any of that

352
00:12:29,680 --> 00:12:31,200
i didn't see any discussion of any of

353
00:12:31,200 --> 00:12:33,200
these options in the draft now it's

354
00:12:33,200 --> 00:12:35,200
possible that some of these you're just

355
00:12:35,200 --> 00:12:36,639
happy to ignore but i think the

356
00:12:36,639 --> 00:12:38,320
renegotiation thing is kind of a big

357
00:12:38,320 --> 00:12:41,600
deal if you're going to be doing 1.2

358
00:12:41,600 --> 00:12:44,720
okay yeah so doing it outside the uh

359
00:12:44,720 --> 00:12:46,480
handshake i mean this is general purpose

360
00:12:46,480 --> 00:12:48,320
so it can be used by any applications

361
00:12:48,320 --> 00:12:51,839
without doing uh you know

362
00:12:51,839 --> 00:12:52,720
um

363
00:12:52,720 --> 00:12:54,240
you know complications in the

364
00:12:54,240 --> 00:12:55,519
application that was probably the

365
00:12:55,519 --> 00:12:56,880
rationale but

366
00:12:56,880 --> 00:12:58,800
i guess we haven't really discussed that

367
00:12:58,800 --> 00:13:00,480
so right uh we

368
00:13:00,480 --> 00:13:02,079
we can have a discussion about that

369
00:13:02,079 --> 00:13:04,079
victor um i will encourage people to

370
00:13:04,079 --> 00:13:05,440
keep things somewhat short we only have

371
00:13:05,440 --> 00:13:07,680
enough yesterday okay um a couple of

372
00:13:07,680 --> 00:13:10,560
comments uh one the kind of clients that

373
00:13:10,560 --> 00:13:12,399
have privacy concerns

374
00:13:12,399 --> 00:13:14,800
generally don't end up as being nodes in

375
00:13:14,800 --> 00:13:16,320
the dns tree

376
00:13:16,320 --> 00:13:17,200
uh

377
00:13:17,200 --> 00:13:20,000
this was the primary use case for for

378
00:13:20,000 --> 00:13:22,800
this originally was mta to mta you know

379
00:13:22,800 --> 00:13:24,720
smtp and obviously it's being extended

380
00:13:24,720 --> 00:13:27,279
to all kinds of other client scenarios

381
00:13:27,279 --> 00:13:30,000
some of which may have privacy concerns

382
00:13:30,000 --> 00:13:31,839
but the initial ones

383
00:13:31,839 --> 00:13:34,560
uh in uta right there's a long

384
00:13:34,560 --> 00:13:36,720
discussion now in drafts where uta says

385
00:13:36,720 --> 00:13:40,000
you must implement tls 1.2 still tls 1.2

386
00:13:40,000 --> 00:13:41,760
is not a dead protocol

387
00:13:41,760 --> 00:13:43,519
if you read you know many of the

388
00:13:43,519 --> 00:13:46,560
wonderful posts by peter goodman tls 1.2

389
00:13:46,560 --> 00:13:48,800
is here forever

390
00:13:48,800 --> 00:13:52,079
so i don't think we can ignore tls 1.2

391
00:13:52,079 --> 00:13:53,600
and perhaps some of the industrial

392
00:13:53,600 --> 00:13:55,680
applications if they need this would

393
00:13:55,680 --> 00:13:56,480
would

394
00:13:56,480 --> 00:14:00,560
stay in tls 1.2 for a very long time

395
00:14:00,560 --> 00:14:02,959
and as for negotiation

396
00:14:02,959 --> 00:14:05,199
we now have for various security reasons

397
00:14:05,199 --> 00:14:08,480
about cpu denial of you know uh service

398
00:14:08,480 --> 00:14:11,199
attacks and so on uh many servers now

399
00:14:11,199 --> 00:14:13,600
turn off for renegotiation as a matter

400
00:14:13,600 --> 00:14:15,920
of policy it's now considered best

401
00:14:15,920 --> 00:14:18,399
practice to say no renegotiate

402
00:14:18,399 --> 00:14:20,079
so there are all kinds of barriers to

403
00:14:20,079 --> 00:14:22,320
doing it the privacy way

404
00:14:22,320 --> 00:14:24,320
in many scenarios in which the privacy

405
00:14:24,320 --> 00:14:28,000
is not a desirable or at least a

406
00:14:28,000 --> 00:14:30,639
required feature and

407
00:14:30,639 --> 00:14:32,240
unclear whether

408
00:14:32,240 --> 00:14:34,320
the privacy clients would find

409
00:14:34,320 --> 00:14:36,560
themselves published in dns with their

410
00:14:36,560 --> 00:14:38,959
tlsa records or whatever it does seem

411
00:14:38,959 --> 00:14:40,480
like there's fairly violent agreement

412
00:14:40,480 --> 00:14:43,519
that we do both 1.2 and 1.3 and you're

413
00:14:43,519 --> 00:14:44,959
willing to take that on i assume in the

414
00:14:44,959 --> 00:14:46,240
dark yeah i mean

415
00:14:46,240 --> 00:14:47,760
it's been taken out right so we kind of

416
00:14:47,760 --> 00:14:49,519
killed it somebody argues heavily so we

417
00:14:49,519 --> 00:14:50,800
shouldn't do 1.2 i think we've

418
00:14:50,800 --> 00:14:53,120
solidified yeah so so to victor's point

419
00:14:53,120 --> 00:14:55,600
uh so i agree for the smtp transport

420
00:14:55,600 --> 00:14:57,440
client case clearly there's probably no

421
00:14:57,440 --> 00:14:59,360
privacy issue but i think there's

422
00:14:59,360 --> 00:15:01,600
a bunch of emerging danger to use cases

423
00:15:01,600 --> 00:15:03,519
where probably it will become an issue

424
00:15:03,519 --> 00:15:06,079
right so we may have to deal with it

425
00:15:06,079 --> 00:15:07,680
it's a general purpose protocol after

426
00:15:07,680 --> 00:15:09,839
all

427
00:15:10,399 --> 00:15:13,360
in the for what it is worth department

428
00:15:13,360 --> 00:15:17,360
in the tls extension that the faa is

429
00:15:17,360 --> 00:15:20,639
doing with scvp

430
00:15:20,639 --> 00:15:23,680
draft they were specifically told to

431
00:15:23,680 --> 00:15:26,160
pull out 1.2

432
00:15:26,160 --> 00:15:28,079
that this is only going to be done bb

433
00:15:28,079 --> 00:15:30,480
this is going to be done for 1.3 now of

434
00:15:30,480 --> 00:15:32,800
course there's is a green field

435
00:15:32,800 --> 00:15:36,160
situation so there is that distinction

436
00:15:36,160 --> 00:15:39,360
so you should undoubtedly put in text in

437
00:15:39,360 --> 00:15:42,560
here as for the justification of

438
00:15:42,560 --> 00:15:45,839
including 1.2 is that this is not for

439
00:15:45,839 --> 00:15:48,880
greenfield use and there is this this

440
00:15:48,880 --> 00:15:51,680
large community which which will take

441
00:15:51,680 --> 00:15:55,839
some decades to go away um so include

442
00:15:55,839 --> 00:15:58,959
tax forward that no why the 1.2 that's

443
00:15:58,959 --> 00:16:01,279
why i came to say it not to vote against

444
00:16:01,279 --> 00:16:02,399
her for but

445
00:16:02,399 --> 00:16:04,240
explain why yeah that's a good

446
00:16:04,240 --> 00:16:05,920
suggestion bob thank you all right thank

447
00:16:05,920 --> 00:16:09,079
you nick

448
00:16:09,839 --> 00:16:11,519
hi can you hear me great

449
00:16:11,519 --> 00:16:12,639
you're good

450
00:16:12,639 --> 00:16:15,440
okay so i wanted to uh follow on one

451
00:16:15,440 --> 00:16:18,000
point that martin thompson raised and

452
00:16:18,000 --> 00:16:20,079
uh it goes back to some of the

453
00:16:20,079 --> 00:16:22,800
assumptions made in this um

454
00:16:22,800 --> 00:16:24,000
in this design which is that the

455
00:16:24,000 --> 00:16:26,160
authentication happens within the tls

456
00:16:26,160 --> 00:16:28,240
layer in the handshake

457
00:16:28,240 --> 00:16:29,279
and not

458
00:16:29,279 --> 00:16:30,639
after the fact

459
00:16:30,639 --> 00:16:33,360
um and i'm i'm wondering first of all

460
00:16:33,360 --> 00:16:34,959
question one is is that

461
00:16:34,959 --> 00:16:36,959
is that a hard requirement is that or is

462
00:16:36,959 --> 00:16:39,680
that just where the design um ended up

463
00:16:39,680 --> 00:16:41,120
naturally fitting

464
00:16:41,120 --> 00:16:44,000
um and if it's not a hard requirement i

465
00:16:44,000 --> 00:16:46,399
i would encourage you to look at

466
00:16:46,399 --> 00:16:48,959
exported authenticators because it

467
00:16:48,959 --> 00:16:51,920
provides a

468
00:16:51,920 --> 00:16:55,759
unified um way to to exchange

469
00:16:55,759 --> 00:16:57,759
bits of authentication from client

470
00:16:57,759 --> 00:16:59,360
server and

471
00:16:59,360 --> 00:17:00,399
and back

472
00:17:00,399 --> 00:17:03,519
that is compatible with tls 1.2 and 1.3

473
00:17:03,519 --> 00:17:07,280
without tpls handshake changes um as you

474
00:17:07,280 --> 00:17:10,000
sort of raised at the microphone

475
00:17:10,000 --> 00:17:13,439
there will be potentially some

476
00:17:13,439 --> 00:17:15,119
additional changes at the application

477
00:17:15,119 --> 00:17:16,000
layer

478
00:17:16,000 --> 00:17:16,880
to

479
00:17:16,880 --> 00:17:19,359
support this exchange and that might be

480
00:17:19,359 --> 00:17:20,880
that that might be too difficult but if

481
00:17:20,880 --> 00:17:22,559
we're talking about legacy systems right

482
00:17:22,559 --> 00:17:26,480
now modifying old tls 1.2 server server

483
00:17:26,480 --> 00:17:28,319
implementations

484
00:17:28,319 --> 00:17:32,160
seems like it might be just as messy as

485
00:17:32,160 --> 00:17:33,280
having

486
00:17:33,280 --> 00:17:35,280
protocol specific

487
00:17:35,280 --> 00:17:36,559
uh

488
00:17:36,559 --> 00:17:38,640
game-based

489
00:17:38,640 --> 00:17:41,120
authentication post handshake with

490
00:17:41,120 --> 00:17:42,720
application messages and exported

491
00:17:42,720 --> 00:17:45,520
authenticators um we also have stronger

492
00:17:45,520 --> 00:17:48,400
guarantees of the security model there

493
00:17:48,400 --> 00:17:50,080
because it's based on tls 1.3

494
00:17:50,080 --> 00:17:52,240
exclusively even though it

495
00:17:52,240 --> 00:17:53,919
works with 1.2

496
00:17:53,919 --> 00:17:55,039
yeah

497
00:17:55,039 --> 00:17:57,039
yeah thank you nick so i don't think

498
00:17:57,039 --> 00:17:58,960
that this is just the way the protocol

499
00:17:58,960 --> 00:18:00,559
evolved so i don't think anyone really

500
00:18:00,559 --> 00:18:02,320
looked at exported authenticators but

501
00:18:02,320 --> 00:18:04,240
that's something we could

502
00:18:04,240 --> 00:18:06,320
uh we could look at so

503
00:18:06,320 --> 00:18:08,320
but i do agree that we were trying to

504
00:18:08,320 --> 00:18:09,760
make it so that

505
00:18:09,760 --> 00:18:11,440
we reduce the burst and burden on

506
00:18:11,440 --> 00:18:13,360
application protocol we can just plug

507
00:18:13,360 --> 00:18:15,440
into the tls layer that has these

508
00:18:15,440 --> 00:18:18,000
features and then be done right so

509
00:18:18,000 --> 00:18:18,960
uh

510
00:18:18,960 --> 00:18:20,640
asking applications to do a lot more

511
00:18:20,640 --> 00:18:22,400
work i don't know if that's going to

512
00:18:22,400 --> 00:18:24,480
work or not i see victor says shaking

513
00:18:24,480 --> 00:18:26,720
his head okay

514
00:18:26,720 --> 00:18:28,320
all right can we let him finish the

515
00:18:28,320 --> 00:18:29,520
presentation victor and if you still

516
00:18:29,520 --> 00:18:31,200
have a co okay

517
00:18:31,200 --> 00:18:34,720
uh okay next slide so uh as i said uh

518
00:18:34,720 --> 00:18:37,200
barring that discussion i think

519
00:18:37,200 --> 00:18:39,840
the document is mostly done uh there

520
00:18:39,840 --> 00:18:41,440
were a couple of comments these are i

521
00:18:41,440 --> 00:18:43,360
think from months ago from from michael

522
00:18:43,360 --> 00:18:45,600
saying he found the introduction really

523
00:18:45,600 --> 00:18:47,440
he wanted more references to use cases

524
00:18:47,440 --> 00:18:49,520
and architecture

525
00:18:49,520 --> 00:18:52,480
so personally i think that's what the

526
00:18:52,480 --> 00:18:54,240
other document is for and i don't think

527
00:18:54,240 --> 00:18:56,080
we need to necessarily burn in this

528
00:18:56,080 --> 00:18:57,760
document with

529
00:18:57,760 --> 00:18:59,520
more details about application

530
00:18:59,520 --> 00:19:01,200
architectures and use cases that could

531
00:19:01,200 --> 00:19:03,440
be persuaded otherwise

532
00:19:03,440 --> 00:19:05,200
but if that's the case we're waiting for

533
00:19:05,200 --> 00:19:07,760
that other document to be completed so

534
00:19:07,760 --> 00:19:09,200
the question i'll throw out so the

535
00:19:09,200 --> 00:19:10,640
working group is

536
00:19:10,640 --> 00:19:13,679
if we think this is close to done uh

537
00:19:13,679 --> 00:19:15,120
should we each other doc are you

538
00:19:15,120 --> 00:19:16,320
referring to the architecture the

539
00:19:16,320 --> 00:19:18,400
architecture document yes

540
00:19:18,400 --> 00:19:20,960
uh push this ahead or do we need to wait

541
00:19:20,960 --> 00:19:22,880
for that uh

542
00:19:22,880 --> 00:19:25,360
document to be fleshed out so the tricky

543
00:19:25,360 --> 00:19:27,280
thing will be the forward reference to a

544
00:19:27,280 --> 00:19:29,039
document that needs more work than this

545
00:19:29,039 --> 00:19:31,679
one right

546
00:19:33,360 --> 00:19:34,559
okay

547
00:19:34,559 --> 00:19:35,760
and

548
00:19:35,760 --> 00:19:39,200
uh and uh yes michael will fix the uh

549
00:19:39,200 --> 00:19:41,360
capitalization of iot

550
00:19:41,360 --> 00:19:44,799
um i think i have one more slide uh

551
00:19:44,799 --> 00:19:46,799
okay so i think i'm done i said

552
00:19:46,799 --> 00:19:47,600
okay

553
00:19:47,600 --> 00:19:50,640
said once here i'll stop okay great um

554
00:19:50,640 --> 00:19:52,400
so i think

555
00:19:52,400 --> 00:19:54,240
it sounds like one of the documents is

556
00:19:54,240 --> 00:19:56,559
likely fairly well done and the other

557
00:19:56,559 --> 00:19:57,840
one

558
00:19:57,840 --> 00:19:59,280
sounds like after today's discussion

559
00:19:59,280 --> 00:20:01,200
needs a bit more work before we consider

560
00:20:01,200 --> 00:20:02,880
going to last call so one of the things

561
00:20:02,880 --> 00:20:04,640
to the the working group is i really

562
00:20:04,640 --> 00:20:06,000
want to know you know what other

563
00:20:06,000 --> 00:20:07,520
outstanding issues are there before we

564
00:20:07,520 --> 00:20:09,039
go to last call for the documents

565
00:20:09,039 --> 00:20:10,240
because they're

566
00:20:10,240 --> 00:20:11,919
they have been not you know super

567
00:20:11,919 --> 00:20:13,679
actively edited recently because they're

568
00:20:13,679 --> 00:20:15,919
already fairly complete so yeah i mean

569
00:20:15,919 --> 00:20:18,080
the only thing is uh if we're going to

570
00:20:18,080 --> 00:20:20,320
go down the route of looking for how to

571
00:20:20,320 --> 00:20:21,760
do this outside the handshake with

572
00:20:21,760 --> 00:20:24,240
exported authenticators or not right so

573
00:20:24,240 --> 00:20:26,559
if folks are interested in exploring

574
00:20:26,559 --> 00:20:28,480
that

575
00:20:28,480 --> 00:20:30,480
i'm game but there are some downsides

576
00:20:30,480 --> 00:20:32,000
right so

577
00:20:32,000 --> 00:20:35,000
victor

578
00:20:35,520 --> 00:20:38,240
just in terms of being done i i do think

579
00:20:38,240 --> 00:20:40,240
we need to figure out whether the

580
00:20:40,240 --> 00:20:43,600
please uh solicit my certificate is uh

581
00:20:43,600 --> 00:20:44,559
sort of a

582
00:20:44,559 --> 00:20:46,240
requirement for this one to be finished

583
00:20:46,240 --> 00:20:47,840
or not

584
00:20:47,840 --> 00:20:50,320
if it doesn't go into this

585
00:20:50,320 --> 00:20:51,919
specification it could be done

586
00:20:51,919 --> 00:20:54,880
specifically for smtp through esmtp

587
00:20:54,880 --> 00:20:57,200
keywords and some ugly hacks that are

588
00:20:57,200 --> 00:20:58,960
kind of at the wrong layer but the

589
00:20:58,960 --> 00:21:01,120
client could issue an esmtp command that

590
00:21:01,120 --> 00:21:03,360
says please uh solicit my certificate

591
00:21:03,360 --> 00:21:05,440
before doing start tls

592
00:21:05,440 --> 00:21:06,960
i think that's a

593
00:21:06,960 --> 00:21:09,360
the wrong thing to do at the wrong layer

594
00:21:09,360 --> 00:21:11,679
uh and i so i think part of this

595
00:21:11,679 --> 00:21:13,520
protocol might be

596
00:21:13,520 --> 00:21:16,000
uh this one more extension that would go

597
00:21:16,000 --> 00:21:17,679
into it if there's no major objections

598
00:21:17,679 --> 00:21:19,760
we could add it in the other hand if

599
00:21:19,760 --> 00:21:21,440
there are serious objections we should

600
00:21:21,440 --> 00:21:23,520
figure that out on the list perhaps so

601
00:21:23,520 --> 00:21:25,039
the only objection that i can personally

602
00:21:25,039 --> 00:21:26,720
think of you know from the chair's point

603
00:21:26,720 --> 00:21:27,760
of view is

604
00:21:27,760 --> 00:21:30,320
is it going to be used right so uh i

605
00:21:30,320 --> 00:21:31,840
think that's the only way i can get this

606
00:21:31,840 --> 00:21:34,720
protocol into smtp without changing smtp

607
00:21:34,720 --> 00:21:38,080
well then there's a good use case right

608
00:21:38,080 --> 00:21:39,520
okay and then we'd also have to answer

609
00:21:39,520 --> 00:21:41,039
the question

610
00:21:41,039 --> 00:21:43,120
in which venue should that work be done

611
00:21:43,120 --> 00:21:44,960
right is it general purpose or does it

612
00:21:44,960 --> 00:21:46,880
apply only to

613
00:21:46,880 --> 00:21:50,480
the thing we're talking about here

614
00:21:50,480 --> 00:21:51,360
sorry

615
00:21:51,360 --> 00:21:53,520
sat down too early it applies any time

616
00:21:53,520 --> 00:21:55,760
that servers selectively

617
00:21:55,760 --> 00:21:59,200
uh solicit client certificates um yeah

618
00:21:59,200 --> 00:22:00,960
yeah yeah so i remember i had this

619
00:22:00,960 --> 00:22:03,039
discussion with you i think smtp was the

620
00:22:03,039 --> 00:22:05,039
one arena where you encountered this

621
00:22:05,039 --> 00:22:07,600
issue right uh are there others

622
00:22:07,600 --> 00:22:10,159
anytime really that clients

623
00:22:10,159 --> 00:22:12,559
don't usually have certs where it's not

624
00:22:12,559 --> 00:22:14,080
anticipated and where there are

625
00:22:14,080 --> 00:22:16,400
interoperability concerns because when

626
00:22:16,400 --> 00:22:18,720
you request certificates from clients

627
00:22:18,720 --> 00:22:20,799
some of them will blow up and say i

628
00:22:20,799 --> 00:22:23,440
don't have a certificate game over

629
00:22:23,440 --> 00:22:25,280
uh it's common with java and you know

630
00:22:25,280 --> 00:22:27,200
some other you know systems yeah but if

631
00:22:27,200 --> 00:22:28,400
the protocol compliant they're not

632
00:22:28,400 --> 00:22:30,960
supposed to blow up the right

633
00:22:30,960 --> 00:22:33,840
who knows the implementations differ

634
00:22:33,840 --> 00:22:35,919
so in fact a server that isn't always

635
00:22:35,919 --> 00:22:37,760
requiring class certificates but

636
00:22:37,760 --> 00:22:39,520
optionally if a client presents one

637
00:22:39,520 --> 00:22:41,440
might do something with it any

638
00:22:41,440 --> 00:22:44,000
application like that could benefit from

639
00:22:44,000 --> 00:22:45,919
the client saying i'm happy to give you

640
00:22:45,919 --> 00:22:47,600
a certificate

641
00:22:47,600 --> 00:22:49,440
please ask me for it

642
00:22:49,440 --> 00:22:53,280
smtp is a mta to mta smtp is a good one

643
00:22:53,280 --> 00:22:55,600
uh i only know about that one other

644
00:22:55,600 --> 00:22:57,600
people can speak to their

645
00:22:57,600 --> 00:23:01,280
user non-use okay dan

646
00:23:01,919 --> 00:23:04,159
hi ben kaydak so

647
00:23:04,159 --> 00:23:05,440
um

648
00:23:05,440 --> 00:23:07,600
i came up to basically suggest that

649
00:23:07,600 --> 00:23:09,760
victor write a standalone draft about

650
00:23:09,760 --> 00:23:12,000
the please solicit my client certificate

651
00:23:12,000 --> 00:23:13,200
extension

652
00:23:13,200 --> 00:23:15,039
and that will give us a place to

653
00:23:15,039 --> 00:23:16,559
think about it write down some security

654
00:23:16,559 --> 00:23:18,159
considerations what not

655
00:23:18,159 --> 00:23:19,120
and

656
00:23:19,120 --> 00:23:21,200
discuss whether it actually fits better

657
00:23:21,200 --> 00:23:23,600
in this document or in a standalone

658
00:23:23,600 --> 00:23:26,880
thing that would go to tls or wherever

659
00:23:26,880 --> 00:23:29,280
i also want to note that i know of some

660
00:23:29,280 --> 00:23:31,679
other non-smtp cases where it would be

661
00:23:31,679 --> 00:23:32,720
useful

662
00:23:32,720 --> 00:23:35,360
i think that the official mit web server

663
00:23:35,360 --> 00:23:38,159
like 15 years ago

664
00:23:38,159 --> 00:23:40,320
if you spoke https to it it would

665
00:23:40,320 --> 00:23:42,240
request a client certificate

666
00:23:42,240 --> 00:23:44,400
and if you wanted public content it had

667
00:23:44,400 --> 00:23:46,159
to be http only

668
00:23:46,159 --> 00:23:47,760
and that of course has changed since

669
00:23:47,760 --> 00:23:50,159
then but the behavior regarding when to

670
00:23:50,159 --> 00:23:51,760
request client certificates on that

671
00:23:51,760 --> 00:23:54,400
particular web server is uh

672
00:23:54,400 --> 00:23:56,000
kind of interesting and i think would

673
00:23:56,000 --> 00:23:57,520
definitely benefit from the ability to

674
00:23:57,520 --> 00:23:59,200
say i want to get the authenticated

675
00:23:59,200 --> 00:24:01,200
functionality rather than the public

676
00:24:01,200 --> 00:24:02,640
functionality and there's currently some

677
00:24:02,640 --> 00:24:04,480
hacks in place to

678
00:24:04,480 --> 00:24:06,960
uh approximate that

679
00:24:06,960 --> 00:24:09,120
but i would like to see that

680
00:24:09,120 --> 00:24:10,240
as well

681
00:24:10,240 --> 00:24:11,120
all right

682
00:24:11,120 --> 00:24:13,120
like michael

683
00:24:13,120 --> 00:24:14,400
michael

684
00:24:14,400 --> 00:24:15,919
michael richardson so that's an

685
00:24:15,919 --> 00:24:18,080
interesting thing and i actually work

686
00:24:18,080 --> 00:24:19,000
with

687
00:24:19,000 --> 00:24:21,440
a number of there's a couple

688
00:24:21,440 --> 00:24:23,279
organizations that have client

689
00:24:23,279 --> 00:24:24,559
certificates everywhere and it's

690
00:24:24,559 --> 00:24:25,919
actually really annoying because we have

691
00:24:25,919 --> 00:24:28,240
to split up web servers and stuff like

692
00:24:28,240 --> 00:24:29,840
this and be really nice to actually have

693
00:24:29,840 --> 00:24:31,039
that

694
00:24:31,039 --> 00:24:32,799
um but the case i wanted to speak about

695
00:24:32,799 --> 00:24:34,480
actually was and this is why i was

696
00:24:34,480 --> 00:24:36,080
thinking it did belong in this document

697
00:24:36,080 --> 00:24:37,360
and it did belong in its working group

698
00:24:37,360 --> 00:24:39,679
but ben has now convinced me otherwise

699
00:24:39,679 --> 00:24:42,159
um was i think there's an awful lot of

700
00:24:42,159 --> 00:24:45,039
really crappy tls implementations in uh

701
00:24:45,039 --> 00:24:46,640
microcontrollers

702
00:24:46,640 --> 00:24:49,360
um that um

703
00:24:49,360 --> 00:24:51,760
in iot devices and so

704
00:24:51,760 --> 00:24:54,400
what the situation would really be that

705
00:24:54,400 --> 00:24:56,000
there's you know a hundred thousand of

706
00:24:56,000 --> 00:24:57,120
them out there

707
00:24:57,120 --> 00:24:59,919
they're all going to crash if the if the

708
00:24:59,919 --> 00:25:01,679
you know the central point starts asking

709
00:25:01,679 --> 00:25:04,159
for certificates randomly and so this

710
00:25:04,159 --> 00:25:06,240
actually is how you get them updated and

711
00:25:06,240 --> 00:25:07,760
when they get updated they may also get

712
00:25:07,760 --> 00:25:10,000
updated for 1.3 and a bunch of stuff but

713
00:25:10,000 --> 00:25:11,279
that's not going to happen overnight

714
00:25:11,279 --> 00:25:13,120
it's going to be incremental

715
00:25:13,120 --> 00:25:14,880
and it's probably a sufficiently big

716
00:25:14,880 --> 00:25:17,200
upgrade that you know this may actually

717
00:25:17,200 --> 00:25:19,279
involve more for more

718
00:25:19,279 --> 00:25:21,440
more more uh code storage and stuff like

719
00:25:21,440 --> 00:25:23,679
this this may be forklift upgrades to to

720
00:25:23,679 --> 00:25:24,960
get rid of them

721
00:25:24,960 --> 00:25:26,400
um so i think that's something to think

722
00:25:26,400 --> 00:25:27,679
about and i also want to say from the

723
00:25:27,679 --> 00:25:29,120
earlier point was

724
00:25:29,120 --> 00:25:32,000
dtos 1.3 i think is much further away

725
00:25:32,000 --> 00:25:34,320
from being deployable than

726
00:25:34,320 --> 00:25:36,880
tls 1.3 which is pretty much

727
00:25:36,880 --> 00:25:38,559
widely available

728
00:25:38,559 --> 00:25:41,200
so for those reasons i really would like

729
00:25:41,200 --> 00:25:42,559
to have this please ask for my

730
00:25:42,559 --> 00:25:44,559
certificate that would be really lovely

731
00:25:44,559 --> 00:25:45,600
um

732
00:25:45,600 --> 00:25:46,960
and uh

733
00:25:46,960 --> 00:25:49,279
yeah please let's have another document

734
00:25:49,279 --> 00:25:50,880
i would have just stuck it in the client

735
00:25:50,880 --> 00:25:52,400
auth document

736
00:25:52,400 --> 00:25:54,159
not thinking that about

737
00:25:54,159 --> 00:25:56,559
the website use but yeah let's have

738
00:25:56,559 --> 00:25:58,400
another document and then let's argue or

739
00:25:58,400 --> 00:26:00,720
who gets to publish it yeah that's good

740
00:26:00,720 --> 00:26:02,720
okay i think i'm persuaded we probably

741
00:26:02,720 --> 00:26:04,559
should write that uh

742
00:26:04,559 --> 00:26:06,880
certificate soliciting extension

743
00:26:06,880 --> 00:26:08,159
it does seem like they should be

744
00:26:08,159 --> 00:26:10,400
independent and decoupled if they yeah

745
00:26:10,400 --> 00:26:12,799
decouple them in case other stuff wants

746
00:26:12,799 --> 00:26:15,279
to use it too right right yeah

747
00:26:15,279 --> 00:26:17,279
all right okay so you're done yep thank

748
00:26:17,279 --> 00:26:18,000
you

749
00:26:18,000 --> 00:26:19,600
thank you very much with that we will

750
00:26:19,600 --> 00:26:22,080
move on to uh the use case presentations

751
00:26:22,080 --> 00:26:24,640
who were both hoping for

752
00:26:24,640 --> 00:26:25,919
plenty of time

753
00:26:25,919 --> 00:26:29,200
we will start with

754
00:26:29,440 --> 00:26:31,840
jacques

755
00:26:36,240 --> 00:26:39,200
hello

756
00:26:39,200 --> 00:26:40,320
all right

757
00:26:40,320 --> 00:26:44,000
so i'm joking i'm with uh syrah

758
00:26:44,000 --> 00:26:45,360
and

759
00:26:45,360 --> 00:26:48,240
i guess i'm here to talk about

760
00:26:48,240 --> 00:26:50,799
how we can leverage the nsx and digital

761
00:26:50,799 --> 00:26:52,400
identity and i think there's a really

762
00:26:52,400 --> 00:26:54,720
good use case for dance

763
00:26:54,720 --> 00:26:58,159
dane tlsa to work in this world

764
00:26:58,159 --> 00:26:59,039
so

765
00:26:59,039 --> 00:27:00,960
i've been doing a lot of work here

766
00:27:00,960 --> 00:27:02,000
recently

767
00:27:02,000 --> 00:27:03,919
on digital identity

768
00:27:03,919 --> 00:27:05,600
with diac and

769
00:27:05,600 --> 00:27:07,120
organization like that that focus on

770
00:27:07,120 --> 00:27:08,880
digital identity

771
00:27:08,880 --> 00:27:10,240
they spend all their time trying to

772
00:27:10,240 --> 00:27:12,799
figure out what trust bridges trees are

773
00:27:12,799 --> 00:27:15,360
and how they they work just a touch

774
00:27:15,360 --> 00:27:18,399
letter jacques if you can

775
00:27:18,640 --> 00:27:21,640
louder

776
00:27:23,679 --> 00:27:26,480
where do i set that up

777
00:27:26,480 --> 00:27:29,600
just talk louder that's how you do it

778
00:27:29,600 --> 00:27:33,719
talk louder there you go

779
00:27:34,080 --> 00:27:36,559
okay that's okay

780
00:27:36,559 --> 00:27:40,159
yeah we'll live just talk loud

781
00:27:40,159 --> 00:27:44,279
or i can adjust the uh

782
00:27:57,120 --> 00:27:58,640
is this better

783
00:27:58,640 --> 00:28:02,039
no that's worse

784
00:28:02,720 --> 00:28:06,559
so i don't know why this is not um

785
00:28:07,600 --> 00:28:09,918
worse

786
00:28:10,640 --> 00:28:11,840
all right

787
00:28:11,840 --> 00:28:13,200
that's good

788
00:28:13,200 --> 00:28:16,480
so digital identity world is all about

789
00:28:16,480 --> 00:28:18,240
trust registries

790
00:28:18,240 --> 00:28:22,159
and the problem statement is

791
00:28:22,159 --> 00:28:23,840
i think there's missing

792
00:28:23,840 --> 00:28:26,000
support in dns the nsx well it doesn't

793
00:28:26,000 --> 00:28:28,480
exist for finding identifying and

794
00:28:28,480 --> 00:28:30,640
authenticating digital trust registry so

795
00:28:30,640 --> 00:28:32,480
that's next slide

796
00:28:32,480 --> 00:28:35,600
that's what we're working on

797
00:28:35,600 --> 00:28:36,480
um

798
00:28:36,480 --> 00:28:38,480
so based on the digital identity world

799
00:28:38,480 --> 00:28:41,039
there's an issuer of credential

800
00:28:41,039 --> 00:28:42,880
verifiable credential

801
00:28:42,880 --> 00:28:44,960
in our case it's the iot registry we

802
00:28:44,960 --> 00:28:47,760
have wallets holders of credential

803
00:28:47,760 --> 00:28:48,880
um

804
00:28:48,880 --> 00:28:53,200
iot device and an asp is a verifier

805
00:28:53,200 --> 00:28:54,000
and

806
00:28:54,000 --> 00:28:55,679
other stuff so i'll start with the

807
00:28:55,679 --> 00:28:59,720
credential next slide

808
00:29:00,240 --> 00:29:02,000
so we have a

809
00:29:02,000 --> 00:29:04,399
an issuer of credential in digital

810
00:29:04,399 --> 00:29:07,200
identity world so in this case the iot

811
00:29:07,200 --> 00:29:10,559
registry issues credential to a iot

812
00:29:10,559 --> 00:29:12,159
device

813
00:29:12,159 --> 00:29:14,320
so basically what that is it's a digital

814
00:29:14,320 --> 00:29:17,600
certificate it's got a sand

815
00:29:17,600 --> 00:29:19,760
the sand has a

816
00:29:19,760 --> 00:29:22,159
fully qualified domain name here

817
00:29:22,159 --> 00:29:24,840
that's dnsec with a unique

818
00:29:24,840 --> 00:29:27,360
identifier that's the id that's the

819
00:29:27,360 --> 00:29:30,640
identity of the iot device so you have a

820
00:29:30,640 --> 00:29:31,600
cert

821
00:29:31,600 --> 00:29:33,600
a san and it's signed by

822
00:29:33,600 --> 00:29:36,559
an issuer which is in this case the iot

823
00:29:36,559 --> 00:29:38,000
registry

824
00:29:38,000 --> 00:29:39,760
so you have a certificate

825
00:29:39,760 --> 00:29:40,799
sign

826
00:29:40,799 --> 00:29:43,039
and it's got two sands and it's no one

827
00:29:43,039 --> 00:29:44,720
sand and it's fully

828
00:29:44,720 --> 00:29:45,600
uh

829
00:29:45,600 --> 00:29:48,879
working so next slide

830
00:29:50,399 --> 00:29:52,480
so the issuer

831
00:29:52,480 --> 00:29:55,120
of the verifiable credential to that iot

832
00:29:55,120 --> 00:29:56,240
device

833
00:29:56,240 --> 00:29:59,440
publishes in the dns a tlsa record for

834
00:29:59,440 --> 00:30:02,000
that iot device so it's a hash

835
00:30:02,000 --> 00:30:03,440
of the serv

836
00:30:03,440 --> 00:30:05,520
that was issue a public search that was

837
00:30:05,520 --> 00:30:07,760
issued to the iot device

838
00:30:07,760 --> 00:30:09,200
and the sand

839
00:30:09,200 --> 00:30:12,000
of that record matches the tlsa

840
00:30:12,000 --> 00:30:14,240
label here and then you can verify that

841
00:30:14,240 --> 00:30:17,360
the iot device is who they say they are

842
00:30:17,360 --> 00:30:20,000
and that's the cool part with dance this

843
00:30:20,000 --> 00:30:22,960
this work i i love that framework that's

844
00:30:22,960 --> 00:30:23,760
great

845
00:30:23,760 --> 00:30:25,600
so good stuff there so we got an

846
00:30:25,600 --> 00:30:28,320
underscore device and then the uid

847
00:30:28,320 --> 00:30:29,520
and that's

848
00:30:29,520 --> 00:30:31,360
i chose the certificate for that iot

849
00:30:31,360 --> 00:30:33,360
device

850
00:30:33,360 --> 00:30:35,279
the no i just

851
00:30:35,279 --> 00:30:37,279
yeah go back

852
00:30:37,279 --> 00:30:39,679
so the iot device

853
00:30:39,679 --> 00:30:43,200
the cert is signed by iot registry

854
00:30:43,200 --> 00:30:45,200
and that's what we need to to figure out

855
00:30:45,200 --> 00:30:47,760
so we need the tlsa record for the

856
00:30:47,760 --> 00:30:50,880
public key of the signer available in

857
00:30:50,880 --> 00:30:53,200
the dns so you can verify that

858
00:30:53,200 --> 00:30:55,520
this search matches the tlsa and the

859
00:30:55,520 --> 00:30:58,640
public key signing it

860
00:30:58,640 --> 00:31:00,720
to the designer matches with that tlsa

861
00:31:00,720 --> 00:31:05,840
record so this we can do today next

862
00:31:06,640 --> 00:31:07,360
so

863
00:31:07,360 --> 00:31:10,559
there's two ways to verify the

864
00:31:10,559 --> 00:31:13,120
certificate that's issued to the iot

865
00:31:13,120 --> 00:31:14,240
device

866
00:31:14,240 --> 00:31:16,320
there's the certificate itself that's

867
00:31:16,320 --> 00:31:19,600
it's signed by iot registry.ca you can

868
00:31:19,600 --> 00:31:21,519
find the sub certificate in the trust

869
00:31:21,519 --> 00:31:23,360
store somewhere and make sure it's done

870
00:31:23,360 --> 00:31:24,720
properly

871
00:31:24,720 --> 00:31:27,519
they did the digital world digital

872
00:31:27,519 --> 00:31:29,200
identity

873
00:31:29,200 --> 00:31:31,600
world works at this level

874
00:31:31,600 --> 00:31:34,720
and then in parallel with the nsx tlsc

875
00:31:34,720 --> 00:31:36,880
we can issue the lsa record for

876
00:31:36,880 --> 00:31:39,679
everything and do the same validation

877
00:31:39,679 --> 00:31:41,360
so that works today that's something we

878
00:31:41,360 --> 00:31:44,000
can do next

879
00:31:44,640 --> 00:31:47,360
so i'm going somewhere don't don't worry

880
00:31:47,360 --> 00:31:49,918
next slide

881
00:31:50,640 --> 00:31:54,399
so we what you have is an issuer of

882
00:31:54,399 --> 00:31:56,080
in this picture

883
00:31:56,080 --> 00:31:57,760
oh i see it so you have an issue where

884
00:31:57,760 --> 00:31:59,679
the yellow box

885
00:31:59,679 --> 00:32:02,159
that issues credential and they sign

886
00:32:02,159 --> 00:32:04,480
with their yellow key

887
00:32:04,480 --> 00:32:06,399
you know and then the wallet the iot

888
00:32:06,399 --> 00:32:08,720
device in this example has

889
00:32:08,720 --> 00:32:11,200
a credential signed by the issuer the

890
00:32:11,200 --> 00:32:13,440
iot registry and then when you present

891
00:32:13,440 --> 00:32:16,159
those credentials to the verifier

892
00:32:16,159 --> 00:32:17,120
uh

893
00:32:17,120 --> 00:32:19,279
the application needs to verify that you

894
00:32:19,279 --> 00:32:20,640
know what

895
00:32:20,640 --> 00:32:22,880
in the digital identity world it goes to

896
00:32:22,880 --> 00:32:25,200
a trust registry

897
00:32:25,200 --> 00:32:27,440
they it's how do i know those were

898
00:32:27,440 --> 00:32:31,600
issued by the proper uh issuer

899
00:32:31,600 --> 00:32:33,440
the wallet says am i allowed to give

900
00:32:33,440 --> 00:32:35,679
this credential to that verifier do i

901
00:32:35,679 --> 00:32:37,840
trust that for a fire

902
00:32:37,840 --> 00:32:39,679
and the verifier says do i trust this

903
00:32:39,679 --> 00:32:42,000
wallet do i trust this work

904
00:32:42,000 --> 00:32:43,200
and that's

905
00:32:43,200 --> 00:32:45,200
there's a whole lot of discussion around

906
00:32:45,200 --> 00:32:49,279
trust registry focusing on that

907
00:32:49,360 --> 00:32:52,240
so next slide

908
00:32:52,880 --> 00:32:54,399
and the question is

909
00:32:54,399 --> 00:32:56,480
it's always around the famous word trust

910
00:32:56,480 --> 00:32:58,559
how do you trust something in the

911
00:32:58,559 --> 00:33:00,640
digital identity world

912
00:33:00,640 --> 00:33:02,080
and they they have

913
00:33:02,080 --> 00:33:05,039
human layer trust institutional trust

914
00:33:05,039 --> 00:33:07,360
legal trust technical trust so i'm

915
00:33:07,360 --> 00:33:09,760
focusing on technical trust so next

916
00:33:09,760 --> 00:33:12,080
slide

917
00:33:12,720 --> 00:33:14,880
so i've been watching way too much

918
00:33:14,880 --> 00:33:18,399
strange world thingy show on netflix

919
00:33:18,399 --> 00:33:21,840
so digital identity is on the top

920
00:33:21,840 --> 00:33:25,279
world and i think dns the nsx can be in

921
00:33:25,279 --> 00:33:26,399
the

922
00:33:26,399 --> 00:33:29,679
under world the upside down world

923
00:33:29,679 --> 00:33:31,919
and there i think there's a way we can

924
00:33:31,919 --> 00:33:35,360
do the nsx tlsa to support this

925
00:33:35,360 --> 00:33:37,919
environment so

926
00:33:37,919 --> 00:33:40,240
human legal trust in the front technical

927
00:33:40,240 --> 00:33:42,399
in the back with dns

928
00:33:42,399 --> 00:33:44,080
and the question is

929
00:33:44,080 --> 00:33:46,159
if you have a verifier

930
00:33:46,159 --> 00:33:48,320
how do you find the right trust registry

931
00:33:48,320 --> 00:33:51,440
that recorded that those digital those

932
00:33:51,440 --> 00:33:55,840
verifiable credentials so next slide

933
00:33:57,519 --> 00:33:59,600
so to do this

934
00:33:59,600 --> 00:34:01,679
after a bunch of brainstorming there's

935
00:34:01,679 --> 00:34:04,159
two ways two things we need to do

936
00:34:04,159 --> 00:34:06,480
so a trust registry is a thing that has

937
00:34:06,480 --> 00:34:09,199
an identity and it needs to prove the

938
00:34:09,199 --> 00:34:11,040
itlsa record

939
00:34:11,040 --> 00:34:12,320
that

940
00:34:12,320 --> 00:34:14,239
an issuer or verifier has been

941
00:34:14,239 --> 00:34:18,000
registered in that ecosystem

942
00:34:18,000 --> 00:34:20,719
so trust registries

943
00:34:20,719 --> 00:34:22,879
it's all about that it's recording the

944
00:34:22,879 --> 00:34:25,440
issuers the verifiers and other trust

945
00:34:25,440 --> 00:34:27,359
registries

946
00:34:27,359 --> 00:34:28,879
so if the trustworthiness three proves

947
00:34:28,879 --> 00:34:31,199
what they trust were just relabeled that

948
00:34:31,199 --> 00:34:34,960
these things are part of it itself

949
00:34:34,960 --> 00:34:37,280
so that would facilitate one part of the

950
00:34:37,280 --> 00:34:38,320
process

951
00:34:38,320 --> 00:34:40,000
and the second issue

952
00:34:40,000 --> 00:34:42,879
part of the process is for a issuer

953
00:34:42,879 --> 00:34:44,719
of credential

954
00:34:44,719 --> 00:34:46,480
to have a new

955
00:34:46,480 --> 00:34:49,040
yeah yet another one tr record for

956
00:34:49,040 --> 00:34:50,159
example

957
00:34:50,159 --> 00:34:51,918
to prove that they belong to a certain

958
00:34:51,918 --> 00:34:54,000
trust registry so one or more trust

959
00:34:54,000 --> 00:34:55,520
registry

960
00:34:55,520 --> 00:34:58,240
so next slide

961
00:34:59,119 --> 00:35:01,440
so if we look in the case of the

962
00:35:01,440 --> 00:35:03,839
identity

963
00:35:04,640 --> 00:35:07,280
the iot registry issuer registration if

964
00:35:07,280 --> 00:35:10,240
we look at it in that context

965
00:35:10,240 --> 00:35:12,400
it builds a chain of trust between a

966
00:35:12,400 --> 00:35:14,960
trust registry and a issuer of

967
00:35:14,960 --> 00:35:16,480
credential

968
00:35:16,480 --> 00:35:20,320
so we have iot registry.ca

969
00:35:20,320 --> 00:35:21,680
they they have

970
00:35:21,680 --> 00:35:23,680
a tlsa record for the root cert that

971
00:35:23,680 --> 00:35:26,160
they use with the public key

972
00:35:26,160 --> 00:35:28,400
and they have a tr record saying you

973
00:35:28,400 --> 00:35:31,119
know what iot registry is

974
00:35:31,119 --> 00:35:34,160
uh registered in trustworth registry dot

975
00:35:34,160 --> 00:35:35,440
ca

976
00:35:35,440 --> 00:35:37,680
so trust registry.ca is

977
00:35:37,680 --> 00:35:39,920
the entity that registered

978
00:35:39,920 --> 00:35:42,000
iut registry based on its governance

979
00:35:42,000 --> 00:35:45,440
model and its rules and all that

980
00:35:45,440 --> 00:35:49,760
and then trust registry.ca publishes a

981
00:35:49,760 --> 00:35:51,359
tlsa record

982
00:35:51,359 --> 00:35:53,520
with a trustworthy label to say you know

983
00:35:53,520 --> 00:35:54,800
what

984
00:35:54,800 --> 00:35:58,240
i iot registry.ca dot underscore trust

985
00:35:58,240 --> 00:36:00,720
registry is registered inside the trust

986
00:36:00,720 --> 00:36:03,920
registry for canada with a tlsa with a

987
00:36:03,920 --> 00:36:05,760
hash of its public key

988
00:36:05,760 --> 00:36:08,400
so it's kind of like a ds and dns key

989
00:36:08,400 --> 00:36:09,440
thing

990
00:36:09,440 --> 00:36:13,440
and it creates a chain of trust so if

991
00:36:13,440 --> 00:36:15,599
a credential is

992
00:36:15,599 --> 00:36:17,280
if somebody looks at a credential they

993
00:36:17,280 --> 00:36:19,760
can work out

994
00:36:19,760 --> 00:36:21,680
which trust registry

995
00:36:21,680 --> 00:36:24,480
uh you should go look at to find that

996
00:36:24,480 --> 00:36:26,960
issuer and get all the keys to make sure

997
00:36:26,960 --> 00:36:28,640
that they're signed properly and all

998
00:36:28,640 --> 00:36:29,920
that

999
00:36:29,920 --> 00:36:32,960
so the ability to do this

1000
00:36:32,960 --> 00:36:35,599
in the digital world does not exist they

1001
00:36:35,599 --> 00:36:38,320
haven't figured out how to do that part

1002
00:36:38,320 --> 00:36:40,079
i think we do something like this it

1003
00:36:40,079 --> 00:36:45,040
facilitates uh the process so next slide

1004
00:36:48,960 --> 00:36:51,119
and then the other one is how do you

1005
00:36:51,119 --> 00:36:53,359
work this all the way down to a global

1006
00:36:53,359 --> 00:36:55,680
chain of trust

1007
00:36:55,680 --> 00:36:58,880
for trust registries

1008
00:36:58,880 --> 00:36:59,920
and

1009
00:36:59,920 --> 00:37:01,760
i think that's

1010
00:37:01,760 --> 00:37:02,800
kind of

1011
00:37:02,800 --> 00:37:04,720
this answers the question

1012
00:37:04,720 --> 00:37:06,560
for the people here in canada for

1013
00:37:06,560 --> 00:37:09,200
example in the digital identity

1014
00:37:09,200 --> 00:37:13,680
if they get a credential issued by a

1015
00:37:13,680 --> 00:37:15,599
another country how do they go back to

1016
00:37:15,599 --> 00:37:19,119
that country to figure out it exists so

1017
00:37:19,119 --> 00:37:20,960
if you have a china trust like this

1018
00:37:20,960 --> 00:37:23,839
where the iot registry.ta is registered

1019
00:37:23,839 --> 00:37:25,920
in the trustworthiness without ca

1020
00:37:25,920 --> 00:37:27,280
entity

1021
00:37:27,280 --> 00:37:29,760
and the trustworthiness3.ca is part of

1022
00:37:29,760 --> 00:37:32,160
the iana trust registry and the

1023
00:37:32,160 --> 00:37:35,040
infrastructure registry as a trust

1024
00:37:35,040 --> 00:37:37,599
anchor in the root zone

1025
00:37:37,599 --> 00:37:39,359
then with the nsx you can build a chain

1026
00:37:39,359 --> 00:37:42,400
of truss all the way down

1027
00:37:43,839 --> 00:37:45,920
to make sure that you know what this

1028
00:37:45,920 --> 00:37:47,599
truss registry there's a chain all the

1029
00:37:47,599 --> 00:37:49,440
way down to then it's authentic

1030
00:37:49,440 --> 00:37:51,040
information

1031
00:37:51,040 --> 00:37:52,560
is it legit

1032
00:37:52,560 --> 00:37:55,680
totally different issue

1033
00:37:55,680 --> 00:37:58,800
we can have malicious dns records signed

1034
00:37:58,800 --> 00:38:00,560
with the nsx

1035
00:38:00,560 --> 00:38:03,200
we don't care but we care but

1036
00:38:03,200 --> 00:38:05,040
technically we don't

1037
00:38:05,040 --> 00:38:06,400
so this is about building trust

1038
00:38:06,400 --> 00:38:08,640
registries

1039
00:38:08,640 --> 00:38:10,480
trust registries being part of other

1040
00:38:10,480 --> 00:38:12,160
trust registries and having a chain of

1041
00:38:12,160 --> 00:38:14,800
trust from iana

1042
00:38:14,800 --> 00:38:17,520
and i think if we do something like this

1043
00:38:17,520 --> 00:38:18,960
it would

1044
00:38:18,960 --> 00:38:20,960
enable

1045
00:38:20,960 --> 00:38:22,480
so there's

1046
00:38:22,480 --> 00:38:24,800
there's a whole lot of discussion in the

1047
00:38:24,800 --> 00:38:28,480
digital identity world in anchoring

1048
00:38:28,480 --> 00:38:30,720
all the digital identity documents

1049
00:38:30,720 --> 00:38:33,280
inside blockchain

1050
00:38:33,280 --> 00:38:36,560
and my my hope here is that we could use

1051
00:38:36,560 --> 00:38:39,440
this to anchor digital identity instead

1052
00:38:39,440 --> 00:38:40,800
of blockchain

1053
00:38:40,800 --> 00:38:42,480
and show that you know what this can be

1054
00:38:42,480 --> 00:38:44,720
trusted from ayanna up it's kind of

1055
00:38:44,720 --> 00:38:47,760
delegated decentralized model so

1056
00:38:47,760 --> 00:38:50,320
next slide

1057
00:38:51,599 --> 00:38:54,880
yeah next slide

1058
00:38:55,760 --> 00:38:57,599
so i think you know at a high level

1059
00:38:57,599 --> 00:38:59,520
there's a good story

1060
00:38:59,520 --> 00:39:01,119
um

1061
00:39:01,119 --> 00:39:02,720
alex

1062
00:39:02,720 --> 00:39:05,119
started to work on the draft for

1063
00:39:05,119 --> 00:39:07,280
did dns03

1064
00:39:07,280 --> 00:39:10,079
uh to link did to dns so you know for

1065
00:39:10,079 --> 00:39:12,560
them i just focus on the dns part there

1066
00:39:12,560 --> 00:39:15,599
but there's more to this story than this

1067
00:39:15,599 --> 00:39:18,240
so we have a repo in get lab

1068
00:39:18,240 --> 00:39:20,400
with dance with this presentation and

1069
00:39:20,400 --> 00:39:22,079
other stuff

1070
00:39:22,079 --> 00:39:23,760
but i think in the end

1071
00:39:23,760 --> 00:39:25,200
if we had something like this it would

1072
00:39:25,200 --> 00:39:26,160
be

1073
00:39:26,160 --> 00:39:27,440
good value

1074
00:39:27,440 --> 00:39:29,680
for the digital identity world

1075
00:39:29,680 --> 00:39:34,160
with trust over ip with w3c to anchor

1076
00:39:34,160 --> 00:39:35,119
uh

1077
00:39:35,119 --> 00:39:37,599
with confidence the dns inside the

1078
00:39:37,599 --> 00:39:40,960
digital identity world

1079
00:39:41,119 --> 00:39:42,960
and that okay

1080
00:39:42,960 --> 00:39:44,320
here's the deck

1081
00:39:44,320 --> 00:39:46,240
all right thanks chuck um

1082
00:39:46,240 --> 00:39:47,680
certainly interesting case with lots of

1083
00:39:47,680 --> 00:39:50,240
new things um in the interest of time to

1084
00:39:50,240 --> 00:39:51,599
keep on track so we have more time for

1085
00:39:51,599 --> 00:39:53,280
another presentation i'm asking

1086
00:39:53,280 --> 00:39:55,520
clarifying questions only

1087
00:39:55,520 --> 00:39:57,359
uh if you have you know should we do

1088
00:39:57,359 --> 00:39:59,119
this or should we not that it is a

1089
00:39:59,119 --> 00:40:00,640
future charter item and should go to the

1090
00:40:00,640 --> 00:40:02,160
mailing list and i would love to see

1091
00:40:02,160 --> 00:40:03,839
discussion on it don't get me wrong but

1092
00:40:03,839 --> 00:40:04,640
uh

1093
00:40:04,640 --> 00:40:06,240
not today on the mic line go ahead

1094
00:40:06,240 --> 00:40:08,800
clarifying question uh why did you put

1095
00:40:08,800 --> 00:40:10,560
ayanna in there other than the fact that

1096
00:40:10,560 --> 00:40:12,640
other people know it could that be some

1097
00:40:12,640 --> 00:40:14,640
other organization

1098
00:40:14,640 --> 00:40:18,640
that is the uh collector of trust

1099
00:40:18,640 --> 00:40:20,800
organizations could it be

1100
00:40:20,800 --> 00:40:22,720
something in the u.n something else or

1101
00:40:22,720 --> 00:40:25,520
does it need to be iana no it can be

1102
00:40:25,520 --> 00:40:27,440
anything

1103
00:40:27,440 --> 00:40:28,480
you're right

1104
00:40:28,480 --> 00:40:30,480
but i know we know what ayanna does

1105
00:40:30,480 --> 00:40:32,800
right so that's why i put it there

1106
00:40:32,800 --> 00:40:34,640
but it could be somebody else

1107
00:40:34,640 --> 00:40:37,599
victor uh just quick uh i'm a very

1108
00:40:37,599 --> 00:40:39,440
simple person i don't understand this at

1109
00:40:39,440 --> 00:40:41,359
all could you publish

1110
00:40:41,359 --> 00:40:42,880
some

1111
00:40:42,880 --> 00:40:46,160
simple use cases requirements documents

1112
00:40:46,160 --> 00:40:47,839
i'm seeing an architecture that i just

1113
00:40:47,839 --> 00:40:49,920
don't understand at all

1114
00:40:49,920 --> 00:40:51,520
so it would be helpful

1115
00:40:51,520 --> 00:40:53,920
to explain this to people who are not

1116
00:40:53,920 --> 00:40:56,640
too clever like me

1117
00:40:56,640 --> 00:40:58,720
yes exactly it took me a while to figure

1118
00:40:58,720 --> 00:41:01,680
this stuff out i agree

1119
00:41:01,680 --> 00:41:03,119
i think that'll come this is the high

1120
00:41:03,119 --> 00:41:05,119
level early introduction

1121
00:41:05,119 --> 00:41:07,760
john i'm an even simpler person than

1122
00:41:07,760 --> 00:41:08,800
victor

1123
00:41:08,800 --> 00:41:10,960
um

1124
00:41:10,960 --> 00:41:15,760
why do we need a new uh rr type for this

1125
00:41:16,720 --> 00:41:19,119
let's do

1126
00:41:19,119 --> 00:41:21,520
so the clarification is if you have an

1127
00:41:21,520 --> 00:41:22,720
issue where if somebody issues

1128
00:41:22,720 --> 00:41:24,560
credentials

1129
00:41:24,560 --> 00:41:27,119
to show which trusts or just trees they

1130
00:41:27,119 --> 00:41:29,520
belong to

1131
00:41:29,520 --> 00:41:31,280
so let's say you have a university that

1132
00:41:31,280 --> 00:41:33,920
issues a graduation certificate or

1133
00:41:33,920 --> 00:41:35,599
diplomas

1134
00:41:35,599 --> 00:41:37,200
then in canada you would have a trust

1135
00:41:37,200 --> 00:41:38,880
registry with all the universities in

1136
00:41:38,880 --> 00:41:41,599
canada that are registered in there

1137
00:41:41,599 --> 00:41:44,480
and then when you receive these

1138
00:41:44,480 --> 00:41:46,240
credential from that

1139
00:41:46,240 --> 00:41:47,760
this university you can check in that

1140
00:41:47,760 --> 00:41:50,000
trust registry to make sure they're part

1141
00:41:50,000 --> 00:41:52,560
of that group

1142
00:41:52,560 --> 00:41:54,240
that's what they encourage everybody to

1143
00:41:54,240 --> 00:41:56,400
to read the slides because i got it only

1144
00:41:56,400 --> 00:41:58,000
after seeing the slides multiple times

1145
00:41:58,000 --> 00:42:00,400
while doing review that it made sense so

1146
00:42:00,400 --> 00:42:02,560
it is a complex use case and but it's an

1147
00:42:02,560 --> 00:42:04,800
interesting one so do read his slides

1148
00:42:04,800 --> 00:42:07,839
multiple times and it will help

1149
00:42:07,839 --> 00:42:09,440
i'll try to make a joke

1150
00:42:09,440 --> 00:42:10,560
thank you

1151
00:42:10,560 --> 00:42:12,000
all right thanks very much chuck all

1152
00:42:12,000 --> 00:42:13,920
right so we'll turn to bob now for

1153
00:42:13,920 --> 00:42:15,440
hillary's gonna talk about

1154
00:42:15,440 --> 00:42:16,960
fun with drones

1155
00:42:16,960 --> 00:42:19,760
okay thank you very much and this will

1156
00:42:19,760 --> 00:42:21,599
be looking at

1157
00:42:21,599 --> 00:42:23,839
identity identifier in a different light

1158
00:42:23,839 --> 00:42:26,400
than we just had and how i'm looking at

1159
00:42:26,400 --> 00:42:28,839
leveraging dance for online aircraft

1160
00:42:28,839 --> 00:42:32,480
communications next slide

1161
00:42:32,480 --> 00:42:34,160
and fortunately i'm dealing here with

1162
00:42:34,160 --> 00:42:36,160
the green field most communications

1163
00:42:36,160 --> 00:42:39,599
today is line of sight often with no ap

1164
00:42:39,599 --> 00:42:41,680
and this is changing

1165
00:42:41,680 --> 00:42:44,480
the r it will be constrained capacity

1166
00:42:44,480 --> 00:42:46,079
that we have to deal with

1167
00:42:46,079 --> 00:42:47,680
there are two basic types of

1168
00:42:47,680 --> 00:42:49,599
communication command and control

1169
00:42:49,599 --> 00:42:51,599
typically called just c2

1170
00:42:51,599 --> 00:42:53,520
between the unmanned aircraft and the

1171
00:42:53,520 --> 00:42:55,440
ground control station

1172
00:42:55,440 --> 00:42:58,400
the other one is network remote id which

1173
00:42:58,400 --> 00:43:01,359
is the telemetry from the uh the

1174
00:43:01,359 --> 00:43:03,599
unmanned aircraft to the unmanned

1175
00:43:03,599 --> 00:43:08,000
traffic management system next

1176
00:43:08,640 --> 00:43:10,640
even autonomous operations need

1177
00:43:10,640 --> 00:43:13,760
communications um there is the c2

1178
00:43:13,760 --> 00:43:16,920
updates both ways but less traffic than

1179
00:43:16,920 --> 00:43:20,000
non-autonomous operations but telemetry

1180
00:43:20,000 --> 00:43:22,880
is always we always must do telemetry

1181
00:43:22,880 --> 00:43:24,960
and if autonomous it must be from the

1182
00:43:24,960 --> 00:43:26,800
unmanned aircraft not from the ground

1183
00:43:26,800 --> 00:43:28,960
control station because in

1184
00:43:28,960 --> 00:43:31,040
non-autonomous operations the ground

1185
00:43:31,040 --> 00:43:33,359
control station gets telemetry anyway as

1186
00:43:33,359 --> 00:43:36,560
part of the the c2 and may do the

1187
00:43:36,560 --> 00:43:40,079
forwarding to the ut to the utm

1188
00:43:40,079 --> 00:43:41,839
many of you may be aware of the manned

1189
00:43:41,839 --> 00:43:43,760
aircraft adsb

1190
00:43:43,760 --> 00:43:46,240
this is not an option we've been told in

1191
00:43:46,240 --> 00:43:48,400
the regulations that adsb will not be

1192
00:43:48,400 --> 00:43:50,079
used for unmanned aircraft and if you

1193
00:43:50,079 --> 00:43:51,920
have any questions we do have some

1194
00:43:51,920 --> 00:43:54,319
people here who can answer that directly

1195
00:43:54,319 --> 00:43:56,000
but you can take my word for it and

1196
00:43:56,000 --> 00:43:59,200
finally there is a lot of talk that um

1197
00:43:59,200 --> 00:44:02,480
future of utm rerun directives direct to

1198
00:44:02,480 --> 00:44:03,599
the ua

1199
00:44:03,599 --> 00:44:07,280
so how the utm will tell the ua

1200
00:44:07,280 --> 00:44:10,000
you need to move here to avoid this

1201
00:44:10,000 --> 00:44:11,760
situation

1202
00:44:11,760 --> 00:44:13,040
and that will go particularly in

1203
00:44:13,040 --> 00:44:15,040
autonomous operations we'll may go

1204
00:44:15,040 --> 00:44:18,560
directly to the ua to make a timely

1205
00:44:18,560 --> 00:44:23,359
move for whatever reason next

1206
00:44:23,359 --> 00:44:25,359
so now i need to secure the ua

1207
00:44:25,359 --> 00:44:26,640
communication

1208
00:44:26,640 --> 00:44:28,400
there's likely two choices and that's

1209
00:44:28,400 --> 00:44:30,880
esp and dtls

1210
00:44:30,880 --> 00:44:33,599
dtls is a likely choice for most network

1211
00:44:33,599 --> 00:44:35,520
remote id

1212
00:44:35,520 --> 00:44:37,359
because it's to a fixed known network

1213
00:44:37,359 --> 00:44:40,240
mode id service provider

1214
00:44:40,240 --> 00:44:42,160
but when the ua is on multiple

1215
00:44:42,160 --> 00:44:44,560
interfaces there's a known problem with

1216
00:44:44,560 --> 00:44:48,560
current dtls code that it can't handle

1217
00:44:48,560 --> 00:44:51,200
changes on which interface is coming but

1218
00:44:51,200 --> 00:44:52,960
that should be fixable that sounds like

1219
00:44:52,960 --> 00:44:55,280
just like um an implementation in the

1220
00:44:55,280 --> 00:44:56,640
code problem

1221
00:44:56,640 --> 00:44:57,440
um

1222
00:44:57,440 --> 00:44:59,280
but it has been brought to my attention

1223
00:44:59,280 --> 00:45:01,119
for trying to do this

1224
00:45:01,119 --> 00:45:03,359
when the the ground control station is

1225
00:45:03,359 --> 00:45:04,560
mobile

1226
00:45:04,560 --> 00:45:07,599
esp is more likely to be the mole ike or

1227
00:45:07,599 --> 00:45:10,319
hip for the can to control example that

1228
00:45:10,319 --> 00:45:13,599
is ups is proposing that the ups trucks

1229
00:45:13,599 --> 00:45:15,599
will be the ground control system with

1230
00:45:15,599 --> 00:45:18,079
with the the ua being launched from the

1231
00:45:18,079 --> 00:45:21,040
uh the the the uh the truck and they

1232
00:45:21,040 --> 00:45:22,960
make and it's making delivery while the

1233
00:45:22,960 --> 00:45:24,880
operator is going to the next

1234
00:45:24,880 --> 00:45:27,760
um place and so it potentially moves

1235
00:45:27,760 --> 00:45:30,079
around the network and so esp and beep

1236
00:45:30,079 --> 00:45:32,400
mode is a natural is naturally

1237
00:45:32,400 --> 00:45:34,880
multi-homed and will work well in this

1238
00:45:34,880 --> 00:45:36,960
either keyed either way

1239
00:45:36,960 --> 00:45:39,040
and all this is in my draft mosque which

1240
00:45:39,040 --> 00:45:42,079
secure enrich c2 um this has not been

1241
00:45:42,079 --> 00:45:44,400
adopted by the drip i left up drip in

1242
00:45:44,400 --> 00:45:47,040
there left that out by the drip work

1243
00:45:47,040 --> 00:45:48,240
group because they wanted to first

1244
00:45:48,240 --> 00:45:50,720
finish the broadcast remote id before we

1245
00:45:50,720 --> 00:45:52,880
tackled the network remote id but it is

1246
00:45:52,880 --> 00:45:54,800
current work for the group next you want

1247
00:45:54,800 --> 00:45:57,599
to tell martin's comment now martin

1248
00:45:57,599 --> 00:45:58,839
yeah i just wanted to

1249
00:45:58,839 --> 00:46:01,680
ask i can think of a third choice quick

1250
00:46:01,680 --> 00:46:03,920
does some of the multi-homing things and

1251
00:46:03,920 --> 00:46:06,160
has all the same properties as dtls but

1252
00:46:06,160 --> 00:46:07,839
provides

1253
00:46:07,839 --> 00:46:09,839
some superior perhaps

1254
00:46:09,839 --> 00:46:12,000
application layer

1255
00:46:12,000 --> 00:46:14,560
semantics like um

1256
00:46:14,560 --> 00:46:17,119
streams for instance it is a potential

1257
00:46:17,119 --> 00:46:19,839
i've not heard discussed um there is a

1258
00:46:19,839 --> 00:46:22,400
directive from iko

1259
00:46:22,400 --> 00:46:24,960
for manned aircraft then man aircraft

1260
00:46:24,960 --> 00:46:28,200
will be dtls

1261
00:46:28,400 --> 00:46:31,359
okay um and so

1262
00:46:31,359 --> 00:46:33,359
kind of fading up and you're right quick

1263
00:46:33,359 --> 00:46:35,200
is potentially another option which i've

1264
00:46:35,200 --> 00:46:39,440
not delved into yet okay okay yeah dvd

1265
00:46:39,440 --> 00:46:41,040
these things are not made in a vacuum so

1266
00:46:41,040 --> 00:46:43,440
i'm kind of surprised with that

1267
00:46:43,440 --> 00:46:45,200
you're just accepting a mandate on that

1268
00:46:45,200 --> 00:46:46,880
one but i guess it's maybe not your your

1269
00:46:46,880 --> 00:46:49,920
decision to make yeah

1270
00:46:49,920 --> 00:46:52,160
now um

1271
00:46:52,160 --> 00:46:55,839
the ua identities are defined in draft

1272
00:46:55,839 --> 00:47:00,000
ietf drip grid uh which is finishing up

1273
00:47:00,000 --> 00:47:03,520
its review and could uh be done pretty

1274
00:47:03,520 --> 00:47:06,240
soon um the registry's draft needs a lot

1275
00:47:06,240 --> 00:47:08,240
of work still as came out from the

1276
00:47:08,240 --> 00:47:10,880
hackathon this past weekend

1277
00:47:10,880 --> 00:47:14,640
the drip entity tag the debt is the

1278
00:47:14,640 --> 00:47:16,800
hierarchical host identity tag which is

1279
00:47:16,800 --> 00:47:20,319
an update on rc 7401

1280
00:47:20,319 --> 00:47:22,960
that's our session ids which makes this

1281
00:47:22,960 --> 00:47:25,920
for the life of the ua or for only a 30

1282
00:47:25,920 --> 00:47:28,160
minute operation technically we call

1283
00:47:28,160 --> 00:47:31,280
them operations not flights

1284
00:47:31,280 --> 00:47:34,319
and eddsa 2525519

1285
00:47:34,319 --> 00:47:37,359
is used for the raw public key

1286
00:47:37,359 --> 00:47:39,040
that's because it gives us some nice

1287
00:47:39,040 --> 00:47:42,240
size characteristics to work with

1288
00:47:42,240 --> 00:47:44,960
so define dns

1289
00:47:44,960 --> 00:47:47,200
fqdns for all

1290
00:47:47,200 --> 00:47:50,000
drip enabled ua it's very easy because

1291
00:47:50,000 --> 00:47:52,960
of the structure there to set up that

1292
00:47:52,960 --> 00:47:55,280
that the the debt resolves to this

1293
00:47:55,280 --> 00:47:57,839
particular fqdn um

1294
00:47:57,839 --> 00:48:00,319
and if the debt is not in dns the debt

1295
00:48:00,319 --> 00:48:02,960
was revoked so there's no revocation

1296
00:48:02,960 --> 00:48:04,960
process in here other than if you can't

1297
00:48:04,960 --> 00:48:06,800
find it it was revoked and if you have

1298
00:48:06,800 --> 00:48:08,640
authorization you can ask the registry

1299
00:48:08,640 --> 00:48:10,800
why was it revoked and it

1300
00:48:10,800 --> 00:48:13,200
may tell you if you have rights

1301
00:48:13,200 --> 00:48:16,640
so that's stored in dns either or both

1302
00:48:16,640 --> 00:48:18,960
in the hip or tsa resource record

1303
00:48:18,960 --> 00:48:21,440
depending on which protocol you're using

1304
00:48:21,440 --> 00:48:22,400
to

1305
00:48:22,400 --> 00:48:24,240
to do it and these are all the raw

1306
00:48:24,240 --> 00:48:26,400
public keys which is basically it's just

1307
00:48:26,400 --> 00:48:28,160
how how they're wrapped differently from

1308
00:48:28,160 --> 00:48:30,720
the two otherwise exact same content

1309
00:48:30,720 --> 00:48:33,040
next

1310
00:48:33,680 --> 00:48:35,920
so debts and dns trusts may be

1311
00:48:35,920 --> 00:48:38,720
established by dns sec

1312
00:48:38,720 --> 00:48:42,000
but will this be possible for zones run

1313
00:48:42,000 --> 00:48:45,839
by the hcit domain authorities the hda

1314
00:48:45,839 --> 00:48:48,480
with hundreds of new debts per hour

1315
00:48:48,480 --> 00:48:51,760
be able to sign zone to be determined

1316
00:48:51,760 --> 00:48:55,839
but no if if this is a a registry which

1317
00:48:55,839 --> 00:48:58,000
is supporting a delivery service which

1318
00:48:58,000 --> 00:48:59,920
is requesting you know

1319
00:48:59,920 --> 00:49:01,760
a bunch of

1320
00:49:01,760 --> 00:49:06,079
session ids for each delivery operation

1321
00:49:06,079 --> 00:49:08,319
um there are going to be millions of

1322
00:49:08,319 --> 00:49:10,960
these created and aged out quite rapidly

1323
00:49:10,960 --> 00:49:13,359
and will dns sec be able to deal with

1324
00:49:13,359 --> 00:49:16,240
that unfortunately now i say attestation

1325
00:49:16,240 --> 00:49:18,079
here we have since learned that in rat

1326
00:49:18,079 --> 00:49:20,400
determination it should be evidence

1327
00:49:20,400 --> 00:49:23,280
so in my slides where i say attestation

1328
00:49:23,280 --> 00:49:26,640
think um evidence in the terms of rats

1329
00:49:26,640 --> 00:49:29,520
so the registration evidence insert

1330
00:49:29,520 --> 00:49:32,559
resource records via private oid that's

1331
00:49:32,559 --> 00:49:35,119
just how you can put private oid allows

1332
00:49:35,119 --> 00:49:37,520
you to put any object you want in a cert

1333
00:49:37,520 --> 00:49:39,200
resource record

1334
00:49:39,200 --> 00:49:40,880
see the registry's draft and how i'm

1335
00:49:40,880 --> 00:49:43,440
doing that the interesting thing is this

1336
00:49:43,440 --> 00:49:46,400
is provides proof of registration and

1337
00:49:46,400 --> 00:49:49,520
thus trust in the det without having dns

1338
00:49:49,520 --> 00:49:50,559
set

1339
00:49:50,559 --> 00:49:52,800
so if you receive the if you're able to

1340
00:49:52,800 --> 00:49:54,880
pull out or actually receive it in the

1341
00:49:54,880 --> 00:49:57,920
broadcast message um the the this

1342
00:49:57,920 --> 00:49:59,200
registration

1343
00:49:59,200 --> 00:50:02,640
evidence you know that this debt has

1344
00:50:02,640 --> 00:50:04,880
been registered you have the proof of

1345
00:50:04,880 --> 00:50:07,520
that without having to have a signed

1346
00:50:07,520 --> 00:50:09,920
zone because you have the independent

1347
00:50:09,920 --> 00:50:12,960
tree of the signing of of the register

1348
00:50:12,960 --> 00:50:15,040
at the registries and how they're how

1349
00:50:15,040 --> 00:50:18,480
they are authorized next

1350
00:50:18,480 --> 00:50:20,160
so that's all the background

1351
00:50:20,160 --> 00:50:22,720
and now up to ua and dance when using

1352
00:50:22,720 --> 00:50:24,000
dtls

1353
00:50:24,000 --> 00:50:27,520
we could send an irc 2750 raw public key

1354
00:50:27,520 --> 00:50:29,680
of the high but then how do we link it

1355
00:50:29,680 --> 00:50:31,920
back to the det

1356
00:50:31,920 --> 00:50:34,319
it's better to use dance with the known

1357
00:50:34,319 --> 00:50:36,319
fqdn we derived from the debt to

1358
00:50:36,319 --> 00:50:38,960
retrieve everything from dns

1359
00:50:38,960 --> 00:50:41,359
the pieces just fit

1360
00:50:41,359 --> 00:50:43,520
but server side may need some special

1361
00:50:43,520 --> 00:50:46,880
help on the evidence for trust if it's

1362
00:50:46,880 --> 00:50:50,480
not a dns sec evidence for trust

1363
00:50:50,480 --> 00:50:52,559
next

1364
00:50:52,559 --> 00:50:54,480
and but these are a limited number of

1365
00:50:54,480 --> 00:50:57,040
servers these are the servers run by the

1366
00:50:57,040 --> 00:51:00,000
the network remote id service providers

1367
00:51:00,000 --> 00:51:02,000
so we're not talking about a large

1368
00:51:02,000 --> 00:51:03,119
community

1369
00:51:03,119 --> 00:51:04,720
um

1370
00:51:04,720 --> 00:51:05,599
and

1371
00:51:05,599 --> 00:51:09,920
if the if drip is widely adopted

1372
00:51:09,920 --> 00:51:12,240
this could mean millions of uas in the

1373
00:51:12,240 --> 00:51:14,960
coming years feeding telemetry into utm

1374
00:51:14,960 --> 00:51:17,520
even via the ground control station and

1375
00:51:17,520 --> 00:51:20,640
note that that c2 will tend to use

1376
00:51:20,640 --> 00:51:23,839
pre-stored on ua identity for dtls

1377
00:51:23,839 --> 00:51:25,760
authentication because you have this

1378
00:51:25,760 --> 00:51:27,440
natural you purchase your ua with your

1379
00:51:27,440 --> 00:51:29,839
ground control system or

1380
00:51:29,839 --> 00:51:31,440
you install the software on your

1381
00:51:31,440 --> 00:51:33,280
smartphone so that's like a closed

1382
00:51:33,280 --> 00:51:35,200
environment there

1383
00:51:35,200 --> 00:51:38,000
it's more involved but can work for

1384
00:51:38,000 --> 00:51:40,559
other proposed solutions from other stos

1385
00:51:40,559 --> 00:51:43,040
that my drip proposal for mode id is not

1386
00:51:43,040 --> 00:51:46,319
the only extant one there are others it

1387
00:51:46,319 --> 00:51:48,240
gets a little more complicated for what

1388
00:51:48,240 --> 00:51:50,160
they're doing though it is doable for

1389
00:51:50,160 --> 00:51:51,760
them as well

1390
00:51:51,760 --> 00:51:53,920
next

1391
00:51:53,920 --> 00:51:56,240
and that completes my slides and and our

1392
00:51:56,240 --> 00:51:59,520
intent here that i'm looking that dtls

1393
00:51:59,520 --> 00:52:00,880
may be

1394
00:52:00,880 --> 00:52:02,720
very important

1395
00:52:02,720 --> 00:52:05,680
for a number of reasons and that then

1396
00:52:05,680 --> 00:52:09,520
using dance for how the um identities uh

1397
00:52:09,520 --> 00:52:10,480
how

1398
00:52:10,480 --> 00:52:13,520
how they'd like to just pass

1399
00:52:13,520 --> 00:52:15,119
the fqdn

1400
00:52:15,119 --> 00:52:17,119
in in the handshake don't have to pass

1401
00:52:17,119 --> 00:52:19,040
all the rest of it the server can look

1402
00:52:19,040 --> 00:52:23,920
it up and it will just work well

1403
00:52:23,920 --> 00:52:27,040
and could end up being a lot of it

1404
00:52:27,040 --> 00:52:28,960
paul

1405
00:52:28,960 --> 00:52:31,440
hi paul speaking as just an individual

1406
00:52:31,440 --> 00:52:34,640
i just wanted to remind you that

1407
00:52:34,640 --> 00:52:38,000
we have ways of storing chains of dns

1408
00:52:38,000 --> 00:52:39,359
records

1409
00:52:39,359 --> 00:52:41,520
uh the query chain

1410
00:52:41,520 --> 00:52:43,760
and you can use them to offline

1411
00:52:43,760 --> 00:52:47,040
synchronize your client server state

1412
00:52:47,040 --> 00:52:49,200
if you pull that from the dns so if

1413
00:52:49,200 --> 00:52:51,200
you're offline you can keep your own

1414
00:52:51,200 --> 00:52:52,800
link to the root and refresh it

1415
00:52:52,800 --> 00:52:54,640
regularly when you're online and then

1416
00:52:54,640 --> 00:52:56,480
you have like a

1417
00:52:56,480 --> 00:52:58,319
pretty up-to-date valid path you can

1418
00:52:58,319 --> 00:52:59,760
send to the other side of the tls

1419
00:52:59,760 --> 00:53:01,760
connection yeah and you can

1420
00:53:01,760 --> 00:53:04,400
so these dns uh query chains you can

1421
00:53:04,400 --> 00:53:06,079
embed in tls because they have also an

1422
00:53:06,079 --> 00:53:08,000
extension for that

1423
00:53:08,000 --> 00:53:10,079
when before you take off

1424
00:53:10,079 --> 00:53:12,839
your ua has some good bandwidth

1425
00:53:12,839 --> 00:53:14,720
connection maybe through the ground

1426
00:53:14,720 --> 00:53:17,680
control system to to do that pre-setup

1427
00:53:17,680 --> 00:53:20,160
or takeoff but then i'm dealing with for

1428
00:53:20,160 --> 00:53:20,880
for

1429
00:53:20,880 --> 00:53:23,119
like cargo delivery which is then going

1430
00:53:23,119 --> 00:53:26,319
from one utm space to another utm space

1431
00:53:26,319 --> 00:53:29,359
how do we do the handoff particularly if

1432
00:53:29,359 --> 00:53:32,960
the the the operation that was filed you

1433
00:53:32,960 --> 00:53:34,559
have to change it because of whether or

1434
00:53:34,559 --> 00:53:37,680
whatever and so then that may get

1435
00:53:37,680 --> 00:53:39,440
exciting i don't have an answer yet how

1436
00:53:39,440 --> 00:53:42,000
to do that one that's that's still um

1437
00:53:42,000 --> 00:53:45,359
tbd and uh looking at my colleague on

1438
00:53:45,359 --> 00:53:47,359
the faa side and he's shaking his head

1439
00:53:47,359 --> 00:53:49,359
because he has the same class of problem

1440
00:53:49,359 --> 00:53:51,119
on much bigger pieces of hardware than i

1441
00:53:51,119 --> 00:53:53,280
do

1442
00:53:53,760 --> 00:53:55,599
so one you know thing that that has

1443
00:53:55,599 --> 00:53:56,720
always been interesting to me with

1444
00:53:56,720 --> 00:53:59,200
things like dance and dane is

1445
00:53:59,200 --> 00:54:00,800
uh which i think matters to you more

1446
00:54:00,800 --> 00:54:03,359
than anybody else is bandwidth savings

1447
00:54:03,359 --> 00:54:05,200
uh so have you done any measurements to

1448
00:54:05,200 --> 00:54:06,800
determine you know by using dan and

1449
00:54:06,800 --> 00:54:08,480
dance that you can actually reduce

1450
00:54:08,480 --> 00:54:11,680
i am doing bike counting and i'm looking

1451
00:54:11,680 --> 00:54:14,400
really hard at chic

1452
00:54:14,400 --> 00:54:16,400
um for how we're going to be compressing

1453
00:54:16,400 --> 00:54:17,280
this

1454
00:54:17,280 --> 00:54:20,559
um and why i want chic end to end

1455
00:54:20,559 --> 00:54:22,960
not just just see on the on on the wires

1456
00:54:22,960 --> 00:54:25,359
because some of these the avionics that

1457
00:54:25,359 --> 00:54:28,319
you may have an an ethernet network on

1458
00:54:28,319 --> 00:54:31,200
the larger uas and so the avionics are

1459
00:54:31,200 --> 00:54:33,119
ethernet connected they don't know the

1460
00:54:33,119 --> 00:54:35,680
characteristics so wireless and so how

1461
00:54:35,680 --> 00:54:38,160
do we do that so so i'm count i'm

1462
00:54:38,160 --> 00:54:40,559
literally am counting bytes

1463
00:54:40,559 --> 00:54:42,160
and and i haven't gotten into those i've

1464
00:54:42,160 --> 00:54:43,760
been concentrating more on on the

1465
00:54:43,760 --> 00:54:46,160
headers but that's the next step that i

1466
00:54:46,160 --> 00:54:48,160
need to do and i'll be

1467
00:54:48,160 --> 00:54:50,160
in the next three months be working

1468
00:54:50,160 --> 00:54:51,920
through that yes it would be neat to see

1469
00:54:51,920 --> 00:54:53,920
a comparison of of you know with and

1470
00:54:53,920 --> 00:54:56,400
without dane and dance right yeah so

1471
00:54:56,400 --> 00:54:58,559
that that that all has to that that is

1472
00:54:58,559 --> 00:55:01,760
all on my list of things to do

1473
00:55:01,760 --> 00:55:04,480
does some of this apply to i know the

1474
00:55:04,480 --> 00:55:06,960
early discussions in drip had to do with

1475
00:55:06,960 --> 00:55:08,720
uh sending data over bluetooth which is

1476
00:55:08,720 --> 00:55:11,119
a pain in the neck or is that that is

1477
00:55:11,119 --> 00:55:13,680
pretty much done okay that is the drip

1478
00:55:13,680 --> 00:55:15,520
off draft

1479
00:55:15,520 --> 00:55:17,920
which is in workgroup last call and that

1480
00:55:17,920 --> 00:55:20,400
is how working within we only have 200

1481
00:55:20,400 --> 00:55:22,240
bytes to work with

1482
00:55:22,240 --> 00:55:24,400
how do we do the proofs and everything

1483
00:55:24,400 --> 00:55:27,599
in 200 bytes and i've done it

1484
00:55:27,599 --> 00:55:29,359
all right victor just exactly two

1485
00:55:29,359 --> 00:55:32,799
invites uh i applaud the use of raw

1486
00:55:32,799 --> 00:55:35,119
public keys it's a cool idea i haven't

1487
00:55:35,119 --> 00:55:37,680
seen any tls stacks that actually

1488
00:55:37,680 --> 00:55:39,359
support this

1489
00:55:39,359 --> 00:55:41,680
are these going to be sort of ground up

1490
00:55:41,680 --> 00:55:44,000
not the usual tls decks we're used to

1491
00:55:44,000 --> 00:55:46,799
seeing in sort of the open source world

1492
00:55:46,799 --> 00:55:48,000
are there

1493
00:55:48,000 --> 00:55:50,720
do they exist well that's yeah and and

1494
00:55:50,720 --> 00:55:52,480
also that's why

1495
00:55:52,480 --> 00:55:55,359
looking to dance that's it that dan's

1496
00:55:55,359 --> 00:55:58,160
fqdn so that's sending back to this

1497
00:55:58,160 --> 00:56:02,079
only the fqdn not the raw public key

1498
00:56:02,079 --> 00:56:04,000
in terms of what is what is passed you

1499
00:56:04,000 --> 00:56:05,599
people know more about this than i do i

1500
00:56:05,599 --> 00:56:07,200
may be stepping my foot in something

1501
00:56:07,200 --> 00:56:09,760
that i don't know i stepped into

1502
00:56:09,760 --> 00:56:10,720
okay

1503
00:56:10,720 --> 00:56:12,559
i know that hanus actually has raw

1504
00:56:12,559 --> 00:56:14,559
public keys working in various of the

1505
00:56:14,559 --> 00:56:17,839
sex that he worked on

1506
00:56:17,839 --> 00:56:20,720
thank you ben

1507
00:56:22,400 --> 00:56:25,200
likewise there is also code for openssl

1508
00:56:25,200 --> 00:56:28,799
to do drop of the key and

1509
00:56:28,799 --> 00:56:30,480
i thought it had not been merged yet but

1510
00:56:30,480 --> 00:56:32,720
i'm not seeing an open pr i can send the

1511
00:56:32,720 --> 00:56:36,558
pointer to victor offline

1512
00:56:37,680 --> 00:56:41,480
since victor is in positioning

1513
00:56:44,640 --> 00:56:47,839
so we still have a row to hold here but

1514
00:56:47,839 --> 00:56:50,559
this is the direction that

1515
00:56:50,559 --> 00:56:52,720
we're going

1516
00:56:52,720 --> 00:56:53,760
all right

1517
00:56:53,760 --> 00:56:56,799
any last questions

1518
00:56:57,280 --> 00:56:59,440
thank you for your time thank you so

1519
00:56:59,440 --> 00:57:01,359
i'll remind everybody that you know uh

1520
00:57:01,359 --> 00:57:02,880
the use case some of these use cases do

1521
00:57:02,880 --> 00:57:05,200
require additional drafts and protocols

1522
00:57:05,200 --> 00:57:06,640
and stuff and we knew when we started

1523
00:57:06,640 --> 00:57:08,319
dance that that once we got over the

1524
00:57:08,319 --> 00:57:10,000
base you know a couple of documents as

1525
00:57:10,000 --> 00:57:11,280
well as how it was all going to fit

1526
00:57:11,280 --> 00:57:13,200
together if you remember in the very

1527
00:57:13,200 --> 00:57:15,599
first you know danish boss

1528
00:57:15,599 --> 00:57:17,920
before we were dancing about danishes

1529
00:57:17,920 --> 00:57:19,599
uh you know there was a lot of questions

1530
00:57:19,599 --> 00:57:20,880
about how all these things were going to

1531
00:57:20,880 --> 00:57:22,079
fit together and you can see some of

1532
00:57:22,079 --> 00:57:23,520
these use cases are getting you know

1533
00:57:23,520 --> 00:57:25,520
pretty complex and out there but that's

1534
00:57:25,520 --> 00:57:27,920
how it started from the beginning so

1535
00:57:27,920 --> 00:57:30,720
uh thank you everybody for coming um

1536
00:57:30,720 --> 00:57:32,880
we if it looks like we're close to to

1537
00:57:32,880 --> 00:57:34,480
getting the you know the first two real

1538
00:57:34,480 --> 00:57:36,240
core pieces of protocol documents done

1539
00:57:36,240 --> 00:57:38,480
that would be awesome and i think

1540
00:57:38,480 --> 00:57:40,640
it'd be about a year i think that may be

1541
00:57:40,640 --> 00:57:42,640
almost a record for dns for a working

1542
00:57:42,640 --> 00:57:45,920
group certainly for a dns working group

1543
00:57:45,920 --> 00:57:47,680
so thank you everybody uh that concludes

1544
00:57:47,680 --> 00:57:49,599
today's dance session you may dance

1545
00:57:49,599 --> 00:57:53,160
freely among yourselves

