1
00:00:06,399 --> 00:00:09,399
yes

2
00:00:48,879 --> 00:00:51,879
what

3
00:01:07,760 --> 00:01:10,640
can you see me typing

4
00:01:10,640 --> 00:01:13,840
oh then you're the one

5
00:01:30,479 --> 00:01:33,479
okay

6
00:01:47,200 --> 00:01:50,200
wow

7
00:02:06,320 --> 00:02:09,320
oh

8
00:02:18,000 --> 00:02:19,840
okay we're at time

9
00:02:19,840 --> 00:02:22,640
uh those who are remote can you hear us

10
00:02:22,640 --> 00:02:24,958
okay

11
00:02:30,480 --> 00:02:33,280
yes all good

12
00:02:33,440 --> 00:02:35,360
all right

13
00:02:35,360 --> 00:02:38,879
can you see the uh

14
00:02:38,879 --> 00:02:42,000
the slides that are being shared

15
00:02:42,000 --> 00:02:43,680
yes yes

16
00:02:43,680 --> 00:02:46,080
yes excellent okay

17
00:02:46,080 --> 00:02:48,640
let's go ahead and get started

18
00:02:48,640 --> 00:02:51,599
welcome to the last session and the last

19
00:02:51,599 --> 00:02:55,519
day of the ietf 114. yay

20
00:02:55,519 --> 00:02:56,400
um

21
00:02:56,400 --> 00:02:59,680
so you are in this

22
00:02:59,680 --> 00:03:01,920
really simple cloud identity management

23
00:03:01,920 --> 00:03:04,239
so i'm not going to read the official

24
00:03:04,239 --> 00:03:05,040
name

25
00:03:05,040 --> 00:03:07,680
uh because that's what we do so

26
00:03:07,680 --> 00:03:10,080
uh this is what we are covering in the

27
00:03:10,080 --> 00:03:13,200
session if you're not expecting to talk

28
00:03:13,200 --> 00:03:15,519
about skin you're probably in the wrong

29
00:03:15,519 --> 00:03:16,480
session

30
00:03:16,480 --> 00:03:20,800
next slide um by now you should all be

31
00:03:20,800 --> 00:03:23,519
very well familiar with how the ietf

32
00:03:23,519 --> 00:03:24,720
works

33
00:03:24,720 --> 00:03:27,120
and the participation which we note in

34
00:03:27,120 --> 00:03:30,560
the note well so i will just skip

35
00:03:30,560 --> 00:03:32,480
and let you read it through the meeting

36
00:03:32,480 --> 00:03:34,799
materials next slide

37
00:03:34,799 --> 00:03:36,159
um

38
00:03:36,159 --> 00:03:38,560
i do want to provide some meeting tips

39
00:03:38,560 --> 00:03:40,560
and i know it's the last day but we've

40
00:03:40,560 --> 00:03:42,640
been asked as chairs to remind everybody

41
00:03:42,640 --> 00:03:44,400
of the meeting tips

42
00:03:44,400 --> 00:03:46,400
so for those who are here

43
00:03:46,400 --> 00:03:49,040
physically in the venue make sure to

44
00:03:49,040 --> 00:03:51,120
sign into the session

45
00:03:51,120 --> 00:03:52,959
via either the little

46
00:03:52,959 --> 00:03:57,840
uh video icon or the on-site tool icon

47
00:03:57,840 --> 00:04:00,480
on the webpage under skim

48
00:04:00,480 --> 00:04:01,519
that way

49
00:04:01,519 --> 00:04:03,840
there's some binding that acknowledges

50
00:04:03,840 --> 00:04:06,319
that you were present in the session

51
00:04:06,319 --> 00:04:07,360
um

52
00:04:07,360 --> 00:04:11,519
please use the meat echo to join the mcq

53
00:04:11,519 --> 00:04:13,840
especially those that are here present

54
00:04:13,840 --> 00:04:16,320
that way we can respect the order

55
00:04:16,320 --> 00:04:18,880
um for those that are participating

56
00:04:18,880 --> 00:04:20,720
remotely as well

57
00:04:20,720 --> 00:04:22,400
um

58
00:04:22,400 --> 00:04:24,479
for those here who are present

59
00:04:24,479 --> 00:04:26,320
turn off your audio and video that way

60
00:04:26,320 --> 00:04:28,800
we don't get feedback

61
00:04:28,800 --> 00:04:31,280
and the other important one is please

62
00:04:31,280 --> 00:04:34,880
make sure you keep your masks on

63
00:04:34,880 --> 00:04:37,680
the only ones that can remove their

64
00:04:37,680 --> 00:04:40,320
masks are those who come up here in

65
00:04:40,320 --> 00:04:43,360
present um

66
00:04:43,360 --> 00:04:46,479
where pink x marks the spot

67
00:04:46,479 --> 00:04:47,360
uh

68
00:04:47,360 --> 00:04:49,120
that is the only instance in which you

69
00:04:49,120 --> 00:04:51,280
can take your mask off for those who are

70
00:04:51,280 --> 00:04:54,080
participating uh remotely make sure you

71
00:04:54,080 --> 00:04:57,040
have your audio and video um off

72
00:04:57,040 --> 00:05:00,000
unless we the chairs recognize you to

73
00:05:00,000 --> 00:05:02,800
speak or present during the session

74
00:05:02,800 --> 00:05:04,639
um and

75
00:05:04,639 --> 00:05:07,199
we still continue to recommend that you

76
00:05:07,199 --> 00:05:11,039
use your your headset next

77
00:05:11,520 --> 00:05:14,639
okay um i think we're all friendly in

78
00:05:14,639 --> 00:05:16,639
this room so uh

79
00:05:16,639 --> 00:05:18,479
there's this is just a reminder for the

80
00:05:18,479 --> 00:05:20,240
code of conduct treat each other with

81
00:05:20,240 --> 00:05:22,840
respect keep it professional

82
00:05:22,840 --> 00:05:26,000
um keep the discussion on point next

83
00:05:26,000 --> 00:05:27,680
slide

84
00:05:27,680 --> 00:05:28,560
okay

85
00:05:28,560 --> 00:05:30,320
so

86
00:05:30,320 --> 00:05:31,840
do the orders

87
00:05:31,840 --> 00:05:33,360
at hand

88
00:05:33,360 --> 00:05:37,120
uh thank you judas and pam for being the

89
00:05:37,120 --> 00:05:39,759
jabber scribes really the note tapers i

90
00:05:39,759 --> 00:05:42,000
guess i can update it now

91
00:05:42,000 --> 00:05:44,240
since we're no longer using jabber

92
00:05:44,240 --> 00:05:45,680
um

93
00:05:45,680 --> 00:05:48,240
the minutes uh the link is there for

94
00:05:48,240 --> 00:05:50,080
those who want to track

95
00:05:50,080 --> 00:05:52,960
the note takers and feel free to augment

96
00:05:52,960 --> 00:05:54,960
um if you see

97
00:05:54,960 --> 00:05:57,120
things that are missing so anybody can

98
00:05:57,120 --> 00:06:00,160
go in and edit the minutes as well

99
00:06:00,160 --> 00:06:02,240
uh the meeting material there's the link

100
00:06:02,240 --> 00:06:04,240
there and hopefully if you're already

101
00:06:04,240 --> 00:06:06,639
here you know the meet echolink next

102
00:06:06,639 --> 00:06:08,080
slide

103
00:06:08,080 --> 00:06:11,840
for the agenda today we do have a pack

104
00:06:11,840 --> 00:06:15,280
of set of items that we want to cover

105
00:06:15,280 --> 00:06:17,600
rather than going through the actual

106
00:06:17,600 --> 00:06:20,800
drafts i've asked

107
00:06:20,800 --> 00:06:23,360
pam and phil who has the first adopted

108
00:06:23,360 --> 00:06:25,759
draft that being skim events to just

109
00:06:25,759 --> 00:06:28,639
give a brief update of where we are with

110
00:06:28,639 --> 00:06:31,280
those particular documents

111
00:06:31,280 --> 00:06:33,520
for the protocol and schema we've had a

112
00:06:33,520 --> 00:06:35,759
lot of discussion on the particular

113
00:06:35,759 --> 00:06:38,400
items that we want to focus on

114
00:06:38,400 --> 00:06:39,199
so

115
00:06:39,199 --> 00:06:40,560
rather than just

116
00:06:40,560 --> 00:06:43,199
saying we don't quite have a draft yet

117
00:06:43,199 --> 00:06:44,400
um

118
00:06:44,400 --> 00:06:48,319
danny and janelle if she's on will

119
00:06:48,319 --> 00:06:50,639
talk about the different particular

120
00:06:50,639 --> 00:06:54,000
features capabilities use cases

121
00:06:54,000 --> 00:06:56,160
that need to be addressed

122
00:06:56,160 --> 00:06:57,919
given that there was sufficient

123
00:06:57,919 --> 00:07:00,160
discussion on the email thread and how

124
00:07:00,160 --> 00:07:00,840
we

125
00:07:00,840 --> 00:07:03,440
do um

126
00:07:03,440 --> 00:07:05,440
beyond the actual bootstrapping or

127
00:07:05,440 --> 00:07:08,000
provisioning how we do the updates the

128
00:07:08,000 --> 00:07:10,080
scalability and performance for those

129
00:07:10,080 --> 00:07:11,440
updates

130
00:07:11,440 --> 00:07:12,240
uh

131
00:07:12,240 --> 00:07:14,720
that's my terminology in the thread

132
00:07:14,720 --> 00:07:17,199
there's been discussions about filtering

133
00:07:17,199 --> 00:07:19,360
how we do coordination

134
00:07:19,360 --> 00:07:21,120
um

135
00:07:21,120 --> 00:07:23,599
we've allotted more time to talk about

136
00:07:23,599 --> 00:07:25,039
that and the other term that would use

137
00:07:25,039 --> 00:07:28,000
pet was pagination so we'll spend a

138
00:07:28,000 --> 00:07:30,400
significant amount of time doing that

139
00:07:30,400 --> 00:07:33,840
um phil i forgot to update the agenda

140
00:07:33,840 --> 00:07:35,759
um

141
00:07:35,759 --> 00:07:37,599
that was my day i was going to update

142
00:07:37,599 --> 00:07:41,039
the slides so what is in the actual

143
00:07:41,039 --> 00:07:42,560
agenda

144
00:07:42,560 --> 00:07:47,280
under the the mean echo is correct um

145
00:07:47,280 --> 00:07:50,240
so phil we're giving you five minutes to

146
00:07:50,240 --> 00:07:53,199
just give an update on the draft itself

147
00:07:53,199 --> 00:07:55,599
but we're giving you 15 minutes so phil

148
00:07:55,599 --> 00:07:57,599
has uploaded it

149
00:07:57,599 --> 00:07:59,360
in the meeting materials

150
00:07:59,360 --> 00:08:02,160
there is a

151
00:08:02,160 --> 00:08:04,639
presentation that phil will walk us

152
00:08:04,639 --> 00:08:05,840
through

153
00:08:05,840 --> 00:08:08,639
for us to kick-start the discussion of

154
00:08:08,639 --> 00:08:10,479
what the use case

155
00:08:10,479 --> 00:08:11,599
is

156
00:08:11,599 --> 00:08:14,879
that leads us to the discussion of

157
00:08:14,879 --> 00:08:18,960
pagination filtering eventing and so on

158
00:08:18,960 --> 00:08:21,199
and then we've allocated

159
00:08:21,199 --> 00:08:23,680
pretty much the rest of the time

160
00:08:23,680 --> 00:08:24,960
to discuss

161
00:08:24,960 --> 00:08:27,599
and hopefully get to some points that we

162
00:08:27,599 --> 00:08:29,280
can reach consensus

163
00:08:29,280 --> 00:08:32,399
on a path forward for those items

164
00:08:32,399 --> 00:08:33,360
so

165
00:08:33,360 --> 00:08:36,958
any comments or updates and i apologize

166
00:08:36,958 --> 00:08:39,440
i meant to update the uh i did that

167
00:08:39,440 --> 00:08:41,760
anyway i don't know why it didn't go

168
00:08:41,760 --> 00:08:44,159
um on the agenda

169
00:08:44,159 --> 00:08:46,640
if not

170
00:08:48,560 --> 00:08:51,119
oh thank you

171
00:08:51,760 --> 00:08:54,720
so that is the updated agenda

172
00:08:54,720 --> 00:08:55,920
that

173
00:08:55,920 --> 00:08:58,240
i have on the powerpoint just

174
00:08:58,240 --> 00:08:59,360
didn't get

175
00:08:59,360 --> 00:09:01,519
the update

176
00:09:01,519 --> 00:09:03,839
if there's no comment

177
00:09:03,839 --> 00:09:06,000
or further agenda bashing we can go

178
00:09:06,000 --> 00:09:08,160
ahead and get started

179
00:09:08,160 --> 00:09:10,720
so with that pam you want to come up and

180
00:09:10,720 --> 00:09:12,800
give us an update on the use cases

181
00:09:12,800 --> 00:09:15,279
documents

182
00:09:17,839 --> 00:09:20,320
hi everybody can you hear me okay

183
00:09:20,320 --> 00:09:23,200
looks good yes yes so

184
00:09:23,200 --> 00:09:25,200
the number one news is we have a use

185
00:09:25,200 --> 00:09:27,680
cases document

186
00:09:27,680 --> 00:09:30,640
but where we have uh it in hack md

187
00:09:30,640 --> 00:09:32,480
format right now the link is going to go

188
00:09:32,480 --> 00:09:33,920
in the notes

189
00:09:33,920 --> 00:09:35,519
and so we're not going to discuss it

190
00:09:35,519 --> 00:09:38,480
today because um obviously no one's had

191
00:09:38,480 --> 00:09:40,800
a chance to review it but we will start

192
00:09:40,800 --> 00:09:43,200
the process right away of reviewing that

193
00:09:43,200 --> 00:09:47,200
document on the on the list so uh it's

194
00:09:47,200 --> 00:09:49,120
work that we literally got done

195
00:09:49,120 --> 00:09:51,760
here at ietf

196
00:09:51,760 --> 00:09:53,200
let me just tell you quickly about the

197
00:09:53,200 --> 00:09:55,360
rationale that we're using this was part

198
00:09:55,360 --> 00:09:57,519
of the review we did at the last

199
00:09:57,519 --> 00:09:59,360
the last plenary as well

200
00:09:59,360 --> 00:10:01,760
what you're going to see in there the is

201
00:10:01,760 --> 00:10:04,079
terminology we've tried to define

202
00:10:04,079 --> 00:10:06,720
terminology that was not defined in the

203
00:10:06,720 --> 00:10:07,920
protocols

204
00:10:07,920 --> 00:10:11,839
themselves so in rfc 76 43 or 44. so

205
00:10:11,839 --> 00:10:14,399
you're going to see a definition of a of

206
00:10:14,399 --> 00:10:16,640
a skim service provider

207
00:10:16,640 --> 00:10:18,720
right and of a skim client and of what

208
00:10:18,720 --> 00:10:22,399
skim schema is and of what

209
00:10:22,399 --> 00:10:24,959
the skim protocol is

210
00:10:24,959 --> 00:10:26,480
where possible we've taken those from

211
00:10:26,480 --> 00:10:28,240
the protocols copying them across and

212
00:10:28,240 --> 00:10:30,000
then we're trying to boil them down to

213
00:10:30,000 --> 00:10:31,680
make them very brief

214
00:10:31,680 --> 00:10:33,680
but they may be wrong and there may be

215
00:10:33,680 --> 00:10:34,959
cases where actually there is a

216
00:10:34,959 --> 00:10:36,079
definition

217
00:10:36,079 --> 00:10:37,920
and it just didn't come up as the

218
00:10:37,920 --> 00:10:40,160
authors of this this new draft were

219
00:10:40,160 --> 00:10:42,959
casting about there are also definitions

220
00:10:42,959 --> 00:10:44,480
so there's basically two types of

221
00:10:44,480 --> 00:10:47,040
definitions one is you know the things

222
00:10:47,040 --> 00:10:49,440
used in the protocols the second one is

223
00:10:49,440 --> 00:10:51,760
industry definitions that would be

224
00:10:51,760 --> 00:10:53,760
relative to the use cases

225
00:10:53,760 --> 00:10:56,320
where people might implement skim so

226
00:10:56,320 --> 00:10:58,640
those are absolutely up for debate uh i

227
00:10:58,640 --> 00:11:01,120
put in um slightly provocative

228
00:11:01,120 --> 00:11:03,680
definitions so that people would know to

229
00:11:03,680 --> 00:11:06,160
to react to them um so don't be afraid

230
00:11:06,160 --> 00:11:07,760
to go in and change them we that's the

231
00:11:07,760 --> 00:11:09,839
whole ideas that we iterate

232
00:11:09,839 --> 00:11:12,320
and and then the second piece is about

233
00:11:12,320 --> 00:11:15,040
so the concepts are generally around

234
00:11:15,040 --> 00:11:17,040
uh units of work

235
00:11:17,040 --> 00:11:18,800
that implementers might want to perform

236
00:11:18,800 --> 00:11:20,320
and then the last piece is business

237
00:11:20,320 --> 00:11:22,320
scenarios and the goal there is to

238
00:11:22,320 --> 00:11:24,640
define end-to-end

239
00:11:24,640 --> 00:11:26,959
activities that an implementer might

240
00:11:26,959 --> 00:11:28,560
look at and say yes this is something i

241
00:11:28,560 --> 00:11:31,120
want to do so the link is in the in the

242
00:11:31,120 --> 00:11:32,800
meat echo i will leave it at that so we

243
00:11:32,800 --> 00:11:34,000
stay on time

244
00:11:34,000 --> 00:11:35,600
and um

245
00:11:35,600 --> 00:11:37,760
if anyone wants you know to take the pen

246
00:11:37,760 --> 00:11:40,240
or do a a large revision we're going to

247
00:11:40,240 --> 00:11:42,800
have the hack md open for a couple of

248
00:11:42,800 --> 00:11:44,720
hours so that anyone who's here and has

249
00:11:44,720 --> 00:11:46,000
time can

250
00:11:46,000 --> 00:11:47,519
you do it themselves or even come talk

251
00:11:47,519 --> 00:11:48,959
to us

252
00:11:48,959 --> 00:11:50,560
so danny and i are the original

253
00:11:50,560 --> 00:11:53,200
originators and then we did do a review

254
00:11:53,200 --> 00:11:54,959
in the skim side meeting yesterday so

255
00:11:54,959 --> 00:11:56,959
others have had who happen to be in the

256
00:11:56,959 --> 00:12:01,040
room have had some uh review of it

257
00:12:01,040 --> 00:12:04,160
how's that any any questions before i

258
00:12:04,160 --> 00:12:06,320
get kingdom off the stage

259
00:12:06,320 --> 00:12:08,399
anyone online who would like to ask a

260
00:12:08,399 --> 00:12:10,079
question feel free to get on the queue

261
00:12:10,079 --> 00:12:13,120
if you have any comments

262
00:12:14,320 --> 00:12:15,519
okay perfect

263
00:12:15,519 --> 00:12:16,880
uh looking forward to feedback on the

264
00:12:16,880 --> 00:12:18,880
list then

265
00:12:18,880 --> 00:12:21,279
there we go

266
00:12:21,600 --> 00:12:23,519
uh just one quick addition to what pam

267
00:12:23,519 --> 00:12:26,480
said uh yeah we'll leave the hackmd open

268
00:12:26,480 --> 00:12:28,880
for a bit and then uh either today or

269
00:12:28,880 --> 00:12:30,880
monday or somewhere in between we'll

270
00:12:30,880 --> 00:12:33,120
uh publish the first version to the data

271
00:12:33,120 --> 00:12:34,880
tracker okay yeah and that's at the

272
00:12:34,880 --> 00:12:36,880
point where we'll post to the list

273
00:12:36,880 --> 00:12:39,279
yep just a reminder when you when you

274
00:12:39,279 --> 00:12:42,240
put it in the data tracker just um

275
00:12:42,240 --> 00:12:44,320
post to the mail list

276
00:12:44,320 --> 00:12:46,240
and solicit feedback we will definitely

277
00:12:46,240 --> 00:12:48,800
do that okay thanks everyone

278
00:12:48,800 --> 00:12:50,480
thanks pam

279
00:12:50,480 --> 00:12:55,480
okay next up we have janelle and danny

280
00:13:06,880 --> 00:13:08,639
hello everybody

281
00:13:08,639 --> 00:13:10,000
uh can you hear me

282
00:13:10,000 --> 00:13:11,680
good cool

283
00:13:11,680 --> 00:13:12,880
uh

284
00:13:12,880 --> 00:13:15,600
okay uh so yeah uh is janelle in the

285
00:13:15,600 --> 00:13:18,480
chat i didn't see her

286
00:13:18,880 --> 00:13:21,600
i'm assuming

287
00:13:21,600 --> 00:13:23,279
cool

288
00:13:23,279 --> 00:13:25,200
okay uh so yeah my name's uh danny

289
00:13:25,200 --> 00:13:27,200
zolner uh along with janelle who

290
00:13:27,200 --> 00:13:29,279
unfortunately couldn't be here today uh

291
00:13:29,279 --> 00:13:30,560
we have

292
00:13:30,560 --> 00:13:32,079
sort of thrown our hats in the ring to

293
00:13:32,079 --> 00:13:33,360
be the editors

294
00:13:33,360 --> 00:13:36,320
uh for a big body of work that comprises

295
00:13:36,320 --> 00:13:38,959
uh changes in additions to the uh skim

296
00:13:38,959 --> 00:13:40,959
schemas and protocols

297
00:13:40,959 --> 00:13:42,959
both eventually the main documents

298
00:13:42,959 --> 00:13:43,920
themselves

299
00:13:43,920 --> 00:13:45,519
as well as

300
00:13:45,519 --> 00:13:46,560
helping to shepherd a bunch of

301
00:13:46,560 --> 00:13:48,000
extensions that will add new

302
00:13:48,000 --> 00:13:49,199
functionality

303
00:13:49,199 --> 00:13:51,839
next slide please

304
00:13:52,000 --> 00:13:54,880
uh so our rough agenda for this uh chunk

305
00:13:54,880 --> 00:13:56,320
of time that we have

306
00:13:56,320 --> 00:13:57,440
we have some topics that we'd like to

307
00:13:57,440 --> 00:13:59,279
talk about that

308
00:13:59,279 --> 00:14:01,120
do currently have drafts although

309
00:14:01,120 --> 00:14:03,120
several of them have expired uh one or

310
00:14:03,120 --> 00:14:05,519
two have been re-you know revived in the

311
00:14:05,519 --> 00:14:07,600
past day or two uh and then there's a

312
00:14:07,600 --> 00:14:08,639
whole bunch of topics that we'll move on

313
00:14:08,639 --> 00:14:11,279
to that don't currently have drafts and

314
00:14:11,279 --> 00:14:13,120
just at a conceptual level i'd like to

315
00:14:13,120 --> 00:14:15,440
talk about uh see if anybody has

316
00:14:15,440 --> 00:14:17,279
opinions interest and uh if anybody

317
00:14:17,279 --> 00:14:18,800
wants to stand up

318
00:14:18,800 --> 00:14:21,760
and uh you know volunteer to either uh

319
00:14:21,760 --> 00:14:24,320
you know author edit uh just contribute

320
00:14:24,320 --> 00:14:25,920
ideas whichever

321
00:14:25,920 --> 00:14:26,800
uh

322
00:14:26,800 --> 00:14:28,800
so yeah we have this agenda here and we

323
00:14:28,800 --> 00:14:29,760
can just move on to the next slide and

324
00:14:29,760 --> 00:14:32,160
we'll dive straight into cursor-based uh

325
00:14:32,160 --> 00:14:33,760
pagination

326
00:14:33,760 --> 00:14:35,839
uh so yeah first our section of uh

327
00:14:35,839 --> 00:14:36,959
topics is

328
00:14:36,959 --> 00:14:39,519
drafts next slide please

329
00:14:39,519 --> 00:14:42,320
uh so uh we do have a draft that's out

330
00:14:42,320 --> 00:14:45,440
there uh it's expired currently uh by

331
00:14:45,440 --> 00:14:47,680
matt peterson uh on cursor-based

332
00:14:47,680 --> 00:14:49,600
pagination uh their application is

333
00:14:49,600 --> 00:14:50,959
listed here

334
00:14:50,959 --> 00:14:53,040
uh at a high level it introduces a few

335
00:14:53,040 --> 00:14:54,959
new uh parameters

336
00:14:54,959 --> 00:14:57,279
for queries and response attributes

337
00:14:57,279 --> 00:14:59,600
so things like cursor count next cursor

338
00:14:59,600 --> 00:15:01,120
and previous cursor

339
00:15:01,120 --> 00:15:03,440
uh and the at the high level the use

340
00:15:03,440 --> 00:15:05,040
case is to

341
00:15:05,040 --> 00:15:07,519
improve uh sort of you know massive

342
00:15:07,519 --> 00:15:10,240
scale operations when a client

343
00:15:10,240 --> 00:15:12,560
interacting with a skim service writer

344
00:15:12,560 --> 00:15:15,199
needs to be able to traverse a very

345
00:15:15,199 --> 00:15:17,040
large set of results so just sometimes

346
00:15:17,040 --> 00:15:19,600
we're looking at millions of results

347
00:15:19,600 --> 00:15:20,880
over on the right hand side we have an

348
00:15:20,880 --> 00:15:22,399
example

349
00:15:22,399 --> 00:15:24,720
you know just get users count equals 10

350
00:15:24,720 --> 00:15:26,880
and the key thing is highlighted there

351
00:15:26,880 --> 00:15:29,759
uh where the additions would be uh that

352
00:15:29,759 --> 00:15:31,120
next cursor

353
00:15:31,120 --> 00:15:33,519
uh and the cursor when provided in uh

354
00:15:33,519 --> 00:15:36,560
the query url for a subsequent query

355
00:15:36,560 --> 00:15:40,800
would uh return another set of results

356
00:15:40,800 --> 00:15:41,759
um

357
00:15:41,759 --> 00:15:43,199
so i guess i'll

358
00:15:43,199 --> 00:15:44,639
pause at this point

359
00:15:44,639 --> 00:15:47,360
uh if anybody has any comments or

360
00:15:47,360 --> 00:15:49,120
questions i believe we have time carved

361
00:15:49,120 --> 00:15:51,199
out later specifically to talk about

362
00:15:51,199 --> 00:15:52,720
pagination so actually probably just get

363
00:15:52,720 --> 00:15:55,839
this slide but

364
00:15:56,000 --> 00:15:58,240
uh

365
00:15:58,480 --> 00:16:00,160
yeah i know there's been some discussion

366
00:16:00,160 --> 00:16:01,519
on the mailing list

367
00:16:01,519 --> 00:16:04,560
about uh this approach versus

368
00:16:04,560 --> 00:16:07,519
a skim events based approach uh but we

369
00:16:07,519 --> 00:16:09,839
can cover that

370
00:16:09,839 --> 00:16:11,839
uh in the allotted time later on in the

371
00:16:11,839 --> 00:16:13,839
agenda i guess

372
00:16:13,839 --> 00:16:14,720
uh

373
00:16:14,720 --> 00:16:16,800
so without uh any questions in the queue

374
00:16:16,800 --> 00:16:17,920
i think we just moved to the next slide

375
00:16:17,920 --> 00:16:19,759
please

376
00:16:19,759 --> 00:16:22,320
and uh so next uh one of the topics

377
00:16:22,320 --> 00:16:24,880
that's in the charter is uh multi-valued

378
00:16:24,880 --> 00:16:27,279
attribute pagination and filtering uh

379
00:16:27,279 --> 00:16:29,519
phil hunt who's on the you know on the

380
00:16:29,519 --> 00:16:30,800
call uh

381
00:16:30,800 --> 00:16:32,399
he wrote this draft uh phil if you would

382
00:16:32,399 --> 00:16:33,920
prefer to speak to this at any point

383
00:16:33,920 --> 00:16:34,839
feel

384
00:16:34,839 --> 00:16:39,120
free uh okay fills in the queue

385
00:16:40,480 --> 00:16:42,880
yeah it's still there um

386
00:16:42,880 --> 00:16:46,320
i think it's based on um

387
00:16:46,320 --> 00:16:48,720
extending the complex multi-value

388
00:16:48,720 --> 00:16:51,199
attribute sub-attribute filtering and

389
00:16:51,199 --> 00:16:54,240
applying the same technique

390
00:16:54,240 --> 00:16:56,160
to the attributes parameter and in

391
00:16:56,160 --> 00:16:58,160
addition to the

392
00:16:58,160 --> 00:17:00,560
attribute sub-attribute filters then you

393
00:17:00,560 --> 00:17:02,560
can also say

394
00:17:02,560 --> 00:17:05,760
what what pages of that you want

395
00:17:05,760 --> 00:17:07,599
um so those two things kind of go

396
00:17:07,599 --> 00:17:08,720
together

397
00:17:08,720 --> 00:17:10,240
um

398
00:17:10,240 --> 00:17:12,160
and it's really

399
00:17:12,160 --> 00:17:14,400
in a case of

400
00:17:14,400 --> 00:17:17,280
the group saying hey we like it or if

401
00:17:17,280 --> 00:17:19,439
there's enough interest to do it

402
00:17:19,439 --> 00:17:20,640
um

403
00:17:20,640 --> 00:17:23,119
the only complex thing that really came

404
00:17:23,119 --> 00:17:25,599
up in the past when we first proposed it

405
00:17:25,599 --> 00:17:26,480
was

406
00:17:26,480 --> 00:17:28,960
how to deal with knowing how many rows

407
00:17:28,960 --> 00:17:30,480
there are

408
00:17:30,480 --> 00:17:32,240
and that's up for some discussion and

409
00:17:32,240 --> 00:17:33,600
that's probably about the only thing we

410
00:17:33,600 --> 00:17:36,959
have to sort through on that spec

411
00:17:39,840 --> 00:17:42,480
okay oh and to clarify

412
00:17:42,480 --> 00:17:44,960
and to clarify just so everybody's clear

413
00:17:44,960 --> 00:17:47,840
what we're talking about is paging

414
00:17:47,840 --> 00:17:48,880
of

415
00:17:48,880 --> 00:17:52,720
attribute value roles not paging of

416
00:17:52,720 --> 00:17:54,559
resources

417
00:17:54,559 --> 00:17:57,200
so those are very different things

418
00:17:57,200 --> 00:17:59,440
thanks

419
00:17:59,600 --> 00:18:01,679
all right uh yeah thank you phil

420
00:18:01,679 --> 00:18:04,320
uh so yeah the most common example of uh

421
00:18:04,320 --> 00:18:06,320
where multi-value attribute pagination

422
00:18:06,320 --> 00:18:07,679
would come in

423
00:18:07,679 --> 00:18:09,520
uh would be

424
00:18:09,520 --> 00:18:10,880
uh if you have a group with a million

425
00:18:10,880 --> 00:18:12,880
members and you don't want to receive

426
00:18:12,880 --> 00:18:15,120
one response with a list of all million

427
00:18:15,120 --> 00:18:16,480
members but instead break it up into

428
00:18:16,480 --> 00:18:17,840
smaller chunks

429
00:18:17,840 --> 00:18:19,919
and that's exemplified in the request on

430
00:18:19,919 --> 00:18:22,880
the right hand side of this

431
00:18:23,039 --> 00:18:24,000
i

432
00:18:24,000 --> 00:18:25,440
know from the

433
00:18:25,440 --> 00:18:27,440
from the mailing list there's also been

434
00:18:27,440 --> 00:18:29,360
some feedback from matt peterson who

435
00:18:29,360 --> 00:18:31,200
again cannot be here today

436
00:18:31,200 --> 00:18:35,200
uh on a different approach uh

437
00:18:35,200 --> 00:18:36,960
which would be to represent group

438
00:18:36,960 --> 00:18:39,440
memberships as uh sort of as two

439
00:18:39,440 --> 00:18:41,120
different sets of resources like slash

440
00:18:41,120 --> 00:18:42,559
group memberships

441
00:18:42,559 --> 00:18:46,799
and slash user groups to represent

442
00:18:46,799 --> 00:18:48,640
the memberships in a group and the

443
00:18:48,640 --> 00:18:50,640
groups that a user is a member of

444
00:18:50,640 --> 00:18:53,039
respectively

445
00:18:53,039 --> 00:18:55,520
i i personally don't have a strong

446
00:18:55,520 --> 00:18:57,120
opinion on one way or the other on which

447
00:18:57,120 --> 00:18:59,440
way to go that's just the other sort of

448
00:18:59,440 --> 00:19:00,240
you know

449
00:19:00,240 --> 00:19:02,000
idea i guess that's been put out there

450
00:19:02,000 --> 00:19:04,480
and uh phil go ahead

451
00:19:04,480 --> 00:19:06,000
hi um

452
00:19:06,000 --> 00:19:08,240
there already is an attribute under the

453
00:19:08,240 --> 00:19:10,720
user profile called groups which you can

454
00:19:10,720 --> 00:19:12,880
find out what groups a user is a member

455
00:19:12,880 --> 00:19:14,480
of so we don't need a new object for

456
00:19:14,480 --> 00:19:15,280
that

457
00:19:15,280 --> 00:19:18,480
that's already inspect

458
00:19:19,760 --> 00:19:22,559
or were you talking about something else

459
00:19:22,559 --> 00:19:23,520
i think he was talking about something

460
00:19:23,520 --> 00:19:25,520
slightly different um it was

461
00:19:25,520 --> 00:19:28,000
uh an approach

462
00:19:28,000 --> 00:19:31,919
to not need a multi-value activity

463
00:19:31,919 --> 00:19:32,799
um

464
00:19:32,799 --> 00:19:35,440
i i believe the the approach

465
00:19:35,440 --> 00:19:36,240
was

466
00:19:36,240 --> 00:19:38,640
so rather than having because in both

467
00:19:38,640 --> 00:19:41,440
cases today uh group memberships as well

468
00:19:41,440 --> 00:19:43,840
as the user groups attributes that sort

469
00:19:43,840 --> 00:19:45,200
of displays the other direction of all

470
00:19:45,200 --> 00:19:47,200
the groups associated with users

471
00:19:47,200 --> 00:19:48,000
um

472
00:19:48,000 --> 00:19:49,200
those are the

473
00:19:49,200 --> 00:19:52,480
multi-valued uh attributes on an object

474
00:19:52,480 --> 00:19:53,760
and so when you have a large series of

475
00:19:53,760 --> 00:19:55,600
results you run into the situation where

476
00:19:55,600 --> 00:19:56,880
you would need

477
00:19:56,880 --> 00:19:59,679
uh the multi-valued attribute pagination

478
00:19:59,679 --> 00:20:00,559
graphs

479
00:20:00,559 --> 00:20:02,000
uh whereas the proposal from matt

480
00:20:02,000 --> 00:20:04,720
peterson wants to do new top level skin

481
00:20:04,720 --> 00:20:06,720
resources that represented the

482
00:20:06,720 --> 00:20:08,640
memberships either you know as members

483
00:20:08,640 --> 00:20:12,000
of a group or groups that they use

484
00:20:12,000 --> 00:20:13,280
as

485
00:20:13,280 --> 00:20:14,799
resources or like results that we've

486
00:20:14,799 --> 00:20:16,880
returned so these existing pages and

487
00:20:16,880 --> 00:20:17,919
logic

488
00:20:17,919 --> 00:20:19,840
rather than multi-value attribute

489
00:20:19,840 --> 00:20:22,399
pagination

490
00:20:23,919 --> 00:20:25,280
i don't know if you re-entered the queue

491
00:20:25,280 --> 00:20:29,600
but if you haven't no i left them on no

492
00:20:29,600 --> 00:20:33,320
so the question is

493
00:20:45,039 --> 00:20:46,000
uh

494
00:20:46,000 --> 00:20:46,720
so

495
00:20:46,720 --> 00:20:48,559
yeah anyways at a high level that's this

496
00:20:48,559 --> 00:20:53,120
topic at least uh the next slide please

497
00:20:53,919 --> 00:20:55,679
uh so one of the other drafts that uh

498
00:20:55,679 --> 00:20:57,760
has been out there for a while it's also

499
00:20:57,760 --> 00:20:59,120
currently expired

500
00:20:59,120 --> 00:21:01,360
is a draft on soft police

501
00:21:01,360 --> 00:21:02,559
uh

502
00:21:02,559 --> 00:21:04,720
this fairly straightforward graph it

503
00:21:04,720 --> 00:21:07,679
adds a new uh resource to our sorry a

504
00:21:07,679 --> 00:21:09,919
new attribute to resources uh which i

505
00:21:09,919 --> 00:21:12,159
believe is is self-deleted and then you

506
00:21:12,159 --> 00:21:14,640
can also query uh

507
00:21:14,640 --> 00:21:17,840
with uh and correct me if i'm wrong phil

508
00:21:17,840 --> 00:21:18,960
i might have gotten this one wrong i

509
00:21:18,960 --> 00:21:20,880
know you were an author on this uh even

510
00:21:20,880 --> 00:21:22,320
if cortez

511
00:21:22,320 --> 00:21:24,320
has the name on the graph

512
00:21:24,320 --> 00:21:26,320
uh but there's also a

513
00:21:26,320 --> 00:21:29,039
query parameter that is uh is soft

514
00:21:29,039 --> 00:21:31,440
deleted equals true uh i guess rather

515
00:21:31,440 --> 00:21:33,440
than you know um attributes

516
00:21:33,440 --> 00:21:35,360
are or whatever it is uh the

517
00:21:35,360 --> 00:21:36,400
the other form of filtering we're

518
00:21:36,400 --> 00:21:37,919
explicitly calling

519
00:21:37,919 --> 00:21:39,280
um

520
00:21:39,280 --> 00:21:41,600
uh like a filter rather than you know

521
00:21:41,600 --> 00:21:42,840
is software

522
00:21:42,840 --> 00:21:46,000
being so danny let's pause for a couple

523
00:21:46,000 --> 00:21:48,720
minutes because um

524
00:21:48,720 --> 00:21:50,960
phil unless you were able to capture it

525
00:21:50,960 --> 00:21:53,679
you can go ahead and respond but um

526
00:21:53,679 --> 00:21:55,679
i'm gonna ask danny to pause for a

527
00:21:55,679 --> 00:21:59,320
couple minutes because

528
00:22:04,400 --> 00:22:07,200
my understanding is that the issue right

529
00:22:07,200 --> 00:22:10,159
now is that the skim contract says

530
00:22:10,159 --> 00:22:12,320
uh skim protocol which is essentially

531
00:22:12,320 --> 00:22:14,240
alcohol contract says that once you

532
00:22:14,240 --> 00:22:16,000
delete a resource

533
00:22:16,000 --> 00:22:17,919
if you try to do a get resource you're

534
00:22:17,919 --> 00:22:19,760
supposed to return a 404 it's supposed

535
00:22:19,760 --> 00:22:21,600
to act like it's gone

536
00:22:21,600 --> 00:22:23,840
and i think the idea of a

537
00:22:23,840 --> 00:22:27,200
of a parameter that that sort of says

538
00:22:27,200 --> 00:22:29,840
um yes i know i'm querying a deleted

539
00:22:29,840 --> 00:22:31,360
resource but i want you to return it to

540
00:22:31,360 --> 00:22:33,120
me anyway that's basically essentially

541
00:22:33,120 --> 00:22:36,000
what's going on um i haven't delved much

542
00:22:36,000 --> 00:22:37,760
further into it than that it was really

543
00:22:37,760 --> 00:22:40,799
something morteza was uh looking for

544
00:22:40,799 --> 00:22:41,840
um

545
00:22:41,840 --> 00:22:44,080
there may be other ways to do this but

546
00:22:44,080 --> 00:22:45,280
um

547
00:22:45,280 --> 00:22:46,240
if you

548
00:22:46,240 --> 00:22:48,240
the key is that if you're doing a get

549
00:22:48,240 --> 00:22:50,480
against an object that was deleted the

550
00:22:50,480 --> 00:22:52,799
server would normally say

551
00:22:52,799 --> 00:22:54,640
404 not found

552
00:22:54,640 --> 00:22:56,559
that's what it's supposed to do that's

553
00:22:56,559 --> 00:22:58,480
what we decided so now we're we're

554
00:22:58,480 --> 00:23:00,000
trying to say

555
00:23:00,000 --> 00:23:02,000
yes but also check to see if it was a

556
00:23:02,000 --> 00:23:05,840
soft delete and return it if it is

557
00:23:06,240 --> 00:23:07,919
so we have to have something to override

558
00:23:07,919 --> 00:23:10,559
the behavior

559
00:23:14,000 --> 00:23:17,520
okay we're going to pause

560
00:23:19,760 --> 00:23:22,240
one thing i'll say is we should also

561
00:23:22,240 --> 00:23:25,120
think about whether that's a security

562
00:23:25,120 --> 00:23:26,159
issue

563
00:23:26,159 --> 00:23:27,039
that

564
00:23:27,039 --> 00:23:28,640
only certain clients should be able to

565
00:23:28,640 --> 00:23:32,280
execute that query

566
00:23:39,360 --> 00:23:41,360
we're still listening phil it's just i'm

567
00:23:41,360 --> 00:23:43,679
pausing because uh

568
00:23:43,679 --> 00:23:46,960
we have two av people here

569
00:23:46,960 --> 00:23:48,880
that that's all i wanted to say is there

570
00:23:48,880 --> 00:23:52,960
might be a security consideration that

571
00:23:52,960 --> 00:23:55,600
being able to troll through old links

572
00:23:55,600 --> 00:23:57,919
might cause problems and it it might not

573
00:23:57,919 --> 00:24:01,919
be something that a normal client can do

574
00:24:01,919 --> 00:24:04,720
i haven't thought through it though yep

575
00:24:04,720 --> 00:24:06,880
no that's well noted and it's been noted

576
00:24:06,880 --> 00:24:10,240
in the minutes so

577
00:24:10,320 --> 00:24:13,799
thank you for that

578
00:24:20,960 --> 00:24:23,919
testing testing

579
00:24:24,159 --> 00:24:26,159
is that better for those who are remote

580
00:24:26,159 --> 00:24:28,080
can you hear danny any better

581
00:24:28,080 --> 00:24:32,080
i i can answer daryl

582
00:24:32,080 --> 00:24:34,080
daryl's question

583
00:24:34,080 --> 00:24:36,159
go ahead and answer daryl

584
00:24:36,159 --> 00:24:38,159
but okay what is the

585
00:24:38,159 --> 00:24:39,520
so the question was what is the

586
00:24:39,520 --> 00:24:42,240
expectation

587
00:24:42,320 --> 00:24:44,400
go ahead

588
00:24:44,400 --> 00:24:46,480
what is the expectation of delete on a

589
00:24:46,480 --> 00:24:49,279
resource with soft delete equals true

590
00:24:49,279 --> 00:24:50,720
parameter

591
00:24:50,720 --> 00:24:53,919
is it a no-op or a hard delete

592
00:24:53,919 --> 00:24:56,240
um that's something that the spec would

593
00:24:56,240 --> 00:24:59,120
have to define because the first delete

594
00:24:59,120 --> 00:25:00,799
that you did

595
00:25:00,799 --> 00:25:03,679
which is an http delete turned it into a

596
00:25:03,679 --> 00:25:05,520
soft delete because your server supports

597
00:25:05,520 --> 00:25:06,880
that

598
00:25:06,880 --> 00:25:08,480
then you'd have to ask the question well

599
00:25:08,480 --> 00:25:11,039
if i delete it again

600
00:25:11,039 --> 00:25:12,880
does that wipe it out so that's

601
00:25:12,880 --> 00:25:14,400
something the document would need to

602
00:25:14,400 --> 00:25:18,000
spec would need to describe

603
00:25:22,799 --> 00:25:24,960
yeah it may already i was looking

604
00:25:24,960 --> 00:25:26,799
through it earlier this week i believe

605
00:25:26,799 --> 00:25:29,440
it says if you do another delete on the

606
00:25:29,440 --> 00:25:32,480
resource while using the install deleted

607
00:25:32,480 --> 00:25:34,960
equals true parameter that it that

608
00:25:34,960 --> 00:25:37,039
transforms for soft deletions through

609
00:25:37,039 --> 00:25:39,039
partners

610
00:25:39,039 --> 00:25:42,600
but it's not

611
00:25:47,520 --> 00:25:48,720
okay so

612
00:25:48,720 --> 00:25:51,360
um pam wants to speak but as a minute

613
00:25:51,360 --> 00:25:52,960
taker she hasn't had the chance so i'm

614
00:25:52,960 --> 00:25:56,640
gonna give her a pass go ahead pam

615
00:25:57,919 --> 00:25:59,440
so i think there's an issue there

616
00:25:59,440 --> 00:26:01,200
because it may be that the client isn't

617
00:26:01,200 --> 00:26:02,400
capable of

618
00:26:02,400 --> 00:26:05,279
of full deleting like that so so that

619
00:26:05,279 --> 00:26:07,039
you know just because you want it to be

620
00:26:07,039 --> 00:26:08,240
hard deleted doesn't mean it's going to

621
00:26:08,240 --> 00:26:10,240
get hard deleted so i assume there's

622
00:26:10,240 --> 00:26:12,559
some interaction there

623
00:26:12,559 --> 00:26:14,559
i i recall

624
00:26:14,559 --> 00:26:16,480
sorry

625
00:26:16,480 --> 00:26:19,679
i guess this is nancy as an individual

626
00:26:19,679 --> 00:26:23,200
i recall the discussions at identiverse

627
00:26:23,200 --> 00:26:24,720
that there needed to be clear

628
00:26:24,720 --> 00:26:26,159
distinction

629
00:26:26,159 --> 00:26:28,400
and definition of self-believers is hard

630
00:26:28,400 --> 00:26:30,240
to leave so i think that's something

631
00:26:30,240 --> 00:26:32,880
that needs to be

632
00:26:33,919 --> 00:26:36,080
i i would agree and i think to the point

633
00:26:36,080 --> 00:26:39,279
that pam raised uh whether or not the

634
00:26:39,279 --> 00:26:41,120
stem service provider is capable of

635
00:26:41,120 --> 00:26:43,279
either soft deletion or hardware

636
00:26:43,279 --> 00:26:44,159
both

637
00:26:44,159 --> 00:26:46,159
is probably something that could be

638
00:26:46,159 --> 00:26:48,640
straightened out with uh

639
00:26:48,640 --> 00:26:50,799
if it doesn't already exist in the core

640
00:26:50,799 --> 00:26:54,320
schema our before protocol today

641
00:26:54,320 --> 00:26:57,120
for normal hard deletion uh both would

642
00:26:57,120 --> 00:26:58,240
probably be represented inside of

643
00:26:58,240 --> 00:27:00,880
service rider config elements uh as part

644
00:27:00,880 --> 00:27:02,159
of

645
00:27:02,159 --> 00:27:03,679
that okay

646
00:27:03,679 --> 00:27:06,640
we've we've got michael prarock

647
00:27:06,640 --> 00:27:08,159
sorry if i butchered your name on

648
00:27:08,159 --> 00:27:10,559
thecube

649
00:27:12,720 --> 00:27:15,360
no totally fine uh michael brock here uh

650
00:27:15,360 --> 00:27:17,520
yeah i just wanted to state the clear

651
00:27:17,520 --> 00:27:19,039
need for a soft delete because there are

652
00:27:19,039 --> 00:27:21,360
a lot of audit log type scenarios and

653
00:27:21,360 --> 00:27:23,840
read only type of pen stuff for instance

654
00:27:23,840 --> 00:27:25,200
some of the items we're looking at in

655
00:27:25,200 --> 00:27:26,880
skit and some other areas where there's

656
00:27:26,880 --> 00:27:28,960
going to be a hard overlap that

657
00:27:28,960 --> 00:27:30,960
may require the ability to say yes this

658
00:27:30,960 --> 00:27:32,880
is soft deleted but it may not actually

659
00:27:32,880 --> 00:27:35,039
be possible to clear that piece of

660
00:27:35,039 --> 00:27:37,600
information

661
00:27:38,000 --> 00:27:40,320
so now i'll speak as a chair we just

662
00:27:40,320 --> 00:27:42,799
need to have alignment on

663
00:27:42,799 --> 00:27:44,960
what it means to do soft delete which is

664
00:27:44,960 --> 00:27:47,919
hard to leave yes yeah and uh as a chair

665
00:27:47,919 --> 00:27:49,360
would you say that that needs to be

666
00:27:49,360 --> 00:27:50,880
figured out in the individual graph that

667
00:27:50,880 --> 00:27:54,640
we're submitted or potentially

668
00:27:54,640 --> 00:27:58,520
you can put it in the draft

669
00:28:02,000 --> 00:28:03,679
go ahead phil

670
00:28:03,679 --> 00:28:06,559
um i i'm a little bit confused because

671
00:28:06,559 --> 00:28:08,159
um

672
00:28:08,159 --> 00:28:10,799
it's always true right now that a server

673
00:28:10,799 --> 00:28:14,240
can soft delete behind the scenes

674
00:28:14,240 --> 00:28:15,600
um

675
00:28:15,600 --> 00:28:17,600
so the client asks for delete and the

676
00:28:17,600 --> 00:28:19,440
protocol says

677
00:28:19,440 --> 00:28:21,279
that as far as the client is concerned

678
00:28:21,279 --> 00:28:23,120
the object is deleted now whether it

679
00:28:23,120 --> 00:28:25,039
actually is or not

680
00:28:25,039 --> 00:28:26,399
that's only something the service

681
00:28:26,399 --> 00:28:29,440
provider knows so

682
00:28:29,440 --> 00:28:32,159
really the issue is

683
00:28:32,159 --> 00:28:34,480
why does the client

684
00:28:34,480 --> 00:28:37,039
need to request a soft delete or not

685
00:28:37,039 --> 00:28:38,880
that's a policy of the service provider

686
00:28:38,880 --> 00:28:40,640
not of the client

687
00:28:40,640 --> 00:28:43,279
so maybe we need to work on the use case

688
00:28:43,279 --> 00:28:44,480
because

689
00:28:44,480 --> 00:28:46,399
current signaling as a contract is if

690
00:28:46,399 --> 00:28:48,080
the client asks for delete as far as it

691
00:28:48,080 --> 00:28:50,080
knows it's a hard delete

692
00:28:50,080 --> 00:28:53,120
whether it actually is deleted or not

693
00:28:53,120 --> 00:28:54,720
that's there and the requirement i

694
00:28:54,720 --> 00:28:57,039
understood before was

695
00:28:57,039 --> 00:28:58,960
really the case is during life cycle

696
00:28:58,960 --> 00:29:01,440
management of the user you want to open

697
00:29:01,440 --> 00:29:03,840
up the opportunity to re resurrect the

698
00:29:03,840 --> 00:29:06,080
user to maintain

699
00:29:06,080 --> 00:29:08,000
the resource identifiers and stuff so

700
00:29:08,000 --> 00:29:10,000
that links don't get broken that was

701
00:29:10,000 --> 00:29:11,679
sort of the broad use case that i

702
00:29:11,679 --> 00:29:13,679
understood from morteza

703
00:29:13,679 --> 00:29:16,080
was that resurrection becomes possible

704
00:29:16,080 --> 00:29:19,679
and again the client doesn't know that

705
00:29:19,679 --> 00:29:21,039
it's just that the workflow on the

706
00:29:21,039 --> 00:29:22,080
server

707
00:29:22,080 --> 00:29:23,760
will say okay i've already got a match

708
00:29:23,760 --> 00:29:25,840
for that based on hidden data that it

709
00:29:25,840 --> 00:29:27,440
knows about and you resurrect that

710
00:29:27,440 --> 00:29:29,200
account and now that account just exists

711
00:29:29,200 --> 00:29:31,279
so the next time the client queries it

712
00:29:31,279 --> 00:29:32,720
it's there

713
00:29:32,720 --> 00:29:33,600
um

714
00:29:33,600 --> 00:29:35,840
so i'm not sure i understand why a

715
00:29:35,840 --> 00:29:38,640
client needs to flag

716
00:29:38,640 --> 00:29:40,480
flag it at all

717
00:29:40,480 --> 00:29:42,080
this is this is aaron i have a

718
00:29:42,080 --> 00:29:44,799
clarifying question on the protocol that

719
00:29:44,799 --> 00:29:46,480
we're looking at on the screen is this

720
00:29:46,480 --> 00:29:49,760
protocol only describing the ability for

721
00:29:49,760 --> 00:29:52,399
a client to query

722
00:29:52,399 --> 00:29:53,520
a

723
00:29:53,520 --> 00:29:55,919
possibly deleted record to to

724
00:29:55,919 --> 00:29:57,760
have it potentially return that actually

725
00:29:57,760 --> 00:29:59,440
it does still exist

726
00:29:59,440 --> 00:30:00,640
is that the idea with this protocol

727
00:30:00,640 --> 00:30:02,880
we're not actually describing

728
00:30:02,880 --> 00:30:03,600
the

729
00:30:03,600 --> 00:30:05,679
the ability for soft deletion to happen

730
00:30:05,679 --> 00:30:08,559
in general but the it looks like i'm

731
00:30:08,559 --> 00:30:09,360
looking at what's on the screen

732
00:30:09,360 --> 00:30:10,799
correctly

733
00:30:10,799 --> 00:30:12,559
it's just the ability to query for soft

734
00:30:12,559 --> 00:30:15,200
related records

735
00:30:15,840 --> 00:30:18,960
that's how i understood it aaron

736
00:30:18,960 --> 00:30:20,960
i i would agree we're not defining the

737
00:30:20,960 --> 00:30:22,880
actual mechanism of sort of soft

738
00:30:22,880 --> 00:30:24,000
deletion and what it means to the

739
00:30:24,000 --> 00:30:25,679
application but rather

740
00:30:25,679 --> 00:30:28,240
if the application has their you know

741
00:30:28,240 --> 00:30:31,200
their own concept of soft deletion that

742
00:30:31,200 --> 00:30:34,840
that term at least is i think at least

743
00:30:34,840 --> 00:30:37,840
somewhat uh in agreement you know across

744
00:30:37,840 --> 00:30:39,679
a lot of identity systems might be a too

745
00:30:39,679 --> 00:30:41,679
controversial statement but at that

746
00:30:41,679 --> 00:30:44,640
point that it's um this is this draft is

747
00:30:44,640 --> 00:30:46,000
to finding a way

748
00:30:46,000 --> 00:30:47,760
to for the client to

749
00:30:47,760 --> 00:30:50,960
learn that from the

750
00:30:57,919 --> 00:30:59,600
so one thing i think we have to keep in

751
00:30:59,600 --> 00:31:02,080
mind is that in a world where

752
00:31:02,080 --> 00:31:03,919
the skim server is always the

753
00:31:03,919 --> 00:31:05,760
authoritative source and the skim client

754
00:31:05,760 --> 00:31:07,039
is always not

755
00:31:07,039 --> 00:31:10,080
then that's fine but in our case like we

756
00:31:10,080 --> 00:31:12,720
now have cases where the skim client can

757
00:31:12,720 --> 00:31:14,559
be the authoritative server

758
00:31:14,559 --> 00:31:16,960
right so so the question becomes

759
00:31:16,960 --> 00:31:19,200
if you know for example if it's your

760
00:31:19,200 --> 00:31:22,480
idas platform that is the skim client

761
00:31:22,480 --> 00:31:24,000
right there could very well be a use

762
00:31:24,000 --> 00:31:26,320
case for them to to be more prescriptive

763
00:31:26,320 --> 00:31:28,080
and to demand

764
00:31:28,080 --> 00:31:30,399
a hard delete

765
00:31:30,399 --> 00:31:32,080
that sounds like a different draft in

766
00:31:32,080 --> 00:31:35,440
that case then right yeah yeah okay

767
00:31:35,440 --> 00:31:37,600
so again this gets back to the use cases

768
00:31:37,600 --> 00:31:40,320
and clarification and

769
00:31:40,320 --> 00:31:42,960
requirement

770
00:31:43,360 --> 00:31:47,000
sorry i'm trying to

771
00:31:56,000 --> 00:31:58,559
hey yeah and this is connor from octa

772
00:31:58,559 --> 00:32:01,519
and i'm just kind of echo

773
00:32:01,519 --> 00:32:03,440
i think this would need more details on

774
00:32:03,440 --> 00:32:06,000
the use case because even for that

775
00:32:06,000 --> 00:32:08,000
sort of resurrecting

776
00:32:08,000 --> 00:32:11,360
a temporarily disabled user case like

777
00:32:11,360 --> 00:32:13,360
there's already the status field that we

778
00:32:13,360 --> 00:32:15,360
have on objects that

779
00:32:15,360 --> 00:32:17,919
can be used for that so i would be

780
00:32:17,919 --> 00:32:20,080
curious to say what specifically would

781
00:32:20,080 --> 00:32:21,360
need that

782
00:32:21,360 --> 00:32:26,199
soft delete info as opposed to that

783
00:32:28,799 --> 00:32:31,440
go ahead phil

784
00:32:32,480 --> 00:32:34,720
yeah i was going to add that that it

785
00:32:34,720 --> 00:32:37,919
might not be so much as

786
00:32:37,919 --> 00:32:40,000
a special flag or we could look at it

787
00:32:40,000 --> 00:32:42,480
but it might be that when you go to do

788
00:32:42,480 --> 00:32:46,240
an ad you want to say i want to re-add

789
00:32:46,240 --> 00:32:48,320
with the i want to create the record but

790
00:32:48,320 --> 00:32:49,760
i want to

791
00:32:49,760 --> 00:32:51,679
resurrect the old identifier that's

792
00:32:51,679 --> 00:32:53,519
really the issue because under skim

793
00:32:53,519 --> 00:32:55,200
protocol right now when you create a

794
00:32:55,200 --> 00:32:57,919
user the skim server is required to

795
00:32:57,919 --> 00:33:00,399
assign the identifier where the client

796
00:33:00,399 --> 00:33:02,559
can't say it what the client's saying is

797
00:33:02,559 --> 00:33:04,000
i want you to restore your old

798
00:33:04,000 --> 00:33:07,279
identifier which was this and that might

799
00:33:07,279 --> 00:33:11,559
change the problem a little bit

800
00:33:14,559 --> 00:33:18,158
or change the solution a little bit

801
00:33:21,760 --> 00:33:24,480
uh does anybody else have uh

802
00:33:24,480 --> 00:33:26,240
any i guess comments questions on soft

803
00:33:26,240 --> 00:33:30,240
deletion or should we move on

804
00:33:33,519 --> 00:33:34,880
i think we should just go ahead and move

805
00:33:34,880 --> 00:33:36,799
on okay

806
00:33:36,799 --> 00:33:39,440
uh uh also i guess test uh people remote

807
00:33:39,440 --> 00:33:43,039
uh is this microphone working okay

808
00:33:44,480 --> 00:33:47,919
cool i guess okay

809
00:33:48,559 --> 00:33:50,559
yeah go ahead cool

810
00:33:50,559 --> 00:33:54,159
um oh boy this is small text for

811
00:33:54,159 --> 00:33:56,559
for being here um

812
00:33:56,559 --> 00:33:58,640
so

813
00:33:58,640 --> 00:34:01,840
i i this slide has a few suggested

814
00:34:01,840 --> 00:34:02,960
additions

815
00:34:02,960 --> 00:34:05,200
for soft deletion i think given the

816
00:34:05,200 --> 00:34:08,560
current uh state of

817
00:34:08,560 --> 00:34:10,000
we're

818
00:34:10,000 --> 00:34:12,639
not sure that this is the right fit just

819
00:34:12,639 --> 00:34:14,719
at a concept level uh we could probably

820
00:34:14,719 --> 00:34:16,800
skip this slide if anybody's interested

821
00:34:16,800 --> 00:34:18,399
they can go review the meeting materials

822
00:34:18,399 --> 00:34:21,399
later

823
00:34:33,760 --> 00:34:36,159
uh so yeah i think we can proceed to the

824
00:34:36,159 --> 00:34:38,560
next slide we'll uh

825
00:34:38,560 --> 00:34:39,760
okay so

826
00:34:39,760 --> 00:34:41,599
the the next topic and this is i believe

827
00:34:41,599 --> 00:34:42,960
the last one

828
00:34:42,960 --> 00:34:45,359
where there is an either current or

829
00:34:45,359 --> 00:34:47,599
expired draft available

830
00:34:47,599 --> 00:34:49,440
this is a draft that i wrote late last

831
00:34:49,440 --> 00:34:52,079
year on roles and entitlements

832
00:34:52,079 --> 00:34:52,960
uh

833
00:34:52,960 --> 00:34:55,760
the url is definitely wrong there

834
00:34:55,760 --> 00:34:57,520
oops

835
00:34:57,520 --> 00:35:00,960
but at a high level this draft aims to

836
00:35:00,960 --> 00:35:04,560
add two new resource types uh to the

837
00:35:04,560 --> 00:35:06,720
to the schema which would be slash roles

838
00:35:06,720 --> 00:35:08,480
and slash entitlements

839
00:35:08,480 --> 00:35:10,720
uh the purpose of that

840
00:35:10,720 --> 00:35:13,440
is to provide

841
00:35:13,440 --> 00:35:14,720
uh

842
00:35:14,720 --> 00:35:16,880
a way for a skin client

843
00:35:16,880 --> 00:35:19,440
to go and query a list of all of the

844
00:35:19,440 --> 00:35:22,320
available values for either roles or

845
00:35:22,320 --> 00:35:25,200
entitlements that would be accepted for

846
00:35:25,200 --> 00:35:28,480
the uh the respective values on the uh

847
00:35:28,480 --> 00:35:30,400
the user resource

848
00:35:30,400 --> 00:35:34,000
uh so a problem that exists today is uh

849
00:35:34,000 --> 00:35:35,760
especially in applications that are

850
00:35:35,760 --> 00:35:38,640
linked to a skim server where uh you

851
00:35:38,640 --> 00:35:39,839
know what we'll call them the

852
00:35:39,839 --> 00:35:41,440
multi-tenanted applications typically

853
00:35:41,440 --> 00:35:44,720
they're you know sas in nature uh

854
00:35:44,720 --> 00:35:45,839
the

855
00:35:45,839 --> 00:35:48,000
customer or like on a per tenant basis

856
00:35:48,000 --> 00:35:50,160
can customize what roles are available

857
00:35:50,160 --> 00:35:51,680
in their application

858
00:35:51,680 --> 00:35:54,560
uh and the skim

859
00:35:54,560 --> 00:35:56,560
client today has no

860
00:35:56,560 --> 00:36:00,400
uh like protocol or schema or you know

861
00:36:00,400 --> 00:36:03,280
skim standard way to go and discover

862
00:36:03,280 --> 00:36:04,560
what are the

863
00:36:04,560 --> 00:36:06,880
available values that will work

864
00:36:06,880 --> 00:36:09,599
uh in these requests and it therefore

865
00:36:09,599 --> 00:36:11,359
either creates sort of an out of

866
00:36:11,359 --> 00:36:12,960
management problem where if a new role

867
00:36:12,960 --> 00:36:14,400
is created in the app it also has to be

868
00:36:14,400 --> 00:36:16,160
created somewhere else

869
00:36:16,160 --> 00:36:18,800
or it leads to a whole bunch of failed

870
00:36:18,800 --> 00:36:21,280
requests when the skim client doesn't

871
00:36:21,280 --> 00:36:23,839
have the correct data and is sending uh

872
00:36:23,839 --> 00:36:25,520
requests to the skim server that are you

873
00:36:25,520 --> 00:36:27,680
know deemed invalid due to uh you know

874
00:36:27,680 --> 00:36:29,599
disallowed values

875
00:36:29,599 --> 00:36:32,240
um on the right hand side

876
00:36:32,240 --> 00:36:34,480
uh there's an example uh just you know

877
00:36:34,480 --> 00:36:36,640
it's it's a resource very basic

878
00:36:36,640 --> 00:36:38,839
uh has things like you know value

879
00:36:38,839 --> 00:36:42,640
display uh just as the

880
00:36:42,640 --> 00:36:44,720
the the user resources roles or

881
00:36:44,720 --> 00:36:47,280
entitlement attribute would uh on that

882
00:36:47,280 --> 00:36:48,079
side

883
00:36:48,079 --> 00:36:49,920
um i

884
00:36:49,920 --> 00:36:52,400
two nights ago published a

885
00:36:52,400 --> 00:36:54,640
new version uh which is currently at

886
00:36:54,640 --> 00:36:57,280
increment zero two uh that actually has

887
00:36:57,280 --> 00:36:59,040
a few new features as well i didn't

888
00:36:59,040 --> 00:37:00,640
include those on this slide

889
00:37:00,640 --> 00:37:02,720
uh but it uh those features revolve

890
00:37:02,720 --> 00:37:03,680
around

891
00:37:03,680 --> 00:37:06,800
uh sort of role or entitlement hierarchy

892
00:37:06,800 --> 00:37:08,960
uh in the event that uh there might be a

893
00:37:08,960 --> 00:37:11,200
role that is actually made up of several

894
00:37:11,200 --> 00:37:13,839
smaller or like less permissioned roles

895
00:37:13,839 --> 00:37:16,800
uh so that you can understand uh sort of

896
00:37:16,800 --> 00:37:18,480
how the different uh like how the

897
00:37:18,480 --> 00:37:20,000
structure of uh

898
00:37:20,000 --> 00:37:22,079
of permissions or roles or licenses or

899
00:37:22,079 --> 00:37:23,440
whatever the thing that is being

900
00:37:23,440 --> 00:37:24,560
represented

901
00:37:24,560 --> 00:37:25,599
uh

902
00:37:25,599 --> 00:37:27,680
works in that application

903
00:37:27,680 --> 00:37:30,480
uh as well as a few uh attributes that

904
00:37:30,480 --> 00:37:33,359
help to uh represent the availability

905
00:37:33,359 --> 00:37:36,000
of those on a numerical basis it's more

906
00:37:36,000 --> 00:37:37,520
towards probably the use case of

907
00:37:37,520 --> 00:37:40,960
entitlements uh thinking of uh instances

908
00:37:40,960 --> 00:37:43,280
where entitlements may be representing

909
00:37:43,280 --> 00:37:45,359
a paid license in a service and you may

910
00:37:45,359 --> 00:37:46,400
only have

911
00:37:46,400 --> 00:37:49,359
100 or 1000 or whatever number of seats

912
00:37:49,359 --> 00:37:50,880
uh so the ability to know what is the

913
00:37:50,880 --> 00:37:52,480
total number of

914
00:37:52,480 --> 00:37:55,599
uh users that can have this value and

915
00:37:55,599 --> 00:37:58,320
how many currently have it uh are also

916
00:37:58,320 --> 00:38:01,839
added in the zero two uh version

917
00:38:01,839 --> 00:38:02,880
uh and

918
00:38:02,880 --> 00:38:04,480
that's all i have to say on this one if

919
00:38:04,480 --> 00:38:07,440
anybody has any questions

920
00:38:11,440 --> 00:38:12,240
um

921
00:38:12,240 --> 00:38:15,799
if not i think

922
00:38:18,079 --> 00:38:20,800
and to so to close out that section

923
00:38:20,800 --> 00:38:22,000
um

924
00:38:22,000 --> 00:38:24,640
i i think the hope is

925
00:38:24,640 --> 00:38:27,440
that for some of these topics uh maybe

926
00:38:27,440 --> 00:38:29,680
we slow down a little on say soft

927
00:38:29,680 --> 00:38:32,960
deletion and figured out as a group uh

928
00:38:32,960 --> 00:38:35,040
given that there are current drafts

929
00:38:35,040 --> 00:38:38,400
uh i would like uh discussion to

930
00:38:38,400 --> 00:38:40,000
pick back up

931
00:38:40,000 --> 00:38:43,680
on the uh the mailing list and for us to

932
00:38:43,680 --> 00:38:44,800
get to a point where you can do calls

933
00:38:44,800 --> 00:38:46,720
for adoption on some of these existing

934
00:38:46,720 --> 00:38:48,640
drafts or figure out why

935
00:38:48,640 --> 00:38:50,800
uh you know what they can't be adopted

936
00:38:50,800 --> 00:38:52,640
and go fix those problems so that we can

937
00:38:52,640 --> 00:38:54,880
start as the working group having

938
00:38:54,880 --> 00:38:58,640
uh more adopted drafts to work through

939
00:38:58,640 --> 00:39:00,800
um so just keep an eye out on the

940
00:39:00,800 --> 00:39:02,720
mailing list there will be some emails

941
00:39:02,720 --> 00:39:04,480
uh pertaining to most of these drafts

942
00:39:04,480 --> 00:39:05,680
that we just covered

943
00:39:05,680 --> 00:39:08,640
uh in the next uh few weeks

944
00:39:08,640 --> 00:39:11,119
uh next slide please

945
00:39:11,119 --> 00:39:13,760
uh so going through some other topics so

946
00:39:13,760 --> 00:39:15,920
these i think for the most part align

947
00:39:15,920 --> 00:39:16,960
with

948
00:39:16,960 --> 00:39:18,079
the

949
00:39:18,079 --> 00:39:20,079
charter that we have for the working

950
00:39:20,079 --> 00:39:22,640
group today uh however there are no

951
00:39:22,640 --> 00:39:24,720
drafts that have been written

952
00:39:24,720 --> 00:39:27,760
uh so this first one is

953
00:39:27,760 --> 00:39:30,240
around change detection or delta query

954
00:39:30,240 --> 00:39:32,320
uh the use case would be uh

955
00:39:32,320 --> 00:39:34,000
similar to uh

956
00:39:34,000 --> 00:39:37,119
the you know crystal-based pagination uh

957
00:39:37,119 --> 00:39:38,960
it's a

958
00:39:38,960 --> 00:39:42,320
tool to help with large scale sort of

959
00:39:42,320 --> 00:39:44,880
manipulation and tracking of data it's

960
00:39:44,880 --> 00:39:47,040
particularly needed in pool based

961
00:39:47,040 --> 00:39:48,160
scenarios

962
00:39:48,160 --> 00:39:49,040
where

963
00:39:49,040 --> 00:39:52,560
the uh the data is sort of

964
00:39:52,560 --> 00:39:54,960
maintained and changes on the scam

965
00:39:54,960 --> 00:39:56,079
service provider and is then being

966
00:39:56,079 --> 00:39:58,000
retrieved for some other purpose

967
00:39:58,000 --> 00:40:00,400
by the skim client uh such as you know a

968
00:40:00,400 --> 00:40:01,839
human resources provider where their

969
00:40:01,839 --> 00:40:03,599
data is being retrieved for use

970
00:40:03,599 --> 00:40:04,720
elsewhere

971
00:40:04,720 --> 00:40:06,079
um

972
00:40:06,079 --> 00:40:07,920
currently there's

973
00:40:07,920 --> 00:40:10,400
uh and i think an option to do

974
00:40:10,400 --> 00:40:14,000
a get based on the meta dot last

975
00:40:14,000 --> 00:40:15,680
modified attribute

976
00:40:15,680 --> 00:40:18,720
uh to detect changes uh however that

977
00:40:18,720 --> 00:40:20,160
doesn't uh

978
00:40:20,160 --> 00:40:24,079
fit all use cases uh as systems that are

979
00:40:24,079 --> 00:40:26,480
sort of like distributed systems such as

980
00:40:26,480 --> 00:40:28,319
a lot of uh you know cloud like as a

981
00:40:28,319 --> 00:40:29,359
service

982
00:40:29,359 --> 00:40:32,079
systems uh may have time drift that uh

983
00:40:32,079 --> 00:40:34,079
causes problems with getting extremely

984
00:40:34,079 --> 00:40:37,040
accurate sets of results based on time

985
00:40:37,040 --> 00:40:39,280
uh so

986
00:40:39,280 --> 00:40:41,599
with the the delta query it would help

987
00:40:41,599 --> 00:40:43,200
to

988
00:40:43,200 --> 00:40:44,079
uh

989
00:40:44,079 --> 00:40:46,720
to provide a way to accurately get all

990
00:40:46,720 --> 00:40:47,839
changes

991
00:40:47,839 --> 00:40:49,760
since the last time that a request was

992
00:40:49,760 --> 00:40:50,960
generated

993
00:40:50,960 --> 00:40:53,520
uh the example at the bottom is just one

994
00:40:53,520 --> 00:40:55,280
possible format i could take you know

995
00:40:55,280 --> 00:40:57,440
get users with the parameter of delta

996
00:40:57,440 --> 00:40:59,920
token equals and then a randomly

997
00:40:59,920 --> 00:41:02,640
generated grid that i put in there

998
00:41:02,640 --> 00:41:03,680
um

999
00:41:03,680 --> 00:41:05,119
there i know in the mailing list there

1000
00:41:05,119 --> 00:41:06,079
have been some other you know

1001
00:41:06,079 --> 00:41:08,400
conversations and uh there are other

1002
00:41:08,400 --> 00:41:10,079
thoughts on how to approach this

1003
00:41:10,079 --> 00:41:12,560
uh this is just one of them

1004
00:41:12,560 --> 00:41:15,040
uh and i see michael's in the queue i'll

1005
00:41:15,040 --> 00:41:16,160
move from this microphone because he's

1006
00:41:16,160 --> 00:41:19,319
here in person

1007
00:41:23,359 --> 00:41:25,440
yeah thanks aaron uh just wanted to

1008
00:41:25,440 --> 00:41:26,880
speak to the usefulness of this

1009
00:41:26,880 --> 00:41:28,400
especially when you look at some of the

1010
00:41:28,400 --> 00:41:30,560
bulk update type nature of the items

1011
00:41:30,560 --> 00:41:32,400
we're dealing with or mapping over to

1012
00:41:32,400 --> 00:41:34,240
real world type scenarios digital

1013
00:41:34,240 --> 00:41:36,640
identities it can be quite useful to be

1014
00:41:36,640 --> 00:41:38,640
able to say hey i need to see every

1015
00:41:38,640 --> 00:41:40,640
company for instance that like an entity

1016
00:41:40,640 --> 00:41:42,400
was registered for an identity was

1017
00:41:42,400 --> 00:41:43,839
registered for

1018
00:41:43,839 --> 00:41:45,440
since the last time there was an update

1019
00:41:45,440 --> 00:41:47,599
or some event that occurred right so

1020
00:41:47,599 --> 00:41:49,520
it's a highly highly useful law

1021
00:41:49,520 --> 00:41:52,400
capability so

1022
00:41:56,079 --> 00:42:00,119
uh is this microphone syllable

1023
00:42:02,240 --> 00:42:05,920
uh okay so switching microphones

1024
00:42:05,920 --> 00:42:06,800
cool

1025
00:42:06,800 --> 00:42:07,920
um

1026
00:42:07,920 --> 00:42:10,000
thanks if you guys um

1027
00:42:10,000 --> 00:42:11,440
so

1028
00:42:11,440 --> 00:42:14,160
uh yeah the the next topic would be the

1029
00:42:14,160 --> 00:42:15,760
human resources schema this is also part

1030
00:42:15,760 --> 00:42:17,359
of our charter

1031
00:42:17,359 --> 00:42:19,920
given the close relationship that uh

1032
00:42:19,920 --> 00:42:22,079
data originating from human resources

1033
00:42:22,079 --> 00:42:24,319
our human capital management providers

1034
00:42:24,319 --> 00:42:26,800
uh tends to have with other identity

1035
00:42:26,800 --> 00:42:28,720
systems and we are you know system for

1036
00:42:28,720 --> 00:42:31,119
cross identity management after all

1037
00:42:31,119 --> 00:42:32,240
um

1038
00:42:32,240 --> 00:42:35,119
there's a desire to get a unified

1039
00:42:35,119 --> 00:42:37,680
generic human resources schema

1040
00:42:37,680 --> 00:42:40,160
uh for skim so that

1041
00:42:40,160 --> 00:42:42,800
human resources providers can

1042
00:42:42,800 --> 00:42:45,200
start you know labeling the same sets of

1043
00:42:45,200 --> 00:42:47,280
data that they may have in the same way

1044
00:42:47,280 --> 00:42:48,800
rather than everybody you know labeling

1045
00:42:48,800 --> 00:42:49,920
different attributes different things

1046
00:42:49,920 --> 00:42:52,079
when they serve the same purpose

1047
00:42:52,079 --> 00:42:55,119
um so this one does not have a draft um

1048
00:42:55,119 --> 00:42:56,480
i've mentioned this recently on the

1049
00:42:56,480 --> 00:42:58,560
mailing list i believe one of the

1050
00:42:58,560 --> 00:43:00,800
critical things that we will need here

1051
00:43:00,800 --> 00:43:03,200
is to get involvement from a significant

1052
00:43:03,200 --> 00:43:06,240
number of human resources providers

1053
00:43:06,240 --> 00:43:09,440
uh to provide their feedback on uh you

1054
00:43:09,440 --> 00:43:12,560
know sort of the shape of this schema as

1055
00:43:12,560 --> 00:43:14,960
if a if

1056
00:43:14,960 --> 00:43:16,800
it's just sort of identity knowledgeable

1057
00:43:16,800 --> 00:43:18,640
people who don't necessarily exist in

1058
00:43:18,640 --> 00:43:20,800
the human resources or human capital

1059
00:43:20,800 --> 00:43:22,240
management world

1060
00:43:22,240 --> 00:43:24,000
we might get it wrong and it might not

1061
00:43:24,000 --> 00:43:25,280
actually help

1062
00:43:25,280 --> 00:43:27,839
with the problem we're trying to solve

1063
00:43:27,839 --> 00:43:28,800
uh

1064
00:43:28,800 --> 00:43:32,000
any questions on this one

1065
00:43:35,680 --> 00:43:37,920
uh okay in that case i will move to the

1066
00:43:37,920 --> 00:43:41,160
next one please

1067
00:43:41,359 --> 00:43:43,920
uh so the next topic would be uh account

1068
00:43:43,920 --> 00:43:45,680
status context

1069
00:43:45,680 --> 00:43:47,280
and so this

1070
00:43:47,280 --> 00:43:50,000
uh lines up with the discussion on soft

1071
00:43:50,000 --> 00:43:52,000
deletion pretty well

1072
00:43:52,000 --> 00:43:55,680
uh currently the the only real

1073
00:43:55,680 --> 00:43:57,119
uh information that you have about a

1074
00:43:57,119 --> 00:43:58,880
user's

1075
00:43:58,880 --> 00:44:01,359
status in a lot of ways is the active

1076
00:44:01,359 --> 00:44:03,040
attribute which is a boolean so it's

1077
00:44:03,040 --> 00:44:05,040
active true or false

1078
00:44:05,040 --> 00:44:07,440
uh there's a proposal

1079
00:44:07,440 --> 00:44:10,319
to expand this out perhaps with a new

1080
00:44:10,319 --> 00:44:13,119
let's say complex attribute to support

1081
00:44:13,119 --> 00:44:14,160
active that would be called something

1082
00:44:14,160 --> 00:44:15,760
like account status

1083
00:44:15,760 --> 00:44:19,200
where you can see things about that user

1084
00:44:19,200 --> 00:44:20,400
are they

1085
00:44:20,400 --> 00:44:23,760
a pre-hire are they on leave

1086
00:44:23,760 --> 00:44:25,200
unpaid or paid

1087
00:44:25,200 --> 00:44:27,200
have they been terminated

1088
00:44:27,200 --> 00:44:28,079
uh

1089
00:44:28,079 --> 00:44:29,119
there's

1090
00:44:29,119 --> 00:44:31,599
i think a desire to align some of these

1091
00:44:31,599 --> 00:44:32,480
states

1092
00:44:32,480 --> 00:44:34,720
with states from the shared signals

1093
00:44:34,720 --> 00:44:36,770
community as well um

1094
00:44:36,770 --> 00:44:38,480
[Music]

1095
00:44:38,480 --> 00:44:42,160
but uh yeah so this is a topic that uh

1096
00:44:42,160 --> 00:44:44,160
we would like to see a draft for as well

1097
00:44:44,160 --> 00:44:45,680
and i believe it is also a part of our

1098
00:44:45,680 --> 00:44:48,000
charter

1099
00:44:49,440 --> 00:44:50,800
um

1100
00:44:50,800 --> 00:44:53,280
i'll pause for five seconds for you know

1101
00:44:53,280 --> 00:44:55,119
hands to go up otherwise uh next slide

1102
00:44:55,119 --> 00:44:57,359
please

1103
00:44:57,920 --> 00:45:00,560
uh okay so the i think we're down to the

1104
00:45:00,560 --> 00:45:05,119
last two slides for this section so uh

1105
00:45:05,119 --> 00:45:07,280
there's an improvement to

1106
00:45:07,280 --> 00:45:08,160
the

1107
00:45:08,160 --> 00:45:10,160
protocol that i would like to see

1108
00:45:10,160 --> 00:45:13,040
uh around reference urls and uh there

1109
00:45:13,040 --> 00:45:14,880
have been discussions in some of our

1110
00:45:14,880 --> 00:45:16,880
interim meetings before possibly also on

1111
00:45:16,880 --> 00:45:21,440
the mailing list uh so the key example

1112
00:45:21,440 --> 00:45:24,400
that uh that i have would be the photos

1113
00:45:24,400 --> 00:45:25,599
attribute

1114
00:45:25,599 --> 00:45:28,400
uh in the core user schema uh so the

1115
00:45:28,400 --> 00:45:30,720
photos attribute is a complex attribute

1116
00:45:30,720 --> 00:45:33,839
but underneath that sort of the main

1117
00:45:33,839 --> 00:45:36,240
sub value in that complex attribute is

1118
00:45:36,240 --> 00:45:38,480
an attribute of a data type uh that is

1119
00:45:38,480 --> 00:45:39,680
called reference

1120
00:45:39,680 --> 00:45:41,119
uh which there are actually very few of

1121
00:45:41,119 --> 00:45:43,359
in the uh in this comes back relative to

1122
00:45:43,359 --> 00:45:45,119
things like you know strings

1123
00:45:45,119 --> 00:45:47,119
uh so a reference attribute needs to

1124
00:45:47,119 --> 00:45:49,040
point to another resource

1125
00:45:49,040 --> 00:45:50,800
somewhere uh and there's gonna be

1126
00:45:50,800 --> 00:45:52,560
multiple types there in the schema spec

1127
00:45:52,560 --> 00:45:53,920
you can go look it up

1128
00:45:53,920 --> 00:45:56,400
uh the problem with

1129
00:45:56,400 --> 00:45:58,240
things that are of url formats

1130
00:45:58,240 --> 00:46:00,319
specifically like the url to somebody's

1131
00:46:00,319 --> 00:46:01,920
profile picture

1132
00:46:01,920 --> 00:46:05,040
is that in a cloud like sas

1133
00:46:05,040 --> 00:46:07,680
internet-based world

1134
00:46:07,680 --> 00:46:09,200
the systems are communicating over the

1135
00:46:09,200 --> 00:46:10,319
internet

1136
00:46:10,319 --> 00:46:12,880
so if as a

1137
00:46:12,880 --> 00:46:15,040
cloud idp

1138
00:46:15,040 --> 00:46:16,160
i am on

1139
00:46:16,160 --> 00:46:17,280
one side of a transaction that's

1140
00:46:17,280 --> 00:46:18,800
happening over the internet

1141
00:46:18,800 --> 00:46:21,680
uh and i am communicating all the user

1142
00:46:21,680 --> 00:46:24,240
profile pictures for an organization

1143
00:46:24,240 --> 00:46:27,119
uh vscam and i'm giving urls

1144
00:46:27,119 --> 00:46:29,680
the service provider that is being told

1145
00:46:29,680 --> 00:46:31,200
those urls

1146
00:46:31,200 --> 00:46:34,240
will then need to go back and ask for

1147
00:46:34,240 --> 00:46:35,760
the pictures

1148
00:46:35,760 --> 00:46:38,079
uh and the spec doesn't actually clearly

1149
00:46:38,079 --> 00:46:41,520
specify today uh the existing spec on

1150
00:46:41,520 --> 00:46:43,920
what happens after those urls are

1151
00:46:43,920 --> 00:46:46,000
provided uh does the app that's

1152
00:46:46,000 --> 00:46:47,280
consuming them just sort of hot linked

1153
00:46:47,280 --> 00:46:48,640
to them forever

1154
00:46:48,640 --> 00:46:50,880
or is the skim service provider expected

1155
00:46:50,880 --> 00:46:52,560
to do like a fetch and then store it

1156
00:46:52,560 --> 00:46:54,160
somewhere locally

1157
00:46:54,160 --> 00:46:56,240
on their side uh so if you know the

1158
00:46:56,240 --> 00:46:57,520
cloud app represented by the service

1159
00:46:57,520 --> 00:46:59,760
provider uh wants to you know hot link

1160
00:46:59,760 --> 00:47:01,280
forever that becomes a problem i don't

1161
00:47:01,280 --> 00:47:03,119
think uh it would be a very popular

1162
00:47:03,119 --> 00:47:04,960
solution either for performance or just

1163
00:47:04,960 --> 00:47:06,640
you know cost reasons

1164
00:47:06,640 --> 00:47:08,800
uh but the the actual big problem that

1165
00:47:08,800 --> 00:47:11,040
i'd like to see there uh see us solve

1166
00:47:11,040 --> 00:47:11,920
here

1167
00:47:11,920 --> 00:47:15,280
is for these urls if as the cloud idp i

1168
00:47:15,280 --> 00:47:16,960
provide a url you know something dot

1169
00:47:16,960 --> 00:47:19,760
jpeg open to the internet how do i make

1170
00:47:19,760 --> 00:47:22,160
sure that only the skim service rider

1171
00:47:22,160 --> 00:47:24,480
that i sent it to is able to access it

1172
00:47:24,480 --> 00:47:26,800
uh the skim standard today doesn't talk

1173
00:47:26,800 --> 00:47:29,440
at all about securing these uh these

1174
00:47:29,440 --> 00:47:30,480
urls

1175
00:47:30,480 --> 00:47:31,359
um

1176
00:47:31,359 --> 00:47:33,359
the i believe the intention of the

1177
00:47:33,359 --> 00:47:34,800
original authors was to leave it up to

1178
00:47:34,800 --> 00:47:36,160
the implementers

1179
00:47:36,160 --> 00:47:39,040
unfortunately that's led to not you know

1180
00:47:39,040 --> 00:47:41,119
uh just there's not a whole lot of use

1181
00:47:41,119 --> 00:47:43,200
profile pictures between

1182
00:47:43,200 --> 00:47:45,680
uh uh cloud idps and

1183
00:47:45,680 --> 00:47:47,520
service providers today

1184
00:47:47,520 --> 00:47:48,319
uh

1185
00:47:48,319 --> 00:47:50,480
bill

1186
00:47:50,800 --> 00:47:54,000
uh my understanding is it's just a url

1187
00:47:54,000 --> 00:47:56,640
so if you are going outside the spec and

1188
00:47:56,640 --> 00:47:58,400
pre-fetching the data as a service

1189
00:47:58,400 --> 00:48:01,520
provider yeah you're opening up a can of

1190
00:48:01,520 --> 00:48:03,599
worms because now you

1191
00:48:03,599 --> 00:48:06,559
are republishing the picture

1192
00:48:06,559 --> 00:48:09,280
um so what what was discussed originally

1193
00:48:09,280 --> 00:48:12,400
was just publish the url and it's it's

1194
00:48:12,400 --> 00:48:14,160
the client that receives it that has to

1195
00:48:14,160 --> 00:48:16,559
have the credentials to go and pull it

1196
00:48:16,559 --> 00:48:17,520
um

1197
00:48:17,520 --> 00:48:20,000
but but the spec is silent on that for a

1198
00:48:20,000 --> 00:48:21,599
reason because

1199
00:48:21,599 --> 00:48:23,680
there wasn't consensus on that so it's

1200
00:48:23,680 --> 00:48:25,440
just a url

1201
00:48:25,440 --> 00:48:26,480
um

1202
00:48:26,480 --> 00:48:28,640
it makes sense that some will want to

1203
00:48:28,640 --> 00:48:30,000
add value

1204
00:48:30,000 --> 00:48:31,760
and do that but then they sort of have

1205
00:48:31,760 --> 00:48:33,200
to solve all those problems that you're

1206
00:48:33,200 --> 00:48:35,839
alluding to

1207
00:48:36,000 --> 00:48:39,839
that's just the historical perspective

1208
00:48:40,720 --> 00:48:44,079
oh yeah thanks phil um

1209
00:48:44,079 --> 00:48:47,440
yeah i i agree that it's a can of worms

1210
00:48:47,440 --> 00:48:49,440
there's a lot of sort of questions there

1211
00:48:49,440 --> 00:48:51,359
about who should be doing what

1212
00:48:51,359 --> 00:48:53,839
uh i think that a consensus is needed

1213
00:48:53,839 --> 00:48:55,440
though and that's sort of what i'm

1214
00:48:55,440 --> 00:48:58,559
calling for here uh just because looking

1215
00:48:58,559 --> 00:49:00,319
at the number of collaboration apps that

1216
00:49:00,319 --> 00:49:02,960
exist out there today uh there's uh just

1217
00:49:02,960 --> 00:49:05,040
in sort of anecdotal experience myself

1218
00:49:05,040 --> 00:49:07,359
i've had a number of conversations where

1219
00:49:07,359 --> 00:49:08,400
uh

1220
00:49:08,400 --> 00:49:11,200
folks that have uh you know that i've

1221
00:49:11,200 --> 00:49:12,960
helped with integrations would really

1222
00:49:12,960 --> 00:49:14,480
like to consume profile pictures but

1223
00:49:14,480 --> 00:49:17,440
there's not a uh a way that we deem

1224
00:49:17,440 --> 00:49:19,839
secure today uh this is uh me speaking

1225
00:49:19,839 --> 00:49:20,880
as a

1226
00:49:20,880 --> 00:49:22,640
product manager at microsoft

1227
00:49:22,640 --> 00:49:23,839
uh

1228
00:49:23,839 --> 00:49:25,359
there's a security problem that we would

1229
00:49:25,359 --> 00:49:27,359
like to see solved here this week we

1230
00:49:27,359 --> 00:49:28,240
don't

1231
00:49:28,240 --> 00:49:30,640
uh you know feel that it the

1232
00:49:30,640 --> 00:49:33,680
it's quite there yet and the

1233
00:49:33,680 --> 00:49:36,160
uh we need a scalable way to to do this

1234
00:49:36,160 --> 00:49:38,480
versus uh leaving you know certain

1235
00:49:38,480 --> 00:49:40,319
decisions up to

1236
00:49:40,319 --> 00:49:42,800
uh the you know any given set of uh

1237
00:49:42,800 --> 00:49:44,559
implementers that are working together

1238
00:49:44,559 --> 00:49:48,079
that's the internal problem essentially

1239
00:49:48,720 --> 00:49:51,359
yeah go ahead dory hey or steel from

1240
00:49:51,359 --> 00:49:53,440
transmute um

1241
00:49:53,440 --> 00:49:55,040
i guess i've seen

1242
00:49:55,040 --> 00:49:57,200
versions of this problem solved in a

1243
00:49:57,200 --> 00:49:59,359
couple different ways so i just share

1244
00:49:59,359 --> 00:50:02,480
you know briefly the some of

1245
00:50:02,480 --> 00:50:05,880
some of the

1246
00:54:35,119 --> 00:54:38,119
oh

1247
00:54:46,640 --> 00:54:51,960
hello those remote can you hear us

1248
00:55:00,640 --> 00:55:02,880
all right so already

1249
00:55:02,880 --> 00:55:04,880
i was just saying sometimes the network

1250
00:55:04,880 --> 00:55:07,680
can go down and you'll be trying to

1251
00:55:07,680 --> 00:55:10,079
resolve your url reference and

1252
00:55:10,079 --> 00:55:13,119
it won't work and so one thing i've seen

1253
00:55:13,119 --> 00:55:16,079
folks do in that case is embed url

1254
00:55:16,079 --> 00:55:20,160
content so going from a

1255
00:55:20,160 --> 00:55:22,640
reference to a value with data uris or

1256
00:55:22,640 --> 00:55:24,799
things like that and then the other

1257
00:55:24,799 --> 00:55:26,799
system is a trucks trusted high

1258
00:55:26,799 --> 00:55:29,119
available proxy and there's privacy

1259
00:55:29,119 --> 00:55:30,160
issues

1260
00:55:30,160 --> 00:55:32,799
on both sides of this problem so i just

1261
00:55:32,799 --> 00:55:34,720
wanted to share that in other sort of

1262
00:55:34,720 --> 00:55:36,880
higher security scenarios where you're

1263
00:55:36,880 --> 00:55:38,640
worried about dereferencing being

1264
00:55:38,640 --> 00:55:40,079
observable

1265
00:55:40,079 --> 00:55:41,839
you might want the embed by value

1266
00:55:41,839 --> 00:55:43,839
solution and not the dereference

1267
00:55:43,839 --> 00:55:46,839
solution

1268
00:55:54,240 --> 00:55:58,240
so this is uh josh baum from rodrigo um

1269
00:55:58,240 --> 00:56:00,720
i just wanted to might say my take on

1270
00:56:00,720 --> 00:56:03,200
this is that even though there was no

1271
00:56:03,200 --> 00:56:05,760
consensus as i just heard that

1272
00:56:05,760 --> 00:56:07,359
at least it should be in the security

1273
00:56:07,359 --> 00:56:10,240
considerations probably

1274
00:56:10,240 --> 00:56:12,240
to just mention

1275
00:56:12,240 --> 00:56:13,280
i don't know

1276
00:56:13,280 --> 00:56:16,920
something about it

1277
00:56:18,079 --> 00:56:19,520
okay uh

1278
00:56:19,520 --> 00:56:22,079
so yeah this one uh

1279
00:56:22,079 --> 00:56:23,760
as we even just heard from the feedback

1280
00:56:23,760 --> 00:56:25,119
i think there's

1281
00:56:25,119 --> 00:56:27,200
a lot of potential solutions on how to

1282
00:56:27,200 --> 00:56:28,400
address this

1283
00:56:28,400 --> 00:56:29,760
um

1284
00:56:29,760 --> 00:56:32,720
i don't have a great one to propose

1285
00:56:32,720 --> 00:56:34,240
myself but it's a topic that i would

1286
00:56:34,240 --> 00:56:35,520
really like to see

1287
00:56:35,520 --> 00:56:37,119
a group of people

1288
00:56:37,119 --> 00:56:40,000
uh find a good scalable solution to

1289
00:56:40,000 --> 00:56:42,960
uh so i'll try to continue this this

1290
00:56:42,960 --> 00:56:44,640
topic on the mailing list but i would

1291
00:56:44,640 --> 00:56:46,000
really love to get a draft written at

1292
00:56:46,000 --> 00:56:47,520
some point for this

1293
00:56:47,520 --> 00:56:49,760
next slide please okay just so it's on

1294
00:56:49,760 --> 00:56:52,480
the notes um phil commented on the chat

1295
00:56:52,480 --> 00:56:54,799
that um

1296
00:56:54,799 --> 00:56:58,799
it could fit in the best practices

1297
00:56:58,799 --> 00:57:01,440
uh such as uh the slide right now

1298
00:57:01,440 --> 00:57:02,640
um

1299
00:57:02,640 --> 00:57:04,799
yeah and so uh this is i believe the

1300
00:57:04,799 --> 00:57:06,720
final slide of sort of you know the

1301
00:57:06,720 --> 00:57:12,040
random sport of drafts that are there

1302
00:57:22,240 --> 00:57:25,440
uh okay uh so yeah this is the last in

1303
00:57:25,440 --> 00:57:27,760
the pile of assorted topics and drafts

1304
00:57:27,760 --> 00:57:28,880
uh

1305
00:57:28,880 --> 00:57:30,480
so

1306
00:57:30,480 --> 00:57:33,760
uh i i believe there's interest uh

1307
00:57:33,760 --> 00:57:35,520
in

1308
00:57:35,520 --> 00:57:37,599
uh sort of tightening up some aspects of

1309
00:57:37,599 --> 00:57:40,240
the sim standard uh with regards to

1310
00:57:40,240 --> 00:57:41,440
security

1311
00:57:41,440 --> 00:57:44,319
uh you know the scam was written in 2014

1312
00:57:44,319 --> 00:57:47,280
2015 that was published in 2015.

1313
00:57:47,280 --> 00:57:48,319
uh

1314
00:57:48,319 --> 00:57:50,400
the internet and the world have changed

1315
00:57:50,400 --> 00:57:51,440
since then

1316
00:57:51,440 --> 00:57:53,920
uh so just some examples of things that

1317
00:57:53,920 --> 00:57:55,920
could be profiled and uh you know

1318
00:57:55,920 --> 00:57:58,079
strongly discouraged in a modern

1319
00:57:58,079 --> 00:58:00,240
security profile bcp

1320
00:58:00,240 --> 00:58:02,400
would be uh to drop support for basic

1321
00:58:02,400 --> 00:58:04,880
auth when uh authorizing the skim

1322
00:58:04,880 --> 00:58:08,240
service writers uh to drop the password

1323
00:58:08,240 --> 00:58:11,040
attribute off of the user resource

1324
00:58:11,040 --> 00:58:12,880
uh and

1325
00:58:12,880 --> 00:58:16,480
to sort of clarify on this one i'm not

1326
00:58:16,480 --> 00:58:19,520
necessarily proposing a hard you may

1327
00:58:19,520 --> 00:58:20,839
never do this

1328
00:58:20,839 --> 00:58:23,359
ever uh there are always going to be

1329
00:58:23,359 --> 00:58:25,280
sort of the outliers in the edge cases

1330
00:58:25,280 --> 00:58:27,280
uh for instance uh skim talking to some

1331
00:58:27,280 --> 00:58:29,680
gateway that's talking to a really

1332
00:58:29,680 --> 00:58:31,599
really old like you know mainframe or

1333
00:58:31,599 --> 00:58:33,440
something where the code on it is never

1334
00:58:33,440 --> 00:58:35,280
going to change

1335
00:58:35,280 --> 00:58:37,680
but for one of the really common scam

1336
00:58:37,680 --> 00:58:40,160
use cases of you know uh

1337
00:58:40,160 --> 00:58:40,960
cross

1338
00:58:40,960 --> 00:58:43,200
domain you know identity exchange uh you

1339
00:58:43,200 --> 00:58:46,000
know sort of the the cloud flavor of it

1340
00:58:46,000 --> 00:58:46,880
um

1341
00:58:46,880 --> 00:58:48,240
passwords really shouldn't be going

1342
00:58:48,240 --> 00:58:51,280
around uh was you know federation has

1343
00:58:51,280 --> 00:58:54,000
taken its place as as the you know the

1344
00:58:54,000 --> 00:58:55,200
way to go

1345
00:58:55,200 --> 00:58:56,240
uh

1346
00:58:56,240 --> 00:58:57,680
and

1347
00:58:57,680 --> 00:58:59,119
even just you know it's looking at the

1348
00:58:59,119 --> 00:59:00,480
basic off piece

1349
00:59:00,480 --> 00:59:01,839
uh there's there's bear tokens there's

1350
00:59:01,839 --> 00:59:04,240
oauth there's other ways to purchase

1351
00:59:04,240 --> 00:59:06,799
over uh i guess clarify basic auth think

1352
00:59:06,799 --> 00:59:08,799
like username and password

1353
00:59:08,799 --> 00:59:11,119
um there's a if you can't tell by my

1354
00:59:11,119 --> 00:59:12,799
lack of you know precision on these

1355
00:59:12,799 --> 00:59:14,319
terms i don't really live in the auth

1356
00:59:14,319 --> 00:59:15,280
world

1357
00:59:15,280 --> 00:59:16,319
uh

1358
00:59:16,319 --> 00:59:19,200
so i'm adding to uh yours's comment a

1359
00:59:19,200 --> 00:59:21,680
minute ago the thing on

1360
00:59:21,680 --> 00:59:24,720
uh sort of uh reference url security may

1361
00:59:24,720 --> 00:59:26,720
also fit into this

1362
00:59:26,720 --> 00:59:29,760
uh but this is a thing also you know

1363
00:59:29,760 --> 00:59:31,680
very happily welcoming

1364
00:59:31,680 --> 00:59:35,280
any contributors co-authors et cetera

1365
00:59:35,280 --> 00:59:36,799
but this is something that i feel is

1366
00:59:36,799 --> 00:59:39,040
needed

1367
00:59:40,559 --> 00:59:42,400
phil did you want me to channel your

1368
00:59:42,400 --> 00:59:44,079
comment or do you want to get in the

1369
00:59:44,079 --> 00:59:47,079
queue

1370
00:59:49,200 --> 00:59:52,078
okay go ahead phil

1371
00:59:52,960 --> 00:59:55,920
i think i've got it okay um

1372
00:59:55,920 --> 00:59:57,359
yeah uh

1373
00:59:57,359 --> 00:59:59,200
we talked about this before and it may

1374
00:59:59,200 --> 01:00:01,920
already be in the security condition

1375
01:00:01,920 --> 01:00:04,240
security considerations and i'll

1376
01:00:04,240 --> 01:00:06,480
double check that but there there are

1377
01:00:06,480 --> 01:00:09,040
really two scenarios one is

1378
01:00:09,040 --> 01:00:11,359
um authenticating so you can make calls

1379
01:00:11,359 --> 01:00:13,760
to skim as a client

1380
01:00:13,760 --> 01:00:14,960
which is

1381
01:00:14,960 --> 01:00:17,440
which is using an http authorization

1382
01:00:17,440 --> 01:00:18,480
header

1383
01:00:18,480 --> 01:00:19,520
and

1384
01:00:19,520 --> 01:00:21,760
it's not a great practice i agree to use

1385
01:00:21,760 --> 01:00:24,000
basic auth and probably you should never

1386
01:00:24,000 --> 01:00:25,200
allow that

1387
01:00:25,200 --> 01:00:27,520
but there are valid use cases we're

1388
01:00:27,520 --> 01:00:29,440
working with the password attribute and

1389
01:00:29,440 --> 01:00:31,760
that's why it's in the schema

1390
01:00:31,760 --> 01:00:34,000
and the idea is that a lot of people

1391
01:00:34,000 --> 01:00:36,400
were using skim as a directory and their

1392
01:00:36,400 --> 01:00:39,520
open id provider would call in to skim

1393
01:00:39,520 --> 01:00:42,880
as a secure client using its credential

1394
01:00:42,880 --> 01:00:45,200
and it validates that a password matches

1395
01:00:45,200 --> 01:00:47,440
and usually that's part of a whole mfa

1396
01:00:47,440 --> 01:00:48,559
strategy

1397
01:00:48,559 --> 01:00:51,040
so i would say it's a harder question to

1398
01:00:51,040 --> 01:00:53,359
remove password

1399
01:00:53,359 --> 01:00:56,720
from from skim schema than it is to

1400
01:00:56,720 --> 01:00:58,640
simply say it's a really bad practice to

1401
01:00:58,640 --> 01:01:02,160
use basic off with skim

1402
01:01:02,160 --> 01:01:04,160
and i'll double check what's

1403
01:01:04,160 --> 01:01:05,760
uh

1404
01:01:05,760 --> 01:01:09,599
7644 says about it right now

1405
01:01:09,599 --> 01:01:10,880
yeah and the

1406
01:01:10,880 --> 01:01:13,359
approach even for password may be

1407
01:01:13,359 --> 01:01:14,720
not to

1408
01:01:14,720 --> 01:01:18,640
remove it but to just very strongly

1409
01:01:18,640 --> 01:01:21,440
advise against it unless you like you

1410
01:01:21,440 --> 01:01:23,359
know we can sort of again it's the best

1411
01:01:23,359 --> 01:01:26,400
practices so to find good reasons right

1412
01:01:26,400 --> 01:01:29,440
so here's what the spec says right now

1413
01:01:29,440 --> 01:01:32,319
usage of basic authentication should be

1414
01:01:32,319 --> 01:01:34,720
avoided due to its use of the single

1415
01:01:34,720 --> 01:01:36,160
factor

1416
01:01:36,160 --> 01:01:38,240
that is based upon relatively static

1417
01:01:38,240 --> 01:01:40,240
symmetric secret

1418
01:01:40,240 --> 01:01:41,920
and so on and so forth so the spec

1419
01:01:41,920 --> 01:01:43,200
already says

1420
01:01:43,200 --> 01:01:46,640
should be avoided so you can get

1421
01:01:46,640 --> 01:01:48,400
the only thing stronger than you can say

1422
01:01:48,400 --> 01:01:50,960
is must not and and redraft the whole

1423
01:01:50,960 --> 01:01:53,839
spec

1424
01:01:54,240 --> 01:01:55,520
if i'm understanding this correctly

1425
01:01:55,520 --> 01:01:57,680
these are two completely unrelated

1426
01:01:57,680 --> 01:01:59,839
example suggestions that danny is

1427
01:01:59,839 --> 01:02:02,079
presenting one is about the client

1428
01:02:02,079 --> 01:02:03,760
authenticating itself to the service

1429
01:02:03,760 --> 01:02:06,240
divider and the other is about just data

1430
01:02:06,240 --> 01:02:07,680
moving around so i don't think these

1431
01:02:07,680 --> 01:02:09,760
were linked together as

1432
01:02:09,760 --> 01:02:11,119
part of the same

1433
01:02:11,119 --> 01:02:13,920
part of the same issue

1434
01:02:14,079 --> 01:02:16,559
and again i don't think it's a

1435
01:02:16,559 --> 01:02:18,000
necessarily the best time to debate

1436
01:02:18,000 --> 01:02:19,359
these particular issues right now this

1437
01:02:19,359 --> 01:02:21,039
is more just to get the

1438
01:02:21,039 --> 01:02:24,160
ideas flowing

1439
01:02:26,880 --> 01:02:29,119
yeah my intent is to to make sure we

1440
01:02:29,119 --> 01:02:31,119
move forward from the current spec then

1441
01:02:31,119 --> 01:02:32,720
try to fix something that's already in

1442
01:02:32,720 --> 01:02:35,839
the spec that's all

1443
01:02:44,160 --> 01:02:46,640
uh yeah i i'm done i'd actually fully

1444
01:02:46,640 --> 01:02:47,920
catch phil's last point but if it's in

1445
01:02:47,920 --> 01:02:50,640
the notes i'll read it

1446
01:02:52,960 --> 01:02:54,160
phil could you repeat that last point

1447
01:02:54,160 --> 01:02:56,399
please

1448
01:02:59,599 --> 01:03:02,000
yeah i was just saying that that i i

1449
01:03:02,000 --> 01:03:04,000
just wanted to point out that

1450
01:03:04,000 --> 01:03:06,400
if the spec is very clear right now

1451
01:03:06,400 --> 01:03:08,720
although it does not say must not

1452
01:03:08,720 --> 01:03:10,480
it says should not

1453
01:03:10,480 --> 01:03:13,599
uh and it's not even capitalized uh it

1454
01:03:13,599 --> 01:03:16,640
should be avoided um

1455
01:03:16,640 --> 01:03:19,680
if if people feel very strongly i

1456
01:03:19,680 --> 01:03:21,359
wouldn't be opposed to

1457
01:03:21,359 --> 01:03:22,559
banning it

1458
01:03:22,559 --> 01:03:23,359
um

1459
01:03:23,359 --> 01:03:25,280
but i think there's a there's a it's a

1460
01:03:25,280 --> 01:03:27,039
much more difficult question on the

1461
01:03:27,039 --> 01:03:28,319
second

1462
01:03:28,319 --> 01:03:30,319
issue of you get rid of password

1463
01:03:30,319 --> 01:03:32,480
entirely and i don't think the community

1464
01:03:32,480 --> 01:03:34,559
is ready for that there's still ldap out

1465
01:03:34,559 --> 01:03:36,480
there for god's sake so

1466
01:03:36,480 --> 01:03:38,960
they haven't got rid of that um

1467
01:03:38,960 --> 01:03:41,520
and so i think that's sort of a key part

1468
01:03:41,520 --> 01:03:43,920
and and i'm hearing a lot of people

1469
01:03:43,920 --> 01:03:46,559
really want the opposite they want

1470
01:03:46,559 --> 01:03:48,319
credential schema

1471
01:03:48,319 --> 01:03:50,559
to have more sophistication about

1472
01:03:50,559 --> 01:03:53,280
credentials and they actually want not

1473
01:03:53,280 --> 01:03:54,799
just the password but they want all the

1474
01:03:54,799 --> 01:03:56,240
password management features

1475
01:03:56,240 --> 01:03:59,119
standardized so password policy when was

1476
01:03:59,119 --> 01:04:00,640
the last change

1477
01:04:00,640 --> 01:04:03,200
how many failures all those kinds of

1478
01:04:03,200 --> 01:04:05,200
things

1479
01:04:05,200 --> 01:04:09,200
it may be that that whole password

1480
01:04:09,200 --> 01:04:12,640
is subject as part of a whole mfa

1481
01:04:12,640 --> 01:04:16,000
schema discussion that we should start

1482
01:04:16,000 --> 01:04:17,760
per your point that things have changed

1483
01:04:17,760 --> 01:04:20,640
in the last six years

1484
01:04:21,200 --> 01:04:23,920
yeah and uh that was all i had so i

1485
01:04:23,920 --> 01:04:25,920
believe this is the last slide of my set

1486
01:04:25,920 --> 01:04:28,799
and we can move on

1487
01:04:28,799 --> 01:04:32,000
okay thanks danny

1488
01:04:33,920 --> 01:04:38,079
okay so next up phil

1489
01:04:38,079 --> 01:04:40,880
you can start with a quick update on the

1490
01:04:40,880 --> 01:04:42,319
draft

1491
01:04:42,319 --> 01:04:43,680
i don't think it will take you that long

1492
01:04:43,680 --> 01:04:47,119
then we can move to the next uh

1493
01:04:47,119 --> 01:04:50,000
that's probably uh 30 seconds

1494
01:04:50,000 --> 01:04:51,039
um

1495
01:04:51,039 --> 01:04:54,400
the working group had a call for a job

1496
01:04:54,400 --> 01:04:57,359
for adoption for the events draft

1497
01:04:57,359 --> 01:05:00,160
that was passed i asked for prior to

1498
01:05:00,160 --> 01:05:01,760
posting it

1499
01:05:01,760 --> 01:05:04,240
as for co-authors and thank you nancy

1500
01:05:04,240 --> 01:05:04,960
for

1501
01:05:04,960 --> 01:05:07,039
agreeing to to help me with the draft we

1502
01:05:07,039 --> 01:05:09,440
could probably still use a couple more

1503
01:05:09,440 --> 01:05:11,119
co-authors

1504
01:05:11,119 --> 01:05:14,319
what that usually means uh is that i'll

1505
01:05:14,319 --> 01:05:15,920
be talking with the authors more

1506
01:05:15,920 --> 01:05:18,720
directly at each publication cycle

1507
01:05:18,720 --> 01:05:21,760
and hopefully getting help in writing or

1508
01:05:21,760 --> 01:05:24,000
in editing and so on so on and so forth

1509
01:05:24,000 --> 01:05:25,680
so if anybody wants to

1510
01:05:25,680 --> 01:05:28,720
co-author please let me know um i just

1511
01:05:28,720 --> 01:05:30,960
need a clear uh indication that you want

1512
01:05:30,960 --> 01:05:32,160
to do that

1513
01:05:32,160 --> 01:05:33,839
um i know there were a couple other

1514
01:05:33,839 --> 01:05:36,160
people but i wasn't able to a time of

1515
01:05:36,160 --> 01:05:38,160
publication get a confirmation that they

1516
01:05:38,160 --> 01:05:41,440
wanted to be an actual author

1517
01:05:41,440 --> 01:05:44,160
and i will clarify

1518
01:05:44,160 --> 01:05:46,799
i will speak now as a participant um

1519
01:05:46,799 --> 01:05:50,079
since i'm now an author for this draft i

1520
01:05:50,079 --> 01:05:52,559
will not be speaking to this draft as a

1521
01:05:52,559 --> 01:05:53,520
chair

1522
01:05:53,520 --> 01:05:56,240
i will relinquish my role as chair to

1523
01:05:56,240 --> 01:05:59,839
aaron for this particular

1524
01:06:02,160 --> 01:06:02,960
okay

1525
01:06:02,960 --> 01:06:05,839
mike go ahead

1526
01:06:06,720 --> 01:06:08,799
this is phil i'm interested in helping

1527
01:06:08,799 --> 01:06:11,839
out so uh you hook me into whatever

1528
01:06:11,839 --> 01:06:13,359
process you have

1529
01:06:13,359 --> 01:06:14,640
in terms of

1530
01:06:14,640 --> 01:06:17,640
respect

1531
01:06:26,319 --> 01:06:29,720
yeah that'd be great

1532
01:06:34,079 --> 01:06:36,640
and as for the draft there was

1533
01:06:36,640 --> 01:06:39,599
very minor changes uh a couple typos and

1534
01:06:39,599 --> 01:06:41,680
other things um i think we have to start

1535
01:06:41,680 --> 01:06:43,599
the discussion phase next before you see

1536
01:06:43,599 --> 01:06:44,480
any

1537
01:06:44,480 --> 01:06:47,839
major updates

1538
01:06:48,000 --> 01:06:50,640
so that's it for that

1539
01:06:50,640 --> 01:06:54,400
okay so we can move you to the uh

1540
01:06:54,400 --> 01:06:56,559
to the deck

1541
01:06:56,559 --> 01:07:01,160
the coordination use cases deck

1542
01:07:05,599 --> 01:07:07,599
thanks um

1543
01:07:07,599 --> 01:07:09,039
what i thought

1544
01:07:09,039 --> 01:07:10,640
i saw

1545
01:07:10,640 --> 01:07:12,880
at least in the last month a lot of

1546
01:07:12,880 --> 01:07:14,960
duplication

1547
01:07:14,960 --> 01:07:17,680
of efforts going on or parallel streams

1548
01:07:17,680 --> 01:07:19,760
that were starting to appear

1549
01:07:19,760 --> 01:07:21,920
and i had was under the impression that

1550
01:07:21,920 --> 01:07:25,359
we had made a decision but it seems like

1551
01:07:25,359 --> 01:07:28,079
we need to revisit that uh so i took the

1552
01:07:28,079 --> 01:07:30,640
liberty of writing what i saw as the use

1553
01:07:30,640 --> 01:07:31,760
cases

1554
01:07:31,760 --> 01:07:32,880
um

1555
01:07:32,880 --> 01:07:35,839
for for events and for

1556
01:07:35,839 --> 01:07:36,640
uh

1557
01:07:36,640 --> 01:07:37,839
paging

1558
01:07:37,839 --> 01:07:40,799
and comparing the things i also heard

1559
01:07:40,799 --> 01:07:43,119
even today

1560
01:07:43,119 --> 01:07:46,640
things like change detection

1561
01:07:46,799 --> 01:07:49,680
that could be covered for some people by

1562
01:07:49,680 --> 01:07:52,240
the skim events draft but you may still

1563
01:07:52,240 --> 01:07:54,839
need change detection as a polling

1564
01:07:54,839 --> 01:07:56,640
technique um

1565
01:07:56,640 --> 01:07:58,240
so that's something we we should sort

1566
01:07:58,240 --> 01:08:00,319
out so i thought the best way to get

1567
01:08:00,319 --> 01:08:01,760
through this would be

1568
01:08:01,760 --> 01:08:04,559
to talk about the use cases what are we

1569
01:08:04,559 --> 01:08:06,400
trying to solve

1570
01:08:06,400 --> 01:08:08,799
and then we can sort of say okay what

1571
01:08:08,799 --> 01:08:10,720
approach

1572
01:08:10,720 --> 01:08:12,480
really works

1573
01:08:12,480 --> 01:08:14,480
i also want to

1574
01:08:14,480 --> 01:08:18,640
understand the full set of requirements

1575
01:08:18,640 --> 01:08:20,880
and also i think one of the things

1576
01:08:20,880 --> 01:08:22,839
that's been pointed out that the

1577
01:08:22,839 --> 01:08:24,960
environment just the world of directory

1578
01:08:24,960 --> 01:08:27,198
services dramatically different

1579
01:08:27,198 --> 01:08:28,399
um

1580
01:08:28,399 --> 01:08:30,399
so we now have

1581
01:08:30,399 --> 01:08:32,158
broader security threats there's

1582
01:08:32,158 --> 01:08:36,158
signaling going on that we need to do

1583
01:08:36,158 --> 01:08:38,640
the scale of servers is much much bigger

1584
01:08:38,640 --> 01:08:40,799
than we had with ldap

1585
01:08:40,799 --> 01:08:42,960
uh and we have to think

1586
01:08:42,960 --> 01:08:44,640
differently we now have multiple

1587
01:08:44,640 --> 01:08:46,640
administrative domains so if we go to

1588
01:08:46,640 --> 01:08:48,479
the next slide i'll get into get into

1589
01:08:48,479 --> 01:08:51,799
this a bit

1590
01:08:52,640 --> 01:08:53,359
so

1591
01:08:53,359 --> 01:08:56,080
the overall scenario was there's some

1592
01:08:56,080 --> 01:08:58,799
relationship between domains

1593
01:08:58,799 --> 01:09:01,920
and this might be a single service

1594
01:09:01,920 --> 01:09:03,920
where there are tenancies

1595
01:09:03,920 --> 01:09:06,719
talking to another administrative domain

1596
01:09:06,719 --> 01:09:09,600
a corporation

1597
01:09:09,600 --> 01:09:11,839
there may be multiple clouds involved so

1598
01:09:11,839 --> 01:09:13,520
for now i'm just going to talk about two

1599
01:09:13,520 --> 01:09:14,799
at a time

1600
01:09:14,799 --> 01:09:16,560
and it doesn't really matter what they

1601
01:09:16,560 --> 01:09:18,158
are but the point is there are two

1602
01:09:18,158 --> 01:09:20,640
separate domains

1603
01:09:20,640 --> 01:09:23,279
there can be life cycle relationships

1604
01:09:23,279 --> 01:09:24,960
between

1605
01:09:24,960 --> 01:09:27,679
users in one domain and another such as

1606
01:09:27,679 --> 01:09:30,000
an employee when the employee

1607
01:09:30,000 --> 01:09:32,399
leaves the employer

1608
01:09:32,399 --> 01:09:34,719
the account let's say at salesforce.com

1609
01:09:34,719 --> 01:09:36,799
needs to be either deleted or suspended

1610
01:09:36,799 --> 01:09:39,759
or soft deleted um so

1611
01:09:39,759 --> 01:09:41,679
that's a big question right there i just

1612
01:09:41,679 --> 01:09:44,640
gave you three possible outcomes

1613
01:09:44,640 --> 01:09:45,759
at

1614
01:09:45,759 --> 01:09:48,319
uh at salesforce that might happen in

1615
01:09:48,319 --> 01:09:50,238
reaction to a change in status and a

1616
01:09:50,238 --> 01:09:51,600
parent domain

1617
01:09:51,600 --> 01:09:53,759
um and that's one of the things that's

1618
01:09:53,759 --> 01:09:56,239
important to observe is that

1619
01:09:56,239 --> 01:09:57,920
it's sometimes

1620
01:09:57,920 --> 01:09:59,840
it's very complex now to go the

1621
01:09:59,840 --> 01:10:02,320
old-fashioned way of ldap but saying one

1622
01:10:02,320 --> 01:10:04,239
domain controls the other because what

1623
01:10:04,239 --> 01:10:06,080
we have is a concept of independent

1624
01:10:06,080 --> 01:10:07,199
control

1625
01:10:07,199 --> 01:10:08,880
and slightly independent life cycle

1626
01:10:08,880 --> 01:10:10,080
management so while there's a

1627
01:10:10,080 --> 01:10:11,600
relationship

1628
01:10:11,600 --> 01:10:14,560
a trigger that goes between the two

1629
01:10:14,560 --> 01:10:16,560
independent action is now more important

1630
01:10:16,560 --> 01:10:19,280
than ever so we'll go through this

1631
01:10:19,280 --> 01:10:22,800
um let's go to the next slide

1632
01:10:24,239 --> 01:10:24,960
so

1633
01:10:24,960 --> 01:10:26,239
in cursor

1634
01:10:26,239 --> 01:10:28,480
paging the idea is that

1635
01:10:28,480 --> 01:10:30,480
the domain on the left

1636
01:10:30,480 --> 01:10:33,280
is periodically asking for a logical

1637
01:10:33,280 --> 01:10:35,920
copy of the entire database on the right

1638
01:10:35,920 --> 01:10:37,920
so that it can do reconciliation now it

1639
01:10:37,920 --> 01:10:40,159
may do that in one call

1640
01:10:40,159 --> 01:10:42,400
or it may actually use paging which is

1641
01:10:42,400 --> 01:10:44,080
what's being asked for so it can get

1642
01:10:44,080 --> 01:10:47,040
through the result set

1643
01:10:47,120 --> 01:10:49,040
one thing that is a bit of a misnomer is

1644
01:10:49,040 --> 01:10:50,719
people are assuming that they need to do

1645
01:10:50,719 --> 01:10:55,120
that because max results is in force

1646
01:10:55,120 --> 01:10:57,120
that's kind of a mistake because max

1647
01:10:57,120 --> 01:11:00,320
results is an optional feature that the

1648
01:11:00,320 --> 01:11:01,840
server can use

1649
01:11:01,840 --> 01:11:03,760
and also max results should limit the

1650
01:11:03,760 --> 01:11:06,560
total results not the page results

1651
01:11:06,560 --> 01:11:08,320
so i just want to be careful to make

1652
01:11:08,320 --> 01:11:10,719
sure we understand that but nevertheless

1653
01:11:10,719 --> 01:11:13,280
you can accomplish synchronization or

1654
01:11:13,280 --> 01:11:16,000
coordination between domains by doing

1655
01:11:16,000 --> 01:11:17,920
a polling technique of retrieving all

1656
01:11:17,920 --> 01:11:20,560
the entries every periodic

1657
01:11:20,560 --> 01:11:23,280
15 minutes or every hour or whatever the

1658
01:11:23,280 --> 01:11:25,760
cycle is and then do reconciliation to

1659
01:11:25,760 --> 01:11:27,920
keep the domains coordinated

1660
01:11:27,920 --> 01:11:29,560
what is good about this is that the

1661
01:11:29,560 --> 01:11:32,880
reconciliation process is deciding

1662
01:11:32,880 --> 01:11:36,400
what changes in domain b mean to domain

1663
01:11:36,400 --> 01:11:38,719
a and then deciding what to do in domain

1664
01:11:38,719 --> 01:11:40,880
a

1665
01:11:40,880 --> 01:11:43,440
on the sort of circle arrow on the left

1666
01:11:43,440 --> 01:11:45,120
and right side

1667
01:11:45,120 --> 01:11:47,280
um i'm just indicating that those

1668
01:11:47,280 --> 01:11:49,360
domains are are running independently

1669
01:11:49,360 --> 01:11:51,360
they have their own value add and there

1670
01:11:51,360 --> 01:11:53,679
are changes that occur independent

1671
01:11:53,679 --> 01:11:55,360
in each other that's very different from

1672
01:11:55,360 --> 01:11:57,520
the old world where we had

1673
01:11:57,520 --> 01:11:59,360
let's even 20 years ago we had meta

1674
01:11:59,360 --> 01:12:01,520
directory nothing happened in domain b

1675
01:12:01,520 --> 01:12:03,679
unless domain or a ordered it that

1676
01:12:03,679 --> 01:12:05,679
doesn't happen today we do have

1677
01:12:05,679 --> 01:12:08,560
independent operation operation

1678
01:12:08,560 --> 01:12:10,080
there are also cases that i've seen

1679
01:12:10,080 --> 01:12:12,320
where there may be mutual

1680
01:12:12,320 --> 01:12:15,360
uh replications so take this diagram and

1681
01:12:15,360 --> 01:12:18,320
flip it around where domain b wants to

1682
01:12:18,320 --> 01:12:19,840
know about changes that are going on in

1683
01:12:19,840 --> 01:12:22,320
domain a just as much as domain a wants

1684
01:12:22,320 --> 01:12:24,560
to know about b

1685
01:12:24,560 --> 01:12:27,360
so next slide

1686
01:12:30,719 --> 01:12:33,360
in the event based system

1687
01:12:33,360 --> 01:12:35,520
uh it's really the same things the same

1688
01:12:35,520 --> 01:12:36,640
environment

1689
01:12:36,640 --> 01:12:39,040
and conditions except this time

1690
01:12:39,040 --> 01:12:41,840
when a server in domain b

1691
01:12:41,840 --> 01:12:44,480
processes a change it issues

1692
01:12:44,480 --> 01:12:47,120
a security event token and which is

1693
01:12:47,120 --> 01:12:49,040
actually just a jot

1694
01:12:49,040 --> 01:12:50,719
and sends it through a transport

1695
01:12:50,719 --> 01:12:51,840
mechanism

1696
01:12:51,840 --> 01:12:54,560
uh which could be a message bus where it

1697
01:12:54,560 --> 01:12:55,840
could be

1698
01:12:55,840 --> 01:12:59,440
uh it could be the set transfer protocol

1699
01:12:59,440 --> 01:13:01,360
that's that's already been published and

1700
01:13:01,360 --> 01:13:03,760
it sends it over to a receiver

1701
01:13:03,760 --> 01:13:06,080
on the in the client domain side on the

1702
01:13:06,080 --> 01:13:06,960
left

1703
01:13:06,960 --> 01:13:09,920
that reconciliation process then happens

1704
01:13:09,920 --> 01:13:12,080
as it receives each event

1705
01:13:12,080 --> 01:13:13,600
two things that are

1706
01:13:13,600 --> 01:13:15,760
that are majorly different one is the

1707
01:13:15,760 --> 01:13:18,239
event can be transferred in real time as

1708
01:13:18,239 --> 01:13:19,840
soon as it occurs

1709
01:13:19,840 --> 01:13:22,159
on any particular of say 100 servers in

1710
01:13:22,159 --> 01:13:24,239
domain b that server can publish the

1711
01:13:24,239 --> 01:13:25,760
event directly

1712
01:13:25,760 --> 01:13:27,520
or it may route

1713
01:13:27,520 --> 01:13:31,120
that event to a dispatch server which

1714
01:13:31,120 --> 01:13:33,040
collects all the events as a stream and

1715
01:13:33,040 --> 01:13:34,560
then sends it to its partner that's

1716
01:13:34,560 --> 01:13:36,480
really up to the deployer to determine

1717
01:13:36,480 --> 01:13:37,679
that

1718
01:13:37,679 --> 01:13:39,840
but the idea is as close to real time as

1719
01:13:39,840 --> 01:13:42,960
possible you get change notices coming

1720
01:13:42,960 --> 01:13:44,480
to the other side

1721
01:13:44,480 --> 01:13:47,760
those change notices can be

1722
01:13:47,760 --> 01:13:49,760
notices about

1723
01:13:49,760 --> 01:13:51,840
the skim resource itself this piece of

1724
01:13:51,840 --> 01:13:53,840
schema this attribute changed and so

1725
01:13:53,840 --> 01:13:54,800
forth

1726
01:13:54,800 --> 01:13:57,040
or they can be things like security

1727
01:13:57,040 --> 01:13:58,960
event they could be account status

1728
01:13:58,960 --> 01:14:00,560
change events

1729
01:14:00,560 --> 01:14:03,280
they could be risk events that says

1730
01:14:03,280 --> 01:14:05,280
there's been a password reset against

1731
01:14:05,280 --> 01:14:07,120
this user

1732
01:14:07,120 --> 01:14:10,000
which which then the receiving side can

1733
01:14:10,000 --> 01:14:12,400
decide what to do and they might not go

1734
01:14:12,400 --> 01:14:14,640
to the skim server or the directory on

1735
01:14:14,640 --> 01:14:16,400
their side they may actually send it off

1736
01:14:16,400 --> 01:14:18,480
to their security team

1737
01:14:18,480 --> 01:14:20,719
for action there and they there's some

1738
01:14:20,719 --> 01:14:23,280
other proprietary action

1739
01:14:23,280 --> 01:14:24,560
one of the things that comes from

1740
01:14:24,560 --> 01:14:26,880
security event tokens is that each of

1741
01:14:26,880 --> 01:14:28,480
these messages are just a simple

1742
01:14:28,480 --> 01:14:29,920
statement of fact

1743
01:14:29,920 --> 01:14:32,000
it's always the receiver that decides

1744
01:14:32,000 --> 01:14:34,560
what to do in its domain and to infirm

1745
01:14:34,560 --> 01:14:37,120
meeting meaning from that event that's

1746
01:14:37,120 --> 01:14:38,800
very different from the world of scam

1747
01:14:38,800 --> 01:14:40,800
where we tell the other side what we

1748
01:14:40,800 --> 01:14:42,880
want through a create

1749
01:14:42,880 --> 01:14:46,239
post or delete or patch request in an

1750
01:14:46,239 --> 01:14:47,760
event you're just getting information

1751
01:14:47,760 --> 01:14:51,199
that you decide to act upon

1752
01:14:51,199 --> 01:14:54,000
so next slide

1753
01:14:55,520 --> 01:14:56,960
so these are the cases i've covered

1754
01:14:56,960 --> 01:14:59,679
there may be more um but let's go

1755
01:14:59,679 --> 01:15:02,960
through them next slide

1756
01:15:04,719 --> 01:15:06,400
so one of the cases that does keep

1757
01:15:06,400 --> 01:15:08,239
coming up is how do you initially set up

1758
01:15:08,239 --> 01:15:09,440
a server

1759
01:15:09,440 --> 01:15:12,880
how do you bootstrap it or recover it

1760
01:15:12,880 --> 01:15:14,880
i'm not sure either draft right now

1761
01:15:14,880 --> 01:15:17,040
addresses the problem

1762
01:15:17,040 --> 01:15:18,719
uh it's partially addressed in the

1763
01:15:18,719 --> 01:15:20,719
current spec with

1764
01:15:20,719 --> 01:15:21,840
the bulk

1765
01:15:21,840 --> 01:15:23,120
operation

1766
01:15:23,120 --> 01:15:24,800
but in reality

1767
01:15:24,800 --> 01:15:27,440
people are probably doing exports to

1768
01:15:27,440 --> 01:15:30,000
jason transporting that file securely to

1769
01:15:30,000 --> 01:15:31,840
the to the receiver side and then they

1770
01:15:31,840 --> 01:15:34,480
do an import when that happens

1771
01:15:34,480 --> 01:15:36,960
we can talk more about this issue but i

1772
01:15:36,960 --> 01:15:38,400
think it's a

1773
01:15:38,400 --> 01:15:40,880
it's a special case problem

1774
01:15:40,880 --> 01:15:44,000
that depending on what you have

1775
01:15:44,000 --> 01:15:45,199
may be

1776
01:15:45,199 --> 01:15:47,040
solved in different ways so for example

1777
01:15:47,040 --> 01:15:48,960
if all of your nodes

1778
01:15:48,960 --> 01:15:50,719
in your skim service provider are

1779
01:15:50,719 --> 01:15:53,120
communicating and replicating using a

1780
01:15:53,120 --> 01:15:54,560
message bus

1781
01:15:54,560 --> 01:15:56,320
these days often the message bus

1782
01:15:56,320 --> 01:15:58,480
technology itself is your recovery

1783
01:15:58,480 --> 01:16:00,960
mechanism so if you lose a node you

1784
01:16:00,960 --> 01:16:03,120
simply go to the message bus and reload

1785
01:16:03,120 --> 01:16:04,880
the whole message bus and you're up and

1786
01:16:04,880 --> 01:16:07,600
running um that's one of the techniques

1787
01:16:07,600 --> 01:16:10,000
there are many other techniques um but

1788
01:16:10,000 --> 01:16:12,560
that's sort of an issue for product

1789
01:16:12,560 --> 01:16:15,679
managers i'm not sure it's an issue for

1790
01:16:15,679 --> 01:16:17,199
us to have to deal with when we're

1791
01:16:17,199 --> 01:16:19,360
talking about that kind of recovery

1792
01:16:19,360 --> 01:16:21,440
cross-domain recovery is

1793
01:16:21,440 --> 01:16:22,960
something we need to talk through as a

1794
01:16:22,960 --> 01:16:24,800
use case and flush this one out a little

1795
01:16:24,800 --> 01:16:26,480
bit more or

1796
01:16:26,480 --> 01:16:28,239
cross-domain bootstrap where you're just

1797
01:16:28,239 --> 01:16:30,560
setting up a new domain so i'm a new

1798
01:16:30,560 --> 01:16:32,719
customer at salesforce and i need to set

1799
01:16:32,719 --> 01:16:34,480
up my tenancy over at salesforce how do

1800
01:16:34,480 --> 01:16:36,880
i do that quickly

1801
01:16:36,880 --> 01:16:38,719
so that's that's one case

1802
01:16:38,719 --> 01:16:41,520
so the next slide

1803
01:16:47,679 --> 01:16:50,320
so in this side

1804
01:16:50,320 --> 01:16:52,719
case we have we have uh something goes

1805
01:16:52,719 --> 01:16:54,400
on in the

1806
01:16:54,400 --> 01:16:56,480
um

1807
01:16:56,480 --> 01:16:59,360
controller side and it wants to

1808
01:16:59,360 --> 01:17:02,080
uh

1809
01:17:02,080 --> 01:17:04,800
reconcile a change that's concerned on a

1810
01:17:04,800 --> 01:17:06,320
slave side

1811
01:17:06,320 --> 01:17:09,920
and reconcile that change so it wants to

1812
01:17:09,920 --> 01:17:12,320
uh pull the change information across

1813
01:17:12,320 --> 01:17:14,840
and decide what to do locally to keep in

1814
01:17:14,840 --> 01:17:18,719
sync or vice versa

1815
01:17:21,120 --> 01:17:23,760
it may also decide to make subsequent

1816
01:17:23,760 --> 01:17:25,600
changes on the remote side depending on

1817
01:17:25,600 --> 01:17:27,520
what the policies are but we we're not

1818
01:17:27,520 --> 01:17:31,199
talking about specifying what gets done

1819
01:17:31,199 --> 01:17:33,519
next

1820
01:17:36,400 --> 01:17:37,440
so

1821
01:17:37,440 --> 01:17:39,520
this is another case

1822
01:17:39,520 --> 01:17:42,159
i think this is important because where

1823
01:17:42,159 --> 01:17:44,320
we're in the past with ldap we didn't

1824
01:17:44,320 --> 01:17:46,640
standardize replication

1825
01:17:46,640 --> 01:17:48,480
because typically

1826
01:17:48,480 --> 01:17:49,440
uh

1827
01:17:49,440 --> 01:17:51,920
customers would be deploying one server

1828
01:17:51,920 --> 01:17:54,400
across all of their one vendor one

1829
01:17:54,400 --> 01:17:56,719
product across all so what each product

1830
01:17:56,719 --> 01:17:58,960
chose to do didn't really matter or

1831
01:17:58,960 --> 01:18:00,719
impact replication

1832
01:18:00,719 --> 01:18:03,600
i don't think that's true today

1833
01:18:03,600 --> 01:18:06,640
based on the provider you're using might

1834
01:18:06,640 --> 01:18:09,040
influence which skin service provider

1835
01:18:09,040 --> 01:18:11,440
you software you implement

1836
01:18:11,440 --> 01:18:12,960
and if you're using multiple cloud

1837
01:18:12,960 --> 01:18:14,159
providers

1838
01:18:14,159 --> 01:18:15,760
there's probably lots of people who are

1839
01:18:15,760 --> 01:18:17,760
going to run into the case where

1840
01:18:17,760 --> 01:18:19,840
one server is running one service

1841
01:18:19,840 --> 01:18:21,360
product and another service running

1842
01:18:21,360 --> 01:18:22,320
another

1843
01:18:22,320 --> 01:18:24,800
and it occurs to me that internal domain

1844
01:18:24,800 --> 01:18:27,520
replication

1845
01:18:27,520 --> 01:18:29,360
is a challenge

1846
01:18:29,360 --> 01:18:31,199
another thing that

1847
01:18:31,199 --> 01:18:34,719
that typifies this environment is that

1848
01:18:34,719 --> 01:18:36,719
you're all in the same security domain

1849
01:18:36,719 --> 01:18:39,199
schema is likely to be the same

1850
01:18:39,199 --> 01:18:41,840
and your goal is to copy information

1851
01:18:41,840 --> 01:18:44,800
between nodes in its whole form so

1852
01:18:44,800 --> 01:18:47,760
in this case when you send a change you

1853
01:18:47,760 --> 01:18:49,600
want to send all of the information all

1854
01:18:49,600 --> 01:18:50,640
at once

1855
01:18:50,640 --> 01:18:52,800
when i'm cross domain

1856
01:18:52,800 --> 01:18:55,280
i know that the receiving domain might

1857
01:18:55,280 --> 01:18:57,840
be interested in the change but i don't

1858
01:18:57,840 --> 01:18:59,360
know necessarily what information

1859
01:18:59,360 --> 01:19:00,880
they're interested in

1860
01:19:00,880 --> 01:19:03,920
so that the concern with cross-domain

1861
01:19:03,920 --> 01:19:06,480
coordination is don't just send them all

1862
01:19:06,480 --> 01:19:08,480
the changes that occurred just send them

1863
01:19:08,480 --> 01:19:10,560
what they need to know in order to

1864
01:19:10,560 --> 01:19:12,320
resolve the issue

1865
01:19:12,320 --> 01:19:14,320
in internal domain

1866
01:19:14,320 --> 01:19:16,400
will publish all the replication

1867
01:19:16,400 --> 01:19:18,080
information so that the other node can

1868
01:19:18,080 --> 01:19:19,280
be quickly

1869
01:19:19,280 --> 01:19:20,480
made current

1870
01:19:20,480 --> 01:19:21,840
that's really the difference i see

1871
01:19:21,840 --> 01:19:24,159
between the two cases

1872
01:19:24,159 --> 01:19:26,719
next slide

1873
01:19:29,520 --> 01:19:30,960
um

1874
01:19:30,960 --> 01:19:32,800
more and more it wasn't the case a few

1875
01:19:32,800 --> 01:19:35,600
years ago more and more uh the notion of

1876
01:19:35,600 --> 01:19:38,080
whose master and whose slave is getting

1877
01:19:38,080 --> 01:19:39,679
weaker

1878
01:19:39,679 --> 01:19:42,320
and i'm seeing more cases where

1879
01:19:42,320 --> 01:19:44,159
people wanted to have bi-directional

1880
01:19:44,159 --> 01:19:45,920
event coordination

1881
01:19:45,920 --> 01:19:46,880
um

1882
01:19:46,880 --> 01:19:48,400
so that's just something in the back of

1883
01:19:48,400 --> 01:19:52,320
my mind that those two diagrams for both

1884
01:19:52,320 --> 01:19:54,239
paging and both

1885
01:19:54,239 --> 01:19:56,239
uh event delivery

1886
01:19:56,239 --> 01:19:58,400
you might want to start thinking about

1887
01:19:58,400 --> 01:20:00,320
throwing away master slave and start

1888
01:20:00,320 --> 01:20:01,679
thinking about

1889
01:20:01,679 --> 01:20:04,719
uh that it's bidirectional you may have

1890
01:20:04,719 --> 01:20:07,040
to set policy that says one domain is

1891
01:20:07,040 --> 01:20:09,440
authoritative over rolls but the other

1892
01:20:09,440 --> 01:20:12,560
domain is authoritative over photos

1893
01:20:12,560 --> 01:20:15,199
who knows but um

1894
01:20:15,199 --> 01:20:17,440
it's a little bit more complex than we

1895
01:20:17,440 --> 01:20:20,239
had even six years ago thanks

1896
01:20:20,239 --> 01:20:22,799
next slide

1897
01:20:27,199 --> 01:20:30,480
this sort of flows out of the risk

1898
01:20:30,480 --> 01:20:32,960
sharing events under open id

1899
01:20:32,960 --> 01:20:35,920
um people are interested to know about

1900
01:20:35,920 --> 01:20:37,760
higher level events

1901
01:20:37,760 --> 01:20:39,920
that come out of a skim repository such

1902
01:20:39,920 --> 01:20:43,120
as a password was changed or an account

1903
01:20:43,120 --> 01:20:45,040
password was reset

1904
01:20:45,040 --> 01:20:46,880
um or

1905
01:20:46,880 --> 01:20:48,800
suspicious activity there's a bunch of

1906
01:20:48,800 --> 01:20:51,120
high level events

1907
01:20:51,120 --> 01:20:53,280
that may be detectable or maybe being

1908
01:20:53,280 --> 01:20:55,520
tracked in a skin server we don't have

1909
01:20:55,520 --> 01:20:58,320
necessarily

1910
01:20:58,320 --> 01:21:01,199
directly all of the

1911
01:21:01,199 --> 01:21:03,600
all of the data involved in this because

1912
01:21:03,600 --> 01:21:05,440
uh as i said we haven't standardized

1913
01:21:05,440 --> 01:21:07,040
things like password failure accounts

1914
01:21:07,040 --> 01:21:08,400
and things like that

1915
01:21:08,400 --> 01:21:10,480
but certainly the side that wants to

1916
01:21:10,480 --> 01:21:12,080
share that information has built that

1917
01:21:12,080 --> 01:21:13,920
information with a combination of skim

1918
01:21:13,920 --> 01:21:15,840
and other services

1919
01:21:15,840 --> 01:21:17,840
and they have that data and they want to

1920
01:21:17,840 --> 01:21:19,840
be able to share that so that

1921
01:21:19,840 --> 01:21:22,719
receiving clients can know that

1922
01:21:22,719 --> 01:21:25,679
they can take independent action um so

1923
01:21:25,679 --> 01:21:26,960
the other thing

1924
01:21:26,960 --> 01:21:28,639
so the scenario that risk sort of

1925
01:21:28,639 --> 01:21:31,199
worries about is

1926
01:21:31,199 --> 01:21:33,199
if somebody adds a new authentication

1927
01:21:33,199 --> 01:21:34,320
factor

1928
01:21:34,320 --> 01:21:36,159
they want to make sure that the person

1929
01:21:36,159 --> 01:21:38,800
adding the authentication factor wasn't

1930
01:21:38,800 --> 01:21:40,719
somebody stealing the account and so

1931
01:21:40,719 --> 01:21:42,400
they changed their security policies

1932
01:21:42,400 --> 01:21:45,120
temporarily on the receiving side

1933
01:21:45,120 --> 01:21:47,199
to enable account recovery for a period

1934
01:21:47,199 --> 01:21:49,840
of time and then once the factor is laid

1935
01:21:49,840 --> 01:21:51,840
down and it's working

1936
01:21:51,840 --> 01:21:53,600
they now know that the account is good

1937
01:21:53,600 --> 01:21:54,880
to go

1938
01:21:54,880 --> 01:21:56,239
sometimes they're just taking that

1939
01:21:56,239 --> 01:21:57,600
information and saying we're going to

1940
01:21:57,600 --> 01:21:59,679
reset our login sessions and force that

1941
01:21:59,679 --> 01:22:02,159
user to log in so that's what signaling

1942
01:22:02,159 --> 01:22:03,920
is all about is the ability to take

1943
01:22:03,920 --> 01:22:05,600
independent action

1944
01:22:05,600 --> 01:22:07,440
by the receiver and decide what's

1945
01:22:07,440 --> 01:22:09,199
appropriate based on your own local

1946
01:22:09,199 --> 01:22:11,360
policies

1947
01:22:11,360 --> 01:22:13,920
next slide

1948
01:22:17,280 --> 01:22:19,040
i wish now i'm looking at this slide on

1949
01:22:19,040 --> 01:22:21,440
my desktop it's quite small

1950
01:22:21,440 --> 01:22:24,239
uh i tried to go through a comparison i

1951
01:22:24,239 --> 01:22:26,639
i will first of all say i'm biased

1952
01:22:26,639 --> 01:22:28,400
because i started off by looking at

1953
01:22:28,400 --> 01:22:29,600
paging

1954
01:22:29,600 --> 01:22:30,719
um

1955
01:22:30,719 --> 01:22:33,600
my chief concern with paging

1956
01:22:33,600 --> 01:22:34,719
is that

1957
01:22:34,719 --> 01:22:37,360
you're only doing it on a

1958
01:22:37,360 --> 01:22:41,120
certain frequency it's periodic uh

1959
01:22:41,120 --> 01:22:42,480
whereas events

1960
01:22:42,480 --> 01:22:44,159
you're trying to get make sure that it

1961
01:22:44,159 --> 01:22:46,080
gets delivered as in close to real time

1962
01:22:46,080 --> 01:22:47,440
as you can

1963
01:22:47,440 --> 01:22:48,480
and

1964
01:22:48,480 --> 01:22:50,400
the effort you put into making sure that

1965
01:22:50,400 --> 01:22:53,199
happen will get you closer to real time

1966
01:22:53,199 --> 01:22:54,639
if you decide you're not going to do

1967
01:22:54,639 --> 01:22:56,239
that you can still

1968
01:22:56,239 --> 01:22:57,120
uh

1969
01:22:57,120 --> 01:22:59,840
throttle event delivery through whatever

1970
01:22:59,840 --> 01:23:01,840
mechanism you want to use and say no i'm

1971
01:23:01,840 --> 01:23:03,520
still i'm just going to pull for events

1972
01:23:03,520 --> 01:23:05,040
every 15 minutes

1973
01:23:05,040 --> 01:23:06,880
you can go both ways with that but on

1974
01:23:06,880 --> 01:23:10,159
the left my concern has always been

1975
01:23:10,159 --> 01:23:11,920
downloading the entire data set

1976
01:23:11,920 --> 01:23:13,760
particularly if you're talking about

1977
01:23:13,760 --> 01:23:15,920
billions of users

1978
01:23:15,920 --> 01:23:20,400
is is a a real challenge in terms of raw

1979
01:23:20,400 --> 01:23:21,360
cost

1980
01:23:21,360 --> 01:23:24,080
um data exposure you're exposing all of

1981
01:23:24,080 --> 01:23:26,600
your data every synchronization cycle

1982
01:23:26,600 --> 01:23:28,560
[Music]

1983
01:23:28,560 --> 01:23:30,639
i would prefer to see a way in in the

1984
01:23:30,639 --> 01:23:32,840
skim coordinated event

1985
01:23:32,840 --> 01:23:36,560
spec in fact the changes don't initially

1986
01:23:36,560 --> 01:23:39,040
at the event stream doesn't contain raw

1987
01:23:39,040 --> 01:23:41,199
data it just contains a notice that an

1988
01:23:41,199 --> 01:23:44,960
identifier resource has changed

1989
01:23:44,960 --> 01:23:47,520
and then the client can go and find out

1990
01:23:47,520 --> 01:23:49,520
what that change was and that's how it

1991
01:23:49,520 --> 01:23:52,560
works so we we share minimal information

1992
01:23:52,560 --> 01:23:54,400
in that profile and i think that's why

1993
01:23:54,400 --> 01:23:59,599
it's a better draft i think also that

1994
01:24:00,560 --> 01:24:02,639
the ability to leverage

1995
01:24:02,639 --> 01:24:04,960
that event mechanism to do things like

1996
01:24:04,960 --> 01:24:06,639
async sing

1997
01:24:06,639 --> 01:24:09,520
async signaling

1998
01:24:09,520 --> 01:24:11,520
um so

1999
01:24:11,520 --> 01:24:14,000
the bulk request has completed

2000
01:24:14,000 --> 01:24:17,360
um to send security events such as risk

2001
01:24:17,360 --> 01:24:19,199
signals and other events

2002
01:24:19,199 --> 01:24:20,880
creates a lot of value and it sort of

2003
01:24:20,880 --> 01:24:23,280
fits in with a general pattern between

2004
01:24:23,280 --> 01:24:25,040
open id

2005
01:24:25,040 --> 01:24:27,600
oauth and skim as a three-legged

2006
01:24:27,600 --> 01:24:28,840
security

2007
01:24:28,840 --> 01:24:31,760
system uh that can be coordinated and so

2008
01:24:31,760 --> 01:24:34,080
that's where i'm coming from

2009
01:24:34,080 --> 01:24:36,400
um

2010
01:24:36,800 --> 01:24:39,840
so that's it and and uh i also would

2011
01:24:39,840 --> 01:24:42,080
like to invite danny and

2012
01:24:42,080 --> 01:24:44,400
i wish matt was here to

2013
01:24:44,400 --> 01:24:47,040
also add where i've missed

2014
01:24:47,040 --> 01:24:51,600
uh the benefits of theirs i do think

2015
01:24:51,600 --> 01:24:54,400
the the paging protocol is

2016
01:24:54,400 --> 01:24:58,239
relatively simple to specify

2017
01:24:58,239 --> 01:25:00,800
but it's much harder in my experience

2018
01:25:00,800 --> 01:25:02,960
i know of a lot of databases that can't

2019
01:25:02,960 --> 01:25:05,199
support cursor based paging

2020
01:25:05,199 --> 01:25:07,600
or if they do you get problems like

2021
01:25:07,600 --> 01:25:10,000
thrashing

2022
01:25:10,000 --> 01:25:11,679
because what they end up doing is

2023
01:25:11,679 --> 01:25:13,280
maintaining a copy of the entire

2024
01:25:13,280 --> 01:25:15,040
database in memory

2025
01:25:15,040 --> 01:25:17,360
and you that leads to swapping and other

2026
01:25:17,360 --> 01:25:18,960
things and if you're

2027
01:25:18,960 --> 01:25:21,520
a service provider with

2028
01:25:21,520 --> 01:25:24,239
many tenancies on the same server

2029
01:25:24,239 --> 01:25:27,120
you haven't got a lot of memory or a lot

2030
01:25:27,120 --> 01:25:28,320
of disk

2031
01:25:28,320 --> 01:25:31,120
to hold multiple copies if if you've got

2032
01:25:31,120 --> 01:25:32,800
50 clients

2033
01:25:32,800 --> 01:25:34,719
doing paging at the same time you won't

2034
01:25:34,719 --> 01:25:36,639
have enough memory at all

2035
01:25:36,639 --> 01:25:38,400
um

2036
01:25:38,400 --> 01:25:40,480
i still think

2037
01:25:40,480 --> 01:25:42,480
you could avoid paging

2038
01:25:42,480 --> 01:25:44,239
by doing a get

2039
01:25:44,239 --> 01:25:46,159
as long as the service provider agrees

2040
01:25:46,159 --> 01:25:47,120
to

2041
01:25:47,120 --> 01:25:49,199
give you unlimited search results you

2042
01:25:49,199 --> 01:25:51,280
could still do a cyclical get

2043
01:25:51,280 --> 01:25:52,960
and that can work and that is really

2044
01:25:52,960 --> 01:25:56,080
simple um but it still has all the

2045
01:25:56,080 --> 01:25:58,719
problems of

2046
01:25:58,719 --> 01:26:00,880
you can only afford to do that only

2047
01:26:00,880 --> 01:26:03,280
every so often once a day or once an

2048
01:26:03,280 --> 01:26:05,760
hour and that leaves you a one-hour gap

2049
01:26:05,760 --> 01:26:07,440
and is that good enough

2050
01:26:07,440 --> 01:26:10,480
um so so that's it for comparison and i

2051
01:26:10,480 --> 01:26:12,400
hope that helps

2052
01:26:12,400 --> 01:26:14,159
okay we only have like a couple couple

2053
01:26:14,159 --> 01:26:16,639
minutes behind let's let danny respond

2054
01:26:16,639 --> 01:26:19,440
and then we'll move on

2055
01:26:20,800 --> 01:26:24,000
hey uh danny with uh microsoft

2056
01:26:24,000 --> 01:26:26,239
uh so i i did have a chance to speak

2057
01:26:26,239 --> 01:26:29,120
with matt peterson uh before this uh

2058
01:26:29,120 --> 01:26:30,480
he's unfortunately not able to join us

2059
01:26:30,480 --> 01:26:31,600
today

2060
01:26:31,600 --> 01:26:32,560
so

2061
01:26:32,560 --> 01:26:34,719
the

2062
01:26:34,719 --> 01:26:38,000
one of the problems and it comes down to

2063
01:26:38,000 --> 01:26:40,000
either we would have to you know specify

2064
01:26:40,000 --> 01:26:41,440
it in the

2065
01:26:41,440 --> 01:26:43,760
uh in the events draft or it's left up

2066
01:26:43,760 --> 01:26:45,040
to the implementers

2067
01:26:45,040 --> 01:26:47,760
is that in some implementations of uh

2068
01:26:47,760 --> 01:26:50,320
like shared signals transmission once

2069
01:26:50,320 --> 01:26:52,320
the signal has been provided

2070
01:26:52,320 --> 01:26:54,239
and the

2071
01:26:54,239 --> 01:26:56,239
uh the receiver and i apologize i'm

2072
01:26:56,239 --> 01:26:58,480
using the wrong terminology uh once the

2073
01:26:58,480 --> 01:27:01,440
c receiver is responded with uh 200 okay

2074
01:27:01,440 --> 01:27:02,320
the

2075
01:27:02,320 --> 01:27:04,480
transmitter may not have a that

2076
01:27:04,480 --> 01:27:06,320
obligation to actually hold that message

2077
01:27:06,320 --> 01:27:07,920
anymore one of the benefits of

2078
01:27:07,920 --> 01:27:10,159
first-year-based pagination is that uh

2079
01:27:10,159 --> 01:27:13,280
the for a limited period of time that

2080
01:27:13,280 --> 01:27:16,159
same cursor can potentially be replayed

2081
01:27:16,159 --> 01:27:18,480
uh to in an event that there's uh some

2082
01:27:18,480 --> 01:27:19,760
sort of you know infrastructure problem

2083
01:27:19,760 --> 01:27:22,480
the vm hosting this has gone down uh

2084
01:27:22,480 --> 01:27:25,120
you're able to get your data back uh i

2085
01:27:25,120 --> 01:27:26,800
it's solvable on the shared signal side

2086
01:27:26,800 --> 01:27:29,920
as well uh other things sort of in favor

2087
01:27:29,920 --> 01:27:32,719
of cursor-based pagination

2088
01:27:32,719 --> 01:27:35,360
uh so just really the infrastructure

2089
01:27:35,360 --> 01:27:38,080
required like you as a

2090
01:27:38,080 --> 01:27:40,239
skim service provider

2091
01:27:40,239 --> 01:27:41,280
uh

2092
01:27:41,280 --> 01:27:43,360
the implementing another you know

2093
01:27:43,360 --> 01:27:44,840
parameter set of parameters some

2094
01:27:44,840 --> 01:27:47,440
attributes uh to support cursor based

2095
01:27:47,440 --> 01:27:48,800
pagination

2096
01:27:48,800 --> 01:27:50,000
it is

2097
01:27:50,000 --> 01:27:51,840
still going to be the more simple option

2098
01:27:51,840 --> 01:27:54,159
compared to having to set up uh

2099
01:27:54,159 --> 01:27:56,080
whichever elements are needed uh

2100
01:27:56,080 --> 01:27:58,080
infrastructure wise for the uh the

2101
01:27:58,080 --> 01:28:01,440
shared signals processing uh and as a

2102
01:28:01,440 --> 01:28:02,960
counterpoint to

2103
01:28:02,960 --> 01:28:05,280
uh sort of the the the downfalls from

2104
01:28:05,280 --> 01:28:06,639
like a software engineering standpoint

2105
01:28:06,639 --> 01:28:08,560
on cursor based pagination

2106
01:28:08,560 --> 01:28:09,520
um

2107
01:28:09,520 --> 01:28:10,400
i i

2108
01:28:10,400 --> 01:28:13,120
so matt's feedback uh to paraphrase him

2109
01:28:13,120 --> 01:28:14,800
was that um

2110
01:28:14,800 --> 01:28:17,280
there are also a number of

2111
01:28:17,280 --> 01:28:20,159
uh existing uh databases you know used

2112
01:28:20,159 --> 01:28:22,239
in identity systems where they natively

2113
01:28:22,239 --> 01:28:24,719
do cursor-based pagination and even

2114
01:28:24,719 --> 01:28:27,120
today to do index-based pagination

2115
01:28:27,120 --> 01:28:28,800
they're having to store their results in

2116
01:28:28,800 --> 01:28:30,880
memory in an index format because that's

2117
01:28:30,880 --> 01:28:33,520
not natively how they work with today

2118
01:28:33,520 --> 01:28:35,040
um

2119
01:28:35,040 --> 01:28:36,239
i feel like i had other points i'm

2120
01:28:36,239 --> 01:28:37,199
losing my

2121
01:28:37,199 --> 01:28:38,880
trying to thought slightly not sure why

2122
01:28:38,880 --> 01:28:39,840
don't i

2123
01:28:39,840 --> 01:28:42,159
why don't i respond to the first couple

2124
01:28:42,159 --> 01:28:44,159
you made and then you can add yours

2125
01:28:44,159 --> 01:28:45,679
because i don't want to lose the thought

2126
01:28:45,679 --> 01:28:48,159
um on the set transfer we did a lot of

2127
01:28:48,159 --> 01:28:50,480
in the in the security token the id

2128
01:28:50,480 --> 01:28:53,040
token working group which which sort of

2129
01:28:53,040 --> 01:28:55,120
took the skim group and a number of

2130
01:28:55,120 --> 01:28:56,960
other groups to work together on a

2131
01:28:56,960 --> 01:28:58,239
common spec

2132
01:28:58,239 --> 01:29:01,360
we talked about this and the issue from

2133
01:29:01,360 --> 01:29:03,280
any service provider was the sheer

2134
01:29:03,280 --> 01:29:05,679
number of events that are flowing out

2135
01:29:05,679 --> 01:29:08,080
and being able to persist those for long

2136
01:29:08,080 --> 01:29:10,800
periods of time becomes

2137
01:29:10,800 --> 01:29:12,800
untenable or let's just say we didn't

2138
01:29:12,800 --> 01:29:14,639
get consensus on that

2139
01:29:14,639 --> 01:29:16,960
what the group decided was is that the

2140
01:29:16,960 --> 01:29:18,560
transfer spec

2141
01:29:18,560 --> 01:29:20,719
give you guaranteed transfer because

2142
01:29:20,719 --> 01:29:23,679
it's not just a 200. the client responds

2143
01:29:23,679 --> 01:29:25,520
it acknowledges that an event was

2144
01:29:25,520 --> 01:29:26,719
received

2145
01:29:26,719 --> 01:29:28,960
the responsibility for recovery then

2146
01:29:28,960 --> 01:29:31,920
becomes the receiver's responsibility so

2147
01:29:31,920 --> 01:29:33,199
once that

2148
01:29:33,199 --> 01:29:36,080
client receiver says yes i got that

2149
01:29:36,080 --> 01:29:38,800
notice i'm acknowledging it that tells

2150
01:29:38,800 --> 01:29:40,719
the service provider it's now allowed to

2151
01:29:40,719 --> 01:29:42,400
forget about the event

2152
01:29:42,400 --> 01:29:43,760
so that's

2153
01:29:43,760 --> 01:29:46,880
the way it normally works in in practice

2154
01:29:46,880 --> 01:29:48,639
there's nothing saying that the

2155
01:29:48,639 --> 01:29:50,480
publisher of the event

2156
01:29:50,480 --> 01:29:53,679
can't keep the event indefinitely uh

2157
01:29:53,679 --> 01:29:55,679
there's nothing saying that or not what

2158
01:29:55,679 --> 01:29:58,560
what was wanted was the ability for the

2159
01:29:58,560 --> 01:30:00,480
publisher to only have to hold events

2160
01:30:00,480 --> 01:30:03,199
for two or three days the idea would be

2161
01:30:03,199 --> 01:30:05,679
uh you're sinking let's say with azure

2162
01:30:05,679 --> 01:30:07,679
between google and azure and azure goes

2163
01:30:07,679 --> 01:30:10,000
offline or google goes offline for three

2164
01:30:10,000 --> 01:30:11,199
days

2165
01:30:11,199 --> 01:30:13,520
when a call comes back up will it get

2166
01:30:13,520 --> 01:30:15,280
back in sync that was the level of

2167
01:30:15,280 --> 01:30:16,960
recovery

2168
01:30:16,960 --> 01:30:19,520
people were agreeing to

2169
01:30:19,520 --> 01:30:21,840
but if we're talking about recovery of a

2170
01:30:21,840 --> 01:30:24,400
lost server that needs to go back and

2171
01:30:24,400 --> 01:30:26,800
figure out a month's worth of history

2172
01:30:26,800 --> 01:30:28,719
since the last backup

2173
01:30:28,719 --> 01:30:30,320
uh that's a different thing and it would

2174
01:30:30,320 --> 01:30:32,080
be up to the

2175
01:30:32,080 --> 01:30:33,679
receiving domain to figure out how

2176
01:30:33,679 --> 01:30:35,280
they're going to manage that recovery

2177
01:30:35,280 --> 01:30:37,600
issue anyway so again

2178
01:30:37,600 --> 01:30:39,199
making recovery the client's

2179
01:30:39,199 --> 01:30:42,000
responsibility gives the client domain

2180
01:30:42,000 --> 01:30:44,239
full control over their data set and how

2181
01:30:44,239 --> 01:30:46,320
they do recovery

2182
01:30:46,320 --> 01:30:49,120
and it lets the side that's publishing

2183
01:30:49,120 --> 01:30:50,880
in the event not have to worry about the

2184
01:30:50,880 --> 01:30:52,080
internal

2185
01:30:52,080 --> 01:30:54,159
problems on a receiver domain

2186
01:30:54,159 --> 01:30:55,920
uh so that i'm just telling you what the

2187
01:30:55,920 --> 01:30:59,360
design is that's it

2188
01:30:59,760 --> 01:31:01,440
okay thanks phil

2189
01:31:01,440 --> 01:31:05,040
uh well so i just wanted to to say we're

2190
01:31:05,040 --> 01:31:07,280
transitioning and we are behind

2191
01:31:07,280 --> 01:31:08,480
scheduled but

2192
01:31:08,480 --> 01:31:10,480
the whole notion why i put

2193
01:31:10,480 --> 01:31:13,360
this presentation ahead danny of this

2194
01:31:13,360 --> 01:31:14,400
was

2195
01:31:14,400 --> 01:31:16,400
to trigger the discussion of

2196
01:31:16,400 --> 01:31:18,239
the use cases

2197
01:31:18,239 --> 01:31:20,480
as well as the requirements as we see

2198
01:31:20,480 --> 01:31:23,280
them that leads us to the notion of

2199
01:31:23,280 --> 01:31:25,440
we've already adopted the skim events

2200
01:31:25,440 --> 01:31:26,639
draft

2201
01:31:26,639 --> 01:31:28,639
there's been discussion about adoption

2202
01:31:28,639 --> 01:31:32,320
of the other two drafts or potentially

2203
01:31:32,320 --> 01:31:35,120
right and so this is where

2204
01:31:35,120 --> 01:31:37,199
we allocated 40 minutes we're now down

2205
01:31:37,199 --> 01:31:39,920
to 20 some odd million minutes

2206
01:31:39,920 --> 01:31:41,760
right to get into that discussion of

2207
01:31:41,760 --> 01:31:43,199
alignment

2208
01:31:43,199 --> 01:31:46,159
to drive consensus sorry um

2209
01:31:46,159 --> 01:31:48,400
amongst the participants here of at

2210
01:31:48,400 --> 01:31:49,679
least

2211
01:31:49,679 --> 01:31:52,880
getting alignment and agreement of these

2212
01:31:52,880 --> 01:31:55,679
are the use cases and and that are

2213
01:31:55,679 --> 01:31:57,760
driving the requirements

2214
01:31:57,760 --> 01:31:59,920
that we need to address in the working

2215
01:31:59,920 --> 01:32:00,960
group

2216
01:32:00,960 --> 01:32:03,040
so i think with that i mean i i'm

2217
01:32:03,040 --> 01:32:04,560
actually fine because you've started

2218
01:32:04,560 --> 01:32:07,120
talking about the pagination right

2219
01:32:07,120 --> 01:32:09,120
but danny i had allotted for you and

2220
01:32:09,120 --> 01:32:12,719
janelle to help lead that discussion um

2221
01:32:12,719 --> 01:32:14,960
it's too bad matt's not here so it's not

2222
01:32:14,960 --> 01:32:17,600
just you and phil but others p please

2223
01:32:17,600 --> 01:32:20,960
feel free to to jump in as well

2224
01:32:20,960 --> 01:32:22,800
uh yeah i i

2225
01:32:22,800 --> 01:32:24,080
agree i wish matt was here because he

2226
01:32:24,080 --> 01:32:27,679
can speak to this better than i can um

2227
01:32:27,679 --> 01:32:30,960
so yeah i guess the so the

2228
01:32:30,960 --> 01:32:33,440
use case behind pagination

2229
01:32:33,440 --> 01:32:35,360
um and

2230
01:32:35,360 --> 01:32:38,560
just like full transparency i i

2231
01:32:38,560 --> 01:32:40,639
work with skim almost exclusively in the

2232
01:32:40,639 --> 01:32:42,960
scenario of we'll call it a

2233
01:32:42,960 --> 01:32:45,040
centralized client working with a

2234
01:32:45,040 --> 01:32:46,400
service writer or a set of service

2235
01:32:46,400 --> 01:32:47,600
providers

2236
01:32:47,600 --> 01:32:48,719
um

2237
01:32:48,719 --> 01:32:50,400
and in that case usually the client is

2238
01:32:50,400 --> 01:32:53,199
acting as an authoritative source trying

2239
01:32:53,199 --> 01:32:55,440
to push data elsewhere

2240
01:32:55,440 --> 01:32:56,560
um

2241
01:32:56,560 --> 01:32:59,120
in those scenarios

2242
01:32:59,120 --> 01:33:00,400
i think

2243
01:33:00,400 --> 01:33:02,320
pagination is needed

2244
01:33:02,320 --> 01:33:03,440
uh

2245
01:33:03,440 --> 01:33:05,520
for

2246
01:33:05,520 --> 01:33:07,199
instance i guess so it's not just push

2247
01:33:07,199 --> 01:33:09,199
it's also pool data potentially where

2248
01:33:09,199 --> 01:33:10,159
you know data's going from somewhere

2249
01:33:10,159 --> 01:33:11,360
else in

2250
01:33:11,360 --> 01:33:14,000
uh but in either case uh in instances

2251
01:33:14,000 --> 01:33:16,560
when you want to uh not only sort of uh

2252
01:33:16,560 --> 01:33:18,719
you know make a suggestion on the state

2253
01:33:18,719 --> 01:33:19,840
of things you know you're sending the

2254
01:33:19,840 --> 01:33:21,040
data that you have and there may be

2255
01:33:21,040 --> 01:33:22,880
other data in a system

2256
01:33:22,880 --> 01:33:26,639
uh in when you as a client need to

2257
01:33:26,639 --> 01:33:29,840
uh sort of be able to see the full state

2258
01:33:29,840 --> 01:33:33,679
of the external connected skim system

2259
01:33:33,679 --> 01:33:34,560
uh

2260
01:33:34,560 --> 01:33:35,760
precisely the problem you said of you

2261
01:33:35,760 --> 01:33:38,159
know millions of results uh i don't

2262
01:33:38,159 --> 01:33:40,400
think cursor-based pagination alone

2263
01:33:40,400 --> 01:33:42,320
solves that um

2264
01:33:42,320 --> 01:33:44,639
it's probably cursor-based pagination

2265
01:33:44,639 --> 01:33:45,600
with

2266
01:33:45,600 --> 01:33:48,800
uh some sort of delta query together

2267
01:33:48,800 --> 01:33:50,960
allowing to paginate a set of results

2268
01:33:50,960 --> 01:33:52,000
and even if you have five million

2269
01:33:52,000 --> 01:33:53,920
results if you're able to first say

2270
01:33:53,920 --> 01:33:55,840
give me the results that

2271
01:33:55,840 --> 01:33:57,280
have changed since the last query and

2272
01:33:57,280 --> 01:33:59,360
then break them up into smaller chunks

2273
01:33:59,360 --> 01:34:00,560
uh it's

2274
01:34:00,560 --> 01:34:02,880
sort of uh like it correctly wrong isn't

2275
01:34:02,880 --> 01:34:06,719
that how old that lets you do it

2276
01:34:06,719 --> 01:34:08,320
like it's it's

2277
01:34:08,320 --> 01:34:09,920
not really reinventing the wheel in a

2278
01:34:09,920 --> 01:34:11,600
way right

2279
01:34:11,600 --> 01:34:15,440
yeah i i don't know if there's a an ldap

2280
01:34:15,440 --> 01:34:17,280
uh user here that can speak

2281
01:34:17,280 --> 01:34:19,040
authoritatively

2282
01:34:19,040 --> 01:34:21,600
well my my concept was

2283
01:34:21,600 --> 01:34:24,639
the uh thrill here again um

2284
01:34:24,639 --> 01:34:27,360
the cn equals change log thing in ldap

2285
01:34:27,360 --> 01:34:29,360
was rather uh

2286
01:34:29,360 --> 01:34:30,639
um

2287
01:34:30,639 --> 01:34:33,520
in my experience uh a description of how

2288
01:34:33,520 --> 01:34:35,360
not to do things

2289
01:34:35,360 --> 01:34:38,000
because it was a common changelog you

2290
01:34:38,000 --> 01:34:40,480
you it was very hard

2291
01:34:40,480 --> 01:34:42,639
to implement good security on that

2292
01:34:42,639 --> 01:34:44,840
because it's wide open and if you have

2293
01:34:44,840 --> 01:34:47,520
multi-tenancies it just gets it becomes

2294
01:34:47,520 --> 01:34:49,679
very very complex to secure

2295
01:34:49,679 --> 01:34:52,239
and it also has a lot of high value data

2296
01:34:52,239 --> 01:34:53,040
in it

2297
01:34:53,040 --> 01:34:54,000
um

2298
01:34:54,000 --> 01:34:56,159
i i would

2299
01:34:56,159 --> 01:34:57,520
prefer

2300
01:34:57,520 --> 01:35:00,639
to avoid that pattern if we can um

2301
01:35:00,639 --> 01:35:02,400
because i think skim is supposed to

2302
01:35:02,400 --> 01:35:03,840
improve on

2303
01:35:03,840 --> 01:35:07,520
ldap not repeat it

2304
01:35:09,920 --> 01:35:11,920
yeah um and so i can't speak

2305
01:35:11,920 --> 01:35:13,119
authoritatively just because i'm

2306
01:35:13,119 --> 01:35:14,880
starting to get outside of my expertise

2307
01:35:14,880 --> 01:35:16,080
but i'm

2308
01:35:16,080 --> 01:35:19,199
uh my understanding is that there are a

2309
01:35:19,199 --> 01:35:22,080
number of other rest apis whether for

2310
01:35:22,080 --> 01:35:24,639
identity or something else where a delta

2311
01:35:24,639 --> 01:35:27,760
query mechanism does exist like sorry i

2312
01:35:27,760 --> 01:35:30,000
don't think we're treading uh you know

2313
01:35:30,000 --> 01:35:32,239
brand new ground so much as adopting a

2314
01:35:32,239 --> 01:35:34,080
solution that's used elsewhere

2315
01:35:34,080 --> 01:35:36,320
um the exact engineering pitfalls i

2316
01:35:36,320 --> 01:35:38,239
don't think i'm particularly

2317
01:35:38,239 --> 01:35:40,159
qualified to discuss

2318
01:35:40,159 --> 01:35:41,520
um

2319
01:35:41,520 --> 01:35:43,360
but i

2320
01:35:43,360 --> 01:35:47,280
so i guess so to pivot slightly

2321
01:35:47,280 --> 01:35:48,880
um i think one of the points of

2322
01:35:48,880 --> 01:35:51,840
contention uh is

2323
01:35:51,840 --> 01:35:55,280
uh sort of the the scope of

2324
01:35:55,280 --> 01:35:56,560
where

2325
01:35:56,560 --> 01:35:59,679
uh where the events draft is useful

2326
01:35:59,679 --> 01:36:00,719
versus

2327
01:36:00,719 --> 01:36:02,480
cursor-based pagination and i think

2328
01:36:02,480 --> 01:36:04,560
there are systems

2329
01:36:04,560 --> 01:36:06,239
where they could

2330
01:36:06,239 --> 01:36:08,080
in lieu of you know a delta query and

2331
01:36:08,080 --> 01:36:10,719
cursor-based pagination they could just

2332
01:36:10,719 --> 01:36:13,360
use an event flow to

2333
01:36:13,360 --> 01:36:15,600
to keep track of things uh but there are

2334
01:36:15,600 --> 01:36:17,199
also systems where that's not really

2335
01:36:17,199 --> 01:36:18,239
feasible

2336
01:36:18,239 --> 01:36:19,040
uh

2337
01:36:19,040 --> 01:36:22,239
and so the the high-level concept of uh

2338
01:36:22,239 --> 01:36:24,000
security event tokens containing skim

2339
01:36:24,000 --> 01:36:25,199
information

2340
01:36:25,199 --> 01:36:26,960
um

2341
01:36:26,960 --> 01:36:28,000
i

2342
01:36:28,000 --> 01:36:30,800
i'm aware of like other i uh you know uh

2343
01:36:30,800 --> 01:36:32,880
people conceiving the idea besides you

2344
01:36:32,880 --> 01:36:34,639
as well phil although you're the only

2345
01:36:34,639 --> 01:36:36,400
one to actually publish a draft

2346
01:36:36,400 --> 01:36:38,719
and in the use case that uh the the

2347
01:36:38,719 --> 01:36:40,560
other group that i've worked with

2348
01:36:40,560 --> 01:36:42,560
uh was aware of our i guess was focusing

2349
01:36:42,560 --> 01:36:45,199
on was more around a skim service

2350
01:36:45,199 --> 01:36:47,040
provider communicating high priority

2351
01:36:47,040 --> 01:36:50,080
results uh or high priority uh data that

2352
01:36:50,080 --> 01:36:51,920
could not wait for that next you know

2353
01:36:51,920 --> 01:36:53,440
pulling cycle that you mentioned here

2354
01:36:53,440 --> 01:36:55,040
maybe like three hours away

2355
01:36:55,040 --> 01:36:58,080
uh so the classic example from sort of

2356
01:36:58,080 --> 01:36:59,280
an identity like synchronization

2357
01:36:59,280 --> 01:37:03,040
provisioning standpoint being um

2358
01:37:03,040 --> 01:37:06,239
a client normally pulls data from a

2359
01:37:06,239 --> 01:37:08,320
human resources provider and uses that

2360
01:37:08,320 --> 01:37:10,800
to you know do things downstream

2361
01:37:10,800 --> 01:37:12,800
and they do that every three hours

2362
01:37:12,800 --> 01:37:14,320
and the

2363
01:37:14,320 --> 01:37:16,239
uh the skim service writer which is the

2364
01:37:16,239 --> 01:37:19,280
human resources organization they

2365
01:37:19,280 --> 01:37:21,600
uh have you know breaking news that uh a

2366
01:37:21,600 --> 01:37:22,960
certain employee has been fired and

2367
01:37:22,960 --> 01:37:24,639
needs to be terminated immediately and

2368
01:37:24,639 --> 01:37:26,560
you know like whatever happens after

2369
01:37:26,560 --> 01:37:28,560
somebody's fired you know

2370
01:37:28,560 --> 01:37:30,400
what the facility will call it

2371
01:37:30,400 --> 01:37:31,760
and

2372
01:37:31,760 --> 01:37:32,719
uh

2373
01:37:32,719 --> 01:37:35,360
so alerting those high priority changes

2374
01:37:35,360 --> 01:37:37,840
uh is the use case that um you know sort

2375
01:37:37,840 --> 01:37:39,199
of me speaking as an implementer rather

2376
01:37:39,199 --> 01:37:41,280
than an author or anything

2377
01:37:41,280 --> 01:37:42,239
uh

2378
01:37:42,239 --> 01:37:43,119
look

2379
01:37:43,119 --> 01:37:46,320
first saw when reading your draft

2380
01:37:46,320 --> 01:37:49,840
so okay um

2381
01:37:49,840 --> 01:37:52,639
i i just want to add one thing

2382
01:37:52,639 --> 01:37:54,880
yeah

2383
01:37:55,760 --> 01:37:58,560
so phil i i was just gonna channel in

2384
01:37:58,560 --> 01:38:02,080
the uh in the chat when ting mentioned

2385
01:38:02,080 --> 01:38:05,360
uh i think cursor pagination and events

2386
01:38:05,360 --> 01:38:08,320
both have its unique use cases

2387
01:38:08,320 --> 01:38:09,280
um

2388
01:38:09,280 --> 01:38:11,600
in the area of data sync

2389
01:38:11,600 --> 01:38:13,520
i'm just gonna read it i felt we need

2390
01:38:13,520 --> 01:38:18,159
both even though the changing event

2391
01:38:18,159 --> 01:38:19,600
published

2392
01:38:19,600 --> 01:38:21,760
should be the primary mechanism to sync

2393
01:38:21,760 --> 01:38:23,840
the data efficiently

2394
01:38:23,840 --> 01:38:24,639
um

2395
01:38:24,639 --> 01:38:27,360
so that kind of triggered a question

2396
01:38:27,360 --> 01:38:28,880
in that

2397
01:38:28,880 --> 01:38:31,360
danny if i'm understanding correctly

2398
01:38:31,360 --> 01:38:34,719
you're also describing

2399
01:38:35,199 --> 01:38:39,040
the so phil has the general

2400
01:38:39,040 --> 01:38:41,840
requirements vis-a-vis he's articulated

2401
01:38:41,840 --> 01:38:44,000
the use cases vis-a-vis the requirements

2402
01:38:44,000 --> 01:38:45,840
from an abstract

2403
01:38:45,840 --> 01:38:48,159
you're describing the anecdotal

2404
01:38:48,159 --> 01:38:50,239
pragmatic of

2405
01:38:50,239 --> 01:38:52,719
this is how the deployments are using it

2406
01:38:52,719 --> 01:38:54,239
today

2407
01:38:54,239 --> 01:38:56,560
with those anecdotes right

2408
01:38:56,560 --> 01:38:57,360
um

2409
01:38:57,360 --> 01:39:00,880
and then given when king's comments

2410
01:39:00,880 --> 01:39:03,600
my question to the group that i will

2411
01:39:03,600 --> 01:39:05,840
pose is

2412
01:39:05,840 --> 01:39:08,000
this isn't the first comment that has

2413
01:39:08,000 --> 01:39:10,239
come through saying well maybe we need

2414
01:39:10,239 --> 01:39:13,040
both mechanisms so i will pose the

2415
01:39:13,040 --> 01:39:16,800
question to both the implementers

2416
01:39:16,800 --> 01:39:20,880
as well as the users of these solutions

2417
01:39:20,880 --> 01:39:24,719
if the solution requires

2418
01:39:24,880 --> 01:39:28,000
support for both of the use cases

2419
01:39:28,000 --> 01:39:30,000
meaning if the argument is

2420
01:39:30,000 --> 01:39:32,480
we need this mechanism for use case a we

2421
01:39:32,480 --> 01:39:36,080
need this mechanism for use case b

2422
01:39:36,080 --> 01:39:38,239
if there is a deployment that needs to

2423
01:39:38,239 --> 01:39:40,960
address both use cases

2424
01:39:40,960 --> 01:39:44,080
for me the question is

2425
01:39:44,080 --> 01:39:46,400
both the implementers and the deployers

2426
01:39:46,400 --> 01:39:49,679
are they willing to absorb

2427
01:39:49,679 --> 01:39:51,920
i'll call it the overhead for just

2428
01:39:51,920 --> 01:39:55,199
generality of having to support the two

2429
01:39:55,199 --> 01:39:57,440
mechanisms

2430
01:39:57,440 --> 01:40:00,159
and i i'm not expecting an answer now

2431
01:40:00,159 --> 01:40:02,400
but it is a question that we as a

2432
01:40:02,400 --> 01:40:05,360
working group need to think about right

2433
01:40:05,360 --> 01:40:08,320
as we're saying well we need both

2434
01:40:08,320 --> 01:40:09,199
meaning

2435
01:40:09,199 --> 01:40:12,159
two protocols two mechanisms

2436
01:40:12,159 --> 01:40:14,239
right

2437
01:40:14,239 --> 01:40:15,600
yeah i guess since i'm standing up for

2438
01:40:15,600 --> 01:40:18,639
the mic i will sit down in a second um

2439
01:40:18,639 --> 01:40:19,600
i

2440
01:40:19,600 --> 01:40:20,560
speaking

2441
01:40:20,560 --> 01:40:23,440
more as an implementer i

2442
01:40:23,440 --> 01:40:25,840
so i agree that i think both are needed

2443
01:40:25,840 --> 01:40:27,679
um i sort of just described my thoughts

2444
01:40:27,679 --> 01:40:28,800
on the use case and it's a bit more

2445
01:40:28,800 --> 01:40:30,000
narrow than some of the examples that

2446
01:40:30,000 --> 01:40:31,360
phil has given

2447
01:40:31,360 --> 01:40:33,119
uh whereas we we haven't really ever

2448
01:40:33,119 --> 01:40:34,400
looked at it you know speaking for

2449
01:40:34,400 --> 01:40:38,239
microsoft as a sort of a a wholesale you

2450
01:40:38,239 --> 01:40:39,840
know like replication

2451
01:40:39,840 --> 01:40:41,360
uh feature to

2452
01:40:41,360 --> 01:40:43,280
move all data around potentially you

2453
01:40:43,280 --> 01:40:45,040
know like all the changes versus high

2454
01:40:45,040 --> 01:40:46,400
priority ones

2455
01:40:46,400 --> 01:40:48,639
i

2456
01:40:48,639 --> 01:40:50,400
there's definitely a strong preference i

2457
01:40:50,400 --> 01:40:52,639
don't i don't think i can speak to say

2458
01:40:52,639 --> 01:40:54,800
we would never implement

2459
01:40:54,800 --> 01:40:56,960
uh you know to the

2460
01:40:56,960 --> 01:40:58,960
like the the level of uh what phil just

2461
01:40:58,960 --> 01:41:00,639
described as examples but i think

2462
01:41:00,639 --> 01:41:03,119
there's a strong preference to

2463
01:41:03,119 --> 01:41:06,000
be able to do that purely with uh like

2464
01:41:06,000 --> 01:41:08,719
operating with the rest api as a client

2465
01:41:08,719 --> 01:41:11,119
versus also having to have the receiver

2466
01:41:11,119 --> 01:41:12,080
in place

2467
01:41:12,080 --> 01:41:14,239
so you're saying as an implementer you

2468
01:41:14,239 --> 01:41:15,440
would be okay

2469
01:41:15,440 --> 01:41:19,719
supporting both mechanisms

2470
01:41:19,840 --> 01:41:21,360
uh

2471
01:41:21,360 --> 01:41:23,760
not quite so there are there are certain

2472
01:41:23,760 --> 01:41:26,080
use cases such as the human resources

2473
01:41:26,080 --> 01:41:28,560
high priority uh change notification of

2474
01:41:28,560 --> 01:41:30,960
a termination where implementation makes

2475
01:41:30,960 --> 01:41:35,360
sense uh at the scale of uh sort of

2476
01:41:35,360 --> 01:41:37,600
all like replication of changes from

2477
01:41:37,600 --> 01:41:39,679
side a to side b happening through

2478
01:41:39,679 --> 01:41:41,520
events rather than through a polling

2479
01:41:41,520 --> 01:41:42,400
model

2480
01:41:42,400 --> 01:41:43,199
uh

2481
01:41:43,199 --> 01:41:44,719
my

2482
01:41:44,719 --> 01:41:46,480
sort of you know rough understanding not

2483
01:41:46,480 --> 01:41:47,360
a hard

2484
01:41:47,360 --> 01:41:49,920
statement or commitment is that as

2485
01:41:49,920 --> 01:41:52,320
microsoft as an implementer we would

2486
01:41:52,320 --> 01:41:53,600
prefer to

2487
01:41:53,600 --> 01:41:54,480
uh

2488
01:41:54,480 --> 01:41:56,400
act primarily as a client and just pull

2489
01:41:56,400 --> 01:41:58,400
for those changes using cursor-based

2490
01:41:58,400 --> 01:42:00,880
pagination a delta query and so on

2491
01:42:00,880 --> 01:42:02,320
rather than also having to have a

2492
01:42:02,320 --> 01:42:03,280
listener

2493
01:42:03,280 --> 01:42:05,280
for the events to come in

2494
01:42:05,280 --> 01:42:07,519
okay

2495
01:42:07,920 --> 01:42:10,480
and uh i guess just one final

2496
01:42:10,480 --> 01:42:14,000
clarify so in the in large distributed

2497
01:42:14,000 --> 01:42:15,679
cloud systems

2498
01:42:15,679 --> 01:42:17,360
i think there's

2499
01:42:17,360 --> 01:42:18,560
uh

2500
01:42:18,560 --> 01:42:20,880
maybe a slightly higher risk you know

2501
01:42:20,880 --> 01:42:22,960
when you have like a thousand or ten

2502
01:42:22,960 --> 01:42:24,000
thousand or a million or whatever little

2503
01:42:24,000 --> 01:42:25,760
containers running

2504
01:42:25,760 --> 01:42:27,600
they're

2505
01:42:27,600 --> 01:42:29,760
one of them may go pop off and die and

2506
01:42:29,760 --> 01:42:31,360
get reprovision so

2507
01:42:31,360 --> 01:42:32,560
in any

2508
01:42:32,560 --> 01:42:34,480
scenario where you're receiving

2509
01:42:34,480 --> 01:42:37,199
something like that um the

2510
01:42:37,199 --> 01:42:39,440
the polling model is a little safer i

2511
01:42:39,440 --> 01:42:41,199
think in when the client is a cloud

2512
01:42:41,199 --> 01:42:42,639
distributed system

2513
01:42:42,639 --> 01:42:44,800
uh because you can go and remake that

2514
01:42:44,800 --> 01:42:46,480
same request if something happens to one

2515
01:42:46,480 --> 01:42:47,360
of your

2516
01:42:47,360 --> 01:42:49,360
many uh little nodes that are running

2517
01:42:49,360 --> 01:42:50,880
and i'm not a software engineer so if

2518
01:42:50,880 --> 01:42:53,760
i'm wrong i'm sorry i'm saying

2519
01:42:53,760 --> 01:42:56,000
okay phil's been patiently waiting in

2520
01:42:56,000 --> 01:42:59,440
the cube so phil

2521
01:42:59,920 --> 01:43:02,560
um yeah i i wanted to point out because

2522
01:43:02,560 --> 01:43:04,080
people were looking for a compliment to

2523
01:43:04,080 --> 01:43:06,000
skim events there's actually two other

2524
01:43:06,000 --> 01:43:08,480
mechanisms we haven't discussed as well

2525
01:43:08,480 --> 01:43:11,639
that can be used one is rfc

2526
01:43:11,639 --> 01:43:14,480
7232 which people

2527
01:43:14,480 --> 01:43:15,840
haven't really looked into because

2528
01:43:15,840 --> 01:43:18,800
skim's an http profile and it does

2529
01:43:18,800 --> 01:43:21,360
mention e-tags and what e-tags give you

2530
01:43:21,360 --> 01:43:23,520
is the ability to put

2531
01:43:23,520 --> 01:43:26,239
http preconditions on your re on your

2532
01:43:26,239 --> 01:43:28,800
request so that means you can say

2533
01:43:28,800 --> 01:43:31,520
um get this resource

2534
01:43:31,520 --> 01:43:34,560
uh as long as it's changed since i last

2535
01:43:34,560 --> 01:43:36,880
queried it if the e tag has changed the

2536
01:43:36,880 --> 01:43:40,239
e etag is just a hash of the resource

2537
01:43:40,239 --> 01:43:42,000
so if the resource has changed give me

2538
01:43:42,000 --> 01:43:43,679
the resource so that's what happens on a

2539
01:43:43,679 --> 01:43:46,239
get and then on the modify

2540
01:43:46,239 --> 01:43:48,560
you can put a precondition that says

2541
01:43:48,560 --> 01:43:51,040
this this condition only applies if the

2542
01:43:51,040 --> 01:43:53,040
resource hasn't changed underneath me so

2543
01:43:53,040 --> 01:43:55,040
that's one of the techniques that http

2544
01:43:55,040 --> 01:43:57,199
offers and the skin

2545
01:43:57,199 --> 01:44:00,000
protocol spec does specify that

2546
01:44:00,000 --> 01:44:01,840
support for etag

2547
01:44:01,840 --> 01:44:04,159
the other mechanism that skim offers if

2548
01:44:04,159 --> 01:44:06,000
you want to know what's changed is you

2549
01:44:06,000 --> 01:44:08,000
can do a general query and query

2550
01:44:08,000 --> 01:44:10,960
metadata last modified and say

2551
01:44:10,960 --> 01:44:12,639
since a certain date

2552
01:44:12,639 --> 01:44:14,080
um

2553
01:44:14,080 --> 01:44:16,719
that might be somewhat more crude than

2554
01:44:16,719 --> 01:44:19,360
people want but those two things are

2555
01:44:19,360 --> 01:44:20,800
sort of there and that's what's in the

2556
01:44:20,800 --> 01:44:23,920
back of my mind as the complement to the

2557
01:44:23,920 --> 01:44:25,199
event spec

2558
01:44:25,199 --> 01:44:27,119
if i need to get a list of identifiers

2559
01:44:27,119 --> 01:44:29,840
that have changed since its last date i

2560
01:44:29,840 --> 01:44:30,800
could do

2561
01:44:30,800 --> 01:44:34,000
a skim get ask for attribute id and last

2562
01:44:34,000 --> 01:44:37,440
modified equals metadot and that date

2563
01:44:37,440 --> 01:44:38,239
um

2564
01:44:38,239 --> 01:44:40,400
so so that's already possible in the

2565
01:44:40,400 --> 01:44:42,239
current spec we don't need a new spec

2566
01:44:42,239 --> 01:44:44,638
for that

2567
01:44:46,320 --> 01:44:49,199
okay danny you're back in the queue and

2568
01:44:49,199 --> 01:44:50,719
pam

2569
01:44:50,719 --> 01:44:53,119
so you are

2570
01:44:53,440 --> 01:44:54,719
um

2571
01:44:54,719 --> 01:44:57,679
yeah i i think there's hesitance to lean

2572
01:44:57,679 --> 01:45:00,480
on the meta dot last modified thing uh i

2573
01:45:00,480 --> 01:45:02,239
mentioned it you know 45 minutes ago

2574
01:45:02,239 --> 01:45:04,639
probably because in distributed systems

2575
01:45:04,639 --> 01:45:07,679
there's way more like times to be kept

2576
01:45:07,679 --> 01:45:10,080
track of potentially just it's

2577
01:45:10,080 --> 01:45:11,520
harder to get

2578
01:45:11,520 --> 01:45:13,600
more like to get a certain level of

2579
01:45:13,600 --> 01:45:15,040
precision and results if there's time

2580
01:45:15,040 --> 01:45:17,600
drift between different systems

2581
01:45:17,600 --> 01:45:18,880
um

2582
01:45:18,880 --> 01:45:21,040
and then with e-tags

2583
01:45:21,040 --> 01:45:21,920
uh

2584
01:45:21,920 --> 01:45:24,080
my understanding of it um so when you

2585
01:45:24,080 --> 01:45:25,360
mentioned on the mailing list somewhere

2586
01:45:25,360 --> 01:45:26,400
in the past month i went and did a bunch

2587
01:45:26,400 --> 01:45:27,760
of looking because i've never had to

2588
01:45:27,760 --> 01:45:30,239
interact with them that's a resource

2589
01:45:30,239 --> 01:45:31,840
level hash

2590
01:45:31,840 --> 01:45:34,320
so it doesn't necessarily help with the

2591
01:45:34,320 --> 01:45:36,239
the delta query on a large scale of you

2592
01:45:36,239 --> 01:45:38,320
know if i have a

2593
01:45:38,320 --> 01:45:40,320
human resources platform with 500 000

2594
01:45:40,320 --> 01:45:41,679
resources in it

2595
01:45:41,679 --> 01:45:43,600
that i'm trying to create like i i can't

2596
01:45:43,600 --> 01:45:45,600
go and say give me anything

2597
01:45:45,600 --> 01:45:47,520
that's changed in you know the past uh

2598
01:45:47,520 --> 01:45:48,800
since i last talked to you three hours

2599
01:45:48,800 --> 01:45:50,719
ago whichever right it's i want to go

2600
01:45:50,719 --> 01:45:53,360
see is danny or has danny changed in the

2601
01:45:53,360 --> 01:45:55,040
past three hours i'd have to do a whole

2602
01:45:55,040 --> 01:45:56,320
bunch of requests or bulk requests or

2603
01:45:56,320 --> 01:45:59,320
whatever

2604
01:46:01,920 --> 01:46:02,880
i'll

2605
01:46:02,880 --> 01:46:05,280
it fell i'll just respond

2606
01:46:05,280 --> 01:46:06,400
um

2607
01:46:06,400 --> 01:46:08,400
i don't know that precision matters on

2608
01:46:08,400 --> 01:46:10,960
last modified you could certainly

2609
01:46:10,960 --> 01:46:14,719
um add a few minutes to that date

2610
01:46:14,719 --> 01:46:16,800
and you'll get more data than you

2611
01:46:16,800 --> 01:46:19,119
necessarily want but i don't see you

2612
01:46:19,119 --> 01:46:21,280
losing data

2613
01:46:21,280 --> 01:46:23,199
it's certainly better than querying

2614
01:46:23,199 --> 01:46:25,199
everything

2615
01:46:25,199 --> 01:46:27,520
so that's that's there and etag yes

2616
01:46:27,520 --> 01:46:29,600
that's the limitation is it's a resource

2617
01:46:29,600 --> 01:46:32,400
level hash so it only works on specific

2618
01:46:32,400 --> 01:46:35,040
resources

2619
01:46:36,719 --> 01:46:39,199
that's it for

2620
01:46:39,199 --> 01:46:40,159
okay go me

2621
01:46:40,159 --> 01:46:42,239
okay pam dingle uh sorry i forgot to say

2622
01:46:42,239 --> 01:46:45,840
that before uh from microsoft um

2623
01:46:45,840 --> 01:46:48,719
so what i've i think we can debate till

2624
01:46:48,719 --> 01:46:50,400
we run out of breath but we really need

2625
01:46:50,400 --> 01:46:52,560
to get this data in the hand of the

2626
01:46:52,560 --> 01:46:54,159
engineers of the that are going to

2627
01:46:54,159 --> 01:46:57,199
implement so can i suggest as a next

2628
01:46:57,199 --> 01:46:58,080
step

2629
01:46:58,080 --> 01:47:00,719
we create um an analysis and maybe it's

2630
01:47:00,719 --> 01:47:02,880
this comparison chart but with all of

2631
01:47:02,880 --> 01:47:04,800
the options instead of just two

2632
01:47:04,800 --> 01:47:07,040
of the options and we actually create a

2633
01:47:07,040 --> 01:47:08,719
survey that we can send

2634
01:47:08,719 --> 01:47:09,520
to

2635
01:47:09,520 --> 01:47:11,760
as many engineers as we can that we know

2636
01:47:11,760 --> 01:47:14,639
have implemented skim 2.0

2637
01:47:14,639 --> 01:47:17,119
and try to get those um you know get

2638
01:47:17,119 --> 01:47:18,719
answers back in a format then we could

2639
01:47:18,719 --> 01:47:23,199
collate to understand what it means

2640
01:47:23,199 --> 01:47:26,480
it's possible it's it's uh the notion of

2641
01:47:26,480 --> 01:47:29,119
posting in the mail list

2642
01:47:29,119 --> 01:47:30,159
and then

2643
01:47:30,159 --> 01:47:32,000
for those who are participating in the

2644
01:47:32,000 --> 01:47:35,679
skim to solicit that feedback from

2645
01:47:35,679 --> 01:47:36,800
their

2646
01:47:36,800 --> 01:47:38,159
implementers

2647
01:47:38,159 --> 01:47:40,000
i call them deployment

2648
01:47:40,000 --> 01:47:43,600
or slash customers but yeah

2649
01:47:44,480 --> 01:47:45,679
just

2650
01:47:45,679 --> 01:47:47,520
from my perspective

2651
01:47:47,520 --> 01:47:49,760
i think if you go with

2652
01:47:49,760 --> 01:47:52,000
paging nobody's going to bother with

2653
01:47:52,000 --> 01:47:53,679
event signaling

2654
01:47:53,679 --> 01:47:54,880
it's it's

2655
01:47:54,880 --> 01:47:56,239
it's

2656
01:47:56,239 --> 01:47:59,199
it looks like it's easy

2657
01:47:59,199 --> 01:48:02,239
i tried to implement it

2658
01:48:02,239 --> 01:48:04,639
in a scalable way i've run into a number

2659
01:48:04,639 --> 01:48:06,560
of problems

2660
01:48:06,560 --> 01:48:08,960
all the research i have on databases say

2661
01:48:08,960 --> 01:48:09,760
that

2662
01:48:09,760 --> 01:48:10,880
cursor

2663
01:48:10,880 --> 01:48:13,040
cursors are for subsets of data not

2664
01:48:13,040 --> 01:48:14,639
whole sets of data

2665
01:48:14,639 --> 01:48:17,040
because you either end up locking all

2666
01:48:17,040 --> 01:48:19,119
the rows in your database if you've got

2667
01:48:19,119 --> 01:48:20,719
a billion entries in your database and

2668
01:48:20,719 --> 01:48:22,560
you're trying to lock all the rules

2669
01:48:22,560 --> 01:48:25,040
likely won't happen

2670
01:48:25,040 --> 01:48:27,679
and then the only other way is what some

2671
01:48:27,679 --> 01:48:30,080
servers do is they create a virtual copy

2672
01:48:30,080 --> 01:48:32,719
and they run out of virtual memory

2673
01:48:32,719 --> 01:48:34,400
which is a hard thing to do and a very

2674
01:48:34,400 --> 01:48:36,000
expensive thing to do and that's why

2675
01:48:36,000 --> 01:48:37,600
i've been saying

2676
01:48:37,600 --> 01:48:38,800
it's a

2677
01:48:38,800 --> 01:48:40,480
denial of service

2678
01:48:40,480 --> 01:48:42,239
problem that you will have to address

2679
01:48:42,239 --> 01:48:44,000
because

2680
01:48:44,000 --> 01:48:46,000
if the server runs out of memory that's

2681
01:48:46,000 --> 01:48:47,600
a great way for a hacker to shut you

2682
01:48:47,600 --> 01:48:48,719
down

2683
01:48:48,719 --> 01:48:50,639
uh that was a problem in ldap that i'd

2684
01:48:50,639 --> 01:48:52,960
like to keep out of skin

2685
01:48:52,960 --> 01:48:53,840
um

2686
01:48:53,840 --> 01:48:58,320
so all those caveats um i think

2687
01:48:58,320 --> 01:49:00,480
if we choose

2688
01:49:00,480 --> 01:49:01,920
multiple methods there has to be a

2689
01:49:01,920 --> 01:49:03,920
strong reason for paging to exist

2690
01:49:03,920 --> 01:49:05,360
outside of

2691
01:49:05,360 --> 01:49:08,960
uh coordinated replication otherwise

2692
01:49:08,960 --> 01:49:10,080
you're just going to have half the

2693
01:49:10,080 --> 01:49:11,760
community just one spec half the

2694
01:49:11,760 --> 01:49:13,440
community does another

2695
01:49:13,440 --> 01:49:15,040
and you won't have interoperability and

2696
01:49:15,040 --> 01:49:17,440
you'll end up either implementing both

2697
01:49:17,440 --> 01:49:18,400
um

2698
01:49:18,400 --> 01:49:20,880
and be frustrated by that so i'd rather

2699
01:49:20,880 --> 01:49:23,840
have one spec

2700
01:49:25,360 --> 01:49:27,679
that's why i post a question

2701
01:49:27,679 --> 01:49:28,880
right

2702
01:49:28,880 --> 01:49:31,119
does it seem like events in solving a

2703
01:49:31,119 --> 01:49:34,159
particular use case that is useful

2704
01:49:34,159 --> 01:49:36,560
and so for the implementers that have to

2705
01:49:36,560 --> 01:49:39,280
support all the use cases are they okay

2706
01:49:39,280 --> 01:49:40,560
supporting them

2707
01:49:40,560 --> 01:49:43,840
danny you were in the queue

2708
01:49:45,360 --> 01:49:48,080
hi uh danny's owner microsoft again

2709
01:49:48,080 --> 01:49:50,400
um

2710
01:49:50,800 --> 01:49:53,520
oh boy what was i gonna say um

2711
01:49:53,520 --> 01:49:56,400
um

2712
01:49:56,400 --> 01:49:57,599
um

2713
01:49:57,599 --> 01:49:59,199
okay so the

2714
01:49:59,199 --> 01:50:01,440
as i said before the the use case that i

2715
01:50:01,440 --> 01:50:03,520
see and like the reason why i think

2716
01:50:03,520 --> 01:50:04,400
uh

2717
01:50:04,400 --> 01:50:07,520
shared or the the the set skim

2718
01:50:07,520 --> 01:50:10,080
thing would still be adopted by some

2719
01:50:10,080 --> 01:50:11,199
people is

2720
01:50:11,199 --> 01:50:13,199
that very specific problem

2721
01:50:13,199 --> 01:50:14,159
of

2722
01:50:14,159 --> 01:50:16,080
a service provider needing to urgently

2723
01:50:16,080 --> 01:50:19,199
communicate something back to the client

2724
01:50:19,199 --> 01:50:20,560
um

2725
01:50:20,560 --> 01:50:21,679
i

2726
01:50:21,679 --> 01:50:24,560
can i can definitely see your concern of

2727
01:50:24,560 --> 01:50:26,560
if we go ahead with cursor-based

2728
01:50:26,560 --> 01:50:28,000
pagination

2729
01:50:28,000 --> 01:50:29,679
that and you know we'll say the

2730
01:50:29,679 --> 01:50:31,040
combination of cursor-based pagination

2731
01:50:31,040 --> 01:50:32,560
and delta query because they sort of

2732
01:50:32,560 --> 01:50:33,520
jointly

2733
01:50:33,520 --> 01:50:35,280
solve a lot of the like

2734
01:50:35,280 --> 01:50:37,679
large-scale problems

2735
01:50:37,679 --> 01:50:38,400
that

2736
01:50:38,400 --> 01:50:41,440
people would not necessarily implement

2737
01:50:41,440 --> 01:50:43,760
shared signals to do that instead

2738
01:50:43,760 --> 01:50:45,199
um

2739
01:50:45,199 --> 01:50:47,360
so not being able to speak you know

2740
01:50:47,360 --> 01:50:49,119
other than channeling matt peterson's

2741
01:50:49,119 --> 01:50:51,199
words for instance on the ease of

2742
01:50:51,199 --> 01:50:53,040
implementation uh of one versus the

2743
01:50:53,040 --> 01:50:54,480
other you know like the database and

2744
01:50:54,480 --> 01:50:56,239
blocking memory and all that

2745
01:50:56,239 --> 01:50:57,440
um

2746
01:50:57,440 --> 01:51:00,000
i i suspect that the majority probably

2747
01:51:00,000 --> 01:51:01,920
would go with the cursor-based

2748
01:51:01,920 --> 01:51:04,400
pagination and delta query unless they

2749
01:51:04,400 --> 01:51:06,480
were operating uh more as a source

2750
01:51:06,480 --> 01:51:08,800
rather than a recipient of data uh it's

2751
01:51:08,800 --> 01:51:11,599
still in a pool model so you know

2752
01:51:11,599 --> 01:51:13,360
hr provider problem needs to tell

2753
01:51:13,360 --> 01:51:16,080
somebody that a user was terminated

2754
01:51:16,080 --> 01:51:19,040
um like i i've always

2755
01:51:19,040 --> 01:51:20,639
like i've had trouble following in the

2756
01:51:20,639 --> 01:51:23,040
email threads at first just because the

2757
01:51:23,040 --> 01:51:24,320
i think the use cases that i've seen you

2758
01:51:24,320 --> 01:51:25,760
envision phil for

2759
01:51:25,760 --> 01:51:27,360
uh share it for the shared signals have

2760
01:51:27,360 --> 01:51:29,280
been much wider than we originally um

2761
01:51:29,280 --> 01:51:30,960
you know speaking for on behalf of my

2762
01:51:30,960 --> 01:51:32,320
colleagues at microsoft

2763
01:51:32,320 --> 01:51:36,480
that we had envisioned ourselves

2764
01:51:39,440 --> 01:51:43,879
oh one thing you're in the queue

2765
01:51:52,880 --> 01:51:55,599
oh now we can we can hear you but uh if

2766
01:51:55,599 --> 01:51:57,119
you can speak a little louder would be

2767
01:51:57,119 --> 01:51:58,400
great

2768
01:51:58,400 --> 01:52:00,960
uh okay uh

2769
01:52:00,960 --> 01:52:04,480
let me see can you feel me better now

2770
01:52:04,480 --> 01:52:06,480
yeah we can hear you fine now

2771
01:52:06,480 --> 01:52:09,360
okay so basically uh we are doing a lot

2772
01:52:09,360 --> 01:52:11,199
of integrations with certainly the

2773
01:52:11,199 --> 01:52:13,520
turkey sources and without other hr

2774
01:52:13,520 --> 01:52:14,560
systems

2775
01:52:14,560 --> 01:52:16,800
i think our experience at least for my

2776
01:52:16,800 --> 01:52:19,360
uh visibility is that

2777
01:52:19,360 --> 01:52:20,480
uh

2778
01:52:20,480 --> 01:52:22,239
we integrate basically start large

2779
01:52:22,239 --> 01:52:24,400
system a small system as well

2780
01:52:24,400 --> 01:52:27,280
so my my feeling is for one

2781
01:52:27,280 --> 01:52:30,480
uh probably all the included

2782
01:52:30,480 --> 01:52:32,480
usually start with a

2783
01:52:32,480 --> 01:52:33,920
search for platinum means we call the

2784
01:52:33,920 --> 01:52:35,679
plague nation because that has other use

2785
01:52:35,679 --> 01:52:37,840
cases like certain use cases

2786
01:52:37,840 --> 01:52:40,080
usually they start with that with that

2787
01:52:40,080 --> 01:52:42,840
and just publish that api rather than in

2788
01:52:42,840 --> 01:52:45,440
systems and we start from the usually

2789
01:52:45,440 --> 01:52:47,360
exclusive interfaces that we integrate

2790
01:52:47,360 --> 01:52:50,239
with them but later on if they do see

2791
01:52:50,239 --> 01:52:52,159
use cases for the event when they're

2792
01:52:52,159 --> 01:52:54,080
running stability issues they start to

2793
01:52:54,080 --> 01:52:55,360
publish those

2794
01:52:55,360 --> 01:52:57,520
data changes that sounds like that you

2795
01:52:57,520 --> 01:52:59,520
uh like for some real-time notifications

2796
01:52:59,520 --> 01:53:01,520
through your channel right

2797
01:53:01,520 --> 01:53:02,320
uh

2798
01:53:02,320 --> 01:53:05,920
so so i i feel that i'm not sure as a as

2799
01:53:05,920 --> 01:53:07,360
a standard or community do we want to

2800
01:53:07,360 --> 01:53:09,199
give people choices

2801
01:53:09,199 --> 01:53:10,800
because in reality people always start

2802
01:53:10,800 --> 01:53:12,239
with like a

2803
01:53:12,239 --> 01:53:13,920
curse of purging and the late army's

2804
01:53:13,920 --> 01:53:14,960
unions

2805
01:53:14,960 --> 01:53:17,040
right that looks like a common pattern i

2806
01:53:17,040 --> 01:53:18,480
run into what i did with all the

2807
01:53:18,480 --> 01:53:20,960
integrations of like my country theology

2808
01:53:20,960 --> 01:53:23,280
integrations that's just that's a common

2809
01:53:23,280 --> 01:53:25,520
reality i'm sure the community as a

2810
01:53:25,520 --> 01:53:27,119
standard body do we want to force a

2811
01:53:27,119 --> 01:53:29,119
particular solution more geared towards

2812
01:53:29,119 --> 01:53:30,880
the large systems or do we want to give

2813
01:53:30,880 --> 01:53:33,520
people choices that's one the second

2814
01:53:33,520 --> 01:53:35,920
question is that um like like i said

2815
01:53:35,920 --> 01:53:38,960
they usually uh start with uh with a

2816
01:53:38,960 --> 01:53:40,480
search-based or cursed based approach

2817
01:53:40,480 --> 01:53:42,400
and later on their ad events channels or

2818
01:53:42,400 --> 01:53:44,080
when they run to escape issues or when

2819
01:53:44,080 --> 01:53:45,440
they really require real-time

2820
01:53:45,440 --> 01:53:48,239
notifications in terms of mechanisms or

2821
01:53:48,239 --> 01:53:51,679
events usually there could be like a

2822
01:53:51,679 --> 01:53:54,400
like a published pub sub systems or they

2823
01:53:54,400 --> 01:53:55,840
could use uh

2824
01:53:55,840 --> 01:53:57,920
uh like uh uh human hooks

2825
01:53:57,920 --> 01:54:00,480
to notify us on you know you demand like

2826
01:54:00,480 --> 01:54:02,400
hr systems to notify a termination or

2827
01:54:02,400 --> 01:54:04,560
something like that using your time with

2828
01:54:04,560 --> 01:54:07,760
even hooks so uh those that clapping we

2829
01:54:07,760 --> 01:54:10,719
saw just share some of the experiences

2830
01:54:10,719 --> 01:54:13,599
we had here so

2831
01:54:18,560 --> 01:54:21,360
thanks quentin

2832
01:54:21,679 --> 01:54:23,520
in essence that's the question i posed

2833
01:54:23,520 --> 01:54:24,800
earlier

2834
01:54:24,800 --> 01:54:27,280
right in the survey to the implementers

2835
01:54:27,280 --> 01:54:28,960
right

2836
01:54:28,960 --> 01:54:32,000
um the other suggestion i might make um

2837
01:54:32,000 --> 01:54:34,239
and that goes to

2838
01:54:34,239 --> 01:54:37,199
phil danny and and to matt when he comes

2839
01:54:37,199 --> 01:54:38,560
back is

2840
01:54:38,560 --> 01:54:40,320
um

2841
01:54:40,320 --> 01:54:42,960
the comparison chart that phil started

2842
01:54:42,960 --> 01:54:45,679
is a really good way for us to provide

2843
01:54:45,679 --> 01:54:47,599
that succinct

2844
01:54:47,599 --> 01:54:49,840
data if you will and so i'd encourage

2845
01:54:49,840 --> 01:54:51,679
you to

2846
01:54:51,679 --> 01:54:55,440
to do an update to it um based on

2847
01:54:55,440 --> 01:54:57,920
danny your yours and matt's feedback and

2848
01:54:57,920 --> 01:54:59,840
alignment and then

2849
01:54:59,840 --> 01:55:01,760
we can bring it back to discussion

2850
01:55:01,760 --> 01:55:04,880
because i i don't know that we we have

2851
01:55:04,880 --> 01:55:07,360
the answers that we need now to get us

2852
01:55:07,360 --> 01:55:10,320
to a path forward

2853
01:55:13,920 --> 01:55:16,920
any

2854
01:55:19,679 --> 01:55:20,960
ah

2855
01:55:20,960 --> 01:55:22,000
okay

2856
01:55:22,000 --> 01:55:24,480
so when ting the note takers are

2857
01:55:24,480 --> 01:55:26,320
requesting that you look at the hedge

2858
01:55:26,320 --> 01:55:29,119
stock document to make sure that

2859
01:55:29,119 --> 01:55:32,639
they have appropriately captured

2860
01:55:32,639 --> 01:55:35,760
the points that you wanted to raise

2861
01:55:35,760 --> 01:55:38,239
uh second i will take a look and another

2862
01:55:38,239 --> 01:55:39,920
point i want to

2863
01:55:39,920 --> 01:55:41,840
mention is that also we run two cases

2864
01:55:41,840 --> 01:55:44,000
where we have to do a

2865
01:55:44,000 --> 01:55:47,199
full like full import like export import

2866
01:55:47,199 --> 01:55:49,679
in order to verify some kind of fix some

2867
01:55:49,679 --> 01:55:52,560
issues on the data stream in the young

2868
01:55:52,560 --> 01:55:54,400
channels we run into some of the issues

2869
01:55:54,400 --> 01:55:57,520
where in the data that like a delta

2870
01:55:57,520 --> 01:55:59,040
changes that we just on the youtube

2871
01:55:59,040 --> 01:56:00,960
channel sometimes we're going to issues

2872
01:56:00,960 --> 01:56:03,280
cannot be resolved we have to resort to

2873
01:56:03,280 --> 01:56:05,840
the back to the full import or resolve

2874
01:56:05,840 --> 01:56:07,440
some of the bugs or issues of your

2875
01:56:07,440 --> 01:56:09,759
channel

2876
01:56:12,800 --> 01:56:14,719
you got two thumbs up from danny in case

2877
01:56:14,719 --> 01:56:17,520
you didn't see that one

2878
01:56:21,280 --> 01:56:23,040
any certain comments

2879
01:56:23,040 --> 01:56:25,360
any other comments or feedback on this

2880
01:56:25,360 --> 01:56:28,360
topic

2881
01:56:29,119 --> 01:56:31,760
oh danny's getting up

2882
01:56:31,760 --> 01:56:34,560
uh one final thing this is actually a

2883
01:56:34,560 --> 01:56:36,159
thought from matt peterson when we were

2884
01:56:36,159 --> 01:56:38,080
discussing this earlier this week

2885
01:56:38,080 --> 01:56:40,880
uh is that i i think we look at

2886
01:56:40,880 --> 01:56:44,400
the uh of the capabilities provided by

2887
01:56:44,400 --> 01:56:46,960
the events draft as

2888
01:56:46,960 --> 01:56:50,320
an a potential optimization to things

2889
01:56:50,320 --> 01:56:52,400
like change detection and

2890
01:56:52,400 --> 01:56:53,520
uh

2891
01:56:53,520 --> 01:56:57,840
and whatnot versus a replacement to it

2892
01:57:00,320 --> 01:57:01,760
okay given that we only have three

2893
01:57:01,760 --> 01:57:05,119
minutes left i will uh

2894
01:57:05,119 --> 01:57:08,840
close this topic and do a

2895
01:57:08,840 --> 01:57:12,880
quick chairs update

2896
01:57:13,360 --> 01:57:16,239
we are behind on our milestones

2897
01:57:16,239 --> 01:57:17,840
the chairs do need to update the

2898
01:57:17,840 --> 01:57:19,040
milestones

2899
01:57:19,040 --> 01:57:22,080
and pam i think when you put the use

2900
01:57:22,080 --> 01:57:25,599
cases aaron and i can come back and

2901
01:57:25,599 --> 01:57:27,360
give you a swag on

2902
01:57:27,360 --> 01:57:29,119
when we can

2903
01:57:29,119 --> 01:57:30,880
have you target

2904
01:57:30,880 --> 01:57:33,679
to a working group last call

2905
01:57:33,679 --> 01:57:35,679
it may be a living document because of

2906
01:57:35,679 --> 01:57:37,679
this use cases and we're still teasing

2907
01:57:37,679 --> 01:57:39,679
out requirements

2908
01:57:39,679 --> 01:57:41,199
it may be a question that we put to the

2909
01:57:41,199 --> 01:57:44,320
mail list of just deferring publication

2910
01:57:44,320 --> 01:57:46,320
of that until

2911
01:57:46,320 --> 01:57:49,040
we believe we've agreed on all of the

2912
01:57:49,040 --> 01:57:51,360
use cases meaning we can continue to

2913
01:57:51,360 --> 01:57:53,199
work on the extensions that we need

2914
01:57:53,199 --> 01:57:55,679
protocol and schema okay

2915
01:57:55,679 --> 01:57:57,920
so that's number one so that one we may

2916
01:57:57,920 --> 01:58:00,239
stretch out on the milestones

2917
01:58:00,239 --> 01:58:01,679
um

2918
01:58:01,679 --> 01:58:05,520
we had said that we would publish

2919
01:58:05,520 --> 01:58:08,159
a protocol and the schemas given the

2920
01:58:08,159 --> 01:58:09,920
discussions and the way we're moving

2921
01:58:09,920 --> 01:58:11,440
forward

2922
01:58:11,440 --> 01:58:15,280
i see the path of a lot of drafts so we

2923
01:58:15,280 --> 01:58:17,440
can take that up in discussion in the

2924
01:58:17,440 --> 01:58:20,400
mail list of whether there is

2925
01:58:20,400 --> 01:58:21,280
one

2926
01:58:21,280 --> 01:58:22,159
or

2927
01:58:22,159 --> 01:58:23,440
several

2928
01:58:23,440 --> 01:58:25,119
um

2929
01:58:25,119 --> 01:58:26,880
that said

2930
01:58:26,880 --> 01:58:29,599
we cannot update those milestones

2931
01:58:29,599 --> 01:58:32,000
until we we have that discussion so for

2932
01:58:32,000 --> 01:58:35,520
that we need a couple drafts and

2933
01:58:35,520 --> 01:58:37,520
i believe danny you've submitted one of

2934
01:58:37,520 --> 01:58:40,159
them for the roles and entitlement

2935
01:58:40,159 --> 01:58:41,199
um

2936
01:58:41,199 --> 01:58:43,679
so if you can just as the author you can

2937
01:58:43,679 --> 01:58:45,360
post on the mail list and request

2938
01:58:45,360 --> 01:58:46,800
feedback

2939
01:58:46,800 --> 01:58:49,599
and comments um

2940
01:58:49,599 --> 01:58:53,360
for the chairs we look for at least

2941
01:58:53,360 --> 01:58:56,159
three individuals who are not authors of

2942
01:58:56,159 --> 01:58:57,599
the draft

2943
01:58:57,599 --> 01:59:00,880
to provide any feedback uh well

2944
01:59:00,880 --> 01:59:03,040
let me rephrase constructive feedback

2945
01:59:03,040 --> 01:59:05,360
either positive or

2946
01:59:05,360 --> 01:59:06,880
not

2947
01:59:06,880 --> 01:59:09,679
for whether this draft should be

2948
01:59:09,679 --> 01:59:11,440
considered to be

2949
01:59:11,440 --> 01:59:13,679
well i believe the comments so far the

2950
01:59:13,679 --> 01:59:16,880
drafts are considered to be in scope

2951
01:59:16,880 --> 01:59:20,560
but more of whether it can serve as a

2952
01:59:20,560 --> 01:59:23,119
seed a starting point

2953
01:59:23,119 --> 01:59:26,239
for us to move forward and progress on a

2954
01:59:26,239 --> 01:59:27,679
particular topic

2955
01:59:27,679 --> 01:59:29,119
okay

2956
01:59:29,119 --> 01:59:33,199
um so i think with that

2957
01:59:33,199 --> 01:59:34,560
i may just

2958
01:59:34,560 --> 01:59:37,040
adjourn us unless somebody really has

2959
01:59:37,040 --> 01:59:39,599
anything burning they want to say in the

2960
01:59:39,599 --> 01:59:42,639
last 30 seconds

2961
01:59:42,639 --> 01:59:43,840
going once

2962
01:59:43,840 --> 01:59:45,520
going twice

2963
01:59:45,520 --> 01:59:47,199
all right thank you all for

2964
01:59:47,199 --> 01:59:49,280
participating both remotely and in

2965
01:59:49,280 --> 01:59:50,560
person

2966
01:59:50,560 --> 01:59:54,880
it's been a good ietf 114 um

2967
01:59:54,880 --> 01:59:55,679
we

2968
01:59:55,679 --> 01:59:58,560
will try and schedule

2969
01:59:58,560 --> 02:00:01,199
an interim

2970
02:00:01,199 --> 02:00:03,599
likely in september i think is what we

2971
02:00:03,599 --> 02:00:06,080
were discussing so um

2972
02:00:06,080 --> 02:00:08,320
we'll put out a doodle poll to pick a

2973
02:00:08,320 --> 02:00:09,599
day

2974
02:00:09,599 --> 02:00:11,760
and then from there

2975
02:00:11,760 --> 02:00:13,360
post that interim

2976
02:00:13,360 --> 02:00:16,560
we hope to see you in ietf 115

2977
02:00:16,560 --> 02:00:19,760
either remotely or in london

2978
02:00:19,760 --> 02:00:23,159
thank you everyone

2979
02:00:30,480 --> 02:00:33,759
thank you to the notetakers

2980
02:00:35,040 --> 02:00:37,119
pam

2981
02:00:37,119 --> 02:00:41,799
pam you are incredibly awesome

2982
02:00:45,920 --> 02:00:48,320
no i i like i mean

2983
02:00:48,320 --> 02:00:50,239
for me as a chair to go back and say

2984
02:00:50,239 --> 02:00:53,559
what is

2985
02:01:10,239 --> 02:01:14,119
and i did fix

2986
02:01:39,520 --> 02:01:42,520
um

2987
02:02:08,159 --> 02:02:11,159
oh

2988
02:02:23,360 --> 02:02:26,360
okay

2989
02:02:42,159 --> 02:02:45,400
thank you

2990
02:02:54,960 --> 02:02:57,960
um

2991
02:03:15,679 --> 02:03:18,679
okay

