1
00:00:12,000 --> 00:00:15,000
right

2
00:00:29,279 --> 00:00:32,278
yes

3
00:00:45,920 --> 00:00:48,920
is

4
00:01:01,280 --> 00:01:04,280
uh

5
00:01:12,479 --> 00:01:16,679
but that is better for us

6
00:01:31,280 --> 00:01:34,280
yes

7
00:01:44,320 --> 00:01:47,320
okay

8
00:02:02,159 --> 00:02:05,159
yep

9
00:02:16,239 --> 00:02:18,640
all right folks

10
00:02:18,640 --> 00:02:19,599
um

11
00:02:19,599 --> 00:02:21,520
it's time to get going

12
00:02:21,520 --> 00:02:22,959
this is

13
00:02:22,959 --> 00:02:24,239
kinap

14
00:02:24,239 --> 00:02:27,840
at itf 114

15
00:02:28,000 --> 00:02:29,599
welcome

16
00:02:29,599 --> 00:02:31,440
so we have um

17
00:02:31,440 --> 00:02:34,080
we have basically a big status update

18
00:02:34,080 --> 00:02:36,640
and walk through of your shoes today so

19
00:02:36,640 --> 00:02:38,480
we're gonna get to the

20
00:02:38,480 --> 00:02:40,720
meet here but let's just sort of quickly

21
00:02:40,720 --> 00:02:43,200
remind everybody about the note well

22
00:02:43,200 --> 00:02:45,120
and about the itef code of contact which

23
00:02:45,120 --> 00:02:46,560
we actually didn't put on a slide but

24
00:02:46,560 --> 00:02:48,400
you've seen it many times this week so

25
00:02:48,400 --> 00:02:50,959
you know you know what it is and also it

26
00:02:50,959 --> 00:02:52,400
does involve

27
00:02:52,400 --> 00:02:55,200
masking up which i will not demonstrate

28
00:02:55,200 --> 00:02:57,679
here we go

29
00:02:57,920 --> 00:02:58,720
so

30
00:02:58,720 --> 00:03:01,040
hello

31
00:03:01,920 --> 00:03:05,120
unless you're um unless you're a

32
00:03:05,120 --> 00:03:08,000
presenter and then you can

33
00:03:08,000 --> 00:03:09,760
do as you please

34
00:03:09,760 --> 00:03:11,360
the microphones work reasonably well

35
00:03:11,360 --> 00:03:13,680
with masks so it really doesn't matter

36
00:03:13,680 --> 00:03:16,000
that much all right

37
00:03:16,000 --> 00:03:18,480
what are we doing next uh it's um i

38
00:03:18,480 --> 00:03:19,440
think

39
00:03:19,440 --> 00:03:21,440
yeah we need to and we

40
00:03:21,440 --> 00:03:23,200
it would be great if we can get somebody

41
00:03:23,200 --> 00:03:26,159
to keep an eye on um

42
00:03:26,159 --> 00:03:28,080
or on the chat room as you know

43
00:03:28,080 --> 00:03:31,120
zootopia's mirroring into the meat deco

44
00:03:31,120 --> 00:03:32,720
if somebody could keep an eye on it and

45
00:03:32,720 --> 00:03:34,720
see if it's something new channeling but

46
00:03:34,720 --> 00:03:36,080
we do need

47
00:03:36,080 --> 00:03:38,480
a minute taker preferably to work

48
00:03:38,480 --> 00:03:41,360
directly into the minute taking tool so

49
00:03:41,360 --> 00:03:44,239
do we have any volunteers

50
00:03:44,239 --> 00:03:47,840
volunteers for minute taking

51
00:03:54,400 --> 00:03:57,760
yes no yes no volunteers who mean it

52
00:03:57,760 --> 00:04:00,239
taking

53
00:04:00,239 --> 00:04:01,360
no

54
00:04:01,360 --> 00:04:04,159
nobody feels oh i mean

55
00:04:04,159 --> 00:04:05,760
i think we can

56
00:04:05,760 --> 00:04:08,560
worst case we can deal with that i think

57
00:04:08,560 --> 00:04:10,319
because there isn't all that much

58
00:04:10,319 --> 00:04:12,000
probably to to

59
00:04:12,000 --> 00:04:15,280
a minute this this time around so

60
00:04:15,280 --> 00:04:16,160
um

61
00:04:16,160 --> 00:04:20,880
so we have um the editing team um

62
00:04:20,880 --> 00:04:22,560
justin is remote

63
00:04:22,560 --> 00:04:23,600
um

64
00:04:23,600 --> 00:04:26,240
he he did say that oh he is actually

65
00:04:26,240 --> 00:04:29,759
here um so i'm going to turn it over to

66
00:04:29,759 --> 00:04:32,240
justin and aaron i think aaron is going

67
00:04:32,240 --> 00:04:34,479
to be the one standing at the

68
00:04:34,479 --> 00:04:35,919
upfront here and walking us through

69
00:04:35,919 --> 00:04:38,160
what's happened with the core documents

70
00:04:38,160 --> 00:04:40,880
since last time

71
00:04:41,040 --> 00:04:42,880
and there's justin

72
00:04:42,880 --> 00:04:45,680
in full color

73
00:04:46,479 --> 00:04:50,400
and then we let's just flip the

74
00:04:51,040 --> 00:04:54,040
slides

75
00:05:03,360 --> 00:05:04,479
yeah

76
00:05:04,479 --> 00:05:08,120
so if you just

77
00:05:20,160 --> 00:05:24,520
no we're just getting this light up here

78
00:05:27,840 --> 00:05:29,280
all right

79
00:05:29,280 --> 00:05:32,799
i think if i do this

80
00:05:33,120 --> 00:05:36,400
oh wait you got it right

81
00:05:36,400 --> 00:05:39,120
nothing changed

82
00:05:39,120 --> 00:05:40,639
yeah

83
00:05:40,639 --> 00:05:41,919
if you

84
00:05:41,919 --> 00:05:44,479
right hot if you hover on the arrow

85
00:05:44,479 --> 00:05:46,720
from that list if you hover on that

86
00:05:46,720 --> 00:05:48,880
you think you go to that thing

87
00:05:48,880 --> 00:05:50,639
then the right

88
00:05:50,639 --> 00:05:53,840
there you go

89
00:05:55,680 --> 00:05:57,600
okay the mechanics of slide sharing

90
00:05:57,600 --> 00:05:59,919
sorted

91
00:05:59,919 --> 00:06:00,960
okay

92
00:06:00,960 --> 00:06:01,840
um

93
00:06:01,840 --> 00:06:04,560
yes i'm aaron parecki gonna go through

94
00:06:04,560 --> 00:06:05,759
some of the slides here and i think

95
00:06:05,759 --> 00:06:07,840
justin's going to cover for me for

96
00:06:07,840 --> 00:06:09,680
some parts of it as well

97
00:06:09,680 --> 00:06:12,960
and i'm going to give you an update

98
00:06:12,960 --> 00:06:14,160
sorry

99
00:06:14,160 --> 00:06:15,919
now i have it

100
00:06:15,919 --> 00:06:18,000
yes it works

101
00:06:18,000 --> 00:06:21,120
um the rough agenda for the session is

102
00:06:21,120 --> 00:06:23,039
um we have some updates to share about

103
00:06:23,039 --> 00:06:25,360
the various uh the two documents

104
00:06:25,360 --> 00:06:27,199
that are part of the uh

105
00:06:27,199 --> 00:06:28,960
the group right now

106
00:06:28,960 --> 00:06:30,080
and

107
00:06:30,080 --> 00:06:31,759
i'm gonna go over some of the changes

108
00:06:31,759 --> 00:06:33,680
what they mean

109
00:06:33,680 --> 00:06:35,600
share kind of details on on what's

110
00:06:35,600 --> 00:06:37,199
happened with that and then also talk

111
00:06:37,199 --> 00:06:40,080
about some of the

112
00:06:40,080 --> 00:06:41,840
stuff that we are planning in the future

113
00:06:41,840 --> 00:06:43,600
and i think we've identified a couple

114
00:06:43,600 --> 00:06:45,759
issues that maybe we can talk about here

115
00:06:45,759 --> 00:06:48,800
as well

116
00:06:48,800 --> 00:06:50,560
so the um

117
00:06:50,560 --> 00:06:52,960
the full dip links are on the slides

118
00:06:52,960 --> 00:06:54,880
they're clickable if you are on the pdf

119
00:06:54,880 --> 00:06:56,560
from the

120
00:06:56,560 --> 00:06:58,080
meeting materials

121
00:06:58,080 --> 00:07:00,319
um and we're going to go over

122
00:07:00,319 --> 00:07:02,080
the the changes here so there's two

123
00:07:02,080 --> 00:07:03,520
drafts there's the core protocol that

124
00:07:03,520 --> 00:07:05,680
talks about client authorization server

125
00:07:05,680 --> 00:07:07,919
communication and there's uh the second

126
00:07:07,919 --> 00:07:09,360
draft is the resource server draft that

127
00:07:09,360 --> 00:07:12,240
talks about resource servers um

128
00:07:12,240 --> 00:07:13,680
validating

129
00:07:13,680 --> 00:07:15,360
requests coming in and what they need to

130
00:07:15,360 --> 00:07:17,280
do to to deal with that

131
00:07:17,280 --> 00:07:18,080
um

132
00:07:18,080 --> 00:07:20,319
most of the work that has been done has

133
00:07:20,319 --> 00:07:21,599
been on the core

134
00:07:21,599 --> 00:07:24,639
document still there's been only some

135
00:07:24,639 --> 00:07:26,080
minor changes to the resource server

136
00:07:26,080 --> 00:07:27,759
draft so that's the big to do item in

137
00:07:27,759 --> 00:07:30,919
the future

138
00:07:32,000 --> 00:07:33,919
we've been working on github so if you

139
00:07:33,919 --> 00:07:36,639
are if you want to see the details of

140
00:07:36,639 --> 00:07:38,560
all of the

141
00:07:38,560 --> 00:07:40,720
changes they're very very uh

142
00:07:40,720 --> 00:07:43,280
meticulously documented on github which

143
00:07:43,280 --> 00:07:46,960
i appreciate and you can go find the

144
00:07:46,960 --> 00:07:48,319
pull requests that have emerged along

145
00:07:48,319 --> 00:07:49,440
with the discussions that have happened

146
00:07:49,440 --> 00:07:51,039
there

147
00:07:51,039 --> 00:07:52,879
and we've been trying to do a good job

148
00:07:52,879 --> 00:07:54,639
of making sure every change goes into a

149
00:07:54,639 --> 00:07:56,240
pr that gets tagged

150
00:07:56,240 --> 00:07:57,280
and

151
00:07:57,280 --> 00:07:59,440
tagged properly and now you can see them

152
00:07:59,440 --> 00:08:02,800
all by clicking these links

153
00:08:03,840 --> 00:08:05,280
the uh

154
00:08:05,280 --> 00:08:08,319
the changes that we've done on the core

155
00:08:08,319 --> 00:08:10,800
uh document have closed 40 of the open

156
00:08:10,800 --> 00:08:12,560
issues which

157
00:08:12,560 --> 00:08:14,639
is a very good number

158
00:08:14,639 --> 00:08:18,000
it's i think that's one of the largest

159
00:08:18,000 --> 00:08:19,599
numbers we've been able to deal with

160
00:08:19,599 --> 00:08:22,080
between meetings so that's great a lot

161
00:08:22,080 --> 00:08:24,400
of good progress there and then

162
00:08:24,400 --> 00:08:26,400
unfortunately none of the issues on the

163
00:08:26,400 --> 00:08:28,479
resources were draft have been closed

164
00:08:28,479 --> 00:08:30,160
from the changes so it was just other

165
00:08:30,160 --> 00:08:32,479
things that were um

166
00:08:32,479 --> 00:08:34,958
that were changed

167
00:08:34,958 --> 00:08:37,679
so the uh changes that we've grouped

168
00:08:37,679 --> 00:08:39,200
them into

169
00:08:39,200 --> 00:08:41,200
uh editorial versus actual functional

170
00:08:41,200 --> 00:08:43,679
changes so all of these are links to

171
00:08:43,679 --> 00:08:45,279
issues on github again if you're curious

172
00:08:45,279 --> 00:08:48,399
about the actual text behind these uh

173
00:08:48,399 --> 00:08:51,360
behind these changes in the draft

174
00:08:51,360 --> 00:08:53,200
the um

175
00:08:53,200 --> 00:08:54,720
so there's

176
00:08:54,720 --> 00:08:56,800
text consistency just means that we

177
00:08:56,800 --> 00:08:58,240
found some

178
00:08:58,240 --> 00:09:00,160
inconsistencies with the text in the

179
00:09:00,160 --> 00:09:02,480
spec which have been corrected so they

180
00:09:02,480 --> 00:09:04,080
are now um

181
00:09:04,080 --> 00:09:05,440
better describe what they're talking

182
00:09:05,440 --> 00:09:06,240
about

183
00:09:06,240 --> 00:09:09,600
and um editorial is things that you know

184
00:09:09,600 --> 00:09:10,880
don't have any functional changes but

185
00:09:10,880 --> 00:09:12,560
are otherwise maybe more significant

186
00:09:12,560 --> 00:09:14,720
changes and that release number 10 is

187
00:09:14,720 --> 00:09:16,800
just the mechanics of doing the release

188
00:09:16,800 --> 00:09:20,560
so i think we're going to go into

189
00:09:20,560 --> 00:09:23,600
uh some of these in detail yeah

190
00:09:23,600 --> 00:09:25,040
um

191
00:09:25,040 --> 00:09:28,640
we now have fancy diagrams in svg which

192
00:09:28,640 --> 00:09:29,680
is the new

193
00:09:29,680 --> 00:09:31,760
way to do diagrams in these rfc's we

194
00:09:31,760 --> 00:09:34,800
have the ability to publish svg now um

195
00:09:34,800 --> 00:09:35,920
one of the cool things about this is

196
00:09:35,920 --> 00:09:37,680
it's actually generated from the ascii

197
00:09:37,680 --> 00:09:40,480
art source so kind of cool

198
00:09:40,480 --> 00:09:42,240
um which also means it has a nice

199
00:09:42,240 --> 00:09:44,480
fallback to if this is represented in

200
00:09:44,480 --> 00:09:45,600
ascii

201
00:09:45,600 --> 00:09:45,870
um

202
00:09:45,870 --> 00:09:47,519
[Music]

203
00:09:47,519 --> 00:09:48,240
the

204
00:09:48,240 --> 00:09:49,200
uh

205
00:09:49,200 --> 00:09:51,040
there's been some changes on the on the

206
00:09:51,040 --> 00:09:53,760
idea of future proofing for new jose

207
00:09:53,760 --> 00:09:55,920
signature methods and that was again

208
00:09:55,920 --> 00:09:58,320
we're not trying to like lock it down to

209
00:09:58,320 --> 00:10:00,000
the current snapshot so we want to make

210
00:10:00,000 --> 00:10:01,760
sure that it is

211
00:10:01,760 --> 00:10:04,480
future proof and when new

212
00:10:04,480 --> 00:10:07,600
mechanisms come in they are usable here

213
00:10:07,600 --> 00:10:08,880
um

214
00:10:08,880 --> 00:10:11,360
there's some changes around

215
00:10:11,360 --> 00:10:12,800
the

216
00:10:12,800 --> 00:10:16,720
uh the rights for apis of like what what

217
00:10:16,720 --> 00:10:18,800
what it means when the client is asking

218
00:10:18,800 --> 00:10:20,800
for access to a thing about whether

219
00:10:20,800 --> 00:10:23,920
that's a string or an object and um

220
00:10:23,920 --> 00:10:25,519
some discussion on

221
00:10:25,519 --> 00:10:27,519
resource owner policies which i think

222
00:10:27,519 --> 00:10:28,800
address a couple of issues

223
00:10:28,800 --> 00:10:30,880
simultaneously

224
00:10:30,880 --> 00:10:33,839
um there's also a new um

225
00:10:33,839 --> 00:10:35,600
paper from florian

226
00:10:35,600 --> 00:10:38,000
with a very detailed 125 pages of

227
00:10:38,000 --> 00:10:40,320
security analysis of the protocol

228
00:10:40,320 --> 00:10:42,160
that was a thesis paper so

229
00:10:42,160 --> 00:10:45,360
congratulations on publishing that and

230
00:10:45,360 --> 00:10:47,040
thank you for doing that also and

231
00:10:47,040 --> 00:10:48,959
there's now an acknowledgement in the in

232
00:10:48,959 --> 00:10:51,440
the spec that mentions that as well

233
00:10:51,440 --> 00:10:53,680
um the

234
00:10:53,680 --> 00:10:57,200
tldr i guess is that there's um

235
00:10:57,200 --> 00:10:58,720
mitigations for many of the security

236
00:10:58,720 --> 00:11:00,560
issues that were identified have been

237
00:11:00,560 --> 00:11:02,560
mentioned in the spec already which is

238
00:11:02,560 --> 00:11:03,600
good

239
00:11:03,600 --> 00:11:05,839
but there will need to be more analysis

240
00:11:05,839 --> 00:11:07,839
done if an app is ever used as an

241
00:11:07,839 --> 00:11:10,480
identity protocol so

242
00:11:10,480 --> 00:11:12,160
that is um

243
00:11:12,160 --> 00:11:13,600
yeah thanks for doing that it's a lot a

244
00:11:13,600 --> 00:11:15,200
lot of reading i'm sure and a lot of

245
00:11:15,200 --> 00:11:16,880
writing

246
00:11:16,880 --> 00:11:19,519
okay on to the more

247
00:11:19,519 --> 00:11:20,640
functional

248
00:11:20,640 --> 00:11:22,720
changes things that actually change

249
00:11:22,720 --> 00:11:25,680
behaviors of any implementations

250
00:11:25,680 --> 00:11:26,880
um

251
00:11:26,880 --> 00:11:31,200
there is a uh so 415 is the i think the

252
00:11:31,200 --> 00:11:33,920
only security related thing uh

253
00:11:33,920 --> 00:11:35,600
that describes this idea of a session

254
00:11:35,600 --> 00:11:36,720
attack

255
00:11:36,720 --> 00:11:39,120
and a consideration for it

256
00:11:39,120 --> 00:11:40,959
a couple of the syntax changes are

257
00:11:40,959 --> 00:11:43,440
really nitpicky things about just like

258
00:11:43,440 --> 00:11:45,600
it would be nicer if we didn't have such

259
00:11:45,600 --> 00:11:47,040
a verbose

260
00:11:47,040 --> 00:11:49,279
object structure for such and such

261
00:11:49,279 --> 00:11:50,639
um

262
00:11:50,639 --> 00:11:53,200
there is one feature that has dropped

263
00:11:53,200 --> 00:11:54,880
and dropped and this has kind of been a

264
00:11:54,880 --> 00:11:56,880
theme is been removing

265
00:11:56,880 --> 00:11:58,160
things that

266
00:11:58,160 --> 00:11:59,600
don't haven't had a lot of interest

267
00:11:59,600 --> 00:12:02,000
expressed in it there's

268
00:12:02,000 --> 00:12:03,760
there was a lot of

269
00:12:03,760 --> 00:12:06,639
things in the uh in the

270
00:12:06,639 --> 00:12:08,639
uh in the course back i guess or at

271
00:12:08,639 --> 00:12:10,000
least in the the mentions of

272
00:12:10,000 --> 00:12:12,480
possibilities that have been um we've

273
00:12:12,480 --> 00:12:14,160
been whittling them down to remove them

274
00:12:14,160 --> 00:12:15,600
because there hasn't been interest in

275
00:12:15,600 --> 00:12:17,440
those features and if there's an

276
00:12:17,440 --> 00:12:18,480
interest then there's not going to be

277
00:12:18,480 --> 00:12:19,920
anybody to write the text for it which

278
00:12:19,920 --> 00:12:22,000
means it's not really going to be a

279
00:12:22,000 --> 00:12:23,360
feature

280
00:12:23,360 --> 00:12:24,639
um

281
00:12:24,639 --> 00:12:27,360
and then there's um on the protocol flow

282
00:12:27,360 --> 00:12:29,120
side there's a new state diagram which

283
00:12:29,120 --> 00:12:30,320
is um

284
00:12:30,320 --> 00:12:32,720
try to describe how

285
00:12:32,720 --> 00:12:34,480
how we expect

286
00:12:34,480 --> 00:12:36,639
the state of the entire system to change

287
00:12:36,639 --> 00:12:39,279
over time who's talking to what uh

288
00:12:39,279 --> 00:12:40,880
there's some discussion around that

289
00:12:40,880 --> 00:12:42,399
and there's now actually a new change

290
00:12:42,399 --> 00:12:44,000
that allows

291
00:12:44,000 --> 00:12:45,519
interactions to time out which basically

292
00:12:45,519 --> 00:12:48,480
means that if

293
00:12:48,480 --> 00:12:51,600
it's explicitly mentioned that

294
00:12:51,600 --> 00:12:53,760
we're not expecting like the as to hold

295
00:12:53,760 --> 00:12:55,440
on to things forever

296
00:12:55,440 --> 00:12:57,200
um so again those are all linked if you

297
00:12:57,200 --> 00:12:59,040
want to see the actual details

298
00:12:59,040 --> 00:13:00,079
um

299
00:13:00,079 --> 00:13:01,839
this is an example one of the syntax

300
00:13:01,839 --> 00:13:05,040
changes where it was just kind of a

301
00:13:05,040 --> 00:13:07,040
over from some previous syntax that i

302
00:13:07,040 --> 00:13:10,639
think it had more options in it before

303
00:13:10,639 --> 00:13:11,920
and uh

304
00:13:11,920 --> 00:13:13,440
by removing some of these options now

305
00:13:13,440 --> 00:13:14,880
the syntax is kind of redundant so it

306
00:13:14,880 --> 00:13:16,560
just uses a string for that user code

307
00:13:16,560 --> 00:13:18,000
this is the thing that like the user

308
00:13:18,000 --> 00:13:19,279
would type in they would see it on this

309
00:13:19,279 --> 00:13:21,519
on a tv screen type this in

310
00:13:21,519 --> 00:13:23,120
so again minor change but it is

311
00:13:23,120 --> 00:13:25,519
technically a breaking change

312
00:13:25,519 --> 00:13:27,440
right uh just on that last one i want to

313
00:13:27,440 --> 00:13:30,079
note that uh that that syntax change is

314
00:13:30,079 --> 00:13:32,399
there's now user code url and user code

315
00:13:32,399 --> 00:13:34,720
as two separate modes whereas before

316
00:13:34,720 --> 00:13:36,720
they were they were one thing and it was

317
00:13:36,720 --> 00:13:38,320
confusing because sometimes you could do

318
00:13:38,320 --> 00:13:40,320
one and sometimes the other and

319
00:13:40,320 --> 00:13:42,399
it wasn't it wasn't clear on what a

320
00:13:42,399 --> 00:13:45,279
client would actually uh need to expect

321
00:13:45,279 --> 00:13:47,600
at any point so this goes with what

322
00:13:47,600 --> 00:13:49,440
aaron was saying before of like you know

323
00:13:49,440 --> 00:13:51,279
looking at what people actually want to

324
00:13:51,279 --> 00:13:52,560
do with this

325
00:13:52,560 --> 00:13:55,279
and whittling it down to be as as simple

326
00:13:55,279 --> 00:13:57,360
as the mechanism can be

327
00:13:57,360 --> 00:14:00,160
and so this was the syntax for this mode

328
00:14:00,160 --> 00:14:02,240
catching up with what was actually in it

329
00:14:02,240 --> 00:14:04,000
because it doesn't make sense for to

330
00:14:04,000 --> 00:14:06,399
have an object that only always has a

331
00:14:06,399 --> 00:14:10,000
single value inside this protocol

332
00:14:10,000 --> 00:14:12,639
yeah and i think um that is a theme that

333
00:14:12,639 --> 00:14:13,920
you'll you'll see with a lot of these

334
00:14:13,920 --> 00:14:15,680
changes is that it's

335
00:14:15,680 --> 00:14:17,440
we're trying to make it so that a client

336
00:14:17,440 --> 00:14:18,480
developer

337
00:14:18,480 --> 00:14:19,839
doesn't

338
00:14:19,839 --> 00:14:21,839
kind of knows what to expect by the data

339
00:14:21,839 --> 00:14:23,680
that's coming back and they don't have

340
00:14:23,680 --> 00:14:25,519
to go and look it up necessarily because

341
00:14:25,519 --> 00:14:27,199
it's kind of just obvious what it does

342
00:14:27,199 --> 00:14:28,160
so

343
00:14:28,160 --> 00:14:31,040
hopefully this helps

344
00:14:31,040 --> 00:14:33,519
um this is that split token feature that

345
00:14:33,519 --> 00:14:34,399
um

346
00:14:34,399 --> 00:14:36,720
sort of previously existed um that we

347
00:14:36,720 --> 00:14:39,600
have now dropped the idea was a request

348
00:14:39,600 --> 00:14:41,360
for a token might return actually

349
00:14:41,360 --> 00:14:43,120
multiple tokens

350
00:14:43,120 --> 00:14:45,440
which the idea was if you have multiple

351
00:14:45,440 --> 00:14:47,600
apis multiple resource servers and you

352
00:14:47,600 --> 00:14:50,320
wanted them to be able to

353
00:14:50,320 --> 00:14:52,560
not have to validate the same looking

354
00:14:52,560 --> 00:14:53,760
token if you want actually different

355
00:14:53,760 --> 00:14:55,120
tokens targeted different resource

356
00:14:55,120 --> 00:14:57,360
servers you could get them all in one

357
00:14:57,360 --> 00:14:58,399
request

358
00:14:58,399 --> 00:14:59,839
it sounds like a cool feature i agree

359
00:14:59,839 --> 00:15:01,279
it's a cool feature apparently nobody

360
00:15:01,279 --> 00:15:03,600
was interested and it also complicates

361
00:15:03,600 --> 00:15:05,839
things quite a bit so

362
00:15:05,839 --> 00:15:07,360
if there isn't demand for it it makes

363
00:15:07,360 --> 00:15:08,720
sense to drop it

364
00:15:08,720 --> 00:15:10,800
otherwise it's going to be only half

365
00:15:10,800 --> 00:15:13,040
baked in the spec which is not which is

366
00:15:13,040 --> 00:15:14,399
probably worse actually it's definitely

367
00:15:14,399 --> 00:15:16,880
worse so um

368
00:15:16,880 --> 00:15:18,720
and this particular

369
00:15:18,720 --> 00:15:20,240
uh

370
00:15:20,240 --> 00:15:21,760
this would be

371
00:15:21,760 --> 00:15:23,120
this is a really reasonable thing to

372
00:15:23,120 --> 00:15:25,600
target as sort of an advanced extension

373
00:15:25,600 --> 00:15:28,160
so somebody who needs this inside their

374
00:15:28,160 --> 00:15:30,240
particular ecosystem that wants to

375
00:15:30,240 --> 00:15:31,839
actually build this out and get

376
00:15:31,839 --> 00:15:33,920
experience with what this looks like

377
00:15:33,920 --> 00:15:35,440
especially with

378
00:15:35,440 --> 00:15:37,360
um the additional complexity on the

379
00:15:37,360 --> 00:15:40,160
client side of like i only asked for one

380
00:15:40,160 --> 00:15:42,000
token but you gave me back three because

381
00:15:42,000 --> 00:15:43,839
you've got three different rs domains

382
00:15:43,839 --> 00:15:45,839
that you're dealing with a client's

383
00:15:45,839 --> 00:15:47,360
gonna need to know what to do with that

384
00:15:47,360 --> 00:15:48,720
and there's a lot of unanswered

385
00:15:48,720 --> 00:15:50,880
questions there that that this function

386
00:15:50,880 --> 00:15:52,399
was raising that

387
00:15:52,399 --> 00:15:54,320
you know implementation experience would

388
00:15:54,320 --> 00:15:57,120
uh would help answer there so this could

389
00:15:57,120 --> 00:15:59,120
come back as an extension someday but it

390
00:15:59,120 --> 00:16:00,959
was it was not a good candidate to keep

391
00:16:00,959 --> 00:16:03,120
in core

392
00:16:03,120 --> 00:16:05,839
yep thanks

393
00:16:07,199 --> 00:16:09,680
um okay key proofs so

394
00:16:09,680 --> 00:16:10,880
in the

395
00:16:10,880 --> 00:16:12,880
previous

396
00:16:12,880 --> 00:16:15,680
uh version there was a

397
00:16:15,680 --> 00:16:17,759
this is how the

398
00:16:17,759 --> 00:16:19,680
client is telling the as what it's going

399
00:16:19,680 --> 00:16:20,880
to

400
00:16:20,880 --> 00:16:22,639
be using as a proof is that i get that

401
00:16:22,639 --> 00:16:24,240
right yeah

402
00:16:24,240 --> 00:16:27,440
um you used to have just this string

403
00:16:27,440 --> 00:16:31,120
which is essentially internal

404
00:16:31,120 --> 00:16:34,079
internal description of what that is um

405
00:16:34,079 --> 00:16:37,120
between the the at the ais the new mode

406
00:16:37,120 --> 00:16:39,519
actually gives it the ability to have

407
00:16:39,519 --> 00:16:41,519
all these different attributes of that

408
00:16:41,519 --> 00:16:42,800
method because

409
00:16:42,800 --> 00:16:44,720
the um

410
00:16:44,720 --> 00:16:45,759
because

411
00:16:45,759 --> 00:16:47,759
http signatures can use different

412
00:16:47,759 --> 00:16:49,519
algorithms and different digest

413
00:16:49,519 --> 00:16:50,480
different signatures and different

414
00:16:50,480 --> 00:16:53,120
digest algorithms so http signatures by

415
00:16:53,120 --> 00:16:54,240
itself is not enough to actually

416
00:16:54,240 --> 00:16:55,519
describe

417
00:16:55,519 --> 00:16:58,079
what we actually mean so there's now an

418
00:16:58,079 --> 00:16:59,600
expanded version of this that describes

419
00:16:59,600 --> 00:17:04,120
the exact bits that are required

420
00:17:06,160 --> 00:17:09,599
um this one is a fun one that um

421
00:17:09,599 --> 00:17:11,199
actually i need to go file an issue on

422
00:17:11,199 --> 00:17:13,280
one of the oauth specs for this as well

423
00:17:13,280 --> 00:17:14,880
um the

424
00:17:14,880 --> 00:17:16,880
the hash algorithm names there's been

425
00:17:16,880 --> 00:17:18,559
this convention of using abbreviations

426
00:17:18,559 --> 00:17:20,400
for them or shortened versions of the

427
00:17:20,400 --> 00:17:22,720
names and there is an actual registry

428
00:17:22,720 --> 00:17:25,599
that describes exactly like the short

429
00:17:25,599 --> 00:17:28,000
string to the actual method and a lot of

430
00:17:28,000 --> 00:17:29,520
specs haven't been using it and they've

431
00:17:29,520 --> 00:17:30,880
just been sort of

432
00:17:30,880 --> 00:17:32,559
crossing your fingers that people are

433
00:17:32,559 --> 00:17:34,720
going to figure it out so we did a big

434
00:17:34,720 --> 00:17:36,960
pass through this spec and updated the

435
00:17:36,960 --> 00:17:38,559
algorithm names to actually properly

436
00:17:38,559 --> 00:17:40,320
reference the iana registry for the

437
00:17:40,320 --> 00:17:42,480
algorithms explicitly

438
00:17:42,480 --> 00:17:43,520
and

439
00:17:43,520 --> 00:17:44,640
that is

440
00:17:44,640 --> 00:17:46,799
much better than just sort of leaving it

441
00:17:46,799 --> 00:17:48,160
up to everybody to figure out what we

442
00:17:48,160 --> 00:17:50,080
meant by sha2

443
00:17:50,080 --> 00:17:52,000
so uh that is technically a breaking

444
00:17:52,000 --> 00:17:53,200
change because if anybody had written

445
00:17:53,200 --> 00:17:55,280
code that recognizes the string sha2

446
00:17:55,280 --> 00:17:57,559
they now have to update it to recognize

447
00:17:57,559 --> 00:18:01,840
shop2512 or send that

448
00:18:03,120 --> 00:18:06,639
okay this is for you justin right

449
00:18:07,440 --> 00:18:10,240
yeah all right um so i don't think i

450
00:18:10,240 --> 00:18:12,240
have slide controls on my end so i'll

451
00:18:12,240 --> 00:18:14,240
just ask for next slide as we uh as we

452
00:18:14,240 --> 00:18:15,520
go through this

453
00:18:15,520 --> 00:18:16,480
um

454
00:18:16,480 --> 00:18:18,880
all right so what uh

455
00:18:18,880 --> 00:18:20,640
what we realized a while ago there was

456
00:18:20,640 --> 00:18:22,080
an issue filed for this quite some time

457
00:18:22,080 --> 00:18:24,960
ago is that uh there is

458
00:18:24,960 --> 00:18:27,360
sort of an implied life cycle when

459
00:18:27,360 --> 00:18:29,200
you're making one of these requests for

460
00:18:29,200 --> 00:18:31,280
access whether it's to an api or user

461
00:18:31,280 --> 00:18:32,799
information or whatever

462
00:18:32,799 --> 00:18:34,320
uh there's this life cycle that

463
00:18:34,320 --> 00:18:37,360
everything goes through and that it um

464
00:18:37,360 --> 00:18:38,320
you know

465
00:18:38,320 --> 00:18:39,919
you kind of

466
00:18:39,919 --> 00:18:40,720
uh

467
00:18:40,720 --> 00:18:43,120
this exists in oauth as well but it's

468
00:18:43,120 --> 00:18:44,799
it's never really talked about in oauth

469
00:18:44,799 --> 00:18:47,039
space until people started uh defining

470
00:18:47,039 --> 00:18:49,280
the uh grant management api over in the

471
00:18:49,280 --> 00:18:50,799
fappy working group then it starts to

472
00:18:50,799 --> 00:18:52,720
kind of come to the fore that there are

473
00:18:52,720 --> 00:18:55,360
these uh underlying sort of grant

474
00:18:55,360 --> 00:18:58,240
request objects that go through

475
00:18:58,240 --> 00:19:00,320
different states in the protocol

476
00:19:00,320 --> 00:19:02,960
um so what we decided to do in gennapp

477
00:19:02,960 --> 00:19:05,520
is call that out explicitly so next

478
00:19:05,520 --> 00:19:07,120
slide

479
00:19:07,120 --> 00:19:08,720
um

480
00:19:08,720 --> 00:19:09,520
we

481
00:19:09,520 --> 00:19:11,600
put together this is uh we mentioned

482
00:19:11,600 --> 00:19:14,320
this at the last ietf meeting in vienna

483
00:19:14,320 --> 00:19:16,799
this is what we've come up with for

484
00:19:16,799 --> 00:19:18,480
uh

485
00:19:18,480 --> 00:19:21,520
the state diagram from the mostly from

486
00:19:21,520 --> 00:19:25,360
the as's perspective of what something

487
00:19:25,360 --> 00:19:27,600
of what a grant request can go through

488
00:19:27,600 --> 00:19:30,000
uh during its life cycle so either it's

489
00:19:30,000 --> 00:19:31,840
it's waiting to be approved or it has

490
00:19:31,840 --> 00:19:33,440
been approved and it can move back and

491
00:19:33,440 --> 00:19:34,720
forth between

492
00:19:34,720 --> 00:19:36,559
those states until eventually it gets to

493
00:19:36,559 --> 00:19:38,799
a state where you you can't get anything

494
00:19:38,799 --> 00:19:41,039
uh you can't get anything more out of it

495
00:19:41,039 --> 00:19:42,240
all right i'm gonna go through each of

496
00:19:42,240 --> 00:19:44,480
these states uh and talk about kind of

497
00:19:44,480 --> 00:19:46,000
what they mean and how they move between

498
00:19:46,000 --> 00:19:47,360
each other and this is a new section

499
00:19:47,360 --> 00:19:48,559
that is in

500
00:19:48,559 --> 00:19:52,080
the um that is in the draft and i just i

501
00:19:52,080 --> 00:19:54,080
do want to take a a a quick second to

502
00:19:54,080 --> 00:19:56,000
point out that uh we mentioned fancy

503
00:19:56,000 --> 00:19:58,400
diagrams this diagram this actual

504
00:19:58,400 --> 00:20:01,200
diagram is actually in the draft as

505
00:20:01,200 --> 00:20:03,760
ascii or not as ascii as svg

506
00:20:03,760 --> 00:20:06,640
um and that just makes me very happy

507
00:20:06,640 --> 00:20:09,200
that uh that we can do that in rfcs now

508
00:20:09,200 --> 00:20:10,320
um

509
00:20:10,320 --> 00:20:13,360
okay next slide please

510
00:20:14,000 --> 00:20:16,559
so the processing state this is where

511
00:20:16,559 --> 00:20:18,400
things go when you first make your

512
00:20:18,400 --> 00:20:19,840
request

513
00:20:19,840 --> 00:20:21,520
it's also where things go

514
00:20:21,520 --> 00:20:24,000
sort of in between the other the other

515
00:20:24,000 --> 00:20:25,360
major states

516
00:20:25,360 --> 00:20:27,840
so this means that the as is trying to

517
00:20:27,840 --> 00:20:29,200
figure out what's going on it's looking

518
00:20:29,200 --> 00:20:30,960
at the context of the request all of the

519
00:20:30,960 --> 00:20:32,320
information that's come from the client

520
00:20:32,320 --> 00:20:34,000
instance any information that's come

521
00:20:34,000 --> 00:20:36,480
from the end user and the resource

522
00:20:36,480 --> 00:20:38,320
owners and anybody else and it's trying

523
00:20:38,320 --> 00:20:40,400
to figure out what do i need to do next

524
00:20:40,400 --> 00:20:43,120
this is a transitive state uh in that

525
00:20:43,120 --> 00:20:45,280
you know you're not really meant to

526
00:20:45,280 --> 00:20:46,720
uh stay here

527
00:20:46,720 --> 00:20:48,559
for a long time but while you're in this

528
00:20:48,559 --> 00:20:50,400
state you're not issuing any tokens

529
00:20:50,400 --> 00:20:51,440
you're not

530
00:20:51,440 --> 00:20:54,320
uh you know issuing any user information

531
00:20:54,320 --> 00:20:57,039
uh you're trying to figure out what

532
00:20:57,039 --> 00:20:59,280
what actually needs to happen

533
00:20:59,280 --> 00:21:00,080
and

534
00:21:00,080 --> 00:21:01,520
uh

535
00:21:01,520 --> 00:21:04,000
if you need more information you move to

536
00:21:04,000 --> 00:21:06,000
the pending state so usually that means

537
00:21:06,000 --> 00:21:08,640
you need uh interaction for the end user

538
00:21:08,640 --> 00:21:10,400
uh sometimes it means you need to

539
00:21:10,400 --> 00:21:12,480
asynchronously go contact a resource

540
00:21:12,480 --> 00:21:14,320
owner sometimes it means you need more

541
00:21:14,320 --> 00:21:17,039
information from the client instance and

542
00:21:17,039 --> 00:21:18,880
uh but in all of those cases you're

543
00:21:18,880 --> 00:21:20,799
going to move to the pending state

544
00:21:20,799 --> 00:21:23,600
if you're all if you are satisfied as

545
00:21:23,600 --> 00:21:25,840
the as with everything that you've been

546
00:21:25,840 --> 00:21:27,760
rece uh that you've received for this

547
00:21:27,760 --> 00:21:30,559
request so uh you've either already

548
00:21:30,559 --> 00:21:32,400
interacted or

549
00:21:32,400 --> 00:21:34,240
the client gave you enough information

550
00:21:34,240 --> 00:21:35,919
that you can just issue things right

551
00:21:35,919 --> 00:21:38,240
away then you move to the approved state

552
00:21:38,240 --> 00:21:40,640
um and then if you get to a point where

553
00:21:40,640 --> 00:21:42,960
you just uh you realize that you can't

554
00:21:42,960 --> 00:21:45,360
process anymore so there's this you've

555
00:21:45,360 --> 00:21:47,600
exhausted your interaction capabilities

556
00:21:47,600 --> 00:21:48,880
the client hasn't given you new

557
00:21:48,880 --> 00:21:50,960
information or you're just in sort of an

558
00:21:50,960 --> 00:21:52,640
error state and you need to say like

559
00:21:52,640 --> 00:21:54,240
yeah this is this is done i'm not giving

560
00:21:54,240 --> 00:21:55,679
you anything else you move to the

561
00:21:55,679 --> 00:21:57,520
finalized state we're going to step

562
00:21:57,520 --> 00:22:00,640
through those now next slide please

563
00:22:00,640 --> 00:22:02,880
so pending means that the as needs more

564
00:22:02,880 --> 00:22:04,400
information it has gone through its

565
00:22:04,400 --> 00:22:06,240
context and it has determined that it

566
00:22:06,240 --> 00:22:09,200
needs information from somewhere um this

567
00:22:09,200 --> 00:22:12,480
is the state that the request is in when

568
00:22:12,480 --> 00:22:14,880
you're waiting for the user to go log

569
00:22:14,880 --> 00:22:16,640
into the site and interact or enter the

570
00:22:16,640 --> 00:22:19,039
user code or get redirected or use the

571
00:22:19,039 --> 00:22:22,320
app or whatever other mechanisms that

572
00:22:22,320 --> 00:22:23,919
you're using during the interaction

573
00:22:23,919 --> 00:22:24,799
phase

574
00:22:24,799 --> 00:22:27,600
uh this uh the grant is basically

575
00:22:27,600 --> 00:22:30,400
sitting there waiting and pending

576
00:22:30,400 --> 00:22:32,480
uh you know pending that that

577
00:22:32,480 --> 00:22:35,440
interaction it could also be waiting for

578
00:22:35,440 --> 00:22:36,159
the

579
00:22:36,159 --> 00:22:39,440
client instance uh to send its post

580
00:22:39,440 --> 00:22:41,520
interaction follow-up message

581
00:22:41,520 --> 00:22:44,240
so uh you know when you're in this state

582
00:22:44,240 --> 00:22:46,320
and you know the user has like checked

583
00:22:46,320 --> 00:22:48,000
all of the check boxes and click the ok

584
00:22:48,000 --> 00:22:48,960
button

585
00:22:48,960 --> 00:22:50,080
um

586
00:22:50,080 --> 00:22:51,919
if there's an interaction finish message

587
00:22:51,919 --> 00:22:52,840
then the

588
00:22:52,840 --> 00:22:54,000
as uh

589
00:22:54,000 --> 00:22:56,159
sends that finished message out but

590
00:22:56,159 --> 00:22:57,520
you're still sitting in the pending

591
00:22:57,520 --> 00:23:00,880
state until the uh until that finish

592
00:23:00,880 --> 00:23:02,720
message comes in and says that

593
00:23:02,720 --> 00:23:04,720
everything is you know is approved or

594
00:23:04,720 --> 00:23:06,480
denied or whatever it is

595
00:23:06,480 --> 00:23:08,320
and that importantly moves you back to

596
00:23:08,320 --> 00:23:10,320
the processing state

597
00:23:10,320 --> 00:23:12,799
so you never go from pending directly to

598
00:23:12,799 --> 00:23:14,320
to approved

599
00:23:14,320 --> 00:23:16,480
the way this state diagram works is that

600
00:23:16,480 --> 00:23:17,840
you always flow back through the

601
00:23:17,840 --> 00:23:19,679
processing state because the as needs to

602
00:23:19,679 --> 00:23:20,880
consider

603
00:23:20,880 --> 00:23:22,559
everything that it knows at that point

604
00:23:22,559 --> 00:23:23,679
of time

605
00:23:23,679 --> 00:23:26,880
um to decide whether or not

606
00:23:26,880 --> 00:23:29,520
you might need more interaction or say

607
00:23:29,520 --> 00:23:31,679
you got one resource owner to sign off

608
00:23:31,679 --> 00:23:33,600
and you actually need two or three

609
00:23:33,600 --> 00:23:35,760
different ones to sign off you could go

610
00:23:35,760 --> 00:23:37,600
from pending to processing to figure

611
00:23:37,600 --> 00:23:39,440
that out and straight back into pending

612
00:23:39,440 --> 00:23:41,520
since you're waiting for more people to

613
00:23:41,520 --> 00:23:42,960
kind of show up and do their thing that

614
00:23:42,960 --> 00:23:44,400
may or may not be actually using the

615
00:23:44,400 --> 00:23:45,279
client

616
00:23:45,279 --> 00:23:47,440
um

617
00:23:47,440 --> 00:23:50,720
uh let's see here no modifications uh

618
00:23:50,720 --> 00:23:52,159
can be received when you're in this

619
00:23:52,159 --> 00:23:54,159
state so the client can't send any

620
00:23:54,159 --> 00:23:56,480
updates to the request it can't change

621
00:23:56,480 --> 00:23:58,799
what it's asking for it can't uh you

622
00:23:58,799 --> 00:24:00,480
know request new access tokens or

623
00:24:00,480 --> 00:24:01,760
anything like that

624
00:24:01,760 --> 00:24:05,200
um it's just uh you're not issuing

625
00:24:05,200 --> 00:24:07,279
anything when you're in this state

626
00:24:07,279 --> 00:24:10,320
um and if during this state by the way

627
00:24:10,320 --> 00:24:12,559
uh this this was this is a bit that

628
00:24:12,559 --> 00:24:15,039
wasn't um wasn't called out in the text

629
00:24:15,039 --> 00:24:18,559
previously uh it is actually uh possible

630
00:24:18,559 --> 00:24:19,520
for

631
00:24:19,520 --> 00:24:21,840
your interaction methods to time out

632
00:24:21,840 --> 00:24:24,080
because you know you're not gonna have a

633
00:24:24,080 --> 00:24:26,799
re a redirect that is just open forever

634
00:24:26,799 --> 00:24:28,159
uh you're not gonna have a user code

635
00:24:28,159 --> 00:24:29,520
that is just valid

636
00:24:29,520 --> 00:24:31,200
until the end of time you're probably

637
00:24:31,200 --> 00:24:33,360
gonna throw those away at some

638
00:24:33,360 --> 00:24:36,400
reasonable timeout and uh if that

639
00:24:36,400 --> 00:24:38,240
happens and

640
00:24:38,240 --> 00:24:40,000
uh you're saying that like no this is

641
00:24:40,000 --> 00:24:42,159
completely cancelled and i'm not doing

642
00:24:42,159 --> 00:24:43,840
anything like that you can drop straight

643
00:24:43,840 --> 00:24:45,760
into the finalized state which is which

644
00:24:45,760 --> 00:24:48,640
is the uh which is a terminal state uh

645
00:24:48,640 --> 00:24:50,400
next slide please

646
00:24:50,400 --> 00:24:52,880
sorry to interrupt guys this is going to

647
00:24:52,880 --> 00:24:56,480
be quite a long presentation so if you

648
00:24:56,480 --> 00:24:59,120
have any comments or questions

649
00:24:59,120 --> 00:25:03,200
do jump in don't wait yes please

650
00:25:03,200 --> 00:25:05,200
yeah yes please yes uh we should have

651
00:25:05,200 --> 00:25:07,520
noted that the uh the editors kind of

652
00:25:07,520 --> 00:25:09,520
strung everything um

653
00:25:09,520 --> 00:25:11,360
strung all of our presentations together

654
00:25:11,360 --> 00:25:14,640
in one in one giant deck so feel free to

655
00:25:14,640 --> 00:25:17,760
to jump in at any point

656
00:25:18,480 --> 00:25:20,559
okay so the approved state is when the

657
00:25:20,559 --> 00:25:22,480
as is decided that it has everything

658
00:25:22,480 --> 00:25:24,320
that it needs and it can issue some

659
00:25:24,320 --> 00:25:26,840
access tokens or some subject

660
00:25:26,840 --> 00:25:28,880
information uh directly back to the

661
00:25:28,880 --> 00:25:30,240
client instance

662
00:25:30,240 --> 00:25:31,279
um

663
00:25:31,279 --> 00:25:33,440
when the uh

664
00:25:33,440 --> 00:25:37,039
in this state the client can um

665
00:25:37,039 --> 00:25:38,960
continue the

666
00:25:38,960 --> 00:25:41,360
it can request new access tokens based

667
00:25:41,360 --> 00:25:42,880
on the current state of the grant so

668
00:25:42,880 --> 00:25:44,640
anything that's already been approved

669
00:25:44,640 --> 00:25:46,799
the client can ask for

670
00:25:46,799 --> 00:25:50,240
additional access tokens to be issued

671
00:25:50,240 --> 00:25:53,440
uh during this state again if the as

672
00:25:53,440 --> 00:25:55,520
approves that this is this is where that

673
00:25:55,520 --> 00:25:58,400
piece happens the client can also

674
00:25:58,400 --> 00:26:01,039
modify the request so either step up or

675
00:26:01,039 --> 00:26:03,360
step down or you know a subset of access

676
00:26:03,360 --> 00:26:05,360
or something like that it can send a

677
00:26:05,360 --> 00:26:07,120
modification request

678
00:26:07,120 --> 00:26:09,440
uh to the as at which point it moves

679
00:26:09,440 --> 00:26:11,279
back to processing because now the as

680
00:26:11,279 --> 00:26:13,360
has to figure out what do i do with this

681
00:26:13,360 --> 00:26:14,240
new

682
00:26:14,240 --> 00:26:17,200
context of information do i need more uh

683
00:26:17,200 --> 00:26:18,720
information so i go back into the

684
00:26:18,720 --> 00:26:20,640
pending state or are they asking for a

685
00:26:20,640 --> 00:26:22,720
subset of everything so i can just

686
00:26:22,720 --> 00:26:24,480
give them the new token or give them the

687
00:26:24,480 --> 00:26:27,600
new claim set and just go on with our

688
00:26:27,600 --> 00:26:29,200
day right from here

689
00:26:29,200 --> 00:26:30,080
um

690
00:26:30,080 --> 00:26:33,360
and uh if the as uh revokes the request

691
00:26:33,360 --> 00:26:34,240
uh

692
00:26:34,240 --> 00:26:36,240
or you know it times out or whatever the

693
00:26:36,240 --> 00:26:38,320
as decides this can also move directly

694
00:26:38,320 --> 00:26:40,480
into the finalized state from here

695
00:26:40,480 --> 00:26:42,880
next slide please

696
00:26:42,880 --> 00:26:45,440
and finally no pun intended uh the

697
00:26:45,440 --> 00:26:47,440
finalized state is a terminal state this

698
00:26:47,440 --> 00:26:49,120
means that the grant is done and nothing

699
00:26:49,120 --> 00:26:50,640
more can happen

700
00:26:50,640 --> 00:26:52,240
so when you're in this state you are not

701
00:26:52,240 --> 00:26:54,240
issuing any new tokens anytime you get a

702
00:26:54,240 --> 00:26:56,400
modification or a continuation

703
00:26:56,400 --> 00:26:59,120
uh request that is an error and calling

704
00:26:59,120 --> 00:27:01,360
out this as a sort of a separate

705
00:27:01,360 --> 00:27:04,320
terminal state uh we believe is actually

706
00:27:04,320 --> 00:27:05,520
going to be really helpful for

707
00:27:05,520 --> 00:27:08,159
developers realizing that like these

708
00:27:08,159 --> 00:27:09,840
aren't things that necessarily have to

709
00:27:09,840 --> 00:27:11,039
stick around

710
00:27:11,039 --> 00:27:13,039
uh that you know you have to keep around

711
00:27:13,039 --> 00:27:16,640
forever uh once you decide uh as the as

712
00:27:16,640 --> 00:27:18,320
once you decide that no more

713
00:27:18,320 --> 00:27:19,919
continuations can actually happen

714
00:27:19,919 --> 00:27:22,159
nothing more can be gotten out of this

715
00:27:22,159 --> 00:27:25,120
grant request then you just you finalize

716
00:27:25,120 --> 00:27:28,080
it and you're uh you're on your way in

717
00:27:28,080 --> 00:27:30,080
oauth this is equivalent roughly

718
00:27:30,080 --> 00:27:32,399
equivalent to the refresh token being no

719
00:27:32,399 --> 00:27:34,799
good anymore uh because you're no longer

720
00:27:34,799 --> 00:27:36,880
able to sort of make modifications in

721
00:27:36,880 --> 00:27:39,279
the context of that original request

722
00:27:39,279 --> 00:27:41,600
if you need new tokens if you need new

723
00:27:41,600 --> 00:27:43,440
subject information you have to start

724
00:27:43,440 --> 00:27:45,200
again from the beginning just like you

725
00:27:45,200 --> 00:27:48,640
would have to do an oauth with uh with a

726
00:27:48,640 --> 00:27:51,440
refresh token that's that's no longer

727
00:27:51,440 --> 00:27:54,480
next slide please aaron

728
00:27:55,520 --> 00:27:59,679
um all right that is the grant uh

729
00:27:59,679 --> 00:28:01,440
life cycle i want to pause for any

730
00:28:01,440 --> 00:28:03,600
questions on that life cycle discussion

731
00:28:03,600 --> 00:28:06,960
uh if people want to know like

732
00:28:06,960 --> 00:28:08,720
why it's there what we're doing with it

733
00:28:08,720 --> 00:28:10,960
what it

734
00:28:14,840 --> 00:28:17,679
means no

735
00:28:17,679 --> 00:28:19,279
all right well i will hand it back to

736
00:28:19,279 --> 00:28:20,720
aaron for the next part of this

737
00:28:20,720 --> 00:28:23,440
presentation though

738
00:28:24,559 --> 00:28:27,279
okay so there's still a bunch of um

739
00:28:27,279 --> 00:28:29,760
open issues on the draft some of them

740
00:28:29,760 --> 00:28:30,480
are

741
00:28:30,480 --> 00:28:31,520
planned

742
00:28:31,520 --> 00:28:33,440
to that we're already planning on doing

743
00:28:33,440 --> 00:28:35,200
that's effectively

744
00:28:35,200 --> 00:28:36,640
you know accepted

745
00:28:36,640 --> 00:28:38,880
the uh

746
00:28:38,880 --> 00:28:41,200
list of issues here that are spelled out

747
00:28:41,200 --> 00:28:43,120
are actually ones that at some point in

748
00:28:43,120 --> 00:28:45,120
the past we've actually put into the

749
00:28:45,120 --> 00:28:47,039
draft itself as

750
00:28:47,039 --> 00:28:48,960
uh references out to make sure that we

751
00:28:48,960 --> 00:28:50,799
don't forget to do them

752
00:28:50,799 --> 00:28:52,080
um

753
00:28:52,080 --> 00:28:53,279
there's a whole section that we want to

754
00:28:53,279 --> 00:28:54,399
do on

755
00:28:54,399 --> 00:28:56,960
key rotation for tokens so that clients

756
00:28:56,960 --> 00:28:58,960
can actually not just have to use the

757
00:28:58,960 --> 00:29:00,559
same key over and over again

758
00:29:00,559 --> 00:29:02,320
um there's

759
00:29:02,320 --> 00:29:05,279
client management and then there's a

760
00:29:05,279 --> 00:29:06,320
bunch of work to do in the resource

761
00:29:06,320 --> 00:29:09,440
server draft mainly the idea of token

762
00:29:09,440 --> 00:29:10,640
models

763
00:29:10,640 --> 00:29:13,120
i think we have

764
00:29:13,120 --> 00:29:14,960
did we have slides on each of those i'm

765
00:29:14,960 --> 00:29:17,440
trying to remember yes we do okay

766
00:29:17,440 --> 00:29:18,720
um

767
00:29:18,720 --> 00:29:20,720
a couple of other related work that's

768
00:29:20,720 --> 00:29:22,480
going on is

769
00:29:22,480 --> 00:29:25,760
uh http message signatures which is a

770
00:29:25,760 --> 00:29:28,559
not tied to any other particular layer

771
00:29:28,559 --> 00:29:30,720
it's in the http working group

772
00:29:30,720 --> 00:29:32,799
um what is the asterisk

773
00:29:32,799 --> 00:29:34,320
justin

774
00:29:34,320 --> 00:29:37,279
um the http working group is meeting

775
00:29:37,279 --> 00:29:38,559
this afternoon

776
00:29:38,559 --> 00:29:41,440
and we will be asking for working group

777
00:29:41,440 --> 00:29:43,360
last call then

778
00:29:43,360 --> 00:29:44,559
uh got it

779
00:29:44,559 --> 00:29:47,840
so yeah so this week

780
00:29:47,840 --> 00:29:49,360
uh today

781
00:29:49,360 --> 00:29:50,320
today

782
00:29:50,320 --> 00:29:52,559
yeah literally in a few hours it's it's

783
00:29:52,559 --> 00:29:54,240
already in our slide deck that we're

784
00:29:54,240 --> 00:29:56,399
going to ask for working group last call

785
00:29:56,399 --> 00:29:58,080
um because we

786
00:29:58,080 --> 00:30:00,080
the editors of that spec myself and

787
00:30:00,080 --> 00:30:02,640
annabelle uh believe that that that is

788
00:30:02,640 --> 00:30:03,919
that it's ready to move to the next

789
00:30:03,919 --> 00:30:05,360
stage

790
00:30:05,360 --> 00:30:06,320
yeah i'm really excited about the

791
00:30:06,320 --> 00:30:08,240
message signatures draft i think it

792
00:30:08,240 --> 00:30:09,520
opens up a lot of really cool

793
00:30:09,520 --> 00:30:11,440
possibilities and it is one of the

794
00:30:11,440 --> 00:30:13,840
options available for signing things in

795
00:30:13,840 --> 00:30:15,919
gnab so that's how that's why it's

796
00:30:15,919 --> 00:30:18,880
related um the signatures draft itself

797
00:30:18,880 --> 00:30:20,720
doesn't say anything about gnapp

798
00:30:20,720 --> 00:30:22,640
obviously or any other higher level

799
00:30:22,640 --> 00:30:24,799
protocol it is just about

800
00:30:24,799 --> 00:30:28,320
http message signing

801
00:30:28,320 --> 00:30:29,039
so

802
00:30:29,039 --> 00:30:30,720
yeah that's super cool very excited to

803
00:30:30,720 --> 00:30:33,520
see that progressing

804
00:30:34,559 --> 00:30:36,880
also related security events subject

805
00:30:36,880 --> 00:30:39,600
identifiers so that uh

806
00:30:39,600 --> 00:30:40,799
i don't know i don't remember when it

807
00:30:40,799 --> 00:30:42,720
went to last call but the changes after

808
00:30:42,720 --> 00:30:45,520
last call are now in progress

809
00:30:45,520 --> 00:30:47,600
um and

810
00:30:47,600 --> 00:30:50,320
that is remind me where we use that in

811
00:30:50,320 --> 00:30:53,279
gnapp justin

812
00:30:53,520 --> 00:30:56,880
so that's when uh you're getting back uh

813
00:30:56,880 --> 00:30:58,720
identifiers for

814
00:30:58,720 --> 00:31:02,720
um for the end user uh and also uh

815
00:31:02,720 --> 00:31:04,880
so when you're like basically who's

816
00:31:04,880 --> 00:31:06,159
there right now

817
00:31:06,159 --> 00:31:08,720
uh the eas can respond with it's this

818
00:31:08,720 --> 00:31:10,559
person identified by this email address

819
00:31:10,559 --> 00:31:12,640
or by this opaque identifier or by this

820
00:31:12,640 --> 00:31:14,080
subject issue

821
00:31:14,080 --> 00:31:17,679
outside of an assertion wrapper

822
00:31:17,679 --> 00:31:19,679
right okay so not necessarily related to

823
00:31:19,679 --> 00:31:21,760
security events but

824
00:31:21,760 --> 00:31:24,480
as part of the integrated protocol okay

825
00:31:24,480 --> 00:31:26,720
great

826
00:31:29,679 --> 00:31:34,559
um i i think this next bit is mine um

827
00:31:35,279 --> 00:31:36,960
unless you want to unless you want to go

828
00:31:36,960 --> 00:31:37,840
for it

829
00:31:37,840 --> 00:31:39,200
all right

830
00:31:39,200 --> 00:31:42,080
okay so um

831
00:31:42,080 --> 00:31:44,159
not seeing anybody at the mic um all

832
00:31:44,159 --> 00:31:48,159
right so key rotation uh has been a

833
00:31:48,159 --> 00:31:50,880
topic that uh has been brought up as a

834
00:31:50,880 --> 00:31:53,679
as a let's do this next for probably the

835
00:31:53,679 --> 00:31:54,799
last year

836
00:31:54,799 --> 00:31:58,320
um and uh we the editors decided to

837
00:31:58,320 --> 00:32:00,399
finally sit down and figure out you know

838
00:32:00,399 --> 00:32:03,840
some concrete um ideas on how we could

839
00:32:03,840 --> 00:32:05,200
actually do this

840
00:32:05,200 --> 00:32:07,840
and uh so these slides represent sort of

841
00:32:07,840 --> 00:32:10,399
our early thinking of what this would

842
00:32:10,399 --> 00:32:12,000
actually look like in the context of

843
00:32:12,000 --> 00:32:13,120
ganap

844
00:32:13,120 --> 00:32:14,960
um

845
00:32:14,960 --> 00:32:16,000
with the

846
00:32:16,000 --> 00:32:18,000
with the way that the protocol is

847
00:32:18,000 --> 00:32:19,440
structured and especially with the

848
00:32:19,440 --> 00:32:22,000
clarity that uh that came from doing all

849
00:32:22,000 --> 00:32:22,880
of the

850
00:32:22,880 --> 00:32:25,360
um

851
00:32:25,600 --> 00:32:27,600
state diagram uh

852
00:32:27,600 --> 00:32:28,880
the state machine

853
00:32:28,880 --> 00:32:31,760
stuff this this last major revision

854
00:32:31,760 --> 00:32:33,760
um we realized that the major thing that

855
00:32:33,760 --> 00:32:36,000
we need to tackle is rotating keys

856
00:32:36,000 --> 00:32:38,000
specifically for tokens

857
00:32:38,000 --> 00:32:40,080
so being able to say that for this

858
00:32:40,080 --> 00:32:42,320
particular token i want to use a

859
00:32:42,320 --> 00:32:43,760
different key from the one that i did

860
00:32:43,760 --> 00:32:44,880
before

861
00:32:44,880 --> 00:32:45,919
and if we're going to do that

862
00:32:45,919 --> 00:32:48,240
mechanically as part of the protocol we

863
00:32:48,240 --> 00:32:50,159
need a way to prove possession of both

864
00:32:50,159 --> 00:32:51,919
the old key and the new key

865
00:32:51,919 --> 00:32:53,600
simultaneously

866
00:32:53,600 --> 00:32:55,679
now initially our naive thought was that

867
00:32:55,679 --> 00:32:57,840
oh we should be able to do this in kind

868
00:32:57,840 --> 00:32:59,440
of a universal way across all of the

869
00:32:59,440 --> 00:33:01,519
different key proofing types

870
00:33:01,519 --> 00:33:02,880
at least all of the ones that we've

871
00:33:02,880 --> 00:33:04,799
thought of and we realized kind of how

872
00:33:04,799 --> 00:33:07,120
dumb an idea that is um

873
00:33:07,120 --> 00:33:09,360
because they all present keys very very

874
00:33:09,360 --> 00:33:10,399
differently

875
00:33:10,399 --> 00:33:11,360
and

876
00:33:11,360 --> 00:33:13,279
who knows what else people are going to

877
00:33:13,279 --> 00:33:15,120
come up with for

878
00:33:15,120 --> 00:33:16,799
signing methods and

879
00:33:16,799 --> 00:33:18,960
key binding mechanisms and i mean we

880
00:33:18,960 --> 00:33:21,679
could see the revival of token binding

881
00:33:21,679 --> 00:33:24,559
in this space like who knows like we we

882
00:33:24,559 --> 00:33:26,320
can't predict that

883
00:33:26,320 --> 00:33:27,200
so

884
00:33:27,200 --> 00:33:29,440
our proposal is to actually allow

885
00:33:29,440 --> 00:33:31,760
different kinds of key presentation for

886
00:33:31,760 --> 00:33:35,840
each different uh proofing type um

887
00:33:35,840 --> 00:33:37,120
in order to

888
00:33:37,120 --> 00:33:40,080
sort of fulfill a basic pattern to show

889
00:33:40,080 --> 00:33:41,679
that uh

890
00:33:41,679 --> 00:33:45,679
you possess both keys and can rotate it

891
00:33:45,679 --> 00:33:46,960
um

892
00:33:46,960 --> 00:33:48,960
and then and this would be you know part

893
00:33:48,960 --> 00:33:50,720
of an explicit part of the protocol that

894
00:33:50,720 --> 00:33:53,440
says i am rotating this key and so look

895
00:33:53,440 --> 00:33:56,799
for these this this bit of information

896
00:33:56,799 --> 00:34:00,799
so the pattern here is that you want to

897
00:34:00,799 --> 00:34:03,440
sign your message with the new key

898
00:34:03,440 --> 00:34:05,200
and as part of that

899
00:34:05,200 --> 00:34:06,640
you want to

900
00:34:06,640 --> 00:34:07,919
sign

901
00:34:07,919 --> 00:34:11,359
the new key with the old key value as

902
00:34:11,359 --> 00:34:14,079
part of that presentation

903
00:34:14,079 --> 00:34:16,239
so this proves that

904
00:34:16,239 --> 00:34:18,879
you were in possession of the pub of the

905
00:34:18,879 --> 00:34:23,119
old key when you identified the new key

906
00:34:23,119 --> 00:34:24,719
so that's you you're taking your old key

907
00:34:24,719 --> 00:34:27,199
and signing the new key value

908
00:34:27,199 --> 00:34:29,040
and at the same time you're also in

909
00:34:29,040 --> 00:34:30,639
possession of the private key

910
00:34:30,639 --> 00:34:33,359
information of the new key so that you

911
00:34:33,359 --> 00:34:34,480
can

912
00:34:34,480 --> 00:34:36,159
sign

913
00:34:36,159 --> 00:34:39,918
that message of the old key with

914
00:34:39,918 --> 00:34:41,839
the new key to show that you have both

915
00:34:41,839 --> 00:34:44,000
of those at the same time

916
00:34:44,000 --> 00:34:46,159
uh next slide

917
00:34:46,159 --> 00:34:47,520
and the basic idea is that there would

918
00:34:47,520 --> 00:34:49,760
be different ways to do this based on

919
00:34:49,760 --> 00:34:51,520
different proofing methods

920
00:34:51,520 --> 00:34:53,679
so http signatures is an interesting one

921
00:34:53,679 --> 00:34:57,040
because it uh by design allows multiple

922
00:34:57,040 --> 00:34:58,960
pictures on a single message

923
00:34:58,960 --> 00:35:01,440
including the ability to sign a

924
00:35:01,440 --> 00:35:02,640
signature

925
00:35:02,640 --> 00:35:04,160
on the message

926
00:35:04,160 --> 00:35:07,280
so you sign the message uh with the old

927
00:35:07,280 --> 00:35:09,520
key and then you sign the message again

928
00:35:09,520 --> 00:35:11,680
including the signature of the old key

929
00:35:11,680 --> 00:35:14,800
with the new key and that fulfills that

930
00:35:14,800 --> 00:35:17,599
you know the double signing function to

931
00:35:17,599 --> 00:35:19,119
prove that you have both keys at the

932
00:35:19,119 --> 00:35:20,240
same time

933
00:35:20,240 --> 00:35:24,240
um how exactly we signal this um

934
00:35:24,240 --> 00:35:26,079
you know that's that's sort of a syntax

935
00:35:26,079 --> 00:35:27,920
and bike shutting discussion that we've

936
00:35:27,920 --> 00:35:29,359
we've got to figure out and we've got to

937
00:35:29,359 --> 00:35:31,599
discuss as a working group uh because

938
00:35:31,599 --> 00:35:33,920
you want to be able to say like hey i am

939
00:35:33,920 --> 00:35:36,079
signaling that i'm doing a new key here

940
00:35:36,079 --> 00:35:37,599
and here's the information and make sure

941
00:35:37,599 --> 00:35:39,599
that that's all tied together and all of

942
00:35:39,599 --> 00:35:40,800
that other stuff

943
00:35:40,800 --> 00:35:44,240
uh this would be a field inside of the

944
00:35:44,240 --> 00:35:46,720
token rotation um and the token

945
00:35:46,720 --> 00:35:49,440
management uh calls by the way since

946
00:35:49,440 --> 00:35:51,359
we're talking about changing keys for

947
00:35:51,359 --> 00:35:53,520
specific tokens

948
00:35:53,520 --> 00:35:56,079
uh next slide please

949
00:35:56,079 --> 00:35:58,480
with the jose stuff um

950
00:35:58,480 --> 00:36:00,240
we can do

951
00:36:00,240 --> 00:36:02,640
we can embed jose objects within each

952
00:36:02,640 --> 00:36:03,920
other

953
00:36:03,920 --> 00:36:07,280
right so um you can have a

954
00:36:07,280 --> 00:36:11,440
uh jose format that allows the new key

955
00:36:11,440 --> 00:36:14,400
to actually be jws signed

956
00:36:14,400 --> 00:36:16,640
with the old key value

957
00:36:16,640 --> 00:36:19,520
um as a jws payload

958
00:36:19,520 --> 00:36:20,960
so you sign the outer message with the

959
00:36:20,960 --> 00:36:22,480
new key and you sign the new key with

960
00:36:22,480 --> 00:36:23,839
the old key that proves that you

961
00:36:23,839 --> 00:36:25,839
actually have both or held both at one

962
00:36:25,839 --> 00:36:26,800
point

963
00:36:26,800 --> 00:36:27,760
um

964
00:36:27,760 --> 00:36:30,400
this probably assumes a jose flavored

965
00:36:30,400 --> 00:36:32,720
key format can app technically doesn't

966
00:36:32,720 --> 00:36:35,119
make a strong connection between the key

967
00:36:35,119 --> 00:36:37,680
format and the signing method so you can

968
00:36:37,680 --> 00:36:39,839
do hdb signatures with certificates or

969
00:36:39,839 --> 00:36:41,920
jose with certificates or

970
00:36:41,920 --> 00:36:44,320
signatures with jocks it

971
00:36:44,320 --> 00:36:46,079
can app itself doesn't actually care but

972
00:36:46,079 --> 00:36:48,000
this rotation method kind of presumes a

973
00:36:48,000 --> 00:36:49,839
key format

974
00:36:49,839 --> 00:36:50,960
that's something that we would need to

975
00:36:50,960 --> 00:36:53,200
discuss and figure out

976
00:36:53,200 --> 00:36:54,880
so uh

977
00:36:54,880 --> 00:36:56,240
this this is something that could work

978
00:36:56,240 --> 00:36:59,359
though uh next slide

979
00:36:59,599 --> 00:37:02,000
mtls is definitely an interesting beast

980
00:37:02,000 --> 00:37:04,079
though because you can obviously

981
00:37:04,079 --> 00:37:05,839
really only get away with presenting one

982
00:37:05,839 --> 00:37:08,800
client certificate uh at a time

983
00:37:08,800 --> 00:37:11,359
uh at least as far as i'm aware yarn

984
00:37:11,359 --> 00:37:12,160
might be

985
00:37:12,160 --> 00:37:15,359
giving me a side eye

986
00:37:15,359 --> 00:37:16,800
at this point he's off camera i can't

987
00:37:16,800 --> 00:37:18,560
tell um

988
00:37:18,560 --> 00:37:19,920
but

989
00:37:19,920 --> 00:37:22,400
the thing is with most mtls deployments

990
00:37:22,400 --> 00:37:24,800
uh you're actually already relying on

991
00:37:24,800 --> 00:37:26,720
external certificate management systems

992
00:37:26,720 --> 00:37:29,680
or in pki or there's some other

993
00:37:29,680 --> 00:37:31,359
certificate negotiation thing so

994
00:37:31,359 --> 00:37:34,000
rotation is mostly out of scope for an

995
00:37:34,000 --> 00:37:37,440
mtls type thing that said acme is doing

996
00:37:37,440 --> 00:37:40,400
some interesting work with uh

997
00:37:40,400 --> 00:37:42,960
client certificate uh attestation

998
00:37:42,960 --> 00:37:45,200
extensions uh kathleen moriarty pointed

999
00:37:45,200 --> 00:37:46,240
us to this

1000
00:37:46,240 --> 00:37:48,640
proposed work in acme

1001
00:37:48,640 --> 00:37:50,000
so that's something we might be able to

1002
00:37:50,000 --> 00:37:51,599
follow up with the acme working group if

1003
00:37:51,599 --> 00:37:53,040
there's something that they're working

1004
00:37:53,040 --> 00:37:55,440
on that we can leverage to say hey if

1005
00:37:55,440 --> 00:37:57,280
you need to do programmatic rotation

1006
00:37:57,280 --> 00:37:59,040
with mtls

1007
00:37:59,040 --> 00:38:02,160
go do this acme thing and this is how

1008
00:38:02,160 --> 00:38:05,760
you present it as part of the protocol

1009
00:38:05,760 --> 00:38:08,480
next slide please

1010
00:38:08,480 --> 00:38:10,800
this raises some interesting questions

1011
00:38:10,800 --> 00:38:14,160
specifically if i have a

1012
00:38:14,160 --> 00:38:17,040
a token that's bound to say

1013
00:38:17,040 --> 00:38:19,680
the detached jose method could i change

1014
00:38:19,680 --> 00:38:21,760
that to use http signatures with a

1015
00:38:21,760 --> 00:38:23,440
different key

1016
00:38:23,440 --> 00:38:26,000
this um

1017
00:38:26,000 --> 00:38:28,880
this means that it's uh

1018
00:38:28,880 --> 00:38:30,800
that i'd be able to change out not only

1019
00:38:30,800 --> 00:38:34,560
the key but how it's getting presented

1020
00:38:34,960 --> 00:38:36,720
when we were looking at sort of the

1021
00:38:36,720 --> 00:38:40,079
grand unified key rotation idea uh which

1022
00:38:40,079 --> 00:38:42,560
i mentioned we had we we have since

1023
00:38:42,560 --> 00:38:45,119
walked away from that uh that idea

1024
00:38:45,119 --> 00:38:49,440
uh when we were looking at that um

1025
00:38:49,440 --> 00:38:51,359
this this was kind of in our mind of

1026
00:38:51,359 --> 00:38:53,280
like you're swapping out like this

1027
00:38:53,280 --> 00:38:55,599
entire chunk of how i prove the key

1028
00:38:55,599 --> 00:38:58,720
versus how uh versus like and what the

1029
00:38:58,720 --> 00:39:00,400
key itself actually is

1030
00:39:00,400 --> 00:39:01,839
all at once

1031
00:39:01,839 --> 00:39:03,440
um

1032
00:39:03,440 --> 00:39:07,760
but the thing is if we allow this uh it

1033
00:39:07,760 --> 00:39:09,520
what does that combination actually look

1034
00:39:09,520 --> 00:39:11,440
like what would the syntax look like to

1035
00:39:11,440 --> 00:39:12,800
change from

1036
00:39:12,800 --> 00:39:14,880
jose to huv6

1037
00:39:14,880 --> 00:39:18,000
like are you using http sig to sign a

1038
00:39:18,000 --> 00:39:19,839
header of the jose

1039
00:39:19,839 --> 00:39:22,480
object or because it's in the body the

1040
00:39:22,480 --> 00:39:24,640
jose object is fine

1041
00:39:24,640 --> 00:39:26,000
and how do you do it in the other

1042
00:39:26,000 --> 00:39:27,520
direction

1043
00:39:27,520 --> 00:39:30,240
do you apply a signature and then

1044
00:39:30,240 --> 00:39:32,720
put that into the payload of a jose

1045
00:39:32,720 --> 00:39:35,280
object it gets it gets weird really

1046
00:39:35,280 --> 00:39:37,440
really fast and it also opens the

1047
00:39:37,440 --> 00:39:39,599
question of somebody invents a new

1048
00:39:39,599 --> 00:39:41,760
proofing method which

1049
00:39:41,760 --> 00:39:43,760
we expect that to happen

1050
00:39:43,760 --> 00:39:45,200
um

1051
00:39:45,200 --> 00:39:46,480
you know

1052
00:39:46,480 --> 00:39:48,960
what does that actually

1053
00:39:48,960 --> 00:39:50,480
look like what does that grid look like

1054
00:39:50,480 --> 00:39:53,560
as that m by m grid of of

1055
00:39:53,560 --> 00:39:56,000
transformations happens what does that

1056
00:39:56,000 --> 00:39:58,720
look like so the proposal is

1057
00:39:58,720 --> 00:40:01,040
we actually just keep this fixed

1058
00:40:01,040 --> 00:40:03,680
so that we can kind of avoid all of

1059
00:40:03,680 --> 00:40:05,359
these questions and say once you have a

1060
00:40:05,359 --> 00:40:07,280
proofing method you're sticking with

1061
00:40:07,280 --> 00:40:08,480
that method

1062
00:40:08,480 --> 00:40:10,560
but you can change out the key

1063
00:40:10,560 --> 00:40:12,079
and we're going to we're going to

1064
00:40:12,079 --> 00:40:14,800
require every method to define a way

1065
00:40:14,800 --> 00:40:16,319
including extensions

1066
00:40:16,319 --> 00:40:18,560
to define some way to manage key

1067
00:40:18,560 --> 00:40:21,920
rotation or say that key rotation is

1068
00:40:21,920 --> 00:40:23,839
specifically not supported within the

1069
00:40:23,839 --> 00:40:25,359
protocol

1070
00:40:25,359 --> 00:40:27,920
um but you have to like declare that

1071
00:40:27,920 --> 00:40:29,200
somehow

1072
00:40:29,200 --> 00:40:32,800
so that's our proposal for for that uh

1073
00:40:32,800 --> 00:40:35,200
we would like feedback on this uh and

1074
00:40:35,200 --> 00:40:37,200
this is a discussion that we plan to

1075
00:40:37,200 --> 00:40:38,880
bring to the list with uh with a bit

1076
00:40:38,880 --> 00:40:40,560
more of a write-up

1077
00:40:40,560 --> 00:40:43,839
um next slide please

1078
00:40:45,280 --> 00:40:47,599
so this uh does bring up a related

1079
00:40:47,599 --> 00:40:49,599
question uh that's been brought up a few

1080
00:40:49,599 --> 00:40:53,839
times as a use case for kidnap

1081
00:40:54,079 --> 00:40:56,560
what if you want to use a different key

1082
00:40:56,560 --> 00:40:59,599
for the access token than you

1083
00:40:59,599 --> 00:41:02,000
when talking to the rs then

1084
00:41:02,000 --> 00:41:04,960
what you use when talking to the as

1085
00:41:04,960 --> 00:41:07,359
this is something that uh it seems a lot

1086
00:41:07,359 --> 00:41:10,640
of people want to be able to do um

1087
00:41:10,640 --> 00:41:14,000
uh at least at least in theory uh but it

1088
00:41:14,000 --> 00:41:15,839
when you're separating these it does

1089
00:41:15,839 --> 00:41:18,240
raise some uh tough questions of you

1090
00:41:18,240 --> 00:41:20,720
know do we require that the client can

1091
00:41:20,720 --> 00:41:23,280
use the rs facing key at the as

1092
00:41:23,280 --> 00:41:25,680
which means that the as needs to be able

1093
00:41:25,680 --> 00:41:28,000
to validate that key

1094
00:41:28,000 --> 00:41:29,280
um

1095
00:41:29,280 --> 00:41:32,079
and it might not always have the ability

1096
00:41:32,079 --> 00:41:34,319
the same ability to do so if the as rs

1097
00:41:34,319 --> 00:41:36,240
are in different domains and

1098
00:41:36,240 --> 00:41:38,000
you know whatever reasoning you have for

1099
00:41:38,000 --> 00:41:40,319
having a separate key for the rs as well

1100
00:41:40,319 --> 00:41:42,000
um so

1101
00:41:42,000 --> 00:41:43,920
that all needs to be considered

1102
00:41:43,920 --> 00:41:46,079
technically if you get into the syntax

1103
00:41:46,079 --> 00:41:49,920
of gnapp you could kind of do this now

1104
00:41:49,920 --> 00:41:52,400
but we don't actually say how to do this

1105
00:41:52,400 --> 00:41:56,160
or or what anybody is supposed to expect

1106
00:41:56,160 --> 00:41:57,440
in this uh

1107
00:41:57,440 --> 00:42:00,319
you know in this circumstance so we this

1108
00:42:00,319 --> 00:42:02,480
this does need to be nailed down and it

1109
00:42:02,480 --> 00:42:04,560
feels like it's going to be very related

1110
00:42:04,560 --> 00:42:05,359
to

1111
00:42:05,359 --> 00:42:06,400
the whole

1112
00:42:06,400 --> 00:42:08,240
uh key rotation thing because you're

1113
00:42:08,240 --> 00:42:09,839
presenting multiple keys at the same

1114
00:42:09,839 --> 00:42:11,760
time and figuring out what to do with

1115
00:42:11,760 --> 00:42:13,839
with each of them so this is a separate

1116
00:42:13,839 --> 00:42:15,440
issue from key rotation but we think

1117
00:42:15,440 --> 00:42:16,960
it's all kind of going to be tied

1118
00:42:16,960 --> 00:42:17,920
together

1119
00:42:17,920 --> 00:42:21,119
speaking of next slide

1120
00:42:21,599 --> 00:42:23,760
client instance management is another

1121
00:42:23,760 --> 00:42:26,000
thing that has come up so uh if i

1122
00:42:26,000 --> 00:42:28,640
dynamically show up with a client it

1123
00:42:28,640 --> 00:42:30,960
sends and say you know here's my key

1124
00:42:30,960 --> 00:42:32,800
here's everything i can get back thanks

1125
00:42:32,800 --> 00:42:36,640
aaron a um an instance identifier

1126
00:42:36,640 --> 00:42:38,240
um

1127
00:42:38,240 --> 00:42:40,240
oauth has the dynamic client

1128
00:42:40,240 --> 00:42:42,560
registration protocol but also the

1129
00:42:42,560 --> 00:42:44,560
separate dynamic client registration

1130
00:42:44,560 --> 00:42:47,680
management protocol in a separate rfc

1131
00:42:47,680 --> 00:42:49,359
um

1132
00:42:49,359 --> 00:42:50,800
and

1133
00:42:50,800 --> 00:42:52,319
in ganap

1134
00:42:52,319 --> 00:42:54,480
we realized that we could actually have

1135
00:42:54,480 --> 00:42:55,359
a

1136
00:42:55,359 --> 00:42:56,240
um

1137
00:42:56,240 --> 00:42:58,640
use a very similar pattern to what we're

1138
00:42:58,640 --> 00:43:00,319
doing elsewhere in the protocol for

1139
00:43:00,319 --> 00:43:02,400
grant continuation and the like

1140
00:43:02,400 --> 00:43:03,680
and just

1141
00:43:03,680 --> 00:43:07,040
hand the client back a uri and a special

1142
00:43:07,040 --> 00:43:09,839
access token to use at that uri to

1143
00:43:09,839 --> 00:43:10,839
manage

1144
00:43:10,839 --> 00:43:13,839
itself and next slide please

1145
00:43:13,839 --> 00:43:17,359
we just define a restful or rest ish uh

1146
00:43:17,359 --> 00:43:19,680
api for the client to change its

1147
00:43:19,680 --> 00:43:22,800
properties to rotate its keys using the

1148
00:43:22,800 --> 00:43:24,800
same probably the same kinds of syntax

1149
00:43:24,800 --> 00:43:27,520
as previously um

1150
00:43:27,520 --> 00:43:28,319
and

1151
00:43:28,319 --> 00:43:30,480
uh you know change its display name and

1152
00:43:30,480 --> 00:43:32,160
the home page and all of that other

1153
00:43:32,160 --> 00:43:33,119
stuff

1154
00:43:33,119 --> 00:43:35,359
um anything that would be associated

1155
00:43:35,359 --> 00:43:38,079
with the client uh and and that dynamic

1156
00:43:38,079 --> 00:43:40,800
identifier um

1157
00:43:40,800 --> 00:43:43,280
could be done through this api

1158
00:43:43,280 --> 00:43:45,440
um we've got

1159
00:43:45,440 --> 00:43:46,880
all of the places that we need to hang

1160
00:43:46,880 --> 00:43:49,119
it we need to decide whether this is

1161
00:43:49,119 --> 00:43:50,640
something that goes in the core whether

1162
00:43:50,640 --> 00:43:52,160
it's an extension and whether this is

1163
00:43:52,160 --> 00:43:54,160
something that people actually want to

1164
00:43:54,160 --> 00:43:56,319
use

1165
00:43:56,319 --> 00:43:59,119
next slide please

1166
00:43:59,200 --> 00:44:02,880
all right this is fabienne's part so

1167
00:44:02,880 --> 00:44:04,720
uh before we move on any questions on

1168
00:44:04,720 --> 00:44:09,839
the keys the clients any of those bits

1169
00:44:15,280 --> 00:44:17,440
very quiet crowd today

1170
00:44:17,440 --> 00:44:18,960
everybody's in the outside meeting i

1171
00:44:18,960 --> 00:44:19,760
think

1172
00:44:19,760 --> 00:44:21,040
or is that no wait no that's this

1173
00:44:21,040 --> 00:44:23,839
afternoon

1174
00:44:24,160 --> 00:44:27,279
all right go ahead fabian

1175
00:44:28,480 --> 00:44:31,359
hi we hear me

1176
00:44:32,240 --> 00:44:34,160
okay it's a little bit can you say

1177
00:44:34,160 --> 00:44:36,480
something else because

1178
00:44:36,480 --> 00:44:39,440
your audio is a little bit low

1179
00:44:39,440 --> 00:44:42,160
it's a bit low

1180
00:44:48,319 --> 00:44:51,520
okay i'll try to speak louder um so yeah

1181
00:44:51,520 --> 00:44:53,599
the idea is to discuss about the token

1182
00:44:53,599 --> 00:44:56,480
model i'll need some hand also just like

1183
00:44:56,480 --> 00:44:58,720
uh justin did because i don't have

1184
00:44:58,720 --> 00:45:00,160
access to the slides

1185
00:45:00,160 --> 00:45:04,040
so i'm like please

1186
00:45:09,839 --> 00:45:12,839
aaron

1187
00:45:31,119 --> 00:45:34,560
hello yeah i can hear you just fine uh

1188
00:45:34,560 --> 00:45:35,440
yeah

1189
00:45:35,440 --> 00:45:38,480
i don't know if the room can um

1190
00:45:38,480 --> 00:45:39,760
so

1191
00:45:39,760 --> 00:45:41,599
i'm not sure who was running slides for

1192
00:45:41,599 --> 00:45:43,440
me

1193
00:45:43,440 --> 00:45:45,119
do you want to take the slide control

1194
00:45:45,119 --> 00:45:47,839
fabian

1195
00:45:49,040 --> 00:45:50,720
i'm happy to press next slide for you if

1196
00:45:50,720 --> 00:45:53,760
you want but you can also take control

1197
00:45:53,760 --> 00:45:55,920
right do you hear me

1198
00:45:55,920 --> 00:45:58,160
yeah yes

1199
00:45:58,160 --> 00:46:01,119
so i need to i need a hand you actually

1200
00:46:01,119 --> 00:46:04,920
change the slide please

1201
00:46:14,880 --> 00:46:17,880
um

1202
00:46:45,440 --> 00:46:47,599
hello

1203
00:46:47,599 --> 00:46:50,160
yes but yeah you're coming across it

1204
00:46:50,160 --> 00:46:51,680
it's a little bit low but it is coming

1205
00:46:51,680 --> 00:46:52,800
across so

1206
00:46:52,800 --> 00:46:54,880
if you speak up from three clearly it

1207
00:46:54,880 --> 00:46:57,839
will probably work

1208
00:47:06,640 --> 00:47:10,000
fabian can you actually hear us

1209
00:47:10,000 --> 00:47:13,599
yeah fabian can you hear us

1210
00:47:15,040 --> 00:47:18,400
well yes thank you um

1211
00:47:18,400 --> 00:47:20,880
is there someone that could actually

1212
00:47:20,880 --> 00:47:21,839
change

1213
00:47:21,839 --> 00:47:23,920
the slide because i don't have access to

1214
00:47:23,920 --> 00:47:26,079
the

1215
00:47:26,400 --> 00:47:30,079
slide deck okay thank you very much

1216
00:47:30,160 --> 00:47:33,280
okay that's fine uh so yeah that part of

1217
00:47:33,280 --> 00:47:35,760
of the discussion is actually very open

1218
00:47:35,760 --> 00:47:37,359
it's actually because we've got some

1219
00:47:37,359 --> 00:47:40,160
issues on the rs draft so second part

1220
00:47:40,160 --> 00:47:42,400
actually of the work we're doing

1221
00:47:42,400 --> 00:47:44,880
and issue 15 you've got the link into

1222
00:47:44,880 --> 00:47:46,880
the slides it's actually

1223
00:47:46,880 --> 00:47:49,680
discussing about the generic format

1224
00:47:49,680 --> 00:47:51,839
maybe as an appendix maybe as something

1225
00:47:51,839 --> 00:47:53,760
that's non-normative

1226
00:47:53,760 --> 00:47:55,680
that could be actually used for

1227
00:47:55,680 --> 00:47:58,240
implementation guidance so that we could

1228
00:47:58,240 --> 00:47:59,760
actually relate to that when we're

1229
00:47:59,760 --> 00:48:01,599
actually designing

1230
00:48:01,599 --> 00:48:04,319
uh what we need in in in the access

1231
00:48:04,319 --> 00:48:06,240
token

1232
00:48:06,240 --> 00:48:07,760
and

1233
00:48:07,760 --> 00:48:11,280
we do think that it's a good idea we are

1234
00:48:11,280 --> 00:48:13,119
looking more for something like a token

1235
00:48:13,119 --> 00:48:15,359
model instead of something like a token

1236
00:48:15,359 --> 00:48:17,119
format itself

1237
00:48:17,119 --> 00:48:19,599
um but we do think it makes sense and

1238
00:48:19,599 --> 00:48:22,160
the idea is to actually open open the

1239
00:48:22,160 --> 00:48:23,839
floor at the end to

1240
00:48:23,839 --> 00:48:27,040
to get your your feedback on that

1241
00:48:27,040 --> 00:48:30,079
next slide please

1242
00:48:30,240 --> 00:48:32,079
so what we've got in the eras draft

1243
00:48:32,079 --> 00:48:34,960
today is uh token a list of token

1244
00:48:34,960 --> 00:48:38,240
formats that we have some it's just an

1245
00:48:38,240 --> 00:48:40,640
id list for now it's very unstable it's

1246
00:48:40,640 --> 00:48:42,000
as of today

1247
00:48:42,000 --> 00:48:44,000
and it's it's not written in stone so it

1248
00:48:44,000 --> 00:48:45,280
can change

1249
00:48:45,280 --> 00:48:47,119
but typically today we would have a

1250
00:48:47,119 --> 00:48:49,680
registry that would contain some some

1251
00:48:49,680 --> 00:48:50,559
things

1252
00:48:50,559 --> 00:48:53,520
like judge sign just encrypted so that's

1253
00:48:53,520 --> 00:48:55,119
fairly obvious

1254
00:48:55,119 --> 00:48:56,160
and then

1255
00:48:56,160 --> 00:48:59,040
open the the possibility to other types

1256
00:48:59,040 --> 00:49:00,160
of

1257
00:49:00,160 --> 00:49:01,680
formats

1258
00:49:01,680 --> 00:49:06,000
like macaroons and biscuits or z-caps

1259
00:49:06,000 --> 00:49:08,720
which actually providing different types

1260
00:49:08,720 --> 00:49:11,280
of of features and we'll see that in a

1261
00:49:11,280 --> 00:49:12,640
minute

1262
00:49:12,640 --> 00:49:16,279
next slide please

1263
00:49:19,760 --> 00:49:22,480
um so just to give you an idea that many

1264
00:49:22,480 --> 00:49:25,280
other types of token formats exist

1265
00:49:25,280 --> 00:49:27,359
you've got a link to your podcast on the

1266
00:49:27,359 --> 00:49:28,240
blog

1267
00:49:28,240 --> 00:49:29,040
which

1268
00:49:29,040 --> 00:49:31,760
was done by fly.io so it's not mine it's

1269
00:49:31,760 --> 00:49:34,319
just something as a reference to give

1270
00:49:34,319 --> 00:49:36,000
you some ideas on

1271
00:49:36,000 --> 00:49:38,559
other types of of

1272
00:49:38,559 --> 00:49:41,280
of token formats so obviously you you

1273
00:49:41,280 --> 00:49:44,480
get dirt inside them you've got pasito

1274
00:49:44,480 --> 00:49:45,520
which is

1275
00:49:45,520 --> 00:49:46,400
well

1276
00:49:46,400 --> 00:49:48,960
some people like it some some don't uh

1277
00:49:48,960 --> 00:49:50,640
and so on and you've got macaroon and

1278
00:49:50,640 --> 00:49:52,720
biscuits which are described also in in

1279
00:49:52,720 --> 00:49:54,720
that document

1280
00:49:54,720 --> 00:49:56,480
and of course it gets into more detail

1281
00:49:56,480 --> 00:49:58,720
but the idea is where you're very used

1282
00:49:58,720 --> 00:50:01,599
to using jot it's obviously everywhere

1283
00:50:01,599 --> 00:50:04,800
but in some cases uh it's maybe not the

1284
00:50:04,800 --> 00:50:07,359
the best format in some cases you need

1285
00:50:07,359 --> 00:50:09,200
those of things and it's not

1286
00:50:09,200 --> 00:50:11,599
what we'd like to do is to actually open

1287
00:50:11,599 --> 00:50:14,640
the possibility for evolution uh even in

1288
00:50:14,640 --> 00:50:17,040
the jose world

1289
00:50:17,040 --> 00:50:18,079
but then

1290
00:50:18,079 --> 00:50:20,480
uh of course we need to check

1291
00:50:20,480 --> 00:50:24,480
what's inside each type of format and

1292
00:50:24,480 --> 00:50:26,640
that's one or so of the reasons for

1293
00:50:26,640 --> 00:50:29,359
uh discussing uh token models instead of

1294
00:50:29,359 --> 00:50:32,800
token formats it's also to be able to

1295
00:50:32,800 --> 00:50:34,000
guide

1296
00:50:34,000 --> 00:50:36,720
in terms of information that's inserted

1297
00:50:36,720 --> 00:50:40,000
into into our token but not mandate some

1298
00:50:40,000 --> 00:50:42,079
specific implementations

1299
00:50:42,079 --> 00:50:44,960
next slide please

1300
00:50:45,440 --> 00:50:46,880
so what's the difference between a

1301
00:50:46,880 --> 00:50:48,800
format and a model as we as as we

1302
00:50:48,800 --> 00:50:51,040
understand it the token format is well

1303
00:50:51,040 --> 00:50:53,280
in our case it's typically a jot but

1304
00:50:53,280 --> 00:50:56,079
other formats exist as we've seen

1305
00:50:56,079 --> 00:50:57,760
and the reasons why we want to

1306
00:50:57,760 --> 00:50:59,760
accommodate various formats so the first

1307
00:50:59,760 --> 00:51:02,079
one obviously is the productivity

1308
00:51:02,079 --> 00:51:04,160
and i've put at the end on appendix for

1309
00:51:04,160 --> 00:51:06,839
jose examples for instance new work

1310
00:51:06,839 --> 00:51:08,559
items

1311
00:51:08,559 --> 00:51:10,480
like json proofs and

1312
00:51:10,480 --> 00:51:11,760
well a lot of

1313
00:51:11,760 --> 00:51:14,319
other works which are related here

1314
00:51:14,319 --> 00:51:16,720
and also the revolutions in the jersey

1315
00:51:16,720 --> 00:51:19,599
world for post quantum

1316
00:51:19,599 --> 00:51:21,599
possibilities so that's only beginning

1317
00:51:21,599 --> 00:51:25,359
but we see that this need for more

1318
00:51:25,359 --> 00:51:28,000
uh going on in the space and then we've

1319
00:51:28,000 --> 00:51:30,880
got different use cases so jot is adding

1320
00:51:30,880 --> 00:51:33,680
proofs probably and and then you've got

1321
00:51:33,680 --> 00:51:36,160
macaron and biscuits which have a

1322
00:51:36,160 --> 00:51:37,839
different way of working so it's

1323
00:51:37,839 --> 00:51:40,400
abstractive instead of additive and for

1324
00:51:40,400 --> 00:51:42,240
instance you can implement things which

1325
00:51:42,240 --> 00:51:44,079
are not available in jots like

1326
00:51:44,079 --> 00:51:46,880
attenuation capabilities so an example

1327
00:51:46,880 --> 00:51:47,760
is

1328
00:51:47,760 --> 00:51:50,720
maybe an i'm an administrator from for a

1329
00:51:50,720 --> 00:51:53,599
building i actually give some

1330
00:51:53,599 --> 00:51:56,880
biscuits or my carrots to

1331
00:51:56,880 --> 00:51:58,640
my employees

1332
00:51:58,640 --> 00:52:00,480
and then they can actually attenuate the

1333
00:52:00,480 --> 00:52:02,880
token to just limit it to some part of

1334
00:52:02,880 --> 00:52:05,440
the building that could be accessed by

1335
00:52:05,440 --> 00:52:07,359
someone that's external to the building

1336
00:52:07,359 --> 00:52:09,359
that's external to the company that's

1337
00:52:09,359 --> 00:52:11,440
the type of things you could do

1338
00:52:11,440 --> 00:52:14,640
it requires offline delegation in some

1339
00:52:14,640 --> 00:52:16,319
parts so it's it's really a compliment

1340
00:52:16,319 --> 00:52:18,559
to what we're doing with that

1341
00:52:18,559 --> 00:52:20,559
so in some cases it can be useful in

1342
00:52:20,559 --> 00:52:22,559
some cases it's not obviously it just

1343
00:52:22,559 --> 00:52:24,559
remains the main

1344
00:52:24,559 --> 00:52:26,000
useful

1345
00:52:26,000 --> 00:52:28,480
token obviously but

1346
00:52:28,480 --> 00:52:30,720
it makes sense in some cases to not

1347
00:52:30,720 --> 00:52:32,720
mandate data specific format

1348
00:52:32,720 --> 00:52:34,559
so a token model instead is really

1349
00:52:34,559 --> 00:52:36,640
information that's typically shared by

1350
00:52:36,640 --> 00:52:39,119
implementations whatever they are

1351
00:52:39,119 --> 00:52:42,720
and so we that's really the focus here

1352
00:52:42,720 --> 00:52:46,000
next slide please

1353
00:52:46,000 --> 00:52:48,400
so where should we describe the model um

1354
00:52:48,400 --> 00:52:50,640
the first possibility in the course pack

1355
00:52:50,640 --> 00:52:52,720
uh so in the course pack you've got the

1356
00:52:52,720 --> 00:52:55,280
link here to appendix c which is on the

1357
00:52:55,280 --> 00:52:57,520
component data orders and for instance

1358
00:52:57,520 --> 00:52:59,359
it's just a note right now it's not

1359
00:52:59,359 --> 00:53:01,760
written in in the following way

1360
00:53:01,760 --> 00:53:04,800
but for instance we we refer to to be

1361
00:53:04,800 --> 00:53:06,400
done for the

1362
00:53:06,400 --> 00:53:08,240
to be described for the token so the

1363
00:53:08,240 --> 00:53:11,680
token has a resource owner it has a user

1364
00:53:11,680 --> 00:53:15,839
a client some resource list a list of rs

1365
00:53:15,839 --> 00:53:19,040
servers etc

1366
00:53:19,040 --> 00:53:20,960
and and we could probably detail the

1367
00:53:20,960 --> 00:53:23,040
token model there

1368
00:53:23,040 --> 00:53:26,400
we could also provide a summary the

1369
00:53:26,400 --> 00:53:29,520
thing is the core spec is already quite

1370
00:53:29,520 --> 00:53:30,480
long

1371
00:53:30,480 --> 00:53:33,119
so it it needs to be there only if it's

1372
00:53:33,119 --> 00:53:36,400
really uh completely

1373
00:53:36,880 --> 00:53:38,880
well it's if it's highly important in

1374
00:53:38,880 --> 00:53:42,400
that in that specific spec

1375
00:53:42,400 --> 00:53:44,480
the second possibility especially since

1376
00:53:44,480 --> 00:53:47,520
the issue is is actually on the rs draft

1377
00:53:47,520 --> 00:53:49,760
itself is that the errors draft might be

1378
00:53:49,760 --> 00:53:52,400
a better place order

1379
00:53:52,400 --> 00:53:54,400
it's it's very open here it's it's not

1380
00:53:54,400 --> 00:53:56,880
completely clear but it could be

1381
00:53:56,880 --> 00:53:59,119
described here for the model as part of

1382
00:53:59,119 --> 00:54:01,760
the context of the arrest draft

1383
00:54:01,760 --> 00:54:04,240
and it it might be a good way to

1384
00:54:04,240 --> 00:54:05,599
actually have a link

1385
00:54:05,599 --> 00:54:07,280
and and the description between the

1386
00:54:07,280 --> 00:54:09,520
model and the supported format since we

1387
00:54:09,520 --> 00:54:12,240
since in the errors draft we already

1388
00:54:12,240 --> 00:54:14,880
described the the support the ones which

1389
00:54:14,880 --> 00:54:16,640
are supported

1390
00:54:16,640 --> 00:54:17,760
um

1391
00:54:17,760 --> 00:54:20,160
of course that's the question of how do

1392
00:54:20,160 --> 00:54:22,960
we actually make the mapping to the

1393
00:54:22,960 --> 00:54:25,119
explicit schema

1394
00:54:25,119 --> 00:54:27,440
it's i'm not really sure that it's it's

1395
00:54:27,440 --> 00:54:29,200
meaningful to actually do that but at

1396
00:54:29,200 --> 00:54:31,599
least doing the exercise externally is

1397
00:54:31,599 --> 00:54:33,280
important we need to make sure it can be

1398
00:54:33,280 --> 00:54:34,880
done

1399
00:54:34,880 --> 00:54:38,000
next slide please

1400
00:54:38,000 --> 00:54:40,160
so what's an access token value um

1401
00:54:40,160 --> 00:54:42,400
that's important to have in mind uh

1402
00:54:42,400 --> 00:54:45,520
that's really what we what we use in the

1403
00:54:45,520 --> 00:54:47,200
in the course spec

1404
00:54:47,200 --> 00:54:49,280
and as a reminder the access token is

1405
00:54:49,280 --> 00:54:51,200
really your pack to the client so it the

1406
00:54:51,200 --> 00:54:52,960
client doesn't need to know what's

1407
00:54:52,960 --> 00:54:55,599
inside the token itself you just need to

1408
00:54:55,599 --> 00:54:57,599
actually be able to receive it

1409
00:54:57,599 --> 00:55:01,359
and then send it to the resource server

1410
00:55:01,359 --> 00:55:03,040
and in the course pack so you've got

1411
00:55:03,040 --> 00:55:04,119
section

1412
00:55:04,119 --> 00:55:07,200
3.2.1 on the access token where you do

1413
00:55:07,200 --> 00:55:09,920
find a description on what's value

1414
00:55:09,920 --> 00:55:13,839
that's required at that point

1415
00:55:13,839 --> 00:55:16,559
and in the es response we also have a

1416
00:55:16,559 --> 00:55:18,240
lot of information that's that's

1417
00:55:18,240 --> 00:55:20,480
important we have metadata on what the

1418
00:55:20,480 --> 00:55:22,559
value means so we've got a label we've

1419
00:55:22,559 --> 00:55:25,280
got associated rights which is actually

1420
00:55:25,280 --> 00:55:26,559
an array

1421
00:55:26,559 --> 00:55:28,960
we've got technical data as well like a

1422
00:55:28,960 --> 00:55:30,240
key

1423
00:55:30,240 --> 00:55:33,520
some information on the expiry the flags

1424
00:55:33,520 --> 00:55:36,240
manage url etc so

1425
00:55:36,240 --> 00:55:38,160
you do find a lot of information on the

1426
00:55:38,160 --> 00:55:40,960
access token already in in the api

1427
00:55:40,960 --> 00:55:43,839
that's provided in the course pack

1428
00:55:43,839 --> 00:55:47,400
next slide please

1429
00:55:51,119 --> 00:55:53,359
so then you've got token introspection

1430
00:55:53,359 --> 00:55:56,319
um so that's actually provided in the rs

1431
00:55:56,319 --> 00:55:59,119
draft in section 3.3

1432
00:55:59,119 --> 00:56:01,440
and as a reminder so that's already in

1433
00:56:01,440 --> 00:56:04,799
in the course pack a token maybe appear

1434
00:56:04,799 --> 00:56:07,680
or it could be keybound and the key the

1435
00:56:07,680 --> 00:56:10,480
default is is that it is keybond

1436
00:56:10,480 --> 00:56:13,680
and um and then in the errors draft

1437
00:56:13,680 --> 00:56:16,640
you do find some information on how to

1438
00:56:16,640 --> 00:56:18,640
do token introspection

1439
00:56:18,640 --> 00:56:20,559
so the types of parameters that you're

1440
00:56:20,559 --> 00:56:22,400
actually going to

1441
00:56:22,400 --> 00:56:25,359
provide so you've got access tokens

1442
00:56:25,359 --> 00:56:26,480
you've got

1443
00:56:26,480 --> 00:56:27,839
the proof

1444
00:56:27,839 --> 00:56:29,839
so that's actually something that's

1445
00:56:29,839 --> 00:56:32,160
recommended um

1446
00:56:32,160 --> 00:56:34,559
the thing obviously is

1447
00:56:34,559 --> 00:56:37,359
to be able to be very clear on whether

1448
00:56:37,359 --> 00:56:39,280
you're in a bearer token mode or

1449
00:56:39,280 --> 00:56:40,960
keyboard mode and that's why you've got

1450
00:56:40,960 --> 00:56:43,440
flags in the course pack and then you've

1451
00:56:43,440 --> 00:56:45,119
got the resource server and you've got

1452
00:56:45,119 --> 00:56:46,480
the access

1453
00:56:46,480 --> 00:56:48,480
object

1454
00:56:48,480 --> 00:56:50,799
so that gives you an idea of of what you

1455
00:56:50,799 --> 00:56:52,319
need to do when you're actually

1456
00:56:52,319 --> 00:56:55,680
interested in the the token and that's

1457
00:56:55,680 --> 00:56:57,440
that's the kind of interaction that you

1458
00:56:57,440 --> 00:56:58,559
need to have in mind when you're

1459
00:56:58,559 --> 00:57:00,319
designing that

1460
00:57:00,319 --> 00:57:03,119
next slide please

1461
00:57:03,200 --> 00:57:03,920
so

1462
00:57:03,920 --> 00:57:05,920
the relevant documents now that we need

1463
00:57:05,920 --> 00:57:08,799
to take into account so there's a few um

1464
00:57:08,799 --> 00:57:11,119
it's not an exhaustive list but you've

1465
00:57:11,119 --> 00:57:14,319
got the the scheme schema management for

1466
00:57:14,319 --> 00:57:16,960
identity which is interesting i do find

1467
00:57:16,960 --> 00:57:20,640
a lot of information on the type of

1468
00:57:20,640 --> 00:57:23,119
of attributes that are available then

1469
00:57:23,119 --> 00:57:26,000
you've got a new draft from victorio

1470
00:57:26,000 --> 00:57:27,040
actually

1471
00:57:27,040 --> 00:57:30,799
on the jet profile for all access tokens

1472
00:57:30,799 --> 00:57:32,640
where you do find a header

1473
00:57:32,640 --> 00:57:34,400
with the

1474
00:57:34,400 --> 00:57:36,960
type parameter that's available in there

1475
00:57:36,960 --> 00:57:40,240
and then you've got claims um

1476
00:57:40,240 --> 00:57:42,720
an interesting note here uh i'm not

1477
00:57:42,720 --> 00:57:44,720
entirely sure it's it's a good idea but

1478
00:57:44,720 --> 00:57:47,359
anyway it's just a personal opinion here

1479
00:57:47,359 --> 00:57:50,240
uh you've got some new inf values for

1480
00:57:50,240 --> 00:57:52,839
growers groups entitlements

1481
00:57:52,839 --> 00:57:54,400
etc

1482
00:57:54,400 --> 00:57:55,920
these are actually the three that are

1483
00:57:55,920 --> 00:57:58,319
available

1484
00:57:58,799 --> 00:58:00,720
and then you've got the

1485
00:58:00,720 --> 00:58:02,640
best current practice

1486
00:58:02,640 --> 00:58:04,960
and there's a section in there which is

1487
00:58:04,960 --> 00:58:06,640
quite interesting for us which is quote

1488
00:58:06,640 --> 00:58:09,520
jot confusion and the types of

1489
00:58:09,520 --> 00:58:11,760
mitigations which are available

1490
00:58:11,760 --> 00:58:15,040
especially if you had a token which was

1491
00:58:15,040 --> 00:58:18,079
uh generated in some context like o2 and

1492
00:58:18,079 --> 00:58:19,680
then what would you do if it was

1493
00:58:19,680 --> 00:58:23,760
actually sent over a wire to the

1494
00:58:23,760 --> 00:58:25,200
service

1495
00:58:25,200 --> 00:58:28,480
so next slide please

1496
00:58:29,040 --> 00:58:30,960
and now you do find the mitigations

1497
00:58:30,960 --> 00:58:32,720
which are actually provided in the

1498
00:58:32,720 --> 00:58:34,839
previous document so you've got four

1499
00:58:34,839 --> 00:58:37,760
methods um and that shows you some

1500
00:58:37,760 --> 00:58:39,839
important um

1501
00:58:39,839 --> 00:58:42,559
attributes so of course the issuer the

1502
00:58:42,559 --> 00:58:44,640
subject that's something you need to

1503
00:58:44,640 --> 00:58:47,359
validate same for the audience

1504
00:58:47,359 --> 00:58:48,880
and then

1505
00:58:48,880 --> 00:58:51,200
there's some

1506
00:58:51,200 --> 00:58:53,760
uh recommendation here on christina's

1507
00:58:53,760 --> 00:58:55,599
lane like uh

1508
00:58:55,599 --> 00:58:58,559
the keys uh that are available that's

1509
00:58:58,559 --> 00:59:00,880
you need to to actually make sure that

1510
00:59:00,880 --> 00:59:03,119
you don't take that for granted

1511
00:59:03,119 --> 00:59:05,520
and then the last method which is

1512
00:59:05,520 --> 00:59:08,400
interesting for us is uh to use explicit

1513
00:59:08,400 --> 00:59:10,160
typing and

1514
00:59:10,160 --> 00:59:13,280
this might lead us to define something

1515
00:59:13,280 --> 00:59:14,640
at least for the

1516
00:59:14,640 --> 00:59:19,760
types of formats to not plus chart

1517
00:59:19,760 --> 00:59:21,599
as a proposal

1518
00:59:21,599 --> 00:59:25,200
so next next slide

1519
00:59:25,440 --> 00:59:27,599
um in terms of other relevant documents

1520
00:59:27,599 --> 00:59:28,880
even if you're not looking at the

1521
00:59:28,880 --> 00:59:30,319
formats themselves it's still

1522
00:59:30,319 --> 00:59:31,760
interesting to make sure that the

1523
00:59:31,760 --> 00:59:33,760
mapping is possible so i've looked for

1524
00:59:33,760 --> 00:59:36,090
instance at pasetto

1525
00:59:36,090 --> 00:59:38,720
[Music]

1526
00:59:38,720 --> 00:59:40,720
well which makes

1527
00:59:40,720 --> 00:59:42,480
claims

1528
00:59:42,480 --> 00:59:43,599
on

1529
00:59:43,599 --> 00:59:45,920
jersey method and so on but i don't want

1530
00:59:45,920 --> 00:59:47,760
to get into that it's just to make sure

1531
00:59:47,760 --> 00:59:48,720
that

1532
00:59:48,720 --> 00:59:50,720
other types of format would be would be

1533
00:59:50,720 --> 00:59:52,880
possible in theory at least

1534
00:59:52,880 --> 00:59:54,559
so they are actually providing a they

1535
00:59:54,559 --> 00:59:56,559
don't provide a type they do provide a

1536
00:59:56,559 --> 00:59:57,760
version

1537
00:59:57,760 --> 00:59:59,359
which is fairly equivalent to having

1538
00:59:59,359 --> 01:00:02,079
four new jazz algorithms in some way so

1539
01:00:02,079 --> 01:00:04,079
there's a v3 and a v4 and you've got a

1540
01:00:04,079 --> 01:00:08,559
local and a public type of algorithm

1541
01:00:09,520 --> 01:00:12,400
which supposedly is is a solution for

1542
01:00:12,400 --> 01:00:15,200
the alec methods but actually you still

1543
01:00:15,200 --> 01:00:17,040
need to trust the message to know which

1544
01:00:17,040 --> 01:00:19,359
arg is used so it doesn't really solve

1545
01:00:19,359 --> 01:00:21,280
the main issue

1546
01:00:21,280 --> 01:00:23,520
since you can still change the

1547
01:00:23,520 --> 01:00:24,880
algorithm

1548
01:00:24,880 --> 01:00:26,319
and you've got the purpose which is

1549
01:00:26,319 --> 01:00:28,960
similar to the audience so an idea of

1550
01:00:28,960 --> 01:00:31,119
audience makes sense obviously then

1551
01:00:31,119 --> 01:00:32,799
you've got the payload and then you've

1552
01:00:32,799 --> 01:00:34,799
got the footer and the footer

1553
01:00:34,799 --> 01:00:36,960
interestingly is is mainly used for key

1554
01:00:36,960 --> 01:00:39,200
rotation in that case so

1555
01:00:39,200 --> 01:00:42,160
it gets sets back to the previous

1556
01:00:42,160 --> 01:00:44,720
discussion on key rotation

1557
01:00:44,720 --> 01:00:46,799
another example is biscuits

1558
01:00:46,799 --> 01:00:48,880
so here you've got only one

1559
01:00:48,880 --> 01:00:52,000
cryptographic method

1560
01:00:52,240 --> 01:00:54,799
and you've got a data log engine so it's

1561
01:00:54,799 --> 01:00:56,640
actually a bit more advanced in terms of

1562
01:00:56,640 --> 01:00:58,720
how you actually process claims it's not

1563
01:00:58,720 --> 01:00:59,599
just

1564
01:00:59,599 --> 01:01:02,880
a schema it it's actually got a

1565
01:01:02,880 --> 01:01:05,280
an engine that's that's underlying so

1566
01:01:05,280 --> 01:01:08,400
you've got blocks you've got base types

1567
01:01:08,400 --> 01:01:10,720
like you can have dates and

1568
01:01:10,720 --> 01:01:13,280
and and a lot of different information

1569
01:01:13,280 --> 01:01:15,200
there and that that's actually what

1570
01:01:15,200 --> 01:01:17,200
gives you some additional capabilities

1571
01:01:17,200 --> 01:01:18,079
like

1572
01:01:18,079 --> 01:01:19,680
uh very for instance you could have

1573
01:01:19,680 --> 01:01:21,839
third party blocks which actually come

1574
01:01:21,839 --> 01:01:25,119
from some external source that you can

1575
01:01:25,119 --> 01:01:26,799
check for instance

1576
01:01:26,799 --> 01:01:29,119
and then you you do find

1577
01:01:29,119 --> 01:01:31,359
unique identifiers and especially for

1578
01:01:31,359 --> 01:01:33,760
the revocation id so you do find

1579
01:01:33,760 --> 01:01:35,760
something that's related to something

1580
01:01:35,760 --> 01:01:37,599
that looks like

1581
01:01:37,599 --> 01:01:39,599
gty

1582
01:01:39,599 --> 01:01:42,559
next slide please

1583
01:01:43,200 --> 01:01:45,760
um and so what's different in gnapp

1584
01:01:45,760 --> 01:01:47,520
so the main difference obviously is

1585
01:01:47,520 --> 01:01:50,880
client id from or2 becomes client and

1586
01:01:50,880 --> 01:01:52,640
scope becomes access so that's really

1587
01:01:52,640 --> 01:01:54,559
the main difference

1588
01:01:54,559 --> 01:01:57,520
and so you do find on on the right part

1589
01:01:57,520 --> 01:01:58,640
of the screen

1590
01:01:58,640 --> 01:02:01,440
uh what you've got typically in in the

1591
01:02:01,440 --> 01:02:04,160
what word like issuer the subject the

1592
01:02:04,160 --> 01:02:05,440
audience

1593
01:02:05,440 --> 01:02:08,480
that's something that's fairly classical

1594
01:02:08,480 --> 01:02:10,000
that you would find pretty much

1595
01:02:10,000 --> 01:02:12,480
everywhere

1596
01:02:12,960 --> 01:02:16,079
gti is also something interesting um not

1597
01:02:16,079 --> 01:02:18,319
sure we we we should if we want

1598
01:02:18,319 --> 01:02:20,480
something that's completely generic gti

1599
01:02:20,480 --> 01:02:22,480
in some implementation it's

1600
01:02:22,480 --> 01:02:24,559
it's really linked to json in some cases

1601
01:02:24,559 --> 01:02:26,319
it's it's not the way you want to

1602
01:02:26,319 --> 01:02:27,599
implement that

1603
01:02:27,599 --> 01:02:29,359
from the previous examples but anyway

1604
01:02:29,359 --> 01:02:31,359
that's the kind of thing you would find

1605
01:02:31,359 --> 01:02:33,359
client is is fairly obvious it's just a

1606
01:02:33,359 --> 01:02:35,839
name change between client id and client

1607
01:02:35,839 --> 01:02:38,799
so it's it's very trivial

1608
01:02:38,799 --> 01:02:40,160
access

1609
01:02:40,160 --> 01:02:42,799
obviously you can embed that within your

1610
01:02:42,799 --> 01:02:43,839
payload

1611
01:02:43,839 --> 01:02:45,119
part

1612
01:02:45,119 --> 01:02:46,559
but it's kind of redundant because

1613
01:02:46,559 --> 01:02:49,280
you've got that into the answer from the

1614
01:02:49,280 --> 01:02:50,880
from the api

1615
01:02:50,880 --> 01:02:52,720
in in the response part

1616
01:02:52,720 --> 01:02:54,559
so it could be optional you could well

1617
01:02:54,559 --> 01:02:56,720
first it could be something we don't

1618
01:02:56,720 --> 01:02:59,760
include or we don't mandate to include

1619
01:02:59,760 --> 01:03:01,520
it will be optional

1620
01:03:01,520 --> 01:03:03,280
or it could be something that we just

1621
01:03:03,280 --> 01:03:05,920
passed by reference as well uh just like

1622
01:03:05,920 --> 01:03:08,400
we do for kid for instance

1623
01:03:08,400 --> 01:03:10,400
and then we've got some other questions

1624
01:03:10,400 --> 01:03:14,799
like um sub uh in our in our documents

1625
01:03:14,799 --> 01:03:16,480
sub ids

1626
01:03:16,480 --> 01:03:19,280
are referenced to a specific spec

1627
01:03:19,280 --> 01:03:21,200
so it's a bit more complex here it would

1628
01:03:21,200 --> 01:03:23,119
it would be meaningful but only for all

1629
01:03:23,119 --> 01:03:25,520
pac identifiers

1630
01:03:25,520 --> 01:03:27,480
so is it something we want to

1631
01:03:27,480 --> 01:03:29,440
[Music]

1632
01:03:29,440 --> 01:03:31,520
to unfair or do we want to make sure

1633
01:03:31,520 --> 01:03:33,599
that we can actually

1634
01:03:33,599 --> 01:03:36,960
actually type the sub identifier uh can

1635
01:03:36,960 --> 01:03:39,119
we for instance find there something

1636
01:03:39,119 --> 01:03:43,039
that's a phone number or something else

1637
01:03:43,039 --> 01:03:46,400
or did maybe uh

1638
01:03:46,400 --> 01:03:49,039
and then um we've got flags and

1639
01:03:49,039 --> 01:03:51,520
keybounds so we've we've discussed about

1640
01:03:51,520 --> 01:03:54,960
kids but um that's the kind of things uh

1641
01:03:54,960 --> 01:03:56,640
do we want to

1642
01:03:56,640 --> 01:03:58,319
actually how do we want to actually deal

1643
01:03:58,319 --> 01:04:01,039
with that same thing for expiry do we

1644
01:04:01,039 --> 01:04:02,720
want to

1645
01:04:02,720 --> 01:04:06,000
to to on the expiry directly in

1646
01:04:06,000 --> 01:04:08,079
in

1647
01:04:08,079 --> 01:04:10,559
in the token or not

1648
01:04:10,559 --> 01:04:13,280
in many cases makes sense but maybe not

1649
01:04:13,280 --> 01:04:15,359
every every time and then a resource

1650
01:04:15,359 --> 01:04:17,599
owner in practice it's often the same as

1651
01:04:17,599 --> 01:04:19,760
the user but maybe we

1652
01:04:19,760 --> 01:04:21,839
we need for

1653
01:04:21,839 --> 01:04:23,839
some some specific cases which are

1654
01:04:23,839 --> 01:04:25,839
discussed in section four of the main

1655
01:04:25,839 --> 01:04:27,760
spec

1656
01:04:27,760 --> 01:04:28,960
maybe

1657
01:04:28,960 --> 01:04:30,799
that could be something where

1658
01:04:30,799 --> 01:04:33,520
on top of the sub identifier we might in

1659
01:04:33,520 --> 01:04:36,799
some cases refer to resource owner

1660
01:04:36,799 --> 01:04:38,640
so it's just to give you some ideas

1661
01:04:38,640 --> 01:04:40,400
there's more on the map between over 2

1662
01:04:40,400 --> 01:04:43,359
and the gnab in the appendix d5 from the

1663
01:04:43,359 --> 01:04:45,440
course pack and i encourage you to

1664
01:04:45,440 --> 01:04:47,520
actually have a look at that

1665
01:04:47,520 --> 01:04:50,400
next slide please

1666
01:04:51,200 --> 01:04:52,960
and then as a summary

1667
01:04:52,960 --> 01:04:54,400
in terms of editor

1668
01:04:54,400 --> 01:04:56,720
probably a new type for kidnap

1669
01:04:56,720 --> 01:04:58,559
makes sense

1670
01:04:58,559 --> 01:05:01,039
at least for drought formats but it's

1671
01:05:01,039 --> 01:05:04,079
something to avoid cross

1672
01:05:04,079 --> 01:05:05,599
cross protocol attacks that could be

1673
01:05:05,599 --> 01:05:07,359
interesting

1674
01:05:07,359 --> 01:05:09,200
we've seen that we've got mineral claims

1675
01:05:09,200 --> 01:05:13,839
that are useful in all cases so issuers

1676
01:05:13,839 --> 01:05:14,880
sub

1677
01:05:14,880 --> 01:05:17,440
audience

1678
01:05:17,520 --> 01:05:19,280
gti and client

1679
01:05:19,280 --> 01:05:20,640
and

1680
01:05:20,640 --> 01:05:23,039
others which are which could be used in

1681
01:05:23,039 --> 01:05:25,119
some cases and which

1682
01:05:25,119 --> 01:05:27,200
might be optional or

1683
01:05:27,200 --> 01:05:29,359
we will have to see

1684
01:05:29,359 --> 01:05:31,359
so it was ready to give you a broad

1685
01:05:31,359 --> 01:05:32,960
summary of

1686
01:05:32,960 --> 01:05:34,240
of the

1687
01:05:34,240 --> 01:05:36,720
of issue 15 which will be i think quite

1688
01:05:36,720 --> 01:05:38,640
important because having a format is

1689
01:05:38,640 --> 01:05:40,960
this is quite critical

1690
01:05:40,960 --> 01:05:43,119
in a slide and i think we we get to the

1691
01:05:43,119 --> 01:05:44,240
end

1692
01:05:44,240 --> 01:05:47,200
and that's the next steps um so here it

1693
01:05:47,200 --> 01:05:49,200
was just a discussion because it's it's

1694
01:05:49,200 --> 01:05:50,480
something which will be important

1695
01:05:50,480 --> 01:05:52,720
especially for implementers

1696
01:05:52,720 --> 01:05:55,119
so next step is to actually submit a pr

1697
01:05:55,119 --> 01:05:56,640
we can actually expect that in the

1698
01:05:56,640 --> 01:06:00,319
coming weeks and the idea is to actually

1699
01:06:00,319 --> 01:06:01,440
be able to

1700
01:06:01,440 --> 01:06:04,000
to review it publicly and feedback is

1701
01:06:04,000 --> 01:06:06,079
obviously welcome and if you've got some

1702
01:06:06,079 --> 01:06:07,920
ideas and

1703
01:06:07,920 --> 01:06:09,920
and fixed backs on that we're we're

1704
01:06:09,920 --> 01:06:12,079
quite keen to actually discuss it so

1705
01:06:12,079 --> 01:06:13,760
thanks very much and

1706
01:06:13,760 --> 01:06:15,599
i'll let the questions if there are some

1707
01:06:15,599 --> 01:06:18,599
questions

1708
01:06:24,640 --> 01:06:26,400
and thanks aaron for

1709
01:06:26,400 --> 01:06:29,960
changing the slides

1710
01:06:32,000 --> 01:06:33,920
all right all right

1711
01:06:33,920 --> 01:06:36,559
and uh and that's it for the editors uh

1712
01:06:36,559 --> 01:06:38,720
slides

1713
01:06:38,720 --> 01:06:40,799
although okay

1714
01:06:40,799 --> 01:06:42,880
i did want to

1715
01:06:42,880 --> 01:06:44,559
yeah unfortunately i'm not down in

1716
01:06:44,559 --> 01:06:47,359
philadelphia but uh somebody

1717
01:06:47,359 --> 01:06:50,160
at identiverse gave me the gnap smurf

1718
01:06:50,160 --> 01:06:52,319
um so he will be coming to future ietf

1719
01:06:52,319 --> 01:06:54,799
meetings when i'm here uh in person

1720
01:06:54,799 --> 01:06:56,640
and uh aaron's promised that we're going

1721
01:06:56,640 --> 01:06:58,960
to do a uh a photo shoot with this guy

1722
01:06:58,960 --> 01:07:00,880
so that he can live in all the slides

1723
01:07:00,880 --> 01:07:02,160
going forward

1724
01:07:02,160 --> 01:07:03,039
so

1725
01:07:03,039 --> 01:07:04,799
um

1726
01:07:04,799 --> 01:07:06,400
just uh we didn't get we didn't get a

1727
01:07:06,400 --> 01:07:07,920
chance to get him into the presentation

1728
01:07:07,920 --> 01:07:09,359
so i wanted to make sure that uh he

1729
01:07:09,359 --> 01:07:10,640
actually showed up at the meeting that's

1730
01:07:10,640 --> 01:07:13,039
big enough that's right

1731
01:07:13,039 --> 01:07:14,319
there's there has to be you can have

1732
01:07:14,319 --> 01:07:17,759
smurf uh from every meeting

1733
01:07:19,920 --> 01:07:22,720
yeah that's all we had um i don't know

1734
01:07:22,720 --> 01:07:25,280
if uh there was i don't think there was

1735
01:07:25,280 --> 01:07:27,920
anything else on the on the agenda i saw

1736
01:07:27,920 --> 01:07:29,200
a proposal but i don't know what

1737
01:07:29,200 --> 01:07:30,079
happened

1738
01:07:30,079 --> 01:07:31,280
with that

1739
01:07:31,280 --> 01:07:32,960
so we did uh

1740
01:07:32,960 --> 01:07:34,960
go through uh

1741
01:07:34,960 --> 01:07:36,720
what we had scheduled but

1742
01:07:36,720 --> 01:07:38,160
and you know obviously if there's

1743
01:07:38,160 --> 01:07:40,880
anybody who wants to raise any issues or

1744
01:07:40,880 --> 01:07:42,799
talk about anything in the presentation

1745
01:07:42,799 --> 01:07:44,480
or that wasn't covered by the

1746
01:07:44,480 --> 01:07:46,400
presentation now is the time to step up

1747
01:07:46,400 --> 01:07:47,440
to the mic

1748
01:07:47,440 --> 01:07:48,559
um

1749
01:07:48,559 --> 01:07:50,960
while we have you up there um

1750
01:07:50,960 --> 01:07:52,480
if you would like

1751
01:07:52,480 --> 01:07:55,039
could you have some some idea of the

1752
01:07:55,039 --> 01:07:56,480
timeline ahead i mean what are we

1753
01:07:56,480 --> 01:07:58,480
talking about in terms of iterations

1754
01:07:58,480 --> 01:08:00,640
before we're getting close to

1755
01:08:00,640 --> 01:08:02,319
um

1756
01:08:02,319 --> 01:08:04,480
our our

1757
01:08:04,480 --> 01:08:07,280
goal end goal here

1758
01:08:07,280 --> 01:08:09,359
yeah so um

1759
01:08:09,359 --> 01:08:11,440
the way

1760
01:08:11,440 --> 01:08:12,880
the way things have been progressing a

1761
01:08:12,880 --> 01:08:14,960
lot of what's been changing over the

1762
01:08:14,960 --> 01:08:16,080
last

1763
01:08:16,080 --> 01:08:17,920
i want to say you know six to nine

1764
01:08:17,920 --> 01:08:20,399
months or so is that we've been

1765
01:08:20,399 --> 01:08:22,839
um it's been a lot of uh

1766
01:08:22,839 --> 01:08:26,960
removing um sort of the more esoteric

1767
01:08:26,960 --> 01:08:29,120
features like you know split token and

1768
01:08:29,120 --> 01:08:30,799
the capabilities array and stuff like

1769
01:08:30,799 --> 01:08:32,399
that stuff that seemed like it would

1770
01:08:32,399 --> 01:08:34,560
have been a good idea but nobody was

1771
01:08:34,560 --> 01:08:36,479
building and so

1772
01:08:36,479 --> 01:08:38,560
we've been pulling that stuff back

1773
01:08:38,560 --> 01:08:41,040
uh and so a lot of what's been going in

1774
01:08:41,040 --> 01:08:44,479
has been uh either clean up of that or

1775
01:08:44,479 --> 01:08:45,920
um

1776
01:08:45,920 --> 01:08:48,080
a lot of editorial discussion within the

1777
01:08:48,080 --> 01:08:51,198
document itself so things like the

1778
01:08:51,198 --> 01:08:52,640
uh the whole

1779
01:08:52,640 --> 01:08:53,920
state machine

1780
01:08:53,920 --> 01:08:55,040
discussion

1781
01:08:55,040 --> 01:08:57,439
like that that entire section and the

1782
01:08:57,439 --> 01:08:58,799
the effects that it had on the rest of

1783
01:08:58,799 --> 01:09:00,880
the draft didn't actually change the

1784
01:09:00,880 --> 01:09:02,000
protocol

1785
01:09:02,000 --> 01:09:04,319
but it changes the document

1786
01:09:04,319 --> 01:09:06,080
significantly and sort of how people

1787
01:09:06,080 --> 01:09:08,238
would approach the document

1788
01:09:08,238 --> 01:09:09,120
so

1789
01:09:09,120 --> 01:09:10,479
um

1790
01:09:10,479 --> 01:09:11,759
this is a very

1791
01:09:11,759 --> 01:09:13,359
roundabout way of saying that i think

1792
01:09:13,359 --> 01:09:15,920
we've still got uh

1793
01:09:15,920 --> 01:09:18,238
a few more of those

1794
01:09:18,238 --> 01:09:19,679
um

1795
01:09:19,679 --> 01:09:22,479
oh is is my is my video not coming

1796
01:09:22,479 --> 01:09:25,040
coming through

1797
01:09:25,279 --> 01:09:27,198
okay uh you all

1798
01:09:27,198 --> 01:09:29,040
mentioned in chat that your video is

1799
01:09:29,040 --> 01:09:31,679
getting clipped

1800
01:09:31,839 --> 01:09:35,399
it's coming up

1801
01:09:35,600 --> 01:09:38,479
yeah so um

1802
01:09:38,479 --> 01:09:39,600
so i

1803
01:09:39,600 --> 01:09:43,440
would consider that um

1804
01:09:43,679 --> 01:09:45,439
the biggest things that we need to do in

1805
01:09:45,439 --> 01:09:48,158
terms of functionality are sort of the

1806
01:09:48,158 --> 01:09:50,479
key rotation stuff that we talked about

1807
01:09:50,479 --> 01:09:52,238
in the core document

1808
01:09:52,238 --> 01:09:54,320
um because that's that's something

1809
01:09:54,320 --> 01:09:55,920
that's been um

1810
01:09:55,920 --> 01:09:59,040
been brought up a lot uh and including

1811
01:09:59,040 --> 01:10:00,719
the key uh

1812
01:10:00,719 --> 01:10:03,440
the key splitting between the as and rs

1813
01:10:03,440 --> 01:10:04,960
um

1814
01:10:04,960 --> 01:10:08,320
so i would expect probably

1815
01:10:08,320 --> 01:10:09,760
by the next

1816
01:10:09,760 --> 01:10:13,040
ietf meeting we'll have uh

1817
01:10:13,040 --> 01:10:14,640
a draft that is

1818
01:10:14,640 --> 01:10:16,719
fairly feature complete

1819
01:10:16,719 --> 01:10:19,679
um and then from there it's going to be

1820
01:10:19,679 --> 01:10:20,480
uh

1821
01:10:20,480 --> 01:10:23,280
the work to make sure that you know the

1822
01:10:23,280 --> 01:10:25,440
instructions for extensions are all in

1823
01:10:25,440 --> 01:10:27,840
place all of the ayana registration

1824
01:10:27,840 --> 01:10:30,400
stuff is all in place which does does

1825
01:10:30,400 --> 01:10:33,920
take time and text but is uh less

1826
01:10:33,920 --> 01:10:35,520
less about changes in the protocol

1827
01:10:35,520 --> 01:10:37,840
itself

1828
01:10:38,480 --> 01:10:40,880
all right um it looked like we did have

1829
01:10:40,880 --> 01:10:44,920
somebody in the queue for uh

1830
01:10:45,920 --> 01:10:47,920
all right

1831
01:10:47,920 --> 01:10:51,199
you want a channel left back

1832
01:10:52,880 --> 01:10:56,159
all right well perfect

1833
01:10:57,280 --> 01:10:59,600
yeah so i i guess to kind of uh yeah

1834
01:10:59,600 --> 01:11:02,159
mike perek here um good to see justin in

1835
01:11:02,159 --> 01:11:04,080
this context as opposed to over in other

1836
01:11:04,080 --> 01:11:06,400
working groups so um

1837
01:11:06,400 --> 01:11:07,920
you know i guess kind of two questions i

1838
01:11:07,920 --> 01:11:09,440
mean what is the end goal i know the

1839
01:11:09,440 --> 01:11:10,960
question was asked around that but is

1840
01:11:10,960 --> 01:11:12,679
that are we going after independent

1841
01:11:12,679 --> 01:11:14,960
implementations you know full interop

1842
01:11:14,960 --> 01:11:17,040
etc all the way through or just to get

1843
01:11:17,040 --> 01:11:18,640
the protocol to find can you have some

1844
01:11:18,640 --> 01:11:20,400
clarity there and i have a kind of a

1845
01:11:20,400 --> 01:11:22,320
follow-on um

1846
01:11:22,320 --> 01:11:24,640
for that as well but um

1847
01:11:24,640 --> 01:11:25,440
i'll

1848
01:11:25,440 --> 01:11:27,040
i'll i'll let the chairs answer that

1849
01:11:27,040 --> 01:11:29,120
because that's more of a general ietf

1850
01:11:29,120 --> 01:11:30,880
question than anything specific to get

1851
01:11:30,880 --> 01:11:32,719
out

1852
01:11:32,719 --> 01:11:34,719
well i mean we are obviously looking for

1853
01:11:34,719 --> 01:11:36,640
us we're looking to produce a couple of

1854
01:11:36,640 --> 01:11:38,239
staff at least a couple of standards

1855
01:11:38,239 --> 01:11:41,280
track receipts right that is kind of

1856
01:11:41,280 --> 01:11:43,840
technical output to this right

1857
01:11:43,840 --> 01:11:47,600
implementation wise that is typically um

1858
01:11:47,600 --> 01:11:50,400
a thing you kind of incorporate into the

1859
01:11:50,400 --> 01:11:52,840
idea process process software like this

1860
01:11:52,840 --> 01:11:55,280
rotation so the way this typically

1861
01:11:55,280 --> 01:11:57,120
happens with iotf protocols as you

1862
01:11:57,120 --> 01:12:00,159
publish your rfcs you select the market

1863
01:12:00,159 --> 01:12:02,560
response by sort of implementation and

1864
01:12:02,560 --> 01:12:05,199
deployment and then after a while

1865
01:12:05,199 --> 01:12:07,600
sometimes uh a year or two sometimes

1866
01:12:07,600 --> 01:12:08,400
longer

1867
01:12:08,400 --> 01:12:10,400
like the working group

1868
01:12:10,400 --> 01:12:13,120
gets reconstituted reconstituted you go

1869
01:12:13,120 --> 01:12:15,199
back fix all of the bugs that the market

1870
01:12:15,199 --> 01:12:17,280
has identified in the implementation

1871
01:12:17,280 --> 01:12:19,120
spin out a few bits versions of the same

1872
01:12:19,120 --> 01:12:20,400
warranties

1873
01:12:20,400 --> 01:12:22,560
and then you you kind of have achieved

1874
01:12:22,560 --> 01:12:24,400
the level of stability right that's kind

1875
01:12:24,400 --> 01:12:27,199
of the arc of a typical perfect yeah no

1876
01:12:27,199 --> 01:12:28,640
helpful i just wanted to kind of double

1877
01:12:28,640 --> 01:12:30,000
check that and then specifically in

1878
01:12:30,000 --> 01:12:32,159
related to get uh you know good app is

1879
01:12:32,159 --> 01:12:34,239
uh i guess it's probably question for

1880
01:12:34,239 --> 01:12:36,320
aaron is like octo planning on putting

1881
01:12:36,320 --> 01:12:38,320
an implementation out once this is out

1882
01:12:38,320 --> 01:12:42,080
or you know where is that at

1883
01:12:46,080 --> 01:12:48,960
come back to this microphone um i am not

1884
01:12:48,960 --> 01:12:51,760
aware of i know otto's keeping track of

1885
01:12:51,760 --> 01:12:53,440
of like you know keeping track of the

1886
01:12:53,440 --> 01:12:54,719
work going on but i'm not aware of any

1887
01:12:54,719 --> 01:12:57,120
current plans to go and immediately

1888
01:12:57,120 --> 01:12:59,840
build it that said i'm also not the one

1889
01:12:59,840 --> 01:13:02,159
that is on the actual product or map

1890
01:13:02,159 --> 01:13:04,800
side of things so i don't actually have

1891
01:13:04,800 --> 01:13:06,960
that much insight into it so i'm mostly

1892
01:13:06,960 --> 01:13:10,320
participating this as an individual here

1893
01:13:10,320 --> 01:13:13,280
another octa here

1894
01:13:14,560 --> 01:13:17,600
yeah i'm on the product side and

1895
01:13:17,600 --> 01:13:19,440
we don't have any current plans don't

1896
01:13:19,440 --> 01:13:22,639
limit this at this stage

1897
01:13:23,120 --> 01:13:23,920
right

1898
01:13:23,920 --> 01:13:26,480
so i can say from uh my experience i

1899
01:13:26,480 --> 01:13:29,280
know of a couple of um

1900
01:13:29,280 --> 01:13:31,040
implementations that are out there in

1901
01:13:31,040 --> 01:13:35,760
the wild um but they are in kind of um

1902
01:13:35,760 --> 01:13:37,040
siloed

1903
01:13:37,040 --> 01:13:38,480
uh spaces

1904
01:13:38,480 --> 01:13:41,520
so this is part of a vast's verified dot

1905
01:13:41,520 --> 01:13:42,960
me platform

1906
01:13:42,960 --> 01:13:45,120
um but they're using it

1907
01:13:45,120 --> 01:13:47,520
within verified document it's it's not

1908
01:13:47,520 --> 01:13:49,840
they're not using it sort of to

1909
01:13:49,840 --> 01:13:52,159
connect across to other implementations

1910
01:13:52,159 --> 01:13:54,000
and things like that at this time

1911
01:13:54,000 --> 01:13:58,560
um i know of a couple of companies over

1912
01:13:58,560 --> 01:13:59,440
in

1913
01:13:59,440 --> 01:14:01,679
sort of the fintech space that are using

1914
01:14:01,679 --> 01:14:03,040
nav to do

1915
01:14:03,040 --> 01:14:06,239
um to do their authorization layer um on

1916
01:14:06,239 --> 01:14:08,880
things and uh but again they're like

1917
01:14:08,880 --> 01:14:10,800
they're building it within their their

1918
01:14:10,800 --> 01:14:13,440
ecosystems and uh i haven't seen a lot

1919
01:14:13,440 --> 01:14:16,080
of pull yet for

1920
01:14:16,080 --> 01:14:17,840
sort of like you know large-scale

1921
01:14:17,840 --> 01:14:19,760
provider or large-scale

1922
01:14:19,760 --> 01:14:22,800
uh n-by-m interop matrix uh type of

1923
01:14:22,800 --> 01:14:24,000
testing

1924
01:14:24,000 --> 01:14:26,239
i can say that

1925
01:14:26,239 --> 01:14:27,920
i will add that early on when we did the

1926
01:14:27,920 --> 01:14:30,239
buff and sort of planning out the work

1927
01:14:30,239 --> 01:14:32,960
we're gonna have um several of the you

1928
01:14:32,960 --> 01:14:35,440
know large-scale usual suspects in with

1929
01:14:35,440 --> 01:14:37,360
dodge uh

1930
01:14:37,360 --> 01:14:39,600
access control not the problems like abs

1931
01:14:39,600 --> 01:14:41,920
they did say that that the type of

1932
01:14:41,920 --> 01:14:44,640
patterns that we've implemented in that

1933
01:14:44,640 --> 01:14:46,880
were quite common inside their domain

1934
01:14:46,880 --> 01:14:49,120
but as you say they they're inside

1935
01:14:49,120 --> 01:14:50,800
and right

1936
01:14:50,800 --> 01:14:52,560
so i think i mean personally i think

1937
01:14:52,560 --> 01:14:55,840
we're like any uh protocol in this space

1938
01:14:55,840 --> 01:14:58,239
the the arcs of deployment and testing

1939
01:14:58,239 --> 01:15:00,719
and effect on the market is quite long

1940
01:15:00,719 --> 01:15:03,280
typically yes

1941
01:15:03,280 --> 01:15:05,760
yeah definitely for uh especially for a

1942
01:15:05,760 --> 01:15:08,480
protocol like gnapp where

1943
01:15:08,480 --> 01:15:11,520
like if you bolt on enough extras you

1944
01:15:11,520 --> 01:15:12,400
can do

1945
01:15:12,400 --> 01:15:15,520
most of what's in knapp with oauth 2.

1946
01:15:15,520 --> 01:15:17,280
um it doesn't it stops looking like

1947
01:15:17,280 --> 01:15:19,360
oauth 2 uh

1948
01:15:19,360 --> 01:15:23,040
after a fairly short while but um

1949
01:15:23,040 --> 01:15:24,880
you know this is why we've uh put the

1950
01:15:24,880 --> 01:15:26,400
effort into backboarding rich

1951
01:15:26,400 --> 01:15:28,640
authorization requests and you know the

1952
01:15:28,640 --> 01:15:29,440
whole

1953
01:15:29,440 --> 01:15:31,840
uh pushed authorization request concept

1954
01:15:31,840 --> 01:15:33,920
is the same as knapp's you know intent

1955
01:15:33,920 --> 01:15:35,760
registration protocol

1956
01:15:35,760 --> 01:15:38,000
um so

1957
01:15:38,000 --> 01:15:39,679
we are definitely seeing the patterns

1958
01:15:39,679 --> 01:15:41,520
and the at least the people that i'm

1959
01:15:41,520 --> 01:15:44,000
talking to uh that have decided to go

1960
01:15:44,000 --> 01:15:46,960
with ganap have tried to uh it's it's

1961
01:15:46,960 --> 01:15:48,640
generally been they've tried to go do

1962
01:15:48,640 --> 01:15:50,880
that stuff with olaf

1963
01:15:50,880 --> 01:15:53,679
and then become frustrated with the sort

1964
01:15:53,679 --> 01:15:54,960
of the

1965
01:15:54,960 --> 01:15:57,920
the cross product of extensions

1966
01:15:57,920 --> 01:15:58,719
and

1967
01:15:58,719 --> 01:16:01,120
uh found knapp as something that was

1968
01:16:01,120 --> 01:16:03,600
designed for that cross product from

1969
01:16:03,600 --> 01:16:05,360
from the start which was one of our

1970
01:16:05,360 --> 01:16:07,040
goals going into this

1971
01:16:07,040 --> 01:16:10,480
um is you know as as a design how can we

1972
01:16:10,480 --> 01:16:11,440
actually

1973
01:16:11,440 --> 01:16:16,080
um build this out as as its own thing

1974
01:16:17,600 --> 01:16:19,280
see roman at the mic

1975
01:16:19,280 --> 01:16:20,480
yeah everyone

1976
01:16:20,480 --> 01:16:23,040
hi uh roman to neglect university i

1977
01:16:23,040 --> 01:16:24,880
wanted to come up to the mic wearing no

1978
01:16:24,880 --> 01:16:26,960
hat and with hats so first wearing the

1979
01:16:26,960 --> 01:16:28,960
hat i wanted officially had a follow-up

1980
01:16:28,960 --> 01:16:30,320
on the question about what are we doing

1981
01:16:30,320 --> 01:16:33,040
with implementations so this document in

1982
01:16:33,040 --> 01:16:36,000
itf parlance is in the proposed standard

1983
01:16:36,000 --> 01:16:38,159
kind of status which means that it in

1984
01:16:38,159 --> 01:16:40,480
fact does not need an implementation to

1985
01:16:40,480 --> 01:16:42,719
move forward to publication

1986
01:16:42,719 --> 01:16:45,920
so taking that hat off uh as a as a kind

1987
01:16:45,920 --> 01:16:48,719
of a personal individual participating

1988
01:16:48,719 --> 01:16:50,560
group i would strongly urge us to really

1989
01:16:50,560 --> 01:16:52,880
think hard about doing a little bit of

1990
01:16:52,880 --> 01:16:54,400
interrupt this is a pretty big and

1991
01:16:54,400 --> 01:16:56,480
complicated thing we would tremendously

1992
01:16:56,480 --> 01:16:59,199
benefit from trying to do some interrupt

1993
01:16:59,199 --> 01:17:00,640
to make sure that we understand the

1994
01:17:00,640 --> 01:17:02,800
edges here where we've seen working

1995
01:17:02,800 --> 01:17:04,560
groups kind of do that we end up with

1996
01:17:04,560 --> 01:17:06,719
such a high such a higher quality kind

1997
01:17:06,719 --> 01:17:08,880
of product here and while i appreciate

1998
01:17:08,880 --> 01:17:10,960
that the arc of what he thinks is put

1999
01:17:10,960 --> 01:17:12,640
out the ps get some adoption kind of

2000
01:17:12,640 --> 01:17:14,880
return to kind of fix

2001
01:17:14,880 --> 01:17:16,960
we could shorten the the with a little

2002
01:17:16,960 --> 01:17:18,800
bit more investment perhaps we could

2003
01:17:18,800 --> 01:17:20,800
shorten the adoption curve by making

2004
01:17:20,800 --> 01:17:22,239
sure that we have we have some at least

2005
01:17:22,239 --> 01:17:23,760
reference implementation and some

2006
01:17:23,760 --> 01:17:25,520
identification of interop

2007
01:17:25,520 --> 01:17:27,199
and then based on what we were talking

2008
01:17:27,199 --> 01:17:29,360
about uh kind of here in the line i'm

2009
01:17:29,360 --> 01:17:30,880
really excited to hear that folks have

2010
01:17:30,880 --> 01:17:32,640
adopted kind of the patterns and they

2011
01:17:32,640 --> 01:17:34,159
have some of that early experience of

2012
01:17:34,159 --> 01:17:35,760
what worked and didn't work trying

2013
01:17:35,760 --> 01:17:37,679
different technologies i would love to

2014
01:17:37,679 --> 01:17:39,760
see that brought here and

2015
01:17:39,760 --> 01:17:41,360
brought here kind of as a presentation

2016
01:17:41,360 --> 01:17:43,280
so so i guess justin i know you

2017
01:17:43,280 --> 01:17:44,960
mentioned it if you if you had some

2018
01:17:44,960 --> 01:17:47,120
contact with those organizations please

2019
01:17:47,120 --> 01:17:48,560
do invite them here it would be

2020
01:17:48,560 --> 01:17:50,239
phenomenal

2021
01:17:50,239 --> 01:17:52,560
so absolutely as you

2022
01:17:52,560 --> 01:17:54,560
are aware as everybody i think is aware

2023
01:17:54,560 --> 01:17:57,280
that there have been some initially

2024
01:17:57,280 --> 01:17:58,640
um

2025
01:17:58,640 --> 01:18:01,199
efforts i think lost hackathon

2026
01:18:01,199 --> 01:18:03,199
um

2027
01:18:03,199 --> 01:18:05,760
justin and aaron did some work and

2028
01:18:05,760 --> 01:18:07,520
there's been some stuff

2029
01:18:07,520 --> 01:18:08,719
happening there

2030
01:18:08,719 --> 01:18:11,040
yeah i i guess

2031
01:18:11,040 --> 01:18:12,719
and that's wonderful and perhaps my

2032
01:18:12,719 --> 01:18:14,159
finesse would be

2033
01:18:14,159 --> 01:18:16,400
let's bring that that that uh i guess

2034
01:18:16,400 --> 01:18:17,840
experience of the hackathon formally

2035
01:18:17,840 --> 01:18:19,440
into for lack of a better term the

2036
01:18:19,440 --> 01:18:21,040
working group proceedings to make sure

2037
01:18:21,040 --> 01:18:22,719
that kind of everyone kind of benefits

2038
01:18:22,719 --> 01:18:24,320
from that experience you again great

2039
01:18:24,320 --> 01:18:25,600
that the running code is happening we're

2040
01:18:25,600 --> 01:18:27,120
learning from that let's just let's

2041
01:18:27,120 --> 01:18:28,800
actually just do a presentation or kind

2042
01:18:28,800 --> 01:18:30,880
of wrap it up so to make sure that you

2043
01:18:30,880 --> 01:18:32,560
know what happens that the hackathon is

2044
01:18:32,560 --> 01:18:34,400
in the proceedings and we can kind of

2045
01:18:34,400 --> 01:18:36,400
track things across as a decision line

2046
01:18:36,400 --> 01:18:38,560
yeah and yeah

2047
01:18:38,560 --> 01:18:41,280
on chat that he wanted to

2048
01:18:41,280 --> 01:18:43,760
raise some other issue please again go

2049
01:18:43,760 --> 01:18:46,080
either go right ahead

2050
01:18:46,080 --> 01:18:48,719
so i just uh before we do i just had one

2051
01:18:48,719 --> 01:18:51,040
one quick note

2052
01:18:51,040 --> 01:18:54,320
um and that's that uh there is a there

2053
01:18:54,320 --> 01:18:56,719
is a pattern for uh interoperability and

2054
01:18:56,719 --> 01:18:59,120
testing that

2055
01:18:59,120 --> 01:19:00,480
i

2056
01:19:00,480 --> 01:19:02,960
think that this group would really

2057
01:19:02,960 --> 01:19:06,320
benefit from and that's the type of

2058
01:19:06,320 --> 01:19:08,400
testing harness that open id foundation

2059
01:19:08,400 --> 01:19:10,960
has made available for openid connect

2060
01:19:10,960 --> 01:19:12,560
and all of its extensions

2061
01:19:12,560 --> 01:19:14,239
um

2062
01:19:14,239 --> 01:19:16,880
the platform that that's built on is not

2063
01:19:16,880 --> 01:19:19,120
actually oauth specific i know because i

2064
01:19:19,120 --> 01:19:20,480
wrote the platform

2065
01:19:20,480 --> 01:19:21,360
and

2066
01:19:21,360 --> 01:19:24,000
uh the

2067
01:19:24,000 --> 01:19:26,480
the real question is um

2068
01:19:26,480 --> 01:19:29,440
you know where

2069
01:19:29,600 --> 01:19:32,080
where and how could we scrape up the uh

2070
01:19:32,080 --> 01:19:34,000
the time and funding and engineering

2071
01:19:34,000 --> 01:19:37,120
expertise needed to take that

2072
01:19:37,120 --> 01:19:38,800
platform and

2073
01:19:38,800 --> 01:19:41,360
write a bunch of gnat based tests for it

2074
01:19:41,360 --> 01:19:43,040
so that people could

2075
01:19:43,040 --> 01:19:44,800
throw their

2076
01:19:44,800 --> 01:19:46,880
implementations against that i would

2077
01:19:46,880 --> 01:19:48,640
love to see that i personally don't have

2078
01:19:48,640 --> 01:19:50,719
the bandwidth to do it on my own

2079
01:19:50,719 --> 01:19:51,760
um

2080
01:19:51,760 --> 01:19:52,800
but

2081
01:19:52,800 --> 01:19:54,400
i think that that's that's something

2082
01:19:54,400 --> 01:19:56,400
that the community would absolutely

2083
01:19:56,400 --> 01:19:58,719
benefit from and i'd love to see us try

2084
01:19:58,719 --> 01:20:00,080
to do that

2085
01:20:00,080 --> 01:20:02,400
also if you know going down that road

2086
01:20:02,400 --> 01:20:04,000
we're talking about sort of maintaining

2087
01:20:04,000 --> 01:20:05,679
infrastructure for a long while i i

2088
01:20:05,679 --> 01:20:07,280
think it actually makes sense to partner

2089
01:20:07,280 --> 01:20:09,840
with something like the oil foundation

2090
01:20:09,840 --> 01:20:12,480
to talk about sort of after

2091
01:20:12,480 --> 01:20:14,560
long-term sustainability and for

2092
01:20:14,560 --> 01:20:15,920
something like that and i agree it is

2093
01:20:15,920 --> 01:20:19,400
extremely useful

2094
01:20:19,440 --> 01:20:23,599
all right uh go ahead adrian adrian

2095
01:20:23,760 --> 01:20:26,480
thank you um

2096
01:20:26,480 --> 01:20:29,280
i just wanted to mention in case it's

2097
01:20:29,280 --> 01:20:32,320
worthy of some feedback in this forum

2098
01:20:32,320 --> 01:20:34,400
and i i'll certainly raise it as an

2099
01:20:34,400 --> 01:20:35,840
issue i don't think it's going to be

2100
01:20:35,840 --> 01:20:37,840
resolved in any sense

2101
01:20:37,840 --> 01:20:39,520
uh today that

2102
01:20:39,520 --> 01:20:42,080
map in its current form has a potential

2103
01:20:42,080 --> 01:20:43,840
human rights issue

2104
01:20:43,840 --> 01:20:47,280
uh the problem uh

2105
01:20:47,280 --> 01:20:50,159
as uh you know it's a delegation uh

2106
01:20:50,159 --> 01:20:51,360
protocol

2107
01:20:51,360 --> 01:20:54,560
uh the problem with oauth

2108
01:20:54,560 --> 01:20:58,000
uh has been that it leads to platform

2109
01:20:58,000 --> 01:21:01,520
oligopolies in in the way uh it tends to

2110
01:21:01,520 --> 01:21:02,960
be implemented

2111
01:21:02,960 --> 01:21:05,199
uh gonapp is primarily a delegation

2112
01:21:05,199 --> 01:21:08,080
protocol and that can be human rights

2113
01:21:08,080 --> 01:21:10,960
affirming which is very good

2114
01:21:10,960 --> 01:21:14,000
the problem is that ganaf does not allow

2115
01:21:14,000 --> 01:21:15,679
as i understand it

2116
01:21:15,679 --> 01:21:18,000
the resource owner to choose their

2117
01:21:18,000 --> 01:21:21,440
authorization delegate

2118
01:21:21,440 --> 01:21:24,320
that poses privacy in the sense of data

2119
01:21:24,320 --> 01:21:26,880
minimization and choice

2120
01:21:26,880 --> 01:21:28,880
in the sense of giving the resource

2121
01:21:28,880 --> 01:21:31,360
owners market power

2122
01:21:31,360 --> 01:21:33,120
uh problems

2123
01:21:33,120 --> 01:21:36,239
that do have a human rights

2124
01:21:36,239 --> 01:21:37,280
impact

2125
01:21:37,280 --> 01:21:40,960
and that is potentially bad

2126
01:21:40,960 --> 01:21:44,560
if again if my understanding of uh of

2127
01:21:44,560 --> 01:21:47,280
gnap as it stands right now is uh is

2128
01:21:47,280 --> 01:21:48,480
correct

2129
01:21:48,480 --> 01:21:50,639
uh which it might not be uh the

2130
01:21:50,639 --> 01:21:53,840
mitigation to this problem is to allow

2131
01:21:53,840 --> 01:21:56,400
the resource owner to choose

2132
01:21:56,400 --> 01:21:59,600
their request processing agent

2133
01:21:59,600 --> 01:22:00,639
um

2134
01:22:00,639 --> 01:22:03,120
right this is the way we choose doctors

2135
01:22:03,120 --> 01:22:06,000
or lawyers for instance as agents in

2136
01:22:06,000 --> 01:22:09,679
order to mitigate a power asymmetry uh

2137
01:22:09,679 --> 01:22:12,000
in our relationship to uh resource

2138
01:22:12,000 --> 01:22:13,360
servers

2139
01:22:13,360 --> 01:22:15,120
and uh

2140
01:22:15,120 --> 01:22:18,239
users of uh clients and whatnot

2141
01:22:18,239 --> 01:22:22,000
um okay so to mitigate this privacy and

2142
01:22:22,000 --> 01:22:24,800
human rights consideration ganaf should

2143
01:22:24,800 --> 01:22:27,679
at least explain how it interacts with

2144
01:22:27,679 --> 01:22:29,199
an agent

2145
01:22:29,199 --> 01:22:31,280
of the resource owner

2146
01:22:31,280 --> 01:22:34,560
so to the extent that the knapp does not

2147
01:22:34,560 --> 01:22:38,000
treat the as as the request uh

2148
01:22:38,000 --> 01:22:40,080
processing endpoint

2149
01:22:40,080 --> 01:22:45,520
uh as being uh chosen by the uh

2150
01:22:45,520 --> 01:22:47,040
resource owner

2151
01:22:47,040 --> 01:22:47,920
uh

2152
01:22:47,920 --> 01:22:50,080
which i guess is fundamental to the

2153
01:22:50,080 --> 01:22:53,280
design at least the way justin has

2154
01:22:53,280 --> 01:22:54,960
explained it to me

2155
01:22:54,960 --> 01:22:56,639
there has to be

2156
01:22:56,639 --> 01:22:58,960
at least an explanation and maybe that

2157
01:22:58,960 --> 01:23:00,560
explanation could be

2158
01:23:00,560 --> 01:23:03,600
that we recommend using biscuits or

2159
01:23:03,600 --> 01:23:05,520
macaroons

2160
01:23:05,520 --> 01:23:08,239
as the authorization token formats as

2161
01:23:08,239 --> 01:23:10,960
was mentioned earlier in order for there

2162
01:23:10,960 --> 01:23:12,239
to be

2163
01:23:12,239 --> 01:23:15,020
an agent of the user that can then

2164
01:23:15,020 --> 01:23:16,159
[Music]

2165
01:23:16,159 --> 01:23:18,560
process requests

2166
01:23:18,560 --> 01:23:21,040
or it could be that there are other

2167
01:23:21,040 --> 01:23:23,520
uh mitigations to this issue that we

2168
01:23:23,520 --> 01:23:27,199
want to discuss formally in the uh

2169
01:23:27,199 --> 01:23:29,600
in the document uh thank you that's my

2170
01:23:29,600 --> 01:23:32,600
comment

2171
01:23:38,719 --> 01:23:42,320
hi uh so yeah i agree with the concerns

2172
01:23:42,320 --> 01:23:44,320
and um i also

2173
01:23:44,320 --> 01:23:45,920
sympathize with the

2174
01:23:45,920 --> 01:23:47,760
um

2175
01:23:47,760 --> 01:23:48,560
the

2176
01:23:48,560 --> 01:23:50,320
how things have kind of turned out in

2177
01:23:50,320 --> 01:23:52,560
the oauth world and

2178
01:23:52,560 --> 01:23:54,719
i

2179
01:23:54,960 --> 01:23:56,800
what i think i'm more disappointed about

2180
01:23:56,800 --> 01:23:58,239
is that i actually don't think it's a

2181
01:23:58,239 --> 01:24:00,159
failing of the protocol i think it's

2182
01:24:00,159 --> 01:24:03,199
just what happens in the market in the

2183
01:24:03,199 --> 01:24:05,840
real world and i think that

2184
01:24:05,840 --> 01:24:08,880
even if there were things that like

2185
01:24:08,880 --> 01:24:10,880
allowed or required

2186
01:24:10,880 --> 01:24:12,480
that kind of behavior i don't think it

2187
01:24:12,480 --> 01:24:14,880
would play out differently

2188
01:24:14,880 --> 01:24:16,320
and one of the reasons i say this is

2189
01:24:16,320 --> 01:24:18,560
because open id

2190
01:24:18,560 --> 01:24:21,360
one old old open id that doesn't really

2191
01:24:21,360 --> 01:24:23,040
exist anymore

2192
01:24:23,040 --> 01:24:25,199
did exactly that of allowing the user to

2193
01:24:25,199 --> 01:24:26,880
choose where their authorization server

2194
01:24:26,880 --> 01:24:28,960
is and basically forcing any relying

2195
01:24:28,960 --> 01:24:30,560
party to accept

2196
01:24:30,560 --> 01:24:32,239
arbitrary

2197
01:24:32,239 --> 01:24:34,080
authorization servers

2198
01:24:34,080 --> 01:24:35,600
current terminology

2199
01:24:35,600 --> 01:24:38,320
and you can do that in oauth

2200
01:24:38,320 --> 01:24:39,840
there's nothing stopping you from doing

2201
01:24:39,840 --> 01:24:41,679
it but in practice

2202
01:24:41,679 --> 01:24:43,360
nobody does it because the relying

2203
01:24:43,360 --> 01:24:46,719
parties don't want to accept arbitrary

2204
01:24:46,719 --> 01:24:48,400
user identities and authorization

2205
01:24:48,400 --> 01:24:49,440
servers

2206
01:24:49,440 --> 01:24:50,800
and i don't think that that is

2207
01:24:50,800 --> 01:24:52,400
necessarily something that can just be

2208
01:24:52,400 --> 01:24:54,480
forced into a protocol

2209
01:24:54,480 --> 01:24:58,560
because as we've seen open id1 it just

2210
01:24:58,560 --> 01:25:00,800
it just stopped existing because via

2211
01:25:00,800 --> 01:25:02,960
stopped getting used so

2212
01:25:02,960 --> 01:25:05,440
open id2 doesn't or open id connect does

2213
01:25:05,440 --> 01:25:07,280
not share the same goal of doing that

2214
01:25:07,280 --> 01:25:09,520
and while you still can implement it

2215
01:25:09,520 --> 01:25:11,520
that way in openid connect

2216
01:25:11,520 --> 01:25:13,679
nobody really has because again it's not

2217
01:25:13,679 --> 01:25:15,440
the protocol's fault so i don't know

2218
01:25:15,440 --> 01:25:16,719
what the solution is but i don't

2219
01:25:16,719 --> 01:25:18,800
necessarily think that

2220
01:25:18,800 --> 01:25:20,880
we're going to force it and force that

2221
01:25:20,880 --> 01:25:22,480
model in by changing changing the

2222
01:25:22,480 --> 01:25:24,959
protocol

2223
01:25:25,040 --> 01:25:27,199
so i'll take off my chair hat right now

2224
01:25:27,199 --> 01:25:28,639
right i don't

2225
01:25:28,639 --> 01:25:30,719
save time by not running now there but

2226
01:25:30,719 --> 01:25:31,679
um

2227
01:25:31,679 --> 01:25:33,280
so

2228
01:25:33,280 --> 01:25:34,960
even i think you're correct about that

2229
01:25:34,960 --> 01:25:36,960
right

2230
01:25:36,960 --> 01:25:38,159
um

2231
01:25:38,159 --> 01:25:40,800
and that's certainly it's in line with

2232
01:25:40,800 --> 01:25:42,800
my experience in the

2233
01:25:42,800 --> 01:25:45,040
digital identity world right that people

2234
01:25:45,040 --> 01:25:46,800
relying parties actually do want to

2235
01:25:46,800 --> 01:25:49,040
control who they trust but

2236
01:25:49,040 --> 01:25:51,040
doesn't mean that uh a human rights

2237
01:25:51,040 --> 01:25:53,040
consideration section that calls this

2238
01:25:53,040 --> 01:25:56,880
out it's not a good idea because the way

2239
01:25:56,880 --> 01:25:59,360
i know that um especially

2240
01:25:59,360 --> 01:26:01,120
privacy advocates work today is that

2241
01:26:01,120 --> 01:26:03,760
they work through consumer organizations

2242
01:26:03,760 --> 01:26:05,600
and you know what will happen if we have

2243
01:26:05,600 --> 01:26:07,600
that kind of text that somebody might

2244
01:26:07,600 --> 01:26:09,360
actually pick it up

2245
01:26:09,360 --> 01:26:12,320
and try to use sort of

2246
01:26:12,320 --> 01:26:15,040
that as leverage to pressure for

2247
01:26:15,040 --> 01:26:17,360
sort of support for those kinds of

2248
01:26:17,360 --> 01:26:19,280
models and they might not succeed right

2249
01:26:19,280 --> 01:26:21,520
but they will at least have a tool to

2250
01:26:21,520 --> 01:26:23,600
work with

2251
01:26:23,600 --> 01:26:25,520
i think it's actually fair for us to

2252
01:26:25,520 --> 01:26:27,199
give them that tool

2253
01:26:27,199 --> 01:26:28,800
whether they succeed in using it is

2254
01:26:28,800 --> 01:26:32,840
another is another story

2255
01:26:38,960 --> 01:26:42,239
justin please go next

2256
01:26:43,600 --> 01:26:46,320
yeah so i i completely agree with life i

2257
01:26:46,320 --> 01:26:47,760
think that that makes a lot of sense we

2258
01:26:47,760 --> 01:26:49,840
have a privacy considerations uh

2259
01:26:49,840 --> 01:26:52,159
discussion that does talk about

2260
01:26:52,159 --> 01:26:54,239
uh you know ownership of the aes already

2261
01:26:54,239 --> 01:26:57,199
a little bit but um you know that can be

2262
01:26:57,199 --> 01:26:58,800
uh expanded in the direction that

2263
01:26:58,800 --> 01:27:00,800
adrian's been talking about

2264
01:27:00,800 --> 01:27:04,159
um the other aspect that i we need to

2265
01:27:04,159 --> 01:27:06,320
keep considering is that

2266
01:27:06,320 --> 01:27:07,520
um

2267
01:27:07,520 --> 01:27:09,199
from a design perspective one of the

2268
01:27:09,199 --> 01:27:11,440
things that brings to the table that was

2269
01:27:11,440 --> 01:27:14,159
much more difficult in the oauth world

2270
01:27:14,159 --> 01:27:17,199
is the ability to sort of

2271
01:27:17,199 --> 01:27:19,520
bring new information and different

2272
01:27:19,520 --> 01:27:22,719
types of things to the eas

2273
01:27:22,719 --> 01:27:25,120
as part of the protocol process whereas

2274
01:27:25,120 --> 01:27:27,040
oauth largely assumes oh i'm going to

2275
01:27:27,040 --> 01:27:29,280
redirect you to a web page and then

2276
01:27:29,280 --> 01:27:32,159
redirect you back uh map is much more

2277
01:27:32,159 --> 01:27:34,960
open about kind of what

2278
01:27:34,960 --> 01:27:37,520
what happens in that stage so if during

2279
01:27:37,520 --> 01:27:39,199
that stage

2280
01:27:39,199 --> 01:27:43,120
the af says i need a set of um

2281
01:27:43,120 --> 01:27:45,280
you know verified credentials from your

2282
01:27:45,280 --> 01:27:47,760
wallet that you need to present me

2283
01:27:47,760 --> 01:27:49,120
here to do that

2284
01:27:49,120 --> 01:27:50,080
uh

2285
01:27:50,080 --> 01:27:52,400
you know that's not that's not solving

2286
01:27:52,400 --> 01:27:55,280
the problem by separating the as the rs

2287
01:27:55,280 --> 01:27:57,199
in the way that uh adrian was talking

2288
01:27:57,199 --> 01:28:00,560
about but it is allowing the as to

2289
01:28:00,560 --> 01:28:02,239
um accept

2290
01:28:02,239 --> 01:28:04,320
external information that's not just

2291
01:28:04,320 --> 01:28:06,239
this user is logging in and clicking the

2292
01:28:06,239 --> 01:28:07,840
ok button

2293
01:28:07,840 --> 01:28:08,800
um

2294
01:28:08,800 --> 01:28:09,840
so

2295
01:28:09,840 --> 01:28:12,400
that is a

2296
01:28:12,400 --> 01:28:14,800
much more sort of system level

2297
01:28:14,800 --> 01:28:16,880
uh approach

2298
01:28:16,880 --> 01:28:19,600
to addressing the uh

2299
01:28:19,600 --> 01:28:21,760
sort of the expansibility of the privacy

2300
01:28:21,760 --> 01:28:24,719
uh and and policy considerations here

2301
01:28:24,719 --> 01:28:28,000
um beyond just you know forcing every

2302
01:28:28,000 --> 01:28:31,440
every rs to accept an arbitrary as uh as

2303
01:28:31,440 --> 01:28:33,199
its as its connection

2304
01:28:33,199 --> 01:28:34,800
uh because i agree with erin that

2305
01:28:34,800 --> 01:28:36,400
previous systems have tried to do that

2306
01:28:36,400 --> 01:28:38,880
uma tried to do that that was the part

2307
01:28:38,880 --> 01:28:41,040
of the uma that nobody deployed

2308
01:28:41,040 --> 01:28:42,800
all right and a lot of a lot of other

2309
01:28:42,800 --> 01:28:44,320
groups have tried that i saw that this

2310
01:28:44,320 --> 01:28:45,120
one

2311
01:28:45,120 --> 01:28:48,400
but you know it it

2312
01:28:48,560 --> 01:28:51,120
again we can still sort of call the

2313
01:28:51,120 --> 01:28:53,760
issue out and

2314
01:28:54,080 --> 01:28:56,320
adrian i think you would be i think it

2315
01:28:56,320 --> 01:28:58,400
would be great if you would have time to

2316
01:28:58,400 --> 01:29:00,080
put together some text

2317
01:29:00,080 --> 01:29:02,880
uh a few lines for uh for uh you know

2318
01:29:02,880 --> 01:29:04,960
for the even either privacy or even even

2319
01:29:04,960 --> 01:29:06,880
call it also human human rights

2320
01:29:06,880 --> 01:29:08,320
consideration section or something like

2321
01:29:08,320 --> 01:29:10,480
that but that that's a detail but you

2322
01:29:10,480 --> 01:29:12,960
know that having some sort of text

2323
01:29:12,960 --> 01:29:14,560
i think would be appreciated but i i

2324
01:29:14,560 --> 01:29:15,840
assume would be appreciated by the

2325
01:29:15,840 --> 01:29:19,360
authors as a contribution

2326
01:29:21,199 --> 01:29:22,480
i

2327
01:29:22,480 --> 01:29:25,040
i think i'm next on thecube uh i i will

2328
01:29:25,040 --> 01:29:28,000
certainly do that i am also reaching out

2329
01:29:28,000 --> 01:29:30,639
to other groups in ietf

2330
01:29:30,639 --> 01:29:32,880
uh to see if there's a community of

2331
01:29:32,880 --> 01:29:35,280
interest that would like to

2332
01:29:35,280 --> 01:29:38,159
address this issue explicitly in one way

2333
01:29:38,159 --> 01:29:40,000
or another

2334
01:29:40,000 --> 01:29:41,199
my

2335
01:29:41,199 --> 01:29:44,639
reply to aaron's uh point and justin's

2336
01:29:44,639 --> 01:29:47,360
and uh everybody else's

2337
01:29:47,360 --> 01:29:49,520
is that we are now

2338
01:29:49,520 --> 01:29:50,320
in

2339
01:29:50,320 --> 01:29:52,480
given the discussions about

2340
01:29:52,480 --> 01:29:55,040
the difficulty in regulating these

2341
01:29:55,040 --> 01:29:58,400
oligopolies these platforms

2342
01:29:58,400 --> 01:30:01,920
we are now in a very different

2343
01:30:01,920 --> 01:30:06,080
regulatory capture type domain than we

2344
01:30:06,080 --> 01:30:08,400
were when owath and uma

2345
01:30:08,400 --> 01:30:10,480
were being worked on

2346
01:30:10,480 --> 01:30:12,159
um and

2347
01:30:12,159 --> 01:30:14,080
what i'm seeing at least and i think

2348
01:30:14,080 --> 01:30:15,520
many of you

2349
01:30:15,520 --> 01:30:17,840
um and some of the people

2350
01:30:17,840 --> 01:30:20,960
in this meeting today is that people

2351
01:30:20,960 --> 01:30:23,440
are reaching for decentralization or

2352
01:30:23,440 --> 01:30:27,120
inventing decentralization protocols in

2353
01:30:27,120 --> 01:30:29,520
w3c for example

2354
01:30:29,520 --> 01:30:32,320
or diff

2355
01:30:32,639 --> 01:30:35,360
in places that are not ietf

2356
01:30:35,360 --> 01:30:37,760
uh to fill in this gap

2357
01:30:37,760 --> 01:30:39,920
uh that i think an app

2358
01:30:39,920 --> 01:30:43,120
is at least in my mind supposed to fill

2359
01:30:43,120 --> 01:30:45,679
and how we fill it obviously i'm not uh

2360
01:30:45,679 --> 01:30:48,239
at least been able to to say but i will

2361
01:30:48,239 --> 01:30:50,000
raise this issue

2362
01:30:50,000 --> 01:30:52,560
with a pr to maybe the privacy

2363
01:30:52,560 --> 01:30:55,199
considerations section sounds like

2364
01:30:55,199 --> 01:30:57,440
and see what happens

2365
01:30:57,440 --> 01:31:00,599
thank you

2366
01:31:02,800 --> 01:31:05,040
well

2367
01:31:06,880 --> 01:31:09,360
i think this is lost call for open mic

2368
01:31:09,360 --> 01:31:11,759
issues

2369
01:31:12,400 --> 01:31:14,480
going once

2370
01:31:14,480 --> 01:31:16,800
going twice

2371
01:31:16,800 --> 01:31:18,880
all right we're done i'll see you all in

2372
01:31:18,880 --> 01:31:20,880
london presumably

2373
01:31:20,880 --> 01:31:24,199
same trip

2374
01:31:53,040 --> 01:31:56,040
captured

2375
01:32:09,830 --> 01:32:12,960
[Music]

2376
01:32:34,960 --> 01:32:36,840
so are we

2377
01:32:36,840 --> 01:32:40,840
doing this

2378
01:32:44,560 --> 01:32:47,560
yes

