1
00:00:11,599 --> 00:00:14,599
oh

2
00:00:24,880 --> 00:00:28,160
hi good day everyone welcome to the

3
00:00:28,160 --> 00:00:30,240
that net working loop session at iitf

4
00:00:30,240 --> 00:00:31,760
111

5
00:00:31,760 --> 00:00:32,719
uh

6
00:00:32,719 --> 00:00:34,079
hybrid meeting

7
00:00:34,079 --> 00:00:35,760
uh welcome everyone

8
00:00:35,760 --> 00:00:37,280
who are in person

9
00:00:37,280 --> 00:00:39,040
in the meeting room in philadelphia and

10
00:00:39,040 --> 00:00:39,920
also

11
00:00:39,920 --> 00:00:40,960
online

12
00:00:40,960 --> 00:00:43,040
uh we are chairing the working group

13
00:00:43,040 --> 00:00:45,440
together with blue berger and damianos

14
00:00:45,440 --> 00:00:46,559
farkas

15
00:00:46,559 --> 00:00:49,920
and many thanks to ethan for being our

16
00:00:49,920 --> 00:00:51,120
secretary

17
00:00:51,120 --> 00:00:54,160
and taking care of the job minutes and

18
00:00:54,160 --> 00:00:56,480
so on

19
00:00:56,879 --> 00:00:59,199
you find the information at the usual

20
00:00:59,199 --> 00:01:01,600
places i don't go there but i would like

21
00:01:01,600 --> 00:01:04,959
to remind everyone to the ietf note 12

22
00:01:04,959 --> 00:01:06,640
which is

23
00:01:06,640 --> 00:01:10,840
our rules of uh way of working operation

24
00:01:10,840 --> 00:01:14,560
and i would like to also remind everyone

25
00:01:14,560 --> 00:01:16,720
that uh

26
00:01:16,720 --> 00:01:19,600
what is being uh set here

27
00:01:19,600 --> 00:01:22,320
is getting minuted and becomes part of

28
00:01:22,320 --> 00:01:24,560
the uh permanent record

29
00:01:24,560 --> 00:01:27,920
of the itf as as a contribution

30
00:01:27,920 --> 00:01:30,000
if you are not familiar with uh

31
00:01:30,000 --> 00:01:31,759
noteworld then please

32
00:01:31,759 --> 00:01:34,799
please go and double check

33
00:01:35,040 --> 00:01:39,200
uh also a reminder on our

34
00:01:39,200 --> 00:01:41,360
guidelines in terms of

35
00:01:41,360 --> 00:01:42,880
behavior

36
00:01:42,880 --> 00:01:44,399
like we

37
00:01:44,399 --> 00:01:46,000
expect everybody

38
00:01:46,000 --> 00:01:47,680
being familiar with it

39
00:01:47,680 --> 00:01:49,119
and expect

40
00:01:49,119 --> 00:01:51,520
to be here professional to

41
00:01:51,520 --> 00:01:55,640
the other people other contributors

42
00:01:56,719 --> 00:01:58,159
as for

43
00:01:58,159 --> 00:02:00,240
attendance in these meetings

44
00:02:00,240 --> 00:02:04,000
a couple of hints on this slide

45
00:02:04,000 --> 00:02:06,880
in person attendance

46
00:02:06,880 --> 00:02:09,280
please uh join me the call

47
00:02:09,280 --> 00:02:12,720
uh either from your uh phone uh by a

48
00:02:12,720 --> 00:02:14,480
mythical light

49
00:02:14,480 --> 00:02:16,480
which gives you the

50
00:02:16,480 --> 00:02:18,480
opportunity to control the slides if you

51
00:02:18,480 --> 00:02:20,640
are presenting for instance

52
00:02:20,640 --> 00:02:23,200
or if you join the full meta code and

53
00:02:23,200 --> 00:02:26,080
please pay attention not to

54
00:02:26,080 --> 00:02:27,680
use the audio

55
00:02:27,680 --> 00:02:31,760
and the video and also very important

56
00:02:31,760 --> 00:02:34,000
please wear your mask

57
00:02:34,000 --> 00:02:36,720
that's how we run

58
00:02:36,720 --> 00:02:39,840
and how we have this idea

59
00:02:39,840 --> 00:02:40,879
uh

60
00:02:40,879 --> 00:02:43,200
as for remote participants i think we

61
00:02:43,200 --> 00:02:43,920
are

62
00:02:43,920 --> 00:02:46,480
all very familiar uh

63
00:02:46,480 --> 00:02:51,000
with it in the past two years

64
00:02:53,120 --> 00:02:55,920
oh yes that's a good point that

65
00:02:55,920 --> 00:02:58,239
we will have a couple of questions uh to

66
00:02:58,239 --> 00:03:01,200
the group and we will use the

67
00:03:01,200 --> 00:03:04,159
polling tool of mythical

68
00:03:04,159 --> 00:03:06,720
we would like to ask everyone to join

69
00:03:06,720 --> 00:03:10,959
uh for that reason as well uh

70
00:03:11,920 --> 00:03:14,640
yeah the qr code is on the screen if you

71
00:03:14,640 --> 00:03:16,840
are in in person

72
00:03:16,840 --> 00:03:20,480
uh right hand side uh to you

73
00:03:20,480 --> 00:03:22,560
that's an easy way to join or

74
00:03:22,560 --> 00:03:26,000
you can join from the agenda page

75
00:03:26,000 --> 00:03:27,280
uh

76
00:03:27,280 --> 00:03:30,080
the blue sheets are automatic uh via

77
00:03:30,080 --> 00:03:33,040
joining with a post so you don't need to

78
00:03:33,040 --> 00:03:35,120
do anything extra

79
00:03:35,120 --> 00:03:38,400
and we also use the chat uh for example

80
00:03:38,400 --> 00:03:39,360
you can

81
00:03:39,360 --> 00:03:42,959
just use what we have in the medical

82
00:03:42,959 --> 00:03:46,560
note taking minutes is a joint effort

83
00:03:46,560 --> 00:03:48,799
uh so i would like to encourage everyone

84
00:03:48,799 --> 00:03:50,879
to join

85
00:03:50,879 --> 00:03:52,400
and and

86
00:03:52,400 --> 00:03:53,840
head on

87
00:03:53,840 --> 00:03:56,080
and go and double check if you say

88
00:03:56,080 --> 00:03:59,439
something that it's been captured

89
00:03:59,439 --> 00:04:01,519
correctly so the link is on the screen

90
00:04:01,519 --> 00:04:03,760
and also you can find it

91
00:04:03,760 --> 00:04:06,640
from the agenda page and so on and

92
00:04:06,640 --> 00:04:07,840
the other

93
00:04:07,840 --> 00:04:09,439
usual links

94
00:04:09,439 --> 00:04:11,840
as well

95
00:04:13,200 --> 00:04:14,879
here we are on thursday at the death

96
00:04:14,879 --> 00:04:16,238
note session

97
00:04:16,238 --> 00:04:19,600
but on a tuesday we had a joint session

98
00:04:19,600 --> 00:04:21,519
with the pass and the mpls working

99
00:04:21,519 --> 00:04:24,240
groups hosted by the pass working group

100
00:04:24,240 --> 00:04:25,680
and thank you for

101
00:04:25,680 --> 00:04:27,600
that arrangement

102
00:04:27,600 --> 00:04:30,479
these discussions is about the evolution

103
00:04:30,479 --> 00:04:32,560
of the mpls data plane

104
00:04:32,560 --> 00:04:34,800
and this is one of our data planes in

105
00:04:34,800 --> 00:04:36,080
that net

106
00:04:36,080 --> 00:04:38,000
so we pay attention

107
00:04:38,000 --> 00:04:38,960
that

108
00:04:38,960 --> 00:04:41,360
it remains

109
00:04:41,360 --> 00:04:43,520
good for that net that's our main

110
00:04:43,520 --> 00:04:45,840
interest so thank thanks everyone

111
00:04:45,840 --> 00:04:50,320
contributing to that and for the effort

112
00:04:50,960 --> 00:04:53,680
uh we have a packed agenda so we will

113
00:04:53,680 --> 00:04:57,199
pay attention to the time and we ask the

114
00:04:57,199 --> 00:04:59,840
presenters to also pay attention and and

115
00:04:59,840 --> 00:05:03,039
stick to their allocated time slot to

116
00:05:03,039 --> 00:05:04,639
let everyone

117
00:05:04,639 --> 00:05:07,440
have their slot and and

118
00:05:07,440 --> 00:05:10,440
speak

119
00:05:10,479 --> 00:05:12,560
update on on our the status of our

120
00:05:12,560 --> 00:05:15,360
working group we have two documents uh

121
00:05:15,360 --> 00:05:18,080
for which publication has been requested

122
00:05:18,080 --> 00:05:18,880
uh

123
00:05:18,880 --> 00:05:20,320
the first one on the screen is the

124
00:05:20,320 --> 00:05:22,000
bounded latency

125
00:05:22,000 --> 00:05:26,160
draft which got into the rfc aq editor

126
00:05:26,160 --> 00:05:29,120
very recently so heading towards

127
00:05:29,120 --> 00:05:32,320
the publication and the young draft is

128
00:05:32,320 --> 00:05:33,919
the next one in the queue

129
00:05:33,919 --> 00:05:36,160
to our publication

130
00:05:36,160 --> 00:05:38,639
we have a document in working group last

131
00:05:38,639 --> 00:05:39,520
call

132
00:05:39,520 --> 00:05:42,400
the oem framework document

133
00:05:42,400 --> 00:05:44,560
the last call closes on the 3rd of

134
00:05:44,560 --> 00:05:46,160
august

135
00:05:46,160 --> 00:05:49,919
we will get after this intro an update

136
00:05:49,919 --> 00:05:51,840
on that and i would like to encourage

137
00:05:51,840 --> 00:05:54,240
everybody to review

138
00:05:54,240 --> 00:05:55,840
and and comment

139
00:05:55,840 --> 00:05:57,199
it is really

140
00:05:57,199 --> 00:05:59,039
high time

141
00:05:59,039 --> 00:06:02,479
we have a draft which is a candidate for

142
00:06:02,479 --> 00:06:04,560
working group adoption

143
00:06:04,560 --> 00:06:07,039
the ipr call process has been or is

144
00:06:07,039 --> 00:06:09,280
being ongoing and

145
00:06:09,280 --> 00:06:11,039
we are going forward

146
00:06:11,039 --> 00:06:12,400
as usual

147
00:06:12,400 --> 00:06:13,759
and we have two

148
00:06:13,759 --> 00:06:16,240
uh drafts working group drafts that are

149
00:06:16,240 --> 00:06:19,680
not on the agenda at this meeting

150
00:06:19,680 --> 00:06:22,639
one is the controller thing framework

151
00:06:22,639 --> 00:06:26,080
uh which we should come back and maybe

152
00:06:26,080 --> 00:06:28,479
touch upon it a bit later at this

153
00:06:28,479 --> 00:06:29,600
session

154
00:06:29,600 --> 00:06:31,520
and um

155
00:06:31,520 --> 00:06:34,720
one of the the new ones the the

156
00:06:34,720 --> 00:06:36,000
that nuclear

157
00:06:36,000 --> 00:06:39,840
wire mpls over udpip

158
00:06:41,440 --> 00:06:43,360
we have received a

159
00:06:43,360 --> 00:06:46,319
liaison letter from

160
00:06:46,319 --> 00:06:47,360
itu

161
00:06:47,360 --> 00:06:49,360
this study group 13

162
00:06:49,360 --> 00:06:51,440
question 6 i think

163
00:06:51,440 --> 00:06:53,520
yes question 6.

164
00:06:53,520 --> 00:06:56,400
we have been in

165
00:06:56,400 --> 00:06:58,880
liaison exchange with them

166
00:06:58,880 --> 00:07:01,599
received one formally for information we

167
00:07:01,599 --> 00:07:02,960
provided

168
00:07:02,960 --> 00:07:04,720
a response

169
00:07:04,720 --> 00:07:06,319
to their work on deterministic

170
00:07:06,319 --> 00:07:08,160
communications

171
00:07:08,160 --> 00:07:09,120
and

172
00:07:09,120 --> 00:07:12,240
we have received now this newer liaison

173
00:07:12,240 --> 00:07:13,759
for information

174
00:07:13,759 --> 00:07:16,160
with three attachments

175
00:07:16,160 --> 00:07:18,400
you can find the link

176
00:07:18,400 --> 00:07:20,960
via this stack or

177
00:07:20,960 --> 00:07:23,840
the other ways the typical ways

178
00:07:23,840 --> 00:07:25,199
please check

179
00:07:25,199 --> 00:07:28,400
and if we would like to respond as a

180
00:07:28,400 --> 00:07:31,840
working group we can develop a response

181
00:07:31,840 --> 00:07:34,400
on the list

182
00:07:35,919 --> 00:07:36,639
one

183
00:07:36,639 --> 00:07:39,280
significant step happened since the last

184
00:07:39,280 --> 00:07:40,880
ietf is that

185
00:07:40,880 --> 00:07:43,440
our charter has been approved i mean

186
00:07:43,440 --> 00:07:46,800
updated and approved the approve was

187
00:07:46,800 --> 00:07:48,720
the new step we have been discussing the

188
00:07:48,720 --> 00:07:49,919
update

189
00:07:49,919 --> 00:07:51,919
you can see on the screen the actual

190
00:07:51,919 --> 00:07:53,280
changes

191
00:07:53,280 --> 00:07:54,160
and

192
00:07:54,160 --> 00:07:56,800
as we have been discussing

193
00:07:56,800 --> 00:07:59,280
the intention behind the update is

194
00:07:59,280 --> 00:08:01,840
uh to address uh sort of enhanced

195
00:08:01,840 --> 00:08:04,720
requirements towards.net

196
00:08:04,720 --> 00:08:08,000
and uh to address these requirements

197
00:08:08,000 --> 00:08:11,199
uh to enable uh the development of

198
00:08:11,199 --> 00:08:13,919
queueing solution

199
00:08:13,919 --> 00:08:15,759
we will have contributions

200
00:08:15,759 --> 00:08:19,280
on this later today

201
00:08:19,680 --> 00:08:22,000
milestones we have

202
00:08:22,000 --> 00:08:24,160
just recently updated the milestones in

203
00:08:24,160 --> 00:08:27,759
the beginning of the week uh

204
00:08:27,759 --> 00:08:30,479
capturing our our our progress

205
00:08:30,479 --> 00:08:32,880
the the blue ones on the screen are the

206
00:08:32,880 --> 00:08:36,159
actual changes uh of the dates just uh

207
00:08:36,159 --> 00:08:40,240
to adjust like buzz dates are not

208
00:08:40,479 --> 00:08:42,799
valid or were not valid

209
00:08:42,799 --> 00:08:43,919
and

210
00:08:43,919 --> 00:08:45,440
we should

211
00:08:45,440 --> 00:08:47,920
i think try to pay attention to move

212
00:08:47,920 --> 00:08:50,959
forward to to meet these microns and i

213
00:08:50,959 --> 00:08:52,800
think it's a good uh

214
00:08:52,800 --> 00:08:55,600
motivation

215
00:08:55,600 --> 00:08:57,839
also a reminder on on the ipr

216
00:08:57,839 --> 00:08:59,440
disclosure process

217
00:08:59,440 --> 00:09:02,959
is very important to disclose the ipr

218
00:09:02,959 --> 00:09:04,959
and

219
00:09:04,959 --> 00:09:06,080
the last

220
00:09:06,080 --> 00:09:07,600
step is

221
00:09:07,600 --> 00:09:09,519
a bit more than the the rest that if

222
00:09:09,519 --> 00:09:13,040
there's a new author then we ask

223
00:09:13,040 --> 00:09:16,399
the disclosure

224
00:09:17,120 --> 00:09:20,399
as for progressing our work

225
00:09:20,399 --> 00:09:22,800
we have the virtual possibilities

226
00:09:22,800 --> 00:09:24,080
in between

227
00:09:24,080 --> 00:09:26,640
uh the idf sessions

228
00:09:26,640 --> 00:09:29,040
like we have been leveraging the the

229
00:09:29,040 --> 00:09:30,640
working group webex

230
00:09:30,640 --> 00:09:32,720
we can do that uh for uh for other

231
00:09:32,720 --> 00:09:36,399
topics most recently it has been the oem

232
00:09:36,399 --> 00:09:38,720
progressing the oem drafts

233
00:09:38,720 --> 00:09:40,720
we had by weekly meetings and upon

234
00:09:40,720 --> 00:09:43,839
request we are happy to

235
00:09:43,839 --> 00:09:45,680
set up working meetings

236
00:09:45,680 --> 00:09:47,279
or interim

237
00:09:47,279 --> 00:09:49,600
meeting if

238
00:09:49,600 --> 00:09:52,320
that fits better please feel free to

239
00:09:52,320 --> 00:09:53,920
to contact us

240
00:09:53,920 --> 00:09:55,440
working group chairs

241
00:09:55,440 --> 00:09:59,360
and we figure out how to say that

242
00:09:59,440 --> 00:10:00,320
that's

243
00:10:00,320 --> 00:10:02,399
that's for the intro

244
00:10:02,399 --> 00:10:04,480
do you want to add anything

245
00:10:04,480 --> 00:10:08,000
okay so let's uh move on uh to the

246
00:10:08,000 --> 00:10:10,640
first uh

247
00:10:12,560 --> 00:10:14,560
presentation

248
00:10:14,560 --> 00:10:16,959
you can just tell me when to go next

249
00:10:16,959 --> 00:10:21,600
time okay thank you um can i take it off

250
00:10:21,600 --> 00:10:24,160
you you don't need to

251
00:10:24,160 --> 00:10:27,440
i'll feel more comfortable i'm sorry

252
00:10:27,440 --> 00:10:28,399
okay

253
00:10:28,399 --> 00:10:31,440
um next slide please thank you

254
00:10:31,440 --> 00:10:34,399
okay so um

255
00:10:34,560 --> 00:10:37,200
we have uh three documents working group

256
00:10:37,200 --> 00:10:40,399
documents uh in the framework um

257
00:10:40,399 --> 00:10:43,760
for that net as

258
00:10:43,760 --> 00:10:46,000
you've seen that uh this is in a working

259
00:10:46,000 --> 00:10:47,760
group last call and

260
00:10:47,760 --> 00:10:50,640
of course appreciate your

261
00:10:50,640 --> 00:10:53,519
comments reviews and response to the

262
00:10:53,519 --> 00:10:55,279
working request call

263
00:10:55,279 --> 00:10:59,040
and two documents that

264
00:10:59,040 --> 00:11:00,959
analyze um

265
00:11:00,959 --> 00:11:05,360
applicability of existing oem

266
00:11:05,360 --> 00:11:06,560
toolbox

267
00:11:06,560 --> 00:11:09,680
for ip data plane and mpos data plane to

268
00:11:09,680 --> 00:11:12,399
the specifics of the net architecture

269
00:11:12,399 --> 00:11:15,279
specifically that we have two sub layers

270
00:11:15,279 --> 00:11:17,760
uh forwarding sub layer and that net

271
00:11:17,760 --> 00:11:20,880
service sub layer so let's take a look

272
00:11:20,880 --> 00:11:22,640
at what we have

273
00:11:22,640 --> 00:11:26,560
uh the framework document um lists a

274
00:11:26,560 --> 00:11:30,560
general requirement for the detonate oem

275
00:11:30,560 --> 00:11:31,839
that

276
00:11:31,839 --> 00:11:34,160
is

277
00:11:34,880 --> 00:11:36,959
executed between

278
00:11:36,959 --> 00:11:39,360
that net

279
00:11:39,360 --> 00:11:42,480
maintenance endpoints

280
00:11:42,480 --> 00:11:45,920
and requirements specific for proactive

281
00:11:45,920 --> 00:11:47,680
on on-demand

282
00:11:47,680 --> 00:11:51,760
monitoring and measurement oem methods

283
00:11:51,760 --> 00:11:54,319
for the

284
00:11:54,560 --> 00:11:58,000
active oem uh also uh we

285
00:11:58,000 --> 00:12:01,279
uh recognize that uh some of the tools

286
00:12:01,279 --> 00:12:02,800
are used

287
00:12:02,800 --> 00:12:05,680
as um

288
00:12:05,680 --> 00:12:08,800
troubleshooting mostly it's on demand or

289
00:12:08,800 --> 00:12:10,639
proactive for

290
00:12:10,639 --> 00:12:13,120
longer lasting test sessions

291
00:12:13,120 --> 00:12:16,160
and they may be configured and

292
00:12:16,160 --> 00:12:19,760
to be instantiated and activated upon

293
00:12:19,760 --> 00:12:24,220
the service being brought up

294
00:12:24,220 --> 00:12:25,519
[Music]

295
00:12:25,519 --> 00:12:26,959
so

296
00:12:26,959 --> 00:12:28,480
active oems

297
00:12:28,480 --> 00:12:30,560
should support active and

298
00:12:30,560 --> 00:12:34,079
passive and hybrid oem are

299
00:12:34,079 --> 00:12:36,000
identified

300
00:12:36,000 --> 00:12:38,959
active oem it's uh using specifically

301
00:12:38,959 --> 00:12:42,399
constructed uh in injected in their uh

302
00:12:42,399 --> 00:12:44,560
network uh test packets

303
00:12:44,560 --> 00:12:47,040
uh passive uh it's uh we're more

304
00:12:47,040 --> 00:12:50,320
familiar with their snmp queries but at

305
00:12:50,320 --> 00:12:53,760
the same time that can uh be based on

306
00:12:53,760 --> 00:12:54,170
um

307
00:12:54,170 --> 00:12:55,440
[Music]

308
00:12:55,440 --> 00:12:59,920
notifications or rpc uh with their using

309
00:12:59,920 --> 00:13:03,440
based on a yang data model

310
00:13:03,440 --> 00:13:06,160
and hybrid uh it's

311
00:13:06,160 --> 00:13:07,920
sometimes

312
00:13:07,920 --> 00:13:09,839
characterized something in between so

313
00:13:09,839 --> 00:13:11,920
there are

314
00:13:11,920 --> 00:13:15,200
mechanisms that combine

315
00:13:15,200 --> 00:13:18,959
elements of active oem and passive

316
00:13:18,959 --> 00:13:20,959
usually with a

317
00:13:20,959 --> 00:13:23,439
minimum

318
00:13:24,320 --> 00:13:26,800
modification of the data packet to

319
00:13:26,800 --> 00:13:27,920
provide

320
00:13:27,920 --> 00:13:31,600
a simplified identification of

321
00:13:31,600 --> 00:13:33,519
their marked

322
00:13:33,519 --> 00:13:35,040
packets

323
00:13:35,040 --> 00:13:39,279
thus allowing onpath telemetry

324
00:13:39,279 --> 00:13:41,600
information to be generated

325
00:13:41,600 --> 00:13:43,839
and collected an

326
00:13:43,839 --> 00:13:45,120
ad

327
00:13:45,120 --> 00:13:46,639
collector side

328
00:13:46,639 --> 00:13:50,160
for network analytics and possibly use

329
00:13:50,160 --> 00:13:51,600
for

330
00:13:51,600 --> 00:13:55,600
close network automation loop

331
00:13:56,399 --> 00:13:58,000
so in addition to supporting

332
00:13:58,000 --> 00:14:00,720
unidirectional oem methods such as a

333
00:14:00,720 --> 00:14:02,959
continuity check and packet delay loss

334
00:14:02,959 --> 00:14:04,560
measurement

335
00:14:04,560 --> 00:14:06,880
in some cases for the debt net

336
00:14:06,880 --> 00:14:08,720
there is interest to support the

337
00:14:08,720 --> 00:14:11,839
bi-directional net falls

338
00:14:11,839 --> 00:14:14,480
next slide please

339
00:14:14,480 --> 00:14:17,040
so uh as i mentioned that uh we

340
00:14:17,040 --> 00:14:19,440
identified their detonate architecture

341
00:14:19,440 --> 00:14:22,160
identifies uh there are two sub layers a

342
00:14:22,160 --> 00:14:23,920
forwarding and uh

343
00:14:23,920 --> 00:14:25,600
service sub layer

344
00:14:25,600 --> 00:14:29,040
for the forwarding uh it's important is

345
00:14:29,040 --> 00:14:32,480
to be able to do a path mtu discovery

346
00:14:32,480 --> 00:14:36,800
and use a remote defect indication

347
00:14:36,800 --> 00:14:37,920
so that

348
00:14:37,920 --> 00:14:39,519
[Music]

349
00:14:39,519 --> 00:14:41,600
the remote appear

350
00:14:41,600 --> 00:14:43,839
can indicate their loss of path

351
00:14:43,839 --> 00:14:45,279
continuity

352
00:14:45,279 --> 00:14:48,720
that's usually how it's done in

353
00:14:48,720 --> 00:14:50,639
bfd

354
00:14:50,639 --> 00:14:55,279
also support monitoring leveled for

355
00:14:55,279 --> 00:14:56,880
path segment

356
00:14:56,880 --> 00:14:59,199
oem

357
00:14:59,199 --> 00:15:02,000
next slide please

358
00:15:02,000 --> 00:15:04,720
so for the service sub layer uh we

359
00:15:04,720 --> 00:15:08,560
identify the uh use of

360
00:15:08,560 --> 00:15:10,480
pre-off or packet replication

361
00:15:10,480 --> 00:15:12,720
elimination order preservation sub

362
00:15:12,720 --> 00:15:15,839
functions that can be uh instantiated in

363
00:15:15,839 --> 00:15:16,639
a

364
00:15:16,639 --> 00:15:18,480
net domain

365
00:15:18,480 --> 00:15:21,279
and that's what their

366
00:15:21,279 --> 00:15:23,360
requirements for the dead net for the

367
00:15:23,360 --> 00:15:27,360
ser that net sub layer oem uh to do

368
00:15:27,360 --> 00:15:30,720
discovery and uh functionality

369
00:15:30,720 --> 00:15:34,800
verification of the pre-op

370
00:15:35,120 --> 00:15:37,920
next slide please

371
00:15:37,920 --> 00:15:39,519
okay now we

372
00:15:39,519 --> 00:15:42,560
next step would be to talk about and

373
00:15:42,560 --> 00:15:43,680
discuss

374
00:15:43,680 --> 00:15:44,720
their

375
00:15:44,720 --> 00:15:46,399
that net and

376
00:15:46,399 --> 00:15:48,399
ip data plane

377
00:15:48,399 --> 00:15:52,480
so um the well-known mechanisms are

378
00:15:52,480 --> 00:15:55,680
such as their icmp that we usually refer

379
00:15:55,680 --> 00:15:59,680
to as ping and trace route well known to

380
00:15:59,680 --> 00:16:01,920
for

381
00:16:02,240 --> 00:16:03,980
path continuity

382
00:16:03,980 --> 00:16:05,600
[Music]

383
00:16:05,600 --> 00:16:08,000
detection and the troubleshooting defect

384
00:16:08,000 --> 00:16:09,440
localization

385
00:16:09,440 --> 00:16:12,000
also it's a bfd it's a bi-directional

386
00:16:12,000 --> 00:16:13,759
forwarding detection

387
00:16:13,759 --> 00:16:16,959
um and for performance monitoring it

388
00:16:16,959 --> 00:16:19,440
could be t worm stamp or some other

389
00:16:19,440 --> 00:16:22,160
protocols

390
00:16:22,720 --> 00:16:26,800
the challenges here is that

391
00:16:27,360 --> 00:16:28,560
these are

392
00:16:28,560 --> 00:16:31,279
as in case of icmps

393
00:16:31,279 --> 00:16:33,199
based on ip

394
00:16:33,199 --> 00:16:36,480
or a bfd they're using their udp

395
00:16:36,480 --> 00:16:38,720
protocol as a transport

396
00:16:38,720 --> 00:16:40,079
and

397
00:16:40,079 --> 00:16:42,959
well-known udp ports so they're mapping

398
00:16:42,959 --> 00:16:45,440
to the particular

399
00:16:45,440 --> 00:16:47,920
that net flow

400
00:16:47,920 --> 00:16:51,920
and the forwarding flow um it cannot

401
00:16:51,920 --> 00:16:53,600
have um

402
00:16:53,600 --> 00:16:56,399
if the detmit flow identified based on a

403
00:16:56,399 --> 00:16:58,240
six tuple

404
00:16:58,240 --> 00:17:00,399
so the mapping is

405
00:17:00,399 --> 00:17:02,240
probably could be an operational

406
00:17:02,240 --> 00:17:05,599
challenge yes it's possible it's doable

407
00:17:05,599 --> 00:17:06,640
but

408
00:17:06,640 --> 00:17:09,520
so the operator might be uh

409
00:17:09,520 --> 00:17:11,280
aware of it

410
00:17:11,280 --> 00:17:14,559
and use appropriate mechanisms

411
00:17:14,559 --> 00:17:17,039
to do their uh correlation

412
00:17:17,039 --> 00:17:19,439
so that oem

413
00:17:19,439 --> 00:17:22,720
is used to monitor a desired and

414
00:17:22,720 --> 00:17:26,400
targeted that net flow

415
00:17:27,280 --> 00:17:28,480
okay

416
00:17:28,480 --> 00:17:30,799
any questions

417
00:17:30,799 --> 00:17:33,039
okay let's move on

418
00:17:33,039 --> 00:17:34,799
next slide please

419
00:17:34,799 --> 00:17:36,720
okay so uh

420
00:17:36,720 --> 00:17:39,120
one of uh possible

421
00:17:39,120 --> 00:17:40,720
methods of

422
00:17:40,720 --> 00:17:43,200
doing active oem uh

423
00:17:43,200 --> 00:17:47,360
in a forwarding sub layer in

424
00:17:47,360 --> 00:17:50,240
ip environment for that net is to use

425
00:17:50,240 --> 00:17:53,679
that net is in udp encapsulation so the

426
00:17:53,679 --> 00:17:56,960
detmit flow itself is encapsulated in

427
00:17:56,960 --> 00:18:00,160
the udp tunnel and then active oem is

428
00:18:00,160 --> 00:18:03,440
encapsulated in the same udp tunnel so

429
00:18:03,440 --> 00:18:05,520
thus we ensure that in the forwarding

430
00:18:05,520 --> 00:18:06,480
clear

431
00:18:06,480 --> 00:18:09,679
uh they are fade sharing

432
00:18:09,679 --> 00:18:13,039
because they use the same

433
00:18:20,640 --> 00:18:21,760
okay

434
00:18:21,760 --> 00:18:23,600
questions

435
00:18:23,600 --> 00:18:24,799
comments

436
00:18:24,799 --> 00:18:26,799
okay we'll move on

437
00:18:26,799 --> 00:18:29,760
so i'll i guess i'll all right sure in

438
00:18:29,760 --> 00:18:32,400
the past we've talked about using

439
00:18:32,400 --> 00:18:36,320
uh aggregated state to not have to put

440
00:18:36,320 --> 00:18:39,360
um do an exterior encapsulation

441
00:18:39,360 --> 00:18:42,240
and we've not had any firm proposal on

442
00:18:42,240 --> 00:18:42,960
that

443
00:18:42,960 --> 00:18:46,000
so it does not it's not reflected in the

444
00:18:46,000 --> 00:18:48,080
current document um

445
00:18:48,080 --> 00:18:51,200
go ahead yeah um actually if we look at

446
00:18:51,200 --> 00:18:53,200
the

447
00:18:53,200 --> 00:18:56,679
previous slide

448
00:18:57,679 --> 00:18:58,480
so

449
00:18:58,480 --> 00:19:00,080
that's where

450
00:19:00,080 --> 00:19:01,600
okay that's how

451
00:19:01,600 --> 00:19:03,520
existing tools without any

452
00:19:03,520 --> 00:19:05,840
encapsulations

453
00:19:05,840 --> 00:19:07,679
envisioned to be used so basically there

454
00:19:07,679 --> 00:19:10,160
are a lot of operational

455
00:19:10,160 --> 00:19:13,200
mechanisms to establish

456
00:19:13,200 --> 00:19:15,760
relationship between

457
00:19:15,760 --> 00:19:17,440
monitored or

458
00:19:17,440 --> 00:19:19,280
that net flow that intended to be

459
00:19:19,280 --> 00:19:23,200
monitored and oem mechanisms because the

460
00:19:23,200 --> 00:19:26,080
problem is or the challenge is that

461
00:19:26,080 --> 00:19:27,600
we're using

462
00:19:27,600 --> 00:19:28,640
a

463
00:19:28,640 --> 00:19:31,440
specific icmp protocol

464
00:19:31,440 --> 00:19:35,440
a specific ip protocol as icmp or we're

465
00:19:35,440 --> 00:19:38,720
using particular well-known udp

466
00:19:38,720 --> 00:19:39,840
port

467
00:19:39,840 --> 00:19:41,600
for different

468
00:19:41,600 --> 00:19:42,720
oem

469
00:19:42,720 --> 00:19:47,440
uh protocols bfd is distinct from t-wamp

470
00:19:47,440 --> 00:19:50,880
stamp can use the same uh udp port well

471
00:19:50,880 --> 00:19:51,799
known

472
00:19:51,799 --> 00:19:53,440
872

473
00:19:53,440 --> 00:19:56,000
okay so

474
00:19:56,000 --> 00:19:57,600
because uh

475
00:19:57,600 --> 00:20:01,120
we already are bound by oem protocol

476
00:20:01,120 --> 00:20:02,080
what

477
00:20:02,080 --> 00:20:03,120
um

478
00:20:03,120 --> 00:20:06,080
destination port uh udp destination port

479
00:20:06,080 --> 00:20:08,240
we use and that with the fact that we're

480
00:20:08,240 --> 00:20:13,200
using udp transport so it uh requires

481
00:20:13,200 --> 00:20:16,240
special provisioning on

482
00:20:16,240 --> 00:20:19,200
uh within a detonate domain

483
00:20:19,200 --> 00:20:21,520
on a forwarding sub layer to establish

484
00:20:21,520 --> 00:20:25,440
this correlation so that

485
00:20:25,440 --> 00:20:26,880
test packets

486
00:20:26,880 --> 00:20:29,360
are treated the same way

487
00:20:29,360 --> 00:20:31,200
one way of

488
00:20:31,200 --> 00:20:33,919
helping is for example it could be use

489
00:20:33,919 --> 00:20:35,280
of

490
00:20:35,280 --> 00:20:37,919
source port numbers or udp source port

491
00:20:37,919 --> 00:20:41,600
numbers to help to establishing and uh

492
00:20:41,600 --> 00:20:43,679
to that degree

493
00:20:43,679 --> 00:20:45,120
we have this

494
00:20:45,120 --> 00:20:48,559
uh discussion reflected in

495
00:20:48,559 --> 00:20:51,280
that net for ap data plane

496
00:20:51,280 --> 00:20:52,320
document

497
00:20:52,320 --> 00:20:53,600
but

498
00:20:53,600 --> 00:20:54,559
again

499
00:20:54,559 --> 00:20:56,799
we are not prescribing how to establish

500
00:20:56,799 --> 00:20:59,120
this correlation because i

501
00:20:59,120 --> 00:21:02,559
believe this is a operational issue and

502
00:21:02,559 --> 00:21:05,679
there are many ways to do that

503
00:21:05,679 --> 00:21:06,640
sure

504
00:21:06,640 --> 00:21:08,240
and on the next we go to the next slide

505
00:21:08,240 --> 00:21:10,720
for a moment

506
00:21:11,120 --> 00:21:13,520
it would also be possible to have that

507
00:21:13,520 --> 00:21:16,799
active oem in a new udp tunnel and have

508
00:21:16,799 --> 00:21:19,919
the net flow outside and have through

509
00:21:19,919 --> 00:21:21,440
control mechanisms through the

510
00:21:21,440 --> 00:21:23,919
controller plane have the association

511
00:21:23,919 --> 00:21:25,840
and we haven't seen that one

512
00:21:25,840 --> 00:21:28,480
oh okay that's interesting so basically

513
00:21:28,480 --> 00:21:32,000
uh to have all different active oem

514
00:21:32,000 --> 00:21:33,360
protocols

515
00:21:33,360 --> 00:21:34,640
in the same

516
00:21:34,640 --> 00:21:39,440
uvb tunnel and then map that udp tunnel

517
00:21:39,440 --> 00:21:41,440
oh okay that yes that's that's something

518
00:21:41,440 --> 00:21:43,520
different yeah that's a good idea i i

519
00:21:43,520 --> 00:21:46,400
thought we had uh it had been discussed

520
00:21:46,400 --> 00:21:48,640
but never actually done no actually i

521
00:21:48,640 --> 00:21:51,520
think that okay then i missed that

522
00:21:51,520 --> 00:21:53,919
because that's a little bit different

523
00:21:53,919 --> 00:21:56,159
that's interesting idea because as you

524
00:21:56,159 --> 00:21:57,520
see

525
00:21:57,520 --> 00:21:58,480
okay

526
00:21:58,480 --> 00:22:00,480
i have okay i have to say i haven't

527
00:22:00,480 --> 00:22:02,240
thought about it okay that's fine no but

528
00:22:02,240 --> 00:22:04,159
no no it's it's a good idea i'll i'll

529
00:22:04,159 --> 00:22:06,480
make sure that will be included in the

530
00:22:06,480 --> 00:22:09,039
next version of detriment and id great

531
00:22:09,039 --> 00:22:12,640
thank you um we also have pascal on

532
00:22:12,640 --> 00:22:14,159
pascal go ahead

533
00:22:14,159 --> 00:22:16,240
yes thank you um

534
00:22:16,240 --> 00:22:17,440
so basically

535
00:22:17,440 --> 00:22:19,039
we need that correlation that's that's

536
00:22:19,039 --> 00:22:20,640
clear um

537
00:22:20,640 --> 00:22:22,640
for ipv4 i understand that we are stuck

538
00:22:22,640 --> 00:22:24,840
with what you're saying for

539
00:22:24,840 --> 00:22:28,240
ipv6 uh we have the possibility to tag

540
00:22:28,240 --> 00:22:32,320
the packets in an option editor like

541
00:22:32,320 --> 00:22:33,760
hobby hub

542
00:22:33,760 --> 00:22:37,120
and in that case if the that net

543
00:22:37,120 --> 00:22:39,760
operation is dictated by the hub by hub

544
00:22:39,760 --> 00:22:40,960
option

545
00:22:40,960 --> 00:22:43,200
as opposed to the flow

546
00:22:43,200 --> 00:22:46,400
we can effectively encapsulate multiple

547
00:22:46,400 --> 00:22:47,600
flows

548
00:22:47,600 --> 00:22:50,640
into a single with the same hobby hub

549
00:22:50,640 --> 00:22:52,559
option the cool thing about

550
00:22:52,559 --> 00:22:54,960
using an option is you don't have to

551
00:22:54,960 --> 00:22:57,760
create an extra udpr caps

552
00:22:57,760 --> 00:22:59,760
and you don't have to have the silicone

553
00:22:59,760 --> 00:23:02,640
go all the way far into the packet after

554
00:23:02,640 --> 00:23:05,039
the udp to find which

555
00:23:05,039 --> 00:23:07,440
that operation you're looking at

556
00:23:07,440 --> 00:23:09,919
uh if it can hold a signal right after

557
00:23:09,919 --> 00:23:13,039
the ipv6 header in a hub by hub option

558
00:23:13,039 --> 00:23:14,720
so that's why i have this draft i mean i

559
00:23:14,720 --> 00:23:16,400
don't we have not discussed it much but

560
00:23:16,400 --> 00:23:19,120
the whole reason of this up by hub

561
00:23:19,120 --> 00:23:20,960
or it can also be a destination option i

562
00:23:20,960 --> 00:23:22,559
mean depending on what you do i mean if

563
00:23:22,559 --> 00:23:24,320
you look at the drafts you'll find more

564
00:23:24,320 --> 00:23:27,120
but basically the flow is something it's

565
00:23:27,120 --> 00:23:29,520
an application layer concept

566
00:23:29,520 --> 00:23:30,960
the

567
00:23:30,960 --> 00:23:34,320
recognition of the network operation on

568
00:23:34,320 --> 00:23:36,799
the packet is a network concept it

569
00:23:36,799 --> 00:23:39,200
doesn't have to be signaled by the

570
00:23:39,200 --> 00:23:41,600
application layer the application layer

571
00:23:41,600 --> 00:23:44,159
can have multiple flows and it's up to

572
00:23:44,159 --> 00:23:47,279
us to decide to tag the treatment that

573
00:23:47,279 --> 00:23:49,279
we're going to give to those flows

574
00:23:49,279 --> 00:23:52,799
that can be oam that can be data and

575
00:23:52,799 --> 00:23:54,960
there can be multiple flows being merged

576
00:23:54,960 --> 00:23:57,840
in one big pipe so for us it's this pipe

577
00:23:57,840 --> 00:23:59,360
that does this

578
00:23:59,360 --> 00:24:01,679
procedure we need to tag the packet with

579
00:24:01,679 --> 00:24:03,520
the pipe and then do based on that

580
00:24:03,520 --> 00:24:07,200
tagging we can do that in v6

581
00:24:07,200 --> 00:24:10,720
um okay pascal um

582
00:24:10,720 --> 00:24:11,919
there

583
00:24:11,919 --> 00:24:12,720
okay

584
00:24:12,720 --> 00:24:16,080
um i think that there's still um

585
00:24:16,080 --> 00:24:17,279
need

586
00:24:17,279 --> 00:24:18,799
for

587
00:24:18,799 --> 00:24:21,440
external

588
00:24:21,440 --> 00:24:23,520
tunnel because

589
00:24:23,520 --> 00:24:24,400
their

590
00:24:24,400 --> 00:24:26,799
identification of

591
00:24:26,799 --> 00:24:30,159
the multiplexing of active oem protocols

592
00:24:30,159 --> 00:24:35,200
is based on well-known udp port number

593
00:24:35,200 --> 00:24:37,440
so if it's

594
00:24:37,440 --> 00:24:40,480
not an external

595
00:24:40,480 --> 00:24:41,679
udp

596
00:24:41,679 --> 00:24:43,760
encapsulation

597
00:24:43,760 --> 00:24:48,480
then um their destination port number

598
00:24:48,480 --> 00:24:49,840
has to be

599
00:24:49,840 --> 00:24:52,159
for the given protocol and then it

600
00:24:52,159 --> 00:24:54,320
basically the case of

601
00:24:54,320 --> 00:24:57,039
previous slide when we have what's i

602
00:24:57,039 --> 00:24:59,120
refer to as

603
00:24:59,120 --> 00:25:01,200
existing uh

604
00:25:01,200 --> 00:25:02,559
oem

605
00:25:02,559 --> 00:25:04,400
yeah that's exactly what i was telling

606
00:25:04,400 --> 00:25:06,799
you we can solve a lot

607
00:25:06,799 --> 00:25:08,720
easier because you don't have to change

608
00:25:08,720 --> 00:25:10,400
your packet you just

609
00:25:10,400 --> 00:25:13,200
tag the packet with an ip

610
00:25:13,200 --> 00:25:16,400
hobbyhop header but your your all oem

611
00:25:16,400 --> 00:25:18,720
packet remains the same

612
00:25:18,720 --> 00:25:20,880
but the that net treatment does not

613
00:25:20,880 --> 00:25:23,679
depend on the ports anymore it depends

614
00:25:23,679 --> 00:25:26,840
on the hub by hop header

615
00:25:26,840 --> 00:25:29,679
um so they get the same treatment as

616
00:25:29,679 --> 00:25:31,039
long as they have the same homebuyer

617
00:25:31,039 --> 00:25:32,880
pedal and you use the port that you like

618
00:25:32,880 --> 00:25:36,480
you do you do everything you like really

619
00:25:36,480 --> 00:25:39,440
maybe can we continue this discussion

620
00:25:39,440 --> 00:25:43,360
yeah we need to talk about it because i

621
00:25:43,360 --> 00:25:45,120
don't think that

622
00:25:45,120 --> 00:25:49,520
uh their processing of oem protocols

623
00:25:49,520 --> 00:25:53,120
with hub by hop header by transit nodes

624
00:25:53,120 --> 00:25:55,440
have been defined

625
00:25:55,440 --> 00:25:56,960
because

626
00:25:56,960 --> 00:25:58,159
i

627
00:25:58,159 --> 00:26:01,120
for example in uh in b in the case of

628
00:26:01,120 --> 00:26:02,320
bfd

629
00:26:02,320 --> 00:26:05,840
like uh well single hop obviously it's

630
00:26:05,840 --> 00:26:08,880
considered to be for single ip hub but

631
00:26:08,880 --> 00:26:10,799
if we talk about

632
00:26:10,799 --> 00:26:12,159
multi-hop

633
00:26:12,159 --> 00:26:13,520
uh i

634
00:26:13,520 --> 00:26:15,360
don't

635
00:26:15,360 --> 00:26:17,120
need to look at and we need to look at

636
00:26:17,120 --> 00:26:20,640
and think of how the transit ip node

637
00:26:20,640 --> 00:26:24,400
react to multi-hop bfd packet which is

638
00:26:24,400 --> 00:26:27,919
it does not have a bfd discriminator

639
00:26:27,919 --> 00:26:32,400
so would it just forward it further

640
00:26:33,200 --> 00:26:35,520
let's get some

641
00:26:35,520 --> 00:26:37,520
interesting idea but

642
00:26:37,520 --> 00:26:39,919
i'm not sure that

643
00:26:39,919 --> 00:26:41,440
the mailing list over the draft the

644
00:26:41,440 --> 00:26:43,279
draft is there right it's been posted it

645
00:26:43,279 --> 00:26:46,000
details all this and one of the big goal

646
00:26:46,000 --> 00:26:48,240
of these drafts is to enable to decouple

647
00:26:48,240 --> 00:26:51,039
the treatment from the transport ports

648
00:26:51,039 --> 00:26:53,200
right it the goal is to signal the

649
00:26:53,200 --> 00:26:55,919
treatment at the lar3 and let the

650
00:26:55,919 --> 00:26:58,320
application information like the

651
00:26:58,320 --> 00:27:00,480
ports to the application so they do what

652
00:27:00,480 --> 00:27:02,720
they like now we can we should we should

653
00:27:02,720 --> 00:27:04,080
discuss that at the remaining list they

654
00:27:04,080 --> 00:27:06,640
don't want to clog euro

655
00:27:06,640 --> 00:27:08,640
please look at the draft and let's

656
00:27:08,640 --> 00:27:11,120
discuss on the ml but going all the way

657
00:27:11,120 --> 00:27:14,480
udps is a poor idea for silicon

658
00:27:14,480 --> 00:27:17,200
yes thank you okay so for the sub layer

659
00:27:17,200 --> 00:27:22,000
oem uh the proposal is uh to use uh mpos

660
00:27:22,000 --> 00:27:25,600
in udp so we are have the outer udp

661
00:27:25,600 --> 00:27:28,159
tunnel and then uh

662
00:27:28,159 --> 00:27:30,880
within it we encapsulate as we

663
00:27:30,880 --> 00:27:34,159
encapsulate that net for mpls network

664
00:27:34,159 --> 00:27:36,240
and thus it will give us

665
00:27:36,240 --> 00:27:38,399
uh

666
00:27:38,399 --> 00:27:41,600
detonate control work and for oem.net

667
00:27:41,600 --> 00:27:43,679
ach

668
00:27:43,679 --> 00:27:44,799
and then

669
00:27:44,799 --> 00:27:47,960
we can

670
00:27:48,640 --> 00:27:51,840
do their uh pre-off oem in terms of

671
00:27:51,840 --> 00:27:53,600
discovery and

672
00:27:53,600 --> 00:27:56,399
function uh verification and if we go

673
00:27:56,399 --> 00:27:57,840
next slide

674
00:27:57,840 --> 00:27:59,600
uh so this is

675
00:27:59,600 --> 00:28:03,520
more specific what's defined in

676
00:28:03,520 --> 00:28:06,799
that net for mpos data plane uh they're

677
00:28:06,799 --> 00:28:08,159
modified

678
00:28:08,159 --> 00:28:10,799
ach

679
00:28:12,399 --> 00:28:15,440
word so as you see it's different from

680
00:28:15,440 --> 00:28:18,799
that net control word uh first it's by

681
00:28:18,799 --> 00:28:21,279
the first nibble it's one

682
00:28:21,279 --> 00:28:24,480
comparing to zero in the control world

683
00:28:24,480 --> 00:28:26,480
and then we're effectively we're

684
00:28:26,480 --> 00:28:29,919
modifying from the ach defined for the

685
00:28:29,919 --> 00:28:31,200
pseudo-wires

686
00:28:31,200 --> 00:28:34,000
with a new version number

687
00:28:34,000 --> 00:28:37,279
and then a new format

688
00:28:37,919 --> 00:28:40,640
so to support

689
00:28:40,640 --> 00:28:42,640
batman's sublayer

690
00:28:42,640 --> 00:28:45,840
oem operation

691
00:28:51,120 --> 00:28:53,279
okay we have about

692
00:28:53,279 --> 00:28:58,039
two minutes for questions and comments

693
00:29:00,320 --> 00:29:04,720
thank you any further questions comment

694
00:29:06,080 --> 00:29:10,000
okay then let's move on to the next

695
00:29:10,240 --> 00:29:13,240
presentation

696
00:29:22,240 --> 00:29:25,200
hello can you hear me

697
00:29:25,520 --> 00:29:27,760
yes i hear you fine and i give you

698
00:29:27,760 --> 00:29:31,760
control over the slides so you can uh

699
00:29:31,919 --> 00:29:33,360
okay thank you

700
00:29:33,360 --> 00:29:35,919
my name is gino jean uh it's nice to

701
00:29:35,919 --> 00:29:37,440
present

702
00:29:37,440 --> 00:29:40,480
here um this is about the

703
00:29:40,480 --> 00:29:42,799
asynchronous deterministic networking

704
00:29:42,799 --> 00:29:46,559
framework for large-scale networks

705
00:29:46,559 --> 00:29:49,120
if you could speak up a little bit or or

706
00:29:49,120 --> 00:29:51,279
go closer to your mic that that would

707
00:29:51,279 --> 00:29:55,840
help us hearing you oh okay

708
00:29:56,620 --> 00:29:58,080
[Music]

709
00:29:58,080 --> 00:29:59,279
okay

710
00:29:59,279 --> 00:30:01,760
so uh it specifies the framework for

711
00:30:01,760 --> 00:30:03,520
both latency and cheetah bounce

712
00:30:03,520 --> 00:30:06,080
guarantee in large-scale networks with

713
00:30:06,080 --> 00:30:08,480
dynamic sources with arbitrary input

714
00:30:08,480 --> 00:30:10,080
patterns

715
00:30:10,080 --> 00:30:13,120
here the large scale means the network

716
00:30:13,120 --> 00:30:15,200
has arbitrary topology

717
00:30:15,200 --> 00:30:18,240
and it may include loops

718
00:30:18,240 --> 00:30:19,919
and the link capacity and the

719
00:30:19,919 --> 00:30:23,200
propagation delay may vary

720
00:30:23,200 --> 00:30:25,760
the dynamic sources means flows join and

721
00:30:25,760 --> 00:30:28,240
leave freely

722
00:30:28,240 --> 00:30:29,039
the

723
00:30:29,039 --> 00:30:32,480
arrival or input pattern is arbitrary

724
00:30:32,480 --> 00:30:33,360
that is

725
00:30:33,360 --> 00:30:36,240
a periodic or random packet arrivals

726
00:30:36,240 --> 00:30:37,360
here the

727
00:30:37,360 --> 00:30:41,279
the only constraint is the t spec the

728
00:30:41,279 --> 00:30:43,600
the burst maximum burst size and the

729
00:30:43,600 --> 00:30:46,240
average rate parameters

730
00:30:46,240 --> 00:30:50,919
so this is similar to the internet

731
00:30:51,520 --> 00:30:54,640
the overall framework tries to avoid

732
00:30:54,640 --> 00:30:56,880
time synchronization

733
00:30:56,880 --> 00:30:59,120
and to decouple the latency guarantee

734
00:30:59,120 --> 00:31:03,039
problem from the jita guarantee problem

735
00:31:03,039 --> 00:31:06,320
the latency guarantee

736
00:31:07,039 --> 00:31:08,559
is

737
00:31:08,559 --> 00:31:12,080
implemented or a bit done by the mainly

738
00:31:12,080 --> 00:31:15,440
by the regulating functions regulators

739
00:31:15,440 --> 00:31:17,600
digital guarantee

740
00:31:17,600 --> 00:31:20,240
is based on three part the first one is

741
00:31:20,240 --> 00:31:22,799
the latency guaranteed neto

742
00:31:22,799 --> 00:31:27,230
and time stamping and the buffering

743
00:31:27,230 --> 00:31:30,480
[Music]

744
00:31:30,799 --> 00:31:33,360
the internet already has the solution

745
00:31:33,360 --> 00:31:36,080
for the latest guarantee in some sense

746
00:31:36,080 --> 00:31:38,720
that is the deep sub framework

747
00:31:38,720 --> 00:31:42,240
but it is provided that in every link

748
00:31:42,240 --> 00:31:44,480
the total high priority traffic rate

749
00:31:44,480 --> 00:31:48,720
does not exceed the link capacity

750
00:31:49,200 --> 00:31:52,080
or to be precise

751
00:31:52,080 --> 00:31:53,440
the

752
00:31:53,440 --> 00:31:55,680
every flow has to be

753
00:31:55,680 --> 00:31:57,039
[Music]

754
00:31:57,039 --> 00:31:59,440
serviced by the rate

755
00:31:59,440 --> 00:32:02,880
greater than its input rate

756
00:32:02,880 --> 00:32:06,159
so the link capacity has to exceed

757
00:32:06,159 --> 00:32:09,600
in order for every flow has has the

758
00:32:09,600 --> 00:32:12,000
guaranteed rate that is higher than the

759
00:32:12,000 --> 00:32:13,679
average rate

760
00:32:13,679 --> 00:32:15,760
so the resource reservation and the

761
00:32:15,760 --> 00:32:19,200
automation controls are mandatory so

762
00:32:19,200 --> 00:32:22,399
these are the out of scope of this

763
00:32:22,399 --> 00:32:24,080
draft

764
00:32:24,080 --> 00:32:26,320
so the diffs framework works well for

765
00:32:26,320 --> 00:32:28,480
lightly utilized networks

766
00:32:28,480 --> 00:32:30,880
however when utilization is medium to

767
00:32:30,880 --> 00:32:32,320
high

768
00:32:32,320 --> 00:32:34,880
the burst accumulates

769
00:32:34,880 --> 00:32:37,360
assume there are unidentical flows

770
00:32:37,360 --> 00:32:40,159
coming into a switching node each with a

771
00:32:40,159 --> 00:32:42,640
parameter b and r

772
00:32:42,640 --> 00:32:45,120
b is the precise and r is the

773
00:32:45,120 --> 00:32:46,880
average rate

774
00:32:46,880 --> 00:32:49,600
at every node the burst accumulates as

775
00:32:49,600 --> 00:32:50,799
much as

776
00:32:50,799 --> 00:32:54,640
according to their scheduler type

777
00:32:54,640 --> 00:32:59,200
the b out here is the uh

778
00:32:59,200 --> 00:33:01,519
the flows uh burst

779
00:33:01,519 --> 00:33:04,799
size out of that node

780
00:33:04,799 --> 00:33:10,480
so anyway the the burst becomes larger

781
00:33:10,480 --> 00:33:12,720
but you can see that the

782
00:33:12,720 --> 00:33:14,399
the burst out is the function of the

783
00:33:14,399 --> 00:33:16,640
utilization

784
00:33:16,640 --> 00:33:19,919
and function of the other flows first or

785
00:33:19,919 --> 00:33:21,760
sometimes it is a function of the other

786
00:33:21,760 --> 00:33:24,559
flows maximum pekka length

787
00:33:24,559 --> 00:33:27,360
so they can vary a lot but anyhow they

788
00:33:27,360 --> 00:33:29,600
increases

789
00:33:29,600 --> 00:33:32,559
now the flows are with new parameter v

790
00:33:32,559 --> 00:33:34,000
out and r

791
00:33:34,000 --> 00:33:36,720
and this accumulation continues as flows

792
00:33:36,720 --> 00:33:38,799
travel

793
00:33:38,799 --> 00:33:41,200
now if there is a cycle in network

794
00:33:41,200 --> 00:33:45,039
topology it acts as a feed for the loop

795
00:33:45,039 --> 00:33:49,120
then the burst explosion phenomenon

796
00:33:49,120 --> 00:33:50,240
occurs

797
00:33:50,240 --> 00:33:51,440
and

798
00:33:51,440 --> 00:33:53,200
latency guarantee

799
00:33:53,200 --> 00:33:56,320
no longer holds

800
00:33:57,230 --> 00:33:59,360
[Music]

801
00:33:59,360 --> 00:34:02,080
so these solutions to mitigate the burst

802
00:34:02,080 --> 00:34:04,000
accumulation there are

803
00:34:04,000 --> 00:34:06,799
quite a lot of solutions i would say

804
00:34:06,799 --> 00:34:09,280
the slotted operation maybe without

805
00:34:09,280 --> 00:34:11,440
strict synchronization can be the

806
00:34:11,440 --> 00:34:12,800
solution

807
00:34:12,800 --> 00:34:15,760
and metadata based packet forwarding

808
00:34:15,760 --> 00:34:18,639
such as the latency budget etc

809
00:34:18,639 --> 00:34:22,000
can be also a solution

810
00:34:22,000 --> 00:34:24,480
and the flow regulation that is the

811
00:34:24,480 --> 00:34:26,719
direct solution to mitigate the burst

812
00:34:26,719 --> 00:34:29,440
accumulation it is to force a flow into

813
00:34:29,440 --> 00:34:31,760
each initial shape

814
00:34:31,760 --> 00:34:35,280
they have their own shortcomings

815
00:34:35,280 --> 00:34:38,000
for example the slight slotted operation

816
00:34:38,000 --> 00:34:39,360
or just likely queuing

817
00:34:39,360 --> 00:34:40,480
[Music]

818
00:34:40,480 --> 00:34:44,159
either strict or lose

819
00:34:44,719 --> 00:34:46,719
requires the slot planning and the

820
00:34:46,719 --> 00:34:49,199
source cooperation

821
00:34:49,199 --> 00:34:52,239
and moreover the cycle time can be

822
00:34:52,239 --> 00:34:55,119
as large as the accumulated burst size

823
00:34:55,119 --> 00:34:57,280
because it may have to accommodate all

824
00:34:57,280 --> 00:35:01,040
the other flows in its path

825
00:35:01,040 --> 00:35:03,839
the metadata-based folding

826
00:35:03,839 --> 00:35:06,960
it has many variations i i think

827
00:35:06,960 --> 00:35:08,480
may may

828
00:35:08,480 --> 00:35:09,920
disperse

829
00:35:09,920 --> 00:35:13,040
but sometimes may not disperse the

830
00:35:13,040 --> 00:35:15,280
accumulated burst

831
00:35:15,280 --> 00:35:18,800
and it requires the lookup

832
00:35:18,800 --> 00:35:21,920
the metadata lookup and decision based

833
00:35:21,920 --> 00:35:23,760
on the metadata and the

834
00:35:23,760 --> 00:35:26,000
node state

835
00:35:26,000 --> 00:35:28,880
and q reordering and overwriting the

836
00:35:28,880 --> 00:35:32,079
metadata at the departure

837
00:35:32,079 --> 00:35:34,560
in line speed these are required these

838
00:35:34,560 --> 00:35:36,880
are required

839
00:35:36,880 --> 00:35:38,560
in the in the meantime the flow

840
00:35:38,560 --> 00:35:40,160
regulation has

841
00:35:40,160 --> 00:35:42,880
its own i show coming it requires flow

842
00:35:42,880 --> 00:35:45,040
state maintaining

843
00:35:45,040 --> 00:35:47,280
but we argue that this can be overcome

844
00:35:47,280 --> 00:35:50,560
with the flow aggregation

845
00:35:50,880 --> 00:35:52,800
so here the the

846
00:35:52,800 --> 00:35:55,040
regulation of flow aggregate is

847
00:35:55,040 --> 00:35:57,839
suggested as a solution the first such

848
00:35:57,839 --> 00:36:01,839
example is the ats i triplets and ats

849
00:36:01,839 --> 00:36:05,440
it is based on the interleaved regulator

850
00:36:05,440 --> 00:36:08,400
which is the nice property that the ier

851
00:36:08,400 --> 00:36:10,400
does not increase the worst latency of

852
00:36:10,400 --> 00:36:14,079
the fifo system so the the fifo system

853
00:36:14,079 --> 00:36:18,480
must be given in front of the minimal ir

854
00:36:18,480 --> 00:36:21,200
it can be implemented in the fixture on

855
00:36:21,200 --> 00:36:22,480
the right

856
00:36:22,480 --> 00:36:23,920
side

857
00:36:23,920 --> 00:36:26,480
the ates has to be implemented at every

858
00:36:26,480 --> 00:36:28,160
node

859
00:36:28,160 --> 00:36:30,480
an ir per input port has to be

860
00:36:30,480 --> 00:36:31,920
implemented

861
00:36:31,920 --> 00:36:34,640
but ir has only one queue but still it

862
00:36:34,640 --> 00:36:38,319
requires individual flow states

863
00:36:39,200 --> 00:36:41,200
the second solution

864
00:36:41,200 --> 00:36:44,640
suggests in this draft is the fair uh it

865
00:36:44,640 --> 00:36:49,839
is it represents flow aggregate and ir

866
00:36:50,000 --> 00:36:52,960
it is basically a generalized

867
00:36:52,960 --> 00:36:56,320
ats here the fifo system

868
00:36:56,320 --> 00:36:59,599
is suggested as a network domain called

869
00:36:59,599 --> 00:37:03,359
aggregation domain for aediota

870
00:37:03,359 --> 00:37:06,960
so far the regulator is implemented at

871
00:37:06,960 --> 00:37:09,520
the av boundaries

872
00:37:09,520 --> 00:37:11,760
and the flow aggregation is defined as a

873
00:37:11,760 --> 00:37:13,760
set of the flows with the same path in

874
00:37:13,760 --> 00:37:16,000
the aid

875
00:37:16,000 --> 00:37:18,480
it has been shown to work better than

876
00:37:18,480 --> 00:37:19,839
ats

877
00:37:19,839 --> 00:37:21,940
in the academic paper

878
00:37:21,940 --> 00:37:24,979
[Music]

879
00:37:25,440 --> 00:37:26,320
third

880
00:37:26,320 --> 00:37:27,599
another

881
00:37:27,599 --> 00:37:29,359
solution suggested here is the

882
00:37:29,359 --> 00:37:32,079
port-based faa regulation

883
00:37:32,079 --> 00:37:34,640
it can be implemented at every node or

884
00:37:34,640 --> 00:37:37,280
at critic only at the critical links to

885
00:37:37,280 --> 00:37:39,680
break the cycle

886
00:37:39,680 --> 00:37:42,240
here the flow aggregation is the set of

887
00:37:42,240 --> 00:37:44,640
flows having same input output ports of

888
00:37:44,640 --> 00:37:46,400
a node

889
00:37:46,400 --> 00:37:48,640
and mainly

890
00:37:48,640 --> 00:37:51,760
it regulates flow aggregate not

891
00:37:51,760 --> 00:37:55,040
individual flow based on the

892
00:37:55,040 --> 00:37:56,240
uh

893
00:37:56,240 --> 00:37:58,720
the parameters of the sum of the burst

894
00:37:58,720 --> 00:38:02,000
size and the sum of the average rate

895
00:38:02,000 --> 00:38:06,000
so it's kind of a loose regulation

896
00:38:06,000 --> 00:38:08,240
so it has the best scalability no need

897
00:38:08,240 --> 00:38:10,640
to maintain individual flow state and it

898
00:38:10,640 --> 00:38:13,040
has been shown to work almost as well as

899
00:38:13,040 --> 00:38:15,680
the ats

900
00:38:16,560 --> 00:38:19,359
there are other possible solutions not

901
00:38:19,359 --> 00:38:22,480
uh specified in the draft

902
00:38:22,480 --> 00:38:22,720
um

903
00:38:22,720 --> 00:38:24,800
[Music]

904
00:38:24,800 --> 00:38:28,079
for example a more strict regulation

905
00:38:28,079 --> 00:38:32,480
then this pexa just can be

906
00:38:32,480 --> 00:38:35,200
can be a solution as well

907
00:38:35,200 --> 00:38:38,240
here the regulation is based on the

908
00:38:38,240 --> 00:38:42,400
parameter l and the summation of the r

909
00:38:42,400 --> 00:38:44,000
so

910
00:38:44,000 --> 00:38:47,200
regardless of the birth side the t-spec

911
00:38:47,200 --> 00:38:48,800
suggests

912
00:38:48,800 --> 00:38:51,520
the regulation can be very strict

913
00:38:51,520 --> 00:38:54,480
and in that sense it can be seen as

914
00:38:54,480 --> 00:38:57,440
very similar to slotted operation or

915
00:38:57,440 --> 00:38:59,040
cyclic cueing

916
00:38:59,040 --> 00:39:01,599
another possibility is the use use

917
00:39:01,599 --> 00:39:04,240
defaulting method data such as the

918
00:39:04,240 --> 00:39:06,400
source timestamp

919
00:39:06,400 --> 00:39:08,800
to reproduce the initial interable

920
00:39:08,800 --> 00:39:12,000
process at every node

921
00:39:12,000 --> 00:39:13,920
so there are lots of possibility in this

922
00:39:13,920 --> 00:39:16,880
framework i would say

923
00:39:16,880 --> 00:39:17,920
um

924
00:39:17,920 --> 00:39:19,520
finally the

925
00:39:19,520 --> 00:39:21,760
based on those uh

926
00:39:21,760 --> 00:39:24,079
latency guarantee framework

927
00:39:24,079 --> 00:39:26,640
we can also guarantee cheater upper

928
00:39:26,640 --> 00:39:28,880
bound

929
00:39:28,880 --> 00:39:33,599
here the jitter is defined as the

930
00:39:34,880 --> 00:39:36,400
yeah the

931
00:39:36,400 --> 00:39:38,800
there is a

932
00:39:38,800 --> 00:39:40,400
okay so

933
00:39:40,400 --> 00:39:42,720
i will say the jitter

934
00:39:42,720 --> 00:39:46,000
guarantee is reproducing the enterable

935
00:39:46,000 --> 00:39:47,760
process within into the departure

936
00:39:47,760 --> 00:39:49,839
process of a network

937
00:39:49,839 --> 00:39:51,040
so

938
00:39:51,040 --> 00:39:53,280
provided that we have the latency

939
00:39:53,280 --> 00:39:56,760
guaranteed network

940
00:39:58,000 --> 00:39:59,760
we can timestamp

941
00:39:59,760 --> 00:40:03,200
at the network boundary near the source

942
00:40:03,200 --> 00:40:05,280
and based on this timestamping

943
00:40:05,280 --> 00:40:07,280
timestamper

944
00:40:07,280 --> 00:40:08,880
timestamps

945
00:40:08,880 --> 00:40:11,760
we can offer the package

946
00:40:11,760 --> 00:40:14,720
to reproduce the interrupt process

947
00:40:14,720 --> 00:40:18,720
at the inter departure process

948
00:40:20,800 --> 00:40:22,240
yeah the

949
00:40:22,240 --> 00:40:24,720
it has been shown it has been proved

950
00:40:24,720 --> 00:40:27,440
that the jitter is upper bounded

951
00:40:27,440 --> 00:40:30,000
and the end-to-end buffered latency is

952
00:40:30,000 --> 00:40:32,240
also bounded

953
00:40:32,240 --> 00:40:34,400
we can control the jitter bound we can

954
00:40:34,400 --> 00:40:36,800
even have a charity term in that case

955
00:40:36,800 --> 00:40:39,599
the entity and buffered latency

956
00:40:39,599 --> 00:40:40,880
is uh

957
00:40:40,880 --> 00:40:44,960
almost twice as the entire 8-inch bound

958
00:40:44,960 --> 00:40:46,590
it has been proven

959
00:40:46,590 --> 00:40:48,160
[Music]

960
00:40:48,160 --> 00:40:50,960
sorry for the

961
00:40:50,960 --> 00:40:53,359
the time passing so thank you please

962
00:40:53,359 --> 00:40:55,599
look at the draft and comments and

963
00:40:55,599 --> 00:40:57,680
questions are very very welcome thank

964
00:40:57,680 --> 00:40:59,839
you

965
00:41:01,520 --> 00:41:03,520
okay thank you that this is actually our

966
00:41:03,520 --> 00:41:07,599
first uh document on sort of this new

967
00:41:07,599 --> 00:41:09,680
area where we're looking at enhanced

968
00:41:09,680 --> 00:41:10,880
data plane

969
00:41:10,880 --> 00:41:13,440
uh queuing mechanisms

970
00:41:13,440 --> 00:41:15,359
and uh

971
00:41:15,359 --> 00:41:18,160
changes in in how we can support uh

972
00:41:18,160 --> 00:41:20,319
traffic treatment in that net and that's

973
00:41:20,319 --> 00:41:22,160
the the the term that was used in the

974
00:41:22,160 --> 00:41:23,280
charter

975
00:41:23,280 --> 00:41:24,240
uh

976
00:41:24,240 --> 00:41:27,359
it's um a new area for us

977
00:41:27,359 --> 00:41:29,520
we're very interested in the

978
00:41:29,520 --> 00:41:31,359
contribution so thank you and thank you

979
00:41:31,359 --> 00:41:33,599
for the that we have a number of uh

980
00:41:33,599 --> 00:41:35,680
presentations on this topic so that's

981
00:41:35,680 --> 00:41:36,640
great

982
00:41:36,640 --> 00:41:38,720
one thing to keep in mind is there's a

983
00:41:38,720 --> 00:41:40,640
sort of a theme throughout a number of

984
00:41:40,640 --> 00:41:44,079
these solution documents that talk about

985
00:41:44,079 --> 00:41:46,319
changes to the data plane

986
00:41:46,319 --> 00:41:48,240
i think this draft used the the term

987
00:41:48,240 --> 00:41:50,319
metadata that's sort of used in others

988
00:41:50,319 --> 00:41:53,520
but the there's a common theme of some

989
00:41:53,520 --> 00:41:55,119
extra information that's needed to

990
00:41:55,119 --> 00:41:57,040
support the enhanced queuing and

991
00:41:57,040 --> 00:41:58,960
enhanced traffic treatment and one of

992
00:41:58,960 --> 00:42:00,480
the questions for the working group is

993
00:42:00,480 --> 00:42:01,839
going to be

994
00:42:01,839 --> 00:42:04,160
do we want to identify a common one how

995
00:42:04,160 --> 00:42:06,240
many of these do we want to put forward

996
00:42:06,240 --> 00:42:08,240
and this is just something we don't want

997
00:42:08,240 --> 00:42:10,000
to discuss it right now we just want to

998
00:42:10,000 --> 00:42:13,119
put that in into your head as you hear

999
00:42:13,119 --> 00:42:15,359
the different discussion

1000
00:42:15,359 --> 00:42:18,480
and uh we are going to be asking about

1001
00:42:18,480 --> 00:42:21,040
if you are interested in in hearing more

1002
00:42:21,040 --> 00:42:22,960
on each of these topics

1003
00:42:22,960 --> 00:42:26,000
um so i really don't i see twirlish

1004
00:42:26,000 --> 00:42:27,280
getting up for this i don't want to have

1005
00:42:27,280 --> 00:42:28,720
a long discussion about this i want to

1006
00:42:28,720 --> 00:42:30,560
give time for the

1007
00:42:30,560 --> 00:42:33,200
presentations i we had one question on

1008
00:42:33,200 --> 00:42:36,000
the last one so why don't we we go there

1009
00:42:36,000 --> 00:42:37,680
and then uh

1010
00:42:37,680 --> 00:42:41,200
uh we'll move to the next so uh sure

1011
00:42:41,200 --> 00:42:44,640
so uh who was first

1012
00:42:44,640 --> 00:42:47,440
so uh lincoln from fishway

1013
00:42:47,440 --> 00:42:49,359
this is very interesting work and i

1014
00:42:49,359 --> 00:42:51,200
think it's very

1015
00:42:51,200 --> 00:42:52,640
important for the

1016
00:42:52,640 --> 00:42:55,359
then that applied to ip network but i

1017
00:42:55,359 --> 00:42:57,599
have a couple questions here

1018
00:42:57,599 --> 00:42:59,680
so first what is the definition of flow

1019
00:42:59,680 --> 00:43:02,240
here it's ip or

1020
00:43:02,240 --> 00:43:04,879
this map

1021
00:43:06,319 --> 00:43:08,880
okay second question is absolutely

1022
00:43:08,880 --> 00:43:10,800
you're using regulation or record

1023
00:43:10,800 --> 00:43:12,640
traffic shipping

1024
00:43:12,640 --> 00:43:13,520
uh

1025
00:43:13,520 --> 00:43:15,839
how do you get the

1026
00:43:15,839 --> 00:43:17,520
rate

1027
00:43:17,520 --> 00:43:19,599
by provisioning or by

1028
00:43:19,599 --> 00:43:22,160
whatever methods i would suggest that

1029
00:43:22,160 --> 00:43:24,400
you'll be best to put this to the author

1030
00:43:24,400 --> 00:43:26,960
on the list uh they're not in the room

1031
00:43:26,960 --> 00:43:28,079
and we're actually they went over a

1032
00:43:28,079 --> 00:43:29,440
little bit they were nice enough to

1033
00:43:29,440 --> 00:43:31,040
apologize for going over but they really

1034
00:43:31,040 --> 00:43:32,640
didn't need a question at a time for

1035
00:43:32,640 --> 00:43:34,880
questions on the document sorry uh

1036
00:43:34,880 --> 00:43:35,760
please

1037
00:43:35,760 --> 00:43:37,599
please send it to the list shusang was

1038
00:43:37,599 --> 00:43:39,510
next yeah

1039
00:43:39,510 --> 00:43:42,760
[Music]

1040
00:43:47,599 --> 00:43:49,520
hi can you hear me well

1041
00:43:49,520 --> 00:43:50,319
yes

1042
00:43:50,319 --> 00:43:53,440
thank you uh two very brave

1043
00:43:53,440 --> 00:43:56,319
question uh just for ex

1044
00:43:56,319 --> 00:43:58,640
clarification the first one is that

1045
00:43:58,640 --> 00:44:00,560
because we have another document called

1046
00:44:00,560 --> 00:44:02,319
bonding latency

1047
00:44:02,319 --> 00:44:05,040
so i think that this document is

1048
00:44:05,040 --> 00:44:07,359
really very

1049
00:44:07,359 --> 00:44:08,720
very

1050
00:44:08,720 --> 00:44:11,280
related to that one so the the question

1051
00:44:11,280 --> 00:44:13,440
is for the others uh what is the

1052
00:44:13,440 --> 00:44:15,839
relationship of these two documents i

1053
00:44:15,839 --> 00:44:17,839
understand that this document mainly

1054
00:44:17,839 --> 00:44:21,440
focus on the uh a synchronized

1055
00:44:21,440 --> 00:44:24,079
case but i think is still have to deal

1056
00:44:24,079 --> 00:44:25,280
with the

1057
00:44:25,280 --> 00:44:26,079
the

1058
00:44:26,079 --> 00:44:28,240
deal with the relationship with the

1059
00:44:28,240 --> 00:44:29,839
existing document

1060
00:44:29,839 --> 00:44:32,720
and the other question is that um i

1061
00:44:32,720 --> 00:44:35,200
noticed that this document is called a

1062
00:44:35,200 --> 00:44:36,960
framework of the

1063
00:44:36,960 --> 00:44:39,280
synchronized maybe

1064
00:44:39,280 --> 00:44:42,000
shaping or scheduling mechanisms

1065
00:44:42,000 --> 00:44:45,280
and it listed a set of

1066
00:44:45,280 --> 00:44:48,319
mechanisms that could be used to

1067
00:44:48,319 --> 00:44:51,760
provide a funding latency or bonded

1068
00:44:51,760 --> 00:44:54,880
jitter i think that is a very great work

1069
00:44:54,880 --> 00:44:57,040
and it could be a good start

1070
00:44:57,040 --> 00:45:00,000
but it is still um

1071
00:45:00,000 --> 00:45:01,520
a question for us what is the

1072
00:45:01,520 --> 00:45:03,280
relationship with the existing

1073
00:45:03,280 --> 00:45:06,640
mechanisms defined in ieee because the

1074
00:45:06,640 --> 00:45:08,240
as we um

1075
00:45:08,240 --> 00:45:10,160
we discussed before in the working group

1076
00:45:10,160 --> 00:45:13,119
there are a lot of existing

1077
00:45:13,119 --> 00:45:15,359
work that has been discussed for a long

1078
00:45:15,359 --> 00:45:18,319
time in lee so if we have done similar

1079
00:45:18,319 --> 00:45:22,720
working than that what uh what is the

1080
00:45:22,720 --> 00:45:24,640
method we can

1081
00:45:24,640 --> 00:45:25,520
you know

1082
00:45:25,520 --> 00:45:28,960
synchronize with actually people and

1083
00:45:28,960 --> 00:45:30,240
how to

1084
00:45:30,240 --> 00:45:32,319
cooperate with them i think that will be

1085
00:45:32,319 --> 00:45:34,880
another question from from me

1086
00:45:34,880 --> 00:45:37,440
thank you it's a meaningful work i think

1087
00:45:37,440 --> 00:45:39,680
thank you for the contributions uh from

1088
00:45:39,680 --> 00:45:41,280
the others

1089
00:45:41,280 --> 00:45:43,599
okay thank you i'd like to ask again

1090
00:45:43,599 --> 00:45:45,200
take it to the list for five minutes

1091
00:45:45,200 --> 00:45:46,800
over on this one and there's others so

1092
00:45:46,800 --> 00:45:49,359
we're eating into other people's time

1093
00:45:49,359 --> 00:45:51,359
just a quick comment on what what what

1094
00:45:51,359 --> 00:45:54,560
you were saying um

1095
00:45:54,960 --> 00:45:56,560
to better compare maybe at some point in

1096
00:45:56,560 --> 00:45:58,560
time we want to you know even

1097
00:45:58,560 --> 00:46:00,880
have some summary of alternatives or the

1098
00:46:00,880 --> 00:46:02,800
structure or something to just not have

1099
00:46:02,800 --> 00:46:04,800
a long list and you know don't even know

1100
00:46:04,800 --> 00:46:07,599
how to do it so for example the biggest

1101
00:46:07,599 --> 00:46:09,520
you know two buckets i can think of is

1102
00:46:09,520 --> 00:46:10,800
you know one of the solutions where you

1103
00:46:10,800 --> 00:46:13,040
can get better dead net

1104
00:46:13,040 --> 00:46:15,520
treatments by just relying on existing

1105
00:46:15,520 --> 00:46:17,200
uh packet headers that we have

1106
00:46:17,200 --> 00:46:19,119
effectively you know i think that's what

1107
00:46:19,119 --> 00:46:21,119
we've been hoping by doing to be able to

1108
00:46:21,119 --> 00:46:22,960
attach state to the five double or six

1109
00:46:22,960 --> 00:46:25,359
tuple uh flow elements that is implying

1110
00:46:25,359 --> 00:46:26,880
maybe we can even just have you know

1111
00:46:26,880 --> 00:46:28,480
whatever the

1112
00:46:28,480 --> 00:46:30,480
stolen from tsn queueing discipline and

1113
00:46:30,480 --> 00:46:31,839
we don't need to treat anything in the

1114
00:46:31,839 --> 00:46:34,720
forwarding plane my proposal here also

1115
00:46:34,720 --> 00:46:37,280
it tries to do that trick to quicker get

1116
00:46:37,280 --> 00:46:39,200
deployed and the other ones do cooler

1117
00:46:39,200 --> 00:46:40,880
things by having new packet headers so

1118
00:46:40,880 --> 00:46:43,200
that's that's one big you know areas of

1119
00:46:43,200 --> 00:46:45,040
distinction yeah and and going to

1120
00:46:45,040 --> 00:46:47,520
shusang's point we sort of do expect

1121
00:46:47,520 --> 00:46:49,280
that there's going to be some falling

1122
00:46:49,280 --> 00:46:51,359
out maybe some consolidation between

1123
00:46:51,359 --> 00:46:53,119
these things that are it may at first

1124
00:46:53,119 --> 00:46:54,720
seem pretty separate but they're aiming

1125
00:46:54,720 --> 00:46:56,319
towards the same place in some cases

1126
00:46:56,319 --> 00:46:57,680
some cases they're not

1127
00:46:57,680 --> 00:46:58,960
uh but hopefully we'll see some

1128
00:46:58,960 --> 00:47:00,960
consolidation as well all right thanks

1129
00:47:00,960 --> 00:47:03,839
we should press yes move on to the next

1130
00:47:03,839 --> 00:47:06,240
one clown please you have the control

1131
00:47:06,240 --> 00:47:09,799
and go ahead

1132
00:47:10,319 --> 00:47:12,000
hello and

1133
00:47:12,000 --> 00:47:14,640
i'm john chong from bt um i would like

1134
00:47:14,640 --> 00:47:16,800
to talk about the uh that led

1135
00:47:16,800 --> 00:47:19,440
enhancements for large-scale details to

1136
00:47:19,440 --> 00:47:23,440
peak networks let's slide please

1137
00:47:23,520 --> 00:47:25,680
you have the control to click the next

1138
00:47:25,680 --> 00:47:27,040
slide

1139
00:47:27,040 --> 00:47:30,240
okay thank you

1140
00:47:30,240 --> 00:47:34,160
okay uh so first the background is that

1141
00:47:34,160 --> 00:47:36,800
uh the latest working group charter was

1142
00:47:36,800 --> 00:47:39,200
updated in july

1143
00:47:39,200 --> 00:47:41,680
package treatment related methods should

1144
00:47:41,680 --> 00:47:44,240
be supported and data plane

1145
00:47:44,240 --> 00:47:45,040
the

1146
00:47:45,040 --> 00:47:47,680
milestone showed the document plan over

1147
00:47:47,680 --> 00:47:50,319
deadlift wg in the future

1148
00:47:50,319 --> 00:47:53,040
two years enhanced that that is the last

1149
00:47:53,040 --> 00:47:54,880
focal topic

1150
00:47:54,880 --> 00:47:55,680
so

1151
00:47:55,680 --> 00:47:57,280
uh

1152
00:47:57,280 --> 00:47:59,920
next slide uh so

1153
00:47:59,920 --> 00:48:03,680
we will uh talk about some problems uh

1154
00:48:03,680 --> 00:48:07,760
lead to be discussed first what is the

1155
00:48:07,760 --> 00:48:09,920
enhanced that led

1156
00:48:09,920 --> 00:48:12,480
from a charter and milestone the

1157
00:48:12,480 --> 00:48:15,359
enhanced that that is required to

1158
00:48:15,359 --> 00:48:18,559
provide the enhancements uh overflow

1159
00:48:18,559 --> 00:48:21,200
identification and packed treatment and

1160
00:48:21,200 --> 00:48:23,839
support the enhanced functions or

1161
00:48:23,839 --> 00:48:26,800
mechanisms for that data plane to

1162
00:48:26,800 --> 00:48:29,760
achieve the data that cues and so was

1163
00:48:29,760 --> 00:48:32,720
the enhancement of package treatment

1164
00:48:32,720 --> 00:48:36,400
as per rfc 8938

1165
00:48:36,400 --> 00:48:39,200
uh that led related date plane functions

1166
00:48:39,200 --> 00:48:42,640
must be decomposed into two sub-layers a

1167
00:48:42,640 --> 00:48:44,559
surface sub-layout in the

1168
00:48:44,559 --> 00:48:47,040
forwarding sub-layout and so that last

1169
00:48:47,040 --> 00:48:51,200
specific metadata and uh that led ipmps

1170
00:48:51,200 --> 00:48:54,000
data plane has been described so in my

1171
00:48:54,000 --> 00:48:57,520
view uh for the the enhancement of

1172
00:48:57,520 --> 00:49:00,880
packet treatment uh the uh treatment

1173
00:49:00,880 --> 00:49:02,880
functions for that

1174
00:49:02,880 --> 00:49:05,119
data plane should be described and the

1175
00:49:05,119 --> 00:49:08,240
treatment specific metadata and

1176
00:49:08,240 --> 00:49:09,920
encapsulation

1177
00:49:09,920 --> 00:49:14,160
should be defined for the net flow

1178
00:49:14,839 --> 00:49:19,119
um for requirements the enhancement

1179
00:49:19,119 --> 00:49:20,800
requirements has been discussed

1180
00:49:20,800 --> 00:49:22,960
therefore several times

1181
00:49:22,960 --> 00:49:23,920
um

1182
00:49:23,920 --> 00:49:26,160
including technical uh

1183
00:49:26,160 --> 00:49:27,839
requirements and the data plan

1184
00:49:27,839 --> 00:49:30,480
enhancement requirements

1185
00:49:30,480 --> 00:49:33,119
and worth more the requirements from a

1186
00:49:33,119 --> 00:49:35,359
perspective of surface sub layout and

1187
00:49:35,359 --> 00:49:37,599
forwarding subnet has also been

1188
00:49:37,599 --> 00:49:39,680
described

1189
00:49:39,680 --> 00:49:42,720
for example the

1190
00:49:42,839 --> 00:49:45,040
deterministic surface may demand

1191
00:49:45,040 --> 00:49:47,280
different this ministry queues

1192
00:49:47,280 --> 00:49:50,400
requirements uh these missed rules

1193
00:49:50,400 --> 00:49:53,040
should be established and the

1194
00:49:53,040 --> 00:49:55,839
distributed rules and the inter domain

1195
00:49:55,839 --> 00:49:58,720
rules should be taken into consideration

1196
00:49:58,720 --> 00:50:01,520
and the the resource should be managed

1197
00:50:01,520 --> 00:50:03,839
to provided

1198
00:50:03,839 --> 00:50:06,240
pending latency guarantees for the

1199
00:50:06,240 --> 00:50:08,240
dismissed forwarding

1200
00:50:08,240 --> 00:50:09,119
so

1201
00:50:09,119 --> 00:50:11,200
some of the queuing related and the date

1202
00:50:11,200 --> 00:50:13,760
play requirements have been merged in

1203
00:50:13,760 --> 00:50:14,880
their

1204
00:50:14,880 --> 00:50:18,160
last scale requirements

1205
00:50:23,440 --> 00:50:24,720
so

1206
00:50:24,720 --> 00:50:27,760
folder data plane uh the enhancement for

1207
00:50:27,760 --> 00:50:31,200
the data plane is shown uh on the right

1208
00:50:31,200 --> 00:50:32,319
um

1209
00:50:32,319 --> 00:50:35,559
a right side contrast to rfc

1210
00:50:35,559 --> 00:50:39,760
8938 the enhancement uh in the enhanced

1211
00:50:39,760 --> 00:50:40,960
treatment

1212
00:50:40,960 --> 00:50:42,720
functions may be

1213
00:50:42,720 --> 00:50:44,240
added such as

1214
00:50:44,240 --> 00:50:46,800
flow aggregation flow redundancy you

1215
00:50:46,800 --> 00:50:48,400
show a different slide

1216
00:50:48,400 --> 00:50:50,960
not the one you are talking to

1217
00:50:50,960 --> 00:50:52,800
we see page five here and you are

1218
00:50:52,800 --> 00:50:54,880
talking to page four

1219
00:50:54,880 --> 00:50:57,599
oh sorry

1220
00:50:59,599 --> 00:51:01,040
okay

1221
00:51:01,040 --> 00:51:03,200
okay i will continue

1222
00:51:03,200 --> 00:51:04,480
um so

1223
00:51:04,480 --> 00:51:05,280
uh

1224
00:51:05,280 --> 00:51:08,960
for for the date playing consideration

1225
00:51:08,960 --> 00:51:11,200
we think the enhancement for the data

1226
00:51:11,200 --> 00:51:12,400
plane

1227
00:51:12,400 --> 00:51:14,559
should be

1228
00:51:14,559 --> 00:51:17,359
enhanced shown on on the right side

1229
00:51:17,359 --> 00:51:20,640
contrast to rc8938

1230
00:51:20,640 --> 00:51:23,680
the enhanced treatment uh functions may

1231
00:51:23,680 --> 00:51:25,599
be added such as

1232
00:51:25,599 --> 00:51:26,559
flow

1233
00:51:26,559 --> 00:51:29,599
aggregation flow redundancy under

1234
00:51:29,599 --> 00:51:31,839
surface level aggregation and for

1235
00:51:31,839 --> 00:51:33,520
forwarding sublio

1236
00:51:33,520 --> 00:51:34,400
maybe

1237
00:51:34,400 --> 00:51:37,040
multiple queueing mechanisms uh

1238
00:51:37,040 --> 00:51:39,440
deterministic paths uh resource

1239
00:51:39,440 --> 00:51:42,480
scheduling and distributed routed routes

1240
00:51:42,480 --> 00:51:44,880
and so on and and many functions to

1241
00:51:44,880 --> 00:51:47,599
improve their their uh

1242
00:51:47,599 --> 00:51:50,480
their that letter performance to achieve

1243
00:51:50,480 --> 00:51:52,880
the dalek queues and

1244
00:51:52,880 --> 00:51:55,760
the treatment metadata used by functions

1245
00:51:55,760 --> 00:51:57,839
should be carried such as

1246
00:51:57,839 --> 00:51:59,680
the service level information

1247
00:51:59,680 --> 00:52:02,400
aggregation aggregated flow information

1248
00:52:02,400 --> 00:52:04,960
redundancy information pass information

1249
00:52:04,960 --> 00:52:07,119
q information and so on

1250
00:52:07,119 --> 00:52:10,079
and many and many other information can

1251
00:52:10,079 --> 00:52:13,280
can be added to the metadata

1252
00:52:13,280 --> 00:52:14,800
and then the

1253
00:52:14,800 --> 00:52:18,480
the encapsulations format such as fpv6

1254
00:52:18,480 --> 00:52:20,800
are so e6 and then ps should be taken

1255
00:52:20,800 --> 00:52:24,000
into consideration

1256
00:52:24,960 --> 00:52:25,839
um

1257
00:52:25,839 --> 00:52:28,640
and then a particular require

1258
00:52:28,640 --> 00:52:30,800
requirements for the controller plane

1259
00:52:30,800 --> 00:52:33,280
should be taken into consideration

1260
00:52:33,280 --> 00:52:35,680
according to the enhancement of the

1261
00:52:35,680 --> 00:52:38,319
download plane

1262
00:52:38,319 --> 00:52:39,440
so we

1263
00:52:39,440 --> 00:52:41,280
list out some requirements for

1264
00:52:41,280 --> 00:52:43,359
controller play such as

1265
00:52:43,359 --> 00:52:46,319
management and scheduling over resources

1266
00:52:46,319 --> 00:52:48,720
distributed deterministic paths and

1267
00:52:48,720 --> 00:52:51,680
their inter-domain dismissed path did

1268
00:52:51,680 --> 00:52:54,800
mispass calculation and so on and other

1269
00:52:54,800 --> 00:52:57,359
requirements to be discussed in the

1270
00:52:57,359 --> 00:53:00,359
future

1271
00:53:00,559 --> 00:53:02,559
and so

1272
00:53:02,559 --> 00:53:05,440
the solutions over enhanced treatment

1273
00:53:05,440 --> 00:53:08,160
functions and metadata are open to

1274
00:53:08,160 --> 00:53:09,200
uh

1275
00:53:09,200 --> 00:53:10,400
working group

1276
00:53:10,400 --> 00:53:13,200
we call for co-workers and the reviewers

1277
00:53:13,200 --> 00:53:16,640
and hope to provide a more visible and

1278
00:53:16,640 --> 00:53:19,520
achievable way to progress through this

1279
00:53:19,520 --> 00:53:20,559
work

1280
00:53:20,559 --> 00:53:22,480
comments and the questions are pretty

1281
00:53:22,480 --> 00:53:24,800
appreciated and welcome to

1282
00:53:24,800 --> 00:53:28,000
join us thank you

1283
00:53:28,000 --> 00:53:29,200
you

1284
00:53:29,200 --> 00:53:32,640
please go ahead with your question

1285
00:53:35,440 --> 00:53:38,960
uh hi hi thank you for your presentation

1286
00:53:38,960 --> 00:53:40,160
uh

1287
00:53:40,160 --> 00:53:43,760
could you please go back to page five

1288
00:53:43,760 --> 00:53:46,160
i think my first question is also for

1289
00:53:46,160 --> 00:53:48,480
the chairs because uh

1290
00:53:48,480 --> 00:53:50,319
the page five uh

1291
00:53:50,319 --> 00:53:52,400
has mentioned some requirements for

1292
00:53:52,400 --> 00:53:54,800
control page five

1293
00:53:54,800 --> 00:53:58,480
a next slide thank you

1294
00:53:59,440 --> 00:54:00,960
uh yes uh

1295
00:54:00,960 --> 00:54:02,800
you mentioned some controller plan

1296
00:54:02,800 --> 00:54:05,119
consideration actually uh as the order

1297
00:54:05,119 --> 00:54:07,920
of the controller plan framework um my

1298
00:54:07,920 --> 00:54:10,559
question is that whether the existing

1299
00:54:10,559 --> 00:54:13,440
controller plan framework is supposed to

1300
00:54:13,440 --> 00:54:16,960
only contain the net controller plan

1301
00:54:16,960 --> 00:54:19,040
requirements and some framework

1302
00:54:19,040 --> 00:54:21,760
considerations or we should also

1303
00:54:21,760 --> 00:54:24,800
consider the enhanced net control plan

1304
00:54:24,800 --> 00:54:26,960
consideration if the

1305
00:54:26,960 --> 00:54:29,760
if we go to the previous method maybe

1306
00:54:29,760 --> 00:54:32,640
there will be another document uh

1307
00:54:32,640 --> 00:54:33,839
maybe called

1308
00:54:33,839 --> 00:54:35,599
controller plan considerations or

1309
00:54:35,599 --> 00:54:38,559
framework for hansa.net as listed in

1310
00:54:38,559 --> 00:54:39,520
this

1311
00:54:39,520 --> 00:54:42,319
slide but if we goes to the letter

1312
00:54:42,319 --> 00:54:43,280
method

1313
00:54:43,280 --> 00:54:46,240
maybe it can be combined into the net

1314
00:54:46,240 --> 00:54:49,119
existing framework as the other i prefer

1315
00:54:49,119 --> 00:54:50,960
the latter one because the the

1316
00:54:50,960 --> 00:54:52,720
controller framework

1317
00:54:52,720 --> 00:54:54,720
is controller plan framework document

1318
00:54:54,720 --> 00:54:58,079
itself is uh is still under discussion

1319
00:54:58,079 --> 00:55:00,480
so we would like to combine the

1320
00:55:00,480 --> 00:55:02,319
considerations

1321
00:55:02,319 --> 00:55:03,200
of

1322
00:55:03,200 --> 00:55:06,200
enhance.net

1323
00:55:07,839 --> 00:55:09,839
yeah i think the existing contour

1324
00:55:09,839 --> 00:55:11,680
airplane document the contour brain

1325
00:55:11,680 --> 00:55:13,520
framework is a working glue document

1326
00:55:13,520 --> 00:55:15,040
it's it's uh

1327
00:55:15,040 --> 00:55:17,440
being developed so we can add at the

1328
00:55:17,440 --> 00:55:20,079
material right now as we progress i

1329
00:55:20,079 --> 00:55:23,040
don't see issue with that

1330
00:55:23,040 --> 00:55:25,280
okay thank you and the second

1331
00:55:25,280 --> 00:55:29,040
question is for page four i noticed that

1332
00:55:29,040 --> 00:55:30,000
uh

1333
00:55:30,000 --> 00:55:30,799
the

1334
00:55:30,799 --> 00:55:31,920
here

1335
00:55:31,920 --> 00:55:35,920
you also listed some enhanced data plan

1336
00:55:35,920 --> 00:55:38,400
requirement for service sub-layer

1337
00:55:38,400 --> 00:55:40,160
for example flow aggregation flow

1338
00:55:40,160 --> 00:55:42,880
redundancy uh and the service level

1339
00:55:42,880 --> 00:55:44,880
aggregation all these functions i think

1340
00:55:44,880 --> 00:55:47,119
that have already been defined in

1341
00:55:47,119 --> 00:55:50,000
previous destination discussion so my

1342
00:55:50,000 --> 00:55:52,640
pro my question is that what is new here

1343
00:55:52,640 --> 00:55:56,240
or what should be enhanced here

1344
00:55:56,240 --> 00:55:59,598
for service supplier

1345
00:56:00,000 --> 00:56:04,480
uh in my field uh rfc h3 and

1346
00:56:04,480 --> 00:56:05,440
uh

1347
00:56:05,440 --> 00:56:08,799
h9 has been released and

1348
00:56:08,799 --> 00:56:12,000
some of the functions or some of the uh

1349
00:56:12,000 --> 00:56:14,880
encapsulation has not been covered in in

1350
00:56:14,880 --> 00:56:16,720
that rfc so

1351
00:56:16,720 --> 00:56:19,359
in my view there um there are additional

1352
00:56:19,359 --> 00:56:22,079
functions or encapsulations all belong

1353
00:56:22,079 --> 00:56:25,440
to their enhancement so it's up to

1354
00:56:25,440 --> 00:56:27,839
their data working group

1355
00:56:27,839 --> 00:56:30,640
thank you

1356
00:56:30,640 --> 00:56:32,319
i think we could look at some specific

1357
00:56:32,319 --> 00:56:36,558
text and see which parts are

1358
00:56:37,040 --> 00:56:38,880
line up with what has already been

1359
00:56:38,880 --> 00:56:41,839
published as well as what other

1360
00:56:41,839 --> 00:56:43,920
documents are coming into the working

1361
00:56:43,920 --> 00:56:45,520
group for instance you mentioned the

1362
00:56:45,520 --> 00:56:47,440
requirements document the individual

1363
00:56:47,440 --> 00:56:50,079
draft and we do have on our uh

1364
00:56:50,079 --> 00:56:51,359
milestones

1365
00:56:51,359 --> 00:56:53,839
uh adopting such a requirements document

1366
00:56:53,839 --> 00:56:55,119
and it seems like some of the text

1367
00:56:55,119 --> 00:56:56,079
you've

1368
00:56:56,079 --> 00:56:58,000
described in your draft could go to that

1369
00:56:58,000 --> 00:56:59,119
document

1370
00:56:59,119 --> 00:57:01,040
and perhaps as we start looking at the

1371
00:57:01,040 --> 00:57:03,760
specific text some of them will find

1372
00:57:03,760 --> 00:57:06,160
already exist in rfcs and others will

1373
00:57:06,160 --> 00:57:09,598
maybe go to uh

1374
00:57:09,760 --> 00:57:12,079
other documents so we might end up

1375
00:57:12,079 --> 00:57:14,240
realigning and redistributing as we move

1376
00:57:14,240 --> 00:57:16,240
towards working group adoption

1377
00:57:16,240 --> 00:57:19,040
of uh solution documents as well as the

1378
00:57:19,040 --> 00:57:20,880
uh architecture document

1379
00:57:20,880 --> 00:57:22,640
that's sorry requirements

1380
00:57:22,640 --> 00:57:24,880
thank you and we should move to the next

1381
00:57:24,880 --> 00:57:26,400
i think it's

1382
00:57:26,400 --> 00:57:28,000
the same presenter

1383
00:57:28,000 --> 00:57:29,760
yes so

1384
00:57:29,760 --> 00:57:31,119
please uh go ahead with the next

1385
00:57:31,119 --> 00:57:32,480
presentation

1386
00:57:32,480 --> 00:57:34,960
you have the phone

1387
00:57:34,960 --> 00:57:38,400
and please watch the time as well

1388
00:57:39,520 --> 00:57:41,680
okay thank you uh

1389
00:57:41,680 --> 00:57:45,359
this is about uh the deadlock queuing

1390
00:57:45,359 --> 00:57:48,359
option

1391
00:57:57,359 --> 00:57:59,680
sorry

1392
00:58:00,319 --> 00:58:03,760
so uh we just discussed about the the

1393
00:58:03,760 --> 00:58:06,000
enhanced death length that they play

1394
00:58:06,000 --> 00:58:08,960
with the data plane we should uh provide

1395
00:58:08,960 --> 00:58:12,079
the functions to achieve the data queues

1396
00:58:12,079 --> 00:58:15,280
such as entry and deterministic latency

1397
00:58:15,280 --> 00:58:16,880
so what is

1398
00:58:16,880 --> 00:58:19,359
the end-to-end deterministic

1399
00:58:19,359 --> 00:58:23,040
latency as per itf that abandoned the

1400
00:58:23,040 --> 00:58:25,839
lantern sea uh the end to end the band

1401
00:58:25,839 --> 00:58:28,480
can be computed as the sum of low

1402
00:58:28,480 --> 00:58:31,200
queueing delay under the queuing delay

1403
00:58:31,200 --> 00:58:34,160
along the path the upper down bound of

1404
00:58:34,160 --> 00:58:36,880
no queuing delay are constant so the end

1405
00:58:36,880 --> 00:58:39,760
to end latency depends on the value of a

1406
00:58:39,760 --> 00:58:42,000
queuing delay

1407
00:58:42,000 --> 00:58:45,280
along with the queuing mechanisms so the

1408
00:58:45,280 --> 00:58:48,480
qe information should be taken into

1409
00:58:48,480 --> 00:58:50,799
considerations and enhance the deflat

1410
00:58:50,799 --> 00:58:52,160
data plan to

1411
00:58:52,160 --> 00:58:54,960
realize and realize the deterministic

1412
00:58:54,960 --> 00:58:56,400
latency

1413
00:58:56,400 --> 00:58:59,440
and how to ensure uh deterministic

1414
00:58:59,440 --> 00:59:00,880
latency

1415
00:59:00,880 --> 00:59:04,000
first we should provide the functions or

1416
00:59:04,000 --> 00:59:06,640
technologies to ensure deterministic

1417
00:59:06,640 --> 00:59:09,680
latencies such as pure mechanic queuing

1418
00:59:09,680 --> 00:59:12,720
mcleans and carried the related

1419
00:59:12,720 --> 00:59:15,040
information in the data plane and the

1420
00:59:15,040 --> 00:59:16,000
second

1421
00:59:16,000 --> 00:59:16,960
we pro

1422
00:59:16,960 --> 00:59:20,240
we propose a common queuing option and

1423
00:59:20,240 --> 00:59:22,960
the generic uh q information should be

1424
00:59:22,960 --> 00:59:26,400
carried in data plane uh metadata uh and

1425
00:59:26,400 --> 00:59:30,839
there are finally mpls ipv6 srv6 inside

1426
00:59:30,839 --> 00:59:33,119
encapsulation should be taken into

1427
00:59:33,119 --> 00:59:35,920
consideration

1428
00:59:37,920 --> 00:59:41,359
and so for the request requirements the

1429
00:59:41,359 --> 00:59:44,559
enhancement requirements as described

1430
00:59:44,559 --> 00:59:46,480
has described that

1431
00:59:46,480 --> 00:59:50,160
it is required to uh provide to provide

1432
00:59:50,160 --> 00:59:53,440
information used by uh functions

1433
00:59:53,440 --> 00:59:56,559
ensuring deterministic latency and the

1434
00:59:56,559 --> 01:00:00,400
defined related uh method data to help

1435
01:00:00,400 --> 01:00:04,000
regulation and the queue uh management

1436
01:00:04,000 --> 01:00:06,960
and the large-scale enhancement also

1437
01:00:06,960 --> 01:00:08,480
proposed there

1438
01:00:08,480 --> 01:00:12,079
that the enhanced that database required

1439
01:00:12,079 --> 01:00:15,599
to support a method over a packet

1440
01:00:15,599 --> 01:00:19,680
treatment and that will include uh we

1441
01:00:19,680 --> 01:00:22,240
include the deterministic latency

1442
01:00:22,240 --> 01:00:24,480
scheduling uh the package treatment

1443
01:00:24,480 --> 01:00:28,000
should support the uh cueing treatment

1444
01:00:28,000 --> 01:00:30,400
and the identification of killing

1445
01:00:30,400 --> 01:00:33,760
related information and so multiple

1446
01:00:33,760 --> 01:00:36,079
killing mechanisms can be used to

1447
01:00:36,079 --> 01:00:38,880
guarantee their uh deterministic latency

1448
01:00:38,880 --> 01:00:39,599
for

1449
01:00:39,599 --> 01:00:42,720
foreign application in data networks so

1450
01:00:42,720 --> 01:00:45,839
it is required to carry cueing uh

1451
01:00:45,839 --> 01:00:49,359
information in data plane to make a pro

1452
01:00:49,359 --> 01:00:51,440
point pack the forwarding and the

1453
01:00:51,440 --> 01:00:53,760
scheduling decision to

1454
01:00:53,760 --> 01:00:57,720
meet the 10 bonds

1455
01:00:58,960 --> 01:01:00,160
and so

1456
01:01:00,160 --> 01:01:02,319
we

1457
01:01:03,359 --> 01:01:06,480
what sorry

1458
01:01:07,200 --> 01:01:10,799
also what the q information will list

1459
01:01:10,799 --> 01:01:14,319
out their qm mechanisms uh which has

1460
01:01:14,319 --> 01:01:17,440
been discussed in that lat uh

1461
01:01:17,440 --> 01:01:20,000
that that will that should get a

1462
01:01:20,000 --> 01:01:22,240
confirmation confirmation from a working

1463
01:01:22,240 --> 01:01:26,079
group um but uh for the first uh first

1464
01:01:26,079 --> 01:01:29,680
of all uh the and unique mechanism

1465
01:01:29,680 --> 01:01:32,400
should be selected in enhanced that data

1466
01:01:32,400 --> 01:01:36,319
plane um that could be selected to

1467
01:01:36,319 --> 01:01:38,960
uh guaranteed the latency

1468
01:01:38,960 --> 01:01:43,680
for example the tas cbs cqrf a

1469
01:01:43,680 --> 01:01:46,319
ats cyclic queueing

1470
01:01:46,319 --> 01:01:49,760
deadline based queuing and adn just we

1471
01:01:49,760 --> 01:01:51,680
just

1472
01:01:51,680 --> 01:01:53,200
talk about

1473
01:01:53,200 --> 01:01:54,720
second

1474
01:01:54,720 --> 01:01:56,799
the queue information may cover the

1475
01:01:56,799 --> 01:02:00,400
planned and required queuing delay

1476
01:02:00,400 --> 01:02:01,520
such as

1477
01:02:01,520 --> 01:02:04,160
maximum qe delay and the maximum qe

1478
01:02:04,160 --> 01:02:07,200
delay variation and the queuing like

1479
01:02:07,200 --> 01:02:10,960
parameters uh should be carried for uh

1480
01:02:10,960 --> 01:02:14,319
further correlation between nodes uh for

1481
01:02:14,319 --> 01:02:16,720
example their cycle uh information that

1482
01:02:16,720 --> 01:02:19,839
line permission and their uh

1483
01:02:19,839 --> 01:02:23,200
the nantucket uh badgered uh and so on

1484
01:02:23,200 --> 01:02:26,960
and many other uh parameters will be uh

1485
01:02:26,960 --> 01:02:32,319
added to the uh the q information

1486
01:02:32,480 --> 01:02:33,280
so

1487
01:02:33,280 --> 01:02:34,720
uh

1488
01:02:34,720 --> 01:02:38,400
we proposed the uh the i2 fpv6 extension

1489
01:02:38,400 --> 01:02:40,960
solution to provide uh the input

1490
01:02:40,960 --> 01:02:44,480
absolution for the q information um

1491
01:02:44,480 --> 01:02:47,839
uh we defined a new ipv6 option for that

1492
01:02:47,839 --> 01:02:51,599
led to cyclo q information uh and we

1493
01:02:51,599 --> 01:02:54,640
defined the queuing flag uh helps to

1494
01:02:54,640 --> 01:02:56,079
this uh dis

1495
01:02:56,079 --> 01:02:58,160
discriminate the types of cumin

1496
01:02:58,160 --> 01:02:59,440
metallisms

1497
01:02:59,440 --> 01:03:01,200
uh we use the

1498
01:03:01,200 --> 01:03:04,799
uh we use subject to carry specific that

1499
01:03:04,799 --> 01:03:08,160
data q information and we also specify

1500
01:03:08,160 --> 01:03:11,440
the format that the new option uh is to

1501
01:03:11,440 --> 01:03:15,039
be placed in an uh hobbyhope or doh

1502
01:03:15,039 --> 01:03:17,680
extension header

1503
01:03:17,680 --> 01:03:21,680
we also proposed uh the mpls

1504
01:03:21,680 --> 01:03:24,559
extension solution uh we

1505
01:03:24,559 --> 01:03:28,000
provide additional encapsulation for the

1506
01:03:28,000 --> 01:03:30,960
queuing delay over deadlock flows in mps

1507
01:03:30,960 --> 01:03:34,559
data plane uh we align with the the

1508
01:03:34,559 --> 01:03:37,680
ongoing work in nps working group uh

1509
01:03:37,680 --> 01:03:43,200
this uh itf mpls mna framework and

1510
01:03:43,200 --> 01:03:46,079
that has been just uh adopted as the

1511
01:03:46,079 --> 01:03:48,000
working uh document

1512
01:03:48,000 --> 01:03:52,400
uh so we propose uh to add spl to carry

1513
01:03:52,400 --> 01:03:53,599
deadlock q

1514
01:03:53,599 --> 01:03:56,160
uh redefine uh deadlock queen and

1515
01:03:56,160 --> 01:03:59,599
catering spl and they used uh tre to

1516
01:03:59,599 --> 01:04:02,160
carry that qa information

1517
01:04:02,160 --> 01:04:05,680
and use sub tlv to carry specific data

1518
01:04:05,680 --> 01:04:08,240
queueing information

1519
01:04:08,240 --> 01:04:10,479
so

1520
01:04:11,520 --> 01:04:14,480
the types of queuing mechanisms used for

1521
01:04:14,480 --> 01:04:16,799
that sled and the related

1522
01:04:16,799 --> 01:04:19,599
queue information should be discussed uh

1523
01:04:19,599 --> 01:04:23,520
in details uh that may be uh that should

1524
01:04:23,520 --> 01:04:26,319
get a complete confirmation from a

1525
01:04:26,319 --> 01:04:27,680
working group

1526
01:04:27,680 --> 01:04:29,920
and their last steps other

1527
01:04:29,920 --> 01:04:33,520
encapsulations such as mps over udp uh

1528
01:04:33,520 --> 01:04:35,920
and their srh may be taken into

1529
01:04:35,920 --> 01:04:38,400
consideration and we will follow the

1530
01:04:38,400 --> 01:04:40,960
chatter and the milestones of deadlock

1531
01:04:40,960 --> 01:04:43,359
and the line with the tommy

1532
01:04:43,359 --> 01:04:45,680
terminology so

1533
01:04:45,680 --> 01:04:47,280
comments and the questions are

1534
01:04:47,280 --> 01:04:50,000
appreciated thank you

1535
01:04:50,000 --> 01:04:52,240
and we have time for some quick

1536
01:04:52,240 --> 01:04:56,558
questions so first off is greg mursky

1537
01:04:57,359 --> 01:04:59,200
frank

1538
01:04:59,200 --> 01:05:00,880
gary q are you

1539
01:05:00,880 --> 01:05:01,680
leaving

1540
01:05:01,680 --> 01:05:02,799
um

1541
01:05:02,799 --> 01:05:06,079
um so i realized that you proposed to

1542
01:05:06,079 --> 01:05:07,680
have this

1543
01:05:07,680 --> 01:05:10,000
queuing information that includes

1544
01:05:10,000 --> 01:05:11,839
time budget

1545
01:05:11,839 --> 01:05:14,720
for the packet be included either as a

1546
01:05:14,720 --> 01:05:18,960
hub by hop information end to end

1547
01:05:18,960 --> 01:05:20,720
what you envision

1548
01:05:20,720 --> 01:05:22,960
uh the system

1549
01:05:22,960 --> 01:05:24,319
behavior

1550
01:05:24,319 --> 01:05:26,160
if

1551
01:05:26,160 --> 01:05:26,960
their

1552
01:05:26,960 --> 01:05:32,520
time budget for the node is exceeded

1553
01:05:40,559 --> 01:05:45,280
um the this is up to the uh the uh

1554
01:05:45,280 --> 01:05:49,680
new liquor uh queuing mechanisms

1555
01:05:49,680 --> 01:05:54,000
so uh we we this doc draft just proposed

1556
01:05:54,000 --> 01:05:56,480
uh the scheduling over multiple uh

1557
01:05:56,480 --> 01:05:59,520
queueing mechanisms so

1558
01:05:59,520 --> 01:06:02,839
i think what you ask is belong to the

1559
01:06:02,839 --> 01:06:04,559
the um

1560
01:06:04,559 --> 01:06:09,119
qa mechanism not their scheduling

1561
01:06:10,319 --> 01:06:12,640
so uh really understanding the draft

1562
01:06:12,640 --> 01:06:15,440
talks about guarantees so

1563
01:06:15,440 --> 01:06:17,760
then there is no guarantee i guess

1564
01:06:17,760 --> 01:06:19,839
but let's take it to the list thank you

1565
01:06:19,839 --> 01:06:21,839
yes yes thank you

1566
01:06:21,839 --> 01:06:24,480
so we are really over time uh

1567
01:06:24,480 --> 01:06:26,400
i don't know if

1568
01:06:26,400 --> 01:06:28,319
if if you can take it to the list that

1569
01:06:28,319 --> 01:06:30,079
would be the best sure i think my

1570
01:06:30,079 --> 01:06:32,160
question is similar

1571
01:06:32,160 --> 01:06:33,119
the guys

1572
01:06:33,119 --> 01:06:34,880
right now they're talking about coding

1573
01:06:34,880 --> 01:06:36,000
is

1574
01:06:36,000 --> 01:06:38,480
too early so we're actually jumping

1575
01:06:38,480 --> 01:06:40,240
you're jumping the queue so if you don't

1576
01:06:40,240 --> 01:06:41,839
mind taking to the list that'd be great

1577
01:06:41,839 --> 01:06:44,559
uh robin if you don't mind uh taking the

1578
01:06:44,559 --> 01:06:49,200
list as well uh thank you and i think uh

1579
01:06:49,200 --> 01:06:51,520
uh tourists please

1580
01:06:51,520 --> 01:06:53,119
and we're gonna steal a little time from

1581
01:06:53,119 --> 01:06:54,960
you and the next presenters it's not

1582
01:06:54,960 --> 01:06:57,680
just you it's the next presenters also

1583
01:06:57,680 --> 01:06:58,880
all right

1584
01:06:58,880 --> 01:06:59,680
thanks

1585
01:06:59,680 --> 01:07:01,520
so this stuff has been around for five

1586
01:07:01,520 --> 01:07:04,160
years uh three different drafts next

1587
01:07:04,160 --> 01:07:06,400
slide

1588
01:07:06,400 --> 01:07:08,799
faster all right so um there is a very

1589
01:07:08,799 --> 01:07:11,039
long draft that i wrote with all the

1590
01:07:11,039 --> 01:07:14,079
nasty and interesting uh background

1591
01:07:14,079 --> 01:07:15,599
expired if you're interested to have

1592
01:07:15,599 --> 01:07:17,359
informational or even individual for

1593
01:07:17,359 --> 01:07:19,599
that draft let me know separately

1594
01:07:19,599 --> 01:07:21,440
the requirements also integrated in the

1595
01:07:21,440 --> 01:07:22,640
active

1596
01:07:22,640 --> 01:07:24,000
draft that

1597
01:07:24,000 --> 01:07:26,559
carries it as requirements this is all

1598
01:07:26,559 --> 01:07:28,079
the good stuff this solution does

1599
01:07:28,079 --> 01:07:30,000
bounded latency dough right minimum

1600
01:07:30,000 --> 01:07:32,000
jitter that's the most important part

1601
01:07:32,000 --> 01:07:34,000
synchronous industrial control loops and

1602
01:07:34,000 --> 01:07:36,160
other stuff and also it makes end

1603
01:07:36,160 --> 01:07:38,160
devices cheaper because it removes the

1604
01:07:38,160 --> 01:07:39,760
clock synchronization requirement from

1605
01:07:39,760 --> 01:07:40,640
them

1606
01:07:40,640 --> 01:07:42,559
arbitrary links and jitter which is what

1607
01:07:42,559 --> 01:07:44,720
tsn doesn't need and then the big thing

1608
01:07:44,720 --> 01:07:46,079
it scales because it doesn't have

1609
01:07:46,079 --> 01:07:49,200
perhaps flowing state uh so it's not not

1610
01:07:49,200 --> 01:07:51,119
the five tuple state even though it just

1611
01:07:51,119 --> 01:07:52,520
then has the

1612
01:07:52,520 --> 01:07:55,359
latency.net services um and so all the

1613
01:07:55,359 --> 01:07:56,720
good things that come with it like you

1614
01:07:56,720 --> 01:07:58,160
know no interruption during network

1615
01:07:58,160 --> 01:08:00,799
reconvergence and so on um minimum clock

1616
01:08:00,799 --> 01:08:02,400
synchronization requirement proven

1617
01:08:02,400 --> 01:08:05,039
mechanism so this is basically tsn

1618
01:08:05,039 --> 01:08:07,440
cyclic hearing and forwarding adapted to

1619
01:08:07,440 --> 01:08:08,559
that net

1620
01:08:08,559 --> 01:08:09,599
and

1621
01:08:09,599 --> 01:08:11,920
no change to the packet headers uh is

1622
01:08:11,920 --> 01:08:14,480
one option we can obviously as you saw

1623
01:08:14,480 --> 01:08:16,640
these uh cycle stuff also put into new

1624
01:08:16,640 --> 01:08:18,799
headers but we don't need to especially

1625
01:08:18,799 --> 01:08:20,880
not in the mpls forwarding plane which

1626
01:08:20,880 --> 01:08:23,198
we already have so makes it a great you

1627
01:08:23,198 --> 01:08:25,759
know first step uh mechanism where we

1628
01:08:25,759 --> 01:08:27,439
don't only have all the queuing stuff

1629
01:08:27,439 --> 01:08:30,000
well worked out but also no packet

1630
01:08:30,000 --> 01:08:32,080
headers and uh sorry no coffee for it

1631
01:08:32,080 --> 01:08:34,238
next slide

1632
01:08:34,238 --> 01:08:36,960
okay how do we do it as i said cyclic q

1633
01:08:36,960 --> 01:08:39,040
and forwarding from tsn well proven

1634
01:08:39,040 --> 01:08:40,238
understood

1635
01:08:40,238 --> 01:08:41,759
meets all the requirement except for

1636
01:08:41,759 --> 01:08:44,399
number five uh has a very high clock

1637
01:08:44,399 --> 01:08:46,799
synchronization accuracy requirement um

1638
01:08:46,799 --> 01:08:48,799
because it synchronizes on nanosecond

1639
01:08:48,799 --> 01:08:50,479
clock which we don't

1640
01:08:50,479 --> 01:08:52,719
and the throughput for that stuff goes

1641
01:08:52,719 --> 01:08:54,880
quickly down to zero when you have a

1642
01:08:54,880 --> 01:08:56,799
network path longer than let's say two

1643
01:08:56,799 --> 01:08:59,040
kilometers on the typical parameters so

1644
01:08:59,040 --> 01:09:01,120
with tagging we're synchronizing based

1645
01:09:01,120 --> 01:09:03,198
on attack in the packet header which we

1646
01:09:03,198 --> 01:09:05,279
need three values at minimum so that

1647
01:09:05,279 --> 01:09:07,679
would be mpls encoding three values of

1648
01:09:07,679 --> 01:09:09,759
the traffic class field this is in the

1649
01:09:09,759 --> 01:09:11,920
draft um and the validation that we've

1650
01:09:11,920 --> 01:09:15,279
done is based on 100 gigabit fpga three

1651
01:09:15,279 --> 01:09:17,439
four years ago

1652
01:09:17,439 --> 01:09:19,920
production routers with additional qs

1653
01:09:19,920 --> 01:09:22,238
fpga and that was deployed in a 2000

1654
01:09:22,238 --> 01:09:24,560
kilometer network in china across uh

1655
01:09:24,560 --> 01:09:27,120
multiple parties uh to validate that

1656
01:09:27,120 --> 01:09:28,719
this is running fine

1657
01:09:28,719 --> 01:09:30,960
and as i said proposed since then um but

1658
01:09:30,960 --> 01:09:33,439
obviously not on the charter so always

1659
01:09:33,439 --> 01:09:34,719
waiting in

1660
01:09:34,719 --> 01:09:36,960
some way not deterministic queue next

1661
01:09:36,960 --> 01:09:38,960
slide

1662
01:09:38,960 --> 01:09:41,040
okay so this is i'm going to skip this

1663
01:09:41,040 --> 01:09:42,319
right so this is

1664
01:09:42,319 --> 01:09:43,759
the mechanism this is when we ever

1665
01:09:43,759 --> 01:09:46,399
discussed the details of the technology

1666
01:09:46,399 --> 01:09:48,799
next slide

1667
01:09:48,799 --> 01:09:51,679
so what did we change uh since uh 113.

1668
01:09:51,679 --> 01:09:53,759
so we added a reference to the 2021

1669
01:09:53,759 --> 01:09:56,480
published research paper um that is

1670
01:09:56,480 --> 01:10:00,000
showing all the gory details based on

1671
01:10:00,000 --> 01:10:01,920
a highly accurate simulation so it's a

1672
01:10:01,920 --> 01:10:04,159
lot easier to do a lot of timing

1673
01:10:04,159 --> 01:10:06,000
validation in the simulation this is an

1674
01:10:06,000 --> 01:10:07,760
ifip conference which means there is no

1675
01:10:07,760 --> 01:10:09,679
paywall the url is here

1676
01:10:09,679 --> 01:10:12,159
um and we edit the text and forwarding

1677
01:10:12,159 --> 01:10:14,159
pseudo code for the ingress operation

1678
01:10:14,159 --> 01:10:16,080
when you get your tuple flow and you do

1679
01:10:16,080 --> 01:10:18,159
per five type of flow and queuing into

1680
01:10:18,159 --> 01:10:20,640
this non-perf low forwarding mechanism

1681
01:10:20,640 --> 01:10:22,560
the way the spec is written this is all

1682
01:10:22,560 --> 01:10:24,800
uh done uh based on textual plus

1683
01:10:24,800 --> 01:10:27,280
pseudocode i come from a multicast work

1684
01:10:27,280 --> 01:10:28,960
where also a lot of

1685
01:10:28,960 --> 01:10:31,360
rfcs in multicast routing have been

1686
01:10:31,360 --> 01:10:33,920
defined on pseudocode i preferred over

1687
01:10:33,920 --> 01:10:36,080
some of this diffserv behavioral

1688
01:10:36,080 --> 01:10:38,080
description that we've seen in diffserv

1689
01:10:38,080 --> 01:10:40,880
so that's you know for us to decide how

1690
01:10:40,880 --> 01:10:42,880
we write these texts

1691
01:10:42,880 --> 01:10:44,480
and that's very simple right every flow

1692
01:10:44,480 --> 01:10:46,320
just has a certain amount of configured

1693
01:10:46,320 --> 01:10:48,239
bits that it can enqueue into every

1694
01:10:48,239 --> 01:10:50,080
cycle has to be larger than a single

1695
01:10:50,080 --> 01:10:52,320
packet of course um and the pure code

1696
01:10:52,320 --> 01:10:54,560
explains that um and then i added more

1697
01:10:54,560 --> 01:10:56,560
implementation deployment validation

1698
01:10:56,560 --> 01:10:58,560
considerations for high speed

1699
01:10:58,560 --> 01:10:59,920
implementations for network with

1700
01:10:59,920 --> 01:11:03,920
different speed links so next slide

1701
01:11:04,800 --> 01:11:07,760
so i think uh you know from what i think

1702
01:11:07,760 --> 01:11:10,000
we want to we need to achieve in a draft

1703
01:11:10,000 --> 01:11:11,920
to actually get to a point where we can

1704
01:11:11,920 --> 01:11:12,880
approve

1705
01:11:12,880 --> 01:11:15,040
uh build and deploy it it's functionally

1706
01:11:15,040 --> 01:11:17,120
complete obviously you know not a lot of

1707
01:11:17,120 --> 01:11:19,760
review done um

1708
01:11:19,760 --> 01:11:21,040
the uh

1709
01:11:21,040 --> 01:11:24,239
shutter puts it uh into scope i think

1710
01:11:24,239 --> 01:11:25,440
as i said

1711
01:11:25,440 --> 01:11:28,000
um it can be done with existing packet

1712
01:11:28,000 --> 01:11:29,440
headers because we just need a few

1713
01:11:29,440 --> 01:11:31,199
values for the tag

1714
01:11:31,199 --> 01:11:32,880
in each header mpls is what we've

1715
01:11:32,880 --> 01:11:35,120
defined if we put it into dscp we can do

1716
01:11:35,120 --> 01:11:37,920
it for ip but we may not have you know

1717
01:11:37,920 --> 01:11:40,480
worked out all the net service stuff in

1718
01:11:40,480 --> 01:11:42,480
the architecture by itself which is

1719
01:11:42,480 --> 01:11:44,400
trying to tunnel it over mpls at this

1720
01:11:44,400 --> 01:11:45,600
point in time that might be an

1721
01:11:45,600 --> 01:11:47,760
additional text

1722
01:11:47,760 --> 01:11:49,280
and then of course yeah how do we want

1723
01:11:49,280 --> 01:11:50,880
to structure this stuff i was talking

1724
01:11:50,880 --> 01:11:53,440
with ishan in vienna and he was saying

1725
01:11:53,440 --> 01:11:55,040
maybe separate out the mechanism

1726
01:11:55,040 --> 01:11:57,760
independent of the tagging in in mpls or

1727
01:11:57,760 --> 01:11:59,360
dscp or so

1728
01:11:59,360 --> 01:12:00,239
um

1729
01:12:00,239 --> 01:12:01,520
but that might be an informational

1730
01:12:01,520 --> 01:12:03,520
document so i was in the first place

1731
01:12:03,520 --> 01:12:05,280
trying to go what's the minimum one

1732
01:12:05,280 --> 01:12:07,760
document has the mpls in it we do an

1733
01:12:07,760 --> 01:12:09,320
add-on document in

1734
01:12:09,320 --> 01:12:12,080
tsvwg.net for dscp so that's all

1735
01:12:12,080 --> 01:12:14,640
structure in the end i think would be

1736
01:12:14,640 --> 01:12:16,320
great if we could do an adoption call

1737
01:12:16,320 --> 01:12:18,719
right this is uniquely different from

1738
01:12:18,719 --> 01:12:19,840
all the other things that are being

1739
01:12:19,840 --> 01:12:21,440
brought in right now because i think it

1740
01:12:21,440 --> 01:12:23,760
hits all the check marks of you know

1741
01:12:23,760 --> 01:12:26,080
high speed validation being around long

1742
01:12:26,080 --> 01:12:28,800
being derived from proven tsn technology

1743
01:12:28,800 --> 01:12:30,159
and you know meeting all the

1744
01:12:30,159 --> 01:12:31,600
requirements that i could have ever

1745
01:12:31,600 --> 01:12:33,600
think of and written down in a

1746
01:12:33,600 --> 01:12:36,320
requirements document so thank you thank

1747
01:12:36,320 --> 01:12:38,000
you for leaving time for questions we

1748
01:12:38,000 --> 01:12:41,040
have a few people in queue

1749
01:12:41,600 --> 01:12:42,800
uh

1750
01:12:42,800 --> 01:12:44,719
thank you for uh

1751
01:12:44,719 --> 01:12:47,520
reviving this

1752
01:12:47,520 --> 01:12:50,800
reusing just from a basic stuff

1753
01:12:50,800 --> 01:12:53,760
using the existing data print mechanism

1754
01:12:53,760 --> 01:12:56,560
simplifies any deployment because trying

1755
01:12:56,560 --> 01:12:59,040
to bring any new forwarding mechanism

1756
01:12:59,040 --> 01:13:02,000
into the data plane puts in a very long

1757
01:13:02,000 --> 01:13:04,640
cycle before we can see

1758
01:13:04,640 --> 01:13:06,800
any results that can be put into

1759
01:13:06,800 --> 01:13:09,360
commercial offerings it's mostly an itf

1760
01:13:09,360 --> 01:13:10,960
issue right because the real challenge

1761
01:13:10,960 --> 01:13:13,440
of all the qs we're doing is some form

1762
01:13:13,440 --> 01:13:15,679
of fpga to do really cool new dead net

1763
01:13:15,679 --> 01:13:18,080
queuing right so

1764
01:13:18,080 --> 01:13:19,600
but if we can use something that is

1765
01:13:19,600 --> 01:13:21,199
already in there and it does have to be

1766
01:13:21,199 --> 01:13:24,400
fpgas already in the asic then

1767
01:13:24,400 --> 01:13:26,320
if you're lucky if you have an ethernet

1768
01:13:26,320 --> 01:13:28,480
switch that is tsn based maybe that

1769
01:13:28,480 --> 01:13:30,880
makes it a lot easier yes there are

1770
01:13:30,880 --> 01:13:32,480
there are ones available that are

1771
01:13:32,480 --> 01:13:35,520
commercially available so that's the

1772
01:13:35,520 --> 01:13:37,280
we've been trying to look into this with

1773
01:13:37,280 --> 01:13:39,120
p4 and we're still struggling with the

1774
01:13:39,120 --> 01:13:41,760
you know it's on the p4 tsn switch

1775
01:13:41,760 --> 01:13:42,640
okay

1776
01:13:42,640 --> 01:13:44,239
there are taiwanese vendors that are

1777
01:13:44,239 --> 01:13:46,159
providing you broadcom with the

1778
01:13:46,159 --> 01:13:47,520
functionality that you're looking for

1779
01:13:47,520 --> 01:13:49,520
and they even give you the ptp if it's

1780
01:13:49,520 --> 01:13:51,520
needed so they are

1781
01:13:51,520 --> 01:13:54,080
so if if this gets adopted there is

1782
01:13:54,080 --> 01:13:56,719
commercial hardware available that where

1783
01:13:56,719 --> 01:14:00,320
this could be uh implemented

1784
01:14:10,000 --> 01:14:11,679
please go ahead with your comment

1785
01:14:11,679 --> 01:14:14,679
question

1786
01:14:17,440 --> 01:14:20,719
let's move to david david please

1787
01:14:20,719 --> 01:14:22,800
all right well it's uh good blood loaded

1788
01:14:22,800 --> 01:14:25,520
question what's the scope yes sorry wait

1789
01:14:25,520 --> 01:14:29,800
a minute did we get shafu on yeah

1790
01:14:40,960 --> 01:14:44,400
the sake of traffic from a multiple

1791
01:14:44,400 --> 01:14:45,840
incoming interface

1792
01:14:45,840 --> 01:14:48,800
so assuming that the world is traffic

1793
01:14:48,800 --> 01:14:51,360
i expected to be sent

1794
01:14:51,360 --> 01:14:54,960
in a single cycle at the same time

1795
01:14:54,960 --> 01:14:56,719
the problem is

1796
01:14:56,719 --> 01:14:58,800
how to ensure that

1797
01:14:58,800 --> 01:15:01,280
the sum of this traffic

1798
01:15:01,280 --> 01:15:02,719
we know that you can see that the

1799
01:15:02,719 --> 01:15:05,760
maximum number of bids

1800
01:15:05,760 --> 01:15:07,520
that can be sent

1801
01:15:07,520 --> 01:15:09,440
in a single cycle

1802
01:15:09,440 --> 01:15:13,120
if it exceeds is it any compensation

1803
01:15:13,120 --> 01:15:16,159
schema by t circa f

1804
01:15:16,159 --> 01:15:17,760
can we take the question to the list

1805
01:15:17,760 --> 01:15:18,960
because i think it's really hard to

1806
01:15:18,960 --> 01:15:20,560
understand you here so it would be great

1807
01:15:20,560 --> 01:15:25,080
and i'll answer immediately thank you

1808
01:15:29,040 --> 01:15:30,400
loaded question

1809
01:15:30,400 --> 01:15:31,920
um

1810
01:15:31,920 --> 01:15:35,520
what's the scope of this um you know

1811
01:15:35,520 --> 01:15:36,960
i would say

1812
01:15:36,960 --> 01:15:38,880
replace tsn but obviously we want to

1813
01:15:38,880 --> 01:15:40,480
start with the you know where the

1814
01:15:40,480 --> 01:15:42,239
network becomes larger where tsn doesn't

1815
01:15:42,239 --> 01:15:44,480
work well right so this could

1816
01:15:44,480 --> 01:15:46,560
ask a different question um how many

1817
01:15:46,560 --> 01:15:49,320
administrative domains sorry how many

1818
01:15:49,320 --> 01:15:52,800
administrative domains and who knows the

1819
01:15:52,800 --> 01:15:54,640
answer let's see if you know it too

1820
01:15:54,640 --> 01:15:56,480
right the answer is one

1821
01:15:56,480 --> 01:15:58,560
okay so i have good news for you you do

1822
01:15:58,560 --> 01:16:01,920
not need tsvwgs permission to go forward

1823
01:16:01,920 --> 01:16:03,600
here within a single administrative

1824
01:16:03,600 --> 01:16:07,120
domain dscps are generally usable at the

1825
01:16:07,120 --> 01:16:09,679
operator's discretion it might be worth

1826
01:16:09,679 --> 01:16:12,560
talking a little bit to tcwg about how

1827
01:16:12,560 --> 01:16:14,719
to select some dhcps will cause less

1828
01:16:14,719 --> 01:16:16,400
trouble but you don't need to drive a

1829
01:16:16,400 --> 01:16:18,239
full diff server that's good yeah you're

1830
01:16:18,239 --> 01:16:20,400
right

1831
01:16:20,400 --> 01:16:21,760
so i think dan is going to come to the

1832
01:16:21,760 --> 01:16:24,000
mic and say you know it allows you to

1833
01:16:24,000 --> 01:16:26,400
reuse the existing formats and there's

1834
01:16:26,400 --> 01:16:28,080
going to be huge value in that and then

1835
01:16:28,080 --> 01:16:29,280
we should move to the next person to

1836
01:16:29,280 --> 01:16:32,759
allow them okay

1837
01:16:37,830 --> 01:16:41,600
[Laughter]

1838
01:16:41,600 --> 01:16:42,320
so

1839
01:16:42,320 --> 01:16:44,799
next up

1840
01:16:45,679 --> 01:16:49,840
is how and i uh

1841
01:16:51,760 --> 01:16:53,120
thanks

1842
01:16:53,120 --> 01:16:54,080
uh

1843
01:16:54,080 --> 01:16:57,520
so i just realized this one actually

1844
01:16:57,520 --> 01:17:00,880
possibly would be best to put before a

1845
01:17:00,880 --> 01:17:02,560
tallest presentation

1846
01:17:02,560 --> 01:17:05,040
so it basically talks about the similar

1847
01:17:05,040 --> 01:17:06,080
thing

1848
01:17:06,080 --> 01:17:08,800
but it gives a little bit of

1849
01:17:08,800 --> 01:17:11,360
background and reasoning why

1850
01:17:11,360 --> 01:17:14,400
uh this kind of tagging or the

1851
01:17:14,400 --> 01:17:17,120
or the cycle id would be required in

1852
01:17:17,120 --> 01:17:20,640
order to enhance the cqf but this one is

1853
01:17:20,640 --> 01:17:23,920
more focused on the ipv6 data plane

1854
01:17:23,920 --> 01:17:26,960
rather than mps

1855
01:17:26,960 --> 01:17:29,040
so let me try to control to move the

1856
01:17:29,040 --> 01:17:31,920
slides yeah yeah i just realized that

1857
01:17:31,920 --> 01:17:35,600
yeah so a quick quick quickly try to

1858
01:17:35,600 --> 01:17:37,199
refresh the memory we have the

1859
01:17:37,199 --> 01:17:39,040
fundamental cqf

1860
01:17:39,040 --> 01:17:42,239
which was defined by ieee

1861
01:17:42,239 --> 01:17:44,880
and i'm not going to touch the details

1862
01:17:44,880 --> 01:17:47,600
of it here but basically the fundamental

1863
01:17:47,600 --> 01:17:49,040
cqf is

1864
01:17:49,040 --> 01:17:52,560
has two buffer port and the input up and

1865
01:17:52,560 --> 01:17:54,960
output was swapped once every cycle time

1866
01:17:54,960 --> 01:17:57,840
tc so this cycle time sorry cycle

1867
01:17:57,840 --> 01:18:00,480
interval tc is very important and also

1868
01:18:00,480 --> 01:18:02,960
as given by the working group document

1869
01:18:02,960 --> 01:18:04,719
bounding latency

1870
01:18:04,719 --> 01:18:05,679
we

1871
01:18:05,679 --> 01:18:07,920
it has been shown that the minimum

1872
01:18:07,920 --> 01:18:10,560
end-to-end latency and max maximum

1873
01:18:10,560 --> 01:18:13,520
end-to-end latency basically are

1874
01:18:13,520 --> 01:18:15,520
determined by the

1875
01:18:15,520 --> 01:18:18,560
cycle interval tc and the number of hops

1876
01:18:18,560 --> 01:18:22,000
of course here we have at that time

1877
01:18:22,000 --> 01:18:24,640
terminology defined i'll revisit this

1878
01:18:24,640 --> 01:18:28,320
later but in the fundamental cqf the uh

1879
01:18:28,320 --> 01:18:31,440
the that time dt value is really small

1880
01:18:31,440 --> 01:18:34,239
so basically it can be ignitable so that

1881
01:18:34,239 --> 01:18:36,719
gives very attractive simplicity

1882
01:18:36,719 --> 01:18:39,040
features from cqf

1883
01:18:39,040 --> 01:18:42,320
um which means it's simple that it gives

1884
01:18:42,320 --> 01:18:44,800
the simple simple calculable latency

1885
01:18:44,800 --> 01:18:47,120
bound which only relevant to the cycle

1886
01:18:47,120 --> 01:18:50,239
interval tc and number of hubs and also

1887
01:18:50,239 --> 01:18:52,400
it gives the simple maintainers

1888
01:18:52,400 --> 01:18:55,280
those are the attractive uh features

1889
01:18:55,280 --> 01:18:58,000
that people want to consider it for the

1890
01:18:58,000 --> 01:18:59,920
wider deployment

1891
01:18:59,920 --> 01:19:02,159
and

1892
01:19:02,159 --> 01:19:05,280
we are also seeing that the cqf has the

1893
01:19:05,280 --> 01:19:07,920
potential for the wider deployment when

1894
01:19:07,920 --> 01:19:10,400
we talk about the wider deployment

1895
01:19:10,400 --> 01:19:12,880
basically we're thinking about four

1896
01:19:12,880 --> 01:19:15,280
at least four four features to be

1897
01:19:15,280 --> 01:19:18,239
supported which are labeled as one two

1898
01:19:18,239 --> 01:19:20,480
four under the first bullet

1899
01:19:20,480 --> 01:19:22,239
namely they are the smaller end-to-end

1900
01:19:22,239 --> 01:19:24,719
latency bound the second one is a larger

1901
01:19:24,719 --> 01:19:26,960
number of hubs the third one is longer

1902
01:19:26,960 --> 01:19:29,040
links which means the longer propagation

1903
01:19:29,040 --> 01:19:31,520
delay and the first one is the larger

1904
01:19:31,520 --> 01:19:34,840
processing time variance because we are

1905
01:19:34,840 --> 01:19:38,239
expecting on the different node types

1906
01:19:38,239 --> 01:19:39,360
will be

1907
01:19:39,360 --> 01:19:40,640
will be put

1908
01:19:40,640 --> 01:19:42,239
as the intermediate nodes such as

1909
01:19:42,239 --> 01:19:44,159
different uh

1910
01:19:44,159 --> 01:19:46,239
switches or routers

1911
01:19:46,239 --> 01:19:48,080
from different vendors or even some of

1912
01:19:48,080 --> 01:19:51,440
the layer layer one equipment which are

1913
01:19:51,440 --> 01:19:53,040
not visible

1914
01:19:53,040 --> 01:19:54,080
at the

1915
01:19:54,080 --> 01:19:56,400
layer to a layer three layer

1916
01:19:56,400 --> 01:19:58,960
so i recall that the secure latency

1917
01:19:58,960 --> 01:20:01,040
bound are only relevant to the number of

1918
01:20:01,040 --> 01:20:03,920
hops and times and and the cycle

1919
01:20:03,920 --> 01:20:05,040
interval

1920
01:20:05,040 --> 01:20:07,679
so uh when we talk about these four

1921
01:20:07,679 --> 01:20:09,840
requirements the first two we are

1922
01:20:09,840 --> 01:20:12,560
thinking that naturally can be supported

1923
01:20:12,560 --> 01:20:14,719
by the higher speed links

1924
01:20:14,719 --> 01:20:17,199
so there is a there is a hard

1925
01:20:17,199 --> 01:20:20,080
requirement that for each of the cycle

1926
01:20:20,080 --> 01:20:22,800
it has to at least support a maximum

1927
01:20:22,800 --> 01:20:26,000
size packet which is normally 100

1928
01:20:26,000 --> 01:20:27,920
1500 bytes

1929
01:20:27,920 --> 01:20:31,120
so look at the table here

1930
01:20:31,120 --> 01:20:32,880
it basically gives when the link

1931
01:20:32,880 --> 01:20:36,960
bandwidth increases we can achieve the

1932
01:20:36,960 --> 01:20:41,440
smaller cycle time in order to uh send

1933
01:20:41,440 --> 01:20:43,840
one maximum size packet

1934
01:20:43,840 --> 01:20:46,000
so that gives the potential that the

1935
01:20:46,000 --> 01:20:49,040
cycle interval can be decreasing from a

1936
01:20:49,040 --> 01:20:50,480
few hundred

1937
01:20:50,480 --> 01:20:52,239
micros

1938
01:20:52,239 --> 01:20:55,520
a millisecond to a few milliseconds

1939
01:20:55,520 --> 01:20:58,639
sorry a few microseconds so uh so we are

1940
01:20:58,639 --> 01:21:00,560
seeing that the potentials for uh for

1941
01:21:00,560 --> 01:21:03,440
the item one and two uh basically can be

1942
01:21:03,440 --> 01:21:05,120
achieved so let's

1943
01:21:05,120 --> 01:21:08,480
let's talk about um item three and four

1944
01:21:08,480 --> 01:21:10,080
which are the longer links and the

1945
01:21:10,080 --> 01:21:14,199
longer time variance

1946
01:21:14,960 --> 01:21:17,199
so if we look at the fundamental to

1947
01:21:17,199 --> 01:21:19,760
buffer cqf we are thinking that it can

1948
01:21:19,760 --> 01:21:22,880
support the requirement three and four

1949
01:21:22,880 --> 01:21:25,000
but it will encounter the low

1950
01:21:25,000 --> 01:21:27,040
utilization issue

1951
01:21:27,040 --> 01:21:30,880
so here we want to revisit the that time

1952
01:21:30,880 --> 01:21:33,440
uh which imposed by the fundamental cqf

1953
01:21:33,440 --> 01:21:36,880
which is uh in the red box here

1954
01:21:36,880 --> 01:21:39,520
uh we can see that basically that that

1955
01:21:39,520 --> 01:21:41,120
time is

1956
01:21:41,120 --> 01:21:43,280
is a time to be put

1957
01:21:43,280 --> 01:21:45,920
normally at the end of a cycle it's the

1958
01:21:45,920 --> 01:21:47,840
last byte

1959
01:21:47,840 --> 01:21:50,560
the the purpose of it is to make sure

1960
01:21:50,560 --> 01:21:54,320
that the last byte sent by the node a

1961
01:21:54,320 --> 01:21:57,280
in the cycle i minus 1 has to be ready

1962
01:21:57,280 --> 01:21:59,679
for sending at the next node which is

1963
01:21:59,679 --> 01:22:02,480
node b here before the next cycle which

1964
01:22:02,480 --> 01:22:05,600
is cycle i here so basically the dead

1965
01:22:05,600 --> 01:22:07,920
time should be at least the sum of the

1966
01:22:07,920 --> 01:22:10,080
maximum propagation delay between two

1967
01:22:10,080 --> 01:22:11,040
neighbors

1968
01:22:11,040 --> 01:22:13,440
plus the maximum processing delay at the

1969
01:22:13,440 --> 01:22:16,400
next node and also the um

1970
01:22:16,400 --> 01:22:19,199
and also some of the other time

1971
01:22:19,199 --> 01:22:21,679
variants for example like the clock

1972
01:22:21,679 --> 01:22:24,480
shifting something like that so the the

1973
01:22:24,480 --> 01:22:26,960
the longer the propagation

1974
01:22:26,960 --> 01:22:29,120
or the processing delay the larger the

1975
01:22:29,120 --> 01:22:32,719
dt so if we want to achieve the lower

1976
01:22:32,719 --> 01:22:34,080
end-to-end band

1977
01:22:34,080 --> 01:22:35,920
lower end-to-end boundary latency that

1978
01:22:35,920 --> 01:22:37,760
means we have to

1979
01:22:37,760 --> 01:22:40,960
use the lower uh cycle interval so that

1980
01:22:40,960 --> 01:22:43,280
basically means that that time will eat

1981
01:22:43,280 --> 01:22:45,760
up the cycle interval when the when the

1982
01:22:45,760 --> 01:22:47,600
cycle interval is small

1983
01:22:47,600 --> 01:22:50,719
so that's that's why we see that the low

1984
01:22:50,719 --> 01:22:53,600
utilization uh here

1985
01:22:53,600 --> 01:22:55,840
by the fundamental cqf

1986
01:22:55,840 --> 01:22:57,360
and

1987
01:22:57,360 --> 01:23:00,000
uh the secure variant

1988
01:23:00,000 --> 01:23:02,159
is introduced actually it's not a brand

1989
01:23:02,159 --> 01:23:04,880
new idea it has been brought brought up

1990
01:23:04,880 --> 01:23:06,880
from time to time

1991
01:23:06,880 --> 01:23:10,800
so here we indicated here the cqf as a

1992
01:23:10,800 --> 01:23:12,080
three buffer

1993
01:23:12,080 --> 01:23:14,080
so the three buffer works in rotation

1994
01:23:14,080 --> 01:23:16,560
manner so it's a straightforward variant

1995
01:23:16,560 --> 01:23:18,719
to the fundamental two buffer the

1996
01:23:18,719 --> 01:23:21,040
configuration is very similar and the

1997
01:23:21,040 --> 01:23:23,120
logic can be easily deduced from the

1998
01:23:23,120 --> 01:23:25,600
fundamental to buffer cqf we don't think

1999
01:23:25,600 --> 01:23:27,760
there is a rigid requirement to produce

2000
01:23:27,760 --> 01:23:29,440
a new standard

2001
01:23:29,440 --> 01:23:31,120
and it is quite

2002
01:23:31,120 --> 01:23:33,679
it is in general is feasible

2003
01:23:33,679 --> 01:23:36,159
but when we take a closer look at the

2004
01:23:36,159 --> 01:23:39,360
cqf variant we find out that there is

2005
01:23:39,360 --> 01:23:42,880
there is a time ambiguity window exists

2006
01:23:42,880 --> 01:23:46,880
as there as the uh the the the diagram

2007
01:23:46,880 --> 01:23:48,719
at the left show

2008
01:23:48,719 --> 01:23:50,159
we see that

2009
01:23:50,159 --> 01:23:53,760
there is a processing time window here

2010
01:23:53,760 --> 01:23:56,320
it swells because

2011
01:23:56,320 --> 01:23:58,400
we want to support the

2012
01:23:58,400 --> 01:23:59,600
larger

2013
01:23:59,600 --> 01:24:01,840
processing time variance with the

2014
01:24:01,840 --> 01:24:05,040
increasing of the time variance we can

2015
01:24:05,040 --> 01:24:08,159
see the the degree of the swelling is is

2016
01:24:08,159 --> 01:24:09,760
more severe

2017
01:24:09,760 --> 01:24:11,040
so

2018
01:24:11,040 --> 01:24:14,000
the time ambiguity window would exist

2019
01:24:14,000 --> 01:24:16,719
for two consecutive cycles from the node

2020
01:24:16,719 --> 01:24:17,840
a

2021
01:24:17,840 --> 01:24:20,000
so which is here is a little bit smaller

2022
01:24:20,000 --> 01:24:22,480
i guess but if you can see it there is a

2023
01:24:22,480 --> 01:24:26,000
ambiguity window here so basically uh

2024
01:24:26,000 --> 01:24:28,639
the larger the time variance

2025
01:24:28,639 --> 01:24:31,120
or the smaller the that time the larger

2026
01:24:31,120 --> 01:24:33,840
will be the ambiguity window here

2027
01:24:33,840 --> 01:24:36,800
and remember that in the cqf normally we

2028
01:24:36,800 --> 01:24:40,320
need to preset a time demarcation to

2029
01:24:40,320 --> 01:24:42,719
differentiate the packets from two

2030
01:24:42,719 --> 01:24:44,480
consecutive cycles

2031
01:24:44,480 --> 01:24:46,960
then in here it it would be in

2032
01:24:46,960 --> 01:24:50,320
impractical because the blue dashed line

2033
01:24:50,320 --> 01:24:52,880
if we said here that it looks like for

2034
01:24:52,880 --> 01:24:55,520
the case one the green and the red

2035
01:24:55,520 --> 01:24:57,840
uh packets which are from different

2036
01:24:57,840 --> 01:25:01,040
cycles from node a they are perfectly

2037
01:25:01,040 --> 01:25:03,840
demarcated however maybe for the next

2038
01:25:03,840 --> 01:25:06,320
round uh there there would be again

2039
01:25:06,320 --> 01:25:09,760
ambiguity the the leftmost red uh box

2040
01:25:09,760 --> 01:25:13,199
here will be wrongly identified as the

2041
01:25:13,199 --> 01:25:16,000
green one actually so a simple and a

2042
01:25:16,000 --> 01:25:18,400
straight way out is to let the packet

2043
01:25:18,400 --> 01:25:20,960
carry the cycle id

2044
01:25:20,960 --> 01:25:24,239
as the metadata at the output to help

2045
01:25:24,239 --> 01:25:26,400
the downstream node to determine which

2046
01:25:26,400 --> 01:25:29,520
one is the correct buffer to put it in

2047
01:25:29,520 --> 01:25:31,760
i think i'm running out of time

2048
01:25:31,760 --> 01:25:33,040
yeah yeah

2049
01:25:33,040 --> 01:25:34,239
so uh

2050
01:25:34,239 --> 01:25:37,920
so here uh we have showed the packet of

2051
01:25:37,920 --> 01:25:40,480
ipv basics of option format but i don't

2052
01:25:40,480 --> 01:25:44,239
think that's the most important one um

2053
01:25:44,239 --> 01:25:46,960
we want to select the feedback to see

2054
01:25:46,960 --> 01:25:48,719
whether people think that the right way

2055
01:25:48,719 --> 01:25:51,600
to address the ambiguity issue in order

2056
01:25:51,600 --> 01:25:54,320
to facilitate the increasing demand to

2057
01:25:54,320 --> 01:25:56,880
use cqf and these variants in the wider

2058
01:25:56,880 --> 01:25:59,280
deployment and also we want to study the

2059
01:25:59,280 --> 01:26:01,760
feedback and also from chairs if we want

2060
01:26:01,760 --> 01:26:04,320
to define ib basic options uh whether

2061
01:26:04,320 --> 01:26:06,639
and how to collaborate other working

2062
01:26:06,639 --> 01:26:09,120
groups yeah

2063
01:26:09,120 --> 01:26:10,639
i think it would be good to try to

2064
01:26:10,639 --> 01:26:12,639
collaborate with those others who are

2065
01:26:12,639 --> 01:26:14,880
working on similar topic

2066
01:26:14,880 --> 01:26:17,679
and we'll have to continue discussing

2067
01:26:17,679 --> 01:26:21,520
this and other solutions in the group

2068
01:26:25,840 --> 01:26:28,080
oh

2069
01:26:29,760 --> 01:26:32,760
seven

2070
01:26:39,440 --> 01:26:41,199
we seem to be having a problem with the

2071
01:26:41,199 --> 01:26:45,120
slide so we're going to uh skip to

2072
01:26:45,120 --> 01:26:49,880
uh just and we'll find it okay

2073
01:26:51,600 --> 01:26:52,960
i think we're having trouble with your

2074
01:26:52,960 --> 01:26:56,560
slides just hold on one moment

2075
01:27:00,719 --> 01:27:01,679
yes

2076
01:27:01,679 --> 01:27:04,570
we have it now it's coming

2077
01:27:04,570 --> 01:27:07,670
[Music]

2078
01:27:43,840 --> 01:27:46,840
forwarding

2079
01:27:54,480 --> 01:27:56,320
the following updates

2080
01:27:56,320 --> 01:27:59,040
first modify some amount for each of the

2081
01:27:59,040 --> 01:28:01,120
reading that is

2082
01:28:01,120 --> 01:28:03,520
under deny it

2083
01:28:03,520 --> 01:28:07,280
changes to plunder root residence time

2084
01:28:07,280 --> 01:28:10,159
attitude the world time change to

2085
01:28:10,159 --> 01:28:13,840
actually residence time accumulated

2086
01:28:13,840 --> 01:28:15,120
division

2087
01:28:15,120 --> 01:28:17,679
change to accumulate the residence time

2088
01:28:17,679 --> 01:28:18,800
iteration

2089
01:28:18,800 --> 01:28:21,040
and the second

2090
01:28:21,040 --> 01:28:23,840
further inaugurator and the scenario

2091
01:28:23,840 --> 01:28:27,719
of partial upgrade

2092
01:28:29,920 --> 01:28:32,159
so for motivations

2093
01:28:32,159 --> 01:28:35,199
of this document is that

2094
01:28:35,199 --> 01:28:38,159
uh deadnet defines the goals of

2095
01:28:38,159 --> 01:28:41,040
deterministic

2096
01:28:41,040 --> 01:28:42,480
the routine

2097
01:28:41,040 --> 01:28:42,480
the

2098
01:28:42,480 --> 01:28:44,880
body that legit packet

2099
01:28:44,880 --> 01:28:46,159
loss ratio

2100
01:28:46,159 --> 01:28:48,560
out of all the neighborhood

2101
01:28:48,560 --> 01:28:51,520
uh use resource reservation explicit

2102
01:28:51,520 --> 01:28:52,639
routine

2103
01:28:52,639 --> 01:28:54,800
under service protection to achieve

2104
01:28:54,800 --> 01:28:58,239
these goals well resource resolution is

2105
01:28:58,239 --> 01:29:00,639
the basis of ensuring bounding the

2106
01:29:00,639 --> 01:29:02,000
deleted

2107
01:29:02,000 --> 01:29:04,639
and ultimately depends on the queue

2108
01:29:04,639 --> 01:29:08,719
mechanism of the floating plane

2109
01:29:09,199 --> 01:29:11,679
the issues of

2110
01:29:11,679 --> 01:29:13,920
candidate mechanisms for large scale

2111
01:29:13,920 --> 01:29:16,800
packet network

2112
01:29:17,199 --> 01:29:20,800
cbs and ats come with a high latency

2113
01:29:20,800 --> 01:29:22,840
values

2114
01:29:22,840 --> 01:29:24,080
because uh

2115
01:29:24,080 --> 01:29:27,840
the minimum latest is not affected by

2116
01:29:27,840 --> 01:29:28,960
the

2117
01:29:28,960 --> 01:29:30,400
this mechanism

2118
01:29:30,400 --> 01:29:33,520
uh seeker is quite challenging

2119
01:29:33,520 --> 01:29:36,440
because it requires time of

2120
01:29:36,440 --> 01:29:38,400
synchronization uh

2121
01:29:38,400 --> 01:29:39,679
anyway the

2122
01:29:39,679 --> 01:29:42,159
maybe some other

2123
01:29:42,159 --> 01:29:45,120
uh seeker for best

2124
01:29:45,120 --> 01:29:46,960
violence

2125
01:29:46,960 --> 01:29:50,080
uh to widen it use the priority based uh

2126
01:29:50,080 --> 01:29:52,000
scheme make it

2127
01:29:52,000 --> 01:29:54,080
but a very generic test

2128
01:29:54,080 --> 01:29:57,199
but with worst case latency

2129
01:29:57,199 --> 01:30:00,320
so this document proposed an enhancement

2130
01:30:00,320 --> 01:30:01,280
scheme

2131
01:30:01,280 --> 01:30:04,320
of people to adaptively adjust

2132
01:30:04,320 --> 01:30:06,400
the sending authority according to the

2133
01:30:06,400 --> 01:30:08,320
planned time and

2134
01:30:08,320 --> 01:30:10,639
uniformly conceived

2135
01:30:10,639 --> 01:30:13,600
bonded delegate

2136
01:30:14,880 --> 01:30:16,560
so this is uh

2137
01:30:16,560 --> 01:30:17,520
uh

2138
01:30:17,520 --> 01:30:22,400
our way of the the total scheme

2139
01:30:22,400 --> 01:30:23,760
uh

2140
01:30:23,760 --> 01:30:27,199
we introduced another mechanism using

2141
01:30:27,199 --> 01:30:30,320
cool that struck here 39 kills uh

2142
01:30:30,320 --> 01:30:32,639
violence of pq and are also based on

2143
01:30:32,639 --> 01:30:34,960
priority scheduling

2144
01:30:34,960 --> 01:30:38,080
world 39 qs has haha tdl

2145
01:30:38,080 --> 01:30:40,639
attributes a staggered follow me on the

2146
01:30:40,639 --> 01:30:42,159
decreasing

2147
01:30:42,159 --> 01:30:44,639
with the positive of the timer i

2148
01:30:44,639 --> 01:30:47,199
uh the third and accuracy 0 has the

2149
01:30:47,199 --> 01:30:50,560
highest priority after the authorization

2150
01:30:50,560 --> 01:30:51,760
time

2151
01:30:51,760 --> 01:30:53,760
for sending it is the tdl will be

2152
01:30:53,760 --> 01:30:57,040
reversed to the maximum initial volume

2153
01:30:57,040 --> 01:30:59,920
the 39q with ctd090 has a normal

2154
01:30:59,920 --> 01:31:02,639
priority if interval mode all

2155
01:31:02,639 --> 01:31:06,080
profibusing probability for anthem mode

2156
01:31:06,080 --> 01:31:08,800
the former can be involved in scheduling

2157
01:31:08,800 --> 01:31:11,040
rather later canada

2158
01:31:11,040 --> 01:31:13,440
the following is a simple example of

2159
01:31:13,440 --> 01:31:18,080
terminology it contains a photonical

2160
01:31:22,159 --> 01:31:24,000
so how to put the package to 2009

2161
01:31:24,000 --> 01:31:26,239
cruiser first

2162
01:31:26,239 --> 01:31:29,600
get the data information of the packet

2163
01:31:29,600 --> 01:31:32,159
many including the planned

2164
01:31:32,159 --> 01:31:35,600
residence time and the accumulated

2165
01:31:35,600 --> 01:31:38,800
residence time of devastation

2166
01:31:38,800 --> 01:31:40,400
this information can be get from a

2167
01:31:40,400 --> 01:31:42,960
pocket itself or figure entry or policy

2168
01:31:42,960 --> 01:31:44,719
entry

2169
01:31:44,719 --> 01:31:46,560
please refer to

2170
01:31:46,560 --> 01:31:47,440
a

2171
01:31:47,440 --> 01:31:50,400
deny option

2172
01:31:50,719 --> 01:31:51,840
in

2173
01:31:51,840 --> 01:31:53,120
six month

2174
01:31:53,120 --> 01:31:54,800
working group

2175
01:31:54,800 --> 01:31:57,280
second put the packet in the specific

2176
01:31:57,280 --> 01:31:59,920
data queue

2177
01:32:00,239 --> 01:32:01,360
we

2178
01:32:01,360 --> 01:32:03,120
need to compute

2179
01:32:03,120 --> 01:32:05,679
the allowable skill in italy

2180
01:32:05,679 --> 01:32:07,679
it is close to

2181
01:32:07,679 --> 01:32:10,239
the planned residence time

2182
01:32:10,239 --> 01:32:11,280
plus

2183
01:32:11,280 --> 01:32:13,520
the accumulated resistance time

2184
01:32:13,520 --> 01:32:17,120
modulation minus the infinite

2185
01:32:17,120 --> 01:32:20,000
forwarding delay

2186
01:32:20,719 --> 01:32:24,159
the falling figure shows that

2187
01:32:25,520 --> 01:32:28,320
two packs is a

2188
01:32:28,320 --> 01:32:32,559
hard product to the technicals

2189
01:32:35,280 --> 01:32:36,080
so

2190
01:32:36,080 --> 01:32:37,920
traffic localization and shipping

2191
01:32:37,920 --> 01:32:41,520
traffic regulation and ui interface to

2192
01:32:41,520 --> 01:32:43,199
ensure that

2193
01:32:43,199 --> 01:32:45,840
the bandwidth consumption or for service

2194
01:32:45,840 --> 01:32:47,040
recent

2195
01:32:47,040 --> 01:32:50,719
capacity interval complies with serious

2196
01:32:50,719 --> 01:32:53,760
traffic specification for example data

2197
01:32:53,760 --> 01:32:55,199
rate

2198
01:32:55,199 --> 01:32:58,320
underneath we should

2199
01:32:58,320 --> 01:33:01,360
do bandwidth management

2200
01:33:01,360 --> 01:33:02,400
for

2201
01:33:02,400 --> 01:33:04,719
multiple sources for unsourced finding

2202
01:33:04,719 --> 01:33:06,960
should meet

2203
01:33:06,960 --> 01:33:08,880
the sum of

2204
01:33:08,880 --> 01:33:11,679
data rate of

2205
01:33:11,679 --> 01:33:14,560
each sales must be less than the

2206
01:33:14,560 --> 01:33:16,320
broadband values

2207
01:33:16,320 --> 01:33:18,800
other social market management

2208
01:33:18,800 --> 01:33:22,480
will be provided in native wishes

2209
01:33:22,480 --> 01:33:24,080
traffic shipping

2210
01:33:24,080 --> 01:33:28,000
is performed on an eye to distribute the

2211
01:33:28,000 --> 01:33:29,600
packets into

2212
01:33:29,600 --> 01:33:32,639
39 kills

2213
01:33:33,600 --> 01:33:36,000
the following figure shoot that six

2214
01:33:36,000 --> 01:33:38,400
packets follow the

2215
01:33:38,400 --> 01:33:41,199
same deterministic service

2216
01:33:41,199 --> 01:33:44,639
are received on the ui port

2217
01:33:44,639 --> 01:33:46,719
assuming that the

2218
01:33:46,719 --> 01:33:49,840
arrival at the outgoing port one by one

2219
01:33:49,840 --> 01:33:50,880
after

2220
01:33:50,880 --> 01:33:53,360
internal the forwarding delay each

2221
01:33:53,360 --> 01:33:56,560
packet we enter the key with the tdl

2222
01:33:56,560 --> 01:33:59,520
value consistent with the alarm

2223
01:33:59,520 --> 01:34:01,280
excluding the delay q

2224
01:34:01,280 --> 01:34:04,000
of the packet that is current

2225
01:34:04,000 --> 01:34:06,239
time

2226
01:34:09,360 --> 01:34:12,480
for punching upgraded scenario

2227
01:34:12,480 --> 01:34:14,960
a detonator person may consist of

2228
01:34:14,960 --> 01:34:16,159
several

2229
01:34:16,159 --> 01:34:19,679
upgraded bottom nodes for example r1 r2

2230
01:34:19,679 --> 01:34:21,520
r3 r4

2231
01:34:21,520 --> 01:34:24,639
and the traditional sp path in the

2232
01:34:24,639 --> 01:34:25,840
domain

2233
01:34:25,840 --> 01:34:29,040
sp path should contain field hopes with

2234
01:34:29,040 --> 01:34:31,600
the worst case latency hope

2235
01:34:31,600 --> 01:34:35,520
given by the paper as the latency

2236
01:34:35,520 --> 01:34:38,239
the legacy device in the sp path does

2237
01:34:38,239 --> 01:34:40,960
not support the deadlines goodness

2238
01:34:40,960 --> 01:34:42,719
and may or not

2239
01:34:42,719 --> 01:34:44,480
mercy and insert

2240
01:34:44,480 --> 01:34:47,600
the data information in the package

2241
01:34:47,600 --> 01:34:50,080
uh the former recorder does not even

2242
01:34:50,080 --> 01:34:52,880
knows and the native according to our

2243
01:34:52,880 --> 01:34:54,480
awareness

2244
01:34:54,480 --> 01:34:57,600
internal mode is similar to sp latency

2245
01:34:57,600 --> 01:35:00,960
however compared with sp the

2246
01:35:00,960 --> 01:35:02,800
borderline consecutive package by

2247
01:35:02,800 --> 01:35:04,960
ternary information other than traffic

2248
01:35:04,960 --> 01:35:06,960
class that means

2249
01:35:06,960 --> 01:35:09,840
our partners will not always experience

2250
01:35:09,840 --> 01:35:12,880
the worst in the failures delay i will

2251
01:35:12,880 --> 01:35:15,840
hope

2252
01:35:22,080 --> 01:35:24,639
the effect of anthem mode is similar to

2253
01:35:24,639 --> 01:35:27,040
seeker for all traffic dumping the

2254
01:35:27,040 --> 01:35:29,280
packet will be delayed and the board in

2255
01:35:29,280 --> 01:35:31,280
order to achieve the

2256
01:35:31,280 --> 01:35:34,080
jitter target

2257
01:35:34,960 --> 01:35:37,840
so what's the benefits for this

2258
01:35:37,840 --> 01:35:38,960
enhanced

2259
01:35:38,960 --> 01:35:40,080
scheme

2260
01:35:40,080 --> 01:35:42,000
of course the timer synchronization is

2261
01:35:42,000 --> 01:35:44,719
another required before networking knows

2262
01:35:44,719 --> 01:35:47,440
i'll operate based on the relative time

2263
01:35:47,440 --> 01:35:50,239
stays the flow all flow aggregate is not

2264
01:35:50,239 --> 01:35:51,440
required

2265
01:35:51,440 --> 01:35:53,679
for deployment a particular multiplexing

2266
01:35:53,679 --> 01:35:56,639
base is an enhancement of pq scheduling

2267
01:35:56,639 --> 01:36:00,800
algorithm easy to upgrade each node

2268
01:36:00,800 --> 01:36:02,719
can independently set authorization

2269
01:36:02,719 --> 01:36:03,679
timer

2270
01:36:03,679 --> 01:36:06,080
of the data locals based on self-port

2271
01:36:06,080 --> 01:36:07,679
bandwidth

2272
01:36:07,679 --> 01:36:10,560
and support partial upgrade for

2273
01:36:10,560 --> 01:36:13,280
scalability a single set of dynamic

2274
01:36:13,280 --> 01:36:15,679
queues support the multiple levels of

2275
01:36:15,679 --> 01:36:17,040
residence time

2276
01:36:17,040 --> 01:36:20,080
kills with a higher max

2277
01:36:20,080 --> 01:36:22,239
maximum material can be created

2278
01:36:22,239 --> 01:36:25,440
incrementally according to services for

2279
01:36:25,440 --> 01:36:26,960
performance

2280
01:36:26,960 --> 01:36:29,040
good achieved control just a single

2281
01:36:29,040 --> 01:36:32,159
authorization time

2282
01:36:33,600 --> 01:36:37,960
any questions on the comments section

2283
01:36:38,960 --> 01:36:40,080
uh

2284
01:36:40,080 --> 01:36:42,159
we're sort of out of time so i know

2285
01:36:42,159 --> 01:36:44,639
torlas is in cuba no wasn't cordless was

2286
01:36:44,639 --> 01:36:46,639
someone in queue and then left

2287
01:36:46,639 --> 01:36:48,560
i bet you left thank you so we really

2288
01:36:48,560 --> 01:36:50,880
don't have time i'd like to discuss this

2289
01:36:50,880 --> 01:36:52,880
more on the list if you can take your

2290
01:36:52,880 --> 01:36:54,639
comment there would appreciate it

2291
01:36:54,639 --> 01:36:57,119
and with that the last person on this

2292
01:36:57,119 --> 01:37:01,400
particular topic is uh

2293
01:37:13,679 --> 01:37:17,560
okay we got one moment

2294
01:37:20,639 --> 01:37:22,560
okay i see the slide

2295
01:37:22,560 --> 01:37:24,800
uh this is fanyang from huawei and i'll

2296
01:37:24,800 --> 01:37:28,880
present this the net enhancement plane

2297
01:37:28,880 --> 01:37:31,520
let's see if i can flip

2298
01:37:31,520 --> 01:37:34,080
yeah uh here's the simple logic that uh

2299
01:37:34,080 --> 01:37:37,199
while we have this uh draft uh first

2300
01:37:37,199 --> 01:37:39,600
according to the net architecture then

2301
01:37:39,600 --> 01:37:42,239
that is required to support bond latency

2302
01:37:42,239 --> 01:37:44,320
and right now we see there are already

2303
01:37:44,320 --> 01:37:47,199
uh several mechanisms proposed in data

2304
01:37:47,199 --> 01:37:49,600
to support the boundary latency so in

2305
01:37:49,600 --> 01:37:50,560
the short

2306
01:37:50,560 --> 01:37:52,800
in the short feature that people

2307
01:37:52,800 --> 01:37:54,800
envision that that net data plan should

2308
01:37:54,800 --> 01:37:58,159
be enhanced to support the latency

2309
01:37:58,159 --> 01:38:00,880
which is which is specific um

2310
01:38:00,880 --> 01:38:03,360
specifically at at the moment the latest

2311
01:38:03,360 --> 01:38:07,440
specific specific metadata

2312
01:38:08,639 --> 01:38:11,119
and to meet the goals of supporting the

2313
01:38:11,119 --> 01:38:14,800
minimal and maximum end-to-end latency

2314
01:38:14,800 --> 01:38:17,520
in date plane in that data plane that uh

2315
01:38:17,520 --> 01:38:20,159
the one that net specific

2316
01:38:20,159 --> 01:38:22,960
uh metadata flow id is used to identify

2317
01:38:22,960 --> 01:38:25,360
the net net flow but however there is a

2318
01:38:25,360 --> 01:38:28,000
there's no other metadata defined to

2319
01:38:28,000 --> 01:38:31,840
support the end to end lattice latency

2320
01:38:31,840 --> 01:38:34,639
so we see there is a missing in the net

2321
01:38:34,639 --> 01:38:35,920
data plane

2322
01:38:35,920 --> 01:38:38,000
and also there are also other

2323
01:38:38,000 --> 01:38:40,159
requirements to then that data plane

2324
01:38:40,159 --> 01:38:42,320
that defined in this

2325
01:38:42,320 --> 01:38:44,880
requirement to the large scale than that

2326
01:38:44,880 --> 01:38:47,920
draft and including the functions the

2327
01:38:47,920 --> 01:38:50,639
functions uh including the explicit

2328
01:38:50,639 --> 01:38:53,119
inclusion of the metadata and also

2329
01:38:53,119 --> 01:38:55,920
compatibility uh to different

2330
01:38:55,920 --> 01:38:58,560
underlying network and network

2331
01:38:58,560 --> 01:39:02,159
technologies etc

2332
01:39:02,560 --> 01:39:05,199
so to meet the goals uh and the

2333
01:39:05,199 --> 01:39:06,639
requirements to

2334
01:39:06,639 --> 01:39:08,880
uh to support the boundary latency that

2335
01:39:08,880 --> 01:39:10,480
there there

2336
01:39:10,480 --> 01:39:13,119
there have been several mechanisms that

2337
01:39:13,119 --> 01:39:15,440
proposed to them that

2338
01:39:15,440 --> 01:39:17,920
to solve this to support the boundary

2339
01:39:17,920 --> 01:39:21,440
latency and we list the mechanisms here

2340
01:39:21,440 --> 01:39:24,400
on the left and um we think that if

2341
01:39:24,400 --> 01:39:27,040
there are more mechanism proposed

2342
01:39:27,040 --> 01:39:29,360
it should be added to this list

2343
01:39:29,360 --> 01:39:32,239
but of course we think that it should be

2344
01:39:32,239 --> 01:39:35,040
accepted acknowledged by uh then that

2345
01:39:35,040 --> 01:39:37,360
first

2346
01:39:38,159 --> 01:39:41,040
so we have in this drafted we propose a

2347
01:39:41,040 --> 01:39:43,440
new net specific metadata which is

2348
01:39:43,440 --> 01:39:46,480
called monthly latency information and

2349
01:39:46,480 --> 01:39:48,560
it is used to

2350
01:39:48,560 --> 01:39:51,679
it is used to be carried in data plane

2351
01:39:51,679 --> 01:39:54,480
to facilitate that that that net transit

2352
01:39:54,480 --> 01:39:56,800
node to support the boundary latency

2353
01:39:56,800 --> 01:40:00,480
transmission and as we as it's shown in

2354
01:40:00,480 --> 01:40:01,280
this

2355
01:40:01,280 --> 01:40:03,440
figure that this bounded latency

2356
01:40:03,440 --> 01:40:05,679
information is transmitted across

2357
01:40:05,679 --> 01:40:08,560
multiple than net transit node and used

2358
01:40:08,560 --> 01:40:12,400
by the deadnet forwarding sub-layer

2359
01:40:13,920 --> 01:40:16,239
and this page discussed the design

2360
01:40:16,239 --> 01:40:17,600
principles

2361
01:40:17,600 --> 01:40:19,840
first we think that

2362
01:40:19,840 --> 01:40:22,080
this bounded latency information should

2363
01:40:22,080 --> 01:40:25,199
be carried in is targeted to be carried

2364
01:40:25,199 --> 01:40:28,080
in the data plane to help the deadline

2365
01:40:28,080 --> 01:40:30,400
flow to map to the forwarding and

2366
01:40:30,400 --> 01:40:33,600
scheduling resources uh which the that

2367
01:40:33,600 --> 01:40:36,400
net flow requires

2368
01:40:36,400 --> 01:40:39,280
this funding latency information doesn't

2369
01:40:39,280 --> 01:40:41,840
focus on the local mechanisms which

2370
01:40:41,840 --> 01:40:43,360
equipment

2371
01:40:43,360 --> 01:40:45,040
equipment uses

2372
01:40:45,040 --> 01:40:47,360
and second we think it we believe it is

2373
01:40:47,360 --> 01:40:50,080
good to have a uniform format to

2374
01:40:50,080 --> 01:40:52,800
accommodate the the different uh

2375
01:40:52,800 --> 01:40:54,080
underlying

2376
01:40:54,080 --> 01:40:56,800
technologies or mechanisms

2377
01:40:56,800 --> 01:40:59,280
there are two reasons for the for it one

2378
01:40:59,280 --> 01:41:00,520
is inter

2379
01:41:00,520 --> 01:41:02,080
interoperability

2380
01:41:02,080 --> 01:41:04,560
um to have different

2381
01:41:04,560 --> 01:41:07,199
to have separate uh format for each uh

2382
01:41:07,199 --> 01:41:11,040
mechanism uh obviously obviously doesn't

2383
01:41:11,040 --> 01:41:13,360
help the interoperability

2384
01:41:13,360 --> 01:41:15,040
and second is this creative

2385
01:41:15,040 --> 01:41:18,800
consideration if there is uh if there is

2386
01:41:18,800 --> 01:41:21,600
an equipment with non-standard algorithm

2387
01:41:21,600 --> 01:41:24,239
inserted into network this boundary

2388
01:41:24,239 --> 01:41:26,719
latency information should help the

2389
01:41:26,719 --> 01:41:28,000
equipment

2390
01:41:28,000 --> 01:41:30,560
either drop the packet or transmit

2391
01:41:30,560 --> 01:41:33,520
without processing the packet

2392
01:41:33,520 --> 01:41:37,280
and uh according to the analysis uh

2393
01:41:37,280 --> 01:41:40,239
to the mechanism that in previous uh

2394
01:41:40,239 --> 01:41:43,360
shown in perez uh previous slide

2395
01:41:43,360 --> 01:41:46,320
and we we

2396
01:41:46,320 --> 01:41:48,159
we classified this boundary latency

2397
01:41:48,159 --> 01:41:50,719
information into two categories

2398
01:41:50,719 --> 01:41:51,760
and

2399
01:41:51,760 --> 01:41:54,159
and they are shown in the in these two

2400
01:41:54,159 --> 01:41:56,000
tables below

2401
01:41:56,000 --> 01:41:56,719
the

2402
01:41:56,719 --> 01:41:58,880
requirement category summarizes the

2403
01:41:58,880 --> 01:42:02,159
requirement from the data services and

2404
01:42:02,159 --> 01:42:05,040
local and the equipment will use this

2405
01:42:05,040 --> 01:42:07,360
requirement information to map to those

2406
01:42:07,360 --> 01:42:09,040
resources

2407
01:42:09,040 --> 01:42:11,600
and the the resource

2408
01:42:11,600 --> 01:42:15,040
resource category actually is is more

2409
01:42:15,040 --> 01:42:16,800
straightforward

2410
01:42:16,800 --> 01:42:19,199
it's more straightforward and indicate

2411
01:42:19,199 --> 01:42:22,960
the local resources directly

2412
01:42:27,440 --> 01:42:29,440
and in this boundary latency information

2413
01:42:29,440 --> 01:42:33,119
data field that we use um bri type to it

2414
01:42:33,119 --> 01:42:35,600
to represent or indicate the type of the

2415
01:42:35,600 --> 01:42:37,760
boundary latency information if there

2416
01:42:37,760 --> 01:42:40,840
are more and if there are there is new

2417
01:42:40,840 --> 01:42:44,239
um algorithm that's accepted by then

2418
01:42:44,239 --> 01:42:45,360
that

2419
01:42:45,360 --> 01:42:47,840
and if the if the boundary license

2420
01:42:47,840 --> 01:42:49,600
information is different from the what

2421
01:42:49,600 --> 01:42:53,040
we have to in the in this table that um

2422
01:42:53,040 --> 01:42:55,440
it will be added as a new about the

2423
01:42:55,440 --> 01:42:57,760
latency information type

2424
01:42:57,760 --> 01:43:00,719
and the format actually it indicates the

2425
01:43:00,719 --> 01:43:02,560
both the format and the lines of the

2426
01:43:02,560 --> 01:43:04,719
body latency information

2427
01:43:04,719 --> 01:43:07,520
and for the flag

2428
01:43:07,520 --> 01:43:09,600
currently we don't have any uh

2429
01:43:09,600 --> 01:43:12,480
definition for this flag it is reserved

2430
01:43:12,480 --> 01:43:15,600
for the food for future study i think

2431
01:43:15,600 --> 01:43:18,080
and about the latest information

2432
01:43:18,080 --> 01:43:19,760
carries the actual

2433
01:43:19,760 --> 01:43:24,360
information used in data plane

2434
01:43:25,360 --> 01:43:28,400
um for app basics based uh then that

2435
01:43:28,400 --> 01:43:31,760
data playing that we define a new ipv6

2436
01:43:31,760 --> 01:43:34,719
extension header option called vra

2437
01:43:34,719 --> 01:43:35,760
option

2438
01:43:35,760 --> 01:43:38,960
and this bri option can be encapsulated

2439
01:43:38,960 --> 01:43:41,679
in either ibra6 however help or the oh

2440
01:43:41,679 --> 01:43:43,440
extended header

2441
01:43:43,440 --> 01:43:46,639
depending on the processing uh behavior

2442
01:43:46,639 --> 01:43:49,440
and we uh the there could be more than

2443
01:43:49,440 --> 01:43:52,080
one monthly latest information appear in

2444
01:43:52,080 --> 01:43:55,360
one bri option

2445
01:43:57,280 --> 01:43:59,920
so similar to acquire 6 based that net

2446
01:43:59,920 --> 01:44:02,800
data plane that in npr's based that net

2447
01:44:02,800 --> 01:44:05,600
data plane a new nprc extension header

2448
01:44:05,600 --> 01:44:07,760
called the bri extension header is

2449
01:44:07,760 --> 01:44:10,719
defined and the the processing uh

2450
01:44:10,719 --> 01:44:13,520
behavior and how to use it is very

2451
01:44:13,520 --> 01:44:14,639
similar to

2452
01:44:14,639 --> 01:44:19,560
to the to the processing in ipv6

2453
01:44:20,639 --> 01:44:22,960
and also this bri information can

2454
01:44:22,960 --> 01:44:26,719
encapsulate it in nps over udpip based

2455
01:44:26,719 --> 01:44:29,760
then that data plane

2456
01:44:31,520 --> 01:44:34,239
and next step we would like to have more

2457
01:44:34,239 --> 01:44:37,199
discussions on this on this bri data

2458
01:44:37,199 --> 01:44:38,080
field

2459
01:44:38,080 --> 01:44:40,000
and we want to

2460
01:44:40,000 --> 01:44:41,760
hear the comments and stencils from

2461
01:44:41,760 --> 01:44:45,040
working group thank you

2462
01:44:45,360 --> 01:44:46,400
greg

2463
01:44:46,400 --> 01:44:47,920
and i'll note there's a bunch of people

2464
01:44:47,920 --> 01:44:51,840
behind you so try not to go on too long

2465
01:44:55,600 --> 01:44:57,040
all right

2466
01:44:57,040 --> 01:44:59,920
um what's the benefit of having

2467
01:44:59,920 --> 01:45:04,159
this bli information both as hub by hop

2468
01:45:04,159 --> 01:45:06,320
and end to end

2469
01:45:06,320 --> 01:45:09,679
option in ipv6

2470
01:45:10,800 --> 01:45:13,760
yeah actually if you look at the

2471
01:45:13,760 --> 01:45:14,560
um

2472
01:45:14,560 --> 01:45:17,920
the yeah the detailed design

2473
01:45:17,920 --> 01:45:21,280
definition about the bri type and we

2474
01:45:21,280 --> 01:45:22,239
have the

2475
01:45:22,239 --> 01:45:23,840
different types of the

2476
01:45:23,840 --> 01:45:26,960
uh we have different types of the bri uh

2477
01:45:26,960 --> 01:45:29,520
body latency information uh some of

2478
01:45:29,520 --> 01:45:33,280
these uh some of this type can

2479
01:45:33,280 --> 01:45:35,440
is

2480
01:45:35,600 --> 01:45:37,520
and some of them

2481
01:45:37,520 --> 01:45:38,880
some of them

2482
01:45:38,880 --> 01:45:40,719
some of the bri

2483
01:45:40,719 --> 01:45:43,199
from bli

2484
01:45:43,199 --> 01:45:44,320
is used

2485
01:45:44,320 --> 01:45:45,520
um

2486
01:45:45,520 --> 01:45:47,760
is used in the hobby help

2487
01:45:47,760 --> 01:45:50,000
scenario and some of them actually can

2488
01:45:50,000 --> 01:45:54,159
be used by uh can be can be processed

2489
01:45:54,159 --> 01:45:55,280
by the

2490
01:45:55,280 --> 01:45:58,400
the destination node so that key

2491
01:45:58,400 --> 01:45:59,360
so

2492
01:45:59,360 --> 01:46:01,920
in in that's in that case it is better

2493
01:46:01,920 --> 01:46:04,000
to be placed in the ho ho in the

2494
01:46:04,000 --> 01:46:07,679
destination option header

2495
01:46:07,679 --> 01:46:09,360
yes and it's like

2496
01:46:09,360 --> 01:46:11,199
what happens if

2497
01:46:11,199 --> 01:46:12,960
a particular

2498
01:46:12,960 --> 01:46:14,400
uh hub

2499
01:46:14,400 --> 01:46:18,400
uh spends more time than it's allowed

2500
01:46:18,400 --> 01:46:20,560
back it gets dropped

2501
01:46:20,560 --> 01:46:22,880
the response go to the list that's a

2502
01:46:22,880 --> 01:46:24,400
good question i'm interested in the

2503
01:46:24,400 --> 01:46:25,760
answer too but you have a few people

2504
01:46:25,760 --> 01:46:28,239
behind you running out of time

2505
01:46:28,239 --> 01:46:31,760
uh so uh fan did you hear the question

2506
01:46:31,760 --> 01:46:33,679
yeah yeah yeah yeah

2507
01:46:33,679 --> 01:46:36,159
we can get it to the list yeah all right

2508
01:46:36,159 --> 01:46:39,159
daniel

2509
01:46:42,719 --> 01:46:44,719
the benefits to

2510
01:46:44,719 --> 01:46:47,040
carries and the delay budgets in the

2511
01:46:47,040 --> 01:46:48,639
discipline

2512
01:46:48,639 --> 01:46:49,520
when

2513
01:46:49,520 --> 01:46:51,920
actually the transit node

2514
01:46:51,920 --> 01:46:53,760
makes a forwarding and routing decision

2515
01:46:53,760 --> 01:46:56,960
based on specific resource type or

2516
01:46:56,960 --> 01:46:58,159
and

2517
01:46:58,159 --> 01:47:01,199
the the specific uh mechanism such as

2518
01:47:01,199 --> 01:47:02,159
the

2519
01:47:02,159 --> 01:47:04,320
equivalent types

2520
01:47:04,320 --> 01:47:06,960
what what is what is the benefit to to

2521
01:47:06,960 --> 01:47:08,480
take this kind of energy and the

2522
01:47:08,480 --> 01:47:12,799
requirements that the bond needs to say

2523
01:47:13,920 --> 01:47:15,840
i'm not sure i could quite catch the

2524
01:47:15,840 --> 01:47:17,600
question but

2525
01:47:17,600 --> 01:47:20,000
here that we define a

2526
01:47:20,000 --> 01:47:22,960
format and this format can be placed in

2527
01:47:22,960 --> 01:47:26,719
in hobby hub or or at the end uh doh so

2528
01:47:26,719 --> 01:47:30,080
this information can be um can be played

2529
01:47:30,080 --> 01:47:31,119
um

2530
01:47:31,119 --> 01:47:32,880
can be processed

2531
01:47:32,880 --> 01:47:35,360
either by help either either hope i

2532
01:47:35,360 --> 01:47:37,760
or at the end destination

2533
01:47:37,760 --> 01:47:38,719
um

2534
01:47:38,719 --> 01:47:40,159
so

2535
01:47:40,159 --> 01:47:42,960
so it depends on the on the algorithm

2536
01:47:42,960 --> 01:47:44,000
that

2537
01:47:44,000 --> 01:47:46,159
other requirements uh from of the

2538
01:47:46,159 --> 01:47:48,480
algorithms

2539
01:47:48,480 --> 01:47:50,480
i'm not sure i quite catch the question

2540
01:47:50,480 --> 01:47:53,119
but maybe you can uh come back to list

2541
01:47:53,119 --> 01:47:55,679
for more discussion here i'm i'm not

2542
01:47:55,679 --> 01:47:58,560
sure the the i answered it

2543
01:47:58,560 --> 01:47:59,760
okay

2544
01:47:59,760 --> 01:48:02,159
i post the questions

2545
01:48:02,159 --> 01:48:05,280
okay thank you okay thank you and um

2546
01:48:05,280 --> 01:48:07,199
before robin asks this question i'm

2547
01:48:07,199 --> 01:48:09,920
going to put up a show start a show of

2548
01:48:09,920 --> 01:48:10,880
hands

2549
01:48:10,880 --> 01:48:13,199
i i put in the chat that this was coming

2550
01:48:13,199 --> 01:48:14,960
basically we should keep in mind that

2551
01:48:14,960 --> 01:48:18,560
our new milestone is is to get a uh a

2552
01:48:18,560 --> 01:48:21,360
requirements document adopted

2553
01:48:21,360 --> 01:48:23,440
so with that in mind i'm gonna start

2554
01:48:23,440 --> 01:48:25,520
this show of hands while uh robin

2555
01:48:25,520 --> 01:48:28,800
continues uh asking questions on

2556
01:48:28,800 --> 01:48:31,600
uh this the same draft so

2557
01:48:31,600 --> 01:48:33,840
this this is uh

2558
01:48:33,840 --> 01:48:35,920
the question is independent of what's

2559
01:48:35,920 --> 01:48:37,600
being presented right now it's on the

2560
01:48:37,600 --> 01:48:38,960
requirements draft that was actually

2561
01:48:38,960 --> 01:48:40,239
presented at the last meeting and

2562
01:48:40,239 --> 01:48:42,320
referenced earlier today so thank you

2563
01:48:42,320 --> 01:48:44,320
robin go ahead

2564
01:48:44,320 --> 01:48:47,320
okay

2565
01:48:55,119 --> 01:48:57,520
hello we think you have an audio problem

2566
01:48:57,520 --> 01:48:58,639
group

2567
01:48:58,639 --> 01:49:02,080
go ahead maybe a little bit louder

2568
01:49:02,080 --> 01:49:04,000
if you hear him fan if you could just

2569
01:49:04,000 --> 01:49:05,360
reproduce

2570
01:49:05,360 --> 01:49:06,800
repeat the question

2571
01:49:06,800 --> 01:49:09,840
uh because we can't

2572
01:49:12,840 --> 01:49:17,520
hear okay so dhruv go ahead please

2573
01:49:17,520 --> 01:49:19,360
uh while robin is coming let me ask a

2574
01:49:19,360 --> 01:49:20,880
quick question my question is maybe to

2575
01:49:20,880 --> 01:49:23,360
the working group and the chairs also we

2576
01:49:23,360 --> 01:49:25,840
have uh two documents from that net on

2577
01:49:25,840 --> 01:49:29,599
pc agenda and we had uh the documents on

2578
01:49:29,599 --> 01:49:30,800
enhanced

2579
01:49:30,800 --> 01:49:33,760
net in spring as well as in bgp

2580
01:49:33,760 --> 01:49:37,199
so idr so wanted to i think from this

2581
01:49:37,199 --> 01:49:38,639
meeting i realized that this is very

2582
01:49:38,639 --> 01:49:40,719
early work i think you guys are still

2583
01:49:40,719 --> 01:49:43,040
sorting things out uh

2584
01:49:43,040 --> 01:49:45,119
but just so that other working groups

2585
01:49:45,119 --> 01:49:47,520
can catch on if clear requirements can

2586
01:49:47,520 --> 01:49:48,480
come in

2587
01:49:48,480 --> 01:49:50,000
while you guys are developing that from

2588
01:49:50,000 --> 01:49:51,440
the protocols

2589
01:49:51,440 --> 01:49:53,119
uh what are the clear requirements that

2590
01:49:53,119 --> 01:49:54,800
you would have and the terminology

2591
01:49:54,800 --> 01:49:56,320
because right now we were seeing that

2592
01:49:56,320 --> 01:49:58,639
even the terms used in the documents

2593
01:49:58,639 --> 01:50:00,159
were very very different and it was a

2594
01:50:00,159 --> 01:50:01,520
little difficult

2595
01:50:01,520 --> 01:50:03,599
uh to fill things out so just a request

2596
01:50:03,599 --> 01:50:06,080
for the working group uh uh think about

2597
01:50:06,080 --> 01:50:08,159
that as well uh when you are developing

2598
01:50:08,159 --> 01:50:09,199
this

2599
01:50:09,199 --> 01:50:11,199
thank you

2600
01:50:11,199 --> 01:50:12,960
so i think you're saying you really want

2601
01:50:12,960 --> 01:50:14,639
this requirements document that we're

2602
01:50:14,639 --> 01:50:15,840
talking about

2603
01:50:15,840 --> 01:50:18,560
uh at the moment with the the poll

2604
01:50:18,560 --> 01:50:21,199
so you really want to exactly already uh

2605
01:50:21,199 --> 01:50:23,440
complete and include a terminology

2606
01:50:23,440 --> 01:50:25,599
section that we use across our our

2607
01:50:25,599 --> 01:50:28,320
solutions is that correct crew

2608
01:50:28,320 --> 01:50:29,760
thank you thanks for raising it much

2609
01:50:29,760 --> 01:50:30,880
better

2610
01:50:30,880 --> 01:50:32,719
no no i'm just making sure i i heard you

2611
01:50:32,719 --> 01:50:36,239
correctly so um

2612
01:50:36,239 --> 01:50:39,360
we have uh like

2613
01:50:39,360 --> 01:50:41,840
the numbers if i look at them we have uh

2614
01:50:41,840 --> 01:50:44,800
67 who are on meet echo

2615
01:50:44,800 --> 01:50:47,199
uh we have participation which is a

2616
01:50:47,199 --> 01:50:49,040
little better than half and we have

2617
01:50:49,040 --> 01:50:51,520
about half who've read the document so

2618
01:50:51,520 --> 01:50:53,520
you know we we clearly

2619
01:50:53,520 --> 01:50:55,119
need uh

2620
01:50:55,119 --> 01:50:56,480
uh

2621
01:50:56,480 --> 01:50:59,440
people to take a look at this document

2622
01:50:59,440 --> 01:51:02,400
if you have authored one of the proposed

2623
01:51:02,400 --> 01:51:04,800
solutions take a look to see if your

2624
01:51:04,800 --> 01:51:06,560
solution fits into

2625
01:51:06,560 --> 01:51:09,040
the requirements that and i think drew

2626
01:51:09,040 --> 01:51:11,119
brought up a great point about language

2627
01:51:11,119 --> 01:51:13,199
about terminology see if the terms you

2628
01:51:13,199 --> 01:51:15,119
want to use are in the document and

2629
01:51:15,119 --> 01:51:16,960
start sending comments to the list we

2630
01:51:16,960 --> 01:51:18,400
really would like to

2631
01:51:18,400 --> 01:51:20,320
mature the requirements document to the

2632
01:51:20,320 --> 01:51:22,719
point where we can uh

2633
01:51:22,719 --> 01:51:24,400
accept it as a working group document

2634
01:51:24,400 --> 01:51:26,239
hopefully even before the next meeting

2635
01:51:26,239 --> 01:51:27,520
we had hoped to do it before this

2636
01:51:27,520 --> 01:51:29,520
meeting the iesg took a little longer to

2637
01:51:29,520 --> 01:51:31,679
give us a new charter but we have that

2638
01:51:31,679 --> 01:51:33,840
now and we really want to start moving

2639
01:51:33,840 --> 01:51:36,320
out uh get the requirements in there and

2640
01:51:36,320 --> 01:51:38,320
then start getting some of the uh the

2641
01:51:38,320 --> 01:51:41,920
solutions there um with that uh robin

2642
01:51:41,920 --> 01:51:45,040
are you still are you able to

2643
01:51:45,040 --> 01:51:46,719
see he's okay now

2644
01:51:46,719 --> 01:51:48,560
he's

2645
01:51:48,560 --> 01:51:49,440
okay

2646
01:51:49,440 --> 01:51:52,239
sorry uh in fact either quick comments

2647
01:51:52,239 --> 01:51:54,639
uh jamming from huawei in fact in my

2648
01:51:54,639 --> 01:51:58,239
opinion we should not expose the q

2649
01:51:58,239 --> 01:52:00,560
implementation information

2650
01:52:00,560 --> 01:52:03,760
in the network layer and the ip layer so

2651
01:52:03,760 --> 01:52:06,560
based on this thinking we think we need

2652
01:52:06,560 --> 01:52:09,280
the requirement information or some this

2653
01:52:09,280 --> 01:52:12,800
the resource id to indicate the

2654
01:52:12,800 --> 01:52:16,159
specific process for each node that's my

2655
01:52:16,159 --> 01:52:18,320
comment

2656
01:52:18,320 --> 01:52:20,880
okay thank you very much

2657
01:52:20,880 --> 01:52:22,800
and with that we're actually switching

2658
01:52:22,800 --> 01:52:24,639
topics

2659
01:52:24,639 --> 01:52:28,080
and i believe it's carlos

2660
01:52:28,080 --> 01:52:29,840
and carlos you're going to squeeze down

2661
01:52:29,840 --> 01:52:32,800
to eight minutes sorry

2662
01:52:35,360 --> 01:52:37,040
no problem thanks i probably will be

2663
01:52:37,040 --> 01:52:38,880
even faster

2664
01:52:38,880 --> 01:52:40,880
so i encountered another preset in uh

2665
01:52:40,880 --> 01:52:42,480
draft on behalf of

2666
01:52:42,480 --> 01:52:45,840
my quarters allen would have myself

2667
01:52:45,840 --> 01:52:48,480
next please

2668
01:52:50,560 --> 01:52:52,560
basically well they are here and we

2669
01:52:52,560 --> 01:52:56,239
already have a presentation in

2670
01:52:56,480 --> 01:52:58,719
still showing the uh yeah i have no idea

2671
01:52:58,719 --> 01:53:01,440
how to get rid of it

2672
01:53:02,800 --> 01:53:04,320
no i did it already

2673
01:53:04,320 --> 01:53:07,119
i did the dismiss

2674
01:53:11,280 --> 01:53:13,560
uh already that's a good idea

2675
01:53:13,560 --> 01:53:16,719
[Laughter]

2676
01:53:16,719 --> 01:53:20,679
if you know how to get rid of the poles

2677
01:53:21,280 --> 01:53:24,358
[Music]

2678
01:53:26,960 --> 01:53:29,280
okay

2679
01:53:30,080 --> 01:53:31,679
so thank you

2680
01:53:31,679 --> 01:53:34,560
so the idea here is that uh we have been

2681
01:53:34,560 --> 01:53:37,360
dead in that role mostly even though the

2682
01:53:37,360 --> 01:53:39,520
architecture and the service model

2683
01:53:39,520 --> 01:53:41,679
supports multi-domain we have been more

2684
01:53:41,679 --> 01:53:43,440
or less focused on single domain aspects

2685
01:53:43,440 --> 01:53:45,520
so we don't have any explicit discussion

2686
01:53:45,520 --> 01:53:47,520
on multi-domain

2687
01:53:47,520 --> 01:53:49,520
here we i'm just copying the the service

2688
01:53:49,520 --> 01:53:52,320
model diagram from the rc so the idea is

2689
01:53:52,320 --> 01:53:55,280
to basically try to

2690
01:53:55,280 --> 01:53:58,159
study and analyze what could be needed

2691
01:53:58,159 --> 01:54:00,400
to be done to support multi-domain

2692
01:54:00,400 --> 01:54:02,320
that's the idea to identify potential

2693
01:54:02,320 --> 01:54:04,880
gaps and if there are gaps

2694
01:54:04,880 --> 01:54:06,639
then discuss whether we need to do some

2695
01:54:06,639 --> 01:54:08,080
additional work in the working group or

2696
01:54:08,080 --> 01:54:10,880
not this discussion started at the raw

2697
01:54:10,880 --> 01:54:14,080
and then in an interim we basically

2698
01:54:14,080 --> 01:54:15,280
we thought

2699
01:54:15,280 --> 01:54:18,239
i got the the request or the suggestion

2700
01:54:18,239 --> 01:54:20,239
to move the discussion to attend it as

2701
01:54:20,239 --> 01:54:22,719
this belongs more to the net

2702
01:54:22,719 --> 01:54:26,400
discussion this next slide

2703
01:54:28,880 --> 01:54:32,159
next slide i'm sorry

2704
01:54:32,159 --> 01:54:33,440
so there are different scenarios where

2705
01:54:33,440 --> 01:54:35,520
we need to have multi-domain support

2706
01:54:35,520 --> 01:54:37,360
where we have for example one host

2707
01:54:37,360 --> 01:54:38,880
connected to a domain that is connected

2708
01:54:38,880 --> 01:54:40,800
to a different administrative domain

2709
01:54:40,800 --> 01:54:43,760
and uh there is another uh host there

2710
01:54:43,760 --> 01:54:45,920
there may be i mean i in the draft we

2711
01:54:45,920 --> 01:54:48,320
list some use cases potentially that

2712
01:54:48,320 --> 01:54:50,719
where we where this may happen

2713
01:54:50,719 --> 01:54:52,480
one important qualification is that by

2714
01:54:52,480 --> 01:54:55,679
domain we need administrative domain and

2715
01:54:55,679 --> 01:54:58,000
or technology domain so we may have a

2716
01:54:58,000 --> 01:55:00,000
wire domain connected to a wireless

2717
01:55:00,000 --> 01:55:02,719
domain and this is also multi-domain

2718
01:55:02,719 --> 01:55:05,119
even if those two domains belong or are

2719
01:55:05,119 --> 01:55:06,400
managed by the same administrative

2720
01:55:06,400 --> 01:55:07,360
domain

2721
01:55:07,360 --> 01:55:09,360
so as i mentioned the goal is to explore

2722
01:55:09,360 --> 01:55:10,800
what are the potential gaps in the

2723
01:55:10,800 --> 01:55:13,040
architecture or mechanisms control plane

2724
01:55:13,040 --> 01:55:15,760
data plane and then if

2725
01:55:15,760 --> 01:55:17,599
there are to identify potential

2726
01:55:17,599 --> 01:55:19,679
solutions next slide please

2727
01:55:19,679 --> 01:55:21,840
so the the draft is very simple at this

2728
01:55:21,840 --> 01:55:24,639
point we basically try to identify some

2729
01:55:24,639 --> 01:55:26,960
very high level things where we need to

2730
01:55:26,960 --> 01:55:29,360
take a look from the application

2731
01:55:29,360 --> 01:55:32,159
control and network planes so an

2732
01:55:32,159 --> 01:55:33,840
application plane and then that document

2733
01:55:33,840 --> 01:55:35,440
we have this user area which is the

2734
01:55:35,440 --> 01:55:36,960
application the entity that is

2735
01:55:36,960 --> 01:55:39,040
interacting with the the user

2736
01:55:39,040 --> 01:55:40,960
and the operator and performing the

2737
01:55:40,960 --> 01:55:43,920
net uh the request for the net services

2738
01:55:43,920 --> 01:55:45,360
and if we consider a multi-domain

2739
01:55:45,360 --> 01:55:48,159
deployment that user agent may be aware

2740
01:55:48,159 --> 01:55:50,320
or unaware that there is multiple

2741
01:55:50,320 --> 01:55:52,880
domains if it's a word that could take

2742
01:55:52,880 --> 01:55:54,000
care of

2743
01:55:54,000 --> 01:55:55,280
the negotiation of the different

2744
01:55:55,280 --> 01:55:56,719
services to the each of the different

2745
01:55:56,719 --> 01:55:58,960
domains but if he's unaware of the

2746
01:55:58,960 --> 01:56:00,159
monthly domain

2747
01:56:00,159 --> 01:56:00,960
then

2748
01:56:00,960 --> 01:56:03,280
we will have to rely on the network to

2749
01:56:03,280 --> 01:56:05,760
transparently take care of this

2750
01:56:05,760 --> 01:56:08,480
next slide please

2751
01:56:09,840 --> 01:56:11,679
can you have a good question it's just a

2752
01:56:11,679 --> 01:56:13,520
very simple one multi-domain is within a

2753
01:56:13,520 --> 01:56:16,159
single enterprise or or between multiple

2754
01:56:16,159 --> 01:56:18,080
enterprises

2755
01:56:18,080 --> 01:56:20,000
that's a very big that's a very big

2756
01:56:20,000 --> 01:56:21,119
issue

2757
01:56:21,119 --> 01:56:23,119
which one are you just focusing on this

2758
01:56:23,119 --> 01:56:25,119
single enterprise multi-domain or

2759
01:56:25,119 --> 01:56:27,119
multi-domain in general multiple

2760
01:56:27,119 --> 01:56:29,520
enterprises both are in a scope at this

2761
01:56:29,520 --> 01:56:32,480
point but is to be discussed i mean yeah

2762
01:56:32,480 --> 01:56:33,520
there are different problems different

2763
01:56:33,520 --> 01:56:35,199
complexity here is the accident defining

2764
01:56:35,199 --> 01:56:38,080
gaps not going into the solution

2765
01:56:38,080 --> 01:56:40,639
so then we have the control plane which

2766
01:56:40,639 --> 01:56:41,920
is according to the definition in the

2767
01:56:41,920 --> 01:56:43,280
document the aggregation the control

2768
01:56:43,280 --> 01:56:44,960
matching planes and we have the cpf the

2769
01:56:44,960 --> 01:56:47,440
control and plane function

2770
01:56:47,440 --> 01:56:49,840
and at that level again if we consider a

2771
01:56:49,840 --> 01:56:52,400
multi-domain environment or deployment

2772
01:56:52,400 --> 01:56:54,480
the cpfc in a different domain may need

2773
01:56:54,480 --> 01:56:56,560
to interact for example to discover an

2774
01:56:56,560 --> 01:56:58,560
authentication negotiate

2775
01:56:58,560 --> 01:57:00,080
and depending on the application on the

2776
01:57:00,080 --> 01:57:01,679
multi-support

2777
01:57:01,679 --> 01:57:03,520
multi-domain support by the application

2778
01:57:03,520 --> 01:57:05,119
layer we may need to do different things

2779
01:57:05,119 --> 01:57:07,440
at the control controller plane again

2780
01:57:07,440 --> 01:57:08,719
very high level but these are the type

2781
01:57:08,719 --> 01:57:11,360
of things that we need to get into

2782
01:57:11,360 --> 01:57:13,679
an additional row may be

2783
01:57:13,679 --> 01:57:16,000
may maybe bring in additional gaps

2784
01:57:16,000 --> 01:57:17,520
that's also the discussion we are having

2785
01:57:17,520 --> 01:57:19,679
in rowing the different uh draft

2786
01:57:19,679 --> 01:57:22,000
regarding to the pce

2787
01:57:22,000 --> 01:57:23,599
coordination that may be required as

2788
01:57:23,599 --> 01:57:25,599
well in a multi-domain environment next

2789
01:57:25,599 --> 01:57:27,440
slide

2790
01:57:27,440 --> 01:57:29,119
and again the same type of high-level

2791
01:57:29,119 --> 01:57:31,280
analysis on the network data plane in a

2792
01:57:31,280 --> 01:57:33,360
multi-domain environment nodes belonging

2793
01:57:33,360 --> 01:57:35,199
to different planes may have to exchange

2794
01:57:35,199 --> 01:57:36,800
information

2795
01:57:36,800 --> 01:57:38,320
and there may be potential need for

2796
01:57:38,320 --> 01:57:40,639
protocol translation or abstractions a

2797
01:57:40,639 --> 01:57:42,320
different domain might not be using or

2798
01:57:42,320 --> 01:57:44,080
offering the same capabilities because

2799
01:57:44,080 --> 01:57:45,040
they are for example different

2800
01:57:45,040 --> 01:57:46,480
technologies

2801
01:57:46,480 --> 01:57:48,639
and the same thing oem protocols may

2802
01:57:48,639 --> 01:57:50,400
also need to be extended to

2803
01:57:50,400 --> 01:57:52,320
support multi-domain operation as

2804
01:57:52,320 --> 01:57:53,760
another example

2805
01:57:53,760 --> 01:57:55,199
performing pre-offer period across

2806
01:57:55,199 --> 01:57:57,440
multiple domains may also pose

2807
01:57:57,440 --> 01:57:59,360
additional challenges that's the

2808
01:57:59,360 --> 01:58:00,560
knowledge

2809
01:58:00,560 --> 01:58:01,840
of the different domains may not be

2810
01:58:01,840 --> 01:58:03,280
available at the

2811
01:58:03,280 --> 01:58:04,400
one domain

2812
01:58:04,400 --> 01:58:06,159
and the data planes may be also

2813
01:58:06,159 --> 01:58:08,159
different or very different capabilities

2814
01:58:08,159 --> 01:58:10,800
and the last last slide please

2815
01:58:10,800 --> 01:58:13,679
so again here the the idea is to

2816
01:58:13,679 --> 01:58:15,679
present this problem initial work very

2817
01:58:15,679 --> 01:58:17,840
initial work there are some gaps high

2818
01:58:17,840 --> 01:58:21,119
level gaps identifier identified

2819
01:58:21,119 --> 01:58:24,080
and uh to discuss or to get your

2820
01:58:24,080 --> 01:58:25,679
feedback on whether this is something

2821
01:58:25,679 --> 01:58:28,080
interesting to work in the working group

2822
01:58:28,080 --> 01:58:29,760
and if so please

2823
01:58:29,760 --> 01:58:32,159
join us in the mailing list and offline

2824
01:58:32,159 --> 01:58:34,960
we will be happy to take more people on

2825
01:58:34,960 --> 01:58:37,199
board

2826
01:58:37,520 --> 01:58:39,679
oh god that's loud rick taylor uh

2827
01:58:39,679 --> 01:58:42,159
speaking of my raw chair hat on we would

2828
01:58:42,159 --> 01:58:44,639
like this work to begin in debt net so

2829
01:58:44,639 --> 01:58:46,719
if it's we'd like the the resolution to

2830
01:58:46,719 --> 01:58:48,800
start at that net and then raw to build

2831
01:58:48,800 --> 01:58:51,520
on whatever happens in debit

2832
01:58:51,520 --> 01:58:53,840
but personally i support this

2833
01:58:53,840 --> 01:58:56,159
thanks

2834
01:58:57,760 --> 01:58:59,920
the

2835
01:59:00,239 --> 01:59:02,480
there is a multi-domain

2836
01:59:02,480 --> 01:59:04,400
coordination needed

2837
01:59:04,400 --> 01:59:05,360
but

2838
01:59:05,360 --> 01:59:08,639
based on my experience dealing

2839
01:59:08,639 --> 01:59:11,520
with the enterprises and then

2840
01:59:11,520 --> 01:59:13,440
some multi-domain coordination that we

2841
01:59:13,440 --> 01:59:16,320
have from the internet

2842
01:59:16,320 --> 01:59:17,119
i

2843
01:59:17,119 --> 01:59:18,719
would like this

2844
01:59:18,719 --> 01:59:20,719
work to be focused

2845
01:59:20,719 --> 01:59:21,440
for

2846
01:59:21,440 --> 01:59:23,520
intra enterprise

2847
01:59:23,520 --> 01:59:25,599
for a single

2848
01:59:25,599 --> 01:59:27,520
let's say

2849
01:59:27,520 --> 01:59:28,400
overall

2850
01:59:28,400 --> 01:59:30,000
administrative domain and they can have

2851
01:59:30,000 --> 01:59:32,560
multiple sub-domains because i believe

2852
01:59:32,560 --> 01:59:34,719
this work would get them too much too

2853
01:59:34,719 --> 01:59:36,159
diluted

2854
01:59:36,159 --> 01:59:38,480
and uh by keeping precise for the

2855
01:59:38,480 --> 01:59:39,760
enterprise because

2856
01:59:39,760 --> 01:59:40,480
the

2857
01:59:40,480 --> 01:59:42,639
the that net use cases are

2858
01:59:42,639 --> 01:59:44,880
very much applied for intra enterprise

2859
01:59:44,880 --> 01:59:47,440
network so that would be supporting this

2860
01:59:47,440 --> 01:59:49,360
work that will likely

2861
01:59:49,360 --> 01:59:53,119
focus for within a single enterprise

2862
01:59:54,719 --> 01:59:55,760
yeah so

2863
01:59:55,760 --> 01:59:57,920
maybe split it halfway so i think we'll

2864
01:59:57,920 --> 02:00:01,119
only have one round of you know

2865
02:00:01,119 --> 02:00:03,679
improving forwarding planes so um you

2866
02:00:03,679 --> 02:00:04,480
know

2867
02:00:04,480 --> 02:00:06,400
we have options that don't require it

2868
02:00:06,400 --> 02:00:08,719
but hopefully we'll get to one option

2869
02:00:08,719 --> 02:00:10,560
and then it would be good which takes

2870
02:00:10,560 --> 02:00:12,719
longer right but which would be good to

2871
02:00:12,719 --> 02:00:14,800
be sure that we know all the candidates

2872
02:00:14,800 --> 02:00:16,639
of what needs to be in the data packet

2873
02:00:16,639 --> 02:00:19,360
header even if maybe we don't know all

2874
02:00:19,360 --> 02:00:21,280
the interdomain stuff but we feel very

2875
02:00:21,280 --> 02:00:23,119
strongly that some you know forwarding

2876
02:00:23,119 --> 02:00:25,360
plane stuff is required there so and

2877
02:00:25,360 --> 02:00:27,360
then the whole solution i would agree

2878
02:00:27,360 --> 02:00:30,400
kind of uh build it later okay

2879
02:00:30,400 --> 02:00:32,320
uh

2880
02:00:32,320 --> 02:00:34,880
doorless are you saying you wanna have a

2881
02:00:34,880 --> 02:00:37,440
wider scope or more narrow scope i was

2882
02:00:37,440 --> 02:00:39,119
trying to say it halfway right so i'm

2883
02:00:39,119 --> 02:00:42,320
saying well i mean

2884
02:00:43,280 --> 02:00:44,080
well

2885
02:00:44,080 --> 02:00:45,440
what did it

2886
02:00:45,440 --> 02:00:49,199
have the cake and eat it too so

2887
02:00:49,760 --> 02:00:50,639
no

2888
02:00:50,639 --> 02:00:53,599
no wait a second so so very short term i

2889
02:00:53,599 --> 02:00:56,159
think no forwarding plane header changes

2890
02:00:56,159 --> 02:00:58,159
then we have one option i think for each

2891
02:00:58,159 --> 02:00:59,520
of the forwarding planes to come up with

2892
02:00:59,520 --> 02:01:02,320
a great new header right and either we

2893
02:01:02,320 --> 02:01:04,320
figure out we make it extensible

2894
02:01:04,320 --> 02:01:06,320
or we're safe that we don't need to

2895
02:01:06,320 --> 02:01:09,520
extend that header for for example inter

2896
02:01:09,520 --> 02:01:11,599
domain case right so if if the

2897
02:01:11,599 --> 02:01:13,840
parameters we need for intel domain we

2898
02:01:13,840 --> 02:01:15,360
also feel safely we need them intra

2899
02:01:15,360 --> 02:01:17,040
domain we don't have a problem

2900
02:01:17,040 --> 02:01:18,719
if we feel there are parameters we need

2901
02:01:18,719 --> 02:01:20,159
for interdomain we're not sure about

2902
02:01:20,159 --> 02:01:22,000
them we'll have a problem if it's just

2903
02:01:22,000 --> 02:01:24,560
control plane we can push it out

2904
02:01:24,560 --> 02:01:26,080
all right so thank you for the comment

2905
02:01:26,080 --> 02:01:30,639
work no we're actually uh out of uh time

2906
02:01:30,639 --> 02:01:32,800
um i was in queue so i'll make the

2907
02:01:32,800 --> 02:01:34,800
comment it's actually a chair comment

2908
02:01:34,800 --> 02:01:36,560
i'll point out that you brought up

2909
02:01:36,560 --> 02:01:39,040
controller plane changes

2910
02:01:39,040 --> 02:01:41,040
the controller plane document is still

2911
02:01:41,040 --> 02:01:43,119
an active working group document there

2912
02:01:43,119 --> 02:01:45,599
is no reason why you cannot suggest text

2913
02:01:45,599 --> 02:01:46,960
about multi-domain that should be

2914
02:01:46,960 --> 02:01:48,400
included in the controller claim

2915
02:01:48,400 --> 02:01:50,560
document immediately

2916
02:01:50,560 --> 02:01:53,040
so please don't wait don't you don't

2917
02:01:53,040 --> 02:01:55,280
have to you know worry about adoption of

2918
02:01:55,280 --> 02:01:56,719
your document just take text that's

2919
02:01:56,719 --> 02:01:59,040
appropriate and suggest to the list that

2920
02:01:59,040 --> 02:02:01,440
it be incorporated in the open working

2921
02:02:01,440 --> 02:02:03,119
group document so

2922
02:02:03,119 --> 02:02:04,320
thank you for the topic really

2923
02:02:04,320 --> 02:02:05,440
appreciate it

2924
02:02:05,440 --> 02:02:07,599
uh thank you all for a really good

2925
02:02:07,599 --> 02:02:09,040
session and we appreciate all the

2926
02:02:09,040 --> 02:02:11,119
contribution and look forward to seeing

2927
02:02:11,119 --> 02:02:13,920
you all uh virtually or physically in

2928
02:02:13,920 --> 02:02:17,119
the uh next meeting and a special thanks

2929
02:02:17,119 --> 02:02:21,159
to all who participated remotely

2930
02:02:35,599 --> 02:02:38,760
you should

2931
02:02:46,560 --> 02:02:49,560
yes

