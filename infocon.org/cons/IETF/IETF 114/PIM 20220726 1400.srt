1
00:00:04,880 --> 00:00:09,000
oh i know i'm gonna have to do it anyway

2
00:00:34,480 --> 00:00:37,480
okay

3
00:01:01,530 --> 00:01:04,718
[Music]

4
00:01:11,040 --> 00:01:13,439
you made it i did and i think i finally

5
00:01:13,439 --> 00:01:14,880
figured out all this uh good to see you

6
00:01:14,880 --> 00:01:17,280
by the way yeah it's um

7
00:01:17,280 --> 00:01:19,280
i think i finally figured it out yes i

8
00:01:19,280 --> 00:01:21,920
know gary got a lot of issues yesterday

9
00:01:21,920 --> 00:01:23,759
so i know we're not supposed to sign

10
00:01:23,759 --> 00:01:26,960
into this that's what i wanted to

11
00:01:28,720 --> 00:01:30,720
so i'm um and i hope i have enough

12
00:01:30,720 --> 00:01:32,320
battery because i forgot my power cord

13
00:01:32,320 --> 00:01:35,119
but i'm sharing slides from here yeah

14
00:01:35,119 --> 00:01:37,680
and um

15
00:01:39,600 --> 00:01:41,759
and that's i i think it should work but

16
00:01:41,759 --> 00:01:43,439
i won't be able to see like who's in

17
00:01:43,439 --> 00:01:44,720
queue and all that i'm trying to sign in

18
00:01:44,720 --> 00:01:48,399
on this computer so i can't see it

19
00:01:49,360 --> 00:01:53,000
yeah that would be great

20
00:02:16,959 --> 00:02:20,239
yeah i'm sorry i sent you this email

21
00:02:20,239 --> 00:02:23,200
you know i overlooked

22
00:02:31,680 --> 00:02:33,360
oh yeah i just did it just a few few

23
00:02:33,360 --> 00:02:35,440
minutes ago yeah so i think yeah we

24
00:02:35,440 --> 00:02:37,840
should be good

25
00:02:42,879 --> 00:02:45,599
yeah but i think nate's discussion maybe

26
00:02:45,599 --> 00:02:47,840
could be lengthy yeah i mean it's great

27
00:02:47,840 --> 00:02:50,640
having so much time

28
00:02:52,080 --> 00:02:54,000
so we may want to do his

29
00:02:54,000 --> 00:02:55,280
his was already towards the end but it

30
00:02:55,280 --> 00:02:58,800
may be best to have at the very end

31
00:02:58,800 --> 00:03:00,800
um just because brian hi haberman wanted

32
00:03:00,800 --> 00:03:02,239
to be a part of it and he's got a

33
00:03:02,239 --> 00:03:05,840
conflict so anyway

34
00:03:06,480 --> 00:03:09,440
yeah we should be right there

35
00:03:09,440 --> 00:03:10,800
okay

36
00:03:10,800 --> 00:03:14,200
oh here we go

37
00:03:21,840 --> 00:03:25,360
yeah okay um

38
00:03:25,599 --> 00:03:26,879
yeah

39
00:03:26,879 --> 00:03:28,159
um

40
00:03:28,159 --> 00:03:29,599
i can't get onto the internet let's

41
00:03:29,599 --> 00:03:31,760
continue so we have to run the slides on

42
00:03:31,760 --> 00:03:33,599
this one right that's because that's

43
00:03:33,599 --> 00:03:35,200
what's this display

44
00:03:35,200 --> 00:03:36,640
it's from here

45
00:03:36,640 --> 00:03:37,519
yeah

46
00:03:37,519 --> 00:03:38,400
okay

47
00:03:38,400 --> 00:03:40,720
this is just a separate i'm trying to

48
00:03:40,720 --> 00:03:42,239
get my this one worked but the slides

49
00:03:42,239 --> 00:03:43,760
are coming from here

50
00:03:43,760 --> 00:03:46,480
and that one's nothing and you just

51
00:03:46,480 --> 00:03:48,640
maybe you can sign into media media echo

52
00:03:48,640 --> 00:03:50,480
on your computer so we can see who's in

53
00:03:50,480 --> 00:03:52,560
the queue and stuff yeah we can see can

54
00:03:52,560 --> 00:03:54,400
you see it there oh okay okay perfect

55
00:03:54,400 --> 00:03:56,080
okay

56
00:03:56,080 --> 00:03:58,480
uh yeah otherwise should we remind

57
00:03:58,480 --> 00:04:01,040
people to

58
00:04:02,910 --> 00:04:05,990
[Music]

59
00:04:12,080 --> 00:04:14,959
welcome everyone to to pim

60
00:04:14,959 --> 00:04:18,320
at itf 114 um

61
00:04:18,320 --> 00:04:21,199
this is the second physical meeting uh

62
00:04:21,199 --> 00:04:24,160
it's my first or our our first in a

63
00:04:24,160 --> 00:04:26,639
while so it's exciting to

64
00:04:26,639 --> 00:04:29,919
have a physical meeting here um

65
00:04:29,919 --> 00:04:31,919
but uh yeah i think maybe most of the

66
00:04:31,919 --> 00:04:34,560
participants are remote though and uh

67
00:04:34,560 --> 00:04:37,040
thanks thanks for joining us

68
00:04:37,040 --> 00:04:38,880
a couple of things

69
00:04:38,880 --> 00:04:41,440
to remind people um

70
00:04:41,440 --> 00:04:44,240
you should scan the qr code over there

71
00:04:44,240 --> 00:04:45,120
or

72
00:04:45,120 --> 00:04:47,360
there's also one by the entrance that's

73
00:04:47,360 --> 00:04:48,960
for the blue sheets

74
00:04:48,960 --> 00:04:50,960
or if you don't want to scan that just

75
00:04:50,960 --> 00:04:53,440
go to meet echo and um

76
00:04:53,440 --> 00:04:54,960
and basically

77
00:04:54,960 --> 00:04:57,280
registers sign in so that you're in the

78
00:04:57,280 --> 00:04:59,199
queue because then you will be part of

79
00:04:59,199 --> 00:05:01,440
the blue sheets

80
00:05:01,440 --> 00:05:03,520
uh we've also been asked to remind

81
00:05:03,520 --> 00:05:05,440
everyone to wear masks but it looks like

82
00:05:05,440 --> 00:05:07,440
everyone is doing great here so thanks

83
00:05:07,440 --> 00:05:09,520
for that

84
00:05:09,520 --> 00:05:11,840
um

85
00:05:12,160 --> 00:05:12,960
um

86
00:05:12,960 --> 00:05:14,160
yeah

87
00:05:14,160 --> 00:05:15,600
i think there was some possible

88
00:05:15,600 --> 00:05:18,479
exception for chairs but as long as you

89
00:05:18,479 --> 00:05:20,320
can hear us okay i guess we're happy to

90
00:05:20,320 --> 00:05:22,479
wear our masks

91
00:05:22,479 --> 00:05:25,840
uh so yeah let's start with um

92
00:05:25,840 --> 00:05:28,800
with a status update

93
00:05:28,800 --> 00:05:29,600
sorry

94
00:05:29,600 --> 00:05:31,759
are you taking notes with me

95
00:05:31,759 --> 00:05:32,720
um

96
00:05:32,720 --> 00:05:34,720
actually i can't take this okay okay

97
00:05:34,720 --> 00:05:35,680
okay

98
00:05:35,680 --> 00:05:37,199
okay

99
00:05:37,199 --> 00:05:39,680
all right so here's the note well so you

100
00:05:39,680 --> 00:05:42,160
should know this by now um

101
00:05:42,160 --> 00:05:44,639
it's more or less how the itf works and

102
00:05:44,639 --> 00:05:46,560
um

103
00:05:46,560 --> 00:05:48,479
and yeah it's something everyone should

104
00:05:48,479 --> 00:05:49,360
know

105
00:05:49,360 --> 00:05:50,479
next slide

106
00:05:50,479 --> 00:05:54,080
this is the agenda um

107
00:05:54,080 --> 00:05:57,680
any concerns about the agenda

108
00:05:57,680 --> 00:05:59,039
look okay

109
00:05:59,039 --> 00:05:59,840
um

110
00:05:59,840 --> 00:06:05,000
it's a very short agenda this time um

111
00:06:06,000 --> 00:06:09,120
right right yeah okay so we yeah we may

112
00:06:09,120 --> 00:06:12,319
arrange uh rearrange a little bit um

113
00:06:12,319 --> 00:06:13,440
um

114
00:06:13,440 --> 00:06:14,240
like

115
00:06:14,240 --> 00:06:17,120
brian is is not here yet so he will be a

116
00:06:17,120 --> 00:06:19,280
little late so he might push that to

117
00:06:19,280 --> 00:06:21,600
later but yeah we'll we'll see how that

118
00:06:21,600 --> 00:06:23,360
goes

119
00:06:23,360 --> 00:06:25,680
okay

120
00:06:25,759 --> 00:06:27,360
yeah i should have that here

121
00:06:27,360 --> 00:06:29,600
all right so this is the the working

122
00:06:29,600 --> 00:06:31,680
group status um

123
00:06:31,680 --> 00:06:33,919
so we have a pym young model that is

124
00:06:33,919 --> 00:06:36,080
still in rfc editors queue

125
00:06:36,080 --> 00:06:37,840
i think last night jf i was kind of

126
00:06:37,840 --> 00:06:39,280
optimistic thinking it would be

127
00:06:39,280 --> 00:06:41,120
published soon but

128
00:06:41,120 --> 00:06:42,639
i think it's still waiting for

129
00:06:42,639 --> 00:06:45,680
references uh for other documents

130
00:06:45,680 --> 00:06:47,520
it's a whole bunch of young models that

131
00:06:47,520 --> 00:06:49,599
probably will be published at the same

132
00:06:49,599 --> 00:06:50,479
time

133
00:06:50,479 --> 00:06:52,960
just because of all the references

134
00:06:52,960 --> 00:06:54,400
hey stake

135
00:06:54,400 --> 00:06:55,599
yeah hi

136
00:06:55,599 --> 00:06:57,120
i i just checked on that because the

137
00:06:57,120 --> 00:07:01,840
ospf yang models in that situation too

138
00:07:01,840 --> 00:07:04,400
and the the the the redo of the bfd

139
00:07:04,400 --> 00:07:06,479
model is going to go into off 48 and

140
00:07:06,479 --> 00:07:07,759
mahesh

141
00:07:07,759 --> 00:07:08,720
uh

142
00:07:08,720 --> 00:07:10,240
jay it says he's going to push that

143
00:07:10,240 --> 00:07:12,800
through as quickly as possible

144
00:07:12,800 --> 00:07:13,919
okay

145
00:07:13,919 --> 00:07:16,000
yeah and and and then once that's

146
00:07:16,000 --> 00:07:18,000
published then that that is the

147
00:07:18,000 --> 00:07:20,000
reference we're all waiting for is the

148
00:07:20,000 --> 00:07:21,199
rfc

149
00:07:21,199 --> 00:07:22,880
forgive me if i get the number wrong

150
00:07:22,880 --> 00:07:24,720
9127

151
00:07:24,720 --> 00:07:28,720
biz which is fixing the uh the the bfd

152
00:07:28,720 --> 00:07:32,240
configuration parameters so

153
00:07:32,240 --> 00:07:34,479
you can either specify the parameters

154
00:07:34,479 --> 00:07:36,560
within the protocol when you do it or

155
00:07:36,560 --> 00:07:38,319
you can specify them externally because

156
00:07:38,319 --> 00:07:40,479
bit different vendors do different ways

157
00:07:40,479 --> 00:07:41,840
okay hopefully it didn't take too much

158
00:07:41,840 --> 00:07:42,720
time

159
00:07:42,720 --> 00:07:44,560
okay yeah

160
00:07:44,560 --> 00:07:46,319
okay great thanks

161
00:07:46,319 --> 00:07:48,080
yeah so at least yeah it's taking a

162
00:07:48,080 --> 00:07:50,560
while but it's it it it's in the queue

163
00:07:50,560 --> 00:07:53,120
it will be published

164
00:07:53,120 --> 00:07:55,440
yeah i mean not too long time and it

165
00:07:55,440 --> 00:07:57,120
sounds like yeah

166
00:07:57,120 --> 00:07:59,120
okay great

167
00:07:59,120 --> 00:08:00,400
thanks

168
00:08:00,400 --> 00:08:01,599
um

169
00:08:01,599 --> 00:08:04,720
we also got the igmp mld extension draft

170
00:08:04,720 --> 00:08:06,160
that is in the

171
00:08:06,160 --> 00:08:09,039
ufc editors queue um

172
00:08:09,039 --> 00:08:11,680
it actually is in like auth 48 now so it

173
00:08:11,680 --> 00:08:13,919
should be published in um

174
00:08:13,919 --> 00:08:16,960
in a few days i think

175
00:08:17,680 --> 00:08:19,280
then they got the

176
00:08:19,280 --> 00:08:22,879
dr drafts the improvement and backup dr

177
00:08:22,879 --> 00:08:24,160
um

178
00:08:24,160 --> 00:08:26,879
we need to do work some work on those

179
00:08:26,879 --> 00:08:28,560
okay

180
00:08:28,560 --> 00:08:29,599
yeah

181
00:08:29,599 --> 00:08:32,559
from cisco so yes both of these drafts

182
00:08:32,559 --> 00:08:35,039
we will be working before next ietf

183
00:08:35,039 --> 00:08:37,360
because the second draft which is iitf

184
00:08:37,360 --> 00:08:38,559
bdr

185
00:08:38,559 --> 00:08:40,880
so some of the sdkdr behavior that has

186
00:08:40,880 --> 00:08:43,599
been already implemented and deployed so

187
00:08:43,599 --> 00:08:46,399
we will have update by next ietf okay

188
00:08:46,399 --> 00:08:47,920
okay thanks but yeah just some

189
00:08:47,920 --> 00:08:50,640
background so basically

190
00:08:50,640 --> 00:08:51,519
um

191
00:08:51,519 --> 00:08:54,240
both these drafts talk about dr behavior

192
00:08:54,240 --> 00:08:55,040
and

193
00:08:55,040 --> 00:08:58,640
one common thing is like backup dr

194
00:08:58,640 --> 00:08:59,920
and um

195
00:08:59,920 --> 00:09:01,600
as a working group we need to find out

196
00:09:01,600 --> 00:09:03,920
do we need both these solutions or do we

197
00:09:03,920 --> 00:09:05,839
want to pick a solution i think that's

198
00:09:05,839 --> 00:09:07,360
like the main

199
00:09:07,360 --> 00:09:11,279
the main concern we have um

200
00:09:11,279 --> 00:09:13,200
so

201
00:09:13,200 --> 00:09:15,279
yeah and as sandy has mentioned many

202
00:09:15,279 --> 00:09:17,360
times one draft is

203
00:09:17,360 --> 00:09:19,360
focused on explicit signaling and one is

204
00:09:19,360 --> 00:09:21,040
not so um

205
00:09:21,040 --> 00:09:23,200
so far we as a working group have

206
00:09:23,200 --> 00:09:25,279
adopted both we think there's

207
00:09:25,279 --> 00:09:26,560
reasonable

208
00:09:26,560 --> 00:09:29,360
reason to have both solutions but

209
00:09:29,360 --> 00:09:30,720
as far as you and i are concerned i

210
00:09:30,720 --> 00:09:33,040
guess we just let the authors

211
00:09:33,040 --> 00:09:35,760
drive drive their drafts because we we

212
00:09:35,760 --> 00:09:38,720
yeah we need we need the offers to uh to

213
00:09:38,720 --> 00:09:41,760
push this a bit more and we also want

214
00:09:41,760 --> 00:09:44,480
all of you to please uh read the drafts

215
00:09:44,480 --> 00:09:45,200
and

216
00:09:45,200 --> 00:09:47,519
share your thoughts and

217
00:09:47,519 --> 00:09:49,440
yeah we we need your help to figure out

218
00:09:49,440 --> 00:09:51,760
what is the best thing to do here

219
00:09:51,760 --> 00:09:53,920
will it be more to two solutions or not

220
00:09:53,920 --> 00:09:56,720
which one is best or yeah

221
00:09:56,720 --> 00:09:59,040
it's a very simple concept in a way i'm

222
00:09:59,040 --> 00:10:01,600
sure everyone here knows what the dr is

223
00:10:01,600 --> 00:10:02,959
and it's kind of

224
00:10:02,959 --> 00:10:05,680
important to to solve this and we don't

225
00:10:05,680 --> 00:10:08,560
have a document which is almost i mean

226
00:10:08,560 --> 00:10:10,000
it's almost strange they don't have a

227
00:10:10,000 --> 00:10:11,920
good solution for this after so many

228
00:10:11,920 --> 00:10:13,200
years with pim

229
00:10:13,200 --> 00:10:14,399
so um

230
00:10:14,399 --> 00:10:16,720
yeah it's something we should solve and

231
00:10:16,720 --> 00:10:18,720
it's a kind of fun or interesting

232
00:10:18,720 --> 00:10:20,959
problem

233
00:10:20,959 --> 00:10:23,440
all right okay um

234
00:10:23,440 --> 00:10:26,160
we also got the igmp mlb proxy young

235
00:10:26,160 --> 00:10:28,160
model but this in

236
00:10:28,160 --> 00:10:30,880
yeah we requested publication

237
00:10:30,880 --> 00:10:32,640
and you actually got a couple more two

238
00:10:32,640 --> 00:10:34,640
we got like the normal register packing

239
00:10:34,640 --> 00:10:36,480
and a surf packing

240
00:10:36,480 --> 00:10:38,560
but we also requested publication for us

241
00:10:38,560 --> 00:10:40,320
so we

242
00:10:40,320 --> 00:10:44,320
yeah we yeah we have several drafts um

243
00:10:44,320 --> 00:10:45,519
coming up or

244
00:10:45,519 --> 00:10:48,800
yeah hopefully published sometime

245
00:10:48,800 --> 00:10:50,000
i know

246
00:10:50,000 --> 00:10:51,040
we'll see

247
00:10:51,040 --> 00:10:53,120
at least you're in the queue

248
00:10:53,120 --> 00:10:55,920
sorry next yes

249
00:10:55,920 --> 00:10:59,839
okay um then we have um

250
00:10:59,839 --> 00:11:02,320
sr point to point multi point to

251
00:11:02,320 --> 00:11:04,399
multipoint policy that we're not

252
00:11:04,399 --> 00:11:07,200
discussing this time um

253
00:11:07,200 --> 00:11:10,320
we'll have some update later on the um

254
00:11:10,320 --> 00:11:14,560
igp v3 mldb2 biz

255
00:11:14,560 --> 00:11:18,079
basically revised signals because

256
00:11:18,079 --> 00:11:19,519
overseas

257
00:11:19,519 --> 00:11:21,120
so yeah yeah

258
00:11:21,120 --> 00:11:22,800
sorry

259
00:11:22,800 --> 00:11:23,839
nokia

260
00:11:23,839 --> 00:11:26,160
i think there was a email to the working

261
00:11:26,160 --> 00:11:29,440
group asking for last call on the

262
00:11:29,440 --> 00:11:32,160
point to multi-point policy okay

263
00:11:32,160 --> 00:11:34,240
okay that's why we didn't bring it up

264
00:11:34,240 --> 00:11:36,880
okay okay thank you okay sorry about

265
00:11:36,880 --> 00:11:38,880
that um

266
00:11:38,880 --> 00:11:40,880
um

267
00:11:40,880 --> 00:11:43,680
yeah so we should uh see how many people

268
00:11:43,680 --> 00:11:46,319
have read it

269
00:11:46,720 --> 00:11:49,760
yeah let's do it let's do it now yeah uh

270
00:11:49,760 --> 00:11:51,120
okay so for the

271
00:11:51,120 --> 00:11:54,320
point to multi-point policy

272
00:11:54,320 --> 00:11:57,120
how many people have read the draft

273
00:11:57,120 --> 00:11:58,800
um

274
00:11:58,800 --> 00:12:01,120
yeah i guess it's okay we got remote

275
00:12:01,120 --> 00:12:03,760
attendees as well um

276
00:12:03,760 --> 00:12:05,440
i guess the main question is really do

277
00:12:05,440 --> 00:12:07,600
you think it's ready for working group

278
00:12:07,600 --> 00:12:09,200
last call or do you think there are any

279
00:12:09,200 --> 00:12:10,399
issues

280
00:12:10,399 --> 00:12:13,760
i think we need to do apollo meet echo

281
00:12:13,760 --> 00:12:14,639
check

282
00:12:14,639 --> 00:12:16,639
yeah but i can't because

283
00:12:16,639 --> 00:12:18,240
okay

284
00:12:18,240 --> 00:12:22,079
yeah and of course i'm not prepared

285
00:12:22,079 --> 00:12:25,839
um we can we can pull the room first

286
00:12:25,839 --> 00:12:28,000
maybe i know it's not fair to do that

287
00:12:28,000 --> 00:12:29,680
first

288
00:12:29,680 --> 00:12:31,600
send it to the left yeah

289
00:12:31,600 --> 00:12:34,160
okay let's let's do that um

290
00:12:34,160 --> 00:12:37,600
maybe after the the first presentation

291
00:12:37,600 --> 00:12:40,079
then i'll be signed in and ready to do

292
00:12:40,079 --> 00:12:42,800
the poll yeah okay so i'll do a little

293
00:12:42,800 --> 00:12:46,240
poll and ask you guys about this um

294
00:12:46,240 --> 00:12:48,480
10-15 minutes or something um

295
00:12:48,480 --> 00:12:50,000
[Music]

296
00:12:50,000 --> 00:12:51,120
all right

297
00:12:51,120 --> 00:12:52,399
then you have the

298
00:12:52,399 --> 00:12:53,440
lisp

299
00:12:53,440 --> 00:12:55,040
extensions

300
00:12:55,040 --> 00:12:57,360
nothing has happened with that for

301
00:12:57,360 --> 00:12:59,440
the last itf and nothing decides you

302
00:12:59,440 --> 00:13:01,120
have um

303
00:13:01,120 --> 00:13:03,920
so the offers need to do better i'm

304
00:13:03,920 --> 00:13:05,279
saying that because i'm one of the

305
00:13:05,279 --> 00:13:07,040
offers

306
00:13:07,040 --> 00:13:10,320
we'll do an update on that

307
00:13:10,320 --> 00:13:12,240
soon

308
00:13:12,240 --> 00:13:14,160
got the point to point

309
00:13:14,160 --> 00:13:17,519
point to multi-point policy ping

310
00:13:17,519 --> 00:13:19,440
um

311
00:13:19,440 --> 00:13:23,120
do you have any comment on that or

312
00:13:24,639 --> 00:13:26,880
uh yeah last time

313
00:13:26,880 --> 00:13:30,079
we went to the mpls group asking for

314
00:13:30,079 --> 00:13:32,399
some comments i haven't got back any

315
00:13:32,399 --> 00:13:34,160
feedback yet

316
00:13:34,160 --> 00:13:36,160
so i need to follow up on that

317
00:13:36,160 --> 00:13:37,760
but i think the only thing that is left

318
00:13:37,760 --> 00:13:39,120
there is

319
00:13:39,120 --> 00:13:42,399
getting a sub tlv

320
00:13:42,399 --> 00:13:46,160
assignment from ina okay

321
00:13:46,160 --> 00:13:48,480
if there's another comment from mpls

322
00:13:48,480 --> 00:13:50,560
group then maybe we can do a last call

323
00:13:50,560 --> 00:13:52,720
on it

324
00:13:52,720 --> 00:13:54,560
so i'll i'll put something together for

325
00:13:54,560 --> 00:13:55,680
the next

326
00:13:55,680 --> 00:13:57,360
uh itf meeting

327
00:13:57,360 --> 00:14:00,480
yeah okay great thanks

328
00:14:00,959 --> 00:14:03,199
uh and the last draft they have is the

329
00:14:03,199 --> 00:14:05,199
mri ferrari

330
00:14:05,199 --> 00:14:06,240
um

331
00:14:06,240 --> 00:14:08,880
i like to call it tilfa but

332
00:14:08,880 --> 00:14:10,320
anyway um

333
00:14:10,320 --> 00:14:12,079
that just got adopted

334
00:14:12,079 --> 00:14:14,240
um so

335
00:14:14,240 --> 00:14:16,720
that's great we did the adoption call

336
00:14:16,720 --> 00:14:18,639
just a few weeks back and it was good

337
00:14:18,639 --> 00:14:20,079
support

338
00:14:20,079 --> 00:14:21,199
so

339
00:14:21,199 --> 00:14:23,360
but yeah it's not been no actually we do

340
00:14:23,360 --> 00:14:25,199
have a presentation for that yeah

341
00:14:25,199 --> 00:14:27,920
shortly yeah okay yeah so that's that's

342
00:14:27,920 --> 00:14:29,440
the status

343
00:14:29,440 --> 00:14:31,199
um

344
00:14:31,199 --> 00:14:33,519
i guess we can move to the move to the

345
00:14:33,519 --> 00:14:35,920
first agenda

346
00:14:35,920 --> 00:14:37,690
item do you see um

347
00:14:37,690 --> 00:14:40,240
[Music]

348
00:14:40,240 --> 00:14:41,680
oh yeah these songs

349
00:14:41,680 --> 00:14:45,399
that's good okay

350
00:14:46,720 --> 00:14:47,680
uh

351
00:14:47,680 --> 00:14:50,720
by the way uh hc yes you are in the

352
00:14:50,720 --> 00:14:53,279
queue here but you probably

353
00:14:53,279 --> 00:14:54,639
just

354
00:14:54,639 --> 00:14:56,959
stay there from before right yeah okay

355
00:14:56,959 --> 00:15:00,000
yeah all right okay yeah your song we

356
00:15:00,000 --> 00:15:01,519
are ready for

357
00:15:01,519 --> 00:15:04,320
for your presentation here

358
00:15:04,320 --> 00:15:05,839
yeah yeah

359
00:15:05,839 --> 00:15:07,519
yeah here we go okay

360
00:15:07,519 --> 00:15:10,760
thank you

361
00:15:17,680 --> 00:15:19,519
okay hello everyone

362
00:15:19,519 --> 00:15:23,120
uh i'm isung liu from channel mobile and

363
00:15:23,120 --> 00:15:27,120
today i will present the mlfr based on

364
00:15:27,120 --> 00:15:28,399
tfa

365
00:15:28,399 --> 00:15:31,519
it was just adopted last week

366
00:15:31,519 --> 00:15:34,560
and i'll give some brave introduction

367
00:15:34,560 --> 00:15:35,759
and update

368
00:15:35,759 --> 00:15:36,959
information

369
00:15:36,959 --> 00:15:40,599
next time please

370
00:15:43,199 --> 00:15:46,320
okay uh this is a briefing introduction

371
00:15:46,320 --> 00:15:48,639
and uh as we all know

372
00:15:48,639 --> 00:15:50,880
uh for the rfc

373
00:15:50,880 --> 00:15:53,040
7431

374
00:15:53,040 --> 00:15:56,240
we have the pmmfr mechanism

375
00:15:56,240 --> 00:15:57,600
to uh

376
00:15:57,600 --> 00:16:01,040
protect the the pin

377
00:16:01,040 --> 00:16:02,399
and

378
00:16:02,399 --> 00:16:04,160
for this job we

379
00:16:04,160 --> 00:16:07,440
provide a new mechanism by using the

380
00:16:07,440 --> 00:16:09,560
trfa for the

381
00:16:09,560 --> 00:16:11,440
pmmr

382
00:16:11,440 --> 00:16:14,480
with no additional extension of pim

383
00:16:14,480 --> 00:16:15,600
protocol

384
00:16:15,600 --> 00:16:18,639
and we will just update the detail of

385
00:16:18,639 --> 00:16:22,079
the restrictions of the pmfr based on

386
00:16:22,079 --> 00:16:25,600
the rfa and the remote rfa

387
00:16:25,600 --> 00:16:28,880
and the next slide please

388
00:16:34,000 --> 00:16:39,120
and for the rfa to the mlfr uh

389
00:16:39,120 --> 00:16:42,560
the team can establish the backup tree

390
00:16:42,560 --> 00:16:45,040
according to the normal uh protocol

391
00:16:45,040 --> 00:16:49,040
procedure of the rfc 7761

392
00:16:49,040 --> 00:16:50,399
and it can

393
00:16:50,399 --> 00:16:53,279
send the drone home by hope to

394
00:16:53,279 --> 00:16:55,279
establish the tree

395
00:16:55,279 --> 00:16:58,240
and next slide please

396
00:17:02,560 --> 00:17:04,480
after the i'm of arrow based on the

397
00:17:04,480 --> 00:17:06,079
remote of a

398
00:17:06,079 --> 00:17:06,880
and

399
00:17:06,880 --> 00:17:10,640
the pim joint can carries the rpf vector

400
00:17:10,640 --> 00:17:12,400
of the type 0

401
00:17:12,400 --> 00:17:14,400
joint attribute

402
00:17:14,400 --> 00:17:15,359
to

403
00:17:15,359 --> 00:17:17,599
take the pq node

404
00:17:17,599 --> 00:17:21,760
and the picon the pico node uh

405
00:17:22,000 --> 00:17:23,520
like the picture

406
00:17:23,520 --> 00:17:26,559
in the r3 we can uh

407
00:17:26,559 --> 00:17:28,880
establish the first part of the backup

408
00:17:28,880 --> 00:17:33,200
tree till the r3 and the second part of

409
00:17:33,200 --> 00:17:38,160
the backup tree from the r3 to the

410
00:17:38,160 --> 00:17:40,880
original multicast source

411
00:17:40,880 --> 00:17:44,360
next piece

412
00:17:47,120 --> 00:17:50,160
uh for the restrictions of the mfr based

413
00:17:50,160 --> 00:17:52,160
on the rve and

414
00:17:52,160 --> 00:17:55,200
the remote fa because the

415
00:17:55,200 --> 00:17:58,480
rfa and the remote rfa algorithm

416
00:17:58,480 --> 00:17:59,360
or

417
00:17:59,360 --> 00:18:00,400
topology

418
00:18:00,400 --> 00:18:02,160
dependent

419
00:18:02,160 --> 00:18:05,360
so the m of r based on the error a or

420
00:18:05,360 --> 00:18:09,039
remote f a cannot cover all of the

421
00:18:09,039 --> 00:18:12,320
network environments

422
00:18:12,799 --> 00:18:14,960
for the example in the picture

423
00:18:14,960 --> 00:18:16,000
uh

424
00:18:16,000 --> 00:18:18,720
uh the if there are six then the pim

425
00:18:18,720 --> 00:18:20,480
joint to uh

426
00:18:20,480 --> 00:18:22,400
be to establish the

427
00:18:22,400 --> 00:18:25,600
backup tree it will uh

428
00:18:25,600 --> 00:18:29,039
uh send the package directly to the r5

429
00:18:29,039 --> 00:18:31,520
and our file will will forward it back

430
00:18:31,520 --> 00:18:36,000
to the r6 and it cannot uh to establish

431
00:18:36,000 --> 00:18:37,120
the tree

432
00:18:37,120 --> 00:18:38,799
and

433
00:18:38,799 --> 00:18:43,280
we if you if we use the remote fa-based

434
00:18:43,280 --> 00:18:46,720
mlfr and the p-space and the q-space do

435
00:18:46,720 --> 00:18:49,120
not overlap

436
00:18:49,120 --> 00:18:51,280
so

437
00:18:51,440 --> 00:18:53,039
if we

438
00:18:53,039 --> 00:18:56,480
if we use if we use the r4

439
00:18:56,480 --> 00:18:58,080
as the

440
00:18:58,080 --> 00:18:59,679
rpm

441
00:18:59,679 --> 00:19:02,799
vector of the type 0

442
00:19:02,799 --> 00:19:05,039
joint attribute

443
00:19:05,039 --> 00:19:06,480
one

444
00:19:06,480 --> 00:19:09,200
the packet

445
00:19:09,200 --> 00:19:10,799
forward to the

446
00:19:10,799 --> 00:19:15,760
r4 r4 will forward it to back to the r5

447
00:19:15,760 --> 00:19:16,559
so

448
00:19:16,559 --> 00:19:19,200
it cannot establish the backup tree

449
00:19:19,200 --> 00:19:20,799
either

450
00:19:20,799 --> 00:19:24,280
next time please

451
00:19:27,440 --> 00:19:30,799
so for the unit cost uh we can

452
00:19:30,799 --> 00:19:35,039
use the trfa to get

453
00:19:35,160 --> 00:19:39,120
stereotypically a 100 percent

454
00:19:39,120 --> 00:19:41,039
cardboard uh

455
00:19:41,039 --> 00:19:42,640
and

456
00:19:42,640 --> 00:19:46,000
network of protection

457
00:19:46,000 --> 00:19:46,880
the

458
00:19:46,880 --> 00:19:48,880
alternate parts

459
00:19:48,880 --> 00:19:51,679
provided by the tfa

460
00:19:51,679 --> 00:19:53,600
for the

461
00:19:53,600 --> 00:19:55,280
segment

462
00:19:55,280 --> 00:19:58,639
repair list

463
00:19:58,799 --> 00:20:01,360
it is including the

464
00:20:01,360 --> 00:20:05,520
node seed and the agencies

465
00:20:05,520 --> 00:20:08,480
the next slide please

466
00:20:09,520 --> 00:20:12,000
so for the pmfr

467
00:20:12,000 --> 00:20:16,880
pmmr i uh we can also uh

468
00:20:16,880 --> 00:20:18,799
use the trfa parts

469
00:20:18,799 --> 00:20:22,159
uh to build the

470
00:20:22,159 --> 00:20:23,840
backup tree

471
00:20:23,840 --> 00:20:26,400
and we can

472
00:20:26,400 --> 00:20:30,559
use the node seed as the rpf vector of

473
00:20:30,559 --> 00:20:33,919
type zero joint attribute

474
00:20:33,919 --> 00:20:36,880
like the in the picture r4

475
00:20:36,880 --> 00:20:38,320
and we can

476
00:20:38,320 --> 00:20:40,159
also use the

477
00:20:40,159 --> 00:20:42,240
uh

478
00:20:42,240 --> 00:20:43,840
adjacency seed

479
00:20:43,840 --> 00:20:47,679
as the explicit rp f vector

480
00:20:47,679 --> 00:20:51,520
of the type 4 joint attribute

481
00:20:51,520 --> 00:20:52,240
and

482
00:20:52,240 --> 00:20:53,440
it can

483
00:20:53,440 --> 00:20:55,120
firstly it can

484
00:20:55,120 --> 00:20:57,120
establish a tree

485
00:20:57,120 --> 00:20:59,919
from the r6 to the

486
00:20:59,919 --> 00:21:01,120
r4

487
00:21:01,120 --> 00:21:02,880
and secondly

488
00:21:02,880 --> 00:21:04,640
it will uh

489
00:21:04,640 --> 00:21:07,520
directly send the drone to the uh

490
00:21:07,520 --> 00:21:11,280
upstream neighbor and r3 and then it

491
00:21:11,280 --> 00:21:13,919
will uh

492
00:21:13,919 --> 00:21:17,039
join hub by hub for according to the

493
00:21:17,039 --> 00:21:18,080
normal

494
00:21:18,080 --> 00:21:21,280
procedure of the pin protocol so

495
00:21:21,280 --> 00:21:25,039
the backup tree can be established

496
00:21:25,039 --> 00:21:28,679
so next step please

497
00:21:30,000 --> 00:21:32,240
uh for the next step uh

498
00:21:32,240 --> 00:21:36,400
uh we will add more details for uh

499
00:21:36,400 --> 00:21:37,760
uh for

500
00:21:37,760 --> 00:21:41,760
both in the sr and pls and the sr v6

501
00:21:41,760 --> 00:21:46,240
networks we can run team imovie are in

502
00:21:46,240 --> 00:21:48,320
both network

503
00:21:48,320 --> 00:21:50,799
and we hope to uh

504
00:21:50,799 --> 00:21:53,760
get more uh feedback from the working

505
00:21:53,760 --> 00:21:58,280
group okay that's all thank you

506
00:22:02,559 --> 00:22:04,880
yeah all right thank you uh any

507
00:22:04,880 --> 00:22:06,240
questions

508
00:22:06,240 --> 00:22:12,280
in the room or or or online as well

509
00:22:19,280 --> 00:22:21,679
all right yeah thanks thanks for that i

510
00:22:21,679 --> 00:22:24,720
guess we don't have any questions um

511
00:22:24,720 --> 00:22:26,720
but yeah it'd be great if

512
00:22:26,720 --> 00:22:27,840
everyone

513
00:22:27,840 --> 00:22:29,840
reads the draft and

514
00:22:29,840 --> 00:22:31,360
give any comments

515
00:22:31,360 --> 00:22:33,840
online

516
00:22:35,520 --> 00:22:38,000
all right okay thanks

517
00:22:38,000 --> 00:22:38,840
thank

518
00:22:38,840 --> 00:22:41,919
you the poll next to me

519
00:22:41,919 --> 00:22:43,840
let's have it ready here

520
00:22:43,840 --> 00:22:46,080
did the poll for them

521
00:22:46,080 --> 00:22:48,000
go and do it

522
00:22:48,000 --> 00:22:49,120
do you got it

523
00:22:49,120 --> 00:22:51,600
yeah i have it's ready here

524
00:22:51,600 --> 00:22:52,559
okay

525
00:22:52,559 --> 00:22:53,919
i'm gonna

526
00:22:53,919 --> 00:22:56,480
yeah all right so for the star point to

527
00:22:56,480 --> 00:22:57,679
point

528
00:22:57,679 --> 00:23:00,320
point to multi-point policy

529
00:23:00,320 --> 00:23:01,360
um

530
00:23:01,360 --> 00:23:04,400
let's see if it's ready for last call um

531
00:23:04,400 --> 00:23:06,880
i'm going to start uh as a polar meet

532
00:23:06,880 --> 00:23:09,200
echo um

533
00:23:09,200 --> 00:23:10,960
so i'm not quite sure whether

534
00:23:10,960 --> 00:23:13,440
when you do this pulse these days if

535
00:23:13,440 --> 00:23:15,200
everyone's supposed to use meet the echo

536
00:23:15,200 --> 00:23:17,039
or if you do a combination of the room

537
00:23:17,039 --> 00:23:18,720
and meet echo but

538
00:23:18,720 --> 00:23:20,720
i think if you're in a room it's

539
00:23:20,720 --> 00:23:22,799
it's yeah it should be sufficient if you

540
00:23:22,799 --> 00:23:24,880
show your hands

541
00:23:24,880 --> 00:23:25,679
but

542
00:23:25,679 --> 00:23:28,240
uh yes let's say if you're in the room

543
00:23:28,240 --> 00:23:30,480
and we you can check okay alvaro what

544
00:23:30,480 --> 00:23:31,919
the hell should we do hi i'm gonna turn

545
00:23:31,919 --> 00:23:32,640
around

546
00:23:32,640 --> 00:23:35,280
just something really quick uh everyone

547
00:23:35,280 --> 00:23:37,600
should scan the qr code

548
00:23:37,600 --> 00:23:38,799
uh at the entrance because that's the

549
00:23:38,799 --> 00:23:40,400
call of the blue cheats

550
00:23:40,400 --> 00:23:42,400
so if you do that you're logged in to

551
00:23:42,400 --> 00:23:44,159
meet echo on your phone

552
00:23:44,159 --> 00:23:45,679
and then you can just do the poll on the

553
00:23:45,679 --> 00:23:47,840
phone channel okay okay let's do the

554
00:23:47,840 --> 00:23:51,760
poll for everyone um so uh yeah are you

555
00:23:51,760 --> 00:23:54,880
all logged in and ready for the poll um

556
00:23:54,880 --> 00:23:58,240
otherwise we can wait a little bit but

557
00:23:58,240 --> 00:24:00,960
okay let's do the let's do the poll

558
00:24:00,960 --> 00:24:02,960
yeah yeah if you scan that it's like

559
00:24:02,960 --> 00:24:04,640
meat echo light or something for your

560
00:24:04,640 --> 00:24:06,240
phone yeah

561
00:24:06,240 --> 00:24:08,400
okay let's do that poll so

562
00:24:08,400 --> 00:24:11,760
yeah so you should all be signing to

563
00:24:11,760 --> 00:24:14,480
meet echo hopefully and and

564
00:24:14,480 --> 00:24:16,159
and see that the poll

565
00:24:16,159 --> 00:24:17,600
so basically gonna

566
00:24:17,600 --> 00:24:20,640
start this poll to check if um

567
00:24:20,640 --> 00:24:23,360
the point-to-point point to multi-point

568
00:24:23,360 --> 00:24:25,760
policy draft is ready for working

569
00:24:25,760 --> 00:24:28,559
replace call

570
00:24:28,559 --> 00:24:30,400
so the question is really whether you

571
00:24:30,400 --> 00:24:33,600
think it's in a good shape and

572
00:24:33,600 --> 00:24:36,159
no major issues so whether you feel like

573
00:24:36,159 --> 00:24:38,559
it needs more more changes

574
00:24:38,559 --> 00:24:39,760
first

575
00:24:39,760 --> 00:24:44,440
okay so i'm starting the poll here now

576
00:24:48,559 --> 00:24:51,559
so

577
00:25:34,159 --> 00:25:36,240
is there anything against

578
00:25:36,240 --> 00:25:38,320
yeah i wanna i wanna ask people why

579
00:25:38,320 --> 00:25:40,559
they're scrolling does it show anything

580
00:25:40,559 --> 00:25:43,279
is

581
00:25:55,200 --> 00:25:57,600
then

582
00:25:57,600 --> 00:25:58,640
okay it's

583
00:25:58,640 --> 00:26:01,279
yeah still it's still changing so oh

584
00:26:01,279 --> 00:26:03,840
okay i see there's still some more votes

585
00:26:03,840 --> 00:26:08,520
coming in so wait a little longer

586
00:26:22,159 --> 00:26:24,960
right so it'd be nice

587
00:26:33,200 --> 00:26:35,039
oh yeah no so the participants in the

588
00:26:35,039 --> 00:26:37,039
poll are the actual people who actually

589
00:26:37,039 --> 00:26:38,640
either raised their hands

590
00:26:38,640 --> 00:26:41,279
or explicitly didn't raise their hands

591
00:26:41,279 --> 00:26:44,720
so in other words yeah the other 15

592
00:26:44,720 --> 00:26:46,480
probably didn't read the draft yeah but

593
00:26:46,480 --> 00:26:49,600
it would be yeah

594
00:26:50,799 --> 00:26:52,880
i agree that's a big rate yeah just to

595
00:26:52,880 --> 00:26:54,960
know how many are not responding at all

596
00:26:54,960 --> 00:26:56,240
or yeah

597
00:26:56,240 --> 00:26:57,760
yeah

598
00:26:57,760 --> 00:27:00,159
okay so yeah i think i think it hasn't

599
00:27:00,159 --> 00:27:01,919
changed for a while as we'll stop here

600
00:27:01,919 --> 00:27:03,679
so um

601
00:27:03,679 --> 00:27:04,720
yeah we got

602
00:27:04,720 --> 00:27:07,919
14 people in favor or saying it's ready

603
00:27:07,919 --> 00:27:09,360
for last call

604
00:27:09,360 --> 00:27:11,360
but you also have two people saying it's

605
00:27:11,360 --> 00:27:12,880
not ready

606
00:27:12,880 --> 00:27:15,840
um so look yeah if those are you that

607
00:27:15,840 --> 00:27:17,919
think it's not ready

608
00:27:17,919 --> 00:27:20,399
if you have any um comments i mean i

609
00:27:20,399 --> 00:27:22,399
would be hap or we would be happy to

610
00:27:22,399 --> 00:27:24,240
hear if you have any

611
00:27:24,240 --> 00:27:25,919
you know thoughts on what what is

612
00:27:25,919 --> 00:27:29,200
missing in the documents

613
00:27:30,960 --> 00:27:33,600
if you would like to respond

614
00:27:33,600 --> 00:27:35,440
it's okay if you don't but yeah it'd be

615
00:27:35,440 --> 00:27:37,600
great to know what what

616
00:27:37,600 --> 00:27:40,320
what is missing

617
00:27:44,559 --> 00:27:47,360
so human can you remind me again i'm

618
00:27:47,360 --> 00:27:49,279
taking notes so i'm just catching up

619
00:27:49,279 --> 00:27:50,720
here um

620
00:27:50,720 --> 00:27:51,840
so

621
00:27:51,840 --> 00:27:53,279
um

622
00:27:53,279 --> 00:27:55,120
this draft was

623
00:27:55,120 --> 00:27:57,919
waiting on the status of the um

624
00:27:57,919 --> 00:28:00,320
replication segment draft in spring and

625
00:28:00,320 --> 00:28:01,600
what's the status of that draft in

626
00:28:01,600 --> 00:28:03,919
spring right now did you say so uh i

627
00:28:03,919 --> 00:28:06,159
think we are it's in good state too we

628
00:28:06,159 --> 00:28:07,600
are trying to do a last call on that one

629
00:28:07,600 --> 00:28:08,399
too

630
00:28:08,399 --> 00:28:10,320
on the replication segment so should we

631
00:28:10,320 --> 00:28:12,080
wait to do our last call before that one

632
00:28:12,080 --> 00:28:12,799
or

633
00:28:12,799 --> 00:28:15,440
do you think i don't think so i i think

634
00:28:15,440 --> 00:28:17,679
it's more appropriate to do a last call

635
00:28:17,679 --> 00:28:20,000
on this one first and then go to the

636
00:28:20,000 --> 00:28:22,080
replication segment uh

637
00:28:22,080 --> 00:28:23,440
the reason for that just refresh

638
00:28:23,440 --> 00:28:25,600
everybody's mind is that

639
00:28:25,600 --> 00:28:28,080
this draft in the pim it actually talks

640
00:28:28,080 --> 00:28:30,159
about the tree and the point to multiply

641
00:28:30,159 --> 00:28:32,880
policy that you set up on the route

642
00:28:32,880 --> 00:28:36,960
and the replication uh segment draft in

643
00:28:36,960 --> 00:28:39,600
a spring talks about really the

644
00:28:39,600 --> 00:28:41,679
forwarding plane how the

645
00:28:41,679 --> 00:28:43,840
multicast instructions are built right

646
00:28:43,840 --> 00:28:44,559
so

647
00:28:44,559 --> 00:28:46,720
this draft is really talks about how the

648
00:28:46,720 --> 00:28:48,720
tree is built up via

649
00:28:48,720 --> 00:28:51,200
canada paths and how they can be

650
00:28:51,200 --> 00:28:53,360
assigned to a mvpn

651
00:28:53,360 --> 00:28:55,360
type of infrastructure

652
00:28:55,360 --> 00:28:57,679
in my humble opinion

653
00:28:57,679 --> 00:28:59,840
it makes sense because this is the

654
00:28:59,840 --> 00:29:01,760
mother draft to

655
00:29:01,760 --> 00:29:04,480
do alaska on this first and you know a

656
00:29:04,480 --> 00:29:06,799
spring is a separate piece of its own

657
00:29:06,799 --> 00:29:08,000
yeah yeah

658
00:29:08,000 --> 00:29:10,559
that's just my opinion okay

659
00:29:10,559 --> 00:29:11,919
so probably what we should do like we've

660
00:29:11,919 --> 00:29:14,000
been doing is just uh maybe touch base

661
00:29:14,000 --> 00:29:15,679
with these spring chairs and just let

662
00:29:15,679 --> 00:29:17,200
them know what we're doing and make sure

663
00:29:17,200 --> 00:29:18,880
that they're cool with it right then

664
00:29:18,880 --> 00:29:21,279
we'll proceed yeah so uh you know we did

665
00:29:21,279 --> 00:29:23,600
the the poll here but we'll we'll check

666
00:29:23,600 --> 00:29:25,279
on the mailing as to if people think

667
00:29:25,279 --> 00:29:27,600
it's ready and uh

668
00:29:27,600 --> 00:29:30,000
and and yeah it looks like maybe some

669
00:29:30,000 --> 00:29:33,039
people have some concerns um but yeah if

670
00:29:33,039 --> 00:29:35,279
anyone has any concerns or comments we

671
00:29:35,279 --> 00:29:37,600
want to hear from you on a mailing list

672
00:29:37,600 --> 00:29:39,200
yeah i mean absolutely that's what the

673
00:29:39,200 --> 00:29:41,840
last goal is for right yeah any comments

674
00:29:41,840 --> 00:29:42,960
any uh

675
00:29:42,960 --> 00:29:45,120
thoughts that comes in mind please let

676
00:29:45,120 --> 00:29:46,240
us know and

677
00:29:46,240 --> 00:29:48,880
we'll differently yeah yeah and and yeah

678
00:29:48,880 --> 00:29:51,200
we want you all to all to read it and

679
00:29:51,200 --> 00:29:55,279
any any comments would be very welcome

680
00:29:55,279 --> 00:29:57,360
we often have an issue with getting

681
00:29:57,360 --> 00:29:59,760
enough review or documents so

682
00:29:59,760 --> 00:30:01,520
yeah that would be great if you can have

683
00:30:01,520 --> 00:30:03,039
a look

684
00:30:03,039 --> 00:30:05,279
um

685
00:30:05,600 --> 00:30:07,760
and and yeah they'll check with the

686
00:30:07,760 --> 00:30:09,600
spring chairs and

687
00:30:09,600 --> 00:30:11,760
we'll probably send an email or two and

688
00:30:11,760 --> 00:30:13,600
say you know there's a last call in pym

689
00:30:13,600 --> 00:30:17,200
and yeah please have a look

690
00:30:17,200 --> 00:30:20,000
all right okay um

691
00:30:20,000 --> 00:30:24,960
then i guess pimlight is the next one

692
00:30:32,559 --> 00:30:34,240
all right thank you

693
00:30:34,240 --> 00:30:35,760
yeah it's good to be here seeing

694
00:30:35,760 --> 00:30:38,799
everybody uh um smiling behind the mask

695
00:30:38,799 --> 00:30:41,600
but the mask is covering that's fine

696
00:30:41,600 --> 00:30:44,080
uh yeah so pim light uh just to give

697
00:30:44,080 --> 00:30:45,760
everybody uh

698
00:30:45,760 --> 00:30:47,120
uh

699
00:30:47,120 --> 00:30:49,039
overview of what's going on here is

700
00:30:49,039 --> 00:30:51,679
eventually in this meeting we want to

701
00:30:51,679 --> 00:30:53,600
see whether we can adopt this

702
00:30:53,600 --> 00:30:55,919
draft as a itf draft

703
00:30:55,919 --> 00:30:58,080
and move forward or not so this

704
00:30:58,080 --> 00:31:00,159
presentation eventually the end goal is

705
00:31:00,159 --> 00:31:00,960
that

706
00:31:00,960 --> 00:31:04,480
exit slide please

707
00:31:04,480 --> 00:31:06,159
so i mean we've done the background a

708
00:31:06,159 --> 00:31:07,919
couple of times but just to refresh

709
00:31:07,919 --> 00:31:09,440
everybody's memory

710
00:31:09,440 --> 00:31:11,760
uh there could be two pin domains that

711
00:31:11,760 --> 00:31:14,000
are disjoint and

712
00:31:14,000 --> 00:31:16,159
you might want to signal multicast

713
00:31:16,159 --> 00:31:18,640
states between these the uh two pim

714
00:31:18,640 --> 00:31:19,760
domains

715
00:31:19,760 --> 00:31:22,080
and uh to do so you don't want to bring

716
00:31:22,080 --> 00:31:25,519
the pim adjacency up or the neighborship

717
00:31:25,519 --> 00:31:26,559
up

718
00:31:26,559 --> 00:31:28,240
so it's hard to breathe and talk with

719
00:31:28,240 --> 00:31:30,559
this thing uh it's you don't want to

720
00:31:30,559 --> 00:31:32,240
bring the pym neighborship up between

721
00:31:32,240 --> 00:31:34,240
the the two pin

722
00:31:34,240 --> 00:31:36,640
disjoint routers so basically you just

723
00:31:36,640 --> 00:31:38,559
want to use the join and the prunes

724
00:31:38,559 --> 00:31:40,000
messages

725
00:31:40,000 --> 00:31:42,399
between these two pin routers

726
00:31:42,399 --> 00:31:44,880
to communicate the multicast state

727
00:31:44,880 --> 00:31:47,120
one of the best examples for it is pim

728
00:31:47,120 --> 00:31:50,000
signaling over the beer network

729
00:31:50,000 --> 00:31:53,200
so obviously in rfc 7761 it was

730
00:31:53,200 --> 00:31:54,559
described that

731
00:31:54,559 --> 00:31:58,158
for pim joins and prunes

732
00:31:58,399 --> 00:32:00,399
well the assert message should not be

733
00:32:00,399 --> 00:32:02,240
there because in the next slide you will

734
00:32:02,240 --> 00:32:04,399
see that was a mistake by me for pim

735
00:32:04,399 --> 00:32:06,720
join and prunes uh you need to make sure

736
00:32:06,720 --> 00:32:09,360
that there is a pim hello message and

737
00:32:09,360 --> 00:32:11,919
adjacency up before you process those

738
00:32:11,919 --> 00:32:13,600
joints and prunes

739
00:32:13,600 --> 00:32:16,000
and a pim light interface is basically

740
00:32:16,000 --> 00:32:18,640
an interface that allows you to process

741
00:32:18,640 --> 00:32:21,279
those joints and prunes without bringing

742
00:32:21,279 --> 00:32:23,519
up a team neighborship between the two

743
00:32:23,519 --> 00:32:27,159
routers exercise

744
00:32:28,080 --> 00:32:30,799
on the version two of the draft a couple

745
00:32:30,799 --> 00:32:33,039
of decisions were made so we are keeping

746
00:32:33,039 --> 00:32:34,960
the name as ping light there were some

747
00:32:34,960 --> 00:32:36,320
back and forth

748
00:32:36,320 --> 00:32:38,159
whether it's light light whatever it is

749
00:32:38,159 --> 00:32:41,200
uh i think we are keeping the name as is

750
00:32:41,200 --> 00:32:43,120
uh you know again the

751
00:32:43,120 --> 00:32:44,960
the goal of the draft already explained

752
00:32:44,960 --> 00:32:46,320
so for the sake of time i'm going to

753
00:32:46,320 --> 00:32:48,480
skip that in the new version of the

754
00:32:48,480 --> 00:32:50,640
draft based on discussion with some of

755
00:32:50,640 --> 00:32:52,960
the experts we removed the assert

756
00:32:52,960 --> 00:32:54,159
messages

757
00:32:54,159 --> 00:32:56,640
basically we feel that when the two pim

758
00:32:56,640 --> 00:32:59,360
domains are connected via a

759
00:32:59,360 --> 00:33:01,200
pim light

760
00:33:01,200 --> 00:33:04,000
interface there is no need for assert

761
00:33:04,000 --> 00:33:05,600
messages and

762
00:33:05,600 --> 00:33:08,240
the pin boundary routers they need to

763
00:33:08,240 --> 00:33:10,000
ensure that they are not duplicating the

764
00:33:10,000 --> 00:33:12,320
multicast traffic from one domain to the

765
00:33:12,320 --> 00:33:15,440
other domain over the pin light

766
00:33:15,440 --> 00:33:17,679
and last but not least is

767
00:33:17,679 --> 00:33:20,480
when it comes to the pim light interface

768
00:33:20,480 --> 00:33:22,000
there could be two cases for

769
00:33:22,000 --> 00:33:23,600
configuration

770
00:33:23,600 --> 00:33:27,519
in one case you might want to specific

771
00:33:27,519 --> 00:33:29,279
explicitly

772
00:33:29,279 --> 00:33:32,399
configure the pli on the router

773
00:33:32,399 --> 00:33:35,200
and if you do so then

774
00:33:35,200 --> 00:33:37,840
basically you don't want to accept any

775
00:33:37,840 --> 00:33:40,080
joints or prune messages

776
00:33:40,080 --> 00:33:42,240
on these on non

777
00:33:42,240 --> 00:33:44,559
pli interfaces

778
00:33:44,559 --> 00:33:46,880
in the second case like beer you could

779
00:33:46,880 --> 00:33:50,399
have a pli configured automatically

780
00:33:50,399 --> 00:33:53,279
on the beer facing interfaces

781
00:33:53,279 --> 00:33:56,240
and again in that case uh for security

782
00:33:56,240 --> 00:33:58,640
reason we don't want to start processing

783
00:33:58,640 --> 00:34:01,679
uh all these join and prune messages on

784
00:34:01,679 --> 00:34:03,360
all the interfaces

785
00:34:03,360 --> 00:34:06,240
uh uh throughout the router so it is

786
00:34:06,240 --> 00:34:09,679
suggested that for these automatically

787
00:34:09,679 --> 00:34:11,760
cases that pli is going to be configured

788
00:34:11,760 --> 00:34:13,679
underneath the hood there should be a

789
00:34:13,679 --> 00:34:16,800
mechanism to understand that these plis

790
00:34:16,800 --> 00:34:19,918
are facing the pin sorry the beer domain

791
00:34:19,918 --> 00:34:22,960
and explicitly on those interfaces we

792
00:34:22,960 --> 00:34:24,320
accept the

793
00:34:24,320 --> 00:34:26,079
join and the prunes

794
00:34:26,079 --> 00:34:27,599
uh coming

795
00:34:27,599 --> 00:34:29,440
uh

796
00:34:29,440 --> 00:34:31,199
because it would be

797
00:34:31,199 --> 00:34:33,119
from down a stream coming from

798
00:34:33,119 --> 00:34:34,960
downstream again these are security

799
00:34:34,960 --> 00:34:38,399
concerns and i guess this last point is

800
00:34:38,399 --> 00:34:39,760
something that we can discuss a little

801
00:34:39,760 --> 00:34:40,960
bit further

802
00:34:40,960 --> 00:34:43,199
to understand whether this whole

803
00:34:43,199 --> 00:34:45,918
configuration and security mechanism is

804
00:34:45,918 --> 00:34:47,119
necessary

805
00:34:47,119 --> 00:34:49,119
in this draft or

806
00:34:49,119 --> 00:34:50,159
we should

807
00:34:50,159 --> 00:34:52,239
omit it from the draft

808
00:34:52,239 --> 00:34:53,599
but anyway that's one point of

809
00:34:53,599 --> 00:34:57,119
discussion next slide please

810
00:34:57,119 --> 00:34:59,040
yeah so those are the changes and you

811
00:34:59,040 --> 00:35:02,160
know uh i guess what the authors they

812
00:35:02,160 --> 00:35:04,960
feel like is it's ready for adoption

813
00:35:04,960 --> 00:35:06,800
and take it to the nexus

814
00:35:06,800 --> 00:35:09,760
you see any online

815
00:35:09,760 --> 00:35:12,960
she's got to cheer this thing

816
00:35:14,320 --> 00:35:16,480
let's see

817
00:35:16,480 --> 00:35:17,760
sandy are you on

818
00:35:17,760 --> 00:35:20,640
are you online

819
00:35:23,280 --> 00:35:26,560
standing sandy is uh

820
00:35:26,560 --> 00:35:28,400
oh yeah yeah

821
00:35:28,400 --> 00:35:31,440
okay okay and associated i'll do the

822
00:35:31,440 --> 00:35:34,640
proper adoption of this draft

823
00:35:34,640 --> 00:35:37,520
and i think that it's great if more

824
00:35:37,520 --> 00:35:40,880
details can be added in the draft

825
00:35:40,880 --> 00:35:43,040
such as some comments from the last

826
00:35:43,040 --> 00:35:44,400
meeting

827
00:35:44,400 --> 00:35:47,839
and i also think that

828
00:35:47,839 --> 00:35:51,760
if we received uh hello from the pli

829
00:35:51,760 --> 00:35:54,400
what will we do we do

830
00:35:54,400 --> 00:35:56,960
if we should think that it's a valid

831
00:35:56,960 --> 00:35:58,720
package or

832
00:35:58,720 --> 00:36:01,040
we will do something i think

833
00:36:01,040 --> 00:36:01,839
the

834
00:36:01,839 --> 00:36:03,440
details such as

835
00:36:03,440 --> 00:36:05,839
forget for example for the

836
00:36:05,839 --> 00:36:08,640
hollow package

837
00:36:08,640 --> 00:36:10,960
process need to be added

838
00:36:10,960 --> 00:36:13,760
in the draft too

839
00:36:13,760 --> 00:36:16,480
but i do support the

840
00:36:16,480 --> 00:36:18,240
adoption yeah

841
00:36:18,240 --> 00:36:19,680
yeah yeah so thank you so the reason

842
00:36:19,680 --> 00:36:20,640
that i

843
00:36:20,640 --> 00:36:22,400
called your name out is because you're

844
00:36:22,400 --> 00:36:24,480
acting as chair for this draft so we

845
00:36:24,480 --> 00:36:26,720
need to have you

846
00:36:26,720 --> 00:36:29,200
be the one to ask the working group

847
00:36:29,200 --> 00:36:30,240
if

848
00:36:30,240 --> 00:36:32,320
we support adoption of this draft since

849
00:36:32,320 --> 00:36:35,520
stig and i are on the draft

850
00:36:35,599 --> 00:36:38,320
but before you do there's a comment yeah

851
00:36:38,320 --> 00:36:40,320
uh richard products correct cisco

852
00:36:40,320 --> 00:36:42,079
so um

853
00:36:42,079 --> 00:36:44,160
i don't know if authors need to consider

854
00:36:44,160 --> 00:36:46,800
that today boots bsr message forwarding

855
00:36:46,800 --> 00:36:48,160
also needs

856
00:36:48,160 --> 00:36:51,520
uh bim neighbor on an interface

857
00:36:51,520 --> 00:36:53,839
so i don't know if that has to be

858
00:36:53,839 --> 00:36:55,119
considered for

859
00:36:55,119 --> 00:36:56,800
for this draft

860
00:36:56,800 --> 00:36:58,400
so

861
00:36:58,400 --> 00:37:01,280
sorry the vsr message yes the bootstrap

862
00:37:01,280 --> 00:37:04,000
forwarding requires pim neighbors on an

863
00:37:04,000 --> 00:37:06,880
interface when a string router

864
00:37:06,880 --> 00:37:08,960
has to forward bsm's only on interfaces

865
00:37:08,960 --> 00:37:11,280
that neighbors so if you don't have them

866
00:37:11,280 --> 00:37:12,720
neighbors um

867
00:37:12,720 --> 00:37:15,040
then we need to consider how bsn will be

868
00:37:15,040 --> 00:37:17,280
forwarded

869
00:37:17,280 --> 00:37:18,640
yeah um

870
00:37:18,640 --> 00:37:22,320
yeah speaking as an offer i guess um

871
00:37:22,320 --> 00:37:23,760
yeah i agree we

872
00:37:23,760 --> 00:37:26,000
we need to mention that and

873
00:37:26,000 --> 00:37:27,839
can probably just be a statement saying

874
00:37:27,839 --> 00:37:29,599
you know that they are not supported and

875
00:37:29,599 --> 00:37:30,880
you need to

876
00:37:30,880 --> 00:37:32,560
configure our piece

877
00:37:32,560 --> 00:37:35,280
in some other way probably but but yeah

878
00:37:35,280 --> 00:37:37,200
it needs to be mentioned i think

879
00:37:37,200 --> 00:37:39,200
should probably look at all the message

880
00:37:39,200 --> 00:37:41,599
types and make sure that they are all

881
00:37:41,599 --> 00:37:43,440
covered in some way like mentioned you

882
00:37:43,440 --> 00:37:44,160
know

883
00:37:44,160 --> 00:37:45,040
okay

884
00:37:45,040 --> 00:37:47,280
okay um i know you're kind of saying

885
00:37:47,280 --> 00:37:49,680
only support joint print it might be

886
00:37:49,680 --> 00:37:52,000
good to sort of mention you know why

887
00:37:52,000 --> 00:37:54,720
those other messages are not needed or

888
00:37:54,720 --> 00:37:56,240
you know okay

889
00:37:56,240 --> 00:38:00,000
yeah i can put a paragraph thank you

890
00:38:00,480 --> 00:38:01,280
uh

891
00:38:01,280 --> 00:38:02,160
yeah

892
00:38:02,160 --> 00:38:06,160
sandy so yeah we need your help here um

893
00:38:06,160 --> 00:38:07,440
so

894
00:38:07,440 --> 00:38:09,520
um

895
00:38:09,520 --> 00:38:10,400
yeah

896
00:38:10,400 --> 00:38:12,800
do you think it's ready for adoption or

897
00:38:12,800 --> 00:38:14,720
do you want to ask the working group if

898
00:38:14,720 --> 00:38:16,800
it's ready or

899
00:38:16,800 --> 00:38:18,880
if it's not ready that's okay too but

900
00:38:18,880 --> 00:38:21,119
yeah

901
00:38:28,880 --> 00:38:30,320
i'm gonna guess that we need to have

902
00:38:30,320 --> 00:38:32,240
harassed on the list yeah i'm not sure

903
00:38:32,240 --> 00:38:34,960
if she understands it um i mean

904
00:38:34,960 --> 00:38:36,960
should we do a poll or

905
00:38:36,960 --> 00:38:38,640
yeah i guess we can do it yeah okay

906
00:38:38,640 --> 00:38:41,119
let's let's start the poll

907
00:38:41,119 --> 00:38:42,000
yeah

908
00:38:42,000 --> 00:38:42,960
thank you

909
00:38:42,960 --> 00:38:46,079
yeah yeah thank you

910
00:38:46,079 --> 00:38:48,880
hello hello do you hear me

911
00:38:48,880 --> 00:38:50,160
if you are

912
00:38:50,160 --> 00:38:51,520
asking me that

913
00:38:51,520 --> 00:38:54,640
if this draft should be adopted

914
00:38:54,640 --> 00:38:58,720
i just said it should be adopted yeah

915
00:38:58,720 --> 00:39:00,560
yeah we just need to have you ask the

916
00:39:00,560 --> 00:39:03,920
working group um you're chairing this

917
00:39:03,920 --> 00:39:05,280
your draft so that's what we're asking

918
00:39:05,280 --> 00:39:06,480
but we're going to go ahead and initiate

919
00:39:06,480 --> 00:39:08,240
a poll

920
00:39:08,240 --> 00:39:10,240
but on the list we're going to need to

921
00:39:10,240 --> 00:39:12,079
have you send an email out to the list

922
00:39:12,079 --> 00:39:13,200
asking

923
00:39:13,200 --> 00:39:15,440
for opinions on

924
00:39:15,440 --> 00:39:17,200
adoption but we'll we'll talk to you

925
00:39:17,200 --> 00:39:19,520
after this meeting

926
00:39:19,520 --> 00:39:22,480
okay okay thank you

927
00:39:24,720 --> 00:39:26,800
i don't know if this is fair on me but

928
00:39:26,800 --> 00:39:29,200
let's say yeah as an author not working

929
00:39:29,200 --> 00:39:31,040
with chair

930
00:39:31,040 --> 00:39:32,880
i would say that you know this is

931
00:39:32,880 --> 00:39:34,640
motivated by beer

932
00:39:34,640 --> 00:39:36,720
but there's other implementation during

933
00:39:36,720 --> 00:39:38,880
doing this kind of behavior in various

934
00:39:38,880 --> 00:39:40,560
contexts as well

935
00:39:40,560 --> 00:39:42,960
but we never had any document describing

936
00:39:42,960 --> 00:39:44,720
how to do this or

937
00:39:44,720 --> 00:39:47,359
it's more like implementation specific

938
00:39:47,359 --> 00:39:49,520
thing so far

939
00:39:49,520 --> 00:39:52,800
but yeah let's start the poll and sandy

940
00:39:52,800 --> 00:39:54,640
we'll check on the mailing list so

941
00:39:54,640 --> 00:39:56,800
the poll here is just to get some some

942
00:39:56,800 --> 00:39:58,480
idea

943
00:39:58,480 --> 00:40:00,320
the mailing list is what what counts

944
00:40:00,320 --> 00:40:01,520
yeah yeah

945
00:40:01,520 --> 00:40:03,040
so you're starting the pawn now but yeah

946
00:40:03,040 --> 00:40:05,280
i'm starting the poll here now whether

947
00:40:05,280 --> 00:40:06,720
to

948
00:40:06,720 --> 00:40:10,680
but it's ready for adoption

949
00:40:54,240 --> 00:40:55,440
okay

950
00:40:55,440 --> 00:40:57,599
yeah yeah i think that's probably long

951
00:40:57,599 --> 00:41:00,160
enough so

952
00:41:00,160 --> 00:41:02,480
so right now we got 13 people in favor

953
00:41:02,480 --> 00:41:07,359
adoption and one person against and

954
00:41:09,680 --> 00:41:11,599
obviously we have we have pretty good

955
00:41:11,599 --> 00:41:13,359
good support at least so we should

956
00:41:13,359 --> 00:41:16,319
definitely take it to the mailing list

957
00:41:16,319 --> 00:41:18,400
but uh yeah um

958
00:41:18,400 --> 00:41:20,480
the mailing list is what counts so

959
00:41:20,480 --> 00:41:22,880
please respond to the adoption call on

960
00:41:22,880 --> 00:41:25,599
the mailing list

961
00:41:26,079 --> 00:41:29,040
okay yeah thanks

962
00:41:29,040 --> 00:41:30,560
all right nate are you

963
00:41:30,560 --> 00:41:31,920
ready to hit it let's just go we'll go

964
00:41:31,920 --> 00:41:35,119
in order so

965
00:41:35,119 --> 00:41:36,400
thanks

966
00:41:36,400 --> 00:41:38,720
yeah brian still wants you

967
00:41:38,720 --> 00:41:42,720
yeah he's not here he's online

968
00:41:44,480 --> 00:41:47,640
all right

969
00:41:49,040 --> 00:41:50,960
uh good morning everybody uh my name is

970
00:41:50,960 --> 00:41:53,280
nate carson's i'm um i work for garmin

971
00:41:53,280 --> 00:41:54,800
but i'm here representing the national

972
00:41:54,800 --> 00:41:56,800
marine electronics association

973
00:41:56,800 --> 00:41:58,960
specifically the onenet committee

974
00:41:58,960 --> 00:42:00,480
i think you can raise it by that bottom

975
00:42:00,480 --> 00:42:03,839
thing down there yeah

976
00:42:03,839 --> 00:42:04,720
and then

977
00:42:04,720 --> 00:42:05,680
and then

978
00:42:05,680 --> 00:42:07,440
there's this good yeah that's better

979
00:42:07,440 --> 00:42:11,440
perfect and you can tighten it too yeah

980
00:42:12,880 --> 00:42:15,520
all right so um a little bit about the

981
00:42:15,520 --> 00:42:17,440
onenet networks because it might be a

982
00:42:17,440 --> 00:42:18,560
little different than the networks here

983
00:42:18,560 --> 00:42:20,319
we're used to looking at these are

984
00:42:20,319 --> 00:42:22,400
mostly self-contained they don't have

985
00:42:22,400 --> 00:42:23,920
typically internet connections if they

986
00:42:23,920 --> 00:42:26,640
do there might be like a satellite

987
00:42:26,640 --> 00:42:28,160
nmea

988
00:42:28,160 --> 00:42:30,400
has three different standards

989
00:42:30,400 --> 00:42:32,640
uh o183 is something that you probably

990
00:42:32,640 --> 00:42:34,160
have in all of your cell phones because

991
00:42:34,160 --> 00:42:36,400
that's what um a lot of the gps chips

992
00:42:36,400 --> 00:42:37,200
use

993
00:42:37,200 --> 00:42:40,560
enemy 2000 is a can-based network

994
00:42:40,560 --> 00:42:42,079
and then we're working right now on

995
00:42:42,079 --> 00:42:44,400
onenet we've published it

996
00:42:44,400 --> 00:42:45,680
and are currently

997
00:42:45,680 --> 00:42:48,960
it's in early stages of adoption

998
00:42:48,960 --> 00:42:50,880
so specifically right now we're working

999
00:42:50,880 --> 00:42:53,680
on some radar messages for that but what

1000
00:42:53,680 --> 00:42:55,599
you can see the target market for this

1001
00:42:55,599 --> 00:42:57,040
is

1002
00:42:57,040 --> 00:42:59,119
anything from like smaller recreational

1003
00:42:59,119 --> 00:43:01,520
boats with one display a couple of

1004
00:43:01,520 --> 00:43:03,200
sensors to

1005
00:43:03,200 --> 00:43:06,319
larger um tankers or container ships

1006
00:43:06,319 --> 00:43:07,839
like this so

1007
00:43:07,839 --> 00:43:09,520
um and again typically these these are

1008
00:43:09,520 --> 00:43:11,440
not connected to the internet so what

1009
00:43:11,440 --> 00:43:13,280
we're looking at is a lot of

1010
00:43:13,280 --> 00:43:15,599
sensor

1011
00:43:15,599 --> 00:43:17,440
traffic being

1012
00:43:17,440 --> 00:43:20,880
transmitted to displays for the

1013
00:43:20,880 --> 00:43:22,079
pilot to

1014
00:43:22,079 --> 00:43:24,240
kind of digest and use for

1015
00:43:24,240 --> 00:43:26,880
navigation and safety

1016
00:43:26,880 --> 00:43:30,560
and life critical type stuff like that

1017
00:43:32,000 --> 00:43:34,480
next slide

1018
00:43:36,240 --> 00:43:37,359
so

1019
00:43:37,359 --> 00:43:38,560
there's a couple of different problems

1020
00:43:38,560 --> 00:43:40,000
that we're trying to address here the

1021
00:43:40,000 --> 00:43:42,400
first problem is related to the

1022
00:43:42,400 --> 00:43:44,800
coexistence of devices with varying link

1023
00:43:44,800 --> 00:43:47,680
speeds on the network

1024
00:43:47,680 --> 00:43:49,280
so this is kind of illustrated by this

1025
00:43:49,280 --> 00:43:51,599
we've got on the right a one gigabit

1026
00:43:51,599 --> 00:43:54,640
sensor in this case a radar

1027
00:43:54,640 --> 00:43:57,119
going sending traffic off to 100 to a

1028
00:43:57,119 --> 00:43:59,280
one gigabit display but then you might

1029
00:43:59,280 --> 00:44:01,920
have a lower cost sensor that only has a

1030
00:44:01,920 --> 00:44:04,720
100 megabit or even maybe a 10 megabit

1031
00:44:04,720 --> 00:44:06,960
connection to the switch

1032
00:44:06,960 --> 00:44:08,960
and so just in a standard switch where

1033
00:44:08,960 --> 00:44:10,880
the traffic goes everywhere multicast

1034
00:44:10,880 --> 00:44:12,800
traffic goes everywhere um that's going

1035
00:44:12,800 --> 00:44:15,440
to go out on that 100 megabit link

1036
00:44:15,440 --> 00:44:18,000
and even if the sensor itself

1037
00:44:18,000 --> 00:44:20,319
filters out that traffic

1038
00:44:20,319 --> 00:44:22,800
is often times the this

1039
00:44:22,800 --> 00:44:25,440
the network interface chip uh has the

1040
00:44:25,440 --> 00:44:26,960
ability to censor that so it doesn't go

1041
00:44:26,960 --> 00:44:28,400
to the cpu

1042
00:44:28,400 --> 00:44:30,480
but even if it does filter that out um

1043
00:44:30,480 --> 00:44:33,040
it will still overload that link and so

1044
00:44:33,040 --> 00:44:34,560
important traffic will get dropped by

1045
00:44:34,560 --> 00:44:36,880
the switch

1046
00:44:36,880 --> 00:44:39,359
next slide

1047
00:44:39,760 --> 00:44:41,760
so to solve that we use a technique

1048
00:44:41,760 --> 00:44:44,079
called multicast snooping each data

1049
00:44:44,079 --> 00:44:45,760
stream is assigned a different multicast

1050
00:44:45,760 --> 00:44:46,800
address

1051
00:44:46,800 --> 00:44:49,040
and devices only request streams that

1052
00:44:49,040 --> 00:44:52,480
they're interested in or can handle

1053
00:44:52,480 --> 00:44:53,280
so

1054
00:44:53,280 --> 00:44:55,359
what multicast snooping helps us with is

1055
00:44:55,359 --> 00:44:56,240
you have a

1056
00:44:56,240 --> 00:44:58,480
managed switch there

1057
00:44:58,480 --> 00:45:01,440
and the switch will receive uh igmp or

1058
00:45:01,440 --> 00:45:02,880
mld join

1059
00:45:02,880 --> 00:45:06,000
messages and

1060
00:45:06,000 --> 00:45:08,000
send those up to the cpu the cpu will

1061
00:45:08,000 --> 00:45:10,319
use that to kind of program the the

1062
00:45:10,319 --> 00:45:12,640
switch part to only forward the

1063
00:45:12,640 --> 00:45:14,720
multicast traffic to the

1064
00:45:14,720 --> 00:45:17,119
uh to a given port that has a device

1065
00:45:17,119 --> 00:45:18,880
that's interested in it

1066
00:45:18,880 --> 00:45:20,400
this kind of

1067
00:45:20,400 --> 00:45:21,920
expands here if you have several

1068
00:45:21,920 --> 00:45:24,560
switches all chained together

1069
00:45:24,560 --> 00:45:26,160
those those

1070
00:45:26,160 --> 00:45:28,560
multicast joint messages will kind of

1071
00:45:28,560 --> 00:45:30,160
percolate through the network and each

1072
00:45:30,160 --> 00:45:31,440
switch will be

1073
00:45:31,440 --> 00:45:33,520
configured according to

1074
00:45:33,520 --> 00:45:35,760
if there's any device

1075
00:45:35,760 --> 00:45:37,280
attached to that port that's interested

1076
00:45:37,280 --> 00:45:39,520
in that traffic so in this case

1077
00:45:39,520 --> 00:45:41,839
the 100 megabit sensor does not request

1078
00:45:41,839 --> 00:45:44,640
the traffic from the radar

1079
00:45:44,640 --> 00:45:46,319
and so the switch does not for the

1080
00:45:46,319 --> 00:45:48,400
traffic there and

1081
00:45:48,400 --> 00:45:50,560
the link is available for other

1082
00:45:50,560 --> 00:45:53,520
important traffic to get through

1083
00:45:53,520 --> 00:45:56,079
next slide

1084
00:45:57,280 --> 00:46:00,160
so just kind of a rehash on

1085
00:46:00,160 --> 00:46:02,560
some of the ipv6 addresses out there the

1086
00:46:02,560 --> 00:46:04,560
standard that we're working with is

1087
00:46:04,560 --> 00:46:07,440
almost entirely ipv6

1088
00:46:07,440 --> 00:46:10,240
but some of these concepts would apply

1089
00:46:10,240 --> 00:46:13,280
to ipv4 as well

1090
00:46:13,280 --> 00:46:16,160
so unicast address has a

1091
00:46:16,160 --> 00:46:18,480
um this is a link local address so the

1092
00:46:18,480 --> 00:46:20,319
first

1093
00:46:20,319 --> 00:46:22,160
part of that is going to be fe 80 and

1094
00:46:22,160 --> 00:46:23,440
then the last

1095
00:46:23,440 --> 00:46:26,800
64 bits are the interface id

1096
00:46:26,800 --> 00:46:29,839
the next slide

1097
00:46:30,160 --> 00:46:31,520
when we start looking at multicast

1098
00:46:31,520 --> 00:46:34,440
addresses according to rsc

1099
00:46:34,440 --> 00:46:36,160
4291

1100
00:46:36,160 --> 00:46:39,680
the lower 112 bits of the multicast

1101
00:46:39,680 --> 00:46:41,599
address is the group id

1102
00:46:41,599 --> 00:46:44,720
then when you look at 3306 there's a

1103
00:46:44,720 --> 00:46:46,800
kind of the next iteration of this which

1104
00:46:46,800 --> 00:46:50,000
is a unicast prefix based ipv6 multicast

1105
00:46:50,000 --> 00:46:51,359
address where

1106
00:46:51,359 --> 00:46:53,599
it calls out that kind of divides up

1107
00:46:53,599 --> 00:46:55,280
that 112 bits

1108
00:46:55,280 --> 00:46:56,800
into

1109
00:46:56,800 --> 00:46:57,920
the

1110
00:46:57,920 --> 00:46:59,599
some reserved the

1111
00:46:59,599 --> 00:47:02,400
prefix length network prefix itself 64

1112
00:47:02,400 --> 00:47:04,319
bits and then the group id is shortened

1113
00:47:04,319 --> 00:47:07,440
to 32 bits

1114
00:47:08,240 --> 00:47:10,640
then you get into a link scoped ipv6

1115
00:47:10,640 --> 00:47:12,880
multicast address and this is a really

1116
00:47:12,880 --> 00:47:15,119
interesting idea it basically allows

1117
00:47:15,119 --> 00:47:17,359
each device on the network to have a

1118
00:47:17,359 --> 00:47:19,839
group of multicast addresses that

1119
00:47:19,839 --> 00:47:22,000
are automatically assigned to it

1120
00:47:22,000 --> 00:47:22,960
as

1121
00:47:22,960 --> 00:47:25,119
kind of the benefit of

1122
00:47:25,119 --> 00:47:28,079
getting a link local ipv6 multicast

1123
00:47:28,079 --> 00:47:29,440
address

1124
00:47:29,440 --> 00:47:31,040
and what happens here is that network

1125
00:47:31,040 --> 00:47:34,160
prefix is the interface face id taken

1126
00:47:34,160 --> 00:47:36,480
from the link local

1127
00:47:36,480 --> 00:47:38,960
address

1128
00:47:38,960 --> 00:47:41,200
and then the the group id

1129
00:47:41,200 --> 00:47:42,960
is allocated

1130
00:47:42,960 --> 00:47:46,640
as per 3307

1131
00:47:48,079 --> 00:47:50,559
next slide

1132
00:47:51,760 --> 00:47:54,720
so some guidelines from 3307 on how the

1133
00:47:54,720 --> 00:47:56,400
group id is allocated there's different

1134
00:47:56,400 --> 00:47:58,800
ranges basically the there's a permanent

1135
00:47:58,800 --> 00:48:01,440
ipv66 multicast addresses and those are

1136
00:48:01,440 --> 00:48:03,920
allocated by iana

1137
00:48:03,920 --> 00:48:07,200
there's a link to the registry there

1138
00:48:07,200 --> 00:48:09,680
and then there's a permanent group ids

1139
00:48:09,680 --> 00:48:12,720
again allocated by iana and then there's

1140
00:48:12,720 --> 00:48:13,839
dynamic

1141
00:48:13,839 --> 00:48:15,680
multicast addresses so basically if the

1142
00:48:15,680 --> 00:48:17,200
most significant bit

1143
00:48:17,200 --> 00:48:20,640
is set then it's a dynamic one

1144
00:48:20,640 --> 00:48:23,118
next slide

1145
00:48:24,400 --> 00:48:26,000
so the problem with this is when you go

1146
00:48:26,000 --> 00:48:28,640
to transmit this on ethernet there's the

1147
00:48:28,640 --> 00:48:31,040
potential for collisions

1148
00:48:31,040 --> 00:48:33,760
rc 2464

1149
00:48:33,760 --> 00:48:35,520
specifies that the destination multicast

1150
00:48:35,520 --> 00:48:37,599
mac address is the first two octets or

1151
00:48:37,599 --> 00:48:40,480
33 and then the last four octets are the

1152
00:48:40,480 --> 00:48:42,640
last four octets of the ipv6 multicast

1153
00:48:42,640 --> 00:48:44,720
address so if you look at a link scope

1154
00:48:44,720 --> 00:48:47,680
ipv6 multicast address those last four

1155
00:48:47,680 --> 00:48:50,480
octets are the group id and the group id

1156
00:48:50,480 --> 00:48:53,520
is not differentiated between different

1157
00:48:53,520 --> 00:48:55,280
interface ids there

1158
00:48:55,280 --> 00:48:56,640
so different nodes can generate

1159
00:48:56,640 --> 00:48:57,839
different

1160
00:48:57,839 --> 00:48:59,599
like local addresses with the same mac

1161
00:48:59,599 --> 00:49:02,079
address

1162
00:49:02,079 --> 00:49:04,559
next slide

1163
00:49:05,599 --> 00:49:07,280
so we looked at a number of solutions to

1164
00:49:07,280 --> 00:49:09,280
this um and one that i left out of the

1165
00:49:09,280 --> 00:49:11,839
slide and i'll start with is

1166
00:49:11,839 --> 00:49:13,839
having the switch itself look at the

1167
00:49:13,839 --> 00:49:16,240
ipv6

1168
00:49:16,240 --> 00:49:19,880
address but rfc i think it's

1169
00:49:19,880 --> 00:49:21,440
4541

1170
00:49:21,440 --> 00:49:22,880
talks about

1171
00:49:22,880 --> 00:49:24,800
kind of gives an overview of multicast

1172
00:49:24,800 --> 00:49:26,640
snooping and there's a survey survey

1173
00:49:26,640 --> 00:49:28,079
that they did of the

1174
00:49:28,079 --> 00:49:31,760
various vendors and um

1175
00:49:31,760 --> 00:49:34,160
most vendors are not looking at the

1176
00:49:34,160 --> 00:49:37,119
ipv6 address when they're

1177
00:49:37,119 --> 00:49:39,040
making switching decisions

1178
00:49:39,040 --> 00:49:42,160
they're just looking at the mac address

1179
00:49:42,160 --> 00:49:44,640
so other solutions are source specific

1180
00:49:44,640 --> 00:49:46,720
multicast and that's not universally

1181
00:49:46,720 --> 00:49:49,200
supported by switch hardware

1182
00:49:49,200 --> 00:49:50,000
um

1183
00:49:50,000 --> 00:49:51,440
seems to be

1184
00:49:51,440 --> 00:49:52,559
more for

1185
00:49:52,559 --> 00:49:54,400
multicast going between

1186
00:49:54,400 --> 00:49:55,920
different networks

1187
00:49:55,920 --> 00:49:59,119
there's madcap which is discussed in rfc

1188
00:49:59,119 --> 00:50:02,079
2730 and this uses a central server to

1189
00:50:02,079 --> 00:50:04,720
allocate addresses which um and allocate

1190
00:50:04,720 --> 00:50:07,200
dynamic addresses which

1191
00:50:07,200 --> 00:50:09,760
would be a great solution in

1192
00:50:09,760 --> 00:50:11,599
many types of networks but for the

1193
00:50:11,599 --> 00:50:13,040
networks that we deal with we try to

1194
00:50:13,040 --> 00:50:15,440
avoid single points of failure

1195
00:50:15,440 --> 00:50:16,720
because

1196
00:50:16,720 --> 00:50:19,040
the environment we can operate in can be

1197
00:50:19,040 --> 00:50:21,200
pretty harsh sometimes

1198
00:50:21,200 --> 00:50:22,480
so

1199
00:50:22,480 --> 00:50:24,800
we could basically take this and

1200
00:50:24,800 --> 00:50:27,040
find a way to shoehorn it into the

1201
00:50:27,040 --> 00:50:29,200
protocol we could auto negotiate a

1202
00:50:29,200 --> 00:50:30,880
madcap server or provide some sort of

1203
00:50:30,880 --> 00:50:32,960
failover mechanism and provide a comment

1204
00:50:32,960 --> 00:50:35,760
format for lease databases

1205
00:50:35,760 --> 00:50:37,599
and that would be

1206
00:50:37,599 --> 00:50:40,640
probably fairly tailored to our solution

1207
00:50:40,640 --> 00:50:43,760
and not really usable by anybody else

1208
00:50:43,760 --> 00:50:45,680
at least not not easily and it wouldn't

1209
00:50:45,680 --> 00:50:48,480
be an easy way to do it anyway

1210
00:50:48,480 --> 00:50:50,000
there is a

1211
00:50:50,000 --> 00:50:51,440
another protocol

1212
00:50:51,440 --> 00:50:54,720
that's in a draft called zmapp

1213
00:50:54,720 --> 00:50:56,800
which is i think zero configure

1214
00:50:56,800 --> 00:50:59,680
zeroconf multicast address

1215
00:50:59,680 --> 00:51:01,680
allocation protocol

1216
00:51:01,680 --> 00:51:03,760
never published the draft expired in

1217
00:51:03,760 --> 00:51:06,319
2003

1218
00:51:06,319 --> 00:51:08,960
and there's a a lot of things that are

1219
00:51:08,960 --> 00:51:10,720
missing from it uh specifically the

1220
00:51:10,720 --> 00:51:15,040
addresses and ports are listed as tbd

1221
00:51:15,040 --> 00:51:18,160
uh next slide um yeah good question sure

1222
00:51:18,160 --> 00:51:21,280
yeah uh lenny giovano um juniper

1223
00:51:21,280 --> 00:51:23,839
um

1224
00:51:23,920 --> 00:51:26,319
how how are the receivers

1225
00:51:26,319 --> 00:51:28,240
uh expressing they're trying to join are

1226
00:51:28,240 --> 00:51:31,920
they just sending standard igmp or mld

1227
00:51:31,920 --> 00:51:34,960
reports or is there some other protocol

1228
00:51:34,960 --> 00:51:36,480
yes they're they're using the standard

1229
00:51:36,480 --> 00:51:39,599
igmp or nld reports okay and you say

1230
00:51:39,599 --> 00:51:41,760
search specific multicast is uh it's not

1231
00:51:41,760 --> 00:51:44,160
uni ssm isn't universally supported by

1232
00:51:44,160 --> 00:51:46,880
uh switch hardware what's specific

1233
00:51:46,880 --> 00:51:49,680
is it like mlbv2 is not supported on

1234
00:51:49,680 --> 00:51:50,800
hardware

1235
00:51:50,800 --> 00:51:53,440
what what parts of ssm is it well it's

1236
00:51:53,440 --> 00:51:55,119
mainly the um

1237
00:51:55,119 --> 00:51:56,960
the tables that they they use to make

1238
00:51:56,960 --> 00:51:59,200
decisions as far as which addresses are

1239
00:51:59,200 --> 00:52:00,800
forwarded to

1240
00:52:00,800 --> 00:52:04,079
which ports don't have any sort of entry

1241
00:52:04,079 --> 00:52:06,000
database entry there for the source

1242
00:52:06,000 --> 00:52:07,520
address it's all focused on the

1243
00:52:07,520 --> 00:52:09,839
destination address so if you look at

1244
00:52:09,839 --> 00:52:10,960
the

1245
00:52:10,960 --> 00:52:13,200
the vector and the address translation

1246
00:52:13,200 --> 00:52:15,520
unit there's basically one vector which

1247
00:52:15,520 --> 00:52:16,240
is

1248
00:52:16,240 --> 00:52:18,079
a bit field that says these are the

1249
00:52:18,079 --> 00:52:20,160
ports that this address is on and then

1250
00:52:20,160 --> 00:52:22,400
there's another um buffer for what the

1251
00:52:22,400 --> 00:52:25,200
multicast the destination address is

1252
00:52:25,200 --> 00:52:26,720
and that's that's basically it there's a

1253
00:52:26,720 --> 00:52:28,319
couple of other things in there but you

1254
00:52:28,319 --> 00:52:30,079
would expect there to be some sort of

1255
00:52:30,079 --> 00:52:32,240
entry there for the source filter out by

1256
00:52:32,240 --> 00:52:33,839
the source but even then we're looking

1257
00:52:33,839 --> 00:52:37,040
at the source mac address not the source

1258
00:52:37,040 --> 00:52:39,119
ip address so if you're looking at

1259
00:52:39,119 --> 00:52:40,640
something where it's coming in from

1260
00:52:40,640 --> 00:52:42,800
another network

1261
00:52:42,800 --> 00:52:44,160
you would then find yourself having to

1262
00:52:44,160 --> 00:52:47,200
put in the source address of the router

1263
00:52:47,200 --> 00:52:49,520
so it gets wool

1264
00:52:49,520 --> 00:52:51,440
this snooping mechanism used by the

1265
00:52:51,440 --> 00:52:54,720
switches is that just plain old mld

1266
00:52:54,720 --> 00:52:58,160
snipping or something else

1267
00:52:58,160 --> 00:53:00,960
sorry that this the snooping mechanism

1268
00:53:00,960 --> 00:53:03,599
used by the switches to determine

1269
00:53:03,599 --> 00:53:04,960
uh

1270
00:53:04,960 --> 00:53:08,160
if a port has an interested receiver and

1271
00:53:08,160 --> 00:53:10,160
block it otherwise

1272
00:53:10,160 --> 00:53:13,599
is that just standard mld snooping or is

1273
00:53:13,599 --> 00:53:15,760
it something else yeah it's basically

1274
00:53:15,760 --> 00:53:18,480
standard what we find is that the

1275
00:53:18,480 --> 00:53:20,480
switch part itself provides a

1276
00:53:20,480 --> 00:53:23,760
functionality where it recognizes an mld

1277
00:53:23,760 --> 00:53:26,800
or igmp message and it'll forward that

1278
00:53:26,800 --> 00:53:29,280
up to a cpu

1279
00:53:29,280 --> 00:53:31,280
and then the cpu reads that and says

1280
00:53:31,280 --> 00:53:33,040
okay well based on this i've got

1281
00:53:33,040 --> 00:53:34,640
somebody interested in this data on this

1282
00:53:34,640 --> 00:53:36,720
this port so now i've got to modify that

1283
00:53:36,720 --> 00:53:38,960
entry in the address table to forward

1284
00:53:38,960 --> 00:53:41,040
traffic onto that port so there's this

1285
00:53:41,040 --> 00:53:42,559
partnership between the switch part and

1286
00:53:42,559 --> 00:53:44,640
the cpu itself

1287
00:53:44,640 --> 00:53:47,040
now maybe other switch parts kind of do

1288
00:53:47,040 --> 00:53:49,200
all that for you or maybe include a cpu

1289
00:53:49,200 --> 00:53:51,520
on there

1290
00:53:51,680 --> 00:53:54,640
so so just uh it's basically doing mld

1291
00:53:54,640 --> 00:53:55,680
snooping

1292
00:53:55,680 --> 00:53:57,359
but uh

1293
00:53:57,359 --> 00:53:59,440
it doesn't it can't look at the source

1294
00:53:59,440 --> 00:54:00,800
it can only look at the group address is

1295
00:54:00,800 --> 00:54:02,800
that the the issue that's right yeah so

1296
00:54:02,800 --> 00:54:05,200
it's sorry but yeah so it's more like a

1297
00:54:05,200 --> 00:54:06,640
more or less hardware

1298
00:54:06,640 --> 00:54:08,720
issue where you are capable of filtering

1299
00:54:08,720 --> 00:54:10,559
the source or not i guess

1300
00:54:10,559 --> 00:54:12,000
right right so

1301
00:54:12,000 --> 00:54:14,000
so wait a second so if you if you are

1302
00:54:14,000 --> 00:54:17,280
only doing tourism

1303
00:54:18,880 --> 00:54:20,880
i was missing completely where the

1304
00:54:20,880 --> 00:54:23,760
problem is right so

1305
00:54:23,760 --> 00:54:26,400
are you doing asm or ssm if you're doing

1306
00:54:26,400 --> 00:54:27,839
asm

1307
00:54:27,839 --> 00:54:30,000
you basically are saying that you know

1308
00:54:30,000 --> 00:54:32,079
everybody uh that is interested in the

1309
00:54:32,079 --> 00:54:33,760
group receives it from all the sources

1310
00:54:33,760 --> 00:54:35,440
if that's not what you want you need to

1311
00:54:35,440 --> 00:54:37,359
use ssm but

1312
00:54:37,359 --> 00:54:39,200
it's

1313
00:54:39,200 --> 00:54:40,720
right yeah so

1314
00:54:40,720 --> 00:54:42,799
we looked at instead of just repeating

1315
00:54:42,799 --> 00:54:43,920
all the things we've done through

1316
00:54:43,920 --> 00:54:46,319
history

1317
00:54:48,799 --> 00:54:51,359
no it's this is a question about what

1318
00:54:51,359 --> 00:54:53,280
degree of hardware capabilities do you

1319
00:54:53,280 --> 00:54:55,040
need in the layer to switch

1320
00:54:55,040 --> 00:54:56,640
for the snooping part

1321
00:54:56,640 --> 00:54:58,559
right that seems what it's boiling down

1322
00:54:58,559 --> 00:55:02,720
to uh that could be um

1323
00:55:04,720 --> 00:55:06,720
right but i what what are you trying to

1324
00:55:06,720 --> 00:55:08,559
do the the use case that you explained

1325
00:55:08,559 --> 00:55:11,440
said that only the the folks interested

1326
00:55:11,440 --> 00:55:13,200
uh in something join a group so that's

1327
00:55:13,200 --> 00:55:15,920
asm is that what's sufficient right so

1328
00:55:15,920 --> 00:55:17,200
if you're joining the group you're only

1329
00:55:17,200 --> 00:55:18,559
getting the traffic for that group is

1330
00:55:18,559 --> 00:55:21,200
that sufficient for you um that that

1331
00:55:21,200 --> 00:55:22,880
would be sufficient yes okay and what's

1332
00:55:22,880 --> 00:55:24,319
not working about that

1333
00:55:24,319 --> 00:55:25,920
uh what's not working is that we don't

1334
00:55:25,920 --> 00:55:27,680
have a good way of

1335
00:55:27,680 --> 00:55:29,760
allocating those multicast addresses

1336
00:55:29,760 --> 00:55:31,680
dynamically assigning them in a zero

1337
00:55:31,680 --> 00:55:34,000
configuration environment

1338
00:55:34,000 --> 00:55:36,319
and what's what's the most simple use

1339
00:55:36,319 --> 00:55:38,400
case where i can see how dynamic

1340
00:55:38,400 --> 00:55:40,319
assignment would be necessary

1341
00:55:40,319 --> 00:55:43,040
um the earlier diagrams where we have a

1342
00:55:43,040 --> 00:55:44,559
the earlier diagrams where we have a

1343
00:55:44,559 --> 00:55:46,559
high speed sensor and a low speed sensor

1344
00:55:46,559 --> 00:55:48,480
connected to the same network

1345
00:55:48,480 --> 00:55:49,920
we want to have different speeds of

1346
00:55:49,920 --> 00:55:51,040
traffic

1347
00:55:51,040 --> 00:55:52,720
only be directed to the ports for

1348
00:55:52,720 --> 00:55:56,720
sensors or devices that can handle that

1349
00:55:58,559 --> 00:56:00,640
but

1350
00:56:00,640 --> 00:56:02,319
give me another example where you're

1351
00:56:02,319 --> 00:56:04,640
doing anything similar and you're not

1352
00:56:04,640 --> 00:56:06,400
relying on pre-allocated static

1353
00:56:06,400 --> 00:56:08,079
addressing

1354
00:56:08,079 --> 00:56:09,680
i mean that's that's basically what most

1355
00:56:09,680 --> 00:56:11,599
everybody uses and somehow we've

1356
00:56:11,599 --> 00:56:14,079
survived three decades with that and

1357
00:56:14,079 --> 00:56:15,680
we're all happy that this stuff in the

1358
00:56:15,680 --> 00:56:18,160
90s didn't get adopted because everybody

1359
00:56:18,160 --> 00:56:20,480
figured out some easy scheme to use you

1360
00:56:20,480 --> 00:56:22,559
know static address allocation or other

1361
00:56:22,559 --> 00:56:24,480
uh workarounds on these protocols and

1362
00:56:24,480 --> 00:56:27,280
people have wasted 300 pages of

1363
00:56:27,280 --> 00:56:30,400
wonderful documents about this

1364
00:56:30,400 --> 00:56:32,160
right right so no i'm just i'm just

1365
00:56:32,160 --> 00:56:34,000
saying in terms of

1366
00:56:34,000 --> 00:56:35,680
if we want to bring any of this stuff

1367
00:56:35,680 --> 00:56:37,520
back for the dynamic allocation i'm

1368
00:56:37,520 --> 00:56:39,280
trying to explain the history that we

1369
00:56:39,280 --> 00:56:41,760
had 30 years people of giving up on the

1370
00:56:41,760 --> 00:56:42,799
idea

1371
00:56:42,799 --> 00:56:44,799
and coming up with simple pragmatic um

1372
00:56:44,799 --> 00:56:46,319
you know static address allocation

1373
00:56:46,319 --> 00:56:48,480
management seems and we have published a

1374
00:56:48,480 --> 00:56:51,280
lot of uh rfcs about that as well right

1375
00:56:51,280 --> 00:56:52,000
so

1376
00:56:52,000 --> 00:56:55,280
i'm trying to answer to him

1377
00:56:56,240 --> 00:56:58,799
yeah no so that's a good question um

1378
00:56:58,799 --> 00:57:00,640
i mean i think that's probably a fair

1379
00:57:00,640 --> 00:57:03,359
thing to require somebody that's um

1380
00:57:03,359 --> 00:57:04,960
installing a network on a big tanker

1381
00:57:04,960 --> 00:57:07,359
ship but a lot of the users that we have

1382
00:57:07,359 --> 00:57:08,559
um are

1383
00:57:08,559 --> 00:57:10,480
we can fishermen they don't understand

1384
00:57:10,480 --> 00:57:12,720
anything about networks and so we try to

1385
00:57:12,720 --> 00:57:14,559
take care of as much of that as as

1386
00:57:14,559 --> 00:57:16,480
possible for them

1387
00:57:16,480 --> 00:57:18,160
these are all standalone networks so

1388
00:57:18,160 --> 00:57:20,240
every stuff that's being deployed is

1389
00:57:20,240 --> 00:57:22,160
going to be running in a separate

1390
00:57:22,160 --> 00:57:24,799
instance of itself which is why you can

1391
00:57:24,799 --> 00:57:26,720
very easily you know

1392
00:57:26,720 --> 00:57:28,799
come up with deployment profiles that

1393
00:57:28,799 --> 00:57:30,960
say okay this the equipment by default

1394
00:57:30,960 --> 00:57:32,640
unless you configure it differently will

1395
00:57:32,640 --> 00:57:36,319
use the following you know addresses

1396
00:57:36,559 --> 00:57:37,599
that i mean

1397
00:57:37,599 --> 00:57:38,640
would i

1398
00:57:38,640 --> 00:57:40,799
are you suggesting that

1399
00:57:40,799 --> 00:57:43,520
everybody is is hard coding multicast

1400
00:57:43,520 --> 00:57:45,839
addresses into their applications and

1401
00:57:45,839 --> 00:57:47,760
everybody gets problems with doing that

1402
00:57:47,760 --> 00:57:49,440
once you get into larger networks you

1403
00:57:49,440 --> 00:57:51,040
don't have larger networks you have

1404
00:57:51,040 --> 00:57:53,280
something very well predictable in terms

1405
00:57:53,280 --> 00:57:54,880
of you know how much equipment that

1406
00:57:54,880 --> 00:57:56,400
needs how many different speeds so you

1407
00:57:56,400 --> 00:57:58,400
come up with an address plan we can

1408
00:57:58,400 --> 00:58:00,079
consult on that perfectly well and that

1409
00:58:00,079 --> 00:58:02,160
gets hard-coded into the devices that's

1410
00:58:02,160 --> 00:58:04,000
what everybody's been doing and and that

1411
00:58:04,000 --> 00:58:06,480
guy has probably been answering you know

1412
00:58:06,480 --> 00:58:08,480
hundreds of these requests for specific

1413
00:58:08,480 --> 00:58:10,960
addresses on on the on the i

1414
00:58:10,960 --> 00:58:13,839
in the side right

1415
00:58:13,920 --> 00:58:14,960
well

1416
00:58:14,960 --> 00:58:17,200
i i disagree with that every network is

1417
00:58:17,200 --> 00:58:20,079
the same boats are wildly different

1418
00:58:20,079 --> 00:58:22,400
right but the question is you know the

1419
00:58:22,400 --> 00:58:24,000
the classical approach would be to sit

1420
00:58:24,000 --> 00:58:26,720
down and figure out if a static address

1421
00:58:26,720 --> 00:58:29,119
allocation that foresees all the known

1422
00:58:29,119 --> 00:58:31,599
possibilities right um would be

1423
00:58:31,599 --> 00:58:34,640
sufficient to solve the problem

1424
00:58:34,640 --> 00:58:36,960
my opinion is that it would not be

1425
00:58:36,960 --> 00:58:39,520
i don't think it would be right but

1426
00:58:39,520 --> 00:58:41,280
that's that's the point that one needs

1427
00:58:41,280 --> 00:58:43,599
to get to to have justification not to

1428
00:58:43,599 --> 00:58:46,799
just do the in my opinion obvious which

1429
00:58:46,799 --> 00:58:49,200
as i think most everybody has done right

1430
00:58:49,200 --> 00:58:51,119
if somebody really comes to the point of

1431
00:58:51,119 --> 00:58:53,599
figure out i need a dynamic allocation

1432
00:58:53,599 --> 00:58:55,839
then it's most likely these days going

1433
00:58:55,839 --> 00:58:57,280
to be some some more you know

1434
00:58:57,280 --> 00:58:59,280
application side with a controller stuff

1435
00:58:59,280 --> 00:59:00,000
than

1436
00:59:00,000 --> 00:59:02,880
trying to rely on network protocols

1437
00:59:02,880 --> 00:59:04,720
i mean i think the same argument

1438
00:59:04,720 --> 00:59:06,160
argument could be made for assigning

1439
00:59:06,160 --> 00:59:08,960
addresses to individual nodes

1440
00:59:08,960 --> 00:59:10,400
right at some point somebody said why

1441
00:59:10,400 --> 00:59:12,160
don't we just assign static addresses to

1442
00:59:12,160 --> 00:59:14,319
everything and somebody else said well

1443
00:59:14,319 --> 00:59:16,079
it makes more sense to have a

1444
00:59:16,079 --> 00:59:19,839
dhcp server yeah or link local addresses

1445
00:59:19,839 --> 00:59:22,559
right so i'm saying this that same thing

1446
00:59:22,559 --> 00:59:24,240
applies here also to destination

1447
00:59:24,240 --> 00:59:26,720
multicast addresses

1448
00:59:26,720 --> 00:59:29,440
all right yeah okay yeah so human next

1449
00:59:29,440 --> 00:59:31,119
and then we have three more people in

1450
00:59:31,119 --> 00:59:32,559
line afterwards

1451
00:59:32,559 --> 00:59:34,720
just to give you an example uh

1452
00:59:34,720 --> 00:59:36,400
like we have the same type of issues

1453
00:59:36,400 --> 00:59:38,000
with iptv

1454
00:59:38,000 --> 00:59:42,240
we got 480 streams 1080 streams etc etc

1455
00:59:42,240 --> 00:59:45,119
so uh maybe this is useful to you folks

1456
00:59:45,119 --> 00:59:47,680
too we use zero touch provisioning

1457
00:59:47,680 --> 00:59:50,160
to download the configuration to the to

1458
00:59:50,160 --> 00:59:51,520
the router

1459
00:59:51,520 --> 00:59:54,079
as it was mentioned we use a static

1460
00:59:54,079 --> 00:59:56,880
multicast addressing via the zero touch

1461
00:59:56,880 --> 00:59:58,960
so when you download the configuration

1462
00:59:58,960 --> 01:00:01,280
the static multicast is within the

1463
01:00:01,280 --> 01:00:03,359
configuration saying that

1464
01:00:03,359 --> 01:00:05,440
anything coming from this interface

1465
01:00:05,440 --> 01:00:07,359
needs to go to a source that is 480

1466
01:00:07,359 --> 01:00:09,280
anything coming from that interface

1467
01:00:09,280 --> 01:00:11,680
needs to go to a source that is 1080.

1468
01:00:11,680 --> 01:00:13,119
i don't know it's going to be useful to

1469
01:00:13,119 --> 01:00:14,480
you folks but you know just to give you

1470
01:00:14,480 --> 01:00:16,240
an example how

1471
01:00:16,240 --> 01:00:19,760
we kind of mitigate these kind of issues

1472
01:00:19,760 --> 01:00:22,720
is it that you have like um

1473
01:00:22,720 --> 01:00:24,400
do you work with another

1474
01:00:24,400 --> 01:00:26,079
like a server to

1475
01:00:26,079 --> 01:00:27,520
kind of upload your configuration and

1476
01:00:27,520 --> 01:00:28,960
then it configures it for you and you

1477
01:00:28,960 --> 01:00:30,319
download that

1478
01:00:30,319 --> 01:00:32,640
yeah so zero touch provisioning what

1479
01:00:32,640 --> 01:00:34,480
what it is is uh

1480
01:00:34,480 --> 01:00:36,960
unicast comes up and you do a dhcp

1481
01:00:36,960 --> 01:00:41,040
discovery to get your router ip address

1482
01:00:41,040 --> 01:00:43,760
and then based on a bunch of dhcp

1483
01:00:43,760 --> 01:00:45,520
options

1484
01:00:45,520 --> 01:00:48,240
you go get your configuration like in a

1485
01:00:48,240 --> 01:00:52,000
dhcp option 61 you say that hey i am

1486
01:00:52,000 --> 01:00:53,200
this router

1487
01:00:53,200 --> 01:00:55,119
with my mac address and you get the

1488
01:00:55,119 --> 01:00:57,359
configuration specifically for that

1489
01:00:57,359 --> 01:01:00,000
router and then the provider

1490
01:01:00,000 --> 01:01:02,000
since it knows this router is sitting in

1491
01:01:02,000 --> 01:01:05,119
los angeles as an example it knows that

1492
01:01:05,119 --> 01:01:07,680
interface one two three those are four

1493
01:01:07,680 --> 01:01:09,040
idea streams

1494
01:01:09,040 --> 01:01:12,000
interface 567 those are like 1080 or 4k

1495
01:01:12,000 --> 01:01:15,280
streams and it can assign the the the

1496
01:01:15,280 --> 01:01:17,760
source addresses accordingly as a static

1497
01:01:17,760 --> 01:01:21,359
multicast address to to those interfaces

1498
01:01:21,359 --> 01:01:23,280
okay it seems to be a scaling nicely i

1499
01:01:23,280 --> 01:01:25,760
mean that scales for ip tv but just to

1500
01:01:25,760 --> 01:01:27,119
give you an example

1501
01:01:27,119 --> 01:01:30,319
yeah no i mean i think what's um

1502
01:01:30,319 --> 01:01:32,240
what we would try to avoid about that is

1503
01:01:32,240 --> 01:01:34,480
having a dhcp server because again that

1504
01:01:34,480 --> 01:01:35,839
that represents a single point of

1505
01:01:35,839 --> 01:01:38,240
failure now that the i mean that's

1506
01:01:38,240 --> 01:01:39,680
certainly an interesting idea in that

1507
01:01:39,680 --> 01:01:40,559
you

1508
01:01:40,559 --> 01:01:43,119
um you have some some point in time

1509
01:01:43,119 --> 01:01:45,440
where you configure everything

1510
01:01:45,440 --> 01:01:47,280
and everybody chooses that address and

1511
01:01:47,280 --> 01:01:49,359
stays stays with that address

1512
01:01:49,359 --> 01:01:51,680
and that's certainly um

1513
01:01:51,680 --> 01:01:54,720
yeah that that makes sense

1514
01:01:55,839 --> 01:01:58,640
uh even can even negotiating what those

1515
01:01:58,640 --> 01:02:00,799
addresses are are a protocol

1516
01:02:00,799 --> 01:02:03,039
we have a few people in line but yeah if

1517
01:02:03,039 --> 01:02:05,760
you have a quick comment or

1518
01:02:05,760 --> 01:02:08,559
a 30 how about rfc 3306 i'm not sure if

1519
01:02:08,559 --> 01:02:10,079
you mentioned that i think you said 30

1520
01:02:10,079 --> 01:02:13,280
307 but isn't that exactly what would

1521
01:02:13,280 --> 01:02:15,920
work here it's just uh

1522
01:02:15,920 --> 01:02:17,359
it's that you know

1523
01:02:17,359 --> 01:02:18,480
you can

1524
01:02:18,480 --> 01:02:20,720
derive a multicast address from a

1525
01:02:20,720 --> 01:02:22,400
unicast address

1526
01:02:22,400 --> 01:02:24,720
in basics right so the problem with that

1527
01:02:24,720 --> 01:02:26,640
is is once you do

1528
01:02:26,640 --> 01:02:27,680
um

1529
01:02:27,680 --> 01:02:29,359
have that that

1530
01:02:29,359 --> 01:02:31,680
unique ipv6 multicast address when you

1531
01:02:31,680 --> 01:02:34,799
go to transmit that on ethernet

1532
01:02:34,799 --> 01:02:37,359
the group id part

1533
01:02:37,359 --> 01:02:39,839
is not unique on the network the

1534
01:02:39,839 --> 01:02:41,680
interface id is unique on the network

1535
01:02:41,680 --> 01:02:44,000
and that's 64 bits

1536
01:02:44,000 --> 01:02:46,400
but the group id the lower 32 bits

1537
01:02:46,400 --> 01:02:48,720
multiple devices could basically

1538
01:02:48,720 --> 01:02:50,960
choose the same group id thinking i'm

1539
01:02:50,960 --> 01:02:53,280
guaranteed to have a unique multicast

1540
01:02:53,280 --> 01:02:54,720
address and it would be unique from at

1541
01:02:54,720 --> 01:02:57,039
the ip layer but at the ethernet layer

1542
01:02:57,039 --> 01:03:00,079
they would collide with each other

1543
01:03:00,079 --> 01:03:01,680
and that's that's what these switch

1544
01:03:01,680 --> 01:03:03,440
parts are looking at is the mac address

1545
01:03:03,440 --> 01:03:05,359
not the ipv6 address

1546
01:03:05,359 --> 01:03:09,599
according to rc 4541

1547
01:03:09,599 --> 01:03:10,960
do you know the

1548
01:03:10,960 --> 01:03:13,359
comments

1549
01:03:14,839 --> 01:03:16,400
um

1550
01:03:16,400 --> 01:03:17,680
so um

1551
01:03:17,680 --> 01:03:19,359
your presentation was really good by the

1552
01:03:19,359 --> 01:03:21,359
way and you were really well prepared

1553
01:03:21,359 --> 01:03:22,880
and did a lot of research on all the

1554
01:03:22,880 --> 01:03:25,599
puzzle mechanisms so thanks for that um

1555
01:03:25,599 --> 01:03:27,200
but i want to wait to the you finish are

1556
01:03:27,200 --> 01:03:28,960
you are you done with your presentation

1557
01:03:28,960 --> 01:03:31,599
or you still have more

1558
01:03:31,599 --> 01:03:35,039
oh yeah yeah there's still more actually

1559
01:03:35,039 --> 01:03:37,119
yeah so

1560
01:03:37,119 --> 01:03:38,960
whenever i mean i have some proposals

1561
01:03:38,960 --> 01:03:40,240
but if you have some other questions to

1562
01:03:40,240 --> 01:03:41,839
kind of well i have a i have a really

1563
01:03:41,839 --> 01:03:43,680
simple solution but i wanted to ask you

1564
01:03:43,680 --> 01:03:45,039
some questions about your deployment

1565
01:03:45,039 --> 01:03:46,799
first okay but should we wait to the end

1566
01:03:46,799 --> 01:03:48,160
of your presentation

1567
01:03:48,160 --> 01:03:51,280
seriously probably okay um just just

1568
01:03:51,280 --> 01:03:53,599
yeah i took care of a few more people

1569
01:03:53,599 --> 01:03:55,599
okay i just wanted to say i didn't want

1570
01:03:55,599 --> 01:03:57,760
to sound dismissive right so i'm happy

1571
01:03:57,760 --> 01:04:00,240
to help as well with this um it's just

1572
01:04:00,240 --> 01:04:01,680
that you know

1573
01:04:01,680 --> 01:04:03,760
when people think about the solution

1574
01:04:03,760 --> 01:04:05,520
they come up with these things oh no i

1575
01:04:05,520 --> 01:04:06,880
don't know the address i need to learn

1576
01:04:06,880 --> 01:04:08,880
the address and the question is okay how

1577
01:04:08,880 --> 01:04:10,079
do you learn the address well i have a

1578
01:04:10,079 --> 01:04:12,000
name okay how do you learn the name when

1579
01:04:12,000 --> 01:04:14,079
you know the name you can equally you

1580
01:04:14,079 --> 01:04:14,799
know

1581
01:04:14,799 --> 01:04:17,119
have an address right so that's why a

1582
01:04:17,119 --> 01:04:19,039
lot of these pragmatic solutions come up

1583
01:04:19,039 --> 01:04:20,640
once you go through the different steps

1584
01:04:20,640 --> 01:04:22,400
of the design process

1585
01:04:22,400 --> 01:04:23,760
right um

1586
01:04:23,760 --> 01:04:25,440
and and that's what i was trying to

1587
01:04:25,440 --> 01:04:26,880
shortcut but yeah it's a little bit

1588
01:04:26,880 --> 01:04:30,720
longer explanation typically okay

1589
01:04:30,720 --> 01:04:32,960
okay so

1590
01:04:32,960 --> 01:04:35,839
yeah i i mean i'm yeah i'm in line also

1591
01:04:35,839 --> 01:04:39,359
but okay as a participant um

1592
01:04:39,359 --> 01:04:42,160
so it sounds to me like like discovery

1593
01:04:42,160 --> 01:04:43,920
is like important to you right you need

1594
01:04:43,920 --> 01:04:46,640
some kind of discovery mechanism

1595
01:04:46,640 --> 01:04:48,799
so ssm would probably not work right

1596
01:04:48,799 --> 01:04:50,000
because you

1597
01:04:50,000 --> 01:04:52,079
how would you know the source address or

1598
01:04:52,079 --> 01:04:54,799
would can you see some way so

1599
01:04:54,799 --> 01:04:56,480
yeah the so the protocol that we're

1600
01:04:56,480 --> 01:04:58,799
working with uses mdns as a discovery

1601
01:04:58,799 --> 01:05:00,960
mechanism for a lot of the services um

1602
01:05:00,960 --> 01:05:03,280
and then oftentimes that will

1603
01:05:03,280 --> 01:05:05,599
lead into some sort of rest api that

1604
01:05:05,599 --> 01:05:07,599
publishes these or might publish it as

1605
01:05:07,599 --> 01:05:09,440
part of a text record but for the

1606
01:05:09,440 --> 01:05:11,599
purposes of this we kind of consider

1607
01:05:11,599 --> 01:05:14,480
that kind of out of scope of dynamic

1608
01:05:14,480 --> 01:05:16,400
assignment although we certainly

1609
01:05:16,400 --> 01:05:18,000
wouldn't be against including that in

1610
01:05:18,000 --> 01:05:20,079
whatever solution

1611
01:05:20,079 --> 01:05:23,760
we eventually arrive at right

1612
01:05:23,760 --> 01:05:25,119
um

1613
01:05:25,119 --> 01:05:27,680
so yeah you could potentially use

1614
01:05:27,680 --> 01:05:30,240
maybe ssm for the actual

1615
01:05:30,240 --> 01:05:32,079
data traffic but you need some way of

1616
01:05:32,079 --> 01:05:33,920
discovering

1617
01:05:33,920 --> 01:05:37,119
what the user is well even then um

1618
01:05:37,119 --> 01:05:38,799
i i don't think the problem is that we

1619
01:05:38,799 --> 01:05:41,039
couldn't discover the different sources

1620
01:05:41,039 --> 01:05:42,799
i think the problem is that the hardware

1621
01:05:42,799 --> 01:05:45,200
doesn't support okay filtering based off

1622
01:05:45,200 --> 01:05:46,640
of the sources

1623
01:05:46,640 --> 01:05:48,240
right so yeah i know you said you know

1624
01:05:48,240 --> 01:05:49,359
that you

1625
01:05:49,359 --> 01:05:51,920
want some not some devices could handle

1626
01:05:51,920 --> 01:05:53,920
the higher bandwidth so it's important

1627
01:05:53,920 --> 01:05:57,520
that right filter yeah okay okay thanks

1628
01:05:57,520 --> 01:06:00,160
um okay got one more

1629
01:06:00,160 --> 01:06:02,880
uh in line and just to be clear when i

1630
01:06:02,880 --> 01:06:04,319
say the hardware i'm meaning this the

1631
01:06:04,319 --> 01:06:06,240
switch hardware itself the actual nodes

1632
01:06:06,240 --> 01:06:08,000
of course

1633
01:06:08,000 --> 01:06:10,720
the link couldn't handle the speed

1634
01:06:10,720 --> 01:06:12,240
we're kind of assuming that the device

1635
01:06:12,240 --> 01:06:14,240
itself may have some sort of mechanism

1636
01:06:14,240 --> 01:06:15,760
in there to filter

1637
01:06:15,760 --> 01:06:19,440
um based off of the destination address

1638
01:06:19,440 --> 01:06:21,200
okay yeah

1639
01:06:21,200 --> 01:06:22,960
um yeah

1640
01:06:22,960 --> 01:06:26,359
go ahead shoojong

1641
01:06:32,720 --> 01:06:34,799
hi can you hear me

1642
01:06:34,799 --> 01:06:36,559
yep

1643
01:06:36,559 --> 01:06:38,480
oh thank you thank you nate i think this

1644
01:06:38,480 --> 01:06:40,480
is an interesting topic

1645
01:06:40,480 --> 01:06:43,119
my question is not about the uh whether

1646
01:06:43,119 --> 01:06:44,079
we

1647
01:06:44,079 --> 01:06:46,720
need a solution about dynamic

1648
01:06:46,720 --> 01:06:49,440
multicast address allocation i'm more

1649
01:06:49,440 --> 01:06:51,920
interested in the scenario itself

1650
01:06:51,920 --> 01:06:54,880
do you know the exact how many sensors

1651
01:06:54,880 --> 01:06:57,599
and displays will be there in this

1652
01:06:57,599 --> 01:06:58,839
multicast

1653
01:06:58,839 --> 01:07:01,680
domain i think the the picture showed in

1654
01:07:01,680 --> 01:07:06,319
page two or three if i remember it right

1655
01:07:06,640 --> 01:07:09,680
sure yeah good question so um

1656
01:07:09,680 --> 01:07:11,200
we're we're looking to support things

1657
01:07:11,200 --> 01:07:13,680
that can be very very small just one

1658
01:07:13,680 --> 01:07:15,839
display and and one sensor

1659
01:07:15,839 --> 01:07:17,440
um to

1660
01:07:17,440 --> 01:07:19,599
potentially hundreds of

1661
01:07:19,599 --> 01:07:20,640
sensors

1662
01:07:20,640 --> 01:07:22,319
um you know you can imagine a container

1663
01:07:22,319 --> 01:07:24,160
ship might want to have different

1664
01:07:24,160 --> 01:07:25,280
um

1665
01:07:25,280 --> 01:07:26,640
sensors throughout

1666
01:07:26,640 --> 01:07:28,960
the the boat

1667
01:07:28,960 --> 01:07:31,280
temperature sensors depth sensors all

1668
01:07:31,280 --> 01:07:34,880
that type type of stuff so

1669
01:07:35,119 --> 01:07:37,119
basically a lot of flexibility and where

1670
01:07:37,119 --> 01:07:40,559
the so the number

1671
01:07:41,440 --> 01:07:42,880
the i mean the number could be anything

1672
01:07:42,880 --> 01:07:46,799
from this dude so the number of the

1673
01:07:50,079 --> 01:07:52,480
okay so actually i'm more interested how

1674
01:07:52,480 --> 01:07:54,839
many numbers about these these

1675
01:07:54,839 --> 01:07:56,960
players it

1676
01:07:56,960 --> 01:07:59,839
will will there be a lot of displays or

1677
01:07:59,839 --> 01:08:02,319
just several because we

1678
01:08:02,319 --> 01:08:04,480
ask the the question about the scenario

1679
01:08:04,480 --> 01:08:07,200
because we have met similar uh use cases

1680
01:08:07,200 --> 01:08:08,880
in enterprise so i think the scale

1681
01:08:08,880 --> 01:08:11,280
coyote also matters

1682
01:08:11,280 --> 01:08:14,559
how to solve the problem

1683
01:08:18,880 --> 01:08:22,399
yeah so nate's going to share some

1684
01:08:22,399 --> 01:08:23,920
solutions that he thinks as some

1685
01:08:23,920 --> 01:08:25,600
potential

1686
01:08:25,600 --> 01:08:27,839
scenarios so yeah why don't we let nate

1687
01:08:27,839 --> 01:08:30,000
do that now

1688
01:08:30,000 --> 01:08:31,920
okay next slide

1689
01:08:31,920 --> 01:08:36,158
so um right through okay okay thank you

1690
01:08:36,799 --> 01:08:39,839
i read through the uh the z map um

1691
01:08:39,839 --> 01:08:41,759
draft um and it's it's a really good

1692
01:08:41,759 --> 01:08:43,920
starting point um it has some things in

1693
01:08:43,920 --> 01:08:44,960
there like

1694
01:08:44,960 --> 01:08:46,880
um

1695
01:08:46,880 --> 01:08:48,319
querying for

1696
01:08:48,319 --> 01:08:50,319
uh addresses to see if they're being

1697
01:08:50,319 --> 01:08:51,279
used

1698
01:08:51,279 --> 01:08:54,000
um and in that regard it's similar to

1699
01:08:54,000 --> 01:08:55,839
what you would see with the uh the link

1700
01:08:55,839 --> 01:08:57,120
local

1701
01:08:57,120 --> 01:08:58,880
stateless address auto configuration

1702
01:08:58,880 --> 01:09:01,359
stuff so there's at um

1703
01:09:01,359 --> 01:09:03,040
basically queries this is actress and

1704
01:09:03,040 --> 01:09:04,799
use and then you have address and use

1705
01:09:04,799 --> 01:09:06,640
messages basically saying

1706
01:09:06,640 --> 01:09:09,920
don't use that i'm already using it

1707
01:09:09,920 --> 01:09:11,920
but there's a few other things that of

1708
01:09:11,920 --> 01:09:13,679
course that we need

1709
01:09:13,679 --> 01:09:16,238
addresses and ports right now those are

1710
01:09:16,238 --> 01:09:19,600
listed as tbd in the document

1711
01:09:19,600 --> 01:09:22,080
it wasn't quite clear whether it allowed

1712
01:09:22,080 --> 01:09:24,759
for multiple

1713
01:09:24,759 --> 01:09:26,399
maas

1714
01:09:26,399 --> 01:09:28,000
that stands for multicast address

1715
01:09:28,000 --> 01:09:30,880
assignment server i think

1716
01:09:30,880 --> 01:09:33,279
whether it allow for multiple

1717
01:09:33,279 --> 01:09:35,040
on on a host

1718
01:09:35,040 --> 01:09:37,520
i kind of got the impression that it it

1719
01:09:37,520 --> 01:09:40,000
only had a single one and i didn't see a

1720
01:09:40,000 --> 01:09:41,439
reason why you couldn't have multiple

1721
01:09:41,439 --> 01:09:43,839
but the um the environment that we're

1722
01:09:43,839 --> 01:09:46,719
operating in we we want to

1723
01:09:46,719 --> 01:09:48,799
allow for

1724
01:09:48,799 --> 01:09:50,640
um different applications running on the

1725
01:09:50,640 --> 01:09:53,279
same host to also coordinate with each

1726
01:09:53,279 --> 01:09:54,480
other

1727
01:09:54,480 --> 01:09:56,640
and the rest of the network um you might

1728
01:09:56,640 --> 01:09:58,960
find that on something like a pc

1729
01:09:58,960 --> 01:10:00,320
installation where they might have a

1730
01:10:00,320 --> 01:10:02,640
charting application and a radar

1731
01:10:02,640 --> 01:10:04,800
application manufactured

1732
01:10:04,800 --> 01:10:06,080
or designed by two different

1733
01:10:06,080 --> 01:10:07,600
manufacturers installed on the same

1734
01:10:07,600 --> 01:10:08,880
terminal

1735
01:10:08,880 --> 01:10:10,560
and those so those

1736
01:10:10,560 --> 01:10:12,640
pieces of software need to uh

1737
01:10:12,640 --> 01:10:14,800
to communicate with each other without

1738
01:10:14,800 --> 01:10:18,480
relying on some sort of underlying

1739
01:10:18,480 --> 01:10:20,239
assumption about what software's on the

1740
01:10:20,239 --> 01:10:20,880
the

1741
01:10:20,880 --> 01:10:23,520
the platform

1742
01:10:23,520 --> 01:10:25,679
the big one of course is required uh

1743
01:10:25,679 --> 01:10:27,120
required offending addresses with the

1744
01:10:27,120 --> 01:10:29,280
same destination mac address

1745
01:10:29,280 --> 01:10:31,840
right now it's it's tailored just to

1746
01:10:31,840 --> 01:10:36,880
the ipv ip address both ipv4 and ipv6

1747
01:10:36,880 --> 01:10:38,719
and then allocate

1748
01:10:38,719 --> 01:10:40,960
group ids for zero comp dynamic

1749
01:10:40,960 --> 01:10:42,239
addresses so

1750
01:10:42,239 --> 01:10:44,480
if we if you look back a couple sides

1751
01:10:44,480 --> 01:10:45,920
ago we talked about

1752
01:10:45,920 --> 01:10:48,320
um assigned addresses both

1753
01:10:48,320 --> 01:10:50,080
group ids and

1754
01:10:50,080 --> 01:10:51,360
actual addresses and then there was a

1755
01:10:51,360 --> 01:10:52,880
range for dynamic

1756
01:10:52,880 --> 01:10:54,960
um like i would propose that we carve

1757
01:10:54,960 --> 01:10:56,960
out a range of that dynamic address

1758
01:10:56,960 --> 01:10:59,920
specifically for zero conf stuff

1759
01:10:59,920 --> 01:11:01,679
and that would be to avoid conflict

1760
01:11:01,679 --> 01:11:03,520
conflicts with a matcap server if they

1761
01:11:03,520 --> 01:11:04,800
happen to be installed on the same

1762
01:11:04,800 --> 01:11:07,199
network

1763
01:11:11,040 --> 01:11:13,330
yeah just a question here so

1764
01:11:13,330 --> 01:11:14,560
[Music]

1765
01:11:14,560 --> 01:11:15,600
so you

1766
01:11:15,600 --> 01:11:17,760
you more or less only need discovery it

1767
01:11:17,760 --> 01:11:19,040
sounds like

1768
01:11:19,040 --> 01:11:22,000
at layer 2 or within one yeah the local

1769
01:11:22,000 --> 01:11:24,960
link or subnet

1770
01:11:24,960 --> 01:11:27,440
or do you think it's worth looking into

1771
01:11:27,440 --> 01:11:29,360
potentially you know having some

1772
01:11:29,360 --> 01:11:31,920
mechanism that works multiple links or

1773
01:11:31,920 --> 01:11:34,719
within a site or

1774
01:11:34,719 --> 01:11:36,560
um

1775
01:11:36,560 --> 01:11:38,480
not sure i understand are you saying as

1776
01:11:38,480 --> 01:11:40,159
far as discovering which addresses that

1777
01:11:40,159 --> 01:11:42,000
you're interested in yeah yeah i guess

1778
01:11:42,000 --> 01:11:44,000
you know

1779
01:11:44,000 --> 01:11:46,159
at least from what you said so far it

1780
01:11:46,159 --> 01:11:47,600
sounds to me like

1781
01:11:47,600 --> 01:11:49,760
you only need uniqueness within one

1782
01:11:49,760 --> 01:11:52,640
broadcast domain or within one

1783
01:11:52,640 --> 01:11:55,640
like

1784
01:11:56,239 --> 01:12:00,400
right yeah um now it doesn't mean that

1785
01:12:00,400 --> 01:12:02,000
we wouldn't be interested in supporting

1786
01:12:02,000 --> 01:12:05,199
other right other scopes yeah

1787
01:12:05,199 --> 01:12:07,760
yeah no i'm just thinking in some ways

1788
01:12:07,760 --> 01:12:09,920
you know it can be

1789
01:12:09,920 --> 01:12:12,159
there can be some solutions that are you

1790
01:12:12,159 --> 01:12:14,960
know available if you constrain it to a

1791
01:12:14,960 --> 01:12:16,800
subnet or a link

1792
01:12:16,800 --> 01:12:18,239
on the other hand yeah it could be

1793
01:12:18,239 --> 01:12:22,239
useful to solve a more general problem

1794
01:12:22,239 --> 01:12:24,639
do you know

1795
01:12:26,320 --> 01:12:28,640
hi this is dina again great job on the

1796
01:12:28,640 --> 01:12:29,920
presentation

1797
01:12:29,920 --> 01:12:33,199
so i um there is really a simple

1798
01:12:33,199 --> 01:12:34,960
solution to do group allocation you

1799
01:12:34,960 --> 01:12:36,960
could just do hashing on the sources and

1800
01:12:36,960 --> 01:12:39,040
receivers i'll explain in a detail in a

1801
01:12:39,040 --> 01:12:40,719
minute but i have a couple questions

1802
01:12:40,719 --> 01:12:42,400
about your deployment just to make sure

1803
01:12:42,400 --> 01:12:44,800
it's clear all the devices the sources

1804
01:12:44,800 --> 01:12:47,360
and the receivers are all on the ship

1805
01:12:47,360 --> 01:12:49,440
and that's a single scope of multicast

1806
01:12:49,440 --> 01:12:50,800
that's going to run through a switch

1807
01:12:50,800 --> 01:12:52,640
there's no routers involved is that true

1808
01:12:52,640 --> 01:12:54,400
or false that that's true for our

1809
01:12:54,400 --> 01:12:56,159
current conception now when you start to

1810
01:12:56,159 --> 01:12:58,640
get into larger container ships it

1811
01:12:58,640 --> 01:13:00,960
probably does make sense to start to put

1812
01:13:00,960 --> 01:13:03,040
different subnets in there okay so the

1813
01:13:03,040 --> 01:13:04,719
solution doesn't matter if it's

1814
01:13:04,719 --> 01:13:07,679
multi-route or hop or just single um it

1815
01:13:07,679 --> 01:13:09,920
and since you answered uh stig's

1816
01:13:09,920 --> 01:13:11,760
question about using multicast dns it

1817
01:13:11,760 --> 01:13:14,159
makes the solution even simpler since

1818
01:13:14,159 --> 01:13:15,760
you're using multicast dns you're

1819
01:13:15,760 --> 01:13:18,719
looking up a dns name so you're actually

1820
01:13:18,719 --> 01:13:21,280
naming each of the group communication

1821
01:13:21,280 --> 01:13:23,679
that you want to do so all you have to

1822
01:13:23,679 --> 01:13:26,400
do on the sources in the receiver is run

1823
01:13:26,400 --> 01:13:29,120
a sha 256 hash on that name

1824
01:13:29,120 --> 01:13:30,880
that will create a unique address that

1825
01:13:30,880 --> 01:13:32,960
both the sources and the receivers will

1826
01:13:32,960 --> 01:13:34,159
sync to

1827
01:13:34,159 --> 01:13:36,400
you mld on the receiver side to that

1828
01:13:36,400 --> 01:13:38,400
address and then you send from the

1829
01:13:38,400 --> 01:13:40,960
source on the exact same address you can

1830
01:13:40,960 --> 01:13:42,880
ahead of time

1831
01:13:42,880 --> 01:13:44,719
look at those names

1832
01:13:44,719 --> 01:13:47,679
and if they hash to the same lower to 32

1833
01:13:47,679 --> 01:13:50,080
bits which will collide at ethernet you

1834
01:13:50,080 --> 01:13:52,400
pick a different name so that part's

1835
01:13:52,400 --> 01:13:54,719
static but the sources and receivers can

1836
01:13:54,719 --> 01:13:56,880
be dynamic and if they hash they'll hash

1837
01:13:56,880 --> 01:13:58,800
the same addresses and the problem

1838
01:13:58,800 --> 01:14:00,880
solved no third party it's completely

1839
01:14:00,880 --> 01:14:03,760
decentralized um doing the hashing to

1840
01:14:03,760 --> 01:14:05,600
figure out what the group address is is

1841
01:14:05,600 --> 01:14:07,920
trivial i could write you a a ten line

1842
01:14:07,920 --> 01:14:10,239
python program in a second to do that

1843
01:14:10,239 --> 01:14:12,400
and the problem of uh address l group

1844
01:14:12,400 --> 01:14:14,560
allocation is solved

1845
01:14:14,560 --> 01:14:17,440
comments reactions

1846
01:14:17,440 --> 01:14:18,719
yeah so that's uh that's a really

1847
01:14:18,719 --> 01:14:21,360
interesting idea i think the um

1848
01:14:21,360 --> 01:14:23,440
the the thing about that maybe i didn't

1849
01:14:23,440 --> 01:14:26,560
mention before is we also want to be

1850
01:14:26,560 --> 01:14:27,679
um

1851
01:14:27,679 --> 01:14:29,920
as as standard compliant as possible so

1852
01:14:29,920 --> 01:14:32,239
that you know oftentimes people aren't

1853
01:14:32,239 --> 01:14:33,280
designing

1854
01:14:33,280 --> 01:14:35,520
uh ip cameras for example specifically

1855
01:14:35,520 --> 01:14:36,880
for the marine environment that will run

1856
01:14:36,880 --> 01:14:39,120
this protocol so we want to be able to

1857
01:14:39,120 --> 01:14:41,120
take an off-the-shelf solution

1858
01:14:41,120 --> 01:14:42,800
and and put it on the boat and we want

1859
01:14:42,800 --> 01:14:45,760
those yeah you run the group the hash

1860
01:14:45,760 --> 01:14:49,360
goes into the ff01 local scope so nobody

1861
01:14:49,360 --> 01:14:51,280
else can touch what you want

1862
01:14:51,280 --> 01:14:52,480
and if you want to play with the high

1863
01:14:52,480 --> 01:14:54,239
order bits to make it unique from other

1864
01:14:54,239 --> 01:14:56,719
applications you can do that as well but

1865
01:14:56,719 --> 01:14:59,040
what we're what we want the hash to do

1866
01:14:59,040 --> 01:15:01,440
is it's going to be a 256 bit hash but

1867
01:15:01,440 --> 01:15:03,679
you're going to truncate it to the lower

1868
01:15:03,679 --> 01:15:05,600
32 bits or anywhere in the middle but

1869
01:15:05,600 --> 01:15:07,280
the whole point is is you don't want

1870
01:15:07,280 --> 01:15:09,120
your multiple groups to have address

1871
01:15:09,120 --> 01:15:12,000
collision but that's easily avoided up

1872
01:15:12,000 --> 01:15:13,920
up ahead of time by picking the right

1873
01:15:13,920 --> 01:15:15,760
sort of names no random number

1874
01:15:15,760 --> 01:15:18,080
generators both the receivers and and

1875
01:15:18,080 --> 01:15:20,480
the source hash exactly on the same

1876
01:15:20,480 --> 01:15:22,000
value because you want them to get the

1877
01:15:22,000 --> 01:15:24,960
same group address

1878
01:15:24,960 --> 01:15:26,960
makes sense well it does make sense i

1879
01:15:26,960 --> 01:15:28,880
guess the question though is

1880
01:15:28,880 --> 01:15:32,560
um you know if if we were to say

1881
01:15:32,560 --> 01:15:34,960
that's how the onenet protocol should do

1882
01:15:34,960 --> 01:15:35,600
it

1883
01:15:35,600 --> 01:15:38,640
how do we how do we know that when we go

1884
01:15:38,640 --> 01:15:40,960
to to integrate other types of devices

1885
01:15:40,960 --> 01:15:41,920
on there

1886
01:15:41,920 --> 01:15:43,360
um

1887
01:15:43,360 --> 01:15:44,800
because a lot of networks marine

1888
01:15:44,800 --> 01:15:46,560
networks are not necessarily going to be

1889
01:15:46,560 --> 01:15:48,159
marine only devices we're going to have

1890
01:15:48,159 --> 01:15:51,120
other you know tvs and cameras and

1891
01:15:51,120 --> 01:15:52,400
you know satellite systems and stuff

1892
01:15:52,400 --> 01:15:53,360
like that

1893
01:15:53,360 --> 01:15:54,719
how do we know that we're not going to

1894
01:15:54,719 --> 01:15:57,040
get collisions from those other devices

1895
01:15:57,040 --> 01:16:00,320
the high order portion of the ipv6

1896
01:16:00,320 --> 01:16:01,360
address

1897
01:16:01,360 --> 01:16:03,440
you can put the prefix in there and the

1898
01:16:03,440 --> 01:16:05,840
prefix could be unique to these sets of

1899
01:16:05,840 --> 01:16:08,080
applications that's all

1900
01:16:08,080 --> 01:16:12,000
and those other ones won't do that right

1901
01:16:12,000 --> 01:16:14,480
they'll use whatever their spec is

1902
01:16:14,480 --> 01:16:15,760
but when you when you go to then

1903
01:16:15,760 --> 01:16:17,120
transmit that

1904
01:16:17,120 --> 01:16:18,960
on the ethernet network you still just

1905
01:16:18,960 --> 01:16:22,000
have those 32 bits yeah right oh so

1906
01:16:22,000 --> 01:16:23,520
you're worried about mac juris collision

1907
01:16:23,520 --> 01:16:24,960
yeah that's a concern you'll have to

1908
01:16:24,960 --> 01:16:27,040
make sure that it doesn't happen

1909
01:16:27,040 --> 01:16:28,400
i mean

1910
01:16:28,400 --> 01:16:31,440
if if you want to check the switch to

1911
01:16:31,440 --> 01:16:33,360
see what groups are joined to see if

1912
01:16:33,360 --> 01:16:34,719
there's collision then you have to do

1913
01:16:34,719 --> 01:16:37,600
collision avoidance or

1914
01:16:37,600 --> 01:16:40,080
avoidance um

1915
01:16:40,080 --> 01:16:42,400
i want to do collision well there you

1916
01:16:42,400 --> 01:16:44,640
have it sorry i said the wrong word

1917
01:16:44,640 --> 01:16:46,480
you're doing collision detection i want

1918
01:16:46,480 --> 01:16:48,239
you to do collision avoidance ahead of

1919
01:16:48,239 --> 01:16:50,080
time so you don't have to deal with the

1920
01:16:50,080 --> 01:16:51,920
uh collision at all

1921
01:16:51,920 --> 01:16:53,679
right yeah well and that makes sense if

1922
01:16:53,679 --> 01:16:55,600
everybody's doing that that same

1923
01:16:55,600 --> 01:16:57,679
collision avoidance algorithm

1924
01:16:57,679 --> 01:16:58,560
um

1925
01:16:58,560 --> 01:17:00,800
i think there's still potential for race

1926
01:17:00,800 --> 01:17:02,480
conditions based off of

1927
01:17:02,480 --> 01:17:04,080
who understands the state of the network

1928
01:17:04,080 --> 01:17:07,120
at any given time

1929
01:17:07,120 --> 01:17:08,560
as far as calculating the names and

1930
01:17:08,560 --> 01:17:10,480
determine oh somebody else has that

1931
01:17:10,480 --> 01:17:12,000
particular one i'm going to go on to the

1932
01:17:12,000 --> 01:17:14,400
next one

1933
01:17:14,400 --> 01:17:15,600
they have to all follow that same

1934
01:17:15,600 --> 01:17:17,440
algorithm right yeah right yeah and if

1935
01:17:17,440 --> 01:17:18,480
there's two different sets of

1936
01:17:18,480 --> 01:17:19,760
applications with a different set of

1937
01:17:19,760 --> 01:17:21,679
rules that's when the problem comes in

1938
01:17:21,679 --> 01:17:23,360
yeah yeah but we

1939
01:17:23,360 --> 01:17:25,520
we could talk about what you anticipate

1940
01:17:25,520 --> 01:17:27,120
or think the future

1941
01:17:27,120 --> 01:17:28,880
applications will be that may cause the

1942
01:17:28,880 --> 01:17:31,120
collisions and address it but at least

1943
01:17:31,120 --> 01:17:33,199
for the ship the picture you showed on

1944
01:17:33,199 --> 01:17:37,040
this slide there's a simple solution

1945
01:17:37,040 --> 01:17:38,400
it's simple until you start you can talk

1946
01:17:38,400 --> 01:17:40,880
more offline if you want to yeah sure

1947
01:17:40,880 --> 01:17:43,360
yeah yeah pretty cool idea

1948
01:17:43,360 --> 01:17:44,960
just one thing

1949
01:17:44,960 --> 01:17:46,560
you're saying you might potentially have

1950
01:17:46,560 --> 01:17:49,040
multiple applications on the same host

1951
01:17:49,040 --> 01:17:50,080
right

1952
01:17:50,080 --> 01:17:52,719
so you have an issue with that they have

1953
01:17:52,719 --> 01:17:55,440
the same swatch address so you need to

1954
01:17:55,440 --> 01:17:57,440
we put something more into the hash just

1955
01:17:57,440 --> 01:18:00,919
to make them unique

1956
01:18:06,800 --> 01:18:08,880
yeah

1957
01:18:08,880 --> 01:18:11,360
this is an asm application

1958
01:18:11,360 --> 01:18:13,040
that's why i think yeah yeah we're not

1959
01:18:13,040 --> 01:18:14,159
getting this

1960
01:18:14,159 --> 01:18:16,800
yeah sorry that's why i said um

1961
01:18:16,800 --> 01:18:18,320
we're just clouding the discussion by

1962
01:18:18,320 --> 01:18:21,280
calling it ssm or asm because it's right

1963
01:18:21,280 --> 01:18:24,080
now it's on just a layer two switch so

1964
01:18:24,080 --> 01:18:25,600
we're joining groups and sources are

1965
01:18:25,600 --> 01:18:27,679
sending to those groups end of story

1966
01:18:27,679 --> 01:18:30,400
right i mean ssm and asm is a concept

1967
01:18:30,400 --> 01:18:32,320
for multi-hop route multicast routers

1968
01:18:32,320 --> 01:18:34,559
right

1969
01:18:38,239 --> 01:18:40,800
yeah i would um i guess

1970
01:18:40,800 --> 01:18:42,400
um

1971
01:18:42,400 --> 01:18:43,360
one

1972
01:18:43,360 --> 01:18:45,679
bit of advice i guess that probably each

1973
01:18:45,679 --> 01:18:47,600
of us who've been around for long enough

1974
01:18:47,600 --> 01:18:49,679
to know is um

1975
01:18:49,679 --> 01:18:51,760
you know some of the old proposals you

1976
01:18:51,760 --> 01:18:55,280
mentioned madcap and there was masc and

1977
01:18:55,280 --> 01:18:57,440
um we we moved away from this many years

1978
01:18:57,440 --> 01:18:59,920
ago and there were good reasons um you

1979
01:18:59,920 --> 01:19:03,440
know a lot of complexity not worth

1980
01:19:03,440 --> 01:19:05,840
and and we ended up coming up with much

1981
01:19:05,840 --> 01:19:06,960
better

1982
01:19:06,960 --> 01:19:10,800
static derivable mechanisms i think what

1983
01:19:10,800 --> 01:19:13,120
dino's suggesting is kind of a you know

1984
01:19:13,120 --> 01:19:15,360
another clever uh

1985
01:19:15,360 --> 01:19:16,960
uh a

1986
01:19:16,960 --> 01:19:19,840
way of doing that um you know we've

1987
01:19:19,840 --> 01:19:21,679
we've come up with unicast multicast

1988
01:19:21,679 --> 01:19:25,120
prefix mapping um we've come up with uh

1989
01:19:25,120 --> 01:19:26,320
glop

1990
01:19:26,320 --> 01:19:28,600
each of these were

1991
01:19:28,600 --> 01:19:29,679
[Music]

1992
01:19:29,679 --> 01:19:31,679
addressing mechanisms that were

1993
01:19:31,679 --> 01:19:34,640
derivable simple and didn't require you

1994
01:19:34,640 --> 01:19:38,560
know uh complex protocols um you know we

1995
01:19:38,560 --> 01:19:42,159
got away from that for a reason um so i

1996
01:19:42,159 --> 01:19:46,880
would caution against um any any

1997
01:19:46,880 --> 01:19:48,960
trying to reinvent a wheel that we

1998
01:19:48,960 --> 01:19:51,760
abandoned many years ago um because you

1999
01:19:51,760 --> 01:19:53,679
know i think if you

2000
01:19:53,679 --> 01:19:55,920
continue down the kind of derivable

2001
01:19:55,920 --> 01:20:00,000
static uh path you you make like dino's

2002
01:20:00,000 --> 01:20:02,400
idea um you may end up with

2003
01:20:02,400 --> 01:20:04,080
you'll probably be much happier in the

2004
01:20:04,080 --> 01:20:06,480
end than having some server and service

2005
01:20:06,480 --> 01:20:08,400
with a weird protocol

2006
01:20:08,400 --> 01:20:11,520
that you know is just going to break and

2007
01:20:11,520 --> 01:20:13,760
yeah

2008
01:20:13,760 --> 01:20:16,239
this is dino again real quick um

2009
01:20:16,239 --> 01:20:17,840
in some deployments i've been involved

2010
01:20:17,840 --> 01:20:20,719
with um if you have one source sending

2011
01:20:20,719 --> 01:20:23,760
to multiple receivers ie one group we

2012
01:20:23,760 --> 01:20:26,080
would make the group address be equal to

2013
01:20:26,080 --> 01:20:28,080
the lower bits of the source address

2014
01:20:28,080 --> 01:20:30,159
since it was always one source and it

2015
01:20:30,159 --> 01:20:31,600
was nice because if you wanted to look

2016
01:20:31,600 --> 01:20:33,040
at content

2017
01:20:33,040 --> 01:20:34,480
you would know the source address by

2018
01:20:34,480 --> 01:20:35,760
just looking at the group address so

2019
01:20:35,760 --> 01:20:37,120
that's even that's another way but

2020
01:20:37,120 --> 01:20:41,040
that's a one-to-many only solution

2021
01:20:41,040 --> 01:20:41,920
um

2022
01:20:41,920 --> 01:20:44,840
yeah i guess i can also mention that

2023
01:20:44,840 --> 01:20:47,360
um toilets was saying um

2024
01:20:47,360 --> 01:20:49,440
often today you know

2025
01:20:49,440 --> 01:20:51,600
people just do the very basic thing

2026
01:20:51,600 --> 01:20:54,000
where you register an address with ian

2027
01:20:54,000 --> 01:20:56,159
and just say like each device

2028
01:20:56,159 --> 01:20:58,560
has its own just fixed address that you

2029
01:20:58,560 --> 01:21:01,199
have registered the problem is of course

2030
01:21:01,199 --> 01:21:03,840
if you have multiple devices

2031
01:21:03,840 --> 01:21:06,239
they can't just all use the same address

2032
01:21:06,239 --> 01:21:07,840
necessarily

2033
01:21:07,840 --> 01:21:09,360
and you have the discovery part i think

2034
01:21:09,360 --> 01:21:12,080
with a bandwidth and things like that so

2035
01:21:12,080 --> 01:21:14,159
so i think just a static allocation

2036
01:21:14,159 --> 01:21:16,239
would be difficult in this case

2037
01:21:16,239 --> 01:21:17,760
um yeah i was going to say another

2038
01:21:17,760 --> 01:21:20,400
deployment is just put them in dns and

2039
01:21:20,400 --> 01:21:22,400
have the source under the same name that

2040
01:21:22,400 --> 01:21:23,840
the receivers look up and the

2041
01:21:23,840 --> 01:21:26,239
applications just doing dns lookup that

2042
01:21:26,239 --> 01:21:29,280
maps to a group address so that's

2043
01:21:29,280 --> 01:21:31,920
just adding to what stig said right yeah

2044
01:21:31,920 --> 01:21:34,239
also i remember maybe 10 years ago or

2045
01:21:34,239 --> 01:21:37,199
something we started looking at some new

2046
01:21:37,199 --> 01:21:39,920
discovery mechanism to avoid this static

2047
01:21:39,920 --> 01:21:41,440
allocation

2048
01:21:41,440 --> 01:21:44,480
but it didn't really go anywhere and and

2049
01:21:44,480 --> 01:21:46,480
yeah the simpler you can make it that

2050
01:21:46,480 --> 01:21:48,719
better you know but at the same time it

2051
01:21:48,719 --> 01:21:50,800
needs to work so

2052
01:21:50,800 --> 01:21:52,719
yeah now if you want to look into the

2053
01:21:52,719 --> 01:21:55,040
future and you do multi-hop routing

2054
01:21:55,040 --> 01:21:57,920
and you use overlays you can now have

2055
01:21:57,920 --> 01:21:59,920
independent paths because these

2056
01:21:59,920 --> 01:22:01,920
addresses are relatively random the

2057
01:22:01,920 --> 01:22:03,520
hashing gives you the randomness that

2058
01:22:03,520 --> 01:22:04,480
you want

2059
01:22:04,480 --> 01:22:05,920
so you can do a lot of good load

2060
01:22:05,920 --> 01:22:07,440
splitting stuff because of this

2061
01:22:07,440 --> 01:22:09,120
randomness that's already built into

2062
01:22:09,120 --> 01:22:10,400
your group addresses

2063
01:22:10,400 --> 01:22:12,320
using the the not the first

2064
01:22:12,320 --> 01:22:15,840
suggestion i said with hashing so

2065
01:22:15,840 --> 01:22:18,159
so as i'm thinking about this

2066
01:22:18,159 --> 01:22:19,040
i mean

2067
01:22:19,040 --> 01:22:20,880
again i think the hashing is a really

2068
01:22:20,880 --> 01:22:22,480
good idea i hadn't thought about that

2069
01:22:22,480 --> 01:22:24,960
before but i'm wondering is

2070
01:22:24,960 --> 01:22:26,960
as you start to

2071
01:22:26,960 --> 01:22:29,600
you have to detect collisions

2072
01:22:29,600 --> 01:22:31,120
and

2073
01:22:31,120 --> 01:22:33,440
when you start detecting collisions is

2074
01:22:33,440 --> 01:22:34,560
the

2075
01:22:34,560 --> 01:22:37,120
resulting protocol either just as or

2076
01:22:37,120 --> 01:22:40,239
more complex than a protocol that just

2077
01:22:40,239 --> 01:22:43,759
dynamically allocates everything

2078
01:22:44,080 --> 01:22:46,239
good question um

2079
01:22:46,239 --> 01:22:47,920
well what you do is you want to do

2080
01:22:47,920 --> 01:22:50,840
collision avoidance so

2081
01:22:50,840 --> 01:22:53,360
if and you can't do that on all the

2082
01:22:53,360 --> 01:22:55,120
hosts if they don't want to join all the

2083
01:22:55,120 --> 01:22:56,159
groups because then they have to know

2084
01:22:56,159 --> 01:22:58,000
the whole scenario you don't want to

2085
01:22:58,000 --> 01:23:00,800
have a protocol to do it the fact is if

2086
01:23:00,800 --> 01:23:02,000
you find

2087
01:23:02,000 --> 01:23:03,920
a good hash will produce pretty good

2088
01:23:03,920 --> 01:23:06,400
randomness across 32 bits so you may not

2089
01:23:06,400 --> 01:23:08,400
have to worry about this problem now i

2090
01:23:08,400 --> 01:23:09,920
just don't want to say that because

2091
01:23:09,920 --> 01:23:11,199
making that statement means it's going

2092
01:23:11,199 --> 01:23:14,639
to happen right murphy's law right so um

2093
01:23:14,639 --> 01:23:17,520
that's why i said ahead of time so what

2094
01:23:17,520 --> 01:23:18,880
you're doing is statically you're

2095
01:23:18,880 --> 01:23:20,960
picking these names so these dns names

2096
01:23:20,960 --> 01:23:23,080
is

2097
01:23:23,080 --> 01:23:25,040
a.abc.comb.abc.com and then you run it

2098
01:23:25,040 --> 01:23:26,400
through this python program that

2099
01:23:26,400 --> 01:23:28,080
actually does the hash because the

2100
01:23:28,080 --> 01:23:29,360
source and receivers will do that

2101
01:23:29,360 --> 01:23:31,120
dynamically when they want to join this

2102
01:23:31,120 --> 01:23:33,120
content the applications will decide

2103
01:23:33,120 --> 01:23:35,360
which of these names they want to join

2104
01:23:35,360 --> 01:23:37,600
or whatever and so at that time you will

2105
01:23:37,600 --> 01:23:39,840
know ahead of time that since these

2106
01:23:39,840 --> 01:23:42,159
things in fact let's let's put the names

2107
01:23:42,159 --> 01:23:44,400
in dns if you want or mdns you don't

2108
01:23:44,400 --> 01:23:45,840
even have to change that to that

2109
01:23:45,840 --> 01:23:48,880
deployment and then um and then you know

2110
01:23:48,880 --> 01:23:50,400
because you've looked at all the current

2111
01:23:50,400 --> 01:23:52,320
groups that are active in your network

2112
01:23:52,320 --> 01:23:54,239
that are about to be active and you know

2113
01:23:54,239 --> 01:23:56,800
that the 432 bits are unique

2114
01:23:56,800 --> 01:23:58,000
so

2115
01:23:58,000 --> 01:24:00,480
so what you do is when you put these

2116
01:24:00,480 --> 01:24:02,400
when you put these names in your own

2117
01:24:02,400 --> 01:24:04,800
database run the program across all the

2118
01:24:04,800 --> 01:24:06,560
names and it'll tell you if there's no

2119
01:24:06,560 --> 01:24:09,199
collisions and if there's no collisions

2120
01:24:09,199 --> 01:24:10,719
then you're good to go on your network

2121
01:24:10,719 --> 01:24:12,639
now when you want to add a new name you

2122
01:24:12,639 --> 01:24:13,520
run it

2123
01:24:13,520 --> 01:24:15,280
n plus one across all of them there's

2124
01:24:15,280 --> 01:24:17,440
still no collisions if you run n plus

2125
01:24:17,440 --> 01:24:19,280
two and now there's a collision then you

2126
01:24:19,280 --> 01:24:21,440
that name you just added is not unique

2127
01:24:21,440 --> 01:24:23,679
enough so just change the name call it

2128
01:24:23,679 --> 01:24:24,800
you know

2129
01:24:24,800 --> 01:24:27,120
a.1 or a.3 or whatever if you change the

2130
01:24:27,120 --> 01:24:28,960
loader bits there's a good chance that

2131
01:24:28,960 --> 01:24:31,840
you get enough randomness in the 32 bits

2132
01:24:31,840 --> 01:24:33,760
and you're good to go it's really that

2133
01:24:33,760 --> 01:24:35,199
simple

2134
01:24:35,199 --> 01:24:36,719
like i said i'll reach the python

2135
01:24:36,719 --> 01:24:40,159
program it's a no-brainer well yeah so

2136
01:24:40,159 --> 01:24:41,679
you have developers

2137
01:24:41,679 --> 01:24:43,280
right so

2138
01:24:43,280 --> 01:24:45,440
we let's say we do that

2139
01:24:45,440 --> 01:24:47,600
um and it comes down again to when you

2140
01:24:47,600 --> 01:24:49,920
integrate um another piece of equipment

2141
01:24:49,920 --> 01:24:51,520
that doesn't do that

2142
01:24:51,520 --> 01:24:53,920
um right they i mean there

2143
01:24:53,920 --> 01:24:55,679
there's a difference between a an

2144
01:24:55,679 --> 01:24:59,360
internet standard and a standard that

2145
01:24:59,360 --> 01:25:02,239
is essentially just for both yeah you're

2146
01:25:02,239 --> 01:25:04,080
absolutely right and the chances are

2147
01:25:04,080 --> 01:25:05,840
even those new set of applications that

2148
01:25:05,840 --> 01:25:08,000
are not going to follow this algorithm

2149
01:25:08,000 --> 01:25:10,880
will likely not collide

2150
01:25:10,880 --> 01:25:13,760
not guaranteed but likely not collide

2151
01:25:13,760 --> 01:25:15,360
because there's enough randomness in the

2152
01:25:15,360 --> 01:25:17,840
32 bits right you know and the thing is

2153
01:25:17,840 --> 01:25:20,400
is if we use all the the first format

2154
01:25:20,400 --> 01:25:22,320
you showed with 112 bits it's a

2155
01:25:22,320 --> 01:25:24,000
no-brainer in your lifetime you'll never

2156
01:25:24,000 --> 01:25:26,719
duplicate but since those 112 bits are

2157
01:25:26,719 --> 01:25:28,880
going to map into only 32 bits of the

2158
01:25:28,880 --> 01:25:30,320
mac address that's where you run into

2159
01:25:30,320 --> 01:25:31,760
the problem

2160
01:25:31,760 --> 01:25:33,760
well and and but when you do have that

2161
01:25:33,760 --> 01:25:35,199
collision with that other piece of

2162
01:25:35,199 --> 01:25:37,040
equipment

2163
01:25:37,040 --> 01:25:39,360
it's a it would be very rare

2164
01:25:39,360 --> 01:25:41,280
and when that does happen we can't

2165
01:25:41,280 --> 01:25:43,280
expect our users we'll figure that out

2166
01:25:43,280 --> 01:25:45,679
yeah good point if it does happen and

2167
01:25:45,679 --> 01:25:48,000
it's rare then you're no worse off than

2168
01:25:48,000 --> 01:25:49,600
you are today

2169
01:25:49,600 --> 01:25:51,920
so do you want to play the odds

2170
01:25:51,920 --> 01:25:54,159
just putting that forth yeah no i don't

2171
01:25:54,159 --> 01:25:55,840
i don't think we do because our

2172
01:25:55,840 --> 01:25:57,679
customers will just

2173
01:25:57,679 --> 01:25:59,520
lose the link to the 100 megabit link

2174
01:25:59,520 --> 01:26:00,800
well right

2175
01:26:00,800 --> 01:26:02,080
my sensor doesn't work well you know

2176
01:26:02,080 --> 01:26:03,280
what's going on and we're like well

2177
01:26:03,280 --> 01:26:04,400
you're the only ones that this is

2178
01:26:04,400 --> 01:26:06,480
happening to why is it right

2179
01:26:06,480 --> 01:26:08,400
well yeah i mean you you have to decide

2180
01:26:08,400 --> 01:26:09,840
what the future's going to be with these

2181
01:26:09,840 --> 01:26:11,199
applications and how they're going to do

2182
01:26:11,199 --> 01:26:12,719
group addressing and since it's going to

2183
01:26:12,719 --> 01:26:14,239
run on your network you need to be

2184
01:26:14,239 --> 01:26:16,239
involved in making sure that there's no

2185
01:26:16,239 --> 01:26:17,600
conflicts right

2186
01:26:17,600 --> 01:26:18,719
so

2187
01:26:18,719 --> 01:26:19,600
right

2188
01:26:19,600 --> 01:26:22,719
but yeah i mean i guess we want to set

2189
01:26:22,719 --> 01:26:25,840
ourselves up for for success there

2190
01:26:25,840 --> 01:26:27,440
which

2191
01:26:27,440 --> 01:26:29,600
i mean there's no reason why

2192
01:26:29,600 --> 01:26:31,840
you can't statically configure

2193
01:26:31,840 --> 01:26:34,000
the addresses on the newer applications

2194
01:26:34,000 --> 01:26:36,719
or use madcap or any other mechanisms

2195
01:26:36,719 --> 01:26:40,480
too they they can't exist right

2196
01:26:44,800 --> 01:26:47,199
otherwise you change that layer two box

2197
01:26:47,199 --> 01:26:48,800
to a layer three box

2198
01:26:48,800 --> 01:26:51,120
and even though it's one hop you'll get

2199
01:26:51,120 --> 01:26:53,280
less problems with collisions right

2200
01:26:53,280 --> 01:26:54,480
because now

2201
01:26:54,480 --> 01:26:56,639
the groups the groups are differentiated

2202
01:26:56,639 --> 01:26:59,280
by the entire ipv6 group address and not

2203
01:26:59,280 --> 01:27:02,239
the lower 32 bits of a mac address so

2204
01:27:02,239 --> 01:27:03,679
that'll help you

2205
01:27:03,679 --> 01:27:05,520
just upgrade the layer 2 switch to make

2206
01:27:05,520 --> 01:27:07,440
it a layer 3 router where the sources

2207
01:27:07,440 --> 01:27:09,520
and receivers are directly connected

2208
01:27:09,520 --> 01:27:12,400
right yeah

2209
01:27:13,120 --> 01:27:15,199
i mean yeah you know yeah you could do

2210
01:27:15,199 --> 01:27:16,719
that now i mean

2211
01:27:16,719 --> 01:27:18,880
as far as third-party equipment and

2212
01:27:18,880 --> 01:27:21,280
aesthetically configuring those and all

2213
01:27:21,280 --> 01:27:23,040
that i guess i don't have a high degree

2214
01:27:23,040 --> 01:27:24,480
of confidence that

2215
01:27:24,480 --> 01:27:26,560
um there would be an easy way for our

2216
01:27:26,560 --> 01:27:28,320
customers customers to do that or even

2217
01:27:28,320 --> 01:27:29,760
know to do that

2218
01:27:29,760 --> 01:27:32,960
i mean certainly we can work on ways of

2219
01:27:32,960 --> 01:27:35,040
detecting that and helping them

2220
01:27:35,040 --> 01:27:37,520
resolve the situation the customers

2221
01:27:37,520 --> 01:27:38,960
they're the ones running the sources and

2222
01:27:38,960 --> 01:27:40,960
receivers or

2223
01:27:40,960 --> 01:27:42,400
running they're running the whole

2224
01:27:42,400 --> 01:27:44,400
network or right yeah so and then they

2225
01:27:44,400 --> 01:27:46,320
go integrate um you know another piece

2226
01:27:46,320 --> 01:27:48,159
of equipment that doesn't participate in

2227
01:27:48,159 --> 01:27:50,960
this address allocation scheme um you

2228
01:27:50,960 --> 01:27:52,880
know whatever it is you know even even

2229
01:27:52,880 --> 01:27:55,199
this no no i'm saying if you if you're

2230
01:27:55,199 --> 01:27:56,880
really worried about that and you want

2231
01:27:56,880 --> 01:27:57,760
to

2232
01:27:57,760 --> 01:27:59,520
solve the one percent case it's less

2233
01:27:59,520 --> 01:28:01,440
than one percent collision case then

2234
01:28:01,440 --> 01:28:03,520
make it a layer three router and now you

2235
01:28:03,520 --> 01:28:05,280
have the whole ipv6 group address which

2236
01:28:05,280 --> 01:28:07,040
is 128 bits

2237
01:28:07,040 --> 01:28:09,199
you know i think it i think the rule is

2238
01:28:09,199 --> 01:28:10,080
is that

2239
01:28:10,080 --> 01:28:12,800
the likelihood of duplicating an ipv6

2240
01:28:12,800 --> 01:28:17,120
address um happens in like 120 years if

2241
01:28:17,120 --> 01:28:19,840
you try to reallocate the address every

2242
01:28:19,840 --> 01:28:21,920
second so this is never going to happen

2243
01:28:21,920 --> 01:28:23,199
in our lifetime or your children's

2244
01:28:23,199 --> 01:28:26,480
lifetime or whatever so

2245
01:28:26,480 --> 01:28:28,480
you have 128 bits to work with versus

2246
01:28:28,480 --> 01:28:31,040
the 32 because not now the 32 bits just

2247
01:28:31,040 --> 01:28:33,280
have to be unique on the ethernet that's

2248
01:28:33,280 --> 01:28:35,920
from the router you know what i mean so

2249
01:28:35,920 --> 01:28:37,760
that that you won't have the same

2250
01:28:37,760 --> 01:28:39,920
collision problems the router will be

2251
01:28:39,920 --> 01:28:42,159
smart about it right right but then i

2252
01:28:42,159 --> 01:28:43,760
mean i think the problems introduced by

2253
01:28:43,760 --> 01:28:45,760
putting a router in the network or maybe

2254
01:28:45,760 --> 01:28:47,920
even more okay well that's your call on

2255
01:28:47,920 --> 01:28:50,480
that yeah absolutely

2256
01:28:50,480 --> 01:28:52,480
um

2257
01:28:52,480 --> 01:28:53,920
yeah um

2258
01:28:53,920 --> 01:28:54,840
i see

2259
01:28:54,840 --> 01:28:57,600
uh um brianna's here online here did you

2260
01:28:57,600 --> 01:28:59,520
have any comments on this or i'm sorry

2261
01:28:59,520 --> 01:29:01,840
for putting you on the spot

2262
01:29:01,840 --> 01:29:05,360
i know you had some thoughts on this

2263
01:29:05,600 --> 01:29:08,239
hey hey stig yeah so

2264
01:29:08,239 --> 01:29:10,000
i i missed the first half of the

2265
01:29:10,000 --> 01:29:11,760
presentation so there's probably some

2266
01:29:11,760 --> 01:29:13,840
context i'm missing there but

2267
01:29:13,840 --> 01:29:16,480
it certainly does seem like there are

2268
01:29:16,480 --> 01:29:19,280
existing ways to to address this problem

2269
01:29:19,280 --> 01:29:21,440
but i'm i'm going to have to reserve

2270
01:29:21,440 --> 01:29:23,679
comment so i can go back and review the

2271
01:29:23,679 --> 01:29:25,040
materials and

2272
01:29:25,040 --> 01:29:27,760
and actually uh look at the scenarios to

2273
01:29:27,760 --> 01:29:29,760
figure out what's going on but

2274
01:29:29,760 --> 01:29:30,719
um

2275
01:29:30,719 --> 01:29:32,960
you know i i think some of the some of

2276
01:29:32,960 --> 01:29:35,679
the approaches that you know pointed out

2277
01:29:35,679 --> 01:29:38,080
um you may be worth exploring but

2278
01:29:38,080 --> 01:29:39,600
otherwise i'll i'll i'll look at the

2279
01:29:39,600 --> 01:29:43,520
material and boost the mailing list

2280
01:29:43,840 --> 01:29:46,960
yeah okay great thanks yeah i would say

2281
01:29:46,960 --> 01:29:49,040
my feeling to you i guess yeah speaking

2282
01:29:49,040 --> 01:29:51,600
as just a participant is

2283
01:29:51,600 --> 01:29:53,280
it's probably good to

2284
01:29:53,280 --> 01:29:54,880
try to avoid like

2285
01:29:54,880 --> 01:29:56,960
big grant solutions with something like

2286
01:29:56,960 --> 01:29:59,280
dhcp or medcap or something with a

2287
01:29:59,280 --> 01:30:01,199
server and so on it's

2288
01:30:01,199 --> 01:30:02,800
if you can make it easy with that

2289
01:30:02,800 --> 01:30:04,080
without any

2290
01:30:04,080 --> 01:30:06,719
single point of failure or you know any

2291
01:30:06,719 --> 01:30:08,080
new protocols

2292
01:30:08,080 --> 01:30:10,639
talking to a specific device or whatever

2293
01:30:10,639 --> 01:30:12,400
something distributed like you know

2294
01:30:12,400 --> 01:30:16,719
suggested sounds much better to me yeah

2295
01:30:17,440 --> 01:30:18,880
and and the reason we're looking for

2296
01:30:18,880 --> 01:30:20,560
simpler solutions are all the points

2297
01:30:20,560 --> 01:30:22,800
that torrelis and leddy made is that we

2298
01:30:22,800 --> 01:30:24,960
have many years of experience with these

2299
01:30:24,960 --> 01:30:27,280
complicated protocol solutions and they

2300
01:30:27,280 --> 01:30:28,800
haven't taken off because they're just

2301
01:30:28,800 --> 01:30:30,480
too complicated and people don't want to

2302
01:30:30,480 --> 01:30:32,239
do it they don't want to deploy and

2303
01:30:32,239 --> 01:30:35,120
manage a madcap or dh service just for

2304
01:30:35,120 --> 01:30:35,920
this

2305
01:30:35,920 --> 01:30:38,000
so if we can find a distributed way of

2306
01:30:38,000 --> 01:30:40,320
doing it or static

2307
01:30:40,320 --> 01:30:42,880
it usually goes a long long way because

2308
01:30:42,880 --> 01:30:44,080
it's not

2309
01:30:44,080 --> 01:30:45,679
if it works or doesn't work they all

2310
01:30:45,679 --> 01:30:47,520
work but they all have a cost associated

2311
01:30:47,520 --> 01:30:50,000
with it and so we want the cost to be

2312
01:30:50,000 --> 01:30:51,679
trivial and and for you to have the

2313
01:30:51,679 --> 01:30:53,360
agility to maybe change the group

2314
01:30:53,360 --> 01:30:55,120
allocation mechanism in the future

2315
01:30:55,120 --> 01:30:56,719
without having to talk to vendors and

2316
01:30:56,719 --> 01:30:59,360
stuff like that

2317
01:30:59,440 --> 01:31:01,040
i i always feel

2318
01:31:01,040 --> 01:31:03,600
you know somewhat useless of trying to

2319
01:31:03,600 --> 01:31:05,520
give low level detail recommendations

2320
01:31:05,520 --> 01:31:07,440
without having a good understanding of

2321
01:31:07,440 --> 01:31:09,120
the deployment workflow right so i mean

2322
01:31:09,120 --> 01:31:11,760
how's the stuff deployed how uh

2323
01:31:11,760 --> 01:31:13,679
whoever you know wants to see something

2324
01:31:13,679 --> 01:31:15,920
is dismantled right once i see that

2325
01:31:15,920 --> 01:31:17,040
top-down

2326
01:31:17,040 --> 01:31:20,080
use case details better

2327
01:31:20,080 --> 01:31:21,679
and maybe that's the thing that you may

2328
01:31:21,679 --> 01:31:23,120
want to write down just as an

2329
01:31:23,120 --> 01:31:25,440
informational document if you kind of

2330
01:31:25,440 --> 01:31:28,400
want to support information

2331
01:31:28,400 --> 01:31:30,080
then i think it's much easier to help

2332
01:31:30,080 --> 01:31:32,159
with the design decisions what to do

2333
01:31:32,159 --> 01:31:34,800
because as i said right most most likely

2334
01:31:34,800 --> 01:31:36,719
one ends up and comes up with cool ideas

2335
01:31:36,719 --> 01:31:38,719
and then there is a stupid work around

2336
01:31:38,719 --> 01:31:40,960
um and you know whoever buys the stuff

2337
01:31:40,960 --> 01:31:42,639
or makes the investment decision thinks

2338
01:31:42,639 --> 01:31:45,280
that's good enough and all the

2339
01:31:45,280 --> 01:31:46,639
investment for the better stuff is

2340
01:31:46,639 --> 01:31:48,880
wasted or we we figure out the key

2341
01:31:48,880 --> 01:31:51,199
points why you know something like this

2342
01:31:51,199 --> 01:31:52,960
i think auto negotiation is what i've

2343
01:31:52,960 --> 01:31:55,280
heard a little bit from dean or so is is

2344
01:31:55,280 --> 01:31:58,719
really key things that helps

2345
01:31:58,880 --> 01:32:00,800
okay

2346
01:32:00,800 --> 01:32:03,199
yeah but i mean all i'm saying is right

2347
01:32:03,199 --> 01:32:04,800
i mean we need to link

2348
01:32:04,800 --> 01:32:07,760
uh whatever the suggestions are to why

2349
01:32:07,760 --> 01:32:10,000
they're justified and necessary from you

2350
01:32:10,000 --> 01:32:12,000
know the the operation perspective what

2351
01:32:12,000 --> 01:32:13,520
what you know the use case trying to

2352
01:32:13,520 --> 01:32:14,800
achieve

2353
01:32:14,800 --> 01:32:16,719
yeah i think from um

2354
01:32:16,719 --> 01:32:18,960
more like itf process point of view it

2355
01:32:18,960 --> 01:32:20,480
would be great if you can write that

2356
01:32:20,480 --> 01:32:21,760
draft and

2357
01:32:21,760 --> 01:32:25,760
basically write down your requirements

2358
01:32:25,760 --> 01:32:26,960
um

2359
01:32:26,960 --> 01:32:29,040
i mean really happy to discuss solutions

2360
01:32:29,040 --> 01:32:30,320
but it's great to just have the

2361
01:32:30,320 --> 01:32:32,800
requirements written down

2362
01:32:32,800 --> 01:32:35,120
okay so just to be clear next step is to

2363
01:32:35,120 --> 01:32:36,480
write um

2364
01:32:36,480 --> 01:32:38,320
write a set of requirements

2365
01:32:38,320 --> 01:32:40,080
without any sort of proposed solution

2366
01:32:40,080 --> 01:32:42,000
just the requirements uh

2367
01:32:42,000 --> 01:32:43,920
yeah i would say maybe maybe initially

2368
01:32:43,920 --> 01:32:46,400
at least uh just do their requirements

2369
01:32:46,400 --> 01:32:47,199
but

2370
01:32:47,199 --> 01:32:49,040
if you want to you know that document

2371
01:32:49,040 --> 01:32:51,520
could later turn into a solution kind of

2372
01:32:51,520 --> 01:32:53,199
thing but but just for discussion it's

2373
01:32:53,199 --> 01:32:54,960
good to just have those requirements

2374
01:32:54,960 --> 01:32:56,480
kind of written down

2375
01:32:56,480 --> 01:32:58,480
yeah i i think really just let's let's

2376
01:32:58,480 --> 01:33:00,239
have an informal discussion about that

2377
01:33:00,239 --> 01:33:01,679
we understand

2378
01:33:01,679 --> 01:33:03,360
the use case the workflow better and

2379
01:33:03,360 --> 01:33:05,199
then i think you know it's it's it's

2380
01:33:05,199 --> 01:33:06,960
it's easier to figure out if the answer

2381
01:33:06,960 --> 01:33:09,679
from stick like i think we have a clear

2382
01:33:09,679 --> 01:33:11,679
list of requirements that we could you

2383
01:33:11,679 --> 01:33:14,719
know help you write um if that's true or

2384
01:33:14,719 --> 01:33:16,400
not right i'm at this point in time i'm

2385
01:33:16,400 --> 01:33:18,480
not quite confident that i'm arrived at

2386
01:33:18,480 --> 01:33:20,400
that stage that there is a clear list of

2387
01:33:20,400 --> 01:33:22,800
requirements that

2388
01:33:22,800 --> 01:33:24,639
that i could help to support without you

2389
01:33:24,639 --> 01:33:26,719
know first understanding the description

2390
01:33:26,719 --> 01:33:28,880
of the workflow better

2391
01:33:28,880 --> 01:33:30,880
yeah no i think that's a good point too

2392
01:33:30,880 --> 01:33:34,480
um and i made an assumption about

2393
01:33:34,480 --> 01:33:35,600
um

2394
01:33:35,600 --> 01:33:36,960
that that there would be an

2395
01:33:36,960 --> 01:33:38,719
understanding about how these things

2396
01:33:38,719 --> 01:33:41,040
were connect um and i didn't realize i

2397
01:33:41,040 --> 01:33:42,639
made that assumption so so thanks for

2398
01:33:42,639 --> 01:33:44,800
helping me realize that you do know how

2399
01:33:44,800 --> 01:33:46,719
automatically working

2400
01:33:46,719 --> 01:33:48,719
application solutions are now built on

2401
01:33:48,719 --> 01:33:50,719
the network right you have all type of

2402
01:33:50,719 --> 01:33:53,120
crappy equipment with thousands of nerd

2403
01:33:53,120 --> 01:33:55,520
knobs but there's these addresses or

2404
01:33:55,520 --> 01:33:57,040
whatever else it's the application

2405
01:33:57,040 --> 01:33:58,719
devices the switches and the routers and

2406
01:33:58,719 --> 01:34:00,480
you add a magical sdn controller and

2407
01:34:00,480 --> 01:34:02,639
somebody goes and hacks some stupid

2408
01:34:02,639 --> 01:34:04,159
stuff and that's being resolved right so

2409
01:34:04,159 --> 01:34:06,320
that's the standard design process right

2410
01:34:06,320 --> 01:34:08,800
and whoever basically is trying to write

2411
01:34:08,800 --> 01:34:10,960
that sdn controller software has to

2412
01:34:10,960 --> 01:34:12,800
collect all that information

2413
01:34:12,800 --> 01:34:14,400
right to figure out how to make it run

2414
01:34:14,400 --> 01:34:16,000
and then nobody understands what's going

2415
01:34:16,000 --> 01:34:17,600
on right so i mean obviously that's

2416
01:34:17,600 --> 01:34:19,199
that's the thing that is lovely if we

2417
01:34:19,199 --> 01:34:21,679
can avoid it right

2418
01:34:21,679 --> 01:34:22,560
let's just

2419
01:34:22,560 --> 01:34:24,880
go ahead well i was going to say so to

2420
01:34:24,880 --> 01:34:26,400
i'll of course include this in the

2421
01:34:26,400 --> 01:34:28,000
requirements but just

2422
01:34:28,000 --> 01:34:29,199
to kind of lay this out there the

2423
01:34:29,199 --> 01:34:31,040
expectation from our users is that

2424
01:34:31,040 --> 01:34:32,320
they're just able to connect these

2425
01:34:32,320 --> 01:34:33,520
things together and they work they don't

2426
01:34:33,520 --> 01:34:34,639
have to do any sort of network

2427
01:34:34,639 --> 01:34:37,360
engineering stuff

2428
01:34:37,920 --> 01:34:40,480
so but then you know we solve different

2429
01:34:40,480 --> 01:34:42,560
sensors right so now the question is

2430
01:34:42,560 --> 01:34:44,880
okay how does it even work does every

2431
01:34:44,880 --> 01:34:47,199
receiver sees every sensor and how is

2432
01:34:47,199 --> 01:34:49,679
that receiver figuring out which sensor

2433
01:34:49,679 --> 01:34:51,280
is providing what information so there

2434
01:34:51,280 --> 01:34:52,800
are multiple temperature sensors you

2435
01:34:52,800 --> 01:34:54,560
probably you know

2436
01:34:54,560 --> 01:34:56,400
need to know where on the ship they are

2437
01:34:56,400 --> 01:34:58,719
so that on the receiver you can display

2438
01:34:58,719 --> 01:35:00,159
okay this is the temperature here that's

2439
01:35:00,159 --> 01:35:02,000
the temperature there i mean

2440
01:35:02,000 --> 01:35:03,760
you know that that type of use case

2441
01:35:03,760 --> 01:35:05,600
stuff is is really important to figure

2442
01:35:05,600 --> 01:35:07,760
out how to do the octo configuration of

2443
01:35:07,760 --> 01:35:08,800
that

2444
01:35:08,800 --> 01:35:10,719
right well and largely that's covered by

2445
01:35:10,719 --> 01:35:12,800
the onenet standard itself

2446
01:35:12,800 --> 01:35:14,880
which we have no idea about i guess i

2447
01:35:14,880 --> 01:35:16,000
hope

2448
01:35:16,000 --> 01:35:18,639
sure i mean i i guess i was trying to

2449
01:35:18,639 --> 01:35:20,239
walk the fine line between providing too

2450
01:35:20,239 --> 01:35:22,560
much information and not enough

2451
01:35:22,560 --> 01:35:23,520
um

2452
01:35:23,520 --> 01:35:25,440
we can talk about that however much you

2453
01:35:25,440 --> 01:35:26,320
want

2454
01:35:26,320 --> 01:35:28,000
one one thing that might be useful to

2455
01:35:28,000 --> 01:35:30,239
understand is that nmea

2456
01:35:30,239 --> 01:35:32,159
as an organization

2457
01:35:32,159 --> 01:35:34,800
helps helps companies um resolve

2458
01:35:34,800 --> 01:35:36,320
situations where there's where there's

2459
01:35:36,320 --> 01:35:37,600
problems where they're implementing the

2460
01:35:37,600 --> 01:35:39,280
standard differently but aside from that

2461
01:35:39,280 --> 01:35:40,880
there's also a certification process

2462
01:35:40,880 --> 01:35:43,920
that um every device goes through that

2463
01:35:43,920 --> 01:35:45,520
tests things like

2464
01:35:45,520 --> 01:35:47,040
source address collisions and how they

2465
01:35:47,040 --> 01:35:48,159
handle that

2466
01:35:48,159 --> 01:35:50,480
um so i'm trying to understand it from

2467
01:35:50,480 --> 01:35:52,080
the use case side right as i said i mean

2468
01:35:52,080 --> 01:35:53,280
we're sitting there and trying to

2469
01:35:53,280 --> 01:35:55,600
understand it and so let's say we have a

2470
01:35:55,600 --> 01:35:58,400
receiver device that i guess you know

2471
01:35:58,400 --> 01:36:00,320
displaced some

2472
01:36:00,320 --> 01:36:02,560
multiple different instances of the same

2473
01:36:02,560 --> 01:36:04,000
type of sensors like

2474
01:36:04,000 --> 01:36:05,600
temperatures on different places of the

2475
01:36:05,600 --> 01:36:07,840
ship is that what could happen that's

2476
01:36:07,840 --> 01:36:09,280
one of the many things yeah okay so

2477
01:36:09,280 --> 01:36:11,440
that's just let's run with one simple

2478
01:36:11,440 --> 01:36:13,760
example so i understand the use case so

2479
01:36:13,760 --> 01:36:16,080
how would that display device

2480
01:36:16,080 --> 01:36:16,880
know

2481
01:36:16,880 --> 01:36:18,480
where and how to display the different

2482
01:36:18,480 --> 01:36:20,880
temperature information

2483
01:36:20,880 --> 01:36:23,520
are there is there well-defined let's

2484
01:36:23,520 --> 01:36:25,600
say set of locations where you could

2485
01:36:25,600 --> 01:36:28,080
install these things

2486
01:36:28,080 --> 01:36:29,199
yes so there's there's a whole

2487
01:36:29,199 --> 01:36:30,960
application protocol that's laid out

2488
01:36:30,960 --> 01:36:33,600
there are you familiar with um j1939 at

2489
01:36:33,600 --> 01:36:35,440
all yeah of course i mean so that's an

2490
01:36:35,440 --> 01:36:37,440
automotive protocol right here the

2491
01:36:37,440 --> 01:36:40,239
marine version is enemy 2000 yeah um but

2492
01:36:40,239 --> 01:36:41,920
all that is very well defined as far as

2493
01:36:41,920 --> 01:36:43,360
here's the temperature sensor it's air

2494
01:36:43,360 --> 01:36:45,119
temperature so let's take it offline but

2495
01:36:45,119 --> 01:36:46,800
that's where where i'm trying to you

2496
01:36:46,800 --> 01:36:48,400
know ramp up to the level that i

2497
01:36:48,400 --> 01:36:50,400
understand what you're trying to achieve

2498
01:36:50,400 --> 01:36:51,920
and then i think only can i give

2499
01:36:51,920 --> 01:36:53,600
recommendations right which is why these

2500
01:36:53,600 --> 01:36:54,880
requirements where you're trying to

2501
01:36:54,880 --> 01:36:56,000
derive

2502
01:36:56,000 --> 01:36:57,520
your understanding from the application

2503
01:36:57,520 --> 01:36:58,800
to what the network should do is

2504
01:36:58,800 --> 01:37:01,600
something we cannot i cannot comment on

2505
01:37:01,600 --> 01:37:03,119
because

2506
01:37:03,119 --> 01:37:04,960
yeah i mean i i guess i

2507
01:37:04,960 --> 01:37:06,480
wanted to distill it for what everybody

2508
01:37:06,480 --> 01:37:09,040
was um

2509
01:37:09,040 --> 01:37:10,000
all right

2510
01:37:10,000 --> 01:37:12,320
so yeah so that was amazing

2511
01:37:12,320 --> 01:37:13,840
very good information good presentation

2512
01:37:13,840 --> 01:37:15,280
there's a lot to

2513
01:37:15,280 --> 01:37:17,440
digest there we can help you create a

2514
01:37:17,440 --> 01:37:18,960
draft if you want to go that route if

2515
01:37:18,960 --> 01:37:20,560
you do want to go a new protocol route

2516
01:37:20,560 --> 01:37:22,080
we can help you with that as well it

2517
01:37:22,080 --> 01:37:23,679
sounds like the recommendation is to not

2518
01:37:23,679 --> 01:37:25,679
do that um

2519
01:37:25,679 --> 01:37:26,480
i

2520
01:37:26,480 --> 01:37:27,520
um

2521
01:37:27,520 --> 01:37:29,360
if if we do go to the new portable route

2522
01:37:29,360 --> 01:37:30,719
this would be the right place to do it

2523
01:37:30,719 --> 01:37:32,719
um otherwise creating an informational

2524
01:37:32,719 --> 01:37:34,239
draft that probably would be best we

2525
01:37:34,239 --> 01:37:36,239
have our multicast operational group

2526
01:37:36,239 --> 01:37:38,000
called mbondi

2527
01:37:38,000 --> 01:37:40,800
that greg and lenny lead and that that

2528
01:37:40,800 --> 01:37:42,320
kind of draft may be better in there but

2529
01:37:42,320 --> 01:37:43,840
we can talk about that offline i would

2530
01:37:43,840 --> 01:37:45,679
recommend grabbing dino

2531
01:37:45,679 --> 01:37:48,320
after this and talking some more yeah

2532
01:37:48,320 --> 01:37:49,760
maybe i want to clarify too you know

2533
01:37:49,760 --> 01:37:52,000
when i say write a draft i'm not saying

2534
01:37:52,000 --> 01:37:53,840
it necessarily it will be an rfc or

2535
01:37:53,840 --> 01:37:54,800
anything

2536
01:37:54,800 --> 01:37:56,960
just so we have something written down i

2537
01:37:56,960 --> 01:37:59,119
mean you can send an email of course but

2538
01:37:59,119 --> 01:38:01,199
i think it's good to just write a very

2539
01:38:01,199 --> 01:38:02,800
short draft just

2540
01:38:02,800 --> 01:38:06,000
explain you know your requirements um it

2541
01:38:06,000 --> 01:38:08,080
can be a very simple thing just just so

2542
01:38:08,080 --> 01:38:10,239
we have a common reference and for

2543
01:38:10,239 --> 01:38:11,760
discussion kind of

2544
01:38:11,760 --> 01:38:13,440
okay sounds good i want to thank

2545
01:38:13,440 --> 01:38:16,480
everybody for their time thanks so much

2546
01:38:16,480 --> 01:38:18,239
yeah it's great when you have time for

2547
01:38:18,239 --> 01:38:20,320
good good discussions like this

2548
01:38:20,320 --> 01:38:22,880
but now we need to move on yeah and to

2549
01:38:22,880 --> 01:38:24,320
answer your question brian we we will

2550
01:38:24,320 --> 01:38:27,440
share slides so go ahead

2551
01:38:28,159 --> 01:38:30,719
all right thanks mike um hey everybody

2552
01:38:30,719 --> 01:38:33,040
um sorry i can't be there in person but

2553
01:38:33,040 --> 01:38:34,480
um

2554
01:38:34,480 --> 01:38:36,400
if you go hang out with the dns folks

2555
01:38:36,400 --> 01:38:37,760
they'll they'll make all sorts of snide

2556
01:38:37,760 --> 01:38:39,600
comments about how my schedule kind of

2557
01:38:39,600 --> 01:38:41,920
interferes with my ietf schedule

2558
01:38:41,920 --> 01:38:44,800
um just want to do a quick update on on

2559
01:38:44,800 --> 01:38:45,679
moving

2560
01:38:45,679 --> 01:38:50,000
rfcs 33 76 and 3810 to full standard

2561
01:38:50,000 --> 01:38:53,440
um yes i'm presenting this but um

2562
01:38:53,440 --> 01:38:54,800
you know there's also a bunch of people

2563
01:38:54,800 --> 01:38:56,320
in the background helping me out you

2564
01:38:56,320 --> 01:39:00,080
know a new femi tim torelis stig

2565
01:39:00,080 --> 01:39:01,760
so this is really just me trying to

2566
01:39:01,760 --> 01:39:02,800
reflect

2567
01:39:02,800 --> 01:39:04,560
you know what uh what we've been able to

2568
01:39:04,560 --> 01:39:05,760
do so

2569
01:39:05,760 --> 01:39:08,560
next slide please

2570
01:39:09,360 --> 01:39:12,560
um so i i published a 03 version of the

2571
01:39:12,560 --> 01:39:16,080
two biz documents a couple weeks ago

2572
01:39:16,080 --> 01:39:18,239
as best i can tell it captures all of

2573
01:39:18,239 --> 01:39:20,880
the errata and identified issues that

2574
01:39:20,880 --> 01:39:22,880
has has been raised

2575
01:39:22,880 --> 01:39:24,480
both in the design team and on the

2576
01:39:24,480 --> 01:39:25,920
mailing list

2577
01:39:25,920 --> 01:39:27,840
for for making sure that the documents

2578
01:39:27,840 --> 01:39:30,159
are ready to go to full standard

2579
01:39:30,159 --> 01:39:32,320
except for one thing

2580
01:39:32,320 --> 01:39:35,360
uh next slide please

2581
01:39:35,760 --> 01:39:37,360
so i i

2582
01:39:37,360 --> 01:39:38,800
posted the mailing list a little while

2583
01:39:38,800 --> 01:39:41,040
ago about this one

2584
01:39:41,040 --> 01:39:44,239
so rsc 4604

2585
01:39:44,239 --> 01:39:47,360
describes how to use igmpv3 and mldv2

2586
01:39:47,360 --> 01:39:49,520
for ssm

2587
01:39:49,520 --> 01:39:52,560
and it does a formal update of both 3376

2588
01:39:52,560 --> 01:39:55,040
and 3810.

2589
01:39:55,040 --> 01:39:55,920
there's

2590
01:39:55,920 --> 01:39:57,360
i want to say like

2591
01:39:57,360 --> 01:39:58,400
six

2592
01:39:58,400 --> 01:40:00,639
or seven

2593
01:40:00,639 --> 01:40:03,440
modifications that that 4604 makes to

2594
01:40:03,440 --> 01:40:05,760
those two standards for the operation of

2595
01:40:05,760 --> 01:40:08,560
the group management protocols and um

2596
01:40:08,560 --> 01:40:10,320
and it is a pro standard in and of

2597
01:40:10,320 --> 01:40:11,360
itself

2598
01:40:11,360 --> 01:40:13,440
and so the the open question really is

2599
01:40:13,440 --> 01:40:16,560
is is how do we want to handle this

2600
01:40:16,560 --> 01:40:19,760
go to the next slide please mike

2601
01:40:20,560 --> 01:40:22,159
so

2602
01:40:22,159 --> 01:40:25,520
i i see two options um and the one i

2603
01:40:25,520 --> 01:40:27,199
think i recommended on the mailing list

2604
01:40:27,199 --> 01:40:28,719
was we actually incorporate the protocol

2605
01:40:28,719 --> 01:40:30,880
changes from 4604 into the two biz

2606
01:40:30,880 --> 01:40:32,159
documents

2607
01:40:32,159 --> 01:40:33,679
um

2608
01:40:33,679 --> 01:40:35,600
i think what that requires is for us to

2609
01:40:35,600 --> 01:40:37,119
agree that

2610
01:40:37,119 --> 01:40:39,360
the fact that 4604 has been around for

2611
01:40:39,360 --> 01:40:41,280
15 years as a proposed standard is

2612
01:40:41,280 --> 01:40:42,639
actually ready for advancement to full

2613
01:40:42,639 --> 01:40:44,560
standard as well

2614
01:40:44,560 --> 01:40:45,679
i don't think i'm going to get an

2615
01:40:45,679 --> 01:40:47,119
argument out of anybody from the

2616
01:40:47,119 --> 01:40:50,159
multicast operations side because ssm is

2617
01:40:50,159 --> 01:40:52,320
is has been used in a in a variety of

2618
01:40:52,320 --> 01:40:54,639
places and in a variety of ways and

2619
01:40:54,639 --> 01:40:56,560
and um and that document seems to be

2620
01:40:56,560 --> 01:40:57,920
pretty solid

2621
01:40:57,920 --> 01:40:59,920
so if we do that incorporation of

2622
01:40:59,920 --> 01:41:01,520
protocol changes

2623
01:41:01,520 --> 01:41:02,480
then

2624
01:41:02,480 --> 01:41:05,520
both 3376 and and 3810

2625
01:41:05,520 --> 01:41:10,320
biz would mark 4604 as is obsolete

2626
01:41:10,320 --> 01:41:11,119
um

2627
01:41:11,119 --> 01:41:12,880
the other way of going about this would

2628
01:41:12,880 --> 01:41:16,159
be to create a 4604 biz and advance that

2629
01:41:16,159 --> 01:41:19,280
in parallel with the other two

2630
01:41:19,280 --> 01:41:21,520
but i don't see that keeping that

2631
01:41:21,520 --> 01:41:23,600
separation makes a whole lot of sense

2632
01:41:23,600 --> 01:41:25,840
may actually be confusing new readers

2633
01:41:25,840 --> 01:41:27,199
and then we'd basically end up having

2634
01:41:27,199 --> 01:41:32,719
4604 biz update 3376 and 38 biz uh next

2635
01:41:32,719 --> 01:41:35,040
slide

2636
01:41:35,679 --> 01:41:38,800
so so my my suggestion to them to the

2637
01:41:38,800 --> 01:41:40,080
working group is that we actually you

2638
01:41:40,080 --> 01:41:41,679
can do that incorporation pull

2639
01:41:41,679 --> 01:41:44,000
everything into the two biz documents

2640
01:41:44,000 --> 01:41:47,840
and 4604 goes away you know uh alvaro

2641
01:41:47,840 --> 01:41:49,360
made the comment on the mailing list

2642
01:41:49,360 --> 01:41:50,320
that we would want to make sure that we

2643
01:41:50,320 --> 01:41:52,400
actually provided that justification

2644
01:41:52,400 --> 01:41:54,320
uh in the shepherd write-up

2645
01:41:54,320 --> 01:41:56,480
and and maybe possibly in those two

2646
01:41:56,480 --> 01:41:58,000
documents but most likely in the

2647
01:41:58,000 --> 01:42:01,199
shepherd write up

2648
01:42:01,199 --> 01:42:03,040
so that's all i had

2649
01:42:03,040 --> 01:42:04,560
questions comments

2650
01:42:04,560 --> 01:42:07,760
i see ac in the queue

2651
01:42:08,159 --> 01:42:11,600
hey brian ac linda my cisco systems uh i

2652
01:42:11,600 --> 01:42:13,920
agree with that it doesn't make sense to

2653
01:42:13,920 --> 01:42:16,320
keep them separate and they should be

2654
01:42:16,320 --> 01:42:18,639
advanced together uh to do it the full

2655
01:42:18,639 --> 01:42:20,719
standard don't you have to produce some

2656
01:42:20,719 --> 01:42:23,199
other document on the implementation and

2657
01:42:23,199 --> 01:42:25,199
do this survey and all this extra work

2658
01:42:25,199 --> 01:42:27,360
or don't you have to do that no

2659
01:42:27,360 --> 01:42:28,800
all of that's already been done that

2660
01:42:28,800 --> 01:42:31,440
that was that was work that was done

2661
01:42:31,440 --> 01:42:32,800
prior to the start of the two biz

2662
01:42:32,800 --> 01:42:35,679
documents so so we have implementation

2663
01:42:35,679 --> 01:42:37,520
survey reports that

2664
01:42:37,520 --> 01:42:39,280
that back up

2665
01:42:39,280 --> 01:42:41,119
this material

2666
01:42:41,119 --> 01:42:43,760
okay

2667
01:42:43,760 --> 01:42:44,880
thanks

2668
01:42:44,880 --> 01:42:46,880
sure

2669
01:42:46,880 --> 01:42:50,080
uh uh stig here so yeah you feel the the

2670
01:42:50,080 --> 01:42:52,560
survey that was done covers

2671
01:42:52,560 --> 01:42:56,320
all you need to ask for 4604

2672
01:42:56,320 --> 01:42:57,760
so i think we'd probably have to go back

2673
01:42:57,760 --> 01:43:00,800
and do some additional work for 4604 and

2674
01:43:00,800 --> 01:43:03,119
i did not include that in the slides as

2675
01:43:03,119 --> 01:43:05,839
a work item but

2676
01:43:06,159 --> 01:43:10,000
i think from the from the perspective of

2677
01:43:10,000 --> 01:43:12,480
of what i have seen in an operational

2678
01:43:12,480 --> 01:43:14,480
and implementation perspective that that

2679
01:43:14,480 --> 01:43:15,920
survey should be pretty straightforward

2680
01:43:15,920 --> 01:43:19,440
and and wouldn't be a big time sink

2681
01:43:19,440 --> 01:43:21,199
okay yeah

2682
01:43:21,199 --> 01:43:23,440
yeah this personally yes with

2683
01:43:23,440 --> 01:43:25,840
participants um

2684
01:43:25,840 --> 01:43:27,920
i think it would be a good idea to

2685
01:43:27,920 --> 01:43:30,880
include this because um

2686
01:43:30,880 --> 01:43:33,520
i i've seen i've seen implementations

2687
01:43:33,520 --> 01:43:36,040
that you know implemented just igmp with

2688
01:43:36,040 --> 01:43:38,560
ddrmldb2 and then somehow overlooked

2689
01:43:38,560 --> 01:43:41,520
some of those as some requirements

2690
01:43:41,520 --> 01:43:42,639
um

2691
01:43:42,639 --> 01:43:45,280
and i think the only reason 4604 is a

2692
01:43:45,280 --> 01:43:47,280
separate document is that it was kind of

2693
01:43:47,280 --> 01:43:50,159
done after those base protocols right

2694
01:43:50,159 --> 01:43:53,280
yeah ssm it's really important to us so

2695
01:43:53,280 --> 01:43:54,800
yeah

2696
01:43:54,800 --> 01:43:56,960
yeah and i will i will fully admit that

2697
01:43:56,960 --> 01:43:58,000
um

2698
01:43:58,000 --> 01:43:59,280
you know you'll you'll find that i'm

2699
01:43:59,280 --> 01:44:01,440
listed as the co-author of 4604 along

2700
01:44:01,440 --> 01:44:04,400
with hugh holbrook and brad kane so

2701
01:44:04,400 --> 01:44:06,719
um you know part of this was we didn't

2702
01:44:06,719 --> 01:44:08,800
want to

2703
01:44:08,800 --> 01:44:11,679
um immediately turn around and open up

2704
01:44:11,679 --> 01:44:14,719
3376 and 3810 again

2705
01:44:14,719 --> 01:44:16,239
given that people were trying to

2706
01:44:16,239 --> 01:44:18,639
implement those versions while while we

2707
01:44:18,639 --> 01:44:21,520
were also working on the ssm side so

2708
01:44:21,520 --> 01:44:23,360
um

2709
01:44:23,360 --> 01:44:24,159
right

2710
01:44:24,159 --> 01:44:26,000
yeah by the way i'm sure you checked the

2711
01:44:26,000 --> 01:44:28,480
46 and for errata and i just checked

2712
01:44:28,480 --> 01:44:30,960
myself too and it's only one one small

2713
01:44:30,960 --> 01:44:32,400
comment let's see

2714
01:44:32,400 --> 01:44:35,400
yep

2715
01:44:35,840 --> 01:44:39,760
uh let's see dino what's in line

2716
01:44:40,560 --> 01:44:42,719
hey this is dino um brian i don't want

2717
01:44:42,719 --> 01:44:44,880
to throw a monkey wrench in this but

2718
01:44:44,880 --> 01:44:46,480
and maybe this is a separate effort when

2719
01:44:46,480 --> 01:44:48,159
i'm about to suggest is

2720
01:44:48,159 --> 01:44:51,840
do you think mld could be a dual stack

2721
01:44:51,840 --> 01:44:53,040
reporter

2722
01:44:53,040 --> 01:44:55,679
in other words ipv4 group addresses can

2723
01:44:55,679 --> 01:44:57,840
be embedded at ipv6 addresses and just

2724
01:44:57,840 --> 01:44:59,520
run one protocol

2725
01:44:59,520 --> 01:45:02,719
to join v4 and v6 groups

2726
01:45:02,719 --> 01:45:03,520
so

2727
01:45:03,520 --> 01:45:05,840
i don't know it has anything to do with

2728
01:45:05,840 --> 01:45:08,239
advancing these documents but maybe

2729
01:45:08,239 --> 01:45:10,400
it's some new effort and is there any

2730
01:45:10,400 --> 01:45:12,000
value at this point

2731
01:45:12,000 --> 01:45:12,960
just

2732
01:45:12,960 --> 01:45:14,560
i'm looking at the chairs to see a

2733
01:45:14,560 --> 01:45:16,320
reaction and they're moving their heads

2734
01:45:16,320 --> 01:45:18,000
up and down and i can't see their

2735
01:45:18,000 --> 01:45:19,440
expressions because there's masks over

2736
01:45:19,440 --> 01:45:21,440
there

2737
01:45:21,440 --> 01:45:22,960
so so dino you know you're going to get

2738
01:45:22,960 --> 01:45:25,199
a snarky answer for me put your toolbox

2739
01:45:25,199 --> 01:45:26,320
away

2740
01:45:26,320 --> 01:45:28,159
um

2741
01:45:28,159 --> 01:45:31,040
okay yes i i i know that um

2742
01:45:31,040 --> 01:45:32,639
yes

2743
01:45:32,639 --> 01:45:34,239
yeah we we could look at something like

2744
01:45:34,239 --> 01:45:35,440
that but i definitely think that that

2745
01:45:35,440 --> 01:45:40,839
would be a next kind of version thing so

2746
01:45:44,320 --> 01:45:46,159
so i guess first

2747
01:45:46,159 --> 01:45:49,040
for mike and stigg um

2748
01:45:49,040 --> 01:45:51,760
if you want to do a you know a consensus

2749
01:45:51,760 --> 01:45:53,119
call on the mailing list or if you want

2750
01:45:53,119 --> 01:45:54,880
to declare consensus if alvaro is

2751
01:45:54,880 --> 01:45:56,719
sitting there and can back you up that

2752
01:45:56,719 --> 01:45:58,800
you know we'll start looking at the 60

2753
01:45:58,800 --> 01:46:02,480
you know doing a 4604 uh incorporation

2754
01:46:02,480 --> 01:46:04,560
um and then i'll see if i can

2755
01:46:04,560 --> 01:46:06,239
talk to folks who were who worked on the

2756
01:46:06,239 --> 01:46:08,560
implementation reports to also just do

2757
01:46:08,560 --> 01:46:11,520
one for 4604

2758
01:46:11,520 --> 01:46:12,639
yeah we're gonna do a quick pull right

2759
01:46:12,639 --> 01:46:14,800
now brian just because

2760
01:46:14,800 --> 01:46:17,360
when we issued an adoption call

2761
01:46:17,360 --> 01:46:19,119
on one of your last drafts we've got

2762
01:46:19,119 --> 01:46:20,560
zero response so i think our best

2763
01:46:20,560 --> 01:46:23,440
response is right now

2764
01:46:24,520 --> 01:46:26,400
yeah

2765
01:46:26,400 --> 01:46:28,800
but just just to get some idea what what

2766
01:46:28,800 --> 01:46:30,239
people think

2767
01:46:30,239 --> 01:46:33,919
so i'm just doing a quick poll here

2768
01:46:34,159 --> 01:46:36,000
so basically just asking do you think

2769
01:46:36,000 --> 01:46:38,800
4604 should be incorporated

2770
01:46:38,800 --> 01:46:41,840
i guess it's up there now

2771
01:46:41,840 --> 01:46:43,679
just to get some quick idea about what

2772
01:46:43,679 --> 01:46:44,560
people

2773
01:46:44,560 --> 01:46:48,280
what people feel like

2774
01:47:04,159 --> 01:47:07,040
yeah it's looking pretty clear here

2775
01:47:07,040 --> 01:47:08,880
but i think the biggest problem is just

2776
01:47:08,880 --> 01:47:11,440
like you know like the

2777
01:47:11,440 --> 01:47:14,159
you know yeah just dealing with uh

2778
01:47:14,159 --> 01:47:15,600
yeah if you have sufficient

2779
01:47:15,600 --> 01:47:18,080
implementation status whatever

2780
01:47:18,080 --> 01:47:19,920
and of course you analyze this you know

2781
01:47:19,920 --> 01:47:21,679
to see if there's some parts of the

2782
01:47:21,679 --> 01:47:23,520
document you know that haven't been

2783
01:47:23,520 --> 01:47:26,239
implemented or isn't mature or whatever

2784
01:47:26,239 --> 01:47:28,000
uh i don't know how you feel about that

2785
01:47:28,000 --> 01:47:29,119
is

2786
01:47:29,119 --> 01:47:29,840
is

2787
01:47:29,840 --> 01:47:32,320
is basically all of 4604 you think

2788
01:47:32,320 --> 01:47:35,679
something that everyone implements so

2789
01:47:35,679 --> 01:47:37,360
so i i think there's there's there's

2790
01:47:37,360 --> 01:47:39,840
really two ways of looking at it um

2791
01:47:39,840 --> 01:47:42,239
when we wrote 4604 we specifically

2792
01:47:42,239 --> 01:47:43,440
marked

2793
01:47:43,440 --> 01:47:46,560
what what pieces of the document

2794
01:47:46,560 --> 01:47:50,639
we're modifying 3376 and 38.10

2795
01:47:50,639 --> 01:47:52,880
so we we could focus on just those

2796
01:47:52,880 --> 01:47:54,800
aspects

2797
01:47:54,800 --> 01:47:57,360
and and get those incorporated into into

2798
01:47:57,360 --> 01:48:00,320
the biz documents

2799
01:48:02,880 --> 01:48:04,960
otherwise it's it'd be a little bit more

2800
01:48:04,960 --> 01:48:07,280
work just to see

2801
01:48:07,280 --> 01:48:09,199
how you know what what does the survey

2802
01:48:09,199 --> 01:48:12,159
look like for for 4604 and i i'd have to

2803
01:48:12,159 --> 01:48:14,159
think about that a little bit but

2804
01:48:14,159 --> 01:48:15,840
um

2805
01:48:15,840 --> 01:48:18,560
yeah but yeah at least we we got 15

2806
01:48:18,560 --> 01:48:20,639
people responding all saying it should

2807
01:48:20,639 --> 01:48:22,480
be incorporated so

2808
01:48:22,480 --> 01:48:25,040
that gives you some some idea

2809
01:48:25,040 --> 01:48:26,880
yep you can actually check on the

2810
01:48:26,880 --> 01:48:29,920
mailing list of course

2811
01:48:29,920 --> 01:48:31,920
yeah yeah we definitely should should

2812
01:48:31,920 --> 01:48:33,360
check on the mailing list great if you

2813
01:48:33,360 --> 01:48:35,679
can send them email asking or you

2814
01:48:35,679 --> 01:48:38,320
already did i guess

2815
01:48:38,320 --> 01:48:40,080
yeah i can i can poke the mailing list

2816
01:48:40,080 --> 01:48:41,280
again and just

2817
01:48:41,280 --> 01:48:43,440
you know explicitly ask for a response

2818
01:48:43,440 --> 01:48:45,040
on on that approach

2819
01:48:45,040 --> 01:48:48,159
yeah okay yeah great okay great so we

2820
01:48:48,159 --> 01:48:50,320
got 15 in favor of that so and none

2821
01:48:50,320 --> 01:48:52,239
again so i think

2822
01:48:52,239 --> 01:48:55,600
we'll probably do that and then our um

2823
01:48:55,600 --> 01:48:58,840
or lester's ad wants to say something

2824
01:48:58,840 --> 01:49:01,360
yeah hey uh i wrote a thunder rolling

2825
01:49:01,360 --> 01:49:03,520
andy yeah so just to to point out for

2826
01:49:03,520 --> 01:49:05,040
the process point of view just so we

2827
01:49:05,040 --> 01:49:06,880
don't forget for the future

2828
01:49:06,880 --> 01:49:08,719
uh i mean i hope this is done

2829
01:49:08,719 --> 01:49:10,719
soon right and and maybe i'm still the

2830
01:49:10,719 --> 01:49:14,320
id and i can you know process this stuff

2831
01:49:14,320 --> 01:49:16,560
when we go to internet standard

2832
01:49:16,560 --> 01:49:18,080
one of the requirements is that there

2833
01:49:18,080 --> 01:49:19,199
haven't been

2834
01:49:19,199 --> 01:49:21,920
significant changes

2835
01:49:21,920 --> 01:49:24,400
to whatever the document was before now

2836
01:49:24,400 --> 01:49:25,920
in this case because we're incorporating

2837
01:49:25,920 --> 01:49:27,440
this other thing

2838
01:49:27,440 --> 01:49:29,280
it may look like there are significant

2839
01:49:29,280 --> 01:49:30,480
changes right

2840
01:49:30,480 --> 01:49:31,199
so

2841
01:49:31,199 --> 01:49:33,840
um we're going to want to and ryan

2842
01:49:33,840 --> 01:49:35,040
already said it there i just want to say

2843
01:49:35,040 --> 01:49:38,560
it again we're going to want to justify

2844
01:49:38,560 --> 01:49:39,440
why

2845
01:49:39,440 --> 01:49:40,800
it looks like there are significant

2846
01:49:40,800 --> 01:49:42,880
changes when in reality there aren't

2847
01:49:42,880 --> 01:49:44,480
right because we're moving

2848
01:49:44,480 --> 01:49:47,199
486 whatever into internal standards as

2849
01:49:47,199 --> 01:49:50,400
well as part of the other two documents

2850
01:49:50,400 --> 01:49:52,560
so i don't know if we already have

2851
01:49:52,560 --> 01:49:54,719
a shepard for these documents

2852
01:49:54,719 --> 01:49:56,320
but if we don't we should probably find

2853
01:49:56,320 --> 01:49:57,840
the shepherd now and start you know

2854
01:49:57,840 --> 01:49:59,920
documenting all this stuff so that by

2855
01:49:59,920 --> 01:50:02,080
the time that this gets to the iesg we

2856
01:50:02,080 --> 01:50:04,239
don't face questions of why the heck are

2857
01:50:04,239 --> 01:50:06,000
you changing all the stuff

2858
01:50:06,000 --> 01:50:07,119
because we're not we're just

2859
01:50:07,119 --> 01:50:08,639
incorporating

2860
01:50:08,639 --> 01:50:10,560
the changes that were already done 15

2861
01:50:10,560 --> 01:50:11,760
years ago

2862
01:50:11,760 --> 01:50:13,840
so just to keep in mind for the process

2863
01:50:13,840 --> 01:50:15,679
and the minutes and all that stuff

2864
01:50:15,679 --> 01:50:17,280
thanks

2865
01:50:17,280 --> 01:50:19,199
yeah yeah that's yeah

2866
01:50:19,199 --> 01:50:21,119
that's certainly important and

2867
01:50:21,119 --> 01:50:23,440
definitely good together shepard um

2868
01:50:23,440 --> 01:50:25,119
i don't know if it matters but one thing

2869
01:50:25,119 --> 01:50:27,599
i can imagine is if if someone

2870
01:50:27,599 --> 01:50:32,159
implemented just the uh base igpv3 rfc

2871
01:50:32,159 --> 01:50:35,440
and not the ssm part not 4604

2872
01:50:35,440 --> 01:50:36,639
then the problem would be that you're

2873
01:50:36,639 --> 01:50:38,800
not compliant anymore or wouldn't be

2874
01:50:38,800 --> 01:50:40,639
compliant with

2875
01:50:40,639 --> 01:50:43,280
the full the full spec but

2876
01:50:43,280 --> 01:50:45,119
on the other hand though

2877
01:50:45,119 --> 01:50:46,719
you really want everyone to implement

2878
01:50:46,719 --> 01:50:49,280
the ssm part

2879
01:50:49,280 --> 01:50:50,960
they can still claim compliance with the

2880
01:50:50,960 --> 01:50:54,320
old rfc of course

2881
01:50:56,320 --> 01:50:59,119
um okay yeah let's move on

2882
01:50:59,119 --> 01:51:01,599
this is the very last uh

2883
01:51:01,599 --> 01:51:03,840
presentation i don't think the authors

2884
01:51:03,840 --> 01:51:06,800
are here they they're in india

2885
01:51:06,800 --> 01:51:09,440
and uh

2886
01:51:09,679 --> 01:51:11,599
i told them to take it to the list and

2887
01:51:11,599 --> 01:51:13,679
get some feedback which they haven't

2888
01:51:13,679 --> 01:51:15,360
done yet but they did send us some

2889
01:51:15,360 --> 01:51:16,960
slides maybe we can go through them real

2890
01:51:16,960 --> 01:51:18,639
quick hopefully you read this as well

2891
01:51:18,639 --> 01:51:21,599
stig my take on this is they are

2892
01:51:21,599 --> 01:51:24,560
proposing to

2893
01:51:26,239 --> 01:51:29,199
standardize static multicast routes that

2894
01:51:29,199 --> 01:51:33,520
are extended to include forwarding

2895
01:51:33,520 --> 01:51:35,760
locations

2896
01:51:35,760 --> 01:51:37,679
so like a static

2897
01:51:37,679 --> 01:51:39,599
ipm route for instance

2898
01:51:39,599 --> 01:51:41,040
in your

2899
01:51:41,040 --> 01:51:43,840
vernacular and

2900
01:51:43,840 --> 01:51:45,599
instead of just pointing back towards

2901
01:51:45,599 --> 01:51:47,520
the source for a particular

2902
01:51:47,520 --> 01:51:48,960
source and group

2903
01:51:48,960 --> 01:51:50,960
you're also you're also extending that

2904
01:51:50,960 --> 01:51:51,920
to

2905
01:51:51,920 --> 01:51:56,080
show where that traffic should flow to

2906
01:51:58,320 --> 01:52:00,639
and also to be able to have a redis

2907
01:52:00,639 --> 01:52:02,480
redistribute option

2908
01:52:02,480 --> 01:52:04,639
that can be interoperable with

2909
01:52:04,639 --> 01:52:06,880
multicast protocols

2910
01:52:06,880 --> 01:52:09,760
so go ahead taurus

2911
01:52:10,000 --> 01:52:11,520
yeah i haven't read it but from the

2912
01:52:11,520 --> 01:52:13,840
description it sounded like

2913
01:52:13,840 --> 01:52:16,000
if if that would be something like a

2914
01:52:16,000 --> 01:52:18,400
yang model for for the pro for for

2915
01:52:18,400 --> 01:52:19,599
programming these things i mean there

2916
01:52:19,599 --> 01:52:21,360
has been cli to do these things on the

2917
01:52:21,360 --> 01:52:24,400
various vendor equipment uh not a single

2918
01:52:24,400 --> 01:52:26,000
command but multiple commands through

2919
01:52:26,000 --> 01:52:28,080
which you can combine to achieve these

2920
01:52:28,080 --> 01:52:30,960
things and you know lots of nice hacky

2921
01:52:30,960 --> 01:52:32,560
customer deployments relying on that

2922
01:52:32,560 --> 01:52:34,239
stuff so uh

2923
01:52:34,239 --> 01:52:36,239
if

2924
01:52:36,239 --> 01:52:38,480
maybe it's more an mbondy thingy then if

2925
01:52:38,480 --> 01:52:40,880
it's a yang model so i have no idea on

2926
01:52:40,880 --> 01:52:42,880
on on that stuff but uh i don't think

2927
01:52:42,880 --> 01:52:44,719
they do you guys don't work on yang

2928
01:52:44,719 --> 01:52:46,960
models do you

2929
01:52:46,960 --> 01:52:49,440
because it's more and you know mostly

2930
01:52:49,440 --> 01:52:51,679
given how this came from hacky tools

2931
01:52:51,679 --> 01:52:54,000
throughout herself i i was thinking of

2932
01:52:54,000 --> 01:52:56,800
this way but go ahead go ahead uh lenny

2933
01:52:56,800 --> 01:52:58,480
giuliano um

2934
01:52:58,480 --> 01:53:01,040
juniper and uh yeah we do we got we have

2935
01:53:01,040 --> 01:53:02,560
a gang

2936
01:53:02,560 --> 01:53:04,239
uh draft

2937
01:53:04,239 --> 01:53:08,159
um i guess you haven't reviewed it nope

2938
01:53:08,159 --> 01:53:11,599
i avoid yang

2939
01:53:11,599 --> 01:53:13,679
i would in the first place uh look if

2940
01:53:13,679 --> 01:53:15,599
they if they come up with good current

2941
01:53:15,599 --> 01:53:17,679
uh use case that that makes somebody

2942
01:53:17,679 --> 01:53:19,440
excited about this right

2943
01:53:19,440 --> 01:53:21,040
to get it standardized well the question

2944
01:53:21,040 --> 01:53:24,400
i have also is um standardizing static

2945
01:53:24,400 --> 01:53:27,040
multicast routes is that a thing that

2946
01:53:27,040 --> 01:53:28,719
we would want to do it's standardizing

2947
01:53:28,719 --> 01:53:30,960
the configuration of setting that up

2948
01:53:30,960 --> 01:53:32,639
exactly right as i said

2949
01:53:32,639 --> 01:53:34,400
there's a lot of cli to do this in the

2950
01:53:34,400 --> 01:53:36,159
different routers forever

2951
01:53:36,159 --> 01:53:38,719
right yeah i also think you know this is

2952
01:53:38,719 --> 01:53:40,560
something that everyone implements

2953
01:53:40,560 --> 01:53:41,679
pretty much

2954
01:53:41,679 --> 01:53:42,960
but they might do it in slightly

2955
01:53:42,960 --> 01:53:44,880
different ways and

2956
01:53:44,880 --> 01:53:45,920
i don't know whether you want to

2957
01:53:45,920 --> 01:53:48,480
standardize one specific way that maybe

2958
01:53:48,480 --> 01:53:51,760
you know wouldn't match what

2959
01:53:51,760 --> 01:53:55,199
various implementations do and it's very

2960
01:53:55,199 --> 01:53:57,679
local to that device so do we need to

2961
01:53:57,679 --> 01:54:00,400
standardize the static route itself

2962
01:54:00,400 --> 01:54:02,159
but but yeah like a young model for

2963
01:54:02,159 --> 01:54:03,520
instance that's something that we would

2964
01:54:03,520 --> 01:54:06,719
need to standardize maybe i mean does i

2965
01:54:06,719 --> 01:54:09,679
certainly see value in the young model

2966
01:54:09,679 --> 01:54:11,199
so i know implementations call a

2967
01:54:11,199 --> 01:54:13,840
multicast static route really

2968
01:54:13,840 --> 01:54:16,239
configuring the input and replication

2969
01:54:16,239 --> 01:54:17,599
list

2970
01:54:17,599 --> 01:54:19,280
maybe a better name if you want to

2971
01:54:19,280 --> 01:54:21,679
standardize it is to call static

2972
01:54:21,679 --> 01:54:24,080
distribution trees because you it's even

2973
01:54:24,080 --> 01:54:25,920
though you configure the route in one

2974
01:54:25,920 --> 01:54:27,360
router you have to be configured

2975
01:54:27,360 --> 01:54:29,440
consistently all the way downstream as

2976
01:54:29,440 --> 01:54:32,159
well and then the question asked to ask

2977
01:54:32,159 --> 01:54:35,440
um if the pat is it is the input

2978
01:54:35,440 --> 01:54:36,639
interface that you can figure on the

2979
01:54:36,639 --> 01:54:38,159
static route

2980
01:54:38,159 --> 01:54:40,480
the current rpf

2981
01:54:40,480 --> 01:54:42,159
based on what unicast is saying and if

2982
01:54:42,159 --> 01:54:43,679
it changes should it change or should it

2983
01:54:43,679 --> 01:54:46,080
not because it's static yeah so at least

2984
01:54:46,080 --> 01:54:48,239
this draft discusses both options you

2985
01:54:48,239 --> 01:54:51,280
can do it static

2986
01:54:53,599 --> 01:54:55,520
yeah i mean uh

2987
01:54:55,520 --> 01:54:58,000
technically speaking i think static

2988
01:54:58,000 --> 01:55:01,520
uh is a protocol um and so

2989
01:55:01,520 --> 01:55:04,000
this is for you know protocol working

2990
01:55:04,000 --> 01:55:04,800
group

2991
01:55:04,800 --> 01:55:06,719
um

2992
01:55:06,719 --> 01:55:08,400
the question i would have is is there a

2993
01:55:08,400 --> 01:55:12,080
unicast uh static route rfc

2994
01:55:12,080 --> 01:55:14,159
um you know whatever we did for unicast

2995
01:55:14,159 --> 01:55:15,679
i think we should do for multicast if we

2996
01:55:15,679 --> 01:55:17,040
didn't need it for unicast we probably

2997
01:55:17,040 --> 01:55:18,400
don't need it for multicast and vice

2998
01:55:18,400 --> 01:55:20,480
versa but if there is an rfc somewhere

2999
01:55:20,480 --> 01:55:22,000
on static routing

3000
01:55:22,000 --> 01:55:23,679
probably not a very interesting rfc and

3001
01:55:23,679 --> 01:55:25,199
probably hopefully short

3002
01:55:25,199 --> 01:55:26,880
we should do it for you know it seems

3003
01:55:26,880 --> 01:55:30,000
okay to do it for multicast

3004
01:55:30,880 --> 01:55:33,040
yeah i mean that that there should be

3005
01:55:33,040 --> 01:55:34,000
probably

3006
01:55:34,000 --> 01:55:36,480
i hope a young model for for you know uh

3007
01:55:36,480 --> 01:55:38,400
static routing entries right

3008
01:55:38,400 --> 01:55:40,400
so that's that's the rpf stuff i think

3009
01:55:40,400 --> 01:55:42,239
that dino was referring to then there's

3010
01:55:42,239 --> 01:55:44,800
this ipi gmp static join and static

3011
01:55:44,800 --> 01:55:46,719
group and i think those were pretty

3012
01:55:46,719 --> 01:55:48,800
consistent june francisco and since then

3013
01:55:48,800 --> 01:55:50,639
i've kind of lost track of

3014
01:55:50,639 --> 01:55:52,560
who whoever else did additional stuff

3015
01:55:52,560 --> 01:55:54,239
but yeah i mean this stuff has been

3016
01:55:54,239 --> 01:55:55,840
deployed and people before even there

3017
01:55:55,840 --> 01:55:57,440
was the word sdn controller when they

3018
01:55:57,440 --> 01:55:58,880
had routing problems for which our

3019
01:55:58,880 --> 01:56:01,199
dynamic routing protocols could help

3020
01:56:01,199 --> 01:56:03,360
um you know some of these embedded type

3021
01:56:03,360 --> 01:56:05,280
of networks specifically were using all

3022
01:56:05,280 --> 01:56:06,719
this stuff but again

3023
01:56:06,719 --> 01:56:09,360
question is is there sufficient you know

3024
01:56:09,360 --> 01:56:11,760
future going use case interest i think

3025
01:56:11,760 --> 01:56:13,599
mbo and d would at least be a good place

3026
01:56:13,599 --> 01:56:16,320
to kind of vet that and then we can take

3027
01:56:16,320 --> 01:56:17,840
the next steps yeah

3028
01:56:17,840 --> 01:56:20,480
given that static is used a ton as far

3029
01:56:20,480 --> 01:56:22,880
as i know it could be maybe i don't know

3030
01:56:22,880 --> 01:56:24,320
maybe it could be good to document an

3031
01:56:24,320 --> 01:56:26,960
mld a little bit like operational

3032
01:56:26,960 --> 01:56:29,119
practices or issues with static

3033
01:56:29,119 --> 01:56:30,239
config

3034
01:56:30,239 --> 01:56:31,760
you know

3035
01:56:31,760 --> 01:56:35,199
so i'm glad uh lenny led the opinion so

3036
01:56:35,199 --> 01:56:37,119
um and then i'll i'll just

3037
01:56:37,119 --> 01:56:38,880
echo it more stronger i think this

3038
01:56:38,880 --> 01:56:40,880
should definitely not be specified and

3039
01:56:40,880 --> 01:56:42,560
not standardized

3040
01:56:42,560 --> 01:56:43,679
because then when you get into

3041
01:56:43,679 --> 01:56:45,920
redistribution mechanisms what's what if

3042
01:56:45,920 --> 01:56:47,520
pims running over

3043
01:56:47,520 --> 01:56:49,360
this router that has static routes what

3044
01:56:49,360 --> 01:56:51,040
do you do just one override the other

3045
01:56:51,040 --> 01:56:52,880
there's a lot of machinery that would

3046
01:56:52,880 --> 01:56:54,960
have to be specced out to get this right

3047
01:56:54,960 --> 01:56:56,639
and if you provide a recommendation and

3048
01:56:56,639 --> 01:56:57,840
it's wrong it's going to screw up

3049
01:56:57,840 --> 01:56:59,679
networks so let's just avoid this

3050
01:56:59,679 --> 01:57:02,800
monster altogether

3051
01:57:03,360 --> 01:57:05,280
ac in the lineup

3052
01:57:05,280 --> 01:57:06,880
yes um

3053
01:57:06,880 --> 01:57:08,880
ac landing cisco systems i wanted to

3054
01:57:08,880 --> 01:57:12,239
just say the rumors of a static routing

3055
01:57:12,239 --> 01:57:14,400
yang model are not exaggerated i'm an

3056
01:57:14,400 --> 01:57:16,639
offer i can't remember the number though

3057
01:57:16,639 --> 01:57:17,440
uh

3058
01:57:17,440 --> 01:57:20,159
and and for the yang model for ospf we

3059
01:57:20,159 --> 01:57:21,360
got together

3060
01:57:21,360 --> 01:57:23,280
all the me our

3061
01:57:23,280 --> 01:57:25,760
i'd like to say all the major vendors

3062
01:57:25,760 --> 01:57:28,400
and we a lot of things that we had left

3063
01:57:28,400 --> 01:57:30,239
unspecified

3064
01:57:30,239 --> 01:57:31,840
in the protocol

3065
01:57:31,840 --> 01:57:35,199
we did put into the yang model which

3066
01:57:35,199 --> 01:57:38,400
would uh you know and we allowed walt

3067
01:57:38,400 --> 01:57:40,159
in many cases we used features and

3068
01:57:40,159 --> 01:57:43,040
allowed multiple ways of doing things so

3069
01:57:43,040 --> 01:57:45,360
we could get you know it was

3070
01:57:45,360 --> 01:57:48,639
it was people from uh i mean from uh

3071
01:57:48,639 --> 01:57:50,880
juniper cisco um

3072
01:57:50,880 --> 01:57:54,320
huawei and uh nokia i think were the

3073
01:57:54,320 --> 01:57:56,800
people that were worked on it and and so

3074
01:57:56,800 --> 01:57:59,119
it did end up to be a lot but once you

3075
01:57:59,119 --> 01:58:00,960
get to the yang model we did get into

3076
01:58:00,960 --> 01:58:04,080
this we did not specify redistribution

3077
01:58:04,080 --> 01:58:05,760
and that's still something that people

3078
01:58:05,760 --> 01:58:09,599
ask about though for a yang model

3079
01:58:10,800 --> 01:58:13,760
that's all i had to say

3080
01:58:16,639 --> 01:58:20,000
thank you anything else

3081
01:58:20,000 --> 01:58:21,840
so as far as this trap goes we'll just

3082
01:58:21,840 --> 01:58:23,920
we'll inform the the authors of what

3083
01:58:23,920 --> 01:58:26,480
comments are made and

3084
01:58:26,480 --> 01:58:28,560
again to suggest that they

3085
01:58:28,560 --> 01:58:29,920
send this to the list and ask for

3086
01:58:29,920 --> 01:58:32,960
comments and maybe include in bondi

3087
01:58:32,960 --> 01:58:34,719
and i'm excited because i have this

3088
01:58:34,719 --> 01:58:36,320
little battery left and i think we're at

3089
01:58:36,320 --> 01:58:39,119
the end all right

3090
01:58:39,520 --> 01:58:43,199
we're good yeah all right so yeah

3091
01:58:43,199 --> 01:58:46,839
we're done thank you

3092
01:58:52,239 --> 01:58:54,000
i'm really happy with my laptop the

3093
01:58:54,000 --> 01:58:56,480
battery lasts forever i feel like

3094
01:58:56,480 --> 01:58:58,080
yeah

3095
01:58:58,080 --> 01:59:00,400
i've been about 80 percent left oh wow

3096
01:59:00,400 --> 01:59:02,480
that's that's really important what do

3097
01:59:02,480 --> 01:59:03,599
you got

3098
01:59:03,599 --> 01:59:07,360
no it's a thing i don't know okay

3099
01:59:07,360 --> 01:59:08,880
yeah at first i almost got you on the

3100
01:59:08,880 --> 01:59:10,560
same computer as me

3101
01:59:10,560 --> 01:59:12,239
you know that the sign looks a little

3102
01:59:12,239 --> 01:59:15,280
similar yeah it does

3103
01:59:29,679 --> 01:59:33,080
i'm looking forward

3104
01:59:33,310 --> 01:59:36,369
[Music]

3105
02:00:01,600 --> 02:00:04,699
[Music]

3106
02:00:18,239 --> 02:00:20,320
you

