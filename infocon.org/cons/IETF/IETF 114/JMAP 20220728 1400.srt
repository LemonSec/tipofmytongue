1
00:00:07,359 --> 00:00:08,960
we'll need somebody else to take notes

2
00:00:08,960 --> 00:00:11,840
for extra i think

3
00:00:14,000 --> 00:00:15,599
all right 10 o'clock so i guess we

4
00:00:15,599 --> 00:00:18,800
should probably start to be on time

5
00:00:18,800 --> 00:00:20,640
uh i'm jim fenton of course this is

6
00:00:20,640 --> 00:00:22,000
braun

7
00:00:22,000 --> 00:00:24,000
you're in the jmap session

8
00:00:24,000 --> 00:00:26,720
uh or of the of the gmap extra joint

9
00:00:26,720 --> 00:00:28,880
session extra will be

10
00:00:28,880 --> 00:00:31,840
following jmap

11
00:00:37,040 --> 00:00:38,160
whoops

12
00:00:38,160 --> 00:00:39,840
let me just do okay

13
00:00:39,840 --> 00:00:41,520
yep that was the right thing

14
00:00:41,520 --> 00:00:43,520
so hopefully by this time of the week

15
00:00:43,520 --> 00:00:45,840
you have been well exposed to the note

16
00:00:45,840 --> 00:00:47,200
well but

17
00:00:47,200 --> 00:00:50,160
we will continue to do it further

18
00:00:50,160 --> 00:00:52,559
if you haven't read this in detail and

19
00:00:52,559 --> 00:00:54,640
read the reference documents

20
00:00:54,640 --> 00:00:57,440
you need to do that because it by

21
00:00:57,440 --> 00:00:59,039
participating here

22
00:00:59,039 --> 00:01:01,280
uh there are all sorts of uh

23
00:01:01,280 --> 00:01:04,239
uh issues with respect to uh to uh

24
00:01:04,239 --> 00:01:05,840
intellectual property rights and so

25
00:01:05,840 --> 00:01:07,760
forth that you're granting

26
00:01:07,760 --> 00:01:09,360
and um

27
00:01:09,360 --> 00:01:12,560
uh also uh we expect you to abide by the

28
00:01:12,560 --> 00:01:15,280
anti-harassment procedures and so forth

29
00:01:15,280 --> 00:01:16,880
and to

30
00:01:16,880 --> 00:01:18,400
continue wearing your masks when you're

31
00:01:18,400 --> 00:01:21,360
not eating breakfast

32
00:01:23,360 --> 00:01:25,200
there is also a note really well which

33
00:01:25,200 --> 00:01:26,960
we don't have in this particular slide

34
00:01:26,960 --> 00:01:28,320
deck that

35
00:01:28,320 --> 00:01:30,640
goes into more detail in particular on

36
00:01:30,640 --> 00:01:31,600
uh

37
00:01:31,600 --> 00:01:34,960
things like code of conduct

38
00:01:34,960 --> 00:01:36,240
uh

39
00:01:36,240 --> 00:01:38,240
so uh please

40
00:01:38,240 --> 00:01:41,840
use the the the meat echo uh tool

41
00:01:41,840 --> 00:01:44,479
um you can scan the qr code at the front

42
00:01:44,479 --> 00:01:46,079
if you're not there already

43
00:01:46,079 --> 00:01:48,000
it looks like there's a

44
00:01:48,000 --> 00:01:48,880
uh

45
00:01:48,880 --> 00:01:50,399
yeah we've got pretty pretty good

46
00:01:50,399 --> 00:01:52,159
turnout for the uh

47
00:01:52,159 --> 00:01:53,840
for the meat echo tool at this point so

48
00:01:53,840 --> 00:01:56,640
that's great um

49
00:01:56,640 --> 00:01:58,560
and use that when you're going to join

50
00:01:58,560 --> 00:02:00,240
the microphone queue

51
00:02:00,240 --> 00:02:02,159
uh if you're not

52
00:02:02,159 --> 00:02:04,560
doing uh

53
00:02:04,560 --> 00:02:06,240
if you're not actively presenting please

54
00:02:06,240 --> 00:02:09,119
turn off your audio and video and also

55
00:02:09,119 --> 00:02:10,479
your other

56
00:02:10,479 --> 00:02:14,720
uh audio noise maker sorts of devices

57
00:02:15,360 --> 00:02:18,239
and continue to wear your masks

58
00:02:18,239 --> 00:02:20,080
uh unless you're actively speaking at

59
00:02:20,080 --> 00:02:21,680
the microphone and actually we found

60
00:02:21,680 --> 00:02:22,879
that

61
00:02:22,879 --> 00:02:24,800
as i'm doing right now when you're

62
00:02:24,800 --> 00:02:26,800
actively speaking in the microphone

63
00:02:26,800 --> 00:02:28,480
you can probably be understood even if

64
00:02:28,480 --> 00:02:31,519
you keep your mask on

65
00:02:33,040 --> 00:02:34,959
if you're remote please use a headset

66
00:02:34,959 --> 00:02:36,800
that that really helps cut down on echo

67
00:02:36,800 --> 00:02:39,840
and that sort of thing

68
00:02:41,280 --> 00:02:44,319
uh and here the places to find agendas

69
00:02:44,319 --> 00:02:46,000
and so forth that

70
00:02:46,000 --> 00:02:49,360
you have probably already found

71
00:02:49,360 --> 00:02:52,879
so let's uh

72
00:02:54,080 --> 00:02:57,200
jump to the agenda

73
00:03:00,640 --> 00:03:02,800
and

74
00:03:02,800 --> 00:03:04,800
this is this is kind of very very top

75
00:03:04,800 --> 00:03:05,760
level

76
00:03:05,760 --> 00:03:07,200
um

77
00:03:07,200 --> 00:03:08,800
we'll be starting with the jmap

78
00:03:08,800 --> 00:03:10,480
following with extra

79
00:03:10,480 --> 00:03:12,959
and any other business

80
00:03:12,959 --> 00:03:15,280
and was there a more detailed one for

81
00:03:15,280 --> 00:03:16,640
yeah

82
00:03:16,640 --> 00:03:18,640
on next page okay

83
00:03:18,640 --> 00:03:20,800
so here are the uh the the different

84
00:03:20,800 --> 00:03:22,239
drafts we're going to be basically going

85
00:03:22,239 --> 00:03:23,920
through the current drafts

86
00:03:23,920 --> 00:03:27,679
uh and we have a couple of uh

87
00:03:28,159 --> 00:03:30,319
proposed work items that we're going to

88
00:03:30,319 --> 00:03:31,360
discuss

89
00:03:31,360 --> 00:03:32,640
following that

90
00:03:32,640 --> 00:03:34,720
and then we're going to go back over

91
00:03:34,720 --> 00:03:37,680
over our milestones as we usually do

92
00:03:37,680 --> 00:03:40,080
and then extra will be following a

93
00:03:40,080 --> 00:03:42,560
similar format

94
00:03:42,560 --> 00:03:44,959
so are the is there any

95
00:03:44,959 --> 00:03:48,319
agenda bashing to be done

96
00:03:49,440 --> 00:03:51,360
hearing nothing

97
00:03:51,360 --> 00:03:54,480
we will go on to the first item which is

98
00:03:54,480 --> 00:03:57,439
jmat blob

99
00:03:57,680 --> 00:04:01,480
are the slides there now

100
00:04:03,599 --> 00:04:06,640
are there blob slides yet

101
00:04:07,280 --> 00:04:10,799
uh you might need to hit refresh in

102
00:04:10,799 --> 00:04:13,200
fantastic

103
00:04:13,200 --> 00:04:15,519
i did refresh and it worked for mine

104
00:04:15,519 --> 00:04:16,880
but you might need to go refresh

105
00:04:16,880 --> 00:04:19,839
separately which is i just oh i need to

106
00:04:19,839 --> 00:04:21,680
yeah i just did a no no not there

107
00:04:21,680 --> 00:04:24,160
unfortunately it's in the data tracker

108
00:04:24,160 --> 00:04:25,680
let me just start from mine it's gonna

109
00:04:25,680 --> 00:04:29,240
be easy i think

110
00:04:30,320 --> 00:04:31,440
oh

111
00:04:31,440 --> 00:04:33,120
they're not there again there you go i

112
00:04:33,120 --> 00:04:34,960
did refresh and and they were there and

113
00:04:34,960 --> 00:04:36,960
now they're not there so

114
00:04:36,960 --> 00:04:39,680
let's try that again

115
00:04:39,680 --> 00:04:43,080
manage slides

116
00:04:44,000 --> 00:04:46,560
it's there

117
00:04:47,120 --> 00:04:49,680
refresh

118
00:04:49,840 --> 00:04:51,840
text ready to be shared it's not there

119
00:04:51,840 --> 00:04:53,360
wow

120
00:04:53,360 --> 00:04:55,440
um

121
00:04:55,440 --> 00:04:56,800
okay

122
00:04:56,800 --> 00:04:58,720
i'm doing great with data tracker so far

123
00:04:58,720 --> 00:05:00,960
not only of with the medical thing not

124
00:05:00,960 --> 00:05:03,199
only these slides not in there despite

125
00:05:03,199 --> 00:05:04,800
the fact that

126
00:05:04,800 --> 00:05:07,199
i did hit the refresh there you go now

127
00:05:07,199 --> 00:05:08,400
they're there

128
00:05:08,400 --> 00:05:10,560
um but apparently if you direct message

129
00:05:10,560 --> 00:05:12,240
somebody what you write doesn't show up

130
00:05:12,240 --> 00:05:13,280
in the

131
00:05:13,280 --> 00:05:16,080
system anymore

132
00:05:16,240 --> 00:05:17,440
hey

133
00:05:17,440 --> 00:05:20,400
there's really not much to say um

134
00:05:20,400 --> 00:05:24,000
since last iatf i added the digest

135
00:05:24,000 --> 00:05:27,280
response by request which allows you to

136
00:05:27,280 --> 00:05:30,000
the server can say which algorithms it

137
00:05:30,000 --> 00:05:31,280
supports

138
00:05:31,280 --> 00:05:33,120
and then

139
00:05:33,120 --> 00:05:35,039
you can request

140
00:05:35,039 --> 00:05:38,080
that item on whatever range you've

141
00:05:38,080 --> 00:05:40,160
requested to download

142
00:05:40,160 --> 00:05:41,759
and it will calculate the digest over

143
00:05:41,759 --> 00:05:43,440
that range which allows you to if you

144
00:05:43,440 --> 00:05:45,039
have a partial download to check that

145
00:05:45,039 --> 00:05:47,680
it's correct um before requesting

146
00:05:47,680 --> 00:05:49,759
additional data so that seems quite a

147
00:05:49,759 --> 00:05:51,039
useful thing to do and you can also

148
00:05:51,039 --> 00:05:54,240
request a digest of the entire

149
00:05:54,240 --> 00:05:56,479
content of a blob

150
00:05:56,479 --> 00:05:58,080
which again will be quite handy for

151
00:05:58,080 --> 00:05:59,360
checking that you have the right thing

152
00:05:59,360 --> 00:06:00,800
downloaded

153
00:06:00,800 --> 00:06:02,560
and so

154
00:06:02,560 --> 00:06:05,199
i need to add some more text around that

155
00:06:05,199 --> 00:06:07,520
um advice to implementers and some

156
00:06:07,520 --> 00:06:11,440
examples at which point

157
00:06:11,440 --> 00:06:13,520
we'll do the third working group last

158
00:06:13,520 --> 00:06:15,120
call and hopefully the final working

159
00:06:15,120 --> 00:06:16,639
group last call

160
00:06:16,639 --> 00:06:18,160
before shipping this thing i don't think

161
00:06:18,160 --> 00:06:19,759
there's anything else we want to add to

162
00:06:19,759 --> 00:06:20,800
blob

163
00:06:20,800 --> 00:06:22,880
at the moment so let's just get this one

164
00:06:22,880 --> 00:06:24,000
done

165
00:06:24,000 --> 00:06:27,840
um any comments on that anything

166
00:06:27,840 --> 00:06:30,719
i see a thumbs up

167
00:06:31,039 --> 00:06:33,120
awesome i think i'm done then let's move

168
00:06:33,120 --> 00:06:35,840
on

169
00:06:48,000 --> 00:06:49,599
oh yeah i need to unshare you can do

170
00:06:49,599 --> 00:06:50,479
that

171
00:06:50,479 --> 00:06:51,520
yeah

172
00:06:51,520 --> 00:06:54,560
okay so uh quotas is the next one we

173
00:06:54,560 --> 00:06:56,720
have

174
00:06:58,000 --> 00:07:01,039
here and uh

175
00:07:04,639 --> 00:07:06,080
it's already me

176
00:07:06,080 --> 00:07:06,960
okay

177
00:07:06,960 --> 00:07:09,150
hello everybody

178
00:07:09,150 --> 00:07:11,360
[Music]

179
00:07:11,360 --> 00:07:12,960
uh okay

180
00:07:12,960 --> 00:07:15,759
so regarding zakuta i'm gonna be quite

181
00:07:15,759 --> 00:07:18,560
fast as well

182
00:07:21,599 --> 00:07:23,120
yeah so

183
00:07:23,120 --> 00:07:24,240
i mean

184
00:07:24,240 --> 00:07:27,199
i i got a few extra

185
00:07:27,199 --> 00:07:30,080
comments from alexay so thank you for

186
00:07:30,080 --> 00:07:30,880
that

187
00:07:30,880 --> 00:07:33,360
if you are here

188
00:07:33,360 --> 00:07:34,720
so the

189
00:07:34,720 --> 00:07:37,120
first of all the soft limit

190
00:07:37,120 --> 00:07:39,199
just adding a few

191
00:07:39,199 --> 00:07:41,280
examples to make it more clear

192
00:07:41,280 --> 00:07:42,080
like

193
00:07:42,080 --> 00:07:43,599
like you could use the soft limit for

194
00:07:43,599 --> 00:07:45,320
example to uh

195
00:07:45,320 --> 00:07:47,919
[Music]

196
00:07:47,919 --> 00:07:50,000
to stop uh

197
00:07:50,000 --> 00:07:51,599
to to block

198
00:07:51,599 --> 00:07:53,120
the user to

199
00:07:53,120 --> 00:07:54,319
for uh

200
00:07:54,319 --> 00:07:57,199
to send outgoing events like uh

201
00:07:57,199 --> 00:08:00,000
like outgoing emails outgoing uh

202
00:08:00,000 --> 00:08:02,400
creating new calendar events and stuff

203
00:08:02,400 --> 00:08:04,879
but you would still be able to uh get

204
00:08:04,879 --> 00:08:07,360
emails even get incoming events like

205
00:08:07,360 --> 00:08:09,759
emails and uh calendar events created by

206
00:08:09,759 --> 00:08:10,840
somebody

207
00:08:10,840 --> 00:08:12,960
else uh

208
00:08:12,960 --> 00:08:16,000
the example as well i i missed uh when

209
00:08:16,000 --> 00:08:19,120
we changed the result uh

210
00:08:19,120 --> 00:08:22,080
from size to octet i i missed changing

211
00:08:22,080 --> 00:08:25,039
it in the example so that's

212
00:08:25,039 --> 00:08:27,360
that's a good catch i fixed that

213
00:08:27,360 --> 00:08:29,280
and i added uh

214
00:08:29,280 --> 00:08:31,840
also some more uh content to the

215
00:08:31,840 --> 00:08:34,240
security consideration section

216
00:08:34,240 --> 00:08:34,919
uh

217
00:08:34,919 --> 00:08:36,479
[Music]

218
00:08:36,479 --> 00:08:38,240
regarding the

219
00:08:38,240 --> 00:08:40,640
alexa's rsc uh

220
00:08:40,640 --> 00:08:42,719
what he did as well for kota's on

221
00:08:42,719 --> 00:08:44,240
imap

222
00:08:44,240 --> 00:08:45,519
and uh

223
00:08:45,519 --> 00:08:47,440
so i didn't get some warnings and advice

224
00:08:47,440 --> 00:08:50,160
on the implementation

225
00:08:50,160 --> 00:08:52,240
and that's pretty much

226
00:08:52,240 --> 00:08:57,920
it for me if anybody has questions or

227
00:08:58,240 --> 00:09:00,880
i feel good

228
00:09:05,600 --> 00:09:06,880
no i guess there's a movement in the

229
00:09:06,880 --> 00:09:10,320
room and nobody's joined the queue so i

230
00:09:10,320 --> 00:09:12,399
think there aren't any

231
00:09:12,399 --> 00:09:15,200
okay thank you

232
00:09:17,200 --> 00:09:19,519
just before you disappear uh what do you

233
00:09:19,519 --> 00:09:20,880
want to do for the next step so we're

234
00:09:20,880 --> 00:09:24,560
ready to work and grip last call list

235
00:09:24,560 --> 00:09:25,680
uh

236
00:09:25,680 --> 00:09:28,319
the next step

237
00:09:32,160 --> 00:09:34,880
yeah sorry can you repeat

238
00:09:34,880 --> 00:09:36,880
so do you think this document is ready

239
00:09:36,880 --> 00:09:39,360
for a working group last call now

240
00:09:39,360 --> 00:09:40,640
oh

241
00:09:40,640 --> 00:09:42,720
alexi gave a thumbs up as well so that

242
00:09:42,720 --> 00:09:44,480
sounds like yes

243
00:09:44,480 --> 00:09:45,680
okay

244
00:09:45,680 --> 00:09:47,839
thank you i forgot to to make a slides

245
00:09:47,839 --> 00:09:49,680
for that but uh yeah thanks i would

246
00:09:49,680 --> 00:09:51,519
appreciate it

247
00:09:51,519 --> 00:09:53,760
cool

248
00:09:56,560 --> 00:09:59,279
okay great so the next item is oh

249
00:09:59,279 --> 00:10:00,959
there's jmap blob it's somewhere in the

250
00:10:00,959 --> 00:10:03,839
middle of the list here

251
00:10:03,839 --> 00:10:06,959
gmap s mine

252
00:10:07,040 --> 00:10:09,920
which is alexi

253
00:10:17,120 --> 00:10:20,480
hello next slide

254
00:10:21,040 --> 00:10:22,959
how do we share the

255
00:10:22,959 --> 00:10:25,600
presenter yeah just a quick reminder so

256
00:10:25,600 --> 00:10:26,720
uh

257
00:10:26,720 --> 00:10:29,360
this is basically for sending s mime

258
00:10:29,360 --> 00:10:32,560
signed and or encrypted messages

259
00:10:32,560 --> 00:10:36,160
um the two main attributes uh on email

260
00:10:36,160 --> 00:10:39,120
set is s mime sinus my encrypt

261
00:10:39,120 --> 00:10:41,600
this hasn't changed

262
00:10:41,600 --> 00:10:44,240
next slide

263
00:10:45,040 --> 00:10:47,519
um so there were couple of open issues

264
00:10:47,519 --> 00:10:50,160
which i addressed uh

265
00:10:50,160 --> 00:10:53,120
one is controlling

266
00:10:53,120 --> 00:10:55,440
um

267
00:10:55,440 --> 00:10:58,480
signing whether it's encapsulated in

268
00:10:58,480 --> 00:11:01,279
application pk7 mime container or

269
00:11:01,279 --> 00:11:03,839
whether it's multi-part sign because

270
00:11:03,839 --> 00:11:06,480
they kind of both implemented and

271
00:11:06,480 --> 00:11:08,800
we probably want to give people enough

272
00:11:08,800 --> 00:11:10,640
control to generate

273
00:11:10,640 --> 00:11:13,040
either

274
00:11:13,040 --> 00:11:15,279
uh the default is true which is

275
00:11:15,279 --> 00:11:17,920
application pks7 mime which i think is

276
00:11:17,920 --> 00:11:19,360
probably

277
00:11:19,360 --> 00:11:21,040
uh slightly easier to implement for

278
00:11:21,040 --> 00:11:22,720
people

279
00:11:22,720 --> 00:11:26,880
and similar header protection

280
00:11:27,519 --> 00:11:30,720
this is a feature of s mime uh there is

281
00:11:30,720 --> 00:11:33,120
a document in lamps

282
00:11:33,120 --> 00:11:36,079
um about

283
00:11:36,079 --> 00:11:38,320
how to do this and suggestion was to

284
00:11:38,320 --> 00:11:40,079
make the default rule so the address is

285
00:11:40,079 --> 00:11:41,920
all the um email header is always

286
00:11:41,920 --> 00:11:44,479
protected

287
00:11:44,880 --> 00:11:47,600
next slide

288
00:11:47,600 --> 00:11:49,760
so

289
00:11:51,279 --> 00:11:52,959
neil if you want to

290
00:11:52,959 --> 00:11:57,000
comment now that's fine

291
00:11:57,360 --> 00:11:58,240
um

292
00:11:58,240 --> 00:12:00,560
yeah i i read the draft i think

293
00:12:00,560 --> 00:12:01,920
it's looking pretty good i just had one

294
00:12:01,920 --> 00:12:03,040
bit of bike shedding was related to the

295
00:12:03,040 --> 00:12:05,279
previous thing uh slide which was just

296
00:12:05,279 --> 00:12:07,680
the name of that header protect field

297
00:12:07,680 --> 00:12:10,399
seems inconsistent with the others could

298
00:12:10,399 --> 00:12:12,160
we rename it something like s mind

299
00:12:12,160 --> 00:12:14,000
protect headers or something like that

300
00:12:14,000 --> 00:12:16,399
like mine sign a page okay that's fine

301
00:12:16,399 --> 00:12:18,480
to be honest i kind of struggled with

302
00:12:18,480 --> 00:12:20,880
names here so are they i just

303
00:12:20,880 --> 00:12:22,480
think

304
00:12:22,480 --> 00:12:24,959
sorry send you something just send me a

305
00:12:24,959 --> 00:12:27,200
quick email and i'll change yeah i'm not

306
00:12:27,200 --> 00:12:28,720
i'm not really married to names so

307
00:12:28,720 --> 00:12:31,120
that's fine

308
00:12:31,680 --> 00:12:34,959
um so the only thing remaining is i

309
00:12:34,959 --> 00:12:37,200
think it would be helpful to be able to

310
00:12:37,200 --> 00:12:40,160
also automatically decrypt messages

311
00:12:40,160 --> 00:12:43,600
uh for this i probably need to

312
00:12:43,600 --> 00:12:46,079
talk to neil to help me out how you know

313
00:12:46,079 --> 00:12:47,839
how exactly this is going to work with

314
00:12:47,839 --> 00:12:52,120
probably email bars but um

315
00:12:52,480 --> 00:12:55,279
i um

316
00:12:55,680 --> 00:12:58,160
yeah i ran out of time to to do this

317
00:12:58,160 --> 00:13:00,560
this this this round but yeah i think

318
00:13:00,560 --> 00:13:03,200
that's only thing outstanding so i'll

319
00:13:03,200 --> 00:13:06,240
get to it next time

320
00:13:06,240 --> 00:13:07,519
um

321
00:13:07,519 --> 00:13:10,000
timing i guess what when do you expect

322
00:13:10,000 --> 00:13:10,720
to

323
00:13:10,720 --> 00:13:12,079
to have this ready for working group

324
00:13:12,079 --> 00:13:13,519
last call

325
00:13:13,519 --> 00:13:15,760
um

326
00:13:15,760 --> 00:13:17,360
around 1 15

327
00:13:17,360 --> 00:13:19,120
maybe a bit earlier

328
00:13:19,120 --> 00:13:21,839
all right

329
00:13:29,920 --> 00:13:31,440
okay well i don't see anybody else in

330
00:13:31,440 --> 00:13:33,279
the queue so i guess we'll go on to the

331
00:13:33,279 --> 00:13:35,040
next item

332
00:13:35,040 --> 00:13:37,519
which is

333
00:13:37,519 --> 00:13:39,760
i i see a hand in the room

334
00:13:39,760 --> 00:13:42,480
did you have a comment on this

335
00:13:42,480 --> 00:13:44,639
uh you need to go to the microphone and

336
00:13:44,639 --> 00:13:46,399
you should probably join the queue via

337
00:13:46,399 --> 00:13:48,720
the tool if you can both the microphone

338
00:13:48,720 --> 00:13:50,160
and the queue thing i was actually for

339
00:13:50,160 --> 00:13:51,920
some reason i got logged out so i'm

340
00:13:51,920 --> 00:13:54,639
sorry for that okay so who are you then

341
00:13:54,639 --> 00:13:57,360
please yeah my name is sachin garc

342
00:13:57,360 --> 00:13:59,040
i had just a quick question about the

343
00:13:59,040 --> 00:14:01,120
last point that alexa mentioned about

344
00:14:01,120 --> 00:14:04,160
the uh decryption of part of the s mine

345
00:14:04,160 --> 00:14:06,800
thing and uh to be fair i haven't really

346
00:14:06,800 --> 00:14:08,800
read the specs i mean i'm coming from

347
00:14:08,800 --> 00:14:11,440
something which is zero my only point is

348
00:14:11,440 --> 00:14:13,360
the decryption part should it not be

349
00:14:13,360 --> 00:14:14,880
handled by the client i mean how would

350
00:14:14,880 --> 00:14:17,839
the uh whatever the server would know

351
00:14:17,839 --> 00:14:19,760
actually what keys to use to decrypt it

352
00:14:19,760 --> 00:14:21,440
that's a sort of a

353
00:14:21,440 --> 00:14:23,839
question and how this thing works

354
00:14:23,839 --> 00:14:25,760
might be a slightly off topic right and

355
00:14:25,760 --> 00:14:27,120
so um

356
00:14:27,120 --> 00:14:29,440
basically because

357
00:14:29,440 --> 00:14:31,519
that is part of the extension is to be

358
00:14:31,519 --> 00:14:33,440
able to sign and encrypt there are

359
00:14:33,440 --> 00:14:34,800
already keys

360
00:14:34,800 --> 00:14:35,680
so if

361
00:14:35,680 --> 00:14:36,880
if it has

362
00:14:36,880 --> 00:14:38,399
assumption is there is some kind of

363
00:14:38,399 --> 00:14:40,639
directory or storage

364
00:14:40,639 --> 00:14:42,800
which is trusted by by the user

365
00:14:42,800 --> 00:14:45,199
associated with jmap

366
00:14:45,199 --> 00:14:47,199
so if you have the key and you receive a

367
00:14:47,199 --> 00:14:49,440
message that can be decrypted it will

368
00:14:49,440 --> 00:14:50,880
decrypt okay

369
00:14:50,880 --> 00:14:52,959
so the user trusts the source where the

370
00:14:52,959 --> 00:14:54,240
keys are stored and then the key

371
00:14:54,240 --> 00:14:58,519
difference yes so the idea is

372
00:15:02,880 --> 00:15:03,920
yes

373
00:15:03,920 --> 00:15:05,120
yes

374
00:15:05,120 --> 00:15:06,399
um and

375
00:15:06,399 --> 00:15:08,079
i mean

376
00:15:08,079 --> 00:15:12,959
in my implementation we actually have

377
00:15:12,959 --> 00:15:14,639
keys kind of well

378
00:15:14,639 --> 00:15:17,519
csr and certificate author generated so

379
00:15:17,519 --> 00:15:18,800
again you know

380
00:15:18,800 --> 00:15:20,010
you can extend this to

381
00:15:20,010 --> 00:15:21,760
[Music]

382
00:15:21,760 --> 00:15:23,279
automatically create and install

383
00:15:23,279 --> 00:15:25,600
certificates in your you know store and

384
00:15:25,600 --> 00:15:29,120
then use this to sign encrypt

385
00:15:36,720 --> 00:15:37,839
any other

386
00:15:37,839 --> 00:15:41,839
questions comments on this

387
00:15:44,800 --> 00:15:47,920
okay in that case we will move on to

388
00:15:47,920 --> 00:15:51,479
gmap tasks

389
00:15:57,279 --> 00:15:59,360
and yours

390
00:15:59,360 --> 00:16:01,519
hi i'm yours

391
00:16:01,519 --> 00:16:02,560
um

392
00:16:02,560 --> 00:16:05,680
yeah so in general tasks

393
00:16:05,680 --> 00:16:07,680
just a quick reminder what's the goal

394
00:16:07,680 --> 00:16:09,440
that we want to have what we want to

395
00:16:09,440 --> 00:16:11,199
achieve we want to make a common

396
00:16:11,199 --> 00:16:12,560
standard

397
00:16:12,560 --> 00:16:14,639
also for kanban boards and issue

398
00:16:14,639 --> 00:16:17,519
trackers so not just for groupware

399
00:16:17,519 --> 00:16:19,360
next step please

400
00:16:19,360 --> 00:16:20,639
oh there's a

401
00:16:20,639 --> 00:16:23,120
that's a screen

402
00:16:23,120 --> 00:16:26,399
okay so um yeah so basically this is a

403
00:16:26,399 --> 00:16:28,160
list of all the things

404
00:16:28,160 --> 00:16:31,600
that we discussed at last itf

405
00:16:31,600 --> 00:16:32,720
um

406
00:16:32,720 --> 00:16:33,600
that

407
00:16:33,600 --> 00:16:35,120
should now

408
00:16:35,120 --> 00:16:37,839
be hopefully sufficiently worked in

409
00:16:37,839 --> 00:16:39,680
so the first thing is was an error of

410
00:16:39,680 --> 00:16:40,959
mine i

411
00:16:40,959 --> 00:16:44,000
edit related to instead of extending

412
00:16:44,000 --> 00:16:45,360
relation

413
00:16:45,360 --> 00:16:47,440
which should not be fixed

414
00:16:47,440 --> 00:16:50,480
with new values like depend on

415
00:16:50,480 --> 00:16:52,959
then the the second one was a suggestion

416
00:16:52,959 --> 00:16:55,920
of of braun about how to add colors to

417
00:16:55,920 --> 00:16:58,240
categories and keywords

418
00:16:58,240 --> 00:16:59,120
i

419
00:16:59,120 --> 00:17:02,240
um yeah i added that to the spec

420
00:17:02,240 --> 00:17:05,119
then the third one um

421
00:17:05,119 --> 00:17:07,359
having estimated work

422
00:17:07,359 --> 00:17:08,480
um

423
00:17:08,480 --> 00:17:10,079
as

424
00:17:10,079 --> 00:17:12,160
so there was a the point raised that

425
00:17:12,160 --> 00:17:14,079
estimated work

426
00:17:14,079 --> 00:17:17,199
isn't sufficiently

427
00:17:17,199 --> 00:17:20,000
specified because i said it's just

428
00:17:20,000 --> 00:17:21,280
some value

429
00:17:21,280 --> 00:17:24,079
it's in addition to estimated duration

430
00:17:24,079 --> 00:17:25,760
because some

431
00:17:25,760 --> 00:17:27,119
systems

432
00:17:27,119 --> 00:17:28,880
don't use the duration they use some

433
00:17:28,880 --> 00:17:30,640
abstract value

434
00:17:30,640 --> 00:17:33,280
and i tried to come up with a

435
00:17:33,280 --> 00:17:36,240
more a better definition for it and i

436
00:17:36,240 --> 00:17:38,799
now chose fibonacci scale that that's

437
00:17:38,799 --> 00:17:40,400
like a recommendation to to use

438
00:17:40,400 --> 00:17:43,440
fibonacci scale that's a common

439
00:17:43,440 --> 00:17:44,880
um

440
00:17:44,880 --> 00:17:47,039
common scale people use in agile to

441
00:17:47,039 --> 00:17:49,679
estimate their work

442
00:17:49,679 --> 00:17:50,880
um

443
00:17:50,880 --> 00:17:52,160
yeah

444
00:17:52,160 --> 00:17:53,760
that's that's what i came up with i'm

445
00:17:53,760 --> 00:17:56,720
not perfectly happy with that but

446
00:17:56,720 --> 00:17:58,799
yeah for now i don't know first

447
00:17:58,799 --> 00:18:00,480
iteration it should be good

448
00:18:00,480 --> 00:18:02,640
i hope um

449
00:18:02,640 --> 00:18:05,039
yeah so then another thing mentioned at

450
00:18:05,039 --> 00:18:06,799
last itf was that

451
00:18:06,799 --> 00:18:09,520
it's a bit un it was a bit unclear why

452
00:18:09,520 --> 00:18:13,280
we have impact in addition to priority

453
00:18:13,280 --> 00:18:17,039
and now the text mentions that impact

454
00:18:17,039 --> 00:18:19,520
is one of the things that can be used to

455
00:18:19,520 --> 00:18:22,240
determine the priority later on but it's

456
00:18:22,240 --> 00:18:24,480
not necessarily the same thing

457
00:18:24,480 --> 00:18:25,760
basically

458
00:18:25,760 --> 00:18:27,679
just to make that a bit more clear

459
00:18:27,679 --> 00:18:29,679
then

460
00:18:29,679 --> 00:18:31,760
yeah i threw i had this i added this

461
00:18:31,760 --> 00:18:34,240
source property during the last revision

462
00:18:34,240 --> 00:18:35,679
i threw that out

463
00:18:35,679 --> 00:18:37,840
because we already have

464
00:18:37,840 --> 00:18:40,480
prod id which we can use for exactly the

465
00:18:40,480 --> 00:18:41,440
same

466
00:18:41,440 --> 00:18:42,400
thing

467
00:18:42,400 --> 00:18:44,160
which is something that robert mentioned

468
00:18:44,160 --> 00:18:47,600
last itf which is a good thing

469
00:18:47,600 --> 00:18:50,799
um yeah and there are two other bigger

470
00:18:50,799 --> 00:18:52,880
things that i already bootstrapped

471
00:18:52,880 --> 00:18:55,200
during last itf

472
00:18:55,200 --> 00:18:57,520
which i'm gonna explain the next in the

473
00:18:57,520 --> 00:19:00,400
next two slides

474
00:19:01,120 --> 00:19:03,840
next slide please

475
00:19:03,919 --> 00:19:04,640
so

476
00:19:04,640 --> 00:19:05,600
um

477
00:19:05,600 --> 00:19:07,679
the first more or less big thing is

478
00:19:07,679 --> 00:19:09,360
progress tracking

479
00:19:09,360 --> 00:19:11,039
there was a comment that it's it was a

480
00:19:11,039 --> 00:19:12,880
bit unclear that

481
00:19:12,880 --> 00:19:15,039
the pro that um

482
00:19:15,039 --> 00:19:17,520
it has uh i extended the values of

483
00:19:17,520 --> 00:19:18,960
progress

484
00:19:18,960 --> 00:19:21,600
um and i created

485
00:19:21,600 --> 00:19:25,040
a suggested mapping of progress

486
00:19:25,040 --> 00:19:27,520
[Music]

487
00:19:27,520 --> 00:19:30,720
and it was a bit unclear about that that

488
00:19:30,720 --> 00:19:33,039
there were several values that were

489
00:19:33,039 --> 00:19:34,240
not really

490
00:19:34,240 --> 00:19:35,840
easily distinguished from each other

491
00:19:35,840 --> 00:19:37,280
when is a

492
00:19:37,280 --> 00:19:39,679
work item resolved when is it completed

493
00:19:39,679 --> 00:19:41,280
when is it confirmed when is it in

494
00:19:41,280 --> 00:19:42,880
process and so on

495
00:19:42,880 --> 00:19:44,640
and there was also the suggestion that

496
00:19:44,640 --> 00:19:46,880
some systems even allow

497
00:19:46,880 --> 00:19:49,280
defining custom workflows

498
00:19:49,280 --> 00:19:50,840
on a project

499
00:19:50,840 --> 00:19:52,799
level um

500
00:19:52,799 --> 00:19:53,679
so

501
00:19:53,679 --> 00:19:54,720
in the end

502
00:19:54,720 --> 00:19:58,000
it doesn't really

503
00:19:58,000 --> 00:20:00,000
depend on the system

504
00:20:00,000 --> 00:20:01,919
on its own it also depends on the

505
00:20:01,919 --> 00:20:04,159
project

506
00:20:04,159 --> 00:20:07,440
how people design their own workflows

507
00:20:07,440 --> 00:20:09,440
so the thing i came up with for

508
00:20:09,440 --> 00:20:11,760
extending progress

509
00:20:11,760 --> 00:20:13,760
or like like extending the the spec to

510
00:20:13,760 --> 00:20:14,799
have

511
00:20:14,799 --> 00:20:15,919
um

512
00:20:15,919 --> 00:20:18,320
yeah better tracking of a workflow

513
00:20:18,320 --> 00:20:21,200
that that should also be

514
00:20:21,200 --> 00:20:23,600
that should reflect what's there in in

515
00:20:23,600 --> 00:20:24,400
uh

516
00:20:24,400 --> 00:20:26,480
issue trackers or

517
00:20:26,480 --> 00:20:27,840
kanban boards

518
00:20:27,840 --> 00:20:30,960
is workflow and in two extra properties

519
00:20:30,960 --> 00:20:34,240
one for the task list and one for tasks

520
00:20:34,240 --> 00:20:37,360
which is workflow statuses and workflow

521
00:20:37,360 --> 00:20:38,480
status

522
00:20:38,480 --> 00:20:41,120
so in the task list you can define

523
00:20:41,120 --> 00:20:42,400
all the

524
00:20:42,400 --> 00:20:44,640
allowed values

525
00:20:44,640 --> 00:20:46,159
of your

526
00:20:46,159 --> 00:20:47,360
workflow

527
00:20:47,360 --> 00:20:48,640
basically

528
00:20:48,640 --> 00:20:51,039
so like you can already do in jira

529
00:20:51,039 --> 00:20:52,480
and

530
00:20:52,480 --> 00:20:54,720
there are the workflow status is then

531
00:20:54,720 --> 00:20:56,559
defined which

532
00:20:56,559 --> 00:20:58,480
must be a value of of those that you

533
00:20:58,480 --> 00:21:00,559
defined in the task list

534
00:21:00,559 --> 00:21:02,799
and it um

535
00:21:02,799 --> 00:21:06,240
yeah it says which of the

536
00:21:06,240 --> 00:21:08,559
status which of the work where the

537
00:21:08,559 --> 00:21:11,039
workflow currently is basically

538
00:21:11,039 --> 00:21:13,280
and if you use the workflow status then

539
00:21:13,280 --> 00:21:14,400
obviously

540
00:21:14,400 --> 00:21:16,000
progress doesn't make a lot of sense

541
00:21:16,000 --> 00:21:17,440
anymore so

542
00:21:17,440 --> 00:21:20,159
it must be null that's

543
00:21:20,159 --> 00:21:21,760
what's now in the spec

544
00:21:21,760 --> 00:21:24,400
how it's written

545
00:21:24,480 --> 00:21:26,159
okay

546
00:21:26,159 --> 00:21:31,039
is there yeah maybe yeah we can go on um

547
00:21:31,039 --> 00:21:33,120
all right and there's uh grouping is the

548
00:21:33,120 --> 00:21:34,080
next

549
00:21:34,080 --> 00:21:35,679
big thing so

550
00:21:35,679 --> 00:21:39,280
here again as a reminder um

551
00:21:39,280 --> 00:21:40,880
the idea is that we have different use

552
00:21:40,880 --> 00:21:41,919
cases

553
00:21:41,919 --> 00:21:45,280
and task systems are more heterogeneous

554
00:21:45,280 --> 00:21:46,400
than

555
00:21:46,400 --> 00:21:50,640
typical grouper systems so the idea was

556
00:21:50,640 --> 00:21:52,880
um that also

557
00:21:52,880 --> 00:21:55,280
to to make it interesting for for

558
00:21:55,280 --> 00:21:57,280
task systems that don't have calendars

559
00:21:57,280 --> 00:22:00,000
that don't have a lot of features to

560
00:22:00,000 --> 00:22:01,760
reduce the implementation overhead for

561
00:22:01,760 --> 00:22:03,520
those

562
00:22:03,520 --> 00:22:06,000
okay next slide please

563
00:22:06,000 --> 00:22:08,240
so

564
00:22:08,320 --> 00:22:12,080
i came up now i already

565
00:22:12,080 --> 00:22:13,679
triggered from first discussion during

566
00:22:13,679 --> 00:22:15,039
last itf

567
00:22:15,039 --> 00:22:17,440
i came up now with those groups so it's

568
00:22:17,440 --> 00:22:20,000
basically common recurrences assignees

569
00:22:20,000 --> 00:22:21,760
alerts localizations

570
00:22:21,760 --> 00:22:24,000
custom time zones so they're grouped by

571
00:22:24,000 --> 00:22:26,720
the feature set basically

572
00:22:26,720 --> 00:22:31,039
the methodology i used um was i i looked

573
00:22:31,039 --> 00:22:33,280
at three good reasons for grouping

574
00:22:33,280 --> 00:22:35,679
certain properties so first of all they

575
00:22:35,679 --> 00:22:36,880
should be

576
00:22:36,880 --> 00:22:39,600
uncommon in a certain type of system

577
00:22:39,600 --> 00:22:41,039
then they they

578
00:22:41,039 --> 00:22:43,440
then they should not belong to the

579
00:22:43,440 --> 00:22:44,799
like they should not belong to the

580
00:22:44,799 --> 00:22:46,400
common group if they are uncommon in

581
00:22:46,400 --> 00:22:49,120
certain types of system then i moved it

582
00:22:49,120 --> 00:22:50,720
to

583
00:22:50,720 --> 00:22:52,400
out of the common group

584
00:22:52,400 --> 00:22:54,080
they should be optional within js

585
00:22:54,080 --> 00:22:55,520
calendar

586
00:22:55,520 --> 00:22:58,320
so otherwise it doesn't make sense to

587
00:22:58,320 --> 00:23:00,080
exclude them from a

588
00:23:00,080 --> 00:23:01,520
common group

589
00:23:01,520 --> 00:23:04,000
and they should uh require some

590
00:23:04,000 --> 00:23:06,159
additional business logic as well so

591
00:23:06,159 --> 00:23:08,720
simple key value pairs is not something

592
00:23:08,720 --> 00:23:09,679
that

593
00:23:09,679 --> 00:23:11,520
necessarily needs to be

594
00:23:11,520 --> 00:23:12,960
in a different group than the common

595
00:23:12,960 --> 00:23:14,080
group it's

596
00:23:14,080 --> 00:23:17,039
yeah it's easily implementable

597
00:23:17,039 --> 00:23:19,280
by vendors

598
00:23:19,280 --> 00:23:21,360
so um

599
00:23:21,360 --> 00:23:22,720
yeah

600
00:23:22,720 --> 00:23:24,960
as it is right now each group is a

601
00:23:24,960 --> 00:23:28,480
separate capability in the spec

602
00:23:28,480 --> 00:23:30,159
last time we discussed about using

603
00:23:30,159 --> 00:23:32,320
sub-capabilities

604
00:23:32,320 --> 00:23:35,200
i decided against using sub-capabilities

605
00:23:35,200 --> 00:23:36,480
because it

606
00:23:36,480 --> 00:23:38,400
avoids the additional complexity we

607
00:23:38,400 --> 00:23:40,799
talked about having a

608
00:23:40,799 --> 00:23:46,158
not supported or set error for example

609
00:23:46,640 --> 00:23:48,159
yeah and it was just for me was just

610
00:23:48,159 --> 00:23:52,559
more natural and simpler this way

611
00:23:53,039 --> 00:23:54,000
of course

612
00:23:54,000 --> 00:23:57,679
you can leave some comments on that

613
00:23:57,679 --> 00:24:00,480
yeah what i'm a bit unsure about is if

614
00:24:00,480 --> 00:24:02,799
it makes some developers

615
00:24:02,799 --> 00:24:05,760
unhappy that want to support all the

616
00:24:05,760 --> 00:24:07,520
different use cases now because then

617
00:24:07,520 --> 00:24:08,640
they need to

618
00:24:08,640 --> 00:24:10,880
supply six different capabilities now

619
00:24:10,880 --> 00:24:13,039
instead of a single one

620
00:24:13,039 --> 00:24:14,799
um

621
00:24:14,799 --> 00:24:16,159
yeah so that's

622
00:24:16,159 --> 00:24:17,760
basically kind of a trade-off i don't

623
00:24:17,760 --> 00:24:19,039
know or

624
00:24:19,039 --> 00:24:20,559
something that i don't really like about

625
00:24:20,559 --> 00:24:21,919
having

626
00:24:21,919 --> 00:24:24,240
six different capabilities

627
00:24:24,240 --> 00:24:26,159
yeah it's not just a question in the

628
00:24:26,159 --> 00:24:27,840
room

629
00:24:27,840 --> 00:24:29,679
do you still like it how it

630
00:24:29,679 --> 00:24:31,440
turned out

631
00:24:31,440 --> 00:24:33,840
do you have some comments on it

632
00:24:33,840 --> 00:24:35,840
um

633
00:24:35,840 --> 00:24:36,640
yeah

634
00:24:36,640 --> 00:24:37,600
so

635
00:24:37,600 --> 00:24:39,840
i'm not sure maybe we can we can go to

636
00:24:39,840 --> 00:24:41,520
the next slide this should be the last

637
00:24:41,520 --> 00:24:42,480
one

638
00:24:42,480 --> 00:24:44,720
for grouping so basically here it's just

639
00:24:44,720 --> 00:24:46,400
a list of

640
00:24:46,400 --> 00:24:48,320
systems and

641
00:24:48,320 --> 00:24:50,320
what kind of

642
00:24:50,320 --> 00:24:53,520
groups they would need to implement

643
00:24:53,520 --> 00:24:54,960
just as a

644
00:24:54,960 --> 00:24:56,880
as a validation that it kind of makes

645
00:24:56,880 --> 00:24:58,159
sense

646
00:24:58,159 --> 00:25:00,640
that the grouping that that's now there

647
00:25:00,640 --> 00:25:01,760
all right

648
00:25:01,760 --> 00:25:04,080
robert

649
00:25:04,559 --> 00:25:07,039
yeah this is robert stepanek um

650
00:25:07,039 --> 00:25:08,960
i have a couple of other points i would

651
00:25:08,960 --> 00:25:10,720
like to bring up for but for grouping

652
00:25:10,720 --> 00:25:12,960
specifically um

653
00:25:12,960 --> 00:25:16,799
so what's the idea of how should systems

654
00:25:16,799 --> 00:25:18,640
what should systems do

655
00:25:18,640 --> 00:25:20,960
if they get

656
00:25:20,960 --> 00:25:23,360
a js task that includes

657
00:25:23,360 --> 00:25:24,640
properties

658
00:25:24,640 --> 00:25:26,880
that are in a group this

659
00:25:26,880 --> 00:25:28,640
they do not support are they i'm

660
00:25:28,640 --> 00:25:31,600
supposed to reject that then or

661
00:25:31,600 --> 00:25:34,080
are they supposed to let just store it

662
00:25:34,080 --> 00:25:37,760
um what's what's the idea here

663
00:25:37,760 --> 00:25:40,000
you mean uh like if you if you have um

664
00:25:40,000 --> 00:25:43,520
if you have a recurring task um but

665
00:25:43,520 --> 00:25:45,679
um that we see in the list but simbra

666
00:25:45,679 --> 00:25:47,440
right what should simbra do when they do

667
00:25:47,440 --> 00:25:51,919
not support recurrences should they

668
00:25:52,480 --> 00:25:55,760
yeah they can just um

669
00:25:55,760 --> 00:25:57,200
so um

670
00:25:57,200 --> 00:26:00,240
it's just the normal

671
00:26:00,240 --> 00:26:03,440
capability definition as it is so if you

672
00:26:03,440 --> 00:26:04,960
don't

673
00:26:04,960 --> 00:26:08,400
understand the capability

674
00:26:08,400 --> 00:26:10,480
as a server

675
00:26:10,480 --> 00:26:12,000
um

676
00:26:12,000 --> 00:26:13,760
i don't exactly remember what the spanx

677
00:26:13,760 --> 00:26:15,360
is i think they would reject it then

678
00:26:15,360 --> 00:26:17,600
right so okay so you would

679
00:26:17,600 --> 00:26:21,039
so um one would need to send um for the

680
00:26:21,039 --> 00:26:24,480
js for the js the js task in chamber for

681
00:26:24,480 --> 00:26:28,080
tags along with the capabilities

682
00:26:28,080 --> 00:26:30,400
that the data contains so that the

683
00:26:30,400 --> 00:26:32,400
server can identify

684
00:26:32,400 --> 00:26:34,640
yes if it supports all of that

685
00:26:34,640 --> 00:26:36,880
yes

686
00:26:37,600 --> 00:26:41,360
yeah robert like i think it's um

687
00:26:41,520 --> 00:26:42,799
you know this is a client talking to a

688
00:26:42,799 --> 00:26:44,880
server so it's kind of if if you

689
00:26:44,880 --> 00:26:47,039
implementing it the capabilities let the

690
00:26:47,039 --> 00:26:48,480
client negotiate with the server what it

691
00:26:48,480 --> 00:26:51,039
supports and turn on off features

692
00:26:51,039 --> 00:26:52,480
if you were importing the data from

693
00:26:52,480 --> 00:26:54,480
elsewhere so it had you know you had

694
00:26:54,480 --> 00:26:56,240
exported something with recurrences from

695
00:26:56,240 --> 00:26:58,000
google workspace you know importing into

696
00:26:58,000 --> 00:26:59,840
microsoft planner that didn't support it

697
00:26:59,840 --> 00:27:01,279
then it'd be up to the import tool to

698
00:27:01,279 --> 00:27:02,240
say

699
00:27:02,240 --> 00:27:03,679
sorry this has

700
00:27:03,679 --> 00:27:05,360
stuff in it that we don't support you

701
00:27:05,360 --> 00:27:07,200
can import it and we'll strip that stuff

702
00:27:07,200 --> 00:27:09,679
or maybe don't

703
00:27:09,679 --> 00:27:10,880
okay

704
00:27:10,880 --> 00:27:11,679
yep

705
00:27:11,679 --> 00:27:12,720
yeah

706
00:27:12,720 --> 00:27:14,640
um i just want to add a quick

707
00:27:14,640 --> 00:27:16,480
question on this

708
00:27:16,480 --> 00:27:18,000
there were more groups on the previous

709
00:27:18,000 --> 00:27:19,919
page than actually being used on here so

710
00:27:19,919 --> 00:27:22,320
do we have stuff that we actually no one

711
00:27:22,320 --> 00:27:24,559
uses and if so is it worth actually

712
00:27:24,559 --> 00:27:26,159
keeping those

713
00:27:26,159 --> 00:27:28,080
right now there are more groups

714
00:27:28,080 --> 00:27:29,679
because this one's got the currencies as

715
00:27:29,679 --> 00:27:31,360
alerts and signees i think the only ones

716
00:27:31,360 --> 00:27:33,520
on this page that are actually being

717
00:27:33,520 --> 00:27:35,919
you put next to what people are doing

718
00:27:35,919 --> 00:27:37,440
the previous page i think had custom

719
00:27:37,440 --> 00:27:39,840
time zones and something else maybe oh

720
00:27:39,840 --> 00:27:41,200
yeah

721
00:27:41,200 --> 00:27:43,919
uh localizations custom time zones

722
00:27:43,919 --> 00:27:46,000
yeah so those two don't appear on that

723
00:27:46,000 --> 00:27:48,159
list at all so that's correct should we

724
00:27:48,159 --> 00:27:49,440
actually have them at all if no one's

725
00:27:49,440 --> 00:27:50,720
using them

726
00:27:50,720 --> 00:27:52,320
maybe i should have looked a bit deeper

727
00:27:52,320 --> 00:27:54,559
that's a good point uh

728
00:27:54,559 --> 00:27:56,399
that might that might have gone lost in

729
00:27:56,399 --> 00:27:57,840
my

730
00:27:57,840 --> 00:27:59,440
what i looked at yeah

731
00:27:59,440 --> 00:28:02,240
the simpler the better in many respects

732
00:28:02,240 --> 00:28:05,200
it's it's it's somewhere but it's it's

733
00:28:05,200 --> 00:28:06,320
yeah

734
00:28:06,320 --> 00:28:07,600
okay

735
00:28:07,600 --> 00:28:08,880
yeah i didn't i didn't look at look

736
00:28:08,880 --> 00:28:10,559
deeply into those two i'm sorry yeah

737
00:28:10,559 --> 00:28:12,480
that's a good point

738
00:28:12,480 --> 00:28:15,799
thanks a lot

739
00:28:26,320 --> 00:28:27,120
yeah

740
00:28:27,120 --> 00:28:29,120
so i had a couple of things one is this

741
00:28:29,120 --> 00:28:30,640
particular point about between the

742
00:28:30,640 --> 00:28:32,720
client and the server if i remember in

743
00:28:32,720 --> 00:28:33,760
the

744
00:28:33,760 --> 00:28:34,960
internet world we have this whole

745
00:28:34,960 --> 00:28:37,679
concept of be

746
00:28:37,679 --> 00:28:39,520
send or be very conservative in what you

747
00:28:39,520 --> 00:28:41,440
send and be very broad-minded in what

748
00:28:41,440 --> 00:28:42,960
you accept so

749
00:28:42,960 --> 00:28:45,840
i think that philosophy about if zimbra

750
00:28:45,840 --> 00:28:47,600
doesn't if i'm getting something from

751
00:28:47,600 --> 00:28:49,200
zimbra and there are alerts there i

752
00:28:49,200 --> 00:28:51,600
don't support it okay fine forget it if

753
00:28:51,600 --> 00:28:53,600
i'm sending some i'm i'm not sure

754
00:28:53,600 --> 00:28:55,440
whether the other servers actually use

755
00:28:55,440 --> 00:28:57,039
that that philosophy are built on that

756
00:28:57,039 --> 00:28:59,440
philosophy that if i send them two three

757
00:28:59,440 --> 00:29:01,279
different things will they just neglect

758
00:29:01,279 --> 00:29:03,520
what they don't know and or how do so

759
00:29:03,520 --> 00:29:06,000
that's so but i think if it's going to

760
00:29:06,000 --> 00:29:08,080
be for a particular implementation it

761
00:29:08,080 --> 00:29:09,600
needs to be pretty

762
00:29:09,600 --> 00:29:11,200
broad-minded in what it accepts and if

763
00:29:11,200 --> 00:29:13,200
it doesn't implement it fine that's

764
00:29:13,200 --> 00:29:15,039
sorry it does not support it the other

765
00:29:15,039 --> 00:29:18,320
thing i was at this point was when i was

766
00:29:18,320 --> 00:29:19,760
when you mentioned impact versus

767
00:29:19,760 --> 00:29:21,440
priority

768
00:29:21,440 --> 00:29:24,240
sorry impact and priority yes

769
00:29:24,240 --> 00:29:28,240
so my thinking is that impact is what

770
00:29:28,240 --> 00:29:30,720
impacts me as a person who's creating a

771
00:29:30,720 --> 00:29:32,240
task for you

772
00:29:32,240 --> 00:29:34,080
priority is what you decide whether you

773
00:29:34,080 --> 00:29:37,279
want to take it up or not

774
00:29:37,440 --> 00:29:39,520
if something is an issue with me there's

775
00:29:39,520 --> 00:29:42,080
a bug like for example the dhcp v6 bug

776
00:29:42,080 --> 00:29:44,080
and goo android which has been pending

777
00:29:44,080 --> 00:29:46,399
for a long time yeah it impacts the

778
00:29:46,399 --> 00:29:48,399
entire android community which wants to

779
00:29:48,399 --> 00:29:50,720
use dhcp v6 but it is not a priority for

780
00:29:50,720 --> 00:29:52,640
the google developers to do it

781
00:29:52,640 --> 00:29:54,240
yeah i think that is i think the key

782
00:29:54,240 --> 00:29:56,159
point that we can possibly somehow make

783
00:29:56,159 --> 00:29:56,880
it

784
00:29:56,880 --> 00:29:59,360
yes okay you mean you mean i should

785
00:29:59,360 --> 00:30:01,440
state that also like to make that a bit

786
00:30:01,440 --> 00:30:03,440
more clear in the text

787
00:30:03,440 --> 00:30:05,039
yeah

788
00:30:05,039 --> 00:30:07,039
but yeah that's that's a good point so

789
00:30:07,039 --> 00:30:09,440
that that's the point that

790
00:30:09,440 --> 00:30:12,080
it's important to have both in the spec

791
00:30:12,080 --> 00:30:15,120
it's not the same yeah

792
00:30:16,640 --> 00:30:18,559
wow quite a lot of people

793
00:30:18,559 --> 00:30:19,840
robert

794
00:30:19,840 --> 00:30:24,080
letting me in um yeah in regards to uh

795
00:30:24,080 --> 00:30:26,559
reject rejecting

796
00:30:26,559 --> 00:30:28,640
properties you don't understand versus

797
00:30:28,640 --> 00:30:29,840
you know

798
00:30:29,840 --> 00:30:31,600
just being able to store any extra

799
00:30:31,600 --> 00:30:34,240
properties i would rather

800
00:30:34,240 --> 00:30:35,760
the server

801
00:30:35,760 --> 00:30:38,480
is able to store any extra properties

802
00:30:38,480 --> 00:30:40,080
because it doesn't doesn't advertise the

803
00:30:40,080 --> 00:30:42,399
capability obviously it cannot do any

804
00:30:42,399 --> 00:30:44,960
automation based on them or any you know

805
00:30:44,960 --> 00:30:46,559
derived property or anything like that

806
00:30:46,559 --> 00:30:49,600
but i think it would be better safer if

807
00:30:49,600 --> 00:30:51,440
you can actually store them

808
00:30:51,440 --> 00:30:53,360
i agree um

809
00:30:53,360 --> 00:30:55,840
is but that's that's the thing in a

810
00:30:55,840 --> 00:30:57,840
course back right that

811
00:30:57,840 --> 00:31:01,200
isn't it already defined like that i

812
00:31:01,200 --> 00:31:05,240
don't remember 100

813
00:31:05,279 --> 00:31:09,519
so okay if it cannot be done that's fine

814
00:31:17,039 --> 00:31:18,799
all right robert

815
00:31:18,799 --> 00:31:21,919
i'm robert stepanek again um i have two

816
00:31:21,919 --> 00:31:24,960
remarks not related to grouping so

817
00:31:24,960 --> 00:31:27,200
um i i think we're done with the

818
00:31:27,200 --> 00:31:30,000
grouping discussion all right okay

819
00:31:30,000 --> 00:31:31,760
um so the first one is just an

820
00:31:31,760 --> 00:31:34,080
uneducated remark regarding the

821
00:31:34,080 --> 00:31:38,320
estimated work property yeah um

822
00:31:38,320 --> 00:31:40,159
so i understood that there are

823
00:31:40,159 --> 00:31:42,960
multiple scales of how to estimate work

824
00:31:42,960 --> 00:31:45,200
but at the moment there's just a single

825
00:31:45,200 --> 00:31:48,000
numeric value to start it would it make

826
00:31:48,000 --> 00:31:50,000
sense to

827
00:31:50,000 --> 00:31:51,120
define

828
00:31:51,120 --> 00:31:53,200
to add an additional value to define the

829
00:31:53,200 --> 00:31:55,760
scale it is done in when there are

830
00:31:55,760 --> 00:31:57,760
different

831
00:31:57,760 --> 00:32:02,399
estimating schemes that that can be used

832
00:32:02,399 --> 00:32:05,120
okay yeah the thing is i i didn't really

833
00:32:05,120 --> 00:32:06,480
find like

834
00:32:06,480 --> 00:32:08,159
typically it's just a value you know it

835
00:32:08,159 --> 00:32:09,279
just says

836
00:32:09,279 --> 00:32:11,039
how much work is this

837
00:32:11,039 --> 00:32:13,440
and this now it doesn't say that there's

838
00:32:13,440 --> 00:32:14,720
an actual

839
00:32:14,720 --> 00:32:15,760
unit

840
00:32:15,760 --> 00:32:17,279
to it

841
00:32:17,279 --> 00:32:20,000
but i try to come up with a

842
00:32:20,000 --> 00:32:22,159
like the common thing that people do in

843
00:32:22,159 --> 00:32:23,760
in the agile world and

844
00:32:23,760 --> 00:32:25,360
the common thing that i found was the

845
00:32:25,360 --> 00:32:27,600
fibonacci scale

846
00:32:27,600 --> 00:32:28,480
yeah

847
00:32:28,480 --> 00:32:31,120
but i i would also be happy to just say

848
00:32:31,120 --> 00:32:33,120
this is just a value and

849
00:32:33,120 --> 00:32:33,919
you know

850
00:32:33,919 --> 00:32:35,440
even

851
00:32:35,440 --> 00:32:38,799
estimated work as an abstract value it

852
00:32:38,799 --> 00:32:40,880
will depend on the team

853
00:32:40,880 --> 00:32:43,200
you know to say well this is a six this

854
00:32:43,200 --> 00:32:44,480
is a 10.

855
00:32:44,480 --> 00:32:47,039
it it's i think it's difficult to to

856
00:32:47,039 --> 00:32:49,200
have like a

857
00:32:49,200 --> 00:32:52,080
interoperable

858
00:32:52,240 --> 00:32:54,799
unit that that you know

859
00:32:54,799 --> 00:32:57,519
that different systems will

860
00:32:57,519 --> 00:32:59,200
understand i don't know it's yeah that's

861
00:32:59,200 --> 00:33:01,200
how i understood um the definition of

862
00:33:01,200 --> 00:33:03,360
the property although i then would

863
00:33:03,360 --> 00:33:05,840
rather i wouldn't understand why

864
00:33:05,840 --> 00:33:08,000
even the fibonacci scale should be

865
00:33:08,000 --> 00:33:10,559
mentioned if it's really yeah an

866
00:33:10,559 --> 00:33:13,279
internal decision okay um although i

867
00:33:13,279 --> 00:33:15,760
would i would assume that

868
00:33:15,760 --> 00:33:17,840
if tasks are supposed to get shared

869
00:33:17,840 --> 00:33:21,120
between systems then some

870
00:33:21,120 --> 00:33:24,559
some common definition must be

871
00:33:24,559 --> 00:33:26,320
must be defined at least the direction

872
00:33:26,320 --> 00:33:27,840
would be handy knowing which which is

873
00:33:27,840 --> 00:33:29,279
larger than the other

874
00:33:29,279 --> 00:33:30,720
is the bigger number larger or the

875
00:33:30,720 --> 00:33:32,799
smaller number is probably worse

876
00:33:32,799 --> 00:33:34,080
all right

877
00:33:34,080 --> 00:33:36,799
that's a good point

878
00:33:37,440 --> 00:33:39,760
yeah

879
00:33:39,760 --> 00:33:42,960
okay um the other remark is

880
00:33:42,960 --> 00:33:45,360
organizational and goes more to the

881
00:33:45,360 --> 00:33:48,470
chairs uh chairs which is um

882
00:33:48,470 --> 00:33:49,919
[Music]

883
00:33:49,919 --> 00:33:53,120
now that shame up tasks defines updates

884
00:33:53,120 --> 00:33:53,840
to

885
00:33:53,840 --> 00:33:56,880
js calendar tasks um but she is kind of

886
00:33:56,880 --> 00:33:59,600
the test it but she is calendar is

887
00:33:59,600 --> 00:34:00,960
currently

888
00:34:00,960 --> 00:34:04,640
getting reworked i don't know how to

889
00:34:04,640 --> 00:34:07,840
solve these dependencies

890
00:34:09,280 --> 00:34:11,119
we'd probably send them through together

891
00:34:11,119 --> 00:34:13,359
um that's fairly normal to cluster

892
00:34:13,359 --> 00:34:14,800
documents together when they're related

893
00:34:14,800 --> 00:34:16,560
to each other so

894
00:34:16,560 --> 00:34:18,079
hopefully these two can go together

895
00:34:18,079 --> 00:34:19,280
otherwise

896
00:34:19,280 --> 00:34:20,960
we'd need to wait for js calendar to go

897
00:34:20,960 --> 00:34:22,560
first

898
00:34:22,560 --> 00:34:25,839
okay understood thank you

899
00:34:26,159 --> 00:34:27,760
all right

900
00:34:27,760 --> 00:34:29,119
this would have to go want to go at the

901
00:34:29,119 --> 00:34:32,720
same time as j mccallum as well

902
00:34:32,800 --> 00:34:36,079
like german task is kind of

903
00:34:39,040 --> 00:34:40,719
okay yeah the

904
00:34:40,719 --> 00:34:42,639
last slide is just that we

905
00:34:42,639 --> 00:34:45,199
are still working on feedback gathering

906
00:34:45,199 --> 00:34:47,119
feedback so we have

907
00:34:47,119 --> 00:34:48,480
through the ngi

908
00:34:48,480 --> 00:34:50,159
project we have

909
00:34:50,159 --> 00:34:52,320
some initial feedback from the weekend

910
00:34:52,320 --> 00:34:54,239
developer and

911
00:34:54,239 --> 00:34:57,599
the developer from to do

912
00:34:57,599 --> 00:34:59,359
also gave some feedback within the chi

913
00:34:59,359 --> 00:35:00,960
connect

914
00:35:00,960 --> 00:35:03,119
rounds yeah but there's still more to

915
00:35:03,119 --> 00:35:05,520
come there's still more work to do

916
00:35:05,520 --> 00:35:07,599
yeah there are still some next steps

917
00:35:07,599 --> 00:35:09,839
before we can go to a last call

918
00:35:09,839 --> 00:35:12,320
definitely

919
00:35:13,920 --> 00:35:15,920
cool do you need anything from the

920
00:35:15,920 --> 00:35:19,280
working group other than reviews

921
00:35:19,359 --> 00:35:22,640
not right now cool

922
00:35:24,240 --> 00:35:27,119
and did you capture murray's

923
00:35:27,119 --> 00:35:28,640
comment murray do you want to make a

924
00:35:28,640 --> 00:35:30,240
comment at the microphone or anything

925
00:35:30,240 --> 00:35:32,079
because just in case people didn't see

926
00:35:32,079 --> 00:35:33,760
it on the chat

927
00:35:33,760 --> 00:35:35,119
yeah it's not a question for the work in

928
00:35:35,119 --> 00:35:36,960
particular it's actually more directed

929
00:35:36,960 --> 00:35:38,320
to the chairs in the working group as a

930
00:35:38,320 --> 00:35:39,839
whole um

931
00:35:39,839 --> 00:35:42,000
calex has never been something i know a

932
00:35:42,000 --> 00:35:43,520
lot about in depth so as i'm reading the

933
00:35:43,520 --> 00:35:45,359
charter the word tasks doesn't appear

934
00:35:45,359 --> 00:35:47,040
anywhere in it and i'm starting to think

935
00:35:47,040 --> 00:35:49,040
oh no you've strayed from the charter

936
00:35:49,040 --> 00:35:50,960
and i didn't catch it in time but then

937
00:35:50,960 --> 00:35:52,320
someone said that

938
00:35:52,320 --> 00:35:53,920
tasks sort of falls under calendaring

939
00:35:53,920 --> 00:35:55,680
generally so like that's fine and then

940
00:35:55,680 --> 00:35:57,119
in that case the only thing missing is i

941
00:35:57,119 --> 00:35:58,800
just please send me a milestone so i can

942
00:35:58,800 --> 00:36:00,000
track it

943
00:36:00,000 --> 00:36:03,359
except this isn't callexed

944
00:36:03,440 --> 00:36:05,920
yes um calendaring in general and you

945
00:36:05,920 --> 00:36:07,200
already are chartered to do calendaring

946
00:36:07,200 --> 00:36:08,560
related work so that's what i was

947
00:36:08,560 --> 00:36:10,079
getting at i didn't know how tasks were

948
00:36:10,079 --> 00:36:13,839
related to the charter that's all yeah

949
00:36:13,839 --> 00:36:16,320
yeah in in the

950
00:36:16,320 --> 00:36:18,720
calyx formats tasks are a subset of

951
00:36:18,720 --> 00:36:21,119
calendars so

952
00:36:21,119 --> 00:36:24,119
okay

953
00:36:28,480 --> 00:36:29,920
all right very good

954
00:36:29,920 --> 00:36:32,240
um

955
00:36:32,240 --> 00:36:34,160
there are other things in the agenda

956
00:36:34,160 --> 00:36:35,839
that don't have slides we should talk

957
00:36:35,839 --> 00:36:38,560
through them as well

958
00:36:39,200 --> 00:36:41,280
right and yeah let's let's hit those

959
00:36:41,280 --> 00:36:43,280
before we go to the uh

960
00:36:43,280 --> 00:36:45,359
to the new topics

961
00:36:45,359 --> 00:36:47,680
so

962
00:36:48,000 --> 00:36:51,240
let's bring up the uh the agenda for

963
00:36:51,240 --> 00:36:53,839
this sharing specifically which i think

964
00:36:53,839 --> 00:36:55,200
are both neil

965
00:36:55,200 --> 00:36:57,520
uh well calendars is robert i think

966
00:36:57,520 --> 00:36:58,640
right

967
00:36:58,640 --> 00:37:00,400
right

968
00:37:00,400 --> 00:37:01,760
okay

969
00:37:01,760 --> 00:37:02,720
um

970
00:37:02,720 --> 00:37:05,440
yeah um so

971
00:37:05,440 --> 00:37:07,920
basically calendars is waiting on

972
00:37:07,920 --> 00:37:09,839
resolving um

973
00:37:09,839 --> 00:37:11,200
the

974
00:37:11,200 --> 00:37:13,520
uh js calendar

975
00:37:13,520 --> 00:37:14,960
discussion that's happening in calyx at

976
00:37:14,960 --> 00:37:16,560
the moment

977
00:37:16,560 --> 00:37:20,160
particularly around identifying

978
00:37:20,560 --> 00:37:22,560
who participants are corresponding

979
00:37:22,560 --> 00:37:25,200
participants with who you are

980
00:37:25,200 --> 00:37:27,200
um so hopefully we'll get that resolved

981
00:37:27,200 --> 00:37:29,839
soon and then um

982
00:37:29,839 --> 00:37:31,359
you know it was been basically done for

983
00:37:31,359 --> 00:37:33,040
a while now so hopefully we'll be able

984
00:37:33,040 --> 00:37:36,960
to face it off and uh sharing too

985
00:37:36,960 --> 00:37:38,400
we'll probably want to publish sharing

986
00:37:38,400 --> 00:37:40,720
calendars tasks kind of together they're

987
00:37:40,720 --> 00:37:41,599
all

988
00:37:41,599 --> 00:37:43,839
related um

989
00:37:43,839 --> 00:37:47,680
if it tasks is gonna be nearly ready too

990
00:37:47,680 --> 00:37:52,160
and with the js calendar even uh so

991
00:37:52,160 --> 00:37:54,000
yeah um sorry there's not been a huge

992
00:37:54,000 --> 00:37:55,440
amount of progress but i'm hoping once

993
00:37:55,440 --> 00:37:57,760
we have this js calendar thing resolved

994
00:37:57,760 --> 00:38:01,440
um we'll be pretty much there

995
00:38:02,400 --> 00:38:04,240
cool thanks neil so yeah we'll basically

996
00:38:04,240 --> 00:38:05,920
just wait and put them through with

997
00:38:05,920 --> 00:38:09,040
tasks when tasks is ready

998
00:38:09,040 --> 00:38:10,240
sure

999
00:38:10,240 --> 00:38:12,240
cool

1000
00:38:12,240 --> 00:38:16,598
all right new work new work

1001
00:38:18,720 --> 00:38:21,118
oh yeah

1002
00:38:21,280 --> 00:38:23,040
yeah sorry i forgot to see it as well

1003
00:38:23,040 --> 00:38:26,079
okay it's gonna pop up

1004
00:38:29,760 --> 00:38:31,760
okay so uh sieve i don't have any slides

1005
00:38:31,760 --> 00:38:33,040
because there's not much to talk about

1006
00:38:33,040 --> 00:38:35,760
um the only change since since vienna

1007
00:38:35,760 --> 00:38:38,079
was uh tracking the changes in the blob

1008
00:38:38,079 --> 00:38:39,119
spec

1009
00:38:39,119 --> 00:38:41,040
other than that this has been kind of

1010
00:38:41,040 --> 00:38:44,000
idling for the last two cycles

1011
00:38:44,000 --> 00:38:45,920
waiting for implementation experience

1012
00:38:45,920 --> 00:38:47,440
with the test method

1013
00:38:47,440 --> 00:38:49,440
which has yet to come so

1014
00:38:49,440 --> 00:38:51,599
i think what i'd like to do

1015
00:38:51,599 --> 00:38:54,880
is pull that out of this spec

1016
00:38:54,880 --> 00:38:57,200
and leave it as an extension

1017
00:38:57,200 --> 00:38:58,800
uh it's already optional in this

1018
00:38:58,800 --> 00:39:02,320
particular spec and i think with

1019
00:39:02,320 --> 00:39:04,240
the process i met draft which will be

1020
00:39:04,240 --> 00:39:05,839
talked about in the

1021
00:39:05,839 --> 00:39:07,119
extra session

1022
00:39:07,119 --> 00:39:08,560
there might be

1023
00:39:08,560 --> 00:39:10,320
a couple additions needed for the test

1024
00:39:10,320 --> 00:39:11,920
method anyways so

1025
00:39:11,920 --> 00:39:14,079
rather than hold this up i think that's

1026
00:39:14,079 --> 00:39:15,760
probably the best way forward

1027
00:39:15,760 --> 00:39:17,680
uh we've got this running in production

1028
00:39:17,680 --> 00:39:19,760
at fast mail it's totally replaced our

1029
00:39:19,760 --> 00:39:21,520
managed implementation

1030
00:39:21,520 --> 00:39:24,079
and so far we haven't seen any problems

1031
00:39:24,079 --> 00:39:26,640
with it so unless there's

1032
00:39:26,640 --> 00:39:28,560
outlying concerns that haven't been

1033
00:39:28,560 --> 00:39:29,839
brought to my attention i think we're

1034
00:39:29,839 --> 00:39:31,119
probably ready for

1035
00:39:31,119 --> 00:39:33,040
last call after i pull the test method

1036
00:39:33,040 --> 00:39:35,200
out

1037
00:39:36,800 --> 00:39:39,800
lexi

1038
00:39:48,240 --> 00:39:51,599
um yeah i think uh

1039
00:39:51,599 --> 00:39:53,440
you brown and i had a discussion and

1040
00:39:53,440 --> 00:39:57,800
maybe just leave it in and

1041
00:40:01,599 --> 00:40:03,839
do you see a problem pulling it out and

1042
00:40:03,839 --> 00:40:05,280
well i mean if you want to do the work

1043
00:40:05,280 --> 00:40:07,520
and split it up split it off i i don't

1044
00:40:07,520 --> 00:40:09,599
see it it already has its own capability

1045
00:40:09,599 --> 00:40:10,400
so

1046
00:40:10,400 --> 00:40:12,400
it's it's basically just moving into a

1047
00:40:12,400 --> 00:40:13,520
separate draft

1048
00:40:13,520 --> 00:40:16,160
so this can move forward

1049
00:40:16,160 --> 00:40:18,000
i kind of feel it's

1050
00:40:18,000 --> 00:40:20,880
a bit incomplete without it you know the

1051
00:40:20,880 --> 00:40:23,440
for real world implementations but

1052
00:40:23,440 --> 00:40:25,359
and it's not a big deal i suppose as a

1053
00:40:25,359 --> 00:40:28,880
replacement for manage sieve test isn't

1054
00:40:28,880 --> 00:40:32,640
necessary at all i don't believe

1055
00:40:33,280 --> 00:40:34,480
okay

1056
00:40:34,480 --> 00:40:37,280
i don't remember

1057
00:40:37,280 --> 00:40:38,480
hope we can take we can take it to the

1058
00:40:38,480 --> 00:40:39,920
list

1059
00:40:39,920 --> 00:40:41,119
you know if you feel strongly about it

1060
00:40:41,119 --> 00:40:42,240
we'll leave it in and then no i don't

1061
00:40:42,240 --> 00:40:44,640
know no i don't feel strongly

1062
00:40:44,640 --> 00:40:47,200
about it but uh

1063
00:40:47,200 --> 00:40:50,079
i think maybe what uh

1064
00:40:50,079 --> 00:40:53,359
we should do is you want to investigate

1065
00:40:53,359 --> 00:40:56,400
how to extend imp action anyway for this

1066
00:40:56,400 --> 00:40:57,520
right

1067
00:40:57,520 --> 00:40:59,760
right so maybe just look at it and see

1068
00:40:59,760 --> 00:41:01,599
how it will extend and whether you

1069
00:41:01,599 --> 00:41:03,760
already have genetic

1070
00:41:03,760 --> 00:41:06,880
um ability to have you know stuff extra

1071
00:41:06,880 --> 00:41:10,079
options that that the engine can

1072
00:41:10,079 --> 00:41:12,400
act on which is kind of part of that yep

1073
00:41:12,400 --> 00:41:16,319
but understood my only fear is

1074
00:41:16,319 --> 00:41:17,680
that without somebody actually

1075
00:41:17,680 --> 00:41:19,760
implementing it and using it there may

1076
00:41:19,760 --> 00:41:21,359
be other missing pieces that we're

1077
00:41:21,359 --> 00:41:22,640
unaware of

1078
00:41:22,640 --> 00:41:24,640
and i hate to publish something that's

1079
00:41:24,640 --> 00:41:26,560
not going to work for people that need

1080
00:41:26,560 --> 00:41:29,040
it okay

1081
00:41:29,040 --> 00:41:31,279
all right

1082
00:41:31,839 --> 00:41:32,720
rick

1083
00:41:32,720 --> 00:41:35,839
yeah uh this is rick sickness the uh

1084
00:41:35,839 --> 00:41:37,920
as as for incompleteness with management

1085
00:41:37,920 --> 00:41:39,520
i can tell you it's definitely

1086
00:41:39,520 --> 00:41:41,280
there is no

1087
00:41:41,280 --> 00:41:44,240
capability that matches the civ script

1088
00:41:44,240 --> 00:41:46,720
jmap testing behavior in manage ziv it's

1089
00:41:46,720 --> 00:41:47,599
a

1090
00:41:47,599 --> 00:41:49,440
it's a novel thing designed to replace

1091
00:41:49,440 --> 00:41:52,319
an internal system at faz mail so uh

1092
00:41:52,319 --> 00:41:54,240
manage it has check script right it

1093
00:41:54,240 --> 00:41:56,400
doesn't compile and we've

1094
00:41:56,400 --> 00:41:58,400
we've built that into the existing civ

1095
00:41:58,400 --> 00:42:00,800
script behavior and uh i think it's a

1096
00:42:00,800 --> 00:42:02,480
great idea to split them the basic

1097
00:42:02,480 --> 00:42:04,240
problem being one of the reasons we

1098
00:42:04,240 --> 00:42:06,079
don't have an implementation to test

1099
00:42:06,079 --> 00:42:07,359
with our

1100
00:42:07,359 --> 00:42:09,280
a user-facing implementation to test at

1101
00:42:09,280 --> 00:42:11,359
fast mail is we've never figured out the

1102
00:42:11,359 --> 00:42:13,760
right way to present it to users and if

1103
00:42:13,760 --> 00:42:15,440
we can't find a way to say here's how to

1104
00:42:15,440 --> 00:42:17,200
simulate this and present it to users

1105
00:42:17,200 --> 00:42:19,200
it's unclear that it's technically sound

1106
00:42:19,200 --> 00:42:21,040
right we might realize that

1107
00:42:21,040 --> 00:42:23,119
uh the the testing of the input and

1108
00:42:23,119 --> 00:42:26,000
output can't be made useful as an actual

1109
00:42:26,000 --> 00:42:28,160
simulation tool but meanwhile is a

1110
00:42:28,160 --> 00:42:29,599
replacement for managed script manager

1111
00:42:29,599 --> 00:42:30,640
sieve it's

1112
00:42:30,640 --> 00:42:32,240
it's done the job we're done we've shut

1113
00:42:32,240 --> 00:42:34,240
off manchester uh so publishing

1114
00:42:34,240 --> 00:42:36,160
everything done now seems like it it can

1115
00:42:36,160 --> 00:42:37,680
replace the old facility and this new

1116
00:42:37,680 --> 00:42:38,800
thing is still

1117
00:42:38,800 --> 00:42:42,280
it's just an idea

1118
00:42:44,319 --> 00:42:46,400
if there's no other comments

1119
00:42:46,400 --> 00:42:48,240
um i will

1120
00:42:48,240 --> 00:42:49,839
proceed to remove this

1121
00:42:49,839 --> 00:42:51,280
out of the current draft and then ask

1122
00:42:51,280 --> 00:42:54,440
for workinggroup.com

1123
00:42:54,480 --> 00:42:58,040
cool thank you

1124
00:43:00,480 --> 00:43:03,280
all right you work

1125
00:43:08,160 --> 00:43:11,200
okay uh on to uh

1126
00:43:11,200 --> 00:43:12,240
newark

1127
00:43:12,240 --> 00:43:13,599
i'll start with

1128
00:43:13,599 --> 00:43:15,119
migration and portability i think that

1129
00:43:15,119 --> 00:43:18,480
was the first one on the agenda

1130
00:43:22,960 --> 00:43:25,040
all right just a

1131
00:43:25,040 --> 00:43:27,200
quick organizational note if we

1132
00:43:27,200 --> 00:43:29,760
if we're kind of low on time then we can

1133
00:43:29,760 --> 00:43:30,800
skip the

1134
00:43:30,800 --> 00:43:32,560
preferences part but we'll go ahead all

1135
00:43:32,560 --> 00:43:33,440
right

1136
00:43:33,440 --> 00:43:37,520
okay so um yeah i pre i prepared two

1137
00:43:37,520 --> 00:43:38,720
small

1138
00:43:38,720 --> 00:43:40,400
presentations about

1139
00:43:40,400 --> 00:43:42,960
our experiences or some ideas that we

1140
00:43:42,960 --> 00:43:44,160
have

1141
00:43:44,160 --> 00:43:46,800
with jmap

1142
00:43:46,800 --> 00:43:49,599
the first one is to use jmap

1143
00:43:49,599 --> 00:43:50,960
as a

1144
00:43:50,960 --> 00:43:53,440
protocol for data portability and

1145
00:43:53,440 --> 00:43:55,599
migration

1146
00:43:55,599 --> 00:43:58,400
so in our use case

1147
00:43:58,400 --> 00:43:59,200
we

1148
00:43:59,200 --> 00:44:01,359
want to use jmap as a generic

1149
00:44:01,359 --> 00:44:04,560
one time api basically

1150
00:44:04,560 --> 00:44:08,640
and one time api is kind of a weird word

1151
00:44:08,640 --> 00:44:11,440
let me try to explain so

1152
00:44:11,440 --> 00:44:12,319
we

1153
00:44:12,319 --> 00:44:14,400
in our world we have a lot of legacy

1154
00:44:14,400 --> 00:44:16,319
systems from

1155
00:44:16,319 --> 00:44:17,359
which

1156
00:44:17,359 --> 00:44:19,920
we want to move to a more modern system

1157
00:44:19,920 --> 00:44:22,560
this legacy system has typically or some

1158
00:44:22,560 --> 00:44:25,040
of them have no api

1159
00:44:25,040 --> 00:44:27,599
so what we're looking for is an api

1160
00:44:27,599 --> 00:44:28,640
to be

1161
00:44:28,640 --> 00:44:30,400
used for

1162
00:44:30,400 --> 00:44:31,359
the

1163
00:44:31,359 --> 00:44:34,160
the task of migrating away

1164
00:44:34,160 --> 00:44:37,599
from the old system to a new system

1165
00:44:37,599 --> 00:44:38,640
um

1166
00:44:38,640 --> 00:44:41,200
and what would be great would be to have

1167
00:44:41,200 --> 00:44:42,480
to point

1168
00:44:42,480 --> 00:44:43,839
developers

1169
00:44:43,839 --> 00:44:46,079
that get this task to an api

1170
00:44:46,079 --> 00:44:49,040
specification that they can just

1171
00:44:49,040 --> 00:44:51,440
they can say ah okay we have this legacy

1172
00:44:51,440 --> 00:44:53,520
system we can just

1173
00:44:53,520 --> 00:44:57,200
put this api in front of it and

1174
00:44:57,200 --> 00:45:00,560
be done with it basically so it's

1175
00:45:00,560 --> 00:45:04,079
it may it makes the job a bit easier for

1176
00:45:04,079 --> 00:45:07,680
developers for this specific use case

1177
00:45:07,680 --> 00:45:10,720
and we looked at jmap

1178
00:45:10,720 --> 00:45:14,160
for this use case

1179
00:45:14,800 --> 00:45:16,319
you can use jma for a lot of different

1180
00:45:16,319 --> 00:45:18,880
data types which is great

1181
00:45:18,880 --> 00:45:20,960
so it's it's powerful enough it has a

1182
00:45:20,960 --> 00:45:22,640
lot of features

1183
00:45:22,640 --> 00:45:25,040
um

1184
00:45:25,040 --> 00:45:27,520
more than enough actually than we need

1185
00:45:27,520 --> 00:45:29,359
so that's perfect

1186
00:45:29,359 --> 00:45:30,480
the thing

1187
00:45:30,480 --> 00:45:32,720
that we a bit we struggle a bit with

1188
00:45:32,720 --> 00:45:35,839
with is the ease of implementation for

1189
00:45:35,839 --> 00:45:37,599
server developers

1190
00:45:37,599 --> 00:45:41,200
so let me go to the next slide

1191
00:45:41,280 --> 00:45:42,319
um

1192
00:45:42,319 --> 00:45:44,800
so what we tried

1193
00:45:44,800 --> 00:45:45,599
to

1194
00:45:45,599 --> 00:45:48,000
use jmap for this use case

1195
00:45:48,000 --> 00:45:51,040
is to bend it a bit to make it more

1196
00:45:51,040 --> 00:45:52,319
rapid

1197
00:45:52,319 --> 00:45:54,560
to make it easier for

1198
00:45:54,560 --> 00:45:57,280
for third-party developers to implement

1199
00:45:57,280 --> 00:45:58,839
the jmap

1200
00:45:58,839 --> 00:46:01,839
api and so these are just some ideas

1201
00:46:01,839 --> 00:46:04,160
that we had so um

1202
00:46:04,160 --> 00:46:08,800
how we change the the the core api

1203
00:46:08,800 --> 00:46:10,960
so

1204
00:46:11,119 --> 00:46:14,640
so developers are actually interested in

1205
00:46:14,640 --> 00:46:16,319
implementing this

1206
00:46:16,319 --> 00:46:17,520
without

1207
00:46:17,520 --> 00:46:19,920
too much overhead

1208
00:46:19,920 --> 00:46:22,560
so the the first idea is that we

1209
00:46:22,560 --> 00:46:25,200
basically we focus on the key

1210
00:46:25,200 --> 00:46:27,440
objects and properties from the api from

1211
00:46:27,440 --> 00:46:29,119
the spec

1212
00:46:29,119 --> 00:46:31,359
which are necessary for the migration

1213
00:46:31,359 --> 00:46:33,440
use case so

1214
00:46:33,440 --> 00:46:34,960
i don't know in some cases you don't

1215
00:46:34,960 --> 00:46:36,400
even need query

1216
00:46:36,400 --> 00:46:38,319
of course it's if it's a huge data set

1217
00:46:38,319 --> 00:46:41,680
you need it but in some cases you don't

1218
00:46:41,680 --> 00:46:43,520
in some cases

1219
00:46:43,520 --> 00:46:45,680
you don't need specific properties of

1220
00:46:45,680 --> 00:46:47,119
even a get request you don't need to

1221
00:46:47,119 --> 00:46:48,960
implement the whole thing

1222
00:46:48,960 --> 00:46:51,440
so basically what we right now have is a

1223
00:46:51,440 --> 00:46:54,480
document stating what's important and

1224
00:46:54,480 --> 00:46:56,640
what's not important for our for for

1225
00:46:56,640 --> 00:46:59,760
this particular use case to make it easy

1226
00:46:59,760 --> 00:47:00,960
to implement

1227
00:47:00,960 --> 00:47:01,760
so

1228
00:47:01,760 --> 00:47:04,640
um also what we did is we skipped the

1229
00:47:04,640 --> 00:47:06,800
session object which is a quite a big

1230
00:47:06,800 --> 00:47:08,839
one in my opinion

1231
00:47:08,839 --> 00:47:13,119
um we can do that uh

1232
00:47:13,119 --> 00:47:17,359
when the username equals the the account

1233
00:47:17,359 --> 00:47:18,160
uh

1234
00:47:18,160 --> 00:47:20,640
that you use for login basically so if

1235
00:47:20,640 --> 00:47:22,839
you only have a single user in a single

1236
00:47:22,839 --> 00:47:25,440
account you don't need the whole

1237
00:47:25,440 --> 00:47:26,960
complexity

1238
00:47:26,960 --> 00:47:29,200
about mapping an account to

1239
00:47:29,200 --> 00:47:31,359
a lot of different user ids

1240
00:47:31,359 --> 00:47:33,280
um

1241
00:47:33,280 --> 00:47:35,440
yeah and this just reduces quite some

1242
00:47:35,440 --> 00:47:36,960
overhead

1243
00:47:36,960 --> 00:47:39,599
yeah not such a

1244
00:47:39,599 --> 00:47:41,359
i don't know

1245
00:47:41,359 --> 00:47:43,920
easy choice to do that

1246
00:47:43,920 --> 00:47:46,800
um also we introduced a simplified

1247
00:47:46,800 --> 00:47:48,720
request for this

1248
00:47:48,720 --> 00:47:49,520
um

1249
00:47:49,520 --> 00:47:51,520
can you go to the next slide for this

1250
00:47:51,520 --> 00:47:54,160
or yeah

1251
00:47:54,160 --> 00:47:56,000
so um

1252
00:47:56,000 --> 00:47:58,160
yeah so to make it really easy for

1253
00:47:58,160 --> 00:48:00,160
people

1254
00:48:00,160 --> 00:48:01,359
um

1255
00:48:01,359 --> 00:48:03,680
some people might don't want maybe don't

1256
00:48:03,680 --> 00:48:05,760
even want to

1257
00:48:05,760 --> 00:48:06,800
pass

1258
00:48:06,800 --> 00:48:07,839
json

1259
00:48:07,839 --> 00:48:11,280
in their api they just want to

1260
00:48:11,280 --> 00:48:13,760
give us some json that we can parse

1261
00:48:13,760 --> 00:48:14,559
so

1262
00:48:14,559 --> 00:48:16,160
we

1263
00:48:16,160 --> 00:48:18,000
have this way that they can choose

1264
00:48:18,000 --> 00:48:20,640
either implement the normal way

1265
00:48:20,640 --> 00:48:22,640
very simplified

1266
00:48:22,640 --> 00:48:25,280
get request that you can see down there

1267
00:48:25,280 --> 00:48:27,040
or

1268
00:48:27,040 --> 00:48:28,800
have a

1269
00:48:28,800 --> 00:48:31,440
just don't use json at all for the

1270
00:48:31,440 --> 00:48:33,040
request

1271
00:48:33,040 --> 00:48:34,960
have it all in the

1272
00:48:34,960 --> 00:48:36,240
url

1273
00:48:36,240 --> 00:48:37,200
um

1274
00:48:37,200 --> 00:48:39,599
yeah so we then call this simplified

1275
00:48:39,599 --> 00:48:41,359
request

1276
00:48:41,359 --> 00:48:42,720
um

1277
00:48:42,720 --> 00:48:43,839
yes

1278
00:48:43,839 --> 00:48:46,640
so can you go to the next slide

1279
00:48:46,640 --> 00:48:50,240
okay so that's basically the idea here

1280
00:48:50,240 --> 00:48:51,760
to have

1281
00:48:51,760 --> 00:48:52,559
a

1282
00:48:52,559 --> 00:48:56,000
an api for rapid development

1283
00:48:56,000 --> 00:48:58,480
with which we reuse existing jmap

1284
00:48:58,480 --> 00:49:00,640
concepts and libraries

1285
00:49:00,640 --> 00:49:02,880
which is good because

1286
00:49:02,880 --> 00:49:04,720
we can reuse parts

1287
00:49:04,720 --> 00:49:06,559
of jmap

1288
00:49:06,559 --> 00:49:08,880
other people will be more interested in

1289
00:49:08,880 --> 00:49:11,280
implementing jmap

1290
00:49:11,280 --> 00:49:13,760
i we think it can be beneficial for the

1291
00:49:13,760 --> 00:49:16,480
whole ecosystem

1292
00:49:16,480 --> 00:49:18,079
because it

1293
00:49:18,079 --> 00:49:20,319
might spark interests

1294
00:49:20,319 --> 00:49:23,200
that that's not already there

1295
00:49:23,200 --> 00:49:24,319
yeah

1296
00:49:24,319 --> 00:49:26,079
there are some related problems that we

1297
00:49:26,079 --> 00:49:28,640
ran into like we we could

1298
00:49:28,640 --> 00:49:30,400
one could also

1299
00:49:30,400 --> 00:49:33,359
expose certain archives

1300
00:49:33,359 --> 00:49:35,040
laying around on the system and a file

1301
00:49:35,040 --> 00:49:37,839
system for example some people have

1302
00:49:37,839 --> 00:49:39,680
i don't know folders with icalendar

1303
00:49:39,680 --> 00:49:43,119
files or vcards that you could

1304
00:49:43,119 --> 00:49:46,400
you could easily expose with this

1305
00:49:46,400 --> 00:49:49,760
um with this with the wrapper

1306
00:49:49,760 --> 00:49:51,280
yeah

1307
00:49:51,280 --> 00:49:53,359
so those are basically some thoughts

1308
00:49:53,359 --> 00:49:55,359
that we have some some work that we did

1309
00:49:55,359 --> 00:49:59,200
and i just wanted to put this out there

1310
00:49:59,200 --> 00:50:01,839
and the idea was that we

1311
00:50:01,839 --> 00:50:03,520
right now we have some internal document

1312
00:50:03,520 --> 00:50:05,359
that we point people to

1313
00:50:05,359 --> 00:50:07,680
but it would be nice to have it to some

1314
00:50:07,680 --> 00:50:10,240
to put it in some public place

1315
00:50:10,240 --> 00:50:12,559
uh it's probably not worth an rfc i

1316
00:50:12,559 --> 00:50:14,160
would say

1317
00:50:14,160 --> 00:50:15,760
but yeah i want to leave that open for a

1318
00:50:15,760 --> 00:50:17,760
discussion maybe we we have a document

1319
00:50:17,760 --> 00:50:20,000
on some website or

1320
00:50:20,000 --> 00:50:21,920
do you have any thoughts on that

1321
00:50:21,920 --> 00:50:23,200
um

1322
00:50:23,200 --> 00:50:26,200
yeah

1323
00:50:30,720 --> 00:50:33,119
i'll just pop myself in the queue here

1324
00:50:33,119 --> 00:50:35,359
um one thing i was thinking of

1325
00:50:35,359 --> 00:50:38,480
way back even was doing more of a rest

1326
00:50:38,480 --> 00:50:42,480
type api so rather than the the

1327
00:50:42,480 --> 00:50:44,880
query parameters to actually have a path

1328
00:50:44,880 --> 00:50:47,280
object type and then id underneath that

1329
00:50:47,280 --> 00:50:49,599
and if you do a query on on just the

1330
00:50:49,599 --> 00:50:51,040
object type you get a list of all the

1331
00:50:51,040 --> 00:50:52,079
ids

1332
00:50:52,079 --> 00:50:54,319
and then you can request each of them as

1333
00:50:54,319 --> 00:50:56,400
a single item so making it feel more

1334
00:50:56,400 --> 00:50:58,960
like a a standard rest api

1335
00:50:58,960 --> 00:51:00,559
that's a different way of accessing jmob

1336
00:51:00,559 --> 00:51:02,400
data because jmf is very neatly

1337
00:51:02,400 --> 00:51:05,280
separated into objects with ids so

1338
00:51:05,280 --> 00:51:07,119
mapping it to rest might be something

1339
00:51:07,119 --> 00:51:08,720
that's worthwhile as a general document

1340
00:51:08,720 --> 00:51:10,240
whether that's an easier way to do it

1341
00:51:10,240 --> 00:51:12,640
than this

1342
00:51:13,440 --> 00:51:16,079
it seems like a useful thing to have

1343
00:51:16,079 --> 00:51:18,319
okay

1344
00:51:19,760 --> 00:51:21,680
yeah alexi um

1345
00:51:21,680 --> 00:51:23,280
it looks like you're modifying or

1346
00:51:23,280 --> 00:51:24,960
extending things you know to make it

1347
00:51:24,960 --> 00:51:28,000
simple to use for certain cases so

1348
00:51:28,000 --> 00:51:29,920
this should be a document

1349
00:51:29,920 --> 00:51:31,520
whether we choose to publish it now it's

1350
00:51:31,520 --> 00:51:32,880
kind of a separate issue but i think

1351
00:51:32,880 --> 00:51:34,839
there should be a draft

1352
00:51:34,839 --> 00:51:36,800
yeah okay

1353
00:51:36,800 --> 00:51:39,440
um and you know uh bronze idea makes

1354
00:51:39,440 --> 00:51:42,079
sense as well

1355
00:51:42,559 --> 00:51:44,640
all right um

1356
00:51:44,640 --> 00:51:47,040
yeah would they be interested in in

1357
00:51:47,040 --> 00:51:49,440
having this as a draft

1358
00:51:49,440 --> 00:51:52,319
idea in this working group is that

1359
00:51:52,319 --> 00:51:53,680
per charter

1360
00:51:53,680 --> 00:51:56,000
fine or

1361
00:51:56,000 --> 00:51:59,040
yeah by the charter it's fine

1362
00:51:59,040 --> 00:52:00,319
all right

1363
00:52:00,319 --> 00:52:01,440
yeah

1364
00:52:01,440 --> 00:52:03,599
then

1365
00:52:03,599 --> 00:52:05,760
okay

1366
00:52:05,760 --> 00:52:09,040
sounds good i would say

1367
00:52:10,160 --> 00:52:11,119
cool

1368
00:52:11,119 --> 00:52:12,480
um

1369
00:52:12,480 --> 00:52:14,240
i guess publish a draft first and then

1370
00:52:14,240 --> 00:52:16,400
we can do a call for adoption

1371
00:52:16,400 --> 00:52:18,640
maybe publish is informational

1372
00:52:18,640 --> 00:52:22,640
yeah yeah sounds good great

1373
00:52:23,440 --> 00:52:24,800
okay

1374
00:52:24,800 --> 00:52:26,800
so the the next thing

1375
00:52:26,800 --> 00:52:29,440
i hope it's very quick um

1376
00:52:29,440 --> 00:52:32,240
yeah it's basically about preferences is

1377
00:52:32,240 --> 00:52:33,920
some other thing that we did some other

1378
00:52:33,920 --> 00:52:35,680
ideas that we have

1379
00:52:35,680 --> 00:52:36,559
um

1380
00:52:36,559 --> 00:52:39,040
i just wanted to present here just to

1381
00:52:39,040 --> 00:52:41,760
get some to give you some ideas what

1382
00:52:41,760 --> 00:52:44,839
one can do with jmap so

1383
00:52:44,839 --> 00:52:47,440
um grouper preferences

1384
00:52:47,440 --> 00:52:49,119
are

1385
00:52:49,119 --> 00:52:51,040
not very well standardized

1386
00:52:51,040 --> 00:52:52,960
everybody does his own

1387
00:52:52,960 --> 00:52:53,839
thing

1388
00:52:53,839 --> 00:52:55,520
um

1389
00:52:55,520 --> 00:52:58,160
yeah there are

1390
00:52:58,240 --> 00:52:59,200
um

1391
00:52:59,200 --> 00:53:00,720
different

1392
00:53:00,720 --> 00:53:02,240
ways

1393
00:53:02,240 --> 00:53:03,119
like

1394
00:53:03,119 --> 00:53:04,960
they're different dimensions

1395
00:53:04,960 --> 00:53:06,559
even to it so

1396
00:53:06,559 --> 00:53:09,040
they can be in a certain context the

1397
00:53:09,040 --> 00:53:11,280
preferences for example in in out of

1398
00:53:11,280 --> 00:53:14,400
office in a male context or

1399
00:53:14,400 --> 00:53:16,079
for for calendars there there are

1400
00:53:16,079 --> 00:53:18,160
specific preferences that one can have

1401
00:53:18,160 --> 00:53:20,319
but they can also be in a global context

1402
00:53:20,319 --> 00:53:21,839
as well

1403
00:53:21,839 --> 00:53:23,359
um

1404
00:53:23,359 --> 00:53:24,480
and

1405
00:53:24,480 --> 00:53:26,640
there's the second dimension here is

1406
00:53:26,640 --> 00:53:30,319
that preferences can be

1407
00:53:30,960 --> 00:53:32,000
in a

1408
00:53:32,000 --> 00:53:35,359
dedicated data structure

1409
00:53:36,079 --> 00:53:37,760
for example you have an extra object

1410
00:53:37,760 --> 00:53:40,880
like calendar preferences or they can

1411
00:53:40,880 --> 00:53:43,599
reuse other mechanisms that are already

1412
00:53:43,599 --> 00:53:45,119
there for example you can have some

1413
00:53:45,119 --> 00:53:48,800
preferences as sieve filters

1414
00:53:48,800 --> 00:53:50,319
then there are also the third dimension

1415
00:53:50,319 --> 00:53:52,240
is that there's a diff it can be a

1416
00:53:52,240 --> 00:53:54,720
different scope so for example

1417
00:53:54,720 --> 00:53:57,040
preferences can be in the user scope but

1418
00:53:57,040 --> 00:53:59,599
there are also some systems

1419
00:53:59,599 --> 00:54:02,000
where they are an admin scope is what we

1420
00:54:02,000 --> 00:54:04,720
call it uh for example

1421
00:54:04,720 --> 00:54:07,280
some civ rules might be there for a

1422
00:54:07,280 --> 00:54:10,160
certain user but the user actually

1423
00:54:10,160 --> 00:54:12,800
doesn't see them it's it's somewhere on

1424
00:54:12,800 --> 00:54:15,040
the system some admin

1425
00:54:15,040 --> 00:54:17,839
um created those rules or this is

1426
00:54:17,839 --> 00:54:19,280
preferences

1427
00:54:19,280 --> 00:54:21,680
and it's there but

1428
00:54:21,680 --> 00:54:23,599
hidden from the user

1429
00:54:23,599 --> 00:54:26,240
visible to the admin

1430
00:54:26,240 --> 00:54:28,400
that's just about the state right now

1431
00:54:28,400 --> 00:54:30,240
for grouper preferences can you go to

1432
00:54:30,240 --> 00:54:32,799
the next site

1433
00:54:33,119 --> 00:54:34,640
yeah so

1434
00:54:34,640 --> 00:54:35,680
um

1435
00:54:35,680 --> 00:54:37,599
recently we did a project or we

1436
00:54:37,599 --> 00:54:39,200
currently do it do it

1437
00:54:39,200 --> 00:54:41,440
where a vendor wants to expose certain

1438
00:54:41,440 --> 00:54:42,720
settings

1439
00:54:42,720 --> 00:54:43,760
um

1440
00:54:43,760 --> 00:54:46,480
for a big migration

1441
00:54:46,480 --> 00:54:47,599
um

1442
00:54:47,599 --> 00:54:50,400
and here they wanna wanna expose

1443
00:54:50,400 --> 00:54:52,720
allow lists and block lists

1444
00:54:52,720 --> 00:54:54,640
for this we defined

1445
00:54:54,640 --> 00:54:57,920
a new jmf preferences object

1446
00:54:57,920 --> 00:54:59,200
um

1447
00:54:59,200 --> 00:55:02,160
yeah just a normal i don't know normal

1448
00:55:02,160 --> 00:55:04,799
jmap way that you do this by

1449
00:55:04,799 --> 00:55:07,760
having a separate capability

1450
00:55:07,760 --> 00:55:09,119
the link is down there with which

1451
00:55:09,119 --> 00:55:11,520
contains some documentation on it

1452
00:55:11,520 --> 00:55:13,200
and um

1453
00:55:13,200 --> 00:55:15,520
we did this because

1454
00:55:15,520 --> 00:55:16,880
having a

1455
00:55:16,880 --> 00:55:19,040
jammer preferences object

1456
00:55:19,040 --> 00:55:20,400
is

1457
00:55:20,400 --> 00:55:22,559
or we we we did this for this isp

1458
00:55:22,559 --> 00:55:24,880
project because again

1459
00:55:24,880 --> 00:55:27,119
we can use jmap jmap

1460
00:55:27,119 --> 00:55:29,680
is something we already support

1461
00:55:29,680 --> 00:55:31,919
and

1462
00:55:32,160 --> 00:55:33,760
it's something that that we can point

1463
00:55:33,760 --> 00:55:36,240
others to to easily implement

1464
00:55:36,240 --> 00:55:37,200
and

1465
00:55:37,200 --> 00:55:40,000
yeah maybe there's also

1466
00:55:40,000 --> 00:55:42,480
it also is also beneficial for the whole

1467
00:55:42,480 --> 00:55:44,799
ecosystem in general

1468
00:55:44,799 --> 00:55:45,920
so

1469
00:55:45,920 --> 00:55:48,240
the way we currently did this just to

1470
00:55:48,240 --> 00:55:49,280
give you

1471
00:55:49,280 --> 00:55:50,559
um

1472
00:55:50,559 --> 00:55:53,359
some some example what we did or some

1473
00:55:53,359 --> 00:55:55,280
example how you can use jmap

1474
00:55:55,280 --> 00:55:58,799
is uh oh no can you go back sorry

1475
00:55:58,799 --> 00:56:00,400
um so we did

1476
00:56:00,400 --> 00:56:02,160
there's already a kind of preferences

1477
00:56:02,160 --> 00:56:04,079
object for example we just

1478
00:56:04,079 --> 00:56:06,079
have a generic preferences object in

1479
00:56:06,079 --> 00:56:07,839
this case because it's

1480
00:56:07,839 --> 00:56:10,400
about allows and block lists

1481
00:56:10,400 --> 00:56:11,280
is

1482
00:56:11,280 --> 00:56:13,359
a generic kind of thing

1483
00:56:13,359 --> 00:56:15,200
and

1484
00:56:15,200 --> 00:56:17,280
yeah because it's it was very easy for

1485
00:56:17,280 --> 00:56:19,839
our use case right now um

1486
00:56:19,839 --> 00:56:22,319
we have a separate capability for this

1487
00:56:22,319 --> 00:56:25,680
generic preferences object

1488
00:56:25,680 --> 00:56:26,720
that

1489
00:56:26,720 --> 00:56:28,400
you know that extends

1490
00:56:28,400 --> 00:56:31,680
the the general object

1491
00:56:31,680 --> 00:56:32,559
with

1492
00:56:32,559 --> 00:56:34,400
settings so for example with the general

1493
00:56:34,400 --> 00:56:35,839
preferences object

1494
00:56:35,839 --> 00:56:37,599
doesn't have a lot of things

1495
00:56:37,599 --> 00:56:40,160
but then the the preferences

1496
00:56:40,160 --> 00:56:43,680
allow list or block list

1497
00:56:43,680 --> 00:56:45,839
extension gives it

1498
00:56:45,839 --> 00:56:47,520
additional

1499
00:56:47,520 --> 00:56:49,760
attributes that

1500
00:56:49,760 --> 00:56:51,680
yeah that are specific for block lists

1501
00:56:51,680 --> 00:56:53,760
and allows and with that you could

1502
00:56:53,760 --> 00:56:55,760
extend the whole preferences object with

1503
00:56:55,760 --> 00:56:57,280
more and more

1504
00:56:57,280 --> 00:57:00,400
preferences depending on

1505
00:57:00,400 --> 00:57:02,559
the way it it's implemented in each

1506
00:57:02,559 --> 00:57:04,079
system

1507
00:57:04,079 --> 00:57:07,599
okay can you go to the next slide

1508
00:57:07,599 --> 00:57:10,799
yeah why do we do this um

1509
00:57:10,799 --> 00:57:12,640
yeah we want to want to stress the the

1510
00:57:12,640 --> 00:57:14,160
usefulness of

1511
00:57:14,160 --> 00:57:16,559
jmap for uh

1512
00:57:16,559 --> 00:57:19,119
for the data portability use case for

1513
00:57:19,119 --> 00:57:21,280
the the migration use case you can use

1514
00:57:21,280 --> 00:57:23,839
it in a lot of different contexts uh

1515
00:57:23,839 --> 00:57:25,520
contexts

1516
00:57:25,520 --> 00:57:27,839
uh it's easy to extend

1517
00:57:27,839 --> 00:57:28,720
uh

1518
00:57:28,720 --> 00:57:30,720
yeah we are we did this on our own so

1519
00:57:30,720 --> 00:57:33,280
we're interested in some feedback some

1520
00:57:33,280 --> 00:57:34,960
opinions on it

1521
00:57:34,960 --> 00:57:36,079
um

1522
00:57:36,079 --> 00:57:38,079
yeah and i think it's also good to to

1523
00:57:38,079 --> 00:57:39,359
have

1524
00:57:39,359 --> 00:57:42,880
to just to go forward

1525
00:57:42,880 --> 00:57:45,040
standardize a bit

1526
00:57:45,040 --> 00:57:47,839
what preferences should look like

1527
00:57:47,839 --> 00:57:50,720
um to understand them a bit better

1528
00:57:50,720 --> 00:57:52,960
because it's it's currently not very

1529
00:57:52,960 --> 00:57:54,640
well standardized

1530
00:57:54,640 --> 00:57:59,680
and the net the next step is for us is

1531
00:57:59,680 --> 00:58:02,000
also like similar to the migration use

1532
00:58:02,000 --> 00:58:05,040
case is to have some kind of document

1533
00:58:05,040 --> 00:58:07,200
that describes

1534
00:58:07,200 --> 00:58:10,480
what preferences are

1535
00:58:10,720 --> 00:58:13,040
yeah how you could standardize them but

1536
00:58:13,040 --> 00:58:15,920
we're not very confident of

1537
00:58:15,920 --> 00:58:18,240
having that as an rfc yet

1538
00:58:18,240 --> 00:58:20,960
but yeah that's open for discussion

1539
00:58:20,960 --> 00:58:23,839
yeah that's basically it just to share

1540
00:58:23,839 --> 00:58:26,240
some experiences to

1541
00:58:26,240 --> 00:58:28,799
yeah get some feedback

1542
00:58:28,799 --> 00:58:30,480
all right so there are already some

1543
00:58:30,480 --> 00:58:34,240
questions or some remarks on that

1544
00:58:34,640 --> 00:58:36,480
and sasha could you put on your mask

1545
00:58:36,480 --> 00:58:39,480
please

1546
00:58:51,520 --> 00:58:52,960
so

1547
00:58:52,960 --> 00:58:55,680
my point as i understood this particular

1548
00:58:55,680 --> 00:58:59,040
aspect this is largely an implementation

1549
00:58:59,040 --> 00:59:01,680
issue for the implementation to get to

1550
00:59:01,680 --> 00:59:03,920
know what certain preferences are as one

1551
00:59:03,920 --> 00:59:06,640
of your use cases is

1552
00:59:06,640 --> 00:59:09,920
adding the block list or a reject list

1553
00:59:09,920 --> 00:59:12,240
it's a particular mail server to

1554
00:59:12,240 --> 00:59:15,280
at that end to be able to understand

1555
00:59:15,280 --> 00:59:17,200
either what isps to use what ip

1556
00:59:17,200 --> 00:59:19,040
addresses to accept mail from and things

1557
00:59:19,040 --> 00:59:20,799
like that

1558
00:59:20,799 --> 00:59:23,920
so why should it be part of the j map

1559
00:59:23,920 --> 00:59:26,880
first say rather than being an apple

1560
00:59:26,880 --> 00:59:28,799
data that is known to the specific

1561
00:59:28,799 --> 00:59:30,720
implementation per se it may store it in

1562
00:59:30,720 --> 00:59:33,040
the database it may store it as a

1563
00:59:33,040 --> 00:59:35,920
json object it must store whatever for

1564
00:59:35,920 --> 00:59:38,160
properties it needs to store and however

1565
00:59:38,160 --> 00:59:40,000
way it wants to do it without actually

1566
00:59:40,000 --> 00:59:43,040
it being part of a specific

1567
00:59:43,040 --> 00:59:45,119
part of the jmap which is an access

1568
00:59:45,119 --> 00:59:46,720
protocol between the client and the

1569
00:59:46,720 --> 00:59:47,920
servers

1570
00:59:47,920 --> 00:59:50,400
this doesn't really need to if

1571
00:59:50,400 --> 00:59:52,720
that's what my thinking is that the jmap

1572
00:59:52,720 --> 00:59:54,160
server that you are having for example

1573
00:59:54,160 --> 00:59:56,319
your fast mail server it may have

1574
00:59:56,319 --> 00:59:58,240
certain contract configuration

1575
00:59:58,240 --> 00:59:59,760
attributes

1576
00:59:59,760 --> 01:00:01,680
which are dependent on how your

1577
01:00:01,680 --> 01:00:03,520
implement server is particularly being

1578
01:00:03,520 --> 01:00:05,599
implemented rather than being part of a

1579
01:00:05,599 --> 01:00:08,000
protocol specification

1580
01:00:08,000 --> 01:00:09,839
i mean based on what i understand is the

1581
01:00:09,839 --> 01:00:12,640
use case that's what my thought is

1582
01:00:12,640 --> 01:00:13,599
okay

1583
01:00:13,599 --> 01:00:15,280
so you're saying it's out of scope for

1584
01:00:15,280 --> 01:00:16,400
the protocol

1585
01:00:16,400 --> 01:00:17,680
but it's still

1586
01:00:17,680 --> 01:00:19,359
nice to have like uh

1587
01:00:19,359 --> 01:00:21,839
get a deeper understanding and to i

1588
01:00:21,839 --> 01:00:23,200
don't know describe what's out there how

1589
01:00:23,200 --> 01:00:24,319
it can be done

1590
01:00:24,319 --> 01:00:26,880
that's one way of doing it is to do it

1591
01:00:26,880 --> 01:00:28,880
there but i think

1592
01:00:28,880 --> 01:00:31,119
that my my limited understanding so

1593
01:00:31,119 --> 01:00:32,240
excuse me

1594
01:00:32,240 --> 01:00:32,960
no

1595
01:00:32,960 --> 01:00:35,200
makes sense i also said it's uh

1596
01:00:35,200 --> 01:00:36,799
probably more of a best practice

1597
01:00:36,799 --> 01:00:38,559
document than

1598
01:00:38,559 --> 01:00:40,400
part of the protocol

1599
01:00:40,400 --> 01:00:42,319
yeah

1600
01:00:42,319 --> 01:00:44,559
yeah i

1601
01:00:44,559 --> 01:00:46,480
i mean i i think just talking about the

1602
01:00:46,480 --> 01:00:49,359
previous point briefly the

1603
01:00:49,359 --> 01:00:51,200
you know jmat is the protocol but this

1604
01:00:51,200 --> 01:00:52,720
is still data and it's still something

1605
01:00:52,720 --> 01:00:54,400
you want to either synchronize or be

1606
01:00:54,400 --> 01:00:56,319
able to you know send from the client so

1607
01:00:56,319 --> 01:00:57,599
whatever else so that's kind of the

1608
01:00:57,599 --> 01:01:00,319
point of this but as you mentioned

1609
01:01:00,319 --> 01:01:02,240
earlier i don't think there's any kind

1610
01:01:02,240 --> 01:01:03,920
of

1611
01:01:03,920 --> 01:01:05,680
common enough subset that we could

1612
01:01:05,680 --> 01:01:08,240
choose to be worth kind of

1613
01:01:08,240 --> 01:01:12,000
publishing a standard on the data type

1614
01:01:12,000 --> 01:01:16,000
at least i i doubt it um but uh a best

1615
01:01:16,000 --> 01:01:17,599
practice document of if you're creating

1616
01:01:17,599 --> 01:01:19,119
a preferences

1617
01:01:19,119 --> 01:01:20,960
object

1618
01:01:20,960 --> 01:01:22,160
this is the kind of things you should

1619
01:01:22,160 --> 01:01:23,599
consider that sounds pretty reasonable

1620
01:01:23,599 --> 01:01:25,520
to me like we have a bunch of them at

1621
01:01:25,520 --> 01:01:26,960
fast mail kind of like the calendar

1622
01:01:26,960 --> 01:01:29,920
preferences one um but the actual

1623
01:01:29,920 --> 01:01:31,440
data types themselves the specific

1624
01:01:31,440 --> 01:01:33,440
properties like that's just going to be

1625
01:01:33,440 --> 01:01:37,960
quite service specific i suspect mostly

1626
01:01:44,319 --> 01:01:46,400
okay go ahead hans here

1627
01:01:46,400 --> 01:01:49,920
hello can you hear me hear me well

1628
01:01:49,920 --> 01:01:51,040
yeah yeah

1629
01:01:51,040 --> 01:01:54,559
yeah okay great thanks um yeah so um

1630
01:01:54,559 --> 01:01:56,480
i i uh

1631
01:01:56,480 --> 01:01:58,640
i agree which was said previously so i

1632
01:01:58,640 --> 01:02:00,319
think certainly it's the client service

1633
01:02:00,319 --> 01:02:02,000
thing because this is something that is

1634
01:02:02,000 --> 01:02:05,520
that some uh uis and clients do

1635
01:02:05,520 --> 01:02:07,760
manipulate on the server side so it's i

1636
01:02:07,760 --> 01:02:09,440
think certainly something that fits into

1637
01:02:09,440 --> 01:02:11,440
the you know client server interaction

1638
01:02:11,440 --> 01:02:13,200
first of all

1639
01:02:13,200 --> 01:02:15,920
regarding the second point neil said

1640
01:02:15,920 --> 01:02:17,680
i mean it's true that this is certainly

1641
01:02:17,680 --> 01:02:19,119
nothing which is

1642
01:02:19,119 --> 01:02:21,680
the same with every system but that we

1643
01:02:21,680 --> 01:02:22,960
see several

1644
01:02:22,960 --> 01:02:25,039
settings and also allow this blacklist

1645
01:02:25,039 --> 01:02:27,440
as a property which multiple systems

1646
01:02:27,440 --> 01:02:30,160
support in a similar way and as of now

1647
01:02:30,160 --> 01:02:32,240
what we experienced in migration is that

1648
01:02:32,240 --> 01:02:34,480
this is a very big problem because

1649
01:02:34,480 --> 01:02:36,319
there's always a big word to do the

1650
01:02:36,319 --> 01:02:37,520
translation

1651
01:02:37,520 --> 01:02:40,240
and having something like you know a

1652
01:02:40,240 --> 01:02:43,200
best practice reference within jmap um

1653
01:02:43,200 --> 01:02:45,760
would maybe help vendors to adopt a more

1654
01:02:45,760 --> 01:02:47,440
standardized solution and thus in the

1655
01:02:47,440 --> 01:02:48,480
future

1656
01:02:48,480 --> 01:02:50,880
um promotes portability and

1657
01:02:50,880 --> 01:02:52,720
interoperability with respect to those

1658
01:02:52,720 --> 01:02:54,319
settings that might not apply to each

1659
01:02:54,319 --> 01:02:55,760
and every setting but for instance for

1660
01:02:55,760 --> 01:02:57,760
this particular one we made as an

1661
01:02:57,760 --> 01:03:00,319
example here this could well be if this

1662
01:03:00,319 --> 01:03:02,400
needs to be an rc i don't know anyway so

1663
01:03:02,400 --> 01:03:04,319
it can also be a document i'm i agree

1664
01:03:04,319 --> 01:03:06,480
with that but i i don't i would not rule

1665
01:03:06,480 --> 01:03:08,079
out in general that this is something

1666
01:03:08,079 --> 01:03:08,960
that

1667
01:03:08,960 --> 01:03:10,480
might be helpful to standardize a little

1668
01:03:10,480 --> 01:03:12,640
bit

1669
01:03:13,760 --> 01:03:16,720
just regarding block list um

1670
01:03:16,720 --> 01:03:19,520
in you know as a specific example

1671
01:03:19,520 --> 01:03:21,200
i would consider that a separate data

1672
01:03:21,200 --> 01:03:24,640
type like each you know

1673
01:03:24,640 --> 01:03:26,559
item is um

1674
01:03:26,559 --> 01:03:28,240
a block like an email address or a

1675
01:03:28,240 --> 01:03:29,680
domain and that's certainly how we model

1676
01:03:29,680 --> 01:03:31,760
it um because that makes it any you know

1677
01:03:31,760 --> 01:03:33,520
more efficient to add stuff to or to

1678
01:03:33,520 --> 01:03:35,599
remove stuff and to you know resync it

1679
01:03:35,599 --> 01:03:37,440
to another client if you've added a

1680
01:03:37,440 --> 01:03:39,440
you know a blocked address on one client

1681
01:03:39,440 --> 01:03:40,960
and you want to resync another one

1682
01:03:40,960 --> 01:03:42,720
rather than being just like a whole blob

1683
01:03:42,720 --> 01:03:45,839
in your preferences object

1684
01:03:46,079 --> 01:03:47,760
uh maybe what

1685
01:03:47,760 --> 01:03:49,839
can i answer it's okay oh

1686
01:03:49,839 --> 01:03:51,280
are you finished

1687
01:03:51,280 --> 01:03:52,240
sorry

1688
01:03:52,240 --> 01:03:55,200
i didn't want to interrupt you sorry

1689
01:03:55,200 --> 01:03:56,880
i think what we can agree upon are

1690
01:03:56,880 --> 01:03:59,760
concluded at this point is um it might

1691
01:03:59,760 --> 01:04:01,440
might make sense maybe it might make

1692
01:04:01,440 --> 01:04:03,440
sense to um

1693
01:04:03,440 --> 01:04:06,000
work out some more of these settings and

1694
01:04:06,000 --> 01:04:08,000
discuss about them in in more detail at

1695
01:04:08,000 --> 01:04:10,079
a later session maybe and see if there

1696
01:04:10,079 --> 01:04:12,960
is some common ground for that or not

1697
01:04:12,960 --> 01:04:14,720
actually i wouldn't go too much into the

1698
01:04:14,720 --> 01:04:16,160
detail here for that particular

1699
01:04:16,160 --> 01:04:17,920
discussion yeah because that was not the

1700
01:04:17,920 --> 01:04:18,960
intent

1701
01:04:18,960 --> 01:04:20,960
but um i see there might be a good that

1702
01:04:20,960 --> 01:04:22,480
might be a good opportunity at a later

1703
01:04:22,480 --> 01:04:24,480
session to think about more deeply and

1704
01:04:24,480 --> 01:04:26,559
maybe we come with more examples which

1705
01:04:26,559 --> 01:04:29,680
systems use using which fashion

1706
01:04:29,680 --> 01:04:32,000
also gives the time right now

1707
01:04:32,000 --> 01:04:35,119
but thanks for the feedback

1708
01:04:37,119 --> 01:04:38,240
yeah

1709
01:04:38,240 --> 01:04:42,000
i also say thank you for the feedback

1710
01:04:42,000 --> 01:04:45,119
and thank you for listening

1711
01:04:45,760 --> 01:04:47,039
all right thank you

1712
01:04:47,039 --> 01:04:49,520
i think that is we're now at the point

1713
01:04:49,520 --> 01:04:51,599
of uh milestones or any other business

1714
01:04:51,599 --> 01:04:54,319
for the german working group

1715
01:04:54,319 --> 01:04:56,079
what's that do you think oh yeah that's

1716
01:04:56,079 --> 01:04:58,960
extra so i think that might be it for

1717
01:04:58,960 --> 01:05:01,280
jmap any other business for jmap before

1718
01:05:01,280 --> 01:05:04,839
we move on to milestones

1719
01:05:19,839 --> 01:05:22,799
all right here are our existing gem

1720
01:05:22,799 --> 01:05:25,039
milestones

1721
01:05:25,039 --> 01:05:26,079
um

1722
01:05:26,079 --> 01:05:27,760
i figure we may as well just edit them

1723
01:05:27,760 --> 01:05:29,359
directly here

1724
01:05:29,359 --> 01:05:31,920
rather than

1725
01:05:32,960 --> 01:05:34,240
putting it in the notes and having to

1726
01:05:34,240 --> 01:05:37,760
move it otherwise so starting with blobs

1727
01:05:37,760 --> 01:05:40,160
we're obviously moving that along to

1728
01:05:40,160 --> 01:05:42,720
august given that i need to

1729
01:05:42,720 --> 01:05:45,039
update the draft and send it off to my

1730
01:05:45,039 --> 01:05:47,599
co-chair for working group last call

1731
01:05:47,599 --> 01:05:49,839
and then we will hopefully submit this

1732
01:05:49,839 --> 01:05:51,760
finally

1733
01:05:51,760 --> 01:05:53,200
in august

1734
01:05:53,200 --> 01:05:55,359
uh submit civ document i think we agreed

1735
01:05:55,359 --> 01:05:57,200
likewise it will basically be ready to

1736
01:05:57,200 --> 01:05:58,319
go

1737
01:05:58,319 --> 01:06:01,119
straight after this

1738
01:06:03,359 --> 01:06:05,520
there we go august

1739
01:06:05,520 --> 01:06:07,520
jmap calendars is certainly going to be

1740
01:06:07,520 --> 01:06:08,799
later

1741
01:06:08,799 --> 01:06:10,720
so i think we should probably punt that

1742
01:06:10,720 --> 01:06:12,640
to

1743
01:06:12,640 --> 01:06:14,799
do we think we'll get tasks done i guess

1744
01:06:14,799 --> 01:06:15,760
by

1745
01:06:15,760 --> 01:06:18,319
next ietf would be the question there

1746
01:06:18,319 --> 01:06:19,680
because that will if we're going to

1747
01:06:19,680 --> 01:06:22,640
cluster this together

1748
01:06:23,839 --> 01:06:25,839
um is it on

1749
01:06:25,839 --> 01:06:27,680
yeah i don't i don't think the next one

1750
01:06:27,680 --> 01:06:31,119
is already it will be finished by then

1751
01:06:31,119 --> 01:06:32,960
maybe the afternoon

1752
01:06:32,960 --> 01:06:34,400
um

1753
01:06:34,400 --> 01:06:36,720
it's and regarding tasks it's not not

1754
01:06:36,720 --> 01:06:38,720
even on the milestone list yet yeah no

1755
01:06:38,720 --> 01:06:40,079
we'll we'll create one for that in a

1756
01:06:40,079 --> 01:06:42,079
second okay um

1757
01:06:42,079 --> 01:06:44,079
here i'm just putting each club together

1758
01:06:44,079 --> 01:06:45,839
let's see if it's ready and we don't

1759
01:06:45,839 --> 01:06:47,599
think it's going to be a problem we can

1760
01:06:47,599 --> 01:06:48,880
publish it but

1761
01:06:48,880 --> 01:06:51,119
that's him yeah i guess

1762
01:06:51,119 --> 01:06:52,559
i'll just move it to december for now

1763
01:06:52,559 --> 01:06:53,680
then

1764
01:06:53,680 --> 01:06:54,960
yeah

1765
01:06:54,960 --> 01:06:57,520
uh quotas we think is basically ready to

1766
01:06:57,520 --> 01:06:59,440
go so that will be

1767
01:06:59,440 --> 01:07:02,240
august as well

1768
01:07:02,559 --> 01:07:06,079
s my sender extensions

1769
01:07:11,760 --> 01:07:13,440
october

1770
01:07:13,440 --> 01:07:16,720
uh gem up address books we're not we've

1771
01:07:16,720 --> 01:07:18,880
got that ready to be adopted in november

1772
01:07:18,880 --> 01:07:21,039
so

1773
01:07:24,319 --> 01:07:26,960
that was four thousand

1774
01:07:26,960 --> 01:07:29,839
months calendars is probably done

1775
01:07:29,839 --> 01:07:32,319
and js contact

1776
01:07:32,319 --> 01:07:34,160
js contact's the biggest hold up on that

1777
01:07:34,160 --> 01:07:35,760
robert wins do you think they'll be

1778
01:07:35,760 --> 01:07:38,079
finished

1779
01:07:38,640 --> 01:07:41,119
we want to publish cs contact before or

1780
01:07:41,119 --> 01:07:43,440
the latest at next itf

1781
01:07:43,440 --> 01:07:46,720
yeah so adjusting it next year

1782
01:07:46,720 --> 01:07:48,160
yeah

1783
01:07:48,160 --> 01:07:50,160
cool

1784
01:07:50,160 --> 01:07:52,079
all right um so let's add some more

1785
01:07:52,079 --> 01:07:53,280
milestones

1786
01:07:53,280 --> 01:07:54,799
we say

1787
01:07:54,799 --> 01:07:57,599
submit js

1788
01:07:57,599 --> 01:08:00,480
general tasks

1789
01:08:00,480 --> 01:08:03,359
document asg and we said that is

1790
01:08:03,359 --> 01:08:05,599
probably going to be

1791
01:08:05,599 --> 01:08:09,240
early next year

1792
01:08:10,640 --> 01:08:11,760
well if

1793
01:08:11,760 --> 01:08:14,319
if addresses are ready before

1794
01:08:14,319 --> 01:08:16,640
if addresses are ready before um we

1795
01:08:16,640 --> 01:08:18,080
don't necessarily have to wait for the

1796
01:08:18,080 --> 01:08:20,960
next ietf to do the call for adoption we

1797
01:08:20,960 --> 01:08:25,839
can do that on the list so let us know

1798
01:08:27,759 --> 01:08:28,640
yeah

1799
01:08:28,640 --> 01:08:30,238
it's nice when it happens

1800
01:08:30,238 --> 01:08:32,080
all right so tasks i've got one ready

1801
01:08:32,080 --> 01:08:33,920
for that to go in there

1802
01:08:33,920 --> 01:08:36,238
what else did we have

1803
01:08:36,238 --> 01:08:39,279
that we had said so sharing that we

1804
01:08:39,279 --> 01:08:40,319
don't have

1805
01:08:40,319 --> 01:08:42,238
a milestone for sharing i'll create a

1806
01:08:42,238 --> 01:08:44,640
separate milestone for that

1807
01:08:44,640 --> 01:08:45,520
um

1808
01:08:45,520 --> 01:08:47,120
and i don't think we had a milestone

1809
01:08:47,120 --> 01:08:48,640
well yeah we've got sev

1810
01:08:48,640 --> 01:08:51,120
we've got tasks we've got blob we've got

1811
01:08:51,120 --> 01:08:53,759
quotas that might be it then

1812
01:08:53,759 --> 01:08:58,238
um and this other work is going to be

1813
01:09:00,158 --> 01:09:02,640
do we want a milestone for

1814
01:09:02,640 --> 01:09:04,960
the migration and portability dock or we

1815
01:09:04,960 --> 01:09:07,120
just do a call for adoption and then add

1816
01:09:07,120 --> 01:09:11,040
a milestone for it if at that point

1817
01:09:11,040 --> 01:09:12,719
yeah i think we let's do a call for

1818
01:09:12,719 --> 01:09:15,839
adoption first and then cool

1819
01:09:15,839 --> 01:09:19,479
all right so

1820
01:09:23,839 --> 01:09:26,640
sg and so to the gmap sharing document

1821
01:09:26,640 --> 01:09:28,479
as well and that will put in december

1822
01:09:28,479 --> 01:09:32,040
along with calendars

1823
01:09:46,000 --> 01:09:47,359
so we've got

1824
01:09:47,359 --> 01:09:50,080
two changed four change dates

1825
01:09:50,080 --> 01:09:53,279
two additional milestones

1826
01:09:53,279 --> 01:09:56,640
done there we go

1827
01:09:58,239 --> 01:09:59,120
uh

1828
01:09:59,120 --> 01:10:03,239
for this it is murray

1829
01:10:08,320 --> 01:10:10,719
all right uh jm milestones completed

1830
01:10:10,719 --> 01:10:12,719
thank you everybody that's the end of

1831
01:10:12,719 --> 01:10:14,800
the jmap section of this meeting and

1832
01:10:14,800 --> 01:10:18,400
we'll move on to the extra section

1833
01:10:18,400 --> 01:10:20,640
thanks jim

1834
01:10:20,640 --> 01:10:23,840
i'll unshare my screen

1835
01:10:23,840 --> 01:10:27,920
go back to the agenda slides

1836
01:10:29,199 --> 01:10:31,040
so this is our current agenda for the

1837
01:10:31,040 --> 01:10:32,960
extra section of this meeting

1838
01:10:32,960 --> 01:10:35,120
any agenda bashing before we move

1839
01:10:35,120 --> 01:10:37,600
straight on

1840
01:10:37,600 --> 01:10:39,520
you've already been noteworld keep

1841
01:10:39,520 --> 01:10:40,880
noting it

1842
01:10:40,880 --> 01:10:42,320
alexi

1843
01:10:42,320 --> 01:10:44,239
i've got you first i'm at partial i

1844
01:10:44,239 --> 01:10:47,839
think i gave you more time than you need

1845
01:10:52,080 --> 01:10:54,000
yes i rejected doing slides because

1846
01:10:54,000 --> 01:10:55,920
there is nothing new to report i think

1847
01:10:55,920 --> 01:10:58,400
you said it it will be sent to like to

1848
01:10:58,400 --> 01:11:00,880
working through plus call

1849
01:11:00,880 --> 01:11:03,840
yeah so sharing oh sorry i'm at partial

1850
01:11:03,840 --> 01:11:06,080
i will send to working group last call

1851
01:11:06,080 --> 01:11:07,360
straight away straight after this

1852
01:11:07,360 --> 01:11:10,559
meeting sounds good

1853
01:11:11,040 --> 01:11:14,000
does anyone have any objections comments

1854
01:11:14,000 --> 01:11:16,159
etc before we move on anything you want

1855
01:11:16,159 --> 01:11:19,519
to talk about for imac partial

1856
01:11:21,600 --> 01:11:23,440
it's the fastest 10 minutes in existence

1857
01:11:23,440 --> 01:11:26,678
thanks alexi

1858
01:11:26,880 --> 01:11:29,280
next on this list

1859
01:11:29,280 --> 01:11:32,400
process i'm it ken

1860
01:11:38,880 --> 01:11:40,560
not much to say on this one

1861
01:11:40,560 --> 01:11:41,760
um

1862
01:11:41,760 --> 01:11:44,000
it's in production at fast mail seems to

1863
01:11:44,000 --> 01:11:45,120
do

1864
01:11:45,120 --> 01:11:46,400
do the job

1865
01:11:46,400 --> 01:11:48,320
um i'm not sure how many people have

1866
01:11:48,320 --> 01:11:49,679
actually read it but

1867
01:11:49,679 --> 01:11:51,679
maybe working last call would get some

1868
01:11:51,679 --> 01:11:53,440
reviews

1869
01:11:53,440 --> 01:11:55,600
unfortunately with the passing of ned

1870
01:11:55,600 --> 01:11:57,920
freed we've lost one of our

1871
01:11:57,920 --> 01:12:00,000
big civ reviewers so we need to pick up

1872
01:12:00,000 --> 01:12:02,480
the slack

1873
01:12:03,199 --> 01:12:05,280
should you snooze at the same time

1874
01:12:05,280 --> 01:12:06,719
sure pretty much the same story with

1875
01:12:06,719 --> 01:12:08,480
snooze again

1876
01:12:08,480 --> 01:12:10,400
in production works

1877
01:12:10,400 --> 01:12:12,880
i think we've had a couple reviews on it

1878
01:12:12,880 --> 01:12:14,640
but as far as i'm

1879
01:12:14,640 --> 01:12:16,719
concerned it's fully baked and ready to

1880
01:12:16,719 --> 01:12:19,760
go to the last call

1881
01:12:20,000 --> 01:12:21,440
dale

1882
01:12:21,440 --> 01:12:24,159
yeah just um on the process i'm at draft

1883
01:12:24,159 --> 01:12:26,480
i read that um

1884
01:12:26,480 --> 01:12:28,560
it refers to a calendar id but there's

1885
01:12:28,560 --> 01:12:29,920
no

1886
01:12:29,920 --> 01:12:31,760
information at all about what the scope

1887
01:12:31,760 --> 01:12:33,360
of that is or where when we're getting

1888
01:12:33,360 --> 01:12:37,839
calendar id or what a calendar id is

1889
01:12:39,440 --> 01:12:41,040
i mean i know what we use for calendar

1890
01:12:41,040 --> 01:12:42,719
id but i'm saying from the draft i would

1891
01:12:42,719 --> 01:12:45,440
have absolutely no idea of

1892
01:12:45,440 --> 01:12:47,199
what this calendar id is i'm trying to

1893
01:12:47,199 --> 01:12:50,239
get and where to get it

1894
01:12:50,239 --> 01:12:53,280
yeah it's uh it's a good point it's kind

1895
01:12:53,280 --> 01:12:53,920
of

1896
01:12:53,920 --> 01:12:57,199
outside the scope though because it's

1897
01:12:57,199 --> 01:12:59,199
maybe but like

1898
01:12:59,199 --> 01:13:01,440
you need something i felt like

1899
01:13:01,440 --> 01:13:02,640
yeah okay

1900
01:13:02,640 --> 01:13:06,159
thanks jim that's fine all right i'll uh

1901
01:13:06,159 --> 01:13:07,920
i'll add some text to that

1902
01:13:07,920 --> 01:13:11,920
and uh then perhaps we go to last call

1903
01:13:11,920 --> 01:13:14,159
thank you

1904
01:13:14,880 --> 01:13:16,480
so it's uh

1905
01:13:16,480 --> 01:13:17,920
updated draft and then work and grip

1906
01:13:17,920 --> 01:13:20,400
last call

1907
01:13:20,880 --> 01:13:22,880
cool and for snooze did anyone have

1908
01:13:22,880 --> 01:13:25,199
anything to add for snooze otherwise

1909
01:13:25,199 --> 01:13:26,880
we'll send that to working group last

1910
01:13:26,880 --> 01:13:30,199
call as well

1911
01:13:33,120 --> 01:13:35,440
excellent

1912
01:13:35,440 --> 01:13:38,800
uh next on our agenda

1913
01:13:38,800 --> 01:13:41,040
where is our agenda just a quick comment

1914
01:13:41,040 --> 01:13:42,000
i mean

1915
01:13:42,000 --> 01:13:43,440
it looks like we're going to have like

1916
01:13:43,440 --> 01:13:45,679
four documents ready for last call

1917
01:13:45,679 --> 01:13:47,650
almost simultaneously

1918
01:13:47,650 --> 01:13:48,880
[Music]

1919
01:13:48,880 --> 01:13:50,800
i think they all should go into last

1920
01:13:50,800 --> 01:13:52,400
call but if you can stagger them so

1921
01:13:52,400 --> 01:13:54,159
there is no more than two documents at a

1922
01:13:54,159 --> 01:13:55,679
time ideally

1923
01:13:55,679 --> 01:13:58,560
or at least you know

1924
01:13:59,040 --> 01:14:00,800
give them an extra week you know to

1925
01:14:00,800 --> 01:14:03,520
start or something

1926
01:14:09,440 --> 01:14:12,480
yeah this is this is barry i i would say

1927
01:14:12,480 --> 01:14:14,320
give them extra time but put them all

1928
01:14:14,320 --> 01:14:16,320
out at the same time don't artificially

1929
01:14:16,320 --> 01:14:18,239
spread them out just give us more time

1930
01:14:18,239 --> 01:14:20,480
to get them done

1931
01:14:20,480 --> 01:14:21,679
what

1932
01:14:21,679 --> 01:14:24,679
yes

1933
01:14:30,480 --> 01:14:32,080
thankfully they're all fairly short

1934
01:14:32,080 --> 01:14:33,199
documents

1935
01:14:33,199 --> 01:14:34,159
so

1936
01:14:34,159 --> 01:14:36,799
that will help a

1937
01:14:40,840 --> 01:14:43,280
bit all right

1938
01:14:43,280 --> 01:14:46,480
back to the agenda

1939
01:14:47,440 --> 01:14:49,440
uh civ registry was the other thing that

1940
01:14:49,440 --> 01:14:51,120
we had

1941
01:14:51,120 --> 01:14:54,840
on this list alexi

1942
01:14:58,400 --> 01:15:00,560
i think save register is ready as well

1943
01:15:00,560 --> 01:15:01,520
right

1944
01:15:01,520 --> 01:15:03,600
i'm looking at ken who is my

1945
01:15:03,600 --> 01:15:06,480
creditor now

1946
01:15:07,199 --> 01:15:08,880
at least we couldn't think of anything

1947
01:15:08,880 --> 01:15:10,800
that was missing so at this point i

1948
01:15:10,800 --> 01:15:13,760
think we need reviews

1949
01:15:15,120 --> 01:15:17,199
all right i guess that's another

1950
01:15:17,199 --> 01:15:21,199
document for work group last call

1951
01:15:21,920 --> 01:15:24,000
and in a way i mean this one is slightly

1952
01:15:24,000 --> 01:15:26,239
weird because it's more mechanical

1953
01:15:26,239 --> 01:15:28,400
so if somebody can try to double check

1954
01:15:28,400 --> 01:15:29,520
the data

1955
01:15:29,520 --> 01:15:32,080
but uh

1956
01:15:34,000 --> 01:15:35,520
this is kenny i

1957
01:15:35,520 --> 01:15:38,159
i think we've covered everything uh and

1958
01:15:38,159 --> 01:15:39,760
just as a

1959
01:15:39,760 --> 01:15:41,120
point of reference

1960
01:15:41,120 --> 01:15:42,480
i added

1961
01:15:42,480 --> 01:15:44,480
in this in this news draft

1962
01:15:44,480 --> 01:15:46,560
i added an entry for the registry so

1963
01:15:46,560 --> 01:15:48,640
presumably they will either go together

1964
01:15:48,640 --> 01:15:50,080
or the registry goes first and then

1965
01:15:50,080 --> 01:15:53,400
snooze follows

1966
01:15:59,840 --> 01:16:00,719
cool

1967
01:16:00,719 --> 01:16:02,880
awesome all right we're on to the new

1968
01:16:02,880 --> 01:16:06,840
work so rick

1969
01:16:11,040 --> 01:16:14,560
see if i remember what's on my slides

1970
01:16:14,880 --> 01:16:16,880
okay yeah so this is uh snoozing the

1971
01:16:16,880 --> 01:16:18,960
imap i think uh

1972
01:16:18,960 --> 01:16:20,239
the idea of this feature is probably

1973
01:16:20,239 --> 01:16:21,600
well understood at this point uh

1974
01:16:21,600 --> 01:16:23,360
especially since ken was talking about

1975
01:16:23,360 --> 01:16:24,320
sieve

1976
01:16:24,320 --> 01:16:25,280
via

1977
01:16:25,280 --> 01:16:26,159
uh

1978
01:16:26,159 --> 01:16:28,000
the snooze via sieve this is if you got

1979
01:16:28,000 --> 01:16:29,600
a message in a mailbox and you want to

1980
01:16:29,600 --> 01:16:31,600
hide it away until some future time it's

1981
01:16:31,600 --> 01:16:33,440
present in a bunch of clients and just a

1982
01:16:33,440 --> 01:16:36,879
few servers next slide

1983
01:16:39,199 --> 01:16:40,560
so

1984
01:16:40,560 --> 01:16:42,400
what you see in servers and clients

1985
01:16:42,400 --> 01:16:44,080
implement this is you take a message and

1986
01:16:44,080 --> 01:16:45,520
you say i don't want to think about this

1987
01:16:45,520 --> 01:16:47,440
message for some period of time the

1988
01:16:47,440 --> 01:16:49,679
message vanishes from your view unless

1989
01:16:49,679 --> 01:16:51,600
you go looking for it and when that time

1990
01:16:51,600 --> 01:16:53,600
expires the message comes back

1991
01:16:53,600 --> 01:16:55,920
and i've seen this implemented in

1992
01:16:55,920 --> 01:16:57,679
half a dozen clients in two or three

1993
01:16:57,679 --> 01:16:59,040
major servers

1994
01:16:59,040 --> 01:17:02,040
next

1995
01:17:02,880 --> 01:17:05,920
so this is a basic proposed command this

1996
01:17:05,920 --> 01:17:08,239
command is built on top of the jmap

1997
01:17:08,239 --> 01:17:10,800
semantics for snooze uh which i realized

1998
01:17:10,800 --> 01:17:12,719
today we have never brought up but they

1999
01:17:12,719 --> 01:17:15,760
are implemented by fast mail

2000
01:17:15,760 --> 01:17:18,080
the idea is this you take a message and

2001
01:17:18,080 --> 01:17:20,000
you snooze it which moves the message

2002
01:17:20,000 --> 01:17:22,719
using move semantics into a snooze

2003
01:17:22,719 --> 01:17:24,400
mailbox this is a new special use

2004
01:17:24,400 --> 01:17:25,440
mailbox

2005
01:17:25,440 --> 01:17:27,600
when the message is there it's picked up

2006
01:17:27,600 --> 01:17:29,440
three new data items on the message and

2007
01:17:29,440 --> 01:17:32,239
those are the awaken to awaken flags and

2008
01:17:32,239 --> 01:17:33,600
awaken at

2009
01:17:33,600 --> 01:17:35,600
this tells you when the message stops

2010
01:17:35,600 --> 01:17:38,239
snoozing where will it be put how will

2011
01:17:38,239 --> 01:17:40,960
its flags change and when does that

2012
01:17:40,960 --> 01:17:42,080
happen

2013
01:17:42,080 --> 01:17:44,640
if you snooze it uh from any mailbox

2014
01:17:44,640 --> 01:17:46,960
other than snoozed it will awaken to

2015
01:17:46,960 --> 01:17:49,120
wherever you snooze it from and if you

2016
01:17:49,120 --> 01:17:50,960
snooze it from snooze you just leave it

2017
01:17:50,960 --> 01:17:52,880
awakening to the same place

2018
01:17:52,880 --> 01:17:54,000
this is

2019
01:17:54,000 --> 01:17:55,600
these are broad strokes of how i think

2020
01:17:55,600 --> 01:17:57,120
we can implement this based on what

2021
01:17:57,120 --> 01:17:58,800
we're already doing at fast mail what

2022
01:17:58,800 --> 01:18:00,640
i've seen other places but i think if we

2023
01:18:00,640 --> 01:18:02,480
have significant feedback on how other

2024
01:18:02,480 --> 01:18:04,880
people need or want this to work that's

2025
01:18:04,880 --> 01:18:06,400
that's why we're bringing this up next

2026
01:18:06,400 --> 01:18:08,639
slide

2027
01:18:10,719 --> 01:18:12,719
right i've covered this this is what we

2028
01:18:12,719 --> 01:18:14,960
do with it uh if you can't unsnooze it

2029
01:18:14,960 --> 01:18:17,440
to the uh predefined mailbox it goes to

2030
01:18:17,440 --> 01:18:20,000
inbox but hopefully that never happens

2031
01:18:20,000 --> 01:18:22,320
next

2032
01:18:24,800 --> 01:18:26,560
we also uh

2033
01:18:26,560 --> 01:18:28,480
yeah

2034
01:18:28,480 --> 01:18:30,719
cover that too yeah well okay so one

2035
01:18:30,719 --> 01:18:32,960
thing i'll throw in here we use flags

2036
01:18:32,960 --> 01:18:35,600
i'll talk about why uh when we snooze

2037
01:18:35,600 --> 01:18:38,159
and unsnooze these messages you just get

2038
01:18:38,159 --> 01:18:40,880
a list of flag changes to make when it

2039
01:18:40,880 --> 01:18:42,159
wakes up

2040
01:18:42,159 --> 01:18:44,640
this is uh

2041
01:18:44,640 --> 01:18:46,560
this is supposed to talk about unsnooze

2042
01:18:46,560 --> 01:18:47,840
i believe i think i've got some typo on

2043
01:18:47,840 --> 01:18:49,360
my slide here

2044
01:18:49,360 --> 01:18:51,600
when you unsnooze a message right you're

2045
01:18:51,600 --> 01:18:53,199
saying cancel the snooze i'm ready to

2046
01:18:53,199 --> 01:18:55,120
deal with it early what do we want to do

2047
01:18:55,120 --> 01:18:57,040
with the awaken flags

2048
01:18:57,040 --> 01:18:59,280
the semantics i put in here are we clear

2049
01:18:59,280 --> 01:19:01,920
them we don't add the ad flags we don't

2050
01:19:01,920 --> 01:19:04,800
remove the remove flags

2051
01:19:04,800 --> 01:19:06,080
we'll have to see what we actually want

2052
01:19:06,080 --> 01:19:09,640
on this next slide

2053
01:19:10,480 --> 01:19:13,920
the snoozed mailbox is uh it's read-only

2054
01:19:13,920 --> 01:19:16,080
you can't put mail in it except via

2055
01:19:16,080 --> 01:19:18,080
snooze you can't remove mail from it

2056
01:19:18,080 --> 01:19:20,840
except via unsnooze and we create it as

2057
01:19:20,840 --> 01:19:22,560
needed

2058
01:19:22,560 --> 01:19:24,560
this is not the same design we see in

2059
01:19:24,560 --> 01:19:25,920
every implementation there are

2060
01:19:25,920 --> 01:19:28,000
implementations that leave the message

2061
01:19:28,000 --> 01:19:30,640
in the current mailbox and we'll flag

2062
01:19:30,640 --> 01:19:32,719
the message with the flag or we'll give

2063
01:19:32,719 --> 01:19:34,400
it some other metadata to indicate that

2064
01:19:34,400 --> 01:19:36,719
it's been snoozed or implementations

2065
01:19:36,719 --> 01:19:38,480
that put the message into the snooze

2066
01:19:38,480 --> 01:19:41,440
mailbox to snooze it and to unsnooze it

2067
01:19:41,440 --> 01:19:43,920
remove it from the mailbox but if you're

2068
01:19:43,920 --> 01:19:46,640
using move to implement snoozing

2069
01:19:46,640 --> 01:19:48,320
you're losing the ability to enforce

2070
01:19:48,320 --> 01:19:50,080
that the metadata has been set correctly

2071
01:19:50,080 --> 01:19:51,440
which is why we're proposing a separate

2072
01:19:51,440 --> 01:19:53,199
verb rick we have some people in the

2073
01:19:53,199 --> 01:19:54,320
queue do you want to take them now right

2074
01:19:54,320 --> 01:19:55,600
now yes thanks i can't see them on the

2075
01:19:55,600 --> 01:19:57,679
screen i'm looking at uh yeah uh neil i

2076
01:19:57,679 --> 01:20:00,800
think you're up first cool

2077
01:20:00,800 --> 01:20:03,199
um yeah

2078
01:20:03,199 --> 01:20:05,520
so it didn't look like you currently

2079
01:20:05,520 --> 01:20:07,920
have any way of specifying the folder to

2080
01:20:07,920 --> 01:20:09,840
return to other than

2081
01:20:09,840 --> 01:20:11,360
like implicitly it's like wherever i

2082
01:20:11,360 --> 01:20:12,880
snoozed it from

2083
01:20:12,880 --> 01:20:14,159
um

2084
01:20:14,159 --> 01:20:15,120
we

2085
01:20:15,120 --> 01:20:17,360
actually do use both because in labels

2086
01:20:17,360 --> 01:20:19,840
mode it always snoozes um

2087
01:20:19,840 --> 01:20:21,679
from the inbox and returns back to the

2088
01:20:21,679 --> 01:20:23,040
inbox

2089
01:20:23,040 --> 01:20:25,520
regardless of where you choose from

2090
01:20:25,520 --> 01:20:26,800
that'd be great now you want to add that

2091
01:20:26,800 --> 01:20:28,239
here too

2092
01:20:28,239 --> 01:20:29,760
yeah we can add that the reason it's not

2093
01:20:29,760 --> 01:20:31,199
there is this started as what's the

2094
01:20:31,199 --> 01:20:33,120
simplest version of this we could expose

2095
01:20:33,120 --> 01:20:34,800
privately and as we bring it to this

2096
01:20:34,800 --> 01:20:35,920
room it's

2097
01:20:35,920 --> 01:20:37,360
what could everybody else possibly want

2098
01:20:37,360 --> 01:20:39,440
i'll stick that in the in the notes

2099
01:20:39,440 --> 01:20:40,880
i think the default you know it should

2100
01:20:40,880 --> 01:20:42,159
be optional if you don't split back to

2101
01:20:42,159 --> 01:20:43,679
the mailbox it came from makes perfect

2102
01:20:43,679 --> 01:20:45,920
sense

2103
01:20:48,159 --> 01:20:51,199
phillip yeah phil handbaker yeah uh have

2104
01:20:51,199 --> 01:20:53,199
you considered the interaction of this

2105
01:20:53,199 --> 01:20:56,320
with tasks and when i'm

2106
01:20:56,320 --> 01:20:57,840
when i'm using this sort of

2107
01:20:57,840 --> 01:20:59,199
functionality

2108
01:20:59,199 --> 01:21:01,120
it's really because i want to create a

2109
01:21:01,120 --> 01:21:03,440
task for myself later on

2110
01:21:03,440 --> 01:21:04,320
and

2111
01:21:04,320 --> 01:21:06,400
my client doesn't support that so it

2112
01:21:06,400 --> 01:21:08,320
might be worth thinking about the two

2113
01:21:08,320 --> 01:21:09,760
together

2114
01:21:09,760 --> 01:21:11,199
uh

2115
01:21:11,199 --> 01:21:12,960
yeah i mean i think the answer i can

2116
01:21:12,960 --> 01:21:14,560
give you on that uh thinking about this

2117
01:21:14,560 --> 01:21:18,080
and with respect to tasks is as a as a

2118
01:21:18,080 --> 01:21:19,920
individual human i have daydreamed about

2119
01:21:19,920 --> 01:21:21,440
how i would use that but we haven't done

2120
01:21:21,440 --> 01:21:23,199
any serious protocol discussion of it

2121
01:21:23,199 --> 01:21:24,560
and uh we can bring that up on the list

2122
01:21:24,560 --> 01:21:28,360
how we might do something

2123
01:21:29,920 --> 01:21:32,080
um yeah uh thanks rick that's

2124
01:21:32,080 --> 01:21:33,600
interesting but i have couple of

2125
01:21:33,600 --> 01:21:34,880
questions i'm not sure if some of them

2126
01:21:34,880 --> 01:21:37,040
might be answered in following slides so

2127
01:21:37,040 --> 01:21:39,120
interrupt me maybe if i'm asking

2128
01:21:39,120 --> 01:21:41,199
something stupid which you will explain

2129
01:21:41,199 --> 01:21:43,760
anyway so a very minor question is so

2130
01:21:43,760 --> 01:21:45,760
how does it interact with a recent flag

2131
01:21:45,760 --> 01:21:47,840
so because you know clients use that

2132
01:21:47,840 --> 01:21:50,320
already as a kind of you know to denote

2133
01:21:50,320 --> 01:21:51,280
uh

2134
01:21:51,280 --> 01:21:53,280
some message that's fresh on the server

2135
01:21:53,280 --> 01:21:55,120
will this reactivate reason until

2136
01:21:55,120 --> 01:21:56,800
unsnoozed or not

2137
01:21:56,800 --> 01:21:57,679
um

2138
01:21:57,679 --> 01:21:59,280
then what's not quite clear for me is

2139
01:21:59,280 --> 01:22:02,000
the client is who is doing this news

2140
01:22:02,000 --> 01:22:04,159
interaction so i understand that somehow

2141
01:22:04,159 --> 01:22:06,000
the server implements that snooze

2142
01:22:06,000 --> 01:22:08,159
mechanism the moving out of the smooth

2143
01:22:08,159 --> 01:22:09,040
states

2144
01:22:09,040 --> 01:22:11,280
when the date has been passed and so on

2145
01:22:11,280 --> 01:22:12,880
but it's actually the clients that need

2146
01:22:12,880 --> 01:22:14,320
to be

2147
01:22:14,320 --> 01:22:16,560
taking action i guess so i wonder a

2148
01:22:16,560 --> 01:22:18,480
little bit how that kind of it's how it

2149
01:22:18,480 --> 01:22:20,880
ensured that once the server moves the

2150
01:22:20,880 --> 01:22:23,760
message back in the unsmooth states

2151
01:22:23,760 --> 01:22:25,360
you know what is the client's respect

2152
01:22:25,360 --> 01:22:27,120
expected to do

2153
01:22:27,120 --> 01:22:28,880
and third question if you can still take

2154
01:22:28,880 --> 01:22:31,360
one is you say it's not allowed to

2155
01:22:31,360 --> 01:22:33,360
append messages to that news mailbox so

2156
01:22:33,360 --> 01:22:35,199
i wonder about what is about migration

2157
01:22:35,199 --> 01:22:37,520
here so if we migrate a mailbox which

2158
01:22:37,520 --> 01:22:40,000
has this feature we might need to

2159
01:22:40,000 --> 01:22:42,239
migrate messages which are the smooth

2160
01:22:42,239 --> 01:22:43,440
state

2161
01:22:43,440 --> 01:22:45,280
into a new destination system so this

2162
01:22:45,280 --> 01:22:48,880
would require append actually properly

2163
01:22:48,960 --> 01:22:50,880
okay first let me apologize the audio

2164
01:22:50,880 --> 01:22:53,120
quality in here is not perfect i may

2165
01:22:53,120 --> 01:22:54,960
have missed some of your question um as

2166
01:22:54,960 --> 01:22:57,120
regards to what is the client expected

2167
01:22:57,120 --> 01:22:57,920
to do

2168
01:22:57,920 --> 01:22:59,840
this does come up a bit later but the

2169
01:22:59,840 --> 01:23:02,000
short answer is the client is simply

2170
01:23:02,000 --> 01:23:03,760
expected to show the user that the

2171
01:23:03,760 --> 01:23:05,440
message has returned to its previous

2172
01:23:05,440 --> 01:23:08,320
state uh so this means number one the

2173
01:23:08,320 --> 01:23:10,239
message is back in its awakened to

2174
01:23:10,239 --> 01:23:12,960
mailbox and number two uh what we do at

2175
01:23:12,960 --> 01:23:15,600
fast mail with the flags is we use a

2176
01:23:15,600 --> 01:23:18,480
flag to indicate that a message it has

2177
01:23:18,480 --> 01:23:20,880
entered that mailbox by awakening from

2178
01:23:20,880 --> 01:23:23,440
snooze and then it uh it will display

2179
01:23:23,440 --> 01:23:24,960
differently i think a convention on that

2180
01:23:24,960 --> 01:23:27,679
would be useful but not necessary

2181
01:23:27,679 --> 01:23:29,280
i do think it's important to talk about

2182
01:23:29,280 --> 01:23:30,400
this being

2183
01:23:30,400 --> 01:23:32,800
a server function to awaken the message

2184
01:23:32,800 --> 01:23:34,480
because you would like your message to

2185
01:23:34,480 --> 01:23:37,120
awaken no matter whether no matter which

2186
01:23:37,120 --> 01:23:38,719
client you are using and you don't you

2187
01:23:38,719 --> 01:23:40,560
don't want your mail client to have to

2188
01:23:40,560 --> 01:23:42,719
awaken it if you're using a not snooze

2189
01:23:42,719 --> 01:23:44,239
capable client to read your mail when

2190
01:23:44,239 --> 01:23:46,840
you snooze it from one that can

2191
01:23:46,840 --> 01:23:50,239
um as for migration i don't

2192
01:23:50,239 --> 01:23:51,760
it's not a question i've thought about i

2193
01:23:51,760 --> 01:23:53,280
don't have a great answer i think the

2194
01:23:53,280 --> 01:23:54,880
simple one is you would migrate the

2195
01:23:54,880 --> 01:23:57,040
message to its awakening target and

2196
01:23:57,040 --> 01:23:59,679
snooze it then uh it would get the job

2197
01:23:59,679 --> 01:24:03,840
done even though it's a little silly

2198
01:24:05,120 --> 01:24:06,800
okay uh

2199
01:24:06,800 --> 01:24:08,880
barry

2200
01:24:08,880 --> 01:24:11,760
hi this is barry liba um

2201
01:24:11,760 --> 01:24:14,000
so i i haven't read the draft yet so

2202
01:24:14,000 --> 01:24:15,199
this is a question there's no draft

2203
01:24:15,199 --> 01:24:17,840
there's only slides okay oh okay

2204
01:24:17,840 --> 01:24:18,719
um

2205
01:24:18,719 --> 01:24:21,120
the question is about uh the use of the

2206
01:24:21,120 --> 01:24:23,520
special use mailbox the the user may not

2207
01:24:23,520 --> 01:24:26,159
move mail out of this mailbox

2208
01:24:26,159 --> 01:24:27,600
that's

2209
01:24:27,600 --> 01:24:29,679
as far as i can remember unique at this

2210
01:24:29,679 --> 01:24:32,159
point the special use mailboxes are like

2211
01:24:32,159 --> 01:24:33,840
every other mailbox except they're used

2212
01:24:33,840 --> 01:24:36,080
for certain other things

2213
01:24:36,080 --> 01:24:37,760
we don't have a case where you're not

2214
01:24:37,760 --> 01:24:39,679
allowed to put something in there with a

2215
01:24:39,679 --> 01:24:41,840
move command or a copy command or you're

2216
01:24:41,840 --> 01:24:43,280
not allowed to take it out with a move

2217
01:24:43,280 --> 01:24:46,320
or a copy command and that sort of thing

2218
01:24:46,320 --> 01:24:48,320
how are you planning to write this up is

2219
01:24:48,320 --> 01:24:51,120
that uh going to be a requirement

2220
01:24:51,120 --> 01:24:53,199
because i think some servers do not have

2221
01:24:53,199 --> 01:24:55,520
that capability in them yet that there

2222
01:24:55,520 --> 01:24:57,760
are mailboxes that you can't put things

2223
01:24:57,760 --> 01:25:00,719
into or take out of i think we have two

2224
01:25:00,719 --> 01:25:02,480
options um

2225
01:25:02,480 --> 01:25:04,400
one is to one is to eliminate the

2226
01:25:04,400 --> 01:25:05,920
requirement and instead to say that if

2227
01:25:05,920 --> 01:25:07,440
the message is moved in is that the

2228
01:25:07,440 --> 01:25:09,760
message is moved in there's some default

2229
01:25:09,760 --> 01:25:11,040
behavior which i'm not sure what it

2230
01:25:11,040 --> 01:25:12,960
would be and if the message is moved out

2231
01:25:12,960 --> 01:25:15,040
it is implicitly awoken

2232
01:25:15,040 --> 01:25:18,159
another option i i think in my imap

2233
01:25:18,159 --> 01:25:20,320
might be too poor to uh to be correct

2234
01:25:20,320 --> 01:25:21,120
here

2235
01:25:21,120 --> 01:25:23,520
is that we could require that apple

2236
01:25:23,520 --> 01:25:26,159
support is present and that this mailbox

2237
01:25:26,159 --> 01:25:28,320
must have access control that restricts

2238
01:25:28,320 --> 01:25:30,239
you from adding to it but i yeah i see a

2239
01:25:30,239 --> 01:25:32,800
thumb down yeah i i like the first one

2240
01:25:32,800 --> 01:25:34,560
better of that yes

2241
01:25:34,560 --> 01:25:38,480
but alexa is coming to respond to

2242
01:25:38,840 --> 01:25:41,679
this um i actually i'm not going to

2243
01:25:41,679 --> 01:25:44,639
fight you on this i agree with you um

2244
01:25:44,639 --> 01:25:47,760
magic mailboxes ideally not a good idea

2245
01:25:47,760 --> 01:25:48,880
so

2246
01:25:48,880 --> 01:25:49,840
um

2247
01:25:49,840 --> 01:25:51,360
and

2248
01:25:51,360 --> 01:25:54,239
so the other side of uh another thing i

2249
01:25:54,239 --> 01:25:57,120
wanted to say is

2250
01:25:57,840 --> 01:26:00,880
not yet fully sold on the new command

2251
01:26:00,880 --> 01:26:03,120
but i think it basically

2252
01:26:03,120 --> 01:26:06,000
we need to review

2253
01:26:06,159 --> 01:26:08,639
all extensions that affect

2254
01:26:08,639 --> 01:26:11,120
uag copy and uid move

2255
01:26:11,120 --> 01:26:13,440
yeah to make sure that this is handled

2256
01:26:13,440 --> 01:26:16,239
in exactly the same way yeah or you know

2257
01:26:16,239 --> 01:26:17,199
you know

2258
01:26:17,199 --> 01:26:19,199
module of the differences obviously so

2259
01:26:19,199 --> 01:26:21,280
that it kind of uh

2260
01:26:21,280 --> 01:26:22,719
um

2261
01:26:22,719 --> 01:26:24,639
i know it's more like if we can manage

2262
01:26:24,639 --> 01:26:26,639
that it's a to-do item we need to do

2263
01:26:26,639 --> 01:26:28,000
yeah but yeah

2264
01:26:28,000 --> 01:26:32,480
um i suspect from the reaction

2265
01:26:32,480 --> 01:26:34,320
from you know people in the room and

2266
01:26:34,320 --> 01:26:35,679
remote that

2267
01:26:35,679 --> 01:26:38,960
there is enough interest in this

2268
01:26:43,520 --> 01:26:46,080
pete resnick um so as you were

2269
01:26:46,080 --> 01:26:48,000
describing this

2270
01:26:48,000 --> 01:26:51,199
i thought what's the use of the

2271
01:26:51,199 --> 01:26:54,239
snooze mailbox in the first place

2272
01:26:54,239 --> 01:26:56,080
i understand implementation wise why

2273
01:26:56,080 --> 01:26:57,520
that makes it easier because now you've

2274
01:26:57,520 --> 01:26:59,040
got all the messages that you have to

2275
01:26:59,040 --> 01:27:00,719
deal with later

2276
01:27:00,719 --> 01:27:02,880
in one place and then you can do the

2277
01:27:02,880 --> 01:27:04,880
trigger off that but that seems

2278
01:27:04,880 --> 01:27:06,320
arbitrary

2279
01:27:06,320 --> 01:27:07,760
why would

2280
01:27:07,760 --> 01:27:09,760
why wouldn't i be able to say

2281
01:27:09,760 --> 01:27:12,400
snooze this set of actions on this

2282
01:27:12,400 --> 01:27:14,880
message wherever it may live which may

2283
01:27:14,880 --> 01:27:16,719
involve a move which may involve a flag

2284
01:27:16,719 --> 01:27:18,800
change which may involve any other

2285
01:27:18,800 --> 01:27:21,040
number of things like

2286
01:27:21,040 --> 01:27:23,120
for instance you know

2287
01:27:23,120 --> 01:27:25,520
cue it over to this other process

2288
01:27:25,520 --> 01:27:26,719
um

2289
01:27:26,719 --> 01:27:29,520
the move mailbox

2290
01:27:29,520 --> 01:27:31,120
seems like it could be removed from this

2291
01:27:31,120 --> 01:27:32,960
and and you could still implement it

2292
01:27:32,960 --> 01:27:34,080
that way

2293
01:27:34,080 --> 01:27:34,960
but

2294
01:27:34,960 --> 01:27:36,800
it seems like you could just do this as

2295
01:27:36,800 --> 01:27:38,400
a much more generic

2296
01:27:38,400 --> 01:27:40,960
protocol proposal and then leave to the

2297
01:27:40,960 --> 01:27:42,560
implementation whether they use a snooze

2298
01:27:42,560 --> 01:27:44,960
mailbox or whether they have a list of

2299
01:27:44,960 --> 01:27:47,040
messages you know that are waiting to be

2300
01:27:47,040 --> 01:27:48,639
snoozed

2301
01:27:48,639 --> 01:27:50,480
seems perfectly good so to make sure i

2302
01:27:50,480 --> 01:27:51,679
understand you pete i think what you're

2303
01:27:51,679 --> 01:27:53,760
suggesting is something like a defer

2304
01:27:53,760 --> 01:27:55,679
command where you would say here's an

2305
01:27:55,679 --> 01:27:57,760
action to take at some future time and

2306
01:27:57,760 --> 01:27:59,760
to implement exactly this you would move

2307
01:27:59,760 --> 01:28:01,600
the message to snooze and defer its

2308
01:28:01,600 --> 01:28:03,520
removal from snooze that's right yeah

2309
01:28:03,520 --> 01:28:04,400
and

2310
01:28:04,400 --> 01:28:06,960
then it's a normal mailbox um you know

2311
01:28:06,960 --> 01:28:09,679
you may in your ui say no can't move

2312
01:28:09,679 --> 01:28:11,280
anything into snooze

2313
01:28:11,280 --> 01:28:12,960
um that's fine

2314
01:28:12,960 --> 01:28:13,920
but

2315
01:28:13,920 --> 01:28:16,480
your ui is dealing with the idea of the

2316
01:28:16,480 --> 01:28:19,280
snooze mailbox and for all i care that

2317
01:28:19,280 --> 01:28:23,360
could be a flag not a mailbox

2318
01:28:23,360 --> 01:28:24,960
and in many implementations probably

2319
01:28:24,960 --> 01:28:27,280
would be sure so just remove the whole

2320
01:28:27,280 --> 01:28:29,280
idea of the mailbox and just make it a

2321
01:28:29,280 --> 01:28:31,199
defer command or a snooze command

2322
01:28:31,199 --> 01:28:32,560
whatever you like

2323
01:28:32,560 --> 01:28:34,159
and if it gets expunged then that goes

2324
01:28:34,159 --> 01:28:36,719
away so a uid move will

2325
01:28:36,719 --> 01:28:38,560
will wipe the old thing and the defer is

2326
01:28:38,560 --> 01:28:41,679
lost automatically yeah

2327
01:28:41,679 --> 01:28:44,639
yeah thanks yeah i will actually second

2328
01:28:44,639 --> 01:28:45,920
beat

2329
01:28:45,920 --> 01:28:48,480
on this uh it's probably implementable

2330
01:28:48,480 --> 01:28:50,560
with flags you you still need to store

2331
01:28:50,560 --> 01:28:52,239
extra metadata because you want to

2332
01:28:52,239 --> 01:28:54,400
substitute flags at a later date

2333
01:28:54,400 --> 01:28:56,400
but you can do it in place by just

2334
01:28:56,400 --> 01:28:58,480
defining and you keep you know one or

2335
01:28:58,480 --> 01:29:00,880
two more extra keywords saying this is

2336
01:29:00,880 --> 01:29:03,600
snoozed so basically clients when they

2337
01:29:03,600 --> 01:29:06,400
scan for mailbox they will just

2338
01:29:06,400 --> 01:29:09,199
don't show it or something i don't know

2339
01:29:09,199 --> 01:29:10,880
we have quite a long queue here at the

2340
01:29:10,880 --> 01:29:12,719
moment are all these people still

2341
01:29:12,719 --> 01:29:14,080
waiting in the cure have you just not

2342
01:29:14,080 --> 01:29:16,400
removed yourself yet

2343
01:29:16,400 --> 01:29:18,719
all right just yeah pop up when you're

2344
01:29:18,719 --> 01:29:20,320
when you're ready to talk i think it's

2345
01:29:20,320 --> 01:29:22,159
all good yeah so yeah

2346
01:29:22,159 --> 01:29:24,719
this is actually i think my what i was

2347
01:29:24,719 --> 01:29:27,120
pointing out for has actually been by

2348
01:29:27,120 --> 01:29:29,600
alex and p was about that instead of

2349
01:29:29,600 --> 01:29:30,960
doing the

2350
01:29:30,960 --> 01:29:33,280
concept of the mailbox per se we should

2351
01:29:33,280 --> 01:29:35,280
actually use the flags things and then

2352
01:29:35,280 --> 01:29:36,960
let the client decide whether they want

2353
01:29:36,960 --> 01:29:39,040
to implement it as a mailbox thing or

2354
01:29:39,040 --> 01:29:41,280
they just want to put tags or flags and

2355
01:29:41,280 --> 01:29:43,120
work on it that way and that way all

2356
01:29:43,120 --> 01:29:45,360
your flags that information for the

2357
01:29:45,360 --> 01:29:47,280
snooze flag would be awakened too and

2358
01:29:47,280 --> 01:29:51,559
all of that may come up there yeah

2359
01:29:54,560 --> 01:29:55,679
it was short

2360
01:29:55,679 --> 01:29:58,480
uh this is ken so um based on pete's

2361
01:29:58,480 --> 01:29:59,840
feedback

2362
01:29:59,840 --> 01:30:03,120
i'd like pete to review the sifs news

2363
01:30:03,120 --> 01:30:04,080
draft

2364
01:30:04,080 --> 01:30:05,520
which has similar

2365
01:30:05,520 --> 01:30:07,360
has similar language so

2366
01:30:07,360 --> 01:30:08,639
you may have an issue with that too and

2367
01:30:08,639 --> 01:30:11,360
i'm more than happy to change text

2368
01:30:11,360 --> 01:30:13,280
yeah this the civs news i mean i that's

2369
01:30:13,280 --> 01:30:14,880
that would be great the civ snooze draft

2370
01:30:14,880 --> 01:30:16,560
is much less prescriptive about what

2371
01:30:16,560 --> 01:30:18,560
happens with the message in the interim

2372
01:30:18,560 --> 01:30:22,080
so it'd be good to get looked at

2373
01:30:22,080 --> 01:30:24,800
yeah this is pete again and i'm glad to

2374
01:30:24,800 --> 01:30:27,840
review it i i have no dog in this fight

2375
01:30:27,840 --> 01:30:30,480
i i you know uh however you guys want to

2376
01:30:30,480 --> 01:30:32,000
implement this this seems like a cool

2377
01:30:32,000 --> 01:30:34,400
feature and and that's fine

2378
01:30:34,400 --> 01:30:35,520
um

2379
01:30:35,520 --> 01:30:37,520
just architecturally it seems like an

2380
01:30:37,520 --> 01:30:39,120
easier thing to

2381
01:30:39,120 --> 01:30:41,840
make it much more generic

2382
01:30:41,840 --> 01:30:44,159
so yeah i i took a quick glance through

2383
01:30:44,159 --> 01:30:45,280
the the

2384
01:30:45,280 --> 01:30:47,440
document because this came up and i

2385
01:30:47,440 --> 01:30:51,678
thought okay well yeah same ideas

2386
01:30:53,199 --> 01:30:56,000
so i i disagree about making it more

2387
01:30:56,000 --> 01:30:58,320
generic i think that

2388
01:30:58,320 --> 01:30:59,280
kind of

2389
01:30:59,280 --> 01:31:00,880
the point of this is

2390
01:31:00,880 --> 01:31:03,440
it's two things it's there's a common

2391
01:31:03,440 --> 01:31:05,040
paradigm that's implemented in a whole

2392
01:31:05,040 --> 01:31:06,800
bunch of places and they pretty much all

2393
01:31:06,800 --> 01:31:08,800
work the same way and so trying to

2394
01:31:08,800 --> 01:31:11,920
support like extra cases beyond that

2395
01:31:11,920 --> 01:31:13,199
makes it less likely this will be

2396
01:31:13,199 --> 01:31:14,560
implemented because

2397
01:31:14,560 --> 01:31:16,480
like for example you know if it's you

2398
01:31:16,480 --> 01:31:19,679
can arbitrarily do some defer command

2399
01:31:19,679 --> 01:31:21,520
later there's a good chance

2400
01:31:21,520 --> 01:31:23,360
most people won't implement that because

2401
01:31:23,360 --> 01:31:24,800
that's not what they're back in sports

2402
01:31:24,800 --> 01:31:27,280
they're back in audi sports snooze

2403
01:31:27,280 --> 01:31:28,800
and it's pretty they're all pretty

2404
01:31:28,800 --> 01:31:29,679
similar

2405
01:31:29,679 --> 01:31:30,960
so i think that's a downside to trying

2406
01:31:30,960 --> 01:31:33,840
to make it more generic um

2407
01:31:33,840 --> 01:31:35,920
uh

2408
01:31:35,920 --> 01:31:38,159
and

2409
01:31:38,719 --> 01:31:40,080
yeah i actually think that makes it more

2410
01:31:40,080 --> 01:31:41,760
complicated and i've lost whatever other

2411
01:31:41,760 --> 01:31:43,440
thought i had on this right now so stop

2412
01:31:43,440 --> 01:31:44,320
that

2413
01:31:44,320 --> 01:31:45,760
yeah that's uh

2414
01:31:45,760 --> 01:31:47,120
for the record that's my tentative

2415
01:31:47,120 --> 01:31:48,719
feeling also i i

2416
01:31:48,719 --> 01:31:50,560
defer sounds very neat and i think i

2417
01:31:50,560 --> 01:31:51,760
want to think about it and write about

2418
01:31:51,760 --> 01:31:53,760
it more but it it feels to inch a bit

2419
01:31:53,760 --> 01:31:55,840
towards all things to all people uh

2420
01:31:55,840 --> 01:31:56,840
which is

2421
01:31:56,840 --> 01:31:59,360
the very dangerous in a lot of designs

2422
01:31:59,360 --> 01:32:01,040
yeah yeah

2423
01:32:01,040 --> 01:32:03,040
other things so i'll just get really bit

2424
01:32:03,040 --> 01:32:04,639
um

2425
01:32:04,639 --> 01:32:06,719
it was someone mentioned oh and then the

2426
01:32:06,719 --> 01:32:08,239
clients could you know implement this

2427
01:32:08,239 --> 01:32:10,239
however they want it with the server but

2428
01:32:10,239 --> 01:32:11,600
that loses the point which is that this

2429
01:32:11,600 --> 01:32:12,880
is synchronized to the clients and they

2430
01:32:12,880 --> 01:32:14,800
can all provide a consistent view which

2431
01:32:14,800 --> 01:32:16,239
again is a reason to make it less

2432
01:32:16,239 --> 01:32:18,000
generic so that you're more likely to

2433
01:32:18,000 --> 01:32:19,199
see something consistent if you use

2434
01:32:19,199 --> 01:32:21,840
different clients

2435
01:32:21,840 --> 01:32:24,560
so this is pete again and

2436
01:32:24,560 --> 01:32:26,960
neil used the magic words that send my

2437
01:32:26,960 --> 01:32:29,600
hackles up which is because that's the

2438
01:32:29,600 --> 01:32:31,679
way the backing does it and this has

2439
01:32:31,679 --> 01:32:34,080
been the disaster of imap from the

2440
01:32:34,080 --> 01:32:35,280
get-go

2441
01:32:35,280 --> 01:32:37,520
is that you know when mark designed it

2442
01:32:37,520 --> 01:32:39,760
it was because that's the way his file

2443
01:32:39,760 --> 01:32:41,440
system worked

2444
01:32:41,440 --> 01:32:44,159
and that's what screwed over a lot of

2445
01:32:44,159 --> 01:32:46,880
clients because they didn't

2446
01:32:46,880 --> 01:32:48,960
deal with the world that way

2447
01:32:48,960 --> 01:32:51,840
and you end up with that semantic

2448
01:32:51,840 --> 01:32:54,000
you know ugliness between client and

2449
01:32:54,000 --> 01:32:56,560
server because then the client has to

2450
01:32:56,560 --> 01:32:59,280
figure out what the backing looked like

2451
01:32:59,280 --> 01:33:01,840
and if you make the the

2452
01:33:01,840 --> 01:33:04,800
and and generic may be the wrong word

2453
01:33:04,800 --> 01:33:07,920
it's that you want to take the essential

2454
01:33:07,920 --> 01:33:09,440
bits of this

2455
01:33:09,440 --> 01:33:11,679
irrelevant of what the server is

2456
01:33:11,679 --> 01:33:14,480
actually doing in the background and say

2457
01:33:14,480 --> 01:33:18,560
what can the server implement here

2458
01:33:18,560 --> 01:33:20,960
if the way you do this is move them to a

2459
01:33:20,960 --> 01:33:23,679
special mailbox

2460
01:33:23,679 --> 01:33:26,480
well that's one way to do it but i you

2461
01:33:26,480 --> 01:33:28,719
know i can imagine a zillion different

2462
01:33:28,719 --> 01:33:30,080
ways that a server might do this

2463
01:33:30,080 --> 01:33:32,480
depending on its backing

2464
01:33:32,480 --> 01:33:34,000
and

2465
01:33:34,000 --> 01:33:36,320
this would make life harder for certain

2466
01:33:36,320 --> 01:33:37,920
servers yeah

2467
01:33:37,920 --> 01:33:39,520
yeah i

2468
01:33:39,520 --> 01:33:40,719
i think so brian i think has been

2469
01:33:40,719 --> 01:33:42,159
waiting in queue for quite a while uh

2470
01:33:42,159 --> 01:33:44,400
sorry yeah no i popped myself in the

2471
01:33:44,400 --> 01:33:46,000
queue here to actually ask a more

2472
01:33:46,000 --> 01:33:47,440
general question which says yes we've

2473
01:33:47,440 --> 01:33:49,040
got this in civ

2474
01:33:49,040 --> 01:33:51,280
we've got this here in imap presumably

2475
01:33:51,280 --> 01:33:53,840
we also want to publish a jmap

2476
01:33:53,840 --> 01:33:55,120
version of it

2477
01:33:55,120 --> 01:33:56,719
do we want to do all these together and

2478
01:33:56,719 --> 01:33:58,480
then i guess the question is going to

2479
01:33:58,480 --> 01:34:00,639
come up for our area directors at some

2480
01:34:00,639 --> 01:34:03,600
point are we going to try and

2481
01:34:03,600 --> 01:34:05,600
as more things happen in both gmap and

2482
01:34:05,600 --> 01:34:07,520
extra in parallel what do we want to do

2483
01:34:07,520 --> 01:34:09,600
there but maybe this maybe it's not time

2484
01:34:09,600 --> 01:34:11,760
to do that this time maybe we'll wait

2485
01:34:11,760 --> 01:34:12,560
till

2486
01:34:12,560 --> 01:34:15,600
we have more area directors in art again

2487
01:34:15,600 --> 01:34:17,679
uh to respond really briefly to to pete

2488
01:34:17,679 --> 01:34:19,280
i think that something neil said that is

2489
01:34:19,280 --> 01:34:21,120
also relevant is

2490
01:34:21,120 --> 01:34:22,480
putting putting aside what the back end

2491
01:34:22,480 --> 01:34:24,560
server does if what we want

2492
01:34:24,560 --> 01:34:27,040
is for different clients

2493
01:34:27,040 --> 01:34:29,360
to be able to interpret the semantics of

2494
01:34:29,360 --> 01:34:31,920
what the server plans to do then

2495
01:34:31,920 --> 01:34:34,159
indicating it as this message is snoozed

2496
01:34:34,159 --> 01:34:37,040
until such time is easier to interpret

2497
01:34:37,040 --> 01:34:37,840
than

2498
01:34:37,840 --> 01:34:40,159
client a has indicated this message

2499
01:34:40,159 --> 01:34:41,199
should be

2500
01:34:41,199 --> 01:34:43,760
moved moved or unflagged at some future

2501
01:34:43,760 --> 01:34:46,320
time and client b must understand that's

2502
01:34:46,320 --> 01:34:48,400
the common parlance for snooze so being

2503
01:34:48,400 --> 01:34:49,840
able to apply a name i think has a lot

2504
01:34:49,840 --> 01:34:51,920
of value to it uh regardless of the back

2505
01:34:51,920 --> 01:34:54,000
end semantics

2506
01:34:54,000 --> 01:34:55,360
uh alexi

2507
01:34:55,360 --> 01:34:56,960
um yeah

2508
01:34:56,960 --> 01:34:58,400
sorry

2509
01:34:58,400 --> 01:34:59,679
i think i jumped in just before lexi in

2510
01:34:59,679 --> 01:35:00,960
the queue again i was just going to

2511
01:35:00,960 --> 01:35:02,400
reply

2512
01:35:02,400 --> 01:35:04,639
my approach is not from this is what how

2513
01:35:04,639 --> 01:35:05,840
back-ends have implemented it my

2514
01:35:05,840 --> 01:35:09,600
approach was this is how it works as a

2515
01:35:09,600 --> 01:35:11,600
product in various different services

2516
01:35:11,600 --> 01:35:13,199
it's it's you know from a user's point

2517
01:35:13,199 --> 01:35:15,600
of view um there's quite a lot of

2518
01:35:15,600 --> 01:35:18,159
consistency

2519
01:35:20,400 --> 01:35:22,638
um

2520
01:35:23,520 --> 01:35:25,840
i think there are basically two general

2521
01:35:25,840 --> 01:35:29,600
ways of doing this one is you know extra

2522
01:35:29,600 --> 01:35:31,280
imap keywords

2523
01:35:31,280 --> 01:35:33,440
that let the clients hide it from the

2524
01:35:33,440 --> 01:35:35,679
view or the server you know you know

2525
01:35:35,679 --> 01:35:38,080
hide it from you or whatever or there is

2526
01:35:38,080 --> 01:35:40,159
a magic mailbox right

2527
01:35:40,159 --> 01:35:42,400
well somewhat magic we're discussing

2528
01:35:42,400 --> 01:35:44,560
what extent ml box yes

2529
01:35:44,560 --> 01:35:46,800
um

2530
01:35:47,760 --> 01:35:50,560
i suggest maybe

2531
01:35:50,560 --> 01:35:52,800
once the draft is written we'll discuss

2532
01:35:52,800 --> 01:35:54,480
the you know the two approaches and

2533
01:35:54,480 --> 01:35:56,560
maybe settle on one you know i suggest

2534
01:35:56,560 --> 01:35:57,600
well

2535
01:35:57,600 --> 01:35:59,040
i suspect we're probably not going to

2536
01:35:59,040 --> 01:36:01,920
solve it in this room

2537
01:36:03,760 --> 01:36:05,840
i also suggest that chairs probably

2538
01:36:05,840 --> 01:36:07,440
should have a limit on how long we will

2539
01:36:07,440 --> 01:36:09,040
discuss and then we'll just pick one

2540
01:36:09,040 --> 01:36:10,960
approach along this

2541
01:36:10,960 --> 01:36:13,199
um

2542
01:36:14,000 --> 01:36:16,080
there are benefits to one another and

2543
01:36:16,080 --> 01:36:17,840
there are well advantages and

2544
01:36:17,840 --> 01:36:21,280
disadvantages to both of them so um

2545
01:36:21,280 --> 01:36:25,159
yeah all right

2546
01:36:26,239 --> 01:36:28,239
just it has to be a mailbox because

2547
01:36:28,239 --> 01:36:29,840
otherwise it will only work in clients

2548
01:36:29,840 --> 01:36:31,360
that have explicitly added support for

2549
01:36:31,360 --> 01:36:33,119
it whereas when it

2550
01:36:33,119 --> 01:36:35,040
if it's a keyword

2551
01:36:35,040 --> 01:36:36,480
uh look like you're just not gonna do

2552
01:36:36,480 --> 01:36:37,840
anything in other clients if it's a

2553
01:36:37,840 --> 01:36:40,159
mailbox they will sync the stuff and it

2554
01:36:40,159 --> 01:36:41,360
will have moved out of the inbox it will

2555
01:36:41,360 --> 01:36:42,639
move back into the appropriate time they

2556
01:36:42,639 --> 01:36:44,400
don't have to know anything about it so

2557
01:36:44,400 --> 01:36:45,760
it can't be a keyword has to be in the

2558
01:36:45,760 --> 01:36:48,239
mailbox

2559
01:36:49,600 --> 01:36:52,400
this is still a server functionality so

2560
01:36:52,400 --> 01:36:54,239
server can still hide it from the viewer

2561
01:36:54,239 --> 01:36:55,920
actually

2562
01:36:55,920 --> 01:36:58,159
so i mean there are there are variations

2563
01:36:58,159 --> 01:37:00,320
on you know yes it might be magic

2564
01:37:00,320 --> 01:37:02,639
keyboards that hide it from you know

2565
01:37:02,639 --> 01:37:04,239
tell the server not to show it until

2566
01:37:04,239 --> 01:37:06,239
later on

2567
01:37:06,239 --> 01:37:07,840
we can talk about yeah yeah let's take

2568
01:37:07,840 --> 01:37:09,360
it i mean i think i think there are

2569
01:37:09,360 --> 01:37:10,800
strong reasons i'd argue for one way or

2570
01:37:10,800 --> 01:37:12,239
the other but let's take it to the list

2571
01:37:12,239 --> 01:37:13,119
because i think we've taken a lot of

2572
01:37:13,119 --> 01:37:15,679
time my question is based off on what

2573
01:37:15,679 --> 01:37:16,800
pete said

2574
01:37:16,800 --> 01:37:18,400
uh about the

2575
01:37:18,400 --> 01:37:20,719
backing store and the implementation

2576
01:37:20,719 --> 01:37:21,679
being true

2577
01:37:21,679 --> 01:37:23,760
so this is very basically a concept of

2578
01:37:23,760 --> 01:37:25,679
what really is a mailbox in the mail

2579
01:37:25,679 --> 01:37:28,320
dire world or the mbox world it's a file

2580
01:37:28,320 --> 01:37:29,840
it's a file that recites a particular

2581
01:37:29,840 --> 01:37:32,080
place but if you take this whole concept

2582
01:37:32,080 --> 01:37:34,159
into a database sort of a bad thing then

2583
01:37:34,159 --> 01:37:35,920
it becomes basically

2584
01:37:35,920 --> 01:37:37,679
some table or something in a database

2585
01:37:37,679 --> 01:37:40,400
hierarchy so me so what i'm going to say

2586
01:37:40,400 --> 01:37:43,760
is a mailbox as a concept

2587
01:37:43,760 --> 01:37:46,159
versus a mailbox as a particular place

2588
01:37:46,159 --> 01:37:48,480
or something so a mailbox has a concept

2589
01:37:48,480 --> 01:37:50,239
that is implemented using tags or

2590
01:37:50,239 --> 01:37:51,679
mailbox that is a concept that is

2591
01:37:51,679 --> 01:37:54,000
implemented using a directory i think we

2592
01:37:54,000 --> 01:37:55,920
might need to just think a slightly more

2593
01:37:55,920 --> 01:37:57,920
into how it may actually happen in the

2594
01:37:57,920 --> 01:38:00,080
real world and excuse me if i'm speaking

2595
01:38:00,080 --> 01:38:01,440
something which you guys already know

2596
01:38:01,440 --> 01:38:05,040
because i'm very very new in this area

2597
01:38:05,040 --> 01:38:07,360
thank you

2598
01:38:08,159 --> 01:38:09,199
i think we've reached the end of the

2599
01:38:09,199 --> 01:38:10,560
queue

2600
01:38:10,560 --> 01:38:11,600
okay

2601
01:38:11,600 --> 01:38:13,199
let's take a next slide i think i'll try

2602
01:38:13,199 --> 01:38:16,000
and i think that's about it just about

2603
01:38:16,000 --> 01:38:18,080
uh

2604
01:38:18,080 --> 01:38:19,600
yeah okay there's one two more things

2605
01:38:19,600 --> 01:38:21,600
one is uh it's worth noting that what

2606
01:38:21,600 --> 01:38:23,600
fast mail does and its implementation is

2607
01:38:23,600 --> 01:38:25,600
we have a conventional flag that is used

2608
01:38:25,600 --> 01:38:28,080
to indicate a message recently awoke

2609
01:38:28,080 --> 01:38:30,080
that lets you see the message isn't just

2610
01:38:30,080 --> 01:38:32,159
back in your mailbox you didn't forget

2611
01:38:32,159 --> 01:38:34,320
that you ever snoozed it it is you can

2612
01:38:34,320 --> 01:38:36,320
see this has been deferred i think a

2613
01:38:36,320 --> 01:38:38,480
suggestion and a registered uh common

2614
01:38:38,480 --> 01:38:40,880
flag for that would be useful or

2615
01:38:40,880 --> 01:38:42,800
we've taken a got a bit off the rails on

2616
01:38:42,800 --> 01:38:45,119
exactly what happens but this function

2617
01:38:45,119 --> 01:38:47,280
is useful similarly the save date

2618
01:38:47,280 --> 01:38:48,880
extension is useful here because you can

2619
01:38:48,880 --> 01:38:50,719
see when the message returned to the

2620
01:38:50,719 --> 01:38:53,040
mailbox if in fact it has left and

2621
01:38:53,040 --> 01:38:54,560
returned to the mailbox as part of being

2622
01:38:54,560 --> 01:38:56,800
snoozed and awoken

2623
01:38:56,800 --> 01:38:58,719
next i think that's the last slide on

2624
01:38:58,719 --> 01:39:01,040
snooze

2625
01:39:01,199 --> 01:39:03,199
yeah but let's talk about the sieve one

2626
01:39:03,199 --> 01:39:05,520
well we'll do that next

2627
01:39:05,520 --> 01:39:07,360
okay uh

2628
01:39:07,360 --> 01:39:09,360
shall we move on to the next topic yeah

2629
01:39:09,360 --> 01:39:12,880
i think so i i like to think uh this one

2630
01:39:12,880 --> 01:39:14,880
is simpler but let's see uh it does call

2631
01:39:14,880 --> 01:39:17,760
into question what is a mailbox so

2632
01:39:17,760 --> 01:39:20,480
um right so a number of uh

2633
01:39:20,480 --> 01:39:22,320
implementations now

2634
01:39:22,320 --> 01:39:24,840
uh client implementations let you

2635
01:39:24,840 --> 01:39:27,040
visualize well they let you see mail

2636
01:39:27,040 --> 01:39:28,880
with labels stuck on it implemented in

2637
01:39:28,880 --> 01:39:30,800
one of several ways sometimes it is

2638
01:39:30,800 --> 01:39:33,199
using uh user flags sometimes you're

2639
01:39:33,199 --> 01:39:34,239
putting the message in multiple

2640
01:39:34,239 --> 01:39:35,679
mailboxes

2641
01:39:35,679 --> 01:39:38,320
gmap uh is to some extent built around

2642
01:39:38,320 --> 01:39:40,560
the idea that you will put an email in

2643
01:39:40,560 --> 01:39:42,320
multiple mailboxes and these can be

2644
01:39:42,320 --> 01:39:44,639
treated like labels and because you

2645
01:39:44,639 --> 01:39:47,040
truck with emails in terms of a single

2646
01:39:47,040 --> 01:39:49,679
email in multiple emails no special work

2647
01:39:49,679 --> 01:39:51,760
is required but if we want to expose

2648
01:39:51,760 --> 01:39:53,760
this in imap for clients that would like

2649
01:39:53,760 --> 01:39:56,880
to show the various mailboxes in which a

2650
01:39:56,880 --> 01:39:58,880
message appears which is to say the

2651
01:39:58,880 --> 01:40:00,960
various labels on the mailbox we need to

2652
01:40:00,960 --> 01:40:02,320
do some work

2653
01:40:02,320 --> 01:40:04,639
next

2654
01:40:06,560 --> 01:40:09,440
so uh if we want to implement

2655
01:40:09,440 --> 01:40:12,239
what i will call labels mode today um

2656
01:40:12,239 --> 01:40:14,320
you need the server to implement object

2657
01:40:14,320 --> 01:40:16,400
id because we're going to want to map

2658
01:40:16,400 --> 01:40:18,880
from emails found in a mailbox to the

2659
01:40:18,880 --> 01:40:21,600
mailboxes in which they are found

2660
01:40:21,600 --> 01:40:23,679
and then to do that mapping we're adding

2661
01:40:23,679 --> 01:40:26,239
a data item to the messages called

2662
01:40:26,239 --> 01:40:28,080
mailbox ids

2663
01:40:28,080 --> 01:40:31,760
mailbox ids is a list of the object ids

2664
01:40:31,760 --> 01:40:34,239
of the mailboxes in which this email

2665
01:40:34,239 --> 01:40:38,080
appears and the email here is as per the

2666
01:40:38,080 --> 01:40:40,320
object id capability it's it's any

2667
01:40:40,320 --> 01:40:43,119
message with the same email id which i

2668
01:40:43,119 --> 01:40:44,800
believe is defined as the same uid

2669
01:40:44,800 --> 01:40:48,119
validity uid and it's all the all the

2670
01:40:48,119 --> 01:40:50,239
non-changeable content of the message

2671
01:40:50,239 --> 01:40:52,480
between mailboxes every mailbox that

2672
01:40:52,480 --> 01:40:54,480
appears in when you fetch its mailbox

2673
01:40:54,480 --> 01:40:56,800
ids you will be told what the mailboxes

2674
01:40:56,800 --> 01:40:59,199
are you can't change this property it's

2675
01:40:59,199 --> 01:41:01,199
computed for you when you copy move

2676
01:41:01,199 --> 01:41:02,719
delete whatever else these messages

2677
01:41:02,719 --> 01:41:04,960
that's how you change the mailbox ids

2678
01:41:04,960 --> 01:41:07,280
next

2679
01:41:08,880 --> 01:41:10,239
the complication we've been talking

2680
01:41:10,239 --> 01:41:11,760
about internally and i'm sure there will

2681
01:41:11,760 --> 01:41:13,679
be many complications

2682
01:41:13,679 --> 01:41:14,960
is that

2683
01:41:14,960 --> 01:41:17,840
if you have this computed property on a

2684
01:41:17,840 --> 01:41:20,000
message in mailbox 1

2685
01:41:20,000 --> 01:41:21,679
and that message is also found in

2686
01:41:21,679 --> 01:41:24,480
mailbox 2 but you delete it from mailbox

2687
01:41:24,480 --> 01:41:27,600
2 you'd like the mod seek in mailbox 1

2688
01:41:27,600 --> 01:41:29,920
to be updated because its mailbox ids

2689
01:41:29,920 --> 01:41:31,760
property has been updated through action

2690
01:41:31,760 --> 01:41:33,040
at a distance

2691
01:41:33,040 --> 01:41:34,800
this is going to be either

2692
01:41:34,800 --> 01:41:36,719
complicated or not depending on your

2693
01:41:36,719 --> 01:41:38,800
implementation unfortunately it's a

2694
01:41:38,800 --> 01:41:39,840
little complicated for our

2695
01:41:39,840 --> 01:41:42,800
implementation uh your mileage may vary

2696
01:41:42,800 --> 01:41:45,040
next

2697
01:41:45,040 --> 01:41:47,280
uh yep if you want to set the mailbox

2698
01:41:47,280 --> 01:41:50,159
ids or the labels on a message you just

2699
01:41:50,159 --> 01:41:52,159
move it around it's all it should all be

2700
01:41:52,159 --> 01:41:54,400
able to work implicitly

2701
01:41:54,400 --> 01:41:56,000
uh one thing that does come up is this

2702
01:41:56,000 --> 01:41:57,840
leads us to want a

2703
01:41:57,840 --> 01:42:00,960
uh the ability to copy a message into a

2704
01:42:00,960 --> 01:42:03,119
mailbox only if it does not already

2705
01:42:03,119 --> 01:42:05,360
exist by email id this should probably

2706
01:42:05,360 --> 01:42:07,199
be spun off into a separate conversation

2707
01:42:07,199 --> 01:42:09,119
so i don't want to get too far into it

2708
01:42:09,119 --> 01:42:10,639
but you can imagine that if you have a

2709
01:42:10,639 --> 01:42:12,000
message and you say you want to add a

2710
01:42:12,000 --> 01:42:14,239
label which has already been added you

2711
01:42:14,239 --> 01:42:16,159
don't want to copy that message and have

2712
01:42:16,159 --> 01:42:18,080
two versions of that message with

2713
01:42:18,080 --> 01:42:20,480
distinct uids but the same email id in

2714
01:42:20,480 --> 01:42:22,080
one mailbox you're going to have a bad

2715
01:42:22,080 --> 01:42:22,880
time

2716
01:42:22,880 --> 01:42:23,840
next

2717
01:42:23,840 --> 01:42:26,000
that could possibly be done with uh mod

2718
01:42:26,000 --> 01:42:27,760
seek checks but i can't remember whether

2719
01:42:27,760 --> 01:42:30,639
copy and move allow you to test mod seek

2720
01:42:30,639 --> 01:42:32,480
store certainly does

2721
01:42:32,480 --> 01:42:34,880
yeah i don't know yeah

2722
01:42:34,880 --> 01:42:36,320
yeah great

2723
01:42:36,320 --> 01:42:39,119
much more prosaic concern any client

2724
01:42:39,119 --> 01:42:41,199
that's any good that allows you to use

2725
01:42:41,199 --> 01:42:43,040
labels allows you to color the labels

2726
01:42:43,040 --> 01:42:45,199
and we'd like to allow that for labels

2727
01:42:45,199 --> 01:42:47,920
mode of imap so this is registering a

2728
01:42:47,920 --> 01:42:49,760
piece of metadata for the mailbox where

2729
01:42:49,760 --> 01:42:52,080
we store the color define the way we do

2730
01:42:52,080 --> 01:42:54,880
everything these days as a css3 named

2731
01:42:54,880 --> 01:42:57,040
color or rgb code

2732
01:42:57,040 --> 01:42:58,960
the thing that's a bit more complicated

2733
01:42:58,960 --> 01:43:00,400
is that then we need to be able to get

2734
01:43:00,400 --> 01:43:03,679
the metadata efficiently when we select

2735
01:43:03,679 --> 01:43:05,360
the mail when we list the mailboxes over

2736
01:43:05,360 --> 01:43:06,639
imap i believe brian you're going to be

2737
01:43:06,639 --> 01:43:08,159
talking about that in a minute so i

2738
01:43:08,159 --> 01:43:10,639
won't uh but if you can't get the

2739
01:43:10,639 --> 01:43:12,960
metadata in the list and that's where

2740
01:43:12,960 --> 01:43:14,480
we've put the color you're going to have

2741
01:43:14,480 --> 01:43:17,040
to select every mailbox to display the

2742
01:43:17,040 --> 01:43:19,280
labels efficiently and that's no good

2743
01:43:19,280 --> 01:43:21,599
next

2744
01:43:22,239 --> 01:43:24,800
you've got to let me yeah sure

2745
01:43:24,800 --> 01:43:25,679
ah

2746
01:43:25,679 --> 01:43:26,800
that's a pain

2747
01:43:26,800 --> 01:43:29,679
okay there we go

2748
01:43:29,760 --> 01:43:31,760
was that it might be the last slide

2749
01:43:31,760 --> 01:43:33,520
there was no next there you go so uh

2750
01:43:33,520 --> 01:43:36,719
those changes are uh

2751
01:43:36,719 --> 01:43:38,560
in concept straightforward but i think

2752
01:43:38,560 --> 01:43:40,239
they led us to efficiently bootstrap an

2753
01:43:40,239 --> 01:43:43,199
imap client to display multi-mailbox uh

2754
01:43:43,199 --> 01:43:44,560
labels with

2755
01:43:44,560 --> 01:43:45,840
with color and to keep it in sync

2756
01:43:45,840 --> 01:43:47,199
efficiently

2757
01:43:47,199 --> 01:43:49,280
depending on the implementation uh we

2758
01:43:49,280 --> 01:43:53,159
have one person in queue sir

2759
01:43:53,679 --> 01:43:55,679
just thinking about this color thing is

2760
01:43:55,679 --> 01:43:56,639
what

2761
01:43:56,639 --> 01:43:59,040
makes the jmap preferences object

2762
01:43:59,040 --> 01:44:00,880
actually become part of the protocol in

2763
01:44:00,880 --> 01:44:03,199
this particular use case as i understand

2764
01:44:03,199 --> 01:44:05,520
because we're talking about

2765
01:44:05,520 --> 01:44:07,679
thunderbird on one machine on my linux

2766
01:44:07,679 --> 01:44:09,280
box and the thunderbird on the windows

2767
01:44:09,280 --> 01:44:10,880
box basically i want to have the same

2768
01:44:10,880 --> 01:44:12,639
interface and the best place to keep

2769
01:44:12,639 --> 01:44:14,239
that information is in the server so

2770
01:44:14,239 --> 01:44:16,159
that's where we could put something like

2771
01:44:16,159 --> 01:44:17,760
a preferences object

2772
01:44:17,760 --> 01:44:19,440
preferences for the mailbox and the

2773
01:44:19,440 --> 01:44:21,199
preferences object per se could be

2774
01:44:21,199 --> 01:44:23,520
actually opaque in terms of whatever

2775
01:44:23,520 --> 01:44:25,119
information you put it that may be a

2776
01:44:25,119 --> 01:44:28,000
part of a client specific if you can

2777
01:44:28,000 --> 01:44:30,320
have something like yeah so so some

2778
01:44:30,320 --> 01:44:32,639
place like but basically just an object

2779
01:44:32,639 --> 01:44:34,960
store for at the server level to store

2780
01:44:34,960 --> 01:44:36,719
some information that the server like

2781
01:44:36,719 --> 01:44:38,400
outlook does it with across they have

2782
01:44:38,400 --> 01:44:40,159
this whole concept now of outlook in the

2783
01:44:40,159 --> 01:44:41,600
cloud where you can actually store your

2784
01:44:41,600 --> 01:44:43,520
preferences yeah i think it's absolutely

2785
01:44:43,520 --> 01:44:44,880
it's absolutely plausible to talk about

2786
01:44:44,880 --> 01:44:47,280
jmap being useful as a sort of a generic

2787
01:44:47,280 --> 01:44:48,800
key value store for well-known

2788
01:44:48,800 --> 01:44:50,800
properties but on the other hand

2789
01:44:50,800 --> 01:44:52,560
um being able to say there's one

2790
01:44:52,560 --> 01:44:54,719
specific property which is color which

2791
01:44:54,719 --> 01:44:58,159
we apply to the mailbox uh gets rid of a

2792
01:44:58,159 --> 01:44:59,600
lot of complexity and thinking about

2793
01:44:59,600 --> 01:45:01,360
what else people will use a generic key

2794
01:45:01,360 --> 01:45:03,600
value store for fastmel's already got an

2795
01:45:03,600 --> 01:45:05,520
extension for the color property on

2796
01:45:05,520 --> 01:45:07,440
mailboxes we already implement it in

2797
01:45:07,440 --> 01:45:10,719
terms of metadata on the mailbox and

2798
01:45:10,719 --> 01:45:12,480
it's dead simple i think that's the

2799
01:45:12,480 --> 01:45:13,920
least complicated part of this whole

2800
01:45:13,920 --> 01:45:15,440
suggestion

2801
01:45:15,440 --> 01:45:17,040
uh that's the end of queue if there's

2802
01:45:17,040 --> 01:45:18,560
nothing else i will thank you and sit

2803
01:45:18,560 --> 01:45:20,800
down

2804
01:45:20,880 --> 01:45:23,920
thank you cool

2805
01:45:25,760 --> 01:45:28,080
i just need to pop my slides up here

2806
01:45:28,080 --> 01:45:29,520
because i realize i didn't upload them

2807
01:45:29,520 --> 01:45:31,840
yet but that will take me 10 seconds and

2808
01:45:31,840 --> 01:45:35,840
then i will show you very quickly the

2809
01:45:36,480 --> 01:45:39,280
metadata slides

2810
01:45:39,280 --> 01:45:41,679
upload

2811
01:45:43,360 --> 01:45:46,080
nobody saw that

2812
01:45:47,920 --> 01:45:49,040
yep

2813
01:45:49,040 --> 01:45:50,639
second 10 seconds don't zoom in on me

2814
01:45:50,639 --> 01:45:53,840
while i'm shoving my finger up at people

2815
01:45:53,840 --> 01:45:56,239
thanks remote person okay

2816
01:45:56,239 --> 01:46:00,480
slides unshare reshare

2817
01:46:02,800 --> 01:46:03,840
there we go

2818
01:46:03,840 --> 01:46:06,320
uh list return metadata this is for

2819
01:46:06,320 --> 01:46:08,239
anyone who's seen list return my rights

2820
01:46:08,239 --> 01:46:10,719
this will look very familiar to you

2821
01:46:10,719 --> 01:46:13,600
um it it's very similar basically you

2822
01:46:13,600 --> 01:46:15,119
say well you're giving me a list for

2823
01:46:15,119 --> 01:46:17,119
each mailbox call get metadata on that

2824
01:46:17,119 --> 01:46:19,600
mailbox with the following properties

2825
01:46:19,600 --> 01:46:21,520
and it looks like this

2826
01:46:21,520 --> 01:46:26,199
is that readable at that size maybe not

2827
01:46:26,480 --> 01:46:28,239
thanks

2828
01:46:28,239 --> 01:46:31,040
we we have plenty of time for that

2829
01:46:31,040 --> 01:46:32,239
um

2830
01:46:32,239 --> 01:46:33,679
i should have you i should have removed

2831
01:46:33,679 --> 01:46:34,960
some more things from it anyway as you

2832
01:46:34,960 --> 01:46:37,600
can see here if you say list return and

2833
01:46:37,600 --> 01:46:39,280
you say metadata and you give a list of

2834
01:46:39,280 --> 01:46:41,040
the metadata items you would like it to

2835
01:46:41,040 --> 01:46:42,080
return

2836
01:46:42,080 --> 01:46:44,960
after each list it then returns the get

2837
01:46:44,960 --> 01:46:47,040
metadata response as you can see looks

2838
01:46:47,040 --> 01:46:48,880
absolutely identical between

2839
01:46:48,880 --> 01:46:50,719
the trash line

2840
01:46:50,719 --> 01:46:52,560
there and the get metadata on the same

2841
01:46:52,560 --> 01:46:54,400
trash with the same properties

2842
01:46:54,400 --> 01:46:56,719
and it just says here's

2843
01:46:56,719 --> 01:46:58,800
the value of these things so it's very

2844
01:46:58,800 --> 01:47:00,080
simple

2845
01:47:00,080 --> 01:47:01,920
and it allows you to do a full listing

2846
01:47:01,920 --> 01:47:03,360
on the server and get the metadata at

2847
01:47:03,360 --> 01:47:05,360
the same time this is implemented in

2848
01:47:05,360 --> 01:47:07,679
cyrus imap has been for very many years

2849
01:47:07,679 --> 01:47:10,000
i can't remember whether i added an x

2850
01:47:10,000 --> 01:47:13,040
capability for it or not probably not um

2851
01:47:13,040 --> 01:47:15,440
but it would be very easy to do

2852
01:47:15,440 --> 01:47:18,080
so i will write a draft and ask my

2853
01:47:18,080 --> 01:47:19,600
co-chair to do a call for adoption on

2854
01:47:19,600 --> 01:47:20,960
this

2855
01:47:20,960 --> 01:47:22,719
and it should be pretty trivial i

2856
01:47:22,719 --> 01:47:25,119
imagine

2857
01:47:25,600 --> 01:47:28,320
any comments

2858
01:47:32,000 --> 01:47:34,560
this is candice one comment so this is

2859
01:47:34,560 --> 01:47:37,679
really the only way to get all the

2860
01:47:37,679 --> 01:47:40,960
information as rick was saying in one go

2861
01:47:40,960 --> 01:47:41,760
since

2862
01:47:41,760 --> 01:47:44,250
when get metadata was changed from

2863
01:47:44,250 --> 01:47:45,840
[Music]

2864
01:47:45,840 --> 01:47:47,760
annotate more i think

2865
01:47:47,760 --> 01:47:50,159
we removed the ability to wild card the

2866
01:47:50,159 --> 01:47:52,000
list of mailboxes that you want to fetch

2867
01:47:52,000 --> 01:47:54,480
that item on so unless we put that back

2868
01:47:54,480 --> 01:47:56,159
in the wild carding back in i think this

2869
01:47:56,159 --> 01:47:57,520
is probably the most efficient way to do

2870
01:47:57,520 --> 01:47:59,440
this and we already have

2871
01:47:59,440 --> 01:48:01,840
a handful of return options anyway so

2872
01:48:01,840 --> 01:48:05,840
adding this one makes sense to me

2873
01:48:11,520 --> 01:48:13,440
cool

2874
01:48:13,440 --> 01:48:15,280
in that case i think we're at the point

2875
01:48:15,280 --> 01:48:17,119
where we need to look at our milestones

2876
01:48:17,119 --> 01:48:18,320
unless there's any other business for

2877
01:48:18,320 --> 01:48:21,360
the extra working group

2878
01:48:27,040 --> 01:48:29,360
i don't see any people jumping up

2879
01:48:29,360 --> 01:48:33,080
let's have a look at our milestones

2880
01:48:42,719 --> 01:48:44,880
here we go we have adopt a document for

2881
01:48:44,880 --> 01:48:46,639
ai with sieve

2882
01:48:46,639 --> 01:48:49,760
and we have submit said document

2883
01:48:49,760 --> 01:48:52,560
so isg

2884
01:48:55,199 --> 01:48:57,280
let's have a look at

2885
01:48:57,280 --> 01:48:58,560
what we're going to do about that i

2886
01:48:58,560 --> 01:49:01,520
guess is there an option in the dates

2887
01:49:01,520 --> 01:49:05,440
that you can say when hell freezes over

2888
01:49:06,000 --> 01:49:07,360
probably not

2889
01:49:07,360 --> 01:49:09,679
um

2890
01:49:13,199 --> 01:49:14,960
yeah has anyone

2891
01:49:14,960 --> 01:49:17,920
even started thinking about this yet

2892
01:49:17,920 --> 01:49:20,480
oh there is okay yes

2893
01:49:20,480 --> 01:49:21,920
i'm gonna sit down

2894
01:49:21,920 --> 01:49:24,239
um

2895
01:49:25,280 --> 01:49:27,520
i think somebody from open exchange is

2896
01:49:27,520 --> 01:49:29,920
it was it stefan bosch he actually wrote

2897
01:49:29,920 --> 01:49:31,199
something

2898
01:49:31,199 --> 01:49:33,920
uh the difficulty is the last time ned

2899
01:49:33,920 --> 01:49:36,560
had a look at it and he said oh that

2900
01:49:36,560 --> 01:49:38,480
needs quite a bit of work

2901
01:49:38,480 --> 01:49:41,199
so there is a document obviously we're

2902
01:49:41,199 --> 01:49:43,360
not ready and not anywhere near done

2903
01:49:43,360 --> 01:49:45,440
with it but

2904
01:49:45,440 --> 01:49:47,678
um

2905
01:49:52,130 --> 01:49:54,159
[Music]

2906
01:49:54,159 --> 01:49:57,159
okay

2907
01:49:58,080 --> 01:50:00,719
well i do wonder whether we can just

2908
01:50:00,719 --> 01:50:03,440
kind of start adoption call well ask

2909
01:50:03,440 --> 01:50:06,960
stefan to refresh it and say

2910
01:50:06,960 --> 01:50:09,679
we'll adopt it you know but if obviously

2911
01:50:09,679 --> 01:50:12,159
you know no guarantee that it

2912
01:50:12,159 --> 01:50:14,480
get done i suppose but

2913
01:50:14,480 --> 01:50:15,440
um

2914
01:50:15,440 --> 01:50:17,440
i would rather adopt it and work it in

2915
01:50:17,440 --> 01:50:19,360
the working group even if we run out of

2916
01:50:19,360 --> 01:50:21,920
steam at some point and decide it's not

2917
01:50:21,920 --> 01:50:25,119
tractable i will

2918
01:50:25,360 --> 01:50:27,599
okay thank you

2919
01:50:27,599 --> 01:50:28,400
and

2920
01:50:28,400 --> 01:50:30,480
the december date is obviously yes that

2921
01:50:30,480 --> 01:50:32,000
one is

2922
01:50:32,000 --> 01:50:33,440
i'm achievable i might kick that one

2923
01:50:33,440 --> 01:50:36,000
down the road a bit okay

2924
01:50:36,000 --> 01:50:38,880
uh this is barry if he's not

2925
01:50:38,880 --> 01:50:40,639
willing to continue with it i'm happy to

2926
01:50:40,639 --> 01:50:42,000
take it over

2927
01:50:42,000 --> 01:50:44,000
but yeah regardless of what state it's

2928
01:50:44,000 --> 01:50:45,520
in i think we should just adopt it and

2929
01:50:45,520 --> 01:50:47,760
go from there

2930
01:50:47,760 --> 01:50:51,280
okay i will request a call for adoption

2931
01:50:51,280 --> 01:50:55,119
august will bump the delivery date out

2932
01:50:55,119 --> 01:50:56,080
into

2933
01:50:56,080 --> 01:50:58,719
next year

2934
01:51:01,520 --> 01:51:03,679
mid next year

2935
01:51:03,679 --> 01:51:05,119
we can do other things for that okay

2936
01:51:05,119 --> 01:51:06,719
extra milestones

2937
01:51:06,719 --> 01:51:09,679
uh submit what do we want to submit here

2938
01:51:09,679 --> 01:51:12,000
we've got a bunch of documents don't we

2939
01:51:12,000 --> 01:51:13,840
that we have agreed are going to go i'm

2940
01:51:13,840 --> 01:51:16,320
at partial process imip

2941
01:51:16,320 --> 01:51:18,080
snooze sounds like we may be delaying

2942
01:51:18,080 --> 01:51:20,159
that a little bit just because we're um

2943
01:51:20,159 --> 01:51:22,159
all the snow stuff will

2944
01:51:22,159 --> 01:51:23,920
will happen um

2945
01:51:23,920 --> 01:51:27,199
but sieve registry

2946
01:51:28,000 --> 01:51:29,599
oh yeah yeah

2947
01:51:29,599 --> 01:51:31,199
we're not planning to take all the

2948
01:51:31,199 --> 01:51:33,520
things that are ready for working group

2949
01:51:33,520 --> 01:51:35,520
last call and make milestones for them

2950
01:51:35,520 --> 01:51:36,719
right

2951
01:51:36,719 --> 01:51:38,880
i was going to yeah there's no need for

2952
01:51:38,880 --> 01:51:41,040
that i can say it's done all right fine

2953
01:51:41,040 --> 01:51:43,280
just we just have them ready just put

2954
01:51:43,280 --> 01:51:45,280
them out for last call and and go for it

2955
01:51:45,280 --> 01:51:46,880
we don't need milestones for them all

2956
01:51:46,880 --> 01:51:49,679
right so but i will put in um

2957
01:51:49,679 --> 01:51:51,199
adopt

2958
01:51:51,199 --> 01:51:53,440
a

2959
01:51:54,560 --> 01:51:56,239
list return

2960
01:51:56,239 --> 01:51:59,678
metadata draft

2961
01:52:00,639 --> 01:52:03,840
for august

2962
01:52:06,239 --> 01:52:08,800
adopt a

2963
01:52:08,800 --> 01:52:10,960
snooze

2964
01:52:10,960 --> 01:52:11,760
map

2965
01:52:11,760 --> 01:52:14,320
draft

2966
01:52:14,719 --> 01:52:16,960
or maybe september that one might have a

2967
01:52:16,960 --> 01:52:18,320
bit more faffing before we're ready to

2968
01:52:18,320 --> 01:52:20,239
adopt

2969
01:52:20,239 --> 01:52:22,080
anything else we need is milestones for

2970
01:52:22,080 --> 01:52:24,960
extra at the moment

2971
01:52:28,480 --> 01:52:31,480
no

2972
01:52:37,920 --> 01:52:40,080
my boxes as labels i think we need to

2973
01:52:40,080 --> 01:52:42,239
discuss but you know we can discuss on

2974
01:52:42,239 --> 01:52:47,440
the main list jsp meeting anyway so cool

2975
01:52:47,760 --> 01:52:49,440
um yeah

2976
01:52:49,440 --> 01:52:51,040
all right do we have any other business

2977
01:52:51,040 --> 01:52:54,320
in our last eight minutes

2978
01:52:55,920 --> 01:52:57,440
thanks everybody

2979
01:52:57,440 --> 01:52:59,520
look at that we've pretty much landed on

2980
01:52:59,520 --> 01:53:01,280
time good work

2981
01:53:01,280 --> 01:53:04,559
enjoy the rest of your isf

2982
01:53:06,320 --> 01:53:08,639
yeah yeah

2983
01:53:09,520 --> 01:53:11,920
i'm just wondering the google gmail has

2984
01:53:11,920 --> 01:53:14,159
these x labels right they use that in

2985
01:53:14,159 --> 01:53:16,719
lieu of the mailbox labels is that the

2986
01:53:16,719 --> 01:53:19,520
similar thing that you're talking about

2987
01:53:19,520 --> 01:53:21,599
yes it works very similarly but it uses

2988
01:53:21,599 --> 01:53:23,119
labels rather than well it uses the

2989
01:53:23,119 --> 01:53:24,639
names of the mailboxes rather than the

2990
01:53:24,639 --> 01:53:28,159
ids right so what google did was it it

2991
01:53:28,159 --> 01:53:30,400
added its own things with the x dash tag

2992
01:53:30,400 --> 01:53:33,280
while the my map basic thing has the

2993
01:53:33,280 --> 01:53:36,159
labels it but it seems outlook there's

2994
01:53:36,159 --> 01:53:37,840
exchange does not really sometime back

2995
01:53:37,840 --> 01:53:39,599
when i checked it wasn't a

2996
01:53:39,599 --> 01:53:41,520
supporting some sort of labels i'm i'm

2997
01:53:41,520 --> 01:53:42,960
just that's one of the issues the

2998
01:53:42,960 --> 01:53:46,080
implementation issue that

2999
01:53:48,560 --> 01:53:50,719
wow

3000
01:53:53,599 --> 01:53:55,760
all right cool

3001
01:53:55,760 --> 01:53:58,960
i will unshare my screen

3002
01:53:58,960 --> 01:54:02,599
all right thanks everybody

3003
01:54:43,119 --> 01:54:46,119
is

3004
01:54:58,800 --> 01:55:01,800
um

