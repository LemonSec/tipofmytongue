1
00:00:33,760 --> 00:00:37,079
which fight

2
00:00:47,920 --> 00:00:51,160
thank you

3
00:01:03,039 --> 00:01:05,360
so what you're doing here

4
00:01:05,360 --> 00:01:07,040
that's good good

5
00:01:07,040 --> 00:01:09,439
okay

6
00:01:10,400 --> 00:01:15,280
good afternoon welcome to msr6 both

7
00:01:15,280 --> 00:01:17,439
please take your seat put your chair

8
00:01:17,439 --> 00:01:19,680
chair in upright position

9
00:01:19,680 --> 00:01:21,840
put your phone in your airplane mode or

10
00:01:21,840 --> 00:01:24,400
at least to silent mode please

11
00:01:24,400 --> 00:01:26,320
because this session is being recorded

12
00:01:26,320 --> 00:01:30,798
and we don't need any musical soundtrack

13
00:01:30,880 --> 00:01:33,280
so we have busy agenda so i guess we

14
00:01:33,280 --> 00:01:34,880
shall start

15
00:01:34,880 --> 00:01:37,439
yeah and please scan this beautiful qr

16
00:01:37,439 --> 00:01:38,320
code

17
00:01:38,320 --> 00:01:42,000
so you're on the blue sheets

18
00:01:42,560 --> 00:01:44,880
so note well

19
00:01:44,880 --> 00:01:46,799
i guess you've seen it so many times but

20
00:01:46,799 --> 00:01:49,360
i'll keep it on a screen for another few

21
00:01:49,360 --> 00:01:52,479
seconds so everyone can read it

22
00:01:52,479 --> 00:01:54,159
it's on the slide deck as well so you

23
00:01:54,159 --> 00:01:57,040
can download it

24
00:01:57,360 --> 00:02:00,240
so agenda

25
00:02:00,240 --> 00:02:02,240
we are i'm going to talk for five

26
00:02:02,240 --> 00:02:04,079
minutes maybe less

27
00:02:04,079 --> 00:02:06,560
then we have 45 minutes to talk about

28
00:02:06,560 --> 00:02:09,440
requirements and use cases

29
00:02:09,440 --> 00:02:12,239
we are going to talk for a bit about

30
00:02:12,239 --> 00:02:14,720
proposed solutions but i suggest we are

31
00:02:14,720 --> 00:02:17,520
not focusing too much on this

32
00:02:17,520 --> 00:02:18,400
and

33
00:02:18,400 --> 00:02:20,840
and during those parts

34
00:02:20,840 --> 00:02:24,560
please only ask clarifying questions

35
00:02:24,560 --> 00:02:26,239
like i don't understand what you mean by

36
00:02:26,239 --> 00:02:28,239
that and keep questions like i don't

37
00:02:28,239 --> 00:02:30,239
think it should be done that way

38
00:02:30,239 --> 00:02:31,280
to the

39
00:02:31,280 --> 00:02:33,599
second part of the session we're gonna

40
00:02:33,599 --> 00:02:36,319
have open mic discussion then we'll talk

41
00:02:36,319 --> 00:02:38,560
about charter and

42
00:02:38,560 --> 00:02:41,599
hopefully make some decisions

43
00:02:41,599 --> 00:02:42,560
uh

44
00:02:42,560 --> 00:02:45,120
please because we only have two hours

45
00:02:45,120 --> 00:02:46,560
and i suspect

46
00:02:46,560 --> 00:02:48,720
most people here could talk about on

47
00:02:48,720 --> 00:02:52,239
this topic for like a couple of weeks

48
00:02:52,239 --> 00:02:55,440
please keep your comments focused and if

49
00:02:55,440 --> 00:02:57,599
you notice the first slide

50
00:02:57,599 --> 00:02:59,760
we do not want to talk about

51
00:02:59,760 --> 00:03:02,959
how before we discuss should we

52
00:03:02,959 --> 00:03:04,800
right so

53
00:03:04,800 --> 00:03:07,120
what we need to actually

54
00:03:07,120 --> 00:03:10,319
agree right now is is this problem worth

55
00:03:10,319 --> 00:03:13,280
solving okay is it a problem do we want

56
00:03:13,280 --> 00:03:14,560
to solve it

57
00:03:14,560 --> 00:03:16,840
do we want to solve it at

58
00:03:16,840 --> 00:03:21,120
ietf and if answer is yes then where

59
00:03:21,120 --> 00:03:23,599
exactly are we going to solve it are we

60
00:03:23,599 --> 00:03:25,680
going to use existing venue or we need

61
00:03:25,680 --> 00:03:27,599
to create a new one

62
00:03:27,599 --> 00:03:30,319
and if you answer if you find answer to

63
00:03:30,319 --> 00:03:33,440
that question we can discuss about

64
00:03:33,440 --> 00:03:36,159
uh charter and deliverables and all

65
00:03:36,159 --> 00:03:38,000
those things so please keep this in mind

66
00:03:38,000 --> 00:03:41,040
right let's refrain from discussing

67
00:03:41,040 --> 00:03:43,519
details of the solution because if we

68
00:03:43,519 --> 00:03:45,840
decide to form a working group it will

69
00:03:45,840 --> 00:03:48,159
be working group job not the task of

70
00:03:48,159 --> 00:03:49,920
this both

71
00:03:49,920 --> 00:03:51,200
uh

72
00:03:51,200 --> 00:03:54,239
so i think

73
00:03:54,239 --> 00:03:56,560
actually that's all i have

74
00:03:56,560 --> 00:03:57,760
any comments

75
00:03:57,760 --> 00:03:59,760
uh so just one important thing like if

76
00:03:59,760 --> 00:04:02,000
you're going to join the mic line please

77
00:04:02,000 --> 00:04:03,040
use the

78
00:04:03,040 --> 00:04:05,200
meet echolite client if you're local to

79
00:04:05,200 --> 00:04:06,400
join the line

80
00:04:06,400 --> 00:04:08,720
uh so we can kind of manage between the

81
00:04:08,720 --> 00:04:10,159
remote and local lines thank you very

82
00:04:10,159 --> 00:04:12,400
much

83
00:04:12,840 --> 00:04:16,959
okay and the first presentation

84
00:04:16,959 --> 00:04:19,040
let me

85
00:04:19,040 --> 00:04:23,759
msr use cases right

86
00:04:24,880 --> 00:04:28,240
please come here stay in this pink cross

87
00:04:28,240 --> 00:04:29,360
so people

88
00:04:29,360 --> 00:04:31,520
remote people can see you

89
00:04:31,520 --> 00:04:32,639
i

90
00:04:32,639 --> 00:04:34,560
and i will be your

91
00:04:34,560 --> 00:04:37,520
voice controlled interface to the sides

92
00:04:37,520 --> 00:04:40,000
timer

93
00:04:40,560 --> 00:04:43,560
15.

94
00:04:48,570 --> 00:04:51,759
[Music]

95
00:04:51,840 --> 00:04:55,479
if you want to look at the slides

96
00:05:04,320 --> 00:05:07,719
can you hear me

97
00:05:10,000 --> 00:05:13,440
hello oh yes no

98
00:05:15,360 --> 00:05:18,080
uh okay

99
00:05:18,160 --> 00:05:21,759
okay sure uh good afternoon everyone

100
00:05:21,759 --> 00:05:23,199
here

101
00:05:23,199 --> 00:05:25,440
on behalf of the author list i'm going

102
00:05:25,440 --> 00:05:28,800
to talk about the msr6 use cases

103
00:05:28,800 --> 00:05:30,720
i'm a tng

104
00:05:30,720 --> 00:05:31,600
and

105
00:05:31,600 --> 00:05:32,720
this is

106
00:05:32,720 --> 00:05:36,080
some work just is derived based on the

107
00:05:36,080 --> 00:05:38,479
mailing alias the the sun meeting and

108
00:05:38,479 --> 00:05:40,880
all the contributions from different uh

109
00:05:40,880 --> 00:05:44,320
people so here i'm uh presenting

110
00:05:44,320 --> 00:05:47,440
uh can you do the next one

111
00:05:48,800 --> 00:05:50,960
next slide yeah please oh yeah

112
00:05:50,960 --> 00:05:52,880
um from the

113
00:05:52,880 --> 00:05:54,560
meeting uh one

114
00:05:54,560 --> 00:05:55,759
one one

115
00:05:55,759 --> 00:05:59,440
two and also the melee discussion about

116
00:05:59,440 --> 00:06:01,520
the the use cases and all the

117
00:06:01,520 --> 00:06:02,800
requirement

118
00:06:02,800 --> 00:06:04,160
objectives

119
00:06:04,160 --> 00:06:07,600
and the team has already have already

120
00:06:07,600 --> 00:06:11,199
laid a solid foundation on uh what will

121
00:06:11,199 --> 00:06:14,880
be uh achieved what will be pursued and

122
00:06:14,880 --> 00:06:18,160
all the you know objectives and uh

123
00:06:18,160 --> 00:06:19,440
requirements

124
00:06:19,440 --> 00:06:20,479
so

125
00:06:20,479 --> 00:06:23,360
for the problem statement so um

126
00:06:23,360 --> 00:06:25,360
hopefully is uh

127
00:06:25,360 --> 00:06:27,360
you at least to get some background

128
00:06:27,360 --> 00:06:29,919
about that things here i will just uh

129
00:06:29,919 --> 00:06:33,039
give a uh some sort of a summary of what

130
00:06:33,039 --> 00:06:34,800
will be the objective requirement to be

131
00:06:34,800 --> 00:06:36,240
achieved

132
00:06:36,240 --> 00:06:39,520
uh what is uh we want to get the uh the

133
00:06:39,520 --> 00:06:40,800
first one

134
00:06:40,800 --> 00:06:41,759
is

135
00:06:41,759 --> 00:06:44,479
the native so basically we want this one

136
00:06:44,479 --> 00:06:47,120
to be done on the native ipv6 so it's

137
00:06:47,120 --> 00:06:50,000
not likely in cap over in cap over incap

138
00:06:50,000 --> 00:06:52,240
the the second one is the stateless so

139
00:06:52,240 --> 00:06:55,599
this case here we do not want to get the

140
00:06:55,599 --> 00:06:58,479
gigantic number of software states to be

141
00:06:58,479 --> 00:06:59,759
refreshed

142
00:06:59,759 --> 00:07:02,880
every sometime in the multicast domains

143
00:07:02,880 --> 00:07:04,240
the stateless

144
00:07:04,240 --> 00:07:06,240
the third one is a large skill so it's

145
00:07:06,240 --> 00:07:08,960
like we want to handle a large scale of

146
00:07:08,960 --> 00:07:11,520
networks not just like a small

147
00:07:11,520 --> 00:07:13,280
and in the large scale network we're

148
00:07:13,280 --> 00:07:15,680
going to have a new numerous multicast

149
00:07:15,680 --> 00:07:17,280
streams

150
00:07:17,280 --> 00:07:20,240
and also we have some other requirements

151
00:07:20,240 --> 00:07:23,199
like the the especially what we're going

152
00:07:23,199 --> 00:07:24,319
to uh when i mentioned about the

153
00:07:24,319 --> 00:07:25,840
technical domain is some extreme

154
00:07:25,840 --> 00:07:27,280
dynamics

155
00:07:27,280 --> 00:07:29,520
in the subscriber uh drawing and the

156
00:07:29,520 --> 00:07:31,039
living

157
00:07:31,039 --> 00:07:34,479
and and also we want to use the msr6

158
00:07:34,479 --> 00:07:36,639
this type of mechanism to get some

159
00:07:36,639 --> 00:07:39,680
add-on value and the features

160
00:07:39,680 --> 00:07:41,039
that can be

161
00:07:41,039 --> 00:07:42,800
coupled together

162
00:07:42,800 --> 00:07:44,960
okay so for all the objective

163
00:07:44,960 --> 00:07:46,639
requirements in mind

164
00:07:46,639 --> 00:07:50,479
uh today i'm going to present four cases

165
00:07:50,479 --> 00:07:52,960
uh from different categories the first

166
00:07:52,960 --> 00:07:55,840
one is from the telco domain

167
00:07:55,840 --> 00:07:58,400
it's like a 5g transport network the

168
00:07:58,400 --> 00:08:00,720
second one is from the idc network for

169
00:08:00,720 --> 00:08:02,479
the large-scale dc

170
00:08:02,479 --> 00:08:04,160
the third one is for the enterprise

171
00:08:04,160 --> 00:08:06,400
network it's like the vertical

172
00:08:06,400 --> 00:08:08,879
uh is a is the case for civilians

173
00:08:08,879 --> 00:08:11,199
cameras the last one is like a holistic

174
00:08:11,199 --> 00:08:14,400
use case that is called sd1 but it's

175
00:08:14,400 --> 00:08:16,319
going to span

176
00:08:16,319 --> 00:08:19,520
the teleco domain network uh

177
00:08:19,520 --> 00:08:21,840
cloud network in the price and also

178
00:08:21,840 --> 00:08:22,960
public

179
00:08:22,960 --> 00:08:25,599
okay i can go to the next one

180
00:08:25,599 --> 00:08:28,479
the the first use case is the the

181
00:08:28,479 --> 00:08:31,919
multicast for toggle as we know uh with

182
00:08:31,919 --> 00:08:35,200
advancement of 5g technology and its

183
00:08:35,200 --> 00:08:37,440
commercial deployment

184
00:08:37,440 --> 00:08:40,240
the multicast communication start to

185
00:08:40,240 --> 00:08:42,399
become a challenging issue for mobile

186
00:08:42,399 --> 00:08:44,640
operators

187
00:08:44,640 --> 00:08:46,160
3gpp

188
00:08:46,160 --> 00:08:50,399
has already 3gpp has already defined

189
00:08:50,399 --> 00:08:53,279
in the ts23247

190
00:08:53,279 --> 00:08:58,080
enhanced mbs architecture to handle

191
00:08:58,080 --> 00:09:00,399
to handle the different cases if you

192
00:09:00,399 --> 00:09:03,279
look at the top left picture that is the

193
00:09:03,279 --> 00:09:04,240
one

194
00:09:04,240 --> 00:09:06,560
in the 23.247

195
00:09:06,560 --> 00:09:09,040
i'm not sure if the the function small

196
00:09:09,040 --> 00:09:11,920
or not but you can focus on the right

197
00:09:11,920 --> 00:09:14,399
circle throughout the bottom part

198
00:09:14,399 --> 00:09:17,120
of the top left picture

199
00:09:17,120 --> 00:09:20,560
and here you can see the mbupf and look

200
00:09:20,560 --> 00:09:23,760
at there this uh n3mb interface is at

201
00:09:23,760 --> 00:09:26,240
the very bottom line and toward the left

202
00:09:26,240 --> 00:09:29,519
side to the g node b that is the for the

203
00:09:29,519 --> 00:09:31,839
multicast communication

204
00:09:31,839 --> 00:09:35,360
if they zoom if you if we zoom that one

205
00:09:35,360 --> 00:09:38,080
in into a large picture that will be

206
00:09:38,080 --> 00:09:40,240
shown at the uh

207
00:09:40,240 --> 00:09:41,920
the bottom left

208
00:09:41,920 --> 00:09:45,760
but the bottom left is a still a uh very

209
00:09:45,760 --> 00:09:47,600
high level architecture like a thirty

210
00:09:47,600 --> 00:09:49,440
thousand football view

211
00:09:49,440 --> 00:09:52,800
of a it is a real deployment but here we

212
00:09:52,800 --> 00:09:55,519
just give a very high level view so you

213
00:09:55,519 --> 00:09:58,080
can see all kind of the the ring from

214
00:09:58,080 --> 00:09:59,760
the core from the

215
00:09:59,760 --> 00:10:02,720
backbone from aggregation from the edge

216
00:10:02,720 --> 00:10:05,600
until the g node b if you look at the

217
00:10:05,600 --> 00:10:08,800
the magnitude of order on those type of

218
00:10:08,800 --> 00:10:09,839
rings

219
00:10:09,839 --> 00:10:11,920
okay the you know the ring you can

220
00:10:11,920 --> 00:10:14,320
consider this one is like a multicast

221
00:10:14,320 --> 00:10:18,320
tree but instead of a stick or branch of

222
00:10:18,320 --> 00:10:20,720
a tree here you can consider it like a

223
00:10:20,720 --> 00:10:23,920
ruin so each ring has a branch

224
00:10:23,920 --> 00:10:26,160
and then this is just like a

225
00:10:26,160 --> 00:10:29,200
a chain of rings but it forms a tree and

226
00:10:29,200 --> 00:10:33,200
rooted on the right hand side like a ups

227
00:10:33,200 --> 00:10:35,600
okay and then when you put everything

228
00:10:35,600 --> 00:10:37,920
together here it's on the ballpark

229
00:10:37,920 --> 00:10:43,120
around the 30 000 level okay so it's

230
00:10:43,120 --> 00:10:44,880
it's so huge

231
00:10:44,880 --> 00:10:48,320
it's so huge it's not just so simple to

232
00:10:48,320 --> 00:10:50,079
handle this type of things in the

233
00:10:50,079 --> 00:10:52,880
regular uh you know our existing uh

234
00:10:52,880 --> 00:10:56,160
solution of multicast okay

235
00:10:56,160 --> 00:10:59,040
and remember here this is for the taggle

236
00:10:59,040 --> 00:11:01,519
domain you know for tempo domain and

237
00:11:01,519 --> 00:11:03,920
also for 5g you can consider there are a

238
00:11:03,920 --> 00:11:06,399
lot of requirements for the dynamics

239
00:11:06,399 --> 00:11:08,480
like the mobile subscriber their

240
00:11:08,480 --> 00:11:10,320
tendency to move

241
00:11:10,320 --> 00:11:12,240
uh between uh

242
00:11:12,240 --> 00:11:15,279
from one g note b to the next one where

243
00:11:15,279 --> 00:11:19,440
5g has specified the different ssc mode

244
00:11:19,440 --> 00:11:21,519
service at the session continuity mode

245
00:11:21,519 --> 00:11:23,760
one two three so for those type of

246
00:11:23,760 --> 00:11:25,600
things you're going to have some anchor

247
00:11:25,600 --> 00:11:26,959
pd

248
00:11:26,959 --> 00:11:30,880
the psa on the ups side so this one will

249
00:11:30,880 --> 00:11:32,480
introduce another

250
00:11:32,480 --> 00:11:35,519
dimension of dynamics so in that case

251
00:11:35,519 --> 00:11:37,519
even if you try to you know you can you

252
00:11:37,519 --> 00:11:40,399
want to do divide and conquer to put

253
00:11:40,399 --> 00:11:43,680
this like a 30 thousand

254
00:11:43,680 --> 00:11:46,240
node network into some clusters but the

255
00:11:46,240 --> 00:11:48,560
thing here is like it's going to be very

256
00:11:48,560 --> 00:11:50,320
dynamic it's not

257
00:11:50,320 --> 00:11:52,880
an easy job maybe you need i don't know

258
00:11:52,880 --> 00:11:55,839
how many csies but unless

259
00:11:55,839 --> 00:11:56,800
something

260
00:11:56,800 --> 00:11:58,880
to handle the whole thing so it's going

261
00:11:58,880 --> 00:12:02,160
to introduce the the burden of opex

262
00:12:02,160 --> 00:12:04,720
remember 5g capex is already a big

263
00:12:04,720 --> 00:12:06,639
burden for mobile operators

264
00:12:06,639 --> 00:12:09,200
so but put everything together

265
00:12:09,200 --> 00:12:11,839
okay so you're you're going to know okay

266
00:12:11,839 --> 00:12:15,040
what we want to achieve that is on the

267
00:12:15,040 --> 00:12:18,000
bottom right there's like to avoid poor

268
00:12:18,000 --> 00:12:19,279
flow state

269
00:12:19,279 --> 00:12:21,680
to uh prefer selective

270
00:12:21,680 --> 00:12:24,240
over uh inclusive just this one just so

271
00:12:24,240 --> 00:12:27,040
you can consider like the dvmrp or the

272
00:12:27,040 --> 00:12:30,079
pin dense mode those several things

273
00:12:30,079 --> 00:12:33,040
or worse the sparse mode and also uh we

274
00:12:33,040 --> 00:12:35,279
want to avoid unnecessary pack the

275
00:12:35,279 --> 00:12:36,560
in-cap

276
00:12:36,560 --> 00:12:38,639
okay this is a tackle domain since you

277
00:12:38,639 --> 00:12:42,560
know it's it's it's a real and it has a

278
00:12:42,560 --> 00:12:45,600
lot of requirements okay including the

279
00:12:45,600 --> 00:12:47,760
tackle side the mobile side and the

280
00:12:47,760 --> 00:12:49,120
transport side

281
00:12:49,120 --> 00:12:53,320
okay yeah next one

282
00:12:53,600 --> 00:12:54,639
next case

283
00:12:54,639 --> 00:12:56,160
yeah

284
00:12:56,160 --> 00:13:00,079
okay uh this one no no not this one the

285
00:13:00,079 --> 00:13:01,600
dc

286
00:13:01,600 --> 00:13:02,480
okay

287
00:13:02,480 --> 00:13:04,160
oh yeah thank you

288
00:13:04,160 --> 00:13:07,200
this is another case it's also a real

289
00:13:07,200 --> 00:13:08,160
things

290
00:13:08,160 --> 00:13:10,160
you know probably are familiar with the

291
00:13:10,160 --> 00:13:12,880
the global uh the mobile network

292
00:13:12,880 --> 00:13:15,120
operator especially north america or

293
00:13:15,120 --> 00:13:17,440
europe and normally they're going to

294
00:13:17,440 --> 00:13:20,399
have their own network cloud

295
00:13:20,399 --> 00:13:24,160
to run the 4g or even 5g virtualized

296
00:13:24,160 --> 00:13:25,200
support

297
00:13:25,200 --> 00:13:28,399
but in in mainland china the mobile

298
00:13:28,399 --> 00:13:32,000
operator actually owns both a network

299
00:13:32,000 --> 00:13:34,160
cloud and public cloud here in the

300
00:13:34,160 --> 00:13:37,200
public cloud is owned by public

301
00:13:37,200 --> 00:13:40,720
hyperscalers so in those things we have

302
00:13:40,720 --> 00:13:43,680
extremely large dc networks to handle

303
00:13:43,680 --> 00:13:45,360
the 5g

304
00:13:45,360 --> 00:13:47,199
core network you can consider you know

305
00:13:47,199 --> 00:13:49,760
the subscribers in our case you know we

306
00:13:49,760 --> 00:13:51,920
are the largest uh mobile subscriber in

307
00:13:51,920 --> 00:13:54,000
the world in terms of the

308
00:13:54,000 --> 00:13:56,959
numbers it's like a a billion so about a

309
00:13:56,959 --> 00:13:58,480
billion subscribers

310
00:13:58,480 --> 00:13:59,839
and then we have

311
00:13:59,839 --> 00:14:02,160
some number of uh

312
00:14:02,160 --> 00:14:05,519
dc network to handle the 5g cores so you

313
00:14:05,519 --> 00:14:07,920
can you can know on ballpark uh how

314
00:14:07,920 --> 00:14:09,199
large it will be

315
00:14:09,199 --> 00:14:11,920
and also there are some other like hpc

316
00:14:11,920 --> 00:14:12,959
uh

317
00:14:12,959 --> 00:14:16,240
applications that require the large

318
00:14:16,240 --> 00:14:18,800
required multicast communication to

319
00:14:18,800 --> 00:14:20,720
improve the efficiency so when you

320
00:14:20,720 --> 00:14:23,920
consider this one uh together so this is

321
00:14:23,920 --> 00:14:25,920
another you know we put a number there

322
00:14:25,920 --> 00:14:28,800
like a 30k uh switches layer three

323
00:14:28,800 --> 00:14:33,199
switches with the links on 60 k so when

324
00:14:33,199 --> 00:14:35,120
you put everything together and also

325
00:14:35,120 --> 00:14:38,000
consider requirement we specific we

326
00:14:38,000 --> 00:14:40,320
specified at the beginning

327
00:14:40,320 --> 00:14:44,959
scale scalable and stateless native ip

328
00:14:44,959 --> 00:14:47,360
dynamics all kinds together so this is

329
00:14:47,360 --> 00:14:49,839
another challenge use case we have to

330
00:14:49,839 --> 00:14:51,120
face

331
00:14:51,120 --> 00:14:52,320
next

332
00:14:52,320 --> 00:14:54,079
you know for this one is for the

333
00:14:54,079 --> 00:14:56,880
enterprise or the vertical so this is

334
00:14:56,880 --> 00:14:59,199
like the civilian camera um there are

335
00:14:59,199 --> 00:15:01,680
some public stats i can i found uh

336
00:15:01,680 --> 00:15:04,560
google it's like uh in in beijing it has

337
00:15:04,560 --> 00:15:06,720
like eight million cameras

338
00:15:06,720 --> 00:15:09,440
in uk london it has close to a million

339
00:15:09,440 --> 00:15:11,120
uh surveilling cameras

340
00:15:11,120 --> 00:15:12,560
so depending on the government

341
00:15:12,560 --> 00:15:14,959
regulation or local governments or

342
00:15:14,959 --> 00:15:18,320
policies so the the data captured by

343
00:15:18,320 --> 00:15:19,600
those uh

344
00:15:19,600 --> 00:15:23,120
such a large number of cameras will be

345
00:15:23,120 --> 00:15:26,240
stained towards some places are some

346
00:15:26,240 --> 00:15:28,800
analyzers this is the picture on the

347
00:15:28,800 --> 00:15:32,079
left hand side so if those information

348
00:15:32,079 --> 00:15:35,120
stand about those analyzers

349
00:15:35,120 --> 00:15:37,680
this amount of information will be very

350
00:15:37,680 --> 00:15:40,160
large and the number of modern streams

351
00:15:40,160 --> 00:15:43,600
will be huge so for this case for this

352
00:15:43,600 --> 00:15:46,160
case we do not want to we do not want

353
00:15:46,160 --> 00:15:48,800
the network itself to be burdened with

354
00:15:48,800 --> 00:15:50,000
the states

355
00:15:50,000 --> 00:15:53,040
so uh for this particular case is also a

356
00:15:53,040 --> 00:15:56,160
real requirement case now we want to

357
00:15:56,160 --> 00:15:59,279
have the host the host can be the camera

358
00:15:59,279 --> 00:16:02,800
or the analyzer to associate together

359
00:16:02,800 --> 00:16:05,440
without going through the the regular

360
00:16:05,440 --> 00:16:08,320
ignp drawing mld join those type of

361
00:16:08,320 --> 00:16:10,800
things but this does

362
00:16:10,800 --> 00:16:14,560
require the pre-config to associate the

363
00:16:14,560 --> 00:16:16,560
host together

364
00:16:16,560 --> 00:16:17,839
okay

365
00:16:17,839 --> 00:16:18,959
yeah

366
00:16:18,959 --> 00:16:21,440
you know consider all the three cases

367
00:16:21,440 --> 00:16:23,680
you know in the teleco network

368
00:16:23,680 --> 00:16:27,040
in the in a dc network

369
00:16:27,040 --> 00:16:30,320
and also on the enterprise of vertical

370
00:16:30,320 --> 00:16:33,120
so the last case is like a holistic use

371
00:16:33,120 --> 00:16:36,800
case with add-on feature and values

372
00:16:36,800 --> 00:16:40,079
we are talking about sd1 sd1 itself is

373
00:16:40,079 --> 00:16:43,199
is nothing new but here when the skill

374
00:16:43,199 --> 00:16:46,079
goes up you know this is another real

375
00:16:46,079 --> 00:16:49,040
for one large enterprise company in

376
00:16:49,040 --> 00:16:52,880
china it has cpesd1 node

377
00:16:52,880 --> 00:16:55,199
up to the national uh the nationwide up

378
00:16:55,199 --> 00:16:58,880
to 100k cpes and those cpes will be

379
00:16:58,880 --> 00:17:00,240
connected

380
00:17:00,240 --> 00:17:02,880
through like a tow code domain through

381
00:17:02,880 --> 00:17:05,359
enterprise because they know they have

382
00:17:05,359 --> 00:17:08,240
the uh their branch office

383
00:17:08,240 --> 00:17:10,400
and through uh the cloud they may have

384
00:17:10,400 --> 00:17:14,160
some uh virtual uh cps running on the

385
00:17:14,160 --> 00:17:14,959
the

386
00:17:14,959 --> 00:17:17,039
the public cloud and

387
00:17:17,039 --> 00:17:19,119
those things will be connected to the

388
00:17:19,119 --> 00:17:21,039
public internet

389
00:17:21,039 --> 00:17:24,400
so this is really a big you know a big

390
00:17:24,400 --> 00:17:25,599
deployment

391
00:17:25,599 --> 00:17:28,319
and remember you know when those things

392
00:17:28,319 --> 00:17:30,480
are connected uh together this through

393
00:17:30,480 --> 00:17:33,679
they go through the public internet so

394
00:17:33,679 --> 00:17:36,400
there is a requirement for the uh

395
00:17:36,400 --> 00:17:38,400
security you do not want to expose

396
00:17:38,400 --> 00:17:41,280
especially for the enterprise

397
00:17:41,280 --> 00:17:43,280
so in this case

398
00:17:43,280 --> 00:17:45,280
so in this case we want to have some

399
00:17:45,280 --> 00:17:47,360
sort of way to encrypt

400
00:17:47,360 --> 00:17:49,840
okay so remember we have the uh

401
00:17:49,840 --> 00:17:52,080
requirement objective to use the native

402
00:17:52,080 --> 00:17:58,240
ipv6 so for msr6 it's going to have the

403
00:17:58,240 --> 00:18:01,760
advantage just to um to leverage to to

404
00:18:01,760 --> 00:18:04,880
leverage ipv6 v6 extension header the

405
00:18:04,880 --> 00:18:08,160
esp and the eheader to do this type of

406
00:18:08,160 --> 00:18:11,120
encryption so for this holistic case you

407
00:18:11,120 --> 00:18:14,400
have all the things uh you want for the

408
00:18:14,400 --> 00:18:17,760
scalable stateless the native dynamics

409
00:18:17,760 --> 00:18:22,000
of msr6 plus the uh the natural

410
00:18:22,000 --> 00:18:24,320
encryption decryption embedded with the

411
00:18:24,320 --> 00:18:26,480
ipv6 extension header

412
00:18:26,480 --> 00:18:29,280
the next one so the next one is the

413
00:18:29,280 --> 00:18:32,080
summary so here is the use case problem

414
00:18:32,080 --> 00:18:35,440
statement has been uh laid down by the

415
00:18:35,440 --> 00:18:40,720
colleagues and on the email alias and

416
00:18:43,919 --> 00:18:46,640
okay and you know here it's just like

417
00:18:46,640 --> 00:18:48,400
the the summary uh what i want to

418
00:18:48,400 --> 00:18:51,039
achieve the one is the native ip6 is the

419
00:18:51,039 --> 00:18:53,600
required and also the status is

420
00:18:53,600 --> 00:18:55,760
important but remember you know

421
00:18:55,760 --> 00:18:57,679
everything together we have like the

422
00:18:57,679 --> 00:18:59,120
dynamics

423
00:18:59,120 --> 00:19:01,600
and some add-on features

424
00:19:01,600 --> 00:19:02,559
so

425
00:19:02,559 --> 00:19:05,360
this yeah so this important things it

426
00:19:05,360 --> 00:19:07,520
has all the objective requirement

427
00:19:07,520 --> 00:19:09,280
clearly a setup

428
00:19:09,280 --> 00:19:12,799
so yeah hopefully it's uh

429
00:19:12,799 --> 00:19:15,600
yeah hopefully you'll be

430
00:19:15,600 --> 00:19:19,840
yeah you'll get it yeah thanks go ahead

431
00:19:21,360 --> 00:19:25,600
no greg your mic is not on i think it uh

432
00:19:25,600 --> 00:19:28,240
no it's not

433
00:19:29,440 --> 00:19:30,960
okay

434
00:19:30,960 --> 00:19:32,240
better

435
00:19:32,240 --> 00:19:34,080
uh my name's greg

436
00:19:34,080 --> 00:19:35,760
can you define what you mean by native

437
00:19:35,760 --> 00:19:37,679
ipv6

438
00:19:37,679 --> 00:19:38,799
do

439
00:19:38,799 --> 00:19:40,480
can you please define what you mean by

440
00:19:40,480 --> 00:19:43,840
native ipv6 oh it's just like uh using

441
00:19:43,840 --> 00:19:46,400
the activated header using sv header

442
00:19:46,400 --> 00:19:48,720
without the end cap you know it's like

443
00:19:48,720 --> 00:19:50,640
are you forwarding on the v6

444
00:19:50,640 --> 00:19:54,880
v600 exactly exactly like sources

445
00:19:54,880 --> 00:19:58,160
yes and all srv6 all kinds of native

446
00:19:58,160 --> 00:19:59,039
but

447
00:19:59,039 --> 00:20:00,480
but you're replicating there's nothing

448
00:20:00,480 --> 00:20:03,200
replicating in ipv6 you're using it

449
00:20:03,200 --> 00:20:07,120
extension so it's not necessarily native

450
00:20:07,120 --> 00:20:09,200
you have new forwarding information

451
00:20:09,200 --> 00:20:10,960
that's really no different than an

452
00:20:10,960 --> 00:20:13,200
encapsulation putting it in extension

453
00:20:13,200 --> 00:20:14,799
header doesn't make it native it just

454
00:20:14,799 --> 00:20:17,200
relocates it in the header

455
00:20:17,200 --> 00:20:19,120
yeah you can't consider but normally

456
00:20:19,120 --> 00:20:20,960
most of the native part is we're going

457
00:20:20,960 --> 00:20:23,440
to expose the epiphysis header

458
00:20:23,440 --> 00:20:25,200
throughout the rotting side so when they

459
00:20:25,200 --> 00:20:27,280
look at is not looking at some tunnel

460
00:20:27,280 --> 00:20:29,200
okay there's something and then decap

461
00:20:29,200 --> 00:20:33,440
and find some inside so that is you know

462
00:20:33,440 --> 00:20:35,120
yeah go ahead

463
00:20:35,120 --> 00:20:37,840
hi andrew alston i'm just wearing my

464
00:20:37,840 --> 00:20:40,799
operator hat um

465
00:20:40,799 --> 00:20:42,919
in the you referred to

466
00:20:42,919 --> 00:20:45,039
non-encapsulated now if you go back to

467
00:20:45,039 --> 00:20:48,158
the previous slide

468
00:20:48,799 --> 00:20:52,159
that shows the public internet

469
00:20:52,159 --> 00:20:54,480
that there

470
00:20:54,480 --> 00:20:57,120
is by my reading

471
00:20:57,120 --> 00:20:59,600
a violation

472
00:20:59,600 --> 00:21:02,640
of the limited domain

473
00:21:02,640 --> 00:21:08,159
as specified in the srv6 standards

474
00:21:08,159 --> 00:21:11,039
and so i'm trying to understand how

475
00:21:11,039 --> 00:21:13,520
you've got a use case there

476
00:21:13,520 --> 00:21:15,679
that does clearly

477
00:21:15,679 --> 00:21:18,880
violate a current rfc

478
00:21:18,880 --> 00:21:19,679
uh

479
00:21:19,679 --> 00:21:21,600
which are here well remember the

480
00:21:21,600 --> 00:21:23,679
extension header is something like

481
00:21:23,679 --> 00:21:25,919
like a proposal uh like uh proposed

482
00:21:25,919 --> 00:21:28,799
solutions and the the colleague earth

483
00:21:28,799 --> 00:21:31,440
and will be giving well i'll be giving

484
00:21:31,440 --> 00:21:34,159
some uh description of those things so

485
00:21:34,159 --> 00:21:37,760
which after talking about that in rfc 50

486
00:21:37,760 --> 00:21:38,640
um

487
00:21:38,640 --> 00:21:40,000
i think uh

488
00:21:40,000 --> 00:21:41,760
andrew right like i think you have a

489
00:21:41,760 --> 00:21:43,280
point but can we have that in the open

490
00:21:43,280 --> 00:21:44,960
mic discussion because i i think like

491
00:21:44,960 --> 00:21:46,720
the use case itself doesn't violate like

492
00:21:46,720 --> 00:21:48,559
maybe a proposed solution might violate

493
00:21:48,559 --> 00:21:50,320
like you know not encapsulating it but

494
00:21:50,320 --> 00:21:52,159
that's a use case it's a use case right

495
00:21:52,159 --> 00:21:54,400
so i i do get your point but we can have

496
00:21:54,400 --> 00:21:56,159
that in the open mic discussion right

497
00:21:56,159 --> 00:21:57,919
there's nothing that can be clarified

498
00:21:57,919 --> 00:21:59,600
and i'm happy with that okay thank you

499
00:21:59,600 --> 00:22:02,080
okay thank you let's take go ahead

500
00:22:02,080 --> 00:22:05,039
uh stigmas uh just a clarification i

501
00:22:05,039 --> 00:22:07,280
hope you can clarify um you talk about

502
00:22:07,280 --> 00:22:09,679
the size of the networks they didn't say

503
00:22:09,679 --> 00:22:12,080
anything about the size of the multicast

504
00:22:12,080 --> 00:22:15,200
tree or or bandwidth or how many flows

505
00:22:15,200 --> 00:22:16,480
you would have in the network so they

506
00:22:16,480 --> 00:22:19,280
have some thoughts on that

507
00:22:19,280 --> 00:22:21,760
you want well are you talking about the

508
00:22:21,760 --> 00:22:24,480
network slicing to divide and conquer to

509
00:22:24,480 --> 00:22:26,480
make a large domain into like sub

510
00:22:26,480 --> 00:22:27,360
domains

511
00:22:27,360 --> 00:22:29,600
yeah i think uh his question is like

512
00:22:29,600 --> 00:22:31,679
what is the size of the multicast tree

513
00:22:31,679 --> 00:22:34,400
yeah oh the size of multicast streams

514
00:22:34,400 --> 00:22:36,799
okay if you look at the the first uh the

515
00:22:36,799 --> 00:22:39,039
use case for telco and then we have to

516
00:22:39,039 --> 00:22:41,440
give the ballpark oh can you uh can you

517
00:22:41,440 --> 00:22:42,960
go to the

518
00:22:42,960 --> 00:22:45,520
the the teleco case uh we have to give

519
00:22:45,520 --> 00:22:49,600
the ballpark uh no yes oh no uh one more

520
00:22:49,600 --> 00:22:52,480
no no previous previous yeah yes this

521
00:22:52,480 --> 00:22:54,159
one if you look at this one the bottom

522
00:22:54,159 --> 00:22:56,960
left one and then the ballpark for the

523
00:22:56,960 --> 00:23:00,000
the ng-run is running as ip uh uh it's a

524
00:23:00,000 --> 00:23:04,799
run ipv6 clear three it can up to 30k

525
00:23:04,799 --> 00:23:06,880
yeah and then look at all the rings like

526
00:23:06,880 --> 00:23:09,679
we have like a 10 for backbone 100 on

527
00:23:09,679 --> 00:23:12,799
aggregation and for the excess and 1k so

528
00:23:12,799 --> 00:23:16,480
this is like a chin of rings it's like a

529
00:23:16,480 --> 00:23:18,880
tree but instead of the seed or branch

530
00:23:18,880 --> 00:23:21,440
of a tree each one is like just like a

531
00:23:21,440 --> 00:23:23,760
ruin and you like a ring instead of a

532
00:23:23,760 --> 00:23:26,559
branch but those rings will form a big

533
00:23:26,559 --> 00:23:27,520
tree

534
00:23:27,520 --> 00:23:30,400
yeah but let's say for a specific flow

535
00:23:30,400 --> 00:23:32,480
we're talking about maybe 10 hosts

536
00:23:32,480 --> 00:23:34,080
receiving left flow or we're talking

537
00:23:34,080 --> 00:23:37,039
about 30 000 hosts receiving oh there's

538
00:23:37,039 --> 00:23:39,760
there's a bunch you know if you look at

539
00:23:39,760 --> 00:23:40,720
well

540
00:23:40,720 --> 00:23:42,799
it's been discussed in the previous

541
00:23:42,799 --> 00:23:45,279
assigned meeting that the two itf

542
00:23:45,279 --> 00:23:48,640
meeting ago regarding people talk

543
00:23:48,640 --> 00:23:52,080
if i remember correctly the receivers i

544
00:23:52,080 --> 00:23:53,520
think at least the 10 million or

545
00:23:53,520 --> 00:23:56,480
something i i i it's not in my mind

546
00:23:56,480 --> 00:23:58,400
right now but it's about the 10 million

547
00:23:58,400 --> 00:24:00,960
level or maybe about okay

548
00:24:00,960 --> 00:24:02,640
you know i think it's important to think

549
00:24:02,640 --> 00:24:05,200
about you know for the the solutions for

550
00:24:05,200 --> 00:24:06,799
use cases like

551
00:24:06,799 --> 00:24:09,919
right right small trees really big trees

552
00:24:09,919 --> 00:24:10,880
just a

553
00:24:10,880 --> 00:24:13,120
kind of sparse receivers like spread out

554
00:24:13,120 --> 00:24:15,039
or if almost everyone wants to receive

555
00:24:15,039 --> 00:24:17,520
right yes receive a spread out and also

556
00:24:17,520 --> 00:24:19,760
remember these mobile subscribers they

557
00:24:19,760 --> 00:24:22,720
can keep moving among different g note b

558
00:24:22,720 --> 00:24:25,440
and also 5d require ssc

559
00:24:25,440 --> 00:24:29,120
service and session continuity

560
00:24:29,760 --> 00:24:31,679
the mic line is closed just make a

561
00:24:31,679 --> 00:24:34,080
street brief statement if you have a uh

562
00:24:34,080 --> 00:24:35,679
way past the time i'll answer to the

563
00:24:35,679 --> 00:24:37,440
questions raised in my uh part of the

564
00:24:37,440 --> 00:24:39,279
presentation okay thank you thanks

565
00:24:39,279 --> 00:24:41,520
go ahead yeah so 10 million receivers i

566
00:24:41,520 --> 00:24:43,200
am assuming they are host not the end

567
00:24:43,200 --> 00:24:45,279
points so they will not participate in

568
00:24:45,279 --> 00:24:47,279
actual tree

569
00:24:47,279 --> 00:24:49,120
actually they are viewing the same

570
00:24:49,120 --> 00:24:51,279
streams but on different you know if you

571
00:24:51,279 --> 00:24:53,200
look at this on different genomic on

572
00:24:53,200 --> 00:24:54,960
different aggregation of access

573
00:24:54,960 --> 00:24:56,640
aggregation those type of rings so it's

574
00:24:56,640 --> 00:24:59,840
distributed remember here you know i can

575
00:24:59,840 --> 00:25:02,320
i can see one more thing this is within

576
00:25:02,320 --> 00:25:03,919
a city

577
00:25:03,919 --> 00:25:06,640
it's not a province or state yet

578
00:25:06,640 --> 00:25:08,559
okay perfect thank you i know we have

579
00:25:08,559 --> 00:25:09,840
the remote participants so please stay

580
00:25:09,840 --> 00:25:10,880
here oh

581
00:25:10,880 --> 00:25:12,799
uh yes no no please stay here there's

582
00:25:12,799 --> 00:25:15,200
like more questions

583
00:25:15,200 --> 00:25:17,600
yeah uh human go ahead please

584
00:25:17,600 --> 00:25:19,279
yeah can you guys hear me

585
00:25:19,279 --> 00:25:21,919
yeah thanks okay a couple of comments

586
00:25:21,919 --> 00:25:24,559
please first thing on the 5g

587
00:25:24,559 --> 00:25:26,240
use case

588
00:25:26,240 --> 00:25:28,559
as you know the g note b's or the e note

589
00:25:28,559 --> 00:25:31,840
b's they do are hosts or they do igmp or

590
00:25:31,840 --> 00:25:33,600
mld join

591
00:25:33,600 --> 00:25:35,600
to the sell side router

592
00:25:35,600 --> 00:25:38,320
and the cell start router is

593
00:25:38,320 --> 00:25:40,559
where the trio starts so

594
00:25:40,559 --> 00:25:42,159
really you shouldn't be counting the g

595
00:25:42,159 --> 00:25:43,919
note b's or e note b's because they're

596
00:25:43,919 --> 00:25:46,480
just hosts and for the tree you should

597
00:25:46,480 --> 00:25:47,440
start

598
00:25:47,440 --> 00:25:48,720
counting the

599
00:25:48,720 --> 00:25:50,320
cell side router

600
00:25:50,320 --> 00:25:53,120
because that's where the pim or mldp or

601
00:25:53,120 --> 00:25:54,880
the tree starts

602
00:25:54,880 --> 00:25:57,360
but uh my question is that this problem

603
00:25:57,360 --> 00:25:59,840
has been solved for centuries like all

604
00:25:59,840 --> 00:26:02,000
these alerts that you folks get on your

605
00:26:02,000 --> 00:26:04,880
cell phone for earthquakes for

606
00:26:04,880 --> 00:26:07,600
uh you know bad weather child abduction

607
00:26:07,600 --> 00:26:11,279
etc etc all of the star stuff are embms

608
00:26:11,279 --> 00:26:13,600
and they're multicast so every single

609
00:26:13,600 --> 00:26:17,120
major provider in the world uh does have

610
00:26:17,120 --> 00:26:20,720
multicast running for this emdms type of

611
00:26:20,720 --> 00:26:21,919
application

612
00:26:21,919 --> 00:26:23,600
which is very important for each

613
00:26:23,600 --> 00:26:26,080
government within the world so that's

614
00:26:26,080 --> 00:26:28,400
common number one and comment number two

615
00:26:28,400 --> 00:26:31,600
is with regard to your camera uh diagram

616
00:26:31,600 --> 00:26:34,240
if you can go to that one

617
00:26:34,240 --> 00:26:34,960
or

618
00:26:34,960 --> 00:26:36,559
it doesn't matter if you go there or not

619
00:26:36,559 --> 00:26:39,360
but my understanding is based on the

620
00:26:39,360 --> 00:26:41,520
multiple smart cities that we have put

621
00:26:41,520 --> 00:26:42,880
together

622
00:26:42,880 --> 00:26:45,679
the cameras they usually do unicast

623
00:26:45,679 --> 00:26:48,720
to a server so there is a server that is

624
00:26:48,720 --> 00:26:51,760
recording all these cameras real time

625
00:26:51,760 --> 00:26:54,480
and the cameras do unicast to the server

626
00:26:54,480 --> 00:26:56,000
and the reason that the cameras are

627
00:26:56,000 --> 00:26:58,000
doing unicast is because of security so

628
00:26:58,000 --> 00:27:01,440
the camera starts a ipsec tunnel to the

629
00:27:01,440 --> 00:27:04,000
server which the server terminates ipsec

630
00:27:04,000 --> 00:27:06,400
tunnel and any of the operators on

631
00:27:06,400 --> 00:27:08,640
different areas within the country that

632
00:27:08,640 --> 00:27:11,760
want to look at that a stream they do a

633
00:27:11,760 --> 00:27:14,480
join to the server that is recording

634
00:27:14,480 --> 00:27:16,720
those cameras so those cameras are not

635
00:27:16,720 --> 00:27:18,799
part of the multigas domain usually

636
00:27:18,799 --> 00:27:20,960
within the smart cities because of the

637
00:27:20,960 --> 00:27:24,080
security issues they are unicasting to

638
00:27:24,080 --> 00:27:28,720
these uh four or five data centers that

639
00:27:28,720 --> 00:27:30,799
they are recording all these uh

640
00:27:30,799 --> 00:27:34,799
streams uh live and then any uh any

641
00:27:34,799 --> 00:27:37,600
operator police ambulance whoever that

642
00:27:37,600 --> 00:27:39,120
wants to look at those

643
00:27:39,120 --> 00:27:42,399
streams government they just do a joint

644
00:27:42,399 --> 00:27:44,640
to the server not the camera

645
00:27:44,640 --> 00:27:46,480
right like but that's a different use

646
00:27:46,480 --> 00:27:47,919
case that's not the use case he's

647
00:27:47,919 --> 00:27:49,440
talking about so

648
00:27:49,440 --> 00:27:51,120
yeah i think you made a point thank you

649
00:27:51,120 --> 00:27:53,360
i think both the points are noted thank

650
00:27:53,360 --> 00:27:55,520
you

651
00:27:55,760 --> 00:27:58,879
thanks hi jen

652
00:28:12,159 --> 00:28:13,600
here i want to

653
00:28:13,600 --> 00:28:17,520
give another example for the uh

654
00:28:17,520 --> 00:28:20,320
for the lives for the multicast request

655
00:28:20,320 --> 00:28:22,159
requirement from the

656
00:28:22,159 --> 00:28:24,240
for a large large network arjun we

657
00:28:24,240 --> 00:28:27,919
cannot hear you like can you um you know

658
00:28:27,919 --> 00:28:30,000
yeah can you shout or get closer to the

659
00:28:30,000 --> 00:28:32,399
mic or i'll come back we'll take uh

660
00:28:32,399 --> 00:28:36,399
vichang and then we'll come back to you

661
00:28:38,159 --> 00:28:40,480
go ahead

662
00:28:41,919 --> 00:28:45,840
chuck could agree with me

663
00:28:46,080 --> 00:28:48,399
yeah go ahead

664
00:28:48,399 --> 00:28:49,440
okay

665
00:28:49,440 --> 00:28:51,679
i just would like to provide a little

666
00:28:51,679 --> 00:28:54,960
information about the native ip6

667
00:28:54,960 --> 00:28:56,000
so

668
00:28:56,000 --> 00:28:59,279
as you know ipv6 traffic

669
00:28:59,279 --> 00:29:00,080
in

670
00:29:00,080 --> 00:29:01,840
telecom network

671
00:29:01,840 --> 00:29:02,559
is

672
00:29:02,559 --> 00:29:05,919
increasing rapidly

673
00:29:05,919 --> 00:29:09,600
cited channel mobile as an example

674
00:29:09,600 --> 00:29:12,960
our 4g 5g network

675
00:29:12,960 --> 00:29:15,840
the ipv6 traffic

676
00:29:15,840 --> 00:29:18,158
has

677
00:29:18,320 --> 00:29:20,240
exceeded

678
00:29:20,240 --> 00:29:23,200
42

679
00:29:23,200 --> 00:29:25,039
till now

680
00:29:25,039 --> 00:29:27,360
in the near future we will

681
00:29:27,360 --> 00:29:29,919
have the opportunity to see the

682
00:29:29,919 --> 00:29:34,240
uh purely ipv6 network so if we can have

683
00:29:34,240 --> 00:29:38,080
a native app this ipv6 network

684
00:29:38,080 --> 00:29:39,360
there will be

685
00:29:39,360 --> 00:29:40,880
a

686
00:29:40,880 --> 00:29:43,200
good chance to simple

687
00:29:43,200 --> 00:29:45,520
uh simplify the

688
00:29:45,520 --> 00:29:47,360
network

689
00:29:47,360 --> 00:29:51,360
and the second one about the en bmis

690
00:29:51,360 --> 00:29:52,399
in fact

691
00:29:52,399 --> 00:29:54,399
in channel mobile we

692
00:29:54,399 --> 00:29:56,399
have already

693
00:29:56,399 --> 00:29:59,440
provided the yam dms

694
00:29:59,440 --> 00:30:00,880
services

695
00:30:00,880 --> 00:30:02,880
in china and

696
00:30:02,880 --> 00:30:05,279
for the backhoe network we have to

697
00:30:05,279 --> 00:30:07,039
support

698
00:30:07,039 --> 00:30:09,440
multicast

699
00:30:09,440 --> 00:30:11,120
because

700
00:30:11,120 --> 00:30:12,480
the

701
00:30:12,480 --> 00:30:14,159
multicast traffic

702
00:30:14,159 --> 00:30:16,320
is really big

703
00:30:16,320 --> 00:30:18,799
for 5g i think

704
00:30:18,799 --> 00:30:21,360
that would

705
00:30:21,520 --> 00:30:23,840
have the similar uh

706
00:30:23,840 --> 00:30:25,520
requirements

707
00:30:25,520 --> 00:30:27,279
so

708
00:30:27,279 --> 00:30:28,880
i didn't hear a question do you have a

709
00:30:28,880 --> 00:30:30,720
clarifying question for tianji or are

710
00:30:30,720 --> 00:30:32,399
you just agreeing with what he said

711
00:30:32,399 --> 00:30:34,559
because that's what i understand

712
00:30:34,559 --> 00:30:37,600
i just want to the response uh some

713
00:30:37,600 --> 00:30:38,799
people

714
00:30:38,799 --> 00:30:41,919
write the the question about

715
00:30:41,919 --> 00:30:44,159
the mud cast

716
00:30:44,159 --> 00:30:45,279
in

717
00:30:45,279 --> 00:30:47,279
4g

718
00:30:47,279 --> 00:30:48,799
embankments

719
00:30:48,799 --> 00:30:51,279
solutions i think i've got it

720
00:30:51,279 --> 00:30:52,960
got it and we do have time for the

721
00:30:52,960 --> 00:30:54,640
discussion but this is right now for

722
00:30:54,640 --> 00:30:56,240
clarifying questions only for this yeah

723
00:30:56,240 --> 00:30:57,200
right so

724
00:30:57,200 --> 00:30:58,640
we can talk about it in the discussion

725
00:30:58,640 --> 00:30:59,840
thank you

726
00:30:59,840 --> 00:31:01,919
yeah thank you hello

727
00:31:01,919 --> 00:31:03,679
yeah yeah go ahead

728
00:31:03,679 --> 00:31:07,120
yeah yeah uh so uh here i want to give

729
00:31:07,120 --> 00:31:09,440
uh another example for the

730
00:31:09,440 --> 00:31:10,559
uh

731
00:31:10,559 --> 00:31:13,760
for the um multicultural service within

732
00:31:13,760 --> 00:31:16,159
the large-scale network you know

733
00:31:16,159 --> 00:31:19,600
currently the live stream are emerged on

734
00:31:19,600 --> 00:31:21,760
the internet service and i think the

735
00:31:21,760 --> 00:31:25,440
largest live stream not exists not only

736
00:31:25,440 --> 00:31:28,880
within the 5g transport network it it

737
00:31:28,880 --> 00:31:30,080
can span

738
00:31:30,080 --> 00:31:33,360
the multi-domain you know in in china we

739
00:31:33,360 --> 00:31:34,559
uh our

740
00:31:34,559 --> 00:31:36,640
we operate held

741
00:31:36,640 --> 00:31:39,679
uh several domains several several net

742
00:31:39,679 --> 00:31:42,080
several domains connect together so

743
00:31:42,080 --> 00:31:43,039
the

744
00:31:43,039 --> 00:31:44,000
the

745
00:31:44,000 --> 00:31:46,320
the multicast source uh always located

746
00:31:46,320 --> 00:31:49,679
in one metro uh meta network under the

747
00:31:49,679 --> 00:31:52,480
receiver located on the other side of

748
00:31:52,480 --> 00:31:53,200
the

749
00:31:53,200 --> 00:31:55,360
metro network so the livestream will

750
00:31:55,360 --> 00:31:59,840
span the multi-domain so i think the

751
00:31:59,840 --> 00:32:02,480
this such services are

752
00:32:02,480 --> 00:32:04,559
sold

753
00:32:04,559 --> 00:32:06,640
currently by the uh

754
00:32:06,640 --> 00:32:09,919
syrian uh cydia network i think

755
00:32:09,919 --> 00:32:13,120
and if you have a question for tng or

756
00:32:13,120 --> 00:32:15,120
you're also agreeing because uh your

757
00:32:15,120 --> 00:32:16,799
audio is very poor

758
00:32:16,799 --> 00:32:19,279
uh if you have a question uh please type

759
00:32:19,279 --> 00:32:20,799
it in the chat otherwise we'll take it

760
00:32:20,799 --> 00:32:22,399
during the discussion time like we do

761
00:32:22,399 --> 00:32:24,399
have an open mic time

762
00:32:24,399 --> 00:32:26,840
okay i will type

763
00:32:26,840 --> 00:32:29,200
my uh

764
00:32:29,200 --> 00:32:31,840
my information really in the chat okay

765
00:32:31,840 --> 00:32:33,919
okay thank you thanks thank you okay

766
00:32:33,919 --> 00:32:36,799
sure please thanks

767
00:32:38,480 --> 00:32:40,720
yeah great um sorry i didn't catch that

768
00:32:40,720 --> 00:32:42,159
was the end of the presentation it was

769
00:32:42,159 --> 00:32:43,840
still up uh

770
00:32:43,840 --> 00:32:44,960
greg again

771
00:32:44,960 --> 00:32:46,720
um i'm

772
00:32:46,720 --> 00:32:48,880
a little baffled that we're not starting

773
00:32:48,880 --> 00:32:50,720
with a problem statement that we're

774
00:32:50,720 --> 00:32:53,600
actually looking at a unique set of

775
00:32:53,600 --> 00:32:54,960
requirements

776
00:32:54,960 --> 00:32:56,399
that can't be solved with existing

777
00:32:56,399 --> 00:32:59,039
solutions that are out there to justify

778
00:32:59,039 --> 00:33:00,880
some additional work

779
00:33:00,880 --> 00:33:02,640
what we see here is a whole list of use

780
00:33:02,640 --> 00:33:04,640
cases that are really not any different

781
00:33:04,640 --> 00:33:06,080
than what's already been solved or can

782
00:33:06,080 --> 00:33:08,640
be solved by existing solutions so

783
00:33:08,640 --> 00:33:10,960
we've asked this work in the past to

784
00:33:10,960 --> 00:33:13,600
provide a problem statement

785
00:33:13,600 --> 00:33:16,240
and we never got one so i was hoping

786
00:33:16,240 --> 00:33:18,320
today we'd actually see some

787
00:33:18,320 --> 00:33:20,240
effort to show what the gaps are what

788
00:33:20,240 --> 00:33:22,720
the needs are and justify this work and

789
00:33:22,720 --> 00:33:24,480
i have not seen it i i think you like

790
00:33:24,480 --> 00:33:26,080
you you should wait greg right like at

791
00:33:26,080 --> 00:33:28,159
the end of this like presentations block

792
00:33:28,159 --> 00:33:30,080
we should get something and if not we'll

793
00:33:30,080 --> 00:33:31,840
go get it at the charter right because

794
00:33:31,840 --> 00:33:33,120
like we cannot

795
00:33:33,120 --> 00:33:34,559
without a problem statement we cannot

796
00:33:34,559 --> 00:33:36,399
charter anything so i agree with you

797
00:33:36,399 --> 00:33:37,840
yeah but i mean you go into use cases

798
00:33:37,840 --> 00:33:38,960
without a problem statement it just

799
00:33:38,960 --> 00:33:40,880
sounds like word solid good thank you

800
00:33:40,880 --> 00:33:43,120
thanks

801
00:33:46,240 --> 00:33:49,399
go ahead

802
00:34:10,239 --> 00:34:11,520
hello

803
00:34:11,520 --> 00:34:14,159
my name is gion mishram with verizon

804
00:34:14,159 --> 00:34:16,719
and i'm on this slide deck what i plan

805
00:34:16,719 --> 00:34:18,000
to go over

806
00:34:18,000 --> 00:34:21,199
is this this state of multicast for usa

807
00:34:21,199 --> 00:34:23,040
domestic operators

808
00:34:23,040 --> 00:34:26,000
and then how how the um

809
00:34:26,000 --> 00:34:28,639
from a technological perspective how uh

810
00:34:28,639 --> 00:34:30,399
how the current state of multicast

811
00:34:30,399 --> 00:34:31,918
applies to

812
00:34:31,918 --> 00:34:35,440
msr-6 and how msr-6 can at a minimum

813
00:34:35,440 --> 00:34:37,918
meet these base requirements

814
00:34:37,918 --> 00:34:39,520
that that are used

815
00:34:39,520 --> 00:34:40,399
with

816
00:34:40,399 --> 00:34:43,520
technologies that are deployed today

817
00:34:43,520 --> 00:34:45,359
throughout the united states with

818
00:34:45,359 --> 00:34:46,560
operators

819
00:34:46,560 --> 00:34:49,199
next slide

820
00:34:49,199 --> 00:34:51,760
so from a video transport perspective

821
00:34:51,760 --> 00:34:53,359
use cases um

822
00:34:53,359 --> 00:34:56,800
we have uh and this is just typical uh

823
00:34:56,800 --> 00:34:59,280
distribution so we have the contribution

824
00:34:59,280 --> 00:35:02,400
network where we got uncompressed video

825
00:35:02,400 --> 00:35:04,560
and then from a technology perspective

826
00:35:04,560 --> 00:35:05,599
um

827
00:35:05,599 --> 00:35:09,599
the what's used there is rsvpte

828
00:35:09,599 --> 00:35:12,079
and within the contribution network uh

829
00:35:12,079 --> 00:35:14,400
for um

830
00:35:14,400 --> 00:35:15,839
for for a

831
00:35:15,839 --> 00:35:18,560
seamless and

832
00:35:18,880 --> 00:35:21,520
lossless video delivery at the source as

833
00:35:21,520 --> 00:35:23,599
well as at the primary distribution

834
00:35:23,599 --> 00:35:26,640
state as well rsvpte at the secondary

835
00:35:26,640 --> 00:35:28,240
distribution on the right secondary

836
00:35:28,240 --> 00:35:29,440
distribution

837
00:35:29,440 --> 00:35:31,599
network we have rs

838
00:35:31,599 --> 00:35:32,640
and that's

839
00:35:32,640 --> 00:35:33,760
going to

840
00:35:33,760 --> 00:35:36,880
um the access networks fixed broadband

841
00:35:36,880 --> 00:35:38,400
and

842
00:35:38,400 --> 00:35:40,079
as well as

843
00:35:40,079 --> 00:35:41,520
mobile broadband

844
00:35:41,520 --> 00:35:43,280
access networks

845
00:35:43,280 --> 00:35:44,480
mldp

846
00:35:44,480 --> 00:35:46,320
as well as pim

847
00:35:46,320 --> 00:35:48,880
next slide

848
00:35:49,280 --> 00:35:52,640
so here we're also sharing uh the ver

849
00:35:52,640 --> 00:35:55,599
the variety the distribution flow from

850
00:35:55,599 --> 00:35:58,240
at the very left showing the uh

851
00:35:58,240 --> 00:36:00,160
uncompressed stream so the higher

852
00:36:00,160 --> 00:36:03,200
bandwidth video delivery uh at the left

853
00:36:03,200 --> 00:36:05,200
and then it's the primary distribution

854
00:36:05,200 --> 00:36:08,160
network compressed video and then at the

855
00:36:08,160 --> 00:36:10,800
very right uncompressed video

856
00:36:10,800 --> 00:36:12,960
you know so the stream of of how how the

857
00:36:12,960 --> 00:36:15,680
tr how video flows from left to right

858
00:36:15,680 --> 00:36:17,359
and the uh

859
00:36:17,359 --> 00:36:19,200
and the

860
00:36:19,200 --> 00:36:21,920
technologies used on the left side rcpt

861
00:36:21,920 --> 00:36:24,560
primarily has been used uh for domestic

862
00:36:24,560 --> 00:36:26,160
operators

863
00:36:26,160 --> 00:36:27,839
for the primary distribution as well

864
00:36:27,839 --> 00:36:29,760
rsvpt and then as you get to the

865
00:36:29,760 --> 00:36:31,520
secondary distribution

866
00:36:31,520 --> 00:36:34,480
it's it's majority mostly um

867
00:36:34,480 --> 00:36:35,760
mldp

868
00:36:35,760 --> 00:36:38,720
uh for the for the uh distribution

869
00:36:38,720 --> 00:36:41,839
next slide

870
00:36:42,240 --> 00:36:44,240
this slide shows as well similar and

871
00:36:44,240 --> 00:36:47,119
it's it's showing the distribution

872
00:36:47,119 --> 00:36:49,359
structure starting at the very left

873
00:36:49,359 --> 00:36:52,000
contribution so rsvpte at the

874
00:36:52,000 --> 00:36:54,560
contribution layer primary distribution

875
00:36:54,560 --> 00:36:56,000
rsvpte

876
00:36:56,000 --> 00:36:58,720
and then mldp at the secondary

877
00:36:58,720 --> 00:37:00,880
distribution layer and then out to the

878
00:37:00,880 --> 00:37:04,000
access networks

879
00:37:04,240 --> 00:37:06,079
mldp and

880
00:37:06,079 --> 00:37:08,880
going to enterprises as well as

881
00:37:08,880 --> 00:37:11,040
fixed broadband and um

882
00:37:11,040 --> 00:37:15,119
and mobile broadband next slide

883
00:37:15,119 --> 00:37:18,240
this in this slide shows

884
00:37:18,240 --> 00:37:20,400
just a depiction of the of the public

885
00:37:20,400 --> 00:37:22,480
internet an operator network in the

886
00:37:22,480 --> 00:37:24,720
center showing the core core network

887
00:37:24,720 --> 00:37:27,280
access aggregation and then the access

888
00:37:27,280 --> 00:37:29,119
network mobile broadband and fixed

889
00:37:29,119 --> 00:37:31,119
broadband so

890
00:37:31,119 --> 00:37:34,839
so uh with that mvp mvpn um

891
00:37:34,839 --> 00:37:37,599
uh pmsi

892
00:37:37,599 --> 00:37:40,640
ptas that are deployed mldp is the

893
00:37:40,640 --> 00:37:42,079
primary

894
00:37:42,079 --> 00:37:44,079
i would say majority of

895
00:37:44,079 --> 00:37:45,599
customers

896
00:37:45,599 --> 00:37:48,160
in us use mldp and point to multipoint

897
00:37:48,160 --> 00:37:50,079
that's probably the primary pta that's

898
00:37:50,079 --> 00:37:54,240
used uh rsvpte at the so at the source

899
00:37:54,240 --> 00:37:56,320
uh at the at the primary contribution

900
00:37:56,320 --> 00:37:59,200
network as well as the uh

901
00:37:59,200 --> 00:38:01,520
the prime primary distribution

902
00:38:01,520 --> 00:38:04,880
and then mldp point to multipoint uh

903
00:38:04,880 --> 00:38:07,440
multi-point to multi-point mldp

904
00:38:07,440 --> 00:38:09,520
is used in the financial industry

905
00:38:09,520 --> 00:38:12,079
primarily um and there may be some other

906
00:38:12,079 --> 00:38:13,920
smaller use cases but

907
00:38:13,920 --> 00:38:16,560
uh point to multi-point uh mldp is

908
00:38:16,560 --> 00:38:17,920
really one of the

909
00:38:17,920 --> 00:38:20,560
primary use cases that are used pre used

910
00:38:20,560 --> 00:38:24,960
for most customers within the us

911
00:38:25,599 --> 00:38:27,520
can you stay close to the mic because

912
00:38:27,520 --> 00:38:29,680
people cannot hear you at the back oh

913
00:38:29,680 --> 00:38:33,119
sorry thank you

914
00:38:33,119 --> 00:38:35,839
sorry and um

915
00:38:35,839 --> 00:38:38,079
so as as far as um

916
00:38:38,079 --> 00:38:40,640
asm uh versus ssm you know from a

917
00:38:40,640 --> 00:38:42,720
technology perspective and and uh pim

918
00:38:42,720 --> 00:38:44,480
binder uh

919
00:38:44,480 --> 00:38:46,160
majority of uh

920
00:38:46,160 --> 00:38:49,280
uses from customer networks asm is still

921
00:38:49,280 --> 00:38:51,599
what prep you know widely used on

922
00:38:51,599 --> 00:38:54,079
customer networks um there have been a

923
00:38:54,079 --> 00:38:56,320
lot a lot of enterprises as well as uh

924
00:38:56,320 --> 00:39:00,800
customers migrating from asm to ssm

925
00:39:00,800 --> 00:39:01,760
still

926
00:39:01,760 --> 00:39:02,720
rarely

927
00:39:02,720 --> 00:39:04,960
not use as much with the

928
00:39:04,960 --> 00:39:06,960
bi-directional trees uh point to

929
00:39:06,960 --> 00:39:09,040
multi-point to multi-point pea trees

930
00:39:09,040 --> 00:39:11,760
within the core

931
00:39:11,760 --> 00:39:15,040
so overall primarily it's really mldp

932
00:39:15,040 --> 00:39:16,800
point to multi-point is really the

933
00:39:16,800 --> 00:39:18,320
primary uh

934
00:39:18,320 --> 00:39:20,800
technology that's used you know for the

935
00:39:20,800 --> 00:39:23,119
p-tree within the within the core

936
00:39:23,119 --> 00:39:25,040
um out to the uh from the core to

937
00:39:25,040 --> 00:39:27,680
aggregation out to the

938
00:39:27,680 --> 00:39:29,760
how to enterprise customers

939
00:39:29,760 --> 00:39:32,960
um within the united states

940
00:39:32,960 --> 00:39:35,760
uh next slide

941
00:39:36,000 --> 00:39:37,920
so this this slide shows this private

942
00:39:37,920 --> 00:39:42,079
mpls uh so in here just very similarly

943
00:39:42,079 --> 00:39:45,280
uh the uh as far as the uh

944
00:39:45,280 --> 00:39:49,040
mvpn use cases for uh

945
00:39:49,040 --> 00:39:51,640
the types of uh

946
00:39:51,640 --> 00:39:53,760
pmvpn um

947
00:39:53,760 --> 00:39:55,599
p trees that are deployed and it's still

948
00:39:55,599 --> 00:39:58,240
primarily primarily mldp is really the

949
00:39:58,240 --> 00:40:01,359
primary and asm is still is used

950
00:40:01,359 --> 00:40:03,599
primarily for uh customers enterprise

951
00:40:03,599 --> 00:40:07,440
customers as well as uh

952
00:40:07,520 --> 00:40:10,640
customers uh you know through provider

953
00:40:10,640 --> 00:40:12,000
customers

954
00:40:12,000 --> 00:40:13,520
that exist

955
00:40:13,520 --> 00:40:16,079
for um

956
00:40:16,079 --> 00:40:18,640
the other uh

957
00:40:18,640 --> 00:40:21,920
the other mvpn uh

958
00:40:21,920 --> 00:40:24,480
ptas that are used

959
00:40:24,480 --> 00:40:27,839
it's not as widely uh mdt safy and some

960
00:40:27,839 --> 00:40:31,280
of the other ptas are not as widely used

961
00:40:31,280 --> 00:40:33,280
and here in this case as well

962
00:40:33,280 --> 00:40:36,240
uh multi-point multi-point for uh pin

963
00:40:36,240 --> 00:40:38,560
binder trees that is not not as widely

964
00:40:38,560 --> 00:40:40,640
used financial industry

965
00:40:40,640 --> 00:40:42,560
is really really the primary use case

966
00:40:42,560 --> 00:40:44,880
where uh pim bider is used for

967
00:40:44,880 --> 00:40:47,599
multi-point to multi-point trees

968
00:40:47,599 --> 00:40:50,079
next slide

969
00:40:50,560 --> 00:40:53,119
so this this slide shows uh msr6

970
00:40:53,119 --> 00:40:56,560
requirements for ipvtv delivery uh so

971
00:40:56,560 --> 00:40:58,720
really so here what uh what i'm trying

972
00:40:58,720 --> 00:41:00,560
to depict i guess is uh

973
00:41:00,560 --> 00:41:02,960
lossless video delivery and uh fast

974
00:41:02,960 --> 00:41:05,920
reroute that's really one of the primary

975
00:41:05,920 --> 00:41:06,880
uh

976
00:41:06,880 --> 00:41:07,920
you know

977
00:41:07,920 --> 00:41:10,560
primary technologies used for rsvpt fast

978
00:41:10,560 --> 00:41:13,040
reroute is really a critical requirement

979
00:41:13,040 --> 00:41:15,440
for uh primary distribution

980
00:41:15,440 --> 00:41:16,880
as well as the

981
00:41:16,880 --> 00:41:19,280
content distribution networks where the

982
00:41:19,280 --> 00:41:22,079
source feed comes in

983
00:41:22,079 --> 00:41:25,040
and then as well as with mldp

984
00:41:25,040 --> 00:41:28,319
multitask only fast reroute

985
00:41:28,319 --> 00:41:30,800
next slide

986
00:41:30,960 --> 00:41:33,280
here we're showing as well with msr6

987
00:41:33,280 --> 00:41:35,839
requirements for legacy technologies uh

988
00:41:35,839 --> 00:41:39,440
uh mldp and rcpt so here as well we're

989
00:41:39,440 --> 00:41:41,839
just showing the uh

990
00:41:41,839 --> 00:41:45,200
requirements so mplc fast reroute link

991
00:41:45,200 --> 00:41:47,200
node and paths path protection 50

992
00:41:47,200 --> 00:41:50,960
millisecond reroute and then uh for mldp

993
00:41:50,960 --> 00:41:51,760
um

994
00:41:51,760 --> 00:41:54,640
mo multigas only fast free route as well

995
00:41:54,640 --> 00:41:58,079
as local protection

996
00:41:58,079 --> 00:42:01,319
next slide

997
00:42:03,040 --> 00:42:03,920
so

998
00:42:03,920 --> 00:42:06,240
in this slide uh what i would like to

999
00:42:06,240 --> 00:42:08,000
show is here uh

1000
00:42:08,000 --> 00:42:10,160
a um

1001
00:42:10,160 --> 00:42:12,640
the preferred choice of transports has

1002
00:42:12,640 --> 00:42:15,119
been really for for operators in the us

1003
00:42:15,119 --> 00:42:18,000
it's really been between mldp and rsvpte

1004
00:42:18,000 --> 00:42:20,560
and primarily majority of the use cases

1005
00:42:20,560 --> 00:42:23,839
have been has been used as mldp within

1006
00:42:23,839 --> 00:42:26,400
the secondary distribution

1007
00:42:26,400 --> 00:42:29,200
networks the primary distribution and

1008
00:42:29,200 --> 00:42:31,760
content distribution has been rsvpt for

1009
00:42:31,760 --> 00:42:33,760
the uh path protection

1010
00:42:33,760 --> 00:42:34,640
um

1011
00:42:34,640 --> 00:42:36,079
and and with link node and path

1012
00:42:36,079 --> 00:42:37,839
protection for um

1013
00:42:37,839 --> 00:42:40,880
disjoint trees as well as um

1014
00:42:40,880 --> 00:42:42,720
where you have we're

1015
00:42:42,720 --> 00:42:44,960
requiring triple play services where you

1016
00:42:44,960 --> 00:42:47,280
have multi multiple pads

1017
00:42:47,280 --> 00:42:49,520
um

1018
00:42:49,920 --> 00:42:52,400
next slide

1019
00:42:53,520 --> 00:42:55,920
in this slide what i'm just showing here

1020
00:42:55,920 --> 00:42:58,240
and this is just for as far as msr6

1021
00:42:58,240 --> 00:43:00,560
requirements it's a comparison between

1022
00:43:00,560 --> 00:43:04,000
mldp and rcpt and and just showing the

1023
00:43:04,000 --> 00:43:07,280
benefits of mldp which is really

1024
00:43:07,280 --> 00:43:09,359
scalability

1025
00:43:09,359 --> 00:43:11,040
and as we're looking at our as we look

1026
00:43:11,040 --> 00:43:14,079
at msr-6 and how how that is its

1027
00:43:14,079 --> 00:43:16,800
similarities with rcpte

1028
00:43:16,800 --> 00:43:19,119
and and the scalability which is

1029
00:43:19,119 --> 00:43:21,760
important which which mldp provides

1030
00:43:21,760 --> 00:43:23,760
where you can have a single tree with

1031
00:43:23,760 --> 00:43:26,640
with mldp point to multipoint where our

1032
00:43:26,640 --> 00:43:29,920
cpt requires entries so it's a tree per

1033
00:43:29,920 --> 00:43:33,920
vpn so not as scalable so a requirement

1034
00:43:33,920 --> 00:43:34,720
that

1035
00:43:34,720 --> 00:43:36,319
we'll have to we'll

1036
00:43:36,319 --> 00:43:38,800
we'll play into at msr6 as we when we go

1037
00:43:38,800 --> 00:43:40,560
through the summary of

1038
00:43:40,560 --> 00:43:41,839
requirements

1039
00:43:41,839 --> 00:43:44,400
next slide

1040
00:43:44,400 --> 00:43:46,560
this slide shows as well comparison so

1041
00:43:46,560 --> 00:43:49,680
the so the benefit of rsvpte and that's

1042
00:43:49,680 --> 00:43:52,319
really where you have redundant pads and

1043
00:43:52,319 --> 00:43:54,000
you need and you need uh link node and

1044
00:43:54,000 --> 00:43:56,240
path protection uh for triple play

1045
00:43:56,240 --> 00:43:58,880
services as well as live live protection

1046
00:43:58,880 --> 00:44:02,960
um the use of um rsvpte with that 50

1047
00:44:02,960 --> 00:44:05,680
millisecond uh failover and lossless

1048
00:44:05,680 --> 00:44:06,800
failover

1049
00:44:06,800 --> 00:44:09,839
next slide

1050
00:44:10,000 --> 00:44:11,920
so here as well we're kind of digging

1051
00:44:11,920 --> 00:44:14,480
into so with rsvpte the live live

1052
00:44:14,480 --> 00:44:17,440
protection requirement

1053
00:44:17,440 --> 00:44:19,680
and this and with that you know have

1054
00:44:19,680 --> 00:44:21,200
being able to have

1055
00:44:21,200 --> 00:44:23,119
the lossless

1056
00:44:23,119 --> 00:44:24,800
zero delay

1057
00:44:24,800 --> 00:44:27,200
failover with live live production where

1058
00:44:27,200 --> 00:44:29,119
you have redundant pads

1059
00:44:29,119 --> 00:44:31,599
very similar to

1060
00:44:31,599 --> 00:44:34,240
live live i guess very similar to net

1061
00:44:34,240 --> 00:44:36,560
pre-off where you have where you're not

1062
00:44:36,560 --> 00:44:39,440
having a replicated stream uh from the

1063
00:44:39,440 --> 00:44:42,480
uh from the ingress to the egress uh

1064
00:44:42,480 --> 00:44:44,400
pre-off mechanism where you're actually

1065
00:44:44,400 --> 00:44:45,520
uh

1066
00:44:45,520 --> 00:44:48,319
sending two streams down to the receiver

1067
00:44:48,319 --> 00:44:50,800
end so having that that ability and

1068
00:44:50,800 --> 00:44:53,920
protection with the rsvpte

1069
00:44:53,920 --> 00:44:56,480
next slide

1070
00:44:57,200 --> 00:44:59,359
this slide shows the entire just the

1071
00:44:59,359 --> 00:45:01,760
overall end to end stream just for going

1072
00:45:01,760 --> 00:45:03,760
from the from the left side from the

1073
00:45:03,760 --> 00:45:06,160
contribution network uh

1074
00:45:06,160 --> 00:45:08,160
from the source uh through the

1075
00:45:08,160 --> 00:45:10,880
distribution so rsvpte

1076
00:45:10,880 --> 00:45:12,720
in the core network and at the

1077
00:45:12,720 --> 00:45:15,040
distribution layer and then as you get

1078
00:45:15,040 --> 00:45:17,680
to the access layer and then and two

1079
00:45:17,680 --> 00:45:20,079
enterprises and large medium small

1080
00:45:20,079 --> 00:45:25,040
customers uh their mldp primarily used

1081
00:45:25,040 --> 00:45:26,640
and then as well uh

1082
00:45:26,640 --> 00:45:28,640
i mentioned their triple play services

1083
00:45:28,640 --> 00:45:30,880
so wherever we have require

1084
00:45:30,880 --> 00:45:35,119
live live protection use of rsvpte

1085
00:45:35,119 --> 00:45:37,680
for for path protect link node and path

1086
00:45:37,680 --> 00:45:39,119
protection

1087
00:45:39,119 --> 00:45:41,599
next slide

1088
00:45:41,760 --> 00:45:44,160
so a summary so the goal of this slide

1089
00:45:44,160 --> 00:45:46,640
deck really is try really try to look at

1090
00:45:46,640 --> 00:45:48,880
uh the use cases and really the state of

1091
00:45:48,880 --> 00:45:50,560
multicast within

1092
00:45:50,560 --> 00:45:52,480
uh the us domestic

1093
00:45:52,480 --> 00:45:54,880
and and the requirements that at a

1094
00:45:54,880 --> 00:45:57,040
minimum that would need to be met by

1095
00:45:57,040 --> 00:45:59,040
msr-6

1096
00:45:59,040 --> 00:46:00,800
and and so in summary here we got fast

1097
00:46:00,800 --> 00:46:02,480
free route protection

1098
00:46:02,480 --> 00:46:03,520
um

1099
00:46:03,520 --> 00:46:05,440
injury engineering separate protected

1100
00:46:05,440 --> 00:46:08,720
pads uh scalability as we see with mldp

1101
00:46:08,720 --> 00:46:11,680
as compared to rsvpte the live live

1102
00:46:11,680 --> 00:46:15,920
protection loss lossless zero delay

1103
00:46:15,920 --> 00:46:18,640
and then lastly uh triple play services

1104
00:46:18,640 --> 00:46:21,200
next slide

1105
00:46:22,560 --> 00:46:25,680
so um this slide what i what i wanted to

1106
00:46:25,680 --> 00:46:28,160
share here is like you said the state of

1107
00:46:28,160 --> 00:46:28,960
uh

1108
00:46:28,960 --> 00:46:31,040
with usa domestic operators and then

1109
00:46:31,040 --> 00:46:34,560
srv6 deployments and and as as well as

1110
00:46:34,560 --> 00:46:38,800
migration towards an ipv towards ipv6

1111
00:46:38,800 --> 00:46:41,680
so so operators we understand in the in

1112
00:46:41,680 --> 00:46:43,359
the us you'd understand the benefits of

1113
00:46:43,359 --> 00:46:45,200
segment routing and moving towards an

1114
00:46:45,200 --> 00:46:47,520
ipv6 data plane

1115
00:46:47,520 --> 00:46:49,359
however the deployments have have been

1116
00:46:49,359 --> 00:46:51,119
limited

1117
00:46:51,119 --> 00:46:53,839
and and here what i what i've thrown out

1118
00:46:53,839 --> 00:46:55,680
in a few bullets really what the

1119
00:46:55,680 --> 00:46:58,160
requirements and kind of the benefits of

1120
00:46:58,160 --> 00:47:01,599
srv600 and pls and reason why you know

1121
00:47:01,599 --> 00:47:04,000
operators are looking but we have is has

1122
00:47:04,000 --> 00:47:05,200
not

1123
00:47:05,200 --> 00:47:07,359
has not been as widely deployed in the

1124
00:47:07,359 --> 00:47:09,200
u.s and really and just kind of just

1125
00:47:09,200 --> 00:47:10,560
throw it just looking at the bullets

1126
00:47:10,560 --> 00:47:13,200
here that i got laid out um

1127
00:47:13,200 --> 00:47:15,359
native srv60 airing capabilities with

1128
00:47:15,359 --> 00:47:18,400
srv6 with with us with an srh the

1129
00:47:18,400 --> 00:47:20,880
benefits of ipv6 flow labels so having

1130
00:47:20,880 --> 00:47:23,760
an ipv6 data playing the gains there as

1131
00:47:23,760 --> 00:47:26,160
well as data center um

1132
00:47:26,160 --> 00:47:28,720
deployments where where you have you're

1133
00:47:28,720 --> 00:47:31,280
using an nv nvo overlay vxlan type

1134
00:47:31,280 --> 00:47:34,079
overlay ip underlay where you know you

1135
00:47:34,079 --> 00:47:36,839
can take advantage of srv6 in the

1136
00:47:36,839 --> 00:47:42,559
underlay and then ipv6 benefits with qos

1137
00:47:42,559 --> 00:47:45,200
and then lastly mpls elimination so

1138
00:47:45,200 --> 00:47:47,440
there are there are some gains that usa

1139
00:47:47,440 --> 00:47:49,760
domestic operators can gain with srv6

1140
00:47:49,760 --> 00:47:51,520
and having an ipv6

1141
00:47:51,520 --> 00:47:52,960
data plane

1142
00:47:52,960 --> 00:47:55,520
next slide

1143
00:47:56,000 --> 00:47:58,319
so here's the last slide just a summary

1144
00:47:58,319 --> 00:48:01,520
of solutions that exist today

1145
00:48:01,520 --> 00:48:04,079
for multicast i've just related as

1146
00:48:04,079 --> 00:48:06,559
related to srv6

1147
00:48:06,559 --> 00:48:08,160
so

1148
00:48:08,160 --> 00:48:10,240
so today

1149
00:48:10,240 --> 00:48:13,599
mldp rsvpt they can be deployed in

1150
00:48:13,599 --> 00:48:16,000
parallel with our srv6

1151
00:48:16,000 --> 00:48:18,079
we do have

1152
00:48:18,079 --> 00:48:20,319
segment routing

1153
00:48:20,319 --> 00:48:22,240
related uh solutions that can be

1154
00:48:22,240 --> 00:48:24,160
deployed such as tree sid

1155
00:48:24,160 --> 00:48:25,119
and then

1156
00:48:25,119 --> 00:48:27,599
bgp multicast and bgb multigas

1157
00:48:27,599 --> 00:48:29,760
controller those are as well options

1158
00:48:29,760 --> 00:48:31,440
that that exist today that can be

1159
00:48:31,440 --> 00:48:33,359
deployed with segment routing

1160
00:48:33,359 --> 00:48:35,760
um and then as well bit

1161
00:48:35,760 --> 00:48:38,800
beers available and then lastly and just

1162
00:48:38,800 --> 00:48:40,319
kind of really a segue into the

1163
00:48:40,319 --> 00:48:44,800
solutions for msr6 is is the new

1164
00:48:44,800 --> 00:48:46,319
technology that we're going to be going

1165
00:48:46,319 --> 00:48:49,040
over today in subsequent slide decks

1166
00:48:49,040 --> 00:48:50,559
thank you

1167
00:48:50,559 --> 00:48:52,480
okay so we're opening the queue but

1168
00:48:52,480 --> 00:48:54,960
please clarifying questions only if you

1169
00:48:54,960 --> 00:48:56,960
agree or disagree with the presented

1170
00:48:56,960 --> 00:48:59,200
cases we can discuss it during the open

1171
00:48:59,200 --> 00:49:02,160
mic thank you

1172
00:49:02,160 --> 00:49:06,319
greg uh go ahead greg mursky

1173
00:49:09,760 --> 00:49:11,040
hi uh

1174
00:49:11,040 --> 00:49:13,599
gregory erickson um

1175
00:49:13,599 --> 00:49:15,920
i have the question about one of your

1176
00:49:15,920 --> 00:49:19,520
requirements lossless and zero delay uh

1177
00:49:19,520 --> 00:49:22,800
switchover sure

1178
00:49:22,880 --> 00:49:26,640
how you envision to achieve it

1179
00:49:28,400 --> 00:49:31,280
sure

1180
00:49:31,280 --> 00:49:32,240
so

1181
00:49:32,240 --> 00:49:34,880
i think the lost lossless and zero zero

1182
00:49:34,880 --> 00:49:36,240
delay

1183
00:49:36,240 --> 00:49:38,800
that would be achieved with uh redundant

1184
00:49:38,800 --> 00:49:39,839
paths

1185
00:49:39,839 --> 00:49:42,160
uh which is which is some which is

1186
00:49:42,160 --> 00:49:43,359
something that

1187
00:49:43,359 --> 00:49:45,760
is is deployed today that you can if

1188
00:49:45,760 --> 00:49:48,079
with redundant pads where you have a

1189
00:49:48,079 --> 00:49:50,400
replicated stream

1190
00:49:50,400 --> 00:49:52,559
similar you're going into the solution

1191
00:49:52,559 --> 00:49:56,000
space so um i think if i can refresh a

1192
00:49:56,000 --> 00:49:57,920
question greg is that a non-negotiable

1193
00:49:57,920 --> 00:49:59,119
requirement would that be a fair

1194
00:49:59,119 --> 00:50:01,040
phrasing of your question

1195
00:50:01,040 --> 00:50:03,599
yes okay all right thank you greg okay

1196
00:50:03,599 --> 00:50:05,760
thanks

1197
00:50:05,760 --> 00:50:09,119
hi tom hill bt i was curious really in

1198
00:50:09,119 --> 00:50:10,640
in the sense that i think a lot of the

1199
00:50:10,640 --> 00:50:12,079
use case for this is obviously going to

1200
00:50:12,079 --> 00:50:14,079
be in video distribution

1201
00:50:14,079 --> 00:50:16,160
um a lot of the benefit really from

1202
00:50:16,160 --> 00:50:18,079
doing this will be in video distribution

1203
00:50:18,079 --> 00:50:19,920
i was curious

1204
00:50:19,920 --> 00:50:22,160
how you envision

1205
00:50:22,160 --> 00:50:24,480
msr 6

1206
00:50:24,480 --> 00:50:25,520
helping

1207
00:50:25,520 --> 00:50:28,559
with tivo style services so pausing live

1208
00:50:28,559 --> 00:50:30,240
television for example pausing live

1209
00:50:30,240 --> 00:50:32,800
streams and catch up on that

1210
00:50:32,800 --> 00:50:35,440
um is this the suggestion that we

1211
00:50:35,440 --> 00:50:37,440
continue falling back to unicast or do

1212
00:50:37,440 --> 00:50:39,119
you feel that there's some benefit here

1213
00:50:39,119 --> 00:50:41,839
that can be made out of a new protocol

1214
00:50:41,839 --> 00:50:44,720
with regards to that

1215
00:50:44,720 --> 00:50:47,680
i i think that as well that question may

1216
00:50:47,680 --> 00:50:49,760
be answered as we get into the solution

1217
00:50:49,760 --> 00:50:51,680
space but i think with the questions

1218
00:50:51,680 --> 00:50:52,800
here

1219
00:50:52,800 --> 00:50:55,920
require regarding the requirements

1220
00:50:55,920 --> 00:50:57,520
if you could rephrase the question i

1221
00:50:57,520 --> 00:50:59,760
think let's say related to requirements

1222
00:50:59,760 --> 00:51:01,599
as we will be talking about solutions i

1223
00:51:01,599 --> 00:51:04,319
think in the subsequent slides

1224
00:51:04,319 --> 00:51:06,079
okay can i give a quick answer to that

1225
00:51:06,079 --> 00:51:08,720
yeah

1226
00:51:08,720 --> 00:51:09,599
they're

1227
00:51:09,599 --> 00:51:12,160
we're attempting to to restart work on

1228
00:51:12,160 --> 00:51:13,760
exactly that solution description we

1229
00:51:13,760 --> 00:51:16,559
started that in beer so the stateless

1230
00:51:16,559 --> 00:51:19,119
options all have ways to improve those

1231
00:51:19,119 --> 00:51:21,200
solutions and we haven't put that

1232
00:51:21,200 --> 00:51:23,440
specifically together for msr6 right now

1233
00:51:23,440 --> 00:51:26,800
okay thank you greg go ahead thank you

1234
00:51:27,680 --> 00:51:29,839
so i'm just trying to understand what

1235
00:51:29,839 --> 00:51:31,680
you presented here like i said in the in

1236
00:51:31,680 --> 00:51:33,520
the absence of a problem statement what

1237
00:51:33,520 --> 00:51:35,599
you showed us what the current art is

1238
00:51:35,599 --> 00:51:37,920
and your objectives are to be just as

1239
00:51:37,920 --> 00:51:40,000
good

1240
00:51:40,000 --> 00:51:41,839
as opposed to gaps that you're trying to

1241
00:51:41,839 --> 00:51:44,160
solve

1242
00:51:44,240 --> 00:51:46,640
well i think in this slide deck what the

1243
00:51:46,640 --> 00:51:48,559
goal was to show

1244
00:51:48,559 --> 00:51:49,520
what

1245
00:51:49,520 --> 00:51:51,280
what's what's deployed the state of

1246
00:51:51,280 --> 00:51:53,680
multicast as it's deployed today

1247
00:51:53,680 --> 00:51:55,760
and the requirements that we have today

1248
00:51:55,760 --> 00:51:57,520
and then and then in subsequent

1249
00:51:57,520 --> 00:52:00,160
solutions that are presented how these

1250
00:52:00,160 --> 00:52:02,480
requirements match up and at least at

1251
00:52:02,480 --> 00:52:05,440
least at a minimum saw you know provide

1252
00:52:05,440 --> 00:52:07,359
those you know meet these requirements

1253
00:52:07,359 --> 00:52:08,720
so i was actually just laying out the

1254
00:52:08,720 --> 00:52:10,800
requirements so i'm hearing yes the

1255
00:52:10,800 --> 00:52:12,240
objective is to be just as good of the

1256
00:52:12,240 --> 00:52:13,839
existing solution yeah that's exactly

1257
00:52:13,839 --> 00:52:15,119
yes is that an admission then that

1258
00:52:15,119 --> 00:52:16,559
there's no gap there's no real problem

1259
00:52:16,559 --> 00:52:19,280
to solve

1260
00:52:19,280 --> 00:52:21,839
well i would say in this in this deck i

1261
00:52:21,839 --> 00:52:23,440
was not actually

1262
00:52:23,440 --> 00:52:25,920
the goal of this deck was really to show

1263
00:52:25,920 --> 00:52:28,079
existing and meeting the requirements

1264
00:52:28,079 --> 00:52:30,800
and not not gaps i think in the

1265
00:52:30,800 --> 00:52:32,480
in the previous slide i think they were

1266
00:52:32,480 --> 00:52:35,040
showing some of the gaps so

1267
00:52:35,040 --> 00:52:36,720
actually i didn't see any it was again

1268
00:52:36,720 --> 00:52:38,960
just all solutions that we are have

1269
00:52:38,960 --> 00:52:41,280
already seen yeah so

1270
00:52:41,280 --> 00:52:43,280
again so what you're saying here is

1271
00:52:43,280 --> 00:52:46,559
you have no goals to do better you don't

1272
00:52:46,559 --> 00:52:48,480
have gaps from existing deploy to what

1273
00:52:48,480 --> 00:52:50,000
you're trying to achieve

1274
00:52:50,000 --> 00:52:51,760
and your objectives are to be just as

1275
00:52:51,760 --> 00:52:53,359
good what we currently have

1276
00:52:53,359 --> 00:52:55,040
i i don't see any other answer from what

1277
00:52:55,040 --> 00:52:57,200
you've said and what you've presented

1278
00:52:57,200 --> 00:52:59,440
thanks craig thank you yep understood

1279
00:52:59,440 --> 00:53:01,839
thanks greg thank you thanks uh tell us

1280
00:53:01,839 --> 00:53:04,480
please go ahead thanks i i think uh on

1281
00:53:04,480 --> 00:53:06,000
the agenda point itself you're running a

1282
00:53:06,000 --> 00:53:07,920
little bit late so like any time is

1283
00:53:07,920 --> 00:53:09,119
going to cut into the solution which

1284
00:53:09,119 --> 00:53:11,920
you're totally fine with okay so just

1285
00:53:11,920 --> 00:53:13,680
we'll try to get the use cases

1286
00:53:13,680 --> 00:53:15,359
requirements stuff nailed down as much

1287
00:53:15,359 --> 00:53:18,240
as possible thanks

1288
00:53:21,119 --> 00:53:24,000
okay um welcome i wanted to get down a

1289
00:53:24,000 --> 00:53:25,920
little bit from all the

1290
00:53:25,920 --> 00:53:28,319
details of the use cases to what i'm

1291
00:53:28,319 --> 00:53:30,240
extracting as the operational use case

1292
00:53:30,240 --> 00:53:34,000
requirements based on my uh kind of

1293
00:53:34,000 --> 00:53:35,440
staying around for 30 years with this

1294
00:53:35,440 --> 00:53:38,079
technology multicast and um what what i

1295
00:53:38,079 --> 00:53:40,800
learned from that next slide

1296
00:53:40,800 --> 00:53:42,480
so i think there's really one

1297
00:53:42,480 --> 00:53:44,000
core requirement which is that we want

1298
00:53:44,000 --> 00:53:45,920
to have a simple ipv6 integrated

1299
00:53:45,920 --> 00:53:48,720
end-to-end stateless ipv6 multicast for

1300
00:53:48,720 --> 00:53:50,720
ipv6 only networks

1301
00:53:50,720 --> 00:53:52,880
and what ipv6 networks i think all of

1302
00:53:52,880 --> 00:53:55,359
them we saw a lot of them being

1303
00:53:55,359 --> 00:53:58,160
listed here in the prior slides but i

1304
00:53:58,160 --> 00:54:00,319
also think that this technology is

1305
00:54:00,319 --> 00:54:02,720
quite valuable beyond the large service

1306
00:54:02,720 --> 00:54:04,559
provider networks but maybe not for this

1307
00:54:04,559 --> 00:54:06,960
point in time i did send notes out to

1308
00:54:06,960 --> 00:54:08,880
the iot working groups which i think

1309
00:54:08,880 --> 00:54:10,559
should have interest but maybe another

1310
00:54:10,559 --> 00:54:13,200
time next slide

1311
00:54:13,200 --> 00:54:16,640
okay so um beer has often been more or

1312
00:54:16,640 --> 00:54:18,319
less implicitly being brought up in the

1313
00:54:18,319 --> 00:54:19,920
questions raised here

1314
00:54:19,920 --> 00:54:22,240
so let's do a quick refresher on what

1315
00:54:22,240 --> 00:54:24,880
beer and ipv6 networks how they would go

1316
00:54:24,880 --> 00:54:26,800
together without new work

1317
00:54:26,800 --> 00:54:29,760
um so the beer architecture was not

1318
00:54:29,760 --> 00:54:31,599
specific to any particular

1319
00:54:31,599 --> 00:54:33,920
encapsulation but the working group i

1320
00:54:33,920 --> 00:54:36,240
worked on one particular header which is

1321
00:54:36,240 --> 00:54:38,720
pretty much in my view of the world

1322
00:54:38,720 --> 00:54:40,960
optimized and designed for mpls networks

1323
00:54:40,960 --> 00:54:43,200
to go along with them so it has all the

1324
00:54:43,200 --> 00:54:45,280
necessary header elements to support

1325
00:54:45,280 --> 00:54:48,960
mpls networks from the label uh to the

1326
00:54:48,960 --> 00:54:51,280
traffic class field for mpls the qs and

1327
00:54:51,280 --> 00:54:53,280
so on there's also additional header

1328
00:54:53,280 --> 00:54:54,960
fields that are not needed in mpls

1329
00:54:54,960 --> 00:54:57,359
networks just in case somebody would

1330
00:54:57,359 --> 00:54:59,599
want to deploy the same header in a

1331
00:54:59,599 --> 00:55:01,839
layer 2 forwarding network only

1332
00:55:01,839 --> 00:55:03,599
that's to my

1333
00:55:03,599 --> 00:55:06,480
experience mostly stalled because all

1334
00:55:06,480 --> 00:55:08,960
the people working toward getting that

1335
00:55:08,960 --> 00:55:11,280
deployed are really interested in mpls

1336
00:55:11,280 --> 00:55:14,079
networks so the solution

1337
00:55:14,079 --> 00:55:17,440
for supporting native ipv6 only networks

1338
00:55:17,440 --> 00:55:19,200
that are not running anything else is

1339
00:55:19,200 --> 00:55:22,480
not to be native ipv6 only networks but

1340
00:55:22,480 --> 00:55:24,640
to run the beer forwarding plane hop by

1341
00:55:24,640 --> 00:55:27,280
hop in parallel to the ipv6 forwarding

1342
00:55:27,280 --> 00:55:29,440
plane

1343
00:55:29,440 --> 00:55:31,119
and that basically depending on whether

1344
00:55:31,119 --> 00:55:33,599
you can implement beer hop by hop on

1345
00:55:33,599 --> 00:55:36,400
every router or just on a few routers is

1346
00:55:36,400 --> 00:55:39,520
either two layers or you know if if only

1347
00:55:39,520 --> 00:55:40,880
some routers are upgraded you are

1348
00:55:40,880 --> 00:55:42,799
running

1349
00:55:42,799 --> 00:55:46,480
end to end ipv6 over hop by hop

1350
00:55:46,480 --> 00:55:50,000
beer over then hop by hop ipv6 tunnels

1351
00:55:50,000 --> 00:55:52,640
so three layers of encapsulations so

1352
00:55:52,640 --> 00:55:54,960
that is that is working quote in the way

1353
00:55:54,960 --> 00:55:56,000
fine

1354
00:55:56,000 --> 00:55:57,760
as a lot of other technologies we've

1355
00:55:57,760 --> 00:56:00,880
done is working fine next slide

1356
00:56:00,880 --> 00:56:02,799
to the end that

1357
00:56:02,799 --> 00:56:04,799
my experience has been that

1358
00:56:04,799 --> 00:56:06,720
something really is working for ib

1359
00:56:06,720 --> 00:56:09,200
multicast when operators want to apply

1360
00:56:09,200 --> 00:56:11,520
use and deploy it successfully

1361
00:56:11,520 --> 00:56:12,880
when it is

1362
00:56:12,880 --> 00:56:15,359
trying to be as close as possible to the

1363
00:56:15,359 --> 00:56:17,040
unicast technologies that are being

1364
00:56:17,040 --> 00:56:19,200
deployed in the network and so i wanted

1365
00:56:19,200 --> 00:56:22,160
to give some very high level elements to

1366
00:56:22,160 --> 00:56:24,240
say that what beer is doing is just not

1367
00:56:24,240 --> 00:56:25,920
the right solution for a native ipv6

1368
00:56:25,920 --> 00:56:27,599
network because it doesn't match these

1369
00:56:27,599 --> 00:56:29,280
expectations

1370
00:56:29,280 --> 00:56:32,480
so we started in 89 with native ipv4

1371
00:56:32,480 --> 00:56:36,240
multicast and by adding that to uh ip

1372
00:56:36,240 --> 00:56:38,400
with exactly the same packet headers and

1373
00:56:38,400 --> 00:56:40,000
as much the same behavior somewhere we

1374
00:56:40,000 --> 00:56:41,760
needed to sneak the replication in of

1375
00:56:41,760 --> 00:56:42,799
course

1376
00:56:42,799 --> 00:56:45,119
we were allowed to reuse and extend the

1377
00:56:45,119 --> 00:56:47,200
whole ecosystem of ip and later in the

1378
00:56:47,200 --> 00:56:50,720
same way of ipv6 starting from the sdks

1379
00:56:50,720 --> 00:56:53,680
the socket apis the qs diffserv insert

1380
00:56:53,680 --> 00:56:57,359
rsvp acls all the layer 2 encapsulation

1381
00:56:57,359 --> 00:56:59,680
that ip headers were built for ipfix

1382
00:56:59,680 --> 00:57:01,440
ipsec i can go on

1383
00:57:01,440 --> 00:57:03,599
uh i've actually spent part of my career

1384
00:57:03,599 --> 00:57:05,680
of implementing or you know architecting

1385
00:57:05,680 --> 00:57:08,160
a lot of these add-ons to ip and i'm

1386
00:57:08,160 --> 00:57:10,480
just you know

1387
00:57:10,480 --> 00:57:12,480
really scared of having to do all of

1388
00:57:12,480 --> 00:57:14,799
this uh you know four beer

1389
00:57:14,799 --> 00:57:17,440
every time that comes around if we have

1390
00:57:17,440 --> 00:57:19,440
the option for existing ip networks to

1391
00:57:19,440 --> 00:57:22,400
have a native ipv6 solution as well

1392
00:57:22,400 --> 00:57:23,920
that would allow us to have the same

1393
00:57:23,920 --> 00:57:27,119
benefits of reusing all these ecosystem

1394
00:57:27,119 --> 00:57:28,799
elements that we do understand how to

1395
00:57:28,799 --> 00:57:31,119
build them for ip

1396
00:57:31,119 --> 00:57:32,799
we also

1397
00:57:32,799 --> 00:57:35,680
did try to come up with cool new novel

1398
00:57:35,680 --> 00:57:38,880
multicast routing mospf and dmvpn and

1399
00:57:38,880 --> 00:57:40,960
after a couple years we figured out well

1400
00:57:40,960 --> 00:57:42,799
that's going to be not of fun for the

1401
00:57:42,799 --> 00:57:45,040
operators so we had to revert to a

1402
00:57:45,040 --> 00:57:47,200
multicast technology that is

1403
00:57:47,200 --> 00:57:49,760
using all the deployed unicast routing

1404
00:57:49,760 --> 00:57:52,400
protocol just so that multicast became

1405
00:57:52,400 --> 00:57:53,440
operable

1406
00:57:53,440 --> 00:57:55,440
then basically we had perfectly well

1407
00:57:55,440 --> 00:57:58,160
working mvpn services for multicast in

1408
00:57:58,160 --> 00:57:59,440
mpls

1409
00:57:59,440 --> 00:58:01,680
networks which wasn't using mpls

1410
00:58:01,680 --> 00:58:03,520
encapsulation but which was using ip

1411
00:58:03,520 --> 00:58:05,359
multicast encapsulation they said yeah

1412
00:58:05,359 --> 00:58:06,960
the customers are buying it it's fine

1413
00:58:06,960 --> 00:58:08,720
but it doesn't meet our operational

1414
00:58:08,720 --> 00:58:10,160
expectation of our network which is

1415
00:58:10,160 --> 00:58:13,119
purely mpls forwarding plane base so we

1416
00:58:13,119 --> 00:58:15,680
spent another 10 years

1417
00:58:15,680 --> 00:58:18,160
to build native mpls forwarding plane

1418
00:58:18,160 --> 00:58:20,480
for those mpls networks well done total

1419
00:58:20,480 --> 00:58:22,559
duplication of ip but that's how the

1420
00:58:22,559 --> 00:58:24,319
market space works right you have people

1421
00:58:24,319 --> 00:58:26,160
who run native ip networks and you have

1422
00:58:26,160 --> 00:58:28,000
people who run what i would call native

1423
00:58:28,000 --> 00:58:30,079
mpls networks and

1424
00:58:30,079 --> 00:58:32,480
i think in that respect the beer has

1425
00:58:32,480 --> 00:58:34,160
kind of evolved over the time that the

1426
00:58:34,160 --> 00:58:35,440
working group has been trying to be

1427
00:58:35,440 --> 00:58:38,079
focused to deliver something running

1428
00:58:38,079 --> 00:58:40,000
really on the mpls solution and the

1429
00:58:40,000 --> 00:58:43,040
proposed draft for this you know ipv6

1430
00:58:43,040 --> 00:58:46,079
over beer over ipv6 is kind of an add-on

1431
00:58:46,079 --> 00:58:47,839
that

1432
00:58:47,839 --> 00:58:49,680
is really not meeting the requirements

1433
00:58:49,680 --> 00:58:52,160
of native ipv6 networks clarifying

1434
00:58:52,160 --> 00:58:53,280
questions

1435
00:58:53,280 --> 00:58:55,359
yes uh

1436
00:58:55,359 --> 00:58:58,640
greg asked already what is native ip yes

1437
00:58:58,640 --> 00:59:00,000
next slide

1438
00:59:00,000 --> 00:59:01,599
thanks for the

1439
00:59:01,599 --> 00:59:03,200
intro right um

1440
00:59:03,200 --> 00:59:06,079
so wait a second was it the next slide

1441
00:59:06,079 --> 00:59:07,359
go go back

1442
00:59:07,359 --> 00:59:08,480
did i

1443
00:59:08,480 --> 00:59:11,200
go back maybe no

1444
00:59:11,200 --> 00:59:13,359
okay i'm trying to yeah i have my

1445
00:59:13,359 --> 00:59:15,280
homework my dog trying to remember which

1446
00:59:15,280 --> 00:59:17,040
slide it was on

1447
00:59:17,040 --> 00:59:19,040
let me get back to it if it's not i'm

1448
00:59:19,040 --> 00:59:20,720
sorry i'm maybe a little bit confused

1449
00:59:20,720 --> 00:59:23,839
here um all right

1450
00:59:24,640 --> 00:59:26,960
that's that's next

1451
00:59:26,960 --> 00:59:28,640
no no i'm just trying to remember which

1452
00:59:28,640 --> 00:59:30,960
slide it was on right so um the

1453
00:59:30,960 --> 00:59:33,520
stateless stuff is was was the other big

1454
00:59:33,520 --> 00:59:36,480
thing right so let's uh talk about three

1455
00:59:36,480 --> 00:59:38,880
key parts right so me um the most

1456
00:59:38,880 --> 00:59:41,040
important part is the operation

1457
00:59:41,040 --> 00:59:42,480
simplicity troubleshooting and

1458
00:59:42,480 --> 00:59:44,000
everything else

1459
00:59:44,000 --> 00:59:46,000
where you eliminate a lot of complexity

1460
00:59:46,000 --> 00:59:47,520
of the stateful so

1461
00:59:47,520 --> 00:59:48,799
um

1462
00:59:48,799 --> 00:59:51,359
there's a lot of of aspects here in

1463
00:59:51,359 --> 00:59:53,760
details that i think we can revisit if

1464
00:59:53,760 --> 00:59:55,920
we had more time in the solution slide

1465
00:59:55,920 --> 00:59:57,359
but of course it was also the core

1466
00:59:57,359 --> 00:59:59,040
reason for beer the scale and

1467
00:59:59,040 --> 01:00:01,839
convergence is where effectively the

1468
01:00:01,839 --> 01:00:02,720
same

1469
01:00:02,720 --> 01:00:06,000
applies and in the solution slides i

1470
01:00:06,000 --> 01:00:07,920
think you should see that by going away

1471
01:00:07,920 --> 01:00:09,920
from what i call the flat bit strings

1472
01:00:09,920 --> 01:00:12,640
that be introduced into uh you know more

1473
01:00:12,640 --> 01:00:14,559
advanced processable

1474
01:00:14,559 --> 01:00:16,720
encoding of the

1475
01:00:16,720 --> 01:00:19,839
destinations or the destination trees we

1476
01:00:19,839 --> 01:00:21,760
think that we should be able to achieve

1477
01:00:21,760 --> 01:00:23,680
a lot better scalability

1478
01:00:23,680 --> 01:00:25,040
which we need for the large service

1479
01:00:25,040 --> 01:00:26,559
provider networks

1480
01:00:26,559 --> 01:00:28,799
and that would obviously also be

1481
01:00:28,799 --> 01:00:30,400
considered to be one of the core

1482
01:00:30,400 --> 01:00:33,040
requirements

1483
01:00:33,119 --> 01:00:35,920
the the additional thing that

1484
01:00:35,920 --> 01:00:38,240
people often forget is that when we want

1485
01:00:38,240 --> 01:00:39,119
to

1486
01:00:39,119 --> 01:00:41,280
replicate the ecosystem we want to get

1487
01:00:41,280 --> 01:00:43,200
all the way up to the application layer

1488
01:00:43,200 --> 01:00:45,119
and that means we need to get into

1489
01:00:45,119 --> 01:00:48,160
socket apis and socket apis have been

1490
01:00:48,160 --> 01:00:50,160
extended to support ipv6 extension

1491
01:00:50,160 --> 01:00:52,720
headers for ipv6 20 years ago with that

1492
01:00:52,720 --> 01:00:54,559
rfc number that's barely visible on the

1493
01:00:54,559 --> 01:00:57,839
slide whereas extensions for other

1494
01:00:57,839 --> 01:01:01,040
new technologies um that we have done

1495
01:01:01,040 --> 01:01:02,160
would be

1496
01:01:02,160 --> 01:01:03,520
much uh

1497
01:01:03,520 --> 01:01:05,839
yeah would have to wait another 10 years

1498
01:01:05,839 --> 01:01:07,440
that's kind of the minimum time we've

1499
01:01:07,440 --> 01:01:08,480
seen

1500
01:01:08,480 --> 01:01:10,880
next slide

1501
01:01:10,880 --> 01:01:12,240
no

1502
01:01:12,240 --> 01:01:13,839
sorry can you

1503
01:01:13,839 --> 01:01:15,119
i can

1504
01:01:15,119 --> 01:01:16,160
i'm kind of

1505
01:01:16,160 --> 01:01:18,400
no you've got the old slide deck

1506
01:01:18,400 --> 01:01:22,720
i i i gave you a new slide

1507
01:01:22,720 --> 01:01:24,879
press

1508
01:01:47,520 --> 01:01:49,200
i gave you the one one

1509
01:01:49,200 --> 01:01:53,000
so that's what you have

1510
01:02:02,000 --> 01:02:04,240
yes

1511
01:02:04,319 --> 01:02:07,038
okay looks

1512
01:02:09,200 --> 01:02:12,680
sorry for that

1513
01:02:20,240 --> 01:02:21,920
okay there we go

1514
01:02:21,920 --> 01:02:24,079
yeah okay thanks that was the slide i

1515
01:02:24,079 --> 01:02:26,079
was missing sorry

1516
01:02:26,079 --> 01:02:27,520
okay

1517
01:02:27,520 --> 01:02:30,640
so express divs over over beer right so

1518
01:02:30,640 --> 01:02:33,599
native ipv6 networks means ipv6 networks

1519
01:02:33,599 --> 01:02:35,760
with or without srv6

1520
01:02:35,760 --> 01:02:37,599
obviously the srv6 networks are the

1521
01:02:37,599 --> 01:02:39,440
first one that understand the benefit of

1522
01:02:39,440 --> 01:02:40,880
stateless

1523
01:02:40,880 --> 01:02:43,039
traffic steering so they would obviously

1524
01:02:43,039 --> 01:02:45,119
like to have exactly the same type of

1525
01:02:45,119 --> 01:02:46,480
stateless traffic steering for the

1526
01:02:46,480 --> 01:02:49,359
multicast traffic but in the end native

1527
01:02:49,359 --> 01:02:52,319
ipv6 source routing by hop by hop end to

1528
01:02:52,319 --> 01:02:55,599
end native ipv6 multicast hop by hop and

1529
01:02:55,599 --> 01:02:57,200
end to end so that basically means on

1530
01:02:57,200 --> 01:02:59,280
every hub you're forwarding the packet

1531
01:02:59,280 --> 01:03:02,640
based on the rfc 8200 rules including

1532
01:03:02,640 --> 01:03:05,680
the rules that apply to ip multicast

1533
01:03:05,680 --> 01:03:08,400
packets the rules that apply to source

1534
01:03:08,400 --> 01:03:11,039
routing and the fact that you're doing

1535
01:03:11,039 --> 01:03:13,200
that source routing based on

1536
01:03:13,200 --> 01:03:15,200
a

1537
01:03:15,200 --> 01:03:16,880
route header with the source routing

1538
01:03:16,880 --> 01:03:18,160
segments like

1539
01:03:18,160 --> 01:03:19,839
we have two of them for unicast right

1540
01:03:19,839 --> 01:03:21,280
srh for

1541
01:03:21,280 --> 01:03:24,160
um srv6 and the other one being the

1542
01:03:24,160 --> 01:03:26,799
ripple header for the iot networks so in

1543
01:03:26,799 --> 01:03:28,799
the same way we would have an extension

1544
01:03:28,799 --> 01:03:30,720
header for multicast source routing that

1545
01:03:30,720 --> 01:03:34,000
meets exactly the same native ipv6 hop

1546
01:03:34,000 --> 01:03:36,559
by hop routing requirements

1547
01:03:36,559 --> 01:03:38,079
i think it's also important to have the

1548
01:03:38,079 --> 01:03:40,640
daywi day one support for path steering

1549
01:03:40,640 --> 01:03:42,319
and strict and loose hops which

1550
01:03:42,319 --> 01:03:45,359
basically means to be uh equally

1551
01:03:45,359 --> 01:03:47,280
efficient in the stack

1552
01:03:47,280 --> 01:03:49,839
whether you have a support by hop by hop

1553
01:03:49,839 --> 01:03:51,599
for the technology or only on a few

1554
01:03:51,599 --> 01:03:54,000
incremental hops and then um you can

1555
01:03:54,000 --> 01:03:56,880
lose the loose uh loose hops so the more

1556
01:03:56,880 --> 01:03:59,920
scalable i mentioned before that's the

1557
01:03:59,920 --> 01:04:01,680
best effort and what we call the traffic

1558
01:04:01,680 --> 01:04:03,599
engineering path steering solution the

1559
01:04:03,599 --> 01:04:05,599
modes and that's where i mentioned the

1560
01:04:05,599 --> 01:04:07,599
flat bit strings have in our simulations

1561
01:04:07,599 --> 01:04:10,240
been shown to require more copies to be

1562
01:04:10,240 --> 01:04:12,880
sent to receivers for the same set of

1563
01:04:12,880 --> 01:04:15,520
especially small receivers things so i i

1564
01:04:15,520 --> 01:04:16,960
detail that in one of the solution

1565
01:04:16,960 --> 01:04:18,720
drafts that we have

1566
01:04:18,720 --> 01:04:20,720
and then of course very important as you

1567
01:04:20,720 --> 01:04:22,720
saw from guyan's slide deck the

1568
01:04:22,720 --> 01:04:25,039
integrated support in the header for

1569
01:04:25,039 --> 01:04:27,039
service guarantees beyond best effort

1570
01:04:27,039 --> 01:04:29,680
which so far has been punted off to

1571
01:04:29,680 --> 01:04:31,359
other working groups so combining these

1572
01:04:31,359 --> 01:04:33,200
things is really difficult when you need

1573
01:04:33,200 --> 01:04:35,839
to do these things hop by hop

1574
01:04:35,839 --> 01:04:38,319
and you only have or one routing header

1575
01:04:38,319 --> 01:04:40,079
that actually can be processed hot by

1576
01:04:40,079 --> 01:04:41,920
hop so that's why i think it needs to be

1577
01:04:41,920 --> 01:04:44,160
integrated and the rest is terminology

1578
01:04:44,160 --> 01:04:46,880
and and and a sample picture next slide

1579
01:04:46,880 --> 01:04:48,960
which is the last slide there

1580
01:04:48,960 --> 01:04:50,799
um i think

1581
01:04:50,799 --> 01:04:52,400
the really cool thing that we can do

1582
01:04:52,400 --> 01:04:54,319
with ipv6 by being something that has

1583
01:04:54,319 --> 01:04:55,920
been defined all the way end to end is

1584
01:04:55,920 --> 01:04:58,559
also for these constrained control

1585
01:04:58,559 --> 01:05:00,960
networks like a data center

1586
01:05:00,960 --> 01:05:03,760
enterprise iot and other spaces go all

1587
01:05:03,760 --> 01:05:06,839
the way up into the host using ipv6

1588
01:05:06,839 --> 01:05:10,079
um socket apis

1589
01:05:10,079 --> 01:05:10,799
and

1590
01:05:10,799 --> 01:05:12,720
then the typical use cases you start

1591
01:05:12,720 --> 01:05:15,200
with are the big data center

1592
01:05:15,200 --> 01:05:16,799
servers that are routers themselves so

1593
01:05:16,799 --> 01:05:18,400
they have all the existing routing

1594
01:05:18,400 --> 01:05:19,760
requirements

1595
01:05:19,760 --> 01:05:21,599
to to be able to apply the existing

1596
01:05:21,599 --> 01:05:23,520
technologies and then there is uh

1597
01:05:23,520 --> 01:05:25,520
additional requirements when the hosts

1598
01:05:25,520 --> 01:05:27,599
are not routers so that's kind of the

1599
01:05:27,599 --> 01:05:30,000
these last two slides the two high-level

1600
01:05:30,000 --> 01:05:31,440
requirements derived from the

1601
01:05:31,440 --> 01:05:33,839
operational experience and the need to

1602
01:05:33,839 --> 01:05:36,480
have a native ipv6 network

1603
01:05:36,480 --> 01:05:38,160
where stateless multicast isn't a

1604
01:05:38,160 --> 01:05:40,720
second-class citizen by using some you

1605
01:05:40,720 --> 01:05:43,599
know non-ipv6 native technology

1606
01:05:43,599 --> 01:05:45,760
i think then there's the magic inside at

1607
01:05:45,760 --> 01:05:46,720
the end

1608
01:05:46,720 --> 01:05:47,920
so yeah

1609
01:05:47,920 --> 01:05:48,880
right

1610
01:05:48,880 --> 01:05:50,240
that's what we would like to have right

1611
01:05:50,240 --> 01:05:52,640
msr6 keep it simple and make ipv6

1612
01:05:52,640 --> 01:05:54,240
multicast great again

1613
01:05:54,240 --> 01:05:56,880
um so native state is multicast for all

1614
01:05:56,880 --> 01:05:58,640
ipv6 networks

1615
01:05:58,640 --> 01:06:01,119
um stateless ipv6 multicast into

1616
01:06:01,119 --> 01:06:03,440
applications data center industrial so

1617
01:06:03,440 --> 01:06:05,599
on and reuse and share all the good

1618
01:06:05,599 --> 01:06:07,440
things that beer has done

1619
01:06:07,440 --> 01:06:09,680
all right thank you questions thank you

1620
01:06:09,680 --> 01:06:12,880
okay thank you uh greg mursky um

1621
01:06:12,880 --> 01:06:16,079
i have one question okay first question

1622
01:06:16,079 --> 01:06:16,799
is

1623
01:06:16,799 --> 01:06:19,599
what is alternative to

1624
01:06:19,599 --> 01:06:22,319
native ipv6

1625
01:06:22,319 --> 01:06:24,640
because it appears that in your

1626
01:06:24,640 --> 01:06:28,280
definition in native you include support

1627
01:06:28,280 --> 01:06:32,240
ipv6 and a service 6.

1628
01:06:32,240 --> 01:06:33,119
so

1629
01:06:33,119 --> 01:06:37,119
no i'm saying native ipv6 means

1630
01:06:37,119 --> 01:06:39,599
forwarding hop by hop on rfc 8200

1631
01:06:39,599 --> 01:06:40,960
whether it has

1632
01:06:40,960 --> 01:06:44,079
an srv6 extension header or not okay and

1633
01:06:44,079 --> 01:06:45,440
then what is

1634
01:06:45,440 --> 01:06:48,640
opposite to native ip well if you're not

1635
01:06:48,640 --> 01:06:51,440
going to do forwarding hop by hop on rfc

1636
01:06:51,440 --> 01:06:53,119
8200 rules

1637
01:06:53,119 --> 01:06:54,559
then what do you do

1638
01:06:54,559 --> 01:06:56,799
um i don't know i for example beer right

1639
01:06:56,799 --> 01:06:58,400
beer is a different forwarding plane it

1640
01:06:58,400 --> 01:07:00,000
could be mpls it's a different

1641
01:07:00,000 --> 01:07:02,079
forwarding plane if i'm going to do

1642
01:07:02,079 --> 01:07:04,240
forwarding based on an mpls header

1643
01:07:04,240 --> 01:07:06,640
that's not native ip if i'm forwarding

1644
01:07:06,640 --> 01:07:09,280
based on beer it's not native rfc 8200

1645
01:07:09,280 --> 01:07:11,760
forwarding but then we call it mpls

1646
01:07:11,760 --> 01:07:14,079
network if we yes if we forward on

1647
01:07:14,079 --> 01:07:16,079
ethernet it's ethernet if it's call an

1648
01:07:16,079 --> 01:07:18,079
mpls it's intellis it's not native

1649
01:07:18,079 --> 01:07:20,559
ethernet it's not native to mpls i think

1650
01:07:20,559 --> 01:07:21,839
that's that's why i'm having this

1651
01:07:21,839 --> 01:07:24,319
picture up we've used the term native

1652
01:07:24,319 --> 01:07:27,280
for ipv6 and multicast and so on for for

1653
01:07:27,280 --> 01:07:29,920
a long time to basically recognize that

1654
01:07:29,920 --> 01:07:32,559
we're doing the forwarding based on that

1655
01:07:32,559 --> 01:07:35,200
particular um forwarding technology so

1656
01:07:35,200 --> 01:07:37,520
ipv6 network okay

1657
01:07:37,520 --> 01:07:41,359
then second point is that

1658
01:07:41,359 --> 01:07:42,880
stateless

1659
01:07:42,880 --> 01:07:47,359
and simplicity of operation is counter

1660
01:07:47,359 --> 01:07:48,720
to each other

1661
01:07:48,720 --> 01:07:50,640
because

1662
01:07:50,640 --> 01:07:52,960
it's much easier to debug and

1663
01:07:52,960 --> 01:07:55,119
troubleshoot stateful network rather

1664
01:07:55,119 --> 01:07:56,480
than stateless

1665
01:07:56,480 --> 01:07:58,640
that's a statement and i think we we we

1666
01:07:58,640 --> 01:08:00,960
can make votes for that or so but i

1667
01:08:00,960 --> 01:08:02,160
think

1668
01:08:02,160 --> 01:08:03,359
there are people on the other side of

1669
01:08:03,359 --> 01:08:05,359
that equation as well thanks greg thanks

1670
01:08:05,359 --> 01:08:08,720
dolos thank you steve

1671
01:08:09,200 --> 01:08:10,960
so a lot of people are not joining the

1672
01:08:10,960 --> 01:08:12,400
uh thing so i'm just like keeping it in

1673
01:08:12,400 --> 01:08:14,400
my head so i apologize but greatly

1674
01:08:14,400 --> 01:08:15,920
appreciate if you can actually join the

1675
01:08:15,920 --> 01:08:19,679
app on there so i have stig tony p

1676
01:08:19,679 --> 01:08:20,560
uh

1677
01:08:20,560 --> 01:08:21,839
greg

1678
01:08:21,839 --> 01:08:22,880
joel

1679
01:08:22,880 --> 01:08:24,479
that's what's in my head

1680
01:08:24,479 --> 01:08:27,040
thank you yeah stigma yeah i'll remember

1681
01:08:27,040 --> 01:08:29,040
to use that sorry um

1682
01:08:29,040 --> 01:08:31,279
so it sounds like this is very simple

1683
01:08:31,279 --> 01:08:33,759
and just plain old ipv6 but

1684
01:08:33,759 --> 01:08:35,600
i suspect that you know you have to

1685
01:08:35,600 --> 01:08:37,120
encode new things in the packets you

1686
01:08:37,120 --> 01:08:39,920
need to process them and how you do that

1687
01:08:39,920 --> 01:08:44,158
processing is very different from ipv6

1688
01:08:44,560 --> 01:08:46,319
i know we haven't took the solutions yes

1689
01:08:46,319 --> 01:08:48,960
but no no i mean it it it is basically a

1690
01:08:48,960 --> 01:08:50,319
a steering header where we need to

1691
01:08:50,319 --> 01:08:53,198
represent a set of destination or a tree

1692
01:08:53,198 --> 01:08:54,880
not necessarily through flat bit strings

1693
01:08:54,880 --> 01:08:56,238
but through better encoding for the

1694
01:08:56,238 --> 01:08:59,279
scalability you know it started with rsv

1695
01:08:59,279 --> 01:09:02,000
sorry with brte you know me recognizing

1696
01:09:02,000 --> 01:09:03,600
the scalability issues but then we did

1697
01:09:03,600 --> 01:09:05,279
the simulation comparison so that's one

1698
01:09:05,279 --> 01:09:06,479
thing the other thing is the other

1699
01:09:06,479 --> 01:09:08,399
header elements that we want to make

1700
01:09:08,399 --> 01:09:10,479
sure obviously it needs to be native v6

1701
01:09:10,479 --> 01:09:11,920
so we need to have the multicast

1702
01:09:11,920 --> 01:09:13,759
destination address in the header and

1703
01:09:13,759 --> 01:09:15,679
then i'm thinking we also want to have

1704
01:09:15,679 --> 01:09:17,520
the qs header elements for example from

1705
01:09:17,520 --> 01:09:19,198
what we see we would need in a stateless

1706
01:09:19,198 --> 01:09:20,960
mode of operation for that net but

1707
01:09:20,960 --> 01:09:22,399
that's a lot of details that i didn't

1708
01:09:22,399 --> 01:09:24,319
want to put in the requirements they are

1709
01:09:24,319 --> 01:09:26,000
requirements in my opinion but i just

1710
01:09:26,000 --> 01:09:28,158
had them very high level yeah i suspect

1711
01:09:28,158 --> 01:09:30,238
that there are some complexities once

1712
01:09:30,238 --> 01:09:32,158
you start digging into yeah they're the

1713
01:09:32,158 --> 01:09:34,238
solution drafts where where more of

1714
01:09:34,238 --> 01:09:35,920
these details are being being set so

1715
01:09:35,920 --> 01:09:38,640
that's the other side

1716
01:09:39,920 --> 01:09:42,640
yeah thank you

1717
01:09:42,799 --> 01:09:44,640
tony p i don't know if you just went

1718
01:09:44,640 --> 01:09:47,120
away but

1719
01:09:47,120 --> 01:09:50,000
okay joel halpern from erickson

1720
01:09:50,000 --> 01:09:51,920
if i hear this

1721
01:09:51,920 --> 01:09:55,440
claim that somehow this is native ipv6

1722
01:09:55,440 --> 01:09:58,000
and somehow that means this is better

1723
01:09:58,000 --> 01:10:01,120
one more time i may scream

1724
01:10:01,120 --> 01:10:03,120
doing forwarding is hard

1725
01:10:03,120 --> 01:10:06,080
there is a thing called ipv6 forwarding

1726
01:10:06,080 --> 01:10:08,800
this thing that you are asking for in

1727
01:10:08,800 --> 01:10:11,920
this bath involves representing a tree

1728
01:10:11,920 --> 01:10:14,400
and involves replicating packets along

1729
01:10:14,400 --> 01:10:16,800
different branches of the tree properly

1730
01:10:16,800 --> 01:10:20,159
processing some different representation

1731
01:10:20,159 --> 01:10:22,239
whether you put that representation in

1732
01:10:22,239 --> 01:10:25,440
an mpls stack in an srv6 stack that

1733
01:10:25,440 --> 01:10:28,080
doesn't yet exist or in an extension

1734
01:10:28,080 --> 01:10:31,040
header it is still not the same as

1735
01:10:31,040 --> 01:10:35,280
current native existing ipv6

1736
01:10:35,280 --> 01:10:36,470
slides and

1737
01:10:36,470 --> 01:10:37,110
[Music]

1738
01:10:37,110 --> 01:10:38,239
[Applause]

1739
01:10:38,239 --> 01:10:40,000
go further back further

1740
01:10:40,000 --> 01:10:42,320
more further yeah further

1741
01:10:42,320 --> 01:10:47,199
further right so um joe um

1742
01:10:47,199 --> 01:10:49,600
we we can argue about the native um you

1743
01:10:49,600 --> 01:10:51,840
know i think nobody here rejected the

1744
01:10:51,840 --> 01:10:53,440
term when we were running around for ten

1745
01:10:53,440 --> 01:10:55,440
years saying uh go native for ip

1746
01:10:55,440 --> 01:10:57,120
multicast and we called it native ip

1747
01:10:57,120 --> 01:10:59,280
multicast so you know i'm calling it

1748
01:10:59,280 --> 01:11:02,719
native ipv6 um that's that's fine if if

1749
01:11:02,719 --> 01:11:05,440
if the discourse gets down to how we

1750
01:11:05,440 --> 01:11:07,600
call it let's just call it you know

1751
01:11:07,600 --> 01:11:10,719
uh rfc 8200 forwarding which is what

1752
01:11:10,719 --> 01:11:12,800
ipv6 does which is what this solution

1753
01:11:12,800 --> 01:11:15,679
does it does rfc 8200 forwarding rules

1754
01:11:15,679 --> 01:11:18,239
and then um basically no not all the

1755
01:11:18,239 --> 01:11:20,400
type of encodings are the same if you

1756
01:11:20,400 --> 01:11:24,480
have you know ipv6 in beer in ipv6 that

1757
01:11:24,480 --> 01:11:27,920
is not matching um what and uh

1758
01:11:27,920 --> 01:11:29,840
i'm still calling it a native ipv6

1759
01:11:29,840 --> 01:11:32,480
operator with an ipv6 only network wants

1760
01:11:32,480 --> 01:11:35,120
to have right so so that is

1761
01:11:35,120 --> 01:11:38,239
i mean why the heck are we having srv6

1762
01:11:38,239 --> 01:11:39,760
stateless source routing if we could

1763
01:11:39,760 --> 01:11:41,520
have done that with mpls as well thank

1764
01:11:41,520 --> 01:11:43,360
you very much right and that was of

1765
01:11:43,360 --> 01:11:45,360
course not acceptable for operators of

1766
01:11:45,360 --> 01:11:47,280
native ipv6 networks they wanted to have

1767
01:11:47,280 --> 01:11:49,679
a native ipv6 source routing solution

1768
01:11:49,679 --> 01:11:54,000
for unicast that's as simple as it goes

1769
01:11:54,000 --> 01:11:56,880
greg shepard representing me

1770
01:11:56,880 --> 01:11:58,000
uh

1771
01:11:58,000 --> 01:12:00,000
i can't match what joel won at his

1772
01:12:00,000 --> 01:12:01,679
emotional level was was brilliant thank

1773
01:12:01,679 --> 01:12:04,640
you joel um i feel all of that watching

1774
01:12:04,640 --> 01:12:06,880
this presentation so much misrepresented

1775
01:12:06,880 --> 01:12:08,159
of what happened in the beer working

1776
01:12:08,159 --> 01:12:09,040
group

1777
01:12:09,040 --> 01:12:10,640
what happened with this work along the

1778
01:12:10,640 --> 01:12:12,800
way but we can go specifically to the

1779
01:12:12,800 --> 01:12:14,400
host stack

1780
01:12:14,400 --> 01:12:15,280
because

1781
01:12:15,280 --> 01:12:17,760
beer is not a

1782
01:12:17,760 --> 01:12:19,600
routing protocol it's a forwarding

1783
01:12:19,600 --> 01:12:21,360
paradigm

1784
01:12:21,360 --> 01:12:23,440
beer says nothing about ip beer says

1785
01:12:23,440 --> 01:12:25,520
nothing about mpls

1786
01:12:25,520 --> 01:12:28,159
so all these

1787
01:12:28,159 --> 01:12:29,760
all this baggage you're hanging on the

1788
01:12:29,760 --> 01:12:32,080
discussion is a is a fabrication and

1789
01:12:32,080 --> 01:12:34,320
there's a misrepresentation at best

1790
01:12:34,320 --> 01:12:36,400
what's happened in the other group but

1791
01:12:36,400 --> 01:12:38,320
in the host stack when you say this you

1792
01:12:38,320 --> 01:12:40,239
know can't be done take 20 years it's

1793
01:12:40,239 --> 01:12:42,400
been done

1794
01:12:42,400 --> 01:12:44,080
i'm not employed currently and i'm

1795
01:12:44,080 --> 01:12:45,440
actually unemployable and after this

1796
01:12:45,440 --> 01:12:46,960
conversation i'm probably going to

1797
01:12:46,960 --> 01:12:50,320
make that concrete but uh

1798
01:12:50,320 --> 01:12:54,000
we had an aws uh beer overlay

1799
01:12:54,000 --> 01:12:56,880
infrastructure four years ago

1800
01:12:56,880 --> 01:12:58,880
all host-based

1801
01:12:58,880 --> 01:13:00,719
so to say it can't be done or it takes

1802
01:13:00,719 --> 01:13:03,199
20 years is is

1803
01:13:03,199 --> 01:13:05,280
at

1804
01:13:05,280 --> 01:13:07,600
at best it's black's imagination

1805
01:13:07,600 --> 01:13:10,159
and at worst is completely disingenuous

1806
01:13:10,159 --> 01:13:13,120
um greg um can i ask you a question like

1807
01:13:13,120 --> 01:13:14,800
as like your chair

1808
01:13:14,800 --> 01:13:17,120
so uh can i interpret your answer as

1809
01:13:17,120 --> 01:13:19,280
like you know beer is kind of open to

1810
01:13:19,280 --> 01:13:21,040
other kind of encapsulations than what

1811
01:13:21,040 --> 01:13:22,960
is defined like you don't have to answer

1812
01:13:22,960 --> 01:13:24,560
it like as like the chair itself but

1813
01:13:24,560 --> 01:13:26,159
like do you have any thoughts on it oh

1814
01:13:26,159 --> 01:13:28,719
i'd love to okay because we

1815
01:13:28,719 --> 01:13:30,560
when this work was first presented it

1816
01:13:30,560 --> 01:13:32,480
was presented as transitional

1817
01:13:32,480 --> 01:13:33,760
and we made it clear we're not changing

1818
01:13:33,760 --> 01:13:34,800
the forwarding plane for something

1819
01:13:34,800 --> 01:13:36,560
transitional when they admitted the

1820
01:13:36,560 --> 01:13:38,640
authors that they they wanted to go to

1821
01:13:38,640 --> 01:13:39,920
native beer

1822
01:13:39,920 --> 01:13:41,199
and when that didn't work and get their

1823
01:13:41,199 --> 01:13:43,280
work actually accepted we had this

1824
01:13:43,280 --> 01:13:45,120
whack-a-mole process around round round

1825
01:13:45,120 --> 01:13:48,000
round but what i made clear is that

1826
01:13:48,000 --> 01:13:50,640
an encapsulation sounds great we're not

1827
01:13:50,640 --> 01:13:52,640
changing the encoding

1828
01:13:52,640 --> 01:13:55,280
the the ads were clear when we had the

1829
01:13:55,280 --> 01:13:56,960
beer buff

1830
01:13:56,960 --> 01:14:00,480
this is probably a not an exact quote uh

1831
01:14:00,480 --> 01:14:03,280
from aaliyah but the message i got was

1832
01:14:03,280 --> 01:14:06,239
don't with a forwarding plane

1833
01:14:06,239 --> 01:14:08,080
so we had to get it right

1834
01:14:08,080 --> 01:14:09,600
and when you get it right and you cut it

1835
01:14:09,600 --> 01:14:10,960
in stone

1836
01:14:10,960 --> 01:14:13,040
you're protected

1837
01:14:13,040 --> 01:14:14,400
and

1838
01:14:14,400 --> 01:14:15,679
taking those bits and shoving them

1839
01:14:15,679 --> 01:14:18,239
somewhere else and violating layers and

1840
01:14:18,239 --> 01:14:21,040
calling it integration it's not

1841
01:14:21,040 --> 01:14:23,520
it's not honest discussion

1842
01:14:23,520 --> 01:14:25,120
and it doesn't represent

1843
01:14:25,120 --> 01:14:26,640
good architecture

1844
01:14:26,640 --> 01:14:27,840
it doesn't represent the layered

1845
01:14:27,840 --> 01:14:30,080
architecture that's have made all of us

1846
01:14:30,080 --> 01:14:32,239
successful here

1847
01:14:32,239 --> 01:14:33,120
so

1848
01:14:33,120 --> 01:14:34,880
i'm i'd love to have a technical

1849
01:14:34,880 --> 01:14:36,239
discussion

1850
01:14:36,239 --> 01:14:37,280
but

1851
01:14:37,280 --> 01:14:39,520
i have yet to be able to maintain a

1852
01:14:39,520 --> 01:14:41,360
technical technical discussion on this

1853
01:14:41,360 --> 01:14:42,480
topic

1854
01:14:42,480 --> 01:14:44,719
when there's so much disingenuous

1855
01:14:44,719 --> 01:14:46,719
garbage being flung out

1856
01:14:46,719 --> 01:14:48,560
and it just becomes word salad until

1857
01:14:48,560 --> 01:14:50,159
what we through attrition we finally

1858
01:14:50,159 --> 01:14:51,760
just give up

1859
01:14:51,760 --> 01:14:54,080
i'm not giving up

1860
01:14:54,080 --> 01:14:56,560
i don't understand how it is a uh you

1861
01:14:56,560 --> 01:14:58,719
know architectural garbage or what the

1862
01:14:58,719 --> 01:15:01,120
other words were that i forgot uh in in

1863
01:15:01,120 --> 01:15:03,120
your words when we are having an

1864
01:15:03,120 --> 01:15:04,320
equivalent

1865
01:15:04,320 --> 01:15:07,199
you could say of a multicast version of

1866
01:15:07,199 --> 01:15:09,280
an sr v6

1867
01:15:09,280 --> 01:15:12,800
routing header for ipv6 packets so

1868
01:15:12,800 --> 01:15:14,480
which is not markedly different than

1869
01:15:14,480 --> 01:15:17,120
encapsulating over v6 hot by hop with

1870
01:15:17,120 --> 01:15:19,600
the next protocol pointer no i mean it's

1871
01:15:19,600 --> 01:15:22,360
basically still hot by hop beer

1872
01:15:22,360 --> 01:15:25,199
rfc8279 based forwarding rules there

1873
01:15:25,199 --> 01:15:27,600
there is no reference for the forwarding

1874
01:15:27,600 --> 01:15:29,760
from you know uh a received beer packet

1875
01:15:29,760 --> 01:15:32,800
to send out your paper required

1876
01:15:32,800 --> 01:15:34,800
please let me finish it

1877
01:15:34,800 --> 01:15:37,120
so please let me finish

1878
01:15:37,120 --> 01:15:38,000
you the sentence

1879
01:15:38,000 --> 01:15:39,840
have an encoding that can stand

1880
01:15:39,840 --> 01:15:42,159
independent it can be encapsulated in

1881
01:15:42,159 --> 01:15:44,239
any way it

1882
01:15:44,239 --> 01:15:45,760
makes it flexible for the entire

1883
01:15:45,760 --> 01:15:47,040
community

1884
01:15:47,040 --> 01:15:48,640
when you integrate it

1885
01:15:48,640 --> 01:15:50,560
and violate layers you create a

1886
01:15:50,560 --> 01:15:52,880
dependency

1887
01:15:52,880 --> 01:15:54,640
i can't answer because you didn't let me

1888
01:15:54,640 --> 01:15:57,840
end uh finish my sentence

1889
01:15:58,000 --> 01:16:00,320
okay uh so just a point of order here i

1890
01:16:00,320 --> 01:16:03,040
think we are way over time for like the

1891
01:16:03,040 --> 01:16:04,719
solution thing so we need to have the

1892
01:16:04,719 --> 01:16:06,320
discussions because i think it's more

1893
01:16:06,320 --> 01:16:07,600
important that we hear about the

1894
01:16:07,600 --> 01:16:10,080
problems requirements disagreements and

1895
01:16:10,080 --> 01:16:11,760
hear about some solutions so we're

1896
01:16:11,760 --> 01:16:12,800
cutting

1897
01:16:12,800 --> 01:16:14,480
all the solution presentations from the

1898
01:16:14,480 --> 01:16:17,199
agenda and turning this now into an open

1899
01:16:17,199 --> 01:16:18,320
mic so

1900
01:16:18,320 --> 01:16:21,120
um queues are open uh

1901
01:16:21,120 --> 01:16:23,600
everybody makes statements and uh told

1902
01:16:23,600 --> 01:16:25,199
us if you want any other proponents to

1903
01:16:25,199 --> 01:16:26,960
come join you here that'll be good as

1904
01:16:26,960 --> 01:16:28,480
well well i think everybody from from

1905
01:16:28,480 --> 01:16:29,920
the team can say that obviously the

1906
01:16:29,920 --> 01:16:31,920
majority is remote so it would be good

1907
01:16:31,920 --> 01:16:33,840
if you if you show that it's the queues

1908
01:16:33,840 --> 01:16:35,840
are open so i think i think one of the

1909
01:16:35,840 --> 01:16:37,760
important part is to see that obviously

1910
01:16:37,760 --> 01:16:39,199
we have a strong opposition from the

1911
01:16:39,199 --> 01:16:40,719
people who want to protect their market

1912
01:16:40,719 --> 01:16:43,360
segment um with what the beer solution

1913
01:16:43,360 --> 01:16:46,159
has done um what whatever you say around

1914
01:16:46,159 --> 01:16:48,640
that and so one the solution draft intro

1915
01:16:48,640 --> 01:16:50,719
slides for example would list all the

1916
01:16:50,719 --> 01:16:53,920
vendors operators um and and and people

1917
01:16:53,920 --> 01:16:56,080
that we have seen to support our

1918
01:16:56,080 --> 01:16:58,880
direction and i think in the past and

1919
01:16:58,880 --> 01:17:00,560
you know in recent work many people in

1920
01:17:00,560 --> 01:17:02,800
the ietf stood up and told me

1921
01:17:02,800 --> 01:17:05,040
that obviously you know when there are

1922
01:17:05,040 --> 01:17:06,400
differences about

1923
01:17:06,400 --> 01:17:08,400
interest in solutions then we just

1924
01:17:08,400 --> 01:17:10,080
should check if there is a critical mass

1925
01:17:10,080 --> 01:17:12,400
in support of a particular solution and

1926
01:17:12,400 --> 01:17:15,120
if it's technically viable and then you

1927
01:17:15,120 --> 01:17:16,960
know if a competing solution is there

1928
01:17:16,960 --> 01:17:19,679
the same thing applies to it but uh not

1929
01:17:19,679 --> 01:17:22,400
using um more or less shame arguments to

1930
01:17:22,400 --> 01:17:25,280
try to um suppress uh competition i

1931
01:17:25,280 --> 01:17:28,480
think that's what i've been seeing here

1932
01:17:28,480 --> 01:17:29,679
thank you

1933
01:17:29,679 --> 01:17:32,719
maybe perception john go ahead hey um

1934
01:17:32,719 --> 01:17:35,120
i'm sorry for the uh non-technical

1935
01:17:35,120 --> 01:17:36,159
content

1936
01:17:36,159 --> 01:17:38,560
but there's two things i need to say

1937
01:17:38,560 --> 01:17:39,600
um

1938
01:17:39,600 --> 01:17:41,199
you remember the

1939
01:17:41,199 --> 01:17:42,800
note well that we all look at the

1940
01:17:42,800 --> 01:17:45,360
beginning do you guys remember the part

1941
01:17:45,360 --> 01:17:49,120
about addressing each other respectfully

1942
01:17:49,520 --> 01:17:52,400
i appreciate that um

1943
01:17:52,400 --> 01:17:54,480
everybody here feels passionately about

1944
01:17:54,480 --> 01:17:56,159
the subject

1945
01:17:56,159 --> 01:17:59,040
i don't appreciate people calling each

1946
01:17:59,040 --> 01:18:00,400
other's id you know

1947
01:18:00,400 --> 01:18:04,400
ideas garbage etc please don't do that

1948
01:18:04,400 --> 01:18:07,540
[Applause]

1949
01:18:07,679 --> 01:18:10,000
second point um

1950
01:18:10,000 --> 01:18:12,080
i was really uncomfortable with the

1951
01:18:12,080 --> 01:18:14,480
cultural appropriation in the graphic on

1952
01:18:14,480 --> 01:18:16,320
the final slide

1953
01:18:16,320 --> 01:18:17,840
i don't know if other people feel that

1954
01:18:17,840 --> 01:18:20,159
way but um

1955
01:18:20,159 --> 01:18:20,880
i

1956
01:18:20,880 --> 01:18:23,840
it made me feel bad

1957
01:18:24,560 --> 01:18:26,880
we actually had t-shirts in 95 that

1958
01:18:26,880 --> 01:18:28,719
we've been handing out you know native

1959
01:18:28,719 --> 01:18:30,719
ip multicast so i thought it was a

1960
01:18:30,719 --> 01:18:32,400
reminder of good old times if good old

1961
01:18:32,400 --> 01:18:34,719
times has become culturally insensitive

1962
01:18:34,719 --> 01:18:37,280
i apologize

1963
01:18:37,280 --> 01:18:39,199
okay 20p juniper

1964
01:18:39,199 --> 01:18:41,679
so we had this ongoing conversation you

1965
01:18:41,679 --> 01:18:42,880
know because when i look at the solution

1966
01:18:42,880 --> 01:18:45,040
draft it's basically beer packed into

1967
01:18:45,040 --> 01:18:46,560
you know extension header that's all

1968
01:18:46,560 --> 01:18:48,640
there there is to it when i looked at

1969
01:18:48,640 --> 01:18:49,840
you know

1970
01:18:49,840 --> 01:18:52,320
what was in the material for this buff

1971
01:18:52,320 --> 01:18:55,360
so can i answer to that no let me maybe

1972
01:18:55,360 --> 01:18:57,040
you know make a statement

1973
01:18:57,040 --> 01:18:59,120
so we had this running conversation for

1974
01:18:59,120 --> 01:19:01,920
three years and i don't think none of

1975
01:19:01,920 --> 01:19:04,000
the stuff that we said that the process

1976
01:19:04,000 --> 01:19:06,159
you know was run through resonated much

1977
01:19:06,159 --> 01:19:07,760
but that's still you know that needs to

1978
01:19:07,760 --> 01:19:10,960
go into the minutes okay

1979
01:19:10,960 --> 01:19:13,600
so i understand you know people in love

1980
01:19:13,600 --> 01:19:16,320
with srv6 okay

1981
01:19:16,320 --> 01:19:17,760
i understand

1982
01:19:17,760 --> 01:19:19,360
some people may already have the stuff

1983
01:19:19,360 --> 01:19:21,520
in silicon as was i think admitted in

1984
01:19:21,520 --> 01:19:23,360
the last bath all right

1985
01:19:23,360 --> 01:19:25,360
and as yakov said nothing prevents you

1986
01:19:25,360 --> 01:19:27,600
to take an itf standard and do unnatural

1987
01:19:27,600 --> 01:19:30,159
thing with the stuff and you know deploy

1988
01:19:30,159 --> 01:19:31,040
it

1989
01:19:31,040 --> 01:19:33,040
the point of idea is not to wide wash

1990
01:19:33,040 --> 01:19:35,199
silicons and not you know have people

1991
01:19:35,199 --> 01:19:37,120
fall in love with technology and just

1992
01:19:37,120 --> 01:19:38,880
build yet another thing because they

1993
01:19:38,880 --> 01:19:40,640
love it okay

1994
01:19:40,640 --> 01:19:42,800
the substantial problem i think that you

1995
01:19:42,800 --> 01:19:44,320
have is that

1996
01:19:44,320 --> 01:19:46,400
those use cases can be all solved with

1997
01:19:46,400 --> 01:19:48,159
the stuff is there today

1998
01:19:48,159 --> 01:19:49,280
okay

1999
01:19:49,280 --> 01:19:51,600
and you better really show a good gap

2000
01:19:51,600 --> 01:19:54,159
analysis because then i'm all open right

2001
01:19:54,159 --> 01:19:55,920
but there is no gap analysis all these

2002
01:19:55,920 --> 01:19:58,239
use cases can be solved and we can start

2003
01:19:58,239 --> 01:19:59,920
to drill the stuff but it will take too

2004
01:19:59,920 --> 01:20:01,920
long

2005
01:20:01,920 --> 01:20:03,440
having said that

2006
01:20:03,440 --> 01:20:04,400
um

2007
01:20:04,400 --> 01:20:07,040
and we had this conversation

2008
01:20:07,040 --> 01:20:09,199
violating layers always sounds like a

2009
01:20:09,199 --> 01:20:12,560
great idea okay but it isn't the costs

2010
01:20:12,560 --> 01:20:14,159
later in deployment

2011
01:20:14,159 --> 01:20:17,120
are insane if you really care about

2012
01:20:17,120 --> 01:20:20,639
running this ipv6 native

2013
01:20:20,639 --> 01:20:22,159
implement something like beer on

2014
01:20:22,159 --> 01:20:24,719
ethernet and you can send an ipv6 frame

2015
01:20:24,719 --> 01:20:25,920
over that

2016
01:20:25,920 --> 01:20:29,440
over a beer header without

2017
01:20:29,440 --> 01:20:32,320
or with less overhead that what you try

2018
01:20:32,320 --> 01:20:35,040
to create here okay

2019
01:20:35,040 --> 01:20:36,800
doing all these layer violations as was

2020
01:20:36,800 --> 01:20:39,120
explained i think we went through the

2021
01:20:39,120 --> 01:20:41,280
whole rigamarole at the end and we wrote

2022
01:20:41,280 --> 01:20:43,600
the technical justification and we laid

2023
01:20:43,600 --> 01:20:46,239
out what you you know causing with all

2024
01:20:46,239 --> 01:20:48,320
this stuff

2025
01:20:48,320 --> 01:20:51,360
this is most likely violating six men

2026
01:20:51,360 --> 01:20:53,760
and it's clearly violating beer

2027
01:20:53,760 --> 01:20:56,560
architecture doing that stuff all right

2028
01:20:56,560 --> 01:20:58,400
it stomps probably on three different

2029
01:20:58,400 --> 01:21:00,159
charges of three different groups but

2030
01:21:00,159 --> 01:21:01,679
you know it's

2031
01:21:01,679 --> 01:21:04,400
out my pay range that's the 80s

2032
01:21:04,400 --> 01:21:06,320
so that probably should go into the

2033
01:21:06,320 --> 01:21:08,719
minute processes have been run we're

2034
01:21:08,719 --> 01:21:10,560
like fourth or fifth time at the same

2035
01:21:10,560 --> 01:21:12,719
place

2036
01:21:12,719 --> 01:21:14,639
my point is made and i don't need an

2037
01:21:14,639 --> 01:21:16,639
answer because we had this discussion

2038
01:21:16,639 --> 01:21:18,800
and whatever came back was always the

2039
01:21:18,800 --> 01:21:20,480
same thing right the discussion about

2040
01:21:20,480 --> 01:21:22,800
encoding the encapsulation

2041
01:21:22,800 --> 01:21:25,360
took forever took us nowhere

2042
01:21:25,360 --> 01:21:26,080
so

2043
01:21:26,080 --> 01:21:28,239
tony thank you so like if i summarize

2044
01:21:28,239 --> 01:21:30,080
your comments you would want to start

2045
01:21:30,080 --> 01:21:32,560
with the gap analysis for the existing

2046
01:21:32,560 --> 01:21:34,239
protocols before you go any further

2047
01:21:34,239 --> 01:21:35,679
would that be a fair summary of what you

2048
01:21:35,679 --> 01:21:37,280
said yeah because otherwise what are we

2049
01:21:37,280 --> 01:21:39,520
working on just another variant because

2050
01:21:39,520 --> 01:21:42,000
somebody likes it blue rather than red

2051
01:21:42,000 --> 01:21:45,280
and you know additionally breaking seven

2052
01:21:45,280 --> 01:21:47,199
layers with always you know like this

2053
01:21:47,199 --> 01:21:48,880
it's more efficient this is like the

2054
01:21:48,880 --> 01:21:51,199
first thing i fire my junior development

2055
01:21:51,199 --> 01:21:53,840
developers about right if they go to the

2056
01:21:53,840 --> 01:21:56,480
code and start to make it more efficient

2057
01:21:56,480 --> 01:21:58,560
right so but i mean this discussion has

2058
01:21:58,560 --> 01:22:00,400
been going on for three years so we

2059
01:22:00,400 --> 01:22:01,920
didn't make any point

2060
01:22:01,920 --> 01:22:03,280
obviously the parties are pushing the

2061
01:22:03,280 --> 01:22:06,800
point but that is for the minutes no s

2062
01:22:06,800 --> 01:22:09,280
no without any motions as the technical

2063
01:22:09,280 --> 01:22:10,639
layout

2064
01:22:10,639 --> 01:22:12,239
and someone that cares because this

2065
01:22:12,239 --> 01:22:14,480
stuff fed me for 30 years and hopefully

2066
01:22:14,480 --> 01:22:17,120
will feed me for 20 years right and i

2067
01:22:17,120 --> 01:22:19,600
will have to clean up this stuff

2068
01:22:19,600 --> 01:22:22,159
operationally with people deploying it

2069
01:22:22,159 --> 01:22:25,199
thank you let's go ahead and um

2070
01:22:25,199 --> 01:22:27,199
greg if you can step up to the mic uh i

2071
01:22:27,199 --> 01:22:28,880
think you're first in the line

2072
01:22:28,880 --> 01:22:32,080
okay so when told us answers um 20 piece

2073
01:22:32,080 --> 01:22:32,880
question

2074
01:22:32,880 --> 01:22:34,719
thanks

2075
01:22:34,719 --> 01:22:37,440
you're on the mic line yeah

2076
01:22:37,440 --> 01:22:39,360
sorry it was so much and i just took the

2077
01:22:39,360 --> 01:22:40,960
notebook a little bit later so i may not

2078
01:22:40,960 --> 01:22:42,480
be able to remember all the points you

2079
01:22:42,480 --> 01:22:44,000
were trying to raise right so now this

2080
01:22:44,000 --> 01:22:46,000
is not meant to be beer this is meant to

2081
01:22:46,000 --> 01:22:47,600
learn from beer and it's meant to be

2082
01:22:47,600 --> 01:22:49,600
what i call a native ipv6 solution call

2083
01:22:49,600 --> 01:22:52,800
it just an rfc 8200 compliant ipv6

2084
01:22:52,800 --> 01:22:54,480
network solution

2085
01:22:54,480 --> 01:22:56,159
and yeah

2086
01:22:56,159 --> 01:22:58,880
i think many people also tried to sell

2087
01:22:58,880 --> 01:23:00,960
into ipv6 network

2088
01:23:00,960 --> 01:23:03,760
traffic engineering with mpls and ipv6

2089
01:23:03,760 --> 01:23:05,679
network operators on the unicast site

2090
01:23:05,679 --> 01:23:07,760
didn't want to have that so that's why

2091
01:23:07,760 --> 01:23:10,560
an rfc 8200 forwarding based

2092
01:23:10,560 --> 01:23:12,880
solution was done for traffic steering

2093
01:23:12,880 --> 01:23:15,679
in unicast and this is basically um you

2094
01:23:15,679 --> 01:23:16,960
know one

2095
01:23:16,960 --> 01:23:20,639
comparable option for multicast right

2096
01:23:20,639 --> 01:23:23,440
and as far as layer violations um no

2097
01:23:23,440 --> 01:23:25,440
it's not about the layer violations it's

2098
01:23:25,440 --> 01:23:27,280
about the functionality that you get and

2099
01:23:27,280 --> 01:23:29,280
the operational complexity of having to

2100
01:23:29,280 --> 01:23:31,199
troubleshoot fundamentally different

2101
01:23:31,199 --> 01:23:34,239
forwarding planes right and i i gave the

2102
01:23:34,239 --> 01:23:36,639
list of functionalities in the ecosystem

2103
01:23:36,639 --> 01:23:39,360
that are being used in conjunction with

2104
01:23:39,360 --> 01:23:42,000
ipv4 and ipv6 multicast that long list

2105
01:23:42,000 --> 01:23:43,920
that i had there and if you don't have

2106
01:23:43,920 --> 01:23:47,040
hop by hop and ipv6 or ipv4 packet

2107
01:23:47,040 --> 01:23:48,960
header with multicast then you can't

2108
01:23:48,960 --> 01:23:51,520
apply these ecosystem functions

2109
01:23:51,520 --> 01:23:53,199
hop by hop forwarding wise for your

2110
01:23:53,199 --> 01:23:55,840
packets and that is what applies to beer

2111
01:23:55,840 --> 01:23:58,840
sorry

2112
01:24:02,000 --> 01:24:05,360
um the shoe song of the

2113
01:24:05,360 --> 01:24:08,239
song go ahead

2114
01:24:14,480 --> 01:24:17,679
hi can you hear me well

2115
01:24:17,679 --> 01:24:19,280
yes

2116
01:24:19,280 --> 01:24:22,560
okay thank you some response to uh

2117
01:24:22,560 --> 01:24:25,280
previous comments the first one is that

2118
01:24:25,280 --> 01:24:28,239
uh i think maybe people just remember

2119
01:24:28,239 --> 01:24:31,280
some arguments or discussions in a beer

2120
01:24:31,280 --> 01:24:34,480
working group but the msr work is uh

2121
01:24:34,480 --> 01:24:36,639
very very beyond what we have done in

2122
01:24:36,639 --> 01:24:39,199
beer before and you will go into the

2123
01:24:39,199 --> 01:24:41,440
solutions there are multiple different

2124
01:24:41,440 --> 01:24:43,120
methods of encoding

2125
01:24:43,120 --> 01:24:45,520
uh based on sales routine

2126
01:24:45,520 --> 01:24:47,840
and that i think that is

2127
01:24:47,840 --> 01:24:50,800
not belongs to the scope of beer and the

2128
01:24:50,800 --> 01:24:54,000
second point is that ipv6 is not

2129
01:24:54,000 --> 01:24:55,199
relevant

2130
01:24:55,199 --> 01:24:57,840
it's it's not only one type of

2131
01:24:57,840 --> 01:25:00,320
encapsulation and it's not technical

2132
01:25:00,320 --> 01:25:03,360
preference ipv6 has its capability of

2133
01:25:03,360 --> 01:25:06,560
extension which is more friendly to the

2134
01:25:06,560 --> 01:25:09,120
host initiated case and also more

2135
01:25:09,120 --> 01:25:11,440
friendly to the flexible encoding we

2136
01:25:11,440 --> 01:25:13,120
want to support here

2137
01:25:13,120 --> 01:25:15,520
so i think the these two features are

2138
01:25:15,520 --> 01:25:17,520
the core of this uh

2139
01:25:17,520 --> 01:25:20,239
this bulb so i think people can give

2140
01:25:20,239 --> 01:25:21,600
more uh

2141
01:25:21,600 --> 01:25:23,760
pay more attention to the solutions and

2142
01:25:23,760 --> 01:25:26,400
they will see the benefits there thank

2143
01:25:26,400 --> 01:25:28,559
you

2144
01:25:32,719 --> 01:25:35,199
okay

2145
01:25:35,920 --> 01:25:38,719
hi there tom hill from bte

2146
01:25:38,719 --> 01:25:41,360
there's a slightly concerning trend

2147
01:25:41,360 --> 01:25:44,480
of claims that are being made

2148
01:25:44,480 --> 01:25:46,400
and they're not just being made within

2149
01:25:46,400 --> 01:25:48,000
this both certainly the first two

2150
01:25:48,000 --> 01:25:49,920
presentations made this claim

2151
01:25:49,920 --> 01:25:52,159
but it's been made very far and wide in

2152
01:25:52,159 --> 01:25:54,639
a lot of standards organizations

2153
01:25:54,639 --> 01:25:56,320
that operators

2154
01:25:56,320 --> 01:25:58,960
such as myself

2155
01:25:58,960 --> 01:26:03,760
fully understand the benefits of srv6

2156
01:26:04,960 --> 01:26:05,920
this is

2157
01:26:05,920 --> 01:26:09,040
very common

2158
01:26:09,040 --> 01:26:12,880
at best that statement is contentious

2159
01:26:12,880 --> 01:26:16,960
at worst it is an outright fabrication

2160
01:26:17,120 --> 01:26:19,040
this is not clean cut yet

2161
01:26:19,040 --> 01:26:22,159
it definitely is not cleaned up so

2162
01:26:22,159 --> 01:26:24,000
whenever we get told that lots of people

2163
01:26:24,000 --> 01:26:25,920
are really interested in this i don't

2164
01:26:25,920 --> 01:26:27,520
believe it because i don't see it via

2165
01:26:27,520 --> 01:26:29,760
any of the other means by which i speak

2166
01:26:29,760 --> 01:26:31,199
to my peers

2167
01:26:31,199 --> 01:26:33,040
and the other folks that run operators

2168
01:26:33,040 --> 01:26:34,800
run networks

2169
01:26:34,800 --> 01:26:37,679
in an operating fashion around the world

2170
01:26:37,679 --> 01:26:39,360
my problem with this is

2171
01:26:39,360 --> 01:26:41,199
a lot of that has been

2172
01:26:41,199 --> 01:26:42,800
used as a foundation for what you've

2173
01:26:42,800 --> 01:26:44,639
presented here today

2174
01:26:44,639 --> 01:26:47,600
and my concern is

2175
01:26:47,600 --> 01:26:49,840
in doing so are you starting from the

2176
01:26:49,840 --> 01:26:52,239
right position

2177
01:26:52,239 --> 01:26:53,840
or are you starting with a poison

2178
01:26:53,840 --> 01:26:55,120
chalice

2179
01:26:55,120 --> 01:26:56,159
can i

2180
01:26:56,159 --> 01:26:58,320
you tell me when you're done so no no i

2181
01:26:58,320 --> 01:27:00,000
i think this is an excellent point and i

2182
01:27:00,000 --> 01:27:02,159
was using so first of all i've i've been

2183
01:27:02,159 --> 01:27:03,760
just fighting for these 30 years just to

2184
01:27:03,760 --> 01:27:05,679
get you know equal treatment for

2185
01:27:05,679 --> 01:27:07,679
multicast in the networks wherever they

2186
01:27:07,679 --> 01:27:08,639
are

2187
01:27:08,639 --> 01:27:10,400
and not be degraded to a second-class

2188
01:27:10,400 --> 01:27:12,159
citizen as far as technology service is

2189
01:27:12,159 --> 01:27:13,760
concerned for the multicast right and

2190
01:27:13,760 --> 01:27:16,159
that basically

2191
01:27:16,159 --> 01:27:18,159
was learned from the examples that i

2192
01:27:18,159 --> 01:27:19,760
said where you know we started saying

2193
01:27:19,760 --> 01:27:21,360
hey we think this multicast technology

2194
01:27:21,360 --> 01:27:23,600
is better why don't you just use ipv4

2195
01:27:23,600 --> 01:27:25,280
multicast and mpls network works

2196
01:27:25,280 --> 01:27:26,320
perfectly fine we don't want to

2197
01:27:26,320 --> 01:27:28,800
re-implement the stuff for mpls and mpls

2198
01:27:28,800 --> 01:27:30,159
networks didn't like it by the way what

2199
01:27:30,159 --> 01:27:32,000
are you running mpls or ipv6 in your

2200
01:27:32,000 --> 01:27:33,520
network for the forwarding plane of

2201
01:27:33,520 --> 01:27:34,880
unicast

2202
01:27:34,880 --> 01:27:36,560
it depends on which network but okay for

2203
01:27:36,560 --> 01:27:38,480
them for the most part the main core

2204
01:27:38,480 --> 01:27:40,480
network is mpls forwarded yes with

2205
01:27:40,480 --> 01:27:43,760
respect to um srv6 i i don't have any

2206
01:27:43,760 --> 01:27:45,360
strong opinions right i'm just caring

2207
01:27:45,360 --> 01:27:47,360
for the multicast solution i think it's

2208
01:27:47,360 --> 01:27:50,000
important to understand uh that the way

2209
01:27:50,000 --> 01:27:53,760
that uh ipv6 not srv6 or so

2210
01:27:53,760 --> 01:27:56,000
um consider to be source routing to be

2211
01:27:56,000 --> 01:27:57,360
done is with the source routing

2212
01:27:57,360 --> 01:27:59,360
extension header we don't have only sr

2213
01:27:59,360 --> 01:28:02,000
v6 we also have an equal extension

2214
01:28:02,000 --> 01:28:03,040
header

2215
01:28:03,040 --> 01:28:05,600
for constrained iot networks using

2216
01:28:05,600 --> 01:28:07,760
exactly the same mechanism some

2217
01:28:07,760 --> 01:28:10,080
interesting routing detailed differences

2218
01:28:10,080 --> 01:28:12,000
right so this is not only proven once

2219
01:28:12,000 --> 01:28:15,199
but proven twice if you don't like it um

2220
01:28:15,199 --> 01:28:17,520
and and and and you think there's a lot

2221
01:28:17,520 --> 01:28:19,600
of problems with it but let me ask you

2222
01:28:19,600 --> 01:28:22,000
this is this a reason that you want to

2223
01:28:22,000 --> 01:28:23,840
forbid other people who want to have it

2224
01:28:23,840 --> 01:28:25,679
and want to have an equivalent multicast

2225
01:28:25,679 --> 01:28:28,239
solution to not get it is that is do you

2226
01:28:28,239 --> 01:28:29,280
think that's that's the correct

2227
01:28:29,280 --> 01:28:30,719
prerogative what you have what we're

2228
01:28:30,719 --> 01:28:32,400
asking about here is forming a working

2229
01:28:32,400 --> 01:28:34,560
group right yes right so how much work

2230
01:28:34,560 --> 01:28:36,400
should be invested in something where

2231
01:28:36,400 --> 01:28:39,440
one of the foundations of this

2232
01:28:39,440 --> 01:28:41,840
has been

2233
01:28:41,840 --> 01:28:42,639
up

2234
01:28:42,639 --> 01:28:45,040
to seem more important or more useful or

2235
01:28:45,040 --> 01:28:47,840
better than it is right but and for for

2236
01:28:47,840 --> 01:28:49,920
us on the multicast side right it's it's

2237
01:28:49,920 --> 01:28:52,320
uh on one hand uh

2238
01:28:52,320 --> 01:28:55,600
using the srv6 example as as the most

2239
01:28:55,600 --> 01:28:57,360
easy way for people to understand that

2240
01:28:57,360 --> 01:28:58,719
this is you know what what source

2241
01:28:58,719 --> 01:29:01,120
routing is doing the reason for doing

2242
01:29:01,120 --> 01:29:03,679
stateless multicast um is a lot more

2243
01:29:03,679 --> 01:29:05,760
foundational and a lot bigger you know

2244
01:29:05,760 --> 01:29:07,679
stronger in my opinion than for the

2245
01:29:07,679 --> 01:29:09,920
source for the source routing in unicast

2246
01:29:09,920 --> 01:29:12,480
srv6 and a lot of these things can be

2247
01:29:12,480 --> 01:29:14,560
shown with the benefit that beer gives

2248
01:29:14,560 --> 01:29:17,280
you an mpls networks i i completely

2249
01:29:17,280 --> 01:29:19,360
appreciate the the use case for

2250
01:29:19,360 --> 01:29:21,360
stateless multicast forwarding

2251
01:29:21,360 --> 01:29:23,760
completely i also completely appreciate

2252
01:29:23,760 --> 01:29:26,000
the use case for ipv4 should be a

2253
01:29:26,000 --> 01:29:27,120
service

2254
01:29:27,120 --> 01:29:28,800
and we should be building ipv6 only

2255
01:29:28,800 --> 01:29:30,400
networks everywhere

2256
01:29:30,400 --> 01:29:32,159
it is the

2257
01:29:32,159 --> 01:29:35,360
the long long contentious problem that

2258
01:29:35,360 --> 01:29:38,800
srv6 has caused within this industry and

2259
01:29:38,800 --> 01:29:41,280
to make statements to say that operators

2260
01:29:41,280 --> 01:29:43,600
really like it

2261
01:29:43,600 --> 01:29:44,719
is

2262
01:29:44,719 --> 01:29:46,800
is troubling at the beginning of when

2263
01:29:46,800 --> 01:29:48,560
the work starts so

2264
01:29:48,560 --> 01:29:49,760
we really need to make sure that we

2265
01:29:49,760 --> 01:29:51,840
don't rely on statements like that right

2266
01:29:51,840 --> 01:29:53,760
we really need to make sure

2267
01:29:53,760 --> 01:29:56,400
that they

2268
01:29:56,480 --> 01:29:59,120
that we aren't misleading anyone here

2269
01:29:59,120 --> 01:30:00,560
in the sense that if there is already a

2270
01:30:00,560 --> 01:30:02,639
protocol that has problems we don't want

2271
01:30:02,639 --> 01:30:05,280
to build on that again yeah but this

2272
01:30:05,280 --> 01:30:06,960
this is not i mean

2273
01:30:06,960 --> 01:30:09,440
except for the rfc 8200 mechanism of

2274
01:30:09,440 --> 01:30:13,120
using extension header um in ipv6 as the

2275
01:30:13,120 --> 01:30:14,800
code native however you want to call it

2276
01:30:14,800 --> 01:30:17,360
way in ipv6 to do source routing and

2277
01:30:17,360 --> 01:30:18,639
then you can have kind of up with your

2278
01:30:18,639 --> 01:30:20,639
solution right if you don't like like

2279
01:30:20,639 --> 01:30:23,440
like srv6 that's fine but nobody it

2280
01:30:23,440 --> 01:30:25,199
tells you that you have to use it you

2281
01:30:25,199 --> 01:30:27,760
have to judge i think the benefits of

2282
01:30:27,760 --> 01:30:28,480
the

2283
01:30:28,480 --> 01:30:31,920
mrh header that we're proposing for

2284
01:30:31,920 --> 01:30:33,840
stateless multicast based on the benefit

2285
01:30:33,840 --> 01:30:36,719
of of those multicast use cases right

2286
01:30:36,719 --> 01:30:38,719
and so i i gave a couple of of these

2287
01:30:38,719 --> 01:30:40,719
things right the statelessness as the

2288
01:30:40,719 --> 01:30:43,040
biggest benefit operationally and then

2289
01:30:43,040 --> 01:30:44,560
the new encodings that what we want to

2290
01:30:44,560 --> 01:30:46,719
do 10 years after we've done them for

2291
01:30:46,719 --> 01:30:49,280
beer right which was 10 years ago what's

2292
01:30:49,280 --> 01:30:51,120
the best we can do now we think 10 years

2293
01:30:51,120 --> 01:30:53,360
later we can do better right for those

2294
01:30:53,360 --> 01:30:55,520
ipv6 network for a longer term solution

2295
01:30:55,520 --> 01:30:57,760
right so so there are a lot of technical

2296
01:30:57,760 --> 01:30:59,040
details that

2297
01:30:59,040 --> 01:31:00,639
to a good extent would have been in the

2298
01:31:00,639 --> 01:31:02,560
solution drafts right and not only the

2299
01:31:02,560 --> 01:31:03,679
requirements there were scale

2300
01:31:03,679 --> 01:31:05,840
requirements and so on that drive

2301
01:31:05,840 --> 01:31:07,920
i think a significant set of differences

2302
01:31:07,920 --> 01:31:10,080
and yeah the the native forwarding is is

2303
01:31:10,080 --> 01:31:12,080
a big important one i mean there are all

2304
01:31:12,080 --> 01:31:14,400
these ecosystem things right i've done

2305
01:31:14,400 --> 01:31:18,320
all these qs thing diffserv insert acls

2306
01:31:18,320 --> 01:31:20,400
ipfix all these things and it's just

2307
01:31:20,400 --> 01:31:22,400
terrible to having to repeat that for

2308
01:31:22,400 --> 01:31:24,320
let's say just a beer based forwarding

2309
01:31:24,320 --> 01:31:27,040
plane instead of an actual ipv6

2310
01:31:27,040 --> 01:31:29,280
forwarding plane that just has source

2311
01:31:29,280 --> 01:31:31,760
routing added to it

2312
01:31:31,760 --> 01:31:33,840
right that's it's it's the whole bloody

2313
01:31:33,840 --> 01:31:35,440
ecosystem that that you're starting to

2314
01:31:35,440 --> 01:31:37,120
replicate it's already hard enough to

2315
01:31:37,120 --> 01:31:39,120
replicate the ecosystem from unicast to

2316
01:31:39,120 --> 01:31:41,120
multicast believe me i've done it for

2317
01:31:41,120 --> 01:31:42,719
all those those pieces from unicast

2318
01:31:42,719 --> 01:31:45,040
addresses to multicast addresses

2319
01:31:45,040 --> 01:31:46,480
and

2320
01:31:46,480 --> 01:31:48,159
you know but now we know it after after

2321
01:31:48,159 --> 01:31:49,520
20 years having figured that out for

2322
01:31:49,520 --> 01:31:50,639
multicast

2323
01:31:50,639 --> 01:31:52,159
you know we know how to do it and the

2324
01:31:52,159 --> 01:31:54,000
source routing is you know just

2325
01:31:54,000 --> 01:31:57,960
complimentary for that

2326
01:31:58,560 --> 01:32:00,080
good luck

2327
01:32:00,080 --> 01:32:02,159
thank you tom

2328
01:32:02,159 --> 01:32:04,080
andrew go ahead because uh you are in

2329
01:32:04,080 --> 01:32:05,600
line before the other people got on

2330
01:32:05,600 --> 01:32:08,719
thanks thank you um andrew um liquid

2331
01:32:08,719 --> 01:32:11,520
telecom um wearing that hat and purely

2332
01:32:11,520 --> 01:32:13,120
that hat

2333
01:32:13,120 --> 01:32:14,960
um

2334
01:32:14,960 --> 01:32:16,239
so

2335
01:32:16,239 --> 01:32:18,080
if i'm going back to the previous point

2336
01:32:18,080 --> 01:32:20,960
that i was making

2337
01:32:21,600 --> 01:32:25,150
can you hear me now that better

2338
01:32:25,150 --> 01:32:27,440
[Music]

2339
01:32:27,440 --> 01:32:30,320
okay there we go um

2340
01:32:30,320 --> 01:32:32,480
so going back to the previous point that

2341
01:32:32,480 --> 01:32:35,280
i was making

2342
01:32:35,840 --> 01:32:37,920
the fact is that that particular use

2343
01:32:37,920 --> 01:32:41,120
case i was referring to earlier

2344
01:32:41,120 --> 01:32:42,400
shows

2345
01:32:42,400 --> 01:32:44,320
srv sex

2346
01:32:44,320 --> 01:32:47,120
over the public internet unencapsulated

2347
01:32:47,120 --> 01:32:50,320
that's what the slide showed right

2348
01:32:50,320 --> 01:32:52,960
that is a clear

2349
01:32:52,960 --> 01:32:55,120
violation of 8754

2350
01:32:55,120 --> 01:32:57,199
clear clear cut it's got nothing to do

2351
01:32:57,199 --> 01:32:59,440
with the solution your use case is

2352
01:32:59,440 --> 01:33:02,639
premised on a violation

2353
01:33:02,639 --> 01:33:07,040
and you refer multiple times to

2354
01:33:07,040 --> 01:33:08,480
20 years ago

2355
01:33:08,480 --> 01:33:10,480
x happened

2356
01:33:10,480 --> 01:33:13,920
20 years ago we looked at source routing

2357
01:33:13,920 --> 01:33:16,880
and went this is a bad idea

2358
01:33:16,880 --> 01:33:19,679
and we deprecated it

2359
01:33:19,679 --> 01:33:22,880
and the security issues when you are

2360
01:33:22,880 --> 01:33:26,080
showing me use cases that are premised

2361
01:33:26,080 --> 01:33:27,840
on a violation

2362
01:33:27,840 --> 01:33:30,000
and then when people say but it might

2363
01:33:30,000 --> 01:33:32,239
not be srv6

2364
01:33:32,239 --> 01:33:34,560
but the simple fact is

2365
01:33:34,560 --> 01:33:38,239
is that that's what this is called msr-6

2366
01:33:38,239 --> 01:33:40,000
right

2367
01:33:40,000 --> 01:33:44,000
and i also have to second what tom said

2368
01:33:44,000 --> 01:33:47,440
because i keep seeing people saying

2369
01:33:47,440 --> 01:33:50,480
srv6 wonderful everybody's using it here

2370
01:33:50,480 --> 01:33:52,560
etc but there was a slide in the deck

2371
01:33:52,560 --> 01:33:53,679
earlier

2372
01:33:53,679 --> 01:33:55,440
that said there is very little

2373
01:33:55,440 --> 01:33:57,360
deployment in the united states that's

2374
01:33:57,360 --> 01:33:59,840
what the slide said

2375
01:33:59,840 --> 01:34:02,880
and to me i read that slide as

2376
01:34:02,880 --> 01:34:04,480
we came up with something people aren't

2377
01:34:04,480 --> 01:34:06,159
using it now maybe this will get them to

2378
01:34:06,159 --> 01:34:07,440
use it

2379
01:34:07,440 --> 01:34:10,080
this to me

2380
01:34:10,080 --> 01:34:12,080
reminds me of

2381
01:34:12,080 --> 01:34:16,719
a solution looking for a use case

2382
01:34:16,719 --> 01:34:17,760
and

2383
01:34:17,760 --> 01:34:20,159
i i cannot see how that is

2384
01:34:20,159 --> 01:34:22,480
in the benefit of the industry

2385
01:34:22,480 --> 01:34:25,360
i cannot see how that

2386
01:34:25,360 --> 01:34:28,400
fulfills the ietf mandate of make the

2387
01:34:28,400 --> 01:34:31,679
internet better i don't see it

2388
01:34:31,679 --> 01:34:33,920
thanks andrew so first of all i don't

2389
01:34:33,920 --> 01:34:36,159
think we have any kind of i would call

2390
01:34:36,159 --> 01:34:38,239
it native multicast and i think that

2391
01:34:38,239 --> 01:34:40,239
term has been established by you know

2392
01:34:40,239 --> 01:34:43,440
all these contributors in the ietf 25

2393
01:34:43,440 --> 01:34:45,600
years ago

2394
01:34:45,600 --> 01:34:48,080
when we started doing pim um we have

2395
01:34:48,080 --> 01:34:49,679
very little of that in the internet the

2396
01:34:49,679 --> 01:34:51,520
best uh that that we have are kind of

2397
01:34:51,520 --> 01:34:53,600
research networks and everything else is

2398
01:34:53,600 --> 01:34:55,760
in controlled private networks including

2399
01:34:55,760 --> 01:34:57,520
service provider access networks to

2400
01:34:57,520 --> 01:34:59,520
deliver iptv to their customers and so

2401
01:34:59,520 --> 01:35:01,920
on right so as far as the extent of

2402
01:35:01,920 --> 01:35:05,199
where multicast today goes and could go

2403
01:35:05,199 --> 01:35:06,880
with source routing i think it would be

2404
01:35:06,880 --> 01:35:09,040
very much the same spaces and i think

2405
01:35:09,040 --> 01:35:10,800
that's a great and excellent discussion

2406
01:35:10,800 --> 01:35:13,840
to have and if one of those slides was

2407
01:35:13,840 --> 01:35:15,840
misleading to say it's the random part

2408
01:35:15,840 --> 01:35:18,239
of the open internet that's not part of

2409
01:35:18,239 --> 01:35:20,080
the places where for example we have

2410
01:35:20,080 --> 01:35:22,560
existing uh multicast solutions that

2411
01:35:22,560 --> 01:35:24,239
just don't scale and are you know harder

2412
01:35:24,239 --> 01:35:26,000
to operate than the stateless versions

2413
01:35:26,000 --> 01:35:27,360
that's fine then i think there is a

2414
01:35:27,360 --> 01:35:30,000
mistake in that slide um

2415
01:35:30,000 --> 01:35:32,560
as far as judging

2416
01:35:32,560 --> 01:35:34,560
the market space and

2417
01:35:34,560 --> 01:35:36,800
the set of participants in the ietf that

2418
01:35:36,800 --> 01:35:38,400
are proactively working toward the

2419
01:35:38,400 --> 01:35:40,480
solution because they believe in it i

2420
01:35:40,480 --> 01:35:42,000
think that's certainly one of the things

2421
01:35:42,000 --> 01:35:43,280
to figure out

2422
01:35:43,280 --> 01:35:45,199
i would just like to understand to what

2423
01:35:45,199 --> 01:35:48,400
extent um people who prefer a different

2424
01:35:48,400 --> 01:35:50,800
technical solution and

2425
01:35:50,800 --> 01:35:52,639
all their arguments why their solution

2426
01:35:52,639 --> 01:35:55,679
is sufficient should have a significant

2427
01:35:55,679 --> 01:35:58,000
impact in the decision

2428
01:35:58,000 --> 01:36:00,560
um i think it's secondary

2429
01:36:00,560 --> 01:36:02,159
anything that's technically not working

2430
01:36:02,159 --> 01:36:03,920
is fine but you know if we have

2431
01:36:03,920 --> 01:36:06,320
competing opinions about market space

2432
01:36:06,320 --> 01:36:08,000
solution i think we should just vet for

2433
01:36:08,000 --> 01:36:10,159
each of them if they're technically

2434
01:36:10,159 --> 01:36:11,520
solid and if they have

2435
01:36:11,520 --> 01:36:14,320
enough support in the ietf uh

2436
01:36:14,320 --> 01:36:16,480
positively but not kind of you know

2437
01:36:16,480 --> 01:36:18,400
count the negative against it

2438
01:36:18,400 --> 01:36:20,320
if it's not technically but based on a

2439
01:36:20,320 --> 01:36:21,920
different you know market solution

2440
01:36:21,920 --> 01:36:24,920
preference

2441
01:36:29,199 --> 01:36:31,440
for the use case it's not just like we

2442
01:36:31,440 --> 01:36:34,480
have msr6 and then we're looking for

2443
01:36:34,480 --> 01:36:35,280
some

2444
01:36:35,280 --> 01:36:37,360
real deployment or something like that

2445
01:36:37,360 --> 01:36:39,520
no it's a very wrong

2446
01:36:39,520 --> 01:36:41,679
because the especially for the first

2447
01:36:41,679 --> 01:36:44,400
case for the teleco domain this

2448
01:36:44,400 --> 01:36:46,639
advancement of 5g technology and

2449
01:36:46,639 --> 01:36:48,159
commercial deployment

2450
01:36:48,159 --> 01:36:50,560
and then we with them like the tick tock

2451
01:36:50,560 --> 01:36:53,440
just like the the chinese version of

2452
01:36:53,440 --> 01:36:55,600
like instagram youtube those type of

2453
01:36:55,600 --> 01:36:58,880
things social media and you are going to

2454
01:36:58,880 --> 01:37:01,199
see the receivers on the

2455
01:37:01,199 --> 01:37:03,360
10th millions maybe i don't know it's up

2456
01:37:03,360 --> 01:37:05,280
to 100 million or not

2457
01:37:05,280 --> 01:37:08,639
and also over the 5g network so we are

2458
01:37:08,639 --> 01:37:11,119
seeing the problem with that and seeing

2459
01:37:11,119 --> 01:37:13,440
the dynamics scalable those type of

2460
01:37:13,440 --> 01:37:17,360
things and then we uh we try to get the

2461
01:37:17,360 --> 01:37:19,920
you know something to handle it's uh

2462
01:37:19,920 --> 01:37:22,639
we're looking at existing uh schemes

2463
01:37:22,639 --> 01:37:24,880
solutions and then we found

2464
01:37:24,880 --> 01:37:27,119
some discrepancies and then that's why

2465
01:37:27,119 --> 01:37:28,960
you know this and also for some other

2466
01:37:28,960 --> 01:37:32,480
use cases the same thing thank you

2467
01:37:32,880 --> 01:37:34,639
thank you attention yeah uh david go

2468
01:37:34,639 --> 01:37:36,480
ahead you show at the bottom of the cube

2469
01:37:36,480 --> 01:37:38,639
but you are on the top so goodbye

2470
01:37:38,639 --> 01:37:41,600
uh david lamparte um i'm just gonna

2471
01:37:41,600 --> 01:37:44,560
offer my confusion in in case it helps i

2472
01:37:44,560 --> 01:37:47,119
i came here to working well to a session

2473
01:37:47,119 --> 01:37:50,639
called multicast source routing and

2474
01:37:50,639 --> 01:37:52,719
i feel there's a huge

2475
01:37:52,719 --> 01:37:54,960
piece missing where

2476
01:37:54,960 --> 01:37:57,360
there's actually a discussion about

2477
01:37:57,360 --> 01:38:01,199
what how exactly does changing the

2478
01:38:01,199 --> 01:38:03,920
the location of determining the the

2479
01:38:03,920 --> 01:38:06,639
receivers for the multicast group

2480
01:38:06,639 --> 01:38:08,960
how does moving that to the source

2481
01:38:08,960 --> 01:38:10,320
actually

2482
01:38:10,320 --> 01:38:12,480
help us how does it was it what what

2483
01:38:12,480 --> 01:38:15,119
does this provide what is

2484
01:38:15,119 --> 01:38:16,639
where is this coming from i'm seeing

2485
01:38:16,639 --> 01:38:17,679
like

2486
01:38:17,679 --> 01:38:19,280
uh

2487
01:38:19,280 --> 01:38:22,320
a half solution maybe that is prepared

2488
01:38:22,320 --> 01:38:24,159
work in progress um

2489
01:38:24,159 --> 01:38:25,040
but

2490
01:38:25,040 --> 01:38:27,360
where did this start why why is it

2491
01:38:27,360 --> 01:38:30,000
better where is it coming from uh

2492
01:38:30,000 --> 01:38:32,239
so so yes so i had some more detailed

2493
01:38:32,239 --> 01:38:34,480
solution slides so when we all started

2494
01:38:34,480 --> 01:38:36,560
the beer work right so what what was

2495
01:38:36,560 --> 01:38:38,880
basically happening is that um at that

2496
01:38:38,880 --> 01:38:40,400
point in time service providers were

2497
01:38:40,400 --> 01:38:41,840
saying hey um you know this whole

2498
01:38:41,840 --> 01:38:44,639
multicast stuff is so difficult because

2499
01:38:44,639 --> 01:38:46,480
we have to troubleshoot multicast state

2500
01:38:46,480 --> 01:38:48,800
on the p nodes in a service provider

2501
01:38:48,800 --> 01:38:51,199
network so you know right now we think

2502
01:38:51,199 --> 01:38:52,400
we have enough bandwidth we're just

2503
01:38:52,400 --> 01:38:54,000
doing what we call ingress replication

2504
01:38:54,000 --> 01:38:56,000
so you're sending out every packet that

2505
01:38:56,000 --> 01:38:57,840
enters the service provider as a unicast

2506
01:38:57,840 --> 01:38:59,679
copy to the egress and then we said that

2507
01:38:59,679 --> 01:39:01,840
doesn't scale right um and we can give

2508
01:39:01,840 --> 01:39:03,600
you a solution that gets rid of that

2509
01:39:03,600 --> 01:39:06,000
multicast state on the transit hops

2510
01:39:06,000 --> 01:39:07,600
right and that's basically what beer

2511
01:39:07,600 --> 01:39:10,800
became and as i said in my you know

2512
01:39:10,800 --> 01:39:12,719
evaluation of how the working group

2513
01:39:12,719 --> 01:39:14,880
evolved is it's just the way it

2514
01:39:14,880 --> 01:39:17,199
implemented the forwarding plane aspects

2515
01:39:17,199 --> 01:39:19,440
especially the encapsulation very

2516
01:39:19,440 --> 01:39:21,679
optimized for mpls networks and there i

2517
01:39:21,679 --> 01:39:24,320
think it's great right so but but but

2518
01:39:24,320 --> 01:39:25,920
but this all goes back to what we

2519
01:39:25,920 --> 01:39:28,080
recognized after we did all the mpls

2520
01:39:28,080 --> 01:39:30,560
multicast natively for 10 years and then

2521
01:39:30,560 --> 01:39:32,159
service provider came back and said well

2522
01:39:32,159 --> 01:39:33,520
thank you for spending 10 years in the

2523
01:39:33,520 --> 01:39:35,920
itf on doing mpls multicast but now we

2524
01:39:35,920 --> 01:39:39,119
decided not to deploy it right so um

2525
01:39:39,119 --> 01:39:40,960
that's that's basically one of those you

2526
01:39:40,960 --> 01:39:44,960
know at least my origin story for beer

2527
01:39:44,960 --> 01:39:46,639
okay but um

2528
01:39:46,639 --> 01:39:47,920
so

2529
01:39:47,920 --> 01:39:49,760
now i'm asking myself

2530
01:39:49,760 --> 01:39:51,760
is this just moving the problem from

2531
01:39:51,760 --> 01:39:53,760
source discovery to destination

2532
01:39:53,760 --> 01:39:55,040
discovery

2533
01:39:55,040 --> 01:39:56,639
like

2534
01:39:56,639 --> 01:39:58,800
the argument chain is not computing for

2535
01:39:58,800 --> 01:40:01,280
me that is the what i'm trying to say i

2536
01:40:01,280 --> 01:40:04,159
mean i'm happy to take it offline so we

2537
01:40:04,159 --> 01:40:06,960
i think you know i don't think this

2538
01:40:06,960 --> 01:40:08,960
answer fundamentally would be

2539
01:40:08,960 --> 01:40:11,040
different for beer and msr6 right so

2540
01:40:11,040 --> 01:40:13,119
this is this is all about you know i

2541
01:40:13,119 --> 01:40:15,760
think high level um about the ipv6

2542
01:40:15,760 --> 01:40:18,239
networks versus mpls networks and then

2543
01:40:18,239 --> 01:40:20,400
also newer and better encodings of the

2544
01:40:20,400 --> 01:40:22,320
source routing things kind of if if we

2545
01:40:22,320 --> 01:40:26,639
break it down to you know fundamentals

2546
01:40:26,639 --> 01:40:29,679
thank you thank you david um uh yi song

2547
01:40:29,679 --> 01:40:32,159
please go ahead

2548
01:40:32,159 --> 01:40:34,320
you song is remotely

2549
01:40:34,320 --> 01:40:37,320
yeah

2550
01:40:41,360 --> 01:40:44,400
mobile and as an operator we have uh

2551
01:40:44,400 --> 01:40:47,199
deployed at more and more and

2552
01:40:47,199 --> 01:40:50,000
as introduced in the use cases we have a

2553
01:40:50,000 --> 01:40:51,520
very large

2554
01:40:51,520 --> 01:40:54,239
network and the potential multicast

2555
01:40:54,239 --> 01:40:55,440
services

2556
01:40:55,440 --> 01:40:58,960
that uh should we do live

2557
01:40:58,960 --> 01:41:01,920
streaming is also very huge

2558
01:41:01,920 --> 01:41:05,679
and the existing flow state solution for

2559
01:41:05,679 --> 01:41:08,400
the multicast cannot afford the

2560
01:41:08,400 --> 01:41:10,960
overhead for so huge days for the

2561
01:41:10,960 --> 01:41:13,600
funding cost and the existing stateless

2562
01:41:13,600 --> 01:41:15,920
multicast cannot

2563
01:41:15,920 --> 01:41:17,840
afford the large-scale network

2564
01:41:17,840 --> 01:41:19,280
topologies

2565
01:41:19,280 --> 01:41:20,159
and

2566
01:41:20,159 --> 01:41:21,040
come

2567
01:41:21,040 --> 01:41:24,000
combine all of these requirements we

2568
01:41:24,000 --> 01:41:25,520
i think we

2569
01:41:25,520 --> 01:41:28,560
need a simple and unified solution to

2570
01:41:28,560 --> 01:41:30,080
solve this

2571
01:41:30,080 --> 01:41:31,280
and

2572
01:41:31,280 --> 01:41:34,639
that can uh bring a new opportunity for

2573
01:41:34,639 --> 01:41:36,800
the multicast i think so

2574
01:41:36,800 --> 01:41:39,520
uh we want to uh form a new working

2575
01:41:39,520 --> 01:41:40,480
group

2576
01:41:40,480 --> 01:41:44,040
that's all thank you

2577
01:41:58,080 --> 01:41:59,440
you need to speak up your volume is

2578
01:41:59,440 --> 01:42:00,880
really low

2579
01:42:00,880 --> 01:42:04,000
oh can you hear me now

2580
01:42:04,880 --> 01:42:07,199
hello

2581
01:42:08,159 --> 01:42:10,239
yeah we can hear you jinbin go ahead

2582
01:42:10,239 --> 01:42:13,879
just speak up a bit

2583
01:42:25,199 --> 01:42:27,280
shin bin will come back to you uh chang

2584
01:42:27,280 --> 01:42:29,840
go ahead

2585
01:42:33,760 --> 01:42:35,280
hey chang hello

2586
01:42:35,280 --> 01:42:36,400
hi

2587
01:42:36,400 --> 01:42:39,280
uh thank

2588
01:42:40,840 --> 01:42:43,520
you yeah we can hear you go ahead

2589
01:42:43,520 --> 01:42:46,320
okay okay so uh i'm muchan chung from

2590
01:42:46,320 --> 01:42:48,960
channel mobile uh here i would like to

2591
01:42:48,960 --> 01:42:51,600
provide the two points of my

2592
01:42:51,600 --> 01:42:53,199
observation

2593
01:42:53,199 --> 01:42:55,600
uh the first point

2594
01:42:55,600 --> 01:42:56,800
i think

2595
01:42:56,800 --> 01:43:01,440
ipv6 traffic is increasing

2596
01:43:01,440 --> 01:43:03,119
rapidly

2597
01:43:03,119 --> 01:43:06,080
for example i just mentioned that

2598
01:43:06,080 --> 01:43:07,920
channel mobile's

2599
01:43:07,920 --> 01:43:11,280
4g and 5g network

2600
01:43:11,280 --> 01:43:13,920
ipv6 traffic

2601
01:43:13,920 --> 01:43:15,840
has reached

2602
01:43:15,840 --> 01:43:19,280
42 percent

2603
01:43:20,080 --> 01:43:23,520
about two years ago this number

2604
01:43:23,520 --> 01:43:26,800
was less than 20

2605
01:43:26,800 --> 01:43:28,880
so i think it the

2606
01:43:28,880 --> 01:43:31,119
uh

2607
01:43:31,679 --> 01:43:37,040
the traffic ipv6 currently ipv6 traffic

2608
01:43:37,040 --> 01:43:39,840
is increasing dramatically

2609
01:43:39,840 --> 01:43:41,040
so

2610
01:43:41,040 --> 01:43:43,840
we have reason to believe that

2611
01:43:43,840 --> 01:43:46,320
in the near future

2612
01:43:46,320 --> 01:43:51,760
almost all traffic will be ipv6

2613
01:43:51,760 --> 01:43:56,000
uh for operator we should prepare

2614
01:43:56,000 --> 01:43:57,360
uh for

2615
01:43:57,360 --> 01:43:59,280
the situation

2616
01:43:59,280 --> 01:44:00,320
so

2617
01:44:00,320 --> 01:44:03,119
i think a lot of discussion

2618
01:44:03,119 --> 01:44:05,040
we have

2619
01:44:05,040 --> 01:44:06,400
done

2620
01:44:06,400 --> 01:44:07,920
just now

2621
01:44:07,920 --> 01:44:10,320
i think ipv6

2622
01:44:10,320 --> 01:44:11,840
native

2623
01:44:11,840 --> 01:44:13,520
network

2624
01:44:13,520 --> 01:44:17,679
is a good solution for operator in the

2625
01:44:17,679 --> 01:44:19,119
near future

2626
01:44:19,119 --> 01:44:20,560
and the second

2627
01:44:20,560 --> 01:44:21,520
point

2628
01:44:21,520 --> 01:44:22,960
is that the

2629
01:44:22,960 --> 01:44:27,040
multicast traffic is increasing

2630
01:44:27,040 --> 01:44:28,719
rapidly

2631
01:44:28,719 --> 01:44:30,080
especially

2632
01:44:30,080 --> 01:44:30,880
some

2633
01:44:30,880 --> 01:44:32,840
internet live video

2634
01:44:32,840 --> 01:44:35,360
services such as

2635
01:44:35,360 --> 01:44:37,679
tick tock in china

2636
01:44:37,679 --> 01:44:40,639
which brings a large

2637
01:44:40,639 --> 01:44:42,400
number of

2638
01:44:42,400 --> 01:44:44,400
multicast traffic

2639
01:44:44,400 --> 01:44:46,480
but the zoos traffic

2640
01:44:46,480 --> 01:44:49,718
are currently

2641
01:44:50,320 --> 01:44:51,360
using

2642
01:44:51,360 --> 01:44:53,520
unicast solution

2643
01:44:53,520 --> 01:44:54,400
in

2644
01:44:54,400 --> 01:44:56,639
telecom network

2645
01:44:56,639 --> 01:44:58,719
this has caused

2646
01:44:58,719 --> 01:45:00,840
a huge waste of

2647
01:45:00,840 --> 01:45:04,080
bandwidth and

2648
01:45:04,080 --> 01:45:05,600
but you know

2649
01:45:05,600 --> 01:45:06,480
the

2650
01:45:06,480 --> 01:45:08,639
existing multicast

2651
01:45:08,639 --> 01:45:09,840
solution

2652
01:45:09,840 --> 01:45:11,679
cannot

2653
01:45:11,679 --> 01:45:13,280
support

2654
01:45:13,280 --> 01:45:17,040
cannot solve this kind of issue

2655
01:45:17,040 --> 01:45:18,080
so

2656
01:45:18,080 --> 01:45:20,960
from my point of view we need to

2657
01:45:20,960 --> 01:45:23,440
embrace ipv6

2658
01:45:23,440 --> 01:45:27,679
and support new multicast service

2659
01:45:27,679 --> 01:45:29,280
we need a proper

2660
01:45:29,280 --> 01:45:31,520
multicast

2661
01:45:31,520 --> 01:45:32,960
protocol

2662
01:45:32,960 --> 01:45:34,000
for

2663
01:45:34,000 --> 01:45:34,800
this

2664
01:45:34,800 --> 01:45:37,520
situation i think itf

2665
01:45:37,520 --> 01:45:39,280
should prepare

2666
01:45:39,280 --> 01:45:42,840
for those new requirement new

2667
01:45:42,840 --> 01:45:44,880
situation and

2668
01:45:44,880 --> 01:45:46,159
as a

2669
01:45:46,159 --> 01:45:49,040
operators

2670
01:45:50,080 --> 01:45:51,440
engineer

2671
01:45:51,440 --> 01:45:53,679
i suggest

2672
01:45:53,679 --> 01:45:56,159
i have considered

2673
01:45:56,159 --> 01:45:57,360
the new

2674
01:45:57,360 --> 01:45:58,800
solution

2675
01:45:58,800 --> 01:46:00,400
especially

2676
01:46:00,400 --> 01:46:01,600
friendly

2677
01:46:01,600 --> 01:46:04,400
for ipv6

2678
01:46:04,400 --> 01:46:05,280
on

2679
01:46:05,280 --> 01:46:07,199
multicast

2680
01:46:07,199 --> 01:46:11,480
protocol thank you

2681
01:46:15,600 --> 01:46:17,679
okay can you hear me

2682
01:46:17,679 --> 01:46:20,080
yes yes we can hear you okay

2683
01:46:20,080 --> 01:46:23,199
okay now uh in fact because there's no

2684
01:46:23,199 --> 01:46:25,119
time for the presentation of the

2685
01:46:25,119 --> 01:46:28,159
solutions i here just to give some this

2686
01:46:28,159 --> 01:46:29,199
the

2687
01:46:29,199 --> 01:46:32,239
suggestion about this the solution

2688
01:46:32,239 --> 01:46:34,639
in fact in the solution it

2689
01:46:34,639 --> 01:46:35,600
shows

2690
01:46:35,600 --> 01:46:37,920
in fact in the used case it shows that

2691
01:46:37,920 --> 01:46:42,400
the prt is not a skill enough to satisfy

2692
01:46:42,400 --> 01:46:45,760
the requirement and the user cases

2693
01:46:45,760 --> 01:46:47,199
presented

2694
01:46:47,199 --> 01:46:48,080
so

2695
01:46:48,080 --> 01:46:50,639
in order to solve this

2696
01:46:50,639 --> 01:46:53,920
in order to solve this issue we in fact

2697
01:46:53,920 --> 01:46:57,679
we need a solution to combine the srv6

2698
01:46:57,679 --> 01:47:00,400
segment and the beta stream

2699
01:47:00,400 --> 01:47:03,760
to propose the new multicast solution to

2700
01:47:03,760 --> 01:47:06,239
satisfy this requirement

2701
01:47:06,239 --> 01:47:08,639
because this solution is based on the

2702
01:47:08,639 --> 01:47:10,159
ipv6

2703
01:47:10,159 --> 01:47:11,360
so this

2704
01:47:11,360 --> 01:47:14,960
in fact there is the new solution uh

2705
01:47:14,960 --> 01:47:19,119
cannot covered by cx mark sabrina and

2706
01:47:19,119 --> 01:47:22,320
uh and the beer so we think we need a

2707
01:47:22,320 --> 01:47:25,440
new venue to dis develop this the new

2708
01:47:25,440 --> 01:47:28,800
solution so this is just a consideration

2709
01:47:28,800 --> 01:47:31,360
for the msr both

2710
01:47:31,360 --> 01:47:32,639
okay that's

2711
01:47:32,639 --> 01:47:34,560
just some this is the

2712
01:47:34,560 --> 01:47:37,600
thinking about from this the solution

2713
01:47:37,600 --> 01:47:42,800
and that's the proposal for the ms r6

2714
01:47:47,360 --> 01:47:48,960
thank you

2715
01:47:48,960 --> 01:47:51,360
harley

2716
01:47:51,360 --> 01:47:52,560
yeah

2717
01:47:52,560 --> 01:47:54,880
this is the hall from mrsa

2718
01:47:54,880 --> 01:47:58,080
we think ms6 is a meaningful topic

2719
01:47:58,080 --> 01:48:00,159
as discussed today

2720
01:48:00,159 --> 01:48:01,920
appreciates the presenter clearly

2721
01:48:01,920 --> 01:48:05,040
defined applicable scenarios for rmr6

2722
01:48:05,040 --> 01:48:07,600
and its native ipv6 nature

2723
01:48:07,600 --> 01:48:09,520
so as a vendor i believe it will be

2724
01:48:09,520 --> 01:48:12,239
great to form a complete solution or

2725
01:48:12,239 --> 01:48:14,000
music

2726
01:48:14,000 --> 01:48:15,920
and believe that a separate working

2727
01:48:15,920 --> 01:48:18,320
group is more helpful to promote the

2728
01:48:18,320 --> 01:48:22,400
process with this matter thanks

2729
01:48:26,159 --> 01:48:27,600
go ahead genji

2730
01:48:27,600 --> 01:48:31,360
yes um here i have four points to to

2731
01:48:31,360 --> 01:48:32,800
cover here

2732
01:48:32,800 --> 01:48:34,800
basically it's for the the both goals

2733
01:48:34,800 --> 01:48:36,719
the first line is just

2734
01:48:36,719 --> 01:48:39,679
based on the use case uh based on the

2735
01:48:39,679 --> 01:48:41,600
gap analysis that being done before and

2736
01:48:41,600 --> 01:48:44,080
on the meeting alias so it's going to

2737
01:48:44,080 --> 01:48:44,960
say

2738
01:48:44,960 --> 01:48:46,880
to answer the question is the problem is

2739
01:48:46,880 --> 01:48:49,040
a real problem yes it is

2740
01:48:49,040 --> 01:48:51,119
the second one is like well

2741
01:48:51,119 --> 01:48:54,239
unfortunately the technical solutions

2742
01:48:54,239 --> 01:48:55,119
um

2743
01:48:55,119 --> 01:48:58,000
have no time to be presented but also

2744
01:48:58,000 --> 01:49:00,400
those things it's going to show

2745
01:49:00,400 --> 01:49:03,199
you know uh this is something should be

2746
01:49:03,199 --> 01:49:06,159
done in igf and also it can be done in

2747
01:49:06,159 --> 01:49:07,280
itf

2748
01:49:07,280 --> 01:49:10,159
but the third point is like uh

2749
01:49:10,159 --> 01:49:12,480
people you know from today's participant

2750
01:49:12,480 --> 01:49:14,800
to their discussion and also from the

2751
01:49:14,800 --> 01:49:16,639
alias discussion from the sign meeting

2752
01:49:16,639 --> 01:49:18,800
discussion it shows

2753
01:49:18,800 --> 01:49:24,159
an its sma's subject matter of expert

2754
01:49:24,239 --> 01:49:25,360
are showing

2755
01:49:25,360 --> 01:49:27,440
a demonstrate a great amount of interest

2756
01:49:27,440 --> 01:49:28,800
on the topic

2757
01:49:28,800 --> 01:49:31,280
the fourth one actually is like uh is

2758
01:49:31,280 --> 01:49:33,520
that the reasonable to deliver something

2759
01:49:33,520 --> 01:49:35,760
yes it's actually you know if you

2760
01:49:35,760 --> 01:49:39,760
look at the uh the sunni hexa there the

2761
01:49:39,760 --> 01:49:41,199
team just

2762
01:49:41,199 --> 01:49:43,280
use p4 i think they did the

2763
01:49:43,280 --> 01:49:45,599
implementation and the emulation

2764
01:49:45,599 --> 01:49:48,000
for the msr6 uh

2765
01:49:48,000 --> 01:49:50,560
uh be i think so basically means it can

2766
01:49:50,560 --> 01:49:52,960
be done so for out of forcing together

2767
01:49:52,960 --> 01:49:54,800
well i try to answer the question for

2768
01:49:54,800 --> 01:49:57,599
the boss goal so yeah we do hope

2769
01:49:57,599 --> 01:49:59,840
uh this one msr6

2770
01:49:59,840 --> 01:50:02,800
um can be accepted or in to be done in

2771
01:50:02,800 --> 01:50:05,199
the idf thank you

2772
01:50:05,199 --> 01:50:08,000
okay i'll abuse my chair power and

2773
01:50:08,000 --> 01:50:10,400
hijack the queue to relay the message

2774
01:50:10,400 --> 01:50:12,320
from the chat from

2775
01:50:12,320 --> 01:50:15,119
dinner fairness is saying what does

2776
01:50:15,119 --> 01:50:18,320
multicast scale because receiver state

2777
01:50:18,320 --> 01:50:21,040
is not tracked if you require the source

2778
01:50:21,040 --> 01:50:23,199
to know about the receivers it's a

2779
01:50:23,199 --> 01:50:27,199
non-starter look at st2 from mid-80s

2780
01:50:27,199 --> 01:50:29,119
where source

2781
01:50:29,119 --> 01:50:32,799
initiated trees failed

2782
01:50:33,679 --> 01:50:35,760
yeah go ahead yeah so

2783
01:50:35,760 --> 01:50:37,679
i think one of the core understanding is

2784
01:50:37,679 --> 01:50:38,880
that um

2785
01:50:38,880 --> 01:50:41,840
in large networks most of the multicast

2786
01:50:41,840 --> 01:50:43,440
is sparse that's why we started with

2787
01:50:43,440 --> 01:50:45,520
what we call pimp sparse node right so

2788
01:50:45,520 --> 01:50:47,679
the total number of receivers isn't you

2789
01:50:47,679 --> 01:50:49,840
know the same as the total size of the

2790
01:50:49,840 --> 01:50:50,960
network

2791
01:50:50,960 --> 01:50:53,119
the size of receivers typically is

2792
01:50:53,119 --> 01:50:54,719
fairly limited and they're randomly

2793
01:50:54,719 --> 01:50:56,719
distributed based on the service that

2794
01:50:56,719 --> 01:50:58,159
you have and you don't want to have for

2795
01:50:58,159 --> 01:51:00,960
each of these small groups relative to

2796
01:51:00,960 --> 01:51:03,360
the size of the network a state on every

2797
01:51:03,360 --> 01:51:05,040
hub that you need to troubleshoot that

2798
01:51:05,040 --> 01:51:08,239
is one of the core value proposition

2799
01:51:08,239 --> 01:51:10,480
exactly what you basically you know

2800
01:51:10,480 --> 01:51:12,800
started doing beer for and

2801
01:51:12,800 --> 01:51:16,000
so i i think putting this into question

2802
01:51:16,000 --> 01:51:18,840
would equally put beer into

2803
01:51:18,840 --> 01:51:21,360
question do you know like is it the same

2804
01:51:21,360 --> 01:51:23,199
topic you're talking about okay please

2805
01:51:23,199 --> 01:51:24,560
go ahead

2806
01:51:24,560 --> 01:51:26,880
this is dino well torilis your core

2807
01:51:26,880 --> 01:51:28,239
author said

2808
01:51:28,239 --> 01:51:29,280
um

2809
01:51:29,280 --> 01:51:30,960
your co-author said that they need to

2810
01:51:30,960 --> 01:51:33,280
support 10 000 receivers are we going to

2811
01:51:33,280 --> 01:51:35,840
put 10 000 receivers in a source route

2812
01:51:35,840 --> 01:51:38,000
give me a break okay so maybe it's maybe

2813
01:51:38,000 --> 01:51:40,320
your answer is it's not 10 000 receivers

2814
01:51:40,320 --> 01:51:43,599
it's a thousand receivers made off of 10

2815
01:51:43,599 --> 01:51:46,159
routers okay so at that point the

2816
01:51:46,159 --> 01:51:48,239
replication has to get to the 10 routers

2817
01:51:48,239 --> 01:51:50,480
and then they each replicate to 1 000

2818
01:51:50,480 --> 01:51:52,239
maybe over the ram that supports native

2819
01:51:52,239 --> 01:51:54,880
multicast that's achievable but that's

2820
01:51:54,880 --> 01:51:57,280
not native multicast you'd have if if

2821
01:51:57,280 --> 01:51:58,960
you are sensitive to the native

2822
01:51:58,960 --> 01:52:01,040
multicast state all over the network for

2823
01:52:01,040 --> 01:52:03,599
those 10 routers then you have to use

2824
01:52:03,599 --> 01:52:05,679
overlays it's that simple that's the

2825
01:52:05,679 --> 01:52:07,920
trade-off no so i mean

2826
01:52:07,920 --> 01:52:09,920
the way we're thinking about it think of

2827
01:52:09,920 --> 01:52:11,840
a simple service provider core network

2828
01:52:11,840 --> 01:52:13,679
with whatever number of pes is the

2829
01:52:13,679 --> 01:52:14,719
number of

2830
01:52:14,719 --> 01:52:17,199
um you know uh destinations that you

2831
01:52:17,199 --> 01:52:19,679
need to do source routing for right and

2832
01:52:19,679 --> 01:52:21,360
one of the recognition that we had is

2833
01:52:21,360 --> 01:52:24,400
that um obviously it it may often be

2834
01:52:24,400 --> 01:52:26,560
good enough to just have something like

2835
01:52:26,560 --> 01:52:27,360
um

2836
01:52:27,360 --> 01:52:29,920
256 bit which which is kind of the most

2837
01:52:29,920 --> 01:52:31,679
likely standard in beer

2838
01:52:31,679 --> 01:52:33,760
and then we get a uh

2839
01:52:33,760 --> 01:52:35,760
an improvement by a factor of 256 by

2840
01:52:35,760 --> 01:52:37,440
just sending as many copies as we need

2841
01:52:37,440 --> 01:52:39,599
to reach all the destinations divided by

2842
01:52:39,599 --> 01:52:42,560
256 but obviously you can now have the

2843
01:52:42,560 --> 01:52:44,400
easy problem that especially when you

2844
01:52:44,400 --> 01:52:47,040
have small groups um you're sending to

2845
01:52:47,040 --> 01:52:48,800
10 receivers but you actually need to

2846
01:52:48,800 --> 01:52:50,320
send 10 packets so you didn't have any

2847
01:52:50,320 --> 01:52:52,000
multicast benefit because you're using

2848
01:52:52,000 --> 01:52:54,000
flat bit strings and each of the 10

2849
01:52:54,000 --> 01:52:55,760
receivers is in a different bit string

2850
01:52:55,760 --> 01:52:57,599
and that's basically what we run for a

2851
01:52:57,599 --> 01:52:59,840
large service provider topology as

2852
01:52:59,840 --> 01:53:02,159
simulations uh to show them but it's

2853
01:53:02,159 --> 01:53:03,920
it's it's you know easily understood

2854
01:53:03,920 --> 01:53:05,920
when you need to break up um the

2855
01:53:05,920 --> 01:53:08,800
receiver space into flat bit strings so

2856
01:53:08,800 --> 01:53:10,400
and those things can be done better if

2857
01:53:10,400 --> 01:53:11,920
you do better than the fat bit string

2858
01:53:11,920 --> 01:53:13,199
encoding which would be the next

2859
01:53:13,199 --> 01:53:15,920
generation of the encodings there i i

2860
01:53:15,920 --> 01:53:17,840
think there are way too much detail yeah

2861
01:53:17,840 --> 01:53:19,360
i think so yeah thank you thanks for

2862
01:53:19,360 --> 01:53:20,560
listening thank you responder you want

2863
01:53:20,560 --> 01:53:21,920
me to sit down

2864
01:53:21,920 --> 01:53:24,080
i think sit down would be good thank you

2865
01:53:24,080 --> 01:53:27,760
thank you uh uh shuru zhang please go

2866
01:53:27,760 --> 01:53:29,119
ahead i don't know if i got your name

2867
01:53:29,119 --> 01:53:32,159
right please go ahead thanks

2868
01:53:36,880 --> 01:53:39,199
yeah can you hear me

2869
01:53:39,199 --> 01:53:41,360
yes please speak up

2870
01:53:41,360 --> 01:53:43,199
yeah here is zhang jieru from china

2871
01:53:43,199 --> 01:53:44,480
unicom

2872
01:53:44,480 --> 01:53:46,400
um there are

2873
01:53:46,400 --> 01:53:49,280
there have been about uh 40 smart micro

2874
01:53:49,280 --> 01:53:51,360
networks and some byteball

2875
01:53:51,360 --> 01:53:53,199
night work notes

2876
01:53:53,199 --> 01:53:56,239
are built in isrb6

2877
01:53:56,239 --> 01:53:57,760
they are unicost

2878
01:53:57,760 --> 01:54:00,000
we really need new multicast for

2879
01:54:00,000 --> 01:54:02,880
large-scale networks which is based on

2880
01:54:02,880 --> 01:54:04,560
srv6r

2881
01:54:04,560 --> 01:54:06,239
ipv6

2882
01:54:06,239 --> 01:54:07,199
for me

2883
01:54:07,199 --> 01:54:10,320
msr6 may keep the knight work simple

2884
01:54:10,320 --> 01:54:14,080
this is meaningful for the operator

2885
01:54:14,080 --> 01:54:15,840
uh this is

2886
01:54:15,840 --> 01:54:16,960
the

2887
01:54:16,960 --> 01:54:19,199
we need the use case okay that's all

2888
01:54:19,199 --> 01:54:20,960
thank you

2889
01:54:20,960 --> 01:54:23,840
thank you

2890
01:54:25,280 --> 01:54:26,960
no no we will we'll get to it like

2891
01:54:26,960 --> 01:54:30,480
please we have some stuff to do um

2892
01:54:30,480 --> 01:54:34,519
sigily please go ahead

2893
01:54:37,760 --> 01:54:40,480
can you hear me

2894
01:54:43,199 --> 01:54:44,080
um

2895
01:54:44,080 --> 01:54:46,719
i i i think you have some feedback

2896
01:54:46,719 --> 01:54:48,639
issues so if you can type it into the

2897
01:54:48,639 --> 01:54:51,840
chat it's probably better

2898
01:54:51,920 --> 01:54:53,679
we are really running out of time so we

2899
01:54:53,679 --> 01:54:55,360
cannot troubleshoot this so please just

2900
01:54:55,360 --> 01:54:57,520
type into the chat thank you

2901
01:54:57,520 --> 01:54:58,880
uh no

2902
01:54:58,880 --> 01:55:01,599
is that okay

2903
01:55:03,040 --> 01:55:04,719
you're coming across very low but please

2904
01:55:04,719 --> 01:55:06,000
go ahead

2905
01:55:06,000 --> 01:55:07,679
uh okay thank you

2906
01:55:07,679 --> 01:55:10,639
uh i am sijali from beijing university

2907
01:55:10,639 --> 01:55:11,599
of

2908
01:55:11,599 --> 01:55:14,719
uh post under telecommunication

2909
01:55:14,719 --> 01:55:15,840
occasions

2910
01:55:15,840 --> 01:55:19,199
uh we would like to make an introduction

2911
01:55:19,199 --> 01:55:22,560
about our project uh in over a minute

2912
01:55:22,560 --> 01:55:24,639
but uh we didn't have

2913
01:55:24,639 --> 01:55:27,199
it enough time so we put it in this

2914
01:55:27,199 --> 01:55:30,639
section in the this classic okay

2915
01:55:30,639 --> 01:55:33,040
and we had a hackathon

2916
01:55:33,040 --> 01:55:37,040
a project for msrbe solution in this

2917
01:55:37,040 --> 01:55:41,679
ieft introduction uh it means in

2918
01:55:41,679 --> 01:55:43,599
includes two parts

2919
01:55:43,599 --> 01:55:46,440
the first one is gp4

2920
01:55:46,440 --> 01:55:49,920
implication of msrbe

2921
01:55:49,920 --> 01:55:54,639
under the emulations of msr6pe based on

2922
01:55:54,639 --> 01:55:57,599
intel tofino sweeties

2923
01:55:57,599 --> 01:56:01,280
we have brought the value

2924
01:56:01,280 --> 01:56:02,719
validation of

2925
01:56:02,719 --> 01:56:04,320
mrs r6

2926
01:56:04,320 --> 01:56:07,360
based on open source and we hope to see

2927
01:56:07,360 --> 01:56:10,400
further progress of this work in

2928
01:56:10,400 --> 01:56:12,080
ift

2929
01:56:12,080 --> 01:56:13,199
itf

2930
01:56:13,199 --> 01:56:17,440
that's all thank you for listening

2931
01:56:17,520 --> 01:56:19,920
thank you uh so we just want to have uh

2932
01:56:19,920 --> 01:56:21,520
tng did you want to make like a really

2933
01:56:21,520 --> 01:56:23,840
really brief statement on that thank you

2934
01:56:23,840 --> 01:56:26,560
for mentioning about the 1027 receivers

2935
01:56:26,560 --> 01:56:28,400
consider it's like a reasonable actually

2936
01:56:28,400 --> 01:56:29,280
it is

2937
01:56:29,280 --> 01:56:31,440
for our first case and you look at the

2938
01:56:31,440 --> 01:56:36,000
5g 20 uh 24 23 247 after the definition

2939
01:56:36,000 --> 01:56:38,239
about the five uh five mbs nihana

2940
01:56:38,239 --> 01:56:41,280
architecture from the ups and upf up to

2941
01:56:41,280 --> 01:56:43,360
ginobi and you look at that one that

2942
01:56:43,360 --> 01:56:45,040
link will be used to multicast and then

2943
01:56:45,040 --> 01:56:47,040
the number of genovi can go like

2944
01:56:47,040 --> 01:56:49,920
ballpark 30 000 and beyond so it is

2945
01:56:49,920 --> 01:56:51,920
reasonable thank you thank you thank you

2946
01:56:51,920 --> 01:56:54,960
so i just want to do like a quick poll

2947
01:56:54,960 --> 01:56:56,480
of the room because like i think a lot

2948
01:56:56,480 --> 01:56:59,679
of the disagreements coming from

2949
01:56:59,679 --> 01:57:01,280
the problem itself like not in the

2950
01:57:01,280 --> 01:57:02,800
solution space like even though we did

2951
01:57:02,800 --> 01:57:04,159
talk a little bit about the solution

2952
01:57:04,159 --> 01:57:06,159
space so i just want to run a poll like

2953
01:57:06,159 --> 01:57:07,760
please get on your

2954
01:57:07,760 --> 01:57:11,040
phones computers to

2955
01:57:11,040 --> 01:57:13,199
raise your hand or not raise your hand

2956
01:57:13,199 --> 01:57:15,199
um based on if you think the problem

2957
01:57:15,199 --> 01:57:17,040
statement itself is clear so the problem

2958
01:57:17,040 --> 01:57:19,920
to me is always clear so

2959
01:57:19,920 --> 01:57:21,440
i'll just run it for another minute or

2960
01:57:21,440 --> 01:57:23,040
so to figure out where to go next

2961
01:57:23,040 --> 01:57:24,800
because we don't want to

2962
01:57:24,800 --> 01:57:26,639
do things too ahead of like what we have

2963
01:57:26,639 --> 01:57:29,360
to do so thanks

2964
01:57:30,320 --> 01:57:31,599
can i ask

2965
01:57:31,599 --> 01:57:34,320
what do you mean by is the problem clear

2966
01:57:34,320 --> 01:57:36,400
the is the problem to be solved clear

2967
01:57:36,400 --> 01:57:37,520
from like

2968
01:57:37,520 --> 01:57:39,119
as as in

2969
01:57:39,119 --> 01:57:41,440
you agree that it is a problem or that

2970
01:57:41,440 --> 01:57:44,239
you understand what the statement of the

2971
01:57:44,239 --> 01:57:46,080
problem is do you understand what the

2972
01:57:46,080 --> 01:57:47,440
statement of the problem is right like

2973
01:57:47,440 --> 01:57:48,239
as

2974
01:57:48,239 --> 01:57:50,400
described by the proponents like so you

2975
01:57:50,400 --> 01:57:52,000
may or may not agree that's a problem

2976
01:57:52,000 --> 01:57:53,520
for you to solve but do you understand

2977
01:57:53,520 --> 01:57:56,800
what they're trying to solve thanks

2978
01:57:59,440 --> 01:58:01,679
that's what and hence the question right

2979
01:58:01,679 --> 01:58:03,280
if you don't believe you understand

2980
01:58:03,280 --> 01:58:05,520
what's a problem to be solved then you

2981
01:58:05,520 --> 01:58:07,760
do not raise your hand or pick do not

2982
01:58:07,760 --> 01:58:09,280
raise your hand which is equal under not

2983
01:58:09,280 --> 01:58:10,960
raising your hand or raising your hand

2984
01:58:10,960 --> 01:58:13,679
for not doing it

2985
01:58:18,800 --> 01:58:21,840
another minute

2986
01:58:43,199 --> 01:58:46,559
okay going once

2987
01:58:47,199 --> 01:58:50,000
going twice

2988
01:58:51,199 --> 01:58:55,280
pull close so um we have a very i would

2989
01:58:55,280 --> 01:58:59,040
say um evenly split room and like remote

2990
01:58:59,040 --> 01:59:02,800
room as well so it's i think um our

2991
01:59:02,800 --> 01:59:05,599
conclusion as shares and uh uh

2992
01:59:05,599 --> 01:59:07,360
to be confirmed by the ad

2993
01:59:07,360 --> 01:59:09,119
is that the problem statement requires

2994
01:59:09,119 --> 01:59:11,760
for the development um before we go any

2995
01:59:11,760 --> 01:59:13,040
further with this without like you know

2996
01:59:13,040 --> 01:59:14,960
going to a charter or something i think

2997
01:59:14,960 --> 01:59:17,119
we need to spend a little bit more time

2998
01:59:17,119 --> 01:59:19,199
um like narrowing down the problem

2999
01:59:19,199 --> 01:59:21,679
statement right and we can continue the

3000
01:59:21,679 --> 01:59:24,159
discussion on the mailing list

3001
01:59:24,159 --> 01:59:26,880
and try to make progress over there

3002
01:59:26,880 --> 01:59:29,440
instead of like trying to go through the

3003
01:59:29,440 --> 01:59:30,880
working group charter questions because

3004
01:59:30,880 --> 01:59:32,560
it does not make sense right because if

3005
01:59:32,560 --> 01:59:33,920
people don't have a common understanding

3006
01:59:33,920 --> 01:59:35,119
of the problem it doesn't make sense for

3007
01:59:35,119 --> 01:59:36,239
us to ask questions like do you want to

3008
01:59:36,239 --> 01:59:37,840
form a working group right because we

3009
01:59:37,840 --> 01:59:39,280
don't know what your former working

3010
01:59:39,280 --> 01:59:40,880
group for so

3011
01:59:40,880 --> 01:59:42,880
thank you all for coming we'll continue

3012
01:59:42,880 --> 01:59:44,480
the problem statement discussions in the

3013
01:59:44,480 --> 01:59:46,480
mailing list and

3014
01:59:46,480 --> 01:59:47,840
i hope to see you in another meeting

3015
01:59:47,840 --> 01:59:50,440
thank you

3016
01:59:50,440 --> 01:59:55,179
[Applause]

3017
02:00:04,800 --> 02:00:08,040
thank you

3018
02:00:25,760 --> 02:00:27,840
like

3019
02:01:21,119 --> 02:01:24,920
and like make it

