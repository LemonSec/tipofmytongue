1
00:00:53,720 --> 00:00:56,909
[Music]

2
00:01:01,440 --> 00:01:04,440
again

3
00:01:20,720 --> 00:01:23,720
is

4
00:01:58,560 --> 00:02:01,560
oh

5
00:02:48,080 --> 00:02:51,840
chris are you a data tracker

6
00:02:52,480 --> 00:02:55,359
testing testing

7
00:03:00,080 --> 00:03:01,519
share slides

8
00:03:01,519 --> 00:03:04,290
okay

9
00:03:04,290 --> 00:03:07,440
[Music]

10
00:03:09,920 --> 00:03:12,920
uh

11
00:03:44,640 --> 00:03:47,640
yes

12
00:04:12,319 --> 00:04:15,480
thank you

13
00:04:25,120 --> 00:04:26,800
okay so actually we will have someone

14
00:04:26,800 --> 00:04:28,960
else

15
00:04:35,360 --> 00:04:37,120
is this microphone actually working for

16
00:04:37,120 --> 00:04:41,880
remote people can remote folk hear me

17
00:04:42,800 --> 00:04:44,880
maybe yay

18
00:04:44,880 --> 00:04:47,680
okay so we have rearranged the agenda

19
00:04:47,680 --> 00:04:49,280
very slightly

20
00:04:49,280 --> 00:04:53,759
and we will first be having the

21
00:04:53,759 --> 00:04:57,280
um what's the actual full name

22
00:04:57,280 --> 00:05:00,000
um where is

23
00:05:00,000 --> 00:05:01,759
yeah where did my packets go measuring

24
00:05:01,759 --> 00:05:05,360
the impact of rpki rov

25
00:05:05,360 --> 00:05:07,120
and that's going to be by cohen who's

26
00:05:07,120 --> 00:05:09,440
presenting remotely

27
00:05:09,440 --> 00:05:10,880
i guess actually before we should do

28
00:05:10,880 --> 00:05:12,400
that we should first do the hello

29
00:05:12,400 --> 00:05:15,360
everybody and welcome to philadelphia

30
00:05:15,360 --> 00:05:17,280
i'm warren this is chris

31
00:05:17,280 --> 00:05:20,000
you're in the iepg meeting

32
00:05:20,000 --> 00:05:22,880
which is a informal gathering of network

33
00:05:22,880 --> 00:05:25,199
operators that happens before the ietf

34
00:05:25,199 --> 00:05:26,720
actually starts

35
00:05:26,720 --> 00:05:28,240
so technically you don't have to be

36
00:05:28,240 --> 00:05:30,240
registered for the meeting but i'm

37
00:05:30,240 --> 00:05:33,039
guessing everybody probably is anyway

38
00:05:33,039 --> 00:05:33,840
so

39
00:05:33,840 --> 00:05:35,120
this is us

40
00:05:35,120 --> 00:05:39,840
um hello and welcome again and

41
00:05:39,840 --> 00:05:41,919
let's get started

42
00:05:41,919 --> 00:05:44,400
i guess i how's this gonna work would

43
00:05:44,400 --> 00:05:46,000
you like us to share the slides or do

44
00:05:46,000 --> 00:05:47,840
you want to ask to share and you move

45
00:05:47,840 --> 00:05:49,680
them whichever you would prefer

46
00:05:49,680 --> 00:05:52,720
i believe i asked to share the slides

47
00:05:52,720 --> 00:05:53,759
but then

48
00:05:53,759 --> 00:05:54,639
okay

49
00:05:54,639 --> 00:05:56,960
click the button and

50
00:05:56,960 --> 00:05:58,720
take it away

51
00:05:58,720 --> 00:06:00,479
ah lovely

52
00:06:00,479 --> 00:06:03,440
so yes i want to talk about

53
00:06:03,440 --> 00:06:06,560
where did my packets go basically we do

54
00:06:06,560 --> 00:06:08,960
rpg irv so

55
00:06:08,960 --> 00:06:10,639
what impact does it have

56
00:06:10,639 --> 00:06:10,930
um

57
00:06:10,930 --> 00:06:12,639
[Music]

58
00:06:12,639 --> 00:06:15,039
firstly so why do we actually care about

59
00:06:15,039 --> 00:06:17,440
our pki i mean i would argue that okay

60
00:06:17,440 --> 00:06:18,960
for some of us it's probably job

61
00:06:18,960 --> 00:06:21,440
security but in generally speaking we

62
00:06:21,440 --> 00:06:23,600
care not so much about rpk intrinsically

63
00:06:23,600 --> 00:06:25,199
but we care about where our packets

64
00:06:25,199 --> 00:06:26,400
actually go to

65
00:06:26,400 --> 00:06:28,639
and where the place that they go to is

66
00:06:28,639 --> 00:06:31,120
actually the place that we intended our

67
00:06:31,120 --> 00:06:33,199
packets to end up in

68
00:06:33,199 --> 00:06:37,280
and rpg rov is one of the ways we try to

69
00:06:37,280 --> 00:06:38,560
make sure that they end up in the

70
00:06:38,560 --> 00:06:39,759
intended place

71
00:06:39,759 --> 00:06:40,800
um

72
00:06:40,800 --> 00:06:44,240
there is a slight issue with that

73
00:06:44,240 --> 00:06:45,600
so

74
00:06:45,600 --> 00:06:49,000
what's the problem

75
00:07:03,840 --> 00:07:04,720
oh

76
00:07:04,720 --> 00:07:07,039
that is a slash 21

77
00:07:07,039 --> 00:07:10,560
that is announced by as333 so to ripen

78
00:07:10,560 --> 00:07:12,000
to c

79
00:07:12,000 --> 00:07:15,599
uh and we have uh the same prefix as a

80
00:07:15,599 --> 00:07:16,639
slash

81
00:07:16,639 --> 00:07:19,360
24 announced by as666 which i've called

82
00:07:19,360 --> 00:07:21,520
evocor which i know it's not the right

83
00:07:21,520 --> 00:07:23,759
name because but hey um

84
00:07:23,759 --> 00:07:25,360
this discussion about whether we used

85
00:07:25,360 --> 00:07:27,039
reserve prefixes for documentation or

86
00:07:27,039 --> 00:07:28,960
not that has been going on forever and i

87
00:07:28,960 --> 00:07:31,199
will gladly follow that tradition

88
00:07:31,199 --> 00:07:32,639
um

89
00:07:32,639 --> 00:07:36,800
so they both announced that uh free

90
00:07:36,800 --> 00:07:39,280
prefix to serve and let's for this

91
00:07:39,280 --> 00:07:41,759
example say that surf doesn't do

92
00:07:41,759 --> 00:07:43,919
rov so they receive both them except

93
00:07:43,919 --> 00:07:46,160
both of them and forward both of them to

94
00:07:46,160 --> 00:07:48,240
the university of twente so that's one

95
00:07:48,240 --> 00:07:49,599
on the right

96
00:07:49,599 --> 00:07:51,520
so if the university of tennessee were

97
00:07:51,520 --> 00:07:54,000
to do rpki rov

98
00:07:54,000 --> 00:07:56,800
then it would look at both of those

99
00:07:56,800 --> 00:07:59,199
pgp announcements and then see okay hey

100
00:07:59,199 --> 00:08:03,360
that one that goes from 1103 to 666.

101
00:08:03,360 --> 00:08:05,280
hey that's that's invalid according to

102
00:08:05,280 --> 00:08:07,199
this the roast that i have

103
00:08:07,199 --> 00:08:09,360
so i'm going to drop that

104
00:08:09,360 --> 00:08:11,680
great okay now we have the only the

105
00:08:11,680 --> 00:08:13,199
other route available

106
00:08:13,199 --> 00:08:15,599
except that if we send the brackets to

107
00:08:15,599 --> 00:08:19,080
let's say 193.0.1.1

108
00:08:19,680 --> 00:08:22,639
then we take look at what the routes we

109
00:08:22,639 --> 00:08:24,840
have we

110
00:08:24,840 --> 00:08:28,479
only discarded the one big that is more

111
00:08:28,479 --> 00:08:30,400
specific but we still have they'll still

112
00:08:30,400 --> 00:08:31,680
have the one

113
00:08:31,680 --> 00:08:34,880
that goes to the ripe ncc we forward we

114
00:08:34,880 --> 00:08:37,679
send that packet to the one the next hop

115
00:08:37,679 --> 00:08:39,599
so sure

116
00:08:39,599 --> 00:08:42,159
and surfed and says hey i know a more

117
00:08:42,159 --> 00:08:44,880
specific route and i know so i know a

118
00:08:44,880 --> 00:08:46,320
more specific destination let's just

119
00:08:46,320 --> 00:08:48,160
send it to weaver anyway

120
00:08:48,160 --> 00:08:50,800
so even though i do or the university of

121
00:08:50,800 --> 00:08:53,519
twente does rpi rov that doesn't really

122
00:08:53,519 --> 00:08:56,240
mean that my packet then ends up at the

123
00:08:56,240 --> 00:08:57,839
what is considered valid according to

124
00:08:57,839 --> 00:09:00,320
the rpei

125
00:09:00,320 --> 00:09:02,640
the inverse is also true if surf were to

126
00:09:02,640 --> 00:09:05,680
do rpi rov and university 20 wouldn't do

127
00:09:05,680 --> 00:09:08,399
rpi or rov and it would receive the same

128
00:09:08,399 --> 00:09:11,600
somehow would also receive the slash 24.

129
00:09:11,600 --> 00:09:14,399
then even though it would uh the

130
00:09:14,399 --> 00:09:15,760
university of fentanyl would consider

131
00:09:15,760 --> 00:09:17,440
that route then it would end up with

132
00:09:17,440 --> 00:09:18,959
servant serves as yeah but that's no

133
00:09:18,959 --> 00:09:20,720
that's invalid so i'm going to send it

134
00:09:20,720 --> 00:09:22,399
to the right ncc anyway

135
00:09:22,399 --> 00:09:24,000
so then it does end up in the right

136
00:09:24,000 --> 00:09:27,279
place even though they don't do rov

137
00:09:27,279 --> 00:09:29,760
so um

138
00:09:29,760 --> 00:09:31,839
this is what we wanted to look into

139
00:09:31,839 --> 00:09:33,680
basically does this actually happen in

140
00:09:33,680 --> 00:09:37,839
real life and what's the impact

141
00:09:38,000 --> 00:09:39,519
so

142
00:09:39,519 --> 00:09:41,440
quickly about the experiment that we set

143
00:09:41,440 --> 00:09:42,320
up

144
00:09:42,320 --> 00:09:44,160
for the experiment we have one as that

145
00:09:44,160 --> 00:09:46,240
is as211321

146
00:09:46,240 --> 00:09:48,320
that's to an as used by an outlet labs

147
00:09:48,320 --> 00:09:51,279
that i was able to borrow

148
00:09:51,279 --> 00:09:53,279
we have two servers actually uh one of

149
00:09:53,279 --> 00:09:55,600
them is that kohler clue in amsterdam

150
00:09:55,600 --> 00:09:57,440
uh koduku is

151
00:09:57,440 --> 00:09:59,360
reasonably rather well connected

152
00:09:59,360 --> 00:10:00,640
actually it has a lot of beer and

153
00:10:00,640 --> 00:10:03,120
appears quite a few

154
00:10:03,120 --> 00:10:05,600
tier one upstreams and one ad filter in

155
00:10:05,600 --> 00:10:07,440
sydney which is also reasonably well

156
00:10:07,440 --> 00:10:09,680
connected uh not as well connected skoda

157
00:10:09,680 --> 00:10:11,279
clue but still

158
00:10:11,279 --> 00:10:13,600
it's it's not invisible to the outside

159
00:10:13,600 --> 00:10:14,800
world

160
00:10:14,800 --> 00:10:17,360
um we are announcing some prefixes

161
00:10:17,360 --> 00:10:19,680
namely t2a04

162
00:10:19,680 --> 00:10:21,360
b905

163
00:10:21,360 --> 00:10:24,000
42 we have also arrow for that that has

164
00:10:24,000 --> 00:10:26,720
a max length of also 32

165
00:10:26,720 --> 00:10:28,959
um for this as so

166
00:10:28,959 --> 00:10:30,800
that one is valid we announced that one

167
00:10:30,800 --> 00:10:32,480
from vulture that's what the blue

168
00:10:32,480 --> 00:10:34,959
triangle means um

169
00:10:34,959 --> 00:10:38,000
we also announced two a04 p905 as a

170
00:10:38,000 --> 00:10:40,560
slash 43 so that one is invalid

171
00:10:40,560 --> 00:10:43,200
according to the rows that we have

172
00:10:43,200 --> 00:10:45,600
but it is more specific so if you look

173
00:10:45,600 --> 00:10:47,279
at just bgp then it would be more

174
00:10:47,279 --> 00:10:49,360
specific so we choose that but if you do

175
00:10:49,360 --> 00:10:51,360
rpki rov then

176
00:10:51,360 --> 00:10:53,279
you consider it invalid so you choose

177
00:10:53,279 --> 00:10:55,120
this slash ready too

178
00:10:55,120 --> 00:10:58,320
and then to check whether you do rpi rov

179
00:10:58,320 --> 00:11:01,519
we have a slash 48 that is has an as0

180
00:11:01,519 --> 00:11:04,160
row associated to with it so

181
00:11:04,160 --> 00:11:05,040
um

182
00:11:05,040 --> 00:11:07,200
if you don't do rpg rov then you

183
00:11:07,200 --> 00:11:08,720
wouldn't even send your traffic to your

184
00:11:08,720 --> 00:11:10,480
upstream unless you use something like

185
00:11:10,480 --> 00:11:13,040
default route

186
00:11:13,040 --> 00:11:15,279
you basically you would just discard the

187
00:11:15,279 --> 00:11:17,040
packet because you have no

188
00:11:17,040 --> 00:11:20,000
routes available for that prefix and if

189
00:11:20,000 --> 00:11:22,000
you don't do rpi or v you send it up to

190
00:11:22,000 --> 00:11:23,440
your upstream

191
00:11:23,440 --> 00:11:25,839
um all these ip addresses also have

192
00:11:25,839 --> 00:11:28,160
their ipv4 equivalents namely in two or

193
00:11:28,160 --> 00:11:30,000
three one one nines

194
00:11:30,000 --> 00:11:31,600
22

195
00:11:31,600 --> 00:11:34,399
23 and the others below there but for

196
00:11:34,399 --> 00:11:36,160
convenience sake i will just keep

197
00:11:36,160 --> 00:11:37,920
talking about the ip6 ones because

198
00:11:37,920 --> 00:11:40,839
otherwise this becomes a very

199
00:11:40,839 --> 00:11:43,600
convoluted uh talk

200
00:11:43,600 --> 00:11:45,279
so

201
00:11:45,279 --> 00:11:48,160
what we did we set up a free rpgi

202
00:11:48,160 --> 00:11:51,440
publication points um

203
00:11:51,440 --> 00:11:54,800
we have parents.rv.now

204
00:11:54,800 --> 00:12:00,480
which is uh hosted on 2804 b905 8001

205
00:12:00,480 --> 00:12:03,120
so um this is

206
00:12:03,120 --> 00:12:06,079
inside the slash 42 announcement but

207
00:12:06,079 --> 00:12:08,800
outside the slash 43 announcement

208
00:12:08,800 --> 00:12:11,440
so this always ends up at vulture in

209
00:12:11,440 --> 00:12:13,600
australia it because that's the only

210
00:12:13,600 --> 00:12:15,360
route you could possibly take because

211
00:12:15,360 --> 00:12:17,279
that's the only place it's enhanced

212
00:12:17,279 --> 00:12:18,839
then we have

213
00:12:18,839 --> 00:12:21,440
child.rov.com.l this is at

214
00:12:21,440 --> 00:12:22,839
2804

215
00:12:22,839 --> 00:12:24,880
b905 2

216
00:12:24,880 --> 00:12:26,000
which

217
00:12:26,000 --> 00:12:28,800
is actually

218
00:12:28,959 --> 00:12:34,160
inside the slash 32 and in slides 43

219
00:12:34,959 --> 00:12:37,920
so depending on whether you do rpki rv

220
00:12:37,920 --> 00:12:39,600
and your upstream where your upstream

221
00:12:39,600 --> 00:12:42,160
send your packet sku this ends up at

222
00:12:42,160 --> 00:12:44,959
either goloklu in amsterdam or in filter

223
00:12:44,959 --> 00:12:46,639
in australia

224
00:12:46,639 --> 00:12:47,680
um

225
00:12:47,680 --> 00:12:50,160
and then we have invalid.rov.gov

226
00:12:50,160 --> 00:12:52,320
now which is at the invalid prefix so if

227
00:12:52,320 --> 00:12:55,680
you hit this then you are likely not go

228
00:12:55,680 --> 00:12:59,760
if you're likely not doing rpg rv

229
00:12:59,760 --> 00:13:00,480
so

230
00:13:00,480 --> 00:13:02,720
um

231
00:13:02,720 --> 00:13:04,839
yes that's what i said so

232
00:13:04,839 --> 00:13:08,320
um quick intermittent about why rpki

233
00:13:08,320 --> 00:13:10,240
publication points because well every

234
00:13:10,240 --> 00:13:11,519
measurement that you do on the internet

235
00:13:11,519 --> 00:13:13,279
has a bias

236
00:13:13,279 --> 00:13:14,880
we wanted to look at

237
00:13:14,880 --> 00:13:15,839
uh

238
00:13:15,839 --> 00:13:18,240
networks that were more likely to do rov

239
00:13:18,240 --> 00:13:21,120
than the average uh

240
00:13:21,120 --> 00:13:23,279
rpki publication points also again

241
00:13:23,279 --> 00:13:25,120
because validators

242
00:13:25,120 --> 00:13:27,519
look loads of data at least once an hour

243
00:13:27,519 --> 00:13:29,360
they generate a nice steady stream of

244
00:13:29,360 --> 00:13:30,639
traffic

245
00:13:30,639 --> 00:13:33,680
uh so this was we thought hey this might

246
00:13:33,680 --> 00:13:35,440
be a good way to to actually measure

247
00:13:35,440 --> 00:13:37,600
this or at least get a feeling for this

248
00:13:37,600 --> 00:13:39,360
but uh mind you this doesn't say

249
00:13:39,360 --> 00:13:40,959
something about the world wide web of

250
00:13:40,959 --> 00:13:42,240
course because

251
00:13:42,240 --> 00:13:44,480
most people or most organizations are

252
00:13:44,480 --> 00:13:47,360
still not doing rpi rov

253
00:13:47,360 --> 00:13:48,639
um

254
00:13:48,639 --> 00:13:50,880
and the artists are and

255
00:13:50,880 --> 00:13:53,199
most that don't do rov also don't run a

256
00:13:53,199 --> 00:13:54,720
validator because you don't run a

257
00:13:54,720 --> 00:13:56,240
validator for fun

258
00:13:56,240 --> 00:13:58,480
or at least not not not most people i

259
00:13:58,480 --> 00:13:59,199
know

260
00:13:59,199 --> 00:14:01,439
um

261
00:14:01,680 --> 00:14:03,440
so this is actually the slide that most

262
00:14:03,440 --> 00:14:05,680
people um

263
00:14:05,680 --> 00:14:08,000
are waiting for this is the the results

264
00:14:08,000 --> 00:14:10,399
um this is a small table

265
00:14:10,399 --> 00:14:11,519
um

266
00:14:11,519 --> 00:14:13,519
the

267
00:14:13,519 --> 00:14:15,440
value at the top right is actually the

268
00:14:15,440 --> 00:14:17,279
value that you would most likely expect

269
00:14:17,279 --> 00:14:20,300
namely the the

270
00:14:20,300 --> 00:14:21,440
[Music]

271
00:14:21,440 --> 00:14:24,720
amount of unique ip addresses that

272
00:14:24,720 --> 00:14:28,040
drop invalid so didn't manage to reach

273
00:14:28,040 --> 00:14:31,279
invalid.rov.com now and ended up at a

274
00:14:31,279 --> 00:14:33,120
filter in sydney so at the vetted

275
00:14:33,120 --> 00:14:34,160
location

276
00:14:34,160 --> 00:14:35,760
however as you can also see there is in

277
00:14:35,760 --> 00:14:38,639
the top left um

278
00:14:38,639 --> 00:14:41,040
also quite quite a few that

279
00:14:41,040 --> 00:14:43,199
even though they did drop in valids they

280
00:14:43,199 --> 00:14:45,839
still ended up at what would

281
00:14:45,839 --> 00:14:48,399
i would say is the wrong location or the

282
00:14:48,399 --> 00:14:50,560
unintended location if you look at from

283
00:14:50,560 --> 00:14:52,399
the um

284
00:14:52,399 --> 00:14:55,519
rpgi perspective

285
00:14:55,680 --> 00:14:57,040
so that's the

286
00:14:57,040 --> 00:14:58,399
category that

287
00:14:58,399 --> 00:15:00,399
well i mean didn't

288
00:15:00,399 --> 00:15:02,800
even though they did rpki rv their

289
00:15:02,800 --> 00:15:05,120
upstream send their packets to the to a

290
00:15:05,120 --> 00:15:07,279
location that they thought hey we know

291
00:15:07,279 --> 00:15:09,360
something more specific and then

292
00:15:09,360 --> 00:15:12,480
it was not the place where the uh

293
00:15:12,480 --> 00:15:15,279
originator expected that to go however

294
00:15:15,279 --> 00:15:17,440
we we also see the inverse because for

295
00:15:17,440 --> 00:15:19,519
the all those that don't drop in valid

296
00:15:19,519 --> 00:15:20,639
quite a large

297
00:15:20,639 --> 00:15:23,360
large fortune is actually

298
00:15:23,360 --> 00:15:26,639
secured or secured

299
00:15:26,720 --> 00:15:28,399
does go to the intended location

300
00:15:28,399 --> 00:15:30,480
according to the rpki merely because

301
00:15:30,480 --> 00:15:32,480
their upstreams do

302
00:15:32,480 --> 00:15:35,279
so this is quite an um interesting

303
00:15:35,279 --> 00:15:36,320
uh

304
00:15:36,320 --> 00:15:39,360
it was quite an interesting first

305
00:15:39,360 --> 00:15:41,040
to see this especially this this bottom

306
00:15:41,040 --> 00:15:42,639
one because

307
00:15:42,639 --> 00:15:43,440
uh

308
00:15:43,440 --> 00:15:45,519
i please didn't expect this i didn't

309
00:15:45,519 --> 00:15:47,040
expect that this would have such an

310
00:15:47,040 --> 00:15:50,560
impact but uh luckily it does so

311
00:15:50,560 --> 00:15:52,800
i would say that

312
00:15:52,800 --> 00:15:54,079
i'm not going to say whether this is a

313
00:15:54,079 --> 00:15:56,079
positive message or a negative message

314
00:15:56,079 --> 00:15:58,800
that's something that you may decide but

315
00:15:58,800 --> 00:16:02,160
um it's quite interesting to see evan

316
00:16:02,160 --> 00:16:03,839
um

317
00:16:03,839 --> 00:16:05,920
so during this measurements we

318
00:16:05,920 --> 00:16:09,279
we ran into some challenges um

319
00:16:09,279 --> 00:16:10,800
the first challenge is actually quite

320
00:16:10,800 --> 00:16:14,320
simple uh at first 99 of traffic that

321
00:16:14,320 --> 00:16:16,000
went to kodaklu

322
00:16:16,000 --> 00:16:18,160
and now that was a bit

323
00:16:18,160 --> 00:16:19,759
that seemed a bit strange because why

324
00:16:19,759 --> 00:16:21,920
would all traffic go to coda glue i mean

325
00:16:21,920 --> 00:16:24,000
some at least some people will do rpki

326
00:16:24,000 --> 00:16:26,480
or v and dropping values right well i

327
00:16:26,480 --> 00:16:28,800
mean vulture didn't do rov

328
00:16:28,800 --> 00:16:31,440
we knew that but um

329
00:16:31,440 --> 00:16:33,279
they would apparently if their traffic

330
00:16:33,279 --> 00:16:34,959
reached their edge they would say think

331
00:16:34,959 --> 00:16:37,199
hey i know a more specific route

332
00:16:37,199 --> 00:16:38,320
so

333
00:16:38,320 --> 00:16:39,839
they would redirect it to another tier

334
00:16:39,839 --> 00:16:41,519
one and then it would make a loop around

335
00:16:41,519 --> 00:16:43,360
the world and end up in amsterdam i've

336
00:16:43,360 --> 00:16:45,519
seen trace routes where

337
00:16:45,519 --> 00:16:47,759
the packet starts in amsterdam goes

338
00:16:47,759 --> 00:16:49,519
around the world reaches

339
00:16:49,519 --> 00:16:51,360
australia and then goes around the other

340
00:16:51,360 --> 00:16:52,959
side of the world again so if you need

341
00:16:52,959 --> 00:16:55,600
the b2b scenic routing then this is a

342
00:16:55,600 --> 00:16:58,240
way to do it um not really efficient and

343
00:16:58,240 --> 00:16:59,839
also uh

344
00:16:59,839 --> 00:17:02,000
well problematics for what we wanted to

345
00:17:02,000 --> 00:17:05,199
test uh we managed to solve this by

346
00:17:05,199 --> 00:17:07,119
announcing a more the more specific

347
00:17:07,119 --> 00:17:09,599
filter as well and then

348
00:17:09,599 --> 00:17:12,000
adding a bgp community so it doesn't

349
00:17:12,000 --> 00:17:13,919
export outside the filter which is a bit

350
00:17:13,919 --> 00:17:16,240
of an ugly hack but it works and was for

351
00:17:16,240 --> 00:17:18,480
our measurements uh good enough

352
00:17:18,480 --> 00:17:19,919
however if you don't do this which most

353
00:17:19,919 --> 00:17:22,640
people won't then even though that you

354
00:17:22,640 --> 00:17:24,400
might do rpg rov if you announce

355
00:17:24,400 --> 00:17:25,280
something

356
00:17:25,280 --> 00:17:27,199
at filtering someone else on the world

357
00:17:27,199 --> 00:17:28,640
announces more something more specific

358
00:17:28,640 --> 00:17:32,400
then all that traffic will go away and

359
00:17:32,400 --> 00:17:34,640
yeah something to think about

360
00:17:34,640 --> 00:17:36,160
um

361
00:17:36,160 --> 00:17:37,679
another thing which

362
00:17:37,679 --> 00:17:40,559
because ipv4 is difficult to get

363
00:17:40,559 --> 00:17:42,799
nowadays because it has run out for the

364
00:17:42,799 --> 00:17:45,760
last five years or so

365
00:17:45,760 --> 00:17:48,960
we initially ran everything on ipv6

366
00:17:48,960 --> 00:17:51,360
and i physics only which we thought okay

367
00:17:51,360 --> 00:17:53,679
networks that do ipv6 run a validator

368
00:17:53,679 --> 00:17:55,120
that's on an

369
00:17:55,120 --> 00:17:57,760
online machine that also white ip6 right

370
00:17:57,760 --> 00:18:00,640
well the answer to that is um sometimes

371
00:18:00,640 --> 00:18:03,600
yes but often also no so we would see

372
00:18:03,600 --> 00:18:04,480
that

373
00:18:04,480 --> 00:18:05,360
hey

374
00:18:05,360 --> 00:18:07,280
why don't you understand what our route

375
00:18:07,280 --> 00:18:10,000
is hey um

376
00:18:10,000 --> 00:18:13,360
we we i i think why don't you under

377
00:18:13,360 --> 00:18:15,919
oh wait we you don't do ipv6 on your

378
00:18:15,919 --> 00:18:17,039
validator even though your network

379
00:18:17,039 --> 00:18:18,799
support ip6

380
00:18:18,799 --> 00:18:20,080
uh and

381
00:18:20,080 --> 00:18:22,160
interestingly enough sometimes networks

382
00:18:22,160 --> 00:18:24,160
had multiple validators running and some

383
00:18:24,160 --> 00:18:25,120
of them

384
00:18:25,120 --> 00:18:27,600
on machines some where some machines

385
00:18:27,600 --> 00:18:30,799
supports ipv4 only and some also support

386
00:18:30,799 --> 00:18:32,960
ipv6 so that that triggered internal

387
00:18:32,960 --> 00:18:33,919
alerts

388
00:18:33,919 --> 00:18:36,799
a little awful lot of fun basically um

389
00:18:36,799 --> 00:18:38,640
message being that either

390
00:18:38,640 --> 00:18:40,559
run make sure that your publication

391
00:18:40,559 --> 00:18:43,919
point is a is available on both ip4 and

392
00:18:43,919 --> 00:18:47,200
ip6 are just basically many

393
00:18:47,200 --> 00:18:49,679
we or we need to get into a world where

394
00:18:49,679 --> 00:18:51,679
running ip6 only is actually feasible

395
00:18:51,679 --> 00:18:53,679
which i mean i would love to see but

396
00:18:53,679 --> 00:18:54,640
that's

397
00:18:54,640 --> 00:18:56,400
i'm afraid probably not going to be

398
00:18:56,400 --> 00:18:58,880
realistic

399
00:18:59,440 --> 00:19:01,919
so yeah that's um

400
00:19:01,919 --> 00:19:04,880
it basically for me we we've seen that

401
00:19:04,880 --> 00:19:07,039
merely doing rov and dropping effects

402
00:19:07,039 --> 00:19:08,480
does not necessarily mean that your

403
00:19:08,480 --> 00:19:10,400
traffic goes to the intended location we

404
00:19:10,400 --> 00:19:11,760
knew that from a theoretical point of

405
00:19:11,760 --> 00:19:13,360
view but we now also just did it in the

406
00:19:13,360 --> 00:19:15,760
wild and we've seen the same behavior

407
00:19:15,760 --> 00:19:17,679
and also um the more varied your

408
00:19:17,679 --> 00:19:19,120
upstreams are the more important doing

409
00:19:19,120 --> 00:19:21,600
rov is because what we've seen in our

410
00:19:21,600 --> 00:19:24,480
case where vulture was our only upstream

411
00:19:24,480 --> 00:19:26,640
and vulture made sure that we didn't

412
00:19:26,640 --> 00:19:29,200
receive any rf traffic

413
00:19:29,200 --> 00:19:31,679
like likewise if for the university of

414
00:19:31,679 --> 00:19:33,520
twente because the university of tenta

415
00:19:33,520 --> 00:19:35,360
also has one upstream

416
00:19:35,360 --> 00:19:36,960
the whether the university of trenton

417
00:19:36,960 --> 00:19:38,400
does rov or not

418
00:19:38,400 --> 00:19:40,799
has a very limited impact on where

419
00:19:40,799 --> 00:19:42,640
traffic actually goes

420
00:19:42,640 --> 00:19:45,039
um if you're interested in a live map of

421
00:19:45,039 --> 00:19:47,600
seeing data coming in to our

422
00:19:47,600 --> 00:19:50,400
rpki publication points and also where

423
00:19:50,400 --> 00:19:51,200
your

424
00:19:51,200 --> 00:19:53,120
network that you're on

425
00:19:53,120 --> 00:19:55,039
actually takes you to then you can do so

426
00:19:55,039 --> 00:19:57,600
by visiting our video

427
00:19:57,600 --> 00:19:58,400
um

428
00:19:58,400 --> 00:20:00,400
if you were more interested in reading

429
00:20:00,400 --> 00:20:02,400
an article about this than hearing me

430
00:20:02,400 --> 00:20:04,559
talk about it's available on gripe labs

431
00:20:04,559 --> 00:20:08,080
on that url or just google it um

432
00:20:08,080 --> 00:20:09,440
and lastly i want to thank the people at

433
00:20:09,440 --> 00:20:11,039
another labs and the writebnc for

434
00:20:11,039 --> 00:20:12,640
letting me do b2b things with their

435
00:20:12,640 --> 00:20:15,280
resources which um luckily nothing went

436
00:20:15,280 --> 00:20:16,480
wrong otherwise they would have taken

437
00:20:16,480 --> 00:20:18,320
the blame

438
00:20:18,320 --> 00:20:20,960
so that's it for me um i'd like to open

439
00:20:20,960 --> 00:20:23,280
the floor for questions or

440
00:20:23,280 --> 00:20:27,360
um comments if there's time for this

441
00:20:27,600 --> 00:20:29,280
yep we have a few minutes for questions

442
00:20:29,280 --> 00:20:31,440
if there is anyone either

443
00:20:31,440 --> 00:20:35,159
in the room or online

444
00:20:40,720 --> 00:20:43,039
going once

445
00:20:43,039 --> 00:20:45,679
going twice

446
00:20:45,679 --> 00:20:48,159
don't see any questions but people can

447
00:20:48,159 --> 00:20:49,840
also obviously you know email the

448
00:20:49,840 --> 00:20:51,440
presenters directly

449
00:20:51,440 --> 00:20:53,039
or

450
00:20:53,039 --> 00:20:54,159
excellent

451
00:20:54,159 --> 00:20:57,360
so thank you very much and now i think

452
00:20:57,360 --> 00:21:01,039
we will do the dane portal

453
00:21:01,039 --> 00:21:02,960
presentation which i believe you will be

454
00:21:02,960 --> 00:21:05,440
presenting from your own laptop

455
00:21:05,440 --> 00:21:07,039
excellent

456
00:21:07,039 --> 00:21:08,960
so

457
00:21:08,960 --> 00:21:10,799
uh yep you can

458
00:21:10,799 --> 00:21:12,720
you can as long as you don't mind

459
00:21:12,720 --> 00:21:14,880
turning around and clicking the button

460
00:21:14,880 --> 00:21:17,200
or if you put on that end of the table

461
00:21:17,200 --> 00:21:18,960
we can shift it down

462
00:21:18,960 --> 00:21:20,559
and you can stand there and you can face

463
00:21:20,559 --> 00:21:23,039
the audience

464
00:21:24,480 --> 00:21:27,520
testing one two three

465
00:21:27,520 --> 00:21:28,960
we can actually keep that one too just

466
00:21:28,960 --> 00:21:31,840
have the notes on the side

467
00:21:32,080 --> 00:21:33,919
thank you guys for the accommodations

468
00:21:33,919 --> 00:21:36,400
don't worry

469
00:21:37,840 --> 00:21:38,799
and then

470
00:21:38,799 --> 00:21:41,039
you click the ask to share button and

471
00:21:41,039 --> 00:21:43,679
somebody will pick

472
00:21:43,679 --> 00:21:46,640
to share screen

473
00:21:49,200 --> 00:21:52,400
yes i want to share my screen

474
00:21:52,400 --> 00:21:55,520
entire screen indeed

475
00:21:55,520 --> 00:21:58,559
oh there's the mirror

476
00:21:58,960 --> 00:22:01,200
echoes all right

477
00:22:01,200 --> 00:22:03,440
just make wanna make sure remote people

478
00:22:03,440 --> 00:22:06,880
can see this and it all looks okay

479
00:22:06,880 --> 00:22:09,200
i will assume so

480
00:22:09,200 --> 00:22:11,679
already take it away

481
00:22:11,679 --> 00:22:13,440
all right

482
00:22:13,440 --> 00:22:15,039
hello everyone and thanks for having me

483
00:22:15,039 --> 00:22:17,280
um i'm nina and we've got some guys here

484
00:22:17,280 --> 00:22:19,440
pavon we have some of you over there i'm

485
00:22:19,440 --> 00:22:21,840
sure you know um we're

486
00:22:21,840 --> 00:22:23,120
graduate students at george mason

487
00:22:23,120 --> 00:22:25,520
university and we've um

488
00:22:25,520 --> 00:22:27,840
working with the modular security lab

489
00:22:27,840 --> 00:22:29,520
and really we want to show off some of

490
00:22:29,520 --> 00:22:31,760
the cool tools we've been working on uh

491
00:22:31,760 --> 00:22:33,440
in the subject of game protocols really

492
00:22:33,440 --> 00:22:35,840
bringing them to life to power s mine

493
00:22:35,840 --> 00:22:38,400
specifically but first let's uh

494
00:22:38,400 --> 00:22:42,480
jump into a little bit of setup

495
00:22:42,720 --> 00:22:46,240
so dain is a powerful protocol suite

496
00:22:46,240 --> 00:22:49,919
are we good to go all right cool

497
00:22:51,440 --> 00:22:55,159
in front of my face gotcha

498
00:22:56,080 --> 00:22:57,120
good note

499
00:22:57,120 --> 00:22:59,120
all right let me try to be a little more

500
00:22:59,120 --> 00:23:00,960
50 cent here um

501
00:23:00,960 --> 00:23:02,480
dane is a powerful protocol sweet it

502
00:23:02,480 --> 00:23:04,159
really makes doing security and privacy

503
00:23:04,159 --> 00:23:06,000
easier right but what can we do to make

504
00:23:06,000 --> 00:23:08,000
gain easier that's kind of the question

505
00:23:08,000 --> 00:23:10,960
that inspires us

506
00:23:11,520 --> 00:23:12,240
so

507
00:23:12,240 --> 00:23:14,080
for the everyday person why can't we

508
00:23:14,080 --> 00:23:15,840
simply turn on secure messaging on the

509
00:23:15,840 --> 00:23:17,840
internet now i know what you're thinking

510
00:23:17,840 --> 00:23:19,840
hey we could do messaging on certain

511
00:23:19,840 --> 00:23:21,360
platforms and apps right we got you know

512
00:23:21,360 --> 00:23:23,520
whatsapp signal uh we got like our

513
00:23:23,520 --> 00:23:25,120
organizational pki we can you know do

514
00:23:25,120 --> 00:23:27,840
email really easily um but

515
00:23:27,840 --> 00:23:29,760
should we really be limited

516
00:23:29,760 --> 00:23:32,720
on the internet for you know

517
00:23:32,720 --> 00:23:34,960
proprietary platforms and that kind of

518
00:23:34,960 --> 00:23:37,039
pki boundaries right

519
00:23:37,039 --> 00:23:38,960
and what about usability

520
00:23:38,960 --> 00:23:40,960
to get to that next stage we kind of

521
00:23:40,960 --> 00:23:42,480
want to be sure that everyday users and

522
00:23:42,480 --> 00:23:44,559
operators that make the gear spin are

523
00:23:44,559 --> 00:23:46,159
not burdened by the overhead of having

524
00:23:46,159 --> 00:23:47,840
to manage

525
00:23:47,840 --> 00:23:50,480
doing uh you know secure messaging

526
00:23:50,480 --> 00:23:53,120
secure object sharing and whatnot

527
00:23:53,120 --> 00:23:55,919
so the idea is like what https did for

528
00:23:55,919 --> 00:23:58,320
transfer security we want any entity to

529
00:23:58,320 --> 00:24:00,640
be able to transact end to end secured

530
00:24:00,640 --> 00:24:02,640
with secured objects with any others

531
00:24:02,640 --> 00:24:04,960
over the internet right on like a wide

532
00:24:04,960 --> 00:24:05,919
scale

533
00:24:05,919 --> 00:24:07,520
and this is for all sorts of use cases

534
00:24:07,520 --> 00:24:09,360
so that's why we're launching this basic

535
00:24:09,360 --> 00:24:11,600
research into how dane can unlock these

536
00:24:11,600 --> 00:24:14,000
long needed protections for those uses

537
00:24:14,000 --> 00:24:17,120
it's like mhl smart connected cities cti

538
00:24:17,120 --> 00:24:18,720
sharing something i'm currently working

539
00:24:18,720 --> 00:24:20,960
on personally and then we got 5g next

540
00:24:20,960 --> 00:24:23,120
year all these hot topics dain can

541
00:24:23,120 --> 00:24:24,559
really bring that to the next level for

542
00:24:24,559 --> 00:24:28,240
those protections across the internet

543
00:24:29,120 --> 00:24:30,799
so

544
00:24:30,799 --> 00:24:33,520
let's start by securing one of those

545
00:24:33,520 --> 00:24:36,400
basic protocols right if we can work

546
00:24:36,400 --> 00:24:37,520
with the model t we can work with the

547
00:24:37,520 --> 00:24:38,880
tesla what's something that everybody

548
00:24:38,880 --> 00:24:40,720
uses email

549
00:24:40,720 --> 00:24:41,600
and

550
00:24:41,600 --> 00:24:42,799
what is this going to allow us to do

551
00:24:42,799 --> 00:24:44,159
it's going to let us find out exactly

552
00:24:44,159 --> 00:24:46,159
what people need to make end-to-end

553
00:24:46,159 --> 00:24:48,240
internet security seamless and turn on

554
00:24:48,240 --> 00:24:49,200
everywhere

555
00:24:49,200 --> 00:24:50,720
and the catch phrase here is kind of to

556
00:24:50,720 --> 00:24:53,440
make it invisible

557
00:24:53,840 --> 00:24:56,799
so for that we need to make usable tools

558
00:24:56,799 --> 00:24:57,760
right

559
00:24:57,760 --> 00:25:00,000
making it easy well securing email with

560
00:25:00,000 --> 00:25:02,080
dain if that's our use case

561
00:25:02,080 --> 00:25:04,000
we need the tools we need kind of two

562
00:25:04,000 --> 00:25:05,440
sides of the equation here we need to be

563
00:25:05,440 --> 00:25:07,520
able to set up dane right it requires

564
00:25:07,520 --> 00:25:09,440
some level of work from domain holders

565
00:25:09,440 --> 00:25:11,520
on dns and

566
00:25:11,520 --> 00:25:12,559
you know we want to make that easy for

567
00:25:12,559 --> 00:25:14,080
them and we also want to use the search

568
00:25:14,080 --> 00:25:16,000
from dane on the user side on the

569
00:25:16,000 --> 00:25:17,840
clients and the muas that the users will

570
00:25:17,840 --> 00:25:20,960
use so that's a lot of uses um

571
00:25:20,960 --> 00:25:23,279
they'll be able to do email easily with

572
00:25:23,279 --> 00:25:25,360
the tools that we made to really show

573
00:25:25,360 --> 00:25:27,279
that off so

574
00:25:27,279 --> 00:25:28,880
for the first one we made the certain

575
00:25:28,880 --> 00:25:31,520
management portal dameportal.net

576
00:25:31,520 --> 00:25:34,080
and then we made the mua add-on called

577
00:25:34,080 --> 00:25:35,840
courier so some fancy names there we'll

578
00:25:35,840 --> 00:25:38,639
show them off don't worry

579
00:25:40,400 --> 00:25:42,640
and really the goal here

580
00:25:42,640 --> 00:25:44,400
a little too hard the goal here is to

581
00:25:44,400 --> 00:25:46,240
find out what people need to make into a

582
00:25:46,240 --> 00:25:48,720
security default as i said

583
00:25:48,720 --> 00:25:50,480
we do know one thing for sure one thing

584
00:25:50,480 --> 00:25:52,000
that people definitely need is uh key

585
00:25:52,000 --> 00:25:54,240
management right insert discovery and we

586
00:25:54,240 --> 00:25:55,679
got a lot of solutions for those but you

587
00:25:55,679 --> 00:25:57,440
know as i kind of implied dane is kind

588
00:25:57,440 --> 00:25:59,200
of an excellent answer right

589
00:25:59,200 --> 00:26:00,559
and we just need to make use the tools

590
00:26:00,559 --> 00:26:02,400
to make it easy

591
00:26:02,400 --> 00:26:04,080
gameportal.net okay i'm accidentally

592
00:26:04,080 --> 00:26:06,080
clicking on the thing here sorry um it's

593
00:26:06,080 --> 00:26:07,840
an open source federated cert management

594
00:26:07,840 --> 00:26:09,039
system and i'll show you what that means

595
00:26:09,039 --> 00:26:11,360
uh and a dedicated dns infrastructure as

596
00:26:11,360 --> 00:26:12,080
well

597
00:26:12,080 --> 00:26:14,320
to make dain easy right and literally

598
00:26:14,320 --> 00:26:16,320
the way it works is domain holders will

599
00:26:16,320 --> 00:26:18,640
enable dane for their dns section zone

600
00:26:18,640 --> 00:26:20,640
and the email users will simply manage

601
00:26:20,640 --> 00:26:22,400
their certs in like a delegated manner

602
00:26:22,400 --> 00:26:24,080
for specifically the emails they are

603
00:26:24,080 --> 00:26:26,000
given control over to the degree that

604
00:26:26,000 --> 00:26:29,120
makes sense for the organization

605
00:26:29,200 --> 00:26:30,080
so

606
00:26:30,080 --> 00:26:31,360
let's go ahead and see these are

607
00:26:31,360 --> 00:26:33,840
screenshots but we can get the idea just

608
00:26:33,840 --> 00:26:36,559
hop on gameportal.net and you can start

609
00:26:36,559 --> 00:26:38,400
to enable dain create a new user like

610
00:26:38,400 --> 00:26:39,840
you would normally imagine these online

611
00:26:39,840 --> 00:26:41,279
portals to use

612
00:26:41,279 --> 00:26:43,360
and log in and suddenly on the first

613
00:26:43,360 --> 00:26:44,640
page we'll see this

614
00:26:44,640 --> 00:26:46,480
dashboard page where

615
00:26:46,480 --> 00:26:49,279
users can

616
00:26:50,000 --> 00:26:51,919
add their see their email addresses and

617
00:26:51,919 --> 00:26:53,360
zones so this is just kind of like a

618
00:26:53,360 --> 00:26:55,760
subset of the page here but uh basically

619
00:26:55,760 --> 00:26:57,840
down over here if a new admin uh

620
00:26:57,840 --> 00:26:59,200
somebody that owns a dome the domain

621
00:26:59,200 --> 00:27:01,600
holder uri wants to enable dame for

622
00:27:01,600 --> 00:27:03,200
their zone they'll go ahead and try to

623
00:27:03,200 --> 00:27:04,159
claim it

624
00:27:04,159 --> 00:27:06,240
now here i can try to claim example.com

625
00:27:06,240 --> 00:27:07,840
even though i don't own it anybody can

626
00:27:07,840 --> 00:27:10,799
claim any zone and they will uh need to

627
00:27:10,799 --> 00:27:12,720
actually verify it obviously and the

628
00:27:12,720 --> 00:27:14,240
flow here is pretty straightforward we

629
00:27:14,240 --> 00:27:16,320
just use the acme protocol every uh to

630
00:27:16,320 --> 00:27:17,440
prove ownership they just need to add

631
00:27:17,440 --> 00:27:19,200
that txt record in their zone and have

632
00:27:19,200 --> 00:27:21,840
dnsec enabled and we'll verify that

633
00:27:21,840 --> 00:27:23,440
straight through

634
00:27:23,440 --> 00:27:24,960
and it'll uh

635
00:27:24,960 --> 00:27:26,240
we'll go ahead and try to hook it up

636
00:27:26,240 --> 00:27:28,000
basically to finish the delegation just

637
00:27:28,000 --> 00:27:30,640
like any normal dns section or uh we had

638
00:27:30,640 --> 00:27:32,159
the ns record yes record blah blah blah

639
00:27:32,159 --> 00:27:34,240
you know the stuff so this is pretty

640
00:27:34,240 --> 00:27:35,520
straightforward for uh kind of

641
00:27:35,520 --> 00:27:36,720
delegations

642
00:27:36,720 --> 00:27:38,960
now this is the interesting part so with

643
00:27:38,960 --> 00:27:41,039
dane we can do kind of the zone game

644
00:27:41,039 --> 00:27:42,880
zone management our portal will actually

645
00:27:42,880 --> 00:27:45,520
create the dame zone for you enable dane

646
00:27:45,520 --> 00:27:47,600
whereas the admins the actual domain

647
00:27:47,600 --> 00:27:48,640
holders

648
00:27:48,640 --> 00:27:51,200
have full control they retain control

649
00:27:51,200 --> 00:27:52,799
over the uh

650
00:27:52,799 --> 00:27:54,159
keys here they can

651
00:27:54,159 --> 00:27:55,760
turn it on and turn it off have it

652
00:27:55,760 --> 00:27:58,240
accessible

653
00:27:59,120 --> 00:28:00,399
and you know how do you check that it's

654
00:28:00,399 --> 00:28:02,480
actually i'm doing the same thing sorry

655
00:28:02,480 --> 00:28:04,320
how do you check that as active is well

656
00:28:04,320 --> 00:28:05,520
you use some kind of tool like sex

657
00:28:05,520 --> 00:28:07,360
spider that'll go through and make sure

658
00:28:07,360 --> 00:28:08,960
that the delegation works because dns

659
00:28:08,960 --> 00:28:11,200
sec right the sec part is to

660
00:28:11,200 --> 00:28:13,120
it's to uh you know make sure dane

661
00:28:13,120 --> 00:28:16,480
requires that basically

662
00:28:16,480 --> 00:28:18,000
now we can go ahead and add the domain

663
00:28:18,000 --> 00:28:20,960
this is the part where email users can

664
00:28:20,960 --> 00:28:22,320
be able to manage their own search now

665
00:28:22,320 --> 00:28:23,600
this is the

666
00:28:23,600 --> 00:28:25,360
part where we go ahead and let another

667
00:28:25,360 --> 00:28:27,520
user on dane portal manage their own

668
00:28:27,520 --> 00:28:29,279
search on their email address so here we

669
00:28:29,279 --> 00:28:32,559
got john doe on the picture

670
00:28:32,720 --> 00:28:35,200
and well we added him and

671
00:28:35,200 --> 00:28:36,559
you can see that

672
00:28:36,559 --> 00:28:38,000
when you go back to the dashboard you

673
00:28:38,000 --> 00:28:39,279
can go ahead and

674
00:28:39,279 --> 00:28:41,360
click through and manage his own data on

675
00:28:41,360 --> 00:28:42,799
dane portal so

676
00:28:42,799 --> 00:28:44,880
this is another screenshot showing the

677
00:28:44,880 --> 00:28:45,600
uh

678
00:28:45,600 --> 00:28:47,440
page where john joe will be able to set

679
00:28:47,440 --> 00:28:49,679
a cert so we can just add that

680
00:28:49,679 --> 00:28:52,000
add the cert on this page and over here

681
00:28:52,000 --> 00:28:53,760
is pretty interesting to note the dane

682
00:28:53,760 --> 00:28:56,159
specific protocol usage selector

683
00:28:56,159 --> 00:28:57,360
matching if anybody's familiar with

684
00:28:57,360 --> 00:28:59,440
those that's all those options are there

685
00:28:59,440 --> 00:29:00,799
the defaults are given to be the most

686
00:29:00,799 --> 00:29:02,399
permissive and the

687
00:29:02,399 --> 00:29:03,520
um

688
00:29:03,520 --> 00:29:05,600
most complete so those defaults just

689
00:29:05,600 --> 00:29:08,559
allow you to start doing uh secure email

690
00:29:08,559 --> 00:29:10,000
and once again we give the ability just

691
00:29:10,000 --> 00:29:11,520
to do a quick self sign start as well

692
00:29:11,520 --> 00:29:12,480
but you know

693
00:29:12,480 --> 00:29:14,480
that's just a standard open ssl not too

694
00:29:14,480 --> 00:29:16,080
much fanciness there we can download it

695
00:29:16,080 --> 00:29:18,640
and use that sir now john doe go ahead

696
00:29:18,640 --> 00:29:21,200
he went ahead and added his sir here and

697
00:29:21,200 --> 00:29:22,320
his

698
00:29:22,320 --> 00:29:23,919
well he could just toggle it active if

699
00:29:23,919 --> 00:29:25,360
he wants and

700
00:29:25,360 --> 00:29:27,200
he's good to go right he can start doing

701
00:29:27,200 --> 00:29:29,279
secure email just as easy as that and

702
00:29:29,279 --> 00:29:30,880
just another thing to note there where

703
00:29:30,880 --> 00:29:32,320
you know you can just toggle it on and

704
00:29:32,320 --> 00:29:33,440
off that's not really that easy in

705
00:29:33,440 --> 00:29:35,840
classic pki is it

706
00:29:35,840 --> 00:29:37,440
cool so we saw how that was making dane

707
00:29:37,440 --> 00:29:38,880
pretty easy this is a straightforward

708
00:29:38,880 --> 00:29:40,960
flow the admin added that zone and then

709
00:29:40,960 --> 00:29:42,799
the email users can in a federated

710
00:29:42,799 --> 00:29:44,480
manner manage their own search on that

711
00:29:44,480 --> 00:29:47,200
um on the dean zone so yeah feel free to

712
00:29:47,200 --> 00:29:49,440
check it out we got more links over here

713
00:29:49,440 --> 00:29:51,279
now we saw that first half so we jump

714
00:29:51,279 --> 00:29:53,840
ahead and so how users can actually have

715
00:29:53,840 --> 00:29:57,679
it auto-resolved inserts on career

716
00:29:57,679 --> 00:29:59,520
in their muas to find out what users

717
00:29:59,520 --> 00:30:00,640
need to make end-to-end security a

718
00:30:00,640 --> 00:30:01,679
default

719
00:30:01,679 --> 00:30:04,000
and really the motivation for this is

720
00:30:04,000 --> 00:30:06,000
here we don't really have wide scale ed

721
00:30:06,000 --> 00:30:08,240
security but by observing our tools and

722
00:30:08,240 --> 00:30:09,919
action we can find out what makes sense

723
00:30:09,919 --> 00:30:12,159
if we are to make ewe default so to that

724
00:30:12,159 --> 00:30:14,159
end we kind of instrumented our next

725
00:30:14,159 --> 00:30:16,480
tool as a live experiment where really

726
00:30:16,480 --> 00:30:18,799
any one of us you guys can help us get

727
00:30:18,799 --> 00:30:20,240
some real numbers on the human puzzle

728
00:30:20,240 --> 00:30:21,440
piece

729
00:30:21,440 --> 00:30:23,360
in security automation so

730
00:30:23,360 --> 00:30:25,520
just to really quickly jump in we'll

731
00:30:25,520 --> 00:30:29,760
show how easy it is with career right

732
00:30:30,720 --> 00:30:34,159
uh 10 30 you've still got 20 minutes

733
00:30:34,159 --> 00:30:35,600
okay

734
00:30:35,600 --> 00:30:37,760
alrighty in that case i'll go ahead and

735
00:30:37,760 --> 00:30:38,799
show this

736
00:30:38,799 --> 00:30:41,279
live on well first when you're trying to

737
00:30:41,279 --> 00:30:43,279
hook it up what we added assert on dane

738
00:30:43,279 --> 00:30:45,039
portal right so that means your search

739
00:30:45,039 --> 00:30:46,240
is available on dame you just need that

740
00:30:46,240 --> 00:30:47,679
private key

741
00:30:47,679 --> 00:30:50,480
installed in your mua now all muas and

742
00:30:50,480 --> 00:30:51,840
os's have their own key chains and all

743
00:30:51,840 --> 00:30:53,440
kinds of crazy stuff in order to do that

744
00:30:53,440 --> 00:30:54,960
with career is pretty straightforward

745
00:30:54,960 --> 00:30:56,640
you just put it into the settings

746
00:30:56,640 --> 00:30:58,559
and just hook it up like a normal file

747
00:30:58,559 --> 00:30:59,840
choose your key file and you're good to

748
00:30:59,840 --> 00:31:01,679
go

749
00:31:01,679 --> 00:31:03,360
now you can jump into a secure email

750
00:31:03,360 --> 00:31:04,720
conversation with a stranger so i'm

751
00:31:04,720 --> 00:31:07,279
actually show this off why not

752
00:31:07,279 --> 00:31:08,880
so in thunderbird this already has

753
00:31:08,880 --> 00:31:10,960
career installed i could you know do

754
00:31:10,960 --> 00:31:12,399
something fun just

755
00:31:12,399 --> 00:31:14,320
go ahead and write an email to pavan

756
00:31:14,320 --> 00:31:16,559
here

757
00:31:16,559 --> 00:31:17,600
and then the email could be you know

758
00:31:17,600 --> 00:31:19,600
anything our top secret

759
00:31:19,600 --> 00:31:23,039
uh communications that needs uh

760
00:31:23,039 --> 00:31:23,840
uh

761
00:31:23,840 --> 00:31:27,039
encryption and all that so

762
00:31:27,840 --> 00:31:29,919
we can you know hide whatever we want

763
00:31:29,919 --> 00:31:32,000
but the idea is that we can do full html

764
00:31:32,000 --> 00:31:33,440
email we've got the ability to add

765
00:31:33,440 --> 00:31:35,039
pictures and all sorts of emoji and

766
00:31:35,039 --> 00:31:37,519
things like that

767
00:31:37,519 --> 00:31:40,320
and uh we'll go ahead and send this

768
00:31:40,320 --> 00:31:42,879
to pavan

769
00:31:43,519 --> 00:31:45,120
and uh you can saw what i did there and

770
00:31:45,120 --> 00:31:46,960
real quick on this page you saw a little

771
00:31:46,960 --> 00:31:48,480
hint of it it went ahead and encrypted

772
00:31:48,480 --> 00:31:50,159
the email and then did something fancy

773
00:31:50,159 --> 00:31:51,279
with like an attachment and then just

774
00:31:51,279 --> 00:31:53,679
sent it natively right

775
00:31:53,679 --> 00:31:56,559
and on the other end

776
00:31:57,679 --> 00:31:59,919
well whenever it comes in there you go

777
00:31:59,919 --> 00:32:02,559
so this top secret email it comes in as

778
00:32:02,559 --> 00:32:04,320
like a with this tag that's basically

779
00:32:04,320 --> 00:32:06,399
said that it's encrypted that allows the

780
00:32:06,399 --> 00:32:08,559
outlook side for example to go ahead and

781
00:32:08,559 --> 00:32:10,559
read this and standard s mime but it's

782
00:32:10,559 --> 00:32:12,399
just doing the processing for us

783
00:32:12,399 --> 00:32:13,840
and it'll tell us that it was encrypted

784
00:32:13,840 --> 00:32:15,840
and that it was signed so both this is

785
00:32:15,840 --> 00:32:17,440
possible because both me and pavon have

786
00:32:17,440 --> 00:32:19,679
our search on dane despite us not

787
00:32:19,679 --> 00:32:21,360
sharing any keys or having it installed

788
00:32:21,360 --> 00:32:24,080
on our own operating systems or clients

789
00:32:24,080 --> 00:32:25,279
dane allows us to do this very

790
00:32:25,279 --> 00:32:27,519
seamlessly right now i can seamlessly

791
00:32:27,519 --> 00:32:29,600
reply as well

792
00:32:29,600 --> 00:32:32,240
and you know i could

793
00:32:32,240 --> 00:32:35,039
say something like this thanks

794
00:32:35,039 --> 00:32:37,200
and pavan uh could have that and you can

795
00:32:37,200 --> 00:32:38,799
see on this view like we're conveniently

796
00:32:38,799 --> 00:32:40,880
given the decrypted email

797
00:32:40,880 --> 00:32:43,360
just as a reference and to be able to

798
00:32:43,360 --> 00:32:44,240
send

799
00:32:44,240 --> 00:32:46,240
and for uh specifically on the outlook

800
00:32:46,240 --> 00:32:47,120
side

801
00:32:47,120 --> 00:32:49,280
all you gotta do is to toggle on these

802
00:32:49,280 --> 00:32:52,369
[Music]

803
00:32:52,399 --> 00:32:53,760
and then you can toggle on signing as

804
00:32:53,760 --> 00:32:55,679
well

805
00:32:55,679 --> 00:32:57,760
and you're good to go

806
00:32:57,760 --> 00:32:59,360
it'll send it signed and encrypted in

807
00:32:59,360 --> 00:33:00,880
the conversation view

808
00:33:00,880 --> 00:33:02,640
so you see another reply to this once

809
00:33:02,640 --> 00:33:04,159
again encrypted now let's see how it

810
00:33:04,159 --> 00:33:05,919
looks on my end

811
00:33:05,919 --> 00:33:07,600
whenever it comes back so

812
00:33:07,600 --> 00:33:09,440
um here it goes

813
00:33:09,440 --> 00:33:10,880
stop secret now on the thunderbird side

814
00:33:10,880 --> 00:33:12,000
we'll just go ahead and decrypt and you

815
00:33:12,000 --> 00:33:13,840
can actually see the conversation very

816
00:33:13,840 --> 00:33:15,120
seamless

817
00:33:15,120 --> 00:33:16,720
verified decrypted gives us all that

818
00:33:16,720 --> 00:33:17,760
info

819
00:33:17,760 --> 00:33:20,000
so real easy to use for any everyday

820
00:33:20,000 --> 00:33:21,760
users

821
00:33:21,760 --> 00:33:24,960
now let's come back to the slides

822
00:33:24,960 --> 00:33:28,960
if i am not oh sorry there you go so you

823
00:33:28,960 --> 00:33:30,480
you can even see it with you know funny

824
00:33:30,480 --> 00:33:31,840
things like you know cat picks something

825
00:33:31,840 --> 00:33:33,600
you want

826
00:33:33,600 --> 00:33:37,120
and uh it all works

827
00:33:37,120 --> 00:33:38,960
so just a quick rundown of the details

828
00:33:38,960 --> 00:33:40,799
so secure messages are sent to standard

829
00:33:40,799 --> 00:33:44,159
sort of pkcs 7s mime objects and to kind

830
00:33:44,159 --> 00:33:46,000
of avoid stepping on the standard flow

831
00:33:46,000 --> 00:33:48,080
of email emails they are sent as

832
00:33:48,080 --> 00:33:50,320
attachments um in order to retain kind

833
00:33:50,320 --> 00:33:52,240
of the crypto cryptographically secured

834
00:33:52,240 --> 00:33:53,519
thing from end to end

835
00:33:53,519 --> 00:33:55,360
and the insert resolution is handled

836
00:33:55,360 --> 00:33:56,559
natively

837
00:33:56,559 --> 00:33:58,880
silently and directly so um we're not

838
00:33:58,880 --> 00:34:01,039
using any kind of like listener or a

839
00:34:01,039 --> 00:34:02,640
server or anything like that that some

840
00:34:02,640 --> 00:34:04,559
implementations use rather this is done

841
00:34:04,559 --> 00:34:06,159
completely natively within the add-on

842
00:34:06,159 --> 00:34:08,159
environment so these are

843
00:34:08,159 --> 00:34:09,199
standard

844
00:34:09,199 --> 00:34:10,639
outlook and thunderbird add-on with no

845
00:34:10,639 --> 00:34:12,800
extra softwares that are up and running

846
00:34:12,800 --> 00:34:14,560
but really these installation flows

847
00:34:14,560 --> 00:34:16,000
honestly you could uh if you're curious

848
00:34:16,000 --> 00:34:18,480
you can check out that uh email um

849
00:34:18,480 --> 00:34:19,599
it's got more of the info on the

850
00:34:19,599 --> 00:34:21,119
installation and whatnot but what i

851
00:34:21,119 --> 00:34:22,239
wanted to highlight was these aren't

852
00:34:22,239 --> 00:34:23,760
just convenient tools

853
00:34:23,760 --> 00:34:24,960
they are convenient sure i hope you

854
00:34:24,960 --> 00:34:26,719
agree but this is a vital part of our

855
00:34:26,719 --> 00:34:28,159
research to discover what people need

856
00:34:28,159 --> 00:34:30,719
and expect to make ev security a default

857
00:34:30,719 --> 00:34:32,800
at scale

858
00:34:32,800 --> 00:34:34,399
so what do people need well we've

859
00:34:34,399 --> 00:34:36,399
created these options page right for the

860
00:34:36,399 --> 00:34:37,520
interest of time i didn't run through

861
00:34:37,520 --> 00:34:39,440
them on the actual demo but

862
00:34:39,440 --> 00:34:41,679
i hope you can appreciate that well

863
00:34:41,679 --> 00:34:43,040
maybe we have to do some extra clicking

864
00:34:43,040 --> 00:34:44,320
there especially maybe on the outlook

865
00:34:44,320 --> 00:34:46,800
side we have to go ahead and

866
00:34:46,800 --> 00:34:48,960
manually toggle on for each uh

867
00:34:48,960 --> 00:34:50,399
email maybe we don't want to do that

868
00:34:50,399 --> 00:34:51,760
maybe we want to have it automated so

869
00:34:51,760 --> 00:34:53,040
that every email you're gonna sign it by

870
00:34:53,040 --> 00:34:55,199
default right and every email you might

871
00:34:55,199 --> 00:34:56,480
try to encrypt it if they can find a

872
00:34:56,480 --> 00:34:58,079
cert on dame you know that's the kind of

873
00:34:58,079 --> 00:34:59,760
seamless thing we can go for

874
00:34:59,760 --> 00:35:01,119
maybe that's what users want just

875
00:35:01,119 --> 00:35:03,760
configure it to their needs right but

876
00:35:03,760 --> 00:35:05,520
it's not just what users want it's what

877
00:35:05,520 --> 00:35:06,400
we can

878
00:35:06,400 --> 00:35:07,760
find out

879
00:35:07,760 --> 00:35:10,240
about what users want so

880
00:35:10,240 --> 00:35:12,079
when to be silent versus explicit for

881
00:35:12,079 --> 00:35:13,760
example with private keys you know you

882
00:35:13,760 --> 00:35:15,680
can think of a use case where

883
00:35:15,680 --> 00:35:17,520
a you can have a separate keys for

884
00:35:17,520 --> 00:35:18,880
signing and encrypting or you could just

885
00:35:18,880 --> 00:35:20,720
have a single key for both right there's

886
00:35:20,720 --> 00:35:21,760
there's different people that need

887
00:35:21,760 --> 00:35:23,839
different things but

888
00:35:23,839 --> 00:35:25,760
it's really being able to understand

889
00:35:25,760 --> 00:35:27,599
this you know actually seeing this in

890
00:35:27,599 --> 00:35:29,440
action and seeing what the numbers will

891
00:35:29,440 --> 00:35:30,960
help us know that

892
00:35:30,960 --> 00:35:32,720
how this correlates with the use the use

893
00:35:32,720 --> 00:35:34,079
case of those individuals and the other

894
00:35:34,079 --> 00:35:35,839
settings that they've used

895
00:35:35,839 --> 00:35:37,920
what they expect effectively

896
00:35:37,920 --> 00:35:40,880
and this is where our study comes in we

897
00:35:40,880 --> 00:35:42,880
are conducting an iob approved study

898
00:35:42,880 --> 00:35:44,720
where users can opt into an anonymous

899
00:35:44,720 --> 00:35:46,640
user site right and it's basically on

900
00:35:46,640 --> 00:35:48,560
the options page you can just toggle it

901
00:35:48,560 --> 00:35:50,560
on and really you can help us see what

902
00:35:50,560 --> 00:35:52,960
the shape of the needed security is

903
00:35:52,960 --> 00:35:54,800
when accepted these specific toggles

904
00:35:54,800 --> 00:35:56,400
just you know the kind of anonymous

905
00:35:56,400 --> 00:35:58,320
general ones will be shared as

906
00:35:58,320 --> 00:36:01,200
statistics to our telemetry server along

907
00:36:01,200 --> 00:36:03,520
with the dos server that we're using for

908
00:36:03,520 --> 00:36:05,520
the dns resolution

909
00:36:05,520 --> 00:36:07,040
but only obviously if it's public so

910
00:36:07,040 --> 00:36:10,240
only the public information

911
00:36:10,320 --> 00:36:11,920
users can optionally answer some basic

912
00:36:11,920 --> 00:36:13,920
demographic queries to really uh zone in

913
00:36:13,920 --> 00:36:15,760
that info as well to support the

914
00:36:15,760 --> 00:36:18,400
statistics that we're getting

915
00:36:18,400 --> 00:36:20,000
and it does not invade your privacy in

916
00:36:20,000 --> 00:36:21,599
any way the telemetry is shared only in

917
00:36:21,599 --> 00:36:22,800
specific times when you change your

918
00:36:22,800 --> 00:36:24,400
settings and then it never tracks

919
00:36:24,400 --> 00:36:26,160
anything about your emails only noting

920
00:36:26,160 --> 00:36:28,079
the set default conflicts

921
00:36:28,079 --> 00:36:29,280
and naturally you have the right to be

922
00:36:29,280 --> 00:36:31,680
forgiven you can toggle off at any time

923
00:36:31,680 --> 00:36:33,440
and it's completely anonymous and you

924
00:36:33,440 --> 00:36:34,880
can request all your data to be removed

925
00:36:34,880 --> 00:36:37,680
if you ever did toggle it on

926
00:36:37,680 --> 00:36:39,040
and we can't do it alone right we're

927
00:36:39,040 --> 00:36:41,200
trying to find the results that let us

928
00:36:41,200 --> 00:36:42,560
automate and enable security on the

929
00:36:42,560 --> 00:36:44,240
internet and for that we greatly

930
00:36:44,240 --> 00:36:45,680
appreciate participation try out our

931
00:36:45,680 --> 00:36:48,079
tools and go ahead and toggle that on if

932
00:36:48,079 --> 00:36:49,680
you feel

933
00:36:49,680 --> 00:36:51,440
you will let us actually see this stuff

934
00:36:51,440 --> 00:36:53,200
in action

935
00:36:53,200 --> 00:36:55,839
so we can step back into the big picture

936
00:36:55,839 --> 00:36:57,359
dane as an architecture lets us make

937
00:36:57,359 --> 00:36:58,880
end-to-end security more seamless for

938
00:36:58,880 --> 00:37:00,960
every person on the internet right

939
00:37:00,960 --> 00:37:03,119
we recall in the past that itf made this

940
00:37:03,119 --> 00:37:04,720
push for https everywhere right and we

941
00:37:04,720 --> 00:37:06,400
now live in a world

942
00:37:06,400 --> 00:37:08,240
where the internet scale transfer

943
00:37:08,240 --> 00:37:09,920
security is kind of solved it's a

944
00:37:09,920 --> 00:37:11,520
default everybody expects it you see

945
00:37:11,520 --> 00:37:13,359
that lock on the browser it's all good

946
00:37:13,359 --> 00:37:15,520
right we believe that sort of ubiquity

947
00:37:15,520 --> 00:37:18,000
should be the case for internet scale

948
00:37:18,000 --> 00:37:20,000
object security end-to-end security

949
00:37:20,000 --> 00:37:21,440
right where any random entity on the

950
00:37:21,440 --> 00:37:23,760
internet not just some public server

951
00:37:23,760 --> 00:37:25,920
could transact with other entities in a

952
00:37:25,920 --> 00:37:28,160
secure manner seamlessly

953
00:37:28,160 --> 00:37:29,680
but we shall start with two tools for

954
00:37:29,680 --> 00:37:30,880
email security as you saw in this

955
00:37:30,880 --> 00:37:32,640
presentation and this is just the

956
00:37:32,640 --> 00:37:34,079
proving grounds though

957
00:37:34,079 --> 00:37:35,440
going forward

958
00:37:35,440 --> 00:37:38,160
if you help us find what users need

959
00:37:38,160 --> 00:37:39,920
you know trying them out

960
00:37:39,920 --> 00:37:41,680
joining our study then we can further

961
00:37:41,680 --> 00:37:44,400
our research on the new uh uses for dane

962
00:37:44,400 --> 00:37:46,079
that i mentioned you know cyber threat

963
00:37:46,079 --> 00:37:48,800
intelligence and mhealth

964
00:37:48,800 --> 00:37:51,520
smart cities and iot devices to be what

965
00:37:51,520 --> 00:37:53,359
users actually need

966
00:37:53,359 --> 00:37:54,480
and that's where i'll leave you guys

967
00:37:54,480 --> 00:37:57,839
often thank you very much

968
00:37:57,839 --> 00:38:00,320
any uh questions or comments i'll be out

969
00:38:00,320 --> 00:38:02,880
here as well to chat for anyone

970
00:38:02,880 --> 00:38:05,920
thank you excellent so

971
00:38:05,920 --> 00:38:09,040
we have jared and peter in the queue i

972
00:38:09,040 --> 00:38:13,200
guess take it away jared

973
00:38:17,040 --> 00:38:21,280
jared's in person hello jared hello

974
00:38:21,280 --> 00:38:22,079
um

975
00:38:22,079 --> 00:38:24,240
can you differentiate here between what

976
00:38:24,240 --> 00:38:26,640
you mean between security and privacy

977
00:38:26,640 --> 00:38:28,880
because there's a lot of equivalencies

978
00:38:28,880 --> 00:38:31,599
that the ietf specifically talks about

979
00:38:31,599 --> 00:38:33,599
for security where i think many of us

980
00:38:33,599 --> 00:38:36,079
know that html email

981
00:38:36,079 --> 00:38:37,680
is very good at violating your

982
00:38:37,680 --> 00:38:39,440
individual privacy

983
00:38:39,440 --> 00:38:41,280
and encapsulating

984
00:38:41,280 --> 00:38:43,680
that transport inside of tls

985
00:38:43,680 --> 00:38:45,359
doesn't really actually make that

986
00:38:45,359 --> 00:38:47,680
communication any more private

987
00:38:47,680 --> 00:38:50,560
uh than you know than it was perhaps

988
00:38:50,560 --> 00:38:51,760
previously

989
00:38:51,760 --> 00:38:54,320
because the assertion here is that this

990
00:38:54,320 --> 00:38:57,359
will make my communications more secure

991
00:38:57,359 --> 00:39:00,400
but if i'm still rendering the same html

992
00:39:00,400 --> 00:39:02,240
my privacy is still likely to be very

993
00:39:02,240 --> 00:39:04,480
violated by the people who want to

994
00:39:04,480 --> 00:39:06,240
engage in those act those types of

995
00:39:06,240 --> 00:39:07,440
activities

996
00:39:07,440 --> 00:39:09,920
and the community's done a very poor job

997
00:39:09,920 --> 00:39:11,440
of differentiating between those two and

998
00:39:11,440 --> 00:39:13,280
i'd like to hear kind of how you think

999
00:39:13,280 --> 00:39:14,720
this enhances

1000
00:39:14,720 --> 00:39:17,040
um the two different parts because for

1001
00:39:17,040 --> 00:39:19,440
this it seems like an awful lot of work

1002
00:39:19,440 --> 00:39:21,440
for an organization to go through to get

1003
00:39:21,440 --> 00:39:24,320
a secure transport um for the messaging

1004
00:39:24,320 --> 00:39:26,480
back and forth which is already afforded

1005
00:39:26,480 --> 00:39:29,440
by for example enabling tls so that's a

1006
00:39:29,440 --> 00:39:31,680
perfect question because that's exactly

1007
00:39:31,680 --> 00:39:33,760
part of the point with trying to look at

1008
00:39:33,760 --> 00:39:35,359
bain it's not just about the transport

1009
00:39:35,359 --> 00:39:37,520
you know we have https for tls transfer

1010
00:39:37,520 --> 00:39:38,560
security

1011
00:39:38,560 --> 00:39:40,160
data is looking at end-to-end security

1012
00:39:40,160 --> 00:39:42,320
so the objects themselves are secure at

1013
00:39:42,320 --> 00:39:44,720
the ends of them if uh

1014
00:39:44,720 --> 00:39:46,240
i'm sorry if i misunderstood your

1015
00:39:46,240 --> 00:39:47,680
question the

1016
00:39:47,680 --> 00:39:49,040
yeah but that doesn't mean that the

1017
00:39:49,040 --> 00:39:51,440
object i'm downloading isn't going to

1018
00:39:51,440 --> 00:39:53,520
infect my machine or

1019
00:39:53,520 --> 00:39:55,760
go and violate the security properties

1020
00:39:55,760 --> 00:39:58,240
of my device which is one of my major

1021
00:39:58,240 --> 00:40:00,320
concerns here is that

1022
00:40:00,320 --> 00:40:01,520
uh

1023
00:40:01,520 --> 00:40:03,680
you don't this isn't actually affording

1024
00:40:03,680 --> 00:40:05,200
any sort of additional security for the

1025
00:40:05,200 --> 00:40:07,280
device sure that is actually a good

1026
00:40:07,280 --> 00:40:10,640
point and really our goal here was to

1027
00:40:10,640 --> 00:40:12,880
focus zone in on enabling gain for s

1028
00:40:12,880 --> 00:40:14,640
mime specifically so the s9 protocol

1029
00:40:14,640 --> 00:40:16,560
that it currently exists right now

1030
00:40:16,560 --> 00:40:17,760
extensions to that protocol could

1031
00:40:17,760 --> 00:40:19,920
definitely do some work in that regards

1032
00:40:19,920 --> 00:40:22,000
to making sure email has objects that

1033
00:40:22,000 --> 00:40:24,319
are like the contents of email the html

1034
00:40:24,319 --> 00:40:26,800
emails and whatnot are more conscious of

1035
00:40:26,800 --> 00:40:29,119
our privacy right specifically but

1036
00:40:29,119 --> 00:40:31,040
looking at exactly s mime as the

1037
00:40:31,040 --> 00:40:33,040
protocol exists today

1038
00:40:33,040 --> 00:40:34,960
uh is kind of the objective of the tools

1039
00:40:34,960 --> 00:40:36,319
that we had so implementing dane

1040
00:40:36,319 --> 00:40:37,680
specifically but that is an excellent

1041
00:40:37,680 --> 00:40:39,520
point and you know worth looking into in

1042
00:40:39,520 --> 00:40:41,920
the future

1043
00:40:43,599 --> 00:40:44,800
oh it seems like we have another

1044
00:40:44,800 --> 00:40:47,359
question go ahead

1045
00:40:48,960 --> 00:40:52,560
yes hi um

1046
00:40:52,560 --> 00:40:54,880
okay whatever i'll just bend

1047
00:40:54,880 --> 00:40:58,000
um yes i have a question about um

1048
00:40:58,000 --> 00:40:59,839
dane porter works behind the scenes so

1049
00:40:59,839 --> 00:41:02,800
when when you kind of claim a domain

1050
00:41:02,800 --> 00:41:05,839
then the domain owner

1051
00:41:05,839 --> 00:41:07,520
somewhere else the token in their dns

1052
00:41:07,520 --> 00:41:08,720
okay that's fine

1053
00:41:08,720 --> 00:41:10,960
and then once that's done when i create

1054
00:41:10,960 --> 00:41:13,040
users in the dan portal and

1055
00:41:13,040 --> 00:41:15,200
do stuff with the keys how does that

1056
00:41:15,200 --> 00:41:17,599
actually relate to that domain and why

1057
00:41:17,599 --> 00:41:18,400
would

1058
00:41:18,400 --> 00:41:20,400
a certain let's say email client for

1059
00:41:20,400 --> 00:41:22,800
example contact the dain portal server

1060
00:41:22,800 --> 00:41:23,839
about this

1061
00:41:23,839 --> 00:41:24,720
um

1062
00:41:24,720 --> 00:41:26,240
is it actually like that or is some

1063
00:41:26,240 --> 00:41:28,240
information put into the customers

1064
00:41:28,240 --> 00:41:30,079
domain dns zone i don't know that i

1065
00:41:30,079 --> 00:41:31,680
didn't understand that at all

1066
00:41:31,680 --> 00:41:33,599
and regarding coor

1067
00:41:33,599 --> 00:41:35,520
the plugin seems to be

1068
00:41:35,520 --> 00:41:37,520
relying on dane porter specifically so

1069
00:41:37,520 --> 00:41:39,119
what if i do my own deployment of that

1070
00:41:39,119 --> 00:41:40,960
can i make it to use my

1071
00:41:40,960 --> 00:41:42,720
database and where is it is it a dain

1072
00:41:42,720 --> 00:41:44,960
portal or is it in the customer's dns

1073
00:41:44,960 --> 00:41:46,880
domain so this is a perfect point as

1074
00:41:46,880 --> 00:41:48,880
well um there's something unfortunately

1075
00:41:48,880 --> 00:41:50,960
i was had to rush through here but uh

1076
00:41:50,960 --> 00:41:52,560
dane portal actually just implements the

1077
00:41:52,560 --> 00:41:54,800
standard dane protocol which is

1078
00:41:54,800 --> 00:41:57,119
just part of dns you know dns secured by

1079
00:41:57,119 --> 00:41:59,760
dns sec these are just standard dns

1080
00:41:59,760 --> 00:42:02,720
domains that are zones that are beneath

1081
00:42:02,720 --> 00:42:04,720
like our normal structures that zone

1082
00:42:04,720 --> 00:42:06,880
holders have just with special protocols

1083
00:42:06,880 --> 00:42:09,520
um domain names right and there's a lot

1084
00:42:09,520 --> 00:42:11,680
of details hidden behind that but really

1085
00:42:11,680 --> 00:42:13,680
this is the public dns right obviously

1086
00:42:13,680 --> 00:42:15,680
you can have private dns implementations

1087
00:42:15,680 --> 00:42:18,560
too that do gain within your own uh

1088
00:42:18,560 --> 00:42:20,240
organization and that is totally

1089
00:42:20,240 --> 00:42:21,920
possible and your own male clients that

1090
00:42:21,920 --> 00:42:24,960
can resolve that dns uh can indeed do

1091
00:42:24,960 --> 00:42:27,440
that desert resolution of gain through

1092
00:42:27,440 --> 00:42:29,440
that private uh infrastructure but

1093
00:42:29,440 --> 00:42:30,880
that's kind of more like the classical

1094
00:42:30,880 --> 00:42:33,040
pki but with the when you're connected

1095
00:42:33,040 --> 00:42:34,640
to the public dns you have this secure

1096
00:42:34,640 --> 00:42:35,760
route like you're doing dns tech you're

1097
00:42:35,760 --> 00:42:37,200
starting at the root zone you're coming

1098
00:42:37,200 --> 00:42:39,760
down it's resolvable no matter whether

1099
00:42:39,760 --> 00:42:41,119
anybody that's hooked up just like if

1100
00:42:41,119 --> 00:42:42,480
you have your own name server and you

1101
00:42:42,480 --> 00:42:44,640
have your own domain on it it's just

1102
00:42:44,640 --> 00:42:46,640
like that you know so this isn't any

1103
00:42:46,640 --> 00:42:47,760
special

1104
00:42:47,760 --> 00:42:50,319
proprietary database this is indeed the

1105
00:42:50,319 --> 00:42:52,800
public dns gain portal is just a front

1106
00:42:52,800 --> 00:42:53,520
end

1107
00:42:53,520 --> 00:42:55,359
and a kind of the infrastructure meaning

1108
00:42:55,359 --> 00:42:58,000
we just have a specified name server for

1109
00:42:58,000 --> 00:43:00,240
that

1110
00:43:00,240 --> 00:43:02,160
yes sure but when i use the dane portal

1111
00:43:02,160 --> 00:43:04,240
web interface to configure something how

1112
00:43:04,240 --> 00:43:05,920
does that end up in my zone because i

1113
00:43:05,920 --> 00:43:08,640
don't remember you showing that

1114
00:43:08,640 --> 00:43:11,280
the dns provider's api key is given to

1115
00:43:11,280 --> 00:43:13,359
dane porter or something right that that

1116
00:43:13,359 --> 00:43:14,880
is done through a manual delegation i

1117
00:43:14,880 --> 00:43:16,560
think i might have done rush through

1118
00:43:16,560 --> 00:43:18,160
those slides a little bit but like for

1119
00:43:18,160 --> 00:43:19,440
example uh

1120
00:43:19,440 --> 00:43:22,160
we dane portal will actually be serving

1121
00:43:22,160 --> 00:43:24,319
the specific sub-zone for dain so it

1122
00:43:24,319 --> 00:43:26,160
will have this known name server serves

1123
00:43:26,160 --> 00:43:28,400
it but you know that's something it does

1124
00:43:28,400 --> 00:43:30,480
currently and we're looking into having

1125
00:43:30,480 --> 00:43:32,960
more like general name servers as well

1126
00:43:32,960 --> 00:43:34,880
but really the delegation is just a

1127
00:43:34,880 --> 00:43:38,160
standard delegation uh just use the ns

1128
00:43:38,160 --> 00:43:39,520
record and you put it in your parent

1129
00:43:39,520 --> 00:43:41,839
zone and it is delegated to the game

1130
00:43:41,839 --> 00:43:43,359
portal right and the reason it does that

1131
00:43:43,359 --> 00:43:44,960
is because underneath that zone it can

1132
00:43:44,960 --> 00:43:46,480
add the records and change the records

1133
00:43:46,480 --> 00:43:50,000
as needed to suit the user's perspective

1134
00:43:50,000 --> 00:43:51,760
of the each email user being able to

1135
00:43:51,760 --> 00:43:54,400
access the domain uh and add their own

1136
00:43:54,400 --> 00:43:56,480
certs because dane has their own records

1137
00:43:56,480 --> 00:43:59,119
and uh protocol for it um i think there

1138
00:43:59,119 --> 00:44:00,480
was a question on the career side as

1139
00:44:00,480 --> 00:44:03,920
well but i think i forgot that i'm sorry

1140
00:44:03,920 --> 00:44:07,040
i i think i can repeat it

1141
00:44:07,040 --> 00:44:10,319
is so cooler dependent on theme portal

1142
00:44:10,319 --> 00:44:12,400
specifically yeah that's that was the

1143
00:44:12,400 --> 00:44:13,359
question that's that's a perfect

1144
00:44:13,359 --> 00:44:15,359
follow-up because no it doesn't uh

1145
00:44:15,359 --> 00:44:16,720
career is resolving through the public

1146
00:44:16,720 --> 00:44:19,359
dns so it's using a dos server and

1147
00:44:19,359 --> 00:44:20,720
starting from the root and just looking

1148
00:44:20,720 --> 00:44:22,960
for the email address with the proper

1149
00:44:22,960 --> 00:44:24,880
following the dane protocol so if i do

1150
00:44:24,880 --> 00:44:27,839
my own deployment and using absolutely

1151
00:44:27,839 --> 00:44:29,040
right yeah and the cool thing is the

1152
00:44:29,040 --> 00:44:32,400
portal is actually open source

1153
00:44:32,400 --> 00:44:35,560
thank you

1154
00:44:41,359 --> 00:44:42,160
um

1155
00:44:42,160 --> 00:44:44,800
there was a lot of talk around day in

1156
00:44:44,800 --> 00:44:47,599
things and i i saw how hard he worked on

1157
00:44:47,599 --> 00:44:49,839
this first hand and i really want to

1158
00:44:49,839 --> 00:44:52,000
thank you for doing this that's great i

1159
00:44:52,000 --> 00:44:53,680
hope everybody

1160
00:44:53,680 --> 00:44:55,359
you know tries it out

1161
00:44:55,359 --> 00:44:56,880
yeah absolutely thank you so much though

1162
00:44:56,880 --> 00:44:57,920
for me

1163
00:44:57,920 --> 00:44:59,520
i really do hope uh people are going to

1164
00:44:59,520 --> 00:45:00,720
give it a shot you know it's up and

1165
00:45:00,720 --> 00:45:02,480
running right now both those tools and

1166
00:45:02,480 --> 00:45:03,440
their respective sites and

1167
00:45:03,440 --> 00:45:05,440
documentations

1168
00:45:05,440 --> 00:45:07,760
hi lars liebman from net node so where

1169
00:45:07,760 --> 00:45:09,920
exactly are the secret keys for these

1170
00:45:09,920 --> 00:45:12,079
certificates stored

1171
00:45:12,079 --> 00:45:13,119
um

1172
00:45:13,119 --> 00:45:14,480
so there are no

1173
00:45:14,480 --> 00:45:16,720
so which certificates are you talking

1174
00:45:16,720 --> 00:45:18,079
about dns sec

1175
00:45:18,079 --> 00:45:20,400
zones no the user the user certificates

1176
00:45:20,400 --> 00:45:23,040
used for s5 sure for the s mime the

1177
00:45:23,040 --> 00:45:25,920
users will have them so um in that we

1178
00:45:25,920 --> 00:45:27,760
briefly showed the tool that allows

1179
00:45:27,760 --> 00:45:30,480
users to create a certificate or key

1180
00:45:30,480 --> 00:45:32,160
pair that is there for convenience that

1181
00:45:32,160 --> 00:45:34,400
is using just a it's a thin layer on

1182
00:45:34,400 --> 00:45:36,800
openssl so using openssl you can

1183
00:45:36,800 --> 00:45:38,800
generate a key pair you've got a certain

1184
00:45:38,800 --> 00:45:40,880
and a key and dateportal promises that

1185
00:45:40,880 --> 00:45:42,079
it's not going to save any of that and

1186
00:45:42,079 --> 00:45:44,400
it doesn't uh it's open source people

1187
00:45:44,400 --> 00:45:46,480
can verify but basically you're just

1188
00:45:46,480 --> 00:45:48,560
prompted to download those and once you

1189
00:45:48,560 --> 00:45:50,079
download them it forgets about it it's

1190
00:45:50,079 --> 00:45:51,200
like one of those things where it gives

1191
00:45:51,200 --> 00:45:52,800
you a web page to download

1192
00:45:52,800 --> 00:45:54,240
it's up to the user to keep track of it

1193
00:45:54,240 --> 00:45:55,839
technically um

1194
00:45:55,839 --> 00:45:58,640
so yeah so which computer generates the

1195
00:45:58,640 --> 00:45:59,520
key

1196
00:45:59,520 --> 00:46:03,119
the actual key answer for convenience

1197
00:46:03,119 --> 00:46:04,800
the user is given the option to let the

1198
00:46:04,800 --> 00:46:07,040
server generate it meaning run open ssl

1199
00:46:07,040 --> 00:46:09,520
on the server right now obviously we do

1200
00:46:09,520 --> 00:46:11,280
prefer if the users come in with a

1201
00:46:11,280 --> 00:46:13,599
proper cacer key combo we don't ever see

1202
00:46:13,599 --> 00:46:16,160
the key definitely we do not want users

1203
00:46:16,160 --> 00:46:18,480
to rely on that for their end-all be-all

1204
00:46:18,480 --> 00:46:20,000
but it is a matter of convenience to let

1205
00:46:20,000 --> 00:46:22,240
people quickly jump start into doing

1206
00:46:22,240 --> 00:46:25,040
secure email right but there's no proof

1207
00:46:25,040 --> 00:46:26,880
that you don't harvest it

1208
00:46:26,880 --> 00:46:29,520
um you can't prove it yeah yeah you are

1209
00:46:29,520 --> 00:46:31,200
technically correct right if you trust

1210
00:46:31,200 --> 00:46:32,880
that we are going to use exactly what's

1211
00:46:32,880 --> 00:46:35,839
in the open source repo then yes that

1212
00:46:35,839 --> 00:46:37,520
would be the proof but there is no true

1213
00:46:37,520 --> 00:46:39,920
trust in that in that case perhaps maybe

1214
00:46:39,920 --> 00:46:41,680
don't use that uh the tool and use open

1215
00:46:41,680 --> 00:46:43,440
ssl yourselves and that's actually a

1216
00:46:43,440 --> 00:46:45,200
very good point where we can point

1217
00:46:45,200 --> 00:46:47,520
people at more fulsome discussion of how

1218
00:46:47,520 --> 00:46:50,079
to make their own certs use openssl on

1219
00:46:50,079 --> 00:46:51,839
their own operating systems as well so

1220
00:46:51,839 --> 00:46:53,520
that that's a good point and

1221
00:46:53,520 --> 00:46:55,200
a matter of improvement for the site so

1222
00:46:55,200 --> 00:46:56,720
if you can improve that process where

1223
00:46:56,720 --> 00:46:58,640
the user generates his own key on his

1224
00:46:58,640 --> 00:47:01,520
own computer and then uploads it to use

1225
00:47:01,520 --> 00:47:03,520
and then feeds it into the dns

1226
00:47:03,520 --> 00:47:05,760
that would be really really awesome

1227
00:47:05,760 --> 00:47:06,720
yes

1228
00:47:06,720 --> 00:47:08,160
like it would be a matter of pointing to

1229
00:47:08,160 --> 00:47:10,079
like kind of a run-through of how to do

1230
00:47:10,079 --> 00:47:11,280
it themselves

1231
00:47:11,280 --> 00:47:12,640
it's also

1232
00:47:12,640 --> 00:47:14,480
worth pointing out that it is perfectly

1233
00:47:14,480 --> 00:47:16,800
fine if you are a user that already has

1234
00:47:16,800 --> 00:47:18,880
ca certs that you know you're already

1235
00:47:18,880 --> 00:47:21,200
doing s mime and you just want to push

1236
00:47:21,200 --> 00:47:22,559
everything on dane whatever you have

1237
00:47:22,559 --> 00:47:24,640
currently right and it's perfectly fine

1238
00:47:24,640 --> 00:47:26,319
for you to keep your own key and you

1239
00:47:26,319 --> 00:47:28,400
never use that utility at all you know

1240
00:47:28,400 --> 00:47:30,000
but you're right because the utility is

1241
00:47:30,000 --> 00:47:32,800
up in front there it is worth doing a

1242
00:47:32,800 --> 00:47:35,119
bit of a stronger messaging as well um

1243
00:47:35,119 --> 00:47:37,200
but yeah feel free to actually go up

1244
00:47:37,200 --> 00:47:39,599
there and see and see how you feel about

1245
00:47:39,599 --> 00:47:41,440
the messaging that exists i believe it

1246
00:47:41,440 --> 00:47:43,920
is pretty cautious when it says that you

1247
00:47:43,920 --> 00:47:45,440
know it is preferred that you uh go

1248
00:47:45,440 --> 00:47:46,960
ahead and make it yourself too but this

1249
00:47:46,960 --> 00:47:48,640
is just kind of a convenience tool but

1250
00:47:48,640 --> 00:47:52,279
great point thank you

1251
00:47:53,440 --> 00:47:55,359
all right so

1252
00:47:55,359 --> 00:47:56,400
anyone

1253
00:47:56,400 --> 00:47:58,559
lost questions i don't think we do

1254
00:47:58,559 --> 00:48:00,400
excellent thank you very much everyone

1255
00:48:00,400 --> 00:48:03,680
thank you guys um great presentation

1256
00:48:03,680 --> 00:48:05,040
and

1257
00:48:05,040 --> 00:48:07,680
i think next we will have the ipv6

1258
00:48:07,680 --> 00:48:10,000
extension header performance and metric

1259
00:48:10,000 --> 00:48:13,280
diagnostic which is a very long title

1260
00:48:13,280 --> 00:48:15,040
so

1261
00:48:15,040 --> 00:48:16,000
hello

1262
00:48:16,000 --> 00:48:17,680
me and

1263
00:48:17,680 --> 00:48:21,119
will crispy bring up the slide duck

1264
00:48:21,119 --> 00:48:25,400
excellent thank you

1265
00:48:36,160 --> 00:48:38,720
yeah i can kick you out actually

1266
00:48:38,720 --> 00:48:41,839
revoke there we go

1267
00:48:43,040 --> 00:48:45,040
let me see if maybe

1268
00:48:45,040 --> 00:48:46,160
i can

1269
00:48:46,160 --> 00:48:47,599
share the pre-loaded because chris's

1270
00:48:47,599 --> 00:48:50,960
machine is being difficult um

1271
00:48:50,960 --> 00:48:53,520
here we go

1272
00:48:54,160 --> 00:48:55,760
is that excellent and you'll just tell

1273
00:48:55,760 --> 00:49:00,319
us what hit next yep excellent thank you

1274
00:49:01,680 --> 00:49:05,200
so um we did some extension header

1275
00:49:05,200 --> 00:49:08,400
testing as i think you guys know from

1276
00:49:08,400 --> 00:49:10,240
actually some of the presentations here

1277
00:49:10,240 --> 00:49:13,839
too at iepg um there is an outstanding

1278
00:49:13,839 --> 00:49:17,280
question about whether ipv6 extension

1279
00:49:17,280 --> 00:49:19,680
headers can actually be used on the

1280
00:49:19,680 --> 00:49:21,680
internet it's been a controversy for

1281
00:49:21,680 --> 00:49:24,400
quite a few years and a number of people

1282
00:49:24,400 --> 00:49:27,440
have done studies um showing that they

1283
00:49:27,440 --> 00:49:28,720
don't work

1284
00:49:28,720 --> 00:49:30,880
um and

1285
00:49:30,880 --> 00:49:33,599
by and large these studies

1286
00:49:33,599 --> 00:49:35,280
sent

1287
00:49:35,280 --> 00:49:36,720
crafted

1288
00:49:36,720 --> 00:49:39,040
fake extension headers

1289
00:49:39,040 --> 00:49:42,800
to a number of the very large sites

1290
00:49:42,800 --> 00:49:45,280
on the alexa top you know whatever

1291
00:49:45,280 --> 00:49:47,200
google facebook you know the usual

1292
00:49:47,200 --> 00:49:48,400
suspects

1293
00:49:48,400 --> 00:49:50,559
and so what we were thinking we

1294
00:49:50,559 --> 00:49:53,520
ourselves have been hard at work on an

1295
00:49:53,520 --> 00:49:56,079
extension header ourselves

1296
00:49:56,079 --> 00:49:58,960
and we wish that to work and we do not

1297
00:49:58,960 --> 00:50:01,359
wish to throw all our work away so if

1298
00:50:01,359 --> 00:50:03,599
extension headers don't work we have

1299
00:50:03,599 --> 00:50:06,960
been wasting our time

1300
00:50:08,160 --> 00:50:10,559
we wish not to do that

1301
00:50:10,559 --> 00:50:14,400
so a very brief explanation this is of

1302
00:50:14,400 --> 00:50:18,559
particular interest at end user

1303
00:50:18,559 --> 00:50:21,119
sites uh enterprises

1304
00:50:21,119 --> 00:50:24,240
because we need to do very quick triage

1305
00:50:24,240 --> 00:50:27,760
as to say is the problem at a at a hot

1306
00:50:27,760 --> 00:50:30,640
very high level is it in the server or

1307
00:50:30,640 --> 00:50:32,720
is it in the network and then we can

1308
00:50:32,720 --> 00:50:36,559
dispatch uh the right set of technicians

1309
00:50:36,559 --> 00:50:40,079
to um to go to either way and the way we

1310
00:50:40,079 --> 00:50:42,800
do this is we put timing and sequence

1311
00:50:42,800 --> 00:50:46,880
number information inside an ipv6

1312
00:50:46,880 --> 00:50:49,680
destination option

1313
00:50:49,680 --> 00:50:51,040
next

1314
00:50:51,040 --> 00:50:52,079
so

1315
00:50:52,079 --> 00:50:55,200
um the way we did our testing

1316
00:50:55,200 --> 00:51:00,480
is um first we modified a freebsd kernel

1317
00:51:00,480 --> 00:51:04,480
to send our pdm destination option

1318
00:51:04,480 --> 00:51:07,040
with every packet

1319
00:51:07,040 --> 00:51:08,640
and what could the reason we did the

1320
00:51:08,640 --> 00:51:11,440
modification in the kernel is that we

1321
00:51:11,440 --> 00:51:14,880
wanted to test uh real data going

1322
00:51:14,880 --> 00:51:17,359
through and we wanted it to come through

1323
00:51:17,359 --> 00:51:20,400
all the time so we patched the kernel

1324
00:51:20,400 --> 00:51:23,119
and so then what we did is we chose

1325
00:51:23,119 --> 00:51:26,319
locations throughout the world because

1326
00:51:26,319 --> 00:51:28,240
we wanted to make sure that we were

1327
00:51:28,240 --> 00:51:31,920
going to uh multiple transit providers

1328
00:51:31,920 --> 00:51:34,480
and so you can see you know warsaw

1329
00:51:34,480 --> 00:51:38,480
toronto mumbai and so forth is where we

1330
00:51:38,480 --> 00:51:39,440
were

1331
00:51:39,440 --> 00:51:41,839
next

1332
00:51:43,839 --> 00:51:46,240
uh and you can see

1333
00:51:46,240 --> 00:51:48,079
we have quite a few

1334
00:51:48,079 --> 00:51:51,599
choices of locations from this small

1335
00:51:51,599 --> 00:51:54,880
hosting service it does become important

1336
00:51:54,880 --> 00:51:58,720
that it was a um a small quote-unquote

1337
00:51:58,720 --> 00:52:00,559
like no-name

1338
00:52:00,559 --> 00:52:02,800
hosting service and not like one of the

1339
00:52:02,800 --> 00:52:05,440
brand name providers like um

1340
00:52:05,440 --> 00:52:07,359
you know amazon

1341
00:52:07,359 --> 00:52:11,200
azure and so on uh next

1342
00:52:11,200 --> 00:52:15,280
and so you can see our pdm locations are

1343
00:52:15,280 --> 00:52:16,960
exactly where

1344
00:52:16,960 --> 00:52:20,319
i had said before that they were

1345
00:52:20,319 --> 00:52:22,720
next

1346
00:52:23,280 --> 00:52:26,000
uh so let me first give a shout out to

1347
00:52:26,000 --> 00:52:28,800
our sponsors the india internet

1348
00:52:28,800 --> 00:52:33,839
engineering society for um uh paying for

1349
00:52:33,839 --> 00:52:36,079
these little servers all over the world

1350
00:52:36,079 --> 00:52:40,880
and for nitk suratkal for providing uh

1351
00:52:40,880 --> 00:52:43,200
the young people who did a bunch of the

1352
00:52:43,200 --> 00:52:46,319
code thank you so much and then

1353
00:52:46,319 --> 00:52:48,160
our own organization which is a

1354
00:52:48,160 --> 00:52:51,280
consortium of industry which is very

1355
00:52:51,280 --> 00:52:54,400
interested in this kind of information

1356
00:52:54,400 --> 00:52:56,480
so next

1357
00:52:56,480 --> 00:52:57,760
so

1358
00:52:57,760 --> 00:53:02,079
this is test results so what i did was i

1359
00:53:02,079 --> 00:53:05,359
took a very very large ftp

1360
00:53:05,359 --> 00:53:08,400
you can see there's a ton of kilobytes

1361
00:53:08,400 --> 00:53:10,720
to download and

1362
00:53:10,720 --> 00:53:13,839
i tested from toronto i based out of

1363
00:53:13,839 --> 00:53:17,920
toronto and tested to all the locations

1364
00:53:17,920 --> 00:53:21,200
and you can see here and pdm is in

1365
00:53:21,200 --> 00:53:23,920
is attached to every single

1366
00:53:23,920 --> 00:53:25,119
packet

1367
00:53:25,119 --> 00:53:29,440
and you can see here that the ftp worked

1368
00:53:29,440 --> 00:53:32,640
and in the background i took a packet

1369
00:53:32,640 --> 00:53:36,000
trace because packets don't lie

1370
00:53:36,000 --> 00:53:38,720
i mean people can lie but packets don't

1371
00:53:38,720 --> 00:53:40,839
lie

1372
00:53:40,839 --> 00:53:43,760
next so

1373
00:53:43,760 --> 00:53:45,760
you can see

1374
00:53:45,760 --> 00:53:49,760
there is pdm headers i took the psn this

1375
00:53:49,760 --> 00:53:52,000
packet field

1376
00:53:52,000 --> 00:53:56,319
out of the pdm destination option header

1377
00:53:56,319 --> 00:53:58,400
and put it right out there and you can

1378
00:53:58,400 --> 00:53:59,839
see it's in

1379
00:53:59,839 --> 00:54:01,440
all the packets

1380
00:54:01,440 --> 00:54:03,839
uh by the way all these traces are

1381
00:54:03,839 --> 00:54:06,480
available for anyone to look at we have

1382
00:54:06,480 --> 00:54:07,760
them here

1383
00:54:07,760 --> 00:54:10,079
and you can see surprisingly

1384
00:54:10,079 --> 00:54:14,800
that the large ftp was fragmented and

1385
00:54:14,800 --> 00:54:18,240
validly so so you can see fragment

1386
00:54:18,240 --> 00:54:22,240
headers of large fragment headers

1387
00:54:22,240 --> 00:54:25,200
also going to the other end

1388
00:54:25,200 --> 00:54:27,920
next please

1389
00:54:27,920 --> 00:54:30,960
so you can see here that everything went

1390
00:54:30,960 --> 00:54:34,480
successful next please

1391
00:54:34,480 --> 00:54:37,440
here is the destination option header

1392
00:54:37,440 --> 00:54:40,480
out of the trace and you can see it is a

1393
00:54:40,480 --> 00:54:44,160
valid destination option with all the

1394
00:54:44,160 --> 00:54:46,160
data filled in

1395
00:54:46,160 --> 00:54:49,280
the timing is extremely important

1396
00:54:49,280 --> 00:54:52,160
because those are delta times that are

1397
00:54:52,160 --> 00:54:55,760
calculated when i get a packet from one

1398
00:54:55,760 --> 00:54:58,799
end i save it and i calculate the delta

1399
00:54:58,799 --> 00:55:01,520
off of there and so you can see both

1400
00:55:01,520 --> 00:55:05,040
ends are properly processing the

1401
00:55:05,040 --> 00:55:08,480
previous pdm that was also received at

1402
00:55:08,480 --> 00:55:09,680
their end

1403
00:55:09,680 --> 00:55:12,319
next please

1404
00:55:12,880 --> 00:55:16,559
now you can see both the uh pdm and the

1405
00:55:16,559 --> 00:55:18,720
fragment header

1406
00:55:18,720 --> 00:55:22,480
again wireshark is a delightful tool

1407
00:55:22,480 --> 00:55:24,880
next please

1408
00:55:24,880 --> 00:55:27,440
so in the bottom line

1409
00:55:27,440 --> 00:55:28,960
all the traces

1410
00:55:28,960 --> 00:55:31,760
worked i mean all the ftps worked with

1411
00:55:31,760 --> 00:55:34,400
this very large

1412
00:55:34,400 --> 00:55:35,280
file

1413
00:55:35,280 --> 00:55:37,680
we also have

1414
00:55:37,680 --> 00:55:41,599
apache set up to these and we have been

1415
00:55:41,599 --> 00:55:44,000
doing testing from

1416
00:55:44,000 --> 00:55:45,760
here

1417
00:55:45,760 --> 00:55:47,680
over to

1418
00:55:47,680 --> 00:55:50,079
i believe warsaw and we also have

1419
00:55:50,079 --> 00:55:54,640
melbourne set up so these sites um are

1420
00:55:54,640 --> 00:55:58,240
set up to do apache over the ietf

1421
00:55:58,240 --> 00:56:00,960
network and if you wish to see the

1422
00:56:00,960 --> 00:56:04,319
results of those please come see us at

1423
00:56:04,319 --> 00:56:05,760
the hackathon

1424
00:56:05,760 --> 00:56:07,760
and i will leave it i won't tell you

1425
00:56:07,760 --> 00:56:10,079
whether it worked or not you'll have to

1426
00:56:10,079 --> 00:56:13,119
come down and see for yourselves

1427
00:56:13,119 --> 00:56:15,520
next please

1428
00:56:15,520 --> 00:56:17,280
so

1429
00:56:17,280 --> 00:56:19,280
then some of the people were like you

1430
00:56:19,280 --> 00:56:21,359
know internally some of people in the

1431
00:56:21,359 --> 00:56:23,599
group are like wait a minute women okay

1432
00:56:23,599 --> 00:56:26,720
so you're using one hosting service why

1433
00:56:26,720 --> 00:56:29,119
are your results so different from other

1434
00:56:29,119 --> 00:56:31,920
people's are these people using some

1435
00:56:31,920 --> 00:56:35,200
kind of overlay network now keep in mind

1436
00:56:35,200 --> 00:56:37,119
this is a small

1437
00:56:37,119 --> 00:56:38,960
no-name

1438
00:56:38,960 --> 00:56:41,680
service which i did not think had the

1439
00:56:41,680 --> 00:56:44,720
money to have their own servers all over

1440
00:56:44,720 --> 00:56:45,760
the world

1441
00:56:45,760 --> 00:56:46,880
but

1442
00:56:46,880 --> 00:56:50,319
nevertheless one wishes to verify one's

1443
00:56:50,319 --> 00:56:53,520
results so i sent them an email

1444
00:56:53,520 --> 00:56:57,760
and i said do you guys have some kind of

1445
00:56:57,760 --> 00:57:01,520
overlay network and they said no we do

1446
00:57:01,520 --> 00:57:05,599
not we go over the public internet

1447
00:57:05,599 --> 00:57:07,920
next please

1448
00:57:07,920 --> 00:57:09,200
i then

1449
00:57:09,200 --> 00:57:11,440
wished to validate

1450
00:57:11,440 --> 00:57:14,799
what they said so i did a trace route we

1451
00:57:14,799 --> 00:57:19,200
have also done mtr between these sites

1452
00:57:19,200 --> 00:57:22,880
and you can see there is at least one

1453
00:57:22,880 --> 00:57:26,799
and actually multiple transit networks

1454
00:57:26,799 --> 00:57:30,559
involved which also all passed these

1455
00:57:30,559 --> 00:57:33,440
extension headers correctly

1456
00:57:33,440 --> 00:57:35,440
next please

1457
00:57:35,440 --> 00:57:36,799
so

1458
00:57:36,799 --> 00:57:37,680
why

1459
00:57:37,680 --> 00:57:40,640
are our results so different from other

1460
00:57:40,640 --> 00:57:42,079
people's

1461
00:57:42,079 --> 00:57:44,160
so what we believe

1462
00:57:44,160 --> 00:57:47,839
is that we are using a real data and a

1463
00:57:47,839 --> 00:57:51,200
real extension header and not

1464
00:57:51,200 --> 00:57:53,200
fake data which

1465
00:57:53,200 --> 00:57:56,880
may validly be dropped by thing by

1466
00:57:56,880 --> 00:57:59,599
people we are also not

1467
00:57:59,599 --> 00:58:02,720
going to the alexa top um

1468
00:58:02,720 --> 00:58:03,920
whatever

1469
00:58:03,920 --> 00:58:06,319
um and this becomes important because we

1470
00:58:06,319 --> 00:58:09,119
said well let's see whether

1471
00:58:09,119 --> 00:58:11,599
our results are also consistent with

1472
00:58:11,599 --> 00:58:14,319
other people's and indeed

1473
00:58:14,319 --> 00:58:17,760
if you use the large hosting companies

1474
00:58:17,760 --> 00:58:22,480
and go to the alexa top whatever indeed

1475
00:58:22,480 --> 00:58:25,440
there are issues but the question is

1476
00:58:25,440 --> 00:58:26,799
well why

1477
00:58:26,799 --> 00:58:28,079
because

1478
00:58:28,079 --> 00:58:29,839
in our mind

1479
00:58:29,839 --> 00:58:33,200
uh these things are not being blocked at

1480
00:58:33,200 --> 00:58:36,960
the core of the internet so where are

1481
00:58:36,960 --> 00:58:38,720
they being blocked

1482
00:58:38,720 --> 00:58:41,439
next please

1483
00:58:42,640 --> 00:58:44,400
so

1484
00:58:44,400 --> 00:58:48,160
what we did was we did pings and trace

1485
00:58:48,160 --> 00:58:51,440
routes from our pdm enabled machine

1486
00:58:51,440 --> 00:58:55,040
remember we have a patch to the kernel

1487
00:58:55,040 --> 00:58:58,559
which will send our destination option

1488
00:58:58,559 --> 00:59:01,040
out with every packet

1489
00:59:01,040 --> 00:59:04,559
whether it is a udp packet or icmp

1490
00:59:04,559 --> 00:59:07,200
packet which are both used for

1491
00:59:07,200 --> 00:59:09,200
traceroute or ping

1492
00:59:09,200 --> 00:59:12,880
and so what we wanted to see was

1493
00:59:12,880 --> 00:59:17,119
let's say that our pdm enabled trace

1494
00:59:17,119 --> 00:59:20,400
route does not get through but the

1495
00:59:20,400 --> 00:59:22,160
non-pdm

1496
00:59:22,160 --> 00:59:25,599
enabled trace route does get through

1497
00:59:25,599 --> 00:59:27,599
where does it stop

1498
00:59:27,599 --> 00:59:31,440
for example if there are eight hops

1499
00:59:31,440 --> 00:59:32,720
between

1500
00:59:32,720 --> 00:59:36,079
ourselves and say facebook

1501
00:59:36,079 --> 00:59:36,960
then

1502
00:59:36,960 --> 00:59:41,520
is it always dropped at hop um seven

1503
00:59:41,520 --> 00:59:46,000
or is it always dropped at hop three or

1504
00:59:46,000 --> 00:59:49,200
is there a random number where it is

1505
00:59:49,200 --> 00:59:51,359
dropped

1506
00:59:51,359 --> 00:59:53,920
the question being is

1507
00:59:53,920 --> 00:59:55,760
did it get to the

1508
00:59:55,760 --> 00:59:59,040
destination network or the edge of the

1509
00:59:59,040 --> 01:00:01,680
destination network or

1510
01:00:01,680 --> 01:00:06,160
was it dropped randomly somewhere else

1511
01:00:06,160 --> 01:00:07,920
next please

1512
01:00:07,920 --> 01:00:11,359
and you can see in the traceroute packet

1513
01:00:11,359 --> 01:00:12,960
capture

1514
01:00:12,960 --> 01:00:15,599
that all these packets come back and you

1515
01:00:15,599 --> 01:00:18,480
can see the psns showing that there was

1516
01:00:18,480 --> 01:00:21,839
pdm in next police

1517
01:00:21,839 --> 01:00:24,559
and so what we are doing now is

1518
01:00:24,559 --> 01:00:27,599
summarizing all this information and the

1519
01:00:27,599 --> 01:00:29,200
important thing

1520
01:00:29,200 --> 01:00:30,720
is to do

1521
01:00:30,720 --> 01:00:34,160
a dns resolution for the

1522
01:00:34,160 --> 01:00:36,960
the hop of interest

1523
01:00:36,960 --> 01:00:39,839
because it turns out

1524
01:00:39,839 --> 01:00:43,680
that going to the alexa top whatever

1525
01:00:43,680 --> 01:00:45,599
you're actually not

1526
01:00:45,599 --> 01:00:48,160
going to facebook or google you're

1527
01:00:48,160 --> 01:00:51,920
probably going to some cdn of that is

1528
01:00:51,920 --> 01:00:55,839
you're going to akamy cloudflare at all

1529
01:00:55,839 --> 01:00:57,040
and so

1530
01:00:57,040 --> 01:01:01,759
where is it dropped next please

1531
01:01:01,920 --> 01:01:06,480
i shall also leave that for next time

1532
01:01:07,119 --> 01:01:08,079
as

1533
01:01:08,079 --> 01:01:11,440
we will have we will have a draft in v6

1534
01:01:11,440 --> 01:01:15,200
ops summarizing all our results and and

1535
01:01:15,200 --> 01:01:18,079
i'm i'm only sort of kidding about about

1536
01:01:18,079 --> 01:01:19,680
some of this it's like we are we're

1537
01:01:19,680 --> 01:01:22,319
actually doing all these dns resolutions

1538
01:01:22,319 --> 01:01:24,000
and we're having some internal

1539
01:01:24,000 --> 01:01:26,240
discussions which we wish to be

1540
01:01:26,240 --> 01:01:29,839
completely in accord on on exactly what

1541
01:01:29,839 --> 01:01:32,559
is it that we're seeing um and so once

1542
01:01:32,559 --> 01:01:34,480
the team

1543
01:01:34,480 --> 01:01:35,280
is

1544
01:01:35,280 --> 01:01:37,200
is in sync then we will present the

1545
01:01:37,200 --> 01:01:38,799
results

1546
01:01:38,799 --> 01:01:40,119
we welcome

1547
01:01:40,119 --> 01:01:41,680
collaborators

1548
01:01:41,680 --> 01:01:46,640
we wish for others to test and validate

1549
01:01:46,640 --> 01:01:49,920
our results and if you wish to

1550
01:01:49,920 --> 01:01:52,400
collaborate we can make

1551
01:01:52,400 --> 01:01:54,160
our virtual machine

1552
01:01:54,160 --> 01:01:58,000
with pdm enabled and you may test for

1553
01:01:58,000 --> 01:02:02,240
yourself again we want to be careful

1554
01:02:02,240 --> 01:02:04,319
because

1555
01:02:04,319 --> 01:02:08,960
if our results are indeed correct

1556
01:02:08,960 --> 01:02:11,119
letting this kind of thing

1557
01:02:11,119 --> 01:02:14,640
loose on the internet um

1558
01:02:14,640 --> 01:02:18,720
for anyone to use at all for any reason

1559
01:02:18,720 --> 01:02:20,799
could create some

1560
01:02:20,799 --> 01:02:23,119
potential issues

1561
01:02:23,119 --> 01:02:25,520
so please come talk to us at the

1562
01:02:25,520 --> 01:02:28,319
hackathon and hack demo and we can uh

1563
01:02:28,319 --> 01:02:31,039
show you the results uh if you wish to

1564
01:02:31,039 --> 01:02:32,880
test yourself

1565
01:02:32,880 --> 01:02:35,359
we can work with you and you can do a

1566
01:02:35,359 --> 01:02:39,119
trace route ping or actually go into our

1567
01:02:39,119 --> 01:02:42,079
apache and take a packet trace for

1568
01:02:42,079 --> 01:02:45,359
yourself and see what happens

1569
01:02:45,359 --> 01:02:49,839
any question is that it any questions

1570
01:02:50,480 --> 01:02:52,160
so thank you i think this is fascinating

1571
01:02:52,160 --> 01:02:53,680
and how different these results are to

1572
01:02:53,680 --> 01:02:55,119
some of the other ones i think it's

1573
01:02:55,119 --> 01:02:56,559
interesting and hopefully we can find

1574
01:02:56,559 --> 01:02:59,760
out you know why why yeah

1575
01:02:59,760 --> 01:03:02,880
we welcome collaborators even collab and

1576
01:03:02,880 --> 01:03:04,880
especially if collaborators have

1577
01:03:04,880 --> 01:03:07,200
interest in in uh

1578
01:03:07,200 --> 01:03:09,280
discussing or rather fighting amongst

1579
01:03:09,280 --> 01:03:11,839
ourselves as to why we're seeing what

1580
01:03:11,839 --> 01:03:13,520
we're seeing

1581
01:03:13,520 --> 01:03:16,400
jen hi angeline actually i don't think

1582
01:03:16,400 --> 01:03:18,240
they're really different from what other

1583
01:03:18,240 --> 01:03:20,640
people see because most of the results

1584
01:03:20,640 --> 01:03:21,839
i've seen

1585
01:03:21,839 --> 01:03:25,200
is packet draw packets being dropped

1586
01:03:25,200 --> 01:03:26,880
near the last

1587
01:03:26,880 --> 01:03:29,119
near the destination network or even

1588
01:03:29,119 --> 01:03:31,839
source network if it's user cpu right so

1589
01:03:31,839 --> 01:03:34,880
transits normally let them through so i

1590
01:03:34,880 --> 01:03:37,440
do not see really conflict with your

1591
01:03:37,440 --> 01:03:40,079
results with any other right

1592
01:03:40,079 --> 01:03:40,960
like

1593
01:03:40,960 --> 01:03:42,799
so it's not normally the destination

1594
01:03:42,799 --> 01:03:45,359
network drops it and if your vantage

1595
01:03:45,359 --> 01:03:47,280
points permit them

1596
01:03:47,280 --> 01:03:50,319
yeah i'm not surprised you see them

1597
01:03:50,319 --> 01:03:51,920
going through

1598
01:03:51,920 --> 01:03:54,319
and a question is there any reason

1599
01:03:54,319 --> 01:03:57,039
you're doing dns lookups instead of

1600
01:03:57,039 --> 01:04:00,079
looking at is numbers

1601
01:04:00,079 --> 01:04:02,400
because i think is number might give you

1602
01:04:02,400 --> 01:04:04,240
a better indication who actually

1603
01:04:04,240 --> 01:04:06,079
controls that hope

1604
01:04:06,079 --> 01:04:08,240
we can certainly do that we can the

1605
01:04:08,240 --> 01:04:11,440
reason i was doing dns uh well i'm not

1606
01:04:11,440 --> 01:04:13,359
okay so a couple um

1607
01:04:13,359 --> 01:04:14,480
all right let me answer that one and

1608
01:04:14,480 --> 01:04:15,920
then i'll go back to some of the other

1609
01:04:15,920 --> 01:04:18,960
comments you had it's because to me

1610
01:04:18,960 --> 01:04:21,599
i won it's like for me it seems really

1611
01:04:21,599 --> 01:04:22,960
obvious it's like

1612
01:04:22,960 --> 01:04:25,280
it's like if how close did it get so

1613
01:04:25,280 --> 01:04:28,079
like if akamai for example not to pick

1614
01:04:28,079 --> 01:04:30,319
on akamai a wonderful company is if

1615
01:04:30,319 --> 01:04:32,480
they're hosting your site

1616
01:04:32,480 --> 01:04:32,900
and you're

1617
01:04:32,900 --> 01:04:34,799
[Laughter]

1618
01:04:34,799 --> 01:04:37,359
and you're already

1619
01:04:37,359 --> 01:04:38,559
at

1620
01:04:38,559 --> 01:04:41,280
the edge of the akamai network and then

1621
01:04:41,280 --> 01:04:43,280
you get dropped

1622
01:04:43,280 --> 01:04:46,400
then i think the question is

1623
01:04:46,400 --> 01:04:50,400
is our packets being dropped at random

1624
01:04:50,400 --> 01:04:53,760
points in the core of the internet or at

1625
01:04:53,760 --> 01:04:56,160
the edge of the destination network

1626
01:04:56,160 --> 01:04:59,520
those are two very different questions

1627
01:04:59,520 --> 01:05:01,520
yeah i totally agree i'm just trying you

1628
01:05:01,520 --> 01:05:03,520
trying to find out which network drops

1629
01:05:03,520 --> 01:05:05,039
the packet right so i'm trying to

1630
01:05:05,039 --> 01:05:07,920
understand why you are using dns to find

1631
01:05:07,920 --> 01:05:10,480
out who owns that ip address instead of

1632
01:05:10,480 --> 01:05:12,880
using ies number attribution for this

1633
01:05:12,880 --> 01:05:16,079
address because dns might be my

1634
01:05:16,079 --> 01:05:18,640
ptr might not even exist while that

1635
01:05:18,640 --> 01:05:20,799
address definitely belongs to some is

1636
01:05:20,799 --> 01:05:22,480
number which indicates who owns the

1637
01:05:22,480 --> 01:05:25,280
device usually

1638
01:05:25,280 --> 01:05:27,920
sure sure we can we can do either you

1639
01:05:27,920 --> 01:05:30,960
know either one i mean i mean yeah

1640
01:05:30,960 --> 01:05:33,760
fine we can use as number

1641
01:05:33,760 --> 01:05:34,799
yeah

1642
01:05:34,799 --> 01:05:36,960
but

1643
01:05:39,520 --> 01:05:42,400
as i say we welcome uh collaborators and

1644
01:05:42,400 --> 01:05:45,359
and if you want to see our results live

1645
01:05:45,359 --> 01:05:48,720
um we're happy uh to talk to you at the

1646
01:05:48,720 --> 01:05:51,440
at the hackathon and yeah maybe present

1647
01:05:51,440 --> 01:05:54,240
come back next time as well we'll get

1648
01:05:54,240 --> 01:05:55,680
oh happy birthday

1649
01:05:55,680 --> 01:05:58,079
no happy to do that

1650
01:05:58,079 --> 01:06:00,480
i um just wanted to put a one that was

1651
01:06:00,480 --> 01:06:02,960
in the chat um anna asked do you plan to

1652
01:06:02,960 --> 01:06:04,720
do any hop by hop extension header

1653
01:06:04,720 --> 01:06:05,839
testing

1654
01:06:05,839 --> 01:06:06,880
we're actually doing that in the

1655
01:06:06,880 --> 01:06:09,280
hackathon we're trying to break the rfcs

1656
01:06:09,280 --> 01:06:11,440
so yeah come and we'll present actually

1657
01:06:11,440 --> 01:06:13,599
we we're looking specifically at hot by

1658
01:06:13,599 --> 01:06:14,960
hop and

1659
01:06:14,960 --> 01:06:16,880
the results are a little bit interesting

1660
01:06:16,880 --> 01:06:18,880
a little bit scary also

1661
01:06:18,880 --> 01:06:21,119
hence the security considerations and

1662
01:06:21,119 --> 01:06:22,799
we'll present more on it at the

1663
01:06:22,799 --> 01:06:24,319
hackathon

1664
01:06:24,319 --> 01:06:26,960
by the way and anthony is a member of

1665
01:06:26,960 --> 01:06:29,839
our hackathon team and he's and and

1666
01:06:29,839 --> 01:06:32,240
liquid is is um we're happy to have them

1667
01:06:32,240 --> 01:06:35,520
working with us at the hackathon

1668
01:06:35,520 --> 01:06:37,280
and i'm part of these troublemakers too

1669
01:06:37,280 --> 01:06:38,960
and i just wanted to add to what anthony

1670
01:06:38,960 --> 01:06:41,039
said and in response to that question

1671
01:06:41,039 --> 01:06:42,880
that a key

1672
01:06:42,880 --> 01:06:45,280
determining factor of why these results

1673
01:06:45,280 --> 01:06:47,280
are occurring we think

1674
01:06:47,280 --> 01:06:48,079
is

1675
01:06:48,079 --> 01:06:50,400
the type of extension header like hop by

1676
01:06:50,400 --> 01:06:51,839
hot might be different

1677
01:06:51,839 --> 01:06:55,280
than doh and the content of the data in

1678
01:06:55,280 --> 01:06:56,799
that so

1679
01:06:56,799 --> 01:06:59,200
those are key factors we think we

1680
01:06:59,200 --> 01:07:00,799
questioned whoever asked that yeah yeah

1681
01:07:00,799 --> 01:07:02,960
yeah great yeah you guys great team and

1682
01:07:02,960 --> 01:07:06,559
yes i we think that

1683
01:07:06,559 --> 01:07:09,520
it wouldn't it should not be a surprise

1684
01:07:09,520 --> 01:07:12,559
if fake data is dropped i think that

1685
01:07:12,559 --> 01:07:14,400
actually speaks to good code at

1686
01:07:14,400 --> 01:07:17,440
somebody's firewall

1687
01:07:21,680 --> 01:07:25,799
hello hi i'm

1688
01:07:28,000 --> 01:07:30,240
a little bit nasty question

1689
01:07:30,240 --> 01:07:31,839
please

1690
01:07:31,839 --> 01:07:35,200
what kind of bad conclusions uh do we

1691
01:07:35,200 --> 01:07:38,000
expect to result from your claim that

1692
01:07:38,000 --> 01:07:42,039
packets cannot lie

1693
01:07:44,400 --> 01:07:46,559
that's a good one that's a good one they

1694
01:07:46,559 --> 01:07:48,720
can't they just don't

1695
01:07:48,720 --> 01:07:51,119
no no i mean again yes yes yes you know

1696
01:07:51,119 --> 01:07:53,280
what i'm not going to distract on some

1697
01:07:53,280 --> 01:07:55,359
people who claim to have

1698
01:07:55,359 --> 01:07:58,960
packet traces of voting machines

1699
01:07:58,960 --> 01:08:00,880
anyway okay i'll just stop right there i

1700
01:08:00,880 --> 01:08:03,200
will stop right there okay

1701
01:08:03,200 --> 01:08:04,079
yeah

1702
01:08:04,079 --> 01:08:06,480
okay okay thank you guys thank you very

1703
01:08:06,480 --> 01:08:10,160
much and our final presentation for the

1704
01:08:10,160 --> 01:08:12,160
iapg this time

1705
01:08:12,160 --> 01:08:15,440
is going to be jeff houston

1706
01:08:15,440 --> 01:08:18,719
who is going to be presenting on a quick

1707
01:08:18,719 --> 01:08:22,279
look at quick

1708
01:08:26,560 --> 01:08:29,920
the red square good morning all um

1709
01:08:29,920 --> 01:08:31,839
thank you this is

1710
01:08:31,839 --> 01:08:34,880
a very quick look at the use of the

1711
01:08:34,880 --> 01:08:38,880
quick protocol out in the wild

1712
01:08:38,880 --> 01:08:40,238
and i want to sort of compare and

1713
01:08:40,238 --> 01:08:44,479
contrast theory and practice next slide

1714
01:08:45,520 --> 01:08:48,080
next slide

1715
01:08:48,399 --> 01:08:49,920
someone yeah okay

1716
01:08:49,920 --> 01:08:53,359
you all know this next slide

1717
01:08:53,359 --> 01:08:57,040
well you all know that too next slide

1718
01:08:57,359 --> 01:08:58,719
yeah pushing a lot of buttons very

1719
01:08:58,719 --> 01:09:01,439
quickly so as some of you might be aware

1720
01:09:01,439 --> 01:09:03,359
we've actually tried to do large-scale

1721
01:09:03,359 --> 01:09:04,560
measurement

1722
01:09:04,560 --> 01:09:06,238
by actually with some support from

1723
01:09:06,238 --> 01:09:08,880
google by by actually enrolling

1724
01:09:08,880 --> 01:09:11,120
around 20 million people a day through

1725
01:09:11,120 --> 01:09:13,679
use of an ad advertisement campaign

1726
01:09:13,679 --> 01:09:15,920
where the ad actually contains

1727
01:09:15,920 --> 01:09:18,719
a scripted set of url fetches

1728
01:09:18,719 --> 01:09:21,679
and and if you look at the dns

1729
01:09:21,679 --> 01:09:24,479
and regard dns query labels as actually

1730
01:09:24,479 --> 01:09:27,040
microcoded instructions

1731
01:09:27,040 --> 01:09:29,679
and make the servers give unique answers

1732
01:09:29,679 --> 01:09:31,600
every time a query hits it

1733
01:09:31,600 --> 01:09:33,359
you can actually bypass most of the

1734
01:09:33,359 --> 01:09:35,520
internet's normal caching

1735
01:09:35,520 --> 01:09:37,920
and expose the client to your own

1736
01:09:37,920 --> 01:09:39,120
servers

1737
01:09:39,120 --> 01:09:40,719
so unlike lots of other measurements

1738
01:09:40,719 --> 01:09:42,399
like measurements the alexa where one

1739
01:09:42,399 --> 01:09:44,719
point measures a hundred or a thousand

1740
01:09:44,719 --> 01:09:47,040
or a million sort of remote points we're

1741
01:09:47,040 --> 01:09:49,040
actually enlisting

1742
01:09:49,040 --> 01:09:51,839
millions of unique users every day

1743
01:09:51,839 --> 01:09:54,800
to come to a small collection of servers

1744
01:09:54,800 --> 01:09:57,360
which are on vms around the world

1745
01:09:57,360 --> 01:09:59,520
now we did this initially

1746
01:09:59,520 --> 01:10:01,760
to actually dispel the myth

1747
01:10:01,760 --> 01:10:04,880
around ipv6 deployment is big

1748
01:10:04,880 --> 01:10:06,960
non-existent whatever

1749
01:10:06,960 --> 01:10:09,199
with very little measurement behind it

1750
01:10:09,199 --> 01:10:11,280
and so we started doing this ad campaign

1751
01:10:11,280 --> 01:10:12,480
to actually

1752
01:10:12,480 --> 01:10:14,320
enroll a whole bunch of users and say

1753
01:10:14,320 --> 01:10:16,719
here's the thing you can get to only if

1754
01:10:16,719 --> 01:10:18,960
you have v6 and here's another thing you

1755
01:10:18,960 --> 01:10:20,480
can get to which is dual protocol and

1756
01:10:20,480 --> 01:10:22,000
we're kind of interested which protocol

1757
01:10:22,000 --> 01:10:23,440
you use

1758
01:10:23,440 --> 01:10:25,760
this was actually

1759
01:10:25,760 --> 01:10:27,440
a revelation

1760
01:10:27,440 --> 01:10:29,360
because it kind of dispelled at the time

1761
01:10:29,360 --> 01:10:30,640
the myth that there was an awful lot of

1762
01:10:30,640 --> 01:10:33,600
e6 around there at the time

1763
01:10:33,600 --> 01:10:35,600
and exposed exactly where it was and why

1764
01:10:35,600 --> 01:10:37,920
and we thought well we can go further

1765
01:10:37,920 --> 01:10:40,560
and we started looking at dns sec

1766
01:10:40,560 --> 01:10:42,480
because again if you say well here's a

1767
01:10:42,480 --> 01:10:45,040
name that's not validly signed

1768
01:10:45,040 --> 01:10:47,040
the number of people that go to it is

1769
01:10:47,040 --> 01:10:48,560
kind of well you're not validating are

1770
01:10:48,560 --> 01:10:50,080
you you've got a resolver out there that

1771
01:10:50,080 --> 01:10:51,840
just doesn't care about the dns

1772
01:10:51,840 --> 01:10:53,120
validation

1773
01:10:53,120 --> 01:10:55,440
and then we started around ipv6

1774
01:10:55,440 --> 01:10:59,600
fragmentation and yeah extension headers

1775
01:10:59,600 --> 01:11:01,760
and yeah completely different outcomes

1776
01:11:01,760 --> 01:11:03,280
to to where

1777
01:11:03,280 --> 01:11:05,120
nalani is reporting

1778
01:11:05,120 --> 01:11:07,280
um completely different

1779
01:11:07,280 --> 01:11:08,960
it has a lot to do with the experimental

1780
01:11:08,960 --> 01:11:11,520
technique we have no control over what

1781
01:11:11,520 --> 01:11:14,239
end users run this it's basically the ad

1782
01:11:14,239 --> 01:11:16,880
campaigns do all the enrolling so this

1783
01:11:16,880 --> 01:11:19,360
is really the internet as measured from

1784
01:11:19,360 --> 01:11:21,520
the outside you and i

1785
01:11:21,520 --> 01:11:23,760
as we look into the infrastructure

1786
01:11:23,760 --> 01:11:25,199
and so we thought well okay let's

1787
01:11:25,199 --> 01:11:27,360
actually expose the same thing

1788
01:11:27,360 --> 01:11:30,719
for quick next slide

1789
01:11:31,840 --> 01:11:35,040
and this is relatively vanilla stuff

1790
01:11:35,040 --> 01:11:38,000
nginx has now got a beta version of its

1791
01:11:38,000 --> 01:11:40,000
server that has all the quick functions

1792
01:11:40,000 --> 01:11:44,159
enabled and so we're running 121.7

1793
01:11:44,159 --> 01:11:45,840
we looked at what apple have done

1794
01:11:45,840 --> 01:11:48,560
recently with ios i think 15 was the

1795
01:11:48,560 --> 01:11:50,159
first to actually release it it might

1796
01:11:50,159 --> 01:11:51,360
have been earlier i don't know but

1797
01:11:51,360 --> 01:11:52,960
certainly in 15

1798
01:11:52,960 --> 01:11:56,159
where those devices in particular will

1799
01:11:56,159 --> 01:11:59,760
actually do an https dns query

1800
01:11:59,760 --> 01:12:01,520
and look for that

1801
01:12:01,520 --> 01:12:03,280
alpn record

1802
01:12:03,280 --> 01:12:04,239
and so

1803
01:12:04,239 --> 01:12:06,480
we effectively create a dynamically

1804
01:12:06,480 --> 01:12:09,280
synthesized alpn value for every single

1805
01:12:09,280 --> 01:12:11,600
unique dns name that we're using

1806
01:12:11,600 --> 01:12:14,080
and so the https record is there

1807
01:12:14,080 --> 01:12:16,640
predominantly for those apple devices

1808
01:12:16,640 --> 01:12:18,480
and of course there's the alt service

1809
01:12:18,480 --> 01:12:20,159
header which has been traditionally used

1810
01:12:20,159 --> 01:12:21,440
by chrome

1811
01:12:21,440 --> 01:12:24,400
now i should make a note about that

1812
01:12:24,400 --> 01:12:26,400
because you're only going to see that

1813
01:12:26,400 --> 01:12:28,400
there's an alt service record if you go

1814
01:12:28,400 --> 01:12:29,679
and get it

1815
01:12:29,679 --> 01:12:31,199
and if you don't go and get it you don't

1816
01:12:31,199 --> 01:12:32,480
know if it's there

1817
01:12:32,480 --> 01:12:35,120
so you need to actually get the thing

1818
01:12:35,120 --> 01:12:37,199
presented twice

1819
01:12:37,199 --> 01:12:39,600
now with ads we normally say here's a

1820
01:12:39,600 --> 01:12:42,000
list of urls they've all got unique

1821
01:12:42,000 --> 01:12:44,320
names you only see them once

1822
01:12:44,320 --> 01:12:45,840
it doesn't matter what you put in there

1823
01:12:45,840 --> 01:12:48,560
it isn't going to get triggered

1824
01:12:48,560 --> 01:12:52,000
so we then revise the script slightly

1825
01:12:52,000 --> 01:12:53,440
and for a couple of these ones

1826
01:12:53,440 --> 01:12:54,960
particularly this one

1827
01:12:54,960 --> 01:12:56,320
we wait

1828
01:12:56,320 --> 01:12:59,199
um and we actually wait for two seconds

1829
01:12:59,199 --> 01:13:01,120
which is an interesting number

1830
01:13:01,120 --> 01:13:03,440
um we wait for two seconds then we tell

1831
01:13:03,440 --> 01:13:04,560
the user

1832
01:13:04,560 --> 01:13:06,239
go get it again

1833
01:13:06,239 --> 01:13:09,280
same dns name but we alter the http

1834
01:13:09,280 --> 01:13:11,040
query args

1835
01:13:11,040 --> 01:13:14,000
and hopefully altering those query args

1836
01:13:14,000 --> 01:13:17,280
seems to defeat most values of https

1837
01:13:17,280 --> 01:13:20,960
proxy if that's what you're behind

1838
01:13:20,960 --> 01:13:23,040
so the idea is for about a fifth of our

1839
01:13:23,040 --> 01:13:24,880
experiments we do two fetches for

1840
01:13:24,880 --> 01:13:26,880
everyone else we just do one

1841
01:13:26,880 --> 01:13:29,600
next slide

1842
01:13:29,920 --> 01:13:32,880
yeah said that next

1843
01:13:32,880 --> 01:13:35,040
so these are the big answers we've got

1844
01:13:35,040 --> 01:13:36,800
we've only started running this in june

1845
01:13:36,800 --> 01:13:38,560
at sort of a massive level of deployment

1846
01:13:38,560 --> 01:13:39,920
we're doing around

1847
01:13:39,920 --> 01:13:42,719
15 to 20 million experiments every day

1848
01:13:42,719 --> 01:13:44,880
across a unique batch of users thank you

1849
01:13:44,880 --> 01:13:48,400
ad engine and i'm contrasting

1850
01:13:48,400 --> 01:13:51,600
the second fetch to the first fetch

1851
01:13:51,600 --> 01:13:53,600
because i can see the difference

1852
01:13:53,600 --> 01:13:55,280
the first fetch

1853
01:13:55,280 --> 01:13:57,840
is really really low

1854
01:13:57,840 --> 01:13:59,760
one percent

1855
01:13:59,760 --> 01:14:02,400
so if you put something out there

1856
01:14:02,400 --> 01:14:06,320
even with the dns https record about one

1857
01:14:06,320 --> 01:14:08,480
in 100 users will actually go and say

1858
01:14:08,480 --> 01:14:10,480
well i'm going to use http 3 i'm going

1859
01:14:10,480 --> 01:14:11,679
to use quick

1860
01:14:11,679 --> 01:14:14,800
the other 99 go yeah

1861
01:14:14,800 --> 01:14:17,679
if you do the second fetch and in our

1862
01:14:17,679 --> 01:14:19,199
case

1863
01:14:19,199 --> 01:14:21,440
the browser is scripted with a two

1864
01:14:21,440 --> 01:14:23,360
second delay

1865
01:14:23,360 --> 01:14:26,320
now i don't know what browsers do inside

1866
01:14:26,320 --> 01:14:28,800
browser code i don't know if any human

1867
01:14:28,800 --> 01:14:31,120
alive knows what browsers do inside the

1868
01:14:31,120 --> 01:14:33,040
browser code there's an awful lot of

1869
01:14:33,040 --> 01:14:36,239
code and a huge amount of complexity

1870
01:14:36,239 --> 01:14:38,640
we issue the get command inside the

1871
01:14:38,640 --> 01:14:40,719
script after two second wait what

1872
01:14:40,719 --> 01:14:43,199
happens after that is browser magic but

1873
01:14:43,199 --> 01:14:45,280
the number is still pretty low 3.5

1874
01:14:45,280 --> 01:14:46,640
percent

1875
01:14:46,640 --> 01:14:48,880
next slide

1876
01:14:48,880 --> 01:14:50,640
so where

1877
01:14:50,640 --> 01:14:52,080
um

1878
01:14:52,080 --> 01:14:54,000
ads give us an enormous amount of detail

1879
01:14:54,000 --> 01:14:56,480
origin as network et cetera they also

1880
01:14:56,480 --> 01:14:59,520
with a rudimentary form of geolocation

1881
01:14:59,520 --> 01:15:02,640
we use max mind

1882
01:15:02,640 --> 01:15:04,719
with a huge amount of kerfuffle recently

1883
01:15:04,719 --> 01:15:06,880
to accommodate apple's private relay

1884
01:15:06,880 --> 01:15:08,880
service thank you apple really

1885
01:15:08,880 --> 01:15:11,199
appreciate it because a lot of folk use

1886
01:15:11,199 --> 01:15:13,199
it and you've got to sort of flick the

1887
01:15:13,199 --> 01:15:17,360
countries around to map apple's map

1888
01:15:17,360 --> 01:15:19,520
so this is now corrected for apple thank

1889
01:15:19,520 --> 01:15:20,320
you

1890
01:15:20,320 --> 01:15:22,239
but there are some surprises going on as

1891
01:15:22,239 --> 01:15:23,679
to what sort of

1892
01:15:23,679 --> 01:15:25,920
used extensively and what's not and what

1893
01:15:25,920 --> 01:15:27,440
i'm seeing in front of me is much better

1894
01:15:27,440 --> 01:15:28,880
than what you're seeing there so if you

1895
01:15:28,880 --> 01:15:30,960
look online you'll actually see that the

1896
01:15:30,960 --> 01:15:33,520
scandies are green

1897
01:15:33,520 --> 01:15:35,760
india is red

1898
01:15:35,760 --> 01:15:38,640
there's some kind of weird geolocation

1899
01:15:38,640 --> 01:15:39,840
thing

1900
01:15:39,840 --> 01:15:42,560
going on inside browsers

1901
01:15:42,560 --> 01:15:43,840
because i

1902
01:15:43,840 --> 01:15:45,440
pretty damn sure it's nothing to do with

1903
01:15:45,440 --> 01:15:47,440
networks next slide

1904
01:15:47,440 --> 01:15:50,239
so that's curious and here's a table

1905
01:15:50,239 --> 01:15:53,920
malta um 28 on the second query 1.4 on

1906
01:15:53,920 --> 01:15:57,520
the first central african republic in

1907
01:15:57,520 --> 01:15:59,199
africa

1908
01:15:59,199 --> 01:16:01,520
wouldn't have guessed it um but this is

1909
01:16:01,520 --> 01:16:02,960
not

1910
01:16:02,960 --> 01:16:04,560
if you will

1911
01:16:04,560 --> 01:16:06,719
a predictable list but there are

1912
01:16:06,719 --> 01:16:09,600
certainly systematic variations there

1913
01:16:09,600 --> 01:16:11,679
around locales

1914
01:16:11,679 --> 01:16:13,600
next slide

1915
01:16:13,600 --> 01:16:16,880
hi a question quick question have you

1916
01:16:16,880 --> 01:16:18,239
have you asked chrome whether they have

1917
01:16:18,239 --> 01:16:20,080
an experiment running that would match

1918
01:16:20,080 --> 01:16:21,360
this

1919
01:16:21,360 --> 01:16:24,480
have i also sorry i'll do that have you

1920
01:16:24,480 --> 01:16:26,400
asked chrome whether they have an

1921
01:16:26,400 --> 01:16:28,960
experiment running that would match that

1922
01:16:28,960 --> 01:16:31,920
i've asked apple but not chrome

1923
01:16:31,920 --> 01:16:33,520
and part of the idea of airing this is

1924
01:16:33,520 --> 01:16:35,040
there will be questions to chrome as

1925
01:16:35,040 --> 01:16:36,480
well and

1926
01:16:36,480 --> 01:16:39,040
i'm getting there um

1927
01:16:39,040 --> 01:16:42,320
let's actually look at the first query

1928
01:16:42,320 --> 01:16:44,320
and sort that country list by first

1929
01:16:44,320 --> 01:16:46,320
query hit and all of a sudden the

1930
01:16:46,320 --> 01:16:48,159
scandi's come right up denmark eight

1931
01:16:48,159 --> 01:16:50,320
percent of users in denmark

1932
01:16:50,320 --> 01:16:53,920
do a first query hit on http 3

1933
01:16:53,920 --> 01:16:55,520
whereas the second query is only

1934
01:16:55,520 --> 01:16:57,360
slightly more

1935
01:16:57,360 --> 01:16:59,360
so there's certainly variations going on

1936
01:16:59,360 --> 01:17:02,080
between first and second query next

1937
01:17:02,080 --> 01:17:03,199
slide

1938
01:17:03,199 --> 01:17:04,800
actually this is one of the few lists go

1939
01:17:04,800 --> 01:17:06,239
back one sorry

1940
01:17:06,239 --> 01:17:08,480
one of the few lists where the pharaoh

1941
01:17:08,480 --> 01:17:10,320
islands features

1942
01:17:10,320 --> 01:17:12,480
so all 10 of them and their sheep are

1943
01:17:12,480 --> 01:17:14,239
busy doing a relatively significant

1944
01:17:14,239 --> 01:17:16,159
amount of querying using quick on the

1945
01:17:16,159 --> 01:17:19,920
first query uh next slide

1946
01:17:20,159 --> 01:17:21,600
thank you

1947
01:17:21,600 --> 01:17:23,280
so i have some questions here that i

1948
01:17:23,280 --> 01:17:24,480
actually thought

1949
01:17:24,480 --> 01:17:26,159
i really would like to understand this a

1950
01:17:26,159 --> 01:17:27,360
bit better

1951
01:17:27,360 --> 01:17:29,440
and sort of see what's going on and and

1952
01:17:29,440 --> 01:17:31,120
the first is

1953
01:17:31,120 --> 01:17:32,719
which are the clients which are the

1954
01:17:32,719 --> 01:17:34,080
browser clients that are actually

1955
01:17:34,080 --> 01:17:36,239
performing quick and why first and

1956
01:17:36,239 --> 01:17:38,320
second fetch variation

1957
01:17:38,320 --> 01:17:40,640
um the second thing is if you you read

1958
01:17:40,640 --> 01:17:42,159
the quick specs

1959
01:17:42,159 --> 01:17:45,040
you can't fragment you just can't it

1960
01:17:45,040 --> 01:17:48,000
says do not fragment these udp packets

1961
01:17:48,000 --> 01:17:50,400
so what are the packet sizes quick

1962
01:17:50,400 --> 01:17:53,520
sessions actually use and in particular

1963
01:17:53,520 --> 01:17:56,320
i'm interested in what the clients do

1964
01:17:56,320 --> 01:17:58,880
when they open the session and start

1965
01:17:58,880 --> 01:18:01,600
talking to our servers so in other words

1966
01:18:01,600 --> 01:18:03,280
not what i select but what is being

1967
01:18:03,280 --> 01:18:06,159
selected out there as the mss values for

1968
01:18:06,159 --> 01:18:07,600
quick

1969
01:18:07,600 --> 01:18:09,280
what's the connection failure rate

1970
01:18:09,280 --> 01:18:10,800
because there's been an awful lot of

1971
01:18:10,800 --> 01:18:14,560
fear and distrust about udp port 443

1972
01:18:14,560 --> 01:18:16,719
is it filtered like crazy does it get

1973
01:18:16,719 --> 01:18:18,400
through like glass you know what's going

1974
01:18:18,400 --> 01:18:19,199
on

1975
01:18:19,199 --> 01:18:21,040
and in this case the question i had was

1976
01:18:21,040 --> 01:18:22,800
is quick faster

1977
01:18:22,800 --> 01:18:23,840
or not

1978
01:18:23,840 --> 01:18:26,560
is it really quicker next so let's go

1979
01:18:26,560 --> 01:18:29,520
quickly and try and answer some of those

1980
01:18:29,520 --> 01:18:31,920
whoever's driving this

1981
01:18:31,920 --> 01:18:33,600
um

1982
01:18:33,600 --> 01:18:36,640
this is an odd table like all tables it

1983
01:18:36,640 --> 01:18:38,640
needs explanation

1984
01:18:38,640 --> 01:18:42,400
so this is the i the os clients as

1985
01:18:42,400 --> 01:18:45,600
determined by the browser stream

1986
01:18:45,600 --> 01:18:47,760
what hardware are you running on or what

1987
01:18:47,760 --> 01:18:49,280
operating system

1988
01:18:49,280 --> 01:18:50,960
everybody lies

1989
01:18:50,960 --> 01:18:53,600
right so in some ways

1990
01:18:53,600 --> 01:18:55,840
this is just the lies i got told by the

1991
01:18:55,840 --> 01:18:59,199
browser in their browser stream

1992
01:18:59,199 --> 01:19:00,880
there's an awful lot of windows 3 out

1993
01:19:00,880 --> 01:19:04,000
there you know yeah right um so to some

1994
01:19:04,000 --> 01:19:05,760
extent it's slightly cloudy but there's

1995
01:19:05,760 --> 01:19:07,440
patterns going on

1996
01:19:07,440 --> 01:19:11,040
they aren't comparable horizontally it's

1997
01:19:11,040 --> 01:19:12,239
vertical

1998
01:19:12,239 --> 01:19:14,640
so i'm just breaking down i have

1999
01:19:14,640 --> 01:19:18,320
separate tests that run only tcp and tls

2000
01:19:18,320 --> 01:19:19,760
completely independent of the quick

2001
01:19:19,760 --> 01:19:20,560
stuff

2002
01:19:20,560 --> 01:19:22,640
and for those i see well what clients

2003
01:19:22,640 --> 01:19:25,360
does the ad actually get to

2004
01:19:25,360 --> 01:19:27,520
so around 5.5 percent of clients out

2005
01:19:27,520 --> 01:19:30,080
there for an ad use ios

2006
01:19:30,080 --> 01:19:32,199
another 1 uses mac

2007
01:19:32,199 --> 01:19:35,199
84.5 uses android this is sort of the

2008
01:19:35,199 --> 01:19:39,199
market share of platforms um

2009
01:19:39,199 --> 01:19:41,840
windows still exists and you linux folk

2010
01:19:41,840 --> 01:19:42,960
you've got a lot of work to do if you

2011
01:19:42,960 --> 01:19:46,480
want market share so they add vertically

2012
01:19:46,480 --> 01:19:48,560
not horizontally so let's look at the

2013
01:19:48,560 --> 01:19:50,400
first fetch

2014
01:19:50,400 --> 01:19:52,560
and what you actually find is of all the

2015
01:19:52,560 --> 01:19:55,199
folk who use quick immediately 93

2016
01:19:55,199 --> 01:19:57,760
percent is ios

2017
01:19:57,760 --> 01:20:00,480
2.8 percent is macos and the rest don't

2018
01:20:00,480 --> 01:20:02,719
count and they're probably lying

2019
01:20:02,719 --> 01:20:05,440
so this really is an apple thing that's

2020
01:20:05,440 --> 01:20:08,000
actually looking for the https record

2021
01:20:08,000 --> 01:20:10,960
and acting upon it

2022
01:20:10,960 --> 01:20:12,080
now

2023
01:20:12,080 --> 01:20:15,199
i only had one percent

2024
01:20:15,199 --> 01:20:17,600
but at least six percent of clients are

2025
01:20:17,600 --> 01:20:20,000
actually using

2026
01:20:20,000 --> 01:20:21,600
that platform

2027
01:20:21,600 --> 01:20:23,360
so it seems that apple's doing around a

2028
01:20:23,360 --> 01:20:25,360
one in four filtering and only

2029
01:20:25,360 --> 01:20:27,360
selectively going to quick

2030
01:20:27,360 --> 01:20:30,000
as determined somehow by apple

2031
01:20:30,000 --> 01:20:33,199
not by anything else interesting

2032
01:20:33,199 --> 01:20:35,679
and on the second fetch

2033
01:20:35,679 --> 01:20:38,480
it's predominantly the android platform

2034
01:20:38,480 --> 01:20:40,719
with a little bit of ios

2035
01:20:40,719 --> 01:20:42,000
and again

2036
01:20:42,000 --> 01:20:43,840
there are liars and all kinds of stuff

2037
01:20:43,840 --> 01:20:45,280
because it's the browser string but

2038
01:20:45,280 --> 01:20:47,280
predominantly it's an android behavior

2039
01:20:47,280 --> 01:20:49,199
next slide please

2040
01:20:49,199 --> 01:20:50,960
so let's go to the browsers and the

2041
01:20:50,960 --> 01:20:53,520
browser clients and this kind of sort of

2042
01:20:53,520 --> 01:20:54,960
sorts it out

2043
01:20:54,960 --> 01:20:57,040
the world is chrome

2044
01:20:57,040 --> 01:20:59,120
no one else matters

2045
01:20:59,120 --> 01:21:00,400
just it is

2046
01:21:00,400 --> 01:21:03,199
91 of folk that we flush out in ads are

2047
01:21:03,199 --> 01:21:05,040
running the chrome browser or so they

2048
01:21:05,040 --> 01:21:06,159
report

2049
01:21:06,159 --> 01:21:08,239
so it could be variants webkits whatever

2050
01:21:08,239 --> 01:21:11,360
who knows but 91 basically say i'm

2051
01:21:11,360 --> 01:21:14,400
chrome uh on first fetch 93 say they're

2052
01:21:14,400 --> 01:21:17,760
safari so this again says it's apple

2053
01:21:17,760 --> 01:21:20,400
uh interestingly on the second fetch

2054
01:21:20,400 --> 01:21:23,440
um a huge amount in chrome but also

2055
01:21:23,440 --> 01:21:25,760
some degree of use in safari some of you

2056
01:21:25,760 --> 01:21:28,639
ios users seem to prefer

2057
01:21:28,639 --> 01:21:31,040
or sorry some of you android users

2058
01:21:31,040 --> 01:21:33,440
i really don't understand that

2059
01:21:33,440 --> 01:21:36,320
it's higher than it should be

2060
01:21:36,320 --> 01:21:38,639
next

2061
01:21:39,600 --> 01:21:40,840
so who does it

2062
01:21:40,840 --> 01:21:44,000
well it's apple it's safari

2063
01:21:44,000 --> 01:21:47,600
it's the dns https record

2064
01:21:47,600 --> 01:21:49,520
it only does one in four

2065
01:21:49,520 --> 01:21:51,679
it only does about one in four not sure

2066
01:21:51,679 --> 01:21:52,480
why

2067
01:21:52,480 --> 01:21:54,000
the apple folk can answer that much

2068
01:21:54,000 --> 01:21:55,840
better than me

2069
01:21:55,840 --> 01:21:58,239
chrome

2070
01:21:58,239 --> 01:22:00,000
why isn't it everyone

2071
01:22:00,000 --> 01:22:02,480
why am i seeing 94

2072
01:22:02,480 --> 01:22:05,120
because if it really is a second fetch

2073
01:22:05,120 --> 01:22:07,040
waiting and asking again should trigger

2074
01:22:07,040 --> 01:22:09,760
it that conversion rate as i observe it

2075
01:22:09,760 --> 01:22:11,440
is tiny

2076
01:22:11,440 --> 01:22:15,519
we will return to this next slide

2077
01:22:17,360 --> 01:22:20,480
okay so park that thought yeah on to the

2078
01:22:20,480 --> 01:22:23,199
next one what's the packet size

2079
01:22:23,199 --> 01:22:25,040
the sizes that

2080
01:22:25,040 --> 01:22:26,960
folk send me

2081
01:22:26,960 --> 01:22:28,719
tend to correlate pretty well with the

2082
01:22:28,719 --> 01:22:33,120
rfcs 46 are exactly 1200 octets on that

2083
01:22:33,120 --> 01:22:35,679
first packet coming in the packet that's

2084
01:22:35,679 --> 01:22:38,480
padded up that the spec says must be at

2085
01:22:38,480 --> 01:22:40,560
least 1200 octets

2086
01:22:40,560 --> 01:22:43,920
46 percent go yeah okay fine 1200 a few

2087
01:22:43,920 --> 01:22:47,199
folk are more inventive we'll go 1250 um

2088
01:22:47,199 --> 01:22:49,600
yay good on you and a few more folk go

2089
01:22:49,600 --> 01:22:52,320
we'll go 1252.

2090
01:22:52,320 --> 01:22:53,440
okay

2091
01:22:53,440 --> 01:22:56,120
and a very small number go we go

2092
01:22:56,120 --> 01:22:59,520
1354 yay then um

2093
01:22:59,520 --> 01:23:01,280
nothing higher

2094
01:23:01,280 --> 01:23:02,000
so

2095
01:23:02,000 --> 01:23:04,239
whatever you think there's no one kind

2096
01:23:04,239 --> 01:23:06,239
of pushing the boundary here because

2097
01:23:06,239 --> 01:23:08,080
predominantly on that first packet you

2098
01:23:08,080 --> 01:23:10,800
have no idea what the path mtu is

2099
01:23:10,800 --> 01:23:13,280
and so 1350 is about the extent of which

2100
01:23:13,280 --> 01:23:15,760
people are going to say okay let's go

2101
01:23:15,760 --> 01:23:18,000
that far but no further if that first

2102
01:23:18,000 --> 01:23:20,719
packet is fragmented nothing works

2103
01:23:20,719 --> 01:23:23,440
next slide

2104
01:23:24,159 --> 01:23:26,159
quick connection loss

2105
01:23:26,159 --> 01:23:27,280
this is

2106
01:23:27,280 --> 01:23:29,199
unusual

2107
01:23:29,199 --> 01:23:30,239
uh

2108
01:23:30,239 --> 01:23:32,960
this is like seeing a 99 drop rate for

2109
01:23:32,960 --> 01:23:35,520
hot buy hop extension headers in v6

2110
01:23:35,520 --> 01:23:38,000
except the other way around

2111
01:23:38,000 --> 01:23:40,960
i look at packets that reach me so i

2112
01:23:40,960 --> 01:23:44,159
have no idea what the client attempted

2113
01:23:44,159 --> 01:23:46,480
because i can't instrument them

2114
01:23:46,480 --> 01:23:48,080
but what i see is when i get that

2115
01:23:48,080 --> 01:23:49,760
initial connection packet and quick has

2116
01:23:49,760 --> 01:23:51,280
enough expose that you know it's an

2117
01:23:51,280 --> 01:23:52,880
initial connection packet with an

2118
01:23:52,880 --> 01:23:55,440
initial connection id i answer i should

2119
01:23:55,440 --> 01:23:56,960
get a second packet

2120
01:23:56,960 --> 01:23:59,679
so i look for the amount of time when i

2121
01:23:59,679 --> 01:24:01,600
don't get the second packet

2122
01:24:01,600 --> 01:24:04,239
and on one day i had 19 million of these

2123
01:24:04,239 --> 01:24:05,679
sort of initials

2124
01:24:05,679 --> 01:24:08,960
i had 46 000 that never got the sec

2125
01:24:08,960 --> 01:24:10,960
never sent me the second packet the

2126
01:24:10,960 --> 01:24:14,000
failure rate is 0.24

2127
01:24:14,000 --> 01:24:16,719
now that's an awful lot of equipment out

2128
01:24:16,719 --> 01:24:17,760
there

2129
01:24:17,760 --> 01:24:20,800
that thoroughly trusts udp port 443

2130
01:24:20,800 --> 01:24:23,760
incoming in response to an outgoing yay

2131
01:24:23,760 --> 01:24:26,080
good on them it's much higher than sorry

2132
01:24:26,080 --> 01:24:28,639
that is much lower than i thought

2133
01:24:28,639 --> 01:24:30,800
i was expecting something to three

2134
01:24:30,800 --> 01:24:33,120
percent a bit like the v6 failure rate

2135
01:24:33,120 --> 01:24:35,600
v6 by the way in tcp has around using

2136
01:24:35,600 --> 01:24:38,880
the same methodology around two 2.4

2137
01:24:38,880 --> 01:24:39,840
failure

2138
01:24:39,840 --> 01:24:42,320
the v6 connections don't work and it

2139
01:24:42,320 --> 01:24:45,120
seems to be that the filters

2140
01:24:45,120 --> 01:24:46,560
close to the customer will let the

2141
01:24:46,560 --> 01:24:48,560
packets out but won't let the syn ack

2142
01:24:48,560 --> 01:24:50,000
packets back in

2143
01:24:50,000 --> 01:24:51,840
i thought the same would happen here it

2144
01:24:51,840 --> 01:24:53,360
does not

2145
01:24:53,360 --> 01:24:56,840
if 443 makes it out 443 makes it in

2146
01:24:56,840 --> 01:25:00,719
surprising next slide

2147
01:25:00,719 --> 01:25:03,280
is it faster

2148
01:25:03,280 --> 01:25:06,560
this is getting a lot harder with quick

2149
01:25:06,560 --> 01:25:08,639
because looking at packets

2150
01:25:08,639 --> 01:25:10,080
is difficult because most of it's

2151
01:25:10,080 --> 01:25:11,360
encrypted

2152
01:25:11,360 --> 01:25:14,080
and actually trying to trace packet and

2153
01:25:14,080 --> 01:25:16,400
ack when the entire thing is potentially

2154
01:25:16,400 --> 01:25:17,760
multi-threaded

2155
01:25:17,760 --> 01:25:19,840
tends to make my brain explode

2156
01:25:19,840 --> 01:25:22,320
so i went for rough and ready

2157
01:25:22,320 --> 01:25:27,120
and inside the browser yay is a timer

2158
01:25:27,120 --> 01:25:28,800
and i have no idea how accurate this

2159
01:25:28,800 --> 01:25:30,719
timer is i have no idea if it's just a

2160
01:25:30,719 --> 01:25:32,880
random number or whatever but it does

2161
01:25:32,880 --> 01:25:34,719
seem to be that if it takes longer to

2162
01:25:34,719 --> 01:25:37,840
load the browser's timer value

2163
01:25:37,840 --> 01:25:41,280
is more time than if it loads quickly

2164
01:25:41,280 --> 01:25:42,719
and i think that's about as accurate as

2165
01:25:42,719 --> 01:25:43,679
you get

2166
01:25:43,679 --> 01:25:44,400
so

2167
01:25:44,400 --> 01:25:47,280
what i did is i asked the browsers to go

2168
01:25:47,280 --> 01:25:49,280
well how long did it take you to fetch

2169
01:25:49,280 --> 01:25:50,239
this

2170
01:25:50,239 --> 01:25:53,280
using quick and not using quick because

2171
01:25:53,280 --> 01:25:55,120
there's a bunch of folk who don't use it

2172
01:25:55,120 --> 01:25:58,000
and every user actually gets to do quick

2173
01:25:58,000 --> 01:26:00,480
and non-quick so i take the user and

2174
01:26:00,480 --> 01:26:02,880
compare their quick and non-quick timer

2175
01:26:02,880 --> 01:26:04,080
values

2176
01:26:04,080 --> 01:26:06,719
next slide

2177
01:26:06,960 --> 01:26:10,080
and so this is the center point

2178
01:26:10,080 --> 01:26:12,480
of each individual user where i see

2179
01:26:12,480 --> 01:26:15,759
quick and not quick

2180
01:26:16,080 --> 01:26:18,159
and compare the two values because it's

2181
01:26:18,159 --> 01:26:20,480
the same server it's the same network

2182
01:26:20,480 --> 01:26:24,880
path in theory so if quick is faster

2183
01:26:24,880 --> 01:26:27,840
the time elapsed to complete the entire

2184
01:26:27,840 --> 01:26:31,600
transaction should be lower it should be

2185
01:26:31,600 --> 01:26:34,159
on the right hand side of the zero point

2186
01:26:34,159 --> 01:26:36,480
if quick is slow it'll be on the left

2187
01:26:36,480 --> 01:26:38,639
there's a huge amount where it said near

2188
01:26:38,639 --> 01:26:39,840
same time

2189
01:26:39,840 --> 01:26:41,199
which is fine

2190
01:26:41,199 --> 01:26:44,000
um but there's certainly a bias

2191
01:26:44,000 --> 01:26:45,760
to faster

2192
01:26:45,760 --> 01:26:47,920
and these are in milliseconds it's sort

2193
01:26:47,920 --> 01:26:50,400
of visible around the first 50 to 100

2194
01:26:50,400 --> 01:26:53,280
milliseconds as being most obvious it's

2195
01:26:53,280 --> 01:26:55,760
clearer in a cumulative distribution

2196
01:26:55,760 --> 01:26:57,840
next slide

2197
01:26:57,840 --> 01:27:00,239
around two-thirds of the time the

2198
01:27:00,239 --> 01:27:02,400
browser believes the quick fetch was

2199
01:27:02,400 --> 01:27:04,239
faster

2200
01:27:04,239 --> 01:27:05,600
now i've just got to take the browser's

2201
01:27:05,600 --> 01:27:07,360
word for it i don't have a clue what's

2202
01:27:07,360 --> 01:27:09,040
inside a browser and i never want to

2203
01:27:09,040 --> 01:27:11,120
know but if i just do that what you see

2204
01:27:11,120 --> 01:27:12,880
is for two thirds of the time

2205
01:27:12,880 --> 01:27:15,199
the browser is reporting that the http 3

2206
01:27:15,199 --> 01:27:17,760
load was faster

2207
01:27:17,760 --> 01:27:19,600
question

2208
01:27:19,600 --> 01:27:22,320
can you come back to a slide before

2209
01:27:22,320 --> 01:27:25,440
above the comparison when you say tcp

2210
01:27:25,440 --> 01:27:28,239
over tls you say http 2

2211
01:27:28,239 --> 01:27:29,920
or

2212
01:27:29,920 --> 01:27:32,880
do i care whether it's http 1 or http 2

2213
01:27:32,880 --> 01:27:35,120
no i don't it's just you're not using

2214
01:27:35,120 --> 01:27:36,000
quick

2215
01:27:36,000 --> 01:27:37,440
and if you're coming to my server and

2216
01:27:37,440 --> 01:27:39,040
you're not using quick

2217
01:27:39,040 --> 01:27:41,520
you're not using um

2218
01:27:41,520 --> 01:27:43,840
tls anymore it's all

2219
01:27:43,840 --> 01:27:44,960
tls

2220
01:27:44,960 --> 01:27:47,360
so it really is tcp over tls versus

2221
01:27:47,360 --> 01:27:49,679
quick is what i'm comparing yeah

2222
01:27:49,679 --> 01:27:50,880
it's just because

2223
01:27:50,880 --> 01:27:52,239
http 1

2224
01:27:52,239 --> 01:27:54,719
does not have header compression so it

2225
01:27:54,719 --> 01:27:56,639
may change a lot as

2226
01:27:56,639 --> 01:27:59,440
a result i didn't look okay yeah just

2227
01:27:59,440 --> 01:28:01,440
did not look in fact what i was doing

2228
01:28:01,440 --> 01:28:02,560
was saying

2229
01:28:02,560 --> 01:28:05,040
it's either an https fetch or it's an

2230
01:28:05,040 --> 01:28:07,520
https slash three

2231
01:28:07,520 --> 01:28:08,880
that's all

2232
01:28:08,880 --> 01:28:10,480
so you know i didn't factor in header

2233
01:28:10,480 --> 01:28:12,960
compression uh go forward two slides

2234
01:28:12,960 --> 01:28:15,440
were we

2235
01:28:15,440 --> 01:28:18,080
yeah so this is a summary of what i said

2236
01:28:18,080 --> 01:28:20,480
next

2237
01:28:21,120 --> 01:28:22,880
now

2238
01:28:22,880 --> 01:28:25,120
my answers are weird

2239
01:28:25,120 --> 01:28:27,199
and i tried to find some other public

2240
01:28:27,199 --> 01:28:29,440
answers and the most immediate one is on

2241
01:28:29,440 --> 01:28:31,920
the cloudflare radar site where they're

2242
01:28:31,920 --> 01:28:33,440
reporting

2243
01:28:33,440 --> 01:28:36,000
served from cloudflare

2244
01:28:36,000 --> 01:28:38,400
30

2245
01:28:38,400 --> 01:28:40,000
of their web

2246
01:28:40,000 --> 01:28:42,639
fetches occur over quick

2247
01:28:42,639 --> 01:28:46,080
so what i'm seeing is far far lower

2248
01:28:46,080 --> 01:28:48,080
now i have no reason to doubt that it's

2249
01:28:48,080 --> 01:28:49,840
a fine number

2250
01:28:49,840 --> 01:28:51,360
but again this sort of

2251
01:28:51,360 --> 01:28:53,280
why are we seeing very different things

2252
01:28:53,280 --> 01:28:56,320
next slide

2253
01:28:56,320 --> 01:28:57,920
so

2254
01:28:57,920 --> 01:29:00,000
i certainly agree but i actually think

2255
01:29:00,000 --> 01:29:02,560
cloudflare is low

2256
01:29:02,560 --> 01:29:05,600
because if quick is enabled by default

2257
01:29:05,600 --> 01:29:07,760
in chrome

2258
01:29:07,760 --> 01:29:09,520
it should basically all these

2259
01:29:09,520 --> 01:29:12,880
connections should head towards quick

2260
01:29:12,880 --> 01:29:15,520
and so in cloudflare's case

2261
01:29:15,520 --> 01:29:17,679
i suppose the real question is

2262
01:29:17,679 --> 01:29:19,840
to what extent is cloudflare seeing

2263
01:29:19,840 --> 01:29:22,880
first fetch versus subsequent fetch

2264
01:29:22,880 --> 01:29:25,280
what's their breakdown

2265
01:29:25,280 --> 01:29:27,520
now i can't see in behind cloudflare so

2266
01:29:27,520 --> 01:29:29,360
i really don't know

2267
01:29:29,360 --> 01:29:31,360
and maybe that 30

2268
01:29:31,360 --> 01:29:34,080
is a reflection on how many times the

2269
01:29:34,080 --> 01:29:36,000
client got there once

2270
01:29:36,000 --> 01:29:37,520
received the signal saying if you go

2271
01:29:37,520 --> 01:29:39,600
there again quickly within the case time

2272
01:29:39,600 --> 01:29:41,199
you'll go and use quick but they didn't

2273
01:29:41,199 --> 01:29:43,920
get there so only 30 of their folk went

2274
01:29:43,920 --> 01:29:45,040
there twice

2275
01:29:45,040 --> 01:29:46,960
or

2276
01:29:46,960 --> 01:29:48,000
chrome

2277
01:29:48,000 --> 01:29:50,000
uh is not doing it all the time i have

2278
01:29:50,000 --> 01:29:53,199
no idea so that number is kind of

2279
01:29:53,199 --> 01:29:55,280
difficult to unpick but ours is

2280
01:29:55,280 --> 01:29:57,199
certainly a lot lower

2281
01:29:57,199 --> 01:30:00,159
so why is my number so low

2282
01:30:00,159 --> 01:30:02,880
i think that two second timer is way too

2283
01:30:02,880 --> 01:30:05,760
fast for browser behavior inside

2284
01:30:05,760 --> 01:30:08,639
chrome personally i might when i say at

2285
01:30:08,639 --> 01:30:10,400
the script level

2286
01:30:10,400 --> 01:30:13,600
wait two seconds and do another fetch

2287
01:30:13,600 --> 01:30:15,920
the incredible internal scheduling

2288
01:30:15,920 --> 01:30:18,320
issues of the chrome browser with their

2289
01:30:18,320 --> 01:30:21,440
multiple execution cues etc etc make

2290
01:30:21,440 --> 01:30:23,679
that two second timer almost a random

2291
01:30:23,679 --> 01:30:26,080
spin and i may well be doing the second

2292
01:30:26,080 --> 01:30:28,480
fetch way too quickly

2293
01:30:28,480 --> 01:30:30,239
but that's something only chrome's going

2294
01:30:30,239 --> 01:30:32,159
to answer and i for one am not going to

2295
01:30:32,159 --> 01:30:34,960
look at the source code so i might be

2296
01:30:34,960 --> 01:30:37,040
being too aggressive here

2297
01:30:37,040 --> 01:30:39,760
i could make that a really long time

2298
01:30:39,760 --> 01:30:40,560
but

2299
01:30:40,560 --> 01:30:42,880
you focus users when you see an ad

2300
01:30:42,880 --> 01:30:44,159
displayed

2301
01:30:44,159 --> 01:30:46,000
if it's displayed more than 10 seconds

2302
01:30:46,000 --> 01:30:48,080
you are and click the xbox and kill the

2303
01:30:48,080 --> 01:30:51,360
ad so if i bring that timer out

2304
01:30:51,360 --> 01:30:52,639
you're just not going to see the ad

2305
01:30:52,639 --> 01:30:53,920
anymore and i'm not going to get the

2306
01:30:53,920 --> 01:30:55,760
measurements that's why the timing's so

2307
01:30:55,760 --> 01:30:56,719
aggressive

2308
01:30:56,719 --> 01:30:59,360
next slide

2309
01:31:01,360 --> 01:31:03,600
so i don't understand a few things i

2310
01:31:03,600 --> 01:31:05,360
started actually looking at how many

2311
01:31:05,360 --> 01:31:09,040
folk asked for that https

2312
01:31:09,040 --> 01:31:09,840
um

2313
01:31:09,840 --> 01:31:12,800
that https resource record

2314
01:31:12,800 --> 01:31:13,920
a lot

2315
01:31:13,920 --> 01:31:16,480
three to four times the number of folk

2316
01:31:16,480 --> 01:31:18,880
that actually do the first fetch

2317
01:31:18,880 --> 01:31:20,239
so

2318
01:31:20,239 --> 01:31:21,679
surely

2319
01:31:21,679 --> 01:31:25,199
if you knew about that https record you

2320
01:31:25,199 --> 01:31:27,120
were going to do quick if you could and

2321
01:31:27,120 --> 01:31:29,040
if you get a positive signal yeah i can

2322
01:31:29,040 --> 01:31:31,440
do this you'd go and do it

2323
01:31:31,440 --> 01:31:33,120
but they don't

2324
01:31:33,120 --> 01:31:35,679
somehow there is a control function

2325
01:31:35,679 --> 01:31:38,159
sitting inside that safari browser that

2326
01:31:38,159 --> 01:31:41,199
goes yeah i could but i choose not to

2327
01:31:41,199 --> 01:31:42,960
and my suspicion is with the

2328
01:31:42,960 --> 01:31:45,920
country-based variations that this is

2329
01:31:45,920 --> 01:31:48,080
the locale that changes the default

2330
01:31:48,080 --> 01:31:51,040
behavior of safari but you know that's

2331
01:31:51,040 --> 01:31:54,320
for apple to confirm and for me to guess

2332
01:31:54,320 --> 01:31:56,000
the question about that two-second

2333
01:31:56,000 --> 01:31:58,639
scripted wait time in chrome you know i

2334
01:31:58,639 --> 01:32:00,719
don't actually know how long i should be

2335
01:32:00,719 --> 01:32:03,280
waiting for and i don't know how long

2336
01:32:03,280 --> 01:32:05,280
chrome keeps it

2337
01:32:05,280 --> 01:32:07,440
going well i found this directive

2338
01:32:07,440 --> 01:32:09,360
how long is that case of that directive

2339
01:32:09,360 --> 01:32:11,920
lasting i have no idea and the other

2340
01:32:11,920 --> 01:32:14,719
thing about chrome is will it always use

2341
01:32:14,719 --> 01:32:15,679
quick

2342
01:32:15,679 --> 01:32:19,040
or if you live in burma or vietnam will

2343
01:32:19,040 --> 01:32:21,040
it do it differently than if i live in

2344
01:32:21,040 --> 01:32:23,600
australia you know are there locales

2345
01:32:23,600 --> 01:32:25,600
that change that default behavior and

2346
01:32:25,600 --> 01:32:27,760
the same question for safari to what

2347
01:32:27,760 --> 01:32:30,239
extent is this behavior triggered by

2348
01:32:30,239 --> 01:32:33,199
various locale setting defaults

2349
01:32:33,199 --> 01:32:35,360
i think that's it is there another slide

2350
01:32:35,360 --> 01:32:37,120
one more slide

2351
01:32:37,120 --> 01:32:38,800
oh okay whoa

2352
01:32:38,800 --> 01:32:40,560
and there's a web page where all this

2353
01:32:40,560 --> 01:32:43,360
gunk is is there uh as pretty pictures

2354
01:32:43,360 --> 01:32:44,719
and graphs

2355
01:32:44,719 --> 01:32:46,880
uh any questions

2356
01:32:46,880 --> 01:32:50,560
or preferably answers because you know

2357
01:32:51,120 --> 01:32:54,159
i have no idea some of this stuff

2358
01:32:54,159 --> 01:32:56,960
uh question about i guess maybe back one

2359
01:32:56,960 --> 01:32:58,080
slide

2360
01:32:58,080 --> 01:32:59,520
uh or

2361
01:32:59,520 --> 01:33:01,280
yeah either slide 12 or 16 i can't

2362
01:33:01,280 --> 01:33:03,360
remember but your https

2363
01:33:03,360 --> 01:33:05,760
response does it have an ipv6 or ipv4

2364
01:33:05,760 --> 01:33:08,880
address hint in it no hints just the

2365
01:33:08,880 --> 01:33:12,239
alpn field so my guess is

2366
01:33:12,239 --> 01:33:14,480
there's connection racing going on here

2367
01:33:14,480 --> 01:33:16,560
it's happy eyeballs between http 3 and

2368
01:33:16,560 --> 01:33:18,080
http2

2369
01:33:18,080 --> 01:33:20,320
and if you don't return the ip address

2370
01:33:20,320 --> 01:33:22,719
in the https query because these are one

2371
01:33:22,719 --> 01:33:24,400
use domain names

2372
01:33:24,400 --> 01:33:26,639
the client is also doing a a record

2373
01:33:26,639 --> 01:33:28,400
lookup and a quad a record lookup and an

2374
01:33:28,400 --> 01:33:31,040
https lookup it gets the a or quad a and

2375
01:33:31,040 --> 01:33:33,040
the https let's just say even say all at

2376
01:33:33,040 --> 01:33:34,320
the same time

2377
01:33:34,320 --> 01:33:35,760
what it's going to start doing is maybe

2378
01:33:35,760 --> 01:33:36,960
tls

2379
01:33:36,960 --> 01:33:38,400
http 2

2380
01:33:38,400 --> 01:33:40,400
you know if the http 3 comes back and

2381
01:33:40,400 --> 01:33:42,159
said you know like there might be

2382
01:33:42,159 --> 01:33:43,040
i don't

2383
01:33:43,040 --> 01:33:44,560
depending on the exact ordering it might

2384
01:33:44,560 --> 01:33:46,239
help if there's a

2385
01:33:46,239 --> 01:33:47,520
hint

2386
01:33:47,520 --> 01:33:50,000
thanks eric i will add a hint this week

2387
01:33:50,000 --> 01:33:51,760
to the experiment and see if the numbers

2388
01:33:51,760 --> 01:33:54,239
change yes you could well be right

2389
01:33:54,239 --> 01:33:56,000
you know in some cases this is a black

2390
01:33:56,000 --> 01:33:57,920
box i don't work for these companies i

2391
01:33:57,920 --> 01:33:59,360
have no idea

2392
01:33:59,360 --> 01:34:01,840
but yeah it could be very useful

2393
01:34:01,840 --> 01:34:04,560
thank you

2394
01:34:04,560 --> 01:34:06,480
there's a question in the chat

2395
01:34:06,480 --> 01:34:10,000
is anthony in the room or no

2396
01:34:10,239 --> 01:34:12,239
not sure if it's a question or a

2397
01:34:12,239 --> 01:34:13,920
possible

2398
01:34:13,920 --> 01:34:16,400
suggestion of a solution but how much

2399
01:34:16,400 --> 01:34:18,560
does ad blocking

2400
01:34:18,560 --> 01:34:20,800
pose an impact on the test data

2401
01:34:20,800 --> 01:34:22,320
particularly

2402
01:34:22,320 --> 01:34:24,400
some vendors

2403
01:34:24,400 --> 01:34:26,639
os's are more

2404
01:34:26,639 --> 01:34:29,199
prone to doing ad block by default and

2405
01:34:29,199 --> 01:34:31,199
do not track and all that

2406
01:34:31,199 --> 01:34:33,440
this is a larger question of selection

2407
01:34:33,440 --> 01:34:34,400
bias

2408
01:34:34,400 --> 01:34:37,120
because i get to see the folk who get to

2409
01:34:37,120 --> 01:34:38,880
see ads

2410
01:34:38,880 --> 01:34:42,639
right and so some networks um there's a

2411
01:34:42,639 --> 01:34:44,639
mobile provider in south korea i think

2412
01:34:44,639 --> 01:34:47,440
it's ska seems to be

2413
01:34:47,440 --> 01:34:49,760
massively ad blocking that's fine i

2414
01:34:49,760 --> 01:34:52,000
don't get to see them at all

2415
01:34:52,000 --> 01:34:53,920
and so whether you use quick or not

2416
01:34:53,920 --> 01:34:56,880
doesn't matter if you get to see the ad

2417
01:34:56,880 --> 01:34:59,840
the full measurement set runs

2418
01:34:59,840 --> 01:35:02,639
right now oddly enough i don't get to

2419
01:35:02,639 --> 01:35:05,840
see russia very clearly we all know why

2420
01:35:05,840 --> 01:35:08,159
and at some points i don't get to see

2421
01:35:08,159 --> 01:35:10,960
iran very clearly for i guess similar

2422
01:35:10,960 --> 01:35:12,840
reasons

2423
01:35:12,840 --> 01:35:16,000
china quite clear oddly enough the ad

2424
01:35:16,000 --> 01:35:18,400
systems work in china just fine

2425
01:35:18,400 --> 01:35:19,760
using you know double clicks

2426
01:35:19,760 --> 01:35:22,480
infrastructure a lot of folk use ads so

2427
01:35:22,480 --> 01:35:25,760
the selection bias is there absolutely

2428
01:35:25,760 --> 01:35:28,480
for ad blocking but it's not for each

2429
01:35:28,480 --> 01:35:30,800
individual ad for each individual type

2430
01:35:30,800 --> 01:35:32,400
that's a different problem about

2431
01:35:32,400 --> 01:35:35,280
censorship and the labels that folk use

2432
01:35:35,280 --> 01:35:38,239
my labels are as bland as they get and

2433
01:35:38,239 --> 01:35:40,159
so i'm trying desperately not to say

2434
01:35:40,159 --> 01:35:42,000
this is content that is banned all that

2435
01:35:42,000 --> 01:35:45,280
kind of stuff my labels don't do that so

2436
01:35:45,280 --> 01:35:47,199
yes it's a problem but not in this

2437
01:35:47,199 --> 01:35:48,320
context

2438
01:35:48,320 --> 01:35:50,559
thanks

2439
01:35:51,679 --> 01:35:53,679
i was also going to ask about slide 16 i

2440
01:35:53,679 --> 01:35:55,840
think you mentioned the ipv6 connection

2441
01:35:55,840 --> 01:35:57,600
failure rate versus the quick connection

2442
01:35:57,600 --> 01:35:59,280
failure rate uh

2443
01:35:59,280 --> 01:36:01,840
is this um

2444
01:36:01,840 --> 01:36:04,560
what's the v4 vs v6 split for

2445
01:36:04,560 --> 01:36:07,199
udp 443

2446
01:36:07,199 --> 01:36:09,440
so your ipv6 connection failure rate is

2447
01:36:09,440 --> 01:36:13,360
that is around okay tcp tls or is i mean

2448
01:36:13,360 --> 01:36:16,320
what i see in v6 is i see a sin i send

2449
01:36:16,320 --> 01:36:18,560
back a synack i never get the ack

2450
01:36:18,560 --> 01:36:21,360
the failure rate is approximately 2.5

2451
01:36:21,360 --> 01:36:23,920
it's it's tracked on one of these pages

2452
01:36:23,920 --> 01:36:26,080
you'd say well what's it compared to v4

2453
01:36:26,080 --> 01:36:28,000
and that's kind of weird

2454
01:36:28,000 --> 01:36:30,880
because the defaults to get you to this

2455
01:36:30,880 --> 01:36:32,480
point were v4

2456
01:36:32,480 --> 01:36:34,800
you had to speak tcp to the server to

2457
01:36:34,800 --> 01:36:37,040
get the ad up and running and so in some

2458
01:36:37,040 --> 01:36:39,360
ways the folk who fail on four don't get

2459
01:36:39,360 --> 01:36:42,159
to see much of the ad at all in any case

2460
01:36:42,159 --> 01:36:44,239
so that's why i've never tracked the v4

2461
01:36:44,239 --> 01:36:47,440
failure rate the same as i've tracked v6

2462
01:36:47,440 --> 01:36:50,560
so what i'm asking is is the udp 443

2463
01:36:50,560 --> 01:36:54,480
success rate the same in v6 and v4

2464
01:36:54,480 --> 01:36:56,639
or is it skewed in one way i haven't

2465
01:36:56,639 --> 01:36:58,800
differentiated that out

2466
01:36:58,800 --> 01:37:01,920
and i i'm still concerned that i'm only

2467
01:37:01,920 --> 01:37:04,880
measuring the second half

2468
01:37:04,880 --> 01:37:07,040
i have no idea about the packet coming

2469
01:37:07,040 --> 01:37:09,520
out because the client can't tell me i

2470
01:37:09,520 --> 01:37:11,440
tried and i failed

2471
01:37:11,440 --> 01:37:14,159
so this is if it comes out

2472
01:37:14,159 --> 01:37:16,239
and i answer these are the ones that

2473
01:37:16,239 --> 01:37:19,679
respond but again eric um i'll check v4

2474
01:37:19,679 --> 01:37:22,800
v6 and if they're all v6 that's a a bit

2475
01:37:22,800 --> 01:37:24,960
of a weird smoking gun yes

2476
01:37:24,960 --> 01:37:26,719
no okay

2477
01:37:26,719 --> 01:37:27,760
thanks

2478
01:37:27,760 --> 01:37:30,560
hi brief question um do we verify that

2479
01:37:30,560 --> 01:37:32,400
the initials that you see at the server

2480
01:37:32,400 --> 01:37:34,639
was triggered by the client by the ad

2481
01:37:34,639 --> 01:37:37,040
actually

2482
01:37:37,119 --> 01:37:40,000
did you verify that the initial that you

2483
01:37:40,000 --> 01:37:41,600
see at your server

2484
01:37:41,600 --> 01:37:44,320
was triggered by the advertisement every

2485
01:37:44,320 --> 01:37:46,960
advertisement has a unique

2486
01:37:46,960 --> 01:37:49,119
generated dns name

2487
01:37:49,119 --> 01:37:50,719
at the initial conversation of the

2488
01:37:50,719 --> 01:37:52,480
script

2489
01:37:52,480 --> 01:37:56,000
so all of the queries with that dns

2490
01:37:56,000 --> 01:37:58,159
string which is actually again a piece

2491
01:37:58,159 --> 01:37:59,600
of micro code

2492
01:37:59,600 --> 01:38:01,920
ultimately came from the same client so

2493
01:38:01,920 --> 01:38:04,960
even if you're using apple private relay

2494
01:38:04,960 --> 01:38:08,639
that name filters through and emerges

2495
01:38:08,639 --> 01:38:10,080
it was you

2496
01:38:10,080 --> 01:38:11,760
now yes

2497
01:38:11,760 --> 01:38:13,679
there's tracking there's logging there's

2498
01:38:13,679 --> 01:38:16,960
query replay so the label has a timer

2499
01:38:16,960 --> 01:38:18,639
field

2500
01:38:18,639 --> 01:38:20,320
inside its label

2501
01:38:20,320 --> 01:38:22,960
if it's more than 10 seconds

2502
01:38:22,960 --> 01:38:25,679
it's not you it's a replay i really

2503
01:38:25,679 --> 01:38:28,320
don't care it's something else okay so

2504
01:38:28,320 --> 01:38:30,960
yes i know it's you almost irrespective

2505
01:38:30,960 --> 01:38:32,000
of how

2506
01:38:32,000 --> 01:38:34,000
so even if you're behind a very

2507
01:38:34,000 --> 01:38:35,920
aggressive gnat

2508
01:38:35,920 --> 01:38:37,840
and you're changing your source address

2509
01:38:37,840 --> 01:38:39,440
every rtt

2510
01:38:39,440 --> 01:38:41,199
which is about as extreme as you get

2511
01:38:41,199 --> 01:38:42,239
with quick

2512
01:38:42,239 --> 01:38:43,520
it's still you

2513
01:38:43,520 --> 01:38:46,480
it's still the same dns name okay and so

2514
01:38:46,480 --> 01:38:48,719
in particular we exclude also scanners

2515
01:38:48,719 --> 01:38:50,880
and spoofed ip addresses

2516
01:38:50,880 --> 01:38:53,920
to the extent i can yes

2517
01:38:53,920 --> 01:38:55,679
there's an awful lot of scanners that

2518
01:38:55,679 --> 01:38:59,040
trigger really quickly to the user as if

2519
01:38:59,040 --> 01:39:01,280
there's a real-time feed from the user's

2520
01:39:01,280 --> 01:39:02,480
browser

2521
01:39:02,480 --> 01:39:04,800
to the scanner

2522
01:39:04,800 --> 01:39:06,960
which happens a lot

2523
01:39:06,960 --> 01:39:10,880
they're much more challenging to detect

2524
01:39:10,880 --> 01:39:13,040
hi this is peter from the esec i would

2525
01:39:13,040 --> 01:39:14,960
also like to ask a question on this

2526
01:39:14,960 --> 01:39:16,560
slide

2527
01:39:16,560 --> 01:39:18,719
i assume there is also some failure rate

2528
01:39:18,719 --> 01:39:21,040
for the second packet when you do tls of

2529
01:39:21,040 --> 01:39:22,400
a tcp

2530
01:39:22,400 --> 01:39:24,080
especially in slow mobile environments

2531
01:39:24,080 --> 01:39:26,000
for example and i wondered what that

2532
01:39:26,000 --> 01:39:27,440
number is and if it's different from

2533
01:39:27,440 --> 01:39:29,440
this one and whether you have

2534
01:39:29,440 --> 01:39:31,760
parameterized the measurements by mobile

2535
01:39:31,760 --> 01:39:32,960
versus

2536
01:39:32,960 --> 01:39:35,600
desktop for example by ap address or

2537
01:39:35,600 --> 01:39:37,199
user agent or something so are you

2538
01:39:37,199 --> 01:39:40,560
referring to a failure rate in tls

2539
01:39:40,560 --> 01:39:41,920
and tcp

2540
01:39:41,920 --> 01:39:44,080
oh so as i said that's what i referred

2541
01:39:44,080 --> 01:39:45,600
to in v6

2542
01:39:45,600 --> 01:39:46,480
sin

2543
01:39:46,480 --> 01:39:47,520
synack

2544
01:39:47,520 --> 01:39:50,239
okay i don't get the ack and again

2545
01:39:50,239 --> 01:39:52,639
i can only measure in six because to get

2546
01:39:52,639 --> 01:39:56,000
to the ad four had to be working

2547
01:39:56,000 --> 01:39:57,600
so the failure rate in four doesn't

2548
01:39:57,600 --> 01:40:00,239
really matter in a straight tcp thing

2549
01:40:00,239 --> 01:40:02,639
all the ones that fail in four never got

2550
01:40:02,639 --> 01:40:05,679
enrolled in the measurement sadly

2551
01:40:05,679 --> 01:40:08,320
well but i guess even if it doesn't seem

2552
01:40:08,320 --> 01:40:10,719
to matter there may be

2553
01:40:10,719 --> 01:40:12,560
still be the possibility in before that

2554
01:40:12,560 --> 01:40:14,320
it does fail at this stage

2555
01:40:14,320 --> 01:40:15,840
with tcp

2556
01:40:15,840 --> 01:40:18,320
and if that number be comparable to this

2557
01:40:18,320 --> 01:40:20,000
one then

2558
01:40:20,000 --> 01:40:22,400
i think the conclusion that this number

2559
01:40:22,400 --> 01:40:24,639
here stems from client-side filtering of

2560
01:40:24,639 --> 01:40:26,960
incoming four for three packets over udp

2561
01:40:26,960 --> 01:40:29,199
is not necessarily true i think the

2562
01:40:29,199 --> 01:40:30,960
point to take home

2563
01:40:30,960 --> 01:40:33,840
is that this isn't twenty percent

2564
01:40:33,840 --> 01:40:36,320
yes yes and it isn't ten percent and

2565
01:40:36,320 --> 01:40:38,159
that's great it's actually it's actually

2566
01:40:38,159 --> 01:40:40,560
really bloody good yes and it's about as

2567
01:40:40,560 --> 01:40:42,560
good as this technique will ever give

2568
01:40:42,560 --> 01:40:43,280
you

2569
01:40:43,280 --> 01:40:45,199
yes and it's probably the measurement

2570
01:40:45,199 --> 01:40:48,000
not the infrastructure and so as far as

2571
01:40:48,000 --> 01:40:49,280
i'm aware

2572
01:40:49,280 --> 01:40:51,280
once you get to this point

2573
01:40:51,280 --> 01:40:55,520
network blocking on incoming udp 443 for

2574
01:40:55,520 --> 01:40:57,440
those who are doing quick doesn't seem

2575
01:40:57,440 --> 01:40:59,440
to exist yay

2576
01:40:59,440 --> 01:41:00,719
okay then i agree i thought you were

2577
01:41:00,719 --> 01:41:02,159
saying this number is from that cause

2578
01:41:02,159 --> 01:41:03,440
and that's what i was questioning okay

2579
01:41:03,440 --> 01:41:04,400
cool

2580
01:41:04,400 --> 01:41:07,920
um then you have this um

2581
01:41:07,920 --> 01:41:09,920
diagram that shows the

2582
01:41:09,920 --> 01:41:12,159
results that quick connections are

2583
01:41:12,159 --> 01:41:14,000
quicker than non-quick connections back

2584
01:41:14,000 --> 01:41:17,239
two slides

2585
01:41:18,320 --> 01:41:20,719
oh forward again yeah

2586
01:41:20,719 --> 01:41:22,159
yeah i don't necessarily need the the

2587
01:41:22,159 --> 01:41:25,520
diagram yeah so my question is if um

2588
01:41:25,520 --> 01:41:26,480
there are

2589
01:41:26,480 --> 01:41:27,920
shared

2590
01:41:27,920 --> 01:41:30,560
results with the dns lookup would

2591
01:41:30,560 --> 01:41:31,760
benefit

2592
01:41:31,760 --> 01:41:33,040
for one part

2593
01:41:33,040 --> 01:41:35,520
if you do it first so perhaps the the

2594
01:41:35,520 --> 01:41:36,880
quick look up is always the second one

2595
01:41:36,880 --> 01:41:38,719
then it may be faster for that reason i

2596
01:41:38,719 --> 01:41:40,639
thought you thought about this but

2597
01:41:40,639 --> 01:41:43,199
perhaps not so when i asked the browser

2598
01:41:43,199 --> 01:41:44,639
in my script

2599
01:41:44,639 --> 01:41:47,040
to measure the elapsed wall clock time

2600
01:41:47,040 --> 01:41:49,679
when it's given a url to fetch

2601
01:41:49,679 --> 01:41:51,920
i have no idea

2602
01:41:51,920 --> 01:41:53,840
what it's measuring

2603
01:41:53,840 --> 01:41:54,880
none

2604
01:41:54,880 --> 01:41:57,119
when i ask 20 million a day to measure

2605
01:41:57,119 --> 01:41:58,560
it i'm relying on the fact that no

2606
01:41:58,560 --> 01:42:00,800
matter what stupidities happen inside

2607
01:42:00,800 --> 01:42:03,679
that browser it's all the same stupidity

2608
01:42:03,679 --> 01:42:06,320
and so the structural difference between

2609
01:42:06,320 --> 01:42:08,400
these two collections of measurements is

2610
01:42:08,400 --> 01:42:10,159
the transport protocol and a bit of the

2611
01:42:10,159 --> 01:42:11,360
dns

2612
01:42:11,360 --> 01:42:13,920
and therefore this is relatively rough

2613
01:42:13,920 --> 01:42:16,000
and ready it's not a measure of packet

2614
01:42:16,000 --> 01:42:18,639
rtt times or anything like that

2615
01:42:18,639 --> 01:42:20,800
it's just simply the browser's view of

2616
01:42:20,800 --> 01:42:22,320
the elapsed time

2617
01:42:22,320 --> 01:42:24,239
and you go what does that mean i would

2618
01:42:24,239 --> 01:42:25,040
say

2619
01:42:25,040 --> 01:42:28,080
go ask the browser folk i have no idea

2620
01:42:28,080 --> 01:42:29,679
right but in case it does include any

2621
01:42:29,679 --> 01:42:31,920
latencies from dns for example and if

2622
01:42:31,920 --> 01:42:34,080
there is a bias by always first doing

2623
01:42:34,080 --> 01:42:35,520
the non-quick connection and then doing

2624
01:42:35,520 --> 01:42:37,199
the quick connection you could average

2625
01:42:37,199 --> 01:42:39,600
that out by randomizing the order across

2626
01:42:39,600 --> 01:42:42,480
clients and 50 clients doing quick first

2627
01:42:42,480 --> 01:42:43,920
and then on quick

2628
01:42:43,920 --> 01:42:45,520
and the other 50 percent the other way

2629
01:42:45,520 --> 01:42:46,880
around that might

2630
01:42:46,880 --> 01:42:48,960
average out some of it and

2631
01:42:48,960 --> 01:42:50,480
when i give them an ordered list of

2632
01:42:50,480 --> 01:42:53,119
things to do they almost never appear on

2633
01:42:53,119 --> 01:42:54,960
my servers in that order

2634
01:42:54,960 --> 01:42:56,960
the browsers seem to add their own

2635
01:42:56,960 --> 01:42:58,320
random

2636
01:42:58,320 --> 01:43:01,679
the universe's noisy component

2637
01:43:01,679 --> 01:43:03,119
and it is

2638
01:43:03,119 --> 01:43:05,119
okay that's very interesting

2639
01:43:05,119 --> 01:43:06,480
um

2640
01:43:06,480 --> 01:43:08,800
yes that's what i got okay thank you

2641
01:43:08,800 --> 01:43:11,840
thanks peter

2642
01:43:12,480 --> 01:43:15,280
hi john o'brien you pin uh just uh

2643
01:43:15,280 --> 01:43:17,119
checking my understanding when you say

2644
01:43:17,119 --> 01:43:19,760
that in order for the browser to

2645
01:43:19,760 --> 01:43:22,320
participate in the measurement ipv4 must

2646
01:43:22,320 --> 01:43:23,520
be working

2647
01:43:23,520 --> 01:43:25,440
um i to infer that that means that the

2648
01:43:25,440 --> 01:43:28,239
ad platform is an ipv4 only ad platform

2649
01:43:28,239 --> 01:43:29,440
no

2650
01:43:29,440 --> 01:43:31,440
so i don't understand you know oh

2651
01:43:31,440 --> 01:43:34,159
there's a lot more mechanics about

2652
01:43:34,159 --> 01:43:37,119
limitations in ad delivery networks and

2653
01:43:37,119 --> 01:43:39,679
what we are trying to do

2654
01:43:39,679 --> 01:43:42,960
we originally had scripted an ad that

2655
01:43:42,960 --> 01:43:44,639
when we went off to the admission it

2656
01:43:44,639 --> 01:43:47,360
said run this set of code and we kept on

2657
01:43:47,360 --> 01:43:48,800
changing things

2658
01:43:48,800 --> 01:43:50,320
and every time we did that we had to go

2659
01:43:50,320 --> 01:43:52,239
to the god of advertising saying could

2660
01:43:52,239 --> 01:43:54,560
you please approve our new ad

2661
01:43:54,560 --> 01:43:55,520
and

2662
01:43:55,520 --> 01:43:58,239
as far as i'm aware google is

2663
01:43:58,239 --> 01:44:01,280
an incredible advocate of ai

2664
01:44:01,280 --> 01:44:03,600
incredible there's not a human in sight

2665
01:44:03,600 --> 01:44:06,159
in the entire ad machinery platform so

2666
01:44:06,159 --> 01:44:08,560
when you submit a new ad in the answer

2667
01:44:08,560 --> 01:44:11,280
is random yes approved no not approved

2668
01:44:11,280 --> 01:44:13,280
yes wait for another day

2669
01:44:13,280 --> 01:44:15,360
and we got pretty frustrated with this

2670
01:44:15,360 --> 01:44:17,520
you know understandably and so what we

2671
01:44:17,520 --> 01:44:20,320
did instead was to go okay we're going

2672
01:44:20,320 --> 01:44:22,880
to load a skeleton

2673
01:44:22,880 --> 01:44:25,040
inside the ad machinery

2674
01:44:25,040 --> 01:44:27,199
which then is its first thing to do is

2675
01:44:27,199 --> 01:44:30,080
come back to us going hi give me some

2676
01:44:30,080 --> 01:44:31,440
some tasks

2677
01:44:31,440 --> 01:44:33,199
so we could change the tasks without

2678
01:44:33,199 --> 01:44:34,480
changing the ad

2679
01:44:34,480 --> 01:44:35,679
yay

2680
01:44:35,679 --> 01:44:37,520
that step is b4

2681
01:44:37,520 --> 01:44:40,320
why to maximize the reek because at that

2682
01:44:40,320 --> 01:44:43,440
point we were fixated on measuring v6

2683
01:44:43,440 --> 01:44:45,760
and so in some ways the v4 always has to

2684
01:44:45,760 --> 01:44:47,679
work for this entire thing to flow

2685
01:44:47,679 --> 01:44:48,480
through

2686
01:44:48,480 --> 01:44:50,480
so don't blame the ads don't blame

2687
01:44:50,480 --> 01:44:52,639
google blame me that was the way we

2688
01:44:52,639 --> 01:44:56,159
designed it yes it could be dual stack

2689
01:44:56,159 --> 01:44:57,840
but in some ways

2690
01:44:57,840 --> 01:45:00,000
this stuff works and google has approved

2691
01:45:00,000 --> 01:45:01,280
it yay

2692
01:45:01,280 --> 01:45:03,440
very scared to touch it

2693
01:45:03,440 --> 01:45:06,320
thanks thanks

2694
01:45:07,119 --> 01:45:09,920
no other questions

2695
01:45:12,960 --> 01:45:16,239
so do you plan to to as a quick

2696
01:45:16,239 --> 01:45:19,119
extension you see name spin bit

2697
01:45:19,119 --> 01:45:21,440
to make additional measurements we do

2698
01:45:21,440 --> 01:45:23,040
full packet capture

2699
01:45:23,040 --> 01:45:25,679
full packet capture there's an awful lot

2700
01:45:25,679 --> 01:45:27,119
of packets sitting in a you know

2701
01:45:27,119 --> 01:45:29,679
spinning storage out there somewhere

2702
01:45:29,679 --> 01:45:31,760
do i plan to look at it

2703
01:45:31,760 --> 01:45:33,520
um

2704
01:45:33,520 --> 01:45:35,119
good question

2705
01:45:35,119 --> 01:45:37,199
currently we're fixated on extension

2706
01:45:37,199 --> 01:45:39,440
headers uh we'll probably get back to

2707
01:45:39,440 --> 01:45:41,119
quick once

2708
01:45:41,119 --> 01:45:43,199
questions get resolved the data is there

2709
01:45:43,199 --> 01:45:45,280
never looked i asked the question

2710
01:45:45,280 --> 01:45:47,040
because it's something that is activated

2711
01:45:47,040 --> 01:45:48,560
by the client

2712
01:45:48,560 --> 01:45:51,679
it's already part of the implementation

2713
01:45:51,679 --> 01:45:54,560
but it's a client-side activation this

2714
01:45:54,560 --> 01:45:56,400
is why yeah you've got to look for it

2715
01:45:56,400 --> 01:45:58,719
and that's hours in the day people

2716
01:45:58,719 --> 01:46:00,000
unfortunately

2717
01:46:00,000 --> 01:46:02,800
i can't expose the data sets

2718
01:46:02,800 --> 01:46:04,400
okay there's an awful lot of privacy

2719
01:46:04,400 --> 01:46:06,320
issues because you're seeing

2720
01:46:06,320 --> 01:46:08,560
way too much of end users that i think

2721
01:46:08,560 --> 01:46:10,560
isn't comfortable with so you don't want

2722
01:46:10,560 --> 01:46:12,960
me exposing it i don't want to expose it

2723
01:46:12,960 --> 01:46:14,960
it doesn't get exposed but my question

2724
01:46:14,960 --> 01:46:17,920
was if you plan in the future to to ask

2725
01:46:17,920 --> 01:46:20,639
the client to activate this feature to

2726
01:46:20,639 --> 01:46:23,600
make a lost measurement somewhere on the

2727
01:46:23,600 --> 01:46:25,600
path you see

2728
01:46:25,600 --> 01:46:28,000
it's about your connection lost uh if

2729
01:46:28,000 --> 01:46:31,040
engine x has it for free i'll do it

2730
01:46:31,040 --> 01:46:33,119
if engine x doesn't it's probably not

2731
01:46:33,119 --> 01:46:35,520
going to happen it's mostly to to enable

2732
01:46:35,520 --> 01:46:40,360
on-pass measurements okay

2733
01:46:40,960 --> 01:46:43,199
great we're done thank you very much

2734
01:46:43,199 --> 01:46:46,159
excellent thank you very much everyone

2735
01:46:46,159 --> 01:46:48,560
thank you to the presenters as always

2736
01:46:48,560 --> 01:46:49,760
and

2737
01:46:49,760 --> 01:46:52,560
we will see you next time in

2738
01:46:52,560 --> 01:46:55,520
london

2739
01:46:55,520 --> 01:46:57,520
and if anybody's got any suggestions for

2740
01:46:57,520 --> 01:46:59,199
things i'd like to present on start

2741
01:46:59,199 --> 01:47:03,000
thinking about them now

2742
01:47:23,360 --> 01:47:26,360
wow

