1
00:00:15,200 --> 00:00:16,160
someone else has taken off the

2
00:00:16,160 --> 00:00:19,440
responsibility of breaking things

3
00:00:21,199 --> 00:00:24,600
possible deniability

4
00:01:08,560 --> 00:01:11,880
what'd you do

5
00:01:22,880 --> 00:01:25,119
the projector was off

6
00:01:25,119 --> 00:01:28,000
so that power oh it was the wrong color

7
00:01:28,000 --> 00:01:29,280
light

8
00:01:29,280 --> 00:01:32,240
fans fans are for off projectors when

9
00:01:32,240 --> 00:01:33,920
they're cool

10
00:01:33,920 --> 00:01:36,000
they should be fanned all the time right

11
00:01:36,000 --> 00:01:37,520
but i think

12
00:01:37,520 --> 00:01:41,399
since the fan was only

13
00:01:48,079 --> 00:01:50,960
okay we're looking for a meeting a note

14
00:01:50,960 --> 00:01:52,640
taker we'll wait for people to trickle

15
00:01:52,640 --> 00:01:54,880
in um

16
00:01:54,880 --> 00:01:57,119
anybody interested in taking notes

17
00:01:57,119 --> 00:01:57,920
uh

18
00:01:57,920 --> 00:01:59,200
you don't have to be in the room you can

19
00:01:59,200 --> 00:02:00,320
be in the room

20
00:02:00,320 --> 00:02:02,000
who wants to be a notetaker notetaking

21
00:02:02,000 --> 00:02:05,759
is a excellent opportunity to

22
00:02:07,040 --> 00:02:11,039
to now be part of the process

23
00:02:13,200 --> 00:02:15,920
anyone on

24
00:02:16,319 --> 00:02:18,800
online who wants to be a note taker

25
00:02:18,800 --> 00:02:22,800
it will give you a great sense of uh

26
00:02:22,800 --> 00:02:25,520
participation

27
00:02:26,800 --> 00:02:30,239
you can if you'd like to

28
00:02:30,319 --> 00:02:33,280
you'd be more than welcome

29
00:02:35,680 --> 00:02:36,879
somebody else can do it when you're when

30
00:02:36,879 --> 00:02:39,200
you're up

31
00:02:40,879 --> 00:02:42,000
does that sound like eric you're

32
00:02:42,000 --> 00:02:44,400
interested

33
00:02:48,640 --> 00:02:51,839
it's a once-in-a-lifetime

34
00:02:54,560 --> 00:02:58,480
yes go to meet echo and there is a

35
00:02:58,480 --> 00:03:02,040
note-taking tool

36
00:03:06,800 --> 00:03:08,640
um

37
00:03:08,640 --> 00:03:10,879
yes

38
00:03:10,879 --> 00:03:14,879
trying to try the click on the video

39
00:03:15,680 --> 00:03:19,480
all right we'll try and find somebody

40
00:03:19,920 --> 00:03:22,239
i got you but i will i won't leave you

41
00:03:22,239 --> 00:03:24,480
hanging

42
00:03:25,120 --> 00:03:27,040
let me see here how about uh if you take

43
00:03:27,040 --> 00:03:28,080
notes i'll take notes while you're

44
00:03:28,080 --> 00:03:30,560
presenting

45
00:03:31,200 --> 00:03:34,480
he said try to find somebody else

46
00:03:36,959 --> 00:03:39,200
and use you as a backup

47
00:03:39,200 --> 00:03:40,159
hold up

48
00:03:40,159 --> 00:03:41,599
hold on a second let me see if there's

49
00:03:41,599 --> 00:03:45,480
one person but uh

50
00:03:47,840 --> 00:03:50,840
is

51
00:04:08,080 --> 00:04:09,680
a lot of people walking around look

52
00:04:09,680 --> 00:04:11,200
around

53
00:04:11,200 --> 00:04:14,359
run away

54
00:04:28,130 --> 00:04:31,279
[Music]

55
00:04:39,199 --> 00:04:42,919
i want to take a walk

56
00:04:43,199 --> 00:04:44,400
jake um

57
00:04:44,400 --> 00:04:45,919
would you have any interest in being the

58
00:04:45,919 --> 00:04:47,680
note taker

59
00:04:47,680 --> 00:04:49,360
sure

60
00:04:49,360 --> 00:04:53,440
and when you're up talking uh eric

61
00:04:53,440 --> 00:04:55,680
can take take the

62
00:04:55,680 --> 00:04:57,360
all right i don't

63
00:04:57,360 --> 00:04:59,919
i mean i think max is mostly driving

64
00:04:59,919 --> 00:05:01,360
okay

65
00:05:01,360 --> 00:05:03,759
all right cool

66
00:05:03,759 --> 00:05:06,080
we're good

67
00:05:09,440 --> 00:05:12,240
okay we'll wait another minute

68
00:05:12,240 --> 00:05:15,520
for people to come back from lunch

69
00:05:19,120 --> 00:05:22,960
switch to the um go back to the

70
00:05:22,960 --> 00:05:24,960
i'm less familiar with that interface

71
00:05:24,960 --> 00:05:27,199
that's the online tool

72
00:05:27,199 --> 00:05:30,000
uh do the do the remote one i'm sorry

73
00:05:30,000 --> 00:05:33,280
click click on the um

74
00:05:33,280 --> 00:05:35,120
video link

75
00:05:35,120 --> 00:05:36,800
from the agenda

76
00:05:36,800 --> 00:05:39,120
video

77
00:05:39,600 --> 00:05:40,880
and you should get an interface that

78
00:05:40,880 --> 00:05:43,520
looks like this

79
00:05:43,840 --> 00:05:45,280
and then on that

80
00:05:45,280 --> 00:05:46,960
little box with a pencil sticking out

81
00:05:46,960 --> 00:05:50,280
that's the note

82
00:06:05,440 --> 00:06:07,840
cookies

83
00:06:40,000 --> 00:06:42,639
and it's an online note-taking thing so

84
00:06:42,639 --> 00:06:44,720
you and jake can work in tandem if he

85
00:06:44,720 --> 00:06:47,120
gets up

86
00:06:47,520 --> 00:06:49,280
okay we ready to

87
00:06:49,280 --> 00:06:51,520
get started

88
00:06:51,520 --> 00:06:53,599
okay how's the room you guys ready

89
00:06:53,599 --> 00:06:56,000
all right look at that

90
00:06:56,000 --> 00:06:58,000
the energy is just overwhelming

91
00:06:58,000 --> 00:07:00,720
there we go we got one yeehaw

92
00:07:00,720 --> 00:07:01,680
all right

93
00:07:01,680 --> 00:07:03,039
so we're gonna

94
00:07:03,039 --> 00:07:05,759
plow right through this food cola

95
00:07:05,759 --> 00:07:08,720
um all right we're gonna start

96
00:07:08,720 --> 00:07:10,800
taking off for this flight

97
00:07:10,800 --> 00:07:13,520
um so uh here's the note well

98
00:07:13,520 --> 00:07:15,759
um it

99
00:07:15,759 --> 00:07:17,199
should bear striking resemblance to all

100
00:07:17,199 --> 00:07:18,400
the other note wells you've seen at the

101
00:07:18,400 --> 00:07:20,560
beginning of every meeting um

102
00:07:20,560 --> 00:07:22,240
so uh just

103
00:07:22,240 --> 00:07:25,280
please read it uh and be aware of

104
00:07:25,280 --> 00:07:26,639
uh what's

105
00:07:26,639 --> 00:07:28,720
the the what is noted well in

106
00:07:28,720 --> 00:07:31,720
participating

107
00:07:34,000 --> 00:07:35,840
meeting tips um

108
00:07:35,840 --> 00:07:38,639
you know for for those uh who are just

109
00:07:38,639 --> 00:07:41,280
arriving today and haven't been in any

110
00:07:41,280 --> 00:07:43,680
of these uh previous meetings

111
00:07:43,680 --> 00:07:45,039
even if you're in the room please do

112
00:07:45,039 --> 00:07:46,400
join the meet echo tool because that

113
00:07:46,400 --> 00:07:48,639
acts as the blue sheets

114
00:07:48,639 --> 00:07:51,039
and it also enables you to participate

115
00:07:51,039 --> 00:07:55,599
in chat and any polls that we have

116
00:07:55,680 --> 00:07:57,840
just a reminder please wear your masks

117
00:07:57,840 --> 00:07:59,840
unless you are actively speaking at the

118
00:07:59,840 --> 00:08:02,160
mic and you think that

119
00:08:02,160 --> 00:08:04,479
that can help

120
00:08:04,479 --> 00:08:07,440
be a little more clear

121
00:08:07,680 --> 00:08:09,280
and

122
00:08:09,280 --> 00:08:11,280
remote participants

123
00:08:11,280 --> 00:08:13,360
keep your audio and video off unless you

124
00:08:13,360 --> 00:08:16,080
are presenting

125
00:08:18,000 --> 00:08:20,960
here's today's agenda

126
00:08:22,639 --> 00:08:24,240
we have a

127
00:08:24,240 --> 00:08:28,160
action-packed agenda um

128
00:08:28,319 --> 00:08:30,160
let me know if we missed anything or if

129
00:08:30,160 --> 00:08:32,559
you'd like to bash this agenda

130
00:08:32,559 --> 00:08:36,399
otherwise this is the plan

131
00:08:36,559 --> 00:08:37,919
actually where's

132
00:08:37,919 --> 00:08:40,320
warren was supposed to be here is warren

133
00:08:40,320 --> 00:08:41,279
in here

134
00:08:41,279 --> 00:08:42,479
warren

135
00:08:42,479 --> 00:08:43,919
with a w

136
00:08:43,919 --> 00:08:46,240
um

137
00:08:47,120 --> 00:08:49,440
okay

138
00:08:50,160 --> 00:08:50,959
yes

139
00:08:50,959 --> 00:08:52,560
we missed smart warren

140
00:08:52,560 --> 00:08:55,839
all right um

141
00:08:56,000 --> 00:08:57,279
yeah

142
00:08:57,279 --> 00:08:59,920
is there any other ops area meetings are

143
00:08:59,920 --> 00:09:02,560
going on right now

144
00:09:02,560 --> 00:09:03,839
i guess we'll just

145
00:09:03,839 --> 00:09:06,240
cut him in if he shows up yeah he must

146
00:09:06,240 --> 00:09:07,680
be a dns

147
00:09:07,680 --> 00:09:09,040
dns ops

148
00:09:09,040 --> 00:09:12,480
i guess we know where he we fall in his

149
00:09:12,480 --> 00:09:15,680
hierarchy of interests

150
00:09:16,560 --> 00:09:19,599
um or he's still at

151
00:09:20,839 --> 00:09:24,399
lunch um all right so uh status of

152
00:09:24,399 --> 00:09:26,080
working group docs

153
00:09:26,080 --> 00:09:28,399
um

154
00:09:28,959 --> 00:09:32,800
yang models uh document um sandy are you

155
00:09:32,800 --> 00:09:34,640
on and

156
00:09:34,640 --> 00:09:36,800
sandy would you like to speak up

157
00:09:36,800 --> 00:09:38,959
uh about um

158
00:09:38,959 --> 00:09:40,800
any up do you have any updates or

159
00:09:40,800 --> 00:09:42,480
anything you'd like to say about the

160
00:09:42,480 --> 00:09:44,240
yang models

161
00:09:44,240 --> 00:09:47,800
uh draft

162
00:09:52,240 --> 00:09:54,880
sandy are you there

163
00:09:54,880 --> 00:09:57,920
i see you in the uh

164
00:09:58,560 --> 00:10:00,720
yeah okay sandy let us know if you have

165
00:10:00,720 --> 00:10:02,959
uh if you want to jump up um the

166
00:10:02,959 --> 00:10:04,720
telemetry draft

167
00:10:04,720 --> 00:10:07,360
uh how how you will be presenting on

168
00:10:07,360 --> 00:10:08,240
this

169
00:10:08,240 --> 00:10:11,279
um and

170
00:10:14,720 --> 00:10:15,760
okay

171
00:10:15,760 --> 00:10:17,680
yeah so that's been a pretty consistent

172
00:10:17,680 --> 00:10:20,160
thing so um please do if you're

173
00:10:20,160 --> 00:10:21,279
interested if you have interested in

174
00:10:21,279 --> 00:10:25,120
passions in yang or even if you don't um

175
00:10:25,120 --> 00:10:26,480
that's a draft that's been sitting for a

176
00:10:26,480 --> 00:10:29,519
while and needing uh needing comments so

177
00:10:29,519 --> 00:10:32,000
please speak up uh so please take a look

178
00:10:32,000 --> 00:10:34,480
at it review it and

179
00:10:34,480 --> 00:10:35,839
reach out to the authors with any

180
00:10:35,839 --> 00:10:38,720
comments you might have

181
00:10:38,720 --> 00:10:41,600
the redundant ingress failover draft

182
00:10:41,600 --> 00:10:43,120
this has been adopted

183
00:10:43,120 --> 00:10:44,959
since the last

184
00:10:44,959 --> 00:10:46,959
since vienna so that's a new working

185
00:10:46,959 --> 00:10:49,839
group document um

186
00:10:49,839 --> 00:10:53,279
do we have any authors co-authors want

187
00:10:53,279 --> 00:10:55,519
to speak up and say have anything to

188
00:10:55,519 --> 00:10:59,040
note about that draft any updates or

189
00:10:59,040 --> 00:11:01,519
is it just the same as from uh when it

190
00:11:01,519 --> 00:11:04,800
was originally submitted

191
00:11:05,360 --> 00:11:07,760
anyone

192
00:11:09,519 --> 00:11:13,160
no okay

193
00:11:22,720 --> 00:11:24,480
are you a co-author on that one

194
00:11:24,480 --> 00:11:26,000
okay do you have any comments about that

195
00:11:26,000 --> 00:11:27,040
one

196
00:11:27,040 --> 00:11:29,279
here

197
00:11:29,279 --> 00:11:32,800
i owe them a review okay

198
00:11:34,480 --> 00:11:36,000
okay um

199
00:11:36,000 --> 00:11:38,079
jake uh do you want to come up and give

200
00:11:38,079 --> 00:11:41,519
us an update on your um

201
00:11:41,519 --> 00:11:44,000
multicast to the browser drafts

202
00:11:44,000 --> 00:11:49,519
um the dorms ambi cbac and mnet

203
00:11:50,079 --> 00:11:52,079
i should note uh dorms just went working

204
00:11:52,079 --> 00:11:54,079
group last call we've we've heard some

205
00:11:54,079 --> 00:11:56,560
comments i would encourage others please

206
00:11:56,560 --> 00:11:58,079
speak up on list

207
00:11:58,079 --> 00:12:00,079
if you want to see this document

208
00:12:00,079 --> 00:12:03,279
advanced to iesg

209
00:12:07,600 --> 00:12:08,839
does that work

210
00:12:08,839 --> 00:12:12,560
yeah uh thanks lenny this is jake um

211
00:12:12,560 --> 00:12:13,920
uh so

212
00:12:13,920 --> 00:12:17,760
most of my time since uh

213
00:12:17,760 --> 00:12:20,000
since 113 as i mentioned there was on

214
00:12:20,000 --> 00:12:22,639
the uh it was on the quick work

215
00:12:22,639 --> 00:12:23,600
um

216
00:12:23,600 --> 00:12:26,959
so i i did like do my own self-review of

217
00:12:26,959 --> 00:12:29,040
dorms before uh

218
00:12:29,040 --> 00:12:31,519
before poking you about last call uh and

219
00:12:31,519 --> 00:12:33,440
i think i think it's okay so yeah i'd

220
00:12:33,440 --> 00:12:35,200
love to see it go forward

221
00:12:35,200 --> 00:12:36,880
um

222
00:12:36,880 --> 00:12:39,519
probably next on my list is mnet

223
00:12:39,519 --> 00:12:41,600
um and uh

224
00:12:41,600 --> 00:12:44,720
after a round of reviews and i i kind of

225
00:12:44,720 --> 00:12:46,240
because there's a dependency on dorms i

226
00:12:46,240 --> 00:12:47,120
want

227
00:12:47,120 --> 00:12:49,519
ambiency back

228
00:12:49,519 --> 00:12:50,720
uh

229
00:12:50,720 --> 00:12:52,240
you know to to make sure that those are

230
00:12:52,240 --> 00:12:54,560
gonna be uh

231
00:12:54,560 --> 00:12:56,160
unimpacted by any

232
00:12:56,160 --> 00:12:58,800
feedback i get on dorms uh but uh

233
00:12:58,800 --> 00:13:01,120
i will wanna get uh reviews on those

234
00:13:01,120 --> 00:13:03,440
from security people and transport

235
00:13:03,440 --> 00:13:05,120
people respectively

236
00:13:05,120 --> 00:13:07,760
um at some point but that'll be coming

237
00:13:07,760 --> 00:13:09,519
up soon

238
00:13:09,519 --> 00:13:14,079
uh well soonish i hope maybe

239
00:13:14,560 --> 00:13:17,200
especially and i think there's been a

240
00:13:17,200 --> 00:13:18,200
number

241
00:13:18,200 --> 00:13:21,680
of networks that wanted to use that so

242
00:13:21,680 --> 00:13:24,000
i'll probably want to

243
00:13:24,000 --> 00:13:26,160
want to push that forward

244
00:13:26,160 --> 00:13:28,720
and then c back

245
00:13:28,720 --> 00:13:31,040
probably more than ambi because for

246
00:13:31,040 --> 00:13:33,760
for the end point authentication

247
00:13:33,760 --> 00:13:35,839
quick will also cover that so ambi might

248
00:13:35,839 --> 00:13:38,399
turn into just a sort of

249
00:13:38,399 --> 00:13:41,360
forwarding for the network uh which is

250
00:13:41,360 --> 00:13:43,519
still important but probably not as

251
00:13:43,519 --> 00:13:45,519
important as the endpoint when i thought

252
00:13:45,519 --> 00:13:48,560
it was going to be using that so um

253
00:13:48,560 --> 00:13:50,320
uh yeah so

254
00:13:50,320 --> 00:13:51,680
these are still uh

255
00:13:51,680 --> 00:13:52,560
still

256
00:13:52,560 --> 00:13:54,639
i intend to to get them over the line

257
00:13:54,639 --> 00:13:55,600
one day

258
00:13:55,600 --> 00:13:58,160
um thank you uh talk about the

259
00:13:58,160 --> 00:14:00,880
clustering are all three four being

260
00:14:00,880 --> 00:14:02,320
clustered and you have to cluster them

261
00:14:02,320 --> 00:14:04,320
at the same time like how do we yeah so

262
00:14:04,320 --> 00:14:07,839
i i actually asked the rc editors this

263
00:14:07,839 --> 00:14:10,480
uh earlier this week so they get auto

264
00:14:10,480 --> 00:14:12,720
clustered apparently when they reach the

265
00:14:12,720 --> 00:14:14,560
um if there's normative references

266
00:14:14,560 --> 00:14:17,680
between them uh when they reach the rrc

267
00:14:17,680 --> 00:14:19,440
editor's key but i can also just send a

268
00:14:19,440 --> 00:14:21,199
note and ask them to

269
00:14:21,199 --> 00:14:23,680
to the rsc editors so

270
00:14:23,680 --> 00:14:26,160
i might do that uh mnat is not part of

271
00:14:26,160 --> 00:14:28,480
the same cluster i just have a cluster

272
00:14:28,480 --> 00:14:30,320
or i just wanted a cluster for dorm's

273
00:14:30,320 --> 00:14:33,440
ambience see back because they're um

274
00:14:33,440 --> 00:14:35,839
they're all part of the same uh protocol

275
00:14:35,839 --> 00:14:37,920
basically

276
00:14:37,920 --> 00:14:40,320
all right yeah thanks great thanks um so

277
00:14:40,320 --> 00:14:42,320
again we encourage uh everybody take a

278
00:14:42,320 --> 00:14:43,440
look at

279
00:14:43,440 --> 00:14:45,600
speak up on dorms and take a look at uh

280
00:14:45,600 --> 00:14:48,160
and review ambience back

281
00:14:48,160 --> 00:14:49,360
so we can

282
00:14:49,360 --> 00:14:53,360
work on advancing those as well soon

283
00:14:55,920 --> 00:14:57,440
and those are all the active working

284
00:14:57,440 --> 00:15:00,639
group uh documents

285
00:15:01,440 --> 00:15:03,760
um

286
00:15:04,000 --> 00:15:06,959
so uh we'll move on so um

287
00:15:06,959 --> 00:15:08,639
warren was supposed to be here and i

288
00:15:08,639 --> 00:15:10,720
believe uh if i might steal his thunder

289
00:15:10,720 --> 00:15:13,519
i think he was saying that his term as

290
00:15:13,519 --> 00:15:15,279
a.d is

291
00:15:15,279 --> 00:15:16,959
expiring soon

292
00:15:16,959 --> 00:15:20,160
and he wanted to encourage uh

293
00:15:20,160 --> 00:15:23,680
others to consider becoming an a.d

294
00:15:23,680 --> 00:15:26,160
if you're interested in becoming an a.d

295
00:15:26,160 --> 00:15:27,920
and

296
00:15:27,920 --> 00:15:29,680
being his successor

297
00:15:29,680 --> 00:15:31,279
and have questions about that please do

298
00:15:31,279 --> 00:15:33,920
reach out to him

299
00:15:34,800 --> 00:15:37,600
and if he does come in we'll

300
00:15:37,600 --> 00:15:40,240
see if that's what he says

301
00:15:40,240 --> 00:15:44,000
so next up is the telemetry draft uh

302
00:15:44,000 --> 00:15:47,160
how you

303
00:16:10,959 --> 00:16:13,599
oh okay

304
00:16:14,959 --> 00:16:16,800
yeah this is how you song from future

305
00:16:16,800 --> 00:16:19,360
way today i'm going to give you a

306
00:16:19,360 --> 00:16:22,560
brief update and recap

307
00:16:22,560 --> 00:16:26,000
of this on-pass temp tree uh using

308
00:16:26,000 --> 00:16:28,079
iom for multicast

309
00:16:28,079 --> 00:16:31,199
on behalf on behalf of our co-authors

310
00:16:31,199 --> 00:16:34,079
next slides please

311
00:16:34,240 --> 00:16:35,680
so first uh

312
00:16:35,680 --> 00:16:39,920
updates of this new revision uh we

313
00:16:39,920 --> 00:16:41,440
actually several

314
00:16:41,440 --> 00:16:44,079
technologies uh this document is based

315
00:16:44,079 --> 00:16:48,959
on have been uh goes through the uh

316
00:16:48,959 --> 00:16:52,000
some of them have been published as rfc

317
00:16:52,000 --> 00:16:54,720
and some of them is in the last stage

318
00:16:54,720 --> 00:16:58,240
for publication so uh now is a good time

319
00:16:58,240 --> 00:16:59,040
to

320
00:16:59,040 --> 00:17:02,639
make sure our scheme is actually comply

321
00:17:02,639 --> 00:17:06,640
with the existing standards

322
00:17:06,799 --> 00:17:09,359
so for example

323
00:17:09,359 --> 00:17:13,039
this technology this scheme is based on

324
00:17:13,039 --> 00:17:15,679
one of them is based on the iom trace

325
00:17:15,679 --> 00:17:16,720
option

326
00:17:16,720 --> 00:17:21,039
which already been specified in rfc 9187

327
00:17:21,039 --> 00:17:21,919
and

328
00:17:21,919 --> 00:17:23,039
another

329
00:17:23,039 --> 00:17:26,160
option scheme is based on the iom direct

330
00:17:26,160 --> 00:17:30,400
export draft that will be published soon

331
00:17:30,400 --> 00:17:33,840
okay next slice

332
00:17:34,320 --> 00:17:37,280
uh first the problem we want to solve in

333
00:17:37,280 --> 00:17:39,919
this draft is uh to apply the unpassed

334
00:17:39,919 --> 00:17:43,039
telemetry technologies in for multicast

335
00:17:43,039 --> 00:17:46,400
we think it's a useful uh to monitor the

336
00:17:46,400 --> 00:17:48,880
multicast traffic

337
00:17:48,880 --> 00:17:50,880
so the so-called on-pass temperature

338
00:17:50,880 --> 00:17:52,000
means we

339
00:17:52,000 --> 00:17:54,480
insert the instruction and the telemetry

340
00:17:54,480 --> 00:17:58,480
data in user packet itself

341
00:17:58,559 --> 00:18:00,799
so by doing that we can collect the

342
00:18:00,799 --> 00:18:03,200
real-time performance uh on the

343
00:18:03,200 --> 00:18:05,360
experience of user traffic

344
00:18:05,360 --> 00:18:08,240
and it's also very useful uh in the

345
00:18:08,240 --> 00:18:11,039
in terms of multicast it can help us to

346
00:18:11,039 --> 00:18:14,320
reconstruct the multicast tree from the

347
00:18:14,320 --> 00:18:17,760
data trees we collected

348
00:18:18,559 --> 00:18:22,000
but but the issue about that is if we

349
00:18:22,000 --> 00:18:24,960
just use iom trees option it will

350
00:18:24,960 --> 00:18:28,640
introduce a considerable data redundancy

351
00:18:28,640 --> 00:18:32,320
um because uh each destination node

352
00:18:32,320 --> 00:18:34,000
will collect

353
00:18:34,000 --> 00:18:36,320
the trees of the entire past you can

354
00:18:36,320 --> 00:18:38,960
imagine uh in the in this tree

355
00:18:38,960 --> 00:18:41,280
uh you know many sections actually are

356
00:18:41,280 --> 00:18:42,720
overlapped

357
00:18:42,720 --> 00:18:44,960
from the root to each node

358
00:18:44,960 --> 00:18:46,960
but if you get

359
00:18:46,960 --> 00:18:49,919
all those data and all the uh leaf nodes

360
00:18:49,919 --> 00:18:51,280
that will

361
00:18:51,280 --> 00:18:53,200
there will be a lot of data redundancy

362
00:18:53,200 --> 00:18:55,280
we want to avoid that

363
00:18:55,280 --> 00:18:59,360
so we can have a two solutions to uh to

364
00:18:59,360 --> 00:19:02,000
to solve this problem the first one is

365
00:19:02,000 --> 00:19:04,160
still based on the iom tricks option the

366
00:19:04,160 --> 00:19:06,720
second one is based on the iom direct

367
00:19:06,720 --> 00:19:08,640
export option

368
00:19:08,640 --> 00:19:11,840
next slides please

369
00:19:12,240 --> 00:19:15,679
so the for the trees option uh the trees

370
00:19:15,679 --> 00:19:18,480
option means we just keep adding the

371
00:19:18,480 --> 00:19:21,120
telemetry data in the user package on

372
00:19:21,120 --> 00:19:22,880
the folding path

373
00:19:22,880 --> 00:19:25,919
so you can see this uh this is why it

374
00:19:25,919 --> 00:19:28,720
will introduce a lot of redundancy data

375
00:19:28,720 --> 00:19:30,400
in a multicast

376
00:19:30,400 --> 00:19:31,679
tree

377
00:19:31,679 --> 00:19:34,880
so the solution is we basically combine

378
00:19:34,880 --> 00:19:37,760
the iom trace option and the postcard

379
00:19:37,760 --> 00:19:41,360
based telemetry we don't try to collect

380
00:19:41,360 --> 00:19:42,400
the

381
00:19:42,400 --> 00:19:44,880
data trees for the entire path

382
00:19:44,880 --> 00:19:45,840
actually

383
00:19:45,840 --> 00:19:47,520
at each

384
00:19:47,520 --> 00:19:49,520
branching node

385
00:19:49,520 --> 00:19:50,880
we just

386
00:19:50,880 --> 00:19:53,600
configure configure node to export the

387
00:19:53,600 --> 00:19:56,320
the data we collected so far then we

388
00:19:56,320 --> 00:19:59,440
clear the trace twist and

389
00:19:59,440 --> 00:20:02,080
on then on each branch we can do the

390
00:20:02,080 --> 00:20:04,640
data collection again

391
00:20:04,640 --> 00:20:07,520
this option there's no need to update

392
00:20:07,520 --> 00:20:10,559
the rfc 9197

393
00:20:10,559 --> 00:20:12,320
it only requires the data plane

394
00:20:12,320 --> 00:20:13,919
configuration

395
00:20:13,919 --> 00:20:16,799
next slides please

396
00:20:17,440 --> 00:20:20,320
so this is a figure to show the show an

397
00:20:20,320 --> 00:20:22,640
example you can see this

398
00:20:22,640 --> 00:20:25,440
multicast tree and to node b there will

399
00:20:25,440 --> 00:20:28,559
be two branches and node d there will be

400
00:20:28,559 --> 00:20:29,919
three branches

401
00:20:29,919 --> 00:20:32,640
then we configure the node b and the d

402
00:20:32,640 --> 00:20:34,799
to let them know and this point they

403
00:20:34,799 --> 00:20:36,480
need to

404
00:20:36,480 --> 00:20:39,840
just export the data collected so far

405
00:20:39,840 --> 00:20:42,640
then we can clear the um

406
00:20:42,640 --> 00:20:45,280
the data part then we can start over

407
00:20:45,280 --> 00:20:48,799
again on each on each branches

408
00:20:48,799 --> 00:20:49,380
and

409
00:20:49,380 --> 00:20:50,559
[Music]

410
00:20:50,559 --> 00:20:52,960
but to reconstruct the

411
00:20:52,960 --> 00:20:56,240
multicast tree we do require that the

412
00:20:56,240 --> 00:20:59,919
node id data is a mandatory that must be

413
00:20:59,919 --> 00:21:01,440
collected

414
00:21:01,440 --> 00:21:03,120
and

415
00:21:03,120 --> 00:21:05,520
also

416
00:21:05,520 --> 00:21:07,440
so each

417
00:21:07,440 --> 00:21:10,240
each sections trees also need to include

418
00:21:10,240 --> 00:21:12,000
the branching node

419
00:21:12,000 --> 00:21:14,559
for example the the node d

420
00:21:14,559 --> 00:21:15,600
it

421
00:21:15,600 --> 00:21:18,720
explore the data must start from node b

422
00:21:18,720 --> 00:21:21,280
so it's a cover the section b c and the

423
00:21:21,280 --> 00:21:23,679
d in this example

424
00:21:23,679 --> 00:21:26,320
next slice

425
00:21:27,039 --> 00:21:28,720
the second

426
00:21:28,720 --> 00:21:33,200
optional solution is to to use iom dx as

427
00:21:33,200 --> 00:21:35,360
a direct export

428
00:21:35,360 --> 00:21:36,640
option

429
00:21:36,640 --> 00:21:40,159
um so for this uh each package only

430
00:21:40,159 --> 00:21:43,280
carrier instruction header to tell you

431
00:21:43,280 --> 00:21:45,440
what data to collect

432
00:21:45,440 --> 00:21:48,400
and then uh each node will

433
00:21:48,400 --> 00:21:49,679
just

434
00:21:49,679 --> 00:21:52,390
send a independent

435
00:21:52,390 --> 00:21:53,840
[Music]

436
00:21:53,840 --> 00:21:56,400
postcard package

437
00:21:56,400 --> 00:21:59,440
to send the collected data to some

438
00:21:59,440 --> 00:22:01,039
collectors

439
00:22:01,039 --> 00:22:04,480
so therefore the the data never goes

440
00:22:04,480 --> 00:22:06,480
with the user packet

441
00:22:06,480 --> 00:22:07,360
so

442
00:22:07,360 --> 00:22:09,440
there's there will be no redundant data

443
00:22:09,440 --> 00:22:11,440
because each

444
00:22:11,440 --> 00:22:15,039
each node will only export the its local

445
00:22:15,039 --> 00:22:16,159
data

446
00:22:16,159 --> 00:22:18,960
but the issue here is that for in the

447
00:22:18,960 --> 00:22:22,400
case of multicast

448
00:22:22,400 --> 00:22:24,400
for the postcards mode we need to

449
00:22:24,400 --> 00:22:28,320
correlate the postcard data

450
00:22:28,320 --> 00:22:30,080
this is especially challenging for

451
00:22:30,080 --> 00:22:32,720
multicast because

452
00:22:32,720 --> 00:22:35,120
we also need to identify

453
00:22:35,120 --> 00:22:37,520
which branch

454
00:22:37,520 --> 00:22:39,440
this data is a

455
00:22:39,440 --> 00:22:42,400
postcard data comes from

456
00:22:42,400 --> 00:22:43,200
so

457
00:22:43,200 --> 00:22:47,280
to solve that problem we need a new data

458
00:22:47,280 --> 00:22:50,000
type we call that branch

459
00:22:50,000 --> 00:22:53,679
branch id or branch identifier

460
00:22:53,679 --> 00:22:56,960
solutions that the branch identifier

461
00:22:56,960 --> 00:22:58,720
can combine

462
00:22:58,720 --> 00:23:01,440
contains two parts the first part is a

463
00:23:01,440 --> 00:23:04,000
node id

464
00:23:04,000 --> 00:23:07,559
this is identical as specified in rfc

465
00:23:07,559 --> 00:23:11,200
9197 it uses three three bytes

466
00:23:11,200 --> 00:23:13,120
to hold the node id

467
00:23:13,120 --> 00:23:16,400
then we use one more byte to hold the

468
00:23:16,400 --> 00:23:19,600
branch index so if this is local

469
00:23:19,600 --> 00:23:22,799
assigned index for each output port of

470
00:23:22,799 --> 00:23:24,880
the multicast tree

471
00:23:24,880 --> 00:23:28,480
so therefore we can support up to 256

472
00:23:28,480 --> 00:23:30,240
local branches

473
00:23:30,240 --> 00:23:32,799
so by combining the node id and branch

474
00:23:32,799 --> 00:23:36,400
index we can uniquely identify each

475
00:23:36,400 --> 00:23:37,360
branch

476
00:23:37,360 --> 00:23:40,000
and to each branching node

477
00:23:40,000 --> 00:23:42,880
next slides please

478
00:23:43,600 --> 00:23:47,039
so uh left side you can shows

479
00:23:47,039 --> 00:23:49,200
a frame format

480
00:23:49,200 --> 00:23:50,870
of this uh

481
00:23:50,870 --> 00:23:52,480
[Music]

482
00:23:52,480 --> 00:23:55,520
direct export instruction header

483
00:23:55,520 --> 00:23:58,080
uh we will need to

484
00:23:58,080 --> 00:24:01,440
allocate a flag bit

485
00:24:01,440 --> 00:24:03,679
we call that m

486
00:24:03,679 --> 00:24:05,520
to indicate uh

487
00:24:05,520 --> 00:24:09,200
this is uh for the multicast um

488
00:24:09,200 --> 00:24:10,720
use case

489
00:24:10,720 --> 00:24:12,960
uh

490
00:24:13,200 --> 00:24:17,039
so if the m bit is set to one it means

491
00:24:17,039 --> 00:24:19,279
there will be a

492
00:24:19,279 --> 00:24:22,000
optional data field the multicast branch

493
00:24:22,000 --> 00:24:22,880
id

494
00:24:22,880 --> 00:24:26,159
included in the data part

495
00:24:26,159 --> 00:24:28,799
you can see there's a third

496
00:24:28,799 --> 00:24:31,679
optional part which includes the branch

497
00:24:31,679 --> 00:24:34,320
id we just introduced

498
00:24:34,320 --> 00:24:36,320
so with this such information

499
00:24:36,320 --> 00:24:37,840
information

500
00:24:37,840 --> 00:24:41,360
it allows us to easily reconstruct the

501
00:24:41,360 --> 00:24:43,679
multicast tree

502
00:24:43,679 --> 00:24:46,799
on the right side you can see an example

503
00:24:46,799 --> 00:24:48,240
in the bracket

504
00:24:48,240 --> 00:24:51,520
the item is just means the branch id you

505
00:24:51,520 --> 00:24:54,970
can see in the node a the

506
00:24:54,970 --> 00:24:56,880
[Music]

507
00:24:56,880 --> 00:25:00,880
postcard send package includes the a0 as

508
00:25:00,880 --> 00:25:03,440
a node id

509
00:25:03,440 --> 00:25:06,799
branch id and

510
00:25:06,799 --> 00:25:09,600
and followed with a

511
00:25:09,600 --> 00:25:12,640
telemetry data collected at the node a

512
00:25:12,640 --> 00:25:15,679
and at the node b it again it sends a

513
00:25:15,679 --> 00:25:18,640
branch id a0

514
00:25:18,640 --> 00:25:21,919
than the local data collected

515
00:25:21,919 --> 00:25:24,799
but you can see in the following node

516
00:25:24,799 --> 00:25:27,600
there are two branches the upper branch

517
00:25:27,600 --> 00:25:30,480
will be the branch identify b0 and the

518
00:25:30,480 --> 00:25:32,240
lower branch will

519
00:25:32,240 --> 00:25:35,919
have the branch id b1

520
00:25:35,919 --> 00:25:39,200
so with this information it

521
00:25:39,200 --> 00:25:41,200
allows us to easily

522
00:25:41,200 --> 00:25:43,200
identify

523
00:25:43,200 --> 00:25:45,039
where this

524
00:25:45,039 --> 00:25:48,480
postcard comes from then we can easily

525
00:25:48,480 --> 00:25:51,360
reconstruct the multicast tree

526
00:25:51,360 --> 00:25:55,000
next slides please

527
00:25:56,559 --> 00:25:59,440
okay so this is a brief introduction

528
00:25:59,440 --> 00:26:01,360
about this and

529
00:26:01,360 --> 00:26:03,919
so far we think this document is already

530
00:26:03,919 --> 00:26:06,000
pretty mature and therefore

531
00:26:06,000 --> 00:26:06,880
we

532
00:26:06,880 --> 00:26:10,159
ask the working uh group to consider the

533
00:26:10,159 --> 00:26:12,240
working group let's call for it

534
00:26:12,240 --> 00:26:14,640
thank you

535
00:26:19,520 --> 00:26:22,760
any questions

536
00:26:28,880 --> 00:26:30,480
i think you can just you can just walk

537
00:26:30,480 --> 00:26:32,720
up there

538
00:26:35,440 --> 00:26:37,120
it's a small enough room we can we can

539
00:26:37,120 --> 00:26:40,960
manage yeah jay colin um

540
00:26:40,960 --> 00:26:44,320
uh do you have any implementation status

541
00:26:44,320 --> 00:26:45,440
to

542
00:26:45,440 --> 00:26:47,840
to share on on this work it looks pretty

543
00:26:47,840 --> 00:26:50,400
good i think

544
00:26:50,400 --> 00:26:52,640
we don't have an implementation for this

545
00:26:52,640 --> 00:26:56,480
multicast yet but uh we do have a uh

546
00:26:56,480 --> 00:27:00,000
implementation for the iom uh in general

547
00:27:00,000 --> 00:27:02,400
and is that in in what the open daylight

548
00:27:02,400 --> 00:27:03,600
or in

549
00:27:03,600 --> 00:27:04,799
uh

550
00:27:04,799 --> 00:27:08,400
is a i think in the product um

551
00:27:08,400 --> 00:27:10,000
yeah

552
00:27:10,000 --> 00:27:14,159
uh okay great thank you and um

553
00:27:14,960 --> 00:27:17,200
uh

554
00:27:18,000 --> 00:27:19,440
i haven't looked at the latest version

555
00:27:19,440 --> 00:27:22,080
of the draft do you talk about um

556
00:27:22,080 --> 00:27:23,360
uh

557
00:27:23,360 --> 00:27:26,960
the index stability when when interfaces

558
00:27:26,960 --> 00:27:28,320
come up and down like when new

559
00:27:28,320 --> 00:27:30,159
interfaces are added

560
00:27:30,159 --> 00:27:32,960
and and is it relative to the current

561
00:27:32,960 --> 00:27:35,200
fanout tree or to the interfaces that

562
00:27:35,200 --> 00:27:36,640
are available or

563
00:27:36,640 --> 00:27:38,880
like how are the how are the local

564
00:27:38,880 --> 00:27:40,960
index indices assigned

565
00:27:40,960 --> 00:27:42,399
if you could speak to that a little bit

566
00:27:42,399 --> 00:27:44,240
or just tell me to read the draft if

567
00:27:44,240 --> 00:27:46,000
it's all spelled out there

568
00:27:46,000 --> 00:27:47,120
um

569
00:27:47,120 --> 00:27:48,960
not sure i understand your question

570
00:27:48,960 --> 00:27:51,600
you're talking about the interface uh up

571
00:27:51,600 --> 00:27:52,880
and down

572
00:27:52,880 --> 00:27:54,960
yeah so the uh the branch id is i

573
00:27:54,960 --> 00:27:57,360
understand it in the dex version

574
00:27:57,360 --> 00:28:00,159
is a local interface identifier of some

575
00:28:00,159 --> 00:28:01,679
sort is that yeah we

576
00:28:01,679 --> 00:28:05,039
locally assign uh id for each interface

577
00:28:05,039 --> 00:28:06,880
so we can you just use the one byte

578
00:28:06,880 --> 00:28:09,520
value attached to node id

579
00:28:09,520 --> 00:28:12,320
to identify the unique branch and then

580
00:28:12,320 --> 00:28:14,640
as it changes uh while

581
00:28:14,640 --> 00:28:16,880
while flows are in progress um are you

582
00:28:16,880 --> 00:28:18,240
specking out

583
00:28:18,240 --> 00:28:20,720
how the how the ideas change or how to

584
00:28:20,720 --> 00:28:22,960
re-aggregate those basically

585
00:28:22,960 --> 00:28:27,039
i i i expect that can be static because

586
00:28:27,039 --> 00:28:28,960
it doesn't matter the only use of it is

587
00:28:28,960 --> 00:28:31,279
to help us to reconstruct the multicast

588
00:28:31,279 --> 00:28:32,080
tree

589
00:28:32,080 --> 00:28:34,480
so because we also have the node id

590
00:28:34,480 --> 00:28:35,919
innate so

591
00:28:35,919 --> 00:28:37,919
as long as we can distinguish the

592
00:28:37,919 --> 00:28:40,080
different branches that's uh okay so you

593
00:28:40,080 --> 00:28:42,559
see this as a as a static assignment on

594
00:28:42,559 --> 00:28:44,320
the interface essentially okay great

595
00:28:44,320 --> 00:28:46,559
thank you

596
00:28:48,000 --> 00:28:50,000
it's vancouver dr telecom

597
00:28:50,000 --> 00:28:53,600
um basically uh jq and uh you asked half

598
00:28:53,600 --> 00:28:57,120
of my question as well um so

599
00:28:57,120 --> 00:28:59,600
when i was looking at the data scheme

600
00:28:59,600 --> 00:29:01,600
that you provided i think two or three

601
00:29:01,600 --> 00:29:03,760
slides back

602
00:29:03,760 --> 00:29:05,600
my question is are you actually

603
00:29:05,600 --> 00:29:07,360
distinguishing

604
00:29:07,360 --> 00:29:09,840
which interface receives or sends the

605
00:29:09,840 --> 00:29:11,520
multicast

606
00:29:11,520 --> 00:29:15,360
on the node or is this purely monitoring

607
00:29:15,360 --> 00:29:17,919
of of the node id as such

608
00:29:17,919 --> 00:29:19,360
it's a

609
00:29:19,360 --> 00:29:22,240
you know the the node id data is already

610
00:29:22,240 --> 00:29:25,600
available to be included so but if we

611
00:29:25,600 --> 00:29:29,120
think of think about the multicast case

612
00:29:29,120 --> 00:29:29,919
uh

613
00:29:29,919 --> 00:29:33,039
if there's no branch id then

614
00:29:33,039 --> 00:29:35,600
for example the next node from the uh

615
00:29:35,600 --> 00:29:38,640
from the branching point uh you will you

616
00:29:38,640 --> 00:29:41,279
they both send the postcard package then

617
00:29:41,279 --> 00:29:43,520
you will you will note no you can you

618
00:29:43,520 --> 00:29:44,880
cannot tell

619
00:29:44,880 --> 00:29:47,760
if uh if they are belong to the

620
00:29:47,760 --> 00:29:50,320
different branches or correct so with

621
00:29:50,320 --> 00:29:52,880
that information you can tell so so

622
00:29:52,880 --> 00:29:55,200
rephrasing my question

623
00:29:55,200 --> 00:29:58,000
i have 2 000 multicast streams in my

624
00:29:58,000 --> 00:29:59,039
network

625
00:29:59,039 --> 00:30:01,279
and i have um a

626
00:30:01,279 --> 00:30:04,399
router a p router in my network which

627
00:30:04,399 --> 00:30:06,480
has 350

628
00:30:06,480 --> 00:30:09,919
multicast activated interfaces okay

629
00:30:09,919 --> 00:30:11,120
how many

630
00:30:11,120 --> 00:30:14,000
postcards will i receive

631
00:30:14,000 --> 00:30:15,039
oh

632
00:30:15,039 --> 00:30:15,760
so

633
00:30:15,760 --> 00:30:19,360
it yeah each each tree might you might

634
00:30:19,360 --> 00:30:21,760
be able to aggregate that explore data

635
00:30:21,760 --> 00:30:22,720
but

636
00:30:22,720 --> 00:30:24,720
it's easy to distinguish the different

637
00:30:24,720 --> 00:30:26,720
multicast tree because in addition to

638
00:30:26,720 --> 00:30:27,840
this uh

639
00:30:27,840 --> 00:30:32,799
branch id we also have the flow id and

640
00:30:32,799 --> 00:30:35,440
i've got the the in the figure we have

641
00:30:35,440 --> 00:30:37,919
some other information to tell you which

642
00:30:37,919 --> 00:30:40,960
flow it belongs to so you can easily

643
00:30:40,960 --> 00:30:43,039
attribute the data to different

644
00:30:43,039 --> 00:30:44,559
multicast tree

645
00:30:44,559 --> 00:30:48,000
they will not mix together so the um

646
00:30:48,000 --> 00:30:49,679
danny could you go back one or two

647
00:30:49,679 --> 00:30:52,960
slides please um

648
00:30:54,000 --> 00:30:55,120
excuse me

649
00:30:55,120 --> 00:30:57,600
no lenny

650
00:30:57,600 --> 00:30:58,880
yeah

651
00:30:58,880 --> 00:31:00,720
this one exactly yeah flow id and a

652
00:31:00,720 --> 00:31:02,320
sequence number

653
00:31:02,320 --> 00:31:04,799
yeah flow id basically uh tell you it's

654
00:31:04,799 --> 00:31:07,279
a unique number and they tell you

655
00:31:07,279 --> 00:31:09,120
the that's the multicast stream right

656
00:31:09,120 --> 00:31:11,519
yeah yeah the the s comma g okay

657
00:31:11,519 --> 00:31:13,440
sequence number tell you the order of

658
00:31:13,440 --> 00:31:16,399
this uh this package and where in this

659
00:31:16,399 --> 00:31:19,279
information do i find the interface to

660
00:31:19,279 --> 00:31:22,559
reconstruct the tree

661
00:31:22,559 --> 00:31:25,120
or is this not included in the postcard

662
00:31:25,120 --> 00:31:28,640
is this is a come from the every packet

663
00:31:28,640 --> 00:31:29,519
then

664
00:31:29,519 --> 00:31:31,039
then

665
00:31:31,039 --> 00:31:34,799
and uh and each uh each node will um

666
00:31:34,799 --> 00:31:37,360
a sign that writes that part that's the

667
00:31:37,360 --> 00:31:39,279
multicast branch id

668
00:31:39,279 --> 00:31:41,760
because i just you need to use that

669
00:31:41,760 --> 00:31:42,960
information

670
00:31:42,960 --> 00:31:46,480
to tell uh to reconstruct the tree

671
00:31:46,480 --> 00:31:49,760
okay so the flow id is is respect is

672
00:31:49,760 --> 00:31:52,480
this is corresponding to the multicast

673
00:31:52,480 --> 00:31:54,640
group oh yeah the low id never changes

674
00:31:54,640 --> 00:31:56,960
the start from the source and yeah and

675
00:31:56,960 --> 00:31:59,679
also the sequence number never change

676
00:31:59,679 --> 00:32:02,080
and the multicast branch id reflects

677
00:32:02,080 --> 00:32:03,600
then the interface id is that what

678
00:32:03,600 --> 00:32:06,080
you're saying yeah okay so

679
00:32:06,080 --> 00:32:08,159
back to my original scaling if you have

680
00:32:08,159 --> 00:32:10,080
350

681
00:32:10,080 --> 00:32:12,200
interfaces you would receive

682
00:32:12,200 --> 00:32:16,559
350 postcards from one router right

683
00:32:16,559 --> 00:32:19,120
one router i said uh based on the

684
00:32:19,120 --> 00:32:20,640
current scheme is

685
00:32:20,640 --> 00:32:23,760
support up to 256 um

686
00:32:23,760 --> 00:32:26,159
different branches oh yeah okay so that

687
00:32:26,159 --> 00:32:29,039
was exactly where i was pointing at so

688
00:32:29,039 --> 00:32:30,320
um

689
00:32:30,320 --> 00:32:33,760
256 i don't know for a large iptv

690
00:32:33,760 --> 00:32:35,600
that is already

691
00:32:35,600 --> 00:32:37,519
narrow

692
00:32:37,519 --> 00:32:39,919
on on our p routers for example we have

693
00:32:39,919 --> 00:32:42,159
more than that

694
00:32:42,159 --> 00:32:44,559
but on the other hand um

695
00:32:44,559 --> 00:32:46,320
it's it's a good start and a good

696
00:32:46,320 --> 00:32:48,000
approach what what i would like just

697
00:32:48,000 --> 00:32:49,519
like to point out is

698
00:32:49,519 --> 00:32:50,720
that the

699
00:32:50,720 --> 00:32:52,240
um

700
00:32:52,240 --> 00:32:54,159
that the interface

701
00:32:54,159 --> 00:32:55,279
is really

702
00:32:55,279 --> 00:32:57,760
key and needs to be included in in in

703
00:32:57,760 --> 00:33:00,640
this postcard because otherwise

704
00:33:00,640 --> 00:33:03,039
you you will have hard time because of

705
00:33:03,039 --> 00:33:05,120
the sheer amount of postcards that you

706
00:33:05,120 --> 00:33:05,919
will

707
00:33:05,919 --> 00:33:08,640
so you think that uh eight bits is uh to

708
00:33:08,640 --> 00:33:11,039
to to view are you uh

709
00:33:11,039 --> 00:33:13,200
um i can only say for us it wouldn't be

710
00:33:13,200 --> 00:33:16,159
enough but i don't know if um

711
00:33:16,159 --> 00:33:19,360
if this is really representative of uh

712
00:33:19,360 --> 00:33:23,279
itf uh or operators yeah yeah yeah so

713
00:33:23,279 --> 00:33:26,399
okay thank you

714
00:33:26,880 --> 00:33:29,279
dino

715
00:33:31,200 --> 00:33:32,880
um this is dino thanks for the

716
00:33:32,880 --> 00:33:35,679
presentation um i just wanted to say i

717
00:33:35,679 --> 00:33:37,840
support the idea of wanting to solve

718
00:33:37,840 --> 00:33:39,679
multicast telemetry

719
00:33:39,679 --> 00:33:43,039
at the olympics they want

720
00:33:43,039 --> 00:33:44,000
the

721
00:33:44,000 --> 00:33:46,799
the u.s broadcaster wants to

722
00:33:46,799 --> 00:33:48,960
look at data on the tree both downstream

723
00:33:48,960 --> 00:33:50,320
and upstream

724
00:33:50,320 --> 00:33:52,799
and what we did in tokyo is we use the

725
00:33:52,799 --> 00:33:54,960
the lisp control plane to

726
00:33:54,960 --> 00:33:56,640
to find out um

727
00:33:56,640 --> 00:33:59,919
things like rtt times on each branch one

728
00:33:59,919 --> 00:34:01,279
way hop count

729
00:34:01,279 --> 00:34:02,799
forward and reverse

730
00:34:02,799 --> 00:34:05,600
latency forward and reverse

731
00:34:05,600 --> 00:34:06,720
and uh

732
00:34:06,720 --> 00:34:08,159
the advantage we had with doing it with

733
00:34:08,159 --> 00:34:09,440
an overlay is that we didn't have to

734
00:34:09,440 --> 00:34:11,359
touch the underlay routes at all and we

735
00:34:11,359 --> 00:34:13,119
were still able to get that granularity

736
00:34:13,119 --> 00:34:15,119
of information and i was thinking maybe

737
00:34:15,119 --> 00:34:16,800
i'll present that next time

738
00:34:16,800 --> 00:34:19,440
at the next mmt if you want yeah thank

739
00:34:19,440 --> 00:34:21,918
you but you know like definitely for

740
00:34:21,918 --> 00:34:24,879
solving this problem

741
00:34:27,760 --> 00:34:29,918
all right so um just quick show of hands

742
00:34:29,918 --> 00:34:33,119
uh who has read this draft

743
00:34:33,119 --> 00:34:34,879
thus far

744
00:34:34,879 --> 00:34:38,799
yeah uh use if you could use the tool

745
00:34:41,679 --> 00:34:43,359
uh the the poll the question to the

746
00:34:43,359 --> 00:34:45,040
crowd crowd is who is actually who has

747
00:34:45,040 --> 00:34:48,520
actually read the draft

748
00:34:57,920 --> 00:34:59,599
the most important thing if you have

749
00:34:59,599 --> 00:35:01,040
please raise your hand

750
00:35:01,040 --> 00:35:03,839
uh if you haven't you can either abstain

751
00:35:03,839 --> 00:35:06,960
or not raise your hand

752
00:35:06,960 --> 00:35:09,520
we can do the math all right so um it

753
00:35:09,520 --> 00:35:11,280
sounds like there's a lot of interest uh

754
00:35:11,280 --> 00:35:12,560
just needing more folks to read the

755
00:35:12,560 --> 00:35:14,400
draft so please do

756
00:35:14,400 --> 00:35:16,240
please do take a look all right thank

757
00:35:16,240 --> 00:35:17,280
you

758
00:35:17,280 --> 00:35:19,599
thank you

759
00:35:20,079 --> 00:35:21,920
okay jake you're up

760
00:35:21,920 --> 00:35:25,680
or no i'm sorry max max you're up

761
00:35:27,920 --> 00:35:31,320
get your size

762
00:35:32,800 --> 00:35:37,320
i'm gonna bring your slides up

763
00:35:49,119 --> 00:35:50,720
there we go

764
00:35:50,720 --> 00:35:52,079
um the

765
00:35:52,079 --> 00:35:55,720
call is set up

766
00:36:12,000 --> 00:36:13,920
all right hello everyone i'm max from

767
00:36:13,920 --> 00:36:16,079
the berlin and i'm presenting um the

768
00:36:16,079 --> 00:36:17,370
multicast quick extension

769
00:36:17,370 --> 00:36:18,880
[Music]

770
00:36:18,880 --> 00:36:21,520
yeah uh jack presented already at

771
00:36:21,520 --> 00:36:23,520
quick just before lunch and now i'm

772
00:36:23,520 --> 00:36:25,200
going to present it to you

773
00:36:25,200 --> 00:36:26,640
um so

774
00:36:26,640 --> 00:36:28,400
let's start with the basic idea next

775
00:36:28,400 --> 00:36:30,720
slide

776
00:36:32,400 --> 00:36:34,640
um but yeah the idea is that we still

777
00:36:34,640 --> 00:36:36,720
want to get multicast into the browser

778
00:36:36,720 --> 00:36:38,800
basically and we're looking for ways to

779
00:36:38,800 --> 00:36:41,839
do that and since browsers have

780
00:36:41,839 --> 00:36:44,000
quick implementations we thought one way

781
00:36:44,000 --> 00:36:45,359
to do that would be

782
00:36:45,359 --> 00:36:47,599
to use those quick implementations to

783
00:36:47,599 --> 00:36:48,720
find a way

784
00:36:48,720 --> 00:36:51,280
to get multicast into that

785
00:36:51,280 --> 00:36:52,880
so what this extension does it basically

786
00:36:52,880 --> 00:36:55,200
uses a quick unicast connection as a

787
00:36:55,200 --> 00:36:58,720
sort of anchor or side channel

788
00:36:59,200 --> 00:37:00,640
from where

789
00:37:00,640 --> 00:37:03,280
a client starts and

790
00:37:03,280 --> 00:37:04,480
it can say

791
00:37:04,480 --> 00:37:06,720
the client can say i support multicast

792
00:37:06,720 --> 00:37:08,400
um

793
00:37:08,400 --> 00:37:10,400
and these are my limits basically like

794
00:37:10,400 --> 00:37:14,560
this is my maximum maximum supported

795
00:37:14,560 --> 00:37:16,400
rate etc

796
00:37:16,400 --> 00:37:19,680
and then the the server could tell the

797
00:37:19,680 --> 00:37:22,880
client over the unicast connection

798
00:37:22,880 --> 00:37:25,280
some multicast channels basically

799
00:37:25,280 --> 00:37:26,720
and tell the client to join these

800
00:37:26,720 --> 00:37:29,280
multicast channels to receive data

801
00:37:29,280 --> 00:37:31,839
so it's server driven the server picks

802
00:37:31,839 --> 00:37:32,880
which

803
00:37:32,880 --> 00:37:34,839
ssm we only support

804
00:37:34,839 --> 00:37:37,119
ssm channels

805
00:37:37,119 --> 00:37:39,119
the client should join the client can

806
00:37:39,119 --> 00:37:40,640
then decide

807
00:37:40,640 --> 00:37:43,200
okay i'm gonna try to join these ssm

808
00:37:43,200 --> 00:37:44,880
channels

809
00:37:44,880 --> 00:37:47,359
and on these ssm channels the client

810
00:37:47,359 --> 00:37:48,960
will find

811
00:37:48,960 --> 00:37:52,480
quick frames quick packets

812
00:37:52,480 --> 00:37:54,160
which contain

813
00:37:54,160 --> 00:37:55,760
data basically

814
00:37:55,760 --> 00:37:58,800
um if the client is unable to join

815
00:37:58,800 --> 00:38:01,119
these channels the server could then

816
00:38:01,119 --> 00:38:03,599
decide to also send the data over the

817
00:38:03,599 --> 00:38:05,520
regular unicast connection

818
00:38:05,520 --> 00:38:08,079
which means that the client

819
00:38:08,079 --> 00:38:10,400
so so no matter if multicast is

820
00:38:10,400 --> 00:38:11,920
supported or not the client would still

821
00:38:11,920 --> 00:38:13,760
get the data

822
00:38:13,760 --> 00:38:16,160
the idea is also that it's transparent

823
00:38:16,160 --> 00:38:18,960
to the overlying applications

824
00:38:18,960 --> 00:38:21,040
of course they would have to set a flag

825
00:38:21,040 --> 00:38:23,280
to support multicast because obviously

826
00:38:23,280 --> 00:38:24,400
for some

827
00:38:24,400 --> 00:38:25,839
applications they don't want multicast

828
00:38:25,839 --> 00:38:27,200
but um

829
00:38:27,200 --> 00:38:29,599
from that point on it would just see

830
00:38:29,599 --> 00:38:31,359
normal

831
00:38:31,359 --> 00:38:32,960
quick data arrive basically on

832
00:38:32,960 --> 00:38:34,560
connection

833
00:38:34,560 --> 00:38:36,480
okay so what quick also gives us is a

834
00:38:36,480 --> 00:38:39,680
way to um encrypt and

835
00:38:39,680 --> 00:38:43,200
use integrity so each packet no matter

836
00:38:43,200 --> 00:38:45,200
if it's sent on the multicast channel or

837
00:38:45,200 --> 00:38:48,720
the regular connection is encrypted

838
00:38:48,720 --> 00:38:50,720
obviously the issue is that

839
00:38:50,720 --> 00:38:52,560
every receiver gets the same packet over

840
00:38:52,560 --> 00:38:55,440
the multicast channel so it's not a high

841
00:38:55,440 --> 00:38:57,839
bar to decrypt because the key is sent

842
00:38:57,839 --> 00:38:58,560
to

843
00:38:58,560 --> 00:39:01,040
everyone the same key

844
00:39:01,040 --> 00:39:03,200
so that alone isn't enough

845
00:39:03,200 --> 00:39:04,480
to to

846
00:39:04,480 --> 00:39:06,560
guarantee integrity so we also send

847
00:39:06,560 --> 00:39:09,119
integrity frames which are basically

848
00:39:09,119 --> 00:39:11,680
hashes for each packet

849
00:39:11,680 --> 00:39:13,839
that

850
00:39:13,839 --> 00:39:15,599
guarantee that when the when the

851
00:39:15,599 --> 00:39:17,200
receiver sees a packet over the

852
00:39:17,200 --> 00:39:18,880
multicast

853
00:39:18,880 --> 00:39:20,960
it knows that it's

854
00:39:20,960 --> 00:39:23,760
a valid packet

855
00:39:24,320 --> 00:39:25,520
right so

856
00:39:25,520 --> 00:39:28,079
the the client also acts the packet that

857
00:39:28,079 --> 00:39:29,760
receives the packets it receives over

858
00:39:29,760 --> 00:39:31,520
the multicast channels

859
00:39:31,520 --> 00:39:34,160
over unicast so the server knows which

860
00:39:34,160 --> 00:39:37,680
packets arrive which packets get lost

861
00:39:37,680 --> 00:39:40,640
so in that way we have

862
00:39:40,839 --> 00:39:43,599
reliability and um

863
00:39:43,599 --> 00:39:45,599
the flow control and congestion control

864
00:39:45,599 --> 00:39:47,760
are obviously different so the as i said

865
00:39:47,760 --> 00:39:51,040
before the client sets its own limits

866
00:39:51,040 --> 00:39:53,520
and the that's the way congestion

867
00:39:53,520 --> 00:39:55,839
control is done of course the server

868
00:39:55,839 --> 00:39:57,520
could also do

869
00:39:57,520 --> 00:39:58,880
something that sees that a lot of

870
00:39:58,880 --> 00:40:00,400
packets get dropped because it doesn't

871
00:40:00,400 --> 00:40:02,400
receive the x then it could also tell

872
00:40:02,400 --> 00:40:06,000
the client to leave some channels

873
00:40:06,400 --> 00:40:08,720
um right it only works from server to

874
00:40:08,720 --> 00:40:12,160
client so obviously the the client can't

875
00:40:12,160 --> 00:40:14,160
send multicast

876
00:40:14,160 --> 00:40:16,879
and um

877
00:40:17,200 --> 00:40:19,359
do you know sure yeah i just want to ask

878
00:40:19,359 --> 00:40:21,520
a clarification question and it only

879
00:40:21,520 --> 00:40:23,760
requires a yes or no answer i think

880
00:40:23,760 --> 00:40:25,839
but could i change the terminology just

881
00:40:25,839 --> 00:40:28,079
so we're on the same page when you say

882
00:40:28,079 --> 00:40:30,160
server we mean source when you say

883
00:40:30,160 --> 00:40:32,079
client we mean receiver joining the

884
00:40:32,079 --> 00:40:34,160
group is that right okay great

885
00:40:34,160 --> 00:40:35,359
so

886
00:40:35,359 --> 00:40:37,119
what if i'm you're a source and i'm a

887
00:40:37,119 --> 00:40:38,960
receiver what if i want to join the

888
00:40:38,960 --> 00:40:41,200
group but you haven't opened the unicast

889
00:40:41,200 --> 00:40:43,280
connection to me that means i can't join

890
00:40:43,280 --> 00:40:46,000
it is that true

891
00:40:46,000 --> 00:40:48,240
so you have you have control the source

892
00:40:48,240 --> 00:40:50,960
of who joins is that kind of the

893
00:40:50,960 --> 00:40:52,800
architecture

894
00:40:52,800 --> 00:40:54,400
well you don't have control of food

895
00:40:54,400 --> 00:40:56,319
joints right anybody could join the send

896
00:40:56,319 --> 00:40:58,000
an igmp you're still underlying that you

897
00:40:58,000 --> 00:40:59,680
system will they get the data if they do

898
00:40:59,680 --> 00:41:01,200
that they will get the data but they

899
00:41:01,200 --> 00:41:03,599
can't necessarily decrypt it or um check

900
00:41:03,599 --> 00:41:05,839
the integrity so it's not useful then

901
00:41:05,839 --> 00:41:07,599
well but again the the key is shared

902
00:41:07,599 --> 00:41:09,119
with everyone right so like a bad actor

903
00:41:09,119 --> 00:41:10,000
could

904
00:41:10,000 --> 00:41:11,200
it's funny it's fine i just want to know

905
00:41:11,200 --> 00:41:12,319
what the trade-offs were in the

906
00:41:12,319 --> 00:41:14,880
architecture and so that that means

907
00:41:14,880 --> 00:41:16,400
you're actually putting some access

908
00:41:16,400 --> 00:41:18,079
control this is really a source

909
00:41:18,079 --> 00:41:20,640
initiated multicast communication and

910
00:41:20,640 --> 00:41:22,319
the source really has control of who

911
00:41:22,319 --> 00:41:26,560
joins the group okay sounds good okay

912
00:41:26,560 --> 00:41:28,079
i'm not i shouldn't have said sounds

913
00:41:28,079 --> 00:41:31,680
good but okay okay

914
00:41:31,680 --> 00:41:33,680
um

915
00:41:33,680 --> 00:41:36,240
right as i said the the the packets

916
00:41:36,240 --> 00:41:38,480
arriving over multicast are

917
00:41:38,480 --> 00:41:40,319
for the application they they don't

918
00:41:40,319 --> 00:41:43,520
differentiate yes jake

919
00:41:47,200 --> 00:41:49,839
yeah again just to clarify the

920
00:41:49,839 --> 00:41:50,960
from a

921
00:41:50,960 --> 00:41:52,880
multicast channel perspective you're

922
00:41:52,880 --> 00:41:54,560
right there's a source in

923
00:41:54,560 --> 00:41:56,079
a receiver

924
00:41:56,079 --> 00:41:58,720
but uh since this is

925
00:41:58,720 --> 00:42:01,200
like maintained in as part of a quick

926
00:42:01,200 --> 00:42:02,400
connection

927
00:42:02,400 --> 00:42:04,160
it's uh this is why we chose the

928
00:42:04,160 --> 00:42:06,640
terminology server and client in it's in

929
00:42:06,640 --> 00:42:08,319
the quick context that we have a server

930
00:42:08,319 --> 00:42:09,760
and a client

931
00:42:09,760 --> 00:42:10,560
uh

932
00:42:10,560 --> 00:42:12,880
and in that context it's sort of

933
00:42:12,880 --> 00:42:14,640
incidental that they happen to also be

934
00:42:14,640 --> 00:42:18,240
source and receiver for multicast

935
00:42:18,800 --> 00:42:21,599
they don't have to be

936
00:42:22,000 --> 00:42:24,000
somewhere

937
00:42:24,000 --> 00:42:26,720
by the server

938
00:42:26,720 --> 00:42:28,640
uh please repeat the question on the mic

939
00:42:28,640 --> 00:42:30,800
if you you can or jake just repeat his

940
00:42:30,800 --> 00:42:32,160
question for him

941
00:42:32,160 --> 00:42:34,560
that was a really interesting comment so

942
00:42:34,560 --> 00:42:37,520
can you have the server do the unicast

943
00:42:37,520 --> 00:42:39,520
control plane with the receivers and the

944
00:42:39,520 --> 00:42:42,960
source be some other node on the network

945
00:42:42,960 --> 00:42:43,760
yes

946
00:42:43,760 --> 00:42:46,480
that's uh that's going to be

947
00:42:46,480 --> 00:42:50,000
common we we expect for truly scalable

948
00:42:50,000 --> 00:42:51,119
solutions yeah because you're going to

949
00:42:51,119 --> 00:42:52,400
need to anchor it with a unicast

950
00:42:52,400 --> 00:42:54,800
connection

951
00:42:56,640 --> 00:42:58,640
yeah kyle rose i mean the

952
00:42:58,640 --> 00:43:00,560
i think the one of the important things

953
00:43:00,560 --> 00:43:04,240
about this about this uh this proposal

954
00:43:04,240 --> 00:43:05,680
is that it's

955
00:43:05,680 --> 00:43:08,720
it's not um it's not a general multicast

956
00:43:08,720 --> 00:43:11,359
mechanism it's intended specifically for

957
00:43:11,359 --> 00:43:13,440
the case in which you already have you

958
00:43:13,440 --> 00:43:15,680
have a relationship with a

959
00:43:15,680 --> 00:43:17,200
with a quick server

960
00:43:17,200 --> 00:43:18,640
and we're just providing an alternate

961
00:43:18,640 --> 00:43:20,560
means for transmitting data that might

962
00:43:20,560 --> 00:43:24,319
be shared among many different clients

963
00:43:24,640 --> 00:43:26,480
so you don't have to unicast replicate

964
00:43:26,480 --> 00:43:28,800
over the unicast quick channels okay

965
00:43:28,800 --> 00:43:30,720
now another thing that's correct okay so

966
00:43:30,720 --> 00:43:32,000
another thing i thought about it might

967
00:43:32,000 --> 00:43:33,760
be hard for me to join the group because

968
00:43:33,760 --> 00:43:35,599
since the control channel tells me yes

969
00:43:35,599 --> 00:43:38,079
comment g is i may not know it i could

970
00:43:38,079 --> 00:43:40,240
guess it but i may not know it so it

971
00:43:40,240 --> 00:43:42,880
would be hard for me to join receive on

972
00:43:42,880 --> 00:43:44,800
encrypted data that i can't decrypt is

973
00:43:44,800 --> 00:43:47,839
that you agree with that okay

974
00:43:48,800 --> 00:43:51,119
sandy

975
00:43:51,119 --> 00:43:54,119
jeffrey

976
00:43:59,280 --> 00:44:00,000
yeah

977
00:44:00,000 --> 00:44:02,960
all right okay um yeah stick with us so

978
00:44:02,960 --> 00:44:05,359
this sounds pretty cool um

979
00:44:05,359 --> 00:44:08,000
just one thought i had is in in the beer

980
00:44:08,000 --> 00:44:09,680
working group they are looking at stuff

981
00:44:09,680 --> 00:44:12,160
where a source can send to certain

982
00:44:12,160 --> 00:44:13,839
clients without the client having to

983
00:44:13,839 --> 00:44:16,480
join first so it's really the membership

984
00:44:16,480 --> 00:44:18,960
is driven all by the source

985
00:44:18,960 --> 00:44:20,720
and they're looking into doing using it

986
00:44:20,720 --> 00:44:21,760
for

987
00:44:21,760 --> 00:44:24,960
http in some cases so i think this could

988
00:44:24,960 --> 00:44:26,720
fit well within that

989
00:44:26,720 --> 00:44:28,720
of course beer is not that used

990
00:44:28,720 --> 00:44:31,119
much used yet so you want to solve it

991
00:44:31,119 --> 00:44:33,359
for multicast in general

992
00:44:33,359 --> 00:44:36,560
thank you

993
00:44:36,560 --> 00:44:38,240
jeffrey from juniper

994
00:44:38,240 --> 00:44:43,119
clients x a x each packet over unicast

995
00:44:43,119 --> 00:44:45,119
let's say you have 10 000

996
00:44:45,119 --> 00:44:46,240
clients

997
00:44:46,240 --> 00:44:47,119
and

998
00:44:47,119 --> 00:44:50,000
how does that scale

999
00:44:50,000 --> 00:44:52,160
well

1000
00:44:53,920 --> 00:44:55,599
um

1001
00:44:55,599 --> 00:44:58,000
right it scales better than having 10

1002
00:44:58,000 --> 00:45:00,400
000 clients receiving the data over

1003
00:45:00,400 --> 00:45:02,640
unicast altogether right i mean you're

1004
00:45:02,640 --> 00:45:04,720
gonna have to

1005
00:45:04,720 --> 00:45:06,319
we we're thinking we were thinking about

1006
00:45:06,319 --> 00:45:08,079
not always acting stuff right and you

1007
00:45:08,079 --> 00:45:09,440
can use

1008
00:45:09,440 --> 00:45:10,240
but

1009
00:45:10,240 --> 00:45:11,680
yeah it

1010
00:45:11,680 --> 00:45:12,560
would be

1011
00:45:12,560 --> 00:45:15,920
some of the violation of quick

1012
00:45:17,119 --> 00:45:19,200
yeah so in in some sense it still scales

1013
00:45:19,200 --> 00:45:23,279
linearly but the constant is a lot lower

1014
00:45:24,800 --> 00:45:26,400
is it fair to say the control plane is

1015
00:45:26,400 --> 00:45:28,800
scaling the same but it's the the actual

1016
00:45:28,800 --> 00:45:31,119
data packets are where you're getting

1017
00:45:31,119 --> 00:45:33,599
the benefits of multicast

1018
00:45:33,599 --> 00:45:35,760
right and and because of the way that

1019
00:45:35,760 --> 00:45:38,000
quick handles acts it's probably

1020
00:45:38,000 --> 00:45:39,760
sublinear anyway

1021
00:45:39,760 --> 00:45:40,640
um

1022
00:45:40,640 --> 00:45:42,000
assuming that you're not losing a lot of

1023
00:45:42,000 --> 00:45:44,720
packets but um

1024
00:45:44,720 --> 00:45:46,480
yeah i think this is one of those things

1025
00:45:46,480 --> 00:45:48,880
where like we have ideas about how this

1026
00:45:48,880 --> 00:45:50,240
is going to behave but we're not really

1027
00:45:50,240 --> 00:45:52,240
going to know until it's in practice and

1028
00:45:52,240 --> 00:45:53,920
we're experimenting with it

1029
00:45:53,920 --> 00:45:54,720
so

1030
00:45:54,720 --> 00:45:57,040
but i mean you know we're open to

1031
00:45:57,040 --> 00:45:58,960
to you know uh

1032
00:45:58,960 --> 00:46:00,480
helpful analysis from other people as

1033
00:46:00,480 --> 00:46:02,079
well or thoughts on how this might work

1034
00:46:02,079 --> 00:46:04,240
out

1035
00:46:04,319 --> 00:46:06,000
yeah i actually don't know much about

1036
00:46:06,000 --> 00:46:08,400
quick so my questions let me be down but

1037
00:46:08,400 --> 00:46:10,720
i guess uh the one difference between

1038
00:46:10,720 --> 00:46:12,800
this and

1039
00:46:12,800 --> 00:46:16,560
10 000 uh separate the unicast

1040
00:46:16,560 --> 00:46:19,040
sessions or the different differences

1041
00:46:19,040 --> 00:46:21,040
there is that those

1042
00:46:21,040 --> 00:46:23,040
10 000 different sessions they are

1043
00:46:23,040 --> 00:46:25,119
separate ones and here

1044
00:46:25,119 --> 00:46:27,599
this is one this all these eggs are for

1045
00:46:27,599 --> 00:46:29,040
the same session

1046
00:46:29,040 --> 00:46:31,200
maybe it's not the problem maybe it is i

1047
00:46:31,200 --> 00:46:33,680
just don't know

1048
00:46:36,079 --> 00:46:38,640
stick with us uh maybe a stupid question

1049
00:46:38,640 --> 00:46:40,800
i don't know quick really but but you

1050
00:46:40,800 --> 00:46:43,520
have to act like send an eck packet for

1051
00:46:43,520 --> 00:46:45,520
each packet you act or can you just act

1052
00:46:45,520 --> 00:46:47,760
a lot of packets in one

1053
00:46:47,760 --> 00:46:50,079
one message

1054
00:46:50,079 --> 00:46:53,040
check yeah go ahead

1055
00:46:54,400 --> 00:46:56,880
yeah you can act one in many but uh to

1056
00:46:56,880 --> 00:46:59,440
come back to the general scaling

1057
00:46:59,440 --> 00:47:01,119
questions uh

1058
00:47:01,119 --> 00:47:03,839
uh i would draw an analogy to norm

1059
00:47:03,839 --> 00:47:06,400
uh the existing uh knack or unreliable

1060
00:47:06,400 --> 00:47:09,040
multicast uh spec so this one talks

1061
00:47:09,040 --> 00:47:11,440
about a single server scaling only in

1062
00:47:11,440 --> 00:47:14,000
the tens of thousands uh for for the

1063
00:47:14,000 --> 00:47:15,599
reasons you were talking about but we

1064
00:47:15,599 --> 00:47:17,280
think we can distribute this over

1065
00:47:17,280 --> 00:47:19,119
multiple servers in the same way we do

1066
00:47:19,119 --> 00:47:21,760
uh other kinds of uh

1067
00:47:21,760 --> 00:47:23,839
unicast distribution things they'll have

1068
00:47:23,839 --> 00:47:25,599
to be linked in some way because they

1069
00:47:25,599 --> 00:47:27,760
all have to be able to handle acts

1070
00:47:27,760 --> 00:47:30,800
for the for the multicast data but

1071
00:47:30,800 --> 00:47:32,720
that that's the intent for how to scale

1072
00:47:32,720 --> 00:47:34,800
it and it should be compared to quick

1073
00:47:34,800 --> 00:47:38,480
unicast not compared to like flute for

1074
00:47:38,480 --> 00:47:42,079
example for you know receiver agnostic

1075
00:47:42,079 --> 00:47:43,599
one thing that might be on the table if

1076
00:47:43,599 --> 00:47:45,520
we get some deployment and sort of

1077
00:47:45,520 --> 00:47:46,880
operational experience with this would

1078
00:47:46,880 --> 00:47:49,440
be adding nack frames to quick if it

1079
00:47:49,440 --> 00:47:51,680
turns out to be actually useful but uh

1080
00:47:51,680 --> 00:47:53,839
that's not part of this spec at this

1081
00:47:53,839 --> 00:47:54,640
time

1082
00:47:54,640 --> 00:47:56,640
also like fec frames if it turns out to

1083
00:47:56,640 --> 00:47:58,079
be useful and maybe we can do more

1084
00:47:58,079 --> 00:48:00,640
aggregation of max of the ax or an ax or

1085
00:48:00,640 --> 00:48:02,160
something but

1086
00:48:02,160 --> 00:48:03,920
right now we're trying to be as vanilla

1087
00:48:03,920 --> 00:48:07,520
as we can in a quick context

1088
00:48:07,520 --> 00:48:08,880
so i have a bunch of detailed questions

1089
00:48:08,880 --> 00:48:09,839
i want to let you finish your

1090
00:48:09,839 --> 00:48:11,440
presentation but

1091
00:48:11,440 --> 00:48:13,200
actually i think jake answered half of

1092
00:48:13,200 --> 00:48:14,800
the things the broad statement i want to

1093
00:48:14,800 --> 00:48:17,359
make have you guys looked at norm the

1094
00:48:17,359 --> 00:48:19,599
answer is yes looks like he looked at

1095
00:48:19,599 --> 00:48:20,960
next because i was going to say did you

1096
00:48:20,960 --> 00:48:22,480
look at the early

1097
00:48:22,480 --> 00:48:24,079
van jacobson work

1098
00:48:24,079 --> 00:48:26,640
and the work that the cisco's guys did

1099
00:48:26,640 --> 00:48:29,119
in the 90s on pgm pretty good multicast

1100
00:48:29,119 --> 00:48:30,960
these are all various forms of reliable

1101
00:48:30,960 --> 00:48:33,119
multicast transports and the questions

1102
00:48:33,119 --> 00:48:35,280
about returns the high-level questions

1103
00:48:35,280 --> 00:48:36,960
about re-transmissions repair

1104
00:48:36,960 --> 00:48:38,720
neighborhoods all that stuff are you

1105
00:48:38,720 --> 00:48:40,559
trying to do that avoid that and and you

1106
00:48:40,559 --> 00:48:42,400
kind of said some of that but

1107
00:48:42,400 --> 00:48:44,079
i'll let you finish your presentation so

1108
00:48:44,079 --> 00:48:46,480
i see how it works all right

1109
00:48:46,480 --> 00:48:49,839
um yeah so speaking of retransmits the

1110
00:48:49,839 --> 00:48:51,839
retransmit could happen both so you

1111
00:48:51,839 --> 00:48:53,359
could have quick datagrams so you don't

1112
00:48:53,359 --> 00:48:55,440
have retransmits but if you have stream

1113
00:48:55,440 --> 00:48:57,520
frames um the retransmit could happen

1114
00:48:57,520 --> 00:49:00,240
over both multicast if enough

1115
00:49:00,240 --> 00:49:02,559
clients or receivers lose the packet

1116
00:49:02,559 --> 00:49:04,960
right or you could um individually

1117
00:49:04,960 --> 00:49:06,559
retransmit them over the unicast channel

1118
00:49:06,559 --> 00:49:07,680
as well

1119
00:49:07,680 --> 00:49:09,280
is it okay if i ask questions you want

1120
00:49:09,280 --> 00:49:10,880
to continue the presentation i don't

1121
00:49:10,880 --> 00:49:12,960
want to yeah what do you recommend do

1122
00:49:12,960 --> 00:49:14,720
you think um do you think you want to

1123
00:49:14,720 --> 00:49:16,319
finish the presentation and then take

1124
00:49:16,319 --> 00:49:18,480
questions or is this helpful because

1125
00:49:18,480 --> 00:49:20,240
then we'll be yeah we'll be educated

1126
00:49:20,240 --> 00:49:22,160
more after you do it

1127
00:49:22,160 --> 00:49:23,040
um

1128
00:49:23,040 --> 00:49:24,960
sure okay okay let's let's finish

1129
00:49:24,960 --> 00:49:27,280
quickly then um yeah next slide

1130
00:49:27,280 --> 00:49:28,960
and just uh just a note uh gory

1131
00:49:28,960 --> 00:49:31,440
mentioned on the uh chat that quick does

1132
00:49:31,440 --> 00:49:33,599
not need to hack every packet

1133
00:49:33,599 --> 00:49:36,240
right okay

1134
00:49:40,400 --> 00:49:42,880
uh right that's the the problems we

1135
00:49:42,880 --> 00:49:44,960
solve um but yes as i said already we

1136
00:49:44,960 --> 00:49:46,960
want to get it into the browser um we're

1137
00:49:46,960 --> 00:49:48,240
going to have encrypt

1138
00:49:48,240 --> 00:49:50,800
like encryption for the packets

1139
00:49:50,800 --> 00:49:53,200
we have integrity checks like ambi users

1140
00:49:53,200 --> 00:49:58,118
as jack said so envy isn't yeah um

1141
00:49:58,480 --> 00:50:00,079
right um

1142
00:50:00,079 --> 00:50:02,480
okay i think i said most of that already

1143
00:50:02,480 --> 00:50:03,599
um

1144
00:50:03,599 --> 00:50:05,680
right the scalability is in the data and

1145
00:50:05,680 --> 00:50:08,480
not the control plane yeah okay

1146
00:50:08,480 --> 00:50:10,079
um right the concept of the draft we

1147
00:50:10,079 --> 00:50:12,559
already on version 3 we had some reviews

1148
00:50:12,559 --> 00:50:16,319
internally and from lucas and from

1149
00:50:16,319 --> 00:50:18,240
kyle

1150
00:50:18,240 --> 00:50:19,760
and the

1151
00:50:19,760 --> 00:50:21,440
for us at least the current structure

1152
00:50:21,440 --> 00:50:24,000
seems clear

1153
00:50:24,000 --> 00:50:26,559
in the architecture and we don't see any

1154
00:50:26,559 --> 00:50:28,319
reasons that make it like impossible to

1155
00:50:28,319 --> 00:50:31,200
actually get it deployed and use it and

1156
00:50:31,200 --> 00:50:33,200
or things that are in violation of the

1157
00:50:33,200 --> 00:50:36,000
security draft for multicast

1158
00:50:36,000 --> 00:50:37,599
um

1159
00:50:37,599 --> 00:50:40,160
so we got some feedback from the quick

1160
00:50:40,160 --> 00:50:43,279
working object do you wanna

1161
00:50:47,839 --> 00:50:48,720
yeah

1162
00:50:48,720 --> 00:50:50,240
i mean

1163
00:50:50,240 --> 00:50:51,839
there weren't many people who commented

1164
00:50:51,839 --> 00:50:54,800
uh lars had some positive things to say

1165
00:50:54,800 --> 00:50:57,280
i think alex uh

1166
00:50:57,280 --> 00:50:58,720
questioned whether it should happen in

1167
00:50:58,720 --> 00:51:00,240
quick um

1168
00:51:00,240 --> 00:51:02,079
you know i think that can be discussed

1169
00:51:02,079 --> 00:51:03,760
on the mailing list uh

1170
00:51:03,760 --> 00:51:05,920
martin duke said he was he found it

1171
00:51:05,920 --> 00:51:07,680
technically interesting and would be

1172
00:51:07,680 --> 00:51:09,839
doing a review so i'm looking forward to

1173
00:51:09,839 --> 00:51:11,119
that

1174
00:51:11,119 --> 00:51:13,680
um you know i i

1175
00:51:13,680 --> 00:51:15,119
i expect that

1176
00:51:15,119 --> 00:51:16,559
a lot of people in quick remain

1177
00:51:16,559 --> 00:51:18,480
skeptical some of the offline comments

1178
00:51:18,480 --> 00:51:20,440
i've had say

1179
00:51:20,440 --> 00:51:23,440
that uh

1180
00:51:23,440 --> 00:51:25,119
that there's some skepticism that we

1181
00:51:25,119 --> 00:51:28,240
will adequately solve the sort of origin

1182
00:51:28,240 --> 00:51:31,359
security model for uh

1183
00:51:31,359 --> 00:51:32,800
for for

1184
00:51:32,800 --> 00:51:34,839
counting as non-mixed content in

1185
00:51:34,839 --> 00:51:36,880
browsers um

1186
00:51:36,880 --> 00:51:39,280
i would like to dig in more on that

1187
00:51:39,280 --> 00:51:43,359
claim with with people who believe it

1188
00:51:43,359 --> 00:51:46,720
probably not in this form but

1189
00:51:47,359 --> 00:51:49,200
this is

1190
00:51:49,200 --> 00:51:50,559
we're trying to address that with the

1191
00:51:50,559 --> 00:51:52,319
multicast security considerations and we

1192
00:51:52,319 --> 00:51:53,680
think that

1193
00:51:53,680 --> 00:51:55,760
so my opinion is that i think it can be

1194
00:51:55,760 --> 00:51:57,119
addressed but

1195
00:51:57,119 --> 00:51:58,160
uh

1196
00:51:58,160 --> 00:52:00,559
there are some some differences i think

1197
00:52:00,559 --> 00:52:02,079
that they are

1198
00:52:02,079 --> 00:52:04,240
minimal enough that they can be

1199
00:52:04,240 --> 00:52:05,920
addressed especially if we consider

1200
00:52:05,920 --> 00:52:07,839
things like uh

1201
00:52:07,839 --> 00:52:10,559
so apple talked about uh how they they

1202
00:52:10,559 --> 00:52:12,240
sort of treat

1203
00:52:12,240 --> 00:52:15,359
a joint of a multicast group as a

1204
00:52:15,359 --> 00:52:17,440
under the same rubric as

1205
00:52:17,440 --> 00:52:19,280
sort of local discovery things as a

1206
00:52:19,280 --> 00:52:22,240
potential privacy

1207
00:52:24,480 --> 00:52:27,200
exposure that requires a user input so

1208
00:52:27,200 --> 00:52:29,200
this kind of thing i think if it becomes

1209
00:52:29,200 --> 00:52:31,200
more normalized can contribute to

1210
00:52:31,200 --> 00:52:32,880
protecting users against

1211
00:52:32,880 --> 00:52:34,640
inappropriate privacy violations and

1212
00:52:34,640 --> 00:52:36,079
could

1213
00:52:36,079 --> 00:52:37,440
and i think that that's the main

1214
00:52:37,440 --> 00:52:40,319
difference uh in terms of security

1215
00:52:40,319 --> 00:52:41,839
um

1216
00:52:41,839 --> 00:52:43,760
although i'm not sure that i that i've

1217
00:52:43,760 --> 00:52:46,400
fully captured everyone's objections to

1218
00:52:46,400 --> 00:52:47,920
it or that they fully thought it through

1219
00:52:47,920 --> 00:52:50,559
honestly because a lot of them

1220
00:52:50,559 --> 00:52:52,640
i would say maybe don't really want to

1221
00:52:52,640 --> 00:52:54,480
think about it too hard yet

1222
00:52:54,480 --> 00:52:55,599
i think that will change if we can

1223
00:52:55,599 --> 00:52:57,599
manage to get a decent deployment that

1224
00:52:57,599 --> 00:52:59,119
does something but it's going to not be

1225
00:52:59,119 --> 00:53:00,559
in a browser first it's going to have to

1226
00:53:00,559 --> 00:53:01,920
be like in a fat client that's launched

1227
00:53:01,920 --> 00:53:03,760
from a browser if it's going to address

1228
00:53:03,760 --> 00:53:04,800
uh

1229
00:53:04,800 --> 00:53:06,720
web video for example

1230
00:53:06,720 --> 00:53:09,119
but but we would like to do that in our

1231
00:53:09,119 --> 00:53:10,559
you know with our demo yeah that's kind

1232
00:53:10,559 --> 00:53:12,720
of where we're headed first and then one

1233
00:53:12,720 --> 00:53:16,558
day maybe into a browser

1234
00:53:18,000 --> 00:53:19,280
all right

1235
00:53:19,280 --> 00:53:22,160
sure so this is dino so i'm getting a

1236
00:53:22,160 --> 00:53:24,240
really strong gut feeling that this is a

1237
00:53:24,240 --> 00:53:26,319
really good architecture i just there's

1238
00:53:26,319 --> 00:53:28,079
all these positive vibes going through

1239
00:53:28,079 --> 00:53:29,920
my mind so i think i'm really happy and

1240
00:53:29,920 --> 00:53:31,359
i'll explain why

1241
00:53:31,359 --> 00:53:33,440
you solve the source discovery problem

1242
00:53:33,440 --> 00:53:35,359
because it's done at the source

1243
00:53:35,359 --> 00:53:37,119
that's really good

1244
00:53:37,119 --> 00:53:39,760
the fact that you're mixing unicast and

1245
00:53:39,760 --> 00:53:41,760
multicast means

1246
00:53:41,760 --> 00:53:44,160
if you wanted the unicast connections to

1247
00:53:44,160 --> 00:53:46,160
go on an underlay and you wanted

1248
00:53:46,160 --> 00:53:48,319
multicast to go on an overlay this could

1249
00:53:48,319 --> 00:53:50,400
happen with this architecture that's

1250
00:53:50,400 --> 00:53:52,000
really cool at least for me because i'm

1251
00:53:52,000 --> 00:53:55,440
an overlay guy these days

1252
00:53:55,599 --> 00:53:58,480
now i have a detailed question um

1253
00:53:58,480 --> 00:54:00,559
so in pgm

1254
00:54:00,559 --> 00:54:01,760
there was next that came from the

1255
00:54:01,760 --> 00:54:03,520
receivers when they saw pack it out of

1256
00:54:03,520 --> 00:54:06,000
sequence and the router's intermediate

1257
00:54:06,000 --> 00:54:08,400
would build these lost neighborhoods so

1258
00:54:08,400 --> 00:54:10,160
when the packet was retransmitted it

1259
00:54:10,160 --> 00:54:11,760
would only go to the lost neighborhoods

1260
00:54:11,760 --> 00:54:13,760
and not to the receivers that received

1261
00:54:13,760 --> 00:54:16,640
it so can you explain i i realized that

1262
00:54:16,640 --> 00:54:18,800
if you want to retransmit a multicast

1263
00:54:18,800 --> 00:54:20,800
packet that has been lost somewhere on

1264
00:54:20,800 --> 00:54:23,599
some branch somewhere that you could

1265
00:54:23,599 --> 00:54:25,359
you may not be able to you may or may

1266
00:54:25,359 --> 00:54:27,040
not be able to identify where it was

1267
00:54:27,040 --> 00:54:28,800
lost and you could certainly retransmit

1268
00:54:28,800 --> 00:54:30,880
on the unicash channels which could be

1269
00:54:30,880 --> 00:54:32,400
inefficient if the lost neighborhood was

1270
00:54:32,400 --> 00:54:34,000
really large right

1271
00:54:34,000 --> 00:54:36,400
um so that's my question what are you

1272
00:54:36,400 --> 00:54:39,119
guys thinking about how to do this and i

1273
00:54:39,119 --> 00:54:41,040
do you just re-transmit on multicast and

1274
00:54:41,040 --> 00:54:42,960
let the guys who got it

1275
00:54:42,960 --> 00:54:45,440
drop the duplicates or because there's

1276
00:54:45,440 --> 00:54:47,280
we did a lot of research with this on

1277
00:54:47,280 --> 00:54:49,520
pgm and we thought that the knack

1278
00:54:49,520 --> 00:54:51,200
neighborhood and having router store

1279
00:54:51,200 --> 00:54:54,000
state about lost messages was worthwhile

1280
00:54:54,000 --> 00:54:56,240
turned out to be complicated and maybe

1281
00:54:56,240 --> 00:54:59,440
an over optimization

1282
00:54:59,440 --> 00:55:02,000
yeah i mean

1283
00:55:02,000 --> 00:55:04,240
yeah we're not sure exactly how to do it

1284
00:55:04,240 --> 00:55:05,359
yet i think that's like one of the

1285
00:55:05,359 --> 00:55:07,760
things yeah i would say we're we're not

1286
00:55:07,760 --> 00:55:09,440
sure but in terms of the architecture

1287
00:55:09,440 --> 00:55:11,200
and the document this would be a server

1288
00:55:11,200 --> 00:55:12,799
implementation decision

1289
00:55:12,799 --> 00:55:14,799
so it's not going to be routers i'll

1290
00:55:14,799 --> 00:55:16,480
tell you that much it's going to be

1291
00:55:16,480 --> 00:55:18,240
endpoints so it's going to be a server

1292
00:55:18,240 --> 00:55:19,440
endpoint

1293
00:55:19,440 --> 00:55:20,559
and

1294
00:55:20,559 --> 00:55:22,960
in a deployment model we would expect

1295
00:55:22,960 --> 00:55:25,760
probably to have uh you know servers

1296
00:55:25,760 --> 00:55:29,280
co-located in a network and to maybe

1297
00:55:29,280 --> 00:55:30,799
like i'm not going to give you this on

1298
00:55:30,799 --> 00:55:33,520
the first pass but one day if this takes

1299
00:55:33,520 --> 00:55:35,200
off yeah we'll have servers that are

1300
00:55:35,200 --> 00:55:36,480
sort of dedicated to a particular

1301
00:55:36,480 --> 00:55:38,480
network and when there's loss that's

1302
00:55:38,480 --> 00:55:39,839
correlated across that network i would

1303
00:55:39,839 --> 00:55:41,520
expect the servers to

1304
00:55:41,520 --> 00:55:43,839
you know as an optimization to prefer to

1305
00:55:43,839 --> 00:55:45,599
retransmit over multicast for that

1306
00:55:45,599 --> 00:55:47,359
network and if there was anybody who got

1307
00:55:47,359 --> 00:55:49,440
it they would be able as a natural part

1308
00:55:49,440 --> 00:55:50,799
of quick to discard

1309
00:55:50,799 --> 00:55:53,040
repeats that shouldn't be a problem yeah

1310
00:55:53,040 --> 00:55:54,640
but you know that's

1311
00:55:54,640 --> 00:55:56,960
that's sort of optimization for later

1312
00:55:56,960 --> 00:55:58,559
yeah

1313
00:55:58,559 --> 00:56:00,880
so what what ended up happening in pgm

1314
00:56:00,880 --> 00:56:02,400
is that we didn't want to have this

1315
00:56:02,400 --> 00:56:04,799
router assist neck thing and so pgm

1316
00:56:04,799 --> 00:56:06,960
turned out to be a reliable transport

1317
00:56:06,960 --> 00:56:09,359
and what happened was we when there was

1318
00:56:09,359 --> 00:56:11,839
any knack that came back the reach it

1319
00:56:11,839 --> 00:56:14,240
retransmitted down the tree and what

1320
00:56:14,240 --> 00:56:16,079
jake just said is the the receivers who

1321
00:56:16,079 --> 00:56:17,760
got it just threw it away it was much

1322
00:56:17,760 --> 00:56:20,559
simpler and it was more um end to end so

1323
00:56:20,559 --> 00:56:22,160
having said that since this is really a

1324
00:56:22,160 --> 00:56:24,160
reliable transport protocol it should

1325
00:56:24,160 --> 00:56:26,640
probably be done in the transport area

1326
00:56:26,640 --> 00:56:28,160
but the problem there is is everybody

1327
00:56:28,160 --> 00:56:29,760
hates multicast there so we need good

1328
00:56:29,760 --> 00:56:32,400
representation to do it so

1329
00:56:32,400 --> 00:56:35,040
you know so maybe you teach us transport

1330
00:56:35,040 --> 00:56:38,880
or we teach them multicast i don't know

1331
00:56:40,240 --> 00:56:42,240
oh okay got it so the plan is to do it

1332
00:56:42,240 --> 00:56:44,720
in the quick working group okay um why

1333
00:56:44,720 --> 00:56:46,640
don't you just finish you got two slides

1334
00:56:46,640 --> 00:56:48,240
and then and then we'll open up for

1335
00:56:48,240 --> 00:56:50,880
questions so um

1336
00:56:50,880 --> 00:56:53,119
yeah the the the the last two sites are

1337
00:56:53,119 --> 00:56:55,599
basically about our implementation um so

1338
00:56:55,599 --> 00:56:58,559
we implemented started to implement it

1339
00:56:58,559 --> 00:57:00,079
um in chromium

1340
00:57:00,079 --> 00:57:02,640
and we got all the uh we got the frames

1341
00:57:02,640 --> 00:57:04,000
the new frames and we got the the

1342
00:57:04,000 --> 00:57:06,160
transfer permitted and so on

1343
00:57:06,160 --> 00:57:08,400
um the thing we're missing there is how

1344
00:57:08,400 --> 00:57:09,200
to

1345
00:57:09,200 --> 00:57:10,880
feed the packets we receive over

1346
00:57:10,880 --> 00:57:13,200
multicast into the event loop of the

1347
00:57:13,200 --> 00:57:16,000
regular quick connection basically um

1348
00:57:16,000 --> 00:57:17,440
and that's a bit tricky in chromium so

1349
00:57:17,440 --> 00:57:19,040
now we're thinking about for the first

1350
00:57:19,040 --> 00:57:20,400
um demo

1351
00:57:20,400 --> 00:57:23,440
to instead use something like a a i o

1352
00:57:23,440 --> 00:57:25,200
quick or something in python where it's

1353
00:57:25,200 --> 00:57:27,440
much simpler to just feed the packets in

1354
00:57:27,440 --> 00:57:29,119
and you don't have all the overhead of

1355
00:57:29,119 --> 00:57:31,040
chromium of course the goal is to get

1356
00:57:31,040 --> 00:57:32,960
into a browser so eventually we will do

1357
00:57:32,960 --> 00:57:35,119
it hopefully in chromium but just for

1358
00:57:35,119 --> 00:57:37,839
the first test like that

1359
00:57:37,839 --> 00:57:39,920
um yeah also there are some issues with

1360
00:57:39,920 --> 00:57:41,440
transporter but i think we're just gonna

1361
00:57:41,440 --> 00:57:43,280
skip over those for now um and rather

1362
00:57:43,280 --> 00:57:45,680
have the more multicast

1363
00:57:45,680 --> 00:57:47,760
focus discussion right

1364
00:57:47,760 --> 00:57:51,319
and that's it

1365
00:57:58,160 --> 00:58:01,280
first of all uh condos for uh doing the

1366
00:58:01,280 --> 00:58:03,760
work and i think you've got a really

1367
00:58:03,760 --> 00:58:05,520
good approach here

1368
00:58:05,520 --> 00:58:07,839
um in a matter of transparency i already

1369
00:58:07,839 --> 00:58:10,720
provided all some of the points to jake

1370
00:58:10,720 --> 00:58:12,079
offline

1371
00:58:12,079 --> 00:58:14,640
i think what would be interesting is

1372
00:58:14,640 --> 00:58:17,440
to couple this also not just to native

1373
00:58:17,440 --> 00:58:20,559
multicast but also to amt

1374
00:58:20,559 --> 00:58:23,280
so that you have the opportunity to say

1375
00:58:23,280 --> 00:58:25,440
i i will try first

1376
00:58:25,440 --> 00:58:28,319
uh to to join a multicast group once

1377
00:58:28,319 --> 00:58:30,240
once it's already set up and then you

1378
00:58:30,240 --> 00:58:33,440
try uh if there's an amt relay which is

1379
00:58:33,440 --> 00:58:35,599
still better than unicasting it all the

1380
00:58:35,599 --> 00:58:37,839
way

1381
00:58:38,720 --> 00:58:41,359
the other option or the other point that

1382
00:58:41,359 --> 00:58:43,599
came into my mind is

1383
00:58:43,599 --> 00:58:46,000
regarding re-transmission

1384
00:58:46,000 --> 00:58:48,400
maybe you should rethink about this

1385
00:58:48,400 --> 00:58:52,160
because if this is uh fundamentally for

1386
00:58:52,160 --> 00:58:54,160
life events

1387
00:58:54,160 --> 00:58:57,520
from my uh so so live tv

1388
00:58:57,520 --> 00:58:59,599
like super bowl or whatever

1389
00:58:59,599 --> 00:59:02,160
now from our experience

1390
00:59:02,160 --> 00:59:05,599
there's only a really tiny time frame

1391
00:59:05,599 --> 00:59:07,119
where you have the buffering and where

1392
00:59:07,119 --> 00:59:08,960
it really makes sense to retransmit the

1393
00:59:08,960 --> 00:59:10,400
data packets

1394
00:59:10,400 --> 00:59:12,960
um in most of the cases especially if

1395
00:59:12,960 --> 00:59:14,319
you're further away from those

1396
00:59:14,319 --> 00:59:16,240
retransmission servers

1397
00:59:16,240 --> 00:59:18,960
i'm talking about 50 60 milliseconds

1398
00:59:18,960 --> 00:59:20,160
typically

1399
00:59:20,160 --> 00:59:21,119
um

1400
00:59:21,119 --> 00:59:23,520
then re-transmission doesn't make sense

1401
00:59:23,520 --> 00:59:24,960
and then you don't have to actually

1402
00:59:24,960 --> 00:59:26,960
think about re-transmission if you if

1403
00:59:26,960 --> 00:59:28,480
you're talking about

1404
00:59:28,480 --> 00:59:30,480
and this was another use case uh

1405
00:59:30,480 --> 00:59:33,040
downloading files via

1406
00:59:33,040 --> 00:59:36,000
multicast so large downloads etc then of

1407
00:59:36,000 --> 00:59:37,280
course it makes sense then you need

1408
00:59:37,280 --> 00:59:39,119
those packages but

1409
00:59:39,119 --> 00:59:41,760
um i think it's more to focus on what is

1410
00:59:41,760 --> 00:59:43,680
really required for which you can use

1411
00:59:43,680 --> 00:59:44,640
case

1412
00:59:44,640 --> 00:59:45,760
right

1413
00:59:45,760 --> 00:59:46,559
so

1414
00:59:46,559 --> 00:59:49,200
we support both quick stream and quick

1415
00:59:49,200 --> 00:59:51,280
data grams so that if you use datagrams

1416
00:59:51,280 --> 00:59:53,040
to send the data you wouldn't get

1417
00:59:53,040 --> 00:59:56,240
retransmits right so the application or

1418
00:59:56,240 --> 00:59:58,480
the sender could choose which whether to

1419
00:59:58,480 --> 01:00:00,640
use datagrams or stream frames

1420
01:00:00,640 --> 01:00:03,200
but yeah you want to reply to that

1421
01:00:03,200 --> 01:00:05,680
sure to also respond to that we've been

1422
01:00:05,680 --> 01:00:08,000
looking at like some of the mock work

1423
01:00:08,000 --> 01:00:09,760
the media over quick we think that

1424
01:00:09,760 --> 01:00:11,040
there's good synergy with the push

1425
01:00:11,040 --> 01:00:13,040
approaches they're using using there for

1426
01:00:13,040 --> 01:00:14,400
rush and warp

1427
01:00:14,400 --> 01:00:16,960
um and possibly for the arkwick stuff or

1428
01:00:16,960 --> 01:00:18,400
the quick r stuff that they're talking

1429
01:00:18,400 --> 01:00:19,280
about

1430
01:00:19,280 --> 01:00:21,200
um and the idea is as long as you're

1431
01:00:21,200 --> 01:00:23,680
using server initiated streams

1432
01:00:23,680 --> 01:00:25,520
uh the whole stream

1433
01:00:25,520 --> 01:00:28,480
uh has retransmits sort of built in but

1434
01:00:28,480 --> 01:00:30,720
you can still reset the stream and then

1435
01:00:30,720 --> 01:00:32,079
that stream can be dropped so you can

1436
01:00:32,079 --> 01:00:34,000
have unreliable transmission at the sort

1437
01:00:34,000 --> 01:00:37,200
of level of a frame or a segment

1438
01:00:37,200 --> 01:00:39,440
if it if it times out there some of the

1439
01:00:39,440 --> 01:00:40,640
work that they're doing there we think

1440
01:00:40,640 --> 01:00:42,240
will mesh well with this approach that

1441
01:00:42,240 --> 01:00:44,319
we have here is basically the point so

1442
01:00:44,319 --> 01:00:46,480
i'd encourage you to read that

1443
01:00:46,480 --> 01:00:48,799
to see if if we need to

1444
01:00:48,799 --> 01:00:50,480
do more than that what that's doing

1445
01:00:50,480 --> 01:00:51,680
thanks and

1446
01:00:51,680 --> 01:00:53,520
the last remark

1447
01:00:53,520 --> 01:00:54,839
to the

1448
01:00:54,839 --> 01:00:57,520
acknowledgements i think from a scaling

1449
01:00:57,520 --> 01:00:59,280
perspective especially if you scale up

1450
01:00:59,280 --> 01:01:01,119
to those

1451
01:01:01,119 --> 01:01:03,119
volumes that you have in mind

1452
01:01:03,119 --> 01:01:05,040
or that you're wishing for

1453
01:01:05,040 --> 01:01:07,200
i think something like the tcp window

1454
01:01:07,200 --> 01:01:08,960
size where you only

1455
01:01:08,960 --> 01:01:11,359
acknowledge certain

1456
01:01:11,359 --> 01:01:12,960
packet windows

1457
01:01:12,960 --> 01:01:15,280
could could actually ease up your life

1458
01:01:15,280 --> 01:01:17,760
so so we actually have a mechanic for um

1459
01:01:17,760 --> 01:01:19,760
bundling x right where you wait for a

1460
01:01:19,760 --> 01:01:21,440
time where like like you don't have to

1461
01:01:21,440 --> 01:01:23,680
act immediately but you can wait like a

1462
01:01:23,680 --> 01:01:25,280
server set timeout before you have to

1463
01:01:25,280 --> 01:01:28,000
like say okay now right so we have that

1464
01:01:28,000 --> 01:01:31,200
because yeah in quick especially the the

1465
01:01:31,200 --> 01:01:33,280
egging is worse than tcp i think just

1466
01:01:33,280 --> 01:01:35,040
from the overhead

1467
01:01:35,040 --> 01:01:36,319
yeah you know

1468
01:01:36,319 --> 01:01:38,000
um regarding the comment you just made

1469
01:01:38,000 --> 01:01:39,920
about live and re-transmissions i would

1470
01:01:39,920 --> 01:01:42,559
just say don't have an option never to

1471
01:01:42,559 --> 01:01:45,359
retransmit and for live events use fec

1472
01:01:45,359 --> 01:01:48,640
because fec will correct most errors in

1473
01:01:48,640 --> 01:01:52,000
real time and just as a data point um

1474
01:01:52,000 --> 01:01:54,640
solan the solana blockchain uses fec and

1475
01:01:54,640 --> 01:01:56,720
udp transmission that blockchain does

1476
01:01:56,720 --> 01:01:59,359
not use a reliable transport protocol

1477
01:01:59,359 --> 01:02:01,520
and it's working really well

1478
01:02:01,520 --> 01:02:03,440
and this is over like uh tens of

1479
01:02:03,440 --> 01:02:06,319
thousands of nodes which fpc do they use

1480
01:02:06,319 --> 01:02:08,880
i don't know i'll i can let you know but

1481
01:02:08,880 --> 01:02:10,319
i don't know off the top of my head okay

1482
01:02:10,319 --> 01:02:12,160
is it open source or is it some variety

1483
01:02:12,160 --> 01:02:14,880
it's absolutely open source yeah yeah

1484
01:02:14,880 --> 01:02:17,440
and then my other question was is um

1485
01:02:17,440 --> 01:02:18,799
you seem to just

1486
01:02:18,799 --> 01:02:20,000
i don't think you're restricting it to

1487
01:02:20,000 --> 01:02:21,839
one to many but you described it as one

1488
01:02:21,839 --> 01:02:23,760
to many if you were wanted to have a

1489
01:02:23,760 --> 01:02:26,400
whiteboard session with uh 100 people

1490
01:02:26,400 --> 01:02:28,240
drawing on a whiteboard

1491
01:02:28,240 --> 01:02:30,000
would this just be multiple instances of

1492
01:02:30,000 --> 01:02:31,520
one to many or

1493
01:02:31,520 --> 01:02:34,319
is there any provision to do many to

1494
01:02:34,319 --> 01:02:36,960
many uh

1495
01:02:36,960 --> 01:02:38,880
in any specific way

1496
01:02:38,880 --> 01:02:40,079
um

1497
01:02:40,079 --> 01:02:42,160
i mean you need the unicast connection

1498
01:02:42,160 --> 01:02:43,599
right so you would have to have like a

1499
01:02:43,599 --> 01:02:46,960
central anchor point where

1500
01:02:46,960 --> 01:02:48,799
okay so if you have uh one dimension you

1501
01:02:48,799 --> 01:02:50,960
will have n squared unicast connections

1502
01:02:50,960 --> 01:02:53,280
and that yeah that's a concern that

1503
01:02:53,280 --> 01:02:55,520
jeffrey made about okay

1504
01:02:55,520 --> 01:02:56,559
there's no way around it by just

1505
01:02:56,559 --> 01:02:58,400
throwing you say throw resources at it

1506
01:02:58,400 --> 01:02:59,119
and

1507
01:02:59,119 --> 01:03:00,240
you know just

1508
01:03:00,240 --> 01:03:02,160
going back trying to understand your use

1509
01:03:02,160 --> 01:03:03,680
case there like a hundred whiteboard

1510
01:03:03,680 --> 01:03:05,359
sessions those would be

1511
01:03:05,359 --> 01:03:06,319
like

1512
01:03:06,319 --> 01:03:08,480
each one would be a multicast session uh

1513
01:03:08,480 --> 01:03:10,640
i would i meant a hundred participants

1514
01:03:10,640 --> 01:03:12,720
in one whiteboard session

1515
01:03:12,720 --> 01:03:14,400
but they're all writing on it yes

1516
01:03:14,400 --> 01:03:15,359
they're all they're all sort of they're

1517
01:03:15,359 --> 01:03:16,720
all sourcing they're all multicast

1518
01:03:16,720 --> 01:03:18,880
sources so so that could be an

1519
01:03:18,880 --> 01:03:20,480
application solution where they just go

1520
01:03:20,480 --> 01:03:21,760
to the source

1521
01:03:21,760 --> 01:03:23,359
and then it goes down on a single tree

1522
01:03:23,359 --> 01:03:24,960
well that's the way zoom works today and

1523
01:03:24,960 --> 01:03:27,280
it's not decentralized right

1524
01:03:27,280 --> 01:03:29,280
so the this could provide decentralized

1525
01:03:29,280 --> 01:03:31,920
solutions right

1526
01:03:31,920 --> 01:03:33,760
so okay

1527
01:03:33,760 --> 01:03:37,440
all right uh one last question um uh the

1528
01:03:37,440 --> 01:03:40,000
the this mixing of um

1529
01:03:40,000 --> 01:03:43,440
uh multicast and unicast um

1530
01:03:43,440 --> 01:03:45,440
does that

1531
01:03:45,440 --> 01:03:48,720
uh does that um imply that if you wanted

1532
01:03:48,720 --> 01:03:52,079
to do something like uh unicast bespoke

1533
01:03:52,079 --> 01:03:54,799
advertising with a multicast stream

1534
01:03:54,799 --> 01:03:57,440
uh you know this this this would work

1535
01:03:57,440 --> 01:03:58,720
well or

1536
01:03:58,720 --> 01:04:01,839
um you know being able to mix in unicast

1537
01:04:01,839 --> 01:04:03,599
stuff and multicast stuff sure the

1538
01:04:03,599 --> 01:04:05,039
server could certainly decide if it

1539
01:04:05,039 --> 01:04:06,160
wants to like send something

1540
01:04:06,160 --> 01:04:08,160
specifically to that client over unicast

1541
01:04:08,160 --> 01:04:09,760
that isn't supposed to be received by

1542
01:04:09,760 --> 01:04:13,160
everybody else

1543
01:04:13,599 --> 01:04:15,839
all right thank you all right thank you

1544
01:04:15,839 --> 01:04:18,799
max this is great

1545
01:04:20,640 --> 01:04:21,440
so

1546
01:04:21,440 --> 01:04:23,600
next up

1547
01:04:23,600 --> 01:04:24,880
[Music]

1548
01:04:24,880 --> 01:04:26,799
yeah um

1549
01:04:26,799 --> 01:04:30,640
i'm going to um maybe yes

1550
01:04:30,960 --> 01:04:32,400
grant you

1551
01:04:32,400 --> 01:04:33,440
and i

1552
01:04:33,440 --> 01:04:36,240
put my hand down

1553
01:04:38,480 --> 01:04:40,000
okay so next up is lauren she's been

1554
01:04:40,000 --> 01:04:43,119
working on the um

1555
01:04:43,119 --> 01:04:46,720
uh we we've been speaking

1556
01:04:46,799 --> 01:04:49,280
for the last few ietfs about um about

1557
01:04:49,280 --> 01:04:51,520
the work she's been doing and um it's

1558
01:04:51,520 --> 01:04:53,920
culminated with off net sourcing and uh

1559
01:04:53,920 --> 01:04:56,240
some recent enhancements with multicast

1560
01:04:56,240 --> 01:04:58,720
menu yeah and as soon as my slides come

1561
01:04:58,720 --> 01:04:59,440
up

1562
01:04:59,440 --> 01:05:00,400
it would

1563
01:05:00,400 --> 01:05:01,920
it is

1564
01:05:01,920 --> 01:05:03,680
slowly coming up

1565
01:05:03,680 --> 01:05:05,520
yeah so i want to start by just talking

1566
01:05:05,520 --> 01:05:07,200
through the stuff

1567
01:05:07,200 --> 01:05:09,839
the two and a half components i have and

1568
01:05:09,839 --> 01:05:12,319
then hopefully we'll try some live demos

1569
01:05:12,319 --> 01:05:14,799
and see how that goes um i saw the

1570
01:05:14,799 --> 01:05:16,480
homework went out on the mailing list

1571
01:05:16,480 --> 01:05:18,640
but if anyone wants to download vlc4

1572
01:05:18,640 --> 01:05:20,720
that hasn't already

1573
01:05:20,720 --> 01:05:23,200
and participate in the live demos

1574
01:05:23,200 --> 01:05:24,799
if you go to

1575
01:05:24,799 --> 01:05:25,680
uh

1576
01:05:25,680 --> 01:05:27,200
trudienne.net

1577
01:05:27,200 --> 01:05:29,039
there's a link on the top of the page

1578
01:05:29,039 --> 01:05:31,359
for vlc4

1579
01:05:31,359 --> 01:05:33,598
um

1580
01:05:34,079 --> 01:05:37,440
uh if there's anybody meet echo um we're

1581
01:05:37,440 --> 01:05:39,280
having a little trouble doing a

1582
01:05:39,280 --> 01:05:42,079
screen share

1583
01:05:42,079 --> 01:05:44,960
maybe i requested oh do i really want to

1584
01:05:44,960 --> 01:05:47,200
share my screen yes i do

1585
01:05:47,200 --> 01:05:51,118
i would like to share never mind echo

1586
01:05:54,799 --> 01:05:55,680
mode

1587
01:05:55,680 --> 01:05:57,760
there we go awesome

1588
01:05:57,760 --> 01:05:58,720
okay

1589
01:05:58,720 --> 01:06:00,400
so yeah off net sourcing and the

1590
01:06:00,400 --> 01:06:02,559
multicast menu like i said i have two

1591
01:06:02,559 --> 01:06:05,039
and a half components multicast menu and

1592
01:06:05,039 --> 01:06:07,119
the off net sourcing bit are the main

1593
01:06:07,119 --> 01:06:08,960
stuff and then i just want to talk about

1594
01:06:08,960 --> 01:06:11,920
tjtv because i think it's a cool example

1595
01:06:11,920 --> 01:06:14,000
of lowering the barrier of entry to

1596
01:06:14,000 --> 01:06:16,240
streaming multicast

1597
01:06:16,240 --> 01:06:18,400
so multicast menu started off looking

1598
01:06:18,400 --> 01:06:19,599
like this

1599
01:06:19,599 --> 01:06:21,280
and the main

1600
01:06:21,280 --> 01:06:24,000
benefits of it um were it lets you

1601
01:06:24,000 --> 01:06:26,000
register and or add your multicast

1602
01:06:26,000 --> 01:06:27,520
streams

1603
01:06:27,520 --> 01:06:29,839
yeah yeah

1604
01:06:29,839 --> 01:06:31,039
uh

1605
01:06:31,039 --> 01:06:33,280
better

1606
01:06:33,280 --> 01:06:35,359
there we go okay um so let's you

1607
01:06:35,359 --> 01:06:37,680
register and and or add your multicast

1608
01:06:37,680 --> 01:06:39,440
stream so if you've got a multicast

1609
01:06:39,440 --> 01:06:41,200
enabled network and you are putting your

1610
01:06:41,200 --> 01:06:43,280
own stream out there you can either

1611
01:06:43,280 --> 01:06:45,520
manually report it so typing in source

1612
01:06:45,520 --> 01:06:48,720
group udp port and a description of it

1613
01:06:48,720 --> 01:06:51,599
or let multicast menu itself just kind

1614
01:06:51,599 --> 01:06:53,520
of pick it up every night it goes

1615
01:06:53,520 --> 01:06:57,039
through internet2 and giant to look for

1616
01:06:57,039 --> 01:06:58,559
multicast streams essentially it's just

1617
01:06:58,559 --> 01:07:01,039
hitting looking glasses and running show

1618
01:07:01,039 --> 01:07:02,880
multicast or out detail

1619
01:07:02,880 --> 01:07:04,400
to pick up any streams that are going

1620
01:07:04,400 --> 01:07:05,440
through there

1621
01:07:05,440 --> 01:07:07,200
alternatively and this is where the off

1622
01:07:07,200 --> 01:07:09,680
net sourcing bit comes in if you're not

1623
01:07:09,680 --> 01:07:12,559
on a multicast enabled network you can

1624
01:07:12,559 --> 01:07:15,359
upload a file a video file and have it

1625
01:07:15,359 --> 01:07:16,640
translated

1626
01:07:16,640 --> 01:07:17,680
um

1627
01:07:17,680 --> 01:07:19,440
and there's an api to do this all

1628
01:07:19,440 --> 01:07:20,799
programmatically

1629
01:07:20,799 --> 01:07:22,880
of course you need a way to manage what

1630
01:07:22,880 --> 01:07:24,079
you've added

1631
01:07:24,079 --> 01:07:26,559
so changing like the stream information

1632
01:07:26,559 --> 01:07:30,000
title description category

1633
01:07:30,000 --> 01:07:32,079
and then also it's very easy to view the

1634
01:07:32,079 --> 01:07:33,839
streams

1635
01:07:33,839 --> 01:07:35,680
it's much easier than

1636
01:07:35,680 --> 01:07:37,440
it's much more simple than the command

1637
01:07:37,440 --> 01:07:39,200
line options that have been there in the

1638
01:07:39,200 --> 01:07:41,200
past we'd kind of have a direct option

1639
01:07:41,200 --> 01:07:43,119
to open in vlc

1640
01:07:43,119 --> 01:07:45,200
we're still working on specifying that

1641
01:07:45,200 --> 01:07:47,440
the amt relay option when opening

1642
01:07:47,440 --> 01:07:49,440
directly into vlc

1643
01:07:49,440 --> 01:07:51,760
and verifying that the manual streams

1644
01:07:51,760 --> 01:07:54,480
that are reported are actually actually

1645
01:07:54,480 --> 01:07:57,200
exist we do basic like did you give an

1646
01:07:57,200 --> 01:08:00,079
an actual ipv4 address but not really

1647
01:08:00,079 --> 01:08:02,319
anything beyond that at this point

1648
01:08:02,319 --> 01:08:05,200
um and then a protocol handler from

1649
01:08:05,200 --> 01:08:06,880
for opening directly from the browser

1650
01:08:06,880 --> 01:08:08,799
would be nice

1651
01:08:08,799 --> 01:08:12,319
um and then a student at tu berlin

1652
01:08:12,319 --> 01:08:13,920
um recently

1653
01:08:13,920 --> 01:08:15,920
kind of redid the ui

1654
01:08:15,920 --> 01:08:17,759
made it look a lot better

1655
01:08:17,759 --> 01:08:20,080
so we've got a thumbnail for each screen

1656
01:08:20,080 --> 01:08:22,399
now like i said ui overhaul

1657
01:08:22,399 --> 01:08:26,000
and also the ability to sort streams uh

1658
01:08:26,000 --> 01:08:28,319
by categories like trending

1659
01:08:28,319 --> 01:08:32,479
editors choice and various genres

1660
01:08:32,479 --> 01:08:34,560
so the second component is

1661
01:08:34,560 --> 01:08:37,040
off net sourcing so this is accomplished

1662
01:08:37,040 --> 01:08:39,520
from a phone

1663
01:08:39,520 --> 01:08:40,719
and the phone

1664
01:08:40,719 --> 01:08:43,198
jumps through a

1665
01:08:43,198 --> 01:08:44,960
transport translator

1666
01:08:44,960 --> 01:08:46,799
which sends it to the multicast

1667
01:08:46,799 --> 01:08:48,238
translator

1668
01:08:48,238 --> 01:08:49,198
so

1669
01:08:49,198 --> 01:08:50,640
in words

1670
01:08:50,640 --> 01:08:52,158
so we're going from the sender and

1671
01:08:52,158 --> 01:08:54,640
receiver from your phone an app on your

1672
01:08:54,640 --> 01:08:55,520
phone

1673
01:08:55,520 --> 01:08:57,600
to transport translator

1674
01:08:57,600 --> 01:08:59,439
sending it over udp

1675
01:08:59,439 --> 01:09:01,920
to into the multi gas translator and

1676
01:09:01,920 --> 01:09:03,600
that's where it actually enters a

1677
01:09:03,600 --> 01:09:05,359
multicast enabled network for the first

1678
01:09:05,359 --> 01:09:07,279
time and then that multi-cache

1679
01:09:07,279 --> 01:09:09,120
translator is obviously translating to

1680
01:09:09,120 --> 01:09:10,399
multicast

1681
01:09:10,399 --> 01:09:13,520
still working on various video encodings

1682
01:09:13,520 --> 01:09:15,600
and then the hope is eventually

1683
01:09:15,600 --> 01:09:18,158
that this multicast live or this off net

1684
01:09:18,158 --> 01:09:20,880
sourcing app can also become an off net

1685
01:09:20,880 --> 01:09:23,439
receiving app so you have some sort of

1686
01:09:23,439 --> 01:09:26,319
amd gateway implementation in the app

1687
01:09:26,319 --> 01:09:28,880
and then doing it for ios as opposed to

1688
01:09:28,880 --> 01:09:31,198
just android

1689
01:09:31,198 --> 01:09:32,319
and then

1690
01:09:32,319 --> 01:09:34,000
before we jump into demos i just wanted

1691
01:09:34,000 --> 01:09:35,679
to highlight tjtv

1692
01:09:35,679 --> 01:09:38,399
um my old high school

1693
01:09:38,399 --> 01:09:40,880
is one of the ones running an amt relay

1694
01:09:40,880 --> 01:09:43,759
and it's just very easy to

1695
01:09:43,759 --> 01:09:44,960
if you have access to a multicast

1696
01:09:44,960 --> 01:09:47,198
enabled network set up

1697
01:09:47,198 --> 01:09:49,600
streams i've just got vlc

1698
01:09:49,600 --> 01:09:52,238
sending them to the amt relay and

1699
01:09:52,238 --> 01:09:53,920
actually the first demo

1700
01:09:53,920 --> 01:09:54,560
is

1701
01:09:54,560 --> 01:09:56,960
watching one of those streams so

1702
01:09:56,960 --> 01:09:59,520
for demo this is the kind of topology

1703
01:09:59,520 --> 01:10:00,960
that we're working with

1704
01:10:00,960 --> 01:10:03,679
multicast translator amt relay in the

1705
01:10:03,679 --> 01:10:06,880
box sending that tjtv are all on a

1706
01:10:06,880 --> 01:10:09,600
multicast enabled network

1707
01:10:09,600 --> 01:10:11,600
and then the rest of the stuff isn't we

1708
01:10:11,600 --> 01:10:14,719
have our three imaginary people in blue

1709
01:10:14,719 --> 01:10:16,080
and all the stuff in green is

1710
01:10:16,080 --> 01:10:18,640
infrastructure that actually exists

1711
01:10:18,640 --> 01:10:20,640
so i'm going to jump out of presentation

1712
01:10:20,640 --> 01:10:24,080
mode and split my screen

1713
01:10:24,400 --> 01:10:26,560
because

1714
01:10:26,560 --> 01:10:29,360
i want to also see the terminal over

1715
01:10:29,360 --> 01:10:30,640
there that's showing what's happening in

1716
01:10:30,640 --> 01:10:31,840
the background

1717
01:10:31,840 --> 01:10:34,159
um so the first demo is just

1718
01:10:34,159 --> 01:10:38,000
viewing um the tjtv streams at all

1719
01:10:38,000 --> 01:10:41,040
so going into multicast menu

1720
01:10:41,040 --> 01:10:42,880
where that tv is behind okay so going

1721
01:10:42,880 --> 01:10:44,719
into multicast menu

1722
01:10:44,719 --> 01:10:46,640
finding a stream you're interested in

1723
01:10:46,640 --> 01:10:49,520
watching and opening it directly from

1724
01:10:49,520 --> 01:10:51,840
vlc

1725
01:10:51,840 --> 01:10:53,199
saving

1726
01:10:53,199 --> 01:10:54,560
placing

1727
01:10:54,560 --> 01:10:58,159
um it's

1728
01:10:58,159 --> 01:11:01,199
just opening in dlc

1729
01:11:01,199 --> 01:11:04,400
so this is designed to simplify for an

1730
01:11:04,400 --> 01:11:06,560
end user that might not know how to use

1731
01:11:06,560 --> 01:11:07,920
a command line

1732
01:11:07,920 --> 01:11:10,800
um i've got a stream i have my laptop

1733
01:11:10,800 --> 01:11:12,400
muted right now but the audio comes

1734
01:11:12,400 --> 01:11:14,960
through as well

1735
01:11:16,480 --> 01:11:18,800
so the flow or the flow that happened

1736
01:11:18,800 --> 01:11:20,080
there was

1737
01:11:20,080 --> 01:11:21,280
um

1738
01:11:21,280 --> 01:11:24,320
before any of this i added

1739
01:11:24,320 --> 01:11:26,640
go back into full screen

1740
01:11:26,640 --> 01:11:29,280
i added the streams to tjtv and i

1741
01:11:29,280 --> 01:11:31,040
manually added an entry to multicast

1742
01:11:31,040 --> 01:11:33,120
menu to tell you about the streams

1743
01:11:33,120 --> 01:11:35,360
and then we went from our laptop to

1744
01:11:35,360 --> 01:11:37,040
multicast menu to get the information

1745
01:11:37,040 --> 01:11:39,120
about the streams and then we reached

1746
01:11:39,120 --> 01:11:42,000
out to the amt relay because here at

1747
01:11:42,000 --> 01:11:44,159
iatf we're sitting on a unicast only

1748
01:11:44,159 --> 01:11:46,719
network and the amt relay was able to

1749
01:11:46,719 --> 01:11:47,920
provide that

1750
01:11:47,920 --> 01:11:51,840
tj tv source for us

1751
01:11:52,480 --> 01:11:54,800
okay here's where things get interesting

1752
01:11:54,800 --> 01:11:56,480
so um

1753
01:11:56,480 --> 01:11:58,800
this is the offnet sourcing bit and this

1754
01:11:58,800 --> 01:12:00,719
is the first of the two off net sourcing

1755
01:12:00,719 --> 01:12:03,040
capabilities where we're streaming from

1756
01:12:03,040 --> 01:12:05,600
a file so a pre-recorded video

1757
01:12:05,600 --> 01:12:07,600
um if i didn't have access to a

1758
01:12:07,600 --> 01:12:09,440
multicast enabled network i could have

1759
01:12:09,440 --> 01:12:12,000
done tjtv this way just uploading the

1760
01:12:12,000 --> 01:12:13,440
video

1761
01:12:13,440 --> 01:12:16,560
so going to multicast menu

1762
01:12:16,560 --> 01:12:20,560
add stream and uploading a file

1763
01:12:20,560 --> 01:12:21,440
um

1764
01:12:21,440 --> 01:12:23,440
specifying

1765
01:12:23,440 --> 01:12:25,840
some basic stream information to help

1766
01:12:25,840 --> 01:12:27,920
people know what it is

1767
01:12:27,920 --> 01:12:31,360
and then selecting our file

1768
01:12:31,360 --> 01:12:33,520
and as soon as i hit submit here it's

1769
01:12:33,520 --> 01:12:36,719
gonna buffer for a second

1770
01:12:36,719 --> 01:12:38,320
but when it goes through

1771
01:12:38,320 --> 01:12:40,640
you'll see that the translator is now

1772
01:12:40,640 --> 01:12:41,920
receiving

1773
01:12:41,920 --> 01:12:45,120
a udp source in and it's translating it

1774
01:12:45,120 --> 01:12:47,360
as multicast it picked a multicast group

1775
01:12:47,360 --> 01:12:50,560
address for it and then it pinged

1776
01:12:50,560 --> 01:12:53,280
multicast menus api to add it

1777
01:12:53,280 --> 01:12:55,360
and when we refresh the page here

1778
01:12:55,360 --> 01:12:57,760
we see that our video has picked up the

1779
01:12:57,760 --> 01:13:00,320
source our video and multicast menu has

1780
01:13:00,320 --> 01:13:02,000
picked up the source in the group that

1781
01:13:02,000 --> 01:13:05,199
was assigned to it so if we go back over

1782
01:13:05,199 --> 01:13:06,800
into the main page

1783
01:13:06,800 --> 01:13:08,159
we can again

1784
01:13:08,159 --> 01:13:09,760
go through the process

1785
01:13:09,760 --> 01:13:13,199
of opening in vlc

1786
01:13:17,360 --> 01:13:19,120
now this one takes a couple seconds to

1787
01:13:19,120 --> 01:13:20,159
load up

1788
01:13:20,159 --> 01:13:21,840
i've noticed

1789
01:13:21,840 --> 01:13:22,960
um

1790
01:13:22,960 --> 01:13:24,560
should pop up

1791
01:13:24,560 --> 01:13:25,760
there we go

1792
01:13:25,760 --> 01:13:28,960
and we have our source that is

1793
01:13:28,960 --> 01:13:30,719
streaming for multicast menu that i just

1794
01:13:30,719 --> 01:13:32,239
uploaded

1795
01:13:32,239 --> 01:13:33,600
okay

1796
01:13:33,600 --> 01:13:36,239
so the flow that happened for that one

1797
01:13:36,239 --> 01:13:39,040
was that we

1798
01:13:39,040 --> 01:13:40,960
from our computer we uploaded a file to

1799
01:13:40,960 --> 01:13:42,320
multicast menu

1800
01:13:42,320 --> 01:13:44,159
multicast menu sent that to the

1801
01:13:44,159 --> 01:13:47,280
multicast translator to be translated

1802
01:13:47,280 --> 01:13:50,239
as multicast and then

1803
01:13:50,239 --> 01:13:52,480
sent an api back to multicast menu to

1804
01:13:52,480 --> 01:13:54,719
tell us about it and then that same flow

1805
01:13:54,719 --> 01:13:56,560
that happened before when we tried to

1806
01:13:56,560 --> 01:13:58,640
view it

1807
01:13:58,640 --> 01:14:00,239
so the third and final demo and the one

1808
01:14:00,239 --> 01:14:02,159
that i think is pretty cool

1809
01:14:02,159 --> 01:14:04,560
is let's live stream this meeting so

1810
01:14:04,560 --> 01:14:06,480
we're not actually going to open the the

1811
01:14:06,480 --> 01:14:08,640
app because the video encoding is still

1812
01:14:08,640 --> 01:14:12,000
messed up um but on my phone i have an

1813
01:14:12,000 --> 01:14:14,880
app it's called high vision live and is

1814
01:14:14,880 --> 01:14:18,080
there a camera that shows anyway it's on

1815
01:14:18,080 --> 01:14:19,440
my phone it's called hi vision live and

1816
01:14:19,440 --> 01:14:22,800
all i did was type in the url of this

1817
01:14:22,800 --> 01:14:24,719
transport translator

1818
01:14:24,719 --> 01:14:26,239
and i'm going to

1819
01:14:26,239 --> 01:14:28,960
start a stream and i'll

1820
01:14:28,960 --> 01:14:31,120
prop it up

1821
01:14:31,120 --> 01:14:32,400
there you go

1822
01:14:32,400 --> 01:14:37,320
there you go we got a camera man okay so

1823
01:14:43,040 --> 01:14:43,840
okay

1824
01:14:43,840 --> 01:14:45,360
hopefully that

1825
01:14:45,360 --> 01:14:46,480
okay

1826
01:14:46,480 --> 01:14:49,600
so we see that we have a second

1827
01:14:49,600 --> 01:14:51,760
uh message here from our translator

1828
01:14:51,760 --> 01:14:54,840
actually before we do that

1829
01:14:54,840 --> 01:14:58,320
um see that we accepted an srt source

1830
01:14:58,320 --> 01:14:59,679
connection that's what's coming from the

1831
01:14:59,679 --> 01:15:01,760
phone that's that first hop into the

1832
01:15:01,760 --> 01:15:03,520
transport translator

1833
01:15:03,520 --> 01:15:05,440
and then we're forwarding on to our

1834
01:15:05,440 --> 01:15:07,840
multicast translator to add to multicast

1835
01:15:07,840 --> 01:15:10,239
menu

1836
01:15:10,480 --> 01:15:11,920
and we see we have

1837
01:15:11,920 --> 01:15:13,600
this first item here which is what we

1838
01:15:13,600 --> 01:15:15,360
just added there's no description

1839
01:15:15,360 --> 01:15:16,800
available because we haven't added one

1840
01:15:16,800 --> 01:15:18,320
yet but

1841
01:15:18,320 --> 01:15:20,719
there's the ability to crowdsource such

1842
01:15:20,719 --> 01:15:22,320
a description

1843
01:15:22,320 --> 01:15:25,840
but if we want to open this in vlc

1844
01:15:25,840 --> 01:15:27,840
it's a lot of clicking to open in vlc

1845
01:15:27,840 --> 01:15:29,120
which is why we'd like to get that

1846
01:15:29,120 --> 01:15:31,280
protocol handler

1847
01:15:31,280 --> 01:15:33,280
to do it a little easier

1848
01:15:33,280 --> 01:15:34,800
but it does beat the command line for

1849
01:15:34,800 --> 01:15:37,520
many many users

1850
01:15:37,520 --> 01:15:39,840
okay

1851
01:15:41,679 --> 01:15:43,679
there we go

1852
01:15:43,679 --> 01:15:45,440
and so now we're streaming and like i

1853
01:15:45,440 --> 01:15:47,760
said audio comes through just fine

1854
01:15:47,760 --> 01:15:50,320
um i just have my computer muted at the

1855
01:15:50,320 --> 01:15:51,600
moment but

1856
01:15:51,600 --> 01:15:53,840
yeah

1857
01:15:54,000 --> 01:15:55,440
so

1858
01:15:55,440 --> 01:15:56,960
most of this

1859
01:15:56,960 --> 01:16:00,159
let me get my slides back

1860
01:16:00,800 --> 01:16:01,760
yes

1861
01:16:01,760 --> 01:16:04,560
um and like i said the goal is to get to

1862
01:16:04,560 --> 01:16:07,040
a separate like multicast live app where

1863
01:16:07,040 --> 01:16:09,280
it can be both a sender and receiver but

1864
01:16:09,280 --> 01:16:11,120
in the interim high vision live android

1865
01:16:11,120 --> 01:16:13,760
and ios does the job perfectly fine

1866
01:16:13,760 --> 01:16:16,880
yeah so just for those you know

1867
01:16:16,880 --> 01:16:20,400
not following along what um what uh

1868
01:16:20,400 --> 01:16:21,679
lauren's essentially built here is

1869
01:16:21,679 --> 01:16:23,360
something that ietf hasn't done in about

1870
01:16:23,360 --> 01:16:27,040
15 to 20 years which is stream a uh an

1871
01:16:27,040 --> 01:16:30,400
ietf uh over the mbone um and better yet

1872
01:16:30,400 --> 01:16:33,040
it can be received by anybody on uh

1873
01:16:33,040 --> 01:16:35,520
unicast only network so

1874
01:16:35,520 --> 01:16:39,199
so we're getting ietf back

1875
01:16:39,440 --> 01:16:42,960
over being multicasted um and uh yes and

1876
01:16:42,960 --> 01:16:45,040
not only is it being multicasted but

1877
01:16:45,040 --> 01:16:46,880
it's being received by

1878
01:16:46,880 --> 01:16:48,640
it's being transported by a multicast

1879
01:16:48,640 --> 01:16:50,159
but received by

1880
01:16:50,159 --> 01:16:52,000
anybody on the internet uh including

1881
01:16:52,000 --> 01:16:54,080
unicast only which is something that uh

1882
01:16:54,080 --> 01:16:55,520
you know even 20 years ago we couldn't

1883
01:16:55,520 --> 01:16:56,880
do when multi when these meetings were

1884
01:16:56,880 --> 01:16:59,120
multicasted

1885
01:16:59,120 --> 01:17:00,640
yeah with amt

1886
01:17:00,640 --> 01:17:02,480
so the i stopped the stream so you can

1887
01:17:02,480 --> 01:17:04,719
stop being cameraman um and the part i

1888
01:17:04,719 --> 01:17:06,239
didn't address is that the yeah if you

1889
01:17:06,239 --> 01:17:09,440
hit stop stream um that all of the the

1890
01:17:09,440 --> 01:17:12,080
teardown is very automatic so when it

1891
01:17:12,080 --> 01:17:13,520
stops receiving

1892
01:17:13,520 --> 01:17:16,640
uh translation here it'll call back to

1893
01:17:16,640 --> 01:17:18,080
multicast menu and say hey i'm not

1894
01:17:18,080 --> 01:17:19,679
getting a source anymore

1895
01:17:19,679 --> 01:17:21,840
please delete the entry so people aren't

1896
01:17:21,840 --> 01:17:24,239
looking up stale sources

1897
01:17:24,239 --> 01:17:26,800
and for that last the flow for that last

1898
01:17:26,800 --> 01:17:29,440
was from a phone into our transport

1899
01:17:29,440 --> 01:17:31,840
translator which is just an aws box

1900
01:17:31,840 --> 01:17:33,040
sitting

1901
01:17:33,040 --> 01:17:36,960
on the unicast regular internet um then

1902
01:17:36,960 --> 01:17:39,199
into multicast into the multicast

1903
01:17:39,199 --> 01:17:42,400
translator back out as an api call

1904
01:17:42,400 --> 01:17:44,239
yeah so most of this is still pretty

1905
01:17:44,239 --> 01:17:47,840
actively being developed um like i had

1906
01:17:47,840 --> 01:17:49,679
to do's on each slide

1907
01:17:49,679 --> 01:17:51,360
so we're building up little by little

1908
01:17:51,360 --> 01:17:52,960
trying to

1909
01:17:52,960 --> 01:17:55,120
pick and pull different uh bits of

1910
01:17:55,120 --> 01:17:57,520
technology to push them all together to

1911
01:17:57,520 --> 01:17:59,520
make this work

1912
01:17:59,520 --> 01:18:02,239
that's what i've got

1913
01:18:03,910 --> 01:18:09,280
[Applause]

1914
01:18:09,280 --> 01:18:13,239
oh i'm max

1915
01:18:14,640 --> 01:18:16,880
he followed instructions i i just had a

1916
01:18:16,880 --> 01:18:19,120
question about other source options i

1917
01:18:19,120 --> 01:18:21,440
mean first of all fantastic this is very

1918
01:18:21,440 --> 01:18:24,000
exciting uh if if i had something like

1919
01:18:24,000 --> 01:18:27,040
an existing uh ip camera can we pull

1920
01:18:27,040 --> 01:18:29,440
that uh that stream as well somehow set

1921
01:18:29,440 --> 01:18:31,120
it as a destination into the translator

1922
01:18:31,120 --> 01:18:32,560
and get that sourced

1923
01:18:32,560 --> 01:18:35,600
yeah so that's not built in as like a

1924
01:18:35,600 --> 01:18:37,440
easy clickable thing in multicast menu

1925
01:18:37,440 --> 01:18:41,520
but it's certainly very possible yes

1926
01:18:41,520 --> 01:18:43,520
uh yes maxwell

1927
01:18:43,520 --> 01:18:45,440
great presentation thanks um

1928
01:18:45,440 --> 01:18:48,239
clarifying question i guess so the app

1929
01:18:48,239 --> 01:18:50,800
the higher tv app sends it via unicast

1930
01:18:50,800 --> 01:18:54,080
to the multicast translator yeah yeah so

1931
01:18:54,080 --> 01:18:56,320
i've still got my slides right yep

1932
01:18:56,320 --> 01:18:58,880
okay um yeah so what's actually

1933
01:18:58,880 --> 01:19:01,120
happening is it's sending the high

1934
01:19:01,120 --> 01:19:04,960
vision app is using srt which is uh udp

1935
01:19:04,960 --> 01:19:06,000
based

1936
01:19:06,000 --> 01:19:08,239
uh but still has some server client

1937
01:19:08,239 --> 01:19:10,880
aspects um and that's going into a

1938
01:19:10,880 --> 01:19:12,000
transport

1939
01:19:12,000 --> 01:19:13,920
transport translator which is just

1940
01:19:13,920 --> 01:19:16,480
taking that srt udp and changing it to

1941
01:19:16,480 --> 01:19:18,239
regular udp and that's what's going into

1942
01:19:18,239 --> 01:19:20,320
the multicast translator okay and then

1943
01:19:20,320 --> 01:19:22,960
the multicast translator sends it out

1944
01:19:22,960 --> 01:19:25,440
both via multicast it translates to

1945
01:19:25,440 --> 01:19:27,360
multicast and from there okay exactly it

1946
01:19:27,360 --> 01:19:30,800
takes udp unicast and out is multicast

1947
01:19:30,800 --> 01:19:33,800
thanks

1948
01:19:39,280 --> 01:19:41,440
i just wanted to uh to thank you for

1949
01:19:41,440 --> 01:19:43,280
this presentation and say that i think

1950
01:19:43,280 --> 01:19:44,560
this is the first time i've ever seen a

1951
01:19:44,560 --> 01:19:45,920
live demo

1952
01:19:45,920 --> 01:19:48,400
at ietf go down without a hitch so

1953
01:19:48,400 --> 01:19:50,719
really good job that was fantastic i was

1954
01:19:50,719 --> 01:19:52,350
very concerned

1955
01:19:52,350 --> 01:19:56,289
[Applause]

1956
01:19:57,679 --> 01:19:59,360
hi i'm jake uh

1957
01:19:59,360 --> 01:20:02,239
when you say regular udp you mean raw ts

1958
01:20:02,239 --> 01:20:03,679
encoded

1959
01:20:03,679 --> 01:20:04,640
uh

1960
01:20:04,640 --> 01:20:07,120
inside the udp right this is mpeg-ts

1961
01:20:07,120 --> 01:20:07,840
that's

1962
01:20:07,840 --> 01:20:11,600
it's mpegts yes great thanks

1963
01:20:15,520 --> 01:20:17,199
great job lauren

1964
01:20:17,199 --> 01:20:19,280
i just wanted to share some experience

1965
01:20:19,280 --> 01:20:20,560
that

1966
01:20:20,560 --> 01:20:24,320
i've seen not working because

1967
01:20:24,320 --> 01:20:26,639
i used to work for a consulting company

1968
01:20:26,639 --> 01:20:29,760
and we were doing some consulting work

1969
01:20:29,760 --> 01:20:32,400
at a large international insurance

1970
01:20:32,400 --> 01:20:33,440
company

1971
01:20:33,440 --> 01:20:35,840
and they try to live stream pretty much

1972
01:20:35,840 --> 01:20:38,400
exactly in the same way that you did

1973
01:20:38,400 --> 01:20:40,400
their

1974
01:20:40,400 --> 01:20:42,239
all hands calls for

1975
01:20:42,239 --> 01:20:44,159
their employees

1976
01:20:44,159 --> 01:20:47,360
on-site multicast offside through

1977
01:20:47,360 --> 01:20:48,960
unicast

1978
01:20:48,960 --> 01:20:51,120
um what you've done works what they've

1979
01:20:51,120 --> 01:20:53,120
done failed and they had to reshed you

1980
01:20:53,120 --> 01:20:55,760
the session

1981
01:20:55,840 --> 01:20:58,960
yeah scalability is still a slight issue

1982
01:20:58,960 --> 01:21:01,360
more just because of like operational

1983
01:21:01,360 --> 01:21:02,560
constraints

1984
01:21:02,560 --> 01:21:05,360
you've got a tiny aws box and

1985
01:21:05,360 --> 01:21:07,199
iptables firewalls going into the

1986
01:21:07,199 --> 01:21:08,639
multicast translator but yeah

1987
01:21:08,639 --> 01:21:10,400
scalability is a little bit the next

1988
01:21:10,400 --> 01:21:13,400
step

1989
01:21:19,840 --> 01:21:22,320
uh who's funding this uh you mean at the

1990
01:21:22,320 --> 01:21:24,719
amc level like who's paying for the amt

1991
01:21:24,719 --> 01:21:26,800
connections

1992
01:21:26,800 --> 01:21:28,560
oh the aws translator is on my credit

1993
01:21:28,560 --> 01:21:29,760
card right now

1994
01:21:29,760 --> 01:21:31,199
um

1995
01:21:31,199 --> 01:21:33,760
yeah i i he offered to fix it many

1996
01:21:33,760 --> 01:21:35,120
months ago and i just haven't gotten

1997
01:21:35,120 --> 01:21:38,719
around to giving him that info yet

1998
01:21:38,880 --> 01:21:40,639
i bet you said you're gonna you're gonna

1999
01:21:40,639 --> 01:21:42,080
help i thought you were gonna say you're

2000
01:21:42,080 --> 01:21:44,080
gonna help pay for it and that

2001
01:21:44,080 --> 01:21:47,040
will help remind me to pay for it

2002
01:21:47,040 --> 01:21:50,840
yeah um

2003
01:22:03,360 --> 01:22:04,880
okay how do i

2004
01:22:04,880 --> 01:22:06,800
stop

2005
01:22:06,800 --> 01:22:10,120
okay perfect

2006
01:22:11,840 --> 01:22:13,360
great that's uh pretty amazing work and

2007
01:22:13,360 --> 01:22:15,199
this is um just for those uh without the

2008
01:22:15,199 --> 01:22:16,320
background

2009
01:22:16,320 --> 01:22:18,560
this has been a multi-year project uh it

2010
01:22:18,560 --> 01:22:20,560
started with william zhang

2011
01:22:20,560 --> 01:22:21,360
at

2012
01:22:21,360 --> 01:22:23,520
thomas jefferson high school about five

2013
01:22:23,520 --> 01:22:24,560
years ago

2014
01:22:24,560 --> 01:22:26,719
he deployed the first um

2015
01:22:26,719 --> 01:22:28,320
amt relay

2016
01:22:28,320 --> 01:22:29,760
and then uh

2017
01:22:29,760 --> 01:22:32,159
two and a half years ago um lauren two

2018
01:22:32,159 --> 01:22:33,679
and a half three years ago lauren picked

2019
01:22:33,679 --> 01:22:37,040
up that work uh and has you know uh she

2020
01:22:37,040 --> 01:22:39,120
built the multicast menu and has

2021
01:22:39,120 --> 01:22:42,000
extended um and has enhanced and we're

2022
01:22:42,000 --> 01:22:43,199
up to off net sourcing which is

2023
01:22:43,199 --> 01:22:44,560
something we've been talking about for

2024
01:22:44,560 --> 01:22:47,520
years and uh she was able to do this so

2025
01:22:47,520 --> 01:22:49,520
really really impressive and um and the

2026
01:22:49,520 --> 01:22:52,719
work continues um max uh

2027
01:22:52,719 --> 01:22:54,320
uh there others have been collaborating

2028
01:22:54,320 --> 01:22:56,400
and max is gonna at the end talk about

2029
01:22:56,400 --> 01:22:58,960
um some work that his student is doing

2030
01:22:58,960 --> 01:23:01,760
in collaboration with lauren um so this

2031
01:23:01,760 --> 01:23:04,800
is a great project um and it's exciting

2032
01:23:04,800 --> 01:23:07,440
and like i said we're we're getting

2033
01:23:07,440 --> 01:23:10,000
ietf backing up back on the mbone and uh

2034
01:23:10,000 --> 01:23:11,440
we're getting content on the m-bone and

2035
01:23:11,440 --> 01:23:13,280
there's lots of neat stuff so i

2036
01:23:13,280 --> 01:23:15,120
encourage folks go visit uh the

2037
01:23:15,120 --> 01:23:17,679
multicast menu check this out it works

2038
01:23:17,679 --> 01:23:20,159
it's real um you when you when you

2039
01:23:20,159 --> 01:23:22,880
receive that content you're watching

2040
01:23:22,880 --> 01:23:25,760
multicast streams over the mbone uh you

2041
01:23:25,760 --> 01:23:27,280
know something that you know if we had

2042
01:23:27,280 --> 01:23:28,480
20 years ago the world might be a

2043
01:23:28,480 --> 01:23:30,480
different place but um but it's pretty

2044
01:23:30,480 --> 01:23:31,840
exciting so

2045
01:23:31,840 --> 01:23:34,800
um next up is

2046
01:23:34,800 --> 01:23:38,920
uh eric you are

2047
01:23:42,110 --> 01:23:45,219
[Music]

2048
01:23:48,320 --> 01:23:50,000
hello

2049
01:23:50,000 --> 01:23:53,360
i am eric from viva we build software

2050
01:23:53,360 --> 01:23:55,520
for multicasting zoom and webex and

2051
01:23:55,520 --> 01:23:56,880
other meetings

2052
01:23:56,880 --> 01:23:58,880
and what i want to talk briefly about is

2053
01:23:58,880 --> 01:24:00,639
the history of some receivers and

2054
01:24:00,639 --> 01:24:04,000
clients as a way to think about the past

2055
01:24:04,000 --> 01:24:05,760
and potentially inform

2056
01:24:05,760 --> 01:24:08,080
quick multicast and other considerations

2057
01:24:08,080 --> 01:24:10,159
so i thought it'd be useful to just give

2058
01:24:10,159 --> 01:24:12,000
a very very brief you know overview of

2059
01:24:12,000 --> 01:24:13,920
some of the things that i experienced

2060
01:24:13,920 --> 01:24:15,280
and

2061
01:24:15,280 --> 01:24:17,280
and then some ideas about uh about

2062
01:24:17,280 --> 01:24:20,400
future implementation so next slide so

2063
01:24:20,400 --> 01:24:22,880
so this is uh some legacy receivers that

2064
01:24:22,880 --> 01:24:24,560
you might have remembered starlight

2065
01:24:24,560 --> 01:24:27,199
networks back in 1996 bought by

2066
01:24:27,199 --> 01:24:28,320
picturetel

2067
01:24:28,320 --> 01:24:30,960
and they did mpeg-1 multicast and we

2068
01:24:30,960 --> 01:24:33,360
built a web-based kiosk for them very

2069
01:24:33,360 --> 01:24:35,199
close to my heart because i met my wife

2070
01:24:35,199 --> 01:24:36,960
at a conference when we built out a

2071
01:24:36,960 --> 01:24:38,719
little multicast

2072
01:24:38,719 --> 01:24:39,760
kiosk

2073
01:24:39,760 --> 01:24:42,560
using starlight networks and then

2074
01:24:42,560 --> 01:24:44,480
progressive networks real player again

2075
01:24:44,480 --> 01:24:46,239
another multicast receiver quicktime

2076
01:24:46,239 --> 01:24:48,320
windows media vlc of course

2077
01:24:48,320 --> 01:24:50,080
enterprise companies like vbrik had

2078
01:24:50,080 --> 01:24:51,040
other

2079
01:24:51,040 --> 01:24:53,600
multicast receivers and so this is thick

2080
01:24:53,600 --> 01:24:57,280
software deployed by enterprises to

2081
01:24:57,280 --> 01:25:00,639
receive multicast typically

2082
01:25:00,639 --> 01:25:04,159
within a very closed network typically

2083
01:25:04,159 --> 01:25:06,560
one to 12 channels could be an iptv

2084
01:25:06,560 --> 01:25:08,719
scenario it could be just a all hands

2085
01:25:08,719 --> 01:25:11,440
meeting type scenario very kind of

2086
01:25:11,440 --> 01:25:13,199
internal single domain controlled

2087
01:25:13,199 --> 01:25:14,560
environment

2088
01:25:14,560 --> 01:25:17,679
but yeah a range of multicast receiver

2089
01:25:17,679 --> 01:25:20,159
software next slide

2090
01:25:20,159 --> 01:25:23,280
so then it evolved a bit more moved into

2091
01:25:23,280 --> 01:25:24,960
taking the

2092
01:25:24,960 --> 01:25:27,760
the windows media player or real player

2093
01:25:27,760 --> 01:25:31,040
uh as a as a control or an ns api plug

2094
01:25:31,040 --> 01:25:33,440
into the browser so wanted to get this

2095
01:25:33,440 --> 01:25:35,600
multicast experience into the browser

2096
01:25:35,600 --> 01:25:37,920
context so you could do interesting

2097
01:25:37,920 --> 01:25:41,199
things about it then flash with the

2098
01:25:41,199 --> 01:25:43,840
flash animation movies and eventually

2099
01:25:43,840 --> 01:25:45,280
video

2100
01:25:45,280 --> 01:25:47,280
that then provided

2101
01:25:47,280 --> 01:25:49,440
multicast capabilities from their flash

2102
01:25:49,440 --> 01:25:50,960
server they had a

2103
01:25:50,960 --> 01:25:52,960
concept called fusion where they were

2104
01:25:52,960 --> 01:25:54,880
blending

2105
01:25:54,880 --> 01:25:56,639
peer-to-peer and

2106
01:25:56,639 --> 01:25:58,639
traditional multicast and unicast

2107
01:25:58,639 --> 01:26:00,639
failover same thing with windows media

2108
01:26:00,639 --> 01:26:02,639
had this concept of an nfc file where

2109
01:26:02,639 --> 01:26:06,840
you could specify a unicast failover

2110
01:26:06,840 --> 01:26:08,639
mechanism so

2111
01:26:08,639 --> 01:26:10,480
browser context is really important at

2112
01:26:10,480 --> 01:26:12,719
this point where we want to do a lot of

2113
01:26:12,719 --> 01:26:14,320
interactivity and other things in that

2114
01:26:14,320 --> 01:26:16,400
browser and have it be a web experience

2115
01:26:16,400 --> 01:26:17,760
and not just a

2116
01:26:17,760 --> 01:26:19,760
you know a thick client experience okay

2117
01:26:19,760 --> 01:26:21,440
next

2118
01:26:21,440 --> 01:26:23,760
so then um what are we doing today well

2119
01:26:23,760 --> 01:26:25,040
um

2120
01:26:25,040 --> 01:26:27,440
in the context of trying to get uh

2121
01:26:27,440 --> 01:26:29,920
multicast video to render inside of a

2122
01:26:29,920 --> 01:26:32,639
browser so here's a video.js plugin and

2123
01:26:32,639 --> 01:26:35,920
a browser joining a live stream the way

2124
01:26:35,920 --> 01:26:38,480
we have to do it now and by we i mean

2125
01:26:38,480 --> 01:26:39,840
there's various companies that do

2126
01:26:39,840 --> 01:26:42,639
enterprise video like uh high vision

2127
01:26:42,639 --> 01:26:44,400
kumu vbrik

2128
01:26:44,400 --> 01:26:46,560
uh kaltura others so these are companies

2129
01:26:46,560 --> 01:26:49,280
that provide internal all hands meetings

2130
01:26:49,280 --> 01:26:50,080
and

2131
01:26:50,080 --> 01:26:51,920
use cases for one-to-many video where

2132
01:26:51,920 --> 01:26:54,320
they still want to utilize multicast in

2133
01:26:54,320 --> 01:26:55,679
some way so

2134
01:26:55,679 --> 01:26:58,000
what they do is they have agent software

2135
01:26:58,000 --> 01:27:00,560
you could call it a multicast gateway

2136
01:27:00,560 --> 01:27:02,560
and they push that out to every single

2137
01:27:02,560 --> 01:27:05,040
desktop and it becomes a

2138
01:27:05,040 --> 01:27:06,800
a web server so they're running a local

2139
01:27:06,800 --> 01:27:08,800
host web server on their

2140
01:27:08,800 --> 01:27:10,239
their pc

2141
01:27:10,239 --> 01:27:12,639
mac ends up being this kind of strange

2142
01:27:12,639 --> 01:27:15,120
java implementation that's pretty tricky

2143
01:27:15,120 --> 01:27:17,600
but here you are listening on um you

2144
01:27:17,600 --> 01:27:19,960
know for a local host

2145
01:27:19,960 --> 01:27:23,360
https request from a browser

2146
01:27:23,360 --> 01:27:25,920
and meanwhile you can these agents can

2147
01:27:25,920 --> 01:27:26,960
be

2148
01:27:26,960 --> 01:27:29,199
can be available so when the browser

2149
01:27:29,199 --> 01:27:32,400
makes this local https request for a

2150
01:27:32,400 --> 01:27:34,000
service

2151
01:27:34,000 --> 01:27:36,560
it will then open up and join a

2152
01:27:36,560 --> 01:27:38,239
multicast so you could do a transport

2153
01:27:38,239 --> 01:27:41,040
stream multicast and then this agent

2154
01:27:41,040 --> 01:27:43,120
would receive it and transfer stream

2155
01:27:43,120 --> 01:27:45,040
happened to be pretty handy for

2156
01:27:45,040 --> 01:27:47,199
hls so you could just take the transport

2157
01:27:47,199 --> 01:27:51,040
stream and re-packetize package it into

2158
01:27:51,040 --> 01:27:54,800
http hls tls to the browser so that's

2159
01:27:54,800 --> 01:27:56,080
how you get

2160
01:27:56,080 --> 01:27:58,960
transport stream into hls

2161
01:27:58,960 --> 01:28:00,880
via a local host browser

2162
01:28:00,880 --> 01:28:02,480
web server into

2163
01:28:02,480 --> 01:28:04,639
into a local browser and

2164
01:28:04,639 --> 01:28:06,639
lots of security problems with that but

2165
01:28:06,639 --> 01:28:09,040
at least it solved the problem of

2166
01:28:09,040 --> 01:28:11,120
of getting multicast into the browser so

2167
01:28:11,120 --> 01:28:13,679
we're obviously really eager for

2168
01:28:13,679 --> 01:28:15,760
quick multicast and better solutions to

2169
01:28:15,760 --> 01:28:17,199
do this

2170
01:28:17,199 --> 01:28:19,040
one more thing and we're almost done so

2171
01:28:19,040 --> 01:28:20,960
uh last slide

2172
01:28:20,960 --> 01:28:23,920
is uh is what what is vivo doing so we

2173
01:28:23,920 --> 01:28:26,159
are actually building thick clients for

2174
01:28:26,159 --> 01:28:27,920
all the different platforms so there's a

2175
01:28:27,920 --> 01:28:30,880
zoom version google meet version

2176
01:28:30,880 --> 01:28:34,480
it has we're using vp8 it's rtp we use

2177
01:28:34,480 --> 01:28:36,000
ford air correction

2178
01:28:36,000 --> 01:28:38,080
uh it has chromium built into it so we

2179
01:28:38,080 --> 01:28:40,320
could do the interactivity with chromium

2180
01:28:40,320 --> 01:28:42,719
it's a g streamer uh

2181
01:28:42,719 --> 01:28:46,800
codebase with ulpfec and uses qt for the

2182
01:28:46,800 --> 01:28:48,239
for the wrapper

2183
01:28:48,239 --> 01:28:50,960
lots of opportunity to make this much

2184
01:28:50,960 --> 01:28:54,159
more simple with uh with uh

2185
01:28:54,159 --> 01:28:55,679
quick multicast

2186
01:28:55,679 --> 01:28:57,280
and since we have chromium maybe we can

2187
01:28:57,280 --> 01:28:59,360
get to get to that very quickly take out

2188
01:28:59,360 --> 01:29:01,520
the g streamer make this just be one

2189
01:29:01,520 --> 01:29:03,440
interactive experience and that would

2190
01:29:03,440 --> 01:29:05,440
definitely make our customers a lot

2191
01:29:05,440 --> 01:29:07,520
happier so last slide is the is the

2192
01:29:07,520 --> 01:29:08,560
future

2193
01:29:08,560 --> 01:29:12,239
and jake eager to talk with you about it

2194
01:29:12,239 --> 01:29:14,080
great thanks eric uh

2195
01:29:14,080 --> 01:29:15,920
i just had a question two slides back in

2196
01:29:15,920 --> 01:29:17,679
this deployment model where you've got a

2197
01:29:17,679 --> 01:29:20,159
localhost server yeah

2198
01:29:20,159 --> 01:29:23,440
uh what do you do for mobile

2199
01:29:23,440 --> 01:29:25,120
or do you have uh do you have mobile

2200
01:29:25,120 --> 01:29:27,120
support because there's like sandboxing

2201
01:29:27,120 --> 01:29:29,280
issues with this model there right

2202
01:29:29,280 --> 01:29:31,120
yeah it doesn't doesn't support mobile i

2203
01:29:31,120 --> 01:29:32,719
mean there's one option is to do a

2204
01:29:32,719 --> 01:29:34,960
gateway in that local network

2205
01:29:34,960 --> 01:29:36,800
have that be on a wi-fi network and have

2206
01:29:36,800 --> 01:29:38,560
mobile devices just join hd to be

2207
01:29:38,560 --> 01:29:42,560
unicast over wi-fi all right thanks

2208
01:29:43,360 --> 01:29:45,440
um i have a

2209
01:29:45,440 --> 01:29:47,440
so i've heard over the years a lot of

2210
01:29:47,440 --> 01:29:48,960
different use cases for multicast this

2211
01:29:48,960 --> 01:29:50,639
is the first this is the first time

2212
01:29:50,639 --> 01:29:52,320
you've come up with a new use case i

2213
01:29:52,320 --> 01:29:53,840
believe it you described it spouse

2214
01:29:53,840 --> 01:29:57,040
discovery you you multicast yes yes

2215
01:29:57,040 --> 01:29:59,440
based um you're you you actually got

2216
01:29:59,440 --> 01:30:01,120
married as a result of multicast that's

2217
01:30:01,120 --> 01:30:03,199
true that's right i was definitely shy

2218
01:30:03,199 --> 01:30:05,520
but when uh when my wife was at the

2219
01:30:05,520 --> 01:30:07,520
conference i was i had the gumption

2220
01:30:07,520 --> 01:30:09,600
enough to go and say check this demo out

2221
01:30:09,600 --> 01:30:11,920
and it worked as well so i got lucky and

2222
01:30:11,920 --> 01:30:13,520
i've been married ever since so i've

2223
01:30:13,520 --> 01:30:15,280
been very lucky that was a that was a

2224
01:30:15,280 --> 01:30:16,719
multicast join

2225
01:30:16,719 --> 01:30:19,280
that's still successful

2226
01:30:19,280 --> 01:30:21,520
uh so i have lots of swag if anyone

2227
01:30:21,520 --> 01:30:24,400
wants t-shirts or mugs with multicast

2228
01:30:24,400 --> 01:30:26,560
stuff uh come on down any other

2229
01:30:26,560 --> 01:30:28,880
questions

2230
01:30:30,880 --> 01:30:32,880
that's true yeah that's yeah there's no

2231
01:30:32,880 --> 01:30:34,639
there's no group sharing or key sharing

2232
01:30:34,639 --> 01:30:36,800
or anything like that uh possible let's

2233
01:30:36,800 --> 01:30:39,520
just stick with spouse discovery

2234
01:30:39,520 --> 01:30:41,280
and i guess i guess that is the question

2235
01:30:41,280 --> 01:30:44,480
yeah it's uh yeah

2236
01:30:44,480 --> 01:30:46,080
that's true yeah there was no there was

2237
01:30:46,080 --> 01:30:49,120
no group activity in that one

2238
01:30:49,120 --> 01:30:51,360
any other questions

2239
01:30:51,360 --> 01:30:52,960
all right thank you yeah and again if

2240
01:30:52,960 --> 01:30:55,120
anyone was interested in shirts and mugs

2241
01:30:55,120 --> 01:30:58,020
i've got stuff for you

2242
01:30:58,020 --> 01:31:02,189
[Applause]

2243
01:31:07,120 --> 01:31:11,320
okay uh max you're up

2244
01:31:23,520 --> 01:31:25,440
all right yeah um so this is just going

2245
01:31:25,440 --> 01:31:27,280
to be quickly um

2246
01:31:27,280 --> 01:31:28,239
basically

2247
01:31:28,239 --> 01:31:29,440
you can take as much time as you want

2248
01:31:29,440 --> 01:31:30,560
yeah

2249
01:31:30,560 --> 01:31:33,120
you take us home yeah all right

2250
01:31:33,120 --> 01:31:36,480
you've got 30 minutes yeah okay um

2251
01:31:36,480 --> 01:31:39,199
i hope i don't need 30 minutes uh but

2252
01:31:39,199 --> 01:31:41,600
yeah so this is like just some updates

2253
01:31:41,600 --> 01:31:43,679
on or like reporting on some of the

2254
01:31:43,679 --> 01:31:44,960
student projects we're doing at

2255
01:31:44,960 --> 01:31:47,840
turbulent related to multicast

2256
01:31:47,840 --> 01:31:50,159
so the first one is adding ipv6 support

2257
01:31:50,159 --> 01:31:53,120
into the vse implementation

2258
01:31:53,120 --> 01:31:53,920
so

2259
01:31:53,920 --> 01:31:56,320
that's all the different ways jake did

2260
01:31:56,320 --> 01:31:57,440
some

2261
01:31:57,440 --> 01:31:59,760
testing at last at the last second about

2262
01:31:59,760 --> 01:32:02,000
the tunneling and so on so since that

2263
01:32:02,000 --> 01:32:04,000
worked we're hoping to it will work here

2264
01:32:04,000 --> 01:32:06,320
as well so we will have ipv4 and mp6 and

2265
01:32:06,320 --> 01:32:07,440
so on

2266
01:32:07,440 --> 01:32:09,600
um it should be finished relatively soon

2267
01:32:09,600 --> 01:32:11,360
um the project is going to be over in

2268
01:32:11,360 --> 01:32:12,880
like three weeks

2269
01:32:12,880 --> 01:32:14,000
and

2270
01:32:14,000 --> 01:32:16,239
the last thing to do basically is we are

2271
01:32:16,239 --> 01:32:17,920
also looking um

2272
01:32:17,920 --> 01:32:20,560
where we're gonna upstream it hopefully

2273
01:32:20,560 --> 01:32:21,920
and um

2274
01:32:21,920 --> 01:32:23,360
we're also looking for deployments if

2275
01:32:23,360 --> 01:32:27,199
anybody has an ipv6 capable amt relay

2276
01:32:27,199 --> 01:32:30,400
somewhere or could enable aimed ipv6 on

2277
01:32:30,400 --> 01:32:32,560
a relay somewhere that would be great in

2278
01:32:32,560 --> 01:32:35,679
the mbon um we're still looking to serve

2279
01:32:35,679 --> 01:32:37,199
our own

2280
01:32:37,199 --> 01:32:41,360
relay at tu berlin um so so it would be

2281
01:32:41,360 --> 01:32:43,120
the deutsche four chunks net so dfn

2282
01:32:43,120 --> 01:32:44,880
which is

2283
01:32:44,880 --> 01:32:46,719
not really jean but

2284
01:32:46,719 --> 01:32:49,360
connected to zhong and it's all a bit

2285
01:32:49,360 --> 01:32:51,280
uh bureaucratic and

2286
01:32:51,280 --> 01:32:52,880
we're trying to figure out and hopefully

2287
01:32:52,880 --> 01:32:54,560
we get a relay up

2288
01:32:54,560 --> 01:32:57,840
soon as well all right thanks

2289
01:32:57,840 --> 01:33:01,280
um then the the next student is um

2290
01:33:01,280 --> 01:33:03,679
implementing graceful failover for mt so

2291
01:33:03,679 --> 01:33:06,880
make use of the lflac that's there but

2292
01:33:06,880 --> 01:33:08,239
as far as i understand it not really

2293
01:33:08,239 --> 01:33:10,320
used anywhere so far

2294
01:33:10,320 --> 01:33:12,639
and the idea is that the relay sets the

2295
01:33:12,639 --> 01:33:14,400
outflag when it's about to shut down or

2296
01:33:14,400 --> 01:33:15,760
it knows that it's going to shut down

2297
01:33:15,760 --> 01:33:17,840
soon for whatever reason and the the

2298
01:33:17,840 --> 01:33:20,159
gateways can start discovery

2299
01:33:20,159 --> 01:33:22,320
and in that way keep the stream running

2300
01:33:22,320 --> 01:33:24,560
and don't have any interruptions by the

2301
01:33:24,560 --> 01:33:27,920
the relay suddenly disappearing um

2302
01:33:27,920 --> 01:33:30,159
this is part of a bachelor thesis so

2303
01:33:30,159 --> 01:33:32,960
the implementation should also be done

2304
01:33:32,960 --> 01:33:34,239
in the near future

2305
01:33:34,239 --> 01:33:36,880
okay the last slide

2306
01:33:36,880 --> 01:33:39,199
good question is there an equivalent

2307
01:33:39,199 --> 01:33:41,520
graceful restart on the client side

2308
01:33:41,520 --> 01:33:43,199
so the amt relay can shut down the

2309
01:33:43,199 --> 01:33:44,719
tunnel quicker when the

2310
01:33:44,719 --> 01:33:46,080
it goes away

2311
01:33:46,080 --> 01:33:49,880
so it doesn't have to timeout

2312
01:33:51,679 --> 01:33:53,360
i'm worried about i'm worried about the

2313
01:33:53,360 --> 01:33:55,600
relay um encapsulating to where there's

2314
01:33:55,600 --> 01:33:57,199
no client anymore

2315
01:33:57,199 --> 01:33:59,520
oh that's a good problem to solve okay

2316
01:33:59,520 --> 01:34:01,440
thanks do you know what i mean

2317
01:34:01,440 --> 01:34:02,400
no

2318
01:34:02,400 --> 01:34:04,880
if the client just drops off the air

2319
01:34:04,880 --> 01:34:05,840
the

2320
01:34:05,840 --> 01:34:08,000
the the if the amt gave me drops off the

2321
01:34:08,000 --> 01:34:08,960
air

2322
01:34:08,960 --> 01:34:11,120
and then the the amt relay still has the

2323
01:34:11,120 --> 01:34:13,600
tunnel to it it'll keep encapsulating to

2324
01:34:13,600 --> 01:34:15,199
it until some time out

2325
01:34:15,199 --> 01:34:16,719
so i just didn't want to send all the

2326
01:34:16,719 --> 01:34:20,320
data on the network to no place right

2327
01:34:20,960 --> 01:34:22,560
right i want it to happen sooner so i

2328
01:34:22,560 --> 01:34:24,159
was wondering if there's a sorry i'm

2329
01:34:24,159 --> 01:34:26,080
going away sort of thing when it's a

2330
01:34:26,080 --> 01:34:28,239
graceful restart not when it crashes or

2331
01:34:28,239 --> 01:34:32,199
goes away right

2332
01:34:33,360 --> 01:34:34,719
then it would do it great so that's the

2333
01:34:34,719 --> 01:34:36,880
graceful mechanism so you're saying jake

2334
01:34:36,880 --> 01:34:39,920
there's no need for that okay

2335
01:34:42,159 --> 01:34:44,000
yeah

2336
01:34:44,000 --> 01:34:46,400
but yeah thanks for jake for also coming

2337
01:34:46,400 --> 01:34:48,239
up with that idea in a way or like um

2338
01:34:48,239 --> 01:34:50,080
helping the student along as well

2339
01:34:50,080 --> 01:34:52,639
um right and since the bachelorette has

2340
01:34:52,639 --> 01:34:54,080
to be some scientific part so it's gonna

2341
01:34:54,080 --> 01:34:56,239
include some measurements hopefully and

2342
01:34:56,239 --> 01:34:58,320
how much time you save and so on yep

2343
01:34:58,320 --> 01:35:00,960
yeah actually there is a reason if if

2344
01:35:00,960 --> 01:35:02,400
there's a shut

2345
01:35:02,400 --> 01:35:03,679
if uh

2346
01:35:03,679 --> 01:35:06,560
um if something goes away um maybe the

2347
01:35:06,560 --> 01:35:07,520
um

2348
01:35:07,520 --> 01:35:10,239
the relay can send a query sooner so it

2349
01:35:10,239 --> 01:35:12,000
can detect that no igmp report is going

2350
01:35:12,000 --> 01:35:13,760
to come back within 10 seconds you could

2351
01:35:13,760 --> 01:35:15,679
shut down the tunnel in 10 seconds

2352
01:35:15,679 --> 01:35:17,199
instead of three minutes

2353
01:35:17,199 --> 01:35:19,119
that's useful

2354
01:35:19,119 --> 01:35:21,840
right yeah okay

2355
01:35:21,840 --> 01:35:23,840
all right and

2356
01:35:23,840 --> 01:35:26,159
the final one is basically what lauren

2357
01:35:26,159 --> 01:35:27,520
already talked about

2358
01:35:27,520 --> 01:35:29,760
and shown um this update to the

2359
01:35:29,760 --> 01:35:31,199
multicast menu

2360
01:35:31,199 --> 01:35:33,760
um i guess the interesting part here is

2361
01:35:33,760 --> 01:35:37,040
that on one hand the the pulling of the

2362
01:35:37,040 --> 01:35:38,159
preview frames is gonna do some

2363
01:35:38,159 --> 01:35:39,760
measurements on how much resources

2364
01:35:39,760 --> 01:35:42,000
that's gonna take and so on but the

2365
01:35:42,000 --> 01:35:43,679
other thing is how do you do like

2366
01:35:43,679 --> 01:35:46,159
ranking for multicast streams right

2367
01:35:46,159 --> 01:35:47,760
because unlike twitch or something you

2368
01:35:47,760 --> 01:35:49,440
don't have the viewer numbers you don't

2369
01:35:49,440 --> 01:35:51,600
know who's actually watching the stream

2370
01:35:51,600 --> 01:35:53,760
um if you have something like multicast

2371
01:35:53,760 --> 01:35:55,920
quick of course you would know that but

2372
01:35:55,920 --> 01:35:58,159
for the multicast menu especially

2373
01:35:58,159 --> 01:35:59,040
there's

2374
01:35:59,040 --> 01:36:00,960
no good way of doing that so he

2375
01:36:00,960 --> 01:36:03,600
implemented something like um cache the

2376
01:36:03,600 --> 01:36:05,360
the the same algorithm that's used for

2377
01:36:05,360 --> 01:36:07,520
cache management

2378
01:36:07,520 --> 01:36:09,760
where you use the likes on the website

2379
01:36:09,760 --> 01:36:11,679
to to figure out which stream is

2380
01:36:11,679 --> 01:36:13,600
relatively popular

2381
01:36:13,600 --> 01:36:14,560
um

2382
01:36:14,560 --> 01:36:16,480
but yeah there might be

2383
01:36:16,480 --> 01:36:19,040
future work on seeing like if this

2384
01:36:19,040 --> 01:36:20,960
also could

2385
01:36:20,960 --> 01:36:22,800
be related to telemetry and so on but if

2386
01:36:22,800 --> 01:36:24,400
there's a good way to figure out like

2387
01:36:24,400 --> 01:36:25,920
which multicultural stream is actually

2388
01:36:25,920 --> 01:36:27,280
popular and is actually getting watched

2389
01:36:27,280 --> 01:36:29,520
by a lot of people

2390
01:36:29,520 --> 01:36:32,800
okay next slide

2391
01:36:34,960 --> 01:36:37,360
uh yeah so there's also the the idea um

2392
01:36:37,360 --> 01:36:38,880
for a future problem but it's like a big

2393
01:36:38,880 --> 01:36:40,320
idea so we would need a bigger group for

2394
01:36:40,320 --> 01:36:43,199
that uh maybe in the over the winter

2395
01:36:43,199 --> 01:36:44,239
term

2396
01:36:44,239 --> 01:36:46,480
is to try to get apt-get distribution

2397
01:36:46,480 --> 01:36:49,119
with multicast implemented right so you

2398
01:36:49,119 --> 01:36:50,639
would popular

2399
01:36:50,639 --> 01:36:52,400
properly uh popular

2400
01:36:52,400 --> 01:36:54,000
packets would get distributed over

2401
01:36:54,000 --> 01:36:55,199
multicast if a lot of people are

2402
01:36:55,199 --> 01:36:57,760
requesting at the same time

2403
01:36:57,760 --> 01:37:00,239
next slide

2404
01:37:01,440 --> 01:37:03,600
yeah and that's basically it so if any

2405
01:37:03,600 --> 01:37:06,159
of you have ideas for similar scope

2406
01:37:06,159 --> 01:37:08,480
topics related to multicast

2407
01:37:08,480 --> 01:37:10,400
or just any other collaborations you

2408
01:37:10,400 --> 01:37:12,000
would want to do we have a lot of

2409
01:37:12,000 --> 01:37:13,199
students

2410
01:37:13,199 --> 01:37:16,000
applying for theses we can't

2411
01:37:16,000 --> 01:37:17,440
we don't we can't come up with enough

2412
01:37:17,440 --> 01:37:18,800
ideas

2413
01:37:18,800 --> 01:37:21,440
for interesting thesis um so yeah we

2414
01:37:21,440 --> 01:37:24,480
would be very happy if any of you

2415
01:37:24,480 --> 01:37:26,080
have ideas or something like that all

2416
01:37:26,080 --> 01:37:27,360
right

2417
01:37:27,360 --> 01:37:30,320
thanks lauren uh yeah with the trending

2418
01:37:30,320 --> 01:37:33,199
streams is he what is he tracking for

2419
01:37:33,199 --> 01:37:36,719
trending streams just the like button

2420
01:37:36,719 --> 01:37:39,119
so would there be any value in tracking

2421
01:37:39,119 --> 01:37:40,239
like how many people are actually

2422
01:37:40,239 --> 01:37:42,960
clicking to open the stream as well

2423
01:37:42,960 --> 01:37:44,480
because i mean that is a button that's

2424
01:37:44,480 --> 01:37:48,159
clicked right i i i guess yes the the

2425
01:37:48,159 --> 01:37:52,719
ideas then or the issue i guess is um

2426
01:37:52,719 --> 01:37:54,080
do you like weigh them differently but

2427
01:37:54,080 --> 01:37:55,520
yes it's it's probably a good idea to

2428
01:37:55,520 --> 01:37:56,560
like

2429
01:37:56,560 --> 01:38:00,480
for future um i can tell yeah

2430
01:38:00,840 --> 01:38:03,280
thanks yes and you don't know like if

2431
01:38:03,280 --> 01:38:05,119
somebody launched from the con so um

2432
01:38:05,119 --> 01:38:07,040
from the command line you also don't i

2433
01:38:07,040 --> 01:38:09,119
guess wouldn't know

2434
01:38:09,119 --> 01:38:11,119
stick with us um

2435
01:38:11,119 --> 01:38:12,880
could you track how long people actually

2436
01:38:12,880 --> 01:38:14,400
are watching if people you know just

2437
01:38:14,400 --> 01:38:15,920
watch it for a few seconds then they

2438
01:38:15,920 --> 01:38:17,360
probably didn't care about it if they

2439
01:38:17,360 --> 01:38:18,639
watched a long time they might really

2440
01:38:18,639 --> 01:38:23,600
like it or no you can't okay that's fun

2441
01:38:24,719 --> 01:38:26,320
i would imagine that you should be able

2442
01:38:26,320 --> 01:38:29,280
to track uh one how many people click on

2443
01:38:29,280 --> 01:38:32,080
the entry and two how many people could

2444
01:38:32,080 --> 01:38:34,719
clicked on the launch in vlc

2445
01:38:34,719 --> 01:38:36,159
so at the very least you know how many

2446
01:38:36,159 --> 01:38:37,920
people

2447
01:38:37,920 --> 01:38:39,679
actually did

2448
01:38:39,679 --> 01:38:42,080
click to to try to get it right yeah how

2449
01:38:42,080 --> 01:38:44,639
long they were on right if if they

2450
01:38:44,639 --> 01:38:46,960
didn't use the command line right right

2451
01:38:46,960 --> 01:38:48,400
for the for the second one and that's

2452
01:38:48,400 --> 01:38:50,320
like that's why so far here's the like

2453
01:38:50,320 --> 01:38:51,920
button because that's like more a strong

2454
01:38:51,920 --> 01:38:53,520
indication that's actually like

2455
01:38:53,520 --> 01:38:55,360
something they want to watch and

2456
01:38:55,360 --> 01:38:57,600
are interested in watching um but yeah

2457
01:38:57,600 --> 01:38:59,440
it's definitely like an i think a bigger

2458
01:38:59,440 --> 01:39:01,119
area where you can probably come up some

2459
01:39:01,119 --> 01:39:03,520
clever mechanism somewhere else that

2460
01:39:03,520 --> 01:39:05,119
that you could use yeah

2461
01:39:05,119 --> 01:39:06,719
i think the only ones who are using the

2462
01:39:06,719 --> 01:39:08,400
command line are like the people in this

2463
01:39:08,400 --> 01:39:11,600
room so sure yeah

2464
01:39:11,600 --> 01:39:13,440
is anybody else using the multicast menu

2465
01:39:13,440 --> 01:39:15,040
right now right other than the people in

2466
01:39:15,040 --> 01:39:17,119
this room so after this meeting it'll be

2467
01:39:17,119 --> 01:39:19,440
a lot

2468
01:39:20,719 --> 01:39:23,679
all right uh thanks a lot

2469
01:39:23,679 --> 01:39:25,760
all right thank you um so we do have a

2470
01:39:25,760 --> 01:39:27,440
little bit of time uh but that doesn't

2471
01:39:27,440 --> 01:39:29,679
mean you can leave um so uh everybody

2472
01:39:29,679 --> 01:39:30,960
please uh

2473
01:39:30,960 --> 01:39:33,280
feet proud on floor eyes eyes forward

2474
01:39:33,280 --> 01:39:35,119
hands folded till the end

2475
01:39:35,119 --> 01:39:36,719
um

2476
01:39:36,719 --> 01:39:39,600
uh but um we have some time uh anybody

2477
01:39:39,600 --> 01:39:40,400
wanna

2478
01:39:40,400 --> 01:39:41,840
uh anybody have anything else they'd

2479
01:39:41,840 --> 01:39:45,679
like to bring up uh and discuss

2480
01:39:47,040 --> 01:39:49,760
jake are you trying to leave are you uh

2481
01:39:49,760 --> 01:39:50,639
okay

2482
01:39:50,639 --> 01:39:52,960
uh yes t-shirts are here um i should say

2483
01:39:52,960 --> 01:39:54,960
uh like i mentioned there's there's a

2484
01:39:54,960 --> 01:39:57,840
there's a slack group uh that um

2485
01:39:57,840 --> 01:40:00,239
a lot of this activity is happening on

2486
01:40:00,239 --> 01:40:01,840
um

2487
01:40:01,840 --> 01:40:03,679
uh reach out to me i can get you added

2488
01:40:03,679 --> 01:40:05,679
to the slack group or you know any of

2489
01:40:05,679 --> 01:40:06,480
the

2490
01:40:06,480 --> 01:40:08,960
the others in this group

2491
01:40:08,960 --> 01:40:11,040
uh and we can add you and get be part of

2492
01:40:11,040 --> 01:40:13,600
the revolution

2493
01:40:18,080 --> 01:40:19,520
okay everyone thank you

2494
01:40:19,520 --> 01:40:23,400
one of the big issues

2495
01:40:31,600 --> 01:40:34,840
that's happening

2496
01:40:42,960 --> 01:40:44,719
actually that would be really valuable

2497
01:40:44,719 --> 01:40:46,000
because that could

2498
01:40:46,000 --> 01:40:46,880
prevent

2499
01:40:46,880 --> 01:40:49,119
in the past there was like the

2500
01:40:49,119 --> 01:40:50,880
issues with dead streams and like these

2501
01:40:50,880 --> 01:40:52,320
things they go there and they never you

2502
01:40:52,320 --> 01:40:53,920
know remember sdr had

2503
01:40:53,920 --> 01:40:58,760
hundreds of streams that were dead

2504
01:41:44,639 --> 01:41:46,880
live

2505
01:41:56,560 --> 01:41:59,560
is

2506
01:42:24,400 --> 01:42:27,400
is

2507
01:43:06,800 --> 01:43:10,679
this is like one of the best

2508
01:43:32,639 --> 01:43:34,480
uh so for the folks still on uh we've

2509
01:43:34,480 --> 01:43:36,000
actually the meeting's over so thanks

2510
01:43:36,000 --> 01:43:37,600
for coming and we'll see you in

2511
01:43:37,600 --> 01:43:39,840
london

2512
01:43:57,100 --> 01:44:00,229
[Music]

2513
01:44:19,119 --> 01:44:22,719
and foreign telemetry

2514
01:44:25,840 --> 01:44:27,440
by default

2515
01:44:27,440 --> 01:44:29,520
they do this

2516
01:44:29,520 --> 01:44:31,199
satellite telemetry

2517
01:44:31,199 --> 01:44:32,080
but

2518
01:44:32,080 --> 01:44:35,119
they push out in real

2519
01:44:44,560 --> 01:44:47,560
is

2520
01:45:04,960 --> 01:45:07,960
okay

2521
01:45:56,639 --> 01:45:58,960
oh yeah

2522
01:46:09,920 --> 01:46:13,800
well that was the intent

