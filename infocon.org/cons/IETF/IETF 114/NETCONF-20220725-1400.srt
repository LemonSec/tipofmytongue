1
00:00:05,040 --> 00:00:08,640
okay i just passed you the control

2
00:00:13,679 --> 00:00:17,320
oh that's true

3
00:00:19,760 --> 00:00:22,160
so in the room we are seeing the slides

4
00:00:22,160 --> 00:00:25,760
but with a dialogue in front

5
00:00:27,920 --> 00:00:30,920
um

6
00:00:34,559 --> 00:00:38,640
sorry is there meat echo in chat here

7
00:00:39,040 --> 00:00:40,719
should be right

8
00:00:40,719 --> 00:00:45,320
there i don't see them yet

9
00:00:57,039 --> 00:01:00,160
a window wanted left

10
00:01:01,840 --> 00:01:02,960
okay

11
00:01:02,960 --> 00:01:05,040
it was highlighted

12
00:01:05,040 --> 00:01:09,640
presentation views okay

13
00:01:23,360 --> 00:01:26,759
it's all correct

14
00:01:30,479 --> 00:01:33,600
no just local speakers no

15
00:01:33,600 --> 00:01:35,040
let you try unsharing the slides and

16
00:01:35,040 --> 00:01:39,000
reassure them and see what happens

17
00:01:44,799 --> 00:01:48,360
still there though

18
00:01:57,759 --> 00:02:00,799
somebody has a pull up so maybe we can

19
00:02:00,799 --> 00:02:04,840
try canceling the pole

20
00:02:12,800 --> 00:02:14,319
just give us a couple of minutes to

21
00:02:14,319 --> 00:02:16,480
resolve this

22
00:02:16,480 --> 00:02:19,840
there's a pole window i believe open

23
00:02:19,840 --> 00:02:22,319
which is causing to overlay on the slide

24
00:02:22,319 --> 00:02:24,560
deck

25
00:02:34,959 --> 00:02:36,640
see that's the one yeah whatever you

26
00:02:36,640 --> 00:02:38,560
just did what was what would you do yeah

27
00:02:38,560 --> 00:02:41,519
i just killed the poll

28
00:02:41,519 --> 00:02:44,959
okay i think that fixed it

29
00:02:47,599 --> 00:02:48,879
so kent i'm going to pass the

30
00:02:48,879 --> 00:02:53,319
presentation ball back to you

31
00:03:12,319 --> 00:03:13,920
all right

32
00:03:13,920 --> 00:03:16,400
with those few glitches

33
00:03:16,400 --> 00:03:17,599
away

34
00:03:17,599 --> 00:03:20,319
uh this is the net count working group

35
00:03:20,319 --> 00:03:24,640
um meeting in itf 114

36
00:03:25,120 --> 00:03:28,000
next slide please

37
00:03:30,319 --> 00:03:31,120
okay

38
00:03:31,120 --> 00:03:32,720
that's a note well

39
00:03:32,720 --> 00:03:34,400
most of you are familiar with it if

40
00:03:34,400 --> 00:03:35,680
you're not

41
00:03:35,680 --> 00:03:37,680
do take some time to go through it

42
00:03:37,680 --> 00:03:41,760
anything you speak or

43
00:03:41,760 --> 00:03:43,120
discuss

44
00:03:43,120 --> 00:03:45,920
in within the halls of this meeting are

45
00:03:45,920 --> 00:03:47,120
part of the

46
00:03:47,120 --> 00:03:50,879
itf contributions

47
00:03:50,879 --> 00:03:53,518
next slide

48
00:03:53,920 --> 00:03:55,439
um

49
00:03:55,439 --> 00:03:58,080
so a couple of

50
00:03:58,080 --> 00:04:00,799
additions or changes so we of course

51
00:04:00,799 --> 00:04:02,959
have the meat echo session uh you're

52
00:04:02,959 --> 00:04:04,080
here

53
00:04:04,080 --> 00:04:05,360
you know that

54
00:04:05,360 --> 00:04:07,519
uh you should be logged into the meat

55
00:04:07,519 --> 00:04:10,640
echo session whether in person

56
00:04:10,640 --> 00:04:12,400
like

57
00:04:12,400 --> 00:04:14,159
the version that you're probably running

58
00:04:14,159 --> 00:04:15,920
if you're in the room

59
00:04:15,920 --> 00:04:18,320
or if you're remote then you have a full

60
00:04:18,320 --> 00:04:19,839
version

61
00:04:19,839 --> 00:04:23,440
with the house icon

62
00:04:24,080 --> 00:04:27,680
the meet echo session will also act as a

63
00:04:27,680 --> 00:04:29,919
virtual blue sheet so if you're logged

64
00:04:29,919 --> 00:04:32,800
in it will record you as an attendee to

65
00:04:32,800 --> 00:04:35,440
the session

66
00:04:36,720 --> 00:04:39,520
there is a chat window i think for the

67
00:04:39,520 --> 00:04:43,040
first time we are introducing zulip

68
00:04:43,040 --> 00:04:43,919
so

69
00:04:43,919 --> 00:04:46,240
uh monitor some of the chats on that

70
00:04:46,240 --> 00:04:48,639
session

71
00:04:50,080 --> 00:04:51,600
jabber comments of course will be

72
00:04:51,600 --> 00:04:54,840
reflected within the zoolop

73
00:04:54,840 --> 00:04:57,840
session we have a two-hour slot

74
00:04:57,840 --> 00:04:59,040
um

75
00:04:59,040 --> 00:05:01,840
and we have

76
00:05:02,240 --> 00:05:04,400
not a completely packed agenda so we'll

77
00:05:04,400 --> 00:05:08,320
probably be a little flexible with time

78
00:05:08,320 --> 00:05:10,080
but we'll try to use the timer if

79
00:05:10,080 --> 00:05:12,639
necessary

80
00:05:15,680 --> 00:05:17,280
the

81
00:05:17,280 --> 00:05:20,479
queue will be managed by a meat echo so

82
00:05:20,479 --> 00:05:22,960
whether you're in the room or remote do

83
00:05:22,960 --> 00:05:25,840
try to

84
00:05:26,560 --> 00:05:28,240
line up

85
00:05:28,240 --> 00:05:32,479
in in the queue session before you speak

86
00:05:33,039 --> 00:05:35,840
so to queue up use the icon with the

87
00:05:35,840 --> 00:05:39,360
hand symbol

88
00:05:39,360 --> 00:05:41,680
on the um and then

89
00:05:41,680 --> 00:05:43,039
to speak

90
00:05:43,039 --> 00:05:45,919
make sure that you have

91
00:05:45,919 --> 00:05:47,759
hit the play button

92
00:05:47,759 --> 00:05:50,240
this is for the remote audience

93
00:05:50,240 --> 00:05:51,759
and of course remember to remove

94
00:05:51,759 --> 00:05:53,759
yourself from the queue once you're done

95
00:05:53,759 --> 00:05:56,080
talking

96
00:05:56,080 --> 00:05:57,919
there is a note session

97
00:05:57,919 --> 00:05:59,919
which i believe the agenda has been

98
00:05:59,919 --> 00:06:01,199
pre-loaded

99
00:06:01,199 --> 00:06:03,360
we welcome your comments our

100
00:06:03,360 --> 00:06:06,639
contributions to that notes page so may

101
00:06:06,639 --> 00:06:07,440
please

102
00:06:07,440 --> 00:06:08,960
add that

103
00:06:08,960 --> 00:06:10,080
add

104
00:06:10,080 --> 00:06:14,000
your notes or your comments to that page

105
00:06:14,000 --> 00:06:16,000
you can right click to make it a

106
00:06:16,000 --> 00:06:20,120
separate window if need be

107
00:06:21,520 --> 00:06:24,400
next slide please

108
00:06:25,919 --> 00:06:28,560
all right so the status of this

109
00:06:28,560 --> 00:06:31,039
charted workgroup items

110
00:06:31,039 --> 00:06:34,720
the https node updraft

111
00:06:34,720 --> 00:06:37,919
and the shepherd has written up

112
00:06:37,919 --> 00:06:42,080
um on the document thanks microphone

113
00:06:42,080 --> 00:06:42,960
the

114
00:06:42,960 --> 00:06:46,319
we publish dash 11 and they should be a

115
00:06:46,319 --> 00:06:49,599
dash 12 soon that we will publish that

116
00:06:49,599 --> 00:06:51,599
should address

117
00:06:51,599 --> 00:06:54,080
the comments we received

118
00:06:54,080 --> 00:06:57,280
in the shepherds write-up

119
00:06:58,240 --> 00:07:01,759
the client-server suite of drafts

120
00:07:01,759 --> 00:07:03,759
all the working group last comments

121
00:07:03,759 --> 00:07:05,759
issues were resolved

122
00:07:05,759 --> 00:07:08,240
and at this time the documents are ready

123
00:07:08,240 --> 00:07:09,840
for write-up

124
00:07:09,840 --> 00:07:12,319
which is something

125
00:07:12,319 --> 00:07:13,120
we

126
00:07:13,120 --> 00:07:14,880
i'll be working on

127
00:07:14,880 --> 00:07:17,759
we are of course looking for

128
00:07:17,759 --> 00:07:20,720
volunteers to help in writing there are

129
00:07:20,720 --> 00:07:23,680
a total of nine documents

130
00:07:23,680 --> 00:07:24,639
and

131
00:07:24,639 --> 00:07:27,680
if anyone is willing

132
00:07:27,680 --> 00:07:30,800
and wants to do a shepherd dried up

133
00:07:30,800 --> 00:07:32,000
please do

134
00:07:32,000 --> 00:07:34,639
approach me

135
00:07:36,319 --> 00:07:38,479
the udp native draft

136
00:07:38,479 --> 00:07:40,560
is work in progress will be discussed in

137
00:07:40,560 --> 00:07:42,400
this meeting

138
00:07:42,400 --> 00:07:46,719
and so will the distributed node draft

139
00:07:47,120 --> 00:07:49,599
the adaptive subscription draft was

140
00:07:49,599 --> 00:07:50,879
adopted

141
00:07:50,879 --> 00:07:53,039
as an experimental draft

142
00:07:53,039 --> 00:07:55,680
so it's been marked in as work in

143
00:07:55,680 --> 00:07:56,879
progress

144
00:07:56,879 --> 00:07:58,560
but is not being discussed in this

145
00:07:58,560 --> 00:08:00,720
meeting

146
00:08:00,720 --> 00:08:03,599
next slide please

147
00:08:03,919 --> 00:08:06,720
all right uh so on the agenda under

148
00:08:06,720 --> 00:08:08,560
chartered items we

149
00:08:08,560 --> 00:08:09,440
have

150
00:08:09,440 --> 00:08:12,000
uh alex who's going to discuss both the

151
00:08:12,000 --> 00:08:13,919
udp

152
00:08:13,919 --> 00:08:16,639
and the distributed native draft

153
00:08:16,639 --> 00:08:18,240
and then we have chin

154
00:08:18,240 --> 00:08:20,000
who who will

155
00:08:20,000 --> 00:08:23,680
talk about the newly adapt adopted

156
00:08:23,680 --> 00:08:27,440
this pagination terms

157
00:08:27,440 --> 00:08:30,319
next slide please

158
00:08:30,560 --> 00:08:33,039
under non-chartered items we have

159
00:08:33,039 --> 00:08:34,719
continuation of the discussion on the

160
00:08:34,719 --> 00:08:36,799
transaction id

161
00:08:36,799 --> 00:08:39,039
and will present that

162
00:08:39,039 --> 00:08:40,880
and then we have a new draft in the form

163
00:08:40,880 --> 00:08:44,479
of net conformer quick

164
00:08:45,839 --> 00:08:47,279
and as

165
00:08:47,279 --> 00:08:49,360
that will be followed by sean turner who

166
00:08:49,360 --> 00:08:50,560
will give

167
00:08:50,560 --> 00:08:55,719
an update on netconf over tls 1.3

168
00:08:55,839 --> 00:08:58,560
and for the remaining time we

169
00:08:58,560 --> 00:09:01,600
will have a discussion around netconf

170
00:09:01,600 --> 00:09:05,279
and rescon next

171
00:09:06,160 --> 00:09:09,120
so any questions concerns

172
00:09:09,120 --> 00:09:12,959
anything you want to raise at this point

173
00:09:15,760 --> 00:09:17,760
all right

174
00:09:17,760 --> 00:09:20,240
nothing in the room and i don't see

175
00:09:20,240 --> 00:09:23,360
anyone in the queue so maybe

176
00:09:23,360 --> 00:09:26,000
we can switch to the first

177
00:09:26,000 --> 00:09:28,720
slide deck

178
00:09:30,160 --> 00:09:33,199
and alex

179
00:09:47,120 --> 00:09:50,760
um sorry

180
00:09:51,519 --> 00:09:53,279
do you listen to me

181
00:09:53,279 --> 00:09:55,519
no

182
00:09:55,839 --> 00:09:58,839
okay

183
00:10:15,360 --> 00:10:16,640
thank you

184
00:10:16,640 --> 00:10:19,640
hello

185
00:10:20,240 --> 00:10:22,959
um hello to everyone uh this is alex

186
00:10:22,959 --> 00:10:25,440
juan from insalion and

187
00:10:25,440 --> 00:10:27,600
on behalf of the authors i'll be

188
00:10:27,600 --> 00:10:29,920
presenting a little update on the udp

189
00:10:29,920 --> 00:10:30,839
native

190
00:10:30,839 --> 00:10:35,519
draft so next slide please

191
00:10:35,519 --> 00:10:37,839
on the agenda today

192
00:10:37,839 --> 00:10:40,959
i will present a little context on

193
00:10:40,959 --> 00:10:42,560
on this draft

194
00:10:42,560 --> 00:10:43,360
the

195
00:10:43,360 --> 00:10:46,880
two changes the two draft we did to

196
00:10:46,880 --> 00:10:50,160
address the last itf comments

197
00:10:50,160 --> 00:10:52,320
and the plan changes for the upcoming

198
00:10:52,320 --> 00:10:54,640
versions of this draft

199
00:10:54,640 --> 00:10:58,000
so next slide please

200
00:10:58,000 --> 00:11:01,920
um so udp notif is um

201
00:11:01,920 --> 00:11:05,440
is a udp based transport protocol for

202
00:11:05,440 --> 00:11:07,600
young push

203
00:11:07,600 --> 00:11:10,160
the notification message is outside of

204
00:11:10,160 --> 00:11:12,959
the scope of this draft

205
00:11:12,959 --> 00:11:16,480
and uh for that

206
00:11:16,480 --> 00:11:20,880
we propose a shim header to uh

207
00:11:20,880 --> 00:11:23,200
send uh information directly from the

208
00:11:23,200 --> 00:11:24,480
line card

209
00:11:24,480 --> 00:11:25,600
without

210
00:11:25,600 --> 00:11:26,800
impacting

211
00:11:26,800 --> 00:11:31,599
the router the performance of the router

212
00:11:32,079 --> 00:11:35,279
next slide please

213
00:11:36,480 --> 00:11:38,320
so this protocol is

214
00:11:38,320 --> 00:11:40,320
designed to be deployed on

215
00:11:40,320 --> 00:11:42,800
on secure networks

216
00:11:42,800 --> 00:11:43,519
but

217
00:11:43,519 --> 00:11:46,560
for unsecured networks a dtls layer is

218
00:11:46,560 --> 00:11:49,839
proposed on section 6.

219
00:11:51,120 --> 00:11:54,399
next slide please

220
00:11:55,360 --> 00:11:59,920
and on the last day etf 113

221
00:11:59,920 --> 00:12:00,959
we

222
00:12:00,959 --> 00:12:02,560
we received

223
00:12:02,560 --> 00:12:04,639
two comments from the working group

224
00:12:04,639 --> 00:12:05,760
chairs

225
00:12:05,760 --> 00:12:09,200
uh thank you very much for that

226
00:12:09,279 --> 00:12:12,240
the first one is that uh how can we

227
00:12:12,240 --> 00:12:15,839
configure this uh dtls layer for

228
00:12:15,839 --> 00:12:18,480
for this transport protocol

229
00:12:18,480 --> 00:12:21,270
and the second one that uh it should be

230
00:12:21,270 --> 00:12:22,720
[Music]

231
00:12:22,720 --> 00:12:25,279
it would be better to add some examples

232
00:12:25,279 --> 00:12:26,519
of these

233
00:12:26,519 --> 00:12:28,320
configurations uh

234
00:12:28,320 --> 00:12:29,440
files

235
00:12:29,440 --> 00:12:32,320
for netconf

236
00:12:32,720 --> 00:12:35,120
next slide please

237
00:12:35,120 --> 00:12:36,839
uh to address that

238
00:12:36,839 --> 00:12:38,399
uh

239
00:12:38,399 --> 00:12:41,839
between the 5 and the 06

240
00:12:41,839 --> 00:12:44,880
globally we updated the biggest changes

241
00:12:44,880 --> 00:12:46,720
the young model and the young module to

242
00:12:46,720 --> 00:12:50,639
address the first request

243
00:12:51,760 --> 00:12:52,560
so

244
00:12:52,560 --> 00:12:55,279
what we see here is that we added a new

245
00:12:55,279 --> 00:12:56,160
flag

246
00:12:56,160 --> 00:12:59,760
to enable the tls or disable it

247
00:12:59,760 --> 00:13:02,880
and then the dtls container

248
00:13:02,880 --> 00:13:07,800
to set up the dtls layer parameters

249
00:13:08,720 --> 00:13:12,399
this dtls container imports actually the

250
00:13:12,399 --> 00:13:14,160
the

251
00:13:14,160 --> 00:13:15,279
tls

252
00:13:15,279 --> 00:13:19,040
client server draft grouping

253
00:13:19,040 --> 00:13:20,959
and right now we

254
00:13:20,959 --> 00:13:22,959
we do believe that we have everything we

255
00:13:22,959 --> 00:13:24,560
need to

256
00:13:24,560 --> 00:13:26,160
to configure it

257
00:13:26,160 --> 00:13:28,720
but uh we're still waiting for the

258
00:13:28,720 --> 00:13:32,800
implementation to check uh to check that

259
00:13:32,959 --> 00:13:36,079
nexus light please

260
00:13:37,360 --> 00:13:39,760
also reviewing the

261
00:13:39,760 --> 00:13:41,279
the young module

262
00:13:41,279 --> 00:13:42,320
we

263
00:13:42,320 --> 00:13:44,399
added two missed

264
00:13:44,399 --> 00:13:45,839
features

265
00:13:45,839 --> 00:13:47,120
one for

266
00:13:47,120 --> 00:13:51,440
dtls and one for segmentation

267
00:13:51,440 --> 00:13:53,680
we renamed also the

268
00:13:53,680 --> 00:13:56,399
the global grouping name to udp receiver

269
00:13:56,399 --> 00:13:57,680
grouping

270
00:13:57,680 --> 00:14:00,480
and made the port mandatory since there

271
00:14:00,480 --> 00:14:04,639
is no default jana port anymore

272
00:14:05,360 --> 00:14:08,480
next slide please

273
00:14:10,240 --> 00:14:14,560
we did some rephrasing on the

274
00:14:14,639 --> 00:14:15,600
max

275
00:14:15,600 --> 00:14:17,440
segment size uh

276
00:14:17,440 --> 00:14:18,720
leaf

277
00:14:18,720 --> 00:14:22,560
uh to include the options octets on

278
00:14:22,560 --> 00:14:25,519
on this uh on this lift

279
00:14:25,519 --> 00:14:27,600
and then lastly the

280
00:14:27,600 --> 00:14:32,639
the flag uh for enabling the ttls layer

281
00:14:32,639 --> 00:14:34,320
and the container

282
00:14:34,320 --> 00:14:36,560
with the dtls

283
00:14:36,560 --> 00:14:39,199
parameters

284
00:14:40,320 --> 00:14:44,120
next slide this

285
00:14:45,040 --> 00:14:47,120
uh we had

286
00:14:47,120 --> 00:14:50,560
one last request

287
00:14:51,680 --> 00:14:52,480
that

288
00:14:52,480 --> 00:14:56,320
it is to update the shim header version

289
00:14:56,320 --> 00:14:58,800
to allow at the collector uh

290
00:14:58,800 --> 00:15:02,800
receive different versions of udpnotif

291
00:15:02,800 --> 00:15:06,079
the one uh before it became a working

292
00:15:06,079 --> 00:15:09,120
group document and the current one

293
00:15:09,120 --> 00:15:13,440
so we addressed that by updating it

294
00:15:13,440 --> 00:15:16,399
next slide please

295
00:15:17,279 --> 00:15:20,480
and then uh since we

296
00:15:20,480 --> 00:15:22,399
haven't still

297
00:15:22,399 --> 00:15:24,800
checked on this yam module

298
00:15:24,800 --> 00:15:28,560
we did not address yet the examples

299
00:15:28,560 --> 00:15:29,360
but

300
00:15:29,360 --> 00:15:32,639
it's planned on our timeline to

301
00:15:32,639 --> 00:15:34,880
implement these examples and test it

302
00:15:34,880 --> 00:15:38,240
before put it on the

303
00:15:38,839 --> 00:15:43,199
draft um next slide please

304
00:15:43,279 --> 00:15:45,120
so yes that's it

305
00:15:45,120 --> 00:15:47,440
for the udp native and

306
00:15:47,440 --> 00:15:50,160
if you had any questions we

307
00:15:50,160 --> 00:15:53,880
the feedback is welcome

308
00:15:54,639 --> 00:15:57,839
just go ahead and

309
00:15:59,920 --> 00:16:01,839
yes um

310
00:16:01,839 --> 00:16:04,160
on slide eight you showed

311
00:16:04,160 --> 00:16:06,000
enable dtls

312
00:16:06,000 --> 00:16:07,680
boolean flag

313
00:16:07,680 --> 00:16:09,440
and then immediately underneath it the

314
00:16:09,440 --> 00:16:11,600
container can for the details

315
00:16:11,600 --> 00:16:12,880
configuration

316
00:16:12,880 --> 00:16:15,199
i think uh better would be to put make

317
00:16:15,199 --> 00:16:17,040
the container be a presence

318
00:16:17,040 --> 00:16:18,399
container

319
00:16:18,399 --> 00:16:23,839
and remove the enable dtls boolean leaf

320
00:16:25,360 --> 00:16:26,560
so

321
00:16:26,560 --> 00:16:30,399
okay so putting the leaf inside the

322
00:16:30,399 --> 00:16:33,279
a dtls container what you are asking

323
00:16:33,279 --> 00:16:34,320
right

324
00:16:34,320 --> 00:16:37,360
and no not not putting the leaf inside

325
00:16:37,360 --> 00:16:39,920
uh removing the leaf and instead making

326
00:16:39,920 --> 00:16:43,279
the container be a presence container

327
00:16:43,279 --> 00:16:46,240
so you add a descendant of note called

328
00:16:46,240 --> 00:16:48,399
presence

329
00:16:48,399 --> 00:16:52,639
ah okay okay okay let's see

330
00:16:52,639 --> 00:16:54,880
okay

331
00:16:55,600 --> 00:16:58,839
bin well

332
00:17:04,000 --> 00:17:06,480
hello alex so i'm born with less so i

333
00:17:06,480 --> 00:17:08,000
was tweeting your slide about secure

334
00:17:08,000 --> 00:17:09,760
networks and then i was reading your

335
00:17:09,760 --> 00:17:12,000
security consideration and just

336
00:17:12,000 --> 00:17:14,319
editorially uh you could be adding a

337
00:17:14,319 --> 00:17:16,799
reference to an rfc that i like which is

338
00:17:16,799 --> 00:17:18,880
about limited domains and internet

339
00:17:18,880 --> 00:17:22,559
protocols this rfc 8799 i'll be sending

340
00:17:22,559 --> 00:17:24,720
an email that explains why we need to

341
00:17:24,720 --> 00:17:26,559
make a distinction between something

342
00:17:26,559 --> 00:17:28,400
which is a control domain and something

343
00:17:28,400 --> 00:17:30,320
which is over the wild

344
00:17:30,320 --> 00:17:31,520
okay

345
00:17:31,520 --> 00:17:34,240
we will do that

346
00:17:40,400 --> 00:17:42,480
all right

347
00:17:42,480 --> 00:17:44,840
uh just one

348
00:17:44,840 --> 00:17:47,760
more uh so rob wilson cisco so just a

349
00:17:47,760 --> 00:17:50,720
quick question on the version change

350
00:17:50,720 --> 00:17:52,880
could you just explain again why that's

351
00:17:52,880 --> 00:17:54,320
being done so when you want this to go

352
00:17:54,320 --> 00:17:56,320
to rfc is the intention that you ship it

353
00:17:56,320 --> 00:17:58,320
with version one or you go back to

354
00:17:58,320 --> 00:17:59,679
version zero

355
00:17:59,679 --> 00:18:01,280
but i didn't quite know

356
00:18:01,280 --> 00:18:04,720
what we would like is to the rfc version

357
00:18:04,720 --> 00:18:07,360
would be the last the last version on

358
00:18:07,360 --> 00:18:09,679
the draft actually

359
00:18:09,679 --> 00:18:11,120
so it's to

360
00:18:11,120 --> 00:18:13,679
to allow the collector

361
00:18:13,679 --> 00:18:17,200
to collect the others versions of

362
00:18:17,200 --> 00:18:18,000
this

363
00:18:18,000 --> 00:18:20,400
already implemented draft

364
00:18:20,400 --> 00:18:21,679
okay

365
00:18:21,679 --> 00:18:22,640
um

366
00:18:22,640 --> 00:18:25,039
so is this an i am managed registry for

367
00:18:25,039 --> 00:18:28,880
these version numbers how's that managed

368
00:18:28,880 --> 00:18:32,320
right now i believe it's only on on the

369
00:18:32,320 --> 00:18:35,120
draft there is no jana on there

370
00:18:35,120 --> 00:18:37,200
but uh

371
00:18:37,200 --> 00:18:39,360
so i think it would be helpful to add a

372
00:18:39,360 --> 00:18:41,760
section on a consideration section there

373
00:18:41,760 --> 00:18:43,440
isn't one that says that that there'll

374
00:18:43,440 --> 00:18:45,120
be registry set up to manage those

375
00:18:45,120 --> 00:18:47,120
version numbers if you said if you can

376
00:18:47,120 --> 00:18:49,200
have a version that's shipped or

377
00:18:49,200 --> 00:18:50,559
effectively deployed already that's

378
00:18:50,559 --> 00:18:52,000
reserved i think that would be pretty

379
00:18:52,000 --> 00:18:54,240
quite helpful

380
00:18:54,240 --> 00:18:57,240
okay

381
00:19:06,720 --> 00:19:09,280
okay i guess we can move to distributed

382
00:19:09,280 --> 00:19:11,678
nordic

383
00:19:13,280 --> 00:19:15,120
yeah so also

384
00:19:15,120 --> 00:19:17,360
on behalf of the authors just a quick

385
00:19:17,360 --> 00:19:20,559
update on the last draft

386
00:19:20,559 --> 00:19:23,360
they published

387
00:19:23,360 --> 00:19:27,200
the next slide there's one only

388
00:19:27,200 --> 00:19:28,160
um

389
00:19:28,160 --> 00:19:28,420
so

390
00:19:28,420 --> 00:19:29,840
[Music]

391
00:19:29,840 --> 00:19:31,840
it

392
00:19:31,840 --> 00:19:35,840
hasn't any change on this draft actually

393
00:19:35,840 --> 00:19:37,520
and there are some

394
00:19:37,520 --> 00:19:40,720
corrected needs on the last version

395
00:19:40,720 --> 00:19:43,679
and the authors they believe that

396
00:19:43,679 --> 00:19:46,880
it is already really stable but

397
00:19:46,880 --> 00:19:48,480
that

398
00:19:48,480 --> 00:19:49,840
since the

399
00:19:49,840 --> 00:19:50,880
only

400
00:19:50,880 --> 00:19:53,600
reference to this draft is udp native

401
00:19:53,600 --> 00:19:55,919
they would like to wait for the udp

402
00:19:55,919 --> 00:19:57,919
native to be last core before

403
00:19:57,919 --> 00:20:00,960
thus calling this one

404
00:20:00,960 --> 00:20:05,320
and that would be it

405
00:20:08,240 --> 00:20:11,760
right um speaking as a contributor

406
00:20:11,760 --> 00:20:14,080
did you get and probably this applies

407
00:20:14,080 --> 00:20:16,240
more to your previous draft actually so

408
00:20:16,240 --> 00:20:18,080
did you get a chance to

409
00:20:18,080 --> 00:20:20,880
discuss with sean turner on

410
00:20:20,880 --> 00:20:23,520
yeah the dtls container

411
00:20:23,520 --> 00:20:27,200
for udp notif um not yet he

412
00:20:27,200 --> 00:20:29,200
and we will do that uh during the week

413
00:20:29,200 --> 00:20:30,159
of

414
00:20:30,159 --> 00:20:31,760
the ietf

415
00:20:31,760 --> 00:20:33,039
okay

416
00:20:33,039 --> 00:20:36,559
following that question would be

417
00:20:36,559 --> 00:20:39,440
considering that this is a security

418
00:20:39,440 --> 00:20:40,720
feature

419
00:20:40,720 --> 00:20:42,240
i guess we need

420
00:20:42,240 --> 00:20:44,559
to send the draft for

421
00:20:44,559 --> 00:20:47,600
a sector review

422
00:20:47,760 --> 00:20:49,760
so could you let us know when the

423
00:20:49,760 --> 00:20:52,400
document is ready for a sector review

424
00:20:52,400 --> 00:20:53,440
okay

425
00:20:53,440 --> 00:20:56,919
i will do that

426
00:21:09,679 --> 00:21:13,640
all right thanks alex

427
00:21:16,960 --> 00:21:19,960
um

428
00:21:31,120 --> 00:21:33,360
okay

429
00:21:33,600 --> 00:21:35,440
yeah good morning everyone yeah my name

430
00:21:35,440 --> 00:21:38,440
is

431
00:21:44,400 --> 00:21:45,840
good morning

432
00:21:45,840 --> 00:21:48,320
this is chinwu i want to talk about

433
00:21:48,320 --> 00:21:50,320
this pagination magazine for netcop and

434
00:21:50,320 --> 00:21:51,520
resconf

435
00:21:51,520 --> 00:21:52,320
so

436
00:21:52,320 --> 00:21:54,000
here we have three

437
00:21:54,000 --> 00:21:56,799
relevant jobs has just been adopted

438
00:21:56,799 --> 00:21:58,480
uh

439
00:21:58,480 --> 00:22:00,880
actually the name we listed here at

440
00:22:00,880 --> 00:22:03,039
uh the also this job that we actually

441
00:22:03,039 --> 00:22:05,039
from the design team so this is another

442
00:22:05,039 --> 00:22:08,320
thought that was in this job so i just

443
00:22:08,320 --> 00:22:09,840
want to pay

444
00:22:09,840 --> 00:22:10,559
so

445
00:22:10,559 --> 00:22:11,679
the

446
00:22:11,679 --> 00:22:13,440
update what we are doing what is this

447
00:22:13,440 --> 00:22:16,799
job about next

448
00:22:18,159 --> 00:22:20,960
so first motivation and goal actually

449
00:22:20,960 --> 00:22:22,720
what we propose is

450
00:22:22,720 --> 00:22:24,559
this pagination mechanism

451
00:22:24,559 --> 00:22:27,120
so traditional we use uh

452
00:22:27,120 --> 00:22:29,679
nano uh transitional user uh net net

453
00:22:29,679 --> 00:22:32,159
call for protocol like uh operation like

454
00:22:32,159 --> 00:22:34,640
uh get or get configured to do the data

455
00:22:34,640 --> 00:22:35,760
retriever

456
00:22:35,760 --> 00:22:38,240
but when you're facing large amount of

457
00:22:38,240 --> 00:22:40,799
uh data retriever actually especially

458
00:22:40,799 --> 00:22:43,120
applied to the list or leave list

459
00:22:43,120 --> 00:22:45,840
for from server side you may take a a

460
00:22:45,840 --> 00:22:48,480
long time to send this kind of data and

461
00:22:48,480 --> 00:22:51,360
when the interface between the uh for

462
00:22:51,360 --> 00:22:52,400
example net

463
00:22:52,400 --> 00:22:55,039
client and then not medical server

464
00:22:55,039 --> 00:22:56,000
uh

465
00:22:56,000 --> 00:22:57,760
they have a bandwidth

466
00:22:57,760 --> 00:22:58,559
uh

467
00:22:58,559 --> 00:23:00,960
constraint or results concentrated so

468
00:23:00,960 --> 00:23:03,120
this kind of latency you

469
00:23:03,120 --> 00:23:05,440
feel by the client will be

470
00:23:05,440 --> 00:23:06,480
even

471
00:23:06,480 --> 00:23:08,960
worse so from the client side actually

472
00:23:08,960 --> 00:23:10,799
they may need to consume

473
00:23:10,799 --> 00:23:11,919
more uh

474
00:23:11,919 --> 00:23:13,840
uh resource to

475
00:23:13,840 --> 00:23:17,600
uh to integrate this kind of data so

476
00:23:17,600 --> 00:23:20,480
uh our idea is you know uh

477
00:23:20,480 --> 00:23:22,400
to borrow some concept from

478
00:23:22,400 --> 00:23:23,760
uh circu

479
00:23:23,760 --> 00:23:26,880
s statement when you use to query some

480
00:23:26,880 --> 00:23:28,080
database

481
00:23:28,080 --> 00:23:29,520
so you can

482
00:23:29,520 --> 00:23:30,480
actually

483
00:23:30,480 --> 00:23:33,919
uh integrate the back-end system in

484
00:23:33,919 --> 00:23:36,799
in a server so you can use some kind of

485
00:23:36,799 --> 00:23:39,280
index mechanism to faster locate the

486
00:23:39,280 --> 00:23:41,520
data so this is

487
00:23:41,520 --> 00:23:42,799
the motivation

488
00:23:42,799 --> 00:23:44,240
for this worker

489
00:23:44,240 --> 00:23:47,679
try to you know quickly to

490
00:23:47,679 --> 00:23:50,559
query or locate the data using index

491
00:23:50,559 --> 00:23:53,360
magazine next

492
00:23:55,039 --> 00:23:57,360
so we have three relevant charts

493
00:23:57,360 --> 00:23:59,360
actually

494
00:23:59,360 --> 00:24:02,479
these three jobs actually

495
00:24:02,880 --> 00:24:04,960
related to each other actually the first

496
00:24:04,960 --> 00:24:07,200
one is the list of pagination medicine

497
00:24:07,200 --> 00:24:09,440
try to provide a generic

498
00:24:09,440 --> 00:24:12,480
mechanism and this can provide you to do

499
00:24:12,480 --> 00:24:14,080
the

500
00:24:14,080 --> 00:24:16,880
filtering or to do the sorting and

501
00:24:16,880 --> 00:24:19,279
retriever

502
00:24:19,279 --> 00:24:21,360
actually is the most applied to this

503
00:24:21,360 --> 00:24:23,760
list or leave list

504
00:24:23,760 --> 00:24:26,720
and we also provide the nanocop protocol

505
00:24:26,720 --> 00:24:28,240
extension and the rest com product

506
00:24:28,240 --> 00:24:30,320
extension

507
00:24:30,320 --> 00:24:31,679
so this

508
00:24:31,679 --> 00:24:34,559
the other two actually use the the first

509
00:24:34,559 --> 00:24:36,559
genetic mechanism as a basis

510
00:24:36,559 --> 00:24:38,799
next

511
00:24:39,360 --> 00:24:40,080
so

512
00:24:40,080 --> 00:24:42,320
first i want to introduce this

513
00:24:42,320 --> 00:24:45,679
pagination mechanism drafter so

514
00:24:45,679 --> 00:24:47,760
in this job actually we

515
00:24:47,760 --> 00:24:51,919
uh define uh six query parameters

516
00:24:51,919 --> 00:24:55,120
so as we uh you know uh clarified

517
00:24:55,120 --> 00:24:57,760
actually we tried to borrow concept from

518
00:24:57,760 --> 00:24:58,960
the circu

519
00:24:58,960 --> 00:25:01,200
statements that are used in the

520
00:25:01,200 --> 00:25:03,840
you know database query actually

521
00:25:03,840 --> 00:25:05,440
if we download select

522
00:25:05,440 --> 00:25:06,960
where these kind of

523
00:25:06,960 --> 00:25:09,360
semantics actually we introduce similar

524
00:25:09,360 --> 00:25:10,559
schematics

525
00:25:10,559 --> 00:25:11,440
here

526
00:25:11,440 --> 00:25:14,000
for example where this you can see this

527
00:25:14,000 --> 00:25:16,159
as a selection filter

528
00:25:16,159 --> 00:25:19,200
it can help you to filter the your

529
00:25:19,200 --> 00:25:22,559
interested result set and sort by

530
00:25:22,559 --> 00:25:24,400
you can see this actually it's kind of

531
00:25:24,400 --> 00:25:26,400
index node actually

532
00:25:26,400 --> 00:25:29,200
you can use this index node to

533
00:25:29,200 --> 00:25:32,159
quickly you know locate the the

534
00:25:32,159 --> 00:25:34,159
uh results center

535
00:25:34,159 --> 00:25:36,240
set entries

536
00:25:36,240 --> 00:25:38,720
and also we have direction

537
00:25:38,720 --> 00:25:42,080
to give you you know uh when you do the

538
00:25:42,080 --> 00:25:44,080
search or get it without the bank you

539
00:25:44,080 --> 00:25:46,640
need to know what is the order it could

540
00:25:46,640 --> 00:25:49,919
be dissident order or accident order

541
00:25:49,919 --> 00:25:52,400
and offset actually

542
00:25:52,400 --> 00:25:54,159
it allow you

543
00:25:54,159 --> 00:25:55,840
not from the first entry actually you

544
00:25:55,840 --> 00:25:58,720
can skip a several entry start from

545
00:25:58,720 --> 00:26:00,000
there and

546
00:26:00,000 --> 00:26:03,039
do the further query and limit you will

547
00:26:03,039 --> 00:26:04,000
tell you

548
00:26:04,000 --> 00:26:05,360
uh how many

549
00:26:05,360 --> 00:26:07,279
entries you can return

550
00:26:07,279 --> 00:26:08,960
in addition actually we introduced

551
00:26:08,960 --> 00:26:10,640
separatist

552
00:26:10,640 --> 00:26:11,679
limit

553
00:26:11,679 --> 00:26:13,840
this kind of parameter these are

554
00:26:13,840 --> 00:26:15,440
actually

555
00:26:15,440 --> 00:26:17,440
you know different from the limited

556
00:26:17,440 --> 00:26:19,919
parameters actually they only apply to

557
00:26:19,919 --> 00:26:22,960
child list or child leave list

558
00:26:22,960 --> 00:26:26,480
so they can help you to return

559
00:26:26,480 --> 00:26:28,960
the number of entry in the child list or

560
00:26:28,960 --> 00:26:30,000
leave list

561
00:26:30,000 --> 00:26:32,400
so we also you know provide a server

562
00:26:32,400 --> 00:26:34,240
processing order the first

563
00:26:34,240 --> 00:26:36,559
you need to process aware and then you

564
00:26:36,559 --> 00:26:39,360
process sort by direction offset and

565
00:26:39,360 --> 00:26:40,720
limit

566
00:26:40,720 --> 00:26:44,000
and uh also we actually introduce

567
00:26:44,000 --> 00:26:45,600
metadata

568
00:26:45,600 --> 00:26:47,039
attribute

569
00:26:47,039 --> 00:26:49,200
and we call the remaining

570
00:26:49,200 --> 00:26:50,080
so

571
00:26:50,080 --> 00:26:53,279
the idea is you know these

572
00:26:53,279 --> 00:26:55,279
remaining parameters will use we

573
00:26:55,279 --> 00:26:56,640
together with

574
00:26:56,640 --> 00:26:58,240
uh

575
00:26:58,240 --> 00:27:00,320
the limit or seven

576
00:27:00,320 --> 00:27:02,240
uh sublist limit

577
00:27:02,240 --> 00:27:03,039
uh

578
00:27:03,039 --> 00:27:05,440
actually it will tell you when you do

579
00:27:05,440 --> 00:27:06,559
the query

580
00:27:06,559 --> 00:27:09,679
you uh you may need to know

581
00:27:09,679 --> 00:27:11,200
uh how many

582
00:27:11,200 --> 00:27:12,240
uh

583
00:27:12,240 --> 00:27:14,720
engines are left left in the result

584
00:27:14,720 --> 00:27:17,520
entry without set actually so remaining

585
00:27:17,520 --> 00:27:19,600
will tell you that this kind of

586
00:27:19,600 --> 00:27:20,880
information

587
00:27:20,880 --> 00:27:23,200
next

588
00:27:23,840 --> 00:27:27,600
so here we'll give the example uh

589
00:27:27,600 --> 00:27:29,120
as we uh

590
00:27:29,120 --> 00:27:31,039
present actually we have six current

591
00:27:31,039 --> 00:27:32,559
parameter we

592
00:27:32,559 --> 00:27:34,159
use a combination of these six

593
00:27:34,159 --> 00:27:36,320
parameters in a request response

594
00:27:36,320 --> 00:27:39,039
to guide how list and data list

595
00:27:39,039 --> 00:27:41,039
can be returned actually

596
00:27:41,039 --> 00:27:42,799
uh we have a

597
00:27:42,799 --> 00:27:45,440
job actually yeah this uh

598
00:27:45,440 --> 00:27:46,320
yeah

599
00:27:46,320 --> 00:27:48,240
the job that you you can see the

600
00:27:48,240 --> 00:27:50,480
appendix they have uh

601
00:27:50,480 --> 00:27:51,440
um

602
00:27:51,440 --> 00:27:54,000
example module so they will tell you the

603
00:27:54,000 --> 00:27:55,600
schema so in

604
00:27:55,600 --> 00:27:56,559
the

605
00:27:56,559 --> 00:27:58,159
left actually in the request that we

606
00:27:58,159 --> 00:27:59,120
actually

607
00:27:59,120 --> 00:28:02,399
uh we have we actually uh

608
00:28:02,399 --> 00:28:04,880
you know focus on specific list that we

609
00:28:04,880 --> 00:28:07,279
call the member so the member is kind of

610
00:28:07,279 --> 00:28:09,600
is defined as the list actually it

611
00:28:09,600 --> 00:28:13,520
under the members container so

612
00:28:13,520 --> 00:28:16,240
we use where to do the selection filter

613
00:28:16,240 --> 00:28:17,679
and sort by

614
00:28:17,679 --> 00:28:20,240
you can see this uh you know as an index

615
00:28:20,240 --> 00:28:23,840
node so member id is the index

616
00:28:23,840 --> 00:28:26,799
node actually so we also set direction

617
00:28:26,799 --> 00:28:28,320
actually it's kind of

618
00:28:28,320 --> 00:28:31,520
dissident order and uh offset uh so you

619
00:28:31,520 --> 00:28:33,760
you know start from the second entry and

620
00:28:33,760 --> 00:28:34,880
then you

621
00:28:34,880 --> 00:28:36,080
uh

622
00:28:36,080 --> 00:28:38,399
uh the limit will tell you you know from

623
00:28:38,399 --> 00:28:41,039
the second entry you'll get a you know

624
00:28:41,039 --> 00:28:44,159
uh two two entries so start from second

625
00:28:44,159 --> 00:28:45,200
and s

626
00:28:45,200 --> 00:28:46,320
and three

627
00:28:46,320 --> 00:28:49,120
so this uh two entry so you can see this

628
00:28:49,120 --> 00:28:50,480
kind of example

629
00:28:50,480 --> 00:28:52,799
next

630
00:28:54,000 --> 00:28:55,760
so uh for

631
00:28:55,760 --> 00:28:58,640
remaining actually we as we have

632
00:28:58,640 --> 00:28:59,600
actually

633
00:28:59,600 --> 00:29:01,600
applied to the dissident list or leave

634
00:29:01,600 --> 00:29:02,799
list

635
00:29:02,799 --> 00:29:05,440
so we give example to compare

636
00:29:05,440 --> 00:29:07,360
you know when we use the

637
00:29:07,360 --> 00:29:08,720
remaining

638
00:29:08,720 --> 00:29:10,080
uh

639
00:29:10,080 --> 00:29:12,960
when you use a sublist limit

640
00:29:12,960 --> 00:29:15,600
or when you not use a sublist limit with

641
00:29:15,600 --> 00:29:18,000
a sublist limit

642
00:29:18,000 --> 00:29:20,399
setup

643
00:29:20,880 --> 00:29:22,799
onset actually you can see actually you

644
00:29:22,799 --> 00:29:25,600
can return the whole results actually

645
00:29:25,600 --> 00:29:28,640
it will return the the

646
00:29:28,640 --> 00:29:30,080
the total

647
00:29:30,080 --> 00:29:32,240
uh entry inner result set but uh when

648
00:29:32,240 --> 00:29:33,520
you set a

649
00:29:33,520 --> 00:29:35,760
sub limit uh parameter

650
00:29:35,760 --> 00:29:38,159
for example you set a submit parameter

651
00:29:38,159 --> 00:29:41,440
one actually you only return one entry

652
00:29:41,440 --> 00:29:42,159
but

653
00:29:42,159 --> 00:29:44,320
they also tell you for example you the

654
00:29:44,320 --> 00:29:46,159
total you have

655
00:29:46,159 --> 00:29:49,360
uh five entry and you return one entry

656
00:29:49,360 --> 00:29:50,960
the remaining one is

657
00:29:50,960 --> 00:29:54,080
four entry so it will so this remaining

658
00:29:54,080 --> 00:29:57,039
will tell you how many entries are left

659
00:29:57,039 --> 00:30:01,120
uh in the result set

660
00:30:01,120 --> 00:30:03,439
next

661
00:30:04,320 --> 00:30:06,320
uh we also

662
00:30:06,320 --> 00:30:08,399
define the server list pagination

663
00:30:08,399 --> 00:30:11,440
constructed discovery this is the most

664
00:30:11,440 --> 00:30:13,360
actually only applied to the config

665
00:30:13,360 --> 00:30:16,159
force list or leave list

666
00:30:16,159 --> 00:30:18,399
since the inter action with their

667
00:30:18,399 --> 00:30:20,480
content may be limited

668
00:30:20,480 --> 00:30:22,960
so you can see actually we

669
00:30:22,960 --> 00:30:26,000
organ from the system capability

670
00:30:26,000 --> 00:30:28,960
module which has already the rfc

671
00:30:28,960 --> 00:30:29,760
and

672
00:30:29,760 --> 00:30:32,080
we introduced two parameters one is

673
00:30:32,080 --> 00:30:34,799
concentrate the second index

674
00:30:34,799 --> 00:30:37,279
the country that will tell you uh

675
00:30:37,279 --> 00:30:38,799
uh which

676
00:30:38,799 --> 00:30:39,600
uh

677
00:30:39,600 --> 00:30:41,120
config force

678
00:30:41,120 --> 00:30:43,360
node uh constraint actually

679
00:30:43,360 --> 00:30:45,520
uh index actually

680
00:30:45,520 --> 00:30:47,440
uh you know is uh

681
00:30:47,440 --> 00:30:49,360
uh used together with concentrate when

682
00:30:49,360 --> 00:30:52,320
you set a constraint and you can say

683
00:30:52,320 --> 00:30:54,000
well

684
00:30:54,000 --> 00:30:57,120
it will tell you which node can be

685
00:30:57,120 --> 00:30:58,960
used in the where or solved by the

686
00:30:58,960 --> 00:31:02,000
expression so here we give the example

687
00:31:02,000 --> 00:31:03,840
in addition for this uh

688
00:31:03,840 --> 00:31:06,720
uh construct discovery actually we allow

689
00:31:06,720 --> 00:31:09,120
more uh extensibility for concentrated

690
00:31:09,120 --> 00:31:10,240
parameter

691
00:31:10,240 --> 00:31:12,559
uh so you can add uh

692
00:31:12,559 --> 00:31:14,399
besides the concentrate and index two

693
00:31:14,399 --> 00:31:16,080
parameter we can introduce some other

694
00:31:16,080 --> 00:31:17,840
parameters so give some example for

695
00:31:17,840 --> 00:31:18,799
example

696
00:31:18,799 --> 00:31:20,399
you may be

697
00:31:20,399 --> 00:31:22,480
not supported 100

698
00:31:22,480 --> 00:31:25,360
x pass 1.0 syntax

699
00:31:25,360 --> 00:31:26,720
so you can add

700
00:31:26,720 --> 00:31:29,679
some other parameter here

701
00:31:29,679 --> 00:31:30,559
yeah

702
00:31:30,559 --> 00:31:33,360
next

703
00:31:33,360 --> 00:31:34,240
so

704
00:31:34,240 --> 00:31:35,919
second job is a net call product

705
00:31:35,919 --> 00:31:39,200
extension next

706
00:31:39,760 --> 00:31:43,200
so in this job actually we uh provided

707
00:31:43,200 --> 00:31:45,600
two extensions the first is we augment

708
00:31:45,600 --> 00:31:46,399
the

709
00:31:46,399 --> 00:31:49,519
three and net club rpc statements

710
00:31:49,519 --> 00:31:50,880
uh

711
00:31:50,880 --> 00:31:54,000
state get and get config and get data

712
00:31:54,000 --> 00:31:56,559
and also we align with the list

713
00:31:56,559 --> 00:31:58,799
pagination chart for query parameter you

714
00:31:58,799 --> 00:32:01,760
can see all these query parameters

715
00:32:01,760 --> 00:32:04,399
actually has been

716
00:32:04,399 --> 00:32:06,159
put

717
00:32:06,159 --> 00:32:08,960
here actually to try to align with

718
00:32:08,960 --> 00:32:12,399
this paginating maximum job

719
00:32:12,840 --> 00:32:16,000
next so we gave the example how it

720
00:32:16,000 --> 00:32:18,159
looked like when you use

721
00:32:18,159 --> 00:32:19,760
this pagination then called protocol

722
00:32:19,760 --> 00:32:20,880
extension

723
00:32:20,880 --> 00:32:21,600
so

724
00:32:21,600 --> 00:32:23,200
similar to

725
00:32:23,200 --> 00:32:25,919
uh like example in this pagination

726
00:32:25,919 --> 00:32:27,679
magazine draft actually

727
00:32:27,679 --> 00:32:28,480
you

728
00:32:28,480 --> 00:32:29,519
use a

729
00:32:29,519 --> 00:32:31,919
combination of all query parameters in a

730
00:32:31,919 --> 00:32:34,960
request and a response and you can

731
00:32:34,960 --> 00:32:36,960
uh you know

732
00:32:36,960 --> 00:32:39,039
to get the the

733
00:32:39,039 --> 00:32:40,640
the interesting entry you you really

734
00:32:40,640 --> 00:32:42,399
want to

735
00:32:42,399 --> 00:32:44,240
retrieve actually use

736
00:32:44,240 --> 00:32:46,000
this current parameter as some

737
00:32:46,000 --> 00:32:49,679
constraint or as some filter

738
00:32:49,679 --> 00:32:52,000
next

739
00:32:53,440 --> 00:32:55,679
so second job is the rascon protocol

740
00:32:55,679 --> 00:32:57,200
extension next

741
00:32:57,200 --> 00:32:59,279
so we introduce three protocol

742
00:32:59,279 --> 00:33:01,760
extensions the first one is that we add

743
00:33:01,760 --> 00:33:03,440
a list and leave list as a valid

744
00:33:03,440 --> 00:33:04,880
resource target

745
00:33:04,880 --> 00:33:07,360
for get actually most of these

746
00:33:07,360 --> 00:33:11,840
this pagination focus on you know uh

747
00:33:12,240 --> 00:33:14,159
data retriever you know focus on reader

748
00:33:14,159 --> 00:33:16,480
information but also we actually allow

749
00:33:16,480 --> 00:33:18,720
you know this can be applied to the

750
00:33:18,720 --> 00:33:20,640
delete operation so in the right way

751
00:33:20,640 --> 00:33:21,519
give

752
00:33:21,519 --> 00:33:25,679
example uh how to you know uh

753
00:33:25,679 --> 00:33:28,320
to delete the whole entry

754
00:33:28,320 --> 00:33:30,159
uh in the list

755
00:33:30,159 --> 00:33:32,480
using the delete operation the second we

756
00:33:32,480 --> 00:33:35,519
added new material type we call the

757
00:33:35,519 --> 00:33:37,840
application that slash

758
00:33:37,840 --> 00:33:41,120
dash data plus xml list

759
00:33:41,120 --> 00:33:43,600
last we added six new parameters similar

760
00:33:43,600 --> 00:33:44,720
to

761
00:33:44,720 --> 00:33:48,720
the net code vertical exchange in draft

762
00:33:49,200 --> 00:33:52,640
that's all next

763
00:33:52,640 --> 00:33:54,960
so here we give the status update of

764
00:33:54,960 --> 00:33:56,240
this

765
00:33:56,240 --> 00:33:59,279
job that we have three jobs actually

766
00:33:59,279 --> 00:34:00,399
so we can

767
00:34:00,399 --> 00:34:02,720
see the history of this job we started

768
00:34:02,720 --> 00:34:04,640
from

769
00:34:04,640 --> 00:34:07,200
last year november actually in

770
00:34:07,200 --> 00:34:10,480
uh 100 herald we presented these three

771
00:34:10,480 --> 00:34:11,440
jobs

772
00:34:11,440 --> 00:34:13,839
uh actually on behalf of the design team

773
00:34:13,839 --> 00:34:14,719
and

774
00:34:14,719 --> 00:34:15,679
we

775
00:34:15,679 --> 00:34:16,719
uh

776
00:34:16,719 --> 00:34:18,480
actually introduced the motivation goal

777
00:34:18,480 --> 00:34:21,599
and also solution and also we designed

778
00:34:21,599 --> 00:34:23,520
him discussed

779
00:34:23,520 --> 00:34:26,239
found two open issue and so we

780
00:34:26,239 --> 00:34:28,560
brought up for discussion and

781
00:34:28,560 --> 00:34:30,000
later on

782
00:34:30,000 --> 00:34:33,119
after ita 110 we

783
00:34:33,119 --> 00:34:36,079
uh actually try to uh close these two

784
00:34:36,079 --> 00:34:38,320
open issues so raise the the discussion

785
00:34:38,320 --> 00:34:40,239
on the list one is focus on cursor

786
00:34:40,239 --> 00:34:41,199
support

787
00:34:41,199 --> 00:34:44,159
uh so this cursor related to the index

788
00:34:44,159 --> 00:34:45,440
uh and we

789
00:34:45,440 --> 00:34:47,599
come up with a solution the second one

790
00:34:47,599 --> 00:34:51,040
is a remaining annotation this also gets

791
00:34:51,040 --> 00:34:52,719
discussed on the list and we come up

792
00:34:52,719 --> 00:34:54,879
with solution and we get some feedback

793
00:34:54,879 --> 00:34:55,760
from

794
00:34:55,760 --> 00:34:58,079
winning neptune from pbf

795
00:34:58,079 --> 00:35:01,359
and we actually reach agreement on the

796
00:35:01,359 --> 00:35:04,400
the change what the solution looks like

797
00:35:04,400 --> 00:35:05,760
and uh

798
00:35:05,760 --> 00:35:08,800
uh also in uh february

799
00:35:08,800 --> 00:35:10,480
10 uh

800
00:35:10,480 --> 00:35:12,560
in this year actually we confirm all the

801
00:35:12,560 --> 00:35:14,480
change actually

802
00:35:14,480 --> 00:35:15,359
and

803
00:35:15,359 --> 00:35:17,839
make sure we resolve these two open

804
00:35:17,839 --> 00:35:19,839
issue so the chair

805
00:35:19,839 --> 00:35:21,280
actually uh

806
00:35:21,280 --> 00:35:23,760
uh helped to initiate the covert option

807
00:35:23,760 --> 00:35:26,480
for this work so we got a quite a lot of

808
00:35:26,480 --> 00:35:28,640
review from andy chovang

809
00:35:28,640 --> 00:35:31,640
and

810
00:35:33,760 --> 00:35:36,560
and also actually there are two issues

811
00:35:36,560 --> 00:35:37,440
actually

812
00:35:37,440 --> 00:35:40,320
uh discussed one is related to the edit

813
00:35:40,320 --> 00:35:41,359
operation

814
00:35:41,359 --> 00:35:43,280
extension actually this is most you know

815
00:35:43,280 --> 00:35:45,760
applied to the delete operation

816
00:35:45,760 --> 00:35:47,440
so whether this should be in the scope

817
00:35:47,440 --> 00:35:49,760
so it would suggest actually

818
00:35:49,760 --> 00:35:52,000
say this can be addressed after working

819
00:35:52,000 --> 00:35:54,160
with uh

820
00:35:54,160 --> 00:35:55,599
adoption

821
00:35:55,599 --> 00:35:56,560
uh

822
00:35:56,560 --> 00:35:58,880
after working to adopt this job

823
00:35:58,880 --> 00:36:00,960
the second one is uh

824
00:36:00,960 --> 00:36:02,720
uh really you know we

825
00:36:02,720 --> 00:36:03,680
uh

826
00:36:03,680 --> 00:36:06,560
the nanocop actually has a lot of uh

827
00:36:06,560 --> 00:36:07,359
uh

828
00:36:07,359 --> 00:36:10,079
workload actually client server so this

829
00:36:10,079 --> 00:36:13,040
so what i'm suggesting is uh you know

830
00:36:13,040 --> 00:36:15,119
push it back a little bit for adoption

831
00:36:15,119 --> 00:36:17,440
and before moving forward and getting

832
00:36:17,440 --> 00:36:20,320
client server uh progress actually now

833
00:36:20,320 --> 00:36:23,200
actually we see the client server job

834
00:36:23,200 --> 00:36:26,160
already you know uh adjust all the

835
00:36:26,160 --> 00:36:27,280
issues

836
00:36:27,280 --> 00:36:29,520
and uh so we

837
00:36:29,520 --> 00:36:31,839
so this job get adopted so that's our

838
00:36:31,839 --> 00:36:33,200
kernel status

839
00:36:33,200 --> 00:36:35,440
and uh

840
00:36:35,440 --> 00:36:36,240
we

841
00:36:36,240 --> 00:36:37,599
think that's

842
00:36:37,599 --> 00:36:41,839
all we have we are very

843
00:36:42,480 --> 00:36:44,320
actually look for more comments and

844
00:36:44,320 --> 00:36:47,119
review on this worker to help her to

845
00:36:47,119 --> 00:36:48,960
improve this work

846
00:36:48,960 --> 00:36:50,480
and

847
00:36:50,480 --> 00:36:52,720
next

848
00:36:53,280 --> 00:36:56,560
so comments questions

849
00:37:04,960 --> 00:37:06,280
hello my name

850
00:37:06,280 --> 00:37:09,440
is interesting and important work but i

851
00:37:09,440 --> 00:37:11,760
have a few comments

852
00:37:11,760 --> 00:37:13,599
one it is

853
00:37:13,599 --> 00:37:17,520
not required currently that the server

854
00:37:17,520 --> 00:37:20,720
keeps a stable order of sorting between

855
00:37:20,720 --> 00:37:21,680
times

856
00:37:21,680 --> 00:37:22,800
so

857
00:37:22,800 --> 00:37:25,359
directly every millisecond you could

858
00:37:25,359 --> 00:37:28,800
change the order of your list

859
00:37:28,800 --> 00:37:31,040
you should address this

860
00:37:31,040 --> 00:37:32,560
the second is that

861
00:37:32,560 --> 00:37:34,720
uh sorting is

862
00:37:34,720 --> 00:37:37,040
in some cases very complicated if you

863
00:37:37,040 --> 00:37:40,560
think about sorting alphabetically

864
00:37:40,560 --> 00:37:41,520
in

865
00:37:41,520 --> 00:37:44,160
some european languages the o with two

866
00:37:44,160 --> 00:37:45,200
dots

867
00:37:45,200 --> 00:37:48,000
is after the simple o sometimes it's

868
00:37:48,000 --> 00:37:49,359
after zed

869
00:37:49,359 --> 00:37:51,839
or how do you sort the

870
00:37:51,839 --> 00:37:54,560
of a string where some of the names are

871
00:37:54,560 --> 00:37:57,280
chinese with chinese characters some of

872
00:37:57,280 --> 00:37:59,280
them are europeans

873
00:37:59,280 --> 00:38:00,800
the third is

874
00:38:00,800 --> 00:38:04,240
what how does this work if the expat

875
00:38:04,240 --> 00:38:06,880
filters resulted let's say two lists

876
00:38:06,880 --> 00:38:09,280
selected not one single list but two

877
00:38:09,280 --> 00:38:10,400
lists

878
00:38:10,400 --> 00:38:11,280
then

879
00:38:11,280 --> 00:38:13,520
yeah how does that work thank you

880
00:38:13,520 --> 00:38:16,720
yeah good comments actually yeah i think

881
00:38:16,720 --> 00:38:19,040
yeah we will uh

882
00:38:19,040 --> 00:38:21,119
try to come up with a solution here i

883
00:38:21,119 --> 00:38:22,960
think this is a very good uh comments

884
00:38:22,960 --> 00:38:24,320
actually we

885
00:38:24,320 --> 00:38:26,960
have the base base work actually

886
00:38:26,960 --> 00:38:29,200
but uh the the use case you raised

887
00:38:29,200 --> 00:38:30,640
actually you have two lists that is

888
00:38:30,640 --> 00:38:33,040
complicated we need to figure out how to

889
00:38:33,040 --> 00:38:34,160
address this

890
00:38:34,160 --> 00:38:38,000
yeah yeah thank you for the comments

891
00:38:38,800 --> 00:38:41,680
so before john uh you come on this mike

892
00:38:41,680 --> 00:38:44,480
i just want to a quick reminder

893
00:38:44,480 --> 00:38:45,359
do

894
00:38:45,359 --> 00:38:47,200
contribute to the notes

895
00:38:47,200 --> 00:38:49,119
and the meeting page

896
00:38:49,119 --> 00:38:52,000
especially if you're asking a question

897
00:38:52,000 --> 00:38:53,520
to help

898
00:38:53,520 --> 00:38:55,680
improve the notes

899
00:38:55,680 --> 00:38:56,800
continue

900
00:38:56,800 --> 00:38:58,560
thanks i'm john o'brien uh thanks for

901
00:38:58,560 --> 00:39:00,320
doing this work

902
00:39:00,320 --> 00:39:02,720
a couple of minor comments on the choice

903
00:39:02,720 --> 00:39:03,920
of keywords

904
00:39:03,920 --> 00:39:05,920
i would suggest

905
00:39:05,920 --> 00:39:08,640
preferring uh keywords that are already

906
00:39:08,640 --> 00:39:10,320
going to be familiar to implementers and

907
00:39:10,320 --> 00:39:12,800
operators specifically instead of sort

908
00:39:12,800 --> 00:39:15,440
by i would suggest order by

909
00:39:15,440 --> 00:39:17,680
and for the direction i would suggest

910
00:39:17,680 --> 00:39:20,560
defaulting to ascending and descending

911
00:39:20,560 --> 00:39:22,320
and i admit that i have mixed feelings

912
00:39:22,320 --> 00:39:24,320
about having alternate keywords that

913
00:39:24,320 --> 00:39:25,839
mean the same thing

914
00:39:25,839 --> 00:39:28,000
yeah thank you for raising comments

915
00:39:28,000 --> 00:39:30,240
actually in the design team we actually

916
00:39:30,240 --> 00:39:31,920
back force to discuss the water

917
00:39:31,920 --> 00:39:33,440
termination terminology will be

918
00:39:33,440 --> 00:39:36,320
appropriate actually we do use

919
00:39:36,320 --> 00:39:39,280
you know autobio before and also

920
00:39:39,280 --> 00:39:40,640
and for

921
00:39:40,640 --> 00:39:43,040
direction actually used as a dissident

922
00:39:43,040 --> 00:39:44,079
but

923
00:39:44,079 --> 00:39:44,800
some

924
00:39:44,800 --> 00:39:46,800
uh design team member actually i

925
00:39:46,800 --> 00:39:48,560
remember remember correctly is per

926
00:39:48,560 --> 00:39:51,040
actually he suggests we use some other

927
00:39:51,040 --> 00:39:52,640
terminology but i think it's a good

928
00:39:52,640 --> 00:39:54,160
comment so we will see how do you you

929
00:39:54,160 --> 00:39:57,839
know reach agreement on this thank you

930
00:40:03,280 --> 00:40:06,480
uh robertson cisco is a contributor um

931
00:40:06,480 --> 00:40:08,000
so one thing i want to understand is the

932
00:40:08,000 --> 00:40:10,960
sort of performance impacts of this

933
00:40:10,960 --> 00:40:13,440
where you do like a filter and then a

934
00:40:13,440 --> 00:40:14,400
sort

935
00:40:14,400 --> 00:40:17,040
and then you return a subset of the data

936
00:40:17,040 --> 00:40:19,440
then when you get a subsequent request

937
00:40:19,440 --> 00:40:21,359
is the server going to maintain any

938
00:40:21,359 --> 00:40:23,280
state for that or will they have to

939
00:40:23,280 --> 00:40:24,480
effectively

940
00:40:24,480 --> 00:40:27,200
re refill to resort to get the next

941
00:40:27,200 --> 00:40:28,400
batch of

942
00:40:28,400 --> 00:40:30,480
um data to return because

943
00:40:30,480 --> 00:40:32,400
certain had a large list that could be

944
00:40:32,400 --> 00:40:34,480
quite expensive to do that calculation

945
00:40:34,480 --> 00:40:35,680
many times

946
00:40:35,680 --> 00:40:37,599
yeah so is that i don't know i haven't

947
00:40:37,599 --> 00:40:38,880
read the draft close enough to know

948
00:40:38,880 --> 00:40:41,119
that's a potential issue or not

949
00:40:41,119 --> 00:40:42,480
and again i don't really know the

950
00:40:42,480 --> 00:40:44,240
databases where their cursor mechanism

951
00:40:44,240 --> 00:40:45,520
whether they

952
00:40:45,520 --> 00:40:47,440
affect their cursors maintain that state

953
00:40:47,440 --> 00:40:50,160
to avoid that issue but i don't know

954
00:40:50,160 --> 00:40:52,880
yeah we are struggling whether we

955
00:40:52,880 --> 00:40:55,520
should define this as a stable stable

956
00:40:55,520 --> 00:40:58,319
mechanism so i think yeah we can think

957
00:40:58,319 --> 00:41:00,079
about that and see

958
00:41:00,079 --> 00:41:01,760
whether we need to cover this kind of

959
00:41:01,760 --> 00:41:02,800
case uh

960
00:41:02,800 --> 00:41:05,280
how you address this uh yeah

961
00:41:05,280 --> 00:41:07,839
thank you

962
00:41:11,200 --> 00:41:13,680
tall people jeff has um

963
00:41:13,680 --> 00:41:16,319
so balaj and rob have both hit two of

964
00:41:16,319 --> 00:41:18,560
the points that i've talked about which

965
00:41:18,560 --> 00:41:20,880
is the stability of the stored orders

966
00:41:20,880 --> 00:41:22,800
especially if you're using an offset as

967
00:41:22,800 --> 00:41:24,880
you know the next entry you know if the

968
00:41:24,880 --> 00:41:26,560
entries are constantly changing that

969
00:41:26,560 --> 00:41:28,400
offset becomes meaningless the second

970
00:41:28,400 --> 00:41:30,160
time you come around to your you know

971
00:41:30,160 --> 00:41:31,599
display this thing

972
00:41:31,599 --> 00:41:33,440
the usual workaround for this sort of

973
00:41:33,440 --> 00:41:35,359
problem is that you keep track of the

974
00:41:35,359 --> 00:41:37,200
last key displayed

975
00:41:37,200 --> 00:41:38,800
and as long as you have a stable sort

976
00:41:38,800 --> 00:41:41,119
order show me the entries that are after

977
00:41:41,119 --> 00:41:43,599
this as my cursor is the thing that

978
00:41:43,599 --> 00:41:45,599
generically works in most mechanisms so

979
00:41:45,599 --> 00:41:48,640
you may wish to consider that

980
00:41:48,640 --> 00:41:51,040
somewhat towards rob's point a way to

981
00:41:51,040 --> 00:41:52,319
maybe

982
00:41:52,319 --> 00:41:54,480
choose to think about this is

983
00:41:54,480 --> 00:41:57,040
rather than having the queries run over

984
00:41:57,040 --> 00:41:58,560
and over again

985
00:41:58,560 --> 00:42:00,960
an option not a mandatory one that you

986
00:42:00,960 --> 00:42:03,599
should consider is the ability to

987
00:42:03,599 --> 00:42:06,640
request a stable snapshot to be taken

988
00:42:06,640 --> 00:42:08,319
for the data in question

989
00:42:08,319 --> 00:42:10,240
so and then you pass in

990
00:42:10,240 --> 00:42:12,240
some sort of identifier to resume a

991
00:42:12,240 --> 00:42:15,119
specific walk on a specific set of data

992
00:42:15,119 --> 00:42:16,640
this way you can actually do the work

993
00:42:16,640 --> 00:42:19,440
once maybe save it to a file temporarily

994
00:42:19,440 --> 00:42:21,040
and you can resume your snapshot within

995
00:42:21,040 --> 00:42:23,119
that file now the problem that you have

996
00:42:23,119 --> 00:42:24,960
with that is sometimes the data set is

997
00:42:24,960 --> 00:42:26,160
so large or there's not enough

998
00:42:26,160 --> 00:42:27,839
persistent storage available to do this

999
00:42:27,839 --> 00:42:29,920
sort of thing so it can't be a mandatory

1000
00:42:29,920 --> 00:42:30,960
thing

1001
00:42:30,960 --> 00:42:32,800
yeah good comments yes thank you we'll

1002
00:42:32,800 --> 00:42:35,359
consider that

1003
00:42:38,480 --> 00:42:39,920
okay yeah

1004
00:42:39,920 --> 00:42:43,119
we don't have anybody else in the queue

1005
00:42:43,119 --> 00:42:45,200
so continue the discussion on the

1006
00:42:45,200 --> 00:42:48,160
mailing list thank you

1007
00:42:50,319 --> 00:42:52,800
so with that i think we can move to the

1008
00:42:52,800 --> 00:42:56,520
non-chartered items

1009
00:43:07,599 --> 00:43:09,520
all right go ahead yen

1010
00:43:09,520 --> 00:43:12,759
good morning

1011
00:43:13,200 --> 00:43:16,799
so we can flip to the next page

1012
00:43:17,040 --> 00:43:19,200
so i just wanted to give a brief update

1013
00:43:19,200 --> 00:43:20,000
about

1014
00:43:20,000 --> 00:43:23,040
this netcom transaction id work that's

1015
00:43:23,040 --> 00:43:26,319
been going on here

1016
00:43:26,319 --> 00:43:28,800
basically there are two additions since

1017
00:43:28,800 --> 00:43:30,000
last

1018
00:43:30,000 --> 00:43:32,720
technical editions one is about

1019
00:43:32,720 --> 00:43:35,440
last modified transaction id mechanism

1020
00:43:35,440 --> 00:43:38,240
something that we used to have in the

1021
00:43:38,240 --> 00:43:41,440
in the draft works before i published it

1022
00:43:41,440 --> 00:43:43,760
that i removed in the end but now it's

1023
00:43:43,760 --> 00:43:46,240
i've added it back because of popular

1024
00:43:46,240 --> 00:43:47,760
demand

1025
00:43:47,760 --> 00:43:50,160
and also some integration with yang push

1026
00:43:50,160 --> 00:43:51,520
so that

1027
00:43:51,520 --> 00:43:52,560
uh

1028
00:43:52,560 --> 00:43:55,359
yang pushed together with transaction db

1029
00:43:55,359 --> 00:43:58,240
both become better

1030
00:43:58,240 --> 00:44:00,400
and i will go through those two points

1031
00:44:00,400 --> 00:44:02,720
on slides a little bit but we can go to

1032
00:44:02,720 --> 00:44:04,640
the next slide first

1033
00:44:04,640 --> 00:44:07,280
so most of the work in the o2 rev of

1034
00:44:07,280 --> 00:44:08,560
this document

1035
00:44:08,560 --> 00:44:12,160
has been to clarify and extend

1036
00:44:12,160 --> 00:44:14,480
the text to be more clear about the

1037
00:44:14,480 --> 00:44:17,680
concepts here so i made a few

1038
00:44:17,680 --> 00:44:19,520
changes of terms

1039
00:44:19,520 --> 00:44:21,119
i've added more clarification about the

1040
00:44:21,119 --> 00:44:23,680
candidate data store

1041
00:44:23,680 --> 00:44:26,480
we have discussed

1042
00:44:26,480 --> 00:44:28,880
or introduced better diagrams for

1043
00:44:28,880 --> 00:44:31,839
the message flow

1044
00:44:31,839 --> 00:44:32,880
and

1045
00:44:32,880 --> 00:44:36,240
improved the examples we've changed from

1046
00:44:36,240 --> 00:44:38,240
itf interfaces to active access control

1047
00:44:38,240 --> 00:44:40,240
as an example because some people

1048
00:44:40,240 --> 00:44:42,160
found itf interface to be confusing in

1049
00:44:42,160 --> 00:44:43,920
this context

1050
00:44:43,920 --> 00:44:44,720
uh

1051
00:44:44,720 --> 00:44:47,040
provided a more specific list about x

1052
00:44:47,040 --> 00:44:50,160
paths to the places where these

1053
00:44:50,160 --> 00:44:51,839
additional

1054
00:44:51,839 --> 00:44:55,359
attributes can be found and can be added

1055
00:44:55,359 --> 00:44:58,880
just to make it easier and clearer

1056
00:44:58,880 --> 00:45:01,599
next slide please

1057
00:45:02,319 --> 00:45:04,640
so if you remember i will just very

1058
00:45:04,640 --> 00:45:06,960
briefly touch on what this transaction

1059
00:45:06,960 --> 00:45:08,720
id is about

1060
00:45:08,720 --> 00:45:10,000
uh

1061
00:45:10,000 --> 00:45:11,920
it's let's say one of the problems that

1062
00:45:11,920 --> 00:45:13,359
we're trying to solve here is that when

1063
00:45:13,359 --> 00:45:15,359
the client is getting

1064
00:45:15,359 --> 00:45:17,119
the configuration from the server

1065
00:45:17,119 --> 00:45:18,480
sometimes it wants to get the full

1066
00:45:18,480 --> 00:45:20,079
configuration but sometimes it only

1067
00:45:20,079 --> 00:45:21,920
wants to know if things have changed or

1068
00:45:21,920 --> 00:45:22,800
not

1069
00:45:22,800 --> 00:45:24,480
so it would be convenient if we don't

1070
00:45:24,480 --> 00:45:26,000
have to

1071
00:45:26,000 --> 00:45:28,480
get the config and get it again and see

1072
00:45:28,480 --> 00:45:30,480
then try to compare and see is this the

1073
00:45:30,480 --> 00:45:33,200
same now or has things changed somewhere

1074
00:45:33,200 --> 00:45:34,319
and that could be done with the

1075
00:45:34,319 --> 00:45:35,920
transaction id

1076
00:45:35,920 --> 00:45:38,480
next slide

1077
00:45:38,880 --> 00:45:41,200
another problem especially related to

1078
00:45:41,200 --> 00:45:43,040
young push is that if a client is

1079
00:45:43,040 --> 00:45:45,359
pushing something to a server that it's

1080
00:45:45,359 --> 00:45:46,960
interested in

1081
00:45:46,960 --> 00:45:48,560
and it might also be

1082
00:45:48,560 --> 00:45:51,040
subscribing to young push notifications

1083
00:45:51,040 --> 00:45:53,520
it will hear updates of the same things

1084
00:45:53,520 --> 00:45:55,839
it's just sent there in the config so it

1085
00:45:55,839 --> 00:45:58,319
would be sort of echo

1086
00:45:58,319 --> 00:46:00,079
and it would be nice to be able to

1087
00:46:00,079 --> 00:46:01,520
cancel those day because we don't want

1088
00:46:01,520 --> 00:46:03,520
to process

1089
00:46:03,520 --> 00:46:05,040
and

1090
00:46:05,040 --> 00:46:07,520
treat all these updates and there's also

1091
00:46:07,520 --> 00:46:09,520
currently quite hard to know if you get

1092
00:46:09,520 --> 00:46:12,000
if i send an edit config to the server

1093
00:46:12,000 --> 00:46:14,640
and get the yank push

1094
00:46:14,640 --> 00:46:16,000
communication back

1095
00:46:16,000 --> 00:46:17,760
it's hard to know if this is indeed the

1096
00:46:17,760 --> 00:46:19,599
same as i just sent

1097
00:46:19,599 --> 00:46:22,000
or if it is some other client that did

1098
00:46:22,000 --> 00:46:24,720
something that resembles my change

1099
00:46:24,720 --> 00:46:26,960
but it's not exactly the same thing so

1100
00:46:26,960 --> 00:46:28,640
with the transaction id this will help

1101
00:46:28,640 --> 00:46:29,760
too

1102
00:46:29,760 --> 00:46:32,480
next slide please

1103
00:46:33,119 --> 00:46:36,319
and the third thing is that

1104
00:46:36,319 --> 00:46:38,000
it's sometimes important for clients to

1105
00:46:38,000 --> 00:46:39,680
be able to make changes and be

1106
00:46:39,680 --> 00:46:41,599
guaranteed that nothing else has changed

1107
00:46:41,599 --> 00:46:43,040
in between

1108
00:46:43,040 --> 00:46:45,200
since last time it's of course possible

1109
00:46:45,200 --> 00:46:46,560
to take a lock

1110
00:46:46,560 --> 00:46:48,400
but that is not very that's a

1111
00:46:48,400 --> 00:46:49,760
cooperative in an environment where

1112
00:46:49,760 --> 00:46:51,119
there are many clients

1113
00:46:51,119 --> 00:46:53,359
that one client would take a lock for

1114
00:46:53,359 --> 00:46:55,200
extended periods of time to prevent

1115
00:46:55,200 --> 00:46:57,200
others from making changes is kind of

1116
00:46:57,200 --> 00:46:58,400
not nice

1117
00:46:58,400 --> 00:47:00,079
so we don't want to prevent others from

1118
00:47:00,079 --> 00:47:02,000
making changes but we want to know when

1119
00:47:02,000 --> 00:47:04,560
other other clients are making changes

1120
00:47:04,560 --> 00:47:06,400
and transaction id can help with that

1121
00:47:06,400 --> 00:47:08,240
too

1122
00:47:08,240 --> 00:47:11,680
next slide please

1123
00:47:11,680 --> 00:47:12,480
so

1124
00:47:12,480 --> 00:47:15,119
i would then dive i mean this is a the

1125
00:47:15,119 --> 00:47:16,800
overall high level description but now i

1126
00:47:16,800 --> 00:47:19,200
will dive down into the one detail which

1127
00:47:19,200 --> 00:47:21,119
is this last modifier transaction id

1128
00:47:21,119 --> 00:47:22,960
mechanism to show how that compares to

1129
00:47:22,960 --> 00:47:26,000
the previous etag solution

1130
00:47:26,000 --> 00:47:28,800
next slide please

1131
00:47:28,800 --> 00:47:32,000
so here you can see on the left

1132
00:47:32,000 --> 00:47:34,319
oh colors went away that was pretty but

1133
00:47:34,319 --> 00:47:36,558
okay

1134
00:47:37,760 --> 00:47:39,760
you can see here on the left

1135
00:47:39,760 --> 00:47:43,200
you have a particular

1136
00:47:43,200 --> 00:47:47,599
particular get config message reply

1137
00:47:47,599 --> 00:47:49,520
where you can see that

1138
00:47:49,520 --> 00:47:52,480
last modified attributes

1139
00:47:52,480 --> 00:47:55,280
are in there if you look closely

1140
00:47:55,280 --> 00:47:56,880
the colors went away now so it's kind of

1141
00:47:56,880 --> 00:47:59,359
hard to see but it says txid colon last

1142
00:47:59,359 --> 00:48:02,240
modified and some date stamp

1143
00:48:02,240 --> 00:48:06,319
on several places in this content

1144
00:48:06,319 --> 00:48:08,720
uh so that is and then you can compare

1145
00:48:08,720 --> 00:48:10,800
on with the right side

1146
00:48:10,800 --> 00:48:12,640
where you can see how it was in the

1147
00:48:12,640 --> 00:48:14,640
previous uh over the other mechanisms

1148
00:48:14,640 --> 00:48:16,800
with the transaction ide tag

1149
00:48:16,800 --> 00:48:19,200
it's basically a similar attribute txid

1150
00:48:19,200 --> 00:48:22,160
colon etag with a sort of random string

1151
00:48:22,160 --> 00:48:24,960
or identifying string of the change so

1152
00:48:24,960 --> 00:48:26,640
the only thing that is

1153
00:48:26,640 --> 00:48:28,319
really the difference between

1154
00:48:28,319 --> 00:48:31,599
txid last modified and txide tag is that

1155
00:48:31,599 --> 00:48:33,680
now we have a time stamp instead of some

1156
00:48:33,680 --> 00:48:35,359
other string

1157
00:48:35,359 --> 00:48:36,240
but

1158
00:48:36,240 --> 00:48:39,919
other than that it looks much the same

1159
00:48:40,559 --> 00:48:42,960
next slide please

1160
00:48:42,960 --> 00:48:45,520
one detail though is that in rest conf

1161
00:48:45,520 --> 00:48:47,359
there is already a sort of last modified

1162
00:48:47,359 --> 00:48:48,640
mechanism

1163
00:48:48,640 --> 00:48:49,440
but

1164
00:48:49,440 --> 00:48:50,960
that rest conf

1165
00:48:50,960 --> 00:48:54,160
that is by rc8040 the rest conf

1166
00:48:54,160 --> 00:48:56,559
specification itself has this built in

1167
00:48:56,559 --> 00:48:58,240
already

1168
00:48:58,240 --> 00:49:00,160
but the timestamp format in there is

1169
00:49:00,160 --> 00:49:03,119
based on the date and a time with no we

1170
00:49:03,119 --> 00:49:06,319
just second one second resolution

1171
00:49:06,319 --> 00:49:09,760
so in the proposal i wrote here

1172
00:49:09,760 --> 00:49:13,040
i reused the same format for rest conf

1173
00:49:13,040 --> 00:49:16,480
which is without fractional seconds

1174
00:49:16,480 --> 00:49:18,160
that's uh

1175
00:49:18,160 --> 00:49:20,640
that's nice in a way because it aligns

1176
00:49:20,640 --> 00:49:23,520
well with the the rest of rest conf

1177
00:49:23,520 --> 00:49:25,359
but it's not so good because it's quite

1178
00:49:25,359 --> 00:49:27,359
conceivable that you can have more than

1179
00:49:27,359 --> 00:49:29,599
one edit config change within the same

1180
00:49:29,599 --> 00:49:30,559
second

1181
00:49:30,559 --> 00:49:33,440
and then this becomes ambiguous

1182
00:49:33,440 --> 00:49:36,079
so i'm on the fence here how we should

1183
00:49:36,079 --> 00:49:38,000
do this should we keep using this

1184
00:49:38,000 --> 00:49:41,040
existing restconf date stamp format

1185
00:49:41,040 --> 00:49:44,240
or should we add fractional seconds in

1186
00:49:44,240 --> 00:49:45,119
the

1187
00:49:45,119 --> 00:49:47,359
document the drev2

1188
00:49:47,359 --> 00:49:50,480
document here now it is the same as in

1189
00:49:50,480 --> 00:49:51,760
rest conf

1190
00:49:51,760 --> 00:49:53,599
but i'm not sure i'm not convinced that

1191
00:49:53,599 --> 00:49:54,800
it's

1192
00:49:54,800 --> 00:49:58,800
that's the best choice i'm not sure

1193
00:49:58,800 --> 00:50:00,640
actually i would like to ask the room we

1194
00:50:00,640 --> 00:50:02,000
can do that after the presentation here

1195
00:50:02,000 --> 00:50:03,920
but what's your opinion about this

1196
00:50:03,920 --> 00:50:06,240
should we keep this low resolution and

1197
00:50:06,240 --> 00:50:08,319
be aligned with rest conf

1198
00:50:08,319 --> 00:50:10,160
or should we do it with a higher

1199
00:50:10,160 --> 00:50:12,400
resolution just like we do for netconf

1200
00:50:12,400 --> 00:50:14,559
here

1201
00:50:15,839 --> 00:50:18,640
next slide please

1202
00:50:21,280 --> 00:50:23,119
and the other detail i want to show now

1203
00:50:23,119 --> 00:50:25,119
is this integration with giant push just

1204
00:50:25,119 --> 00:50:27,200
to show you very simply what that looks

1205
00:50:27,200 --> 00:50:30,079
like it actually is quite simple

1206
00:50:30,079 --> 00:50:33,040
so next slide please

1207
00:50:33,440 --> 00:50:34,880
so here

1208
00:50:34,880 --> 00:50:37,200
colors went away i don't know exactly

1209
00:50:37,200 --> 00:50:38,720
what happened with them but

1210
00:50:38,720 --> 00:50:40,480
on the bottom you can see on the left

1211
00:50:40,480 --> 00:50:42,640
side here under push subscribe

1212
00:50:42,640 --> 00:50:43,599
you see

1213
00:50:43,599 --> 00:50:45,760
near the bottom itf netconf transaction

1214
00:50:45,760 --> 00:50:47,440
id yp

1215
00:50:47,440 --> 00:50:50,559
with etag true

1216
00:50:50,559 --> 00:50:53,599
that is how a yang push user

1217
00:50:53,599 --> 00:50:55,200
would enable

1218
00:50:55,200 --> 00:50:57,119
transaction ids for young pushes for

1219
00:50:57,119 --> 00:50:58,960
this particular subscription

1220
00:50:58,960 --> 00:51:00,720
so it's just a simple leave that is

1221
00:51:00,720 --> 00:51:03,440
added to the subscription to to get this

1222
00:51:03,440 --> 00:51:05,440
functionality

1223
00:51:05,440 --> 00:51:07,920
and on the right side in the updates you

1224
00:51:07,920 --> 00:51:08,960
can see

1225
00:51:08,960 --> 00:51:10,559
right around middle

1226
00:51:10,559 --> 00:51:13,520
you can see yang patch patch id 0

1227
00:51:13,520 --> 00:51:15,760
edit and then it says transaction id

1228
00:51:15,760 --> 00:51:18,400
called an e tag and then it gives a

1229
00:51:18,400 --> 00:51:21,520
particular name for this update and that

1230
00:51:21,520 --> 00:51:23,280
is how transaction ids would be

1231
00:51:23,280 --> 00:51:25,200
integrated with yang push

1232
00:51:25,200 --> 00:51:28,000
so it's a

1233
00:51:28,079 --> 00:51:30,319
very unintrusive small amount of

1234
00:51:30,319 --> 00:51:32,079
additional data that goes in there to

1235
00:51:32,079 --> 00:51:33,440
enables

1236
00:51:33,440 --> 00:51:35,200
us to identify all the changes where

1237
00:51:35,200 --> 00:51:37,040
they're coming from and that we already

1238
00:51:37,040 --> 00:51:38,240
have

1239
00:51:38,240 --> 00:51:42,160
this information in the client and so on

1240
00:51:43,280 --> 00:51:45,520
that was basically all i had but i'm

1241
00:51:45,520 --> 00:51:46,720
happy to

1242
00:51:46,720 --> 00:51:48,960
answer any questions or comments and in

1243
00:51:48,960 --> 00:51:51,040
particular if people have opinions about

1244
00:51:51,040 --> 00:51:53,440
the resolutions and time stamps for the

1245
00:51:53,440 --> 00:51:55,280
last modified thing i'd be interested to

1246
00:51:55,280 --> 00:51:57,440
hear

1247
00:51:58,000 --> 00:52:00,640
okay rob

1248
00:52:01,599 --> 00:52:04,480
robertson cisco's contributor um so in

1249
00:52:04,480 --> 00:52:06,079
terms of resolution the timestamps one

1250
00:52:06,079 --> 00:52:07,839
thing i wanted to understand is if you

1251
00:52:07,839 --> 00:52:10,000
have a fractional timestamp are you

1252
00:52:10,000 --> 00:52:13,680
expecting every request to have a unique

1253
00:52:13,680 --> 00:52:14,880
value so

1254
00:52:14,880 --> 00:52:16,960
you you wanted to guarantee uniqueness

1255
00:52:16,960 --> 00:52:20,000
on that that's right

1256
00:52:20,000 --> 00:52:22,240
okay

1257
00:52:22,559 --> 00:52:26,480
a client that is asking for uh for for a

1258
00:52:26,480 --> 00:52:28,079
transaction id would like to be able to

1259
00:52:28,079 --> 00:52:30,079
compare that with previous ids that it

1260
00:52:30,079 --> 00:52:32,400
has is this the same or not and with the

1261
00:52:32,400 --> 00:52:34,079
one second resolution there's

1262
00:52:34,079 --> 00:52:35,920
potentially a risk that

1263
00:52:35,920 --> 00:52:37,359
some things have changed but it still

1264
00:52:37,359 --> 00:52:40,480
has the same time stamp

1265
00:52:41,280 --> 00:52:42,000
but

1266
00:52:42,000 --> 00:52:44,079
erickson i think

1267
00:52:44,079 --> 00:52:47,040
without some allowing that two

1268
00:52:47,040 --> 00:52:49,760
transactions in the same second have the

1269
00:52:49,760 --> 00:52:52,240
same transaction id according to the

1270
00:52:52,240 --> 00:52:54,640
last modified that's not acceptable this

1271
00:52:54,640 --> 00:52:56,960
makes this woman is

1272
00:52:56,960 --> 00:53:00,880
unreliable defeats its purpose so either

1273
00:53:00,880 --> 00:53:03,200
you have to do something there one is to

1274
00:53:03,200 --> 00:53:05,520
have a detailed timestamp

1275
00:53:05,520 --> 00:53:08,240
and having the order of the transactions

1276
00:53:08,240 --> 00:53:11,200
that's also a nice feature

1277
00:53:11,200 --> 00:53:14,960
yes but in the rest conf i think some of

1278
00:53:14,960 --> 00:53:17,359
this functionality is already defined by

1279
00:53:17,359 --> 00:53:20,960
rfc 8040 like how you can retrieve

1280
00:53:20,960 --> 00:53:22,480
information that is new since a

1281
00:53:22,480 --> 00:53:24,079
particular timestamp

1282
00:53:24,079 --> 00:53:25,680
and that is not something that this

1283
00:53:25,680 --> 00:53:27,680
particular draft that i'm working on

1284
00:53:27,680 --> 00:53:28,960
here can change

1285
00:53:28,960 --> 00:53:32,319
so i think even if we

1286
00:53:32,319 --> 00:53:33,920
yeah i'm not sure

1287
00:53:33,920 --> 00:53:35,760
how useful this feature would be in rest

1288
00:53:35,760 --> 00:53:40,839
conf if you need that's high resolution

1289
00:53:47,680 --> 00:53:49,200
john

1290
00:53:49,200 --> 00:53:50,400
hi john o'brien university of

1291
00:53:50,400 --> 00:53:52,160
pennsylvania um

1292
00:53:52,160 --> 00:53:54,319
i have some uh sort of

1293
00:53:54,319 --> 00:53:57,200
poorly formed or incompletely formed um

1294
00:53:57,200 --> 00:53:58,319
questions

1295
00:53:58,319 --> 00:54:01,119
having to do with um

1296
00:54:01,119 --> 00:54:03,119
kind of what i already know from you

1297
00:54:03,119 --> 00:54:05,760
know sequence numbers in dns which seem

1298
00:54:05,760 --> 00:54:07,839
relevant to this use case and things

1299
00:54:07,839 --> 00:54:08,640
like

1300
00:54:08,640 --> 00:54:11,520
um boot time in snmp which also seems

1301
00:54:11,520 --> 00:54:12,800
relevant especially when we're talking

1302
00:54:12,800 --> 00:54:14,960
about using a time stamp

1303
00:54:14,960 --> 00:54:16,240
to determine whether something has

1304
00:54:16,240 --> 00:54:17,440
changed

1305
00:54:17,440 --> 00:54:18,480
and the

1306
00:54:18,480 --> 00:54:21,760
device for managing and the manager

1307
00:54:21,760 --> 00:54:24,319
might not have good knowledge of uh

1308
00:54:24,319 --> 00:54:26,880
whether the managed device has good time

1309
00:54:26,880 --> 00:54:28,880
or whether the the time

1310
00:54:28,880 --> 00:54:31,040
its idea of time has changed since the

1311
00:54:31,040 --> 00:54:33,680
last time we asked it

1312
00:54:33,680 --> 00:54:34,800
are those

1313
00:54:34,800 --> 00:54:37,599
considerations that you feel like are

1314
00:54:37,599 --> 00:54:39,680
have been addressed by this draft

1315
00:54:39,680 --> 00:54:42,319
yes the reason i did not include

1316
00:54:42,319 --> 00:54:44,000
some sort of timestamp in the original

1317
00:54:44,000 --> 00:54:46,880
version was concerns of this kind i

1318
00:54:46,880 --> 00:54:49,440
think time is a complicated concept

1319
00:54:49,440 --> 00:54:50,960
but i

1320
00:54:50,960 --> 00:54:52,880
i understand

1321
00:54:52,880 --> 00:54:55,520
yeah i agreed to add it

1322
00:54:55,520 --> 00:54:57,680
but then i only define one operation on

1323
00:54:57,680 --> 00:54:59,359
these timestamps and that's equality

1324
00:54:59,359 --> 00:55:03,598
there's no other operation that is valid

1325
00:55:04,079 --> 00:55:07,079
thanks

1326
00:55:11,119 --> 00:55:13,680
good good

1327
00:55:16,079 --> 00:55:18,799
um i'm so i'm thinking

1328
00:55:18,799 --> 00:55:20,880
uh the timestamps are

1329
00:55:20,880 --> 00:55:23,040
maybe it's okay to use second level

1330
00:55:23,040 --> 00:55:25,280
resolution and for clients where it

1331
00:55:25,280 --> 00:55:28,400
matters they shouldn't use less modified

1332
00:55:28,400 --> 00:55:30,400
instead they just use the

1333
00:55:30,400 --> 00:55:31,839
etag

1334
00:55:31,839 --> 00:55:32,799
um

1335
00:55:32,799 --> 00:55:34,559
and that's that's what they do

1336
00:55:34,559 --> 00:55:36,480
and also i mean keep in mind that we're

1337
00:55:36,480 --> 00:55:38,160
i mean for things that are sub second

1338
00:55:38,160 --> 00:55:39,920
resolution we're talking about

1339
00:55:39,920 --> 00:55:42,319
configuration database mostly

1340
00:55:42,319 --> 00:55:44,319
um you know the updates that you know

1341
00:55:44,319 --> 00:55:45,119
the

1342
00:55:45,119 --> 00:55:47,359
the optimistic locking uh so it's both

1343
00:55:47,359 --> 00:55:48,640
configuration

1344
00:55:48,640 --> 00:55:50,799
and configuration changing at sub second

1345
00:55:50,799 --> 00:55:53,680
resolution can happen in some scenarios

1346
00:55:53,680 --> 00:55:55,040
but um

1347
00:55:55,040 --> 00:55:57,119
it's probably uh

1348
00:55:57,119 --> 00:55:58,720
not as common of a use case so i think

1349
00:55:58,720 --> 00:56:01,200
last modified has value for common use

1350
00:56:01,200 --> 00:56:03,680
cases and for those extreme use cases

1351
00:56:03,680 --> 00:56:05,200
they probably shouldn't use glass

1352
00:56:05,200 --> 00:56:07,680
modified

1353
00:56:08,319 --> 00:56:10,160
yes i tend to agree for for some use

1354
00:56:10,160 --> 00:56:13,280
cases it may be convenient to have a

1355
00:56:13,280 --> 00:56:15,680
small and simple mechanism

1356
00:56:15,680 --> 00:56:17,440
rest conf is geared towards those kind

1357
00:56:17,440 --> 00:56:18,160
of

1358
00:56:18,160 --> 00:56:19,920
not

1359
00:56:19,920 --> 00:56:22,000
not so complicated use cases in many in

1360
00:56:22,000 --> 00:56:24,240
many environments so maybe there it has

1361
00:56:24,240 --> 00:56:26,079
the value

1362
00:56:26,079 --> 00:56:28,640
but i agree e tags should be used when

1363
00:56:28,640 --> 00:56:30,400
things are need to be strictly correct

1364
00:56:30,400 --> 00:56:32,799
all the time

1365
00:56:34,319 --> 00:56:36,880
uh robles and cisco it's the other any

1366
00:56:36,880 --> 00:56:38,799
other thought just in terms of what john

1367
00:56:38,799 --> 00:56:40,559
was mentioning is would it make sense to

1368
00:56:40,559 --> 00:56:42,880
have like a logical timestamp here so a

1369
00:56:42,880 --> 00:56:44,880
counter rather than a timestamp so

1370
00:56:44,880 --> 00:56:46,480
something that's guaranteed to increment

1371
00:56:46,480 --> 00:56:48,640
every time a

1372
00:56:48,640 --> 00:56:50,240
configuration request comes in a

1373
00:56:50,240 --> 00:56:52,000
sequence number or something that would

1374
00:56:52,000 --> 00:56:54,720
then guarantee that these are unique and

1375
00:56:54,720 --> 00:56:57,599
ordered if that was helpful

1376
00:56:57,599 --> 00:57:00,559
uh we have the e-tag mechanism which

1377
00:57:00,559 --> 00:57:02,079
i think is a

1378
00:57:02,079 --> 00:57:03,839
more robust and secure

1379
00:57:03,839 --> 00:57:06,000
mechanism for doing this sort of thing

1380
00:57:06,000 --> 00:57:07,280
and the the reason that we added

1381
00:57:07,280 --> 00:57:09,520
timestamp is because in rest conf there

1382
00:57:09,520 --> 00:57:11,520
is already

1383
00:57:11,520 --> 00:57:13,839
in rc 80 40 there's like half of this

1384
00:57:13,839 --> 00:57:16,240
mechanism is already defined there so we

1385
00:57:16,240 --> 00:57:17,839
just added what was missing with the

1386
00:57:17,839 --> 00:57:19,760
transaction timestamp so then it becomes

1387
00:57:19,760 --> 00:57:21,839
a complete mechanism but

1388
00:57:21,839 --> 00:57:23,760
i i agree that

1389
00:57:23,760 --> 00:57:26,480
time may not be the best

1390
00:57:26,480 --> 00:57:28,799
way of keeping track of

1391
00:57:28,799 --> 00:57:31,040
when things have changed or not so i

1392
00:57:31,040 --> 00:57:34,079
think if you are concerned about

1393
00:57:34,079 --> 00:57:35,839
keeping perfect track of this you should

1394
00:57:35,839 --> 00:57:37,440
use the e-tag mechanism instead which is

1395
00:57:37,440 --> 00:57:41,280
a mandatory opera mandatory mechanism

1396
00:57:41,280 --> 00:57:44,400
time stamp mechanism is only optional

1397
00:57:44,400 --> 00:57:46,720
okay so it might be helpful if the draft

1398
00:57:46,720 --> 00:57:48,640
was clear that the or the problems of

1399
00:57:48,640 --> 00:57:50,960
doing the comparison of timestamps and

1400
00:57:50,960 --> 00:57:52,559
and basically just give some advice as

1401
00:57:52,559 --> 00:57:54,720
to what not to use them for and push

1402
00:57:54,720 --> 00:57:56,400
especially towards the etag if that's

1403
00:57:56,400 --> 00:57:58,240
text isn't already in there

1404
00:57:58,240 --> 00:58:00,960
yeah i tried to specify quite clearly

1405
00:58:00,960 --> 00:58:03,520
that the only operation that is valid on

1406
00:58:03,520 --> 00:58:05,280
these timestamps is equal testing for

1407
00:58:05,280 --> 00:58:07,040
equality

1408
00:58:07,040 --> 00:58:09,200
but maybe of course we can add more text

1409
00:58:09,200 --> 00:58:12,240
about why that is but

1410
00:58:16,240 --> 00:58:17,280
right

1411
00:58:17,280 --> 00:58:19,599
um

1412
00:58:19,839 --> 00:58:21,680
so

1413
00:58:21,680 --> 00:58:24,160
i'm going to start a poll to say

1414
00:58:24,160 --> 00:58:26,480
um oh sorry

1415
00:58:26,480 --> 00:58:29,200
we have more

1416
00:58:32,960 --> 00:58:35,359
okay hi uh charles eccles cisco sorry

1417
00:58:35,359 --> 00:58:37,760
for the delay i wanted to let the stuff

1418
00:58:37,760 --> 00:58:40,400
on the timestamp thing uh finish because

1419
00:58:40,400 --> 00:58:43,040
i just had another question about

1420
00:58:43,040 --> 00:58:44,319
um

1421
00:58:44,319 --> 00:58:46,640
in the case of an uh two questions

1422
00:58:46,640 --> 00:58:48,559
actually the first one was

1423
00:58:48,559 --> 00:58:50,799
the draft talks about you know you send

1424
00:58:50,799 --> 00:58:53,839
the the e-tag or whatever and if

1425
00:58:53,839 --> 00:58:56,319
if there's been a relevant change the

1426
00:58:56,319 --> 00:58:57,440
server

1427
00:58:57,440 --> 00:58:59,359
uh

1428
00:58:59,359 --> 00:59:01,200
wouldn't return you know would return

1429
00:59:01,200 --> 00:59:03,520
some kind some type of error

1430
00:59:03,520 --> 00:59:04,559
um

1431
00:59:04,559 --> 00:59:07,040
rather than or you know

1432
00:59:07,040 --> 00:59:08,319
the server does something different if

1433
00:59:08,319 --> 00:59:10,160
there's a relevant change or a change

1434
00:59:10,160 --> 00:59:12,000
that's um

1435
00:59:12,000 --> 00:59:13,680
of interest to the client or something

1436
00:59:13,680 --> 00:59:15,599
like that that there was the wording

1437
00:59:15,599 --> 00:59:17,440
like left some wiggle room as opposed to

1438
00:59:17,440 --> 00:59:18,799
saying

1439
00:59:18,799 --> 00:59:20,799
if the e tags match

1440
00:59:20,799 --> 00:59:22,799
you do this if they don't match you do

1441
00:59:22,799 --> 00:59:23,599
this

1442
00:59:23,599 --> 00:59:25,520
i was just wondering it was that just

1443
00:59:25,520 --> 00:59:27,040
the way of describing it that left that

1444
00:59:27,040 --> 00:59:29,359
wiggle room or is there actually

1445
00:59:29,359 --> 00:59:31,359
more than two cases of match and not

1446
00:59:31,359 --> 00:59:33,200
match

1447
00:59:33,200 --> 00:59:34,480
uh

1448
00:59:34,480 --> 00:59:35,760
it would be good if you could point out

1449
00:59:35,760 --> 00:59:38,240
the section that was unclear to you so i

1450
00:59:38,240 --> 00:59:41,680
can make sure that it's clear but

1451
00:59:41,680 --> 00:59:42,799
in essence

1452
00:59:42,799 --> 00:59:44,480
you're right the only thing that we want

1453
00:59:44,480 --> 00:59:46,559
to match here is the transaction ids or

1454
00:59:46,559 --> 00:59:49,119
the payload that the client sends down

1455
00:59:49,119 --> 00:59:50,720
but it also

1456
00:59:50,720 --> 00:59:51,760
is

1457
00:59:51,760 --> 00:59:53,680
there is the case where there are let's

1458
00:59:53,680 --> 00:59:57,280
say a when condition that is changing

1459
00:59:57,280 --> 00:59:58,319
that

1460
00:59:58,319 --> 01:00:00,319
that makes the server change the

1461
01:00:00,319 --> 01:00:02,079
configuration in an area that is not

1462
01:00:02,079 --> 01:00:04,480
related to the particular edit config

1463
01:00:04,480 --> 01:00:06,559
request i mean it's related to but it's

1464
01:00:06,559 --> 01:00:08,640
not part of the edit config request and

1465
01:00:08,640 --> 01:00:10,559
that is also included so that perhaps

1466
01:00:10,559 --> 01:00:12,839
that is what i was trying to say

1467
01:00:12,839 --> 01:00:15,760
okay all right um and then the other

1468
01:00:15,760 --> 01:00:18,000
thing was in case the

1469
01:00:18,000 --> 01:00:20,480
the server can't um according to these

1470
01:00:20,480 --> 01:00:22,160
new rules or the rules on this draft in

1471
01:00:22,160 --> 01:00:24,400
case the server can't make the change

1472
01:00:24,400 --> 01:00:25,839
uh there could be a couple reasons one

1473
01:00:25,839 --> 01:00:28,559
could be that it was like a the change

1474
01:00:28,559 --> 01:00:30,319
that was being made just uh really

1475
01:00:30,319 --> 01:00:31,920
didn't make sense so that data doesn't

1476
01:00:31,920 --> 01:00:35,200
exist versus it's because of the e-tag

1477
01:00:35,200 --> 01:00:37,839
and um i didn't know if the error that

1478
01:00:37,839 --> 01:00:39,920
the client would receive

1479
01:00:39,920 --> 01:00:41,760
does it distinguish between those cases

1480
01:00:41,760 --> 01:00:43,520
or do both cases look the same to the

1481
01:00:43,520 --> 01:00:44,720
client

1482
01:00:44,720 --> 01:00:46,799
no there's a specific error message for

1483
01:00:46,799 --> 01:00:47,839
that

1484
01:00:47,839 --> 01:00:50,880
it's you can you can find it in the

1485
01:00:50,880 --> 01:00:52,400
in the document there it's defined

1486
01:00:52,400 --> 01:00:54,400
exactly what it should look like

1487
01:00:54,400 --> 01:00:57,839
okay great thanks

1488
01:00:59,599 --> 01:01:02,240
okay if there are no more comments uh

1489
01:01:02,240 --> 01:01:04,559
jan i'm not sure if you're actually

1490
01:01:04,559 --> 01:01:07,359
asking for work group adoption at this

1491
01:01:07,359 --> 01:01:08,160
time

1492
01:01:08,160 --> 01:01:10,960
i didn't see a slide

1493
01:01:10,960 --> 01:01:12,240
i don't know how to do that but if you

1494
01:01:12,240 --> 01:01:14,160
think the time is wrapped then uh please

1495
01:01:14,160 --> 01:01:15,920
go ahead

1496
01:01:15,920 --> 01:01:17,119
okay

1497
01:01:17,119 --> 01:01:20,000
the time is right is what i want to say

1498
01:01:20,000 --> 01:01:21,280
okay

1499
01:01:21,280 --> 01:01:24,559
all right so uh having cleared the deck

1500
01:01:24,559 --> 01:01:27,520
of a large number of documents from the

1501
01:01:27,520 --> 01:01:28,720
working group

1502
01:01:28,720 --> 01:01:31,119
maybe this would be a good time to ask

1503
01:01:31,119 --> 01:01:33,040
the question

1504
01:01:33,040 --> 01:01:34,400
do you consider

1505
01:01:34,400 --> 01:01:36,319
this work useful

1506
01:01:36,319 --> 01:01:38,400
and would you like to see this draft

1507
01:01:38,400 --> 01:01:40,240
adopted as a work group item so i'm

1508
01:01:40,240 --> 01:01:42,079
going to start a poll

1509
01:01:42,079 --> 01:01:45,599
and have you answer to that

1510
01:01:45,599 --> 01:01:46,640
on

1511
01:01:46,640 --> 01:01:49,960
meet echo

1512
01:02:29,920 --> 01:02:32,400
okay so the trend seems to be fairly

1513
01:02:32,400 --> 01:02:35,400
positive

1514
01:02:35,520 --> 01:02:38,000
we will go ahead and

1515
01:02:38,000 --> 01:02:41,839
send a formal notice on the mailing list

1516
01:02:41,839 --> 01:02:43,920
to see if the workgroup wants to adopt

1517
01:02:43,920 --> 01:02:46,720
the document is about group item

1518
01:02:46,720 --> 01:02:48,160
thanks theon

1519
01:02:48,160 --> 01:02:51,319
thank you

1520
01:03:09,359 --> 01:03:11,759
sorry

1521
01:03:13,440 --> 01:03:14,799
so i am okay

1522
01:03:14,799 --> 01:03:16,400
and

1523
01:03:16,400 --> 01:03:19,039
present for the authors because they

1524
01:03:19,039 --> 01:03:22,400
cannot attend the meeting

1525
01:03:22,400 --> 01:03:25,720
next page

1526
01:03:30,400 --> 01:03:34,079
so for lighter conf we already know

1527
01:03:34,079 --> 01:03:36,079
so this is all the slides i just thought

1528
01:03:36,079 --> 01:03:38,640
so let the car already use

1529
01:03:38,640 --> 01:03:39,839
uh

1530
01:03:39,839 --> 01:03:41,200
somewhere for

1531
01:03:41,200 --> 01:03:43,520
closer to the mic

1532
01:03:43,520 --> 01:03:45,920
leatherconf already used

1533
01:03:45,920 --> 01:03:48,960
security uh transfer protocols

1534
01:03:48,960 --> 01:03:50,640
such as a simple

1535
01:03:50,640 --> 01:03:52,799
object access protocol

1536
01:03:52,799 --> 01:03:53,920
and the

1537
01:03:53,920 --> 01:03:55,920
secure cell

1538
01:03:55,920 --> 01:04:00,000
and the extensible to something

1539
01:04:00,000 --> 01:04:02,160
so most of these

1540
01:04:02,160 --> 01:04:04,559
secure transfer protocols

1541
01:04:04,559 --> 01:04:07,520
is utv-based

1542
01:04:07,520 --> 01:04:09,520
because of this

1543
01:04:09,520 --> 01:04:13,000
there are some shortcomings

1544
01:04:14,640 --> 01:04:16,079
for example

1545
01:04:16,079 --> 01:04:17,359
the head of

1546
01:04:17,359 --> 01:04:20,240
nine blocking in the tcp

1547
01:04:20,240 --> 01:04:22,880
so these sword comments

1548
01:04:22,880 --> 01:04:24,720
can be overcome

1549
01:04:24,720 --> 01:04:26,880
if we use

1550
01:04:26,880 --> 01:04:30,720
quick as a secure transport protocols

1551
01:04:30,720 --> 01:04:33,599
so in addition to overcome this

1552
01:04:33,599 --> 01:04:36,160
shortcomings

1553
01:04:36,160 --> 01:04:37,039
the

1554
01:04:37,039 --> 01:04:38,160
the quick

1555
01:04:38,160 --> 01:04:40,480
as a secure transport protocol

1556
01:04:40,480 --> 01:04:43,839
have also some other advantages

1557
01:04:43,839 --> 01:04:45,760
for example

1558
01:04:45,760 --> 01:04:47,839
quick

1559
01:04:47,839 --> 01:04:48,799
quick

1560
01:04:48,799 --> 01:04:53,280
convection established is very quick

1561
01:04:53,280 --> 01:04:54,559
and also

1562
01:04:54,559 --> 01:04:56,640
quick

1563
01:04:56,640 --> 01:04:58,160
the they have

1564
01:04:58,160 --> 01:05:00,000
uh authentication

1565
01:05:00,000 --> 01:05:02,799
and the encryption for the header and

1566
01:05:02,799 --> 01:05:04,079
the payload

1567
01:05:04,079 --> 01:05:07,039
and and so on so that's why

1568
01:05:07,039 --> 01:05:10,240
we propose

1569
01:05:10,240 --> 01:05:13,520
use quick as a transport secure

1570
01:05:13,520 --> 01:05:15,599
protocol

1571
01:05:15,599 --> 01:05:16,880
so here

1572
01:05:16,880 --> 01:05:19,440
we just give some details

1573
01:05:19,440 --> 01:05:21,119
about

1574
01:05:21,119 --> 01:05:23,119
we

1575
01:05:23,119 --> 01:05:26,160
about to use the quick as skill transfer

1576
01:05:26,160 --> 01:05:27,680
protocols

1577
01:05:27,680 --> 01:05:29,039
so here we just talk about the

1578
01:05:29,039 --> 01:05:31,200
connection management

1579
01:05:31,200 --> 01:05:34,319
first we have a draft

1580
01:05:34,319 --> 01:05:36,559
version identification

1581
01:05:36,559 --> 01:05:37,839
so basically

1582
01:05:37,839 --> 01:05:38,640
this

1583
01:05:38,640 --> 01:05:41,280
consists of a token

1584
01:05:41,280 --> 01:05:42,720
such as

1585
01:05:42,720 --> 01:05:44,079
noc

1586
01:05:44,079 --> 01:05:45,680
which is sort for

1587
01:05:45,680 --> 01:05:47,839
net conf over quick

1588
01:05:47,839 --> 01:05:49,359
and then plus some

1589
01:05:49,359 --> 01:05:51,039
numbers number one

1590
01:05:51,039 --> 01:05:54,559
versus number two and so on

1591
01:05:54,880 --> 01:05:56,400
when we

1592
01:05:56,400 --> 01:05:59,280
want to set up a connection

1593
01:05:59,280 --> 01:06:00,480
at first

1594
01:06:00,480 --> 01:06:03,440
we need a half of we need

1595
01:06:03,440 --> 01:06:05,920
negotiate the first numbers

1596
01:06:05,920 --> 01:06:08,000
so when both sides

1597
01:06:08,000 --> 01:06:10,480
agreed or both sides

1598
01:06:10,480 --> 01:06:11,760
support

1599
01:06:11,760 --> 01:06:14,880
the common versions then we can stop

1600
01:06:14,880 --> 01:06:16,480
we can continue

1601
01:06:16,480 --> 01:06:18,559
so also

1602
01:06:18,559 --> 01:06:21,680
both sides should also consider

1603
01:06:21,680 --> 01:06:23,280
the transport

1604
01:06:23,280 --> 01:06:25,200
protocol maybe the version is greater

1605
01:06:25,200 --> 01:06:28,079
than 1.3 something

1606
01:06:28,079 --> 01:06:30,640
so after this stage and then we can hook

1607
01:06:30,640 --> 01:06:31,520
up

1608
01:06:31,520 --> 01:06:32,640
try to

1609
01:06:32,640 --> 01:06:34,480
build the connections

1610
01:06:34,480 --> 01:06:36,559
so basically here

1611
01:06:36,559 --> 01:06:38,640
the

1612
01:06:38,640 --> 01:06:40,559
when nightcom connection

1613
01:06:40,559 --> 01:06:43,359
is built over quick

1614
01:06:43,359 --> 01:06:46,880
the light conf manager will be

1615
01:06:46,880 --> 01:06:48,559
the uh

1616
01:06:48,559 --> 01:06:50,559
the the client

1617
01:06:50,559 --> 01:06:54,160
of a quicker and then netcaf

1618
01:06:54,160 --> 01:06:56,559
agent will be server

1619
01:06:56,559 --> 01:06:58,079
also

1620
01:06:58,079 --> 01:07:01,119
the manager will initiate the connection

1621
01:07:01,119 --> 01:07:04,079
so this basically about the connection

1622
01:07:04,079 --> 01:07:06,799
of light conf over quick

1623
01:07:06,799 --> 01:07:09,200
and then we consider the

1624
01:07:09,200 --> 01:07:11,680
result shutdown the connections

1625
01:07:11,680 --> 01:07:14,559
so in this case first we have a review

1626
01:07:14,559 --> 01:07:16,000
the ways

1627
01:07:16,000 --> 01:07:17,039
greek

1628
01:07:17,039 --> 01:07:18,799
terminated their connections

1629
01:07:18,799 --> 01:07:21,920
the three ways for quicker to terminate

1630
01:07:21,920 --> 01:07:23,760
the connections

1631
01:07:23,760 --> 01:07:25,599
one way is that

1632
01:07:25,599 --> 01:07:29,359
the idle timeout is enabled in this case

1633
01:07:29,359 --> 01:07:32,079
when idol timeout and then quick will

1634
01:07:32,079 --> 01:07:34,000
shut down the connections

1635
01:07:34,000 --> 01:07:36,480
so another way is that

1636
01:07:36,480 --> 01:07:38,559
either side of the quicker

1637
01:07:38,559 --> 01:07:40,160
then they just in the

1638
01:07:40,160 --> 01:07:42,400
connection close so in this case the

1639
01:07:42,400 --> 01:07:44,400
conversion where we're closed

1640
01:07:44,400 --> 01:07:46,400
and the third way is that

1641
01:07:46,400 --> 01:07:48,160
so something wrong happened we cannot

1642
01:07:48,160 --> 01:07:50,160
access some state whatever and then we

1643
01:07:50,160 --> 01:07:50,880
just

1644
01:07:50,880 --> 01:07:52,000
slightly

1645
01:07:52,000 --> 01:07:54,720
reset the connections that's the stereo

1646
01:07:54,720 --> 01:07:56,880
three way

1647
01:07:56,880 --> 01:08:00,160
the quick connection will determine it

1648
01:08:00,160 --> 01:08:03,520
so because netcam connection is over

1649
01:08:03,520 --> 01:08:04,960
quick

1650
01:08:04,960 --> 01:08:07,839
so we in this case

1651
01:08:07,839 --> 01:08:09,520
we will

1652
01:08:09,520 --> 01:08:13,520
disable the idle time out

1653
01:08:13,520 --> 01:08:17,040
in the quicker so in this way

1654
01:08:17,040 --> 01:08:18,640
in normal case

1655
01:08:18,640 --> 01:08:23,520
the light connection were there forever

1656
01:08:23,600 --> 01:08:26,158
and then we just uh

1657
01:08:26,158 --> 01:08:26,960
when

1658
01:08:26,960 --> 01:08:28,799
knight conf

1659
01:08:28,799 --> 01:08:30,000
entity

1660
01:08:30,000 --> 01:08:31,920
receive was in the

1661
01:08:31,920 --> 01:08:35,198
closed session so in this case

1662
01:08:35,198 --> 01:08:36,960
netconf entity

1663
01:08:36,960 --> 01:08:39,279
will shut down

1664
01:08:39,279 --> 01:08:40,560
the quick

1665
01:08:40,560 --> 01:08:42,880
connections associated

1666
01:08:42,880 --> 01:08:46,319
gracefully so in another case is that

1667
01:08:46,319 --> 01:08:48,560
so when that conf entity

1668
01:08:48,560 --> 01:08:52,158
receive or initiate the queue session

1669
01:08:52,158 --> 01:08:54,880
when selection is open in open state and

1670
01:08:54,880 --> 01:08:56,640
then this in this case

1671
01:08:56,640 --> 01:08:58,799
the latch entity will also gracefully

1672
01:08:58,799 --> 01:09:00,080
shut down

1673
01:09:00,080 --> 01:09:02,560
the quick connections

1674
01:09:02,560 --> 01:09:05,679
so the third case is that and then when

1675
01:09:05,679 --> 01:09:07,279
that kind of connection detects

1676
01:09:07,279 --> 01:09:08,719
something wrong

1677
01:09:08,719 --> 01:09:09,759
in the quick

1678
01:09:09,759 --> 01:09:12,000
or under and then we

1679
01:09:12,000 --> 01:09:13,679
shut down the connections so that's the

1680
01:09:13,679 --> 01:09:14,960
way

1681
01:09:14,960 --> 01:09:17,359
more consideration about

1682
01:09:17,359 --> 01:09:19,600
that curve over quick

1683
01:09:19,600 --> 01:09:23,759
connection termination so next page

1684
01:09:27,679 --> 01:09:30,479
so here we just uh we'll talk about some

1685
01:09:30,479 --> 01:09:33,198
more details about those connections so

1686
01:09:33,198 --> 01:09:36,000
in order to talk those more details

1687
01:09:36,000 --> 01:09:38,719
and we just give a uh

1688
01:09:38,719 --> 01:09:40,960
the protocol layer of light curve so

1689
01:09:40,960 --> 01:09:43,120
basically this is described

1690
01:09:43,120 --> 01:09:44,880
by the rfc

1691
01:09:44,880 --> 01:09:45,679
for

1692
01:09:45,679 --> 01:09:47,520
six two four one

1693
01:09:47,520 --> 01:09:50,640
so let count layers we have four layers

1694
01:09:50,640 --> 01:09:53,120
content layer operational layer mesh

1695
01:09:53,120 --> 01:09:56,080
layer and skill transfer layers so here

1696
01:09:56,080 --> 01:09:58,800
basically we just focus on

1697
01:09:58,800 --> 01:10:02,320
the communications between the manager

1698
01:10:02,320 --> 01:10:03,679
and the uh

1699
01:10:03,679 --> 01:10:04,640
agent

1700
01:10:04,640 --> 01:10:07,280
so this connection uh or communication

1701
01:10:07,280 --> 01:10:11,199
is rpc based and then we have two uh

1702
01:10:11,199 --> 01:10:12,239
one

1703
01:10:12,239 --> 01:10:15,280
one uh one type of connection

1704
01:10:15,280 --> 01:10:17,920
communication is a bi-directional for

1705
01:10:17,920 --> 01:10:19,120
example when

1706
01:10:19,120 --> 01:10:22,239
when manager send the configuration to

1707
01:10:22,239 --> 01:10:24,880
agent and then agent will

1708
01:10:24,880 --> 01:10:26,800
after something and then an agent will

1709
01:10:26,800 --> 01:10:29,040
send a notification to manager so this

1710
01:10:29,040 --> 01:10:31,280
is a two-way communication or called

1711
01:10:31,280 --> 01:10:33,760
bi-directional so another communication

1712
01:10:33,760 --> 01:10:37,360
is we can classify as unidirectional for

1713
01:10:37,360 --> 01:10:39,760
example when agent uh when we age in the

1714
01:10:39,760 --> 01:10:41,600
front found something wrong whatever

1715
01:10:41,600 --> 01:10:43,199
they just send the notification to the

1716
01:10:43,199 --> 01:10:45,600
manager so in this case manager don't

1717
01:10:45,600 --> 01:10:47,600
need to reply so this is the one

1718
01:10:47,600 --> 01:10:49,679
directional or unidirectional

1719
01:10:49,679 --> 01:10:50,800
so for these

1720
01:10:50,800 --> 01:10:52,159
two types of

1721
01:10:52,159 --> 01:10:53,920
conventional communications

1722
01:10:53,920 --> 01:10:56,080
and then we can use

1723
01:10:56,080 --> 01:10:59,840
the quickest stuff or my opinion those

1724
01:10:59,840 --> 01:11:01,520
two types of communications to the

1725
01:11:01,520 --> 01:11:03,760
quickest strains very easily to the next

1726
01:11:03,760 --> 01:11:06,000
page

1727
01:11:09,120 --> 01:11:10,960
so basically this gives more details

1728
01:11:10,960 --> 01:11:14,400
about we have a two type of

1729
01:11:14,400 --> 01:11:16,239
communicational strains one is

1730
01:11:16,239 --> 01:11:18,719
bi-directional in medical

1731
01:11:18,719 --> 01:11:22,159
so this bi-directional communication

1732
01:11:22,159 --> 01:11:25,520
can easily map to a quick stream string

1733
01:11:25,520 --> 01:11:28,960
string ids because in the string quick

1734
01:11:28,960 --> 01:11:31,679
string id there's the last two bits

1735
01:11:31,679 --> 01:11:34,239
and then those last two bits

1736
01:11:34,239 --> 01:11:36,800
identify or indicate

1737
01:11:36,800 --> 01:11:38,080
whether this

1738
01:11:38,080 --> 01:11:40,719
this string is unidirectional or

1739
01:11:40,719 --> 01:11:44,000
or bi-directional so we can directly

1740
01:11:44,000 --> 01:11:45,199
my opinion

1741
01:11:45,199 --> 01:11:48,000
there's light curve communication

1742
01:11:48,000 --> 01:11:50,080
different type of communications

1743
01:11:50,080 --> 01:11:53,440
to the quick streams identified by the

1744
01:11:53,440 --> 01:11:55,520
last two bits of

1745
01:11:55,520 --> 01:11:57,360
quick string ids

1746
01:11:57,360 --> 01:12:00,080
so next page

1747
01:12:00,719 --> 01:12:03,920
so about authentications using a quick

1748
01:12:03,920 --> 01:12:05,520
handshake

1749
01:12:05,520 --> 01:12:08,159
so basically

1750
01:12:08,159 --> 01:12:09,600
we just reuse

1751
01:12:09,600 --> 01:12:11,760
some kind of

1752
01:12:11,760 --> 01:12:14,239
procedures or whatever rules already

1753
01:12:14,239 --> 01:12:17,440
defined for example for the server

1754
01:12:17,440 --> 01:12:19,120
identity

1755
01:12:19,120 --> 01:12:22,640
we just reuse those rules already

1756
01:12:22,640 --> 01:12:24,480
defined in

1757
01:12:24,480 --> 01:12:25,520
the

1758
01:12:25,520 --> 01:12:27,840
uh four to

1759
01:12:27,840 --> 01:12:28,880
four

1760
01:12:28,880 --> 01:12:30,159
six four

1761
01:12:30,159 --> 01:12:32,000
six four six

1762
01:12:32,000 --> 01:12:35,040
uh four six four two in that one

1763
01:12:35,040 --> 01:12:36,960
and then for the client side client

1764
01:12:36,960 --> 01:12:38,960
identity is local

1765
01:12:38,960 --> 01:12:40,960
policy determined

1766
01:12:40,960 --> 01:12:42,800
and then we can also use third party

1767
01:12:42,800 --> 01:12:44,239
authentication

1768
01:12:44,239 --> 01:12:47,599
so let's look at details

1769
01:12:47,760 --> 01:12:51,000
next page

1770
01:12:55,600 --> 01:12:57,679
so these are basically this is the

1771
01:12:57,679 --> 01:13:02,080
description or rules defined by rfc

1772
01:13:02,080 --> 01:13:03,600
4642

1773
01:13:03,600 --> 01:13:05,360
which is how

1774
01:13:05,360 --> 01:13:06,480
we

1775
01:13:06,480 --> 01:13:10,320
identify a server so basically

1776
01:13:10,320 --> 01:13:13,280
so client must use

1777
01:13:13,280 --> 01:13:16,560
the server name that the civil line is

1778
01:13:16,560 --> 01:13:18,880
also used

1779
01:13:18,880 --> 01:13:20,080
when we open

1780
01:13:20,080 --> 01:13:22,239
the connections

1781
01:13:22,239 --> 01:13:23,040
and

1782
01:13:23,040 --> 01:13:24,800
the second rule and the third rule and

1783
01:13:24,800 --> 01:13:26,719
this one don't need to go repeat this

1784
01:13:26,719 --> 01:13:28,159
one because this one

1785
01:13:28,159 --> 01:13:29,280
all this

1786
01:13:29,280 --> 01:13:30,400
is already

1787
01:13:30,400 --> 01:13:33,520
described in rfc

1788
01:13:33,520 --> 01:13:35,520
4642

1789
01:13:35,520 --> 01:13:38,320
so next page

1790
01:13:40,960 --> 01:13:42,800
so if this uh

1791
01:13:42,800 --> 01:13:44,719
proposal move forward and then we will

1792
01:13:44,719 --> 01:13:48,239
need a some kind of uh

1793
01:13:48,320 --> 01:13:49,840
ayana

1794
01:13:49,840 --> 01:13:52,320
assignment so here

1795
01:13:52,320 --> 01:13:53,679
one uh

1796
01:13:53,679 --> 01:13:56,080
request is for the

1797
01:13:56,080 --> 01:13:57,840
alpn

1798
01:13:57,840 --> 01:13:59,440
uh registration

1799
01:13:59,440 --> 01:14:01,760
this new registration will be just we

1800
01:14:01,760 --> 01:14:03,360
have a protocol

1801
01:14:03,360 --> 01:14:06,800
and then maybe we'll just use an oc

1802
01:14:06,800 --> 01:14:10,159
as a product id and then we

1803
01:14:10,159 --> 01:14:12,880
just have this kind of a sequence there

1804
01:14:12,880 --> 01:14:15,600
and then we also need a udp

1805
01:14:15,600 --> 01:14:17,040
portal number

1806
01:14:17,040 --> 01:14:18,320
because

1807
01:14:18,320 --> 01:14:20,239
quicker is based on

1808
01:14:20,239 --> 01:14:21,440
utp

1809
01:14:21,440 --> 01:14:24,159
so next page

1810
01:14:25,120 --> 01:14:27,520
so this is the first presentation so we

1811
01:14:27,520 --> 01:14:29,040
would like just to

1812
01:14:29,040 --> 01:14:30,080
collect

1813
01:14:30,080 --> 01:14:31,520
uh

1814
01:14:31,520 --> 01:14:33,920
all the feedbacks or comments from all

1815
01:14:33,920 --> 01:14:35,199
of you

1816
01:14:35,199 --> 01:14:37,040
but because i'm not an author i don't

1817
01:14:37,040 --> 01:14:39,679
have those details and i would like you

1818
01:14:39,679 --> 01:14:40,880
to send those

1819
01:14:40,880 --> 01:14:42,400
questions to the

1820
01:14:42,400 --> 01:14:44,320
to the least because i'm

1821
01:14:44,320 --> 01:14:45,520
i don't

1822
01:14:45,520 --> 01:14:47,679
because i haven't spent much time around

1823
01:14:47,679 --> 01:14:49,120
this one i just

1824
01:14:49,120 --> 01:14:51,600
put the time to digest this draft and

1825
01:14:51,600 --> 01:14:53,600
then prevent the draft

1826
01:14:53,600 --> 01:14:54,719
thank you

1827
01:14:54,719 --> 01:14:56,880
so before we have the first speaker come

1828
01:14:56,880 --> 01:14:58,400
up um

1829
01:14:58,400 --> 01:15:01,199
are the authors in the room

1830
01:15:01,199 --> 01:15:04,719
even if they're remote or virtual

1831
01:15:04,960 --> 01:15:08,239
and please uh step up there and help the

1832
01:15:08,239 --> 01:15:09,760
presenter and answering some of the

1833
01:15:09,760 --> 01:15:11,440
questions

1834
01:15:11,440 --> 01:15:12,400
go ahead

1835
01:15:12,400 --> 01:15:15,600
thanks uh anthony somerset liquid um

1836
01:15:15,600 --> 01:15:16,960
considering it's over quick and it's

1837
01:15:16,960 --> 01:15:18,800
over udp

1838
01:15:18,800 --> 01:15:21,239
and it's net conf i've got a few

1839
01:15:21,239 --> 01:15:24,239
reservations because of you know udp is

1840
01:15:24,239 --> 01:15:26,800
not like guaranteed reliable

1841
01:15:26,800 --> 01:15:30,480
yes quick is better than playing udp but

1842
01:15:30,480 --> 01:15:32,719
um the bit i wasn't seeing at least in

1843
01:15:32,719 --> 01:15:36,239
the draft was how we would necessarily

1844
01:15:36,239 --> 01:15:38,719
get that reliability of because of the

1845
01:15:38,719 --> 01:15:40,560
conflict that we might be sending or

1846
01:15:40,560 --> 01:15:43,199
receiving to ensure that it gets there

1847
01:15:43,199 --> 01:15:44,080
um

1848
01:15:44,080 --> 01:15:45,679
i haven't seen that and i think we would

1849
01:15:45,679 --> 01:15:48,800
need to address that

1850
01:15:48,800 --> 01:15:50,239
yeah i think that's a good question

1851
01:15:50,239 --> 01:15:53,679
whether a creek can provide

1852
01:15:53,679 --> 01:15:56,960
the same level of reliability as tcp

1853
01:15:56,960 --> 01:15:58,560
i think we can do some

1854
01:15:58,560 --> 01:16:00,960
search or research

1855
01:16:00,960 --> 01:16:02,560
i don't know whether the water i don't

1856
01:16:02,560 --> 01:16:05,040
think a water is uh in the

1857
01:16:05,040 --> 01:16:08,239
online right now

1858
01:16:11,120 --> 01:16:14,320
but quickly the connection rented a

1859
01:16:14,320 --> 01:16:16,880
protocol i think it should be

1860
01:16:16,880 --> 01:16:19,880
reliable

1861
01:16:21,920 --> 01:16:24,320
all right um so speaking as a

1862
01:16:24,320 --> 01:16:27,040
contributor

1863
01:16:27,280 --> 01:16:29,679
if in summary what i guess i'm gathering

1864
01:16:29,679 --> 01:16:31,440
from your presentation or the

1865
01:16:31,440 --> 01:16:33,760
presentation that you put forward is

1866
01:16:33,760 --> 01:16:36,159
really the change is only the inner

1867
01:16:36,159 --> 01:16:38,880
consideration page or the other protocol

1868
01:16:38,880 --> 01:16:40,640
considerations that

1869
01:16:40,640 --> 01:16:43,679
we need to think about

1870
01:16:44,400 --> 01:16:47,040
yeah i think so because this one you see

1871
01:16:47,040 --> 01:16:48,400
we already have a

1872
01:16:48,400 --> 01:16:50,960
click there and then we just about how

1873
01:16:50,960 --> 01:16:54,080
we use the light conf of quick is just

1874
01:16:54,080 --> 01:16:55,920
how we reuse

1875
01:16:55,920 --> 01:16:58,800
the quicker stuff

1876
01:16:58,800 --> 01:17:00,320
i think it looks like a pretty

1877
01:17:00,320 --> 01:17:02,080
straightforward pretty straightforward

1878
01:17:02,080 --> 01:17:03,440
and then we just

1879
01:17:03,440 --> 01:17:07,519
request some kind of code numbers there

1880
01:17:10,320 --> 01:17:12,480
well

1881
01:17:14,719 --> 01:17:17,199
so rob wilson cisco as a country uh i'd

1882
01:17:17,199 --> 01:17:19,199
like to say thank you for presenting if

1883
01:17:19,199 --> 01:17:21,199
you're not for the author of the draft

1884
01:17:21,199 --> 01:17:23,199
and i thank the authors um for bringing

1885
01:17:23,199 --> 01:17:24,960
this work to the working works i think

1886
01:17:24,960 --> 01:17:26,640
is interesting and useful

1887
01:17:26,640 --> 01:17:28,159
and i think certainly something that's

1888
01:17:28,159 --> 01:17:32,239
worth thinking about um

1889
01:17:32,239 --> 01:17:34,880
i can see potentially netconf over quick

1890
01:17:34,880 --> 01:17:36,400
could have some useful benefits

1891
01:17:36,400 --> 01:17:37,840
particularly in terms of the separate

1892
01:17:37,840 --> 01:17:41,040
streams but i'm not quite sure whether

1893
01:17:41,040 --> 01:17:42,719
uh the way that yang push is set up

1894
01:17:42,719 --> 01:17:44,719
today whether you'd actually really see

1895
01:17:44,719 --> 01:17:47,040
those benefits or not and in terms of

1896
01:17:47,040 --> 01:17:48,719
the separate streams for separate rpc

1897
01:17:48,719 --> 01:17:50,080
requests

1898
01:17:50,080 --> 01:17:51,760
again i'd imagine today a client would

1899
01:17:51,760 --> 01:17:54,000
just open up separate sessions and you

1900
01:17:54,000 --> 01:17:56,239
could coalesce those together

1901
01:17:56,239 --> 01:17:58,719
and avoid that but otherwise um often

1902
01:17:58,719 --> 01:18:00,159
with the netconf request you'd expect

1903
01:18:00,159 --> 01:18:01,840
them to be serialized like an edit

1904
01:18:01,840 --> 01:18:03,280
config request and then a get request

1905
01:18:03,280 --> 01:18:04,560
you expect those to be processed in

1906
01:18:04,560 --> 01:18:06,400
order and you might want to allow those

1907
01:18:06,400 --> 01:18:08,320
to go in parallel but there's other

1908
01:18:08,320 --> 01:18:10,480
considerations there which may mean that

1909
01:18:10,480 --> 01:18:12,320
that's not the right thing to do and if

1910
01:18:12,320 --> 01:18:13,600
you do need to do that having a separate

1911
01:18:13,600 --> 01:18:14,880
session sort of solves that problem

1912
01:18:14,880 --> 01:18:16,880
quite nicely so

1913
01:18:16,880 --> 01:18:18,000
um

1914
01:18:18,000 --> 01:18:20,000
another aspect to this is in terms of

1915
01:18:20,000 --> 01:18:22,320
the start-up time i can see for some

1916
01:18:22,320 --> 01:18:23,840
people that might be a little bit

1917
01:18:23,840 --> 01:18:24,880
helpful

1918
01:18:24,880 --> 01:18:27,360
but again in terms of the sort of

1919
01:18:27,360 --> 01:18:29,679
exchange of capabilities and things i'm

1920
01:18:29,679 --> 01:18:32,560
not sure you'd see that much benefit

1921
01:18:32,560 --> 01:18:35,120
so um later on there might be discussion

1922
01:18:35,120 --> 01:18:37,600
about where does netconf go and where

1923
01:18:37,600 --> 01:18:41,360
does rest conf go i wonder whether

1924
01:18:41,360 --> 01:18:43,600
quick is more better framed in that

1925
01:18:43,600 --> 01:18:46,000
discussion or like a future version of

1926
01:18:46,000 --> 01:18:48,000
of the protocols rather than necessarily

1927
01:18:48,000 --> 01:18:49,760
adding it to the current one whether

1928
01:18:49,760 --> 01:18:52,560
you'd actually get any real benefits

1929
01:18:52,560 --> 01:18:56,400
over just using tls anticipate

1930
01:18:56,400 --> 01:18:58,640
yeah i think a very available comment

1931
01:18:58,640 --> 01:19:02,000
and then also uh i would ask author

1932
01:19:02,000 --> 01:19:03,840
to consider

1933
01:19:03,840 --> 01:19:05,600
your suggestions and comments yeah very

1934
01:19:05,600 --> 01:19:09,159
good thank you

1935
01:19:12,239 --> 01:19:14,080
yeah thank you everyone for the valuable

1936
01:19:14,080 --> 01:19:16,800
comments and the suggestions okay

1937
01:19:16,800 --> 01:19:18,239
all right in light of the fact that i

1938
01:19:18,239 --> 01:19:20,320
think as rob mentioned maybe we might

1939
01:19:20,320 --> 01:19:22,400
want to consider this as

1940
01:19:22,400 --> 01:19:24,000
the part of

1941
01:19:24,000 --> 01:19:27,280
yeah rescant next and net continents

1942
01:19:27,280 --> 01:19:29,120
will skip the hum

1943
01:19:29,120 --> 01:19:31,280
on this draft

1944
01:19:31,280 --> 01:19:33,199
so the next presentation and the final

1945
01:19:33,199 --> 01:19:35,280
one actually not the final one but the

1946
01:19:35,280 --> 01:19:37,760
one is on tls

1947
01:19:37,760 --> 01:19:41,440
at conference tls 1.3

1948
01:19:48,320 --> 01:19:49,920
hi my name is sean turner it's nice to

1949
01:19:49,920 --> 01:19:52,000
see all of your masked faces up here

1950
01:19:52,000 --> 01:19:54,719
um all right so

1951
01:19:54,719 --> 01:19:58,000
that conf over tls 1.3 next

1952
01:19:58,000 --> 01:19:59,760
um the motivation here really is that i

1953
01:19:59,760 --> 01:20:01,760
deal with some very pedantic people and

1954
01:20:01,760 --> 01:20:03,120
they read some drafts and they're like

1955
01:20:03,120 --> 01:20:05,120
well that one says tls 1.2 what about

1956
01:20:05,120 --> 01:20:07,600
1.3 i'm like okay so we can write a

1957
01:20:07,600 --> 01:20:11,120
draft now the thing about tls 1.3

1958
01:20:11,120 --> 01:20:13,440
is that you can just kind of use it but

1959
01:20:13,440 --> 01:20:15,040
there's some there's some

1960
01:20:15,040 --> 01:20:16,639
differences that you need to deal with

1961
01:20:16,639 --> 01:20:18,400
the first is zero rtt

1962
01:20:18,400 --> 01:20:20,639
now what it says in the in the appendix

1963
01:20:20,639 --> 01:20:24,400
of um a46 is that like in absence of an

1964
01:20:24,400 --> 01:20:26,960
application layer proto protocol you

1965
01:20:26,960 --> 01:20:29,199
shouldn't use zero rtt which is zero

1966
01:20:29,199 --> 01:20:31,120
round trip um i think you guys know

1967
01:20:31,120 --> 01:20:32,800
about this it's in the rest conf draft

1968
01:20:32,800 --> 01:20:35,360
it's referred the whole nine yards

1969
01:20:35,360 --> 01:20:36,239
um

1970
01:20:36,239 --> 01:20:38,000
but i kind of figured it's better to be

1971
01:20:38,000 --> 01:20:40,400
explicit about this because people see

1972
01:20:40,400 --> 01:20:42,239
this as the go fast button and it's

1973
01:20:42,239 --> 01:20:44,000
actually got some problems and i'll get

1974
01:20:44,000 --> 01:20:47,120
into that in a second um and i also like

1975
01:20:47,120 --> 01:20:48,719
to stand on the shoulders of giants hold

1976
01:20:48,719 --> 01:20:50,320
on

1977
01:20:50,320 --> 01:20:51,360
sorry

1978
01:20:51,360 --> 01:20:54,000
um and so we decided to do was just base

1979
01:20:54,000 --> 01:20:56,960
it off uh 75.89 so we looked at the only

1980
01:20:56,960 --> 01:20:58,800
two things that we needed to talk about

1981
01:20:58,800 --> 01:21:00,800
to profile it which were zero rtt and

1982
01:21:00,800 --> 01:21:02,560
the cypher suites and everything else

1983
01:21:02,560 --> 01:21:04,880
says do what's in that draft so it's a

1984
01:21:04,880 --> 01:21:07,280
very simple draft it's very short

1985
01:21:07,280 --> 01:21:10,560
um we purposely decided not to update

1986
01:21:10,560 --> 01:21:12,800
75.89 because i didn't want to get into

1987
01:21:12,800 --> 01:21:14,800
the whole you got to pick this one this

1988
01:21:14,800 --> 01:21:16,639
is the mti over the other one it's just

1989
01:21:16,639 --> 01:21:18,960
kind of like you can implement it 1.2 is

1990
01:21:18,960 --> 01:21:20,320
out there for now i think it's going to

1991
01:21:20,320 --> 01:21:22,480
be around for a while but we did update

1992
01:21:22,480 --> 01:21:24,320
the iana registries to point to this

1993
01:21:24,320 --> 01:21:26,320
draft in case you wanted to do it so

1994
01:21:26,320 --> 01:21:27,840
just kind of like dotting us and

1995
01:21:27,840 --> 01:21:29,120
crossing t's

1996
01:21:29,120 --> 01:21:31,599
so next

1997
01:21:32,320 --> 01:21:34,480
so the next uh the big thing with zero

1998
01:21:34,480 --> 01:21:36,960
rtt so if you don't know about it it's a

1999
01:21:36,960 --> 01:21:39,199
way that allows you to send early data

2000
01:21:39,199 --> 01:21:41,360
um to clients or to the server in the

2001
01:21:41,360 --> 01:21:43,679
first flight now the way this works is

2002
01:21:43,679 --> 01:21:45,280
you basically go back to the server the

2003
01:21:45,280 --> 01:21:46,400
second time

2004
01:21:46,400 --> 01:21:48,000
but in the first exchange it's giving

2005
01:21:48,000 --> 01:21:49,679
you a pre-shared key

2006
01:21:49,679 --> 01:21:50,800
and so then you can use that to

2007
01:21:50,800 --> 01:21:52,719
basically protect the subsequent

2008
01:21:52,719 --> 01:21:56,480
messages it does make things faster

2009
01:21:56,480 --> 01:21:58,719
it can be loaded via

2010
01:21:58,719 --> 01:22:00,719
this exchange or it can be loaded out of

2011
01:22:00,719 --> 01:22:03,120
bands

2012
01:22:03,440 --> 01:22:04,560
there are some problems of course

2013
01:22:04,560 --> 01:22:06,960
because the data is replayable and so

2014
01:22:06,960 --> 01:22:09,199
that can cause some problems and again

2015
01:22:09,199 --> 01:22:11,199
the whole point is just to basically say

2016
01:22:11,199 --> 01:22:14,639
don't do it now on the rest comp um

2017
01:22:14,639 --> 01:22:15,920
draft i think there's also some

2018
01:22:15,920 --> 01:22:17,679
recommendations about not supporting

2019
01:22:17,679 --> 01:22:19,760
zero rtt this is just making it a little

2020
01:22:19,760 --> 01:22:21,040
stronger

2021
01:22:21,040 --> 01:22:22,159
and then the only other thing you need

2022
01:22:22,159 --> 01:22:24,400
to say about it in the draft is cipher

2023
01:22:24,400 --> 01:22:25,679
suites and the cipher suites are

2024
01:22:25,679 --> 01:22:27,679
specified slightly differently

2025
01:22:27,679 --> 01:22:29,120
and the mandatory to implement are a

2026
01:22:29,120 --> 01:22:31,280
little bit different um and they're all

2027
01:22:31,280 --> 01:22:33,679
forward secure so it kind of makes sense

2028
01:22:33,679 --> 01:22:35,920
to kind of move up to the next uh

2029
01:22:35,920 --> 01:22:37,199
level of

2030
01:22:37,199 --> 01:22:39,040
more modern cryptography

2031
01:22:39,040 --> 01:22:40,560
and that's really all that's in the

2032
01:22:40,560 --> 01:22:41,600
draft

2033
01:22:41,600 --> 01:22:43,120
and i'm asking for working group

2034
01:22:43,120 --> 01:22:45,599
adoption

2035
01:22:49,840 --> 01:22:52,159
all right i don't see anyone in the

2036
01:22:52,159 --> 01:22:53,679
queue

2037
01:22:53,679 --> 01:22:56,480
or maybe now

2038
01:22:57,120 --> 01:22:59,360
uh rob wilson cisco i think this is

2039
01:22:59,360 --> 01:23:01,280
really helpful to do so thank you for

2040
01:23:01,280 --> 01:23:02,960
taking the time to do this

2041
01:23:02,960 --> 01:23:04,880
and to explain it because i think it's

2042
01:23:04,880 --> 01:23:07,920
helpful for the world to sort of move

2043
01:23:07,920 --> 01:23:11,520
more towards tls 1.3 so um so i'm

2044
01:23:11,520 --> 01:23:13,520
definitely very supportive of this yeah

2045
01:23:13,520 --> 01:23:15,040
and again so the way i was always

2046
01:23:15,040 --> 01:23:17,280
thinking about this is we'd specify it

2047
01:23:17,280 --> 01:23:18,800
and if you were like no we want to put

2048
01:23:18,800 --> 01:23:20,239
in this other document or the next

2049
01:23:20,239 --> 01:23:22,080
version or whatever great the text is

2050
01:23:22,080 --> 01:23:23,840
there take it do it you see what you

2051
01:23:23,840 --> 01:23:25,040
want to do with it if you want to move

2052
01:23:25,040 --> 01:23:29,159
it forward with it that's great too

2053
01:23:34,080 --> 01:23:36,000
all right if there are no more comments

2054
01:23:36,000 --> 01:23:38,239
then we're going to

2055
01:23:38,239 --> 01:23:39,600
do a quick hum

2056
01:23:39,600 --> 01:23:40,880
on

2057
01:23:40,880 --> 01:23:43,199
whether we want to adopt this

2058
01:23:43,199 --> 01:23:47,400
document as a work group item

2059
01:23:52,080 --> 01:23:53,840
look that's like instant gratification i

2060
01:23:53,840 --> 01:23:57,480
can see it on the screen

2061
01:24:23,360 --> 01:24:24,880
all right i just went ahead and closed

2062
01:24:24,880 --> 01:24:26,800
the poll i think we have an overwhelming

2063
01:24:26,800 --> 01:24:28,560
response and

2064
01:24:28,560 --> 01:24:30,080
we'll take it to the mailing list to

2065
01:24:30,080 --> 01:24:32,239
confirm the adoption thanks sean thank

2066
01:24:32,239 --> 01:24:34,400
you

2067
01:24:38,320 --> 01:24:40,400
all right with that

2068
01:24:40,400 --> 01:24:43,520
um the final item on the agenda was

2069
01:24:43,520 --> 01:24:46,159
discussion on

2070
01:24:46,159 --> 01:24:49,839
rest content context

2071
01:24:57,440 --> 01:25:00,638
slide so we have something to look at

2072
01:25:04,320 --> 01:25:06,880
sorry ken

2073
01:25:08,960 --> 01:25:11,040
during the title the first flight of the

2074
01:25:11,040 --> 01:25:13,280
chair slides so there's something on the

2075
01:25:13,280 --> 01:25:15,120
screen

2076
01:25:15,120 --> 01:25:18,120
sure

2077
01:25:26,080 --> 01:25:28,159
so can't you want to kick off the

2078
01:25:28,159 --> 01:25:31,120
discussion audrey

2079
01:25:33,040 --> 01:25:34,880
yes sure um

2080
01:25:34,880 --> 01:25:35,920
of course

2081
01:25:35,920 --> 01:25:36,960
uh

2082
01:25:36,960 --> 01:25:40,719
yes so uh neck off next and breast conf

2083
01:25:40,719 --> 01:25:42,080
max there

2084
01:25:42,080 --> 01:25:42,800
are

2085
01:25:42,800 --> 01:25:44,239
issue trackers

2086
01:25:44,239 --> 01:25:46,320
in github for each of these

2087
01:25:46,320 --> 01:25:47,679
drives

2088
01:25:47,679 --> 01:25:51,360
and of course the thinking is well of

2089
01:25:51,360 --> 01:25:55,280
those issue trackers was to collect um

2090
01:25:55,280 --> 01:25:57,600
issues that you know we've discovered

2091
01:25:57,600 --> 01:25:58,880
over time

2092
01:25:58,880 --> 01:26:00,960
and ultimately roll them into the next

2093
01:26:00,960 --> 01:26:04,480
major versions of these protocols

2094
01:26:04,480 --> 01:26:06,799
and

2095
01:26:07,199 --> 01:26:09,600
the same time as this we're also

2096
01:26:09,600 --> 01:26:11,440
tracking issues in the net mod working

2097
01:26:11,440 --> 01:26:13,840
group on yang

2098
01:26:13,840 --> 01:26:16,880
yang next is the issue checker there

2099
01:26:16,880 --> 01:26:19,280
and

2100
01:26:19,360 --> 01:26:22,239
many more issues been filed on the yang

2101
01:26:22,239 --> 01:26:24,400
next issue tracker

2102
01:26:24,400 --> 01:26:26,480
and it goes without saying

2103
01:26:26,480 --> 01:26:28,800
that an update to yang

2104
01:26:28,800 --> 01:26:32,320
would necessitate an update to netkoff

2105
01:26:32,320 --> 01:26:34,080
and rescoff

2106
01:26:34,080 --> 01:26:37,440
to support that next version of yang

2107
01:26:37,440 --> 01:26:38,639
and so

2108
01:26:38,639 --> 01:26:40,560
i guess

2109
01:26:40,560 --> 01:26:42,239
the conversation is

2110
01:26:42,239 --> 01:26:43,760
do we want to

2111
01:26:43,760 --> 01:26:45,520
when when does the working group think

2112
01:26:45,520 --> 01:26:47,840
that we might have appetite for some of

2113
01:26:47,840 --> 01:26:49,120
this work

2114
01:26:49,120 --> 01:26:50,480
um

2115
01:26:50,480 --> 01:26:52,560
are there you know are we beginning to

2116
01:26:52,560 --> 01:26:53,920
feel like

2117
01:26:53,920 --> 01:26:56,000
the protocols are getting old

2118
01:26:56,000 --> 01:26:58,719
and we need to freshen them

2119
01:26:58,719 --> 01:27:01,440
sooner rather than later

2120
01:27:01,440 --> 01:27:03,600
i guess we're just curious as to

2121
01:27:03,600 --> 01:27:04,880
what people are thinking along these

2122
01:27:04,880 --> 01:27:07,120
lines

2123
01:27:10,960 --> 01:27:13,040
all right any comments on whether there

2124
01:27:13,040 --> 01:27:16,080
is interest in the work group to

2125
01:27:16,080 --> 01:27:17,840
see whether

2126
01:27:17,840 --> 01:27:20,880
protocols both rescue and next

2127
01:27:20,880 --> 01:27:22,480
and netcon

2128
01:27:22,480 --> 01:27:25,360
need a refresh

2129
01:27:25,520 --> 01:27:27,840
so um as the chairs know i when we

2130
01:27:27,840 --> 01:27:29,440
discussed this before the meeting i was

2131
01:27:29,440 --> 01:27:31,360
quite keen to have this discussion

2132
01:27:31,360 --> 01:27:32,400
um

2133
01:27:32,400 --> 01:27:33,840
and see there's feedback from the

2134
01:27:33,840 --> 01:27:35,760
working group about this sort of topic

2135
01:27:35,760 --> 01:27:37,440
so some of the things that i think are

2136
01:27:37,440 --> 01:27:38,800
interesting the quick that was just

2137
01:27:38,800 --> 01:27:39,920
presented

2138
01:27:39,920 --> 01:27:42,800
um is one option something's interesting

2139
01:27:42,800 --> 01:27:44,880
the other choices is in terms of netconf

2140
01:27:44,880 --> 01:27:47,199
being xml based whereas a lot of the

2141
01:27:47,199 --> 01:27:49,440
world's moving towards json or binary

2142
01:27:49,440 --> 01:27:51,440
encodings is that something we want to

2143
01:27:51,440 --> 01:27:52,480
consider

2144
01:27:52,480 --> 01:27:54,080
um and potentially updating the

2145
01:27:54,080 --> 01:27:56,080
protocols for i think there's other

2146
01:27:56,080 --> 01:27:58,880
areas of where um things like we have

2147
01:27:58,880 --> 01:28:01,199
the shared candidate data store do you

2148
01:28:01,199 --> 01:28:03,280
want to be trying to move away from that

2149
01:28:03,280 --> 01:28:04,960
and moving towards like private

2150
01:28:04,960 --> 01:28:07,199
candidates what's that sort of thing

2151
01:28:07,199 --> 01:28:09,199
um and there's other places in netcoff

2152
01:28:09,199 --> 01:28:11,120
where i think that the specification is

2153
01:28:11,120 --> 01:28:13,440
a bit ambiguous and could certainly be

2154
01:28:13,440 --> 01:28:15,760
clarified or simplified in places as

2155
01:28:15,760 --> 01:28:18,239
well so i think there is personally i

2156
01:28:18,239 --> 01:28:20,239
think the scope to do something here if

2157
01:28:20,239 --> 01:28:21,760
there's an appetite

2158
01:28:21,760 --> 01:28:23,120
within the working group to try and

2159
01:28:23,120 --> 01:28:25,199
actually drive this forward the obvious

2160
01:28:25,199 --> 01:28:26,400
question that

2161
01:28:26,400 --> 01:28:28,639
kent raised was about um

2162
01:28:28,639 --> 01:28:30,639
the dovetail with yang next and do we

2163
01:28:30,639 --> 01:28:32,320
need to wait for that to do that same

2164
01:28:32,320 --> 01:28:33,840
time which might take quite a long time

2165
01:28:33,840 --> 01:28:36,000
i'm not sure the the two necessarily

2166
01:28:36,000 --> 01:28:37,840
need to go hand in hand

2167
01:28:37,840 --> 01:28:39,679
but in the previous discussions there is

2168
01:28:39,679 --> 01:28:43,600
some work about moving some of the um

2169
01:28:43,600 --> 01:28:44,800
almost like the protocol stuff that's

2170
01:28:44,800 --> 01:28:47,520
documented in rfc 7950 potentially

2171
01:28:47,520 --> 01:28:49,280
moving that out so there is some sort of

2172
01:28:49,280 --> 01:28:50,719
cleanup work of course to be done at the

2173
01:28:50,719 --> 01:28:52,960
same time so i'm just i'm interested in

2174
01:28:52,960 --> 01:28:54,320
other people's thoughts on this matter

2175
01:28:54,320 --> 01:28:56,080
as anyone's willing to share them thank

2176
01:28:56,080 --> 01:28:58,239
you

2177
01:29:02,960 --> 01:29:04,239
jeff

2178
01:29:04,239 --> 01:29:06,239
jeff has uh

2179
01:29:06,239 --> 01:29:07,600
the thing that i would be interested in

2180
01:29:07,600 --> 01:29:08,880
seeing that being somebody that's

2181
01:29:08,880 --> 01:29:10,639
strongly following the netcave work but

2182
01:29:10,639 --> 01:29:12,080
is sort of soaking in the streaming

2183
01:29:12,080 --> 01:29:13,280
telemetry work in a couple different

2184
01:29:13,280 --> 01:29:14,800
forms right now

2185
01:29:14,800 --> 01:29:17,040
is again is rob saying

2186
01:29:17,040 --> 01:29:19,120
get away from the xmls the you know tool

2187
01:29:19,120 --> 01:29:20,480
that everybody likes to use get into

2188
01:29:20,480 --> 01:29:21,679
something that's more of a compact

2189
01:29:21,679 --> 01:29:23,600
binary form

2190
01:29:23,600 --> 01:29:24,560
uh

2191
01:29:24,560 --> 01:29:26,320
the phrase i sort of sling around work

2192
01:29:26,320 --> 01:29:28,639
these days is that printf and scanf are

2193
01:29:28,639 --> 01:29:30,880
not your friends you know the the cost

2194
01:29:30,880 --> 01:29:32,719
of those you know in terms of uh

2195
01:29:32,719 --> 01:29:35,280
serializing stuff and deserializing them

2196
01:29:35,280 --> 01:29:36,800
wastes a huge amount of time it wastes

2197
01:29:36,800 --> 01:29:39,600
much space things like ip address is an

2198
01:29:39,600 --> 01:29:40,719
example

2199
01:29:40,719 --> 01:29:42,159
just work to get that in and out of that

2200
01:29:42,159 --> 01:29:44,960
format for a large amount of data

2201
01:29:44,960 --> 01:29:47,280
so waste the cpu you know it'd be nice

2202
01:29:47,280 --> 01:29:48,480
to see something

2203
01:29:48,480 --> 01:29:50,560
you know as an example cbor being used

2204
01:29:50,560 --> 01:29:52,639
where we have a compact format uh nice

2205
01:29:52,639 --> 01:29:54,639
canonicalizations and it's realizes into

2206
01:29:54,639 --> 01:29:56,960
a small form

2207
01:29:56,960 --> 01:29:58,400
i think the interesting question i'd

2208
01:29:58,400 --> 01:30:01,520
have uh again being sort of a

2209
01:30:01,520 --> 01:30:03,520
couple steps remove participant is you

2210
01:30:03,520 --> 01:30:06,159
know what happens to yang as an example

2211
01:30:06,159 --> 01:30:07,040
yang

2212
01:30:07,040 --> 01:30:08,800
very much does its uh types right now

2213
01:30:08,800 --> 01:30:12,480
based off of regular expressions on

2214
01:30:12,480 --> 01:30:14,000
the actual ascii patterns that you

2215
01:30:14,000 --> 01:30:15,600
should print things as

2216
01:30:15,600 --> 01:30:17,040
what happens so you want to say well

2217
01:30:17,040 --> 01:30:19,760
this node is my type ip address

2218
01:30:19,760 --> 01:30:20,960
but you wanted to actually show up on

2219
01:30:20,960 --> 01:30:22,880
the wire in binary format what does that

2220
01:30:22,880 --> 01:30:24,400
do to your validators that sort of

2221
01:30:24,400 --> 01:30:27,400
question

2222
01:30:35,440 --> 01:30:38,400
so and jeff since you again speaking as

2223
01:30:38,400 --> 01:30:39,120
a

2224
01:30:39,120 --> 01:30:40,800
contributor

2225
01:30:40,800 --> 01:30:43,360
since you mentioned binary encoding and

2226
01:30:43,360 --> 01:30:45,760
there is an issue open on the issues

2227
01:30:45,760 --> 01:30:49,360
page if you could add your comments

2228
01:30:49,360 --> 01:30:52,880
to that that would be helpful

2229
01:30:57,199 --> 01:31:00,400
the quick protocol is also an issue open

2230
01:31:00,400 --> 01:31:02,960
on the issues page so as rob mentioned

2231
01:31:02,960 --> 01:31:07,120
maybe we should discuss that as part of

2232
01:31:07,120 --> 01:31:10,239
revving the protocol

2233
01:31:12,719 --> 01:31:14,800
some of the other areas that we're

2234
01:31:14,800 --> 01:31:17,199
looking at

2235
01:31:17,199 --> 01:31:20,320
and also documented as issues on the

2236
01:31:20,320 --> 01:31:23,360
page uh relate to a private candidate

2237
01:31:23,360 --> 01:31:24,560
data store

2238
01:31:24,560 --> 01:31:27,120
issue that i think rob just entered a

2239
01:31:27,120 --> 01:31:29,760
couple of days ago

2240
01:31:29,760 --> 01:31:32,639
there's some macam integration

2241
01:31:32,639 --> 01:31:35,280
improvement requests that andy has

2242
01:31:35,280 --> 01:31:37,920
indicated

2243
01:31:39,280 --> 01:31:41,360
and of course there's the json encoding

2244
01:31:41,360 --> 01:31:43,280
support in netcom which we might have to

2245
01:31:43,280 --> 01:31:44,800
think in light of the fact whether we

2246
01:31:44,800 --> 01:31:46,480
want to move towards a more binary

2247
01:31:46,480 --> 01:31:49,440
encoded format or whether we want to

2248
01:31:49,440 --> 01:31:52,320
support json

2249
01:31:56,840 --> 01:32:00,159
so the cleanup of the specification

2250
01:32:00,159 --> 01:32:02,000
relative to yang and xml i think this

2251
01:32:02,000 --> 01:32:03,280
was referred to

2252
01:32:03,280 --> 01:32:07,440
by rob again with respect to rfc 7950

2253
01:32:07,440 --> 01:32:09,360
where probably there are more references

2254
01:32:09,360 --> 01:32:10,719
to netconf

2255
01:32:10,719 --> 01:32:12,560
that probably should be taken out of

2256
01:32:12,560 --> 01:32:15,120
that document

2257
01:32:15,120 --> 01:32:16,480
so

2258
01:32:16,480 --> 01:32:17,760
overall

2259
01:32:17,760 --> 01:32:19,120
um

2260
01:32:19,120 --> 01:32:21,440
quite a few issues

2261
01:32:21,440 --> 01:32:23,760
the question is of how much interest

2262
01:32:23,760 --> 01:32:26,719
there is within the working group

2263
01:32:26,719 --> 01:32:30,560
to pursue this work

2264
01:32:30,880 --> 01:32:31,600
so

2265
01:32:31,600 --> 01:32:33,440
can't do you think

2266
01:32:33,440 --> 01:32:35,520
it would be helpful to try to get a poll

2267
01:32:35,520 --> 01:32:37,600
on

2268
01:32:37,600 --> 01:32:39,280
whether there's enough interest and then

2269
01:32:39,280 --> 01:32:41,199
of obviously who

2270
01:32:41,199 --> 01:32:43,440
if anyone is interested in picking up

2271
01:32:43,440 --> 01:32:45,840
some of the work

2272
01:32:45,840 --> 01:32:47,679
i think a poll would be good

2273
01:32:47,679 --> 01:32:50,159
but before getting to that with regards

2274
01:32:50,159 --> 01:32:53,600
to binary i'm almost wondering

2275
01:32:53,600 --> 01:32:56,239
if it's something that we need to do

2276
01:32:56,239 --> 01:32:58,480
at least in terms of

2277
01:32:58,480 --> 01:33:01,199
there's co-op and seabor already they

2278
01:33:01,199 --> 01:33:03,679
were created as effectively

2279
01:33:03,679 --> 01:33:08,719
binary versions of netcaf or restaurant

2280
01:33:08,719 --> 01:33:10,800
would does it make sense for netconf

2281
01:33:10,800 --> 01:33:13,120
working group to define another binary

2282
01:33:13,120 --> 01:33:14,400
protocol or

2283
01:33:14,400 --> 01:33:15,840
would that be the answer i can

2284
01:33:15,840 --> 01:33:17,440
understand fixing many of the other

2285
01:33:17,440 --> 01:33:19,600
issues and moving to json and things

2286
01:33:19,600 --> 01:33:21,199
like that but

2287
01:33:21,199 --> 01:33:23,280
for the binary is that something that we

2288
01:33:23,280 --> 01:33:26,080
think we should do here

2289
01:33:28,320 --> 01:33:31,280
i think we saw a few nodding of heads as

2290
01:33:31,280 --> 01:33:32,400
far as

2291
01:33:32,400 --> 01:33:37,520
um sibor is concerned but maybe rob

2292
01:33:37,520 --> 01:33:40,560
yes just for clarity i mean i think that

2293
01:33:40,560 --> 01:33:43,040
uh co-op aims to be really concise and

2294
01:33:43,040 --> 01:33:44,639
things in terms of its

2295
01:33:44,639 --> 01:33:46,800
format and things i wasn't necessarily

2296
01:33:46,800 --> 01:33:49,040
thinking that the messages had to be

2297
01:33:49,040 --> 01:33:50,880
necessarily defined in a binary format

2298
01:33:50,880 --> 01:33:52,400
but merely that the data that's been

2299
01:33:52,400 --> 01:33:55,040
carried uh being carried in like cbor

2300
01:33:55,040 --> 01:33:58,239
rather than xml or json and in

2301
01:33:58,239 --> 01:33:59,440
particular

2302
01:33:59,440 --> 01:34:01,040
my interest is in like the streaming

2303
01:34:01,040 --> 01:34:02,560
telemetry side of things we're getting

2304
01:34:02,560 --> 01:34:04,320
data off the device a lot of the data

2305
01:34:04,320 --> 01:34:05,920
there i think there's definitely

2306
01:34:05,920 --> 01:34:07,840
benefits to having that go in a binary

2307
01:34:07,840 --> 01:34:10,840
format

2308
01:34:23,520 --> 01:34:26,639
i would echo the seabor uh

2309
01:34:26,639 --> 01:34:28,960
what we said about cyborg and if at the

2310
01:34:28,960 --> 01:34:31,199
same time we can distance ourselves as

2311
01:34:31,199 --> 01:34:33,280
much as possible from google protobuf

2312
01:34:33,280 --> 01:34:36,400
that would be fantastic

2313
01:34:43,520 --> 01:34:46,880
so rob mentioned the stronger desire for

2314
01:34:46,880 --> 01:34:50,159
um when pushing telemetry data off box

2315
01:34:50,159 --> 01:34:52,239
and with the

2316
01:34:52,239 --> 01:34:54,639
notif you know the suite of notif drafts

2317
01:34:54,639 --> 01:34:55,679
that we're

2318
01:34:55,679 --> 01:34:57,119
planning to

2319
01:34:57,119 --> 01:35:00,560
publish so so far there's https notif

2320
01:35:00,560 --> 01:35:02,320
and udp notif

2321
01:35:02,320 --> 01:35:05,040
and uh it was discussed at the time that

2322
01:35:05,040 --> 01:35:07,360
we started creating these drafts that it

2323
01:35:07,360 --> 01:35:08,560
would be

2324
01:35:08,560 --> 01:35:11,040
ideal to create a binary notif of some

2325
01:35:11,040 --> 01:35:12,400
sort

2326
01:35:12,400 --> 01:35:15,360
you know for pushing um telemetry data

2327
01:35:15,360 --> 01:35:16,880
or gang push data

2328
01:35:16,880 --> 01:35:19,280
if if that were the only focus if it was

2329
01:35:19,280 --> 01:35:21,840
just the binary notif

2330
01:35:21,840 --> 01:35:25,760
would that resolve um like 80 or more of

2331
01:35:25,760 --> 01:35:28,080
the primary concern for wanting to move

2332
01:35:28,080 --> 01:35:30,719
to binary

2333
01:35:34,639 --> 01:35:36,880
all right

2334
01:35:37,360 --> 01:35:39,840
jeff has so uh kent the answer to your

2335
01:35:39,840 --> 01:35:41,600
question is it shouldn't matter if it's

2336
01:35:41,600 --> 01:35:43,679
the notification case or whether it's

2337
01:35:43,679 --> 01:35:45,280
the normal cases

2338
01:35:45,280 --> 01:35:47,119
you're going to want the

2339
01:35:47,119 --> 01:35:48,560
protocols to be able to deal with the

2340
01:35:48,560 --> 01:35:51,199
same binary format regardless of

2341
01:35:51,199 --> 01:35:53,440
you know which was being used for but

2342
01:35:53,440 --> 01:35:54,960
for the streaming telemetry it's

2343
01:35:54,960 --> 01:35:56,800
absolutely one of the core use cases i

2344
01:35:56,800 --> 01:35:58,560
think

2345
01:35:58,560 --> 01:36:00,400
effectively because

2346
01:36:00,400 --> 01:36:02,960
operations like gets for

2347
01:36:02,960 --> 01:36:05,040
simple operational things for small

2348
01:36:05,040 --> 01:36:06,080
tables

2349
01:36:06,080 --> 01:36:07,119
it doesn't really matter what the

2350
01:36:07,119 --> 01:36:09,040
encoding is it's a small amount of data

2351
01:36:09,040 --> 01:36:11,199
you don't burn a lot of cpu

2352
01:36:11,199 --> 01:36:13,360
but any case where you have large

2353
01:36:13,360 --> 01:36:15,760
amounts of data coming out like say

2354
01:36:15,760 --> 01:36:17,920
doing a get for the bgp rib you know

2355
01:36:17,920 --> 01:36:19,520
that's a huge amount of data being able

2356
01:36:19,520 --> 01:36:21,840
to minimize that time would be good

2357
01:36:21,840 --> 01:36:24,080
and if you have a streaming feed of like

2358
01:36:24,080 --> 01:36:26,320
hp routing state as an example

2359
01:36:26,320 --> 01:36:28,639
minimizing that's also a core use case

2360
01:36:28,639 --> 01:36:30,960
so i think to answer your question it

2361
01:36:30,960 --> 01:36:32,480
doesn't really matter

2362
01:36:32,480 --> 01:36:34,639
which is your use case

2363
01:36:34,639 --> 01:36:37,119
the telemetry feed will be sort of more

2364
01:36:37,119 --> 01:36:39,520
of a motivating use case i think but it

2365
01:36:39,520 --> 01:36:41,440
should apply across the board it's

2366
01:36:41,440 --> 01:36:44,000
common code

2367
01:36:47,119 --> 01:36:50,400
well i just as respond to that

2368
01:36:50,400 --> 01:36:52,239
i think it might be a great

2369
01:36:52,239 --> 01:36:54,960
simplification if we can just focus on a

2370
01:36:54,960 --> 01:36:57,679
binary notif form because um as

2371
01:36:57,679 --> 01:36:59,840
mentioned there's uh for instance udp

2372
01:36:59,840 --> 01:37:01,679
notice right so it's completely

2373
01:37:01,679 --> 01:37:03,920
different protocol but it doesn't affect

2374
01:37:03,920 --> 01:37:06,800
the configuration side of things um i

2375
01:37:06,800 --> 01:37:08,480
understand that through

2376
01:37:08,480 --> 01:37:11,040
uh netconf you know a client can you

2377
01:37:11,040 --> 01:37:13,840
know interactively request for the bgp

2378
01:37:13,840 --> 01:37:16,880
rib data and it would be a huge xml or

2379
01:37:16,880 --> 01:37:18,800
json response

2380
01:37:18,800 --> 01:37:21,520
but if we have binary notif and there

2381
01:37:21,520 --> 01:37:24,880
and the client is using yang push um

2382
01:37:24,880 --> 01:37:27,199
then then that would that's how they

2383
01:37:27,199 --> 01:37:29,679
would resolve that issue um so i don't

2384
01:37:29,679 --> 01:37:30,960
know i i think it warrants more

2385
01:37:30,960 --> 01:37:33,440
discussion thank you

2386
01:37:33,440 --> 01:37:35,119
just as a quick follow-up

2387
01:37:35,119 --> 01:37:37,199
if you think about printing any large

2388
01:37:37,199 --> 01:37:38,639
xml document

2389
01:37:38,639 --> 01:37:40,239
how much of the overhead is just simply

2390
01:37:40,239 --> 01:37:41,280
the tags

2391
01:37:41,280 --> 01:37:42,639
and that's the single biggest thing that

2392
01:37:42,639 --> 01:37:44,400
you get out of any of the binary formats

2393
01:37:44,400 --> 01:37:48,280
those things just drop out

2394
01:37:55,920 --> 01:37:59,760
did you want to prepare a poll

2395
01:37:59,760 --> 01:38:01,920
right so before actually we jump into

2396
01:38:01,920 --> 01:38:04,320
poll and there's one other topic i

2397
01:38:04,320 --> 01:38:07,119
briefly wanted to touch upon

2398
01:38:07,119 --> 01:38:10,480
is so one of the issues that um we

2399
01:38:10,480 --> 01:38:12,480
opened some time ago was around the

2400
01:38:12,480 --> 01:38:14,840
cleanup of hello message and

2401
01:38:14,840 --> 01:38:16,639
capability

2402
01:38:16,639 --> 01:38:18,480
in netconf

2403
01:38:18,480 --> 01:38:20,800
now

2404
01:38:20,800 --> 01:38:22,320
tied to that

2405
01:38:22,320 --> 01:38:25,840
is actually the work of yang library

2406
01:38:25,840 --> 01:38:28,639
and i think the the versioning scheme

2407
01:38:28,639 --> 01:38:30,800
mechanism i don't know if we have the

2408
01:38:30,800 --> 01:38:33,360
authors here but

2409
01:38:33,360 --> 01:38:35,199
was there any desire

2410
01:38:35,199 --> 01:38:37,040
to see

2411
01:38:37,040 --> 01:38:38,719
that maybe the

2412
01:38:38,719 --> 01:38:41,520
fellow exchange work is something that

2413
01:38:41,520 --> 01:38:43,679
needs cleanup

2414
01:38:43,679 --> 01:38:44,400
or

2415
01:38:44,400 --> 01:38:46,320
the fact that we want to use yang

2416
01:38:46,320 --> 01:38:48,080
library

2417
01:38:48,080 --> 01:38:51,840
as a way to improve what is exchanged at

2418
01:38:51,840 --> 01:38:55,159
hello time

2419
01:39:02,239 --> 01:39:05,759
i'll let jan speak to this first and

2420
01:39:10,840 --> 01:39:15,040
then uh yen you might want to

2421
01:39:15,040 --> 01:39:16,480
unmute your

2422
01:39:16,480 --> 01:39:19,119
microphone

2423
01:39:20,639 --> 01:39:24,840
or we can't hear you

2424
01:39:28,560 --> 01:39:30,719
okay we still have a few microphone

2425
01:39:30,719 --> 01:39:34,400
issues can you try speaking again

2426
01:39:36,480 --> 01:39:39,480
no

2427
01:39:40,080 --> 01:39:42,239
okay you might just put some comment on

2428
01:39:42,239 --> 01:39:43,920
the key in the queue

2429
01:39:43,920 --> 01:39:46,719
yeah or type into the chat window

2430
01:39:46,719 --> 01:39:48,960
sorry

2431
01:39:51,280 --> 01:39:53,199
so while jan's doing that

2432
01:39:53,199 --> 01:39:54,800
robots in cisco so

2433
01:39:54,800 --> 01:39:56,880
we certainly discussed this in the

2434
01:39:56,880 --> 01:39:58,639
context of yang packages and the

2435
01:39:58,639 --> 01:40:00,239
versioning work so it's a good good

2436
01:40:00,239 --> 01:40:02,400
thing to raise this and

2437
01:40:02,400 --> 01:40:04,800
um i know that yan is concerned that we

2438
01:40:04,800 --> 01:40:06,080
seem to have lots of different

2439
01:40:06,080 --> 01:40:08,719
mechanisms for exchanging things like

2440
01:40:08,719 --> 01:40:10,800
yang library data and which models are

2441
01:40:10,800 --> 01:40:12,480
being supported and

2442
01:40:12,480 --> 01:40:14,400
and there's different other cases where

2443
01:40:14,400 --> 01:40:15,679
you sort of exchange these lists of

2444
01:40:15,679 --> 01:40:17,840
models the idea with young packages it

2445
01:40:17,840 --> 01:40:19,360
sort of simplifies that and it stops you

2446
01:40:19,360 --> 01:40:20,880
having to exchange this long list of

2447
01:40:20,880 --> 01:40:22,400
young modules you can just exchange a

2448
01:40:22,400 --> 01:40:24,159
reference to that but it does become

2449
01:40:24,159 --> 01:40:27,440
another mechanism so i think that yes if

2450
01:40:27,440 --> 01:40:28,719
we were doing a new version of the

2451
01:40:28,719 --> 01:40:30,880
protocol and yang patches was completed

2452
01:40:30,880 --> 01:40:32,960
in that time it would make sense to try

2453
01:40:32,960 --> 01:40:35,199
and use that as the mechanism to say

2454
01:40:35,199 --> 01:40:37,440
this is the sport supported schema for

2455
01:40:37,440 --> 01:40:39,040
the device

2456
01:40:39,040 --> 01:40:40,480
and try and simplify some of those

2457
01:40:40,480 --> 01:40:41,679
mechanisms so i think that would be

2458
01:40:41,679 --> 01:40:43,760
useful and sort of cut back on the

2459
01:40:43,760 --> 01:40:45,199
proliferation

2460
01:40:45,199 --> 01:40:46,719
and then that agrees with what yan

2461
01:40:46,719 --> 01:40:49,719
thinks

2462
01:40:57,119 --> 01:40:59,280
okay so before we go to the poll any

2463
01:40:59,280 --> 01:41:04,040
more comments or questions

2464
01:41:06,239 --> 01:41:09,040
all right thomas

2465
01:41:12,000 --> 01:41:13,600
thomas from swisscom

2466
01:41:13,600 --> 01:41:16,000
maybe regarding the notification message

2467
01:41:16,000 --> 01:41:18,400
header suggestion that

2468
01:41:18,400 --> 01:41:19,679
we are

2469
01:41:19,679 --> 01:41:22,719
adding also the the x-pass the young

2470
01:41:22,719 --> 01:41:24,880
model and the versioning aspect there so

2471
01:41:24,880 --> 01:41:26,880
if you're talking to

2472
01:41:26,880 --> 01:41:28,320
make it binary that would be very

2473
01:41:28,320 --> 01:41:29,280
helpful

2474
01:41:29,280 --> 01:41:32,280
okay

2475
01:41:36,400 --> 01:41:38,800
just make sure you add it to the notes

2476
01:41:38,800 --> 01:41:41,520
page also

2477
01:41:42,320 --> 01:41:46,920
so i'll go ahead and start the poll

2478
01:42:38,560 --> 01:42:40,480
okay let's go ahead and i'll end the

2479
01:42:40,480 --> 01:42:43,480
session

2480
01:42:51,679 --> 01:42:54,560
thanks mahash so benua clay's answer yes

2481
01:42:54,560 --> 01:42:56,719
right but actually i'm not interested in

2482
01:42:56,719 --> 01:42:57,920
everything

2483
01:42:57,920 --> 01:42:59,840
so i'm interested into you know the

2484
01:42:59,840 --> 01:43:01,920
binary encoding and the header and some

2485
01:43:01,920 --> 01:43:03,520
of these so i was not too sure what to

2486
01:43:03,520 --> 01:43:04,560
answer

2487
01:43:04,560 --> 01:43:06,720
so i said yes

2488
01:43:06,720 --> 01:43:11,420
[Laughter]

2489
01:43:17,119 --> 01:43:20,000
i also think that these issues could be

2490
01:43:20,000 --> 01:43:21,360
hand

2491
01:43:21,360 --> 01:43:24,000
handled one by one as opposed to yang

2492
01:43:24,000 --> 01:43:25,119
where

2493
01:43:25,119 --> 01:43:27,360
we have big issues that need a second

2494
01:43:27,360 --> 01:43:30,080
revision i see this more as additions

2495
01:43:30,080 --> 01:43:34,239
than the revamp of the system

2496
01:43:37,600 --> 01:43:39,199
okay so

2497
01:43:39,199 --> 01:43:41,600
um so just quickly going back to the

2498
01:43:41,600 --> 01:43:44,159
poll uh even though it was generic and

2499
01:43:44,159 --> 01:43:48,400
applied to almost all the open issues um

2500
01:43:48,400 --> 01:43:51,520
we still had a fairly positive response

2501
01:43:51,520 --> 01:43:54,159
so the question i think which is being

2502
01:43:54,159 --> 01:43:55,600
raised is

2503
01:43:55,600 --> 01:43:57,840
are there more specific hot button

2504
01:43:57,840 --> 01:44:00,400
issues that need to be addressed before

2505
01:44:00,400 --> 01:44:02,880
others

2506
01:44:02,880 --> 01:44:04,960
and that's something i think we can take

2507
01:44:04,960 --> 01:44:08,320
as a poll also on the mailing list

2508
01:44:08,320 --> 01:44:10,000
we could certainly try to go through a

2509
01:44:10,000 --> 01:44:13,119
whole process but may not get a sense

2510
01:44:13,119 --> 01:44:15,280
so

2511
01:44:15,280 --> 01:44:18,000
maybe kent and i will discuss this and

2512
01:44:18,000 --> 01:44:20,480
bring it forth in the

2513
01:44:20,480 --> 01:44:22,000
group mailing list to see if there are

2514
01:44:22,000 --> 01:44:24,080
any specific issues

2515
01:44:24,080 --> 01:44:26,080
that we might want to address before

2516
01:44:26,080 --> 01:44:27,119
others

2517
01:44:27,119 --> 01:44:30,000
ken what do you think

2518
01:44:32,159 --> 01:44:36,000
um and i was actually i have to um come

2519
01:44:36,000 --> 01:44:37,679
clean i did not reply to that poll i

2520
01:44:37,679 --> 01:44:39,440
didn't know how to

2521
01:44:39,440 --> 01:44:40,960
either um

2522
01:44:40,960 --> 01:44:43,040
it i guess really i was thinking the

2523
01:44:43,040 --> 01:44:45,679
poll is you know do we start to work now

2524
01:44:45,679 --> 01:44:48,400
or you know if we know that the uh yang

2525
01:44:48,400 --> 01:44:50,719
next is looming um and it's

2526
01:44:50,719 --> 01:44:52,719
necessitating a change in netconf and

2527
01:44:52,719 --> 01:44:55,840
rescoff already do we have to block for

2528
01:44:55,840 --> 01:44:58,880
uh the yang next work to you know

2529
01:44:58,880 --> 01:44:59,920
complete

2530
01:44:59,920 --> 01:45:02,000
or um you know move forward and i guess

2531
01:45:02,000 --> 01:45:03,920
your proposal is let's see if we can

2532
01:45:03,920 --> 01:45:06,320
find some items to move forward now

2533
01:45:06,320 --> 01:45:07,920
which makes sense

2534
01:45:07,920 --> 01:45:11,040
and uh of course anyone is welcome to

2535
01:45:11,040 --> 01:45:13,040
write a draft to

2536
01:45:13,040 --> 01:45:15,360
move any of those items forward

2537
01:45:15,360 --> 01:45:18,480
when possible that'd be great

2538
01:45:22,159 --> 01:45:24,159
ron

2539
01:45:24,159 --> 01:45:26,320
robertson cisco so

2540
01:45:26,320 --> 01:45:28,400
um so there were some

2541
01:45:28,400 --> 01:45:30,239
poll votes against doing this work it'd

2542
01:45:30,239 --> 01:45:32,159
be interesting for those people if they

2543
01:45:32,159 --> 01:45:33,760
have a chance to either put a comment in

2544
01:45:33,760 --> 01:45:36,000
the chat or come up to the mic and

2545
01:45:36,000 --> 01:45:37,040
explain

2546
01:45:37,040 --> 01:45:38,560
why they think we shouldn't be doing

2547
01:45:38,560 --> 01:45:39,920
this that would be really helpful i

2548
01:45:39,920 --> 01:45:41,520
think i don't know that's aligns to

2549
01:45:41,520 --> 01:45:43,600
bellagio's comments maybe in terms of be

2550
01:45:43,600 --> 01:45:45,040
able to split the work up but if there's

2551
01:45:45,040 --> 01:45:46,400
anyone that wants to share their

2552
01:45:46,400 --> 01:45:48,080
thoughts as to why we shouldn't be doing

2553
01:45:48,080 --> 01:45:51,199
that that'd be useful to hear

2554
01:45:51,360 --> 01:45:54,159
good point drum

2555
01:45:56,400 --> 01:45:59,280
so for those who did not raise their

2556
01:45:59,280 --> 01:46:00,560
hand

2557
01:46:00,560 --> 01:46:02,159
either because they were confused about

2558
01:46:02,159 --> 01:46:04,880
the question or um one

2559
01:46:04,880 --> 01:46:08,400
did have specific views on why maybe the

2560
01:46:08,400 --> 01:46:10,840
work should not be

2561
01:46:10,840 --> 01:46:13,520
pursued i would love to hear from you

2562
01:46:13,520 --> 01:46:16,520
too

2563
01:46:36,800 --> 01:46:39,280
okay so i see a comment from yan

2564
01:46:39,280 --> 01:46:41,360
who says there are currently three

2565
01:46:41,360 --> 01:46:44,080
mechanisms defined for clients to figure

2566
01:46:44,080 --> 01:46:45,040
out

2567
01:46:45,040 --> 01:46:48,000
which modules the server supports

2568
01:46:48,000 --> 01:46:49,840
then he goes on to say i think a couple

2569
01:46:49,840 --> 01:46:51,840
of the next issues might be worth

2570
01:46:51,840 --> 01:46:53,199
working on

2571
01:46:53,199 --> 01:46:55,600
is that a yes or no

2572
01:46:55,600 --> 01:46:57,520
maybe a poll for individual proposals

2573
01:46:57,520 --> 01:46:59,840
might be more interesting than a yes no

2574
01:46:59,840 --> 01:47:02,159
global answer

2575
01:47:02,159 --> 01:47:04,480
so he was one of the ones who

2576
01:47:04,480 --> 01:47:06,080
posted

2577
01:47:06,080 --> 01:47:09,840
did not raise his hands

2578
01:47:29,199 --> 01:47:32,000
all right unless there is

2579
01:47:32,000 --> 01:47:35,199
um there are any more comments um we can

2580
01:47:35,199 --> 01:47:38,239
go ahead and close the session we will

2581
01:47:38,239 --> 01:47:39,679
take this

2582
01:47:39,679 --> 01:47:40,400
to

2583
01:47:40,400 --> 01:47:41,760
um

2584
01:47:41,760 --> 01:47:43,440
the mailing list

2585
01:47:43,440 --> 01:47:45,280
the question of

2586
01:47:45,280 --> 01:47:48,080
whether we are in any way tied to yang

2587
01:47:48,080 --> 01:47:50,400
next we should be wait for it or maybe

2588
01:47:50,400 --> 01:47:52,560
pick up some of the items

2589
01:47:52,560 --> 01:47:55,600
uh more heartburn issues as what we want

2590
01:47:55,600 --> 01:47:57,920
to start our work off with

2591
01:47:57,920 --> 01:47:59,199
so

2592
01:47:59,199 --> 01:48:00,880
right if there's

2593
01:48:00,880 --> 01:48:03,920
nothing else thanks everyone

2594
01:48:03,920 --> 01:48:06,159
for attending the session and hope to

2595
01:48:06,159 --> 01:48:09,638
see you guys soon

2596
01:48:45,360 --> 01:48:48,360
plus

2597
01:50:10,530 --> 01:50:13,740
[Music]

