1
00:00:12,000 --> 00:00:13,519
that's just like

2
00:00:13,519 --> 00:00:16,640
daniel and christina did at oauth

3
00:00:16,640 --> 00:00:19,199
yesterday

4
00:00:21,600 --> 00:00:24,560
okay is this the agenda

5
00:00:24,560 --> 00:00:28,160
yeah no no

6
00:00:28,160 --> 00:00:29,519
okay

7
00:00:29,519 --> 00:00:33,039
so the first is harness

8
00:00:33,280 --> 00:00:35,360
the hpk

9
00:00:35,360 --> 00:00:36,399
okay

10
00:00:36,399 --> 00:00:38,160
i will be able to switch between these

11
00:00:38,160 --> 00:00:42,440
and know what to project next

12
00:00:48,320 --> 00:00:51,320
meetings

13
00:01:06,400 --> 00:01:09,119
so welcome to jose we'll give people

14
00:01:09,119 --> 00:01:12,400
just a couple minutes um

15
00:01:12,400 --> 00:01:14,960
but um for instance maybe we can look at

16
00:01:14,960 --> 00:01:19,360
the notewell slide while we're waiting

17
00:01:22,560 --> 00:01:25,720
i guess

18
00:01:26,640 --> 00:01:29,439
are you able to advance the slides no no

19
00:01:29,439 --> 00:01:31,920
you can try to give me the control of

20
00:01:31,920 --> 00:01:34,920
them

21
00:01:58,799 --> 00:02:00,799
when i see i can file the control to

22
00:02:00,799 --> 00:02:03,759
other people but not for myself

23
00:02:03,759 --> 00:02:04,719
i mean

24
00:02:04,719 --> 00:02:06,960
obviously i can just share dislikes

25
00:02:06,960 --> 00:02:09,519
myself

26
00:02:29,120 --> 00:02:34,040
myself so that i can control them

27
00:02:36,160 --> 00:02:39,160
um

28
00:03:16,840 --> 00:03:20,480
okay so hello everyone we will be

29
00:03:20,480 --> 00:03:23,440
getting started

30
00:03:23,440 --> 00:03:25,920
uh this is the

31
00:03:25,920 --> 00:03:29,200
this is the cozy meeting

32
00:03:29,200 --> 00:03:32,239
for this itf if you are in the wrong

33
00:03:32,239 --> 00:03:34,159
room

34
00:03:34,159 --> 00:03:36,080
you are welcome to stay

35
00:03:36,080 --> 00:03:39,680
so this is our not well it applies for

36
00:03:39,680 --> 00:03:40,400
all

37
00:03:40,400 --> 00:03:42,640
and the meetings please take a look at

38
00:03:42,640 --> 00:03:45,599
it if you haven't done that already

39
00:03:45,599 --> 00:03:46,400
and

40
00:03:46,400 --> 00:03:48,959
if you have any questions please

41
00:03:48,959 --> 00:03:51,519
talk to us or anyone

42
00:03:51,519 --> 00:03:54,000
maybe the idea before participating in

43
00:03:54,000 --> 00:03:55,920
discussions

44
00:03:55,920 --> 00:03:59,439
we live by our code of conduct please

45
00:03:59,439 --> 00:04:01,519
take a look at it

46
00:04:01,519 --> 00:04:04,159
i know we have been

47
00:04:04,159 --> 00:04:07,040
circled quite a bit during this idea but

48
00:04:07,040 --> 00:04:08,879
it's important to

49
00:04:08,879 --> 00:04:12,480
make yourself familiar with it

50
00:04:12,640 --> 00:04:17,279
and this is the administrative part we

51
00:04:17,279 --> 00:04:21,279
have our minutes at the following qrl

52
00:04:21,279 --> 00:04:23,919
uh who will be willing to help with the

53
00:04:23,919 --> 00:04:26,400
minutes

54
00:04:26,720 --> 00:04:28,720
okay marco

55
00:04:28,720 --> 00:04:31,759
thank you if anyone wants to be helping

56
00:04:31,759 --> 00:04:34,800
that will be really appreciated

57
00:04:34,800 --> 00:04:37,120
and for jabber

58
00:04:37,120 --> 00:04:39,919
and john i think

59
00:04:39,919 --> 00:04:42,880
you said you can help right okay thank

60
00:04:42,880 --> 00:04:44,560
you john

61
00:04:44,560 --> 00:04:46,400
and uh

62
00:04:46,400 --> 00:04:47,360
here is

63
00:04:47,360 --> 00:04:49,360
our agenda

64
00:04:49,360 --> 00:04:53,120
uh it changed a bit since the original

65
00:04:53,120 --> 00:04:56,479
upload on data tracker so i made that

66
00:04:56,479 --> 00:04:58,880
visible here

67
00:04:58,880 --> 00:05:01,280
is there any bashing of

68
00:05:01,280 --> 00:05:04,080
our agenda

69
00:05:07,759 --> 00:05:10,560
i'll take that as a no

70
00:05:10,560 --> 00:05:12,000
then we can

71
00:05:12,000 --> 00:05:15,840
start with the document status

72
00:05:15,840 --> 00:05:17,050
so and

73
00:05:17,050 --> 00:05:18,160
[Music]

74
00:05:18,160 --> 00:05:21,520
we have the following documents that are

75
00:05:21,520 --> 00:05:25,680
passed working group last call um

76
00:05:25,680 --> 00:05:29,039
the first one is the hash algorithms as

77
00:05:29,039 --> 00:05:33,039
far as i'm aware there are no pending

78
00:05:33,039 --> 00:05:36,160
changes or no pending action items it's

79
00:05:36,160 --> 00:05:38,720
just waiting for the other documents in

80
00:05:38,720 --> 00:05:41,759
the cluster to be ready before getting

81
00:05:41,759 --> 00:05:43,280
published

82
00:05:43,280 --> 00:05:45,120
and then for the

83
00:05:45,120 --> 00:05:49,440
auth 48 documents

84
00:05:49,540 --> 00:05:51,120
[Music]

85
00:05:51,120 --> 00:05:52,479
we have

86
00:05:52,479 --> 00:05:54,160
a few

87
00:05:54,160 --> 00:05:58,160
iterations done recently i believe

88
00:05:58,160 --> 00:06:00,319
all the comments that were

89
00:06:00,319 --> 00:06:03,680
raised were handled uh i know

90
00:06:03,680 --> 00:06:06,479
some participants wanted to do one final

91
00:06:06,479 --> 00:06:09,280
pass through the documents but

92
00:06:09,280 --> 00:06:11,600
other than that

93
00:06:11,600 --> 00:06:14,880
they should be good to go

94
00:06:16,880 --> 00:06:18,160
then

95
00:06:18,160 --> 00:06:21,440
next is the x509

96
00:06:21,440 --> 00:06:23,840
and document

97
00:06:23,840 --> 00:06:24,800
i think

98
00:06:24,800 --> 00:06:28,160
paul we should chat how to how to upload

99
00:06:28,160 --> 00:06:29,840
the new revision

100
00:06:29,840 --> 00:06:32,840
um

101
00:06:36,880 --> 00:06:38,319
yes

102
00:06:38,319 --> 00:06:39,360
okay

103
00:06:39,360 --> 00:06:40,720
and

104
00:06:40,720 --> 00:06:42,880
yes then the

105
00:06:42,880 --> 00:06:46,319
final of those documents is the

106
00:06:46,319 --> 00:06:48,639
counter sign document

107
00:06:48,639 --> 00:06:51,120
i saw that

108
00:06:51,120 --> 00:06:52,880
the responsibility

109
00:06:52,880 --> 00:06:55,680
did the review and it is now in last

110
00:06:55,680 --> 00:06:58,000
call

111
00:06:58,319 --> 00:07:01,440
uh paul voters 80 um i just wanted to

112
00:07:01,440 --> 00:07:03,840
let you know that um i i'm i'm new at

113
00:07:03,840 --> 00:07:05,840
the ad role this is my first full-time

114
00:07:05,840 --> 00:07:09,840
uh itaf at the sd that's the ad

115
00:07:09,840 --> 00:07:11,360
and about half the people who've

116
00:07:11,360 --> 00:07:13,120
approached me so far are approaching me

117
00:07:13,120 --> 00:07:15,759
about this cluster of four documents

118
00:07:15,759 --> 00:07:18,000
that are waiting for a very very long

119
00:07:18,000 --> 00:07:18,880
time

120
00:07:18,880 --> 00:07:22,319
and sort of ping-ponging between karsten

121
00:07:22,319 --> 00:07:23,360
ben

122
00:07:23,360 --> 00:07:27,440
uh and uh and the rfc editor um

123
00:07:27,440 --> 00:07:30,400
we really need to get this out so so

124
00:07:30,400 --> 00:07:31,360
so

125
00:07:31,360 --> 00:07:33,840
i don't know what i can do anymore

126
00:07:33,840 --> 00:07:35,680
because i already sort of tried to give

127
00:07:35,680 --> 00:07:37,280
you deadlines to get this cluster out

128
00:07:37,280 --> 00:07:38,800
because there's really a lot of people

129
00:07:38,800 --> 00:07:41,120
both inside the idf and outside the iitf

130
00:07:41,120 --> 00:07:42,880
waiting on these documents to get our

131
00:07:42,880 --> 00:07:44,479
synonyms to god so

132
00:07:44,479 --> 00:07:45,840
um

133
00:07:45,840 --> 00:07:48,479
i'm thinking of in about two weeks to

134
00:07:48,479 --> 00:07:50,960
just push the button to the rc editor to

135
00:07:50,960 --> 00:07:52,560
say publish this i don't care anymore

136
00:07:52,560 --> 00:07:54,560
what the status is so

137
00:07:54,560 --> 00:07:57,599
please get carson or whoever needs to do

138
00:07:57,599 --> 00:07:59,599
things to do them in the next two weeks

139
00:07:59,599 --> 00:08:03,039
so that we can get these documents done

140
00:08:03,520 --> 00:08:05,919
i suspect ben cadek is on the queue to

141
00:08:05,919 --> 00:08:08,319
talk about this very thing i recognized

142
00:08:08,319 --> 00:08:09,440
ben

143
00:08:09,440 --> 00:08:13,039
yes uh sorry i was a couple minutes late

144
00:08:13,039 --> 00:08:15,039
late joining but i wanted to be here to

145
00:08:15,039 --> 00:08:18,879
be able to speak to this topic and so

146
00:08:18,879 --> 00:08:20,479
um

147
00:08:20,479 --> 00:08:23,520
i did send some updates to the rc editor

148
00:08:23,520 --> 00:08:26,160
based on essentially a full review of

149
00:08:26,160 --> 00:08:26,960
the

150
00:08:26,960 --> 00:08:28,400
text

151
00:08:28,400 --> 00:08:29,360
and

152
00:08:29,360 --> 00:08:31,599
i looked over the resulting diffs and

153
00:08:31,599 --> 00:08:33,200
they're they're basically good uh

154
00:08:33,200 --> 00:08:36,399
karsten spotted a duplicate word

155
00:08:36,399 --> 00:08:40,559
we had the dreaded the the going on and

156
00:08:40,559 --> 00:08:41,599
i think

157
00:08:41,599 --> 00:08:44,080
there's like one other cosmetic tweak

158
00:08:44,080 --> 00:08:45,600
that i know of

159
00:08:45,600 --> 00:08:47,600
and the only other

160
00:08:47,600 --> 00:08:49,920
thing that i still need to track down is

161
00:08:49,920 --> 00:08:51,279
just the

162
00:08:51,279 --> 00:08:54,959
specific numbers on the aead usage

163
00:08:54,959 --> 00:08:56,160
values

164
00:08:56,160 --> 00:08:58,880
and so i'm thinking that the

165
00:08:58,880 --> 00:09:00,560
two week time frame

166
00:09:00,560 --> 00:09:04,000
should be reasonable here

167
00:09:04,160 --> 00:09:06,640
i also had a list of

168
00:09:06,640 --> 00:09:08,720
open issues or potential open issues

169
00:09:08,720 --> 00:09:11,839
that i sent to the auth 48 thread

170
00:09:11,839 --> 00:09:13,760
and i was hoping to get some more input

171
00:09:13,760 --> 00:09:15,839
from other people on them because my

172
00:09:15,839 --> 00:09:17,839
proposed resolution was basically don't

173
00:09:17,839 --> 00:09:19,040
do anything

174
00:09:19,040 --> 00:09:21,120
for almost all of them

175
00:09:21,120 --> 00:09:23,360
so if the the chairs or kirsten or

176
00:09:23,360 --> 00:09:26,000
somebody wanted to chime in on that

177
00:09:26,000 --> 00:09:27,279
or if somebody else from the working

178
00:09:27,279 --> 00:09:28,720
group thinks that they have some good

179
00:09:28,720 --> 00:09:30,959
insight i'm happy to send that list out

180
00:09:30,959 --> 00:09:32,800
more broadly

181
00:09:32,800 --> 00:09:35,279
so i think the only other point i want

182
00:09:35,279 --> 00:09:37,920
to add is for paul

183
00:09:37,920 --> 00:09:40,560
and just to

184
00:09:40,560 --> 00:09:43,040
check basically that

185
00:09:43,040 --> 00:09:44,800
some of the changes that were made in

186
00:09:44,800 --> 00:09:47,360
auth48 were of this heart that would

187
00:09:47,360 --> 00:09:49,279
require ad approval

188
00:09:49,279 --> 00:09:51,040
as potential

189
00:09:51,040 --> 00:09:53,200
content changes basically

190
00:09:53,200 --> 00:09:55,839
and so if you could also take those two

191
00:09:55,839 --> 00:09:57,920
weeks to confirm that

192
00:09:57,920 --> 00:09:59,279
you've looked those over and you don't

193
00:09:59,279 --> 00:10:00,720
have any concerns that you want to push

194
00:10:00,720 --> 00:10:01,920
back on

195
00:10:01,920 --> 00:10:03,279
that would be helpful to make sure we

196
00:10:03,279 --> 00:10:04,560
can actually publish at the end of the

197
00:10:04,560 --> 00:10:06,480
two weeks

198
00:10:06,480 --> 00:10:09,120
while speaking yes i will i will do that

199
00:10:09,120 --> 00:10:11,360
thanks

200
00:10:12,720 --> 00:10:15,279
and i'll thank uh kirsten again for his

201
00:10:15,279 --> 00:10:19,360
help and looking over many aspects of it

202
00:10:19,360 --> 00:10:20,880
yeah thank you

203
00:10:20,880 --> 00:10:23,680
ben and karsten for your diligence as

204
00:10:23,680 --> 00:10:27,600
well as evo in moving this forward

205
00:10:27,600 --> 00:10:28,560
um

206
00:10:28,560 --> 00:10:29,440
i see

207
00:10:29,440 --> 00:10:31,839
marco in the queue yeah hi this is marco

208
00:10:31,839 --> 00:10:33,440
just a comment on the counter sign

209
00:10:33,440 --> 00:10:35,519
document please just a comment on the

210
00:10:35,519 --> 00:10:37,440
counter sign document i noticed the

211
00:10:37,440 --> 00:10:39,839
latest revision in section three refers

212
00:10:39,839 --> 00:10:41,760
a course document

213
00:10:41,760 --> 00:10:43,920
and the specific reference got changed

214
00:10:43,920 --> 00:10:46,399
compared to the previous version

215
00:10:46,399 --> 00:10:48,399
yeah i believe the previously referred

216
00:10:48,399 --> 00:10:49,760
document is more appropriate because

217
00:10:49,760 --> 00:10:51,200
that's where the actual counter signing

218
00:10:51,200 --> 00:10:52,959
happens i was just double checking this

219
00:10:52,959 --> 00:10:55,279
morning with the security ids

220
00:10:55,279 --> 00:10:57,360
looks like the case uh i'll send out the

221
00:10:57,360 --> 00:11:01,839
mail to the last call thread also

222
00:11:06,320 --> 00:11:08,320
all right paul speaking yeah we briefly

223
00:11:08,320 --> 00:11:09,920
talked about the the reference being

224
00:11:09,920 --> 00:11:11,519
wrongly fixed so i'll i'll double check

225
00:11:11,519 --> 00:11:14,880
this with roman so

226
00:11:14,880 --> 00:11:17,360
thank you

227
00:11:19,600 --> 00:11:21,279
okay

228
00:11:21,279 --> 00:11:24,560
and i think those were

229
00:11:24,560 --> 00:11:28,399
our slides then i will move to

230
00:11:28,399 --> 00:11:30,800
harness

231
00:11:32,760 --> 00:11:36,080
[Music]

232
00:11:41,680 --> 00:11:44,079
this test okay cool

233
00:11:44,079 --> 00:11:47,040
so russ and i will briefly talk about

234
00:11:47,040 --> 00:11:48,720
two issues um

235
00:11:48,720 --> 00:11:51,760
in the cozy hb key document

236
00:11:51,760 --> 00:11:54,399
as you know and there's uh the hp key

237
00:11:54,399 --> 00:11:55,600
document was

238
00:11:55,600 --> 00:11:57,760
was published as an rfc coming out of

239
00:11:57,760 --> 00:11:59,440
the irdf

240
00:11:59,440 --> 00:12:00,800
and

241
00:12:00,800 --> 00:12:02,800
this

242
00:12:02,800 --> 00:12:05,200
document describes on how to

243
00:12:05,200 --> 00:12:08,320
accomplish the functionality of hbke

244
00:12:08,320 --> 00:12:10,959
with the cosy structures

245
00:12:10,959 --> 00:12:12,160
next slide

246
00:12:12,160 --> 00:12:15,440
so we are version two of the document uh

247
00:12:15,440 --> 00:12:16,880
if you've been following the mailing

248
00:12:16,880 --> 00:12:19,200
list you've seen a lot of exchanges back

249
00:12:19,200 --> 00:12:22,160
and forth between hillary and myself um

250
00:12:22,160 --> 00:12:25,200
thank you larry for all the the reviews

251
00:12:25,200 --> 00:12:26,079
i

252
00:12:26,079 --> 00:12:28,399
there are two aspects um

253
00:12:28,399 --> 00:12:30,880
that are worthwhile your time here uh

254
00:12:30,880 --> 00:12:32,959
this is the first one which i would like

255
00:12:32,959 --> 00:12:36,079
to cover is we need to have an agreement

256
00:12:36,079 --> 00:12:38,160
on the format of the

257
00:12:38,160 --> 00:12:40,079
public key encoding the ephemera public

258
00:12:40,079 --> 00:12:43,040
key encoding that is

259
00:12:43,040 --> 00:12:47,199
sort of included in the encryption

260
00:12:47,600 --> 00:12:50,240
so here i just instead of copying the

261
00:12:50,240 --> 00:12:51,360
entire

262
00:12:51,360 --> 00:12:53,519
sort of structure of the hb key with the

263
00:12:53,519 --> 00:12:56,240
recipient etc i just focus on what's in

264
00:12:56,240 --> 00:12:57,279
the

265
00:12:57,279 --> 00:12:58,959
what's conveyed in the ephemera public

266
00:12:58,959 --> 00:12:59,760
key

267
00:12:59,760 --> 00:13:02,000
and

268
00:13:03,040 --> 00:13:04,000
i think

269
00:13:04,000 --> 00:13:05,440
discussion wise we got a little bit

270
00:13:05,440 --> 00:13:08,000
stuck between hillary and myself on what

271
00:13:08,000 --> 00:13:10,320
the right format would be and that's why

272
00:13:10,320 --> 00:13:12,160
we are seeking out to get feedback from

273
00:13:12,160 --> 00:13:12,880
you

274
00:13:12,880 --> 00:13:14,160
on the

275
00:13:14,160 --> 00:13:16,160
on your right hand side so the public

276
00:13:16,160 --> 00:13:20,079
key the nist b256

277
00:13:20,079 --> 00:13:23,360
r1 curve in cosi is

278
00:13:23,360 --> 00:13:25,040
described in the following way so you

279
00:13:25,040 --> 00:13:27,600
see the key type which is set to this

280
00:13:27,600 --> 00:13:30,320
value ec2

281
00:13:30,320 --> 00:13:32,000
obviously there's a key id in there or

282
00:13:32,000 --> 00:13:33,760
not obviously but there is a key id in

283
00:13:33,760 --> 00:13:34,720
there

284
00:13:34,720 --> 00:13:36,320
there um

285
00:13:36,320 --> 00:13:38,160
or potentially then there's a curve

286
00:13:38,160 --> 00:13:39,199
indication

287
00:13:39,199 --> 00:13:40,560
uh because obviously there are different

288
00:13:40,560 --> 00:13:41,680
curves

289
00:13:41,680 --> 00:13:44,079
uh and then there's the encoding of the

290
00:13:44,079 --> 00:13:46,079
x y value and there may be a compressed

291
00:13:46,079 --> 00:13:47,600
encoding of the point depending on how

292
00:13:47,600 --> 00:13:50,079
you set the y coordinate okay

293
00:13:50,079 --> 00:13:52,720
that's also basically taking from the

294
00:13:52,720 --> 00:13:58,000
cosy rfc that's not my uh invention

295
00:13:58,000 --> 00:13:59,680
hillary proposes a slightly different

296
00:13:59,680 --> 00:14:03,760
format so he um would like to use

297
00:14:03,760 --> 00:14:06,480
a different key and key format and this

298
00:14:06,480 --> 00:14:08,800
is the octet key

299
00:14:08,800 --> 00:14:10,000
pair

300
00:14:10,000 --> 00:14:12,079
if we remember that correctly

301
00:14:12,079 --> 00:14:14,880
key id is the same so uncontroversial

302
00:14:14,880 --> 00:14:17,760
he wants to use a new uh value

303
00:14:17,760 --> 00:14:18,959
for

304
00:14:18,959 --> 00:14:21,839
the hp key so it's just um temporarily

305
00:14:21,839 --> 00:14:24,399
assigned to that specific number

306
00:14:24,399 --> 00:14:26,240
and then he

307
00:14:26,240 --> 00:14:28,880
basically takes the output of the hp key

308
00:14:28,880 --> 00:14:30,800
algorithm that produces this ephemera

309
00:14:30,800 --> 00:14:33,600
public key and dumps it into

310
00:14:33,600 --> 00:14:34,800
this

311
00:14:34,800 --> 00:14:36,560
this raw data

312
00:14:36,560 --> 00:14:38,959
and i think having two formats for a key

313
00:14:38,959 --> 00:14:41,120
is not ideal

314
00:14:41,120 --> 00:14:43,360
so we i think we should pick one

315
00:14:43,360 --> 00:14:46,079
but which one

316
00:14:50,639 --> 00:14:54,720
not wearing my chair hat mike jones

317
00:14:55,360 --> 00:14:57,920
is there a compelling reason to not use

318
00:14:57,920 --> 00:14:59,600
the key format that's already been

319
00:14:59,600 --> 00:15:03,360
standardized by this working group

320
00:15:03,519 --> 00:15:05,360
yeah and i think that's where

321
00:15:05,360 --> 00:15:08,000
hillary and myself um sort of divert in

322
00:15:08,000 --> 00:15:10,560
in the views

323
00:15:11,360 --> 00:15:14,160
his opinion is if i correctly uh reflect

324
00:15:14,160 --> 00:15:16,320
it and maybe he's online

325
00:15:16,320 --> 00:15:18,639
is that um he wants to

326
00:15:18,639 --> 00:15:21,600
basically use hp an hb key library to

327
00:15:21,600 --> 00:15:23,120
export um

328
00:15:23,120 --> 00:15:24,880
what comes out of it and then dump it

329
00:15:24,880 --> 00:15:27,440
straight into uh this

330
00:15:27,440 --> 00:15:29,920
uh field in the last field

331
00:15:29,920 --> 00:15:31,519
shown on the screen

332
00:15:31,519 --> 00:15:33,600
without further sort of

333
00:15:33,600 --> 00:15:36,160
post-processing so to speak uh i think

334
00:15:36,160 --> 00:15:37,600
that's

335
00:15:37,600 --> 00:15:41,519
that's one uh argument but maybe uh some

336
00:15:41,519 --> 00:15:43,680
of you guys have some additional

337
00:15:43,680 --> 00:15:45,839
input or different perspective

338
00:15:45,839 --> 00:15:48,240
yeah mike prorock

339
00:15:48,240 --> 00:15:52,000
yes thanks uh mike perrock here um

340
00:15:52,000 --> 00:15:53,920
one of the things that concerns me in

341
00:15:53,920 --> 00:15:56,320
looking at the kty discussion both on

342
00:15:56,320 --> 00:15:58,399
jose and kosay is potentially

343
00:15:58,399 --> 00:15:59,600
overloading

344
00:15:59,600 --> 00:16:01,279
octet key pair

345
00:16:01,279 --> 00:16:03,680
and especially crv to apply to things

346
00:16:03,680 --> 00:16:05,920
for which crv either doesn't apply or

347
00:16:05,920 --> 00:16:08,160
isn't fully described by a single

348
00:16:08,160 --> 00:16:09,440
parameter

349
00:16:09,440 --> 00:16:12,399
i am strongly in favor of the proposal

350
00:16:12,399 --> 00:16:14,000
on the right from the screen size which

351
00:16:14,000 --> 00:16:17,680
i believe is yours honest as far as kty

352
00:16:17,680 --> 00:16:21,120
uh ec2 in this case with xy coordinates

353
00:16:21,120 --> 00:16:23,279
because it completely describes what the

354
00:16:23,279 --> 00:16:25,040
actual key type

355
00:16:25,040 --> 00:16:28,079
by family right as defined in the rfc is

356
00:16:28,079 --> 00:16:29,920
as well as how do you actually reference

357
00:16:29,920 --> 00:16:31,680
that from a curve perspective in this

358
00:16:31,680 --> 00:16:32,480
case

359
00:16:32,480 --> 00:16:34,560
we've run into similar issues from a

360
00:16:34,560 --> 00:16:36,639
post standpoint where we're getting into

361
00:16:36,639 --> 00:16:39,199
families of algorithms also that don't

362
00:16:39,199 --> 00:16:41,360
have curves or other things like that

363
00:16:41,360 --> 00:16:43,600
right that are novel constructions for

364
00:16:43,600 --> 00:16:45,839
which we need an answer to this and so i

365
00:16:45,839 --> 00:16:49,040
think by going in ec2 kty type here

366
00:16:49,040 --> 00:16:51,120
we're setting that direction as a group

367
00:16:51,120 --> 00:16:52,959
as to a good path forward so that we're

368
00:16:52,959 --> 00:16:55,360
not overloading and encouraging

369
00:16:55,360 --> 00:16:57,279
implementers to make mistakes as far as

370
00:16:57,279 --> 00:16:59,199
selection of algorithms so that's all

371
00:16:59,199 --> 00:17:01,519
thank you

372
00:17:01,519 --> 00:17:04,480
i'll make a meta point um those of you

373
00:17:04,480 --> 00:17:06,480
who want to join the queue should

374
00:17:06,480 --> 00:17:08,640
actually join it online

375
00:17:08,640 --> 00:17:11,119
i'll nonetheless recognize tobias but

376
00:17:11,119 --> 00:17:12,559
the next time

377
00:17:12,559 --> 00:17:14,240
please join the queue so that we're fair

378
00:17:14,240 --> 00:17:17,439
to the online participants okay thanks

379
00:17:17,439 --> 00:17:19,760
um yeah i'd much the same as the

380
00:17:19,760 --> 00:17:21,919
sentiment express before i i think um we

381
00:17:21,919 --> 00:17:23,679
already have a key representation format

382
00:17:23,679 --> 00:17:26,400
for p 256 keys this is really just

383
00:17:26,400 --> 00:17:28,240
embedding it in a high level application

384
00:17:28,240 --> 00:17:30,080
so the p256

385
00:17:30,080 --> 00:17:32,240
public key representation with ec2 makes

386
00:17:32,240 --> 00:17:34,160
more sense because

387
00:17:34,160 --> 00:17:34,880
the

388
00:17:34,880 --> 00:17:35,600
the

389
00:17:35,600 --> 00:17:37,440
octet key peer representation here as

390
00:17:37,440 --> 00:17:39,679
well tends to sort of

391
00:17:39,679 --> 00:17:41,919
stretch the notion of the curve field

392
00:17:41,919 --> 00:17:44,720
with a custom tag too um to kind of

393
00:17:44,720 --> 00:17:47,760
layer on a higher level algorithmic sort

394
00:17:47,760 --> 00:17:50,799
of representation which is hpke and kind

395
00:17:50,799 --> 00:17:51,520
of

396
00:17:51,520 --> 00:17:53,840
conflate the application so i think the

397
00:17:53,840 --> 00:17:56,720
p256 the existing curve represents key

398
00:17:56,720 --> 00:18:01,080
representation here should be sufficient

399
00:18:01,600 --> 00:18:04,799
i recognize david brown

400
00:18:04,799 --> 00:18:05,919
so i think that

401
00:18:05,919 --> 00:18:07,840
excuse me i think my opinion is probably

402
00:18:07,840 --> 00:18:09,360
pretty similar i don't have strong

403
00:18:09,360 --> 00:18:10,880
opinions on which

404
00:18:10,880 --> 00:18:13,520
but i'm concerned that the left proposal

405
00:18:13,520 --> 00:18:14,640
is

406
00:18:14,640 --> 00:18:16,799
taking a specific implementation to

407
00:18:16,799 --> 00:18:18,160
drive the spec

408
00:18:18,160 --> 00:18:20,240
rather than representing what is

409
00:18:20,240 --> 00:18:23,120
actually in the key

410
00:18:23,520 --> 00:18:25,440
i think

411
00:18:25,440 --> 00:18:30,960
well i was um like huge dutch consensus

412
00:18:30,960 --> 00:18:33,360
okay as chair i'll observe

413
00:18:33,360 --> 00:18:34,480
that

414
00:18:34,480 --> 00:18:36,160
no one is speaking

415
00:18:36,160 --> 00:18:37,360
for

416
00:18:37,360 --> 00:18:40,960
alaris proposal other than obviously

417
00:18:40,960 --> 00:18:42,720
alari

418
00:18:42,720 --> 00:18:44,400
should we

419
00:18:44,400 --> 00:18:47,120
do a hum on that at this point to try to

420
00:18:47,120 --> 00:18:50,719
provide guidance to the editors

421
00:18:52,320 --> 00:18:54,320
oh and shoot do you know how to do the

422
00:18:54,320 --> 00:18:57,799
online homes

423
00:19:02,960 --> 00:19:06,080
so sorry uh balance 80. um

424
00:19:06,080 --> 00:19:07,440
whether or not you do a hum i don't

425
00:19:07,440 --> 00:19:09,039
think really changes march anymore right

426
00:19:09,039 --> 00:19:10,400
because you still have to go to the list

427
00:19:10,400 --> 00:19:12,080
to confirm it anyway and i think sure

428
00:19:12,080 --> 00:19:13,679
you know the humming here is already

429
00:19:13,679 --> 00:19:15,679
pretty much in favor of

430
00:19:15,679 --> 00:19:17,120
the proposal on the right from what i

431
00:19:17,120 --> 00:19:19,440
can see so i mean you're free to hum but

432
00:19:19,440 --> 00:19:20,480
you would still have to go to the

433
00:19:20,480 --> 00:19:21,840
mailing list anyway so i don't think it

434
00:19:21,840 --> 00:19:24,400
matters in this case

435
00:19:24,400 --> 00:19:27,039
okay i'll ask a different question

436
00:19:27,039 --> 00:19:29,440
is anyone wanting to come to the mic to

437
00:19:29,440 --> 00:19:33,760
speak in favor of the lorry's proposal

438
00:19:34,240 --> 00:19:38,280
otherwise um

439
00:19:39,440 --> 00:19:44,559
i see ben maybe okay i recognize ben

440
00:19:45,440 --> 00:19:48,160
yeah i guess this is maybe a clarifying

441
00:19:48,160 --> 00:19:51,679
question but larry's proposal had the

442
00:19:51,679 --> 00:19:55,520
he did as a 65 byte string which

443
00:19:55,520 --> 00:19:56,320
uh

444
00:19:56,320 --> 00:19:58,000
in my understanding has a clear

445
00:19:58,000 --> 00:20:01,360
decomposition into x and y coordinate

446
00:20:01,360 --> 00:20:02,799
and so

447
00:20:02,799 --> 00:20:04,960
that would tend to if that's correct

448
00:20:04,960 --> 00:20:06,640
that would tend to lead me to also

449
00:20:06,640 --> 00:20:07,919
prefer the

450
00:20:07,919 --> 00:20:10,640
the right-hand side proposal using ec2

451
00:20:10,640 --> 00:20:12,880
keys and the only reason i can think of

452
00:20:12,880 --> 00:20:14,480
that would strongly

453
00:20:14,480 --> 00:20:16,799
make me prefer lr's proposal

454
00:20:16,799 --> 00:20:18,960
would be if there was some ambiguity or

455
00:20:18,960 --> 00:20:21,120
difficulty in actually converting the

456
00:20:21,120 --> 00:20:22,720
representation

457
00:20:22,720 --> 00:20:24,240
uh away from

458
00:20:24,240 --> 00:20:25,440
from that

459
00:20:25,440 --> 00:20:28,640
proposed representation

460
00:20:28,799 --> 00:20:30,960
so ben this is russ my understanding is

461
00:20:30,960 --> 00:20:33,280
he's just using um

462
00:20:33,280 --> 00:20:37,679
the exact hpke algorithm that's uh in

463
00:20:37,679 --> 00:20:41,200
the rfc and taking the dump of that

464
00:20:41,200 --> 00:20:43,520
straight from the library

465
00:20:43,520 --> 00:20:45,840
okay so he doesn't want to have to peek

466
00:20:45,840 --> 00:20:49,280
into the internal structure of the hp

467
00:20:49,280 --> 00:20:51,280
yep that's what's going on as best i can

468
00:20:51,280 --> 00:20:54,400
tell okay uh to close this out eva do

469
00:20:54,400 --> 00:20:56,559
you agree with me that the chairs should

470
00:20:56,559 --> 00:20:57,919
send

471
00:20:57,919 --> 00:21:00,480
a note to the list saying the

472
00:21:00,480 --> 00:21:02,799
consensus in the room appeared to be to

473
00:21:02,799 --> 00:21:05,520
use the standard representation

474
00:21:05,520 --> 00:21:08,000
and asking if there's any discussion on

475
00:21:08,000 --> 00:21:09,039
that

476
00:21:09,039 --> 00:21:11,280
yeah just record it in the minutes just

477
00:21:11,280 --> 00:21:13,840
for the chairs of you that is what's in

478
00:21:13,840 --> 00:21:15,919
the draft right now is the right-hand

479
00:21:15,919 --> 00:21:19,760
side okay so that's what i thought

480
00:21:20,640 --> 00:21:21,520
okay

481
00:21:21,520 --> 00:21:24,400
next slide please

482
00:21:26,640 --> 00:21:27,520
so

483
00:21:27,520 --> 00:21:30,640
one of the places that the

484
00:21:30,640 --> 00:21:32,799
this draft is being used is in the suit

485
00:21:32,799 --> 00:21:34,159
working group

486
00:21:34,159 --> 00:21:37,200
where we have

487
00:21:37,760 --> 00:21:39,919
encryption of firmware that's being

488
00:21:39,919 --> 00:21:42,799
loaded onto

489
00:21:42,799 --> 00:21:44,400
iot devices

490
00:21:44,400 --> 00:21:46,960
and so the encryption um

491
00:21:46,960 --> 00:21:49,360
has to be done in conjunction with the

492
00:21:49,360 --> 00:21:50,720
bootloader

493
00:21:50,720 --> 00:21:52,559
and

494
00:21:52,559 --> 00:21:55,679
the the thing that is going on is

495
00:21:55,679 --> 00:21:56,799
the

496
00:21:56,799 --> 00:21:58,880
firmware signed

497
00:21:58,880 --> 00:22:00,400
and encrypted

498
00:22:00,400 --> 00:22:03,200
so we don't really need

499
00:22:03,200 --> 00:22:06,159
an aead because the signature provides

500
00:22:06,159 --> 00:22:07,679
the integrity

501
00:22:07,679 --> 00:22:08,720
and

502
00:22:08,720 --> 00:22:11,840
the way that some small devices manage

503
00:22:11,840 --> 00:22:14,880
their memory such as flash blocks

504
00:22:14,880 --> 00:22:17,760
they want to be able to encrypt

505
00:22:17,760 --> 00:22:20,720
chunks of it that match the size of the

506
00:22:20,720 --> 00:22:23,440
flash blocks so that

507
00:22:23,440 --> 00:22:26,240
the bootstrap loader and the encryption

508
00:22:26,240 --> 00:22:28,799
can be easily tied together

509
00:22:28,799 --> 00:22:29,679
so

510
00:22:29,679 --> 00:22:34,000
in those cases uh counter mode or cbc

511
00:22:34,000 --> 00:22:36,159
are much better

512
00:22:36,159 --> 00:22:40,080
aligned with that but cos a encrypt

513
00:22:40,080 --> 00:22:42,880
demands an aead

514
00:22:42,880 --> 00:22:46,480
um and so we think we should register

515
00:22:46,480 --> 00:22:49,840
some non-aedi algorithms with big notes

516
00:22:49,840 --> 00:22:51,679
in the registry that says you know only

517
00:22:51,679 --> 00:22:53,600
use this if the data is already

518
00:22:53,600 --> 00:22:57,520
integrity protected in some other way

519
00:22:57,520 --> 00:22:59,280
or

520
00:22:59,280 --> 00:23:01,760
the approach we do not recommend is we

521
00:23:01,760 --> 00:23:02,880
define

522
00:23:02,880 --> 00:23:05,679
some cosa encrypt light

523
00:23:05,679 --> 00:23:08,400
and that seems like way more work to not

524
00:23:08,400 --> 00:23:10,240
be an aed

525
00:23:10,240 --> 00:23:12,480
as opposed to a note in the registry

526
00:23:12,480 --> 00:23:15,440
so we're advocating uh hanus and i are

527
00:23:15,440 --> 00:23:18,320
advocating the register of the

528
00:23:18,320 --> 00:23:22,880
non-aed aead algorithms with appropriate

529
00:23:22,880 --> 00:23:24,720
notes and we're willing to write they

530
00:23:24,720 --> 00:23:25,440
are

531
00:23:25,440 --> 00:23:28,400
the internet draft if

532
00:23:28,400 --> 00:23:30,159
the group agrees that that's a

533
00:23:30,159 --> 00:23:32,559
reasonable way forward

534
00:23:32,559 --> 00:23:36,440
we'd like to hear from you

535
00:23:37,120 --> 00:23:40,239
recognize cedric

536
00:23:41,520 --> 00:23:43,200
i thanks i'm wondering if you could

537
00:23:43,200 --> 00:23:45,200
reinforce the settlement by saying that

538
00:23:45,200 --> 00:23:47,120
integrity protection should be

539
00:23:47,120 --> 00:23:49,520
guaranteed before can you get

540
00:23:49,520 --> 00:23:50,960
thank you

541
00:23:50,960 --> 00:23:53,600
sorry yes can we ask for that the

542
00:23:53,600 --> 00:23:55,120
integrity protection be guaranteed

543
00:23:55,120 --> 00:23:57,200
before decryption rather than separately

544
00:23:57,200 --> 00:23:58,799
from encryption

545
00:23:58,799 --> 00:24:01,279
to prevent attacks on unauthenticated

546
00:24:01,279 --> 00:24:03,360
decryptions that are

547
00:24:03,360 --> 00:24:05,360
still possible in principle

548
00:24:05,360 --> 00:24:06,960
i'm i'm not sure i understand what

549
00:24:06,960 --> 00:24:09,440
you're asking or so you could

550
00:24:09,440 --> 00:24:11,840
authenticate after decryption or by your

551
00:24:11,840 --> 00:24:13,760
signature

552
00:24:13,760 --> 00:24:15,360
independently i think asking for the

553
00:24:15,360 --> 00:24:16,720
signature to be checked before the

554
00:24:16,720 --> 00:24:18,159
description occurs it will be

555
00:24:18,159 --> 00:24:19,760
structurally more secure and so if you

556
00:24:19,760 --> 00:24:21,760
can renounce the text right where you're

557
00:24:21,760 --> 00:24:23,919
authentication by signature

558
00:24:23,919 --> 00:24:25,120
default description that would be

559
00:24:25,120 --> 00:24:27,520
stronger than separate

560
00:24:27,520 --> 00:24:29,760
okay

561
00:24:30,880 --> 00:24:34,320
i recognize jonathan hamill

562
00:24:34,320 --> 00:24:36,880
hi uh jonathan hamill canadian security

563
00:24:36,880 --> 00:24:39,120
chain center for cyber security uh just

564
00:24:39,120 --> 00:24:40,880
a clarifying question you mentioned

565
00:24:40,880 --> 00:24:44,840
about notes guidance on uh use of these

566
00:24:44,840 --> 00:24:48,240
uh additional registry items where

567
00:24:48,240 --> 00:24:50,400
would that be put in the registry itself

568
00:24:50,400 --> 00:24:51,919
i'm not aware of a

569
00:24:51,919 --> 00:24:54,080
there's a description column but where

570
00:24:54,080 --> 00:24:55,760
would that appear

571
00:24:55,760 --> 00:24:58,159
yeah we'd we'd have to uh in the iana

572
00:24:58,159 --> 00:25:00,400
considerations ask guyana to add a place

573
00:25:00,400 --> 00:25:02,640
to put it

574
00:25:02,640 --> 00:25:04,720
thank you

575
00:25:04,720 --> 00:25:08,880
john matson i i support registering

576
00:25:08,880 --> 00:25:11,360
encryption without integrity this has

577
00:25:11,360 --> 00:25:12,960
popped up in

578
00:25:12,960 --> 00:25:16,480
other places as well for example group

579
00:25:16,480 --> 00:25:18,640
or scoring i think there was some web

580
00:25:18,640 --> 00:25:20,960
discussion here where it was

581
00:25:20,960 --> 00:25:23,600
needed i think in general the default

582
00:25:23,600 --> 00:25:26,240
recommendation is strongly to use aad

583
00:25:26,240 --> 00:25:28,640
unless you know what you're doing and

584
00:25:28,640 --> 00:25:29,520
yeah

585
00:25:29,520 --> 00:25:32,480
so i strongly support you

586
00:25:32,480 --> 00:25:33,919
and don't invent your own crypto

587
00:25:33,919 --> 00:25:35,279
algorithm

588
00:25:35,279 --> 00:25:39,480
recognize brendan moran

589
00:25:42,000 --> 00:25:44,240
can you hear me

590
00:25:44,240 --> 00:25:47,679
yes that's great um it is not practical

591
00:25:47,679 --> 00:25:50,960
to require a integrity verification

592
00:25:50,960 --> 00:25:54,000
prior to decryption in a firmware update

593
00:25:54,000 --> 00:25:57,279
scenario the reason for this is that a

594
00:25:57,279 --> 00:25:59,520
device that is fetching an encrypted

595
00:25:59,520 --> 00:26:03,200
firmware may require that it fetches a

596
00:26:03,200 --> 00:26:05,840
block decrypts it in place and then

597
00:26:05,840 --> 00:26:07,440
writes it to flash

598
00:26:07,440 --> 00:26:09,440
otherwise if you don't follow this

599
00:26:09,440 --> 00:26:11,279
procedure you're doubling the flash

600
00:26:11,279 --> 00:26:14,320
cycles and you're risking the

601
00:26:14,320 --> 00:26:17,279
survival of the device when you

602
00:26:17,279 --> 00:26:20,320
have to do an in-place decryption later

603
00:26:20,320 --> 00:26:21,760
because that requires additional

604
00:26:21,760 --> 00:26:23,600
journaling on top of what you already

605
00:26:23,600 --> 00:26:25,600
might be doing so this is a very

606
00:26:25,600 --> 00:26:29,360
specific use case for firmware and

607
00:26:29,360 --> 00:26:33,039
in that case it's i don't see it it

608
00:26:33,039 --> 00:26:36,159
being practical to require that you do

609
00:26:36,159 --> 00:26:38,240
integrity verification in advance of

610
00:26:38,240 --> 00:26:40,320
decryption

611
00:26:40,320 --> 00:26:42,080
so brandon i think you're talking about

612
00:26:42,080 --> 00:26:43,760
the um

613
00:26:43,760 --> 00:26:45,919
potential for burning out the flash

614
00:26:45,919 --> 00:26:47,919
cells with too many rights is that your

615
00:26:47,919 --> 00:26:48,880
point

616
00:26:48,880 --> 00:26:51,120
um it's not just when you said damage

617
00:26:51,120 --> 00:26:52,559
device

618
00:26:52,559 --> 00:26:55,120
uh it is that that's that's only part of

619
00:26:55,120 --> 00:26:57,600
the story though um it's also the energy

620
00:26:57,600 --> 00:26:59,760
required to write to the flash

621
00:26:59,760 --> 00:27:04,400
um so so there's multiple aspects here

622
00:27:04,559 --> 00:27:07,120
okay thank you i'm i'm going to

623
00:27:07,120 --> 00:27:09,520
recognize ben and then john and cut the

624
00:27:09,520 --> 00:27:11,760
cue in the interest of time

625
00:27:11,760 --> 00:27:13,679
benjamin

626
00:27:13,679 --> 00:27:16,640
so i was doing a quick read through

627
00:27:16,640 --> 00:27:18,000
uh

628
00:27:18,000 --> 00:27:19,240
the

629
00:27:19,240 --> 00:27:22,159
8152 is struck and

630
00:27:22,159 --> 00:27:24,399
while we do only talk about

631
00:27:24,399 --> 00:27:26,799
authenticated encryption modes uh i

632
00:27:26,799 --> 00:27:28,559
didn't find anything that specifically

633
00:27:28,559 --> 00:27:31,279
says uh you must have authenticated

634
00:27:31,279 --> 00:27:32,480
encryption

635
00:27:32,480 --> 00:27:35,039
so i think that would tend to support

636
00:27:35,039 --> 00:27:36,960
registering the algorithms but i would

637
00:27:36,960 --> 00:27:38,159
add to that

638
00:27:38,159 --> 00:27:40,559
that you really ought to include a

639
00:27:40,559 --> 00:27:43,039
section in the document that's like

640
00:27:43,039 --> 00:27:43,840
uh

641
00:27:43,840 --> 00:27:47,120
how to encrypt for non-authenticated

642
00:27:47,120 --> 00:27:50,080
encryption modes uh or whatnot

643
00:27:50,080 --> 00:27:53,279
um i'm just pulling up the actual

644
00:27:53,279 --> 00:27:54,960
section so then

645
00:27:54,960 --> 00:27:56,480
ben i think you'll find it in the

646
00:27:56,480 --> 00:27:58,799
definition of the alg parameter it says

647
00:27:58,799 --> 00:28:02,159
identifies the aead

648
00:28:02,159 --> 00:28:05,120
well but we also have ae modes

649
00:28:05,120 --> 00:28:07,760
for key rap right and that's how i read

650
00:28:07,760 --> 00:28:10,480
it is what i'm telling you

651
00:28:10,480 --> 00:28:13,520
okay i i will i'll check that rap isn't

652
00:28:13,520 --> 00:28:14,840
integrity

653
00:28:14,840 --> 00:28:19,279
protected key rap is an aead

654
00:28:20,000 --> 00:28:21,279
well there's no

655
00:28:21,279 --> 00:28:22,559
associated data

656
00:28:22,559 --> 00:28:24,640
just to solidify my point to russ uh

657
00:28:24,640 --> 00:28:26,159
we've got a section heading that's like

658
00:28:26,159 --> 00:28:28,240
how to encrypt and decrypt for aead

659
00:28:28,240 --> 00:28:30,559
algorithms that's currently in in the

660
00:28:30,559 --> 00:28:32,559
struct and just do the analogous thing

661
00:28:32,559 --> 00:28:34,640
for that when you do this

662
00:28:34,640 --> 00:28:36,080
right

663
00:28:36,080 --> 00:28:38,480
okay john bradley

664
00:28:38,480 --> 00:28:43,399
um john bradley yubico um

665
00:28:45,360 --> 00:28:47,760
as as i recall when we were doing jose

666
00:28:47,760 --> 00:28:50,080
we made the explicit decision not to

667
00:28:50,080 --> 00:28:51,039
have

668
00:28:51,039 --> 00:28:52,480
um

669
00:28:52,480 --> 00:28:56,080
non-aead encryption uh to event attempt

670
00:28:56,080 --> 00:28:57,360
to prevent people from shooting

671
00:28:57,360 --> 00:29:00,960
themselves in the foot that's correct

672
00:29:00,960 --> 00:29:04,000
so it would be possible to have a

673
00:29:04,000 --> 00:29:07,840
define a composite algorithm that did

674
00:29:07,840 --> 00:29:11,600
as was originally suggested

675
00:29:11,600 --> 00:29:14,240
encrypted and then signed um that would

676
00:29:14,240 --> 00:29:18,720
be one possibility i'm i am sensitive to

677
00:29:18,720 --> 00:29:20,960
the constraints for software updates i

678
00:29:20,960 --> 00:29:22,720
don't know that there's a perfect

679
00:29:22,720 --> 00:29:25,760
solution for this but it that is

680
00:29:25,760 --> 00:29:28,559
a pretty special purpose

681
00:29:28,559 --> 00:29:31,279
use case

682
00:29:31,520 --> 00:29:34,080
and we have to balance the the overall

683
00:29:34,080 --> 00:29:36,240
good for of

684
00:29:36,240 --> 00:29:37,440
you know

685
00:29:37,440 --> 00:29:40,640
making this exception for cos a

686
00:29:40,640 --> 00:29:42,159
versus you know how many people are

687
00:29:42,159 --> 00:29:43,200
going to

688
00:29:43,200 --> 00:29:45,440
use it inappropriately

689
00:29:45,440 --> 00:29:46,880
because they they're not reading the

690
00:29:46,880 --> 00:29:48,240
registry

691
00:29:48,240 --> 00:29:49,279
um

692
00:29:49,279 --> 00:29:51,840
versus the utility of

693
00:29:51,840 --> 00:29:53,919
of having it as part of jose so i don't

694
00:29:53,919 --> 00:29:55,039
know

695
00:29:55,039 --> 00:29:58,000
i wouldn't rush necessarily rush into

696
00:29:58,000 --> 00:29:59,679
making a

697
00:29:59,679 --> 00:30:01,919
general exception for jose to have

698
00:30:01,919 --> 00:30:03,440
non-aead

699
00:30:03,440 --> 00:30:06,760
bulk encryption

700
00:30:08,799 --> 00:30:10,640
well i guess the alternative is software

701
00:30:10,640 --> 00:30:13,600
encryption not using cosa

702
00:30:13,600 --> 00:30:14,399
which

703
00:30:14,399 --> 00:30:17,840
i think would be worse in my opinion

704
00:30:17,840 --> 00:30:18,880
so

705
00:30:18,880 --> 00:30:21,360
it would be my suggestion

706
00:30:21,360 --> 00:30:24,000
russ to write the draft

707
00:30:24,000 --> 00:30:26,240
and as i told you previously there is a

708
00:30:26,240 --> 00:30:27,840
precedent

709
00:30:27,840 --> 00:30:31,039
for registering cose algorithms

710
00:30:31,039 --> 00:30:34,480
as deprecated from the get-go

711
00:30:34,480 --> 00:30:38,559
we registered rsa sha-1 i personally did

712
00:30:38,559 --> 00:30:42,559
because it's in tpm 1 and is used

713
00:30:42,559 --> 00:30:44,799
as deprecated because we're trying to

714
00:30:44,799 --> 00:30:46,640
get rid of show one but it's there in

715
00:30:46,640 --> 00:30:48,000
practice

716
00:30:48,000 --> 00:30:50,960
and i view this as somewhat analogous

717
00:30:50,960 --> 00:30:53,120
um i'm not promising the working group

718
00:30:53,120 --> 00:30:55,039
will adopt the draft but i think the

719
00:30:55,039 --> 00:30:56,799
next step is to write the draft and make

720
00:30:56,799 --> 00:30:59,200
the case all right thank you

721
00:30:59,200 --> 00:31:00,640
all right so we'll see how the adoption

722
00:31:00,640 --> 00:31:03,880
call goes

723
00:31:08,480 --> 00:31:11,360
next is seabor encoded cert by john

724
00:31:11,360 --> 00:31:14,360
matson

725
00:31:27,600 --> 00:31:28,399
uh

726
00:31:28,399 --> 00:31:30,399
yeah i

727
00:31:30,399 --> 00:31:34,399
don't have any slides

728
00:31:34,399 --> 00:31:36,399
so just a

729
00:31:36,399 --> 00:31:38,799
bit of update

730
00:31:38,799 --> 00:31:40,720
we have submitted a new version just to

731
00:31:40,720 --> 00:31:44,480
not make it expired

732
00:31:44,480 --> 00:31:47,279
we have not had super much time to work

733
00:31:47,279 --> 00:31:49,760
on this due to other things and me being

734
00:31:49,760 --> 00:31:52,640
on parental leave

735
00:31:52,640 --> 00:31:53,360
but

736
00:31:53,360 --> 00:31:54,799
there has been

737
00:31:54,799 --> 00:31:58,000
work ongoing there is a

738
00:31:58,000 --> 00:32:02,080
master thesis student looking at ocsp

739
00:32:02,080 --> 00:32:06,440
encoding in in cyborg or in

740
00:32:06,440 --> 00:32:08,720
c509 specific

741
00:32:08,720 --> 00:32:10,240
seaboard

742
00:32:10,240 --> 00:32:12,080
there's also been

743
00:32:12,080 --> 00:32:13,200
a lot

744
00:32:13,200 --> 00:32:16,480
several people expressing interest

745
00:32:16,480 --> 00:32:19,120
derek atkins and manisha

746
00:32:19,120 --> 00:32:21,279
malik has requested

747
00:32:21,279 --> 00:32:24,240
c code implementations uh

748
00:32:24,240 --> 00:32:27,560
on either the mailing list or on github

749
00:32:27,560 --> 00:32:28,799
[Music]

750
00:32:28,799 --> 00:32:31,279
armando garcia from franhofer has

751
00:32:31,279 --> 00:32:34,880
announced that he's soon ready with his

752
00:32:34,880 --> 00:32:37,440
c implementation and this is

753
00:32:37,440 --> 00:32:40,159
great news it has been requested i think

754
00:32:40,159 --> 00:32:43,600
also more implementations of the c5

755
00:32:43,600 --> 00:32:47,679
serum 9 is a good step to move this

756
00:32:47,679 --> 00:32:49,519
forward

757
00:32:49,519 --> 00:32:52,000
also comments from kerry bonnell from

758
00:32:52,000 --> 00:32:55,679
ddesert that suggested a change in the

759
00:32:55,679 --> 00:32:58,880
general subtree thing and also suggested

760
00:32:58,880 --> 00:33:00,399
some

761
00:33:00,399 --> 00:33:02,960
improvements to the document structure

762
00:33:02,960 --> 00:33:05,919
to place things in subsection to align

763
00:33:05,919 --> 00:33:09,840
with rfc 52 80 seems

764
00:33:09,840 --> 00:33:12,159
also very good suggestions we will look

765
00:33:12,159 --> 00:33:13,760
at these and make

766
00:33:13,760 --> 00:33:16,320
issues

767
00:33:16,559 --> 00:33:19,039
otherwise i think i think it would be

768
00:33:19,039 --> 00:33:21,519
good with

769
00:33:21,519 --> 00:33:23,039
more reviews as

770
00:33:23,039 --> 00:33:24,399
possible

771
00:33:24,399 --> 00:33:27,678
we hope to be able to

772
00:33:27,840 --> 00:33:29,919
work more with the document

773
00:33:29,919 --> 00:33:32,880
later this year

774
00:33:34,000 --> 00:33:37,039
are there people in the room or online

775
00:33:37,039 --> 00:33:38,960
that are willing to

776
00:33:38,960 --> 00:33:42,880
do a review of this draft

777
00:33:46,080 --> 00:33:48,399
great

778
00:33:49,279 --> 00:33:51,039
thank you if you

779
00:33:51,039 --> 00:33:53,120
want of course you can always just do a

780
00:33:53,120 --> 00:33:56,000
review and send it on the list

781
00:33:56,000 --> 00:33:58,799
but thank you

782
00:33:58,880 --> 00:34:01,600
okay next up is tobias looker to talk

783
00:34:01,600 --> 00:34:02,880
about

784
00:34:02,880 --> 00:34:06,880
two drafts the bls key representations

785
00:34:06,880 --> 00:34:09,760
and the claims and headers

786
00:34:09,760 --> 00:34:12,480
and in full disclosure i'm a co-author

787
00:34:12,480 --> 00:34:13,839
on these so

788
00:34:13,839 --> 00:34:16,239
i recuse myself from all chair actions

789
00:34:16,239 --> 00:34:19,879
about these documents

790
00:34:20,480 --> 00:34:24,240
okay thanks uh next slide

791
00:34:24,480 --> 00:34:26,320
so so just a bit of context this was

792
00:34:26,320 --> 00:34:29,040
recently um adopted by the working group

793
00:34:29,040 --> 00:34:31,760
um and this draft

794
00:34:31,760 --> 00:34:33,440
registers the required parameters for

795
00:34:33,440 --> 00:34:36,879
both the jwk and cosa key cryptographic

796
00:34:36,879 --> 00:34:39,119
key representations for the

797
00:34:39,119 --> 00:34:41,199
what's known as the beretta lynn scott

798
00:34:41,199 --> 00:34:43,119
bls family of curves

799
00:34:43,119 --> 00:34:46,560
both the 12 381 and 4

800
00:34:46,560 --> 00:34:50,879
48 581 variations um

801
00:34:50,879 --> 00:34:53,119
just a quick note about the the bls

802
00:34:53,119 --> 00:34:54,480
curves um

803
00:34:54,480 --> 00:34:56,239
they're said to be pairing friendly uh

804
00:34:56,239 --> 00:34:58,640
which enables some novel algorithms

805
00:34:58,640 --> 00:35:00,320
beyond

806
00:35:00,320 --> 00:35:02,480
namely digital signature algorithms

807
00:35:02,480 --> 00:35:03,440
beyond

808
00:35:03,440 --> 00:35:04,720
um standard

809
00:35:04,720 --> 00:35:07,119
or conventional digital signatures

810
00:35:07,119 --> 00:35:08,720
um and

811
00:35:08,720 --> 00:35:12,240
the bls uh family are the most popular

812
00:35:12,240 --> 00:35:15,200
in use today um the only others that are

813
00:35:15,200 --> 00:35:17,520
notable the bearing nedo curves

814
00:35:17,520 --> 00:35:19,440
um however bls are favored in most

815
00:35:19,440 --> 00:35:21,680
applications

816
00:35:21,680 --> 00:35:23,040
and there is a formal definition of the

817
00:35:23,040 --> 00:35:25,359
bls curves as a work item at cfrg as

818
00:35:25,359 --> 00:35:27,839
well for context

819
00:35:27,839 --> 00:35:29,520
next slide

820
00:35:29,520 --> 00:35:30,880
so just a quick note on a couple of

821
00:35:30,880 --> 00:35:33,200
different algorithms that this uses

822
00:35:33,200 --> 00:35:35,359
one is an aggregate signature scheme

823
00:35:35,359 --> 00:35:37,599
which enables aggregating signatures of

824
00:35:37,599 --> 00:35:39,520
the same payload together

825
00:35:39,520 --> 00:35:41,839
whether it's same result can be checked

826
00:35:41,839 --> 00:35:44,160
against the individual sinus keys uh

827
00:35:44,160 --> 00:35:46,720
this is useful in

828
00:35:46,720 --> 00:35:48,560
multiple applications most notably in

829
00:35:48,560 --> 00:35:50,000
blockchain applications it's already in

830
00:35:50,000 --> 00:35:51,760
use and and networks like ethereum and

831
00:35:51,760 --> 00:35:53,599
file coin

832
00:35:53,599 --> 00:35:55,920
and the signature scheme itself is also

833
00:35:55,920 --> 00:35:57,440
a

834
00:35:57,440 --> 00:36:00,480
item of the cfrg so

835
00:36:00,480 --> 00:36:02,079
this draft we're talking about is only

836
00:36:02,079 --> 00:36:04,000
registering the key representations but

837
00:36:04,000 --> 00:36:05,280
this is really just talking about the

838
00:36:05,280 --> 00:36:08,400
algorithmic usage of these keys

839
00:36:08,400 --> 00:36:10,960
next slide

840
00:36:11,200 --> 00:36:13,520
uh another scheme uh example for these

841
00:36:13,520 --> 00:36:16,480
key representations is a scheme um known

842
00:36:16,480 --> 00:36:19,040
as bbs signatures which uh have we

843
00:36:19,040 --> 00:36:21,920
proposed to the uh cfrg this week as a

844
00:36:21,920 --> 00:36:22,960
work item

845
00:36:22,960 --> 00:36:25,920
um and most notably that scheme supports

846
00:36:25,920 --> 00:36:27,280
several different

847
00:36:27,280 --> 00:36:29,359
novel properties such as selective

848
00:36:29,359 --> 00:36:30,560
disclosure

849
00:36:30,560 --> 00:36:32,000
proof of possession and unlinkable

850
00:36:32,000 --> 00:36:34,400
proofs

851
00:36:34,400 --> 00:36:35,200
so

852
00:36:35,200 --> 00:36:36,880
yep

853
00:36:36,880 --> 00:36:39,440
next slide

854
00:36:39,599 --> 00:36:41,200
and that that's this is really just

855
00:36:41,200 --> 00:36:43,680
informational context for um

856
00:36:43,680 --> 00:36:47,280
the algorithmic usages and um

857
00:36:47,280 --> 00:36:49,040
of this scheme so

858
00:36:49,040 --> 00:36:50,720
i actually think that the last couple of

859
00:36:50,720 --> 00:36:52,839
slides were just really inform

860
00:36:52,839 --> 00:36:57,359
informational um so we can probably um

861
00:36:57,359 --> 00:36:59,920
skip let's get past this really the the

862
00:36:59,920 --> 00:37:02,720
updates for um for this draft at this

863
00:37:02,720 --> 00:37:05,920
stage uh with bls key representation

864
00:37:05,920 --> 00:37:08,000
um we can probably just flick through

865
00:37:08,000 --> 00:37:09,200
these things

866
00:37:09,200 --> 00:37:10,000
um

867
00:37:10,000 --> 00:37:11,200
is that

868
00:37:11,200 --> 00:37:12,480
the

869
00:37:12,480 --> 00:37:15,359
the key key parameters have essentially

870
00:37:15,359 --> 00:37:18,160
been defined in the draft the only um

871
00:37:18,160 --> 00:37:20,240
outstanding item

872
00:37:20,240 --> 00:37:22,960
uh that that uh i have on my list is to

873
00:37:22,960 --> 00:37:24,320
produce some samples for these key

874
00:37:24,320 --> 00:37:25,760
representations

875
00:37:25,760 --> 00:37:28,480
um in both kosaki and jw key as

876
00:37:28,480 --> 00:37:31,680
informational um

877
00:37:31,680 --> 00:37:33,119
so yeah

878
00:37:33,119 --> 00:37:37,400
any comments on that draft

879
00:37:42,480 --> 00:37:47,160
okay maybe switch to the next

880
00:37:56,480 --> 00:37:57,520
okay

881
00:37:57,520 --> 00:37:59,040
uh this is a

882
00:37:59,040 --> 00:38:00,960
this is another draft so um

883
00:38:00,960 --> 00:38:03,119
next slide thank you

884
00:38:03,119 --> 00:38:05,599
uh so so the rationale for this is that

885
00:38:05,599 --> 00:38:08,000
um jason webb tokens which is obviously

886
00:38:08,000 --> 00:38:10,560
a related predecessor um to cebu webb

887
00:38:10,560 --> 00:38:12,240
tokens um

888
00:38:12,240 --> 00:38:14,160
included normative texts that permitted

889
00:38:14,160 --> 00:38:16,800
you being able to put jwt claims um in

890
00:38:16,800 --> 00:38:18,320
the protected heater

891
00:38:18,320 --> 00:38:20,480
however when cwt was standardized it it

892
00:38:20,480 --> 00:38:21,839
didn't really define the equivalent

893
00:38:21,839 --> 00:38:23,760
behavior and and this draft sort of

894
00:38:23,760 --> 00:38:26,079
rectifies or creates a mechanism to do

895
00:38:26,079 --> 00:38:28,320
the equivalent in cwt

896
00:38:28,320 --> 00:38:30,880
um and in general being able to put cwt

897
00:38:30,880 --> 00:38:31,839
claims in the header of kosovo

898
00:38:31,839 --> 00:38:33,280
structures has a has a couple of

899
00:38:33,280 --> 00:38:35,440
possible useful applications

900
00:38:35,440 --> 00:38:36,400
um

901
00:38:36,400 --> 00:38:39,119
next slide please

902
00:38:40,000 --> 00:38:43,040
so one of them is encrypted cwts in some

903
00:38:43,040 --> 00:38:44,800
scenarios when when you're encrypting

904
00:38:44,800 --> 00:38:46,720
say cwt

905
00:38:46,720 --> 00:38:48,000
there's a desire to have some of the

906
00:38:48,000 --> 00:38:50,160
claims that are also going to be present

907
00:38:50,160 --> 00:38:52,000
in the payload replicated into the

908
00:38:52,000 --> 00:38:53,920
unencrypted header you know this

909
00:38:53,920 --> 00:38:56,720
includes things like the iss claim um or

910
00:38:56,720 --> 00:38:59,040
token validity information they might

911
00:38:59,040 --> 00:39:01,760
facilitate in the decryption process

912
00:39:01,760 --> 00:39:04,079
help you help you say identify the key

913
00:39:04,079 --> 00:39:06,720
that you need to use for decryption

914
00:39:06,720 --> 00:39:08,480
or

915
00:39:08,480 --> 00:39:10,560
validate aspects of the token prior to

916
00:39:10,560 --> 00:39:15,160
investing in a decryption of it

917
00:39:15,280 --> 00:39:17,040
next

918
00:39:17,040 --> 00:39:19,839
um another use case we've found as well

919
00:39:19,839 --> 00:39:21,839
is is when you're using a kose sign

920
00:39:21,839 --> 00:39:23,599
structure that's featuring a detached

921
00:39:23,599 --> 00:39:26,320
payload so the payload may not in fact

922
00:39:26,320 --> 00:39:29,040
be a cwt and it may not actually be in

923
00:39:29,040 --> 00:39:31,680
this in the structure being able to use

924
00:39:31,680 --> 00:39:35,119
um standard cwt claims in the cose

925
00:39:35,119 --> 00:39:36,960
header of the uh

926
00:39:36,960 --> 00:39:38,480
of the structure just means that you're

927
00:39:38,480 --> 00:39:40,200
not

928
00:39:40,200 --> 00:39:42,720
re-redefining claims that are equivalent

929
00:39:42,720 --> 00:39:45,280
to cwt claims um

930
00:39:45,280 --> 00:39:47,440
for bespoke purposes so

931
00:39:47,440 --> 00:39:49,280
again we've found applications where we

932
00:39:49,280 --> 00:39:50,480
are

933
00:39:50,480 --> 00:39:53,200
producing content uh signing signing a

934
00:39:53,200 --> 00:39:54,720
signature over a detached piece of

935
00:39:54,720 --> 00:39:56,240
content and we want to be able to

936
00:39:56,240 --> 00:39:59,119
describe who the signer is

937
00:39:59,119 --> 00:40:01,040
and maybe some validity information over

938
00:40:01,040 --> 00:40:03,760
that signature over that payload

939
00:40:03,760 --> 00:40:06,880
which isn't a cwt itself like a cwt

940
00:40:06,880 --> 00:40:09,359
structure so being able to put

941
00:40:09,359 --> 00:40:10,480
information

942
00:40:10,480 --> 00:40:11,839
like who the signer is and typing

943
00:40:11,839 --> 00:40:13,920
validity information in the header again

944
00:40:13,920 --> 00:40:16,960
is beneficial there

945
00:40:17,599 --> 00:40:20,000
and last one thank you

946
00:40:20,000 --> 00:40:20,880
and so

947
00:40:20,880 --> 00:40:22,640
just one key design consideration to

948
00:40:22,640 --> 00:40:24,720
sort of call out here

949
00:40:24,720 --> 00:40:28,240
the cwt claims namespace

950
00:40:28,240 --> 00:40:31,200
and cosa heater parameters are distinct

951
00:40:31,200 --> 00:40:33,680
registries they have distinct numeric

952
00:40:33,680 --> 00:40:35,200
allocations for their claims that

953
00:40:35,200 --> 00:40:38,319
pre-exist therefore we can't merge them

954
00:40:38,319 --> 00:40:40,800
like as as is the case in jwt where you

955
00:40:40,800 --> 00:40:42,480
can simply put iss directly in the

956
00:40:42,480 --> 00:40:43,599
header

957
00:40:43,599 --> 00:40:48,000
so this draft essentially intends it as

958
00:40:48,000 --> 00:40:51,599
as is registering a new header parameter

959
00:40:51,599 --> 00:40:53,280
whose value essentially is a map or

960
00:40:53,280 --> 00:40:54,560
structure that

961
00:40:54,560 --> 00:40:56,800
contains the cwt claims

962
00:40:56,800 --> 00:40:58,240
inside it

963
00:40:58,240 --> 00:40:59,440
so

964
00:40:59,440 --> 00:41:02,319
with that that's uh it's main

965
00:41:02,319 --> 00:41:04,800
only the description any

966
00:41:04,800 --> 00:41:06,560
any questions on that

967
00:41:06,560 --> 00:41:09,440
what are the next steps

968
00:41:09,839 --> 00:41:11,440
yeah so the the only outstanding

969
00:41:11,440 --> 00:41:13,119
question uh

970
00:41:13,119 --> 00:41:15,119
that i think we had we had um some

971
00:41:15,119 --> 00:41:17,680
feedback on on the list briefly about um

972
00:41:17,680 --> 00:41:21,839
whether or not to include a sample cddl

973
00:41:21,839 --> 00:41:23,920
within the draft to make it

974
00:41:23,920 --> 00:41:27,280
clearer exactly

975
00:41:27,440 --> 00:41:28,640
how it's

976
00:41:28,640 --> 00:41:30,319
essentially how it is represented within

977
00:41:30,319 --> 00:41:31,920
a coza header

978
00:41:31,920 --> 00:41:32,720
so

979
00:41:32,720 --> 00:41:36,879
that is something for me to follow up on

980
00:41:38,319 --> 00:41:42,880
ken then uh michael uh

981
00:41:45,599 --> 00:41:46,960
yeah just wanted to say thank you for

982
00:41:46,960 --> 00:41:49,280
the work on this tobias this is uh

983
00:41:49,280 --> 00:41:51,440
extremely useful especially downstream

984
00:41:51,440 --> 00:41:53,760
and other work items uh

985
00:41:53,760 --> 00:41:55,680
as a co-chair at community credentials

986
00:41:55,680 --> 00:41:56,960
group for instance i know there are

987
00:41:56,960 --> 00:41:59,040
multiple drafts

988
00:41:59,040 --> 00:42:00,800
kind of in process that will leverage

989
00:42:00,800 --> 00:42:02,319
these kinds of techniques to kind of

990
00:42:02,319 --> 00:42:04,160
provide a pathway into more binary

991
00:42:04,160 --> 00:42:06,400
representations of some of these items

992
00:42:06,400 --> 00:42:08,000
and that's critical for high volume

993
00:42:08,000 --> 00:42:09,599
traffic especially in cyber physical

994
00:42:09,599 --> 00:42:11,359
supply chains where data still needs to

995
00:42:11,359 --> 00:42:13,359
be verified so very supportive of the

996
00:42:13,359 --> 00:42:15,119
work very much thank you for your time

997
00:42:15,119 --> 00:42:17,839
and effort on this

998
00:42:18,160 --> 00:42:21,200
and then kirsten

999
00:42:21,280 --> 00:42:22,560
yeah um

1000
00:42:22,560 --> 00:42:24,800
i think it's a good idea to be able to

1001
00:42:24,800 --> 00:42:28,160
to transport cwt claims with

1002
00:42:28,160 --> 00:42:29,680
any

1003
00:42:29,680 --> 00:42:31,119
cosy

1004
00:42:31,119 --> 00:42:32,800
uh structure

1005
00:42:32,800 --> 00:42:33,839
um

1006
00:42:33,839 --> 00:42:35,440
the the one thing i'm not too sure about

1007
00:42:35,440 --> 00:42:37,760
is that i understand what that

1008
00:42:37,760 --> 00:42:40,560
specifically means

1009
00:42:40,560 --> 00:42:41,440
um

1010
00:42:41,440 --> 00:42:44,640
so if if you have a cwt in there

1011
00:42:44,640 --> 00:42:47,119
and are putting a few more claims on the

1012
00:42:47,119 --> 00:42:48,319
outside

1013
00:42:48,319 --> 00:42:50,560
then it's pretty clear to me what what

1014
00:42:50,560 --> 00:42:53,760
the the the combination of those claims

1015
00:42:53,760 --> 00:42:55,599
would mean at least if they don't

1016
00:42:55,599 --> 00:42:56,880
conflict

1017
00:42:56,880 --> 00:42:59,359
with each other but if you just take a

1018
00:42:59,359 --> 00:43:02,720
random cozy design data structure and

1019
00:43:02,720 --> 00:43:05,040
and slap a few cwd

1020
00:43:05,040 --> 00:43:07,440
uh headers on top of that that may not

1021
00:43:07,440 --> 00:43:08,640
have a

1022
00:43:08,640 --> 00:43:10,400
very well-defined meaning

1023
00:43:10,400 --> 00:43:13,040
so the the

1024
00:43:13,040 --> 00:43:15,760
answer to this question is

1025
00:43:15,760 --> 00:43:16,880
of course

1026
00:43:16,880 --> 00:43:20,400
that you can have more than one

1027
00:43:20,400 --> 00:43:23,839
such header parameter for each

1028
00:43:23,839 --> 00:43:25,599
weird kind of meaning you might have in

1029
00:43:25,599 --> 00:43:27,119
mind

1030
00:43:27,119 --> 00:43:29,520
so so you don't have to have a single

1031
00:43:29,520 --> 00:43:33,520
header parameter that says i slap a cwt

1032
00:43:33,520 --> 00:43:36,480
claim on this cosi structure but i'm not

1033
00:43:36,480 --> 00:43:38,240
telling you what it means

1034
00:43:38,240 --> 00:43:39,040
um

1035
00:43:39,040 --> 00:43:42,319
that would would not be so useful

1036
00:43:42,319 --> 00:43:44,720
so that's maybe a direction that we

1037
00:43:44,720 --> 00:43:46,640
should look at come up with a few

1038
00:43:46,640 --> 00:43:47,760
examples

1039
00:43:47,760 --> 00:43:50,400
and and explain what putting the the

1040
00:43:50,400 --> 00:43:52,079
data actually means

1041
00:43:52,079 --> 00:43:53,359
um the other

1042
00:43:53,359 --> 00:43:55,280
question you had is

1043
00:43:55,280 --> 00:43:57,440
uh should you put cddl there and the

1044
00:43:57,440 --> 00:44:00,560
answer of course is yes

1045
00:44:02,000 --> 00:44:02,800
so

1046
00:44:02,800 --> 00:44:04,880
sorry just so i can clarify carsten so

1047
00:44:04,880 --> 00:44:07,599
so in particular your question is around

1048
00:44:07,599 --> 00:44:11,200
um the usage of of the parameter in

1049
00:44:11,200 --> 00:44:14,079
um say the detached um payload case

1050
00:44:14,079 --> 00:44:16,480
where the the um overall structure

1051
00:44:16,480 --> 00:44:18,960
itself is is perhaps not it's not

1052
00:44:18,960 --> 00:44:20,880
actually a cwt but

1053
00:44:20,880 --> 00:44:23,599
um using that heater you're saying would

1054
00:44:23,599 --> 00:44:25,680
be misleading

1055
00:44:25,680 --> 00:44:28,720
well it's just not clear what it means

1056
00:44:28,720 --> 00:44:31,440
um and i think we we should be

1057
00:44:31,440 --> 00:44:32,880
very explicit

1058
00:44:32,880 --> 00:44:36,000
these cwt claims are all defined in a

1059
00:44:36,000 --> 00:44:37,920
way that can that they can be used in a

1060
00:44:37,920 --> 00:44:39,200
certain context

1061
00:44:39,200 --> 00:44:40,640
and if you pull them out of their

1062
00:44:40,640 --> 00:44:41,920
context

1063
00:44:41,920 --> 00:44:44,160
they still might have

1064
00:44:44,160 --> 00:44:46,079
a meaning but

1065
00:44:46,079 --> 00:44:48,319
not necessarily

1066
00:44:48,319 --> 00:44:50,160
so i think it's a good idea to be

1067
00:44:50,160 --> 00:44:52,480
explicit about what what is meant by

1068
00:44:52,480 --> 00:44:54,000
that

1069
00:44:54,000 --> 00:44:56,160
right i just um just to clarify though

1070
00:44:56,160 --> 00:44:58,160
my observation is is if you register

1071
00:44:58,160 --> 00:44:59,920
this as a general purpose claim where

1072
00:44:59,920 --> 00:45:02,079
cwt claims can go

1073
00:45:02,079 --> 00:45:04,319
applications would be free to use that

1074
00:45:04,319 --> 00:45:06,240
and even structures that are using

1075
00:45:06,240 --> 00:45:08,560
detached payloads right

1076
00:45:08,560 --> 00:45:10,319
well i'm not talking about the claims

1077
00:45:10,319 --> 00:45:12,079
the claims are already there

1078
00:45:12,079 --> 00:45:15,599
so let's look at the not before claim

1079
00:45:15,599 --> 00:45:18,800
of of um that we have in cwt that that's

1080
00:45:18,800 --> 00:45:20,160
already registered

1081
00:45:20,160 --> 00:45:23,119
now if i slap this not before claim

1082
00:45:23,119 --> 00:45:26,079
on top of a firmware upgrade

1083
00:45:26,079 --> 00:45:31,160
that is signed by me what does it mean

1084
00:45:36,800 --> 00:45:38,560
so this is mike speaking as an

1085
00:45:38,560 --> 00:45:41,280
individual i agree we should

1086
00:45:41,280 --> 00:45:43,040
produce a treatment of these questions

1087
00:45:43,040 --> 00:45:44,880
in the document

1088
00:45:44,880 --> 00:45:47,119
we'll take an action item to do so and

1089
00:45:47,119 --> 00:45:49,839
send it to the working group for review

1090
00:45:49,839 --> 00:45:51,599
yes

1091
00:45:51,599 --> 00:45:54,960
so i have a comment on that

1092
00:45:55,359 --> 00:45:58,960
yes yes please okay yeah so uh we we

1093
00:45:58,960 --> 00:46:01,520
know cwt is

1094
00:46:01,520 --> 00:46:05,040
cwt if it's a c if it's a cwt officially

1095
00:46:05,040 --> 00:46:07,680
it's used for authentication and it has

1096
00:46:07,680 --> 00:46:09,760
the authentication semantics

1097
00:46:09,760 --> 00:46:12,839
like shaking his head no

1098
00:46:12,839 --> 00:46:15,279
um uh

1099
00:46:15,359 --> 00:46:17,920
so we we there so there's a draft

1100
00:46:17,920 --> 00:46:19,440
uh for

1101
00:46:19,440 --> 00:46:20,720
uh

1102
00:46:20,720 --> 00:46:23,359
content types for eat and you know as we

1103
00:46:23,359 --> 00:46:26,240
know eat uses cwt

1104
00:46:26,240 --> 00:46:27,760
so

1105
00:46:27,760 --> 00:46:28,960
there's you know we're trying to work

1106
00:46:28,960 --> 00:46:30,800
through that there so i guess you know

1107
00:46:30,800 --> 00:46:33,040
i'm not saying i have a the exact answer

1108
00:46:33,040 --> 00:46:35,520
here but it seems like it is related to

1109
00:46:35,520 --> 00:46:37,280
the content type

1110
00:46:37,280 --> 00:46:38,079
that

1111
00:46:38,079 --> 00:46:40,640
might be uh you know in the the cose

1112
00:46:40,640 --> 00:46:43,359
header or in the surrounding

1113
00:46:43,359 --> 00:46:44,560
mime

1114
00:46:44,560 --> 00:46:47,760
identifier or in the tag identifying

1115
00:46:47,760 --> 00:46:49,680
some tags around it so it seems like it

1116
00:46:49,680 --> 00:46:53,480
might be related to that

1117
00:47:03,119 --> 00:47:04,640
that was all we really wanted to share

1118
00:47:04,640 --> 00:47:06,800
on that um design consideration so we'll

1119
00:47:06,800 --> 00:47:09,040
take the action to document up some more

1120
00:47:09,040 --> 00:47:10,800
of those cases to to describe the

1121
00:47:10,800 --> 00:47:12,640
behavior and

1122
00:47:12,640 --> 00:47:14,960
thanks

1123
00:47:15,200 --> 00:47:19,359
thank you next up is ori steele

1124
00:47:20,559 --> 00:47:23,599
about post quantum

1125
00:47:23,599 --> 00:47:26,559
hello can you hear me is it good

1126
00:47:26,559 --> 00:47:28,559
all right um so it's my first time

1127
00:47:28,559 --> 00:47:31,359
presenting at ietf so uh

1128
00:47:31,359 --> 00:47:33,200
apologies for any missteps as we get

1129
00:47:33,200 --> 00:47:34,480
through this

1130
00:47:34,480 --> 00:47:36,800
um so today i'll be talking about some

1131
00:47:36,800 --> 00:47:38,400
work that we've done

1132
00:47:38,400 --> 00:47:39,200
to

1133
00:47:39,200 --> 00:47:42,319
attempt to represent some of the key and

1134
00:47:42,319 --> 00:47:44,000
signature

1135
00:47:44,000 --> 00:47:46,160
proposals that are coming out that are

1136
00:47:46,160 --> 00:47:48,400
post quantum resistant

1137
00:47:48,400 --> 00:47:49,359
so

1138
00:47:49,359 --> 00:47:50,720
what's the deal with post quantum

1139
00:47:50,720 --> 00:47:52,800
cryptography hopefully you've been uh

1140
00:47:52,800 --> 00:47:54,319
reading the news lately there's been

1141
00:47:54,319 --> 00:47:56,480
some announcements about it

1142
00:47:56,480 --> 00:47:58,240
why do we why do we need

1143
00:47:58,240 --> 00:48:01,119
uh post quantum resistance in in some of

1144
00:48:01,119 --> 00:48:03,119
these cryptographic constructions for

1145
00:48:03,119 --> 00:48:04,000
digital

1146
00:48:04,000 --> 00:48:06,880
signatures or key agreement and

1147
00:48:06,880 --> 00:48:08,720
there's a long answer to that which i

1148
00:48:08,720 --> 00:48:10,559
encourage you to to read on your own but

1149
00:48:10,559 --> 00:48:12,640
essentially shores algorithms is

1150
00:48:12,640 --> 00:48:14,720
involved in a number of the

1151
00:48:14,720 --> 00:48:17,280
the answers um to specific uh questions

1152
00:48:17,280 --> 00:48:18,880
on that front

1153
00:48:18,880 --> 00:48:22,800
so um why are we here uh at the at cozy

1154
00:48:22,800 --> 00:48:24,960
to talk about this um essentially what

1155
00:48:24,960 --> 00:48:26,640
we would like to do is to support an

1156
00:48:26,640 --> 00:48:28,880
upgrade path for folks who've been using

1157
00:48:28,880 --> 00:48:31,280
uh cozy and hosey representations

1158
00:48:31,280 --> 00:48:34,079
with uh you know pre-quantum algorithms

1159
00:48:34,079 --> 00:48:36,079
for these post-quantum algorithms so we

1160
00:48:36,079 --> 00:48:38,480
want to give developers a sort of

1161
00:48:38,480 --> 00:48:40,559
familiar path to upgrade where things

1162
00:48:40,559 --> 00:48:42,240
kind of look the same but now they've

1163
00:48:42,240 --> 00:48:44,319
got some coverage for some of these

1164
00:48:44,319 --> 00:48:46,800
post-quantum attacks

1165
00:48:46,800 --> 00:48:49,119
so what algorithms and why

1166
00:48:49,119 --> 00:48:51,119
as i mentioned before this is mostly

1167
00:48:51,119 --> 00:48:53,119
focused on key and signature algorithms

1168
00:48:53,119 --> 00:48:54,880
right so key representations for

1169
00:48:54,880 --> 00:48:57,119
post-quantum schemes and signature

1170
00:48:57,119 --> 00:48:59,839
representations for post-quantum schemes

1171
00:48:59,839 --> 00:49:01,680
and i want to be very clear like we're

1172
00:49:01,680 --> 00:49:04,640
here to propose the envelope formats the

1173
00:49:04,640 --> 00:49:06,559
serializations for these not the

1174
00:49:06,559 --> 00:49:09,119
fundamental cryptography uh that would

1175
00:49:09,119 --> 00:49:11,119
be more appropriate at the cfrg and the

1176
00:49:11,119 --> 00:49:14,240
works already uh underway

1177
00:49:14,240 --> 00:49:16,800
um so specific uh constructs that we're

1178
00:49:16,800 --> 00:49:18,400
looking at this

1179
00:49:18,400 --> 00:49:20,559
there's basically your two two main

1180
00:49:20,559 --> 00:49:23,599
families the lattice approaches um with

1181
00:49:23,599 --> 00:49:25,040
all of the wonderful drama that comes

1182
00:49:25,040 --> 00:49:27,440
along with them and the hash

1183
00:49:27,440 --> 00:49:29,520
systems um and so

1184
00:49:29,520 --> 00:49:33,359
we're hoping to register uh

1185
00:49:33,359 --> 00:49:35,280
representations for both of these so

1186
00:49:35,280 --> 00:49:37,200
that we don't just register one family

1187
00:49:37,200 --> 00:49:39,440
that might all of a sudden suffer from a

1188
00:49:39,440 --> 00:49:41,440
particular attack you know say on

1189
00:49:41,440 --> 00:49:42,880
lattices if we only looked at

1190
00:49:42,880 --> 00:49:45,200
registering lattices and there was a

1191
00:49:45,200 --> 00:49:47,520
you know critical break um you know and

1192
00:49:47,520 --> 00:49:49,040
attacking lattices that wouldn't be

1193
00:49:49,040 --> 00:49:51,359
great so if we let register lattices and

1194
00:49:51,359 --> 00:49:53,440
hashes together we get a little bit of a

1195
00:49:53,440 --> 00:49:54,880
better defense

1196
00:49:54,880 --> 00:49:56,960
and at the bottom you know like as i

1197
00:49:56,960 --> 00:49:58,640
said at the beginning the biggest

1198
00:49:58,640 --> 00:50:00,720
announcement is nist has finally

1199
00:50:00,720 --> 00:50:02,160
announced the candidates for

1200
00:50:02,160 --> 00:50:03,839
standardization and there's been a call

1201
00:50:03,839 --> 00:50:06,480
for additional algorithms um additional

1202
00:50:06,480 --> 00:50:09,119
signature algorithms as well so keep

1203
00:50:09,119 --> 00:50:10,880
your eye on on those announcements from

1204
00:50:10,880 --> 00:50:12,559
nist and um

1205
00:50:12,559 --> 00:50:14,480
that's a major reason why we're here to

1206
00:50:14,480 --> 00:50:16,160
talk about it today

1207
00:50:16,160 --> 00:50:17,920
next slide please

1208
00:50:17,920 --> 00:50:19,599
i met the question do you want to take

1209
00:50:19,599 --> 00:50:22,800
questions now oh yeah please yeah

1210
00:50:22,800 --> 00:50:25,800
yeah

1211
00:50:27,359 --> 00:50:29,520
uh just a clarifying question

1212
00:50:29,520 --> 00:50:32,880
um you've said here that it's key

1213
00:50:32,880 --> 00:50:36,079
representations that you're looking at

1214
00:50:36,079 --> 00:50:38,480
signature and key representations do you

1215
00:50:38,480 --> 00:50:41,280
mean signatures and key exchange

1216
00:50:41,280 --> 00:50:43,520
algorithms or are you looking at

1217
00:50:43,520 --> 00:50:45,920
encapsulating keys

1218
00:50:45,920 --> 00:50:49,839
so we're primarily just looking at key

1219
00:50:49,839 --> 00:50:53,200
representations like jwk or cosy keys

1220
00:50:53,200 --> 00:50:56,000
and signature representations like you

1221
00:50:56,000 --> 00:50:59,280
know the jwa jws versions

1222
00:50:59,280 --> 00:51:02,880
or you know cwt representation so not uh

1223
00:51:02,880 --> 00:51:04,559
it's no not any fancy sort of

1224
00:51:04,559 --> 00:51:06,400
encapsulation in this this one you wanna

1225
00:51:06,400 --> 00:51:08,559
think so no so no key exchange

1226
00:51:08,559 --> 00:51:10,960
algorithms

1227
00:51:10,960 --> 00:51:11,760
yeah

1228
00:51:11,760 --> 00:51:14,160
this is uh mike perrock i'm uh

1229
00:51:14,160 --> 00:51:17,040
one of the authors on the uh spec uh

1230
00:51:17,040 --> 00:51:19,040
uh so brenden yeah just clarification

1231
00:51:19,040 --> 00:51:20,559
we're avoiding any of the key

1232
00:51:20,559 --> 00:51:22,319
encapsulation stuff right now we have

1233
00:51:22,319 --> 00:51:23,680
focused 100

1234
00:51:23,680 --> 00:51:26,160
on the three signature algorithms based

1235
00:51:26,160 --> 00:51:28,480
on three different classes of problems

1236
00:51:28,480 --> 00:51:31,920
so we have dilithium uh representing uh

1237
00:51:31,920 --> 00:51:34,160
learning with errors type problems uh

1238
00:51:34,160 --> 00:51:36,720
you know falcon uh coming more out of

1239
00:51:36,720 --> 00:51:39,440
the entrue side of the world and then uh

1240
00:51:39,440 --> 00:51:41,520
coming in also with us thanks for the

1241
00:51:41,520 --> 00:51:43,839
hash side but we've avoided it for a

1242
00:51:43,839 --> 00:51:46,559
variety of reasons any of the actual key

1243
00:51:46,559 --> 00:51:48,800
encapsulation exchange stuff for the

1244
00:51:48,800 --> 00:51:51,119
time being that is a topic that will

1245
00:51:51,119 --> 00:51:52,800
come up later but we'll have to wait on

1246
00:51:52,800 --> 00:51:54,800
cfrg actions and some other items that

1247
00:51:54,800 --> 00:51:57,920
we're involved in so okay thank you

1248
00:51:57,920 --> 00:52:00,559
yup thank you

1249
00:52:01,680 --> 00:52:03,359
next slide please

1250
00:52:03,359 --> 00:52:05,280
there are two more people on the trail

1251
00:52:05,280 --> 00:52:07,680
i'm ben

1252
00:52:08,640 --> 00:52:12,000
and kate here so i think i just want to

1253
00:52:12,000 --> 00:52:14,319
uh solidify the previous questions so

1254
00:52:14,319 --> 00:52:15,839
like you're looking at the key

1255
00:52:15,839 --> 00:52:17,440
representation so you can like publish

1256
00:52:17,440 --> 00:52:18,880
the public key that was used to make the

1257
00:52:18,880 --> 00:52:20,559
signature

1258
00:52:20,559 --> 00:52:22,960
yes sir

1259
00:52:25,920 --> 00:52:30,240
and john yeah john erickson i think

1260
00:52:30,240 --> 00:52:32,559
cozy should definitely standardize

1261
00:52:32,559 --> 00:52:34,720
everything i think we should limit us to

1262
00:52:34,720 --> 00:52:37,599
what in this standardize it but i don't

1263
00:52:37,599 --> 00:52:40,640
think we should make sure that this it's

1264
00:52:40,640 --> 00:52:43,440
not published before nist has published

1265
00:52:43,440 --> 00:52:46,800
the final standards they might change we

1266
00:52:46,800 --> 00:52:48,480
i don't think we want the situation

1267
00:52:48,480 --> 00:52:50,079
where somebody starts implementing and

1268
00:52:50,079 --> 00:52:52,000
then we are there there are discussions

1269
00:52:52,000 --> 00:52:54,400
right now under this email list on

1270
00:52:54,400 --> 00:52:55,760
exactly what

1271
00:52:55,760 --> 00:52:59,200
what kind of uh algorith

1272
00:52:59,200 --> 00:53:01,599
symmetric algorithm to use at least in

1273
00:53:01,599 --> 00:53:04,559
the key exchange uh waiting with key

1274
00:53:04,559 --> 00:53:06,160
exchange seems

1275
00:53:06,160 --> 00:53:07,440
good

1276
00:53:07,440 --> 00:53:10,640
because it might rely on hpk for that

1277
00:53:10,640 --> 00:53:12,960
john mike again here uh yeah fully agree

1278
00:53:12,960 --> 00:53:14,720
i think we should wait

1279
00:53:14,720 --> 00:53:16,079
you know for any kind of final

1280
00:53:16,079 --> 00:53:17,920
publication type stuff especially

1281
00:53:17,920 --> 00:53:20,079
because parameterization is so key with

1282
00:53:20,079 --> 00:53:22,240
so many of these problem types

1283
00:53:22,240 --> 00:53:24,000
one of the important things though to

1284
00:53:24,000 --> 00:53:26,800
get the draft out early and you know

1285
00:53:26,800 --> 00:53:28,559
being refined is the fact that there are

1286
00:53:28,559 --> 00:53:30,559
federal executive orders here in the us

1287
00:53:30,559 --> 00:53:33,440
that are forcing us to identify a path

1288
00:53:33,440 --> 00:53:36,400
for interoperability and crypto agility

1289
00:53:36,400 --> 00:53:37,760
so if we're not doing that in a

1290
00:53:37,760 --> 00:53:39,839
standardized way we will wind up in

1291
00:53:39,839 --> 00:53:41,520
trouble where one agency is attempting

1292
00:53:41,520 --> 00:53:43,760
to do something one way private sector

1293
00:53:43,760 --> 00:53:46,240
another another vendor in private sector

1294
00:53:46,240 --> 00:53:48,240
another way and so we won't be able to

1295
00:53:48,240 --> 00:53:50,000
actually see how this stuff works in

1296
00:53:50,000 --> 00:53:52,640
practice uh when we're working on a hard

1297
00:53:52,640 --> 00:53:54,319
timeline so it's a little bit of a

1298
00:53:54,319 --> 00:53:56,880
nuanced situation compared to normal but

1299
00:53:56,880 --> 00:53:59,440
fully agree until we actually hit final

1300
00:53:59,440 --> 00:54:01,599
standardization and can lock in the

1301
00:54:01,599 --> 00:54:02,800
parameter sets for each of these

1302
00:54:02,800 --> 00:54:04,800
algorithms we should not uh attempt to

1303
00:54:04,800 --> 00:54:07,119
finalize uh and publish

1304
00:54:07,119 --> 00:54:10,000
i'll make a clarifying point about itf

1305
00:54:10,000 --> 00:54:11,200
process

1306
00:54:11,200 --> 00:54:13,440
which is pertinent to this

1307
00:54:13,440 --> 00:54:15,040
which is

1308
00:54:15,040 --> 00:54:18,720
it's possible and often normal

1309
00:54:18,720 --> 00:54:21,359
to get a draft to essentially final

1310
00:54:21,359 --> 00:54:23,359
status even to the point of it being in

1311
00:54:23,359 --> 00:54:25,599
the rfc editor queue

1312
00:54:25,599 --> 00:54:28,079
but it to be held there

1313
00:54:28,079 --> 00:54:30,960
until the normative dependencies that it

1314
00:54:30,960 --> 00:54:32,000
takes

1315
00:54:32,000 --> 00:54:33,359
such as

1316
00:54:33,359 --> 00:54:36,319
the algorithm definitions themselves

1317
00:54:36,319 --> 00:54:39,599
are final so um

1318
00:54:39,599 --> 00:54:42,160
i mean our area director could also

1319
00:54:42,160 --> 00:54:44,799
confirm this but i would encourage you

1320
00:54:44,799 --> 00:54:47,440
to work in parallel with nist and the

1321
00:54:47,440 --> 00:54:49,839
cfrg so that we can all land at the same

1322
00:54:49,839 --> 00:54:51,119
time

1323
00:54:51,119 --> 00:54:52,480
thank you for that advice that's quite

1324
00:54:52,480 --> 00:54:55,119
helpful though

1325
00:54:55,280 --> 00:54:57,599
pop out is 80. so yeah i i encourage you

1326
00:54:57,599 --> 00:54:59,839
to to join the the

1327
00:54:59,839 --> 00:55:02,720
the pqc list that we just created

1328
00:55:02,720 --> 00:55:04,880
uh because this is coming up in multiple

1329
00:55:04,880 --> 00:55:07,359
different uh working groups and so on

1330
00:55:07,359 --> 00:55:09,200
one hand we want to avoid like everybody

1331
00:55:09,200 --> 00:55:10,559
doing their own thing and coming up with

1332
00:55:10,559 --> 00:55:12,319
something different uh we want like

1333
00:55:12,319 --> 00:55:14,720
people to learn from each other uh and

1334
00:55:14,720 --> 00:55:16,880
and move forward in a somewhat more

1335
00:55:16,880 --> 00:55:19,119
structured way and see if we can we can

1336
00:55:19,119 --> 00:55:22,799
like de-duplicate some of the work

1337
00:55:23,040 --> 00:55:25,200
yes and uh we are already on that list

1338
00:55:25,200 --> 00:55:26,880
and actually are making sure that we

1339
00:55:26,880 --> 00:55:29,359
have co-editors on this uh for instance

1340
00:55:29,359 --> 00:55:31,119
michael osborne and christine who are

1341
00:55:31,119 --> 00:55:33,280
working on some of the kind of lower

1342
00:55:33,280 --> 00:55:34,880
level representations of some of these

1343
00:55:34,880 --> 00:55:36,720
keys so that we have good overlap

1344
00:55:36,720 --> 00:55:38,640
between the authors and editors etcetera

1345
00:55:38,640 --> 00:55:41,520
that are working on this

1346
00:55:41,599 --> 00:55:43,920
perfect

1347
00:55:43,920 --> 00:55:45,839
i think this is my last one

1348
00:55:45,839 --> 00:55:47,599
yep so

1349
00:55:47,599 --> 00:55:49,680
i think we've gotten

1350
00:55:49,680 --> 00:55:51,280
into a bunch of the specifics already

1351
00:55:51,280 --> 00:55:52,960
but just to sort of highlight the nist

1352
00:55:52,960 --> 00:55:55,280
announcements a sphinx plus that's the

1353
00:55:55,280 --> 00:55:57,920
hash based system uh falcon and

1354
00:55:57,920 --> 00:56:00,160
dilithium two lattice-based systems that

1355
00:56:00,160 --> 00:56:02,799
are included in that announcement

1356
00:56:02,799 --> 00:56:05,040
um as i mentioned before you know we

1357
00:56:05,040 --> 00:56:06,799
want to see an intuitive upgrade path

1358
00:56:06,799 --> 00:56:09,040
for these post-quantum schemes in some

1359
00:56:09,040 --> 00:56:10,640
cases there might be folks who are

1360
00:56:10,640 --> 00:56:13,200
jumping you know from staying in rsa for

1361
00:56:13,200 --> 00:56:15,440
a very long time to some of these newer

1362
00:56:15,440 --> 00:56:17,040
systems if we have an encoding

1363
00:56:17,040 --> 00:56:20,799
representation that can support them um

1364
00:56:20,799 --> 00:56:23,520
so uh as i mentioned you know

1365
00:56:23,520 --> 00:56:25,680
some agility in the in the post quantum

1366
00:56:25,680 --> 00:56:27,920
sort of family is is is also an

1367
00:56:27,920 --> 00:56:31,760
objective and we we want to anticipate

1368
00:56:31,760 --> 00:56:34,160
the potential for you know

1369
00:56:34,160 --> 00:56:35,920
exploits or attacks on a particular

1370
00:56:35,920 --> 00:56:38,559
family so um again cryptographic agility

1371
00:56:38,559 --> 00:56:41,040
a good thing

1372
00:56:41,599 --> 00:56:44,720
another sort of key goal here is as we

1373
00:56:44,720 --> 00:56:46,559
mentioned these envelope formats and we

1374
00:56:46,559 --> 00:56:49,440
were talking about you know kty and crv

1375
00:56:49,440 --> 00:56:51,599
and these other key representation um

1376
00:56:51,599 --> 00:56:53,599
components um

1377
00:56:53,599 --> 00:56:55,040
registering

1378
00:56:55,040 --> 00:56:57,040
you know two new families of

1379
00:56:57,040 --> 00:56:59,200
cryptosystem at the same time really

1380
00:56:59,200 --> 00:57:02,799
forces us to re-evaluate uh or

1381
00:57:02,799 --> 00:57:04,720
clarify how the existing term

1382
00:57:04,720 --> 00:57:06,960
definitions for kty and you know crv

1383
00:57:06,960 --> 00:57:09,440
these other uh key represent key

1384
00:57:09,440 --> 00:57:11,280
representation terms are to be used and

1385
00:57:11,280 --> 00:57:12,960
so this is a great time for us to

1386
00:57:12,960 --> 00:57:13,920
provide

1387
00:57:13,920 --> 00:57:15,680
better guidance on clarity on some of

1388
00:57:15,680 --> 00:57:17,040
the the questions that were raised

1389
00:57:17,040 --> 00:57:19,839
before in the hpk talk

1390
00:57:19,839 --> 00:57:20,799
um

1391
00:57:20,799 --> 00:57:22,400
and again you know

1392
00:57:22,400 --> 00:57:24,000
in the draft we're going to be calling

1393
00:57:24,000 --> 00:57:26,799
for reservations for some of these uh

1394
00:57:26,799 --> 00:57:28,400
key and signature

1395
00:57:28,400 --> 00:57:30,480
you know types the the algorithm

1396
00:57:30,480 --> 00:57:33,920
definitions the key type definitions

1397
00:57:33,920 --> 00:57:35,520
uh john

1398
00:57:35,520 --> 00:57:37,119
what about

1399
00:57:37,119 --> 00:57:40,880
hybrid systems or whatever the idf

1400
00:57:40,880 --> 00:57:42,720
choose to call them yeah

1401
00:57:42,720 --> 00:57:46,400
i think nsa said they will go with pqc

1402
00:57:46,400 --> 00:57:48,880
only in cnsa 2 does here at least i

1403
00:57:48,880 --> 00:57:50,319
think that was what

1404
00:57:50,319 --> 00:57:53,200
france has said that they will enforce

1405
00:57:53,200 --> 00:57:54,400
um

1406
00:57:54,400 --> 00:57:56,720
hybrid solutions

1407
00:57:56,720 --> 00:57:58,240
for the

1408
00:57:58,240 --> 00:58:00,319
next

1409
00:58:00,319 --> 00:58:01,440
years

1410
00:58:01,440 --> 00:58:03,520
will you standardize i didn't see that

1411
00:58:03,520 --> 00:58:06,240
in the draft is the will you is the

1412
00:58:06,240 --> 00:58:08,880
solution to nestle things or will you

1413
00:58:08,880 --> 00:58:10,640
suggest some

1414
00:58:10,640 --> 00:58:13,280
it should be discussed at some point

1415
00:58:13,280 --> 00:58:15,119
yeah i think it need probably needs to

1416
00:58:15,119 --> 00:58:16,559
be supported

1417
00:58:16,559 --> 00:58:20,480
both purely pure pqc and hybrid

1418
00:58:20,480 --> 00:58:21,920
excellent question there's there's been

1419
00:58:21,920 --> 00:58:24,720
some discussion about that already um

1420
00:58:24,720 --> 00:58:25,440
and

1421
00:58:25,440 --> 00:58:27,680
and my my position on it is we should be

1422
00:58:27,680 --> 00:58:29,920
clear about representations for post

1423
00:58:29,920 --> 00:58:32,240
quantum schemes before we talk about

1424
00:58:32,240 --> 00:58:34,559
hybrid schemes combining them so i i see

1425
00:58:34,559 --> 00:58:37,040
this as a necessary step towards that

1426
00:58:37,040 --> 00:58:39,760
objective but um certainly they can that

1427
00:58:39,760 --> 00:58:41,520
work can start happening in parallel as

1428
00:58:41,520 --> 00:58:44,480
well and i i think both of those are

1429
00:58:44,480 --> 00:58:46,720
good ideas to sort of proceed with just

1430
00:58:46,720 --> 00:58:48,319
specific to this draft we're only

1431
00:58:48,319 --> 00:58:50,000
focused on the post quantum key

1432
00:58:50,000 --> 00:58:52,640
representations and not

1433
00:58:52,640 --> 00:58:54,400
registering approaches for hybrid

1434
00:58:54,400 --> 00:58:55,680
schemes

1435
00:58:55,680 --> 00:58:57,440
or a two minutes

1436
00:58:57,440 --> 00:58:59,839
next slide

1437
00:59:01,119 --> 00:59:03,440
this is

1438
00:59:03,599 --> 00:59:05,920
i gave him the harder ones

1439
00:59:05,920 --> 00:59:07,520
or he's going to put me on the spot but

1440
00:59:07,520 --> 00:59:09,520
i would say let's just uh being time

1441
00:59:09,520 --> 00:59:11,280
conscious since we've had good

1442
00:59:11,280 --> 00:59:13,119
engagement here can we flip to the next

1443
00:59:13,119 --> 00:59:14,720
slide here

1444
00:59:14,720 --> 00:59:16,720
really for us this is about next steps

1445
00:59:16,720 --> 00:59:19,200
we've gotten things up to 101 draft had

1446
00:59:19,200 --> 00:59:21,520
great feedback in especially from some

1447
00:59:21,520 --> 00:59:23,440
of the authors and great support from

1448
00:59:23,440 --> 00:59:24,799
folks who are working on the core

1449
00:59:24,799 --> 00:59:26,799
signature suites

1450
00:59:26,799 --> 00:59:29,280
really big next steps for us now is

1451
00:59:29,280 --> 00:59:32,000
clarity on kty and alga as mentioned by

1452
00:59:32,000 --> 00:59:33,839
ori

1453
00:59:33,839 --> 00:59:36,240
and also has came up with the illari

1454
00:59:36,240 --> 00:59:38,559
situation earlier in some other contexts

1455
00:59:38,559 --> 00:59:40,559
as well so those are things that i think

1456
00:59:40,559 --> 00:59:42,640
are great discussions on the list

1457
00:59:42,640 --> 00:59:44,880
um we are now adding since

1458
00:59:44,880 --> 00:59:47,280
standardization path has been announced

1459
00:59:47,280 --> 00:59:49,359
we are adding in good detailed examples

1460
00:59:49,359 --> 00:59:51,040
for falcon and sphinx so we have those

1461
00:59:51,040 --> 00:59:53,119
in for dilithium already we'll now be

1462
00:59:53,119 --> 00:59:55,200
doing the same for falcon and sphinx and

1463
00:59:55,200 --> 00:59:57,359
that moves us into piles and piles of

1464
00:59:57,359 --> 00:59:59,359
test vectors which i'm of course going

1465
00:59:59,359 --> 01:00:01,359
to try to hand to ori but always love

1466
01:00:01,359 --> 01:00:02,640
help on

1467
01:00:02,640 --> 01:00:03,520
um

1468
01:00:03,520 --> 01:00:05,359
key thing for us is we would love to get

1469
01:00:05,359 --> 01:00:07,119
this adopted by the working group there

1470
01:00:07,119 --> 01:00:08,720
are a lot of details here there are a

1471
01:00:08,720 --> 01:00:10,480
lot of smart people in the working group

1472
01:00:10,480 --> 01:00:12,640
and in the room we want feedback in

1473
01:00:12,640 --> 01:00:14,480
because this is going to impact all of

1474
01:00:14,480 --> 01:00:16,079
us uh so

1475
01:00:16,079 --> 01:00:18,319
that's kind of the next uh key step that

1476
01:00:18,319 --> 01:00:20,720
we're after is kind of moving it you

1477
01:00:20,720 --> 01:00:23,280
know hopefully from a place where we can

1478
01:00:23,280 --> 01:00:25,680
begin to really work on this seriously

1479
01:00:25,680 --> 01:00:27,280
into broader work with the working group

1480
01:00:27,280 --> 01:00:29,680
itself

1481
01:00:29,680 --> 01:00:33,200
any discussion on that point

1482
01:00:39,200 --> 01:00:41,520
in the interest of time does anybody

1483
01:00:41,520 --> 01:00:43,119
want to speak

1484
01:00:43,119 --> 01:00:45,680
against a call for adoption being sent

1485
01:00:45,680 --> 01:00:48,640
to the mailing list

1486
01:00:52,000 --> 01:00:54,000
hearing none the chairs will proceed to

1487
01:00:54,000 --> 01:00:55,599
do so

1488
01:00:55,599 --> 01:00:58,960
thank you thank you mike and ari

1489
01:01:01,440 --> 01:01:04,319
okay and that brings us to the end of

1490
01:01:04,319 --> 01:01:07,119
the meeting we have zero minutes for any

1491
01:01:07,119 --> 01:01:08,799
other business

1492
01:01:08,799 --> 01:01:11,520
if you want to say something please go

1493
01:01:11,520 --> 01:01:14,400
to the map now

1494
01:01:16,160 --> 01:01:19,599
okay well i think no one running for the

1495
01:01:19,599 --> 01:01:20,640
mic

1496
01:01:20,640 --> 01:01:22,799
and the meeting is officially over thank

1497
01:01:22,799 --> 01:01:26,720
you everyone for your participation

1498
01:01:26,799 --> 01:01:29,960
thank you

1499
01:01:39,599 --> 01:01:42,599
oh

1500
01:01:56,559 --> 01:01:59,559
okay

