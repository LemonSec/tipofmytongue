1
00:00:20,080 --> 00:00:22,080
dang mike left

2
00:00:22,080 --> 00:00:25,198
i was gonna pick on him

3
00:00:27,840 --> 00:00:30,160
mike takes nice notes too

4
00:00:30,160 --> 00:00:32,720
jenkins

5
00:00:34,079 --> 00:00:36,640
of course

6
00:00:43,440 --> 00:00:47,839
okay my two private chats did not work

7
00:00:50,640 --> 00:00:54,239
okay i can pick on ned

8
00:00:55,039 --> 00:00:57,199
i can bribe you later can you help take

9
00:00:57,199 --> 00:00:58,800
notes

10
00:00:58,800 --> 00:01:01,120
yay

11
00:01:07,920 --> 00:01:09,680
i i don't know if that's a good thing or

12
00:01:09,680 --> 00:01:11,520
not hank

13
00:01:11,520 --> 00:01:14,798
like highlight and it's very dark

14
00:01:14,880 --> 00:01:16,960
yeah

15
00:01:16,960 --> 00:01:20,880
okay i think we're all set and it is one

16
00:01:20,880 --> 00:01:23,759
minute past so we shall go ahead and get

17
00:01:23,759 --> 00:01:25,840
started

18
00:01:25,840 --> 00:01:28,159
welcome to the

19
00:01:28,159 --> 00:01:30,320
trusted execution

20
00:01:30,320 --> 00:01:32,880
and environment provisioning

21
00:01:32,880 --> 00:01:34,960
uh working group if you are not

22
00:01:34,960 --> 00:01:36,720
expecting to hear teep you're in the

23
00:01:36,720 --> 00:01:38,320
wrong room

24
00:01:38,320 --> 00:01:39,680
um

25
00:01:39,680 --> 00:01:42,320
let's see thursday so by now you should

26
00:01:42,320 --> 00:01:43,759
be well aware

27
00:01:43,759 --> 00:01:45,360
of the note well

28
00:01:45,360 --> 00:01:48,079
um so i'm not going to go through

29
00:01:48,079 --> 00:01:51,200
the standard practices for the ietf um

30
00:01:51,200 --> 00:01:54,560
you can read them on your own i have

31
00:01:54,560 --> 00:01:57,840
been asked to reiterate um the meeting

32
00:01:57,840 --> 00:01:59,680
tips so

33
00:01:59,680 --> 00:02:02,000
make sure for those especially who are

34
00:02:02,000 --> 00:02:04,399
here in person

35
00:02:04,399 --> 00:02:06,719
to sign in through the meet echo so you

36
00:02:06,719 --> 00:02:09,038
can either use the on-site tool or the

37
00:02:09,038 --> 00:02:12,160
little video icon and that will give you

38
00:02:12,160 --> 00:02:13,760
um

39
00:02:13,760 --> 00:02:15,120
the ability to

40
00:02:15,120 --> 00:02:17,280
to get the blue sheet sign in if you

41
00:02:17,280 --> 00:02:19,520
will

42
00:02:19,520 --> 00:02:20,560
do

43
00:02:20,560 --> 00:02:23,520
get on the queue and meet echo

44
00:02:23,520 --> 00:02:25,599
because that's the way we can respect

45
00:02:25,599 --> 00:02:27,920
those who are remote as well and i can

46
00:02:27,920 --> 00:02:30,238
honor

47
00:02:30,560 --> 00:02:33,599
people on the queue that way

48
00:02:33,599 --> 00:02:36,720
keep your audio and video off so that we

49
00:02:36,720 --> 00:02:39,200
don't get

50
00:02:39,760 --> 00:02:41,360
double uh

51
00:02:41,360 --> 00:02:42,800
double audio

52
00:02:42,800 --> 00:02:43,920
and then

53
00:02:43,920 --> 00:02:47,519
make sure that you're wearing your masks

54
00:02:47,519 --> 00:02:49,680
even if you come up to the mic

55
00:02:49,680 --> 00:02:52,480
so the only ones that can choose to take

56
00:02:52,480 --> 00:02:55,120
their mask off is those that are coming

57
00:02:55,120 --> 00:02:56,720
up to present

58
00:02:56,720 --> 00:02:59,440
for the remote participants um make sure

59
00:02:59,440 --> 00:03:02,159
that your audio and video are off unless

60
00:03:02,159 --> 00:03:04,400
you are in the queue and you're

61
00:03:04,400 --> 00:03:06,560
recognized to speak

62
00:03:06,560 --> 00:03:07,599
um

63
00:03:07,599 --> 00:03:09,280
and it's recommended that you use a

64
00:03:09,280 --> 00:03:11,120
headset just

65
00:03:11,120 --> 00:03:12,000
um

66
00:03:12,000 --> 00:03:14,959
to allow for the audio to work better

67
00:03:14,959 --> 00:03:16,400
okay

68
00:03:16,400 --> 00:03:18,159
so

69
00:03:18,159 --> 00:03:21,200
quick review i don't know why

70
00:03:21,200 --> 00:03:24,080
the pdf next time i'll i'll turn the

71
00:03:24,080 --> 00:03:26,239
powerpoint to pdf

72
00:03:26,239 --> 00:03:28,239
so it formats properly

73
00:03:28,239 --> 00:03:29,120
um

74
00:03:29,120 --> 00:03:31,360
key points of the code of conduct i mean

75
00:03:31,360 --> 00:03:32,959
we're a small group we're all friendly

76
00:03:32,959 --> 00:03:34,799
here but um

77
00:03:34,799 --> 00:03:36,640
this is just to say treat each other

78
00:03:36,640 --> 00:03:38,400
with respect and courtesy while we're in

79
00:03:38,400 --> 00:03:39,360
the room

80
00:03:39,360 --> 00:03:43,360
keep the discussions um professional

81
00:03:43,360 --> 00:03:44,319
okay

82
00:03:44,319 --> 00:03:47,440
so with that um

83
00:03:47,440 --> 00:03:49,599
thank you to our ad and tinnette for

84
00:03:49,599 --> 00:03:52,400
helping take notes i do encourage others

85
00:03:52,400 --> 00:03:55,360
also to look at the hedgehog and and doc

86
00:03:55,360 --> 00:03:56,799
and help us

87
00:03:56,799 --> 00:03:59,599
if you see that um

88
00:03:59,599 --> 00:04:02,400
our our helpers can cannot keep up with

89
00:04:02,400 --> 00:04:05,519
the discussions and and to capture it

90
00:04:05,519 --> 00:04:07,200
um okay

91
00:04:07,200 --> 00:04:08,560
so

92
00:04:08,560 --> 00:04:12,159
for the agenda today um we're in the

93
00:04:12,159 --> 00:04:14,480
agenda bashing portion

94
00:04:14,480 --> 00:04:15,439
um

95
00:04:15,439 --> 00:04:18,000
so dave are you going to cover for ming

96
00:04:18,000 --> 00:04:20,880
if he's not 30

97
00:04:22,160 --> 00:04:23,680
i

98
00:04:23,680 --> 00:04:25,840
don't see him

99
00:04:25,840 --> 00:04:28,840
on

100
00:04:28,880 --> 00:04:29,840
okay

101
00:04:29,840 --> 00:04:30,639
great

102
00:04:30,639 --> 00:04:31,600
so

103
00:04:31,600 --> 00:04:34,080
we'll spend some time on the comment

104
00:04:34,080 --> 00:04:35,600
resolution

105
00:04:35,600 --> 00:04:36,880
that has been happening in the

106
00:04:36,880 --> 00:04:40,960
architecture as that is now in the

107
00:04:40,960 --> 00:04:42,479
80 area review

108
00:04:42,479 --> 00:04:43,919
process

109
00:04:43,919 --> 00:04:47,680
um then akira you'll present the updates

110
00:04:47,680 --> 00:04:49,440
on the hackathon

111
00:04:49,440 --> 00:04:52,160
and then dave you're back on to uh

112
00:04:52,160 --> 00:04:53,440
discuss

113
00:04:53,440 --> 00:04:57,360
issues on the um well not really well

114
00:04:57,360 --> 00:04:59,440
issues but also progression

115
00:04:59,440 --> 00:05:01,919
on the protocol specification and then

116
00:05:01,919 --> 00:05:03,600
um

117
00:05:03,600 --> 00:05:07,680
pengling i think you are remote

118
00:05:07,680 --> 00:05:09,759
um

119
00:05:09,759 --> 00:05:11,840
gave you some time to provide the use

120
00:05:11,840 --> 00:05:14,479
case that's coming from confidential

121
00:05:14,479 --> 00:05:16,000
computing

122
00:05:16,000 --> 00:05:18,800
yes i'm remote thank you

123
00:05:18,800 --> 00:05:19,680
great

124
00:05:19,680 --> 00:05:20,639
okay

125
00:05:20,639 --> 00:05:21,360
so

126
00:05:21,360 --> 00:05:22,840
with that

127
00:05:22,840 --> 00:05:27,840
any comments updates to the agenda

128
00:05:28,160 --> 00:05:29,360
if not

129
00:05:29,360 --> 00:05:31,759
does that fill up the entire time

130
00:05:31,759 --> 00:05:33,520
uh i think

131
00:05:33,520 --> 00:05:34,560
there

132
00:05:34,560 --> 00:05:36,560
was if i did the math there was ten

133
00:05:36,560 --> 00:05:39,840
minutes a slop

134
00:05:40,000 --> 00:05:42,000
yeah i've learned to leave like five to

135
00:05:42,000 --> 00:05:44,639
ten minutes just because of transitions

136
00:05:44,639 --> 00:05:45,600
because

137
00:05:45,600 --> 00:05:49,199
i'm like 30 seconds over my slot

138
00:05:49,199 --> 00:05:51,600
okay so with that um if there are no

139
00:05:51,600 --> 00:05:55,759
comments dave you want to come in and

140
00:05:57,759 --> 00:05:59,199
okay my name is ming for this

141
00:05:59,199 --> 00:06:00,560
presentation

142
00:06:00,560 --> 00:06:02,319
and since i'm on the x i'm going to be

143
00:06:02,319 --> 00:06:04,080
able to breathe sorry

144
00:06:04,080 --> 00:06:07,240
all right

145
00:06:08,780 --> 00:06:16,560
[Laughter]

146
00:06:16,560 --> 00:06:18,080
okay go ahead next

147
00:06:18,080 --> 00:06:20,400
this is the architecture document

148
00:06:20,400 --> 00:06:22,319
um all right so as a reminder of the

149
00:06:22,319 --> 00:06:23,840
timeline right we've gone through

150
00:06:23,840 --> 00:06:25,520
working group last call

151
00:06:25,520 --> 00:06:28,080
uh we've had ad feedback from ben that

152
00:06:28,080 --> 00:06:31,840
was then uh updated in draft 16 and 17

153
00:06:31,840 --> 00:06:33,120
and 18.

154
00:06:33,120 --> 00:06:34,639
and you can see various other reviews

155
00:06:34,639 --> 00:06:36,000
that have happened thank you to all

156
00:06:36,000 --> 00:06:37,600
those who have submitted reviews next

157
00:06:37,600 --> 00:06:39,919
slide

158
00:06:42,240 --> 00:06:44,800
all right so uh

159
00:06:44,800 --> 00:06:47,120
section 3.3 was one that had a comment

160
00:06:47,120 --> 00:06:48,800
in it that we made a change to

161
00:06:48,800 --> 00:06:51,360
since working with last call um that one

162
00:06:51,360 --> 00:06:53,520
said uh weak security has been proposing

163
00:06:53,520 --> 00:06:55,440
threats to critical infrastructure uh

164
00:06:55,440 --> 00:06:57,120
russ had a comment about suggesting

165
00:06:57,120 --> 00:06:58,240
minor edits to help the reader

166
00:06:58,240 --> 00:06:59,599
understand this is not talking about

167
00:06:59,599 --> 00:07:01,680
network infrastructure so you can see

168
00:07:01,680 --> 00:07:04,080
draft 17 since last ietf was updated

169
00:07:04,080 --> 00:07:05,599
with the wording on the bottom

170
00:07:05,599 --> 00:07:07,360
um which talks about proposing

171
00:07:07,360 --> 00:07:09,280
infrastructure i.e assets that are

172
00:07:09,280 --> 00:07:10,400
essential for the functioning of a

173
00:07:10,400 --> 00:07:13,199
society and economy and i think russ uh

174
00:07:13,199 --> 00:07:15,199
act that that was acceptable so yeah

175
00:07:15,199 --> 00:07:18,000
nodding okay great next

176
00:07:18,000 --> 00:07:19,360
it's just confirming working group

177
00:07:19,360 --> 00:07:20,639
consensus that we didn't break working

178
00:07:20,639 --> 00:07:21,759
group consensus right that's what we're

179
00:07:21,759 --> 00:07:22,880
doing here so

180
00:07:22,880 --> 00:07:24,080
um

181
00:07:24,080 --> 00:07:26,160
9.3

182
00:07:26,160 --> 00:07:28,720
it said it compromised might drop or

183
00:07:28,720 --> 00:07:30,800
delay messages and russ pointed out that

184
00:07:30,800 --> 00:07:32,639
it should also mention replay and so we

185
00:07:32,639 --> 00:07:34,880
add that in there so it says drop replay

186
00:07:34,880 --> 00:07:36,639
or delay messages

187
00:07:36,639 --> 00:07:38,960
next

188
00:07:39,599 --> 00:07:43,520
um roop ca versus trust anchor okay so

189
00:07:43,520 --> 00:07:46,400
9.4 said a root ca for tam certificates

190
00:07:46,400 --> 00:07:47,919
might get compromised or a certificate

191
00:07:47,919 --> 00:07:49,520
might expire or a trust anchor other

192
00:07:49,520 --> 00:07:51,280
than a root ca certificate may also

193
00:07:51,280 --> 00:07:54,080
expire or be compromised okay

194
00:07:54,080 --> 00:07:55,680
russ said what's the difference between

195
00:07:55,680 --> 00:07:57,280
a root ca and a trust anchor they're

196
00:07:57,280 --> 00:07:59,280
usually synonyms explain if there's a

197
00:07:59,280 --> 00:08:01,280
difference here right and so you see a

198
00:08:01,280 --> 00:08:03,039
little clarification exchange between

199
00:08:03,039 --> 00:08:04,400
ming and russ there

200
00:08:04,400 --> 00:08:05,840
when it's a certificate it doesn't have

201
00:08:05,840 --> 00:08:08,400
to be a root certificate it could be an

202
00:08:08,400 --> 00:08:09,759
issuing ca

203
00:08:09,759 --> 00:08:11,919
while it isn't common practice and russ

204
00:08:11,919 --> 00:08:13,840
pointed out i think the point of a root

205
00:08:13,840 --> 00:08:15,360
certificate in all situations is not

206
00:08:15,360 --> 00:08:16,960
very helpful please add that to the

207
00:08:16,960 --> 00:08:19,120
document and so the text now says uh

208
00:08:19,120 --> 00:08:21,520
adding the point in bold it can be a

209
00:08:21,520 --> 00:08:22,960
non-root certificate when it's a

210
00:08:22,960 --> 00:08:25,039
certificate right so it's a certificate

211
00:08:25,039 --> 00:08:26,400
if it's a certificate but if it is it

212
00:08:26,400 --> 00:08:27,919
doesn't have to be a root certificate

213
00:08:27,919 --> 00:08:29,360
okay so

214
00:08:29,360 --> 00:08:31,440
rest nodded okay

215
00:08:31,440 --> 00:08:33,679
next

216
00:08:33,679 --> 00:08:35,440
yeah yeah so

217
00:08:35,440 --> 00:08:37,120
raw public keys or certificates when

218
00:08:37,120 --> 00:08:38,159
they're certificates they could be a

219
00:08:38,159 --> 00:08:39,440
root certificate or an intermediate

220
00:08:39,440 --> 00:08:41,599
certificate yeah all those are legal

221
00:08:41,599 --> 00:08:43,120
ways as long as you have something in

222
00:08:43,120 --> 00:08:44,320
your trust anchor store that you can

223
00:08:44,320 --> 00:08:45,519
chain up to

224
00:08:45,519 --> 00:08:48,959
okay next okay

225
00:08:49,920 --> 00:08:51,600
um all right

226
00:08:51,600 --> 00:08:53,600
trust anchor definition

227
00:08:53,600 --> 00:08:55,120
uh trust anchor represents an

228
00:08:55,120 --> 00:08:57,040
authoritative entity via public key and

229
00:08:57,040 --> 00:08:59,360
associated data the trust anchor may be

230
00:08:59,360 --> 00:09:01,120
a certificate or it may be a raw public

231
00:09:01,120 --> 00:09:02,320
key okay

232
00:09:02,320 --> 00:09:04,080
so we're just talking about carl

233
00:09:04,080 --> 00:09:05,279
commented

234
00:09:05,279 --> 00:09:07,440
and the main part is in bold there where

235
00:09:07,440 --> 00:09:09,360
he actually suggests uh

236
00:09:09,360 --> 00:09:10,800
alternate text right where the trust

237
00:09:10,800 --> 00:09:13,040
anchor may be a certificate a raw public

238
00:09:13,040 --> 00:09:15,279
key or other structure as appropriate

239
00:09:15,279 --> 00:09:16,320
might be better to leave open the

240
00:09:16,320 --> 00:09:18,720
possibility of contain of constraining a

241
00:09:18,720 --> 00:09:20,320
trust anchor right

242
00:09:20,320 --> 00:09:21,680
so

243
00:09:21,680 --> 00:09:22,800
you can see commented on you know

244
00:09:22,800 --> 00:09:26,720
associated data and so on so 17 says the

245
00:09:26,720 --> 00:09:28,720
following the trust anchor may be a

246
00:09:28,720 --> 00:09:30,880
certificate a raw public key or other

247
00:09:30,880 --> 00:09:33,120
structure as appropriate it can be a

248
00:09:33,120 --> 00:09:34,480
non-root certificate when it's a

249
00:09:34,480 --> 00:09:36,480
certificate right and so if you have

250
00:09:36,480 --> 00:09:38,720
something else that fits into the same

251
00:09:38,720 --> 00:09:40,320
overall bucket as a trust anchor that

252
00:09:40,320 --> 00:09:41,760
you can chain it up to that has some

253
00:09:41,760 --> 00:09:42,800
security

254
00:09:42,800 --> 00:09:45,040
principle associated with it then that's

255
00:09:45,040 --> 00:09:46,720
okay you're not constraining trust

256
00:09:46,720 --> 00:09:48,320
anchor to it must be a certificate or a

257
00:09:48,320 --> 00:09:49,839
public key even if those are the only

258
00:09:49,839 --> 00:09:52,959
things that we actually use right now so

259
00:09:52,959 --> 00:09:55,199
okay

260
00:09:55,519 --> 00:09:57,519
all right 4.4

261
00:09:57,519 --> 00:10:00,080
personalization data

262
00:10:00,080 --> 00:10:01,519
old text

263
00:10:01,519 --> 00:10:03,360
implementations must support encryption

264
00:10:03,360 --> 00:10:05,360
of such personalization data to preserve

265
00:10:05,360 --> 00:10:06,959
the confidentiality of potentially

266
00:10:06,959 --> 00:10:08,959
sensitive data contained within it and

267
00:10:08,959 --> 00:10:11,279
must support integrity protection of the

268
00:10:11,279 --> 00:10:13,760
personalization data okay

269
00:10:13,760 --> 00:10:16,720
now talks about integrity protection

270
00:10:16,720 --> 00:10:18,720
why not say that an implementation must

271
00:10:18,720 --> 00:10:19,839
support mechanisms for the

272
00:10:19,839 --> 00:10:22,560
confidentiality and integrity protection

273
00:10:22,560 --> 00:10:24,320
also it seems like the suit firmware

274
00:10:24,320 --> 00:10:27,120
encryption document um it actually talks

275
00:10:27,120 --> 00:10:28,800
about that and should you just reference

276
00:10:28,800 --> 00:10:30,000
that okay

277
00:10:30,000 --> 00:10:34,240
uh ben rad commented on uh the draft 17

278
00:10:34,240 --> 00:10:35,120
version

279
00:10:35,120 --> 00:10:36,720
we may want to split the confidentiality

280
00:10:36,720 --> 00:10:38,000
integrity protection guidance into

281
00:10:38,000 --> 00:10:39,680
separate clauses or even separate

282
00:10:39,680 --> 00:10:41,040
sentences to be clear about what

283
00:10:41,040 --> 00:10:42,480
behavior is required

284
00:10:42,480 --> 00:10:44,640
and so we did that and so 18 actually

285
00:10:44,640 --> 00:10:46,640
has two separate sentences

286
00:10:46,640 --> 00:10:49,120
implementations must support encryption

287
00:10:49,120 --> 00:10:50,959
to preserve confidentiality of such

288
00:10:50,959 --> 00:10:53,360
partialization data which may contain

289
00:10:53,360 --> 00:10:55,279
potentially contained sensitive data

290
00:10:55,279 --> 00:10:57,360
implementations must also support

291
00:10:57,360 --> 00:10:59,040
mechanisms for integrity protection of

292
00:10:59,040 --> 00:11:01,040
such personalization did it right so the

293
00:11:01,040 --> 00:11:02,320
addition of the first sentence was in

294
00:11:02,320 --> 00:11:04,079
response to russ the splitting into two

295
00:11:04,079 --> 00:11:05,600
sentences for clarity was in response to

296
00:11:05,600 --> 00:11:07,760
ben

297
00:11:08,880 --> 00:11:10,880
okay keep going

298
00:11:10,880 --> 00:11:12,959
okay other knits rests into a bunch of

299
00:11:12,959 --> 00:11:15,760
other great knits that we incorporated

300
00:11:15,760 --> 00:11:17,600
uh some of those are covered here i

301
00:11:17,600 --> 00:11:18,720
don't know that all of them are and i

302
00:11:18,720 --> 00:11:20,399
think we covered typos and stuff

303
00:11:20,399 --> 00:11:22,480
um so we broke up a long sentence into

304
00:11:22,480 --> 00:11:24,000
two sentences

305
00:11:24,000 --> 00:11:27,360
um the need to address okay so i guess

306
00:11:27,360 --> 00:11:29,440
you can read the wall of text russ has

307
00:11:29,440 --> 00:11:31,279
already done this but um

308
00:11:31,279 --> 00:11:32,640
these are at least the first one was

309
00:11:32,640 --> 00:11:34,480
just purely editorial

310
00:11:34,480 --> 00:11:36,399
uh you can see the fixed in 17 there's

311
00:11:36,399 --> 00:11:37,760
the new text there

312
00:11:37,760 --> 00:11:38,880
the problems in the bullets above the

313
00:11:38,880 --> 00:11:40,720
other hand require a new protocol

314
00:11:40,720 --> 00:11:42,320
the t protocol this is the motivation

315
00:11:42,320 --> 00:11:44,079
text in the in the introduction right

316
00:11:44,079 --> 00:11:46,079
the key protocol is a solution for dees

317
00:11:46,079 --> 00:11:48,320
that can install and enumerate tas in a

318
00:11:48,320 --> 00:11:50,240
tee secured location where another

319
00:11:50,240 --> 00:11:52,320
domain specific protocol standard that

320
00:11:52,320 --> 00:11:53,920
meets the needs is not already in use

321
00:11:53,920 --> 00:11:55,200
right so that's the

322
00:11:55,200 --> 00:11:57,360
the updated version there

323
00:11:57,360 --> 00:11:59,760
uh russ had a comment about app store

324
00:11:59,760 --> 00:12:01,920
versus trust anchor store

325
00:12:01,920 --> 00:12:03,920
this is an app store a place where apps

326
00:12:03,920 --> 00:12:06,240
are stored or a place where apps are

327
00:12:06,240 --> 00:12:08,959
purchased right because that term could

328
00:12:08,959 --> 00:12:10,639
be read as both ways especially if

329
00:12:10,639 --> 00:12:13,120
you're not a native english speaker

330
00:12:13,120 --> 00:12:15,279
the term seems to be used both ways and

331
00:12:15,279 --> 00:12:16,880
in one place the document's very general

332
00:12:16,880 --> 00:12:18,800
by saying an app store or other app

333
00:12:18,800 --> 00:12:20,160
repository

334
00:12:20,160 --> 00:12:21,600
and elsewhere the term trust anchor

335
00:12:21,600 --> 00:12:23,440
store is clearly a place for storage of

336
00:12:23,440 --> 00:12:25,839
trust anchors so

337
00:12:25,839 --> 00:12:27,440
we added in the glossary an actual

338
00:12:27,440 --> 00:12:28,880
definition of app store which is an

339
00:12:28,880 --> 00:12:30,639
online location from which untrusted

340
00:12:30,639 --> 00:12:33,680
applications can be downloaded meaning

341
00:12:33,680 --> 00:12:35,440
it's not the purchased definition in

342
00:12:35,440 --> 00:12:37,040
addresses uh

343
00:12:37,040 --> 00:12:39,040
it's the storage example right so in

344
00:12:39,040 --> 00:12:40,880
that sense the term store is the same

345
00:12:40,880 --> 00:12:44,399
meaning as trust anchor store right

346
00:12:44,399 --> 00:12:45,839
now you may also be able to purchase

347
00:12:45,839 --> 00:12:46,720
stuff must store but that's not the

348
00:12:46,720 --> 00:12:48,880
definition so

349
00:12:48,880 --> 00:12:49,839
all right

350
00:12:49,839 --> 00:12:52,399
threat modality

351
00:12:52,399 --> 00:12:55,040
section one said tes are typically used

352
00:12:55,040 --> 00:12:57,200
in cases where a software data asset

353
00:12:57,200 --> 00:12:59,200
needs to be protected from unauthorized

354
00:12:59,200 --> 00:13:01,040
entities that may include the owner or

355
00:13:01,040 --> 00:13:03,519
opponent or possessor of a device

356
00:13:03,519 --> 00:13:05,279
now just some history behind that

357
00:13:05,279 --> 00:13:06,480
sentence right there

358
00:13:06,480 --> 00:13:08,160
that sentence originally appeared in a

359
00:13:08,160 --> 00:13:09,680
confidential computing consortium white

360
00:13:09,680 --> 00:13:10,560
paper

361
00:13:10,560 --> 00:13:12,399
um and actually had extremely positive

362
00:13:12,399 --> 00:13:15,440
feedback from uh people including say uh

363
00:13:15,440 --> 00:13:16,880
gartner and stuff that just loved that

364
00:13:16,880 --> 00:13:18,880
sentence that how that one was phrased

365
00:13:18,880 --> 00:13:20,639
and so we said okay great we'll we'll

366
00:13:20,639 --> 00:13:22,240
reuse that same sentence in the teap

367
00:13:22,240 --> 00:13:24,079
architecture document but then uh

368
00:13:24,079 --> 00:13:26,160
brendan didn't like that comment and and

369
00:13:26,160 --> 00:13:27,440
freight and suggest a different way to

370
00:13:27,440 --> 00:13:28,959
phrase it and since we didn't feel

371
00:13:28,959 --> 00:13:30,320
strongly that way we said fine we'll use

372
00:13:30,320 --> 00:13:32,240
brendan's wording that's fine

373
00:13:32,240 --> 00:13:34,000
or his point is the threat modality is

374
00:13:34,000 --> 00:13:36,160
important the user identity is not

375
00:13:36,160 --> 00:13:37,760
and so we rephrased it with brennan's

376
00:13:37,760 --> 00:13:38,800
phrasing

377
00:13:38,800 --> 00:13:40,399
uh teas are typically used in cases

378
00:13:40,399 --> 00:13:42,399
where software data assets need to be

379
00:13:42,399 --> 00:13:44,240
protected from unauthorized access where

380
00:13:44,240 --> 00:13:46,160
threat actors may have physical or

381
00:13:46,160 --> 00:13:48,160
administrative access to a device so you

382
00:13:48,160 --> 00:13:49,360
can argue his definition is actually

383
00:13:49,360 --> 00:13:51,360
more precise and so that's why we

384
00:13:51,360 --> 00:13:54,639
accepted brandon's proposal okay

385
00:13:54,639 --> 00:13:56,560
next

386
00:13:56,560 --> 00:13:59,600
it's not me it's just slow

387
00:13:59,600 --> 00:14:00,720
i don't think that's the last slide i

388
00:14:00,720 --> 00:14:02,399
think okay maybe this is the last slide

389
00:14:02,399 --> 00:14:04,720
okay um those are all the changes to the

390
00:14:04,720 --> 00:14:06,320
architecture document we believe we have

391
00:14:06,320 --> 00:14:08,480
completed ad review and everything uh

392
00:14:08,480 --> 00:14:10,079
and that there are no remaining issues

393
00:14:10,079 --> 00:14:12,079
on the document including from ads or

394
00:14:12,079 --> 00:14:13,680
ietf or anything else and so we believe

395
00:14:13,680 --> 00:14:16,079
it's ready to advance to the next stage

396
00:14:16,079 --> 00:14:17,199
if you go all the way back to the

397
00:14:17,199 --> 00:14:18,800
timeline slide i forget which stage it's

398
00:14:18,800 --> 00:14:20,079
currently sitting in the data tracker

399
00:14:20,079 --> 00:14:23,040
maybe nancy remembers

400
00:14:23,519 --> 00:14:25,440
well we we have the shepherd write-up

401
00:14:25,440 --> 00:14:26,480
yeah and

402
00:14:26,480 --> 00:14:28,399
it is

403
00:14:28,399 --> 00:14:31,279
so ben was the id at the time so we'll

404
00:14:31,279 --> 00:14:33,600
we'll look at our

405
00:14:33,600 --> 00:14:36,560
our look at our ad to say yeah

406
00:14:36,560 --> 00:14:39,279
yeah our current ad yeah yes

407
00:14:39,279 --> 00:14:40,639
paula

408
00:14:40,639 --> 00:14:43,040
um so i will just look over what ben did

409
00:14:43,040 --> 00:14:45,600
but like if you resolved all of ben's

410
00:14:45,600 --> 00:14:47,519
issues then i'm assuming we'll just move

411
00:14:47,519 --> 00:14:49,199
the document forward so

412
00:14:49,199 --> 00:14:52,160
okay so please throw it in my queue okay

413
00:14:52,160 --> 00:14:54,319
okay

414
00:14:56,480 --> 00:14:59,839
next up akira

415
00:15:01,360 --> 00:15:04,079
i'm getting there

416
00:15:04,639 --> 00:15:08,160
too many clicks there we go

417
00:15:10,560 --> 00:15:14,240
you were well under time nine minutes so

418
00:15:14,240 --> 00:15:16,480
um

419
00:15:16,639 --> 00:15:19,680
oh i think that would like

420
00:15:21,120 --> 00:15:25,800
pull it out pull it out oh yeah

421
00:15:38,639 --> 00:15:41,600
yes um this is about a hackathon report

422
00:15:41,600 --> 00:15:43,680
on saturday and sunday

423
00:15:43,680 --> 00:15:44,959
um i'm

424
00:15:44,959 --> 00:15:47,120
really relaxed talking now because most

425
00:15:47,120 --> 00:15:50,160
of the stuff covered is we already had a

426
00:15:50,160 --> 00:15:53,759
good progress and then most of the

427
00:15:53,759 --> 00:15:55,440
description and the slides is also

428
00:15:55,440 --> 00:15:58,480
covered in david's slide so

429
00:15:58,480 --> 00:15:59,600
yes

430
00:15:59,600 --> 00:16:01,350
um yes next please

431
00:16:01,350 --> 00:16:02,720
[Music]

432
00:16:02,720 --> 00:16:05,279
um yes the objective was

433
00:16:05,279 --> 00:16:07,199
getting the stuff

434
00:16:07,199 --> 00:16:10,800
changed it from one last iedf113

435
00:16:10,800 --> 00:16:11,759
to

436
00:16:11,759 --> 00:16:13,519
until to the

437
00:16:13,519 --> 00:16:15,199
hackathon started

438
00:16:15,199 --> 00:16:16,240
and

439
00:16:16,240 --> 00:16:18,240
initially there was a few lists on the

440
00:16:18,240 --> 00:16:20,240
github

441
00:16:20,240 --> 00:16:23,839
and next please

442
00:16:26,720 --> 00:16:28,240
so the first one

443
00:16:28,240 --> 00:16:29,360
um

444
00:16:29,360 --> 00:16:31,600
was

445
00:16:31,759 --> 00:16:33,040
many of the

446
00:16:33,040 --> 00:16:36,440
discussion from the update from the last

447
00:16:36,440 --> 00:16:40,079
iedf10113 was related to

448
00:16:40,079 --> 00:16:43,360
corset or eat and this is the cypher

449
00:16:43,360 --> 00:16:46,079
suit how to handle cypher suit

450
00:16:46,079 --> 00:16:48,880
between the tab and device

451
00:16:48,880 --> 00:16:50,480
by reading the draft

452
00:16:50,480 --> 00:16:51,680
and the

453
00:16:51,680 --> 00:16:53,519
first one was uh

454
00:16:53,519 --> 00:16:55,279
if the site uh

455
00:16:55,279 --> 00:16:57,600
query response have a selected cipher

456
00:16:57,600 --> 00:17:00,320
suit but it it was it's it's option

457
00:17:00,320 --> 00:17:03,040
member so it could be empty and then

458
00:17:03,040 --> 00:17:05,839
what the time could uh think about it

459
00:17:05,839 --> 00:17:08,160
and yes this is uh

460
00:17:08,160 --> 00:17:10,480
was updated to the pull request

461
00:17:10,480 --> 00:17:11,760
so um

462
00:17:11,760 --> 00:17:14,079
the conclusion was

463
00:17:14,079 --> 00:17:15,119
with the

464
00:17:15,119 --> 00:17:18,160
four or five people in the hackathon by

465
00:17:18,160 --> 00:17:20,720
or who were implementing the tip

466
00:17:20,720 --> 00:17:24,079
was just uh tam will have us

467
00:17:24,079 --> 00:17:27,359
able to select one of uh one of them the

468
00:17:27,359 --> 00:17:31,679
times have sent in the credit request

469
00:17:31,679 --> 00:17:34,799
and next please

470
00:17:35,360 --> 00:17:37,039
um the technical details will be

471
00:17:37,039 --> 00:17:39,520
repeated in the david's slide

472
00:17:39,520 --> 00:17:40,799
um this one

473
00:17:40,799 --> 00:17:42,960
uh

474
00:17:43,360 --> 00:17:45,520
this

475
00:17:45,520 --> 00:17:46,480
yes

476
00:17:46,480 --> 00:17:50,480
so um this was how to under identify ti

477
00:17:50,480 --> 00:17:53,440
information of the tip agent or deep

478
00:17:53,440 --> 00:17:55,280
device

479
00:17:55,280 --> 00:17:58,960
and this was also went to uh yeah two or

480
00:17:58,960 --> 00:18:01,440
three iterations many of the discussion

481
00:18:01,440 --> 00:18:02,799
and i mean

482
00:18:02,799 --> 00:18:05,600
any of the um improvement during the

483
00:18:05,600 --> 00:18:08,000
hackathon hackathon was went to many

484
00:18:08,000 --> 00:18:11,520
iteration so this please ask the details

485
00:18:11,520 --> 00:18:13,039
go through the details and david slide

486
00:18:13,039 --> 00:18:14,799
for this one

487
00:18:14,799 --> 00:18:18,000
and thank you next one

488
00:18:20,080 --> 00:18:22,240
what was this

489
00:18:22,240 --> 00:18:25,679
oh yeah yeah yeah so

490
00:18:26,559 --> 00:18:30,799
um the draft until one iedf113

491
00:18:30,799 --> 00:18:31,840
was

492
00:18:31,840 --> 00:18:34,240
explicitly was saying the

493
00:18:34,240 --> 00:18:36,799
uh um

494
00:18:36,799 --> 00:18:37,679
in the

495
00:18:37,679 --> 00:18:41,120
text of the query response as a evidence

496
00:18:41,120 --> 00:18:44,160
but in the use case it could we we have

497
00:18:44,160 --> 00:18:47,200
a passport model and we also have a back

498
00:18:47,200 --> 00:18:50,080
uh background check model to uh support

499
00:18:50,080 --> 00:18:51,520
at the station and we wanted to

500
00:18:51,520 --> 00:18:53,039
accommodate both

501
00:18:53,039 --> 00:18:56,080
so uh change the evidence to more

502
00:18:56,080 --> 00:18:58,000
generic name

503
00:18:58,000 --> 00:18:59,360
as a

504
00:18:59,360 --> 00:19:02,080
attestation payload and then

505
00:19:02,080 --> 00:19:04,960
up the another member adding at the

506
00:19:04,960 --> 00:19:07,360
station payload format to have what kind

507
00:19:07,360 --> 00:19:09,919
of attestation payload will be inside of

508
00:19:09,919 --> 00:19:12,480
uh at the station payload could be

509
00:19:12,480 --> 00:19:14,640
evidence or it could be uh at the

510
00:19:14,640 --> 00:19:17,440
station result

511
00:19:18,880 --> 00:19:20,640
and

512
00:19:20,640 --> 00:19:22,799
yes this

513
00:19:22,799 --> 00:19:24,960
this was a bit

514
00:19:24,960 --> 00:19:28,400
from many people's discussion whether

515
00:19:28,400 --> 00:19:30,000
a test station could be local

516
00:19:30,000 --> 00:19:31,120
authorization

517
00:19:31,120 --> 00:19:33,840
remote attestation and how to put

518
00:19:33,840 --> 00:19:36,799
everything in the credit draft and

519
00:19:36,799 --> 00:19:40,879
details will be in the davis slide

520
00:19:41,440 --> 00:19:42,880
right thank you

521
00:19:42,880 --> 00:19:45,039
and

522
00:19:47,840 --> 00:19:49,840
um

523
00:19:49,840 --> 00:19:52,080
yes

524
00:19:52,080 --> 00:19:53,200
so um

525
00:19:53,200 --> 00:19:53,919
we

526
00:19:53,919 --> 00:19:55,840
we need we need a

527
00:19:55,840 --> 00:19:56,559
t

528
00:19:56,559 --> 00:19:58,880
t hardware property and t

529
00:19:58,880 --> 00:20:00,559
firmware property

530
00:20:00,559 --> 00:20:04,159
in uh for the tam to distinguish

531
00:20:04,159 --> 00:20:07,840
what what is uh uh implement in a

532
00:20:07,840 --> 00:20:11,520
device site or deep agent side

533
00:20:11,520 --> 00:20:13,280
and uh

534
00:20:13,280 --> 00:20:14,720
yes we

535
00:20:14,720 --> 00:20:17,600
the discussion evolved many way

536
00:20:17,600 --> 00:20:18,840
in the two

537
00:20:18,840 --> 00:20:22,000
days while everybody was

538
00:20:22,000 --> 00:20:23,200
working on

539
00:20:23,200 --> 00:20:25,280
improvement and

540
00:20:25,280 --> 00:20:27,760
portion is in the dave's slide too it's

541
00:20:27,760 --> 00:20:28,480
uh

542
00:20:28,480 --> 00:20:29,679
so

543
00:20:29,679 --> 00:20:32,840
it will be using uh

544
00:20:32,840 --> 00:20:36,640
manifest and also software version

545
00:20:36,640 --> 00:20:38,799
and uh

546
00:20:38,799 --> 00:20:42,320
yeah so what uh to detect and not detect

547
00:20:42,320 --> 00:20:45,120
but um distinguish what's the

548
00:20:45,120 --> 00:20:46,880
implementation of the teeth agent

549
00:20:46,880 --> 00:20:49,280
whether it's using opti or whatever is

550
00:20:49,280 --> 00:20:52,960
it has a sgx or what kind of the

551
00:20:52,960 --> 00:20:57,280
firmware have booted correctly or not

552
00:20:57,360 --> 00:21:00,400
yes and oh um i think i said a little

553
00:21:00,400 --> 00:21:02,720
bit too much but about it but yeah it

554
00:21:02,720 --> 00:21:04,960
will be please cover uh let's go through

555
00:21:04,960 --> 00:21:07,919
it in the davis slides and this one is

556
00:21:07,919 --> 00:21:09,600
um

557
00:21:09,600 --> 00:21:13,039
yeah we we we wanted to make a cypress

558
00:21:13,039 --> 00:21:14,240
a more

559
00:21:14,240 --> 00:21:15,600
generic way

560
00:21:15,600 --> 00:21:17,440
and was keeping

561
00:21:17,440 --> 00:21:20,400
from the last time the discussion was

562
00:21:20,400 --> 00:21:23,600
getting more uh

563
00:21:23,679 --> 00:21:25,440
precise and then

564
00:21:25,440 --> 00:21:27,039
at the end of the discussion the two

565
00:21:27,039 --> 00:21:29,440
days was getting more generic but um

566
00:21:29,440 --> 00:21:30,640
only

567
00:21:30,640 --> 00:21:34,080
end up specifying

568
00:21:34,320 --> 00:21:35,600
how to sign

569
00:21:35,600 --> 00:21:37,440
on the cose

570
00:21:37,440 --> 00:21:38,720
okay

571
00:21:38,720 --> 00:21:41,840
and next please

572
00:21:42,880 --> 00:21:46,080
yes um this is the place i need help

573
00:21:46,080 --> 00:21:48,240
so um

574
00:21:48,240 --> 00:21:50,640
suit manifest

575
00:21:50,640 --> 00:21:53,280
github and also uh

576
00:21:53,280 --> 00:21:56,159
in the tip protocol i copy the way how

577
00:21:56,159 --> 00:21:59,360
the suit manifests

578
00:21:59,360 --> 00:22:02,320
suit manifest github

579
00:22:02,320 --> 00:22:05,039
splitting the cddr format in the draft

580
00:22:05,039 --> 00:22:06,320
in a different

581
00:22:06,320 --> 00:22:08,640
file from the markdown because that will

582
00:22:08,640 --> 00:22:11,600
be easier to run it with the cddo tools

583
00:22:11,600 --> 00:22:13,120
and

584
00:22:13,120 --> 00:22:15,760
and uh

585
00:22:16,559 --> 00:22:19,120
and then it was it helped a lot to catch

586
00:22:19,120 --> 00:22:22,799
many of the cdo for format or for cdd

587
00:22:22,799 --> 00:22:25,679
grammar era with the cddo tools

588
00:22:25,679 --> 00:22:27,600
and i put the how

589
00:22:27,600 --> 00:22:30,240
my way of the running the cdtl and

590
00:22:30,240 --> 00:22:33,840
appendix i think it's page 13 or 14 in

591
00:22:33,840 --> 00:22:34,960
the slide

592
00:22:34,960 --> 00:22:36,799
but i'm not really sure what is the

593
00:22:36,799 --> 00:22:39,280
right way to use the cddo tools but at

594
00:22:39,280 --> 00:22:41,760
least the my way of using it what did

595
00:22:41,760 --> 00:22:45,200
catch few things in the cd of in the

596
00:22:45,200 --> 00:22:47,280
deep draft and also the suit manifest

597
00:22:47,280 --> 00:22:52,158
draft and i we made a pull request

598
00:22:52,559 --> 00:22:55,120
akita do you want to take uh

599
00:22:55,120 --> 00:22:56,960
brendan is in the queue

600
00:22:56,960 --> 00:22:58,240
yes yes yes

601
00:22:58,240 --> 00:23:01,039
go ahead brendan

602
00:23:03,200 --> 00:23:04,720
uh hi

603
00:23:04,720 --> 00:23:08,159
um so there's a uh there was a point

604
00:23:08,159 --> 00:23:11,360
raised about the suit manifest draft um

605
00:23:11,360 --> 00:23:14,000
that uh essentially said that

606
00:23:14,000 --> 00:23:16,880
suit uh didn't define a bunch of the

607
00:23:16,880 --> 00:23:18,880
cozy structures it uses

608
00:23:18,880 --> 00:23:21,840
uh there is actually a note in the suit

609
00:23:21,840 --> 00:23:24,880
draft which explains that you need to

610
00:23:24,880 --> 00:23:28,720
concatenate the suit or sorry the cozy

611
00:23:28,720 --> 00:23:32,000
cddl to the end of the suit cddl in

612
00:23:32,000 --> 00:23:35,120
order to make it a valid grammar

613
00:23:35,120 --> 00:23:36,799
i'm not sure if this is the right way to

614
00:23:36,799 --> 00:23:38,159
do things

615
00:23:38,159 --> 00:23:40,799
but that's the approach that we've taken

616
00:23:40,799 --> 00:23:43,440
so far if you've got any feedback on on

617
00:23:43,440 --> 00:23:45,840
that approach or you'd prefer a

618
00:23:45,840 --> 00:23:47,360
different way to do it then please do

619
00:23:47,360 --> 00:23:50,678
let me know

620
00:23:51,440 --> 00:23:55,039
hello yes so i'm concatenating with the

621
00:23:55,039 --> 00:23:56,960
corsair cdl

622
00:23:56,960 --> 00:24:00,080
at end of the either of the suit

623
00:24:00,080 --> 00:24:03,200
manifest cdd or two protocol cdo it

624
00:24:03,200 --> 00:24:06,080
should work i i have tried it on both

625
00:24:06,080 --> 00:24:07,279
and it works

626
00:24:07,279 --> 00:24:09,520
um

627
00:24:09,760 --> 00:24:12,159
and also another c

628
00:24:12,159 --> 00:24:14,720
file everything is dependent in these

629
00:24:14,720 --> 00:24:19,120
two many cdfi for the suit report cdl

630
00:24:19,120 --> 00:24:20,960
and some other one had to be

631
00:24:20,960 --> 00:24:24,880
concatenated and for example suit report

632
00:24:24,880 --> 00:24:27,919
is does not have a github repository

633
00:24:27,919 --> 00:24:30,880
containing cddo files so i had to make

634
00:24:30,880 --> 00:24:33,279
it manually so i really don't know what

635
00:24:33,279 --> 00:24:36,000
will be the right way but for the suit

636
00:24:36,000 --> 00:24:38,240
manifest just the kose

637
00:24:38,240 --> 00:24:42,000
tags was only required for line which is

638
00:24:42,000 --> 00:24:44,159
used in the suit manifest so i just

639
00:24:44,159 --> 00:24:47,120
added manually so about it yeah

640
00:24:47,120 --> 00:24:50,559
concatenating entire courses cdd is also

641
00:24:50,559 --> 00:24:53,520
fine but i oh yes but i i think it would

642
00:24:53,520 --> 00:24:55,279
be nice to put it in the somewhere in

643
00:24:55,279 --> 00:24:58,400
the read me or somewhere

644
00:24:58,400 --> 00:25:00,559
so that people could reproduce the

645
00:25:00,559 --> 00:25:04,159
procedure i'm using or brandon using it

646
00:25:04,159 --> 00:25:07,200
okay um i guess i should mention as well

647
00:25:07,200 --> 00:25:08,799
that um

648
00:25:08,799 --> 00:25:09,600
the

649
00:25:09,600 --> 00:25:11,120
the cozy

650
00:25:11,120 --> 00:25:13,679
uh draft does actually have instructions

651
00:25:13,679 --> 00:25:16,880
for how to extract the cddl from it um

652
00:25:16,880 --> 00:25:18,159
though it is

653
00:25:18,159 --> 00:25:20,080
a little unusual i haven't seen that

654
00:25:20,080 --> 00:25:23,360
approach in any other draft

655
00:25:25,679 --> 00:25:26,799
okay

656
00:25:26,799 --> 00:25:29,840
and yes next you have

657
00:25:29,840 --> 00:25:33,360
pengling and michael okay

658
00:25:35,760 --> 00:25:36,799
hi

659
00:25:36,799 --> 00:25:40,480
yeah yeah yeah can you hear me

660
00:25:40,840 --> 00:25:44,400
yes i think the problem is not about the

661
00:25:44,400 --> 00:25:46,960
definition of the course and

662
00:25:46,960 --> 00:25:50,000
this question has been sometimes i can't

663
00:25:50,000 --> 00:25:52,400
remember it very clearly but i think

664
00:25:52,400 --> 00:25:54,559
the problem is not about how to define

665
00:25:54,559 --> 00:25:57,279
the course because i i defined the

666
00:25:57,279 --> 00:26:00,480
course in the end of the cdl but it

667
00:26:00,480 --> 00:26:02,720
seems it's not work well

668
00:26:02,720 --> 00:26:04,960
yeah

669
00:26:05,520 --> 00:26:06,400
okay

670
00:26:06,400 --> 00:26:09,360
yes yes yes i agree

671
00:26:09,360 --> 00:26:11,520
and you're the person who filed the

672
00:26:11,520 --> 00:26:14,400
issue on the github first yes

673
00:26:14,400 --> 00:26:16,159
michael richardson so uh what i'm

674
00:26:16,159 --> 00:26:18,000
hearing is a couple of things one of

675
00:26:18,000 --> 00:26:20,000
which is that we're lacking a clear

676
00:26:20,000 --> 00:26:22,080
include mechanism in the cddl and i

677
00:26:22,080 --> 00:26:23,360
think that that's

678
00:26:23,360 --> 00:26:25,440
um you're not the only one i think

679
00:26:25,440 --> 00:26:28,960
that's well known uh in other places um

680
00:26:28,960 --> 00:26:30,880
the way that i've dealt with this is

681
00:26:30,880 --> 00:26:33,440
that uh yes put the cddl file as a

682
00:26:33,440 --> 00:26:35,520
separate file include it from the

683
00:26:35,520 --> 00:26:37,600
markdown there's a markdown mechanism to

684
00:26:37,600 --> 00:26:39,039
include

685
00:26:39,039 --> 00:26:42,400
put the generation of your complete cddl

686
00:26:42,400 --> 00:26:43,840
in your make file

687
00:26:43,840 --> 00:26:46,240
from the markdown you can append to that

688
00:26:46,240 --> 00:26:48,240
okay and for the things that are in

689
00:26:48,240 --> 00:26:49,679
other repos

690
00:26:49,679 --> 00:26:51,440
well use curl

691
00:26:51,440 --> 00:26:53,120
grab it down put it in your own thing

692
00:26:53,120 --> 00:26:54,880
concatenate it together

693
00:26:54,880 --> 00:26:57,279
that that records all the process

694
00:26:57,279 --> 00:26:58,720
and then you may want to check them in

695
00:26:58,720 --> 00:27:00,159
because you might not want to depend

696
00:27:00,159 --> 00:27:02,720
upon suit having not changed you might

697
00:27:02,720 --> 00:27:04,960
want to explicitly update it

698
00:27:04,960 --> 00:27:07,120
or the way around up to you but that's

699
00:27:07,120 --> 00:27:08,159
what i've done

700
00:27:08,159 --> 00:27:11,120
in the past and so far

701
00:27:11,120 --> 00:27:12,559
it's better than

702
00:27:12,559 --> 00:27:15,360
uh trying to pull it out of the file

703
00:27:15,360 --> 00:27:18,480
just leave it on the disk and

704
00:27:18,480 --> 00:27:20,799
there's also some cddl tools that will

705
00:27:20,799 --> 00:27:23,120
produce uh c header files for instance

706
00:27:23,120 --> 00:27:26,720
which i found really really useful

707
00:27:26,720 --> 00:27:27,600
yes

708
00:27:27,600 --> 00:27:29,200
um

709
00:27:29,200 --> 00:27:31,039
for the procedure

710
00:27:31,039 --> 00:27:34,320
what do you just describe um some of the

711
00:27:34,320 --> 00:27:37,279
cdd of our is not on the github or any

712
00:27:37,279 --> 00:27:39,760
places so just to go after the data

713
00:27:39,760 --> 00:27:42,559
tracker and read the draft and then

714
00:27:42,559 --> 00:27:45,120
extract inside the cdl definition from

715
00:27:45,120 --> 00:27:46,399
the draft

716
00:27:46,399 --> 00:27:49,760
so um and that's what

717
00:27:49,760 --> 00:27:51,360
so so michael again what i'm actually

718
00:27:51,360 --> 00:27:52,880
suggesting is that when that happens

719
00:27:52,880 --> 00:27:54,720
that you go and poke the people in the

720
00:27:54,720 --> 00:27:57,440
other place to do the same thing

721
00:27:57,440 --> 00:27:59,840
right so that said everyone back has a

722
00:27:59,840 --> 00:28:02,080
cd dfl that you can pull out of you know

723
00:28:02,080 --> 00:28:04,480
get raw user pages or something yes and

724
00:28:04,480 --> 00:28:06,480
you'll get the right thing uh and i

725
00:28:06,480 --> 00:28:08,399
don't think that's a terrible thing and

726
00:28:08,399 --> 00:28:09,760
everyone will be like oh yeah that's a

727
00:28:09,760 --> 00:28:11,520
good idea yeah and then everybody will

728
00:28:11,520 --> 00:28:14,480
be happy yes

729
00:28:14,799 --> 00:28:17,039
and also when the con

730
00:28:17,039 --> 00:28:19,679
when before running in the c

731
00:28:19,679 --> 00:28:22,240
cdo tools need to concatenate all the

732
00:28:22,240 --> 00:28:26,000
cddf file and how to order the cdda file

733
00:28:26,000 --> 00:28:28,960
file in the order it changes

734
00:28:28,960 --> 00:28:31,760
how to catch the grammar mistake too

735
00:28:31,760 --> 00:28:34,320
so that's something um

736
00:28:34,320 --> 00:28:37,919
i i i need to yeah we need to think

737
00:28:37,919 --> 00:28:40,720
talk with the people in the cdto2 that's

738
00:28:40,720 --> 00:28:42,720
my impression

739
00:28:42,720 --> 00:28:46,480
and so the summary is yes we really got

740
00:28:46,480 --> 00:28:48,799
a lot of changes in

741
00:28:48,799 --> 00:28:51,240
first two days saturday sunday this

742
00:28:51,240 --> 00:28:53,279
idf114 so

743
00:28:53,279 --> 00:28:55,039
great progress

744
00:28:55,039 --> 00:28:56,480
many issues

745
00:28:56,480 --> 00:28:59,679
11 issues was improved

746
00:28:59,679 --> 00:29:02,080
nine pull requests was made

747
00:29:02,080 --> 00:29:03,120
and

748
00:29:03,120 --> 00:29:03,919
and

749
00:29:03,919 --> 00:29:06,080
as far as we know we haven't tried all

750
00:29:06,080 --> 00:29:08,240
the implementation yet but

751
00:29:08,240 --> 00:29:10,880
probably it's okay like at the moment i

752
00:29:10,880 --> 00:29:12,960
could see corsair supporting course and

753
00:29:12,960 --> 00:29:15,520
e and t protocol is pretty much

754
00:29:15,520 --> 00:29:18,879
should be okay yes

755
00:29:19,840 --> 00:29:22,559
and the appendix has uh some few things

756
00:29:22,559 --> 00:29:23,279
i

757
00:29:23,279 --> 00:29:25,440
did you want to cover the um now

758
00:29:25,440 --> 00:29:27,600
to go through just showing what's in

759
00:29:27,600 --> 00:29:30,480
it's in the page yeah this is the my my

760
00:29:30,480 --> 00:29:32,559
this was my my procedure was running

761
00:29:32,559 --> 00:29:34,480
during the hackathon

762
00:29:34,480 --> 00:29:36,799
so it's yes

763
00:29:36,799 --> 00:29:39,760
probably need to explain do

764
00:29:39,760 --> 00:29:41,600
have some of the explanation and

765
00:29:41,600 --> 00:29:43,360
somewhere in the documentation in the

766
00:29:43,360 --> 00:29:44,799
future

767
00:29:44,799 --> 00:29:46,559
yes

768
00:29:46,559 --> 00:29:49,360
yes that i think that's it that's it yes

769
00:29:49,360 --> 00:29:51,360
okay

770
00:29:51,360 --> 00:29:52,559
great

771
00:29:52,559 --> 00:29:53,520
thanks

772
00:29:53,520 --> 00:29:56,640
thank you we're doing good on time

773
00:29:56,640 --> 00:29:58,880
okay

774
00:30:06,559 --> 00:30:08,480
you're up next

775
00:30:08,480 --> 00:30:10,320
i don't know why i have to like click

776
00:30:10,320 --> 00:30:12,799
click click click click there we go

777
00:30:12,799 --> 00:30:13,679
uh

778
00:30:13,679 --> 00:30:15,200
oh you're not named what's that you're

779
00:30:15,200 --> 00:30:20,039
not ming i know my name is

780
00:30:27,600 --> 00:30:29,440
oh it might have gotten turned off

781
00:30:29,440 --> 00:30:31,279
accidentally

782
00:30:31,279 --> 00:30:32,520
accidentally

783
00:30:32,520 --> 00:30:35,690
[Music]

784
00:30:42,080 --> 00:30:43,440
don't confuse me with that other guy

785
00:30:43,440 --> 00:30:46,240
named ming who looks a lot like me

786
00:30:46,240 --> 00:30:49,440
i will say at the hackathon

787
00:30:49,440 --> 00:30:51,440
uh i i think we have

788
00:30:51,440 --> 00:30:54,320
six known implementations

789
00:30:54,320 --> 00:30:56,720
uh from six different implementers

790
00:30:56,720 --> 00:30:59,440
five of them were sitting at the table

791
00:30:59,440 --> 00:31:01,039
uh ming being the sixth one who is not

792
00:31:01,039 --> 00:31:02,880
at the table that we know of um and so

793
00:31:02,880 --> 00:31:04,880
that means that uh we spent a lot of

794
00:31:04,880 --> 00:31:06,480
time talking about what we want to do

795
00:31:06,480 --> 00:31:08,000
and we even made a breaking change here

796
00:31:08,000 --> 00:31:10,240
because we all agreed to break our stuff

797
00:31:10,240 --> 00:31:11,440
right that we would all change our

798
00:31:11,440 --> 00:31:12,640
implementations and so it was very

799
00:31:12,640 --> 00:31:15,600
productive um and uh i think for the

800
00:31:15,600 --> 00:31:17,279
first time when i posted this the list

801
00:31:17,279 --> 00:31:19,120
um it usually what happens at a

802
00:31:19,120 --> 00:31:20,240
hackathon is we come out of the

803
00:31:20,240 --> 00:31:21,519
hackathon with a bunch of issues to

804
00:31:21,519 --> 00:31:23,440
discuss and try to figure out what to do

805
00:31:23,440 --> 00:31:24,799
given that we had all the implementers

806
00:31:24,799 --> 00:31:27,039
there at least one of them there we

807
00:31:27,039 --> 00:31:28,559
actually spent a lot more time talking

808
00:31:28,559 --> 00:31:30,000
about what the fix and the spec would be

809
00:31:30,000 --> 00:31:31,600
and generating the pro requests against

810
00:31:31,600 --> 00:31:32,559
the spec

811
00:31:32,559 --> 00:31:34,799
so for the first time ever we walked out

812
00:31:34,799 --> 00:31:36,960
of the uh hackathon

813
00:31:36,960 --> 00:31:37,840
with

814
00:31:37,840 --> 00:31:39,039
zero

815
00:31:39,039 --> 00:31:40,720
open issues that didn't already have

816
00:31:40,720 --> 00:31:42,399
text in the spec

817
00:31:42,399 --> 00:31:44,480
in the github copy okay never happened

818
00:31:44,480 --> 00:31:46,720
before um the disadvantage is we spent

819
00:31:46,720 --> 00:31:48,320
less time on doing the actual code for

820
00:31:48,320 --> 00:31:49,840
the what we did in the put request but

821
00:31:49,840 --> 00:31:51,600
it does mean that uh we actually now of

822
00:31:51,600 --> 00:31:53,279
course that was a statement in time

823
00:31:53,279 --> 00:31:54,480
because since then we've had three

824
00:31:54,480 --> 00:31:56,159
issues come up right and so we'll talk

825
00:31:56,159 --> 00:31:57,440
about those two but i just want to

826
00:31:57,440 --> 00:32:00,159
highlight that we had we felt like we

827
00:32:00,159 --> 00:32:02,240
accomplished stuff and we felt like we

828
00:32:02,240 --> 00:32:03,440
were gonna make progress and we felt

829
00:32:03,440 --> 00:32:05,200
like this deck was stuck with the spec

830
00:32:05,200 --> 00:32:07,360
was becoming a lot more stable because

831
00:32:07,360 --> 00:32:08,559
we were able to walk out of the room

832
00:32:08,559 --> 00:32:09,919
saying i don't know any open issues

833
00:32:09,919 --> 00:32:12,399
right now and then we filed three later

834
00:32:12,399 --> 00:32:14,080
okay so anyway the hackathon was a great

835
00:32:14,080 --> 00:32:16,000
hackathon all right it was great and

836
00:32:16,000 --> 00:32:18,880
then thank you and and

837
00:32:18,880 --> 00:32:21,120
ken for providing the link so

838
00:32:21,120 --> 00:32:22,720
if you look at the document draft and

839
00:32:22,720 --> 00:32:25,200
the data tracker we did put links to

840
00:32:25,200 --> 00:32:26,960
some of the githubs and some of the

841
00:32:26,960 --> 00:32:28,640
implementations

842
00:32:28,640 --> 00:32:30,159
there for you we're trying to collect

843
00:32:30,159 --> 00:32:31,919
more so if yours isn't on there yet send

844
00:32:31,919 --> 00:32:34,720
it to yeah so send them to uh if you

845
00:32:34,720 --> 00:32:36,320
have an implementation that you want to

846
00:32:36,320 --> 00:32:39,200
share send them to uh

847
00:32:39,200 --> 00:32:40,799
my brain's not working

848
00:32:40,799 --> 00:32:43,840
keep chairs at iutf.com

849
00:32:43,840 --> 00:32:45,360
yeah since some are implementations of

850
00:32:45,360 --> 00:32:47,200
the tams some are implementations the tp

851
00:32:47,200 --> 00:32:48,720
agent and so on since there's multiple

852
00:32:48,720 --> 00:32:49,840
roles right

853
00:32:49,840 --> 00:32:51,200
okay

854
00:32:51,200 --> 00:32:53,279
this slide is the things that i am not

855
00:32:53,279 --> 00:32:54,960
going to talk about although akira

856
00:32:54,960 --> 00:32:56,480
talked about some of them

857
00:32:56,480 --> 00:32:58,640
um in the hackathon stuff these are

858
00:32:58,640 --> 00:33:00,480
things that were already discussed last

859
00:33:00,480 --> 00:33:01,440
meeting

860
00:33:01,440 --> 00:33:03,279
that we had resolutions that we agreed

861
00:33:03,279 --> 00:33:05,120
on during the last teep meeting and we

862
00:33:05,120 --> 00:33:06,799
did those so i'm not going to repeat

863
00:33:06,799 --> 00:33:07,840
those in the interest of time we're

864
00:33:07,840 --> 00:33:08,880
going to talk about the things that we

865
00:33:08,880 --> 00:33:10,320
didn't already have agreement on as of

866
00:33:10,320 --> 00:33:12,000
last meeting so but if you have any

867
00:33:12,000 --> 00:33:13,679
questions on these that was in the

868
00:33:13,679 --> 00:33:16,320
hackathon where uh akira talked about at

869
00:33:16,320 --> 00:33:17,679
least three of the ones that are on here

870
00:33:17,679 --> 00:33:18,480
so

871
00:33:18,480 --> 00:33:20,240
okay so next slide now we're going to

872
00:33:20,240 --> 00:33:21,919
get to the ones that are uh the new

873
00:33:21,919 --> 00:33:23,919
issues since last meeting some of which

874
00:33:23,919 --> 00:33:25,440
came up during the hackathon some were

875
00:33:25,440 --> 00:33:27,120
previous to the hackathon

876
00:33:27,120 --> 00:33:28,880
the first one was ayanna did the early

877
00:33:28,880 --> 00:33:29,919
review

878
00:33:29,919 --> 00:33:32,000
and his earlier view said hey we see the

879
00:33:32,000 --> 00:33:34,000
uh the audit consideration section has a

880
00:33:34,000 --> 00:33:35,600
section that proposes a freshness

881
00:33:35,600 --> 00:33:38,799
mechanism registry um which protocol

882
00:33:38,799 --> 00:33:40,799
page on the internet

883
00:33:40,799 --> 00:33:42,720
site has a list of registries right a

884
00:33:42,720 --> 00:33:44,960
list of uh pages where each page can

885
00:33:44,960 --> 00:33:46,159
have multiple registries on the same

886
00:33:46,159 --> 00:33:48,159
page and they say which page should this

887
00:33:48,159 --> 00:33:49,360
go on

888
00:33:49,360 --> 00:33:51,200
i said well there's not currently a tea

889
00:33:51,200 --> 00:33:52,799
parameters page although they probably

890
00:33:52,799 --> 00:33:54,720
will be because we're asking another one

891
00:33:54,720 --> 00:33:56,720
um but it's at the right page so before

892
00:33:56,720 --> 00:33:58,480
responding to ayanna we discussed as the

893
00:33:58,480 --> 00:33:59,440
table

894
00:33:59,440 --> 00:34:01,840
and i discussed it with uh one or two

895
00:34:01,840 --> 00:34:03,760
other folks in the uh

896
00:34:03,760 --> 00:34:05,519
rats but not in the rats working group

897
00:34:05,519 --> 00:34:06,720
so far

898
00:34:06,720 --> 00:34:10,560
which is should this be a teep page

899
00:34:10,560 --> 00:34:13,440
or is the freshness mechanism actually

900
00:34:13,440 --> 00:34:16,320
more of a rat's thing of which teep uses

901
00:34:16,320 --> 00:34:18,480
a couple values out of it okay this

902
00:34:18,480 --> 00:34:19,918
notion of fractions mechanisms we said

903
00:34:19,918 --> 00:34:21,359
may not actually be a t protocol

904
00:34:21,359 --> 00:34:22,960
specific thing and should we have a

905
00:34:22,960 --> 00:34:24,879
common registry and t can just use

906
00:34:24,879 --> 00:34:26,399
values out of that registry just like we

907
00:34:26,399 --> 00:34:29,119
do for say cose types and algorithms and

908
00:34:29,119 --> 00:34:30,719
things like that where we use values out

909
00:34:30,719 --> 00:34:32,239
of another registry

910
00:34:32,239 --> 00:34:33,599
and so

911
00:34:33,599 --> 00:34:36,000
uh option one is to respond to iana and

912
00:34:36,000 --> 00:34:37,918
keep the text the document as is to say

913
00:34:37,918 --> 00:34:40,560
this goes on a new page for t parameters

914
00:34:40,560 --> 00:34:41,760
and we've got more than one registry

915
00:34:41,760 --> 00:34:43,119
there anyway

916
00:34:43,119 --> 00:34:46,159
and option two is to say let's move that

917
00:34:46,159 --> 00:34:48,159
and so the proposal that hank made was

918
00:34:48,159 --> 00:34:49,359
let's move that to the reference

919
00:34:49,359 --> 00:34:51,199
interaction models and then in the

920
00:34:51,199 --> 00:34:52,480
brett's working group meeting on what

921
00:34:52,480 --> 00:34:54,560
was it tuesday or whatever we actually

922
00:34:54,560 --> 00:34:56,639
just was monday we covered this in the

923
00:34:56,639 --> 00:34:58,400
open mic section of the rat's working

924
00:34:58,400 --> 00:35:01,200
group okay and so uh what we did is we

925
00:35:01,200 --> 00:35:03,599
posted a per request that removes this

926
00:35:03,599 --> 00:35:05,520
freshness mechanism registry from the t

927
00:35:05,520 --> 00:35:07,920
protocol and instead adds a reference to

928
00:35:07,920 --> 00:35:10,320
that draft that it doesn't yet appear in

929
00:35:10,320 --> 00:35:12,320
okay so that's in the github copy okay

930
00:35:12,320 --> 00:35:13,680
which is kind of a dangling reference

931
00:35:13,680 --> 00:35:15,359
waiting for the same text to be added

932
00:35:15,359 --> 00:35:16,800
into the reference interaction models in

933
00:35:16,800 --> 00:35:18,800
rats to then make it be complete so the

934
00:35:18,800 --> 00:35:20,960
information isn't lost so that is the

935
00:35:20,960 --> 00:35:23,440
proposal the draft isn't posted yet the

936
00:35:23,440 --> 00:35:25,520
intent is that we agree that the things

937
00:35:25,520 --> 00:35:27,040
that we've talked about is the proposals

938
00:35:27,040 --> 00:35:28,720
that are sitting in the github copy are

939
00:35:28,720 --> 00:35:30,640
right then we'll post the internet draft

940
00:35:30,640 --> 00:35:32,560
that matches what's the github copy

941
00:35:32,560 --> 00:35:34,160
if we say it's wrong then we'll fix

942
00:35:34,160 --> 00:35:35,839
what's in github and then post it so

943
00:35:35,839 --> 00:35:37,040
okay

944
00:35:37,040 --> 00:35:38,800
so the proposal here is to move it to

945
00:35:38,800 --> 00:35:39,920
the reference interaction models

946
00:35:39,920 --> 00:35:42,320
document oh crap

947
00:35:42,320 --> 00:35:44,640
okay unless we hear objections since we

948
00:35:44,640 --> 00:35:46,800
had uh all but one of the implementers

949
00:35:46,800 --> 00:35:48,000
at the table and the implementers

950
00:35:48,000 --> 00:35:49,599
thought this was a good idea

951
00:35:49,599 --> 00:35:53,280
um then as well as uh the author of the

952
00:35:53,280 --> 00:35:54,960
reference interaction models which is

953
00:35:54,960 --> 00:35:57,119
the same table thank you hank

954
00:35:57,119 --> 00:36:00,560
um sorry

955
00:36:00,960 --> 00:36:02,880
i lost my connection there for a second

956
00:36:02,880 --> 00:36:04,160
all right so we'll go on to the next

957
00:36:04,160 --> 00:36:05,760
slide then i'm not hearing any

958
00:36:05,760 --> 00:36:08,720
objections there next one

959
00:36:08,800 --> 00:36:10,079
should be on okay so now we're going to

960
00:36:10,079 --> 00:36:11,599
get into the attestation category of

961
00:36:11,599 --> 00:36:13,040
stuff

962
00:36:13,040 --> 00:36:14,160
since a bunch of the implementers were

963
00:36:14,160 --> 00:36:15,920
starting to work on actual attestation

964
00:36:15,920 --> 00:36:16,720
so

965
00:36:16,720 --> 00:36:18,880
one of those issues is this one that's

966
00:36:18,880 --> 00:36:20,720
caught in the in the

967
00:36:20,720 --> 00:36:22,640
github repository the issue was labeled

968
00:36:22,640 --> 00:36:23,920
may require one more message for

969
00:36:23,920 --> 00:36:25,359
attestation

970
00:36:25,359 --> 00:36:26,800
and to explain this one i want to go

971
00:36:26,800 --> 00:36:29,359
back to a slide from ietf105 so the

972
00:36:29,359 --> 00:36:30,800
little thing in the box is the actual

973
00:36:30,800 --> 00:36:32,320
slide from that presentation and so

974
00:36:32,320 --> 00:36:34,240
you'll see some old old labels where it

975
00:36:34,240 --> 00:36:35,119
says

976
00:36:35,119 --> 00:36:37,520
otrp right here right that's way back in

977
00:36:37,520 --> 00:36:38,880
the day where we're using that acronym

978
00:36:38,880 --> 00:36:40,800
that's now deep here okay

979
00:36:40,800 --> 00:36:43,839
but uh this was a example flow that is

980
00:36:43,839 --> 00:36:45,359
not a

981
00:36:45,359 --> 00:36:46,079
by

982
00:36:46,079 --> 00:36:46,880
uh

983
00:36:46,880 --> 00:36:48,800
constraint this is to say here is a way

984
00:36:48,800 --> 00:36:50,320
to compose people with other things

985
00:36:50,320 --> 00:36:52,320
right as an example okay and this way of

986
00:36:52,320 --> 00:36:56,000
composing stuff right uh you attest so

987
00:36:56,000 --> 00:36:57,760
in between the verifier and the tester

988
00:36:57,760 --> 00:37:00,079
so this part right here is a passport

989
00:37:00,079 --> 00:37:01,440
model right

990
00:37:01,440 --> 00:37:03,200
sorry this part right here you send it

991
00:37:03,200 --> 00:37:04,400
this is a background check model i

992
00:37:04,400 --> 00:37:06,880
misspoke right it says the tester sends

993
00:37:06,880 --> 00:37:08,880
evidence through the relying party which

994
00:37:08,880 --> 00:37:11,040
is the tam off to a verifier the

995
00:37:11,040 --> 00:37:12,800
verifier sends back an attestation

996
00:37:12,800 --> 00:37:15,280
result which says yep you're good or

997
00:37:15,280 --> 00:37:16,480
you're not good

998
00:37:16,480 --> 00:37:17,760
if you're not good then of course the

999
00:37:17,760 --> 00:37:19,599
tam kicks off remediation steps to go

1000
00:37:19,599 --> 00:37:21,520
and do appropriate installs or updates

1001
00:37:21,520 --> 00:37:23,440
or whatever okay but in the case that

1002
00:37:23,440 --> 00:37:24,880
says yes you're already good there's

1003
00:37:24,880 --> 00:37:26,240
nothing for you to do

1004
00:37:26,240 --> 00:37:28,640
what happens okay here we said since

1005
00:37:28,640 --> 00:37:30,880
you're using this in the in in this mode

1006
00:37:30,880 --> 00:37:32,640
here if you can pass back the

1007
00:37:32,640 --> 00:37:34,320
attestation result that says you're good

1008
00:37:34,320 --> 00:37:36,079
you can then present that as the

1009
00:37:36,079 --> 00:37:37,920
passport model to other aligned parties

1010
00:37:37,920 --> 00:37:39,839
that's what this example is showing okay

1011
00:37:39,839 --> 00:37:41,680
just a way of getting the passport model

1012
00:37:41,680 --> 00:37:43,359
for this one with the tam as being an

1013
00:37:43,359 --> 00:37:45,280
intermediary in one leg it's just a way

1014
00:37:45,280 --> 00:37:47,440
of composing a hybrid and using two

1015
00:37:47,440 --> 00:37:49,280
different protocols together if you

1016
00:37:49,280 --> 00:37:50,640
wanted to do this

1017
00:37:50,640 --> 00:37:52,160
okay you need a way of carrying this

1018
00:37:52,160 --> 00:37:54,240
attestation result back

1019
00:37:54,240 --> 00:37:55,200
okay

1020
00:37:55,200 --> 00:37:56,880
and what we observed is that there's no

1021
00:37:56,880 --> 00:37:59,359
messaging to do that okay even though we

1022
00:37:59,359 --> 00:38:00,720
talked about that we could do this in

1023
00:38:00,720 --> 00:38:02,480
iutf105 right so that's what this issue

1024
00:38:02,480 --> 00:38:04,320
was

1025
00:38:04,320 --> 00:38:07,200
so next slide

1026
00:38:07,599 --> 00:38:09,440
okay so what did we do to fix this

1027
00:38:09,440 --> 00:38:10,880
because we all agreed gosh this would be

1028
00:38:10,880 --> 00:38:12,240
possible this would be a good thing to

1029
00:38:12,240 --> 00:38:14,240
do this originally came up in the

1030
00:38:14,240 --> 00:38:16,640
context of somebody implementing local

1031
00:38:16,640 --> 00:38:19,359
attestation with sgx but we decided it's

1032
00:38:19,359 --> 00:38:20,880
not specific to local attestation

1033
00:38:20,880 --> 00:38:22,160
there's a slide that had exactly the

1034
00:38:22,160 --> 00:38:24,880
same problem at 105 right so so here's

1035
00:38:24,880 --> 00:38:26,640
what we did so this is in the update

1036
00:38:26,640 --> 00:38:29,200
message okay normally the update message

1037
00:38:29,200 --> 00:38:30,640
saying here's something to install or

1038
00:38:30,640 --> 00:38:32,640
uninstall okay

1039
00:38:32,640 --> 00:38:34,960
but you'll notice that the manifest list

1040
00:38:34,960 --> 00:38:36,240
here

1041
00:38:36,240 --> 00:38:37,599
is optional

1042
00:38:37,599 --> 00:38:38,800
which means you can send an update

1043
00:38:38,800 --> 00:38:40,240
message with no manifest list what does

1044
00:38:40,240 --> 00:38:41,119
that mean

1045
00:38:41,119 --> 00:38:43,280
they said ah well we can just use the

1046
00:38:43,280 --> 00:38:44,880
update message to say well then you can

1047
00:38:44,880 --> 00:38:46,480
just include the attestation payload and

1048
00:38:46,480 --> 00:38:48,960
use the existing message okay

1049
00:38:48,960 --> 00:38:50,880
just put this instead so you can do this

1050
00:38:50,880 --> 00:38:54,160
you can do them both okay you say

1051
00:38:54,160 --> 00:38:55,440
you're good but then here's something

1052
00:38:55,440 --> 00:38:57,200
else to install too right and so this

1053
00:38:57,200 --> 00:38:58,480
seemed to be the natural way to do it

1054
00:38:58,480 --> 00:39:00,240
and so we added these fields here which

1055
00:39:00,240 --> 00:39:04,160
match um how it appears in um

1056
00:39:04,160 --> 00:39:05,599
the

1057
00:39:05,599 --> 00:39:07,119
query response message when you're

1058
00:39:07,119 --> 00:39:09,280
sending stuff to the tam okay and so we

1059
00:39:09,280 --> 00:39:10,640
took the same definitions for these and

1060
00:39:10,640 --> 00:39:12,320
copied them into this message and we

1061
00:39:12,320 --> 00:39:13,599
said yep this seems to be the nice

1062
00:39:13,599 --> 00:39:14,800
simple way to do it that does not

1063
00:39:14,800 --> 00:39:17,200
require adding any new messages you're

1064
00:39:17,200 --> 00:39:18,800
just now able to send a message that you

1065
00:39:18,800 --> 00:39:21,119
couldn't send before right

1066
00:39:21,119 --> 00:39:22,880
okay

1067
00:39:22,880 --> 00:39:24,880
so that's what we did in the github copy

1068
00:39:24,880 --> 00:39:26,560
of the spec if you look there

1069
00:39:26,560 --> 00:39:27,520
so i just showed you what the main

1070
00:39:27,520 --> 00:39:28,960
difference was

1071
00:39:28,960 --> 00:39:31,680
okay next one um and akira i talked

1072
00:39:31,680 --> 00:39:33,119
about this one a little bit as far as

1073
00:39:33,119 --> 00:39:35,440
what the problem was which is um

1074
00:39:35,440 --> 00:39:37,200
uh can you go back for just a second to

1075
00:39:37,200 --> 00:39:39,200
the ietf 105 slide

1076
00:39:39,200 --> 00:39:40,400
um just because i can point to the

1077
00:39:40,400 --> 00:39:41,920
diagram there for a second so that's two

1078
00:39:41,920 --> 00:39:43,680
slides back

1079
00:39:43,680 --> 00:39:45,119
um in there

1080
00:39:45,119 --> 00:39:46,079
um

1081
00:39:46,079 --> 00:39:47,520
the thing that goes back and forth

1082
00:39:47,520 --> 00:39:49,200
between the teep and the tam and stuff

1083
00:39:49,200 --> 00:39:50,640
was either okay i guess you don't have

1084
00:39:50,640 --> 00:39:51,440
to

1085
00:39:51,440 --> 00:39:53,040
was either attestation result or

1086
00:39:53,040 --> 00:39:54,320
evidence depending on whether you're

1087
00:39:54,320 --> 00:39:55,760
using at that station i'm afraid it's

1088
00:39:55,760 --> 00:39:57,040
going to crash again okay don't worry

1089
00:39:57,040 --> 00:39:59,280
about it

1090
00:39:59,280 --> 00:40:01,280
you can use the there we go you can use

1091
00:40:01,280 --> 00:40:02,960
the background check model through here

1092
00:40:02,960 --> 00:40:04,400
in which case you're passing evidence

1093
00:40:04,400 --> 00:40:06,640
through okay you can also use it in a

1094
00:40:06,640 --> 00:40:08,079
background check model right just

1095
00:40:08,079 --> 00:40:09,520
pretend that this was a tam over here

1096
00:40:09,520 --> 00:40:11,119
and you're passing an attestation result

1097
00:40:11,119 --> 00:40:12,800
to it and so how do you how do you

1098
00:40:12,800 --> 00:40:14,400
specify which is the case okay you can

1099
00:40:14,400 --> 00:40:16,960
go forward now

1100
00:40:17,119 --> 00:40:18,240
back to the slide that we're on slide

1101
00:40:18,240 --> 00:40:20,079
eight yeah okay so and the spec didn't

1102
00:40:20,079 --> 00:40:22,400
actually say right you can kind of infer

1103
00:40:22,400 --> 00:40:24,319
right but it wasn't explicit so we added

1104
00:40:24,319 --> 00:40:26,240
this text and so here's the rule that we

1105
00:40:26,240 --> 00:40:28,319
agreed on that says okay

1106
00:40:28,319 --> 00:40:30,000
uh there's the attestation payload

1107
00:40:30,000 --> 00:40:32,640
format and attestation payload payload

1108
00:40:32,640 --> 00:40:35,040
format is a media type plus parameters

1109
00:40:35,040 --> 00:40:36,720
right it's like a content type in http

1110
00:40:36,720 --> 00:40:38,960
for example right okay so you can look

1111
00:40:38,960 --> 00:40:40,240
at that

1112
00:40:40,240 --> 00:40:41,520
and if it contains something you

1113
00:40:41,520 --> 00:40:44,960
recognize and as an assassination result

1114
00:40:44,960 --> 00:40:46,960
then it's an attestation result

1115
00:40:46,960 --> 00:40:48,880
if it's anything else it's evidence to

1116
00:40:48,880 --> 00:40:51,280
pass on to a verifier

1117
00:40:51,280 --> 00:40:54,400
okay and that's because the uh tam

1118
00:40:54,400 --> 00:40:56,079
is going to get attestation results at

1119
00:40:56,079 --> 00:40:57,200
the end of the day either he gets it

1120
00:40:57,200 --> 00:40:59,119
directly from the heap agent or it gets

1121
00:40:59,119 --> 00:41:00,560
it from the verifier so he's looking for

1122
00:41:00,560 --> 00:41:01,760
an active station result in a particular

1123
00:41:01,760 --> 00:41:03,839
format okay so he says if i've already

1124
00:41:03,839 --> 00:41:05,520
got what i need i'm done if i don't have

1125
00:41:05,520 --> 00:41:06,720
what i need i'll ship it off to a

1126
00:41:06,720 --> 00:41:08,000
verifier and ask them hey can you

1127
00:41:08,000 --> 00:41:09,280
translate this in the thing that i need

1128
00:41:09,280 --> 00:41:11,280
an attestation or something

1129
00:41:11,280 --> 00:41:13,280
so that's what the text now says

1130
00:41:13,280 --> 00:41:15,680
okay so once you get the attestation

1131
00:41:15,680 --> 00:41:17,200
result okay

1132
00:41:17,200 --> 00:41:18,800
then we added in more explicit text as

1133
00:41:18,800 --> 00:41:20,079
to what to do about that okay when you

1134
00:41:20,079 --> 00:41:22,000
get the attestation result response from

1135
00:41:22,000 --> 00:41:23,280
the verifier there's three things

1136
00:41:23,280 --> 00:41:24,560
there's three states you could be in

1137
00:41:24,560 --> 00:41:25,520
okay

1138
00:41:25,520 --> 00:41:27,280
if the attestation result response on

1139
00:41:27,280 --> 00:41:30,319
the verifier says the guy is bad okay in

1140
00:41:30,319 --> 00:41:32,160
which case you can't trust the rest of

1141
00:41:32,160 --> 00:41:33,839
the query response right because it came

1142
00:41:33,839 --> 00:41:34,960
from a cheap agent that could be

1143
00:41:34,960 --> 00:41:36,079
compromised

1144
00:41:36,079 --> 00:41:37,520
or could be out of date okay so that

1145
00:41:37,520 --> 00:41:38,960
means you can't trust

1146
00:41:38,960 --> 00:41:40,400
the list of trusted components that's in

1147
00:41:40,400 --> 00:41:41,599
the teat message you can only trust

1148
00:41:41,599 --> 00:41:43,680
what's in the attestation results okay

1149
00:41:43,680 --> 00:41:45,680
so in this case well you could try to

1150
00:41:45,680 --> 00:41:47,280
trust it but there's not good security

1151
00:41:47,280 --> 00:41:48,720
considerations and accepting something

1152
00:41:48,720 --> 00:41:50,640
they just failed attestation right so

1153
00:41:50,640 --> 00:41:52,240
you can't believe it okay so in that

1154
00:41:52,240 --> 00:41:54,160
case you can try to update the teep

1155
00:41:54,160 --> 00:41:55,920
agent and all the dependencies even if

1156
00:41:55,920 --> 00:41:57,680
the deep agent claims to be up to date

1157
00:41:57,680 --> 00:41:59,760
okay if there's information inside the

1158
00:41:59,760 --> 00:42:01,680
attestation result that tells you which

1159
00:42:01,680 --> 00:42:03,200
pieces are good and which pieces are bad

1160
00:42:03,200 --> 00:42:05,280
you can use that okay but you can't use

1161
00:42:05,280 --> 00:42:06,319
it just because it appeared in the deep

1162
00:42:06,319 --> 00:42:09,200
message okay so that's case one

1163
00:42:09,200 --> 00:42:11,040
case two is where the verifier said the

1164
00:42:11,040 --> 00:42:13,119
type agent is good you can trust them

1165
00:42:13,119 --> 00:42:14,560
meaning you

1166
00:42:14,560 --> 00:42:17,119
that according to the verifiers policy

1167
00:42:17,119 --> 00:42:18,480
he's good and trustable and you can then

1168
00:42:18,480 --> 00:42:19,760
choose what to do with that information

1169
00:42:19,760 --> 00:42:21,839
right you can choose to trust him okay

1170
00:42:21,839 --> 00:42:23,599
but the information the teat message

1171
00:42:23,599 --> 00:42:24,960
says that he's out of date like he's

1172
00:42:24,960 --> 00:42:26,720
missing some things he should have or

1173
00:42:26,720 --> 00:42:28,400
he's saying i'm done with this thing

1174
00:42:28,400 --> 00:42:30,400
that i was using before and so then i

1175
00:42:30,400 --> 00:42:31,839
can just accept the stuff that's in the

1176
00:42:31,839 --> 00:42:33,760
team message and do updates according to

1177
00:42:33,760 --> 00:42:35,440
that okay

1178
00:42:35,440 --> 00:42:37,359
and the third case is where attestation

1179
00:42:37,359 --> 00:42:39,680
succeeded and the t message also just

1180
00:42:39,680 --> 00:42:42,319
passes policy nothing to do okay so in

1181
00:42:42,319 --> 00:42:43,520
both of the first two cases you're going

1182
00:42:43,520 --> 00:42:44,960
to send an update message but what you

1183
00:42:44,960 --> 00:42:46,240
put in there is based on different

1184
00:42:46,240 --> 00:42:47,839
pieces of information this one is based

1185
00:42:47,839 --> 00:42:49,680
on the attestation results this and it's

1186
00:42:49,680 --> 00:42:51,680
based on the cheap message

1187
00:42:51,680 --> 00:42:53,200
number three there's no update message

1188
00:42:53,200 --> 00:42:55,520
necessary it's nothing to do

1189
00:42:55,520 --> 00:42:57,280
other than perhaps pass back that

1190
00:42:57,280 --> 00:42:58,640
attestation result as shown in the

1191
00:42:58,640 --> 00:43:00,000
previous slide

1192
00:43:00,000 --> 00:43:02,000
okay if you're in that mode

1193
00:43:02,000 --> 00:43:03,599
make sense

1194
00:43:03,599 --> 00:43:04,720
okay

1195
00:43:04,720 --> 00:43:07,200
that's that was issue 224

1196
00:43:07,200 --> 00:43:09,040
next

1197
00:43:09,040 --> 00:43:10,880
um so we had this discussion and i think

1198
00:43:10,880 --> 00:43:14,079
we even uh pinged uh brandon uh brendan

1199
00:43:14,079 --> 00:43:15,839
um during the i think it was during the

1200
00:43:15,839 --> 00:43:18,640
hackathon uh who was online uh the suit

1201
00:43:18,640 --> 00:43:20,319
component identifier isn't unique is

1202
00:43:20,319 --> 00:43:23,200
what the label of the issue was okay

1203
00:43:23,200 --> 00:43:25,200
i forgot daniel's on the queue

1204
00:43:25,200 --> 00:43:26,240
the q you want to go back one i'll take

1205
00:43:26,240 --> 00:43:28,400
daniel yeah

1206
00:43:28,400 --> 00:43:30,800
so actually it's just a question that

1207
00:43:30,800 --> 00:43:33,200
raised into my mind and i apologize for

1208
00:43:33,200 --> 00:43:35,599
not reading the document yet

1209
00:43:35,599 --> 00:43:38,319
but when it says when you recognize the

1210
00:43:38,319 --> 00:43:40,960
payload as an attestation result do you

1211
00:43:40,960 --> 00:43:42,960
mean you have to pass the payload or do

1212
00:43:42,960 --> 00:43:45,280
you have an explicit

1213
00:43:45,280 --> 00:43:47,200
thing that says it's a brazil

1214
00:43:47,200 --> 00:43:51,040
anti-station results or it's an evidence

1215
00:43:51,040 --> 00:43:53,680
the specific media type

1216
00:43:53,680 --> 00:43:55,520
will say that it's an attestation result

1217
00:43:55,520 --> 00:43:57,520
so in this case the specific media type

1218
00:43:57,520 --> 00:43:59,359
the there's a media type and parameters

1219
00:43:59,359 --> 00:44:02,160
the and this uh references in rats

1220
00:44:02,160 --> 00:44:03,920
there's a document that's proposed as a

1221
00:44:03,920 --> 00:44:06,319
working group document that i on behalf

1222
00:44:06,319 --> 00:44:08,000
of the t protocol implementers said

1223
00:44:08,000 --> 00:44:09,599
please adopt this in rats right it's

1224
00:44:09,599 --> 00:44:11,040
lawrence lundblade's document about eat

1225
00:44:11,040 --> 00:44:12,240
media types

1226
00:44:12,240 --> 00:44:14,480
and so the media type itself is you know

1227
00:44:14,480 --> 00:44:17,520
e cwt or whatever okay and then there's

1228
00:44:17,520 --> 00:44:19,119
a parameter that says which profile it

1229
00:44:19,119 --> 00:44:21,520
is okay and cheap document we specify

1230
00:44:21,520 --> 00:44:22,880
any profile

1231
00:44:22,880 --> 00:44:25,680
and so the full attestation payload

1232
00:44:25,680 --> 00:44:28,640
format is you know application slash eat

1233
00:44:28,640 --> 00:44:31,760
dash dot cbt semicolon profile equals

1234
00:44:31,760 --> 00:44:33,280
the name of the e profile and that means

1235
00:44:33,280 --> 00:44:34,800
it's an e profile for attestation

1236
00:44:34,800 --> 00:44:36,400
results right so that's the one that's

1237
00:44:36,400 --> 00:44:37,520
well known you could define another

1238
00:44:37,520 --> 00:44:39,520
well-known one in addition to that but

1239
00:44:39,520 --> 00:44:41,200
that's at least one example and so in

1240
00:44:41,200 --> 00:44:43,599
the implementation we said if it's equal

1241
00:44:43,599 --> 00:44:45,520
to exactly that string then call our

1242
00:44:45,520 --> 00:44:48,800
e-code else ship it off to a verifier

1243
00:44:48,800 --> 00:44:50,400
okay

1244
00:44:50,400 --> 00:44:53,280
all right so let's go forward

1245
00:44:53,280 --> 00:44:55,040
uh okay

1246
00:44:55,040 --> 00:44:58,079
so in here um what was in the t protocol

1247
00:44:58,079 --> 00:44:59,920
well you can see the old right there was

1248
00:44:59,920 --> 00:45:01,599
a list of components

1249
00:45:01,599 --> 00:45:03,520
which each had a tc info structure the

1250
00:45:03,520 --> 00:45:05,119
tc infrastructure is here in the lower

1251
00:45:05,119 --> 00:45:06,640
left corner of the slide which says

1252
00:45:06,640 --> 00:45:08,319
here's a suit component identifier and a

1253
00:45:08,319 --> 00:45:10,400
management sequence number okay

1254
00:45:10,400 --> 00:45:12,240
and so we said well consider the case

1255
00:45:12,240 --> 00:45:13,680
where somebody

1256
00:45:13,680 --> 00:45:16,960
gets a new component on the device

1257
00:45:16,960 --> 00:45:18,640
such as via sneakernet it didn't come

1258
00:45:18,640 --> 00:45:20,880
through the tam right okay and so it

1259
00:45:20,880 --> 00:45:23,280
replaces a previous implementation

1260
00:45:23,280 --> 00:45:24,560
one example of a suit component

1261
00:45:24,560 --> 00:45:27,200
identifier is a file system path

1262
00:45:27,200 --> 00:45:29,359
okay so let's say you replace the

1263
00:45:29,359 --> 00:45:30,800
component sitting in a file system path

1264
00:45:30,800 --> 00:45:32,400
with an alternate implementation say you

1265
00:45:32,400 --> 00:45:34,720
replace my implementation with a curious

1266
00:45:34,720 --> 00:45:35,440
okay

1267
00:45:35,440 --> 00:45:37,760
it's a different component right it may

1268
00:45:37,760 --> 00:45:39,599
have the same manifest sequence number

1269
00:45:39,599 --> 00:45:41,040
out of the other numbering space right

1270
00:45:41,040 --> 00:45:42,480
as the other manifest sequence number or

1271
00:45:42,480 --> 00:45:44,720
whatever so if it goes in the same file

1272
00:45:44,720 --> 00:45:46,560
system path and it has the same version

1273
00:45:46,560 --> 00:45:48,319
number of the other manifest then of

1274
00:45:48,319 --> 00:45:49,280
course

1275
00:45:49,280 --> 00:45:51,119
if all you do is report this combination

1276
00:45:51,119 --> 00:45:53,440
here the tam can't actually distinguish

1277
00:45:53,440 --> 00:45:54,560
between the case that it still has the

1278
00:45:54,560 --> 00:45:56,319
thing that input there versus been

1279
00:45:56,319 --> 00:45:57,760
replaced by something else that happens

1280
00:45:57,760 --> 00:45:59,200
to have the same values as we said

1281
00:45:59,200 --> 00:46:01,920
that's bad okay we need to fix that okay

1282
00:46:01,920 --> 00:46:03,839
and so instead we said well we looked at

1283
00:46:03,839 --> 00:46:05,359
the suit report document which we

1284
00:46:05,359 --> 00:46:06,720
already referenced

1285
00:46:06,720 --> 00:46:08,640
and it has system property claims with

1286
00:46:08,640 --> 00:46:10,640
the stuff on the right there okay which

1287
00:46:10,640 --> 00:46:13,200
has a system suit component identifier

1288
00:46:13,200 --> 00:46:15,520
and a set of suit parameters okay which

1289
00:46:15,520 --> 00:46:17,359
includes the ability to have things like

1290
00:46:17,359 --> 00:46:20,000
a digest but ah rather than us defining

1291
00:46:20,000 --> 00:46:21,280
our own thing let's just do what we're

1292
00:46:21,280 --> 00:46:22,480
already doing in this in the seat

1293
00:46:22,480 --> 00:46:24,400
reports draft which we're already using

1294
00:46:24,400 --> 00:46:27,520
anyway right less code copy code from

1295
00:46:27,520 --> 00:46:30,400
here call that same thing okay

1296
00:46:30,400 --> 00:46:32,480
so that's why we replace tc info with

1297
00:46:32,480 --> 00:46:34,480
system property claims here

1298
00:46:34,480 --> 00:46:35,760
and when you're reporting in the teep

1299
00:46:35,760 --> 00:46:37,599
message here's all the other tas that

1300
00:46:37,599 --> 00:46:40,319
are installed on my

1301
00:46:40,839 --> 00:46:43,920
box okay

1302
00:46:43,920 --> 00:46:46,640
nobody in queue okay i'll keep going

1303
00:46:46,640 --> 00:46:49,359
issue 189 um akira mentioned reliably

1304
00:46:49,359 --> 00:46:51,440
getting te hardware properties this is

1305
00:46:51,440 --> 00:46:53,920
the way it's called in the github issue

1306
00:46:53,920 --> 00:46:55,520
and so to summarize what this one is

1307
00:46:55,520 --> 00:46:58,160
there are four different ways to get

1308
00:46:58,160 --> 00:47:00,640
that you could possibly maybe get

1309
00:47:00,640 --> 00:47:02,240
properties of the te and a career

1310
00:47:02,240 --> 00:47:04,000
response and so properties of a tv mean

1311
00:47:04,000 --> 00:47:05,680
things like oh is this running you know

1312
00:47:05,680 --> 00:47:08,079
sgx or trust zone well if it's sgx is it

1313
00:47:08,079 --> 00:47:11,119
sgx1 or two right or does it have you

1314
00:47:11,119 --> 00:47:12,800
know monotonic counters or not because

1315
00:47:12,800 --> 00:47:14,079
there's different variations of trust

1316
00:47:14,079 --> 00:47:15,440
zone and so on so where do you get that

1317
00:47:15,440 --> 00:47:17,440
information from okay well there's four

1318
00:47:17,440 --> 00:47:19,200
possible answers today

1319
00:47:19,200 --> 00:47:20,319
first one is you could get it from

1320
00:47:20,319 --> 00:47:22,000
attestation results okay if there's

1321
00:47:22,000 --> 00:47:24,079
actually e claims or if you're not using

1322
00:47:24,079 --> 00:47:26,240
eat if you're using say sgx reports as a

1323
00:47:26,240 --> 00:47:27,599
custom format

1324
00:47:27,599 --> 00:47:28,880
you could get it in there if it's in

1325
00:47:28,880 --> 00:47:31,359
there okay and of course

1326
00:47:31,359 --> 00:47:33,440
that answer for the tam to get it means

1327
00:47:33,440 --> 00:47:35,760
it has to be in the attestation results

1328
00:47:35,760 --> 00:47:37,520
okay not just the evidence so it means

1329
00:47:37,520 --> 00:47:39,119
the verifier has to be responsible for

1330
00:47:39,119 --> 00:47:40,720
copying the information

1331
00:47:40,720 --> 00:47:42,800
out of the evidence into the attestation

1332
00:47:42,800 --> 00:47:45,200
result just so the time can get it okay

1333
00:47:45,200 --> 00:47:47,119
that's absolutely possible but it places

1334
00:47:47,119 --> 00:47:49,040
this extra dependency on the tam doing

1335
00:47:49,040 --> 00:47:50,640
things that may cause interoperability

1336
00:47:50,640 --> 00:47:51,680
issues if you're trying to use a tan

1337
00:47:51,680 --> 00:47:54,400
that doesn't do that okay or perhaps on

1338
00:47:54,400 --> 00:47:55,920
on a different um

1339
00:47:55,920 --> 00:47:58,160
uh administrator of the the one that's

1340
00:47:58,160 --> 00:47:59,520
administrated the verifier versus the

1341
00:47:59,520 --> 00:48:01,200
administrator the tam okay so that's

1342
00:48:01,200 --> 00:48:02,640
possible right but it's this extra

1343
00:48:02,640 --> 00:48:04,000
burden says this case there way to get

1344
00:48:04,000 --> 00:48:05,599
around that

1345
00:48:05,599 --> 00:48:07,280
second possibility is you could get it

1346
00:48:07,280 --> 00:48:08,800
out of suit reports right because you

1347
00:48:08,800 --> 00:48:11,040
can pass that in uh you know when i boot

1348
00:48:11,040 --> 00:48:13,440
up and i pass stuff to the to the tam as

1349
00:48:13,440 --> 00:48:14,960
uh you know here's my current state and

1350
00:48:14,960 --> 00:48:16,800
so on i could put in the suit report

1351
00:48:16,800 --> 00:48:18,480
okay well this is great if you're

1352
00:48:18,480 --> 00:48:19,920
generating suit reports as part of your

1353
00:48:19,920 --> 00:48:21,520
boot sequence right which a lot of suit

1354
00:48:21,520 --> 00:48:22,880
implementations do that especially in

1355
00:48:22,880 --> 00:48:25,440
iot space right brenda's

1356
00:48:25,440 --> 00:48:26,880
design and the suit reports is to

1357
00:48:26,880 --> 00:48:28,319
accommodate people who do explicitly

1358
00:48:28,319 --> 00:48:30,640
that right as to say if i had an error

1359
00:48:30,640 --> 00:48:32,000
booting or whatever i can generate your

1360
00:48:32,000 --> 00:48:33,839
suit report that says that okay but

1361
00:48:33,839 --> 00:48:35,280
doing it here says well now i've got to

1362
00:48:35,280 --> 00:48:37,119
require that all te implementations

1363
00:48:37,119 --> 00:48:39,359
generates your reports at t at boot time

1364
00:48:39,359 --> 00:48:41,680
or you know launch time okay

1365
00:48:41,680 --> 00:48:42,960
uh boot is not necessarily the right

1366
00:48:42,960 --> 00:48:45,359
term for like sgx right at launch time

1367
00:48:45,359 --> 00:48:46,720
uh load time

1368
00:48:46,720 --> 00:48:49,040
um and so that may be too burdensome for

1369
00:48:49,040 --> 00:48:51,760
some teas like sgx for example and by

1370
00:48:51,760 --> 00:48:53,520
the way uh draft 009 of the heat

1371
00:48:53,520 --> 00:48:54,960
protocol actually said to do this one

1372
00:48:54,960 --> 00:48:57,119
and we said maybe that's too burdensome

1373
00:48:57,119 --> 00:48:58,880
especially as we had sgx implementers at

1374
00:48:58,880 --> 00:49:00,640
the table that said gosh this is really

1375
00:49:00,640 --> 00:49:02,240
hard for me to implement so we said okay

1376
00:49:02,240 --> 00:49:04,640
maybe that's not the right one either

1377
00:49:04,640 --> 00:49:06,640
the third possibility is uh neither of

1378
00:49:06,640 --> 00:49:07,760
those but there's a different field

1379
00:49:07,760 --> 00:49:09,440
that's the tc list that's the one i

1380
00:49:09,440 --> 00:49:12,000
showed on the previous slide

1381
00:49:12,000 --> 00:49:13,599
but that's meant for components that can

1382
00:49:13,599 --> 00:49:15,520
be updated by via teep right that's

1383
00:49:15,520 --> 00:49:16,800
trusted components it's not for the

1384
00:49:16,800 --> 00:49:18,400
hardware right

1385
00:49:18,400 --> 00:49:19,839
so it'd be kind of maybe arguably a

1386
00:49:19,839 --> 00:49:21,280
misuse of that field because if you

1387
00:49:21,280 --> 00:49:22,720
can't update it then maybe it's not a

1388
00:49:22,720 --> 00:49:24,160
trusted component we didn't define

1389
00:49:24,160 --> 00:49:26,079
trusted component as being something

1390
00:49:26,079 --> 00:49:27,200
that was hardware we said it's something

1391
00:49:27,200 --> 00:49:28,880
that can be updated okay so that's

1392
00:49:28,880 --> 00:49:30,400
probably not the right place either

1393
00:49:30,400 --> 00:49:32,960
so that left us with some new field

1394
00:49:32,960 --> 00:49:33,920
okay

1395
00:49:33,920 --> 00:49:36,000
and so that's as the implementer as we

1396
00:49:36,000 --> 00:49:37,359
said this is going to be the easiest one

1397
00:49:37,359 --> 00:49:38,720
that's the most extensible because it

1398
00:49:38,720 --> 00:49:40,240
doesn't have these other dependencies it

1399
00:49:40,240 --> 00:49:42,720
works in all these other cases and so we

1400
00:49:42,720 --> 00:49:44,480
came up with this one and it reuses that

1401
00:49:44,480 --> 00:49:46,160
system property claims that we just

1402
00:49:46,160 --> 00:49:47,359
showed in the previous slides we had a

1403
00:49:47,359 --> 00:49:49,359
new field that said you can do this

1404
00:49:49,359 --> 00:49:51,200
directly and put it in the system

1405
00:49:51,200 --> 00:49:52,960
property claims even if you're not doing

1406
00:49:52,960 --> 00:49:54,480
a full suit report you just have that

1407
00:49:54,480 --> 00:49:56,000
one little snippet that was defined by

1408
00:49:56,000 --> 00:49:57,760
the suit report spec

1409
00:49:57,760 --> 00:49:59,119
but it's not really specific to suit

1410
00:49:59,119 --> 00:50:01,760
reports so that's what we did uh and the

1411
00:50:01,760 --> 00:50:03,359
implementers other than all the

1412
00:50:03,359 --> 00:50:04,319
implementers who were at the table

1413
00:50:04,319 --> 00:50:06,720
anyway said yeah let's do it this way

1414
00:50:06,720 --> 00:50:08,559
you've got michael on the queue okay

1415
00:50:08,559 --> 00:50:12,040
great michael

1416
00:50:13,760 --> 00:50:15,359
michael richardson the mic so as i

1417
00:50:15,359 --> 00:50:17,119
understand it it was too burdensome to

1418
00:50:17,119 --> 00:50:19,359
do suit reports at boot time

1419
00:50:19,359 --> 00:50:22,800
so you're doing a subset of suit reports

1420
00:50:22,800 --> 00:50:24,720
later on

1421
00:50:24,720 --> 00:50:26,400
because this new system property claims

1422
00:50:26,400 --> 00:50:29,599
is out of supports right

1423
00:50:30,240 --> 00:50:32,479
um

1424
00:50:32,720 --> 00:50:35,040
the system property claims we're saying

1425
00:50:35,040 --> 00:50:37,040
is technically not really specific to

1426
00:50:37,040 --> 00:50:39,119
suit reports okay yeah i get that but it

1427
00:50:39,119 --> 00:50:40,800
was defined by that gosh yeah you're

1428
00:50:40,800 --> 00:50:43,760
right okay i i wonder if you or someone

1429
00:50:43,760 --> 00:50:46,079
else could elaborate why

1430
00:50:46,079 --> 00:50:50,079
it's two birds burden some what is it

1431
00:50:50,079 --> 00:50:52,160
that's making it hard i just want to

1432
00:50:52,160 --> 00:50:53,599
understand the decision better that's

1433
00:50:53,599 --> 00:50:56,000
all uh you're talking about this yeah

1434
00:50:56,000 --> 00:50:58,240
why is that so hard to do

1435
00:50:58,240 --> 00:51:02,000
uh for t sgx um is is there something

1436
00:51:02,000 --> 00:51:04,720
i'm missing about this about

1437
00:51:04,720 --> 00:51:05,920
i wasn't one of the people implementing

1438
00:51:05,920 --> 00:51:07,760
that and so i wonder if anybody else

1439
00:51:07,760 --> 00:51:09,920
i'll ask on the list then but i'm just i

1440
00:51:09,920 --> 00:51:12,800
just i think that there's some valuable

1441
00:51:12,800 --> 00:51:15,280
uh insight into what's going on that

1442
00:51:15,280 --> 00:51:16,240
might be

1443
00:51:16,240 --> 00:51:17,119
uh

1444
00:51:17,119 --> 00:51:19,280
it's worth worth worth having a deeper

1445
00:51:19,280 --> 00:51:21,599
understanding behind this decision for

1446
00:51:21,599 --> 00:51:22,880
later on

1447
00:51:22,880 --> 00:51:24,400
uh because i'm sure we'll have someone

1448
00:51:24,400 --> 00:51:25,920
that goes you know

1449
00:51:25,920 --> 00:51:27,760
from risk five or something well that's

1450
00:51:27,760 --> 00:51:30,079
silly we just do it that way i mean you

1451
00:51:30,079 --> 00:51:31,680
know but but but there's probably

1452
00:51:31,680 --> 00:51:33,359
something deeper there as i just think

1453
00:51:33,359 --> 00:51:35,200
we need to capture it

1454
00:51:35,200 --> 00:51:36,480
unfortunately we do have a risk five

1455
00:51:36,480 --> 00:51:38,240
person at the table so oh okay i don't

1456
00:51:38,240 --> 00:51:38,880
know

1457
00:51:38,880 --> 00:51:40,240
so yeah so

1458
00:51:40,240 --> 00:51:42,240
some new new new processor yet to be

1459
00:51:42,240 --> 00:51:44,079
invented okay

1460
00:51:44,079 --> 00:51:46,880
um yes uh the suit working group is

1461
00:51:46,880 --> 00:51:49,200
later today there is a suit hackathon

1462
00:51:49,200 --> 00:51:50,720
report on the agenda i don't know that

1463
00:51:50,720 --> 00:51:52,720
this point is on there but probably

1464
00:51:52,720 --> 00:51:54,160
should be to your point michael so

1465
00:51:54,160 --> 00:51:55,599
because i'm sure the suit working group

1466
00:51:55,599 --> 00:51:57,760
would love to hear that um

1467
00:51:57,760 --> 00:51:58,880
uh

1468
00:51:58,880 --> 00:52:00,079
feedback to say is there something we

1469
00:52:00,079 --> 00:52:01,680
should do in the shoot reports document

1470
00:52:01,680 --> 00:52:02,720
right

1471
00:52:02,720 --> 00:52:04,400
is it already applicable as is do we

1472
00:52:04,400 --> 00:52:05,680
need to have an applicability statement

1473
00:52:05,680 --> 00:52:07,200
or is there some way easy way to modify

1474
00:52:07,200 --> 00:52:08,720
it that would be applicable all great

1475
00:52:08,720 --> 00:52:11,118
questions

1476
00:52:12,640 --> 00:52:16,118
yeah go ahead brian

1477
00:52:18,000 --> 00:52:20,559
so generating a suit report as as the

1478
00:52:20,559 --> 00:52:21,599
first thing

1479
00:52:21,599 --> 00:52:24,480
essentially implies two pieces of

1480
00:52:24,480 --> 00:52:28,880
information uh the first is that you are

1481
00:52:28,880 --> 00:52:30,960
booting your device

1482
00:52:30,960 --> 00:52:34,640
use or or invoking an image using suit

1483
00:52:34,640 --> 00:52:36,640
using a suit manifest if you're not

1484
00:52:36,640 --> 00:52:38,240
invoking your image using a suit

1485
00:52:38,240 --> 00:52:40,960
manifest then it's probably not the

1486
00:52:40,960 --> 00:52:44,240
right answer um and that that would be a

1487
00:52:44,240 --> 00:52:45,040
good

1488
00:52:45,040 --> 00:52:48,160
probably argument to to look somewhere

1489
00:52:48,160 --> 00:52:49,040
else

1490
00:52:49,040 --> 00:52:50,960
um

1491
00:52:50,960 --> 00:52:53,839
that said i would hope that if you're

1492
00:52:53,839 --> 00:52:57,280
not using a suit manifest that you can

1493
00:52:57,280 --> 00:53:00,720
get attestation results because i'm not

1494
00:53:00,720 --> 00:53:02,960
being able to get the this information

1495
00:53:02,960 --> 00:53:05,200
and attestation revolt results is a bit

1496
00:53:05,200 --> 00:53:06,720
surprising to me

1497
00:53:06,720 --> 00:53:07,680
um

1498
00:53:07,680 --> 00:53:10,480
now to the other point about uh using

1499
00:53:10,480 --> 00:53:12,319
system property claims

1500
00:53:12,319 --> 00:53:13,280
um

1501
00:53:13,280 --> 00:53:16,000
that also seems to be a slightly strange

1502
00:53:16,000 --> 00:53:18,319
choice to me uh because those system

1503
00:53:18,319 --> 00:53:21,440
property claims are they're they're the

1504
00:53:21,440 --> 00:53:23,359
direct result of the suit reporting

1505
00:53:23,359 --> 00:53:25,680
policy that's exactly the reason that

1506
00:53:25,680 --> 00:53:29,520
they exist um and and so i'm not certain

1507
00:53:29,520 --> 00:53:32,160
that that is quite what you're looking

1508
00:53:32,160 --> 00:53:34,880
for i wonder if maybe

1509
00:53:34,880 --> 00:53:37,520
i'm just borrowing attestation claims

1510
00:53:37,520 --> 00:53:40,160
from rats even if you're not using the

1511
00:53:40,160 --> 00:53:42,640
attestation results might be the right

1512
00:53:42,640 --> 00:53:44,960
answer

1513
00:53:44,960 --> 00:53:46,559
you couldn't see this but michael

1514
00:53:46,559 --> 00:53:47,839
richardson just had a shrug that

1515
00:53:47,839 --> 00:53:48,880
everybody in the room saw that you

1516
00:53:48,880 --> 00:53:53,000
couldn't say so okay

1517
00:53:58,720 --> 00:53:59,520
okay

1518
00:53:59,520 --> 00:54:02,079
uh i i i agree with the first thing that

1519
00:54:02,079 --> 00:54:04,079
uh brennan said that makes sense about

1520
00:54:04,079 --> 00:54:05,839
you know that if you're not using the

1521
00:54:05,839 --> 00:54:07,599
suit directives to do the load or

1522
00:54:07,599 --> 00:54:09,040
whatever then it doesn't make sense to

1523
00:54:09,040 --> 00:54:10,880
have a suit report to report which which

1524
00:54:10,880 --> 00:54:13,040
directive was an error so

1525
00:54:13,040 --> 00:54:14,720
but why you're not using the suit report

1526
00:54:14,720 --> 00:54:18,160
to put as more interesting questions so

1527
00:54:18,160 --> 00:54:19,839
all right

1528
00:54:19,839 --> 00:54:21,359
so i see the queue is empty so i'm going

1529
00:54:21,359 --> 00:54:22,960
to go on to the next one which is very

1530
00:54:22,960 --> 00:54:25,040
similar except for this one unlike

1531
00:54:25,040 --> 00:54:26,960
hardware this one is reliably getting to

1532
00:54:26,960 --> 00:54:29,599
e firmware properties so this one is an

1533
00:54:29,599 --> 00:54:31,839
updatable component okay but otherwise

1534
00:54:31,839 --> 00:54:33,200
it's very similar that you have the same

1535
00:54:33,200 --> 00:54:35,119
four possible answers of agitation

1536
00:54:35,119 --> 00:54:37,040
results your reports tc list and some

1537
00:54:37,040 --> 00:54:40,319
new field to get uh firmware properties

1538
00:54:40,319 --> 00:54:41,760
okay because often you have a trusted

1539
00:54:41,760 --> 00:54:43,359
application that depends on you know

1540
00:54:43,359 --> 00:54:44,960
particular version of firmware being

1541
00:54:44,960 --> 00:54:46,640
installed either for

1542
00:54:46,640 --> 00:54:48,880
security purposes or for functionality

1543
00:54:48,880 --> 00:54:50,559
purposes that add some capability that

1544
00:54:50,559 --> 00:54:53,040
you need okay so the same four things

1545
00:54:53,040 --> 00:54:54,160
exist

1546
00:54:54,160 --> 00:54:57,040
um attestation results um what the draft

1547
00:54:57,040 --> 00:54:58,400
did before

1548
00:54:58,400 --> 00:55:00,240
meaning draft o9 the one that's posted

1549
00:55:00,240 --> 00:55:01,520
right now

1550
00:55:01,520 --> 00:55:03,680
is it had uh two things in the eat

1551
00:55:03,680 --> 00:55:05,680
profile it uses software name and

1552
00:55:05,680 --> 00:55:07,440
software version

1553
00:55:07,440 --> 00:55:09,040
during the hackathon

1554
00:55:09,040 --> 00:55:11,440
we observed that those strings are

1555
00:55:11,440 --> 00:55:13,599
defined as being human readable strings

1556
00:55:13,599 --> 00:55:15,839
right they're meant for human display

1557
00:55:15,839 --> 00:55:17,440
and therefore they may not be reliable

1558
00:55:17,440 --> 00:55:19,440
enough for machine processing

1559
00:55:19,440 --> 00:55:21,119
to say is this thing up to date or not i

1560
00:55:21,119 --> 00:55:22,880
mean you can certainly do a uh byte for

1561
00:55:22,880 --> 00:55:24,640
a byte comparison or something like that

1562
00:55:24,640 --> 00:55:26,799
but even that could be error prone if

1563
00:55:26,799 --> 00:55:28,880
say you patch something and the human

1564
00:55:28,880 --> 00:55:30,640
doesn't actually change the version

1565
00:55:30,640 --> 00:55:31,760
string

1566
00:55:31,760 --> 00:55:32,960
so it's not like it's a digest or

1567
00:55:32,960 --> 00:55:34,319
whatever so if they don't change it or

1568
00:55:34,319 --> 00:55:36,079
whatever then it's not reliable so we

1569
00:55:36,079 --> 00:55:37,440
said if it's not really designed for

1570
00:55:37,440 --> 00:55:39,440
human processing that's probably not the

1571
00:55:39,440 --> 00:55:40,880
right claim

1572
00:55:40,880 --> 00:55:43,040
and uh we had hank at our table and he

1573
00:55:43,040 --> 00:55:44,880
suggested the manifest claire sorry

1574
00:55:44,880 --> 00:55:45,920
lawrence was at the table and he said

1575
00:55:45,920 --> 00:55:47,280
yes the manifest claim was the right one

1576
00:55:47,280 --> 00:55:49,599
so we said hey that one looks great so

1577
00:55:49,599 --> 00:55:51,200
uh the manifest claim is great for

1578
00:55:51,200 --> 00:55:52,799
machine processing

1579
00:55:52,799 --> 00:55:54,720
although today it's written in a way

1580
00:55:54,720 --> 00:55:56,640
that we think and we didn't have like

1581
00:55:56,640 --> 00:55:58,400
brennan at the table or whatever but we

1582
00:55:58,400 --> 00:56:00,079
we thought that that one seemed as

1583
00:56:00,079 --> 00:56:02,480
defined right now to require the entire

1584
00:56:02,480 --> 00:56:04,480
manifest rather than a reference to it

1585
00:56:04,480 --> 00:56:06,160
and by the way the details on this one

1586
00:56:06,160 --> 00:56:08,240
are in the suit working group hackathon

1587
00:56:08,240 --> 00:56:10,079
report and so we'll cover that in the

1588
00:56:10,079 --> 00:56:12,240
meeting later today about

1589
00:56:12,240 --> 00:56:13,680
that part so if you have questions on

1590
00:56:13,680 --> 00:56:15,040
that make sure you're at the suit

1591
00:56:15,040 --> 00:56:17,520
working group um

1592
00:56:17,520 --> 00:56:19,680
other possibilities are the suit reports

1593
00:56:19,680 --> 00:56:21,839
for getting the firmware properties

1594
00:56:21,839 --> 00:56:23,599
um this does have the same constraint

1595
00:56:23,599 --> 00:56:25,280
that says uh you can

1596
00:56:25,280 --> 00:56:27,359
that requires a generating suit reports

1597
00:56:27,359 --> 00:56:30,480
at say firmware you know start time that

1598
00:56:30,480 --> 00:56:32,400
could be too burdensome for some tes

1599
00:56:32,400 --> 00:56:34,079
like you know sgx which does have

1600
00:56:34,079 --> 00:56:35,680
firmware but

1601
00:56:35,680 --> 00:56:37,760
uh but draft209 allowed this too right

1602
00:56:37,760 --> 00:56:39,359
and of course we didn't remove the stuff

1603
00:56:39,359 --> 00:56:41,200
that was allowed right so he could still

1604
00:56:41,200 --> 00:56:42,400
do that

1605
00:56:42,400 --> 00:56:43,680
but maybe not saying that that's the

1606
00:56:43,680 --> 00:56:46,480
only way to do it so the tc list okay

1607
00:56:46,480 --> 00:56:49,520
um unlike the hardware properties right

1608
00:56:49,520 --> 00:56:51,280
that didn't apply to there because tc

1609
00:56:51,280 --> 00:56:52,319
list was for things that could be

1610
00:56:52,319 --> 00:56:54,720
updated and firmware can be updated so

1611
00:56:54,720 --> 00:56:56,559
that one you can do but only if the

1612
00:56:56,559 --> 00:56:58,240
cheap agent is healthy because otherwise

1613
00:56:58,240 --> 00:57:00,000
you can't trust that list right and so

1614
00:57:00,000 --> 00:57:01,200
if the firmware is out of date then you

1615
00:57:01,200 --> 00:57:02,400
can't look at that list to tell whether

1616
00:57:02,400 --> 00:57:03,359
you need to update the firmware right

1617
00:57:03,359 --> 00:57:04,960
because you can't trust it

1618
00:57:04,960 --> 00:57:07,680
so uh really the manifest part here

1619
00:57:07,680 --> 00:57:09,440
inside the attestation results seem to

1620
00:57:09,440 --> 00:57:11,599
be the best answer out of all those and

1621
00:57:11,599 --> 00:57:13,200
so that's what we changed the document

1622
00:57:13,200 --> 00:57:14,799
to do so next slide you'll see the

1623
00:57:14,799 --> 00:57:16,319
details there

1624
00:57:16,319 --> 00:57:17,520
okay

1625
00:57:17,520 --> 00:57:20,880
in the eat claims okay this is the the

1626
00:57:20,880 --> 00:57:23,839
teep profile for attestation results

1627
00:57:23,839 --> 00:57:27,040
using eat in cwt format okay so this is

1628
00:57:27,040 --> 00:57:29,359
the set of claims that are uh talked

1629
00:57:29,359 --> 00:57:32,960
about in the uh eat profile so draft 08

1630
00:57:32,960 --> 00:57:35,040
this is as of last ietf meeting right it

1631
00:57:35,040 --> 00:57:36,640
looked this way and we still had one

1632
00:57:36,640 --> 00:57:38,960
reference to an in into an individual

1633
00:57:38,960 --> 00:57:40,640
document okay because there's nothing to

1634
00:57:40,640 --> 00:57:42,799
point to in the eat spec at that time

1635
00:57:42,799 --> 00:57:46,319
okay draft oh nine references uh the

1636
00:57:46,319 --> 00:57:48,880
last eat document as of the internet

1637
00:57:48,880 --> 00:57:50,160
draft deadline

1638
00:57:50,160 --> 00:57:52,480
where a couple changes were done

1639
00:57:52,480 --> 00:57:55,520
there's now uh hw model claim in draft

1640
00:57:55,520 --> 00:57:56,960
09. well i'll talk about that in a

1641
00:57:56,960 --> 00:57:58,960
second here that actually does put in

1642
00:57:58,960 --> 00:58:00,480
what we need okay so that means we could

1643
00:58:00,480 --> 00:58:01,680
get rid of the individual draft

1644
00:58:01,680 --> 00:58:02,960
reference and reference the working

1645
00:58:02,960 --> 00:58:04,480
group document okay so that one is a

1646
00:58:04,480 --> 00:58:05,839
different claim it's the now the one in

1647
00:58:05,839 --> 00:58:09,440
the document that didn't exist before

1648
00:58:09,440 --> 00:58:10,960
and then you can see that's the really

1649
00:58:10,960 --> 00:58:13,599
the only change between node 8 and 09

1650
00:58:13,599 --> 00:58:15,599
the changes between 09 and the github

1651
00:58:15,599 --> 00:58:16,799
copy okay

1652
00:58:16,799 --> 00:58:19,680
well hw model is the label in the uh

1653
00:58:19,680 --> 00:58:20,960
json

1654
00:58:20,960 --> 00:58:22,960
okay which we don't use json at cbor

1655
00:58:22,960 --> 00:58:24,960
right so we fixed that to be the longer

1656
00:58:24,960 --> 00:58:26,400
version guys the json is off an

1657
00:58:26,400 --> 00:58:28,240
abbreviation for the real you know claim

1658
00:58:28,240 --> 00:58:29,760
name if you will so the claim name we

1659
00:58:29,760 --> 00:58:32,160
use like the the seabor label right

1660
00:58:32,160 --> 00:58:33,599
which is hardware model so that one is

1661
00:58:33,599 --> 00:58:35,680
just a simple you know text change in

1662
00:58:35,680 --> 00:58:36,720
the document doesn't affect

1663
00:58:36,720 --> 00:58:39,119
implementations okay

1664
00:58:39,119 --> 00:58:41,520
chip version and hardware version okay

1665
00:58:41,520 --> 00:58:43,280
the eat document since changed to have

1666
00:58:43,280 --> 00:58:44,960
hardware version the chip version was

1667
00:58:44,960 --> 00:58:46,960
now that that label was gone it still

1668
00:58:46,960 --> 00:58:48,400
has the same meaning right but that

1669
00:58:48,400 --> 00:58:50,480
changed in the document since you know

1670
00:58:50,480 --> 00:58:52,400
the the since we wrote draft 09 so we

1671
00:58:52,400 --> 00:58:54,240
just updated that one to retain

1672
00:58:54,240 --> 00:58:55,599
consistency with the change in the

1673
00:58:55,599 --> 00:58:56,559
document

1674
00:58:56,559 --> 00:58:58,480
and the last one is the actual semantic

1675
00:58:58,480 --> 00:59:00,400
change okay where we change the software

1676
00:59:00,400 --> 00:59:02,480
name and version to the manifest one

1677
00:59:02,480 --> 00:59:03,440
right and that's what i covered in the

1678
00:59:03,440 --> 00:59:05,440
previous slide right so the github copy

1679
00:59:05,440 --> 00:59:08,079
we think is now the correct list and uh

1680
00:59:08,079 --> 00:59:10,480
09 is now the incorrect or at least out

1681
00:59:10,480 --> 00:59:13,119
of date list of the labels so

1682
00:59:13,119 --> 00:59:14,400
okay

1683
00:59:14,400 --> 00:59:15,760
next slide which is the last one on the

1684
00:59:15,760 --> 00:59:17,520
same topic

1685
00:59:17,520 --> 00:59:21,200
inside the profile okay it has it every

1686
00:59:21,200 --> 00:59:23,119
profile can specify what's the required

1687
00:59:23,119 --> 00:59:25,280
claims prohibited claims and

1688
00:59:25,280 --> 00:59:27,119
additional claims or optional claims

1689
00:59:27,119 --> 00:59:27,920
okay

1690
00:59:27,920 --> 00:59:30,799
as a reminder today

1691
00:59:30,799 --> 00:59:33,280
there are no required claims okay

1692
00:59:33,280 --> 00:59:34,720
meaning you're allowed to say

1693
00:59:34,720 --> 00:59:37,119
attestation results are good or bad you

1694
00:59:37,119 --> 00:59:39,119
know you can use you know the air for si

1695
00:59:39,119 --> 00:59:40,799
and just say you're good you're not good

1696
00:59:40,799 --> 00:59:42,400
and if you're good that means your teep

1697
00:59:42,400 --> 00:59:44,000
agent is healthy and you can trust it's

1698
00:59:44,000 --> 00:59:46,559
it's it's uh it's uh information

1699
00:59:46,559 --> 00:59:48,960
messages you know it's query results

1700
00:59:48,960 --> 00:59:51,119
curry response okay and if it says no

1701
00:59:51,119 --> 00:59:52,160
that means you can't trust anything in

1702
00:59:52,160 --> 00:59:54,000
the core response you can do that okay

1703
00:59:54,000 --> 00:59:56,960
that's why required claims is none okay

1704
00:59:56,960 --> 00:59:58,799
if you want to be more detailed though

1705
00:59:58,799 --> 01:00:00,240
there might be some reasons to do that

1706
01:00:00,240 --> 01:00:01,760
okay and so that's why these optional

1707
01:00:01,760 --> 01:00:03,119
claims are in here

1708
01:00:03,119 --> 01:00:04,559
and the text that's in the architecture

1709
01:00:04,559 --> 01:00:06,400
document that we have consensus on talks

1710
01:00:06,400 --> 01:00:07,280
about

1711
01:00:07,280 --> 01:00:09,119
what types of information should be in

1712
01:00:09,119 --> 01:00:10,720
there and that's where the list of

1713
01:00:10,720 --> 01:00:12,240
optional claims comes from because if

1714
01:00:12,240 --> 01:00:13,520
you want to be more efficient okay so

1715
01:00:13,520 --> 01:00:15,359
these are for efficiency not correctness

1716
01:00:15,359 --> 01:00:16,319
okay

1717
01:00:16,319 --> 01:00:17,680
so

1718
01:00:17,680 --> 01:00:19,119
the claims in the previous slide

1719
01:00:19,119 --> 01:00:20,480
everything on that whole table is for

1720
01:00:20,480 --> 01:00:23,680
efficiency okay and so that as a tam

1721
01:00:23,680 --> 01:00:24,880
you can do

1722
01:00:24,880 --> 01:00:27,440
uh you can not update things that don't

1723
01:00:27,440 --> 01:00:29,440
need to be updated okay so the

1724
01:00:29,440 --> 01:00:31,760
attraction result says you are bad do

1725
01:00:31,760 --> 01:00:35,040
you have to touch the teep agent and the

1726
01:00:35,040 --> 01:00:36,559
you know the secure world operating

1727
01:00:36,559 --> 01:00:39,760
system and the trusted firmware or only

1728
01:00:39,760 --> 01:00:41,280
some subset of those

1729
01:00:41,280 --> 01:00:42,240
that's where you can use these

1730
01:00:42,240 --> 01:00:43,680
informations that we're talking about

1731
01:00:43,680 --> 01:00:46,559
here okay and so this is just to say uh

1732
01:00:46,559 --> 01:00:48,160
and so these are text that was added to

1733
01:00:48,160 --> 01:00:50,400
actually say that into the spec okay

1734
01:00:50,400 --> 01:00:52,480
that says uh uh if you have these and

1735
01:00:52,480 --> 01:00:54,400
then attempt to update the keep agent

1736
01:00:54,400 --> 01:00:56,799
and all of this dependencies or only

1737
01:00:56,799 --> 01:00:58,240
update the specific components that are

1738
01:00:58,240 --> 01:01:00,640
out of date okay so the optional claims

1739
01:01:00,640 --> 01:01:02,480
let you do the bottom part here the

1740
01:01:02,480 --> 01:01:04,079
absence of them forces you into the top

1741
01:01:04,079 --> 01:01:06,079
one

1742
01:01:06,079 --> 01:01:07,440
okay so just explaining that wasn't

1743
01:01:07,440 --> 01:01:09,119
explained before as to as to why they

1744
01:01:09,119 --> 01:01:10,480
were optional and this actually says

1745
01:01:10,480 --> 01:01:12,240
what you do in implementing a tp and

1746
01:01:12,240 --> 01:01:14,319
when what you do when implementing a tam

1747
01:01:14,319 --> 01:01:15,680
with that information so we put this

1748
01:01:15,680 --> 01:01:18,160
explicit into the ten behavior section

1749
01:01:18,160 --> 01:01:19,280
okay

1750
01:01:19,280 --> 01:01:20,960
next slide

1751
01:01:20,960 --> 01:01:22,880
and this

1752
01:01:22,880 --> 01:01:24,000
is you're

1753
01:01:24,000 --> 01:01:25,200
trying this isn't coming by okay go

1754
01:01:25,200 --> 01:01:25,920
ahead

1755
01:01:25,920 --> 01:01:27,520
okay

1756
01:01:27,520 --> 01:01:29,280
cipher sweet negotiation this was

1757
01:01:29,280 --> 01:01:30,960
actually one of the large topics that we

1758
01:01:30,960 --> 01:01:32,319
had because we were all implementing

1759
01:01:32,319 --> 01:01:33,599
cipher suite negotiation at the table

1760
01:01:33,599 --> 01:01:34,720
once we ended up with a whole bunch of

1761
01:01:34,720 --> 01:01:35,920
things and so this one is kind of the

1762
01:01:35,920 --> 01:01:38,000
laundry list of everything that we hit

1763
01:01:38,000 --> 01:01:39,599
in implementing exactly that same

1764
01:01:39,599 --> 01:01:41,520
functionality

1765
01:01:41,520 --> 01:01:43,280
so first it wasn't clear whether you

1766
01:01:43,280 --> 01:01:45,920
must must support that this is the agent

1767
01:01:45,920 --> 01:01:47,599
side which could be a constrained node

1768
01:01:47,599 --> 01:01:49,839
okay when implementing cozy do you have

1769
01:01:49,839 --> 01:01:52,559
to support both sine and sign one or

1770
01:01:52,559 --> 01:01:54,480
just one or the other do you get to pick

1771
01:01:54,480 --> 01:01:58,000
and you the spec is ambiguous

1772
01:01:58,000 --> 01:01:59,920
there was two different cdls around what

1773
01:01:59,920 --> 01:02:02,240
cipher suite equals the cdl protect

1774
01:02:02,240 --> 01:02:04,160
production right what the body of the

1775
01:02:04,160 --> 01:02:05,680
document said and what the full cgl

1776
01:02:05,680 --> 01:02:07,039
section were different

1777
01:02:07,039 --> 01:02:09,599
and so which one do you implement

1778
01:02:09,599 --> 01:02:12,160
it was uh unclear which cipher suite

1779
01:02:12,160 --> 01:02:14,079
combinations were mandatory for the dam

1780
01:02:14,079 --> 01:02:15,599
it was clear which algorithms were

1781
01:02:15,599 --> 01:02:17,760
mandatory but like you know the suite is

1782
01:02:17,760 --> 01:02:19,599
a set of operations and so that's on the

1783
01:02:19,599 --> 01:02:22,319
next slide here

1784
01:02:22,640 --> 01:02:25,039
requiring encryption on mac seemed

1785
01:02:25,039 --> 01:02:26,960
overly burdensome

1786
01:02:26,960 --> 01:02:28,880
for cases that might not need that

1787
01:02:28,880 --> 01:02:30,880
especially given you have payload

1788
01:02:30,880 --> 01:02:32,960
encryption like suit firmware encryption

1789
01:02:32,960 --> 01:02:35,599
the document that's in suit

1790
01:02:35,599 --> 01:02:37,039
there was a couple cases that akira

1791
01:02:37,039 --> 01:02:39,440
pointed out that had incorrect cddl we

1792
01:02:39,440 --> 01:02:42,160
had errors in the in the cdl tool

1793
01:02:42,160 --> 01:02:44,079
and uh there was no defined way to

1794
01:02:44,079 --> 01:02:45,599
specify the order of operations so let's

1795
01:02:45,599 --> 01:02:47,119
say you wanted to have two cypher suites

1796
01:02:47,119 --> 01:02:48,480
one that did you know sign and then

1797
01:02:48,480 --> 01:02:49,920
encrypt and one that had encrypted and

1798
01:02:49,920 --> 01:02:51,839
signed or some other you know signed

1799
01:02:51,839 --> 01:02:53,520
twice whatever there was nothing that

1800
01:02:53,520 --> 01:02:55,680
said how you specify the order right you

1801
01:02:55,680 --> 01:02:57,039
could specify the algorithms but you

1802
01:02:57,039 --> 01:02:58,319
couldn't specify what order they went in

1803
01:02:58,319 --> 01:02:59,920
and if order mattered okay so there was

1804
01:02:59,920 --> 01:03:01,599
no way to do that at least there wasn't

1805
01:03:01,599 --> 01:03:03,599
a written down way to do that so this is

1806
01:03:03,599 --> 01:03:05,839
the list of the problems okay

1807
01:03:05,839 --> 01:03:08,319
next slide

1808
01:03:08,480 --> 01:03:09,920
all right so here's what we did to fix

1809
01:03:09,920 --> 01:03:11,599
those things okay

1810
01:03:11,599 --> 01:03:14,000
uh first we made cipher suite

1811
01:03:14,000 --> 01:03:15,920
be a socket meaning you put the dollar

1812
01:03:15,920 --> 01:03:17,359
in front of it which means it's okay for

1813
01:03:17,359 --> 01:03:19,440
other specs to extend it take other

1814
01:03:19,440 --> 01:03:20,960
specs or other implementations it's

1815
01:03:20,960 --> 01:03:23,200
extensible fields so we fixed that part

1816
01:03:23,200 --> 01:03:25,359
um to just to make it be explicit that

1817
01:03:25,359 --> 01:03:28,160
that's intended to be extensible

1818
01:03:28,160 --> 01:03:30,079
we removed the mac and encrypt

1819
01:03:30,079 --> 01:03:31,200
algorithms

1820
01:03:31,200 --> 01:03:32,880
from the body of the document given that

1821
01:03:32,880 --> 01:03:34,079
it's extensible

1822
01:03:34,079 --> 01:03:36,000
since you can define a type extension

1823
01:03:36,000 --> 01:03:37,920
that puts them back in okay

1824
01:03:37,920 --> 01:03:39,520
um we're trying to say how can we scope

1825
01:03:39,520 --> 01:03:41,200
down the document of the main thing to

1826
01:03:41,200 --> 01:03:43,359
make it go to rfc faster just like we

1827
01:03:43,359 --> 01:03:44,799
did for the suit manifest we took a

1828
01:03:44,799 --> 01:03:46,240
bunch of optional stuff and moved it off

1829
01:03:46,240 --> 01:03:48,000
to different extensions without saying

1830
01:03:48,000 --> 01:03:49,119
it's bad to do we just said that's a

1831
01:03:49,119 --> 01:03:50,799
different document do the same thing

1832
01:03:50,799 --> 01:03:51,920
with mac and encrypt we say we're going

1833
01:03:51,920 --> 01:03:53,839
to move that out of the main document

1834
01:03:53,839 --> 01:03:57,359
into future extension documents

1835
01:03:57,359 --> 01:03:59,760
uh same thing with cos a sine okay we

1836
01:03:59,760 --> 01:04:01,280
said we're at the simplest form it's

1837
01:04:01,280 --> 01:04:03,599
just sine one there's only one signature

1838
01:04:03,599 --> 01:04:06,319
um and so we only talk about sine one in

1839
01:04:06,319 --> 01:04:08,640
here without precluding the use of sine

1840
01:04:08,640 --> 01:04:10,079
because you can do that in extension by

1841
01:04:10,079 --> 01:04:13,599
adding another cipher suite it uses sign

1842
01:04:13,599 --> 01:04:15,599
we fixed the cdl contradiction by saying

1843
01:04:15,599 --> 01:04:17,200
the appendix was correct the body was

1844
01:04:17,200 --> 01:04:18,640
wrong

1845
01:04:18,640 --> 01:04:21,760
and lastly we specify that the order of

1846
01:04:21,760 --> 01:04:23,359
operations within a cipher suite is

1847
01:04:23,359 --> 01:04:24,640
meaningful and so you'll see that on the

1848
01:04:24,640 --> 01:04:26,640
next slide okay

1849
01:04:26,640 --> 01:04:28,240
go ahead next slide

1850
01:04:28,240 --> 01:04:29,200
okay

1851
01:04:29,200 --> 01:04:32,000
so there are two mandatory cipher suites

1852
01:04:32,000 --> 01:04:33,440
they happen to use the two mandatory

1853
01:04:33,440 --> 01:04:35,200
algorithms for the tam okay so the way

1854
01:04:35,200 --> 01:04:37,119
that it works on the tam is that the tam

1855
01:04:37,119 --> 01:04:39,039
must implement both cyprus

1856
01:04:39,039 --> 01:04:40,720
both cypher suites these the two

1857
01:04:40,720 --> 01:04:43,119
algorithms the type agent gets to pick

1858
01:04:43,119 --> 01:04:44,559
any one of the mandatory set that it

1859
01:04:44,559 --> 01:04:45,599
wants so you have guaranteed

1860
01:04:45,599 --> 01:04:47,119
interoperability but the constrained

1861
01:04:47,119 --> 01:04:49,200
node only needs to do one

1862
01:04:49,200 --> 01:04:50,640
so for example the one that he might

1863
01:04:50,640 --> 01:04:52,319
have say hardware offload for for

1864
01:04:52,319 --> 01:04:54,319
example okay but the tam has to support

1865
01:04:54,319 --> 01:04:55,920
both so that it works with all of the

1866
01:04:55,920 --> 01:04:57,280
different um

1867
01:04:57,280 --> 01:04:58,960
uh

1868
01:04:58,960 --> 01:05:00,960
agents that might exist at least right

1869
01:05:00,960 --> 01:05:01,760
now

1870
01:05:01,760 --> 01:05:04,319
so these are two cipher suites you can

1871
01:05:04,319 --> 01:05:06,400
say each cipher suite is a set of

1872
01:05:06,400 --> 01:05:08,799
operations the two mandatory cipher

1873
01:05:08,799 --> 01:05:11,359
suites only have a single operation each

1874
01:05:11,359 --> 01:05:12,480
but there could be other ones that have

1875
01:05:12,480 --> 01:05:14,319
multiple like sign and then decrypt or

1876
01:05:14,319 --> 01:05:16,240
encrypt and then sign or whatever so

1877
01:05:16,240 --> 01:05:17,680
this one is just

1878
01:05:17,680 --> 01:05:20,880
sign and so in the two mandatory ones

1879
01:05:20,880 --> 01:05:22,720
we happen to have cases there's only one

1880
01:05:22,720 --> 01:05:24,960
entry in the array of operations okay

1881
01:05:24,960 --> 01:05:26,000
and this is an ordered array of

1882
01:05:26,000 --> 01:05:27,520
operations it says you sign and then you

1883
01:05:27,520 --> 01:05:28,640
do nothing else right but you can

1884
01:05:28,640 --> 01:05:30,720
imagine you know sign and then encrypt

1885
01:05:30,720 --> 01:05:32,240
your encrypt and then sign or whatever

1886
01:05:32,240 --> 01:05:33,359
other sequence that you want and that

1887
01:05:33,359 --> 01:05:35,920
would be in the in the uh cypher suite

1888
01:05:35,920 --> 01:05:38,000
sine 1 es256

1889
01:05:38,000 --> 01:05:40,160
the operation itself is one that says

1890
01:05:40,160 --> 01:05:42,079
use sine one with the following

1891
01:05:42,079 --> 01:05:43,359
algorithm

1892
01:05:43,359 --> 01:05:44,960
okay and of course this is not

1893
01:05:44,960 --> 01:05:46,480
necessarily just two things in there

1894
01:05:46,480 --> 01:05:48,160
because you know cos a sine might have

1895
01:05:48,160 --> 01:05:49,280
multiple things in there and not just

1896
01:05:49,280 --> 01:05:51,520
sign one so all the ones in here right

1897
01:05:51,520 --> 01:05:54,160
now the operation only has two values in

1898
01:05:54,160 --> 01:05:56,160
the in the internal array but in general

1899
01:05:56,160 --> 01:05:57,760
it can be more than two right because

1900
01:05:57,760 --> 01:05:59,359
you know sign one means exactly one

1901
01:05:59,359 --> 01:06:01,280
right or side means you can have

1902
01:06:01,280 --> 01:06:03,680
a variable number right

1903
01:06:03,680 --> 01:06:05,119
and so that's where these two came in

1904
01:06:05,119 --> 01:06:06,799
there and so we said these two are both

1905
01:06:06,799 --> 01:06:10,079
mandatory implementation detail eddsa is

1906
01:06:10,079 --> 01:06:12,319
not yet in lawrence's uh t cosi

1907
01:06:12,319 --> 01:06:13,920
implementation so i couldn't implement

1908
01:06:13,920 --> 01:06:16,640
the second one yet um but i think i

1909
01:06:16,640 --> 01:06:18,079
wasn't the only person asking lawrence

1910
01:06:18,079 --> 01:06:19,119
for that so

1911
01:06:19,119 --> 01:06:20,400
where so right now the first one is

1912
01:06:20,400 --> 01:06:21,599
implemented in a couple of the

1913
01:06:21,599 --> 01:06:22,640
implementations but i don't think the

1914
01:06:22,640 --> 01:06:24,000
second one is yet out of the

1915
01:06:24,000 --> 01:06:25,839
implementation table so

1916
01:06:25,839 --> 01:06:27,520
um

1917
01:06:27,520 --> 01:06:28,720
okay

1918
01:06:28,720 --> 01:06:30,000
um

1919
01:06:30,000 --> 01:06:31,520
just i want to mention the bottom point

1920
01:06:31,520 --> 01:06:33,039
on there just to reiterate

1921
01:06:33,039 --> 01:06:34,960
go back one the last point was that uh

1922
01:06:34,960 --> 01:06:36,799
just as a note okay

1923
01:06:36,799 --> 01:06:39,359
these two do not do encryption

1924
01:06:39,359 --> 01:06:40,319
and so that means security

1925
01:06:40,319 --> 01:06:41,599
considerations we have to say something

1926
01:06:41,599 --> 01:06:43,359
about that especially since we already

1927
01:06:43,359 --> 01:06:45,280
had text that says

1928
01:06:45,280 --> 01:06:46,640
anybody defining a cipher suite you need

1929
01:06:46,640 --> 01:06:47,839
to explain why you don't have encryption

1930
01:06:47,839 --> 01:06:48,799
so we need to make sure that was in

1931
01:06:48,799 --> 01:06:50,960
there so here's what we said okay we

1932
01:06:50,960 --> 01:06:52,079
said we don't do encryption of the t

1933
01:06:52,079 --> 01:06:53,440
player okay

1934
01:06:53,440 --> 01:06:55,200
but you do encryption at the suit

1935
01:06:55,200 --> 01:06:57,200
payload layer and we now reference the

1936
01:06:57,200 --> 01:06:59,599
suit firmware encryption document in in

1937
01:06:59,599 --> 01:07:00,880
the security considerations section

1938
01:07:00,880 --> 01:07:01,920
saying if you want to try to protect the

1939
01:07:01,920 --> 01:07:03,520
payload you don't have to you don't have

1940
01:07:03,520 --> 01:07:04,640
to encrypt the team message but you

1941
01:07:04,640 --> 01:07:05,760
better be encrypting the payload and

1942
01:07:05,760 --> 01:07:08,799
here's the document that says to do that

1943
01:07:08,799 --> 01:07:09,760
okay

1944
01:07:09,760 --> 01:07:12,839
i'm just thinking of dependencies

1945
01:07:12,839 --> 01:07:15,760
okay yeah same thing with dependencies

1946
01:07:15,760 --> 01:07:17,520
right yeah you can encrypt dependencies

1947
01:07:17,520 --> 01:07:18,480
too so

1948
01:07:18,480 --> 01:07:20,160
personalization data is the most obvious

1949
01:07:20,160 --> 01:07:21,520
case of using firmware encryption but

1950
01:07:21,520 --> 01:07:23,359
it's not the only one

1951
01:07:23,359 --> 01:07:24,799
okay so that's what we did for the

1952
01:07:24,799 --> 01:07:27,520
mandatory cipher suite section

1953
01:07:27,520 --> 01:07:28,880
okay

1954
01:07:28,880 --> 01:07:30,559
222 we're still in the cypher sweet

1955
01:07:30,559 --> 01:07:32,319
section of stuff a bunch of these are

1956
01:07:32,319 --> 01:07:33,599
related so

1957
01:07:33,599 --> 01:07:36,720
this one said supported cipher suites

1958
01:07:36,720 --> 01:07:39,280
uh was previously an optional field you

1959
01:07:39,280 --> 01:07:41,440
can see in the red blob there it was

1960
01:07:41,440 --> 01:07:42,799
previously in there which meant that it

1961
01:07:42,799 --> 01:07:44,960
could be absent and so the tam could

1962
01:07:44,960 --> 01:07:46,640
send a message that did not include

1963
01:07:46,640 --> 01:07:49,440
which cipher suites it supported

1964
01:07:49,440 --> 01:07:51,119
now what the text used to say is if it's

1965
01:07:51,119 --> 01:07:52,720
not there it means that it supports the

1966
01:07:52,720 --> 01:07:54,240
two on the previous slide

1967
01:07:54,240 --> 01:07:57,200
okay that's what it previously said um

1968
01:07:57,200 --> 01:07:59,359
and but that means that on the deep

1969
01:07:59,359 --> 01:08:00,720
asian the constrained node you had that

1970
01:08:00,720 --> 01:08:02,880
code to deal with both cases okay and

1971
01:08:02,880 --> 01:08:04,079
you had to hard code the fact that the

1972
01:08:04,079 --> 01:08:06,319
absence meant those two things he said

1973
01:08:06,319 --> 01:08:08,559
well what happens you know five six

1974
01:08:08,559 --> 01:08:10,880
years from now where there's a weakness

1975
01:08:10,880 --> 01:08:13,039
in one of those you know let's say

1976
01:08:13,039 --> 01:08:14,160
es

1977
01:08:14,160 --> 01:08:16,238
256 has a weakness and we need to move

1978
01:08:16,238 --> 01:08:18,479
it to what you know es 384 or something

1979
01:08:18,479 --> 01:08:19,600
like that okay

1980
01:08:19,600 --> 01:08:20,880
and that means that you still have to

1981
01:08:20,880 --> 01:08:22,960
have code in the constrained devices

1982
01:08:22,960 --> 01:08:25,040
that have the old obsolete thing okay

1983
01:08:25,040 --> 01:08:26,799
and so how do we make it be more robust

1984
01:08:26,799 --> 01:08:29,359
to the future and uh ken was the one

1985
01:08:29,359 --> 01:08:31,600
that pointed out that uh you know five

1986
01:08:31,600 --> 01:08:32,719
six years from now you might have other

1987
01:08:32,719 --> 01:08:34,158
ones that become mandatory by then too

1988
01:08:34,158 --> 01:08:36,319
right and so uh at some point in the

1989
01:08:36,319 --> 01:08:37,600
future you're gonna have to deal with

1990
01:08:37,600 --> 01:08:39,520
the case where there really is no useful

1991
01:08:39,520 --> 01:08:41,198
default right so let's just make it

1992
01:08:41,198 --> 01:08:42,640
mandatory now and all the implementers

1993
01:08:42,640 --> 01:08:43,359
said

1994
01:08:43,359 --> 01:08:44,479
yeah sure let's just go ahead and make

1995
01:08:44,479 --> 01:08:45,920
it be mandatory now because this one is

1996
01:08:45,920 --> 01:08:47,759
a breaking change okay so we went around

1997
01:08:47,759 --> 01:08:48,880
the table saying anybody got a problem

1998
01:08:48,880 --> 01:08:50,640
with this nobody got a problem with this

1999
01:08:50,640 --> 01:08:51,600
nobody had a problem with it everybody

2000
01:08:51,600 --> 01:08:52,799
said let's do us we did it as

2001
01:08:52,799 --> 01:08:54,000
implementers we said okay because the

2002
01:08:54,000 --> 01:08:55,198
only people are going to object to

2003
01:08:55,198 --> 01:08:56,479
breaking changes of the implementers and

2004
01:08:56,479 --> 01:08:58,719
we had five six of them at the table so

2005
01:08:58,719 --> 01:09:00,319
uh so this one we made a breaking change

2006
01:09:00,319 --> 01:09:02,080
this one is a major breaking change but

2007
01:09:02,080 --> 01:09:03,359
we did it

2008
01:09:03,359 --> 01:09:04,880
and this makes it be mandatory and we

2009
01:09:04,880 --> 01:09:06,479
think it actually simplifies the code in

2010
01:09:06,479 --> 01:09:07,759
the cheap agent and makes it be more

2011
01:09:07,759 --> 01:09:10,238
future-proof so

2012
01:09:10,238 --> 01:09:11,040
okay

2013
01:09:11,040 --> 01:09:13,278
next

2014
01:09:15,040 --> 01:09:17,439
um so it so we updated that and here's

2015
01:09:17,439 --> 01:09:20,719
the example in the in the um appendix

2016
01:09:20,719 --> 01:09:23,600
with the examples and so you can say uh

2017
01:09:23,600 --> 01:09:25,359
here's a particular message of supported

2018
01:09:25,359 --> 01:09:27,040
cipher suites and you can see it looks

2019
01:09:27,040 --> 01:09:28,719
like this when it comes across the wire

2020
01:09:28,719 --> 01:09:31,198
at least in the diagnostic form and you

2021
01:09:31,198 --> 01:09:33,120
can see the 18 minus 7 and 18 minus

2022
01:09:33,120 --> 01:09:35,120
eight is what the tam fills in because

2023
01:09:35,120 --> 01:09:36,479
that's the two cypher suites that we

2024
01:09:36,479 --> 01:09:37,920
have the previous slide sign one with

2025
01:09:37,920 --> 01:09:40,719
the s256 and sign one using edgsa is

2026
01:09:40,719 --> 01:09:42,080
what the tam should be including in all

2027
01:09:42,080 --> 01:09:43,759
this message this is mandatory currently

2028
01:09:43,759 --> 01:09:45,920
so

2029
01:09:46,000 --> 01:09:47,520
so it means that your query request gets

2030
01:09:47,520 --> 01:09:49,920
a couple bytes longer and your agent

2031
01:09:49,920 --> 01:09:51,839
implementation gets a

2032
01:09:51,839 --> 01:09:54,000
little simpler

2033
01:09:54,000 --> 01:09:56,080
okay

2034
01:09:56,080 --> 01:09:58,239
next

2035
01:09:58,239 --> 01:09:59,840
so there's a question about so which

2036
01:09:59,840 --> 01:10:01,360
cheap messages are protected with which

2037
01:10:01,360 --> 01:10:02,960
cipher suite so here's what the text

2038
01:10:02,960 --> 01:10:04,640
says in the

2039
01:10:04,640 --> 01:10:06,560
internet draft posted version

2040
01:10:06,560 --> 01:10:08,400
after a query response is received the

2041
01:10:08,400 --> 01:10:10,400
selected cipher suite is used in

2042
01:10:10,400 --> 01:10:12,480
subsequent messages

2043
01:10:12,480 --> 01:10:15,760
install success and error

2044
01:10:15,760 --> 01:10:17,760
that means you can't protect this career

2045
01:10:17,760 --> 01:10:19,360
response

2046
01:10:19,360 --> 01:10:20,560
that's what that text said we said

2047
01:10:20,560 --> 01:10:23,199
that's probably not right okay

2048
01:10:23,199 --> 01:10:24,480
because by the time you're sending the

2049
01:10:24,480 --> 01:10:25,760
query response you've already finished

2050
01:10:25,760 --> 01:10:27,120
negotiating the cipher suite so

2051
01:10:27,120 --> 01:10:28,159
shouldn't you be able to protect the

2052
01:10:28,159 --> 01:10:30,480
correct response too okay

2053
01:10:30,480 --> 01:10:33,120
um and it's also ambiguous it says does

2054
01:10:33,120 --> 01:10:34,800
that mean that you have to use the same

2055
01:10:34,800 --> 01:10:36,880
cipher suite in both directions right is

2056
01:10:36,880 --> 01:10:38,880
selected means selected that what the

2057
01:10:38,880 --> 01:10:40,880
type agent does for its operations when

2058
01:10:40,880 --> 01:10:42,880
composing always has to be the same as

2059
01:10:42,880 --> 01:10:44,960
what the tam agent is doing so if it's

2060
01:10:44,960 --> 01:10:46,719
doing sign but not encrypt does that

2061
01:10:46,719 --> 01:10:48,080
mean the other side has to sign but not

2062
01:10:48,080 --> 01:10:49,440
decrypt okay

2063
01:10:49,440 --> 01:10:51,120
and so um

2064
01:10:51,120 --> 01:10:52,960
right now we said the answer is we

2065
01:10:52,960 --> 01:10:54,480
couldn't think of a case for in the

2066
01:10:54,480 --> 01:10:56,080
short term or saying it was

2067
01:10:56,080 --> 01:10:58,480
bidirectional was a problem

2068
01:10:58,480 --> 01:11:00,000
that was kind of already implied but it

2069
01:11:00,000 --> 01:11:01,520
wasn't explicitly stated so we said the

2070
01:11:01,520 --> 01:11:03,280
least change was to just explicitly

2071
01:11:03,280 --> 01:11:04,400
state the fact that yes it's

2072
01:11:04,400 --> 01:11:05,900
bidirectional

2073
01:11:05,900 --> 01:11:06,960
[Music]

2074
01:11:06,960 --> 01:11:08,800
and if you need to do different than

2075
01:11:08,800 --> 01:11:10,880
that then leave that to a deep extension

2076
01:11:10,880 --> 01:11:12,560
document don't try to address it in the

2077
01:11:12,560 --> 01:11:13,920
main document because we think it is

2078
01:11:13,920 --> 01:11:15,440
extensible an extension document i see a

2079
01:11:15,440 --> 01:11:16,800
nod from the back okay good thank you

2080
01:11:16,800 --> 01:11:18,480
for the positive feedback

2081
01:11:18,480 --> 01:11:20,159
all right next slide

2082
01:11:20,159 --> 01:11:22,719
same issue

2083
01:11:22,719 --> 01:11:24,800
second related question i just mentioned

2084
01:11:24,800 --> 01:11:26,880
about the query response okay

2085
01:11:26,880 --> 01:11:28,560
so the query response

2086
01:11:28,560 --> 01:11:29,920
it could be protected because you're

2087
01:11:29,920 --> 01:11:31,120
just you're going to send back in there

2088
01:11:31,120 --> 01:11:33,360
which cypher suite you selected okay

2089
01:11:33,360 --> 01:11:35,199
now this is a question that i need

2090
01:11:35,199 --> 01:11:37,760
somebody that is uh more of a cozy etc

2091
01:11:37,760 --> 01:11:39,360
expert than i am

2092
01:11:39,360 --> 01:11:41,920
um the selected cipher suite is inside

2093
01:11:41,920 --> 01:11:43,840
the teat message the teat message is

2094
01:11:43,840 --> 01:11:46,239
meaning it's inside the cose blob okay

2095
01:11:46,239 --> 01:11:47,360
which means you can't get to the

2096
01:11:47,360 --> 01:11:48,640
selected part without having to parse

2097
01:11:48,640 --> 01:11:50,640
the coset blob to begin with

2098
01:11:50,640 --> 01:11:52,719
so as cozy blob is itself described that

2099
01:11:52,719 --> 01:11:54,320
you know it's safe or sweet it was the

2100
01:11:54,320 --> 01:11:56,000
time you're decoding the cipher without

2101
01:11:56,000 --> 01:11:57,199
the blob without having to look inside

2102
01:11:57,199 --> 01:11:58,560
it i'm hoping the answer is yes can

2103
01:11:58,560 --> 01:12:00,239
somebody tell me is that this case

2104
01:12:00,239 --> 01:12:02,000
i've seen hannah's nodding okay good

2105
01:12:02,000 --> 01:12:02,800
good

2106
01:12:02,800 --> 01:12:04,719
okay good uh so that was the question

2107
01:12:04,719 --> 01:12:06,239
here can a receiver figure it out from a

2108
01:12:06,239 --> 01:12:08,000
cozy object and parse correctly as long

2109
01:12:08,000 --> 01:12:09,120
as the answer is yes and there's no

2110
01:12:09,120 --> 01:12:11,120
problem with what we did

2111
01:12:11,120 --> 01:12:11,920
um

2112
01:12:11,920 --> 01:12:14,159
can the attestation payload be encrypted

2113
01:12:14,159 --> 01:12:16,400
can suit reports be encrypted are all

2114
01:12:16,400 --> 01:12:17,760
questions that arise when addressing

2115
01:12:17,760 --> 01:12:19,199
this question

2116
01:12:19,199 --> 01:12:20,640
i think the answer is

2117
01:12:20,640 --> 01:12:22,400
today can eat

2118
01:12:22,400 --> 01:12:25,199
be encrypted by using the eat spec

2119
01:12:25,199 --> 01:12:27,600
i think the answer is yes but

2120
01:12:27,600 --> 01:12:29,760
we're not sure hank no the answer is no

2121
01:12:29,760 --> 01:12:32,159
okay can suit reports be encrypted by

2122
01:12:32,159 --> 01:12:36,239
using the suit report document brandon

2123
01:12:36,239 --> 01:12:37,760
somebody know without looking these are

2124
01:12:37,760 --> 01:12:39,199
questions that came up afterwards so

2125
01:12:39,199 --> 01:12:40,159
that's why i didn't know the answers

2126
01:12:40,159 --> 01:12:41,199
because we didn't talk about these three

2127
01:12:41,199 --> 01:12:42,400
during that

2128
01:12:42,400 --> 01:12:44,640
i mean it doesn't say no

2129
01:12:44,640 --> 01:12:47,440
um but there's no explicit mechanism

2130
01:12:47,440 --> 01:12:49,360
enabling that yet

2131
01:12:49,360 --> 01:12:51,040
i think it says that they're supposed to

2132
01:12:51,040 --> 01:12:51,920
be

2133
01:12:51,920 --> 01:12:54,480
uh authenticated because that's kind of

2134
01:12:54,480 --> 01:12:56,960
important um but i don't think there's

2135
01:12:56,960 --> 01:12:59,760
anything that says anything about

2136
01:12:59,760 --> 01:13:01,679
encryption so far

2137
01:13:01,679 --> 01:13:03,840
okay um so i guess the teep feedback

2138
01:13:03,840 --> 01:13:05,199
would be it might be nice for the

2139
01:13:05,199 --> 01:13:06,560
student reports document to say

2140
01:13:06,560 --> 01:13:08,320
something and this gets back to the

2141
01:13:08,320 --> 01:13:10,159
question of um if

2142
01:13:10,159 --> 01:13:11,360
you cannot

2143
01:13:11,360 --> 01:13:13,440
via the spec then it means the teep

2144
01:13:13,440 --> 01:13:15,199
cipher suite might need to do encryption

2145
01:13:15,199 --> 01:13:16,640
assuming that there's sensitive data in

2146
01:13:16,640 --> 01:13:18,000
the suit reports right i can easily

2147
01:13:18,000 --> 01:13:20,000
imagine that there is sensitive data in

2148
01:13:20,000 --> 01:13:22,080
a suit report okay and if that's the

2149
01:13:22,080 --> 01:13:23,040
case you know just to give you

2150
01:13:23,040 --> 01:13:24,080
considerations then it should be

2151
01:13:24,080 --> 01:13:25,280
encrypted somewhere either by the

2152
01:13:25,280 --> 01:13:27,520
transport or by the suit report itself

2153
01:13:27,520 --> 01:13:30,400
i'm just curious as to what the

2154
01:13:30,400 --> 01:13:31,520
um

2155
01:13:31,520 --> 01:13:33,120
what the key exchange mechanism would

2156
01:13:33,120 --> 01:13:35,040
look like in that scenario that seems

2157
01:13:35,040 --> 01:13:37,280
like a really um

2158
01:13:37,280 --> 01:13:39,199
challenging environment for a key

2159
01:13:39,199 --> 01:13:40,400
exchange

2160
01:13:40,400 --> 01:13:41,520
i agree

2161
01:13:41,520 --> 01:13:42,800
i don't know the answer that's why i

2162
01:13:42,800 --> 01:13:45,199
came up as a question so

2163
01:13:45,199 --> 01:13:47,040
so what we're saying in teep right now

2164
01:13:47,040 --> 01:13:48,880
is that uh teep does not solve the

2165
01:13:48,880 --> 01:13:51,440
transport layer without an extension and

2166
01:13:51,440 --> 01:13:53,120
it leaves it up to the payload and it

2167
01:13:53,120 --> 01:13:55,040
could just be don't put sensitive

2168
01:13:55,040 --> 01:13:58,000
information in the suit report if you're

2169
01:13:58,000 --> 01:14:00,000
not going to encrypt it right just put

2170
01:14:00,000 --> 01:14:02,320
non-sensitive information in there

2171
01:14:02,320 --> 01:14:03,280
so

2172
01:14:03,280 --> 01:14:04,560
which directive failed might not be

2173
01:14:04,560 --> 01:14:06,880
sensitive information right so

2174
01:14:06,880 --> 01:14:10,320
at that level you should have a pub key

2175
01:14:10,320 --> 01:14:12,000
for the recipient right

2176
01:14:12,000 --> 01:14:13,120
yeah

2177
01:14:13,120 --> 01:14:15,120
okay yeah it should be doable

2178
01:14:15,120 --> 01:14:16,400
okay

2179
01:14:16,400 --> 01:14:18,640
okay thank you um again those were

2180
01:14:18,640 --> 01:14:20,400
questions that are i think are more i

2181
01:14:20,400 --> 01:14:21,920
hope are more questions for the suit

2182
01:14:21,920 --> 01:14:23,600
reports document and not for the t

2183
01:14:23,600 --> 01:14:25,520
protocol document but happy to be wrong

2184
01:14:25,520 --> 01:14:26,640
so

2185
01:14:26,640 --> 01:14:30,080
all right um last question

2186
01:14:30,080 --> 01:14:31,120
um

2187
01:14:31,120 --> 01:14:32,640
does it mean that an error sent in

2188
01:14:32,640 --> 01:14:34,719
response to a query request cannot be

2189
01:14:34,719 --> 01:14:36,960
protected okay because if you had a

2190
01:14:36,960 --> 01:14:38,960
query request that was malformed and i'm

2191
01:14:38,960 --> 01:14:41,360
saying uh or

2192
01:14:41,360 --> 01:14:43,360
for example it was saying a set of uh

2193
01:14:43,360 --> 01:14:45,040
supported cypher suicide did not include

2194
01:14:45,040 --> 01:14:48,000
one that the teap agent supports okay

2195
01:14:48,000 --> 01:14:48,880
which

2196
01:14:48,880 --> 01:14:49,920
technically that should never happen

2197
01:14:49,920 --> 01:14:51,280
with a compliant tam but you got to be

2198
01:14:51,280 --> 01:14:53,120
robust to non-compliant tams or maybe

2199
01:14:53,120 --> 01:14:54,960
future tams that uh within with a

2200
01:14:54,960 --> 01:14:56,400
current agent right a future one that

2201
01:14:56,400 --> 01:14:59,520
changes the set of uh which ones are are

2202
01:14:59,520 --> 01:15:01,280
you know more secure or whatever so

2203
01:15:01,280 --> 01:15:02,560
could you send an error message in

2204
01:15:02,560 --> 01:15:04,159
response to that and the answer is yes

2205
01:15:04,159 --> 01:15:06,000
right now we did that but could you

2206
01:15:06,000 --> 01:15:08,480
protect it with anything okay

2207
01:15:08,480 --> 01:15:10,480
um and in some cases you know the suit

2208
01:15:10,480 --> 01:15:12,159
reports could be considered sensitive so

2209
01:15:12,159 --> 01:15:15,280
here's an example of what we might say

2210
01:15:15,280 --> 01:15:16,480
this one i don't think is in the github

2211
01:15:16,480 --> 01:15:18,320
copy right now it says uh here's an

2212
01:15:18,320 --> 01:15:19,920
example of what i thought we might say

2213
01:15:19,920 --> 01:15:21,440
if the teep agent

2214
01:15:21,440 --> 01:15:23,120
was able to select a cipher suite from

2215
01:15:23,120 --> 01:15:25,040
among the tim's supported cypher suites

2216
01:15:25,040 --> 01:15:27,040
and that wasn't the problem in the in

2217
01:15:27,040 --> 01:15:29,040
the in the query response right then use

2218
01:15:29,040 --> 01:15:30,320
that to protect the error message right

2219
01:15:30,320 --> 01:15:31,760
because you can get to a key then right

2220
01:15:31,760 --> 01:15:33,120
you can get to a set of operations you

2221
01:15:33,120 --> 01:15:34,159
know the other guy can't you're going to

2222
01:15:34,159 --> 01:15:37,120
plan about something else like uh wrong

2223
01:15:37,120 --> 01:15:39,360
version right would be an example right

2224
01:15:39,360 --> 01:15:40,880
say here's the seriously requested

2225
01:15:40,880 --> 01:15:42,400
version and i don't support that version

2226
01:15:42,400 --> 01:15:44,159
or any other things you know unsupported

2227
01:15:44,159 --> 01:15:46,159
extension that type of thing okay so if

2228
01:15:46,159 --> 01:15:47,440
you can go ahead and protect that

2229
01:15:47,440 --> 01:15:48,640
otherwise

2230
01:15:48,640 --> 01:15:50,239
protect the error with a mandatory

2231
01:15:50,239 --> 01:15:52,400
cipher suite that the tp agent supports

2232
01:15:52,400 --> 01:15:53,280
okay

2233
01:15:53,280 --> 01:15:54,800
and if the tam can support it great if

2234
01:15:54,800 --> 01:15:56,400
not well you weren't going to get

2235
01:15:56,400 --> 01:15:58,159
communication anyway so

2236
01:15:58,159 --> 01:16:00,159
uh but specifically don't include

2237
01:16:00,159 --> 01:16:01,840
sensitive information with a cypher

2238
01:16:01,840 --> 01:16:04,080
suite that doesn't encrypt okay

2239
01:16:04,080 --> 01:16:04,880
so

2240
01:16:04,880 --> 01:16:06,640
my proposal is we put those three

2241
01:16:06,640 --> 01:16:08,320
sentences in there and call that good

2242
01:16:08,320 --> 01:16:10,719
enough i see a nod from russ and uh

2243
01:16:10,719 --> 01:16:13,760
akira is getting a cue

2244
01:16:14,560 --> 01:16:16,080
okay i'll forgive you you're supposed to

2245
01:16:16,080 --> 01:16:19,040
get on the queue but that's okay oh

2246
01:16:19,040 --> 01:16:21,199
no no go ahead yeah

2247
01:16:21,199 --> 01:16:22,000
um

2248
01:16:22,000 --> 01:16:24,400
we we also talked about this in the

2249
01:16:24,400 --> 01:16:26,159
during the hackathon and probably talked

2250
01:16:26,159 --> 01:16:29,040
in japanese um there was one more one

2251
01:16:29,040 --> 01:16:31,679
more choice we had it was uh not

2252
01:16:31,679 --> 01:16:35,440
responding the any error message

2253
01:16:35,440 --> 01:16:37,840
because the error message with uh some

2254
01:16:37,840 --> 01:16:38,960
anything

2255
01:16:38,960 --> 01:16:40,719
uh

2256
01:16:40,719 --> 01:16:43,840
could be used for the attacker to sense

2257
01:16:43,840 --> 01:16:46,080
the

2258
01:16:47,040 --> 01:16:49,440
implementation how to go

2259
01:16:49,440 --> 01:16:52,000
go work around

2260
01:16:52,000 --> 01:16:53,040
um

2261
01:16:53,040 --> 01:16:54,400
yeah there's a complicated issue there

2262
01:16:54,400 --> 01:16:55,679
that actually overlaps the meeting i

2263
01:16:55,679 --> 01:16:57,600
just came out of which was me right

2264
01:16:57,600 --> 01:16:59,840
before this was the the edm

2265
01:16:59,840 --> 01:17:02,400
uh program of the iab which is the the

2266
01:17:02,400 --> 01:17:04,159
contentious document about uh the

2267
01:17:04,159 --> 01:17:05,760
robustus principle considered harmful

2268
01:17:05,760 --> 01:17:06,960
and this was actually one of the topics

2269
01:17:06,960 --> 01:17:09,520
so uh yeah so there are considerations

2270
01:17:09,520 --> 01:17:11,120
there meaning there are arguments to do

2271
01:17:11,120 --> 01:17:11,920
both

2272
01:17:11,920 --> 01:17:14,080
um uh

2273
01:17:14,080 --> 01:17:16,320
my personal opinion is uh you should

2274
01:17:16,320 --> 01:17:17,920
send an error message when you can and i

2275
01:17:17,920 --> 01:17:18,960
can tell you the authors of that

2276
01:17:18,960 --> 01:17:21,520
document have reasons why that is but it

2277
01:17:21,520 --> 01:17:24,159
may not be 100 applicable to your point

2278
01:17:24,159 --> 01:17:26,000
so

2279
01:17:26,000 --> 01:17:27,199
so maybe there's another sentence we

2280
01:17:27,199 --> 01:17:28,880
should add to clarify or whatever but in

2281
01:17:28,880 --> 01:17:32,960
most cases um sending the error actually

2282
01:17:32,960 --> 01:17:36,719
is uh helps to tell the other side

2283
01:17:36,719 --> 01:17:38,560
the fact that it's doing something wrong

2284
01:17:38,560 --> 01:17:40,080
because otherwise it will keep doing the

2285
01:17:40,080 --> 01:17:41,120
wrong thing

2286
01:17:41,120 --> 01:17:42,480
if you don't tell them at least that's

2287
01:17:42,480 --> 01:17:44,800
that's probably the argument so

2288
01:17:44,800 --> 01:17:46,480
um

2289
01:17:46,480 --> 01:17:48,800
that one is hard yeah

2290
01:17:48,800 --> 01:17:49,760
okay

2291
01:17:49,760 --> 01:17:52,080
so um oh this is the slide deck that

2292
01:17:52,080 --> 01:17:54,400
doesn't have the last slide in it so i'm

2293
01:17:54,400 --> 01:17:56,159
going to do that verbally which is the

2294
01:17:56,159 --> 01:17:58,000
one that can post it i can push the

2295
01:17:58,000 --> 01:17:59,280
button finally

2296
01:17:59,280 --> 01:18:01,120
michael richardson so um just about the

2297
01:18:01,120 --> 01:18:03,760
last point i think we have enough enough

2298
01:18:03,760 --> 01:18:06,800
enough bad experiences from ikev1 for

2299
01:18:06,800 --> 01:18:08,080
instance

2300
01:18:08,080 --> 01:18:10,960
where you know the error about not being

2301
01:18:10,960 --> 01:18:13,760
able to uh select the cipher suites was

2302
01:18:13,760 --> 01:18:15,920
on on was never transmitted and you

2303
01:18:15,920 --> 01:18:17,760
never could fix problems

2304
01:18:17,760 --> 01:18:18,960
and and

2305
01:18:18,960 --> 01:18:19,920
you know

2306
01:18:19,920 --> 01:18:21,040
uh

2307
01:18:21,040 --> 01:18:22,640
you know what it

2308
01:18:22,640 --> 01:18:25,120
telling telling telling the attacker the

2309
01:18:25,120 --> 01:18:26,719
list of cipher suites that you might

2310
01:18:26,719 --> 01:18:28,000
support

2311
01:18:28,000 --> 01:18:30,400
is just not that big a deal they can

2312
01:18:30,400 --> 01:18:32,400
enumerate them and and we were really

2313
01:18:32,400 --> 01:18:34,640
anal about that at the time and it did

2314
01:18:34,640 --> 01:18:37,199
not contribute to interoperability or

2315
01:18:37,199 --> 01:18:39,520
debug ability so

2316
01:18:39,520 --> 01:18:41,120
um if that's the reason for not sending

2317
01:18:41,120 --> 01:18:43,840
an error don't do that please

2318
01:18:43,840 --> 01:18:45,360
so it sounds like you don't have an

2319
01:18:45,360 --> 01:18:47,679
issue with the bullets that are on here

2320
01:18:47,679 --> 01:18:48,880
right now i don't have an issue with

2321
01:18:48,880 --> 01:18:50,159
there yeah i don't have an issue and if

2322
01:18:50,159 --> 01:18:51,440
someone thinks what i'm saying is i

2323
01:18:51,440 --> 01:18:52,800
think we should be really

2324
01:18:52,800 --> 01:18:56,480
clear about that and not not accept any

2325
01:18:56,480 --> 01:18:58,800
you know i don't disclose my policy

2326
01:18:58,800 --> 01:19:01,360
because it's a security problem

2327
01:19:01,360 --> 01:19:03,280
because i think that just leads to

2328
01:19:03,280 --> 01:19:05,760
people turning all the off

2329
01:19:05,760 --> 01:19:07,600
i can try and reload yeah if you want to

2330
01:19:07,600 --> 01:19:09,280
try to reload because i added one more

2331
01:19:09,280 --> 01:19:11,679
slide so uh the other day ken posted the

2332
01:19:11,679 --> 01:19:13,280
message to the suit list that i then

2333
01:19:13,280 --> 01:19:14,960
responded to and added the teep list

2334
01:19:14,960 --> 01:19:16,400
onto there because it's a cross type

2335
01:19:16,400 --> 01:19:17,679
suit issue

2336
01:19:17,679 --> 01:19:19,600
uh that we both ran into

2337
01:19:19,600 --> 01:19:21,600
in our implementations but we didn't

2338
01:19:21,600 --> 01:19:23,920
explicitly discuss i think we came up

2339
01:19:23,920 --> 01:19:25,679
with the hackathon but then we kind of

2340
01:19:25,679 --> 01:19:27,120
forgot about it until afterwards until

2341
01:19:27,120 --> 01:19:29,120
this message came up there so uh let's

2342
01:19:29,120 --> 01:19:30,480
see if it's in here so it should be the

2343
01:19:30,480 --> 01:19:34,480
last slide i'm trying yep yep

2344
01:19:34,480 --> 01:19:36,320
it has to do with how do you delete a

2345
01:19:36,320 --> 01:19:38,800
component okay is it so it's in the

2346
01:19:38,800 --> 01:19:41,440
meeting materials yeah but it's not in

2347
01:19:41,440 --> 01:19:42,800
the

2348
01:19:42,800 --> 01:19:44,320
folder interesting

2349
01:19:44,320 --> 01:19:49,159
very interesting so i don't know how to

2350
01:19:59,520 --> 01:20:01,040
i i have it on my laptop but i would

2351
01:20:01,040 --> 01:20:02,960
rather let somebody else deal with it so

2352
01:20:02,960 --> 01:20:04,320
then we can leave it up here i see

2353
01:20:04,320 --> 01:20:06,560
countdown clock gallery view if you'd

2354
01:20:06,560 --> 01:20:09,679
like to be av tech support

2355
01:20:10,719 --> 01:20:11,679
yeah

2356
01:20:11,679 --> 01:20:14,239
yeah russ

2357
01:20:14,639 --> 01:20:16,239
step out of the box here sir else can

2358
01:20:16,239 --> 01:20:19,480
come here

2359
01:20:19,679 --> 01:20:22,000
on the top right i see nothing

2360
01:20:22,000 --> 01:20:24,800
i see oh

2361
01:20:24,800 --> 01:20:25,840
middle

2362
01:20:25,840 --> 01:20:26,639
okay

2363
01:20:26,639 --> 01:20:28,800
so i'll start introducing it to distract

2364
01:20:28,800 --> 01:20:30,719
from the the the man behind the curtain

2365
01:20:30,719 --> 01:20:33,199
over there

2366
01:20:33,199 --> 01:20:35,040
the the question that came up and sorry

2367
01:20:35,040 --> 01:20:36,320
for those that are remote i'm not on

2368
01:20:36,320 --> 01:20:37,760
mike right now or not on camera right

2369
01:20:37,760 --> 01:20:39,679
now you can watch the tech crew over

2370
01:20:39,679 --> 01:20:41,360
there and just listen

2371
01:20:41,360 --> 01:20:44,639
um the question comes up when you have a

2372
01:20:44,639 --> 01:20:46,719
number of different keep agents

2373
01:20:46,719 --> 01:20:49,040
that are being managed by the same tab

2374
01:20:49,040 --> 01:20:50,000
okay

2375
01:20:50,000 --> 01:20:50,880
and

2376
01:20:50,880 --> 01:20:53,120
let's say one of them no longer needs a

2377
01:20:53,120 --> 01:20:54,560
particular trusted component i can come

2378
01:20:54,560 --> 01:20:56,320
back now awesome

2379
01:20:56,320 --> 01:20:58,080
okay

2380
01:20:58,080 --> 01:20:59,520
out of the type agents that atam is

2381
01:20:59,520 --> 01:21:01,520
managing some of them want to keep using

2382
01:21:01,520 --> 01:21:03,040
a trusted component and some of them

2383
01:21:03,040 --> 01:21:05,120
don't need it anymore

2384
01:21:05,120 --> 01:21:06,560
okay

2385
01:21:06,560 --> 01:21:10,880
and so this situation results

2386
01:21:11,600 --> 01:21:13,679
it's still not there it's not there

2387
01:21:13,679 --> 01:21:14,800
all right

2388
01:21:14,800 --> 01:21:15,679
um

2389
01:21:15,679 --> 01:21:17,600
what's in the slides

2390
01:21:17,600 --> 01:21:20,000
so it is in the meeting material it is

2391
01:21:20,000 --> 01:21:22,400
yes all right i'll just talk to it if i

2392
01:21:22,400 --> 01:21:23,920
can remember it and then somebody else

2393
01:21:23,920 --> 01:21:25,520
can call it up and and tell me if i'm

2394
01:21:25,520 --> 01:21:27,040
missing a point okay

2395
01:21:27,040 --> 01:21:30,239
so all right back up repeat

2396
01:21:30,239 --> 01:21:31,360
all right so you have a bunch of

2397
01:21:31,360 --> 01:21:32,560
different type agents some of them need

2398
01:21:32,560 --> 01:21:33,840
a contrasting component some of them no

2399
01:21:33,840 --> 01:21:35,360
longer need it it's one of the optional

2400
01:21:35,360 --> 01:21:37,280
ones that says the teep agents can have

2401
01:21:37,280 --> 01:21:38,000
it

2402
01:21:38,000 --> 01:21:39,679
in this example the t pages can have it

2403
01:21:39,679 --> 01:21:40,880
when they have something that depends on

2404
01:21:40,880 --> 01:21:42,880
it right it may vary right so whether

2405
01:21:42,880 --> 01:21:44,639
think of it as phones and sometimes the

2406
01:21:44,639 --> 01:21:46,080
user has an app installed and sometimes

2407
01:21:46,080 --> 01:21:47,679
it doesn't all the phones are authorized

2408
01:21:47,679 --> 01:21:49,760
too if they want it right so cam is

2409
01:21:49,760 --> 01:21:51,679
perfectly fine as long as as long as the

2410
01:21:51,679 --> 01:21:53,040
tp agent would want it that it could

2411
01:21:53,040 --> 01:21:54,080
have it

2412
01:21:54,080 --> 01:21:55,679
so this means it says okay one of those

2413
01:21:55,679 --> 01:21:57,199
devices says i don't need it anymore the

2414
01:21:57,199 --> 01:21:58,639
user uninstalled it okay so here's this

2415
01:21:58,639 --> 01:22:00,000
just example okay so now i need to

2416
01:22:00,000 --> 01:22:01,920
delete that component from there

2417
01:22:01,920 --> 01:22:02,960
but i don't want to delete from all the

2418
01:22:02,960 --> 01:22:04,080
other ones

2419
01:22:04,080 --> 01:22:05,199
okay

2420
01:22:05,199 --> 01:22:07,040
so what we have in the protocol right

2421
01:22:07,040 --> 01:22:10,040
now

2422
01:22:10,560 --> 01:22:12,080
the other two pages

2423
01:22:12,080 --> 01:22:13,600
you got a bunch of different devices one

2424
01:22:13,600 --> 01:22:14,800
of them doesn't want anymore so i want

2425
01:22:14,800 --> 01:22:16,480
to delete it on that one but i don't

2426
01:22:16,480 --> 01:22:17,679
want to force it to be deleted on all

2427
01:22:17,679 --> 01:22:18,880
the other tp agents all the other

2428
01:22:18,880 --> 01:22:20,000
devices are still going to use that

2429
01:22:20,000 --> 01:22:22,000
component okay

2430
01:22:22,000 --> 01:22:23,679
okay and so what the tam has is he has a

2431
01:22:23,679 --> 01:22:26,480
set of teeth manifest of suit manifests

2432
01:22:26,480 --> 01:22:28,400
or perhaps references to suit manifest

2433
01:22:28,400 --> 01:22:30,800
stored in other repositories okay

2434
01:22:30,800 --> 01:22:33,040
and so what we did in a previous version

2435
01:22:33,040 --> 01:22:34,800
the teep protocol is we removed like a

2436
01:22:34,800 --> 01:22:35,920
delete message and we said we're just

2437
01:22:35,920 --> 01:22:37,199
going to use the update message to do

2438
01:22:37,199 --> 01:22:38,639
all types of updates

2439
01:22:38,639 --> 01:22:39,679
okay

2440
01:22:39,679 --> 01:22:41,440
the update message today

2441
01:22:41,440 --> 01:22:43,280
allows you to specify a list of suit

2442
01:22:43,280 --> 01:22:44,719
manifests we showed that on a previous

2443
01:22:44,719 --> 01:22:46,800
slide here okay that means to do a

2444
01:22:46,800 --> 01:22:48,159
deletion you got to pass down a suit

2445
01:22:48,159 --> 01:22:49,760
manifest that has the delete directives

2446
01:22:49,760 --> 01:22:51,199
in it

2447
01:22:51,199 --> 01:22:53,360
okay so if you're following the logic

2448
01:22:53,360 --> 01:22:55,600
here that means that if i have

2449
01:22:55,600 --> 01:22:57,520
some that need to be deleted

2450
01:22:57,520 --> 01:22:59,040
some type agents that need a deletion

2451
01:22:59,040 --> 01:23:00,880
and some that don't

2452
01:23:00,880 --> 01:23:02,719
i have to have a version of a t of a

2453
01:23:02,719 --> 01:23:04,480
suit manifest today

2454
01:23:04,480 --> 01:23:06,159
that i can use to send to just that one

2455
01:23:06,159 --> 01:23:07,360
that's different from the suit manifest

2456
01:23:07,360 --> 01:23:08,800
that i'm sending the other one

2457
01:23:08,800 --> 01:23:10,400
okay that means i have to either

2458
01:23:10,400 --> 01:23:12,080
construct one or get one from the author

2459
01:23:12,080 --> 01:23:13,280
depending on who the sign or the suit

2460
01:23:13,280 --> 01:23:14,639
manifest is

2461
01:23:14,639 --> 01:23:16,480
okay so either i have to construct one

2462
01:23:16,480 --> 01:23:18,000
where like i'm the signer and i resign

2463
01:23:18,000 --> 01:23:19,440
it to whatever and so there's an extra

2464
01:23:19,440 --> 01:23:21,520
burden here okay it says well what ver

2465
01:23:21,520 --> 01:23:23,679
what manifest no what manifest sequence

2466
01:23:23,679 --> 01:23:24,639
number

2467
01:23:24,639 --> 01:23:27,040
do i put in the deletion manifest

2468
01:23:27,040 --> 01:23:29,199
okay

2469
01:23:29,199 --> 01:23:30,880
right but what's one plus because you

2470
01:23:30,880 --> 01:23:33,199
know the the the manifest that i sent to

2471
01:23:33,199 --> 01:23:35,280
you and to hanus would be different ones

2472
01:23:35,280 --> 01:23:36,719
they both have the same sequence number

2473
01:23:36,719 --> 01:23:38,320
right not that you know that that's fine

2474
01:23:38,320 --> 01:23:39,280
right but that means i have two

2475
01:23:39,280 --> 01:23:40,320
different versions and who's

2476
01:23:40,320 --> 01:23:42,000
incrementing that and is it the tam or

2477
01:23:42,000 --> 01:23:44,719
is it the manifest author or is the tam

2478
01:23:44,719 --> 01:23:46,239
a new manifest author that wraps the

2479
01:23:46,239 --> 01:23:47,600
original one or whatever so that's the

2480
01:23:47,600 --> 01:23:49,440
kind of questions that come up

2481
01:23:49,440 --> 01:23:50,320
okay

2482
01:23:50,320 --> 01:23:51,920
second problem with that

2483
01:23:51,920 --> 01:23:53,920
with that thing is to say

2484
01:23:53,920 --> 01:23:54,800
um

2485
01:23:54,800 --> 01:23:56,159
what happens if there's a component

2486
01:23:56,159 --> 01:23:58,400
that's on there there's your slide thank

2487
01:23:58,400 --> 01:24:00,239
you

2488
01:24:00,239 --> 01:24:02,960
yes thank you i just did it

2489
01:24:02,960 --> 01:24:03,840
okay

2490
01:24:03,840 --> 01:24:05,360
yeah so here's the manifest list that

2491
01:24:05,360 --> 01:24:07,280
exists right now okay

2492
01:24:07,280 --> 01:24:09,440
uh in the update message okay

2493
01:24:09,440 --> 01:24:10,880
and i've just been talking about what if

2494
01:24:10,880 --> 01:24:12,719
the tam has it manifested a third party

2495
01:24:12,719 --> 01:24:14,560
do you like encapsulate it and resign it

2496
01:24:14,560 --> 01:24:16,960
as a new signer whatever

2497
01:24:16,960 --> 01:24:18,880
what if the device

2498
01:24:18,880 --> 01:24:20,480
has a component that the tam doesn't

2499
01:24:20,480 --> 01:24:22,080
know about

2500
01:24:22,080 --> 01:24:24,480
all right the query response said i have

2501
01:24:24,480 --> 01:24:26,480
this other suit manifest thing here's my

2502
01:24:26,480 --> 01:24:28,880
component id the tam says i've never

2503
01:24:28,880 --> 01:24:30,800
seen that before

2504
01:24:30,800 --> 01:24:32,560
how do you delete that if you've never

2505
01:24:32,560 --> 01:24:35,280
seen it before

2506
01:24:35,679 --> 01:24:37,280
it's not really specified in suit right

2507
01:24:37,280 --> 01:24:38,880
so you said well is it we could do this

2508
01:24:38,880 --> 01:24:40,000
with suit maybe if you come up with a

2509
01:24:40,000 --> 01:24:41,120
way to do it but is that the right

2510
01:24:41,120 --> 01:24:43,600
mechanism okay so this what if a device

2511
01:24:43,600 --> 01:24:44,880
has a component that showed up there it

2512
01:24:44,880 --> 01:24:46,320
was installed by you know sneaker net or

2513
01:24:46,320 --> 01:24:48,159
something maybe it had a suit manifest

2514
01:24:48,159 --> 01:24:49,679
that the heap agent has but the tam

2515
01:24:49,679 --> 01:24:50,800
didn't know about it before he's never

2516
01:24:50,800 --> 01:24:52,719
heard of it before until you sent the

2517
01:24:52,719 --> 01:24:55,120
the the you know component id and digest

2518
01:24:55,120 --> 01:24:56,159
and stuff and attempt says i don't know

2519
01:24:56,159 --> 01:24:57,360
where this thing came from please delete

2520
01:24:57,360 --> 01:24:58,719
it you're not authorized to have this

2521
01:24:58,719 --> 01:25:00,000
right

2522
01:25:00,000 --> 01:25:01,520
um so you gotta have a way to delete

2523
01:25:01,520 --> 01:25:02,719
that

2524
01:25:02,719 --> 01:25:04,239
and so ken

2525
01:25:04,239 --> 01:25:06,159
proposed

2526
01:25:06,159 --> 01:25:08,080
uh let's have when we install with a

2527
01:25:08,080 --> 01:25:09,760
suit manifest right whether it comes to

2528
01:25:09,760 --> 01:25:11,760
the tam or not okay

2529
01:25:11,760 --> 01:25:13,040
what if because you have installed

2530
01:25:13,040 --> 01:25:14,320
directives and says here's the suit

2531
01:25:14,320 --> 01:25:16,159
manifest and here's the steps to to

2532
01:25:16,159 --> 01:25:18,000
install or to boot or whatever

2533
01:25:18,000 --> 01:25:19,760
right ken's proposal is well let's also

2534
01:25:19,760 --> 01:25:21,600
add when installing whatever and by the

2535
01:25:21,600 --> 01:25:23,120
way for future reference here's the

2536
01:25:23,120 --> 01:25:24,480
uninstall here's the opposites here's

2537
01:25:24,480 --> 01:25:26,480
how to clean the stuff up

2538
01:25:26,480 --> 01:25:28,480
okay and so that gets packaged in the

2539
01:25:28,480 --> 01:25:29,920
original install one so i'd have to bump

2540
01:25:29,920 --> 01:25:31,360
the version number all the uninstall

2541
01:25:31,360 --> 01:25:33,360
directives are in the original one

2542
01:25:33,360 --> 01:25:35,040
so however you got the original one you

2543
01:25:35,040 --> 01:25:36,960
have the uninstall directives around and

2544
01:25:36,960 --> 01:25:38,719
by the way both software packages that

2545
01:25:38,719 --> 01:25:40,560
you installed today on platforms already

2546
01:25:40,560 --> 01:25:41,920
have the uninstall mechanism in the

2547
01:25:41,920 --> 01:25:43,679
installer package right so it's kind of

2548
01:25:43,679 --> 01:25:44,800
consistent with that mechanism that's

2549
01:25:44,800 --> 01:25:46,480
kind of where the idea comes from

2550
01:25:46,480 --> 01:25:48,080
so this idea that says what if the suit

2551
01:25:48,080 --> 01:25:49,840
manifest had uninstalled directives so

2552
01:25:49,840 --> 01:25:51,520
you don't bump the version number if you

2553
01:25:51,520 --> 01:25:53,120
just want to say delete that thing i've

2554
01:25:53,120 --> 01:25:54,800
never heard of he said you know that

2555
01:25:54,800 --> 01:25:56,080
thing you told me about follow the

2556
01:25:56,080 --> 01:25:57,120
understand

2557
01:25:57,120 --> 01:26:00,000
the uninstalled directives please

2558
01:26:00,000 --> 01:26:01,760
okay so that's actually the proposal

2559
01:26:01,760 --> 01:26:03,760
here which is if suit puts in the

2560
01:26:03,760 --> 01:26:06,400
uninstall directives as ken proposed

2561
01:26:06,400 --> 01:26:08,800
then we could go back to this update

2562
01:26:08,800 --> 01:26:10,159
message right which right now is a

2563
01:26:10,159 --> 01:26:11,679
manifest list

2564
01:26:11,679 --> 01:26:13,360
and we could put back in here a way to

2565
01:26:13,360 --> 01:26:15,440
say just delete by id right here's the

2566
01:26:15,440 --> 01:26:16,639
id i'm not going to give you the full

2567
01:26:16,639 --> 01:26:18,400
suit manifest because i may not have it

2568
01:26:18,400 --> 01:26:20,000
right you have it or you would have told

2569
01:26:20,000 --> 01:26:21,199
me about it

2570
01:26:21,199 --> 01:26:22,800
just follow the uninstall procedures you

2571
01:26:22,800 --> 01:26:24,400
already have

2572
01:26:24,400 --> 01:26:26,000
okay so that's kind of the summary of

2573
01:26:26,000 --> 01:26:27,840
this thread that kev and i were starting

2574
01:26:27,840 --> 01:26:29,840
on the list here and we wanted feedback

2575
01:26:29,840 --> 01:26:31,760
from the working groups on this because

2576
01:26:31,760 --> 01:26:32,960
we're not going to have time in suit to

2577
01:26:32,960 --> 01:26:34,159
talk about this because we're already

2578
01:26:34,159 --> 01:26:35,600
you know at the hour or whatever so this

2579
01:26:35,600 --> 01:26:36,639
is the only time we have if you have

2580
01:26:36,639 --> 01:26:38,000
comments well you've got two people on

2581
01:26:38,000 --> 01:26:41,199
thecube brandon yep

2582
01:26:43,760 --> 01:26:46,719
totaled this yet

2583
01:26:47,360 --> 01:26:48,800
you're sorry

2584
01:26:48,800 --> 01:26:51,760
have you threat modeled this yet

2585
01:26:51,760 --> 01:26:54,320
oh no it's a message on a list as of two

2586
01:26:54,320 --> 01:26:56,400
days ago so

2587
01:26:56,400 --> 01:26:59,600
yeah so so i'd be really interested in

2588
01:26:59,600 --> 01:27:01,840
exactly what the threat model is here

2589
01:27:01,840 --> 01:27:03,920
because it sounds to me like you're

2590
01:27:03,920 --> 01:27:06,480
introducing an unauthenticated command

2591
01:27:06,480 --> 01:27:08,880
to remove a component

2592
01:27:08,880 --> 01:27:10,239
no

2593
01:27:10,239 --> 01:27:11,520
the tam

2594
01:27:11,520 --> 01:27:14,239
is authoritative for what software what

2595
01:27:14,239 --> 01:27:16,000
trusted components are running in the

2596
01:27:16,000 --> 01:27:17,600
teep agent's

2597
01:27:17,600 --> 01:27:19,360
tee

2598
01:27:19,360 --> 01:27:20,880
that's the definition of the tan it's

2599
01:27:20,880 --> 01:27:22,400
the trust of the application manager of

2600
01:27:22,400 --> 01:27:23,840
that device

2601
01:27:23,840 --> 01:27:26,000
now here's the second question

2602
01:27:26,000 --> 01:27:27,679
um

2603
01:27:27,679 --> 01:27:31,600
what exactly do you

2604
01:27:31,600 --> 01:27:34,960
okay i'll come back sorry um no i need

2605
01:27:34,960 --> 01:27:38,880
to finish that that thread um right so

2606
01:27:38,880 --> 01:27:41,120
how many tams can one device have and

2607
01:27:41,120 --> 01:27:44,080
how do you divide up their uh areas what

2608
01:27:44,080 --> 01:27:45,520
happens when there is a mutual

2609
01:27:45,520 --> 01:27:48,560
dependency between two tams how do you

2610
01:27:48,560 --> 01:27:50,320
make sure that one doesn't forcibly

2611
01:27:50,320 --> 01:27:52,400
uninstall something that the other has

2612
01:27:52,400 --> 01:27:54,080
is depending on

2613
01:27:54,080 --> 01:27:55,199
yeah

2614
01:27:55,199 --> 01:27:57,280
the answer to that is if we go all the

2615
01:27:57,280 --> 01:27:59,600
way back to the otrp document

2616
01:27:59,600 --> 01:28:01,920
it used the term trust domain which came

2617
01:28:01,920 --> 01:28:04,560
out of global platform world

2618
01:28:04,560 --> 01:28:05,840
meaning the meaning that global platform

2619
01:28:05,840 --> 01:28:07,600
defines for trust domain and that

2620
01:28:07,600 --> 01:28:10,000
there's one ham per trust domain

2621
01:28:10,000 --> 01:28:12,639
and that's why ken's proposal is to talk

2622
01:28:12,639 --> 01:28:15,040
about this in suits trust domains

2623
01:28:15,040 --> 01:28:16,960
document because the assumption that

2624
01:28:16,960 --> 01:28:20,400
there is one tam per crest domain unless

2625
01:28:20,400 --> 01:28:22,719
um a tam explicitly delegates another

2626
01:28:22,719 --> 01:28:24,239
one like personalization data or

2627
01:28:24,239 --> 01:28:25,840
something like that there are cases on a

2628
01:28:25,840 --> 01:28:28,480
particular suit manifest there exists

2629
01:28:28,480 --> 01:28:29,679
only one

2630
01:28:29,679 --> 01:28:31,840
uh you know

2631
01:28:31,840 --> 01:28:33,040
thing that would be

2632
01:28:33,040 --> 01:28:34,560
the

2633
01:28:34,560 --> 01:28:35,920
the controller of it

2634
01:28:35,920 --> 01:28:38,239
so that means that dependencies across

2635
01:28:38,239 --> 01:28:40,320
trust domains are forbidden

2636
01:28:40,320 --> 01:28:42,159
yes well i don't know what dependencies

2637
01:28:42,159 --> 01:28:44,080
i would say uh

2638
01:28:44,080 --> 01:28:46,719
on non-explicit dependencies across

2639
01:28:46,719 --> 01:28:48,320
trust domains no no i'm talking about

2640
01:28:48,320 --> 01:28:49,920
explicit dependencies across trust

2641
01:28:49,920 --> 01:28:51,840
domains because then the second tam has

2642
01:28:51,840 --> 01:28:53,280
the ability to break the dependencies of

2643
01:28:53,280 --> 01:28:54,840
the first

2644
01:28:54,840 --> 01:28:56,639
tam

2645
01:28:56,639 --> 01:28:57,679
uh

2646
01:28:57,679 --> 01:29:00,320
i understand what you're saying and uh i

2647
01:29:00,320 --> 01:29:01,120
i

2648
01:29:01,120 --> 01:29:03,840
think that you can do that and so yes

2649
01:29:03,840 --> 01:29:06,560
if you're delegating to say tam one has

2650
01:29:06,560 --> 01:29:08,560
a dependency on something for which tam

2651
01:29:08,560 --> 01:29:10,639
two is authoritative then and you

2652
01:29:10,639 --> 01:29:11,840
consider that to be acceptable when

2653
01:29:11,840 --> 01:29:13,600
defining you know tam one's the

2654
01:29:13,600 --> 01:29:15,600
manifesto is pushing out and tam one is

2655
01:29:15,600 --> 01:29:17,840
saying yes i'm agreeing that tam two can

2656
01:29:17,840 --> 01:29:19,280
always yank one of my dependencies and

2657
01:29:19,280 --> 01:29:20,880
kind of override my ability to work

2658
01:29:20,880 --> 01:29:23,360
right yes that's possible okay left pad

2659
01:29:23,360 --> 01:29:26,639
here we come all right

2660
01:29:26,960 --> 01:29:28,560
then the

2661
01:29:28,560 --> 01:29:32,480
the other point is what exactly lives in

2662
01:29:32,480 --> 01:29:34,719
those uninstall instructions because

2663
01:29:34,719 --> 01:29:37,360
that is really unclear to me is it just

2664
01:29:37,360 --> 01:29:39,120
a list of components that you don't need

2665
01:29:39,120 --> 01:29:41,760
like what is it

2666
01:29:41,840 --> 01:29:42,639
um

2667
01:29:42,639 --> 01:29:44,239
i i think

2668
01:29:44,239 --> 01:29:45,679
i don't know candace and coming up to

2669
01:29:45,679 --> 01:29:46,960
the mic so i'll attempt to channel what

2670
01:29:46,960 --> 01:29:48,880
i think that we would say is

2671
01:29:48,880 --> 01:29:51,199
the the installed directives are an

2672
01:29:51,199 --> 01:29:53,440
explicit set of steps that you follow in

2673
01:29:53,440 --> 01:29:55,360
order to do the install right you copy

2674
01:29:55,360 --> 01:29:57,440
this component into this you know disk

2675
01:29:57,440 --> 01:30:01,280
space or whatever it is and it should

2676
01:30:01,280 --> 01:30:03,040
in lowercase should be the exact

2677
01:30:03,040 --> 01:30:04,880
opposite of those now you're pointing

2678
01:30:04,880 --> 01:30:07,440
out what happens if it's not and that is

2679
01:30:07,440 --> 01:30:09,440
uh dangerous right and i get your point

2680
01:30:09,440 --> 01:30:10,880
brendan

2681
01:30:10,880 --> 01:30:13,760
so i i would really like um speaking as

2682
01:30:13,760 --> 01:30:16,880
a a suit author i would very much

2683
01:30:16,880 --> 01:30:19,520
appreciate a few examples

2684
01:30:19,520 --> 01:30:21,360
from the teap list

2685
01:30:21,360 --> 01:30:24,560
of exactly what would go in an uninstall

2686
01:30:24,560 --> 01:30:27,360
directives sequence because unless we

2687
01:30:27,360 --> 01:30:29,440
have that i'm really not sure what we

2688
01:30:29,440 --> 01:30:31,839
can do

2689
01:30:33,199 --> 01:30:35,040
the obvious ones that i can think of is

2690
01:30:35,040 --> 01:30:37,280
because if i look at um uninstall

2691
01:30:37,280 --> 01:30:40,000
equipment directives in other formats

2692
01:30:40,000 --> 01:30:44,000
not not t but you know what um msis on

2693
01:30:44,000 --> 01:30:46,560
uh or inf files on windows and similar

2694
01:30:46,560 --> 01:30:48,719
things and you know apt or pip or

2695
01:30:48,719 --> 01:30:50,800
whatever it's like delete the following

2696
01:30:50,800 --> 01:30:52,719
uh component from the following from the

2697
01:30:52,719 --> 01:30:55,760
following directory or repository uh for

2698
01:30:55,760 --> 01:30:57,199
some definition so like in windows you

2699
01:30:57,199 --> 01:30:58,880
have a registry or a file system you

2700
01:30:58,880 --> 01:31:01,280
have a file system directory for holding

2701
01:31:01,280 --> 01:31:03,360
libraries or includes or executing you

2702
01:31:03,360 --> 01:31:05,199
know your bin directory or whatever your

2703
01:31:05,199 --> 01:31:06,560
install direct your install directive

2704
01:31:06,560 --> 01:31:07,840
say copy this thing into the bin

2705
01:31:07,840 --> 01:31:09,679
directory and then delete says delete

2706
01:31:09,679 --> 01:31:11,120
uninstall says delete it from the bin

2707
01:31:11,120 --> 01:31:12,480
directory the same thing but it better

2708
01:31:12,480 --> 01:31:13,520
be the same thing or you've got a

2709
01:31:13,520 --> 01:31:15,040
security problem so

2710
01:31:15,040 --> 01:31:16,560
but yes deleting

2711
01:31:16,560 --> 01:31:18,639
things from specific repositories

2712
01:31:18,639 --> 01:31:21,440
whether those are disk space or some

2713
01:31:21,440 --> 01:31:22,960
other database that's resident on the

2714
01:31:22,960 --> 01:31:24,320
system

2715
01:31:24,320 --> 01:31:27,199
so in suit parlance could that simply be

2716
01:31:27,199 --> 01:31:32,159
a list of indices of component ids

2717
01:31:32,159 --> 01:31:33,760
do we need commands at all you probably

2718
01:31:33,760 --> 01:31:36,480
know better than i do so maybe

2719
01:31:36,480 --> 01:31:39,040
okay um i think any further should

2720
01:31:39,040 --> 01:31:40,960
probably go to the list i think i've got

2721
01:31:40,960 --> 01:31:43,040
a good overview thank you yeah but that

2722
01:31:43,040 --> 01:31:44,400
was why we started this thread on the

2723
01:31:44,400 --> 01:31:46,159
list thank you ken for kicking off this

2724
01:31:46,159 --> 01:31:47,679
thread because it really is a cross-deep

2725
01:31:47,679 --> 01:31:49,520
suit discussion although

2726
01:31:49,520 --> 01:31:51,600
um my belief is a lot of the answer is

2727
01:31:51,600 --> 01:31:52,960
in suit and the t-pass to follow

2728
01:31:52,960 --> 01:31:55,600
whatever suit directs but uh

2729
01:31:55,600 --> 01:31:57,280
suit only has an hour and this can't be

2730
01:31:57,280 --> 01:31:58,480
on the agenda because we've got a full

2731
01:31:58,480 --> 01:32:00,000
hour or so

2732
01:32:00,000 --> 01:32:01,679
well but you can have it in the mail

2733
01:32:01,679 --> 01:32:03,840
list correct right so a lot well we want

2734
01:32:03,840 --> 01:32:05,120
to kick it off here and then different

2735
01:32:05,120 --> 01:32:07,840
knowing that's correct

2736
01:32:07,920 --> 01:32:08,880
michael

2737
01:32:08,880 --> 01:32:10,960
michael richardson so i had two things i

2738
01:32:10,960 --> 01:32:12,239
have two things to say now i have to

2739
01:32:12,239 --> 01:32:13,760
listen to brendan um

2740
01:32:13,760 --> 01:32:15,840
the one that i almost forgot was why do

2741
01:32:15,840 --> 01:32:18,080
we wind up in the case where we have

2742
01:32:18,080 --> 01:32:19,920
something that the tam doesn't know

2743
01:32:19,920 --> 01:32:20,800
about

2744
01:32:20,800 --> 01:32:23,920
and actually i think a very reasonable

2745
01:32:23,920 --> 01:32:25,280
situation

2746
01:32:25,280 --> 01:32:28,560
is um there is a problem and with the

2747
01:32:28,560 --> 01:32:30,000
components

2748
01:32:30,000 --> 01:32:31,520
and the

2749
01:32:31,520 --> 01:32:32,560
um

2750
01:32:32,560 --> 01:32:35,679
user has been given a adequately signed

2751
01:32:35,679 --> 01:32:38,800
debug version that the tam is willing to

2752
01:32:38,800 --> 01:32:41,040
to accept but you don't normally give

2753
01:32:41,040 --> 01:32:43,600
this out it runs for a while

2754
01:32:43,600 --> 01:32:45,679
and and then later on

2755
01:32:45,679 --> 01:32:47,520
when you know the bug is actually found

2756
01:32:47,520 --> 01:32:49,440
and fixed and things need to be upgraded

2757
01:32:49,440 --> 01:32:51,440
then you know what some component now

2758
01:32:51,440 --> 01:32:53,920
gets deleted that was the debug version

2759
01:32:53,920 --> 01:32:56,400
of it and that's why the tam doesn't

2760
01:32:56,400 --> 01:32:58,159
know about it because it arrived through

2761
01:32:58,159 --> 01:32:59,679
you know other other means and i think

2762
01:32:59,679 --> 01:33:00,800
that's a really

2763
01:33:00,800 --> 01:33:01,920
i think that's a really good thing

2764
01:33:01,920 --> 01:33:02,960
because

2765
01:33:02,960 --> 01:33:05,679
uh it means that we can both debug but

2766
01:33:05,679 --> 01:33:08,159
then remove the user from the debug

2767
01:33:08,159 --> 01:33:10,639
situation uh later on

2768
01:33:10,639 --> 01:33:12,400
so i think that's really good okay i

2769
01:33:12,400 --> 01:33:14,639
agree as for the other concern about

2770
01:33:14,639 --> 01:33:16,400
trust about different domains and

2771
01:33:16,400 --> 01:33:19,040
whatever the only reason

2772
01:33:19,040 --> 01:33:21,280
why domain a

2773
01:33:21,280 --> 01:33:22,880
with tam a

2774
01:33:22,880 --> 01:33:25,040
would ever be sharing any component with

2775
01:33:25,040 --> 01:33:27,440
domain b with tam b

2776
01:33:27,440 --> 01:33:30,080
is because you are seriously limited on

2777
01:33:30,080 --> 01:33:31,280
space

2778
01:33:31,280 --> 01:33:34,000
okay that's to me the only reason you're

2779
01:33:34,000 --> 01:33:35,760
another reason they're not delegating to

2780
01:33:35,760 --> 01:33:37,040
each other they don't know about each

2781
01:33:37,040 --> 01:33:38,320
other first of all

2782
01:33:38,320 --> 01:33:39,360
there's an example it's in the

2783
01:33:39,360 --> 01:33:41,600
architecture spec okay and the example

2784
01:33:41,600 --> 01:33:45,520
is uh the code comes from one tam

2785
01:33:45,520 --> 01:33:48,480
and the personalization data comes from

2786
01:33:48,480 --> 01:33:51,199
another tam fair enough that that's the

2787
01:33:51,199 --> 01:33:52,960
example that's in there okay and and so

2788
01:33:52,960 --> 01:33:54,400
in fact the personalization data could

2789
01:33:54,400 --> 01:33:56,000
be used by multiple entities and it's

2790
01:33:56,000 --> 01:33:57,840
because you know the the the tam with

2791
01:33:57,840 --> 01:34:00,480
the personalization data does not trust

2792
01:34:00,480 --> 01:34:02,639
the first tam with the actual

2793
01:34:02,639 --> 01:34:04,159
personalization data right so you might

2794
01:34:04,159 --> 01:34:06,480
have fair enough it doesn't change my

2795
01:34:06,480 --> 01:34:07,920
subsequent comments which were

2796
01:34:07,920 --> 01:34:10,159
essentially that well if the reason was

2797
01:34:10,159 --> 01:34:11,679
disk space but you've just given me a

2798
01:34:11,679 --> 01:34:14,960
different reason okay um then you know

2799
01:34:14,960 --> 01:34:17,040
uh reference counted hard links are 50

2800
01:34:17,040 --> 01:34:18,480
year old technology

2801
01:34:18,480 --> 01:34:22,000
okay and um we that's to me just one of

2802
01:34:22,000 --> 01:34:23,520
them unlinks it and the other one says

2803
01:34:23,520 --> 01:34:24,880
well i still have a copy because

2804
01:34:24,880 --> 01:34:26,960
underlying i still have it okay i just

2805
01:34:26,960 --> 01:34:29,360
don't think that's fundamentally an

2806
01:34:29,360 --> 01:34:31,199
argument against this okay i think that

2807
01:34:31,199 --> 01:34:32,480
is a great point and i think that's

2808
01:34:32,480 --> 01:34:34,480
exactly why brennan would use the term

2809
01:34:34,480 --> 01:34:36,239
unlink in the suit manifest document as

2810
01:34:36,239 --> 01:34:38,320
for similar reasons so i think that's a

2811
01:34:38,320 --> 01:34:40,000
great answer to your question brandon is

2812
01:34:40,000 --> 01:34:41,440
that's what unlink is and you can't make

2813
01:34:41,440 --> 01:34:42,880
it go to zero you can just drop it by

2814
01:34:42,880 --> 01:34:45,880
one

2815
01:34:47,360 --> 01:34:48,639
okay i don't know how we're doing on

2816
01:34:48,639 --> 01:34:49,760
time but i told you i was gonna take all

2817
01:34:49,760 --> 01:34:52,480
my other time back so you did okay

2818
01:34:52,480 --> 01:34:54,800
you did all right i think penguin

2819
01:34:54,800 --> 01:34:58,080
yes so penguin

2820
01:34:58,080 --> 01:35:01,480
see if i can

2821
01:35:02,239 --> 01:35:05,040
oh that's rude

2822
01:35:05,040 --> 01:35:08,960
all the slots are taken what

2823
01:35:13,520 --> 01:35:15,840
i'm trying to unshare

2824
01:35:15,840 --> 01:35:19,000
and reshare

2825
01:35:30,400 --> 01:35:32,960
there we go

2826
01:35:32,960 --> 01:35:34,800
i'm living on the edge i keep getting

2827
01:35:34,800 --> 01:35:38,119
these networkers

2828
01:35:45,840 --> 01:35:47,760
okay

2829
01:35:47,760 --> 01:35:49,119
so

2830
01:35:49,119 --> 01:35:50,159
okay

2831
01:35:50,159 --> 01:35:52,480
so sorry i have to join this meeting

2832
01:35:52,480 --> 01:35:54,639
remotely so is my audio on the video

2833
01:35:54,639 --> 01:35:57,360
clear yes

2834
01:35:57,360 --> 01:36:02,000
okay so this is the draft about the tip

2835
01:36:02,000 --> 01:36:04,800
tip use case oh sorry i lost oh here it

2836
01:36:04,800 --> 01:36:05,920
is

2837
01:36:05,920 --> 01:36:07,840
here is the tv use kits for

2838
01:36:07,840 --> 01:36:10,400
computational computing network and i

2839
01:36:10,400 --> 01:36:13,119
also shared these drafts in the

2840
01:36:13,119 --> 01:36:15,760
competition computing consortium

2841
01:36:15,760 --> 01:36:19,280
so next slide please

2842
01:36:19,280 --> 01:36:21,600
now here's a motivation and we all know

2843
01:36:21,600 --> 01:36:23,600
that the computational computing is the

2844
01:36:23,600 --> 01:36:25,760
protection of data in use by

2845
01:36:25,760 --> 01:36:27,679
hardware-based trust execution

2846
01:36:27,679 --> 01:36:28,960
environment

2847
01:36:28,960 --> 01:36:31,119
but when using this computational

2848
01:36:31,119 --> 01:36:33,520
computing in network or in a remote

2849
01:36:33,520 --> 01:36:35,920
environment so i think there are some

2850
01:36:35,920 --> 01:36:38,880
issues that need to be clarified so

2851
01:36:38,880 --> 01:36:40,960
first is that what is the architecture

2852
01:36:40,960 --> 01:36:43,119
of what is the instance of competition

2853
01:36:43,119 --> 01:36:45,119
computing in a network and the second

2854
01:36:45,119 --> 01:36:46,159
one is that

2855
01:36:46,159 --> 01:36:47,440
what kind of

2856
01:36:47,440 --> 01:36:49,440
oh sorry i lost the

2857
01:36:49,440 --> 01:36:51,840
yeah i'm trying to reshare because

2858
01:36:51,840 --> 01:36:54,080
somebody soren mentioned that the slides

2859
01:36:54,080 --> 01:36:57,040
are not being shared

2860
01:36:57,920 --> 01:36:59,840
so for those that are remote can you see

2861
01:36:59,840 --> 01:37:02,719
the slides now

2862
01:37:03,679 --> 01:37:05,679
claims that i'm sharing them

2863
01:37:05,679 --> 01:37:07,440
yeah i can't see it

2864
01:37:07,440 --> 01:37:09,119
okay

2865
01:37:09,119 --> 01:37:12,000
i can see them looks good here okay okay

2866
01:37:12,000 --> 01:37:13,360
thank you

2867
01:37:13,360 --> 01:37:16,560
so the second question is what kind of

2868
01:37:16,560 --> 01:37:18,639
application package a network user

2869
01:37:18,639 --> 01:37:22,000
should use would it be a trust

2870
01:37:22,000 --> 01:37:24,080
application and personalization data are

2871
01:37:24,080 --> 01:37:26,000
banned together or not

2872
01:37:26,000 --> 01:37:28,239
the third question is what kind of steps

2873
01:37:28,239 --> 01:37:30,800
a network should we follow to deploy

2874
01:37:30,800 --> 01:37:33,280
application packages i think that the

2875
01:37:33,280 --> 01:37:36,000
tip architecture has defined a lot of uh

2876
01:37:36,000 --> 01:37:38,880
components like the active agency broker

2877
01:37:38,880 --> 01:37:41,920
and etc but i think these questions

2878
01:37:41,920 --> 01:37:44,560
especially from the perspective of a

2879
01:37:44,560 --> 01:37:47,040
user or network user i think we need to

2880
01:37:47,040 --> 01:37:49,600
clarify this so this drafter try to use

2881
01:37:49,600 --> 01:37:51,679
this tip architecture and the protocol

2882
01:37:51,679 --> 01:37:53,119
to illustrate this configuration

2883
01:37:53,119 --> 01:37:55,440
computing in network and this includes

2884
01:37:55,440 --> 01:37:58,000
the notion architecture the relevant

2885
01:37:58,000 --> 01:38:00,639
package type of application and the

2886
01:38:00,639 --> 01:38:05,679
deploy steps so next slide please

2887
01:38:07,040 --> 01:38:08,880
okay here's the

2888
01:38:08,880 --> 01:38:11,119
uh

2889
01:38:11,119 --> 01:38:13,280
i think in general this there are three

2890
01:38:13,280 --> 01:38:16,000
kinds of competition computing instance

2891
01:38:16,000 --> 01:38:18,719
that could exist in the network the

2892
01:38:18,719 --> 01:38:22,000
first one is a trusted process which

2893
01:38:22,000 --> 01:38:24,080
could be in a virtual machine or could

2894
01:38:24,080 --> 01:38:26,880
be in operating system and the second

2895
01:38:26,880 --> 01:38:31,440
one is the trusted vm which is

2896
01:38:31,600 --> 01:38:35,280
based on a hypervisor and the processor

2897
01:38:35,280 --> 01:38:37,520
process process and the containers in

2898
01:38:37,520 --> 01:38:38,400
this

2899
01:38:38,400 --> 01:38:40,239
trusted virtual machine are also

2900
01:38:40,239 --> 01:38:41,760
confidential and third one is the

2901
01:38:41,760 --> 01:38:43,280
container

2902
01:38:43,280 --> 01:38:45,360
so the container could be in a container

2903
01:38:45,360 --> 01:38:47,920
engine including a virtual machine and

2904
01:38:47,920 --> 01:38:50,239
this container is also protected by the

2905
01:38:50,239 --> 01:38:53,679
te also so in general these are three

2906
01:38:53,679 --> 01:38:55,760
instances that the network user could

2907
01:38:55,760 --> 01:38:57,440
use when

2908
01:38:57,440 --> 01:38:59,840
they want to say that i want a te and

2909
01:38:59,840 --> 01:39:02,480
which kind of key is it so it me it may

2910
01:39:02,480 --> 01:39:05,280
be a process a work machine or container

2911
01:39:05,280 --> 01:39:08,639
so next slide please

2912
01:39:09,280 --> 01:39:12,159
now here's the notional architecture of

2913
01:39:12,159 --> 01:39:15,280
the of this draft so we added the two

2914
01:39:15,280 --> 01:39:18,000
components first one is the network moc

2915
01:39:18,000 --> 01:39:20,000
which is network management and

2916
01:39:20,000 --> 01:39:22,960
orchestration center and the trusted

2917
01:39:22,960 --> 01:39:25,920
application manager is inside the

2918
01:39:25,920 --> 01:39:28,960
network moc and the second is a data

2919
01:39:28,960 --> 01:39:31,679
owner or the network user as a network

2920
01:39:31,679 --> 01:39:34,560
user who also owns the personalization

2921
01:39:34,560 --> 01:39:37,040
data and the trust replication and also

2922
01:39:37,040 --> 01:39:39,199
the unfaster application there are also

2923
01:39:39,199 --> 01:39:41,520
some components like the

2924
01:39:41,520 --> 01:39:43,600
trust application and fast application

2925
01:39:43,600 --> 01:39:45,280
and tip broker

2926
01:39:45,280 --> 01:39:46,480
tip agent

2927
01:39:46,480 --> 01:39:48,639
this has been defined in the

2928
01:39:48,639 --> 01:39:54,119
chip architecture so next slide please

2929
01:39:55,199 --> 01:39:57,840
uh here is the application uh package

2930
01:39:57,840 --> 01:39:59,760
and the deploy steps

2931
01:39:59,760 --> 01:40:01,840
so i think there are two principles to

2932
01:40:01,840 --> 01:40:04,480
deploy packages in the confidential

2933
01:40:04,480 --> 01:40:06,719
computing environment first one is that

2934
01:40:06,719 --> 01:40:09,119
the personalization data can only be

2935
01:40:09,119 --> 01:40:11,520
processed by time after remote

2936
01:40:11,520 --> 01:40:13,760
attestation and principle two is that

2937
01:40:13,760 --> 01:40:15,760
the personalized data must be

2938
01:40:15,760 --> 01:40:19,119
transferred securely and i mean security

2939
01:40:19,119 --> 01:40:21,920
is that this package could be encrypted

2940
01:40:21,920 --> 01:40:24,080
or during some secure channel

2941
01:40:24,080 --> 01:40:27,679
like a remote addition tls or just the

2942
01:40:27,679 --> 01:40:30,239
way it talked before the

2943
01:40:30,239 --> 01:40:32,880
course formula or some some other

2944
01:40:32,880 --> 01:40:34,080
formats

2945
01:40:34,080 --> 01:40:36,639
so the table shows is one example one

2946
01:40:36,639 --> 01:40:38,000
case case one

2947
01:40:38,000 --> 01:40:42,239
in this case the uata and pa and pd are

2948
01:40:42,239 --> 01:40:45,679
valued as one package and

2949
01:40:45,679 --> 01:40:48,320
in the second column shows that the

2950
01:40:48,320 --> 01:40:51,360
process in a physical or virtual machine

2951
01:40:51,360 --> 01:40:53,920
this could be uh supported by the chat

2952
01:40:53,920 --> 01:40:56,480
zone or sjx and in

2953
01:40:56,480 --> 01:40:58,000
in this scenario

2954
01:40:58,000 --> 01:41:00,880
the steps should follow uh in like in

2955
01:41:00,880 --> 01:41:02,880
the table first of all

2956
01:41:02,880 --> 01:41:05,360
the network will attach the tip agent to

2957
01:41:05,360 --> 01:41:08,880
see if the tip agent is trusted so after

2958
01:41:08,880 --> 01:41:12,159
verification and and the

2959
01:41:12,159 --> 01:41:14,000
the network user will transfer this

2960
01:41:14,000 --> 01:41:16,480
package to the tip agent and then tip 18

2961
01:41:16,480 --> 01:41:18,560
the world will decrypt

2962
01:41:18,560 --> 01:41:21,840
or unpack this package and then the

2963
01:41:21,840 --> 01:41:24,000
trusted application will be loaded to

2964
01:41:24,000 --> 01:41:26,239
the trusted process and then the

2965
01:41:26,239 --> 01:41:28,239
personalized data will be loaded to a

2966
01:41:28,239 --> 01:41:31,119
trusted application and in the end the

2967
01:41:31,119 --> 01:41:33,280
untrusted application will be loaded to

2968
01:41:33,280 --> 01:41:35,760
the ring so this is a basic

2969
01:41:35,760 --> 01:41:38,719
principle of the logic i think we should

2970
01:41:38,719 --> 01:41:40,960
follow and the third column shows the

2971
01:41:40,960 --> 01:41:42,800
steps in the

2972
01:41:42,800 --> 01:41:43,920
container

2973
01:41:43,920 --> 01:41:46,000
for physical or virtual machine and the

2974
01:41:46,000 --> 01:41:48,320
last column shows that so the step of

2975
01:41:48,320 --> 01:41:50,880
how to deploy in a

2976
01:41:50,880 --> 01:41:53,440
a virtual machine

2977
01:41:53,440 --> 01:41:56,239
next slide please

2978
01:41:57,280 --> 01:42:00,080
there are some other different packages

2979
01:42:00,080 --> 01:42:03,520
like this package mode is the ua tier

2980
01:42:03,520 --> 01:42:05,840
one package and the personalization data

2981
01:42:05,840 --> 01:42:09,280
is one package all the uata and pd are

2982
01:42:09,280 --> 01:42:12,080
separate packages and in this scenario

2983
01:42:12,080 --> 01:42:13,920
the ua should be deployed to the

2984
01:42:13,920 --> 01:42:16,480
reforest and then the ta

2985
01:42:16,480 --> 01:42:17,440
is

2986
01:42:17,440 --> 01:42:19,600
loaded to the trusted process of trusted

2987
01:42:19,600 --> 01:42:21,440
container or cluster vm

2988
01:42:21,440 --> 01:42:23,920
then will the network user will will

2989
01:42:23,920 --> 01:42:26,080
test the tip agent

2990
01:42:26,080 --> 01:42:28,400
after verification the network user will

2991
01:42:28,400 --> 01:42:31,760
trust the te then it will transfer its

2992
01:42:31,760 --> 01:42:33,520
personalized data to the test

2993
01:42:33,520 --> 01:42:36,000
application in the process or container

2994
01:42:36,000 --> 01:42:38,480
of virtual machine and the lower table

2995
01:42:38,480 --> 01:42:40,000
shows that

2996
01:42:40,000 --> 01:42:41,040
oh

2997
01:42:41,040 --> 01:42:43,760
some forms mistake i think

2998
01:42:43,760 --> 01:42:46,320
uh this

2999
01:42:46,320 --> 01:42:48,800
scenario i think it is that

3000
01:42:48,800 --> 01:42:51,920
the ta and pd are one package and the ua

3001
01:42:51,920 --> 01:42:53,760
is another package and so the steps

3002
01:42:53,760 --> 01:42:56,560
should be the ua first load to the re

3003
01:42:56,560 --> 01:42:57,600
and the zone

3004
01:42:57,600 --> 01:43:00,000
there is a network remote attestation

3005
01:43:00,000 --> 01:43:02,400
and then the t and pd will be loaded to

3006
01:43:02,400 --> 01:43:04,480
the trust process or container or

3007
01:43:04,480 --> 01:43:05,920
virtual machine

3008
01:43:05,920 --> 01:43:08,840
so next slide

3009
01:43:08,840 --> 01:43:10,880
please uh

3010
01:43:10,880 --> 01:43:13,360
these these tables they are also also uh

3011
01:43:13,360 --> 01:43:16,560
different uh cases this one is the upper

3012
01:43:16,560 --> 01:43:18,239
one is that uh

3013
01:43:18,239 --> 01:43:21,440
pa and pd are separate packages and the

3014
01:43:21,440 --> 01:43:24,239
lower one is that the ta and pd are the

3015
01:43:24,239 --> 01:43:27,679
same package so they also have uh steps

3016
01:43:27,679 --> 01:43:30,400
to deploy this package and they may be a

3017
01:43:30,400 --> 01:43:33,119
little bit different

3018
01:43:33,199 --> 01:43:35,280
so yeah these are all the cases i think

3019
01:43:35,280 --> 01:43:39,360
uh involved the next slide this

3020
01:43:39,520 --> 01:43:42,239
now here is one interesting scenario

3021
01:43:42,239 --> 01:43:45,520
that is not inside the draft but i think

3022
01:43:45,520 --> 01:43:48,000
it is very interesting to share with you

3023
01:43:48,000 --> 01:43:48,800
guys

3024
01:43:48,800 --> 01:43:50,880
and in this scenario that with this use

3025
01:43:50,880 --> 01:43:52,800
case and the tip and the computer

3026
01:43:52,800 --> 01:43:55,760
computing could be interested introduced

3027
01:43:55,760 --> 01:43:58,480
to different scenarios like oblivious

3028
01:43:58,480 --> 01:44:00,480
transfer which belongs to the

3029
01:44:00,480 --> 01:44:03,280
private computing and the original

3030
01:44:03,280 --> 01:44:05,600
obliques oblivious transfer is that the

3031
01:44:05,600 --> 01:44:07,600
collector which i think is a network

3032
01:44:07,600 --> 01:44:10,239
user could query a certain information

3033
01:44:10,239 --> 01:44:12,560
from the data center and the data center

3034
01:44:12,560 --> 01:44:14,320
cannot know the specific query

3035
01:44:14,320 --> 01:44:16,800
information and in order to do that the

3036
01:44:16,800 --> 01:44:19,040
ot algorithm will create lots of

3037
01:44:19,040 --> 01:44:20,800
redemptive query results to password the

3038
01:44:20,800 --> 01:44:22,800
data center and this will cause lots of

3039
01:44:22,800 --> 01:44:24,639
natural overhead to transfer this

3040
01:44:24,639 --> 01:44:27,280
redundant data result to the

3041
01:44:27,280 --> 01:44:29,760
collector for example if the data center

3042
01:44:29,760 --> 01:44:32,080
has one gigabit of information and the

3043
01:44:32,080 --> 01:44:34,480
collector only want to query 10 bits of

3044
01:44:34,480 --> 01:44:37,199
information so the ot algorithm will

3045
01:44:37,199 --> 01:44:38,239
have to

3046
01:44:38,239 --> 01:44:40,719
create a more than one gigabyte of

3047
01:44:40,719 --> 01:44:42,639
redundant information and transfer to

3048
01:44:42,639 --> 01:44:44,480
the collector then the collector will

3049
01:44:44,480 --> 01:44:46,560
decrypt all these information until it

3050
01:44:46,560 --> 01:44:47,600
gets the

3051
01:44:47,600 --> 01:44:48,719
correct

3052
01:44:48,719 --> 01:44:50,960
query information result

3053
01:44:50,960 --> 01:44:51,920
so

3054
01:44:51,920 --> 01:44:54,239
when we use computer computing and

3055
01:44:54,239 --> 01:44:57,199
combined with ot algorithm i think

3056
01:44:57,199 --> 01:44:59,040
things will be more easy

3057
01:44:59,040 --> 01:45:02,080
first we deploy the ot algorithm which

3058
01:45:02,080 --> 01:45:04,080
is also the trust application to the

3059
01:45:04,080 --> 01:45:06,719
data center and then we'll transfer the

3060
01:45:06,719 --> 01:45:08,960
personalization data which is also the

3061
01:45:08,960 --> 01:45:11,280
query information to that

3062
01:45:11,280 --> 01:45:13,760
ot algorithm then

3063
01:45:13,760 --> 01:45:15,199
the result is that

3064
01:45:15,199 --> 01:45:17,840
it could replace the network overhead by

3065
01:45:17,840 --> 01:45:19,600
memory access

3066
01:45:19,600 --> 01:45:21,840
and only transfer the correct query

3067
01:45:21,840 --> 01:45:23,920
result to collector because that the

3068
01:45:23,920 --> 01:45:25,840
company computing could protect the

3069
01:45:25,840 --> 01:45:28,840
information inside its environment so

3070
01:45:28,840 --> 01:45:30,000
the uh

3071
01:45:30,000 --> 01:45:33,280
it uh the the ot algorithm could uh

3072
01:45:33,280 --> 01:45:35,840
process all the information and uh until

3073
01:45:35,840 --> 01:45:37,760
it gets the correct query information

3074
01:45:37,760 --> 01:45:39,840
and just to transfer the 10 bits of

3075
01:45:39,840 --> 01:45:42,480
information to the collector so this is

3076
01:45:42,480 --> 01:45:44,239
just one very interesting scenario

3077
01:45:44,239 --> 01:45:45,280
scenario

3078
01:45:45,280 --> 01:45:49,679
uh next slide please i think that's it

3079
01:45:52,560 --> 01:45:55,119
yeah here's a summary this use case is

3080
01:45:55,119 --> 01:45:57,040
trying to use a tip architecture

3081
01:45:57,040 --> 01:45:59,280
architecture and protocol to illustrate

3082
01:45:59,280 --> 01:46:00,480
how to use

3083
01:46:00,480 --> 01:46:02,719
computer computing in the network and

3084
01:46:02,719 --> 01:46:04,480
list out the relevant steps and the

3085
01:46:04,480 --> 01:46:06,880
package mode and since this could get

3086
01:46:06,880 --> 01:46:10,239
the network user a remote user to use

3087
01:46:10,239 --> 01:46:13,199
this technology and then there are there

3088
01:46:13,199 --> 01:46:15,440
are some issues that remain open or not

3089
01:46:15,440 --> 01:46:17,360
in this draft scope i think

3090
01:46:17,360 --> 01:46:19,600
for example how to process remote

3091
01:46:19,600 --> 01:46:21,520
attestation and how to create a secure

3092
01:46:21,520 --> 01:46:23,040
channel i think there has been a lot of

3093
01:46:23,040 --> 01:46:25,199
discussion in these

3094
01:46:25,199 --> 01:46:26,639
issues so

3095
01:46:26,639 --> 01:46:28,639
i'm not sure if this is a unicorn i

3096
01:46:28,639 --> 01:46:30,239
think they may be covered by other

3097
01:46:30,239 --> 01:46:32,639
groups like the right group

3098
01:46:32,639 --> 01:46:35,199
or the how to create a motivation i

3099
01:46:35,199 --> 01:46:36,639
think it's based on the hardware

3100
01:46:36,639 --> 01:46:37,840
architecture

3101
01:46:37,840 --> 01:46:38,800
like

3102
01:46:38,800 --> 01:46:42,159
use the quote enclave or secure process

3103
01:46:42,159 --> 01:46:43,280
processor

3104
01:46:43,280 --> 01:46:45,040
um in the end

3105
01:46:45,040 --> 01:46:48,320
i we would like that uh this draft to be

3106
01:46:48,320 --> 01:46:50,239
adopted as a

3107
01:46:50,239 --> 01:46:51,920
working group product i think that would

3108
01:46:51,920 --> 01:46:54,080
be very very appreciate

3109
01:46:54,080 --> 01:46:56,800
oh i have a highness on the cube yes so

3110
01:46:56,800 --> 01:46:59,280
harness

3111
01:47:01,199 --> 01:47:02,880
yeah i think um

3112
01:47:02,880 --> 01:47:04,880
the work that bingling is doing is is

3113
01:47:04,880 --> 01:47:07,520
quite important because

3114
01:47:07,520 --> 01:47:09,600
in in the way we described the

3115
01:47:09,600 --> 01:47:11,199
terminology and the architecture was

3116
01:47:11,199 --> 01:47:13,360
course uh predates sort of all the

3117
01:47:13,360 --> 01:47:15,280
excitement on confidential computing but

3118
01:47:15,280 --> 01:47:16,880
it still has

3119
01:47:16,880 --> 01:47:19,679
um the ingredients in there like what we

3120
01:47:19,679 --> 01:47:21,520
refer to as personalization data is

3121
01:47:21,520 --> 01:47:23,520
often for some people working in a

3122
01:47:23,520 --> 01:47:25,679
confidential computing space

3123
01:47:25,679 --> 01:47:26,800
um

3124
01:47:26,800 --> 01:47:28,800
difficult to associate with some of

3125
01:47:28,800 --> 01:47:30,639
their confidential workloads

3126
01:47:30,639 --> 01:47:32,159
because the names are so different and

3127
01:47:32,159 --> 01:47:34,800
some of the others so i i personally see

3128
01:47:34,800 --> 01:47:37,600
that there's a possibility for us to

3129
01:47:37,600 --> 01:47:38,400
um

3130
01:47:38,400 --> 01:47:40,800
sort of describes on how to map some of

3131
01:47:40,800 --> 01:47:41,760
the

3132
01:47:41,760 --> 01:47:43,440
confidential computing

3133
01:47:43,440 --> 01:47:46,719
use cases and uh there are different

3134
01:47:46,719 --> 01:47:48,320
sort of models that springling was just

3135
01:47:48,320 --> 01:47:49,520
talking about

3136
01:47:49,520 --> 01:47:51,040
um to

3137
01:47:51,040 --> 01:47:54,400
the uh the deep architecture and i think

3138
01:47:54,400 --> 01:47:55,679
explaining that and potentially

3139
01:47:55,679 --> 01:47:57,440
motivating with some examples on how you

3140
01:47:57,440 --> 01:47:59,280
do that how

3141
01:47:59,280 --> 01:48:02,239
how what that means like um

3142
01:48:02,239 --> 01:48:05,199
with applying deep protocol uh and and

3143
01:48:05,199 --> 01:48:07,199
its subcomponents i think that could be

3144
01:48:07,199 --> 01:48:09,360
quite helpful for

3145
01:48:09,360 --> 01:48:10,480
readers

3146
01:48:10,480 --> 01:48:13,119
who stumble over the work or i want to

3147
01:48:13,119 --> 01:48:16,080
come up with a standardized way in

3148
01:48:16,080 --> 01:48:17,280
um

3149
01:48:17,280 --> 01:48:19,040
in supporting some of the confidential

3150
01:48:19,040 --> 01:48:21,520
computing use cases

3151
01:48:21,520 --> 01:48:23,760
okay

3152
01:48:24,000 --> 01:48:26,639
uh dave

3153
01:48:27,679 --> 01:48:31,360
dave famer uh so i think there's uh

3154
01:48:31,360 --> 01:48:33,840
two things that are in uh

3155
01:48:33,840 --> 01:48:36,960
penguins presentation and draft that i

3156
01:48:36,960 --> 01:48:39,600
hadn't seen in any other uh draft or

3157
01:48:39,600 --> 01:48:40,719
presentation

3158
01:48:40,719 --> 01:48:42,639
and i think are valuable contributions

3159
01:48:42,639 --> 01:48:45,199
to the t discussion

3160
01:48:45,199 --> 01:48:46,880
one of them was

3161
01:48:46,880 --> 01:48:50,880
uh in the use case form of where is the

3162
01:48:50,880 --> 01:48:52,800
tp the device the cheap agent right

3163
01:48:52,800 --> 01:48:54,239
because the cases that we've talked

3164
01:48:54,239 --> 01:48:55,760
about in you know architecture and other

3165
01:48:55,760 --> 01:48:58,000
drafts and things were the type agents

3166
01:48:58,000 --> 01:49:00,239
in some device like an iot device or

3167
01:49:00,239 --> 01:49:01,600
something like that or a phone or a

3168
01:49:01,600 --> 01:49:03,440
laptop or whatever and the case where

3169
01:49:03,440 --> 01:49:04,639
it's in the cloud

3170
01:49:04,639 --> 01:49:05,360
okay

3171
01:49:05,360 --> 01:49:06,880
this is a use case where it's neither of

3172
01:49:06,880 --> 01:49:09,360
those okay it's some

3173
01:49:09,360 --> 01:49:11,119
middle box in the network such as you

3174
01:49:11,119 --> 01:49:12,639
know the network operators you know

3175
01:49:12,639 --> 01:49:14,480
router or switch or something like that

3176
01:49:14,480 --> 01:49:16,560
and so it's like a cloud except for it's

3177
01:49:16,560 --> 01:49:18,639
actually in the local network okay so

3178
01:49:18,639 --> 01:49:20,480
it's just a variation of like a local

3179
01:49:20,480 --> 01:49:22,320
cloud whatever it's just another use

3180
01:49:22,320 --> 01:49:23,599
case that says you can use the same

3181
01:49:23,599 --> 01:49:25,360
technology to do with the cloud you can

3182
01:49:25,360 --> 01:49:28,080
do that with the device here okay and so

3183
01:49:28,080 --> 01:49:29,440
that part is just an interesting yeah

3184
01:49:29,440 --> 01:49:30,719
this too okay

3185
01:49:30,719 --> 01:49:32,719
um but the other thing that that this

3186
01:49:32,719 --> 01:49:34,639
talked about that um applies to the

3187
01:49:34,639 --> 01:49:36,000
cloud as well

3188
01:49:36,000 --> 01:49:38,560
that we didn't explicitly cover was um

3189
01:49:38,560 --> 01:49:40,400
in the architecture document we talk

3190
01:49:40,400 --> 01:49:42,159
about the bundling where we have like

3191
01:49:42,159 --> 01:49:44,080
the untrusted app the trusted app and

3192
01:49:44,080 --> 01:49:45,840
the personalization data and that's

3193
01:49:45,840 --> 01:49:47,040
where you cover all those like different

3194
01:49:47,040 --> 01:49:49,360
cases and stuff right in the cloud and

3195
01:49:49,360 --> 01:49:50,960
in this case right

3196
01:49:50,960 --> 01:49:52,800
there doesn't have to be an untrusted

3197
01:49:52,800 --> 01:49:53,920
app

3198
01:49:53,920 --> 01:49:55,520
okay if you think about the the trend

3199
01:49:55,520 --> 01:49:57,119
towards you know confidential vms and

3200
01:49:57,119 --> 01:49:59,119
combination containers and so on there's

3201
01:49:59,119 --> 01:50:00,719
only a trusted app there's no untrusted

3202
01:50:00,719 --> 01:50:02,800
app on the whole device right

3203
01:50:02,800 --> 01:50:04,560
and so that's something that that i

3204
01:50:04,560 --> 01:50:06,560
think does come up and was talked about

3205
01:50:06,560 --> 01:50:08,639
in penguin's draft that didn't wasn't

3206
01:50:08,639 --> 01:50:10,080
mentioned in any other thing unless you

3207
01:50:10,080 --> 01:50:11,599
know the absence of an untrusted

3208
01:50:11,599 --> 01:50:13,199
application is also an interesting

3209
01:50:13,199 --> 01:50:15,040
contribution to the discussion so uh

3210
01:50:15,040 --> 01:50:16,639
thanks penguin for bringing up both of

3211
01:50:16,639 --> 01:50:18,480
those cases i think they're both

3212
01:50:18,480 --> 01:50:20,400
uh worth making sure that we're thinking

3213
01:50:20,400 --> 01:50:22,159
about when we're doing drafts and

3214
01:50:22,159 --> 01:50:24,480
implementations and stuff is to say what

3215
01:50:24,480 --> 01:50:26,159
if what if there is no untrusted app

3216
01:50:26,159 --> 01:50:27,679
it's just the trusted app running inside

3217
01:50:27,679 --> 01:50:29,679
of a tee and the only thing that's using

3218
01:50:29,679 --> 01:50:32,000
it is something across the network right

3219
01:50:32,000 --> 01:50:33,520
and you have some network path whatever

3220
01:50:33,520 --> 01:50:35,119
that's provided by the tee that's not

3221
01:50:35,119 --> 01:50:37,119
the untrusted app per se is not involved

3222
01:50:37,119 --> 01:50:38,639
so there is no such thing so i think

3223
01:50:38,639 --> 01:50:40,320
that part is a useful contribution and

3224
01:50:40,320 --> 01:50:42,239
the oh yeah when talking about things

3225
01:50:42,239 --> 01:50:44,080
without a

3226
01:50:44,080 --> 01:50:46,320
user interface right it's not just the

3227
01:50:46,320 --> 01:50:47,920
cloud as we classically think about it

3228
01:50:47,920 --> 01:50:49,360
with cloud confidential computing with

3229
01:50:49,360 --> 01:50:52,960
like you know azure and aws and gcp and

3230
01:50:52,960 --> 01:50:54,960
so on it's also things like network

3231
01:50:54,960 --> 01:50:56,480
operators is an interesting use case we

3232
01:50:56,480 --> 01:50:57,840
want to consider too

3233
01:50:57,840 --> 01:50:59,360
i don't know that chain may has any

3234
01:50:59,360 --> 01:51:01,360
changes the protocol okay but i think

3235
01:51:01,360 --> 01:51:02,480
it's an interesting use case in

3236
01:51:02,480 --> 01:51:04,080
particular the lack of a ua i think is a

3237
01:51:04,080 --> 01:51:06,800
good contribution so thanks thanks thank

3238
01:51:06,800 --> 01:51:09,599
you thank you dude

3239
01:51:10,000 --> 01:51:13,360
yeah so danielle we go the mic um hi i'd

3240
01:51:13,360 --> 01:51:15,040
like also to support

3241
01:51:15,040 --> 01:51:17,520
if if we have a document that

3242
01:51:17,520 --> 01:51:19,440
illustrates somehow some of the

3243
01:51:19,440 --> 01:51:21,119
discussions we're having this working

3244
01:51:21,119 --> 01:51:23,280
group i think that's going to be helpful

3245
01:51:23,280 --> 01:51:26,400
for people watching at us

3246
01:51:26,400 --> 01:51:27,520
one thing

3247
01:51:27,520 --> 01:51:29,520
i have the impression that we should not

3248
01:51:29,520 --> 01:51:30,960
try to be

3249
01:51:30,960 --> 01:51:31,920
um

3250
01:51:31,920 --> 01:51:34,159
to provide a complete description of

3251
01:51:34,159 --> 01:51:36,239
everything that can be done so

3252
01:51:36,239 --> 01:51:37,360
um

3253
01:51:37,360 --> 01:51:39,440
if we can target that just as an open

3254
01:51:39,440 --> 01:51:41,920
illustrative discussion i think it's um

3255
01:51:41,920 --> 01:51:43,679
it's reasonable but we don't want to end

3256
01:51:43,679 --> 01:51:45,679
up with a book at the end

3257
01:51:45,679 --> 01:51:47,360
yeah i mean that's what we tried to do

3258
01:51:47,360 --> 01:51:49,040
in the architecture or the authors of

3259
01:51:49,040 --> 01:51:51,280
the architecture as well right um so

3260
01:51:51,280 --> 01:51:52,960
what i'm hearing is that this is a

3261
01:51:52,960 --> 01:51:54,400
useful

3262
01:51:54,400 --> 01:51:58,239
addition for another model right

3263
01:51:58,239 --> 01:51:59,280
um

3264
01:51:59,280 --> 01:52:01,520
i guess the question that i have is i

3265
01:52:01,520 --> 01:52:03,840
see that as a standards track document

3266
01:52:03,840 --> 01:52:06,400
although i don't see it making

3267
01:52:06,400 --> 01:52:08,000
any changes so

3268
01:52:08,000 --> 01:52:11,119
my question as a chair is does it need

3269
01:52:11,119 --> 01:52:13,280
i see it more as an informational as

3270
01:52:13,280 --> 01:52:15,599
opposed to standards

3271
01:52:15,599 --> 01:52:17,040
right so

3272
01:52:17,040 --> 01:52:18,719
as a chair that would be my

3273
01:52:18,719 --> 01:52:21,280
recommendation um dave you're back in

3274
01:52:21,280 --> 01:52:24,480
the queue yeah i think

3275
01:52:24,480 --> 01:52:25,440
yes

3276
01:52:25,440 --> 01:52:27,759
um

3277
01:52:28,000 --> 01:52:30,400
i'm trying to think um

3278
01:52:30,400 --> 01:52:32,320
what i think might be useful i i'll

3279
01:52:32,320 --> 01:52:34,239
think on the fly about uh nancy your

3280
01:52:34,239 --> 01:52:36,080
question um

3281
01:52:36,080 --> 01:52:38,400
informational not standard track to that

3282
01:52:38,400 --> 01:52:40,960
question because this is about use cases

3283
01:52:40,960 --> 01:52:41,920
um

3284
01:52:41,920 --> 01:52:44,239
i'm thinking that it may be useful if we

3285
01:52:44,239 --> 01:52:46,480
can combine both the cloud case and the

3286
01:52:46,480 --> 01:52:48,480
network case into a single use case

3287
01:52:48,480 --> 01:52:50,560
document that covers both

3288
01:52:50,560 --> 01:52:53,599
because i think this notion that says

3289
01:52:53,599 --> 01:52:55,280
there are use cases that don't have an

3290
01:52:55,280 --> 01:52:56,960
untrusted application and here's two of

3291
01:52:56,960 --> 01:52:59,360
them they're very similar there's

3292
01:52:59,360 --> 01:53:01,040
different types of operators but the

3293
01:53:01,040 --> 01:53:03,679
technology wise right they're almost

3294
01:53:03,679 --> 01:53:04,800
identical

3295
01:53:04,800 --> 01:53:06,880
um other than that you know the things

3296
01:53:06,880 --> 01:53:09,040
that go around tea brightens but a lot

3297
01:53:09,040 --> 01:53:10,960
of the same considerations i think it

3298
01:53:10,960 --> 01:53:13,119
might be useful to have a working group

3299
01:53:13,119 --> 01:53:15,280
documents informational use case

3300
01:53:15,280 --> 01:53:18,560
that covers both cloud uh and uh network

3301
01:53:18,560 --> 01:53:21,440
which are cases that don't have a ua

3302
01:53:21,440 --> 01:53:22,960
okay that's the common thread i'm

3303
01:53:22,960 --> 01:53:24,880
confused i

3304
01:53:24,880 --> 01:53:27,920
i thought this draft covered both

3305
01:53:27,920 --> 01:53:29,760
but then i've been this draft that

3306
01:53:29,760 --> 01:53:31,840
penguin is presenting is called

3307
01:53:31,840 --> 01:53:34,239
uh confidence for the network

3308
01:53:34,239 --> 01:53:36,400
and for that he's talking about cloud is

3309
01:53:36,400 --> 01:53:37,679
already covered there we're talking

3310
01:53:37,679 --> 01:53:39,520
about in your local network or whatever

3311
01:53:39,520 --> 01:53:42,000
and i'm saying if you broaden it to say

3312
01:53:42,000 --> 01:53:44,320
and cloud two and say take penguin's

3313
01:53:44,320 --> 01:53:46,800
document add the cloud stuff into it too

3314
01:53:46,800 --> 01:53:48,159
then i think it's actually even more

3315
01:53:48,159 --> 01:53:50,400
applicable because

3316
01:53:50,400 --> 01:53:52,480
we don't have a document that says

3317
01:53:52,480 --> 01:53:53,679
you can have cloud confidential

3318
01:53:53,679 --> 01:53:56,480
computing cases without a ua

3319
01:53:56,480 --> 01:53:57,520
just like you can have never

3320
01:53:57,520 --> 01:53:58,880
accomplished your committee cases out of

3321
01:53:58,880 --> 01:54:00,880
ua it would be useful to put that in one

3322
01:54:00,880 --> 01:54:02,639
document and not try to just try to say

3323
01:54:02,639 --> 01:54:03,920
we don't need a whole bunch of documents

3324
01:54:03,920 --> 01:54:06,239
right combine them into one document

3325
01:54:06,239 --> 01:54:08,719
says use cases without a t without a ua

3326
01:54:08,719 --> 01:54:11,040
and penguin's case and the cloud cases

3327
01:54:11,040 --> 01:54:12,639
uh have a lot of the same text that

3328
01:54:12,639 --> 01:54:13,840
you'd want and so just put it in the

3329
01:54:13,840 --> 01:54:15,119
comment section so that's what i would

3330
01:54:15,119 --> 01:54:16,159
say is

3331
01:54:16,159 --> 01:54:17,599
if that is done then i think it would

3332
01:54:17,599 --> 01:54:18,800
probably be useful to have another

3333
01:54:18,800 --> 01:54:20,800
informational use case document whether

3334
01:54:20,800 --> 01:54:22,159
it's done as a working group document or

3335
01:54:22,159 --> 01:54:23,679
not i i don't care either way i think it

3336
01:54:23,679 --> 01:54:25,840
does make sense so okay

3337
01:54:25,840 --> 01:54:27,599
so do you want to wait until that

3338
01:54:27,599 --> 01:54:29,280
inclusion is made or do you want to

3339
01:54:29,280 --> 01:54:30,719
adopt this

3340
01:54:30,719 --> 01:54:32,480
i'm trying to figure out how to well i

3341
01:54:32,480 --> 01:54:34,000
see daniel and q and i want to know if

3342
01:54:34,000 --> 01:54:36,960
he would change my opinion so yeah go

3343
01:54:36,960 --> 01:54:38,000
ahead

3344
01:54:38,000 --> 01:54:40,880
uh no i don't i don't know

3345
01:54:40,880 --> 01:54:41,760
so

3346
01:54:41,760 --> 01:54:44,000
so in my case i don't really have a

3347
01:54:44,000 --> 01:54:45,599
strong opinion but

3348
01:54:45,599 --> 01:54:47,440
i had in mind more some something

3349
01:54:47,440 --> 01:54:49,760
informational

3350
01:54:49,760 --> 01:54:52,320
yes informational but um i mean i'm not

3351
01:54:52,320 --> 01:54:54,080
strong

3352
01:54:54,080 --> 01:54:56,080
so i might change my mind somewhere well

3353
01:54:56,080 --> 01:54:59,679
so pengling as a chair my recommendation

3354
01:54:59,679 --> 01:55:02,400
is given what we just discussed is that

3355
01:55:02,400 --> 01:55:04,320
it's not a standards track document it

3356
01:55:04,320 --> 01:55:06,719
would be an informational document

3357
01:55:06,719 --> 01:55:09,040
so if we were to adopt it

3358
01:55:09,040 --> 01:55:11,119
and it moves forward with adoption i

3359
01:55:11,119 --> 01:55:13,040
would have you change it from standards

3360
01:55:13,040 --> 01:55:15,199
track to informational

3361
01:55:15,199 --> 01:55:16,560
okay

3362
01:55:16,560 --> 01:55:19,040
my first thought is informational but

3363
01:55:19,040 --> 01:55:20,400
somehow

3364
01:55:20,400 --> 01:55:23,520
the draft is standard

3365
01:55:23,520 --> 01:55:24,800
yeah

3366
01:55:24,800 --> 01:55:26,000
okay

3367
01:55:26,000 --> 01:55:27,840
okay

3368
01:55:27,840 --> 01:55:29,360
well yeah technically i'm not out of the

3369
01:55:29,360 --> 01:55:32,719
cube oh yeah

3370
01:55:32,719 --> 01:55:35,119
all i was going to say is um i i i'm

3371
01:55:35,119 --> 01:55:37,119
looking at our a.d and stuff but i i

3372
01:55:37,119 --> 01:55:38,320
think it's within the realm of the

3373
01:55:38,320 --> 01:55:40,000
working group decide how many documents

3374
01:55:40,000 --> 01:55:41,679
a milestone gets split into and if you

3375
01:55:41,679 --> 01:55:43,040
consider this to be

3376
01:55:43,040 --> 01:55:45,040
like an a a

3377
01:55:45,040 --> 01:55:46,320
separate thing that we didn't cover in

3378
01:55:46,320 --> 01:55:47,520
the architecture document because it's

3379
01:55:47,520 --> 01:55:49,199
not core it's like an addendum and we

3380
01:55:49,199 --> 01:55:51,040
could use that without having a new uh

3381
01:55:51,040 --> 01:55:52,800
any charter updates as long as the ad

3382
01:55:52,800 --> 01:55:54,080
agrees with that and i don't see any

3383
01:55:54,080 --> 01:55:55,599
issues with saying yeah we could have

3384
01:55:55,599 --> 01:55:57,679
another milestone or something like that

3385
01:55:57,679 --> 01:55:59,360
um i just want to confirm that there's

3386
01:55:59,360 --> 01:56:01,119
no charter issue here i don't think

3387
01:56:01,119 --> 01:56:02,719
there is and i see you nodding so okay

3388
01:56:02,719 --> 01:56:05,199
good okay oh thank you i i didn't think

3389
01:56:05,199 --> 01:56:06,800
so that was going to be my last question

3390
01:56:06,800 --> 01:56:09,119
to to rad whom i can't see because of

3391
01:56:09,119 --> 01:56:11,679
the cameras but yes

3392
01:56:11,679 --> 01:56:14,080
i'm too short so soren you're in the

3393
01:56:14,080 --> 01:56:16,320
queue

3394
01:56:20,080 --> 01:56:22,239
what i would like to

3395
01:56:22,239 --> 01:56:23,520
help here

3396
01:56:23,520 --> 01:56:25,520
is that in my opinion there are two

3397
01:56:25,520 --> 01:56:28,239
interesting use cases that i hope they

3398
01:56:28,239 --> 01:56:29,119
are

3399
01:56:29,119 --> 01:56:31,040
included in this

3400
01:56:31,040 --> 01:56:33,920
targeted that one the the first one is

3401
01:56:33,920 --> 01:56:34,800
uh

3402
01:56:34,800 --> 01:56:38,480
the the fact that we will use containers

3403
01:56:38,480 --> 01:56:40,960
it could be a problem

3404
01:56:40,960 --> 01:56:43,679
for the container security

3405
01:56:43,679 --> 01:56:46,000
uh and that that's why i think that it

3406
01:56:46,000 --> 01:56:48,320
should be a different use case or the

3407
01:56:48,320 --> 01:56:49,920
normal use case

3408
01:56:49,920 --> 01:56:52,239
i'm looking to the clouds mostly right

3409
01:56:52,239 --> 01:56:54,080
that's the current uh

3410
01:56:54,080 --> 01:56:57,520
direction for my thinking so uh i'm i'm

3411
01:56:57,520 --> 01:56:59,599
worried about the security issues of

3412
01:56:59,599 --> 01:57:01,040
that

3413
01:57:01,040 --> 01:57:03,599
a little bit so

3414
01:57:03,599 --> 01:57:05,199
can you hear me

3415
01:57:05,199 --> 01:57:07,199
yes yes

3416
01:57:07,199 --> 01:57:09,520
because i think i i lost it for a second

3417
01:57:09,520 --> 01:57:10,639
okay

3418
01:57:10,639 --> 01:57:14,080
so uh so that that will be my i think i

3419
01:57:14,080 --> 01:57:16,960
would like to to to show the two cases

3420
01:57:16,960 --> 01:57:19,599
being one cloud proper and one

3421
01:57:19,599 --> 01:57:22,400
containers in the cloud that's my point

3422
01:57:22,400 --> 01:57:25,360
and i i will be very interested to join

3423
01:57:25,360 --> 01:57:27,679
the draft

3424
01:57:27,679 --> 01:57:30,480
okay thank you

3425
01:57:31,360 --> 01:57:33,599
um

3426
01:57:33,599 --> 01:57:35,199
chris

3427
01:57:35,199 --> 01:57:36,880
hi so i'm i'm

3428
01:57:36,880 --> 01:57:38,239
reacting to soren and i'm kind of

3429
01:57:38,239 --> 01:57:40,080
curious about what he means by kind of

3430
01:57:40,080 --> 01:57:42,080
container security

3431
01:57:42,080 --> 01:57:43,119
um

3432
01:57:43,119 --> 01:57:45,520
and complications and so i mean i i

3433
01:57:45,520 --> 01:57:46,719
understand

3434
01:57:46,719 --> 01:57:48,639
a little bit and and i'll give you a

3435
01:57:48,639 --> 01:57:50,480
little bit of background in that

3436
01:57:50,480 --> 01:57:51,280
uh

3437
01:57:51,280 --> 01:57:53,760
you know carnegie mellon university

3438
01:57:53,760 --> 01:57:55,440
we have some research project going on

3439
01:57:55,440 --> 01:57:57,520
that's actually rewriting kind of the c

3440
01:57:57,520 --> 01:57:59,840
groups of linux in

3441
01:57:59,840 --> 01:58:03,599
with formal analysis tied into

3442
01:58:03,599 --> 01:58:05,280
um

3443
01:58:05,280 --> 01:58:07,760
secure hardware you know root of trust

3444
01:58:07,760 --> 01:58:10,080
with a hypervisor that's already

3445
01:58:10,080 --> 01:58:12,400
written in formal language so it would

3446
01:58:12,400 --> 01:58:14,880
have formal proofs of

3447
01:58:14,880 --> 01:58:16,719
correctness from

3448
01:58:16,719 --> 01:58:17,599
the

3449
01:58:17,599 --> 01:58:20,000
you know secure execution element up

3450
01:58:20,000 --> 01:58:22,719
through the virtualization stop so

3451
01:58:22,719 --> 01:58:24,320
i'd be very interested in understanding

3452
01:58:24,320 --> 01:58:25,760
what your

3453
01:58:25,760 --> 01:58:27,599
what your kind of definition of what

3454
01:58:27,599 --> 01:58:28,880
those risks are

3455
01:58:28,880 --> 01:58:31,679
yeah sure okay

3456
01:58:32,000 --> 01:58:33,360
sorry so

3457
01:58:33,360 --> 01:58:35,280
so from a working group point of view if

3458
01:58:35,280 --> 01:58:38,400
this is in scope as well you know if you

3459
01:58:38,400 --> 01:58:41,280
want any input on that

3460
01:58:41,280 --> 01:58:43,520
right um so in the interest of time

3461
01:58:43,520 --> 01:58:45,520
we've got two minutes left

3462
01:58:45,520 --> 01:58:48,080
what i'm trying to assess his readiness

3463
01:58:48,080 --> 01:58:51,760
of adoption for this particular document

3464
01:58:51,760 --> 01:58:53,599
versus waiting

3465
01:58:53,599 --> 01:58:55,520
to get inclusion

3466
01:58:55,520 --> 01:58:57,840
at least dave you made it clear if the

3467
01:58:57,840 --> 01:59:00,880
applicability of the network use case

3468
01:59:00,880 --> 01:59:03,360
and the pure cloud use case

3469
01:59:03,360 --> 01:59:05,679
and so i would i was trying to craft a

3470
01:59:05,679 --> 01:59:07,599
poll it really sucks to do everything

3471
01:59:07,599 --> 01:59:10,880
parallel so i was trying to craft a poll

3472
01:59:10,880 --> 01:59:13,440
to see if there was interest

3473
01:59:13,440 --> 01:59:16,800
in waiting for the inclusion of both

3474
01:59:16,800 --> 01:59:20,000
or so let me just start the session

3475
01:59:20,000 --> 01:59:21,920
and i may not have worded it perfectly

3476
01:59:21,920 --> 01:59:24,400
but let me just move it forward as a

3477
01:59:24,400 --> 01:59:25,360
poll

3478
01:59:25,360 --> 01:59:26,320
and it's

3479
01:59:26,320 --> 01:59:28,639
basically i'm asking the question do you

3480
01:59:28,639 --> 01:59:31,119
want both use cases included before we

3481
01:59:31,119 --> 01:59:33,360
adopt the document or

3482
01:59:33,360 --> 01:59:35,599
can i ask the question to just adopt

3483
01:59:35,599 --> 01:59:38,960
this document as a seed and we elaborate

3484
01:59:38,960 --> 01:59:42,000
moving forward so the first question is

3485
01:59:42,000 --> 01:59:46,239
do you want to wait for everything so

3486
01:59:46,239 --> 01:59:48,560
let's go ahead and

3487
01:59:48,560 --> 01:59:50,800
i'm going to give it a few more seconds

3488
01:59:50,800 --> 01:59:52,239
because we're going to be running out of

3489
01:59:52,239 --> 01:59:55,799
time pretty soon

3490
02:00:04,880 --> 02:00:07,679
so i will need help from the aedn

3491
02:00:07,679 --> 02:00:10,800
it's not overwhelming consensus

3492
02:00:10,800 --> 02:00:14,320
so i could help with guidance there

3493
02:00:18,639 --> 02:00:19,760
honest

3494
02:00:19,760 --> 02:00:24,239
well let me i'd like to get the ad to

3495
02:00:24,239 --> 02:00:25,679
follow the city

3496
02:00:25,679 --> 02:00:27,040
so so i don't think there's a big

3497
02:00:27,040 --> 02:00:28,800
difference in between doing it before or

3498
02:00:28,800 --> 02:00:32,239
after the adoption call if you're if you

3499
02:00:32,239 --> 02:00:33,679
if you plan on doing it anyway you'll

3500
02:00:33,679 --> 02:00:35,199
get some discussion anyway if it doesn't

3501
02:00:35,199 --> 02:00:38,239
happen so either is fine with me

3502
02:00:38,239 --> 02:00:39,119
okay

3503
02:00:39,119 --> 02:00:40,960
and and that's pretty much what i where

3504
02:00:40,960 --> 02:00:42,960
you were interpreting the result as well

3505
02:00:42,960 --> 02:00:45,119
for that reason yeah i mean there

3506
02:00:45,119 --> 02:00:47,760
there's the consensus of leaning towards

3507
02:00:47,760 --> 02:00:51,280
let's just do the call so um

3508
02:00:51,280 --> 02:00:52,320
let me

3509
02:00:52,320 --> 02:00:55,840
start the poll

3510
02:00:59,840 --> 02:01:02,159
okay

3511
02:01:03,199 --> 02:01:05,599
please hang on network

3512
02:01:05,599 --> 02:01:07,440
you can do this

3513
02:01:07,440 --> 02:01:09,280
um

3514
02:01:09,280 --> 02:01:12,239
i usually ask a set of questions

3515
02:01:12,239 --> 02:01:14,559
um

3516
02:01:18,080 --> 02:01:19,760
you support

3517
02:01:19,760 --> 02:01:22,719
adoption

3518
02:01:22,719 --> 02:01:24,159
uh the

3519
02:01:24,159 --> 02:01:27,840
and peng help me in real life um time

3520
02:01:27,840 --> 02:01:30,080
the name of your draft again

3521
02:01:30,080 --> 02:01:32,560
use cases

3522
02:01:32,560 --> 02:01:37,280
for confidential computing in network

3523
02:01:37,280 --> 02:01:38,880
yeah i think uh

3524
02:01:38,880 --> 02:01:42,719
dave's idea is is better we can adopt it

3525
02:01:42,719 --> 02:01:44,800
first and then add it to the continuous

3526
02:01:44,800 --> 02:01:46,239
case in that

3527
02:01:46,239 --> 02:01:49,280
okay i have started a poll

3528
02:01:49,280 --> 02:01:51,280
to support adoption for the draft that

3529
02:01:51,280 --> 02:01:53,920
peng just um

3530
02:01:53,920 --> 02:01:55,360
presented

3531
02:01:55,360 --> 02:01:56,880
since we're out of

3532
02:01:56,880 --> 02:01:58,400
time and then we'll confirm it on the

3533
02:01:58,400 --> 02:02:01,119
mail list so

3534
02:02:01,119 --> 02:02:02,639
okay so

3535
02:02:02,639 --> 02:02:04,560
we pretty much have unanimous consent

3536
02:02:04,560 --> 02:02:06,239
here which is good we have strong

3537
02:02:06,239 --> 02:02:07,520
support

3538
02:02:07,520 --> 02:02:08,320
so

3539
02:02:08,320 --> 02:02:10,719
um ping ling what i'm going to ask you

3540
02:02:10,719 --> 02:02:12,239
to do is

3541
02:02:12,239 --> 02:02:13,920
change it and i can

3542
02:02:13,920 --> 02:02:16,000
if i forget just remind me

3543
02:02:16,000 --> 02:02:18,639
change the draft to informational and

3544
02:02:18,639 --> 02:02:20,800
make it a multi-draft and then you can

3545
02:02:20,800 --> 02:02:22,239
submit it

3546
02:02:22,239 --> 02:02:25,679
okay okay okay

3547
02:02:25,679 --> 02:02:28,000
so with that see this is why i always

3548
02:02:28,000 --> 02:02:29,920
leave a few minutes buffer

3549
02:02:29,920 --> 02:02:31,679
because we're two minutes over

3550
02:02:31,679 --> 02:02:34,000
with that um

3551
02:02:34,000 --> 02:02:36,560
thank you to the authors and presenters

3552
02:02:36,560 --> 02:02:39,679
ping ling we're making good progress

3553
02:02:39,679 --> 02:02:41,520
i didn't get to ask the question so i'll

3554
02:02:41,520 --> 02:02:44,159
ask it on the list whether we can do an

3555
02:02:44,159 --> 02:02:46,880
early review for the protocol draft

3556
02:02:46,880 --> 02:02:49,040
and readiness working working group last

3557
02:02:49,040 --> 02:02:53,119
call so i'll do that on the mail list

3558
02:02:58,840 --> 02:03:01,360
dave right now my plan is to go ahead

3559
02:03:01,360 --> 02:03:03,440
and post the github copy

3560
02:03:03,440 --> 02:03:05,040
and then keep working on the issues just

3561
02:03:05,040 --> 02:03:06,159
because that gets a whole bunch of them

3562
02:03:06,159 --> 02:03:07,440
out of the way and now we're down to

3563
02:03:07,440 --> 02:03:08,719
like the three that we've been talking

3564
02:03:08,719 --> 02:03:10,560
about recently and not have to wait for

3565
02:03:10,560 --> 02:03:11,920
those of the three just so we get an

3566
02:03:11,920 --> 02:03:13,679
update so that any question of whether

3567
02:03:13,679 --> 02:03:15,599
you wanted to put another ref before i

3568
02:03:15,599 --> 02:03:17,679
do the question of readiness for working

3569
02:03:17,679 --> 02:03:19,440
with last call well we know that there's

3570
02:03:19,440 --> 02:03:21,119
three open issues and so

3571
02:03:21,119 --> 02:03:23,119
that's up to you i guess so

3572
02:03:23,119 --> 02:03:24,320
i mean there's three issues we discussed

3573
02:03:24,320 --> 02:03:25,679
that don't have github pull requests

3574
02:03:25,679 --> 02:03:27,360
already merged right so

3575
02:03:27,360 --> 02:03:29,280
all but three of them meaning ken's

3576
02:03:29,280 --> 02:03:30,400
which doesn't have a number and i think

3577
02:03:30,400 --> 02:03:31,920
there's two other ones that we discussed

3578
02:03:31,920 --> 02:03:33,360
the last three slides or the last three

3579
02:03:33,360 --> 02:03:35,199
topics for ones that don't already have

3580
02:03:35,199 --> 02:03:37,040
text merge into the github copy i'll

3581
02:03:37,040 --> 02:03:38,480
just take a snapshot of what's in github

3582
02:03:38,480 --> 02:03:40,239
right now push it up there and that will

3583
02:03:40,239 --> 02:03:42,159
allow us to close all the other issues

3584
02:03:42,159 --> 02:03:43,599
and only have the ones that were in the

3585
02:03:43,599 --> 02:03:45,199
middle of discussion here that we talked

3586
02:03:45,199 --> 02:03:47,599
about proposals for um i'd like to do

3587
02:03:47,599 --> 02:03:49,199
that before it gets too long just so

3588
02:03:49,199 --> 02:03:50,480
that all the implementers are using the

3589
02:03:50,480 --> 02:03:52,079
same copy

3590
02:03:52,079 --> 02:03:52,880
okay

3591
02:03:52,880 --> 02:03:54,880
thanks

3592
02:03:54,880 --> 02:03:57,840
thank you everyone

3593
02:04:12,880 --> 02:04:14,960
you

