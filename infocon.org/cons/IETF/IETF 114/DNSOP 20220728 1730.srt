1
00:01:24,479 --> 00:01:27,479
here

2
00:01:36,640 --> 00:01:40,920
the one that warren is dancing with

3
00:02:05,040 --> 00:02:09,840
all right let's get that thing going

4
00:02:15,040 --> 00:02:18,760
qr code

5
00:02:43,920 --> 00:02:47,119
well here we are

6
00:02:48,800 --> 00:02:50,800
it's nice to see everybody here in in

7
00:02:50,800 --> 00:02:52,480
the room in real life

8
00:02:52,480 --> 00:02:54,959
welcome to philadelphia and for those

9
00:02:54,959 --> 00:02:56,879
remote we're happy to see you too

10
00:02:56,879 --> 00:02:59,280
wherever you may be

11
00:02:59,280 --> 00:03:00,879
um your your

12
00:03:00,879 --> 00:03:04,560
chairs are benno tim and suzanne

13
00:03:04,560 --> 00:03:06,640
the lovely and talented tim is in the

14
00:03:06,640 --> 00:03:08,239
corner here

15
00:03:08,239 --> 00:03:11,840
our a.d is also here warren

16
00:03:12,640 --> 00:03:15,680
the jabber room is alive for this time

17
00:03:15,680 --> 00:03:20,000
we're i guess moving to zulip after this

18
00:03:20,000 --> 00:03:21,920
meeting we have paul hoffman taking

19
00:03:21,920 --> 00:03:24,080
minutes thank you paul

20
00:03:24,080 --> 00:03:26,640
thanks please

21
00:03:27,760 --> 00:03:31,440
the same old same old familiar notewow

22
00:03:31,440 --> 00:03:33,440
please read it

23
00:03:33,440 --> 00:03:35,680
um

24
00:03:35,840 --> 00:03:37,440
understand it think about it carefully

25
00:03:37,440 --> 00:03:38,319
because

26
00:03:38,319 --> 00:03:43,040
we are held to enforcing that next

27
00:03:44,319 --> 00:03:46,080
also a reminder about the code of

28
00:03:46,080 --> 00:03:48,159
conduct which

29
00:03:48,159 --> 00:03:49,920
i think is common sense to everybody

30
00:03:49,920 --> 00:03:51,519
here

31
00:03:51,519 --> 00:03:53,519
but these these principles

32
00:03:53,519 --> 00:03:55,840
were expected to abide by also

33
00:03:55,840 --> 00:03:57,920
thank you for your cooperation it makes

34
00:03:57,920 --> 00:03:59,599
everything easier

35
00:03:59,599 --> 00:04:00,799
when folks

36
00:04:00,799 --> 00:04:04,159
are willing to follow this

37
00:04:04,159 --> 00:04:06,480
next

38
00:04:07,360 --> 00:04:09,439
and some iutf meeting tips particularly

39
00:04:09,439 --> 00:04:11,760
for hybrid

40
00:04:11,760 --> 00:04:13,120
some reminders for the in-person

41
00:04:13,120 --> 00:04:14,720
participants

42
00:04:14,720 --> 00:04:16,399
everybody should be signed in to meet

43
00:04:16,399 --> 00:04:18,320
echo that's our blue sheets it's the

44
00:04:18,320 --> 00:04:21,279
only one we get now

45
00:04:21,358 --> 00:04:23,440
meet echo also manages the

46
00:04:23,440 --> 00:04:25,199
the mic queue allows us to manage the

47
00:04:25,199 --> 00:04:27,440
mic queue

48
00:04:27,440 --> 00:04:29,520
keep audio video off if not using the

49
00:04:29,520 --> 00:04:30,960
on-site version just to keep things

50
00:04:30,960 --> 00:04:32,400
simpler

51
00:04:32,400 --> 00:04:34,080
and please

52
00:04:34,080 --> 00:04:35,440
we've we've been asked to remind

53
00:04:35,440 --> 00:04:36,960
everybody

54
00:04:36,960 --> 00:04:38,720
wear a mask unless you're actively

55
00:04:38,720 --> 00:04:41,199
speaking at the microphone

56
00:04:41,199 --> 00:04:42,560
remote folks

57
00:04:42,560 --> 00:04:45,040
we all know how to do this by now

58
00:04:45,040 --> 00:04:46,639
but make sure you're already on video or

59
00:04:46,639 --> 00:04:48,160
off unless

60
00:04:48,160 --> 00:04:51,280
you're us or presenting

61
00:04:51,280 --> 00:04:52,240
and

62
00:04:52,240 --> 00:04:53,600
for those

63
00:04:53,600 --> 00:04:55,120
listening in whatever space you might

64
00:04:55,120 --> 00:04:56,479
have

65
00:04:56,479 --> 00:04:58,479
a headset makes everything better

66
00:04:58,479 --> 00:05:01,039
next please

67
00:05:04,880 --> 00:05:07,919
so we've got we've been through the uh

68
00:05:07,919 --> 00:05:10,800
introductory commentary we've got a

69
00:05:10,800 --> 00:05:14,639
message from our sponsor rad

70
00:05:14,639 --> 00:05:17,280
who wants to speak briefly

71
00:05:17,280 --> 00:05:20,240
on an initiative he's

72
00:05:20,240 --> 00:05:21,280
setting up

73
00:05:21,280 --> 00:05:23,360
we've got the usual

74
00:05:23,360 --> 00:05:24,560
updates of

75
00:05:24,560 --> 00:05:27,440
work in progress

76
00:05:28,160 --> 00:05:30,000
hackathon results

77
00:05:30,000 --> 00:05:31,919
and working group business discussion of

78
00:05:31,919 --> 00:05:33,360
current drafts

79
00:05:33,360 --> 00:05:37,720
and possible new work

80
00:05:39,600 --> 00:05:41,680
yep so the the agenda this is what's in

81
00:05:41,680 --> 00:05:44,960
the slides is also online

82
00:05:44,960 --> 00:05:47,759
so and and all of the all of the drafts

83
00:05:47,759 --> 00:05:49,039
and all the slides are in the meeting

84
00:05:49,039 --> 00:05:52,840
materials repo

85
00:05:55,759 --> 00:06:00,440
so i think this is warren's turn

86
00:06:10,080 --> 00:06:13,680
i turned it on wow i fixed it

87
00:06:13,680 --> 00:06:15,759
so actually two things

88
00:06:15,759 --> 00:06:19,199
um first off i've been doing this ad

89
00:06:19,199 --> 00:06:21,520
thing for many years now

90
00:06:21,520 --> 00:06:23,919
and i am still enjoying it

91
00:06:23,919 --> 00:06:27,440
but my term is up in march i probably

92
00:06:27,440 --> 00:06:28,800
will run again

93
00:06:28,800 --> 00:06:30,240
but i would like there to be other

94
00:06:30,240 --> 00:06:32,479
volunteers etc other people willing to

95
00:06:32,479 --> 00:06:34,639
serve in the role

96
00:06:34,639 --> 00:06:37,680
so if anybody is interested or considers

97
00:06:37,680 --> 00:06:39,440
being interested or even just wants to

98
00:06:39,440 --> 00:06:40,880
know more about it

99
00:06:40,880 --> 00:06:43,120
please come along and talk to me and i'm

100
00:06:43,120 --> 00:06:44,560
happy to explain what the role is

101
00:06:44,560 --> 00:06:45,840
actually like

102
00:06:45,840 --> 00:06:47,919
what the time investment is you know the

103
00:06:47,919 --> 00:06:50,080
good bits the bad bits etc

104
00:06:50,080 --> 00:06:52,720
so please hunt me down i'm sort of

105
00:06:52,720 --> 00:06:54,400
generally around i've got a big hat so

106
00:06:54,400 --> 00:06:56,400
you can find me

107
00:06:56,400 --> 00:06:57,199
so

108
00:06:57,199 --> 00:06:59,120
the actual topic

109
00:06:59,120 --> 00:07:01,599
dns directorate

110
00:07:01,599 --> 00:07:03,759
this is something which myself and eric

111
00:07:03,759 --> 00:07:06,479
think are organizing

112
00:07:06,479 --> 00:07:07,680
so

113
00:07:07,680 --> 00:07:09,680
apparently this dns thing that we've

114
00:07:09,680 --> 00:07:11,680
built is really popular

115
00:07:11,680 --> 00:07:15,360
and now everybody wants to do it

116
00:07:15,360 --> 00:07:17,440
dns related topics show up in a bunch of

117
00:07:17,440 --> 00:07:20,800
working groups um 25 of them

118
00:07:20,800 --> 00:07:22,960
are actual sort of documents working

119
00:07:22,960 --> 00:07:25,680
group documents 13 and dns up 3 and dns

120
00:07:25,680 --> 00:07:27,520
sd 3 and 80d

121
00:07:27,520 --> 00:07:29,680
you all can read that

122
00:07:29,680 --> 00:07:30,400
the

123
00:07:30,400 --> 00:07:33,280
thing is there are currently 59 existing

124
00:07:33,280 --> 00:07:36,560
drafts that mention dns somewhere in the

125
00:07:36,560 --> 00:07:37,440
um

126
00:07:37,440 --> 00:07:39,199
name or abstract

127
00:07:39,199 --> 00:07:41,199
so obviously there is a lot of dns work

128
00:07:41,199 --> 00:07:42,840
happening

129
00:07:42,840 --> 00:07:45,599
um and also there's a lot of places

130
00:07:45,599 --> 00:07:48,080
where people are doing dns work sort of

131
00:07:48,080 --> 00:07:50,879
in other drafts but they kind of mention

132
00:07:50,879 --> 00:07:53,759
dns and then try and build on it

133
00:07:53,759 --> 00:07:56,000
and that doesn't always end well

134
00:07:56,000 --> 00:07:58,720
uh next slide

135
00:07:58,720 --> 00:08:00,720
so i mean here's a whole list of

136
00:08:00,720 --> 00:08:02,879
non-working group documents

137
00:08:02,879 --> 00:08:05,039
as you can see some of them are aimed at

138
00:08:05,039 --> 00:08:07,759
dns up but a surprisingly large number

139
00:08:07,759 --> 00:08:10,800
are aimed elsewhere

140
00:08:11,360 --> 00:08:13,759
next slide

141
00:08:13,759 --> 00:08:15,520
one of the problems is

142
00:08:15,520 --> 00:08:17,280
many of these documents don't really get

143
00:08:17,280 --> 00:08:20,400
any dns up or dns focused review

144
00:08:20,400 --> 00:08:23,440
until they show up at isg evil

145
00:08:23,440 --> 00:08:26,080
so recently on the telechat there was a

146
00:08:26,080 --> 00:08:28,960
document which tried to make extensive

147
00:08:28,960 --> 00:08:30,639
use of the dns

148
00:08:30,639 --> 00:08:32,958
to do mapping from sort of

149
00:08:32,958 --> 00:08:35,279
some type of physical things to who

150
00:08:35,279 --> 00:08:37,279
owned the physical thing

151
00:08:37,279 --> 00:08:39,519
and it's not clear that the dns is the

152
00:08:39,519 --> 00:08:41,200
best way to do that

153
00:08:41,200 --> 00:08:42,799
but you know there hadn't been any

154
00:08:42,799 --> 00:08:45,120
review until then by

155
00:08:45,120 --> 00:08:46,720
by dns people

156
00:08:46,720 --> 00:08:48,560
and some of that is there's no easy way

157
00:08:48,560 --> 00:08:51,120
for people to get dns review from dns

158
00:08:51,120 --> 00:08:53,440
people

159
00:08:53,680 --> 00:08:55,760
so what we're planning on doing is

160
00:08:55,760 --> 00:08:58,240
creating a dns directorate

161
00:08:58,240 --> 00:09:00,320
um there has been one before there was a

162
00:09:00,320 --> 00:09:02,560
dns directorate many years ago this is

163
00:09:02,560 --> 00:09:05,440
sort of dns directorate v2

164
00:09:05,440 --> 00:09:07,200
and it's going to be like most other

165
00:09:07,200 --> 00:09:09,920
directorates in the ietf like opster and

166
00:09:09,920 --> 00:09:11,600
sector and similar

167
00:09:11,600 --> 00:09:13,680
it's going to be a way where

168
00:09:13,680 --> 00:09:16,160
actually next slide

169
00:09:16,160 --> 00:09:17,360
where documents which are being

170
00:09:17,360 --> 00:09:19,839
progressed through the process

171
00:09:19,839 --> 00:09:23,519
can have a set of dns people look at it

172
00:09:23,519 --> 00:09:24,320
so

173
00:09:24,320 --> 00:09:25,440
this is

174
00:09:25,440 --> 00:09:26,880
you know not actually what the actual

175
00:09:26,880 --> 00:09:28,880
purpose is but this is the upstair

176
00:09:28,880 --> 00:09:30,560
disclaimer with a little bit of text

177
00:09:30,560 --> 00:09:31,760
changed

178
00:09:31,760 --> 00:09:33,200
basically

179
00:09:33,200 --> 00:09:34,720
some things so that drafts that are

180
00:09:34,720 --> 00:09:37,279
progressing can be reviewed by somebody

181
00:09:37,279 --> 00:09:39,040
they get reviewed by a member of the dns

182
00:09:39,040 --> 00:09:40,959
directorate the comments are written for

183
00:09:40,959 --> 00:09:42,640
the ads

184
00:09:42,640 --> 00:09:44,800
document editors and chairs are supposed

185
00:09:44,800 --> 00:09:46,880
to treat them like any other comment but

186
00:09:46,880 --> 00:09:50,240
a way to get some focused review on it

187
00:09:50,240 --> 00:09:52,240
we will be asking for volunteers who are

188
00:09:52,240 --> 00:09:54,160
willing to serve it shouldn't be a

189
00:09:54,160 --> 00:09:56,000
particularly onerous job

190
00:09:56,000 --> 00:09:58,240
not that that many documents

191
00:09:58,240 --> 00:10:00,240
and hopefully it will be fun

192
00:10:00,240 --> 00:10:01,600
so as they say we are going to be

193
00:10:01,600 --> 00:10:04,240
looking for at least two secretaries and

194
00:10:04,240 --> 00:10:06,560
a bunch of volunteers

195
00:10:06,560 --> 00:10:09,200
please send myself or eric think

196
00:10:09,200 --> 00:10:12,880
email you know find us contact us etc if

197
00:10:12,880 --> 00:10:15,200
you might be willing to serve

198
00:10:15,200 --> 00:10:17,200
we might also do something where for

199
00:10:17,200 --> 00:10:19,440
some of the drafts we try and get both

200
00:10:19,440 --> 00:10:22,079
an experienced dns soft person and

201
00:10:22,079 --> 00:10:24,880
somebody sort of newer to to the ietf to

202
00:10:24,880 --> 00:10:26,399
both review

203
00:10:26,399 --> 00:10:28,399
so people can get some experience learn

204
00:10:28,399 --> 00:10:30,640
some more etc

205
00:10:30,640 --> 00:10:32,959
are we taking one or two questions or if

206
00:10:32,959 --> 00:10:34,240
there are one or two really short

207
00:10:34,240 --> 00:10:35,920
questions happy to take them but i think

208
00:10:35,920 --> 00:10:38,320
it's relatively self-explanatory

209
00:10:38,320 --> 00:10:39,279
you know

210
00:10:39,279 --> 00:10:41,680
folks who are willing to review stuff

211
00:10:41,680 --> 00:10:44,680
great

212
00:10:47,600 --> 00:10:49,279
and

213
00:10:49,279 --> 00:10:52,399
we need to we've got some updates and

214
00:10:52,399 --> 00:10:55,040
tim is the guy that wrangles the uh list

215
00:10:55,040 --> 00:10:56,800
of what's and where

216
00:10:56,800 --> 00:10:59,200
so uh thanks i don't have warren's knees

217
00:10:59,200 --> 00:11:00,560
so i'm going to actually probably just

218
00:11:00,560 --> 00:11:02,560
stand up here and do this so unless i

219
00:11:02,560 --> 00:11:05,760
can bar your knees warren

220
00:11:06,000 --> 00:11:06,800
so

221
00:11:06,800 --> 00:11:08,480
and

222
00:11:08,480 --> 00:11:09,839
the reason this sort of came up with the

223
00:11:09,839 --> 00:11:11,600
document up the dns director is because

224
00:11:11,600 --> 00:11:13,519
i usually do that search before the

225
00:11:13,519 --> 00:11:16,720
every iatf looking for some like whoa

226
00:11:16,720 --> 00:11:18,880
that's a crazy document sort of thing

227
00:11:18,880 --> 00:11:21,360
we better sort of think about that so

228
00:11:21,360 --> 00:11:22,399
but

229
00:11:22,399 --> 00:11:23,200
um

230
00:11:23,200 --> 00:11:24,320
i'm

231
00:11:24,320 --> 00:11:26,320
we're kind of good on this idea

232
00:11:26,320 --> 00:11:28,800
hopefully sort of keep tabs on stuff so

233
00:11:28,800 --> 00:11:32,240
let's do some document updates

234
00:11:32,959 --> 00:11:34,640
so

235
00:11:34,640 --> 00:11:37,680
since our last meeting insect 3 well

236
00:11:37,680 --> 00:11:39,680
it's actually north 48

237
00:11:39,680 --> 00:11:43,040
and victor and wes are busy sort of

238
00:11:43,040 --> 00:11:44,480
wrangling the editors and i think

239
00:11:44,480 --> 00:11:46,240
they've come to some

240
00:11:46,240 --> 00:11:47,200
um

241
00:11:47,200 --> 00:11:49,120
consensus on that victor

242
00:11:49,120 --> 00:11:51,600
yep i saw that this morning so we've got

243
00:11:51,600 --> 00:11:54,600
92.76

244
00:11:55,279 --> 00:11:56,720
service b's and they've been in the

245
00:11:56,720 --> 00:11:58,880
editor queue mostly because of the ensi

246
00:11:58,880 --> 00:11:59,920
document

247
00:11:59,920 --> 00:12:02,000
but there has been some changes

248
00:12:02,000 --> 00:12:02,800
and

249
00:12:02,800 --> 00:12:04,240
martin hoffman

250
00:12:04,240 --> 00:12:06,720
um suggested some abnf changes recently

251
00:12:06,720 --> 00:12:08,720
that are in the repo

252
00:12:08,720 --> 00:12:09,760
and i think

253
00:12:09,760 --> 00:12:11,040
we should probably

254
00:12:11,040 --> 00:12:12,480
they want to sort of bring that to the

255
00:12:12,480 --> 00:12:14,880
list just to make sure

256
00:12:14,880 --> 00:12:18,639
nobody has any issues about that but

257
00:12:18,639 --> 00:12:20,320
that that thing has been sitting for a

258
00:12:20,320 --> 00:12:22,160
while and people are still commenting on

259
00:12:22,160 --> 00:12:23,360
it

260
00:12:23,360 --> 00:12:25,040
in the repo just trying to understand

261
00:12:25,040 --> 00:12:26,959
the basic things which is good

262
00:12:26,959 --> 00:12:28,639
and i

263
00:12:28,639 --> 00:12:30,480
i figured let's do that now before it

264
00:12:30,480 --> 00:12:32,320
hits the editors and then it all sort of

265
00:12:32,320 --> 00:12:33,680
goes sideways

266
00:12:33,680 --> 00:12:35,200
so

267
00:12:35,200 --> 00:12:37,600
thanks authors on service be

268
00:12:37,600 --> 00:12:39,519
and as you've noticed there's lots of

269
00:12:39,519 --> 00:12:42,240
service b documents in the ietf now so

270
00:12:42,240 --> 00:12:44,480
it's it's not just becoming an archetype

271
00:12:44,480 --> 00:12:46,800
it's become like an archetype that

272
00:12:46,800 --> 00:12:48,800
everybody wants to use to solve

273
00:12:48,800 --> 00:12:50,839
everybody else's problems so

274
00:12:50,839 --> 00:12:53,680
that's for good better or for worse the

275
00:12:53,680 --> 00:12:56,560
next slide starts

276
00:12:57,279 --> 00:12:58,880
so

277
00:12:58,880 --> 00:13:00,959
i threw this in at the this morning the

278
00:13:00,959 --> 00:13:05,519
5933 biz i'm gonna have to do this um

279
00:13:05,519 --> 00:13:07,360
dimitri submitted a new version this

280
00:13:07,360 --> 00:13:08,320
morning

281
00:13:08,320 --> 00:13:09,120
and

282
00:13:09,120 --> 00:13:10,959
i think we need to review it

283
00:13:10,959 --> 00:13:12,639
there was a comment that came up about

284
00:13:12,639 --> 00:13:14,079
switching it to informational which

285
00:13:14,079 --> 00:13:15,600
actually they've done

286
00:13:15,600 --> 00:13:17,120
so i think

287
00:13:17,120 --> 00:13:19,600
um mr hoffman who had sort of made that

288
00:13:19,600 --> 00:13:20,720
i think that's

289
00:13:20,720 --> 00:13:22,480
that that has been sort of addressed

290
00:13:22,480 --> 00:13:24,000
very well and i believe they've

291
00:13:24,000 --> 00:13:25,920
addressed i'm going to go through it all

292
00:13:25,920 --> 00:13:29,600
of mr st john's comments as well so

293
00:13:29,600 --> 00:13:32,000
we need to review that but it came in

294
00:13:32,000 --> 00:13:33,120
sort of

295
00:13:33,120 --> 00:13:35,519
right off the bat this morning um in

296
00:13:35,519 --> 00:13:37,279
working group last call we have a void

297
00:13:37,279 --> 00:13:40,240
fragmentation we put a three week

298
00:13:40,240 --> 00:13:42,959
call on that because of the meeting in

299
00:13:42,959 --> 00:13:45,760
august and stuff and so we'd like people

300
00:13:45,760 --> 00:13:47,120
to sort of review it and give us some

301
00:13:47,120 --> 00:13:49,680
feedback we think it's in good shape

302
00:13:49,680 --> 00:13:52,240
and we hope everybody else does so

303
00:13:52,240 --> 00:13:53,680
next slide

304
00:13:53,680 --> 00:13:56,000
you're going to be busy for a while so

305
00:13:56,000 --> 00:13:58,079
some upgrading work through class calls

306
00:13:58,079 --> 00:14:00,320
and you'll see this from paul we believe

307
00:14:00,320 --> 00:14:02,720
the dnsec bcp is ready to go

308
00:14:02,720 --> 00:14:04,480
and we'll probably fire that off this

309
00:14:04,480 --> 00:14:07,760
week as well probably with a three week

310
00:14:07,760 --> 00:14:09,760
working group last call

311
00:14:09,760 --> 00:14:12,480
the glue is unoptional again this one's

312
00:14:12,480 --> 00:14:14,160
done and so

313
00:14:14,160 --> 00:14:15,360
the only question i have with the

314
00:14:15,360 --> 00:14:17,680
working group is do we start it now do

315
00:14:17,680 --> 00:14:20,079
we start in september um

316
00:14:20,079 --> 00:14:22,240
the chairs we always kind of sort of

317
00:14:22,240 --> 00:14:24,800
feel august is a you know where the

318
00:14:24,800 --> 00:14:26,880
civilized people take holidays

319
00:14:26,880 --> 00:14:30,079
and so which that's usually europe um

320
00:14:30,079 --> 00:14:32,639
and things get a little slower and we

321
00:14:32,639 --> 00:14:34,320
respect that and

322
00:14:34,320 --> 00:14:36,800
i you know our question is

323
00:14:36,800 --> 00:14:38,399
you know do we fire everything up in

324
00:14:38,399 --> 00:14:40,000
september or so do we let this run

325
00:14:40,000 --> 00:14:40,800
through

326
00:14:40,800 --> 00:14:42,160
through august you know through now as

327
00:14:42,160 --> 00:14:44,399
well so if anybody's got opinions on

328
00:14:44,399 --> 00:14:46,399
that please speak up

329
00:14:46,399 --> 00:14:47,360
um

330
00:14:47,360 --> 00:14:49,600
like to hear it so next slide

331
00:14:49,600 --> 00:14:51,199
but wait there's more

332
00:14:51,199 --> 00:14:54,320
so catalog zones catalog zones is done

333
00:14:54,320 --> 00:14:55,760
but the authors are all actually on

334
00:14:55,760 --> 00:14:58,000
vacation right now so we're gonna start

335
00:14:58,000 --> 00:14:59,920
that working group last call early

336
00:14:59,920 --> 00:15:01,680
september so

337
00:15:01,680 --> 00:15:03,360
get ready to be busy

338
00:15:03,360 --> 00:15:05,600
and also validator requirements um

339
00:15:05,600 --> 00:15:08,639
daniel's gonna speak but we kind of feel

340
00:15:08,639 --> 00:15:10,560
it's been through the process enough

341
00:15:10,560 --> 00:15:12,320
it's ready for that too that's another

342
00:15:12,320 --> 00:15:14,639
one we'll be in september so you guys

343
00:15:14,639 --> 00:15:16,320
are gonna be busy reviewing documents

344
00:15:16,320 --> 00:15:18,000
and we're gonna sort of be

345
00:15:18,000 --> 00:15:19,760
chasing people down

346
00:15:19,760 --> 00:15:21,760
uh next slide

347
00:15:21,760 --> 00:15:23,120
what do we have here

348
00:15:23,120 --> 00:15:27,279
oh so ns3 validation we've been

349
00:15:27,279 --> 00:15:28,399
sort of

350
00:15:28,399 --> 00:15:30,079
being patient with the authors on this

351
00:15:30,079 --> 00:15:32,240
because they've been busy and there are

352
00:15:32,240 --> 00:15:34,720
a few outstanding items and schumann's

353
00:15:34,720 --> 00:15:36,800
assured us he's getting some a distance

354
00:15:36,800 --> 00:15:39,120
assistance to finish these items so we

355
00:15:39,120 --> 00:15:41,120
can sort of move on with it so that's a

356
00:15:41,120 --> 00:15:43,360
great thing um

357
00:15:43,360 --> 00:15:46,079
and we've hoped on that so and then

358
00:15:46,079 --> 00:15:48,959
84.99 biz which is another one that's

359
00:15:48,959 --> 00:15:50,639
kind of been stuck a little bit

360
00:15:50,639 --> 00:15:52,880
what we want to do is have it interim to

361
00:15:52,880 --> 00:15:55,600
finalize that belly wick definition and

362
00:15:55,600 --> 00:15:57,519
the interim is the right way to do that

363
00:15:57,519 --> 00:15:58,800
it really can sort of focus the

364
00:15:58,800 --> 00:16:00,079
conversation

365
00:16:00,079 --> 00:16:02,560
and so we have two choices once before

366
00:16:02,560 --> 00:16:03,839
the i can

367
00:16:03,839 --> 00:16:05,519
the other one's after

368
00:16:05,519 --> 00:16:07,600
and we'll probably send out a doodle

369
00:16:07,600 --> 00:16:09,199
bowl to figure that out

370
00:16:09,199 --> 00:16:11,600
and maybe after it's better

371
00:16:11,600 --> 00:16:14,000
you know we'll let people decide on that

372
00:16:14,000 --> 00:16:16,240
um next slide

373
00:16:16,240 --> 00:16:18,880
what do we have oh air reporting uh the

374
00:16:18,880 --> 00:16:20,880
authors are on holiday as well right now

375
00:16:20,880 --> 00:16:23,360
they got back to us but um

376
00:16:23,360 --> 00:16:24,959
there is some stuff happening and we're

377
00:16:24,959 --> 00:16:26,639
waiting they're gonna get back to us

378
00:16:26,639 --> 00:16:27,680
next week when they're back from

379
00:16:27,680 --> 00:16:30,240
vacation to tell us give us more

380
00:16:30,240 --> 00:16:31,839
feedback on that

381
00:16:31,839 --> 00:16:33,440
um

382
00:16:33,440 --> 00:16:35,120
we don't know about zone version other

383
00:16:35,120 --> 00:16:36,959
than the latest updates so we need to

384
00:16:36,959 --> 00:16:38,959
sort of talk to the authors about that

385
00:16:38,959 --> 00:16:42,000
they've created an edness registry

386
00:16:42,000 --> 00:16:43,759
which

387
00:16:43,759 --> 00:16:45,199
i want to sort of read more about and

388
00:16:45,199 --> 00:16:46,480
sort of understand what they're doing

389
00:16:46,480 --> 00:16:47,600
there

390
00:16:47,600 --> 00:16:49,040
so

391
00:16:49,040 --> 00:16:50,959
the dnsec automation they need to add

392
00:16:50,959 --> 00:16:53,440
another author from the data c folks

393
00:16:53,440 --> 00:16:55,279
and um but johannes implemented the

394
00:16:55,279 --> 00:16:56,959
entire protocol

395
00:16:56,959 --> 00:16:58,800
so that's kind of a bonus here he's like

396
00:16:58,800 --> 00:17:00,720
we always like to see that

397
00:17:00,720 --> 00:17:02,240
um

398
00:17:02,240 --> 00:17:03,759
i know peter's submitted a new version

399
00:17:03,759 --> 00:17:05,599
of dnsec bootstrapping

400
00:17:05,599 --> 00:17:08,400
and it's it's been sort of moving along

401
00:17:08,400 --> 00:17:11,919
so we we think that's in good shape so

402
00:17:11,919 --> 00:17:14,079
we're pretty happy next slide

403
00:17:14,079 --> 00:17:16,480
what else do we have going on oh yes we

404
00:17:16,480 --> 00:17:18,640
adopted two documents yesterday

405
00:17:18,640 --> 00:17:20,640
uh the domain verification techniques

406
00:17:20,640 --> 00:17:22,400
and the caching resolution failures

407
00:17:22,400 --> 00:17:26,240
they've got enough sort of comments but

408
00:17:26,240 --> 00:17:28,799
the service b dain document

409
00:17:28,799 --> 00:17:30,160
which

410
00:17:30,160 --> 00:17:32,799
did very well in that warren poll that

411
00:17:32,799 --> 00:17:34,080
we did

412
00:17:34,080 --> 00:17:36,480
um didn't get a lot of comments so i'm

413
00:17:36,480 --> 00:17:39,120
hoping some people can walk up here and

414
00:17:39,120 --> 00:17:40,960
take the microphone and sort of speak

415
00:17:40,960 --> 00:17:42,720
you know yes you know we should adopt

416
00:17:42,720 --> 00:17:44,720
this sort of thing so hopefully there's

417
00:17:44,720 --> 00:17:47,440
somebody in the room because we we feel

418
00:17:47,440 --> 00:17:48,240
that

419
00:17:48,240 --> 00:17:50,160
there is interest in it

420
00:17:50,160 --> 00:17:51,840
but we're surprised by the lack of sort

421
00:17:51,840 --> 00:17:54,000
of email comments about it

422
00:17:54,000 --> 00:17:55,679
so

423
00:17:55,679 --> 00:17:57,760
yes yes no no

424
00:17:57,760 --> 00:18:00,799
okay or just send email about please

425
00:18:00,799 --> 00:18:02,559
um

426
00:18:02,559 --> 00:18:03,919
because we're kind of confused by that

427
00:18:03,919 --> 00:18:05,360
one because we got a lot of positive

428
00:18:05,360 --> 00:18:07,200
feedback but then we didn't get a lot of

429
00:18:07,200 --> 00:18:09,280
positive a lot of email about in the

430
00:18:09,280 --> 00:18:10,799
call for adoption

431
00:18:10,799 --> 00:18:12,320
so someone can help us sort of

432
00:18:12,320 --> 00:18:14,640
understand that that would be great

433
00:18:14,640 --> 00:18:17,120
um next slide

434
00:18:17,120 --> 00:18:19,200
okay yep our stuff's in the data tracker

435
00:18:19,200 --> 00:18:20,640
we're also in github

436
00:18:20,640 --> 00:18:22,960
in the usual places

437
00:18:22,960 --> 00:18:24,880
we do i keep

438
00:18:24,880 --> 00:18:26,640
we keep data tracker very up to date in

439
00:18:26,640 --> 00:18:28,559
terms of everything including

440
00:18:28,559 --> 00:18:31,280
you know repos for where documents are

441
00:18:31,280 --> 00:18:32,880
and stuff like that so

442
00:18:32,880 --> 00:18:35,280
um we try to be pretty much on top of

443
00:18:35,280 --> 00:18:38,080
that which makes our ad very happy

444
00:18:38,080 --> 00:18:39,919
so yay

445
00:18:39,919 --> 00:18:41,280
and i think that's it on the document

446
00:18:41,280 --> 00:18:43,600
updates anybody's got any things to say

447
00:18:43,600 --> 00:18:45,440
i know there is things to say about the

448
00:18:45,440 --> 00:18:47,360
poll and stuff but

449
00:18:47,360 --> 00:18:49,280
i think we work through all that

450
00:18:49,280 --> 00:18:50,799
but we're willing to sort of take any

451
00:18:50,799 --> 00:18:52,240
and all complaints

452
00:18:52,240 --> 00:18:54,799
so and i'll put my cane down so i won't

453
00:18:54,799 --> 00:18:58,879
beat you when you start complaining so

454
00:18:59,919 --> 00:19:02,240
comments no we're cool so and i think

455
00:19:02,240 --> 00:19:04,559
the next thing then is

456
00:19:04,559 --> 00:19:07,280
hackathon up the hackathon updates yep

457
00:19:07,280 --> 00:19:11,320
so i think this is peter peter

458
00:19:15,760 --> 00:19:17,039
thank you so much

459
00:19:17,039 --> 00:19:20,720
oh neil you can also stand up here

460
00:19:20,960 --> 00:19:24,200
thank you

461
00:19:30,080 --> 00:19:31,440
hey everyone

462
00:19:31,440 --> 00:19:34,000
uh i'm niels from the esec

463
00:19:34,000 --> 00:19:36,400
and the hackathon update from our site

464
00:19:36,400 --> 00:19:37,520
is

465
00:19:37,520 --> 00:19:39,520
we implemented uh oh i can i can

466
00:19:39,520 --> 00:19:42,480
actually look here uh we implemented dns

467
00:19:42,480 --> 00:19:45,760
bootstrapping in uh two fashions

468
00:19:45,760 --> 00:19:48,000
the first one is a period of cron job

469
00:19:48,000 --> 00:19:50,400
implemented using dns python i believe

470
00:19:50,400 --> 00:19:53,120
thank you john o'brien and

471
00:19:53,120 --> 00:19:55,520
it sort of scraps the

472
00:19:55,520 --> 00:19:59,120
cds and cdns key records from a trusted

473
00:19:59,120 --> 00:20:02,000
source and generates the signaling zone

474
00:20:02,000 --> 00:20:02,880
and then

475
00:20:02,880 --> 00:20:04,799
pushes it pushes it out to an

476
00:20:04,799 --> 00:20:07,679
appropriate place so it can be then read

477
00:20:07,679 --> 00:20:09,360
from the

478
00:20:09,360 --> 00:20:11,760
actual signaling domain

479
00:20:11,760 --> 00:20:13,679
and the other part is

480
00:20:13,679 --> 00:20:14,880
work from

481
00:20:14,880 --> 00:20:16,880
peter and jerry and myself we

482
00:20:16,880 --> 00:20:19,600
implemented the signaling zone in

483
00:20:19,600 --> 00:20:23,440
powerdiness using their lua records so

484
00:20:23,440 --> 00:20:26,000
in that implementation everything is

485
00:20:26,000 --> 00:20:28,240
generated synthesized on the fly when

486
00:20:28,240 --> 00:20:30,640
you ask the query it also connects to a

487
00:20:30,640 --> 00:20:33,280
trusted source obtains the records signs

488
00:20:33,280 --> 00:20:35,520
it and delivers it to you

489
00:20:35,520 --> 00:20:37,200
and

490
00:20:37,200 --> 00:20:39,039
both both implementations are actually

491
00:20:39,039 --> 00:20:40,559
deployed and i think the links are on

492
00:20:40,559 --> 00:20:41,600
the

493
00:20:41,600 --> 00:20:43,440
on the slides

494
00:20:43,440 --> 00:20:45,760
thank you

495
00:20:52,000 --> 00:20:53,679
yeah so

496
00:20:53,679 --> 00:20:54,640
there are

497
00:20:54,640 --> 00:20:56,880
immediate questions

498
00:20:56,880 --> 00:20:58,799
you can raise your hand

499
00:20:58,799 --> 00:21:01,600
otherwise i would like to invite thank

500
00:21:01,600 --> 00:21:03,679
you niels nielsen

501
00:21:03,679 --> 00:21:07,360
invite george yogas

502
00:21:15,440 --> 00:21:19,039
hello club hello i'm jorgos uh

503
00:21:19,039 --> 00:21:20,880
from internet labs

504
00:21:20,880 --> 00:21:22,880
for this hackathon we wanted to start

505
00:21:22,880 --> 00:21:25,760
implementing the nsa reporting

506
00:21:25,760 --> 00:21:26,640
uh

507
00:21:26,640 --> 00:21:28,720
tom carpe was in spirit with us because

508
00:21:28,720 --> 00:21:32,400
he did have some preparatory work

509
00:21:32,400 --> 00:21:35,360
we tried that happy path seems to work

510
00:21:35,360 --> 00:21:37,919
testing for that path seems to work

511
00:21:37,919 --> 00:21:40,960
but we still have more work to do like

512
00:21:40,960 --> 00:21:43,120
some new introduced features in version

513
00:21:43,120 --> 00:21:45,360
0.2 we need to make sure that the

514
00:21:45,360 --> 00:21:48,400
resolver doesn't uh

515
00:21:48,400 --> 00:21:50,240
kind of attack the

516
00:21:50,240 --> 00:21:51,870
authoritative name server

517
00:21:51,870 --> 00:21:53,280
[Music]

518
00:21:53,280 --> 00:21:56,880
yeah more implementations come

519
00:21:56,880 --> 00:21:59,840
any questions

520
00:22:01,120 --> 00:22:03,120
no okay

521
00:22:03,120 --> 00:22:06,880
thank you yogurt thank you uh niels

522
00:22:06,880 --> 00:22:09,760
yeah so the dinner chairs i think it's

523
00:22:09,760 --> 00:22:11,840
very important work the itf hackathon

524
00:22:11,840 --> 00:22:13,520
resource is presenting also here because

525
00:22:13,520 --> 00:22:16,000
it makes it helps to make the draws to

526
00:22:16,000 --> 00:22:17,679
make progress

527
00:22:17,679 --> 00:22:19,760
and give implementation feedback so

528
00:22:19,760 --> 00:22:21,440
thanks again to the

529
00:22:21,440 --> 00:22:22,960
to the hackathon

530
00:22:22,960 --> 00:22:26,000
enthusiasts and the software developers

531
00:22:26,000 --> 00:22:27,840
next

532
00:22:27,840 --> 00:22:30,720
we can get started so can i invite the

533
00:22:30,720 --> 00:22:35,240
first speaker paul thank you

534
00:22:52,559 --> 00:22:54,480
hi i am a new deck being shared oh no

535
00:22:54,480 --> 00:22:56,960
i'm sorry um so i'm paul hoffman i am

536
00:22:56,960 --> 00:22:59,200
the author of this document they've

537
00:22:59,200 --> 00:23:01,120
given me 15 minutes to talk i believe

538
00:23:01,120 --> 00:23:02,880
i'll take five unless there's a lot of

539
00:23:02,880 --> 00:23:04,159
questions

540
00:23:04,159 --> 00:23:05,600
this has been on the list just pretty

541
00:23:05,600 --> 00:23:08,799
much since the last meeting

542
00:23:08,799 --> 00:23:10,799
for those who haven't followed it's a

543
00:23:10,799 --> 00:23:13,919
description of dns tech

544
00:23:13,919 --> 00:23:15,679
that's really all it is it says go look

545
00:23:15,679 --> 00:23:17,840
at these rfcs these are required you

546
00:23:17,840 --> 00:23:19,840
know if you're implementing dns sec one

547
00:23:19,840 --> 00:23:21,360
of the things that we really wanted to

548
00:23:21,360 --> 00:23:24,000
do was to have in a single place where

549
00:23:24,000 --> 00:23:27,919
you want to refer to dns sec as an rfc

550
00:23:27,919 --> 00:23:30,640
a place to go next slide

551
00:23:30,640 --> 00:23:32,320
that's fine

552
00:23:32,320 --> 00:23:33,840
um

553
00:23:33,840 --> 00:23:35,919
i put the zero zero up had some good

554
00:23:35,919 --> 00:23:38,400
discussion had some suggestion on rfcs

555
00:23:38,400 --> 00:23:40,400
that i had missed oops

556
00:23:40,400 --> 00:23:43,520
um put up the zero one basically no

557
00:23:43,520 --> 00:23:45,360
discussion since then

558
00:23:45,360 --> 00:23:47,760
um and there are no open issues at this

559
00:23:47,760 --> 00:23:49,360
point that we know of

560
00:23:49,360 --> 00:23:51,600
so it's not like we're in a rush to get

561
00:23:51,600 --> 00:23:53,520
to working group last call but if there

562
00:23:53,520 --> 00:23:55,279
really are no issues there's no reason

563
00:23:55,279 --> 00:23:56,640
not to

564
00:23:56,640 --> 00:23:58,799
um sort of move it through again it's

565
00:23:58,799 --> 00:24:01,200
not defining anything new it is simply

566
00:24:01,200 --> 00:24:04,000
saying if you want to refer to dns sec

567
00:24:04,000 --> 00:24:06,400
this will be a single rfc to do it and

568
00:24:06,400 --> 00:24:08,320
by the way it's a bcp we actually

569
00:24:08,320 --> 00:24:09,760
believe that it is the best current

570
00:24:09,760 --> 00:24:10,799
practice

571
00:24:10,799 --> 00:24:13,120
to use dns sec

572
00:24:13,120 --> 00:24:15,600
there was a little bit of an issue of oh

573
00:24:15,600 --> 00:24:17,200
well i don't want to use dns sect

574
00:24:17,200 --> 00:24:19,919
there's a lot you can always not do bcps

575
00:24:19,919 --> 00:24:23,120
in fact lots of people don't do bcps

576
00:24:23,120 --> 00:24:25,600
but the dns community believes that dns

577
00:24:25,600 --> 00:24:28,400
sec is the best way to

578
00:24:28,400 --> 00:24:31,840
secure dns messages at rest authenticate

579
00:24:31,840 --> 00:24:35,279
them and such like that next slide

580
00:24:37,919 --> 00:24:39,679
oh i thought sorry i thought i had like

581
00:24:39,679 --> 00:24:41,760
a longer thing than that uh just on the

582
00:24:41,760 --> 00:24:43,200
issues i'm thinking my other

583
00:24:43,200 --> 00:24:45,600
presentation which will also go fast

584
00:24:45,600 --> 00:24:47,919
so actually we're at the last bullet is

585
00:24:47,919 --> 00:24:49,360
it ready for working group less calls

586
00:24:49,360 --> 00:24:51,200
the chairs have just said that they're

587
00:24:51,200 --> 00:24:54,559
probably going to do that soon

588
00:24:54,640 --> 00:24:56,880
okay so um

589
00:24:56,880 --> 00:25:00,559
does anyone have any questions or want

590
00:25:00,559 --> 00:25:02,799
to say anything now again it hasn't been

591
00:25:02,799 --> 00:25:04,400
in working group last call so if you

592
00:25:04,400 --> 00:25:06,480
have a i wish this was changed and such

593
00:25:06,480 --> 00:25:08,320
that's perfectly appropriate to do in

594
00:25:08,320 --> 00:25:10,720
working group last call does anyone have

595
00:25:10,720 --> 00:25:12,840
any

596
00:25:12,840 --> 00:25:15,520
issues less than 15 minutes

597
00:25:15,520 --> 00:25:18,720
i'm going to use these stairs

598
00:25:19,760 --> 00:25:21,279
yeah the the um

599
00:25:21,279 --> 00:25:23,520
the bc the dns bcp

600
00:25:23,520 --> 00:25:25,440
seems like a pretty straightforward

601
00:25:25,440 --> 00:25:27,760
thing to do the document is short if you

602
00:25:27,760 --> 00:25:29,039
haven't read it or you haven't read it

603
00:25:29,039 --> 00:25:29,919
lately

604
00:25:29,919 --> 00:25:31,840
there shouldn't be

605
00:25:31,840 --> 00:25:33,200
it

606
00:25:33,200 --> 00:25:34,799
it seems like something that should be

607
00:25:34,799 --> 00:25:35,919
we should be able to move forward

608
00:25:35,919 --> 00:25:38,720
relatively quickly so um please speak up

609
00:25:38,720 --> 00:25:40,799
and on in the working group last call

610
00:25:40,799 --> 00:25:42,320
particularly if you have issues but also

611
00:25:42,320 --> 00:25:44,400
if you want us to move it ahead and to

612
00:25:44,400 --> 00:25:49,080
give us positive support for it thanks

613
00:26:08,799 --> 00:26:10,880
hi everyone so

614
00:26:10,880 --> 00:26:13,360
as the previous presentation i have been

615
00:26:13,360 --> 00:26:15,679
given a 15-minute slot it's going to be

616
00:26:15,679 --> 00:26:17,600
much faster

617
00:26:17,600 --> 00:26:20,480
so this this draft has been around for a

618
00:26:20,480 --> 00:26:22,880
couple of months

619
00:26:22,880 --> 00:26:25,840
it's recommendation for

620
00:26:26,400 --> 00:26:29,360
it's a recommendation for dnsx resolvers

621
00:26:29,360 --> 00:26:30,720
operators

622
00:26:30,720 --> 00:26:33,360
next slide

623
00:26:34,720 --> 00:26:35,600
so

624
00:26:35,600 --> 00:26:37,279
the goal is to

625
00:26:37,279 --> 00:26:38,400
describe

626
00:26:38,400 --> 00:26:40,559
operational recommendations to

627
00:26:40,559 --> 00:26:42,480
implement sufficient trust

628
00:26:42,480 --> 00:26:44,960
in um that makes

629
00:26:44,960 --> 00:26:49,279
dns validation accurate and also to

630
00:26:49,279 --> 00:26:51,200
respond to many of the questions of

631
00:26:51,200 --> 00:26:54,080
people that are willing to

632
00:26:54,080 --> 00:26:56,480
deploy the nsx which includes

633
00:26:56,480 --> 00:26:57,919
isp

634
00:26:57,919 --> 00:26:59,279
but also

635
00:26:59,279 --> 00:27:02,400
other software vendors

636
00:27:02,400 --> 00:27:04,840
the recommendations are described and

637
00:27:04,840 --> 00:27:06,960
include provisioning mechanisms

638
00:27:06,960 --> 00:27:09,440
monitoring management

639
00:27:09,440 --> 00:27:12,559
and the good thing is that

640
00:27:12,559 --> 00:27:15,120
most of the recommendations are actually

641
00:27:15,120 --> 00:27:17,200
being implemented by

642
00:27:17,200 --> 00:27:18,159
some

643
00:27:18,159 --> 00:27:20,720
rfcs so we just have to refer

644
00:27:20,720 --> 00:27:24,000
and exp explain why it is necessary next

645
00:27:24,000 --> 00:27:26,320
slide

646
00:27:26,399 --> 00:27:27,360
so

647
00:27:27,360 --> 00:27:29,520
we have three kind of recommendation

648
00:27:29,520 --> 00:27:31,919
those you need to do before you start

649
00:27:31,919 --> 00:27:37,200
the resolver those who have to do um

650
00:27:37,440 --> 00:27:40,320
when at run time i mean regularly in an

651
00:27:40,320 --> 00:27:42,000
automated way

652
00:27:42,000 --> 00:27:45,760
and um those are needed on demand

653
00:27:45,760 --> 00:27:48,799
we spend a significant effort to say

654
00:27:48,799 --> 00:27:51,520
don't try to mess up with the dns

655
00:27:51,520 --> 00:27:52,880
mechanics

656
00:27:52,880 --> 00:27:53,760
so

657
00:27:53,760 --> 00:27:56,880
um that was one of the key message

658
00:27:56,880 --> 00:27:58,799
and

659
00:27:58,799 --> 00:28:01,840
the the topic we discussed uh are of

660
00:28:01,840 --> 00:28:04,000
course regarding time

661
00:28:04,000 --> 00:28:06,320
how you manage the trust anchors the

662
00:28:06,320 --> 00:28:08,159
negative trust anchors

663
00:28:08,159 --> 00:28:09,760
um

664
00:28:09,760 --> 00:28:12,720
key keys that are not trust anchors the

665
00:28:12,720 --> 00:28:15,679
cryptographic duplications

666
00:28:15,679 --> 00:28:17,679
reporting of

667
00:28:17,679 --> 00:28:19,360
invalid validation

668
00:28:19,360 --> 00:28:22,000
next slide

669
00:28:22,320 --> 00:28:24,480
so we have received a significant amount

670
00:28:24,480 --> 00:28:28,480
of reviews most of them were

671
00:28:28,559 --> 00:28:31,919
needs or clarification i

672
00:28:31,919 --> 00:28:35,430
up to what i know we address them all

673
00:28:35,430 --> 00:28:36,720
[Music]

674
00:28:36,720 --> 00:28:39,120
i mean um this is

675
00:28:39,120 --> 00:28:41,600
all documented into the

676
00:28:41,600 --> 00:28:43,679
github

677
00:28:43,679 --> 00:28:45,919
but we also

678
00:28:45,919 --> 00:28:48,640
review and rewrote the document to

679
00:28:48,640 --> 00:28:50,880
clarify this as a wall

680
00:28:50,880 --> 00:28:52,480
so

681
00:28:52,480 --> 00:28:54,480
we expect the document is

682
00:28:54,480 --> 00:28:57,679
pretty well shaped to be sent to

683
00:28:57,679 --> 00:29:00,080
the next step so if you have any comment

684
00:29:00,080 --> 00:29:02,159
that would be really appreciate that you

685
00:29:02,159 --> 00:29:03,919
provide those

686
00:29:03,919 --> 00:29:06,960
during next month

687
00:29:06,960 --> 00:29:09,440
thank you

688
00:29:10,559 --> 00:29:14,559
thank you daniel so as danielle stated

689
00:29:14,559 --> 00:29:16,559
the working group chairs also think the

690
00:29:16,559 --> 00:29:18,559
document is well we want to make

691
00:29:18,559 --> 00:29:21,600
progress and it's ready for

692
00:29:21,600 --> 00:29:23,440
working group last call but we

693
00:29:23,440 --> 00:29:25,600
definitely want to have people review

694
00:29:25,600 --> 00:29:27,919
this version thank you of course also

695
00:29:27,919 --> 00:29:30,640
for the previous reviews

696
00:29:30,640 --> 00:29:32,880
um

697
00:29:32,880 --> 00:29:35,440
no people in the queue

698
00:29:35,440 --> 00:29:38,640
no okay thank you danielle and we won't

699
00:29:38,640 --> 00:29:40,720
we want to make progress and push the

700
00:29:40,720 --> 00:29:43,679
document forward thanks

701
00:29:43,679 --> 00:29:45,520
today yeah we're good

702
00:29:45,520 --> 00:29:47,679
we're doing good

703
00:29:47,679 --> 00:29:48,170
um

704
00:29:48,170 --> 00:29:51,529
[Music]

705
00:29:51,919 --> 00:29:53,440
next up yeah

706
00:29:53,440 --> 00:29:55,840
thanks

707
00:30:04,240 --> 00:30:07,559
there we go

708
00:30:10,320 --> 00:30:12,720
yeah sorry should i start yeah oh sorry

709
00:30:12,720 --> 00:30:14,240
yeah please start yeah

710
00:30:14,240 --> 00:30:17,120
hey all um i'm siobhan and um schumann

711
00:30:17,120 --> 00:30:18,799
paul and i have been working on this new

712
00:30:18,799 --> 00:30:21,600
draft um called well not new anymore

713
00:30:21,600 --> 00:30:23,679
called domain verification techniques um

714
00:30:23,679 --> 00:30:27,279
it was adopted i think yesterday um so

715
00:30:27,279 --> 00:30:28,480
eager to

716
00:30:28,480 --> 00:30:31,600
hear any feedback next slide

717
00:30:31,600 --> 00:30:34,080
um so just a quick intro

718
00:30:34,080 --> 00:30:35,600
what is domain verification what are we

719
00:30:35,600 --> 00:30:37,600
talking about so many providers on the

720
00:30:37,600 --> 00:30:40,000
internet need folks to prove that they

721
00:30:40,000 --> 00:30:42,080
control a particular domain

722
00:30:42,080 --> 00:30:44,720
before you grant them some sort of

723
00:30:44,720 --> 00:30:47,840
privilege uh on that domain so as an

724
00:30:47,840 --> 00:30:50,880
example let's encrypt has a dns based

725
00:30:50,880 --> 00:30:52,720
challenge for a user to prove that they

726
00:30:52,720 --> 00:30:54,720
control a particular domain it's called

727
00:30:54,720 --> 00:30:56,559
the dns-01

728
00:30:56,559 --> 00:30:57,440
and

729
00:30:57,440 --> 00:30:58,799
if you can prove that if you can add a

730
00:30:58,799 --> 00:31:00,559
particular record

731
00:31:00,559 --> 00:31:02,960
in a particular place then you get the

732
00:31:02,960 --> 00:31:06,559
assert for that next slide

733
00:31:09,039 --> 00:31:10,080
yeah so

734
00:31:10,080 --> 00:31:12,080
what the draft looks like right now is

735
00:31:12,080 --> 00:31:13,760
that it's a survey of the different

736
00:31:13,760 --> 00:31:15,679
techniques that different um

737
00:31:15,679 --> 00:31:16,960
providers use

738
00:31:16,960 --> 00:31:18,399
and then there's a

739
00:31:18,399 --> 00:31:20,000
recommendation section

740
00:31:20,000 --> 00:31:22,720
um but the draft is informational so

741
00:31:22,720 --> 00:31:24,960
it's purely um like a kind of like a

742
00:31:24,960 --> 00:31:27,200
survey of existing techniques so the two

743
00:31:27,200 --> 00:31:29,360
main techniques are that we found were

744
00:31:29,360 --> 00:31:31,200
text and cname

745
00:31:31,200 --> 00:31:33,519
next slide

746
00:31:33,519 --> 00:31:35,519
so the text based method basically says

747
00:31:35,519 --> 00:31:37,840
that please add this dns text record

748
00:31:37,840 --> 00:31:40,720
with a random value unguessable value

749
00:31:40,720 --> 00:31:42,720
at the domain being verified and that

750
00:31:42,720 --> 00:31:45,200
proves because this it's an unguessable

751
00:31:45,200 --> 00:31:46,960
value that proves that you own the

752
00:31:46,960 --> 00:31:49,679
domain and um the the service provider

753
00:31:49,679 --> 00:31:53,279
is able to uh check that um and it's

754
00:31:53,279 --> 00:31:55,840
supposed to expire in a few days or the

755
00:31:55,840 --> 00:31:58,880
guidance around this is pretty vague and

756
00:31:58,880 --> 00:32:01,120
not very well documented often and

757
00:32:01,120 --> 00:32:02,640
that's an issue like people have had

758
00:32:02,640 --> 00:32:04,799
outages because of this so there's

759
00:32:04,799 --> 00:32:06,960
there's wide variation um and part of

760
00:32:06,960 --> 00:32:07,679
the

761
00:32:07,679 --> 00:32:09,360
goal of the draft is to

762
00:32:09,360 --> 00:32:10,960
is to say that this is you know a good

763
00:32:10,960 --> 00:32:11,919
idea and this is something that you

764
00:32:11,919 --> 00:32:13,200
should be doing

765
00:32:13,200 --> 00:32:15,519
next slide

766
00:32:15,519 --> 00:32:17,600
so just a few quick examples in the in

767
00:32:17,600 --> 00:32:19,760
the draft a lot of these

768
00:32:19,760 --> 00:32:21,600
named examples where

769
00:32:21,600 --> 00:32:23,120
the feedback that we got on the list was

770
00:32:23,120 --> 00:32:25,039
that it's not a good idea to have them

771
00:32:25,039 --> 00:32:27,519
in the main docs so we're thinking about

772
00:32:27,519 --> 00:32:29,840
just moving them to the appendix for now

773
00:32:29,840 --> 00:32:31,360
i just completely removed them but i

774
00:32:31,360 --> 00:32:32,559
think it probably makes sense for them

775
00:32:32,559 --> 00:32:34,720
to be in the appendix so this is this is

776
00:32:34,720 --> 00:32:35,760
an example

777
00:32:35,760 --> 00:32:38,080
where um on a particular website like

778
00:32:38,080 --> 00:32:41,840
bbc.com you might have a key value pair

779
00:32:41,840 --> 00:32:43,919
for and the key says okay what is the

780
00:32:43,919 --> 00:32:45,519
company that is trying to do the domain

781
00:32:45,519 --> 00:32:48,320
verification and the value is the um

782
00:32:48,320 --> 00:32:50,399
there's a unguessable value

783
00:32:50,399 --> 00:32:52,960
next slide

784
00:32:52,960 --> 00:32:54,559
but you can also have

785
00:32:54,559 --> 00:32:57,760
something that acme does and github does

786
00:32:57,760 --> 00:33:00,399
you have like an underscore prefix um

787
00:33:00,399 --> 00:33:02,960
underscore acmechallenge.example.com

788
00:33:02,960 --> 00:33:05,360
if you're trying to verify example.com

789
00:33:05,360 --> 00:33:07,440
and then the random value

790
00:33:07,440 --> 00:33:10,640
and you can imagine that um like this is

791
00:33:10,640 --> 00:33:11,679
this is

792
00:33:11,679 --> 00:33:13,519
i guess the spoiler here is that this is

793
00:33:13,519 --> 00:33:15,519
a better technique in our opinion

794
00:33:15,519 --> 00:33:18,240
but next slide

795
00:33:19,679 --> 00:33:21,360
and you can also just have

796
00:33:21,360 --> 00:33:22,720
absolutely nothing

797
00:33:22,720 --> 00:33:25,120
and then you just have a random value

798
00:33:25,120 --> 00:33:28,240
as a text record on the on the apex

799
00:33:28,240 --> 00:33:30,720
next slide

800
00:33:30,880 --> 00:33:32,559
there's also the cname based option

801
00:33:32,559 --> 00:33:35,200
which is often touted as this as a

802
00:33:35,200 --> 00:33:36,559
fallback option

803
00:33:36,559 --> 00:33:37,760
so

804
00:33:37,760 --> 00:33:40,000
different reasoning for why you might

805
00:33:40,000 --> 00:33:42,240
need this but you know if the if the if

806
00:33:42,240 --> 00:33:43,919
you already have a cname then you can't

807
00:33:43,919 --> 00:33:46,880
really have another text record um so

808
00:33:46,880 --> 00:33:48,880
so that's why you might want this um and

809
00:33:48,880 --> 00:33:50,080
this typically

810
00:33:50,080 --> 00:33:52,799
points to a service provider property so

811
00:33:52,799 --> 00:33:54,559
then you can then the

812
00:33:54,559 --> 00:33:56,159
the provider can verify that okay

813
00:33:56,159 --> 00:33:58,240
actually this this exists

814
00:33:58,240 --> 00:34:00,720
next slide

815
00:34:00,880 --> 00:34:02,640
so this is another example where you

816
00:34:02,640 --> 00:34:04,159
have a random value

817
00:34:04,159 --> 00:34:06,159
dot the domain you're trying to verify

818
00:34:06,159 --> 00:34:08,480
and then that is a c name to

819
00:34:08,480 --> 00:34:09,359
um

820
00:34:09,359 --> 00:34:10,560
something

821
00:34:10,560 --> 00:34:13,440
dot um the person the the company or the

822
00:34:13,440 --> 00:34:16,480
provider that is will check for

823
00:34:16,480 --> 00:34:17,599
the value

824
00:34:17,599 --> 00:34:18,560
um

825
00:34:18,560 --> 00:34:20,800
next slide

826
00:34:20,800 --> 00:34:24,399
yeah so um i guess as i mentioned um

827
00:34:24,399 --> 00:34:26,800
it seems like it's best practice to

828
00:34:26,800 --> 00:34:28,719
target the

829
00:34:28,719 --> 00:34:31,199
the these records that you're adding to

830
00:34:31,199 --> 00:34:33,918
target them to a service so that

831
00:34:33,918 --> 00:34:35,839
and the second one is that this is also

832
00:34:35,839 --> 00:34:36,879
good of their time bound and the

833
00:34:36,879 --> 00:34:38,639
guidance around that is pretty clear

834
00:34:38,639 --> 00:34:41,200
next slide

835
00:34:41,599 --> 00:34:43,199
so yeah so this is similar to what acme

836
00:34:43,199 --> 00:34:45,199
and github do

837
00:34:45,199 --> 00:34:47,119
it allows a service provider to only get

838
00:34:47,119 --> 00:34:48,960
the records that they need

839
00:34:48,960 --> 00:34:51,839
because in some cases for example

840
00:34:51,839 --> 00:34:54,480
when i was doing bbc.com from my

841
00:34:54,480 --> 00:34:56,159
home computer

842
00:34:56,159 --> 00:34:58,640
it fell back to tcp

843
00:34:58,640 --> 00:35:00,720
and because of the sheer number of text

844
00:35:00,720 --> 00:35:04,800
records and my isp at the time was

845
00:35:04,800 --> 00:35:06,240
just like

846
00:35:06,240 --> 00:35:07,200
dropped the connection because they

847
00:35:07,200 --> 00:35:08,800
didn't support that

848
00:35:08,800 --> 00:35:11,040
so this is the problem is bloating and

849
00:35:11,040 --> 00:35:14,079
it's best if you can just query for

850
00:35:14,079 --> 00:35:14,800
the

851
00:35:14,800 --> 00:35:17,280
the actual the actual service um that

852
00:35:17,280 --> 00:35:18,640
you're trying to get to

853
00:35:18,640 --> 00:35:20,880
next slide

854
00:35:20,880 --> 00:35:22,800
uh and yeah and time-bound checking like

855
00:35:22,800 --> 00:35:24,560
um i have definitely been in a situation

856
00:35:24,560 --> 00:35:28,480
where um someone removed um a very like

857
00:35:28,480 --> 00:35:31,200
one of these tokens and then the service

858
00:35:31,200 --> 00:35:32,480
provider is like oh i guess you'd no

859
00:35:32,480 --> 00:35:35,040
longer own this and shut off the access

860
00:35:35,040 --> 00:35:37,359
and that's also not great

861
00:35:37,359 --> 00:35:39,040
so there should be

862
00:35:39,040 --> 00:35:40,560
clear guidance around

863
00:35:40,560 --> 00:35:43,119
when can the record be removed and

864
00:35:43,119 --> 00:35:45,440
arguably maybe you don't even need to

865
00:35:45,440 --> 00:35:46,960
um for those records to exist in

866
00:35:46,960 --> 00:35:49,280
perpetuity um but yeah in any case there

867
00:35:49,280 --> 00:35:51,200
should be some clear guidance

868
00:35:51,200 --> 00:35:52,560
um around that

869
00:35:52,560 --> 00:35:54,800
next slide

870
00:35:54,800 --> 00:35:56,800
uh yeah and we got a bunch of feedback

871
00:35:56,800 --> 00:35:57,839
on the list

872
00:35:57,839 --> 00:36:00,640
i think i've addressed most of that but

873
00:36:00,640 --> 00:36:02,640
i removed mention of specific companies

874
00:36:02,640 --> 00:36:04,640
removed use of normative language

875
00:36:04,640 --> 00:36:06,960
it's a purely informational draft

876
00:36:06,960 --> 00:36:08,720
and also put a summary of the

877
00:36:08,720 --> 00:36:10,720
recommendations in the intro

878
00:36:10,720 --> 00:36:12,480
and it was adopted by the working group

879
00:36:12,480 --> 00:36:14,720
um next slide

880
00:36:14,720 --> 00:36:16,560
uh but yeah so there's one thing i need

881
00:36:16,560 --> 00:36:18,720
to do is and there's a github issue for

882
00:36:18,720 --> 00:36:20,880
this um i need to move the examples to

883
00:36:20,880 --> 00:36:24,480
appendix and um also i guess admin move

884
00:36:24,480 --> 00:36:27,680
to the working group github um that i

885
00:36:27,680 --> 00:36:29,359
think that's

886
00:36:29,359 --> 00:36:31,599
it yeah um happy to take any feedback

887
00:36:31,599 --> 00:36:32,560
and

888
00:36:32,560 --> 00:36:33,599
um

889
00:36:33,599 --> 00:36:35,520
or if folks think i think it should go

890
00:36:35,520 --> 00:36:37,119
in a certain direction

891
00:36:37,119 --> 00:36:39,839
uh i think we've kind of

892
00:36:39,839 --> 00:36:42,320
like solidified on the the structure but

893
00:36:42,320 --> 00:36:45,760
uh happy to take any comments

894
00:36:51,680 --> 00:36:53,040
john o'brien university of pennsylvania

895
00:36:53,040 --> 00:36:54,720
thanks for doing this work

896
00:36:54,720 --> 00:36:57,280
very very helpful

897
00:36:57,280 --> 00:36:59,680
and i'm also particularly glad to uh see

898
00:36:59,680 --> 00:37:01,119
commentary about

899
00:37:01,119 --> 00:37:03,520
uh the time limited uh having things

900
00:37:03,520 --> 00:37:05,680
that are time limited um the other uh

901
00:37:05,680 --> 00:37:07,520
experience i've had which you may wish

902
00:37:07,520 --> 00:37:08,480
to

903
00:37:08,480 --> 00:37:09,680
add to the document you can tell me if

904
00:37:09,680 --> 00:37:10,800
you'd like me to put this on the mailing

905
00:37:10,800 --> 00:37:12,560
list or a github issue

906
00:37:12,560 --> 00:37:14,400
is i've come across some service

907
00:37:14,400 --> 00:37:16,400
providers who

908
00:37:16,400 --> 00:37:18,320
require either that the

909
00:37:18,320 --> 00:37:19,760
domain that's being validated is

910
00:37:19,760 --> 00:37:21,440
strictly a second level domain for

911
00:37:21,440 --> 00:37:24,440
exampleunder.com.edu

912
00:37:24,960 --> 00:37:27,520
or in some cases uh that it's at a zone

913
00:37:27,520 --> 00:37:28,320
cut

914
00:37:28,320 --> 00:37:29,359
and

915
00:37:29,359 --> 00:37:31,119
that causes some problems especially in

916
00:37:31,119 --> 00:37:33,760
organizations such as mine right i think

917
00:37:33,760 --> 00:37:35,599
we have an existing issue but yeah if

918
00:37:35,599 --> 00:37:39,440
not then that sounds really helpful yeah

919
00:37:39,440 --> 00:37:40,320
okay

920
00:37:40,320 --> 00:37:42,480
joe

921
00:37:47,280 --> 00:37:48,720
yeah john levine

922
00:37:48,720 --> 00:37:51,760
i mean i i like this i like this draft

923
00:37:51,760 --> 00:37:53,440
but honestly i think if it's worth doing

924
00:37:53,440 --> 00:37:55,839
it all it's worth doing as a bcp

925
00:37:55,839 --> 00:37:57,280
because i think we can all agree that

926
00:37:57,280 --> 00:37:58,880
there are some there are some ways to do

927
00:37:58,880 --> 00:38:00,320
this that are much much worse than

928
00:38:00,320 --> 00:38:02,880
others i mean like not using it

929
00:38:02,880 --> 00:38:04,160
put putting the stuff with the name

930
00:38:04,160 --> 00:38:06,560
instead but it's instead of a subdomain

931
00:38:06,560 --> 00:38:08,400
not putting some sort of tag in the in

932
00:38:08,400 --> 00:38:10,400
the in the text strings so that you're

933
00:38:10,400 --> 00:38:13,440
not spoofed out by by wild cards and my

934
00:38:13,440 --> 00:38:14,960
guess is that

935
00:38:14,960 --> 00:38:16,400
is that there is not much disagreement

936
00:38:16,400 --> 00:38:17,920
about what's good and what's bad and

937
00:38:17,920 --> 00:38:19,440
that seems to me it's a natural thing

938
00:38:19,440 --> 00:38:21,359
for bcp you know i would like to have a

939
00:38:21,359 --> 00:38:23,200
bcp i can point out that says please

940
00:38:23,200 --> 00:38:24,960
don't do it that way here's here's

941
00:38:24,960 --> 00:38:26,400
concrete advice on how to do it and not

942
00:38:26,400 --> 00:38:29,200
screw other people up

943
00:38:29,280 --> 00:38:30,320
yeah um

944
00:38:30,320 --> 00:38:33,040
yeah that's an it's something we have

945
00:38:33,040 --> 00:38:34,800
thought about um

946
00:38:34,800 --> 00:38:36,240
you can imagine that you could be more

947
00:38:36,240 --> 00:38:38,000
drastic and say that there should be a

948
00:38:38,000 --> 00:38:40,079
new r type for something like this but

949
00:38:40,079 --> 00:38:42,800
uh we didn't want to do that

950
00:38:42,800 --> 00:38:44,640
um but anyway

951
00:38:44,640 --> 00:38:47,200
i think we had the rr type argue fight a

952
00:38:47,200 --> 00:38:48,880
decade ago and i hope we cannot have it

953
00:38:48,880 --> 00:38:50,320
again

954
00:38:50,320 --> 00:38:52,160
yeah i think um so the intention for

955
00:38:52,160 --> 00:38:54,079
this draft was to be a survey but if

956
00:38:54,079 --> 00:38:56,160
folks think that it's it's better if

957
00:38:56,160 --> 00:38:58,240
it's a bcp then very happy to hear

958
00:38:58,240 --> 00:39:01,839
comments on that actually

959
00:39:01,920 --> 00:39:03,440
thank you

960
00:39:03,440 --> 00:39:06,000
we have a remote participant brett

961
00:39:06,000 --> 00:39:09,400
please go ahead

962
00:39:14,240 --> 00:39:16,079
um yeah i've got exactly the same

963
00:39:16,079 --> 00:39:18,640
comments as john really basically um i

964
00:39:18,640 --> 00:39:20,880
think this is great work it's good to

965
00:39:20,880 --> 00:39:23,200
see a survey being done uh but i'd like

966
00:39:23,200 --> 00:39:25,040
to see you know when the survey is done

967
00:39:25,040 --> 00:39:28,240
that i i really support the next step of

968
00:39:28,240 --> 00:39:30,240
moving this into some kind of bcp to be

969
00:39:30,240 --> 00:39:31,200
able to

970
00:39:31,200 --> 00:39:33,680
point people at um the right way to do

971
00:39:33,680 --> 00:39:36,320
it and uh in particular to get rid of

972
00:39:36,320 --> 00:39:39,040
the bullets and get rid of the

973
00:39:39,040 --> 00:39:42,320
records that sit there forever um i i

974
00:39:42,320 --> 00:39:43,520
think um

975
00:39:43,520 --> 00:39:45,680
i i think there are too many different

976
00:39:45,680 --> 00:39:47,119
ways to do this currently and we should

977
00:39:47,119 --> 00:39:48,880
be trying to encourage people to cut

978
00:39:48,880 --> 00:39:51,280
them down

979
00:39:51,280 --> 00:39:53,599
thanks

980
00:39:55,280 --> 00:39:58,079
thank you and uh sorry anthony

981
00:39:58,079 --> 00:40:00,880
thanks anthony liquid um yeah good

982
00:40:00,880 --> 00:40:03,200
document um not to sound like a broken

983
00:40:03,200 --> 00:40:05,440
record definitely bcp

984
00:40:05,440 --> 00:40:08,160
um just a comment on the tcp thing i

985
00:40:08,160 --> 00:40:10,000
think definitely draw more attention to

986
00:40:10,000 --> 00:40:12,160
that because

987
00:40:12,160 --> 00:40:14,720
as you pointed out with the whole retry

988
00:40:14,720 --> 00:40:16,560
there's some quite critical records that

989
00:40:16,560 --> 00:40:18,960
sit in the apex like your

990
00:40:18,960 --> 00:40:21,440
your spf records and causing issues with

991
00:40:21,440 --> 00:40:23,440
email is not something that we want

992
00:40:23,440 --> 00:40:26,079
either so it would be really good if we

993
00:40:26,079 --> 00:40:29,760
just draw attention to that as well

994
00:40:33,119 --> 00:40:36,160
ben schwartz uh i i like this draft i i

995
00:40:36,160 --> 00:40:37,839
think it should probably have one

996
00:40:37,839 --> 00:40:40,640
sentence about d name

997
00:40:40,640 --> 00:40:42,560
how about what sorry i think this draft

998
00:40:42,560 --> 00:40:45,280
should probably have one sentence about

999
00:40:45,280 --> 00:40:46,640
d name

1000
00:40:46,640 --> 00:40:49,040
i don't really care what it says but it

1001
00:40:49,040 --> 00:40:52,920
should say something

1002
00:40:57,760 --> 00:40:58,800
thank you

1003
00:40:58,800 --> 00:41:00,720
no other comments

1004
00:41:00,720 --> 00:41:02,240
thank you for your feedback thank you

1005
00:41:02,240 --> 00:41:03,920
shiva yeah

1006
00:41:03,920 --> 00:41:05,440
if we have some time i guess i'd be

1007
00:41:05,440 --> 00:41:07,040
curious if folks think that we should

1008
00:41:07,040 --> 00:41:08,960
just make this obesity or whatever it

1009
00:41:08,960 --> 00:41:10,160
shares yeah

1010
00:41:10,160 --> 00:41:11,599
yeah i think that's a good discussion

1011
00:41:11,599 --> 00:41:16,000
and i see uh tim also annoying yeah yeah

1012
00:41:16,000 --> 00:41:18,720
i guess does anyone object to so maybe

1013
00:41:18,720 --> 00:41:22,078
yeah good question to the room

1014
00:41:22,240 --> 00:41:25,119
are there any objections

1015
00:41:25,119 --> 00:41:28,079
for bcp

1016
00:41:29,200 --> 00:41:31,520
no okay thank you

1017
00:41:31,520 --> 00:41:33,680
yeah we will talk with each other with

1018
00:41:33,680 --> 00:41:34,650
the chairs and

1019
00:41:34,650 --> 00:41:36,319
[Music]

1020
00:41:36,319 --> 00:41:38,079
adjust the status

1021
00:41:38,079 --> 00:41:41,440
tim you want to say something

1022
00:41:46,319 --> 00:41:48,640
thank you so next up is

1023
00:41:48,640 --> 00:41:50,400
yogos

1024
00:41:50,400 --> 00:41:53,200
thessalonikis

1025
00:41:54,000 --> 00:41:56,400
all right

1026
00:42:01,200 --> 00:42:04,640
uh no sorry

1027
00:42:06,240 --> 00:42:08,160
not this one

1028
00:42:08,160 --> 00:42:10,480
this one

1029
00:42:14,000 --> 00:42:16,160
hello again i'm jorgos and together with

1030
00:42:16,160 --> 00:42:18,560
film and rogue we have

1031
00:42:18,560 --> 00:42:21,680
an idea that we call dryer and a sec

1032
00:42:21,680 --> 00:42:24,319
next slide

1033
00:42:24,319 --> 00:42:26,560
sorry

1034
00:42:28,000 --> 00:42:30,240
so how it all started we got extended

1035
00:42:30,240 --> 00:42:33,119
dns errors so the clients can

1036
00:42:33,119 --> 00:42:34,560
understand what's happening with the

1037
00:42:34,560 --> 00:42:37,520
resolution fails that was nice

1038
00:42:37,520 --> 00:42:40,000
uh we're getting in the future

1039
00:42:40,000 --> 00:42:42,160
sorry previously yeah we're getting in

1040
00:42:42,160 --> 00:42:44,640
the future dnsr reporting that is very

1041
00:42:44,640 --> 00:42:47,760
nice so zone operators know

1042
00:42:47,760 --> 00:42:49,280
what the resulting errors for their

1043
00:42:49,280 --> 00:42:51,119
clients are

1044
00:42:51,119 --> 00:42:54,319
and next slide

1045
00:42:54,880 --> 00:42:56,240
and then there was a random lunch

1046
00:42:56,240 --> 00:42:58,640
discussion that's all fine but

1047
00:42:58,640 --> 00:43:01,440
if i want to adopt a dnsec that doesn't

1048
00:43:01,440 --> 00:43:04,800
help me the report is way too late

1049
00:43:04,800 --> 00:43:06,160
and

1050
00:43:06,160 --> 00:43:09,359
then we thought dmarc what dmarc does is

1051
00:43:09,359 --> 00:43:10,880
before you actually push the buttons and

1052
00:43:10,880 --> 00:43:12,319
you apply policy you can just get

1053
00:43:12,319 --> 00:43:13,680
reports and see what's happening and

1054
00:43:13,680 --> 00:43:14,640
then

1055
00:43:14,640 --> 00:43:16,560
when you feel comfortable you say okay

1056
00:43:16,560 --> 00:43:18,400
let's go for it

1057
00:43:18,400 --> 00:43:20,960
next slide

1058
00:43:21,200 --> 00:43:22,960
so what we're trying to do with dry rent

1059
00:43:22,960 --> 00:43:25,680
in a sec is go from this is fine

1060
00:43:25,680 --> 00:43:28,879
to next slide

1061
00:43:29,520 --> 00:43:31,520
this is fine

1062
00:43:31,520 --> 00:43:33,839
actually without fires and smoke

1063
00:43:33,839 --> 00:43:36,240
next slide

1064
00:43:36,240 --> 00:43:38,000
so how it works

1065
00:43:38,000 --> 00:43:40,240
you sign the zone and you published in

1066
00:43:40,240 --> 00:43:42,480
dns so everything is public

1067
00:43:42,480 --> 00:43:44,720
but instead of an actual ds record you

1068
00:43:44,720 --> 00:43:46,640
just put a driver and ds record in the

1069
00:43:46,640 --> 00:43:47,760
parent

1070
00:43:47,760 --> 00:43:49,599
then that gives a signal to the resolver

1071
00:43:49,599 --> 00:43:51,040
let's say

1072
00:43:51,040 --> 00:43:53,760
do validation but this zone is dry

1073
00:43:53,760 --> 00:43:56,400
unsigned so if something fails

1074
00:43:56,400 --> 00:43:58,079
generate a report back to the zone

1075
00:43:58,079 --> 00:44:02,079
operator and fold back to a known dry

1076
00:44:02,079 --> 00:44:04,560
run ds record

1077
00:44:04,560 --> 00:44:07,440
and by the way validation succeeds yeah

1078
00:44:07,440 --> 00:44:09,280
you can go ahead and give that 80 bit

1079
00:44:09,280 --> 00:44:10,640
back and

1080
00:44:10,640 --> 00:44:12,240
you may have opportunistic security

1081
00:44:12,240 --> 00:44:13,280
already but

1082
00:44:13,280 --> 00:44:14,880
with some caveats that i will address

1083
00:44:14,880 --> 00:44:18,240
later on next slide

1084
00:44:18,800 --> 00:44:20,720
so a couple of use cases first and

1085
00:44:20,720 --> 00:44:24,000
foremost you we can have dnsec adoption

1086
00:44:24,000 --> 00:44:28,000
you can test your zone in the wild

1087
00:44:28,000 --> 00:44:30,480
and you can expect some reports back if

1088
00:44:30,480 --> 00:44:32,720
everything seems to work fine then

1089
00:44:32,720 --> 00:44:34,319
you can go ahead and

1090
00:44:34,319 --> 00:44:36,240
push the button so there's a turnkey

1091
00:44:36,240 --> 00:44:37,760
action to deploy

1092
00:44:37,760 --> 00:44:39,280
everything is signed and ready there in

1093
00:44:39,280 --> 00:44:40,880
your zone and then you just need to

1094
00:44:40,880 --> 00:44:43,280
replace the dryron ds record with just a

1095
00:44:43,280 --> 00:44:44,079
new

1096
00:44:44,079 --> 00:44:46,880
ds record no need to do any more changes

1097
00:44:46,880 --> 00:44:47,599
so

1098
00:44:47,599 --> 00:44:49,440
what seemed to work previously with

1099
00:44:49,440 --> 00:44:52,160
dryer and dns should also work with the

1100
00:44:52,160 --> 00:44:55,839
ds chains next slide

1101
00:44:56,079 --> 00:44:58,480
you can experiment with dns if your zone

1102
00:44:58,480 --> 00:45:00,079
is already signed

1103
00:45:00,079 --> 00:45:01,839
you can do weird stuff with dnsec and

1104
00:45:01,839 --> 00:45:04,319
then provide the drier nds record and

1105
00:45:04,319 --> 00:45:06,640
the resolvers could tell you what's

1106
00:45:06,640 --> 00:45:08,560
happening on their end

1107
00:45:08,560 --> 00:45:11,200
next slide

1108
00:45:11,599 --> 00:45:14,720
and yeah you can test kira lovers

1109
00:45:14,720 --> 00:45:17,040
this can work by

1110
00:45:17,040 --> 00:45:18,880
using your real ds

1111
00:45:18,880 --> 00:45:20,880
as a driver on the s

1112
00:45:20,880 --> 00:45:22,000
and then

1113
00:45:22,000 --> 00:45:23,680
sign with a nikkei

1114
00:45:23,680 --> 00:45:26,079
introduce it as an another dryer on the

1115
00:45:26,079 --> 00:45:27,040
s

1116
00:45:27,040 --> 00:45:29,200
you do your gear lover stuff if the

1117
00:45:29,200 --> 00:45:31,200
resolver finds an error it will report

1118
00:45:31,200 --> 00:45:33,280
to you hopefully

1119
00:45:33,280 --> 00:45:34,720
and then if everything works then you

1120
00:45:34,720 --> 00:45:36,319
can do the same thing

1121
00:45:36,319 --> 00:45:38,160
but instead of the driver and ds things

1122
00:45:38,160 --> 00:45:40,400
you do the actual

1123
00:45:40,400 --> 00:45:44,319
ds records next slide

1124
00:45:45,440 --> 00:45:48,240
you can also break it uh

1125
00:45:48,240 --> 00:45:50,720
you can use a dns option so that the

1126
00:45:50,720 --> 00:45:52,720
clients can signal the resolver

1127
00:45:52,720 --> 00:45:55,599
and say you know what i know that you

1128
00:45:55,599 --> 00:45:57,680
understand dryer and dnsec

1129
00:45:57,680 --> 00:46:00,000
if there's an error you will try to fall

1130
00:46:00,000 --> 00:46:01,599
back but

1131
00:46:01,599 --> 00:46:03,680
you know i opted in just so please just

1132
00:46:03,680 --> 00:46:06,079
give me the error back i want to be part

1133
00:46:06,079 --> 00:46:08,480
of the test so this can enable a couple

1134
00:46:08,480 --> 00:46:10,319
of scenarios

1135
00:46:10,319 --> 00:46:12,720
you can get easier and faster debugging

1136
00:46:12,720 --> 00:46:14,400
from the client side

1137
00:46:14,400 --> 00:46:15,920
instead of waiting for the for the

1138
00:46:15,920 --> 00:46:17,839
reports from the upstreams

1139
00:46:17,839 --> 00:46:19,839
and you can also use that in your

1140
00:46:19,839 --> 00:46:21,760
application so

1141
00:46:21,760 --> 00:46:23,920
yeah if i want to sign my zone i want to

1142
00:46:23,920 --> 00:46:26,319
see how the application will behave if

1143
00:46:26,319 --> 00:46:28,720
we get a dns error

1144
00:46:28,720 --> 00:46:30,160
so

1145
00:46:30,160 --> 00:46:34,240
this will turn like next slide

1146
00:46:36,640 --> 00:46:38,720
this is fine

1147
00:46:38,720 --> 00:46:40,480
by the way

1148
00:46:40,480 --> 00:46:42,079
all these memes were already there for

1149
00:46:42,079 --> 00:46:43,839
me to find so

1150
00:46:43,839 --> 00:46:45,359
people are weird

1151
00:46:45,359 --> 00:46:48,240
next slide please

1152
00:46:48,560 --> 00:46:50,480
uh so that details we got some feedback

1153
00:46:50,480 --> 00:46:52,319
on the previous itf

1154
00:46:52,319 --> 00:46:54,880
uh mainly because what we propose as a

1155
00:46:54,880 --> 00:46:57,599
dry run ds record is

1156
00:46:57,599 --> 00:46:59,920
what most people including us

1157
00:46:59,920 --> 00:47:02,880
at first perceived as a ds hug

1158
00:47:02,880 --> 00:47:05,200
and there were a couple of suggestions

1159
00:47:05,200 --> 00:47:07,599
instead of doing a ds hype we can use

1160
00:47:07,599 --> 00:47:10,640
the flags in the dns key so they are now

1161
00:47:10,640 --> 00:47:12,960
ignored so you can use that space there

1162
00:47:12,960 --> 00:47:15,280
and although that seems nice

1163
00:47:15,280 --> 00:47:17,440
when you actually need to go from

1164
00:47:17,440 --> 00:47:19,760
testing to actually signed

1165
00:47:19,760 --> 00:47:21,520
you would need to change the dns error

1166
00:47:21,520 --> 00:47:22,720
set and

1167
00:47:22,720 --> 00:47:26,000
we believe that this is no good so the

1168
00:47:26,000 --> 00:47:28,240
if you want to go from testing to actual

1169
00:47:28,240 --> 00:47:29,440
deployment

1170
00:47:29,440 --> 00:47:30,960
it should be as simple as possible you

1171
00:47:30,960 --> 00:47:33,599
don't need to change the data

1172
00:47:33,599 --> 00:47:35,440
another feedback was there are a lot of

1173
00:47:35,440 --> 00:47:39,280
ds hugs so maybe we can use a ds hack to

1174
00:47:39,280 --> 00:47:40,720
rule them all

1175
00:47:40,720 --> 00:47:42,000
and

1176
00:47:42,000 --> 00:47:43,920
we thought about it but

1177
00:47:43,920 --> 00:47:45,599
we now see that the dryer on the s is

1178
00:47:45,599 --> 00:47:47,920
more than a ds hype if it's going to be

1179
00:47:47,920 --> 00:47:50,559
adopted we see it as a integral part of

1180
00:47:50,559 --> 00:47:52,800
dns because it will give you the ability

1181
00:47:52,800 --> 00:47:55,599
to actually test dns

1182
00:47:55,599 --> 00:47:58,880
more feedback about these hacks

1183
00:47:58,880 --> 00:47:59,599
so

1184
00:47:59,599 --> 00:48:01,920
why don't we normalize all the different

1185
00:48:01,920 --> 00:48:03,520
ds hacks with

1186
00:48:03,520 --> 00:48:06,000
a range of arrow types on the parent

1187
00:48:06,000 --> 00:48:07,440
side that they

1188
00:48:07,440 --> 00:48:09,280
convey information about the delegation

1189
00:48:09,280 --> 00:48:10,559
itself

1190
00:48:10,559 --> 00:48:13,040
yes we agree for that but this is

1191
00:48:13,040 --> 00:48:14,400
another draft

1192
00:48:14,400 --> 00:48:16,079
but by the way this could work by having

1193
00:48:16,079 --> 00:48:16,960
the

1194
00:48:16,960 --> 00:48:18,960
dry run type as a new arrow type on the

1195
00:48:18,960 --> 00:48:21,200
parent and then

1196
00:48:21,200 --> 00:48:23,680
have the same ds data as the actual ds

1197
00:48:23,680 --> 00:48:24,640
but

1198
00:48:24,640 --> 00:48:26,720
that is for another talk next slide

1199
00:48:26,720 --> 00:48:28,880
please

1200
00:48:28,880 --> 00:48:30,559
so what we currently have is two

1201
00:48:30,559 --> 00:48:32,160
different timelines

1202
00:48:32,160 --> 00:48:34,640
the single timeline which is the uh

1203
00:48:34,640 --> 00:48:37,200
the simpler one so we have a specific

1204
00:48:37,200 --> 00:48:38,480
dry round

1205
00:48:38,480 --> 00:48:40,000
digest type

1206
00:48:40,000 --> 00:48:42,559
and then we push the one byte of the

1207
00:48:42,559 --> 00:48:44,319
actual digest type as the first byte of

1208
00:48:44,319 --> 00:48:46,720
the digest data

1209
00:48:46,720 --> 00:48:48,400
so this could work for is always not

1210
00:48:48,400 --> 00:48:51,119
understand the dry run digest type but

1211
00:48:51,119 --> 00:48:52,960
it will

1212
00:48:52,960 --> 00:48:55,839
results in variable length digest

1213
00:48:55,839 --> 00:48:58,000
and we got some feedback that this may

1214
00:48:58,000 --> 00:48:59,359
upset some people especially the

1215
00:48:59,359 --> 00:49:00,720
registries

1216
00:49:00,720 --> 00:49:03,280
so an open question to the room is uh

1217
00:49:03,280 --> 00:49:06,160
how bad is this can we live with

1218
00:49:06,160 --> 00:49:08,480
a variable length digest can we change

1219
00:49:08,480 --> 00:49:10,800
our tooling or this is a no-go

1220
00:49:10,800 --> 00:49:13,680
next time please

1221
00:49:13,920 --> 00:49:16,880
and then there's a multiple time line

1222
00:49:16,880 --> 00:49:19,440
where we introduce a dry run ds type for

1223
00:49:19,440 --> 00:49:20,960
each ds

1224
00:49:20,960 --> 00:49:22,960
for its dsi

1225
00:49:22,960 --> 00:49:25,280
for its real dsi

1226
00:49:25,280 --> 00:49:26,160
uh

1227
00:49:26,160 --> 00:49:27,599
yeah

1228
00:49:27,599 --> 00:49:30,720
this will uh half the space we currently

1229
00:49:30,720 --> 00:49:32,720
only have four assigned

1230
00:49:32,720 --> 00:49:33,520
and

1231
00:49:33,520 --> 00:49:34,720
yeah there's an open question to the

1232
00:49:34,720 --> 00:49:35,599
room

1233
00:49:35,599 --> 00:49:37,280
can we afford this or this is too

1234
00:49:37,280 --> 00:49:38,800
aggressive

1235
00:49:38,800 --> 00:49:41,440
next slide

1236
00:49:43,200 --> 00:49:45,280
by the way all signaling is backwards

1237
00:49:45,280 --> 00:49:47,119
compatible if the resolvers don't

1238
00:49:47,119 --> 00:49:48,480
understand that the

1239
00:49:48,480 --> 00:49:50,640
the digest type then they just ignore it

1240
00:49:50,640 --> 00:49:52,400
so that's fine

1241
00:49:52,400 --> 00:49:54,960
next slide

1242
00:49:55,839 --> 00:49:58,480
so provisioning because you need to

1243
00:49:58,480 --> 00:50:00,319
signal your parent that you want to do

1244
00:50:00,319 --> 00:50:02,640
dry around in a sec

1245
00:50:02,640 --> 00:50:04,720
if your parent accepts ads great just

1246
00:50:04,720 --> 00:50:06,880
give them the drive on the s

1247
00:50:06,880 --> 00:50:08,400
if they only accept dinner ski because

1248
00:50:08,400 --> 00:50:11,359
they want to generate the ds themselves

1249
00:50:11,359 --> 00:50:12,880
you need to either supply them with the

1250
00:50:12,880 --> 00:50:14,880
ds because they need to see the dryer

1251
00:50:14,880 --> 00:50:16,319
and tent there

1252
00:50:16,319 --> 00:50:18,240
or maybe you do it through a ui and you

1253
00:50:18,240 --> 00:50:20,640
need to check a box

1254
00:50:20,640 --> 00:50:22,720
cds works the same

1255
00:50:22,720 --> 00:50:24,480
cdns key

1256
00:50:24,480 --> 00:50:26,800
you need to have the compiling cds for

1257
00:50:26,800 --> 00:50:29,200
that so that you see that

1258
00:50:29,200 --> 00:50:31,520
the child wants to do dry run

1259
00:50:31,520 --> 00:50:34,079
next slide

1260
00:50:35,119 --> 00:50:36,559
so the security caveat that i was

1261
00:50:36,559 --> 00:50:38,319
talking about is that

1262
00:50:38,319 --> 00:50:40,800
if a zone goes from one signed to

1263
00:50:40,800 --> 00:50:42,000
signed and then there is the

1264
00:50:42,000 --> 00:50:45,440
intermediate step of dry run between

1265
00:50:45,440 --> 00:50:48,160
you can get opportunistic security but

1266
00:50:48,160 --> 00:50:51,359
if dns occur if the nsx fails validation

1267
00:50:51,359 --> 00:50:52,480
fails

1268
00:50:52,480 --> 00:50:54,079
then the resolver will fall back to

1269
00:50:54,079 --> 00:50:55,280
insecure

1270
00:50:55,280 --> 00:50:58,079
so and this is a feature not a bug

1271
00:50:58,079 --> 00:51:00,319
uh so that means

1272
00:51:00,319 --> 00:51:02,480
yeah if you get the adb that's fine but

1273
00:51:02,480 --> 00:51:03,839
if you don't

1274
00:51:03,839 --> 00:51:05,839
you can take uh

1275
00:51:05,839 --> 00:51:08,559
you can't get any results from that so

1276
00:51:08,559 --> 00:51:10,400
for example because they will talk about

1277
00:51:10,400 --> 00:51:11,280
dane

1278
00:51:11,280 --> 00:51:12,800
that won't work

1279
00:51:12,800 --> 00:51:15,680
next slide please

1280
00:51:16,160 --> 00:51:18,000
we started implementing the nsl

1281
00:51:18,000 --> 00:51:20,640
reporting which this this draft relies

1282
00:51:20,640 --> 00:51:21,599
on

1283
00:51:21,599 --> 00:51:24,480
we are in the early stages but

1284
00:51:24,480 --> 00:51:26,240
when we're done

1285
00:51:26,240 --> 00:51:28,000
this could be a next step for us for

1286
00:51:28,000 --> 00:51:30,079
unbound

1287
00:51:30,079 --> 00:51:32,640
next slide

1288
00:51:33,440 --> 00:51:34,839
that was it

1289
00:51:34,839 --> 00:51:37,280
so i would like to see what people have

1290
00:51:37,280 --> 00:51:39,040
to say about it and maybe provide some

1291
00:51:39,040 --> 00:51:41,599
answers

1292
00:51:41,839 --> 00:51:45,359
thank you yogas with

1293
00:51:48,000 --> 00:51:50,559
all right thank you thank you um

1294
00:51:50,559 --> 00:51:52,319
i really like the idea i think it's a

1295
00:51:52,319 --> 00:51:53,839
it's a great idea you know it's worked

1296
00:51:53,839 --> 00:51:55,599
well in mail it's worked well you know

1297
00:51:55,599 --> 00:51:58,720
your comparison to dmarc was spot on

1298
00:51:58,720 --> 00:52:01,280
with with one caveat though which is

1299
00:52:01,280 --> 00:52:03,440
that anything you introduce in this had

1300
00:52:03,440 --> 00:52:05,440
better not disrupt any validation

1301
00:52:05,440 --> 00:52:08,319
behavior you know in regular dns sex so

1302
00:52:08,319 --> 00:52:10,480
to me that immediately rules out any

1303
00:52:10,480 --> 00:52:12,559
sort of ds hacks and immediately rules

1304
00:52:12,559 --> 00:52:15,280
out you know uh algorithms and things

1305
00:52:15,280 --> 00:52:17,680
like that as a mechanism for doing that

1306
00:52:17,680 --> 00:52:19,520
because we already have cases where ds

1307
00:52:19,520 --> 00:52:20,640
algorithms

1308
00:52:20,640 --> 00:52:23,119
provide funky things when one is unknown

1309
00:52:23,119 --> 00:52:25,359
so if it's a completely separate record

1310
00:52:25,359 --> 00:52:26,480
either something somebody will

1311
00:52:26,480 --> 00:52:28,559
understand a validator will understand

1312
00:52:28,559 --> 00:52:30,640
it or they won't and if they do

1313
00:52:30,640 --> 00:52:32,559
understand it then everything's fine

1314
00:52:32,559 --> 00:52:34,800
if they don't or even if they do the

1315
00:52:34,800 --> 00:52:36,960
validation chain has to be totally the

1316
00:52:36,960 --> 00:52:40,160
same for the actual answer

1317
00:52:40,160 --> 00:52:42,240
yeah i agree

1318
00:52:42,240 --> 00:52:45,280
thank you uh remote participants steve

1319
00:52:45,280 --> 00:52:46,800
please go ahead

1320
00:52:46,800 --> 00:52:48,240
thank you i'm not sure i understood

1321
00:52:48,240 --> 00:52:50,559
completely but when i saw uh going

1322
00:52:50,559 --> 00:52:52,160
insecure um

1323
00:52:52,160 --> 00:52:54,160
i start twitching i don't like going

1324
00:52:54,160 --> 00:52:57,799
insecure at all

1325
00:53:04,559 --> 00:53:05,680
uh

1326
00:53:05,680 --> 00:53:08,240
sorry can you repeat that

1327
00:53:08,240 --> 00:53:11,359
yes i i as i say i'm not sure i've

1328
00:53:11,359 --> 00:53:12,960
completely understood

1329
00:53:12,960 --> 00:53:14,960
uh the totality of what you were

1330
00:53:14,960 --> 00:53:17,119
presenting but at the point where you

1331
00:53:17,119 --> 00:53:17,920
said

1332
00:53:17,920 --> 00:53:22,000
uh if if something fails you go insecure

1333
00:53:22,000 --> 00:53:24,400
that raises a red flag for me i don't

1334
00:53:24,400 --> 00:53:28,440
like the idea of going insecure

1335
00:53:29,280 --> 00:53:30,559
you don't like the idea of going

1336
00:53:30,559 --> 00:53:32,880
insecure

1337
00:53:32,880 --> 00:53:35,200
right that's what you said yeah that's

1338
00:53:35,200 --> 00:53:37,040
what i said yes

1339
00:53:37,040 --> 00:53:39,119
but but uh

1340
00:53:39,119 --> 00:53:41,280
so for that use case you're starting

1341
00:53:41,280 --> 00:53:43,520
from an insecure zone

1342
00:53:43,520 --> 00:53:46,079
right and then you try to sign it and

1343
00:53:46,079 --> 00:53:48,079
if everything validates it's going to be

1344
00:53:48,079 --> 00:53:50,000
secure or it will fall back to insecure

1345
00:53:50,000 --> 00:53:53,440
but dryer and dinasek is not meant to be

1346
00:53:53,440 --> 00:53:55,359
a secure final state

1347
00:53:55,359 --> 00:53:58,319
so getting the insecure answers back is

1348
00:53:58,319 --> 00:53:59,760
at least from my point of view fine

1349
00:53:59,760 --> 00:54:02,640
because you're still testing

1350
00:54:02,640 --> 00:54:04,559
um

1351
00:54:04,559 --> 00:54:06,559
you're saying it only arises when you're

1352
00:54:06,559 --> 00:54:08,400
starting from an insecure state from a

1353
00:54:08,400 --> 00:54:11,680
from an unsigned state uh it it doesn't

1354
00:54:11,680 --> 00:54:14,319
arise when you're uh in the middle of

1355
00:54:14,319 --> 00:54:15,200
say

1356
00:54:15,200 --> 00:54:17,119
uh

1357
00:54:17,119 --> 00:54:20,559
changing this the signature

1358
00:54:22,480 --> 00:54:26,240
now uh sorry i didn't get that

1359
00:54:26,240 --> 00:54:28,479
uh

1360
00:54:28,880 --> 00:54:31,680
does this is is this used

1361
00:54:31,680 --> 00:54:34,319
when you are

1362
00:54:34,800 --> 00:54:38,359
rolling the key

1363
00:54:38,960 --> 00:54:42,079
so uh so if you want to test kira lover

1364
00:54:42,079 --> 00:54:44,000
so that means that your zone is signed

1365
00:54:44,000 --> 00:54:46,319
and then you want to test uh if rolling

1366
00:54:46,319 --> 00:54:47,760
a key would work

1367
00:54:47,760 --> 00:54:49,040
so this would

1368
00:54:49,040 --> 00:54:52,640
start in the dry run let's call it the

1369
00:54:52,640 --> 00:54:55,200
dry run in a sec part of the zone

1370
00:54:55,200 --> 00:54:57,280
and if anything fails there the resolver

1371
00:54:57,280 --> 00:55:00,000
should fall back to the actual ds zone

1372
00:55:00,000 --> 00:55:02,240
so

1373
00:55:02,640 --> 00:55:04,960
okay the previous plate yeah

1374
00:55:04,960 --> 00:55:07,599
okay okay so as long as it doesn't

1375
00:55:07,599 --> 00:55:08,720
introduce

1376
00:55:08,720 --> 00:55:11,680
a period of going insecure

1377
00:55:11,680 --> 00:55:13,200
um

1378
00:55:13,200 --> 00:55:14,880
from a secure state

1379
00:55:14,880 --> 00:55:17,599
then i'm okay

1380
00:55:17,599 --> 00:55:20,400
yeah yeah i want to clarify that that

1381
00:55:20,400 --> 00:55:22,559
if there is an error in the dry run

1382
00:55:22,559 --> 00:55:24,960
state you go back to the previous it's

1383
00:55:24,960 --> 00:55:26,799
going to be insecure for an insecure

1384
00:55:26,799 --> 00:55:28,559
zone and it's going to be secure for a

1385
00:55:28,559 --> 00:55:30,000
secure zone

1386
00:55:30,000 --> 00:55:31,520
thank you

1387
00:55:31,520 --> 00:55:34,520
thanks

1388
00:55:37,680 --> 00:55:39,680
uh victor de koffny google

1389
00:55:39,680 --> 00:55:40,480
uh

1390
00:55:40,480 --> 00:55:42,880
my concern is that

1391
00:55:42,880 --> 00:55:46,960
uh okay the mic is low sorry about that

1392
00:55:46,960 --> 00:55:49,200
warren's fault um

1393
00:55:49,200 --> 00:55:50,050
so

1394
00:55:50,050 --> 00:55:52,480
[Laughter]

1395
00:55:52,480 --> 00:55:54,160
um

1396
00:55:54,160 --> 00:55:56,160
my concern is that you seem to assume

1397
00:55:56,160 --> 00:55:59,119
that all the resolvers out there in fact

1398
00:55:59,119 --> 00:56:01,280
behave as specified

1399
00:56:01,280 --> 00:56:03,440
and will do the right thing when

1400
00:56:03,440 --> 00:56:05,839
presented with an unknown code point

1401
00:56:05,839 --> 00:56:08,160
uh just two days ago i tried that with

1402
00:56:08,160 --> 00:56:10,240
algorithm zero and was deeply

1403
00:56:10,240 --> 00:56:11,599
disappointed

1404
00:56:11,599 --> 00:56:14,240
from at least one major resolver

1405
00:56:14,240 --> 00:56:15,440
i think all such assertions

1406
00:56:15,440 --> 00:56:17,440
unfortunately need extensive field

1407
00:56:17,440 --> 00:56:18,480
testing

1408
00:56:18,480 --> 00:56:20,160
to determine whether that's true or

1409
00:56:20,160 --> 00:56:22,079
false

1410
00:56:22,079 --> 00:56:24,400
and i'm also concerned about

1411
00:56:24,400 --> 00:56:26,079
uh considerable implementation

1412
00:56:26,079 --> 00:56:29,200
complexity in an already fairly complex

1413
00:56:29,200 --> 00:56:32,960
stack so i don't know how much adoption

1414
00:56:32,960 --> 00:56:35,520
such a thing is likely to see from from

1415
00:56:35,520 --> 00:56:36,880
major

1416
00:56:36,880 --> 00:56:38,960
providers where you really want good

1417
00:56:38,960 --> 00:56:41,440
coverage for this thing to be effective

1418
00:56:41,440 --> 00:56:43,599
right if they just treat the new code

1419
00:56:43,599 --> 00:56:46,240
point as unsigned no real testing

1420
00:56:46,240 --> 00:56:48,559
happens until you actually go signed

1421
00:56:48,559 --> 00:56:50,400
so you'd need the cloud flares and the

1422
00:56:50,400 --> 00:56:52,319
googles and the binds everybody to

1423
00:56:52,319 --> 00:56:53,680
really adopt this before it's

1424
00:56:53,680 --> 00:56:55,440
particularly useful

1425
00:56:55,440 --> 00:56:58,880
so it's a pretty tall hill to climb

1426
00:56:58,880 --> 00:57:02,319
i don't know how we get there

1427
00:57:03,359 --> 00:57:05,119
we have we did some preliminary

1428
00:57:05,119 --> 00:57:06,880
measurements from the previous itf

1429
00:57:06,880 --> 00:57:08,240
although it was

1430
00:57:08,240 --> 00:57:10,079
ripe butler's measurements

1431
00:57:10,079 --> 00:57:14,000
so we used a unknown uh digest types the

1432
00:57:14,000 --> 00:57:16,160
results looked pretty good but still it

1433
00:57:16,160 --> 00:57:19,280
was just right battle so yeah

1434
00:57:19,280 --> 00:57:23,040
you can't be 100 certain

1435
00:57:24,000 --> 00:57:27,480
okay paul

1436
00:57:27,920 --> 00:57:30,079
i'm sorry um paul hoffman can you go

1437
00:57:30,079 --> 00:57:32,880
back about three slides to the single

1438
00:57:32,880 --> 00:57:35,280
track

1439
00:57:37,280 --> 00:57:39,920
uh three slides i guess that was are you

1440
00:57:39,920 --> 00:57:42,160
able to yes

1441
00:57:42,160 --> 00:57:44,400
uh to to one that he had single track

1442
00:57:44,400 --> 00:57:46,160
and dual track and i was looking i

1443
00:57:46,160 --> 00:57:47,119
wanted

1444
00:57:47,119 --> 00:57:49,040
to comment on this thing on double

1445
00:57:49,040 --> 00:57:52,520
timeline yeah

1446
00:57:59,920 --> 00:58:02,079
yeah the one before this

1447
00:58:02,079 --> 00:58:05,760
i'm sorry this one sorry this one yep

1448
00:58:05,760 --> 00:58:08,160
um

1449
00:58:08,160 --> 00:58:10,480
i think even though some

1450
00:58:10,480 --> 00:58:13,040
um folks might not like the variable

1451
00:58:13,040 --> 00:58:15,040
length because it's hard for them blah

1452
00:58:15,040 --> 00:58:17,760
blah just as victor said

1453
00:58:17,760 --> 00:58:19,680
things that are are not implemented well

1454
00:58:19,680 --> 00:58:21,520
are going to have a hard time regardless

1455
00:58:21,520 --> 00:58:24,240
i think this is absolutely a feature for

1456
00:58:24,240 --> 00:58:25,599
us testing

1457
00:58:25,599 --> 00:58:29,839
um new ds types where in fact the digest

1458
00:58:29,839 --> 00:58:32,480
length is going to be surprising such as

1459
00:58:32,480 --> 00:58:34,400
for post-quantum crypto

1460
00:58:34,400 --> 00:58:37,040
so i think if we which fortunately is

1461
00:58:37,040 --> 00:58:38,559
way in the future

1462
00:58:38,559 --> 00:58:40,640
um although whey can mean a lot of

1463
00:58:40,640 --> 00:58:42,160
things different people

1464
00:58:42,160 --> 00:58:45,040
if we have this with a variable length

1465
00:58:45,040 --> 00:58:46,799
digest type

1466
00:58:46,799 --> 00:58:49,760
defined before we start fuzzing with the

1467
00:58:49,760 --> 00:58:51,920
post-quantum algorithms and some of the

1468
00:58:51,920 --> 00:58:54,400
things that go along with that we will

1469
00:58:54,400 --> 00:58:57,599
absolutely get much better data about

1470
00:58:57,599 --> 00:58:59,119
you know how things are going to break

1471
00:58:59,119 --> 00:59:01,680
so i would strongly recommend going to

1472
00:59:01,680 --> 00:59:06,000
this with a variable length digest type

1473
00:59:06,000 --> 00:59:08,319
thank you

1474
00:59:09,920 --> 00:59:11,119
ben schwartz

1475
00:59:11,119 --> 00:59:12,160
uh

1476
00:59:12,160 --> 00:59:14,400
thinking about this from so i'd like

1477
00:59:14,400 --> 00:59:16,720
this functionality i think this would if

1478
00:59:16,720 --> 00:59:18,960
if somehow we we lived in in the future

1479
00:59:18,960 --> 00:59:21,359
that victor outlined uh where all of

1480
00:59:21,359 --> 00:59:23,680
this had eventually rolled out uh this

1481
00:59:23,680 --> 00:59:25,680
would be a very useful thing for use

1482
00:59:25,680 --> 00:59:28,079
cases i've run into

1483
00:59:28,079 --> 00:59:29,520
i

1484
00:59:29,520 --> 00:59:31,200
uh one thing that i would like if i were

1485
00:59:31,200 --> 00:59:32,960
using this is to be able to answer the

1486
00:59:32,960 --> 00:59:35,520
question what is the error rate

1487
00:59:35,520 --> 00:59:37,760
of what what is the error rate that

1488
00:59:37,760 --> 00:59:40,720
you've created with by by adding this

1489
00:59:40,720 --> 00:59:43,119
and i don't think this

1490
00:59:43,119 --> 00:59:45,200
proposal actually gets me there right i

1491
00:59:45,200 --> 00:59:47,359
get error reports but i don't have a

1492
00:59:47,359 --> 00:59:49,760
denominator i don't know

1493
00:59:49,760 --> 00:59:50,720
uh

1494
00:59:50,720 --> 00:59:53,280
i don't know how what fraction of

1495
00:59:53,280 --> 00:59:56,079
my uh recipients actually implement the

1496
00:59:56,079 --> 00:59:58,799
specification so i i don't know the

1497
00:59:58,799 --> 01:00:01,119
error rate that i'm generating

1498
01:00:01,119 --> 01:00:03,440
so i think maybe a more flexible system

1499
01:00:03,440 --> 01:00:05,680
that could do things like request a

1500
01:00:05,680 --> 01:00:07,520
certain number of positive confirmations

1501
01:00:07,520 --> 01:00:10,240
to say yes it actually is working

1502
01:00:10,240 --> 01:00:11,760
that would be helpful

1503
01:00:11,760 --> 01:00:14,000
so i can comment on that because this

1504
01:00:14,000 --> 01:00:16,559
draft relies on the necessary reporting

1505
01:00:16,559 --> 01:00:19,440
and the new version has support for a no

1506
01:00:19,440 --> 01:00:20,640
error flag

1507
01:00:20,640 --> 01:00:22,640
so as an upstream you can signal to your

1508
01:00:22,640 --> 01:00:24,240
resolvers to say

1509
01:00:24,240 --> 01:00:26,480
okay you see me but please send me back

1510
01:00:26,480 --> 01:00:28,880
nowhere so that i know you're there

1511
01:00:28,880 --> 01:00:29,839
because

1512
01:00:29,839 --> 01:00:31,520
if i don't get any error reports how

1513
01:00:31,520 --> 01:00:33,119
should i know that everything is okay

1514
01:00:33,119 --> 01:00:33,920
right

1515
01:00:33,920 --> 01:00:36,160
so you get that thumbs up if nothing is

1516
01:00:36,160 --> 01:00:38,079
wrong from your resolver and then maybe

1517
01:00:38,079 --> 01:00:41,200
you can also use that information for uh

1518
01:00:41,200 --> 01:00:43,359
for what you described okay and would

1519
01:00:43,359 --> 01:00:45,040
that actually work for this because

1520
01:00:45,040 --> 01:00:47,760
knowing that the resolver supports the

1521
01:00:47,760 --> 01:00:49,839
dns error reporting is not sufficient

1522
01:00:49,839 --> 01:00:52,160
right i need to know uh

1523
01:00:52,160 --> 01:00:54,319
the denominator has to be the

1524
01:00:54,319 --> 01:00:55,520
the fraction of

1525
01:00:55,520 --> 01:00:57,280
responses that went to resolvers that

1526
01:00:57,280 --> 01:00:59,680
implement that and also this

1527
01:00:59,680 --> 01:01:01,839
yeah what you would see is that okay uh

1528
01:01:01,839 --> 01:01:03,680
x amount of resolvers contacted back

1529
01:01:03,680 --> 01:01:06,079
with no error so i know they're there

1530
01:01:06,079 --> 01:01:08,640
and then i start getting errors

1531
01:01:08,640 --> 01:01:10,400
okay it's not the actual number that you

1532
01:01:10,400 --> 01:01:12,160
want but it is something more than just

1533
01:01:12,160 --> 01:01:14,160
getting the errors back okay thank you

1534
01:01:14,160 --> 01:01:16,399
yeah

1535
01:01:20,640 --> 01:01:24,640
hi um lars lima from net note

1536
01:01:25,839 --> 01:01:27,760
this is a good thing um you mentioned

1537
01:01:27,760 --> 01:01:30,480
that this is is viewed as a temporary

1538
01:01:30,480 --> 01:01:32,799
measure for for a transition between

1539
01:01:32,799 --> 01:01:35,920
states and i i totally agree to that

1540
01:01:35,920 --> 01:01:39,040
in order to avoid having lingering stuff

1541
01:01:39,040 --> 01:01:41,359
in in the system um

1542
01:01:41,359 --> 01:01:43,520
that may or may not interfere further

1543
01:01:43,520 --> 01:01:44,799
down the line

1544
01:01:44,799 --> 01:01:45,839
would it be

1545
01:01:45,839 --> 01:01:49,040
an idea to either put some kind of timer

1546
01:01:49,040 --> 01:01:50,839
into the system

1547
01:01:50,839 --> 01:01:53,920
that kicks out this this functionality

1548
01:01:53,920 --> 01:01:55,920
after a certain time or to have a

1549
01:01:55,920 --> 01:01:58,160
recommendation to implementers to put

1550
01:01:58,160 --> 01:01:59,920
timers in the software that that

1551
01:01:59,920 --> 01:02:01,680
interacts with this

1552
01:02:01,680 --> 01:02:04,400
just to avoid you know as the same thing

1553
01:02:04,400 --> 01:02:07,039
with with the records for for domain

1554
01:02:07,039 --> 01:02:09,359
authentication we don't want lingering

1555
01:02:09,359 --> 01:02:12,960
rotting stuff in our dns just an idea

1556
01:02:12,960 --> 01:02:15,680
yeah but with timers you mean how long

1557
01:02:15,680 --> 01:02:16,960
the dry run

1558
01:02:16,960 --> 01:02:19,680
state is going to be yes right yes but

1559
01:02:19,680 --> 01:02:21,520
but this is easy because it's about the

1560
01:02:21,520 --> 01:02:23,119
ds record

1561
01:02:23,119 --> 01:02:24,880
so it's a manual intervention you can

1562
01:02:24,880 --> 01:02:26,720
either turn it on or off

1563
01:02:26,720 --> 01:02:28,160
yeah i mean if you leave it there you're

1564
01:02:28,160 --> 01:02:29,920
just going to be on dryer and insect

1565
01:02:29,920 --> 01:02:32,480
forever i mean we don't want that

1566
01:02:32,480 --> 01:02:34,240
yeah but if you want to transition you

1567
01:02:34,240 --> 01:02:36,480
need to manually do it do it

1568
01:02:36,480 --> 01:02:38,400
there's no automatic transition for

1569
01:02:38,400 --> 01:02:40,880
either state or you just uh you leave

1570
01:02:40,880 --> 01:02:43,440
the ds record that uh expire on the keys

1571
01:02:43,440 --> 01:02:46,000
but yeah that's garbage

1572
01:02:46,000 --> 01:02:49,119
but that's what you're saying

1573
01:02:49,119 --> 01:02:50,319
what i would like to see is to have it

1574
01:02:50,319 --> 01:02:52,799
removed after a certain time unless

1575
01:02:52,799 --> 01:02:54,720
someone manually kicked it and say yes

1576
01:02:54,720 --> 01:02:58,160
now we are in running state

1577
01:02:58,319 --> 01:02:59,119
uh

1578
01:02:59,119 --> 01:02:59,920
yeah

1579
01:02:59,920 --> 01:03:00,799
i don't know how to do that

1580
01:03:00,799 --> 01:03:02,240
automatically but i understand what

1581
01:03:02,240 --> 01:03:04,799
you're saying yeah

1582
01:03:07,440 --> 01:03:09,039
at the risk of making my good friend

1583
01:03:09,039 --> 01:03:11,359
steve angry with me um i actually think

1584
01:03:11,359 --> 01:03:12,799
this would help if you were going from

1585
01:03:12,799 --> 01:03:14,880
secure to a new algorithm role to

1586
01:03:14,880 --> 01:03:16,559
insecure i mean i wrote a draft a while

1587
01:03:16,559 --> 01:03:18,799
ago about that that sort of got 50

1588
01:03:18,799 --> 01:03:20,799
support for people liking it 50 that

1589
01:03:20,799 --> 01:03:22,319
absolutely hated it

1590
01:03:22,319 --> 01:03:22,680
um

1591
01:03:22,680 --> 01:03:23,839
[Music]

1592
01:03:23,839 --> 01:03:25,760
this might help in that case right if i

1593
01:03:25,760 --> 01:03:27,119
could point them to it saying if you

1594
01:03:27,119 --> 01:03:29,359
know algorithm roles are tough try doing

1595
01:03:29,359 --> 01:03:30,559
this

1596
01:03:30,559 --> 01:03:33,119
i will say that i think there's a lot of

1597
01:03:33,119 --> 01:03:34,880
corner cases that you need to work very

1598
01:03:34,880 --> 01:03:37,119
carefully through like a dds pointing to

1599
01:03:37,119 --> 01:03:39,039
the same key versus a dds pointing to a

1600
01:03:39,039 --> 01:03:40,960
new key and how many rrcigs must be in

1601
01:03:40,960 --> 01:03:42,799
the in the file when you're doing all

1602
01:03:42,799 --> 01:03:44,400
this testing and the zone suddenly grows

1603
01:03:44,400 --> 01:03:46,000
and you're returning a lot of extra

1604
01:03:46,000 --> 01:03:47,680
large packets and things

1605
01:03:47,680 --> 01:03:49,520
so do make sure you work through all of

1606
01:03:49,520 --> 01:03:51,760
the weird corner cases and then start

1607
01:03:51,760 --> 01:03:53,440
talking to the registries very early

1608
01:03:53,440 --> 01:03:55,920
about having a new ds record and

1609
01:03:55,920 --> 01:03:59,839
inserted dds record

1610
01:04:03,599 --> 01:04:05,200
hi it's peter from the esec peter

1611
01:04:05,200 --> 01:04:06,720
thomason

1612
01:04:06,720 --> 01:04:10,000
so a few things regarding the cleanup of

1613
01:04:10,000 --> 01:04:12,640
stale dry run

1614
01:04:12,640 --> 01:04:15,119
records i would think

1615
01:04:15,119 --> 01:04:17,520
the only entity that may feel that it's

1616
01:04:17,520 --> 01:04:19,280
harmful for those to stick around will

1617
01:04:19,280 --> 01:04:21,359
be the corresponding registry or parent

1618
01:04:21,359 --> 01:04:22,720
authority

1619
01:04:22,720 --> 01:04:24,000
and

1620
01:04:24,000 --> 01:04:25,280
i think it's not a problem for the

1621
01:04:25,280 --> 01:04:27,359
registrant or somebody else

1622
01:04:27,359 --> 01:04:29,280
so i would make that local policy for

1623
01:04:29,280 --> 01:04:31,520
the registry right i mean they can write

1624
01:04:31,520 --> 01:04:32,319
in their

1625
01:04:32,319 --> 01:04:34,720
documents that we will remove your drive

1626
01:04:34,720 --> 01:04:36,240
on record after four weeks or whatever

1627
01:04:36,240 --> 01:04:38,240
they feel like that and then dot d is

1628
01:04:38,240 --> 01:04:39,760
gonna do that perhaps and some other

1629
01:04:39,760 --> 01:04:40,640
registry you're going to do some

1630
01:04:40,640 --> 01:04:43,200
different thing i think that's okay

1631
01:04:43,200 --> 01:04:44,480
um

1632
01:04:44,480 --> 01:04:45,440
maybe

1633
01:04:45,440 --> 01:04:48,559
perhaps a minimum should be

1634
01:04:49,039 --> 01:04:51,680
specified

1635
01:04:51,680 --> 01:04:54,400
or you can use the ttl of the dryer and

1636
01:04:54,400 --> 01:04:56,720
this record for that

1637
01:04:56,720 --> 01:04:58,559
well perhaps that's a bit too short

1638
01:04:58,559 --> 01:05:01,359
because um so i mean you can put a huge

1639
01:05:01,359 --> 01:05:03,599
value there but then yeah okay yeah for

1640
01:05:03,599 --> 01:05:05,680
example yeah anyway i think it's mostly

1641
01:05:05,680 --> 01:05:07,680
a local policy issue

1642
01:05:07,680 --> 01:05:11,359
the second thing regarding the digest

1643
01:05:11,359 --> 01:05:14,000
field length being variable

1644
01:05:14,000 --> 01:05:15,119
i

1645
01:05:15,119 --> 01:05:17,440
think it is better to sacrifice a bit of

1646
01:05:17,440 --> 01:05:18,880
the digest

1647
01:05:18,880 --> 01:05:20,319
type field

1648
01:05:20,319 --> 01:05:21,200
and

1649
01:05:21,200 --> 01:05:23,039
i also don't think that with post

1650
01:05:23,039 --> 01:05:25,039
quantum crypto it would be necessary to

1651
01:05:25,039 --> 01:05:27,119
expect that the digest field length will

1652
01:05:27,119 --> 01:05:29,039
vary because even when the key length

1653
01:05:29,039 --> 01:05:30,480
varies the sha

1654
01:05:30,480 --> 01:05:33,280
hash is still just a shar hash

1655
01:05:33,280 --> 01:05:34,880
um

1656
01:05:34,880 --> 01:05:37,359
and then last thing i wanted to say um

1657
01:05:37,359 --> 01:05:39,839
maybe to point out as an implementation

1658
01:05:39,839 --> 01:05:41,839
note in the

1659
01:05:41,839 --> 01:05:42,960
draft

1660
01:05:42,960 --> 01:05:44,880
so far if my understanding is correct

1661
01:05:44,880 --> 01:05:46,160
although i don't

1662
01:05:46,160 --> 01:05:47,680
know exactly the provisions in the

1663
01:05:47,680 --> 01:05:49,599
dynastic specification is that when you

1664
01:05:49,599 --> 01:05:50,559
do

1665
01:05:50,559 --> 01:05:52,319
validation of a chain and you encounter

1666
01:05:52,319 --> 01:05:53,680
ds records

1667
01:05:53,680 --> 01:05:55,039
essentially you need to find one that

1668
01:05:55,039 --> 01:05:58,400
matches and then you start processing

1669
01:05:58,400 --> 01:06:00,480
and it's not necessary to keep scanning

1670
01:06:00,480 --> 01:06:02,400
and matching other things

1671
01:06:02,400 --> 01:06:04,799
and it's up to the result of whatever

1672
01:06:04,799 --> 01:06:08,240
digest type they would consider

1673
01:06:08,240 --> 01:06:11,119
suitable for matching now if

1674
01:06:11,119 --> 01:06:12,799
a resolver does have support for

1675
01:06:12,799 --> 01:06:14,799
ignoring

1676
01:06:14,799 --> 01:06:16,400
validation failures when there is the

1677
01:06:16,400 --> 01:06:18,319
dry run bit set and even they would send

1678
01:06:18,319 --> 01:06:20,400
out dns

1679
01:06:20,400 --> 01:06:22,640
error reporting stuff in that case

1680
01:06:22,640 --> 01:06:23,599
that

1681
01:06:23,599 --> 01:06:25,520
they may not be hitting that code path

1682
01:06:25,520 --> 01:06:27,920
if they earlier are encountering a ds

1683
01:06:27,920 --> 01:06:29,760
record that does validate and then they

1684
01:06:29,760 --> 01:06:31,280
stop processing

1685
01:06:31,280 --> 01:06:34,000
so um i can imagine that a naive

1686
01:06:34,000 --> 01:06:35,599
implementation of support for this could

1687
01:06:35,599 --> 01:06:37,280
run into this problem

1688
01:06:37,280 --> 01:06:38,720
and perhaps the draft should point out

1689
01:06:38,720 --> 01:06:40,319
that you need to continue scanning the

1690
01:06:40,319 --> 01:06:42,400
other ds records to actually run this

1691
01:06:42,400 --> 01:06:43,920
kind of experiment

1692
01:06:43,920 --> 01:06:46,480
so we haven't implemented anything yet

1693
01:06:46,480 --> 01:06:48,559
but the way of thinking was

1694
01:06:48,559 --> 01:06:51,440
when you encounter the dsr set

1695
01:06:51,440 --> 01:06:54,240
pick one of it so one dry run one uh

1696
01:06:54,240 --> 01:06:56,319
real one the ones that you would have

1697
01:06:56,319 --> 01:06:57,599
picked normally

1698
01:06:57,599 --> 01:06:59,599
and then try the dry run and then if

1699
01:06:59,599 --> 01:07:02,079
that fails see if you have a non-dry run

1700
01:07:02,079 --> 01:07:04,480
and try again okay fair enough i guess

1701
01:07:04,480 --> 01:07:06,480
but this is without an implementation

1702
01:07:06,480 --> 01:07:08,880
just an initial idea yeah implement just

1703
01:07:08,880 --> 01:07:10,880
need to be aware that

1704
01:07:10,880 --> 01:07:12,960
it's not permissible to stop after the

1705
01:07:12,960 --> 01:07:15,039
firm after the first match if you want

1706
01:07:15,039 --> 01:07:18,480
to support this that's all

1707
01:07:26,960 --> 01:07:29,520
sam weiler we have a proposed standard

1708
01:07:29,520 --> 01:07:33,200
rfc on how to do dnstec experiments

1709
01:07:33,200 --> 01:07:35,520
sure we have a proposed standard rfc for

1710
01:07:35,520 --> 01:07:37,920
how to do dnsk experiments that says to

1711
01:07:37,920 --> 01:07:40,640
use the algorithm number not the ds

1712
01:07:40,640 --> 01:07:42,799
record i'm not convinced that we need to

1713
01:07:42,799 --> 01:07:44,880
pop up the level this level and do it

1714
01:07:44,880 --> 01:07:46,400
here

1715
01:07:46,400 --> 01:07:48,079
if the working group is we should

1716
01:07:48,079 --> 01:07:51,839
probably be updating 49.55

1717
01:07:51,839 --> 01:07:53,280
however i'm really concerned about what

1718
01:07:53,280 --> 01:07:56,480
i just heard which was about changing

1719
01:07:56,480 --> 01:07:58,160
the validation rules

1720
01:07:58,160 --> 01:07:59,440
and maybe only looking at one of them

1721
01:07:59,440 --> 01:08:00,799
preferentially

1722
01:08:00,799 --> 01:08:02,480
that you start to go down real slippery

1723
01:08:02,480 --> 01:08:06,880
slope there and i'm i'm again

1724
01:08:06,880 --> 01:08:08,960
i like 49.55 i think it's probably

1725
01:08:08,960 --> 01:08:10,400
sufficient

1726
01:08:10,400 --> 01:08:12,720
okay

1727
01:08:16,960 --> 01:08:19,359
uh neil swizziel the isec

1728
01:08:19,359 --> 01:08:21,359
sorry for being late to the game

1729
01:08:21,359 --> 01:08:23,839
i just wanted to float the idea of

1730
01:08:23,839 --> 01:08:27,040
sending the s records with edns client

1731
01:08:27,040 --> 01:08:30,000
to the um to the resolver instead of

1732
01:08:30,000 --> 01:08:31,520
propagating all this information to the

1733
01:08:31,520 --> 01:08:32,719
parent zone

1734
01:08:32,719 --> 01:08:35,040
i believe i'm not a resolver implementer

1735
01:08:35,040 --> 01:08:36,560
but i believe that could keep down the

1736
01:08:36,560 --> 01:08:38,560
complexity so this is

1737
01:08:38,560 --> 01:08:40,158
a reply to victor's comment about

1738
01:08:40,158 --> 01:08:42,880
complexity so if the client just sends

1739
01:08:42,880 --> 01:08:44,799
ds records for testing along with the

1740
01:08:44,799 --> 01:08:46,799
query the resolver could validate

1741
01:08:46,799 --> 01:08:48,799
against that rather than looking in the

1742
01:08:48,799 --> 01:08:50,839
parent

1743
01:08:50,839 --> 01:08:53,600
zone but you mean the client itself

1744
01:08:53,600 --> 01:08:55,839
provides a result with a ds record

1745
01:08:55,839 --> 01:08:58,960
yes so you you deploy you sign your zone

1746
01:08:58,960 --> 01:09:00,799
and then you want to test it so what you

1747
01:09:00,799 --> 01:09:02,799
do is you query let's say google public

1748
01:09:02,799 --> 01:09:05,679
dns but you also include the ds records

1749
01:09:05,679 --> 01:09:07,198
that you want to propagate to the parent

1750
01:09:07,198 --> 01:09:08,399
zone

1751
01:09:08,399 --> 01:09:10,080
and then the result would validate

1752
01:09:10,080 --> 01:09:12,000
against that and give you the result so

1753
01:09:12,000 --> 01:09:13,120
you don't need to talk to the parent

1754
01:09:13,120 --> 01:09:15,839
registry that would work for the for the

1755
01:09:15,839 --> 01:09:17,839
opt-in case right so the client is

1756
01:09:17,839 --> 01:09:20,319
opting in for testing

1757
01:09:20,319 --> 01:09:23,920
yes yeah okay but this will not work for

1758
01:09:23,920 --> 01:09:26,560
on the while let's see what's happening

1759
01:09:26,560 --> 01:09:28,000
on random people

1760
01:09:28,000 --> 01:09:29,520
right but how would you get the results

1761
01:09:29,520 --> 01:09:32,839
from testing in the wild anyways

1762
01:09:32,839 --> 01:09:36,080
uh through the parent with the driver

1763
01:09:36,080 --> 01:09:38,479
nds

1764
01:09:38,479 --> 01:09:40,000
no i mean what you described works

1765
01:09:40,000 --> 01:09:42,799
perfectly but only for the case that uh

1766
01:09:42,799 --> 01:09:45,040
the clients are opted in right

1767
01:09:45,040 --> 01:09:46,799
yes you can test random people on the

1768
01:09:46,799 --> 01:09:51,679
network right yeah okay yeah

1769
01:09:55,280 --> 01:09:58,239
a couple of comments uh i'm not sure

1770
01:09:58,239 --> 01:10:00,560
that client's idea signaling is viable

1771
01:10:00,560 --> 01:10:02,719
because cached data

1772
01:10:02,719 --> 01:10:04,880
has already been validated it's rather

1773
01:10:04,880 --> 01:10:07,440
unclear how this would work with uh

1774
01:10:07,440 --> 01:10:10,480
results already in the cache

1775
01:10:10,480 --> 01:10:11,920
in terms of

1776
01:10:11,920 --> 01:10:14,080
where to put the dry run bit and the

1777
01:10:14,080 --> 01:10:16,880
variable and digest type and so on i do

1778
01:10:16,880 --> 01:10:19,679
agree that uh stealing a bit from the

1779
01:10:19,679 --> 01:10:21,600
hash algorithm number

1780
01:10:21,600 --> 01:10:24,480
is saner than moving the digest up

1781
01:10:24,480 --> 01:10:27,920
digest type into the digest value

1782
01:10:27,920 --> 01:10:30,960
hash algorithms are

1783
01:10:30,960 --> 01:10:33,600
introduced exceedingly rarely

1784
01:10:33,600 --> 01:10:36,480
symmetric hashes are very stable

1785
01:10:36,480 --> 01:10:38,719
there's no evidence that shatu is likely

1786
01:10:38,719 --> 01:10:40,400
to be compromised anytime in the next

1787
01:10:40,400 --> 01:10:42,320
hundred years

1788
01:10:42,320 --> 01:10:44,320
we're doing very well with that one we

1789
01:10:44,320 --> 01:10:46,080
may add shot three at some point though

1790
01:10:46,080 --> 01:10:47,840
this little demand

1791
01:10:47,840 --> 01:10:49,199
uh so

1792
01:10:49,199 --> 01:10:50,640
um

1793
01:10:50,640 --> 01:10:52,880
steal some space

1794
01:10:52,880 --> 01:10:55,040
uh from the from the hash algorithm if

1795
01:10:55,040 --> 01:10:56,960
this is to go forward

1796
01:10:56,960 --> 01:10:59,520
uh that seems to be the uh

1797
01:10:59,520 --> 01:11:01,760
the way to do it

1798
01:11:01,760 --> 01:11:03,840
uh if i can comment on the casting

1799
01:11:03,840 --> 01:11:05,440
because it's a good point

1800
01:11:05,440 --> 01:11:07,040
we thought about it and this will need

1801
01:11:07,040 --> 01:11:09,760
to keep both dnsec states in the cast

1802
01:11:09,760 --> 01:11:11,360
because clients may need to get the

1803
01:11:11,360 --> 01:11:13,440
error may need to get the

1804
01:11:13,440 --> 01:11:16,960
non-error response yeah

1805
01:11:20,159 --> 01:11:22,719
mark andrews um

1806
01:11:22,719 --> 01:11:25,840
that's a variable length

1807
01:11:25,840 --> 01:11:28,960
we're going to need them anyway for

1808
01:11:28,960 --> 01:11:32,400
private and private ds

1809
01:11:32,400 --> 01:11:34,880
dns key algorithm types

1810
01:11:34,880 --> 01:11:37,670
so don't be scared of that

1811
01:11:37,670 --> 01:11:39,679
[Music]

1812
01:11:39,679 --> 01:11:41,520
in terms of

1813
01:11:41,520 --> 01:11:43,760
a replacement for

1814
01:11:43,760 --> 01:11:45,040
c dns

1815
01:11:45,040 --> 01:11:46,480
key

1816
01:11:46,480 --> 01:11:47,280
um

1817
01:11:47,280 --> 01:11:48,719
i think you should be looking at doing

1818
01:11:48,719 --> 01:11:51,199
another key another type

1819
01:11:51,199 --> 01:11:53,199
which signals

1820
01:11:53,199 --> 01:11:54,640
the similar

1821
01:11:54,640 --> 01:11:57,760
semantics to cdn is key that signals

1822
01:11:57,760 --> 01:12:00,400
that you're wanting a dry

1823
01:12:00,400 --> 01:12:01,760
a dry run

1824
01:12:01,760 --> 01:12:02,800
ds

1825
01:12:02,800 --> 01:12:05,679
be produced

1826
01:12:07,360 --> 01:12:12,719
and in terms of ex exp experiments um

1827
01:12:13,040 --> 01:12:17,440
uh it wasn't doesn't matter earlier um

1828
01:12:17,440 --> 01:12:20,080
it really doesn't matter

1829
01:12:20,080 --> 01:12:23,120
for experiments

1830
01:12:23,120 --> 01:12:26,559
for experiments as long as

1831
01:12:26,719 --> 01:12:28,320
you don't have both values that are

1832
01:12:28,320 --> 01:12:30,400
known you've got a new value in either

1833
01:12:30,400 --> 01:12:33,280
those two fields in the ds record that's

1834
01:12:33,280 --> 01:12:34,159
perfect

1835
01:12:34,159 --> 01:12:36,239
you make about you have a safe

1836
01:12:36,239 --> 01:12:37,840
experiment so

1837
01:12:37,840 --> 01:12:40,080
okay

1838
01:12:40,640 --> 01:12:42,400
that makes sense

1839
01:12:42,400 --> 01:12:45,120
kind of yeah

1840
01:12:53,120 --> 01:12:55,440
thank you thank you for all the feedback

1841
01:12:55,440 --> 01:12:58,000
and thank you yogas thanks

1842
01:12:58,000 --> 01:12:59,199
um

1843
01:12:59,199 --> 01:13:04,519
yeah next up is paul hoffman

1844
01:13:17,120 --> 01:13:19,199
hi i'm also still a new deck being

1845
01:13:19,199 --> 01:13:20,560
shared

1846
01:13:20,560 --> 01:13:22,560
um so now we're in

1847
01:13:22,560 --> 01:13:24,000
the space where things have not been

1848
01:13:24,000 --> 01:13:26,320
adopted by the working group um

1849
01:13:26,320 --> 01:13:29,520
so this is a request for uh people to

1850
01:13:29,520 --> 01:13:30,719
consider

1851
01:13:30,719 --> 01:13:32,640
adopting a draft even though this is

1852
01:13:32,640 --> 01:13:34,239
abyss draft of something that we

1853
01:13:34,239 --> 01:13:37,280
finished not that long ago 8109 is

1854
01:13:37,280 --> 01:13:39,920
just a few years ago

1855
01:13:39,920 --> 01:13:41,600
it's on a topic that a lot of people

1856
01:13:41,600 --> 01:13:43,679
find really really boring

1857
01:13:43,679 --> 01:13:46,239
but it's on a topic that happens all the

1858
01:13:46,239 --> 01:13:48,480
freaking time so it's sort of important

1859
01:13:48,480 --> 01:13:50,080
that we tell people how to get this

1860
01:13:50,080 --> 01:13:54,719
right which is dns priming next slide

1861
01:13:55,679 --> 01:13:58,159
so 8109 is out we believe it's well

1862
01:13:58,159 --> 01:14:00,080
implemented because it doesn't really

1863
01:14:00,080 --> 01:14:02,560
say much to do other than the very basic

1864
01:14:02,560 --> 01:14:03,440
thing

1865
01:14:03,440 --> 01:14:05,120
that has been

1866
01:14:05,120 --> 01:14:07,199
talked about in the dns

1867
01:14:07,199 --> 01:14:10,560
really since 1034 1035 which is

1868
01:14:10,560 --> 01:14:12,239
when you have a completely empty cache

1869
01:14:12,239 --> 01:14:14,560
and you get your first query the way you

1870
01:14:14,560 --> 01:14:16,480
prime is

1871
01:14:16,480 --> 01:14:18,320
that you do this and then this and then

1872
01:14:18,320 --> 01:14:21,440
this so 8109 didn't change that it

1873
01:14:21,440 --> 01:14:24,000
helped resolver operators understand

1874
01:14:24,000 --> 01:14:25,199
better

1875
01:14:25,199 --> 01:14:26,880
sort of some of the the i wouldn't even

1876
01:14:26,880 --> 01:14:28,640
call them edge cases but interesting

1877
01:14:28,640 --> 01:14:30,880
considerations of that

1878
01:14:30,880 --> 01:14:32,719
and

1879
01:14:32,719 --> 01:14:34,960
yet still we see some resolvers that

1880
01:14:34,960 --> 01:14:37,440
don't necessarily always do it the way

1881
01:14:37,440 --> 01:14:40,159
that would be best for its users

1882
01:14:40,159 --> 01:14:41,600
and since it is so important to get

1883
01:14:41,600 --> 01:14:44,159
priming right getting it wrong affects a

1884
01:14:44,159 --> 01:14:46,719
lot of people pretty much silently

1885
01:14:46,719 --> 01:14:48,640
which which is really bad

1886
01:14:48,640 --> 01:14:50,400
so um

1887
01:14:50,400 --> 01:14:53,120
as this working group was was working on

1888
01:14:53,120 --> 01:14:56,400
what became 8109 some issues came up and

1889
01:14:56,400 --> 01:14:58,640
people said we just want to get 8109

1890
01:14:58,640 --> 01:14:59,920
publish

1891
01:14:59,920 --> 01:15:01,840
that's you know that's a controversial

1892
01:15:01,840 --> 01:15:03,600
issue or whatever and we punted on them

1893
01:15:03,600 --> 01:15:06,400
which is fine but now with the fullness

1894
01:15:06,400 --> 01:15:08,159
of time we can actually take them up

1895
01:15:08,159 --> 01:15:10,320
again and also since we brought it up

1896
01:15:10,320 --> 01:15:14,320
some new issues have arisen next slide

1897
01:15:15,600 --> 01:15:16,640
so

1898
01:15:16,640 --> 01:15:19,440
this is a a large list but and by the

1899
01:15:19,440 --> 01:15:21,760
way this is my second to last slide i'm

1900
01:15:21,760 --> 01:15:23,199
not going to go through all of these but

1901
01:15:23,199 --> 01:15:25,120
i wanted to point out if you read the

1902
01:15:25,120 --> 01:15:27,920
draft you will see this list in the

1903
01:15:27,920 --> 01:15:30,480
draft these are things that we've

1904
01:15:30,480 --> 01:15:32,640
already looked at so the reason why i

1905
01:15:32,640 --> 01:15:34,880
put up sort of it's not as bad of a wall

1906
01:15:34,880 --> 01:15:37,520
of text as some other people's but is

1907
01:15:37,520 --> 01:15:40,600
that we've already seen a bunch

1908
01:15:40,600 --> 01:15:42,560
48109

1909
01:15:42,560 --> 01:15:44,000
a bunch of issues

1910
01:15:44,000 --> 01:15:44,800
that

1911
01:15:44,800 --> 01:15:46,560
so it's more than one or two issues is

1912
01:15:46,560 --> 01:15:48,800
what i'm trying to say

1913
01:15:48,800 --> 01:15:50,880
we think that it is worth opening this

1914
01:15:50,880 --> 01:15:53,840
up again even if some even if we punt on

1915
01:15:53,840 --> 01:15:55,920
some of the issues there are plenty of

1916
01:15:55,920 --> 01:15:57,679
other things in here

1917
01:15:57,679 --> 01:16:00,320
um that are more or less important to uh

1918
01:16:00,320 --> 01:16:01,920
more fewer people

1919
01:16:01,920 --> 01:16:04,159
um

1920
01:16:04,159 --> 01:16:05,040
the

1921
01:16:05,040 --> 01:16:08,239
uh some of it's just terminology uh the

1922
01:16:08,239 --> 01:16:10,080
root server operators have a very

1923
01:16:10,080 --> 01:16:11,840
specific way that they want to be

1924
01:16:11,840 --> 01:16:13,440
referred to i think it would be good for

1925
01:16:13,440 --> 01:16:14,800
us to do that

1926
01:16:14,800 --> 01:16:17,360
um

1927
01:16:17,400 --> 01:16:20,480
we uh

1928
01:16:20,480 --> 01:16:22,880
this working group loves the tc bit at

1929
01:16:22,880 --> 01:16:24,960
the same time that it hates the tc bit

1930
01:16:24,960 --> 01:16:26,800
we we want to deal with that more and

1931
01:16:26,800 --> 01:16:30,000
such like that um but it's it's

1932
01:16:30,000 --> 01:16:31,760
we think that it is worthwhile even

1933
01:16:31,760 --> 01:16:33,199
though it's not the most interesting

1934
01:16:33,199 --> 01:16:36,159
subject to actually get this nailed down

1935
01:16:36,159 --> 01:16:37,920
and so this would be abyss it would

1936
01:16:37,920 --> 01:16:40,400
actually obsolete 8109

1937
01:16:40,400 --> 01:16:41,920
i mean again if you find any of these

1938
01:16:41,920 --> 01:16:43,360
interesting please look in the current

1939
01:16:43,360 --> 01:16:47,639
draft see where it is next slide

1940
01:16:48,880 --> 01:16:51,360
um so this is what's not yet in the

1941
01:16:51,360 --> 01:16:52,400
draft

1942
01:16:52,400 --> 01:16:55,280
pre-fetching has become a much more

1943
01:16:55,280 --> 01:16:58,159
popular topic in the last few years and

1944
01:16:58,159 --> 01:17:01,199
certainly for the root zone

1945
01:17:01,199 --> 01:17:03,120
many people would say pre-fetching would

1946
01:17:03,120 --> 01:17:04,800
be a good thing

1947
01:17:04,800 --> 01:17:06,480
so we should be talking about it there's

1948
01:17:06,480 --> 01:17:07,840
nothing we can say you should you

1949
01:17:07,840 --> 01:17:09,760
shouldn't but we shouldn't pretend it

1950
01:17:09,760 --> 01:17:11,120
doesn't happen

1951
01:17:11,120 --> 01:17:12,159
um

1952
01:17:12,159 --> 01:17:13,520
and then there's also the question of

1953
01:17:13,520 --> 01:17:15,840
post-priming strategy so after you've

1954
01:17:15,840 --> 01:17:18,239
primed after you have

1955
01:17:18,239 --> 01:17:22,239
this set of um ns records

1956
01:17:22,239 --> 01:17:24,640
thank you after you have the set of ns

1957
01:17:24,640 --> 01:17:27,520
records everyone knows that different

1958
01:17:27,520 --> 01:17:29,760
resolvers do different things to pick

1959
01:17:29,760 --> 01:17:31,760
which is their favorite authoritative

1960
01:17:31,760 --> 01:17:33,840
server for any zone not much less the

1961
01:17:33,840 --> 01:17:35,040
root zone

1962
01:17:35,040 --> 01:17:36,800
but

1963
01:17:36,800 --> 01:17:39,120
some resolver software actually treats

1964
01:17:39,120 --> 01:17:41,120
the root zone as special

1965
01:17:41,120 --> 01:17:43,280
we can say don't do that as often as we

1966
01:17:43,280 --> 01:17:45,840
want but they do and so there should

1967
01:17:45,840 --> 01:17:48,480
actually be a discussion of once you've

1968
01:17:48,480 --> 01:17:50,640
got the zone sitting there how do you

1969
01:17:50,640 --> 01:17:54,080
pick which authoritative server to use

1970
01:17:54,080 --> 01:17:56,080
do you pick the fastest do you pick the

1971
01:17:56,080 --> 01:17:58,159
one underneath the thing so these are

1972
01:17:58,159 --> 01:17:59,920
all things that we know that people have

1973
01:17:59,920 --> 01:18:02,480
talked about we don't need to say you

1974
01:18:02,480 --> 01:18:04,320
should do this or that but we should

1975
01:18:04,320 --> 01:18:06,080
certainly admit

1976
01:18:06,080 --> 01:18:07,679
that in fact there are these

1977
01:18:07,679 --> 01:18:10,159
post-priming considerations particularly

1978
01:18:10,159 --> 01:18:11,600
for people who are watching things on

1979
01:18:11,600 --> 01:18:14,400
the wire it is completely believable

1980
01:18:14,400 --> 01:18:16,800
that a resolver comes up

1981
01:18:16,800 --> 01:18:21,600
does a priming query goes to q root

1982
01:18:21,679 --> 01:18:24,480
reboots does a priming query and then

1983
01:18:24,480 --> 01:18:26,640
goes to our root instead you know like

1984
01:18:26,640 --> 01:18:29,120
like within the course of 15 seconds

1985
01:18:29,120 --> 01:18:31,199
for whatever reason

1986
01:18:31,199 --> 01:18:33,040
normally we would think oh it'll always

1987
01:18:33,040 --> 01:18:34,560
go to the fastest we know that that's

1988
01:18:34,560 --> 01:18:37,280
not the case q root and r root might be

1989
01:18:37,280 --> 01:18:39,120
approximately as fast there may have

1990
01:18:39,120 --> 01:18:40,640
been a round switch things like that

1991
01:18:40,640 --> 01:18:42,800
this should be discussed in 8109 is our

1992
01:18:42,800 --> 01:18:46,640
belief so i think that's the last slide

1993
01:18:46,640 --> 01:18:47,840
oh and then

1994
01:18:47,840 --> 01:18:50,080
i guess the the obligatory last slide is

1995
01:18:50,080 --> 01:18:51,520
does it work and who want to adopt it we

1996
01:18:51,520 --> 01:18:54,000
don't need to talk about that now

1997
01:18:54,000 --> 01:18:55,679
there's no rush

1998
01:18:55,679 --> 01:18:58,480
but i also think that there's no reason

1999
01:18:58,480 --> 01:19:00,320
to wait for it it's not like we're

2000
01:19:00,320 --> 01:19:03,280
expecting any new news going on so that

2001
01:19:03,280 --> 01:19:05,840
was that was it

2002
01:19:05,840 --> 01:19:09,040
thank you

2003
01:19:09,040 --> 01:19:13,280
any questions comments from the room

2004
01:19:18,080 --> 01:19:19,440
okay thank you thank you thank you very

2005
01:19:19,440 --> 01:19:22,599
much paul

2006
01:19:22,800 --> 01:19:25,199
that closes the for consideration

2007
01:19:25,199 --> 01:19:26,880
section of the agenda and now we're up

2008
01:19:26,880 --> 01:19:28,719
to the time permitting

2009
01:19:28,719 --> 01:19:31,440
so a remote presentation by then then

2010
01:19:31,440 --> 01:19:33,678
wing

2011
01:19:34,800 --> 01:19:38,640
i think you want to run your own slides

2012
01:19:40,000 --> 01:19:41,600
uh if you could share them that would be

2013
01:19:41,600 --> 01:19:43,920
great

2014
01:19:44,560 --> 01:19:47,560
thanks

2015
01:19:51,600 --> 01:19:54,239
um so i'm dan this is uh basically now

2016
01:19:54,239 --> 01:19:57,280
an extension to um ede

2017
01:19:57,280 --> 01:19:59,360
um which was nice to see some progress

2018
01:19:59,360 --> 01:20:01,520
on earlier next slide

2019
01:20:01,520 --> 01:20:03,840
so the purpose for this is when there is

2020
01:20:03,840 --> 01:20:05,920
dns filtering to provide more

2021
01:20:05,920 --> 01:20:08,560
information about what was filtered and

2022
01:20:08,560 --> 01:20:09,600
by whom

2023
01:20:09,600 --> 01:20:11,760
so that that can be tracked down if that

2024
01:20:11,760 --> 01:20:14,639
filter was sorry sorry then you moved

2025
01:20:14,639 --> 01:20:17,199
the microphone maybe we can't hear you

2026
01:20:17,199 --> 01:20:19,760
or difficult to hear you

2027
01:20:19,760 --> 01:20:21,760
uh i had some papers next to it my

2028
01:20:21,760 --> 01:20:24,880
apologies that any better thank you

2029
01:20:24,880 --> 01:20:26,320
sorry about that

2030
01:20:26,320 --> 01:20:28,000
very good

2031
01:20:28,000 --> 01:20:31,239
next slide

2032
01:20:32,320 --> 01:20:34,880
so the changes we made between zero one

2033
01:20:34,880 --> 01:20:36,719
which is the last time that i presented

2034
01:20:36,719 --> 01:20:38,960
on this to the current version is uh

2035
01:20:38,960 --> 01:20:41,280
further constraining the json and when

2036
01:20:41,280 --> 01:20:43,840
it's displayed to the user

2037
01:20:43,840 --> 01:20:46,560
and the reason is there is concern that

2038
01:20:46,560 --> 01:20:48,639
the browsers would be unwilling to

2039
01:20:48,639 --> 01:20:50,719
display information that was controlled

2040
01:20:50,719 --> 01:20:52,159
by the

2041
01:20:52,159 --> 01:20:54,320
dns resolver that the browser is talking

2042
01:20:54,320 --> 01:20:56,880
with uh and instead just throw that into

2043
01:20:56,880 --> 01:20:58,560
a log that

2044
01:20:58,560 --> 01:21:00,880
it or a more sophisticated user can look

2045
01:21:00,880 --> 01:21:02,320
at but not have it be something that's

2046
01:21:02,320 --> 01:21:03,840
popped up straight in front of the the

2047
01:21:03,840 --> 01:21:05,440
user's face

2048
01:21:05,440 --> 01:21:07,760
um and also to help constrain those

2049
01:21:07,760 --> 01:21:09,679
messages uh instead of having the

2050
01:21:09,679 --> 01:21:12,239
freeform text that we had previously uh

2051
01:21:12,239 --> 01:21:14,400
the second bullet talks about uh

2052
01:21:14,400 --> 01:21:16,639
sub-error numeric codes that we

2053
01:21:16,639 --> 01:21:18,960
introduced in this version so for

2054
01:21:18,960 --> 01:21:21,440
example what's defined right now one is

2055
01:21:21,440 --> 01:21:23,679
for it was filtered because of malware

2056
01:21:23,679 --> 01:21:26,320
two for phishing three for spams and

2057
01:21:26,320 --> 01:21:28,480
numbers like that

2058
01:21:28,480 --> 01:21:31,199
and then also to ensure that we don't

2059
01:21:31,199 --> 01:21:33,360
have a cash poisoning problem

2060
01:21:33,360 --> 01:21:35,360
uh is to require the

2061
01:21:35,360 --> 01:21:36,400
the

2062
01:21:36,400 --> 01:21:39,199
add resolver info to signal that there

2063
01:21:39,199 --> 01:21:40,880
is support for this and that the

2064
01:21:40,880 --> 01:21:42,639
information returned in there is

2065
01:21:42,639 --> 01:21:44,639
actually from that first top resolver

2066
01:21:44,639 --> 01:21:46,480
and not being sent down

2067
01:21:46,480 --> 01:21:48,960
from something else and causing the ede

2068
01:21:48,960 --> 01:21:51,840
to get propagated

2069
01:21:52,480 --> 01:21:54,560
and the next slide please

2070
01:21:54,560 --> 01:21:58,320
it shows an example uh what the json is

2071
01:21:58,320 --> 01:22:00,000
that's being sent and that's currently

2072
01:22:00,000 --> 01:22:03,040
being sent in the ede um

2073
01:22:03,040 --> 01:22:05,920
text field uh so instead of sending you

2074
01:22:05,920 --> 01:22:08,960
know human parsible text it's got

2075
01:22:08,960 --> 01:22:11,280
kind of human parcelable json

2076
01:22:11,280 --> 01:22:15,360
and that's my update next slide please

2077
01:22:15,360 --> 01:22:18,480
and i'm wondering if there's any

2078
01:22:18,480 --> 01:22:21,040
further interest in this uh there seems

2079
01:22:21,040 --> 01:22:21,920
to be

2080
01:22:21,920 --> 01:22:23,360
um and

2081
01:22:23,360 --> 01:22:25,360
would certainly like any comments from

2082
01:22:25,360 --> 01:22:30,239
the room or from the 108 other people

2083
01:22:31,120 --> 01:22:32,960
thank you there's one

2084
01:22:32,960 --> 01:22:34,800
question from the room

2085
01:22:34,800 --> 01:22:36,159
john

2086
01:22:36,159 --> 01:22:36,960
i'm

2087
01:22:36,960 --> 01:22:38,960
john o'brien university of pennsylvania

2088
01:22:38,960 --> 01:22:42,800
um i'm curious if you've looked at uh

2089
01:22:42,800 --> 01:22:44,639
whether this could interoperate usefully

2090
01:22:44,639 --> 01:22:46,880
with response policy zones

2091
01:22:46,880 --> 01:22:48,080
um

2092
01:22:48,080 --> 01:22:50,239
and uh if not uh that seems like it

2093
01:22:50,239 --> 01:22:51,199
would be

2094
01:22:51,199 --> 01:22:52,159
a

2095
01:22:52,159 --> 01:22:54,000
valuable addition

2096
01:22:54,000 --> 01:22:56,880
okay thanks

2097
01:23:05,120 --> 01:23:08,800
um better please

2098
01:23:09,520 --> 01:23:12,239
mike is yours

2099
01:23:16,159 --> 01:23:18,800
hello once again can you hear me now

2100
01:23:18,800 --> 01:23:21,280
yes yes excellent

2101
01:23:21,280 --> 01:23:23,920
uh i like the changes and how i hope

2102
01:23:23,920 --> 01:23:25,840
that the browser vendors will like them

2103
01:23:25,840 --> 01:23:27,840
as well do you have any feedback from

2104
01:23:27,840 --> 01:23:30,239
either google people or firefox people

2105
01:23:30,239 --> 01:23:32,880
how they think about the latest changes

2106
01:23:32,880 --> 01:23:34,639
because that that was the manage last

2107
01:23:34,639 --> 01:23:35,840
time right

2108
01:23:35,840 --> 01:23:38,719
right that was the main issue um

2109
01:23:38,719 --> 01:23:40,719
tyro has received some positive feedback

2110
01:23:40,719 --> 01:23:43,280
i forgot from whom i'm sorry um

2111
01:23:43,280 --> 01:23:44,639
but uh

2112
01:23:44,639 --> 01:23:48,960
it it seems um more amenable to browsers

2113
01:23:48,960 --> 01:23:50,560
especially you know getting rid of the

2114
01:23:50,560 --> 01:23:52,800
freeform text and going to error code

2115
01:23:52,800 --> 01:23:55,040
numbers so that then the browser can

2116
01:23:55,040 --> 01:23:57,120
localize the message

2117
01:23:57,120 --> 01:23:59,760
and also especially not to display that

2118
01:23:59,760 --> 01:24:02,960
the freeform text that we had previously

2119
01:24:02,960 --> 01:24:05,360
that seemed to resolve uh most of the

2120
01:24:05,360 --> 01:24:07,679
issues that we'd been getting feedback

2121
01:24:07,679 --> 01:24:09,360
on for those

2122
01:24:09,360 --> 01:24:11,120
but unfortunately turo is asleep right

2123
01:24:11,120 --> 01:24:12,159
now

2124
01:24:12,159 --> 01:24:14,560
so i don't know who those uh specific

2125
01:24:14,560 --> 01:24:16,560
folks were unfortunately sorry i'll get

2126
01:24:16,560 --> 01:24:19,679
him to follow up with you peter

2127
01:24:20,480 --> 01:24:22,000
thank you

2128
01:24:22,000 --> 01:24:26,320
brett also repo remote participants

2129
01:24:29,600 --> 01:24:31,360
i just want to add my support to

2130
01:24:31,360 --> 01:24:33,679
adoption of this and um

2131
01:24:33,679 --> 01:24:36,880
and also um agree with the previous

2132
01:24:36,880 --> 01:24:39,280
guy who uh who mentioned supporting of

2133
01:24:39,280 --> 01:24:42,800
uh of rpg this would be uh really useful

2134
01:24:42,800 --> 01:24:44,719
operationally for us

2135
01:24:44,719 --> 01:24:46,320
for our

2136
01:24:46,320 --> 01:24:48,880
protective dns resolver that we we

2137
01:24:48,880 --> 01:24:51,679
operate in the uk

2138
01:24:51,920 --> 01:24:55,480
cool thank you

2139
01:24:58,639 --> 01:24:59,920
ben schwartz

2140
01:24:59,920 --> 01:25:02,560
uh i i do think that this this revision

2141
01:25:02,560 --> 01:25:04,080
is an improvement

2142
01:25:04,080 --> 01:25:05,440
um

2143
01:25:05,440 --> 01:25:06,880
i

2144
01:25:06,880 --> 01:25:08,320
i still

2145
01:25:08,320 --> 01:25:10,159
wonder i wonder a few things i wonder if

2146
01:25:10,159 --> 01:25:12,400
dns op is

2147
01:25:12,400 --> 01:25:15,360
uh is really well placed to to deal with

2148
01:25:15,360 --> 01:25:17,760
this i think that this is really

2149
01:25:17,760 --> 01:25:19,199
getting to a much

2150
01:25:19,199 --> 01:25:21,840
much deeper and thornier question

2151
01:25:21,840 --> 01:25:23,280
uh of

2152
01:25:23,280 --> 01:25:27,040
how uh how malware type filtering ought

2153
01:25:27,040 --> 01:25:27,760
to

2154
01:25:27,760 --> 01:25:31,360
work in uh in a user device

2155
01:25:31,360 --> 01:25:32,400
setting

2156
01:25:32,400 --> 01:25:35,280
uh you know the major browsers today

2157
01:25:35,280 --> 01:25:36,800
already have

2158
01:25:36,800 --> 01:25:38,400
functionality of their own here in the

2159
01:25:38,400 --> 01:25:40,800
context of things like safe browsing and

2160
01:25:40,800 --> 01:25:43,120
those systems aren't simple query

2161
01:25:43,120 --> 01:25:44,560
response

2162
01:25:44,560 --> 01:25:47,440
systems in the way that the dns is for

2163
01:25:47,440 --> 01:25:49,440
example instead they

2164
01:25:49,440 --> 01:25:51,440
tend to use

2165
01:25:51,440 --> 01:25:54,320
complicated quasi information retrieval

2166
01:25:54,320 --> 01:25:56,159
algorithms to avoid

2167
01:25:56,159 --> 01:25:59,199
revealing private user information

2168
01:25:59,199 --> 01:26:00,320
uh you know

2169
01:26:00,320 --> 01:26:02,480
we can yes we can we can sort of stuff

2170
01:26:02,480 --> 01:26:05,040
this kind of functionality into the dns

2171
01:26:05,040 --> 01:26:06,000
but

2172
01:26:06,000 --> 01:26:08,719
uh should we

2173
01:26:08,719 --> 01:26:10,320
okay thank you i

2174
01:26:10,320 --> 01:26:14,320
well tim wants to respond to that

2175
01:26:18,239 --> 01:26:19,920
sorry i made i made this comment in the

2176
01:26:19,920 --> 01:26:22,000
chat but the chairs are interested in

2177
01:26:22,000 --> 01:26:23,440
this but we'd like to hear from folks

2178
01:26:23,440 --> 01:26:24,159
who are actually going to be

2179
01:26:24,159 --> 01:26:25,199
implementing this because that will

2180
01:26:25,199 --> 01:26:27,199
actually help us drive

2181
01:26:27,199 --> 01:26:28,960
you know the sort of where we if the

2182
01:26:28,960 --> 01:26:30,320
working group sort of takes us on as

2183
01:26:30,320 --> 01:26:32,239
well so if folks are interested in

2184
01:26:32,239 --> 01:26:33,840
implementing please speak up and give us

2185
01:26:33,840 --> 01:26:36,239
some heads up and that'll help us a lot

2186
01:26:36,239 --> 01:26:38,559
thanks

2187
01:26:39,199 --> 01:26:41,280
yeah in indeed so

2188
01:26:41,280 --> 01:26:43,679
uh outside the genius of working group

2189
01:26:43,679 --> 01:26:47,040
we did hear from other

2190
01:26:47,280 --> 01:26:48,239
people

2191
01:26:48,239 --> 01:26:50,080
that were interested in the draft and

2192
01:26:50,080 --> 01:26:52,400
also probably interested in implementing

2193
01:26:52,400 --> 01:26:54,480
but we would like to hear that also in

2194
01:26:54,480 --> 01:26:57,360
the working group and maybe well um we

2195
01:26:57,360 --> 01:26:59,760
will plan a call with with dan and the

2196
01:26:59,760 --> 01:27:03,120
chairs how to go forward and get more

2197
01:27:03,120 --> 01:27:04,639
well

2198
01:27:04,639 --> 01:27:06,000
uh

2199
01:27:06,000 --> 01:27:08,560
support or explicit support of the

2200
01:27:08,560 --> 01:27:11,600
implementation potential implementations

2201
01:27:11,600 --> 01:27:13,120
okay yeah

2202
01:27:13,120 --> 01:27:14,880
awesome thank you

2203
01:27:14,880 --> 01:27:19,600
thank you oh sorry we still have two oh

2204
01:27:19,600 --> 01:27:22,320
i hope dan is still online there's still

2205
01:27:22,320 --> 01:27:24,159
still two questions here

2206
01:27:24,159 --> 01:27:27,120
uh jonathan

2207
01:27:27,760 --> 01:27:29,920
uh yeah i i was just giving another

2208
01:27:29,920 --> 01:27:32,639
that's one i support adoption of this um

2209
01:27:32,639 --> 01:27:34,719
i can't personally commit to akamai

2210
01:27:34,719 --> 01:27:37,360
implementing this but i could see uh

2211
01:27:37,360 --> 01:27:39,520
uh i could see it being very feasible

2212
01:27:39,520 --> 01:27:41,679
for us to implement for our

2213
01:27:41,679 --> 01:27:42,480
uh

2214
01:27:42,480 --> 01:27:44,480
services that we offer

2215
01:27:44,480 --> 01:27:46,400
that provide filtered responses

2216
01:27:46,400 --> 01:27:48,719
um and i think you know

2217
01:27:48,719 --> 01:27:50,800
and ben's question about is dns upright

2218
01:27:50,800 --> 01:27:53,920
is a fair one um i do feel like every

2219
01:27:53,920 --> 01:27:56,400
time there's a real world problem that

2220
01:27:56,400 --> 01:27:57,920
operators are coming and saying this is

2221
01:27:57,920 --> 01:28:00,080
an issue the question comes up of is

2222
01:28:00,080 --> 01:28:01,360
this a right working group and my

2223
01:28:01,360 --> 01:28:03,040
question is if not this one which one

2224
01:28:03,040 --> 01:28:05,199
right because i think you know this is a

2225
01:28:05,199 --> 01:28:07,199
problem for operators and i think we are

2226
01:28:07,199 --> 01:28:09,280
empowered to address this and this is

2227
01:28:09,280 --> 01:28:12,840
the right place for this

2228
01:28:14,080 --> 01:28:16,719
thank you thank you

2229
01:28:17,040 --> 01:28:19,679
uh dr carney uh my comment is mostly

2230
01:28:19,679 --> 01:28:22,800
actually back to ben i think uh i don't

2231
01:28:22,800 --> 01:28:25,520
think this is a new mechanism to you

2232
01:28:25,520 --> 01:28:27,840
know implement uh virus scanning that

2233
01:28:27,840 --> 01:28:31,120
isn't of any sort this is really to deal

2234
01:28:31,120 --> 01:28:34,880
with reporting existing rpz feeds

2235
01:28:34,880 --> 01:28:37,120
and and their classification

2236
01:28:37,120 --> 01:28:39,600
of a domain it's already blocked

2237
01:28:39,600 --> 01:28:42,159
we're just adding transparency as to why

2238
01:28:42,159 --> 01:28:44,560
so the user can be told why the dns name

2239
01:28:44,560 --> 01:28:46,719
isn't resolving so i don't think it's in

2240
01:28:46,719 --> 01:28:48,800
conflict with any

2241
01:28:48,800 --> 01:28:51,040
more sophisticated or active filtering

2242
01:28:51,040 --> 01:28:52,639
that the browser is doing with the

2243
01:28:52,639 --> 01:28:54,639
content at hand

2244
01:28:54,639 --> 01:28:57,040
it's really reporting dns resolution

2245
01:28:57,040 --> 01:28:58,320
that's going to happen one way or the

2246
01:28:58,320 --> 01:28:59,840
other and

2247
01:28:59,840 --> 01:29:02,000
telling the user why

2248
01:29:02,000 --> 01:29:02,880
okay

2249
01:29:02,880 --> 01:29:04,320
thank you

2250
01:29:04,320 --> 01:29:08,679
um thank you chris

2251
01:29:11,280 --> 01:29:14,639
hi chris box uh bt uh as a customer of

2252
01:29:14,639 --> 01:29:17,360
powerdns uh i would like to see this

2253
01:29:17,360 --> 01:29:19,280
developed and we would deploy it in the

2254
01:29:19,280 --> 01:29:21,679
network okay

2255
01:29:21,679 --> 01:29:22,960
thank you

2256
01:29:22,960 --> 01:29:25,840
thank you john

2257
01:29:28,239 --> 01:29:30,639
it just occurs to me that since

2258
01:29:30,639 --> 01:29:32,880
the web or the internet hasn't been

2259
01:29:32,880 --> 01:29:35,920
completely overtaken by http uh that

2260
01:29:35,920 --> 01:29:38,960
this would be useful for

2261
01:29:38,960 --> 01:29:42,000
applications other than web browsers

2262
01:29:42,000 --> 01:29:42,880
that

2263
01:29:42,880 --> 01:29:43,840
can't

2264
01:29:43,840 --> 01:29:46,000
present a captive portal and might still

2265
01:29:46,000 --> 01:29:48,560
like to be able to propagate up

2266
01:29:48,560 --> 01:29:50,880
exception information of this kind

2267
01:29:50,880 --> 01:29:51,760
to

2268
01:29:51,760 --> 01:29:55,360
a logger or some sort of user

2269
01:29:56,080 --> 01:29:58,800
cool thank you

2270
01:29:58,800 --> 01:30:01,360
thank you okay thank you all thank you

2271
01:30:01,360 --> 01:30:02,960
thank you dan

2272
01:30:02,960 --> 01:30:05,960
um

2273
01:30:06,000 --> 01:30:08,400
thank you

2274
01:30:08,719 --> 01:30:11,880
i will

2275
01:30:21,040 --> 01:30:22,960
hi um

2276
01:30:22,960 --> 01:30:24,719
i'll have slides in a second right so

2277
01:30:24,719 --> 01:30:26,800
i'm here to speak about um some research

2278
01:30:26,800 --> 01:30:28,320
is trying to answer a long-standing open

2279
01:30:28,320 --> 01:30:31,280
question about um dns second internet um

2280
01:30:31,280 --> 01:30:33,360
this is joint work with austin hensel

2281
01:30:33,360 --> 01:30:34,719
and nick femster from princeton and

2282
01:30:34,719 --> 01:30:36,400
chris wood from cloudflare

2283
01:30:36,400 --> 01:30:38,000
um so

2284
01:30:38,000 --> 01:30:40,880
uh next slide please

2285
01:30:42,159 --> 01:30:42,960
so

2286
01:30:42,960 --> 01:30:44,400
here this is this is not my work this is

2287
01:30:44,400 --> 01:30:46,560
work by evp nick i guess jeff houston

2288
01:30:46,560 --> 01:30:48,560
probably uh measuring the extent of dns

2289
01:30:48,560 --> 01:30:50,080
validation on the internet so as you can

2290
01:30:50,080 --> 01:30:52,159
see there's quite a bit um that you know

2291
01:30:52,159 --> 01:30:53,440
this line's a little hard to follow but

2292
01:30:53,440 --> 01:30:55,040
like you know something on the order of

2293
01:30:55,040 --> 01:30:58,560
like 40 total validation rates um so

2294
01:30:58,560 --> 01:31:00,800
that's like seems like good news um

2295
01:31:00,800 --> 01:31:03,600
except next slide

2296
01:31:03,600 --> 01:31:05,840
um basically all that validation is done

2297
01:31:05,840 --> 01:31:08,480
by recursive resolvers not by um

2298
01:31:08,480 --> 01:31:10,800
endpoints um in fact some of the dsgs is

2299
01:31:10,800 --> 01:31:12,400
like largely google public dns and

2300
01:31:12,400 --> 01:31:13,760
people and you know cloudflare people

2301
01:31:13,760 --> 01:31:16,560
like that um so um

2302
01:31:16,560 --> 01:31:18,719
uh so no major operating system although

2303
01:31:18,719 --> 01:31:21,040
do endpoint dns validation by default um

2304
01:31:21,040 --> 01:31:23,199
window um apple just will just roll this

2305
01:31:23,199 --> 01:31:24,239
out but i check with tommy paulie and

2306
01:31:24,239 --> 01:31:25,840
you have to turn it on for yourself

2307
01:31:25,840 --> 01:31:28,800
um and browsers won't do it either um

2308
01:31:28,800 --> 01:31:30,800
and this is obviously super limiting um

2309
01:31:30,800 --> 01:31:32,000
and if you want to roll out any feature

2310
01:31:32,000 --> 01:31:34,239
that requires like um dns second

2311
01:31:34,239 --> 01:31:35,520
requires not trusting the recursive

2312
01:31:35,520 --> 01:31:38,880
resolver um like dane then you need um

2313
01:31:38,880 --> 01:31:40,880
the endpoint validation um by the way

2314
01:31:40,880 --> 01:31:42,320
this is like this talk is like entirely

2315
01:31:42,320 --> 01:31:44,880
about like um endpoints um like consumer

2316
01:31:44,880 --> 01:31:46,560
endpoints this doesn't apply to like

2317
01:31:46,560 --> 01:31:48,000
like like server machine server class

2318
01:31:48,000 --> 01:31:49,600
machines i know there's quite a bit of

2319
01:31:49,600 --> 01:31:51,120
dns validation for like send mail and

2320
01:31:51,120 --> 01:31:52,239
stuff like that for mail and stuff like

2321
01:31:52,239 --> 01:31:53,199
that it's not what i'm talking about

2322
01:31:53,199 --> 01:31:54,239
here

2323
01:31:54,239 --> 01:31:55,760
um

2324
01:31:55,760 --> 01:31:57,760
next slide

2325
01:31:57,760 --> 01:31:58,480
so

2326
01:31:58,480 --> 01:32:00,560
um as a browser manufacturer i often get

2327
01:32:00,560 --> 01:32:03,040
asked why don't you jerks validate um

2328
01:32:03,040 --> 01:32:05,120
and um so i've i've produced a set of

2329
01:32:05,120 --> 01:32:07,760
answers for this um so on one answer

2330
01:32:07,760 --> 01:32:10,320
people often give um and there was um is

2331
01:32:10,320 --> 01:32:12,159
performance namely you have to do more

2332
01:32:12,159 --> 01:32:13,679
requests and maybe someone will fail or

2333
01:32:13,679 --> 01:32:14,719
maybe have some trouble doing them in

2334
01:32:14,719 --> 01:32:16,960
parallel somebody'll be slower um but

2335
01:32:16,960 --> 01:32:19,040
the primary reason the one highlighted

2336
01:32:19,040 --> 01:32:21,040
in in bold here is we're concerned about

2337
01:32:21,040 --> 01:32:22,159
breakage

2338
01:32:22,159 --> 01:32:25,360
so um what happens if you have a

2339
01:32:25,360 --> 01:32:27,040
some sort of middle box whether it's

2340
01:32:27,040 --> 01:32:28,639
your recursive resolver or proxy

2341
01:32:28,639 --> 01:32:30,639
whatever that doesn't deliver the dns

2342
01:32:30,639 --> 01:32:33,280
records or mangles them in some way

2343
01:32:33,280 --> 01:32:35,199
this is indistinguishable from an attack

2344
01:32:35,199 --> 01:32:36,960
what you know is you know there's like a

2345
01:32:36,960 --> 01:32:38,480
ds record and you know things should

2346
01:32:38,480 --> 01:32:39,679
have been signed

2347
01:32:39,679 --> 01:32:41,360
but congratulations they're not or these

2348
01:32:41,360 --> 01:32:42,880
two can't validate it

2349
01:32:42,880 --> 01:32:44,080
and what you're supposed to do according

2350
01:32:44,080 --> 01:32:45,600
to the rfcs at this point is to hard

2351
01:32:45,600 --> 01:32:47,600
fail is refuse to accept the data you've

2352
01:32:47,600 --> 01:32:48,800
been sent

2353
01:32:48,800 --> 01:32:50,480
um but like when you're looking up an a

2354
01:32:50,480 --> 01:32:53,679
record if i respond to that by hard fail

2355
01:32:53,679 --> 01:32:55,040
that my user sees as they're trying to

2356
01:32:55,040 --> 01:32:57,760
go to a site and they can't get there

2357
01:32:57,760 --> 01:33:00,159
and the general sense among people who

2358
01:33:00,159 --> 01:33:01,679
actually build this stuff

2359
01:33:01,679 --> 01:33:03,040
is that any significant rate of

2360
01:33:03,040 --> 01:33:04,960
non-delivery like in excess of like

2361
01:33:04,960 --> 01:33:06,719
fractions of a percent will create

2362
01:33:06,719 --> 01:33:08,480
unacceptable failure rates what i mean

2363
01:33:08,480 --> 01:33:10,480
by that is that if we roll out some new

2364
01:33:10,480 --> 01:33:12,159
piece of functionality in the client

2365
01:33:12,159 --> 01:33:13,679
and we see an increase in failure rates

2366
01:33:13,679 --> 01:33:15,040
that is like in excess of a fraction of

2367
01:33:15,040 --> 01:33:16,719
a percent it's unacceptable we have to

2368
01:33:16,719 --> 01:33:17,920
back out

2369
01:33:17,920 --> 01:33:19,679
um there's really been very little data

2370
01:33:19,679 --> 01:33:20,639
about this

2371
01:33:20,639 --> 01:33:23,679
um the uh there's some work by um by my

2372
01:33:23,679 --> 01:33:25,360
team of years ago um only some people

2373
01:33:25,360 --> 01:33:27,920
use csd um there was a thing about maybe

2374
01:33:27,920 --> 01:33:30,239
10 years ago by adam langley where they

2375
01:33:30,239 --> 01:33:31,199
tried to

2376
01:33:31,199 --> 01:33:33,360
retrieve random text records um from the

2377
01:33:33,360 --> 01:33:34,639
internet and like had like five percent

2378
01:33:34,639 --> 01:33:36,719
failure rates um so five percent would

2379
01:33:36,719 --> 01:33:38,719
be way way excessive and so adam has

2380
01:33:38,719 --> 01:33:40,000
this like famous post that we often

2381
01:33:40,000 --> 01:33:41,679
refer to about why people don't do this

2382
01:33:41,679 --> 01:33:43,679
and it like refers this experiment but

2383
01:33:43,679 --> 01:33:45,920
like that's not dns sec um it's text

2384
01:33:45,920 --> 01:33:48,159
records and it's a long time ago

2385
01:33:48,159 --> 01:33:49,760
so we decided to try to answer this

2386
01:33:49,760 --> 01:33:50,560
question

2387
01:33:50,560 --> 01:33:52,719
next slide please

2388
01:33:52,719 --> 01:33:54,000
so this is a very straightforward

2389
01:33:54,000 --> 01:33:55,360
experimental setup

2390
01:33:55,360 --> 01:33:57,040
we set up some domains that we control

2391
01:33:57,040 --> 01:33:58,400
ourselves

2392
01:33:58,400 --> 01:34:00,400
they have valid records one trusts

2393
01:34:00,400 --> 01:34:01,840
because we can set them up

2394
01:34:01,840 --> 01:34:03,280
actually cloudflare shut them up with

2395
01:34:03,280 --> 01:34:05,760
their automatic you know signing um so

2396
01:34:05,760 --> 01:34:08,719
we have correct dns records rrsa xds dsq

2397
01:34:08,719 --> 01:34:10,560
whatever we also have some other less

2398
01:34:10,560 --> 01:34:12,560
common records um which i'll get to in a

2399
01:34:12,560 --> 01:34:16,320
minute like https um service b on sma

2400
01:34:16,320 --> 01:34:18,400
some new records we made up and we use

2401
01:34:18,400 --> 01:34:20,480
firefox as a measurement platform

2402
01:34:20,480 --> 01:34:21,920
so what we do is we randomly select

2403
01:34:21,920 --> 01:34:25,280
select a sub sample of firefox glance

2404
01:34:25,280 --> 01:34:26,880
and then each client tries to directly

2405
01:34:26,880 --> 01:34:28,800
resolve the relevant records we don't

2406
01:34:28,800 --> 01:34:30,560
use the we do use the system resolver to

2407
01:34:30,560 --> 01:34:32,880
live in a second but not for this so for

2408
01:34:32,880 --> 01:34:34,560
this we do we do like a udp you know we

2409
01:34:34,560 --> 01:34:36,800
look up the operating systems resolver

2410
01:34:36,800 --> 01:34:38,159
and then we talk to it directly with udp

2411
01:34:38,159 --> 01:34:39,440
or tcp

2412
01:34:39,440 --> 01:34:41,199
and we ask it for records and we see

2413
01:34:41,199 --> 01:34:42,480
what the answers are we measure the

2414
01:34:42,480 --> 01:34:44,239
success rate

2415
01:34:44,239 --> 01:34:46,320
next slide

2416
01:34:46,320 --> 01:34:48,400
so here are the queries we do

2417
01:34:48,400 --> 01:34:49,679
um and we do use like we do some of

2418
01:34:49,679 --> 01:34:50,800
these in a random order and some of them

2419
01:34:50,800 --> 01:34:51,600
not

2420
01:34:51,600 --> 01:34:52,320
um

2421
01:34:52,320 --> 01:34:54,400
we start with looking using the firefox

2422
01:34:54,400 --> 01:34:56,639
dns resolve api which just talks to the

2423
01:34:56,639 --> 01:34:58,000
system resolver and this is just to

2424
01:34:58,000 --> 01:34:59,440
verify like everything's working so we

2425
01:34:59,440 --> 01:35:01,119
can't get this then like things aren't

2426
01:35:01,119 --> 01:35:03,119
going to work it also gives us a control

2427
01:35:03,119 --> 01:35:04,800
based line of what like a failure rate

2428
01:35:04,800 --> 01:35:06,400
ought to look like

2429
01:35:06,400 --> 01:35:08,320
then we look then we ask for a nsa

2430
01:35:08,320 --> 01:35:10,400
randomly we ask for a records with all

2431
01:35:10,400 --> 01:35:13,280
possible values of d o and c d um i said

2432
01:35:13,280 --> 01:35:15,119
some people we um hear me remember i

2433
01:35:15,119 --> 01:35:16,320
sent mail of the mailing list asking

2434
01:35:16,320 --> 01:35:18,000
what to set these values to so we set

2435
01:35:18,000 --> 01:35:18,960
them all

2436
01:35:18,960 --> 01:35:21,679
um just to be sure um we tried dns key

2437
01:35:21,679 --> 01:35:24,080
we asked for service b we asked for sma

2438
01:35:24,080 --> 01:35:25,600
and we asked for four records with all

2439
01:35:25,600 --> 01:35:27,600
combinations of small and large and code

2440
01:35:27,600 --> 01:35:28,960
points in expert review and private use

2441
01:35:28,960 --> 01:35:30,000
ranges

2442
01:35:30,000 --> 01:35:31,520
um and all these as i say are like

2443
01:35:31,520 --> 01:35:32,960
correctly populated so they should they

2444
01:35:32,960 --> 01:35:34,880
should all succeed

2445
01:35:34,880 --> 01:35:35,600
so

2446
01:35:35,600 --> 01:35:37,040
here's the next slide this is where the

2447
01:35:37,040 --> 01:35:39,600
actual answer is question um so red here

2448
01:35:39,600 --> 01:35:41,199
is just dns sec

2449
01:35:41,199 --> 01:35:44,480
so the baseline failure rate

2450
01:35:44,480 --> 01:35:46,960
um i'm sorry i did lose dns resolve um

2451
01:35:46,960 --> 01:35:48,880
so that's um that's unfortunate um the

2452
01:35:48,880 --> 01:35:50,080
baseline failure rate is about two

2453
01:35:50,080 --> 01:35:51,440
percent which is like a little

2454
01:35:51,440 --> 01:35:53,600
surprisingly high actually um

2455
01:35:53,600 --> 01:35:55,520
uh dms resolved about one percent a

2456
01:35:55,520 --> 01:35:56,480
little less

2457
01:35:56,480 --> 01:35:58,719
um so there's some extra something quite

2458
01:35:58,719 --> 01:36:00,159
quite right with resolve that's causing

2459
01:36:00,159 --> 01:36:01,440
like a little diff that we're not sure

2460
01:36:01,440 --> 01:36:04,480
about um but if you look the um

2461
01:36:04,480 --> 01:36:06,320
as soon as we start asking and so this

2462
01:36:06,320 --> 01:36:07,840
um this failure rates are are we getting

2463
01:36:07,840 --> 01:36:09,119
the correct answers it's a combination

2464
01:36:09,119 --> 01:36:10,719
of we got like nothing and do we get

2465
01:36:10,719 --> 01:36:12,400
like the thing doesn't match

2466
01:36:12,400 --> 01:36:15,520
and so as you can see um if we just do

2467
01:36:15,520 --> 01:36:18,080
um the straight up

2468
01:36:18,080 --> 01:36:20,159
are these all off by one

2469
01:36:20,159 --> 01:36:22,000
these may all be one which is really

2470
01:36:22,000 --> 01:36:25,199
embarrassing um um the bottom line

2471
01:36:25,199 --> 01:36:26,560
straight up answer is

2472
01:36:26,560 --> 01:36:28,080
dad all right i see what's going on okay

2473
01:36:28,080 --> 01:36:29,840
sorry um so the bottom line straight up

2474
01:36:29,840 --> 01:36:31,199
answer is that if as soon as we try to

2475
01:36:31,199 --> 01:36:32,800
ask for our sake we don't get it we

2476
01:36:32,800 --> 01:36:34,960
don't get it like a third of the time

2477
01:36:34,960 --> 01:36:37,280
um so and and like we like looked at

2478
01:36:37,280 --> 01:36:38,400
this eight ways from sunday we looked at

2479
01:36:38,400 --> 01:36:39,840
the things by hand and like a lot of

2480
01:36:39,840 --> 01:36:40,880
them are too small so they couldn't

2481
01:36:40,880 --> 01:36:42,400
possibly have an rseg they don't have

2482
01:36:42,400 --> 01:36:43,840
truncations yet it's just like oh come

2483
01:36:43,840 --> 01:36:44,560
on

2484
01:36:44,560 --> 01:36:46,880
um um if you if your cd equals one of

2485
01:36:46,880 --> 01:36:48,000
course you don't get it at all which is

2486
01:36:48,000 --> 01:36:50,239
expected um but if you do do you don't

2487
01:36:50,239 --> 01:36:53,199
get it basically right um

2488
01:36:53,199 --> 01:36:55,600
so um dns key you get

2489
01:36:55,600 --> 01:36:57,520
um so that's fine but you don't get rsa

2490
01:36:57,520 --> 01:36:58,560
basically

2491
01:36:58,560 --> 01:36:59,600
um

2492
01:36:59,600 --> 01:37:00,880
you don't um and then these other

2493
01:37:00,880 --> 01:37:02,880
records it kind of works sometimes so

2494
01:37:02,880 --> 01:37:04,560
like if you ask for s my may you get it

2495
01:37:04,560 --> 01:37:06,320
like percent of time sorry 85 percent of

2496
01:37:06,320 --> 01:37:08,560
time ask for https you get like 93 of

2497
01:37:08,560 --> 01:37:10,400
the time um and these other records kind

2498
01:37:10,400 --> 01:37:13,600
of work sometimes um but um

2499
01:37:13,600 --> 01:37:15,920
you know uh not reliably um and the

2500
01:37:15,920 --> 01:37:17,920
bigger the record the worse it is

2501
01:37:17,920 --> 01:37:19,199
um it doesn't seem to matter whether

2502
01:37:19,199 --> 01:37:20,719
it's in private use or whether it's in

2503
01:37:20,719 --> 01:37:23,119
um whether it's in uh non-private use

2504
01:37:23,119 --> 01:37:24,159
um

2505
01:37:24,159 --> 01:37:25,760
so

2506
01:37:25,760 --> 01:37:28,080
this is like what we see um i'd be happy

2507
01:37:28,080 --> 01:37:29,840
to talk to people offline about this or

2508
01:37:29,840 --> 01:37:32,239
online about the methodology here um but

2509
01:37:32,239 --> 01:37:35,040
this is basically what we see here um

2510
01:37:35,040 --> 01:37:37,040
uh we don't by the way we don't um we

2511
01:37:37,040 --> 01:37:38,639
did actually ask this is all with you

2512
01:37:38,639 --> 01:37:40,000
tcp is a disaster like he's gonna get

2513
01:37:40,000 --> 01:37:42,800
twenty percent right across the board um

2514
01:37:42,800 --> 01:37:44,159
if you uh

2515
01:37:44,159 --> 01:37:45,840
just apply a little more color we did

2516
01:37:45,840 --> 01:37:47,360
try asking for rsx separately that also

2517
01:37:47,360 --> 01:37:48,960
doesn't work very well by the way um

2518
01:37:48,960 --> 01:37:50,960
it's not even clear that should work um

2519
01:37:50,960 --> 01:37:52,639
we didn't as an admission we didn't ask

2520
01:37:52,639 --> 01:37:54,080
for ds but obviously we don't have our

2521
01:37:54,080 --> 01:37:55,840
essay this won't work so doesn't matter

2522
01:37:55,840 --> 01:37:58,800
um next slide

2523
01:37:58,800 --> 01:38:00,960
so like what's the impact of this

2524
01:38:00,960 --> 01:38:02,880
um bottom line here is not safe to

2525
01:38:02,880 --> 01:38:04,560
enable endpoint dns validation over to

2526
01:38:04,560 --> 01:38:07,679
53 for like generic endpoint clients

2527
01:38:07,679 --> 01:38:09,679
um it's probably not fine for server

2528
01:38:09,679 --> 01:38:10,880
class machines but it's not fine for

2529
01:38:10,880 --> 01:38:12,400
client class machines

2530
01:38:12,400 --> 01:38:13,840
um

2531
01:38:13,840 --> 01:38:15,199
it might well be safe to enable them

2532
01:38:15,199 --> 01:38:16,560
over doe or dot

2533
01:38:16,560 --> 01:38:18,719
um we did sort of experimentally measure

2534
01:38:18,719 --> 01:38:20,320
the public resolvers and they seem to do

2535
01:38:20,320 --> 01:38:21,280
just fine

2536
01:38:21,280 --> 01:38:22,920
so if you like you know if you ask like

2537
01:38:22,920 --> 01:38:26,000
1.1.1.1 or 888 like they do a fine job

2538
01:38:26,000 --> 01:38:28,159
of giving these answers um it might be

2539
01:38:28,159 --> 01:38:29,840
the case that add advertising resolvers

2540
01:38:29,840 --> 01:38:30,880
do better

2541
01:38:30,880 --> 01:38:32,560
but of course we don't really know yet

2542
01:38:32,560 --> 01:38:33,600
because that doesn't really exist but

2543
01:38:33,600 --> 01:38:35,040
like you might imagine he's been updated

2544
01:38:35,040 --> 01:38:37,119
just a bit of job um the security

2545
01:38:37,119 --> 01:38:39,040
posture is a little confusing

2546
01:38:39,040 --> 01:38:40,080
um

2547
01:38:40,080 --> 01:38:41,520
it's somewhat practical to deploy other

2548
01:38:41,520 --> 01:38:43,440
record types so if you have a new record

2549
01:38:43,440 --> 01:38:44,719
type where it's like if it worked 80

2550
01:38:44,719 --> 01:38:47,119
percent time that'd be great like https

2551
01:38:47,119 --> 01:38:49,360
then like that really is fine um if you

2552
01:38:49,360 --> 01:38:50,320
have but if you have something where it

2553
01:38:50,320 --> 01:38:51,679
is where all time like basically it's

2554
01:38:51,679 --> 01:38:52,960
not safe to do anything that isn't

2555
01:38:52,960 --> 01:38:54,880
basically like a and c name

2556
01:38:54,880 --> 01:38:55,760
um

2557
01:38:55,760 --> 01:38:58,639
and i guess ns um there seems to be some

2558
01:38:58,639 --> 01:39:00,239
variation like https looks especially

2559
01:39:00,239 --> 01:39:01,440
good that may just because it's smaller

2560
01:39:01,440 --> 01:39:03,280
than symme we're not sure

2561
01:39:03,280 --> 01:39:04,239
um

2562
01:39:04,239 --> 01:39:06,239
so anyway this is the bottom line for us

2563
01:39:06,239 --> 01:39:08,800
um uh uh we have a paper that we've

2564
01:39:08,800 --> 01:39:09,920
written that we're not quite ready to

2565
01:39:09,920 --> 01:39:11,199
like publish but we'll publish pretty

2566
01:39:11,199 --> 01:39:12,960
soon that has more diesel methodology

2567
01:39:12,960 --> 01:39:14,159
i'm happy to answer of course any

2568
01:39:14,159 --> 01:39:17,519
questions about this people have

2569
01:39:19,600 --> 01:39:21,040
thank you

2570
01:39:21,040 --> 01:39:23,199
oh can you go back one side i'm sorry

2571
01:39:23,199 --> 01:39:24,400
so oh

2572
01:39:24,400 --> 01:39:26,159
one came back

2573
01:39:26,159 --> 01:39:27,119
one more thing

2574
01:39:27,119 --> 01:39:28,239
as i was looking at this i realized what

2575
01:39:28,239 --> 01:39:29,440
happened the sorting algorithm was

2576
01:39:29,440 --> 01:39:31,440
running the the the system resolves on

2577
01:39:31,440 --> 01:39:32,639
the bottom it's just point

2578
01:39:32,639 --> 01:39:34,080
point four percent is the uh is the

2579
01:39:34,080 --> 01:39:35,840
figure of system resolver

2580
01:39:35,840 --> 01:39:38,320
yeah hi eric ray bellis i see so do you

2581
01:39:38,320 --> 01:39:39,280
understand correctly these are

2582
01:39:39,280 --> 01:39:41,280
experiments done within a firefox

2583
01:39:41,280 --> 01:39:43,679
browser um

2584
01:39:43,679 --> 01:39:47,360
on end user sites yes okay um

2585
01:39:47,360 --> 01:39:48,800
my own research now which is like 10

2586
01:39:48,800 --> 01:39:51,600
years old showed that home gateway

2587
01:39:51,600 --> 01:39:53,199
resolvers are particularly bad at this

2588
01:39:53,199 --> 01:39:54,800
side of things so i'd very strongly

2589
01:39:54,800 --> 01:39:57,040
suggest you try and maybe enumerate

2590
01:39:57,040 --> 01:39:59,440
whether the resolve you're talking to is

2591
01:39:59,440 --> 01:40:01,840
on the same subnet as the client so you

2592
01:40:01,840 --> 01:40:03,040
can actually tell the difference in the

2593
01:40:03,040 --> 01:40:05,119
stats between on that resolvers and off

2594
01:40:05,119 --> 01:40:07,199
net resolvers that's a good suggestion i

2595
01:40:07,199 --> 01:40:08,480
think we can do that but i'm not sure

2596
01:40:08,480 --> 01:40:10,440
yeah i take a look at take a look at rsc

2597
01:40:10,440 --> 01:40:12,080
5625

2598
01:40:12,080 --> 01:40:14,080
and the sac

2599
01:40:14,080 --> 01:40:15,840
uh

2600
01:40:15,840 --> 01:40:17,360
now if you'd be so good at the email to

2601
01:40:17,360 --> 01:40:18,000
me because i'm not going to remember

2602
01:40:18,000 --> 01:40:19,840
those numbers but yes it is

2603
01:40:19,840 --> 01:40:21,280
of course it's very difficult for us um

2604
01:40:21,280 --> 01:40:23,440
even um well we're talking detail about

2605
01:40:23,440 --> 01:40:24,639
whether we can actually use explicit

2606
01:40:24,639 --> 01:40:25,840
information but for experimental person

2607
01:40:25,840 --> 01:40:28,400
that's a great idea

2608
01:40:28,560 --> 01:40:29,679
okay

2609
01:40:29,679 --> 01:40:33,520
um brian dixon go ahead

2610
01:40:34,000 --> 01:40:37,119
um so yeah sort of back when you raise

2611
01:40:37,119 --> 01:40:38,320
uh

2612
01:40:38,320 --> 01:40:39,600
train of thought

2613
01:40:39,600 --> 01:40:42,159
um do you have the ability or would you

2614
01:40:42,159 --> 01:40:43,679
be able to do

2615
01:40:43,679 --> 01:40:46,560
longitudinal per end user

2616
01:40:46,560 --> 01:40:49,199
uh collection of information to see

2617
01:40:49,199 --> 01:40:50,560
for a particular

2618
01:40:50,560 --> 01:40:51,840
browser

2619
01:40:51,840 --> 01:40:54,880
is the failure rate consistent and are

2620
01:40:54,880 --> 01:40:56,880
you able to track that across network

2621
01:40:56,880 --> 01:40:58,000
changes

2622
01:40:58,000 --> 01:41:00,320
and can you potentially

2623
01:41:00,320 --> 01:41:02,320
aggregate those to

2624
01:41:02,320 --> 01:41:04,960
these customers always failed and

2625
01:41:04,960 --> 01:41:07,199
therefore you could check uh initially

2626
01:41:07,199 --> 01:41:08,719
and if you get failures

2627
01:41:08,719 --> 01:41:10,480
not do the validation but for any of the

2628
01:41:10,480 --> 01:41:12,320
ones that do succeed

2629
01:41:12,320 --> 01:41:14,800
if the longitudinal uh

2630
01:41:14,800 --> 01:41:16,880
collection of data suggests that if it

2631
01:41:16,880 --> 01:41:19,520
succeeds it'll always succeed that that

2632
01:41:19,520 --> 01:41:22,800
information i think would be very useful

2633
01:41:22,800 --> 01:41:24,639
yeah i mean so in principle the answer

2634
01:41:24,639 --> 01:41:25,920
to like can we take that measurement is

2635
01:41:25,920 --> 01:41:27,760
yes in practice the answer is that the

2636
01:41:27,760 --> 01:41:29,280
grad student who did this work has taken

2637
01:41:29,280 --> 01:41:31,040
a job and so probably the answer is no

2638
01:41:31,040 --> 01:41:33,199
um if i manage to find somebody else

2639
01:41:33,199 --> 01:41:34,320
who's going to do the heavy lifting then

2640
01:41:34,320 --> 01:41:37,440
the answer is probably yes again

2641
01:41:38,960 --> 01:41:41,360
hazel

2642
01:41:42,080 --> 01:41:44,159
hi um obviously firstly thank you for

2643
01:41:44,159 --> 01:41:47,199
doing this um one question i had is you

2644
01:41:47,199 --> 01:41:49,280
mentioned i think on slide eight

2645
01:41:49,280 --> 01:41:51,679
possibly that you had

2646
01:41:51,679 --> 01:41:53,760
done some testing of dot and dough

2647
01:41:53,760 --> 01:41:56,080
resolvers to see whether to see how they

2648
01:41:56,080 --> 01:41:58,719
behaved um i was wondering whether you

2649
01:41:58,719 --> 01:42:00,320
had done enough of that to collect any

2650
01:42:00,320 --> 01:42:01,760
data whether you have any graphs for

2651
01:42:01,760 --> 01:42:03,760
that

2652
01:42:03,760 --> 01:42:06,880
i'm sorry like can you say lessons again

2653
01:42:06,880 --> 01:42:08,719
uh you said about um

2654
01:42:08,719 --> 01:42:11,760
don't resolve is that um

2655
01:42:11,760 --> 01:42:14,400
contacting them with um

2656
01:42:14,400 --> 01:42:16,239
uh do and cd

2657
01:42:16,239 --> 01:42:18,560
set um

2658
01:42:18,560 --> 01:42:20,480
was more successful did you actually did

2659
01:42:20,480 --> 01:42:22,480
you get enough data to produce any kind

2660
01:42:22,480 --> 01:42:24,320
of useful statistics on that do you have

2661
01:42:24,320 --> 01:42:25,920
any charts graphs or anything like that

2662
01:42:25,920 --> 01:42:28,639
to sort of like to be able to yeah no

2663
01:42:28,639 --> 01:42:30,560
that's viable yeah

2664
01:42:30,560 --> 01:42:32,239
yeah no what we did was basically we

2665
01:42:32,239 --> 01:42:33,119
only realized that this was an

2666
01:42:33,119 --> 01:42:34,639
interesting question at the very end and

2667
01:42:34,639 --> 01:42:36,639
so we just like connected from like one

2668
01:42:36,639 --> 01:42:38,239
of our machines to like like those nut

2669
01:42:38,239 --> 01:42:39,280
resolvers and check that they did it

2670
01:42:39,280 --> 01:42:40,960
correctly and our assumption is that

2671
01:42:40,960 --> 01:42:42,239
because dope protects the data in

2672
01:42:42,239 --> 01:42:44,159
transit or dot does um we don't have to

2673
01:42:44,159 --> 01:42:45,440
worry about whatever intermediates are

2674
01:42:45,440 --> 01:42:46,639
so the view from anywhere is as good as

2675
01:42:46,639 --> 01:42:48,560
the view from anywhere else so we just

2676
01:42:48,560 --> 01:42:50,800
we assume that like if cloudflare or

2677
01:42:50,800 --> 01:42:52,000
google does it correctly once they'll do

2678
01:42:52,000 --> 01:42:54,320
it correctly indefinitely so i i think

2679
01:42:54,320 --> 01:42:55,360
they're i don't think there's much

2680
01:42:55,360 --> 01:42:56,639
mercury on that but i'm not too worried

2681
01:42:56,639 --> 01:42:58,480
about that part of it sure i guess i

2682
01:42:58,480 --> 01:43:00,080
mostly meant from the perspective as i

2683
01:43:00,080 --> 01:43:01,280
think one of the previous questions

2684
01:43:01,280 --> 01:43:03,280
mentioned that potentially the issue

2685
01:43:03,280 --> 01:43:05,119
wasn't necessarily the resolver that

2686
01:43:05,119 --> 01:43:07,440
you're talking to but the middle box is

2687
01:43:07,440 --> 01:43:10,239
in the way or sort of um right cpe

2688
01:43:10,239 --> 01:43:12,159
equipment at home

2689
01:43:12,159 --> 01:43:13,920
environments right whether something was

2690
01:43:13,920 --> 01:43:15,520
mangling the traffic on the way there

2691
01:43:15,520 --> 01:43:16,639
and back

2692
01:43:16,639 --> 01:43:20,320
um and like i mean obviously

2693
01:43:20,560 --> 01:43:22,159
right but doe and dot will bypass all

2694
01:43:22,159 --> 01:43:23,760
those mechanisms so we assume it'll be

2695
01:43:23,760 --> 01:43:25,679
cool

2696
01:43:25,679 --> 01:43:26,719
yeah it would just be nice to see

2697
01:43:26,719 --> 01:43:28,480
numbers but yeah i think you haven't got

2698
01:43:28,480 --> 01:43:29,920
them you don't have them yeah they

2699
01:43:29,920 --> 01:43:30,960
wouldn't have it

2700
01:43:30,960 --> 01:43:33,280
thanks

2701
01:43:34,239 --> 01:43:36,880
uh victor mccartney google uh thanks for

2702
01:43:36,880 --> 01:43:38,639
doing this it's good to see these things

2703
01:43:38,639 --> 01:43:40,880
updated again uh and would be good to

2704
01:43:40,880 --> 01:43:43,040
see in the future after some time it's

2705
01:43:43,040 --> 01:43:44,639
often we end up quoting things that are

2706
01:43:44,639 --> 01:43:46,880
five to ten years old so excellent thank

2707
01:43:46,880 --> 01:43:47,679
you

2708
01:43:47,679 --> 01:43:48,560
um

2709
01:43:48,560 --> 01:43:50,639
i was curious whether you've anonymized

2710
01:43:50,639 --> 01:43:52,639
the sources to a degree that might make

2711
01:43:52,639 --> 01:43:54,320
it difficult to

2712
01:43:54,320 --> 01:43:58,080
break this down by goip or s numbers or

2713
01:43:58,080 --> 01:44:00,800
whatever it would be nice to see how the

2714
01:44:00,800 --> 01:44:03,199
situation varies across the globe yeah

2715
01:44:03,199 --> 01:44:05,440
we do have that data um that's in that

2716
01:44:05,440 --> 01:44:07,360
some of that's in the paper um

2717
01:44:07,360 --> 01:44:09,840
uh but from memory um it is

2718
01:44:09,840 --> 01:44:11,199
substantially

2719
01:44:11,199 --> 01:44:13,119
um the u.s and europe or like

2720
01:44:13,119 --> 01:44:14,400
substantially some of american europe

2721
01:44:14,400 --> 01:44:16,239
substantially similar and china and

2722
01:44:16,239 --> 01:44:18,639
india are substantially worse um and

2723
01:44:18,639 --> 01:44:20,320
especially worse for like the

2724
01:44:20,320 --> 01:44:22,239
non-standard things but that data is in

2725
01:44:22,239 --> 01:44:24,080
the paper and i'm um i think we have it

2726
01:44:24,080 --> 01:44:25,520
we have it by

2727
01:44:25,520 --> 01:44:28,560
if i recall isp nas so like if the other

2728
01:44:28,560 --> 01:44:29,760
analysis people that are interesting we

2729
01:44:29,760 --> 01:44:31,520
could probably run them

2730
01:44:31,520 --> 01:44:32,880
hi kendricks

2731
01:44:32,880 --> 01:44:36,719
did you do plain eating s query

2732
01:44:36,719 --> 01:44:38,800
no i know if flag bit said

2733
01:44:38,800 --> 01:44:41,440
beyond if i recall i i could i can like

2734
01:44:41,440 --> 01:44:43,280
check this for you but if i recall we

2735
01:44:43,280 --> 01:44:45,679
set all the we said all we always set um

2736
01:44:45,679 --> 01:44:47,520
the edns uh

2737
01:44:47,520 --> 01:44:50,719
um uh you know um max record size for

2738
01:44:50,719 --> 01:44:52,000
all the queries

2739
01:44:52,000 --> 01:44:52,880
um

2740
01:44:52,880 --> 01:44:54,960
and like and that's one of the reasons

2741
01:44:54,960 --> 01:44:56,639
we think it may be worse for the uh for

2742
01:44:56,639 --> 01:44:58,320
the baseline query

2743
01:44:58,320 --> 01:45:00,320
um i can share um

2744
01:45:00,320 --> 01:45:02,639
uh um the code the code for like doing

2745
01:45:02,639 --> 01:45:05,360
this is in a firefox extension so um if

2746
01:45:05,360 --> 01:45:07,199
um so i can share that with you yeah

2747
01:45:07,199 --> 01:45:09,119
yeah um

2748
01:45:09,119 --> 01:45:13,920
home cpu devices are notoriously bad

2749
01:45:14,000 --> 01:45:15,760
at everything sorry can you get closer

2750
01:45:15,760 --> 01:45:16,880
because i'm hearing a lot of stuff from

2751
01:45:16,880 --> 01:45:19,920
there home cpu devices are notoriously

2752
01:45:19,920 --> 01:45:22,400
bad at doing dns properly yeah yeah

2753
01:45:22,400 --> 01:45:24,480
exactly and i think so i mean our our in

2754
01:45:24,480 --> 01:45:25,840
here our assumption is this is like

2755
01:45:25,840 --> 01:45:27,840
largely broken home devices um but of

2756
01:45:27,840 --> 01:45:29,679
course we have to we have to go to like

2757
01:45:29,679 --> 01:45:31,040
war with the home devices we have

2758
01:45:31,040 --> 01:45:33,519
basically

2759
01:45:34,000 --> 01:45:35,840
uh daniel khan gilmore thanks for doing

2760
01:45:35,840 --> 01:45:37,600
this work and thanks for publishing it

2761
01:45:37,600 --> 01:45:38,800
um

2762
01:45:38,800 --> 01:45:40,960
it uh so one thing is just it would be

2763
01:45:40,960 --> 01:45:42,800
nice to see the breakdown of failure

2764
01:45:42,800 --> 01:45:45,199
rates by actual size of the packets we

2765
01:45:45,199 --> 01:45:46,800
have that okay

2766
01:45:46,800 --> 01:45:49,520
um and then because the size does seem

2767
01:45:49,520 --> 01:45:51,920
like it's a likely a likely failure yeah

2768
01:45:51,920 --> 01:45:53,520
so i mean we don't have like a linear

2769
01:45:53,520 --> 01:45:54,800
you know we don't have a linear but yeah

2770
01:45:54,800 --> 01:45:56,159
we could give you a scatter plot

2771
01:45:56,159 --> 01:45:58,719
basically um um i think what you and i

2772
01:45:58,719 --> 01:46:00,480
assume you mean the size of the expected

2773
01:46:00,480 --> 01:46:01,920
packet as opposed to the size of receive

2774
01:46:01,920 --> 01:46:03,920
packet uh yeah though i'd be interested

2775
01:46:03,920 --> 01:46:05,520
in both because we have we have that too

2776
01:46:05,520 --> 01:46:07,119
i mean it's like basically when we saw

2777
01:46:07,119 --> 01:46:07,920
like

2778
01:46:07,920 --> 01:46:09,679
like you know

2779
01:46:09,679 --> 01:46:11,199
like all the analysis is errors right

2780
01:46:11,199 --> 01:46:12,400
but when i first started looking at this

2781
01:46:12,400 --> 01:46:13,840
i was like shocked at how high the rates

2782
01:46:13,840 --> 01:46:15,199
were and so i spent some time like are

2783
01:46:15,199 --> 01:46:16,400
we really i just like our parts are

2784
01:46:16,400 --> 01:46:17,920
screwed up right and so like i went and

2785
01:46:17,920 --> 01:46:19,360
looked like binned out how big things

2786
01:46:19,360 --> 01:46:20,880
were and a lot of cases things are way

2787
01:46:20,880 --> 01:46:22,480
too too small to contain the record and

2788
01:46:22,480 --> 01:46:24,080
that's what persuaded me these days is

2789
01:46:24,080 --> 01:46:26,880
substantively correct um so yeah so we

2790
01:46:26,880 --> 01:46:28,400
have all the information um

2791
01:46:28,400 --> 01:46:30,400
uh let me see what i can do to to add

2792
01:46:30,400 --> 01:46:31,760
that to the paper yeah that would that

2793
01:46:31,760 --> 01:46:33,040
would be super useful and then the

2794
01:46:33,040 --> 01:46:34,400
second thing is just this observation

2795
01:46:34,400 --> 01:46:36,000
that you know

2796
01:46:36,000 --> 01:46:38,560
the network is filled with garbage and

2797
01:46:38,560 --> 01:46:40,480
uh you're helping to demonstrate that

2798
01:46:40,480 --> 01:46:42,960
here and i think we as the

2799
01:46:42,960 --> 01:46:44,960
as a community who's thinking about how

2800
01:46:44,960 --> 01:46:46,320
we evolve the networking to think about

2801
01:46:46,320 --> 01:46:48,480
what we do about that right we can't

2802
01:46:48,480 --> 01:46:50,880
remove all of the cpe equipment

2803
01:46:50,880 --> 01:46:52,560
but if we're writing the software that's

2804
01:46:52,560 --> 01:46:54,800
running on the client we can say

2805
01:46:54,800 --> 01:46:56,560
if your local network has these kind of

2806
01:46:56,560 --> 01:46:58,400
failures then we will do something else

2807
01:46:58,400 --> 01:46:59,760
and i think it's worth looking at this

2808
01:46:59,760 --> 01:47:01,040
and saying hey

2809
01:47:01,040 --> 01:47:03,119
encrypted transports are

2810
01:47:03,119 --> 01:47:05,119
both more privacy preserving

2811
01:47:05,119 --> 01:47:08,239
and uh more capable and we should start

2812
01:47:08,239 --> 01:47:09,760
ignoring the garbage parts of the

2813
01:47:09,760 --> 01:47:12,880
network to do that i just think you know

2814
01:47:12,880 --> 01:47:14,639
that we should we should send that

2815
01:47:14,639 --> 01:47:16,880
signal as clear as possible

2816
01:47:16,880 --> 01:47:18,159
you will you will be taking my support

2817
01:47:18,159 --> 01:47:21,480
calls right

2818
01:47:22,960 --> 01:47:26,480
so west vertigo rfc 8027 actually is the

2819
01:47:26,480 --> 01:47:28,480
dnsec roadblock avoidance document that

2820
01:47:28,480 --> 01:47:30,320
talks about this type of stuff and talks

2821
01:47:30,320 --> 01:47:31,760
about you know it would have been neat

2822
01:47:31,760 --> 01:47:33,440
if you had the chart of like how many

2823
01:47:33,440 --> 01:47:34,560
resolvers

2824
01:47:34,560 --> 01:47:35,840
fell into the different categories

2825
01:47:35,840 --> 01:47:37,040
because one of the things we did is

2826
01:47:37,040 --> 01:47:38,960
outline tests for all the things you

2827
01:47:38,960 --> 01:47:40,080
need to do

2828
01:47:40,080 --> 01:47:42,239
you know to get a dns compliant sort of

2829
01:47:42,239 --> 01:47:43,840
resolver in front of you and to know

2830
01:47:43,840 --> 01:47:45,360
when you don't so that you can make

2831
01:47:45,360 --> 01:47:46,880
appropriate decisions or at least know

2832
01:47:46,880 --> 01:47:48,159
when you're being you know attacked in

2833
01:47:48,159 --> 01:47:49,360
some way but

2834
01:47:49,360 --> 01:47:50,560
one of the things that we talk about

2835
01:47:50,560 --> 01:47:52,000
that document is you know if you don't

2836
01:47:52,000 --> 01:47:53,679
have one then you can fall back to doing

2837
01:47:53,679 --> 01:47:55,280
it yourself that's of course more ugly

2838
01:47:55,280 --> 01:47:56,639
and you don't get caching benefits and

2839
01:47:56,639 --> 01:47:58,560
all that other kind of stuff

2840
01:47:58,560 --> 01:47:59,920
but it would be interesting to do that

2841
01:47:59,920 --> 01:48:01,920
analysis and then finally i'll note that

2842
01:48:01,920 --> 01:48:03,600
your table is missing one important

2843
01:48:03,600 --> 01:48:05,600
record that you should have queried for

2844
01:48:05,600 --> 01:48:09,199
which is diaz or erseg oh um because you

2845
01:48:09,199 --> 01:48:11,520
actually can do that so i have so i have

2846
01:48:11,520 --> 01:48:13,440
so okay so like i am now about to like

2847
01:48:13,440 --> 01:48:15,360
where are my skis um we do have that

2848
01:48:15,360 --> 01:48:18,000
data okay um we took it out of the table

2849
01:48:18,000 --> 01:48:19,360
because the failure rate was extremely

2850
01:48:19,360 --> 01:48:22,080
high and then we found um an rfc whose

2851
01:48:22,080 --> 01:48:23,920
number i cannot remember which would led

2852
01:48:23,920 --> 01:48:25,840
us to conclude that the rsa query was

2853
01:48:25,840 --> 01:48:28,400
not supposed to work and um i can find a

2854
01:48:28,400 --> 01:48:29,920
link for you um

2855
01:48:29,920 --> 01:48:31,199
um and then and then i'll and you

2856
01:48:31,199 --> 01:48:33,040
explain why i'm right now

2857
01:48:33,040 --> 01:48:33,920
i don't care whether they're supposed to

2858
01:48:33,920 --> 01:48:35,280
or not i will say that the ietf

2859
01:48:35,280 --> 01:48:37,440
resolvers do allow okay yeah and so so

2860
01:48:37,440 --> 01:48:39,040
we came to the conclusion that the itf

2861
01:48:39,040 --> 01:48:40,159
thought that wasn't supposed to work

2862
01:48:40,159 --> 01:48:42,239
sure and so if i'm wrong like we have

2863
01:48:42,239 --> 01:48:43,679
the data we'll put it right back in um

2864
01:48:43,679 --> 01:48:45,840
the one we're actually missing is ds

2865
01:48:45,840 --> 01:48:47,119
and we just forgot is basically the

2866
01:48:47,119 --> 01:48:48,400
answer all right well thank you for

2867
01:48:48,400 --> 01:48:49,840
doing the work because it is

2868
01:48:49,840 --> 01:48:51,520
interestingly and depressing to look at

2869
01:48:51,520 --> 01:48:53,679
so

2870
01:48:54,320 --> 01:48:57,119
thank you yeah just very short comment

2871
01:48:57,119 --> 01:48:58,880
yeah very short comment yes our sig

2872
01:48:58,880 --> 01:49:00,800
isn't really supposed to work okay great

2873
01:49:00,800 --> 01:49:02,800
thank you um so people have my email

2874
01:49:02,800 --> 01:49:04,400
address um if you want to talk more

2875
01:49:04,400 --> 01:49:05,840
about this and you have questions um you

2876
01:49:05,840 --> 01:49:07,360
know please reach out to me um if you

2877
01:49:07,360 --> 01:49:08,639
think i've screwed something up and i

2878
01:49:08,639 --> 01:49:10,000
think and like this is just me wrong

2879
01:49:10,000 --> 01:49:11,199
please tell me i'd rather i know now

2880
01:49:11,199 --> 01:49:13,199
than otherwise um and if there's other

2881
01:49:13,199 --> 01:49:14,320
things like maybe i could get out this

2882
01:49:14,320 --> 01:49:15,920
data would help you please let me know

2883
01:49:15,920 --> 01:49:17,199
but thank you for listening i appreciate

2884
01:49:17,199 --> 01:49:19,920
it yeah and thank you for sharing this

2885
01:49:19,920 --> 01:49:21,599
okay thank you

2886
01:49:21,599 --> 01:49:24,800
so we come to the last agenda item uh

2887
01:49:24,800 --> 01:49:26,800
peter thomason please

2888
01:49:26,800 --> 01:49:29,800
come

2889
01:49:32,480 --> 01:49:35,480
let's

2890
01:49:42,960 --> 01:49:45,280
all right hi it's peter thomason from d6

2891
01:49:45,280 --> 01:49:46,880
so it seems like i'm getting 11 minutes

2892
01:49:46,880 --> 01:49:49,520
to talk about my two and a half slides

2893
01:49:49,520 --> 01:49:52,320
um but perhaps it'll be quicker so um

2894
01:49:52,320 --> 01:49:55,199
you all i guess know rfc 7344 which is

2895
01:49:55,199 --> 01:49:58,000
cds cdns key records for

2896
01:49:58,000 --> 01:49:59,679
announcing um

2897
01:49:59,679 --> 01:50:00,560
your

2898
01:50:00,560 --> 01:50:03,119
bs parameters in the child zone

2899
01:50:03,119 --> 01:50:05,119
and the parent can query that stuff and

2900
01:50:05,119 --> 01:50:07,520
then for example use it for rolling over

2901
01:50:07,520 --> 01:50:09,440
the s records when you do

2902
01:50:09,440 --> 01:50:12,320
let's say key change or also for

2903
01:50:12,320 --> 01:50:15,599
onboarding dns seg for a zone

2904
01:50:15,599 --> 01:50:16,800
and while working with this in the

2905
01:50:16,800 --> 01:50:19,840
context of bootstrapping dnsec

2906
01:50:19,840 --> 01:50:21,440
i encountered

2907
01:50:21,440 --> 01:50:22,400
let's say

2908
01:50:22,400 --> 01:50:23,679
an interesting situation that i wanted

2909
01:50:23,679 --> 01:50:24,800
to point out and i think it needs

2910
01:50:24,800 --> 01:50:26,560
correction in the rfc

2911
01:50:26,560 --> 01:50:29,000
um specifically the rfc

2912
01:50:29,000 --> 01:50:31,440
7344 doesn't specify how the parent

2913
01:50:31,440 --> 01:50:33,360
should be doing their poll queries to

2914
01:50:33,360 --> 01:50:36,400
retrieve the cds records from the child

2915
01:50:36,400 --> 01:50:37,360
and

2916
01:50:37,360 --> 01:50:41,040
that can cause a problem if um the cds

2917
01:50:41,040 --> 01:50:43,360
or cdns key record set turn out

2918
01:50:43,360 --> 01:50:45,280
inconsistent across authoritative name

2919
01:50:45,280 --> 01:50:47,280
servers for a given zone

2920
01:50:47,280 --> 01:50:49,599
um so let's say i don't know i'm the dot

2921
01:50:49,599 --> 01:50:53,280
de registry for example i'm querying cds

2922
01:50:53,280 --> 01:50:54,960
records for peter thomason dot de and

2923
01:50:54,960 --> 01:50:56,719
then what to do if that's different on

2924
01:50:56,719 --> 01:50:58,800
one name server and on another name

2925
01:50:58,800 --> 01:50:59,920
server

2926
01:50:59,920 --> 01:51:01,520
you can say whatever it's endorsed by

2927
01:51:01,520 --> 01:51:03,760
the dns operator so who cares it'll be

2928
01:51:03,760 --> 01:51:05,920
right one way or the other and it didn't

2929
01:51:05,920 --> 01:51:07,599
and it isn't

2930
01:51:07,599 --> 01:51:08,960
sorry and if it isn't it's going to be

2931
01:51:08,960 --> 01:51:10,639
the fault of the dns operator but that

2932
01:51:10,639 --> 01:51:12,239
is not entirely true in multi-homing

2933
01:51:12,239 --> 01:51:13,920
setups where i think

2934
01:51:13,920 --> 01:51:16,400
this is a specifically a severe problem

2935
01:51:16,400 --> 01:51:18,880
because it may lead to one provider in a

2936
01:51:18,880 --> 01:51:20,639
multi-signer setup

2937
01:51:20,639 --> 01:51:22,639
and to be able to unilaterally roll the

2938
01:51:22,639 --> 01:51:25,040
ds record set with intention or without

2939
01:51:25,040 --> 01:51:26,000
intention

2940
01:51:26,000 --> 01:51:27,599
i think for example a typical problem

2941
01:51:27,599 --> 01:51:30,239
could be that there is multi-homing

2942
01:51:30,239 --> 01:51:32,800
let's say at ns1 and cloudflare for

2943
01:51:32,800 --> 01:51:35,040
example both of them do signing and now

2944
01:51:35,040 --> 01:51:37,040
she's announced these are

2945
01:51:37,040 --> 01:51:38,800
announce each other's keys and there's

2946
01:51:38,800 --> 01:51:40,560
going to be automation for this and rfc

2947
01:51:40,560 --> 01:51:41,840
drafts going on and all of that so

2948
01:51:41,840 --> 01:51:42,960
that's going to be more common in the

2949
01:51:42,960 --> 01:51:45,199
future perhaps and let's say now one of

2950
01:51:45,199 --> 01:51:47,199
the providers rolls a key and publishes

2951
01:51:47,199 --> 01:51:49,360
new cds records and at that point

2952
01:51:49,360 --> 01:51:51,599
forgets to publish the other operators

2953
01:51:51,599 --> 01:51:53,599
cbs records and then the parent comes

2954
01:51:53,599 --> 01:51:54,800
queries that

2955
01:51:54,800 --> 01:51:56,880
ends up only retrieving

2956
01:51:56,880 --> 01:51:58,639
one part of it essentially rolling the

2957
01:51:58,639 --> 01:52:00,400
ds record set and then the zone is

2958
01:52:00,400 --> 01:52:02,320
broken the delegation broken because the

2959
01:52:02,320 --> 01:52:03,679
keys of the other provider are going to

2960
01:52:03,679 --> 01:52:04,800
be missing

2961
01:52:04,800 --> 01:52:06,719
and that's

2962
01:52:06,719 --> 01:52:08,480
like a problem if it occurs but also

2963
01:52:08,480 --> 01:52:10,560
conceptually a single provider shouldn't

2964
01:52:10,560 --> 01:52:12,800
be in the position to be able

2965
01:52:12,800 --> 01:52:15,280
to remove another provider's

2966
01:52:15,280 --> 01:52:16,639
trust anchors so i think this needs

2967
01:52:16,639 --> 01:52:17,760
correction

2968
01:52:17,760 --> 01:52:20,080
and this is the first of two slides and

2969
01:52:20,080 --> 01:52:21,280
the second slide which we're going to

2970
01:52:21,280 --> 01:52:22,239
now

2971
01:52:22,239 --> 01:52:23,679
um has the

2972
01:52:23,679 --> 01:52:25,280
proposed solution

2973
01:52:25,280 --> 01:52:27,119
so i think would be nice to have a short

2974
01:52:27,119 --> 01:52:28,960
document that clarifies that if you're

2975
01:52:28,960 --> 01:52:30,880
querying as a parent

2976
01:52:30,880 --> 01:52:32,560
these records from the child you need to

2977
01:52:32,560 --> 01:52:34,480
query them across all of the name

2978
01:52:34,480 --> 01:52:37,440
servers and may only act upon them if

2979
01:52:37,440 --> 01:52:39,119
they are consistent so the proposed

2980
01:52:39,119 --> 01:52:40,560
wording here which is in the draft i

2981
01:52:40,560 --> 01:52:41,840
uploaded

2982
01:52:41,840 --> 01:52:43,520
it's an individual draft

2983
01:52:43,520 --> 01:52:45,520
it says that the parental agent who

2984
01:52:45,520 --> 01:52:47,199
knows the child zone name and the ns

2985
01:52:47,199 --> 01:52:49,119
host names authoritatively because they

2986
01:52:49,119 --> 01:52:50,320
are the parent

2987
01:52:50,320 --> 01:52:52,000
must ascertain that queries are made

2988
01:52:52,000 --> 01:52:53,520
against all of the name servers listed

2989
01:52:53,520 --> 01:52:55,520
in the delegation and ensure that the

2990
01:52:55,520 --> 01:52:58,320
set of reference keys is equal and then

2991
01:52:58,320 --> 01:52:59,840
in other words

2992
01:52:59,840 --> 01:53:00,719
when

2993
01:53:00,719 --> 01:53:02,719
a cds or cdns record said it's returned

2994
01:53:02,719 --> 01:53:04,560
by one name server but not referenced in

2995
01:53:04,560 --> 01:53:06,719
the corresponding answers of another

2996
01:53:06,719 --> 01:53:08,320
then it that situation must be

2997
01:53:08,320 --> 01:53:10,639
considered inconsistent and if such

2998
01:53:10,639 --> 01:53:12,719
inconsistency occurs then the parent

2999
01:53:12,719 --> 01:53:14,960
must take no action specifically not

3000
01:53:14,960 --> 01:53:17,280
delete or alter the existing

3001
01:53:17,280 --> 01:53:20,800
ds record set so um i'm happy to discuss

3002
01:53:20,800 --> 01:53:22,960
what people think about this and if you

3003
01:53:22,960 --> 01:53:24,480
think it's a good idea

3004
01:53:24,480 --> 01:53:26,639
perhaps we can work towards advancing

3005
01:53:26,639 --> 01:53:28,239
this some way

3006
01:53:28,239 --> 01:53:29,760
okay

3007
01:53:29,760 --> 01:53:30,880
thank you

3008
01:53:30,880 --> 01:53:33,119
mark

3009
01:53:33,199 --> 01:53:36,199
um

3010
01:53:39,760 --> 01:53:42,159
let's see

3011
01:53:42,719 --> 01:53:44,000
you've got a

3012
01:53:44,000 --> 01:53:45,840
one place you've got a denial of service

3013
01:53:45,840 --> 01:53:47,599
attack if you require i come a bit

3014
01:53:47,599 --> 01:53:49,040
closer and i have a return hearing mark

3015
01:53:49,040 --> 01:53:50,080
andrews

3016
01:53:50,080 --> 01:53:52,159
you you've got a potential denial of

3017
01:53:52,159 --> 01:53:55,840
service attack if you require every ns

3018
01:53:55,840 --> 01:53:58,239
to return the same ds records

3019
01:53:58,239 --> 01:54:00,639
all you need is a machine that's down

3020
01:54:00,639 --> 01:54:02,480
and you can't correct

3021
01:54:02,480 --> 01:54:05,040
you can't recover from that

3022
01:54:05,040 --> 01:54:06,840
using a rollover

3023
01:54:06,840 --> 01:54:09,520
and in reality

3024
01:54:09,520 --> 01:54:11,599
ds records are no different to any other

3025
01:54:11,599 --> 01:54:12,960
ara type

3026
01:54:12,960 --> 01:54:14,800
if you're

3027
01:54:14,800 --> 01:54:16,080
dns

3028
01:54:16,080 --> 01:54:17,679
if you're modeling home and one of them

3029
01:54:17,679 --> 01:54:20,400
does something to the zone

3030
01:54:20,400 --> 01:54:22,320
the s records aren't really any

3031
01:54:22,320 --> 01:54:24,719
different to any other record type that

3032
01:54:24,719 --> 01:54:27,119
can potentially be served

3033
01:54:27,119 --> 01:54:28,480
what's the difference you've got to

3034
01:54:28,480 --> 01:54:30,480
trust this you're here

3035
01:54:30,480 --> 01:54:31,760
you've got to trust to the operators

3036
01:54:31,760 --> 01:54:34,320
that are signing the zone for you with

3037
01:54:34,320 --> 01:54:36,560
when you've got a multi-sign that

3038
01:54:36,560 --> 01:54:39,360
when you're running more designer

3039
01:54:39,360 --> 01:54:41,598
so

3040
01:54:41,920 --> 01:54:45,760
i really don't see the need for this

3041
01:54:46,320 --> 01:54:48,320
okay so so my opinion on this is that of

3042
01:54:48,320 --> 01:54:49,840
course

3043
01:54:49,840 --> 01:54:51,920
it's just records like any other and if

3044
01:54:51,920 --> 01:54:53,520
you serve two different a records that's

3045
01:54:53,520 --> 01:54:54,560
fine

3046
01:54:54,560 --> 01:54:56,560
the proposal is not imposing any

3047
01:54:56,560 --> 01:54:58,639
restrictions on how to publish cds

3048
01:54:58,639 --> 01:55:01,119
records you may publish inconsistent cbs

3049
01:55:01,119 --> 01:55:02,639
records if you like

3050
01:55:02,639 --> 01:55:04,960
the proposal is an instruction to the

3051
01:55:04,960 --> 01:55:06,000
parent

3052
01:55:06,000 --> 01:55:08,800
um whether to act in a situation that is

3053
01:55:08,800 --> 01:55:10,880
known to be inconsistent and i think the

3054
01:55:10,880 --> 01:55:12,880
first time this goes wrong for a large

3055
01:55:12,880 --> 01:55:14,560
domain

3056
01:55:14,560 --> 01:55:18,159
we better want that provision

3057
01:55:18,159 --> 01:55:19,360
uh

3058
01:55:19,360 --> 01:55:21,520
i think my concern this victory covenant

3059
01:55:21,520 --> 01:55:24,080
google uh my concern is similar to marx

3060
01:55:24,080 --> 01:55:25,679
uh there are

3061
01:55:25,679 --> 01:55:27,679
probably i think non-uncommon hidden

3062
01:55:27,679 --> 01:55:30,719
masters that are listed in the ns record

3063
01:55:30,719 --> 01:55:32,960
uh to facilitate various kinds of

3064
01:55:32,960 --> 01:55:34,639
internal synchronizations but aren't

3065
01:55:34,639 --> 01:55:38,000
necessarily exposed to the outside world

3066
01:55:38,000 --> 01:55:40,400
such domains won't necessarily be able

3067
01:55:40,400 --> 01:55:41,679
to be reached

3068
01:55:41,679 --> 01:55:43,520
at every name server whether it's a good

3069
01:55:43,520 --> 01:55:45,440
idea to list the dead name servers or

3070
01:55:45,440 --> 01:55:47,280
not is a separate question

3071
01:55:47,280 --> 01:55:48,719
but i would expect it's not entirely

3072
01:55:48,719 --> 01:55:49,840
uncommon

3073
01:55:49,840 --> 01:55:52,239
uh and also of course if the only name

3074
01:55:52,239 --> 01:55:54,480
server with the private key

3075
01:55:54,480 --> 01:55:55,679
you know

3076
01:55:55,679 --> 01:55:58,159
fails and you need to do an emergency

3077
01:55:58,159 --> 01:56:00,560
role and tolerate the outage you know

3078
01:56:00,560 --> 01:56:01,599
whatever

3079
01:56:01,599 --> 01:56:02,400
uh

3080
01:56:02,400 --> 01:56:05,520
then again uh you can be stuck as as

3081
01:56:05,520 --> 01:56:08,719
mark indicated so requiring every single

3082
01:56:08,719 --> 01:56:11,440
one is sounds a little risky uh this

3083
01:56:11,440 --> 01:56:14,320
needs some thought

3084
01:56:14,320 --> 01:56:16,639
okay i think that's a fair point

3085
01:56:16,639 --> 01:56:18,960
um so perhaps the

3086
01:56:18,960 --> 01:56:20,320
wording could be

3087
01:56:20,320 --> 01:56:23,520
amended so that it's fine if

3088
01:56:23,520 --> 01:56:25,599
an m server does not return any cds or

3089
01:56:25,599 --> 01:56:27,679
cdns key records with a proof of

3090
01:56:27,679 --> 01:56:29,920
non-existence of course but those that

3091
01:56:29,920 --> 01:56:30,800
do

3092
01:56:30,800 --> 01:56:32,560
i believe should be consistent because

3093
01:56:32,560 --> 01:56:33,840
otherwise

3094
01:56:33,840 --> 01:56:35,520
how do we address the

3095
01:56:35,520 --> 01:56:36,880
concern that one provider is

3096
01:56:36,880 --> 01:56:41,000
accidentally screwing it up

3097
01:56:42,080 --> 01:56:43,440
schwartz

3098
01:56:43,440 --> 01:56:45,520
it looks to me like there's a missing

3099
01:56:45,520 --> 01:56:48,639
time constant here i'm missing what time

3100
01:56:48,639 --> 01:56:49,920
constant

3101
01:56:49,920 --> 01:56:51,119
because

3102
01:56:51,119 --> 01:56:54,000
normally the ttl i guess tells the

3103
01:56:54,000 --> 01:56:56,400
parent how often it needs to recheck the

3104
01:56:56,400 --> 01:56:58,000
cds

3105
01:56:58,000 --> 01:56:59,199
but

3106
01:56:59,199 --> 01:57:02,960
uh if you checked and the answer is that

3107
01:57:02,960 --> 01:57:05,280
the cds is in an inconsistent state when

3108
01:57:05,280 --> 01:57:06,719
do i recheck

3109
01:57:06,719 --> 01:57:08,960
how often how often do i repeat this

3110
01:57:08,960 --> 01:57:11,840
check

3111
01:57:12,080 --> 01:57:14,480
so in the current specification

3112
01:57:14,480 --> 01:57:16,800
the cds ttl does not

3113
01:57:16,800 --> 01:57:19,920
impose any schedule on the rechecking

3114
01:57:19,920 --> 01:57:21,599
it's completely up to the parent what to

3115
01:57:21,599 --> 01:57:23,840
do and i believe there is no registry i

3116
01:57:23,840 --> 01:57:25,679
mean there's a bunch to implement the

3117
01:57:25,679 --> 01:57:27,760
scanning i think seven or eight but i

3118
01:57:27,760 --> 01:57:30,080
think they all do it daily regardless of

3119
01:57:30,080 --> 01:57:31,360
ttl

3120
01:57:31,360 --> 01:57:33,280
so yes it could be done through the ttl

3121
01:57:33,280 --> 01:57:35,679
but i think it isn't

3122
01:57:35,679 --> 01:57:37,440
okay

3123
01:57:37,440 --> 01:57:39,040
that's interesting

3124
01:57:39,040 --> 01:57:41,440
but uh even given that

3125
01:57:41,440 --> 01:57:43,199
i don't think that we would want the

3126
01:57:43,199 --> 01:57:44,880
result of this to be well we'll try

3127
01:57:44,880 --> 01:57:47,119
again tomorrow

3128
01:57:47,119 --> 01:57:48,159
uh

3129
01:57:48,159 --> 01:57:50,080
if you're if you're trying to execute a

3130
01:57:50,080 --> 01:57:53,199
transition like this uh

3131
01:57:53,199 --> 01:57:54,320
you know

3132
01:57:54,320 --> 01:57:56,080
an additional 20 you know checking once

3133
01:57:56,080 --> 01:57:58,159
every 24 hours it could be a very long

3134
01:57:58,159 --> 01:58:00,000
time before you get the

3135
01:58:00,000 --> 01:58:01,840
you know you get into the right state

3136
01:58:01,840 --> 01:58:03,119
again

3137
01:58:03,119 --> 01:58:05,599
uh so i think you you might consider you

3138
01:58:05,599 --> 01:58:07,760
know putting in some time constants

3139
01:58:07,760 --> 01:58:09,599
recommending that you check back in five

3140
01:58:09,599 --> 01:58:11,360
minutes to see if

3141
01:58:11,360 --> 01:58:12,800
in case you happen to be right in the

3142
01:58:12,800 --> 01:58:15,119
middle of a transition

3143
01:58:15,119 --> 01:58:17,440
do you mean checking every whatever five

3144
01:58:17,440 --> 01:58:19,360
minutes for example in the case you

3145
01:58:19,360 --> 01:58:21,040
encounter such inconsistency or do you

3146
01:58:21,040 --> 01:58:23,360
mean in general to quickly catch cds

3147
01:58:23,360 --> 01:58:26,080
updates uh no i mean specifically in the

3148
01:58:26,080 --> 01:58:28,320
case of inconsistency

3149
01:58:28,320 --> 01:58:30,239
okay i understand

3150
01:58:30,239 --> 01:58:31,920
okay

3151
01:58:31,920 --> 01:58:34,159
thank you thank you peter for the

3152
01:58:34,159 --> 01:58:36,800
feedback from the audience

3153
01:58:36,800 --> 01:58:37,220
um

3154
01:58:37,220 --> 01:58:38,320
[Music]

3155
01:58:38,320 --> 01:58:41,199
that yeah i think we're done we're

3156
01:58:41,199 --> 01:58:44,000
perfectly in time we

3157
01:58:44,000 --> 01:58:46,239
completed the agenda including time

3158
01:58:46,239 --> 01:58:47,360
permitted

3159
01:58:47,360 --> 01:58:49,760
i would like to thank the the presenters

3160
01:58:49,760 --> 01:58:51,280
for presenting their drafts and their

3161
01:58:51,280 --> 01:58:52,239
work

3162
01:58:52,239 --> 01:58:53,920
and i also would like to thank the

3163
01:58:53,920 --> 01:58:55,440
participants in the room for

3164
01:58:55,440 --> 01:58:58,880
conservative discussions and feedback

3165
01:58:58,880 --> 01:59:00,239
we see each other

3166
01:59:00,239 --> 01:59:03,440
either at the next interim in september

3167
01:59:03,440 --> 01:59:06,639
or in november in london in person

3168
01:59:06,639 --> 01:59:10,080
any other final words uh suzanne

3169
01:59:10,080 --> 01:59:11,520
for those in the room it's great to see

3170
01:59:11,520 --> 01:59:12,880
you in real life

3171
01:59:12,880 --> 01:59:14,320
and for those

3172
01:59:14,320 --> 01:59:16,480
out in the remote out in the remote

3173
01:59:16,480 --> 01:59:18,320
wherever you are thank you also thank

3174
01:59:18,320 --> 01:59:21,199
you also for being here

3175
01:59:21,760 --> 01:59:26,119
and i guess that's a wrap thanks guys

3176
01:59:37,840 --> 01:59:42,040
i think we talked about it together

